From maechler at stat.math.ethz.ch  Wed Feb  1 09:14:20 2017
From: maechler at stat.math.ethz.ch (Martin Maechler)
Date: Wed, 1 Feb 2017 09:14:20 +0100
Subject: [Rd] Unexpected EOF in R-patched_2017-01-30
In-Reply-To: <CAL6gwnJW0vFVLrO8xmQdmZ648GUrgNECk+LsKJhZ3PR41g+S0Q@mail.gmail.com>
References: <CAL6gwnKsEuqyEKG+AdxC+skraNiqV7MB0PorEsvXrXWCzO-sEg@mail.gmail.com>
	<91204991-E540-4EE7-A895-6A31B1456091@gmail.com>
	<CAL6gwnJW0vFVLrO8xmQdmZ648GUrgNECk+LsKJhZ3PR41g+S0Q@mail.gmail.com>
Message-ID: <22673.39132.37207.958775@stat.math.ethz.ch>

>>>>> Avraham Adler <avraham.adler at gmail.com>
>>>>>     on Tue, 31 Jan 2017 16:07:20 -0500 writes:

    > On Tue, Jan 31, 2017 at 3:30 PM, peter dalgaard <pdalgd at gmail.com> wrote:
    >> 
    >>> On 31 Jan 2017, at 18:56 , Avraham Adler <avraham.adler at gmail.com> wrote:
    >>> 
    >>> Hello.
    >>> 
    >>> When trying to unpack today's version of R-patched,
    >> 
    >> From which source? The files from cran.r-project.org seems OK, both those in src/base-prerelease and those from ETHZ. 

    >> Also, is it not "tar -xfz" when reading a compressed file?

Recent (for several years) versions of tar (on Linux at least)
do not need the compression extension anymore: They guess it
correctly from the file.

    >> 
    >> -pd

    >> From <https://stat.ethz.ch/R/daily/>

The last two of the daily R-patched*.tar.gz
unpack flawlessly for me as well.

Could it be that your Windows(?) version of tar (or the file
system or ???) is the problem?

Or the file was corrupted during download?

Here are the md5sum s  from the server itself for the last three snapshots:

388b607afe732c92442dbb49845fe377  ..../ftp/R/R-patched_2017-01-31.tar.gz
7daea59067454311818df1c75971a485  ..../ftp/R/R-patched_2017-01-30.tar.gz
9ddad833a455973631920c70b6da5d6e  ..../ftp/R/R-patched_2017-01-29.tar.gz



    > Also, while passing z is not in the instructions given in Installation
    > and Administration [1], I tried passing -xzf and it did not work. I
    > believe f has to be last if the file name follows immediately.

    > [1]  <https://cran.r-project.org/doc/manuals/r-release/R-admin.html#Getting-the-source-files>

    > Thanks,

    > Avi

    >>> I get the following error:
    >>> 
    >>> C:\R>tar -xf R-patched_2017-01-30.tar.gz
    >>> 
    >>> gzip: stdin: unexpected end of file
    >>> tar: Unexpected EOF in archive
    >>> tar: Unexpected EOF in archive
    >>> tar: Error is not recoverable: exiting now
    >>> 
    >>> I got the same error for R-patched_2017-01-30.tar.gz but not for R-3.3.2.tar.gz.
    >>> 
    >>> Thank you,
    >>> 
    >>> Avi
    >>> 
    >>> ______________________________________________
    >>> R-devel at r-project.org mailing list
    >>> https://stat.ethz.ch/mailman/listinfo/r-devel
    >> 
    >> --
    >> Peter Dalgaard, Professor,
    >> Center for Statistics, Copenhagen Business School
    >> Solbjerg Plads 3, 2000 Frederiksberg, Denmark
    >> Phone: (+45)38153501
    >> Office: A 4.23
    >> Email: pd.mes at cbs.dk  Priv: PDalgd at gmail.com
    >> 

    > ______________________________________________
    > R-devel at r-project.org mailing list
    > https://stat.ethz.ch/mailman/listinfo/r-devel


From avraham.adler at gmail.com  Wed Feb  1 09:32:15 2017
From: avraham.adler at gmail.com (Avraham Adler)
Date: Wed, 1 Feb 2017 03:32:15 -0500
Subject: [Rd] Unexpected EOF in R-patched_2017-01-30
In-Reply-To: <22673.39132.37207.958775@stat.math.ethz.ch>
References: <CAL6gwnKsEuqyEKG+AdxC+skraNiqV7MB0PorEsvXrXWCzO-sEg@mail.gmail.com>
	<91204991-E540-4EE7-A895-6A31B1456091@gmail.com>
	<CAL6gwnJW0vFVLrO8xmQdmZ648GUrgNECk+LsKJhZ3PR41g+S0Q@mail.gmail.com>
	<22673.39132.37207.958775@stat.math.ethz.ch>
Message-ID: <CAL6gwnLArGErfYPTHke8wGMxWqkLk872nEvizC=urOHSurqSow@mail.gmail.com>

It worked for me at home but not at work. I will email my work the copy I
have at home. It could have been something with our connectivity or
firewall. My home copy of 1-31 is also 388b607afe732c92442dbb49845fe377.
I'll check the work ones tomorrow, or should I say later today.

Thank you,

Avi

On Wed, Feb 1, 2017 at 3:14 AM, Martin Maechler <maechler at stat.math.ethz.ch>
wrote:

> >>>>> Avraham Adler <avraham.adler at gmail.com>
> >>>>>     on Tue, 31 Jan 2017 16:07:20 -0500 writes:
>
>     > On Tue, Jan 31, 2017 at 3:30 PM, peter dalgaard <pdalgd at gmail.com>
> wrote:
>     >>
>     >>> On 31 Jan 2017, at 18:56 , Avraham Adler <avraham.adler at gmail.com>
> wrote:
>     >>>
>     >>> Hello.
>     >>>
>     >>> When trying to unpack today's version of R-patched,
>     >>
>     >> From which source? The files from cran.r-project.org seems OK,
> both those in src/base-prerelease and those from ETHZ.
>
>     >> Also, is it not "tar -xfz" when reading a compressed file?
>
> Recent (for several years) versions of tar (on Linux at least)
> do not need the compression extension anymore: They guess it
> correctly from the file.
>
>     >>
>     >> -pd
>
>     >> From <https://stat.ethz.ch/R/daily/>
>
> The last two of the daily R-patched*.tar.gz
> unpack flawlessly for me as well.
>
> Could it be that your Windows(?) version of tar (or the file
> system or ???) is the problem?
>
> Or the file was corrupted during download?
>
> Here are the md5sum s  from the server itself for the last three snapshots:
>
> 388b607afe732c92442dbb49845fe377  ..../ftp/R/R-patched_2017-01-31.tar.gz
> 7daea59067454311818df1c75971a485  ..../ftp/R/R-patched_2017-01-30.tar.gz
> 9ddad833a455973631920c70b6da5d6e  ..../ftp/R/R-patched_2017-01-29.tar.gz
>
>
>
>     > Also, while passing z is not in the instructions given in
> Installation
>     > and Administration [1], I tried passing -xzf and it did not work. I
>     > believe f has to be last if the file name follows immediately.
>
>     > [1]  <https://cran.r-project.org/doc/manuals/r-release/R-admin.
> html#Getting-the-source-files>
>
>     > Thanks,
>
>     > Avi
>
>     >>> I get the following error:
>     >>>
>     >>> C:\R>tar -xf R-patched_2017-01-30.tar.gz
>     >>>
>     >>> gzip: stdin: unexpected end of file
>     >>> tar: Unexpected EOF in archive
>     >>> tar: Unexpected EOF in archive
>     >>> tar: Error is not recoverable: exiting now
>     >>>
>     >>> I got the same error for R-patched_2017-01-30.tar.gz but not for
> R-3.3.2.tar.gz.
>     >>>
>     >>> Thank you,
>     >>>
>     >>> Avi
>     >>>
>     >>> ______________________________________________
>     >>> R-devel at r-project.org mailing list
>     >>> https://stat.ethz.ch/mailman/listinfo/r-devel
>     >>
>     >> --
>     >> Peter Dalgaard, Professor,
>     >> Center for Statistics, Copenhagen Business School
>     >> Solbjerg Plads 3, 2000 Frederiksberg, Denmark
>     >> Phone: (+45)38153501
>     >> Office: A 4.23
>     >> Email: pd.mes at cbs.dk  Priv: PDalgd at gmail.com
>     >>
>
>     > ______________________________________________
>     > R-devel at r-project.org mailing list
>     > https://stat.ethz.ch/mailman/listinfo/r-devel
>

	[[alternative HTML version deleted]]


From mikko.korpela at helsinki.fi  Wed Feb  1 11:16:49 2017
From: mikko.korpela at helsinki.fi (Mikko Korpela)
Date: Wed, 1 Feb 2017 12:16:49 +0200
Subject: [Rd] Typos in manuals
Message-ID: <c8543980-3aed-c511-19f0-eeb6e9cfbe10@helsinki.fi>

I found some trivial typos, mostly unmatched parentheses, in the R 
manuals. More information and suggested fixes are in the attached diff file.


-- 
Mikko Korpela
Department of Geosciences and Geography
University of Helsinki
-------------- next part --------------
A non-text attachment was scrubbed...
Name: manuals.diff
Type: text/x-patch
Size: 9226 bytes
Desc: not available
URL: <https://stat.ethz.ch/pipermail/r-devel/attachments/20170201/f3212012/attachment.bin>

From suharto_anggono at yahoo.com  Wed Feb  1 17:17:06 2017
From: suharto_anggono at yahoo.com (Suharto Anggono Suharto Anggono)
Date: Wed, 1 Feb 2017 16:17:06 +0000 (UTC)
Subject: [Rd] RFC: tapply(*, ..., init.value = NA)
References: <1385208661.3566769.1485965826307.ref@mail.yahoo.com>
Message-ID: <1385208661.3566769.1485965826307@mail.yahoo.com>

On 'aggregate data.frame', the URL should be https://stat.ethz.ch/pipermail/r-help/2016-May/438631.html .

vector(typeof(ans))
(or  vector(storage.mode(ans)))
has length zero and can be used to initialize array.

Instead of
if(missing(default)) ,
if(identical(default, NA))
could be used. The documentation could then say, for example: "If default = NA (the default), NA of appropriate storage mode (0 for raw) is automatically used."
--------------------------------------------
On Wed, 1/2/17, Martin Maechler <maechler at stat.math.ethz.ch> wrote:

 Subject: Re: [Rd] RFC: tapply(*, ..., init.value = NA)

 Cc: R-devel at r-project.org
 Date: Wednesday, 1 February, 2017, 12:14 AM
 
>>>>> Suharto Anggono Suharto Anggono via R-devel <r-devel at r-project.org>
>>>>>     on Tue, 31 Jan 2017 15:43:53 +0000 writes:

    > Function 'aggregate.data.frame' in R has taken a different route. With drop=FALSE, the function is also applied to subset corresponding to combination of grouping variables that doesn't appear in the data (example 2 in https://stat.ethz.ch/pipermail/r-devel/2017-January/073678.html).

Interesting point (I couldn't easily find 'the example 2' though).
However, aggregate.data.frame() is a considerably more
sophisticated function and one goal was to change tapply() as
little as possible for compatibility (and maintenance!) reasons .

[snip]

    > With the code using
    >    if(missing(default)) ,
    > I consider the stated default value of 'default',
    >    default = NA ,
    > misleading because the code doesn't use it. 

I know and I also had thought about it and decided to keep it 
in the spirit of "self documentation" because  "in spirit", the
default still *is* NA.

    > Also,
    >  tapply(1:3, 1:3, as.raw)
    > is not the same as
    >  tapply(1:3, 1:3, as.raw, default = NA) .
    > The accurate statement is the code in
    > if(missing(default)) ,
    > but it involves the local variable 'ans'.

exactly.  But putting that whole expression in there would look
confusing to those using  str(tapply), args(tapply) or similar
inspection to quickly get a glimpse of the function user "interface".
That's why we typically don't do that and rather slightly cheat
with the formal default, for the above "didactical" purposes.

If you are puristic about this, then missing() should almost never
be used when the function argument has a formal default.

I don't have a too strong opinion here, and we do have quite a
few other cases, where the formal default argument is not always
used because of   if(missing(.))  clauses.

I think I could be convinced to drop the '= NA' from the formal
argument list..


    > As far as I know, the result of function 'array' in is not a classed object and the default method of  `[<-` will be used in the 'tapply' code portion.

    > As far as I know, the result of 'lapply' is a list without class. So, 'unlist' applied to it uses the default method and the 'unlist' result is a vector or a factor.

You may be right here
  ((or not:  If a package author makes array() into an S3 generic and defines
    S3method(array, *) and she or another make tapply() into a
    generic with methods,  are we really sure that this code
    would not be used ??))

still, the as.raw example did not easily work without a warning
when using as.vector() .. or similar.

    > With the change, the result of

    > tapply(1:3, 1:3, factor, levels=3:1)

    > is of mode "character". The value is from the internal code, not from the factor levels. It is worse than before the change, where it is really the internal code, integer.

I agree that this change is not desirable.
One could argue that it was quite a "lucky coincidence" that the previous
code returned the internal integer codes though..


[snip]


    > To initialize array, a zero-length vector can also be used.

yes, of course; but my  ans[0L][1L]  had the purpose to get the
correct mode specific version of NA .. which works for raw (by
getting '00' because "raw" has *no* NA!).

So it seems I need an additional   !is.factor(ans)  there ...
a bit ugly.


---------

[snip]


From avraham.adler at gmail.com  Wed Feb  1 22:49:44 2017
From: avraham.adler at gmail.com (Avraham Adler)
Date: Wed, 1 Feb 2017 16:49:44 -0500
Subject: [Rd] Unexpected EOF in R-patched_2017-01-30
In-Reply-To: <22673.39132.37207.958775@stat.math.ethz.ch>
References: <CAL6gwnKsEuqyEKG+AdxC+skraNiqV7MB0PorEsvXrXWCzO-sEg@mail.gmail.com>
	<91204991-E540-4EE7-A895-6A31B1456091@gmail.com>
	<CAL6gwnJW0vFVLrO8xmQdmZ648GUrgNECk+LsKJhZ3PR41g+S0Q@mail.gmail.com>
	<22673.39132.37207.958775@stat.math.ethz.ch>
Message-ID: <CAL6gwnJTkqzSwhx1Sd1UXgL+66g_FouUm92Ke=1-8whZmn=W=g@mail.gmail.com>

On Wed, Feb 1, 2017 at 3:14 AM, Martin Maechler <maechler at stat.math.ethz.ch>
wrote:

> Or the file was corrupted during download?
>
> Here are the md5sum s  from the server itself for the last three snapshots:
>
> 388b607afe732c92442dbb49845fe377  ..../ftp/R/R-patched_2017-01-31.tar.gz
> 7daea59067454311818df1c75971a485  ..../ftp/R/R-patched_2017-01-30.tar.gz
> 9ddad833a455973631920c70b6da5d6e  ..../ftp/R/R-patched_2017-01-29.tar.gz
>

That is probably the case as the 01-30 version gives me an MD5 of
49fcb4ad0874b136a4499b8d3d39cc03.

Thank you,

Avi

	[[alternative HTML version deleted]]


From maechler at stat.math.ethz.ch  Thu Feb  2 11:50:01 2017
From: maechler at stat.math.ethz.ch (Martin Maechler)
Date: Thu, 2 Feb 2017 11:50:01 +0100
Subject: [Rd] Typos in manuals
In-Reply-To: <c8543980-3aed-c511-19f0-eeb6e9cfbe10@helsinki.fi>
References: <c8543980-3aed-c511-19f0-eeb6e9cfbe10@helsinki.fi>
Message-ID: <22675.3801.377916.677173@stat.math.ethz.ch>

>>>>> Mikko Korpela <mikko.korpela at helsinki.fi>
>>>>>     on Wed, 1 Feb 2017 12:16:49 +0200 writes:

    > I found some trivial typos, mostly unmatched parentheses, in the R 
    > manuals. More information and suggested fixes are in the attached diff file.
Thank you very much!
They have been applied to the R-devel and R-patched source now.

Martin


From mikko.korpela at helsinki.fi  Thu Feb  2 12:38:21 2017
From: mikko.korpela at helsinki.fi (Mikko Korpela)
Date: Thu, 2 Feb 2017 13:38:21 +0200
Subject: [Rd] R Bugzilla down
Message-ID: <c4c8cc91-17e6-6fd2-b0e8-d9317864eba8@helsinki.fi>

The R Bugzilla at <https://bugs.r-project.org/bugzilla3/> is down, for 
at least some hours by now.

The error message from my web browser reads:

Can't connect to the database.
Error: Can't connect to local MySQL server through socket 
'/var/run/mysqld/mysqld.sock' (2)
   Is your database installed and up and running?
   Do you have the correct username and password selected in localconfig?


-- 
Mikko Korpela
Department of Geosciences and Geography
University of Helsinki


From simon.urbanek at r-project.org  Thu Feb  2 15:35:12 2017
From: simon.urbanek at r-project.org (Simon Urbanek)
Date: Thu, 2 Feb 2017 09:35:12 -0500
Subject: [Rd] R Bugzilla down
In-Reply-To: <c4c8cc91-17e6-6fd2-b0e8-d9317864eba8@helsinki.fi>
References: <c4c8cc91-17e6-6fd2-b0e8-d9317864eba8@helsinki.fi>
Message-ID: <5B64D885-419F-41E0-AB38-31EDACF35678@r-project.org>

Thanks, should be back up.
Simon


> On Feb 2, 2017, at 6:38 AM, Mikko Korpela <mikko.korpela at helsinki.fi> wrote:
> 
> The R Bugzilla at <https://bugs.r-project.org/bugzilla3/> is down, for at least some hours by now.
> 
> The error message from my web browser reads:
> 
> Can't connect to the database.
> Error: Can't connect to local MySQL server through socket '/var/run/mysqld/mysqld.sock' (2)
>  Is your database installed and up and running?
>  Do you have the correct username and password selected in localconfig?
> 
> 
> -- 
> Mikko Korpela
> Department of Geosciences and Geography
> University of Helsinki
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
> 


From rbaer at atsu.edu  Fri Feb  3 15:23:46 2017
From: rbaer at atsu.edu (Robert Baer)
Date: Fri, 3 Feb 2017 08:23:46 -0600
Subject: [Rd] Suggestion: barplot function
In-Reply-To: <519488518da576043b52b5bd2c962a7a@lycos.com>
References: <519488518da576043b52b5bd2c962a7a@lycos.com>
Message-ID: <8fbe383a-bb69-9e41-9fd7-7dae9a6a9ec7@atsu.edu>


On 1/27/2017 8:30 AM, danielrenato at lycos.com wrote:
> Hello developers folks!
>
> First, congratulations for the wonderful work with R.
>
> For science, barplots with error bars are very important. We were 
> wondering that is so easy to use the boxplot function:
>
> boxplot(Spores~treatment, col=treatment_colors)
>
> But there is no such function for barplots with standard deviation or 
> standard error. It becomes a "journey" to plot a simple graph (e.g. 
> https://www.r-bloggers.com/building-barplots-with-error-bars/).
>
> The same way that is easy to use the boxplot function, do you think it 
> is possible to upgrade the barplot function: i.e.: 
> barplot(Spores~treatment, error.bar=standard_error, col=treatment_colors)
Marc may not speak for R Core, but he certainly has summarized what has 
been an apparent consensus attitude to barplot() and confidence bars in 
this community over the last decade.  Further, he is probably right 
about no changes after this many years.

I might mention that if you want a close cousin to barplot() that does 
what you want with base graphics (from the drawing mechanics point of 
view) see the barplot2() function in the gplots package. You provide 
your own bar lengths.  Regardless of their merits, barplots are a common 
graphing mechanism used by my scientific colleagues to convey their 
data, and I don't see that changing any time soon.  The one thing that 
is even less forgivable than dynamite plots is bars with no dispersion 
indication at all. Too bad barplot2() isn't the default.




>
> Thank you so much!
> Daniel, FU-Berlin
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel

-- 


--
Robert W. Baer, Ph.D.
Professor of Physiology
Kirksville College of Osteopathic Medicine
A T Still University of Health Sciences
800 W. Jefferson St
Kirksville, MO 63501
660-626-2321 Department
660-626-2965 FAX


From marc_schwartz at me.com  Fri Feb  3 17:05:41 2017
From: marc_schwartz at me.com (Marc Schwartz)
Date: Fri, 03 Feb 2017 10:05:41 -0600
Subject: [Rd] Suggestion: barplot function
In-Reply-To: <8fbe383a-bb69-9e41-9fd7-7dae9a6a9ec7@atsu.edu>
References: <519488518da576043b52b5bd2c962a7a@lycos.com>
	<8fbe383a-bb69-9e41-9fd7-7dae9a6a9ec7@atsu.edu>
Message-ID: <B3287A76-24C3-4FF5-BE7E-721072E4E794@me.com>


> On Feb 3, 2017, at 8:23 AM, Robert Baer <rbaer at atsu.edu> wrote:
> 
> 
> On 1/27/2017 8:30 AM, danielrenato at lycos.com wrote:
>> Hello developers folks!
>> 
>> First, congratulations for the wonderful work with R.
>> 
>> For science, barplots with error bars are very important. We were wondering that is so easy to use the boxplot function:
>> 
>> boxplot(Spores~treatment, col=treatment_colors)
>> 
>> But there is no such function for barplots with standard deviation or standard error. It becomes a "journey" to plot a simple graph (e.g. https://www.r-bloggers.com/building-barplots-with-error-bars/).
>> 
>> The same way that is easy to use the boxplot function, do you think it is possible to upgrade the barplot function: i.e.: barplot(Spores~treatment, error.bar=standard_error, col=treatment_colors)
> Marc may not speak for R Core, but he certainly has summarized what has been an apparent consensus attitude to barplot() and confidence bars in this community over the last decade.  Further, he is probably right about no changes after this many years.
> 
> I might mention that if you want a close cousin to barplot() that does what you want with base graphics (from the drawing mechanics point of view) see the barplot2() function in the gplots package. You provide your own bar lengths.  Regardless of their merits, barplots are a common graphing mechanism used by my scientific colleagues to convey their data, and I don't see that changing any time soon.  The one thing that is even less forgivable than dynamite plots is bars with no dispersion indication at all. Too bad barplot2() isn't the default.


Hi,

Since Robert has kindly raised the barplot2() function, in the interest of full disclosure, as the original author of that function, my prior comments may seem contradictory.

I originally wrote the barplot2() function back in 2002 (https://stat.ethz.ch/pipermail/r-devel/2002-September/025092.html <https://stat.ethz.ch/pipermail/r-devel/2002-September/025092.html>), based upon my usage patterns at the time. It included the ability to use log scaled axes (later added to base R's barplot()), binomial confidence intervals and some other features, building directly on the default barplot() function code in base R for compatibility.

It was an early attempt back then, to give back to the community based upon some requests at the time. Greg Warnes was subsequently kind enough to offer to include it in the gplots package on CRAN.

That being said, because of the issues that I raised in my prior reply, which also reflect my own evolution in thinking in the many years since, I have not used the barplot2() function nor modified/updated the code in any way in well over 10 years. In fact, in general, I find that my clients in the clinical domains that I work in, have also come to see less value in their use, in deference to other presentation formats and I rarely use them in my analyses. As I noted in my prior reply, where I see them still commonly used tends to be for tabulations/counts for things like monthly/quarterly clinical trial enrollment trends, etc.

In either case, Robert rightly raises the point that, despite the criticisms, they are still widely used as change can be slow to manifest. Thus, there are options to create such plots where desired, using barplot2(), the ggplot2 package and other functions in various CRAN packages. Or as I noted, if you don't want to install a package just for the sake of this one feature, it is easy to create them with a few function calls like segments() or arrows() over the default barplot.

Regards,

Marc


>> 
>> Thank you so much!
>> Daniel, FU-Berlin
>> 
>> ______________________________________________
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel
> 
> -- 
> 
> 
> --
> Robert W. Baer, Ph.D.
> Professor of Physiology
> Kirksville College of Osteopathic Medicine
> A T Still University of Health Sciences
> 800 W. Jefferson St
> Kirksville, MO 63501
> 660-626-2321 Department
> 660-626-2965 FAX
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


	[[alternative HTML version deleted]]


From suharto_anggono at yahoo.com  Sat Feb  4 11:18:33 2017
From: suharto_anggono at yahoo.com (Suharto Anggono Suharto Anggono)
Date: Sat, 4 Feb 2017 10:18:33 +0000 (UTC)
Subject: [Rd] Lack of 'seq_len' in 'head' in 'stopifnot'
References: <2134429091.881467.1486203513831.ref@mail.yahoo.com>
Message-ID: <2134429091.881467.1486203513831@mail.yahoo.com>

Function 'stopifnot' in R devel r72104 has this.
    head <- function(x, n = 6L) ## basically utils:::head.default()
	x[if(n < 0L) max(length(x) + n, 0L) else min(n, length(x))]

If definition like utils:::head.default is intended, the index of 'x' should be wrapped in seq_len(...):
x[seq_len(...)]


From suharto_anggono at yahoo.com  Sat Feb  4 11:18:33 2017
From: suharto_anggono at yahoo.com (Suharto Anggono Suharto Anggono)
Date: Sat, 4 Feb 2017 10:18:33 +0000 (UTC)
Subject: [Rd] Lack of 'seq_len' in 'head' in 'stopifnot'
References: <2134429091.881467.1486203513831.ref@mail.yahoo.com>
Message-ID: <2134429091.881467.1486203513831@mail.yahoo.com>

Function 'stopifnot' in R devel r72104 has this.
    head <- function(x, n = 6L) ## basically utils:::head.default()
	x[if(n < 0L) max(length(x) + n, 0L) else min(n, length(x))]

If definition like utils:::head.default is intended, the index of 'x' should be wrapped in seq_len(...):
x[seq_len(...)]


From maechler at stat.math.ethz.ch  Sat Feb  4 16:48:08 2017
From: maechler at stat.math.ethz.ch (Martin Maechler)
Date: Sat, 4 Feb 2017 16:48:08 +0100
Subject: [Rd] RFC: tapply(*, ..., init.value = NA)
In-Reply-To: <1385208661.3566769.1485965826307@mail.yahoo.com>
References: <22672.50689.531065.366985@stat.math.ethz.ch>
	<22668.48887.93419.698242@stat.math.ethz.ch>
	<CAFDcVCTCYn=qXHrw4pmovPbR7hjKd2+yjEmky-uMSCSDr+uqXw@mail.gmail.com>
	<27386751.2682508.1485877433132@mail.yahoo.com>
	<1385208661.3566769.1485965826307@mail.yahoo.com>
Message-ID: <22677.63416.650254.2557@stat.math.ethz.ch>

>>>>> Suharto Anggono Suharto Anggono via R-devel <r-devel at r-project.org>
>>>>>     on Wed, 1 Feb 2017 16:17:06 +0000 writes:

    > On 'aggregate data.frame', the URL should be
    > https://stat.ethz.ch/pipermail/r-help/2016-May/438631.html .

thank you. Yes, using 'drop' makes sense there where the result
is always "linear(ized)" or "one-dimensional".
For tapply() that's only the case for 1D-index.

    > vector(typeof(ans)) (or vector(storage.mode(ans))) has
    > length zero and can be used to initialize array.  

Yes,.. unless in the case where ans is NULL.
You have convinced me, that is  nicer.

    > Instead of if(missing(default)) , if(identical(default,
    > NA)) could be used. The documentation could then say, for
    > example: "If default = NA (the default), NA of appropriate
    > storage mode (0 for raw) is automatically used."

After some thought (and experiments), I have reverted and no
longer use if(missing). You are right that it is not needed
(and even potentially confusing) here.

Changes are in svn c72106.

Martin Maechler


    > --------------------------------------------
    > On Wed, 1/2/17, Martin Maechler
    > <maechler at stat.math.ethz.ch> wrote:

    >  Subject: Re: [Rd] RFC: tapply(*, ..., init.value = NA)

    >  Cc: R-devel at r-project.org Date: Wednesday, 1 February,
    > 2017, 12:14 AM
 
>>>>> Suharto Anggono Suharto Anggono via R-devel <r-devel at r-project.org>
>>>>>     on Tue, 31 Jan 2017 15:43:53 +0000 writes:

    >> Function 'aggregate.data.frame' in R has taken a
    >> different route. With drop=FALSE, the function is also
    >> applied to subset corresponding to combination of
    >> grouping variables that doesn't appear in the data
    >> (example 2 in
    >> https://stat.ethz.ch/pipermail/r-devel/2017-January/073678.html).

    > Interesting point (I couldn't easily find 'the example 2'
    > though).  However, aggregate.data.frame() is a
    > considerably more sophisticated function and one goal was
    > to change tapply() as little as possible for compatibility
    > (and maintenance!) reasons .

    > [snip]

    >> With the code using if(missing(default)) , I consider the
    >> stated default value of 'default', default = NA ,
    >> misleading because the code doesn't use it.

    > I know and I also had thought about it and decided to keep
    > it in the spirit of "self documentation" because "in
    > spirit", the default still *is* NA.

    >> Also, tapply(1:3, 1:3, as.raw) is not the same as
    >> tapply(1:3, 1:3, as.raw, default = NA) .  The accurate
    >> statement is the code in if(missing(default)) , but it
    >> involves the local variable 'ans'.

    > exactly.  But putting that whole expression in there would
    > look confusing to those using str(tapply), args(tapply) or
    > similar inspection to quickly get a glimpse of the
    > function user "interface".  That's why we typically don't
    > do that and rather slightly cheat with the formal default,
    > for the above "didactical" purposes.

    > If you are puristic about this, then missing() should
    > almost never be used when the function argument has a
    > formal default.

    > I don't have a too strong opinion here, and we do have
    > quite a few other cases, where the formal default argument
    > is not always used because of if(missing(.))  clauses.

    > I think I could be convinced to drop the '= NA' from the
    > formal argument list..


    >> As far as I know, the result of function 'array' in is
    >> not a classed object and the default method of `[<-` will
    >> be used in the 'tapply' code portion.

    >> As far as I know, the result of 'lapply' is a list
    >> without class. So, 'unlist' applied to it uses the
    >> default method and the 'unlist' result is a vector or a
    >> factor.

    > You may be right here ((or not: If a package author makes
    > array() into an S3 generic and defines S3method(array, *)
    > and she or another make tapply() into a generic with
    > methods, are we really sure that this code would not be
    > used ??))

    > still, the as.raw example did not easily work without a
    > warning when using as.vector() .. or similar.

    >> With the change, the result of

    >> tapply(1:3, 1:3, factor, levels=3:1)

    >> is of mode "character". The value is from the internal
    >> code, not from the factor levels. It is worse than before
    >> the change, where it is really the internal code,
    >> integer.

    > I agree that this change is not desirable.  One could
    > argue that it was quite a "lucky coincidence" that the
    > previous code returned the internal integer codes though..


    > [snip]


    >> To initialize array, a zero-length vector can also be
    >> used.

    > yes, of course; but my ans[0L][1L] had the purpose to get
    > the correct mode specific version of NA .. which works for
    > raw (by getting '00' because "raw" has *no* NA!).

    > So it seems I need an additional !is.factor(ans) there ...
    > a bit ugly.


    > ---------

    > [snip]

    > ______________________________________________
    > R-devel at r-project.org mailing list
    > https://stat.ethz.ch/mailman/listinfo/r-devel


From maechler at stat.math.ethz.ch  Sat Feb  4 17:27:54 2017
From: maechler at stat.math.ethz.ch (Martin Maechler)
Date: Sat, 4 Feb 2017 17:27:54 +0100
Subject: [Rd] Lack of 'seq_len' in 'head' in 'stopifnot'
In-Reply-To: <2134429091.881467.1486203513831@mail.yahoo.com>
References: <2134429091.881467.1486203513831.ref@mail.yahoo.com>
	<2134429091.881467.1486203513831@mail.yahoo.com>
Message-ID: <22678.266.503476.429238@stat.math.ethz.ch>

>>>>> Suharto Anggono Suharto Anggono via R-devel <r-devel at r-project.org>
>>>>>     on Sat, 4 Feb 2017 10:18:33 +0000 writes:

    > Function 'stopifnot' in R devel r72104 has this.
    >   head <- function(x, n = 6L) ## basically utils:::head.default()
    >         x[if(n < 0L) max(length(x) + n, 0L) else min(n, length(x))]

    > If definition like utils:::head.default is intended, the index of 'x' should be wrapped in seq_len(...):
    > x[seq_len(...)]

You are right... that was "lost in translation" .

As  seq_len(1) is 1   and that seems to have been the only case
much exercised, nobody seems to have noticed the problem till
now ((this assumes people *would* report it if they noticed.
      Yes, "hope dies last"  ;-))

Thank you, this is amended now.
Martin


From pd.mes at cbs.dk  Sun Feb  5 15:14:41 2017
From: pd.mes at cbs.dk (Peter Dalgaard)
Date: Sun, 5 Feb 2017 14:14:41 +0000
Subject: [Rd] R 3.3.3 on March 6
Message-ID: <D2F1AC6D-FCE8-4E13-B4C4-9F78DF6EDA6B@cbs.dk>

The wrap-up release of the R-3.3.x series will be on Monday, March 6th. 

Package maintainers should check that their packages still work with this release. In particular, recommended-package maintainers should be extra careful since we do not want unexpected turbulence at this point.

On behalf of the R Core Team
Peter Dalgaard

-- 
Peter Dalgaard, Professor,
Center for Statistics, Copenhagen Business School
Solbjerg Plads 3, 2000 Frederiksberg, Denmark
Phone: (+45)38153501
Office: A 4.23
Email: pd.mes at cbs.dk  Priv: PDalgd at gmail.com


From btyner at gmail.com  Tue Feb  7 13:12:06 2017
From: btyner at gmail.com (Benjamin Tyner)
Date: Tue, 7 Feb 2017 07:12:06 -0500
Subject: [Rd] package load altering RNG state
Message-ID: <54995b10-e094-1f26-6a18-a52d692d6404@gmail.com>

Hello

When loading a package, I'm wondering if it's frowned upon for the 
package to alter the state of the random number generator? I guess not, 
since the parallel package does it?

    > set.seed(6860)
    > old.seed <- .GlobalEnv$.Random.seed
    > library(parallel)
    > new.seed <- .GlobalEnv$.Random.seed
    > identical(old.seed, new.seed)
    [1] FALSE

I ask because, I found myself writing a custom wrapper around library() 
to restore the original RNG state, in order to increase reproducibility. 
But now wondering if others would welcome such a feature to be added to 
base R? Either something very general like

    preserveRNGstate(library(parallel))

or perhaps an specific enhancement to library itself?

Regards
Ben


From hugo.raguet at centraliens.net  Tue Feb  7 09:59:19 2017
From: hugo.raguet at centraliens.net (Hugo Raguet)
Date: Tue, 7 Feb 2017 09:59:19 +0100
Subject: [Rd] buggy ANSI escape sequences in R prompt
Message-ID: <CAB4ZKxM1WqQ+qbWb9p7GBNPLs2Fbiu6PBHPVnhajmtQDW_6ZBg@mail.gmail.com>

When R is run interactively in a terminal which supports colors, it is
possible to use ANSI escape sequences in order to put colors in the prompt,
such as

options(prompt = "\033[0;31mThis is red\033[0m> ")

Unfortunately, something goes wrong because for long command lines, the
line continuation override the prompt instead of being written in the next
line. The problem gets worse when using several colors, because somehow
each escape sequence "takes up some space" in the command line, *up to the
point that the end of the prompt might overwrite the beginning*. On my
configuration this happens with for instance

options(prompt = paste("\033[0;31m With \033[0;32m multiple",
                   "\033[0;33m colors \033[0;34m this",
                   "\033[0;35m gets \033[0;36m really",
                   "\033[0;37m wrong! \033[0m"))

Why is it so? Is there a workaround?

PS: This rather old post seems related

http://r.789695.n4.nabble.com/Xterm-escape-sequences-in-Prompt-td906375.html

PPS: I posted this question on [R] section of stack overflow

http://stackoverflow.com/questions/42072092/buggy-ansi-escape-sequences-in-r-prompt

	[[alternative HTML version deleted]]


From nilsson.henric at gmail.com  Tue Feb  7 13:37:42 2017
From: nilsson.henric at gmail.com (Henric Winell)
Date: Tue, 7 Feb 2017 13:37:42 +0100
Subject: [Rd] package load altering RNG state
In-Reply-To: <54995b10-e094-1f26-6a18-a52d692d6404@gmail.com>
References: <54995b10-e094-1f26-6a18-a52d692d6404@gmail.com>
Message-ID: <2f43985c-35dd-f505-da37-22aa92ca8be8@gmail.com>

Hi,

On 2017-02-07 13:12, Benjamin Tyner wrote:

> Hello
> 
> When loading a package, I'm wondering if it's frowned upon for the 
> package to alter the state of the random number generator? I guess not, 
> since the parallel package does it?

Surprisingly it is not frowned upon, but it *is* a nuisance.  I brought 
it up a couple of years ago

http://r.789695.n4.nabble.com/parallel-package-changes-Random-seed-td4686321.html

along with a patch, but was told off...

> 
>     > set.seed(6860)
>     > old.seed <- .GlobalEnv$.Random.seed
>     > library(parallel)
>     > new.seed <- .GlobalEnv$.Random.seed
>     > identical(old.seed, new.seed)
>     [1] FALSE
> 
> I ask because, I found myself writing a custom wrapper around library() 
> to restore the original RNG state, in order to increase reproducibility. 
> But now wondering if others would welcome such a feature to be added to 
> base R? Either something very general like
> 
>     preserveRNGstate(library(parallel))
> 
> or perhaps an specific enhancement to library itself?

I would very much welcome a change, but in the light of things it 
doesn't seem likely.

Henric Winell


> 
> Regards
> Ben
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>


From csardi.gabor at gmail.com  Tue Feb  7 14:44:35 2017
From: csardi.gabor at gmail.com (=?UTF-8?B?R8OhYm9yIENzw6FyZGk=?=)
Date: Tue, 7 Feb 2017 13:44:35 +0000
Subject: [Rd] buggy ANSI escape sequences in R prompt
In-Reply-To: <CAB4ZKxM1WqQ+qbWb9p7GBNPLs2Fbiu6PBHPVnhajmtQDW_6ZBg@mail.gmail.com>
References: <CAB4ZKxM1WqQ+qbWb9p7GBNPLs2Fbiu6PBHPVnhajmtQDW_6ZBg@mail.gmail.com>
Message-ID: <CABtg=K=fpDGavqdN6VmoOGVEU=KMvPz6H5n5UvuZ9n+o25Ornw@mail.gmail.com>

I guess that R does not know about ANSI sequences, and it calculates the
width of the prompt including the characters in the sequences. You cannot
do much about this, except maybe use a prompt that has two lines. You can
put the colored text and whatever you like in the first line, and the
second line can be non-ANSI.

Note that this works in the terminal, but does not work in RStudio. RStudio
does not support multi-line prompt currently.

Maybe this is also interesting for you, if you want a dynamic R prompt:
https://github.com/gaborcsardi/prompt#readme (Self-ad, sorry.)

Gabor

On Tue, Feb 7, 2017 at 8:59 AM, Hugo Raguet <hugo.raguet at centraliens.net>
wrote:

> When R is run interactively in a terminal which supports colors, it is
> possible to use ANSI escape sequences in order to put colors in the prompt,
> such as
>
> options(prompt = "\033[0;31mThis is red\033[0m> ")
>
> Unfortunately, something goes wrong because for long command lines, the
> line continuation override the prompt instead of being written in the next
> line. The problem gets worse when using several colors, because somehow
> each escape sequence "takes up some space" in the command line, *up to the
> point that the end of the prompt might overwrite the beginning*. On my
> configuration this happens with for instance
>
> options(prompt = paste("\033[0;31m With \033[0;32m multiple",
>                    "\033[0;33m colors \033[0;34m this",
>                    "\033[0;35m gets \033[0;36m really",
>                    "\033[0;37m wrong! \033[0m"))
>
> Why is it so? Is there a workaround?
>
> PS: This rather old post seems related
>
> http://r.789695.n4.nabble.com/Xterm-escape-sequences-in-
> Prompt-td906375.html
>
> PPS: I posted this question on [R] section of stack overflow
>
> http://stackoverflow.com/questions/42072092/buggy-ansi-
> escape-sequences-in-r-prompt
>
>         [[alternative HTML version deleted]]
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>

	[[alternative HTML version deleted]]


From hugo.raguet at centraliens.net  Tue Feb  7 15:12:03 2017
From: hugo.raguet at centraliens.net (Hugo Raguet)
Date: Tue, 7 Feb 2017 15:12:03 +0100
Subject: [Rd] buggy ANSI escape sequences in R prompt
In-Reply-To: <CABtg=K=fpDGavqdN6VmoOGVEU=KMvPz6H5n5UvuZ9n+o25Ornw@mail.gmail.com>
References: <CAB4ZKxM1WqQ+qbWb9p7GBNPLs2Fbiu6PBHPVnhajmtQDW_6ZBg@mail.gmail.com>
	<CABtg=K=fpDGavqdN6VmoOGVEU=KMvPz6H5n5UvuZ9n+o25Ornw@mail.gmail.com>
Message-ID: <CAB4ZKxNkeCB2FKVg=7Y3nUiXSY2XecR=qjAJ5B4Dqtc_c1mJgQ@mail.gmail.com>

Thanks for the hint. I agree with your analysis, but that still would not
explain why the continuation overrides the begining of the same line
instead of going to the next line.
I think I'll go for the two-lines prompt. If you have a Stack Overflow
account, you can post your answer and I will accept it in a couple of days.
That would also make some ad for your dynamic R prompt! It's really cool,
but overkill for my use.

Hugo

2017-02-07 14:44 GMT+01:00 G?bor Cs?rdi <csardi.gabor at gmail.com>:

> I guess that R does not know about ANSI sequences, and it calculates the
> width of the prompt including the characters in the sequences. You cannot
> do much about this, except maybe use a prompt that has two lines. You can
> put the colored text and whatever you like in the first line, and the
> second line can be non-ANSI.
>
> Note that this works in the terminal, but does not work in RStudio.
> RStudio does not support multi-line prompt currently.
>
> Maybe this is also interesting for you, if you want a dynamic R prompt:
> https://github.com/gaborcsardi/prompt#readme (Self-ad, sorry.)
>
> Gabor
>
> On Tue, Feb 7, 2017 at 8:59 AM, Hugo Raguet <hugo.raguet at centraliens.net>
> wrote:
>
>> When R is run interactively in a terminal which supports colors, it is
>> possible to use ANSI escape sequences in order to put colors in the
>> prompt,
>> such as
>>
>> options(prompt = "\033[0;31mThis is red\033[0m> ")
>>
>> Unfortunately, something goes wrong because for long command lines, the
>> line continuation override the prompt instead of being written in the next
>> line. The problem gets worse when using several colors, because somehow
>> each escape sequence "takes up some space" in the command line, *up to the
>> point that the end of the prompt might overwrite the beginning*. On my
>> configuration this happens with for instance
>>
>> options(prompt = paste("\033[0;31m With \033[0;32m multiple",
>>                    "\033[0;33m colors \033[0;34m this",
>>                    "\033[0;35m gets \033[0;36m really",
>>                    "\033[0;37m wrong! \033[0m"))
>>
>> Why is it so? Is there a workaround?
>>
>> PS: This rather old post seems related
>>
>> http://r.789695.n4.nabble.com/Xterm-escape-sequences-in-Prom
>> pt-td906375.html
>>
>> PPS: I posted this question on [R] section of stack overflow
>>
>> http://stackoverflow.com/questions/42072092/buggy-ansi-escap
>> e-sequences-in-r-prompt
>>
>>         [[alternative HTML version deleted]]
>>
>> ______________________________________________
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>
>
>

	[[alternative HTML version deleted]]


From maechler at stat.math.ethz.ch  Tue Feb  7 15:59:58 2017
From: maechler at stat.math.ethz.ch (Martin Maechler)
Date: Tue, 7 Feb 2017 15:59:58 +0100
Subject: [Rd] package load altering RNG state
In-Reply-To: <2f43985c-35dd-f505-da37-22aa92ca8be8@gmail.com>
References: <54995b10-e094-1f26-6a18-a52d692d6404@gmail.com>
	<2f43985c-35dd-f505-da37-22aa92ca8be8@gmail.com>
Message-ID: <22681.57582.813027.427844@stat.math.ethz.ch>

>>>>> Henric Winell <nilsson.henric at gmail.com>
>>>>>     on Tue, 7 Feb 2017 13:37:42 +0100 writes:

    > Hi, On 2017-02-07 13:12, Benjamin Tyner wrote:

    >> Hello
    >> 
    >> When loading a package, I'm wondering if it's frowned
    >> upon for the package to alter the state of the random
    >> number generator? I guess not, since the parallel package
    >> does it?

    > Surprisingly it is not frowned upon, but it *is* a
    > nuisance.  I brought it up a couple of years ago

    > http://r.789695.n4.nabble.com/parallel-package-changes-Random-seed-td4686321.html

    > along with a patch, but was told off...

    >> 
    >> > set.seed(6860) > old.seed <- .GlobalEnv$.Random.seed >
    >> library(parallel) > new.seed <- .GlobalEnv$.Random.seed >
    >> identical(old.seed, new.seed) [1] FALSE
    >> 
    >> I ask because, I found myself writing a custom wrapper
    >> around library() to restore the original RNG state, in
    >> order to increase reproducibility.  But now wondering if
    >> others would welcome such a feature to be added to base
    >> R? Either something very general like
    >> 
    >> preserveRNGstate(library(parallel))
    >> 
    >> or perhaps an specific enhancement to library itself?

    > I would very much welcome a change, but in the light of
    > things it doesn't seem likely.

    > Henric Winell

Sometimes things change ... and not always for the worse.  I've
found a version of your original patch idea which is very
efficient nice (in my eyes) and still leaves
	system.time(loadNamespace("parallel"))
to round to 0, i.e. needing less than 1 ms.

   --> in R-devel svn rev 72136

Martin


From nilsson.henric at gmail.com  Tue Feb  7 16:31:05 2017
From: nilsson.henric at gmail.com (Henric Winell)
Date: Tue, 7 Feb 2017 16:31:05 +0100
Subject: [Rd] package load altering RNG state
In-Reply-To: <22681.57582.813027.427844@stat.math.ethz.ch>
References: <54995b10-e094-1f26-6a18-a52d692d6404@gmail.com>
	<2f43985c-35dd-f505-da37-22aa92ca8be8@gmail.com>
	<22681.57582.813027.427844@stat.math.ethz.ch>
Message-ID: <61388b55-a10f-a378-b6ec-484bd34d972d@gmail.com>

On 2017-02-07 15:59, Martin Maechler wrote:

>>>>>> Henric Winell <nilsson.henric at gmail.com>
>>>>>>      on Tue, 7 Feb 2017 13:37:42 +0100 writes:
> 
>      > Hi, On 2017-02-07 13:12, Benjamin Tyner wrote:
> 
>      >> Hello
>      >>
>      >> When loading a package, I'm wondering if it's frowned
>      >> upon for the package to alter the state of the random
>      >> number generator? I guess not, since the parallel package
>      >> does it?
> 
>      > Surprisingly it is not frowned upon, but it *is* a
>      > nuisance.  I brought it up a couple of years ago
> 
>      > http://r.789695.n4.nabble.com/parallel-package-changes-Random-seed-td4686321.html
> 
>      > along with a patch, but was told off...
> 
>      >>
>      >> > set.seed(6860) > old.seed <- .GlobalEnv$.Random.seed >
>      >> library(parallel) > new.seed <- .GlobalEnv$.Random.seed >
>      >> identical(old.seed, new.seed) [1] FALSE
>      >>
>      >> I ask because, I found myself writing a custom wrapper
>      >> around library() to restore the original RNG state, in
>      >> order to increase reproducibility.  But now wondering if
>      >> others would welcome such a feature to be added to base
>      >> R? Either something very general like
>      >>
>      >> preserveRNGstate(library(parallel))
>      >>
>      >> or perhaps an specific enhancement to library itself?
> 
>      > I would very much welcome a change, but in the light of
>      > things it doesn't seem likely.
> 
>      > Henric Winell
> 
> Sometimes things change ... and not always for the worse.  I've
> found a version of your original patch idea which is very
> efficient nice (in my eyes) and still leaves
> 	system.time(loadNamespace("parallel"))
> to round to 0, i.e. needing less than 1 ms.
> 
>     --> in R-devel svn rev 72136

Many thanks for this, Martin!

Henric


> 
> Martin
>


From suharto_anggono at yahoo.com  Tue Feb  7 16:56:24 2017
From: suharto_anggono at yahoo.com (Suharto Anggono Suharto Anggono)
Date: Tue, 7 Feb 2017 15:56:24 +0000 (UTC)
Subject: [Rd] RFC: tapply(*, ..., init.value = NA)
References: <237959543.2771616.1486482984670.ref@mail.yahoo.com>
Message-ID: <237959543.2771616.1486482984670@mail.yahoo.com>

Function 'tapply' in R devel r72137 uses
if(!is.null(ans) && is.na(default) && is.atomic(ans)) .

Problems:
- It is possible that user-specified 'default' is not of length 1. If the length is zero, the 'if' gives an error.
- It is possible that is.na(default) is TRUE and user-specified 'default' is NaN.

--------------------------------------------
On Sat, 4/2/17, Martin Maechler <maechler at stat.math.ethz.ch> wrote:

 Subject: Re: [Rd] RFC: tapply(*, ..., init.value = NA)

 Cc: R-devel at r-project.org
 Date: Saturday, 4 February, 2017, 10:48 PM
 
>>>>> Suharto Anggono Suharto Anggono via R-devel <r-devel at r-project.org>
>>>>>     on Wed, 1 Feb 2017 16:17:06 +0000 writes:

[snip]

    > vector(typeof(ans)) (or vector(storage.mode(ans))) has
    > length zero and can be used to initialize array.  

Yes,.. unless in the case where ans is NULL.
You have convinced me, that is  nicer.

    > Instead of if(missing(default)) , if(identical(default,
    > NA)) could be used. The documentation could then say, for
    > example: "If default = NA (the default), NA of appropriate
    > storage mode (0 for raw) is automatically used."

After some thought (and experiments), I have reverted and no
longer use if(missing). You are right that it is not needed
(and even potentially confusing) here.

Changes are in svn c72106.

Martin Maechler


From btyner at gmail.com  Tue Feb  7 23:29:58 2017
From: btyner at gmail.com (Benjamin Tyner)
Date: Tue, 7 Feb 2017 17:29:58 -0500
Subject: [Rd] package load altering RNG state
In-Reply-To: <22681.57582.813027.427844@stat.math.ethz.ch>
References: <54995b10-e094-1f26-6a18-a52d692d6404@gmail.com>
	<2f43985c-35dd-f505-da37-22aa92ca8be8@gmail.com>
	<22681.57582.813027.427844@stat.math.ethz.ch>
Message-ID: <fb215f8d-fe66-3c94-4eb9-70ce63d44dd6@gmail.com>

Martin,

Outstanding! This is a most welcome enhancement.

Regards

Ben


On 02/07/2017 09:59 AM, Martin Maechler wrote:
>>>>>> Henric Winell <nilsson.henric at gmail.com>
>>>>>>      on Tue, 7 Feb 2017 13:37:42 +0100 writes:
>      > Hi, On 2017-02-07 13:12, Benjamin Tyner wrote:
>
>      >> Hello
>      >>
>      >> When loading a package, I'm wondering if it's frowned
>      >> upon for the package to alter the state of the random
>      >> number generator? I guess not, since the parallel package
>      >> does it?
>
>      > Surprisingly it is not frowned upon, but it *is* a
>      > nuisance.  I brought it up a couple of years ago
>
>      > http://r.789695.n4.nabble.com/parallel-package-changes-Random-seed-td4686321.html
>
>      > along with a patch, but was told off...
>
>      >>
>      >> > set.seed(6860) > old.seed <- .GlobalEnv$.Random.seed >
>      >> library(parallel) > new.seed <- .GlobalEnv$.Random.seed >
>      >> identical(old.seed, new.seed) [1] FALSE
>      >>
>      >> I ask because, I found myself writing a custom wrapper
>      >> around library() to restore the original RNG state, in
>      >> order to increase reproducibility.  But now wondering if
>      >> others would welcome such a feature to be added to base
>      >> R? Either something very general like
>      >>
>      >> preserveRNGstate(library(parallel))
>      >>
>      >> or perhaps an specific enhancement to library itself?
>
>      > I would very much welcome a change, but in the light of
>      > things it doesn't seem likely.
>
>      > Henric Winell
>
> Sometimes things change ... and not always for the worse.  I've
> found a version of your original patch idea which is very
> efficient nice (in my eyes) and still leaves
> 	system.time(loadNamespace("parallel"))
> to round to 0, i.e. needing less than 1 ms.
>
>     --> in R-devel svn rev 72136
>
> Martin


From therneau at mayo.edu  Wed Feb  8 22:51:09 2017
From: therneau at mayo.edu (Therneau, Terry M., Ph.D.)
Date: Wed, 08 Feb 2017 15:51:09 -0600
Subject: [Rd] R CMD check error
Message-ID: <f40b15$5q1tpg@ironport10.mayo.edu>

I have a local library which depends on the expm library.  The expm library is loaded into 
my personal space and I have the environment variable R_LIBS_USER set appropriately.  The 
command "library(expm)" works just fine from the command line, and in fact the package 
works if I do the source() and dyn.load() commands by hand.

The following sequence works:

tmt% R CMD build --no-build-vignettes hmm
tmt% R CMD INSTALL hmm*gz
tmt% R
 > library(hmm)
 >  run some commands from the hmm library

But "R CMD check hmm.gz" fails with
   ERROR: dependency ?expm? is not available for package ?hmm?
* removing ?/people/biostat2/therneau/consult/alzheimer/hmm.Rcheck/hmm?

The R CMD build command fails similarly if I let it try to build the vignettes.

What's up?

Terry T


 > sessionInfo()
R version 3.3.1 (2016-06-21)
Platform: x86_64-pc-linux-gnu (64-bit)
Running under: CentOS release 6.8 (Final)


From spencer.graves at prodsyse.com  Thu Feb  9 05:43:09 2017
From: spencer.graves at prodsyse.com (Spencer Graves)
Date: Wed, 8 Feb 2017 22:43:09 -0600
Subject: [Rd] What would make R easier to use for you (and sos version 1.4-1
 and useR!2017)
Message-ID: <1449ba16-5486-153c-f06e-dc622c0846be@prodsyse.com>

***
*** WHAT WOULD MAKE R EASIER TO USE FOR YOU?
***


       The useR! 2017 conference in Brussels, July 4-7, will include a 
session in which attendees will be invited to offer their thoughts in at 
least three areas:


             * A common interface for similar functions.  For example, 
John C. Nash and others have taken the lead in developing packages to 
provide one standard call that will work for different algorithms for 
numerical optimization (optimr) and nonlinear regression.   Something 
similar could be done for the at least 25 different functions for 
singular value decomposition and principal components.


             * Improving Task Views.  Julia Silge will lead a discussion 
at useR! 2017 on what might be done to make it easier for the Task Views 
to be updated and made more useful.  [Is one option using a wiki for 
that?  I have over 2,600 edits in Wikimedia projects, and I know both 
the strengths and weaknesses of their software and culture.]


             * Searching for R packages, not just a single function: 
CRAN now includes over 10,000 different packages.  I know of two 
facilities for searching for R packages:


***
*** x <- findFn('asdf'); writeFindFn2xls(x)
***


       The initial release of the sos package included a capability to 
write the search results to an Excel file.  However, it's unclear how 
many users know about this capability.


       The recently released version 1.4-1 of "sos" modified the HTML 
display so the first few lines describe how to get a package summary. 
[In particular, "???asdf" opens a page in a web browser that begins with 
<<"x <- findFn(string = 'asdf')";  For a package summary: 
"installPackages(x); writeFindFn2xls(x)">>.]


***
*** rdocumentation.org
***


        The web site "rdocumentation.org" provides a completely 
web-based search capability that can produce a summary by packages. I 
think this web interface is easier to use than "sos", but the sos 
package summary is more useful.  It might be nice to combine the two 
some way.


***
*** Your turn
***

       What would you like to see in a search capability associated with R?


       I'd like a web-based facility that could easily produce a package 
summary table with columns like Package, Count, MaxScore, TotalScore, 
Date, Title, Version, Author, Maintainer, helpPages, vignette -- 
possibly with other column(s) for something like "book(s)" or 
"additional documentation":  When I'm searching for something, I often 
want to know if a package has a vignette, companion book(s) or 
additional documentation.  I believe I can easily add a URL to that 
display;  I plan to do so in the next month.  I could envision including 
a companion book or references if the package DESCRIPTION file 
specifications were modified to invite package developers to specify 
such in a standard way.


       What do you think?
       I hope to see you in Brussels and hear your thoughts on this 
before then.
       Spencer Graves


From plummerm at iarc.fr  Thu Feb  9 09:54:26 2017
From: plummerm at iarc.fr (Martyn Plummer)
Date: Thu, 9 Feb 2017 08:54:26 +0000
Subject: [Rd] R CMD check error
In-Reply-To: <f40b15$5q1tpg@ironport10.mayo.edu>
References: <f40b15$5q1tpg@ironport10.mayo.edu>
Message-ID: <1486630455.1872.36.camel@iarc.fr>

On Wed, 2017-02-08 at 15:51 -0600, Therneau, Terry M., Ph.D. wrote:
> I have a local library which depends on the expm library.??The expm library is loaded into?
> my personal space and I have the environment variable R_LIBS_USER set appropriately.??The?
> command "library(expm)" works just fine from the command line, and in fact the package?
> works if I do the source() and dyn.load() commands by hand.
> 
> The following sequence works:
> 
> tmt% R CMD build --no-build-vignettes hmm
> tmt% R CMD INSTALL hmm*gz
> tmt% R
> ?> library(hmm)
> ?>??run some commands from the hmm library
> 
> But "R CMD check hmm.gz" fails with
> ???ERROR: dependency ?expm? is not available for package ?hmm?
> * removing
> ?/people/biostat2/therneau/consult/alzheimer/hmm.Rcheck/hmm?
> 
> The R CMD build command fails similarly if I let it try to build the
> vignettes.
> 
> What's up?

If you are setting the environment variable R_LIBS_USER in
R_HOME/site/Renviron.site or in .Renviron then this file will not be
read when you run R CMD check or R CMD build, as R is then run with --
vanilla which implies --no-environ.?

You also need to set it in these files:

~/.R/build.Renviron
~/.R/check.Renviron

See R-exts section 1.3 and ?Startup.

Martyn
	
> Terry T
> 
> 
> ?> sessionInfo()
> R version 3.3.1 (2016-06-21)
> Platform: x86_64-pc-linux-gnu (64-bit)
> Running under: CentOS release 6.8 (Final)
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel

From rhurlin at gwdg.de  Thu Feb  9 12:44:07 2017
From: rhurlin at gwdg.de (Rainer Hurling)
Date: Thu, 9 Feb 2017 12:44:07 +0100
Subject: [Rd] changes in src/unix/system.c break builds on FreeBSD
Message-ID: <8b4743f2-d289-246a-9d82-68b97d8d065a@gwdg.de>

Dear R devs,

For some days now (~ February, 4th), I am not able to build the recent
tarballs of R-devel on a FreeBSD test box anymore. The breakage seems to
be related to the newest overhaul of src/unix/system.c:


[..snip..]
gcc49 -std=gnu99 -I. -I../../src/include -I../../src/include
-I/usr/local/include -DLIBICONV_PLUG -I/usr/local/include -isystem
/usr/local/include -DHAVE_CONFIG_H  -fopenmp -fpic  -O2 -pipe
-DLIBICONV_PLUG -fstack-protector -Wl,-rpath=/usr/local/lib/gcc49
-isystem /usr/local/include -fno-strict-aliasing -c system.c -o system.o
system.c: In function 'Rf_initialize_R':
system.c:213:13: error: 'RLIM_SAVED_CUR' undeclared (first use in this
function)
  if (lim == RLIM_SAVED_CUR || lim == RLIM_SAVED_MAX)
             ^
system.c:213:13: note: each undeclared identifier is reported only once
for each function it appears in
system.c:213:38: error: 'RLIM_SAVED_MAX' undeclared (first use in this
function)
  if (lim == RLIM_SAVED_CUR || lim == RLIM_SAVED_MAX)
                                      ^
system.c: In function 'R_GetFDLimit':
system.c:509:13: error: 'RLIM_SAVED_CUR' undeclared (first use in this
function)
  if (lim == RLIM_SAVED_CUR || lim == RLIM_SAVED_MAX)
             ^
system.c:509:38: error: 'RLIM_SAVED_MAX' undeclared (first use in this
function)
  if (lim == RLIM_SAVED_CUR || lim == RLIM_SAVED_MAX)
                                      ^
*** Error code 1

Stop.
make[5]: stopped in /usr/ports/math/R-devel/work/R-devel/src/unix


Perhaps someone can give me a hint, want to do next?

Please let me know, if I should provide more information or can test
something.

Many thanks in advance,
Rainer Hurling


From ripley at stats.ox.ac.uk  Thu Feb  9 13:14:40 2017
From: ripley at stats.ox.ac.uk (Prof Brian Ripley)
Date: Thu, 9 Feb 2017 12:14:40 +0000
Subject: [Rd] changes in src/unix/system.c break builds on FreeBSD
In-Reply-To: <8b4743f2-d289-246a-9d82-68b97d8d065a@gwdg.de>
References: <8b4743f2-d289-246a-9d82-68b97d8d065a@gwdg.de>
Message-ID: <d5f7f3cb-2fa6-f1fe-759a-321e067fb6a2@stats.ox.ac.uk>

On 09/02/2017 11:44, Rainer Hurling wrote:
> Dear R devs,
>
> For some days now (~ February, 4th), I am not able to build the recent
> tarballs of R-devel on a FreeBSD test box anymore. The breakage seems to
> be related to the newest overhaul of src/unix/system.c:
>
>
> [..snip..]
> gcc49 -std=gnu99 -I. -I../../src/include -I../../src/include
> -I/usr/local/include -DLIBICONV_PLUG -I/usr/local/include -isystem
> /usr/local/include -DHAVE_CONFIG_H  -fopenmp -fpic  -O2 -pipe
> -DLIBICONV_PLUG -fstack-protector -Wl,-rpath=/usr/local/lib/gcc49
> -isystem /usr/local/include -fno-strict-aliasing -c system.c -o system.o
> system.c: In function 'Rf_initialize_R':
> system.c:213:13: error: 'RLIM_SAVED_CUR' undeclared (first use in this
> function)
>   if (lim == RLIM_SAVED_CUR || lim == RLIM_SAVED_MAX)
>              ^
> system.c:213:13: note: each undeclared identifier is reported only once
> for each function it appears in
> system.c:213:38: error: 'RLIM_SAVED_MAX' undeclared (first use in this
> function)
>   if (lim == RLIM_SAVED_CUR || lim == RLIM_SAVED_MAX)
>                                       ^
> system.c: In function 'R_GetFDLimit':
> system.c:509:13: error: 'RLIM_SAVED_CUR' undeclared (first use in this
> function)
>   if (lim == RLIM_SAVED_CUR || lim == RLIM_SAVED_MAX)
>              ^
> system.c:509:38: error: 'RLIM_SAVED_MAX' undeclared (first use in this
> function)
>   if (lim == RLIM_SAVED_CUR || lim == RLIM_SAVED_MAX)
>                                       ^
> *** Error code 1
>
> Stop.
> make[5]: stopped in /usr/ports/math/R-devel/work/R-devel/src/unix
>
>
> Perhaps someone can give me a hint, want to do next?

Let us know (which you have).  This appears to be a lack of POSIX 
compliance on FreeBSD (even POSIX 2004, the current link being 
http://pubs.opengroup.org/onlinepubs/9699919799/functions/getrlimit.html), 
so was unexpected and you ought to file a FreeBSD bug report.

I'll add a workaround in R-devel in r72147: let us know if that does not 
suffice.

>
> Please let me know, if I should provide more information or can test
> something.
>
> Many thanks in advance,
> Rainer Hurling
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>


-- 
Brian D. Ripley,                  ripley at stats.ox.ac.uk
Emeritus Professor of Applied Statistics, University of Oxford


From mikko.korpela at helsinki.fi  Thu Feb  9 14:17:50 2017
From: mikko.korpela at helsinki.fi (Mikko Korpela)
Date: Thu, 9 Feb 2017 15:17:50 +0200
Subject: [Rd] changes in src/unix/system.c break builds on FreeBSD
In-Reply-To: <d5f7f3cb-2fa6-f1fe-759a-321e067fb6a2@stats.ox.ac.uk>
References: <8b4743f2-d289-246a-9d82-68b97d8d065a@gwdg.de>
	<d5f7f3cb-2fa6-f1fe-759a-321e067fb6a2@stats.ox.ac.uk>
Message-ID: <53b216fb-f93a-f552-888e-ffd460c6e7d4@helsinki.fi>

On 09/02/17 14:14, Prof Brian Ripley wrote:
> On 09/02/2017 11:44, Rainer Hurling wrote:
>> Dear R devs,
>>
>> For some days now (~ February, 4th), I am not able to build the recent
>> tarballs of R-devel on a FreeBSD test box anymore. The breakage seems to
>> be related to the newest overhaul of src/unix/system.c:
>>
>>
>> [..snip..]
>> gcc49 -std=gnu99 -I. -I../../src/include -I../../src/include
>> -I/usr/local/include -DLIBICONV_PLUG -I/usr/local/include -isystem
>> /usr/local/include -DHAVE_CONFIG_H  -fopenmp -fpic  -O2 -pipe
>> -DLIBICONV_PLUG -fstack-protector -Wl,-rpath=/usr/local/lib/gcc49
>> -isystem /usr/local/include -fno-strict-aliasing -c system.c -o system.o
>> system.c: In function 'Rf_initialize_R':
>> system.c:213:13: error: 'RLIM_SAVED_CUR' undeclared (first use in this
>> function)
>>   if (lim == RLIM_SAVED_CUR || lim == RLIM_SAVED_MAX)
>>              ^
>> system.c:213:13: note: each undeclared identifier is reported only once
>> for each function it appears in
>> system.c:213:38: error: 'RLIM_SAVED_MAX' undeclared (first use in this
>> function)
>>   if (lim == RLIM_SAVED_CUR || lim == RLIM_SAVED_MAX)
>>                                       ^
>> system.c: In function 'R_GetFDLimit':
>> system.c:509:13: error: 'RLIM_SAVED_CUR' undeclared (first use in this
>> function)
>>   if (lim == RLIM_SAVED_CUR || lim == RLIM_SAVED_MAX)
>>              ^
>> system.c:509:38: error: 'RLIM_SAVED_MAX' undeclared (first use in this
>> function)
>>   if (lim == RLIM_SAVED_CUR || lim == RLIM_SAVED_MAX)
>>                                       ^
>> *** Error code 1
>>
>> Stop.
>> make[5]: stopped in /usr/ports/math/R-devel/work/R-devel/src/unix
>>
>>
>> Perhaps someone can give me a hint, want to do next?
>
> Let us know (which you have).  This appears to be a lack of POSIX
> compliance on FreeBSD (even POSIX 2004, the current link being
> http://pubs.opengroup.org/onlinepubs/9699919799/functions/getrlimit.html),
> so was unexpected and you ought to file a FreeBSD bug report.

I think this FreeBSD bug report already covers the issue of partial 
non-compliance with the POSIX standard in question:
<https://bugs.freebsd.org/bugzilla/show_bug.cgi?id=209729>.

>
> I'll add a workaround in R-devel in r72147: let us know if that does not
> suffice.
>
>>
>> Please let me know, if I should provide more information or can test
>> something.
>>
>> Many thanks in advance,
>> Rainer Hurling

-- 
Mikko Korpela
Department of Geosciences and Geography
University of Helsinki


From rhurlin at gwdg.de  Thu Feb  9 14:58:20 2017
From: rhurlin at gwdg.de (Rainer Hurling)
Date: Thu, 9 Feb 2017 14:58:20 +0100
Subject: [Rd] changes in src/unix/system.c break builds on FreeBSD
In-Reply-To: <d5f7f3cb-2fa6-f1fe-759a-321e067fb6a2@stats.ox.ac.uk>
References: <8b4743f2-d289-246a-9d82-68b97d8d065a@gwdg.de>
	<d5f7f3cb-2fa6-f1fe-759a-321e067fb6a2@stats.ox.ac.uk>
Message-ID: <ed062707-cb4e-f5af-273c-f6c23899b321@gwdg.de>

Am 09.02.2017 um 13:14 schrieb Prof Brian Ripley:
> On 09/02/2017 11:44, Rainer Hurling wrote:
>> Dear R devs,
>>
>> For some days now (~ February, 4th), I am not able to build the recent
>> tarballs of R-devel on a FreeBSD test box anymore. The breakage seems to
>> be related to the newest overhaul of src/unix/system.c:
>>
>>
>> [..snip..]
>> gcc49 -std=gnu99 -I. -I../../src/include -I../../src/include
>> -I/usr/local/include -DLIBICONV_PLUG -I/usr/local/include -isystem
>> /usr/local/include -DHAVE_CONFIG_H  -fopenmp -fpic  -O2 -pipe
>> -DLIBICONV_PLUG -fstack-protector -Wl,-rpath=/usr/local/lib/gcc49
>> -isystem /usr/local/include -fno-strict-aliasing -c system.c -o system.o
>> system.c: In function 'Rf_initialize_R':
>> system.c:213:13: error: 'RLIM_SAVED_CUR' undeclared (first use in this
>> function)
>>   if (lim == RLIM_SAVED_CUR || lim == RLIM_SAVED_MAX)
>>              ^
>> system.c:213:13: note: each undeclared identifier is reported only once
>> for each function it appears in
>> system.c:213:38: error: 'RLIM_SAVED_MAX' undeclared (first use in this
>> function)
>>   if (lim == RLIM_SAVED_CUR || lim == RLIM_SAVED_MAX)
>>                                       ^
>> system.c: In function 'R_GetFDLimit':
>> system.c:509:13: error: 'RLIM_SAVED_CUR' undeclared (first use in this
>> function)
>>   if (lim == RLIM_SAVED_CUR || lim == RLIM_SAVED_MAX)
>>              ^
>> system.c:509:38: error: 'RLIM_SAVED_MAX' undeclared (first use in this
>> function)
>>   if (lim == RLIM_SAVED_CUR || lim == RLIM_SAVED_MAX)
>>                                       ^
>> *** Error code 1
>>
>> Stop.
>> make[5]: stopped in /usr/ports/math/R-devel/work/R-devel/src/unix
>>
>>
>> Perhaps someone can give me a hint, want to do next?
> 
> Let us know (which you have).  This appears to be a lack of POSIX
> compliance on FreeBSD (even POSIX 2004, the current link being
> http://pubs.opengroup.org/onlinepubs/9699919799/functions/getrlimit.html),
> so was unexpected and you ought to file a FreeBSD bug report.

This is a valuable hint for me, thanks.

In the meantime Mikko Korpela noted, that there already exists a FreeBSD
bugzilla report, which tries to implement the two missing definitions.
But there seems to be a problem with the 64 bit signed format of
RLIM_INFINITY, which was discussed, but not solved.

I will try to restart the discussion of that report and to push it
towards a solution.

> 
> I'll add a workaround in R-devel in r72147: let us know if that does not
> suffice.

Many thanks for the very quick help with this workaround. It works for
me at a recent FreeBSD 12.0-CURRENT amd64 box.

First small tests do not indicate, that there is a regression with it.

> 
>>
>> Please let me know, if I should provide more information or can test
>> something.
>>
>> Many thanks in advance,
>> Rainer Hurling


From goran.brostrom at umu.se  Thu Feb  9 16:00:15 2017
From: goran.brostrom at umu.se (=?UTF-8?Q?G=c3=b6ran_Brostr=c3=b6m?=)
Date: Thu, 9 Feb 2017 16:00:15 +0100
Subject: [Rd] Ancient C /Fortran code linpack error
Message-ID: <7240dae6-2dc9-88ec-c9c8-f552fc1c2dd5@umu.se>

In my package 'glmmML' I'm using old C code and linpack in the 
optimizing procedure. Specifically, one part of the code looks like this:

     F77_CALL(dpoco)(*hessian, &bdim, &bdim, &rcond, work, info);
     if (*info == 0){
         F77_CALL(dpodi)(*hessian, &bdim, &bdim, det, &job);
         ........

This usually works OK, but with an ill-conditioned data set (from a user 
of glmmML) it happened that the hessian was all nan. However, dpoco 
returned *info = 0 (no error!) and then the call to dpodi hanged R!

I googled for C and nan and found a work-around: Change 'if ...' to

    if (*info == 0 & (hessian[0][0] == hessian[0][0])){

which works as a test of hessian[0][0] (not) being NaN.

I'm using the .C interface for calling C code.

Any thoughts on how to best handle the situation? Is this a bug in 
dpoco? Is there a simple way to test for any NaNs in a vector?

G?ran Brostr?m

PS. Yes, I will switch to .Call! Soon...


From therneau at mayo.edu  Thu Feb  9 16:52:29 2017
From: therneau at mayo.edu (Therneau, Terry M., Ph.D.)
Date: Thu, 09 Feb 2017 09:52:29 -0600
Subject: [Rd] R CMD check error
In-Reply-To: <1486630455.1872.36.camel@iarc.fr>
References: <f40b15$5q1tpg@ironport10.mayo.edu>
	<1486630455.1872.36.camel@iarc.fr>
Message-ID: <f40b15$5q60ma@ironport10.mayo.edu>

Martin,
  I am aware of --vanilla; I use it myself for some testing.  In this case R_LIBS_USER was 
set externally (part of my login) and does not involve any of the R scripts.  That means 
it is inherited by any subprocess.  For example:

tmt1495% R --vanilla --no-environ

R version 3.3.1 (2016-06-21) -- "Bug in Your Hair"
Copyright (C) 2016 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

> system("printenv | grep R_LIBS")
R_LIBS_SITE=
R_LIBS_USER=/people/biostat2/therneau/Rlib

So, per the manual R CMD check inherits the path.  The question is why does it ignore it?

Terry T.


On 02/09/2017 02:54 AM, Martyn Plummer wrote:
> On Wed, 2017-02-08 at 15:51 -0600, Therneau, Terry M., Ph.D. wrote:
>> I have a local library which depends on the expm library.  The expm library is loaded into
>> my personal space and I have the environment variable R_LIBS_USER set appropriately.  The
>> command "library(expm)" works just fine from the command line, and in fact the package
>> works if I do the source() and dyn.load() commands by hand.
>>
>> The following sequence works:
>>
>> tmt% R CMD build --no-build-vignettes hmm
>> tmt% R CMD INSTALL hmm*gz
>> tmt% R
>>   > library(hmm)
>>   >  run some commands from the hmm library
>>
>> But "R CMD check hmm.gz" fails with
>>     ERROR: dependency ?expm? is not available for package ?hmm?
>> * removing
>> ?/people/biostat2/therneau/consult/alzheimer/hmm.Rcheck/hmm?
>>
>> The R CMD build command fails similarly if I let it try to build the
>> vignettes.
>>
>> What's up?
>
> If you are setting the environment variable R_LIBS_USER in
> R_HOME/site/Renviron.site or in .Renviron then this file will not be
> read when you run R CMD check or R CMD build, as R is then run with --
> vanilla which implies --no-environ.
>
> You also need to set it in these files:
>
> ~/.R/build.Renviron
> ~/.R/check.Renviron
>
> See R-exts section 1.3 and ?Startup.
>
> Martyn
> 	
>> Terry T
>>
>>
>>   > sessionInfo()
>> R version 3.3.1 (2016-06-21)
>> Platform: x86_64-pc-linux-gnu (64-bit)
>> Running under: CentOS release 6.8 (Final)
>>
>> ______________________________________________
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel


From bhh at xs4all.nl  Thu Feb  9 17:05:25 2017
From: bhh at xs4all.nl (Berend Hasselman)
Date: Thu, 9 Feb 2017 17:05:25 +0100
Subject: [Rd] Ancient C /Fortran code linpack error
In-Reply-To: <7240dae6-2dc9-88ec-c9c8-f552fc1c2dd5@umu.se>
References: <7240dae6-2dc9-88ec-c9c8-f552fc1c2dd5@umu.se>
Message-ID: <7B0E2308-8715-4BAA-A9F3-4FFDADF990A2@xs4all.nl>


> On 9 Feb 2017, at 16:00, G?ran Brostr?m <goran.brostrom at umu.se> wrote:
> 
> In my package 'glmmML' I'm using old C code and linpack in the optimizing procedure. Specifically, one part of the code looks like this:
> 
>    F77_CALL(dpoco)(*hessian, &bdim, &bdim, &rcond, work, info);
>    if (*info == 0){
>        F77_CALL(dpodi)(*hessian, &bdim, &bdim, det, &job);
>        ........
> 
> This usually works OK, but with an ill-conditioned data set (from a user of glmmML) it happened that the hessian was all nan. However, dpoco returned *info = 0 (no error!) and then the call to dpodi hanged R!
> 
> I googled for C and nan and found a work-around: Change 'if ...' to
> 
>   if (*info == 0 & (hessian[0][0] == hessian[0][0])){
> 
> which works as a test of hessian[0][0] (not) being NaN.
> 
> I'm using the .C interface for calling C code.
> 
> Any thoughts on how to best handle the situation? Is this a bug in dpoco? Is there a simple way to test for any NaNs in a vector?

You should/could use macro R_FINITE to test each entry of the hessian.
In package nleqslv I test for a "correct" jacobian like this in file nleqslv.c in function fcnjac:

    for (j = 0; j < *n; j++)
        for (i = 0; i < *n; i++) {
            if( !R_FINITE(REAL(sexp_fjac)[(*n)*j + i]) )
                error("non-finite value(s) returned by jacobian (row=%d,col=%d)",i+1,j+1);
            rjac[(*ldr)*j + i] = REAL(sexp_fjac)[(*n)*j + i];
        }

There may be a more compact way with a macro in the R headers.
I feel that If other code can't handle non-finite values: then test.

Berend Hasselman


From tomas.kalibera at gmail.com  Thu Feb  9 17:32:35 2017
From: tomas.kalibera at gmail.com (Tomas Kalibera)
Date: Thu, 9 Feb 2017 17:32:35 +0100
Subject: [Rd] Ancient C /Fortran code linpack error
In-Reply-To: <7B0E2308-8715-4BAA-A9F3-4FFDADF990A2@xs4all.nl>
References: <7240dae6-2dc9-88ec-c9c8-f552fc1c2dd5@umu.se>
	<7B0E2308-8715-4BAA-A9F3-4FFDADF990A2@xs4all.nl>
Message-ID: <a43138a5-a3b9-f56c-8e43-8446dd57c66d@gmail.com>

On 02/09/2017 05:05 PM, Berend Hasselman wrote:
>> On 9 Feb 2017, at 16:00, G?ran Brostr?m <goran.brostrom at umu.se> wrote:
>>
>> In my package 'glmmML' I'm using old C code and linpack in the optimizing procedure. Specifically, one part of the code looks like this:
>>
>>     F77_CALL(dpoco)(*hessian, &bdim, &bdim, &rcond, work, info);
>>     if (*info == 0){
>>         F77_CALL(dpodi)(*hessian, &bdim, &bdim, det, &job);
>>         ........
>>
>> This usually works OK, but with an ill-conditioned data set (from a user of glmmML) it happened that the hessian was all nan. However, dpoco returned *info = 0 (no error!) and then the call to dpodi hanged R!
>>
>> I googled for C and nan and found a work-around: Change 'if ...' to
>>
>>    if (*info == 0 & (hessian[0][0] == hessian[0][0])){
>>
>> which works as a test of hessian[0][0] (not) being NaN.
>>
>> I'm using the .C interface for calling C code.
>>
>> Any thoughts on how to best handle the situation? Is this a bug in dpoco? Is there a simple way to test for any NaNs in a vector?
> You should/could use macro R_FINITE to test each entry of the hessian.
> In package nleqslv I test for a "correct" jacobian like this in file nleqslv.c in function fcnjac:
>
>      for (j = 0; j < *n; j++)
>          for (i = 0; i < *n; i++) {
>              if( !R_FINITE(REAL(sexp_fjac)[(*n)*j + i]) )
>                  error("non-finite value(s) returned by jacobian (row=%d,col=%d)",i+1,j+1);
>              rjac[(*ldr)*j + i] = REAL(sexp_fjac)[(*n)*j + i];
>          }
>
> There may be a more compact way with a macro in the R headers.
> I feel that If other code can't handle non-finite values: then test.
>
> Berend Hasselman
And if performance was of importance, you could use the trick from 
mayHaveNaNOrInf in array.c (originally from pqR), but be careful to test 
the individual operands of the sum.
mayHaveNaNOrInf does not do the test for performance reasons, but as a 
result it can have false positives.

Rboolean hasNaNOrInf(double *x, R_xlen_t n)
{
     if ((n&1) != 0 && !R_FINITE(x[0]))
         return TRUE;
     for (R_xlen_t i = n&1; i < n; i += 2)
         if (!R_FINITE(x[i]+x[i+1])&& (!R_FINITE(x[i]) || !R_FINITE(x[i+1]))
             return TRUE;
     return FALSE;
}

Tomas
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From maechler at stat.math.ethz.ch  Thu Feb  9 17:44:01 2017
From: maechler at stat.math.ethz.ch (Martin Maechler)
Date: Thu, 9 Feb 2017 17:44:01 +0100
Subject: [Rd] Ancient C /Fortran code linpack error
In-Reply-To: <7B0E2308-8715-4BAA-A9F3-4FFDADF990A2@xs4all.nl>
References: <7240dae6-2dc9-88ec-c9c8-f552fc1c2dd5@umu.se>
	<7B0E2308-8715-4BAA-A9F3-4FFDADF990A2@xs4all.nl>
Message-ID: <22684.40017.122891.70235@stat.math.ethz.ch>


> > On 9 Feb 2017, at 16:00, G?ran Brostr?m <goran.brostrom at umu.se> wrote:
> > 
> > In my package 'glmmML' I'm using old C code and linpack in the optimizing procedure. Specifically, one part of the code looks like this:
> > 
> >    F77_CALL(dpoco)(*hessian, &bdim, &bdim, &rcond, work, info);
> >    if (*info == 0){
> >        F77_CALL(dpodi)(*hessian, &bdim, &bdim, det, &job);
> >        ........
> > 
> > This usually works OK, but with an ill-conditioned data set (from a user of glmmML) it happened that the hessian was all nan. However, dpoco returned *info = 0 (no error!) and then the call to dpodi hanged R!
> > 
> > I googled for C and nan and found a work-around: Change 'if ...' to
> > 
> >   if (*info == 0 & (hessian[0][0] == hessian[0][0])){
> > 
> > which works as a test of hessian[0][0] (not) being NaN.
> > 
> > I'm using the .C interface for calling C code.
> > 
> > Any thoughts on how to best handle the situation? Is this a bug in dpoco? Is there a simple way to test for any NaNs in a vector?

> You should/could use macro R_FINITE to test each entry of the hessian.
> In package nleqslv I test for a "correct" jacobian like this in file nleqslv.c in function fcnjac:

>     for (j = 0; j < *n; j++)
>         for (i = 0; i < *n; i++) {
>             if( !R_FINITE(REAL(sexp_fjac)[(*n)*j + i]) )
>                 error("non-finite value(s) returned by jacobian (row=%d,col=%d)",i+1,j+1);
>             rjac[(*ldr)*j + i] = REAL(sexp_fjac)[(*n)*j + i];
>         }

A minor hint  on that:  While REAL(.)  (or INTEGER(.) ...)  is really cheap in
the R sources themselves, that is not the case in package code.

Hence, not only nicer to read but even faster is

  double *fj = REAL(sexp_fjac);
  for (j = 0; j < *n; j++)
    for (i = 0; i < *n; i++) {
        if( !R_FINITE(fj[(*n)*j + i]) )
           error("non-finite value(s) returned by jacobian (row=%d,col=%d)",i+1,j+1);
           rjac[(*ldr)*j + i] = fj[(*n)*j + i];
     }


> There may be a more compact way with a macro in the R headers.
> I feel that If other code can't handle non-finite values: then test.

> Berend Hasselman

Indeed: do test.
Much better safe than going for speed and losing in rare cases! 

The latter is a recipe to airplanes falling out of the sky  ( ;-\ )
and is unfortunately used by some (in)famous "optimized" (fast but
sometimes wrong!!) Lapack/BLAS libraries.

The NEWS about the next version of R (3.4.0 due in April) has
a new 2-paragraph entry related to this:

---------------------------------------------------------------------------------

  SIGNIFICANT USER-VISIBLE CHANGES:

[...........]

    * Matrix products now consistently bypass BLAS when the inputs have
      NaN/Inf values. Performance of the check of inputs has been
      improved. Performance when BLAS is used is improved for
      matrix/vector and vector/matrix multiplication (DGEMV is now used
      instead of DGEMM).

      One can now choose from alternative matrix product
      implementations via options(matprod = ).  The "internal"
      implementation is unoptimized but consistent in precision with
      other summation in R (uses long double accumulators).  "blas"
      calls BLAS directly for best performance, yet usually with
      undefined behavior for inputs with NaN/Inf.

---------------------------------------------------------------------------------


Last but not least :

If you are not afraid of +/- Inf, but really only of NA/NaN's (as the OP said), 
then note that "THE manual" (= "Writing R Extensions") does mention
ISNAN(.) almost in the same place as the first occurence of
R_FINITE(.).

Best regards,
Martin Maechler, ETH Zurich


From plummerm at iarc.fr  Thu Feb  9 18:23:39 2017
From: plummerm at iarc.fr (Martyn Plummer)
Date: Thu, 9 Feb 2017 17:23:39 +0000
Subject: [Rd] R CMD check error
In-Reply-To: <f40b15$5q60ma@ironport10.mayo.edu>
References: <f40b15$5q1tpg@ironport10.mayo.edu>
	<1486630455.1872.36.camel@iarc.fr> <f40b15$5q60ma@ironport10.mayo.edu>
Message-ID: <1486661008.1872.91.camel@iarc.fr>

On Thu, 2017-02-09 at 09:52 -0600, Therneau, Terry M., Ph.D. wrote:
> Martin,
> ? I am aware of --vanilla; I use it myself for some testing.??In this case R_LIBS_USER was?
> set externally (part of my login) and does not involve any of the R scripts.??That means?
> it is inherited by any subprocess.??For example:
> 
> tmt1495% R --vanilla --no-environ
> 
> R version 3.3.1 (2016-06-21) -- "Bug in Your Hair"
> Copyright (C) 2016 The R Foundation for Statistical Computing
> Platform: x86_64-pc-linux-gnu (64-bit)
> 
> > 
> > system("printenv | grep R_LIBS")
> R_LIBS_SITE=
> R_LIBS_USER=/people/biostat2/therneau/Rlib
> 
> So, per the manual R CMD check inherits the path.??The question is
> why does it ignore it?

Hmmm. Perhaps it is being overwritten. ?Does this work?

$ export R_CHECK_ENVIRON=
$ R CMD check hmm.gz

Martyn

> Terry T.
> 
> 
> On 02/09/2017 02:54 AM, Martyn Plummer wrote:
> > 
> > On Wed, 2017-02-08 at 15:51 -0600, Therneau, Terry M., Ph.D. wrote:
> > > 
> > > I have a local library which depends on the expm library.??The expm library is loaded into
> > > my personal space and I have the environment variable R_LIBS_USER set appropriately.??The
> > > command "library(expm)" works just fine from the command line, and in fact the package
> > > works if I do the source() and dyn.load() commands by hand.
> > > 
> > > The following sequence works:
> > > 
> > > tmt% R CMD build --no-build-vignettes hmm
> > > tmt% R CMD INSTALL hmm*gz
> > > tmt% R
> > > ? > library(hmm)
> > > ? >??run some commands from the hmm library
> > > 
> > > But "R CMD check hmm.gz" fails with
> > > ????ERROR: dependency ?expm? is not available for package ?hmm?
> > > * removing
> > > ?/people/biostat2/therneau/consult/alzheimer/hmm.Rcheck/hmm?
> > > 
> > > The R CMD build command fails similarly if I let it try to build the
> > > vignettes.
> > > 
> > > What's up?
> > 
> > If you are setting the environment variable R_LIBS_USER in
> > R_HOME/site/Renviron.site or in .Renviron then this file will not be
> > read when you run R CMD check or R CMD build, as R is then run with --
> > vanilla which implies --no-environ.
> > 
> > You also need to set it in these files:
> > 
> > ~/.R/build.Renviron
> > ~/.R/check.Renviron
> > 
> > See R-exts section 1.3 and ?Startup.
> > 
> > Martyn
> > 	
> > > 
> > > Terry T
> > > 
> > > 
> > > ? > sessionInfo()
> > > R version 3.3.1 (2016-06-21)
> > > Platform: x86_64-pc-linux-gnu (64-bit)
> > > Running under: CentOS release 6.8 (Final)
> > > 
> > > ______________________________________________
> > > R-devel at r-project.org mailing list
> > > https://stat.ethz.ch/mailman/listinfo/r-devel
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel

From therneau at mayo.edu  Thu Feb  9 19:56:17 2017
From: therneau at mayo.edu (Therneau, Terry M., Ph.D.)
Date: Thu, 09 Feb 2017 12:56:17 -0600
Subject: [Rd] R CMD check error
In-Reply-To: <1486661008.1872.91.camel@iarc.fr>
References: <f40b15$5q1tpg@ironport10.mayo.edu>
	<1486630455.1872.36.camel@iarc.fr> <f40b15$5q60ma@ironport10.mayo.edu>
	<1486661008.1872.91.camel@iarc.fr>
Message-ID: <f40b15$5q8gau@ironport10.mayo.edu>

Martyn,
   No, that didn't work.
   One other thing in the mix (which I don't think is the issue) is that I call one of the 
C-entry points of expm.  So the DESCRIPTION file imports expm, the NAMESPACE file imports 
expm, and the init.c file is

#include "R.h"
#include "R_ext/Rdynload.h"

/* Interface to expm package. */
typedef enum {Ward_2, Ward_1, Ward_buggy_octave} precond_type;
void (*expm)(double *x, int n, double *z, precond_type precond_kind);
void R_init_hmm(DllInfo *dll)
{
     expm = (void (*)) R_GetCCallable("expm", "expm");
}

I don't expect that this is the problem since I stole the above almost verbatim from the 
msm package.

Terry T.


On 02/09/2017 11:23 AM, Martyn Plummer wrote:
> On Thu, 2017-02-09 at 09:52 -0600, Therneau, Terry M., Ph.D. wrote:
>> Martin,
>>    I am aware of --vanilla; I use it myself for some testing.  In this case R_LIBS_USER was
>> set externally (part of my login) and does not involve any of the R scripts.  That means
>> it is inherited by any subprocess.  For example:
>>
>> tmt1495% R --vanilla --no-environ
>>
>> R version 3.3.1 (2016-06-21) -- "Bug in Your Hair"
>> Copyright (C) 2016 The R Foundation for Statistical Computing
>> Platform: x86_64-pc-linux-gnu (64-bit)
>>
>>>
>>> system("printenv | grep R_LIBS")
>> R_LIBS_SITE=
>> R_LIBS_USER=/people/biostat2/therneau/Rlib
>>
>> So, per the manual R CMD check inherits the path.  The question is
>> why does it ignore it?
>
> Hmmm. Perhaps it is being overwritten.  Does this work?
>
> $ export R_CHECK_ENVIRON=
> $ R CMD check hmm.gz
>
> Martyn
>
>> Terry T.
>>
>>
>> On 02/09/2017 02:54 AM, Martyn Plummer wrote:
>>>
>>> On Wed, 2017-02-08 at 15:51 -0600, Therneau, Terry M., Ph.D. wrote:
>>>>
>>>> I have a local library which depends on the expm library.  The expm library is loaded into
>>>> my personal space and I have the environment variable R_LIBS_USER set appropriately.  The
>>>> command "library(expm)" works just fine from the command line, and in fact the package
>>>> works if I do the source() and dyn.load() commands by hand.
>>>>
>>>> The following sequence works:
>>>>
>>>> tmt% R CMD build --no-build-vignettes hmm
>>>> tmt% R CMD INSTALL hmm*gz
>>>> tmt% R
>>>>    > library(hmm)
>>>>    >  run some commands from the hmm library
>>>>
>>>> But "R CMD check hmm.gz" fails with
>>>>      ERROR: dependency ?expm? is not available for package ?hmm?
>>>> * removing
>>>> ?/people/biostat2/therneau/consult/alzheimer/hmm.Rcheck/hmm?
>>>>
>>>> The R CMD build command fails similarly if I let it try to build the
>>>> vignettes.
>>>>
>>>> What's up?
>>>
>>> If you are setting the environment variable R_LIBS_USER in
>>> R_HOME/site/Renviron.site or in .Renviron then this file will not be
>>> read when you run R CMD check or R CMD build, as R is then run with --
>>> vanilla which implies --no-environ.
>>>
>>> You also need to set it in these files:
>>>
>>> ~/.R/build.Renviron
>>> ~/.R/check.Renviron
>>>
>>> See R-exts section 1.3 and ?Startup.
>>>
>>> Martyn
>>> 	
>>>>
>>>> Terry T
>>>>
>>>>
>>>>    > sessionInfo()
>>>> R version 3.3.1 (2016-06-21)
>>>> Platform: x86_64-pc-linux-gnu (64-bit)
>>>> Running under: CentOS release 6.8 (Final)
>>>>
>>>> ______________________________________________
>>>> R-devel at r-project.org mailing list
>>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>
>> ______________________________________________
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel


From bhh at xs4all.nl  Thu Feb  9 19:59:58 2017
From: bhh at xs4all.nl (Berend Hasselman)
Date: Thu, 9 Feb 2017 19:59:58 +0100
Subject: [Rd] Ancient C /Fortran code linpack error
In-Reply-To: <22684.40017.122891.70235@stat.math.ethz.ch>
References: <7240dae6-2dc9-88ec-c9c8-f552fc1c2dd5@umu.se>
	<7B0E2308-8715-4BAA-A9F3-4FFDADF990A2@xs4all.nl>
	<22684.40017.122891.70235@stat.math.ethz.ch>
Message-ID: <C6AEB448-97C1-4AC1-B19B-DC957B9B074D@xs4all.nl>


> On 9 Feb 2017, at 17:44, Martin Maechler <maechler at stat.math.ethz.ch> wrote:
> 

[snip] ...

>> You should/could use macro R_FINITE to test each entry of the hessian.
>> In package nleqslv I test for a "correct" jacobian like this in file nleqslv.c in function fcnjac:
> 
>>    for (j = 0; j < *n; j++)
>>        for (i = 0; i < *n; i++) {
>>            if( !R_FINITE(REAL(sexp_fjac)[(*n)*j + i]) )
>>                error("non-finite value(s) returned by jacobian (row=%d,col=%d)",i+1,j+1);
>>            rjac[(*ldr)*j + i] = REAL(sexp_fjac)[(*n)*j + i];
>>        }
> 
> A minor hint  on that:  While REAL(.)  (or INTEGER(.) ...)  is really cheap in
> the R sources themselves, that is not the case in package code.
> 
> Hence, not only nicer to read but even faster is
> 
>  double *fj = REAL(sexp_fjac);
>  for (j = 0; j < *n; j++)
>    for (i = 0; i < *n; i++) {
>        if( !R_FINITE(fj[(*n)*j + i]) )
>           error("non-finite value(s) returned by jacobian (row=%d,col=%d)",i+1,j+1);
>           rjac[(*ldr)*j + i] = fj[(*n)*j + i];
>     }
> 

Tom, Martin,

Thanks for both of your suggestions. Very helpful.

Berend Hasselman


From jinghuazhao at hotmail.com  Fri Feb 10 01:13:10 2017
From: jinghuazhao at hotmail.com (jing hua zhao)
Date: Fri, 10 Feb 2017 00:13:10 +0000
Subject: [Rd] issue with unz()?
In-Reply-To: <5DBE21404FF5E54C826BE1040C2CD031C919E1@msgebe52.mfad.mfroot.org>
References: <mailman.23.1278669608.14475.r-devel@r-project.org>,
	<5DBE21404FF5E54C826BE1040C2CD031C919E1@msgebe52.mfad.mfroot.org>
Message-ID: <LOXP123MB11586751F324220E12A5F3B6A5440@LOXP123MB1158.GBRP123.PROD.OUTLOOK.COM>

Dear R-devel,


I appear to see differences in behavior of unz between Windows and Linux.


url0514 <- "http://data.dft.gov.uk.s3.amazonaws.com/road-accidents-safety-data/Stats19_Data_2005-2014.zip"
file0514 <- c("Vehicles0514.csv","Casualties0514.csv","Accidents0514.csv")

temp <- tempfile()
download.file(url0514,temp)
a0514 <<- read.csv(unz(temp, file0514[3]))

c0514 <<- read.csv(unz(temp, file0514[2]))

v0514 <<- read.csv(unz(temp, file0514[1]))


Under Windows, I noticed that there are variables i..Accident_Index in objects [a|c|v]0514, but this is not the case if zip file contains only one file, i.e.,

file2015 <- c("Vehicles_2015.csv","Casualties_2015.csv","Accidents_2015.csv")
url2015 <- "http://data.dft.gov.uk/road-accidents-safety-data/RoadSafetyData_2015.zip"
download.file(url2015,temp)
v2015 <<- read.csv(unz(temp, file2015[1]))
c2015 <<- read.csv(unz(temp, file2015[2]))
a2015 <<- read.csv(unz(temp, file2015[3]))


so to combine [a|c|v]0514 and [a|c|v]2015, I need to add something like


names(a0514)[names(a0514)=="?..Accident_Index"] <- "Accident_Index"
names(c0514)[names(c0514)=="?..Accident_Index"] <- "Accident_Index"
names(v0514)[names(v0514)=="?..Accident_Index"] <- "Accident_Index"


This is unnecessary under Linux (RHEL), since those i..Accident_Index have no i.. prefix.


Do I miss anything here?


Many thanks,




Jing Hua Zhao

	[[alternative HTML version deleted]]


From jinghuazhao at hotmail.com  Fri Feb 10 01:15:16 2017
From: jinghuazhao at hotmail.com (jing hua zhao)
Date: Fri, 10 Feb 2017 00:15:16 +0000
Subject: [Rd] issue with unz()?
In-Reply-To: <LOXP123MB11586751F324220E12A5F3B6A5440@LOXP123MB1158.GBRP123.PROD.OUTLOOK.COM>
References: <mailman.23.1278669608.14475.r-devel@r-project.org>,
	<5DBE21404FF5E54C826BE1040C2CD031C919E1@msgebe52.mfad.mfroot.org>,
	<LOXP123MB11586751F324220E12A5F3B6A5440@LOXP123MB1158.GBRP123.PROD.OUTLOOK.COM>
Message-ID: <LOXP123MB11582BC9AA67FF9B412DE796A5440@LOXP123MB1158.GBRP123.PROD.OUTLOOK.COM>

The 2015 does contain three files.

________________________________
From: jing hua zhao <jinghuazhao at hotmail.com>
Sent: 10 February 2017 00:13
To: r-devel at r-project.org
Subject: issue with unz()?


Dear R-devel,





url0514 <- "http://data.dft.gov.uk.s3.amazonaws.com/road-accidents-safety-data/Stats19_Data_2005-2014.zip"
file0514 <- c("Vehicles0514.csv","Casualties0514.csv","Accidents0514.csv")

temp <- tempfile()
download.file(url0514,temp)
a0514 <<- read.csv(unz(temp, file0514[3]))

c0514 <<- read.csv(unz(temp, file0514[2]))

v0514 <<- read.csv(unz(temp, file0514[1]))



cts [a|c|v]0514, but this is not the case if zip file contains only one file, i.e.,

file2015 <- c("Vehicles_2015.csv","Casualties_2015.csv","Accidents_2015.csv")
url2015 <- "http://data.dft.gov.uk/road-accidents-safety-data/RoadSafetyData_2015.zip"
download.file(url2015,temp)
v2015 <<- read.csv(unz(temp, file2015[1]))
c2015 <<- read.csv(unz(temp, file2015[2]))
a2015 <<- read.csv(unz(temp, file2015[3]))


so to combine [a|c|v]0514 and [a|c|v]2015, I need to add something like


names(a0514)[names(a0514)=="?..Accident_Index"] <- "Accident_Index"
names(c0514)[names(c0514)=="?..Accident_Index"] <- "Accident_Index"
names(v0514)[names(v0514)=="?..Accident_Index"] <- "Accident_Index"


This is unnecessary under Linux (RHEL), since those i..Accident_Index have no i.. prefix.


Do I miss anything here?


Many thanks,




Jing Hua Zhao

	[[alternative HTML version deleted]]


From wdunlap at tibco.com  Fri Feb 10 01:53:05 2017
From: wdunlap at tibco.com (William Dunlap)
Date: Thu, 9 Feb 2017 16:53:05 -0800
Subject: [Rd] issue with unz()?
In-Reply-To: <LOXP123MB11586751F324220E12A5F3B6A5440@LOXP123MB1158.GBRP123.PROD.OUTLOOK.COM>
References: <mailman.23.1278669608.14475.r-devel@r-project.org>
	<5DBE21404FF5E54C826BE1040C2CD031C919E1@msgebe52.mfad.mfroot.org>
	<LOXP123MB11586751F324220E12A5F3B6A5440@LOXP123MB1158.GBRP123.PROD.OUTLOOK.COM>
Message-ID: <CAF8bMcbqtTvLREZGJUcAgMXrZQZL+4JVOYDuWQ3y4t7DYk2ACg@mail.gmail.com>

If you use check.names=FALSE in your call to read.csv you can see that
the first column name starts with the 3 bytes ef bb bf, which is the
UTF-8 "byte-order mark" that Microsoft applications like to put at the
start of a text file stored in UTF-8.

> v0514 <- read.csv(unz(temp, file0514[1]), stringsAsFactors=FALSE, check.names=FALSE)
> names(v0514)[1]
[1] "???Accident_Index"
> charToRaw(names(v0514)[1])
 [1] ef bb bf 41 63 63 69 64 65 6e 74 5f 49 6e 64 65 78

I thought that adding fileEncoding="UTF-8-BOM" or perhaps
encoding="UTF-8-BOM" would take care of the issue, but it does not do
it for me.  You can remove them by hand with substring()

> substring(names(v0514)[1],4)
[1] "Accident_Index"
Bill Dunlap
TIBCO Software
wdunlap tibco.com


On Thu, Feb 9, 2017 at 4:13 PM, jing hua zhao <jinghuazhao at hotmail.com> wrote:
> Dear R-devel,
>
>
> I appear to see differences in behavior of unz between Windows and Linux.
>
>
> url0514 <- "http://data.dft.gov.uk.s3.amazonaws.com/road-accidents-safety-data/Stats19_Data_2005-2014.zip"
> file0514 <- c("Vehicles0514.csv","Casualties0514.csv","Accidents0514.csv")
>
> temp <- tempfile()
> download.file(url0514,temp)
> a0514 <<- read.csv(unz(temp, file0514[3]))
>
> c0514 <<- read.csv(unz(temp, file0514[2]))
>
> v0514 <<- read.csv(unz(temp, file0514[1]))
>
>
> Under Windows, I noticed that there are variables i..Accident_Index in objects [a|c|v]0514, but this is not the case if zip file contains only one file, i.e.,
>
> file2015 <- c("Vehicles_2015.csv","Casualties_2015.csv","Accidents_2015.csv")
> url2015 <- "http://data.dft.gov.uk/road-accidents-safety-data/RoadSafetyData_2015.zip"
> download.file(url2015,temp)
> v2015 <<- read.csv(unz(temp, file2015[1]))
> c2015 <<- read.csv(unz(temp, file2015[2]))
> a2015 <<- read.csv(unz(temp, file2015[3]))
>
>
> so to combine [a|c|v]0514 and [a|c|v]2015, I need to add something like
>
>
> names(a0514)[names(a0514)=="?..Accident_Index"] <- "Accident_Index"
> names(c0514)[names(c0514)=="?..Accident_Index"] <- "Accident_Index"
> names(v0514)[names(v0514)=="?..Accident_Index"] <- "Accident_Index"
>
>
> This is unnecessary under Linux (RHEL), since those i..Accident_Index have no i.. prefix.
>
>
> Do I miss anything here?
>
>
> Many thanks,
>
>
>
>
> Jing Hua Zhao
>
>         [[alternative HTML version deleted]]
>
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From hpages at fredhutch.org  Fri Feb 10 02:51:27 2017
From: hpages at fredhutch.org (=?UTF-8?B?SGVydsOpIFBhZ8Oocw==?=)
Date: Thu, 9 Feb 2017 17:51:27 -0800
Subject: [Rd] R 'base' returning 0 as sum of NAs
In-Reply-To: <CAKvBZF2WBbUStVMowSjEv9hRTaR4YEKB=_mEVP=SKWjwsnzbOA@mail.gmail.com>
References: <CAKvBZF2WBbUStVMowSjEv9hRTaR4YEKB=_mEVP=SKWjwsnzbOA@mail.gmail.com>
Message-ID: <233b1cbd-c7fe-9714-72d4-b7073dd364f0@fredhutch.org>

On 01/11/2017 02:33 AM, Alex Ivan Howard wrote:
> There is nothing to sum
> over, so it shouldn't actually be able to return a concrete numeric value?

How much did you spend at the grocery store if you didn't buy anything?

H.


From dstr7320 at uni.sydney.edu.au  Fri Feb 10 03:00:08 2017
From: dstr7320 at uni.sydney.edu.au (Dario Strbenac)
Date: Fri, 10 Feb 2017 02:00:08 +0000
Subject: [Rd] Grapics Device Resolution Limits
Message-ID: <MWHPR01MB27011180C046283EE5E82B44CD440@MWHPR01MB2701.prod.exchangelabs.com>

Good day,

Could the documentation of graphics devices give some explanation of how big the bitmap limits are? For example,

> png("Figure1A.png", h = 7, w = 7, res = 1000, units = "cm")

Results in Error: unable to start png() device, but the help page of devices doesn't explain that there are any limits or how they are determined. The wording of the error message could also be improved, to explain that the resolution is too high or the dimensions are too large.

> sessionInfo()
R version 3.3.2 Patched (2017-02-07 r72138)
Platform: i386-w64-mingw32/i386 (32-bit)
Running under: Windows 7 (build 7601) Service Pack 1

--------------------------------------
Dario Strbenac
University of Sydney
Camperdown NSW 2050
Australia


From goran.brostrom at umu.se  Fri Feb 10 14:53:59 2017
From: goran.brostrom at umu.se (=?UTF-8?Q?G=c3=b6ran_Brostr=c3=b6m?=)
Date: Fri, 10 Feb 2017 14:53:59 +0100
Subject: [Rd] Ancient C /Fortran code linpack error
In-Reply-To: <22684.40017.122891.70235@stat.math.ethz.ch>
References: <7240dae6-2dc9-88ec-c9c8-f552fc1c2dd5@umu.se>
	<7B0E2308-8715-4BAA-A9F3-4FFDADF990A2@xs4all.nl>
	<22684.40017.122891.70235@stat.math.ethz.ch>
Message-ID: <8b7e4792-f306-87e6-3cb8-7d1611d1a640@umu.se>

Thanks to all who answered my third question. I learned something, but:

On 2017-02-09 17:44, Martin Maechler wrote:
>
>>> On 9 Feb 2017, at 16:00, G?ran Brostr?m <goran.brostrom at umu.se> wrote:
>>>
>>> In my package 'glmmML' I'm using old C code and linpack in the optimizing procedure. Specifically, one part of the code looks like this:
>>>
>>>    F77_CALL(dpoco)(*hessian, &bdim, &bdim, &rcond, work, info);
>>>    if (*info == 0){
>>>        F77_CALL(dpodi)(*hessian, &bdim, &bdim, det, &job);
>>>        ........
>>>
>>> This usually works OK, but with an ill-conditioned data set (from a user of glmmML) it happened that the hessian was all nan. However, dpoco returned *info = 0 (no error!) and then the call to dpodi hanged R!
>>>
>>> I googled for C and nan and found a work-around: Change 'if ...' to
>>>
>>>   if (*info == 0 & (hessian[0][0] == hessian[0][0])){
>>>
>>> which works as a test of hessian[0][0] (not) being NaN.
>>>
>>> I'm using the .C interface for calling C code.
>>>
>>> Any thoughts on how to best handle the situation? Is this a bug in dpoco? Is there a simple way to test for any NaNs in a vector?
>
>> You should/could use macro R_FINITE to test each entry of the hessian.
>> In package nleqslv I test for a "correct" jacobian like this in file nleqslv.c in function fcnjac:
>
>>     for (j = 0; j < *n; j++)
>>         for (i = 0; i < *n; i++) {
>>             if( !R_FINITE(REAL(sexp_fjac)[(*n)*j + i]) )
>>                 error("non-finite value(s) returned by jacobian (row=%d,col=%d)",i+1,j+1);
>>             rjac[(*ldr)*j + i] = REAL(sexp_fjac)[(*n)*j + i];
>>         }
>
> A minor hint  on that:  While REAL(.)  (or INTEGER(.) ...)  is really cheap in
> the R sources themselves, that is not the case in package code.
>
> Hence, not only nicer to read but even faster is
>
>   double *fj = REAL(sexp_fjac);
>   for (j = 0; j < *n; j++)
>     for (i = 0; i < *n; i++) {
>         if( !R_FINITE(fj[(*n)*j + i]) )
>            error("non-finite value(s) returned by jacobian (row=%d,col=%d)",i+1,j+1);
>            rjac[(*ldr)*j + i] = fj[(*n)*j + i];
>      }
>
[...]

isn't this even easier to read (and correct?):

     for (j = 0; j < n*; j++)
          for (i = 0; i < n*; i++){
               if ( !R_FINITE(hessian[i][j]) ) error("blah...")
          }

? In .C land, that is. (And sure, I'm afraid of ?Inf in this context.)

Thanks again, G?ran


From bhh at xs4all.nl  Fri Feb 10 16:13:53 2017
From: bhh at xs4all.nl (Berend Hasselman)
Date: Fri, 10 Feb 2017 16:13:53 +0100
Subject: [Rd] Ancient C /Fortran code linpack error
In-Reply-To: <8b7e4792-f306-87e6-3cb8-7d1611d1a640@umu.se>
References: <7240dae6-2dc9-88ec-c9c8-f552fc1c2dd5@umu.se>
	<7B0E2308-8715-4BAA-A9F3-4FFDADF990A2@xs4all.nl>
	<22684.40017.122891.70235@stat.math.ethz.ch>
	<8b7e4792-f306-87e6-3cb8-7d1611d1a640@umu.se>
Message-ID: <810D55DC-9BA8-4F86-9DFD-C32C7E8697FA@xs4all.nl>


> On 10 Feb 2017, at 14:53, G?ran Brostr?m <goran.brostrom at umu.se> wrote:
> 
> Thanks to all who answered my third question. I learned something, but:
> 
> On 2017-02-09 17:44, Martin Maechler wrote:
>> 
>>>> On 9 Feb 2017, at 16:00, G?ran Brostr?m <goran.brostrom at umu.se> wrote:
>>>> 
>>>> In my package 'glmmML' I'm using old C code and linpack in the optimizing procedure. Specifically, one part of the code looks like this:
>>>> 
>>>>   F77_CALL(dpoco)(*hessian, &bdim, &bdim, &rcond, work, info);
>>>>   if (*info == 0){
>>>>       F77_CALL(dpodi)(*hessian, &bdim, &bdim, det, &job);
>>>>       ........
>>>> 
>>>> This usually works OK, but with an ill-conditioned data set (from a user of glmmML) it happened that the hessian was all nan. However, dpoco returned *info = 0 (no error!) and then the call to dpodi hanged R!
>>>> 
>>>> I googled for C and nan and found a work-around: Change 'if ...' to
>>>> 
>>>>  if (*info == 0 & (hessian[0][0] == hessian[0][0])){
>>>> 
>>>> which works as a test of hessian[0][0] (not) being NaN.
>>>> 
>>>> I'm using the .C interface for calling C code.
>>>> 
>>>> Any thoughts on how to best handle the situation? Is this a bug in dpoco? Is there a simple way to test for any NaNs in a vector?
>> 
>>> You should/could use macro R_FINITE to test each entry of the hessian.
>>> In package nleqslv I test for a "correct" jacobian like this in file nleqslv.c in function fcnjac:
>> 
>>>    for (j = 0; j < *n; j++)
>>>        for (i = 0; i < *n; i++) {
>>>            if( !R_FINITE(REAL(sexp_fjac)[(*n)*j + i]) )
>>>                error("non-finite value(s) returned by jacobian (row=%d,col=%d)",i+1,j+1);
>>>            rjac[(*ldr)*j + i] = REAL(sexp_fjac)[(*n)*j + i];
>>>        }
>> 
>> A minor hint  on that:  While REAL(.)  (or INTEGER(.) ...)  is really cheap in
>> the R sources themselves, that is not the case in package code.
>> 
>> Hence, not only nicer to read but even faster is
>> 
>>  double *fj = REAL(sexp_fjac);
>>  for (j = 0; j < *n; j++)
>>    for (i = 0; i < *n; i++) {
>>        if( !R_FINITE(fj[(*n)*j + i]) )
>>           error("non-finite value(s) returned by jacobian (row=%d,col=%d)",i+1,j+1);
>>           rjac[(*ldr)*j + i] = fj[(*n)*j + i];
>>     }
>> 
> [...]
> 
> isn't this even easier to read (and correct?):
> 
>    for (j = 0; j < n*; j++)
>         for (i = 0; i < n*; i++){
>              if ( !R_FINITE(hessian[i][j]) ) error("blah...")
>         }
> 
> ? In .C land, that is. (And sure, I'm afraid of ?Inf in this context.)
> 

Only if you have lda and n equal (which you indeed have; but still worth mentioning) when calling dpoco.

Berend


From maechler at stat.math.ethz.ch  Fri Feb 10 17:26:07 2017
From: maechler at stat.math.ethz.ch (Martin Maechler)
Date: Fri, 10 Feb 2017 17:26:07 +0100
Subject: [Rd] R CMD check error (interfacing to C API of other pkg)
In-Reply-To: <f40b15$5q8gau@ironport10.mayo.edu>
References: <f40b15$5q1tpg@ironport10.mayo.edu>
	<1486630455.1872.36.camel@iarc.fr>
	<f40b15$5q60ma@ironport10.mayo.edu>
	<1486661008.1872.91.camel@iarc.fr>
	<f40b15$5q8gau@ironport10.mayo.edu>
Message-ID: <22685.59807.856379.992073@stat.math.ethz.ch>

>>>>> Therneau, Terry M , Ph D <therneau at mayo.edu>
>>>>>     on Thu, 9 Feb 2017 12:56:17 -0600 writes:

    > Martyn,
    > No, that didn't work.
    > One other thing in the mix (which I don't think is the issue) is that I call one of the 
    > C-entry points of expm.  So the DESCRIPTION file imports expm, the NAMESPACE file imports 
    > expm, and the init.c file is

    > #include "R.h"
    > #include "R_ext/Rdynload.h"

    > /* Interface to expm package. */
    > typedef enum {Ward_2, Ward_1, Ward_buggy_octave} precond_type;
    > void (*expm)(double *x, int n, double *z, precond_type precond_kind);
    > void R_init_hmm(DllInfo *dll)
    > {
    >      expm = (void (*)) R_GetCCallable("expm", "expm");
    > }

    > I don't expect that this is the problem since I stole the
    > above almost verbatim from the msm package.

    > Terry T.

Hmm.  Yes, I can see that the CRAN package  msm  does do this, indeed.

It is interesting if/why that does not produce any notes or rather even warnings.
In principle, if you use the C API of 'expm'  you should use
  'LinkingTo: expm'

see *the* manual, specifically the section

    https://cran.r-project.org/doc/manuals/r-release/R-exts.html#Linking-to-native-routines-in-other-packages

and that section does mention that (unfortunately in my view)
you also should use 'Imports:' or 'Depends:' in addition to the 'LinkingTo:'

Note howver that  'expm' would not have to mentioned 
in the NAMESPACE file.... unless your R functions do use some of
expm's R level functionality.


Martin


From maechler at stat.math.ethz.ch  Fri Feb 10 17:54:12 2017
From: maechler at stat.math.ethz.ch (Martin Maechler)
Date: Fri, 10 Feb 2017 17:54:12 +0100
Subject: [Rd] Grapics Device Resolution Limits
In-Reply-To: <MWHPR01MB27011180C046283EE5E82B44CD440@MWHPR01MB2701.prod.exchangelabs.com>
References: <MWHPR01MB27011180C046283EE5E82B44CD440@MWHPR01MB2701.prod.exchangelabs.com>
Message-ID: <22685.61492.113047.478744@stat.math.ethz.ch>

>>>>> Dario Strbenac <dstr7320 at uni.sydney.edu.au>
>>>>>     on Fri, 10 Feb 2017 02:00:08 +0000 writes:

    > Good day,
    > Could the documentation of graphics devices give some explanation of how big the bitmap limits are? For example,

    >> png("Figure1A.png", h = 7, w = 7, res = 1000, units = "cm")

    > Results in Error: unable to start png() device, 

This is amazing to me.  I see

------------------------------------------------------------------------------
> png("Figure1A.png", h = 7, w = 7, res = 1000, units = "cm")
> plot(1)
> dev.off()
null device 
          1 
> file.info("Figure1A.png")[1:5]
              size isdir mode               mtime               ctime
Figure1A.png 41272 FALSE  644 2017-02-10 17:40:42 2017-02-10 17:40:42
> 
------------------------------------------------------------------------------

in three different versions of R I've tried (all were 64-bit Linux).
Note how *small* the file is.
Now, I've also tried a 32-bit version of Linux (Ubuntu 14.04 LTS) and get 
a similar result (not exactly the same number of bytes for the file size).


> but the help page of devices doesn't explain that there are any limits or how they are determined. The wording of the error message could also be improved, to explain that the resolution is too high or the dimensions are too large.

If one/some of those who can reproduce the problem in their
versions of R  provide (concise and not hard to read) patches to
the source of R, we'd probably gratefully accept them..

Martin Maechler

    >> sessionInfo()
    > R version 3.3.2 Patched (2017-02-07 r72138)
    > Platform: i386-w64-mingw32/i386 (32-bit)
    > Running under: Windows 7 (build 7601) Service Pack 1

    > --------------------------------------
    > Dario Strbenac
    > University of Sydney
    > Camperdown NSW 2050
    > Australia

    > ______________________________________________
    > R-devel at r-project.org mailing list
    > https://stat.ethz.ch/mailman/listinfo/r-devel


From wdunlap at tibco.com  Fri Feb 10 18:32:45 2017
From: wdunlap at tibco.com (William Dunlap)
Date: Fri, 10 Feb 2017 09:32:45 -0800
Subject: [Rd] Grapics Device Resolution Limits
In-Reply-To: <MWHPR01MB27011180C046283EE5E82B44CD440@MWHPR01MB2701.prod.exchangelabs.com>
References: <MWHPR01MB27011180C046283EE5E82B44CD440@MWHPR01MB2701.prod.exchangelabs.com>
Message-ID: <CAF8bMcbtSejvF+HKcHzSW8AkuYKPjNwDodGB-eQXsB0AM3bN7A@mail.gmail.com>

Were you suppressing warnings?  I get a warning along with the "unable
to start device 'png'" in some cases where it fails.  E.g., on Linux

> png("Figure1A.png", h = 7, w = 7, res = 1e5, units = "cm")
Error in png("Figure1A.png", h = 7, w = 7, res = 1e+05, units = "cm") :
  unable to start device 'png'
In addition: Warning message:
In png("Figure1A.png", h = 7, w = 7, res = 1e+05, units = "cm") :
  cairo error 'invalid value (typically too big) for the size of the
input (surface, pattern, etc.)'

or on Windows

> png("Figure1A.png", h = 7, w = 7, res = 100000, units = "cm")
Error in png("Figure1A.png", h = 7, w = 7, res = 1e+05, units = "cm") :
  unable to start png() device
In addition: Warning messages:
1: In png("Figure1A.png", h = 7, w = 7, res = 1e+05, units = "cm") :
  unable to allocate bitmap
2: In png("Figure1A.png", h = 7, w = 7, res = 1e+05, units = "cm") :
  opening device failed

or when the current directory is not writable (or does not exist)

> png("Figure1A.png", h = 7, w = 7, res = 1000, units = "cm")
> plot(1:5)
Error in plot.new() : could not open file 'Figure1A.png'




Bill Dunlap
TIBCO Software
wdunlap tibco.com


On Thu, Feb 9, 2017 at 6:00 PM, Dario Strbenac
<dstr7320 at uni.sydney.edu.au> wrote:
> Good day,
>
> Could the documentation of graphics devices give some explanation of how big the bitmap limits are? For example,
>
>> png("Figure1A.png", h = 7, w = 7, res = 1000, units = "cm")
>
> Results in Error: unable to start png() device, but the help page of devices doesn't explain that there are any limits or how they are determined. The wording of the error message could also be improved, to explain that the resolution is too high or the dimensions are too large.
>
>> sessionInfo()
> R version 3.3.2 Patched (2017-02-07 r72138)
> Platform: i386-w64-mingw32/i386 (32-bit)
> Running under: Windows 7 (build 7601) Service Pack 1
>
> --------------------------------------
> Dario Strbenac
> University of Sydney
> Camperdown NSW 2050
> Australia
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From therneau at mayo.edu  Fri Feb 10 18:42:13 2017
From: therneau at mayo.edu (Therneau, Terry M., Ph.D.)
Date: Fri, 10 Feb 2017 11:42:13 -0600
Subject: [Rd] R CMD check error (interfacing to C API of other pkg):
	Solved
In-Reply-To: <22685.59807.856379.992073@stat.math.ethz.ch>
References: <f40b15$5q1tpg@ironport10.mayo.edu>
	<1486630455.1872.36.camel@iarc.fr> <f40b15$5q60ma@ironport10.mayo.edu>
	<1486661008.1872.91.camel@iarc.fr> <f40b15$5q8gau@ironport10.mayo.edu>
	<22685.59807.856379.992073@stat.math.ethz.ch>
Message-ID: <f40b15$5qg561@ironport10.mayo.edu>

Martin,
   That was it-  I forgot the "LinkingTo" line.  I had read that section of the manual 
twice in the last 2 days, yet somehow missed that critical line both times.  And even 
worse, the final sentence of said section references my own coxme package as an example of 
how to do it correctly!

Thank you all for the help.  My only remaining defense, but a very weak one, is that the 
error message could have been better since it led me to believe that R couldn't find the 
library at all.

Terry Therneau

On 02/10/2017 10:26 AM, Martin Maechler wrote:
>>>>>> Therneau, Terry M , Ph D <therneau at mayo.edu>
>>>>>>      on Thu, 9 Feb 2017 12:56:17 -0600 writes:
>
>      > Martyn,
>      > No, that didn't work.
>      > One other thing in the mix (which I don't think is the issue) is that I call one of the
>      > C-entry points of expm.  So the DESCRIPTION file imports expm, the NAMESPACE file imports
>      > expm, and the init.c file is
>
>      > #include "R.h"
>      > #include "R_ext/Rdynload.h"
>
>      > /* Interface to expm package. */
>      > typedef enum {Ward_2, Ward_1, Ward_buggy_octave} precond_type;
>      > void (*expm)(double *x, int n, double *z, precond_type precond_kind);
>      > void R_init_hmm(DllInfo *dll)
>      > {
>      >      expm = (void (*)) R_GetCCallable("expm", "expm");
>      > }
>
>      > I don't expect that this is the problem since I stole the
>      > above almost verbatim from the msm package.
>
>      > Terry T.
>
> Hmm.  Yes, I can see that the CRAN package  msm  does do this, indeed.
>
> It is interesting if/why that does not produce any notes or rather even warnings.
> In principle, if you use the C API of 'expm'  you should use
>    'LinkingTo: expm'
>
> see *the* manual, specifically the section
>
>      https://cran.r-project.org/doc/manuals/r-release/R-exts.html#Linking-to-native-routines-in-other-packages
>
> and that section does mention that (unfortunately in my view)
> you also should use 'Imports:' or 'Depends:' in addition to the 'LinkingTo:'
>
> Note howver that  'expm' would not have to mentioned
> in the NAMESPACE file.... unless your R functions do use some of
> expm's R level functionality.
>
>
> Martin
>


From goran.brostrom at umu.se  Fri Feb 10 18:54:20 2017
From: goran.brostrom at umu.se (=?UTF-8?Q?G=c3=b6ran_Brostr=c3=b6m?=)
Date: Fri, 10 Feb 2017 18:54:20 +0100
Subject: [Rd] Ancient C /Fortran code linpack error
In-Reply-To: <810D55DC-9BA8-4F86-9DFD-C32C7E8697FA@xs4all.nl>
References: <7240dae6-2dc9-88ec-c9c8-f552fc1c2dd5@umu.se>
	<7B0E2308-8715-4BAA-A9F3-4FFDADF990A2@xs4all.nl>
	<22684.40017.122891.70235@stat.math.ethz.ch>
	<8b7e4792-f306-87e6-3cb8-7d1611d1a640@umu.se>
	<810D55DC-9BA8-4F86-9DFD-C32C7E8697FA@xs4all.nl>
Message-ID: <55969e85-bbde-97a8-9b66-077b81eeb49c@umu.se>

Thanks Berend, I will make that change and submit to CRAN.

Best, G?ran

On 2017-02-10 16:13, Berend Hasselman wrote:

>
>> On 10 Feb 2017, at 14:53, G?ran Brostr?m <goran.brostrom at umu.se> wrote:
>>
>> Thanks to all who answered my third question. I learned something, but:
>>
>> On 2017-02-09 17:44, Martin Maechler wrote:
>>>
>>>>> On 9 Feb 2017, at 16:00, G?ran Brostr?m <goran.brostrom at umu.se> wrote:
>>>>>
>>>>> In my package 'glmmML' I'm using old C code and linpack in the optimizing procedure. Specifically, one part of the code looks like this:
>>>>>
>>>>>   F77_CALL(dpoco)(*hessian, &bdim, &bdim, &rcond, work, info);
>>>>>   if (*info == 0){
>>>>>       F77_CALL(dpodi)(*hessian, &bdim, &bdim, det, &job);
>>>>>       ........
>>>>>
>>>>> This usually works OK, but with an ill-conditioned data set (from a user of glmmML) it happened that the hessian was all nan. However, dpoco returned *info = 0 (no error!) and then the call to dpodi hanged R!
>>>>>
>>>>> I googled for C and nan and found a work-around: Change 'if ...' to
>>>>>
>>>>>  if (*info == 0 & (hessian[0][0] == hessian[0][0])){
>>>>>
>>>>> which works as a test of hessian[0][0] (not) being NaN.
>>>>>
>>>>> I'm using the .C interface for calling C code.
>>>>>
>>>>> Any thoughts on how to best handle the situation? Is this a bug in dpoco? Is there a simple way to test for any NaNs in a vector?
>>>
>>>> You should/could use macro R_FINITE to test each entry of the hessian.
>>>> In package nleqslv I test for a "correct" jacobian like this in file nleqslv.c in function fcnjac:
>>>
>>>>    for (j = 0; j < *n; j++)
>>>>        for (i = 0; i < *n; i++) {
>>>>            if( !R_FINITE(REAL(sexp_fjac)[(*n)*j + i]) )
>>>>                error("non-finite value(s) returned by jacobian (row=%d,col=%d)",i+1,j+1);
>>>>            rjac[(*ldr)*j + i] = REAL(sexp_fjac)[(*n)*j + i];
>>>>        }
>>>
>>> A minor hint  on that:  While REAL(.)  (or INTEGER(.) ...)  is really cheap in
>>> the R sources themselves, that is not the case in package code.
>>>
>>> Hence, not only nicer to read but even faster is
>>>
>>>  double *fj = REAL(sexp_fjac);
>>>  for (j = 0; j < *n; j++)
>>>    for (i = 0; i < *n; i++) {
>>>        if( !R_FINITE(fj[(*n)*j + i]) )
>>>           error("non-finite value(s) returned by jacobian (row=%d,col=%d)",i+1,j+1);
>>>           rjac[(*ldr)*j + i] = fj[(*n)*j + i];
>>>     }
>>>
>> [...]
>>
>> isn't this even easier to read (and correct?):
>>
>>    for (j = 0; j < n*; j++)
>>         for (i = 0; i < n*; i++){
>>              if ( !R_FINITE(hessian[i][j]) ) error("blah...")
>>         }
>>
>> ? In .C land, that is. (And sure, I'm afraid of ?Inf in this context.)
>>
>
> Only if you have lda and n equal (which you indeed have; but still worth mentioning) when calling dpoco.
>
> Berend
>


From henrik.bengtsson at gmail.com  Fri Feb 10 19:40:20 2017
From: henrik.bengtsson at gmail.com (Henrik Bengtsson)
Date: Fri, 10 Feb 2017 10:40:20 -0800
Subject: [Rd] Pressing either Ctrl-\ of Ctrl-4 core dumps R
Message-ID: <CAFDcVCR+SrkrVw8UBaUYrYdDjHOMJK-1tywkONLN5nRG2uVLeQ@mail.gmail.com>

When running R from the terminal on Linux (Ubuntu 16.04), it core
dumps whenever / wherever I press Ctrl-4 or Ctrl-\.  You get thrown
back to the terminal with "Quit (core dump)" being the only message.
Grepping the R source code, it doesn't look like that message is
generated by R itself.  Over on Twitter, it has been confirmed to also
happen on macOS.

$ R -d valgrind --vanilla --quiet
==979== Memcheck, a memory error detector
==979== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==979== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==979== Command: /usr/lib/R/bin/exec/R --vanilla --quiet
==979==
> 1+2
[1] 3

# At next prompt I press Ctrl-\. The same happens also when done in
the middle of an entry.

> ==979==
==979== Process terminating with default action of signal 3 (SIGQUIT)
==979==    at 0x576C9C3: __select_nocancel (syscall-template.S:84)
==979==    by 0x502EABE: R_SelectEx (in /usr/lib/R/lib/libR.so)
==979==    by 0x502EDDF: R_checkActivityEx (in /usr/lib/R/lib/libR.so)
==979==    by 0x502F32B: ??? (in /usr/lib/R/lib/libR.so)
==979==    by 0x4F6988B: Rf_ReplIteration (in /usr/lib/R/lib/libR.so)
==979==    by 0x4F69CF0: ??? (in /usr/lib/R/lib/libR.so)
==979==    by 0x4F69DA7: run_Rmainloop (in /usr/lib/R/lib/libR.so)
==979==    by 0x4007CA: main (in /usr/lib/R/bin/exec/R)
==979==
==979== HEAP SUMMARY:
==979==     in use at exit: 28,981,596 bytes in 13,313 blocks
==979==   total heap usage: 27,002 allocs, 13,689 frees, 49,025,684
bytes allocated
==979==
==979== LEAK SUMMARY:
==979==    definitely lost: 0 bytes in 0 blocks
==979==    indirectly lost: 0 bytes in 0 blocks
==979==      possibly lost: 0 bytes in 0 blocks
==979==    still reachable: 28,981,596 bytes in 13,313 blocks
==979==         suppressed: 0 bytes in 0 blocks
==979== Rerun with --leak-check=full to see details of leaked memory
==979==
==979== For counts of detected and suppressed errors, rerun with: -v
==979== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
Quit (core dumped)

$ R --version
R version 3.3.2 (2016-10-31) -- "Sincere Pumpkin Patch"
Copyright (C) 2016 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

/Henrik


From wdunlap at tibco.com  Fri Feb 10 19:52:49 2017
From: wdunlap at tibco.com (William Dunlap)
Date: Fri, 10 Feb 2017 10:52:49 -0800
Subject: [Rd] Pressing either Ctrl-\ of Ctrl-4 core dumps R
In-Reply-To: <CAFDcVCR+SrkrVw8UBaUYrYdDjHOMJK-1tywkONLN5nRG2uVLeQ@mail.gmail.com>
References: <CAFDcVCR+SrkrVw8UBaUYrYdDjHOMJK-1tywkONLN5nRG2uVLeQ@mail.gmail.com>
Message-ID: <CAF8bMcbTK+cq4BPJcjgspxK-7QJGoyBN9kKwWqSoGeg9hEHiMw@mail.gmail.com>

Control-backslash is the default way to generate SIGQUIT from the
keyboard on Unix and SIGQUIT, by default, aborts the process and
causes it to produce a core dump.  Do you want R to catch SIGQUIT?

% stty --all
speed 38400 baud; rows 24; columns 64; line = 0;
intr = ^C; quit = ^\; erase = ^H; kill = ^U; eof = ^D;
eol = <undef>; eol2 = <undef>; swtch = <undef>; start = ^Q;
stop = ^S; susp = ^Z; rprnt = ^R; werase = ^W; lnext = ^V;
flush = ^O; min = 1; time = 0;
-parenb -parodd -cmspar cs8 -hupcl -cstopb cread -clocal -crtscts
-ignbrk -brkint -ignpar -parmrk -inpck -istrip -inlcr -igncr
icrnl ixon -ixoff -iuclc -ixany -imaxbel -iutf8
opost -olcuc -ocrnl onlcr -onocr -onlret -ofill -ofdel nl0 cr0
tab0 bs0 vt0 ff0
isig icanon iexten echo echoe echok -echonl -noflsh -xcase
-tostop -echoprt echoctl echoke
Bill Dunlap
TIBCO Software
wdunlap tibco.com


On Fri, Feb 10, 2017 at 10:40 AM, Henrik Bengtsson
<henrik.bengtsson at gmail.com> wrote:
> When running R from the terminal on Linux (Ubuntu 16.04), it core
> dumps whenever / wherever I press Ctrl-4 or Ctrl-\.  You get thrown
> back to the terminal with "Quit (core dump)" being the only message.
> Grepping the R source code, it doesn't look like that message is
> generated by R itself.  Over on Twitter, it has been confirmed to also
> happen on macOS.
>
> $ R -d valgrind --vanilla --quiet
> ==979== Memcheck, a memory error detector
> ==979== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
> ==979== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
> ==979== Command: /usr/lib/R/bin/exec/R --vanilla --quiet
> ==979==
>> 1+2
> [1] 3
>
> # At next prompt I press Ctrl-\. The same happens also when done in
> the middle of an entry.
>
>> ==979==
> ==979== Process terminating with default action of signal 3 (SIGQUIT)
> ==979==    at 0x576C9C3: __select_nocancel (syscall-template.S:84)
> ==979==    by 0x502EABE: R_SelectEx (in /usr/lib/R/lib/libR.so)
> ==979==    by 0x502EDDF: R_checkActivityEx (in /usr/lib/R/lib/libR.so)
> ==979==    by 0x502F32B: ??? (in /usr/lib/R/lib/libR.so)
> ==979==    by 0x4F6988B: Rf_ReplIteration (in /usr/lib/R/lib/libR.so)
> ==979==    by 0x4F69CF0: ??? (in /usr/lib/R/lib/libR.so)
> ==979==    by 0x4F69DA7: run_Rmainloop (in /usr/lib/R/lib/libR.so)
> ==979==    by 0x4007CA: main (in /usr/lib/R/bin/exec/R)
> ==979==
> ==979== HEAP SUMMARY:
> ==979==     in use at exit: 28,981,596 bytes in 13,313 blocks
> ==979==   total heap usage: 27,002 allocs, 13,689 frees, 49,025,684
> bytes allocated
> ==979==
> ==979== LEAK SUMMARY:
> ==979==    definitely lost: 0 bytes in 0 blocks
> ==979==    indirectly lost: 0 bytes in 0 blocks
> ==979==      possibly lost: 0 bytes in 0 blocks
> ==979==    still reachable: 28,981,596 bytes in 13,313 blocks
> ==979==         suppressed: 0 bytes in 0 blocks
> ==979== Rerun with --leak-check=full to see details of leaked memory
> ==979==
> ==979== For counts of detected and suppressed errors, rerun with: -v
> ==979== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
> Quit (core dumped)
>
> $ R --version
> R version 3.3.2 (2016-10-31) -- "Sincere Pumpkin Patch"
> Copyright (C) 2016 The R Foundation for Statistical Computing
> Platform: x86_64-pc-linux-gnu (64-bit)
>
> /Henrik
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From luke-tierney at uiowa.edu  Fri Feb 10 20:00:17 2017
From: luke-tierney at uiowa.edu (luke-tierney at uiowa.edu)
Date: Fri, 10 Feb 2017 13:00:17 -0600 (CST)
Subject: [Rd] Pressing either Ctrl-\ of Ctrl-4 core dumps R
In-Reply-To: <CAFDcVCR+SrkrVw8UBaUYrYdDjHOMJK-1tywkONLN5nRG2uVLeQ@mail.gmail.com>
References: <CAFDcVCR+SrkrVw8UBaUYrYdDjHOMJK-1tywkONLN5nRG2uVLeQ@mail.gmail.com>
Message-ID: <alpine.LFD.2.20.1702101251520.6718@itasca.stat.uiowa.edu>

So do a number of other interactive programs when working in a
terminal (e.g. python) since it looks like your terminal is configured
for those two actions to send the SIGQUIT signal. Whether R should
ignore that signal, under some circumstances at least, is another
question.

Best,

luke

On Fri, 10 Feb 2017, Henrik Bengtsson wrote:

> When running R from the terminal on Linux (Ubuntu 16.04), it core
> dumps whenever / wherever I press Ctrl-4 or Ctrl-\.  You get thrown
> back to the terminal with "Quit (core dump)" being the only message.
> Grepping the R source code, it doesn't look like that message is
> generated by R itself.  Over on Twitter, it has been confirmed to also
> happen on macOS.
>
> $ R -d valgrind --vanilla --quiet
> ==979== Memcheck, a memory error detector
> ==979== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
> ==979== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
> ==979== Command: /usr/lib/R/bin/exec/R --vanilla --quiet
> ==979==
>> 1+2
> [1] 3
>
> # At next prompt I press Ctrl-\. The same happens also when done in
> the middle of an entry.
>
>> ==979==
> ==979== Process terminating with default action of signal 3 (SIGQUIT)
> ==979==    at 0x576C9C3: __select_nocancel (syscall-template.S:84)
> ==979==    by 0x502EABE: R_SelectEx (in /usr/lib/R/lib/libR.so)
> ==979==    by 0x502EDDF: R_checkActivityEx (in /usr/lib/R/lib/libR.so)
> ==979==    by 0x502F32B: ??? (in /usr/lib/R/lib/libR.so)
> ==979==    by 0x4F6988B: Rf_ReplIteration (in /usr/lib/R/lib/libR.so)
> ==979==    by 0x4F69CF0: ??? (in /usr/lib/R/lib/libR.so)
> ==979==    by 0x4F69DA7: run_Rmainloop (in /usr/lib/R/lib/libR.so)
> ==979==    by 0x4007CA: main (in /usr/lib/R/bin/exec/R)
> ==979==
> ==979== HEAP SUMMARY:
> ==979==     in use at exit: 28,981,596 bytes in 13,313 blocks
> ==979==   total heap usage: 27,002 allocs, 13,689 frees, 49,025,684
> bytes allocated
> ==979==
> ==979== LEAK SUMMARY:
> ==979==    definitely lost: 0 bytes in 0 blocks
> ==979==    indirectly lost: 0 bytes in 0 blocks
> ==979==      possibly lost: 0 bytes in 0 blocks
> ==979==    still reachable: 28,981,596 bytes in 13,313 blocks
> ==979==         suppressed: 0 bytes in 0 blocks
> ==979== Rerun with --leak-check=full to see details of leaked memory
> ==979==
> ==979== For counts of detected and suppressed errors, rerun with: -v
> ==979== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
> Quit (core dumped)
>
> $ R --version
> R version 3.3.2 (2016-10-31) -- "Sincere Pumpkin Patch"
> Copyright (C) 2016 The R Foundation for Statistical Computing
> Platform: x86_64-pc-linux-gnu (64-bit)
>
> /Henrik
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>

-- 
Luke Tierney
Ralph E. Wareham Professor of Mathematical Sciences
University of Iowa                  Phone:             319-335-3386
Department of Statistics and        Fax:               319-335-3017
    Actuarial Science
241 Schaeffer Hall                  email:   luke-tierney at uiowa.edu
Iowa City, IA 52242                 WWW:  http://www.stat.uiowa.edu


From ripley at stats.ox.ac.uk  Fri Feb 10 20:27:17 2017
From: ripley at stats.ox.ac.uk (Prof Brian Ripley)
Date: Fri, 10 Feb 2017 19:27:17 +0000
Subject: [Rd] Grapics Device Resolution Limits
In-Reply-To: <22685.61492.113047.478744@stat.math.ethz.ch>
References: <MWHPR01MB27011180C046283EE5E82B44CD440@MWHPR01MB2701.prod.exchangelabs.com>
	<22685.61492.113047.478744@stat.math.ethz.ch>
Message-ID: <37d1d5c0-17c0-38bb-c3bf-d5cc09920769@stats.ox.ac.uk>

Note that there are at least 5 separate png() devices, so Linux was not 
using the (default) device used on Windows.

In general, the device-limits info is not on the help page because we do 
not know it.  On Windows the default device limits depend on the OS 
version, 32/64-bit, RAM and the graphics hardware.  This sounds like the 
last: you were asking for 49 megapixels which is far larger than the 
largest screens.  (Or all but the highest-end digital cameras, so one 
could well ask what you can usefully do with such an image.)

Normally you will get warning(s) accompanying that Error, but it might 
just be

Warning: unable to allocate bitmap
Warning: opening device failed

The first of those is reporting what the GraphApp toolkit said, talking 
directly to Windows GDI (and look at the Windows documentation for e.g. 
CreateCompatibleBitmap to see that no limits are mentioned).


Even on Windows you have the option of using other png() devices:

png(filename = "Rplot03d.png",
     width = 480, height = 480, units = "px", pointsize = 12,
     bg = "white", res = NA, family = "", restoreConsole = TRUE,
     type = c("windows", "cairo", "cairo-png"), antialias)

Try the other 2 types: the cairo devices do not use your graphics 
hardware nor MicroSoft's GDI. (The other 2 devices are Xlib on a 
Unix-alike and Quartz on macOS.)


On 10/02/2017 16:54, Martin Maechler wrote:
>>>>>> Dario Strbenac <dstr7320 at uni.sydney.edu.au>
>>>>>>     on Fri, 10 Feb 2017 02:00:08 +0000 writes:
>
>     > Good day,
>     > Could the documentation of graphics devices give some explanation of how big the bitmap limits are? For example,
>
>     >> png("Figure1A.png", h = 7, w = 7, res = 1000, units = "cm")
>
>     > Results in Error: unable to start png() device,
>
> This is amazing to me.  I see
>
> ------------------------------------------------------------------------------
>> png("Figure1A.png", h = 7, w = 7, res = 1000, units = "cm")
>> plot(1)
>> dev.off()
> null device
>           1
>> file.info("Figure1A.png")[1:5]
>               size isdir mode               mtime               ctime
> Figure1A.png 41272 FALSE  644 2017-02-10 17:40:42 2017-02-10 17:40:42
>>
> ------------------------------------------------------------------------------
>
> in three different versions of R I've tried (all were 64-bit Linux).
> Note how *small* the file is.
> Now, I've also tried a 32-bit version of Linux (Ubuntu 14.04 LTS) and get
> a similar result (not exactly the same number of bytes for the file size).
>
>
>> but the help page of devices doesn't explain that there are any limits or how they are determined. The wording of the error message could also be improved, to explain that the resolution is too high or the dimensions are too large.
>
> If one/some of those who can reproduce the problem in their
> versions of R  provide (concise and not hard to read) patches to
> the source of R, we'd probably gratefully accept them..
>
> Martin Maechler
>
>     >> sessionInfo()
>     > R version 3.3.2 Patched (2017-02-07 r72138)
>     > Platform: i386-w64-mingw32/i386 (32-bit)
>     > Running under: Windows 7 (build 7601) Service Pack 1
>
>     > --------------------------------------
>     > Dario Strbenac
>     > University of Sydney
>     > Camperdown NSW 2050
>     > Australia

-- 
Brian D. Ripley,                  ripley at stats.ox.ac.uk
Emeritus Professor of Applied Statistics, University of Oxford


From ripley at stats.ox.ac.uk  Fri Feb 10 20:37:19 2017
From: ripley at stats.ox.ac.uk (Prof Brian Ripley)
Date: Fri, 10 Feb 2017 19:37:19 +0000
Subject: [Rd] Grapics Device Resolution Limits
In-Reply-To: <37d1d5c0-17c0-38bb-c3bf-d5cc09920769@stats.ox.ac.uk>
References: <MWHPR01MB27011180C046283EE5E82B44CD440@MWHPR01MB2701.prod.exchangelabs.com>
	<22685.61492.113047.478744@stat.math.ethz.ch>
	<37d1d5c0-17c0-38bb-c3bf-d5cc09920769@stats.ox.ac.uk>
Message-ID: <16afdf42-2d7b-c483-8da1-0f27fb17dc2f@stats.ox.ac.uk>

On 10/02/2017 19:27, Prof Brian Ripley wrote:
> Note that there are at least 5 separate png() devices, so Linux was not
> using the (default) device used on Windows.
>
> In general, the device-limits info is not on the help page because we do
> not know it.  On Windows the default device limits depend on the OS
> version, 32/64-bit, RAM and the graphics hardware.  This sounds like the
> last: you were asking for 49 megapixels which is far larger than the
> largest screens.  (Or all but the highest-end digital cameras, so one
> could well ask what you can usefully do with such an image.)

Scratch that: res is in ppi so the image should be 2755px square: still 
rather large.

> Normally you will get warning(s) accompanying that Error, but it might
> just be
>
> Warning: unable to allocate bitmap
> Warning: opening device failed
>
> The first of those is reporting what the GraphApp toolkit said, talking
> directly to Windows GDI (and look at the Windows documentation for e.g.
> CreateCompatibleBitmap to see that no limits are mentioned).
>
>
> Even on Windows you have the option of using other png() devices:
>
> png(filename = "Rplot03d.png",
>     width = 480, height = 480, units = "px", pointsize = 12,
>     bg = "white", res = NA, family = "", restoreConsole = TRUE,
>     type = c("windows", "cairo", "cairo-png"), antialias)
>
> Try the other 2 types: the cairo devices do not use your graphics
> hardware nor MicroSoft's GDI. (The other 2 devices are Xlib on a
> Unix-alike and Quartz on macOS.)
>
>
> On 10/02/2017 16:54, Martin Maechler wrote:
>>>>>>> Dario Strbenac <dstr7320 at uni.sydney.edu.au>
>>>>>>>     on Fri, 10 Feb 2017 02:00:08 +0000 writes:
>>
>>     > Good day,
>>     > Could the documentation of graphics devices give some
>> explanation of how big the bitmap limits are? For example,
>>
>>     >> png("Figure1A.png", h = 7, w = 7, res = 1000, units = "cm")
>>
>>     > Results in Error: unable to start png() device,
>>
>> This is amazing to me.  I see
>>
>> ------------------------------------------------------------------------------
>>
>>> png("Figure1A.png", h = 7, w = 7, res = 1000, units = "cm")
>>> plot(1)
>>> dev.off()
>> null device
>>           1
>>> file.info("Figure1A.png")[1:5]
>>               size isdir mode               mtime               ctime
>> Figure1A.png 41272 FALSE  644 2017-02-10 17:40:42 2017-02-10 17:40:42
>>>
>> ------------------------------------------------------------------------------
>>
>>
>> in three different versions of R I've tried (all were 64-bit Linux).
>> Note how *small* the file is.
>> Now, I've also tried a 32-bit version of Linux (Ubuntu 14.04 LTS) and get
>> a similar result (not exactly the same number of bytes for the file
>> size).
>>
>>
>>> but the help page of devices doesn't explain that there are any
>>> limits or how they are determined. The wording of the error message
>>> could also be improved, to explain that the resolution is too high or
>>> the dimensions are too large.
>>
>> If one/some of those who can reproduce the problem in their
>> versions of R  provide (concise and not hard to read) patches to
>> the source of R, we'd probably gratefully accept them..
>>
>> Martin Maechler
>>
>>     >> sessionInfo()
>>     > R version 3.3.2 Patched (2017-02-07 r72138)
>>     > Platform: i386-w64-mingw32/i386 (32-bit)
>>     > Running under: Windows 7 (build 7601) Service Pack 1
>>
>>     > --------------------------------------
>>     > Dario Strbenac
>>     > University of Sydney
>>     > Camperdown NSW 2050
>>     > Australia
>


-- 
Brian D. Ripley,                  ripley at stats.ox.ac.uk
Emeritus Professor of Applied Statistics, University of Oxford


From htl10 at users.sourceforge.net  Sat Feb 11 20:30:26 2017
From: htl10 at users.sourceforge.net (Hin-Tak Leung)
Date: Sat, 11 Feb 2017 19:30:26 +0000 (UTC)
Subject: [Rd] another fix for R crashes under enable-strict-barrier, lto,
 trunk@72156
References: <1828754943.4447947.1486841426784.ref@mail.yahoo.com>
Message-ID: <1828754943.4447947.1486841426784@mail.yahoo.com>

I haven' t touched R for some 18 months, and so I have no idea if this is a recent problems or not; but it certainly did not segfault two years ago.

Since it has been crashing (segfault) under 'make check-all' for over a month, I reckon I'll have to look at it myself, to have it fixed.

I have been having the ' --enable-memory-profiling --enable-strict-barrier --with-valgrind-instrumentation=2" options
for perhaps a decade - because I work(ed) with people who like to write buggy code :-(. And I also run 'make check-all' from time to time until two years ago.

./configure --enable-memory-profiling --enable-strict-barrier --enable-byte-compiled-packages --with-valgrind-instrumentation=2 --enable-lto

current R dev crashes in make check-all . The fix is this:


--- a/src/main/memory.c
+++ b/src/main/memory.c
@@ -3444,7 +3444,7 @@ R_xlen_t (XTRUELENGTH)(SEXP x) { return XTRUELENGTH(CHK2(x)); }
 int  (IS_LONG_VEC)(SEXP x) { return IS_LONG_VEC(CHK2(x)); }
 
 const char *(R_CHAR)(SEXP x) {
-    if(TYPEOF(x) != CHARSXP)
+    if(x && (TYPEOF(x) != CHARSXP))
        error("%s() can only be applied to a '%s', not a '%s'",
              "CHAR", "CHARSXP", type2char(TYPEOF(x)));
     return (const char *)CHAR(x);

It is a fairly obvious fix to a bug since

include/Rinternals.h:#define TYPEOF(x)	((x)->sxpinfo.type)

and it was trying to de-reference "0->sxpinfo.type"  (under  --enable-strict-barrier I think).

So there.

While I subscribe to R-devel, I switched off delivery, so please CC if a response is required.


From jeroen.ooms at stat.ucla.edu  Sun Feb 12 10:35:44 2017
From: jeroen.ooms at stat.ucla.edu (Jeroen Ooms)
Date: Sun, 12 Feb 2017 10:35:44 +0100
Subject: [Rd] parallel and tempdir()
Message-ID: <CABFfbXtbCgpjK91nWM_O4Q2m3YwyrQ14ibHFohN1pn1OoY5mag@mail.gmail.com>

A forked process in mcparallel will wipe the (shared) tempdir when it
quits. I think this is almost always undesirable:

  file.exists(tempdir())
  parallel::mcparallel(q("no"))
  file.exists(tempdir()) # false
  file.create(tempfile()) # error

A simple solution might be to skip over R_CleanTempDir when
R_isForkedChild. Example patch: https://git.io/vDwyf

In addition, I would like to suggest to add an option to mcparallel to
set a custom tempdir in the fork to prevent potential conflicts. I
tried implementing this myself but found that setting R_TempDir is not
allowed by CMD check, and Sys_TempDir (which is what actually gets
wiped) is invisible behind attribute_hidden. So I suppose this may
only be done in base.


From henrik.bengtsson at gmail.com  Sun Feb 12 23:54:10 2017
From: henrik.bengtsson at gmail.com (Henrik Bengtsson)
Date: Sun, 12 Feb 2017 14:54:10 -0800
Subject: [Rd] Pressing either Ctrl-\ of Ctrl-4 core dumps R
In-Reply-To: <alpine.LFD.2.20.1702101251520.6718@itasca.stat.uiowa.edu>
References: <CAFDcVCR+SrkrVw8UBaUYrYdDjHOMJK-1tywkONLN5nRG2uVLeQ@mail.gmail.com>
	<alpine.LFD.2.20.1702101251520.6718@itasca.stat.uiowa.edu>
Message-ID: <CAFDcVCST0H=omid4eW1_VyapmAK1-rkGK=83rUvR6CmarNOeCw@mail.gmail.com>

Thanks for these explanations - it all makes sense, that is, the
default behavior for a process that does not capture SIGQUIT is to
quit and perform a core dump
(https://en.wikipedia.org/wiki/Unix_signal#SIGQUIT).

Then the remaining question, as Luke says, is: should R handle this
signal?  For instance, in interactive mode, SIGQUIT could maybe bring
up:

Possible actions:
1: abort (with core dump, if enabled)
2: normal R exit
3: exit R without saving workspace
4: exit R saving workspace
5: ignore SIGQUIT (continue evaluation)
Selection:

giving the option to ignore a SIGQUIT send by mistake.  Not sure how
big of a problem this is (I'm surprise I never hit Ctrl+\ by mistake
previously).


Also, I'm sharing my notes about stty and SIGQUIT in case someone else
finds them useful:

My terminal (Linux / Ubuntu 16.04) settings are the same as Bill's
(stty --all). Thus, pressing Ctrl+\ causes the terminal to signals
SIGQUIT to the running process (= R).  Since R does not handle /
capture this specifically, this results in the process to quit and
perform a core dump.  Pressing Ctrl+\ is effectively the same a
calling 'kill -s QUIT <pid>'.

One can disable the QUIT signal send by the terminal by:

$ stty quit ''

such that one gets:

$ stty --all
speed 38400 baud; rows 33; columns 80; line = 0;
intr = ^C; quit = <undef>; erase = ^?; kill = ^U; eof = ^D; eol = <undef>;
eol2 = <undef>; swtch = <undef>; start = ^Q; stop = ^S; susp = ^Z; rprnt = ^R;
werase = ^W; lnext = ^V; discard = ^O; min = 1; time = 0;
-parenb -parodd -cmspar cs8 -hupcl -cstopb cread -clocal -crtscts
-ignbrk -brkint -ignpar -parmrk -inpck -istrip -inlcr -igncr icrnl ixon -ixoff
-iuclc -ixany -imaxbel iutf8
opost -olcuc -ocrnl onlcr -onocr -onlret -ofill -ofdel nl0 cr0 tab0 bs0 vt0 ff0
isig icanon iexten echo echoe echok -echonl -noflsh -xcase -tostop -echoprt
echoctl echoke -flusho -extproc

This will prevent QUIT to be signalled when pressing Ctrl+\ and
thereby R (Python, ...) won't core dump.  One can of course still use
kill -s QUIT <pid>.

To reset the above, either restart the terminal or use either of:

$ stty quit ^\\    ## caret notation (espaced ^\)
$ stty quit 0x1c   ## hexadecimal notation
$ stty quit 034    ## octal notation
$ stty quit 28     ## decimal notation

I still don't understand why the terminal treats keypress Ctrl+4 the
same as Ctrl+\, but at least I'm not alone;
https://catern.com/posts/terminal_quirks.html#fn.3.

Thanks

Henrik

On Fri, Feb 10, 2017 at 11:00 AM,  <luke-tierney at uiowa.edu> wrote:
> So do a number of other interactive programs when working in a
> terminal (e.g. python) since it looks like your terminal is configured
> for those two actions to send the SIGQUIT signal. Whether R should
> ignore that signal, under some circumstances at least, is another
> question.
>
> Best,
>
> luke
>
>
> On Fri, 10 Feb 2017, Henrik Bengtsson wrote:
>
>> When running R from the terminal on Linux (Ubuntu 16.04), it core
>> dumps whenever / wherever I press Ctrl-4 or Ctrl-\.  You get thrown
>> back to the terminal with "Quit (core dump)" being the only message.
>> Grepping the R source code, it doesn't look like that message is
>> generated by R itself.  Over on Twitter, it has been confirmed to also
>> happen on macOS.
>>
>> $ R -d valgrind --vanilla --quiet
>> ==979== Memcheck, a memory error detector
>> ==979== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
>> ==979== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
>> ==979== Command: /usr/lib/R/bin/exec/R --vanilla --quiet
>> ==979==
>>>
>>> 1+2
>>
>> [1] 3
>>
>> # At next prompt I press Ctrl-\. The same happens also when done in
>> the middle of an entry.
>>
>>> ==979==
>>
>> ==979== Process terminating with default action of signal 3 (SIGQUIT)
>> ==979==    at 0x576C9C3: __select_nocancel (syscall-template.S:84)
>> ==979==    by 0x502EABE: R_SelectEx (in /usr/lib/R/lib/libR.so)
>> ==979==    by 0x502EDDF: R_checkActivityEx (in /usr/lib/R/lib/libR.so)
>> ==979==    by 0x502F32B: ??? (in /usr/lib/R/lib/libR.so)
>> ==979==    by 0x4F6988B: Rf_ReplIteration (in /usr/lib/R/lib/libR.so)
>> ==979==    by 0x4F69CF0: ??? (in /usr/lib/R/lib/libR.so)
>> ==979==    by 0x4F69DA7: run_Rmainloop (in /usr/lib/R/lib/libR.so)
>> ==979==    by 0x4007CA: main (in /usr/lib/R/bin/exec/R)
>> ==979==
>> ==979== HEAP SUMMARY:
>> ==979==     in use at exit: 28,981,596 bytes in 13,313 blocks
>> ==979==   total heap usage: 27,002 allocs, 13,689 frees, 49,025,684
>> bytes allocated
>> ==979==
>> ==979== LEAK SUMMARY:
>> ==979==    definitely lost: 0 bytes in 0 blocks
>> ==979==    indirectly lost: 0 bytes in 0 blocks
>> ==979==      possibly lost: 0 bytes in 0 blocks
>> ==979==    still reachable: 28,981,596 bytes in 13,313 blocks
>> ==979==         suppressed: 0 bytes in 0 blocks
>> ==979== Rerun with --leak-check=full to see details of leaked memory
>> ==979==
>> ==979== For counts of detected and suppressed errors, rerun with: -v
>> ==979== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
>> Quit (core dumped)
>>
>> $ R --version
>> R version 3.3.2 (2016-10-31) -- "Sincere Pumpkin Patch"
>> Copyright (C) 2016 The R Foundation for Statistical Computing
>> Platform: x86_64-pc-linux-gnu (64-bit)
>>
>> /Henrik
>>
>> ______________________________________________
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>
>
> --
> Luke Tierney
> Ralph E. Wareham Professor of Mathematical Sciences
> University of Iowa                  Phone:             319-335-3386
> Department of Statistics and        Fax:               319-335-3017
>    Actuarial Science
> 241 Schaeffer Hall                  email:   luke-tierney at uiowa.edu
> Iowa City, IA 52242                 WWW:  http://www.stat.uiowa.edu


From dstr7320 at uni.sydney.edu.au  Mon Feb 13 01:00:07 2017
From: dstr7320 at uni.sydney.edu.au (Dario Strbenac)
Date: Mon, 13 Feb 2017 00:00:07 +0000
Subject: [Rd] Grapics Device Resolution Limits
In-Reply-To: <16afdf42-2d7b-c483-8da1-0f27fb17dc2f@stats.ox.ac.uk>
References: <MWHPR01MB27011180C046283EE5E82B44CD440@MWHPR01MB2701.prod.exchangelabs.com>
	<22685.61492.113047.478744@stat.math.ethz.ch>
	<37d1d5c0-17c0-38bb-c3bf-d5cc09920769@stats.ox.ac.uk>,
	<16afdf42-2d7b-c483-8da1-0f27fb17dc2f@stats.ox.ac.uk>
Message-ID: <MWHPR01MB27013A0A2215ED11BFE70D8ECD460@MWHPR01MB2701.prod.exchangelabs.com>

Good day,

> In general, the device-limits info is not on the help page because we do not know it.

It seems like it would be near-impossible to do in a cross-platform way.

> Normally you will get warning(s) accompanying that Error ...
> Warning: unable to allocate bitmap
> Warning: opening device failed

Yes, I saw those but omitted them from the question.

> Note that there are at least 5 separate png() devices, so Linux was not using the (default) device used on Windows.

That explains it.

> Try the other 2 types: the cairo devices do not use your graphics hardware nor MicroSoft's GDI.

Indeed, it works with the cairo backend.

> ... one could well ask what you can usefully do with such an image.

Unfortunately, some scientific journals have unrealistic figure requirements, e.g. http://www.jidonline.org/content/authorinfo#idp1498768

--------------------------------------
Dario Strbenac
University of Sydney
Camperdown NSW 2050
Australia

From cu at cua0.org  Mon Feb 13 00:51:45 2017
From: cu at cua0.org (Justin =?utf-8?Q?Bed=C5=91?=)
Date: Mon, 13 Feb 2017 10:51:45 +1100
Subject: [Rd] Bug with zlib version checking for zlib >= 1.2.10,
	R version 3.3.2
Message-ID: <87lgtbx90u.fsf@cua0.org>


Hi,

Posting here as bugzilla is closed to registration.
The zlib version checking code does not handle double digits for the
patch version in the semantic versioning scheme. Consequently, a
./configure fails when using a zlib version ? 1.5.10. I suggest
something like the following patch:

--- a/m4/R.m4
+++ b/m4/R.m4
@@ -3116,7 +3116,7 @@ int main() {
 #ifdef ZLIB_VERSION
 /* Work around Debian bug: it uses 1.2.3.4 even though there was no such
    version on the master site zlib.net */
-  exit(strncmp(ZLIB_VERSION, "1.2.5", 5) < 0);
+  exit(strncmp(ZLIB_VERSION, "1.2.5", 5) < 0 && (strlen(ZLIB_VERSION) < 6 || strncmp(ZLIB_VERSION, "1.2.10", 6) < 0));
 #else
   exit(1);
 #endif

This could of course be improved to properly parse the string.

Cheers,

Justin
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 487 bytes
Desc: not available
URL: <https://stat.ethz.ch/pipermail/r-devel/attachments/20170213/12ffdf5a/attachment.bin>

From henrik.bengtsson at gmail.com  Mon Feb 13 02:25:57 2017
From: henrik.bengtsson at gmail.com (Henrik Bengtsson)
Date: Sun, 12 Feb 2017 17:25:57 -0800
Subject: [Rd] Bug with zlib version checking for zlib >= 1.2.10,
	R version 3.3.2
In-Reply-To: <87lgtbx90u.fsf@cua0.org>
References: <87lgtbx90u.fsf@cua0.org>
Message-ID: <CAFDcVCQy-kyV=06O5mUmLy1ZwX4Ghi01U-nhhRbT+01NemxOVg@mail.gmail.com>

This has been fixed (https://cran.r-project.org/doc/manuals/r-devel/NEWS.html):

CHANGES IN R 3.3.2 patched:

INSTALLATION on a UNIX-ALIKE

* The configure check for the zlib version is now robust to versions
longer than 5 characters, including 1.2.10.

in SVN r71889 (2017-01-03):

https://github.com/wch/r-source/commit/a0fe05ce9d0937ad2334bb370785cb22c71e592b

/Henrik


On Sun, Feb 12, 2017 at 3:51 PM, Justin Bed? <cu at cua0.org> wrote:
>
> Hi,
>
> Posting here as bugzilla is closed to registration.
> The zlib version checking code does not handle double digits for the
> patch version in the semantic versioning scheme. Consequently, a
> ./configure fails when using a zlib version ? 1.5.10. I suggest
> something like the following patch:
>
> --- a/m4/R.m4
> +++ b/m4/R.m4
> @@ -3116,7 +3116,7 @@ int main() {
>  #ifdef ZLIB_VERSION
>  /* Work around Debian bug: it uses 1.2.3.4 even though there was no such
>     version on the master site zlib.net */
> -  exit(strncmp(ZLIB_VERSION, "1.2.5", 5) < 0);
> +  exit(strncmp(ZLIB_VERSION, "1.2.5", 5) < 0 && (strlen(ZLIB_VERSION) < 6 || strncmp(ZLIB_VERSION, "1.2.10", 6) < 0));
>  #else
>    exit(1);
>  #endif
>
> This could of course be improved to properly parse the string.
>
> Cheers,
>
> Justin
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From cu at cua0.org  Mon Feb 13 04:36:40 2017
From: cu at cua0.org (Justin =?utf-8?Q?Bed=C5=91?=)
Date: Mon, 13 Feb 2017 14:36:40 +1100
Subject: [Rd] Bug with zlib version checking for zlib >= 1.2.10,
	R version 3.3.2
In-Reply-To: <CAFDcVCQy-kyV=06O5mUmLy1ZwX4Ghi01U-nhhRbT+01NemxOVg@mail.gmail.com>
References: <87lgtbx90u.fsf@cua0.org>
	<CAFDcVCQy-kyV=06O5mUmLy1ZwX4Ghi01U-nhhRbT+01NemxOVg@mail.gmail.com>
Message-ID: <87h93yyd6f.fsf@cua0.org>


Henrik Bengtsson <henrik.bengtsson at gmail.com> writes:

> This has been fixed (https://cran.r-project.org/doc/manuals/r-devel/NEWS.html):
>
> CHANGES IN R 3.3.2 patched:
>
> INSTALLATION on a UNIX-ALIKE
>
> * The configure check for the zlib version is now robust to versions
> longer than 5 characters, including 1.2.10.
>
> in SVN r71889 (2017-01-03):
>
> https://github.com/wch/r-source/commit/a0fe05ce9d0937ad2334bb370785cb22c71e592b
>
> /Henrik


Thanks, sorry I missed that.

Justin
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 487 bytes
Desc: not available
URL: <https://stat.ethz.ch/pipermail/r-devel/attachments/20170213/d0e3ba2f/attachment.bin>

From pdalgd at gmail.com  Mon Feb 13 10:33:48 2017
From: pdalgd at gmail.com (peter dalgaard)
Date: Mon, 13 Feb 2017 10:33:48 +0100
Subject: [Rd] Pressing either Ctrl-\ of Ctrl-4 core dumps R
In-Reply-To: <CAFDcVCST0H=omid4eW1_VyapmAK1-rkGK=83rUvR6CmarNOeCw@mail.gmail.com>
References: <CAFDcVCR+SrkrVw8UBaUYrYdDjHOMJK-1tywkONLN5nRG2uVLeQ@mail.gmail.com>
	<alpine.LFD.2.20.1702101251520.6718@itasca.stat.uiowa.edu>
	<CAFDcVCST0H=omid4eW1_VyapmAK1-rkGK=83rUvR6CmarNOeCw@mail.gmail.com>
Message-ID: <296186FF-A0BE-4CC1-A0CA-C45FB997B298@gmail.com>


On 12 Feb 2017, at 23:54 , Henrik Bengtsson <henrik.bengtsson at gmail.com> wrote:

> I still don't understand why the terminal treats keypress Ctrl+4 the
> same as Ctrl+\, but at least I'm not alone;
> https://catern.com/posts/terminal_quirks.html#fn.3.

I would guess that this was just to get certain escape chars within reach on non-US keyboard layouts, e.g. the [\] characters are replaced by some permutation of the three extra letters in Scandinavian languages (as Henrik surely knows all about). So the awkward ones were reassigned/duplicated at Ctrl-2 -- Ctrl-8.

On, say, a current Mac Terminal.app, Ctrl-\ should be Ctrl-Shift-Alt-7, but that key combination actually just generates "7". I also recall terminals where some characters could only be obtained via compose sequences, e.g. compose-/-/ for "\", and there was no obvious way to add a Ctrl modifier to that.

-pd


-- 
Peter Dalgaard, Professor,
Center for Statistics, Copenhagen Business School
Solbjerg Plads 3, 2000 Frederiksberg, Denmark
Phone: (+45)38153501
Office: A 4.23
Email: pd.mes at cbs.dk  Priv: PDalgd at gmail.com


From ripley at stats.ox.ac.uk  Tue Feb 14 17:25:30 2017
From: ripley at stats.ox.ac.uk (Prof Brian Ripley)
Date: Tue, 14 Feb 2017 16:25:30 +0000
Subject: [Rd] Registration of native routines
Message-ID: <1514271c-2d83-b373-fdb7-7052c3170112@stats.ox.ac.uk>

Registration of 'native routines' (entry points in compiled code loaded 
into R) has been available for over 14 years, but few packages make use 
of it (less than 10% of those on CRAN with compiled code).

Registration has similar benefits to name spaces in R code:

- it ensures that the routines used by .C, .Call etc are those in your 
package (without needing a PACKAGE argument).

- it avoids polluting the search space for native routines with those 
from your package.

- it checks the number of arguments passed to .Call/.External, and the 
number and optionally the type for .C/.Fortran.

- it finds native routines faster, especially if 10s of name spaces are 
loaded.

Kurt Hornik and I have written a tool to make adding registration much 
easier.  From NEWS in R-devel

     ? Package tools has a new function
       package_native_routine_registration_skeleton() to assist adding
       native-routine registration to a package.  See its help and ?5.4.1
       of ?Writing R Extensions? for how to use it.  (At the time it was
       added it successfully automated adding registration to over 90%
       of CRAN packages which lacked it.  Many of the failures were
       newly-detected bugs in the packages, e.g. 50 packages called
       entry points with varying numbers of arguments and 65 packages
       called entry points not in the package.)

Of the 2450 CRAN packages with compiled code but not registration, this 
tool successfully[*] converts all but 220 out-of-the-box.  Another 25 
packages already use R_init_pkgname and so need the registration info to 
be merged.

Most of the rest fail because of errors in the package but some try to 
do tricky things computing names of routines, and this is noted in the 
skeleton output.

A few of you are using the older mechanism of specifying entry points in 
a useDynLib call in the NAMESPACE file. This shares the first and fourth 
benefits (but registration is faster), but not the second and third.

$5.4 of the 'Writing R Extensions' manual has been re-written with a 
worked example of adding registration.

Shortly, R CMD check --as-cran will note if registration is not fully 
used.  Expect to be asked to add registration: as increasingly large 
numbers of packages are used, avoiding polluting the search space is 
becoming important.

(There are reports that the check in 'R CMD check' on Windows sometimes 
fails to detect use of registration.  This is being looked into: 
meanwhile say so in a CRAN submission if it happens to you.)


[*] R CMD check output is unchanged.

-- 
Brian D. Ripley,                  ripley at stats.ox.ac.uk
Emeritus Professor of Applied Statistics, University of Oxford


From avraham.adler at gmail.com  Tue Feb 14 18:28:27 2017
From: avraham.adler at gmail.com (Avraham Adler)
Date: Tue, 14 Feb 2017 12:28:27 -0500
Subject: [Rd] Registration of native routines
In-Reply-To: <1514271c-2d83-b373-fdb7-7052c3170112@stats.ox.ac.uk>
References: <1514271c-2d83-b373-fdb7-7052c3170112@stats.ox.ac.uk>
Message-ID: <CAL6gwnJKgkBwXLf2E=Y5SXEyXuPbNedmocSAitn4dgz1Pha5_w@mail.gmail.com>

On Tue, Feb 14, 2017 at 11:25 AM, Prof Brian Ripley
<ripley at stats.ox.ac.uk> wrote:
> Registration of 'native routines' (entry points in compiled code loaded into
> R) has been available for over 14 years, but few packages make use of it
> (less than 10% of those on CRAN with compiled code).
>
> Registration has similar benefits to name spaces in R code:
>
> - it ensures that the routines used by .C, .Call etc are those in your
> package (without needing a PACKAGE argument).
>
> - it avoids polluting the search space for native routines with those from
> your package.
>
> - it checks the number of arguments passed to .Call/.External, and the
> number and optionally the type for .C/.Fortran.
>
> - it finds native routines faster, especially if 10s of name spaces are
> loaded.
>
> Kurt Hornik and I have written a tool to make adding registration much
> easier.  From NEWS in R-devel
>
>     ? Package tools has a new function
>       package_native_routine_registration_skeleton() to assist adding
>       native-routine registration to a package.  See its help and ?5.4.1
>       of ?Writing R Extensions? for how to use it.  (At the time it was
>       added it successfully automated adding registration to over 90%
>       of CRAN packages which lacked it.  Many of the failures were
>       newly-detected bugs in the packages, e.g. 50 packages called
>       entry points with varying numbers of arguments and 65 packages
>       called entry points not in the package.)

Hello, Dr., Ripley.

This is fantastic. Is there a way to install this functionality into
an existing 3.3.2 installation, or is it exclusive to
R-deve;/R-3.4-to-be?

Thank you,

Avi


From ripley at stats.ox.ac.uk  Wed Feb 15 08:01:58 2017
From: ripley at stats.ox.ac.uk (Prof Brian Ripley)
Date: Wed, 15 Feb 2017 07:01:58 +0000
Subject: [Rd] Registration of native routines
In-Reply-To: <CAL6gwnJKgkBwXLf2E=Y5SXEyXuPbNedmocSAitn4dgz1Pha5_w@mail.gmail.com>
References: <1514271c-2d83-b373-fdb7-7052c3170112@stats.ox.ac.uk>
	<CAL6gwnJKgkBwXLf2E=Y5SXEyXuPbNedmocSAitn4dgz1Pha5_w@mail.gmail.com>
Message-ID: <36671fa3-a0f8-98d6-9133-b1d1d89dba45@stats.ox.ac.uk>

On 14/02/2017 17:28, Avraham Adler wrote:
> On Tue, Feb 14, 2017 at 11:25 AM, Prof Brian Ripley
> <ripley at stats.ox.ac.uk> wrote:
>> Registration of 'native routines' (entry points in compiled code loaded into
>> R) has been available for over 14 years, but few packages make use of it
>> (less than 10% of those on CRAN with compiled code).
>>
>> Registration has similar benefits to name spaces in R code:
>>
>> - it ensures that the routines used by .C, .Call etc are those in your
>> package (without needing a PACKAGE argument).
>>
>> - it avoids polluting the search space for native routines with those from
>> your package.
>>
>> - it checks the number of arguments passed to .Call/.External, and the
>> number and optionally the type for .C/.Fortran.
>>
>> - it finds native routines faster, especially if 10s of name spaces are
>> loaded.
>>
>> Kurt Hornik and I have written a tool to make adding registration much
>> easier.  From NEWS in R-devel
>>
>>     ? Package tools has a new function
>>       package_native_routine_registration_skeleton() to assist adding
>>       native-routine registration to a package.  See its help and ?5.4.1
>>       of ?Writing R Extensions? for how to use it.  (At the time it was
>>       added it successfully automated adding registration to over 90%
>>       of CRAN packages which lacked it.  Many of the failures were
>>       newly-detected bugs in the packages, e.g. 50 packages called
>>       entry points with varying numbers of arguments and 65 packages
>>       called entry points not in the package.)
>
> Hello, Dr., Ripley.
>
> This is fantastic. Is there a way to install this functionality into
> an existing 3.3.2 installation, or is it exclusive to
> R-deve;/R-3.4-to-be?

You need to run the tool in R-devel to get the skeleton for your 
package.  Everything else will work in any recent version of R.

>
> Thank you,
>
> Avi
>


-- 
Brian D. Ripley,                  ripley at stats.ox.ac.uk
Emeritus Professor of Applied Statistics, University of Oxford


From Rob.Hyndman at monash.edu  Wed Feb 15 11:48:56 2017
From: Rob.Hyndman at monash.edu (Rob J Hyndman)
Date: Wed, 15 Feb 2017 21:48:56 +1100
Subject: [Rd] stats::median
Message-ID: <CAF7e_thQjawXc-U84Xr2pYB-fAkd=TDv9WTYn_c4S9CUUgmqfw@mail.gmail.com>

The generic stats::median method is defined as
   median <- function (x, na.rm = FALSE)  {UseMethod("median")}

I suggest that this should become
   median <- function (x, na.rm = FALSE, ...)  {UseMethod("median")}

This would allow additional S3 methods to be developed with additional
arguments.

Currently I have to over-ride this generic definition in the
demography package because median.demogdata has several other
arguments.

This shouldn't break any code, and will make it easier for new S3
methods to be developed. It is also consistent with almost all other
S3 methods which do include an ellipsis.

-------------------------------------------------------------
Rob J Hyndman
Professor of Statistics, Monash University
www.robjhyndman.com


From avraham.adler at gmail.com  Thu Feb 16 02:48:40 2017
From: avraham.adler at gmail.com (Avraham Adler)
Date: Wed, 15 Feb 2017 20:48:40 -0500
Subject: [Rd] R-devel 2017-02-15: repeated line in /src/gnuwin32/MkRules.dist
Message-ID: <CAL6gwnJrXm0V_aC7NB6RPCQvHTJB=V703y+EyGJHTMPgXcWYGw@mail.gmail.com>

Hello.

Unless I am mistakedn, it seems that lines 49 and 72 are copies of
each other and only one should be necessary to set the whether or not
Windows is 32- or 64-bit. If it were my guess, I'd say lines 48 & 49
are redundant.

Thanks,

Avi


From bbolker at gmail.com  Thu Feb 16 21:37:13 2017
From: bbolker at gmail.com (Ben Bolker)
Date: Thu, 16 Feb 2017 15:37:13 -0500
Subject: [Rd] possible improvement to ?with examples
Message-ID: <afff319d-3390-3b6d-8197-b93d31f99643@mcmaster.ca>

A querent on StackOverflow asked about the with() function

http://stackoverflow.com/questions/42283479/why-when-to-use-with-function#42283479

and asked about the example in ?with

library(MASS)
     with(anorexia, {
         anorex.1 <- glm(Postwt ~ Prewt + Treat + offset(Prewt),
                         family = gaussian)
         summary(anorex.1)
     })

which saves little or no typing relative to

   anorex.1 <- glm(Postwt ~ Prewt + Treat + offset(Prewt),
                         family = gaussian, data=anorexia)

(I would argue that the latter is better practice anyway).

  Could we have something more sensible like

   with(mtcars,mpg[cyl==8 & disp>350])

?  (It could be contrasted directly with

mtcars$mpg[mtcars$cyl==8 & mtcars$disp>350]

)

I'm happy to submit a bug report/patch if that seems appropriate.

  cheers
    Ben Bolker


From jerry.lewis at biogen.com  Fri Feb 17 19:59:04 2017
From: jerry.lewis at biogen.com (Jerry Lewis)
Date: Fri, 17 Feb 2017 18:59:04 +0000
Subject: [Rd] Wish List: Extensions to the derivatives table
Message-ID: <SN1PR12MB03180780C156867FC3A0CB89815D0@SN1PR12MB0318.namprd12.prod.outlook.com>

The derivative table resides in the function D.  In S+ that table is extensible because it is written in the S language.  R is faster but less flexible, since that table is programmed in C.  It would be useful if R provided a mechanism for extending the derivative table, or barring that, provided a broader table.  Currently unsupported mathematical functions of one argument include expm1, log1p, log2, log10, cospi, sinpi, and tanpi.

While manual differentiation of these proposed additions is straight-forward, their absence complicates what otherwise could be much simpler, such as using deriv() or deriv3() to generate functions, for example to use as an nls model.

Thanks,

	[[alternative HTML version deleted]]


From avraham.adler at gmail.com  Fri Feb 17 22:15:33 2017
From: avraham.adler at gmail.com (Avraham Adler)
Date: Fri, 17 Feb 2017 21:15:33 +0000
Subject: [Rd] Wish List: Extensions to the derivatives table
In-Reply-To: <SN1PR12MB03180780C156867FC3A0CB89815D0@SN1PR12MB0318.namprd12.prod.outlook.com>
References: <SN1PR12MB03180780C156867FC3A0CB89815D0@SN1PR12MB0318.namprd12.prod.outlook.com>
Message-ID: <CAL6gwnLONZ9HuARELKm0ODAGVopfOwMWftm2p3c1SDQZ-tw2RA@mail.gmail.com>

Hi.

Unless I'm misremembering, log, exp, sin, cos, and tan are all handled in
deriv3. The functions listed are  specially coded slightly more accurate
versions but can be substituted with native ones for which deriv/deriv3
will work automatically. I believe that if you  write your functions using
log(a + 1) instead of log1p(a) or log(x) / log(2) instead of log2(x) deriv3
will work fine.

Thanks,

Avi

On Fri, Feb 17, 2017 at 2:02 PM Jerry Lewis <jerry.lewis at biogen.com> wrote:

> The derivative table resides in the function D.  In S+ that table is
> extensible because it is written in the S language.  R is faster but less
> flexible, since that table is programmed in C.  It would be useful if R
> provided a mechanism for extending the derivative table, or barring that,
> provided a broader table.  Currently unsupported mathematical functions of
> one argument include expm1, log1p, log2, log10, cospi, sinpi, and tanpi.
>
> While manual differentiation of these proposed additions is
> straight-forward, their absence complicates what otherwise could be much
> simpler, such as using deriv() or deriv3() to generate functions, for
> example to use as an nls model.
>
> Thanks,
>
>         [[alternative HTML version deleted]]
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>
-- 
Sent from Gmail Mobile

	[[alternative HTML version deleted]]


From jerry.lewis at biogen.com  Fri Feb 17 23:13:06 2017
From: jerry.lewis at biogen.com (Jerry Lewis)
Date: Fri, 17 Feb 2017 22:13:06 +0000
Subject: [Rd] Wish List: Extensions to the derivatives table
In-Reply-To: <CAL6gwnLONZ9HuARELKm0ODAGVopfOwMWftm2p3c1SDQZ-tw2RA@mail.gmail.com>
References: <SN1PR12MB03180780C156867FC3A0CB89815D0@SN1PR12MB0318.namprd12.prod.outlook.com>
	<CAL6gwnLONZ9HuARELKm0ODAGVopfOwMWftm2p3c1SDQZ-tw2RA@mail.gmail.com>
Message-ID: <SN1PR12MB0318832AA2C0706676EB730B815D0@SN1PR12MB0318.namprd12.prod.outlook.com>

The issue is that without an extensible derivative table or the proposed extensions, it is not possible to automatically produce (without manual modification of the deriv3 output) a function that avoids catastrophic cancellation regardless of the working range.

Manual modification is not onerous as a one-time exercise, but can be time consuming when it must be done numerous times, for example when evaluating the impact of different parameterizations on parameter effects curvature.  The alternative of more flexible differentiation does not seem to be a difficult addition to R.  In S+ (which does not have deriv3) it would simply involve adding the following lines to the switch statement in D

  expm1 = make.call("*", make.call("exp", expr[[2]]), D(expr[[2]], name)),
  log1p = make.call("/", D(expr[[2]], name), make.call("+", 1., expr[[2]])),
  log2 = make.call("/", make.call("/", D(expr[[2]], name), expr[[2]]), quote(log(2)) ),
  log10 = make.call("/", make.call("/", D(expr[[2]], name), expr[[2]]), quote(log(10)) ),
  cospi = make.call("*", make.call("*", make.call("sinpi", expr[[2]]), make.call("-", D(expr[[2]], name))), quote(pi)),
  sinpi = make.call("*", make.call("*", make.call("cospi", expr[[2]]), D(expr[[2]], name)), quote(pi)),
  tanpi = make.call("/", make.call("*", D(expr[[2]], name), quote(pi)), make.call("^", make.call("cospi", expr[[2]]), 2)),

Jerry

From: Avraham Adler [mailto:avraham.adler at gmail.com]
Sent: Friday, February 17, 2017 4:16 PM
To: Jerry Lewis; r-devel at r-project.org
Subject: Re: [Rd] Wish List: Extensions to the derivatives table

Hi.

Unless I'm misremembering, log, exp, sin, cos, and tan are all handled in deriv3. The functions listed are  specially coded slightly more accurate versions but can be substituted with native ones for which deriv/deriv3 will work automatically. I believe that if you  write your functions using log(a + 1) instead of log1p(a) or log(x) / log(2) instead of log2(x) deriv3 will work fine.

Thanks,

Avi

On Fri, Feb 17, 2017 at 2:02 PM Jerry Lewis <jerry.lewis at biogen.com<mailto:jerry.lewis at biogen.com>> wrote:
The derivative table resides in the function D.  In S+ that table is extensible because it is written in the S language.  R is faster but less flexible, since that table is programmed in C.  It would be useful if R provided a mechanism for extending the derivative table, or barring that, provided a broader table.  Currently unsupported mathematical functions of one argument include expm1, log1p, log2, log10, cospi, sinpi, and tanpi.

While manual differentiation of these proposed additions is straight-forward, their absence complicates what otherwise could be much simpler, such as using deriv() or deriv3() to generate functions, for example to use as an nls model.

Thanks,

        [[alternative HTML version deleted]]

______________________________________________
R-devel at r-project.org<mailto:R-devel at r-project.org> mailing list
https://stat.ethz.ch/mailman/listinfo/r-devel<https://urldefense.proofpoint.com/v2/url?u=https-3A__stat.ethz.ch_mailman_listinfo_r-2Ddevel&d=DwMFaQ&c=n7UHtw8cUfEZZQ61ciL2BA&r=xs_tXUrv91YrLJDF556854t-QoeZJZaWm9FEXA9zM5g&m=-A1aEBZHHGplCfEF7yE3w1qkXptmiyra-em-DMThcAU&s=GJ4FysAkXSzYkfhgXMcAnPtGKT6syHkLAJp9JtkLVik&e=>
--
Sent from Gmail Mobile

	[[alternative HTML version deleted]]


From murdoch.duncan at gmail.com  Sat Feb 18 00:04:38 2017
From: murdoch.duncan at gmail.com (Duncan Murdoch)
Date: Fri, 17 Feb 2017 18:04:38 -0500
Subject: [Rd] Wish List: Extensions to the derivatives table
In-Reply-To: <SN1PR12MB03180780C156867FC3A0CB89815D0@SN1PR12MB0318.namprd12.prod.outlook.com>
References: <SN1PR12MB03180780C156867FC3A0CB89815D0@SN1PR12MB0318.namprd12.prod.outlook.com>
Message-ID: <4d84ab5a-7b52-6989-a001-ad147dedfb0b@gmail.com>

On 17/02/2017 1:59 PM, Jerry Lewis wrote:
> The derivative table resides in the function D.  In S+ that table is extensible because it is written in the S language.  R is faster but less flexible, since that table is programmed in C.  It would be useful if R provided a mechanism for extending the derivative table, or barring that, provided a broader table.  Currently unsupported mathematical functions of one argument include expm1, log1p, log2, log10, cospi, sinpi, and tanpi.
>
> While manual differentiation of these proposed additions is straight-forward, their absence complicates what otherwise could be much simpler, such as using deriv() or deriv3() to generate functions, for example to use as an nls model.

The nlsr package allows you to specify derivatives.

Duncan Murdoch


From jerry.lewis at biogen.com  Sat Feb 18 03:43:10 2017
From: jerry.lewis at biogen.com (Jerry Lewis)
Date: Sat, 18 Feb 2017 02:43:10 +0000
Subject: [Rd] Wish List: Extensions to the derivatives table
In-Reply-To: <4d84ab5a-7b52-6989-a001-ad147dedfb0b@gmail.com>
References: <SN1PR12MB03180780C156867FC3A0CB89815D0@SN1PR12MB0318.namprd12.prod.outlook.com>
	<4d84ab5a-7b52-6989-a001-ad147dedfb0b@gmail.com>
Message-ID: <SN1PR12MB0318605F1C83AFC41DAC7B3B815C0@SN1PR12MB0318.namprd12.prod.outlook.com>

Thank you.  The nlsr package will be a satisfactory alternative once the bug in fnDeriv(..., hessian=TRUE) is patched.  I have notified the maintainer.

Jerry

-----Original Message-----
From: Duncan Murdoch [mailto:murdoch.duncan at gmail.com] 
Sent: Friday, February 17, 2017 6:05 PM
To: Jerry Lewis; r-devel at r-project.org
Subject: Re: [Rd] Wish List: Extensions to the derivatives table

On 17/02/2017 1:59 PM, Jerry Lewis wrote:
> The derivative table resides in the function D.  In S+ that table is extensible because it is written in the S language.  R is faster but less flexible, since that table is programmed in C.  It would be useful if R provided a mechanism for extending the derivative table, or barring that, provided a broader table.  Currently unsupported mathematical functions of one argument include expm1, log1p, log2, log10, cospi, sinpi, and tanpi.
>
> While manual differentiation of these proposed additions is straight-forward, their absence complicates what otherwise could be much simpler, such as using deriv() or deriv3() to generate functions, for example to use as an nls model.

The nlsr package allows you to specify derivatives.

Duncan Murdoch


From ripley at stats.ox.ac.uk  Sun Feb 19 09:19:57 2017
From: ripley at stats.ox.ac.uk (Prof Brian Ripley)
Date: Sun, 19 Feb 2017 08:19:57 +0000
Subject: [Rd] Registration of native routines
In-Reply-To: <1514271c-2d83-b373-fdb7-7052c3170112@stats.ox.ac.uk>
References: <1514271c-2d83-b373-fdb7-7052c3170112@stats.ox.ac.uk>
Message-ID: <9dc2a8bb-b324-f865-be05-499860562741@stats.ox.ac.uk>

On 14/02/2017 16:25, Prof Brian Ripley wrote:
> Registration of 'native routines' (entry points in compiled code loaded
> into R) has been available for over 14 years,

...

> (There are reports that the check in 'R CMD check' on Windows sometimes
> fails to detect use of registration.  This is being looked into:
> meanwhile say so in a CRAN submission if it happens to you.)

One instance has been resolved: for at least 5 years R CMD check for a 
package with compiled code has assumed commands 'nm' and (on Windows) 
'objdump' were on the PATH: these are also needed to detect use of 
registration.  There is now a warning if they are not found.

-- 
Brian D. Ripley,                  ripley at stats.ox.ac.uk
Emeritus Professor of Applied Statistics, University of Oxford


From danielrenato at lycos.com  Sun Feb 19 23:33:47 2017
From: danielrenato at lycos.com (danielrenato at lycos.com)
Date: Sun, 19 Feb 2017 22:33:47 +0000
Subject: [Rd] Suggestion: barplot function
In-Reply-To: <8fbe383a-bb69-9e41-9fd7-7dae9a6a9ec7@atsu.edu>
References: <519488518da576043b52b5bd2c962a7a@lycos.com>
	<8fbe383a-bb69-9e41-9fd7-7dae9a6a9ec7@atsu.edu>
Message-ID: <ef8a9d87b37c96678de9c42c0f3ec4ba@lycos.com>

Hi Marc and Robert, 

Thank you so much for the answer! 

I agree with both of you, specially with Robert "barplots are a common
graphing mechanism used by my scientific colleagues to convey their
data, and I don't see that changing any time soon... The one thing that
is even less forgivable ... is bars with no dispersion indication at
all." (what barplot() allows). 

Nowadays there are dozens of new papers everyday, and to make it
easier/faster to the readers, it is very common (in biological sciences)
authors show the data using bar-plots (that represent mean of treatments
and the standard deviation - and usually with letters representing if
the treatments are different, or not, using some statistical test). 

Maybe it is not a great way, but it is in an intuitive way largely used
in natural sciences that make it easier to the readers. And it is
accepted in most of the scientific journals, including Science, Nature,
PNAS, Frontiers... 

I agree with Marc that it is nice that R is flexible, so people can go
around even that it is not the default. However it is a difficult task
for most of the users (e.g.from biological sciences). 

Thank you Marc and Robert, 

Cheers, Daniel 

On 2017-02-03 14:23, Robert Baer wrote:

> On 1/27/2017 8:30 AM, danielrenato at lycos.com wrote: 
> 
>> Hello developers folks!
>> 
>> First, congratulations for the wonderful work with R.
>> 
>> For science, barplots with error bars are very important. We were wondering that is so easy to use the boxplot function:
>> 
>> boxplot(Spores~treatment, col=treatment_colors)
>> 
>> But there is no such function for barplots with standard deviation or standard error. It becomes a "journey" to plot a simple graph (e.g. https://www.r-bloggers.com/building-barplots-with-error-bars/).
>> 
>> The same way that is easy to use the boxplot function, do you think it is possible to upgrade the barplot function: i.e.: barplot(Spores~treatment, error.bar=standard_error, col=treatment_colors)
> Marc may not speak for R Core, but he certainly has summarized what has been an apparent consensus attitude to barplot() and confidence bars in this community over the last decade.  Further, he is probably right about no changes after this many years.
> 
> I might mention that if you want a close cousin to barplot() that does what you want with base graphics (from the drawing mechanics point of view) see the barplot2() function in the gplots package. You provide your own bar lengths.  Regardless of their merits, barplots are a common graphing mechanism used by my scientific colleagues to convey their data, and I don't see that changing any time soon.  The one thing that is even less forgivable than dynamite plots is bars with no dispersion indication at all. Too bad barplot2() isn't the default.
> 
>> Thank you so much!
>> Daniel, FU-Berlin
>> 
>> ______________________________________________
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel
	[[alternative HTML version deleted]]


From maechler at stat.math.ethz.ch  Mon Feb 20 10:56:22 2017
From: maechler at stat.math.ethz.ch (Martin Maechler)
Date: Mon, 20 Feb 2017 10:56:22 +0100
Subject: [Rd] another fix for R crashes under enable-strict-barrier, lto,
 trunk@72156
In-Reply-To: <1828754943.4447947.1486841426784@mail.yahoo.com>
References: <1828754943.4447947.1486841426784.ref@mail.yahoo.com>
	<1828754943.4447947.1486841426784@mail.yahoo.com>
Message-ID: <22698.48454.527211.503219@stat.math.ethz.ch>

>>>>> Hin-Tak Leung <htl10 at users.sourceforge.net>
>>>>>     on Sat, 11 Feb 2017 19:30:26 +0000 writes:

    > I haven' t touched R for some 18 months, and so I have no
    > idea if this is a recent problems or not; but it certainly
    > did not segfault two years ago.  Since it has been
    > crashing (segfault) under 'make check-all' for over a
    > month, I reckon I'll have to look at it myself, to have it
    > fixed.

    > I have been having the ' --enable-memory-profiling --enable-strict-barrier --with-valgrind-instrumentation=2" options

    > for perhaps a decade - because I work(ed) with people who
    > like to write buggy code :-(. And I also run 'make
    > check-all' from time to time until two years ago.

    > ./configure --enable-memory-profiling --enable-strict-barrier --enable-byte-compiled-packages --with-valgrind-instrumentation=2 --enable-lto

    > current R dev crashes in make check-all . The fix is this:


    > --- a/src/main/memory.c
    > +++ b/src/main/memory.c
    > @@ -3444,7 +3444,7 @@ R_xlen_t (XTRUELENGTH)(SEXP x) { return XTRUELENGTH(CHK2(x)); }
    >  int  (IS_LONG_VEC)(SEXP x) { return IS_LONG_VEC(CHK2(x)); }

    >  const char *(R_CHAR)(SEXP x) {
    > -    if(TYPEOF(x) != CHARSXP)
    > +    if(x && (TYPEOF(x) != CHARSXP))
    >         error("%s() can only be applied to a '%s', not a '%s'",
    >               "CHAR", "CHARSXP", type2char(TYPEOF(x)));
    >      return (const char *)CHAR(x);


    > It is a fairly obvious fix to a bug since

    > include/Rinternals.h:#define TYPEOF(x) ((x)->sxpinfo.type)

    > and it was trying to de-reference "0->sxpinfo.type" (under
    > --enable-strict-barrier I think).

Thank you  Hin-Tak!

I did not yet try to reproduce the segfault, and I am not
the expert here.  Just some remarks and a follow up question:

Typically, the above R_CHAR() is equivalent to the  CHAR()
macro which is used in many places.  I  _think_ that the bug is
that this is called with '0' instead of a proper SEXP  in your
case and the bug fix may be more appropriate "up stream", i.e.,
at the place where that call happens  rather than inside
R_CHAR.

Any chance you saw or can get more info about the location of
the crash, such as a stack trace ? 

The idiom     if(TYPEOF(x)  ==  <some>SXP)
is used in many places in the R sources, and I think we never
prepend that with a  'x && '  like you propose above.




    > So there.

    > While I subscribe to R-devel, I switched off delivery, so
    > please CC if a response is required.


From maechler at stat.math.ethz.ch  Mon Feb 20 15:06:54 2017
From: maechler at stat.math.ethz.ch (Martin Maechler)
Date: Mon, 20 Feb 2017 15:06:54 +0100
Subject: [Rd] Wish List: Extensions to the derivatives table
In-Reply-To: <SN1PR12MB0318832AA2C0706676EB730B815D0@SN1PR12MB0318.namprd12.prod.outlook.com>
References: <SN1PR12MB03180780C156867FC3A0CB89815D0@SN1PR12MB0318.namprd12.prod.outlook.com>
	<CAL6gwnLONZ9HuARELKm0ODAGVopfOwMWftm2p3c1SDQZ-tw2RA@mail.gmail.com>
	<SN1PR12MB0318832AA2C0706676EB730B815D0@SN1PR12MB0318.namprd12.prod.outlook.com>
Message-ID: <22698.63486.696052.788843@stat.math.ethz.ch>

> 
> The issue is that without an extensible derivative table or the proposed extensions, it is not possible to automatically produce (without manual modification of the deriv3 output) a function that avoids catastrophic cancellation regardless of the working range.
> Manual modification is not onerous as a one-time exercise, but can be time consuming when it must be done numerous times, for example when evaluating the impact of different parameterizations on parameter effects curvature.  The alternative of more flexible differentiation does not seem to be a difficult addition to R.  In S+ (which does not have deriv3) it would simply involve adding the following lines to the switch statement in D
> 
>   expm1 = make.call("*", make.call("exp", expr[[2]]), D(expr[[2]], name)),
>   log1p = make.call("/", D(expr[[2]], name), make.call("+", 1., expr[[2]])),
>   log2 = make.call("/", make.call("/", D(expr[[2]], name), expr[[2]]), quote(log(2)) ),
>   log10 = make.call("/", make.call("/", D(expr[[2]], name), expr[[2]]), quote(log(10)) ),
>   cospi = make.call("*", make.call("*", make.call("sinpi", expr[[2]]), make.call("-", D(expr[[2]], name))), quote(pi)),
>   sinpi = make.call("*", make.call("*", make.call("cospi", expr[[2]]), D(expr[[2]], name)), quote(pi)),
>   tanpi = make.call("/", make.call("*", D(expr[[2]], name), quote(pi)), make.call("^", make.call("cospi", expr[[2]]), 2)),
> 
> Jerry

You are right, Jerry, it would be nice if R's derivative table
could be extended by the useR  using simple R code.
As Duncan Murdoch has mentioned already, this is now provided as
a byproduct of the functionality in the CRAN package 'nlsr'
{after that is tweaked, as you mentioned}, which is nice and
good to know (for all of us).

As one person who knows how important it may be to avoid cancellation,
I still would be willing to add to the "derivatives table" in
R's C source  if people like you provided  a (tested!) patch to
the source, which is in
    https://svn.r-project.org/R/trunk/src/library/stats/src/deriv.c

Martin


> From: Avraham Adler [mailto:avraham.adler at gmail.com]
> Sent: Friday, February 17, 2017 4:16 PM
> To: Jerry Lewis; r-devel at r-project.org
> Subject: Re: [Rd] Wish List: Extensions to the derivatives table
> 
> Hi.
> 
> Unless I'm misremembering, log, exp, sin, cos, and tan are all handled in deriv3. The functions listed are  specially coded slightly more accurate versions but can be substituted with native ones for which deriv/deriv3 will work automatically. I believe that if you  write your functions using log(a + 1) instead of log1p(a) or log(x) / log(2) instead of log2(x) deriv3 will work fine.


> Thanks,
> Avi
> 
> On Fri, Feb 17, 2017 at 2:02 PM Jerry Lewis <jerry.lewis at biogen.com<mailto:jerry.lewis at biogen.com>> wrote:
> The derivative table resides in the function D.  In S+ that table is extensible because it is written in the S language.  R is faster but less flexible, since that table is programmed in C.  It would be useful if R provided a mechanism for extending the derivative table, or barring that, provided a broader table.  Currently unsupported mathematical functions of one argument include expm1, log1p, log2, log10, cospi, sinpi, and tanpi.
> 
> While manual differentiation of these proposed additions is straight-forward, their absence complicates what otherwise could be much simpler, such as using deriv() or deriv3() to generate functions, for example to use as an nls model.
> 
> Thanks,


From xie at yihui.name  Mon Feb 20 17:24:34 2017
From: xie at yihui.name (Yihui Xie)
Date: Mon, 20 Feb 2017 10:24:34 -0600
Subject: [Rd] Replaying a recorded plot (mixed base and grid) from pdf() in
 cairo_pdf() crashes R
Message-ID: <CANROs4dy7xvbYRAXHMQbrBjQiYrYgETUpBAAyPBk-rzOaNoWCA@mail.gmail.com>

Hi,

I wonder if this is expected or I'm doing a wrong thing.

pdf()
dev.control('enable')

library("grid")
plot(1)
grid.text("A")

res = recordPlot()
dev.off()

cairo_pdf()
replayPlot(res)
dev.off()


 *** caught segfault ***
address 0x4, cause 'memory not mapped'


> sessionInfo()
R version 3.3.2 (2016-10-31)
Platform: x86_64-apple-darwin13.4.0 (64-bit)
Running under: macOS Sierra 10.12.3

locale:
[1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8

attached base packages:
[1] stats     graphics  grDevices utils     datasets  methods   base

loaded via a namespace (and not attached):
[1] tools_3.3.2 yaml_2.1.14

Regards,
Yihui
--
https://yihui.name


From xie at yihui.name  Mon Feb 20 17:30:49 2017
From: xie at yihui.name (Yihui Xie)
Date: Mon, 20 Feb 2017 10:30:49 -0600
Subject: [Rd] Replaying a recorded plot (mixed base and grid) from pdf()
 in cairo_pdf() crashes R
In-Reply-To: <CANROs4dy7xvbYRAXHMQbrBjQiYrYgETUpBAAyPBk-rzOaNoWCA@mail.gmail.com>
References: <CANROs4dy7xvbYRAXHMQbrBjQiYrYgETUpBAAyPBk-rzOaNoWCA@mail.gmail.com>
Message-ID: <CANROs4cd=EhVBsn25njQv7Uea+UHy=FqL18A-wOQ7pehmjXFjg@mail.gmail.com>

A quick follow-up: I just used cairo_pdf() as the recording device,
and it crashes R as well, so it is probably not relevant to pdf() but
an issue specific to cairo_pdf().

cairo_pdf()
dev.control('enable')

library("grid")
plot(1)
grid.text("A")

res = recordPlot()
dev.off()

cairo_pdf()
replayPlot(res)
dev.off()


Regards,
Yihui
--
https://yihui.name


On Mon, Feb 20, 2017 at 10:24 AM, Yihui Xie <xie at yihui.name> wrote:
> Hi,
>
> I wonder if this is expected or I'm doing a wrong thing.
>
> pdf()
> dev.control('enable')
>
> library("grid")
> plot(1)
> grid.text("A")
>
> res = recordPlot()
> dev.off()
>
> cairo_pdf()
> replayPlot(res)
> dev.off()
>
>
>  *** caught segfault ***
> address 0x4, cause 'memory not mapped'
>
>
>> sessionInfo()
> R version 3.3.2 (2016-10-31)
> Platform: x86_64-apple-darwin13.4.0 (64-bit)
> Running under: macOS Sierra 10.12.3
>
> locale:
> [1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8
>
> attached base packages:
> [1] stats     graphics  grDevices utils     datasets  methods   base
>
> loaded via a namespace (and not attached):
> [1] tools_3.3.2 yaml_2.1.14
>
> Regards,
> Yihui
> --
> https://yihui.name


From mikko.korpela at helsinki.fi  Mon Feb 20 18:14:59 2017
From: mikko.korpela at helsinki.fi (Mikko Korpela)
Date: Mon, 20 Feb 2017 19:14:59 +0200
Subject: [Rd] [patch] Eliminate warnings from gcc -Wold-style-declaration
Message-ID: <efc50218-064c-6156-d7ca-7f03413bb086@helsinki.fi>

Motivated by the recent R-devel list message with the title 
"Registration of native routines", I modified an R package to use 
registration of native routines along the lines of the example in 
section 5.4.2 of R-exts (development version). Among other compiler 
flags, I have '-Wextra' permanently set for installing packages. When 
installing the modified package, I got the following warning (tested 
with gcc 4.8.4 and 6.3.0):

> init.c:10:1: warning: ?static? is not at beginning of declaration [-Wold-style-declaration]
>  const static R_CallMethodDef R_CallDef[] = {

I believe this is a case of the compiler (with '-Wold-style-declaration' 
as part of '-Wextra') adhering to the following section of the C99 (or 
C11) standard, see e.g.
<http://www.open-std.org/JTC1/SC22/WG14/www/standards.html>:

> 6.11 Future language directions

...

> 6.11.5 Storage-class specifiers
>
> The placement of a storage-class specifier other than at the beginning
> of the declaration specifiers in a declaration is an obsolescent
> feature.

The attached patch (against SVN revision 72220) is a suggestion of how 
to eliminate the sources of such obsolescence warnings from the R source 
tree, including the example in the R-exts manual. The patch was 
originally made for r72218, and against that version it was tested 
successfully on Ubuntu 14.04.5 LTS (gcc 4.8.4) and OS X 10.7.5 (gcc 
6.3.0 installed from Homebrew). Revision 72220 failing 'make check' 
("Error: testing 'utils' failed") with or without the patch must be 
unrelated to the changes made in the patch. The files 
"src/library/tools/src/gramLatex.y", "src/library/tools/src/gramRd.y" 
and "src/main/gram.y" were processed with 'bison -l -y' (GNU Bison 
version 2.7.1, erroneusly reporting the version as 2.7.12-4996) to 
create the corresponding .c files.

As the warnings are only given when the user asks for "extra" warnings, 
this is obviously non-critical and not urgent, but might be something to 
consider.

-- 
Mikko Korpela
Department of Geosciences and Geography
University of Helsinki
-------------- next part --------------
A non-text attachment was scrubbed...
Name: Wold2.diff
Type: text/x-patch
Size: 45059 bytes
Desc: not available
URL: <https://stat.ethz.ch/pipermail/r-devel/attachments/20170220/c6aada4f/attachment.bin>

From paul at stat.auckland.ac.nz  Mon Feb 20 19:47:44 2017
From: paul at stat.auckland.ac.nz (Paul Murrell)
Date: Tue, 21 Feb 2017 07:47:44 +1300
Subject: [Rd] [FORGED] Re: Replaying a recorded plot (mixed base and
 grid) from pdf() in cairo_pdf() crashes R
In-Reply-To: <CANROs4cd=EhVBsn25njQv7Uea+UHy=FqL18A-wOQ7pehmjXFjg@mail.gmail.com>
References: <CANROs4dy7xvbYRAXHMQbrBjQiYrYgETUpBAAyPBk-rzOaNoWCA@mail.gmail.com>
	<CANROs4cd=EhVBsn25njQv7Uea+UHy=FqL18A-wOQ7pehmjXFjg@mail.gmail.com>
Message-ID: <99c9b396-fa57-8b6d-ee26-19935df3bd92@stat.auckland.ac.nz>

Hi

I see it too.  No, it is not supposed to do that (!).
Will take a look.  Thanks for reporting!

Paul

On 21/02/17 05:30, Yihui Xie wrote:
> A quick follow-up: I just used cairo_pdf() as the recording device,
> and it crashes R as well, so it is probably not relevant to pdf() but
> an issue specific to cairo_pdf().
>
> cairo_pdf()
> dev.control('enable')
>
> library("grid")
> plot(1)
> grid.text("A")
>
> res = recordPlot()
> dev.off()
>
> cairo_pdf()
> replayPlot(res)
> dev.off()
>
>
> Regards,
> Yihui
> --
> https://yihui.name
>
>
> On Mon, Feb 20, 2017 at 10:24 AM, Yihui Xie <xie at yihui.name> wrote:
>> Hi,
>>
>> I wonder if this is expected or I'm doing a wrong thing.
>>
>> pdf()
>> dev.control('enable')
>>
>> library("grid")
>> plot(1)
>> grid.text("A")
>>
>> res = recordPlot()
>> dev.off()
>>
>> cairo_pdf()
>> replayPlot(res)
>> dev.off()
>>
>>
>>  *** caught segfault ***
>> address 0x4, cause 'memory not mapped'
>>
>>
>>> sessionInfo()
>> R version 3.3.2 (2016-10-31)
>> Platform: x86_64-apple-darwin13.4.0 (64-bit)
>> Running under: macOS Sierra 10.12.3
>>
>> locale:
>> [1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8
>>
>> attached base packages:
>> [1] stats     graphics  grDevices utils     datasets  methods   base
>>
>> loaded via a namespace (and not attached):
>> [1] tools_3.3.2 yaml_2.1.14
>>
>> Regards,
>> Yihui
>> --
>> https://yihui.name
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>

-- 
Dr Paul Murrell
Department of Statistics
The University of Auckland
Private Bag 92019
Auckland
New Zealand
64 9 3737599 x85392
paul at stat.auckland.ac.nz
http://www.stat.auckland.ac.nz/~paul/


From paul at stat.auckland.ac.nz  Mon Feb 20 20:27:27 2017
From: paul at stat.auckland.ac.nz (Paul Murrell)
Date: Tue, 21 Feb 2017 08:27:27 +1300
Subject: [Rd] [FORGED] Re: Replaying a recorded plot (mixed base and
 grid) from pdf() in cairo_pdf() crashes R
In-Reply-To: <CANROs4cd=EhVBsn25njQv7Uea+UHy=FqL18A-wOQ7pehmjXFjg@mail.gmail.com>
References: <CANROs4dy7xvbYRAXHMQbrBjQiYrYgETUpBAAyPBk-rzOaNoWCA@mail.gmail.com>
	<CANROs4cd=EhVBsn25njQv7Uea+UHy=FqL18A-wOQ7pehmjXFjg@mail.gmail.com>
Message-ID: <03c36881-6487-7446-2fc4-90458106cd68@stat.auckland.ac.nz>

Hi

This appears to be happening (at least) because cairo_pdf() delays 
initialising a Cairo surface until BM_NewPage(), rather than 
initiliasing a Cairo surface in BM_Open(), and replayPlot() triggers 
some activity (set clip region) on the device BEFORE a new page is 
started (so the pointer to the Cairo surface is null, so BOOM).

Not sure yet whether to blame replayPlot() for not starting with a new 
page operation OR to blame cairo_pdf() for not initialising a Cairo 
surface at device startup.

If anyone who knows more about Cairo (or cairo_pdf()) wants to point out 
a good reason for the way cairo_pdf() currently works, please don't hold 
back.

Paul

On 21/02/17 05:30, Yihui Xie wrote:
> A quick follow-up: I just used cairo_pdf() as the recording device,
> and it crashes R as well, so it is probably not relevant to pdf() but
> an issue specific to cairo_pdf().
>
> cairo_pdf()
> dev.control('enable')
>
> library("grid")
> plot(1)
> grid.text("A")
>
> res = recordPlot()
> dev.off()
>
> cairo_pdf()
> replayPlot(res)
> dev.off()
>
>
> Regards,
> Yihui
> --
> https://yihui.name
>
>
> On Mon, Feb 20, 2017 at 10:24 AM, Yihui Xie <xie at yihui.name> wrote:
>> Hi,
>>
>> I wonder if this is expected or I'm doing a wrong thing.
>>
>> pdf()
>> dev.control('enable')
>>
>> library("grid")
>> plot(1)
>> grid.text("A")
>>
>> res = recordPlot()
>> dev.off()
>>
>> cairo_pdf()
>> replayPlot(res)
>> dev.off()
>>
>>
>>  *** caught segfault ***
>> address 0x4, cause 'memory not mapped'
>>
>>
>>> sessionInfo()
>> R version 3.3.2 (2016-10-31)
>> Platform: x86_64-apple-darwin13.4.0 (64-bit)
>> Running under: macOS Sierra 10.12.3
>>
>> locale:
>> [1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8
>>
>> attached base packages:
>> [1] stats     graphics  grDevices utils     datasets  methods   base
>>
>> loaded via a namespace (and not attached):
>> [1] tools_3.3.2 yaml_2.1.14
>>
>> Regards,
>> Yihui
>> --
>> https://yihui.name
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>

-- 
Dr Paul Murrell
Department of Statistics
The University of Auckland
Private Bag 92019
Auckland
New Zealand
64 9 3737599 x85392
paul at stat.auckland.ac.nz
http://www.stat.auckland.ac.nz/~paul/


From htl10 at users.sourceforge.net  Mon Feb 20 23:50:46 2017
From: htl10 at users.sourceforge.net (Hin-Tak Leung)
Date: Mon, 20 Feb 2017 22:50:46 +0000 (UTC)
Subject: [Rd] another fix for R crashes under enable-strict-barrier, lto,
 trunk@72156
References: <1216112776.2681006.1487631046686.ref@mail.yahoo.com>
Message-ID: <1216112776.2681006.1487631046686@mail.yahoo.com>

On 2nd thought, I think a better fix to the segfault is something like this:

--- a/src/main/memory.c
+++ b/src/main/memory.c
@@ -3444,6 +3444,8 @@ R_xlen_t (XTRUELENGTH)(SEXP x) { return XTRUELENGTH(CHK2(x)); }
 int  (IS_LONG_VEC)(SEXP x) { return IS_LONG_VEC(CHK2(x)); }
 
 const char *(R_CHAR)(SEXP x) {
+    if(!x)
+       error("de-referncing null. Check the validity of your data.");
     if(TYPEOF(x) != CHARSXP)
        error("%s() can only be applied to a '%s', not a '%s'",
              "CHAR", "CHARSXP", type2char(TYPEOF(x)));


The segfault happens in the middle of tests/no-segfault.R . I have since built R 3.2.x and 3.3.x with --enable-strict-barrier so this is probably new to R 3.4. I think 
 tests/no-segfault.R is supposed to try to trigger a segfault with invalid data, and it is supposed to be caught. That it isn't caught with some combinations of configure is obviously broken; OTOH, testing for segfault with invalid data is also intentional; so I think a better solution is to be verbose about it, instead of what I suggested earlier, silently letting the invalid data through and let upstream cope.

I had a stack trace - but it wasn't obvious where-else a check should be made. The segfault happens is in the eval loop, which is fairly general by itself.

In any case, that was the whole point of me having   --enable-memory-profiling --enable-strict-barrier --with-valgrind-instrumentation=2 : I work(ed) with people who like to write buggy code. Invalid input data and invalid stuff somewhere in the middle is expected, from these people... 

To be honest, I think a few more null checks and a few more tests in tests/no-segfault.R could be added. 

--------------------------------------------
On Mon, 2/20/17, Martin Maechler <maechler at stat.math.ethz.ch> wrote:

 Subject: Re: [Rd] another fix for R crashes under enable-strict-barrier, lto, trunk at 72156
 To: "Hin-Tak Leung" <htl10 at users.sourceforge.net>
 Cc: r-devel at r-project.org, "bonsai list" <outmodedbonsai-announce at lists.sourceforge.net>
 Date: Monday, February 20, 2017, 9:56 AM

 >>>>>
 Hin-Tak Leung <htl10 at users.sourceforge.net>
 >>>>>? ???on Sat, 11
 Feb 2017 19:30:26 +0000 writes:

 ? ? > I haven' t touched R for some 18
 months, and so I have no
 ? ? > idea if
 this is a recent problems or not; but it certainly
 ? ? > did not segfault two years ago.?
 Since it has been
 ? ? > crashing
 (segfault) under 'make check-all' for over a
 ? ? > month, I reckon I'll have to
 look at it myself, to have it
 ? ? >
 fixed.

 ? ? > I have
 been having the ' --enable-memory-profiling
 --enable-strict-barrier
 --with-valgrind-instrumentation=2" options

 ? ? > for perhaps a
 decade - because I work(ed) with people who
 ? ? > like to write buggy code :-(. And I
 also run 'make
 ? ? > check-all'
 from time to time until two years ago.

 ? ? > ./configure
 --enable-memory-profiling --enable-strict-barrier
 --enable-byte-compiled-packages
 --with-valgrind-instrumentation=2 --enable-lto

 ? ? > current R dev
 crashes in make check-all . The fix is this:


 ? ? >
 --- a/src/main/memory.c
 ? ? > +++
 b/src/main/memory.c
 ? ? > @@ -3444,7
 +3444,7 @@ R_xlen_t (XTRUELENGTH)(SEXP x) { return
 XTRUELENGTH(CHK2(x)); }
 ? ? >? int?
 (IS_LONG_VEC)(SEXP x) { return IS_LONG_VEC(CHK2(x)); }

 ? ? >? const char
 *(R_CHAR)(SEXP x) {
 ? ? > -? ?
 if(TYPEOF(x) != CHARSXP)
 ? ? > +? ?
 if(x && (TYPEOF(x) != CHARSXP))
 ?
 ? >? ? ? ???error("%s() can only be
 applied to a '%s', not a '%s'",
 ? ? >? ? ? ? ? ?
 ???"CHAR", "CHARSXP",
 type2char(TYPEOF(x)));
 ? ? >? ? ?
 return (const char *)CHAR(x);


 ? ? > It is a fairly
 obvious fix to a bug since

 ? ? > include/Rinternals.h:#define
 TYPEOF(x) ((x)->sxpinfo.type)

 ? ? > and it was trying to de-reference
 "0->sxpinfo.type" (under
 ? ?
 > --enable-strict-barrier I think).

 Thank you? Hin-Tak!

 I did not yet try to reproduce the segfault,
 and I am not
 the expert here.? Just some
 remarks and a follow up question:

 Typically, the above R_CHAR() is equivalent to
 the? CHAR()
 macro which is used in many
 places.? I? _think_ that the bug is
 that
 this is called with '0' instead of a proper SEXP?
 in your
 case and the bug fix may be more
 appropriate "up stream", i.e.,
 at
 the place where that call happens? rather than inside
 R_CHAR.

 Any
 chance you saw or can get more info about the location of
 the crash, such as a stack trace ? 

 The idiom?
 ???if(TYPEOF(x)? ==? <some>SXP)
 is used in many places in the R sources, and I
 think we never
 prepend that with a? 'x
 && '? like you propose above.


From luke-tierney at uiowa.edu  Mon Feb 20 23:57:22 2017
From: luke-tierney at uiowa.edu (luke-tierney at uiowa.edu)
Date: Mon, 20 Feb 2017 16:57:22 -0600 (CST)
Subject: [Rd] another fix for R crashes under enable-strict-barrier, lto,
 trunk@72156
In-Reply-To: <1216112776.2681006.1487631046686@mail.yahoo.com>
References: <1216112776.2681006.1487631046686.ref@mail.yahoo.com>
	<1216112776.2681006.1487631046686@mail.yahoo.com>
Message-ID: <alpine.DEB.2.20.1702201655270.2589@luke-Latitude>

I already fixed the particular upstream issue in main.c. I agree that
at least with the barrier check mmuch more null checking would be nice
to have; I put it on my TODO list but won't get there for a while --
if someone else has time earlier go ahead.

Best,

luke

On Mon, 20 Feb 2017, Hin-Tak Leung wrote:

> On 2nd thought, I think a better fix to the segfault is something like this:
>
> --- a/src/main/memory.c
> +++ b/src/main/memory.c
> @@ -3444,6 +3444,8 @@ R_xlen_t (XTRUELENGTH)(SEXP x) { return XTRUELENGTH(CHK2(x)); }
> int  (IS_LONG_VEC)(SEXP x) { return IS_LONG_VEC(CHK2(x)); }
> 
> const char *(R_CHAR)(SEXP x) {
> +    if(!x)
> +       error("de-referncing null. Check the validity of your data.");
>     if(TYPEOF(x) != CHARSXP)
>        error("%s() can only be applied to a '%s', not a '%s'",
>              "CHAR", "CHARSXP", type2char(TYPEOF(x)));
>
>
> The segfault happens in the middle of tests/no-segfault.R . I have since built R 3.2.x and 3.3.x with --enable-strict-barrier so this is probably new to R 3.4. I think 
> tests/no-segfault.R is supposed to try to trigger a segfault with invalid data, and it is supposed to be caught. That it isn't caught with some combinations of configure is obviously broken; OTOH, testing for segfault with invalid data is also intentional; so I think a better solution is to be verbose about it, instead of what I suggested earlier, silently letting the invalid data through and let upstream cope.
>
> I had a stack trace - but it wasn't obvious where-else a check should be made. The segfault happens is in the eval loop, which is fairly general by itself.
>
> In any case, that was the whole point of me having   --enable-memory-profiling --enable-strict-barrier --with-valgrind-instrumentation=2 : I work(ed) with people who like to write buggy code. Invalid input data and invalid stuff somewhere in the middle is expected, from these people... 
>
> To be honest, I think a few more null checks and a few more tests in tests/no-segfault.R could be added. 
>
> --------------------------------------------
> On Mon, 2/20/17, Martin Maechler <maechler at stat.math.ethz.ch> wrote:
>
> Subject: Re: [Rd] another fix for R crashes under enable-strict-barrier, lto, trunk at 72156
> To: "Hin-Tak Leung" <htl10 at users.sourceforge.net>
> Cc: r-devel at r-project.org, "bonsai list" <outmodedbonsai-announce at lists.sourceforge.net>
> Date: Monday, February 20, 2017, 9:56 AM
>
> >>>>>
> Hin-Tak Leung <htl10 at users.sourceforge.net>
> >>>>>? ???on Sat, 11
> Feb 2017 19:30:26 +0000 writes:
>
> ? ? > I haven' t touched R for some 18
> months, and so I have no
> ? ? > idea if
> this is a recent problems or not; but it certainly
> ? ? > did not segfault two years ago.?
> Since it has been
> ? ? > crashing
> (segfault) under 'make check-all' for over a
> ? ? > month, I reckon I'll have to
> look at it myself, to have it
> ? ? >
> fixed.
>
> ? ? > I have
> been having the ' --enable-memory-profiling
> --enable-strict-barrier
> --with-valgrind-instrumentation=2" options
>
> ? ? > for perhaps a
> decade - because I work(ed) with people who
> ? ? > like to write buggy code :-(. And I
> also run 'make
> ? ? > check-all'
> from time to time until two years ago.
>
> ? ? > ./configure
> --enable-memory-profiling --enable-strict-barrier
> --enable-byte-compiled-packages
> --with-valgrind-instrumentation=2 --enable-lto
>
> ? ? > current R dev
> crashes in make check-all . The fix is this:
>
>
> ? ? >
> --- a/src/main/memory.c
> ? ? > +++
> b/src/main/memory.c
> ? ? > @@ -3444,7
> +3444,7 @@ R_xlen_t (XTRUELENGTH)(SEXP x) { return
> XTRUELENGTH(CHK2(x)); }
> ? ? >? int?
> (IS_LONG_VEC)(SEXP x) { return IS_LONG_VEC(CHK2(x)); }
>
> ? ? >? const char
> *(R_CHAR)(SEXP x) {
> ? ? > -? ?
> if(TYPEOF(x) != CHARSXP)
> ? ? > +? ?
> if(x && (TYPEOF(x) != CHARSXP))
> ?
> ? >? ? ? ???error("%s() can only be
> applied to a '%s', not a '%s'",
> ? ? >? ? ? ? ? ?
> ???"CHAR", "CHARSXP",
> type2char(TYPEOF(x)));
> ? ? >? ? ?
> return (const char *)CHAR(x);
>
>
> ? ? > It is a fairly
> obvious fix to a bug since
>
> ? ? > include/Rinternals.h:#define
> TYPEOF(x) ((x)->sxpinfo.type)
>
> ? ? > and it was trying to de-reference
> "0->sxpinfo.type" (under
> ? ?
> > --enable-strict-barrier I think).
>
> Thank you? Hin-Tak!
>
> I did not yet try to reproduce the segfault,
> and I am not
> the expert here.? Just some
> remarks and a follow up question:
>
> Typically, the above R_CHAR() is equivalent to
> the? CHAR()
> macro which is used in many
> places.? I? _think_ that the bug is
> that
> this is called with '0' instead of a proper SEXP?
> in your
> case and the bug fix may be more
> appropriate "up stream", i.e.,
> at
> the place where that call happens? rather than inside
> R_CHAR.
>
> Any
> chance you saw or can get more info about the location of
> the crash, such as a stack trace ? 
>
> The idiom?
> ???if(TYPEOF(x)? ==? <some>SXP)
> is used in many places in the R sources, and I
> think we never
> prepend that with a? 'x
> && '? like you propose above.
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel

-- 
Luke Tierney
Ralph E. Wareham Professor of Mathematical Sciences
University of Iowa                  Phone:             319-335-3386
Department of Statistics and        Fax:               319-335-3017
    Actuarial Science
241 Schaeffer Hall                  email:   luke-tierney at uiowa.edu
Iowa City, IA 52242                 WWW:  http://www.stat.uiowa.edu

From maechler at stat.math.ethz.ch  Tue Feb 21 17:42:00 2017
From: maechler at stat.math.ethz.ch (Martin Maechler)
Date: Tue, 21 Feb 2017 17:42:00 +0100
Subject: [Rd] possible improvement to ?with examples
In-Reply-To: <afff319d-3390-3b6d-8197-b93d31f99643@mcmaster.ca>
References: <afff319d-3390-3b6d-8197-b93d31f99643@mcmaster.ca>
Message-ID: <22700.28120.774874.581304@stat.math.ethz.ch>

>>>>> Ben Bolker <bbolker at gmail.com>
>>>>>     on Thu, 16 Feb 2017 15:37:13 -0500 writes:

    > A querent on StackOverflow asked about the with() function
    > http://stackoverflow.com/questions/42283479/why-when-to-use-with-function#42283479

    > and asked about the example in ?with

    > library(MASS)
    > with(anorexia, {
    >  anorex.1 <- glm(Postwt ~ Prewt + Treat + offset(Prewt),
    >                 family = gaussian)
    >  summary(anorex.1)
    > })

    > which saves little or no typing relative to

    > anorex.1 <- glm(Postwt ~ Prewt + Treat + offset(Prewt),
    > family = gaussian, data=anorexia)

    > (I would argue that the latter is better practice anyway).

    > Could we have something more sensible like

    > with(mtcars,mpg[cyl==8 & disp>350])

    > ?  (It could be contrasted directly with

    > mtcars$mpg[mtcars$cyl==8 & mtcars$disp>350]

    > )

I now have done something like the above, and have added a
\note{ .. }  to warn about "over - use" of with().

Also added a link to Thomas Lumley's paper
  Thomas Lumley (2003)  \emph{Standard nonstandard evaluation rules}.
  \url{http://developer.r-project.org/nonstandard-eval.pdf}

    > I'm happy to submit a bug report/patch if that seems appropriate.

Thank you, Ben!
Martin


From spluque at gmail.com  Tue Feb 21 18:06:57 2017
From: spluque at gmail.com (Sebastian P. Luque)
Date: Tue, 21 Feb 2017 11:06:57 -0600
Subject: [Rd] R CMD build error during vignettes build
Message-ID: <87lgsz3232.fsf@gmail.com>

Hello,

I'm trying to rebuild a package (using R version 3.3.2 (2016-10-31))
that has not seen any changes since it was last built without problems
in previous R versions.  It fails during vignette building with:

---<--------------------cut here---------------start------------------->---
$ R CMD build diveMove
* checking for file ?diveMove/DESCRIPTION? ... OK
* preparing ?diveMove?:
* checking DESCRIPTION meta-information ... OK
* installing the package to build vignettes
* creating vignettes ... ERROR
Quitting from lines 432-438 (diveMove.Rnw) 
Error: processing vignette 'diveMove.Rnw' failed with diagnostics:
missing values and NaN's not allowed if 'na.rm' is FALSE
Execution halted
---<--------------------cut here---------------end--------------------->---

There are no problems running the R code resulting from tangling the
vignette.  Specifically, the code referred to in the error is a single
function call, which returns with no warnings or errors, so I have
little to hold on to.  How can I get more verbose debug from "R CMD
build"?

-- 
Seb


From paul at stat.auckland.ac.nz  Wed Feb 22 00:32:09 2017
From: paul at stat.auckland.ac.nz (Paul Murrell)
Date: Wed, 22 Feb 2017 12:32:09 +1300
Subject: [Rd] [FORGED] Re: Replaying a recorded plot (mixed base and
 grid) from pdf() in cairo_pdf() crashes R
In-Reply-To: <03c36881-6487-7446-2fc4-90458106cd68@stat.auckland.ac.nz>
References: <CANROs4dy7xvbYRAXHMQbrBjQiYrYgETUpBAAyPBk-rzOaNoWCA@mail.gmail.com>
	<CANROs4cd=EhVBsn25njQv7Uea+UHy=FqL18A-wOQ7pehmjXFjg@mail.gmail.com>
	<03c36881-6487-7446-2fc4-90458106cd68@stat.auckland.ac.nz>
Message-ID: <8f40e0c8-874b-f992-b5c5-38a46810ccf9@stat.auckland.ac.nz>

Hi

I decided to blame cairo_pdf().

There is a fix in r-devel (r72242) that works for the reported case, 
plus some basic sanity checks.

I could not complete 'make check-devel' because it was failing on 
reg-tests-1d.R ...

 > stopifnot(length(fd) == 10, identical(fd, format(dct <- 
as.POSIXct(dlt))))
Error: identical(fd, format(dct <- as.POSIXct(dlt))) is not TRUE

... anyone else seeing that ?

I would appreciate confirmation from a heavier user of cairo_pdf() that 
I have not broken anything.

Paul

On 21/02/17 08:27, Paul Murrell wrote:
> Hi
>
> This appears to be happening (at least) because cairo_pdf() delays
> initialising a Cairo surface until BM_NewPage(), rather than
> initiliasing a Cairo surface in BM_Open(), and replayPlot() triggers
> some activity (set clip region) on the device BEFORE a new page is
> started (so the pointer to the Cairo surface is null, so BOOM).
>
> Not sure yet whether to blame replayPlot() for not starting with a new
> page operation OR to blame cairo_pdf() for not initialising a Cairo
> surface at device startup.
>
> If anyone who knows more about Cairo (or cairo_pdf()) wants to point out
> a good reason for the way cairo_pdf() currently works, please don't hold
> back.
>
> Paul
>
> On 21/02/17 05:30, Yihui Xie wrote:
>> A quick follow-up: I just used cairo_pdf() as the recording device,
>> and it crashes R as well, so it is probably not relevant to pdf() but
>> an issue specific to cairo_pdf().
>>
>> cairo_pdf()
>> dev.control('enable')
>>
>> library("grid")
>> plot(1)
>> grid.text("A")
>>
>> res = recordPlot()
>> dev.off()
>>
>> cairo_pdf()
>> replayPlot(res)
>> dev.off()
>>
>>
>> Regards,
>> Yihui
>> --
>> https://yihui.name
>>
>>
>> On Mon, Feb 20, 2017 at 10:24 AM, Yihui Xie <xie at yihui.name> wrote:
>>> Hi,
>>>
>>> I wonder if this is expected or I'm doing a wrong thing.
>>>
>>> pdf()
>>> dev.control('enable')
>>>
>>> library("grid")
>>> plot(1)
>>> grid.text("A")
>>>
>>> res = recordPlot()
>>> dev.off()
>>>
>>> cairo_pdf()
>>> replayPlot(res)
>>> dev.off()
>>>
>>>
>>>  *** caught segfault ***
>>> address 0x4, cause 'memory not mapped'
>>>
>>>
>>>> sessionInfo()
>>> R version 3.3.2 (2016-10-31)
>>> Platform: x86_64-apple-darwin13.4.0 (64-bit)
>>> Running under: macOS Sierra 10.12.3
>>>
>>> locale:
>>> [1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8
>>>
>>> attached base packages:
>>> [1] stats     graphics  grDevices utils     datasets  methods   base
>>>
>>> loaded via a namespace (and not attached):
>>> [1] tools_3.3.2 yaml_2.1.14
>>>
>>> Regards,
>>> Yihui
>>> --
>>> https://yihui.name
>>
>> ______________________________________________
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>
>

-- 
Dr Paul Murrell
Department of Statistics
The University of Auckland
Private Bag 92019
Auckland
New Zealand
64 9 3737599 x85392
paul at stat.auckland.ac.nz
http://www.stat.auckland.ac.nz/~paul/


From xie at yihui.name  Wed Feb 22 00:38:07 2017
From: xie at yihui.name (Yihui Xie)
Date: Tue, 21 Feb 2017 17:38:07 -0600
Subject: [Rd] [FORGED] Re: Replaying a recorded plot (mixed base and
 grid) from pdf() in cairo_pdf() crashes R
In-Reply-To: <8f40e0c8-874b-f992-b5c5-38a46810ccf9@stat.auckland.ac.nz>
References: <CANROs4dy7xvbYRAXHMQbrBjQiYrYgETUpBAAyPBk-rzOaNoWCA@mail.gmail.com>
	<CANROs4cd=EhVBsn25njQv7Uea+UHy=FqL18A-wOQ7pehmjXFjg@mail.gmail.com>
	<03c36881-6487-7446-2fc4-90458106cd68@stat.auckland.ac.nz>
	<8f40e0c8-874b-f992-b5c5-38a46810ccf9@stat.auckland.ac.nz>
Message-ID: <CANROs4dY8akRAwhg7gL0t3O=hXN5ZRLSYx4+=FvAX__B+18sTg@mail.gmail.com>

Thanks a lot! I don't use cairo_pdf() very often. I discovered this
problem because a user reported an issue with cairo_pdf() in knitr,
and I found it was reproducible without using knitr.

Regards,
Yihui
--
https://yihui.name


On Tue, Feb 21, 2017 at 5:32 PM, Paul Murrell <paul at stat.auckland.ac.nz> wrote:
> Hi
>
> I decided to blame cairo_pdf().
>
> There is a fix in r-devel (r72242) that works for the reported case, plus
> some basic sanity checks.
>
> I could not complete 'make check-devel' because it was failing on
> reg-tests-1d.R ...
>
>> stopifnot(length(fd) == 10, identical(fd, format(dct <- as.POSIXct(dlt))))
> Error: identical(fd, format(dct <- as.POSIXct(dlt))) is not TRUE
>
> ... anyone else seeing that ?
>
> I would appreciate confirmation from a heavier user of cairo_pdf() that I
> have not broken anything.
>
> Paul
>
>
> On 21/02/17 08:27, Paul Murrell wrote:
>>
>> Hi
>>
>> This appears to be happening (at least) because cairo_pdf() delays
>> initialising a Cairo surface until BM_NewPage(), rather than
>> initiliasing a Cairo surface in BM_Open(), and replayPlot() triggers
>> some activity (set clip region) on the device BEFORE a new page is
>> started (so the pointer to the Cairo surface is null, so BOOM).
>>
>> Not sure yet whether to blame replayPlot() for not starting with a new
>> page operation OR to blame cairo_pdf() for not initialising a Cairo
>> surface at device startup.
>>
>> If anyone who knows more about Cairo (or cairo_pdf()) wants to point out
>> a good reason for the way cairo_pdf() currently works, please don't hold
>> back.
>>
>> Paul
>>
>> On 21/02/17 05:30, Yihui Xie wrote:
>>>
>>> A quick follow-up: I just used cairo_pdf() as the recording device,
>>> and it crashes R as well, so it is probably not relevant to pdf() but
>>> an issue specific to cairo_pdf().
>>>
>>> cairo_pdf()
>>> dev.control('enable')
>>>
>>> library("grid")
>>> plot(1)
>>> grid.text("A")
>>>
>>> res = recordPlot()
>>> dev.off()
>>>
>>> cairo_pdf()
>>> replayPlot(res)
>>> dev.off()
>>>
>>>
>>> Regards,
>>> Yihui
>>> --
>>> https://yihui.name
>>>
>>>
>>> On Mon, Feb 20, 2017 at 10:24 AM, Yihui Xie <xie at yihui.name> wrote:
>>>>
>>>> Hi,
>>>>
>>>> I wonder if this is expected or I'm doing a wrong thing.
>>>>
>>>> pdf()
>>>> dev.control('enable')
>>>>
>>>> library("grid")
>>>> plot(1)
>>>> grid.text("A")
>>>>
>>>> res = recordPlot()
>>>> dev.off()
>>>>
>>>> cairo_pdf()
>>>> replayPlot(res)
>>>> dev.off()
>>>>
>>>>
>>>>  *** caught segfault ***
>>>> address 0x4, cause 'memory not mapped'
>>>>
>>>>
>>>>> sessionInfo()
>>>>
>>>> R version 3.3.2 (2016-10-31)
>>>> Platform: x86_64-apple-darwin13.4.0 (64-bit)
>>>> Running under: macOS Sierra 10.12.3
>>>>
>>>> locale:
>>>> [1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8
>>>>
>>>> attached base packages:
>>>> [1] stats     graphics  grDevices utils     datasets  methods   base
>>>>
>>>> loaded via a namespace (and not attached):
>>>> [1] tools_3.3.2 yaml_2.1.14
>>>>
>>>> Regards,
>>>> Yihui
>>>> --
>>>> https://yihui.name
>>>
>>>
>>> ______________________________________________
>>> R-devel at r-project.org mailing list
>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>>
>>
>
> --
> Dr Paul Murrell
> Department of Statistics
> The University of Auckland
> Private Bag 92019
> Auckland
> New Zealand
> 64 9 3737599 x85392
> paul at stat.auckland.ac.nz
> http://www.stat.auckland.ac.nz/~paul/


From henrik.bengtsson at gmail.com  Wed Feb 22 03:45:50 2017
From: henrik.bengtsson at gmail.com (Henrik Bengtsson)
Date: Tue, 21 Feb 2017 18:45:50 -0800
Subject: [Rd] How to build R without support for translations?
Message-ID: <CAFDcVCSAdDtghVx648gGq_wkvDk7GTU-kNeXbBrSWo2YbCDu5A@mail.gmail.com>

In Section 'Localization of messages' of R Installation and
Administration (R 3.3.2), it says:

   "R can be built without support for translations, but it is enabled
by default."

How can this be done?  Is this an option to 'configure', which I then
failed to identify, or via some environment variable setting?

My objective is to get an R installation (on Linux) that is as small
as possible.

Thanks,

Henrik


From edd at debian.org  Wed Feb 22 04:00:03 2017
From: edd at debian.org (Dirk Eddelbuettel)
Date: Tue, 21 Feb 2017 21:00:03 -0600
Subject: [Rd] How to build R without support for translations?
In-Reply-To: <CAFDcVCSAdDtghVx648gGq_wkvDk7GTU-kNeXbBrSWo2YbCDu5A@mail.gmail.com>
References: <CAFDcVCSAdDtghVx648gGq_wkvDk7GTU-kNeXbBrSWo2YbCDu5A@mail.gmail.com>
Message-ID: <22700.65203.120054.983240@max.eddelbuettel.com>


On 21 February 2017 at 18:45, Henrik Bengtsson wrote:
| In Section 'Localization of messages' of R Installation and
| Administration (R 3.3.2), it says:
| 
|    "R can be built without support for translations, but it is enabled
| by default."
| 
| How can this be done?  Is this an option to 'configure', which I then
| failed to identify, or via some environment variable setting?

To a first approximation:  ensure configure fails that sub-tests by not
having the corresponding -dev package.  More elaborately, turn the
corresponding configure variable to 'no'.
 
| My objective is to get an R installation (on Linux) that is as small
| as possible.

I considered playing that game a couple of years ago and decided that it is
more or less a waste of time: as good as 'R the interpreter' is, the real
added value (at least to me) comes from the *incredible* power supplied by
the *massive* number *perfectly well working add-on* packages from CRAN.

Which nixes the idea of a minimal size. R really is /usr/bin/R plus whatever
you want from CRAN.  So for you, what use in reducing R by 10% if you can't
add the 'future' package?  Not to mention that many packages may need a
compiler, or a beast like BH, or ...

Dirk

-- 
http://dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org


From henrik.bengtsson at gmail.com  Wed Feb 22 07:28:29 2017
From: henrik.bengtsson at gmail.com (Henrik Bengtsson)
Date: Tue, 21 Feb 2017 22:28:29 -0800
Subject: [Rd] How to build R without support for translations?
In-Reply-To: <22700.65203.120054.983240@max.eddelbuettel.com>
References: <CAFDcVCSAdDtghVx648gGq_wkvDk7GTU-kNeXbBrSWo2YbCDu5A@mail.gmail.com>
	<22700.65203.120054.983240@max.eddelbuettel.com>
Message-ID: <CAFDcVCT3ouMP3oc9Nog2DwENfRL1fK6J3usRdC1pC3+Lshu6cA@mail.gmail.com>

On Tue, Feb 21, 2017 at 7:00 PM, Dirk Eddelbuettel <edd at debian.org> wrote:
>
> On 21 February 2017 at 18:45, Henrik Bengtsson wrote:
> | In Section 'Localization of messages' of R Installation and
> | Administration (R 3.3.2), it says:
> |
> |    "R can be built without support for translations, but it is enabled
> | by default."
> |
> | How can this be done?  Is this an option to 'configure', which I then
> | failed to identify, or via some environment variable setting?
>
> To a first approximation:  ensure configure fails that sub-tests by not
> having the corresponding -dev package.  More elaborately, turn the
> corresponding configure variable to 'no'.

To identify and manually disable / fail all relevant configure tests
was the answer I feared.

>
> | My objective is to get an R installation (on Linux) that is as small
> | as possible.
>
> I considered playing that game a couple of years ago and decided that it is
> more or less a waste of time: as good as 'R the interpreter' is, the real
> added value (at least to me) comes from the *incredible* power supplied by
> the *massive* number *perfectly well working add-on* packages from CRAN.
>
> Which nixes the idea of a minimal size. R really is /usr/bin/R plus whatever
> you want from CRAN.  So for you, what use in reducing R by 10% if you can't
> add the 'future' package?  Not to mention that many packages may need a
> compiler, or a beast like BH, or ...

I'm aware this question comes up once in a while.  One immediate
interest is running R on Amazon Lambda, which only allows for
deploying a 50 MB ZIP file / 250 MB uncompressed
(http://docs.aws.amazon.com/lambda/latest/dg/limits.html). So, an
obvious ~7 MB reduction can be valuable / critical there.

Thanks,

Henrik

>
> Dirk
>
> --
> http://dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org


From mikko.korpela at helsinki.fi  Wed Feb 22 11:22:45 2017
From: mikko.korpela at helsinki.fi (Mikko Korpela)
Date: Wed, 22 Feb 2017 12:22:45 +0200
Subject: [Rd] R CMD build error during vignettes build
In-Reply-To: <87lgsz3232.fsf@gmail.com>
References: <87lgsz3232.fsf@gmail.com>
Message-ID: <75c34a1e-f1e1-c61a-d2e1-4481810023f5@helsinki.fi>

On 21/02/17 19:06, Sebastian P. Luque wrote:
> Hello,
>
> I'm trying to rebuild a package (using R version 3.3.2 (2016-10-31))
> that has not seen any changes since it was last built without problems
> in previous R versions.  It fails during vignette building with:
>
> ---<--------------------cut here---------------start------------------->---
> $ R CMD build diveMove
> * checking for file ?diveMove/DESCRIPTION? ... OK
> * preparing ?diveMove?:
> * checking DESCRIPTION meta-information ... OK
> * installing the package to build vignettes
> * creating vignettes ... ERROR
> Quitting from lines 432-438 (diveMove.Rnw)
> Error: processing vignette 'diveMove.Rnw' failed with diagnostics:
> missing values and NaN's not allowed if 'na.rm' is FALSE
> Execution halted
> ---<--------------------cut here---------------end--------------------->---
>
> There are no problems running the R code resulting from tangling the
> vignette.  Specifically, the code referred to in the error is a single
> function call, which returns with no warnings or errors, so I have
> little to hold on to.  How can I get more verbose debug from "R CMD
> build"?
>

Are you sure that the complete R code of the vignette runs without 
errors? I can't help you with getting more verbose output from 'R CMD 
build', but the error can be reproduced with other means, as outlined below.

When trying to build the vignette from the git version of your package 
(as part of R CMD build), I see the same error message. Investigating 
further, the "tangled" file diveMove.R from 
'tools::buildVignette("diveMove.Rnw")' has 68 lines and stops short of 
the code chunk "zoc" where the error occurs. Running that code obviously 
works fine.

However, 'tools::buildVignette("diveMove.Rnw", weave = FALSE)' outputs a 
longer (154 lines) diveMove.R (presumably containing the complete code 
of the vignette) which includes the chunk "zoc". Executing the code with 
source() produces the expected error. This also identifies the call 
where the error occurs:

> Error in quantile.default(Ad1.maybe.nat, probs = (1 - ascent.crit.q)) :
>   missing values and NaN's not allowed if 'na.rm' is FALSE

The error can be investigated with the usual tools, e.g. traceback() and 
debug().

-- 
Mikko Korpela
Department of Geosciences and Geography
University of Helsinki


From nilsson.henric at gmail.com  Wed Feb 22 12:44:41 2017
From: nilsson.henric at gmail.com (Henric Winell)
Date: Wed, 22 Feb 2017 12:44:41 +0100
Subject: [Rd] Registration of native routines
In-Reply-To: <9dc2a8bb-b324-f865-be05-499860562741@stats.ox.ac.uk>
References: <1514271c-2d83-b373-fdb7-7052c3170112@stats.ox.ac.uk>
	<9dc2a8bb-b324-f865-be05-499860562741@stats.ox.ac.uk>
Message-ID: <96a6cb1f-1efa-28a1-db1e-81b1b76c0daf@gmail.com>

On 2017-02-19 09:19, Prof Brian Ripley wrote:

> On 14/02/2017 16:25, Prof Brian Ripley wrote:
>> Registration of 'native routines' (entry points in compiled code loaded
>> into R) has been available for over 14 years,
> 
> ...
> 
>> (There are reports that the check in 'R CMD check' on Windows sometimes
>> fails to detect use of registration.  This is being looked into:
>> meanwhile say so in a CRAN submission if it happens to you.)
> 
> One instance has been resolved: for at least 5 years R CMD check for a 
> package with compiled code has assumed commands 'nm' and (on Windows) 
> 'objdump' were on the PATH: these are also needed to detect use of 
> registration.  There is now a warning if they are not found.

Many thanks for this!  However, I think that there's a subtlety here:

On a newly installed Windows 10 64-bit system, with the latest R-devel 
and Rtools, 'R CMD check' failed to detect use of registration despite 
the fact that both 'nm' and 'objdump' were on the path.  It turned out 
that I had the 32-bit versions on the path, i.e., 
'\\...\Rtools\mingw_32\bin', which, I believe, is the default setting in 
the Rtools installer.

After switching to the 64-bit versions, the use of registration now 
seems to be reliably detected.


Henric Winell


From spluque at gmail.com  Wed Feb 22 15:35:13 2017
From: spluque at gmail.com (Sebastian P.Luque)
Date: Wed, 22 Feb 2017 08:35:13 -0600
Subject: [Rd] R CMD build error during vignettes build
References: <87lgsz3232.fsf@gmail.com>
	<75c34a1e-f1e1-c61a-d2e1-4481810023f5@helsinki.fi>
Message-ID: <87k28icmzi.fsf@otaria.sebmel.org>

On Wed, 22 Feb 2017 12:22:45 +0200,
Mikko Korpela <mikko.korpela at helsinki.fi> wrote:

[...]

> When trying to build the vignette from the git version of your package
> (as part of R CMD build), I see the same error message. Investigating
> further, the "tangled" file diveMove.R from
> 'tools::buildVignette("diveMove.Rnw")' has 68 lines and stops short of
> the code chunk "zoc" where the error occurs. Running that code
> obviously works fine.

This is exactly what I failed to do -> check the tangled output to see
it is complete... It didn't occur to me to do that assuming all the code
would be there.  Even more so considering there's nothing in the CRAN
checks showing problems.

Thank you Mikko!

-- 
Seb


From jeroen.ooms at stat.ucla.edu  Wed Feb 22 15:34:35 2017
From: jeroen.ooms at stat.ucla.edu (Jeroen Ooms)
Date: Wed, 22 Feb 2017 15:34:35 +0100
Subject: [Rd] Registration of native routines
In-Reply-To: <1514271c-2d83-b373-fdb7-7052c3170112@stats.ox.ac.uk>
References: <1514271c-2d83-b373-fdb7-7052c3170112@stats.ox.ac.uk>
Message-ID: <CABFfbXv0f-o03Gd8WMTg01K+VriSEuP1_59=HwvZ1BDDPceWUA@mail.gmail.com>

On Tue, Feb 14, 2017 at 5:25 PM, Prof Brian Ripley
<ripley at stats.ox.ac.uk> wrote:
>
> Registration has similar benefits to name spaces in R code:
>
> - it ensures that the routines used by .C, .Call etc are those in your package (without needing a PACKAGE argument).
> - it avoids polluting the search space for native routines with those from your package.
> - it checks the number of arguments passed to .Call/.External, and the number and optionally the type for .C/.Fortran.
> - it finds native routines faster, especially if 10s of name spaces are loaded.

Do these benefits also hold for packages that currently use useDynLib
exclusively in combination symbol names? E.g for the example from WRE:

   useDynLib(foo, myRoutine, myOtherRoutine)

Which is invoked via:

  .Call(myRoutine, x, y)

What ambiguity or pollution is introduced by foo:::myRoutine? Should
manually registering 'myRoutine' in C still be mandatory in this case?

It was nice having the NAMESPACE as the central declaration of
callable C routines. The "R_registerRoutines" system will require
maintaining additional C code which re-declares all callable C
functions from other compilation units. This introduces additional
complexity for package authors and might become a source of bugs when
we forget to update the registrations when C functions have changed.


From therneau at mayo.edu  Wed Feb 22 16:03:51 2017
From: therneau at mayo.edu (Therneau, Terry M., Ph.D.)
Date: Wed, 22 Feb 2017 09:03:51 -0600
Subject: [Rd] Crash in the latest release
Message-ID: <f40b15$5spqkk@ironport10.mayo.edu>

I found this by accident yesterday.  The program that crashes is the first two lines of 
the example from the help page for nlmer. That example hasn't changed in a long time, so I 
assumed that it is an R-devel issue.  It could also be a long latent nlmer bug. The second 
run with valgrind is puzzling.

Terry T.


 > library(lmer)
 > sessionInfo()
R Under development (unstable) (2017-02-21 r72241)
Platform: i686-pc-linux-gnu (32-bit)
Running under: Ubuntu 14.04.1 LTS

Matrix products: default
BLAS: /usr/local/src/R-devel/lib/libRblas.so
LAPACK: /usr/local/src/R-devel/lib/libRlapack.so

locale:
  [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C
  [3] LC_TIME=en_US.UTF-8        LC_COLLATE=C
  [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8
  [7] LC_PAPER=en_US.UTF-8       LC_NAME=C
  [9] LC_ADDRESS=C               LC_TELEPHONE=C
[11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C

attached base packages:
[1] stats     graphics  grDevices utils     datasets  methods base

other attached packages:
[1] lme4_1.1-12  Matrix_1.2-8

loaded via a namespace (and not attached):
  [1] minqa_1.2.4     MASS_7.3-46     compiler_3.4.0 tools_3.4.0
  [5] Rcpp_0.12.9     splines_3.4.0   nlme_3.1-131 grid_3.4.0
  [9] nloptr_1.0.4    lattice_0.20-34

 > startvec <- c(Asym = 200, xmid = 725, scal = 350)
 > (nm1 <- nlmer(circumference ~ SSlogis(age, Asym, xmid, scal) ~ Asym|Tree,
+              Orange, start = startvec))
*** Error in `/usr/local/src/R-devel/bin/exec/R': malloc(): memory corruption: 0x0e3df988 ***
Aborted (core dumped)

---------------------

The valgrind version is interesting too: it complains and then finishes!

tmt-local2437% R -d valgrind
==31901== Memcheck, a memory error detector
==31901== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al.
==31901== Using Valgrind-3.10.0.SVN and LibVEX; rerun with -h for copyright info
==31901== Command: /usr/local/src/R-devel/bin/exec/R
==31901==

R Under development (unstable) (2017-02-21 r72241) -- "Unsuffered Consequences"
Copyright (C) 2017 The R Foundation for Statistical Computing
Platform: i686-pc-linux-gnu (32-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

   Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

 > library(lme4)
Loading required package: Matrix
 > startvec <- c(Asym = 200, xmid = 725, scal = 350)
 > (nm1 <- nlmer(circumference ~ SSlogis(age, Asym, xmid, scal) ~ Asym|Tree,
+              Orange, start = startvec))
==31901== Invalid write of size 4
==31901==    at 0xA13DA20: cholmod_start (cholmod_common.c:184)
==31901==    by 0xD8B3065: cholmod_start (in /home/therneau/Rlib/lme4/libs/lme4.so)
==31901==    by 0xD8B728D: Eigen::CholmodBase<Eigen::SparseMatrix<double, 0, int>, 1, 
Eigen::CholmodDecomposition<Eigen::SparseMatrix<double, 0, int>, 1> >::CholmodBase() (in 
/home/therneau/Rlib/lme4/libs/lme4.so)
==31901==    by 0xD8B413D: Eigen::CholmodDecomposition<Eigen::SparseMatrix<double, 0, 
int>, 1>::CholmodDecomposition() (in /home/therneau/Rlib/lme4/libs/lme4.so)
==31901==    by 0xD8B39B8: lme4::lme4CholmodDecomposition<Eigen::SparseMatrix<double, 0, 
int>, 1>::lme4CholmodDecomposition() (in /home/therneau/Rlib/lme4/libs/lme4.so)
==31901==    by 0xD8AEBE4: lme4::merPredD::merPredD(SEXPREC*, SEXPREC*, SEXPREC*, 
SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, 
SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*) (in /home/therneau/Rlib/lme4/libs/lme4.so)
==31901==    by 0xD8727F1: merPredDCreate (in /home/therneau/Rlib/lme4/libs/lme4.so)
==31901==    by 0x80C0B9E: R_doDotCall (dotcode.c:648)
==31901==    by 0x80C159F: do_dotcall (dotcode.c:1252)
==31901==    by 0x80FFABA: Rf_eval (eval.c:728)
==31901==    by 0x810308A: do_set (eval.c:2579)
==31901==    by 0x80FF907: Rf_eval (eval.c:700)
==31901==  Address 0xe310828 is 0 bytes after a block of size 2,408 alloc'd
==31901==    at 0x402A6DC: operator new(unsigned int) (in 
/usr/lib/valgrind/vgpreload_memcheck-x86-linux.so)
==31901==    by 0xD872770: merPredDCreate (in /home/therneau/Rlib/lme4/libs/lme4.so)
==31901==    by 0x80C0B9E: R_doDotCall (dotcode.c:648)
==31901==    by 0x80C159F: do_dotcall (dotcode.c:1252)
==31901==    by 0x80FFABA: Rf_eval (eval.c:728)
==31901==    by 0x810308A: do_set (eval.c:2579)
==31901==    by 0x80FF907: Rf_eval (eval.c:700)
==31901==    by 0x8101F20: do_begin (eval.c:2187)
==31901==    by 0x80FF907: Rf_eval (eval.c:700)
==31901==    by 0x810141B: R_execClosure (eval.c:1614)
==31901==    by 0x80FF711: Rf_eval (eval.c:747)
==31901==    by 0x8101F20: do_begin (eval.c:2187)
==31901==
==31901== Invalid write of size 4
==31901==    at 0xA13DA31: cholmod_start (cholmod_common.c:184)
==31901==    by 0xD8B3065: cholmod_start (in /home/therneau/Rlib/lme4/libs/lme4.so)
==31901==    by 0xD8B728D: Eigen::CholmodBase<Eigen::SparseMatrix<double, 0, int>, 1, 
Eigen::CholmodDecomposition<Eigen::SparseMatrix<double, 0, int>, 1> >::CholmodBase() (in 
/home/therneau/Rlib/lme4/libs/lme4.so)
==31901==    by 0xD8B413D: Eigen::CholmodDecomposition<Eigen::SparseMatrix<double, 0, 
int>, 1>::CholmodDecomposition() (in /home/therneau/Rlib/lme4/libs/lme4.so)
==31901==    by 0xD8B39B8: lme4::lme4CholmodDecomposition<Eigen::SparseMatrix<double, 0, 
int>, 1>::lme4CholmodDecomposition() (in /home/therneau/Rlib/lme4/libs/lme4.so)
==31901==    by 0xD8AEBE4: lme4::merPredD::merPredD(SEXPREC*, SEXPREC*, SEXPREC*, 
SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, 
SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*) (in /home/therneau/Rlib/lme4/libs/lme4.so)
==31901==    by 0xD8727F1: merPredDCreate (in /home/therneau/Rlib/lme4/libs/lme4.so)
==31901==    by 0x80C0B9E: R_doDotCall (dotcode.c:648)
==31901==    by 0x80C159F: do_dotcall (dotcode.c:1252)
==31901==    by 0x80FFABA: Rf_eval (eval.c:728)
==31901==    by 0x810308A: do_set (eval.c:2579)
==31901==    by 0x80FF907: Rf_eval (eval.c:700)
==31901==  Address 0xe31082c is 4 bytes after a block of size 2,408 alloc'd
==31901==    at 0x402A6DC: operator new(unsigned int) (in 
/usr/lib/valgrind/vgpreload_memcheck-x86-linux.so)
==31901==    by 0xD872770: merPredDCreate (in /home/therneau/Rlib/lme4/libs/lme4.so)
==31901==    by 0x80C0B9E: R_doDotCall (dotcode.c:648)
==31901==    by 0x80C159F: do_dotcall (dotcode.c:1252)
==31901==    by 0x80FFABA: Rf_eval (eval.c:728)
==31901==    by 0x810308A: do_set (eval.c:2579)
==31901==    by 0x80FF907: Rf_eval (eval.c:700)
==31901==    by 0x8101F20: do_begin (eval.c:2187)
==31901==    by 0x80FF907: Rf_eval (eval.c:700)
==31901==    by 0x810141B: R_execClosure (eval.c:1614)
==31901==    by 0x80FF711: Rf_eval (eval.c:747)
==31901==    by 0x8101F20: do_begin (eval.c:2187)
==31901==
Nonlinear mixed model fit by maximum likelihood  ['nlmerMod']
Formula: circumference ~ SSlogis(age, Asym, xmid, scal) ~ Asym | Tree
    Data: Orange
       AIC       BIC    logLik  deviance  df.resid
  273.1438  280.9205 -131.5719  263.1438        30
Random effects:
  Groups   Name Std.Dev.
  Tree     Asym 31.646
  Residual       7.843
Number of obs: 35, groups:  Tree, 5
Fixed Effects:
  Asym   xmid   scal
192.1  727.9  348.1

 > q()
==31901==
==31901== HEAP SUMMARY:
==31901==     in use at exit: 94,537,359 bytes in 46,733 blocks
==31901==   total heap usage: 194,149 allocs, 147,416 frees, 248,586,365 bytes allocated
==31901==
==31901== LEAK SUMMARY:
==31901==    definitely lost: 0 bytes in 0 blocks
==31901==    indirectly lost: 0 bytes in 0 blocks
==31901==      possibly lost: 0 bytes in 0 blocks
==31901==    still reachable: 94,537,359 bytes in 46,733 blocks
==31901==         suppressed: 0 bytes in 0 blocks
==31901== Rerun with --leak-check=full to see details of leaked memory
==31901==
==31901== For counts of detected and suppressed errors, rerun with: -v
==31901== ERROR SUMMARY: 3 errors from 2 contexts (suppressed: 0 from 0)


From bbolker at gmail.com  Wed Feb 22 23:35:18 2017
From: bbolker at gmail.com (Ben Bolker)
Date: Wed, 22 Feb 2017 17:35:18 -0500
Subject: [Rd] [Lme4-authors] Crash in the latest release
In-Reply-To: <f40b15$5spqkj@ironport10.mayo.edu>
References: <f40b15$5spqkj@ironport10.mayo.edu>
Message-ID: <CABghstS0K5s595GyxB1PLrCnSk79SGCO0Ldmu11K=iWc8BDLeQ@mail.gmail.com>

Thanks, posted to https://github.com/lme4/lme4/issues/412 for further
discussion ...

On Wed, Feb 22, 2017 at 10:03 AM, Therneau, Terry M., Ph.D.
<therneau at mayo.edu> wrote:
> I found this by accident yesterday.  The program that crashes is the first
> two lines of the example from the help page for nlmer. That example hasn't
> changed in a long time, so I assumed that it is an R-devel issue.  It could
> also be a long latent nlmer bug. The second run with valgrind is puzzling.
>
> Terry T.
>
>
>> library(lmer)
>> sessionInfo()
> R Under development (unstable) (2017-02-21 r72241)
> Platform: i686-pc-linux-gnu (32-bit)
> Running under: Ubuntu 14.04.1 LTS
>
> Matrix products: default
> BLAS: /usr/local/src/R-devel/lib/libRblas.so
> LAPACK: /usr/local/src/R-devel/lib/libRlapack.so
>
> locale:
>  [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C
>  [3] LC_TIME=en_US.UTF-8        LC_COLLATE=C
>  [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8
>  [7] LC_PAPER=en_US.UTF-8       LC_NAME=C
>  [9] LC_ADDRESS=C               LC_TELEPHONE=C
> [11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C
>
> attached base packages:
> [1] stats     graphics  grDevices utils     datasets  methods base
>
> other attached packages:
> [1] lme4_1.1-12  Matrix_1.2-8
>
> loaded via a namespace (and not attached):
>  [1] minqa_1.2.4     MASS_7.3-46     compiler_3.4.0 tools_3.4.0
>  [5] Rcpp_0.12.9     splines_3.4.0   nlme_3.1-131 grid_3.4.0
>  [9] nloptr_1.0.4    lattice_0.20-34
>
>> startvec <- c(Asym = 200, xmid = 725, scal = 350)
>> (nm1 <- nlmer(circumference ~ SSlogis(age, Asym, xmid, scal) ~ Asym|Tree,
> +              Orange, start = startvec))
> *** Error in `/usr/local/src/R-devel/bin/exec/R': malloc(): memory
> corruption: 0x0e3df988 ***
> Aborted (core dumped)
>
> ---------------------
>
> The valgrind version is interesting too: it complains and then finishes!
>
> tmt-local2437% R -d valgrind
> ==31901== Memcheck, a memory error detector
> ==31901== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al.
> ==31901== Using Valgrind-3.10.0.SVN and LibVEX; rerun with -h for copyright
> info
> ==31901== Command: /usr/local/src/R-devel/bin/exec/R
> ==31901==
>
> R Under development (unstable) (2017-02-21 r72241) -- "Unsuffered
> Consequences"
> Copyright (C) 2017 The R Foundation for Statistical Computing
> Platform: i686-pc-linux-gnu (32-bit)
>
> R is free software and comes with ABSOLUTELY NO WARRANTY.
> You are welcome to redistribute it under certain conditions.
> Type 'license()' or 'licence()' for distribution details.
>
>   Natural language support but running in an English locale
>
> R is a collaborative project with many contributors.
> Type 'contributors()' for more information and
> 'citation()' on how to cite R or R packages in publications.
>
> Type 'demo()' for some demos, 'help()' for on-line help, or
> 'help.start()' for an HTML browser interface to help.
> Type 'q()' to quit R.
>
> [Previously saved workspace restored]
>
>> library(lme4)
> Loading required package: Matrix
>> startvec <- c(Asym = 200, xmid = 725, scal = 350)
>> (nm1 <- nlmer(circumference ~ SSlogis(age, Asym, xmid, scal) ~ Asym|Tree,
> +              Orange, start = startvec))
> ==31901== Invalid write of size 4
> ==31901==    at 0xA13DA20: cholmod_start (cholmod_common.c:184)
> ==31901==    by 0xD8B3065: cholmod_start (in
> /home/therneau/Rlib/lme4/libs/lme4.so)
> ==31901==    by 0xD8B728D: Eigen::CholmodBase<Eigen::SparseMatrix<double, 0,
> int>, 1, Eigen::CholmodDecomposition<Eigen::SparseMatrix<double, 0, int>, 1>
>>::CholmodBase() (in /home/therneau/Rlib/lme4/libs/lme4.so)
> ==31901==    by 0xD8B413D:
> Eigen::CholmodDecomposition<Eigen::SparseMatrix<double, 0, int>,
> 1>::CholmodDecomposition() (in /home/therneau/Rlib/lme4/libs/lme4.so)
> ==31901==    by 0xD8B39B8:
> lme4::lme4CholmodDecomposition<Eigen::SparseMatrix<double, 0, int>,
> 1>::lme4CholmodDecomposition() (in /home/therneau/Rlib/lme4/libs/lme4.so)
> ==31901==    by 0xD8AEBE4: lme4::merPredD::merPredD(SEXPREC*, SEXPREC*,
> SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*,
> SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*,
> SEXPREC*) (in /home/therneau/Rlib/lme4/libs/lme4.so)
> ==31901==    by 0xD8727F1: merPredDCreate (in
> /home/therneau/Rlib/lme4/libs/lme4.so)
> ==31901==    by 0x80C0B9E: R_doDotCall (dotcode.c:648)
> ==31901==    by 0x80C159F: do_dotcall (dotcode.c:1252)
> ==31901==    by 0x80FFABA: Rf_eval (eval.c:728)
> ==31901==    by 0x810308A: do_set (eval.c:2579)
> ==31901==    by 0x80FF907: Rf_eval (eval.c:700)
> ==31901==  Address 0xe310828 is 0 bytes after a block of size 2,408 alloc'd
> ==31901==    at 0x402A6DC: operator new(unsigned int) (in
> /usr/lib/valgrind/vgpreload_memcheck-x86-linux.so)
> ==31901==    by 0xD872770: merPredDCreate (in
> /home/therneau/Rlib/lme4/libs/lme4.so)
> ==31901==    by 0x80C0B9E: R_doDotCall (dotcode.c:648)
> ==31901==    by 0x80C159F: do_dotcall (dotcode.c:1252)
> ==31901==    by 0x80FFABA: Rf_eval (eval.c:728)
> ==31901==    by 0x810308A: do_set (eval.c:2579)
> ==31901==    by 0x80FF907: Rf_eval (eval.c:700)
> ==31901==    by 0x8101F20: do_begin (eval.c:2187)
> ==31901==    by 0x80FF907: Rf_eval (eval.c:700)
> ==31901==    by 0x810141B: R_execClosure (eval.c:1614)
> ==31901==    by 0x80FF711: Rf_eval (eval.c:747)
> ==31901==    by 0x8101F20: do_begin (eval.c:2187)
> ==31901==
> ==31901== Invalid write of size 4
> ==31901==    at 0xA13DA31: cholmod_start (cholmod_common.c:184)
> ==31901==    by 0xD8B3065: cholmod_start (in
> /home/therneau/Rlib/lme4/libs/lme4.so)
> ==31901==    by 0xD8B728D: Eigen::CholmodBase<Eigen::SparseMatrix<double, 0,
> int>, 1, Eigen::CholmodDecomposition<Eigen::SparseMatrix<double, 0, int>, 1>
>>::CholmodBase() (in /home/therneau/Rlib/lme4/libs/lme4.so)
> ==31901==    by 0xD8B413D:
> Eigen::CholmodDecomposition<Eigen::SparseMatrix<double, 0, int>,
> 1>::CholmodDecomposition() (in /home/therneau/Rlib/lme4/libs/lme4.so)
> ==31901==    by 0xD8B39B8:
> lme4::lme4CholmodDecomposition<Eigen::SparseMatrix<double, 0, int>,
> 1>::lme4CholmodDecomposition() (in /home/therneau/Rlib/lme4/libs/lme4.so)
> ==31901==    by 0xD8AEBE4: lme4::merPredD::merPredD(SEXPREC*, SEXPREC*,
> SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*,
> SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*,
> SEXPREC*) (in /home/therneau/Rlib/lme4/libs/lme4.so)
> ==31901==    by 0xD8727F1: merPredDCreate (in
> /home/therneau/Rlib/lme4/libs/lme4.so)
> ==31901==    by 0x80C0B9E: R_doDotCall (dotcode.c:648)
> ==31901==    by 0x80C159F: do_dotcall (dotcode.c:1252)
> ==31901==    by 0x80FFABA: Rf_eval (eval.c:728)
> ==31901==    by 0x810308A: do_set (eval.c:2579)
> ==31901==    by 0x80FF907: Rf_eval (eval.c:700)
> ==31901==  Address 0xe31082c is 4 bytes after a block of size 2,408 alloc'd
> ==31901==    at 0x402A6DC: operator new(unsigned int) (in
> /usr/lib/valgrind/vgpreload_memcheck-x86-linux.so)
> ==31901==    by 0xD872770: merPredDCreate (in
> /home/therneau/Rlib/lme4/libs/lme4.so)
> ==31901==    by 0x80C0B9E: R_doDotCall (dotcode.c:648)
> ==31901==    by 0x80C159F: do_dotcall (dotcode.c:1252)
> ==31901==    by 0x80FFABA: Rf_eval (eval.c:728)
> ==31901==    by 0x810308A: do_set (eval.c:2579)
> ==31901==    by 0x80FF907: Rf_eval (eval.c:700)
> ==31901==    by 0x8101F20: do_begin (eval.c:2187)
> ==31901==    by 0x80FF907: Rf_eval (eval.c:700)
> ==31901==    by 0x810141B: R_execClosure (eval.c:1614)
> ==31901==    by 0x80FF711: Rf_eval (eval.c:747)
> ==31901==    by 0x8101F20: do_begin (eval.c:2187)
> ==31901==
> Nonlinear mixed model fit by maximum likelihood  ['nlmerMod']
> Formula: circumference ~ SSlogis(age, Asym, xmid, scal) ~ Asym | Tree
>    Data: Orange
>       AIC       BIC    logLik  deviance  df.resid
>  273.1438  280.9205 -131.5719  263.1438        30
> Random effects:
>  Groups   Name Std.Dev.
>  Tree     Asym 31.646
>  Residual       7.843
> Number of obs: 35, groups:  Tree, 5
> Fixed Effects:
>  Asym   xmid   scal
> 192.1  727.9  348.1
>
>> q()
> ==31901==
> ==31901== HEAP SUMMARY:
> ==31901==     in use at exit: 94,537,359 bytes in 46,733 blocks
> ==31901==   total heap usage: 194,149 allocs, 147,416 frees, 248,586,365
> bytes allocated
> ==31901==
> ==31901== LEAK SUMMARY:
> ==31901==    definitely lost: 0 bytes in 0 blocks
> ==31901==    indirectly lost: 0 bytes in 0 blocks
> ==31901==      possibly lost: 0 bytes in 0 blocks
> ==31901==    still reachable: 94,537,359 bytes in 46,733 blocks
> ==31901==         suppressed: 0 bytes in 0 blocks
> ==31901== Rerun with --leak-check=full to see details of leaked memory
> ==31901==
> ==31901== For counts of detected and suppressed errors, rerun with: -v
> ==31901== ERROR SUMMARY: 3 errors from 2 contexts (suppressed: 0 from 0)
>
>
> _______________________________________________
> Lme4-authors mailing list
> Lme4-authors at lists.r-forge.r-project.org
> https://lists.r-forge.r-project.org/cgi-bin/mailman/listinfo/lme4-authors


From mikko.korpela at helsinki.fi  Thu Feb 23 13:02:58 2017
From: mikko.korpela at helsinki.fi (Mikko Korpela)
Date: Thu, 23 Feb 2017 14:02:58 +0200
Subject: [Rd] Update copyright year in manuals
Message-ID: <56b65b53-6369-882e-a7f8-2a7c5e9f4e95@helsinki.fi>

With new R releases soon to come, I suggest updating the Rcopyright 
macro in "doc/manual/R-defs.texi" to use year 2017.

-- 
Mikko Korpela
Department of Geosciences and Geography
University of Helsinki


From maechler at stat.math.ethz.ch  Thu Feb 23 15:23:10 2017
From: maechler at stat.math.ethz.ch (Martin Maechler)
Date: Thu, 23 Feb 2017 15:23:10 +0100
Subject: [Rd] Update copyright year in manuals
In-Reply-To: <56b65b53-6369-882e-a7f8-2a7c5e9f4e95@helsinki.fi>
References: <56b65b53-6369-882e-a7f8-2a7c5e9f4e95@helsinki.fi>
Message-ID: <22702.61518.509694.132082@stat.math.ethz.ch>

>>>>> Mikko Korpela <mikko.korpela at helsinki.fi>
>>>>>     on Thu, 23 Feb 2017 14:02:58 +0200 writes:

    > With new R releases soon to come, I suggest updating the
    > Rcopyright macro in "doc/manual/R-defs.texi" to use year
    > 2017.

Now this is an e-mail that *REALLY* does not fit to the R-devel
mailing list ... even though it is very very slightly related to
the R sources.

We do *not* want noise on R-devel, please.

(and let's continue this issue in private if you want)
Martin


From avraham.adler at gmail.com  Thu Feb 23 17:10:05 2017
From: avraham.adler at gmail.com (Avraham Adler)
Date: Thu, 23 Feb 2017 11:10:05 -0500
Subject: [Rd] Registration of native routines
In-Reply-To: <CABFfbXv0f-o03Gd8WMTg01K+VriSEuP1_59=HwvZ1BDDPceWUA@mail.gmail.com>
References: <1514271c-2d83-b373-fdb7-7052c3170112@stats.ox.ac.uk>
	<CABFfbXv0f-o03Gd8WMTg01K+VriSEuP1_59=HwvZ1BDDPceWUA@mail.gmail.com>
Message-ID: <CAL6gwnL_1bDP0mkfPjY1S0SQPb_x7YA4nMYJ06ZhUg+oUMVC3w@mail.gmail.com>

I believe Dr. Ripley said that the UseDynLib doesn't address the
middle two points of the list.

I experimented with the Delaporte package timing calls using both
methods, and they were within 1~2 microseconds of each other using
microbenchmark. Since the more complicated way is now expressly
preferred, it isn't a big deal for me personally to change so the next
version of Delaporte will use CallMethod/useDynLib(foo,
.registration=TRUE) etc. I can see how in more complicated packages
that could become more burdensome.

Thanks,

Avi

On Wed, Feb 22, 2017 at 9:34 AM, Jeroen Ooms <jeroen.ooms at stat.ucla.edu> wrote:
> On Tue, Feb 14, 2017 at 5:25 PM, Prof Brian Ripley
> <ripley at stats.ox.ac.uk> wrote:
>>
>> Registration has similar benefits to name spaces in R code:
>>
>> - it ensures that the routines used by .C, .Call etc are those in your package (without needing a PACKAGE argument).
>> - it avoids polluting the search space for native routines with those from your package.
>> - it checks the number of arguments passed to .Call/.External, and the number and optionally the type for .C/.Fortran.
>> - it finds native routines faster, especially if 10s of name spaces are loaded.
>
> Do these benefits also hold for packages that currently use useDynLib
> exclusively in combination symbol names? E.g for the example from WRE:
>
>    useDynLib(foo, myRoutine, myOtherRoutine)
>
> Which is invoked via:
>
>   .Call(myRoutine, x, y)
>
> What ambiguity or pollution is introduced by foo:::myRoutine? Should
> manually registering 'myRoutine' in C still be mandatory in this case?
>
> It was nice having the NAMESPACE as the central declaration of
> callable C routines. The "R_registerRoutines" system will require
> maintaining additional C code which re-declares all callable C
> functions from other compilation units. This introduces additional
> complexity for package authors and might become a source of bugs when
> we forget to update the registrations when C functions have changed.
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From javier at rstudio.com  Thu Feb 23 19:36:09 2017
From: javier at rstudio.com (Javier Luraschi)
Date: Thu, 23 Feb 2017 10:36:09 -0800
Subject: [Rd] Debugging tools and practices in Windows?
Message-ID: <CAOrRV3fPtaGMfnbMMMJsgyq6SnhnNNSTpJhY-Gc1DDFtyQDDhw@mail.gmail.com>

Hello r-devel, could someone share the tools and practices they use to
debug the core R sources in Windows?

For instance, I would like to set a breakpoint in `gl_loadhistory` and
troubleshoot from there.

Thanks in advance - Javier Luraschi

	[[alternative HTML version deleted]]


From murdoch.duncan at gmail.com  Thu Feb 23 19:55:29 2017
From: murdoch.duncan at gmail.com (Duncan Murdoch)
Date: Thu, 23 Feb 2017 13:55:29 -0500
Subject: [Rd] Debugging tools and practices in Windows?
In-Reply-To: <CAOrRV3fPtaGMfnbMMMJsgyq6SnhnNNSTpJhY-Gc1DDFtyQDDhw@mail.gmail.com>
References: <CAOrRV3fPtaGMfnbMMMJsgyq6SnhnNNSTpJhY-Gc1DDFtyQDDhw@mail.gmail.com>
Message-ID: <a2f670c3-5c27-c8d1-f30f-0a0cf3925f69@gmail.com>

On 23/02/2017 1:36 PM, Javier Luraschi wrote:
> Hello r-devel, could someone share the tools and practices they use to
> debug the core R sources in Windows?
>
> For instance, I would like to set a breakpoint in `gl_loadhistory` and
> troubleshoot from there.

You're talking about debugging the C code rather than the R code, I think.

These days I mostly avoid debugging in Windows, but when I have to do 
it, I use gdb.  There used to be a front end for it (Insight) that 
worked in Windows, but I don't think it works with our current gdb 
build.  Google names lots of other front ends, but I haven't tried any 
of them in Windows.

The other choice is the old fashioned method:  add lots of Rprintf() 
statements to the source and recompile.

Duncan Murdoch


From javier at rstudio.com  Thu Feb 23 20:10:26 2017
From: javier at rstudio.com (Javier Luraschi)
Date: Thu, 23 Feb 2017 11:10:26 -0800
Subject: [Rd] Debugging tools and practices in Windows?
In-Reply-To: <a2f670c3-5c27-c8d1-f30f-0a0cf3925f69@gmail.com>
References: <CAOrRV3fPtaGMfnbMMMJsgyq6SnhnNNSTpJhY-Gc1DDFtyQDDhw@mail.gmail.com>
	<a2f670c3-5c27-c8d1-f30f-0a0cf3925f69@gmail.com>
Message-ID: <CAOrRV3d8GtBhZR1ZP9M=Y-btWEcR1cBJwMk3p9Kse6rDQ2gsAg@mail.gmail.com>

Right, I'm talking about C code.

Do you remember if you had to set specific CFLAGS or other settings to get
gdb working? I wasn't able to get gdb() working with the standard build
settings.

Otherwise, Rprintf() would work for sure.

Thank you!



On Thu, Feb 23, 2017 at 10:55 AM, Duncan Murdoch <murdoch.duncan at gmail.com>
wrote:

> On 23/02/2017 1:36 PM, Javier Luraschi wrote:
>
>> Hello r-devel, could someone share the tools and practices they use to
>> debug the core R sources in Windows?
>>
>> For instance, I would like to set a breakpoint in `gl_loadhistory` and
>> troubleshoot from there.
>>
>
> You're talking about debugging the C code rather than the R code, I think.
>
> These days I mostly avoid debugging in Windows, but when I have to do it,
> I use gdb.  There used to be a front end for it (Insight) that worked in
> Windows, but I don't think it works with our current gdb build.  Google
> names lots of other front ends, but I haven't tried any of them in Windows.
>
> The other choice is the old fashioned method:  add lots of Rprintf()
> statements to the source and recompile.
>
> Duncan Murdoch
>
>

	[[alternative HTML version deleted]]


From tomas.kalibera at gmail.com  Thu Feb 23 20:49:40 2017
From: tomas.kalibera at gmail.com (Tomas Kalibera)
Date: Thu, 23 Feb 2017 20:49:40 +0100
Subject: [Rd] Debugging tools and practices in Windows?
In-Reply-To: <CAOrRV3d8GtBhZR1ZP9M=Y-btWEcR1cBJwMk3p9Kse6rDQ2gsAg@mail.gmail.com>
References: <CAOrRV3fPtaGMfnbMMMJsgyq6SnhnNNSTpJhY-Gc1DDFtyQDDhw@mail.gmail.com>
	<a2f670c3-5c27-c8d1-f30f-0a0cf3925f69@gmail.com>
	<CAOrRV3d8GtBhZR1ZP9M=Y-btWEcR1cBJwMk3p9Kse6rDQ2gsAg@mail.gmail.com>
Message-ID: <7004d113-5304-89c0-07ef-34c6e517b768@gmail.com>

The R for Windows FAQ suggests "make DEBUG=T" and has some more hints
https://cran.r-project.org/bin/windows/base/rw-FAQ.html

Tomas


On 02/23/2017 08:10 PM, Javier Luraschi wrote:
> Right, I'm talking about C code.
>
> Do you remember if you had to set specific CFLAGS or other settings to get
> gdb working? I wasn't able to get gdb() working with the standard build
> settings.
>
> Otherwise, Rprintf() would work for sure.
>
> Thank you!
>
>
>
> On Thu, Feb 23, 2017 at 10:55 AM, Duncan Murdoch <murdoch.duncan at gmail.com>
> wrote:
>
>> On 23/02/2017 1:36 PM, Javier Luraschi wrote:
>>
>>> Hello r-devel, could someone share the tools and practices they use to
>>> debug the core R sources in Windows?
>>>
>>> For instance, I would like to set a breakpoint in `gl_loadhistory` and
>>> troubleshoot from there.
>>>
>> You're talking about debugging the C code rather than the R code, I think.
>>
>> These days I mostly avoid debugging in Windows, but when I have to do it,
>> I use gdb.  There used to be a front end for it (Insight) that worked in
>> Windows, but I don't think it works with our current gdb build.  Google
>> names lots of other front ends, but I haven't tried any of them in Windows.
>>
>> The other choice is the old fashioned method:  add lots of Rprintf()
>> statements to the source and recompile.
>>
>> Duncan Murdoch
>>
>>
> 	[[alternative HTML version deleted]]
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From rdonnelly at continuum.io  Fri Feb 24 02:37:07 2017
From: rdonnelly at continuum.io (Ray Donnelly)
Date: Fri, 24 Feb 2017 01:37:07 +0000
Subject: [Rd] Debugging tools and practices in Windows?
In-Reply-To: <7004d113-5304-89c0-07ef-34c6e517b768@gmail.com>
References: <CAOrRV3fPtaGMfnbMMMJsgyq6SnhnNNSTpJhY-Gc1DDFtyQDDhw@mail.gmail.com>
	<a2f670c3-5c27-c8d1-f30f-0a0cf3925f69@gmail.com>
	<CAOrRV3d8GtBhZR1ZP9M=Y-btWEcR1cBJwMk3p9Kse6rDQ2gsAg@mail.gmail.com>
	<7004d113-5304-89c0-07ef-34c6e517b768@gmail.com>
Message-ID: <CAF5kcVW3NEYydeqT1XKfsDdortHwo2YiKxWO4EBa8ej6OxHgRQ@mail.gmail.com>

On Thu, Feb 23, 2017 at 7:49 PM, Tomas Kalibera <tomas.kalibera at gmail.com>
wrote:

> The R for Windows FAQ suggests "make DEBUG=T" and has some more hints
> https://cran.r-project.org/bin/windows/base/rw-FAQ.html
>
> Tomas
>
>
>
> On 02/23/2017 08:10 PM, Javier Luraschi wrote:
>
>> Right, I'm talking about C code.
>>
>> Do you remember if you had to set specific CFLAGS or other settings to get
>> gdb working? I wasn't able to get gdb() working with the standard build
>> settings.
>>
>> Otherwise, Rprintf() would work for sure.
>>
>> Thank you!
>>
>>
>>
>> On Thu, Feb 23, 2017 at 10:55 AM, Duncan Murdoch <
>> murdoch.duncan at gmail.com>
>> wrote:
>>
>> On 23/02/2017 1:36 PM, Javier Luraschi wrote:
>>>
>>> Hello r-devel, could someone share the tools and practices they use to
>>>> debug the core R sources in Windows?
>>>>
>>>> For instance, I would like to set a breakpoint in `gl_loadhistory` and
>>>> troubleshoot from there.
>>>>
>>>> You're talking about debugging the C code rather than the R code, I
>>> think.
>>>
>>> These days I mostly avoid debugging in Windows, but when I have to do it,
>>> I use gdb.  There used to be a front end for it (Insight) that worked in
>>> Windows, but I don't think it works with our current gdb build.  Google
>>
>> names lots of other front ends, but I haven't tried any of them in
>>> Windows.
>>>
>>>
I feel Qt Creator provides a good enough UI for debugging things on Windows
(it allows you to debug externally-built executables).


> The other choice is the old fashioned method:  add lots of Rprintf()
>>> statements to the source and recompile.
>>>
>>> Duncan Murdoch
>>>
>>>
>>>         [[alternative HTML version deleted]]
>>
>> ______________________________________________
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>

	[[alternative HTML version deleted]]


From andre_mikulec at hotmail.com  Fri Feb 24 05:06:06 2017
From: andre_mikulec at hotmail.com (Andre Mikulec)
Date: Fri, 24 Feb 2017 04:06:06 +0000
Subject: [Rd] Debugging tools and practices in Windows?
In-Reply-To: <CAF5kcVW3NEYydeqT1XKfsDdortHwo2YiKxWO4EBa8ej6OxHgRQ@mail.gmail.com>
References: <CAOrRV3fPtaGMfnbMMMJsgyq6SnhnNNSTpJhY-Gc1DDFtyQDDhw@mail.gmail.com>
	<a2f670c3-5c27-c8d1-f30f-0a0cf3925f69@gmail.com>
	<CAOrRV3d8GtBhZR1ZP9M=Y-btWEcR1cBJwMk3p9Kse6rDQ2gsAg@mail.gmail.com>
	<7004d113-5304-89c0-07ef-34c6e517b768@gmail.com>,
	<CAF5kcVW3NEYydeqT1XKfsDdortHwo2YiKxWO4EBa8ej6OxHgRQ@mail.gmail.com>
Message-ID: <DM5PR15MB167638FCFE26716AD2E5FC339C520@DM5PR15MB1676.namprd15.prod.outlook.com>


I have not tried this in several years, but inside the Makefiles of the R source code, the following will replace the (non)debugging flags with debugging flags.


This (still) may or may not work ...


find . -type f -name 'M*k*' -exec sed -i 's/-O3/-O0 -ggdb3/g' {} \;
find . -type f -name 'M*k*' -exec sed -i 's/-O2/-O0 -ggdb3/g' {} \;
find . -type f -name 'M*k*' -exec sed -i 's/-shared/-shared -O0 -ggdb3/g' {} \;

I was sort of fresh at the this debugging when I started gdb debugging and time has passed by, so the recommended (current) 'R on windows' compiler flags can be found in the g++ documentation for the correct g++ used to compile the current R on Windows.

Andre Mikulec
Andre_Mikulec at Hotmail.com


________________________________
From: R-devel <r-devel-bounces at r-project.org> on behalf of Ray Donnelly <rdonnelly at continuum.io>
Sent: Thursday, February 23, 2017 8:37 PM
To: Tomas Kalibera
Cc: r-devel


On Thu, Feb 23, 2017 at 7:49 PM, Tomas Kalibera <tomas.kalibera at gmail.com>
wrote:


> https://cran.r-project.org/bin/windows/base/rw-FAQ.html

cran.r-project.org

dows XP or later, including on 64-bit versions: See Can I use R on 64-bit Windows?.



>
> Tomas
>
>
>
> On 02/23/2017 08:10 PM, Javier Luraschi wrote:
>
>> Right, I'm talking about C code.
>>
>> Do you remember if you had to set specific CFLAGS or other settings to get
>> gdb working? I wasn't able to get gdb() working with the standard build
>> settings.
>>
>> Otherwise, Rprintf() would work for sure.
>>
>> Thank you!
>>
>>
>>
>> On Thu, Feb 23, 2017 at 10:55 AM, Duncan Murdoch <
>> murdoch.duncan at gmail.com>
>> wrote:
>>
>> On 23/02/2017 1:36 PM, Javier Luraschi wrote:
>>>
>>> Hello r-devel, could someone share the tools and practices they use to

>>>>
>>>> For instance, I would like to set a breakpoint in `gl_loadhistory` and
>>>> troubleshoot from there.
>>>>
>>>> You're talking about debugging the C code rather than the R code, I
>>> think.
>>>

t,
>>> I use gdb.  There used to be a front end for it (Insight) that worked in

>>
>> names lots of other front ends, but I haven't tried any of them in

>>>
>>>

(it allows you to debug externally-built executables).


> The other choice is the old fashioned method:  add lots of Rprintf()
>>> statements to the source and recompile.
>>>
>>> Duncan Murdoch
>>>
>>>
>>>         [[alternative HTML version deleted]]
>>
>> ______________________________________________
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel
R-devel Info Page - ETH Zurich<https://stat.ethz.ch/mailman/listinfo/r-devel>
stat.ethz.ch
Public discussion list on R development. This list is intended for questions and discussion about code development in R. Questions likely to prompt discussion ...



>>
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
R-devel Info Page - ETH Zurich<https://stat.ethz.ch/mailman/listinfo/r-devel>
stat.ethz.ch
Public discussion list on R development. This list is intended for questions and discussion about code development in R. Questions likely to prompt discussion ...



>

        [[alternative HTML version deleted]]

______________________________________________
R-devel at r-project.org mailing list
https://stat.ethz.ch/mailman/listinfo/r-devel
R-devel Info Page - ETH Zurich<https://stat.ethz.ch/mailman/listinfo/r-devel>
stat.ethz.ch
Public discussion list on R development. This list is intended for questions and discussion about code development in R. Questions likely to prompt discussion ...




	[[alternative HTML version deleted]]


From frederik at ofb.net  Fri Feb 24 17:14:44 2017
From: frederik at ofb.net (frederik at ofb.net)
Date: Fri, 24 Feb 2017 08:14:44 -0800
Subject: [Rd] Update copyright year in manuals
In-Reply-To: <22702.61518.509694.132082@stat.math.ethz.ch>
References: <56b65b53-6369-882e-a7f8-2a7c5e9f4e95@helsinki.fi>
	<22702.61518.509694.132082@stat.math.ethz.ch>
Message-ID: <20170224161444.GE18457@ofb.net>

On Thu, Feb 23, 2017 at 03:23:10PM +0100, Martin Maechler wrote:
> >>>>> Mikko Korpela <mikko.korpela at helsinki.fi>
> >>>>>     on Thu, 23 Feb 2017 14:02:58 +0200 writes:
> 
>     > With new R releases soon to come, I suggest updating the
>     > Rcopyright macro in "doc/manual/R-defs.texi" to use year
>     > 2017.
> 
> Now this is an e-mail that *REALLY* does not fit to the R-devel
> mailing list ... even though it is very very slightly related to
> the R sources.
> 
> We do *not* want noise on R-devel, please.
> 
> (and let's continue this issue in private if you want)
> Martin

Martin, I'm confused. Should Mikko have sent his suggestion to the
bugtracker, or just left it to the R Core Team to figure out for
themselves? Are we not grateful for valid suggestions? What's the
lesson here? Maybe I'm the only slow one on the list, but to me your
reply would have been a bit more helpful if it told us what to do, not
just what not to do...

Thank you,

Frederick


From zhiqiu.hu at gmail.com  Fri Feb 24 19:43:20 2017
From: zhiqiu.hu at gmail.com (Zhiqiu Hu)
Date: Fri, 24 Feb 2017 11:43:20 -0700
Subject: [Rd] BUG: the quiet option in the install.packages function
Message-ID: <CAJQNJzce+uEXXdD_zEpW381TVmKE5xmD51G7OJs-jJ8vWR1miQ@mail.gmail.com>

Dear utils/R Package maintainers,

Since I'm still using version 3.3.2, please ignore this message if the bug
has already been fixed.

*BUG: *
The install.packages function still generate outputs even if
set quiet=TRUE.

*POSSIBLE REASON:*
The issue is seemly due to that the quiet parameter was not passed to the
download.file function.

#############################
install.packages(pkgs, lib, repos = getOption("repos"),
                 contriburl = contrib.url(repos, type),
                 method, available = NULL, destdir = NULL,
                 dependencies = NA, type = getOption("pkgType"),
                 configure.args = getOption("configure.args"),
                 configure.vars = getOption("configure.vars"),
                 clean = FALSE, Ncpus = getOption("Ncpus", 1L),
                 verbose = getOption("verbose"),
                 libs_only = FALSE, INSTALL_opts, quiet = FALSE,
                 keep_outputs = FALSE, ...)

... Arguments to be passed to download.file or to the functions for binary
installs on OS X and Windows (which accept an argument "lock": see the
section on ?Locking?).
#############################

Since only (...) were passed to the download.file, the quite parameter
specified in install.packages will not work for the download.file function.

*SOLUTION: *
To fix the bug, please
(1) to pass the quiet parameter to the download.file in the
install.packages function, or
(2) to use another variable name for the "quiet" option, so that users can
decide the outputs of the download.file function when they install package.

Thank you very much.

Regards

Zhiqiu

	[[alternative HTML version deleted]]


From maechler at stat.math.ethz.ch  Sat Feb 25 21:17:42 2017
From: maechler at stat.math.ethz.ch (Martin Maechler)
Date: Sat, 25 Feb 2017 21:17:42 +0100
Subject: [Rd] Update copyright year in manuals
In-Reply-To: <20170224161444.GE18457@ofb.net>
References: <56b65b53-6369-882e-a7f8-2a7c5e9f4e95@helsinki.fi>
	<22702.61518.509694.132082@stat.math.ethz.ch>
	<20170224161444.GE18457@ofb.net>
Message-ID: <22705.58982.238739.460919@stat.math.ethz.ch>


> On Thu, Feb 23, 2017 at 03:23:10PM +0100, Martin Maechler wrote:
> > >>>>> Mikko Korpela <mikko.korpela at helsinki.fi>
> > >>>>>     on Thu, 23 Feb 2017 14:02:58 +0200 writes:
> > 
> >     > With new R releases soon to come, I suggest updating the
> >     > Rcopyright macro in "doc/manual/R-defs.texi" to use year
> >     > 2017.
> > 
> > Now this is an e-mail that *REALLY* does not fit to the R-devel
> > mailing list ... even though it is very very slightly related to
> > the R sources.
> > 
> > We do *not* want noise on R-devel, please.
> > 
> > (and let's continue this issue in private if you want)
> > Martin

> Martin, I'm confused. Should Mikko have sent his suggestion to the
> bugtracker, or just left it to the R Core Team to figure out for
> themselves? Are we not grateful for valid suggestions? What's the
> lesson here? Maybe I'm the only slow one on the list, but to me your
> reply would have been a bit more helpful if it told us what to do, not
> just what not to do...

Well, I really basically meant to do "nothing".

Mikko and I had continued the conversation in private, but here
is an excerpt of what I wrote to him:

 I think this is a case you should not even have reported at all,
 because
 
 - it is really not important: AFAIK, if you have
   copyright, the updating to new years is not important for legal
   reasons, but only for "propaganda".
 
 - (==> ) We don't ever update copyrights if we don't change the document,
   and even then do it often but not always.
 
 - more importantly: We don't clutter the SCM log files by *only*
   just changing such dates.  Some (even most?) of us, do update
   the copyright, if we do some real (non-trivial) change to the document,
   *and* notice that the last copyright is smaller than the
   current year.

I also told him that yes indeed we are grateful to learn about
errors including typos in manuals.... ambigous statements there, etc.

Note that sometimes even these may not need to go to R-devel
(with its 1000's of  subscribers rather interested into the
development of R, future features, bug fixes or changes of R..)
and rather be reported to R core or individuals whom you may have
identified (via svn logs) as working with these documents recently.

Martin


From suharto_anggono at yahoo.com  Sun Feb 26 13:02:44 2017
From: suharto_anggono at yahoo.com (Suharto Anggono Suharto Anggono)
Date: Sun, 26 Feb 2017 12:02:44 +0000 (UTC)
Subject: [Rd] rep/rep.int: in NEWS, but not yet ported from trunk
References: <1490161585.1255328.1488110564692.ref@mail.yahoo.com>
Message-ID: <1490161585.1255328.1488110564692@mail.yahoo.com>

According to "CHANGES IN R 3.3.2 patched" in NEWS, rep(x, times) and rep.int(x, times) also work when 'times' has length greater than one and has element larger than the maximal integer. In fact, it is still not the case in R 3.3.3 beta r72259. In seq.c (https://svn.r-project.org/R/branches/R-3-3-branch/src/main/seq.c), 'times' that is a vector with storage mode "double" and length greater than one is still changed first to storage mode "integer". Number in 'times' that represents an integer that is larger than the maximal integer becomes NA and error is issued for such 'times'.

I have put a comment, https://bugs.r-project.org/bugzilla3/show_bug.cgi?id=16932#c30 .


From suharto_anggono at yahoo.com  Sun Feb 26 13:02:44 2017
From: suharto_anggono at yahoo.com (Suharto Anggono Suharto Anggono)
Date: Sun, 26 Feb 2017 12:02:44 +0000 (UTC)
Subject: [Rd] rep/rep.int: in NEWS, but not yet ported from trunk
References: <1490161585.1255328.1488110564692.ref@mail.yahoo.com>
Message-ID: <1490161585.1255328.1488110564692@mail.yahoo.com>

According to "CHANGES IN R 3.3.2 patched" in NEWS, rep(x, times) and rep.int(x, times) also work when 'times' has length greater than one and has element larger than the maximal integer. In fact, it is still not the case in R 3.3.3 beta r72259. In seq.c (https://svn.r-project.org/R/branches/R-3-3-branch/src/main/seq.c), 'times' that is a vector with storage mode "double" and length greater than one is still changed first to storage mode "integer". Number in 'times' that represents an integer that is larger than the maximal integer becomes NA and error is issued for such 'times'.

I have put a comment, https://bugs.r-project.org/bugzilla3/show_bug.cgi?id=16932#c30 .


From paul at stat.auckland.ac.nz  Mon Feb 27 01:31:39 2017
From: paul at stat.auckland.ac.nz (Paul Murrell)
Date: Mon, 27 Feb 2017 13:31:39 +1300
Subject: [Rd] Graphics Device API change
Message-ID: <0587c5a7-703a-ef7b-2604-2e922d0ba35f@stat.auckland.ac.nz>

Hi

r72261 in r-devel has modified the graphics device API and bumped 
R_GE_version in GraphicsEngine.h (to satisfy PR 16951).

This means that ...

(i) third-party graphics device packages need to be reinstalled.

(ii) third-party graphics device packages will ideally need a new 
version for r-devel.

(iii) any packages that make use of getGraphicsEvent() should test 
against r-devel (and let me know of any problems).

Thanks

Paul
-- 
Dr Paul Murrell
Department of Statistics
The University of Auckland
Private Bag 92019
Auckland
New Zealand
64 9 3737599 x85392
paul at stat.auckland.ac.nz
http://www.stat.auckland.ac.nz/~paul/


From maechler at stat.math.ethz.ch  Mon Feb 27 10:20:36 2017
From: maechler at stat.math.ethz.ch (Martin Maechler)
Date: Mon, 27 Feb 2017 10:20:36 +0100
Subject: [Rd] rep/rep.int: in NEWS, but not yet ported from trunk
In-Reply-To: <1490161585.1255328.1488110564692@mail.yahoo.com>
References: <1490161585.1255328.1488110564692.ref@mail.yahoo.com>
	<1490161585.1255328.1488110564692@mail.yahoo.com>
Message-ID: <22707.61284.80736.472517@stat.math.ethz.ch>

>>>>> Suharto Anggono Suharto Anggono via R-devel <r-devel at r-project.org>
>>>>>     on Sun, 26 Feb 2017 12:02:44 +0000 writes:

    > According to "CHANGES IN R 3.3.2 patched" in NEWS, rep(x,
    > times) and rep.int(x, times) also work when 'times' has
    > length greater than one and has element larger than the
    > maximal integer. In fact, it is still not the case in R
    > 3.3.3 beta r72259. In seq.c
    > (https://svn.r-project.org/R/branches/R-3-3-branch/src/main/seq.c),
    > 'times' that is a vector with storage mode "double" and
    > length greater than one is still changed first to storage
    > mode "integer". Number in 'times' that represents an
    > integer that is larger than the maximal integer becomes NA
    > and error is issued for such 'times'.  
    > I have put a comment,
    > https://bugs.r-project.org/bugzilla3/show_bug.cgi?id=16932#c30
    > .

Thank you for noticing!

- I've changed the NEWS entry for R-patched (and moved the more
general statement to a new entry for R-devel). 
- The changes were quite substantial so I did not port them to
R-patched at the time..  We could have ported them later, but
not now, immediately before code freeze (of R 3.3.3).

- I would say   rep(5, list(6))  was never "meant to" work and had worked
  incidentally only.
  OTOH, you are correct with your comments 11 & 29 in the about
  bug report, and your proposal to make the simple case   rep(s, list(7))
  work as previously seems ok to me.

However, for all this, we will concentrate on R-devel (to become
R 3.4.0).

Best regards,
Martin Maechler


From maechler at stat.math.ethz.ch  Mon Feb 27 10:42:19 2017
From: maechler at stat.math.ethz.ch (Martin Maechler)
Date: Mon, 27 Feb 2017 10:42:19 +0100
Subject: [Rd] stats::median
In-Reply-To: <CAF7e_thQjawXc-U84Xr2pYB-fAkd=TDv9WTYn_c4S9CUUgmqfw@mail.gmail.com>
References: <CAF7e_thQjawXc-U84Xr2pYB-fAkd=TDv9WTYn_c4S9CUUgmqfw@mail.gmail.com>
Message-ID: <22707.62587.111640.683473@stat.math.ethz.ch>

>>>>> Rob J Hyndman <Rob.Hyndman at monash.edu>
>>>>>     on Wed, 15 Feb 2017 21:48:56 +1100 writes:

    > The generic stats::median method is defined as median <-
    > function (x, na.rm = FALSE) {UseMethod("median")}

    > I suggest that this should become median <- function (x,
    > na.rm = FALSE, ...)  {UseMethod("median")}

    > This would allow additional S3 methods to be developed
    > with additional arguments.

and  S4  methods, too.

    > Currently I have to over-ride this generic definition in
    > the demography package because median.demogdata has
    > several other arguments.

    > This shouldn't break any code, and will make it easier for
    > new S3 methods to be developed. It is also consistent with
    > almost all other S3 methods which do include an ellipsis.

"shouldn't break any code"   is almost always quite optimistic
	   nowadays,....

Actually it probably will break things when people start using
the new R version which implements the above *AND* use packages
installed with a previous version of R.
I agree that this does not count as "breaking any code".

In spite of all that  *and*
the perennial drawback that a '...' will allow argument name
typos to go unnoticed

I agree you have a good argument nowadays, that median() should
be the same as many similar "basic statistics" R functions and
so I'll commit such a change to R-devel (to become R 3.4.0 in April).

Thank you for the suggestion!
Martin Maechler,
ETH Zurich

    > -------------------------------------------------------------
    > Rob J Hyndman Professor of Statistics, Monash University
    > www.robjhyndman.com

    > ______________________________________________
    > R-devel at r-project.org mailing list
    > https://stat.ethz.ch/mailman/listinfo/r-devel


From simons at nospf.cryp.to  Mon Feb 27 10:30:39 2017
From: simons at nospf.cryp.to (Peter Simons)
Date: Mon, 27 Feb 2017 10:30:39 +0100
Subject: [Rd] Test suite failures in R-devel_2017-02-25_r72256
Message-ID: <8760jwdlq8.fsf@write-only.cryp.to>

Hi,

I tried compiling the latest pre-release for R 3.3.3 for the NixOS Linux
distribution [1], but the build fails during the "make check" phase
because of the following 2 issues:

1) The "tools" test in "tests/Examples" requires network access, which
   it doesn't have in our build environment. Therefore, it fails as
   follows according to "tools-Ex.Rout.fail":

   | [...]
   | > set.seed(11)
   | > ## End(Don't show)
   | > pdb <- CRAN_package_db()
   | Warning in url(sprintf("%s/%s", cran, path), open = "rb") :
   |   URL 'http://CRAN.R-project.org/web/packages/packages.rds': status was 'Couldn't resolve host name'
   | Error in url(sprintf("%s/%s", cran, path), open = "rb") :
   |   cannot open the connection to 'http://CRAN.R-project.org/web/packages/packages.rds'
   | Calls: CRAN_package_db -> as.data.frame -> read_CRAN_object -> gzcon -> url
   | Execution halted

   I'm wondering whether it would be possible to extend the test suite
   with a configure-time flag that disable tests which depend on network
   access? My experience is that most modern Linux distributions run
   their builds in a restricted environment and therefore will run into
   trouble if the suite assumes that it can access the Internet.

2) When R is compiled with the --without-recommended-packages flag
   (which is our preferred configuration), the "base" test in
   "tests/Examples" fails, apparently because it depends on MASS. I'm
   citing from "base-Ex.Rout.fail":

   | >  ## The string "foo" and the symbol 'foo' can be used interchangably here:
   | >  stopifnot( identical(isNamespaceLoaded(  "foo"   ), FALSE),
   | +             identical(isNamespaceLoaded(quote(foo)), FALSE),
   | +             identical(isNamespaceLoaded(quote(stats)), statL))
   | >
   | > hasM <- isNamespaceLoaded("MASS") # (to restore if needed)
   | > Mns <- asNamespace("MASS") # loads it if not already
   | Error in loadNamespace(name) : there is no package called 'MASS'
   | Calls: asNamespace ... tryCatch -> tryCatchList -> tryCatchOne -> <Anonymous>
   | Execution halted

I hope this helps!

Best regards,
Peter



[1] http://nixos.org/


From maechler at stat.math.ethz.ch  Mon Feb 27 16:08:40 2017
From: maechler at stat.math.ethz.ch (Martin Maechler)
Date: Mon, 27 Feb 2017 16:08:40 +0100
Subject: [Rd] Test suite failures in R-devel_2017-02-25_r72256
In-Reply-To: <8760jwdlq8.fsf@write-only.cryp.to>
References: <8760jwdlq8.fsf@write-only.cryp.to>
Message-ID: <22708.16632.500910.453227@stat.math.ethz.ch>

>>>>> Peter Simons <simons at nospf.cryp.to>
>>>>>     on Mon, 27 Feb 2017 10:30:39 +0100 writes:

    > Hi, I tried compiling the latest pre-release for R 3.3.3
    > for the NixOS Linux distribution [1], but the build fails
    > during the "make check" phase because of the following 2
    > issues:

    > 1) The "tools" test in "tests/Examples" requires network
    > access, which it doesn't have in our build
    > environment. 

One may argue that the 'make check' (or even 'make check-all')
tests could / should be allowed more resources than the pure
build environment.

    > Therefore, it fails as follows according to
    > "tools-Ex.Rout.fail":

    > | [...]
    > | > set.seed(11)
    > | > ## End(Don't show)
    > | > pdb <- CRAN_package_db()
    > | Warning in url(sprintf("%s/%s", cran, path), open = "rb") :
    > |   URL 'http://CRAN.R-project.org/web/packages/packages.rds': status was 'Couldn't resolve host name'
    > | Error in url(sprintf("%s/%s", cran, path), open = "rb") :
    > |   cannot open the connection to 'http://CRAN.R-project.org/web/packages/packages.rds'
    > | Calls: CRAN_package_db -> as.data.frame -> read_CRAN_object -> gzcon -> url
    > | Execution halted

    > I'm wondering whether it would be possible to extend the test suite
    > with a configure-time flag that disable tests which depend on network
    > access? My experience is that most modern Linux distributions run
    > their builds in a restricted environment and therefore will run into
    > trouble if the suite assumes that it can access the Internet.

[see above] Is it necessary to also run the 'make check' part in
that restricted environment?  Or could that ('checking") not get
more priviledges?

Note that you can only run  "make check" if you don't install
recommended packages, whereas more thorough testing would
include
	make check-devel
or even
	make check-all

but these do have quite a bit more requirements including
recommended packages being present.


    > 2) When R is compiled with the --without-recommended-packages flag
    > (which is our preferred configuration), the "base" test in
    > "tests/Examples" fails, apparently because it depends on MASS. I'm
    > citing from "base-Ex.Rout.fail":

    > | >  ## The string "foo" and the symbol 'foo' can be used interchangably here:
    > | >  stopifnot( identical(isNamespaceLoaded(  "foo"   ), FALSE),
    > | +             identical(isNamespaceLoaded(quote(foo)), FALSE),
    > | +             identical(isNamespaceLoaded(quote(stats)), statL))
    > | >
    > | > hasM <- isNamespaceLoaded("MASS") # (to restore if needed)
    > | > Mns <- asNamespace("MASS") # loads it if not already
    > | Error in loadNamespace(name) : there is no package called 'MASS'
    > | Calls: asNamespace ... tryCatch -> tryCatchList -> tryCatchOne -> <Anonymous>
    > | Execution halted

Yes, that example should not have assumed a recommended package
to be available unconditionally.

I've changed it, thank you!


    > I hope this helps!

    > Best regards,
    > Peter



    > [1] http://nixos.org/

    > ______________________________________________
    > R-devel at r-project.org mailing list
    > https://stat.ethz.ch/mailman/listinfo/r-devel


From suharto_anggono at yahoo.com  Mon Feb 27 16:23:29 2017
From: suharto_anggono at yahoo.com (Suharto Anggono Suharto Anggono)
Date: Mon, 27 Feb 2017 15:23:29 +0000 (UTC)
Subject: [Rd] rep/rep.int: in NEWS, but not yet ported from trunk
References: <1372946715.1855258.1488209009099.ref@mail.yahoo.com>
Message-ID: <1372946715.1855258.1488209009099@mail.yahoo.com>

For R 3.3.3, if 3.3.3 is really the last in 3.3.x series, I suggest reverting to R 3.3.2 code (and removing the corresponding NEWS entry), if possible. Failure of something like
rep(5, list(6))
makes some previously working R code broken in some situation. It is not good to have in an R release that will last long, I think.
--------------------------------------------
On Mon, 27/2/17, Martin Maechler <maechler at stat.math.ethz.ch> wrote:

 Subject: Re: [Rd] rep/rep.int: in NEWS, but not yet ported from trunk

 Cc: R-devel at r-project.org
 Date: Monday, 27 February, 2017, 4:20 PM
 
>>>>> Suharto Anggono Suharto Anggono via R-devel <r-devel at r-project.org>
>>>>>     on Sun, 26 Feb 2017 12:02:44 +0000 writes:

    > According to "CHANGES IN R 3.3.2 patched" in NEWS, rep(x,
    > times) and rep.int(x, times) also work when 'times' has
    > length greater than one and has element larger than the
    > maximal integer. In fact, it is still not the case in R
    > 3.3.3 beta r72259. In seq.c
    > (https://svn.r-project.org/R/branches/R-3-3-branch/src/main/seq.c),
    > 'times' that is a vector with storage mode "double" and
    > length greater than one is still changed first to storage
    > mode "integer". Number in 'times' that represents an
    > integer that is larger than the maximal integer becomes NA
    > and error is issued for such 'times'.  
    > I have put a comment,
    > https://bugs.r-project.org/bugzilla3/show_bug.cgi?id=16932#c30
    > .

[[elided Yahoo spam]]

- I've changed the NEWS entry for R-patched (and moved the more
general statement to a new entry for R-devel). 
- The changes were quite substantial so I did not port them to
R-patched at the time..  We could have ported them later, but
not now, immediately before code freeze (of R 3.3.3).

- I would say   rep(5, list(6))  was never "meant to" work and had worked
  incidentally only.
  OTOH, you are correct with your comments 11 & 29 in the about
  bug report, and your proposal to make the simple case   rep(s, list(7))
  work as previously seems ok to me.

However, for all this, we will concentrate on R-devel (to become
R 3.4.0).

Best regards,
Martin Maechler


From frederik at ofb.net  Mon Feb 27 20:50:36 2017
From: frederik at ofb.net (frederik at ofb.net)
Date: Mon, 27 Feb 2017 11:50:36 -0800
Subject: [Rd] Graphics Device API change
In-Reply-To: <0587c5a7-703a-ef7b-2604-2e922d0ba35f@stat.auckland.ac.nz>
References: <0587c5a7-703a-ef7b-2604-2e922d0ba35f@stat.auckland.ac.nz>
Message-ID: <20170227195036.GI18457@ofb.net>

Thank you Paul for taking care of these patches. I'm very glad to see
them finally applied in r-devel.

Frederick

On Mon, Feb 27, 2017 at 01:31:39PM +1300, Paul Murrell wrote:
> Hi
> 
> r72261 in r-devel has modified the graphics device API and bumped
> R_GE_version in GraphicsEngine.h (to satisfy PR 16951).
> 
> This means that ...
> 
> (i) third-party graphics device packages need to be reinstalled.
> 
> (ii) third-party graphics device packages will ideally need a new version
> for r-devel.
> 
> (iii) any packages that make use of getGraphicsEvent() should test against
> r-devel (and let me know of any problems).
> 
> Thanks
> 
> Paul
> -- 
> Dr Paul Murrell
> Department of Statistics
> The University of Auckland
> Private Bag 92019
> Auckland
> New Zealand
> 64 9 3737599 x85392
> paul at stat.auckland.ac.nz
> http://www.stat.auckland.ac.nz/~paul/
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>


From maechler at stat.math.ethz.ch  Tue Feb 28 17:49:33 2017
From: maechler at stat.math.ethz.ch (Martin Maechler)
Date: Tue, 28 Feb 2017 17:49:33 +0100
Subject: [Rd] Test suite failures in R-devel_2017-02-25_r72256
In-Reply-To: <22708.16632.500910.453227@stat.math.ethz.ch>
References: <8760jwdlq8.fsf@write-only.cryp.to>
	<22708.16632.500910.453227@stat.math.ethz.ch>
Message-ID: <22709.43549.612233.752609@stat.math.ethz.ch>

>>>>> Martin Maechler <maechler at stat.math.ethz.ch>
>>>>>     on Mon, 27 Feb 2017 16:08:40 +0100 writes:

>>>>> Peter Simons <simons at nospf.cryp.to>
>>>>>     on Mon, 27 Feb 2017 10:30:39 +0100 writes:

    >> Hi, I tried compiling the latest pre-release for R 3.3.3
    >> for the NixOS Linux distribution [1], but the build fails
    >> during the "make check" phase because of the following 2
    >> issues:

    >> 1) The "tools" test in "tests/Examples" requires network
    >> access, which it doesn't have in our build
    >> environment. 

    > One may argue that the 'make check' (or even 'make check-all')
    > tests could / should be allowed more resources than the pure
    > build environment.

    >> Therefore, it fails as follows according to
    >> "tools-Ex.Rout.fail":

    >> | [...]
    >> | > set.seed(11)
    >> | > ## End(Don't show)
    >> | > pdb <- CRAN_package_db()
    >> | Warning in url(sprintf("%s/%s", cran, path), open = "rb") :
    >> |   URL 'http://CRAN.R-project.org/web/packages/packages.rds': status was 'Couldn't resolve host name'
    >> | Error in url(sprintf("%s/%s", cran, path), open = "rb") :
    >> |   cannot open the connection to 'http://CRAN.R-project.org/web/packages/packages.rds'
    >> | Calls: CRAN_package_db -> as.data.frame -> read_CRAN_object -> gzcon -> url
    >> | Execution halted

    >> I'm wondering whether it would be possible to extend the test suite
    >> with a configure-time flag that disable tests which depend on network
    >> access? My experience is that most modern Linux distributions run
    >> their builds in a restricted environment and therefore will run into
    >> trouble if the suite assumes that it can access the Internet.

    > [see above] Is it necessary to also run the 'make check' part in
    > that restricted environment?  Or could that ('checking") not get
    > more priviledges?

    > Note that you can only run  "make check" if you don't install
    > recommended packages, whereas more thorough testing would
    > include
    >      make check-devel
    > or even
    >      make check-all
    >
    > but these do have quite a bit more requirements including
    > recommended packages being present.

I have to correct myself:  The above paragraph may be misleading:

Much, if not all of
      make check-devel
and   make check-all
have worked well since R version 3.1.0  which had in its NEWS an entry

     ? More of 'make check' will work if recommended packages are not
       installed: but recommended packages remain needed for thorough
       checking of an R build.

Further, the 'R-admin' manual (on 'make check-all' etc) contains

 |  Note that these checks are only run completely 
 |  if the recommended packages are installed.

so their presence is not required  but much recommended for
thorough testing.

Martin


