From daattali at gmail.com  Mon Aug  3 05:30:59 2015
From: daattali at gmail.com (Dean Attali)
Date: Sun, 2 Aug 2015 20:30:59 -0700
Subject: [Rd] 'vapply' not returning list element names when returned
 element is a length-1 list
Message-ID: <CA+j8Z+=QN4hOyabjaAtd7gBRSY9RGkXXwRY6uKS_2DoXTp_e_w@mail.gmail.com>

Hi all

Sorry for the confusing title. I noticed the following inconsistency:

If i have a function that returns a named list with 2 (or more) elements,
then using 'vapply' retains the names of the elements:

> vapply(1:3, function(x) list("foo" = "bar", "hello" = "world"),
> vector("list", 2))

      [,1]    [,2]    [,3]

foo   "bar"   "bar"   "bar"

hello "world" "world" "world"


But if the function only returns one element, then the name "foo" is lost



> vapply(1:3, function(x) list("foo" = "bar"), vector("list", 1))

[[1]]

[1] "bar"


> [[2]]

[1] "bar"


> [[3]]

[1] "bar"


 Note that when 'lapply' is used instead, the name IS retained

>
> > lapply(1:3, function(x) list("foo" = "bar"))
> [[1]]
> [[1]]$foo
> [1] "bar"
>
> [[2]]
> [[2]]$foo
> [1] "bar"
>
> [[3]]
> [[3]]$foo
> [1] "bar"



I'm not sure if this is intentional or a bug, but it's made my life more
difficult on several occasions and I don't see any reason it would behave
like this.

Thanks

---
http://deanattali.com

	[[alternative HTML version deleted]]


From S.Ellison at LGCGroup.com  Wed Aug  5 14:08:49 2015
From: S.Ellison at LGCGroup.com (S Ellison)
Date: Wed, 5 Aug 2015 13:08:49 +0100
Subject: [Rd] 'vapply' not returning list element names when returned
 element is a length-1 list
In-Reply-To: <CA+j8Z+=QN4hOyabjaAtd7gBRSY9RGkXXwRY6uKS_2DoXTp_e_w@mail.gmail.com>
References: <CA+j8Z+=QN4hOyabjaAtd7gBRSY9RGkXXwRY6uKS_2DoXTp_e_w@mail.gmail.com>
Message-ID: <1A8C1289955EF649A09086A153E2672403B43703C1@GBTEDVPEXCMB04.corp.lgc-group.com>



> -----Original Message-----
> From: R-devel [mailto:r-devel-bounces at r-project.org] On Behalf Of Dean Attali
> If i have a function that returns a named list with 2 (or more) elements,
> then using 'vapply' retains the names of the elements:
> .... 
> But if the function only returns one element, then the name "foo" is lost

vapply _always simplifies_ according to the documentation.

In the first case (function return value contains more than one element, and each ), vapply simplifies to a matrix of two lists (!).  The names "foo" and "hello" have been added to the dimnames so you can tell which is which.

in the second case the function return value is a single list and not a matrix of lists (a simple list is simpler than a matrix of lists). The name of the list ('foo') has nowhere to go; instead, you would be assigning the list to a named variable and you don't need the name 'foo'. 

Whether that is inconsistent is something of a matter of perspective. Simplification applied as far as possible will always depend on what simplification is possible for the particular return values, so different return values provide different behaviour.

S Ellison 


*******************************************************************
This email and any attachments are confidential. Any use...{{dropped:8}}


From daattali at gmail.com  Thu Aug  6 04:35:44 2015
From: daattali at gmail.com (Dean Attali)
Date: Wed, 5 Aug 2015 19:35:44 -0700
Subject: [Rd] 'vapply' not returning list element names when returned
 element is a length-1 list
In-Reply-To: <1A8C1289955EF649A09086A153E2672403B43703C1@GBTEDVPEXCMB04.corp.lgc-group.com>
References: <CA+j8Z+=QN4hOyabjaAtd7gBRSY9RGkXXwRY6uKS_2DoXTp_e_w@mail.gmail.com>
	<1A8C1289955EF649A09086A153E2672403B43703C1@GBTEDVPEXCMB04.corp.lgc-group.com>
Message-ID: <CA+j8Z+mposrAaF6hjt4HPgWq6e6MUwyc-GKmrXz81PEjZdDxYQ@mail.gmail.com>

Thank you, I do see that now. I still don't completely agree with the
behaviour, I hoped there would be a way to not simplify, but thank you for
pointing me to the fact that it is documented.

---
http://deanattali.com

On 5 August 2015 at 05:08, S Ellison <S.Ellison at lgcgroup.com> wrote:

>
>
> > -----Original Message-----
> > From: R-devel [mailto:r-devel-bounces at r-project.org] On Behalf Of Dean
> Attali
> > If i have a function that returns a named list with 2 (or more) elements,
> > then using 'vapply' retains the names of the elements:
> > ....
> > But if the function only returns one element, then the name "foo" is lost
>
> vapply _always simplifies_ according to the documentation.
>
> In the first case (function return value contains more than one element,
> and each ), vapply simplifies to a matrix of two lists (!).  The names
> "foo" and "hello" have been added to the dimnames so you can tell which is
> which.
>
> in the second case the function return value is a single list and not a
> matrix of lists (a simple list is simpler than a matrix of lists). The name
> of the list ('foo') has nowhere to go; instead, you would be assigning the
> list to a named variable and you don't need the name 'foo'.
>
> Whether that is inconsistent is something of a matter of perspective.
> Simplification applied as far as possible will always depend on what
> simplification is possible for the particular return values, so different
> return values provide different behaviour.
>
> S Ellison
>
>
> *******************************************************************
> This email and any attachments are confidential. Any u...{{dropped:12}}


From suharto_anggono at yahoo.com  Thu Aug  6 06:45:19 2015
From: suharto_anggono at yahoo.com (Suharto Anggono Suharto Anggono)
Date: Wed, 5 Aug 2015 21:45:19 -0700
Subject: [Rd] 'vapply' not returning list element names when returned
	element is a length-1 list
Message-ID: <1438836319.93113.YahooMailBasic@web125102.mail.ne1.yahoo.com>

Quote----------------

> If i have a function that returns a named list with 2 (or more) elements,
> then using 'vapply' retains the names of the elements:
> ....
> But if the function only returns one element, then the name "foo" is lost

vapply _always simplifies_ according to the documentation.

In the first case (function return value contains more than one element, and each ), vapply simplifies to a matrix of two lists (!).  The names "foo" and "hello" have been added to the dimnames so you can tell which is which.

in the second case the function return value is a single list and not a matrix of lists (a simple list is simpler than a matrix of lists). The name of the list ('foo') has nowhere to go; instead, you would be assigning the list to a named variable and you don't need the name 'foo'.

Whether that is inconsistent is something of a matter of perspective. Simplification applied as far as possible will always depend on what simplification is possible for the particular return values, so different return values provide different behaviour.

S Ellison 

--------------------------------------

In the first case, the result is a matrix of mode list, which is a list with "dim" attribute of length 2.

For comparison, 'sapply' retains the name "foo".

> sapply(1:3, function(x) list("foo" = "bar"))
$foo
[1] "bar"

$foo
[1] "bar"

$foo
[1] "bar"


From luca.cerone at gmail.com  Thu Aug  6 09:24:48 2015
From: luca.cerone at gmail.com (Luca Cerone)
Date: Thu, 6 Aug 2015 09:24:48 +0200
Subject: [Rd] Weird issue when iterating through dates
Message-ID: <CAFnz2--pK12My=sJ-N0sykXi0zQa+qwtR42iZo2fBrpiTTWOCg@mail.gmail.com>

Dear all,
I am experiencing a weird issue when iterating through dates in R
(3.1.2 and 3.2.1 on 64bit linux machines)

I am bit surprised about the behaviour of this snippet of code:

d1 <- as.Date('2015-01-01')
d2 <- as.Date('2015-01-31')

for ( dt in seq(d1,d2, by=1) ) {
  dt <- as.character(dt)
  print(dt)
}

for ( dt in as.character(seq(d1,d2, by=1)) ) {
  print(dt)
}

I can't find a good explanation why the first for loop would convert
to string the numeric interpretation
of the dates while the second one correctly (at least in my
intentions) prints the dates as string.

I am sure that it is not a bug in R but I would like to understand why
I am getting different outputs from the two for loops.

Thanks a lot in advance for your help!

Cheers,
Luca


From csardi.gabor at gmail.com  Thu Aug  6 10:10:48 2015
From: csardi.gabor at gmail.com (=?UTF-8?B?R8OhYm9yIENzw6FyZGk=?=)
Date: Thu, 6 Aug 2015 04:10:48 -0400
Subject: [Rd] Weird issue when iterating through dates
In-Reply-To: <CAFnz2--pK12My=sJ-N0sykXi0zQa+qwtR42iZo2fBrpiTTWOCg@mail.gmail.com>
References: <CAFnz2--pK12My=sJ-N0sykXi0zQa+qwtR42iZo2fBrpiTTWOCg@mail.gmail.com>
Message-ID: <CABtg=K=b5Amh17=9wZ=g2j9F63KtYEYSDWoQEOGx7kvYEdBHZA@mail.gmail.com>

Date has a `[.Date` method and also `[[.Date`, but it looks like a for
loop does not consider the class of the object you are iterating over,
so these are ignored and the internal representation is used.

I think this is a bug, at least in the documentation of ?"for".

Interestingly, lapply and co. do consider the class:

invisible(lapply(seq(d1, d2, by = 1), print))

works as you would expect. (The invisible() is to suppress printing
the return value.)

Gabor

On Thu, Aug 6, 2015 at 3:24 AM, Luca Cerone <luca.cerone at gmail.com> wrote:
> Dear all,
> I am experiencing a weird issue when iterating through dates in R
> (3.1.2 and 3.2.1 on 64bit linux machines)
>
> I am bit surprised about the behaviour of this snippet of code:
>
> d1 <- as.Date('2015-01-01')
> d2 <- as.Date('2015-01-31')
>
> for ( dt in seq(d1,d2, by=1) ) {
>   dt <- as.character(dt)
>   print(dt)
> }
>
> for ( dt in as.character(seq(d1,d2, by=1)) ) {
>   print(dt)
> }
>
> I can't find a good explanation why the first for loop would convert
> to string the numeric interpretation
> of the dates while the second one correctly (at least in my
> intentions) prints the dates as string.
>
> I am sure that it is not a bug in R but I would like to understand why
> I am getting different outputs from the two for loops.
>
> Thanks a lot in advance for your help!
>
> Cheers,
> Luca
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From luca.cerone at gmail.com  Thu Aug  6 12:30:10 2015
From: luca.cerone at gmail.com (Luca Cerone)
Date: Thu, 6 Aug 2015 12:30:10 +0200
Subject: [Rd] Weird issue when iterating through dates
In-Reply-To: <CABtg=K=b5Amh17=9wZ=g2j9F63KtYEYSDWoQEOGx7kvYEdBHZA@mail.gmail.com>
References: <CAFnz2--pK12My=sJ-N0sykXi0zQa+qwtR42iZo2fBrpiTTWOCg@mail.gmail.com>
	<CABtg=K=b5Amh17=9wZ=g2j9F63KtYEYSDWoQEOGx7kvYEdBHZA@mail.gmail.com>
Message-ID: <CAFnz2-8902ztc-=gcwcA4jnYHkX9PL0oNMctGjtmXdynQjYRcg@mail.gmail.com>

Thanks G?bor,
I thought there was some mistake in my logic on how casting works in R
and wanted to be sure.

Just a quick question: what's the difference between  `[.Date` and  `[[.Date`?
Is it supposed to be the method for accessing the value right?

Thanks again for your help,
Cheers,
Luca

On Thu, Aug 6, 2015 at 10:10 AM, G?bor Cs?rdi <csardi.gabor at gmail.com> wrote:
> Date has a `[.Date` method and also `[[.Date`, but it looks like a for
> loop does not consider the class of the object you are iterating over,
> so these are ignored and the internal representation is used.
>
> I think this is a bug, at least in the documentation of ?"for".
>
> Interestingly, lapply and co. do consider the class:
>
> invisible(lapply(seq(d1, d2, by = 1), print))
>
> works as you would expect. (The invisible() is to suppress printing
> the return value.)
>
> Gabor
>
> On Thu, Aug 6, 2015 at 3:24 AM, Luca Cerone <luca.cerone at gmail.com> wrote:
>> Dear all,
>> I am experiencing a weird issue when iterating through dates in R
>> (3.1.2 and 3.2.1 on 64bit linux machines)
>>
>> I am bit surprised about the behaviour of this snippet of code:
>>
>> d1 <- as.Date('2015-01-01')
>> d2 <- as.Date('2015-01-31')
>>
>> for ( dt in seq(d1,d2, by=1) ) {
>>   dt <- as.character(dt)
>>   print(dt)
>> }
>>
>> for ( dt in as.character(seq(d1,d2, by=1)) ) {
>>   print(dt)
>> }
>>
>> I can't find a good explanation why the first for loop would convert
>> to string the numeric interpretation
>> of the dates while the second one correctly (at least in my
>> intentions) prints the dates as string.
>>
>> I am sure that it is not a bug in R but I would like to understand why
>> I am getting different outputs from the two for loops.
>>
>> Thanks a lot in advance for your help!
>>
>> Cheers,
>> Luca
>>
>> ______________________________________________
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel


From csardi.gabor at gmail.com  Thu Aug  6 14:36:39 2015
From: csardi.gabor at gmail.com (=?UTF-8?B?R8OhYm9yIENzw6FyZGk=?=)
Date: Thu, 6 Aug 2015 08:36:39 -0400
Subject: [Rd] Weird issue when iterating through dates
In-Reply-To: <CAFnz2-8902ztc-=gcwcA4jnYHkX9PL0oNMctGjtmXdynQjYRcg@mail.gmail.com>
References: <CAFnz2--pK12My=sJ-N0sykXi0zQa+qwtR42iZo2fBrpiTTWOCg@mail.gmail.com>
	<CABtg=K=b5Amh17=9wZ=g2j9F63KtYEYSDWoQEOGx7kvYEdBHZA@mail.gmail.com>
	<CAFnz2-8902ztc-=gcwcA4jnYHkX9PL0oNMctGjtmXdynQjYRcg@mail.gmail.com>
Message-ID: <CABtg=K=PB+r1FHuzcK1pGMXQFo=peuTGWx_CL_CczkspwXq3SA@mail.gmail.com>

On Thu, Aug 6, 2015 at 6:30 AM, Luca Cerone <luca.cerone at gmail.com> wrote:
[...]
> Just a quick question: what's the difference between  `[.Date` and  `[[.Date`?
> Is it supposed to be the method for accessing the value right?

For Dates and atomic vectors in general they are the same, but in
general they are two different operators that behave differently on
some data types. E.g. on lists [ selects a sub-list and [[ selects a
single element.

Gabor

[...]


From wdunlap at tibco.com  Thu Aug  6 16:55:37 2015
From: wdunlap at tibco.com (William Dunlap)
Date: Thu, 6 Aug 2015 07:55:37 -0700
Subject: [Rd] Weird issue when iterating through dates
In-Reply-To: <CABtg=K=PB+r1FHuzcK1pGMXQFo=peuTGWx_CL_CczkspwXq3SA@mail.gmail.com>
References: <CAFnz2--pK12My=sJ-N0sykXi0zQa+qwtR42iZo2fBrpiTTWOCg@mail.gmail.com>
	<CABtg=K=b5Amh17=9wZ=g2j9F63KtYEYSDWoQEOGx7kvYEdBHZA@mail.gmail.com>
	<CAFnz2-8902ztc-=gcwcA4jnYHkX9PL0oNMctGjtmXdynQjYRcg@mail.gmail.com>
	<CABtg=K=PB+r1FHuzcK1pGMXQFo=peuTGWx_CL_CczkspwXq3SA@mail.gmail.com>
Message-ID: <CAF8bMcYHLfxVaT-NT1SiOTzrBEGM6vgr+PwwzGQGAJ6kGZx_MA@mail.gmail.com>

>> Just a quick question: what's the difference between  `[.Date` and
`[[.Date`?
>> Is it supposed to be the method for accessing the value right?
>
>For Dates and atomic vectors in general they are the same, but ...

Even for atomic vectors with names they are not quite the same
    > c(One=1, Two=2)[[2]]
    [1] 2
    > c(One=1, Two=2)[2]
    Two
      2
(and [[ will only return 1 item, unlike [).


Bill Dunlap
TIBCO Software
wdunlap tibco.com

On Thu, Aug 6, 2015 at 5:36 AM, G?bor Cs?rdi <csardi.gabor at gmail.com> wrote:

> On Thu, Aug 6, 2015 at 6:30 AM, Luca Cerone <luca.cerone at gmail.com> wrote:
> [...]
> > Just a quick question: what's the difference between  `[.Date` and
> `[[.Date`?
> > Is it supposed to be the method for accessing the value right?
>
> For Dates and atomic vectors in general they are the same, but in
> general they are two different operators that behave differently on
> some data types. E.g. on lists [ selects a sub-list and [[ selects a
> single element.
>
> Gabor
>
> [...]
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>

	[[alternative HTML version deleted]]


From peter.langfelder at gmail.com  Thu Aug  6 20:33:43 2015
From: peter.langfelder at gmail.com (Peter Langfelder)
Date: Thu, 6 Aug 2015 11:33:43 -0700
Subject: [Rd] R-patched is now R-beta?
Message-ID: <CA+hbrhVS4kpwJfqrsx+9C4yxwHmEO=W8z-=5Z=WYfPBN_J01NA@mail.gmail.com>

Just downloaded the newest R-patched.tar.bz. DEcompressing and
untarring now produces a directory R-beta instead of the usual (for
me, at least) R. The file VERSION now says 3.2.2 beta. Just wanted to
double-check that there is no mixup of development and patched
versions.

Thanks,

Peter


From edd at debian.org  Thu Aug  6 21:07:21 2015
From: edd at debian.org (Dirk Eddelbuettel)
Date: Thu, 6 Aug 2015 14:07:21 -0500
Subject: [Rd] R-patched is now R-beta?
In-Reply-To: <CA+hbrhVS4kpwJfqrsx+9C4yxwHmEO=W8z-=5Z=WYfPBN_J01NA@mail.gmail.com>
References: <CA+hbrhVS4kpwJfqrsx+9C4yxwHmEO=W8z-=5Z=WYfPBN_J01NA@mail.gmail.com>
Message-ID: <21955.45161.944906.596402@max.nulle.part>


On 6 August 2015 at 11:33, Peter Langfelder wrote:
| Just downloaded the newest R-patched.tar.bz. DEcompressing and
| untarring now produces a directory R-beta instead of the usual (for
| me, at least) R. The file VERSION now says 3.2.2 beta. Just wanted to
| double-check that there is no mixup of development and patched
| versions.

That is the common pattern leading up to a release. See eg
  http://developer.r-project.org/
and I quoteL  

  The release of 3.2.2 ("Fire Safety") is scheduled for August 14,
  2015. Release candidate tarballs will be made available during the week up to
  the release.

  2015-08-04: START (3.2.2 beta)
  2015-08-07: CODE FREEZE (3.2.2 RC)
  2015-08-14: RELEASE (3.2.2)

I made a first beta release for Debian on Aug 4th and plan to make one more
before August 14 when 3.2.2 becomes official.

Dirk

-- 
http://dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org


From peter.langfelder at gmail.com  Thu Aug  6 21:37:54 2015
From: peter.langfelder at gmail.com (Peter Langfelder)
Date: Thu, 6 Aug 2015 12:37:54 -0700
Subject: [Rd] R-patched is now R-beta?
In-Reply-To: <21955.45161.944906.596402@max.nulle.part>
References: <CA+hbrhVS4kpwJfqrsx+9C4yxwHmEO=W8z-=5Z=WYfPBN_J01NA@mail.gmail.com>
	<21955.45161.944906.596402@max.nulle.part>
Message-ID: <CA+hbrhUjZA8aq5z5K6pcy=bKANRMuN23+v=MD-_ou-jzP8Nx+w@mail.gmail.com>

Thanks!

Peter

On Thu, Aug 6, 2015 at 12:07 PM, Dirk Eddelbuettel <edd at debian.org> wrote:
>
> On 6 August 2015 at 11:33, Peter Langfelder wrote:
> | Just downloaded the newest R-patched.tar.bz. DEcompressing and
> | untarring now produces a directory R-beta instead of the usual (for
> | me, at least) R. The file VERSION now says 3.2.2 beta. Just wanted to
> | double-check that there is no mixup of development and patched
> | versions.
>
> That is the common pattern leading up to a release. See eg
>   http://developer.r-project.org/
> and I quoteL
>
>   The release of 3.2.2 ("Fire Safety") is scheduled for August 14,
>   2015. Release candidate tarballs will be made available during the week up to
>   the release.
>
>   2015-08-04: START (3.2.2 beta)
>   2015-08-07: CODE FREEZE (3.2.2 RC)
>   2015-08-14: RELEASE (3.2.2)
>
> I made a first beta release for Debian on Aug 4th and plan to make one more
> before August 14 when 3.2.2 becomes official.
>
> Dirk
>
> --
> http://dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org


From murdoch.duncan at gmail.com  Thu Aug  6 22:14:34 2015
From: murdoch.duncan at gmail.com (Duncan Murdoch)
Date: Thu, 06 Aug 2015 16:14:34 -0400
Subject: [Rd] R-patched is now R-beta?
In-Reply-To: <21955.45161.944906.596402@max.nulle.part>
References: <CA+hbrhVS4kpwJfqrsx+9C4yxwHmEO=W8z-=5Z=WYfPBN_J01NA@mail.gmail.com>
	<21955.45161.944906.596402@max.nulle.part>
Message-ID: <55C3C02A.7090609@gmail.com>

On 06/08/2015 3:07 PM, Dirk Eddelbuettel wrote:
> 
> On 6 August 2015 at 11:33, Peter Langfelder wrote:
> | Just downloaded the newest R-patched.tar.bz. DEcompressing and
> | untarring now produces a directory R-beta instead of the usual (for
> | me, at least) R. The file VERSION now says 3.2.2 beta. Just wanted to
> | double-check that there is no mixup of development and patched
> | versions.
> 
> That is the common pattern leading up to a release. See eg
>   http://developer.r-project.org/
> and I quoteL  
> 
>   The release of 3.2.2 ("Fire Safety") is scheduled for August 14,
>   2015. Release candidate tarballs will be made available during the week up to
>   the release.
> 
>   2015-08-04: START (3.2.2 beta)
>   2015-08-07: CODE FREEZE (3.2.2 RC)
>   2015-08-14: RELEASE (3.2.2)
> 
> I made a first beta release for Debian on Aug 4th and plan to make one more
> before August 14 when 3.2.2 becomes official.

And for those on Windows, I do nightly builds of the beta and RC
versions.  Please test these, and report any bugs asap.

Duncan Murdoch


From joseclaudio.faria at gmail.com  Fri Aug  7 01:16:18 2015
From: joseclaudio.faria at gmail.com (Jose Claudio Faria)
Date: Thu, 6 Aug 2015 20:16:18 -0300
Subject: [Rd] update.packages(checkBuilt=TRUE, ask=FALSE): possible bug
In-Reply-To: <55B91183.6000306@gmail.com>
References: <CAN+Emd-n=kZCGSV6DuMPLi-UFsztywtZ3h+cVaLuPYyHFbuYaw@mail.gmail.com>
	<21FF8325-EE50-480E-9729-E0440D6587EE@gmail.com>
	<55B90580.4010207@yorku.ca> <55B91183.6000306@gmail.com>
Message-ID: <CAN+Emd8f9sM-5OnWARLVxwcwVHGQrjkEATuYrp-h89DR5_c=sw@mail.gmail.com>

>
> I'd like to see a reproducible example before I declared it to be a bug
> that needs fixing.
>
> Do note the news item in R-patched (soon to be R 3.2.2):
>
> | - download.packages()| failed for |type| equal to either |"both"| or
> |"binary"|. (Reported by Dan Tenenbaum.)
>
> install.packages() can call download.packages(), so this might have been
> fixed now.
>
> Duncan Murdoch
>

The bug described is occurring with all recent distributions available!

I discovery today, after install R version 3.2.2 beta (2015-08-04 r68843),
that the bug happens when I copy my packages from old distribution to the
library folder (being careful not to overwrite the newer ones that comes
with the distribution). I've been doing this for a long time.

As are many, it would be labor-intensive (but not impossible) to find those
responsible for the bug. If you decide that it is necessary I can go
testing package by package.

Best,
///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\
Jose Claudio Faria
Estatistica
UESC/DCET/Brasil
joseclaudio.faria at gmail.com
Telefones:
55(73)3680.5545 - UESC
55(73)9966.9100 - VIVO
55(73)9100.7351 - TIM
55(73)8817.6159 - OI
55(73)8129.9942 - CLARO
///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\

	[[alternative HTML version deleted]]


From murdoch.duncan at gmail.com  Fri Aug  7 01:41:59 2015
From: murdoch.duncan at gmail.com (Duncan Murdoch)
Date: Thu, 06 Aug 2015 19:41:59 -0400
Subject: [Rd] update.packages(checkBuilt=TRUE, ask=FALSE): possible bug
In-Reply-To: <CAN+Emd8f9sM-5OnWARLVxwcwVHGQrjkEATuYrp-h89DR5_c=sw@mail.gmail.com>
References: <CAN+Emd-n=kZCGSV6DuMPLi-UFsztywtZ3h+cVaLuPYyHFbuYaw@mail.gmail.com>	<21FF8325-EE50-480E-9729-E0440D6587EE@gmail.com>	<55B90580.4010207@yorku.ca>	<55B91183.6000306@gmail.com>
	<CAN+Emd8f9sM-5OnWARLVxwcwVHGQrjkEATuYrp-h89DR5_c=sw@mail.gmail.com>
Message-ID: <55C3F0C7.4000306@gmail.com>

On 06/08/2015 7:16 PM, Jose Claudio Faria wrote:
>     I'd like to see a reproducible example before I declared it to be a
>     bug that needs fixing.
> 
>     Do note the news item in R-patched (soon to be R 3.2.2):
> 
>     | - download.packages()| failed for |type| equal to either |"both"|
>     or |"binary"|. (Reported by Dan Tenenbaum.)
> 
>     install.packages() can call download.packages(), so this might have
>     been fixed now.
> 
>     Duncan Murdoch
> 
> 
> The bug described is occurring with all recent distributions available!
> 
> I discovery today, after install R version 3.2.2 beta (2015-08-04
> r68843), that the bug happens when I copy my packages from old
> distribution to the library folder (being careful not to overwrite the
> newer ones that comes with the distribution). I've been doing this for a
> long time.
> 
> As are many, it would be labor-intensive (but not impossible) to find
> those responsible for the bug. If you decide that it is necessary I can
> go testing package by package.

Without a reproducible example, I won't follow up on this.

Duncan Murdoch


From edd at debian.org  Fri Aug  7 02:08:10 2015
From: edd at debian.org (Dirk Eddelbuettel)
Date: Thu, 6 Aug 2015 19:08:10 -0500
Subject: [Rd] update.packages(checkBuilt=TRUE, ask=FALSE): possible bug
In-Reply-To: <CAN+Emd8f9sM-5OnWARLVxwcwVHGQrjkEATuYrp-h89DR5_c=sw@mail.gmail.com>
References: <CAN+Emd-n=kZCGSV6DuMPLi-UFsztywtZ3h+cVaLuPYyHFbuYaw@mail.gmail.com>
	<21FF8325-EE50-480E-9729-E0440D6587EE@gmail.com>
	<55B90580.4010207@yorku.ca> <55B91183.6000306@gmail.com>
	<CAN+Emd8f9sM-5OnWARLVxwcwVHGQrjkEATuYrp-h89DR5_c=sw@mail.gmail.com>
Message-ID: <21955.63210.301743.361851@max.nulle.part>


On 6 August 2015 at 20:16, Jose Claudio Faria wrote:
| The bug described is occurring with all recent distributions available!
| 
| I discovery today, after install R version 3.2.2 beta (2015-08-04 r68843),
| that the bug happens when I copy my packages from old distribution to the
| library folder (being careful not to overwrite the newer ones that comes
| with the distribution). I've been doing this for a long time.

That is a bad approrach.

Use a user-library setting (eg environment variable R_LIBS_USER) to pick a
_fixed_ library directory (I used to use C:/opt/R/R-library) which you can
use from R version to R version before and after upgrades. 

Dirk

-- 
http://dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org


From dtenenba at fredhutch.org  Sat Aug  8 01:11:44 2015
From: dtenenba at fredhutch.org (Dan Tenenbaum)
Date: Fri, 7 Aug 2015 16:11:44 -0700 (PDT)
Subject: [Rd] download.file() on ftp URL fails in windows with default
 download method
In-Reply-To: <1401901239.539287.1438988941536.JavaMail.root@fredhutch.org>
Message-ID: <1156858325.539321.1438989104859.JavaMail.root@fredhutch.org>

Hi,

> url <- "ftp://ftp.ncbi.nlm.nih.gov/genomes/ASSEMBLY_REPORTS/All/GCF_000001405.13.assembly.txt"
> download.file(url, tempfile())
trying URL 'ftp://ftp.ncbi.nlm.nih.gov/genomes/ASSEMBLY_REPORTS/All/GCF_000001405.13.assembly.txt'
Error in download.file(url, tempfile()) :
  cannot open URL 'ftp://ftp.ncbi.nlm.nih.gov/genomes/ASSEMBLY_REPORTS/All/GCF_000001405.13.assembly.txt'
In addition: Warning message:
In download.file(url, tempfile()) : InternetOpenUrl failed: ''

If I set method="curl" it works fine. This was on R-3.2.2-beta (sessionInfo() below) but I got the same results in R-3.2.1 and R-devel. 

This does not happen on Windows Server 2008 but it happens on Windows Server 2012.

Dan

> sessionInfo()
R version 3.2.2 beta (2015-08-05 r68859)
Platform: x86_64-w64-mingw32/x64 (64-bit)
Running under: Windows Server 2012 x64 (build 9200)

locale:
[1] LC_COLLATE=English_United States.1252
[2] LC_CTYPE=English_United States.1252
[3] LC_MONETARY=English_United States.1252
[4] LC_NUMERIC=C
[5] LC_TIME=English_United States.1252

attached base packages:
[1] stats     graphics  grDevices utils     datasets  methods   base


From henrik.bengtsson at ucsf.edu  Sat Aug  8 11:26:10 2015
From: henrik.bengtsson at ucsf.edu (Henrik Bengtsson)
Date: Sat, 8 Aug 2015 11:26:10 +0200
Subject: [Rd] download.file() on ftp URL fails in windows with default
 download method
In-Reply-To: <1156858325.539321.1438989104859.JavaMail.root@fredhutch.org>
References: <1401901239.539287.1438988941536.JavaMail.root@fredhutch.org>
	<1156858325.539321.1438989104859.JavaMail.root@fredhutch.org>
Message-ID: <CAFDcVCQ8PLk2tubpQ+wJCLxhmBihqiR4H0YiR6OARX+0A_XSfQ@mail.gmail.com>

Works for me on Windows 7.  Also when I explicitly set 'method' to
"internal", "libcurl", "curl", "wininet" and '"wget".

> sessionInfo()
R version 3.2.2 beta (2015-08-04 r68843)
Platform: x86_64-w64-mingw32/x64 (64-bit)
Running under: Windows 7 x64 (build 7601) Service Pack 1

locale:
[1] LC_COLLATE=English_United States.1252
[2] LC_CTYPE=English_United States.1252
[3] LC_MONETARY=English_United States.1252
[4] LC_NUMERIC=C
[5] LC_TIME=English_United States.1252

attached base packages:
[1] stats     graphics  grDevices utils     datasets  methods   base

loaded via a namespace (and not attached):
[1] tools_3.2.2

/Henrik

On Sat, Aug 8, 2015 at 1:11 AM, Dan Tenenbaum <dtenenba at fredhutch.org> wrote:
> Hi,
>
>> url <- "ftp://ftp.ncbi.nlm.nih.gov/genomes/ASSEMBLY_REPORTS/All/GCF_000001405.13.assembly.txt"
>> download.file(url, tempfile())
> trying URL 'ftp://ftp.ncbi.nlm.nih.gov/genomes/ASSEMBLY_REPORTS/All/GCF_000001405.13.assembly.txt'
> Error in download.file(url, tempfile()) :
>   cannot open URL 'ftp://ftp.ncbi.nlm.nih.gov/genomes/ASSEMBLY_REPORTS/All/GCF_000001405.13.assembly.txt'
> In addition: Warning message:
> In download.file(url, tempfile()) : InternetOpenUrl failed: ''
>
> If I set method="curl" it works fine. This was on R-3.2.2-beta (sessionInfo() below) but I got the same results in R-3.2.1 and R-devel.
>
> This does not happen on Windows Server 2008 but it happens on Windows Server 2012.
>
> Dan
>
>> sessionInfo()
> R version 3.2.2 beta (2015-08-05 r68859)
> Platform: x86_64-w64-mingw32/x64 (64-bit)
> Running under: Windows Server 2012 x64 (build 9200)
>
> locale:
> [1] LC_COLLATE=English_United States.1252
> [2] LC_CTYPE=English_United States.1252
> [3] LC_MONETARY=English_United States.1252
> [4] LC_NUMERIC=C
> [5] LC_TIME=English_United States.1252
>
> attached base packages:
> [1] stats     graphics  grDevices utils     datasets  methods   base
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From ligges at statistik.tu-dortmund.de  Sun Aug  9 00:57:34 2015
From: ligges at statistik.tu-dortmund.de (Uwe Ligges)
Date: Sun, 9 Aug 2015 00:57:34 +0200
Subject: [Rd] download.file() on ftp URL fails in windows with default
 download method
In-Reply-To: <1156858325.539321.1438989104859.JavaMail.root@fredhutch.org>
References: <1156858325.539321.1438989104859.JavaMail.root@fredhutch.org>
Message-ID: <55C6895E.2090807@statistik.tu-dortmund.de>



On 08.08.2015 01:11, Dan Tenenbaum wrote:
> Hi,
>
>> url <- "ftp://ftp.ncbi.nlm.nih.gov/genomes/ASSEMBLY_REPORTS/All/GCF_000001405.13.assembly.txt"
>> download.file(url, tempfile())
> trying URL 'ftp://ftp.ncbi.nlm.nih.gov/genomes/ASSEMBLY_REPORTS/All/GCF_000001405.13.assembly.txt'
> Error in download.file(url, tempfile()) :
>    cannot open URL 'ftp://ftp.ncbi.nlm.nih.gov/genomes/ASSEMBLY_REPORTS/All/GCF_000001405.13.assembly.txt'
> In addition: Warning message:
> In download.file(url, tempfile()) : InternetOpenUrl failed: ''
>
> If I set method="curl" it works fine. This was on R-3.2.2-beta (sessionInfo() below) but I got the same results in R-3.2.1 and R-devel.
>
> This does not happen on Windows Server 2008 but it happens on Windows Server 2012.


Thanks for letting us know. The kot recent machine I checked with is 
Windows Server 2008 R2 and I have not got problems on those. Can someone 
else rerpoduce this on Windows Server 2012?

Best,
Uwe Ligges

>
> Dan
>
>> sessionInfo()
> R version 3.2.2 beta (2015-08-05 r68859)
> Platform: x86_64-w64-mingw32/x64 (64-bit)
> Running under: Windows Server 2012 x64 (build 9200)
>
> locale:
> [1] LC_COLLATE=English_United States.1252
> [2] LC_CTYPE=English_United States.1252
> [3] LC_MONETARY=English_United States.1252
> [4] LC_NUMERIC=C
> [5] LC_TIME=English_United States.1252
>
> attached base packages:
> [1] stats     graphics  grDevices utils     datasets  methods   base
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>


From dtenenba at fredhutch.org  Sun Aug  9 01:02:54 2015
From: dtenenba at fredhutch.org (Dan Tenenbaum)
Date: Sat, 8 Aug 2015 16:02:54 -0700 (PDT)
Subject: [Rd] download.file() on ftp URL fails in windows with default
 download method
In-Reply-To: <55C6895E.2090807@statistik.tu-dortmund.de>
Message-ID: <296583756.556042.1439074974551.JavaMail.root@fredhutch.org>



----- Original Message -----
> From: "Uwe Ligges" <ligges at statistik.tu-dortmund.de>
> To: "Dan Tenenbaum" <dtenenba at fredhutch.org>, "R-devel at r-project.org" <r-devel at r-project.org>
> Sent: Saturday, August 8, 2015 3:57:34 PM
> Subject: Re: [Rd] download.file() on ftp URL fails in windows with default download method
> 
> 
> 
> On 08.08.2015 01:11, Dan Tenenbaum wrote:
> > Hi,
> >
> >> url <-
> >> "ftp://ftp.ncbi.nlm.nih.gov/genomes/ASSEMBLY_REPORTS/All/GCF_000001405.13.assembly.txt"
> >> download.file(url, tempfile())
> > trying URL
> > 'ftp://ftp.ncbi.nlm.nih.gov/genomes/ASSEMBLY_REPORTS/All/GCF_000001405.13.assembly.txt'
> > Error in download.file(url, tempfile()) :
> >    cannot open URL
> >    'ftp://ftp.ncbi.nlm.nih.gov/genomes/ASSEMBLY_REPORTS/All/GCF_000001405.13.assembly.txt'
> > In addition: Warning message:
> > In download.file(url, tempfile()) : InternetOpenUrl failed: ''
> >
> > If I set method="curl" it works fine. This was on R-3.2.2-beta
> > (sessionInfo() below) but I got the same results in R-3.2.1 and
> > R-devel.
> >
> > This does not happen on Windows Server 2008 but it happens on
> > Windows Server 2012.
> 
> 
> Thanks for letting us know. The kot recent machine I checked with is
> Windows Server 2008 R2 and I have not got problems on those. Can
> someone
> else rerpoduce this on Windows Server 2012?
> 

If you like I can give you temporary access (via remote desktop) to a machine in the Amazon cloud.
You can also download a Vagrant box here:

https://atlas.hashicorp.com/boxes/search?utf8=%E2%9C%93&sort=&provider=&q=windows+server+2012

Dan



> Best,
> Uwe Ligges
> 
> >
> > Dan
> >
> >> sessionInfo()
> > R version 3.2.2 beta (2015-08-05 r68859)
> > Platform: x86_64-w64-mingw32/x64 (64-bit)
> > Running under: Windows Server 2012 x64 (build 9200)
> >
> > locale:
> > [1] LC_COLLATE=English_United States.1252
> > [2] LC_CTYPE=English_United States.1252
> > [3] LC_MONETARY=English_United States.1252
> > [4] LC_NUMERIC=C
> > [5] LC_TIME=English_United States.1252
> >
> > attached base packages:
> > [1] stats     graphics  grDevices utils     datasets  methods
> >   base
> >
> > ______________________________________________
> > R-devel at r-project.org mailing list
> > https://stat.ethz.ch/mailman/listinfo/r-devel
> >
>


From dtenenba at fredhutch.org  Tue Aug 11 18:50:52 2015
From: dtenenba at fredhutch.org (Dan Tenenbaum)
Date: Tue, 11 Aug 2015 09:50:52 -0700 (PDT)
Subject: [Rd] download.file() on ftp URL fails in windows with default
 download method
In-Reply-To: <296583756.556042.1439074974551.JavaMail.root@fredhutch.org>
Message-ID: <1937264849.741872.1439311852611.JavaMail.root@fredhutch.org>



----- Original Message -----
> From: "Dan Tenenbaum" <dtenenba at fredhutch.org>
> To: "Uwe Ligges" <ligges at statistik.tu-dortmund.de>
> Cc: "R-devel at r-project.org" <r-devel at r-project.org>
> Sent: Saturday, August 8, 2015 4:02:54 PM
> Subject: Re: [Rd] download.file() on ftp URL fails in windows with default download method
> 
> 
> 
> ----- Original Message -----
> > From: "Uwe Ligges" <ligges at statistik.tu-dortmund.de>
> > To: "Dan Tenenbaum" <dtenenba at fredhutch.org>,
> > "R-devel at r-project.org" <r-devel at r-project.org>
> > Sent: Saturday, August 8, 2015 3:57:34 PM
> > Subject: Re: [Rd] download.file() on ftp URL fails in windows with
> > default download method
> > 
> > 
> > 
> > On 08.08.2015 01:11, Dan Tenenbaum wrote:
> > > Hi,
> > >
> > >> url <-
> > >> "ftp://ftp.ncbi.nlm.nih.gov/genomes/ASSEMBLY_REPORTS/All/GCF_000001405.13.assembly.txt"
> > >> download.file(url, tempfile())
> > > trying URL
> > > 'ftp://ftp.ncbi.nlm.nih.gov/genomes/ASSEMBLY_REPORTS/All/GCF_000001405.13.assembly.txt'
> > > Error in download.file(url, tempfile()) :
> > >    cannot open URL
> > >    'ftp://ftp.ncbi.nlm.nih.gov/genomes/ASSEMBLY_REPORTS/All/GCF_000001405.13.assembly.txt'
> > > In addition: Warning message:
> > > In download.file(url, tempfile()) : InternetOpenUrl failed: ''
> > >
> > > If I set method="curl" it works fine. This was on R-3.2.2-beta
> > > (sessionInfo() below) but I got the same results in R-3.2.1 and
> > > R-devel.
> > >
> > > This does not happen on Windows Server 2008 but it happens on
> > > Windows Server 2012.
> > 
> > 
> > Thanks for letting us know. The kot recent machine I checked with
> > is
> > Windows Server 2008 R2 and I have not got problems on those. Can
> > someone
> > else rerpoduce this on Windows Server 2012?
> > 
> 
> If you like I can give you temporary access (via remote desktop) to a
> machine in the Amazon cloud.
> You can also download a Vagrant box here:
> 
> https://atlas.hashicorp.com/boxes/search?utf8=%E2%9C%93&sort=&provider=&q=windows+server+2012
> 

Just wanted to check in about this to see whether anyone else has been able to reproduce this, or if Uwe has, or if anyone needs help setting up a test environment either in the cloud or by using a VM (like with Vagrant). I would be more than happy to help. I can set up a temporary instance in the cloud that interested parties could access at no cost.

This issue looks like a showstopper for Bioconductor; we are in the process of moving our build system, and we were upgrading from Windows Server 2008 to Windows Server 2012 in the process, but this issue is going to affect a lot of packages if it is not resolved.

What I can say is that it does not seem like a firewall issue, as the download works fine if I specify method="curl"  (or libcurl) or paste the url into a browser, and I get the same results whether Windows Firewall is on or off.

My naive guess is that the InternetOpenUrl API has changed in between Windows Server 2008 and Windows Server 2012.

The offending call to this API seems to be at src/modules/internet/internet.c:#908 (in the R-3.2 branch; I did try R-devel as of r68987 and it still has this problem).

I am really hoping something can be done about this before the release of R-3.2.2.

Thanks!
Dan



> Dan
> 
> 
> 
> > Best,
> > Uwe Ligges
> > 
> > >
> > > Dan
> > >
> > >> sessionInfo()
> > > R version 3.2.2 beta (2015-08-05 r68859)
> > > Platform: x86_64-w64-mingw32/x64 (64-bit)
> > > Running under: Windows Server 2012 x64 (build 9200)
> > >
> > > locale:
> > > [1] LC_COLLATE=English_United States.1252
> > > [2] LC_CTYPE=English_United States.1252
> > > [3] LC_MONETARY=English_United States.1252
> > > [4] LC_NUMERIC=C
> > > [5] LC_TIME=English_United States.1252
> > >
> > > attached base packages:
> > > [1] stats     graphics  grDevices utils     datasets  methods
> > >   base
> > >
> > > ______________________________________________
> > > R-devel at r-project.org mailing list
> > > https://stat.ethz.ch/mailman/listinfo/r-devel
> > >
> >
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>


From luca.cerone at gmail.com  Wed Aug 12 17:51:13 2015
From: luca.cerone at gmail.com (Luca Cerone)
Date: Wed, 12 Aug 2015 17:51:13 +0200
Subject: [Rd] Weird issue when iterating through dates
In-Reply-To: <CAF8bMcYHLfxVaT-NT1SiOTzrBEGM6vgr+PwwzGQGAJ6kGZx_MA@mail.gmail.com>
References: <CAFnz2--pK12My=sJ-N0sykXi0zQa+qwtR42iZo2fBrpiTTWOCg@mail.gmail.com>
	<CABtg=K=b5Amh17=9wZ=g2j9F63KtYEYSDWoQEOGx7kvYEdBHZA@mail.gmail.com>
	<CAFnz2-8902ztc-=gcwcA4jnYHkX9PL0oNMctGjtmXdynQjYRcg@mail.gmail.com>
	<CABtg=K=PB+r1FHuzcK1pGMXQFo=peuTGWx_CL_CczkspwXq3SA@mail.gmail.com>
	<CAF8bMcYHLfxVaT-NT1SiOTzrBEGM6vgr+PwwzGQGAJ6kGZx_MA@mail.gmail.com>
Message-ID: <CAFnz2-9z0R6xf_RzmtFrHcQKCVbip+jEH+E1+Uj2MuCoerXbMg@mail.gmail.com>

Following up on this, should I report a bug? can you drive me through
the process?

Cheers,
Luca

On Thu, Aug 6, 2015 at 4:55 PM, William Dunlap <wdunlap at tibco.com> wrote:
>>> Just a quick question: what's the difference between  `[.Date` and
>>> `[[.Date`?
>>> Is it supposed to be the method for accessing the value right?
>>
>>For Dates and atomic vectors in general they are the same, but ...
>
> Even for atomic vectors with names they are not quite the same
>     > c(One=1, Two=2)[[2]]
>     [1] 2
>     > c(One=1, Two=2)[2]
>     Two
>       2
> (and [[ will only return 1 item, unlike [).
>
>
> Bill Dunlap
> TIBCO Software
> wdunlap tibco.com
>
> On Thu, Aug 6, 2015 at 5:36 AM, G?bor Cs?rdi <csardi.gabor at gmail.com> wrote:
>>
>> On Thu, Aug 6, 2015 at 6:30 AM, Luca Cerone <luca.cerone at gmail.com> wrote:
>> [...]
>> > Just a quick question: what's the difference between  `[.Date` and
>> > `[[.Date`?
>> > Is it supposed to be the method for accessing the value right?
>>
>> For Dates and atomic vectors in general they are the same, but in
>> general they are two different operators that behave differently on
>> some data types. E.g. on lists [ selects a sub-list and [[ selects a
>> single element.
>>
>> Gabor
>>
>> [...]
>>
>> ______________________________________________
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel
>
>


From csardi.gabor at gmail.com  Wed Aug 12 17:55:56 2015
From: csardi.gabor at gmail.com (=?UTF-8?B?R8OhYm9yIENzw6FyZGk=?=)
Date: Wed, 12 Aug 2015 11:55:56 -0400
Subject: [Rd] Weird issue when iterating through dates
In-Reply-To: <CAFnz2-9z0R6xf_RzmtFrHcQKCVbip+jEH+E1+Uj2MuCoerXbMg@mail.gmail.com>
References: <CAFnz2--pK12My=sJ-N0sykXi0zQa+qwtR42iZo2fBrpiTTWOCg@mail.gmail.com>
	<CABtg=K=b5Amh17=9wZ=g2j9F63KtYEYSDWoQEOGx7kvYEdBHZA@mail.gmail.com>
	<CAFnz2-8902ztc-=gcwcA4jnYHkX9PL0oNMctGjtmXdynQjYRcg@mail.gmail.com>
	<CABtg=K=PB+r1FHuzcK1pGMXQFo=peuTGWx_CL_CczkspwXq3SA@mail.gmail.com>
	<CAF8bMcYHLfxVaT-NT1SiOTzrBEGM6vgr+PwwzGQGAJ6kGZx_MA@mail.gmail.com>
	<CAFnz2-9z0R6xf_RzmtFrHcQKCVbip+jEH+E1+Uj2MuCoerXbMg@mail.gmail.com>
Message-ID: <CABtg=K=qGcsg_tH7m=c0KEzc1mdqMM3ETjB4JNQeOMnS4ehNdg@mail.gmail.com>

I am not sure if this is a bug or not.

Gabor

On Wed, Aug 12, 2015 at 11:51 AM, Luca Cerone <luca.cerone at gmail.com> wrote:
> Following up on this, should I report a bug? can you drive me through
> the process?
>
> Cheers,
> Luca
>
> On Thu, Aug 6, 2015 at 4:55 PM, William Dunlap <wdunlap at tibco.com> wrote:
>>>> Just a quick question: what's the difference between  `[.Date` and
>>>> `[[.Date`?
>>>> Is it supposed to be the method for accessing the value right?
>>>
>>>For Dates and atomic vectors in general they are the same, but ...
>>
>> Even for atomic vectors with names they are not quite the same
>>     > c(One=1, Two=2)[[2]]
>>     [1] 2
>>     > c(One=1, Two=2)[2]
>>     Two
>>       2
>> (and [[ will only return 1 item, unlike [).
>>
>>
>> Bill Dunlap
>> TIBCO Software
>> wdunlap tibco.com
>>
>> On Thu, Aug 6, 2015 at 5:36 AM, G?bor Cs?rdi <csardi.gabor at gmail.com> wrote:
>>>
>>> On Thu, Aug 6, 2015 at 6:30 AM, Luca Cerone <luca.cerone at gmail.com> wrote:
>>> [...]
>>> > Just a quick question: what's the difference between  `[.Date` and
>>> > `[[.Date`?
>>> > Is it supposed to be the method for accessing the value right?
>>>
>>> For Dates and atomic vectors in general they are the same, but in
>>> general they are two different operators that behave differently on
>>> some data types. E.g. on lists [ selects a sub-list and [[ selects a
>>> single element.
>>>
>>> Gabor
>>>
>>> [...]
>>>
>>> ______________________________________________
>>> R-devel at r-project.org mailing list
>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>
>>


From josh.m.ulrich at gmail.com  Wed Aug 12 18:06:42 2015
From: josh.m.ulrich at gmail.com (Joshua Ulrich)
Date: Wed, 12 Aug 2015 11:06:42 -0500
Subject: [Rd] Weird issue when iterating through dates
In-Reply-To: <CABtg=K=qGcsg_tH7m=c0KEzc1mdqMM3ETjB4JNQeOMnS4ehNdg@mail.gmail.com>
References: <CAFnz2--pK12My=sJ-N0sykXi0zQa+qwtR42iZo2fBrpiTTWOCg@mail.gmail.com>
	<CABtg=K=b5Amh17=9wZ=g2j9F63KtYEYSDWoQEOGx7kvYEdBHZA@mail.gmail.com>
	<CAFnz2-8902ztc-=gcwcA4jnYHkX9PL0oNMctGjtmXdynQjYRcg@mail.gmail.com>
	<CABtg=K=PB+r1FHuzcK1pGMXQFo=peuTGWx_CL_CczkspwXq3SA@mail.gmail.com>
	<CAF8bMcYHLfxVaT-NT1SiOTzrBEGM6vgr+PwwzGQGAJ6kGZx_MA@mail.gmail.com>
	<CAFnz2-9z0R6xf_RzmtFrHcQKCVbip+jEH+E1+Uj2MuCoerXbMg@mail.gmail.com>
	<CABtg=K=qGcsg_tH7m=c0KEzc1mdqMM3ETjB4JNQeOMnS4ehNdg@mail.gmail.com>
Message-ID: <CAPPM_gRzPpRCxDtvPNdS-VFgvb_DViKksNVHw62u1Gg+zBSH8A@mail.gmail.com>

On Wed, Aug 12, 2015 at 10:55 AM, G?bor Cs?rdi <csardi.gabor at gmail.com> wrote:
> I am not sure if this is a bug or not.
>
I would argue that this isn't a bug, not even in the documentation of
"for" (even though it might be clearer).  ?"for" says that `seq` is
"[A]n expression evaluating to a vector (including a list and an
expression) or to a pairlist or 'NULL'".  Date objects aren't strictly
vectors, so they're treated as integer/numeric.

This answer on StackOverflow said that "for" does not copy any of the
iterators attributes (including class), which causes this behavior.
http://stackoverflow.com/a/23278464/271616

To respond to the original question regarding why the code below,
"prints the dates as a string".  Quite simply, you convert seq(d1,d2,
by=1) to character, so it's no longer a Date.  The fact that
Sys.Date() and as.character(Sys.Date()) both *print* the same thing
does not mean they are the same.

for ( dt in as.character(seq(d1,d2, by=1)) ) {
  print(dt)
}

Best,
Josh

> Gabor
>
> On Wed, Aug 12, 2015 at 11:51 AM, Luca Cerone <luca.cerone at gmail.com> wrote:
>> Following up on this, should I report a bug? can you drive me through
>> the process?
>>
>> Cheers,
>> Luca
>>
>> On Thu, Aug 6, 2015 at 4:55 PM, William Dunlap <wdunlap at tibco.com> wrote:
>>>>> Just a quick question: what's the difference between  `[.Date` and
>>>>> `[[.Date`?
>>>>> Is it supposed to be the method for accessing the value right?
>>>>
>>>>For Dates and atomic vectors in general they are the same, but ...
>>>
>>> Even for atomic vectors with names they are not quite the same
>>>     > c(One=1, Two=2)[[2]]
>>>     [1] 2
>>>     > c(One=1, Two=2)[2]
>>>     Two
>>>       2
>>> (and [[ will only return 1 item, unlike [).
>>>
>>>
>>> Bill Dunlap
>>> TIBCO Software
>>> wdunlap tibco.com
>>>
>>> On Thu, Aug 6, 2015 at 5:36 AM, G?bor Cs?rdi <csardi.gabor at gmail.com> wrote:
>>>>
>>>> On Thu, Aug 6, 2015 at 6:30 AM, Luca Cerone <luca.cerone at gmail.com> wrote:
>>>> [...]
>>>> > Just a quick question: what's the difference between  `[.Date` and
>>>> > `[[.Date`?
>>>> > Is it supposed to be the method for accessing the value right?
>>>>
>>>> For Dates and atomic vectors in general they are the same, but in
>>>> general they are two different operators that behave differently on
>>>> some data types. E.g. on lists [ selects a sub-list and [[ selects a
>>>> single element.
>>>>
>>>> Gabor
>>>>
>>>> [...]
>>>>
>>>> ______________________________________________
>>>> R-devel at r-project.org mailing list
>>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>>
>>>
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel



-- 
Joshua Ulrich  |  about.me/joshuaulrich
FOSS Trading  |  www.fosstrading.com


From davidsmi at microsoft.com  Wed Aug 12 21:42:39 2015
From: davidsmi at microsoft.com (David Smith)
Date: Wed, 12 Aug 2015 19:42:39 +0000
Subject: [Rd] download.file() on ftp URL fails in windows with default
 download method
In-Reply-To: <1937264849.741872.1439311852611.JavaMail.root@fredhutch.org>
References: <296583756.556042.1439074974551.JavaMail.root@fredhutch.org>
	<1937264849.741872.1439311852611.JavaMail.root@fredhutch.org>
Message-ID: <CY1PR0301MB084257019950A5F2040377E6C87E0@CY1PR0301MB0842.namprd03.prod.outlook.com>

We were also able to reproduce the issue on Windows Server 2012. If there's anything we can do to help please let me know; Elliot Waingold (CC'd here) can provide access to the VM we used for testing if that's of any help.

# David Smith

-- 
David M Smith <davidsmi at microsoft.com>
R Community Lead, Revolution Analytics (a Microsoft company)? 
Tel: +1 (312) 9205766 (Chicago IL, USA)
Twitter: @revodavid | Blog: ?http://blog.revolutionanalytics.com
We are hiring engineers for Revolution R and Azure Machine Learning.

-----Original Message-----
From: R-devel [mailto:r-devel-bounces at r-project.org] On Behalf Of Dan Tenenbaum
Sent: Tuesday, August 11, 2015 09:51
To: Uwe Ligges <ligges at statistik.tu-dortmund.de>
Cc: R-devel at r-project.org
Subject: Re: [Rd] download.file() on ftp URL fails in windows with default download method



----- Original Message -----
> From: "Dan Tenenbaum" <dtenenba at fredhutch.org>
> To: "Uwe Ligges" <ligges at statistik.tu-dortmund.de>
> Cc: "R-devel at r-project.org" <r-devel at r-project.org>
> Sent: Saturday, August 8, 2015 4:02:54 PM
> Subject: Re: [Rd] download.file() on ftp URL fails in windows with 
> default download method
> 
> 
> 
> ----- Original Message -----
> > From: "Uwe Ligges" <ligges at statistik.tu-dortmund.de>
> > To: "Dan Tenenbaum" <dtenenba at fredhutch.org>, 
> > "R-devel at r-project.org" <r-devel at r-project.org>
> > Sent: Saturday, August 8, 2015 3:57:34 PM
> > Subject: Re: [Rd] download.file() on ftp URL fails in windows with 
> > default download method
> > 
> > 
> > 
> > On 08.08.2015 01:11, Dan Tenenbaum wrote:
> > > Hi,
> > >
> > >> url <-
> > >> "ftp://ftp.ncbi.nlm.nih.gov/genomes/ASSEMBLY_REPORTS/All/GCF_000001405.13.assembly.txt"
> > >> download.file(url, tempfile())
> > > trying URL
> > > 'ftp://ftp.ncbi.nlm.nih.gov/genomes/ASSEMBLY_REPORTS/All/GCF_000001405.13.assembly.txt'
> > > Error in download.file(url, tempfile()) :
> > >    cannot open URL
> > >    'ftp://ftp.ncbi.nlm.nih.gov/genomes/ASSEMBLY_REPORTS/All/GCF_000001405.13.assembly.txt'
> > > In addition: Warning message:
> > > In download.file(url, tempfile()) : InternetOpenUrl failed: ''
> > >
> > > If I set method="curl" it works fine. This was on R-3.2.2-beta
> > > (sessionInfo() below) but I got the same results in R-3.2.1 and 
> > > R-devel.
> > >
> > > This does not happen on Windows Server 2008 but it happens on 
> > > Windows Server 2012.
> > 
> > 
> > Thanks for letting us know. The kot recent machine I checked with is 
> > Windows Server 2008 R2 and I have not got problems on those. Can 
> > someone else rerpoduce this on Windows Server 2012?
> > 
> 
> If you like I can give you temporary access (via remote desktop) to a 
> machine in the Amazon cloud.
> You can also download a Vagrant box here:
> 
> https://na01.safelinks.protection.outlook.com/?url=https%3a%2f%2fatlas
> .hashicorp.com%2fboxes%2fsearch%3futf8%3d%25E2%259C%2593%26sort%3d%26p
> rovider%3d%26q%3dwindows%2bserver%2b2012&data=01%7c01%7cdavidsmi%40mic
> rosoft.com%7ce6746faa79b6426c81a508d2a26d3d35%7c72f988bf86f141af91ab2d
> 7cd011db47%7c1&sdata=Z5pE32RJ7wEs4UBfRxXSDEqG6ESxFSFmHdFCU78kuaA%3d
> 

Just wanted to check in about this to see whether anyone else has been able to reproduce this, or if Uwe has, or if anyone needs help setting up a test environment either in the cloud or by using a VM (like with Vagrant). I would be more than happy to help. I can set up a temporary instance in the cloud that interested parties could access at no cost.

This issue looks like a showstopper for Bioconductor; we are in the process of moving our build system, and we were upgrading from Windows Server 2008 to Windows Server 2012 in the process, but this issue is going to affect a lot of packages if it is not resolved.

What I can say is that it does not seem like a firewall issue, as the download works fine if I specify method="curl"  (or libcurl) or paste the url into a browser, and I get the same results whether Windows Firewall is on or off.

My naive guess is that the InternetOpenUrl API has changed in between Windows Server 2008 and Windows Server 2012.

The offending call to this API seems to be at src/modules/internet/internet.c:#908 (in the R-3.2 branch; I did try R-devel as of r68987 and it still has this problem).

I am really hoping something can be done about this before the release of R-3.2.2.

Thanks!
Dan



> Dan
> 
> 
> 
> > Best,
> > Uwe Ligges
> > 
> > >
> > > Dan
> > >
> > >> sessionInfo()
> > > R version 3.2.2 beta (2015-08-05 r68859)
> > > Platform: x86_64-w64-mingw32/x64 (64-bit) Running under: Windows 
> > > Server 2012 x64 (build 9200)
> > >
> > > locale:
> > > [1] LC_COLLATE=English_United States.1252 [2] 
> > > LC_CTYPE=English_United States.1252 [3] LC_MONETARY=English_United 
> > > States.1252 [4] LC_NUMERIC=C [5] LC_TIME=English_United 
> > > States.1252
> > >
> > > attached base packages:
> > > [1] stats     graphics  grDevices utils     datasets  methods
> > >   base
> > >
> > > ______________________________________________
> > > R-devel at r-project.org mailing list 
> > > https://na01.safelinks.protection.outlook.com/?url=https%3a%2f%2fs
> > > tat.ethz.ch%2fmailman%2flistinfo%2fr-devel&data=01%7c01%7cdavidsmi
> > > %40microsoft.com%7ce6746faa79b6426c81a508d2a26d3d35%7c72f988bf86f1
> > > 41af91ab2d7cd011db47%7c1&sdata=Xz86iq9HlmZoU5gRNgeGLx7hwoCSQVuBy9q
> > > bHPNebz8%3d
> > >
> >
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://na01.safelinks.protection.outlook.com/?url=https%3a%2f%2fstat.
> ethz.ch%2fmailman%2flistinfo%2fr-devel&data=01%7c01%7cdavidsmi%40micro
> soft.com%7ce6746faa79b6426c81a508d2a26d3d35%7c72f988bf86f141af91ab2d7c
> d011db47%7c1&sdata=Xz86iq9HlmZoU5gRNgeGLx7hwoCSQVuBy9qbHPNebz8%3d
>

______________________________________________
R-devel at r-project.org mailing list
https://na01.safelinks.protection.outlook.com/?url=https%3a%2f%2fstat.ethz.ch%2fmailman%2flistinfo%2fr-devel&data=01%7c01%7cdavidsmi%40microsoft.com%7ce6746faa79b6426c81a508d2a26d3d35%7c72f988bf86f141af91ab2d7cd011db47%7c1&sdata=Xz86iq9HlmZoU5gRNgeGLx7hwoCSQVuBy9qbHPNebz8%3d


From sds at gnu.org  Wed Aug 12 22:33:31 2015
From: sds at gnu.org (Sam Steingold)
Date: Wed, 12 Aug 2015 16:33:31 -0400
Subject: [Rd] enableJIT in Rprofile leads to 'not a proper evaluation
	environment' on startup
Message-ID: <m2fv3ofdr8.fsf@gnu.org>

A commenter on SO suggested that I copy my question to R-devel
http://stackoverflow.com/q/31972325/850781

I have had

--8<---------------cut here---------------start------------->8---
library(compiler)
compiler::enableJIT(3)
--8<---------------cut here---------------end--------------->8---

in ~/.Rprofile for years; now that I upgraded to 3.2.1 I get this on startup:

--8<---------------cut here---------------start------------->8---
Error in frameTypes(env) : not a proper evaluation environment
Calls: <Anonymous> -> <Anonymous> -> makeCenv -> structure -> frameTypes
> q()
Warning message:
restarting interrupted promise evaluation 
--8<---------------cut here---------------end--------------->8---

I don't see anything relevant in NEWS.

Replacing 3 with 2 in compiler::enableJIT(3) removes the error.
However, I would prefer my loops to be compiled too.

Suggestions?


-- 
Sam Steingold (http://sds.podval.org/) on darwin Ns 10.3.1348
http://www.childpsy.net/ http://dhimmi.org http://www.memritv.org
http://jihadwatch.org http://camera.org http://www.dhimmitude.org
He who laughs last thinks slowest.


From dtenenba at fredhutch.org  Wed Aug 12 22:34:43 2015
From: dtenenba at fredhutch.org (Dan Tenenbaum)
Date: Wed, 12 Aug 2015 13:34:43 -0700 (PDT)
Subject: [Rd] download.file() on ftp URL fails in windows with default
 download method
In-Reply-To: <CY1PR0301MB084257019950A5F2040377E6C87E0@CY1PR0301MB0842.namprd03.prod.outlook.com>
Message-ID: <1069418203.808600.1439411683715.JavaMail.root@fredhutch.org>

Hi David,

----- Original Message -----
> From: "David Smith" <davidsmi at microsoft.com>
> To: "Dan Tenenbaum" <dtenenba at fredhutch.org>, "Uwe Ligges" <ligges at statistik.tu-dortmund.de>, "Elliot Waingold"
> <Elliot.Waingold at microsoft.com>
> Cc: "R-devel at r-project.org" <r-devel at r-project.org>
> Sent: Wednesday, August 12, 2015 12:42:39 PM
> Subject: RE: [Rd] download.file() on ftp URL fails in windows with default download method
> 
> We were also able to reproduce the issue on Windows Server 2012. If
> there's anything we can do to help please let me know; Elliot
> Waingold (CC'd here) can provide access to the VM we used for
> testing if that's of any help.
> 

Thanks!

I have just been looking at this issue with Martin Morgan. We found that if we "or" the additional flag INTERNET_FLAG_PASSIVE on line 1012 of src/modules/internet/internet.c (R-3.2 branch, last changed in r68393)
that the ftp connection works.

Further investigation reveals that in a passive ftp connection, certain ports on the client need to be open.
This machine is in the Amazon cloud so it was easy to open the ports. But we still have a problem and I believe it's that the wrong IP address is being sent to the server (on an AWS machine, the machine thinks of itself as having one IP address, but that is a private address that is valid inside AWS only). 

Here's a curl command line that gets around this by sending the correct address (or hostname):

curl --ftp-port myhostname.com ftp://ftp.ncbi.nlm.nih.gov/genomes/ASSEMBLY_REPORTS/All/GCF_000001405.13.assembly.txt

Curl normally uses passive mode which is why it works, but the --ftp-port switch tells it to use active mode with the specified ip address or hostname.

So I'm not sure where we go from here. One easy fix is just to add the INTERNET_FLAG_PASSIVE flag as described above. Another would be to first check if active mode works, and if not, use passive mode. 

Dan


> # David Smith
> 
> --
> David M Smith <davidsmi at microsoft.com>
> R Community Lead, Revolution Analytics (a Microsoft company)
> Tel: +1 (312) 9205766 (Chicago IL, USA)
> Twitter: @revodavid | Blog: ?http://blog.revolutionanalytics.com
> We are hiring engineers for Revolution R and Azure Machine Learning.
> 
> -----Original Message-----
> From: R-devel [mailto:r-devel-bounces at r-project.org] On Behalf Of Dan
> Tenenbaum
> Sent: Tuesday, August 11, 2015 09:51
> To: Uwe Ligges <ligges at statistik.tu-dortmund.de>
> Cc: R-devel at r-project.org
> Subject: Re: [Rd] download.file() on ftp URL fails in windows with
> default download method
> 
> 
> 
> ----- Original Message -----
> > From: "Dan Tenenbaum" <dtenenba at fredhutch.org>
> > To: "Uwe Ligges" <ligges at statistik.tu-dortmund.de>
> > Cc: "R-devel at r-project.org" <r-devel at r-project.org>
> > Sent: Saturday, August 8, 2015 4:02:54 PM
> > Subject: Re: [Rd] download.file() on ftp URL fails in windows with
> > default download method
> > 
> > 
> > 
> > ----- Original Message -----
> > > From: "Uwe Ligges" <ligges at statistik.tu-dortmund.de>
> > > To: "Dan Tenenbaum" <dtenenba at fredhutch.org>,
> > > "R-devel at r-project.org" <r-devel at r-project.org>
> > > Sent: Saturday, August 8, 2015 3:57:34 PM
> > > Subject: Re: [Rd] download.file() on ftp URL fails in windows
> > > with
> > > default download method
> > > 
> > > 
> > > 
> > > On 08.08.2015 01:11, Dan Tenenbaum wrote:
> > > > Hi,
> > > >
> > > >> url <-
> > > >> "ftp://ftp.ncbi.nlm.nih.gov/genomes/ASSEMBLY_REPORTS/All/GCF_000001405.13.assembly.txt"
> > > >> download.file(url, tempfile())
> > > > trying URL
> > > > 'ftp://ftp.ncbi.nlm.nih.gov/genomes/ASSEMBLY_REPORTS/All/GCF_000001405.13.assembly.txt'
> > > > Error in download.file(url, tempfile()) :
> > > >    cannot open URL
> > > >    'ftp://ftp.ncbi.nlm.nih.gov/genomes/ASSEMBLY_REPORTS/All/GCF_000001405.13.assembly.txt'
> > > > In addition: Warning message:
> > > > In download.file(url, tempfile()) : InternetOpenUrl failed: ''
> > > >
> > > > If I set method="curl" it works fine. This was on R-3.2.2-beta
> > > > (sessionInfo() below) but I got the same results in R-3.2.1 and
> > > > R-devel.
> > > >
> > > > This does not happen on Windows Server 2008 but it happens on
> > > > Windows Server 2012.
> > > 
> > > 
> > > Thanks for letting us know. The kot recent machine I checked with
> > > is
> > > Windows Server 2008 R2 and I have not got problems on those. Can
> > > someone else rerpoduce this on Windows Server 2012?
> > > 
> > 
> > If you like I can give you temporary access (via remote desktop) to
> > a
> > machine in the Amazon cloud.
> > You can also download a Vagrant box here:
> > 
> > https://na01.safelinks.protection.outlook.com/?url=https%3a%2f%2fatlas
> > .hashicorp.com%2fboxes%2fsearch%3futf8%3d%25E2%259C%2593%26sort%3d%26p
> > rovider%3d%26q%3dwindows%2bserver%2b2012&data=01%7c01%7cdavidsmi%40mic
> > rosoft.com%7ce6746faa79b6426c81a508d2a26d3d35%7c72f988bf86f141af91ab2d
> > 7cd011db47%7c1&sdata=Z5pE32RJ7wEs4UBfRxXSDEqG6ESxFSFmHdFCU78kuaA%3d
> > 
> 
> Just wanted to check in about this to see whether anyone else has
> been able to reproduce this, or if Uwe has, or if anyone needs help
> setting up a test environment either in the cloud or by using a VM
> (like with Vagrant). I would be more than happy to help. I can set
> up a temporary instance in the cloud that interested parties could
> access at no cost.
> 
> This issue looks like a showstopper for Bioconductor; we are in the
> process of moving our build system, and we were upgrading from
> Windows Server 2008 to Windows Server 2012 in the process, but this
> issue is going to affect a lot of packages if it is not resolved.
> 
> What I can say is that it does not seem like a firewall issue, as the
> download works fine if I specify method="curl"  (or libcurl) or
> paste the url into a browser, and I get the same results whether
> Windows Firewall is on or off.
> 
> My naive guess is that the InternetOpenUrl API has changed in between
> Windows Server 2008 and Windows Server 2012.
> 
> The offending call to this API seems to be at
> src/modules/internet/internet.c:#908 (in the R-3.2 branch; I did try
> R-devel as of r68987 and it still has this problem).
> 
> I am really hoping something can be done about this before the
> release of R-3.2.2.
> 
> Thanks!
> Dan
> 
> 
> 
> > Dan
> > 
> > 
> > 
> > > Best,
> > > Uwe Ligges
> > > 
> > > >
> > > > Dan
> > > >
> > > >> sessionInfo()
> > > > R version 3.2.2 beta (2015-08-05 r68859)
> > > > Platform: x86_64-w64-mingw32/x64 (64-bit) Running under:
> > > > Windows
> > > > Server 2012 x64 (build 9200)
> > > >
> > > > locale:
> > > > [1] LC_COLLATE=English_United States.1252 [2]
> > > > LC_CTYPE=English_United States.1252 [3]
> > > > LC_MONETARY=English_United
> > > > States.1252 [4] LC_NUMERIC=C [5] LC_TIME=English_United
> > > > States.1252
> > > >
> > > > attached base packages:
> > > > [1] stats     graphics  grDevices utils     datasets  methods
> > > >   base
> > > >
> > > > ______________________________________________
> > > > R-devel at r-project.org mailing list
> > > > https://na01.safelinks.protection.outlook.com/?url=https%3a%2f%2fs
> > > > tat.ethz.ch%2fmailman%2flistinfo%2fr-devel&data=01%7c01%7cdavidsmi
> > > > %40microsoft.com%7ce6746faa79b6426c81a508d2a26d3d35%7c72f988bf86f1
> > > > 41af91ab2d7cd011db47%7c1&sdata=Xz86iq9HlmZoU5gRNgeGLx7hwoCSQVuBy9q
> > > > bHPNebz8%3d
> > > >
> > >
> > 
> > ______________________________________________
> > R-devel at r-project.org mailing list
> > https://na01.safelinks.protection.outlook.com/?url=https%3a%2f%2fstat.
> > ethz.ch%2fmailman%2flistinfo%2fr-devel&data=01%7c01%7cdavidsmi%40micro
> > soft.com%7ce6746faa79b6426c81a508d2a26d3d35%7c72f988bf86f141af91ab2d7c
> > d011db47%7c1&sdata=Xz86iq9HlmZoU5gRNgeGLx7hwoCSQVuBy9qbHPNebz8%3d
> >
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://na01.safelinks.protection.outlook.com/?url=https%3a%2f%2fstat.ethz.ch%2fmailman%2flistinfo%2fr-devel&data=01%7c01%7cdavidsmi%40microsoft.com%7ce6746faa79b6426c81a508d2a26d3d35%7c72f988bf86f141af91ab2d7cd011db47%7c1&sdata=Xz86iq9HlmZoU5gRNgeGLx7hwoCSQVuBy9qbHPNebz8%3d
>


From maechler at stat.math.ethz.ch  Thu Aug 13 09:51:10 2015
From: maechler at stat.math.ethz.ch (Martin Maechler)
Date: Thu, 13 Aug 2015 09:51:10 +0200
Subject: [Rd] enableJIT in Rprofile leads to 'not a proper
	evaluation	environment' on startup
In-Reply-To: <m2fv3ofdr8.fsf@gnu.org>
References: <m2fv3ofdr8.fsf@gnu.org>
Message-ID: <21964.19566.41465.850115@stat.math.ethz.ch>

>>>>> Sam Steingold <sds at gnu.org>
>>>>>     on Wed, 12 Aug 2015 16:33:31 -0400 writes:

    > A commenter on SO suggested that I copy my question to
    > R-devel http://stackoverflow.com/q/31972325/850781

Thank you, Sam.  
{ Yes, asking here will still be seen by more R savvy people than SO}

    > I have had

    > --8<---------------cut
    > here---------------start------------->8---
    > library(compiler) compiler::enableJIT(3)
    > --8<---------------cut
    > here---------------end--------------->8---

    > in ~/.Rprofile for years; now that I upgraded to 3.2.1 I
    > get this on startup:

    > --8<---------------cut
    > here---------------start------------->8--- Error in
    > frameTypes(env) : not a proper evaluation environment
    > Calls: <Anonymous> -> <Anonymous> -> makeCenv -> structure
    > -> frameTypes
    >> q()
    > Warning message: restarting interrupted promise evaluation
    > --8<---------------cut
    > here---------------end--------------->8---

    > I don't see anything relevant in NEWS.

    > Replacing 3 with 2 in compiler::enableJIT(3) removes the
    > error.  However, I would prefer my loops to be compiled
    > too.

sure, but ...

    > Suggestions?

The most important suggestion for you:  

PLEASE do upgrade R more often and/or occasionally install and
run "R-devel" (the development version of R; with daily snapshot
tarballs from (new URL) https://stat.ethz.ch/R/daily/

The above failure is due to a bogous commit to the development version
of R in January(!) ...
and is now fixed in R-devel .. will be fixed in R 3.2.2 patched
next week.. but is most probably not making it into R 3.2.2
which has been in code freeze, to be released tomorrow(!).

Martin Maechler,
ETH Zurich


From maechler at stat.math.ethz.ch  Wed Aug 12 19:28:58 2015
From: maechler at stat.math.ethz.ch (Martin Maechler)
Date: Wed, 12 Aug 2015 19:28:58 +0200
Subject: [Rd] Weird issue when iterating through dates
In-Reply-To: <CAPPM_gRzPpRCxDtvPNdS-VFgvb_DViKksNVHw62u1Gg+zBSH8A@mail.gmail.com>
References: <CAFnz2--pK12My=sJ-N0sykXi0zQa+qwtR42iZo2fBrpiTTWOCg@mail.gmail.com>
	<CABtg=K=b5Amh17=9wZ=g2j9F63KtYEYSDWoQEOGx7kvYEdBHZA@mail.gmail.com>
	<CAFnz2-8902ztc-=gcwcA4jnYHkX9PL0oNMctGjtmXdynQjYRcg@mail.gmail.com>
	<CABtg=K=PB+r1FHuzcK1pGMXQFo=peuTGWx_CL_CczkspwXq3SA@mail.gmail.com>
	<CAF8bMcYHLfxVaT-NT1SiOTzrBEGM6vgr+PwwzGQGAJ6kGZx_MA@mail.gmail.com>
	<CAFnz2-9z0R6xf_RzmtFrHcQKCVbip+jEH+E1+Uj2MuCoerXbMg@mail.gmail.com>
	<CABtg=K=qGcsg_tH7m=c0KEzc1mdqMM3ETjB4JNQeOMnS4ehNdg@mail.gmail.com>
	<CAPPM_gRzPpRCxDtvPNdS-VFgvb_DViKksNVHw62u1Gg+zBSH8A@mail.gmail.com>
Message-ID: <21963.33370.575350.953028@stat.math.ethz.ch>

(Resend: was meant for R-devel, not just Joshua)

> On Wed, Aug 12, 2015 at 10:55 AM, G?bor Cs?rdi <csardi.gabor at gmail.com> wrote:
> > I am not sure if this is a bug or not.
> >
> I would argue that this isn't a bug, not even in the documentation of
> "for" (even though it might be clearer).  ?"for" says that `seq` is
> "[A]n expression evaluating to a vector (including a list and an
> expression) or to a pairlist or 'NULL'".  Date objects aren't strictly
> vectors, so they're treated as integer/numeric.

> This answer on StackOverflow said that "for" does not copy any of the
> iterators attributes (including class), which causes this behavior.
> http://stackoverflow.com/a/23278464/271616

> To respond to the original question regarding why the code below,
> "prints the dates as a string".  Quite simply, you convert seq(d1,d2,
> by=1) to character, so it's no longer a Date.  The fact that
> Sys.Date() and as.character(Sys.Date()) both *print* the same thing
> does not mean they are the same.

> for ( dt in as.character(seq(d1,d2, by=1)) ) {
>   print(dt)
> }

> Best,
> Josh

Thank you, Joshua.  Definitely no bug ... 
but possibly something where the documentation (== the help
page, not Google, not Stackoverflow, ... ;-\ ) can be improved.

Indeed, one could add  what  
	``evaluating to a vector''
means; 
I don't have time now, but am almost sure that we could state that

      for(n in obj) { ... }

should be semantically equivalent to

      for(n in as.vector(obj)) { ... }

but there may be subtleties here....
--> posting back to R-devel  so people can experiment if the
above is true, and if not *where*.

Martin

> > Gabor
> >
> > On Wed, Aug 12, 2015 at 11:51 AM, Luca Cerone <luca.cerone at gmail.com> wrote:
> >> Following up on this, should I report a bug? can you drive me through
> >> the process?
> >>
> >> Cheers,
> >> Luca
> >>
> >> On Thu, Aug 6, 2015 at 4:55 PM, William Dunlap <wdunlap at tibco.com> wrote:
> >>>>> Just a quick question: what's the difference between  `[.Date` and
> >>>>> `[[.Date`?
> >>>>> Is it supposed to be the method for accessing the value right?
> >>>>
> >>>>For Dates and atomic vectors in general they are the same, but ...
> >>>
> >>> Even for atomic vectors with names they are not quite the same
> >>>     > c(One=1, Two=2)[[2]]
> >>>     [1] 2
> >>>     > c(One=1, Two=2)[2]
> >>>     Two
> >>>       2
> >>> (and [[ will only return 1 item, unlike [).
> >>>
> >>>
> >>> Bill Dunlap
> >>> TIBCO Software
> >>> wdunlap tibco.com
> >>>
> >>> On Thu, Aug 6, 2015 at 5:36 AM, G?bor Cs?rdi <csardi.gabor at gmail.com> wrote:
> >>>>
> >>>> On Thu, Aug 6, 2015 at 6:30 AM, Luca Cerone <luca.cerone at gmail.com> wrote:
> >>>> [...]
> >>>> > Just a quick question: what's the difference between  `[.Date` and
> >>>> > `[[.Date`?
> >>>> > Is it supposed to be the method for accessing the value right?
> >>>>
> >>>> For Dates and atomic vectors in general they are the same, but in
> >>>> general they are two different operators that behave differently on
> >>>> some data types. E.g. on lists [ selects a sub-list and [[ selects a
> >>>> single element.
> >>>>
> >>>> Gabor
> >>>>
> >>>> [...]

> -- 
> Joshua Ulrich  |  about.me/joshuaulrich
> FOSS Trading  |  www.fosstrading.com

> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From h.wickham at gmail.com  Thu Aug 13 15:39:14 2015
From: h.wickham at gmail.com (Hadley Wickham)
Date: Thu, 13 Aug 2015 06:39:14 -0700
Subject: [Rd] Bug in rank with utf8?
Message-ID: <CABdHhvEfmcHF-NGzxy-VtpQkWYzDxW3E497j_MgCVnFGsPXCGg@mail.gmail.com>

x <- "\u0663"
y <- 3

x == y
# FALSE
rank(c(x, y))
# c(1.5, 1.5)



-- 
http://had.co.nz/


From john.archie.mckown at gmail.com  Thu Aug 13 16:01:16 2015
From: john.archie.mckown at gmail.com (John McKown)
Date: Thu, 13 Aug 2015 09:01:16 -0500
Subject: [Rd] Bug in rank with utf8?
In-Reply-To: <CABdHhvEfmcHF-NGzxy-VtpQkWYzDxW3E497j_MgCVnFGsPXCGg@mail.gmail.com>
References: <CABdHhvEfmcHF-NGzxy-VtpQkWYzDxW3E497j_MgCVnFGsPXCGg@mail.gmail.com>
Message-ID: <CAAJSdjjG6fobHyfkrGu6xCYDBNdFuixaSLX6+zT5qhSAnAX4ug@mail.gmail.com>

2015-08-13 8:39 GMT-05:00 Hadley Wickham <h.wickham at gmail.com>:

> x <- "\u0663"
> y <- 3
>
> x == y
> # FALSE
> rank(c(x, y))
> # c(1.5, 1.5)
>

?also interesting, and confusing to me:

> x == y
[1] FALSE
> x > y
[1] FALSE
> x < y
[1] FALSE
>

With some slight changes:

> x <- "\u0663"
> y <- "3"
> xy <- c(x,y)
> rank(xy);
[1] 1.5 1.5
> Sys.getlocale();
[1]
"LC_CTYPE=en_US.UTF8;LC_NUMERIC=C;LC_TIME=en_US.UTF8;LC_COLLATE=en_US.UTF8;LC_MONETARY=en_US.UTF8;LC_MESSAGES=en_US.UTF8;LC_PAPER=en_US.UTF8;LC_NAME=C;LC_ADDRESS=C;LC_TELEPHONE=C;LC_MEASUREMENT=en_US.UTF8;LC_IDENTIFICATION=C"
> Sys.setlocale(category="LC_COLLATE", locale="C");
[1] "C"
> rank(xy);
[1] 2 1
>



> --
> http://had.co.nz/
>
>
-- 

Schrodinger's backup: The condition of any backup is unknown until a
restore is attempted.

Yoda of Borg, we are. Futile, resistance is, yes. Assimilated, you will be.

He's about as useful as a wax frying pan.

10 to the 12th power microphones = 1 Megaphone

Maranatha! <><
John McKown

	[[alternative HTML version deleted]]


From john.archie.mckown at gmail.com  Thu Aug 13 16:09:22 2015
From: john.archie.mckown at gmail.com (John McKown)
Date: Thu, 13 Aug 2015 09:09:22 -0500
Subject: [Rd] Bug in rank with utf8?
In-Reply-To: <CAAJSdjjG6fobHyfkrGu6xCYDBNdFuixaSLX6+zT5qhSAnAX4ug@mail.gmail.com>
References: <CABdHhvEfmcHF-NGzxy-VtpQkWYzDxW3E497j_MgCVnFGsPXCGg@mail.gmail.com>
	<CAAJSdjjG6fobHyfkrGu6xCYDBNdFuixaSLX6+zT5qhSAnAX4ug@mail.gmail.com>
Message-ID: <CAAJSdjhEJEY0MxJNOQt_7kbbsU1PZW4aDx8JEmiq0rKB+JerTg@mail.gmail.com>

Once again again, I did not read the Subject correctly. I switched away
from UTF8 in my second test.

On Thu, Aug 13, 2015 at 9:01 AM, John McKown <john.archie.mckown at gmail.com>
wrote:

> 2015-08-13 8:39 GMT-05:00 Hadley Wickham <h.wickham at gmail.com>:
>
>> x <- "\u0663"
>> y <- 3
>>
>> x == y
>> # FALSE
>> rank(c(x, y))
>> # c(1.5, 1.5)
>>
>
> ?also interesting, and confusing to me:
>
> > x == y
> [1] FALSE
> > x > y
> [1] FALSE
> > x < y
> [1] FALSE
> >
>
> With some slight changes:
>
> > x <- "\u0663"
> > y <- "3"
> > xy <- c(x,y)
> > rank(xy);
> [1] 1.5 1.5
> > Sys.getlocale();
> [1]
> "LC_CTYPE=en_US.UTF8;LC_NUMERIC=C;LC_TIME=en_US.UTF8;LC_COLLATE=en_US.UTF8;LC_MONETARY=en_US.UTF8;LC_MESSAGES=en_US.UTF8;LC_PAPER=en_US.UTF8;LC_NAME=C;LC_ADDRESS=C;LC_TELEPHONE=C;LC_MEASUREMENT=en_US.UTF8;LC_IDENTIFICATION=C"
> > Sys.setlocale(category="LC_COLLATE", locale="C");
> [1] "C"
> > rank(xy);
> [1] 2 1
> >
>
>
>
>> --
>> http://had.co.nz/
>>
>>
> --
>
> Schrodinger's backup: The condition of any backup is unknown until a
> restore is attempted.
>
> Yoda of Borg, we are. Futile, resistance is, yes. Assimilated, you will be.
>
> He's about as useful as a wax frying pan.
>
> 10 to the 12th power microphones = 1 Megaphone
>
> Maranatha! <><
> John McKown
>



-- 

Schrodinger's backup: The condition of any backup is unknown until a
restore is attempted.

Yoda of Borg, we are. Futile, resistance is, yes. Assimilated, you will be.

He's about as useful as a wax frying pan.

10 to the 12th power microphones = 1 Megaphone

Maranatha! <><
John McKown

	[[alternative HTML version deleted]]


From pdalgd at gmail.com  Thu Aug 13 16:19:15 2015
From: pdalgd at gmail.com (peter dalgaard)
Date: Thu, 13 Aug 2015 16:19:15 +0200
Subject: [Rd] Bug in rank with utf8?
In-Reply-To: <CAAJSdjjG6fobHyfkrGu6xCYDBNdFuixaSLX6+zT5qhSAnAX4ug@mail.gmail.com>
References: <CABdHhvEfmcHF-NGzxy-VtpQkWYzDxW3E497j_MgCVnFGsPXCGg@mail.gmail.com>
	<CAAJSdjjG6fobHyfkrGu6xCYDBNdFuixaSLX6+zT5qhSAnAX4ug@mail.gmail.com>
Message-ID: <44612244-68EE-402A-BBB7-6674D128DB73@gmail.com>

Yes, collation is a strange thing, and? 

Collation order will depend on locale settings, and there are quite a few cases where the collation order of two items is not defined. 

To add to the confusion, on OSX Mavericks, I see

> x <- "\u0663"
> y <- 3
> 
> x == y
[1] FALSE
> rank(c(x, y))
[1] 2 1
> x
[1] "?"
> x == y
[1] FALSE
> x > y
[1] TRUE
> x < y
[1] FALSE

> Sys.getlocale()
[1] "en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8"
> Sys.getlocale("LC_COLLATE")
[1] "en_US.UTF-8"

Notice the differences from en_US.UTF8 (sans hyphen) on your system....

-pd

On 13 Aug 2015, at 16:01 , John McKown <john.archie.mckown at gmail.com> wrote:

> 2015-08-13 8:39 GMT-05:00 Hadley Wickham <h.wickham at gmail.com>:
> 
>> x <- "\u0663"
>> y <- 3
>> 
>> x == y
>> # FALSE
>> rank(c(x, y))
>> # c(1.5, 1.5)
>> 
> 
> ?also interesting, and confusing to me:
> 
>> x == y
> [1] FALSE
>> x > y
> [1] FALSE
>> x < y
> [1] FALSE
>> 
> 
> With some slight changes:
> 
>> x <- "\u0663"
>> y <- "3"
>> xy <- c(x,y)
>> rank(xy);
> [1] 1.5 1.5
>> Sys.getlocale();
> [1]
> "LC_CTYPE=en_US.UTF8;LC_NUMERIC=C;LC_TIME=en_US.UTF8;LC_COLLATE=en_US.UTF8;LC_MONETARY=en_US.UTF8;LC_MESSAGES=en_US.UTF8;LC_PAPER=en_US.UTF8;LC_NAME=C;LC_ADDRESS=C;LC_TELEPHONE=C;LC_MEASUREMENT=en_US.UTF8;LC_IDENTIFICATION=C"
>> Sys.setlocale(category="LC_COLLATE", locale="C");
> [1] "C"
>> rank(xy);
> [1] 2 1
>> 
> 
> 
> 
>> --
>> http://had.co.nz/
>> 
>> 
> -- 
> 
> Schrodinger's backup: The condition of any backup is unknown until a
> restore is attempted.
> 
> Yoda of Borg, we are. Futile, resistance is, yes. Assimilated, you will be.
> 
> He's about as useful as a wax frying pan.
> 
> 10 to the 12th power microphones = 1 Megaphone
> 
> Maranatha! <><
> John McKown
> 
> 	[[alternative HTML version deleted]]
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel

-- 
Peter Dalgaard, Professor,
Center for Statistics, Copenhagen Business School
Solbjerg Plads 3, 2000 Frederiksberg, Denmark
Phone: (+45)38153501
Office: A 4.23
Email: pd.mes at cbs.dk  Priv: PDalgd at gmail.com


From ripley at stats.ox.ac.uk  Fri Aug 14 08:10:35 2015
From: ripley at stats.ox.ac.uk (Prof Brian Ripley)
Date: Fri, 14 Aug 2015 07:10:35 +0100
Subject: [Rd] Bug in rank with utf8?
In-Reply-To: <44612244-68EE-402A-BBB7-6674D128DB73@gmail.com>
References: <CABdHhvEfmcHF-NGzxy-VtpQkWYzDxW3E497j_MgCVnFGsPXCGg@mail.gmail.com>
	<CAAJSdjjG6fobHyfkrGu6xCYDBNdFuixaSLX6+zT5qhSAnAX4ug@mail.gmail.com>
	<44612244-68EE-402A-BBB7-6674D128DB73@gmail.com>
Message-ID: <55CD865B.5050302@stats.ox.ac.uk>

On 13/08/2015 15:19, peter dalgaard wrote:
> Yes, collation is a strange thing, and?

And remember that on some platforms (including yours) ICU is used, so 
LC_COLLATE is not particularly relevant (unless it is 'C').  See 
?Comparisons and ?icuGetCollate.

E.g. on my Yosemite system in en_US.UTF-8

> rank(c(x, y))
[1] 1.5 1.5
> icuGetCollate()
[1] "root"
> icuSetCollate(locale="ASCII")
> rank(c(x, y))
[1] 2 1

whereas on Fedora 21

> rank(c(x, y))
[1] 2 1
>  icuGetCollate()
[1] "root"



>
> Collation order will depend on locale settings, and there are quite a few cases where the collation order of two items is not defined.
>
> To add to the confusion, on OSX Mavericks, I see
>
>> x <- "\u0663"
>> y <- 3
>>
>> x == y
> [1] FALSE
>> rank(c(x, y))
> [1] 2 1
>> x
> [1] "?"
>> x == y
> [1] FALSE
>> x > y
> [1] TRUE
>> x < y
> [1] FALSE
>
>> Sys.getlocale()
> [1] "en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8"
>> Sys.getlocale("LC_COLLATE")
> [1] "en_US.UTF-8"
>
> Notice the differences from en_US.UTF8 (sans hyphen) on your system....
>
> -pd
>
> On 13 Aug 2015, at 16:01 , John McKown <john.archie.mckown at gmail.com> wrote:
>
>> 2015-08-13 8:39 GMT-05:00 Hadley Wickham <h.wickham at gmail.com>:
>>
>>> x <- "\u0663"
>>> y <- 3
>>>
>>> x == y
>>> # FALSE
>>> rank(c(x, y))
>>> # c(1.5, 1.5)
>>>
>>
>> ?also interesting, and confusing to me:
>>
>>> x == y
>> [1] FALSE
>>> x > y
>> [1] FALSE
>>> x < y
>> [1] FALSE
>>>
>>
>> With some slight changes:
>>
>>> x <- "\u0663"
>>> y <- "3"
>>> xy <- c(x,y)
>>> rank(xy);
>> [1] 1.5 1.5
>>> Sys.getlocale();
>> [1]
>> "LC_CTYPE=en_US.UTF8;LC_NUMERIC=C;LC_TIME=en_US.UTF8;LC_COLLATE=en_US.UTF8;LC_MONETARY=en_US.UTF8;LC_MESSAGES=en_US.UTF8;LC_PAPER=en_US.UTF8;LC_NAME=C;LC_ADDRESS=C;LC_TELEPHONE=C;LC_MEASUREMENT=en_US.UTF8;LC_IDENTIFICATION=C"
>>> Sys.setlocale(category="LC_COLLATE", locale="C");
>> [1] "C"
>>> rank(xy);
>> [1] 2 1
>>>
>


-- 
Brian D. Ripley,                  ripley at stats.ox.ac.uk
Emeritus Professor of Applied Statistics, University of Oxford
1 South Parks Road, Oxford OX1 3TG, UK


From pdalgd at gmail.com  Fri Aug 14 09:20:57 2015
From: pdalgd at gmail.com (peter dalgaard)
Date: Fri, 14 Aug 2015 09:20:57 +0200
Subject: [Rd] Bug in rank with utf8?
In-Reply-To: <55CD865B.5050302@stats.ox.ac.uk>
References: <CABdHhvEfmcHF-NGzxy-VtpQkWYzDxW3E497j_MgCVnFGsPXCGg@mail.gmail.com>
	<CAAJSdjjG6fobHyfkrGu6xCYDBNdFuixaSLX6+zT5qhSAnAX4ug@mail.gmail.com>
	<44612244-68EE-402A-BBB7-6674D128DB73@gmail.com>
	<55CD865B.5050302@stats.ox.ac.uk>
Message-ID: <449F030F-97E4-49EA-A109-AA562EA2BCCF@gmail.com>


> On 14 Aug 2015, at 08:10 , Prof Brian Ripley <ripley at stats.ox.ac.uk> wrote:
> 
> E.g. on my Yosemite system in en_US.UTF-8
> 
>> rank(c(x, y))
> [1] 1.5 1.5
> 

..which differs from my Mavericks system but not my Yosemite system, both in en_US.UTF-8, both with icuGetCollate returning "root"... Oh, well.

-pd

-- 
Peter Dalgaard, Professor,
Center for Statistics, Copenhagen Business School
Solbjerg Plads 3, 2000 Frederiksberg, Denmark
Phone: (+45)38153501
Email: pd.mes at cbs.dk  Priv: PDalgd at gmail.com


From henrik.bengtsson at ucsf.edu  Fri Aug 14 11:09:32 2015
From: henrik.bengtsson at ucsf.edu (Henrik Bengtsson)
Date: Fri, 14 Aug 2015 11:09:32 +0200
Subject: [Rd] capture.output() duplicates last line unless newline (R-devel
	bug)
Message-ID: <CAFDcVCRzEdS2Bs7bUuoMw1ZVq4qRTukaw4Y1KVgtFmeDAF7=Ow@mail.gmail.com>

In R-devel (2015-08-12 r69024), capture.output() incorrectly
duplicates the last line unless it ends with a newline.  I don't see
this in R 3.2.2 RC (2015-08-13 r69049).  It seems to have started
fairily recently; I spotted this yesterday after starting to get
errors in my R.utils check that use capture.output(), cf.
https://www.r-project.org/nosvn/R.check/r-devel-linux-x86_64-debian-clang/R.utils-00check.html

Examples:

> x <- "a"
> cat(x)
a>
> capture.output(cat(x))
[1] "a" "a"

> x <- "a\n"
> cat(x)
a
> capture.output(cat(x))
[1] "a"

> x <- "a\nb"
> cat(x)
a
b>
> capture.output(cat(x))
[1] "a" "b" "b"

> x <- "a\nb\n"
> cat(x)
a
b
> capture.output(cat(x))
[1] "a" "b"

> capture.output(cat(x))
[1] "a" "b"
> x <- c("a", "b")
> cat(x)
a b>
> capture.output(cat(x))
[1] "a b" "a b"

> x <- c("a", "b\n")
> cat(x)
a b
> capture.output(cat(x))
[1] "a b"


> sessionInfo()
R Under development (unstable) (2015-08-12 r69024)
Platform: x86_64-w64-mingw32/x64 (64-bit)
Running under: Windows 7 x64 (build 7601) Service Pack 1

locale:
[1] LC_COLLATE=English_United States.1252
[2] LC_CTYPE=English_United States.1252
[3] LC_MONETARY=English_United States.1252
[4] LC_NUMERIC=C
[5] LC_TIME=English_United States.1252

attached base packages:
[1] stats     graphics  grDevices utils     datasets  methods   base

other attached packages:
[1] R.utils_2.1.0-9000     R.oo_1.19.0-9000       R.methodsS3_1.7.0-9000

loaded via a namespace (and not attached):
[1] tools_3.3.0

/Henrik


From ripley at stats.ox.ac.uk  Fri Aug 14 11:24:16 2015
From: ripley at stats.ox.ac.uk (Prof Brian Ripley)
Date: Fri, 14 Aug 2015 10:24:16 +0100
Subject: [Rd] capture.output() duplicates last line unless newline
 (R-devel bug)
In-Reply-To: <CAFDcVCRzEdS2Bs7bUuoMw1ZVq4qRTukaw4Y1KVgtFmeDAF7=Ow@mail.gmail.com>
References: <CAFDcVCRzEdS2Bs7bUuoMw1ZVq4qRTukaw4Y1KVgtFmeDAF7=Ow@mail.gmail.com>
Message-ID: <55CDB3C0.7040201@stats.ox.ac.uk>

But it was changed over 24h ago in R-devel, 2 commits later ....

See e.g. https://cran.r-project.org/bin/windows/base/rdevel.html for 
when not to report on 'R (Under Development)' (and you really should 
have known that, as a Windows user).

On 14/08/2015 10:09, Henrik Bengtsson wrote:
> In R-devel (2015-08-12 r69024), capture.output() incorrectly
> duplicates the last line unless it ends with a newline.  I don't see
> this in R 3.2.2 RC (2015-08-13 r69049).  It seems to have started
> fairily recently; I spotted this yesterday after starting to get
> errors in my R.utils check that use capture.output(), cf.
> https://www.r-project.org/nosvn/R.check/r-devel-linux-x86_64-debian-clang/R.utils-00check.html
>
> Examples:
>
>> x <- "a"
>> cat(x)
> a>
>> capture.output(cat(x))
> [1] "a" "a"
>
>> x <- "a\n"
>> cat(x)
> a
>> capture.output(cat(x))
> [1] "a"
>
>> x <- "a\nb"
>> cat(x)
> a
> b>
>> capture.output(cat(x))
> [1] "a" "b" "b"
>
>> x <- "a\nb\n"
>> cat(x)
> a
> b
>> capture.output(cat(x))
> [1] "a" "b"
>
>> capture.output(cat(x))
> [1] "a" "b"
>> x <- c("a", "b")
>> cat(x)
> a b>
>> capture.output(cat(x))
> [1] "a b" "a b"
>
>> x <- c("a", "b\n")
>> cat(x)
> a b
>> capture.output(cat(x))
> [1] "a b"
>
>
>> sessionInfo()
> R Under development (unstable) (2015-08-12 r69024)
> Platform: x86_64-w64-mingw32/x64 (64-bit)
> Running under: Windows 7 x64 (build 7601) Service Pack 1
>
> locale:
> [1] LC_COLLATE=English_United States.1252
> [2] LC_CTYPE=English_United States.1252
> [3] LC_MONETARY=English_United States.1252
> [4] LC_NUMERIC=C
> [5] LC_TIME=English_United States.1252
>
> attached base packages:
> [1] stats     graphics  grDevices utils     datasets  methods   base
>
> other attached packages:
> [1] R.utils_2.1.0-9000     R.oo_1.19.0-9000       R.methodsS3_1.7.0-9000
>
> loaded via a namespace (and not attached):
> [1] tools_3.3.0
>
> /Henrik


-- 
Brian D. Ripley,                  ripley at stats.ox.ac.uk
Emeritus Professor of Applied Statistics, University of Oxford
1 South Parks Road, Oxford OX1 3TG, UK


From pdalgd at gmail.com  Fri Aug 14 11:30:50 2015
From: pdalgd at gmail.com (peter dalgaard)
Date: Fri, 14 Aug 2015 11:30:50 +0200
Subject: [Rd] capture.output() duplicates last line unless newline
	(R-devel bug)
In-Reply-To: <CAFDcVCRzEdS2Bs7bUuoMw1ZVq4qRTukaw4Y1KVgtFmeDAF7=Ow@mail.gmail.com>
References: <CAFDcVCRzEdS2Bs7bUuoMw1ZVq4qRTukaw4Y1KVgtFmeDAF7=Ow@mail.gmail.com>
Message-ID: <5C13D40D-0283-4F49-8307-96AFC61E854C@gmail.com>

The fix for PR#16481 had a side effect involving capture.output(), so this may be transient, please recheck whether the issue has disappeared in the meantime.

-pd

On 14 Aug 2015, at 11:09 , Henrik Bengtsson <henrik.bengtsson at ucsf.edu> wrote:

> In R-devel (2015-08-12 r69024), capture.output() incorrectly
> duplicates the last line unless it ends with a newline.  I don't see
> this in R 3.2.2 RC (2015-08-13 r69049).  It seems to have started
> fairily recently; I spotted this yesterday after starting to get
> errors in my R.utils check that use capture.output(), cf.
> https://www.r-project.org/nosvn/R.check/r-devel-linux-x86_64-debian-clang/R.utils-00check.html
> 
> Examples:
> 
>> x <- "a"
>> cat(x)
> a>
>> capture.output(cat(x))
> [1] "a" "a"
> 
>> x <- "a\n"
>> cat(x)
> a
>> capture.output(cat(x))
> [1] "a"
> 
>> x <- "a\nb"
>> cat(x)
> a
> b>
>> capture.output(cat(x))
> [1] "a" "b" "b"
> 
>> x <- "a\nb\n"
>> cat(x)
> a
> b
>> capture.output(cat(x))
> [1] "a" "b"
> 
>> capture.output(cat(x))
> [1] "a" "b"
>> x <- c("a", "b")
>> cat(x)
> a b>
>> capture.output(cat(x))
> [1] "a b" "a b"
> 
>> x <- c("a", "b\n")
>> cat(x)
> a b
>> capture.output(cat(x))
> [1] "a b"
> 
> 
>> sessionInfo()
> R Under development (unstable) (2015-08-12 r69024)
> Platform: x86_64-w64-mingw32/x64 (64-bit)
> Running under: Windows 7 x64 (build 7601) Service Pack 1
> 
> locale:
> [1] LC_COLLATE=English_United States.1252
> [2] LC_CTYPE=English_United States.1252
> [3] LC_MONETARY=English_United States.1252
> [4] LC_NUMERIC=C
> [5] LC_TIME=English_United States.1252
> 
> attached base packages:
> [1] stats     graphics  grDevices utils     datasets  methods   base
> 
> other attached packages:
> [1] R.utils_2.1.0-9000     R.oo_1.19.0-9000       R.methodsS3_1.7.0-9000
> 
> loaded via a namespace (and not attached):
> [1] tools_3.3.0
> 
> /Henrik
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel

-- 
Peter Dalgaard, Professor,
Center for Statistics, Copenhagen Business School
Solbjerg Plads 3, 2000 Frederiksberg, Denmark
Phone: (+45)38153501
Office: A 4.23
Email: pd.mes at cbs.dk  Priv: PDalgd at gmail.com


From henrik.bengtsson at ucsf.edu  Fri Aug 14 12:45:14 2015
From: henrik.bengtsson at ucsf.edu (Henrik Bengtsson)
Date: Fri, 14 Aug 2015 12:45:14 +0200
Subject: [Rd] capture.output() duplicates last line unless newline
 (R-devel bug)
In-Reply-To: <5C13D40D-0283-4F49-8307-96AFC61E854C@gmail.com>
References: <CAFDcVCRzEdS2Bs7bUuoMw1ZVq4qRTukaw4Y1KVgtFmeDAF7=Ow@mail.gmail.com>
	<5C13D40D-0283-4F49-8307-96AFC61E854C@gmail.com>
Message-ID: <CAFDcVCTGLgg=PoLFzO=toG4=WqECzfz7kpynsqiFm-Hdyhn75g@mail.gmail.com>

Thanks for the updates.  I'm glad it was taken care of.  I would
normally have waited, but I wanted to bring this up asap in case there
was a risk for it to enter R 3.2.2.

/Henrik

On Fri, Aug 14, 2015 at 11:30 AM, peter dalgaard <pdalgd at gmail.com> wrote:
> The fix for PR#16481 had a side effect involving capture.output(), so this may be transient, please recheck whether the issue has disappeared in the meantime.
>
> -pd
>
> On 14 Aug 2015, at 11:09 , Henrik Bengtsson <henrik.bengtsson at ucsf.edu> wrote:
>
>> In R-devel (2015-08-12 r69024), capture.output() incorrectly
>> duplicates the last line unless it ends with a newline.  I don't see
>> this in R 3.2.2 RC (2015-08-13 r69049).  It seems to have started
>> fairily recently; I spotted this yesterday after starting to get
>> errors in my R.utils check that use capture.output(), cf.
>> https://www.r-project.org/nosvn/R.check/r-devel-linux-x86_64-debian-clang/R.utils-00check.html
>>
>> Examples:
>>
>>> x <- "a"
>>> cat(x)
>> a>
>>> capture.output(cat(x))
>> [1] "a" "a"
>>
>>> x <- "a\n"
>>> cat(x)
>> a
>>> capture.output(cat(x))
>> [1] "a"
>>
>>> x <- "a\nb"
>>> cat(x)
>> a
>> b>
>>> capture.output(cat(x))
>> [1] "a" "b" "b"
>>
>>> x <- "a\nb\n"
>>> cat(x)
>> a
>> b
>>> capture.output(cat(x))
>> [1] "a" "b"
>>
>>> capture.output(cat(x))
>> [1] "a" "b"
>>> x <- c("a", "b")
>>> cat(x)
>> a b>
>>> capture.output(cat(x))
>> [1] "a b" "a b"
>>
>>> x <- c("a", "b\n")
>>> cat(x)
>> a b
>>> capture.output(cat(x))
>> [1] "a b"
>>
>>
>>> sessionInfo()
>> R Under development (unstable) (2015-08-12 r69024)
>> Platform: x86_64-w64-mingw32/x64 (64-bit)
>> Running under: Windows 7 x64 (build 7601) Service Pack 1
>>
>> locale:
>> [1] LC_COLLATE=English_United States.1252
>> [2] LC_CTYPE=English_United States.1252
>> [3] LC_MONETARY=English_United States.1252
>> [4] LC_NUMERIC=C
>> [5] LC_TIME=English_United States.1252
>>
>> attached base packages:
>> [1] stats     graphics  grDevices utils     datasets  methods   base
>>
>> other attached packages:
>> [1] R.utils_2.1.0-9000     R.oo_1.19.0-9000       R.methodsS3_1.7.0-9000
>>
>> loaded via a namespace (and not attached):
>> [1] tools_3.3.0
>>
>> /Henrik
>>
>> ______________________________________________
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel
>
> --
> Peter Dalgaard, Professor,
> Center for Statistics, Copenhagen Business School
> Solbjerg Plads 3, 2000 Frederiksberg, Denmark
> Phone: (+45)38153501
> Office: A 4.23
> Email: pd.mes at cbs.dk  Priv: PDalgd at gmail.com
>
>
>
>
>
>
>
>
>


From unlikely.combination at gmail.com  Fri Aug 14 16:19:26 2015
From: unlikely.combination at gmail.com (Joe S)
Date: Fri, 14 Aug 2015 16:19:26 +0200
Subject: [Rd] Build R on Haiku
Message-ID: <CAPs52TqRajW5Rvb8KPGXsSE3i809gS-98QiS=mZjHbXXR-c7pg@mail.gmail.com>

Hi R-devel,
I'm trying to get R 3.2.1 working on Haiku (an open source OS inspired by
BeOS, not Linux based) on i586. With a few small changes to library paths
and ifdefs I am able to get a seemingly working R binary. The build process
stops with the 'tools' package. The last lines from make are below.

Does anyone have any tips? I'm rather new to debugging at this low level.

Are there any checks I can do to the R binary to test if it works properly?

Cheers
Joe

***********************************************************************
make[3]: Entering directory `/Store/buildr/src/library/tools'
building package 'tools'
make[4]: Entering directory `/Store/buildr/src/library/tools'
all.R is unchanged
make[4]: Leaving directory `/Store/buildr/src/library/tools'
make[4]: Entering directory `/Store/buildr/src/library/tools'
make[5]: Entering directory `/Store/buildr/src/library/tools/src'
make[6]: Entering directory `/Store/buildr/src/library/tools/src'
../../../../library/tools/libs/tools.so is unchanged
make[6]: Leaving directory `/Store/buildr/src/library/tools/src'
make[5]: Leaving directory `/Store/buildr/src/library/tools/src'
make[4]: Leaving directory `/Store/buildr/src/library/tools'
make[4]: Entering directory `/Store/buildr/src/library/tools'
installing 'sysdata.rda'
export
ADDON_PATH="%A/add-ons:/boot/home/config/non-packaged/add-ons:/boot/home/config/add-ons:/boot/system/non-packaged/add-ons:/boot/system/add-ons"
export
BEINCLUDES="/boot/system/develop/headers;/boot/system/develop/headers/be;/boot/system/develop/headers/posix;/boot/system/develop/headers/glibc;/boot/system/develop/headers/cpp;/boot/system/develop/headers/be/app;/boot/system/develop/headers/be/device;/boot/system/develop/headers/be/interface;/boot/system/develop/headers/be/locale;/boot/system/develop/headers/be/media;/boot/system/develop/headers/be/midi;/boot/system/develop/headers/be/midi2;/boot/system/develop/headers/be/net;/boot/system/develop/headers/be/kernel;/boot/system/develop/headers/be/storage;/boot/system/develop/headers/be/support;/boot/system/develop/headers/be/game;/boot/system/develop/headers/be/opengl;/boot/system/develop/headers/be/drivers;/boot/system/develop/headers/gnu;/boot/system/develop/headers/be/mail;/boot/system/develop/headers/be/translation;/boot/system/develop/headers/be/devel;/boot/system/develop/headers/be/add-ons/graphics;/boot/system/develop/headers/be/be_apps/Deskbar;/boot/system/develop/headers/be/be_apps/NetPositive;/boot/system/develop/headers/be/be_apps/Tracker"
export BE_HOST_CPU="x86"
export BUILDHOME="/boot/system/develop"
export GROUP="root"
export HISTCONTROL="ignoredups"
export HISTFILESIZE="500"
export HOME="/boot/home"
export JAVA_HOME="/packages/openjdk-1.7_2013_11_08-2/.self/lib/openjdk"
export LC_ALL="C"
export LC_COLLATE="en.UTF-8"
export LC_CTYPE="en.UTF-8"
export LC_MESSAGES="en.UTF-8"
export LC_MONETARY="en.UTF-8"
export LC_NUMERIC="en.UTF-8"
export LC_TIME="en.UTF-8"
export LC_TYPE="en_US.UTF-8"
export
LIBRARY_PATH="%A/lib:/boot/home/config/non-packaged/lib:/boot/home/config/lib:/boot/system/non-packaged/lib:/boot/system/lib:/Store/buildr/lib"
export
LS_COLORS="rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;43:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.Z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.jpg=01;35:*.jpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:"
export MAKEFLAGS="w"
export MAKELEVEL="5"
export MFLAGS="-w"
export OLDPWD
export
PATH=".:/boot/home/config/non-packaged/bin:/boot/home/config/bin:/boot/system/non-packaged/bin:/bin:/boot/system/apps:/boot/system/preferences"
export PWD="/Store/buildr/src/library/tools"
export R_DEFAULT_PACKAGES="NULL"
export R_DOC_DIR="/Store/buildr/doc"
export R_ENVIRON=""
export R_ENVIRON_USER=""
export R_HOME="/Store/buildr"
export R_INCLUDE_DIR="/Store/buildr/include"
export R_PROFILE=""
export R_PROFILE_USER=""
export R_SHARE_DIR="/Store/buildr/share"
export SAFEMODE="no"
export SED="/bin/sed"
export SHLVL="7"
export TERM="xterm"
export TTY="/dev/tt/p1"
export TTYPE="UTF-8"
export USER="user"
export XDG_CACHE_HOME="/boot/home/config/cache"
export XDG_CONFIG_DIRS="/boot/system/settings"
export XDG_CONFIG_HOME="/boot/home/config/settings"
export XDG_DATA_DIRS="/boot/system/non-packaged/data:/boot/system/data"
export XDG_DATA_HOME="/boot/home/config/non-packaged/data"
Error in .Call(PS_sigs, 1L) :
  first argument must be a string (of length 1) or native symbol reference
Error: unable to load R code in package 'tools'
Execution halted
make[4]: *** [sysdata] Error 1
make[4]: Leaving directory `/Store/buildr/src/library/tools'
make[3]: *** [all] Error 2
make[3]: Leaving directory `/Store/buildr/src/library/tools'
make[2]: *** [R] Error 1
make[2]: Leaving directory `/Store/buildr/src/library'
make[1]: *** [R] Error 1
make[1]: Leaving directory `/Store/buildr/src'
make: *** [R] Error 1

	[[alternative HTML version deleted]]


From henrik.bengtsson at ucsf.edu  Fri Aug 14 23:00:18 2015
From: henrik.bengtsson at ucsf.edu (Henrik Bengtsson)
Date: Fri, 14 Aug 2015 23:00:18 +0200
Subject: [Rd] Why not pthreads on Windows in 'parallel' package?
Message-ID: <CAFDcVCQO4b8ss08ZM_zXAp-4FAXL1dRj=9vRK6dB7hRSWivJGQ@mail.gmail.com>

On Windows there are a few 'pthreads' implementation, e.g.
pthreads-w32 and winpthreads
[https://cran.r-project.org/doc/manuals/r-devel/R-exts.html#Using-pthreads].
We're thinking of giving them a try for the matrixStats package, and
basic tests indicates it works, but since Windows pthreads are not
used by core R (or?) I've got a little bit worried that we will face
overwhelming problems.

So, why are the above Windows implementations not used in the
'parallel' package in order to add multicore support for mclapply() on
Windows?  Was it tried but found to be unreliable?  Was it that no one
had the time to do it?  License issues?  Are there any pointers to old
R-devel threads discussing this?

Thanks

Henrik


From kasperdanielhansen at gmail.com  Sat Aug 15 02:52:17 2015
From: kasperdanielhansen at gmail.com (Kasper Daniel Hansen)
Date: Fri, 14 Aug 2015 20:52:17 -0400
Subject: [Rd] Why not pthreads on Windows in 'parallel' package?
In-Reply-To: <CAFDcVCQO4b8ss08ZM_zXAp-4FAXL1dRj=9vRK6dB7hRSWivJGQ@mail.gmail.com>
References: <CAFDcVCQO4b8ss08ZM_zXAp-4FAXL1dRj=9vRK6dB7hRSWivJGQ@mail.gmail.com>
Message-ID: <CAC2h7uuUmE0EzTeUcWfifgYuJv6tWXGoY-x1=1V9Rpm7b+ZGDw@mail.gmail.com>

mclapply uses fork which is different from pthreads.  As I understand it,
pthreads requires you to rewrite code, fork is a system call which takes
care of completely replicating the current state of the process.

Kasper

On Fri, Aug 14, 2015 at 5:00 PM, Henrik Bengtsson <henrik.bengtsson at ucsf.edu
> wrote:

> On Windows there are a few 'pthreads' implementation, e.g.
> pthreads-w32 and winpthreads
> [https://cran.r-project.org/doc/manuals/r-devel/R-exts.html#Using-pthreads
> ].
> We're thinking of giving them a try for the matrixStats package, and
> basic tests indicates it works, but since Windows pthreads are not
> used by core R (or?) I've got a little bit worried that we will face
> overwhelming problems.
>
> So, why are the above Windows implementations not used in the
> 'parallel' package in order to add multicore support for mclapply() on
> Windows?  Was it tried but found to be unreliable?  Was it that no one
> had the time to do it?  License issues?  Are there any pointers to old
> R-devel threads discussing this?
>
> Thanks
>
> Henrik
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>

	[[alternative HTML version deleted]]


From henrik.bengtsson at ucsf.edu  Sat Aug 15 05:16:33 2015
From: henrik.bengtsson at ucsf.edu (Henrik Bengtsson)
Date: Sat, 15 Aug 2015 05:16:33 +0200
Subject: [Rd] Why not pthreads on Windows in 'parallel' package?
In-Reply-To: <CAC2h7uuUmE0EzTeUcWfifgYuJv6tWXGoY-x1=1V9Rpm7b+ZGDw@mail.gmail.com>
References: <CAFDcVCQO4b8ss08ZM_zXAp-4FAXL1dRj=9vRK6dB7hRSWivJGQ@mail.gmail.com>
	<CAC2h7uuUmE0EzTeUcWfifgYuJv6tWXGoY-x1=1V9Rpm7b+ZGDw@mail.gmail.com>
Message-ID: <CAFDcVCTnLnkkDcYUDUwu6rt8NzSrKY-EZz0zXX4KroATsZE_7g@mail.gmail.com>

Aaaah ...

and argh - I should have better not to post R question at midnight,
especially when I know it forks the process and it's not using threads.
Brain meltdown. (So, we'll proceed trying to use pthreads in matrixStats
also for Windows). Sorry for the noise and thanks Kasper.

Henrik
On Aug 15, 2015 02:52, "Kasper Daniel Hansen" <kasperdanielhansen at gmail.com>
wrote:

> mclapply uses fork which is different from pthreads.  As I understand it,
> pthreads requires you to rewrite code, fork is a system call which takes
> care of completely replicating the current state of the process.
>
> Kasper
>
> On Fri, Aug 14, 2015 at 5:00 PM, Henrik Bengtsson <
> henrik.bengtsson at ucsf.edu> wrote:
>
>> On Windows there are a few 'pthreads' implementation, e.g.
>> pthreads-w32 and winpthreads
>> [
>> https://cran.r-project.org/doc/manuals/r-devel/R-exts.html#Using-pthreads
>> ].
>> We're thinking of giving them a try for the matrixStats package, and
>> basic tests indicates it works, but since Windows pthreads are not
>> used by core R (or?) I've got a little bit worried that we will face
>> overwhelming problems.
>>
>> So, why are the above Windows implementations not used in the
>> 'parallel' package in order to add multicore support for mclapply() on
>> Windows?  Was it tried but found to be unreliable?  Was it that no one
>> had the time to do it?  License issues?  Are there any pointers to old
>> R-devel threads discussing this?
>>
>> Thanks
>>
>> Henrik
>>
>> ______________________________________________
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>
>
>

	[[alternative HTML version deleted]]


From dtenenba at fredhutch.org  Sat Aug 15 06:22:58 2015
From: dtenenba at fredhutch.org (Dan Tenenbaum)
Date: Fri, 14 Aug 2015 21:22:58 -0700 (PDT)
Subject: [Rd] Why not pthreads on Windows in 'parallel' package?
In-Reply-To: <CAFDcVCTnLnkkDcYUDUwu6rt8NzSrKY-EZz0zXX4KroATsZE_7g@mail.gmail.com>
Message-ID: <193949076.936118.1439612578782.JavaMail.root@fredhutch.org>

I'm confused; mclapply does not work on windows (at least with mc.cores > 1) because fork() is not available on windows.
So the original question still seems relevant to me. 
Dan


----- Original Message -----
> From: "Henrik Bengtsson" <henrik.bengtsson at ucsf.edu>
> To: "Kasper Daniel Hansen" <kasperdanielhansen at gmail.com>
> Cc: "R-devel" <r-devel at r-project.org>
> Sent: Friday, August 14, 2015 8:16:33 PM
> Subject: Re: [Rd] Why not pthreads on Windows in 'parallel' package?
> 
> Aaaah ...
> 
> and argh - I should have better not to post R question at midnight,
> especially when I know it forks the process and it's not using
> threads.
> Brain meltdown. (So, we'll proceed trying to use pthreads in
> matrixStats
> also for Windows). Sorry for the noise and thanks Kasper.
> 
> Henrik
> On Aug 15, 2015 02:52, "Kasper Daniel Hansen"
> <kasperdanielhansen at gmail.com>
> wrote:
> 
> > mclapply uses fork which is different from pthreads.  As I
> > understand it,
> > pthreads requires you to rewrite code, fork is a system call which
> > takes
> > care of completely replicating the current state of the process.
> >
> > Kasper
> >
> > On Fri, Aug 14, 2015 at 5:00 PM, Henrik Bengtsson <
> > henrik.bengtsson at ucsf.edu> wrote:
> >
> >> On Windows there are a few 'pthreads' implementation, e.g.
> >> pthreads-w32 and winpthreads
> >> [
> >> https://cran.r-project.org/doc/manuals/r-devel/R-exts.html#Using-pthreads
> >> ].
> >> We're thinking of giving them a try for the matrixStats package,
> >> and
> >> basic tests indicates it works, but since Windows pthreads are not
> >> used by core R (or?) I've got a little bit worried that we will
> >> face
> >> overwhelming problems.
> >>
> >> So, why are the above Windows implementations not used in the
> >> 'parallel' package in order to add multicore support for
> >> mclapply() on
> >> Windows?  Was it tried but found to be unreliable?  Was it that no
> >> one
> >> had the time to do it?  License issues?  Are there any pointers to
> >> old
> >> R-devel threads discussing this?
> >>
> >> Thanks
> >>
> >> Henrik
> >>
> >> ______________________________________________
> >> R-devel at r-project.org mailing list
> >> https://stat.ethz.ch/mailman/listinfo/r-devel
> >>
> >
> >
> 
> 	[[alternative HTML version deleted]]
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>


From mtmorgan at fredhutch.org  Sun Aug 16 22:39:29 2015
From: mtmorgan at fredhutch.org (Martin Morgan)
Date: Sun, 16 Aug 2015 13:39:29 -0700 (PDT)
Subject: [Rd] download.file() on ftp URL fails in windows with default
 download method
In-Reply-To: <1069418203.808600.1439411683715.JavaMail.root@fredhutch.org>
Message-ID: <271609466.974218.1439757569082.JavaMail.root@fredhutch.org>

In r69089 (R-devel) and 69090 (R-3-2-branch) the "wininet" ftp download method tries EPSV / PASV first. Success requires that the client (user) be able to open outgoing unprivileged ports, which will usually be the case. Proxies and so on should be handled by the OS and virtualization layer. Reports to the contrary welcome... Martin

----- Original Message -----
> Hi David,
> 
> ----- Original Message -----
> > From: "David Smith" <davidsmi at microsoft.com>
> > To: "Dan Tenenbaum" <dtenenba at fredhutch.org>, "Uwe Ligges"
> > <ligges at statistik.tu-dortmund.de>, "Elliot Waingold"
> > <Elliot.Waingold at microsoft.com>
> > Cc: "R-devel at r-project.org" <r-devel at r-project.org>
> > Sent: Wednesday, August 12, 2015 12:42:39 PM
> > Subject: RE: [Rd] download.file() on ftp URL fails in windows with
> > default download method
> > 
> > We were also able to reproduce the issue on Windows Server 2012. If
> > there's anything we can do to help please let me know; Elliot
> > Waingold (CC'd here) can provide access to the VM we used for
> > testing if that's of any help.
> > 
> 
> Thanks!
> 
> I have just been looking at this issue with Martin Morgan. We found
> that if we "or" the additional flag INTERNET_FLAG_PASSIVE on line
> 1012 of src/modules/internet/internet.c (R-3.2 branch, last changed
> in r68393)
> that the ftp connection works.
> 
> Further investigation reveals that in a passive ftp connection,
> certain ports on the client need to be open.
> This machine is in the Amazon cloud so it was easy to open the ports.
> But we still have a problem and I believe it's that the wrong IP
> address is being sent to the server (on an AWS machine, the machine
> thinks of itself as having one IP address, but that is a private
> address that is valid inside AWS only).
> 
> Here's a curl command line that gets around this by sending the
> correct address (or hostname):
> 
> curl --ftp-port myhostname.com
> ftp://ftp.ncbi.nlm.nih.gov/genomes/ASSEMBLY_REPORTS/All/GCF_000001405.13.assembly.txt
> 
> Curl normally uses passive mode which is why it works, but the
> --ftp-port switch tells it to use active mode with the specified ip
> address or hostname.
> 
> So I'm not sure where we go from here. One easy fix is just to add
> the INTERNET_FLAG_PASSIVE flag as described above. Another would be
> to first check if active mode works, and if not, use passive mode.
> 
> Dan
> 
> 
> > # David Smith
> > 
> > --
> > David M Smith <davidsmi at microsoft.com>
> > R Community Lead, Revolution Analytics (a Microsoft company)
> > Tel: +1 (312) 9205766 (Chicago IL, USA)
> > Twitter: @revodavid | Blog: ?http://blog.revolutionanalytics.com
> > We are hiring engineers for Revolution R and Azure Machine
> > Learning.
> > 
> > -----Original Message-----
> > From: R-devel [mailto:r-devel-bounces at r-project.org] On Behalf Of
> > Dan
> > Tenenbaum
> > Sent: Tuesday, August 11, 2015 09:51
> > To: Uwe Ligges <ligges at statistik.tu-dortmund.de>
> > Cc: R-devel at r-project.org
> > Subject: Re: [Rd] download.file() on ftp URL fails in windows with
> > default download method
> > 
> > 
> > 
> > ----- Original Message -----
> > > From: "Dan Tenenbaum" <dtenenba at fredhutch.org>
> > > To: "Uwe Ligges" <ligges at statistik.tu-dortmund.de>
> > > Cc: "R-devel at r-project.org" <r-devel at r-project.org>
> > > Sent: Saturday, August 8, 2015 4:02:54 PM
> > > Subject: Re: [Rd] download.file() on ftp URL fails in windows
> > > with
> > > default download method
> > > 
> > > 
> > > 
> > > ----- Original Message -----
> > > > From: "Uwe Ligges" <ligges at statistik.tu-dortmund.de>
> > > > To: "Dan Tenenbaum" <dtenenba at fredhutch.org>,
> > > > "R-devel at r-project.org" <r-devel at r-project.org>
> > > > Sent: Saturday, August 8, 2015 3:57:34 PM
> > > > Subject: Re: [Rd] download.file() on ftp URL fails in windows
> > > > with
> > > > default download method
> > > > 
> > > > 
> > > > 
> > > > On 08.08.2015 01:11, Dan Tenenbaum wrote:
> > > > > Hi,
> > > > >
> > > > >> url <-
> > > > >> "ftp://ftp.ncbi.nlm.nih.gov/genomes/ASSEMBLY_REPORTS/All/GCF_000001405.13.assembly.txt"
> > > > >> download.file(url, tempfile())
> > > > > trying URL
> > > > > 'ftp://ftp.ncbi.nlm.nih.gov/genomes/ASSEMBLY_REPORTS/All/GCF_000001405.13.assembly.txt'
> > > > > Error in download.file(url, tempfile()) :
> > > > >    cannot open URL
> > > > >    'ftp://ftp.ncbi.nlm.nih.gov/genomes/ASSEMBLY_REPORTS/All/GCF_000001405.13.assembly.txt'
> > > > > In addition: Warning message:
> > > > > In download.file(url, tempfile()) : InternetOpenUrl failed:
> > > > > ''
> > > > >
> > > > > If I set method="curl" it works fine. This was on
> > > > > R-3.2.2-beta
> > > > > (sessionInfo() below) but I got the same results in R-3.2.1
> > > > > and
> > > > > R-devel.
> > > > >
> > > > > This does not happen on Windows Server 2008 but it happens on
> > > > > Windows Server 2012.
> > > > 
> > > > 
> > > > Thanks for letting us know. The kot recent machine I checked
> > > > with
> > > > is
> > > > Windows Server 2008 R2 and I have not got problems on those.
> > > > Can
> > > > someone else rerpoduce this on Windows Server 2012?
> > > > 
> > > 
> > > If you like I can give you temporary access (via remote desktop)
> > > to
> > > a
> > > machine in the Amazon cloud.
> > > You can also download a Vagrant box here:
> > > 
> > > https://na01.safelinks.protection.outlook.com/?url=https%3a%2f%2fatlas
> > > .hashicorp.com%2fboxes%2fsearch%3futf8%3d%25E2%259C%2593%26sort%3d%26p
> > > rovider%3d%26q%3dwindows%2bserver%2b2012&data=01%7c01%7cdavidsmi%40mic
> > > rosoft.com%7ce6746faa79b6426c81a508d2a26d3d35%7c72f988bf86f141af91ab2d
> > > 7cd011db47%7c1&sdata=Z5pE32RJ7wEs4UBfRxXSDEqG6ESxFSFmHdFCU78kuaA%3d
> > > 
> > 
> > Just wanted to check in about this to see whether anyone else has
> > been able to reproduce this, or if Uwe has, or if anyone needs help
> > setting up a test environment either in the cloud or by using a VM
> > (like with Vagrant). I would be more than happy to help. I can set
> > up a temporary instance in the cloud that interested parties could
> > access at no cost.
> > 
> > This issue looks like a showstopper for Bioconductor; we are in the
> > process of moving our build system, and we were upgrading from
> > Windows Server 2008 to Windows Server 2012 in the process, but this
> > issue is going to affect a lot of packages if it is not resolved.
> > 
> > What I can say is that it does not seem like a firewall issue, as
> > the
> > download works fine if I specify method="curl"  (or libcurl) or
> > paste the url into a browser, and I get the same results whether
> > Windows Firewall is on or off.
> > 
> > My naive guess is that the InternetOpenUrl API has changed in
> > between
> > Windows Server 2008 and Windows Server 2012.
> > 
> > The offending call to this API seems to be at
> > src/modules/internet/internet.c:#908 (in the R-3.2 branch; I did
> > try
> > R-devel as of r68987 and it still has this problem).
> > 
> > I am really hoping something can be done about this before the
> > release of R-3.2.2.
> > 
> > Thanks!
> > Dan
> > 
> > 
> > 
> > > Dan
> > > 
> > > 
> > > 
> > > > Best,
> > > > Uwe Ligges
> > > > 
> > > > >
> > > > > Dan
> > > > >
> > > > >> sessionInfo()
> > > > > R version 3.2.2 beta (2015-08-05 r68859)
> > > > > Platform: x86_64-w64-mingw32/x64 (64-bit) Running under:
> > > > > Windows
> > > > > Server 2012 x64 (build 9200)
> > > > >
> > > > > locale:
> > > > > [1] LC_COLLATE=English_United States.1252 [2]
> > > > > LC_CTYPE=English_United States.1252 [3]
> > > > > LC_MONETARY=English_United
> > > > > States.1252 [4] LC_NUMERIC=C [5] LC_TIME=English_United
> > > > > States.1252
> > > > >
> > > > > attached base packages:
> > > > > [1] stats     graphics  grDevices utils     datasets  methods
> > > > >   base
> > > > >
> > > > > ______________________________________________
> > > > > R-devel at r-project.org mailing list
> > > > > https://na01.safelinks.protection.outlook.com/?url=https%3a%2f%2fs
> > > > > tat.ethz.ch%2fmailman%2flistinfo%2fr-devel&data=01%7c01%7cdavidsmi
> > > > > %40microsoft.com%7ce6746faa79b6426c81a508d2a26d3d35%7c72f988bf86f1
> > > > > 41af91ab2d7cd011db47%7c1&sdata=Xz86iq9HlmZoU5gRNgeGLx7hwoCSQVuBy9q
> > > > > bHPNebz8%3d
> > > > >
> > > >
> > > 
> > > ______________________________________________
> > > R-devel at r-project.org mailing list
> > > https://na01.safelinks.protection.outlook.com/?url=https%3a%2f%2fstat.
> > > ethz.ch%2fmailman%2flistinfo%2fr-devel&data=01%7c01%7cdavidsmi%40micro
> > > soft.com%7ce6746faa79b6426c81a508d2a26d3d35%7c72f988bf86f141af91ab2d7c
> > > d011db47%7c1&sdata=Xz86iq9HlmZoU5gRNgeGLx7hwoCSQVuBy9qbHPNebz8%3d
> > >
> > 
> > ______________________________________________
> > R-devel at r-project.org mailing list
> > https://na01.safelinks.protection.outlook.com/?url=https%3a%2f%2fstat.ethz.ch%2fmailman%2flistinfo%2fr-devel&data=01%7c01%7cdavidsmi%40microsoft.com%7ce6746faa79b6426c81a508d2a26d3d35%7c72f988bf86f141af91ab2d7cd011db47%7c1&sdata=Xz86iq9HlmZoU5gRNgeGLx7hwoCSQVuBy9qbHPNebz8%3d
> >
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>


From nesau at sfu.ca  Wed Aug 19 06:16:25 2015
From: nesau at sfu.ca (Nathan Esau)
Date: Tue, 18 Aug 2015 21:16:25 -0700
Subject: [Rd] Multi-line comments in R
Message-ID: <CAFr0acRH44XM+myeoucWriP6sRV13oK60e1F0faHjLxKeDd--Q@mail.gmail.com>

I was wondering why the decision was made long ago to never implement
multi-line comments in R. I feel there are several argument to be made for
why the R language should have multi-line comments.

1. Many programming languages (including some which are commonly used for
statistics, such as python, matlab and SAS) have this feature.

2. Convenience - some editors may not support commenting out a selected
region of code. This would provide a quick way of commenting and
uncommenting code which could be useful when debugging. Also, if you have
to type a lot of explanatory comments at the top of a code file, it can be
frustrating to have to type "#" at the start of every line in some editors.

I can also think of a few reasons why R doesn't have multi-line comments or
hasn't implemented them so far:

1. Introducing a new multi-line comment delimiter, such as /* */ could
destroy existing code.

2. S didn't implement this feature (as far as I am aware), and R is heavily
influenced by the design of the S language. Also, perhaps the community
doesn't want this feature, and R is a community driven project.

3. Perhaps this would be difficult to implement depending on the way that R
parses source files. Is it even possible to make /* */ or a different
delimiter do something like ``if(FALSE) { }``?

Nathan

	[[alternative HTML version deleted]]


From simon.urbanek at r-project.org  Wed Aug 19 15:19:50 2015
From: simon.urbanek at r-project.org (Simon Urbanek)
Date: Wed, 19 Aug 2015 09:19:50 -0400
Subject: [Rd] Multi-line comments in R
In-Reply-To: <CAFr0acRH44XM+myeoucWriP6sRV13oK60e1F0faHjLxKeDd--Q@mail.gmail.com>
References: <CAFr0acRH44XM+myeoucWriP6sRV13oK60e1F0faHjLxKeDd--Q@mail.gmail.com>
Message-ID: <0FE100A2-22ED-4C21-9E23-05C1F4DA70D6@r-project.org>

https://stat.ethz.ch/pipermail/r-help//2009-February/381039.html


> On Aug 19, 2015, at 12:16 AM, Nathan Esau <nesau at sfu.ca> wrote:
> 
> I was wondering why the decision was made long ago to never implement
> multi-line comments in R. I feel there are several argument to be made for
> why the R language should have multi-line comments.
> 
> 1. Many programming languages (including some which are commonly used for
> statistics, such as python, matlab and SAS) have this feature.
> 
> 2. Convenience - some editors may not support commenting out a selected
> region of code. This would provide a quick way of commenting and
> uncommenting code which could be useful when debugging. Also, if you have
> to type a lot of explanatory comments at the top of a code file, it can be
> frustrating to have to type "#" at the start of every line in some editors.
> 
> I can also think of a few reasons why R doesn't have multi-line comments or
> hasn't implemented them so far:
> 
> 1. Introducing a new multi-line comment delimiter, such as /* */ could
> destroy existing code.
> 
> 2. S didn't implement this feature (as far as I am aware), and R is heavily
> influenced by the design of the S language. Also, perhaps the community
> doesn't want this feature, and R is a community driven project.
> 
> 3. Perhaps this would be difficult to implement depending on the way that R
> parses source files. Is it even possible to make /* */ or a different
> delimiter do something like ``if(FALSE) { }``?
> 
> Nathan
> 
> 	[[alternative HTML version deleted]]
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>


From b.rowlingson at lancaster.ac.uk  Thu Aug 20 17:23:26 2015
From: b.rowlingson at lancaster.ac.uk (Barry Rowlingson)
Date: Thu, 20 Aug 2015 16:23:26 +0100
Subject: [Rd] Multi-line comments in R
In-Reply-To: <07b26e74c0cd4f118d00e8a540a59d1b@EX-0-HT0.lancs.local>
References: <07b26e74c0cd4f118d00e8a540a59d1b@EX-0-HT0.lancs.local>
Message-ID: <CANVKczPuy_5+W-6zQ3C67mWQHqufcbD1S-wQfhFT_=O+GBL7wg@mail.gmail.com>

On Wed, Aug 19, 2015 at 5:16 AM, Nathan Esau <nesau at sfu.ca> wrote:
> I was wondering why the decision was made long ago to never implement
> multi-line comments in R. I feel there are several argument to be made for
> why the R language should have multi-line comments.
>
> 1. Many programming languages (including some which are commonly used for
> statistics, such as python, matlab and SAS) have this feature.

 Python doesn't have a multi-line comment.

 You can use triple-quoted strings in Python to quote a large chunk of
text, which won't generate any bytecode and so has no executable
effect:

def foo(x)
 y = x * 2
 """
 well what now
 lets have a comment
 """
 return(y)

A similar thing is possible in R:

 foo = function(x){
    "this is a test.
where
you can comment"
    return(x*2)
}

However I don't know if this causes any executable effect - its
possible R evaluates the string in some way.... Anyone want to test.

Yes, you have to escape any string quote marks in your comment, but in
python you have to escape any triple-quote marks.

Barry


From gmbecker at ucdavis.edu  Thu Aug 20 17:51:25 2015
From: gmbecker at ucdavis.edu (Gabriel Becker)
Date: Thu, 20 Aug 2015 08:51:25 -0700
Subject: [Rd] Multi-line comments in R
In-Reply-To: <CANVKczPuy_5+W-6zQ3C67mWQHqufcbD1S-wQfhFT_=O+GBL7wg@mail.gmail.com>
References: <07b26e74c0cd4f118d00e8a540a59d1b@EX-0-HT0.lancs.local>
	<CANVKczPuy_5+W-6zQ3C67mWQHqufcbD1S-wQfhFT_=O+GBL7wg@mail.gmail.com>
Message-ID: <CADwqtCM3bBdRzsGpVCJeFfQ_XacjxwuxKxKb_owV-eoTThbhtg@mail.gmail.com>

On Thu, Aug 20, 2015 at 8:23 AM, Barry Rowlingson <
b.rowlingson at lancaster.ac.uk> wrote:

> On Wed, Aug 19, 2015 at 5:16 AM, Nathan Esau <nesau at sfu.ca> wrote:
> > I was wondering why the decision was made long ago to never implement
> > multi-line comments in R. I feel there are several argument to be made
> for
> > why the R language should have multi-line comments.
> >
> > 1. Many programming languages (including some which are commonly used for
> > statistics, such as python, matlab and SAS) have this feature.
>
>  Python doesn't have a multi-line comment.
>
>  You can use triple-quoted strings in Python to quote a large chunk of
> text, which won't generate any bytecode and so has no executable
> effect:
>
> def foo(x)
>  y = x * 2
>  """
>  well what now
>  lets have a comment
>  """
>  return(y)
>
> A similar thing is possible in R:
>
>  foo = function(x){
>     "this is a test.
> where
> you can comment"
>     return(x*2)
> }
>
> However I don't know if this causes any executable effect - its
> possible R evaluates the string in some way.... Anyone want to test.
>
>
Well, my guess is that the string, when created, would be interned in the
global string cache. That's unlikely to have any real bearing on anything R
is doing, but it is technically an effect.

Also, in the script case/top-level-expression it would affect .Last.value,
I think, though not in the particular case you posted.

~G


> Yes, you have to escape any string quote marks in your comment, but in
> python you have to escape any triple-quote marks.
>
> Barry
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>



-- 
Gabriel Becker, PhD
Computational Biologist
Bioinformatics and Computational Biology
Genentech, Inc.

	[[alternative HTML version deleted]]


From metzger.rc at gmail.com  Thu Aug 20 19:21:24 2015
From: metzger.rc at gmail.com (Ryan C Metzger)
Date: Thu, 20 Aug 2015 13:21:24 -0400
Subject: [Rd] Child thread libR.so
Message-ID: <CACcNOGq+kvZ46uSm3+2=U6YD6eB18_hjgfWPp_JivMyq5p1i3w@mail.gmail.com>

So I'm working on a custom front end to R, in one mode of the front
end I dynamically load libR.so into a child worker thread. I'm very
careful to make sure it is loaded by a single thread and loaded only
once, but since it is a child thread it violates assumptions made by
the stack size checking inside of R and I get innumerable errors along
the lines of

Error: C stack usage  140732526462740 is too close to the limit

Digging through this email list (and I also found similar things out
on google) I found the following advice from 2009

---------------------------------------- SNIP
------------------------------------------------------------------------------
> Hi everyone!
>   I meet one problem when embedding R in C code, when I run the the
> R code in one child thread ,
>   it always print error info:
>    Error: C stack usage is too close to the limit
>
>   I also try to set R_CStackLimit = (uintptr_t)-1 to disable the C
> stack check as the R-exts doc say,
>   but it still does not work, the error info still exist.
>

That is the way to do it (and other project use it successfully) - the
fact that it doesn't work means that you probably do it at the wrong
place (you must set it *after* Rf_initialize_R).

Cheers,
Simon
---------------------------------------- SNIP
------------------------------------------------------------------------------

my code is as follows

---------------------------------------- SNIP
------------------------------------------------------------------------------
void init_r() {
    SEXP aperm_function;

    const char *init_argv[] = {"MyFront", "--vanilla", "--slave"};
    Rf_initEmbeddedR(sizeof (init_argv) / sizeof (init_argv[0]),
(char**) init_argv);

    R_CStackLimit = (uintptr_t)-1;

    /*
     * transposeVector above uses the R builtin function aperm instead of
     * looking it up every time we need deal with transposing a multidimensional
     * intput/output look it up once here and save it off
     */
    aperm_function = findFun(install("aperm"), R_GlobalEnv);
    if (aperm_function == NULL || aperm_function == R_NilValue ||
aperm_function == R_UnboundValue) {
        aperm_function = NULL;
    } else {
        aperm_expression = PROTECT(allocVector(LANGSXP, 2));

        SETCAR(aperm_expression, aperm_function);
    }
}
---------------------------------------- SNIP
------------------------------------------------------------------------------

but as I say I still get the error and it seems like the call to
Rf_initEmbeddedR just never returns. As an experiment I edited
config.h.in and removed the define for HAVE_GETRLIMIT and recompiled,
thus compiling out the stack checking mechanism entirely. Then
everything worked great!, so I know it's the stack checking mechanism
from a child thread that is falling to pieces. So what I have in mind
is looking to fix this mechanism so that it works from a child thread
if the pthread library is available and submitting a patch. My
question is two fold, 1. Is there a way to get this to work without a
code change ( I'd like to be able to offer my front end stand alone
and not have to bundle R with it ) 2. If I do come up with a diff, how
do I go about submitting it back to the r foundation?


for completeness the version of R I am using

> version
               _
platform       x86_64-unknown-linux-gnu
arch           x86_64
os             linux-gnu
system         x86_64, linux-gnu
status
major          3
minor          2.1
year           2015
month          06
day            18
svn rev        68531
language       R
version.string R version 3.2.1 (2015-06-18)
nickname       World-Famous Astronaut

compiled from source with configure options
head R-3.2.1/config.log
This file contains any messages produced by compilers while
running configure, to aid debugging if configure makes a mistake.

It was created by R configure 3.2.1, which was
generated by GNU Autoconf 2.69.  Invocation command line was

  $ ./configure --prefix /u/rmetzger/linux_R_vanilla --enable-R-shlib

## --------- ##
## Platform. ##

thank you!
Ryan


From otoomet at gmail.com  Fri Aug 21 02:08:56 2015
From: otoomet at gmail.com (Ott Toomet)
Date: Thu, 20 Aug 2015 17:08:56 -0700
Subject: [Rd] sequence divided by data.frame
Message-ID: <CAMMJQ0ZfrKKJezFr0fUaHYW8u4b3GKOA=KXxBQ+-eJCMb2LQNw@mail.gmail.com>

Can anyone explain me the following behavior:

> 1:2/1
[1] 1 2

-- makes sense

> 1:2/matrix(1,1,1)
[1] 1 2

-- makes sense

> 1:2/data.frame(a=1)
  a
1 1

-- why is this different?

Best,
Ott

-- 
Ott Toomet

Visiting Researcher
School of Information
Mary Gates Hall, Suite 095
University of Washington
Seattle, WA 98195

	[[alternative HTML version deleted]]


From lawrence.michael at gene.com  Fri Aug 21 08:02:18 2015
From: lawrence.michael at gene.com (Michael Lawrence)
Date: Thu, 20 Aug 2015 23:02:18 -0700
Subject: [Rd] sequence divided by data.frame
In-Reply-To: <CAMMJQ0ZfrKKJezFr0fUaHYW8u4b3GKOA=KXxBQ+-eJCMb2LQNw@mail.gmail.com>
References: <CAMMJQ0ZfrKKJezFr0fUaHYW8u4b3GKOA=KXxBQ+-eJCMb2LQNw@mail.gmail.com>
Message-ID: <CAOQ5NycfyOGFaa6WWOk1dZ+yYy0ovvzRbGGGHTUT99MDsG=caA@mail.gmail.com>

The first two behave as expected for vectors, because they are both
(at least implicitly) vectors in that usage. But a data.frame is a
tabular structure, so it's not obvious how to recycle it, nor does an
implicit coercion to matrix/vector seem justified. Thus, R attempts to
"recycle" the vector to fit the data.frame, even to the extent that
the vector is truncated (a warning could be justified here). You
should probably just be coercing to matrix in these situations. A
heterogeneous table is not really meant for arithmetic.

Michael

On Thu, Aug 20, 2015 at 5:08 PM, Ott Toomet <otoomet at gmail.com> wrote:
> Can anyone explain me the following behavior:
>
>> 1:2/1
> [1] 1 2
>
> -- makes sense
>
>> 1:2/matrix(1,1,1)
> [1] 1 2
>
> -- makes sense
>
>> 1:2/data.frame(a=1)
>   a
> 1 1
>
> -- why is this different?
>
> Best,
> Ott
>
> --
> Ott Toomet
>
> Visiting Researcher
> School of Information
> Mary Gates Hall, Suite 095
> University of Washington
> Seattle, WA 98195
>
>         [[alternative HTML version deleted]]
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From dutangc at gmail.com  Fri Aug 21 13:52:37 2015
From: dutangc at gmail.com (Christophe Dutang)
Date: Fri, 21 Aug 2015 13:52:37 +0200
Subject: [Rd] names in optim()
Message-ID: <75B4B708-DD14-47B9-AD61-38F498AFA959@gmail.com>

Dear both,

I have just found that names are treated in the same way in optim() depending on the optimization method. The example below shows the difference between the Brent method and the L-BFGS-B method.

f <- function(x){ y <- x^2;names(y) <-"f(x)";y}
optim(10, f, method="Brent", lower=-1, upper=10)$value
optim(10, f, method="L-BFGS-B", lower=-1, upper=10)$value

z <- 10
names(z) <- "x"
z
optim(z, f, method="Brent", lower=-1, upper=10)$par
optim(z, f, method="L-BFGS-B", lower=-1, upper=10)$par


Do you obtain the same behavior? 

I?m using R version 3.2.1 (2015-06-18)
Platform: x86_64-apple-darwin13.4.0 (64-bit)
Running under: OS X 10.9.5 (Mavericks)

locale:
[1] fr_FR.UTF-8/fr_FR.UTF-8/fr_FR.UTF-8/C/fr_FR.UTF-8/fr_FR.UTF-8

attached base packages:
[1] stats     graphics  grDevices utils     datasets  methods   base     

loaded via a namespace (and not attached):
[1] tools_3.2.1 

Kind regards, CD
---------------------------------------
Christophe Dutang
LMM, UdM, Le Mans, France
web: http://dutangc.free.fr


From radford at cs.toronto.edu  Fri Aug 21 20:38:26 2015
From: radford at cs.toronto.edu (Radford Neal)
Date: Fri, 21 Aug 2015 14:38:26 -0400
Subject: [Rd] OpenMP problem with 64-bit Rtools
Message-ID: <20150821183826.GA22983@cs.toronto.edu>

I've been getting pqR to work on windows systems, and in the process
have discovered various problems with R core versions of R and with
Rtools.

One is with the implementation of OpenMP in 64-bit Rtools.  This
problem is in Rtools215 and Rtools33, and presumably all the ones in
between.  You can see the problem with the following test program:

#include <stdio.h>
#include <omp.h>
static struct { omp_lock_t lock; char pad[20]; } s;

void show_pad(void)
{ int i;
  for (i = 0; i<20; i++) printf(" %02x",s.pad[i]);
  printf("\n");
}

int main(void)
{ int i;
  printf("size: %d\n",(int)sizeof s);
  for (i = 0; i<20; i++) s.pad[i] = 7;
  show_pad();
  omp_init_lock (&s.lock);
  show_pad();
  omp_set_lock (&s.lock);
  show_pad();
  return 0;
}

When compiled using the Rtools compiler with "gcc -m32 -fopenmp", it
works fine, printing three lines of output with all numbers being 7.
But when compiled with "gcc -m64 -fopenmp", the last two lines have
four zeros at the beginning.

What's happended is that omp_init_lock has written zeros to four bytes
after the end of the omp_lock_t structure.

The reason for this appears to be that the omp.h file included is
appropriate only for the 32-bit version of the openMP library.  As
far as I can see, there is no 64-bit version of this include file
in the stuff installed with Rtools.

This problem obviously has the potential to affect many packages that
use OpenMP, though simple OpenMP applications may not do anything for
which the incorrect omp.h include file makes a difference.

   Radford Neal


From radford at cs.toronto.edu  Fri Aug 21 21:19:24 2015
From: radford at cs.toronto.edu (Radford Neal)
Date: Fri, 21 Aug 2015 15:19:24 -0400
Subject: [Rd] Problem with psignal.c for Windows builds
Message-ID: <20150821191924.GA12014@cs.toronto.edu>

Continuing with problems that I've uncovered while getting pqR to work
on Windows...

The file src/ghuwin32/psignal.c (used only in Windows builds) fails to
use the sigset_t type in all places where it should, using "int" some
places instead.

Here is a diff of the needed corrections:


@@ -253,7 +253,7 @@ sighandler_t signal(int signal_Number, sighandler_t signal_Handler)
 int sigaddset(sigset_t* sigset_Info,int signal_Number)
 {
     if (IS_SIGNAL(signal_Number)) {
-       (*sigset_Info) |= (1 << (signal_Number - 1));
+       (*sigset_Info) |= ((sigset_t)1 << (signal_Number - 1));
        return 0;
     }
     else {
@@ -267,7 +267,7 @@ int sigaddset(sigset_t* sigset_Info,int signal_Number)
 int sigdelset(sigset_t* sigset_Info,int signal_Number)
 {
     if (IS_SIGNAL(signal_Number)) {
-       *sigset_Info &= ~(1<< (signal_Number - 1));
+       *sigset_Info &= ~((sigset_t)1<< (signal_Number-1));
        return 0;
     }
     else {
@@ -295,7 +295,7 @@ int sigfillset(sigset_t* sigset_Info)
 int sigismember(sigset_t* sigset_Info,int signal_Number)
 {
     if (IS_SIGNAL(signal_Number)) {
-       if ( *sigset_Info & (1 << (signal_Number-1)))
+       if ( *sigset_Info & ((sigset_t)1 << (signal_Number-1)))
            return 1;
        else
            return 0;
@@ -380,9 +380,9 @@ int sigprocmask(int mask_Function,sigset_t* sigset_Info,
 }
 
 /* Set signal mask ========================================================= */
-int sigsetmask(int signal_MaskNew)
+sigset_t sigsetmask(sigset_t signal_MaskNew)
 {
-    int signal_MaskOld = downhill_Sigset_Mask;
+    sigset_t signal_MaskOld = downhill_Sigset_Mask;
 
     if (sigprocmask(SIG_SETMASK, &signal_MaskNew, NULL) == -1)
        return (int)-1;
@@ -391,7 +391,7 @@ int sigsetmask(int signal_MaskNew)
 }
 
 /* Add signals to mask ===================================================== */
-int sigblock(int signal_MaskNew)
+sigset_t sigblock(sigset_t signal_MaskNew)
 {
     /* Block a specific group of signals */
     return sigsetmask(downhill_Sigset_Mask|signal_MaskNew);


Now, you may wonder how it's been working with these errors.  The
file src/gnuwin32/fixed/h/psignal.h has the following code:


/* mingw-w64's sys/types.h also defines this and we want this defn */ 
#ifndef _SIGSET_T_
#define _SIGSET_T_
typedef int sigset_t;
#endif  /* Not _SIGSET_T_ */


The comment is unclear as to whether the mingw definition is or is not
the one that is desired (what does "this" refer to?).  Anyway, the
mingw sys/types.h file contains the following code:


#ifndef _SIGSET_T_
#define _SIGSET_T_
#ifdef _WIN64
__MINGW_EXTENSION
typedef unsigned long long _sigset_t;
#else
typedef unsigned long   _sigset_t;
#endif

#ifdef _POSIX
typedef _sigset_t   	sigset_t;
#endif
#endif  /* Not _SIGSET_T_ */


So if the R psignal.h file is included before sys/types, sigset_t will
be defined as "int", not as "unsigned long" or "unsigned long long".

And in fact it seems that R (though not pqR) always includes psignal.h
before sys/types.h (if the latter is included as well).  There's even
this code snippet in src/unix/Rscript.c:


#ifdef WIN32
#include <psignal.h>
/* on some systems needs to be included before <sys/types.h> */
#endif


And indeed, with Rtools, you do have to include psignal.h first, since
the mingw sys/types.h defines _SIGSET_T_, preventing psignal.h from
defining sigset_t but does not define sigset_t itself (rather only
_sigset_t), since _POSIX isn't defined.

So current R Core releases (accidentally?) avoid the problem by not
actually using mingw's sigset_t type, but instead always using int.
But it's possible that there is some reason to want to use the type
defined in sys/types.h.

   Radford Neal


From radford at cs.toronto.edu  Fri Aug 21 21:35:55 2015
From: radford at cs.toronto.edu (Radford Neal)
Date: Fri, 21 Aug 2015 15:35:55 -0400
Subject: [Rd] Getting SSE2 instructions to work in 32-bit builds on Windows
Message-ID: <20150821193555.GA21007@cs.toronto.edu>

When getting pqR to work on Windows, I've wanted for it to be able to
use SSE2 instructions with 32-bit builds, for those 32-bit processors
that have SS2 instructions (all of them from the Pentium 4 onwards).

It seems that R Core 32-bit versions do not attempt this, instead
using the 387 FPU for all floating-point arithmetic.  This is
sometimes slower than using SSE2 instructions, and also produces
results that are not compliant with the IEEE floating point standard,
and that are not reproducible - possibly changing after trivial,
unrelated changes to R or to the C compiler used.

Once can get the gcc used in Rtools to use SSE2 instructions by
including the following compiler options:

  -m32 -msse2 -mfpmath=sse

Unfortunately, the result is that some things then crash.  

The problem is that by default gcc assumes that the stack is aligned
to a 16-byte boundary on entry to a procedure, which allows it to
easily ensure the 16-byte alignment needed for SSE2 instructions.
Unfortunately, Windows does not ensure that a 32-bit application's
stack is 16-byte aligned, so this doesn't work.  (There's no problem
for 64-bit builds, however.)

A solution is to add one more option:

  -m32 -msse2 -mfpmath=sse -mstackrealign

The -mstackrealign option forces gcc to generate code to align the
stack on procedure entry, rather than assuming it is already aligned.

It would probably be enough to compile only a few modules with this
option (ones that are directly called from outside R), and hence avoid
most of the extra procedure call overhead, but I haven't attempted this.

   Radford Neal


From radford at cs.toronto.edu  Fri Aug 21 22:21:26 2015
From: radford at cs.toronto.edu (Radford Neal)
Date: Fri, 21 Aug 2015 16:21:26 -0400
Subject: [Rd] Problems with embedded R, ReplDLL
Message-ID: <20150821202126.GA13024@cs.toronto.edu>

Along with getting pqR to work on Windows, I've also been testing it
in the context of embedded R, and in the process have found some
problems with the examples given of embedded R use.

One problem can be seen in R_ReplDLLinit, in src/main/main.c:


void R_ReplDLLinit(void)
{
    SETJMP(R_Toplevel.cjmpbuf);
    R_GlobalContext = R_ToplevelContext = R_SessionContext = &R_Toplevel;
    R_IoBufferWriteReset(&R_ConsoleIob);
    prompt_type = 1;
    DLLbuf[0] = DLLbuf[CONSOLE_BUFFER_SIZE] = '\0';
    DLLbufp = DLLbuf;
}


The call of SETJMP makes no sense.  Nothing that follows in this
function can possibly cause a long jump.  The use of R_ReplDLLinit is
illustrated in the R Extensions manual (doc/manual/R-exts.texi):


        R_ReplDLLinit();
        while(R_ReplDLLdo1() > 0) {
        /* add user actions here if desired */
        }


Note that the R_ReplDLLdo1 function does not call SETJMP.


Amazingly, however, the combination sometimes seems to work!  When a
long jump is taken during evaluation of an expression initiated by
R_ReplDLLdo1, the stack is restored to the value suitable for the
now-non-existent stack frame for R_ReplDLLinit, and execution of the
statements in R_ReplDLLinit then continues after the SETJMP.  Likely,
none of these statements actually refers to the non-existent stack
frame (seeing as this function has no parameters and no local
variables), so nothing disastrous occurs, and in the end the procedure
return code at the end of R_ReplDLLinit has the effect of doing a
return from R_ReplDLLdo1, which is more-or-less the desired result.


Obviously, one does not want a program to "work" for such reasons,
which may cease to apply with any change to how the C compiler
generates code.  The current development version of pqR has a
different version of R_ReplDLLdo1, which calls SETJMP itself, but this
version is tied to other rationalizations of the Repl functions in the
development version of pqR.  The embedded R examples and tests have
various other problems that are fixed in the current development
branch of pqR (branch 44 at the moment).  R Core might want to take a
look there, or at the next version of pqR, which will be released
soon.

   Radford Neal


From wdunlap at tibco.com  Fri Aug 21 22:43:39 2015
From: wdunlap at tibco.com (William Dunlap)
Date: Fri, 21 Aug 2015 13:43:39 -0700
Subject: [Rd] unset() function?
Message-ID: <CAF8bMcZEegtke2bCOb96+xZGTaCSOamEMba-cU-i03Dj7jCnxA@mail.gmail.com>

Does R have a function like the S/S++ unset() function?
unset(name) would remove 'name' from the current evaluation
frame and return its value.  It allowed you to safely avoid
some memory copying when calling .C or .Call.

E.g., suppose you had C code like
  #include <R.h>
  #include <Rinternals.h>
  SEXP add1(SEXP pX)
  {
      int nProtected = 0;
      int n = Rf_length(pX);
      int i;
      double* x;
      Rprintf("NAMED(pX)=%d: ", NAMED(pX));
      if (NAMED(pX)) {
          Rprintf("Copying pX before adding 1\n");
          PROTECT(pX = duplicate(pX)); nProtected++;
      } else {
          Rprintf("Changing pX in place\n");
      }
      x = REAL(pX);
      for(i=0 ; i<n ; i++) {
        x[i] = x[i] + 1.0;
      }
      UNPROTECT(nProtected);
      return pX;
  }

If I call this from an R function
  add1 <- function(x) {
      stopifnot(inherits(x, "numeric"))
     .Call("add1", x)
  }
it will will always copy 'x', even though not copying would
be safe (since add1 doesn't use 'x' after calling .Call()).
  > add1(c(1.2, 3.4))
  NAMED(pX)=2: Copying pX before adding 1
  [1] 2.2 4.4
If I make the .Call directly, without a nice R function around it
then I can avoid the copy
  > .Call("add1", c(1.2, 3.4))
  NAMED(pX)=0: Changing pX in place
  [1] 2.2 4.4

If something like S's unset() were available I could avoid the copy,
when safe to do so, by making the .Call in add1
   .Call("add1", unset(x))

If you called this new add1 with a named variable from another
function the copying would be done, since NAMED(x) would be
2 even after the local binding was removed.  It actually requires some
care to to eliminate the copying, as all the functions in the call
chain would have to use unset() when possible.

I ask this because I ran across a function in the 'bit' package that
does not have its C code call duplicate but instead assumes the
x[1] <- x[1] will force x to be copied:
  "!.bit" <- function(x){
    if (length(x)){
      ret <- x
      ret[1] <- ret[1]  # force duplication
      .Call("R_bit_not", ret, PACKAGE="bit")
    }else{
      x
    }
  }
If you optimize things so that 'ret[1] <- ret[1]' does not copy 'ret',
then this function alters its input.  It a function like unset()
were there then the .Call could be
     .Call("R_bit_not", unset(x))

I suppose the compiler could analyze the code and see that
x was not used after the .Call and thus feel free to avoid the
copy.

In any case bit's maintainer should add something like
    if(NAMED(x) {
        PROTECT(x=duplicate(x));
        nProtect++;
    }
    ...
    UNPROTECT(nProtect);
in the C code, but unset() would help avoid unneeded duplications.


Bill Dunlap
TIBCO Software
wdunlap tibco.com

	[[alternative HTML version deleted]]


From wdunlap at tibco.com  Fri Aug 21 23:12:50 2015
From: wdunlap at tibco.com (William Dunlap)
Date: Fri, 21 Aug 2015 14:12:50 -0700
Subject: [Rd] unset() function?
In-Reply-To: <CAF8bMcZEegtke2bCOb96+xZGTaCSOamEMba-cU-i03Dj7jCnxA@mail.gmail.com>
References: <CAF8bMcZEegtke2bCOb96+xZGTaCSOamEMba-cU-i03Dj7jCnxA@mail.gmail.com>
Message-ID: <CAF8bMcZGThqj3pzrOBNTwvPfjuGifEW2C6p3X5duQx24OwKtBA@mail.gmail.com>

> Does R have a function like the S/S++ unset() function?

That should be 'S+' or 'S-Plus', not the typo 'S++'.

Bill Dunlap
TIBCO Software
wdunlap tibco.com

On Fri, Aug 21, 2015 at 1:43 PM, William Dunlap <wdunlap at tibco.com> wrote:

> Does R have a function like the S/S++ unset() function?
> unset(name) would remove 'name' from the current evaluation
> frame and return its value.  It allowed you to safely avoid
> some memory copying when calling .C or .Call.
>
> E.g., suppose you had C code like
>   #include <R.h>
>   #include <Rinternals.h>
>   SEXP add1(SEXP pX)
>   {
>       int nProtected = 0;
>       int n = Rf_length(pX);
>       int i;
>       double* x;
>       Rprintf("NAMED(pX)=%d: ", NAMED(pX));
>       if (NAMED(pX)) {
>           Rprintf("Copying pX before adding 1\n");
>           PROTECT(pX = duplicate(pX)); nProtected++;
>       } else {
>           Rprintf("Changing pX in place\n");
>       }
>       x = REAL(pX);
>       for(i=0 ; i<n ; i++) {
>         x[i] = x[i] + 1.0;
>       }
>       UNPROTECT(nProtected);
>       return pX;
>   }
>
> If I call this from an R function
>   add1 <- function(x) {
>       stopifnot(inherits(x, "numeric"))
>      .Call("add1", x)
>   }
> it will will always copy 'x', even though not copying would
> be safe (since add1 doesn't use 'x' after calling .Call()).
>   > add1(c(1.2, 3.4))
>   NAMED(pX)=2: Copying pX before adding 1
>   [1] 2.2 4.4
> If I make the .Call directly, without a nice R function around it
> then I can avoid the copy
>   > .Call("add1", c(1.2, 3.4))
>   NAMED(pX)=0: Changing pX in place
>   [1] 2.2 4.4
>
> If something like S's unset() were available I could avoid the copy,
> when safe to do so, by making the .Call in add1
>    .Call("add1", unset(x))
>
> If you called this new add1 with a named variable from another
> function the copying would be done, since NAMED(x) would be
> 2 even after the local binding was removed.  It actually requires some
> care to to eliminate the copying, as all the functions in the call
> chain would have to use unset() when possible.
>
> I ask this because I ran across a function in the 'bit' package that
> does not have its C code call duplicate but instead assumes the
> x[1] <- x[1] will force x to be copied:
>   "!.bit" <- function(x){
>     if (length(x)){
>       ret <- x
>       ret[1] <- ret[1]  # force duplication
>       .Call("R_bit_not", ret, PACKAGE="bit")
>     }else{
>       x
>     }
>   }
> If you optimize things so that 'ret[1] <- ret[1]' does not copy 'ret',
> then this function alters its input.  It a function like unset()
> were there then the .Call could be
>      .Call("R_bit_not", unset(x))
>
> I suppose the compiler could analyze the code and see that
> x was not used after the .Call and thus feel free to avoid the
> copy.
>
> In any case bit's maintainer should add something like
>     if(NAMED(x) {
>         PROTECT(x=duplicate(x));
>         nProtect++;
>     }
>     ...
>     UNPROTECT(nProtect);
> in the C code, but unset() would help avoid unneeded duplications.
>
>
> Bill Dunlap
> TIBCO Software
> wdunlap tibco.com
>

	[[alternative HTML version deleted]]


From haverty.peter at gene.com  Sat Aug 22 00:07:22 2015
From: haverty.peter at gene.com (Peter Haverty)
Date: Fri, 21 Aug 2015 15:07:22 -0700
Subject: [Rd] RFC: deprecating some complexity in key methods package
	functions
Message-ID: <CAGh0NYoiXYCgUWrfNgEPiVdOCgnf3fr-jDdFXwuS8_Xw_wxHbw@mail.gmail.com>

Dear R community,

I have been working on speeding up a few parts of the methods package and
related environment/namespace functionality. I would like to get some
community input on a few proposed changes that are rather small, but do
involve deprecations. These changes would simplify and speed-up some
functions that are called with extreme frequency.

?I have made a few suggestions in the following R bug tracker submissions:?
https://bugs.r-project.org/bugzilla3/attachment.cgi?id=1896
https://bugs.r-project.org/bugzilla3/attachment.cgi?id=1897

In summary, the function 'is' can be called with a single argument, which
gives the same result as calling 'extends' directly. The second argument to
'is' can be one of two types (a class name or a class definition), but it
seems that only one of those options is ever used in methods or in base.?
 I'd like to deprecate using a classDef as the second argument as we can
now go quite fast without doing so.

?.getGeneric has an unnecessary swap of as.double for as.numeric and also
what looks like it might be a bit of vestigial debug code ( a check for
package == "" and detailed stack trace). The subsequent C code also checks
for this situation, so I think we can omit the first check.?

?If anyone feels strongly about deprecating? these code paths, please let
me know. As a community, we are very careful about backwards compatibility
so I want to be sure no one needs these things.

?Regards,?

Pete

____________________
Peter M. Haverty, Ph.D.
Genentech, Inc.
phaverty at gene.com

	[[alternative HTML version deleted]]


From jeroen.ooms at stat.ucla.edu  Sat Aug 22 01:30:51 2015
From: jeroen.ooms at stat.ucla.edu (Jeroen Ooms)
Date: Sat, 22 Aug 2015 01:30:51 +0200
Subject: [Rd] OpenMP problem with 64-bit Rtools
In-Reply-To: <20150821183826.GA22983@cs.toronto.edu>
References: <20150821183826.GA22983@cs.toronto.edu>
Message-ID: <CABFfbXvebX99bMMkdGFC_D+9n+CD3Oa-=gN7j9JPKgsG5_K0eg@mail.gmail.com>

Hi Radford

On Fri, Aug 21, 2015 at 8:38 PM, Radford Neal <radford at cs.toronto.edu> wrote:
>
> I've been getting pqR to work on windows systems, and in the process
> have discovered various problems with R core versions of R and with
> Rtools.


We happen to be working on a new version of the windows tool chain,
perhaps you are interested to test if problems still exist in the
latest versions. Find a copy of gcc-4.9.2 as well as an installer with
the latest r-devel built with this compiler here:
http://www.stat.ucla.edu/~jeroen/mingw-w64/. Note that this R
installer contains a copy of the tool chain (hence requires no
seperate 'rtools' installation).

> The reason for this appears to be that the omp.h file included is
> appropriate only for the 32-bit version of the openMP library.  As
> far as I can see, there is no 64-bit version of this include file
> in the stuff installed with Rtools.


This particular behavior exists in all builds of mingw-w64, not rtools
per se. We might get a better answer in the mingw-w64-public mailing
list.


From radford at cs.toronto.edu  Sat Aug 22 02:38:34 2015
From: radford at cs.toronto.edu (Radford Neal)
Date: Fri, 21 Aug 2015 20:38:34 -0400
Subject: [Rd] OpenMP problem with 64-bit Rtools
In-Reply-To: <CABFfbXvebX99bMMkdGFC_D+9n+CD3Oa-=gN7j9JPKgsG5_K0eg@mail.gmail.com>
References: <20150821183826.GA22983@cs.toronto.edu>
	<CABFfbXvebX99bMMkdGFC_D+9n+CD3Oa-=gN7j9JPKgsG5_K0eg@mail.gmail.com>
Message-ID: <20150822003834.GA13775@cs.toronto.edu>


> On Fri, Aug 21, 2015 at 8:38 PM, Radford Neal <radford at cs.toronto.edu> wrote:
>
> > The reason for this appears to be that the omp.h file included is
> > appropriate only for the 32-bit version of the openMP library.  As
> > far as I can see, there is no 64-bit version of this include file
> > in the stuff installed with Rtools.

On Sat, Aug 22, 2015 at 01:30:51AM +0200, Jeroen Ooms wrote:

> This particular behavior exists in all builds of mingw-w64, not rtools
> per se. We might get a better answer in the mingw-w64-public mailing
> list.

A comment near the front of omp.h says "These two structures get
edited by the libgomp build process to reflect the shape of the two
types".  So presumably it is possible to generate the 64-bit version,
and presumably this must have been done in order to compile the 64-bit
version of the OpenMP library that is supplied with Rtools.

Maybe there's no provision in the build process for having two omp.h
files at once, though...

   Radford


From m4rbel at gmail.com  Sat Aug 22 05:21:29 2015
From: m4rbel at gmail.com (Martin Bel)
Date: Sat, 22 Aug 2015 00:21:29 -0300
Subject: [Rd] sprintf error: "only 100 arguments allowed"
Message-ID: <CALEtyTH5HKBsyVdrt7mCDCfAC5vBmOtShX8C7dVjGQs6LsKQ0Q@mail.gmail.com>

I'm trying to apply a function defined in the VW R docs, that attemps to
convert a data.table object to Vowpal Wabbit format. In the process i'm
getting the error in printf mentioned in the subject.
The original function is here:
https://github.com/JohnLangford/vowpal_wabbit/blob/master/R/dt2vw.R


Below there is a small example that reproduces the error. The function
works great with smaller (less than 100 columns), as shown.

Any suggestions of alternative methods to acomplish the same would be
great, but I'm basically asking, is there a reason for the 100 arguments
limitation?


# Source this function#
https://github.com/JohnLangford/vowpal_wabbit/blob/master/R/dt2vw.R
# Here is a gist
source('https://gist.githubusercontent.com/martinbel/a013c2bd2333b85eeb76/raw/7b68ede0385f3d8684a07854e8d6ca527b9cd441/dt2vw.R')

library(data.table)

X = cbind(matrix(rnorm(1:1010), nrow=10, ncol=101), sample(c(1, -1), 10, T))
X = as.data.table(X)
X[, weight:=ifelse(V102 == 1, 3, 1)]
# check out function arguments
head(dt2vw, 2)# function (data, fileName, namespaces = NULL, target,
weight = NULL, #                 tag = NULL, hard_parse = F)

namespaces = list(a = list(varName = sprintf('V%s',1:50), keepSpace=F),
                  b = list(varName = sprintf('V%s',51:101), keepSpace=F))

dt2vw(data=X, fileName='../out.vw', namespaces = NULL,
      target='V102', weight = 'weight',
      tag = NULL, hard_parse = F)
### error
# [1] "sprintf('%f %f |A V1:%f V2:%f V3:%f V4:%f V5:%f V6:%f V7:%f
V8:%f V9:%f V10:%f V11:%f V12:%f V13:%f V14:%f V15:%f V16:%f V17:%f
V18:%f V19:%f V20:%f V21:%f V22:%f V23:%f V24:%f V25:%f V26:%f V27:%f
V28:%f V29:%f V30:%f V31:%f V32:%f V33:%f V34:%f V35:%f V36:%f V37:%f
V38:%f V39:%f V40:%f V41:%f V42:%f V43:%f V44:%f V45:%f V46:%f V47:%f
V48:%f V49:%f V50:%f V51:%f V52:%f V53:%f V54:%f V55:%f V56:%f V57:%f
V58:%f V59:%f V60:%f V61:%f V62:%f V63:%f V64:%f V65:%f V66:%f V67:%f
V68:%f V69:%f V70:%f V71:%f V72:%f V73:%f V74:%f V75:%f V76:%f V77:%f
V78:%f V79:%f V80:%f V81:%f V82:%f V83:%f V84:%f V85:%f V86:%f V87:%f
V88:%f V89:%f V90:%f V91:%f V92:%f V93:%f V94:%f V95:%f V96:%f V97:%f
V98:%f V99:%f V100:%f V101:%f ',V102, weight, V1, V2, V3, V4, V5, V6,
V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20,
V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31, V32, V33, V34,
V35, V36, V37, V38, V39, V40, V41, V42, V43, V44, V45, V46, V47, V48,
V49, V50, V51, V52, V53, V54, V55, V56, V57, V58, V59, V60, V61, V62,
V63, V64, V65, V66, V67, V68, V69, V70, V71, V72, V73, V74, V75, V76,
V77, V78, V79, V80, V81, V82, V83, V84, V85, V86, V87, V88, V89, V90,
V91, V92, V93, V94, V95, V96, V97, V98, V99, V100, V101)"
# Error in sprintf("%f %f |A V1:%f V2:%f V3:%f V4:%f V5:%f V6:%f V7:%f
V8:%f V9:%f V10:%f V11:%f V12:%f V13:%f V14:%f V15:%f V16:%f V17:%f
V18:%f V19:%f V20:%f V21:%f V22:%f V23:%f V24:%f V25:%f V26:%f V27:%f
V28:%f V29:%f V30:%f V31:%f V32:%f V33:%f V34:%f V35:%f V36:%f V37:%f
V38:%f V39:%f V40:%f V41:%f V42:%f V43:%f V44:%f V45:%f V46:%f V47:%f
V48:%f V49:%f V50:%f V51:%f V52:%f V53:%f V54:%f V55:%f V56:%f V57:%f
V58:%f V59:%f V60:%f V61:%f V62:%f V63:%f V64:%f V65:%f V66:%f V67:%f
V68:%f V69:%f V70:%f V71:%f V72:%f V73:%f V74:%f V75:%f V76:%f V77:%f
V78:%f V79:%f V80:%f V81:%f V82:%f V83:%f V84:%f V85:%f V86:%f V87:%f
V88:%f V89:%f V90:%f V91:%f V92:%f V93:%f V94:%f V95:%f V96:%f V97:%f
V98:%f V99:%f V100:%f V101:%f ",  : # only 100 arguments are allowed
# works
dt2vw(data=X[, 50:dim(X)[2], with=FALSE],
      fileName='../out.vw', namespaces = NULL,
      target='V102', weight = 'weight',
      tag = NULL, hard_parse = F)

system('head -3 ../out.vw')

	[[alternative HTML version deleted]]


From luke-tierney at uiowa.edu  Sat Aug 22 16:50:47 2015
From: luke-tierney at uiowa.edu (luke-tierney at uiowa.edu)
Date: Sat, 22 Aug 2015 09:50:47 -0500
Subject: [Rd] unset() function?
In-Reply-To: <CAF8bMcZEegtke2bCOb96+xZGTaCSOamEMba-cU-i03Dj7jCnxA@mail.gmail.com>
References: <CAF8bMcZEegtke2bCOb96+xZGTaCSOamEMba-cU-i03Dj7jCnxA@mail.gmail.com>
Message-ID: <alpine.DEB.2.10.1508220947320.2389@luke-Latitude>

This wouldn't actually work at present as evaluating a promise always
sets NAMED to 2. With reference counting it would work so might be
worth considering when we switch.

Going forward it would be best to use MAYBE_REFERENCED to test whether
a duplicate is needed -- this macro is defined appropriately whether R
is compiled to use NAMED or reference counting.

Best,

luke

On Fri, 21 Aug 2015, William Dunlap wrote:

> Does R have a function like the S/S++ unset() function?
> unset(name) would remove 'name' from the current evaluation
> frame and return its value.  It allowed you to safely avoid
> some memory copying when calling .C or .Call.
>
> E.g., suppose you had C code like
>  #include <R.h>
>  #include <Rinternals.h>
>  SEXP add1(SEXP pX)
>  {
>      int nProtected = 0;
>      int n = Rf_length(pX);
>      int i;
>      double* x;
>      Rprintf("NAMED(pX)=%d: ", NAMED(pX));
>      if (NAMED(pX)) {
>          Rprintf("Copying pX before adding 1\n");
>          PROTECT(pX = duplicate(pX)); nProtected++;
>      } else {
>          Rprintf("Changing pX in place\n");
>      }
>      x = REAL(pX);
>      for(i=0 ; i<n ; i++) {
>        x[i] = x[i] + 1.0;
>      }
>      UNPROTECT(nProtected);
>      return pX;
>  }
>
> If I call this from an R function
>  add1 <- function(x) {
>      stopifnot(inherits(x, "numeric"))
>     .Call("add1", x)
>  }
> it will will always copy 'x', even though not copying would
> be safe (since add1 doesn't use 'x' after calling .Call()).
>  > add1(c(1.2, 3.4))
>  NAMED(pX)=2: Copying pX before adding 1
>  [1] 2.2 4.4
> If I make the .Call directly, without a nice R function around it
> then I can avoid the copy
>  > .Call("add1", c(1.2, 3.4))
>  NAMED(pX)=0: Changing pX in place
>  [1] 2.2 4.4
>
> If something like S's unset() were available I could avoid the copy,
> when safe to do so, by making the .Call in add1
>   .Call("add1", unset(x))
>
> If you called this new add1 with a named variable from another
> function the copying would be done, since NAMED(x) would be
> 2 even after the local binding was removed.  It actually requires some
> care to to eliminate the copying, as all the functions in the call
> chain would have to use unset() when possible.
>
> I ask this because I ran across a function in the 'bit' package that
> does not have its C code call duplicate but instead assumes the
> x[1] <- x[1] will force x to be copied:
>  "!.bit" <- function(x){
>    if (length(x)){
>      ret <- x
>      ret[1] <- ret[1]  # force duplication
>      .Call("R_bit_not", ret, PACKAGE="bit")
>    }else{
>      x
>    }
>  }
> If you optimize things so that 'ret[1] <- ret[1]' does not copy 'ret',
> then this function alters its input.  It a function like unset()
> were there then the .Call could be
>     .Call("R_bit_not", unset(x))
>
> I suppose the compiler could analyze the code and see that
> x was not used after the .Call and thus feel free to avoid the
> copy.
>
> In any case bit's maintainer should add something like
>    if(NAMED(x) {
>        PROTECT(x=duplicate(x));
>        nProtect++;
>    }
>    ...
>    UNPROTECT(nProtect);
> in the C code, but unset() would help avoid unneeded duplications.
>
>
> Bill Dunlap
> TIBCO Software
> wdunlap tibco.com
>
> 	[[alternative HTML version deleted]]
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>

-- 
Luke Tierney
Ralph E. Wareham Professor of Mathematical Sciences
University of Iowa                  Phone:             319-335-3386
Department of Statistics and        Fax:               319-335-3017
    Actuarial Science
241 Schaeffer Hall                  email:   luke-tierney at uiowa.edu
Iowa City, IA 52242                 WWW:  http://www.stat.uiowa.edu


From arnaud.gaboury at gmail.com  Sat Aug 22 17:47:11 2015
From: arnaud.gaboury at gmail.com (arnaud gaboury)
Date: Sat, 22 Aug 2015 17:47:11 +0200
Subject: [Rd] Build optimized R : openblas, MKL, ATLAS
Message-ID: <CAK1hC9v6vu+tMLTVMpZd=covXX06cVk2JRLb+jT37yD2yk88ag@mail.gmail.com>

I want to build R optimized, with either MKL, OpenBLAS or ATLAS.

My OS: Fedora 22
Hardware: CPU op-mode(s): 32-bit, 64-bit Byte Order: Little Endian
CPU(s): 8 Thread(s) per core: 2 Vendor ID: GenuineIntel Model name:
Intel(R) Core(TM) i7-2600K CPU @ 3.40GHz

I am a little confused when it comes to choose a method and would like
to hear your experiences. If I am right, I have 3 possibilities:
- OpenBLAS: opensource and free, but I came across some posts
describing seg faults issues and bugs. These posts are 2 years old and
I wonder if it is still the case.
- ATLAS: can't see any reason to not use it
- Intel MKL: this is part of Intel Parallel Studio and is a paid
software. Now, there is the MKL package distributed by
Revolutionanalytics, but I am not certain how this can be distributed
for free. Is there any kind of difference? In case of use of this
package, do I need to install RRO or can I just build R from GNU
against these libraries?

Thank you for advices.

-- 

google.com/+arnaudgabourygabx


From henrik.bengtsson at ucsf.edu  Sat Aug 22 19:15:55 2015
From: henrik.bengtsson at ucsf.edu (Henrik Bengtsson)
Date: Sat, 22 Aug 2015 19:15:55 +0200
Subject: [Rd] unset() function?
In-Reply-To: <alpine.DEB.2.10.1508220947320.2389@luke-Latitude>
References: <CAF8bMcZEegtke2bCOb96+xZGTaCSOamEMba-cU-i03Dj7jCnxA@mail.gmail.com>
	<alpine.DEB.2.10.1508220947320.2389@luke-Latitude>
Message-ID: <CAFDcVCTpRrAMbAj3m4Y4oyh4G257ApKx14g0dnZZdd+ZiyP7Rg@mail.gmail.com>

Hi,

I was playing around with this idea earlier this year. This would
allow you to remove a variable with NAMED<2 while still passing it's
value, e.g.

    x1 <- log(r(x1))

where the returned value/variable has NAMED<=1.  At first I was quite
excited about the results, but it turned out that it only worked for a
few functions.  If you want to play around with it, I've created the
'recycle' package:

    https://github.com/HenrikBengtsson/recycle

Have a look at the package tests for examples and what works and what
doesn't work:

    https://github.com/HenrikBengtsson/recycle/tree/master/tests

However, basically due to what Luke says, I've decided not to pursue
this any further for now.

But, I certainly agree that if the internals of R could be made less
conservative (not force NAMED=2), this idea would certainly be worth
pursuing and could save quite a bit of memory.  The downside would be
that code would be cluttered up with lots of explicit r() statements.
On the other hand, maybe those could be added automatically by code
compilers, e.g.

    x1 <- log(x1)

would become

    x1 <- log(r(x1))

/Henrik

On Sat, Aug 22, 2015 at 4:50 PM,  <luke-tierney at uiowa.edu> wrote:
> This wouldn't actually work at present as evaluating a promise always
> sets NAMED to 2. With reference counting it would work so might be
> worth considering when we switch.
>
> Going forward it would be best to use MAYBE_REFERENCED to test whether
> a duplicate is needed -- this macro is defined appropriately whether R
> is compiled to use NAMED or reference counting.
>
> Best,
>
> luke
>
>
> On Fri, 21 Aug 2015, William Dunlap wrote:
>
>> Does R have a function like the S/S++ unset() function?
>> unset(name) would remove 'name' from the current evaluation
>> frame and return its value.  It allowed you to safely avoid
>> some memory copying when calling .C or .Call.
>>
>> E.g., suppose you had C code like
>>  #include <R.h>
>>  #include <Rinternals.h>
>>  SEXP add1(SEXP pX)
>>  {
>>      int nProtected = 0;
>>      int n = Rf_length(pX);
>>      int i;
>>      double* x;
>>      Rprintf("NAMED(pX)=%d: ", NAMED(pX));
>>      if (NAMED(pX)) {
>>          Rprintf("Copying pX before adding 1\n");
>>          PROTECT(pX = duplicate(pX)); nProtected++;
>>      } else {
>>          Rprintf("Changing pX in place\n");
>>      }
>>      x = REAL(pX);
>>      for(i=0 ; i<n ; i++) {
>>        x[i] = x[i] + 1.0;
>>      }
>>      UNPROTECT(nProtected);
>>      return pX;
>>  }
>>
>> If I call this from an R function
>>  add1 <- function(x) {
>>      stopifnot(inherits(x, "numeric"))
>>     .Call("add1", x)
>>  }
>> it will will always copy 'x', even though not copying would
>> be safe (since add1 doesn't use 'x' after calling .Call()).
>>  > add1(c(1.2, 3.4))
>>  NAMED(pX)=2: Copying pX before adding 1
>>  [1] 2.2 4.4
>> If I make the .Call directly, without a nice R function around it
>> then I can avoid the copy
>>  > .Call("add1", c(1.2, 3.4))
>>  NAMED(pX)=0: Changing pX in place
>>  [1] 2.2 4.4
>>
>> If something like S's unset() were available I could avoid the copy,
>> when safe to do so, by making the .Call in add1
>>   .Call("add1", unset(x))
>>
>> If you called this new add1 with a named variable from another
>> function the copying would be done, since NAMED(x) would be
>> 2 even after the local binding was removed.  It actually requires some
>> care to to eliminate the copying, as all the functions in the call
>> chain would have to use unset() when possible.
>>
>> I ask this because I ran across a function in the 'bit' package that
>> does not have its C code call duplicate but instead assumes the
>> x[1] <- x[1] will force x to be copied:
>>  "!.bit" <- function(x){
>>    if (length(x)){
>>      ret <- x
>>      ret[1] <- ret[1]  # force duplication
>>      .Call("R_bit_not", ret, PACKAGE="bit")
>>    }else{
>>      x
>>    }
>>  }
>> If you optimize things so that 'ret[1] <- ret[1]' does not copy 'ret',
>> then this function alters its input.  It a function like unset()
>> were there then the .Call could be
>>     .Call("R_bit_not", unset(x))
>>
>> I suppose the compiler could analyze the code and see that
>> x was not used after the .Call and thus feel free to avoid the
>> copy.
>>
>> In any case bit's maintainer should add something like
>>    if(NAMED(x) {
>>        PROTECT(x=duplicate(x));
>>        nProtect++;
>>    }
>>    ...
>>    UNPROTECT(nProtect);
>> in the C code, but unset() would help avoid unneeded duplications.
>>
>>
>> Bill Dunlap
>> TIBCO Software
>> wdunlap tibco.com
>>
>>         [[alternative HTML version deleted]]
>>
>> ______________________________________________
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>
>
> --
> Luke Tierney
> Ralph E. Wareham Professor of Mathematical Sciences
> University of Iowa                  Phone:             319-335-3386
> Department of Statistics and        Fax:               319-335-3017
>    Actuarial Science
> 241 Schaeffer Hall                  email:   luke-tierney at uiowa.edu
> Iowa City, IA 52242                 WWW:  http://www.stat.uiowa.edu
>
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From arnaud.gaboury at gmail.com  Mon Aug 24 11:28:02 2015
From: arnaud.gaboury at gmail.com (arnaud gaboury)
Date: Mon, 24 Aug 2015 11:28:02 +0200
Subject: [Rd] Web apps on a R server
Message-ID: <CAK1hC9vj21TZOEyLBJN+vC74LzW00BMq=dvxODS3YpmU2A4hpQ@mail.gmail.com>

I want to deploy some R web apps with a clean separate of concerns: R
code // applications.

My choice for the R part is to use one of these two tools:
- deployR[1]
- OpenCPU[2]

and JavaScript for web apps.

OS is Fedora 22 and web server Nginx.

I have been reading documentation about these two R application
integration tools, and find hard to choose one method. So I am
interested in hearing testimonies from anyone with experience and
pro/cons.


Thank you for advice.

[1]http://deployr.revolutionanalytics.com/
[2]https://www.opencpu.org
-- 

google.com/+arnaudgabourygabx


From b.h.mevik at usit.uio.no  Mon Aug 24 11:29:25 2015
From: b.h.mevik at usit.uio.no (=?utf-8?Q?Bj=C3=B8rn-Helge_Mevik?=)
Date: Mon, 24 Aug 2015 11:29:25 +0200
Subject: [Rd] Build optimized R : openblas, MKL, ATLAS
In-Reply-To: <CAK1hC9v6vu+tMLTVMpZd=covXX06cVk2JRLb+jT37yD2yk88ag@mail.gmail.com>
	(arnaud gaboury's message of "Sat, 22 Aug 2015 17:47:11 +0200")
References: <CAK1hC9v6vu+tMLTVMpZd=covXX06cVk2JRLb+jT37yD2yk88ag@mail.gmail.com>
Message-ID: <s3smvxhnife.fsf@slagelg.uio.no>

arnaud gaboury <arnaud.gaboury at gmail.com> writes:

> - Intel MKL: this is part of Intel Parallel Studio and is a paid
> software. Now, there is the MKL package distributed by
> Revolutionanalytics, but I am not certain how this can be distributed
> for free. Is there any kind of difference? In case of use of this
> package, do I need to install RRO or can I just build R from GNU
> against these libraries?

We regularly build the standard R against MKL, simply using

./configure --with-blas='-mkl=parallel' --with-lapack --enable-BLAS-shlib

(The --enable-BLAS-shlib is not strictly needed for building agains MKL.)


We also try to optimise the build by setting some environment variables
before running configure:

fast="-ip -O3 -opt-mem-layout-trans=3 -xHost -mavx"
export CC="icc"
export CFLAGS="$fast -wd188 -fp-model precise"
export F77="ifort"
export FFLAGS="$fast -fp-model precise"
export CXX="icpc"
export CXXFLAGS="$fast -fp-model precise"
export FC="ifort"
export FCFLAGS="$fast -fp-model precise"

-- 
Regards,
Bj?rn-Helge Mevik


From arnaud.gaboury at gmail.com  Mon Aug 24 11:43:10 2015
From: arnaud.gaboury at gmail.com (arnaud gaboury)
Date: Mon, 24 Aug 2015 11:43:10 +0200
Subject: [Rd] Build optimized R : openblas, MKL, ATLAS
In-Reply-To: <s3smvxhnife.fsf@slagelg.uio.no>
References: <CAK1hC9v6vu+tMLTVMpZd=covXX06cVk2JRLb+jT37yD2yk88ag@mail.gmail.com>
	<s3smvxhnife.fsf@slagelg.uio.no>
Message-ID: <CAK1hC9vFZePpqWBprPDqds0ck5g1foBJ4eBWatmLgtbEJCh=uw@mail.gmail.com>

On Mon, Aug 24, 2015 at 11:29 AM, Bj?rn-Helge Mevik
<b.h.mevik at usit.uio.no> wrote:
> arnaud gaboury <arnaud.gaboury at gmail.com> writes:
>
>> - Intel MKL: this is part of Intel Parallel Studio and is a paid
>> software. Now, there is the MKL package distributed by
>> Revolutionanalytics, but I am not certain how this can be distributed
>> for free. Is there any kind of difference? In case of use of this
>> package, do I need to install RRO or can I just build R from GNU
>> against these libraries?
>
> We regularly build the standard R against MKL, simply using

Do you use proprietary Intel MKL or open source package like OpenBLAS ?
>
> ./configure --with-blas='-mkl=parallel' --with-lapack --enable-BLAS-shlib
>
> (The --enable-BLAS-shlib is not strictly needed for building agains MKL.)
>
>
> We also try to optimise the build by setting some environment variables
> before running configure:
>
> fast="-ip -O3 -opt-mem-layout-trans=3 -xHost -mavx"
> export CC="icc"
> export CFLAGS="$fast -wd188 -fp-model precise"
> export F77="ifort"
> export FFLAGS="$fast -fp-model precise"
> export CXX="icpc"
> export CXXFLAGS="$fast -fp-model precise"
> export FC="ifort"
> export FCFLAGS="$fast -fp-model precise"
>
> --
> Regards,
> Bj?rn-Helge Mevik
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel



-- 

google.com/+arnaudgabourygabx


From edd at debian.org  Mon Aug 24 13:42:32 2015
From: edd at debian.org (Dirk Eddelbuettel)
Date: Mon, 24 Aug 2015 06:42:32 -0500
Subject: [Rd] Build optimized R : openblas, MKL, ATLAS
In-Reply-To: <CAK1hC9vFZePpqWBprPDqds0ck5g1foBJ4eBWatmLgtbEJCh=uw@mail.gmail.com>
References: <CAK1hC9v6vu+tMLTVMpZd=covXX06cVk2JRLb+jT37yD2yk88ag@mail.gmail.com>
	<s3smvxhnife.fsf@slagelg.uio.no>
	<CAK1hC9vFZePpqWBprPDqds0ck5g1foBJ4eBWatmLgtbEJCh=uw@mail.gmail.com>
Message-ID: <21979.808.561019.747002@max.nulle.part>


On 24 August 2015 at 11:43, arnaud gaboury wrote:
| On Mon, Aug 24, 2015 at 11:29 AM, Bj?rn-Helge Mevik
| <b.h.mevik at usit.uio.no> wrote:
| > arnaud gaboury <arnaud.gaboury at gmail.com> writes:
| >
| >> - Intel MKL: this is part of Intel Parallel Studio and is a paid
| >> software. Now, there is the MKL package distributed by
| >> Revolutionanalytics, but I am not certain how this can be distributed
| >> for free. Is there any kind of difference? In case of use of this
| >> package, do I need to install RRO or can I just build R from GNU
| >> against these libraries?
| >
| > We regularly build the standard R against MKL, simply using
| 
| Do you use proprietary Intel MKL or open source package like OpenBLAS ?

You may be able to switch at will _after_ R has been built and installed.

That is something people simply cannot get their head around but lapack and
blas are an INTERFACE for which several implementations provide suitable
code.

That is the gist behind the package gcbd -- which is really a container for a
paper / vignette where I use(d) the fact that on a Debian-based system I do
have access to several of these (including the MKL) so that I can even script
benchmark runs for comparison _from R_ as it is just a (system) package
removal / installation which can be automated.

The paper never got finished as the gpu/cpu comparison aspect confuses
matters further --- but the basic idea is solid:  you can still switch
later, so benchmarking is possibly.  And desirable as these question pop up
all the time.

For Debian/Ubuntu, I ensure we built using --with-blas --with-lapack and
after that you just swap the system libraries providing them.  You should
only need rebuilds of R if your system fails to make these swappable.

Dirk

-- 
http://dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org


From arnaud.gaboury at gmail.com  Mon Aug 24 13:46:06 2015
From: arnaud.gaboury at gmail.com (arnaud gaboury)
Date: Mon, 24 Aug 2015 13:46:06 +0200
Subject: [Rd] Build optimized R : openblas, MKL, ATLAS
In-Reply-To: <21979.808.561019.747002@max.nulle.part>
References: <CAK1hC9v6vu+tMLTVMpZd=covXX06cVk2JRLb+jT37yD2yk88ag@mail.gmail.com>
	<s3smvxhnife.fsf@slagelg.uio.no>
	<CAK1hC9vFZePpqWBprPDqds0ck5g1foBJ4eBWatmLgtbEJCh=uw@mail.gmail.com>
	<21979.808.561019.747002@max.nulle.part>
Message-ID: <CAK1hC9t71AKv09RXrfqTeP8PHDBtZ+QtioCusmiqhGu21r_CAQ@mail.gmail.com>

On Mon, Aug 24, 2015 at 1:42 PM, Dirk Eddelbuettel <edd at debian.org> wrote:
>
> On 24 August 2015 at 11:43, arnaud gaboury wrote:
> | On Mon, Aug 24, 2015 at 11:29 AM, Bj?rn-Helge Mevik
> | <b.h.mevik at usit.uio.no> wrote:
> | > arnaud gaboury <arnaud.gaboury at gmail.com> writes:
> | >
> | >> - Intel MKL: this is part of Intel Parallel Studio and is a paid
> | >> software. Now, there is the MKL package distributed by
> | >> Revolutionanalytics, but I am not certain how this can be distributed
> | >> for free. Is there any kind of difference? In case of use of this
> | >> package, do I need to install RRO or can I just build R from GNU
> | >> against these libraries?
> | >
> | > We regularly build the standard R against MKL, simply using
> |
> | Do you use proprietary Intel MKL or open source package like OpenBLAS ?
>
> You may be able to switch at will _after_ R has been built and installed.

something like:
# update-alternatives --config ....
?
Reference to this blog[0]
>
[0]http://blog.nguyenvq.com/blog/2014/11/10/optimized-r-and-python-standard-blas-vs-atlas-vs-openblas-vs-mkl/



-- 

google.com/+arnaudgabourygabx


From edd at debian.org  Mon Aug 24 13:53:09 2015
From: edd at debian.org (Dirk Eddelbuettel)
Date: Mon, 24 Aug 2015 06:53:09 -0500
Subject: [Rd] Build optimized R : openblas, MKL, ATLAS
In-Reply-To: <CAK1hC9t71AKv09RXrfqTeP8PHDBtZ+QtioCusmiqhGu21r_CAQ@mail.gmail.com>
References: <CAK1hC9v6vu+tMLTVMpZd=covXX06cVk2JRLb+jT37yD2yk88ag@mail.gmail.com>
	<s3smvxhnife.fsf@slagelg.uio.no>
	<CAK1hC9vFZePpqWBprPDqds0ck5g1foBJ4eBWatmLgtbEJCh=uw@mail.gmail.com>
	<21979.808.561019.747002@max.nulle.part>
	<CAK1hC9t71AKv09RXrfqTeP8PHDBtZ+QtioCusmiqhGu21r_CAQ@mail.gmail.com>
Message-ID: <21979.1445.536574.448160@max.nulle.part>


On 24 August 2015 at 13:46, arnaud gaboury wrote:
| On Mon, Aug 24, 2015 at 1:42 PM, Dirk Eddelbuettel <edd at debian.org> wrote:
| >
| > You may be able to switch at will _after_ R has been built and installed.
| 
| something like:
| # update-alternatives --config ....
| ?
| Reference to this blog[0]
| >
| [0]http://blog.nguyenvq.com/blog/2014/11/10/optimized-r-and-python-standard-blas-vs-atlas-vs-openblas-vs-mkl/

Yes; see my post predating this (still using GOTO not OpenBLAS) 

    http://dirk.eddelbuettel.com/blog/2010/09/15/

and of course the package and vignette which has much more detail

    https://cran.rstudio.com/web/packages/gcbd/index.html
    
    https://cran.rstudio.com/web/packages/gcbd/vignettes/gcbd.pdf

We have a dedicated list r-sig-hpc which may be more suitable for this
discussion than continuing on r-devel.  [1]

Dirk


[1] Your "what web framework" question was also pretty much off-target there.

-- 
http://dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org


From metzger.rc at gmail.com  Mon Aug 24 16:18:10 2015
From: metzger.rc at gmail.com (Ryan C Metzger)
Date: Mon, 24 Aug 2015 10:18:10 -0400
Subject: [Rd] Child thread libR.so
In-Reply-To: <CACcNOGq+kvZ46uSm3+2=U6YD6eB18_hjgfWPp_JivMyq5p1i3w@mail.gmail.com>
References: <CACcNOGq+kvZ46uSm3+2=U6YD6eB18_hjgfWPp_JivMyq5p1i3w@mail.gmail.com>
Message-ID: <CACcNOGpmAHKzLcNgZ-BHtso+AE2EBc+NE6M6mnfRpLW5skKEEw@mail.gmail.com>

I did some poking around with GDB and confirmed that the advice of
setting R_CStackLimit after init, which is echoed in the "threading
issues" section of the R-exts help document, isn't entirely useful
because init apparently loads the main package which trips over the
broken stack checking.

Stack trace:

#0  R_SignalCStackOverflow (usage=140732197147604) at errors.c:81
#1  0x00002aaaab0625b7 in Rf_eval (e=0x1b7592a8, rho=0x1b753960) at eval.c:545
#2  0x00002aaaab0871ca in R_ReplFile (fp=0x1b69a830, rho=0x1b753960)
at main.c:98
#3  0x00002aaaab087a27 in setup_Rmainloop () at main.c:861
#4  0x00002aaaab14a98b in Rf_initEmbeddedR (argc=<value optimized
out>, argv=<value optimized out>) at Rembedded.c:63

On Thu, Aug 20, 2015 at 1:21 PM, Ryan C Metzger <metzger.rc at gmail.com> wrote:
> So I'm working on a custom front end to R, in one mode of the front
> end I dynamically load libR.so into a child worker thread. I'm very
> careful to make sure it is loaded by a single thread and loaded only
> once, but since it is a child thread it violates assumptions made by
> the stack size checking inside of R and I get innumerable errors along
> the lines of
>
> Error: C stack usage  140732526462740 is too close to the limit
>
> Digging through this email list (and I also found similar things out
> on google) I found the following advice from 2009
>
> ---------------------------------------- SNIP
> ------------------------------------------------------------------------------
>> Hi everyone!
>>   I meet one problem when embedding R in C code, when I run the the
>> R code in one child thread ,
>>   it always print error info:
>>    Error: C stack usage is too close to the limit
>>
>>   I also try to set R_CStackLimit = (uintptr_t)-1 to disable the C
>> stack check as the R-exts doc say,
>>   but it still does not work, the error info still exist.
>>
>
> That is the way to do it (and other project use it successfully) - the
> fact that it doesn't work means that you probably do it at the wrong
> place (you must set it *after* Rf_initialize_R).
>
> Cheers,
> Simon
> ---------------------------------------- SNIP
> ------------------------------------------------------------------------------
>
> my code is as follows
>
> ---------------------------------------- SNIP
> ------------------------------------------------------------------------------
> void init_r() {
>     SEXP aperm_function;
>
>     const char *init_argv[] = {"MyFront", "--vanilla", "--slave"};
>     Rf_initEmbeddedR(sizeof (init_argv) / sizeof (init_argv[0]),
> (char**) init_argv);
>
>     R_CStackLimit = (uintptr_t)-1;
>
>     /*
>      * transposeVector above uses the R builtin function aperm instead of
>      * looking it up every time we need deal with transposing a multidimensional
>      * intput/output look it up once here and save it off
>      */
>     aperm_function = findFun(install("aperm"), R_GlobalEnv);
>     if (aperm_function == NULL || aperm_function == R_NilValue ||
> aperm_function == R_UnboundValue) {
>         aperm_function = NULL;
>     } else {
>         aperm_expression = PROTECT(allocVector(LANGSXP, 2));
>
>         SETCAR(aperm_expression, aperm_function);
>     }
> }
> ---------------------------------------- SNIP
> ------------------------------------------------------------------------------
>
> but as I say I still get the error and it seems like the call to
> Rf_initEmbeddedR just never returns. As an experiment I edited
> config.h.in and removed the define for HAVE_GETRLIMIT and recompiled,
> thus compiling out the stack checking mechanism entirely. Then
> everything worked great!, so I know it's the stack checking mechanism
> from a child thread that is falling to pieces. So what I have in mind
> is looking to fix this mechanism so that it works from a child thread
> if the pthread library is available and submitting a patch. My
> question is two fold, 1. Is there a way to get this to work without a
> code change ( I'd like to be able to offer my front end stand alone
> and not have to bundle R with it ) 2. If I do come up with a diff, how
> do I go about submitting it back to the r foundation?
>
>
> for completeness the version of R I am using
>
>> version
>                _
> platform       x86_64-unknown-linux-gnu
> arch           x86_64
> os             linux-gnu
> system         x86_64, linux-gnu
> status
> major          3
> minor          2.1
> year           2015
> month          06
> day            18
> svn rev        68531
> language       R
> version.string R version 3.2.1 (2015-06-18)
> nickname       World-Famous Astronaut
>
> compiled from source with configure options
> head R-3.2.1/config.log
> This file contains any messages produced by compilers while
> running configure, to aid debugging if configure makes a mistake.
>
> It was created by R configure 3.2.1, which was
> generated by GNU Autoconf 2.69.  Invocation command line was
>
>   $ ./configure --prefix /u/rmetzger/linux_R_vanilla --enable-R-shlib
>
> ## --------- ##
> ## Platform. ##
>
> thank you!
> Ryan


From radford at cs.toronto.edu  Mon Aug 24 23:12:42 2015
From: radford at cs.toronto.edu (Radford Neal)
Date: Mon, 24 Aug 2015 17:12:42 -0400
Subject: [Rd] OpenMP on Windows reset FPU mode, disabling long double
Message-ID: <20150824211242.GA25429@cs.toronto.edu>

Another comment resulting from my testing of pqR on Windows...

With the Rtools implementation of OpenMP, threads started with an
OpenMP "parallel" construct have the state of the FPU reset so that
"long double" arithmetic is actually done only to "double" precision.

The problem can be seen with the following program:


#include <omp.h>
#include <stdio.h>

long double a, b;
double d;

int main(void)
{
  a = 1.0; b = a+1e-17; d = b-1.0; printf("M: %.1e\n",d);

  __asm__("fninit");  /* set for long double arithmetic */
  
  a = 1.0; b = a+1e-17; d = b-1.0; printf("M: %.1e\n",d);

# pragma omp parallel num_threads(3)
  { 
    int t = omp_get_thread_num();
    if (t==2) __asm__("fninit");  /* set for long double in thread 2 */

    a = 1.0; b = a+1e-17; d = b-1.0; printf("%d: %.1e\n",t,d);
  }
  
  a = 1.0; b = a+1e-17; d = b-1.0; printf("M: %.1e\n",d);

  return 0;
}


At least on a 32-bit Windows 7 system, the output of "d" is 1e-17 for
all threads except thread 1, for which it is 0.  That's the new thread
for which the __asm__("fninit") wasn't done to reset to long double
precision, and for which adding 1e-17 to 1.0 therefore has no effect.

   Radford Neal


From radford at cs.toronto.edu  Mon Aug 24 23:26:33 2015
From: radford at cs.toronto.edu (Radford Neal)
Date: Mon, 24 Aug 2015 17:26:33 -0400
Subject: [Rd] Problem with psignal.c for Windows builds
Message-ID: <20150824212633.GA846@cs.toronto.edu>

One thing I forgot in my previous message about problems with
psignal.c on Rtools for Windows...

One also needs to change src/gnuwin32/fixed/h/psignal.h

At a minimum, one needs the following changes:


@@ -122,8 +129,8 @@ typedef struct
 
 
 /* Prototype stuff ***********************************************************/
-int           sigsetmask(int signal_Block_MaskNew);
-int           sigblock(int signal_Block_MaskNew);
+sigset_t      sigsetmask(sigset_t signal_Block_MaskNew);
+sigset_t      sigblock(sigset_t signal_Block_MaskNew);
 int           sighold(int signal_Number);
 int           sigrelse(int signal_Number);
 int           sigaction(int signal_Number,struct sigaction* sigaction_Info,
@@ -143,7 +150,7 @@ int sigsuspend(sigset_t* sigset_Info);
 
 /* Re-mapped functions ===================================================== */
 
-#define sigmask(signal_Index) (1<<(signal_Index-1))
+#define sigmask(signal_Index) ((sigset_t)1<<(signal_Index-1))
 
 /* 
    This must be a macro, since we want setjmp working in the


But the definition of sigset_t may also need to change, as discussed
in my previous message.

You can see the pqR versions at the following URLs:

  https://github.com/radfordneal/pqR/blob/44/src/gnuwin32/psignal.c
  https://github.com/radfordneal/pqR/blob/44/src/gnuwin32/fixed/h/psignal.h


From hpages at fredhutch.org  Tue Aug 25 03:44:08 2015
From: hpages at fredhutch.org (=?windows-1252?Q?Herv=E9_Pag=E8s?=)
Date: Mon, 24 Aug 2015 18:44:08 -0700
Subject: [Rd] sprintf error: "only 100 arguments allowed"
In-Reply-To: <CALEtyTH5HKBsyVdrt7mCDCfAC5vBmOtShX8C7dVjGQs6LsKQ0Q@mail.gmail.com>
References: <CALEtyTH5HKBsyVdrt7mCDCfAC5vBmOtShX8C7dVjGQs6LsKQ0Q@mail.gmail.com>
Message-ID: <55DBC868.6080403@fredhutch.org>

Hi Martin,

Don't know the reason for this limitation. Here is a possible workaound:

## Work around the "only 100 arguments are allowed" error
## in base::sprintf(). Only works with 'fmt' of length 1.
sprintf2 <- function(fmt, ...)
{
     MAX_NVAL <- 99L
     args <- list(...)
     if (length(args) <= MAX_NVAL)
         return(sprintf(fmt, ...))
     stopifnot(length(fmt) == 1L)
     not_a_spec_at <- gregexpr("%%", fmt, fixed=TRUE)[[1L]]
     not_a_spec_at <- c(not_a_spec_at, not_a_spec_at + 1L)
     spec_at <- setdiff(gregexpr("%", fmt, fixed=TRUE)[[1L]], not_a_spec_at)
     nspec <- length(spec_at)
     if (length(args) < nspec)
         stop("too few arguments")
     if (nspec <= MAX_NVAL) {
         break_points <- integer(0)
     } else {
         break_points <- seq(MAX_NVAL + 1L, nspec, by=MAX_NVAL)
     }
     break_from <- c(1L, break_points)
     break_to <- c(break_points - 1L, nspec)
     fmt_break_at <- spec_at[break_points]
     fmt_chunks <- substr(rep.int(fmt, length(fmt_break_at) + 1L),
                          c(1L, fmt_break_at),
                          c(fmt_break_at - 1L, nchar(fmt)))
     ans_chunks <- mapply(
         function(fmt_chunk, from, to)
             do.call(sprintf, c(list(fmt_chunk), args[from:to])),
         fmt_chunks,
         break_from,
         break_to
     )
     paste(ans_chunks, collapse="")
}

Then:

 > fmt <- paste(rep(" %d", 250), collapse="")
 > args <- as.list(1:300)
 > do.call(sprintf2, c(list(fmt), args))
[1] " 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 
26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 
50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 
74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 
98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 
116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 
134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 
152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 
170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 
188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 
206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 
224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 
242 243 244 245 246 247 248 249 250"

Cheers,
H.


On 08/21/2015 08:21 PM, Martin Bel wrote:
> I'm trying to apply a function defined in the VW R docs, that attemps to
> convert a data.table object to Vowpal Wabbit format. In the process i'm
> getting the error in printf mentioned in the subject.
> The original function is here:
> https://github.com/JohnLangford/vowpal_wabbit/blob/master/R/dt2vw.R
>
>
> Below there is a small example that reproduces the error. The function
> works great with smaller (less than 100 columns), as shown.
>
> Any suggestions of alternative methods to acomplish the same would be
> great, but I'm basically asking, is there a reason for the 100 arguments
> limitation?
>
>
> # Source this function#
> https://github.com/JohnLangford/vowpal_wabbit/blob/master/R/dt2vw.R
> # Here is a gist
> source('https://gist.githubusercontent.com/martinbel/a013c2bd2333b85eeb76/raw/7b68ede0385f3d8684a07854e8d6ca527b9cd441/dt2vw.R')
>
> library(data.table)
>
> X = cbind(matrix(rnorm(1:1010), nrow=10, ncol=101), sample(c(1, -1), 10, T))
> X = as.data.table(X)
> X[, weight:=ifelse(V102 == 1, 3, 1)]
> # check out function arguments
> head(dt2vw, 2)# function (data, fileName, namespaces = NULL, target,
> weight = NULL, #                 tag = NULL, hard_parse = F)
>
> namespaces = list(a = list(varName = sprintf('V%s',1:50), keepSpace=F),
>                    b = list(varName = sprintf('V%s',51:101), keepSpace=F))
>
> dt2vw(data=X, fileName='../out.vw', namespaces = NULL,
>        target='V102', weight = 'weight',
>        tag = NULL, hard_parse = F)
> ### error
> # [1] "sprintf('%f %f |A V1:%f V2:%f V3:%f V4:%f V5:%f V6:%f V7:%f
> V8:%f V9:%f V10:%f V11:%f V12:%f V13:%f V14:%f V15:%f V16:%f V17:%f
> V18:%f V19:%f V20:%f V21:%f V22:%f V23:%f V24:%f V25:%f V26:%f V27:%f
> V28:%f V29:%f V30:%f V31:%f V32:%f V33:%f V34:%f V35:%f V36:%f V37:%f
> V38:%f V39:%f V40:%f V41:%f V42:%f V43:%f V44:%f V45:%f V46:%f V47:%f
> V48:%f V49:%f V50:%f V51:%f V52:%f V53:%f V54:%f V55:%f V56:%f V57:%f
> V58:%f V59:%f V60:%f V61:%f V62:%f V63:%f V64:%f V65:%f V66:%f V67:%f
> V68:%f V69:%f V70:%f V71:%f V72:%f V73:%f V74:%f V75:%f V76:%f V77:%f
> V78:%f V79:%f V80:%f V81:%f V82:%f V83:%f V84:%f V85:%f V86:%f V87:%f
> V88:%f V89:%f V90:%f V91:%f V92:%f V93:%f V94:%f V95:%f V96:%f V97:%f
> V98:%f V99:%f V100:%f V101:%f ',V102, weight, V1, V2, V3, V4, V5, V6,
> V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20,
> V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31, V32, V33, V34,
> V35, V36, V37, V38, V39, V40, V41, V42, V43, V44, V45, V46, V47, V48,
> V49, V50, V51, V52, V53, V54, V55, V56, V57, V58, V59, V60, V61, V62,
> V63, V64, V65, V66, V67, V68, V69, V70, V71, V72, V73, V74, V75, V76,
> V77, V78, V79, V80, V81, V82, V83, V84, V85, V86, V87, V88, V89, V90,
> V91, V92, V93, V94, V95, V96, V97, V98, V99, V100, V101)"
> # Error in sprintf("%f %f |A V1:%f V2:%f V3:%f V4:%f V5:%f V6:%f V7:%f
> V8:%f V9:%f V10:%f V11:%f V12:%f V13:%f V14:%f V15:%f V16:%f V17:%f
> V18:%f V19:%f V20:%f V21:%f V22:%f V23:%f V24:%f V25:%f V26:%f V27:%f
> V28:%f V29:%f V30:%f V31:%f V32:%f V33:%f V34:%f V35:%f V36:%f V37:%f
> V38:%f V39:%f V40:%f V41:%f V42:%f V43:%f V44:%f V45:%f V46:%f V47:%f
> V48:%f V49:%f V50:%f V51:%f V52:%f V53:%f V54:%f V55:%f V56:%f V57:%f
> V58:%f V59:%f V60:%f V61:%f V62:%f V63:%f V64:%f V65:%f V66:%f V67:%f
> V68:%f V69:%f V70:%f V71:%f V72:%f V73:%f V74:%f V75:%f V76:%f V77:%f
> V78:%f V79:%f V80:%f V81:%f V82:%f V83:%f V84:%f V85:%f V86:%f V87:%f
> V88:%f V89:%f V90:%f V91:%f V92:%f V93:%f V94:%f V95:%f V96:%f V97:%f
> V98:%f V99:%f V100:%f V101:%f ",  : # only 100 arguments are allowed
> # works
> dt2vw(data=X[, 50:dim(X)[2], with=FALSE],
>        fileName='../out.vw', namespaces = NULL,
>        target='V102', weight = 'weight',
>        tag = NULL, hard_parse = F)
>
> system('head -3 ../out.vw')
>
> 	[[alternative HTML version deleted]]
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>

-- 
Herv? Pag?s

Program in Computational Biology
Division of Public Health Sciences
Fred Hutchinson Cancer Research Center
1100 Fairview Ave. N, M1-B514
P.O. Box 19024
Seattle, WA 98109-1024

E-mail: hpages at fredhutch.org
Phone:  (206) 667-5791
Fax:    (206) 667-1319


From simon.urbanek at r-project.org  Tue Aug 25 04:16:05 2015
From: simon.urbanek at r-project.org (Simon Urbanek)
Date: Mon, 24 Aug 2015 21:16:05 -0500
Subject: [Rd] Child thread libR.so
In-Reply-To: <CACcNOGpmAHKzLcNgZ-BHtso+AE2EBc+NE6M6mnfRpLW5skKEEw@mail.gmail.com>
References: <CACcNOGq+kvZ46uSm3+2=U6YD6eB18_hjgfWPp_JivMyq5p1i3w@mail.gmail.com>
	<CACcNOGpmAHKzLcNgZ-BHtso+AE2EBc+NE6M6mnfRpLW5skKEEw@mail.gmail.com>
Message-ID: <AB969AA5-BEB7-4901-89BE-9DBC779A7B85@r-project.org>

Ryan,

if you read the piece you quoted from more carefully, you'll notice it says "Rf_initialize_R" - which is quite critical in this matter.

Cheers,
Simon


On Aug 24, 2015, at 9:18 AM, Ryan C Metzger <metzger.rc at gmail.com> wrote:

> I did some poking around with GDB and confirmed that the advice of
> setting R_CStackLimit after init, which is echoed in the "threading
> issues" section of the R-exts help document, isn't entirely useful
> because init apparently loads the main package which trips over the
> broken stack checking.
> 
> Stack trace:
> 
> #0  R_SignalCStackOverflow (usage=140732197147604) at errors.c:81
> #1  0x00002aaaab0625b7 in Rf_eval (e=0x1b7592a8, rho=0x1b753960) at eval.c:545
> #2  0x00002aaaab0871ca in R_ReplFile (fp=0x1b69a830, rho=0x1b753960)
> at main.c:98
> #3  0x00002aaaab087a27 in setup_Rmainloop () at main.c:861
> #4  0x00002aaaab14a98b in Rf_initEmbeddedR (argc=<value optimized
> out>, argv=<value optimized out>) at Rembedded.c:63
> 
> On Thu, Aug 20, 2015 at 1:21 PM, Ryan C Metzger <metzger.rc at gmail.com> wrote:
>> So I'm working on a custom front end to R, in one mode of the front
>> end I dynamically load libR.so into a child worker thread. I'm very
>> careful to make sure it is loaded by a single thread and loaded only
>> once, but since it is a child thread it violates assumptions made by
>> the stack size checking inside of R and I get innumerable errors along
>> the lines of
>> 
>> Error: C stack usage  140732526462740 is too close to the limit
>> 
>> Digging through this email list (and I also found similar things out
>> on google) I found the following advice from 2009
>> 
>> ---------------------------------------- SNIP
>> ------------------------------------------------------------------------------
>>> Hi everyone!
>>>  I meet one problem when embedding R in C code, when I run the the
>>> R code in one child thread ,
>>>  it always print error info:
>>>   Error: C stack usage is too close to the limit
>>> 
>>>  I also try to set R_CStackLimit = (uintptr_t)-1 to disable the C
>>> stack check as the R-exts doc say,
>>>  but it still does not work, the error info still exist.
>>> 
>> 
>> That is the way to do it (and other project use it successfully) - the
>> fact that it doesn't work means that you probably do it at the wrong
>> place (you must set it *after* Rf_initialize_R).
>> 
>> Cheers,
>> Simon
>> ---------------------------------------- SNIP
>> ------------------------------------------------------------------------------
>> 
>> my code is as follows
>> 
>> ---------------------------------------- SNIP
>> ------------------------------------------------------------------------------
>> void init_r() {
>>    SEXP aperm_function;
>> 
>>    const char *init_argv[] = {"MyFront", "--vanilla", "--slave"};
>>    Rf_initEmbeddedR(sizeof (init_argv) / sizeof (init_argv[0]),
>> (char**) init_argv);
>> 
>>    R_CStackLimit = (uintptr_t)-1;
>> 
>>    /*
>>     * transposeVector above uses the R builtin function aperm instead of
>>     * looking it up every time we need deal with transposing a multidimensional
>>     * intput/output look it up once here and save it off
>>     */
>>    aperm_function = findFun(install("aperm"), R_GlobalEnv);
>>    if (aperm_function == NULL || aperm_function == R_NilValue ||
>> aperm_function == R_UnboundValue) {
>>        aperm_function = NULL;
>>    } else {
>>        aperm_expression = PROTECT(allocVector(LANGSXP, 2));
>> 
>>        SETCAR(aperm_expression, aperm_function);
>>    }
>> }
>> ---------------------------------------- SNIP
>> ------------------------------------------------------------------------------
>> 
>> but as I say I still get the error and it seems like the call to
>> Rf_initEmbeddedR just never returns. As an experiment I edited
>> config.h.in and removed the define for HAVE_GETRLIMIT and recompiled,
>> thus compiling out the stack checking mechanism entirely. Then
>> everything worked great!, so I know it's the stack checking mechanism
>> from a child thread that is falling to pieces. So what I have in mind
>> is looking to fix this mechanism so that it works from a child thread
>> if the pthread library is available and submitting a patch. My
>> question is two fold, 1. Is there a way to get this to work without a
>> code change ( I'd like to be able to offer my front end stand alone
>> and not have to bundle R with it ) 2. If I do come up with a diff, how
>> do I go about submitting it back to the r foundation?
>> 
>> 
>> for completeness the version of R I am using
>> 
>>> version
>>               _
>> platform       x86_64-unknown-linux-gnu
>> arch           x86_64
>> os             linux-gnu
>> system         x86_64, linux-gnu
>> status
>> major          3
>> minor          2.1
>> year           2015
>> month          06
>> day            18
>> svn rev        68531
>> language       R
>> version.string R version 3.2.1 (2015-06-18)
>> nickname       World-Famous Astronaut
>> 
>> compiled from source with configure options
>> head R-3.2.1/config.log
>> This file contains any messages produced by compilers while
>> running configure, to aid debugging if configure makes a mistake.
>> 
>> It was created by R configure 3.2.1, which was
>> generated by GNU Autoconf 2.69.  Invocation command line was
>> 
>>  $ ./configure --prefix /u/rmetzger/linux_R_vanilla --enable-R-shlib
>> 
>> ## --------- ##
>> ## Platform. ##
>> 
>> thank you!
>> Ryan
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
> 


From simon.urbanek at r-project.org  Tue Aug 25 04:25:47 2015
From: simon.urbanek at r-project.org (Simon Urbanek)
Date: Mon, 24 Aug 2015 21:25:47 -0500
Subject: [Rd] Web apps on a R server
In-Reply-To: <CAK1hC9vj21TZOEyLBJN+vC74LzW00BMq=dvxODS3YpmU2A4hpQ@mail.gmail.com>
References: <CAK1hC9vj21TZOEyLBJN+vC74LzW00BMq=dvxODS3YpmU2A4hpQ@mail.gmail.com>
Message-ID: <0B129B68-0B79-42D1-B5EE-1E17EA647EE2@r-project.org>

On Aug 24, 2015, at 4:28 AM, arnaud gaboury <arnaud.gaboury at gmail.com> wrote:

> I want to deploy some R web apps with a clean separate of concerns: R
> code // applications.
> 
> My choice for the R part is to use one of these two tools:
> - deployR[1]
> - OpenCPU[2]
> 
> and JavaScript for web apps.
> 
> OS is Fedora 22 and web server Nginx.
> 
> I have been reading documentation about these two R application
> integration tools, and find hard to choose one method. So I am
> interested in hearing testimonies from anyone with experience and
> pro/cons.
> 

Just for completeness - there is also Rserve (disclaimer: I'm the author). It's a bit more flexible (native RPC both ways, no need for any JSON encoding) and if you want a GUI, viz tools, Shiny compatibility etc, you can use RCloud ...

Cheers,
Simon



> 
> Thank you for advice.
> 
> [1]http://deployr.revolutionanalytics.com/
> [2]https://www.opencpu.org
> -- 
> 
> google.com/+arnaudgabourygabx
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
> 


From b.h.mevik at usit.uio.no  Tue Aug 25 08:29:41 2015
From: b.h.mevik at usit.uio.no (=?utf-8?Q?Bj=C3=B8rn-Helge_Mevik?=)
Date: Tue, 25 Aug 2015 08:29:41 +0200
Subject: [Rd] Build optimized R : openblas, MKL, ATLAS
In-Reply-To: <CAK1hC9vFZePpqWBprPDqds0ck5g1foBJ4eBWatmLgtbEJCh=uw@mail.gmail.com>
	(arnaud gaboury's message of "Mon, 24 Aug 2015 11:43:10 +0200")
References: <CAK1hC9v6vu+tMLTVMpZd=covXX06cVk2JRLb+jT37yD2yk88ag@mail.gmail.com>
	<s3smvxhnife.fsf@slagelg.uio.no>
	<CAK1hC9vFZePpqWBprPDqds0ck5g1foBJ4eBWatmLgtbEJCh=uw@mail.gmail.com>
Message-ID: <s3spp2blw2y.fsf@slagelg.uio.no>

arnaud gaboury <arnaud.gaboury at gmail.com> writes:

> On Mon, Aug 24, 2015 at 11:29 AM, Bj?rn-Helge Mevik
>
>> We regularly build the standard R against MKL, simply using
>
> Do you use proprietary Intel MKL or open source package like OpenBLAS ?

As I wrote: MKL.

-- 
Regards,
Bj?rn-Helge Mevik


From ripley at stats.ox.ac.uk  Tue Aug 25 11:08:52 2015
From: ripley at stats.ox.ac.uk (Prof Brian Ripley)
Date: Tue, 25 Aug 2015 10:08:52 +0100
Subject: [Rd] sprintf error: "only 100 arguments allowed"
In-Reply-To: <CALEtyTH5HKBsyVdrt7mCDCfAC5vBmOtShX8C7dVjGQs6LsKQ0Q@mail.gmail.com>
References: <CALEtyTH5HKBsyVdrt7mCDCfAC5vBmOtShX8C7dVjGQs6LsKQ0Q@mail.gmail.com>
Message-ID: <55DC30A4.9060504@stats.ox.ac.uk>

 From the sources:

#define MAXNARGS 100
/*               ^^^ not entirely arbitrary, but strongly linked to 
allowing %$1 to %$99 !*/



On 22/08/2015 04:21, Martin Bel wrote:
> I'm trying to apply a function defined in the VW R docs, that attemps to
> convert a data.table object to Vowpal Wabbit format. In the process i'm
> getting the error in printf mentioned in the subject.
> The original function is here:
> https://github.com/JohnLangford/vowpal_wabbit/blob/master/R/dt2vw.R
>
>
> Below there is a small example that reproduces the error. The function
> works great with smaller (less than 100 columns), as shown.
>
> Any suggestions of alternative methods to acomplish the same would be
> great, but I'm basically asking, is there a reason for the 100 arguments
> limitation?
>
>
> # Source this function#
> https://github.com/JohnLangford/vowpal_wabbit/blob/master/R/dt2vw.R
> # Here is a gist
> source('https://gist.githubusercontent.com/martinbel/a013c2bd2333b85eeb76/raw/7b68ede0385f3d8684a07854e8d6ca527b9cd441/dt2vw.R')
>
> library(data.table)
>
> X = cbind(matrix(rnorm(1:1010), nrow=10, ncol=101), sample(c(1, -1), 10, T))
> X = as.data.table(X)
> X[, weight:=ifelse(V102 == 1, 3, 1)]
> # check out function arguments
> head(dt2vw, 2)# function (data, fileName, namespaces = NULL, target,
> weight = NULL, #                 tag = NULL, hard_parse = F)
>
> namespaces = list(a = list(varName = sprintf('V%s',1:50), keepSpace=F),
>                    b = list(varName = sprintf('V%s',51:101), keepSpace=F))
>
> dt2vw(data=X, fileName='../out.vw', namespaces = NULL,
>        target='V102', weight = 'weight',
>        tag = NULL, hard_parse = F)
> ### error
> # [1] "sprintf('%f %f |A V1:%f V2:%f V3:%f V4:%f V5:%f V6:%f V7:%f
> V8:%f V9:%f V10:%f V11:%f V12:%f V13:%f V14:%f V15:%f V16:%f V17:%f
> V18:%f V19:%f V20:%f V21:%f V22:%f V23:%f V24:%f V25:%f V26:%f V27:%f
> V28:%f V29:%f V30:%f V31:%f V32:%f V33:%f V34:%f V35:%f V36:%f V37:%f
> V38:%f V39:%f V40:%f V41:%f V42:%f V43:%f V44:%f V45:%f V46:%f V47:%f
> V48:%f V49:%f V50:%f V51:%f V52:%f V53:%f V54:%f V55:%f V56:%f V57:%f
> V58:%f V59:%f V60:%f V61:%f V62:%f V63:%f V64:%f V65:%f V66:%f V67:%f
> V68:%f V69:%f V70:%f V71:%f V72:%f V73:%f V74:%f V75:%f V76:%f V77:%f
> V78:%f V79:%f V80:%f V81:%f V82:%f V83:%f V84:%f V85:%f V86:%f V87:%f
> V88:%f V89:%f V90:%f V91:%f V92:%f V93:%f V94:%f V95:%f V96:%f V97:%f
> V98:%f V99:%f V100:%f V101:%f ',V102, weight, V1, V2, V3, V4, V5, V6,
> V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20,
> V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31, V32, V33, V34,
> V35, V36, V37, V38, V39, V40, V41, V42, V43, V44, V45, V46, V47, V48,
> V49, V50, V51, V52, V53, V54, V55, V56, V57, V58, V59, V60, V61, V62,
> V63, V64, V65, V66, V67, V68, V69, V70, V71, V72, V73, V74, V75, V76,
> V77, V78, V79, V80, V81, V82, V83, V84, V85, V86, V87, V88, V89, V90,
> V91, V92, V93, V94, V95, V96, V97, V98, V99, V100, V101)"
> # Error in sprintf("%f %f |A V1:%f V2:%f V3:%f V4:%f V5:%f V6:%f V7:%f
> V8:%f V9:%f V10:%f V11:%f V12:%f V13:%f V14:%f V15:%f V16:%f V17:%f
> V18:%f V19:%f V20:%f V21:%f V22:%f V23:%f V24:%f V25:%f V26:%f V27:%f
> V28:%f V29:%f V30:%f V31:%f V32:%f V33:%f V34:%f V35:%f V36:%f V37:%f
> V38:%f V39:%f V40:%f V41:%f V42:%f V43:%f V44:%f V45:%f V46:%f V47:%f
> V48:%f V49:%f V50:%f V51:%f V52:%f V53:%f V54:%f V55:%f V56:%f V57:%f
> V58:%f V59:%f V60:%f V61:%f V62:%f V63:%f V64:%f V65:%f V66:%f V67:%f
> V68:%f V69:%f V70:%f V71:%f V72:%f V73:%f V74:%f V75:%f V76:%f V77:%f
> V78:%f V79:%f V80:%f V81:%f V82:%f V83:%f V84:%f V85:%f V86:%f V87:%f
> V88:%f V89:%f V90:%f V91:%f V92:%f V93:%f V94:%f V95:%f V96:%f V97:%f
> V98:%f V99:%f V100:%f V101:%f ",  : # only 100 arguments are allowed
> # works
> dt2vw(data=X[, 50:dim(X)[2], with=FALSE],
>        fileName='../out.vw', namespaces = NULL,
>        target='V102', weight = 'weight',
>        tag = NULL, hard_parse = F)
>
> system('head -3 ../out.vw')
>
> 	[[alternative HTML version deleted]]
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>


-- 
Brian D. Ripley,                  ripley at stats.ox.ac.uk
Emeritus Professor of Applied Statistics, University of Oxford
1 South Parks Road, Oxford OX1 3TG, UK


From bbolker at gmail.com  Tue Aug 25 18:12:59 2015
From: bbolker at gmail.com (Ben Bolker)
Date: Tue, 25 Aug 2015 12:12:59 -0400
Subject: [Rd] match()/%in% with language objects?
Message-ID: <55DC940B.8080701@gmail.com>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1


  I haven't yet dug into the internals of match() yet to see what's
going on, but I'm wondering whether there's a design reason why I
can't use %in% (which is a wrapper for match()) on language objects.

I'd like to test whether a language object is in a list of language
objects, but I get the error "'match' requires vector arguments":

specials <- c("foo","bar")
spList <- lapply(specials,as.name)  ## convert to language objects
"a" %in% spList  ## works (FALSE)
spList[[1]] %in% spList ##   'match' requires vector arguments
quote(foo) %in% spList  ## ditto
quote(foo) == spList[[1]]  ## TRUE

obviously I can go the other way, converting my target into text:

deparse(spList[[1]]) %in% specials  ## TRUE

 I could also write my own function to loop through the list and stop
when I find it.  But I'd prefer to use built-in functionality if possible.

  Does anyone have any clues/see what I'm missing?

  cheers
    Ben Bolker
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.11 (GNU/Linux)

iQEcBAEBAgAGBQJV3JQLAAoJEOCV5YRblxUHTEkIAJluX0F2bLGW1jt1FP2UEZs1
hucBzPGxpHdGE0CAE2Q2rPtKPmJsZdOpkpBPcxorLj4F6C70yY9QmdNlZ1i/spQB
k33EbUsD2XZGcfIVRGSnc1q9QS2vcWRuyC89GRle8xPVD8MfwiV/EMQi4hBk1v9q
TTOug7e1c+I+PtbvrQHpQrCc/1h609I7UqPCOdYbak3xwQC4VNSJ1A8n5w4N+RsV
UVEMkOmhLnwzk6pSSC0dbyOKUluklc5ZYBX8aEM0Cd9bUYhoqc2aXUc7ocsL3f9J
BHlDhy0kfjfwv4wqg/sFKLMIX2IQPxM2zrcd3v1hhEXOYGi7KoHHpZaihbFmEfQ=
=w3OR
-----END PGP SIGNATURE-----


From wdunlap at tibco.com  Tue Aug 25 18:47:23 2015
From: wdunlap at tibco.com (William Dunlap)
Date: Tue, 25 Aug 2015 09:47:23 -0700
Subject: [Rd] match()/%in% with language objects?
In-Reply-To: <55DC940B.8080701@gmail.com>
References: <55DC940B.8080701@gmail.com>
Message-ID: <CAF8bMcbLb1FT2B4umf6jAYAB0hRBViaqA+c7W-XmDn5DrunoBA@mail.gmail.com>

match(x,table) and x%in%table work when x and table are lists of language
objects or expressions.  E.g.,

  expression(quote(1+2), quote(log2(16))) %in% expression(3, quote(1+2),
c(4L,5L,6L,7L))
  #[1]  TRUE FALSE
  list(quote(1+2), quote(log2(16))) %in% list(3, quote(1+2), c(4L,5L,6L,7L))
  #[1]  TRUE FALSE
  match(list(quote(1+2), quote(log2(16))),  list(3, quote(1+2),
c(4L,5L,6L,7L)))
  #[1]  2 NA

With your example data:
  spList[1] %in% spList
  #[1] TRUE
  list(quote(foo)) %in% spList
  #[1] TRUE
  list(quote(nosuchsymbol)) %in% spList
  #[1] FALSE





Bill Dunlap
TIBCO Software
wdunlap tibco.com

On Tue, Aug 25, 2015 at 9:12 AM, Ben Bolker <bbolker at gmail.com> wrote:

> -----BEGIN PGP SIGNED MESSAGE-----
> Hash: SHA1
>
>
>   I haven't yet dug into the internals of match() yet to see what's
> going on, but I'm wondering whether there's a design reason why I
> can't use %in% (which is a wrapper for match()) on language objects.
>
> I'd like to test whether a language object is in a list of language
> objects, but I get the error "'match' requires vector arguments":
>
> specials <- c("foo","bar")
> spList <- lapply(specials,as.name)  ## convert to language objects
> "a" %in% spList  ## works (FALSE)
> spList[[1]] %in% spList ##   'match' requires vector arguments
> quote(foo) %in% spList  ## ditto
> quote(foo) == spList[[1]]  ## TRUE
>
> obviously I can go the other way, converting my target into text:
>
> deparse(spList[[1]]) %in% specials  ## TRUE
>
>  I could also write my own function to loop through the list and stop
> when I find it.  But I'd prefer to use built-in functionality if possible.
>
>   Does anyone have any clues/see what I'm missing?
>
>   cheers
>     Ben Bolker
> -----BEGIN PGP SIGNATURE-----
> Version: GnuPG v1.4.11 (GNU/Linux)
>
> iQEcBAEBAgAGBQJV3JQLAAoJEOCV5YRblxUHTEkIAJluX0F2bLGW1jt1FP2UEZs1
> hucBzPGxpHdGE0CAE2Q2rPtKPmJsZdOpkpBPcxorLj4F6C70yY9QmdNlZ1i/spQB
> k33EbUsD2XZGcfIVRGSnc1q9QS2vcWRuyC89GRle8xPVD8MfwiV/EMQi4hBk1v9q
> TTOug7e1c+I+PtbvrQHpQrCc/1h609I7UqPCOdYbak3xwQC4VNSJ1A8n5w4N+RsV
> UVEMkOmhLnwzk6pSSC0dbyOKUluklc5ZYBX8aEM0Cd9bUYhoqc2aXUc7ocsL3f9J
> BHlDhy0kfjfwv4wqg/sFKLMIX2IQPxM2zrcd3v1hhEXOYGi7KoHHpZaihbFmEfQ=
> =w3OR
> -----END PGP SIGNATURE-----
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>

	[[alternative HTML version deleted]]


From metzger.rc at gmail.com  Tue Aug 25 18:54:46 2015
From: metzger.rc at gmail.com (Ryan C Metzger)
Date: Tue, 25 Aug 2015 12:54:46 -0400
Subject: [Rd] Child thread libR.so
Message-ID: <CACcNOGoqcJ7=ZO++8cqoeprwmYYMQfKSQUY6c_w1mJQr75DK5g@mail.gmail.com>

Simon,
Ah, thank you! quiet right. For anyone searching for this in the
future, I changed my init fuction to:

---------- SNIP ----------------
void init_r() {
    SEXP aperm_function;

    /* this is our version of Rf_initEmbeddedR where we disable stack
checking */
    const char *init_argv[] = {"MyFront", "--vanilla", "--slave"};
    Rf_initialize_R(sizeof (init_argv) / sizeof (init_argv[0]),
(char**) init_argv);

    /* Disable stack limit checking since it is incompatible being
loaded on a child thread
     */
    R_CStackLimit = (uintptr_t)-1;

    R_Interactive = TRUE;  /* Rf_initialize_R set this based on isatty */
    setup_Rmainloop();
    /* end of Rf_initEmbeddedR */

    /*
     * transposeVector above uses the R builtin function aperm instead of
     * looking it up every time we need deal with transposing a multidimensional
     * intput/output look it up once here and save it off
     */
    aperm_function = findFun(install("aperm"), R_GlobalEnv);
    if (aperm_function == NULL || aperm_function == R_NilValue ||
aperm_function == R_UnboundValue) {
        aperm_function = NULL;
    } else {
        aperm_expression = PROTECT(allocVector(LANGSXP, 2));

        SETCAR(aperm_expression, aperm_function);
    }
}
---------- SNIP ----------------

This now behaves appropriately from a child thread in my custom front end.

thank you again Simon,
Ryan

> Ryan,
>
> if you read the piece you quoted from more carefully, you'll notice it says "Rf_initialize_R" - which is quite critical in this matter.
>
> Cheers,
> Simon
>
>
> On Aug 24, 2015, at 9:18 AM, Ryan C Metzger <metzger.rc at gmail.com> wrote:
>
>> I did some poking around with GDB and confirmed that the advice of
>> setting R_CStackLimit after init, which is echoed in the "threading
>> issues" section of the R-exts help document, isn't entirely useful
>> because init apparently loads the main package which trips over the
>> broken stack checking.
>>
>> Stack trace:
>>
>> #0  R_SignalCStackOverflow (usage=140732197147604) at errors.c:81
>> #1  0x00002aaaab0625b7 in Rf_eval (e=0x1b7592a8, rho=0x1b753960) at eval.c:545
>> #2  0x00002aaaab0871ca in R_ReplFile (fp=0x1b69a830, rho=0x1b753960)
>> at main.c:98
>> #3  0x00002aaaab087a27 in setup_Rmainloop () at main.c:861
>> #4  0x00002aaaab14a98b in Rf_initEmbeddedR (argc=<value optimized
>> out>, argv=<value optimized out>) at Rembedded.c:63
>>
>> On Thu, Aug 20, 2015 at 1:21 PM, Ryan C Metzger <metzger.rc at gmail.com> wrote:
>>> So I'm working on a custom front end to R, in one mode of the front
>>> end I dynamically load libR.so into a child worker thread. I'm very
>>> careful to make sure it is loaded by a single thread and loaded only
>>> once, but since it is a child thread it violates assumptions made by
>>> the stack size checking inside of R and I get innumerable errors along
>>> the lines of
>>>
>>> Error: C stack usage  140732526462740 is too close to the limit
>>>
>>> Digging through this email list (and I also found similar things out
>>> on google) I found the following advice from 2009
>>>
>>> ---------------------------------------- SNIP
>>> ------------------------------------------------------------------------------
>>>> Hi everyone!
>>>>  I meet one problem when embedding R in C code, when I run the the
>>>> R code in one child thread ,
>>>>  it always print error info:
>>>>   Error: C stack usage is too close to the limit
>>>>
>>>>  I also try to set R_CStackLimit = (uintptr_t)-1 to disable the C
>>>> stack check as the R-exts doc say,
>>>>  but it still does not work, the error info still exist.
>>>>
>>>
>>> That is the way to do it (and other project use it successfully) - the
>>> fact that it doesn't work means that you probably do it at the wrong
>>> place (you must set it *after* Rf_initialize_R).
>>>
>>> Cheers,
>>> Simon
>>> ---------------------------------------- SNIP
>>> ------------------------------------------------------------------------------
>>>
>>> my code is as follows
>>>
>>> ---------------------------------------- SNIP
>>> ------------------------------------------------------------------------------
>>> void init_r() {
>>>    SEXP aperm_function;
>>>
>>>    const char *init_argv[] = {"MyFront", "--vanilla", "--slave"};
>>>    Rf_initEmbeddedR(sizeof (init_argv) / sizeof (init_argv[0]),
>>> (char**) init_argv);
>>>
>>>    R_CStackLimit = (uintptr_t)-1;
>>>
>>>    /*
>>>     * transposeVector above uses the R builtin function aperm instead of
>>>     * looking it up every time we need deal with transposing a multidimensional
>>>     * intput/output look it up once here and save it off
>>>     */
>>>    aperm_function = findFun(install("aperm"), R_GlobalEnv);
>>>    if (aperm_function == NULL || aperm_function == R_NilValue ||
>>> aperm_function == R_UnboundValue) {
>>>        aperm_function = NULL;
>>>    } else {
>>>        aperm_expression = PROTECT(allocVector(LANGSXP, 2));
>>>
>>>        SETCAR(aperm_expression, aperm_function);
>>>    }
>>> }
>>> ---------------------------------------- SNIP
>>> ------------------------------------------------------------------------------
>>>
>>> but as I say I still get the error and it seems like the call to
>>> Rf_initEmbeddedR just never returns. As an experiment I edited
>>> config.h.in and removed the define for HAVE_GETRLIMIT and recompiled,
>>> thus compiling out the stack checking mechanism entirely. Then
>>> everything worked great!, so I know it's the stack checking mechanism
>>> from a child thread that is falling to pieces. So what I have in mind
>>> is looking to fix this mechanism so that it works from a child thread
>>> if the pthread library is available and submitting a patch. My
>>> question is two fold, 1. Is there a way to get this to work without a
>>> code change ( I'd like to be able to offer my front end stand alone
>>> and not have to bundle R with it ) 2. If I do come up with a diff, how
>>> do I go about submitting it back to the r foundation?
>>>
>>>
>>> for completeness the version of R I am using
>>>
>>>> version
>>>               _
>>> platform       x86_64-unknown-linux-gnu
>>> arch           x86_64
>>> os             linux-gnu
>>> system         x86_64, linux-gnu
>>> status
>>> major          3
>>> minor          2.1
>>> year           2015
>>> month          06
>>> day            18
>>> svn rev        68531
>>> language       R
>>> version.string R version 3.2.1 (2015-06-18)
>>> nickname       World-Famous Astronaut
>>>
>>> compiled from source with configure options
>>> head R-3.2.1/config.log
>>> This file contains any messages produced by compilers while
>>> running configure, to aid debugging if configure makes a mistake.
>>>
>>> It was created by R configure 3.2.1, which was
>>> generated by GNU Autoconf 2.69.  Invocation command line was
>>>
>>>  $ ./configure --prefix /u/rmetzger/linux_R_vanilla --enable-R-shlib
>>>
>>> ## --------- ##
>>> ## Platform. ##
>>>
>>> thank you!
>>> Ryan


From kevinushey at gmail.com  Tue Aug 25 21:54:43 2015
From: kevinushey at gmail.com (Kevin Ushey)
Date: Tue, 25 Aug 2015 12:54:43 -0700
Subject: [Rd] Issues with libcurl + HTTP status codes (eg. 403, 404)
Message-ID: <CAJXgQP3cFoOxcU3sbX7Q8nWh8AE0Voc6KyhQ+ZUU2aLPQxDxqQ@mail.gmail.com>

Hi all,

The following fails for me (on OS X, although I imagine it's the same
on other platforms using libcurl):

    options(download.file.method = "libcurl")
    options(repos = c(CRAN = "https://cran.rstudio.com/", CRANextra =
"http://www.stats.ox.ac.uk/pub/RWin"))
    install.packages("lattice") ## could be any package

gives me:

    > options(download.file.method = "libcurl")
    > options(repos = c(CRAN = "https://cran.rstudio.com/", CRANextra
= "http://www.stats.ox.ac.uk/pub/RWin"))
    > install.packages("lattice") ## coudl be any package
    Installing package into ?/Users/kevinushey/Library/R/3.2/library?
    (as ?lib? is unspecified)
    Error: Line starting '<!DOCTYPE HTML PUBLI ...' is malformed!

This seems to come from a call to `available.packages()` to a URL that
doesn't exist on the server (likely when querying PACKAGES on the
CRANextra repo)

Eg.

    > URL <- "http://www.stats.ox.ac.uk/pub/RWin"
    > available.packages(URL, method = "internal")
    Warning: unable to access index for repository
http://www.stats.ox.ac.uk/pub/RWin
         Package Version Priority Depends Imports LinkingTo Suggests
Enhances License License_is_FOSS
        License_restricts_use OS_type Archs MD5sum NeedsCompilation
File Repository
    > available.packages(URL, method = "libcurl")
    Error: Line starting '<!DOCTYPE HTML PUBLI ...' is malformed!

It looks like libcurl downloads and retrieves the 403 page itself,
rather than reporting that it was actually forbidden, e.g.:

    > download.file("http://www.stats.ox.ac.uk/pub/RWin/bin/macosx/mavericks/contrib/3.2/PACKAGES.gz",
tempfile(), method = "libcurl")
    trying URL 'http://www.stats.ox.ac.uk/pub/RWin/bin/macosx/mavericks/contrib/3.2/PACKAGES.gz'
    Content type 'text/html; charset=iso-8859-1' length 339 bytes
    ==================================================
    downloaded 339 bytes

Using `method = "internal"` gives an error related to the inability to
access that URL due to the HTTP status 403.

The overarching issue here is that package installation shouldn't fail
even if libcurl fails to access one of the repositories set.

> sessionInfo()
R version 3.2.2 (2015-08-14)
Platform: x86_64-apple-darwin13.4.0 (64-bit)
Running under: OS X 10.10.4 (Yosemite)

locale:
[1] en_CA.UTF-8/en_CA.UTF-8/en_CA.UTF-8/C/en_CA.UTF-8/en_CA.UTF-8

attached base packages:
[1] stats     graphics  grDevices utils     datasets  methods   base

other attached packages:
[1] testthat_0.8.1.0.99  knitr_1.11           devtools_1.5.0.9001
[4] BiocInstaller_1.15.5

loaded via a namespace (and not attached):
 [1] httr_1.0.0     R6_2.0.0.9000  tools_3.2.2    parallel_3.2.2 whisker_0.3-2
 [6] RCurl_1.95-4.1 memoise_0.2.1  stringr_0.6.2  digest_0.6.4   evaluate_0.7.2

Thanks,
Kevin


From mtmorgan at fredhutch.org  Tue Aug 25 22:11:18 2015
From: mtmorgan at fredhutch.org (Martin Morgan)
Date: Tue, 25 Aug 2015 13:11:18 -0700
Subject: [Rd] Issues with libcurl + HTTP status codes (eg. 403, 404)
In-Reply-To: <CAJXgQP3cFoOxcU3sbX7Q8nWh8AE0Voc6KyhQ+ZUU2aLPQxDxqQ@mail.gmail.com>
References: <CAJXgQP3cFoOxcU3sbX7Q8nWh8AE0Voc6KyhQ+ZUU2aLPQxDxqQ@mail.gmail.com>
Message-ID: <55DCCBE6.2050901@fredhutch.org>

On 08/25/2015 12:54 PM, Kevin Ushey wrote:
> Hi all,
>
> The following fails for me (on OS X, although I imagine it's the same
> on other platforms using libcurl):
>
>      options(download.file.method = "libcurl")
>      options(repos = c(CRAN = "https://cran.rstudio.com/", CRANextra =
> "http://www.stats.ox.ac.uk/pub/RWin"))
>      install.packages("lattice") ## could be any package
>
> gives me:
>
>      > options(download.file.method = "libcurl")
>      > options(repos = c(CRAN = "https://cran.rstudio.com/", CRANextra
> = "http://www.stats.ox.ac.uk/pub/RWin"))
>      > install.packages("lattice") ## coudl be any package
>      Installing package into ?/Users/kevinushey/Library/R/3.2/library?
>      (as ?lib? is unspecified)
>      Error: Line starting '<!DOCTYPE HTML PUBLI ...' is malformed!
>
> This seems to come from a call to `available.packages()` to a URL that
> doesn't exist on the server (likely when querying PACKAGES on the
> CRANextra repo)
>
> Eg.
>
>      > URL <- "http://www.stats.ox.ac.uk/pub/RWin"
>      > available.packages(URL, method = "internal")
>      Warning: unable to access index for repository
> http://www.stats.ox.ac.uk/pub/RWin
>           Package Version Priority Depends Imports LinkingTo Suggests
> Enhances License License_is_FOSS
>          License_restricts_use OS_type Archs MD5sum NeedsCompilation
> File Repository
>      > available.packages(URL, method = "libcurl")
>      Error: Line starting '<!DOCTYPE HTML PUBLI ...' is malformed!
>
> It looks like libcurl downloads and retrieves the 403 page itself,
> rather than reporting that it was actually forbidden, e.g.:
>
>      > download.file("http://www.stats.ox.ac.uk/pub/RWin/bin/macosx/mavericks/contrib/3.2/PACKAGES.gz",
> tempfile(), method = "libcurl")
>      trying URL 'http://www.stats.ox.ac.uk/pub/RWin/bin/macosx/mavericks/contrib/3.2/PACKAGES.gz'
>      Content type 'text/html; charset=iso-8859-1' length 339 bytes
>      ==================================================
>      downloaded 339 bytes
>
> Using `method = "internal"` gives an error related to the inability to
> access that URL due to the HTTP status 403.
>
> The overarching issue here is that package installation shouldn't fail
> even if libcurl fails to access one of the repositories set.
>

With

 > R.version.string
[1] "R version 3.2.2 Patched (2015-08-25 r69179)"

the behavior is to warn with an indication of the repository for which the 
problem occurs

 > URL <- "http://www.stats.ox.ac.uk/pub/RWin"
 > available.packages(URL, method="libcurl")
Warning: unable to access index for repository http://www.stats.ox.ac.uk/pub/RWin:
   Line starting '<!DOCTYPE HTML PUBLI ...' is malformed!
      Package Version Priority Depends Imports LinkingTo Suggests Enhances
      License License_is_FOSS License_restricts_use OS_type Archs MD5sum
      NeedsCompilation File Repository
 > available.packages(URL, method="internal")
Warning: unable to access index for repository http://www.stats.ox.ac.uk/pub/RWin:
   cannot open URL 'http://www.stats.ox.ac.uk/pub/RWin/PACKAGES'
      Package Version Priority Depends Imports LinkingTo Suggests Enhances
      License License_is_FOSS License_restricts_use OS_type Archs MD5sum
      NeedsCompilation File Repository

Does that work for you / address the problem?

Martin

>> sessionInfo()
> R version 3.2.2 (2015-08-14)
> Platform: x86_64-apple-darwin13.4.0 (64-bit)
> Running under: OS X 10.10.4 (Yosemite)
>
> locale:
> [1] en_CA.UTF-8/en_CA.UTF-8/en_CA.UTF-8/C/en_CA.UTF-8/en_CA.UTF-8
>
> attached base packages:
> [1] stats     graphics  grDevices utils     datasets  methods   base
>
> other attached packages:
> [1] testthat_0.8.1.0.99  knitr_1.11           devtools_1.5.0.9001
> [4] BiocInstaller_1.15.5
>
> loaded via a namespace (and not attached):
>   [1] httr_1.0.0     R6_2.0.0.9000  tools_3.2.2    parallel_3.2.2 whisker_0.3-2
>   [6] RCurl_1.95-4.1 memoise_0.2.1  stringr_0.6.2  digest_0.6.4   evaluate_0.7.2
>
> Thanks,
> Kevin
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>


-- 
Computational Biology / Fred Hutchinson Cancer Research Center
1100 Fairview Ave. N.
PO Box 19024 Seattle, WA 98109

Location: Arnold Building M1 B861
Phone: (206) 667-2793


From kevinushey at gmail.com  Tue Aug 25 22:30:22 2015
From: kevinushey at gmail.com (Kevin Ushey)
Date: Tue, 25 Aug 2015 20:30:22 +0000
Subject: [Rd] Issues with libcurl + HTTP status codes (eg. 403, 404)
In-Reply-To: <55DCCBE6.2050901@fredhutch.org>
References: <CAJXgQP3cFoOxcU3sbX7Q8nWh8AE0Voc6KyhQ+ZUU2aLPQxDxqQ@mail.gmail.com>
	<55DCCBE6.2050901@fredhutch.org>
Message-ID: <CAJXgQP2Br8wBtC4tQcNfaWSf12ZgaJxJvnFtAXR_MnpzS0jGEQ@mail.gmail.com>

Hi Martin,

Indeed it does (and I should have confirmed myself with R-patched and
R-devel before posting...)

Thanks, and sorry for the noise.
Kevin

On Tue, Aug 25, 2015, 13:11 Martin Morgan <mtmorgan at fredhutch.org> wrote:

> On 08/25/2015 12:54 PM, Kevin Ushey wrote:
> > Hi all,
> >
> > The following fails for me (on OS X, although I imagine it's the same
> > on other platforms using libcurl):
> >
> >      options(download.file.method = "libcurl")
> >      options(repos = c(CRAN = "https://cran.rstudio.com/", CRANextra =
> > "http://www.stats.ox.ac.uk/pub/RWin"))
> >      install.packages("lattice") ## could be any package
> >
> > gives me:
> >
> >      > options(download.file.method = "libcurl")
> >      > options(repos = c(CRAN = "https://cran.rstudio.com/", CRANextra
> > = "http://www.stats.ox.ac.uk/pub/RWin"))
> >      > install.packages("lattice") ## coudl be any package
> >      Installing package into ?/Users/kevinushey/Library/R/3.2/library?
> >      (as ?lib? is unspecified)
> >      Error: Line starting '<!DOCTYPE HTML PUBLI ...' is malformed!
> >
> > This seems to come from a call to `available.packages()` to a URL that
> > doesn't exist on the server (likely when querying PACKAGES on the
> > CRANextra repo)
> >
> > Eg.
> >
> >      > URL <- "http://www.stats.ox.ac.uk/pub/RWin"
> >      > available.packages(URL, method = "internal")
> >      Warning: unable to access index for repository
> > http://www.stats.ox.ac.uk/pub/RWin
> >           Package Version Priority Depends Imports LinkingTo Suggests
> > Enhances License License_is_FOSS
> >          License_restricts_use OS_type Archs MD5sum NeedsCompilation
> > File Repository
> >      > available.packages(URL, method = "libcurl")
> >      Error: Line starting '<!DOCTYPE HTML PUBLI ...' is malformed!
> >
> > It looks like libcurl downloads and retrieves the 403 page itself,
> > rather than reporting that it was actually forbidden, e.g.:
> >
> >      > download.file("
> http://www.stats.ox.ac.uk/pub/RWin/bin/macosx/mavericks/contrib/3.2/PACKAGES.gz
> ",
> > tempfile(), method = "libcurl")
> >      trying URL '
> http://www.stats.ox.ac.uk/pub/RWin/bin/macosx/mavericks/contrib/3.2/PACKAGES.gz
> '
> >      Content type 'text/html; charset=iso-8859-1' length 339 bytes
> >      ==================================================
> >      downloaded 339 bytes
> >
> > Using `method = "internal"` gives an error related to the inability to
> > access that URL due to the HTTP status 403.
> >
> > The overarching issue here is that package installation shouldn't fail
> > even if libcurl fails to access one of the repositories set.
> >
>
> With
>
>  > R.version.string
> [1] "R version 3.2.2 Patched (2015-08-25 r69179)"
>
> the behavior is to warn with an indication of the repository for which the
> problem occurs
>
>  > URL <- "http://www.stats.ox.ac.uk/pub/RWin"
>  > available.packages(URL, method="libcurl")
> Warning: unable to access index for repository
> http://www.stats.ox.ac.uk/pub/RWin:
>    Line starting '<!DOCTYPE HTML PUBLI ...' is malformed!
>       Package Version Priority Depends Imports LinkingTo Suggests Enhances
>       License License_is_FOSS License_restricts_use OS_type Archs MD5sum
>       NeedsCompilation File Repository
>  > available.packages(URL, method="internal")
> Warning: unable to access index for repository
> http://www.stats.ox.ac.uk/pub/RWin:
>    cannot open URL 'http://www.stats.ox.ac.uk/pub/RWin/PACKAGES'
>       Package Version Priority Depends Imports LinkingTo Suggests Enhances
>       License License_is_FOSS License_restricts_use OS_type Archs MD5sum
>       NeedsCompilation File Repository
>
> Does that work for you / address the problem?
>
> Martin
>
> >> sessionInfo()
> > R version 3.2.2 (2015-08-14)
> > Platform: x86_64-apple-darwin13.4.0 (64-bit)
> > Running under: OS X 10.10.4 (Yosemite)
> >
> > locale:
> > [1] en_CA.UTF-8/en_CA.UTF-8/en_CA.UTF-8/C/en_CA.UTF-8/en_CA.UTF-8
> >
> > attached base packages:
> > [1] stats     graphics  grDevices utils     datasets  methods   base
> >
> > other attached packages:
> > [1] testthat_0.8.1.0.99  knitr_1.11           devtools_1.5.0.9001
> > [4] BiocInstaller_1.15.5
> >
> > loaded via a namespace (and not attached):
> >   [1] httr_1.0.0     R6_2.0.0.9000  tools_3.2.2    parallel_3.2.2
> whisker_0.3-2
> >   [6] RCurl_1.95-4.1 memoise_0.2.1  stringr_0.6.2  digest_0.6.4
>  evaluate_0.7.2
> >
> > Thanks,
> > Kevin
> >
> > ______________________________________________
> > R-devel at r-project.org mailing list
> > https://stat.ethz.ch/mailman/listinfo/r-devel
> >
>
>
> --
> Computational Biology / Fred Hutchinson Cancer Research Center
> 1100 Fairview Ave. N.
> PO Box 19024 Seattle, WA 98109
>
> Location: Arnold Building M1 B861
> Phone: (206) 667-2793
>

	[[alternative HTML version deleted]]


From mtmorgan at fredhutch.org  Tue Aug 25 22:33:39 2015
From: mtmorgan at fredhutch.org (Martin Morgan)
Date: Tue, 25 Aug 2015 13:33:39 -0700
Subject: [Rd] Issues with libcurl + HTTP status codes (eg. 403, 404)
In-Reply-To: <CAJXgQP2Br8wBtC4tQcNfaWSf12ZgaJxJvnFtAXR_MnpzS0jGEQ@mail.gmail.com>
References: <CAJXgQP3cFoOxcU3sbX7Q8nWh8AE0Voc6KyhQ+ZUU2aLPQxDxqQ@mail.gmail.com>
	<55DCCBE6.2050901@fredhutch.org>
	<CAJXgQP2Br8wBtC4tQcNfaWSf12ZgaJxJvnFtAXR_MnpzS0jGEQ@mail.gmail.com>
Message-ID: <55DCD123.1010205@fredhutch.org>

On 08/25/2015 01:30 PM, Kevin Ushey wrote:
> Hi Martin,
>
> Indeed it does (and I should have confirmed myself with R-patched and R-devel
> before posting...)

actually I don't know that it does -- it addresses the symptom but I think there 
should be an error from libcurl on the 403 / 404 rather than from read.dcf on 
error page...

Martin


>
> Thanks, and sorry for the noise.
> Kevin
>
>
> On Tue, Aug 25, 2015, 13:11 Martin Morgan <mtmorgan at fredhutch.org
> <mailto:mtmorgan at fredhutch.org>> wrote:
>
>     On 08/25/2015 12:54 PM, Kevin Ushey wrote:
>      > Hi all,
>      >
>      > The following fails for me (on OS X, although I imagine it's the same
>      > on other platforms using libcurl):
>      >
>      >      options(download.file.method = "libcurl")
>      >      options(repos = c(CRAN = "https://cran.rstudio.com/", CRANextra =
>      > "http://www.stats.ox.ac.uk/pub/RWin"))
>      >      install.packages("lattice") ## could be any package
>      >
>      > gives me:
>      >
>      >      > options(download.file.method = "libcurl")
>      >      > options(repos = c(CRAN = "https://cran.rstudio.com/", CRANextra
>      > = "http://www.stats.ox.ac.uk/pub/RWin"))
>      >      > install.packages("lattice") ## coudl be any package
>      >      Installing package into ?/Users/kevinushey/Library/R/3.2/library?
>      >      (as ?lib? is unspecified)
>      >      Error: Line starting '<!DOCTYPE HTML PUBLI ...' is malformed!
>      >
>      > This seems to come from a call to `available.packages()` to a URL that
>      > doesn't exist on the server (likely when querying PACKAGES on the
>      > CRANextra repo)
>      >
>      > Eg.
>      >
>      >      > URL <- "http://www.stats.ox.ac.uk/pub/RWin"
>      >      > available.packages(URL, method = "internal")
>      >      Warning: unable to access index for repository
>      > http://www.stats.ox.ac.uk/pub/RWin
>      >           Package Version Priority Depends Imports LinkingTo Suggests
>      > Enhances License License_is_FOSS
>      >          License_restricts_use OS_type Archs MD5sum NeedsCompilation
>      > File Repository
>      >      > available.packages(URL, method = "libcurl")
>      >      Error: Line starting '<!DOCTYPE HTML PUBLI ...' is malformed!
>      >
>      > It looks like libcurl downloads and retrieves the 403 page itself,
>      > rather than reporting that it was actually forbidden, e.g.:
>      >
>      >      >
>     download.file("http://www.stats.ox.ac.uk/pub/RWin/bin/macosx/mavericks/contrib/3.2/PACKAGES.gz",
>      > tempfile(), method = "libcurl")
>      >      trying URL
>     'http://www.stats.ox.ac.uk/pub/RWin/bin/macosx/mavericks/contrib/3.2/PACKAGES.gz'
>      >      Content type 'text/html; charset=iso-8859-1' length 339 bytes
>      >      ==================================================
>      >      downloaded 339 bytes
>      >
>      > Using `method = "internal"` gives an error related to the inability to
>      > access that URL due to the HTTP status 403.
>      >
>      > The overarching issue here is that package installation shouldn't fail
>      > even if libcurl fails to access one of the repositories set.
>      >
>
>     With
>
>       > R.version.string
>     [1] "R version 3.2.2 Patched (2015-08-25 r69179)"
>
>     the behavior is to warn with an indication of the repository for which the
>     problem occurs
>
>       > URL <- "http://www.stats.ox.ac.uk/pub/RWin"
>       > available.packages(URL, method="libcurl")
>     Warning: unable to access index for repository
>     http://www.stats.ox.ac.uk/pub/RWin:
>         Line starting '<!DOCTYPE HTML PUBLI ...' is malformed!
>            Package Version Priority Depends Imports LinkingTo Suggests Enhances
>            License License_is_FOSS License_restricts_use OS_type Archs MD5sum
>            NeedsCompilation File Repository
>       > available.packages(URL, method="internal")
>     Warning: unable to access index for repository
>     http://www.stats.ox.ac.uk/pub/RWin:
>         cannot open URL 'http://www.stats.ox.ac.uk/pub/RWin/PACKAGES'
>            Package Version Priority Depends Imports LinkingTo Suggests Enhances
>            License License_is_FOSS License_restricts_use OS_type Archs MD5sum
>            NeedsCompilation File Repository
>
>     Does that work for you / address the problem?
>
>     Martin
>
>      >> sessionInfo()
>      > R version 3.2.2 (2015-08-14)
>      > Platform: x86_64-apple-darwin13.4.0 (64-bit)
>      > Running under: OS X 10.10.4 (Yosemite)
>      >
>      > locale:
>      > [1] en_CA.UTF-8/en_CA.UTF-8/en_CA.UTF-8/C/en_CA.UTF-8/en_CA.UTF-8
>      >
>      > attached base packages:
>      > [1] stats     graphics  grDevices utils     datasets  methods   base
>      >
>      > other attached packages:
>      > [1] testthat_0.8.1.0.99  knitr_1.11           devtools_1.5.0.9001
>      > [4] BiocInstaller_1.15.5
>      >
>      > loaded via a namespace (and not attached):
>      >   [1] httr_1.0.0     R6_2.0.0.9000  tools_3.2.2    parallel_3.2.2
>     whisker_0.3-2
>      >   [6] RCurl_1.95-4.1 memoise_0.2.1  stringr_0.6.2  digest_0.6.4
>       evaluate_0.7.2
>      >
>      > Thanks,
>      > Kevin
>      >
>      > ______________________________________________
>      > R-devel at r-project.org <mailto:R-devel at r-project.org> mailing list
>      > https://stat.ethz.ch/mailman/listinfo/r-devel
>      >
>
>
>     --
>     Computational Biology / Fred Hutchinson Cancer Research Center
>     1100 Fairview Ave. N.
>     PO Box 19024 Seattle, WA 98109
>
>     Location: Arnold Building M1 B861
>     Phone: (206) 667-2793
>


-- 
Computational Biology / Fred Hutchinson Cancer Research Center
1100 Fairview Ave. N.
PO Box 19024 Seattle, WA 98109

Location: Arnold Building M1 B861
Phone: (206) 667-2793


From kevinushey at gmail.com  Tue Aug 25 23:41:28 2015
From: kevinushey at gmail.com (Kevin Ushey)
Date: Tue, 25 Aug 2015 14:41:28 -0700
Subject: [Rd] Issues with libcurl + HTTP status codes (eg. 403, 404)
In-Reply-To: <55DCD123.1010205@fredhutch.org>
References: <CAJXgQP3cFoOxcU3sbX7Q8nWh8AE0Voc6KyhQ+ZUU2aLPQxDxqQ@mail.gmail.com>
	<55DCCBE6.2050901@fredhutch.org>
	<CAJXgQP2Br8wBtC4tQcNfaWSf12ZgaJxJvnFtAXR_MnpzS0jGEQ@mail.gmail.com>
	<55DCD123.1010205@fredhutch.org>
Message-ID: <CAJXgQP0=VhKBXvBc4+LPZx0YrksHaZi1Y5kS2krJisCJd0c1=g@mail.gmail.com>

In fact, this does reproduce on R-devel:

    > options(download.file.method = "libcurl")
    > options(repos = c(CRAN = "https://cran.rstudio.com/", CRANextra =
    + "http://www.stats.ox.ac.uk/pub/RWin"))
    > install.packages("lattice") ## could be any package
    Installing package into ?/Users/kevinushey/Library/R/3.3/library?
(as ?lib? is unspecified)
    Error: Line starting '<!DOCTYPE HTML PUBLI ...' is malformed!

    > sessionInfo()
    R Under development (unstable) (2015-08-14 r69078)
    Platform: x86_64-apple-darwin13.4.0 (64-bit)
    Running under: OS X 10.10.4 (Yosemite)

I think this could be problematic for users with custom CRAN
repositories. For example, if I have a CRAN repository that only
serves source packages (no binary packages), this implies that any R
session configured to download binary packages would fail to download
any packages at all (as it would barf on attempting to read the
non-existent PACKAGES file for the 'binary' branch of the custom
repository).

This can also be seen by attempting to install a package using current
R-devel (since no binaries are made available for R 3.3):

    > options(download.file.method = "libcurl")
    > options(repos = c(CRAN = "https://cran.rstudio.com/"))
    > print(getOption("pkgType"))
    [1] "both"
    > install.packages("lattice")
    Installing package into ?/Users/kevinushey/Library/R/3.3/library?
    (as ?lib? is unspecified)
    Error in install.packages : Line starting '<!DOCTYPE HTML PUBLI
...' is malformed!

The same error (with a different, XML response) is returned when using
e.g. `https://cran.fhcrc.org`.

Kevin

On Tue, Aug 25, 2015 at 1:33 PM, Martin Morgan <mtmorgan at fredhutch.org> wrote:
> On 08/25/2015 01:30 PM, Kevin Ushey wrote:
>>
>> Hi Martin,
>>
>> Indeed it does (and I should have confirmed myself with R-patched and
>> R-devel
>> before posting...)
>
>
> actually I don't know that it does -- it addresses the symptom but I think
> there should be an error from libcurl on the 403 / 404 rather than from
> read.dcf on error page...
>
> Martin
>
>
>>
>> Thanks, and sorry for the noise.
>> Kevin
>>
>>
>> On Tue, Aug 25, 2015, 13:11 Martin Morgan <mtmorgan at fredhutch.org
>> <mailto:mtmorgan at fredhutch.org>> wrote:
>>
>>     On 08/25/2015 12:54 PM, Kevin Ushey wrote:
>>      > Hi all,
>>      >
>>      > The following fails for me (on OS X, although I imagine it's the
>> same
>>      > on other platforms using libcurl):
>>      >
>>      >      options(download.file.method = "libcurl")
>>      >      options(repos = c(CRAN = "https://cran.rstudio.com/",
>> CRANextra =
>>      > "http://www.stats.ox.ac.uk/pub/RWin"))
>>      >      install.packages("lattice") ## could be any package
>>      >
>>      > gives me:
>>      >
>>      >      > options(download.file.method = "libcurl")
>>      >      > options(repos = c(CRAN = "https://cran.rstudio.com/",
>> CRANextra
>>      > = "http://www.stats.ox.ac.uk/pub/RWin"))
>>      >      > install.packages("lattice") ## coudl be any package
>>      >      Installing package into
>> ?/Users/kevinushey/Library/R/3.2/library?
>>      >      (as ?lib? is unspecified)
>>      >      Error: Line starting '<!DOCTYPE HTML PUBLI ...' is malformed!
>>      >
>>      > This seems to come from a call to `available.packages()` to a URL
>> that
>>      > doesn't exist on the server (likely when querying PACKAGES on the
>>      > CRANextra repo)
>>      >
>>      > Eg.
>>      >
>>      >      > URL <- "http://www.stats.ox.ac.uk/pub/RWin"
>>      >      > available.packages(URL, method = "internal")
>>      >      Warning: unable to access index for repository
>>      > http://www.stats.ox.ac.uk/pub/RWin
>>      >           Package Version Priority Depends Imports LinkingTo
>> Suggests
>>      > Enhances License License_is_FOSS
>>      >          License_restricts_use OS_type Archs MD5sum
>> NeedsCompilation
>>      > File Repository
>>      >      > available.packages(URL, method = "libcurl")
>>      >      Error: Line starting '<!DOCTYPE HTML PUBLI ...' is malformed!
>>      >
>>      > It looks like libcurl downloads and retrieves the 403 page itself,
>>      > rather than reporting that it was actually forbidden, e.g.:
>>      >
>>      >      >
>>
>> download.file("http://www.stats.ox.ac.uk/pub/RWin/bin/macosx/mavericks/contrib/3.2/PACKAGES.gz",
>>      > tempfile(), method = "libcurl")
>>      >      trying URL
>>
>> 'http://www.stats.ox.ac.uk/pub/RWin/bin/macosx/mavericks/contrib/3.2/PACKAGES.gz'
>>      >      Content type 'text/html; charset=iso-8859-1' length 339 bytes
>>      >      ==================================================
>>      >      downloaded 339 bytes
>>      >
>>      > Using `method = "internal"` gives an error related to the inability
>> to
>>      > access that URL due to the HTTP status 403.
>>      >
>>      > The overarching issue here is that package installation shouldn't
>> fail
>>      > even if libcurl fails to access one of the repositories set.
>>      >
>>
>>     With
>>
>>       > R.version.string
>>     [1] "R version 3.2.2 Patched (2015-08-25 r69179)"
>>
>>     the behavior is to warn with an indication of the repository for which
>> the
>>     problem occurs
>>
>>       > URL <- "http://www.stats.ox.ac.uk/pub/RWin"
>>       > available.packages(URL, method="libcurl")
>>     Warning: unable to access index for repository
>>     http://www.stats.ox.ac.uk/pub/RWin:
>>         Line starting '<!DOCTYPE HTML PUBLI ...' is malformed!
>>            Package Version Priority Depends Imports LinkingTo Suggests
>> Enhances
>>            License License_is_FOSS License_restricts_use OS_type Archs
>> MD5sum
>>            NeedsCompilation File Repository
>>       > available.packages(URL, method="internal")
>>     Warning: unable to access index for repository
>>     http://www.stats.ox.ac.uk/pub/RWin:
>>         cannot open URL 'http://www.stats.ox.ac.uk/pub/RWin/PACKAGES'
>>            Package Version Priority Depends Imports LinkingTo Suggests
>> Enhances
>>            License License_is_FOSS License_restricts_use OS_type Archs
>> MD5sum
>>            NeedsCompilation File Repository
>>
>>     Does that work for you / address the problem?
>>
>>     Martin
>>
>>      >> sessionInfo()
>>      > R version 3.2.2 (2015-08-14)
>>      > Platform: x86_64-apple-darwin13.4.0 (64-bit)
>>      > Running under: OS X 10.10.4 (Yosemite)
>>      >
>>      > locale:
>>      > [1] en_CA.UTF-8/en_CA.UTF-8/en_CA.UTF-8/C/en_CA.UTF-8/en_CA.UTF-8
>>      >
>>      > attached base packages:
>>      > [1] stats     graphics  grDevices utils     datasets  methods
>> base
>>      >
>>      > other attached packages:
>>      > [1] testthat_0.8.1.0.99  knitr_1.11           devtools_1.5.0.9001
>>      > [4] BiocInstaller_1.15.5
>>      >
>>      > loaded via a namespace (and not attached):
>>      >   [1] httr_1.0.0     R6_2.0.0.9000  tools_3.2.2    parallel_3.2.2
>>     whisker_0.3-2
>>      >   [6] RCurl_1.95-4.1 memoise_0.2.1  stringr_0.6.2  digest_0.6.4
>>       evaluate_0.7.2
>>      >
>>      > Thanks,
>>      > Kevin
>>      >
>>      > ______________________________________________
>>      > R-devel at r-project.org <mailto:R-devel at r-project.org> mailing list
>>      > https://stat.ethz.ch/mailman/listinfo/r-devel
>>      >
>>
>>
>>     --
>>     Computational Biology / Fred Hutchinson Cancer Research Center
>>     1100 Fairview Ave. N.
>>     PO Box 19024 Seattle, WA 98109
>>
>>     Location: Arnold Building M1 B861
>>     Phone: (206) 667-2793
>>
>
>
> --
> Computational Biology / Fred Hutchinson Cancer Research Center
> 1100 Fairview Ave. N.
> PO Box 19024 Seattle, WA 98109
>
> Location: Arnold Building M1 B861
> Phone: (206) 667-2793


From kevinushey at gmail.com  Wed Aug 26 00:58:55 2015
From: kevinushey at gmail.com (Kevin Ushey)
Date: Tue, 25 Aug 2015 15:58:55 -0700
Subject: [Rd] Issues with libcurl + HTTP status codes (eg. 403, 404)
In-Reply-To: <CAJXgQP0=VhKBXvBc4+LPZx0YrksHaZi1Y5kS2krJisCJd0c1=g@mail.gmail.com>
References: <CAJXgQP3cFoOxcU3sbX7Q8nWh8AE0Voc6KyhQ+ZUU2aLPQxDxqQ@mail.gmail.com>
	<55DCCBE6.2050901@fredhutch.org>
	<CAJXgQP2Br8wBtC4tQcNfaWSf12ZgaJxJvnFtAXR_MnpzS0jGEQ@mail.gmail.com>
	<55DCD123.1010205@fredhutch.org>
	<CAJXgQP0=VhKBXvBc4+LPZx0YrksHaZi1Y5kS2krJisCJd0c1=g@mail.gmail.com>
Message-ID: <CAJXgQP3_8tnjJ63dvmOqW4GbZkGhHZ+GMX6EukY9EB30FkgRvQ@mail.gmail.com>

(final post, sorry to be spamming everyone all day...)

As kindly pointed out by Martin off-list, I was in fact using an old
version of R-devel (it looks like the binaries provided at
http://r.research.att.com/ are currently stale -- although the page
lists r69167 as the current version, the binaries being distributed
are for r69078).

Building R locally with trunk (r69180) and testing confirms that
errors no longer clobber the whole `install.packages()` process;
having the various download methods respect HTTP status / error codes
when using `libcurl` is still an issue but one I imagine that R-core
is aware of.

Thanks, and apologies again for the spam,
Kevin

On Tue, Aug 25, 2015 at 2:41 PM, Kevin Ushey <kevinushey at gmail.com> wrote:
> In fact, this does reproduce on R-devel:
>
>     > options(download.file.method = "libcurl")
>     > options(repos = c(CRAN = "https://cran.rstudio.com/", CRANextra =
>     + "http://www.stats.ox.ac.uk/pub/RWin"))
>     > install.packages("lattice") ## could be any package
>     Installing package into ?/Users/kevinushey/Library/R/3.3/library?
> (as ?lib? is unspecified)
>     Error: Line starting '<!DOCTYPE HTML PUBLI ...' is malformed!
>
>     > sessionInfo()
>     R Under development (unstable) (2015-08-14 r69078)
>     Platform: x86_64-apple-darwin13.4.0 (64-bit)
>     Running under: OS X 10.10.4 (Yosemite)
>
> I think this could be problematic for users with custom CRAN
> repositories. For example, if I have a CRAN repository that only
> serves source packages (no binary packages), this implies that any R
> session configured to download binary packages would fail to download
> any packages at all (as it would barf on attempting to read the
> non-existent PACKAGES file for the 'binary' branch of the custom
> repository).
>
> This can also be seen by attempting to install a package using current
> R-devel (since no binaries are made available for R 3.3):
>
>     > options(download.file.method = "libcurl")
>     > options(repos = c(CRAN = "https://cran.rstudio.com/"))
>     > print(getOption("pkgType"))
>     [1] "both"
>     > install.packages("lattice")
>     Installing package into ?/Users/kevinushey/Library/R/3.3/library?
>     (as ?lib? is unspecified)
>     Error in install.packages : Line starting '<!DOCTYPE HTML PUBLI
> ...' is malformed!
>
> The same error (with a different, XML response) is returned when using
> e.g. `https://cran.fhcrc.org`.
>
> Kevin
>
> On Tue, Aug 25, 2015 at 1:33 PM, Martin Morgan <mtmorgan at fredhutch.org> wrote:
>> On 08/25/2015 01:30 PM, Kevin Ushey wrote:
>>>
>>> Hi Martin,
>>>
>>> Indeed it does (and I should have confirmed myself with R-patched and
>>> R-devel
>>> before posting...)
>>
>>
>> actually I don't know that it does -- it addresses the symptom but I think
>> there should be an error from libcurl on the 403 / 404 rather than from
>> read.dcf on error page...
>>
>> Martin
>>
>>
>>>
>>> Thanks, and sorry for the noise.
>>> Kevin
>>>
>>>
>>> On Tue, Aug 25, 2015, 13:11 Martin Morgan <mtmorgan at fredhutch.org
>>> <mailto:mtmorgan at fredhutch.org>> wrote:
>>>
>>>     On 08/25/2015 12:54 PM, Kevin Ushey wrote:
>>>      > Hi all,
>>>      >
>>>      > The following fails for me (on OS X, although I imagine it's the
>>> same
>>>      > on other platforms using libcurl):
>>>      >
>>>      >      options(download.file.method = "libcurl")
>>>      >      options(repos = c(CRAN = "https://cran.rstudio.com/",
>>> CRANextra =
>>>      > "http://www.stats.ox.ac.uk/pub/RWin"))
>>>      >      install.packages("lattice") ## could be any package
>>>      >
>>>      > gives me:
>>>      >
>>>      >      > options(download.file.method = "libcurl")
>>>      >      > options(repos = c(CRAN = "https://cran.rstudio.com/",
>>> CRANextra
>>>      > = "http://www.stats.ox.ac.uk/pub/RWin"))
>>>      >      > install.packages("lattice") ## coudl be any package
>>>      >      Installing package into
>>> ?/Users/kevinushey/Library/R/3.2/library?
>>>      >      (as ?lib? is unspecified)
>>>      >      Error: Line starting '<!DOCTYPE HTML PUBLI ...' is malformed!
>>>      >
>>>      > This seems to come from a call to `available.packages()` to a URL
>>> that
>>>      > doesn't exist on the server (likely when querying PACKAGES on the
>>>      > CRANextra repo)
>>>      >
>>>      > Eg.
>>>      >
>>>      >      > URL <- "http://www.stats.ox.ac.uk/pub/RWin"
>>>      >      > available.packages(URL, method = "internal")
>>>      >      Warning: unable to access index for repository
>>>      > http://www.stats.ox.ac.uk/pub/RWin
>>>      >           Package Version Priority Depends Imports LinkingTo
>>> Suggests
>>>      > Enhances License License_is_FOSS
>>>      >          License_restricts_use OS_type Archs MD5sum
>>> NeedsCompilation
>>>      > File Repository
>>>      >      > available.packages(URL, method = "libcurl")
>>>      >      Error: Line starting '<!DOCTYPE HTML PUBLI ...' is malformed!
>>>      >
>>>      > It looks like libcurl downloads and retrieves the 403 page itself,
>>>      > rather than reporting that it was actually forbidden, e.g.:
>>>      >
>>>      >      >
>>>
>>> download.file("http://www.stats.ox.ac.uk/pub/RWin/bin/macosx/mavericks/contrib/3.2/PACKAGES.gz",
>>>      > tempfile(), method = "libcurl")
>>>      >      trying URL
>>>
>>> 'http://www.stats.ox.ac.uk/pub/RWin/bin/macosx/mavericks/contrib/3.2/PACKAGES.gz'
>>>      >      Content type 'text/html; charset=iso-8859-1' length 339 bytes
>>>      >      ==================================================
>>>      >      downloaded 339 bytes
>>>      >
>>>      > Using `method = "internal"` gives an error related to the inability
>>> to
>>>      > access that URL due to the HTTP status 403.
>>>      >
>>>      > The overarching issue here is that package installation shouldn't
>>> fail
>>>      > even if libcurl fails to access one of the repositories set.
>>>      >
>>>
>>>     With
>>>
>>>       > R.version.string
>>>     [1] "R version 3.2.2 Patched (2015-08-25 r69179)"
>>>
>>>     the behavior is to warn with an indication of the repository for which
>>> the
>>>     problem occurs
>>>
>>>       > URL <- "http://www.stats.ox.ac.uk/pub/RWin"
>>>       > available.packages(URL, method="libcurl")
>>>     Warning: unable to access index for repository
>>>     http://www.stats.ox.ac.uk/pub/RWin:
>>>         Line starting '<!DOCTYPE HTML PUBLI ...' is malformed!
>>>            Package Version Priority Depends Imports LinkingTo Suggests
>>> Enhances
>>>            License License_is_FOSS License_restricts_use OS_type Archs
>>> MD5sum
>>>            NeedsCompilation File Repository
>>>       > available.packages(URL, method="internal")
>>>     Warning: unable to access index for repository
>>>     http://www.stats.ox.ac.uk/pub/RWin:
>>>         cannot open URL 'http://www.stats.ox.ac.uk/pub/RWin/PACKAGES'
>>>            Package Version Priority Depends Imports LinkingTo Suggests
>>> Enhances
>>>            License License_is_FOSS License_restricts_use OS_type Archs
>>> MD5sum
>>>            NeedsCompilation File Repository
>>>
>>>     Does that work for you / address the problem?
>>>
>>>     Martin
>>>
>>>      >> sessionInfo()
>>>      > R version 3.2.2 (2015-08-14)
>>>      > Platform: x86_64-apple-darwin13.4.0 (64-bit)
>>>      > Running under: OS X 10.10.4 (Yosemite)
>>>      >
>>>      > locale:
>>>      > [1] en_CA.UTF-8/en_CA.UTF-8/en_CA.UTF-8/C/en_CA.UTF-8/en_CA.UTF-8
>>>      >
>>>      > attached base packages:
>>>      > [1] stats     graphics  grDevices utils     datasets  methods
>>> base
>>>      >
>>>      > other attached packages:
>>>      > [1] testthat_0.8.1.0.99  knitr_1.11           devtools_1.5.0.9001
>>>      > [4] BiocInstaller_1.15.5
>>>      >
>>>      > loaded via a namespace (and not attached):
>>>      >   [1] httr_1.0.0     R6_2.0.0.9000  tools_3.2.2    parallel_3.2.2
>>>     whisker_0.3-2
>>>      >   [6] RCurl_1.95-4.1 memoise_0.2.1  stringr_0.6.2  digest_0.6.4
>>>       evaluate_0.7.2
>>>      >
>>>      > Thanks,
>>>      > Kevin
>>>      >
>>>      > ______________________________________________
>>>      > R-devel at r-project.org <mailto:R-devel at r-project.org> mailing list
>>>      > https://stat.ethz.ch/mailman/listinfo/r-devel
>>>      >
>>>
>>>
>>>     --
>>>     Computational Biology / Fred Hutchinson Cancer Research Center
>>>     1100 Fairview Ave. N.
>>>     PO Box 19024 Seattle, WA 98109
>>>
>>>     Location: Arnold Building M1 B861
>>>     Phone: (206) 667-2793
>>>
>>
>>
>> --
>> Computational Biology / Fred Hutchinson Cancer Research Center
>> 1100 Fairview Ave. N.
>> PO Box 19024 Seattle, WA 98109
>>
>> Location: Arnold Building M1 B861
>> Phone: (206) 667-2793


From maechler at stat.math.ethz.ch  Wed Aug 26 10:54:27 2015
From: maechler at stat.math.ethz.ch (Martin Maechler)
Date: Wed, 26 Aug 2015 10:54:27 +0200
Subject: [Rd] match()/%in% with language objects?
In-Reply-To: <CAF8bMcbLb1FT2B4umf6jAYAB0hRBViaqA+c7W-XmDn5DrunoBA@mail.gmail.com>
References: <55DC940B.8080701@gmail.com>
	<CAF8bMcbLb1FT2B4umf6jAYAB0hRBViaqA+c7W-XmDn5DrunoBA@mail.gmail.com>
Message-ID: <21981.32451.725608.366953@stat.math.ethz.ch>

>>>>> William Dunlap <wdunlap at tibco.com>
>>>>>     on Tue, 25 Aug 2015 09:47:23 -0700 writes:

    > match(x,table) and x%in%table work when x and table are lists of language
    > objects or expressions.  E.g.,

    > expression(quote(1+2), quote(log2(16))) %in% expression(3, quote(1+2), c(4L,5L,6L,7L))
    > #[1]  TRUE FALSE
    > list(quote(1+2), quote(log2(16))) %in% list(3, quote(1+2), c(4L,5L,6L,7L))
    > #[1]  TRUE FALSE
    > match(list(quote(1+2), quote(log2(16))),  list(3, quote(1+2), c(4L,5L,6L,7L)))
    > #[1]  2 NA

yes, or slightly more naturally for the first case,

 > expression(1+2, log2(16)) %in% expression(3, 1+2, c(4L,5L,6L,7L))
 [1]  TRUE FALSE


    > With your example data:
    > spList[1] %in% spList
    > #[1] TRUE
    > list(quote(foo)) %in% spList
    > #[1] TRUE
    > list(quote(nosuchsymbol)) %in% spList
    > #[1] FALSE

yes  indeed, that works because list()s and expression()s are
"vector"s in the wide sense, as "we all" know.

Did you support Ben's  wish to allow 'symbol' (aka 'name') objects as well,
or even more general language objects (as by the subject's wording) ?

Internally, in these cases the matches do happen with character
coerced objects eventually; still I'd tend to agree that allowing some of
these as arguments to match() in addition to the
wide-sense-vectors (and NULL !) would make sense.

Martin



    > Bill Dunlap
    > TIBCO Software
    > wdunlap tibco.com

    > On Tue, Aug 25, 2015 at 9:12 AM, Ben Bolker <bbolker at gmail.com> wrote:

    >> -----BEGIN PGP SIGNED MESSAGE-----
    >> Hash: SHA1
    >> 
    >> 
    >> I haven't yet dug into the internals of match() yet to see what's
    >> going on, but I'm wondering whether there's a design reason why I
    >> can't use %in% (which is a wrapper for match()) on language objects.
    >> 
    >> I'd like to test whether a language object is in a list of language
    >> objects, but I get the error "'match' requires vector arguments":
    >> 
    >> specials <- c("foo","bar")
    >> spList <- lapply(specials,as.name)  ## convert to language objects
    >> "a" %in% spList  ## works (FALSE)
    >> spList[[1]] %in% spList ##   'match' requires vector arguments
    >> quote(foo) %in% spList  ## ditto
    >> quote(foo) == spList[[1]]  ## TRUE
    >> 
    >> obviously I can go the other way, converting my target into text:
    >> 
    >> deparse(spList[[1]]) %in% specials  ## TRUE
    >> 
    >> I could also write my own function to loop through the list and stop
    >> when I find it.  But I'd prefer to use built-in functionality if possible.
    >> 
    >> Does anyone have any clues/see what I'm missing?
    >> 
    >> cheers
    >> Ben Bolker
    >> -----BEGIN PGP SIGNATURE-----
    >> Version: GnuPG v1.4.11 (GNU/Linux)
    >> 
    >> iQEcBAEBAgAGBQJV3JQLAAoJEOCV5YRblxUHTEkIAJluX0F2bLGW1jt1FP2UEZs1
    >> hucBzPGxpHdGE0CAE2Q2rPtKPmJsZdOpkpBPcxorLj4F6C70yY9QmdNlZ1i/spQB
    >> k33EbUsD2XZGcfIVRGSnc1q9QS2vcWRuyC89GRle8xPVD8MfwiV/EMQi4hBk1v9q
    >> TTOug7e1c+I+PtbvrQHpQrCc/1h609I7UqPCOdYbak3xwQC4VNSJ1A8n5w4N+RsV
    >> UVEMkOmhLnwzk6pSSC0dbyOKUluklc5ZYBX8aEM0Cd9bUYhoqc2aXUc7ocsL3f9J
    >> BHlDhy0kfjfwv4wqg/sFKLMIX2IQPxM2zrcd3v1hhEXOYGi7KoHHpZaihbFmEfQ=
    >> =w3OR
    >> -----END PGP SIGNATURE-----
    >> 
    >> ______________________________________________
    >> R-devel at r-project.org mailing list
    >> https://stat.ethz.ch/mailman/listinfo/r-devel
    >> 

    > [[alternative HTML version deleted]]

    > ______________________________________________
    > R-devel at r-project.org mailing list
    > https://stat.ethz.ch/mailman/listinfo/r-devel


From t.jombart at imperial.ac.uk  Wed Aug 26 12:43:35 2015
From: t.jombart at imperial.ac.uk (Jombart, Thibaut)
Date: Wed, 26 Aug 2015 10:43:35 +0000
Subject: [Rd] declaring dependencies of shiny app in inst/
Message-ID: <2CB2DA8E426F3541AB1907F98ABA6570B128F718@icexch-m1.ic.ac.uk>

Dear all, 

I have a package implementing a shiny app, putting the R code of the app (server.R and ui.R) in inst/... and then having a simple function merely starting the app with something along the lines of:
runApp(system.file("inst/..."))

However, the app itself uses functions from packages which are not used elsewhere in the code. What is the best way to declare these dependencies (using roxygen2)? My 2-cents would be e.g a doc.R file with something along the lines of:
[...]
#' @importFrom pkg function1 function2
NULL

But are their better ways / best practices?

On a related topic: are there plans of formally incorporating shiny apps in the structure of a R package, so that the checks will run through the code of the apps as well? 

Cheers
Thibaut

==============================
Dr Thibaut Jombart
MRC Centre for Outbreak Analysis and Modelling
Department of Infectious Disease Epidemiology
Imperial College - School of Public Health
Norfolk Place, London W2 1PG, UK
Tel. : 0044 (0)20 7594 3658
http://sites.google.com/site/thibautjombart/
http://sites.google.com/site/therepiproject/
http://adegenet.r-forge.r-project.org/
Twitter: @thibautjombart







From murdoch.duncan at gmail.com  Wed Aug 26 13:30:26 2015
From: murdoch.duncan at gmail.com (Duncan Murdoch)
Date: Wed, 26 Aug 2015 07:30:26 -0400
Subject: [Rd] declaring dependencies of shiny app in inst/
In-Reply-To: <2CB2DA8E426F3541AB1907F98ABA6570B128F718@icexch-m1.ic.ac.uk>
References: <2CB2DA8E426F3541AB1907F98ABA6570B128F718@icexch-m1.ic.ac.uk>
Message-ID: <55DDA352.2060801@gmail.com>

On 26/08/2015 6:43 AM, Jombart, Thibaut wrote:
> Dear all, 
> 
> I have a package implementing a shiny app, putting the R code of the app (server.R and ui.R) in inst/... and then having a simple function merely starting the app with something along the lines of:
> runApp(system.file("inst/..."))
> 
> However, the app itself uses functions from packages which are not used elsewhere in the code. What is the best way to declare these dependencies (using roxygen2)? My 2-cents would be e.g a doc.R file with something along the lines of:
> [...]
> #' @importFrom pkg function1 function2
> NULL
> 
> But are their better ways / best practices?

You'll have to ask questions like these on a Shiny forum.

> On a related topic: are there plans of formally incorporating shiny apps in the structure of a R package, so that the checks will run through the code of the apps as well? 

No, but it would be very easy to do:  just write a function that tests
those things, and call it from a script in the tests directory.

Duncan Murdoch


From t.jombart at imperial.ac.uk  Wed Aug 26 14:00:41 2015
From: t.jombart at imperial.ac.uk (Jombart, Thibaut)
Date: Wed, 26 Aug 2015 12:00:41 +0000
Subject: [Rd] declaring dependencies of shiny app in inst/
In-Reply-To: <55DDA352.2060801@gmail.com>
References: <2CB2DA8E426F3541AB1907F98ABA6570B128F718@icexch-m1.ic.ac.uk>,
	<55DDA352.2060801@gmail.com>
Message-ID: <2CB2DA8E426F3541AB1907F98ABA6570B128F783@icexch-m1.ic.ac.uk>

Hi there

thanks for the answer. 

>> But are their better ways / best practices?
>You'll have to ask questions like these on a Shiny forum.

Done. New thread there: https://goo.gl/17hsAa

>> On a related topic: are there plans of formally incorporating shiny apps in the structure of a R package, so that the checks will run through the code of the apps as well?

> No, but it would be very easy to do:  just write a function that tests
> those things, and call it from a script in the tests directory.

Yes, though in this case tests would merely check that the code can be sourced without error. I was thinking more of looking for unstated dependencies in code effectively used by the package, though indirectly. I guess it is only relevant if distributing shiny apps alongisde packages becomes common practice. I am not sure how trendy it is yet, but wouldn't be surprised to see it become increasingly frequent.

Cheers
Thibaut 

> Duncan Murdoch



From murdoch.duncan at gmail.com  Wed Aug 26 14:22:44 2015
From: murdoch.duncan at gmail.com (Duncan Murdoch)
Date: Wed, 26 Aug 2015 08:22:44 -0400
Subject: [Rd] declaring dependencies of shiny app in inst/
In-Reply-To: <2CB2DA8E426F3541AB1907F98ABA6570B128F783@icexch-m1.ic.ac.uk>
References: <2CB2DA8E426F3541AB1907F98ABA6570B128F718@icexch-m1.ic.ac.uk>
	<55DDA352.2060801@gmail.com>
	<2CB2DA8E426F3541AB1907F98ABA6570B128F783@icexch-m1.ic.ac.uk>
Message-ID: <55DDAF94.2050806@gmail.com>

On 26/08/2015 8:00 AM, Jombart, Thibaut wrote:
> Hi there
> 
> thanks for the answer. 
> 
>>> But are their better ways / best practices?
>> You'll have to ask questions like these on a Shiny forum.
> 
> Done. New thread there: https://goo.gl/17hsAa
> 
>>> On a related topic: are there plans of formally incorporating shiny apps in the structure of a R package, so that the checks will run through the code of the apps as well?
> 
>> No, but it would be very easy to do:  just write a function that tests
>> those things, and call it from a script in the tests directory.
> 
> Yes, though in this case tests would merely check that the code can be sourced without error. I was thinking more of looking for unstated dependencies in code effectively used by the package, though indirectly. I guess it is only relevant if distributing shiny apps alongisde packages becomes common practice. I am not sure how trendy it is yet, but wouldn't be surprised to see it become increasingly frequent.

Your test function can test whatever interests you.  If you want to test
for dependencies, just do it.  You can see how R implements those tests
by looking in the tools package, and either use them directly, or modify
them to your needs.

Duncan Murdoch


From wdunlap at tibco.com  Wed Aug 26 18:03:59 2015
From: wdunlap at tibco.com (William Dunlap)
Date: Wed, 26 Aug 2015 09:03:59 -0700
Subject: [Rd] match()/%in% with language objects?
In-Reply-To: <21981.32451.725608.366953@stat.math.ethz.ch>
References: <55DC940B.8080701@gmail.com>
	<CAF8bMcbLb1FT2B4umf6jAYAB0hRBViaqA+c7W-XmDn5DrunoBA@mail.gmail.com>
	<21981.32451.725608.366953@stat.math.ethz.ch>
Message-ID: <CAF8bMcYJshr=0Tqwkpv1yy+Z-FQy49T0NjNv59cmwX=xXD3mog@mail.gmail.com>

>Did you support Ben's  wish to allow 'symbol' (aka 'name') objects as well,
>or even more general language objects (as by the subject's wording) ?

Do you mean should match treat
    match(quote(foo), list(as.name("bar"), as.name("foo"))) # error
the same as
    match(list(quote(foo)), list(as.name("bar"), as.name("foo"))) # 2
?  I don't think that would be good - 'x' needs to be a list or expression
in the length!=1 cases, so it should be one in all cases.

On the other hand it would be nice to fix up things like
  > list(list(quote(foo)), quote(list(foo))) %in% list(quote(list(foo)))
  [1] TRUE TRUE
either by using calls to identical() in the match/hashing code or
adding "quoteExpressions" when deparsing the language objects.
  x <- list(list(quote(foo)), quote(list(foo)))
  table <- list(quote(list(foo)))
  x %in% table
  #[1] TRUE TRUE
  lapply(x, deparse) %in% lapply(table, deparse)
  #[1] TRUE TRUE
  lapply(x, deparse, control="quoteExpressions") %in% lapply(table,
deparse, control="quoteExpressions")
  #[1] FALSE  TRUE

duplicated() already seems to do the right thing in that case:
  duplicated(x)
  #[1] FALSE FALSE
  duplicated(x[c(1,2,1)])
  #[1] FALSE FALSE  TRUE





Bill Dunlap
TIBCO Software
wdunlap tibco.com

On Wed, Aug 26, 2015 at 1:54 AM, Martin Maechler <maechler at stat.math.ethz.ch
> wrote:

> >>>>> William Dunlap <wdunlap at tibco.com>
> >>>>>     on Tue, 25 Aug 2015 09:47:23 -0700 writes:
>
>     > match(x,table) and x%in%table work when x and table are lists of
> language
>     > objects or expressions.  E.g.,
>
>     > expression(quote(1+2), quote(log2(16))) %in% expression(3,
> quote(1+2), c(4L,5L,6L,7L))
>     > #[1]  TRUE FALSE
>     > list(quote(1+2), quote(log2(16))) %in% list(3, quote(1+2),
> c(4L,5L,6L,7L))
>     > #[1]  TRUE FALSE
>     > match(list(quote(1+2), quote(log2(16))),  list(3, quote(1+2),
> c(4L,5L,6L,7L)))
>     > #[1]  2 NA
>
> yes, or slightly more naturally for the first case,
>
>  > expression(1+2, log2(16)) %in% expression(3, 1+2, c(4L,5L,6L,7L))
>  [1]  TRUE FALSE
>
>
>     > With your example data:
>     > spList[1] %in% spList
>     > #[1] TRUE
>     > list(quote(foo)) %in% spList
>     > #[1] TRUE
>     > list(quote(nosuchsymbol)) %in% spList
>     > #[1] FALSE
>
> yes  indeed, that works because list()s and expression()s are
> "vector"s in the wide sense, as "we all" know.
>
> Did you support Ben's  wish to allow 'symbol' (aka 'name') objects as well,
> or even more general language objects (as by the subject's wording) ?
>
> Internally, in these cases the matches do happen with character
> coerced objects eventually; still I'd tend to agree that allowing some of
> these as arguments to match() in addition to the
> wide-sense-vectors (and NULL !) would make sense.
>
> Martin
>
>
>
>     > Bill Dunlap
>     > TIBCO Software
>     > wdunlap tibco.com
>
>     > On Tue, Aug 25, 2015 at 9:12 AM, Ben Bolker <bbolker at gmail.com>
> wrote:
>
>     >> -----BEGIN PGP SIGNED MESSAGE-----
>     >> Hash: SHA1
>     >>
>     >>
>     >> I haven't yet dug into the internals of match() yet to see what's
>     >> going on, but I'm wondering whether there's a design reason why I
>     >> can't use %in% (which is a wrapper for match()) on language objects.
>     >>
>     >> I'd like to test whether a language object is in a list of language
>     >> objects, but I get the error "'match' requires vector arguments":
>     >>
>     >> specials <- c("foo","bar")
>     >> spList <- lapply(specials,as.name)  ## convert to language objects
>     >> "a" %in% spList  ## works (FALSE)
>     >> spList[[1]] %in% spList ##   'match' requires vector arguments
>     >> quote(foo) %in% spList  ## ditto
>     >> quote(foo) == spList[[1]]  ## TRUE
>     >>
>     >> obviously I can go the other way, converting my target into text:
>     >>
>     >> deparse(spList[[1]]) %in% specials  ## TRUE
>     >>
>     >> I could also write my own function to loop through the list and stop
>     >> when I find it.  But I'd prefer to use built-in functionality if
> possible.
>     >>
>     >> Does anyone have any clues/see what I'm missing?
>     >>
>     >> cheers
>     >> Ben Bolker
>     >> -----BEGIN PGP SIGNATURE-----
>     >> Version: GnuPG v1.4.11 (GNU/Linux)
>     >>
>     >> iQEcBAEBAgAGBQJV3JQLAAoJEOCV5YRblxUHTEkIAJluX0F2bLGW1jt1FP2UEZs1
>     >> hucBzPGxpHdGE0CAE2Q2rPtKPmJsZdOpkpBPcxorLj4F6C70yY9QmdNlZ1i/spQB
>     >> k33EbUsD2XZGcfIVRGSnc1q9QS2vcWRuyC89GRle8xPVD8MfwiV/EMQi4hBk1v9q
>     >> TTOug7e1c+I+PtbvrQHpQrCc/1h609I7UqPCOdYbak3xwQC4VNSJ1A8n5w4N+RsV
>     >> UVEMkOmhLnwzk6pSSC0dbyOKUluklc5ZYBX8aEM0Cd9bUYhoqc2aXUc7ocsL3f9J
>     >> BHlDhy0kfjfwv4wqg/sFKLMIX2IQPxM2zrcd3v1hhEXOYGi7KoHHpZaihbFmEfQ=
>     >> =w3OR
>     >> -----END PGP SIGNATURE-----
>     >>
>     >> ______________________________________________
>     >> R-devel at r-project.org mailing list
>     >> https://stat.ethz.ch/mailman/listinfo/r-devel
>     >>
>
>     > [[alternative HTML version deleted]]
>
>     > ______________________________________________
>     > R-devel at r-project.org mailing list
>     > https://stat.ethz.ch/mailman/listinfo/r-devel
>

	[[alternative HTML version deleted]]


From hpages at fredhutch.org  Wed Aug 26 19:26:14 2015
From: hpages at fredhutch.org (=?UTF-8?B?SGVydsOpIFBhZ8Oocw==?=)
Date: Wed, 26 Aug 2015 10:26:14 -0700
Subject: [Rd] sprintf error: "only 100 arguments allowed"
In-Reply-To: <55DC30A4.9060504@stats.ox.ac.uk>
References: <CALEtyTH5HKBsyVdrt7mCDCfAC5vBmOtShX8C7dVjGQs6LsKQ0Q@mail.gmail.com>
	<55DC30A4.9060504@stats.ox.ac.uk>
Message-ID: <55DDF6B6.9090303@fredhutch.org>

Wouldn't it make sense to have this in the man page?

The 8192-byte limitation for 'fmt' is mentioned but not this one.

Thanks,
H.

On 08/25/2015 02:08 AM, Prof Brian Ripley wrote:
>  From the sources:
>
> #define MAXNARGS 100
> /*               ^^^ not entirely arbitrary, but strongly linked to
> allowing %$1 to %$99 !*/
>
>
>
> On 22/08/2015 04:21, Martin Bel wrote:
>> I'm trying to apply a function defined in the VW R docs, that attemps to
>> convert a data.table object to Vowpal Wabbit format. In the process i'm
>> getting the error in printf mentioned in the subject.
>> The original function is here:
>> https://github.com/JohnLangford/vowpal_wabbit/blob/master/R/dt2vw.R
>>
>>
>> Below there is a small example that reproduces the error. The function
>> works great with smaller (less than 100 columns), as shown.
>>
>> Any suggestions of alternative methods to acomplish the same would be
>> great, but I'm basically asking, is there a reason for the 100 arguments
>> limitation?
>>
>>
>> # Source this function#
>> https://github.com/JohnLangford/vowpal_wabbit/blob/master/R/dt2vw.R
>> # Here is a gist
>> source('https://gist.githubusercontent.com/martinbel/a013c2bd2333b85eeb76/raw/7b68ede0385f3d8684a07854e8d6ca527b9cd441/dt2vw.R')
>>
>>
>> library(data.table)
>>
>> X = cbind(matrix(rnorm(1:1010), nrow=10, ncol=101), sample(c(1, -1),
>> 10, T))
>> X = as.data.table(X)
>> X[, weight:=ifelse(V102 == 1, 3, 1)]
>> # check out function arguments
>> head(dt2vw, 2)# function (data, fileName, namespaces = NULL, target,
>> weight = NULL, #                 tag = NULL, hard_parse = F)
>>
>> namespaces = list(a = list(varName = sprintf('V%s',1:50), keepSpace=F),
>>                    b = list(varName = sprintf('V%s',51:101),
>> keepSpace=F))
>>
>> dt2vw(data=X, fileName='../out.vw', namespaces = NULL,
>>        target='V102', weight = 'weight',
>>        tag = NULL, hard_parse = F)
>> ### error
>> # [1] "sprintf('%f %f |A V1:%f V2:%f V3:%f V4:%f V5:%f V6:%f V7:%f
>> V8:%f V9:%f V10:%f V11:%f V12:%f V13:%f V14:%f V15:%f V16:%f V17:%f
>> V18:%f V19:%f V20:%f V21:%f V22:%f V23:%f V24:%f V25:%f V26:%f V27:%f
>> V28:%f V29:%f V30:%f V31:%f V32:%f V33:%f V34:%f V35:%f V36:%f V37:%f
>> V38:%f V39:%f V40:%f V41:%f V42:%f V43:%f V44:%f V45:%f V46:%f V47:%f
>> V48:%f V49:%f V50:%f V51:%f V52:%f V53:%f V54:%f V55:%f V56:%f V57:%f
>> V58:%f V59:%f V60:%f V61:%f V62:%f V63:%f V64:%f V65:%f V66:%f V67:%f
>> V68:%f V69:%f V70:%f V71:%f V72:%f V73:%f V74:%f V75:%f V76:%f V77:%f
>> V78:%f V79:%f V80:%f V81:%f V82:%f V83:%f V84:%f V85:%f V86:%f V87:%f
>> V88:%f V89:%f V90:%f V91:%f V92:%f V93:%f V94:%f V95:%f V96:%f V97:%f
>> V98:%f V99:%f V100:%f V101:%f ',V102, weight, V1, V2, V3, V4, V5, V6,
>> V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20,
>> V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31, V32, V33, V34,
>> V35, V36, V37, V38, V39, V40, V41, V42, V43, V44, V45, V46, V47, V48,
>> V49, V50, V51, V52, V53, V54, V55, V56, V57, V58, V59, V60, V61, V62,
>> V63, V64, V65, V66, V67, V68, V69, V70, V71, V72, V73, V74, V75, V76,
>> V77, V78, V79, V80, V81, V82, V83, V84, V85, V86, V87, V88, V89, V90,
>> V91, V92, V93, V94, V95, V96, V97, V98, V99, V100, V101)"
>> # Error in sprintf("%f %f |A V1:%f V2:%f V3:%f V4:%f V5:%f V6:%f V7:%f
>> V8:%f V9:%f V10:%f V11:%f V12:%f V13:%f V14:%f V15:%f V16:%f V17:%f
>> V18:%f V19:%f V20:%f V21:%f V22:%f V23:%f V24:%f V25:%f V26:%f V27:%f
>> V28:%f V29:%f V30:%f V31:%f V32:%f V33:%f V34:%f V35:%f V36:%f V37:%f
>> V38:%f V39:%f V40:%f V41:%f V42:%f V43:%f V44:%f V45:%f V46:%f V47:%f
>> V48:%f V49:%f V50:%f V51:%f V52:%f V53:%f V54:%f V55:%f V56:%f V57:%f
>> V58:%f V59:%f V60:%f V61:%f V62:%f V63:%f V64:%f V65:%f V66:%f V67:%f
>> V68:%f V69:%f V70:%f V71:%f V72:%f V73:%f V74:%f V75:%f V76:%f V77:%f
>> V78:%f V79:%f V80:%f V81:%f V82:%f V83:%f V84:%f V85:%f V86:%f V87:%f
>> V88:%f V89:%f V90:%f V91:%f V92:%f V93:%f V94:%f V95:%f V96:%f V97:%f
>> V98:%f V99:%f V100:%f V101:%f ",  : # only 100 arguments are allowed
>> # works
>> dt2vw(data=X[, 50:dim(X)[2], with=FALSE],
>>        fileName='../out.vw', namespaces = NULL,
>>        target='V102', weight = 'weight',
>>        tag = NULL, hard_parse = F)
>>
>> system('head -3 ../out.vw')
>>
>>     [[alternative HTML version deleted]]
>>
>> ______________________________________________
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>
>
>

-- 
Herv? Pag?s

Program in Computational Biology
Division of Public Health Sciences
Fred Hutchinson Cancer Research Center
1100 Fairview Ave. N, M1-B514
P.O. Box 19024
Seattle, WA 98109-1024

E-mail: hpages at fredhutch.org
Phone:  (206) 667-5791
Fax:    (206) 667-1319


From jeroen.ooms at stat.ucla.edu  Thu Aug 27 00:04:06 2015
From: jeroen.ooms at stat.ucla.edu (Jeroen Ooms)
Date: Thu, 27 Aug 2015 00:04:06 +0200
Subject: [Rd] Issues with libcurl + HTTP status codes (eg. 403, 404)
In-Reply-To: <55DCD123.1010205@fredhutch.org>
References: <CAJXgQP3cFoOxcU3sbX7Q8nWh8AE0Voc6KyhQ+ZUU2aLPQxDxqQ@mail.gmail.com>
	<55DCCBE6.2050901@fredhutch.org>
	<CAJXgQP2Br8wBtC4tQcNfaWSf12ZgaJxJvnFtAXR_MnpzS0jGEQ@mail.gmail.com>
	<55DCD123.1010205@fredhutch.org>
Message-ID: <CABFfbXuJSxA-t+vaFNKug550ONVgdtOcH79AJRbHwCO4biuZrA@mail.gmail.com>

On Tue, Aug 25, 2015 at 10:33 PM, Martin Morgan <mtmorgan at fredhutch.org> wrote:
>
> actually I don't know that it does -- it addresses the symptom but I think there should be an error from libcurl on the 403 / 404 rather than from read.dcf on error page...

Indeed, the only correct behavior is to turn the protocol error code
into an R exception. When the server returns a status code >= 400, it
indicates that the request was unsuccessful and the response body does
not contain the content the client had requested, but should instead
be interpreted as an error message/page. Ignoring this fact and
proceeding with parsing the body as usual is incorrect and leads to
all kind of strange errors downstream.

The other download methods did this correctly, it is unclear why the
current implementation of the "libcurl" method does not. Not only does
it lead to hard to interpret downstream parsing errors, it also makes
the behavior of R ambiguous as it is dependent on which download
method is in use. It is certainly not a limitation of the libcurl
library: the 'curl' package has alternative implementations of url()
and download.file() which exercise the correct behavior.

I can only speculate, but if the motivation is to explicitly support
retrieval of error pages, perhaps the download.file() and url()
functions can gain an argument 'stop_on_error' or something similar
which give the user an option to ignore server errors. However this
behavior should certainly not be the default. When a function or
script contains a line like this:

  download.file("https://someserver.com/mydata.csv", "mydata.csv")

Then in the next line of code we must be able to expect that the file
"mydata.csv" we have downloaded to our disk is in fact the file
"mydata.csv" that was requested from the server. An implementation
that instead saves an error page (likely html content) to the
"mydata.csv" file is simply incorrect and will lead to obvious
problems, even with a warning.


[1] https://www.opencpu.org/posts/cran-https/


From m4rbel at gmail.com  Thu Aug 27 00:13:42 2015
From: m4rbel at gmail.com (Martin Bel)
Date: Wed, 26 Aug 2015 19:13:42 -0300
Subject: [Rd] sprintf error: "only 100 arguments allowed"
In-Reply-To: <55DDF6B6.9090303@fredhutch.org>
References: <CALEtyTH5HKBsyVdrt7mCDCfAC5vBmOtShX8C7dVjGQs6LsKQ0Q@mail.gmail.com>
	<55DC30A4.9060504@stats.ox.ac.uk> <55DDF6B6.9090303@fredhutch.org>
Message-ID: <CALEtyTF3HvoxdSdti3FWwj1YzLbGS-Z34DpG4sPjoP5gVhVGfA@mail.gmail.com>

Thanks for the help Herv?, sprintf2 does the job! Brillant!
I see Brian, thanks. I imagined it was there for a reason, but had to
check. I guess you don't pass more than 100 arguments to sprintf every day.
;)
Best.
Mart?n



2015-08-26 14:26 GMT-03:00 Herv? Pag?s <hpages at fredhutch.org>:

> Wouldn't it make sense to have this in the man page?
>
> The 8192-byte limitation for 'fmt' is mentioned but not this one.
>
> Thanks,
> H.
>
>
> On 08/25/2015 02:08 AM, Prof Brian Ripley wrote:
>
>>  From the sources:
>>
>> #define MAXNARGS 100
>> /*               ^^^ not entirely arbitrary, but strongly linked to
>> allowing %$1 to %$99 !*/
>>
>>
>>
>> On 22/08/2015 04:21, Martin Bel wrote:
>>
>>> I'm trying to apply a function defined in the VW R docs, that attemps to
>>> convert a data.table object to Vowpal Wabbit format. In the process i'm
>>> getting the error in printf mentioned in the subject.
>>> The original function is here:
>>> https://github.com/JohnLangford/vowpal_wabbit/blob/master/R/dt2vw.R
>>>
>>>
>>> Below there is a small example that reproduces the error. The function
>>> works great with smaller (less than 100 columns), as shown.
>>>
>>> Any suggestions of alternative methods to acomplish the same would be
>>> great, but I'm basically asking, is there a reason for the 100 arguments
>>> limitation?
>>>
>>>
>>> # Source this function#
>>> https://github.com/JohnLangford/vowpal_wabbit/blob/master/R/dt2vw.R
>>> # Here is a gist
>>> source('
>>> https://gist.githubusercontent.com/martinbel/a013c2bd2333b85eeb76/raw/7b68ede0385f3d8684a07854e8d6ca527b9cd441/dt2vw.R
>>> ')
>>>
>>>
>>> library(data.table)
>>>
>>> X = cbind(matrix(rnorm(1:1010), nrow=10, ncol=101), sample(c(1, -1),
>>> 10, T))
>>> X = as.data.table(X)
>>> X[, weight:=ifelse(V102 == 1, 3, 1)]
>>> # check out function arguments
>>> head(dt2vw, 2)# function (data, fileName, namespaces = NULL, target,
>>> weight = NULL, #                 tag = NULL, hard_parse = F)
>>>
>>> namespaces = list(a = list(varName = sprintf('V%s',1:50), keepSpace=F),
>>>                    b = list(varName = sprintf('V%s',51:101),
>>> keepSpace=F))
>>>
>>> dt2vw(data=X, fileName='../out.vw', namespaces = NULL,
>>>        target='V102', weight = 'weight',
>>>        tag = NULL, hard_parse = F)
>>> ### error
>>> # [1] "sprintf('%f %f |A V1:%f V2:%f V3:%f V4:%f V5:%f V6:%f V7:%f
>>> V8:%f V9:%f V10:%f V11:%f V12:%f V13:%f V14:%f V15:%f V16:%f V17:%f
>>> V18:%f V19:%f V20:%f V21:%f V22:%f V23:%f V24:%f V25:%f V26:%f V27:%f
>>> V28:%f V29:%f V30:%f V31:%f V32:%f V33:%f V34:%f V35:%f V36:%f V37:%f
>>> V38:%f V39:%f V40:%f V41:%f V42:%f V43:%f V44:%f V45:%f V46:%f V47:%f
>>> V48:%f V49:%f V50:%f V51:%f V52:%f V53:%f V54:%f V55:%f V56:%f V57:%f
>>> V58:%f V59:%f V60:%f V61:%f V62:%f V63:%f V64:%f V65:%f V66:%f V67:%f
>>> V68:%f V69:%f V70:%f V71:%f V72:%f V73:%f V74:%f V75:%f V76:%f V77:%f
>>> V78:%f V79:%f V80:%f V81:%f V82:%f V83:%f V84:%f V85:%f V86:%f V87:%f
>>> V88:%f V89:%f V90:%f V91:%f V92:%f V93:%f V94:%f V95:%f V96:%f V97:%f
>>> V98:%f V99:%f V100:%f V101:%f ',V102, weight, V1, V2, V3, V4, V5, V6,
>>> V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20,
>>> V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31, V32, V33, V34,
>>> V35, V36, V37, V38, V39, V40, V41, V42, V43, V44, V45, V46, V47, V48,
>>> V49, V50, V51, V52, V53, V54, V55, V56, V57, V58, V59, V60, V61, V62,
>>> V63, V64, V65, V66, V67, V68, V69, V70, V71, V72, V73, V74, V75, V76,
>>> V77, V78, V79, V80, V81, V82, V83, V84, V85, V86, V87, V88, V89, V90,
>>> V91, V92, V93, V94, V95, V96, V97, V98, V99, V100, V101)"
>>> # Error in sprintf("%f %f |A V1:%f V2:%f V3:%f V4:%f V5:%f V6:%f V7:%f
>>> V8:%f V9:%f V10:%f V11:%f V12:%f V13:%f V14:%f V15:%f V16:%f V17:%f
>>> V18:%f V19:%f V20:%f V21:%f V22:%f V23:%f V24:%f V25:%f V26:%f V27:%f
>>> V28:%f V29:%f V30:%f V31:%f V32:%f V33:%f V34:%f V35:%f V36:%f V37:%f
>>> V38:%f V39:%f V40:%f V41:%f V42:%f V43:%f V44:%f V45:%f V46:%f V47:%f
>>> V48:%f V49:%f V50:%f V51:%f V52:%f V53:%f V54:%f V55:%f V56:%f V57:%f
>>> V58:%f V59:%f V60:%f V61:%f V62:%f V63:%f V64:%f V65:%f V66:%f V67:%f
>>> V68:%f V69:%f V70:%f V71:%f V72:%f V73:%f V74:%f V75:%f V76:%f V77:%f
>>> V78:%f V79:%f V80:%f V81:%f V82:%f V83:%f V84:%f V85:%f V86:%f V87:%f
>>> V88:%f V89:%f V90:%f V91:%f V92:%f V93:%f V94:%f V95:%f V96:%f V97:%f
>>> V98:%f V99:%f V100:%f V101:%f ",  : # only 100 arguments are allowed
>>> # works
>>> dt2vw(data=X[, 50:dim(X)[2], with=FALSE],
>>>        fileName='../out.vw', namespaces = NULL,
>>>        target='V102', weight = 'weight',
>>>        tag = NULL, hard_parse = F)
>>>
>>> system('head -3 ../out.vw')
>>>
>>>     [[alternative HTML version deleted]]
>>>
>>> ______________________________________________
>>> R-devel at r-project.org mailing list
>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>>
>>>
>>
>>
> --
> Herv? Pag?s
>
> Program in Computational Biology
> Division of Public Health Sciences
> Fred Hutchinson Cancer Research Center
> 1100 Fairview Ave. N, M1-B514
> P.O. Box 19024
> Seattle, WA 98109-1024
>
> E-mail: hpages at fredhutch.org
> Phone:  (206) 667-5791
> Fax:    (206) 667-1319
>

	[[alternative HTML version deleted]]


From murdoch.duncan at gmail.com  Thu Aug 27 01:07:23 2015
From: murdoch.duncan at gmail.com (Duncan Murdoch)
Date: Wed, 26 Aug 2015 19:07:23 -0400
Subject: [Rd] Issues with libcurl + HTTP status codes (eg. 403, 404)
In-Reply-To: <CABFfbXuJSxA-t+vaFNKug550ONVgdtOcH79AJRbHwCO4biuZrA@mail.gmail.com>
References: <CAJXgQP3cFoOxcU3sbX7Q8nWh8AE0Voc6KyhQ+ZUU2aLPQxDxqQ@mail.gmail.com>
	<55DCCBE6.2050901@fredhutch.org>
	<CAJXgQP2Br8wBtC4tQcNfaWSf12ZgaJxJvnFtAXR_MnpzS0jGEQ@mail.gmail.com>
	<55DCD123.1010205@fredhutch.org>
	<CABFfbXuJSxA-t+vaFNKug550ONVgdtOcH79AJRbHwCO4biuZrA@mail.gmail.com>
Message-ID: <55DE46AB.4080508@gmail.com>

On 26/08/2015 6:04 PM, Jeroen Ooms wrote:
> On Tue, Aug 25, 2015 at 10:33 PM, Martin Morgan <mtmorgan at fredhutch.org> wrote:
>>
>> actually I don't know that it does -- it addresses the symptom but I think there should be an error from libcurl on the 403 / 404 rather than from read.dcf on error page...
> 
> Indeed, the only correct behavior is to turn the protocol error code
> into an R exception. When the server returns a status code >= 400, it
> indicates that the request was unsuccessful and the response body does
> not contain the content the client had requested, but should instead
> be interpreted as an error message/page. Ignoring this fact and
> proceeding with parsing the body as usual is incorrect and leads to
> all kind of strange errors downstream.

Yes.  I haven't been following this long thread.  Is it only in R-devel,
or is this happening in 3.2.2 or R-patched?

If the latter, please submit a bug report.  If it is only R-devel,
please just be patient.  When R-devel becomes R-alpha next year, if the
bug still exists, please report it.

Duncan Murdoch

> 
> The other download methods did this correctly, it is unclear why the
> current implementation of the "libcurl" method does not. Not only does
> it lead to hard to interpret downstream parsing errors, it also makes
> the behavior of R ambiguous as it is dependent on which download
> method is in use. It is certainly not a limitation of the libcurl
> library: the 'curl' package has alternative implementations of url()
> and download.file() which exercise the correct behavior.
> 
> I can only speculate, but if the motivation is to explicitly support
> retrieval of error pages, perhaps the download.file() and url()
> functions can gain an argument 'stop_on_error' or something similar
> which give the user an option to ignore server errors. However this
> behavior should certainly not be the default. When a function or
> script contains a line like this:
> 
>   download.file("https://someserver.com/mydata.csv", "mydata.csv")
> 
> Then in the next line of code we must be able to expect that the file
> "mydata.csv" we have downloaded to our disk is in fact the file
> "mydata.csv" that was requested from the server. An implementation
> that instead saves an error page (likely html content) to the
> "mydata.csv" file is simply incorrect and will lead to obvious
> problems, even with a warning.
> 
> 
> [1] https://www.opencpu.org/posts/cran-https/
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>


From pauljohn32 at gmail.com  Thu Aug 27 16:02:17 2015
From: pauljohn32 at gmail.com (Paul Johnson)
Date: Thu, 27 Aug 2015 09:02:17 -0500
Subject: [Rd] Proposed change in file.exists() to tolerate Windows
Message-ID: <CAErODj9qf7BiGV1n9Vu9d0nyiCeOFQm7DJzTrH0vZgTQsm5nTQ@mail.gmail.com>

I'm writing to ask if R Core would make file.exists more Windows
tolerant when the argument has a trailing slash. This has been
discussed by users a few times here, I know it is not a new topic. But
it is not a solved problem, yet. I acknowledge that CRAN packages
exist which fix this by replacing file.exists(), but it seems more
elegant to me to fix the problem in R itself.

R Core goes to great extremes to accommodate Windows users and the
refusal to make file.exists() work in a cross-platform way is
incongruous.

I often do have slashes on the end of directory names being tested.
Now that I understand the meaning of ?file.exists,  I need to wrap the
name being checked in a slash-deleter

## delete trailing slashes
dts <- function(name) gsub("/$", "", name)
if(!file.exists(dts(any_name))) { ...

Can't you make file.exists do this invisibly? Maybe the argument could
be filtered through normalizePath() instead.

If not, would you please consider putting a workaround like mine into
the file.exists documentation so Windows users can see how easy this
is to avoid?

Respectfully yours,

pj

-- 
Paul E. Johnson
Professor, Political Science        Director
1541 Lilac Lane, Room 504      Center for Research Methods
University of Kansas                 University of Kansas
http://pj.freefaculty.org              http://crmda.ku.edu


From wdunlap at tibco.com  Thu Aug 27 16:16:46 2015
From: wdunlap at tibco.com (William Dunlap)
Date: Thu, 27 Aug 2015 07:16:46 -0700
Subject: [Rd] Proposed change in file.exists() to tolerate Windows
In-Reply-To: <CAErODj9qf7BiGV1n9Vu9d0nyiCeOFQm7DJzTrH0vZgTQsm5nTQ@mail.gmail.com>
References: <CAErODj9qf7BiGV1n9Vu9d0nyiCeOFQm7DJzTrH0vZgTQsm5nTQ@mail.gmail.com>
Message-ID: <CAF8bMcY9dn8Uu9ua3wykkrCjeuKR1=jMS6o=pYHi=GonWwOVyQ@mail.gmail.com>

   ## delete trailing slashes
   dts <- function(name) gsub("/$", "", name)
   if(!file.exists(dts(any_name))) { ...

I don't think you want to delete the slash in "C:/" on Windows,
as "C:" is not a file and "C:/" is.  normalizePath() does odd things
with "C:" as well.



Bill Dunlap
TIBCO Software
wdunlap tibco.com

On Thu, Aug 27, 2015 at 7:02 AM, Paul Johnson <pauljohn32 at gmail.com> wrote:

> I'm writing to ask if R Core would make file.exists more Windows
> tolerant when the argument has a trailing slash. This has been
> discussed by users a few times here, I know it is not a new topic. But
> it is not a solved problem, yet. I acknowledge that CRAN packages
> exist which fix this by replacing file.exists(), but it seems more
> elegant to me to fix the problem in R itself.
>
> R Core goes to great extremes to accommodate Windows users and the
> refusal to make file.exists() work in a cross-platform way is
> incongruous.
>
> I often do have slashes on the end of directory names being tested.
> Now that I understand the meaning of ?file.exists,  I need to wrap the
> name being checked in a slash-deleter
>
> ## delete trailing slashes
> dts <- function(name) gsub("/$", "", name)
> if(!file.exists(dts(any_name))) { ...
>
> Can't you make file.exists do this invisibly? Maybe the argument could
> be filtered through normalizePath() instead.
>
> If not, would you please consider putting a workaround like mine into
> the file.exists documentation so Windows users can see how easy this
> is to avoid?
>
> Respectfully yours,
>
> pj
>
> --
> Paul E. Johnson
> Professor, Political Science        Director
> 1541 Lilac Lane, Room 504      Center for Research Methods
> University of Kansas                 University of Kansas
> http://pj.freefaculty.org              http://crmda.ku.edu
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>

	[[alternative HTML version deleted]]


From maechler at stat.math.ethz.ch  Thu Aug 27 17:16:53 2015
From: maechler at stat.math.ethz.ch (Martin Maechler)
Date: Thu, 27 Aug 2015 17:16:53 +0200
Subject: [Rd] Issues with libcurl + HTTP status codes (eg. 403, 404)
In-Reply-To: <55DE46AB.4080508@gmail.com>
References: <CAJXgQP3cFoOxcU3sbX7Q8nWh8AE0Voc6KyhQ+ZUU2aLPQxDxqQ@mail.gmail.com>
	<55DCCBE6.2050901@fredhutch.org>
	<CAJXgQP2Br8wBtC4tQcNfaWSf12ZgaJxJvnFtAXR_MnpzS0jGEQ@mail.gmail.com>
	<55DCD123.1010205@fredhutch.org>
	<CABFfbXuJSxA-t+vaFNKug550ONVgdtOcH79AJRbHwCO4biuZrA@mail.gmail.com>
	<55DE46AB.4080508@gmail.com>
Message-ID: <21983.10725.42382.149992@stat.math.ethz.ch>

>>>>> "DM" == Duncan Murdoch <murdoch.duncan at gmail.com>
>>>>>     on Wed, 26 Aug 2015 19:07:23 -0400 writes:

    DM> On 26/08/2015 6:04 PM, Jeroen Ooms wrote:
    >> On Tue, Aug 25, 2015 at 10:33 PM, Martin Morgan <mtmorgan at fredhutch.org> wrote:
    >>> 
    >>> actually I don't know that it does -- it addresses the symptom but I think there should be an error from libcurl on the 403 / 404 rather than from read.dcf on error page...
    >> 
    >> Indeed, the only correct behavior is to turn the protocol error code
    >> into an R exception. When the server returns a status code >= 400, it
    >> indicates that the request was unsuccessful and the response body does
    >> not contain the content the client had requested, but should instead
    >> be interpreted as an error message/page. Ignoring this fact and
    >> proceeding with parsing the body as usual is incorrect and leads to
    >> all kind of strange errors downstream.

    DM> Yes.  I haven't been following this long thread.  Is it only in R-devel,
    DM> or is this happening in 3.2.2 or R-patched?

    DM> If the latter, please submit a bug report.  If it is only R-devel,
    DM> please just be patient.  When R-devel becomes R-alpha next year, if the
    DM> bug still exists, please report it.

    DM> Duncan Murdoch

Probably I'm confused now...
Both R-patched and R-devel give an error (after a *long* wait!) 
for
       download.file("https://someserver.com/mydata.csv", "mydata.csv")

So that problem is I think  solved now.
Ideally, it would nice to set the *timeout* as an R function
argument ourselves.. though.

Kevin Ushey's original problem however is still in R-patched and
R-devel:

ap <- available.packages("http://www.stats.ox.ac.uk/pub/RWin", method="libcurl")
ap

giving

> ap <- available.packages("http://www.stats.ox.ac.uk/pub/RWin", method="libcurl")Warning: unable to access index for repository http://www.stats.ox.ac.uk/pub/RWin:
  Line starting '<!DOCTYPE HTML PUBLI ...' is malformed!
> ap
     Package Version Priority Depends Imports LinkingTo Suggests Enhances License License_is_FOSS License_restricts_use OS_type Archs
     MD5sum NeedsCompilation File Repository
> 

and the resulting 'ap' is the same as e.g., with the the default
method which also gives a warning and then an empty list (well
"data.frame") of packages.


I don't see a big problem with the above.
It would be better if the warning did not contain the extra
   "Line starting '<!DOCTYPE HTML PUBLI ...' is malformed!"
part, but apart from that I'd say the behavior is not bogous:

We ask for the available package get as answer 'zero packages'
which is correct.


From mtmorgan at fredhutch.org  Thu Aug 27 17:27:58 2015
From: mtmorgan at fredhutch.org (Martin Morgan)
Date: Thu, 27 Aug 2015 08:27:58 -0700
Subject: [Rd] Issues with libcurl + HTTP status codes (eg. 403, 404)
In-Reply-To: <21983.10725.42382.149992@stat.math.ethz.ch>
References: <CAJXgQP3cFoOxcU3sbX7Q8nWh8AE0Voc6KyhQ+ZUU2aLPQxDxqQ@mail.gmail.com>	<55DCCBE6.2050901@fredhutch.org>	<CAJXgQP2Br8wBtC4tQcNfaWSf12ZgaJxJvnFtAXR_MnpzS0jGEQ@mail.gmail.com>	<55DCD123.1010205@fredhutch.org>	<CABFfbXuJSxA-t+vaFNKug550ONVgdtOcH79AJRbHwCO4biuZrA@mail.gmail.com>	<55DE46AB.4080508@gmail.com>
	<21983.10725.42382.149992@stat.math.ethz.ch>
Message-ID: <55DF2C7E.7030903@fredhutch.org>

On 08/27/2015 08:16 AM, Martin Maechler wrote:
>>>>>> "DM" == Duncan Murdoch <murdoch.duncan at gmail.com>
>>>>>>      on Wed, 26 Aug 2015 19:07:23 -0400 writes:
>
>      DM> On 26/08/2015 6:04 PM, Jeroen Ooms wrote:
>      >> On Tue, Aug 25, 2015 at 10:33 PM, Martin Morgan <mtmorgan at fredhutch.org> wrote:
>      >>>
>      >>> actually I don't know that it does -- it addresses the symptom but I think there should be an error from libcurl on the 403 / 404 rather than from read.dcf on error page...
>      >>
>      >> Indeed, the only correct behavior is to turn the protocol error code
>      >> into an R exception. When the server returns a status code >= 400, it
>      >> indicates that the request was unsuccessful and the response body does
>      >> not contain the content the client had requested, but should instead
>      >> be interpreted as an error message/page. Ignoring this fact and
>      >> proceeding with parsing the body as usual is incorrect and leads to
>      >> all kind of strange errors downstream.
>
>      DM> Yes.  I haven't been following this long thread.  Is it only in R-devel,
>      DM> or is this happening in 3.2.2 or R-patched?
>
>      DM> If the latter, please submit a bug report.  If it is only R-devel,
>      DM> please just be patient.  When R-devel becomes R-alpha next year, if the
>      DM> bug still exists, please report it.
>
>      DM> Duncan Murdoch
>
> Probably I'm confused now...
> Both R-patched and R-devel give an error (after a *long* wait!)
> for
>         download.file("https://someserver.com/mydata.csv", "mydata.csv")
>
> So that problem is I think  solved now.
> Ideally, it would nice to set the *timeout* as an R function
> argument ourselves.. though.
>
> Kevin Ushey's original problem however is still in R-patched and
> R-devel:
>
> ap <- available.packages("http://www.stats.ox.ac.uk/pub/RWin", method="libcurl")
> ap
>
> giving
>
>> ap <- available.packages("http://www.stats.ox.ac.uk/pub/RWin", method="libcurl")Warning: unable to access index for repository http://www.stats.ox.ac.uk/pub/RWin:
>    Line starting '<!DOCTYPE HTML PUBLI ...' is malformed!
>> ap
>       Package Version Priority Depends Imports LinkingTo Suggests Enhances License License_is_FOSS License_restricts_use OS_type Archs
>       MD5sum NeedsCompilation File Repository
>>
>
> and the resulting 'ap' is the same as e.g., with the the default
> method which also gives a warning and then an empty list (well
> "data.frame") of packages.
>
>
> I don't see a big problem with the above.
> It would be better if the warning did not contain the extra
>     "Line starting '<!DOCTYPE HTML PUBLI ...' is malformed!"
> part, but apart from that I'd say the behavior is not bogous:
>
> We ask for the available package get as answer 'zero packages'
> which is correct.
>

In Kevin's original post, he was using an earlier version of R, and the code in 
available.packages was returning an error.

The code had been updated (by me) in the version that you are using to return a 
warning, which was the original design and intention (to convert errors during 
repository queries into warnings, so other repositories could be queried; this 
was Kevin's original point).

The fix I provided does not address the underlying problem, which is that

   download.file("http://www.stats.ox.ac.uk/pub/RWin/PACKAGES.gz",
                 fl <- tempfile(), method="libcurl")

actually downloads the error file, without throwing an error

 >   download.file("http://www.stats.ox.ac.uk/pub/RWin/PACKAGES.gz",   fl <- 
tempfile(), method="libcurl")
trying URL 'http://www.stats.ox.ac.uk/pub/RWin/PACKAGES.gz'
Content type 'text/html; charset=iso-8859-1' length 302 bytes
==================================================
downloaded 302 bytes

 > cat(paste(readLines(fl), collapse="\n"))
<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML 2.0//EN">
<html><head>
<title>404 Not Found</title>
</head><body>
<h1>Not Found</h1>
<p>The requested URL /pub/RWin/PACKAGES.gz was not found on this server.</p>
<hr>
<address>Apache/2.2.22 (Debian) Server at www.stats.ox.ac.uk Port 80</address>
</body></html>>


I do have a patch for this, which I will share off-list before committing.

Martin
-- 
Computational Biology / Fred Hutchinson Cancer Research Center
1100 Fairview Ave. N.
PO Box 19024 Seattle, WA 98109

Location: Arnold Building M1 B861
Phone: (206) 667-2793


From jeroen.ooms at stat.ucla.edu  Thu Aug 27 17:46:16 2015
From: jeroen.ooms at stat.ucla.edu (Jeroen Ooms)
Date: Thu, 27 Aug 2015 17:46:16 +0200
Subject: [Rd] Issues with libcurl + HTTP status codes (eg. 403, 404)
In-Reply-To: <21983.10725.42382.149992@stat.math.ethz.ch>
References: <CAJXgQP3cFoOxcU3sbX7Q8nWh8AE0Voc6KyhQ+ZUU2aLPQxDxqQ@mail.gmail.com>
	<55DCCBE6.2050901@fredhutch.org>
	<CAJXgQP2Br8wBtC4tQcNfaWSf12ZgaJxJvnFtAXR_MnpzS0jGEQ@mail.gmail.com>
	<55DCD123.1010205@fredhutch.org>
	<CABFfbXuJSxA-t+vaFNKug550ONVgdtOcH79AJRbHwCO4biuZrA@mail.gmail.com>
	<55DE46AB.4080508@gmail.com>
	<21983.10725.42382.149992@stat.math.ethz.ch>
Message-ID: <CABFfbXsu1M85-Mta1cd170jXYRJ5Ua=PGbyRMeihR2QoBwvWhA@mail.gmail.com>

On Thu, Aug 27, 2015 at 5:16 PM, Martin Maechler
<maechler at stat.math.ethz.ch> wrote:
> Probably I'm confused now...
> Both R-patched and R-devel give an error (after a *long* wait!)
> for
>        download.file("https://someserver.com/mydata.csv", "mydata.csv")
>
> So that problem is I think  solved now.

I'm sorry for the confusion, this was a hypothetical example.
Connection failures are different from http status errors. Below some
real examples of servers returning http errors. For each example the
"internal" method correctly raises an R error, whereas the "libcurl"
method does not.

# File not found (404)
download.file("http://httpbin.org/data.csv", "data.csv", method = "internal")
download.file("http://httpbin.org/data.csv", "data.csv", method = "libcurl")
readLines(url("http://httpbin.org/data.csv", method = "internal"))
readLines(url("http://httpbin.org/data.csv", method = "libcurl"))

# Unauthorized (401)
download.file("https://httpbin.org/basic-auth/user/passwd",
"data.csv", method = "internal")
download.file("https://httpbin.org/basic-auth/user/passwd",
"data.csv", method = "libcurl")
readLines(url("https://httpbin.org/basic-auth/user/passwd", method =
"internal"))
readLines(url("https://httpbin.org/basic-auth/user/passwd", method = "libcurl"))


From mhahsler at lyle.smu.edu  Thu Aug 27 15:57:42 2015
From: mhahsler at lyle.smu.edu (Michael Hahsler)
Date: Thu, 27 Aug 2015 08:57:42 -0500
Subject: [Rd] Column name expansion in data.frame()
Message-ID: <55DF1756.8090908@lyle.smu.edu>

Dear R developers:

I am trying to add a column to a data.frame. The following does the 
trick by expanding the name of the first data frame with the prefix foo:

 > data.frame(foo = as.list(data.frame(items = 1:3, bar=1:3)), items = 
1:3)  foo.items foo.bar items
1         1       1     1
2         2       2     2
3         3       3     3

However, the following special case produces an unexpected (at least to 
me) result:
 > data.frame(foo = as.list(data.frame(items = 1:3)), items = 1:3)
   items items.1
1     1       1
2     2       2
3     3       3

I also tried cbind in various ways. This works:
 > cbind(foo = data.frame(items = 1:3, bar=1:3), items = 1:3)
   foo.items foo.bar items
1         1       1     1
2         2       2     2
3         3       3     3


The special case gives again different result with two columns having 
seemingly the same name.
 > cbind(foo = data.frame(items = 1:3), items = 1:3)
   items items
1     1     1
2     2     2
3     3     3
 > cbind(foo = data.frame(items = 1:3), data.frame(items = 1:3))
   items items
1     1     1
2     2     2
3     3     3

Any help would be appreciated.

Thanks,
Michael


sessionInfo:

 > sessionInfo()
R Under development (unstable) (2015-08-23 r69165)
Platform: x86_64-pc-linux-gnu (64-bit)
Running under: Ubuntu 15.04

locale:
  [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C
  [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8
  [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8
  [7] LC_PAPER=en_US.UTF-8       LC_NAME=C
  [9] LC_ADDRESS=C               LC_TELEPHONE=C
[11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C

attached base packages:
[1] stats     graphics  grDevices utils     datasets  methods   base





-- 
   Michael Hahsler, Assistant Professor
   Department of Engineering Management, Information, and Systems
   Department of Computer Science and Engineering (by courtesy)
   Bobby B. Lyle School of Engineering
   Southern Methodist University, Dallas, Texas

   office: Caruth Hall, suite 337, room 311
   email:  mhahsler at lyle.smu.edu
   web:    http://lyle.smu.edu/~mhahsler


From mtmorgan at fredhutch.org  Thu Aug 27 19:27:54 2015
From: mtmorgan at fredhutch.org (Martin Morgan)
Date: Thu, 27 Aug 2015 10:27:54 -0700
Subject: [Rd] Issues with libcurl + HTTP status codes (eg. 403, 404)
In-Reply-To: <CABFfbXsu1M85-Mta1cd170jXYRJ5Ua=PGbyRMeihR2QoBwvWhA@mail.gmail.com>
References: <CAJXgQP3cFoOxcU3sbX7Q8nWh8AE0Voc6KyhQ+ZUU2aLPQxDxqQ@mail.gmail.com>
	<55DCCBE6.2050901@fredhutch.org>
	<CAJXgQP2Br8wBtC4tQcNfaWSf12ZgaJxJvnFtAXR_MnpzS0jGEQ@mail.gmail.com>
	<55DCD123.1010205@fredhutch.org>
	<CABFfbXuJSxA-t+vaFNKug550ONVgdtOcH79AJRbHwCO4biuZrA@mail.gmail.com>
	<55DE46AB.4080508@gmail.com>
	<21983.10725.42382.149992@stat.math.ethz.ch>
	<CABFfbXsu1M85-Mta1cd170jXYRJ5Ua=PGbyRMeihR2QoBwvWhA@mail.gmail.com>
Message-ID: <55DF489A.1040008@fredhutch.org>

R-devel r69197 returns appropriate errors for the cases below; I know of a few 
rough edges

- ftp error codes are not reported correctly
- download.file creates destfile before discovering that http fails, leaving an 
empty file on disk

and am happy to hear of more.

Martin

On 08/27/2015 08:46 AM, Jeroen Ooms wrote:
> On Thu, Aug 27, 2015 at 5:16 PM, Martin Maechler
> <maechler at stat.math.ethz.ch> wrote:
>> Probably I'm confused now...
>> Both R-patched and R-devel give an error (after a *long* wait!)
>> for
>>         download.file("https://someserver.com/mydata.csv", "mydata.csv")
>>
>> So that problem is I think  solved now.
>
> I'm sorry for the confusion, this was a hypothetical example.
> Connection failures are different from http status errors. Below some
> real examples of servers returning http errors. For each example the
> "internal" method correctly raises an R error, whereas the "libcurl"
> method does not.
>
> # File not found (404)
> download.file("http://httpbin.org/data.csv", "data.csv", method = "internal")
> download.file("http://httpbin.org/data.csv", "data.csv", method = "libcurl")
> readLines(url("http://httpbin.org/data.csv", method = "internal"))
> readLines(url("http://httpbin.org/data.csv", method = "libcurl"))
>
> # Unauthorized (401)
> download.file("https://httpbin.org/basic-auth/user/passwd",
> "data.csv", method = "internal")
> download.file("https://httpbin.org/basic-auth/user/passwd",
> "data.csv", method = "libcurl")
> readLines(url("https://httpbin.org/basic-auth/user/passwd", method =
> "internal"))
> readLines(url("https://httpbin.org/basic-auth/user/passwd", method = "libcurl"))
>


-- 
Computational Biology / Fred Hutchinson Cancer Research Center
1100 Fairview Ave. N.
PO Box 19024 Seattle, WA 98109

Location: Arnold Building M1 B861
Phone: (206) 667-2793


From kevinushey at gmail.com  Thu Aug 27 20:00:49 2015
From: kevinushey at gmail.com (Kevin Ushey)
Date: Thu, 27 Aug 2015 11:00:49 -0700
Subject: [Rd] Issues with libcurl + HTTP status codes (eg. 403, 404)
In-Reply-To: <55DF489A.1040008@fredhutch.org>
References: <CAJXgQP3cFoOxcU3sbX7Q8nWh8AE0Voc6KyhQ+ZUU2aLPQxDxqQ@mail.gmail.com>
	<55DCCBE6.2050901@fredhutch.org>
	<CAJXgQP2Br8wBtC4tQcNfaWSf12ZgaJxJvnFtAXR_MnpzS0jGEQ@mail.gmail.com>
	<55DCD123.1010205@fredhutch.org>
	<CABFfbXuJSxA-t+vaFNKug550ONVgdtOcH79AJRbHwCO4biuZrA@mail.gmail.com>
	<55DE46AB.4080508@gmail.com>
	<21983.10725.42382.149992@stat.math.ethz.ch>
	<CABFfbXsu1M85-Mta1cd170jXYRJ5Ua=PGbyRMeihR2QoBwvWhA@mail.gmail.com>
	<55DF489A.1040008@fredhutch.org>
Message-ID: <CAJXgQP0FA9uUJ-SyPCvdK__hTiFWTSWoKG7zM6gvq9pOvHSJ+Q@mail.gmail.com>

Thanks for looking into this so promptly!

Should users expect the behaviour to be congruent across all of the
supported external programs (curl, wget) as well? E.g.

    URL <- "http://cran.rstudio.org/no/such/file/here.tar.gz"
    download <- function(file, method, ...)
      print(download.file(file, destfile = tempfile(), method = method, ...))

    download(URL, method = "internal") ## error
    download(URL, method = "curl") ## status code 0
    download(URL, method = "wget") ## warning (status code 8)
    download(URL, method = "libcurl") ## status code 0

It seems unfortunate that the behaviour differs across each method; at
least in my mind `download.file()` should be a unified interface that
tries to do the 'same thing' regardless of the chosen method.

FWIW, one can force 'curl' to fail on HTTP error codes (-f) and this
can be passed down by R, e.g.

    download(URL, method = "curl", extra = "-f") ## warning (status code 22)

but I still think this should be promoted to an error rather than a
warning. (Of course, changing that would imply a backwards
incompatible change; however, I think it would be the correct change).

(PS: I just tested r69197 and method = "libcurl" does indeed report an
error now in the above test case on my system [OS X]; thanks!)

Kevin


On Thu, Aug 27, 2015 at 10:27 AM, Martin Morgan <mtmorgan at fredhutch.org> wrote:
> R-devel r69197 returns appropriate errors for the cases below; I know of a
> few rough edges
>
> - ftp error codes are not reported correctly
> - download.file creates destfile before discovering that http fails, leaving
> an empty file on disk
>
> and am happy to hear of more.
>
> Martin
>
>
> On 08/27/2015 08:46 AM, Jeroen Ooms wrote:
>>
>> On Thu, Aug 27, 2015 at 5:16 PM, Martin Maechler
>> <maechler at stat.math.ethz.ch> wrote:
>>>
>>> Probably I'm confused now...
>>> Both R-patched and R-devel give an error (after a *long* wait!)
>>> for
>>>         download.file("https://someserver.com/mydata.csv", "mydata.csv")
>>>
>>> So that problem is I think  solved now.
>>
>>
>> I'm sorry for the confusion, this was a hypothetical example.
>> Connection failures are different from http status errors. Below some
>> real examples of servers returning http errors. For each example the
>> "internal" method correctly raises an R error, whereas the "libcurl"
>> method does not.
>>
>> # File not found (404)
>> download.file("http://httpbin.org/data.csv", "data.csv", method =
>> "internal")
>> download.file("http://httpbin.org/data.csv", "data.csv", method =
>> "libcurl")
>> readLines(url("http://httpbin.org/data.csv", method = "internal"))
>> readLines(url("http://httpbin.org/data.csv", method = "libcurl"))
>>
>> # Unauthorized (401)
>> download.file("https://httpbin.org/basic-auth/user/passwd",
>> "data.csv", method = "internal")
>> download.file("https://httpbin.org/basic-auth/user/passwd",
>> "data.csv", method = "libcurl")
>> readLines(url("https://httpbin.org/basic-auth/user/passwd", method =
>> "internal"))
>> readLines(url("https://httpbin.org/basic-auth/user/passwd", method =
>> "libcurl"))
>>
>
>
> --
> Computational Biology / Fred Hutchinson Cancer Research Center
> 1100 Fairview Ave. N.
> PO Box 19024 Seattle, WA 98109
>
> Location: Arnold Building M1 B861
> Phone: (206) 667-2793
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From lgautier at gmail.com  Sat Aug 29 17:40:41 2015
From: lgautier at gmail.com (Laurent Gautier)
Date: Sat, 29 Aug 2015 11:40:41 -0400
Subject: [Rd] C-API: Reporting syntax errors when calling R_ParseVector()
Message-ID: <CA+JCgN0sFGSqiw-iMDdKcQNZSmaU=o8DhSNGu7Vexe_TCa77+Q@mail.gmail.com>

Hi,

The C-API is exposing the function R_ParseVector (defined in the header
file `include/R_exts/Parse.h`), but it still appears impossible to retrieve
errors about syntax errors.

I found earlier reports of the issue, but could not find solutions:
- 2007: https://bugs.r-project.org/bugzilla/show_bug.cgi?id=9466
- 2009: https://stat.ethz.ch/pipermail/r-devel/2009-June/053801.html

Would anyone have a pointer ?


Laurent

	[[alternative HTML version deleted]]


From tobias.verbeke at openanalytics.eu  Sun Aug 30 21:58:35 2015
From: tobias.verbeke at openanalytics.eu (Tobias Verbeke)
Date: Sun, 30 Aug 2015 21:58:35 +0200 (CEST)
Subject: [Rd] [OT] new R logo in vector graphics format
Message-ID: <1403553763.61530.1440964715130.JavaMail.zimbra@openanalytics.eu>

L.S.

Since some time there is a new r-project.org site as announced here:

https://stat.ethz.ch/pipermail/r-announce/2015/000581.html

The logo has changed on the site, but I fail to find a vector graphics file.

For the previous logo I used to go to

https://svn.r-project.org/R-dev-web/trunk/Logo/

Is there anything similar for the new logo?

Many thanks in advance.

Kind regards,
Tobias

-- 

Tobias Verbeke
Managing Director

Open Analytics NV
Jupiterstraat 20
2600 Antwerp
Belgium 

E tobias.verbeke at openanalytics.eu
M +32 499 36 33 15
http://www.openanalytics.eu


From h.wickham at gmail.com  Sun Aug 30 22:47:16 2015
From: h.wickham at gmail.com (Hadley Wickham)
Date: Sun, 30 Aug 2015 15:47:16 -0500
Subject: [Rd] [OT] new R logo in vector graphics format
In-Reply-To: <1403553763.61530.1440964715130.JavaMail.zimbra@openanalytics.eu>
References: <1403553763.61530.1440964715130.JavaMail.zimbra@openanalytics.eu>
Message-ID: <CABdHhvEVJhNCFYv3smPBWJiFgBw4yF5oMdSHDc4AxQ=K0HZ=ew@mail.gmail.com>

It exists but is not currently available.  We'll make it available
once we have a trademark use policy in place.

Hadley

On Sun, Aug 30, 2015 at 2:58 PM, Tobias Verbeke
<tobias.verbeke at openanalytics.eu> wrote:
> L.S.
>
> Since some time there is a new r-project.org site as announced here:
>
> https://stat.ethz.ch/pipermail/r-announce/2015/000581.html
>
> The logo has changed on the site, but I fail to find a vector graphics file.
>
> For the previous logo I used to go to
>
> https://svn.r-project.org/R-dev-web/trunk/Logo/
>
> Is there anything similar for the new logo?
>
> Many thanks in advance.
>
> Kind regards,
> Tobias
>
> --
>
> Tobias Verbeke
> Managing Director
>
> Open Analytics NV
> Jupiterstraat 20
> 2600 Antwerp
> Belgium
>
> E tobias.verbeke at openanalytics.eu
> M +32 499 36 33 15
> http://www.openanalytics.eu
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel



-- 
http://had.co.nz/


From tobias.verbeke at openanalytics.eu  Sun Aug 30 23:01:47 2015
From: tobias.verbeke at openanalytics.eu (Tobias Verbeke)
Date: Sun, 30 Aug 2015 23:01:47 +0200 (CEST)
Subject: [Rd] [OT] new R logo in vector graphics format
In-Reply-To: <CABdHhvEVJhNCFYv3smPBWJiFgBw4yF5oMdSHDc4AxQ=K0HZ=ew@mail.gmail.com>
References: <1403553763.61530.1440964715130.JavaMail.zimbra@openanalytics.eu>
	<CABdHhvEVJhNCFYv3smPBWJiFgBw4yF5oMdSHDc4AxQ=K0HZ=ew@mail.gmail.com>
Message-ID: <383855003.61691.1440968507499.JavaMail.zimbra@openanalytics.eu>

Thank you,
Tobias

----- Original Message -----
> From: "hadley wickham" <h.wickham at gmail.com>
> To: "Tobias Verbeke" <tobias.verbeke at openanalytics.eu>
> Cc: "r-devel at r-project.org" <r-devel at r-project.org>
> Sent: Sunday, August 30, 2015 10:47:16 PM
> Subject: Re: [Rd] [OT] new R logo in vector graphics format

> It exists but is not currently available.  We'll make it available
> once we have a trademark use policy in place.
> 
> Hadley
> 
> On Sun, Aug 30, 2015 at 2:58 PM, Tobias Verbeke
> <tobias.verbeke at openanalytics.eu> wrote:
>> L.S.
>>
>> Since some time there is a new r-project.org site as announced here:
>>
>> https://stat.ethz.ch/pipermail/r-announce/2015/000581.html
>>
>> The logo has changed on the site, but I fail to find a vector graphics file.
>>
>> For the previous logo I used to go to
>>
>> https://svn.r-project.org/R-dev-web/trunk/Logo/
>>
>> Is there anything similar for the new logo?
>>
>> Many thanks in advance.
>>
>> Kind regards,
>> Tobias
>>
>> --
>>
>> Tobias Verbeke
>> Managing Director
>>
>> Open Analytics NV
>> Jupiterstraat 20
>> 2600 Antwerp
>> Belgium
>>
>> E tobias.verbeke at openanalytics.eu
>> M +32 499 36 33 15
>> http://www.openanalytics.eu
>>
>> ______________________________________________
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel
> 
> 
> 
> --
> http://had.co.nz/


From rkoenker at illinois.edu  Mon Aug 31 01:05:37 2015
From: rkoenker at illinois.edu (Roger Koenker)
Date: Sun, 30 Aug 2015 18:05:37 -0500
Subject: [Rd] Packages required but not available:
Message-ID: <A0B7F093-B634-4573-9545-1D345CE8647A@illinois.edu>

I?m trying to get my empirical Bayes package, REBayes, back in compliance with CRAN.
However, I?m not sure what to do about the following from R CMD check ?as-cran on
the current R-devel:

Strong dependencies not in mainstream repositories:
  pogs
* checking package namespace information ... OK
* checking package dependencies ... ERROR
Packages required but not available: 'Rmosek' 'reliaR' ?pogs'

pogs is available here:  http://foges.github.io/pogs/ref/admm
Rmosek seems to be back on CRAN but perhaps not happily on osx
reliaR seems to be on CRAN

All three of these packages appear on the imports line of my DESCRIPTION file.
Could someone clue me in on what to do?
Thanks,
Roger


url:    www.econ.uiuc.edu/~roger            Roger Koenker
email    rkoenker at uiuc.edu            Department of Economics
vox:     217-333-4558                University of Illinois
fax:       217-244-6678                Urbana, IL 61801


From cubranic at stat.ubc.ca  Mon Aug 31 06:47:35 2015
From: cubranic at stat.ubc.ca (Davor Cubranic)
Date: Sun, 30 Aug 2015 21:47:35 -0700
Subject: [Rd] R doesn't compile on FreeBSD 10.2
Message-ID: <86fv302hft.fsf@stat.ubc.ca>

On FreeBSD 10.2, I get the following error when compiling R from the
Subversion trunk (with "configure && make"):

    cc -shared -L/usr/local/lib -o tools.so text.o init.o Rmd5.o md5.o signals.o install.o getfmts.o http.o gramLatex.o gramRd.o
    mkdir ../../../../library/tools/libs
    installing 'sysdata.rda'
    Error in dyn.load(file, DLLpath = DLLpath, ...) : 
      unable to load shared object '/usr/home/davor/R-dev/R-trunk/library/tools/libs/tools.so':
      /usr/home/davor/R-dev/R-trunk/library/tools/libs/tools.so: Undefined symbol "R_ClassSymbol"
    Error: unable to load R code in package 'tools'
    Execution halted
    *** Error code 1

    Stop.
    make[4]: stopped in /usr/home/davor/R-dev/R-trunk/src/library/tools

The system is running a 64-bit FreeBSD 10.2-RELEASE-p4, with clang 3.4.1
and gfortran 4.8.5.

Configure log is attached.

Davor
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: config.log
URL: <https://stat.ethz.ch/pipermail/r-devel/attachments/20150830/993f5557/attachment.pl>

From arnaud.gaboury at gmail.com  Mon Aug 31 14:13:36 2015
From: arnaud.gaboury at gmail.com (arnaud gaboury)
Date: Mon, 31 Aug 2015 14:13:36 +0200
Subject: [Rd] Buidling R from source on a server
Message-ID: <CAK1hC9sMh485ohCA5HCQ23o+OFGCVTn0O7fjaVJhHWUC_VGGmg@mail.gmail.com>

Distro: Fedora 22 server

rstudio server running

I had to rebuild R from source in order to use Intel Compiler. The
host is a server, with no X environment. I plan to use R either from
CLI or from rstudio server.

As for the configure option, I am not sure if I shall disable x and
tcl-tk ( --with-x=no --with tcltk=no) or shall I enable it to fully
use rstudio server ?

Thank you for help.

-- 

google.com/+arnaudgabourygabx


From ripley at stats.ox.ac.uk  Mon Aug 31 14:34:39 2015
From: ripley at stats.ox.ac.uk (Prof Brian Ripley)
Date: Mon, 31 Aug 2015 13:34:39 +0100
Subject: [Rd] R doesn't compile on FreeBSD 10.2
In-Reply-To: <86fv302hft.fsf@stat.ubc.ca>
References: <86fv302hft.fsf@stat.ubc.ca>
Message-ID: <55E449DF.7010403@stats.ox.ac.uk>

First, this there is no evidence here of a 'compilation' failure: it 
seems to be about installation, and more specifically about loading 
dynamic libs.

Second, we don't have all the pertinent information such as the 
configure options used and the architecture (x86_64?).  I am going to 
have to guess none as none were mentioned, but using --enable-R-shlib 
would be pertinent.

On 31/08/2015 05:47, Davor Cubranic wrote:
> On FreeBSD 10.2, I get the following error when compiling R from the
> Subversion trunk (with "configure && make"):

You have not told us which revision.  A basic check is to see if you can 
build the latest released version, as the trunk is 'Under development'.
>
>      cc -shared -L/usr/local/lib -o tools.so text.o init.o Rmd5.o md5.o signals.o install.o getfmts.o http.o gramLatex.o gramRd.o
>      mkdir ../../../../library/tools/libs
>      installing 'sysdata.rda'
>      Error in dyn.load(file, DLLpath = DLLpath, ...) :
>        unable to load shared object '/usr/home/davor/R-dev/R-trunk/library/tools/libs/tools.so':
>        /usr/home/davor/R-dev/R-trunk/library/tools/libs/tools.so: Undefined symbol "R_ClassSymbol"
>      Error: unable to load R code in package 'tools'
>      Execution halted
>      *** Error code 1
>
>      Stop.
>      make[4]: stopped in /usr/home/davor/R-dev/R-trunk/src/library/tools
>
> The system is running a 64-bit FreeBSD 10.2-RELEASE-p4, with clang 3.4.1
> and gfortran 4.8.5.
>
> Configure log is attached.
>
> Davor

Here is a series of checks for that symbol (results from a working Linux 
system):

auk% nm -g bin/exec/R  | grep R_ClassSymbol
0000000000962ec0 B R_ClassSymbol

auk% nm -g src/main/main.o | grep R_ClassSymbol
0000000000000008 C R_ClassSymbol

auk% nm -g library/tools/libs/tools.so  | grep R_ClassSymbol
                  U R_ClassSymbol

auk% nm -g src/library/tools/src/gramRd.o | grep R_ClassSymbol
                  U R_ClassSymbol

So R_ClassSymbol is unresolved in the tools package and should be 
resolved by loading into the main R executable. On Linux that is 
achieved by the linker flag

-Wl,--export-dynamic

as part of MAIN_LDFLAGS in Makeconf in the top-level directory.  We have 
in configure.ac

   freebsd*)
     main_ldflags="-export-dynamic"
     shlib_ldflags="-shared"

but those were from the days when FreeBSD used gcc, and it is possible 
that your use of clang[*] requires -Wl,--export-dynamic . If so, add to 
config.site

MAIN_LDFLAGS="-Wl,--export-dynamic"

It would also be worth trying a build with --enable-R-shlib, as that 
resolves R_ClassSymbol and similar differently.

[*] Unfortunately clang accepts many flags for gcc compatibility, but 
often silently ignores them. And it does not document fully which flags 
it actually implements.  It is not much easier with gcc: e.g. 4.9.2 
documents a flag -rdynamic with the same effect.

-- 
Brian D. Ripley,                  ripley at stats.ox.ac.uk
Emeritus Professor of Applied Statistics, University of Oxford
1 South Parks Road, Oxford OX1 3TG, UK


From ripley at stats.ox.ac.uk  Mon Aug 31 15:21:42 2015
From: ripley at stats.ox.ac.uk (Prof Brian Ripley)
Date: Mon, 31 Aug 2015 14:21:42 +0100
Subject: [Rd] Build R on Haiku
In-Reply-To: <CAPs52TqRajW5Rvb8KPGXsSE3i809gS-98QiS=mZjHbXXR-c7pg@mail.gmail.com>
References: <CAPs52TqRajW5Rvb8KPGXsSE3i809gS-98QiS=mZjHbXXR-c7pg@mail.gmail.com>
Message-ID: <55E454E6.4050204@stats.ox.ac.uk>

On 14/08/2015 15:19, Joe S wrote:
> Hi R-devel,
> I'm trying to get R 3.2.1 working on Haiku (an open source OS inspired by
> BeOS, not Linux based) on i586. With a few small changes to library paths
> and ifdefs I am able to get a seemingly working R binary. The build process
> stops with the 'tools' package. The last lines from make are below.
>
> Does anyone have any tips? I'm rather new to debugging at this low level.
>
> Are there any checks I can do to the R binary to test if it works properly?

This does not seem to be about the R binary, but about dynamically 
loaded modules.  (All those export lines are non-standard, BTW, and your 
output is not from an ab initio build so we don't know e.g. how tools.so 
was built.)  The meat is

 > Error in .Call(PS_sigs, 1L) :
 >    first argument must be a string (of length 1) or native symbol 
reference

That comes from package tools, which contains the R code

PS_sigs <- getDLLRegisteredRoutines("tools")[[c(".Call", "ps_sigs")]]
SIGHUP <- .Call(PS_sigs, 1L)

So, startup R from the top-level build directory with something like

env R_DEFAULT_PACKAGES=NULL bin/R

and at the prompt run

dyn.load("src/library/tools/src/tools.so")
getLoadedDLLs() # should include a line for tools
getDLLRegisteredRoutines("tools")

My guess is that does not list any symbols, in particular not ps_sigs.

We can only speculate as to what went wrong (visibility issues?  Mapping 
symbols to u/case? ...).


>
> Cheers
> Joe
>
> ***********************************************************************
> make[3]: Entering directory `/Store/buildr/src/library/tools'
> building package 'tools'
> make[4]: Entering directory `/Store/buildr/src/library/tools'
> all.R is unchanged
> make[4]: Leaving directory `/Store/buildr/src/library/tools'
> make[4]: Entering directory `/Store/buildr/src/library/tools'
> make[5]: Entering directory `/Store/buildr/src/library/tools/src'
> make[6]: Entering directory `/Store/buildr/src/library/tools/src'
> ../../../../library/tools/libs/tools.so is unchanged
> make[6]: Leaving directory `/Store/buildr/src/library/tools/src'
> make[5]: Leaving directory `/Store/buildr/src/library/tools/src'
> make[4]: Leaving directory `/Store/buildr/src/library/tools'
> make[4]: Entering directory `/Store/buildr/src/library/tools'
> installing 'sysdata.rda'
> export
> ADDON_PATH="%A/add-ons:/boot/home/config/non-packaged/add-ons:/boot/home/config/add-ons:/boot/system/non-packaged/add-ons:/boot/system/add-ons"
> export
> BEINCLUDES="/boot/system/develop/headers;/boot/system/develop/headers/be;/boot/system/develop/headers/posix;/boot/system/develop/headers/glibc;/boot/system/develop/headers/cpp;/boot/system/develop/headers/be/app;/boot/system/develop/headers/be/device;/boot/system/develop/headers/be/interface;/boot/system/develop/headers/be/locale;/boot/system/develop/headers/be/media;/boot/system/develop/headers/be/midi;/boot/system/develop/headers/be/midi2;/boot/system/develop/headers/be/net;/boot/system/develop/headers/be/kernel;/boot/system/develop/headers/be/storage;/boot/system/develop/headers/be/support;/boot/system/develop/headers/be/game;/boot/system/develop/headers/be/opengl;/boot/system/develop/headers/be/drivers;/boot/system/develop/headers/gnu;/boot/system/develop/headers/be/mail;/boot/system/develop/headers/be/translation;/boot/system/develop/headers/be/devel;/boot/system/develop/headers/be/add-ons/graphics;/boot/system/develop/headers/be/be_apps/Deskbar;/boot/system/develop/hea!
>   ders/be/be_apps/NetPositive;/boot/system/develop/headers/be/be_apps/Tracker"
> export BE_HOST_CPU="x86"
> export BUILDHOME="/boot/system/develop"
> export GROUP="root"
> export HISTCONTROL="ignoredups"
> export HISTFILESIZE="500"
> export HOME="/boot/home"
> export JAVA_HOME="/packages/openjdk-1.7_2013_11_08-2/.self/lib/openjdk"
> export LC_ALL="C"
> export LC_COLLATE="en.UTF-8"
> export LC_CTYPE="en.UTF-8"
> export LC_MESSAGES="en.UTF-8"
> export LC_MONETARY="en.UTF-8"
> export LC_NUMERIC="en.UTF-8"
> export LC_TIME="en.UTF-8"
> export LC_TYPE="en_US.UTF-8"
> export
> LIBRARY_PATH="%A/lib:/boot/home/config/non-packaged/lib:/boot/home/config/lib:/boot/system/non-packaged/lib:/boot/system/lib:/Store/buildr/lib"
> export
> LS_COLORS="rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;43:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.Z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.jpg=01;35:*.jpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vo!
>   b=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:"
> export MAKEFLAGS="w"
> export MAKELEVEL="5"
> export MFLAGS="-w"
> export OLDPWD
> export
> PATH=".:/boot/home/config/non-packaged/bin:/boot/home/config/bin:/boot/system/non-packaged/bin:/bin:/boot/system/apps:/boot/system/preferences"
> export PWD="/Store/buildr/src/library/tools"
> export R_DEFAULT_PACKAGES="NULL"
> export R_DOC_DIR="/Store/buildr/doc"
> export R_ENVIRON=""
> export R_ENVIRON_USER=""
> export R_HOME="/Store/buildr"
> export R_INCLUDE_DIR="/Store/buildr/include"
> export R_PROFILE=""
> export R_PROFILE_USER=""
> export R_SHARE_DIR="/Store/buildr/share"
> export SAFEMODE="no"
> export SED="/bin/sed"
> export SHLVL="7"
> export TERM="xterm"
> export TTY="/dev/tt/p1"
> export TTYPE="UTF-8"
> export USER="user"
> export XDG_CACHE_HOME="/boot/home/config/cache"
> export XDG_CONFIG_DIRS="/boot/system/settings"
> export XDG_CONFIG_HOME="/boot/home/config/settings"
> export XDG_DATA_DIRS="/boot/system/non-packaged/data:/boot/system/data"
> export XDG_DATA_HOME="/boot/home/config/non-packaged/data"
> Error in .Call(PS_sigs, 1L) :
>    first argument must be a string (of length 1) or native symbol reference
> Error: unable to load R code in package 'tools'
> Execution halted
> make[4]: *** [sysdata] Error 1
> make[4]: Leaving directory `/Store/buildr/src/library/tools'
> make[3]: *** [all] Error 2
> make[3]: Leaving directory `/Store/buildr/src/library/tools'
> make[2]: *** [R] Error 1
> make[2]: Leaving directory `/Store/buildr/src/library'
> make[1]: *** [R] Error 1
> make[1]: Leaving directory `/Store/buildr/src'
> make: *** [R] Error 1
>
> 	[[alternative HTML version deleted]]
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>


-- 
Brian D. Ripley,                  ripley at stats.ox.ac.uk
Emeritus Professor of Applied Statistics, University of Oxford
1 South Parks Road, Oxford OX1 3TG, UK


From unlikely.combination at gmail.com  Mon Aug 31 15:55:10 2015
From: unlikely.combination at gmail.com (Joe S)
Date: Mon, 31 Aug 2015 15:55:10 +0200
Subject: [Rd] Build R on Haiku
In-Reply-To: <55E454E6.4050204@stats.ox.ac.uk>
References: <CAPs52TqRajW5Rvb8KPGXsSE3i809gS-98QiS=mZjHbXXR-c7pg@mail.gmail.com>
	<55E454E6.4050204@stats.ox.ac.uk>
Message-ID: <CAPs52TpMb3cO-CZ-5vuGYjEAWREwRcnsrMcNvS+x=XSEeNaNGA@mail.gmail.com>

On 31 August 2015 at 15:21, Prof Brian Ripley <ripley at stats.ox.ac.uk> wrote:

> On 14/08/2015 15:19, Joe S wrote:
>
>> Are there any checks I can do to the R binary to test if it works
>> properly?
>>
>
> This does not seem to be about the R binary, but about dynamically loaded
> modules.  (All those export lines are non-standard, BTW, and your output is
> not from an ab initio build so we don't know e.g. how tools.so was built.)
> The meat is
>
Yes, because etc/ldpaths doesn't get configured properly so I edited
manually. I should fix the configure script to identify all the environment
variables properly first. It may be causing problems further along.


> > Error in .Call(PS_sigs, 1L) :
> >    first argument must be a string (of length 1) or native symbol
> reference
>
> That comes from package tools, which contains the R code
>
> PS_sigs <- getDLLRegisteredRoutines("tools")[[c(".Call", "ps_sigs")]]
> SIGHUP <- .Call(PS_sigs, 1L)
>
> So, startup R from the top-level build directory with something like
>
> env R_DEFAULT_PACKAGES=NULL bin/R
>
> and at the prompt run
>
> dyn.load("src/library/tools/src/tools.so")
> getLoadedDLLs() # should include a line for tools
> getDLLRegisteredRoutines("tools")
>

Indeed, I got that far myself in the meantime.

> getLoadedDLLs()
                                   Filename Dynamic.Lookup
base                                   base          FALSE
tools /Store/d2/library/tools/libs/tools.so           TRUE

>getDLLRegisteredRoutines("tools")
data frame with 0 columns and 0 rows


> My guess is that does not list any symbols, in particular not ps_sigs.
>
> We can only speculate as to what went wrong (visibility issues?  Mapping
> symbols to u/case? ...).


For now I will keep digging into what dyn.load() is doing and why the
symbols are missing. Any tips are appreciated.

Thanks
Joe


> nm -g library/tools/libs/tools.so
00004178 B __bss_start
         U __ctype_get_mb_cur_max
         w __cxa_finalize
         w __deregister_frame_info
         w __register_frame_info
00004178 D _edata
00004198 B _end
00002951 T _fini
00004170 D _gSharedObjectHaikuABI
00004174 D _gSharedObjectHaikuVersion
00000b54 T _init
         U fclose
         U ferror
         U fopen
         U fread
         U free
         U get_image_symbol
         U INTEGER
         U kill
         U LENGTH
         U libintl_dgettext
         U malloc
         U mbcslocale
         U memcpy
         U R_CHAR
         U R_chk_calloc
         U R_chk_free
         U R_chk_realloc
000019a0 T R_init_tools
         U R_NaInt
         U R_NaString
         U R_NilValue
         U R_registerRoutines
         U R_useDynamicSymbols
         U realloc
         U Rf_allocVector
         U Rf_asInteger
         U Rf_asLogical
         U Rf_coerceVector
         U Rf_error
         U Rf_getCharCE
         U Rf_install
         U Rf_isString
         U Rf_length
         U Rf_mbrtowc
         U Rf_mkChar
         U Rf_mkCharCE
         U Rf_protect
         U Rf_ScalarInteger
         U Rf_ScalarLogical
         U Rf_setAttrib
         U Rf_translateChar
         U Rf_unprotect
         U Rf_warning
         U Rprintf
         U SET_STRING_ELT
         U sprintf
         U strcmp
         U STRING_ELT
         U strlen
         U strncmp
         U TYPEOF

	[[alternative HTML version deleted]]


From cubranic at stat.ubc.ca  Mon Aug 31 17:26:34 2015
From: cubranic at stat.ubc.ca (Davor Cubranic)
Date: Mon, 31 Aug 2015 08:26:34 -0700
Subject: [Rd] R doesn't compile on FreeBSD 10.2
In-Reply-To: <55E449DF.7010403@stats.ox.ac.uk>
References: <86fv302hft.fsf@stat.ubc.ca> <55E449DF.7010403@stats.ox.ac.uk>
Message-ID: <86si6zzdg5.fsf@stat.ubc.ca>

Prof Brian Ripley writes:

> Second, we don't have all the pertinent information such as the 
> configure options used and the architecture (x86_64?).  I am going to 
> have to guess none as none were mentioned, but using --enable-R-shlib 
> would be pertinent.
>
> On 31/08/2015 05:47, Davor Cubranic wrote:
>> On FreeBSD 10.2, I get the following error when compiling R from the
>> Subversion trunk (with "configure && make"):
>
> You have not told us which revision.  A basic check is to see if you can 
> build the latest released version, as the trunk is 'Under development'.

As suggested, I tried compiling from Subversion tag 3.2.2 (r69054).
I used no command-line options to 'configure', as mentioned in my
previous email, and this is the output:

  R is now configured for x86_64-unknown-freebsd10.2

    Source directory:          .
    Installation directory:    /usr/local

    C compiler:                cc  -g -O2
    Fortran 77 compiler:       gfortran48  -g -O2

    C++ compiler:              c++  -g -O2
    C++ 11 compiler:           c++  -std=c++11 -g -O2
    Fortran 90/95 compiler:    gfortran48 -g -O2
    Obj-C compiler:	     cc -g -O2 -fobjc-exceptions

    Interfaces supported:      X11, tcltk
    External libraries:        readline, zlib, bzlib, lzma, PCRE, curl
    Additional capabilities:   PNG, JPEG, TIFF, NLS, cairo, ICU
    Options enabled:           shared BLAS, R profiling

    Capabilities skipped:      
    Options not enabled:       memory profiling

    Recommended packages:      yes

(I thought this, and more, would be included in config.log, but please
let me know if there is other place to get the configuration details
that are relevant.)

Still the same error:

  --- tools.so ---
  cc -shared -L/usr/local/lib -o tools.so text.o init.o Rmd5.o md5.o signals.o install.o getfmts.o http.o gramLatex.o gramRd.o
  --- all ---
  --- shlib ---
  mkdir ../../../../library/tools/libs
  --- sysdata ---
  installing 'sysdata.rda'
  Error in dyn.load(file, DLLpath = DLLpath, ...) : 
    unable to load shared object '/usr/home/davor/R-3.2.2/library/tools/libs/tools.so':
    /usr/home/davor/R-3.2.2/library/tools/libs/tools.so: Undefined symbol "R_ClassSymbol"
  Error: unable to load R code in package 'tools'
  Execution halted

> Here is a series of checks for that symbol (results from a working Linux 
> system):
>
> auk% nm -g bin/exec/R  | grep R_ClassSymbol
> 0000000000962ec0 B R_ClassSymbol
>
> auk% nm -g src/main/main.o | grep R_ClassSymbol
> 0000000000000008 C R_ClassSymbol
>
> auk% nm -g library/tools/libs/tools.so  | grep R_ClassSymbol
>                   U R_ClassSymbol
>
> auk% nm -g src/library/tools/src/gramRd.o | grep R_ClassSymbol
>                   U R_ClassSymbol

Interestintly, checking for R_ClassSymbol gives the same output as on
your working Linux system:

  ~/R-3.2.2$ nm -g bin/exec/R | grep R_ClassSymbol
  00000000008f8ff8 B R_ClassSymbol

  ~/R-3.2.2$ nm -g src/main/main.o | grep R_ClassSymbol
  0000000000000008 C R_ClassSymbol

  ~/R-3.2.2$ nm -g library/tools/libs/tools.so | grep R_ClassSymbol
                   U R_ClassSymbol

  ~/R-3.2.2$ nm -g src/library/tools/src/gramRd.o | grep R_ClassSymbol
                   U R_ClassSymbol

> So R_ClassSymbol is unresolved in the tools package and should be 
> resolved by loading into the main R executable. On Linux that is 
> achieved by the linker flag
>
> -Wl,--export-dynamic
>
> as part of MAIN_LDFLAGS in Makeconf in the top-level directory.  We have 
> in configure.ac
>
>    freebsd*)
>      main_ldflags="-export-dynamic"
>      shlib_ldflags="-shared"
>
> but those were from the days when FreeBSD used gcc, and it is possible 
> that your use of clang[*] requires -Wl,--export-dynamic . If so, add to 
> config.site
>
> MAIN_LDFLAGS="-Wl,--export-dynamic"
>
> It would also be worth trying a build with --enable-R-shlib, as that 
> resolves R_ClassSymbol and similar differently.

I tried 'configure --enable-R-shlib', still the same error.

I then tried adding MAIN_LDFLAGS as you suggested, and the install
worked. Thanks you very much! ("make check" fails in datetime.R, but
that's something I'll follow up in a separate email.)

Should configure.ac be changed to account for this on FreeBSD's using
clang? (I should probably also try compiling with GCC, which I had to
install anyways for gfortran.)

Davor


From rkoenker at uiuc.edu  Mon Aug 31 20:21:43 2015
From: rkoenker at uiuc.edu (RKoenker)
Date: Mon, 31 Aug 2015 11:21:43 -0700 (PDT)
Subject: [Rd] Packages required but not available:
In-Reply-To: <A0B7F093-B634-4573-9545-1D345CE8647A@illinois.edu>
References: <A0B7F093-B634-4573-9545-1D345CE8647A@illinois.edu>
Message-ID: <1441045303128-4711685.post@n4.nabble.com>

I misunderstood this message, and now realize that it was attributable to the
(obvious) fact that these extra
packages were not installed on MY machine since I'd just upgraded to
R-devel.  The pogs package still produces
a NOTE, but hopefully that is not a deal breaker for CRAN.



--
View this message in context: http://r.789695.n4.nabble.com/Packages-required-but-not-available-tp4711662p4711685.html
Sent from the R devel mailing list archive at Nabble.com.


From h.wickham at gmail.com  Mon Aug 31 22:11:09 2015
From: h.wickham at gmail.com (Hadley Wickham)
Date: Mon, 31 Aug 2015 15:11:09 -0500
Subject: [Rd] Packages required but not available:
In-Reply-To: <1441045303128-4711685.post@n4.nabble.com>
References: <A0B7F093-B634-4573-9545-1D345CE8647A@illinois.edu>
	<1441045303128-4711685.post@n4.nabble.com>
Message-ID: <CABdHhvHZ-cstkccky9WkdMSc3orFtaoxgRsgj0jpBPnW4EM0-g@mail.gmail.com>

Note this bullet in the CRAN policies:

Packages on which a CRAN package depends should be available from a
mainstream repository: if any mentioned in ?Suggests? or ?Enhances?
fields are not from such a repository, where to obtain them at a
repository should be specified in an ?Additional_repositories? field
of the DESCRIPTION file (as a comma-separated list of repository URLs)
or for other means of access, described in the ?Description? field.


A number of people have had success using Dirk's drat package to make
such additional repositories.

Hadley

On Mon, Aug 31, 2015 at 1:21 PM, RKoenker <rkoenker at uiuc.edu> wrote:
> I misunderstood this message, and now realize that it was attributable to the
> (obvious) fact that these extra
> packages were not installed on MY machine since I'd just upgraded to
> R-devel.  The pogs package still produces
> a NOTE, but hopefully that is not a deal breaker for CRAN.
>
>
>
> --
> View this message in context: http://r.789695.n4.nabble.com/Packages-required-but-not-available-tp4711662p4711685.html
> Sent from the R devel mailing list archive at Nabble.com.
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel



-- 
http://had.co.nz/


