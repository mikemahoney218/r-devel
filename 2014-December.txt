From ripley at stats.ox.ac.uk  Mon Dec  1 10:45:53 2014
From: ripley at stats.ox.ac.uk (Prof Brian Ripley)
Date: Mon, 01 Dec 2014 09:45:53 +0000
Subject: [Rd] Using FPP preprocessor for Fortran Code
In-Reply-To: <547ABD63.9060606@lyle.smu.edu>
References: <547ABD63.9060606@lyle.smu.edu>
Message-ID: <547C38D1.9060404@stats.ox.ac.uk>

On 30/11/2014 06:46, Michael Hahsler wrote:
> Dear R Developers,
>
> For package seriation I use Fortran code. I recently got a request to add
>
> #if defined(__ICC) || defined(__INTEL_COMPILER)
>        USE IFPORT
> #endif
>
> to the code since the Intel Fortran compiler otherwise has problems with
> rand(). However, to enable the FPP preprocessor I have to either add a

'Writing R Extensions' advises you not to use system RNGs, so this is a 
good time to comply.  ?6.6 of 'Writing R Extensions' describes how to 
use the R RNG from Fortran.

> compiler flag (-cpp for gFortran) which is possibly not portable or
> change the extension to .F, .fpp, .FPP (and a few others) which
> automatically invokes the preprocessor (hopefully on all platforms). I

Many compilers do not know about .fpp or .FPP, and .F is not portable to 
case-independent file systems.

> tried .fpp and added the following to Makevars:
>
> OBJECTS=arsa.o bburcg.o bbwrcg.o bea.o criterion.o dist.o fprintf.o
> greedy.o optimal.o stress.o
>
> %.o: %.fpp
>          $(F77) $(ALL_FFLAGS) -c $< -o $@
>
> It seems to work (I tried Linux and Windows) but R CMD check gives me:
>
> * checking if this is a source package ... WARNING
> Subdirectory ?src? contains:
>    arsa.fpp bburcg.fpp
>
> Is there a different preferred method to do this? Is it possible to add
> support for Fortran with the fpp preprocessor (.fpp files) to the R
> package building process?

The support is as described in 'Writing R Extensions' ?1.1.5.

You could add flags in PKG_FFLAGS, but you would have to use a configure 
script to find the right one (-xpp=fpp is also used).

-- 
Brian D. Ripley,                  ripley at stats.ox.ac.uk
Emeritus Professor of Applied Statistics, University of Oxford
1 South Parks Road, Oxford OX1 3TG, UK


From lawrence.michael at gene.com  Mon Dec  1 20:52:00 2014
From: lawrence.michael at gene.com (Michael Lawrence)
Date: Mon, 1 Dec 2014 11:52:00 -0800
Subject: [Rd] Feature request: mixing `...` (three dots) with other
 formal arguments in S4 methods
In-Reply-To: <CAGmpuehOb4HDA4N0vsgK2=k0qk0ucxvKumwicQj5uwm96LgqMg@mail.gmail.com>
References: <CAGmpuejTqw=_bfVaWN9idUukpKBJkfmd2G=+m0NCkkmieRkkTg@mail.gmail.com>
	<CADwqtCPtsmn-xyBB1yq-EcUHvZpghmEDKCELMiJWiSTWJHWQag@mail.gmail.com>
	<CAGmpueg=AhvJwhw9qFtWXxEJjdXw8gFhmAXvFwQ67+R01atEqQ@mail.gmail.com>
	<CADwqtCOXUmCJTr_wVycrAhzcvZ0Lc21Qj+P1Hi4=7Scm6Qfm-A@mail.gmail.com>
	<CAGmpuehOb4HDA4N0vsgK2=k0qk0ucxvKumwicQj5uwm96LgqMg@mail.gmail.com>
Message-ID: <CAOQ5NydFGgJq76FY2oTbK5Vhu+_qz+boVLG5cDvYUvwC-rWZZA@mail.gmail.com>

On Thu, Nov 27, 2014 at 6:53 PM, Janko Thyson <janko.thyson at gmail.com>
wrote:

> Well, the benefit lies in the ability to pass along arguments via `...` to
> more than one recipient that use *identical argument names* and/or when
> these recipients are not necessarily located on the same calling stack
> layer.
>
> I'm *not* after a *general* change in the way arguments are
> dispatched/functions are called as I'm actually a big friend of keepings
> things quite explicit (thus declaring explicitly what's passed on to
> subsequent functions by defining respective formal arguments).
> Nevertheless, sometimes it's quite handy to use `...`.
>
> Consider the implementation of `plot()`. It uses `...` quite extensively to
> pass things along to `par()` which makes perfect sense: declaring formal
> arguments for things that are merely passed along to `par()` in *all*
> functions that depend on `par()` would probably be a developer's nightmare
> w.r.t. refactoring should `par()` ever change.
>
> But let's say that at one point in time, developers decide that `par()` can
> also call something like `parShiny()` if `shiny = TRUE` in order
> encapsulate shiny-specific graphical parameters in a own function (sorry, I
> couldn't come up with a better example just now).  I'm using a simplified
> example where `cex` is indeed a formal parameter (which is not the case in
> the actual `par()`):
>
> myPlot <- function(x, ...) {
>   myPar(...)
> }
> myPar <- function (cex = 1.0, shiny = FALSE, ...) {
>   if (!shiny) {
>     message("myPar/cex:")
>     print(cex)
>   } else {
>     parShiny(...)
>   }
> }
> parShiny <- function (cex = 1.0) {
>   message("parShiny/cex:")
>   print(cex)
> }
> > myPlot(x = 10, cex = 1.25)
> myPar/cex:
> [1] 1.25
>
> > myPlot(x = 10, cex = 1.25, shiny = TRUE)
> parShiny/cex:
> [1] 1
>
> So: due to the fact that `myPar()` has a formal argument `cex`, `...` is
> out of the question for passing along `cex` to `parShiny()`. You'd have to
> change things to `parShiny(cex = cex)` in the implementation of `myPar()`
> in order for this to work as expected - which you might or might not feel
> is (too) cumbersome.
>
> While it probably makes a lot of sense to pass things along explicitly in
> 95 % of cases, there might be situations where you'd prefer to being able
> to use `...`.
>
> But I don't want to overstress the (current) purpose/use case behind my
> request. I just wondered if the limitation of not being able to mix `...`
> with other formal arguments could be lifted soon as the possiblity is
> already stated at `?dotsMethods` :-)
>

It would be good to have a solid use case described.  In cases where there
are explicit arguments that need to be in the signature, the `...`
typically forwards extraneous parameters of various types. It seems that
whenever we need to dispatch on `...`, we do not need to dispatch on any
other argument. Collection constructors/combiners are the typical example.


> On Fri, Nov 28, 2014 at 2:40 AM, Gabriel Becker <gmbecker at ucdavis.edu>
> wrote:
>
> > I think I understand what you're saying now, but I'm still kind of
> missing
> > the benefit from the approach.
> >
> > As far as I can tell just giving foo formals for the arguments you want
> it
> > to catch gives you the end result you want, doesn't it?
> >
> > And if the generic has ... in it, you can (if you're very careful) add
> > formals to specific methods that would capture arguments not meant for
> > other methods of the same generic.
> >
> > ~G
> >
> > On Thu, Nov 27, 2014 at 11:26 AM, Janko Thyson <janko.thyson at gmail.com>
> > wrote:
> >
> >> Hi Gabriel,
> >>
> >> and thanks for answering. I'm basically just trying to find a way to use
> >> the power of `...` in more complex scenarios and I'm well aware that
> this
> >> might not be the best approach ;-)
> >>
> >> Regarding your actual question:
> >> "Are you suggesting methods be dispatched based on the *contents* of ...
> >> [...]?"
> >> Yes, I guess currently I kind of do - but not on the argument *names*
> >>
> >> I'm not expecting functions to detect the argument *names*  from `...`,
> >> but the relevant "argument containers" from which then the actual
> arguments
> >> should be extracted and used:
> >>
> >> I thought the *actual* arguments to be passed via `...` to subsequent
> >> functions/methods could be put into an "arguments container" (as a list
> so
> >> you could easily use them with `do.call(foo)`) that has a class that
> `foo`
> >> expects for its `...` argument (e.g. `ThreedotsForFoo`). What I would
> like
> >> to accomplish is that `foo` auto-detects those parts coming in via `...`
> >> that are *relevant* for itself (e.g. instances of the argument container
> >> `ThreedotsForFoo`), that it handles them in a proper way (i.e.
> extracting
> >> the *actual* arguments from the container) and that it passes `...`
> along
> >> to subsequently called functions.
> >>
> >> That's why I would need methods that use mix of regular formal arguments
> >> and `...`.
> >>
> >> Best regards,
> >> Janko
> >>
> >>
> >> On Thu, Nov 27, 2014 at 7:48 PM, Gabriel Becker <gmbecker at ucdavis.edu>
> >> wrote:
> >>
> >>> Janko,
> >>>
> >>> I'm not entirely sure I understand your proposal. Are you suggesting
> >>> methods be dispatched based on the *contents* of ... (ie which
> arguments
> >>> are in there)? This seems like it would be pretty different from how
> >>> dispatch behaves now, which is entirely class based.
> >>>
> >>> Even the dispatching based on ... via dots methods is class based,
> >>> having nothing to do AFAIK with the argument names. From ?dotsMethods
> >>>
> >>> A method selecting on ?...? is specified by a single class in the call
> >>> to setMethod <http://127.0.0.1:11942/library/methods/help/setMethod>.
> >>> If all the actual arguments corresponding to ?...? have this class, the
> >>> corresponding method is selected directly.
> >>>
> >>> Otherwise, the class of each argument and that class' superclasses are
> >>> computed, beginning with the first ?...? argument. For the first
> argument,
> >>> eligible methods are those for any of the classes. For each succeeding
> >>> argument that introduces a class not considered previously, the
> eligible
> >>> methods are further restricted to those matching the argument's class
> or
> >>> superclasses. If no further eligible classes exist, the iteration
> breaks
> >>> out and the default method, if any, is selected.
> >>>
> >>>
> >>> No mention of argument name there.
> >>>
> >>> ~G
> >>>
> >>> On Thu, Nov 27, 2014 at 9:45 AM, Janko Thyson <janko.thyson at gmail.com>
> >>> wrote:
> >>>
> >>>> Dear List,
> >>>>
> >>>> I'm currently investigating if the argument dispatch mechanism based
> on
> >>>> `...` could somehow be "generalized" to scenarios that involve `r`
> >>>> recipients located across `c` calling stack layers *and* combined with
> >>>> the
> >>>> S4 method mechanism (for those interested see
> >>>>
> >>>>
> http://stackoverflow.com/questions/26963900/generalizing-three-dots-argument-dispatch-s4-methods-for-argument-set-i
> >>>> for an (conceptual) approach of how this could be realized).
> >>>>
> >>>> AFAICT, this would require that `...` can be *mixed* with other
> >>>> signature
> >>>> arguments, which is currently not supported as stated in
> `?dotsMethods`:
> >>>>
> >>>> Quote {
> >>>> Using "..." in a Signature
> >>>>
> >>>> Beginning with version 2.8.0 of R, S4 methods can be dispatched
> >>>> (selected
> >>>> and called) corresponding to the special argument ?...?. Currently,
> >>>> ?...?
> >>>> cannot be mixed with other formal arguments: either the signature of
> the
> >>>> generic function is ?...? only, or it does not contain ?...?. (This
> >>>> restriction may be lifted in a future version.)
> >>>> }
> >>>>
> >>>> Would it be possible to consider lifting this limitation soon?
> >>>>
> >>>> Thanks a lot to everyone maintaining R!!
> >>>>
> >>>> Janko
> >>>>
> >>>>         [[alternative HTML version deleted]]
> >>>>
> >>>> ______________________________________________
> >>>> R-devel at r-project.org mailing list
> >>>> https://stat.ethz.ch/mailman/listinfo/r-devel
> >>>>
> >>>
> >>>
> >>>
> >>> --
> >>> Gabriel Becker
> >>> Graduate Student
> >>> Statistics Department
> >>> University of California, Davis
> >>>
> >>
> >>
> >
> >
> > --
> > Gabriel Becker
> > Graduate Student
> > Statistics Department
> > University of California, Davis
> >
>
>         [[alternative HTML version deleted]]
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>

	[[alternative HTML version deleted]]


From louis.aslett at stats.ox.ac.uk  Tue Dec  2 19:34:34 2014
From: louis.aslett at stats.ox.ac.uk (Louis Aslett)
Date: Tue, 2 Dec 2014 18:34:34 +0000
Subject: [Rd] Bundling system dependencies in binary packages
Message-ID: <CADTpfYmVNwonQoo_0yu+up7aR-i20oJFyvkJmK1YQvS4bkvysQ@mail.gmail.com>

I've been hunting round for the accepted method of bundling system
dependencies into binary packages.

For example, there are some CRAN packages (e.g. gmp, RcppArmadillo,
...) which don't require the system dependencies be installed for the
Windows and Mac binary builds.  I understand that there are a very
limited number of packages for which CRAN would do this, so as a first
step I'm *not* asking how to get this on CRAN, but rather this
highlights there must be a (fairly automated/easy) mechanism to
achieve this.  Is it as simple as statically linking?  If so there's
surely an automated way to trigger this without having to modify
Makevars to produce the static linked packages?

The Writing R Extensions manual section on binary packages doesn't
mention this and I've tried extensive Googling without joy.

So in a nut shell, I'm looking to bundle a binary version of GMP
(https://gmplib.org) and FLINT (http://flintlib.org) into my package
for Windows/Mac users who can't/won't compile the libraries and which
I can distribute independently of CRAN, but without having to do so in
a manual/hacky way by tweaking Makevars each time, or modifying the
tgz/zip produced by R.

Hope I've been clear enough there.

Any pointers much appreciated,

Louis


From edd at debian.org  Tue Dec  2 21:20:08 2014
From: edd at debian.org (Dirk Eddelbuettel)
Date: Tue, 2 Dec 2014 14:20:08 -0600
Subject: [Rd] Bundling system dependencies in binary packages
In-Reply-To: <CADTpfYmVNwonQoo_0yu+up7aR-i20oJFyvkJmK1YQvS4bkvysQ@mail.gmail.com>
References: <CADTpfYmVNwonQoo_0yu+up7aR-i20oJFyvkJmK1YQvS4bkvysQ@mail.gmail.com>
Message-ID: <21630.7928.419601.81831@max.nulle.part>


On 2 December 2014 at 18:34, Louis Aslett wrote:
| I've been hunting round for the accepted method of bundling system
| dependencies into binary packages.
| 
| For example, there are some CRAN packages (e.g. gmp, RcppArmadillo,
| ...) which don't require the system dependencies be installed for the
| Windows and Mac binary builds.  I understand that there are a very
| limited number of packages for which CRAN would do this, so as a first
| step I'm *not* asking how to get this on CRAN, but rather this
| highlights there must be a (fairly automated/easy) mechanism to
| achieve this.  Is it as simple as statically linking?  If so there's
| surely an automated way to trigger this without having to modify
| Makevars to produce the static linked packages?
| 
| The Writing R Extensions manual section on binary packages doesn't
| mention this and I've tried extensive Googling without joy.
| 
| So in a nut shell, I'm looking to bundle a binary version of GMP
| (https://gmplib.org) and FLINT (http://flintlib.org) into my package
| for Windows/Mac users who can't/won't compile the libraries and which
| I can distribute independently of CRAN, but without having to do so in
| a manual/hacky way by tweaking Makevars each time, or modifying the
| tgz/zip produced by R.
| 
| Hope I've been clear enough there.
| 
| Any pointers much appreciated,

I am not certain I fully understand what you are asking, but here is one
optmistic interpretation.

Sometimes you need a binary library present on the system. In some of these
cases, we help CRAN by providing pre-built libraries -- with instructions
which make it reproducible, eg Makefiles.  Sometimes CRAN even helps, ie the
last time we needed a QuantLib update Prof Ripley kindly built one via the
crosscompiler set up on one of his machines.  

Per CRAN Policies, these libraries need to be Open Source, and be buildable
from sources. The sources, and zipfiles, are generally somewhere on the
Oxford archive; pointers are in the appendix of either / both of Writing R
Extensions and R Installation and Administration.  Eg look at

   http://www.stats.ox.ac.uk/pub/Rtools/goodies/

Hope this helps,  Dirk

-- 
http://dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org


From ripley at stats.ox.ac.uk  Wed Dec  3 07:40:00 2014
From: ripley at stats.ox.ac.uk (Prof Brian Ripley)
Date: Wed, 03 Dec 2014 06:40:00 +0000
Subject: [Rd] Bundling system dependencies in binary packages
In-Reply-To: <CADTpfYmVNwonQoo_0yu+up7aR-i20oJFyvkJmK1YQvS4bkvysQ@mail.gmail.com>
References: <CADTpfYmVNwonQoo_0yu+up7aR-i20oJFyvkJmK1YQvS4bkvysQ@mail.gmail.com>
Message-ID: <547EB040.3010306@stats.ox.ac.uk>

On 02/12/2014 18:34, Louis Aslett wrote:
> I've been hunting round for the accepted method of bundling system
> dependencies into binary packages.
>
> For example, there are some CRAN packages (e.g. gmp, RcppArmadillo,
> ...) which don't require the system dependencies be installed for the
> Windows and Mac binary builds.  I understand that there are a very
> limited number of packages for which CRAN would do this, so as a first
> step I'm *not* asking how to get this on CRAN, but rather this
> highlights there must be a (fairly automated/easy) mechanism to
> achieve this.  Is it as simple as statically linking?  If so there's

Well, packages using just C++ headers (RcppArmadillo is one) do not have 
libraries to link to.

But as far as possible the Windows and OS X binary packages are 
statically linked.  What is available to CRAN package builds is at
http://www.stats.ox.ac.uk/pub/Rtools/libs.html
http://r.research.att.com/libs/ (and includes gmp).

> surely an automated way to trigger this without having to modify
> Makevars to produce the static linked packages?
>
> The Writing R Extensions manual section on binary packages doesn't
> mention this and I've tried extensive Googling without joy.

Nothing special is needed: the linkers use static linking if there is no 
dynamic library available.  So the external software is built with 
configure options --enable-static --disable-shared .  On OS X it also 
has to be built with PIC flags (not the default for static libraries).

> So in a nut shell, I'm looking to bundle a binary version of GMP
> (https://gmplib.org) and FLINT (http://flintlib.org) into my package
> for Windows/Mac users who can't/won't compile the libraries and which
> I can distribute independently of CRAN, but without having to do so in
> a manual/hacky way by tweaking Makevars each time, or modifying the
> tgz/zip produced by R.

There are a few exceptions where dynamic linking is used on Windows, and 
the configure scripts are used to install DLLs into the libs directory. 
  (RCurl is one, currently.)  The main reason for not doing so is naming 
conflicts for DLLs on Windows. For example, if you were to have a 
gmp.dll and so did package gmp, the first loaded would win, even though 
they might be different versions (and this was common for zlib1.dll).

>
> Hope I've been clear enough there.
>
> Any pointers much appreciated,
>
> Louis
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>


-- 
Brian D. Ripley,                  ripley at stats.ox.ac.uk
Emeritus Professor of Applied Statistics, University of Oxford
1 South Parks Road, Oxford OX1 3TG, UK


From haverty.peter at gene.com  Wed Dec  3 03:46:39 2014
From: haverty.peter at gene.com (Peter Haverty)
Date: Tue, 2 Dec 2014 18:46:39 -0800
Subject: [Rd] we need an exists/get hybrid
Message-ID: <CAGh0NYpRdR94UHHuaR4diYoCKPHU+1HceoBH=KEme+box0HV+Q@mail.gmail.com>

Hi All,

I've been looking into speeding up the loading of packages that use a lot
of S4.  After profiling I noticed the "exists" function accounts for a
surprising fraction of the time.  I have some thoughts about speeding up
exists (below). More to the point of this post, Martin M?chler noted that
'exists' and 'get' are often used in conjunction.  Both functions are
different usages of the do_get C function, so it's a pity to run that twice.

"get" gives an error when a symbol is not found, so you can't just do a
'get'.  With R's C library, one might do

SEXP x = findVarInFrame3(symbol,env);
if (x != R_UnboundValue) {
    // do stuff with x
}

It would be very convenient to have something like this at the R level. We
don't want to do any tryCatch stuff or to add args to get (That would kill
any speed advantage. The overhead for handling redundant args accounts for
30% of the time used by "exists").  Michael Lawrence and I worked out that
we need a function that returns either the desired object, or something
that represents R_UnboundValue. We also need a very cheap way to check if
something equals this new R_UnboundValue. This might look like

if (defined(x <- fetch(symbol, env))) {
  do_stuff_with_x(x)
}

A few more thoughts about "exists":

Moving the bit of R in the exists function to C saves 10% of the time.
Dropping the redundant pos and frame args entirely saves 30% of the time
used by this function. I suggest that the arguments of both get and
exists should
be simplified to (x, envir, mode, inherits). The existing C code handles
numeric, character, and environment input for where. The arg frame is
rarely used (0/128 exists calls in the methods package). Users that need to
can call sys.frame themselves. get already lacks a frame argument and the
manpage for exists notes that envir is only there for backwards
compatibility. Let's deprecate the extra args in exists and get and perhaps
move the extra argument handling to C in the interim.  Similarly, the
"assign" function does nothing with the "immediate" argument.

I'd be interested to hear if there is any support for a "fetch"-like
function (and/or deprecating some unused arguments).

All the best,
Pete



Pete

____________________
Peter M. Haverty, Ph.D.
Genentech, Inc.
phaverty at gene.com

	[[alternative HTML version deleted]]


From louis.aslett at stats.ox.ac.uk  Wed Dec  3 20:40:06 2014
From: louis.aslett at stats.ox.ac.uk (Louis Aslett)
Date: Wed, 3 Dec 2014 19:40:06 +0000
Subject: [Rd] Bundling system dependencies in binary packages
In-Reply-To: <CADTpfY=F6hSWoLNf2P7DqFX95H8i23DB6GvyF6yFFX8h=eyKpg@mail.gmail.com>
References: <CADTpfY=F6hSWoLNf2P7DqFX95H8i23DB6GvyF6yFFX8h=eyKpg@mail.gmail.com>
Message-ID: <CADTpfYm3RB832UfN=ngc2=KQ4PzVRqKGGpa1pnCUtVN=KM0shQ@mail.gmail.com>

On 3 December 2014 at 07:40, Prof Brian Ripley wrote:
> On 02/12/2014 18:34, Louis Aslett wrote:
>> I've been hunting round for the accepted method of bundling system
>> dependencies into binary packages.
>>
>> For example, there are some CRAN packages (e.g. gmp, RcppArmadillo,
>> ...) which don't require the system dependencies be installed for the
>> Windows and Mac binary builds.  I understand that there are a very
>> limited number of packages for which CRAN would do this, so as a first
>> step I'm *not* asking how to get this on CRAN, but rather this
>> highlights there must be a (fairly automated/easy) mechanism to
>> achieve this.  Is it as simple as statically linking?  If so there's
>
> Well, packages using just C++ headers (RcppArmadillo is one) do not have
> libraries to link to.

Sorry, yes I discovered when I went to do a concrete example that I
was mistaken in thinking RcppArmadillo fell under the category of
packages I was thinking about.  gmp is the exemplar for bundling
dependencies that my query was driving at.

>
> But as far as possible the Windows and OS X binary packages are
> statically linked.  What is available to CRAN package builds is at
> http://www.stats.ox.ac.uk/pub/Rtools/libs.html
> http://r.research.att.com/libs/ (and includes gmp).
>
>> surely an automated way to trigger this without having to modify
>> Makevars to produce the static linked packages?
>>
>> The Writing R Extensions manual section on binary packages doesn't
>> mention this and I've tried extensive Googling without joy.
>
> Nothing special is needed: the linkers use static linking if there is no
> dynamic library available.  So the external software is built with
> configure options --enable-static --disable-shared .  On OS X it also
> has to be built with PIC flags (not the default for static libraries).
>

Ok, this was exactly the issue ... my GMP didn't have PIC for the
static library.  As soon as I recompiled GMP using --with-pic for the
configure script I was able to temporarily rename my dynamic library
versions of GMP and FLINT and it picked up the static libraries
without throwing any errors.

Thank you very much -- I wasn't at all aware PIC was needed for static
code on OS X!  I'd assumed I was missing something much more
elaborate.

>> So in a nut shell, I'm looking to bundle a binary version of GMP
>> (https://gmplib.org) and FLINT (http://flintlib.org) into my package
>> for Windows/Mac users who can't/won't compile the libraries and which
>> I can distribute independently of CRAN, but without having to do so in
>> a manual/hacky way by tweaking Makevars each time, or modifying the
>> tgz/zip produced by R.
>
> There are a few exceptions where dynamic linking is used on Windows, and
> the configure scripts are used to install DLLs into the libs directory.
>   (RCurl is one, currently.)  The main reason for not doing so is naming
> conflicts for DLLs on Windows. For example, if you were to have a
> gmp.dll and so did package gmp, the first loaded would win, even though
> they might be different versions (and this was common for zlib1.dll).
>

Many thanks again,

Louis


From winstonchang1 at gmail.com  Wed Dec  3 21:48:59 2014
From: winstonchang1 at gmail.com (Winston Chang)
Date: Wed, 3 Dec 2014 14:48:59 -0600
Subject: [Rd] we need an exists/get hybrid
In-Reply-To: <CAGh0NYpRdR94UHHuaR4diYoCKPHU+1HceoBH=KEme+box0HV+Q@mail.gmail.com>
References: <CAGh0NYpRdR94UHHuaR4diYoCKPHU+1HceoBH=KEme+box0HV+Q@mail.gmail.com>
Message-ID: <CAFOpNVG4HJ5Z-uNpNcDFCF6_AS2a4jcN1THoowZPcCOYGi7UCg@mail.gmail.com>

I've looked at related speed issues in the past, and have a couple
related points to add. (I've put the info below at
http://rpubs.com/wch/46428.)

There?s a significant amount of overhead just from calling the R
function get(). This is true even when you skip the pos argument and
provide envir. For example, if you call get(), it takes much more time
than .Internal(get()), which is what get() does.

If you already know that the object exists in an environment, it's
faster to use e$x, and slightly faster still to use e[["x"]]:

e <- new.env()
e$a <- 1

# Accessing objects in environments
microbenchmark(
  get("a", e, inherits = FALSE),
  get("a", envir = e, inherits = FALSE),
  .Internal(get("a", e, "any", FALSE)),
  e$a,
  e[["a"]],
  .Primitive("[[")(e, "a"),

  unit = "us"
)
#>   median                                  name
#> 1 1.0300         get("a", e, inherits = FALSE)
#> 2 0.9425 get("a", envir = e, inherits = FALSE)
#> 3 0.3080  .Internal(get("a", e, "any", FALSE))
#> 4 0.2305                                   e$a
#> 5 0.1740                              e[["a"]]
#> 6 0.2905              .Primitive("[[")(e, "a")


A similar thing happens with exists(): the R function wrapper adds
significant overhead on top of .Internal(exists()). It?s also faster
to use $ and [[, then test for NULL, but of course this won?t
distinguish between objects that don?t exist, and those that do exist
but have a NULL value:

# Test for existence of `a` (which exists), and `c` (which doesn't)
microbenchmark(
  exists('a', e, inherits = FALSE),
  exists('a', envir = e, inherits = FALSE),
  .Internal(exists('a', e, 'any', FALSE)),
  'a' %in% ls(e, all.names = TRUE),
  is.null(e[['a']]),
  is.null(e$a),

  exists('c', e, inherits = FALSE),
  exists('c', envir = e, inherits = FALSE),
  .Internal(exists('c', e, 'any', FALSE)),
  'c' %in% ls(e, all.names = TRUE),
  is.null(e[['c']]),
  is.null(e$c),

  unit = "us"
)
#>    median                                     name
#> 1  1.2015         exists("a", e, inherits = FALSE)
#> 2  1.0545 exists("a", envir = e, inherits = FALSE)
#> 3  0.3615  .Internal(exists("a", e, "any", FALSE))
#> 4  7.6345         "a" %in% ls(e, all.names = TRUE)
#> 5  0.3055                        is.null(e[["a"]])
#> 6  0.3270                             is.null(e$a)
#> 7  1.1890         exists("c", e, inherits = FALSE)
#> 8  1.0370 exists("c", envir = e, inherits = FALSE)
#> 9  0.3465  .Internal(exists("c", e, "any", FALSE))
#> 10 7.5475         "c" %in% ls(e, all.names = TRUE)
#> 11 0.2675                        is.null(e[["c"]])
#> 12 0.3010                             is.null(e$c)


-Winston

On Tue, Dec 2, 2014 at 8:46 PM, Peter Haverty <haverty.peter at gene.com> wrote:
> Hi All,
>
> I've been looking into speeding up the loading of packages that use a lot
> of S4.  After profiling I noticed the "exists" function accounts for a
> surprising fraction of the time.  I have some thoughts about speeding up
> exists (below). More to the point of this post, Martin M?chler noted that
> 'exists' and 'get' are often used in conjunction.  Both functions are
> different usages of the do_get C function, so it's a pity to run that twice.
>
> "get" gives an error when a symbol is not found, so you can't just do a
> 'get'.  With R's C library, one might do
>
> SEXP x = findVarInFrame3(symbol,env);
> if (x != R_UnboundValue) {
>     // do stuff with x
> }
>
> It would be very convenient to have something like this at the R level. We
> don't want to do any tryCatch stuff or to add args to get (That would kill
> any speed advantage. The overhead for handling redundant args accounts for
> 30% of the time used by "exists").  Michael Lawrence and I worked out that
> we need a function that returns either the desired object, or something
> that represents R_UnboundValue. We also need a very cheap way to check if
> something equals this new R_UnboundValue. This might look like
>
> if (defined(x <- fetch(symbol, env))) {
>   do_stuff_with_x(x)
> }
>
> A few more thoughts about "exists":
>
> Moving the bit of R in the exists function to C saves 10% of the time.
> Dropping the redundant pos and frame args entirely saves 30% of the time
> used by this function. I suggest that the arguments of both get and
> exists should
> be simplified to (x, envir, mode, inherits). The existing C code handles
> numeric, character, and environment input for where. The arg frame is
> rarely used (0/128 exists calls in the methods package). Users that need to
> can call sys.frame themselves. get already lacks a frame argument and the
> manpage for exists notes that envir is only there for backwards
> compatibility. Let's deprecate the extra args in exists and get and perhaps
> move the extra argument handling to C in the interim.  Similarly, the
> "assign" function does nothing with the "immediate" argument.
>
> I'd be interested to hear if there is any support for a "fetch"-like
> function (and/or deprecating some unused arguments).
>
> All the best,
> Pete
>
>
>
> Pete
>
> ____________________
> Peter M. Haverty, Ph.D.
> Genentech, Inc.
> phaverty at gene.com
>
>         [[alternative HTML version deleted]]
>
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>


From haverty.peter at gene.com  Wed Dec  3 22:30:32 2014
From: haverty.peter at gene.com (Peter Haverty)
Date: Wed, 3 Dec 2014 13:30:32 -0800
Subject: [Rd] we need an exists/get hybrid
In-Reply-To: <CAFOpNVG4HJ5Z-uNpNcDFCF6_AS2a4jcN1THoowZPcCOYGi7UCg@mail.gmail.com>
References: <CAGh0NYpRdR94UHHuaR4diYoCKPHU+1HceoBH=KEme+box0HV+Q@mail.gmail.com>
	<CAFOpNVG4HJ5Z-uNpNcDFCF6_AS2a4jcN1THoowZPcCOYGi7UCg@mail.gmail.com>
Message-ID: <CAGh0NYqarER=x5kftdOJj4vU=Xm2P424DvfN1SSvseD3LBNrpw@mail.gmail.com>

Thanks Winston!  I'm amazed that "[[" beats calling the .Internal
directly.  I guess the difference between .Primitive vs. .Internal is
pretty significant for things on this time scale.

NULL meaning NULL and NULL meaning undefined would lead to the same path
for much of my code.  I'll be swapping out many exists and get calls later
today.  Thanks!

I do still think it would be very useful to have some way to discriminate
the two NULL cases.  I'm reminded of how perl does the same thing.  It's
been a while, but it was something like

if (defined(x{'c'})) { print x{'c'}; }  # This is still two lookups, but it
has the "defined" concept.

or maybe even

if (defined( foo = x{'c'} ) ) { print foo; }


Thanks again for the timings!


Pete

____________________
Peter M. Haverty, Ph.D.
Genentech, Inc.
phaverty at gene.com

On Wed, Dec 3, 2014 at 12:48 PM, Winston Chang <winstonchang1 at gmail.com>
wrote:

> I've looked at related speed issues in the past, and have a couple
> related points to add. (I've put the info below at
> http://rpubs.com/wch/46428.)
>
> There's a significant amount of overhead just from calling the R
> function get(). This is true even when you skip the pos argument and
> provide envir. For example, if you call get(), it takes much more time
> than .Internal(get()), which is what get() does.
>
> If you already know that the object exists in an environment, it's
> faster to use e$x, and slightly faster still to use e[["x"]]:
>
> e <- new.env()
> e$a <- 1
>
> # Accessing objects in environments
> microbenchmark(
>   get("a", e, inherits = FALSE),
>   get("a", envir = e, inherits = FALSE),
>   .Internal(get("a", e, "any", FALSE)),
>   e$a,
>   e[["a"]],
>   .Primitive("[[")(e, "a"),
>
>   unit = "us"
> )
> #>   median                                  name
> #> 1 1.0300         get("a", e, inherits = FALSE)
> #> 2 0.9425 get("a", envir = e, inherits = FALSE)
> #> 3 0.3080  .Internal(get("a", e, "any", FALSE))
> #> 4 0.2305                                   e$a
> #> 5 0.1740                              e[["a"]]
> #> 6 0.2905              .Primitive("[[")(e, "a")
>
>
> A similar thing happens with exists(): the R function wrapper adds
> significant overhead on top of .Internal(exists()). It's also faster
> to use $ and [[, then test for NULL, but of course this won't
> distinguish between objects that don't exist, and those that do exist
> but have a NULL value:
>
> # Test for existence of `a` (which exists), and `c` (which doesn't)
> microbenchmark(
>   exists('a', e, inherits = FALSE),
>   exists('a', envir = e, inherits = FALSE),
>   .Internal(exists('a', e, 'any', FALSE)),
>   'a' %in% ls(e, all.names = TRUE),
>   is.null(e[['a']]),
>   is.null(e$a),
>
>   exists('c', e, inherits = FALSE),
>   exists('c', envir = e, inherits = FALSE),
>   .Internal(exists('c', e, 'any', FALSE)),
>   'c' %in% ls(e, all.names = TRUE),
>   is.null(e[['c']]),
>   is.null(e$c),
>
>   unit = "us"
> )
> #>    median                                     name
> #> 1  1.2015         exists("a", e, inherits = FALSE)
> #> 2  1.0545 exists("a", envir = e, inherits = FALSE)
> #> 3  0.3615  .Internal(exists("a", e, "any", FALSE))
> #> 4  7.6345         "a" %in% ls(e, all.names = TRUE)
> #> 5  0.3055                        is.null(e[["a"]])
> #> 6  0.3270                             is.null(e$a)
> #> 7  1.1890         exists("c", e, inherits = FALSE)
> #> 8  1.0370 exists("c", envir = e, inherits = FALSE)
> #> 9  0.3465  .Internal(exists("c", e, "any", FALSE))
> #> 10 7.5475         "c" %in% ls(e, all.names = TRUE)
> #> 11 0.2675                        is.null(e[["c"]])
> #> 12 0.3010                             is.null(e$c)
>
>
> -Winston
>
> On Tue, Dec 2, 2014 at 8:46 PM, Peter Haverty <haverty.peter at gene.com>
> wrote:
> > Hi All,
> >
> > I've been looking into speeding up the loading of packages that use a lot
> > of S4.  After profiling I noticed the "exists" function accounts for a
> > surprising fraction of the time.  I have some thoughts about speeding up
> > exists (below). More to the point of this post, Martin M?chler noted that
> > 'exists' and 'get' are often used in conjunction.  Both functions are
> > different usages of the do_get C function, so it's a pity to run that
> twice.
> >
> > "get" gives an error when a symbol is not found, so you can't just do a
> > 'get'.  With R's C library, one might do
> >
> > SEXP x = findVarInFrame3(symbol,env);
> > if (x != R_UnboundValue) {
> >     // do stuff with x
> > }
> >
> > It would be very convenient to have something like this at the R level.
> We
> > don't want to do any tryCatch stuff or to add args to get (That would
> kill
> > any speed advantage. The overhead for handling redundant args accounts
> for
> > 30% of the time used by "exists").  Michael Lawrence and I worked out
> that
> > we need a function that returns either the desired object, or something
> > that represents R_UnboundValue. We also need a very cheap way to check if
> > something equals this new R_UnboundValue. This might look like
> >
> > if (defined(x <- fetch(symbol, env))) {
> >   do_stuff_with_x(x)
> > }
> >
> > A few more thoughts about "exists":
> >
> > Moving the bit of R in the exists function to C saves 10% of the time.
> > Dropping the redundant pos and frame args entirely saves 30% of the time
> > used by this function. I suggest that the arguments of both get and
> > exists should
> > be simplified to (x, envir, mode, inherits). The existing C code handles
> > numeric, character, and environment input for where. The arg frame is
> > rarely used (0/128 exists calls in the methods package). Users that need
> to
> > can call sys.frame themselves. get already lacks a frame argument and the
> > manpage for exists notes that envir is only there for backwards
> > compatibility. Let's deprecate the extra args in exists and get and
> perhaps
> > move the extra argument handling to C in the interim.  Similarly, the
> > "assign" function does nothing with the "immediate" argument.
> >
> > I'd be interested to hear if there is any support for a "fetch"-like
> > function (and/or deprecating some unused arguments).
> >
> > All the best,
> > Pete
> >
> >
> >
> > Pete
> >
> > ____________________
> > Peter M. Haverty, Ph.D.
> > Genentech, Inc.
> > phaverty at gene.com
> >
> >         [[alternative HTML version deleted]]
> >
> >
> > ______________________________________________
> > R-devel at r-project.org mailing list
> > https://stat.ethz.ch/mailman/listinfo/r-devel
> >
>

	[[alternative HTML version deleted]]


From lorenz at usgs.gov  Thu Dec  4 15:24:17 2014
From: lorenz at usgs.gov (Lorenz, David)
Date: Thu, 4 Dec 2014 08:24:17 -0600
Subject: [Rd] we need an exists/get hybrid
In-Reply-To: <CAGh0NYqarER=x5kftdOJj4vU=Xm2P424DvfN1SSvseD3LBNrpw@mail.gmail.com>
References: <CAGh0NYpRdR94UHHuaR4diYoCKPHU+1HceoBH=KEme+box0HV+Q@mail.gmail.com>
	<CAFOpNVG4HJ5Z-uNpNcDFCF6_AS2a4jcN1THoowZPcCOYGi7UCg@mail.gmail.com>
	<CAGh0NYqarER=x5kftdOJj4vU=Xm2P424DvfN1SSvseD3LBNrpw@mail.gmail.com>
Message-ID: <CALxY2LegnGkYeTxkpMeH+b=8ns_tWidAoXHeypvWoepCAthTZg@mail.gmail.com>

All,
  So that suggests that .GlobalEnv[["X"]] is more efficient than get("X",
pos=1L). What about .GlobalEnv[["X"]] <-  value, compared to assign("X",
value)?
Dave

On Wed, Dec 3, 2014 at 3:30 PM, Peter Haverty <haverty.peter at gene.com>
wrote:

> Thanks Winston!  I'm amazed that "[[" beats calling the .Internal
> directly.  I guess the difference between .Primitive vs. .Internal is
> pretty significant for things on this time scale.
>
> NULL meaning NULL and NULL meaning undefined would lead to the same path
> for much of my code.  I'll be swapping out many exists and get calls later
> today.  Thanks!
>
> I do still think it would be very useful to have some way to discriminate
> the two NULL cases.  I'm reminded of how perl does the same thing.  It's
> been a while, but it was something like
>
> if (defined(x{'c'})) { print x{'c'}; }  # This is still two lookups, but it
> has the "defined" concept.
>
> or maybe even
>
> if (defined( foo = x{'c'} ) ) { print foo; }
>
>
> Thanks again for the timings!
>
>
> Pete
>
> ____________________
> Peter M. Haverty, Ph.D.
> Genentech, Inc.
> phaverty at gene.com
>
> On Wed, Dec 3, 2014 at 12:48 PM, Winston Chang <winstonchang1 at gmail.com>
> wrote:
>
> > I've looked at related speed issues in the past, and have a couple
> > related points to add. (I've put the info below at
> > http://rpubs.com/wch/46428.)
> >
> > There's a significant amount of overhead just from calling the R
> > function get(). This is true even when you skip the pos argument and
> > provide envir. For example, if you call get(), it takes much more time
> > than .Internal(get()), which is what get() does.
> >
> > If you already know that the object exists in an environment, it's
> > faster to use e$x, and slightly faster still to use e[["x"]]:
> >
> > e <- new.env()
> > e$a <- 1
> >
> > # Accessing objects in environments
> > microbenchmark(
> >   get("a", e, inherits = FALSE),
> >   get("a", envir = e, inherits = FALSE),
> >   .Internal(get("a", e, "any", FALSE)),
> >   e$a,
> >   e[["a"]],
> >   .Primitive("[[")(e, "a"),
> >
> >   unit = "us"
> > )
> > #>   median                                  name
> > #> 1 1.0300         get("a", e, inherits = FALSE)
> > #> 2 0.9425 get("a", envir = e, inherits = FALSE)
> > #> 3 0.3080  .Internal(get("a", e, "any", FALSE))
> > #> 4 0.2305                                   e$a
> > #> 5 0.1740                              e[["a"]]
> > #> 6 0.2905              .Primitive("[[")(e, "a")
> >
> >
> > A similar thing happens with exists(): the R function wrapper adds
> > significant overhead on top of .Internal(exists()). It's also faster
> > to use $ and [[, then test for NULL, but of course this won't
> > distinguish between objects that don't exist, and those that do exist
> > but have a NULL value:
> >
> > # Test for existence of `a` (which exists), and `c` (which doesn't)
> > microbenchmark(
> >   exists('a', e, inherits = FALSE),
> >   exists('a', envir = e, inherits = FALSE),
> >   .Internal(exists('a', e, 'any', FALSE)),
> >   'a' %in% ls(e, all.names = TRUE),
> >   is.null(e[['a']]),
> >   is.null(e$a),
> >
> >   exists('c', e, inherits = FALSE),
> >   exists('c', envir = e, inherits = FALSE),
> >   .Internal(exists('c', e, 'any', FALSE)),
> >   'c' %in% ls(e, all.names = TRUE),
> >   is.null(e[['c']]),
> >   is.null(e$c),
> >
> >   unit = "us"
> > )
> > #>    median                                     name
> > #> 1  1.2015         exists("a", e, inherits = FALSE)
> > #> 2  1.0545 exists("a", envir = e, inherits = FALSE)
> > #> 3  0.3615  .Internal(exists("a", e, "any", FALSE))
> > #> 4  7.6345         "a" %in% ls(e, all.names = TRUE)
> > #> 5  0.3055                        is.null(e[["a"]])
> > #> 6  0.3270                             is.null(e$a)
> > #> 7  1.1890         exists("c", e, inherits = FALSE)
> > #> 8  1.0370 exists("c", envir = e, inherits = FALSE)
> > #> 9  0.3465  .Internal(exists("c", e, "any", FALSE))
> > #> 10 7.5475         "c" %in% ls(e, all.names = TRUE)
> > #> 11 0.2675                        is.null(e[["c"]])
> > #> 12 0.3010                             is.null(e$c)
> >
> >
> > -Winston
> >
> > On Tue, Dec 2, 2014 at 8:46 PM, Peter Haverty <haverty.peter at gene.com>
> > wrote:
> > > Hi All,
> > >
> > > I've been looking into speeding up the loading of packages that use a
> lot
> > > of S4.  After profiling I noticed the "exists" function accounts for a
> > > surprising fraction of the time.  I have some thoughts about speeding
> up
> > > exists (below). More to the point of this post, Martin M?chler noted
> that
> > > 'exists' and 'get' are often used in conjunction.  Both functions are
> > > different usages of the do_get C function, so it's a pity to run that
> > twice.
> > >
> > > "get" gives an error when a symbol is not found, so you can't just do a
> > > 'get'.  With R's C library, one might do
> > >
> > > SEXP x = findVarInFrame3(symbol,env);
> > > if (x != R_UnboundValue) {
> > >     // do stuff with x
> > > }
> > >
> > > It would be very convenient to have something like this at the R level.
> > We
> > > don't want to do any tryCatch stuff or to add args to get (That would
> > kill
> > > any speed advantage. The overhead for handling redundant args accounts
> > for
> > > 30% of the time used by "exists").  Michael Lawrence and I worked out
> > that
> > > we need a function that returns either the desired object, or something
> > > that represents R_UnboundValue. We also need a very cheap way to check
> if
> > > something equals this new R_UnboundValue. This might look like
> > >
> > > if (defined(x <- fetch(symbol, env))) {
> > >   do_stuff_with_x(x)
> > > }
> > >
> > > A few more thoughts about "exists":
> > >
> > > Moving the bit of R in the exists function to C saves 10% of the time.
> > > Dropping the redundant pos and frame args entirely saves 30% of the
> time
> > > used by this function. I suggest that the arguments of both get and
> > > exists should
> > > be simplified to (x, envir, mode, inherits). The existing C code
> handles
> > > numeric, character, and environment input for where. The arg frame is
> > > rarely used (0/128 exists calls in the methods package). Users that
> need
> > to
> > > can call sys.frame themselves. get already lacks a frame argument and
> the
> > > manpage for exists notes that envir is only there for backwards
> > > compatibility. Let's deprecate the extra args in exists and get and
> > perhaps
> > > move the extra argument handling to C in the interim.  Similarly, the
> > > "assign" function does nothing with the "immediate" argument.
> > >
> > > I'd be interested to hear if there is any support for a "fetch"-like
> > > function (and/or deprecating some unused arguments).
> > >
> > > All the best,
> > > Pete
> > >
> > >
> > >
> > > Pete
> > >
> > > ____________________
> > > Peter M. Haverty, Ph.D.
> > > Genentech, Inc.
> > > phaverty at gene.com
> > >
> > >         [[alternative HTML version deleted]]
> > >
> > >
> > > ______________________________________________
> > > R-devel at r-project.org mailing list
> > > https://stat.ethz.ch/mailman/listinfo/r-devel
> > >
> >
>
>         [[alternative HTML version deleted]]
>
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>
>

	[[alternative HTML version deleted]]


From richierocks at gmail.com  Thu Dec  4 20:00:54 2014
From: richierocks at gmail.com (Richard Cotton)
Date: Thu, 4 Dec 2014 22:00:54 +0300
Subject: [Rd] \U with more than 4 digits returns the wrong character
Message-ID: <CAPp_+=cgbyzubhUEomg7DetnL0zuy0Xd-fkHd=kZwiO2qEifcg@mail.gmail.com>

If I type a character using \U syntax that has more than 4 digits, I
get the wrong character.  For example,

"\U1d4d0"

should print a mathematical bold script capital A.  See
http://www.fileformat.info/info/unicode/char/1d4d0/index.htm

On my machine, it prints the Hangul character corresponding to

"\Ud4d0"
http://www.fileformat.info/info/unicode/char/d4d0/index.htm

It seems that the hex-digit part is overflowing at 16^4.

I tested this on R3.1.2 and devel (2014-12-03 r67101) x64 under
Windows.  I played around with Sys.setlocale and options("encoding"),
but couldn't get the expected value.

Can others reproduce this?  It feels like a bug, but experience tells
me I probably have something silly going on with my setup.

-- 
Regards,
Richie


From sven.templer at gmail.com  Thu Dec  4 20:04:29 2014
From: sven.templer at gmail.com (Sven E. Templer)
Date: Thu, 4 Dec 2014 20:04:29 +0100
Subject: [Rd] we need an exists/get hybrid
In-Reply-To: <CALxY2LegnGkYeTxkpMeH+b=8ns_tWidAoXHeypvWoepCAthTZg@mail.gmail.com>
References: <CAGh0NYpRdR94UHHuaR4diYoCKPHU+1HceoBH=KEme+box0HV+Q@mail.gmail.com>
	<CAFOpNVG4HJ5Z-uNpNcDFCF6_AS2a4jcN1THoowZPcCOYGi7UCg@mail.gmail.com>
	<CAGh0NYqarER=x5kftdOJj4vU=Xm2P424DvfN1SSvseD3LBNrpw@mail.gmail.com>
	<CALxY2LegnGkYeTxkpMeH+b=8ns_tWidAoXHeypvWoepCAthTZg@mail.gmail.com>
Message-ID: <CAHuTOvo=xL_aK5aJbNResfpH60hsD=SFaUpUmv97v7v3d3iTHQ@mail.gmail.com>

David, 'assign' is slower than '<-':

##   median                                          expr

## 1 0.1440                                  X <- letters
## 2 0.4420         .Internal(assign("X", letters, e, F))
## 3 1.1820                           e[["X"]] <- letters
## 4 1.2570                                e$X <- letters
## 5 1.8380 assign("X", letters, envir = e, inherits = F)
## 6 1.9415         assign("X", letters, e, inherits = F)

(micro seconds, 500 times, see http://rpubs.com/setempler/46568)

---

Two questions:

'X<-letters' is the fastest since it does not need to change the
environment from 'benchmark' to 'e'?
Why is the call to '.Internal' faster than '[[<-' as compared to the
'get'/'[[' functions/benchmark of Winston?

thanks,
s

On 4 December 2014 at 15:24, Lorenz, David <lorenz at usgs.gov> wrote:
> All,
>   So that suggests that .GlobalEnv[["X"]] is more efficient than get("X",
> pos=1L). What about .GlobalEnv[["X"]] <-  value, compared to assign("X",
> value)?
> Dave
>
> On Wed, Dec 3, 2014 at 3:30 PM, Peter Haverty <haverty.peter at gene.com>
> wrote:
>
>> Thanks Winston!  I'm amazed that "[[" beats calling the .Internal
>> directly.  I guess the difference between .Primitive vs. .Internal is
>> pretty significant for things on this time scale.
>>
>> NULL meaning NULL and NULL meaning undefined would lead to the same path
>> for much of my code.  I'll be swapping out many exists and get calls later
>> today.  Thanks!
>>
>> I do still think it would be very useful to have some way to discriminate
>> the two NULL cases.  I'm reminded of how perl does the same thing.  It's
>> been a while, but it was something like
>>
>> if (defined(x{'c'})) { print x{'c'}; }  # This is still two lookups, but it
>> has the "defined" concept.
>>
>> or maybe even
>>
>> if (defined( foo = x{'c'} ) ) { print foo; }
>>
>>
>> Thanks again for the timings!
>>
>>
>> Pete
>>
>> ____________________
>> Peter M. Haverty, Ph.D.
>> Genentech, Inc.
>> phaverty at gene.com
>>
>> On Wed, Dec 3, 2014 at 12:48 PM, Winston Chang <winstonchang1 at gmail.com>
>> wrote:
>>
>> > I've looked at related speed issues in the past, and have a couple
>> > related points to add. (I've put the info below at
>> > http://rpubs.com/wch/46428.)
>> >
>> > There's a significant amount of overhead just from calling the R
>> > function get(). This is true even when you skip the pos argument and
>> > provide envir. For example, if you call get(), it takes much more time
>> > than .Internal(get()), which is what get() does.
>> >
>> > If you already know that the object exists in an environment, it's
>> > faster to use e$x, and slightly faster still to use e[["x"]]:
>> >
>> > e <- new.env()
>> > e$a <- 1
>> >
>> > # Accessing objects in environments
>> > microbenchmark(
>> >   get("a", e, inherits = FALSE),
>> >   get("a", envir = e, inherits = FALSE),
>> >   .Internal(get("a", e, "any", FALSE)),
>> >   e$a,
>> >   e[["a"]],
>> >   .Primitive("[[")(e, "a"),
>> >
>> >   unit = "us"
>> > )
>> > #>   median                                  name
>> > #> 1 1.0300         get("a", e, inherits = FALSE)
>> > #> 2 0.9425 get("a", envir = e, inherits = FALSE)
>> > #> 3 0.3080  .Internal(get("a", e, "any", FALSE))
>> > #> 4 0.2305                                   e$a
>> > #> 5 0.1740                              e[["a"]]
>> > #> 6 0.2905              .Primitive("[[")(e, "a")
>> >
>> >
>> > A similar thing happens with exists(): the R function wrapper adds
>> > significant overhead on top of .Internal(exists()). It's also faster
>> > to use $ and [[, then test for NULL, but of course this won't
>> > distinguish between objects that don't exist, and those that do exist
>> > but have a NULL value:
>> >
>> > # Test for existence of `a` (which exists), and `c` (which doesn't)
>> > microbenchmark(
>> >   exists('a', e, inherits = FALSE),
>> >   exists('a', envir = e, inherits = FALSE),
>> >   .Internal(exists('a', e, 'any', FALSE)),
>> >   'a' %in% ls(e, all.names = TRUE),
>> >   is.null(e[['a']]),
>> >   is.null(e$a),
>> >
>> >   exists('c', e, inherits = FALSE),
>> >   exists('c', envir = e, inherits = FALSE),
>> >   .Internal(exists('c', e, 'any', FALSE)),
>> >   'c' %in% ls(e, all.names = TRUE),
>> >   is.null(e[['c']]),
>> >   is.null(e$c),
>> >
>> >   unit = "us"
>> > )
>> > #>    median                                     name
>> > #> 1  1.2015         exists("a", e, inherits = FALSE)
>> > #> 2  1.0545 exists("a", envir = e, inherits = FALSE)
>> > #> 3  0.3615  .Internal(exists("a", e, "any", FALSE))
>> > #> 4  7.6345         "a" %in% ls(e, all.names = TRUE)
>> > #> 5  0.3055                        is.null(e[["a"]])
>> > #> 6  0.3270                             is.null(e$a)
>> > #> 7  1.1890         exists("c", e, inherits = FALSE)
>> > #> 8  1.0370 exists("c", envir = e, inherits = FALSE)
>> > #> 9  0.3465  .Internal(exists("c", e, "any", FALSE))
>> > #> 10 7.5475         "c" %in% ls(e, all.names = TRUE)
>> > #> 11 0.2675                        is.null(e[["c"]])
>> > #> 12 0.3010                             is.null(e$c)
>> >
>> >
>> > -Winston
>> >
>> > On Tue, Dec 2, 2014 at 8:46 PM, Peter Haverty <haverty.peter at gene.com>
>> > wrote:
>> > > Hi All,
>> > >
>> > > I've been looking into speeding up the loading of packages that use a
>> lot
>> > > of S4.  After profiling I noticed the "exists" function accounts for a
>> > > surprising fraction of the time.  I have some thoughts about speeding
>> up
>> > > exists (below). More to the point of this post, Martin M?chler noted
>> that
>> > > 'exists' and 'get' are often used in conjunction.  Both functions are
>> > > different usages of the do_get C function, so it's a pity to run that
>> > twice.
>> > >
>> > > "get" gives an error when a symbol is not found, so you can't just do a
>> > > 'get'.  With R's C library, one might do
>> > >
>> > > SEXP x = findVarInFrame3(symbol,env);
>> > > if (x != R_UnboundValue) {
>> > >     // do stuff with x
>> > > }
>> > >
>> > > It would be very convenient to have something like this at the R level.
>> > We
>> > > don't want to do any tryCatch stuff or to add args to get (That would
>> > kill
>> > > any speed advantage. The overhead for handling redundant args accounts
>> > for
>> > > 30% of the time used by "exists").  Michael Lawrence and I worked out
>> > that
>> > > we need a function that returns either the desired object, or something
>> > > that represents R_UnboundValue. We also need a very cheap way to check
>> if
>> > > something equals this new R_UnboundValue. This might look like
>> > >
>> > > if (defined(x <- fetch(symbol, env))) {
>> > >   do_stuff_with_x(x)
>> > > }
>> > >
>> > > A few more thoughts about "exists":
>> > >
>> > > Moving the bit of R in the exists function to C saves 10% of the time.
>> > > Dropping the redundant pos and frame args entirely saves 30% of the
>> time
>> > > used by this function. I suggest that the arguments of both get and
>> > > exists should
>> > > be simplified to (x, envir, mode, inherits). The existing C code
>> handles
>> > > numeric, character, and environment input for where. The arg frame is
>> > > rarely used (0/128 exists calls in the methods package). Users that
>> need
>> > to
>> > > can call sys.frame themselves. get already lacks a frame argument and
>> the
>> > > manpage for exists notes that envir is only there for backwards
>> > > compatibility. Let's deprecate the extra args in exists and get and
>> > perhaps
>> > > move the extra argument handling to C in the interim.  Similarly, the
>> > > "assign" function does nothing with the "immediate" argument.
>> > >
>> > > I'd be interested to hear if there is any support for a "fetch"-like
>> > > function (and/or deprecating some unused arguments).
>> > >
>> > > All the best,
>> > > Pete
>> > >
>> > >
>> > >
>> > > Pete
>> > >
>> > > ____________________
>> > > Peter M. Haverty, Ph.D.
>> > > Genentech, Inc.
>> > > phaverty at gene.com
>> > >
>> > >         [[alternative HTML version deleted]]
>> > >
>> > >
>> > > ______________________________________________
>> > > R-devel at r-project.org mailing list
>> > > https://stat.ethz.ch/mailman/listinfo/r-devel
>> > >
>> >
>>
>>         [[alternative HTML version deleted]]
>>
>>
>> ______________________________________________
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>
>>
>
>         [[alternative HTML version deleted]]
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From mark.vanderloo at gmail.com  Thu Dec  4 20:24:58 2014
From: mark.vanderloo at gmail.com (Mark van der Loo)
Date: Thu, 4 Dec 2014 20:24:58 +0100
Subject: [Rd] \U with more than 4 digits returns the wrong character
In-Reply-To: <CAPp_+=cgbyzubhUEomg7DetnL0zuy0Xd-fkHd=kZwiO2qEifcg@mail.gmail.com>
References: <CAPp_+=cgbyzubhUEomg7DetnL0zuy0Xd-fkHd=kZwiO2qEifcg@mail.gmail.com>
Message-ID: <CAOKDuOhOqCLghiW+6jPJR_qb-tj3Nijs-W9LhwVwFP6sg46mEg@mail.gmail.com>

Richie,

The R language definition [1] says (10.3.1):

\Unnnnnnnn \U{nnnnnnnn}
(where multibyte locales are supported and not on Windows, otherwise
an error). Unicode character with given hex code ? sequences of up to
eight hex digits.


Best,
Mark

[1] http://cran.r-project.org/doc/manuals/r-release/R-lang.html
http://www.markvanderloo.eu
-------------------------------------------------------------------
If you cannot quantify it,
you don't know what you're talking about


On Thu, Dec 4, 2014 at 8:00 PM, Richard Cotton <richierocks at gmail.com> wrote:
> If I type a character using \U syntax that has more than 4 digits, I
> get the wrong character.  For example,
>
> "\U1d4d0"
>
> should print a mathematical bold script capital A.  See
> http://www.fileformat.info/info/unicode/char/1d4d0/index.htm
>
> On my machine, it prints the Hangul character corresponding to
>
> "\Ud4d0"
> http://www.fileformat.info/info/unicode/char/d4d0/index.htm
>
> It seems that the hex-digit part is overflowing at 16^4.
>
> I tested this on R3.1.2 and devel (2014-12-03 r67101) x64 under
> Windows.  I played around with Sys.setlocale and options("encoding"),
> but couldn't get the expected value.
>
> Can others reproduce this?  It feels like a bug, but experience tells
> me I probably have something silly going on with my setup.
>
> --
> Regards,
> Richie
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From richierocks at gmail.com  Thu Dec  4 20:37:13 2014
From: richierocks at gmail.com (Richard Cotton)
Date: Thu, 4 Dec 2014 22:37:13 +0300
Subject: [Rd] \U with more than 4 digits returns the wrong character
In-Reply-To: <CAOKDuOhOqCLghiW+6jPJR_qb-tj3Nijs-W9LhwVwFP6sg46mEg@mail.gmail.com>
References: <CAPp_+=cgbyzubhUEomg7DetnL0zuy0Xd-fkHd=kZwiO2qEifcg@mail.gmail.com>
	<CAOKDuOhOqCLghiW+6jPJR_qb-tj3Nijs-W9LhwVwFP6sg46mEg@mail.gmail.com>
Message-ID: <CAPp_+=dB+PoMVC-jGUKEUfOt=s2E_HY-iFc-nh19-PQtw=Yuqg@mail.gmail.com>

Great spot, thanks Mark.

This really ought to appear somewhere in the ?Quotes help page.

Having a warning under Windows might be nicer behaviour than silently
returning the wrong value too.

On 4 December 2014 at 22:24, Mark van der Loo <mark.vanderloo at gmail.com> wrote:
> Richie,
>
> The R language definition [1] says (10.3.1):
>
> \Unnnnnnnn \U{nnnnnnnn}
> (where multibyte locales are supported and not on Windows, otherwise
> an error). Unicode character with given hex code ? sequences of up to
> eight hex digits.
>
>
> Best,
> Mark
>
> [1] http://cran.r-project.org/doc/manuals/r-release/R-lang.html
> http://www.markvanderloo.eu
> -------------------------------------------------------------------
> If you cannot quantify it,
> you don't know what you're talking about
>
>
> On Thu, Dec 4, 2014 at 8:00 PM, Richard Cotton <richierocks at gmail.com> wrote:
>> If I type a character using \U syntax that has more than 4 digits, I
>> get the wrong character.  For example,
>>
>> "\U1d4d0"
>>
>> should print a mathematical bold script capital A.  See
>> http://www.fileformat.info/info/unicode/char/1d4d0/index.htm
>>
>> On my machine, it prints the Hangul character corresponding to
>>
>> "\Ud4d0"
>> http://www.fileformat.info/info/unicode/char/d4d0/index.htm
>>
>> It seems that the hex-digit part is overflowing at 16^4.
>>
>> I tested this on R3.1.2 and devel (2014-12-03 r67101) x64 under
>> Windows.  I played around with Sys.setlocale and options("encoding"),
>> but couldn't get the expected value.
>>
>> Can others reproduce this?  It feels like a bug, but experience tells
>> me I probably have something silly going on with my setup.
>>
>> --
>> Regards,
>> Richie
>>
>> ______________________________________________
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel



-- 
Regards,
Richie

Learning R
4dpiecharts.com


From mark.vanderloo at gmail.com  Thu Dec  4 20:57:42 2014
From: mark.vanderloo at gmail.com (Mark van der Loo)
Date: Thu, 4 Dec 2014 20:57:42 +0100
Subject: [Rd] \U with more than 4 digits returns the wrong character
In-Reply-To: <CAPp_+=dB+PoMVC-jGUKEUfOt=s2E_HY-iFc-nh19-PQtw=Yuqg@mail.gmail.com>
References: <CAPp_+=cgbyzubhUEomg7DetnL0zuy0Xd-fkHd=kZwiO2qEifcg@mail.gmail.com>
	<CAOKDuOhOqCLghiW+6jPJR_qb-tj3Nijs-W9LhwVwFP6sg46mEg@mail.gmail.com>
	<CAPp_+=dB+PoMVC-jGUKEUfOt=s2E_HY-iFc-nh19-PQtw=Yuqg@mail.gmail.com>
Message-ID: <CAOKDuOiZ6AYKSr_QfqWeWGub3hfvNDX+9TuBC5DrhEOObwg60g@mail.gmail.com>

I agree. You could post a documentation bug and a request here:
https://bugs.r-project.org/bugzilla3/

Cheers, Mark

On Thu, Dec 4, 2014 at 8:37 PM, Richard Cotton <richierocks at gmail.com> wrote:
> Great spot, thanks Mark.
>
> This really ought to appear somewhere in the ?Quotes help page.
>
> Having a warning under Windows might be nicer behaviour than silently
> returning the wrong value too.
>
> On 4 December 2014 at 22:24, Mark van der Loo <mark.vanderloo at gmail.com> wrote:
>> Richie,
>>
>> The R language definition [1] says (10.3.1):
>>
>> \Unnnnnnnn \U{nnnnnnnn}
>> (where multibyte locales are supported and not on Windows, otherwise
>> an error). Unicode character with given hex code ? sequences of up to
>> eight hex digits.
>>
>>
>> Best,
>> Mark
>>
>> [1] http://cran.r-project.org/doc/manuals/r-release/R-lang.html
>> http://www.markvanderloo.eu
>> -------------------------------------------------------------------
>> If you cannot quantify it,
>> you don't know what you're talking about
>>
>>
>> On Thu, Dec 4, 2014 at 8:00 PM, Richard Cotton <richierocks at gmail.com> wrote:
>>> If I type a character using \U syntax that has more than 4 digits, I
>>> get the wrong character.  For example,
>>>
>>> "\U1d4d0"
>>>
>>> should print a mathematical bold script capital A.  See
>>> http://www.fileformat.info/info/unicode/char/1d4d0/index.htm
>>>
>>> On my machine, it prints the Hangul character corresponding to
>>>
>>> "\Ud4d0"
>>> http://www.fileformat.info/info/unicode/char/d4d0/index.htm
>>>
>>> It seems that the hex-digit part is overflowing at 16^4.
>>>
>>> I tested this on R3.1.2 and devel (2014-12-03 r67101) x64 under
>>> Windows.  I played around with Sys.setlocale and options("encoding"),
>>> but couldn't get the expected value.
>>>
>>> Can others reproduce this?  It feels like a bug, but experience tells
>>> me I probably have something silly going on with my setup.
>>>
>>> --
>>> Regards,
>>> Richie
>>>
>>> ______________________________________________
>>> R-devel at r-project.org mailing list
>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>
>
>
> --
> Regards,
> Richie
>
> Learning R
> 4dpiecharts.com


From murdoch.duncan at gmail.com  Thu Dec  4 21:34:32 2014
From: murdoch.duncan at gmail.com (Duncan Murdoch)
Date: Thu, 04 Dec 2014 15:34:32 -0500
Subject: [Rd] \U with more than 4 digits returns the wrong character
In-Reply-To: <CAPp_+=cgbyzubhUEomg7DetnL0zuy0Xd-fkHd=kZwiO2qEifcg@mail.gmail.com>
References: <CAPp_+=cgbyzubhUEomg7DetnL0zuy0Xd-fkHd=kZwiO2qEifcg@mail.gmail.com>
Message-ID: <5480C558.7030201@gmail.com>

On 04/12/2014, 2:00 PM, Richard Cotton wrote:
> If I type a character using \U syntax that has more than 4 digits, I
> get the wrong character.  For example,
> 
> "\U1d4d0"
> 
> should print a mathematical bold script capital A.  See
> http://www.fileformat.info/info/unicode/char/1d4d0/index.htm
> 
> On my machine, it prints the Hangul character corresponding to
> 
> "\Ud4d0"
> http://www.fileformat.info/info/unicode/char/d4d0/index.htm
> 
> It seems that the hex-digit part is overflowing at 16^4.
> 
> I tested this on R3.1.2 and devel (2014-12-03 r67101) x64 under
> Windows.  I played around with Sys.setlocale and options("encoding"),
> but couldn't get the expected value.
> 
> Can others reproduce this?  It feels like a bug, but experience tells
> me I probably have something silly going on with my setup.
> 

I see this on Windows, but not on OSX.  On Windows:

> as.hexmode(utf8ToInt("\U1d4d0"))
[1] "d4d0"

On OSX:

> as.hexmode(utf8ToInt("\U1d4d0"))
[1] "1d4d0"

I'll see if I can find where the truncation is happening on Windows.

Duncan Murdoch


From murdoch.duncan at gmail.com  Thu Dec  4 22:21:47 2014
From: murdoch.duncan at gmail.com (Duncan Murdoch)
Date: Thu, 04 Dec 2014 16:21:47 -0500
Subject: [Rd] \U with more than 4 digits returns the wrong character
In-Reply-To: <CAPp_+=cgbyzubhUEomg7DetnL0zuy0Xd-fkHd=kZwiO2qEifcg@mail.gmail.com>
References: <CAPp_+=cgbyzubhUEomg7DetnL0zuy0Xd-fkHd=kZwiO2qEifcg@mail.gmail.com>
Message-ID: <5480D06B.5070203@gmail.com>

On 04/12/2014, 2:00 PM, Richard Cotton wrote:
> If I type a character using \U syntax that has more than 4 digits, I
> get the wrong character.  For example,
> 
> "\U1d4d0"
> 
> should print a mathematical bold script capital A.  See
> http://www.fileformat.info/info/unicode/char/1d4d0/index.htm
> 
> On my machine, it prints the Hangul character corresponding to
> 
> "\Ud4d0"
> http://www.fileformat.info/info/unicode/char/d4d0/index.htm
> 
> It seems that the hex-digit part is overflowing at 16^4.
> 
> I tested this on R3.1.2 and devel (2014-12-03 r67101) x64 under
> Windows.  I played around with Sys.setlocale and options("encoding"),
> but couldn't get the expected value.
> 
> Can others reproduce this?  It feels like a bug, but experience tells
> me I probably have something silly going on with my setup.
> 

The issue is that on Windows, the wchar_t in our C code is a 16 bit
value.  In the old days, Windows only supported 16 bit characters.
Since Windows 2000 they've supported the full Unicode range (which I
think is currently 20 or 21 bits) using the UTF-16 encoding, but our
internal code is still assuming a 16 bit limit.

I'll submit the bug report on this and hopefully will get to it before
the next release, but it's tricky to catch all the possible places where
the upper bits get lost, given the dumb Windows convention that wchar_t
is 16 bits.

Duncan Murdoch


From renaud at mancala.cbio.uct.ac.za  Fri Dec  5 16:45:59 2014
From: renaud at mancala.cbio.uct.ac.za (Renaud Gaujoux)
Date: Fri, 5 Dec 2014 17:45:59 +0200
Subject: [Rd] install.packages deletes PACKAGES file in local repo
Message-ID: <CAHavPHEuuUPk3eXCxKH1VQa4oMAfsUA4yzESPj=WEZVmUFtReg@mail.gmail.com>

Hi,

running install.packages() to install a package from a local repository
(i.e., starts with file:///) appears to delete the PACKAGES file that is in
the src/contrib/ directory.
This happens on a cluster running Scientific Linux release 6.4 (Carbon),
but not on my Ubuntu local machine.

Subsequent calls to install.packages() complain about src/contrib/PACKAGES
not existing, although there still is a src/contrib/PACKAGES.gz file.

Is this a know issue?
Thank you.

Bests,
Renaud

	[[alternative HTML version deleted]]


From sven.templer at gmail.com  Fri Dec  5 17:24:02 2014
From: sven.templer at gmail.com (Sven E. Templer)
Date: Fri, 5 Dec 2014 17:24:02 +0100
Subject: [Rd] Use of tools:::httpdPort in a package for CRAN.
Message-ID: <CAHuTOvrtpTYO47ZADBy6KEdGX9xH3dGy=-FXTZ6J75ozF5N24A@mail.gmail.com>

Hello,

I wrote a function to show the help/index page of a package in a
browser (and want to include this in an update for a CRAN package). I
asked in R-help how to obtain the 00Index.html file, Duncan Murdoch
suggested to inspect (see
http://r.789695.n4.nabble.com/Obtain-00Index-html-tt4697661.html)
tools:::httpd (thank you therefore!). So I came up with:


help.index <- function (pkg, browser = NA, encodeIfNeeded = FALSE) {

pkg <- as.character(substitute(pkg))
hport <- tools:::httpdPort

if (!pkg %in% rownames(installed.packages()))
stop(paste("Package", pkg, "not found."))

if (hport == 0) {
cat("Starting dynamic help.\n")
t <- try(startDynamicHelp(), silent = TRUE)
if (class(t) == "try-error")
stop("Could not start dynamic help.")
hport <- tools:::httpdPort
}

if (!is.na(browser)) {
if (tolower(browser) == "rstudio")
options(browser = function (x) .Call("rs_browseURL", url))
else
options(browser = browser)
}

url <- paste0("http://127.0.0.1:", hport, "/library/", pkg,
"/html/00Index.html")
browseURL(url, encodeIfNeeded = encodeIfNeeded)
invisible(NULL)

}

(also at https://github.com/setempler/miscset/blob/master/R/help.index.R)

I tried to avoid `:::` so I used the 00Index.html file from the
library on my disk (like
/home/user.foo/R/lib.bar/package.baz/html/00Index.html). It does show
the index, but the link to the help pages are not accessible.
Nevertheless, my implementation now works, but R CMD check --as-cran
gives a warning, and the R help also says to avoid `:::`. Also
get(httpd, as.environment("package:tools")) didn't help.

My question: do I have another possibility to achieve my goal without
referencing by `:::` (concerning a submission to CRAN), if so, please
tell me!

Thank you in advance,
Sven.


From murdoch.duncan at gmail.com  Fri Dec  5 18:51:22 2014
From: murdoch.duncan at gmail.com (Duncan Murdoch)
Date: Fri, 05 Dec 2014 12:51:22 -0500
Subject: [Rd] Use of tools:::httpdPort in a package for CRAN.
In-Reply-To: <CAHuTOvrtpTYO47ZADBy6KEdGX9xH3dGy=-FXTZ6J75ozF5N24A@mail.gmail.com>
References: <CAHuTOvrtpTYO47ZADBy6KEdGX9xH3dGy=-FXTZ6J75ozF5N24A@mail.gmail.com>
Message-ID: <5481F09A.9080800@gmail.com>

On 05/12/2014 11:24 AM, Sven E. Templer wrote:
> Hello,
>
> I wrote a function to show the help/index page of a package in a
> browser (and want to include this in an update for a CRAN package). I
> asked in R-help how to obtain the 00Index.html file, Duncan Murdoch
> suggested to inspect (see
> http://r.789695.n4.nabble.com/Obtain-00Index-html-tt4697661.html)
> tools:::httpd (thank you therefore!). So I came up with:
>
>
> help.index <- function (pkg, browser = NA, encodeIfNeeded = FALSE) {
>
> pkg <- as.character(substitute(pkg))
> hport <- tools:::httpdPort

I don't see any way to get it other than this, but it seems like a 
reasonable thing to want to do.  I think the way I'd do it is to modify 
the exported function startDynamicHelp() so that it doesn't give an 
error if the help system is already running, it just returns the active 
port number.

So the code above would become

hport <- startDynamicHelp()

(or some variation using try().)

I think a change like this could make it into 3.1.3 and later versions.

Duncan Murdoch

>
> if (!pkg %in% rownames(installed.packages()))
> stop(paste("Package", pkg, "not found."))
>
> if (hport == 0) {
> cat("Starting dynamic help.\n")
> t <- try(startDynamicHelp(), silent = TRUE)
> if (class(t) == "try-error")
> stop("Could not start dynamic help.")
> hport <- tools:::httpdPort
> }
>
> if (!is.na(browser)) {
> if (tolower(browser) == "rstudio")
> options(browser = function (x) .Call("rs_browseURL", url))
> else
> options(browser = browser)
> }
>
> url <- paste0("http://127.0.0.1:", hport, "/library/", pkg,
> "/html/00Index.html")
> browseURL(url, encodeIfNeeded = encodeIfNeeded)
> invisible(NULL)
>
> }
>
> (also at https://github.com/setempler/miscset/blob/master/R/help.index.R)
>
> I tried to avoid `:::` so I used the 00Index.html file from the
> library on my disk (like
> /home/user.foo/R/lib.bar/package.baz/html/00Index.html). It does show
> the index, but the link to the help pages are not accessible.
> Nevertheless, my implementation now works, but R CMD check --as-cran
> gives a warning, and the R help also says to avoid `:::`. Also
> get(httpd, as.environment("package:tools")) didn't help.
>
> My question: do I have another possibility to achieve my goal without
> referencing by `:::` (concerning a submission to CRAN), if so, please
> tell me!
>
> Thank you in advance,
> Sven.
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From xie at yihui.name  Fri Dec  5 19:03:15 2014
From: xie at yihui.name (Yihui Xie)
Date: Fri, 5 Dec 2014 12:03:15 -0600
Subject: [Rd] Use of tools:::httpdPort in a package for CRAN.
In-Reply-To: <CAHuTOvrtpTYO47ZADBy6KEdGX9xH3dGy=-FXTZ6J75ozF5N24A@mail.gmail.com>
References: <CAHuTOvrtpTYO47ZADBy6KEdGX9xH3dGy=-FXTZ6J75ozF5N24A@mail.gmail.com>
Message-ID: <CANROs4cSA00TS3C++Di78r=3dqHgW3y3wxLA-nC_Zn9S6quksw@mail.gmail.com>

Perhaps I missed something, but isn't this just a one-liner function?

help.index = function (pkg) help(package = (pkg), help_type = "html")

Regards,
Yihui
--
Yihui Xie <xieyihui at gmail.com>
Web: http://yihui.name


On Fri, Dec 5, 2014 at 10:24 AM, Sven E. Templer <sven.templer at gmail.com> wrote:
> Hello,
>
> I wrote a function to show the help/index page of a package in a
> browser (and want to include this in an update for a CRAN package). I
> asked in R-help how to obtain the 00Index.html file, Duncan Murdoch
> suggested to inspect (see
> http://r.789695.n4.nabble.com/Obtain-00Index-html-tt4697661.html)
> tools:::httpd (thank you therefore!). So I came up with:
>
>
> help.index <- function (pkg, browser = NA, encodeIfNeeded = FALSE) {
>
> pkg <- as.character(substitute(pkg))
> hport <- tools:::httpdPort
>
> if (!pkg %in% rownames(installed.packages()))
> stop(paste("Package", pkg, "not found."))
>
> if (hport == 0) {
> cat("Starting dynamic help.\n")
> t <- try(startDynamicHelp(), silent = TRUE)
> if (class(t) == "try-error")
> stop("Could not start dynamic help.")
> hport <- tools:::httpdPort
> }
>
> if (!is.na(browser)) {
> if (tolower(browser) == "rstudio")
> options(browser = function (x) .Call("rs_browseURL", url))
> else
> options(browser = browser)
> }
>
> url <- paste0("http://127.0.0.1:", hport, "/library/", pkg,
> "/html/00Index.html")
> browseURL(url, encodeIfNeeded = encodeIfNeeded)
> invisible(NULL)
>
> }
>
> (also at https://github.com/setempler/miscset/blob/master/R/help.index.R)
>
> I tried to avoid `:::` so I used the 00Index.html file from the
> library on my disk (like
> /home/user.foo/R/lib.bar/package.baz/html/00Index.html). It does show
> the index, but the link to the help pages are not accessible.
> Nevertheless, my implementation now works, but R CMD check --as-cran
> gives a warning, and the R help also says to avoid `:::`. Also
> get(httpd, as.environment("package:tools")) didn't help.
>
> My question: do I have another possibility to achieve my goal without
> referencing by `:::` (concerning a submission to CRAN), if so, please
> tell me!
>
> Thank you in advance,
> Sven.
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From gmbecker at ucdavis.edu  Sat Dec  6 01:23:45 2014
From: gmbecker at ucdavis.edu (Gabriel Becker)
Date: Fri, 5 Dec 2014 16:23:45 -0800
Subject: [Rd] install.packages deletes PACKAGES file in local repo
In-Reply-To: <CAHavPHEuuUPk3eXCxKH1VQa4oMAfsUA4yzESPj=WEZVmUFtReg@mail.gmail.com>
References: <CAHavPHEuuUPk3eXCxKH1VQa4oMAfsUA4yzESPj=WEZVmUFtReg@mail.gmail.com>
Message-ID: <CADwqtCP3YTk4HpsU4sekc=uNDqQB2mrGiPEmS2Bsbr2F3-SmuQ@mail.gmail.com>

Can you post exact code, i have not seen this behavior, and I work with
local repositories quite extensively on my current project.

~G

On Fri, Dec 5, 2014 at 7:45 AM, Renaud Gaujoux <
renaud at mancala.cbio.uct.ac.za> wrote:

> Hi,
>
> running install.packages() to install a package from a local repository
> (i.e., starts with file:///) appears to delete the PACKAGES file that is in
> the src/contrib/ directory.
> This happens on a cluster running Scientific Linux release 6.4 (Carbon),
> but not on my Ubuntu local machine.
>
> Subsequent calls to install.packages() complain about src/contrib/PACKAGES
> not existing, although there still is a src/contrib/PACKAGES.gz file.
>
> Is this a know issue?
> Thank you.
>
> Bests,
> Renaud
>
>         [[alternative HTML version deleted]]
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>



-- 
Gabriel Becker
Graduate Student
Statistics Department
University of California, Davis

	[[alternative HTML version deleted]]


From hb at biostat.ucsf.edu  Sat Dec  6 03:17:57 2014
From: hb at biostat.ucsf.edu (Henrik Bengtsson)
Date: Fri, 5 Dec 2014 18:17:57 -0800
Subject: [Rd] R CMD check --as-cran and (a)spell checking
Message-ID: <CAFDcVCSw4ByuiKNO_bXpBr7asmaYfQY8oBHtePJ9VEimQhVTKg@mail.gmail.com>

Does anyone know if it is possible to add a dictionary file of known
words that becomes part of the *built* package to tell 'R CMD check
--as-cran' not to report these words as misspelled.  I want this
dictionary to come with the *.tar.gz such that it will be available
regardless where the package is checked.  For instance, currently I
get:

* using log directory 'T:/R/_R-3.1.2patched/matrixStats.Rcheck'
* using R version 3.1.2 Patched (2014-12-03 r67101)
* using platform: x86_64-w64-mingw32 (64-bit)
* using session charset: ISO8859-1
* checking for file 'matrixStats/DESCRIPTION' ... OK
* this is package 'matrixStats' version '0.12.0'
* checking CRAN incoming feasibility ... NOTE
Maintainer: 'Henrik Bengtsson <henrikb at braju.com>'
Possibly mis-spelled words in DESCRIPTION:
  rowMedians (18:74)
  rowRanks (18:92)
  rowSds (18:111)
* checking package namespace information ... OK
...

Thanks

Henrik


From paciorek at stat.berkeley.edu  Sat Dec  6 02:36:00 2014
From: paciorek at stat.berkeley.edu (Chris Paciorek)
Date: Fri, 5 Dec 2014 17:36:00 -0800
Subject: [Rd] does parLapplyLB do load-balancing?
Message-ID: <CAG=M9LrfOFMp0wT1rR3n7sumsNrscGBDS-8bkdzOXS=45jV9KQ@mail.gmail.com>

Looking at parLapplyLB, one sees that it takes in X and then passes
splitList(X, length(cl)) to clusterApplyLB, which then calls
dynamicClusterApply.  Thus while dynamicClusterApply does handle tasks
in a load-balancing fashion, sending out individual tasks as previous
tasks complete, parLapplyLB preempts that by splitting up the tasks in
advance into as many groups of tasks as there are cluster processes.
This seems to defeat the purpose of load-balancing and of the manner
in which dynamicClusterApply is coded.

This question basically repeats a question posed in 2013 -- see
http://r.789695.n4.nabble.com/parLapplyLB-Load-balancing-tt4671848.html

I'm reposting because there doesn't seem to have been any response to
the previous posting, and it looks like the issue is still present in
R 3.1 so it seems asking again if this is the intended behavior of
parLapplyLB.

I'm using R 3.1.1 and the 3.1.1 version of the parallel package under
Ubuntu 14.04, but the code appears to be the same in R-devel.


Chris


----------------------------------------------------------------------------------------------
Chris Paciorek

Statistical Computing Consultant
Statistical Computing Facility, Econometrics Laboratory, Berkeley
Research Computing

Office: 495 Evans Hall                      Email: paciorek at stat.berkeley.edu
Mailing Address:                            Voice: 510-842-6670
Department of Statistics                    Fax:   510-642-7892
367 Evans Hall                              Skype: cjpaciorek
University of California, Berkeley          WWW:
www.stat.berkeley.edu/~paciorek
Berkeley, CA 94720 USA                      Permanent forward:
paciorek at alumni.cmu.edu


From renaud at mancala.cbio.uct.ac.za  Sat Dec  6 06:27:11 2014
From: renaud at mancala.cbio.uct.ac.za (Renaud Gaujoux)
Date: Sat, 6 Dec 2014 07:27:11 +0200
Subject: [Rd] install.packages deletes PACKAGES file in local repo
In-Reply-To: <CADwqtCP3YTk4HpsU4sekc=uNDqQB2mrGiPEmS2Bsbr2F3-SmuQ@mail.gmail.com>
References: <CAHavPHEuuUPk3eXCxKH1VQa4oMAfsUA4yzESPj=WEZVmUFtReg@mail.gmail.com>
	<CADwqtCP3YTk4HpsU4sekc=uNDqQB2mrGiPEmS2Bsbr2F3-SmuQ@mail.gmail.com>
Message-ID: <CAHavPHE68UbyazRx4Z7Fsf+2Rg4Q9M66cJtHgcYwCEK63o1+ng@mail.gmail.com>

Hi,

I was only doing install.packages('pkgname'), with the local repo being
defined in the default repos option.
After retrying it just now, this issue mysteriously suddenly disappeared,
and things work as expected whether on the front node or in a job on a
node. Really no idea of what happened.
Closing the thread.

Thanks.




On 6 December 2014 at 02:23, Gabriel Becker <gmbecker at ucdavis.edu> wrote:

> Can you post exact code, i have not seen this behavior, and I work with
> local repositories quite extensively on my current project.
>
> ~G
>
> On Fri, Dec 5, 2014 at 7:45 AM, Renaud Gaujoux <
> renaud at mancala.cbio.uct.ac.za> wrote:
>
>> Hi,
>>
>> running install.packages() to install a package from a local repository
>> (i.e., starts with file:///) appears to delete the PACKAGES file that is
>> in
>> the src/contrib/ directory.
>> This happens on a cluster running Scientific Linux release 6.4 (Carbon),
>> but not on my Ubuntu local machine.
>>
>> Subsequent calls to install.packages() complain about src/contrib/PACKAGES
>> not existing, although there still is a src/contrib/PACKAGES.gz file.
>>
>> Is this a know issue?
>> Thank you.
>>
>> Bests,
>> Renaud
>>
>>         [[alternative HTML version deleted]]
>>
>> ______________________________________________
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>
>
>
>
> --
> Gabriel Becker
> Graduate Student
> Statistics Department
> University of California, Davis
>

	[[alternative HTML version deleted]]


From nakama at ki.rim.or.jp  Sat Dec  6 07:22:24 2014
From: nakama at ki.rim.or.jp (Ei-ji Nakama)
Date: Sat, 6 Dec 2014 15:22:24 +0900
Subject: [Rd] does parLapplyLB do load-balancing?
In-Reply-To: <CAG=M9LrfOFMp0wT1rR3n7sumsNrscGBDS-8bkdzOXS=45jV9KQ@mail.gmail.com>
References: <CAG=M9LrfOFMp0wT1rR3n7sumsNrscGBDS-8bkdzOXS=45jV9KQ@mail.gmail.com>
Message-ID: <CAJqeyYY8GWd1vPpG_=PGS_oKWedOENUz+c5tRpoE4Q2f_MHPyw@mail.gmail.com>

Hello,

In such cases, try the Rhpc package.

The following is the result of the benchmark.
http://prs.ism.ac.jp/~nakama/Rhpc/#benchmark

# but tuning is not finished...


2014-12-06 10:36 GMT+09:00 Chris Paciorek <paciorek at stat.berkeley.edu>:
> Looking at parLapplyLB, one sees that it takes in X and then passes
> splitList(X, length(cl)) to clusterApplyLB, which then calls
> dynamicClusterApply.  Thus while dynamicClusterApply does handle tasks
> in a load-balancing fashion, sending out individual tasks as previous
> tasks complete, parLapplyLB preempts that by splitting up the tasks in
> advance into as many groups of tasks as there are cluster processes.
> This seems to defeat the purpose of load-balancing and of the manner
> in which dynamicClusterApply is coded.
>
> This question basically repeats a question posed in 2013 -- see
> http://r.789695.n4.nabble.com/parLapplyLB-Load-balancing-tt4671848.html
>
> I'm reposting because there doesn't seem to have been any response to
> the previous posting, and it looks like the issue is still present in
> R 3.1 so it seems asking again if this is the intended behavior of
> parLapplyLB.
>
> I'm using R 3.1.1 and the 3.1.1 version of the parallel package under
> Ubuntu 14.04, but the code appears to be the same in R-devel.
>
>
> Chris
>
>
> ----------------------------------------------------------------------------------------------
> Chris Paciorek
>
> Statistical Computing Consultant
> Statistical Computing Facility, Econometrics Laboratory, Berkeley
> Research Computing
>
> Office: 495 Evans Hall                      Email: paciorek at stat.berkeley.edu
> Mailing Address:                            Voice: 510-842-6670
> Department of Statistics                    Fax:   510-642-7892
> 367 Evans Hall                              Skype: cjpaciorek
> University of California, Berkeley          WWW:
> www.stat.berkeley.edu/~paciorek
> Berkeley, CA 94720 USA                      Permanent forward:
> paciorek at alumni.cmu.edu
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel



-- 
Best Regards,
--
Eiji NAKAMA <nakama (a) ki.rim.or.jp>
"\u4e2d\u9593\u6804\u6cbb"  <nakama (a) ki.rim.or.jp>


From csardi.gabor at gmail.com  Mon Dec  8 15:40:34 2014
From: csardi.gabor at gmail.com (=?UTF-8?B?R8OhYm9yIENzw6FyZGk=?=)
Date: Mon, 8 Dec 2014 09:40:34 -0500
Subject: [Rd] CRAN packages mis-using \donttest : falsy
In-Reply-To: <E1Xxxaa-0002Jr-S8@gannet.stats.ox.ac.uk>
References: <E1Xxxaa-0002Jr-S8@gannet.stats.ox.ac.uk>
Message-ID: <CABtg=K=CjWEOO-TCDimERxS6a79oL+Kw=BYtFxy4PbHjH_5POQ@mail.gmail.com>

Hi all,

anyone has an idea how I could fix this?

\donttest{
## Set colors from colorspace package with a fallback
col <- try(colorspace::rainbow_hcl(5), silent = TRUE) %||% rainbow(5)
}

The problem is that this makes R CMD check freak out
(http://www.r-project.org/nosvn/R.check/r-devel-linux-x86_64-debian-clang/falsy-00check.html)
if the colorspace package is not declared as a dependency. But the
point of the example is to define a meaningful behavior when
colorspace is missing.... so I don't really want to put this into
\dontrun{}...

I vaguely remember that there was also \dontcheck{}, but it is not in
'Writing R extensions', so probably I cannot use it. Or can I? I am
not even sure what the difference is between \donttest and
\dontcheck....

Thanks,
Gabor



On Mon, Dec 8, 2014 at 7:38 AM, Prof Brian Ripley <ripley at stats.ox.ac.uk> wrote:
> This concerns packages using \donttest in their examples.  Such code
> will be run by example() and hence should be runnable ... yours is
> not.
>
> One issue showing is that the examples use undeclared packages: this
> is showing on the CRAN check pages for packages
>
> Distance GLDreg RECA TreePar complmrob disposables egcm enigma
> extrafont falsy ggplot2 imputeYn investr lava prodlim randomForestSRC
> rbison separationplot shiny smoother vcdExtra
>
> With R-devel the \donttest examples can be run by R CMD check
> --run-donttest: we have done that and found failures in packages most
> of those above, plus
>
> BNSP DCGL EIAdata ExtDist FeedbackTS FlexParamCurve IsoGene MGLM
> MsatAllele PRISMA RSurvey RandomFields ReporteRs Rmpi Rssa TR8 VarEff
> aoristic breakage dplyr effects ftsa geocodeHERE ggHorizon ggmap
> ggtern gvcm.cat hyperSpec knitcitation knitr mboost mets mfblock
> mobForest mra nontarget npRmpi nullabor openNLP parfm plsRbeta powerr
> pxweb rcrossref rgbif rsnps season spMC spgwr spocc taxize timereg
> toaster
>
> and warnings in DSpat
>
> In almost all cases there is something obviously wrong with the
> failing example.
>
> Please submit an update to CRAN (using the webform, and following the
> CRAN policies at http://cran.r-project.org/web/packages/policies.html).
> Do NOT reply to this email to submit an update!
>
> There may be other issues that need fixing shown on the package's
> results page.


From murdoch.duncan at gmail.com  Mon Dec  8 21:32:50 2014
From: murdoch.duncan at gmail.com (Duncan Murdoch)
Date: Mon, 08 Dec 2014 15:32:50 -0500
Subject: [Rd] CRAN packages mis-using \donttest : falsy
In-Reply-To: <CABtg=K=CjWEOO-TCDimERxS6a79oL+Kw=BYtFxy4PbHjH_5POQ@mail.gmail.com>
References: <E1Xxxaa-0002Jr-S8@gannet.stats.ox.ac.uk>
	<CABtg=K=CjWEOO-TCDimERxS6a79oL+Kw=BYtFxy4PbHjH_5POQ@mail.gmail.com>
Message-ID: <54860AF2.6050509@gmail.com>

On 08/12/2014 9:40 AM, G?bor Cs?rdi wrote:
> Hi all,
>
> anyone has an idea how I could fix this?
>
> \donttest{
> ## Set colors from colorspace package with a fallback
> col <- try(colorspace::rainbow_hcl(5), silent = TRUE) %||% rainbow(5)
> }
>
> The problem is that this makes R CMD check freak out
> (http://www.r-project.org/nosvn/R.check/r-devel-linux-x86_64-debian-clang/falsy-00check.html)
> if the colorspace package is not declared as a dependency. But the
> point of the example is to define a meaningful behavior when
> colorspace is missing.... so I don't really want to put this into
> \dontrun{}...

Why not declare colorspace as a "Suggests:" kind of dependency?

Duncan Murdoch

>
> I vaguely remember that there was also \dontcheck{}, but it is not in
> 'Writing R extensions', so probably I cannot use it. Or can I? I am
> not even sure what the difference is between \donttest and
> \dontcheck....
>
> Thanks,
> Gabor
>
>
>
> On Mon, Dec 8, 2014 at 7:38 AM, Prof Brian Ripley <ripley at stats.ox.ac.uk> wrote:
> > This concerns packages using \donttest in their examples.  Such code
> > will be run by example() and hence should be runnable ... yours is
> > not.
> >
> > One issue showing is that the examples use undeclared packages: this
> > is showing on the CRAN check pages for packages
> >
> > Distance GLDreg RECA TreePar complmrob disposables egcm enigma
> > extrafont falsy ggplot2 imputeYn investr lava prodlim randomForestSRC
> > rbison separationplot shiny smoother vcdExtra
> >
> > With R-devel the \donttest examples can be run by R CMD check
> > --run-donttest: we have done that and found failures in packages most
> > of those above, plus
> >
> > BNSP DCGL EIAdata ExtDist FeedbackTS FlexParamCurve IsoGene MGLM
> > MsatAllele PRISMA RSurvey RandomFields ReporteRs Rmpi Rssa TR8 VarEff
> > aoristic breakage dplyr effects ftsa geocodeHERE ggHorizon ggmap
> > ggtern gvcm.cat hyperSpec knitcitation knitr mboost mets mfblock
> > mobForest mra nontarget npRmpi nullabor openNLP parfm plsRbeta powerr
> > pxweb rcrossref rgbif rsnps season spMC spgwr spocc taxize timereg
> > toaster
> >
> > and warnings in DSpat
> >
> > In almost all cases there is something obviously wrong with the
> > failing example.
> >
> > Please submit an update to CRAN (using the webform, and following the
> > CRAN policies at http://cran.r-project.org/web/packages/policies.html).
> > Do NOT reply to this email to submit an update!
> >
> > There may be other issues that need fixing shown on the package's
> > results page.
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From csardi.gabor at gmail.com  Mon Dec  8 21:38:06 2014
From: csardi.gabor at gmail.com (=?UTF-8?B?R8OhYm9yIENzw6FyZGk=?=)
Date: Mon, 8 Dec 2014 15:38:06 -0500
Subject: [Rd] CRAN packages mis-using \donttest : falsy
In-Reply-To: <54860AF2.6050509@gmail.com>
References: <E1Xxxaa-0002Jr-S8@gannet.stats.ox.ac.uk>
	<CABtg=K=CjWEOO-TCDimERxS6a79oL+Kw=BYtFxy4PbHjH_5POQ@mail.gmail.com>
	<54860AF2.6050509@gmail.com>
Message-ID: <CABtg=K=A9h4Why19-dy_dWHWbJoR8iKUAUL_1gbk8LawQKvpDg@mail.gmail.com>

On Mon, Dec 8, 2014 at 3:32 PM, Duncan Murdoch <murdoch.duncan at gmail.com> wrote:
[...]
> Why not declare colorspace as a "Suggests:" kind of dependency?

I guess that is a solution. :/

In another example in the 'disposables' package I have:

\donttest{
 pkg <- make_packages(
   foo1 = { f <- function() print("hello!") ; d <- 1:10 },
   foo2 = { f <- function() print("hello again!") ; d <- 11:20 }
 )
   foo1::f()
   foo2::f()
   foo1::d
   foo2::d
   dispose_packages(pkg)
}

So in this case should I suggest 'foo1' and 'foo2'?

Gabor

[...]


From murdoch.duncan at gmail.com  Mon Dec  8 21:43:10 2014
From: murdoch.duncan at gmail.com (Duncan Murdoch)
Date: Mon, 08 Dec 2014 15:43:10 -0500
Subject: [Rd] CRAN packages mis-using \donttest : falsy
In-Reply-To: <CABtg=K=A9h4Why19-dy_dWHWbJoR8iKUAUL_1gbk8LawQKvpDg@mail.gmail.com>
References: <E1Xxxaa-0002Jr-S8@gannet.stats.ox.ac.uk>	<CABtg=K=CjWEOO-TCDimERxS6a79oL+Kw=BYtFxy4PbHjH_5POQ@mail.gmail.com>	<54860AF2.6050509@gmail.com>
	<CABtg=K=A9h4Why19-dy_dWHWbJoR8iKUAUL_1gbk8LawQKvpDg@mail.gmail.com>
Message-ID: <54860D5E.3090607@gmail.com>

On 08/12/2014 3:38 PM, G?bor Cs?rdi wrote:
> On Mon, Dec 8, 2014 at 3:32 PM, Duncan Murdoch <murdoch.duncan at gmail.com> wrote:
> [...]
> > Why not declare colorspace as a "Suggests:" kind of dependency?
>
> I guess that is a solution. :/
>
> In another example in the 'disposables' package I have:
>
> \donttest{
>   pkg <- make_packages(
>     foo1 = { f <- function() print("hello!") ; d <- 1:10 },
>     foo2 = { f <- function() print("hello again!") ; d <- 11:20 }
>   )
>     foo1::f()
>     foo2::f()
>     foo1::d
>     foo2::d
>     dispose_packages(pkg)
> }
>
> So in this case should I suggest 'foo1' and 'foo2'?

I would guess that will lead to testing problems, since foo1 and foo2 
won't be installed when R CMD check runs.

In this case, I don't see a way to include that code but avoid 
warnings.  So you could ask for forgiveness when you submit it to CRAN 
(and perhaps they would be forgiving), or you could use some other code 
in your example.

Duncan Murdoch


From csardi.gabor at gmail.com  Mon Dec  8 22:12:46 2014
From: csardi.gabor at gmail.com (=?UTF-8?B?R8OhYm9yIENzw6FyZGk=?=)
Date: Mon, 8 Dec 2014 16:12:46 -0500
Subject: [Rd] CRAN packages mis-using \donttest : falsy
In-Reply-To: <54860D5E.3090607@gmail.com>
References: <E1Xxxaa-0002Jr-S8@gannet.stats.ox.ac.uk>
	<CABtg=K=CjWEOO-TCDimERxS6a79oL+Kw=BYtFxy4PbHjH_5POQ@mail.gmail.com>
	<54860AF2.6050509@gmail.com>
	<CABtg=K=A9h4Why19-dy_dWHWbJoR8iKUAUL_1gbk8LawQKvpDg@mail.gmail.com>
	<54860D5E.3090607@gmail.com>
Message-ID: <CABtg=KkYCz0693zTAFmKQks9bB9L7X6pMkGLu9ZbfCtn_mAwpQ@mail.gmail.com>

On Mon, Dec 8, 2014 at 3:43 PM, Duncan Murdoch <murdoch.duncan at gmail.com> wrote:
[...]
> In this case, I don't see a way to include that code but avoid warnings.  So
> you could ask for forgiveness when you submit it to CRAN (and perhaps they
> would be forgiving), or you could use some other code in your example.

Just to clarify, the code does not give any errors, or even warnings,
it runs without errors, even if these packages are not installed. So
personally I think that this is a bug in R CMD check: it detects
errors in code that does not actually produce errors.

Gabor


From murdoch.duncan at gmail.com  Mon Dec  8 22:29:24 2014
From: murdoch.duncan at gmail.com (Duncan Murdoch)
Date: Mon, 08 Dec 2014 16:29:24 -0500
Subject: [Rd] CRAN packages mis-using \donttest : falsy
In-Reply-To: <CABtg=KkYCz0693zTAFmKQks9bB9L7X6pMkGLu9ZbfCtn_mAwpQ@mail.gmail.com>
References: <E1Xxxaa-0002Jr-S8@gannet.stats.ox.ac.uk>	<CABtg=K=CjWEOO-TCDimERxS6a79oL+Kw=BYtFxy4PbHjH_5POQ@mail.gmail.com>	<54860AF2.6050509@gmail.com>	<CABtg=K=A9h4Why19-dy_dWHWbJoR8iKUAUL_1gbk8LawQKvpDg@mail.gmail.com>	<54860D5E.3090607@gmail.com>
	<CABtg=KkYCz0693zTAFmKQks9bB9L7X6pMkGLu9ZbfCtn_mAwpQ@mail.gmail.com>
Message-ID: <54861834.2040402@gmail.com>

On 08/12/2014 4:12 PM, G?bor Cs?rdi wrote:
> On Mon, Dec 8, 2014 at 3:43 PM, Duncan Murdoch <murdoch.duncan at gmail.com> wrote:
> [...]
> > In this case, I don't see a way to include that code but avoid warnings.  So
> > you could ask for forgiveness when you submit it to CRAN (and perhaps they
> > would be forgiving), or you could use some other code in your example.
>
> Just to clarify, the code does not give any errors, or even warnings,
> it runs without errors, even if these packages are not installed. So
> personally I think that this is a bug in R CMD check: it detects
> errors in code that does not actually produce errors.

I agree.  The checks sometimes produce false positives, and I think your 
code would trigger some.  So if the example is crucial to the user's 
understanding of your package, you should explain that when you submit 
it.  But it might be easier for you (and would certainly take less time 
for the CRAN volunteers to assess) if you just change the example to 
something that doesn't trigger the false positive.

It's pretty similar to the "x may be undefined" warning that compilers 
generate:  often the warning is wrong, there's no code path that uses x 
without defining it, but it's sometimes better to insert a clear 
definition than it is to leave the warning in place.

Duncan Murdoch


From Thierry.ONKELINX at inbo.be  Tue Dec  9 10:48:38 2014
From: Thierry.ONKELINX at inbo.be (ONKELINX, Thierry)
Date: Tue, 9 Dec 2014 09:48:38 +0000
Subject: [Rd] UTF8 markdown vignette
Message-ID: <AA818EAD2576BC488B4F623941DA7427F3C7D1D8@inbomail.inbo.be>

Dear all,

I'm trying to use a Markdown vignette with UTF-8 encoding. It compiles well when knitting the vignette in RStudio, but it fails to recognize the UTF-8 settings when building the source package. Can someone point out what I'm doing wrong? I tried to put the relevant information below.

Best regards,

Thierry

Details:

Using 64-bit R 3.1.2 with encoding = "native.enc" on Windows 7 with Rstudio 0.97.1091.

The source packages is build using the devtools package. The build command is R --vanilla CMD build  "myPackage" --no-manual  --no-resave-data

The DESCRIPTION file has

VignetteBuilder: knitr
Suggests: knitr
Imports: rmarkdown

The markdown vignette YAML contains
vignette: >
  %\VignetteEngine{knitr::rmarkdown}
  %\VignetteIndexEntry{The title}
  \usepackage[utf8]{inputenc}

The custom output style converts the markdown to beamer with the --latex-engine = xelatex flag.

The vignette in tar.gz passes R --vanilla CMD check  --timings --as-cran

* checking files in 'vignettes' ... OK
* checking for unstated dependencies in vignettes ... OK
* checking package vignettes in 'inst/doc' ... OK
* checking running R code from vignettes ...
   'markdown_intro.Rmd' using 'UTF-8' ... OK
OK
* checking re-building of vignette outputs ... [22s] OK



ir. Thierry Onkelinx
Instituut voor natuur- en bosonderzoek / Research Institute for Nature and Forest
team Biometrie & Kwaliteitszorg / team Biometrics & Quality Assurance
Kliniekstraat 25
1070 Anderlecht
Belgium
+ 32 2 525 02 51
+ 32 54 43 61 85
Thierry.Onkelinx at inbo.be
www.inbo.be

To call in the statistician after the experiment is done may be no more than asking him to perform a post-mortem examination: he may be able to say what the experiment died of.
~ Sir Ronald Aylmer Fisher

The plural of anecdote is not data.
~ Roger Brinner

The combination of some data and an aching desire for an answer does not ensure that a reasonable answer can be extracted from a given body of data.
~ John Tukey


Disclaimer Bezoek onze website / Visit our website<https://drupal.inbo.be/nl/disclaimer-mailberichten-van-het-inbo>


From murdoch.duncan at gmail.com  Tue Dec  9 11:04:14 2014
From: murdoch.duncan at gmail.com (Duncan Murdoch)
Date: Tue, 09 Dec 2014 05:04:14 -0500
Subject: [Rd] UTF8 markdown vignette
In-Reply-To: <AA818EAD2576BC488B4F623941DA7427F3C7D1D8@inbomail.inbo.be>
References: <AA818EAD2576BC488B4F623941DA7427F3C7D1D8@inbomail.inbo.be>
Message-ID: <5486C91E.90409@gmail.com>

On 09/12/2014, 4:48 AM, ONKELINX, Thierry wrote:
> Dear all,
> 
> I'm trying to use a Markdown vignette with UTF-8 encoding. It compiles well when knitting the vignette in RStudio, but it fails to recognize the UTF-8 settings when building the source package. Can someone point out what I'm doing wrong? I tried to put the relevant information below.

You don't describe the symptoms of "failing to recognize", but from the
look of it, this is a problem with the knitr::rmarkdown engine or with
the devtools packaging, so you should probably ask on an RStudio forum.

Duncan Murdoch

> Best regards,
> 
> Thierry
> 
> Details:
> 
> Using 64-bit R 3.1.2 with encoding = "native.enc" on Windows 7 with Rstudio 0.97.1091.
> 
> The source packages is build using the devtools package. The build command is R --vanilla CMD build  "myPackage" --no-manual  --no-resave-data
> 
> The DESCRIPTION file has
> 
> VignetteBuilder: knitr
> Suggests: knitr
> Imports: rmarkdown
> 
> The markdown vignette YAML contains
> vignette: >
>   %\VignetteEngine{knitr::rmarkdown}
>   %\VignetteIndexEntry{The title}
>   \usepackage[utf8]{inputenc}
> 
> The custom output style converts the markdown to beamer with the --latex-engine = xelatex flag.
> 
> The vignette in tar.gz passes R --vanilla CMD check  --timings --as-cran
> 
> * checking files in 'vignettes' ... OK
> * checking for unstated dependencies in vignettes ... OK
> * checking package vignettes in 'inst/doc' ... OK
> * checking running R code from vignettes ...
>    'markdown_intro.Rmd' using 'UTF-8' ... OK
> OK
> * checking re-building of vignette outputs ... [22s] OK
> 
> 
> 
> ir. Thierry Onkelinx
> Instituut voor natuur- en bosonderzoek / Research Institute for Nature and Forest
> team Biometrie & Kwaliteitszorg / team Biometrics & Quality Assurance
> Kliniekstraat 25
> 1070 Anderlecht
> Belgium
> + 32 2 525 02 51
> + 32 54 43 61 85
> Thierry.Onkelinx at inbo.be
> www.inbo.be
> 
> To call in the statistician after the experiment is done may be no more than asking him to perform a post-mortem examination: he may be able to say what the experiment died of.
> ~ Sir Ronald Aylmer Fisher
> 
> The plural of anecdote is not data.
> ~ Roger Brinner
> 
> The combination of some data and an aching desire for an answer does not ensure that a reasonable answer can be extracted from a given body of data.
> ~ John Tukey
> 
> 
> Disclaimer Bezoek onze website / Visit our website<https://drupal.inbo.be/nl/disclaimer-mailberichten-van-het-inbo>
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>


From Thierry.ONKELINX at inbo.be  Tue Dec  9 11:19:08 2014
From: Thierry.ONKELINX at inbo.be (ONKELINX, Thierry)
Date: Tue, 9 Dec 2014 10:19:08 +0000
Subject: [Rd] UTF8 markdown vignette
In-Reply-To: <5486C91E.90409@gmail.com>
References: <AA818EAD2576BC488B4F623941DA7427F3C7D1D8@inbomail.inbo.be>
	<5486C91E.90409@gmail.com>
Message-ID: <AA818EAD2576BC488B4F623941DA7427F3C7D24C@inbomail.inbo.be>

Dear Duncan,

The UTF-8 characters aren't properly rendered in the pdf version of the vignette.
$?? ????? ?????? ?????? ????? ?? ?? is rendered as $????? ?????????? ???????????? ????? ?????? ? ???????? ????????

The same problem occurs when I use render("vignette.md", output_format = "mypackage::mystyle"), instead of render("vignette.md", output_format = "mypackage::mystyle", encoding = "UTF-8"). The default value of the encoding argument of rmarkdown::render() is encoding = getOption("encoding"), which is "native.enc" on my system.

I'll post the question on an RStudio forum as well.

Best regards,

Thierry

ir. Thierry Onkelinx
Instituut voor natuur- en bosonderzoek / Research Institute for Nature and Forest
team Biometrie & Kwaliteitszorg / team Biometrics & Quality Assurance
Kliniekstraat 25
1070 Anderlecht
Belgium
+ 32 2 525 02 51
+ 32 54 43 61 85
Thierry.Onkelinx at inbo.be
www.inbo.be

To call in the statistician after the experiment is done may be no more than asking him to perform a post-mortem examination: he may be able to say what the experiment died of.
~ Sir Ronald Aylmer Fisher

The plural of anecdote is not data.
~ Roger Brinner

The combination of some data and an aching desire for an answer does not ensure that a reasonable answer can be extracted from a given body of data.
~ John Tukey


-----Oorspronkelijk bericht-----
Van: Duncan Murdoch [mailto:murdoch.duncan at gmail.com]
Verzonden: dinsdag 9 december 2014 11:04
Aan: ONKELINX, Thierry; r-devel at r-project.org
Onderwerp: Re: [Rd] UTF8 markdown vignette

On 09/12/2014, 4:48 AM, ONKELINX, Thierry wrote:
> Dear all,
>
> I'm trying to use a Markdown vignette with UTF-8 encoding. It compiles well when knitting the vignette in RStudio, but it fails to recognize the UTF-8 settings when building the source package. Can someone point out what I'm doing wrong? I tried to put the relevant information below.

You don't describe the symptoms of "failing to recognize", but from the look of it, this is a problem with the knitr::rmarkdown engine or with the devtools packaging, so you should probably ask on an RStudio forum.

Duncan Murdoch

> Best regards,
>
> Thierry
>
> Details:
>
> Using 64-bit R 3.1.2 with encoding = "native.enc" on Windows 7 with Rstudio 0.97.1091.
>
> The source packages is build using the devtools package. The build
> command is R --vanilla CMD build  "myPackage" --no-manual
> --no-resave-data
>
> The DESCRIPTION file has
>
> VignetteBuilder: knitr
> Suggests: knitr
> Imports: rmarkdown
>
> The markdown vignette YAML contains
> vignette: >
>   %\VignetteEngine{knitr::rmarkdown}
>   %\VignetteIndexEntry{The title}
>   \usepackage[utf8]{inputenc}
>
> The custom output style converts the markdown to beamer with the --latex-engine = xelatex flag.
>
> The vignette in tar.gz passes R --vanilla CMD check  --timings
> --as-cran
>
> * checking files in 'vignettes' ... OK
> * checking for unstated dependencies in vignettes ... OK
> * checking package vignettes in 'inst/doc' ... OK
> * checking running R code from vignettes ...
>    'markdown_intro.Rmd' using 'UTF-8' ... OK OK
> * checking re-building of vignette outputs ... [22s] OK
>
>
>
> ir. Thierry Onkelinx
> Instituut voor natuur- en bosonderzoek / Research Institute for Nature
> and Forest team Biometrie & Kwaliteitszorg / team Biometrics & Quality
> Assurance Kliniekstraat 25
> 1070 Anderlecht
> Belgium
> + 32 2 525 02 51
> + 32 54 43 61 85
> Thierry.Onkelinx at inbo.be
> www.inbo.be
>
> To call in the statistician after the experiment is done may be no more than asking him to perform a post-mortem examination: he may be able to say what the experiment died of.
> ~ Sir Ronald Aylmer Fisher
>
> The plural of anecdote is not data.
> ~ Roger Brinner
>
> The combination of some data and an aching desire for an answer does not ensure that a reasonable answer can be extracted from a given body of data.
> ~ John Tukey
>
>
> Disclaimer Bezoek onze website / Visit our
> website<https://drupal.inbo.be/nl/disclaimer-mailberichten-van-het-inb
> o>
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>

Disclaimer Bezoek onze website / Visit our website<https://drupal.inbo.be/nl/disclaimer-mailberichten-van-het-inbo>

From murdoch.duncan at gmail.com  Tue Dec  9 14:05:54 2014
From: murdoch.duncan at gmail.com (Duncan Murdoch)
Date: Tue, 09 Dec 2014 08:05:54 -0500
Subject: [Rd] UTF8 markdown vignette
In-Reply-To: <AA818EAD2576BC488B4F623941DA7427F3C7D24C@inbomail.inbo.be>
References: <AA818EAD2576BC488B4F623941DA7427F3C7D1D8@inbomail.inbo.be>
	<5486C91E.90409@gmail.com>
	<AA818EAD2576BC488B4F623941DA7427F3C7D24C@inbomail.inbo.be>
Message-ID: <5486F3B2.6060507@gmail.com>

On 09/12/2014, 5:19 AM, ONKELINX, Thierry wrote:
> Dear Duncan,
> 
> The UTF-8 characters aren't properly rendered in the pdf version of the vignette.
> $?? ????? ?????? ?????? ????? ?? ?? is rendered as $????? ?????????? ???????????? ????? ?????? ? ???????? ????????

That looks as though the UTF-8 characters are being interpreted as
Latin1 characters (or whatever your native encoding is on Windows) when
read from the file.

It is quite tricky to work with UTF-8 in R in Windows.  I think Sweave
does it properly, though there may be exceptions.  The issue is that
many character input routines assume characters start out in the native
encoding.  (There's also a translation that happens by default on
output, but I don't think that's your problem.)  So the way to debug
this is to follow all of the I/O, and see where the misinterpretation
happens.  For vignettes, things are complicated, because R reads the
file to determine which vignette engine to use, then the vignette engine
reads it (perhaps more than once).


> The same problem occurs when I use render("vignette.md", output_format = "mypackage::mystyle"), instead of render("vignette.md", output_format = "mypackage::mystyle", encoding = "UTF-8"). The default value of the encoding argument of rmarkdown::render() is
encoding = getOption("encoding"), which is "native.enc" on my system.
> 

It sounds as though the render function needs a way to determine the
encoding from the file itself.  Recent Sweave versions support the
declaration

%\VignetteEncoding{utf8}

as well as the older

\usepackage[utf8]{inputenc}

that you used.  You might want to try that line as well.  (You need to
keep the \usepackage line to tell LaTeX what encoding you're using.)

Duncan Murdoch


> I'll post the question on an RStudio forum as well.
> 
> Best regards,
> 
> Thierry
> 
> ir. Thierry Onkelinx
> Instituut voor natuur- en bosonderzoek / Research Institute for Nature and Forest
> team Biometrie & Kwaliteitszorg / team Biometrics & Quality Assurance
> Kliniekstraat 25
> 1070 Anderlecht
> Belgium
> + 32 2 525 02 51
> + 32 54 43 61 85
> Thierry.Onkelinx at inbo.be
> www.inbo.be
> 
> To call in the statistician after the experiment is done may be no more than asking him to perform a post-mortem examination: he may be able to say what the experiment died of.
> ~ Sir Ronald Aylmer Fisher
> 
> The plural of anecdote is not data.
> ~ Roger Brinner
> 
> The combination of some data and an aching desire for an answer does not ensure that a reasonable answer can be extracted from a given body of data.
> ~ John Tukey
> 
> 
> -----Oorspronkelijk bericht-----
> Van: Duncan Murdoch [mailto:murdoch.duncan at gmail.com]
> Verzonden: dinsdag 9 december 2014 11:04
> Aan: ONKELINX, Thierry; r-devel at r-project.org
> Onderwerp: Re: [Rd] UTF8 markdown vignette
> 
> On 09/12/2014, 4:48 AM, ONKELINX, Thierry wrote:
>> Dear all,
>>
>> I'm trying to use a Markdown vignette with UTF-8 encoding. It compiles well when knitting the vignette in RStudio, but it fails to recognize the UTF-8 settings when building the source package. Can someone point out what I'm doing wrong? I tried to put the relevant information below.
> 
> You don't describe the symptoms of "failing to recognize", but from the look of it, this is a problem with the knitr::rmarkdown engine or with the devtools packaging, so you should probably ask on an RStudio forum.
> 
> Duncan Murdoch
> 
>> Best regards,
>>
>> Thierry
>>
>> Details:
>>
>> Using 64-bit R 3.1.2 with encoding = "native.enc" on Windows 7 with Rstudio 0.97.1091.
>>
>> The source packages is build using the devtools package. The build
>> command is R --vanilla CMD build  "myPackage" --no-manual
>> --no-resave-data
>>
>> The DESCRIPTION file has
>>
>> VignetteBuilder: knitr
>> Suggests: knitr
>> Imports: rmarkdown
>>
>> The markdown vignette YAML contains
>> vignette: >
>>   %\VignetteEngine{knitr::rmarkdown}
>>   %\VignetteIndexEntry{The title}
>>   \usepackage[utf8]{inputenc}
>>
>> The custom output style converts the markdown to beamer with the --latex-engine = xelatex flag.
>>
>> The vignette in tar.gz passes R --vanilla CMD check  --timings
>> --as-cran
>>
>> * checking files in 'vignettes' ... OK
>> * checking for unstated dependencies in vignettes ... OK
>> * checking package vignettes in 'inst/doc' ... OK
>> * checking running R code from vignettes ...
>>    'markdown_intro.Rmd' using 'UTF-8' ... OK OK
>> * checking re-building of vignette outputs ... [22s] OK
>>
>>
>>
>> ir. Thierry Onkelinx
>> Instituut voor natuur- en bosonderzoek / Research Institute for Nature
>> and Forest team Biometrie & Kwaliteitszorg / team Biometrics & Quality
>> Assurance Kliniekstraat 25
>> 1070 Anderlecht
>> Belgium
>> + 32 2 525 02 51
>> + 32 54 43 61 85
>> Thierry.Onkelinx at inbo.be
>> www.inbo.be
>>
>> To call in the statistician after the experiment is done may be no more than asking him to perform a post-mortem examination: he may be able to say what the experiment died of.
>> ~ Sir Ronald Aylmer Fisher
>>
>> The plural of anecdote is not data.
>> ~ Roger Brinner
>>
>> The combination of some data and an aching desire for an answer does not ensure that a reasonable answer can be extracted from a given body of data.
>> ~ John Tukey
>>
>>
>> Disclaimer Bezoek onze website / Visit our
>> website<https://drupal.inbo.be/nl/disclaimer-mailberichten-van-het-inb
>> o>
>>
>> ______________________________________________
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>
> 
> Disclaimer Bezoek onze website / Visit our website<https://drupal.inbo.be/nl/disclaimer-mailberichten-van-het-inbo>
>


From apps.embedded at gmail.com  Tue Dec  9 15:38:32 2014
From: apps.embedded at gmail.com (Apps Embedded)
Date: Tue, 9 Dec 2014 15:38:32 +0100
Subject: [Rd] R on the Cydia Store
Message-ID: <CAO=GJvzj8kRtmVAaQLn5kPsajMtD3rRQai5e2ZC=MWDS7NY_Yw@mail.gmail.com>

Hi,

We have published an Android app called R Console on the Play Store since
D?cember 2013.
https://play.google.com/store/apps/details?id=com.appsopensource.R
https://play.google.com/store/apps/details?id=com.appsopensource.Rpremium

In the mean time, we have developped its equivalent app for the App Store.
We released it on march 2014. We have been approved from this date by Apple
to publish it world wide.
Recently, we learnt that GPL app are not compatible with the App Store
distribution licence.

Thus we decided to remove the iOS app from the App Store several days ago.

We are thinking of publishing the same app published under Cydia with a
freemium model.
Its licence would be GPL v3.

What we would like to do under Cydia with R Console is to have the
following behavior :
- free version will be able to run recommended packages and graphics are
not enabled. A small ad banner is present on top of the app.
- premium version will be the same as the free version except the ad banner
will not be present anymore and 3 compilers will be integrated into the app
in order to be able to compile and run most of the Cran packages from
source.
- graphics may be added in a second step.

The app will be considered as a bundle of open-source tools. This bundle
will be under the Gnu General Public Licence version 3. Each open-source
tool which contributes to the overall bundle will stay in its original
licence (R is GPL v2 for instance) but the bundle will be GPL v3.


>From your point of view, do you see any legal issue with this project under
Cydia for jailbroken iOS devices?
>From a trademark point of view, is the name of the apps "R Console Free"
and "R Console Premium" ok ?

Thanks for your help.

Apps Embedded Team.

	[[alternative HTML version deleted]]


From xie at yihui.name  Tue Dec  9 17:13:10 2014
From: xie at yihui.name (Yihui Xie)
Date: Tue, 9 Dec 2014 10:13:10 -0600
Subject: [Rd] UTF8 markdown vignette
In-Reply-To: <5486F3B2.6060507@gmail.com>
References: <AA818EAD2576BC488B4F623941DA7427F3C7D1D8@inbomail.inbo.be>
	<5486C91E.90409@gmail.com>
	<AA818EAD2576BC488B4F623941DA7427F3C7D24C@inbomail.inbo.be>
	<5486F3B2.6060507@gmail.com>
Message-ID: <CANROs4eKia1xaZrTH47tTiuL40eGW11Yrociqt5-rVcwJU0WGA@mail.gmail.com>

A few things to clarify:

1. You do not necessarily have to keep the \usepackage{} line if you
use %\VignetteEncoding{UTF-8}, because Pandoc will use UTF-8 anyway in
its LaTeX template.

2. Perhaps the vignette engine in R has done something clever to
convert utf8 to UTF-8, but I'd recommend %\VignetteEncoding{UTF-8}
instead of %\VignetteEncoding{utf8} to make sure it is a valid
encoding name, e.g.

> 'utf8' %in% iconvlist()
[1] FALSE
> 'UTF-8' %in% iconvlist()
[1] TRUE
> 'UTF8' %in% iconvlist()
[1] TRUE

BTW, %\VignetteEncoding is not documented anywhere (Cc'ing Kurt), and
I think it needs to be documented, since the old approach
\usepackage[enc]{inputenc} was basically a hack, which looks really
odd in non-LaTeX vignettes (e.g. HTML vignettes).

3. The default `encoding` argument of rmarkdown::render() is not
relevant here, even if its value is native.enc. When R build a
vignette, it tries to detect its encoding and pass it to the vignette
engine, so the default argument value may not be native.enc.

Lastly, the most important piece of information is missing in this
post: library(rmarkdown); sessionInfo(). There is not a minimal
reproducible example, either. Without these information, I can only
guess blindly.

BTW, you may also try HTML vignettes instead, which is much much
easier to get right than LaTeX in terms of character encodings.

Regards,
Yihui
--
Yihui Xie <xieyihui at gmail.com>
Web: http://yihui.name


On Tue, Dec 9, 2014 at 7:05 AM, Duncan Murdoch <murdoch.duncan at gmail.com> wrote:
> On 09/12/2014, 5:19 AM, ONKELINX, Thierry wrote:
>> Dear Duncan,
>>
>> The UTF-8 characters aren't properly rendered in the pdf version of the vignette.
>> $?? ????? ?????? ?????? ????? ?? ?? is rendered as $????? ?????????? ???????????? ????? ?????? ? ???????? ????????
>
> That looks as though the UTF-8 characters are being interpreted as
> Latin1 characters (or whatever your native encoding is on Windows) when
> read from the file.
>
> It is quite tricky to work with UTF-8 in R in Windows.  I think Sweave
> does it properly, though there may be exceptions.  The issue is that
> many character input routines assume characters start out in the native
> encoding.  (There's also a translation that happens by default on
> output, but I don't think that's your problem.)  So the way to debug
> this is to follow all of the I/O, and see where the misinterpretation
> happens.  For vignettes, things are complicated, because R reads the
> file to determine which vignette engine to use, then the vignette engine
> reads it (perhaps more than once).
>
>
>> The same problem occurs when I use render("vignette.md", output_format = "mypackage::mystyle"), instead of render("vignette.md", output_format = "mypackage::mystyle", encoding = "UTF-8"). The default value of the encoding argument of rmarkdown::render() is
> encoding = getOption("encoding"), which is "native.enc" on my system.
>>
>
> It sounds as though the render function needs a way to determine the
> encoding from the file itself.  Recent Sweave versions support the
> declaration
>
> %\VignetteEncoding{utf8}
>
> as well as the older
>
> \usepackage[utf8]{inputenc}
>
> that you used.  You might want to try that line as well.  (You need to
> keep the \usepackage line to tell LaTeX what encoding you're using.)
>
> Duncan Murdoch
>
>
>> I'll post the question on an RStudio forum as well.
>>
>> Best regards,
>>
>> Thierry
>>
>>
>> -----Oorspronkelijk bericht-----
>> Van: Duncan Murdoch [mailto:murdoch.duncan at gmail.com]
>> Verzonden: dinsdag 9 december 2014 11:04
>> Aan: ONKELINX, Thierry; r-devel at r-project.org
>> Onderwerp: Re: [Rd] UTF8 markdown vignette
>>
>> On 09/12/2014, 4:48 AM, ONKELINX, Thierry wrote:
>>> Dear all,
>>>
>>> I'm trying to use a Markdown vignette with UTF-8 encoding. It compiles well when knitting the vignette in RStudio, but it fails to recognize the UTF-8 settings when building the source package. Can someone point out what I'm doing wrong? I tried to put the relevant information below.
>>
>> You don't describe the symptoms of "failing to recognize", but from the look of it, this is a problem with the knitr::rmarkdown engine or with the devtools packaging, so you should probably ask on an RStudio forum.
>>
>> Duncan Murdoch
>>
>>> Best regards,
>>>
>>> Thierry
>>>
>>> Details:
>>>
>>> Using 64-bit R 3.1.2 with encoding = "native.enc" on Windows 7 with Rstudio 0.97.1091.
>>>
>>> The source packages is build using the devtools package. The build
>>> command is R --vanilla CMD build  "myPackage" --no-manual
>>> --no-resave-data
>>>
>>> The DESCRIPTION file has
>>>
>>> VignetteBuilder: knitr
>>> Suggests: knitr
>>> Imports: rmarkdown
>>>
>>> The markdown vignette YAML contains
>>> vignette: >
>>>   %\VignetteEngine{knitr::rmarkdown}
>>>   %\VignetteIndexEntry{The title}
>>>   \usepackage[utf8]{inputenc}
>>>
>>> The custom output style converts the markdown to beamer with the --latex-engine = xelatex flag.
>>>
>>> The vignette in tar.gz passes R --vanilla CMD check  --timings
>>> --as-cran
>>>
>>> * checking files in 'vignettes' ... OK
>>> * checking for unstated dependencies in vignettes ... OK
>>> * checking package vignettes in 'inst/doc' ... OK
>>> * checking running R code from vignettes ...
>>>    'markdown_intro.Rmd' using 'UTF-8' ... OK OK
>>> * checking re-building of vignette outputs ... [22s] OK


From hb at biostat.ucsf.edu  Tue Dec  9 17:44:05 2014
From: hb at biostat.ucsf.edu (Henrik Bengtsson)
Date: Tue, 9 Dec 2014 08:44:05 -0800
Subject: [Rd] R on the Cydia Store
In-Reply-To: <CAO=GJvzj8kRtmVAaQLn5kPsajMtD3rRQai5e2ZC=MWDS7NY_Yw@mail.gmail.com>
References: <CAO=GJvzj8kRtmVAaQLn5kPsajMtD3rRQai5e2ZC=MWDS7NY_Yw@mail.gmail.com>
Message-ID: <CAFDcVCSXTd1YOFL3QKK2X=5=RWVGzWFOLbe1QixiZE03a_8TVA@mail.gmail.com>

On Dec 9, 2014 6:38 AM, "Apps Embedded" <apps.embedded at gmail.com> wrote:
>
> Hi,
>
> We have published an Android app called R Console on the Play Store since
> D?cember 2013.
> https://play.google.com/store/apps/details?id=com.appsopensource.R
> https://play.google.com/store/apps/details?id=com.appsopensource.Rpremium
>
> In the mean time, we have developped its equivalent app for the App Store.
> We released it on march 2014. We have been approved from this date by Apple
> to publish it world wide.
> Recently, we learnt that GPL app are not compatible with the App Store
> distribution licence.

What I would like to write here, would fall under "this is certainly
not a topic for R devel", so I refrain.

However, I can say that it's likely your problems wouldn't have stopped there;

[R] R on the iPhone/iPad? Not so much....a GPL violation
https://stat.ethz.ch/pipermail/r-help/2010-June/240901.html

/Henrik

>
> Thus we decided to remove the iOS app from the App Store several days ago.
>
> We are thinking of publishing the same app published under Cydia with a
> freemium model.
> Its licence would be GPL v3.
>
> What we would like to do under Cydia with R Console is to have the
> following behavior :
> - free version will be able to run recommended packages and graphics are
> not enabled. A small ad banner is present on top of the app.
> - premium version will be the same as the free version except the ad banner
> will not be present anymore and 3 compilers will be integrated into the app
> in order to be able to compile and run most of the Cran packages from
> source.
> - graphics may be added in a second step.
>
> The app will be considered as a bundle of open-source tools. This bundle
> will be under the Gnu General Public Licence version 3. Each open-source
> tool which contributes to the overall bundle will stay in its original
> licence (R is GPL v2 for instance) but the bundle will be GPL v3.
>
>
> >From your point of view, do you see any legal issue with this project under
> Cydia for jailbroken iOS devices?
> >From a trademark point of view, is the name of the apps "R Console Free"
> and "R Console Premium" ok ?
>
> Thanks for your help.
>
> Apps Embedded Team.
>
>         [[alternative HTML version deleted]]
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From murdoch.duncan at gmail.com  Tue Dec  9 18:18:16 2014
From: murdoch.duncan at gmail.com (Duncan Murdoch)
Date: Tue, 09 Dec 2014 12:18:16 -0500
Subject: [Rd] UTF8 markdown vignette
In-Reply-To: <CANROs4eKia1xaZrTH47tTiuL40eGW11Yrociqt5-rVcwJU0WGA@mail.gmail.com>
References: <AA818EAD2576BC488B4F623941DA7427F3C7D1D8@inbomail.inbo.be>
	<5486C91E.90409@gmail.com>
	<AA818EAD2576BC488B4F623941DA7427F3C7D24C@inbomail.inbo.be>
	<5486F3B2.6060507@gmail.com>
	<CANROs4eKia1xaZrTH47tTiuL40eGW11Yrociqt5-rVcwJU0WGA@mail.gmail.com>
Message-ID: <54872ED8.20009@gmail.com>

On 09/12/2014 11:13 AM, Yihui Xie wrote:
> A few things to clarify:
>
> 1. You do not necessarily have to keep the \usepackage{} line if you
> use %\VignetteEncoding{UTF-8}, because Pandoc will use UTF-8 anyway in
> its LaTeX template.
>
> 2. Perhaps the vignette engine in R has done something clever to
> convert utf8 to UTF-8, but I'd recommend %\VignetteEncoding{UTF-8}
> instead of %\VignetteEncoding{utf8} to make sure it is a valid
> encoding name, e.g.
>
> > 'utf8' %in% iconvlist()
> [1] FALSE
> > 'UTF-8' %in% iconvlist()
> [1] TRUE
> > 'UTF8' %in% iconvlist()
> [1] TRUE
>
> BTW, %\VignetteEncoding is not documented anywhere (Cc'ing Kurt), and
> I think it needs to be documented, since the old approach
> \usepackage[enc]{inputenc} was basically a hack, which looks really
> odd in non-LaTeX vignettes (e.g. HTML vignettes).

  Yes, "utf8" works; it will be sent to the vignette engine as "UTF-8".

I was surprised about the missing docs.  The documented way to do this 
is to use

%\SweaveUTF8

but the source says the recommended way is to use

%\VignetteEncoding{}

and it's certainly a little more engine-agnostic.  I'll add something to the docs if Kurt doesn't get there first.

>
> 3. The default `encoding` argument of rmarkdown::render() is not
> relevant here, even if its value is native.enc. When R build a
> vignette, it tries to detect its encoding and pass it to the vignette
> engine, so the default argument value may not be native.enc.
>
> Lastly, the most important piece of information is missing in this
> post: library(rmarkdown); sessionInfo(). There is not a minimal
> reproducible example, either. Without these information, I can only
> guess blindly.
>
> BTW, you may also try HTML vignettes instead, which is much much
> easier to get right than LaTeX in terms of character encodings.

Over the last while I've been writing an HTML vignette, and I really 
want to compliment Yihui and the other rmarkdown folks for doing a 
fantastic job with them.  I haven't had to deal with encoding issues, 
but overall markdown + R + HTML is a very pleasant way to work.   I just 
wish someone would implement reverse search ... :-).

Duncan Murdoch
>
> Regards,
> Yihui
> --
> Yihui Xie <xieyihui at gmail.com>
> Web: http://yihui.name
>
>
> On Tue, Dec 9, 2014 at 7:05 AM, Duncan Murdoch <murdoch.duncan at gmail.com> wrote:
> > On 09/12/2014, 5:19 AM, ONKELINX, Thierry wrote:
> >> Dear Duncan,
> >>
> >> The UTF-8 characters aren't properly rendered in the pdf version of the vignette.
> >> $?? ????? ?????? ?????? ????? ?? ?? is rendered as $????? ?????????? ???????????? ????? ?????? ? ???????? ????????
> >
> > That looks as though the UTF-8 characters are being interpreted as
> > Latin1 characters (or whatever your native encoding is on Windows) when
> > read from the file.
> >
> > It is quite tricky to work with UTF-8 in R in Windows.  I think Sweave
> > does it properly, though there may be exceptions.  The issue is that
> > many character input routines assume characters start out in the native
> > encoding.  (There's also a translation that happens by default on
> > output, but I don't think that's your problem.)  So the way to debug
> > this is to follow all of the I/O, and see where the misinterpretation
> > happens.  For vignettes, things are complicated, because R reads the
> > file to determine which vignette engine to use, then the vignette engine
> > reads it (perhaps more than once).
> >
> >
> >> The same problem occurs when I use render("vignette.md", output_format = "mypackage::mystyle"), instead of render("vignette.md", output_format = "mypackage::mystyle", encoding = "UTF-8"). The default value of the encoding argument of rmarkdown::render() is
> > encoding = getOption("encoding"), which is "native.enc" on my system.
> >>
> >
> > It sounds as though the render function needs a way to determine the
> > encoding from the file itself.  Recent Sweave versions support the
> > declaration
> >
> > %\VignetteEncoding{utf8}
> >
> > as well as the older
> >
> > \usepackage[utf8]{inputenc}
> >
> > that you used.  You might want to try that line as well.  (You need to
> > keep the \usepackage line to tell LaTeX what encoding you're using.)
> >
> > Duncan Murdoch
> >
> >
> >> I'll post the question on an RStudio forum as well.
> >>
> >> Best regards,
> >>
> >> Thierry
> >>
> >>
> >> -----Oorspronkelijk bericht-----
> >> Van: Duncan Murdoch [mailto:murdoch.duncan at gmail.com]
> >> Verzonden: dinsdag 9 december 2014 11:04
> >> Aan: ONKELINX, Thierry; r-devel at r-project.org
> >> Onderwerp: Re: [Rd] UTF8 markdown vignette
> >>
> >> On 09/12/2014, 4:48 AM, ONKELINX, Thierry wrote:
> >>> Dear all,
> >>>
> >>> I'm trying to use a Markdown vignette with UTF-8 encoding. It compiles well when knitting the vignette in RStudio, but it fails to recognize the UTF-8 settings when building the source package. Can someone point out what I'm doing wrong? I tried to put the relevant information below.
> >>
> >> You don't describe the symptoms of "failing to recognize", but from the look of it, this is a problem with the knitr::rmarkdown engine or with the devtools packaging, so you should probably ask on an RStudio forum.
> >>
> >> Duncan Murdoch
> >>
> >>> Best regards,
> >>>
> >>> Thierry
> >>>
> >>> Details:
> >>>
> >>> Using 64-bit R 3.1.2 with encoding = "native.enc" on Windows 7 with Rstudio 0.97.1091.
> >>>
> >>> The source packages is build using the devtools package. The build
> >>> command is R --vanilla CMD build  "myPackage" --no-manual
> >>> --no-resave-data
> >>>
> >>> The DESCRIPTION file has
> >>>
> >>> VignetteBuilder: knitr
> >>> Suggests: knitr
> >>> Imports: rmarkdown
> >>>
> >>> The markdown vignette YAML contains
> >>> vignette: >
> >>>   %\VignetteEngine{knitr::rmarkdown}
> >>>   %\VignetteIndexEntry{The title}
> >>>   \usepackage[utf8]{inputenc}
> >>>
> >>> The custom output style converts the markdown to beamer with the --latex-engine = xelatex flag.
> >>>
> >>> The vignette in tar.gz passes R --vanilla CMD check  --timings
> >>> --as-cran
> >>>
> >>> * checking files in 'vignettes' ... OK
> >>> * checking for unstated dependencies in vignettes ... OK
> >>> * checking package vignettes in 'inst/doc' ... OK
> >>> * checking running R code from vignettes ...
> >>>    'markdown_intro.Rmd' using 'UTF-8' ... OK OK
> >>> * checking re-building of vignette outputs ... [22s] OK


From xie at yihui.name  Tue Dec  9 18:27:28 2014
From: xie at yihui.name (Yihui Xie)
Date: Tue, 9 Dec 2014 11:27:28 -0600
Subject: [Rd] UTF8 markdown vignette
In-Reply-To: <54872ED8.20009@gmail.com>
References: <AA818EAD2576BC488B4F623941DA7427F3C7D1D8@inbomail.inbo.be>
	<5486C91E.90409@gmail.com>
	<AA818EAD2576BC488B4F623941DA7427F3C7D24C@inbomail.inbo.be>
	<5486F3B2.6060507@gmail.com>
	<CANROs4eKia1xaZrTH47tTiuL40eGW11Yrociqt5-rVcwJU0WGA@mail.gmail.com>
	<54872ED8.20009@gmail.com>
Message-ID: <CANROs4d8saoq=hRkE7aR5E_2tvnytVMOnRk6W7WLiCp7dk=M3Q@mail.gmail.com>

Thanks for the kind words. Actually we have more ambitious plans than
just reverse search :)

Regards,
Yihui
--
Yihui Xie <xieyihui at gmail.com>
Web: http://yihui.name


On Tue, Dec 9, 2014 at 11:18 AM, Duncan Murdoch
<murdoch.duncan at gmail.com> wrote:
> On 09/12/2014 11:13 AM, Yihui Xie wrote:
>>
>> Lastly, the most important piece of information is missing in this
>> post: library(rmarkdown); sessionInfo(). There is not a minimal
>> reproducible example, either. Without these information, I can only
>> guess blindly.
>>
>> BTW, you may also try HTML vignettes instead, which is much much
>> easier to get right than LaTeX in terms of character encodings.
>
>
> Over the last while I've been writing an HTML vignette, and I really want to
> compliment Yihui and the other rmarkdown folks for doing a fantastic job
> with them.  I haven't had to deal with encoding issues, but overall markdown
> + R + HTML is a very pleasant way to work.   I just wish someone would
> implement reverse search ... :-).
>
> Duncan Murdoch


From murdoch.duncan at gmail.com  Tue Dec  9 19:08:43 2014
From: murdoch.duncan at gmail.com (Duncan Murdoch)
Date: Tue, 09 Dec 2014 13:08:43 -0500
Subject: [Rd] R on the Cydia Store
In-Reply-To: <CAO=GJvzj8kRtmVAaQLn5kPsajMtD3rRQai5e2ZC=MWDS7NY_Yw@mail.gmail.com>
References: <CAO=GJvzj8kRtmVAaQLn5kPsajMtD3rRQai5e2ZC=MWDS7NY_Yw@mail.gmail.com>
Message-ID: <54873AAB.9060802@gmail.com>

On 09/12/2014 9:38 AM, Apps Embedded wrote:
> Hi,
>
> We have published an Android app called R Console on the Play Store since
> D?cember 2013.
> https://play.google.com/store/apps/details?id=com.appsopensource.R
> https://play.google.com/store/apps/details?id=com.appsopensource.Rpremium
>
> In the mean time, we have developped its equivalent app for the App Store.
> We released it on march 2014. We have been approved from this date by Apple
> to publish it world wide.
> Recently, we learnt that GPL app are not compatible with the App Store
> distribution licence.
>
> Thus we decided to remove the iOS app from the App Store several days ago.
>
> We are thinking of publishing the same app published under Cydia with a
> freemium model.
> Its licence would be GPL v3.
>
> What we would like to do under Cydia with R Console is to have the
> following behavior :
> - free version will be able to run recommended packages and graphics are
> not enabled. A small ad banner is present on top of the app.
> - premium version will be the same as the free version except the ad banner
> will not be present anymore and 3 compilers will be integrated into the app
> in order to be able to compile and run most of the Cran packages from
> source.
> - graphics may be added in a second step.
>
> The app will be considered as a bundle of open-source tools. This bundle
> will be under the Gnu General Public Licence version 3. Each open-source
> tool which contributes to the overall bundle will stay in its original
> licence (R is GPL v2 for instance) but the bundle will be GPL v3.

You need to be careful with that:  R has a variety of licenses for 
various parts, and I'm not sure all of them are GPL v3 compatible.
>
>
> >From your point of view, do you see any legal issue with this project under
> Cydia for jailbroken iOS devices?
> >From a trademark point of view, is the name of the apps "R Console Free"
> and "R Console Premium" ok ?

I don't think the R Foundation would object to those names, but you 
could ask them to be sure.  You should get permission if you want to use 
the logo.

Duncan Murdoch
P.S. I am a Foundation member, but I'm not writing in that capacity.

>
> Thanks for your help.
>
> Apps Embedded Team.
>
> 	[[alternative HTML version deleted]]
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From marc_schwartz at me.com  Tue Dec  9 22:26:04 2014
From: marc_schwartz at me.com (Marc Schwartz)
Date: Tue, 09 Dec 2014 15:26:04 -0600
Subject: [Rd] R on the Cydia Store
In-Reply-To: <CAFDcVCSXTd1YOFL3QKK2X=5=RWVGzWFOLbe1QixiZE03a_8TVA@mail.gmail.com>
References: <CAO=GJvzj8kRtmVAaQLn5kPsajMtD3rRQai5e2ZC=MWDS7NY_Yw@mail.gmail.com>
	<CAFDcVCSXTd1YOFL3QKK2X=5=RWVGzWFOLbe1QixiZE03a_8TVA@mail.gmail.com>
Message-ID: <6E3F8BD3-FD1C-4A78-84E6-E17FD1381190@me.com>


> On Dec 9, 2014, at 10:44 AM, Henrik Bengtsson <hb at biostat.ucsf.edu> wrote:
> 
> On Dec 9, 2014 6:38 AM, "Apps Embedded" <apps.embedded at gmail.com> wrote:
>> 
>> Hi,
>> 
>> We have published an Android app called R Console on the Play Store since
>> D?cember 2013.
>> https://play.google.com/store/apps/details?id=com.appsopensource.R
>> https://play.google.com/store/apps/details?id=com.appsopensource.Rpremium
>> 
>> In the mean time, we have developped its equivalent app for the App Store.
>> We released it on march 2014. We have been approved from this date by Apple
>> to publish it world wide.
>> Recently, we learnt that GPL app are not compatible with the App Store
>> distribution licence.
> 
> What I would like to write here, would fall under "this is certainly
> not a topic for R devel", so I refrain.
> 
> However, I can say that it's likely your problems wouldn't have stopped there;
> 
> [R] R on the iPhone/iPad? Not so much....a GPL violation
> https://stat.ethz.ch/pipermail/r-help/2010-June/240901.html
> 
> /Henrik

Hi,

I might add that, given the intentions expressed below, in terms of doing this on a jailbroken iOS device via Cydia, the concerns raised in the Apple iOS SDK, that I referenced in the above linked post from 2010, essentially go away. 

They would still be germane, as may now be expressed in the current SDK, including the use of the new Swift language, if the OP's intent was to pursue this via official AppStore channels and am surprised that it was approved by Apple previously given the indicated content and functionality of the app.

The primary intention of jailbreaking an iOS device is, of course, to circumvent Apple's restrictions on the software that can be installed by using third party distribution channels and in the tools that can be used to develop apps.

That being said, the licensing issues, as Duncan raised in his reply, are still germane and permission from the R Foundation should be sought for any uses involving R Foundation copyrighted content. That would be relevant for both the iOS implementation and the Android implementation.

Regards,

Marc Schwartz

P.S. I echo's Duncan's comment, in that I am also a member of the R Foundation, but am not speaking here on it's behalf.


> 
>> 
>> Thus we decided to remove the iOS app from the App Store several days ago.
>> 
>> We are thinking of publishing the same app published under Cydia with a
>> freemium model.
>> Its licence would be GPL v3.
>> 
>> What we would like to do under Cydia with R Console is to have the
>> following behavior :
>> - free version will be able to run recommended packages and graphics are
>> not enabled. A small ad banner is present on top of the app.
>> - premium version will be the same as the free version except the ad banner
>> will not be present anymore and 3 compilers will be integrated into the app
>> in order to be able to compile and run most of the Cran packages from
>> source.
>> - graphics may be added in a second step.
>> 
>> The app will be considered as a bundle of open-source tools. This bundle
>> will be under the Gnu General Public Licence version 3. Each open-source
>> tool which contributes to the overall bundle will stay in its original
>> licence (R is GPL v2 for instance) but the bundle will be GPL v3.
>> 
>> 
>>> From your point of view, do you see any legal issue with this project under
>> Cydia for jailbroken iOS devices?
>>> From a trademark point of view, is the name of the apps "R Console Free"
>> and "R Console Premium" ok ?
>> 
>> Thanks for your help.
>> 
>> Apps Embedded Team.


From murdoch.duncan at gmail.com  Tue Dec  9 22:34:00 2014
From: murdoch.duncan at gmail.com (Duncan Murdoch)
Date: Tue, 09 Dec 2014 16:34:00 -0500
Subject: [Rd] R on the Cydia Store
In-Reply-To: <6E3F8BD3-FD1C-4A78-84E6-E17FD1381190@me.com>
References: <CAO=GJvzj8kRtmVAaQLn5kPsajMtD3rRQai5e2ZC=MWDS7NY_Yw@mail.gmail.com>
	<CAFDcVCSXTd1YOFL3QKK2X=5=RWVGzWFOLbe1QixiZE03a_8TVA@mail.gmail.com>
	<6E3F8BD3-FD1C-4A78-84E6-E17FD1381190@me.com>
Message-ID: <54876AC8.9010603@gmail.com>

On 09/12/2014, 4:26 PM, Marc Schwartz wrote:
> 
>> On Dec 9, 2014, at 10:44 AM, Henrik Bengtsson <hb at biostat.ucsf.edu> wrote:
>>
>> On Dec 9, 2014 6:38 AM, "Apps Embedded" <apps.embedded at gmail.com> wrote:
>>>
>>> Hi,
>>>
>>> We have published an Android app called R Console on the Play Store since
>>> D?cember 2013.
>>> https://play.google.com/store/apps/details?id=com.appsopensource.R
>>> https://play.google.com/store/apps/details?id=com.appsopensource.Rpremium
>>>
>>> In the mean time, we have developped its equivalent app for the App Store.
>>> We released it on march 2014. We have been approved from this date by Apple
>>> to publish it world wide.
>>> Recently, we learnt that GPL app are not compatible with the App Store
>>> distribution licence.
>>
>> What I would like to write here, would fall under "this is certainly
>> not a topic for R devel", so I refrain.
>>
>> However, I can say that it's likely your problems wouldn't have stopped there;
>>
>> [R] R on the iPhone/iPad? Not so much....a GPL violation
>> https://stat.ethz.ch/pipermail/r-help/2010-June/240901.html
>>
>> /Henrik
> 
> Hi,
> 
> I might add that, given the intentions expressed below, in terms of doing this on a jailbroken iOS device via Cydia, the concerns raised in the Apple iOS SDK, that I referenced in the above linked post from 2010, essentially go away. 
> 
> They would still be germane, as may now be expressed in the current SDK, including the use of the new Swift language, if the OP's intent was to pursue this via official AppStore channels and am surprised that it was approved by Apple previously given the indicated content and functionality of the app.
> 
> The primary intention of jailbreaking an iOS device is, of course, to circumvent Apple's restrictions on the software that can be installed by using third party distribution channels and in the tools that can be used to develop apps.
> 
> That being said, the licensing issues, as Duncan raised in his reply, are still germane and permission from the R Foundation should be sought for any uses involving R Foundation copyrighted content. That would be relevant for both the iOS implementation and the Android implementation.

Just to be clear:  everybody already has permission from the R copyright
holders to use R within the existing licenses.  There's no need to seek
extra permission for that.

Trademarks are different...

Duncan Murdoch

> Regards,
> 
> Marc Schwartz
> 
> P.S. I echo's Duncan's comment, in that I am also a member of the R Foundation, but am not speaking here on it's behalf.
> 
> 
>>
>>>
>>> Thus we decided to remove the iOS app from the App Store several days ago.
>>>
>>> We are thinking of publishing the same app published under Cydia with a
>>> freemium model.
>>> Its licence would be GPL v3.
>>>
>>> What we would like to do under Cydia with R Console is to have the
>>> following behavior :
>>> - free version will be able to run recommended packages and graphics are
>>> not enabled. A small ad banner is present on top of the app.
>>> - premium version will be the same as the free version except the ad banner
>>> will not be present anymore and 3 compilers will be integrated into the app
>>> in order to be able to compile and run most of the Cran packages from
>>> source.
>>> - graphics may be added in a second step.
>>>
>>> The app will be considered as a bundle of open-source tools. This bundle
>>> will be under the Gnu General Public Licence version 3. Each open-source
>>> tool which contributes to the overall bundle will stay in its original
>>> licence (R is GPL v2 for instance) but the bundle will be GPL v3.
>>>
>>>
>>>> From your point of view, do you see any legal issue with this project under
>>> Cydia for jailbroken iOS devices?
>>>> From a trademark point of view, is the name of the apps "R Console Free"
>>> and "R Console Premium" ok ?
>>>
>>> Thanks for your help.
>>>
>>> Apps Embedded Team.
>


From Thierry.ONKELINX at inbo.be  Tue Dec  9 22:38:24 2014
From: Thierry.ONKELINX at inbo.be (ONKELINX, Thierry)
Date: Tue, 9 Dec 2014 21:38:24 +0000
Subject: [Rd] UTF8 markdown vignette
In-Reply-To: <CANROs4eKia1xaZrTH47tTiuL40eGW11Yrociqt5-rVcwJU0WGA@mail.gmail.com>
References: <AA818EAD2576BC488B4F623941DA7427F3C7D1D8@inbomail.inbo.be>
	<5486C91E.90409@gmail.com>
	<AA818EAD2576BC488B4F623941DA7427F3C7D24C@inbomail.inbo.be>
	<5486F3B2.6060507@gmail.com>,
	<CANROs4eKia1xaZrTH47tTiuL40eGW11Yrociqt5-rVcwJU0WGA@mail.gmail.com>
Message-ID: <AA818EAD2576BC488B4F623941DA7427F3C7DFD4@inbomail.inbo.be>

Dear Yihui,

I have created a reproducible example at https://github.com/ThierryO/utf8vignette

The \usepackage{} line is needed, otherwise R CMD check --as-cran will give a warning.
%\VignetteEncoding{UTF-8} did not solve the problem.

I use rmarkdown_0.3.11

HTML vignette is not an option as the vignette demonstrates the use of a custom beamer output format.

Best regards,

Thierry

ir. Thierry Onkelinx
Instituut voor natuur- en bosonderzoek / Research Institute for Nature and Forest
team Biometrie & Kwaliteitszorg / team Biometrics & Quality Assurance
Kliniekstraat 25
1070 Anderlecht
Belgium
+ 32 2 525 02 51
+ 32 54 43 61 85
Thierry.Onkelinx at inbo.be
www.inbo.be
To call in the statistician after the experiment is done may be no more than asking him to perform a post-mortem examination: he may be able to say what the experiment died of. ~ Sir Ronald Aylmer Fisher
The plural of anecdote is not data. ~ Roger Brinner
The combination of some data and an aching desire for an answer does not ensure that a reasonable answer can be extracted from a given body of data. ~ John Tukey

________________________________________
Van: xieyihui at gmail.com [xieyihui at gmail.com] namens Yihui Xie [xie at yihui.name]
Verzonden: dinsdag 9 december 2014 17:13
Aan: ONKELINX, Thierry
CC: r-devel at r-project.org; Duncan Murdoch; Kurt Hornik
Onderwerp: Re: [Rd] UTF8 markdown vignette

A few things to clarify:

1. You do not necessarily have to keep the \usepackage{} line if you
use %\VignetteEncoding{UTF-8}, because Pandoc will use UTF-8 anyway in
its LaTeX template.

2. Perhaps the vignette engine in R has done something clever to
convert utf8 to UTF-8, but I'd recommend %\VignetteEncoding{UTF-8}
instead of %\VignetteEncoding{utf8} to make sure it is a valid
encoding name, e.g.

> 'utf8' %in% iconvlist()
[1] FALSE
> 'UTF-8' %in% iconvlist()
[1] TRUE
> 'UTF8' %in% iconvlist()
[1] TRUE

BTW, %\VignetteEncoding is not documented anywhere (Cc'ing Kurt), and
I think it needs to be documented, since the old approach
\usepackage[enc]{inputenc} was basically a hack, which looks really
odd in non-LaTeX vignettes (e.g. HTML vignettes).

3. The default `encoding` argument of rmarkdown::render() is not
relevant here, even if its value is native.enc. When R build a
vignette, it tries to detect its encoding and pass it to the vignette
engine, so the default argument value may not be native.enc.

Lastly, the most important piece of information is missing in this
post: library(rmarkdown); sessionInfo(). There is not a minimal
reproducible example, either. Without these information, I can only
guess blindly.

BTW, you may also try HTML vignettes instead, which is much much
easier to get right than LaTeX in terms of character encodings.

Regards,
Yihui
--
Yihui Xie <xieyihui at gmail.com>
Web: http://yihui.name


On Tue, Dec 9, 2014 at 7:05 AM, Duncan Murdoch <murdoch.duncan at gmail.com> wrote:
> On 09/12/2014, 5:19 AM, ONKELINX, Thierry wrote:
>> Dear Duncan,
>>
>> The UTF-8 characters aren't properly rendered in the pdf version of the vignette.
>> $?? ????? ?????? ?????? ????? ?? ?? is rendered as $????? ?????????? ???????????? ????? ?????? ? ???????? ????????
>
> That looks as though the UTF-8 characters are being interpreted as
> Latin1 characters (or whatever your native encoding is on Windows) when
> read from the file.
>
> It is quite tricky to work with UTF-8 in R in Windows.  I think Sweave
> does it properly, though there may be exceptions.  The issue is that
> many character input routines assume characters start out in the native
> encoding.  (There's also a translation that happens by default on
> output, but I don't think that's your problem.)  So the way to debug
> this is to follow all of the I/O, and see where the misinterpretation
> happens.  For vignettes, things are complicated, because R reads the
> file to determine which vignette engine to use, then the vignette engine
> reads it (perhaps more than once).
>
>
>> The same problem occurs when I use render("vignette.md", output_format = "mypackage::mystyle"), instead of render("vignette.md", output_format = "mypackage::mystyle", encoding = "UTF-8"). The default value of the encoding argument of rmarkdown::render() is
> encoding = getOption("encoding"), which is "native.enc" on my system.
>>
>
> It sounds as though the render function needs a way to determine the
> encoding from the file itself.  Recent Sweave versions support the
> declaration
>
> %\VignetteEncoding{utf8}
>
> as well as the older
>
> \usepackage[utf8]{inputenc}
>
> that you used.  You might want to try that line as well.  (You need to
> keep the \usepackage line to tell LaTeX what encoding you're using.)
>
> Duncan Murdoch
>
>
>> I'll post the question on an RStudio forum as well.
>>
>> Best regards,
>>
>> Thierry
>>
>>
>> -----Oorspronkelijk bericht-----
>> Van: Duncan Murdoch [mailto:murdoch.duncan at gmail.com]
>> Verzonden: dinsdag 9 december 2014 11:04
>> Aan: ONKELINX, Thierry; r-devel at r-project.org
>> Onderwerp: Re: [Rd] UTF8 markdown vignette
>>
>> On 09/12/2014, 4:48 AM, ONKELINX, Thierry wrote:
>>> Dear all,
>>>
>>> I'm trying to use a Markdown vignette with UTF-8 encoding. It compiles well when knitting the vignette in RStudio, but it fails to recognize the UTF-8 settings when building the source package. Can someone point out what I'm doing wrong? I tried to put the relevant information below.
>>
>> You don't describe the symptoms of "failing to recognize", but from the look of it, this is a problem with the knitr::rmarkdown engine or with the devtools packaging, so you should probably ask on an RStudio forum.
>>
>> Duncan Murdoch
>>
>>> Best regards,
>>>
>>> Thierry
>>>
>>> Details:
>>>
>>> Using 64-bit R 3.1.2 with encoding = "native.enc" on Windows 7 with Rstudio 0.97.1091.
>>>
>>> The source packages is build using the devtools package. The build
>>> command is R --vanilla CMD build  "myPackage" --no-manual
>>> --no-resave-data
>>>
>>> The DESCRIPTION file has
>>>
>>> VignetteBuilder: knitr
>>> Suggests: knitr
>>> Imports: rmarkdown
>>>
>>> The markdown vignette YAML contains
>>> vignette: >
>>>   %\VignetteEngine{knitr::rmarkdown}
>>>   %\VignetteIndexEntry{The title}
>>>   \usepackage[utf8]{inputenc}
>>>
>>> The custom output style converts the markdown to beamer with the --latex-engine = xelatex flag.
>>>
>>> The vignette in tar.gz passes R --vanilla CMD check  --timings
>>> --as-cran
>>>
>>> * checking files in 'vignettes' ... OK
>>> * checking for unstated dependencies in vignettes ... OK
>>> * checking package vignettes in 'inst/doc' ... OK
>>> * checking running R code from vignettes ...
>>>    'markdown_intro.Rmd' using 'UTF-8' ... OK OK
>>> * checking re-building of vignette outputs ... [22s] OK
Disclaimer Bezoek onze website / Visit our website<https://drupal.inbo.be/nl/disclaimer-mailberichten-van-het-inbo>


From murdoch.duncan at gmail.com  Tue Dec  9 22:42:22 2014
From: murdoch.duncan at gmail.com (Duncan Murdoch)
Date: Tue, 09 Dec 2014 16:42:22 -0500
Subject: [Rd] UTF8 markdown vignette
In-Reply-To: <AA818EAD2576BC488B4F623941DA7427F3C7DFD4@inbomail.inbo.be>
References: <AA818EAD2576BC488B4F623941DA7427F3C7D1D8@inbomail.inbo.be>
	<5486C91E.90409@gmail.com>
	<AA818EAD2576BC488B4F623941DA7427F3C7D24C@inbomail.inbo.be>
	<5486F3B2.6060507@gmail.com>,
	<CANROs4eKia1xaZrTH47tTiuL40eGW11Yrociqt5-rVcwJU0WGA@mail.gmail.com>
	<AA818EAD2576BC488B4F623941DA7427F3C7DFD4@inbomail.inbo.be>
Message-ID: <54876CBE.9020207@gmail.com>

On 09/12/2014, 4:38 PM, ONKELINX, Thierry wrote:
> Dear Yihui,
> 
> I have created a reproducible example at https://github.com/ThierryO/utf8vignette
> 
> The \usepackage{} line is needed, otherwise R CMD check --as-cran will give a warning.
> %\VignetteEncoding{UTF-8} did not solve the problem.

I've just taken a look at the sources, and that's only in R-devel, it
never got backported to R-patched so it isn't in the release R.  You
would need to use

%\SweaveUTF8

instead.  (It was introduced in 3.1.0, and should be kept until at least
3.2.0, but \VignetteEncoding will be preferred in the long run.  It
should make it into 3.1.3 unless we drop the ball again.)

Duncan Murdoch

> 
> I use rmarkdown_0.3.11
> 
> HTML vignette is not an option as the vignette demonstrates the use of a custom beamer output format.
> 
> Best regards,
> 
> Thierry
> 
> ir. Thierry Onkelinx
> Instituut voor natuur- en bosonderzoek / Research Institute for Nature and Forest
> team Biometrie & Kwaliteitszorg / team Biometrics & Quality Assurance
> Kliniekstraat 25
> 1070 Anderlecht
> Belgium
> + 32 2 525 02 51
> + 32 54 43 61 85
> Thierry.Onkelinx at inbo.be
> www.inbo.be
> To call in the statistician after the experiment is done may be no more than asking him to perform a post-mortem examination: he may be able to say what the experiment died of. ~ Sir Ronald Aylmer Fisher
> The plural of anecdote is not data. ~ Roger Brinner
> The combination of some data and an aching desire for an answer does not ensure that a reasonable answer can be extracted from a given body of data. ~ John Tukey
> 
> ________________________________________
> Van: xieyihui at gmail.com [xieyihui at gmail.com] namens Yihui Xie [xie at yihui.name]
> Verzonden: dinsdag 9 december 2014 17:13
> Aan: ONKELINX, Thierry
> CC: r-devel at r-project.org; Duncan Murdoch; Kurt Hornik
> Onderwerp: Re: [Rd] UTF8 markdown vignette
> 
> A few things to clarify:
> 
> 1. You do not necessarily have to keep the \usepackage{} line if you
> use %\VignetteEncoding{UTF-8}, because Pandoc will use UTF-8 anyway in
> its LaTeX template.
> 
> 2. Perhaps the vignette engine in R has done something clever to
> convert utf8 to UTF-8, but I'd recommend %\VignetteEncoding{UTF-8}
> instead of %\VignetteEncoding{utf8} to make sure it is a valid
> encoding name, e.g.
> 
>> 'utf8' %in% iconvlist()
> [1] FALSE
>> 'UTF-8' %in% iconvlist()
> [1] TRUE
>> 'UTF8' %in% iconvlist()
> [1] TRUE
> 
> BTW, %\VignetteEncoding is not documented anywhere (Cc'ing Kurt), and
> I think it needs to be documented, since the old approach
> \usepackage[enc]{inputenc} was basically a hack, which looks really
> odd in non-LaTeX vignettes (e.g. HTML vignettes).
> 
> 3. The default `encoding` argument of rmarkdown::render() is not
> relevant here, even if its value is native.enc. When R build a
> vignette, it tries to detect its encoding and pass it to the vignette
> engine, so the default argument value may not be native.enc.
> 
> Lastly, the most important piece of information is missing in this
> post: library(rmarkdown); sessionInfo(). There is not a minimal
> reproducible example, either. Without these information, I can only
> guess blindly.
> 
> BTW, you may also try HTML vignettes instead, which is much much
> easier to get right than LaTeX in terms of character encodings.
> 
> Regards,
> Yihui
> --
> Yihui Xie <xieyihui at gmail.com>
> Web: http://yihui.name
> 
> 
> On Tue, Dec 9, 2014 at 7:05 AM, Duncan Murdoch <murdoch.duncan at gmail.com> wrote:
>> On 09/12/2014, 5:19 AM, ONKELINX, Thierry wrote:
>>> Dear Duncan,
>>>
>>> The UTF-8 characters aren't properly rendered in the pdf version of the vignette.
>>> $?? ????? ?????? ?????? ????? ?? ?? is rendered as $????? ?????????? ???????????? ????? ?????? ? ???????? ????????
>>
>> That looks as though the UTF-8 characters are being interpreted as
>> Latin1 characters (or whatever your native encoding is on Windows) when
>> read from the file.
>>
>> It is quite tricky to work with UTF-8 in R in Windows.  I think Sweave
>> does it properly, though there may be exceptions.  The issue is that
>> many character input routines assume characters start out in the native
>> encoding.  (There's also a translation that happens by default on
>> output, but I don't think that's your problem.)  So the way to debug
>> this is to follow all of the I/O, and see where the misinterpretation
>> happens.  For vignettes, things are complicated, because R reads the
>> file to determine which vignette engine to use, then the vignette engine
>> reads it (perhaps more than once).
>>
>>
>>> The same problem occurs when I use render("vignette.md", output_format = "mypackage::mystyle"), instead of render("vignette.md", output_format = "mypackage::mystyle", encoding = "UTF-8"). The default value of the encoding argument of rmarkdown::render() is
>> encoding = getOption("encoding"), which is "native.enc" on my system.
>>>
>>
>> It sounds as though the render function needs a way to determine the
>> encoding from the file itself.  Recent Sweave versions support the
>> declaration
>>
>> %\VignetteEncoding{utf8}
>>
>> as well as the older
>>
>> \usepackage[utf8]{inputenc}
>>
>> that you used.  You might want to try that line as well.  (You need to
>> keep the \usepackage line to tell LaTeX what encoding you're using.)
>>
>> Duncan Murdoch
>>
>>
>>> I'll post the question on an RStudio forum as well.
>>>
>>> Best regards,
>>>
>>> Thierry
>>>
>>>
>>> -----Oorspronkelijk bericht-----
>>> Van: Duncan Murdoch [mailto:murdoch.duncan at gmail.com]
>>> Verzonden: dinsdag 9 december 2014 11:04
>>> Aan: ONKELINX, Thierry; r-devel at r-project.org
>>> Onderwerp: Re: [Rd] UTF8 markdown vignette
>>>
>>> On 09/12/2014, 4:48 AM, ONKELINX, Thierry wrote:
>>>> Dear all,
>>>>
>>>> I'm trying to use a Markdown vignette with UTF-8 encoding. It compiles well when knitting the vignette in RStudio, but it fails to recognize the UTF-8 settings when building the source package. Can someone point out what I'm doing wrong? I tried to put the relevant information below.
>>>
>>> You don't describe the symptoms of "failing to recognize", but from the look of it, this is a problem with the knitr::rmarkdown engine or with the devtools packaging, so you should probably ask on an RStudio forum.
>>>
>>> Duncan Murdoch
>>>
>>>> Best regards,
>>>>
>>>> Thierry
>>>>
>>>> Details:
>>>>
>>>> Using 64-bit R 3.1.2 with encoding = "native.enc" on Windows 7 with Rstudio 0.97.1091.
>>>>
>>>> The source packages is build using the devtools package. The build
>>>> command is R --vanilla CMD build  "myPackage" --no-manual
>>>> --no-resave-data
>>>>
>>>> The DESCRIPTION file has
>>>>
>>>> VignetteBuilder: knitr
>>>> Suggests: knitr
>>>> Imports: rmarkdown
>>>>
>>>> The markdown vignette YAML contains
>>>> vignette: >
>>>>   %\VignetteEngine{knitr::rmarkdown}
>>>>   %\VignetteIndexEntry{The title}
>>>>   \usepackage[utf8]{inputenc}
>>>>
>>>> The custom output style converts the markdown to beamer with the --latex-engine = xelatex flag.
>>>>
>>>> The vignette in tar.gz passes R --vanilla CMD check  --timings
>>>> --as-cran
>>>>
>>>> * checking files in 'vignettes' ... OK
>>>> * checking for unstated dependencies in vignettes ... OK
>>>> * checking package vignettes in 'inst/doc' ... OK
>>>> * checking running R code from vignettes ...
>>>>    'markdown_intro.Rmd' using 'UTF-8' ... OK OK
>>>> * checking re-building of vignette outputs ... [22s] OK
> Disclaimer Bezoek onze website / Visit our website<https://drupal.inbo.be/nl/disclaimer-mailberichten-van-het-inbo>
>


From marc_schwartz at me.com  Tue Dec  9 23:49:56 2014
From: marc_schwartz at me.com (Marc Schwartz)
Date: Tue, 09 Dec 2014 16:49:56 -0600
Subject: [Rd] R on the Cydia Store
In-Reply-To: <54876AC8.9010603@gmail.com>
References: <CAO=GJvzj8kRtmVAaQLn5kPsajMtD3rRQai5e2ZC=MWDS7NY_Yw@mail.gmail.com>
	<CAFDcVCSXTd1YOFL3QKK2X=5=RWVGzWFOLbe1QixiZE03a_8TVA@mail.gmail.com>
	<6E3F8BD3-FD1C-4A78-84E6-E17FD1381190@me.com>
	<54876AC8.9010603@gmail.com>
Message-ID: <0F09E623-6430-49AE-91A4-1AEF81411EEA@me.com>


> On Dec 9, 2014, at 3:34 PM, Duncan Murdoch <murdoch.duncan at gmail.com> wrote:
> 
> On 09/12/2014, 4:26 PM, Marc Schwartz wrote:
>> 
>>> On Dec 9, 2014, at 10:44 AM, Henrik Bengtsson <hb at biostat.ucsf.edu> wrote:
>>> 
>>> On Dec 9, 2014 6:38 AM, "Apps Embedded" <apps.embedded at gmail.com> wrote:
>>>> 
>>>> Hi,
>>>> 
>>>> We have published an Android app called R Console on the Play Store since
>>>> D?cember 2013.
>>>> https://play.google.com/store/apps/details?id=com.appsopensource.R
>>>> https://play.google.com/store/apps/details?id=com.appsopensource.Rpremium
>>>> 
>>>> In the mean time, we have developped its equivalent app for the App Store.
>>>> We released it on march 2014. We have been approved from this date by Apple
>>>> to publish it world wide.
>>>> Recently, we learnt that GPL app are not compatible with the App Store
>>>> distribution licence.
>>> 
>>> What I would like to write here, would fall under "this is certainly
>>> not a topic for R devel", so I refrain.
>>> 
>>> However, I can say that it's likely your problems wouldn't have stopped there;
>>> 
>>> [R] R on the iPhone/iPad? Not so much....a GPL violation
>>> https://stat.ethz.ch/pipermail/r-help/2010-June/240901.html
>>> 
>>> /Henrik
>> 
>> Hi,
>> 
>> I might add that, given the intentions expressed below, in terms of doing this on a jailbroken iOS device via Cydia, the concerns raised in the Apple iOS SDK, that I referenced in the above linked post from 2010, essentially go away. 
>> 
>> They would still be germane, as may now be expressed in the current SDK, including the use of the new Swift language, if the OP's intent was to pursue this via official AppStore channels and am surprised that it was approved by Apple previously given the indicated content and functionality of the app.
>> 
>> The primary intention of jailbreaking an iOS device is, of course, to circumvent Apple's restrictions on the software that can be installed by using third party distribution channels and in the tools that can be used to develop apps.
>> 
>> That being said, the licensing issues, as Duncan raised in his reply, are still germane and permission from the R Foundation should be sought for any uses involving R Foundation copyrighted content. That would be relevant for both the iOS implementation and the Android implementation.
> 
> Just to be clear:  everybody already has permission from the R copyright
> holders to use R within the existing licenses.  There's no need to seek
> extra permission for that.
> 
> Trademarks are different...
> 
> Duncan Murdoch


Thanks for the clarification Duncan, I was imprecise in my language.

Regards,

Marc


> 
>> Regards,
>> 
>> Marc Schwartz
>> 
>> P.S. I echo's Duncan's comment, in that I am also a member of the R Foundation, but am not speaking here on it's behalf.
>> 
>> 
>>> 
>>>> 
>>>> Thus we decided to remove the iOS app from the App Store several days ago.
>>>> 
>>>> We are thinking of publishing the same app published under Cydia with a
>>>> freemium model.
>>>> Its licence would be GPL v3.
>>>> 
>>>> What we would like to do under Cydia with R Console is to have the
>>>> following behavior :
>>>> - free version will be able to run recommended packages and graphics are
>>>> not enabled. A small ad banner is present on top of the app.
>>>> - premium version will be the same as the free version except the ad banner
>>>> will not be present anymore and 3 compilers will be integrated into the app
>>>> in order to be able to compile and run most of the Cran packages from
>>>> source.
>>>> - graphics may be added in a second step.
>>>> 
>>>> The app will be considered as a bundle of open-source tools. This bundle
>>>> will be under the Gnu General Public Licence version 3. Each open-source
>>>> tool which contributes to the overall bundle will stay in its original
>>>> licence (R is GPL v2 for instance) but the bundle will be GPL v3.
>>>> 
>>>> 
>>>>> From your point of view, do you see any legal issue with this project under
>>>> Cydia for jailbroken iOS devices?
>>>>> From a trademark point of view, is the name of the apps "R Console Free"
>>>> and "R Console Premium" ok ?
>>>> 
>>>> Thanks for your help.
>>>> 
>>>> Apps Embedded Team.
>> 
> 


From apps.embedded at gmail.com  Wed Dec 10 00:39:20 2014
From: apps.embedded at gmail.com (Apps Embedded)
Date: Wed, 10 Dec 2014 00:39:20 +0100
Subject: [Rd] R on the Cydia Store
In-Reply-To: <0F09E623-6430-49AE-91A4-1AEF81411EEA@me.com>
References: <CAO=GJvzj8kRtmVAaQLn5kPsajMtD3rRQai5e2ZC=MWDS7NY_Yw@mail.gmail.com>
	<CAFDcVCSXTd1YOFL3QKK2X=5=RWVGzWFOLbe1QixiZE03a_8TVA@mail.gmail.com>
	<6E3F8BD3-FD1C-4A78-84E6-E17FD1381190@me.com>
	<54876AC8.9010603@gmail.com>
	<0F09E623-6430-49AE-91A4-1AEF81411EEA@me.com>
Message-ID: <CAO=GJvyUjzT3+EGHqGQPwfmW_JOmUQE2uy=5ppEqmqBzgw00Pg@mail.gmail.com>

Hi,

Thanks for your first answers.

So, should we contact the R foundation team members to inform them of our
project on the Android platform and on the Cydia Store ?
If yes, could you give us their email please ? Or should we write to the
president of the R foundation for instance ?

Best regards.

Apps Embedded Team.


2014-12-09 23:49 GMT+01:00 Marc Schwartz <marc_schwartz at me.com>:

>
> > On Dec 9, 2014, at 3:34 PM, Duncan Murdoch <murdoch.duncan at gmail.com>
> wrote:
> >
> > On 09/12/2014, 4:26 PM, Marc Schwartz wrote:
> >>
> >>> On Dec 9, 2014, at 10:44 AM, Henrik Bengtsson <hb at biostat.ucsf.edu>
> wrote:
> >>>
> >>> On Dec 9, 2014 6:38 AM, "Apps Embedded" <apps.embedded at gmail.com>
> wrote:
> >>>>
> >>>> Hi,
> >>>>
> >>>> We have published an Android app called R Console on the Play Store
> since
> >>>> D?cember 2013.
> >>>> https://play.google.com/store/apps/details?id=com.appsopensource.R
> >>>>
> https://play.google.com/store/apps/details?id=com.appsopensource.Rpremium
> >>>>
> >>>> In the mean time, we have developped its equivalent app for the App
> Store.
> >>>> We released it on march 2014. We have been approved from this date by
> Apple
> >>>> to publish it world wide.
> >>>> Recently, we learnt that GPL app are not compatible with the App Store
> >>>> distribution licence.
> >>>
> >>> What I would like to write here, would fall under "this is certainly
> >>> not a topic for R devel", so I refrain.
> >>>
> >>> However, I can say that it's likely your problems wouldn't have
> stopped there;
> >>>
> >>> [R] R on the iPhone/iPad? Not so much....a GPL violation
> >>> https://stat.ethz.ch/pipermail/r-help/2010-June/240901.html
> >>>
> >>> /Henrik
> >>
> >> Hi,
> >>
> >> I might add that, given the intentions expressed below, in terms of
> doing this on a jailbroken iOS device via Cydia, the concerns raised in the
> Apple iOS SDK, that I referenced in the above linked post from 2010,
> essentially go away.
> >>
> >> They would still be germane, as may now be expressed in the current
> SDK, including the use of the new Swift language, if the OP's intent was to
> pursue this via official AppStore channels and am surprised that it was
> approved by Apple previously given the indicated content and functionality
> of the app.
> >>
> >> The primary intention of jailbreaking an iOS device is, of course, to
> circumvent Apple's restrictions on the software that can be installed by
> using third party distribution channels and in the tools that can be used
> to develop apps.
> >>
> >> That being said, the licensing issues, as Duncan raised in his reply,
> are still germane and permission from the R Foundation should be sought for
> any uses involving R Foundation copyrighted content. That would be relevant
> for both the iOS implementation and the Android implementation.
> >
> > Just to be clear:  everybody already has permission from the R copyright
> > holders to use R within the existing licenses.  There's no need to seek
> > extra permission for that.
> >
> > Trademarks are different...
> >
> > Duncan Murdoch
>
>
> Thanks for the clarification Duncan, I was imprecise in my language.
>
> Regards,
>
> Marc
>
>
> >
> >> Regards,
> >>
> >> Marc Schwartz
> >>
> >> P.S. I echo's Duncan's comment, in that I am also a member of the R
> Foundation, but am not speaking here on it's behalf.
> >>
> >>
> >>>
> >>>>
> >>>> Thus we decided to remove the iOS app from the App Store several days
> ago.
> >>>>
> >>>> We are thinking of publishing the same app published under Cydia with
> a
> >>>> freemium model.
> >>>> Its licence would be GPL v3.
> >>>>
> >>>> What we would like to do under Cydia with R Console is to have the
> >>>> following behavior :
> >>>> - free version will be able to run recommended packages and graphics
> are
> >>>> not enabled. A small ad banner is present on top of the app.
> >>>> - premium version will be the same as the free version except the ad
> banner
> >>>> will not be present anymore and 3 compilers will be integrated into
> the app
> >>>> in order to be able to compile and run most of the Cran packages from
> >>>> source.
> >>>> - graphics may be added in a second step.
> >>>>
> >>>> The app will be considered as a bundle of open-source tools. This
> bundle
> >>>> will be under the Gnu General Public Licence version 3. Each
> open-source
> >>>> tool which contributes to the overall bundle will stay in its original
> >>>> licence (R is GPL v2 for instance) but the bundle will be GPL v3.
> >>>>
> >>>>
> >>>>> From your point of view, do you see any legal issue with this
> project under
> >>>> Cydia for jailbroken iOS devices?
> >>>>> From a trademark point of view, is the name of the apps "R Console
> Free"
> >>>> and "R Console Premium" ok ?
> >>>>
> >>>> Thanks for your help.
> >>>>
> >>>> Apps Embedded Team.
> >>
> >
>
>

	[[alternative HTML version deleted]]


From marc_schwartz at me.com  Wed Dec 10 01:31:13 2014
From: marc_schwartz at me.com (Marc Schwartz)
Date: Tue, 09 Dec 2014 18:31:13 -0600
Subject: [Rd] R on the Cydia Store
In-Reply-To: <CAO=GJvyUjzT3+EGHqGQPwfmW_JOmUQE2uy=5ppEqmqBzgw00Pg@mail.gmail.com>
References: <CAO=GJvzj8kRtmVAaQLn5kPsajMtD3rRQai5e2ZC=MWDS7NY_Yw@mail.gmail.com>
	<CAFDcVCSXTd1YOFL3QKK2X=5=RWVGzWFOLbe1QixiZE03a_8TVA@mail.gmail.com>
	<6E3F8BD3-FD1C-4A78-84E6-E17FD1381190@me.com>
	<54876AC8.9010603@gmail.com>
	<0F09E623-6430-49AE-91A4-1AEF81411EEA@me.com>
	<CAO=GJvyUjzT3+EGHqGQPwfmW_JOmUQE2uy=5ppEqmqBzgw00Pg@mail.gmail.com>
Message-ID: <F4F69CCF-AFD2-4C95-B150-2A86AE504FFF@me.com>

Hi,

I would send an introductory e-mail to:

  R-foundation at R-project.org <mailto:R-foundation at R-project.org>

That will facilitate further discussion on the matter and additional details can be requested offline as may be needed.

Be aware that none of the R Foundation members are lawyers. So while we can perhaps offer informal and non-binding opinions, you should seek formal legal guidance from counsel specifically familiar with open source licensing regarding your obligations in that domain.

Finally, it would be helpful and courteous to know at least a primary contact full name for your group, as opposed to the Team moniker.

Regards,

Marc


> On Dec 9, 2014, at 5:39 PM, Apps Embedded <apps.embedded at gmail.com> wrote:
> 
> Hi,
> 
> Thanks for your first answers.
> 
> So, should we contact the R foundation team members to inform them of our project on the Android platform and on the Cydia Store ?
> If yes, could you give us their email please ? Or should we write to the president of the R foundation for instance ? 
> 
> Best regards.
> 
> Apps Embedded Team.
> 
> 
> 2014-12-09 23:49 GMT+01:00 Marc Schwartz <marc_schwartz at me.com <mailto:marc_schwartz at me.com>>:
> 
> > On Dec 9, 2014, at 3:34 PM, Duncan Murdoch <murdoch.duncan at gmail.com <mailto:murdoch.duncan at gmail.com>> wrote:
> >
> > On 09/12/2014, 4:26 PM, Marc Schwartz wrote:
> >>
> >>> On Dec 9, 2014, at 10:44 AM, Henrik Bengtsson <hb at biostat.ucsf.edu <mailto:hb at biostat.ucsf.edu>> wrote:
> >>>
> >>> On Dec 9, 2014 6:38 AM, "Apps Embedded" <apps.embedded at gmail.com <mailto:apps.embedded at gmail.com>> wrote:
> >>>>
> >>>> Hi,
> >>>>
> >>>> We have published an Android app called R Console on the Play Store since
> >>>> D?cember 2013.
> >>>> https://play.google.com/store/apps/details?id=com.appsopensource.R <https://play.google.com/store/apps/details?id=com.appsopensource.R>
> >>>> https://play.google.com/store/apps/details?id=com.appsopensource.Rpremium <https://play.google.com/store/apps/details?id=com.appsopensource.Rpremium>
> >>>>
> >>>> In the mean time, we have developped its equivalent app for the App Store.
> >>>> We released it on march 2014. We have been approved from this date by Apple
> >>>> to publish it world wide.
> >>>> Recently, we learnt that GPL app are not compatible with the App Store
> >>>> distribution licence.
> >>>
> >>> What I would like to write here, would fall under "this is certainly
> >>> not a topic for R devel", so I refrain.
> >>>
> >>> However, I can say that it's likely your problems wouldn't have stopped there;
> >>>
> >>> [R] R on the iPhone/iPad? Not so much....a GPL violation
> >>> https://stat.ethz.ch/pipermail/r-help/2010-June/240901.html <https://stat.ethz.ch/pipermail/r-help/2010-June/240901.html>
> >>>
> >>> /Henrik
> >>
> >> Hi,
> >>
> >> I might add that, given the intentions expressed below, in terms of doing this on a jailbroken iOS device via Cydia, the concerns raised in the Apple iOS SDK, that I referenced in the above linked post from 2010, essentially go away.
> >>
> >> They would still be germane, as may now be expressed in the current SDK, including the use of the new Swift language, if the OP's intent was to pursue this via official AppStore channels and am surprised that it was approved by Apple previously given the indicated content and functionality of the app.
> >>
> >> The primary intention of jailbreaking an iOS device is, of course, to circumvent Apple's restrictions on the software that can be installed by using third party distribution channels and in the tools that can be used to develop apps.
> >>
> >> That being said, the licensing issues, as Duncan raised in his reply, are still germane and permission from the R Foundation should be sought for any uses involving R Foundation copyrighted content. That would be relevant for both the iOS implementation and the Android implementation.
> >
> > Just to be clear:  everybody already has permission from the R copyright
> > holders to use R within the existing licenses.  There's no need to seek
> > extra permission for that.
> >
> > Trademarks are different...
> >
> > Duncan Murdoch
> 
> 
> Thanks for the clarification Duncan, I was imprecise in my language.
> 
> Regards,
> 
> Marc
> 
> 
> >
> >> Regards,
> >>
> >> Marc Schwartz
> >>
> >> P.S. I echo's Duncan's comment, in that I am also a member of the R Foundation, but am not speaking here on it's behalf.
> >>
> >>
> >>>
> >>>>
> >>>> Thus we decided to remove the iOS app from the App Store several days ago.
> >>>>
> >>>> We are thinking of publishing the same app published under Cydia with a
> >>>> freemium model.
> >>>> Its licence would be GPL v3.
> >>>>
> >>>> What we would like to do under Cydia with R Console is to have the
> >>>> following behavior :
> >>>> - free version will be able to run recommended packages and graphics are
> >>>> not enabled. A small ad banner is present on top of the app.
> >>>> - premium version will be the same as the free version except the ad banner
> >>>> will not be present anymore and 3 compilers will be integrated into the app
> >>>> in order to be able to compile and run most of the Cran packages from
> >>>> source.
> >>>> - graphics may be added in a second step.
> >>>>
> >>>> The app will be considered as a bundle of open-source tools. This bundle
> >>>> will be under the Gnu General Public Licence version 3. Each open-source
> >>>> tool which contributes to the overall bundle will stay in its original
> >>>> licence (R is GPL v2 for instance) but the bundle will be GPL v3.
> >>>>
> >>>>
> >>>>> From your point of view, do you see any legal issue with this project under
> >>>> Cydia for jailbroken iOS devices?
> >>>>> From a trademark point of view, is the name of the apps "R Console Free"
> >>>> and "R Console Premium" ok ?
> >>>>
> >>>> Thanks for your help.
> >>>>
> >>>> Apps Embedded Team.
> >>
> >
> 
> 


	[[alternative HTML version deleted]]


From xie at yihui.name  Wed Dec 10 04:36:59 2014
From: xie at yihui.name (Yihui Xie)
Date: Tue, 9 Dec 2014 21:36:59 -0600
Subject: [Rd] UTF8 markdown vignette
In-Reply-To: <54876CBE.9020207@gmail.com>
References: <AA818EAD2576BC488B4F623941DA7427F3C7D1D8@inbomail.inbo.be>
	<5486C91E.90409@gmail.com>
	<AA818EAD2576BC488B4F623941DA7427F3C7D24C@inbomail.inbo.be>
	<5486F3B2.6060507@gmail.com>
	<CANROs4eKia1xaZrTH47tTiuL40eGW11Yrociqt5-rVcwJU0WGA@mail.gmail.com>
	<AA818EAD2576BC488B4F623941DA7427F3C7DFD4@inbomail.inbo.be>
	<54876CBE.9020207@gmail.com>
Message-ID: <CANROs4ff+oo7rpVDL2f6+edxpd6k69TWuEchrk3y277RcRpteQ@mail.gmail.com>

I took a look at the R source and I realized that the encoding was
actually never passed to the vignette engine:
https://github.com/wch/r-source/blob/e721ef5f4/src/library/tools/R/Vignettes.R#L507
Apparently only the file and quiet arguments are passed to the
vignette engine. Did I miss anything?

To Thierry: I explicitly asked for library(rmarkdown);sessionInfo(),
but you only told me the version of rmarkdown, which is not the only
thing I was asking for. It is extremely important in this case to know
the versions of other packages as well as your system locale
information.

Regards,
Yihui
--
Yihui Xie <xieyihui at gmail.com>
Web: http://yihui.name


On Tue, Dec 9, 2014 at 3:42 PM, Duncan Murdoch <murdoch.duncan at gmail.com> wrote:
> On 09/12/2014, 4:38 PM, ONKELINX, Thierry wrote:
>> Dear Yihui,
>>
>> I have created a reproducible example at https://github.com/ThierryO/utf8vignette
>>
>> The \usepackage{} line is needed, otherwise R CMD check --as-cran will give a warning.
>> %\VignetteEncoding{UTF-8} did not solve the problem.
>
> I've just taken a look at the sources, and that's only in R-devel, it
> never got backported to R-patched so it isn't in the release R.  You
> would need to use
>
> %\SweaveUTF8
>
> instead.  (It was introduced in 3.1.0, and should be kept until at least
> 3.2.0, but \VignetteEncoding will be preferred in the long run.  It
> should make it into 3.1.3 unless we drop the ball again.)
>
> Duncan Murdoch
>
>>
>> I use rmarkdown_0.3.11
>>
>> HTML vignette is not an option as the vignette demonstrates the use of a custom beamer output format.
>>
>> Best regards,
>>
>> Thierry
>> ________________________________________
>> Van: xieyihui at gmail.com [xieyihui at gmail.com] namens Yihui Xie [xie at yihui.name]
>> Verzonden: dinsdag 9 december 2014 17:13
>> Aan: ONKELINX, Thierry
>> CC: r-devel at r-project.org; Duncan Murdoch; Kurt Hornik
>> Onderwerp: Re: [Rd] UTF8 markdown vignette
>>
>>
>> Lastly, the most important piece of information is missing in this
>> post: library(rmarkdown); sessionInfo(). There is not a minimal
>> reproducible example, either. Without these information, I can only
>> guess blindly.


From Thierry.ONKELINX at inbo.be  Wed Dec 10 09:32:20 2014
From: Thierry.ONKELINX at inbo.be (ONKELINX, Thierry)
Date: Wed, 10 Dec 2014 08:32:20 +0000
Subject: [Rd] UTF8 markdown vignette
In-Reply-To: <CANROs4ff+oo7rpVDL2f6+edxpd6k69TWuEchrk3y277RcRpteQ@mail.gmail.com>
References: <AA818EAD2576BC488B4F623941DA7427F3C7D1D8@inbomail.inbo.be>
	<5486C91E.90409@gmail.com>
	<AA818EAD2576BC488B4F623941DA7427F3C7D24C@inbomail.inbo.be>
	<5486F3B2.6060507@gmail.com>
	<CANROs4eKia1xaZrTH47tTiuL40eGW11Yrociqt5-rVcwJU0WGA@mail.gmail.com>
	<AA818EAD2576BC488B4F623941DA7427F3C7DFD4@inbomail.inbo.be>
	<54876CBE.9020207@gmail.com>
	<CANROs4ff+oo7rpVDL2f6+edxpd6k69TWuEchrk3y277RcRpteQ@mail.gmail.com>
Message-ID: <AA818EAD2576BC488B4F623941DA7427F3C80998@inbomail.inbo.be>

Dear Yihui and Duncan,

Using \%SweaveUTF8 does not solve the problem. The nice thing about it, it that it no longer requires \usepackage[utf8]{} to make R CMD check --as-cran happy.

To Yihui: here is the sessionInfo().

> library(rmarkdown)
> sessionInfo()
R version 3.1.2 (2014-10-31)
Platform: x86_64-w64-mingw32/x64 (64-bit)

locale:
[1] LC_COLLATE=Dutch_Belgium.1252  LC_CTYPE=Dutch_Belgium.1252    LC_MONETARY=Dutch_Belgium.1252 LC_NUMERIC=C
[5] LC_TIME=Dutch_Belgium.1252

attached base packages:
[1] stats     graphics  grDevices utils     datasets  methods   base

other attached packages:
[1] rmarkdown_0.3.11

loaded via a namespace (and not attached):
[1] digest_0.6.4    fortunes_1.5-2  htmltools_0.2.6 tools_3.1.2

Best regards,

Thierry

ir. Thierry Onkelinx
Instituut voor natuur- en bosonderzoek / Research Institute for Nature and Forest
team Biometrie & Kwaliteitszorg / team Biometrics & Quality Assurance
Kliniekstraat 25
1070 Anderlecht
Belgium
+ 32 2 525 02 51
+ 32 54 43 61 85
Thierry.Onkelinx at inbo.be
www.inbo.be

To call in the statistician after the experiment is done may be no more than asking him to perform a post-mortem examination: he may be able to say what the experiment died of.
~ Sir Ronald Aylmer Fisher

The plural of anecdote is not data.
~ Roger Brinner

The combination of some data and an aching desire for an answer does not ensure that a reasonable answer can be extracted from a given body of data.
~ John Tukey

-----Oorspronkelijk bericht-----
Van: xieyihui at gmail.com [mailto:xieyihui at gmail.com] Namens Yihui Xie
Verzonden: woensdag 10 december 2014 4:37
Aan: Duncan Murdoch
CC: ONKELINX, Thierry; r-devel at r-project.org; Kurt Hornik
Onderwerp: Re: [Rd] UTF8 markdown vignette

I took a look at the R source and I realized that the encoding was actually never passed to the vignette engine:
https://github.com/wch/r-source/blob/e721ef5f4/src/library/tools/R/Vignettes.R#L507
Apparently only the file and quiet arguments are passed to the vignette engine. Did I miss anything?

To Thierry: I explicitly asked for library(rmarkdown);sessionInfo(), but you only told me the version of rmarkdown, which is not the only thing I was asking for. It is extremely important in this case to know the versions of other packages as well as your system locale information.

Regards,
Yihui
--
Yihui Xie <xieyihui at gmail.com>
Web: http://yihui.name


On Tue, Dec 9, 2014 at 3:42 PM, Duncan Murdoch <murdoch.duncan at gmail.com> wrote:
> On 09/12/2014, 4:38 PM, ONKELINX, Thierry wrote:
>> Dear Yihui,
>>
>> I have created a reproducible example at
>> https://github.com/ThierryO/utf8vignette
>>
>> The \usepackage{} line is needed, otherwise R CMD check --as-cran will give a warning.
>> %\VignetteEncoding{UTF-8} did not solve the problem.
>
> I've just taken a look at the sources, and that's only in R-devel, it
> never got backported to R-patched so it isn't in the release R.  You
> would need to use
>
> %\SweaveUTF8
>
> instead.  (It was introduced in 3.1.0, and should be kept until at
> least 3.2.0, but \VignetteEncoding will be preferred in the long run.
> It should make it into 3.1.3 unless we drop the ball again.)
>
> Duncan Murdoch
>
>>
>> I use rmarkdown_0.3.11
>>
>> HTML vignette is not an option as the vignette demonstrates the use of a custom beamer output format.
>>
>> Best regards,
>>
>> Thierry
>> ________________________________________
>> Van: xieyihui at gmail.com [xieyihui at gmail.com] namens Yihui Xie
>> [xie at yihui.name]
>> Verzonden: dinsdag 9 december 2014 17:13
>> Aan: ONKELINX, Thierry
>> CC: r-devel at r-project.org; Duncan Murdoch; Kurt Hornik
>> Onderwerp: Re: [Rd] UTF8 markdown vignette
>>
>>
>> Lastly, the most important piece of information is missing in this
>> post: library(rmarkdown); sessionInfo(). There is not a minimal
>> reproducible example, either. Without these information, I can only
>> guess blindly.
Disclaimer Bezoek onze website / Visit our website<https://drupal.inbo.be/nl/disclaimer-mailberichten-van-het-inbo>

From brian at braverock.com  Wed Dec 10 11:34:25 2014
From: brian at braverock.com (Brian G. Peterson)
Date: Wed, 10 Dec 2014 04:34:25 -0600
Subject: [Rd] R on the Cydia Store
In-Reply-To: <F4F69CCF-AFD2-4C95-B150-2A86AE504FFF@me.com>
References: <CAO=GJvzj8kRtmVAaQLn5kPsajMtD3rRQai5e2ZC=MWDS7NY_Yw@mail.gmail.com>	<CAFDcVCSXTd1YOFL3QKK2X=5=RWVGzWFOLbe1QixiZE03a_8TVA@mail.gmail.com>	<6E3F8BD3-FD1C-4A78-84E6-E17FD1381190@me.com>	<54876AC8.9010603@gmail.com>	<0F09E623-6430-49AE-91A4-1AEF81411EEA@me.com>	<CAO=GJvyUjzT3+EGHqGQPwfmW_JOmUQE2uy=5ppEqmqBzgw00Pg@mail.gmail.com>
	<F4F69CCF-AFD2-4C95-B150-2A86AE504FFF@me.com>
Message-ID: <548821B1.5060107@braverock.com>

In the event that a lawyer is consulted, I would suggest finding one 
with real experience in open source law.  In my experience, even most 
intellectual property or software attorneys have little to no experience 
with open source law, and I've heard the most dreadful and incorrect 
utterances from them on the topic of open source licenses.

Duncan is correct that parts of R may be incompatible with GPL-3, and 
that is a matter for an attorney.

I installed the premium version of the Android application this morning.

It appears to contain the required license statement (though whether 
that license is valid I cannot say, as discussed in this thread).  It 
also contains a link to:

https://code.google.com/p/rconsoleapp/

The development team is not listed here either, just 'Apps Embedded' and 
more similar redirection.  If these are legal entities, and proper 
copyright assignments have been done for the 'app collection', this may 
be fine, but it is rather outside the spirit of most open source projects.

The code is also not actually available at the link above.  What is 
available is an external link to Google Drive, where a 34 MB tarball of 
different tarballs exists, in a single archive.  Again, consistent with 
most open source projects, perhaps one of the several source code 
management tools provided by code.google.com could be used to create a 
source code repository which could be accessed by other open source 
developers, and examined more easily than the tarball.

It's not clear that anything obvious has been done outside the letter of 
the GPL.  It is also not clear than any improper use has been made of R 
Foundation trademarks (such as the R logo).

If a lawyer is consulted, one way to find  such a lawyer would be to 
start with someone at the Software Freedom Conservancy:

https://sfconservancy.org/

They have contacts with attorneys with experience in GPL licensing and 
commercialization, in multiple countries.

Regards,

Brian

On 12/09/2014 06:31 PM, Marc Schwartz wrote:
> Hi,
>
> I would send an introductory e-mail to:
>
>    R-foundation at R-project.org <mailto:R-foundation at R-project.org>
>
> That will facilitate further discussion on the matter and additional details can be requested offline as may be needed.
>
> Be aware that none of the R Foundation members are lawyers. So while we can perhaps offer informal and non-binding opinions, you should seek formal legal guidance from counsel specifically familiar with open source licensing regarding your obligations in that domain.
>
> Finally, it would be helpful and courteous to know at least a primary contact full name for your group, as opposed to the Team moniker.
>
> Regards,
>
> Marc
>
>
>> On Dec 9, 2014, at 5:39 PM, Apps Embedded <apps.embedded at gmail.com> wrote:
>>
>> Hi,
>>
>> Thanks for your first answers.
>>
>> So, should we contact the R foundation team members to inform them of our project on the Android platform and on the Cydia Store ?
>> If yes, could you give us their email please ? Or should we write to the president of the R foundation for instance ?
>>
>> Best regards.
>>
>> Apps Embedded Team.
>>
>>
>> 2014-12-09 23:49 GMT+01:00 Marc Schwartz <marc_schwartz at me.com <mailto:marc_schwartz at me.com>>:
>>
>>> On Dec 9, 2014, at 3:34 PM, Duncan Murdoch <murdoch.duncan at gmail.com <mailto:murdoch.duncan at gmail.com>> wrote:
>>>
>>> On 09/12/2014, 4:26 PM, Marc Schwartz wrote:
>>>>
>>>>> On Dec 9, 2014, at 10:44 AM, Henrik Bengtsson <hb at biostat.ucsf.edu <mailto:hb at biostat.ucsf.edu>> wrote:
>>>>>
>>>>> On Dec 9, 2014 6:38 AM, "Apps Embedded" <apps.embedded at gmail.com <mailto:apps.embedded at gmail.com>> wrote:
>>>>>>
>>>>>> Hi,
>>>>>>
>>>>>> We have published an Android app called R Console on the Play Store since
>>>>>> D?cember 2013.
>>>>>> https://play.google.com/store/apps/details?id=com.appsopensource.R <https://play.google.com/store/apps/details?id=com.appsopensource.R>
>>>>>> https://play.google.com/store/apps/details?id=com.appsopensource.Rpremium <https://play.google.com/store/apps/details?id=com.appsopensource.Rpremium>
>>>>>>
>>>>>> In the mean time, we have developped its equivalent app for the App Store.
>>>>>> We released it on march 2014. We have been approved from this date by Apple
>>>>>> to publish it world wide.
>>>>>> Recently, we learnt that GPL app are not compatible with the App Store
>>>>>> distribution licence.
>>>>>
>>>>> What I would like to write here, would fall under "this is certainly
>>>>> not a topic for R devel", so I refrain.
>>>>>
>>>>> However, I can say that it's likely your problems wouldn't have stopped there;
>>>>>
>>>>> [R] R on the iPhone/iPad? Not so much....a GPL violation
>>>>> https://stat.ethz.ch/pipermail/r-help/2010-June/240901.html <https://stat.ethz.ch/pipermail/r-help/2010-June/240901.html>
>>>>>
>>>>> /Henrik
>>>>
>>>> Hi,
>>>>
>>>> I might add that, given the intentions expressed below, in terms of doing this on a jailbroken iOS device via Cydia, the concerns raised in the Apple iOS SDK, that I referenced in the above linked post from 2010, essentially go away.
>>>>
>>>> They would still be germane, as may now be expressed in the current SDK, including the use of the new Swift language, if the OP's intent was to pursue this via official AppStore channels and am surprised that it was approved by Apple previously given the indicated content and functionality of the app.
>>>>
>>>> The primary intention of jailbreaking an iOS device is, of course, to circumvent Apple's restrictions on the software that can be installed by using third party distribution channels and in the tools that can be used to develop apps.
>>>>
>>>> That being said, the licensing issues, as Duncan raised in his reply, are still germane and permission from the R Foundation should be sought for any uses involving R Foundation copyrighted content. That would be relevant for both the iOS implementation and the Android implementation.
>>>
>>> Just to be clear:  everybody already has permission from the R copyright
>>> holders to use R within the existing licenses.  There's no need to seek
>>> extra permission for that.
>>>
>>> Trademarks are different...
>>>
>>> Duncan Murdoch
>>
>>
>> Thanks for the clarification Duncan, I was imprecise in my language.
>>
>> Regards,
>>
>> Marc
>>
>>
>>>
>>>> Regards,
>>>>
>>>> Marc Schwartz
>>>>
>>>> P.S. I echo's Duncan's comment, in that I am also a member of the R Foundation, but am not speaking here on it's behalf.
>>>>
>>>>
>>>>>
>>>>>>
>>>>>> Thus we decided to remove the iOS app from the App Store several days ago.
>>>>>>
>>>>>> We are thinking of publishing the same app published under Cydia with a
>>>>>> freemium model.
>>>>>> Its licence would be GPL v3.
>>>>>>
>>>>>> What we would like to do under Cydia with R Console is to have the
>>>>>> following behavior :
>>>>>> - free version will be able to run recommended packages and graphics are
>>>>>> not enabled. A small ad banner is present on top of the app.
>>>>>> - premium version will be the same as the free version except the ad banner
>>>>>> will not be present anymore and 3 compilers will be integrated into the app
>>>>>> in order to be able to compile and run most of the Cran packages from
>>>>>> source.
>>>>>> - graphics may be added in a second step.
>>>>>>
>>>>>> The app will be considered as a bundle of open-source tools. This bundle
>>>>>> will be under the Gnu General Public Licence version 3. Each open-source
>>>>>> tool which contributes to the overall bundle will stay in its original
>>>>>> licence (R is GPL v2 for instance) but the bundle will be GPL v3.
>>>>>>
>>>>>>
>>>>>>>  From your point of view, do you see any legal issue with this project under
>>>>>> Cydia for jailbroken iOS devices?
>>>>>>>  From a trademark point of view, is the name of the apps "R Console Free"
>>>>>> and "R Console Premium" ok ?
>>>>>>
>>>>>> Thanks for your help.
>>>>>>
>>>>>> Apps Embedded Team.
>>>>


From apps.embedded at gmail.com  Wed Dec 10 13:18:40 2014
From: apps.embedded at gmail.com (Apps Embedded)
Date: Wed, 10 Dec 2014 13:18:40 +0100
Subject: [Rd] R on the Cydia Store
In-Reply-To: <548821B1.5060107@braverock.com>
References: <CAO=GJvzj8kRtmVAaQLn5kPsajMtD3rRQai5e2ZC=MWDS7NY_Yw@mail.gmail.com>
	<CAFDcVCSXTd1YOFL3QKK2X=5=RWVGzWFOLbe1QixiZE03a_8TVA@mail.gmail.com>
	<6E3F8BD3-FD1C-4A78-84E6-E17FD1381190@me.com>
	<54876AC8.9010603@gmail.com>
	<0F09E623-6430-49AE-91A4-1AEF81411EEA@me.com>
	<CAO=GJvyUjzT3+EGHqGQPwfmW_JOmUQE2uy=5ppEqmqBzgw00Pg@mail.gmail.com>
	<F4F69CCF-AFD2-4C95-B150-2A86AE504FFF@me.com>
	<548821B1.5060107@braverock.com>
Message-ID: <CAO=GJvyOp2f0YkipDF=44DBE7_X0v1kciVn7Wui_4MaRAq=ySA@mail.gmail.com>

Hi,

Thanks for your remarks.
We have sent an e-mail to the R-foundation at R-project.org this morning to
introduce ourself and our work to the R foundation.

>From your advices, we are going to :
- create an open source git repository for this whole project instead of
giving a source tarball
- contact the Software Freedom Conservancy for :
    - the licencing validation
    - the trademark point of view
    - the copyright remark
- limit our work to the Android Play Store.

Best regards.

Apps Embedded Team.



2014-12-10 11:34 GMT+01:00 Brian G. Peterson <brian at braverock.com>:

> In the event that a lawyer is consulted, I would suggest finding one with
> real experience in open source law.  In my experience, even most
> intellectual property or software attorneys have little to no experience
> with open source law, and I've heard the most dreadful and incorrect
> utterances from them on the topic of open source licenses.
>
> Duncan is correct that parts of R may be incompatible with GPL-3, and that
> is a matter for an attorney.
>
> I installed the premium version of the Android application this morning.
>
> It appears to contain the required license statement (though whether that
> license is valid I cannot say, as discussed in this thread).  It also
> contains a link to:
>
> https://code.google.com/p/rconsoleapp/
>
> The development team is not listed here either, just 'Apps Embedded' and
> more similar redirection.  If these are legal entities, and proper
> copyright assignments have been done for the 'app collection', this may be
> fine, but it is rather outside the spirit of most open source projects.
>
> The code is also not actually available at the link above.  What is
> available is an external link to Google Drive, where a 34 MB tarball of
> different tarballs exists, in a single archive.  Again, consistent with
> most open source projects, perhaps one of the several source code
> management tools provided by code.google.com could be used to create a
> source code repository which could be accessed by other open source
> developers, and examined more easily than the tarball.
>
> It's not clear that anything obvious has been done outside the letter of
> the GPL.  It is also not clear than any improper use has been made of R
> Foundation trademarks (such as the R logo).
>
> If a lawyer is consulted, one way to find  such a lawyer would be to start
> with someone at the Software Freedom Conservancy:
>
> https://sfconservancy.org/
>
> They have contacts with attorneys with experience in GPL licensing and
> commercialization, in multiple countries.
>
> Regards,
>
> Brian
>
> On 12/09/2014 06:31 PM, Marc Schwartz wrote:
>
>> Hi,
>>
>> I would send an introductory e-mail to:
>>
>>    R-foundation at R-project.org <mailto:R-foundation at R-project.org>
>>
>> That will facilitate further discussion on the matter and additional
>> details can be requested offline as may be needed.
>>
>> Be aware that none of the R Foundation members are lawyers. So while we
>> can perhaps offer informal and non-binding opinions, you should seek formal
>> legal guidance from counsel specifically familiar with open source
>> licensing regarding your obligations in that domain.
>>
>> Finally, it would be helpful and courteous to know at least a primary
>> contact full name for your group, as opposed to the Team moniker.
>>
>> Regards,
>>
>> Marc
>>
>>
>>  On Dec 9, 2014, at 5:39 PM, Apps Embedded <apps.embedded at gmail.com>
>>> wrote:
>>>
>>> Hi,
>>>
>>> Thanks for your first answers.
>>>
>>> So, should we contact the R foundation team members to inform them of
>>> our project on the Android platform and on the Cydia Store ?
>>> If yes, could you give us their email please ? Or should we write to the
>>> president of the R foundation for instance ?
>>>
>>> Best regards.
>>>
>>> Apps Embedded Team.
>>>
>>>
>>> 2014-12-09 23:49 GMT+01:00 Marc Schwartz <marc_schwartz at me.com <mailto:
>>> marc_schwartz at me.com>>:
>>>
>>>  On Dec 9, 2014, at 3:34 PM, Duncan Murdoch <murdoch.duncan at gmail.com
>>>> <mailto:murdoch.duncan at gmail.com>> wrote:
>>>>
>>>> On 09/12/2014, 4:26 PM, Marc Schwartz wrote:
>>>>
>>>>>
>>>>>  On Dec 9, 2014, at 10:44 AM, Henrik Bengtsson <hb at biostat.ucsf.edu
>>>>>> <mailto:hb at biostat.ucsf.edu>> wrote:
>>>>>>
>>>>>> On Dec 9, 2014 6:38 AM, "Apps Embedded" <apps.embedded at gmail.com
>>>>>> <mailto:apps.embedded at gmail.com>> wrote:
>>>>>>
>>>>>>>
>>>>>>> Hi,
>>>>>>>
>>>>>>> We have published an Android app called R Console on the Play Store
>>>>>>> since
>>>>>>> D?cember 2013.
>>>>>>> https://play.google.com/store/apps/details?id=com.appsopensource.R <
>>>>>>> https://play.google.com/store/apps/details?id=com.appsopensource.R>
>>>>>>> https://play.google.com/store/apps/details?id=com.
>>>>>>> appsopensource.Rpremium <https://play.google.com/
>>>>>>> store/apps/details?id=com.appsopensource.Rpremium>
>>>>>>>
>>>>>>> In the mean time, we have developped its equivalent app for the App
>>>>>>> Store.
>>>>>>> We released it on march 2014. We have been approved from this date
>>>>>>> by Apple
>>>>>>> to publish it world wide.
>>>>>>> Recently, we learnt that GPL app are not compatible with the App
>>>>>>> Store
>>>>>>> distribution licence.
>>>>>>>
>>>>>>
>>>>>> What I would like to write here, would fall under "this is certainly
>>>>>> not a topic for R devel", so I refrain.
>>>>>>
>>>>>> However, I can say that it's likely your problems wouldn't have
>>>>>> stopped there;
>>>>>>
>>>>>> [R] R on the iPhone/iPad? Not so much....a GPL violation
>>>>>> https://stat.ethz.ch/pipermail/r-help/2010-June/240901.html <
>>>>>> https://stat.ethz.ch/pipermail/r-help/2010-June/240901.html>
>>>>>>
>>>>>> /Henrik
>>>>>>
>>>>>
>>>>> Hi,
>>>>>
>>>>> I might add that, given the intentions expressed below, in terms of
>>>>> doing this on a jailbroken iOS device via Cydia, the concerns raised in the
>>>>> Apple iOS SDK, that I referenced in the above linked post from 2010,
>>>>> essentially go away.
>>>>>
>>>>> They would still be germane, as may now be expressed in the current
>>>>> SDK, including the use of the new Swift language, if the OP's intent was to
>>>>> pursue this via official AppStore channels and am surprised that it was
>>>>> approved by Apple previously given the indicated content and functionality
>>>>> of the app.
>>>>>
>>>>> The primary intention of jailbreaking an iOS device is, of course, to
>>>>> circumvent Apple's restrictions on the software that can be installed by
>>>>> using third party distribution channels and in the tools that can be used
>>>>> to develop apps.
>>>>>
>>>>> That being said, the licensing issues, as Duncan raised in his reply,
>>>>> are still germane and permission from the R Foundation should be sought for
>>>>> any uses involving R Foundation copyrighted content. That would be relevant
>>>>> for both the iOS implementation and the Android implementation.
>>>>>
>>>>
>>>> Just to be clear:  everybody already has permission from the R copyright
>>>> holders to use R within the existing licenses.  There's no need to seek
>>>> extra permission for that.
>>>>
>>>> Trademarks are different...
>>>>
>>>> Duncan Murdoch
>>>>
>>>
>>>
>>> Thanks for the clarification Duncan, I was imprecise in my language.
>>>
>>> Regards,
>>>
>>> Marc
>>>
>>>
>>>
>>>>  Regards,
>>>>>
>>>>> Marc Schwartz
>>>>>
>>>>> P.S. I echo's Duncan's comment, in that I am also a member of the R
>>>>> Foundation, but am not speaking here on it's behalf.
>>>>>
>>>>>
>>>>>
>>>>>>
>>>>>>> Thus we decided to remove the iOS app from the App Store several
>>>>>>> days ago.
>>>>>>>
>>>>>>> We are thinking of publishing the same app published under Cydia
>>>>>>> with a
>>>>>>> freemium model.
>>>>>>> Its licence would be GPL v3.
>>>>>>>
>>>>>>> What we would like to do under Cydia with R Console is to have the
>>>>>>> following behavior :
>>>>>>> - free version will be able to run recommended packages and graphics
>>>>>>> are
>>>>>>> not enabled. A small ad banner is present on top of the app.
>>>>>>> - premium version will be the same as the free version except the ad
>>>>>>> banner
>>>>>>> will not be present anymore and 3 compilers will be integrated into
>>>>>>> the app
>>>>>>> in order to be able to compile and run most of the Cran packages from
>>>>>>> source.
>>>>>>> - graphics may be added in a second step.
>>>>>>>
>>>>>>> The app will be considered as a bundle of open-source tools. This
>>>>>>> bundle
>>>>>>> will be under the Gnu General Public Licence version 3. Each
>>>>>>> open-source
>>>>>>> tool which contributes to the overall bundle will stay in its
>>>>>>> original
>>>>>>> licence (R is GPL v2 for instance) but the bundle will be GPL v3.
>>>>>>>
>>>>>>>
>>>>>>>   From your point of view, do you see any legal issue with this
>>>>>>>> project under
>>>>>>>>
>>>>>>> Cydia for jailbroken iOS devices?
>>>>>>>
>>>>>>>>  From a trademark point of view, is the name of the apps "R Console
>>>>>>>> Free"
>>>>>>>>
>>>>>>> and "R Console Premium" ok ?
>>>>>>>
>>>>>>> Thanks for your help.
>>>>>>>
>>>>>>> Apps Embedded Team.
>>>>>>>
>>>>>>
>>>>>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>

	[[alternative HTML version deleted]]


From murdoch.duncan at gmail.com  Wed Dec 10 13:19:00 2014
From: murdoch.duncan at gmail.com (Duncan Murdoch)
Date: Wed, 10 Dec 2014 07:19:00 -0500
Subject: [Rd] UTF8 markdown vignette
In-Reply-To: <CANROs4ff+oo7rpVDL2f6+edxpd6k69TWuEchrk3y277RcRpteQ@mail.gmail.com>
References: <AA818EAD2576BC488B4F623941DA7427F3C7D1D8@inbomail.inbo.be>
	<5486C91E.90409@gmail.com>
	<AA818EAD2576BC488B4F623941DA7427F3C7D24C@inbomail.inbo.be>
	<5486F3B2.6060507@gmail.com>
	<CANROs4eKia1xaZrTH47tTiuL40eGW11Yrociqt5-rVcwJU0WGA@mail.gmail.com>
	<AA818EAD2576BC488B4F623941DA7427F3C7DFD4@inbomail.inbo.be>
	<54876CBE.9020207@gmail.com>
	<CANROs4ff+oo7rpVDL2f6+edxpd6k69TWuEchrk3y277RcRpteQ@mail.gmail.com>
Message-ID: <54883A34.5040207@gmail.com>

On 09/12/2014, 10:36 PM, Yihui Xie wrote:
> I took a look at the R source and I realized that the encoding was
> actually never passed to the vignette engine:
> https://github.com/wch/r-source/blob/e721ef5f4/src/library/tools/R/Vignettes.R#L507
> Apparently only the file and quiet arguments are passed to the
> vignette engine. Did I miss anything?

I think it's actually a little messier than that:  sometimes the
encoding is passed (e.g. by tools:::.run_one_vignette, used in R CMD
check), but not always.  Here's what I think should happen instead:

When building a vignette in a package, R knows the encoding declared for
the package, so it should assume this as the default for the vignette.
If nothing is declared, it should assume "native.enc", i.e. whatever is
the native encoding on the machine it's running on.

For each vignette, at the same time as it determines the vignette
engine, it should see whether there is a declared encoding within the
vignette.

When it calls the engine, it should pass an encoding (and it should be a
legal one, e.g. UTF-8, not utf8).

Unless I notice something missing when I do this, or someone else tells
me something that's missing, I'll try to make the changes above in
R-devel and R-patched sometime before 3.1.3 is released.

In the meantime, unless declaring a dependence on R >= 3.1.3, vignette
engines should determine the encoding themselves whenever they are
called without an "encoding" argument.

Duncan Murdoch


> 
> To Thierry: I explicitly asked for library(rmarkdown);sessionInfo(),
> but you only told me the version of rmarkdown, which is not the only
> thing I was asking for. It is extremely important in this case to know
> the versions of other packages as well as your system locale
> information.
> 
> Regards,
> Yihui
> --
> Yihui Xie <xieyihui at gmail.com>
> Web: http://yihui.name
> 
> 
> On Tue, Dec 9, 2014 at 3:42 PM, Duncan Murdoch <murdoch.duncan at gmail.com> wrote:
>> On 09/12/2014, 4:38 PM, ONKELINX, Thierry wrote:
>>> Dear Yihui,
>>>
>>> I have created a reproducible example at https://github.com/ThierryO/utf8vignette
>>>
>>> The \usepackage{} line is needed, otherwise R CMD check --as-cran will give a warning.
>>> %\VignetteEncoding{UTF-8} did not solve the problem.
>>
>> I've just taken a look at the sources, and that's only in R-devel, it
>> never got backported to R-patched so it isn't in the release R.  You
>> would need to use
>>
>> %\SweaveUTF8
>>
>> instead.  (It was introduced in 3.1.0, and should be kept until at least
>> 3.2.0, but \VignetteEncoding will be preferred in the long run.  It
>> should make it into 3.1.3 unless we drop the ball again.)
>>
>> Duncan Murdoch
>>
>>>
>>> I use rmarkdown_0.3.11
>>>
>>> HTML vignette is not an option as the vignette demonstrates the use of a custom beamer output format.
>>>
>>> Best regards,
>>>
>>> Thierry
>>> ________________________________________
>>> Van: xieyihui at gmail.com [xieyihui at gmail.com] namens Yihui Xie [xie at yihui.name]
>>> Verzonden: dinsdag 9 december 2014 17:13
>>> Aan: ONKELINX, Thierry
>>> CC: r-devel at r-project.org; Duncan Murdoch; Kurt Hornik
>>> Onderwerp: Re: [Rd] UTF8 markdown vignette
>>>
>>>
>>> Lastly, the most important piece of information is missing in this
>>> post: library(rmarkdown); sessionInfo(). There is not a minimal
>>> reproducible example, either. Without these information, I can only
>>> guess blindly.


From maechler at stat.math.ethz.ch  Thu Dec 11 11:40:47 2014
From: maechler at stat.math.ethz.ch (Martin Maechler)
Date: Thu, 11 Dec 2014 11:40:47 +0100
Subject: [Rd] R CMD check --as-cran and (a)spell checking
In-Reply-To: <CAFDcVCSw4ByuiKNO_bXpBr7asmaYfQY8oBHtePJ9VEimQhVTKg@mail.gmail.com>
References: <CAFDcVCSw4ByuiKNO_bXpBr7asmaYfQY8oBHtePJ9VEimQhVTKg@mail.gmail.com>
Message-ID: <21641.29871.881273.80729@stat.math.ethz.ch>

>>>>> Henrik Bengtsson <hb at biostat.ucsf.edu>
>>>>>     on Fri, 5 Dec 2014 18:17:57 -0800 writes:

    > Does anyone know if it is possible to add a dictionary
    > file of known words that becomes part of the *built*
    > package to tell 'R CMD check --as-cran' not to report
    > these words as misspelled.  I want this dictionary to come
    > with the *.tar.gz such that it will be available
    > regardless where the package is checked.  For instance,
    > currently I get:

    > * using log directory
    > 'T:/R/_R-3.1.2patched/matrixStats.Rcheck' * using R
    > version 3.1.2 Patched (2014-12-03 r67101) * using
    > platform: x86_64-w64-mingw32 (64-bit) * using session
    > charset: ISO8859-1 * checking for file
    > 'matrixStats/DESCRIPTION' ... OK * this is package
    > 'matrixStats' version '0.12.0' * checking CRAN incoming
    > feasibility ... NOTE Maintainer: 'Henrik Bengtsson
    > <henrikb at braju.com>' Possibly mis-spelled words in
    > DESCRIPTION: rowMedians (18:74) rowRanks (18:92) rowSds
    > (18:111) * checking package namespace information ... OK
    > ...

I agree that some customization possibility would be great here.
Maybe it'll be sufficient to allow a short list of about a dozen
words in the DESCRIPTION itself, e.g., with an item

Extrawords: rowMedians, rowRanks

Would you feel like providing a patch to the R (devel) sources
for this?

Best,
Martin


From edd at debian.org  Thu Dec 11 13:53:06 2014
From: edd at debian.org (Dirk Eddelbuettel)
Date: Thu, 11 Dec 2014 06:53:06 -0600
Subject: [Rd] package.skeleton leads to R CMD check aborting
Message-ID: <21641.37810.780283.189953@max.nulle.part>


The package.skeleton() base function is useful for creating empty packages.

The fact that the help files generated by the function cause errors was long
an annoyance, but I noticed last month (while preparing for a workshop on R
and packages) that it creates packages which cause 'R CMD check ...' to die
in error.  Which is always a bug.  

I just verified that it still dies in error under R-devel, and filed bug
report 16105 at the bugzilla instance. See below for a session log.

As a bug reporter, I should offer help. I do, though somewhat hesitantly as
package.skeleton() has gotten a bit complicated over the years.  But if a
patch simplifying the output of a simple default package is of interest I
will work on it.

Dirk


edd at max:/tmp$ rm -rf demo/
edd at max:/tmp$ mkdir demo && cd demo
edd at max:/tmp/demo$ R-devel.sh      

R Under development (unstable) (2014-12-09 r67142) -- "Unsuffered Consequences"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-unknown-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.


John Kane: I have 120 columns in a data.frame. I have one value in a column named "blaw" that I want to change. How do I find the coordinates?
Roger Koenker: It is the well-known wicked which problem: If you had (grammatically incorrectly) thought "... which I want to change" then you might have
been led to type (in another window):
  ?which
and you would have seen the light. Maybe that() should be an alias for which()?
   -- John Kane and Roger Koenker
      R-help (August 2006)

R> package.skeleton("quickDemo")
Creating directories ...
Creating DESCRIPTION ...
Creating NAMESPACE ...
Creating Read-and-delete-me ...
Saving functions and data ...
Making help files ...
Done.
Further steps are described in './quickDemo/Read-and-delete-me'.
R> q()
edd at max:/tmp/demo$ R-devel.sh CMD build quickDemo
* checking for file ?quickDemo/DESCRIPTION? ... OK
* preparing ?quickDemo?:
* checking DESCRIPTION meta-information ... OK
* installing the package to process help pages
* saving partial Rd database
* checking for LF line-endings in source and make files
* checking for empty or unneeded directories
* building ?quickDemo_1.0.tar.gz?

edd at max:/tmp/demo$ R-devel.sh CMD check quickDemo_1.0.tar.gz
* using log directory ?/tmp/demo/quickDemo.Rcheck?
* using R Under development (unstable) (2014-12-09 r67142)
* using platform: x86_64-unknown-linux-gnu (64-bit)
* using session charset: UTF-8
* checking for file ?quickDemo/DESCRIPTION? ... OK
* checking extension type ... Package
* this is package ?quickDemo? version ?1.0?
* checking package namespace information ... OK
* checking package dependencies ... OK
* checking if this is a source package ... OK
* checking if there is a namespace ... OK
* checking for executable files ... OK
* checking for hidden files and directories ... OK
* checking for portable file names ... OK
* checking for sufficient/correct file permissions ... OK
* checking whether package ?quickDemo? can be installed ... WARNING
Found the following significant warnings:
  Warning: /tmp/Rtmp3vskac/Rbuild4e1945bdc52a/quickDemo/man/quickDemo-package.Rd:26: All text must be in a section
See ?/tmp/demo/quickDemo.Rcheck/00install.out? for details.
* checking installed package size ... OK
* checking package directory ... OK
* checking DESCRIPTION meta-information ... WARNING
Non-standard license specification:
  What license is it under?
Standardizable: FALSE
* checking top-level files ... OK
* checking for left-over files ... OK
* checking index information ... OK
* checking package subdirectories ... OK
* checking R files for non-ASCII characters ... OK
* checking R files for syntax errors ... OK
* checking whether the package can be loaded ... OK
* checking whether the package can be loaded with stated dependencies ... OK
* checking whether the package can be unloaded cleanly ... OK
* checking whether the namespace can be loaded with stated dependencies ... OK
* checking whether the namespace can be unloaded cleanly ... OK
* checking loading without being on the library search path ... OK
* checking dependencies in R code ... OK
* checking S3 generic/method consistency ... OK
* checking replacement functions ... OK
* checking foreign function calls ... OK
* checking R code for possible problems ... OK
* checking Rd files ... WARNING
prepare_Rd: quickDemo-package.Rd:26: All text must be in a section
* checking Rd metadata ... OK
* checking Rd cross-references ... WARNING
Unknown package ?<pkg>? in Rd xrefs
* checking for missing documentation entries ... OK
* checking for code/documentation mismatches ... OK
* checking Rd \usage sections ... OK
* checking Rd contents ... OK
* checking for unstated dependencies in examples ... WARNING
Warning: parse error in file 'quickDemo-Ex.R':
20:11: unexpected symbol
19: 
20: ~~ simple examples
              ^
* checking examples ... ERROR
Running examples in ?quickDemo-Ex.R? failed
The error most likely occurred in:

> ### Name: quickDemo-package
> ### Title: What the package does (short line)
> ### Aliases: quickDemo-package quickDemo
> ### Keywords: package
> 
> ### ** Examples
> 
> ~~ simple examples of the most important functions ~~
Error: unexpected symbol in "~~ simple examples"
Execution halted
edd at max:/tmp/demo$ 



-- 
http://dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org


From pbruneau at gmail.com  Thu Dec 11 14:00:01 2014
From: pbruneau at gmail.com (Pierrick Bruneau)
Date: Thu, 11 Dec 2014 14:00:01 +0100
Subject: [Rd] Fwd: No source view when using gdb
In-Reply-To: <CAF_q7hVigWqob-xu-bQ6a6tk=pJMv0QZqrF4Yy+UY_5GexA3sg@mail.gmail.com>
References: <CAF_q7hVigWqob-xu-bQ6a6tk=pJMv0QZqrF4Yy+UY_5GexA3sg@mail.gmail.com>
Message-ID: <CAF_q7hWUSwq9KYvyKO6Dk5HsujPv5UN0vdHU3dz2w-f6RLCS3A@mail.gmail.com>

Dear R contributors,

Say I want to debug some C code invoked through .Call() - say
"varbayes" in the VBmix package. following the instructions in
"Writing R Extensions", I perform the following actions :

R -d gdb
run
library(VBmix)
CTRL+C
break varbayes
signal 0
mod <- varbayes(as.matrix(iris)[,1:4], 2)

The breakpoint is indeed activated, seemingly at the correct position
in the source file, but instead of the actual text at the respective
line, I get the following :

69    varbayes.c: No such file or directory.

Issuing "next" afterwards seems to attain the expected purpose (step
by step progression), but source code lines are replaced by, e.g. :

72    in varbayes.c

There should be some way of "installing" the source code files, but I
did not find R-specific info there. Does someone have a clue for my
problem?

Thanks by advance,
Pierrick


From plummerm at iarc.fr  Thu Dec 11 15:00:24 2014
From: plummerm at iarc.fr (Martyn Plummer)
Date: Thu, 11 Dec 2014 14:00:24 +0000
Subject: [Rd] Fwd: No source view when using gdb
In-Reply-To: <CAF_q7hWUSwq9KYvyKO6Dk5HsujPv5UN0vdHU3dz2w-f6RLCS3A@mail.gmail.com>
References: <CAF_q7hVigWqob-xu-bQ6a6tk=pJMv0QZqrF4Yy+UY_5GexA3sg@mail.gmail.com>
	<CAF_q7hWUSwq9KYvyKO6Dk5HsujPv5UN0vdHU3dz2w-f6RLCS3A@mail.gmail.com>
Message-ID: <1418306425.3300.11.camel@braque.iarc.fr>

On Thu, 2014-12-11 at 14:00 +0100, Pierrick Bruneau wrote:
> Dear R contributors,
> 
> Say I want to debug some C code invoked through .Call() - say
> "varbayes" in the VBmix package. following the instructions in
> "Writing R Extensions", I perform the following actions :
> 
> R -d gdb
> run
> library(VBmix)
> CTRL+C
> break varbayes
> signal 0
> mod <- varbayes(as.matrix(iris)[,1:4], 2)
> 
> The breakpoint is indeed activated, seemingly at the correct position
> in the source file, but instead of the actual text at the respective
> line, I get the following :
> 
> 69    varbayes.c: No such file or directory.
> 
> Issuing "next" afterwards seems to attain the expected purpose (step
> by step progression), but source code lines are replaced by, e.g. :
> 
> 72    in varbayes.c
> 
> There should be some way of "installing" the source code files, but I
> did not find R-specific info there. Does someone have a clue for my
> problem?

This happens when you install a package from the tarball. The source is
unpacked into a temporary directory which is then deleted. Try unpacking
the source tarball yourself, and then installing from the unpacked
directory, e.g. 

tar xfvz VBMix_0.2.17.tar.gz
R CMD INSTALL VBMix

Martyn

> Thanks by advance,
> Pierrick
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel

-----------------------------------------------------------------------
This message and its attachments are strictly confidenti...{{dropped:8}}


From pbruneau at gmail.com  Thu Dec 11 15:07:53 2014
From: pbruneau at gmail.com (Pierrick Bruneau)
Date: Thu, 11 Dec 2014 15:07:53 +0100
Subject: [Rd] Fwd: No source view when using gdb
In-Reply-To: <1418306425.3300.11.camel@braque.iarc.fr>
References: <CAF_q7hVigWqob-xu-bQ6a6tk=pJMv0QZqrF4Yy+UY_5GexA3sg@mail.gmail.com>
	<CAF_q7hWUSwq9KYvyKO6Dk5HsujPv5UN0vdHU3dz2w-f6RLCS3A@mail.gmail.com>
	<1418306425.3300.11.camel@braque.iarc.fr>
Message-ID: <CAF_q7hUDQfz3jUKEAJ8sybPReM0=V5ZVwYwAUqwDjPpuRs4_=A@mail.gmail.com>

Works like a charm, thanks!

On Thu, Dec 11, 2014 at 3:00 PM, Martyn Plummer <plummerm at iarc.fr> wrote:
> On Thu, 2014-12-11 at 14:00 +0100, Pierrick Bruneau wrote:
>> Dear R contributors,
>>
>> Say I want to debug some C code invoked through .Call() - say
>> "varbayes" in the VBmix package. following the instructions in
>> "Writing R Extensions", I perform the following actions :
>>
>> R -d gdb
>> run
>> library(VBmix)
>> CTRL+C
>> break varbayes
>> signal 0
>> mod <- varbayes(as.matrix(iris)[,1:4], 2)
>>
>> The breakpoint is indeed activated, seemingly at the correct position
>> in the source file, but instead of the actual text at the respective
>> line, I get the following :
>>
>> 69    varbayes.c: No such file or directory.
>>
>> Issuing "next" afterwards seems to attain the expected purpose (step
>> by step progression), but source code lines are replaced by, e.g. :
>>
>> 72    in varbayes.c
>>
>> There should be some way of "installing" the source code files, but I
>> did not find R-specific info there. Does someone have a clue for my
>> problem?
>
> This happens when you install a package from the tarball. The source is
> unpacked into a temporary directory which is then deleted. Try unpacking
> the source tarball yourself, and then installing from the unpacked
> directory, e.g.
>
> tar xfvz VBMix_0.2.17.tar.gz
> R CMD INSTALL VBMix
>
> Martyn
>
>> Thanks by advance,
>> Pierrick
>>
>> ______________________________________________
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel
>
> -----------------------------------------------------------------------
> This message and its attachments are strictly confiden...{{dropped:8}}


From hb at biostat.ucsf.edu  Thu Dec 11 18:59:46 2014
From: hb at biostat.ucsf.edu (Henrik Bengtsson)
Date: Thu, 11 Dec 2014 09:59:46 -0800
Subject: [Rd] SUGGESTION: Force install.packages() to use ASCII encoding
 when parse():ing code?
Message-ID: <CAFDcVCSgxuDLTLQQFg8w2m_e2CB7sn7zdRdQHjGqJc0wbueEtg@mail.gmail.com>

SUGGESTION:
Would it make sense if install.packages() and friends always use an
"ascii"(*) encoding when parse():ing R package source code files?

I believe this should be safe, because R code files should be in ASCII
[http://en.wikipedia.org/wiki/ASCII] and only in source-code comments
you may use other characters.  This is from Section 'Package
subdirectories' in 'Writing R Extensions':

"Only ASCII characters (and the control characters tab, formfeed, LF
and CR) should be used in code files. Other characters are accepted in
comments, but then the comments may not be readable in e.g. a UTF-8
locale. Non-ASCII characters in object names will normally fail when
the package is installed. Any byte will be allowed in a quoted
character string but \uxxxx escapes should be used for non-ASCII
characters. However, non-ASCII character strings may not be usable in
some locales and may display incorrectly in others."

Since comments are dropped by parse(), their actual content does not
matter, and the rest of the code should be in ASCII.

(*) It could be that the specific encoding "ascii" is not cross
platforms. If so, is there another way to specify a pure ASCII
encoding?



BACKGROUND:
If a user/system sets the 'encoding' option at startup, it may break
package installations from source if the package has source code
comments with non-ASCII characters.  For example,

$ mkdir foo; cd foo
$ echo "options(encoding='UTF-8')" > .Rprofile
$ R --vanilla
> install.packages("R.oo", type="source")

> install.packages("R.oo", type="source")
Installing package into 'C:/Users/hb/R/win-library/3.2'
(as 'lib' is unspecified)
--- Please select a CRAN mirror for use in this session ---
trying URL 'http://cran.at.r-project.org/src/contrib/R.oo_1.18.0.tar.gz'
Content type 'application/x-gzip' length 394545 bytes (385 KB)
opened URL
downloaded 385 KB

* installing *source* package 'R.oo' ...
** package 'R.oo' successfully unpacked and MD5 sums checked
** R
Warning in parse(outFile) :
  invalid input found on input connection 'C:/Users/hb/R/win-library/3.2/R.oo/R/
R.oo'
** inst
** preparing package for lazy loading
Warning in parse(n = -1, file = file, srcfile = NULL, keep.source = FALSE) :
  invalid input found on input connection 'C:/Users/hb/R/win-library/3.2/R.oo/R/
R.oo'
** help
[...]

(This can be an extremely time consuming task to troubleshoot,
particularly if reported to a package maintainer not having access to
the original system).

FYI, setting it only in the session is alright:

> options(encoding="UTF-8")
> install.packages("R.oo", type="source")

because install.packages() launches a separated R process for the
installation and it's only then the startup code becomes an issue.


TROUBLESHOOTING:
My understanding for the

Warning in parse(n = -1, file = file, srcfile = NULL, keep.source = FALSE) :
  invalid input found on input connection 'C:/Users/hb/R/win-library/3.2/R.oo/R/

is that this happens when there is a non-ASCII character in one of the
source-code comments (*) with a bit pattern matching a multi-byte
UTF-8 sequence [http://en.wikipedia.org/wiki/UTF-8#Description].  For
instance, consider a source code comment with an acute accent:

> raw <- as.raw(c(0x23, 0x20, 0xe9, 0x74, 0x75, 0x64, 0x69, 0x61, 0x6e, 0x74, 0x0a))
> writeBin(raw, con="foo.R")
> code <- readLines("foo.R")
> code
[1] "# ?tudiant"

> options(encoding="UTF-8")
> parse("foo.R")
Warning message:
In readLines(file, warn = FALSE) :
  invalid input found on input connection 'foo.R'

> options(encoding="ascii")
> parse("foo.R")
expression()

Reason for the "invalid input": The bit pattern for raw[3:5], is:

> R.utils::intToBin(raw[3:5])
[1] "11101001" "01110100" "01110101"

The first byte (raw[3]) matched special UTF-8 byte pattern "1110xxxx",
which according to UTF-8 should be followed by two more bytes with bit
patterns "10xxxxxx" and "10xxxxx"
[http://en.wikipedia.org/wiki/UTF-8#Description].  Since raw[4:5] does
not match those, it's an invalid UTF-8 byte sequence.  So, technically
this does not happen for all comments using acute accents, but it's
very likely.  More generally, a multi-byte UTF-8 sequence is expected
when byte pattern "11xxxxx" (>= 192 in decimal values) is encountered.
Looking http://en.wikipedia.org/wiki/ISO/IEC_8859, there are several
characters with this bit pattern for many "Latin-N" encodings, which
I'd assume is still in dominant use by many developers.

So, since options(encoding="UTF-8") was set at startup, that is also
the encoding that R tries to follow.  My suggestion is that it seems
that R should be able to always use a pure-ASCII encoding when parsing
R code in packages, because that is what 'Writing R Extensions' says
we should use in the first place.

/Henrik


From murdoch.duncan at gmail.com  Thu Dec 11 19:47:10 2014
From: murdoch.duncan at gmail.com (Duncan Murdoch)
Date: Thu, 11 Dec 2014 13:47:10 -0500
Subject: [Rd] SUGGESTION: Force install.packages() to use ASCII encoding
 when parse():ing code?
In-Reply-To: <CAFDcVCSgxuDLTLQQFg8w2m_e2CB7sn7zdRdQHjGqJc0wbueEtg@mail.gmail.com>
References: <CAFDcVCSgxuDLTLQQFg8w2m_e2CB7sn7zdRdQHjGqJc0wbueEtg@mail.gmail.com>
Message-ID: <5489E6AE.9060002@gmail.com>

On 11/12/2014 12:59 PM, Henrik Bengtsson wrote:
> SUGGESTION:
> Would it make sense if install.packages() and friends always use an
> "ascii"(*) encoding when parse():ing R package source code files?

I think that would be a step backwards.  It would be better to accept 
other encodings.  As an English speaker this isn't a big deal to me, but 
users of other languages may want to have messages and variable names in 
their native language, and ASCII might not be enough for that.

On the other hand, I think it's quite reasonable to require a declared 
encoding if anything other than ASCII is used, and possibly to fail for 
some encodings.  It is probably also reasonable to at least warn when 
non-ASCII characters are used in strings in packages on CRAN, as many 
users can't display all characters.

Duncan Murdoch
>
> I believe this should be safe, because R code files should be in ASCII
> [http://en.wikipedia.org/wiki/ASCII] and only in source-code comments
> you may use other characters.  This is from Section 'Package
> subdirectories' in 'Writing R Extensions':
>
> "Only ASCII characters (and the control characters tab, formfeed, LF
> and CR) should be used in code files. Other characters are accepted in
> comments, but then the comments may not be readable in e.g. a UTF-8
> locale. Non-ASCII characters in object names will normally fail when
> the package is installed. Any byte will be allowed in a quoted
> character string but \uxxxx escapes should be used for non-ASCII
> characters. However, non-ASCII character strings may not be usable in
> some locales and may display incorrectly in others."
>
> Since comments are dropped by parse(), their actual content does not
> matter, and the rest of the code should be in ASCII.
>
> (*) It could be that the specific encoding "ascii" is not cross
> platforms. If so, is there another way to specify a pure ASCII
> encoding?
>
>
>
> BACKGROUND:
> If a user/system sets the 'encoding' option at startup, it may break
> package installations from source if the package has source code
> comments with non-ASCII characters.  For example,
>
> $ mkdir foo; cd foo
> $ echo "options(encoding='UTF-8')" > .Rprofile
> $ R --vanilla
> > install.packages("R.oo", type="source")
>
> > install.packages("R.oo", type="source")
> Installing package into 'C:/Users/hb/R/win-library/3.2'
> (as 'lib' is unspecified)
> --- Please select a CRAN mirror for use in this session ---
> trying URL 'http://cran.at.r-project.org/src/contrib/R.oo_1.18.0.tar.gz'
> Content type 'application/x-gzip' length 394545 bytes (385 KB)
> opened URL
> downloaded 385 KB
>
> * installing *source* package 'R.oo' ...
> ** package 'R.oo' successfully unpacked and MD5 sums checked
> ** R
> Warning in parse(outFile) :
>    invalid input found on input connection 'C:/Users/hb/R/win-library/3.2/R.oo/R/
> R.oo'
> ** inst
> ** preparing package for lazy loading
> Warning in parse(n = -1, file = file, srcfile = NULL, keep.source = FALSE) :
>    invalid input found on input connection 'C:/Users/hb/R/win-library/3.2/R.oo/R/
> R.oo'
> ** help
> [...]
>
> (This can be an extremely time consuming task to troubleshoot,
> particularly if reported to a package maintainer not having access to
> the original system).
>
> FYI, setting it only in the session is alright:
>
> > options(encoding="UTF-8")
> > install.packages("R.oo", type="source")
>
> because install.packages() launches a separated R process for the
> installation and it's only then the startup code becomes an issue.
>
>
> TROUBLESHOOTING:
> My understanding for the
>
> Warning in parse(n = -1, file = file, srcfile = NULL, keep.source = FALSE) :
>    invalid input found on input connection 'C:/Users/hb/R/win-library/3.2/R.oo/R/
>
> is that this happens when there is a non-ASCII character in one of the
> source-code comments (*) with a bit pattern matching a multi-byte
> UTF-8 sequence [http://en.wikipedia.org/wiki/UTF-8#Description].  For
> instance, consider a source code comment with an acute accent:
>
> > raw <- as.raw(c(0x23, 0x20, 0xe9, 0x74, 0x75, 0x64, 0x69, 0x61, 0x6e, 0x74, 0x0a))
> > writeBin(raw, con="foo.R")
> > code <- readLines("foo.R")
> > code
> [1] "# ?tudiant"
>
> > options(encoding="UTF-8")
> > parse("foo.R")
> Warning message:
> In readLines(file, warn = FALSE) :
>    invalid input found on input connection 'foo.R'
>
> > options(encoding="ascii")
> > parse("foo.R")
> expression()
>
> Reason for the "invalid input": The bit pattern for raw[3:5], is:
>
> > R.utils::intToBin(raw[3:5])
> [1] "11101001" "01110100" "01110101"
>
> The first byte (raw[3]) matched special UTF-8 byte pattern "1110xxxx",
> which according to UTF-8 should be followed by two more bytes with bit
> patterns "10xxxxxx" and "10xxxxx"
> [http://en.wikipedia.org/wiki/UTF-8#Description].  Since raw[4:5] does
> not match those, it's an invalid UTF-8 byte sequence.  So, technically
> this does not happen for all comments using acute accents, but it's
> very likely.  More generally, a multi-byte UTF-8 sequence is expected
> when byte pattern "11xxxxx" (>= 192 in decimal values) is encountered.
> Looking http://en.wikipedia.org/wiki/ISO/IEC_8859, there are several
> characters with this bit pattern for many "Latin-N" encodings, which
> I'd assume is still in dominant use by many developers.
>
> So, since options(encoding="UTF-8") was set at startup, that is also
> the encoding that R tries to follow.  My suggestion is that it seems
> that R should be able to always use a pure-ASCII encoding when parsing
> R code in packages, because that is what 'Writing R Extensions' says
> we should use in the first place.
>
> /Henrik
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From janko.thyson at gmail.com  Thu Dec 11 21:13:54 2014
From: janko.thyson at gmail.com (Janko Thyson)
Date: Thu, 11 Dec 2014 21:13:54 +0100
Subject: [Rd] Significant memory leak when using XML on Windows
Message-ID: <CAGmpuegAhR64N=2RGm3YrHVBz2ABOL=wBT2FdNjzvW8xAbcTUw@mail.gmail.com>

Dear list,

I'm sorry to keep coming back with this time and time again, but this bug
is still not fixed even though the root cause of the issue has been around
for 2-3 years now. And as the number of packages that depend on XML grows,
I thought maybe this deserves some wider attention.

I did my best to make reproduction of the issue as easy as possible:
https://github.com/omegahat/XML/issues/4
http://goo.gl/aV17Lv

But as I'm not familiar with C I'm kind of out of clues of what else do to.

Duncan has been really dedicated and helpful so far, but unfortunately he
seems to have too little time to really dig into this himself. So I thought
I'd try and raise the attention of other developers that have the skills to
fix this. Apparently, the issue is caused by the way the memory consumed by
the underlying C-objects/pointers is released (or not released, for that
matter).

I'd so much appreciate if someone could have a look at this. If I can be of
any help whatsoever, please let me know!

Thanks and best regards,
Janko

	[[alternative HTML version deleted]]


From hb at biostat.ucsf.edu  Thu Dec 11 21:28:54 2014
From: hb at biostat.ucsf.edu (Henrik Bengtsson)
Date: Thu, 11 Dec 2014 12:28:54 -0800
Subject: [Rd] SUGGESTION: Force install.packages() to use ASCII encoding
 when parse():ing code?
In-Reply-To: <5489E6AE.9060002@gmail.com>
References: <CAFDcVCSgxuDLTLQQFg8w2m_e2CB7sn7zdRdQHjGqJc0wbueEtg@mail.gmail.com>
	<5489E6AE.9060002@gmail.com>
Message-ID: <CAFDcVCSG6J5DBH3nkN50DtuwKNJRM72Yd=SPY-j-GOazQMnovg@mail.gmail.com>

On Thu, Dec 11, 2014 at 10:47 AM, Duncan Murdoch
<murdoch.duncan at gmail.com> wrote:
> On 11/12/2014 12:59 PM, Henrik Bengtsson wrote:
>>
>> SUGGESTION:
>> Would it make sense if install.packages() and friends always use an
>> "ascii"(*) encoding when parse():ing R package source code files?
>
>
> I think that would be a step backwards.  It would be better to accept other
> encodings.  As an English speaker this isn't a big deal to me, but users of
> other languages may want to have messages and variable names in their native
> language, and ASCII might not be enough for that.

Thanks for the feedback.  While I'll probably agree with you that R
packages should support other source code encodings than ASCII, that
would require a change in the specifications and design.  What I'm
proposing is (just) an adjustment to the implementation to meet the
current specs and design.

>
> On the other hand, I think it's quite reasonable to require a declared
> encoding if anything other than ASCII is used, and possibly to fail for some
> encodings.  It is probably also reasonable to at least warn when non-ASCII
> characters are used in strings in packages on CRAN, as many users can't
> display all characters.

That would be a reasonable extension of the design, which would be
backward compatible with the current design, i.e. if encoding for the
source code is not declared, then it is assumed to be ASCII.

Source code comments are special, because by the current design
('Writing R Extensions'), it somehow leaves it open to use any type of
encoding.  If I read it freely, it could even be that you can use
different encoding for different comments in the same file (which is
not unlikely to occur considered cut'n'paste and open-source
licenses).  If other encodings are to be supported, then I see two
ways forward:

1. Have R completely ignore what's in the comments (what follows #
until the newline) such that encoding does not matter, or
2. require the same encoding for the source code comments as the rest
of the code.

As I see it, today's design falls (could fall?) under 1, but the
implementation does not go all the way to support it.

/Henrik

PS. It should be emphasized that this is about R packages. AFAIK, you
can already now source() code written in any encoding, e.g.
> raw <- as.raw(c(
+  0xcf, 0x80, 0x20, 0x3c, 0x2d, 0x20, 0x70, 0x69, 0x0a,
+  0x70, 0x72, 0x69, 0x6e, 0x74, 0x28, 0xcf, 0x80, 0x29, 0x0a
+ ))
> writeBin(raw, con="pi.R")
> source("pi.R", encoding="UTF-8")
[1] 3.141593

>
> Duncan Murdoch
>>
>>
>> I believe this should be safe, because R code files should be in ASCII
>> [http://en.wikipedia.org/wiki/ASCII] and only in source-code comments
>> you may use other characters.  This is from Section 'Package
>> subdirectories' in 'Writing R Extensions':
>>
>> "Only ASCII characters (and the control characters tab, formfeed, LF
>> and CR) should be used in code files. Other characters are accepted in
>> comments, but then the comments may not be readable in e.g. a UTF-8
>> locale. Non-ASCII characters in object names will normally fail when
>> the package is installed. Any byte will be allowed in a quoted
>> character string but \uxxxx escapes should be used for non-ASCII
>> characters. However, non-ASCII character strings may not be usable in
>> some locales and may display incorrectly in others."
>>
>> Since comments are dropped by parse(), their actual content does not
>> matter, and the rest of the code should be in ASCII.
>>
>> (*) It could be that the specific encoding "ascii" is not cross
>> platforms. If so, is there another way to specify a pure ASCII
>> encoding?
>>
>>
>>
>> BACKGROUND:
>> If a user/system sets the 'encoding' option at startup, it may break
>> package installations from source if the package has source code
>> comments with non-ASCII characters.  For example,
>>
>> $ mkdir foo; cd foo
>> $ echo "options(encoding='UTF-8')" > .Rprofile
>> $ R --vanilla
>> > install.packages("R.oo", type="source")
>>
>> > install.packages("R.oo", type="source")
>> Installing package into 'C:/Users/hb/R/win-library/3.2'
>> (as 'lib' is unspecified)
>> --- Please select a CRAN mirror for use in this session ---
>> trying URL 'http://cran.at.r-project.org/src/contrib/R.oo_1.18.0.tar.gz'
>> Content type 'application/x-gzip' length 394545 bytes (385 KB)
>> opened URL
>> downloaded 385 KB
>>
>> * installing *source* package 'R.oo' ...
>> ** package 'R.oo' successfully unpacked and MD5 sums checked
>> ** R
>> Warning in parse(outFile) :
>>    invalid input found on input connection
>> 'C:/Users/hb/R/win-library/3.2/R.oo/R/
>> R.oo'
>> ** inst
>> ** preparing package for lazy loading
>> Warning in parse(n = -1, file = file, srcfile = NULL, keep.source = FALSE)
>> :
>>    invalid input found on input connection
>> 'C:/Users/hb/R/win-library/3.2/R.oo/R/
>> R.oo'
>> ** help
>> [...]
>>
>> (This can be an extremely time consuming task to troubleshoot,
>> particularly if reported to a package maintainer not having access to
>> the original system).
>>
>> FYI, setting it only in the session is alright:
>>
>> > options(encoding="UTF-8")
>> > install.packages("R.oo", type="source")
>>
>> because install.packages() launches a separated R process for the
>> installation and it's only then the startup code becomes an issue.
>>
>>
>> TROUBLESHOOTING:
>> My understanding for the
>>
>> Warning in parse(n = -1, file = file, srcfile = NULL, keep.source = FALSE)
>> :
>>    invalid input found on input connection
>> 'C:/Users/hb/R/win-library/3.2/R.oo/R/
>>
>> is that this happens when there is a non-ASCII character in one of the
>> source-code comments (*) with a bit pattern matching a multi-byte
>> UTF-8 sequence [http://en.wikipedia.org/wiki/UTF-8#Description].  For
>> instance, consider a source code comment with an acute accent:
>>
>> > raw <- as.raw(c(0x23, 0x20, 0xe9, 0x74, 0x75, 0x64, 0x69, 0x61, 0x6e,
>> > 0x74, 0x0a))
>> > writeBin(raw, con="foo.R")
>> > code <- readLines("foo.R")
>> > code
>> [1] "# ?tudiant"
>>
>> > options(encoding="UTF-8")
>> > parse("foo.R")
>> Warning message:
>> In readLines(file, warn = FALSE) :
>>    invalid input found on input connection 'foo.R'
>>
>> > options(encoding="ascii")
>> > parse("foo.R")
>> expression()
>>
>> Reason for the "invalid input": The bit pattern for raw[3:5], is:
>>
>> > R.utils::intToBin(raw[3:5])
>> [1] "11101001" "01110100" "01110101"
>>
>> The first byte (raw[3]) matched special UTF-8 byte pattern "1110xxxx",
>> which according to UTF-8 should be followed by two more bytes with bit
>> patterns "10xxxxxx" and "10xxxxx"
>> [http://en.wikipedia.org/wiki/UTF-8#Description].  Since raw[4:5] does
>> not match those, it's an invalid UTF-8 byte sequence.  So, technically
>> this does not happen for all comments using acute accents, but it's
>> very likely.  More generally, a multi-byte UTF-8 sequence is expected
>> when byte pattern "11xxxxx" (>= 192 in decimal values) is encountered.
>> Looking http://en.wikipedia.org/wiki/ISO/IEC_8859, there are several
>> characters with this bit pattern for many "Latin-N" encodings, which
>> I'd assume is still in dominant use by many developers.
>>
>> So, since options(encoding="UTF-8") was set at startup, that is also
>> the encoding that R tries to follow.  My suggestion is that it seems
>> that R should be able to always use a pure-ASCII encoding when parsing
>> R code in packages, because that is what 'Writing R Extensions' says
>> we should use in the first place.
>>
>> /Henrik
>>
>> ______________________________________________
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel
>
>


From b.h.mevik at usit.uio.no  Fri Dec 12 10:12:30 2014
From: b.h.mevik at usit.uio.no (=?utf-8?Q?Bj=C3=B8rn-Helge_Mevik?=)
Date: Fri, 12 Dec 2014 10:12:30 +0100
Subject: [Rd] SUGGESTION: Force install.packages() to use ASCII encoding
	when parse():ing code?
In-Reply-To: <5489E6AE.9060002@gmail.com> (Duncan Murdoch's message of "Thu,
	11 Dec 2014 13:47:10 -0500")
References: <CAFDcVCSgxuDLTLQQFg8w2m_e2CB7sn7zdRdQHjGqJc0wbueEtg@mail.gmail.com>
	<5489E6AE.9060002@gmail.com>
Message-ID: <s3s4mt11bb5.fsf@slagelg.uio.no>

Duncan Murdoch <murdoch.duncan at gmail.com> writes:

> users of other languages may want to have messages and variable names
> in their native language, and ASCII might not be enough for that.

Allowing for messages in non-ASCII encodings would probably be a good
idea, but I think allowing non-ASCII variable names is dangerous.

-- 
Regards,
Bj?rn-Helge Mevik


From murdoch.duncan at gmail.com  Fri Dec 12 12:01:22 2014
From: murdoch.duncan at gmail.com (Duncan Murdoch)
Date: Fri, 12 Dec 2014 06:01:22 -0500
Subject: [Rd] SUGGESTION: Force install.packages() to use ASCII encoding
 when parse():ing code?
In-Reply-To: <s3s4mt11bb5.fsf@slagelg.uio.no>
References: <CAFDcVCSgxuDLTLQQFg8w2m_e2CB7sn7zdRdQHjGqJc0wbueEtg@mail.gmail.com>	<5489E6AE.9060002@gmail.com>
	<s3s4mt11bb5.fsf@slagelg.uio.no>
Message-ID: <548ACB02.5050906@gmail.com>

On 12/12/2014, 4:12 AM, Bj?rn-Helge Mevik wrote:
> Duncan Murdoch <murdoch.duncan at gmail.com> writes:
> 
>> users of other languages may want to have messages and variable names
>> in their native language, and ASCII might not be enough for that.
> 
> Allowing for messages in non-ASCII encodings would probably be a good
> idea, but I think allowing non-ASCII variable names is dangerous.

Dangerous in what way?

I agree that CRAN probably shouldn't accept packages like that, at least
for exported symbols:  packages there should run anywhere.  But I
suspect that the majority of R packages are for private use, and will
never be sent to CRAN.  Do you know any reason that non-ASCII names
would be dangerous for those?

Duncan Murdoch


From jttkim at googlemail.com  Fri Dec 12 13:34:05 2014
From: jttkim at googlemail.com (Jan Kim)
Date: Fri, 12 Dec 2014 12:34:05 +0000
Subject: [Rd] SUGGESTION: Force install.packages() to use ASCII encoding
 when parse():ing code?
In-Reply-To: <548ACB02.5050906@gmail.com>
References: <CAFDcVCSgxuDLTLQQFg8w2m_e2CB7sn7zdRdQHjGqJc0wbueEtg@mail.gmail.com>
	<5489E6AE.9060002@gmail.com> <s3s4mt11bb5.fsf@slagelg.uio.no>
	<548ACB02.5050906@gmail.com>
Message-ID: <20141212123404.GC14760@localhost>

On Fri, Dec 12, 2014 at 06:01:22AM -0500, Duncan Murdoch wrote:
> On 12/12/2014, 4:12 AM, Bj??rn-Helge Mevik wrote:
> > Duncan Murdoch <murdoch.duncan at gmail.com> writes:
> > 
> >> users of other languages may want to have messages and variable names
> >> in their native language, and ASCII might not be enough for that.
> > 
> > Allowing for messages in non-ASCII encodings would probably be a good
> > idea, but I think allowing non-ASCII variable names is dangerous.
> 
> Dangerous in what way?
> 
> I agree that CRAN probably shouldn't accept packages like that, at least
> for exported symbols:  packages there should run anywhere.  But I
> suspect that the majority of R packages are for private use, and will
> never be sent to CRAN.  Do you know any reason that non-ASCII names
> would be dangerous for those?
> 
> Duncan Murdoch
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel

I'm would perhaps not go as far as calling them dangerous, but non-ASCII
characters in code are a mixed blessing which personally I'd opt to not
have, on balance. Being German I can understand that people may want
umlauted characters in their variable names, but where this catches on,
it's just a matter of time that people get characters into their code that
are different but indistinguishable in the font they use (I've seen this
with \H{o} rather than a \"{o}), and mega-personmonths are wasted puzzling
over tracking down these problems.

While many packages are used in-house at least initially, making a
package is a step towards releasing it, so I'd anticipate that having
an option to support weeding out any potentially troublesome identifiers
has the potential to do some good.

Best regards, Jan
-- 
 +- Jan T. Kim -------------------------------------------------------+
 |             email: jttkim at gmail.com                                |
 |             WWW:   http://www.jtkim.dreamhosters.com/              |
 *-----=<  hierarchical systems are for files, not for humans  >=-----*


From murdoch.duncan at gmail.com  Fri Dec 12 13:06:31 2014
From: murdoch.duncan at gmail.com (Duncan Murdoch)
Date: Fri, 12 Dec 2014 07:06:31 -0500
Subject: [Rd] SUGGESTION: Force install.packages() to use ASCII encoding
 when parse():ing code?
In-Reply-To: <20141212123404.GC14760@localhost>
References: <CAFDcVCSgxuDLTLQQFg8w2m_e2CB7sn7zdRdQHjGqJc0wbueEtg@mail.gmail.com>	<5489E6AE.9060002@gmail.com>
	<s3s4mt11bb5.fsf@slagelg.uio.no>	<548ACB02.5050906@gmail.com>
	<20141212123404.GC14760@localhost>
Message-ID: <548ADA47.9080408@gmail.com>

On 12/12/2014, 7:34 AM, Jan Kim wrote:
> On Fri, Dec 12, 2014 at 06:01:22AM -0500, Duncan Murdoch wrote:
>> On 12/12/2014, 4:12 AM, Bj??rn-Helge Mevik wrote:
>>> Duncan Murdoch <murdoch.duncan at gmail.com> writes:
>>>
>>>> users of other languages may want to have messages and variable names
>>>> in their native language, and ASCII might not be enough for that.
>>>
>>> Allowing for messages in non-ASCII encodings would probably be a good
>>> idea, but I think allowing non-ASCII variable names is dangerous.
>>
>> Dangerous in what way?
>>
>> I agree that CRAN probably shouldn't accept packages like that, at least
>> for exported symbols:  packages there should run anywhere.  But I
>> suspect that the majority of R packages are for private use, and will
>> never be sent to CRAN.  Do you know any reason that non-ASCII names
>> would be dangerous for those?
>>
>> Duncan Murdoch
>>
>> ______________________________________________
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel
> 
> I'm would perhaps not go as far as calling them dangerous, but non-ASCII
> characters in code are a mixed blessing which personally I'd opt to not
> have, on balance. Being German I can understand that people may want
> umlauted characters in their variable names, but where this catches on,
> it's just a matter of time that people get characters into their code that
> are different but indistinguishable in the font they use (I've seen this
> with \H{o} rather than a \"{o}), and mega-personmonths are wasted puzzling
> over tracking down these problems.
> 
> While many packages are used in-house at least initially, making a
> package is a step towards releasing it, so I'd anticipate that having
> an option to support weeding out any potentially troublesome identifiers
> has the potential to do some good.

That's a good point.  I guess I'm thinking of Asian languages where the
transliteration into ASCII loses a lot of information, and (I'm told) is
uncomfortable for native speakers to read.  I think R should be usable
in those languages in a way that is comfortable for them, but they
should be warned that doing so limits portability.

Duncan Murdoch


From h.wickham at gmail.com  Fri Dec 12 15:00:05 2014
From: h.wickham at gmail.com (Hadley Wickham)
Date: Fri, 12 Dec 2014 08:00:05 -0600
Subject: [Rd] SUGGESTION: Force install.packages() to use ASCII encoding
 when parse():ing code?
In-Reply-To: <20141212123404.GC14760@localhost>
References: <CAFDcVCSgxuDLTLQQFg8w2m_e2CB7sn7zdRdQHjGqJc0wbueEtg@mail.gmail.com>
	<5489E6AE.9060002@gmail.com> <s3s4mt11bb5.fsf@slagelg.uio.no>
	<548ACB02.5050906@gmail.com> <20141212123404.GC14760@localhost>
Message-ID: <CABdHhvFJ_KXgg3Nmud5xoXX5U6DidWjJ99UWkoVHdCrTncaQ+g@mail.gmail.com>

> I'm would perhaps not go as far as calling them dangerous, but non-ASCII
> characters in code are a mixed blessing which personally I'd opt to not
> have, on balance. Being German I can understand that people may want
> umlauted characters in their variable names, but where this catches on,
> it's just a matter of time that people get characters into their code that
> are different but indistinguishable in the font they use (I've seen this
> with \H{o} rather than a \"{o}), and mega-personmonths are wasted puzzling
> over tracking down these problems.

Related: http://en.wikipedia.org/wiki/IDN_homograph_attack

Hadley

-- 
http://had.co.nz/


From b.h.mevik at usit.uio.no  Fri Dec 12 15:35:00 2014
From: b.h.mevik at usit.uio.no (=?utf-8?Q?Bj=C3=B8rn-Helge_Mevik?=)
Date: Fri, 12 Dec 2014 15:35:00 +0100
Subject: [Rd] SUGGESTION: Force install.packages() to use ASCII encoding
	when parse():ing code?
In-Reply-To: <548ACB02.5050906@gmail.com> (Duncan Murdoch's message of "Fri,
	12 Dec 2014 06:01:22 -0500")
References: <CAFDcVCSgxuDLTLQQFg8w2m_e2CB7sn7zdRdQHjGqJc0wbueEtg@mail.gmail.com>
	<5489E6AE.9060002@gmail.com> <s3s4mt11bb5.fsf@slagelg.uio.no>
	<548ACB02.5050906@gmail.com>
Message-ID: <s3s7fxxym0b.fsf@slagelg.uio.no>

Duncan Murdoch <murdoch.duncan at gmail.com> writes:

> On 12/12/2014, 4:12 AM, Bj?rn-Helge Mevik wrote:
>> Duncan Murdoch <murdoch.duncan at gmail.com> writes:
>> 
>>> users of other languages may want to have messages and variable names
>>> in their native language, and ASCII might not be enough for that.
>> 
>> Allowing for messages in non-ASCII encodings would probably be a good
>> idea, but I think allowing non-ASCII variable names is dangerous.
>
> Dangerous in what way?

Perhaps "dangerous" is a little too strong, but it opens up
possibilities for problems with sharing code or running it on other
systems.  Also, judging by the many files I've seen (and created myself
:) with a mixture of iso8859-1 and utf8, or with "double-encoded" utf8,
it is surprisingly easy to make encoding mistakes when editing or
processing files.  And as Jan Kim wrote, you could get things that look
similar but are different.

-- 
Regards,
Bj?rn-Helge Mevik


From b.rowlingson at lancaster.ac.uk  Fri Dec 12 17:58:52 2014
From: b.rowlingson at lancaster.ac.uk (Barry Rowlingson)
Date: Fri, 12 Dec 2014 16:58:52 +0000
Subject: [Rd] SUGGESTION: Force install.packages() to use ASCII encoding
 when parse():ing code?
In-Reply-To: <eef9611b33b649c7b4e94a0e84f51cf5@EX-1-HT0.lancs.local>
References: <CAFDcVCSgxuDLTLQQFg8w2m_e2CB7sn7zdRdQHjGqJc0wbueEtg@mail.gmail.com>
	<5489E6AE.9060002@gmail.com> <s3s4mt11bb5.fsf@slagelg.uio.no>
	<548ACB02.5050906@gmail.com>
	<eef9611b33b649c7b4e94a0e84f51cf5@EX-1-HT0.lancs.local>
Message-ID: <CANVKczPfOOr93y4vZwCbDYDzZhggLm=66iqpHN1CrCZ3=nfeOA@mail.gmail.com>

On Fri, Dec 12, 2014 at 12:34 PM, Jan Kim <jttkim at googlemail.com> wrote:

> it's just a matter of time that people get characters into their code that
> are different but indistinguishable in the font they use (I've seen this
> with \H{o} rather than a \"{o}), and mega-personmonths are wasted puzzling
> over tracking down these problems.

 Then R should ban variable names from having 'l', 'i', '1', '0' and
'O' in them!

Barry


From jttkim at googlemail.com  Fri Dec 12 20:39:21 2014
From: jttkim at googlemail.com (Jan Kim)
Date: Fri, 12 Dec 2014 19:39:21 +0000
Subject: [Rd] SUGGESTION: Force install.packages() to use ASCII encoding
 when parse():ing code?
In-Reply-To: <CANVKczPfOOr93y4vZwCbDYDzZhggLm=66iqpHN1CrCZ3=nfeOA@mail.gmail.com>
References: <CAFDcVCSgxuDLTLQQFg8w2m_e2CB7sn7zdRdQHjGqJc0wbueEtg@mail.gmail.com>
	<5489E6AE.9060002@gmail.com> <s3s4mt11bb5.fsf@slagelg.uio.no>
	<548ACB02.5050906@gmail.com>
	<eef9611b33b649c7b4e94a0e84f51cf5@EX-1-HT0.lancs.local>
	<CANVKczPfOOr93y4vZwCbDYDzZhggLm=66iqpHN1CrCZ3=nfeOA@mail.gmail.com>
Message-ID: <20141212193920.GG14760@localhost>

On Fri, Dec 12, 2014 at 04:58:52PM +0000, Barry Rowlingson wrote:
> On Fri, Dec 12, 2014 at 12:34 PM, Jan Kim <jttkim at googlemail.com> wrote:
> 
> > it's just a matter of time that people get characters into their code that
> > are different but indistinguishable in the font they use (I've seen this
> > with \H{o} rather than a \"{o}), and mega-personmonths are wasted puzzling
> > over tracking down these problems.
> 
>  Then R should ban variable names from having 'l', 'i', '1', '0' and
> 'O' in them!

well -- I can live with 'i', but if I came across code using variable names
i, \'{\i}, \`{\i} and also \i, \u{\i}, \r{\i}, \d{\i} etc. I'd consider that
dangerous to my sanity (especially if they're all used in the same piece of
code)...  ;-)

More seriously, as I (literally) see it, the problems of confusing l / I / 1
or O / 0 etc. are reasonably solvable by using a decent font (e.g. Deja Vu,
Source Code Pro), but ensuring distinctness of glyphs in the same way
won't scale to character sets the size of Unicode.

Best regards, Jan

> Barry
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel

-- 
 +- Jan T. Kim -------------------------------------------------------+
 |             email: jttkim at gmail.com                                |
 |             WWW:   http://www.jtkim.dreamhosters.com/              |
 *-----=<  hierarchical systems are for files, not for humans  >=-----*


From htl10 at users.sourceforge.net  Mon Dec 15 04:04:48 2014
From: htl10 at users.sourceforge.net (Hin-Tak Leung)
Date: Mon, 15 Dec 2014 03:04:48 +0000
Subject: [Rd] R build failure under gcc 4.9's link time optimization
Message-ID: <1418612688.90838.YahooMailBasic@web172306.mail.ir2.yahoo.com>

R fails to build with visibility on and gcc 4.9's link time optimzation, because
of its practice of building part of it as archive first. Specifically
it builds some bundled libraries as archive first, the symbols of which
are then entirely invisible in gcc 4.9.

The Matrix package also does this awful practice, with CHOLMOD.a COLAMD.a AMD.a SuiteSparse_config.a .

One way of fixing R is:

diff --git a/src/main/Makefile.in b/src/main/Makefile.in
index 908b7ab..ce015b4 100644
--- a/src/main/Makefile.in
+++ b/src/main/Makefile.in
@@ -86,7 +86,7 @@ ALL_CPPFLAGS = $(ZLIB_CPPFLAGS) $(BZLIB_CPPFLAGS) $(PCRE_CPPFLAGS) \
 R_ZLIBS = @BUILD_ZLIB_TRUE@ ../extra/zlib/libz.a
 R_BZLIBS = @BUILD_BZLIB_TRUE@ ../extra/bzip2/libbz2.a
 R_PCRE = @BUILD_PCRE_TRUE@ ../extra/pcre/libpcre.a
-R_TRE = @BUILD_TRE_TRUE@ ../extra/tre/libtre.a
+R_TRE = @BUILD_TRE_TRUE@ `ls ../extra/tre/*.o`
 R_XDR = @BUILD_XDR_TRUE@ ../extra/xdr/libxdr.a
 R_XZ = @BUILD_XZ_TRUE@  ../extra/xz/liblzma.a
 R_LIBINTL = @BUILD_LIBINTL_TRUE@ ../extra/intl/libintl.a

According the gcc changes doc, setting $AR is probably better. (untested).

Here is the relevant excerpt from https://gcc.gnu.org/gcc-4.9/changes.html

Link-time optimization (LTO) improvements: 
When using a linker plugin, compiling with the -flto option now generates slim object files (.o) which only contain intermediate language representation for LTO. Use -ffat-lto-objects to create files which contain additionally the object code. To generate static libraries suitable for LTO processing, use gcc-ar and gcc-ranlib; to list symbols from a slim object file use gcc-nm. (This requires that ar, ranlib and nm have been compiled with plugin support.)


From jeroenooms at gmail.com  Mon Dec 15 04:54:03 2014
From: jeroenooms at gmail.com (Jeroen Ooms)
Date: Sun, 14 Dec 2014 19:54:03 -0800
Subject: [Rd] Significant memory leak when using XML on Windows
In-Reply-To: <CAGmpuegAhR64N=2RGm3YrHVBz2ABOL=wBT2FdNjzvW8xAbcTUw@mail.gmail.com>
References: <CAGmpuegAhR64N=2RGm3YrHVBz2ABOL=wBT2FdNjzvW8xAbcTUw@mail.gmail.com>
Message-ID: <CABFfbXscR5BxyTj2n_Vm+yubv4065FPrbfRg3AEt7+BUmXdkfw@mail.gmail.com>

On Thu, Dec 11, 2014 at 12:13 PM, Janko Thyson <janko.thyson at gmail.com>
wrote:
>
> I'd so much appreciate if someone could have a look at this. If I can be of
> any help whatsoever, please let me know!
>

Your current code uses various functions from XML and rvest so it is not a
*minimal* reproducible example. Even if you are unfamiliar with C, you
should be able to investigate exactly which function in the XML package you
think has issues. Once you found the problematic R function, inspect the
source code or use debug() to see if you can narrow it down even further,
preferably to a particular call to C.

Moreover you should create a reproducible example that allows us (and you)
to test if this problem appears on other systems such as OSX or linux.
Development and debugging on Windows is very painful so your windows-only
example is not too helpful. Making people use windows is not a good
strategy for getting help.

If the "leak" does not appear on other systems, it is likely a problem in
the libxml2 windows library on cran. In that case we can try to link
against another build. On the other hand, if the problem does appear across
systems, and you have provided a minimal reproducible example that
pinpoints the problematic C function, we can help you review/debug the code
C to see if/where some allocated object is not properly freed.

	[[alternative HTML version deleted]]


From dtemplelang at ucdavis.edu  Mon Dec 15 05:07:58 2014
From: dtemplelang at ucdavis.edu (Duncan Temple Lang)
Date: Sun, 14 Dec 2014 20:07:58 -0800
Subject: [Rd] Significant memory leak when using XML on Windows
In-Reply-To: <CABFfbXscR5BxyTj2n_Vm+yubv4065FPrbfRg3AEt7+BUmXdkfw@mail.gmail.com>
References: <CAGmpuegAhR64N=2RGm3YrHVBz2ABOL=wBT2FdNjzvW8xAbcTUw@mail.gmail.com>
	<CABFfbXscR5BxyTj2n_Vm+yubv4065FPrbfRg3AEt7+BUmXdkfw@mail.gmail.com>
Message-ID: <548E5E9E.2040609@ucdavis.edu>

Janko and I have been in touch.
This is, I believe, a Windows specific issue and a compilation issue.
I could be wrong, but that is my impression from other reports.

When I have time (?! :-)), I will deal with it. Hopefully this will
be very soon.

Thanks Janko.

 D.


On 12/14/14, 7:54 PM, Jeroen Ooms wrote:
> On Thu, Dec 11, 2014 at 12:13 PM, Janko Thyson
> <janko.thyson at gmail.com <mailto:janko.thyson at gmail.com>> wrote:
> 
> I'd so much appreciate if someone could have a look at this. If I can
> be of any help whatsoever, please let me know!
> 
> 
> Your current code uses various functions from XML and rvest so it is
> not a *minimal* reproducible example. Even if you are unfamiliar with
> C, you should be able to investigate exactly which function in the
> XML package you think has issues. Once you found the problematic R
> function, inspect the source code or use debug() to see if you can
> narrow it down even further, preferably to a particular call to C.
> 
> Moreover you should create a reproducible example that allows us (and
> you) to test if this problem appears on other systems such as OSX or
> linux. Development and debugging on Windows is very painful so your
> windows-only example is not too helpful. Making people use windows is
> not a good strategy for getting help.
> 
> If the "leak" does not appear on other systems, it is likely a
> problem in the libxml2 windows library on cran. In that case we can
> try to link against another build. On the other hand, if the problem
> does appear across systems, and you have provided a minimal
> reproducible example that pinpoints the problematic C function, we
> can help you review/debug the code C to see if/where some allocated
> object is not properly freed.
> 
> 
>


From jeroenooms at gmail.com  Mon Dec 15 08:05:33 2014
From: jeroenooms at gmail.com (Jeroen Ooms)
Date: Sun, 14 Dec 2014 23:05:33 -0800
Subject: [Rd] Significant memory leak when using XML on Windows
In-Reply-To: <548E5E9E.2040609@ucdavis.edu>
References: <CAGmpuegAhR64N=2RGm3YrHVBz2ABOL=wBT2FdNjzvW8xAbcTUw@mail.gmail.com>
	<CABFfbXscR5BxyTj2n_Vm+yubv4065FPrbfRg3AEt7+BUmXdkfw@mail.gmail.com>
	<548E5E9E.2040609@ucdavis.edu>
Message-ID: <CABFfbXtKgpzHiYGsU6zWhKzptYn33ze2MnarSOAPHmKONxJgKw@mail.gmail.com>

On Sun, Dec 14, 2014 at 8:07 PM, Duncan Temple Lang
<dtemplelang at ucdavis.edu> wrote:
>
> Janko and I have been in touch.
> This is, I believe, a Windows specific issue and a compilation issue.

If it does not appear on other systems, it might be the windows build
of libxml2 (or one of the dozens of problems that gcc warns about...).

To test, I compiled new static libraries for the latest version
(libxml2 2.9.2) and rebuilt the XML package. Janko, could try to
install this new version and see if the problem is still there? (from
the R windows menu bar, select "install from local zip file"):
http://www.stat.ucla.edu/~jeroen/xml/XML_3.98-9999.zip

The static libs are here in case anyone needs them:
http://www.stat.ucla.edu/~jeroen/xml/libxml2-2.9.2-mingw-w64.zip


From janko.thyson at gmail.com  Mon Dec 15 12:12:00 2014
From: janko.thyson at gmail.com (Janko Thyson)
Date: Mon, 15 Dec 2014 12:12:00 +0100
Subject: [Rd] Significant memory leak when using XML on Windows
In-Reply-To: <CABFfbXscR5BxyTj2n_Vm+yubv4065FPrbfRg3AEt7+BUmXdkfw@mail.gmail.com>
References: <CAGmpuegAhR64N=2RGm3YrHVBz2ABOL=wBT2FdNjzvW8xAbcTUw@mail.gmail.com>
	<CABFfbXscR5BxyTj2n_Vm+yubv4065FPrbfRg3AEt7+BUmXdkfw@mail.gmail.com>
Message-ID: <CAGmpuejgfXyHG4N3gteZrohR51RQdhvcXD2JBcUC6fCFbpCtiw@mail.gmail.com>

Thanks a lot for answering. Before I get into it, please note that
everything below bears the big capture "Thanks for trying to help me at
all".

1) Yeah, those examples - quite hard to satisfy everyone's needs ;-) While
the one side complained that my past examples regarding this issue were not
informative enough, others didn't like the more elaborated version (as
seems to be the case for you). I simply tried to make it as easy as
possible for people to see what's actually going on so they wouldn't have
to program their own stuff for things like reading the actual memory
consumed by the Rterm process etc.. If you prefer plain vanilla, though, I
guess this would be it:

memoryLeak <- function(
  x = system.file("exampleData", "mtcars.xml", package="XML"),
  n = 5000,
  free_doc = FALSE,
  rm_doc = FALSE,
  use_gc = FALSE
) {
  lapply(1:n, function(ii) {
    doc <- xmlParse(x)
    if (free_doc) free(doc)
    if (rm_doc) rm(doc)
    if (use_gc) gc()
    NULL
  })
}

2) If I knew my way around OSX or Linux, I would be happy to go with your
suggestions - but as I'm not, unfortunately that's out of reach for me. But
IMO, a deeper level of cross-platform expertise should **not** be a
generall prerequisite before you can ask for help - even at r-devel (as
opposed to r-help). However, AFAIK from past conversations with Duncan, the
problem is indeed Windows-specific as on all his non-Windows infrastructure
(definitely Linux, possibly OSX), everything went fine.

3) The same goes for the level of expertise in C. After all, R is not C. I
totally agree that the more programming languages one knows, the better.
But again: I don't think that knowing your way around C should be a
prerequisite for asking for help when an *R function* interfacing C causes
trouble. Requesting this would sort of oppose R's nature/paradigm of being
an awesome "top-level" interfacing language. But I'll try to narrow the
problem down on a C-level if I can help you with that.

4) Both Duncan as well as Hadley have suggested that libxml2 is indeed
causing the problem. So trying to link against another build would possibly
be a great way to start! How would I go about that?

Thanks if you should take the time to further look into this!
Janko

On Mon, Dec 15, 2014 at 4:54 AM, Jeroen Ooms <jeroenooms at gmail.com> wrote:
>
> On Thu, Dec 11, 2014 at 12:13 PM, Janko Thyson <janko.thyson at gmail.com>
> wrote:
>>
>> I'd so much appreciate if someone could have a look at this. If I can be
>> of
>> any help whatsoever, please let me know!
>>
>
> Your current code uses various functions from XML and rvest so it is not a
> *minimal* reproducible example. Even if you are unfamiliar with C, you
> should be able to investigate exactly which function in the XML package you
> think has issues. Once you found the problematic R function, inspect the
> source code or use debug() to see if you can narrow it down even further,
> preferably to a particular call to C.
>
> Moreover you should create a reproducible example that allows us (and you)
> to test if this problem appears on other systems such as OSX or linux.
> Development and debugging on Windows is very painful so your windows-only
> example is not too helpful. Making people use windows is not a good
> strategy for getting help.
>
> If the "leak" does not appear on other systems, it is likely a problem in
> the libxml2 windows library on cran. In that case we can try to link
> against another build. On the other hand, if the problem does appear across
> systems, and you have provided a minimal reproducible example that
> pinpoints the problematic C function, we can help you review/debug the code
> C to see if/where some allocated object is not properly freed.
>
>
>
>

	[[alternative HTML version deleted]]


From janko.thyson at gmail.com  Mon Dec 15 12:25:23 2014
From: janko.thyson at gmail.com (Janko Thyson)
Date: Mon, 15 Dec 2014 12:25:23 +0100
Subject: [Rd] Significant memory leak when using XML on Windows
In-Reply-To: <CAGmpuejgfXyHG4N3gteZrohR51RQdhvcXD2JBcUC6fCFbpCtiw@mail.gmail.com>
References: <CAGmpuegAhR64N=2RGm3YrHVBz2ABOL=wBT2FdNjzvW8xAbcTUw@mail.gmail.com>
	<CABFfbXscR5BxyTj2n_Vm+yubv4065FPrbfRg3AEt7+BUmXdkfw@mail.gmail.com>
	<CAGmpuejgfXyHG4N3gteZrohR51RQdhvcXD2JBcUC6fCFbpCtiw@mail.gmail.com>
Message-ID: <CAGmpuegG58HnOHcikxhAmU_ViH9B5a6eWt1w=PhcW9JcGsSeMg@mail.gmail.com>

Sorry guys, didn't see your responses before sending mine.

Thanks jeroen!! I'll test your version today and get back to you.

Gesendet von meinem Smartphone
Am 15.12.2014 12:12 schrieb "Janko Thyson" <janko.thyson at gmail.com>:

> Thanks a lot for answering. Before I get into it, please note that
> everything below bears the big capture "Thanks for trying to help me at
> all".
>
> 1) Yeah, those examples - quite hard to satisfy everyone's needs ;-) While
> the one side complained that my past examples regarding this issue were not
> informative enough, others didn't like the more elaborated version (as
> seems to be the case for you). I simply tried to make it as easy as
> possible for people to see what's actually going on so they wouldn't have
> to program their own stuff for things like reading the actual memory
> consumed by the Rterm process etc.. If you prefer plain vanilla, though, I
> guess this would be it:
>
> memoryLeak <- function(
>   x = system.file("exampleData", "mtcars.xml", package="XML"),
>   n = 5000,
>   free_doc = FALSE,
>   rm_doc = FALSE,
>   use_gc = FALSE
> ) {
>   lapply(1:n, function(ii) {
>     doc <- xmlParse(x)
>     if (free_doc) free(doc)
>     if (rm_doc) rm(doc)
>     if (use_gc) gc()
>     NULL
>   })
> }
>
> 2) If I knew my way around OSX or Linux, I would be happy to go with your
> suggestions - but as I'm not, unfortunately that's out of reach for me. But
> IMO, a deeper level of cross-platform expertise should **not** be a
> generall prerequisite before you can ask for help - even at r-devel (as
> opposed to r-help). However, AFAIK from past conversations with Duncan, the
> problem is indeed Windows-specific as on all his non-Windows infrastructure
> (definitely Linux, possibly OSX), everything went fine.
>
> 3) The same goes for the level of expertise in C. After all, R is not C. I
> totally agree that the more programming languages one knows, the better.
> But again: I don't think that knowing your way around C should be a
> prerequisite for asking for help when an *R function* interfacing C causes
> trouble. Requesting this would sort of oppose R's nature/paradigm of being
> an awesome "top-level" interfacing language. But I'll try to narrow the
> problem down on a C-level if I can help you with that.
>
> 4) Both Duncan as well as Hadley have suggested that libxml2 is indeed
> causing the problem. So trying to link against another build would possibly
> be a great way to start! How would I go about that?
>
> Thanks if you should take the time to further look into this!
> Janko
>
> On Mon, Dec 15, 2014 at 4:54 AM, Jeroen Ooms <jeroenooms at gmail.com> wrote:
>>
>> On Thu, Dec 11, 2014 at 12:13 PM, Janko Thyson <janko.thyson at gmail.com>
>> wrote:
>>>
>>> I'd so much appreciate if someone could have a look at this. If I can be
>>> of
>>> any help whatsoever, please let me know!
>>>
>>
>> Your current code uses various functions from XML and rvest so it is not
>> a *minimal* reproducible example. Even if you are unfamiliar with C, you
>> should be able to investigate exactly which function in the XML package you
>> think has issues. Once you found the problematic R function, inspect the
>> source code or use debug() to see if you can narrow it down even further,
>> preferably to a particular call to C.
>>
>> Moreover you should create a reproducible example that allows us (and
>> you) to test if this problem appears on other systems such as OSX or linux.
>> Development and debugging on Windows is very painful so your windows-only
>> example is not too helpful. Making people use windows is not a good
>> strategy for getting help.
>>
>> If the "leak" does not appear on other systems, it is likely a problem in
>> the libxml2 windows library on cran. In that case we can try to link
>> against another build. On the other hand, if the problem does appear across
>> systems, and you have provided a minimal reproducible example that
>> pinpoints the problematic C function, we can help you review/debug the code
>> C to see if/where some allocated object is not properly freed.
>>
>>
>>
>>

	[[alternative HTML version deleted]]


From janko.thyson at gmail.com  Mon Dec 15 12:25:22 2014
From: janko.thyson at gmail.com (Janko Thyson)
Date: Mon, 15 Dec 2014 12:25:22 +0100
Subject: [Rd] Significant memory leak when using XML on Windows
In-Reply-To: <CAGmpuejgfXyHG4N3gteZrohR51RQdhvcXD2JBcUC6fCFbpCtiw@mail.gmail.com>
References: <CAGmpuegAhR64N=2RGm3YrHVBz2ABOL=wBT2FdNjzvW8xAbcTUw@mail.gmail.com>
	<CABFfbXscR5BxyTj2n_Vm+yubv4065FPrbfRg3AEt7+BUmXdkfw@mail.gmail.com>
	<CAGmpuejgfXyHG4N3gteZrohR51RQdhvcXD2JBcUC6fCFbpCtiw@mail.gmail.com>
Message-ID: <CAGmpuehPqej=So4wzwZ4MWaJ5D7FH52PfTVxys6Fxe2CvcvpQQ@mail.gmail.com>

Sorry guys, didn't see your responses before sending mine.

Thanks jeroen!! I'll test your version today and get back to you.

Gesendet von meinem Smartphone
Am 15.12.2014 12:12 schrieb "Janko Thyson" <janko.thyson at gmail.com>:

> Thanks a lot for answering. Before I get into it, please note that
> everything below bears the big capture "Thanks for trying to help me at
> all".
>
> 1) Yeah, those examples - quite hard to satisfy everyone's needs ;-) While
> the one side complained that my past examples regarding this issue were not
> informative enough, others didn't like the more elaborated version (as
> seems to be the case for you). I simply tried to make it as easy as
> possible for people to see what's actually going on so they wouldn't have
> to program their own stuff for things like reading the actual memory
> consumed by the Rterm process etc.. If you prefer plain vanilla, though, I
> guess this would be it:
>
> memoryLeak <- function(
>   x = system.file("exampleData", "mtcars.xml", package="XML"),
>   n = 5000,
>   free_doc = FALSE,
>   rm_doc = FALSE,
>   use_gc = FALSE
> ) {
>   lapply(1:n, function(ii) {
>     doc <- xmlParse(x)
>     if (free_doc) free(doc)
>     if (rm_doc) rm(doc)
>     if (use_gc) gc()
>     NULL
>   })
> }
>
> 2) If I knew my way around OSX or Linux, I would be happy to go with your
> suggestions - but as I'm not, unfortunately that's out of reach for me. But
> IMO, a deeper level of cross-platform expertise should **not** be a
> generall prerequisite before you can ask for help - even at r-devel (as
> opposed to r-help). However, AFAIK from past conversations with Duncan, the
> problem is indeed Windows-specific as on all his non-Windows infrastructure
> (definitely Linux, possibly OSX), everything went fine.
>
> 3) The same goes for the level of expertise in C. After all, R is not C. I
> totally agree that the more programming languages one knows, the better.
> But again: I don't think that knowing your way around C should be a
> prerequisite for asking for help when an *R function* interfacing C causes
> trouble. Requesting this would sort of oppose R's nature/paradigm of being
> an awesome "top-level" interfacing language. But I'll try to narrow the
> problem down on a C-level if I can help you with that.
>
> 4) Both Duncan as well as Hadley have suggested that libxml2 is indeed
> causing the problem. So trying to link against another build would possibly
> be a great way to start! How would I go about that?
>
> Thanks if you should take the time to further look into this!
> Janko
>
> On Mon, Dec 15, 2014 at 4:54 AM, Jeroen Ooms <jeroenooms at gmail.com> wrote:
>>
>> On Thu, Dec 11, 2014 at 12:13 PM, Janko Thyson <janko.thyson at gmail.com>
>> wrote:
>>>
>>> I'd so much appreciate if someone could have a look at this. If I can be
>>> of
>>> any help whatsoever, please let me know!
>>>
>>
>> Your current code uses various functions from XML and rvest so it is not
>> a *minimal* reproducible example. Even if you are unfamiliar with C, you
>> should be able to investigate exactly which function in the XML package you
>> think has issues. Once you found the problematic R function, inspect the
>> source code or use debug() to see if you can narrow it down even further,
>> preferably to a particular call to C.
>>
>> Moreover you should create a reproducible example that allows us (and
>> you) to test if this problem appears on other systems such as OSX or linux.
>> Development and debugging on Windows is very painful so your windows-only
>> example is not too helpful. Making people use windows is not a good
>> strategy for getting help.
>>
>> If the "leak" does not appear on other systems, it is likely a problem in
>> the libxml2 windows library on cran. In that case we can try to link
>> against another build. On the other hand, if the problem does appear across
>> systems, and you have provided a minimal reproducible example that
>> pinpoints the problematic C function, we can help you review/debug the code
>> C to see if/where some allocated object is not properly freed.
>>
>>
>>
>>

	[[alternative HTML version deleted]]


From janko.thyson at gmail.com  Mon Dec 15 13:02:58 2014
From: janko.thyson at gmail.com (Janko Thyson)
Date: Mon, 15 Dec 2014 13:02:58 +0100
Subject: [Rd] Significant memory leak when using XML on Windows
In-Reply-To: <CAGmpuehPqej=So4wzwZ4MWaJ5D7FH52PfTVxys6Fxe2CvcvpQQ@mail.gmail.com>
References: <CAGmpuegAhR64N=2RGm3YrHVBz2ABOL=wBT2FdNjzvW8xAbcTUw@mail.gmail.com>
	<CABFfbXscR5BxyTj2n_Vm+yubv4065FPrbfRg3AEt7+BUmXdkfw@mail.gmail.com>
	<CAGmpuejgfXyHG4N3gteZrohR51RQdhvcXD2JBcUC6fCFbpCtiw@mail.gmail.com>
	<CAGmpuehPqej=So4wzwZ4MWaJ5D7FH52PfTVxys6Fxe2CvcvpQQ@mail.gmail.com>
Message-ID: <CAGmpuejtX4eJmW7G2F5pOyx=ps-11WJtM1Ww1Y6Arj9hY5uVZg@mail.gmail.com>

@Jeroen: nope, seems like the problem unfortunately persists:

require("XML")
getTaskMemoryByPid <- function(
  pid = Sys.getpid()
) {
  cmd <- sprintf("tasklist /FI \"pid eq %s\" /FO csv", pid)
  mem <- read.csv(text=shell(cmd, intern = TRUE),
stringsAsFactors=FALSE)[,5]
  mem <- as.numeric(gsub("\\.|\\s|K", "", mem))/1000
  mem
}
getCurrentMemoryStatus <- function() {
  mem_os  <- getTaskMemoryByPid()
  mem_r   <- memory.size()
  prof_1  <- memory.profile()
  list(r = mem_r, os = mem_os, ratio = mem_os/mem_r)
}
memoryLeak <- function(
  x = system.file("exampleData", "mtcars.xml", package="XML"),
  n = 5000,
  free_doc = FALSE,
  rm_doc = FALSE,
  use_gc = FALSE
) {
  lapply(1:n, function(ii) {
    doc <- xmlParse(x)
    if (free_doc) free(doc)
    if (rm_doc) rm(doc)
    if (use_gc) gc()
    NULL
  })
}
mem_1 <- getCurrentMemoryStatus()
memoryLeak(n = 50000, free_doc = TRUE, rm_doc = TRUE)
mem_2 <- getCurrentMemoryStatus()

> rbind(data.frame(mem_1), data.frame(mem_2))

      r      os    ratio
1 63.65  87.148 1.369175
2 97.63 122.160 1.251255



On Mon, Dec 15, 2014 at 12:25 PM, Janko Thyson <janko.thyson at gmail.com>
wrote:
>
> Sorry guys, didn't see your responses before sending mine.
>
> Thanks jeroen!! I'll test your version today and get back to you.
>
> Gesendet von meinem Smartphone
> Am 15.12.2014 12:12 schrieb "Janko Thyson" <janko.thyson at gmail.com>:
>
> > Thanks a lot for answering. Before I get into it, please note that
> > everything below bears the big capture "Thanks for trying to help me at
> > all".
> >
> > 1) Yeah, those examples - quite hard to satisfy everyone's needs ;-)
> While
> > the one side complained that my past examples regarding this issue were
> not
> > informative enough, others didn't like the more elaborated version (as
> > seems to be the case for you). I simply tried to make it as easy as
> > possible for people to see what's actually going on so they wouldn't have
> > to program their own stuff for things like reading the actual memory
> > consumed by the Rterm process etc.. If you prefer plain vanilla, though,
> I
> > guess this would be it:
> >
> > memoryLeak <- function(
> >   x = system.file("exampleData", "mtcars.xml", package="XML"),
> >   n = 5000,
> >   free_doc = FALSE,
> >   rm_doc = FALSE,
> >   use_gc = FALSE
> > ) {
> >   lapply(1:n, function(ii) {
> >     doc <- xmlParse(x)
> >     if (free_doc) free(doc)
> >     if (rm_doc) rm(doc)
> >     if (use_gc) gc()
> >     NULL
> >   })
> > }
> >
> > 2) If I knew my way around OSX or Linux, I would be happy to go with your
> > suggestions - but as I'm not, unfortunately that's out of reach for me.
> But
> > IMO, a deeper level of cross-platform expertise should **not** be a
> > generall prerequisite before you can ask for help - even at r-devel (as
> > opposed to r-help). However, AFAIK from past conversations with Duncan,
> the
> > problem is indeed Windows-specific as on all his non-Windows
> infrastructure
> > (definitely Linux, possibly OSX), everything went fine.
> >
> > 3) The same goes for the level of expertise in C. After all, R is not C.
> I
> > totally agree that the more programming languages one knows, the better.
> > But again: I don't think that knowing your way around C should be a
> > prerequisite for asking for help when an *R function* interfacing C
> causes
> > trouble. Requesting this would sort of oppose R's nature/paradigm of
> being
> > an awesome "top-level" interfacing language. But I'll try to narrow the
> > problem down on a C-level if I can help you with that.
> >
> > 4) Both Duncan as well as Hadley have suggested that libxml2 is indeed
> > causing the problem. So trying to link against another build would
> possibly
> > be a great way to start! How would I go about that?
> >
> > Thanks if you should take the time to further look into this!
> > Janko
> >
> > On Mon, Dec 15, 2014 at 4:54 AM, Jeroen Ooms <jeroenooms at gmail.com>
> wrote:
> >>
> >> On Thu, Dec 11, 2014 at 12:13 PM, Janko Thyson <janko.thyson at gmail.com>
> >> wrote:
> >>>
> >>> I'd so much appreciate if someone could have a look at this. If I can
> be
> >>> of
> >>> any help whatsoever, please let me know!
> >>>
> >>
> >> Your current code uses various functions from XML and rvest so it is not
> >> a *minimal* reproducible example. Even if you are unfamiliar with C, you
> >> should be able to investigate exactly which function in the XML package
> you
> >> think has issues. Once you found the problematic R function, inspect the
> >> source code or use debug() to see if you can narrow it down even
> further,
> >> preferably to a particular call to C.
> >>
> >> Moreover you should create a reproducible example that allows us (and
> >> you) to test if this problem appears on other systems such as OSX or
> linux.
> >> Development and debugging on Windows is very painful so your
> windows-only
> >> example is not too helpful. Making people use windows is not a good
> >> strategy for getting help.
> >>
> >> If the "leak" does not appear on other systems, it is likely a problem
> in
> >> the libxml2 windows library on cran. In that case we can try to link
> >> against another build. On the other hand, if the problem does appear
> across
> >> systems, and you have provided a minimal reproducible example that
> >> pinpoints the problematic C function, we can help you review/debug the
> code
> >> C to see if/where some allocated object is not properly freed.
> >>
> >>
> >>
> >>
>
>         [[alternative HTML version deleted]]
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>

	[[alternative HTML version deleted]]


From spencer.graves at prodsyse.com  Mon Dec 15 18:15:48 2014
From: spencer.graves at prodsyse.com (Spencer Graves)
Date: Mon, 15 Dec 2014 09:15:48 -0800
Subject: [Rd] Making iconv portable?
Message-ID: <B78B80DA-5CDE-4E8C-A3FF-EE0A8BF8CC4C@prodsyse.com>

Hello, All:  


	  What would it take to make ?iconv? portable?  


	  I ask, because I want to convert accented characters to vanilla ASCII, thereby converting, e.g., ?Ra?l? to ?Raul?, and Milan Bouchet-Valet suggested on R-help that I use 'iconv(x, ?",  "ASCII//TRANSLIT?)?.  This worked under Windows but failed on Linux and Mac.  It?s part of the ?subNonStandardCharacters? function in the Ecfun package. The development version on R-Forge uses this and returns ?Raul? under Windows and NA under Mac OS X (and presumably also Linux).    


	 The ?iconv? R code merely calls compiled code, which I?ve used very little in 30 years.   


	  Thanks, 
	  Spencer 



> On Nov 30, 2014, at 2:32 AM, Spencer Graves <spencer.graves at structuremonitoring.com <mailto:spencer.graves at structuremonitoring.com>> wrote:
> 
> Wonderful.  Thanks very much.  Spencer
> 
> 
> On 11/30/2014 2:25 AM, Milan Bouchet-Valat wrote:

	[[alternative HTML version deleted]]


From Kurt.Hornik at wu.ac.at  Mon Dec 15 18:21:19 2014
From: Kurt.Hornik at wu.ac.at (Kurt Hornik)
Date: Mon, 15 Dec 2014 18:21:19 +0100
Subject: [Rd] Making iconv portable?
In-Reply-To: <B78B80DA-5CDE-4E8C-A3FF-EE0A8BF8CC4C@prodsyse.com>
References: <B78B80DA-5CDE-4E8C-A3FF-EE0A8BF8CC4C@prodsyse.com>
Message-ID: <21647.6287.617527.684671@fangorn.hornik.net>

>>>>> Spencer Graves writes:

> Hello, All:  
> 	  What would it take to make ?iconv? portable?  


> 	  I ask, because I want to convert accented characters to
> 	  vanilla ASCII, thereby converting, e.g., ?Ra?l? to ?Raul?, and
> 	  Milan Bouchet-Valet suggested on R-help that I use 'iconv(x,
> 	  ?", "ASCII//TRANSLIT?)?.  This worked under Windows but failed
> 	  on Linux and Mac.  It?s part of the ?subNonStandardCharacters?
> 	  function in the Ecfun package. The development version on
> 	  R-Forge uses this and returns ?Raul? under Windows and NA
> 	  under Mac OS X (and presumably also Linux).

Hmm.

R> iconv("Ra?l", "", "ASCII//TRANSLIT")
[1] "Raul"

seems to work for me on Linux ...

-k


> 	 The ?iconv? R code merely calls compiled code, which I?ve used very little in 30 years.   


> 	  Thanks, 
> 	  Spencer 



>> On Nov 30, 2014, at 2:32 AM, Spencer Graves <spencer.graves at structuremonitoring.com <mailto:spencer.graves at structuremonitoring.com>> wrote:
>> 
>> Wonderful.  Thanks very much.  Spencer
>> 
>> 
>> On 11/30/2014 2:25 AM, Milan Bouchet-Valat wrote:

> 	[[alternative HTML version deleted]]

> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From simon.urbanek at r-project.org  Mon Dec 15 19:13:17 2014
From: simon.urbanek at r-project.org (Simon Urbanek)
Date: Mon, 15 Dec 2014 13:13:17 -0500
Subject: [Rd] Making iconv portable?
In-Reply-To: <21647.6287.617527.684671@fangorn.hornik.net>
References: <B78B80DA-5CDE-4E8C-A3FF-EE0A8BF8CC4C@prodsyse.com>
	<21647.6287.617527.684671@fangorn.hornik.net>
Message-ID: <FA48E51C-BC75-41FC-8338-122F48CA545E@r-project.org>


> On Dec 15, 2014, at 12:21 PM, Kurt Hornik <Kurt.Hornik at wu.ac.at> wrote:
> 
>>>>>> Spencer Graves writes:
> 
>> Hello, All:  
>> 	  What would it take to make ?iconv? portable?  
> 
> 
>> 	  I ask, because I want to convert accented characters to
>> 	  vanilla ASCII, thereby converting, e.g., ?Ra?l? to ?Raul?, and
>> 	  Milan Bouchet-Valet suggested on R-help that I use 'iconv(x,
>> 	  ?", "ASCII//TRANSLIT?)?.  This worked under Windows but failed
>> 	  on Linux and Mac.  It?s part of the ?subNonStandardCharacters?
>> 	  function in the Ecfun package. The development version on
>> 	  R-Forge uses this and returns ?Raul? under Windows and NA
>> 	  under Mac OS X (and presumably also Linux).
> 
> Hmm.
> 
> R> iconv("Ra?l", "", "ASCII//TRANSLIT")
> [1] "Raul"
> 
> seems to work for me on Linux ...
> 

also on OS X:

> iconv("Ra?l", "", "ASCII//TRANSLIT")
[1] "Ra'ul"



> -k
> 
> 
>> 	 The ?iconv? R code merely calls compiled code, which I?ve used very little in 30 years.   
> 
> 
>> 	  Thanks, 
>> 	  Spencer 
> 
> 
> 
>>> On Nov 30, 2014, at 2:32 AM, Spencer Graves <spencer.graves at structuremonitoring.com <mailto:spencer.graves at structuremonitoring.com>> wrote:
>>> 
>>> Wonderful.  Thanks very much.  Spencer
>>> 
>>> 
>>> On 11/30/2014 2:25 AM, Milan Bouchet-Valat wrote:
> 
>> 	[[alternative HTML version deleted]]
> 
>> ______________________________________________
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From spencer.graves at prodsyse.com  Mon Dec 15 19:37:51 2014
From: spencer.graves at prodsyse.com (Spencer Graves)
Date: Mon, 15 Dec 2014 10:37:51 -0800
Subject: [Rd] Making iconv portable?
In-Reply-To: <FA48E51C-BC75-41FC-8338-122F48CA545E@r-project.org>
References: <B78B80DA-5CDE-4E8C-A3FF-EE0A8BF8CC4C@prodsyse.com>
	<21647.6287.617527.684671@fangorn.hornik.net>
	<FA48E51C-BC75-41FC-8338-122F48CA545E@r-project.org>
Message-ID: <9221EF85-3552-46E0-A003-CC6C3C40840F@prodsyse.com>


> On Dec 15, 2014, at 10:13 AM, Simon Urbanek <simon.urbanek at r-project.org> wrote:
> 
>> 
>> On Dec 15, 2014, at 12:21 PM, Kurt Hornik <Kurt.Hornik at wu.ac.at> wrote:
>> 
>>>>>>> Spencer Graves writes:
>> 
>>> Hello, All:  
>>> 	  What would it take to make ?iconv? portable?  
>> 
>> 
>>> 	  I ask, because I want to convert accented characters to
>>> 	  vanilla ASCII, thereby converting, e.g., ?Ra?l? to ?Raul?, and
>>> 	  Milan Bouchet-Valet suggested on R-help that I use 'iconv(x,
>>> 	  ?", "ASCII//TRANSLIT?)?.  This worked under Windows but failed
>>> 	  on Linux and Mac.  It?s part of the ?subNonStandardCharacters?
>>> 	  function in the Ecfun package. The development version on
>>> 	  R-Forge uses this and returns ?Raul? under Windows and NA
>>> 	  under Mac OS X (and presumably also Linux).
>> 
>> Hmm.
>> 
>> R> iconv("Ra?l", "", "ASCII//TRANSLIT")
>> [1] "Raul"
>> 
>> seems to work for me on Linux ...
>> 
> 
> also on OS X:
> 
>> iconv("Ra?l", "", "ASCII//TRANSLIT")
> [1] ?Ra'ul"


	  Thanks for the replies.  I should have checked my examples more carefully.  Consider the following example and a slight modification from help(?iconv?):  


> x <- c("Ekstr\xf8m", "J\xf6reskog", "bi\xdfchen Z\xfcrcher")
> Encoding(x) <- "latin1"
> x
[1] "Ekstr?m"               "J?reskog"              "bi?chen Z?rcher"      
> iconv(x, "latin1", "ASCII//TRANSLIT")  # platform-dependent
[1] "Ekstrom"            "J\"oreskog"         "bisschen Z\"urcher"
> 
> x <- c("Ekstr\xf8m", "J\xf6reskog", "bi\xdfchen Z\xfcrcher")
> x
[1] "Ekstr\xf8m"            "J\xf6reskog"           "bi\xdfchen Z\xfcrcher"
> iconv(x, "", "ASCII//TRANSLIT")  # platform-dependent
[1] NA NA NA 


	  This suggests a two-step fix to my problem:  (1) Check Encoding(x) and set to ?latin1? if it?s ?unknown?.  (2) Delete any new \? added by iconv.  


	  Thanks again, 
	  Spencer 

> 
> 
> 
>> -k
>> 
>> 
>>> 	 The ?iconv? R code merely calls compiled code, which I?ve used very little in 30 years.   
>> 
>> 
>>> 	  Thanks, 
>>> 	  Spencer 
>> 
>> 
>> 
>>>> On Nov 30, 2014, at 2:32 AM, Spencer Graves <spencer.graves at structuremonitoring.com <mailto:spencer.graves at structuremonitoring.com>> wrote:
>>>> 
>>>> Wonderful.  Thanks very much.  Spencer
>>>> 
>>>> 
>>>> On 11/30/2014 2:25 AM, Milan Bouchet-Valat wrote:
>> 
>>> 	[[alternative HTML version deleted]]
>> 
>>> ______________________________________________
>>> R-devel at r-project.org mailing list
>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>> 
>> ______________________________________________
>> R-devel at r-project.org <mailto:R-devel at r-project.org> mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel <https://stat.ethz.ch/mailman/listinfo/r-devel>

	[[alternative HTML version deleted]]


From simon.urbanek at r-project.org  Mon Dec 15 19:49:16 2014
From: simon.urbanek at r-project.org (Simon Urbanek)
Date: Mon, 15 Dec 2014 13:49:16 -0500
Subject: [Rd] Making iconv portable?
In-Reply-To: <9221EF85-3552-46E0-A003-CC6C3C40840F@prodsyse.com>
References: <B78B80DA-5CDE-4E8C-A3FF-EE0A8BF8CC4C@prodsyse.com>
	<21647.6287.617527.684671@fangorn.hornik.net>
	<FA48E51C-BC75-41FC-8338-122F48CA545E@r-project.org>
	<9221EF85-3552-46E0-A003-CC6C3C40840F@prodsyse.com>
Message-ID: <9A0DB466-C346-4121-A21E-5FBAD2754737@r-project.org>

On Dec 15, 2014, at 1:37 PM, Spencer Graves <spencer.graves at prodsyse.com> wrote:
> 
> 
>> On Dec 15, 2014, at 10:13 AM, Simon Urbanek <simon.urbanek at r-project.org> wrote:
>> 
>>> 
>>> On Dec 15, 2014, at 12:21 PM, Kurt Hornik <Kurt.Hornik at wu.ac.at> wrote:
>>> 
>>>>>>>> Spencer Graves writes:
>>> 
>>>> Hello, All:  
>>>> 	  What would it take to make ?iconv? portable?  
>>> 
>>> 
>>>> 	  I ask, because I want to convert accented characters to
>>>> 	  vanilla ASCII, thereby converting, e.g., ?Ra?l? to ?Raul?, and
>>>> 	  Milan Bouchet-Valet suggested on R-help that I use 'iconv(x,
>>>> 	  ?", "ASCII//TRANSLIT?)?.  This worked under Windows but failed
>>>> 	  on Linux and Mac.  It?s part of the ?subNonStandardCharacters?
>>>> 	  function in the Ecfun package. The development version on
>>>> 	  R-Forge uses this and returns ?Raul? under Windows and NA
>>>> 	  under Mac OS X (and presumably also Linux).
>>> 
>>> Hmm.
>>> 
>>> R> iconv("Ra?l", "", "ASCII//TRANSLIT")
>>> [1] "Raul"
>>> 
>>> seems to work for me on Linux ...
>>> 
>> 
>> also on OS X:
>> 
>>> iconv("Ra?l", "", "ASCII//TRANSLIT")
>> [1] ?Ra'ul"
> 
> 
> 	  Thanks for the replies.  I should have checked my examples more carefully.  Consider the following example and a slight modification from help(?iconv?):  
> 
> 
> > x <- c("Ekstr\xf8m", "J\xf6reskog", "bi\xdfchen Z\xfcrcher")
> > Encoding(x) <- "latin1"
> > x
> [1] "Ekstr?m"               "J?reskog"              "bi?chen Z?rcher"      
> > iconv(x, "latin1", "ASCII//TRANSLIT")  # platform-dependent
> [1] "Ekstrom"            "J\"oreskog"         "bisschen Z\"urcher"
> > 
> > x <- c("Ekstr\xf8m", "J\xf6reskog", "bi\xdfchen Z\xfcrcher")
> > x
> [1] "Ekstr\xf8m"            "J\xf6reskog"           "bi\xdfchen Z\xfcrcher"
> > iconv(x, "", "ASCII//TRANSLIT")  # platform-dependent
> [1] NA NA NA 
> 
> 
> 	  This suggests a two-step fix to my problem:  (1) Check Encoding(x) and set to ?latin1? if it?s ?unknown?.

Well, that depends heavily on your source. In the above it is hand-crafted latin1 so if you don't declare it, the native encoding will be assumed - which can be anything and has nothing to do with your actual input in this particular case where you hand-constructed latin1.


>  (2) Delete any new \? added by iconv.  
> 

The whole point of translit is to create combinations of ASCII characters that represent the unicode characters, so " is just one many characters that can be used.

Cheers,
S


> 
> 	  Thanks again, 
> 	  Spencer 
> 
>> 
>> 
>> 
>>> -k
>>> 
>>> 
>>>> 	 The ?iconv? R code merely calls compiled code, which I?ve used very little in 30 years.   
>>> 
>>> 
>>>> 	  Thanks, 
>>>> 	  Spencer 
>>> 
>>> 
>>> 
>>>>> On Nov 30, 2014, at 2:32 AM, Spencer Graves <spencer.graves at structuremonitoring.com <mailto:spencer.graves at structuremonitoring.com>> wrote:
>>>>> 
>>>>> Wonderful.  Thanks very much.  Spencer
>>>>> 
>>>>> 
>>>>> On 11/30/2014 2:25 AM, Milan Bouchet-Valat wrote:
>>> 
>>>> 	[[alternative HTML version deleted]]
>>> 
>>>> ______________________________________________
>>>> R-devel at r-project.org mailing list
>>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>> 
>>> ______________________________________________
>>> R-devel at r-project.org mailing list
>>> https://stat.ethz.ch/mailman/listinfo/r-devel
> 


From dromedario.dei.sogni at gmail.com  Mon Dec 15 18:57:55 2014
From: dromedario.dei.sogni at gmail.com (C)
Date: Mon, 15 Dec 2014 18:57:55 +0100
Subject: [Rd] Building R on Windows: mkdir of Rtools creates directories
 with read-only permissions [WEIRD]
Message-ID: <CAN3ha6gEFBMUtCXz4PSt0b75A4nVOZ6Ft1iSuV_jWCMhpy=6dg@mail.gmail.com>

With reference to the issue first reported by Henrik Bengtsson (see
https://stat.ethz.ch/pipermail/r-devel/2014-January/068184.html), I would
like to report that I am experiencing the very same problem when building R
3.1.2 on Windows platform. Fortunately, the same workaround devised by
Henrik works in my case too.
I am using Windows 7 x64 with NTFS.

	[[alternative HTML version deleted]]


From nalimilan at club.fr  Mon Dec 15 23:10:14 2014
From: nalimilan at club.fr (Milan Bouchet-Valat)
Date: Mon, 15 Dec 2014 23:10:14 +0100
Subject: [Rd] Making iconv portable?
In-Reply-To: <9A0DB466-C346-4121-A21E-5FBAD2754737@r-project.org>
References: <B78B80DA-5CDE-4E8C-A3FF-EE0A8BF8CC4C@prodsyse.com>
	<21647.6287.617527.684671@fangorn.hornik.net>
	<FA48E51C-BC75-41FC-8338-122F48CA545E@r-project.org>
	<9221EF85-3552-46E0-A003-CC6C3C40840F@prodsyse.com>
	<9A0DB466-C346-4121-A21E-5FBAD2754737@r-project.org>
Message-ID: <1418681414.6068.30.camel@club.fr>

Le lundi 15 d?cembre 2014 ? 13:49 -0500, Simon Urbanek a ?crit :
> On Dec 15, 2014, at 1:37 PM, Spencer Graves <spencer.graves at prodsyse.com> wrote:
> > 
> > 
> >> On Dec 15, 2014, at 10:13 AM, Simon Urbanek <simon.urbanek at r-project.org> wrote:
> >> 
> >>> 
> >>> On Dec 15, 2014, at 12:21 PM, Kurt Hornik <Kurt.Hornik at wu.ac.at> wrote:
> >>> 
> >>>>>>>> Spencer Graves writes:
> >>> 
> >>>> Hello, All:  
> >>>> 	  What would it take to make ?iconv? portable?  
> >>> 
> >>> 
> >>>> 	  I ask, because I want to convert accented characters to
> >>>> 	  vanilla ASCII, thereby converting, e.g., ?Ra?l? to ?Raul?, and
> >>>> 	  Milan Bouchet-Valet suggested on R-help that I use 'iconv(x,
> >>>> 	  ?", "ASCII//TRANSLIT?)?.  This worked under Windows but failed
> >>>> 	  on Linux and Mac.  It?s part of the ?subNonStandardCharacters?
> >>>> 	  function in the Ecfun package. The development version on
> >>>> 	  R-Forge uses this and returns ?Raul? under Windows and NA
> >>>> 	  under Mac OS X (and presumably also Linux).
> >>> 
> >>> Hmm.
> >>> 
> >>> R> iconv("Ra?l", "", "ASCII//TRANSLIT")
> >>> [1] "Raul"
> >>> 
> >>> seems to work for me on Linux ...
> >>> 
> >> 
> >> also on OS X:
> >> 
> >>> iconv("Ra?l", "", "ASCII//TRANSLIT")
> >> [1] ?Ra'ul"
> > 
> > 
> > 	  Thanks for the replies.  I should have checked my examples more carefully.  Consider the following example and a slight modification from help(?iconv?):  
> > 
> > 
> > > x <- c("Ekstr\xf8m", "J\xf6reskog", "bi\xdfchen Z\xfcrcher")
> > > Encoding(x) <- "latin1"
> > > x
> > [1] "Ekstr?m"               "J?reskog"              "bi?chen Z?rcher"      
> > > iconv(x, "latin1", "ASCII//TRANSLIT")  # platform-dependent
> > [1] "Ekstrom"            "J\"oreskog"         "bisschen Z\"urcher"
> > > 
> > > x <- c("Ekstr\xf8m", "J\xf6reskog", "bi\xdfchen Z\xfcrcher")
> > > x
> > [1] "Ekstr\xf8m"            "J\xf6reskog"           "bi\xdfchen Z\xfcrcher"
> > > iconv(x, "", "ASCII//TRANSLIT")  # platform-dependent
> > [1] NA NA NA 
> > 
> > 
> > 	  This suggests a two-step fix to my problem:  (1) Check Encoding(x) and set to ?latin1? if it?s ?unknown?.
> 
> Well, that depends heavily on your source. In the above it is hand-crafted latin1 so if you don't declare it, the native encoding will be assumed - which can be anything and has nothing to do with your actual input in this particular case where you hand-constructed latin1.
> 
> 
> >  (2) Delete any new \? added by iconv.  
> > 
> 
> The whole point of translit is to create combinations of ASCII
> characters that represent the unicode characters, so " is just one
> many characters that can be used.
But it's quite unexpected that ? is transliterated to "o and ? to 'u.
Looks like iconv on OS X has a different idea of what ASCII
transliteration means than on Linux and Windows...

Anyway it's easy to remove " and ' if needed.


Regards

> Cheers,
> S
> 
> 
> > 
> > 	  Thanks again, 
> > 	  Spencer 
> > 
> >> 
> >> 
> >> 
> >>> -k
> >>> 
> >>> 
> >>>> 	 The ?iconv? R code merely calls compiled code, which I?ve used very little in 30 years.   
> >>> 
> >>> 
> >>>> 	  Thanks, 
> >>>> 	  Spencer 
> >>> 
> >>> 
> >>> 
> >>>>> On Nov 30, 2014, at 2:32 AM, Spencer Graves <spencer.graves at structuremonitoring.com <mailto:spencer.graves at structuremonitoring.com>> wrote:
> >>>>> 
> >>>>> Wonderful.  Thanks very much.  Spencer
> >>>>> 
> >>>>> 
> >>>>> On 11/30/2014 2:25 AM, Milan Bouchet-Valat wrote:
> >>> 
> >>>> 	[[alternative HTML version deleted]]
> >>> 
> >>>> ______________________________________________
> >>>> R-devel at r-project.org mailing list
> >>>> https://stat.ethz.ch/mailman/listinfo/r-devel
> >>> 
> >>> ______________________________________________
> >>> R-devel at r-project.org mailing list
> >>> https://stat.ethz.ch/mailman/listinfo/r-devel
> > 
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From maechler at stat.math.ethz.ch  Tue Dec 16 09:18:34 2014
From: maechler at stat.math.ethz.ch (Martin Maechler)
Date: Tue, 16 Dec 2014 09:18:34 +0100
Subject: [Rd] Making iconv portable?
In-Reply-To: <21647.6287.617527.684671@fangorn.hornik.net>
References: <B78B80DA-5CDE-4E8C-A3FF-EE0A8BF8CC4C@prodsyse.com>
	<21647.6287.617527.684671@fangorn.hornik.net>
Message-ID: <21647.60122.985407.280694@stat.math.ethz.ch>

>>>>> Kurt Hornik <Kurt.Hornik at wu.ac.at>
>>>>>     on Mon, 15 Dec 2014 18:21:19 +0100 writes:

>>>>> Spencer Graves writes:
    >> Hello, All: What would it take to make ?iconv? portable?


    >> I ask, because I want to convert accented characters to
    >> vanilla ASCII, thereby converting, e.g., ?Ra?l? to
    >> ?Raul?, and Milan Bouchet-Valet suggested on R-help that
    >> I use 'iconv(x, ?", "ASCII//TRANSLIT?)?.  This worked
    >> under Windows but failed on Linux and Mac.  It?s part of
    >> the ?subNonStandardCharacters? function in the Ecfun
    >> package. The development version on R-Forge uses this and
    >> returns ?Raul? under Windows and NA under Mac OS X (and
    >> presumably also Linux).

    > Hmm.

    R> iconv("Ra?l", "", "ASCII//TRANSLIT")
    > [1] "Raul"

    > seems to work for me on Linux ...

and me:

> iconv("Martin M?chler, Z?rich.  ?Espa?a, Ol?!", "", "ASCII//TRANSLIT")
[1] "Martin Maechler, Zuerich.  ?Espana, Ole!"


    >> The ?iconv? R code merely calls compiled code, which I?ve
    >> used very little in 30 years.


    >> Thanks, Spencer



    >>> On Nov 30, 2014, at 2:32 AM, Spencer Graves
    >>> <spencer.graves at structuremonitoring.com
    >>> <mailto:spencer.graves at structuremonitoring.com>> wrote:
    >>> 
    >>> Wonderful.  Thanks very much.  Spencer
    >>> 
    >>> 
    >>> On 11/30/2014 2:25 AM, Milan Bouchet-Valat wrote:

    >> [[alternative HTML version deleted]]

    >> ______________________________________________
    >> R-devel at r-project.org mailing list
    >> https://stat.ethz.ch/mailman/listinfo/r-devel

    > ______________________________________________
    > R-devel at r-project.org mailing list
    > https://stat.ethz.ch/mailman/listinfo/r-devel


From mick.jordan at oracle.com  Wed Dec 17 05:20:14 2014
From: mick.jordan at oracle.com (Mick Jordan)
Date: Tue, 16 Dec 2014 20:20:14 -0800
Subject: [Rd] vapply definition question
Message-ID: <5491047E.2060704@oracle.com>

vapply <- function(X, FUN, FUN.VALUE, ...,  USE.NAMES = TRUE)
{
     FUN <- match.fun(FUN)
     if(!is.vector(X) || is.object(X)) X <- as.list(X)
     .Internal(vapply(X, FUN, FUN.VALUE, USE.NAMES))
}

This is an implementor question. Basically, what happened to the '...' 
args in the call to the .Internal? cf lapply:, where the ... is passed.

lapply <- function (X, FUN, ...)
{
     FUN <- match.fun(FUN)
     ## internal code handles all vector types, including expressions
     ## However, it would be OK to have attributes which is.vector
     ## disallows.
     if(!is.vector(X) || is.object(X)) X <- as.list(X)
     ##TODO
     ## Note ... is not passed down.  Rather the internal code
     ## evaluates FUN(X[i], ...) in the frame of this function
     .Internal(lapply(X, FUN, ...))
}

Now both of these functions work when extra arguments are passed, so 
evidently the implementation can function whether the .Internal "call" 
contains the ... or not. I found other cases, notably in S3 generic 
methods where the ... is not passed down.

So, essentially, my question is whether the vapply code "should" be 
changed or whether a .Internal implementation should always assume an 
implicit ... regardless of the code, if the semantics requires it.

Thanks
Mick


From mtmorgan at fredhutch.org  Wed Dec 17 06:54:15 2014
From: mtmorgan at fredhutch.org (Martin Morgan)
Date: Tue, 16 Dec 2014 21:54:15 -0800
Subject: [Rd] vapply definition question
In-Reply-To: <5491047E.2060704@oracle.com>
References: <5491047E.2060704@oracle.com>
Message-ID: <54911A87.8010905@fredhutch.org>

On 12/16/2014 08:20 PM, Mick Jordan wrote:
> vapply <- function(X, FUN, FUN.VALUE, ...,  USE.NAMES = TRUE)
> {
>      FUN <- match.fun(FUN)
>      if(!is.vector(X) || is.object(X)) X <- as.list(X)
>      .Internal(vapply(X, FUN, FUN.VALUE, USE.NAMES))
> }
>
> This is an implementor question. Basically, what happened to the '...' args in
> the call to the .Internal? cf lapply:, where the ... is passed.
>
> lapply <- function (X, FUN, ...)
> {
>      FUN <- match.fun(FUN)
>      ## internal code handles all vector types, including expressions
>      ## However, it would be OK to have attributes which is.vector
>      ## disallows.
>      if(!is.vector(X) || is.object(X)) X <- as.list(X)
>      ##TODO
>      ## Note ... is not passed down.  Rather the internal code
>      ## evaluates FUN(X[i], ...) in the frame of this function
>      .Internal(lapply(X, FUN, ...))
> }
>
> Now both of these functions work when extra arguments are passed, so evidently
> the implementation can function whether the .Internal "call" contains the ... or
> not. I found other cases, notably in S3 generic methods where the ... is not
> passed down.

Hi Mick --

You can see that the source code doesn't contain '...' in the final line

~/src/R-devel/src/library/base/R$ svn annotate lapply.R | grep Internal\(l
  38631     ripley     .Internal(lapply(X, FUN))

and that it's been there for a long time (I'd guess 'forever')

~/src/R-devel/src/library/base/R$ svn log -r38631
------------------------------------------------------------------------
r38631 | ripley | 2006-07-17 14:30:55 -0700 (Mon, 17 Jul 2006) | 2 lines

another attempt at a faster lapply

------------------------------------------------------------------------

so I guess you're looking at a modified version of the function... The 
implementation detail is in the comment -- FUN(X[i], ...) is evaluated in the 
frame of lapply.

Martin Morgan

>
> So, essentially, my question is whether the vapply code "should" be changed or
> whether a .Internal implementation should always assume an implicit ...
> regardless of the code, if the semantics requires it.
>
> Thanks
> Mick
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


-- 
Computational Biology / Fred Hutchinson Cancer Research Center
1100 Fairview Ave. N.
PO Box 19024 Seattle, WA 98109

Location: Arnold Building M1 B861
Phone: (206) 667-2793


From radford at cs.toronto.edu  Wed Dec 17 16:39:55 2014
From: radford at cs.toronto.edu (Radford Neal)
Date: Wed, 17 Dec 2014 10:39:55 -0500
Subject: [Rd]  vapply definition question
In-Reply-To: <mailman.15.1418814005.8005.r-devel@r-project.org>
References: <mailman.15.1418814005.8005.r-devel@r-project.org>
Message-ID: <20141217153955.GA2866@cs.toronto.edu>

> so I guess you're looking at a modified version of the function... The 
> implementation detail is in the comment -- FUN(X[i], ...) is evaluated in the 
> frame of lapply.
> 
> Martin Morgan

You may find it interesting that in the latest version of pqR, lapply is made
faster in the case where no ... is used by then not actuallly passing ... to
FUN, which significatly reduces call overhead.  See the code at

  https://github.com/radfordneal/pqR/blob/Release-2014-11-16/src/main/apply.c


From mick.jordan at oracle.com  Wed Dec 17 18:17:29 2014
From: mick.jordan at oracle.com (Mick Jordan)
Date: Wed, 17 Dec 2014 09:17:29 -0800
Subject: [Rd] vapply definition question
In-Reply-To: <54911A87.8010905@fredhutch.org>
References: <5491047E.2060704@oracle.com> <54911A87.8010905@fredhutch.org>
Message-ID: <5491BAA9.9040903@oracle.com>


On 12/16/14, 9:54 PM, Martin Morgan wrote:
> Hi Mick --
>
> You can see that the source code doesn't contain '...' in the final line
>
> ~/src/R-devel/src/library/base/R$ svn annotate lapply.R | grep 
> Internal\(l
>  38631     ripley     .Internal(lapply(X, FUN))
>
> and that it's been there for a long time (I'd guess 'forever')
>
> ~/src/R-devel/src/library/base/R$ svn log -r38631
> ------------------------------------------------------------------------
> r38631 | ripley | 2006-07-17 14:30:55 -0700 (Mon, 17 Jul 2006) | 2 lines
>
> another attempt at a faster lapply
>
> ------------------------------------------------------------------------
>
> so I guess you're looking at a modified version of the function... The 
> implementation detail is in the comment -- FUN(X[i], ...) is evaluated 
> in the frame of lapply.
>
Oh dear, my apologies. It seems that, indeed, we had modified lapply.R 
(and sapply.R) to add the "...". Ironic in that I am going through the 
base code and trying to remove all the changes that we made as our 
implementation was developing, and somehow I missed that one. It's a 
minor nuisance to have to special case the "..." not being passed, but 
we can work around it.

Thanks
Mick


From xie at yihui.name  Thu Dec 18 06:17:08 2014
From: xie at yihui.name (Yihui Xie)
Date: Wed, 17 Dec 2014 23:17:08 -0600
Subject: [Rd] UTF8 markdown vignette
In-Reply-To: <54883A34.5040207@gmail.com>
References: <AA818EAD2576BC488B4F623941DA7427F3C7D1D8@inbomail.inbo.be>
	<5486C91E.90409@gmail.com>
	<AA818EAD2576BC488B4F623941DA7427F3C7D24C@inbomail.inbo.be>
	<5486F3B2.6060507@gmail.com>
	<CANROs4eKia1xaZrTH47tTiuL40eGW11Yrociqt5-rVcwJU0WGA@mail.gmail.com>
	<AA818EAD2576BC488B4F623941DA7427F3C7DFD4@inbomail.inbo.be>
	<54876CBE.9020207@gmail.com>
	<CANROs4ff+oo7rpVDL2f6+edxpd6k69TWuEchrk3y277RcRpteQ@mail.gmail.com>
	<54883A34.5040207@gmail.com>
Message-ID: <CANROs4eN1wsaEH_d_S6d56GFO_KRXPY32x10YEznWiTTkPwpWQ@mail.gmail.com>

For the record, I saw a change had been made in R-devel:
https://github.com/wch/r-source/commit/d53b098 (Thanks, Duncan)
Meanwhile, I also made a change in knitr to assume UTF-8 unless R
passes an encoding to the vignette engine:
https://github.com/yihui/knitr/commit/23c6c8e2 Both will solve the
original problem, but apparently the former one is the ideal fix.

Regards,
Yihui
--
Yihui Xie <xieyihui at gmail.com>
Web: http://yihui.name


On Wed, Dec 10, 2014 at 6:19 AM, Duncan Murdoch
<murdoch.duncan at gmail.com> wrote:
> On 09/12/2014, 10:36 PM, Yihui Xie wrote:
>> I took a look at the R source and I realized that the encoding was
>> actually never passed to the vignette engine:
>> https://github.com/wch/r-source/blob/e721ef5f4/src/library/tools/R/Vignettes.R#L507
>> Apparently only the file and quiet arguments are passed to the
>> vignette engine. Did I miss anything?
>
> I think it's actually a little messier than that:  sometimes the
> encoding is passed (e.g. by tools:::.run_one_vignette, used in R CMD
> check), but not always.  Here's what I think should happen instead:
>
> When building a vignette in a package, R knows the encoding declared for
> the package, so it should assume this as the default for the vignette.
> If nothing is declared, it should assume "native.enc", i.e. whatever is
> the native encoding on the machine it's running on.
>
> For each vignette, at the same time as it determines the vignette
> engine, it should see whether there is a declared encoding within the
> vignette.
>
> When it calls the engine, it should pass an encoding (and it should be a
> legal one, e.g. UTF-8, not utf8).
>
> Unless I notice something missing when I do this, or someone else tells
> me something that's missing, I'll try to make the changes above in
> R-devel and R-patched sometime before 3.1.3 is released.
>
> In the meantime, unless declaring a dependence on R >= 3.1.3, vignette
> engines should determine the encoding themselves whenever they are
> called without an "encoding" argument.
>
> Duncan Murdoch


From pbruneau at gmail.com  Thu Dec 18 09:00:26 2014
From: pbruneau at gmail.com (Pierrick Bruneau)
Date: Thu, 18 Dec 2014 09:00:26 +0100
Subject: [Rd] segfault when trying to allocate a large vector
Message-ID: <CAF_q7hU=ux-jSdhvZiP_YqH253TSS9WSzqCT5meUe9VFdfwLyw@mail.gmail.com>

Dear R contributors,

I'm running into trouble when trying to allocate some large (but in
theory viable) vector in the context of C code bound to R through
.Call(). Here is some sample code summarizing the problem:

SEXP test() {

int size = 10000000;
double largevec[size];
memset(largevec, 0, size*sizeof(double));
return(R_NilValue);

}

If size if small enough (up to 10^6), everything is fine. When it
reaches 10^7 as above, I get a segfault. As far as I know, a double
value is represented with 8 bytes, which would make largevec above
approx. 80Mo -> this is certainly large for a single variable, but
should remain well below the limits of my machine... Also, doing a
calloc for the same vector size leads to the same outcome.

In my package, I would use large vectors that cannot be assumed to be
sparse - so utilities for sparse matrices may not be considered.

I run R on ubuntu 64-bit, with 8G RAM, and a 64-bit R build (3.1.2).
As my problem looks close to that seen in
http://r.789695.n4.nabble.com/allocMatrix-limits-td864864.html,
following what I have seen in ?"Memory-limits" I checked that ulimit
-v returns "unlimited".

I guess I must miss something, like contiguity issues, or other. Does
anyone have a clue for me?

Thanks by advance,
Pierrick


From kmillar at google.com  Thu Dec 18 09:44:05 2014
From: kmillar at google.com (Karl Millar)
Date: Thu, 18 Dec 2014 00:44:05 -0800
Subject: [Rd] segfault when trying to allocate a large vector
In-Reply-To: <CAF_q7hU=ux-jSdhvZiP_YqH253TSS9WSzqCT5meUe9VFdfwLyw@mail.gmail.com>
References: <CAF_q7hU=ux-jSdhvZiP_YqH253TSS9WSzqCT5meUe9VFdfwLyw@mail.gmail.com>
Message-ID: <CABz6aZdAkahA2s58aBkgNDhgVXSOigmwukaPep+vaJCANB3SnQ@mail.gmail.com>

Hi Pierrick,

You're storing largevec on the stack, which is probably causing a stack
overflow.  Allocate largvec on the heap with malloc or one of the R memory
allocation routines instead and it should work fine.

Karl

On Thu, Dec 18, 2014 at 12:00 AM, Pierrick Bruneau <pbruneau at gmail.com>
wrote:
>
> Dear R contributors,
>
> I'm running into trouble when trying to allocate some large (but in
> theory viable) vector in the context of C code bound to R through
> .Call(). Here is some sample code summarizing the problem:
>
> SEXP test() {
>
> int size = 10000000;
> double largevec[size];
> memset(largevec, 0, size*sizeof(double));
> return(R_NilValue);
>
> }
>
> If size if small enough (up to 10^6), everything is fine. When it
> reaches 10^7 as above, I get a segfault. As far as I know, a double
> value is represented with 8 bytes, which would make largevec above
> approx. 80Mo -> this is certainly large for a single variable, but
> should remain well below the limits of my machine... Also, doing a
> calloc for the same vector size leads to the same outcome.
>
> In my package, I would use large vectors that cannot be assumed to be
> sparse - so utilities for sparse matrices may not be considered.
>
> I run R on ubuntu 64-bit, with 8G RAM, and a 64-bit R build (3.1.2).
> As my problem looks close to that seen in
> http://r.789695.n4.nabble.com/allocMatrix-limits-td864864.html,
> following what I have seen in ?"Memory-limits" I checked that ulimit
> -v returns "unlimited".
>
> I guess I must miss something, like contiguity issues, or other. Does
> anyone have a clue for me?
>
> Thanks by advance,
> Pierrick
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>

	[[alternative HTML version deleted]]


From pbruneau at gmail.com  Thu Dec 18 10:53:33 2014
From: pbruneau at gmail.com (Pierrick Bruneau)
Date: Thu, 18 Dec 2014 10:53:33 +0100
Subject: [Rd] segfault when trying to allocate a large vector
In-Reply-To: <CABz6aZdAkahA2s58aBkgNDhgVXSOigmwukaPep+vaJCANB3SnQ@mail.gmail.com>
References: <CAF_q7hU=ux-jSdhvZiP_YqH253TSS9WSzqCT5meUe9VFdfwLyw@mail.gmail.com>
	<CABz6aZdAkahA2s58aBkgNDhgVXSOigmwukaPep+vaJCANB3SnQ@mail.gmail.com>
Message-ID: <CAF_q7hXHwby9RXFMU4zC8sQ9sTJcVDfRrZTnx-qutUUpgyyadA@mail.gmail.com>

Hi Karl,

I thought I had also tried to allocate on the heap - just tried again,
and everything went fine (even up to 10^9 cells). I guess everything's
OK then ^^
Thanks for your help!

Pierrick

On Thu, Dec 18, 2014 at 9:44 AM, Karl Millar <kmillar at google.com> wrote:
> Hi Pierrick,
>
> You're storing largevec on the stack, which is probably causing a stack
> overflow.  Allocate largvec on the heap with malloc or one of the R memory
> allocation routines instead and it should work fine.
>
> Karl
>
> On Thu, Dec 18, 2014 at 12:00 AM, Pierrick Bruneau <pbruneau at gmail.com>
> wrote:
>>
>> Dear R contributors,
>>
>> I'm running into trouble when trying to allocate some large (but in
>> theory viable) vector in the context of C code bound to R through
>> .Call(). Here is some sample code summarizing the problem:
>>
>> SEXP test() {
>>
>> int size = 10000000;
>> double largevec[size];
>> memset(largevec, 0, size*sizeof(double));
>> return(R_NilValue);
>>
>> }
>>
>> If size if small enough (up to 10^6), everything is fine. When it
>> reaches 10^7 as above, I get a segfault. As far as I know, a double
>> value is represented with 8 bytes, which would make largevec above
>> approx. 80Mo -> this is certainly large for a single variable, but
>> should remain well below the limits of my machine... Also, doing a
>> calloc for the same vector size leads to the same outcome.
>>
>> In my package, I would use large vectors that cannot be assumed to be
>> sparse - so utilities for sparse matrices may not be considered.
>>
>> I run R on ubuntu 64-bit, with 8G RAM, and a 64-bit R build (3.1.2).
>> As my problem looks close to that seen in
>> http://r.789695.n4.nabble.com/allocMatrix-limits-td864864.html,
>> following what I have seen in ?"Memory-limits" I checked that ulimit
>> -v returns "unlimited".
>>
>> I guess I must miss something, like contiguity issues, or other. Does
>> anyone have a clue for me?
>>
>> Thanks by advance,
>> Pierrick
>>
>> ______________________________________________
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel


From murdoch.duncan at gmail.com  Fri Dec 19 14:02:20 2014
From: murdoch.duncan at gmail.com (Duncan Murdoch)
Date: Fri, 19 Dec 2014 08:02:20 -0500
Subject: [Rd] UTF8 markdown vignette
In-Reply-To: <CANROs4eN1wsaEH_d_S6d56GFO_KRXPY32x10YEznWiTTkPwpWQ@mail.gmail.com>
References: <AA818EAD2576BC488B4F623941DA7427F3C7D1D8@inbomail.inbo.be>
	<5486C91E.90409@gmail.com>
	<AA818EAD2576BC488B4F623941DA7427F3C7D24C@inbomail.inbo.be>
	<5486F3B2.6060507@gmail.com>
	<CANROs4eKia1xaZrTH47tTiuL40eGW11Yrociqt5-rVcwJU0WGA@mail.gmail.com>
	<AA818EAD2576BC488B4F623941DA7427F3C7DFD4@inbomail.inbo.be>
	<54876CBE.9020207@gmail.com>
	<CANROs4ff+oo7rpVDL2f6+edxpd6k69TWuEchrk3y277RcRpteQ@mail.gmail.com>
	<54883A34.5040207@gmail.com>
	<CANROs4eN1wsaEH_d_S6d56GFO_KRXPY32x10YEznWiTTkPwpWQ@mail.gmail.com>
Message-ID: <549421DC.6070309@gmail.com>

On 18/12/2014, 12:17 AM, Yihui Xie wrote:
> For the record, I saw a change had been made in R-devel:
> https://github.com/wch/r-source/commit/d53b098 (Thanks, Duncan)
> Meanwhile, I also made a change in knitr to assume UTF-8 unless R
> passes an encoding to the vignette engine:
> https://github.com/yihui/knitr/commit/23c6c8e2 Both will solve the
> original problem, but apparently the former one is the ideal fix.

The Windows builds of R-devel were stalled for a few days, but I've
given them a kick now, so this should appear in the Windows binaries on
CRAN soon.

Duncan Murdoch

> 
> Regards,
> Yihui
> --
> Yihui Xie <xieyihui at gmail.com>
> Web: http://yihui.name
> 
> 
> On Wed, Dec 10, 2014 at 6:19 AM, Duncan Murdoch
> <murdoch.duncan at gmail.com> wrote:
>> On 09/12/2014, 10:36 PM, Yihui Xie wrote:
>>> I took a look at the R source and I realized that the encoding was
>>> actually never passed to the vignette engine:
>>> https://github.com/wch/r-source/blob/e721ef5f4/src/library/tools/R/Vignettes.R#L507
>>> Apparently only the file and quiet arguments are passed to the
>>> vignette engine. Did I miss anything?
>>
>> I think it's actually a little messier than that:  sometimes the
>> encoding is passed (e.g. by tools:::.run_one_vignette, used in R CMD
>> check), but not always.  Here's what I think should happen instead:
>>
>> When building a vignette in a package, R knows the encoding declared for
>> the package, so it should assume this as the default for the vignette.
>> If nothing is declared, it should assume "native.enc", i.e. whatever is
>> the native encoding on the machine it's running on.
>>
>> For each vignette, at the same time as it determines the vignette
>> engine, it should see whether there is a declared encoding within the
>> vignette.
>>
>> When it calls the engine, it should pass an encoding (and it should be a
>> legal one, e.g. UTF-8, not utf8).
>>
>> Unless I notice something missing when I do this, or someone else tells
>> me something that's missing, I'll try to make the changes above in
>> R-devel and R-patched sometime before 3.1.3 is released.
>>
>> In the meantime, unless declaring a dependence on R >= 3.1.3, vignette
>> engines should determine the encoding themselves whenever they are
>> called without an "encoding" argument.
>>
>> Duncan Murdoch


From Thierry.ONKELINX at inbo.be  Fri Dec 19 22:37:39 2014
From: Thierry.ONKELINX at inbo.be (ONKELINX, Thierry)
Date: Fri, 19 Dec 2014 21:37:39 +0000
Subject: [Rd] UTF8 markdown vignette
In-Reply-To: <549421DC.6070309@gmail.com>
References: <AA818EAD2576BC488B4F623941DA7427F3C7D1D8@inbomail.inbo.be>
	<5486C91E.90409@gmail.com>
	<AA818EAD2576BC488B4F623941DA7427F3C7D24C@inbomail.inbo.be>
	<5486F3B2.6060507@gmail.com>
	<CANROs4eKia1xaZrTH47tTiuL40eGW11Yrociqt5-rVcwJU0WGA@mail.gmail.com>
	<AA818EAD2576BC488B4F623941DA7427F3C7DFD4@inbomail.inbo.be>
	<54876CBE.9020207@gmail.com>
	<CANROs4ff+oo7rpVDL2f6+edxpd6k69TWuEchrk3y277RcRpteQ@mail.gmail.com>
	<54883A34.5040207@gmail.com>
	<CANROs4eN1wsaEH_d_S6d56GFO_KRXPY32x10YEznWiTTkPwpWQ@mail.gmail.com>,
	<549421DC.6070309@gmail.com>
Message-ID: <AA818EAD2576BC488B4F623941DA7427FD632DD1@inbomail.inbo.be>

Dear Duncan and Yihui,

I was able to test it with the new R-devel version. Adding only %\SweaveUTF8 to the vignette works (= passes R CMD CHECK --as-cran and UTF-8 characters render as they should). Adding only Encoding: UTF-8 to the DESCRIPTION instead of %\SweaveUTF8 works too.

I have tested the same things with the github version of knitr on R-3.1.2-patched. Adding Encoding: UTF-8 to the DESCRIPTION gives an R CMD check --as-cran warning: * checking package vignettes in 'inst/doc' ... WARNING   Non-ASCII package vignette without specified encoding: 'utf8vignette.Rmd' The UTF-8 characters in the vignette are none the less rendered correctly.
Adding only \%SweaveUTF8 to the vignette makes it passing R CMD Check --as-cran and the UTF-8 characters are rendered correctly.

So both the changes to R-devel and knitr seems to work fine.

Thanks a lot.

Thierry

PS I've added the sessionInfo() of both configurations.

#sessionInfo() of R-devel
> library(rmarkdown)
> library(knitr)
> sessionInfo()
R Under development (unstable) (2014-12-18 r67185)
Platform: x86_64-w64-mingw32/x64 (64-bit)

locale:
[1] LC_COLLATE=Dutch_Belgium.1252  LC_CTYPE=Dutch_Belgium.1252
[3] LC_MONETARY=Dutch_Belgium.1252 LC_NUMERIC=C
[5] LC_TIME=Dutch_Belgium.1252

attached base packages:
[1] stats     graphics  grDevices utils     datasets  methods   base

other attached packages:
[1] knitr_1.8        rmarkdown_0.3.11

loaded via a namespace (and not attached):
[1] digest_0.6.4    evaluate_0.5.5  formatR_1.0     htmltools_0.2.6 stringr_0.6.2
[6] tools_3.2.0

> library(knitr)
> library(rmarkdown)
> sessionInfo()
R version 3.1.2 Patched (2014-12-11 r67166)
Platform: x86_64-w64-mingw32/x64 (64-bit)

locale:
[1] LC_COLLATE=Dutch_Belgium.1252  LC_CTYPE=Dutch_Belgium.1252
[3] LC_MONETARY=Dutch_Belgium.1252 LC_NUMERIC=C
[5] LC_TIME=Dutch_Belgium.1252

attached base packages:
[1] stats     graphics  grDevices utils     datasets  methods   base

other attached packages:
[1] rmarkdown_0.3.11 knitr_1.8.6

loaded via a namespace (and not attached):
 [1] bitops_1.0-6    devtools_1.6.1  digest_0.6.6    evaluate_0.5.5  formatR_1.0
 [6] htmltools_0.2.6 httr_0.6.0      RCurl_1.95-4.5  stringr_0.6.2   tools_3.1.2
ir. Thierry Onkelinx
Instituut voor natuur- en bosonderzoek / Research Institute for Nature and Forest
team Biometrie & Kwaliteitszorg / team Biometrics & Quality Assurance
Kliniekstraat 25
1070 Anderlecht
Belgium
+ 32 2 525 02 51
+ 32 54 43 61 85
Thierry.Onkelinx at inbo.be
www.inbo.be
To call in the statistician after the experiment is done may be no more than asking him to perform a post-mortem examination: he may be able to say what the experiment died of. ~ Sir Ronald Aylmer Fisher
The plural of anecdote is not data. ~ Roger Brinner
The combination of some data and an aching desire for an answer does not ensure that a reasonable answer can be extracted from a given body of data. ~ John Tukey

________________________________________
Van: Duncan Murdoch [murdoch.duncan at gmail.com]
Verzonden: vrijdag 19 december 2014 14:02
Aan: Yihui Xie
CC: ONKELINX, Thierry; r-devel at r-project.org; Kurt Hornik
Onderwerp: Re: [Rd] UTF8 markdown vignette

On 18/12/2014, 12:17 AM, Yihui Xie wrote:
> For the record, I saw a change had been made in R-devel:
> https://github.com/wch/r-source/commit/d53b098 (Thanks, Duncan)
> Meanwhile, I also made a change in knitr to assume UTF-8 unless R
> passes an encoding to the vignette engine:
> https://github.com/yihui/knitr/commit/23c6c8e2 Both will solve the
> original problem, but apparently the former one is the ideal fix.

The Windows builds of R-devel were stalled for a few days, but I've
given them a kick now, so this should appear in the Windows binaries on
CRAN soon.

Duncan Murdoch

>
> Regards,
> Yihui
> --
> Yihui Xie <xieyihui at gmail.com>
> Web: http://yihui.name
>
>
> On Wed, Dec 10, 2014 at 6:19 AM, Duncan Murdoch
> <murdoch.duncan at gmail.com> wrote:
>> On 09/12/2014, 10:36 PM, Yihui Xie wrote:
>>> I took a look at the R source and I realized that the encoding was
>>> actually never passed to the vignette engine:
>>> https://github.com/wch/r-source/blob/e721ef5f4/src/library/tools/R/Vignettes.R#L507
>>> Apparently only the file and quiet arguments are passed to the
>>> vignette engine. Did I miss anything?
>>
>> I think it's actually a little messier than that:  sometimes the
>> encoding is passed (e.g. by tools:::.run_one_vignette, used in R CMD
>> check), but not always.  Here's what I think should happen instead:
>>
>> When building a vignette in a package, R knows the encoding declared for
>> the package, so it should assume this as the default for the vignette.
>> If nothing is declared, it should assume "native.enc", i.e. whatever is
>> the native encoding on the machine it's running on.
>>
>> For each vignette, at the same time as it determines the vignette
>> engine, it should see whether there is a declared encoding within the
>> vignette.
>>
>> When it calls the engine, it should pass an encoding (and it should be a
>> legal one, e.g. UTF-8, not utf8).
>>
>> Unless I notice something missing when I do this, or someone else tells
>> me something that's missing, I'll try to make the changes above in
>> R-devel and R-patched sometime before 3.1.3 is released.
>>
>> In the meantime, unless declaring a dependence on R >= 3.1.3, vignette
>> engines should determine the encoding themselves whenever they are
>> called without an "encoding" argument.
>>
>> Duncan Murdoch

Disclaimer Bezoek onze website / Visit our website<https://drupal.inbo.be/nl/disclaimer-mailberichten-van-het-inbo>


From pbruneau at gmail.com  Sat Dec 20 22:06:57 2014
From: pbruneau at gmail.com (Pierrick Bruneau)
Date: Sat, 20 Dec 2014 22:06:57 +0100
Subject: [Rd] Unexplained difference between results of dppsv and dpotri
	LAPACK routines
Message-ID: <CAF_q7hVNBL6j3QUHeyUJ1wWSA6vS9RQQPB2s2-xV2msd4+291w@mail.gmail.com>

Dear R contributors,

Considering the following sample C code, that illustrates two possible
uses of a Cholesky decomp for inverting a matrix, equally valid at
least in theory:

SEXP test() {

int d = 2;
int info = 0;
double mat[4] = {2.5, 0.4, 0.4, 1.7};
double id[4] = {1.0, 0.0, 0.0, 1.0};
double lmat[3];
F77_CALL(dpotrf)("L", &d, mat, &d, &info);
lmat[0] = mat[0];
lmat[1] = mat[1];
lmat[2] = mat[3];
F77_CALL(dppsv)("L", &d, &d, lmat, id, &d, &info);
// id now contains L^(-T)
F77_CALL(dpotri)("L", &d, mat, &d, &info);
// mat contains mat^(-1)

Rprintf("%f\n", id[0] * id[0]);
// owing to that id is lower triangular
Rprintf("%f\n", mat[0]);

return(R_NilValue);

}

I expected both printed values to be identical, or almost so. But
issuing .Call("test") prints:
0.426571
0.415648

Difference is thus many degrees of magnitude above numerical
precision. What am I missing that explains it?

Thanks by advance for the kind answers,
Pierrick


From pdalgd at gmail.com  Sat Dec 20 22:57:08 2014
From: pdalgd at gmail.com (peter dalgaard)
Date: Sat, 20 Dec 2014 22:57:08 +0100
Subject: [Rd] Unexplained difference between results of dppsv and dpotri
	LAPACK routines
In-Reply-To: <CAF_q7hVNBL6j3QUHeyUJ1wWSA6vS9RQQPB2s2-xV2msd4+291w@mail.gmail.com>
References: <CAF_q7hVNBL6j3QUHeyUJ1wWSA6vS9RQQPB2s2-xV2msd4+291w@mail.gmail.com>
Message-ID: <B4634B92-0048-4B06-91F0-FE70A6BAC7F2@gmail.com>

This isn't the help list for LAPACK, but as far as I can tell, dppsv expects a symmetric matrix input compacted as triangular, not a Choleski decomposed one. So try assigning lmat before the call to dpotrf.

-pd


> On 20 Dec 2014, at 22:06 , Pierrick Bruneau <pbruneau at gmail.com> wrote:
> 
> Dear R contributors,
> 
> Considering the following sample C code, that illustrates two possible
> uses of a Cholesky decomp for inverting a matrix, equally valid at
> least in theory:
> 
> SEXP test() {
> 
> int d = 2;
> int info = 0;
> double mat[4] = {2.5, 0.4, 0.4, 1.7};
> double id[4] = {1.0, 0.0, 0.0, 1.0};
> double lmat[3];
> F77_CALL(dpotrf)("L", &d, mat, &d, &info);
> lmat[0] = mat[0];
> lmat[1] = mat[1];
> lmat[2] = mat[3];
> F77_CALL(dppsv)("L", &d, &d, lmat, id, &d, &info);
> // id now contains L^(-T)
> F77_CALL(dpotri)("L", &d, mat, &d, &info);
> // mat contains mat^(-1)
> 
> Rprintf("%f\n", id[0] * id[0]);
> // owing to that id is lower triangular
> Rprintf("%f\n", mat[0]);
> 
> return(R_NilValue);
> 
> }
> 
> I expected both printed values to be identical, or almost so. But
> issuing .Call("test") prints:
> 0.426571
> 0.415648
> 
> Difference is thus many degrees of magnitude above numerical
> precision. What am I missing that explains it?
> 
> Thanks by advance for the kind answers,
> Pierrick
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel

-- 
Peter Dalgaard, Professor,
Center for Statistics, Copenhagen Business School
Solbjerg Plads 3, 2000 Frederiksberg, Denmark
Phone: (+45)38153501
Email: pd.mes at cbs.dk  Priv: PDalgd at gmail.com


From pbruneau at gmail.com  Sat Dec 20 23:09:01 2014
From: pbruneau at gmail.com (Pierrick Bruneau)
Date: Sat, 20 Dec 2014 23:09:01 +0100
Subject: [Rd] Unexplained difference between results of dppsv and dpotri
 LAPACK routines
In-Reply-To: <B4634B92-0048-4B06-91F0-FE70A6BAC7F2@gmail.com>
References: <CAF_q7hVNBL6j3QUHeyUJ1wWSA6vS9RQQPB2s2-xV2msd4+291w@mail.gmail.com>
	<B4634B92-0048-4B06-91F0-FE70A6BAC7F2@gmail.com>
Message-ID: <CAF_q7hXZDHcHkbhr2ZDeXUNtZEh80FnWynWy373qWv_A-A+ghw@mail.gmail.com>

Oh right, I just realized in the man that dppsv very likely decomposes
its A argument - instead of requiring a decomposed mat as I first
thought... So I was actually performing two successive Cholesky
decompositions ^^


On Sat, Dec 20, 2014 at 10:57 PM, peter dalgaard <pdalgd at gmail.com> wrote:
> This isn't the help list for LAPACK, but as far as I can tell, dppsv expects a symmetric matrix input compacted as triangular, not a Choleski decomposed one. So try assigning lmat before the call to dpotrf.
>
> -pd
>
>
>> On 20 Dec 2014, at 22:06 , Pierrick Bruneau <pbruneau at gmail.com> wrote:
>>
>> Dear R contributors,
>>
>> Considering the following sample C code, that illustrates two possible
>> uses of a Cholesky decomp for inverting a matrix, equally valid at
>> least in theory:
>>
>> SEXP test() {
>>
>> int d = 2;
>> int info = 0;
>> double mat[4] = {2.5, 0.4, 0.4, 1.7};
>> double id[4] = {1.0, 0.0, 0.0, 1.0};
>> double lmat[3];
>> F77_CALL(dpotrf)("L", &d, mat, &d, &info);
>> lmat[0] = mat[0];
>> lmat[1] = mat[1];
>> lmat[2] = mat[3];
>> F77_CALL(dppsv)("L", &d, &d, lmat, id, &d, &info);
>> // id now contains L^(-T)
>> F77_CALL(dpotri)("L", &d, mat, &d, &info);
>> // mat contains mat^(-1)
>>
>> Rprintf("%f\n", id[0] * id[0]);
>> // owing to that id is lower triangular
>> Rprintf("%f\n", mat[0]);
>>
>> return(R_NilValue);
>>
>> }
>>
>> I expected both printed values to be identical, or almost so. But
>> issuing .Call("test") prints:
>> 0.426571
>> 0.415648
>>
>> Difference is thus many degrees of magnitude above numerical
>> precision. What am I missing that explains it?
>>
>> Thanks by advance for the kind answers,
>> Pierrick
>>
>> ______________________________________________
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel
>
> --
> Peter Dalgaard, Professor,
> Center for Statistics, Copenhagen Business School
> Solbjerg Plads 3, 2000 Frederiksberg, Denmark
> Phone: (+45)38153501
> Email: pd.mes at cbs.dk  Priv: PDalgd at gmail.com
>
>
>
>
>
>
>
>


From geoff.lee99 at gmail.com  Sun Dec 21 01:41:35 2014
From: geoff.lee99 at gmail.com (Geoff Lee)
Date: Sun, 21 Dec 2014 11:41:35 +1100
Subject: [Rd] loadNamespace and versionChecking and the
	otherpackage::otherfun syntax
Message-ID: <010001d01cb6$e4b90260$ae2b0720$@gmail.com>

This is an enquiry not so much about what the code for loadNamespace does,
but
rather about the intent and design of loadNamespace, and how it interacts
with 
the `::` function, which seems to me to follow  a slightly different
philosophy.

It is not an urgent question - the issue that started me wondering has been
resolved another way - but I would like to complete my understanding of this
aspect of how R's packaging mechanism is meant to operate.

It's also rather a long query - if it's too long please don't waste your
time 
- just ignore it.  To try and make it slightly more digestible 
it is divided into sections, as follows
    SCENARIO
    THE QUERY
    MY OWN ATTEMPTS TO UNDERSTAND
    AN ASIDE ABOUT loadNamespace AND Depends:
    VERSION CHECKS ON otherpackage::otherfun AT LOAD TIME?
    VERSION CHECKS ON otherpackage::otherfun AT EXECUTION TIME?
      POSSIBLE ANSWER 1 - THIS IS TOO COMPLEX AND HYPOTHETICAL
      POSSIBLE ANSWER 2 - THIS IS AN ISSUE FOR THE `::` FUNCTION
      POSSIBLE ANSWER 3 - loadNamespace SHOULD BE VERSION AWARE EVEN WHEN
`::` IS USED

Many thanks in advance for any insights that are able to be offered.

Geoff

SCENARIO
========

The scenario is that `mypackage` uses an `otherpackage` via the the
`otherpackage::otherfun` syntax, and that the version of `otherpackage` must
be 
(say) (>= 2.0).  The constraint on the version of `anotherpackage` is
specified
in the DESCRIPTION file of mypackage using either Imports or Depends.

THE QUERY
=========

The query is :
a) Is it intended that loadNamespace should check the version of
otherpackage
(if one is specified) when it is `loadNamespace`ing mypackage?
and if so
b) Is it intended that the process of loading mypackage should ensure that
the
correct version of otherfun cannot be accidentally masked (for example by
using
.libPaths() to change the search path between the time when mypackage is
loaded,
and the time when the component of mypackage that calls
otherpackage::otherfun 
is executed) ?

MY OWN ATTEMPTS TO UNDERSTAND
=============================

What I've done so far

I've read the  documentation I could find, stepped through loadNamespace
using
debugonce (several times) with toy packages to gains some insight into what
loadNamespace does at the moment (using R3.1.2 on a Windows 64 bit machine),
and read the loadNamespace code a few times (though I can't yet claim to
follow
all of its neat tricks and complexities).

My understanding ths far is that 
a) loadNamespace learns about version constraints on `otherpackage`
dependencies
when it is processing the DESCRIPTION file, viz
        vI <- pkgInfo$Imports
and
b) defers the checking of these dependencies till later, when it is
processing
the NAMESPACE file (to create the imports:mypackage
namespace/environment/frame which 
encloses the namespace:mypackage namespace/environment/frame).  The checking
occurs 
inside 3 loops, which all use an appropriate entry from vI as the
versionCheck 
argument in a recursive call to loadNamespace, viz.   
        for (i in nsInfo$imports) {
         ...etc...
        }
        for (imp in nsInfo$importClasses) ...etc...
        for (imp in nsInfo$importMethods) ...etc...

AN ASIDE ABOUT loadNamespace AND Depends:
=====================================

As an aside it appears that any version dependencies specified in the
Depends 
field are overlooked - I suspect that loadNamespace might be more complete
if 
there were something like 
        vD <- pkgInfo$Depends
        vID <- c(vD, vI) #possibly with an unlist thrown in somewhere?
and the versionCheck used vID instead of just vI

VERSION CHECKS ON otherpackage::otherfun AT LOAD TIME?
===============================================

The problem with this elegant recursive approach to checking the version of
depended upon packages is that (as far as I know thus far) using the
implicit 
loading syntax otherpackage::otherfun does not involve any entry in the
mypackage NAMESPACE file, and hence loadNamespace never checks the version
specification for otherpackage.

Hence the first part of my query - is it intended that loadNamespace perform
such a check?

My initial thought was that the answer should be yes, loadNamespace should
do
such a check, and so I wrote a little function which checked all the
versions
specified in the DESCRIPTION file, at the time the file was initially
encountered.  (After a bit of debugging) it seemed to do what I wanted, in
that 
if the right version of otherpackage was not available, my amended
loadNamespace
threw an error.

But then I started to think about how I could test it thoroughly - by which
I 
mean not does my code do what I think it should do, but does it achieve the
outcome that motivated that coding in the first place.

VERSION CHECKS ON otherpackage::otherfun AT EXECUTION TIME?
====================================================

That led to the second part of my query - should / how could loadNamespace
ensure that I actually get the otherfun from the version of otherpackage
that has been specified in the mypackage DESCRIPTION file, when the 
otherpackage::otherfun code is actually executed?

My understanding is that the underlying intent of the namespace mechanism in

R packages is to ensure that when mypackage calls otherpackage::otherfun, it
is 
indeed otherpackage::otherfun I get, ie I do not get a different function,
also
called otherfun, that for one reason or another exists in memory and is
found
as R works its way up the chain of enclosing environments.  Usually the
concern
is about an identically named but different `otherfun` from `yetanother`
package 
that has been loaded, or that the user has defined themselves in their
globalNamespace.  But in the motivating example for my case, I wanted to
ensure
I got the otherfun from version >= 2.0 of `otherpackage`, and in particular,
I
did **NOT** get `otherpackage(version 1.0)::otherfun`

I confess I haven't actually tried it, but I think that even with my up
front 
checking of the package dependencies mentioned in the DESCRIPTION file
I could probably get the 'wrong' outcome if I changed my .libPath() between 
loading mypackage and executing it.  

This isn't *quite* as unlikely as it might seem - in my real world example I
had
the official CRAN versions of mypackage (actually someone else's package!)
and otherpackage installed in my main library, and was using a development
library to explore changes to updated versions of mypackage and otherpackage
- I
would load mypackage while I had the development library in .libPath(), and
then 
without thinking of all the implications, remove the development
library from .libPath() while doing some exploratory testing using 
(the loaded development version of) mypackage.

Anyway, this lead to the 2nd part of my query - could / should loadNamespace

ensure that at execution time, otherpackage::otherfun actually respects the 
version contraint specified in mypackages DESCRIPTION file?  

POSSIBLE ANSWER 1 - THIS IS TOO COMPLEX AND HYPOTHETICAL
=================================================

One thought was  - this is all getting too complex and hypothetical, there
is
only so much automatic protection that R / loadNamespace can offer, in which

case the answer to query part b) is no.

POSSIBLE ANSWER 2 - THIS IS AN ISSUE FOR THE `::` FUNCTION
================================================

Another thought was, this isn't loadNamespace's problem (it is doing what
its 
name advertises - viz loading namespaces), rather it is something that the
`::` function
should look after.

Looking at the code for `::` it does not seem to have 
provision for specifying a version constraint for the pkg argument.  If this
is
the "correct" approach, the answer to part b) is again no, loadNamespace is 
behaving as designed - but the `::` function should be upgraded so it knows 
about package versioning.  Under this "solution" the mypackage author would
specify the otherpackage version in the same segment of code that calls
otherfun

POSSIBLE ANSWER 3 - loadNamespace SHOULD BE VERSION AWARE EVEN WHEN `::` IS
USED
======================================================================

My most complicated possible answer was yes - loadNamespace should be 
"aware" of calls which use the otherpackage::otherfun syntax, and "enforce"
any 
versioning given in the mypackage DESCRIPTION file, both at load time, by 
checking the version of otherpackage which is available then, and at
execution 
time (by "somehow"" storing a reference to the code for the correct package
and 
version of otherpackage::otherfun in the imports::mypackage namespace). 

The only "somehow"'s I could dream up were messy and hackish - eg 
loadNamespace parses the mypackage code to find `otherpackage::otherfun`
calls, 
loads the otherpackage::otherfun code, and inserts a special mangled
reference
name into the imports:mypackage namespace environment, AND
`::` is changed to look for a mangled name version of package before it runs

as it currently does.

And that feels so inelegant I decided I am approaching this / not
understanding properly,
 so I decided to stop exploring this myself (very instructional though
that has been) and pose this query instead.


From f.harrell at Vanderbilt.Edu  Tue Dec 23 16:34:48 2014
From: f.harrell at Vanderbilt.Edu (Frank Harrell)
Date: Tue, 23 Dec 2014 09:34:48 -0600
Subject: [Rd] CRAN and ggplot2 geom and stat extensions
Message-ID: <54998B98.3050607@vanderbilt.edu>

I am thinking about adding several geom and stat extensions to ggplot2 
in the Hmisc package.  To do this requires using non-exported ggplot2 
functions as discussed in 
http://stackoverflow.com/questions/18108406/creating-a-custom-stat-object-in-ggplot2

If I use the needed ggplot2::: notation the package will no longer pass 
CRAN checks.  Does anyone know of a solution?  I'm assuming that Hadley 
doesn't want to export these functions or he would have done so a long 
time ago because of the number of users who have asked questions related 
to this.

Frank
-- 
------------------------------------------------------------------------
Frank E Harrell Jr 	Professor and Chairman 	School of Medicine

	Department of *Biostatistics* 	*Vanderbilt University*


	[[alternative HTML version deleted]]


From istazahn at gmail.com  Tue Dec 23 17:21:53 2014
From: istazahn at gmail.com (Ista Zahn)
Date: Tue, 23 Dec 2014 11:21:53 -0500
Subject: [Rd] CRAN and ggplot2 geom and stat extensions
In-Reply-To: <54998B98.3050607@vanderbilt.edu>
References: <54998B98.3050607@vanderbilt.edu>
Message-ID: <CA+vqiLFHDwb+nHrnGC+iX_1-zLvs6oyVsUMyq71XAv3TRC8ZoQ@mail.gmail.com>

On Tue, Dec 23, 2014 at 10:34 AM, Frank Harrell
<f.harrell at vanderbilt.edu> wrote:
> I am thinking about adding several geom and stat extensions to ggplot2
> in the Hmisc package.  To do this requires using non-exported ggplot2
> functions as discussed in
> http://stackoverflow.com/questions/18108406/creating-a-custom-stat-object-in-ggplot2
>
> If I use the needed ggplot2::: notation the package will no longer pass
> CRAN checks.  Does anyone know of a solution?

the ggthemes package is on CRAN and uses ggplot2::: so it is at least
possible that this will be allowed for Hmisc as well.

Best,
Ista

  I'm assuming that Hadley
> doesn't want to export these functions or he would have done so a long
> time ago because of the number of users who have asked questions related
> to this.
>
> Frank
> --
> ------------------------------------------------------------------------
> Frank E Harrell Jr      Professor and Chairman  School of Medicine
>
>         Department of *Biostatistics*   *Vanderbilt University*
>
>
>         [[alternative HTML version deleted]]
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From ggrothendieck at gmail.com  Tue Dec 23 17:59:02 2014
From: ggrothendieck at gmail.com (Gabor Grothendieck)
Date: Tue, 23 Dec 2014 11:59:02 -0500
Subject: [Rd] CRAN and ggplot2 geom and stat extensions
In-Reply-To: <CA+vqiLFHDwb+nHrnGC+iX_1-zLvs6oyVsUMyq71XAv3TRC8ZoQ@mail.gmail.com>
References: <54998B98.3050607@vanderbilt.edu>
	<CA+vqiLFHDwb+nHrnGC+iX_1-zLvs6oyVsUMyq71XAv3TRC8ZoQ@mail.gmail.com>
Message-ID: <CAP01uRnKPinGeM5=6Dcr5r+P9hCCz0eXA=2WFiv=j5Eu6==Rzg@mail.gmail.com>

On Tue, Dec 23, 2014 at 11:21 AM, Ista Zahn <istazahn at gmail.com> wrote:
> On Tue, Dec 23, 2014 at 10:34 AM, Frank Harrell
> <f.harrell at vanderbilt.edu> wrote:
>> I am thinking about adding several geom and stat extensions to ggplot2
>> in the Hmisc package.  To do this requires using non-exported ggplot2
>> functions as discussed in
>> http://stackoverflow.com/questions/18108406/creating-a-custom-stat-object-in-ggplot2
>>
>> If I use the needed ggplot2::: notation the package will no longer pass
>> CRAN checks.  Does anyone know of a solution?
>
> the ggthemes package is on CRAN and uses ggplot2::: so it is at least
> possible that this will be allowed for Hmisc as well.
>

Packages ggmap, ggtern and ggsubplot also define their own geom's and/or stat's.


From htl10 at users.sourceforge.net  Tue Dec 23 21:38:34 2014
From: htl10 at users.sourceforge.net (Hin-Tak Leung)
Date: Tue, 23 Dec 2014 20:38:34 +0000
Subject: [Rd] bug fix for R,
	and speed gain (was Re: R build failure under gcc 4.9's link time
	optimization)
In-Reply-To: <1418612688.90838.YahooMailBasic@web172306.mail.ir2.yahoo.com>
Message-ID: <1419367114.39797.YahooMailBasic@web172306.mail.ir2.yahoo.com>

Switching on link time optimization in R gives very impressive speed gain:
the 1000 Genome-related code in snpMatrix is more than 10% faster.

There were 3 sets of changes, a bug fix, a command line option, and
a code change to make it happen.

AR=gcc-ar is needed by both R itself, Matrix, (and also R2SWF from my routine upgrade).

The fix to https://bugs.r-project.org/bugzilla/show_bug.cgi?id=15011
was wrong and ineffective, and needs to be re-opened. I posted my fix there.

And the code change below - an alternative change is to modify
EXTRA_STATIC_LIBS a few lines below in "src/main/Makefile.in" to
start with "-Wl,--whole-archive" and ends with "-Wl,--no-whole-archive".
(I filed this as https://gcc.gnu.org/bugzilla/show_bug.cgi?id=64390)

All three of these are gcc-specific; but then both R for windows and mac OS X are
built with gcc. Together with linux, that covers all the major platforms. For 10% speed
gain, I'll let somebody else worry about machines that are not MS windows, not mac OS X
nor linux.

--------------------------------------------
On Mon, 15/12/14, Hin-Tak Leung <htl10 at users.sourceforge.net> wrote:

 R fails to build with visibility on
 and gcc 4.9's link time optimzation, because
 of its practice of building part of it as archive first.
 Specifically
 it builds some bundled libraries as archive first, the
 symbols of which
 are then entirely invisible in gcc 4.9.

 The Matrix package also does this awful practice, with
 CHOLMOD.a COLAMD.a AMD.a SuiteSparse_config.a .

 One way of fixing R is:

 diff --git a/src/main/Makefile.in b/src/main/Makefile.in
 index 908b7ab..ce015b4 100644
 --- a/src/main/Makefile.in
 +++ b/src/main/Makefile.in
 @@ -86,7 +86,7 @@ ALL_CPPFLAGS = $(ZLIB_CPPFLAGS)
 $(BZLIB_CPPFLAGS) $(PCRE_CPPFLAGS) \
  R_ZLIBS = @BUILD_ZLIB_TRUE@ ../extra/zlib/libz.a
  R_BZLIBS = @BUILD_BZLIB_TRUE@ ../extra/bzip2/libbz2.a
  R_PCRE = @BUILD_PCRE_TRUE@ ../extra/pcre/libpcre.a
 -R_TRE = @BUILD_TRE_TRUE@ ../extra/tre/libtre.a
 +R_TRE = @BUILD_TRE_TRUE@ `ls ../extra/tre/*.o`
  R_XDR = @BUILD_XDR_TRUE@ ../extra/xdr/libxdr.a
  R_XZ = @BUILD_XZ_TRUE@? ../extra/xz/liblzma.a
  R_LIBINTL = @BUILD_LIBINTL_TRUE@ ../extra/intl/libintl.a

 According the gcc changes doc, setting $AR is probably
 better. (untested).

 Here is the relevant excerpt from https://gcc.gnu.org/gcc-4.9/changes.html

 Link-time optimization (LTO) improvements: 
 When using a linker plugin, compiling with the -flto option
 now generates slim object files (.o) which only contain
 intermediate language representation for LTO. Use
 -ffat-lto-objects to create files which contain additionally
 the object code. To generate static libraries suitable for
 LTO processing, use gcc-ar and gcc-ranlib; to list symbols
 from a slim object file use gcc-nm. (This requires that ar,
 ranlib and nm have been compiled with plugin support.)


From joan.iglesias at live.com  Tue Dec 23 18:31:04 2014
From: joan.iglesias at live.com (joanv)
Date: Tue, 23 Dec 2014 09:31:04 -0800 (PST)
Subject: [Rd] how useful could be a fast and embedded database for the R
 community?
Message-ID: <1419355864465-4701051.post@n4.nabble.com>

Dear all,

I'm developing a new database with the ability to perform very fast seek,
insert, and delete operations. Also is able to perform very fast comparison
of datasets. It has been designed to work embedded into other programs
programmed in R, Fortran, C++, etc.

It can manage efficiently billions of numeric datasets in a single machine.

Right now I do not know in what fields of the R community could be helpful
such a database, or if there could be a need of such a capability in the R
community.

Could someone help me in this topic? Partners for the project are also
wanted, specially R experts, or experts on other kinds of calculation
programs (vasp, gaussian, etc... )

Regards and thank you.




--
View this message in context: http://r.789695.n4.nabble.com/how-useful-could-be-a-fast-and-embedded-database-for-the-R-community-tp4701051.html
Sent from the R devel mailing list archive at Nabble.com.


From elw at stderr.org  Wed Dec 24 18:48:48 2014
From: elw at stderr.org (elijah wright)
Date: Wed, 24 Dec 2014 11:48:48 -0600
Subject: [Rd] how useful could be a fast and embedded database for the R
	community?
In-Reply-To: <1419355864465-4701051.post@n4.nabble.com>
References: <1419355864465-4701051.post@n4.nabble.com>
Message-ID: <CANQ3A2O0UrOXK-h_Ku9S6fy6v2T1E4yqYdOsMoFftnPLeRzwCA@mail.gmail.com>

I believe in patches and working code.

You're proposing to compete with the likes of sqlite and berkeley db
-- not small competition, with excellent performance characteristics
when used properly.

You also used the 'b'illions word in reference to data sets - really?

best,

--e


On Tue, Dec 23, 2014 at 11:31 AM, joanv <joan.iglesias at live.com> wrote:
> Dear all,
>
> I'm developing a new database with the ability to perform very fast seek,
> insert, and delete operations. Also is able to perform very fast comparison
> of datasets. It has been designed to work embedded into other programs
> programmed in R, Fortran, C++, etc.
>
> It can manage efficiently billions of numeric datasets in a single machine.
>
> Right now I do not know in what fields of the R community could be helpful
> such a database, or if there could be a need of such a capability in the R
> community.
>
> Could someone help me in this topic? Partners for the project are also
> wanted, specially R experts, or experts on other kinds of calculation
> programs (vasp, gaussian, etc... )
>
> Regards and thank you.
>
>
>
>
> --
> View this message in context: http://r.789695.n4.nabble.com/how-useful-could-be-a-fast-and-embedded-database-for-the-R-community-tp4701051.html
> Sent from the R devel mailing list archive at Nabble.com.
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From joan.iglesias at live.com  Wed Dec 24 19:49:07 2014
From: joan.iglesias at live.com (joanv)
Date: Wed, 24 Dec 2014 10:49:07 -0800 (PST)
Subject: [Rd] how useful could be a fast and embedded database for the R
 community?
In-Reply-To: <CANQ3A2O0UrOXK-h_Ku9S6fy6v2T1E4yqYdOsMoFftnPLeRzwCA@mail.gmail.com>
References: <1419355864465-4701051.post@n4.nabble.com>
	<CANQ3A2O0UrOXK-h_Ku9S6fy6v2T1E4yqYdOsMoFftnPLeRzwCA@mail.gmail.com>
Message-ID: <1419446947544-4701075.post@n4.nabble.com>

I've already done some benchmarks, again leveldb and sqlite, are quite slow
compared with my release.

They cannot be used very intensively in a huge computation, because the low
performance.

Yes, billions ( American ones : thousands of millions) with a generous RAM.

More details at: www.vulcandb.com

My main concern, is where can feet better such a database. In what fields,
or in what kind of calculations.

Regards and thank you




--
View this message in context: http://r.789695.n4.nabble.com/how-useful-could-be-a-fast-and-embedded-database-for-the-R-community-tp4701051p4701075.html
Sent from the R devel mailing list archive at Nabble.com.


From edd at debian.org  Wed Dec 24 20:22:54 2014
From: edd at debian.org (Dirk Eddelbuettel)
Date: Wed, 24 Dec 2014 13:22:54 -0600
Subject: [Rd] how useful could be a fast and embedded database for the R
 community?
In-Reply-To: <1419446947544-4701075.post@n4.nabble.com>
References: <1419355864465-4701051.post@n4.nabble.com>
	<CANQ3A2O0UrOXK-h_Ku9S6fy6v2T1E4yqYdOsMoFftnPLeRzwCA@mail.gmail.com>
	<1419446947544-4701075.post@n4.nabble.com>
Message-ID: <21659.4750.44956.879682@max.nulle.part>


On 24 December 2014 at 10:49, joanv wrote:
| I've already done some benchmarks, again leveldb and sqlite, are quite slow
| compared with my release.
| 
| They cannot be used very intensively in a huge computation, because the low
| performance.
| 
| Yes, billions ( American ones : thousands of millions) with a generous RAM.
| 
| More details at: www.vulcandb.com
| 
| My main concern, is where can feet better such a database. In what fields,
| or in what kind of calculations.

I second what Elijah said:  "working code". 

So far I see just a (very pretty) website, but stricly no code. Not good.

I work in a industry where we 
  a) do use billions of time series points and 
  b) are latency and performance sensitive

We like flat (binary) files as well as mmap a lot, and do a lot of C++ for
performance where we'd never ever dream about embedding R.  But we do course
use R for analysis and then embed quite some C++ into to "do stuff".  We use
Redis (out of process) for a few things, but obviously not "raw data". I like
what I see from influxdb.com, but we are now off-topic for this list.

So colour me "interested" -- but please show some code, or people will tune
out pretty quickly.

Dirk

-- 
http://dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org


From joan.iglesias at live.com  Wed Dec 24 20:37:42 2014
From: joan.iglesias at live.com (joanv)
Date: Wed, 24 Dec 2014 11:37:42 -0800 (PST)
Subject: [Rd] how useful could be a fast and embedded database for the R
 community?
In-Reply-To: <21659.4750.44956.879682@max.nulle.part>
References: <1419355864465-4701051.post@n4.nabble.com>
	<CANQ3A2O0UrOXK-h_Ku9S6fy6v2T1E4yqYdOsMoFftnPLeRzwCA@mail.gmail.com>
	<1419446947544-4701075.post@n4.nabble.com>
	<21659.4750.44956.879682@max.nulle.part>
Message-ID: <1419449862852-4701078.post@n4.nabble.com>

I'm sorry, but I cannot show code. For the moment, this project is not open
source, it has costs a lot of effort, and first of all, I have to find a way
to recover the investment. If I find a way to recover the investment,
compatible with an open source way of business, the project will be open
source, but first of all, I have to find the "way". 

Please, you can check the benchmark of the first release. There are not a
lot of information about the benchmark, because as I said before, some
information is sensitive to be published, for the moment. 

Of course, I would like this project to be open source, but if has to find
"the way", and ideas are welcome!



--
View this message in context: http://r.789695.n4.nabble.com/how-useful-could-be-a-fast-and-embedded-database-for-the-R-community-tp4701051p4701078.html
Sent from the R devel mailing list archive at Nabble.com.


From joan.iglesias at live.com  Wed Dec 24 20:39:27 2014
From: joan.iglesias at live.com (joanv)
Date: Wed, 24 Dec 2014 11:39:27 -0800 (PST)
Subject: [Rd] how useful could be a fast and embedded database for the R
 community?
In-Reply-To: <21659.4750.44956.879682@max.nulle.part>
References: <1419355864465-4701051.post@n4.nabble.com>
	<CANQ3A2O0UrOXK-h_Ku9S6fy6v2T1E4yqYdOsMoFftnPLeRzwCA@mail.gmail.com>
	<1419446947544-4701075.post@n4.nabble.com>
	<21659.4750.44956.879682@max.nulle.part>
Message-ID: <1419449967783-4701079.post@n4.nabble.com>

One more thing, the database embeddable, or it will be embeddable into R
code, but also, into C, C++ or Fortran.



--
View this message in context: http://r.789695.n4.nabble.com/how-useful-could-be-a-fast-and-embedded-database-for-the-R-community-tp4701051p4701079.html
Sent from the R devel mailing list archive at Nabble.com.


From joan.iglesias at live.com  Wed Dec 24 20:57:59 2014
From: joan.iglesias at live.com (joanv)
Date: Wed, 24 Dec 2014 11:57:59 -0800 (PST)
Subject: [Rd] how useful could be a fast and embedded database for the R
 community?
In-Reply-To: <21659.4750.44956.879682@max.nulle.part>
References: <1419355864465-4701051.post@n4.nabble.com>
	<CANQ3A2O0UrOXK-h_Ku9S6fy6v2T1E4yqYdOsMoFftnPLeRzwCA@mail.gmail.com>
	<1419446947544-4701075.post@n4.nabble.com>
	<21659.4750.44956.879682@max.nulle.part>
Message-ID: <1419451079241-4701081.post@n4.nabble.com>

one more thing, I've never said the project is written in R, of course it is
not! But it can be used from R.



--
View this message in context: http://r.789695.n4.nabble.com/how-useful-could-be-a-fast-and-embedded-database-for-the-R-community-tp4701051p4701081.html
Sent from the R devel mailing list archive at Nabble.com.


From b.rowlingson at lancaster.ac.uk  Thu Dec 25 09:49:32 2014
From: b.rowlingson at lancaster.ac.uk (Barry Rowlingson)
Date: Thu, 25 Dec 2014 08:49:32 +0000
Subject: [Rd] how useful could be a fast and embedded database for the R
	community?
In-Reply-To: <a38def62304c41e4b0a3636324cd817e@EX-1-HT0.lancs.local>
References: <1419355864465-4701051.post@n4.nabble.com>
	<CANQ3A2O0UrOXK-h_Ku9S6fy6v2T1E4yqYdOsMoFftnPLeRzwCA@mail.gmail.com>
	<1419446947544-4701075.post@n4.nabble.com>
	<21659.4750.44956.879682@max.nulle.part>
	<a38def62304c41e4b0a3636324cd817e@EX-1-HT0.lancs.local>
Message-ID: <CANVKczPRVW-6SP727HboCRqUgiVZxOEBxQSJ=HhA-JLr6xv44Q@mail.gmail.com>

On Wed, Dec 24, 2014 at 7:37 PM, joanv <joan.iglesias at live.com> wrote:
> I'm sorry, but I cannot show code.

 Then can you stop using the word "release". To release means to let
something go, preferably out into the wild. I can't even find a binary
"release" on that site. Call it the first "version" if you want, but
not "release". I'm sure I'm not the only one wondering where this
"release" is downloadable in some form.

> For the moment, this project is not open
> source, it has costs a lot of effort, and first of all, I have to find a way
> to recover the investment. If I find a way to recover the investment,
> compatible with an open source way of business, the project will be open
> source, but first of all, I have to find the "way".

 You say the "Open Spartacus" project [http://www.openspartacus.org/]
from which VulcanDB came failed "Due to the lack of funding". What was
your personal relationship with that project? In what way, apart from
in name, was that "Open"? I can't find source code or binary releases.
Just a fancy single-page website with *all* the buzzwords. Does this
failure not teach you anything?

 The R project and its leading lights are very proud of the open
nature of R, and so you will be talking to strong proponents of open
source software here. You've presented a project with no source or
binary release, no documentation, no API or specification, nothing. No
more than vapourware ever gives us. And then....

> Please, you can check the benchmark of the first release. There are not a
> lot of information about the benchmark, because as I said before, some
> information is sensitive to be published, for the moment.

 ... you ask *us* to check *your* benchmark? How? We have no idea
exactly what you tested, and benchmark comparisons *depend* on that.

> Of course, I would like this project to be open source, but if has to find
> "the way", and ideas are welcome!

 Release early, release often. The only way other R users are going to
be interested is to see the source, or at the very least to see the
proposed API and be able to discuss this. I think you will find few
friends here until you do. Otherwise I suggest you jazz up your
benchmarks into a pseudo-technical paper with some 3d bar graphs and
wave it under the noses of idiot venture capitalists until one of them
throws some money at you. Good luck!

Barry


From joan.iglesias at live.com  Thu Dec 25 12:43:34 2014
From: joan.iglesias at live.com (Joan Iglesias)
Date: Thu, 25 Dec 2014 12:43:34 +0100
Subject: [Rd] how useful could be a fast and embedded database for the R
 community?
In-Reply-To: <CANVKczPRVW-6SP727HboCRqUgiVZxOEBxQSJ=HhA-JLr6xv44Q@mail.gmail.com>
References: <1419355864465-4701051.post@n4.nabble.com>,
	<CANQ3A2O0UrOXK-h_Ku9S6fy6v2T1E4yqYdOsMoFftnPLeRzwCA@mail.gmail.com>,
	<1419446947544-4701075.post@n4.nabble.com>,
	<21659.4750.44956.879682@max.nulle.part>,
	<a38def62304c41e4b0a3636324cd817e@EX-1-HT0.lancs.local>,
	<CANVKczPRVW-6SP727HboCRqUgiVZxOEBxQSJ=HhA-JLr6xv44Q@mail.gmail.com>
Message-ID: <DUB130-W71A7C7BF72B95D64AF860688550@phx.gbl>

> > I'm sorry, but I cannot show code.
> 
>  Then can you stop using the word "release". To release means to let
> something go, preferably out into the wild. I can't even find a binary
> "release" on that site. Call it the first "version" if you want, but
> not "release". I'm sure I'm not the only one wondering where this
> "release" is downloadable in some form.

I'm not a English speaker, maybe I did not use the word appropriately. 

> 
> > For the moment, this project is not open
> > source, it has costs a lot of effort, and first of all, I have to find a way
> > to recover the investment. If I find a way to recover the investment,
> > compatible with an open source way of business, the project will be open
> > source, but first of all, I have to find the "way".
> 
>  You say the "Open Spartacus" project [http://www.openspartacus.org/]
> from which VulcanDB came failed "Due to the lack of funding". What was
> your personal relationship with that project? In what way, apart from
> in name, was that "Open"? I can't find source code or binary releases.
> Just a fancy single-page website with *all* the buzzwords. Does this
> failure not teach you anything?

The project it was too complex, and I couldn't find here in Spain close collaborators or interests, or at least not enough. Anyway I'm not going to tell the whole history, here is not the right place. And yes, my intention with the other project was to be "open source", but not specially focused in R.

And because I learned something with the failure, I take the best algorithms developed for this project, and I made a project of "my size" and "my resources", that it was what I learned. 

> 
>  The R project and its leading lights are very proud of the open
> nature of R, and so you will be talking to strong proponents of open
> source software here. You've presented a project with no source or
> binary release, no documentation, no API or specification, nothing. No
> more than vapourware ever gives us. And then....

The version of the code I tested, it was only a version for benchmarking, with the implementation of seek, insert, and join. If you know little bit about key/value databases, you do not need much documentation to understand what do insert and seek. Join, it not a usual function in a key/value database, and if you have a better look, it is explained in more detail. 

I cannot present anything, because the algorithms costed a lot of time to be distilled, and for the moment I'm not going to publish it, unless until I could be quite sure I can get some "profit" in some way. And the first release or version is not usable for anybody, unless you want to do benchmarks. 

> 
> > Please, you can check the benchmark of the first release. There are not a
> > lot of information about the benchmark, because as I said before, some
> > information is sensitive to be published, for the moment.
> 
>  ... you ask *us* to check *your* benchmark? How? We have no idea
> exactly what you tested, and benchmark comparisons *depend* on that.

The numbers I presented talk by themselves, if you have tested, or checked other benchmarks of other database. If not, of course no meaning. That was my mistake: I'm used to the numbers of most of the databases, and maybe I supposed most of people are used too. 

> 
> > Of course, I would like this project to be open source, but if has to find
> > "the way", and ideas are welcome!
> 
>  Release early, release often. The only way other R users are going to
> be interested is to see the source, or at the very least to see the
> proposed API and be able to discuss this. I think you will find few
> friends here until you do. Otherwise I suggest you jazz up your
> benchmarks into a pseudo-technical paper with some 3d bar graphs and
> wave it under the noses of idiot venture capitalists until one of them
> throws some money at you. Good luck!

right now, I do not need venture capital, because as I said before, it has a size affordable by me. I only wanted to know in which fields it could be more useful, and I do not discard this project to become open source, but it depends on my economy, and the final way I'll find to make business. Right now my economy is not good, and I have to be sure I'll get some profit of my work 

As someone of the forum suggested me, it's not necessary to continue talking about this topic I do not want to waste your time. I answered because I thought it was necessary, due to the "tone" of the reply.

> 
> Barry
 		 	   		  
	[[alternative HTML version deleted]]


From brodie.gaslam at yahoo.com  Wed Dec 24 15:00:26 2014
From: brodie.gaslam at yahoo.com (brodie gaslam)
Date: Wed, 24 Dec 2014 14:00:26 +0000 (UTC)
Subject: [Rd] Inconsistent Parse Behavior
Message-ID: <989143484.1043452.1419429626659.JavaMail.yahoo@jws106115.mail.bf1.yahoo.com>

Under some specific conditions, `parse` seems to produce inconsistent and potentially incorrect results the first time it is run in a fresh clean R session.? Consider this code where we parse the same text twice in a row, and get one value in the parse data that is mismatched:
```Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> txt <- 'c("", {
+?? c(integer(3L), 1:3)
+?? c(integer(), 1:3, 1L)???????? # TRUE
+?? c(integer(), c(1, 2, 3), 1L)? # TRUE
+ } )
+ c("", {
+?? lst <- list(list( 1,? 2), list( 3, list( 4, list( 5, list(6, 6.1, 6.2)))))
+ } )
+ c("", {
+?? TRUE
+ } )'
> prs1 <- parse(text=txt, keep.source=TRUE)
> prs2 <- parse(text=txt, keep.source=TRUE)
> which(attr(prs1, "srcfile")$parseData != attr(prs2, "srcfile")$parseData)
[1] 1176
> sessionInfo()
R version 3.1.2 (2014-10-31)
Platform: x86_64-apple-darwin13.4.0 (64-bit)

locale:
[1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8

attached base packages:
[1] stats???? graphics? grDevices utils???? datasets? methods?? base 
```This discrepancy does not happen if I simplify the code to parse in any way.? The code as it is is a much simplified version of the code that first produced the error for me.? I cannot reduce it further without also eliminating the error.
Unfortunately, the discrepancy is meaningful.? The problem is the first parse.? Looking at `getParseData` output:```> subset(getParseData(prs1), id %in% c(226, 234))
??? line1 col1 line2 col2? id parent token terminal text
226???? 6??? 1???? 8??? 3 226??? 234? expr??? FALSE???? 
234???? 9??? 5???? 9??? 5 234??? 251?? ','???? TRUE??? ,```Notice how item 226 has for parent item 234 that starts on line 9, col 5, after item 226 ends.? I'm not sure how this is possible.
In the second parse, the parse data is as one would expect:```> subset(getParseData(prs2), id == 226)
??? line1 col1 line2 col2? id parent token terminal text
226???? 6??? 1???? 8??? 3 226????? 0? expr??? FALSE??? 
```The parent here is the top level (0), as would be expected looking at the source code in `txt` (226 represents the second `c(...)` block).
I suspect the problem is caused by the use of `{}` inside of `f()`, but again, it is not that simple since any further simplification of my code above seems to resolve the problem.? I also don't know why it would work fine the second time, though there must be some state initialization inside the parser going on.
Any help appreciated.
Best,
Brodie


	[[alternative HTML version deleted]]


From blessonthomas4job at gmail.com  Tue Dec 30 12:08:38 2014
From: blessonthomas4job at gmail.com (blesson thomas)
Date: Tue, 30 Dec 2014 16:38:38 +0530
Subject: [Rd] call r function in c++ application
Message-ID: <CAN8T56daJJ4MBGYDDhGrNqi3_O2YE8i20ED81r_SUhPyfrzp_w@mail.gmail.com>

hi,
     Am a software developer having 4 yr experience in c++.I want to
integrate R environment  in my c++ application,please help me to do so.

thanks&regards
blesson

	[[alternative HTML version deleted]]


From murdoch.duncan at gmail.com  Tue Dec 30 12:47:10 2014
From: murdoch.duncan at gmail.com (Duncan Murdoch)
Date: Tue, 30 Dec 2014 06:47:10 -0500
Subject: [Rd] call r function in c++ application
In-Reply-To: <CAN8T56daJJ4MBGYDDhGrNqi3_O2YE8i20ED81r_SUhPyfrzp_w@mail.gmail.com>
References: <CAN8T56daJJ4MBGYDDhGrNqi3_O2YE8i20ED81r_SUhPyfrzp_w@mail.gmail.com>
Message-ID: <54A290BE.8010001@gmail.com>

On 30/12/2014 6:08 AM, blesson thomas wrote:
> hi,
>      Am a software developer having 4 yr experience in c++.I want to
> integrate R environment  in my c++ application,please help me to do so.
> 

See the Writing R Extensions manual, Chap 8:  Linking GUIs and other
front-ends to R.

Duncan Murdoch


From edd at debian.org  Tue Dec 30 16:20:22 2014
From: edd at debian.org (Dirk Eddelbuettel)
Date: Tue, 30 Dec 2014 09:20:22 -0600
Subject: [Rd] call r function in c++ application
In-Reply-To: <CAN8T56daJJ4MBGYDDhGrNqi3_O2YE8i20ED81r_SUhPyfrzp_w@mail.gmail.com>
References: <CAN8T56daJJ4MBGYDDhGrNqi3_O2YE8i20ED81r_SUhPyfrzp_w@mail.gmail.com>
Message-ID: <21666.49846.64134.402919@max.nulle.part>


On 30 December 2014 at 16:38, blesson thomas wrote:
| hi,
|      Am a software developer having 4 yr experience in c++.I want to
| integrate R environment  in my c++ application,please help me to do so.

It's been done, and there is an entire framework for you including examples
for

 - standard use via command-line apps
 - a full example of embedding in GUIs via Qt
 - a full example of embedding in a "Web-based GUI" via Wt
 - parallel computing examples via MPI
 - parallel computing examples via threads
 - linear algebra via Armadillo
 - linear algebra via Eigen
 - and an entire sandboxed server

See 
 http://dirk.eddelbuettel.com/code/rinside.html

and pull requests, patches, contributions are welcome.

Dirk

-- 
http://dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org


From lwaldron.research at gmail.com  Wed Dec 31 22:06:09 2014
From: lwaldron.research at gmail.com (Levi Waldron)
Date: Wed, 31 Dec 2014 16:06:09 -0500
Subject: [Rd] Unexpected behavior of debug() in step-wise mode
Message-ID: <CAOUXvx7Rt45uKGUXvr6xgF3xkfSwLRqecKEmjR6Qcj0Fvvnfxg@mail.gmail.com>

Why does debug() enter Browse[3] here at all, and why does it happen the
first time and not the second? This seems unexpected to me, and has
undesirable effects for ESS users (that I reported here -
https://stat.ethz.ch/pipermail/ess-help/2013-June/009154.html - but just
realized my post to r-devel didn't make it through when I tried to report
it back then).

> Fun <- function(n) print(n)
> debug(Fun)
> Fun(2)
debugging in: Fun(2)
debug: print(n)
Browse[2]> {n+2}
debug at #1: n + 2
Browse[3]> c
[1] 4
Browse[2]> {n+2}
[1] 4
Browse[2]> sessionInfo()
R version 3.1.2 (2014-10-31)
Platform: x86_64-apple-darwin13.4.0 (64-bit)

locale:
[1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8

attached base packages:
[1] stats     graphics  grDevices utils     datasets  methods   base

	[[alternative HTML version deleted]]


From murdoch.duncan at gmail.com  Wed Dec 31 23:11:22 2014
From: murdoch.duncan at gmail.com (Duncan Murdoch)
Date: Wed, 31 Dec 2014 17:11:22 -0500
Subject: [Rd] Unexpected behavior of debug() in step-wise mode
In-Reply-To: <CAOUXvx7Rt45uKGUXvr6xgF3xkfSwLRqecKEmjR6Qcj0Fvvnfxg@mail.gmail.com>
References: <CAOUXvx7Rt45uKGUXvr6xgF3xkfSwLRqecKEmjR6Qcj0Fvvnfxg@mail.gmail.com>
Message-ID: <54A4748A.2030506@gmail.com>

On 31/12/2014 4:06 PM, Levi Waldron wrote:
> Why does debug() enter Browse[3] here at all, and why does it happen the
> first time and not the second? This seems unexpected to me, and has
> undesirable effects for ESS users (that I reported here -
> https://stat.ethz.ch/pipermail/ess-help/2013-June/009154.html - but just
> realized my post to r-devel didn't make it through when I tried to report
> it back then).
> 

Looks like a bug.  I haven't looked at the source, but I would guess
that the { function is being treated specially when you enter the
function, since usually it's the first thing called in the body.

Since you mention ESS, I'm guessing the {n+2} is automatically
generated, it's not typed by the user. You might be able to generate
some equivalent code instead, e.g.

eval(expression(n+2))


Duncan Murdoch

>> Fun <- function(n) print(n)
>> debug(Fun)
>> Fun(2)
> debugging in: Fun(2)
> debug: print(n)
> Browse[2]> {n+2}
> debug at #1: n + 2
> Browse[3]> c
> [1] 4
> Browse[2]> {n+2}
> [1] 4
> Browse[2]> sessionInfo()
> R version 3.1.2 (2014-10-31)
> Platform: x86_64-apple-darwin13.4.0 (64-bit)
> 
> locale:
> [1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8
> 
> attached base packages:
> [1] stats     graphics  grDevices utils     datasets  methods   base
> 
> 	[[alternative HTML version deleted]]
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>


