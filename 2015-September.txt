From ripley at stats.ox.ac.uk  Tue Sep  1 07:50:52 2015
From: ripley at stats.ox.ac.uk (Prof Brian Ripley)
Date: Tue, 1 Sep 2015 06:50:52 +0100
Subject: [Rd] R doesn't compile on FreeBSD 10.2
In-Reply-To: <86si6zzdg5.fsf@stat.ubc.ca>
References: <86fv302hft.fsf@stat.ubc.ca> <55E449DF.7010403@stats.ox.ac.uk>
	<86si6zzdg5.fsf@stat.ubc.ca>
Message-ID: <55E53CBC.1020004@stats.ox.ac.uk>

On 31/08/2015 16:26, Davor Cubranic wrote:
> Prof Brian Ripley writes:
>
>> Second, we don't have all the pertinent information such as the
>> configure options used and the architecture (x86_64?).  I am going to
>> have to guess none as none were mentioned, but using --enable-R-shlib
>> would be pertinent.
>>
>> On 31/08/2015 05:47, Davor Cubranic wrote:
>>> On FreeBSD 10.2, I get the following error when compiling R from the
>>> Subversion trunk (with "configure && make"):
>>
>> You have not told us which revision.  A basic check is to see if you can
>> build the latest released version, as the trunk is 'Under development'.
>
> As suggested, I tried compiling from Subversion tag 3.2.2 (r69054).
> I used no command-line options to 'configure', as mentioned in my
> previous email, and this is the output:
>
>    R is now configured for x86_64-unknown-freebsd10.2
>
>      Source directory:          .
>      Installation directory:    /usr/local
>
>      C compiler:                cc  -g -O2
>      Fortran 77 compiler:       gfortran48  -g -O2
>
>      C++ compiler:              c++  -g -O2
>      C++ 11 compiler:           c++  -std=c++11 -g -O2
>      Fortran 90/95 compiler:    gfortran48 -g -O2
>      Obj-C compiler:	     cc -g -O2 -fobjc-exceptions
>
>      Interfaces supported:      X11, tcltk
>      External libraries:        readline, zlib, bzlib, lzma, PCRE, curl
>      Additional capabilities:   PNG, JPEG, TIFF, NLS, cairo, ICU
>      Options enabled:           shared BLAS, R profiling
>
>      Capabilities skipped:
>      Options not enabled:       memory profiling
>
>      Recommended packages:      yes
>
> (I thought this, and more, would be included in config.log, but please
> let me know if there is other place to get the configuration details
> that are relevant.)

You need to tell us exactly which commands you used: nowhere records 
everything.

>
> Still the same error:
>
>    --- tools.so ---
>    cc -shared -L/usr/local/lib -o tools.so text.o init.o Rmd5.o md5.o signals.o install.o getfmts.o http.o gramLatex.o gramRd.o
>    --- all ---
>    --- shlib ---
>    mkdir ../../../../library/tools/libs
>    --- sysdata ---
>    installing 'sysdata.rda'
>    Error in dyn.load(file, DLLpath = DLLpath, ...) :
>      unable to load shared object '/usr/home/davor/R-3.2.2/library/tools/libs/tools.so':
>      /usr/home/davor/R-3.2.2/library/tools/libs/tools.so: Undefined symbol "R_ClassSymbol"
>    Error: unable to load R code in package 'tools'
>    Execution halted
>
>> Here is a series of checks for that symbol (results from a working Linux
>> system):
>>
>> auk% nm -g bin/exec/R  | grep R_ClassSymbol
>> 0000000000962ec0 B R_ClassSymbol
>>
>> auk% nm -g src/main/main.o | grep R_ClassSymbol
>> 0000000000000008 C R_ClassSymbol
>>
>> auk% nm -g library/tools/libs/tools.so  | grep R_ClassSymbol
>>                    U R_ClassSymbol
>>
>> auk% nm -g src/library/tools/src/gramRd.o | grep R_ClassSymbol
>>                    U R_ClassSymbol
>
> Interestintly, checking for R_ClassSymbol gives the same output as on
> your working Linux system:
>
>    ~/R-3.2.2$ nm -g bin/exec/R | grep R_ClassSymbol
>    00000000008f8ff8 B R_ClassSymbol
>
>    ~/R-3.2.2$ nm -g src/main/main.o | grep R_ClassSymbol
>    0000000000000008 C R_ClassSymbol
>
>    ~/R-3.2.2$ nm -g library/tools/libs/tools.so | grep R_ClassSymbol
>                     U R_ClassSymbol
>
>    ~/R-3.2.2$ nm -g src/library/tools/src/gramRd.o | grep R_ClassSymbol
>                     U R_ClassSymbol
>
>> So R_ClassSymbol is unresolved in the tools package and should be
>> resolved by loading into the main R executable. On Linux that is
>> achieved by the linker flag
>>
>> -Wl,--export-dynamic
>>
>> as part of MAIN_LDFLAGS in Makeconf in the top-level directory.  We have
>> in configure.ac
>>
>>     freebsd*)
>>       main_ldflags="-export-dynamic"
>>       shlib_ldflags="-shared"
>>
>> but those were from the days when FreeBSD used gcc, and it is possible
>> that your use of clang[*] requires -Wl,--export-dynamic . If so, add to
>> config.site
>>
>> MAIN_LDFLAGS="-Wl,--export-dynamic"
>>
>> It would also be worth trying a build with --enable-R-shlib, as that
>> resolves R_ClassSymbol and similar differently.
>
> I tried 'configure --enable-R-shlib', still the same error.
>
> I then tried adding MAIN_LDFLAGS as you suggested, and the install
> worked. Thanks you very much! ("make check" fails in datetime.R, but
> that's something I'll follow up in a separate email.)
>
> Should configure.ac be changed to account for this on FreeBSD's using
> clang? (I should probably also try compiling with GCC, which I had to
> install anyways for gfortran.)

It is more complicated than that, in the absence of any definitive 
FreeBSD documentation.  There are five possibilities:

-export-dynamic
-rdynamic
-Wl,--export-dynamic
-Wl,-export-dynamic
-Wl,-E

The first two work for GCC (and have for a long time, although only the 
second is currently documented) and are accepted by compilers claiming 
to be GCC-compliant (clang and icc).  That clang does nothing with the 
first seems a clear bug in clang (at least on some OSes (which from the 
sources do include FreeBSD) it does support the second and maps it to 
the fourth).  Not least as a compiler called 'gcc' may not be 
GCC-compliant (that on OS X is based on clang).

It seems the GNU linker supports all -WL forms (but only the first and 
last are documented): some other linkers require the fourth line.  And 
that means that GCC's -rdynamic on ELF platforms is documented to 
generate a linker flag, -export-dynamic, that the GNU linker is not 
documented to support.

If FreeBSD continues to use ELF and GNU ld, -Wl,--export-dynamic seems 
the safest choice, but if they change linker (and there are/will be 
alternatives such as gold and lld) -rdynamic might be more future-proof.

It seems R has very few FreeBSD users.  The core team cannot be expected 
to support all minority platforms and we rely on the OS teams to inform 
us what is required.  Now it seems that there *is* a FreeBSD port for R: 
https://www.freebsd.org/ports/math.html albeit at R 3.0.2 but updated 
for texinfo 6.0 a couple of months ago, so that is the place to get 
needed changes recorded.

-- 
Brian D. Ripley,                  ripley at stats.ox.ac.uk
Emeritus Professor of Applied Statistics, University of Oxford
1 South Parks Road, Oxford OX1 3TG, UK


From avraham.adler at gmail.com  Tue Sep  1 16:21:40 2015
From: avraham.adler at gmail.com (Avraham Adler)
Date: Tue, 1 Sep 2015 10:21:40 -0400
Subject: [Rd] Has the changelog for R-devel and R-patched moved?
Message-ID: <CAL6gwnLAMwzQu8XHD9qcP7ej39go99OiVCAih2fxUQCu6DT8+A@mail.gmail.com>

Hello.

There used to be changelog of sorts for R-devel [1] and R-release [2].
Neither have been updated since 2015-07-24. Have these moved
elsewhere, or are they no longer being updated?

Thank you,

Avi

[1] <http://developer.r-project.org/blosxom.cgi/R-devel/NEWS>
[2] <http://developer.r-project.org/blosxom.cgi/R-3-2-branch/NEWS>


From tz at looper.hu  Tue Sep  1 15:35:10 2015
From: tz at looper.hu (=?UTF-8?B?VMOzdGggWm9sdMOhbg==?=)
Date: Tue, 1 Sep 2015 15:35:10 +0200
Subject: [Rd] lazy loading in SparkR
Message-ID: <CAMFijawGSaz42ZYY-hcaq7SvO8fZjdZrubF6Ote082pfkaisSQ@mail.gmail.com>

Hi,

I'm using SparkR and R won't read the promises from the SparkR package,
only if I run lazyLoad manually.

.libPaths(c(file.path(Sys.getenv("SPARK_HOME"), "R", "lib"), .libPaths()))
print(.libPaths())
# [1] "/private/tmp/spark-1.5/spark-1.5.0-SNAPSHOT-bin-hadoop2.6/R/lib"
# [2] "/usr/local/lib/R/3.2/site-library"
# [3] "/usr/local/Cellar/r/3.2.2/R.framework/Versions/3.2/Resources/library"

library(SparkR)
# Works

if(!exists("parallelize",mode="function")){
    # Here is the trick. For some reason, SparkR doesn't load it's
functions/promises automatically here.
    # We can fix it with an internal function:
    lazyLoad(filebase = file.path(SPARK_HOME, "R/lib/SparkR/R/SparkR"),
envir = parent.frame(), filter = function(x) TRUE)
}

# parallelize() works now

Please help me understand what goes wrong.

Here is the whole repro:
https://gist.github.com/zoltanctoth/971ae374dace93de12f0#file-sparkr-rstudio-parallelize-r-L21-L31

And the relevant files from the Spark installation:
https://www.dropbox.com/sh/0xp2wgkbrl7ov64/AAAHRWdMecGMkVdo0GUs6fmYa?dl=0

Thanks,
Best,
Zoltan

--
https://www.linkedin.com/in/zoltanctoth

	[[alternative HTML version deleted]]


From cubranic at stat.ubc.ca  Tue Sep  1 16:40:36 2015
From: cubranic at stat.ubc.ca (Davor Cubranic)
Date: Tue, 01 Sep 2015 07:40:36 -0700
Subject: [Rd] R doesn't compile on FreeBSD 10.2
In-Reply-To: <55E53CBC.1020004@stats.ox.ac.uk>
References: <86fv302hft.fsf@stat.ubc.ca> <55E449DF.7010403@stats.ox.ac.uk>
	<86si6zzdg5.fsf@stat.ubc.ca> <55E53CBC.1020004@stats.ox.ac.uk>
Message-ID: <86twre2oez.fsf@stat.ubc.ca>

I tried compiling using GCC. First, I changed config.site to:
~/R-3.2.2$ svn diff config.site
Index: config.site
===================================================================
--- config.site	(revision 69236)
+++ config.site	(working copy)
@@ -278,3 +278,8 @@
 
 ## Path to the version of pkg-config to be used for locating cairographics.
 ## PKGCONF =
+F77=gfortran48
+FC=${F77}
+CC=gcc48
+CXX=g++48
+OBJC=gcc48

Then plain-vanilla configure && make worked without a hitch:

~/R-3.2.2$ ./configure
[...]
R is now configured for x86_64-unknown-freebsd10.2

  Source directory:          .
  Installation directory:    /usr/local

  C compiler:                gcc48 -std=gnu99  -g -O2
  Fortran 77 compiler:       gfortran48  -g -O2

  C++ compiler:              g++48  -g -O2
  C++ 11 compiler:           g++48  -std=c++11 -g -O2
  Fortran 90/95 compiler:    gfortran48 -g -O2
  Obj-C compiler:	     gcc48 -g -O2 -fobjc-exceptions

  Interfaces supported:      X11, tcltk
  External libraries:        readline, zlib, bzlib, lzma, PCRE, curl
  Additional capabilities:   PNG, JPEG, TIFF, NLS, cairo, ICU
  Options enabled:           shared BLAS, R profiling

  Capabilities skipped:      
  Options not enabled:       memory profiling

  Recommended packages:      yes

"make" completes, and "make check" again fails in datetime.R:

   > Sys.setenv(TZ = "Europe/London")  # pretty much portable.
   > (z <- as.POSIXct("1848-01-01 12:00"))
   Error in as.POSIXlt.character(x, tz, ...) : 
     character string is not in a standard unambiguous format

The next date check is fine, though:
   > (z <- as.POSIXct("2040-01-01 12:00"))
   [1] "2040-01-01 12:00:00 GMT"

as was the 1848 one when TZ="UTC":
   > Sys.setenv(TZ = "UTC")
   > (z <- as.POSIXct("1848-01-01 12:00"))
   [1] "1848-01-01 12:00:00 UTC"

This is probably a quirk of FreeBSD's datetime support, I'll see what
the port used to do for 3.0.2.

Also, there is an issue tracking updating the port to the current
release: https://bugs.freebsd.org/bugzilla/show_bug.cgi?id=195783. I've
posted the summary of this thread there, thanks for your help.

Davor


Prof Brian Ripley writes:

> On 31/08/2015 16:26, Davor Cubranic wrote:
>> Prof Brian Ripley writes:
>>
>>> Second, we don't have all the pertinent information such as the
>>> configure options used and the architecture (x86_64?).  I am going to
>>> have to guess none as none were mentioned, but using --enable-R-shlib
>>> would be pertinent.
>>>
>>> On 31/08/2015 05:47, Davor Cubranic wrote:
>>>> On FreeBSD 10.2, I get the following error when compiling R from the
>>>> Subversion trunk (with "configure && make"):
>>>
>>> You have not told us which revision.  A basic check is to see if you can
>>> build the latest released version, as the trunk is 'Under development'.
>>
>> As suggested, I tried compiling from Subversion tag 3.2.2 (r69054).
>> I used no command-line options to 'configure', as mentioned in my
>> previous email, and this is the output:
>>
>>    R is now configured for x86_64-unknown-freebsd10.2
>>
>>      Source directory:          .
>>      Installation directory:    /usr/local
>>
>>      C compiler:                cc  -g -O2
>>      Fortran 77 compiler:       gfortran48  -g -O2
>>
>>      C++ compiler:              c++  -g -O2
>>      C++ 11 compiler:           c++  -std=c++11 -g -O2
>>      Fortran 90/95 compiler:    gfortran48 -g -O2
>>      Obj-C compiler:	     cc -g -O2 -fobjc-exceptions
>>
>>      Interfaces supported:      X11, tcltk
>>      External libraries:        readline, zlib, bzlib, lzma, PCRE, curl
>>      Additional capabilities:   PNG, JPEG, TIFF, NLS, cairo, ICU
>>      Options enabled:           shared BLAS, R profiling
>>
>>      Capabilities skipped:
>>      Options not enabled:       memory profiling
>>
>>      Recommended packages:      yes
>>
>> (I thought this, and more, would be included in config.log, but please
>> let me know if there is other place to get the configuration details
>> that are relevant.)
>
> You need to tell us exactly which commands you used: nowhere records 
> everything.
>
>>
>> Still the same error:
>>
>>    --- tools.so ---
>>    cc -shared -L/usr/local/lib -o tools.so text.o init.o Rmd5.o md5.o signals.o install.o getfmts.o http.o gramLatex.o gramRd.o
>>    --- all ---
>>    --- shlib ---
>>    mkdir ../../../../library/tools/libs
>>    --- sysdata ---
>>    installing 'sysdata.rda'
>>    Error in dyn.load(file, DLLpath = DLLpath, ...) :
>>      unable to load shared object '/usr/home/davor/R-3.2.2/library/tools/libs/tools.so':
>>      /usr/home/davor/R-3.2.2/library/tools/libs/tools.so: Undefined symbol "R_ClassSymbol"
>>    Error: unable to load R code in package 'tools'
>>    Execution halted
>>
>>> Here is a series of checks for that symbol (results from a working Linux
>>> system):
>>>
>>> auk% nm -g bin/exec/R  | grep R_ClassSymbol
>>> 0000000000962ec0 B R_ClassSymbol
>>>
>>> auk% nm -g src/main/main.o | grep R_ClassSymbol
>>> 0000000000000008 C R_ClassSymbol
>>>
>>> auk% nm -g library/tools/libs/tools.so  | grep R_ClassSymbol
>>>                    U R_ClassSymbol
>>>
>>> auk% nm -g src/library/tools/src/gramRd.o | grep R_ClassSymbol
>>>                    U R_ClassSymbol
>>
>> Interestintly, checking for R_ClassSymbol gives the same output as on
>> your working Linux system:
>>
>>    ~/R-3.2.2$ nm -g bin/exec/R | grep R_ClassSymbol
>>    00000000008f8ff8 B R_ClassSymbol
>>
>>    ~/R-3.2.2$ nm -g src/main/main.o | grep R_ClassSymbol
>>    0000000000000008 C R_ClassSymbol
>>
>>    ~/R-3.2.2$ nm -g library/tools/libs/tools.so | grep R_ClassSymbol
>>                     U R_ClassSymbol
>>
>>    ~/R-3.2.2$ nm -g src/library/tools/src/gramRd.o | grep R_ClassSymbol
>>                     U R_ClassSymbol
>>
>>> So R_ClassSymbol is unresolved in the tools package and should be
>>> resolved by loading into the main R executable. On Linux that is
>>> achieved by the linker flag
>>>
>>> -Wl,--export-dynamic
>>>
>>> as part of MAIN_LDFLAGS in Makeconf in the top-level directory.  We have
>>> in configure.ac
>>>
>>>     freebsd*)
>>>       main_ldflags="-export-dynamic"
>>>       shlib_ldflags="-shared"
>>>
>>> but those were from the days when FreeBSD used gcc, and it is possible
>>> that your use of clang[*] requires -Wl,--export-dynamic . If so, add to
>>> config.site
>>>
>>> MAIN_LDFLAGS="-Wl,--export-dynamic"
>>>
>>> It would also be worth trying a build with --enable-R-shlib, as that
>>> resolves R_ClassSymbol and similar differently.
>>
>> I tried 'configure --enable-R-shlib', still the same error.
>>
>> I then tried adding MAIN_LDFLAGS as you suggested, and the install
>> worked. Thanks you very much! ("make check" fails in datetime.R, but
>> that's something I'll follow up in a separate email.)
>>
>> Should configure.ac be changed to account for this on FreeBSD's using
>> clang? (I should probably also try compiling with GCC, which I had to
>> install anyways for gfortran.)
>
> It is more complicated than that, in the absence of any definitive 
> FreeBSD documentation.  There are five possibilities:
>
> -export-dynamic
> -rdynamic
> -Wl,--export-dynamic
> -Wl,-export-dynamic
> -Wl,-E
>
> The first two work for GCC (and have for a long time, although only the 
> second is currently documented) and are accepted by compilers claiming 
> to be GCC-compliant (clang and icc).  That clang does nothing with the 
> first seems a clear bug in clang (at least on some OSes (which from the 
> sources do include FreeBSD) it does support the second and maps it to 
> the fourth).  Not least as a compiler called 'gcc' may not be 
> GCC-compliant (that on OS X is based on clang).
>
> It seems the GNU linker supports all -WL forms (but only the first and 
> last are documented): some other linkers require the fourth line.  And 
> that means that GCC's -rdynamic on ELF platforms is documented to 
> generate a linker flag, -export-dynamic, that the GNU linker is not 
> documented to support.
>
> If FreeBSD continues to use ELF and GNU ld, -Wl,--export-dynamic seems 
> the safest choice, but if they change linker (and there are/will be 
> alternatives such as gold and lld) -rdynamic might be more future-proof.
>
> It seems R has very few FreeBSD users.  The core team cannot be expected 
> to support all minority platforms and we rely on the OS teams to inform 
> us what is required.  Now it seems that there *is* a FreeBSD port for R: 
> https://www.freebsd.org/ports/math.html albeit at R 3.0.2 but updated 
> for texinfo 6.0 a couple of months ago, so that is the place to get 
> needed changes recorded.


From murdoch.duncan at gmail.com  Tue Sep  1 16:53:26 2015
From: murdoch.duncan at gmail.com (Duncan Murdoch)
Date: Tue, 1 Sep 2015 10:53:26 -0400
Subject: [Rd] Has the changelog for R-devel and R-patched moved?
In-Reply-To: <CAL6gwnLAMwzQu8XHD9qcP7ej39go99OiVCAih2fxUQCu6DT8+A@mail.gmail.com>
References: <CAL6gwnLAMwzQu8XHD9qcP7ej39go99OiVCAih2fxUQCu6DT8+A@mail.gmail.com>
Message-ID: <55E5BBE6.9020704@gmail.com>

On 01/09/2015 10:21 AM, Avraham Adler wrote:
> Hello.
> 
> There used to be changelog of sorts for R-devel [1] and R-release [2].
> Neither have been updated since 2015-07-24. Have these moved
> elsewhere, or are they no longer being updated?

They haven't moved, but occasionally the updates get broken.  Thanks for
the heads up.  I'll give the process a kick.

Duncan Murdoch


From pdalgd at gmail.com  Tue Sep  1 16:57:42 2015
From: pdalgd at gmail.com (peter dalgaard)
Date: Tue, 1 Sep 2015 16:57:42 +0200
Subject: [Rd] Has the changelog for R-devel and R-patched moved?
In-Reply-To: <CAL6gwnLAMwzQu8XHD9qcP7ej39go99OiVCAih2fxUQCu6DT8+A@mail.gmail.com>
References: <CAL6gwnLAMwzQu8XHD9qcP7ej39go99OiVCAih2fxUQCu6DT8+A@mail.gmail.com>
Message-ID: <DE5CF686-D81A-41F7-A7A0-73949238070B@gmail.com>


On 01 Sep 2015, at 16:21 , Avraham Adler <avraham.adler at gmail.com> wrote:

> Hello.
> 
> There used to be changelog of sorts for R-devel [1] and R-release [2].
> Neither have been updated since 2015-07-24. Have these moved
> elsewhere, or are they no longer being updated?

Presumably, something that used to happen daily on the hosting machine (or elsewhere) isn't happening any more....

If the functionality is easily restored, it will probably be restored soon; if not, probably somewhat later.

Meanwhile, the link to the latest NEWS file (one line above!) appears to be up-to-yesterday's date.

-pd

> 
> Thank you,
> 
> Avi
> 
> [1] <http://developer.r-project.org/blosxom.cgi/R-devel/NEWS>
> [2] <http://developer.r-project.org/blosxom.cgi/R-3-2-branch/NEWS>
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel

-- 
Peter Dalgaard, Professor,
Center for Statistics, Copenhagen Business School
Solbjerg Plads 3, 2000 Frederiksberg, Denmark
Phone: (+45)38153501
Office: A 4.23
Email: pd.mes at cbs.dk  Priv: PDalgd at gmail.com


From avraham.adler at gmail.com  Tue Sep  1 17:05:12 2015
From: avraham.adler at gmail.com (Avraham Adler)
Date: Tue, 1 Sep 2015 11:05:12 -0400
Subject: [Rd] Has the changelog for R-devel and R-patched moved?
In-Reply-To: <DE5CF686-D81A-41F7-A7A0-73949238070B@gmail.com>
References: <CAL6gwnLAMwzQu8XHD9qcP7ej39go99OiVCAih2fxUQCu6DT8+A@mail.gmail.com>
	<DE5CF686-D81A-41F7-A7A0-73949238070B@gmail.com>
Message-ID: <CAL6gwnKb7yNgk=Xd_4L_sKvyrMusSysf8NOmqO7UHam-RaYR7w@mail.gmail.com>

On Tue, Sep 1, 2015 at 10:57 AM, peter dalgaard <pdalgd at gmail.com> wrote:
>
> On 01 Sep 2015, at 16:21 , Avraham Adler <avraham.adler at gmail.com> wrote:
>
>> Hello.
>>
>> There used to be changelog of sorts for R-devel [1] and R-release [2].
>> Neither have been updated since 2015-07-24. Have these moved
>> elsewhere, or are they no longer being updated?
>
> Presumably, something that used to happen daily on the hosting machine (or elsewhere) isn't happening any more....
>
> If the functionality is easily restored, it will probably be restored soon; if not, probably somewhat later.
>
> Meanwhile, the link to the latest NEWS file (one line above!) appears to be up-to-yesterday's date.
>
> -pd
>
>>
>> Thank you,
>>
>> Avi
>>
>> [1] <http://developer.r-project.org/blosxom.cgi/R-devel/NEWS>
>> [2] <http://developer.r-project.org/blosxom.cgi/R-3-2-branch/NEWS>
>>
>> ______________________________________________
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel
>
> --
> Peter Dalgaard, Professor,
> Center for Statistics, Copenhagen Business School
> Solbjerg Plads 3, 2000 Frederiksberg, Denmark
> Phone: (+45)38153501
> Office: A 4.23
> Email: pd.mes at cbs.dk  Priv: PDalgd at gmail.com
>

Yes, understood. The reason the changlog is prefereable is that the
NEWS is cumulative, and does not indicate changes between
R-patched_2015-08-26 and R-patched_2015-08-27. Whereas more
information can be gleaned from the changelog entries.


Obviously, this is of very low priority, and if the server refuses to
acknowledge Dr. Murdoch's well-placed steel-toe reminders, getting it
restarted should be deferred as long as is necessary. 8-)

Thank you,

Avi


From ripley at stats.ox.ac.uk  Tue Sep  1 17:12:16 2015
From: ripley at stats.ox.ac.uk (Prof Brian Ripley)
Date: Tue, 1 Sep 2015 16:12:16 +0100
Subject: [Rd] R doesn't compile on FreeBSD 10.2
In-Reply-To: <86twre2oez.fsf@stat.ubc.ca>
References: <86fv302hft.fsf@stat.ubc.ca> <55E449DF.7010403@stats.ox.ac.uk>
	<86si6zzdg5.fsf@stat.ubc.ca> <55E53CBC.1020004@stats.ox.ac.uk>
	<86twre2oez.fsf@stat.ubc.ca>
Message-ID: <55E5C050.6000909@stats.ox.ac.uk>

The datetime.R issue looks familiar.  Darwin (the basis for OS X) copied 
a lot of things from FreeBSD, bugs and all.  So I expect the same remedy 
applies (http://cran.r-project.org/doc/manuals/r-patched/R-admin.html#OS-X):

'Configure option --with-internal-tzcode is the default on OS X, as the 
system implementation of time zones does not work correctly for times 
before 1902 or after 2037 (despite using a 64-bit time_t).'


On 01/09/2015 15:40, Davor Cubranic wrote:
> I tried compiling using GCC. First, I changed config.site to:
> ~/R-3.2.2$ svn diff config.site
> Index: config.site
> ===================================================================
> --- config.site	(revision 69236)
> +++ config.site	(working copy)
> @@ -278,3 +278,8 @@
>
>   ## Path to the version of pkg-config to be used for locating cairographics.
>   ## PKGCONF =
> +F77=gfortran48
> +FC=${F77}
> +CC=gcc48
> +CXX=g++48
> +OBJC=gcc48
>
> Then plain-vanilla configure && make worked without a hitch:
>
> ~/R-3.2.2$ ./configure
> [...]
> R is now configured for x86_64-unknown-freebsd10.2
>
>    Source directory:          .
>    Installation directory:    /usr/local
>
>    C compiler:                gcc48 -std=gnu99  -g -O2
>    Fortran 77 compiler:       gfortran48  -g -O2
>
>    C++ compiler:              g++48  -g -O2
>    C++ 11 compiler:           g++48  -std=c++11 -g -O2
>    Fortran 90/95 compiler:    gfortran48 -g -O2
>    Obj-C compiler:	     gcc48 -g -O2 -fobjc-exceptions
>
>    Interfaces supported:      X11, tcltk
>    External libraries:        readline, zlib, bzlib, lzma, PCRE, curl
>    Additional capabilities:   PNG, JPEG, TIFF, NLS, cairo, ICU
>    Options enabled:           shared BLAS, R profiling
>
>    Capabilities skipped:
>    Options not enabled:       memory profiling
>
>    Recommended packages:      yes
>
> "make" completes, and "make check" again fails in datetime.R:
>
>     > Sys.setenv(TZ = "Europe/London")  # pretty much portable.
>     > (z <- as.POSIXct("1848-01-01 12:00"))
>     Error in as.POSIXlt.character(x, tz, ...) :
>       character string is not in a standard unambiguous format
>
> The next date check is fine, though:
>     > (z <- as.POSIXct("2040-01-01 12:00"))
>     [1] "2040-01-01 12:00:00 GMT"
>
> as was the 1848 one when TZ="UTC":
>     > Sys.setenv(TZ = "UTC")
>     > (z <- as.POSIXct("1848-01-01 12:00"))
>     [1] "1848-01-01 12:00:00 UTC"
>
> This is probably a quirk of FreeBSD's datetime support, I'll see what
> the port used to do for 3.0.2.
>
> Also, there is an issue tracking updating the port to the current
> release: https://bugs.freebsd.org/bugzilla/show_bug.cgi?id=195783. I've
> posted the summary of this thread there, thanks for your help.
>
> Davor
>
>
> Prof Brian Ripley writes:
>
>> On 31/08/2015 16:26, Davor Cubranic wrote:
>>> Prof Brian Ripley writes:
>>>
>>>> Second, we don't have all the pertinent information such as the
>>>> configure options used and the architecture (x86_64?).  I am going to
>>>> have to guess none as none were mentioned, but using --enable-R-shlib
>>>> would be pertinent.
>>>>
>>>> On 31/08/2015 05:47, Davor Cubranic wrote:
>>>>> On FreeBSD 10.2, I get the following error when compiling R from the
>>>>> Subversion trunk (with "configure && make"):
>>>>
>>>> You have not told us which revision.  A basic check is to see if you can
>>>> build the latest released version, as the trunk is 'Under development'.
>>>
>>> As suggested, I tried compiling from Subversion tag 3.2.2 (r69054).
>>> I used no command-line options to 'configure', as mentioned in my
>>> previous email, and this is the output:
>>>
>>>     R is now configured for x86_64-unknown-freebsd10.2
>>>
>>>       Source directory:          .
>>>       Installation directory:    /usr/local
>>>
>>>       C compiler:                cc  -g -O2
>>>       Fortran 77 compiler:       gfortran48  -g -O2
>>>
>>>       C++ compiler:              c++  -g -O2
>>>       C++ 11 compiler:           c++  -std=c++11 -g -O2
>>>       Fortran 90/95 compiler:    gfortran48 -g -O2
>>>       Obj-C compiler:	     cc -g -O2 -fobjc-exceptions
>>>
>>>       Interfaces supported:      X11, tcltk
>>>       External libraries:        readline, zlib, bzlib, lzma, PCRE, curl
>>>       Additional capabilities:   PNG, JPEG, TIFF, NLS, cairo, ICU
>>>       Options enabled:           shared BLAS, R profiling
>>>
>>>       Capabilities skipped:
>>>       Options not enabled:       memory profiling
>>>
>>>       Recommended packages:      yes
>>>
>>> (I thought this, and more, would be included in config.log, but please
>>> let me know if there is other place to get the configuration details
>>> that are relevant.)
>>
>> You need to tell us exactly which commands you used: nowhere records
>> everything.
>>
>>>
>>> Still the same error:
>>>
>>>     --- tools.so ---
>>>     cc -shared -L/usr/local/lib -o tools.so text.o init.o Rmd5.o md5.o signals.o install.o getfmts.o http.o gramLatex.o gramRd.o
>>>     --- all ---
>>>     --- shlib ---
>>>     mkdir ../../../../library/tools/libs
>>>     --- sysdata ---
>>>     installing 'sysdata.rda'
>>>     Error in dyn.load(file, DLLpath = DLLpath, ...) :
>>>       unable to load shared object '/usr/home/davor/R-3.2.2/library/tools/libs/tools.so':
>>>       /usr/home/davor/R-3.2.2/library/tools/libs/tools.so: Undefined symbol "R_ClassSymbol"
>>>     Error: unable to load R code in package 'tools'
>>>     Execution halted
>>>
>>>> Here is a series of checks for that symbol (results from a working Linux
>>>> system):
>>>>
>>>> auk% nm -g bin/exec/R  | grep R_ClassSymbol
>>>> 0000000000962ec0 B R_ClassSymbol
>>>>
>>>> auk% nm -g src/main/main.o | grep R_ClassSymbol
>>>> 0000000000000008 C R_ClassSymbol
>>>>
>>>> auk% nm -g library/tools/libs/tools.so  | grep R_ClassSymbol
>>>>                     U R_ClassSymbol
>>>>
>>>> auk% nm -g src/library/tools/src/gramRd.o | grep R_ClassSymbol
>>>>                     U R_ClassSymbol
>>>
>>> Interestintly, checking for R_ClassSymbol gives the same output as on
>>> your working Linux system:
>>>
>>>     ~/R-3.2.2$ nm -g bin/exec/R | grep R_ClassSymbol
>>>     00000000008f8ff8 B R_ClassSymbol
>>>
>>>     ~/R-3.2.2$ nm -g src/main/main.o | grep R_ClassSymbol
>>>     0000000000000008 C R_ClassSymbol
>>>
>>>     ~/R-3.2.2$ nm -g library/tools/libs/tools.so | grep R_ClassSymbol
>>>                      U R_ClassSymbol
>>>
>>>     ~/R-3.2.2$ nm -g src/library/tools/src/gramRd.o | grep R_ClassSymbol
>>>                      U R_ClassSymbol
>>>
>>>> So R_ClassSymbol is unresolved in the tools package and should be
>>>> resolved by loading into the main R executable. On Linux that is
>>>> achieved by the linker flag
>>>>
>>>> -Wl,--export-dynamic
>>>>
>>>> as part of MAIN_LDFLAGS in Makeconf in the top-level directory.  We have
>>>> in configure.ac
>>>>
>>>>      freebsd*)
>>>>        main_ldflags="-export-dynamic"
>>>>        shlib_ldflags="-shared"
>>>>
>>>> but those were from the days when FreeBSD used gcc, and it is possible
>>>> that your use of clang[*] requires -Wl,--export-dynamic . If so, add to
>>>> config.site
>>>>
>>>> MAIN_LDFLAGS="-Wl,--export-dynamic"
>>>>
>>>> It would also be worth trying a build with --enable-R-shlib, as that
>>>> resolves R_ClassSymbol and similar differently.
>>>
>>> I tried 'configure --enable-R-shlib', still the same error.
>>>
>>> I then tried adding MAIN_LDFLAGS as you suggested, and the install
>>> worked. Thanks you very much! ("make check" fails in datetime.R, but
>>> that's something I'll follow up in a separate email.)
>>>
>>> Should configure.ac be changed to account for this on FreeBSD's using
>>> clang? (I should probably also try compiling with GCC, which I had to
>>> install anyways for gfortran.)
>>
>> It is more complicated than that, in the absence of any definitive
>> FreeBSD documentation.  There are five possibilities:
>>
>> -export-dynamic
>> -rdynamic
>> -Wl,--export-dynamic
>> -Wl,-export-dynamic
>> -Wl,-E
>>
>> The first two work for GCC (and have for a long time, although only the
>> second is currently documented) and are accepted by compilers claiming
>> to be GCC-compliant (clang and icc).  That clang does nothing with the
>> first seems a clear bug in clang (at least on some OSes (which from the
>> sources do include FreeBSD) it does support the second and maps it to
>> the fourth).  Not least as a compiler called 'gcc' may not be
>> GCC-compliant (that on OS X is based on clang).
>>
>> It seems the GNU linker supports all -WL forms (but only the first and
>> last are documented): some other linkers require the fourth line.  And
>> that means that GCC's -rdynamic on ELF platforms is documented to
>> generate a linker flag, -export-dynamic, that the GNU linker is not
>> documented to support.
>>
>> If FreeBSD continues to use ELF and GNU ld, -Wl,--export-dynamic seems
>> the safest choice, but if they change linker (and there are/will be
>> alternatives such as gold and lld) -rdynamic might be more future-proof.
>>
>> It seems R has very few FreeBSD users.  The core team cannot be expected
>> to support all minority platforms and we rely on the OS teams to inform
>> us what is required.  Now it seems that there *is* a FreeBSD port for R:
>> https://www.freebsd.org/ports/math.html albeit at R 3.0.2 but updated
>> for texinfo 6.0 a couple of months ago, so that is the place to get
>> needed changes recorded.


-- 
Brian D. Ripley,                  ripley at stats.ox.ac.uk
Emeritus Professor of Applied Statistics, University of Oxford
1 South Parks Road, Oxford OX1 3TG, UK


From pdalgd at gmail.com  Tue Sep  1 18:37:21 2015
From: pdalgd at gmail.com (peter dalgaard)
Date: Tue, 1 Sep 2015 18:37:21 +0200
Subject: [Rd] Has the changelog for R-devel and R-patched moved?
In-Reply-To: <CAL6gwnKb7yNgk=Xd_4L_sKvyrMusSysf8NOmqO7UHam-RaYR7w@mail.gmail.com>
References: <CAL6gwnLAMwzQu8XHD9qcP7ej39go99OiVCAih2fxUQCu6DT8+A@mail.gmail.com>
	<DE5CF686-D81A-41F7-A7A0-73949238070B@gmail.com>
	<CAL6gwnKb7yNgk=Xd_4L_sKvyrMusSysf8NOmqO7UHam-RaYR7w@mail.gmail.com>
Message-ID: <2ADF9745-D0BF-4AC2-811D-42FE0EC2916D@gmail.com>


> On 01 Sep 2015, at 17:05 , Avraham Adler <avraham.adler at gmail.com> wrote:
>> 
> 
> Yes, understood. The reason the changlog is prefereable is that the
> NEWS is cumulative, and does not indicate changes between
> R-patched_2015-08-26 and R-patched_2015-08-27. Whereas more
> information can be gleaned from the changelog entries.
> 

You mean like 

svn diff -x -w -r '{2015-08-26}':'{2015-08-27}' https://svn.r-project.org/R/branches/R-3-2-branch/doc/NEWS.Rd

;-)

(Not that anything actually happened that day.)


-- 
Peter Dalgaard, Professor,
Center for Statistics, Copenhagen Business School
Solbjerg Plads 3, 2000 Frederiksberg, Denmark
Phone: (+45)38153501
Email: pd.mes at cbs.dk  Priv: PDalgd at gmail.com


From murdoch.duncan at gmail.com  Tue Sep  1 19:54:29 2015
From: murdoch.duncan at gmail.com (Duncan Murdoch)
Date: Tue, 1 Sep 2015 13:54:29 -0400
Subject: [Rd] Has the changelog for R-devel and R-patched moved?
In-Reply-To: <CAL6gwnKb7yNgk=Xd_4L_sKvyrMusSysf8NOmqO7UHam-RaYR7w@mail.gmail.com>
References: <CAL6gwnLAMwzQu8XHD9qcP7ej39go99OiVCAih2fxUQCu6DT8+A@mail.gmail.com>
	<DE5CF686-D81A-41F7-A7A0-73949238070B@gmail.com>
	<CAL6gwnKb7yNgk=Xd_4L_sKvyrMusSysf8NOmqO7UHam-RaYR7w@mail.gmail.com>
Message-ID: <55E5E655.70109@gmail.com>

On 01/09/2015 11:05 AM, Avraham Adler wrote:
> On Tue, Sep 1, 2015 at 10:57 AM, peter dalgaard <pdalgd at gmail.com> wrote:
>>
>> On 01 Sep 2015, at 16:21 , Avraham Adler <avraham.adler at gmail.com> wrote:
>>
>>> Hello.
>>>
>>> There used to be changelog of sorts for R-devel [1] and R-release [2].
>>> Neither have been updated since 2015-07-24. Have these moved
>>> elsewhere, or are they no longer being updated?
>>
>> Presumably, something that used to happen daily on the hosting machine (or elsewhere) isn't happening any more....
>>
>> If the functionality is easily restored, it will probably be restored soon; if not, probably somewhat later.
>>
>> Meanwhile, the link to the latest NEWS file (one line above!) appears to be up-to-yesterday's date.
>>
>> -pd
>>
>>>
>>> Thank you,
>>>
>>> Avi
>>>
>>> [1] <http://developer.r-project.org/blosxom.cgi/R-devel/NEWS>
>>> [2] <http://developer.r-project.org/blosxom.cgi/R-3-2-branch/NEWS>
>>>
>>> ______________________________________________
>>> R-devel at r-project.org mailing list
>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>
>> --
>> Peter Dalgaard, Professor,
>> Center for Statistics, Copenhagen Business School
>> Solbjerg Plads 3, 2000 Frederiksberg, Denmark
>> Phone: (+45)38153501
>> Office: A 4.23
>> Email: pd.mes at cbs.dk  Priv: PDalgd at gmail.com
>>
> 
> Yes, understood. The reason the changlog is prefereable is that the
> NEWS is cumulative, and does not indicate changes between
> R-patched_2015-08-26 and R-patched_2015-08-27. Whereas more
> information can be gleaned from the changelog entries.
> 
> 
> Obviously, this is of very low priority, and if the server refuses to
> acknowledge Dr. Murdoch's well-placed steel-toe reminders, getting it
> restarted should be deferred as long as is necessary. 8-)

Nobody ignores my steel-toe boots ;-). It's going again.

Duncan Murdoch


From cubranic at stat.ubc.ca  Wed Sep  2 08:52:37 2015
From: cubranic at stat.ubc.ca (Davor Cubranic)
Date: Tue, 01 Sep 2015 23:52:37 -0700
Subject: [Rd] R doesn't compile on FreeBSD 10.2
In-Reply-To: <55E5C050.6000909@stats.ox.ac.uk>
References: <86fv302hft.fsf@stat.ubc.ca> <55E449DF.7010403@stats.ox.ac.uk>
	<86si6zzdg5.fsf@stat.ubc.ca> <55E53CBC.1020004@stats.ox.ac.uk>
	<86twre2oez.fsf@stat.ubc.ca> <55E5C050.6000909@stats.ox.ac.uk>
Message-ID: <86io7t5n4a.fsf@stat.ubc.ca>


I tried "./configure --with-internal-tzcode && make", but it caused
problems seemingly with any parsing of time. Example:

  ~/R-3.2.2$ make check
  Testing examples for package ?base?
  Testing examples for package ?tools?
  Warning in as.POSIXlt.POSIXct(x, tz) : unknown timezone ''
  Warning in as.POSIXlt.POSIXct(x, tz) : unknown timezone 'GMT'
  Warning in as.POSIXlt.POSIXct(x, tz) :
    unknown timezone 'America/New_York'
    comparing ?tools-Ex.Rout? to ?tools-Ex.Rout.save? ... OK
  [...]
  running code in 'simple-true.R' ... OK
    comparing 'simple-true.Rout' to './simple-true.Rout.save' ...231,237d230
  < Warning messages:
  < 1: In strptime(xx, f <- "%Y-%m-%d %H:%M:%OS", tz = tz) :
  <   unknown timezone ''
  < 2: In strptime(xx, f <- "%Y-%m-%d %H:%M:%OS", tz = tz) :
  <   unknown timezone 'GMT'
  < 3: In strptime(xx, f <- "%Y-%m-%d %H:%M:%OS", tz = tz) :
  <   unknown timezone 'America/New_York'
  *** Error code 1

  Stop.
  [...]

Interestingly, doing the same (using option "--with-internal-tzcode")
with r69235 from the trunk, everything works fine and "make check"
completes with no errors.

Davor


Prof Brian Ripley writes:

> The datetime.R issue looks familiar.  Darwin (the basis for OS X) copied 
> a lot of things from FreeBSD, bugs and all.  So I expect the same remedy 
> applies (http://cran.r-project.org/doc/manuals/r-patched/R-admin.html#OS-X):
>
> 'Configure option --with-internal-tzcode is the default on OS X, as the 
> system implementation of time zones does not work correctly for times 
> before 1902 or after 2037 (despite using a 64-bit time_t).'
>
>
> On 01/09/2015 15:40, Davor Cubranic wrote:
>> I tried compiling using GCC. First, I changed config.site to:
>> ~/R-3.2.2$ svn diff config.site
>> Index: config.site
>> ===================================================================
>> --- config.site	(revision 69236)
>> +++ config.site	(working copy)
>> @@ -278,3 +278,8 @@
>>
>>   ## Path to the version of pkg-config to be used for locating cairographics.
>>   ## PKGCONF =
>> +F77=gfortran48
>> +FC=${F77}
>> +CC=gcc48
>> +CXX=g++48
>> +OBJC=gcc48
>>
>> Then plain-vanilla configure && make worked without a hitch:
>>
>> ~/R-3.2.2$ ./configure
>> [...]
>> R is now configured for x86_64-unknown-freebsd10.2
>>
>>    Source directory:          .
>>    Installation directory:    /usr/local
>>
>>    C compiler:                gcc48 -std=gnu99  -g -O2
>>    Fortran 77 compiler:       gfortran48  -g -O2
>>
>>    C++ compiler:              g++48  -g -O2
>>    C++ 11 compiler:           g++48  -std=c++11 -g -O2
>>    Fortran 90/95 compiler:    gfortran48 -g -O2
>>    Obj-C compiler:	     gcc48 -g -O2 -fobjc-exceptions
>>
>>    Interfaces supported:      X11, tcltk
>>    External libraries:        readline, zlib, bzlib, lzma, PCRE, curl
>>    Additional capabilities:   PNG, JPEG, TIFF, NLS, cairo, ICU
>>    Options enabled:           shared BLAS, R profiling
>>
>>    Capabilities skipped:
>>    Options not enabled:       memory profiling
>>
>>    Recommended packages:      yes
>>
>> "make" completes, and "make check" again fails in datetime.R:
>>
>>     > Sys.setenv(TZ = "Europe/London")  # pretty much portable.
>>     > (z <- as.POSIXct("1848-01-01 12:00"))
>>     Error in as.POSIXlt.character(x, tz, ...) :
>>       character string is not in a standard unambiguous format
>>
>> The next date check is fine, though:
>>     > (z <- as.POSIXct("2040-01-01 12:00"))
>>     [1] "2040-01-01 12:00:00 GMT"
>>
>> as was the 1848 one when TZ="UTC":
>>     > Sys.setenv(TZ = "UTC")
>>     > (z <- as.POSIXct("1848-01-01 12:00"))
>>     [1] "1848-01-01 12:00:00 UTC"
>>
>> This is probably a quirk of FreeBSD's datetime support, I'll see what
>> the port used to do for 3.0.2.
>>
>> Also, there is an issue tracking updating the port to the current
>> release: https://bugs.freebsd.org/bugzilla/show_bug.cgi?id=195783. I've
>> posted the summary of this thread there, thanks for your help.
>>
>> Davor
>>
>>
>> Prof Brian Ripley writes:
>>
>>> On 31/08/2015 16:26, Davor Cubranic wrote:
>>>> Prof Brian Ripley writes:
>>>>
>>>>> Second, we don't have all the pertinent information such as the
>>>>> configure options used and the architecture (x86_64?).  I am going to
>>>>> have to guess none as none were mentioned, but using --enable-R-shlib
>>>>> would be pertinent.
>>>>>
>>>>> On 31/08/2015 05:47, Davor Cubranic wrote:
>>>>>> On FreeBSD 10.2, I get the following error when compiling R from the
>>>>>> Subversion trunk (with "configure && make"):
>>>>>
>>>>> You have not told us which revision.  A basic check is to see if you can
>>>>> build the latest released version, as the trunk is 'Under development'.
>>>>
>>>> As suggested, I tried compiling from Subversion tag 3.2.2 (r69054).
>>>> I used no command-line options to 'configure', as mentioned in my
>>>> previous email, and this is the output:
>>>>
>>>>     R is now configured for x86_64-unknown-freebsd10.2
>>>>
>>>>       Source directory:          .
>>>>       Installation directory:    /usr/local
>>>>
>>>>       C compiler:                cc  -g -O2
>>>>       Fortran 77 compiler:       gfortran48  -g -O2
>>>>
>>>>       C++ compiler:              c++  -g -O2
>>>>       C++ 11 compiler:           c++  -std=c++11 -g -O2
>>>>       Fortran 90/95 compiler:    gfortran48 -g -O2
>>>>       Obj-C compiler:	     cc -g -O2 -fobjc-exceptions
>>>>
>>>>       Interfaces supported:      X11, tcltk
>>>>       External libraries:        readline, zlib, bzlib, lzma, PCRE, curl
>>>>       Additional capabilities:   PNG, JPEG, TIFF, NLS, cairo, ICU
>>>>       Options enabled:           shared BLAS, R profiling
>>>>
>>>>       Capabilities skipped:
>>>>       Options not enabled:       memory profiling
>>>>
>>>>       Recommended packages:      yes
>>>>
>>>> (I thought this, and more, would be included in config.log, but please
>>>> let me know if there is other place to get the configuration details
>>>> that are relevant.)
>>>
>>> You need to tell us exactly which commands you used: nowhere records
>>> everything.
>>>
>>>>
>>>> Still the same error:
>>>>
>>>>     --- tools.so ---
>>>>     cc -shared -L/usr/local/lib -o tools.so text.o init.o Rmd5.o md5.o signals.o install.o getfmts.o http.o gramLatex.o gramRd.o
>>>>     --- all ---
>>>>     --- shlib ---
>>>>     mkdir ../../../../library/tools/libs
>>>>     --- sysdata ---
>>>>     installing 'sysdata.rda'
>>>>     Error in dyn.load(file, DLLpath = DLLpath, ...) :
>>>>       unable to load shared object '/usr/home/davor/R-3.2.2/library/tools/libs/tools.so':
>>>>       /usr/home/davor/R-3.2.2/library/tools/libs/tools.so: Undefined symbol "R_ClassSymbol"
>>>>     Error: unable to load R code in package 'tools'
>>>>     Execution halted
>>>>
>>>>> Here is a series of checks for that symbol (results from a working Linux
>>>>> system):
>>>>>
>>>>> auk% nm -g bin/exec/R  | grep R_ClassSymbol
>>>>> 0000000000962ec0 B R_ClassSymbol
>>>>>
>>>>> auk% nm -g src/main/main.o | grep R_ClassSymbol
>>>>> 0000000000000008 C R_ClassSymbol
>>>>>
>>>>> auk% nm -g library/tools/libs/tools.so  | grep R_ClassSymbol
>>>>>                     U R_ClassSymbol
>>>>>
>>>>> auk% nm -g src/library/tools/src/gramRd.o | grep R_ClassSymbol
>>>>>                     U R_ClassSymbol
>>>>
>>>> Interestintly, checking for R_ClassSymbol gives the same output as on
>>>> your working Linux system:
>>>>
>>>>     ~/R-3.2.2$ nm -g bin/exec/R | grep R_ClassSymbol
>>>>     00000000008f8ff8 B R_ClassSymbol
>>>>
>>>>     ~/R-3.2.2$ nm -g src/main/main.o | grep R_ClassSymbol
>>>>     0000000000000008 C R_ClassSymbol
>>>>
>>>>     ~/R-3.2.2$ nm -g library/tools/libs/tools.so | grep R_ClassSymbol
>>>>                      U R_ClassSymbol
>>>>
>>>>     ~/R-3.2.2$ nm -g src/library/tools/src/gramRd.o | grep R_ClassSymbol
>>>>                      U R_ClassSymbol
>>>>
>>>>> So R_ClassSymbol is unresolved in the tools package and should be
>>>>> resolved by loading into the main R executable. On Linux that is
>>>>> achieved by the linker flag
>>>>>
>>>>> -Wl,--export-dynamic
>>>>>
>>>>> as part of MAIN_LDFLAGS in Makeconf in the top-level directory.  We have
>>>>> in configure.ac
>>>>>
>>>>>      freebsd*)
>>>>>        main_ldflags="-export-dynamic"
>>>>>        shlib_ldflags="-shared"
>>>>>
>>>>> but those were from the days when FreeBSD used gcc, and it is possible
>>>>> that your use of clang[*] requires -Wl,--export-dynamic . If so, add to
>>>>> config.site
>>>>>
>>>>> MAIN_LDFLAGS="-Wl,--export-dynamic"
>>>>>
>>>>> It would also be worth trying a build with --enable-R-shlib, as that
>>>>> resolves R_ClassSymbol and similar differently.
>>>>
>>>> I tried 'configure --enable-R-shlib', still the same error.
>>>>
>>>> I then tried adding MAIN_LDFLAGS as you suggested, and the install
>>>> worked. Thanks you very much! ("make check" fails in datetime.R, but
>>>> that's something I'll follow up in a separate email.)
>>>>
>>>> Should configure.ac be changed to account for this on FreeBSD's using
>>>> clang? (I should probably also try compiling with GCC, which I had to
>>>> install anyways for gfortran.)
>>>
>>> It is more complicated than that, in the absence of any definitive
>>> FreeBSD documentation.  There are five possibilities:
>>>
>>> -export-dynamic
>>> -rdynamic
>>> -Wl,--export-dynamic
>>> -Wl,-export-dynamic
>>> -Wl,-E
>>>
>>> The first two work for GCC (and have for a long time, although only the
>>> second is currently documented) and are accepted by compilers claiming
>>> to be GCC-compliant (clang and icc).  That clang does nothing with the
>>> first seems a clear bug in clang (at least on some OSes (which from the
>>> sources do include FreeBSD) it does support the second and maps it to
>>> the fourth).  Not least as a compiler called 'gcc' may not be
>>> GCC-compliant (that on OS X is based on clang).
>>>
>>> It seems the GNU linker supports all -WL forms (but only the first and
>>> last are documented): some other linkers require the fourth line.  And
>>> that means that GCC's -rdynamic on ELF platforms is documented to
>>> generate a linker flag, -export-dynamic, that the GNU linker is not
>>> documented to support.
>>>
>>> If FreeBSD continues to use ELF and GNU ld, -Wl,--export-dynamic seems
>>> the safest choice, but if they change linker (and there are/will be
>>> alternatives such as gold and lld) -rdynamic might be more future-proof.
>>>
>>> It seems R has very few FreeBSD users.  The core team cannot be expected
>>> to support all minority platforms and we rely on the OS teams to inform
>>> us what is required.  Now it seems that there *is* a FreeBSD port for R:
>>> https://www.freebsd.org/ports/math.html albeit at R 3.0.2 but updated
>>> for texinfo 6.0 a couple of months ago, so that is the place to get
>>> needed changes recorded.

-- 
Sent with my mu4e


From tdhock5 at gmail.com  Wed Sep  2 19:12:32 2015
From: tdhock5 at gmail.com (Toby Hocking)
Date: Wed, 2 Sep 2015 13:12:32 -0400
Subject: [Rd] mclapply memory leak?
Message-ID: <CALK03d1JmAJFHPCgv2vvQDk-3iP5_exk_0Vu65P9OQV=S7kAqg@mail.gmail.com>

Dear R-devel,

I am running mclapply with many iterations over a function that modifies
nothing and makes no copies of anything. It is taking up a lot of memory,
so it seems to me like this is a bug. Should I post this to
bugs.r-project.org?

A minimal reproducible example can be obtained by first starting a memory
monitoring program such as htop, and then executing the following code
while looking at how much memory is being used by the system

library(parallel)
seconds <- 5
N <- 100000
result.list <- mclapply(1:N, function(i)Sys.sleep(1/N*seconds))

On my system, memory usage goes up about 60MB on this example. But it does
not go up at all if I change mclapply to lapply. Is this a bug?

For a more detailed discussion with a figure that shows that the memory
overhead is linear in N, please see
https://github.com/tdhock/mclapply-memory

> sessionInfo()
R version 3.2.2 (2015-08-14)
Platform: x86_64-pc-linux-gnu (64-bit)
Running under: Ubuntu precise (12.04.5 LTS)

locale:
 [1] LC_CTYPE=en_CA.UTF-8       LC_NUMERIC=C
 [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_CA.UTF-8
 [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_CA.UTF-8
 [7] LC_PAPER=en_US.UTF-8       LC_NAME=C
 [9] LC_ADDRESS=C               LC_TELEPHONE=C
[11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C

attached base packages:
[1] parallel  graphics  utils     datasets  stats     grDevices methods
[8] base

other attached packages:
[1] ggplot2_1.0.1      RColorBrewer_1.0-5 lattice_0.20-33

loaded via a namespace (and not attached):
 [1] Rcpp_0.11.6             digest_0.6.4            MASS_7.3-43
 [4] grid_3.2.2              plyr_1.8.1              gtable_0.1.2
 [7] scales_0.2.3            reshape2_1.2.2          proto_1.0.0
[10] labeling_0.2            tools_3.2.2             stringr_0.6.2
[13] dichromat_2.0-0         munsell_0.4.2           PeakSegJoint_2015.08.06
[16] compiler_3.2.2          colorspace_1.2-4

	[[alternative HTML version deleted]]


From arnaud.gaboury at gmail.com  Wed Sep  2 19:35:27 2015
From: arnaud.gaboury at gmail.com (arnaud gaboury)
Date: Wed, 2 Sep 2015 19:35:27 +0200
Subject: [Rd] Build R with MKL and ICC
Message-ID: <CAK1hC9uLYSyA-7W92TwD4J9adcxDRE1a2ig1iDDPSyN43kikyg@mail.gmail.com>

After a few days of reading and headache, I finally gave a try at
building R from source with Intel MKL and ICC. Documentation and posts
on this topic are rather incomplete, sometime fantasist et do not give
much explanations about configure options.
As I am not sure if mine is correct, I would appreciate some advices and hints.

OS: Fedora 22
parallel_studio_xe_2016
Hardware : 8 Thread(s) per core: 2 Vendor ID: GenuineIntel Model name:
Intel(R) Core(TM) i7-2600K CPU @ 3.40GHz - Sandybridge
R-3.2.2

Here is my build configuration:

-------------------------------------------------------
source /opt/intel/compilers_and_libraries_2016/linux/mkl/bin/mklvars.sh intel64
source /opt/intel/bin/compilervars.sh intel64
_mkllibpath=$MKLROOT/lib/intel64
_icclibpath=$MKLROOT/linux/compiler/lib
export LD_LIBRARY_PATH=${_mkllibpath}:${_icclibpath}
export MKL="-L${_mkllibpath} -L${_icclibpath} -lmkl_intel_lp64
-lmkl_intel_thread -lmkl_core  -liomp5 -lpthread"
export CC="icc"
export F77="ifort"
export CXX="icpc"
export AR="xiar"
export LD="xild"
export CFLAGS="-O3 -ipo -openmp -parallel -xAVX"
export CXXFLAGS="-O3 -ipo -openmp -parallel -xAVX"
export FFLAGS="-O3 -ipo -openmp -parallel -xAVX"
export MAIN_LDFLAGS='-openmp'
./configure --with-lapack --with-blas="$MKL" --enable-R-shlib
--enable-memory-profiling --enable-openmp --enable-BLAS-shlib
--enable-lto F77=${F77} FC=${F77}
------------------------------------------------------------

After I run ./configure, it seems from config.log everything is fine:

checking for dgemm_ in
result: yes

checking whether double complex BLAS can be used
result: yes

checking whether the BLAS is complete
result: yes

The only error I can see is ld complaining about not finding -lRblas
----------------------------------------------------------------------------

Then run $ make with no errors.
Now, with no $ make install, I get this:

--------------------------------------------------------------------
$ ldd bin/exec/R
linux-vdso.so.1 (0x00007ffe073f3000)
libR.so => /usr/lib64/R/lib/libR.so (0x00007f43939e6000)
libRblas.so => not found
libm.so.6 => /lib64/libm.so.6 (0x00007f43936de000)
libiomp5.so => /opt/intel/compilers_and_libraries_2016.0.109/linux/compiler/lib/intel64/libiomp5.so
(0x00007f439339c000)
libgcc_s.so.1 => /lib64/libgcc_s.so.1 (0x00007f4393185000)
libpthread.so.0 => /lib64/libpthread.so.0 (0x00007f4392f69000)
libc.so.6 => /lib64/libc.so.6 (0x00007f4392ba8000)
libdl.so.2 => /lib64/libdl.so.2 (0x00007f43929a4000)
libblas.so.3 => /lib64/libblas.so.3 (0x00007f439274b000)
libgfortran.so.3 => /lib64/libgfortran.so.3 (0x00007f439241f000)
libquadmath.so.0 => /lib64/libquadmath.so.0 (0x00007f43921e0000)
libreadline.so.6 => /lib64/libreadline.so.6 (0x00007f4391f96000)
libtre.so.5 => /lib64/libtre.so.5 (0x00007f4391d85000)
libpcre.so.1 => /lib64/libpcre.so.1 (0x00007f4391b15000)
liblzma.so.5 => /lib64/liblzma.so.5 (0x00007f43918ef000)
libbz2.so.1 => /lib64/libbz2.so.1 (0x00007f43916de000)
libz.so.1 => /lib64/libz.so.1 (0x00007f43914c8000)
librt.so.1 => /lib64/librt.so.1 (0x00007f43912c0000)
libicuuc.so.54 => /lib64/libicuuc.so.54 (0x00007f4390f2e000)
libicui18n.so.54 => /lib64/libicui18n.so.54 (0x00007f4390ad7000)
libgomp.so.1 => /lib64/libgomp.so.1 (0x00007f43908b5000)
/lib64/ld-linux-x86-64.so.2 (0x00005557e2243000)
libtinfo.so.5 => /lib64/libtinfo.so.5 (0x00007f439068a000)
libicudata.so.54 => /lib64/libicudata.so.54 (0x00007f438ec5f000)
libstdc++.so.6 => /lib64/libstdc++.so.6 (0x00007f438e8dc000)
-----------------------------------------------------------------------------------------------


Now a few questions:

1- am I not supposed to see something like this in the ldd command return?
libmkl_intel_lp64.so => /opt/intel....
libmkl_intel_thread.so => /opt/intel/....
libmkl_core.so => /opt/intel/...

Or do I need to run $make install before ldd?

2- when visiting Intel MKL link advisor[0], here is what I get as
configure and make options:
Linking: -L${MKLROOT}/lib/intel64 -lmkl_intel_ilp64 -lmkl_core
-lmkl_intel_thread -lpthread -lm
Compiler options:  -DMKL_ILP64 -qopenmp -I${MKLROOT}/include

What is the difference between -openmp and -qopenmp? Shall I use
indeed the above compiler options?

Thank you for help in this difficult topic for me.

-- 

google.com/+arnaudgabourygabx


From gmbecker at ucdavis.edu  Wed Sep  2 20:35:35 2015
From: gmbecker at ucdavis.edu (Gabriel Becker)
Date: Wed, 2 Sep 2015 11:35:35 -0700
Subject: [Rd] mclapply memory leak?
In-Reply-To: <CALK03d1JmAJFHPCgv2vvQDk-3iP5_exk_0Vu65P9OQV=S7kAqg@mail.gmail.com>
References: <CALK03d1JmAJFHPCgv2vvQDk-3iP5_exk_0Vu65P9OQV=S7kAqg@mail.gmail.com>
Message-ID: <CADwqtCO-Ddkg0==0fyiGiyzm8HFp+jr0nDoB5ZTq7U1qxVOynQ@mail.gmail.com>

Well it's only a leak if you don't get the memory back after it returns,
right?

Anyway, one (untested by me) possibility is the copying of memory pages
when the garbage collector touches objects, as pointed out by Radford Neal
here:
http://r.789695.n4.nabble.com/Re-R-devel-Digest-Vol-149-Issue-22-td4710367.html

If so, I don't think this would be easily avoidable, but there may be
mitigation strategies.

~G

On Wed, Sep 2, 2015 at 10:12 AM, Toby Hocking <tdhock5 at gmail.com> wrote:

> Dear R-devel,
>
> I am running mclapply with many iterations over a function that modifies
> nothing and makes no copies of anything. It is taking up a lot of memory,
> so it seems to me like this is a bug. Should I post this to
> bugs.r-project.org?
>
> A minimal reproducible example can be obtained by first starting a memory
> monitoring program such as htop, and then executing the following code
> while looking at how much memory is being used by the system
>
> library(parallel)
> seconds <- 5
> N <- 100000
> result.list <- mclapply(1:N, function(i)Sys.sleep(1/N*seconds))
>
> On my system, memory usage goes up about 60MB on this example. But it does
> not go up at all if I change mclapply to lapply. Is this a bug?
>
> For a more detailed discussion with a figure that shows that the memory
> overhead is linear in N, please see
> https://github.com/tdhock/mclapply-memory
>
> > sessionInfo()
> R version 3.2.2 (2015-08-14)
> Platform: x86_64-pc-linux-gnu (64-bit)
> Running under: Ubuntu precise (12.04.5 LTS)
>
> locale:
>  [1] LC_CTYPE=en_CA.UTF-8       LC_NUMERIC=C
>  [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_CA.UTF-8
>  [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_CA.UTF-8
>  [7] LC_PAPER=en_US.UTF-8       LC_NAME=C
>  [9] LC_ADDRESS=C               LC_TELEPHONE=C
> [11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C
>
> attached base packages:
> [1] parallel  graphics  utils     datasets  stats     grDevices methods
> [8] base
>
> other attached packages:
> [1] ggplot2_1.0.1      RColorBrewer_1.0-5 lattice_0.20-33
>
> loaded via a namespace (and not attached):
>  [1] Rcpp_0.11.6             digest_0.6.4            MASS_7.3-43
>  [4] grid_3.2.2              plyr_1.8.1              gtable_0.1.2
>  [7] scales_0.2.3            reshape2_1.2.2          proto_1.0.0
> [10] labeling_0.2            tools_3.2.2             stringr_0.6.2
> [13] dichromat_2.0-0         munsell_0.4.2
>  PeakSegJoint_2015.08.06
> [16] compiler_3.2.2          colorspace_1.2-4
>
>         [[alternative HTML version deleted]]
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>



-- 
Gabriel Becker, PhD
Computational Biologist
Bioinformatics and Computational Biology
Genentech, Inc.

	[[alternative HTML version deleted]]


From arnaud.gaboury at gmail.com  Wed Sep  2 20:49:57 2015
From: arnaud.gaboury at gmail.com (arnaud gaboury)
Date: Wed, 2 Sep 2015 20:49:57 +0200
Subject: [Rd] Build R with MKL and ICC
In-Reply-To: <CAK1hC9uLYSyA-7W92TwD4J9adcxDRE1a2ig1iDDPSyN43kikyg@mail.gmail.com>
References: <CAK1hC9uLYSyA-7W92TwD4J9adcxDRE1a2ig1iDDPSyN43kikyg@mail.gmail.com>
Message-ID: <CAK1hC9u0btbbXGR3+OAcAd5n3SbFwUHoH+YsT5FzVpaeyZWdEQ@mail.gmail.com>

On Wed, Sep 2, 2015 at 7:35 PM, arnaud gaboury <arnaud.gaboury at gmail.com> wrote:
> After a few days of reading and headache, I finally gave a try at
> building R from source with Intel MKL and ICC. Documentation and posts
> on this topic are rather incomplete, sometime fantasist et do not give
> much explanations about configure options.
> As I am not sure if mine is correct, I would appreciate some advices and hints.
>
> OS: Fedora 22
> parallel_studio_xe_2016
> Hardware : 8 Thread(s) per core: 2 Vendor ID: GenuineIntel Model name:
> Intel(R) Core(TM) i7-2600K CPU @ 3.40GHz - Sandybridge
> R-3.2.2
>
> Here is my build configuration:
>
> -------------------------------------------------------
> source /opt/intel/compilers_and_libraries_2016/linux/mkl/bin/mklvars.sh intel64
> source /opt/intel/bin/compilervars.sh intel64
> _mkllibpath=$MKLROOT/lib/intel64
> _icclibpath=$MKLROOT/linux/compiler/lib
> export LD_LIBRARY_PATH=${_mkllibpath}:${_icclibpath}
> export MKL="-L${_mkllibpath} -L${_icclibpath} -lmkl_intel_lp64
> -lmkl_intel_thread -lmkl_core  -liomp5 -lpthread"
> export CC="icc"
> export F77="ifort"
> export CXX="icpc"
> export AR="xiar"
> export LD="xild"
> export CFLAGS="-O3 -ipo -openmp -parallel -xAVX"
> export CXXFLAGS="-O3 -ipo -openmp -parallel -xAVX"
> export FFLAGS="-O3 -ipo -openmp -parallel -xAVX"
> export MAIN_LDFLAGS='-openmp'
> ./configure --with-lapack --with-blas="$MKL" --enable-R-shlib
> --enable-memory-profiling --enable-openmp --enable-BLAS-shlib
> --enable-lto F77=${F77} FC=${F77}
> ------------------------------------------------------------
>
> After I run ./configure, it seems from config.log everything is fine:
>
> checking for dgemm_ in
> result: yes
>
> checking whether double complex BLAS can be used
> result: yes
>
> checking whether the BLAS is complete
> result: yes
>
> The only error I can see is ld complaining about not finding -lRblas
> ----------------------------------------------------------------------------
>
> Then run $ make with no errors.
> Now, with no $ make install, I get this:
>
> --------------------------------------------------------------------
> $ ldd bin/exec/R
> linux-vdso.so.1 (0x00007ffe073f3000)
> libR.so => /usr/lib64/R/lib/libR.so (0x00007f43939e6000)
> libRblas.so => not found
> libm.so.6 => /lib64/libm.so.6 (0x00007f43936de000)
> libiomp5.so => /opt/intel/compilers_and_libraries_2016.0.109/linux/compiler/lib/intel64/libiomp5.so
> (0x00007f439339c000)
> libgcc_s.so.1 => /lib64/libgcc_s.so.1 (0x00007f4393185000)
> libpthread.so.0 => /lib64/libpthread.so.0 (0x00007f4392f69000)
> libc.so.6 => /lib64/libc.so.6 (0x00007f4392ba8000)
> libdl.so.2 => /lib64/libdl.so.2 (0x00007f43929a4000)
> libblas.so.3 => /lib64/libblas.so.3 (0x00007f439274b000)
> libgfortran.so.3 => /lib64/libgfortran.so.3 (0x00007f439241f000)
> libquadmath.so.0 => /lib64/libquadmath.so.0 (0x00007f43921e0000)
> libreadline.so.6 => /lib64/libreadline.so.6 (0x00007f4391f96000)
> libtre.so.5 => /lib64/libtre.so.5 (0x00007f4391d85000)
> libpcre.so.1 => /lib64/libpcre.so.1 (0x00007f4391b15000)
> liblzma.so.5 => /lib64/liblzma.so.5 (0x00007f43918ef000)
> libbz2.so.1 => /lib64/libbz2.so.1 (0x00007f43916de000)
> libz.so.1 => /lib64/libz.so.1 (0x00007f43914c8000)
> librt.so.1 => /lib64/librt.so.1 (0x00007f43912c0000)
> libicuuc.so.54 => /lib64/libicuuc.so.54 (0x00007f4390f2e000)
> libicui18n.so.54 => /lib64/libicui18n.so.54 (0x00007f4390ad7000)
> libgomp.so.1 => /lib64/libgomp.so.1 (0x00007f43908b5000)
> /lib64/ld-linux-x86-64.so.2 (0x00005557e2243000)
> libtinfo.so.5 => /lib64/libtinfo.so.5 (0x00007f439068a000)
> libicudata.so.54 => /lib64/libicudata.so.54 (0x00007f438ec5f000)
> libstdc++.so.6 => /lib64/libstdc++.so.6 (0x00007f438e8dc000)
> -----------------------------------------------------------------------------------------------
>
>
> Now a few questions:
>
EDIT
> 1- am I not supposed to see these libraries in the list ?
> libmkl_intel_lp64.so
> libmkl_intel_thread.so
> libmkl_core.so
>
> Or do I need to run $make install before ldd?
>
> 2- when visiting Intel MKL link advisor[0], here is what I get as
> configure and make options:
> Linking: -L${MKLROOT}/lib/intel64 -lmkl_intel_ilp64 -lmkl_core
> -lmkl_intel_thread -lpthread -lm
> Compiler options:  -DMKL_ILP64 -qopenmp -I${MKLROOT}/include
>
> What is the difference between -openmp and -qopenmp? Shall I use
> indeed the above compiler options?
>
> Thank you for help in this difficult topic for me.
>
> --
>
> google.com/+arnaudgabourygabx



-- 

google.com/+arnaudgabourygabx


From h.wickham at gmail.com  Wed Sep  2 21:52:05 2015
From: h.wickham at gmail.com (Hadley Wickham)
Date: Wed, 2 Sep 2015 14:52:05 -0500
Subject: [Rd] R.home() on windows with localised program files path name
Message-ID: <CABdHhvGA=ZM5ZJ7K-p33cWkDnfaOviFyCOcm4F5capJD0Ot1rQ@mail.gmail.com>

Unfortunately I can't reproduce this easily, but I have a devtools bug
report (https://github.com/hadley/devtools/issues/885#issuecomment-137216148)
which appears to be because:

R.home("bin")
#> [1] C:/Program Files/R/R-32~1.0/bin/x64

even though on this computer "Program Files" is actually "Programmi"
(Italian), and the documentation for R.home() says "On Windows the
values of R.home() and R_HOME are guaranteed not to contain spaces"

Any ideas?

Thanks!

Hadley


-- 
http://had.co.nz/


From tdhock5 at gmail.com  Thu Sep  3 15:26:33 2015
From: tdhock5 at gmail.com (Toby Hocking)
Date: Thu, 3 Sep 2015 09:26:33 -0400
Subject: [Rd] mclapply memory leak?
In-Reply-To: <CADwqtCO-Ddkg0==0fyiGiyzm8HFp+jr0nDoB5ZTq7U1qxVOynQ@mail.gmail.com>
References: <CALK03d1JmAJFHPCgv2vvQDk-3iP5_exk_0Vu65P9OQV=S7kAqg@mail.gmail.com>
	<CADwqtCO-Ddkg0==0fyiGiyzm8HFp+jr0nDoB5ZTq7U1qxVOynQ@mail.gmail.com>
Message-ID: <CALK03d3Z93JBc=rPSv3FJN991r5ZRGH-GksRrzUZS0aJMAS9Ew@mail.gmail.com>

right, it is not a memory leak, sorry for the misleading subject line.

the problem is the fact that the memory usage goes up, linearly with the
length of the first argument to mclapply. in practice with large data sets
this can cause the machine to start swapping, or to have my cluster jobs
killed due to using too much memory.

On Wed, Sep 2, 2015 at 2:35 PM, Gabriel Becker <gmbecker at ucdavis.edu> wrote:

> Well it's only a leak if you don't get the memory back after it returns,
> right?
>
> Anyway, one (untested by me) possibility is the copying of memory pages
> when the garbage collector touches objects, as pointed out by Radford Neal
> here:
> http://r.789695.n4.nabble.com/Re-R-devel-Digest-Vol-149-Issue-22-td4710367.html
>
> If so, I don't think this would be easily avoidable, but there may be
> mitigation strategies.
>
> ~G
>
> On Wed, Sep 2, 2015 at 10:12 AM, Toby Hocking <tdhock5 at gmail.com> wrote:
>
>> Dear R-devel,
>>
>> I am running mclapply with many iterations over a function that modifies
>> nothing and makes no copies of anything. It is taking up a lot of memory,
>> so it seems to me like this is a bug. Should I post this to
>> bugs.r-project.org?
>>
>> A minimal reproducible example can be obtained by first starting a memory
>> monitoring program such as htop, and then executing the following code
>> while looking at how much memory is being used by the system
>>
>> library(parallel)
>> seconds <- 5
>> N <- 100000
>> result.list <- mclapply(1:N, function(i)Sys.sleep(1/N*seconds))
>>
>> On my system, memory usage goes up about 60MB on this example. But it does
>> not go up at all if I change mclapply to lapply. Is this a bug?
>>
>> For a more detailed discussion with a figure that shows that the memory
>> overhead is linear in N, please see
>> https://github.com/tdhock/mclapply-memory
>>
>> > sessionInfo()
>> R version 3.2.2 (2015-08-14)
>> Platform: x86_64-pc-linux-gnu (64-bit)
>> Running under: Ubuntu precise (12.04.5 LTS)
>>
>> locale:
>>  [1] LC_CTYPE=en_CA.UTF-8       LC_NUMERIC=C
>>  [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_CA.UTF-8
>>  [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_CA.UTF-8
>>  [7] LC_PAPER=en_US.UTF-8       LC_NAME=C
>>  [9] LC_ADDRESS=C               LC_TELEPHONE=C
>> [11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C
>>
>> attached base packages:
>> [1] parallel  graphics  utils     datasets  stats     grDevices methods
>> [8] base
>>
>> other attached packages:
>> [1] ggplot2_1.0.1      RColorBrewer_1.0-5 lattice_0.20-33
>>
>> loaded via a namespace (and not attached):
>>  [1] Rcpp_0.11.6             digest_0.6.4            MASS_7.3-43
>>  [4] grid_3.2.2              plyr_1.8.1              gtable_0.1.2
>>  [7] scales_0.2.3            reshape2_1.2.2          proto_1.0.0
>> [10] labeling_0.2            tools_3.2.2             stringr_0.6.2
>> [13] dichromat_2.0-0         munsell_0.4.2
>>  PeakSegJoint_2015.08.06
>> [16] compiler_3.2.2          colorspace_1.2-4
>>
>>         [[alternative HTML version deleted]]
>>
>> ______________________________________________
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>
>
>
>
> --
> Gabriel Becker, PhD
> Computational Biologist
> Bioinformatics and Computational Biology
> Genentech, Inc.
>

	[[alternative HTML version deleted]]


From simon.urbanek at r-project.org  Thu Sep  3 23:27:12 2015
From: simon.urbanek at r-project.org (Simon Urbanek)
Date: Thu, 3 Sep 2015 17:27:12 -0400
Subject: [Rd] mclapply memory leak?
In-Reply-To: <CALK03d1JmAJFHPCgv2vvQDk-3iP5_exk_0Vu65P9OQV=S7kAqg@mail.gmail.com>
References: <CALK03d1JmAJFHPCgv2vvQDk-3iP5_exk_0Vu65P9OQV=S7kAqg@mail.gmail.com>
Message-ID: <64A9896A-354C-4FBD-AA89-32718DED11C1@r-project.org>

Toby,

> On Sep 2, 2015, at 1:12 PM, Toby Hocking <tdhock5 at gmail.com> wrote:
> 
> Dear R-devel,
> 
> I am running mclapply with many iterations over a function that modifies
> nothing and makes no copies of anything. It is taking up a lot of memory,
> so it seems to me like this is a bug. Should I post this to
> bugs.r-project.org?
> 
> A minimal reproducible example can be obtained by first starting a memory
> monitoring program such as htop, and then executing the following code
> while looking at how much memory is being used by the system
> 
> library(parallel)
> seconds <- 5
> N <- 100000
> result.list <- mclapply(1:N, function(i)Sys.sleep(1/N*seconds))
> 
> On my system, memory usage goes up about 60MB on this example. But it does
> not go up at all if I change mclapply to lapply. Is this a bug?
> 
> For a more detailed discussion with a figure that shows that the memory
> overhead is linear in N, please see
> https://github.com/tdhock/mclapply-memory
> 


I'm not quite sure what is supposed to be the issue here. One would expect the memory used will be linear in the number elements you process - by definition of the task, since you'll be creating linearly many more objects.

Also using top doesn't actually measure the memory used by R itself (see FAQ 7.42).

That said, I re-run your script and it didn't look anything like what you have on your webpage.  For the NULL result you end up dealing will all the objects you create in your test that overshadow any memory usage and stabilizes after garbage-collection. As you would expect, any output of top is essentially bogus up to a gc. How much memory R will use is essentially governed by the level at which you set the gc trigger. In real world you actually want that to be fairly high if you can afford it (in gigabytes, not megabytes), because you get often much higher performance by delaying gcs if you don't have low total memory (essentially using the memory as a buffer). Given that the usage is so negligible, it won't trigger any gc on its own, so you're just measuring accumulated objects - which will be always higher for mclapply because of the bookkeeping and serialization involved in the communication.

The real difference is only in the df case. The reason for it is that your lapply() there is simply a no-op, because R is smart enough to realize that you are always returning the same object so it won't actually create anything and just return a reference back to df - thus using no memory at all. However, once you split the inputs, your main session can no longer perform this optimization because the processing is now in a separate process, so it has no way of knowing that you are returning the object unmodified. So what you are measuring is a special case that is arguably not really relevant in real applications.

Cheers,
Simon



>> sessionInfo()
> R version 3.2.2 (2015-08-14)
> Platform: x86_64-pc-linux-gnu (64-bit)
> Running under: Ubuntu precise (12.04.5 LTS)
> 
> locale:
> [1] LC_CTYPE=en_CA.UTF-8       LC_NUMERIC=C
> [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_CA.UTF-8
> [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_CA.UTF-8
> [7] LC_PAPER=en_US.UTF-8       LC_NAME=C
> [9] LC_ADDRESS=C               LC_TELEPHONE=C
> [11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C
> 
> attached base packages:
> [1] parallel  graphics  utils     datasets  stats     grDevices methods
> [8] base
> 
> other attached packages:
> [1] ggplot2_1.0.1      RColorBrewer_1.0-5 lattice_0.20-33
> 
> loaded via a namespace (and not attached):
> [1] Rcpp_0.11.6             digest_0.6.4            MASS_7.3-43
> [4] grid_3.2.2              plyr_1.8.1              gtable_0.1.2
> [7] scales_0.2.3            reshape2_1.2.2          proto_1.0.0
> [10] labeling_0.2            tools_3.2.2             stringr_0.6.2
> [13] dichromat_2.0-0         munsell_0.4.2           PeakSegJoint_2015.08.06
> [16] compiler_3.2.2          colorspace_1.2-4
> 
> 	[[alternative HTML version deleted]]
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
> 


From b.h.mevik at usit.uio.no  Fri Sep  4 09:22:41 2015
From: b.h.mevik at usit.uio.no (=?utf-8?Q?Bj=C3=B8rn-Helge_Mevik?=)
Date: Fri, 4 Sep 2015 09:22:41 +0200
Subject: [Rd] Build R with MKL and ICC
In-Reply-To: <CAK1hC9uLYSyA-7W92TwD4J9adcxDRE1a2ig1iDDPSyN43kikyg@mail.gmail.com>
	(arnaud gaboury's message of "Wed, 2 Sep 2015 19:35:27 +0200")
References: <CAK1hC9uLYSyA-7W92TwD4J9adcxDRE1a2ig1iDDPSyN43kikyg@mail.gmail.com>
Message-ID: <s3szj12y7ge.fsf@slagelg.uio.no>

arnaud gaboury <arnaud.gaboury at gmail.com> writes:

> After a few days of reading and headache, I finally gave a try at
> building R from source with Intel MKL and ICC. Documentation and posts
> on this topic are rather incomplete, sometime fantasist et do not give
> much explanations about configure options.
> As I am not sure if mine is correct, I would appreciate some advices and hints.

This is how we build R with the Intel compilers and MKL on CentOS 6.x,
with different versions of R (latest version: 3.2.1) and Intel compilers
(latest version: 2015.3) on Intel SandyBridge CPUs:

fast="-ip -O3 -opt-mem-layout-trans=3 -xHost -mavx"
export CC="icc"
export CFLAGS="$fast -wd188 -fp-model precise"
export F77="ifort"
export FFLAGS="$fast -fp-model precise"
export CXX="icpc"
export CXXFLAGS="$fast -fp-model precise"
export FC="ifort"
export FCFLAGS="$fast -fp-model precise"

./configure --prefix=$destdir --with-blas='-mkl=parallel' --with-lapack --enable-BLAS-shlib


## Notes (they might not be true anymore):
## -static and -ipo break compilation
## -no-prec-div breaks make check
## -fp-model precise is needed for make check
## -wd188 removes a lot of warnings (see R Inst. & Adm. manual)

We have successfully used this setup for a couple of years now.

-- 
Regards,
Bj?rn-Helge Mevik


From arnaud.gaboury at gmail.com  Fri Sep  4 10:01:03 2015
From: arnaud.gaboury at gmail.com (arnaud gaboury)
Date: Fri, 4 Sep 2015 08:01:03 +0000
Subject: [Rd] Build R with MKL and ICC
In-Reply-To: <s3szj12y7ge.fsf@slagelg.uio.no>
References: <CAK1hC9uLYSyA-7W92TwD4J9adcxDRE1a2ig1iDDPSyN43kikyg@mail.gmail.com>
	<s3szj12y7ge.fsf@slagelg.uio.no>
Message-ID: <CAK1hC9v_vJ_JO4Oz8c26bzxaJ=n6JAx38w48L7fC1yEGuHunMg@mail.gmail.com>

On Fri, Sep 4, 2015, 9:24 AM Bj?rn-Helge Mevik <b.h.mevik at usit.uio.no>
wrote:

arnaud gaboury <arnaud.gaboury at gmail.com> writes:

> After a few days of reading and headache, I finally gave a try at
> building R from source with Intel MKL and ICC. Documentation and posts
> on this topic are rather incomplete, sometime fantasist et do not give
> much explanations about configure options.
> As I am not sure if mine is correct, I would appreciate some advices and
hints.

This is how we build R with the Intel compilers and MKL on CentOS 6.x,
with different versions of R (latest version: 3.2.1) and Intel compilers
(latest version: 2015.3) on Intel SandyBridge CPUs:

fast="-ip -O3 -opt-mem-layout-trans=3 -xHost -mavx"
export CC="icc"
export CFLAGS="$fast -wd188 -fp-model precise"
export F77="ifort"
export FFLAGS="$fast -fp-model precise"
export CXX="icpc"
export CXXFLAGS="$fast -fp-model precise"
export FC="ifort"
export FCFLAGS="$fast -fp-model precise"

./configure --prefix=$destdir --with-blas='-mkl=parallel' --with-lapack
--enable-BLAS-shlib


Thank you for this configuration. Nothing about openmp?

What about my cited missing librairies.
libmkl_intel_lp64.so
libmkl_intel_thread.so
libmkl_core.so

Any idea why they are not listed by the ldd command?

## Notes (they might not be true anymore):
## -static and -ipo break compilation
## -no-prec-div breaks make check
## -fp-model precise is needed for make check
## -wd188 removes a lot of warnings (see R Inst. & Adm. manual)

We have successfully used this setup for a couple of years now.

--
Regards,
Bj?rn-Helge Mevik

______________________________________________
R-devel at r-project.org mailing list
https://stat.ethz.ch/mailman/listinfo/r-devel

	[[alternative HTML version deleted]]


From tdhock5 at gmail.com  Fri Sep  4 15:14:36 2015
From: tdhock5 at gmail.com (Toby Hocking)
Date: Fri, 4 Sep 2015 09:14:36 -0400
Subject: [Rd] mclapply memory leak?
In-Reply-To: <64A9896A-354C-4FBD-AA89-32718DED11C1@r-project.org>
References: <CALK03d1JmAJFHPCgv2vvQDk-3iP5_exk_0Vu65P9OQV=S7kAqg@mail.gmail.com>
	<64A9896A-354C-4FBD-AA89-32718DED11C1@r-project.org>
Message-ID: <CALK03d31BwUXMVPTEXsTDN_cJEiw6c80tEGJ6MdEA8fDBVx3cQ@mail.gmail.com>

Thanks for the detailed analysis Simon. I figured out a workaround that
seems to be working in my real application. By limiting the length of the
first argument to mclapply (to the number of cores), I get speedups while
limiting the memory overhead.

### Run mclapply inside of a for loop, ensuring that it never receives
### a first argument with a length more than maxjobs. This avoids some
### memory problems (swapping, or getting jobs killed on the cluster)
### when using mclapply(1:N, FUN) where N is large.
maxjobs.mclapply <- function(X, FUN, maxjobs=getOption("mc.cores")){
  N <- length(X)
  i.list <- splitIndices(N, N/maxjobs)
  result.list <- list()
  for(i in seq_along(i.list)){
    i.vec <- i.list[[i]]
    result.list[i.vec] <- mclapply(X[i.vec], FUN)
  }
  result.list
}


On Thu, Sep 3, 2015 at 5:27 PM, Simon Urbanek <simon.urbanek at r-project.org>
wrote:

> Toby,
>
> > On Sep 2, 2015, at 1:12 PM, Toby Hocking <tdhock5 at gmail.com> wrote:
> >
> > Dear R-devel,
> >
> > I am running mclapply with many iterations over a function that modifies
> > nothing and makes no copies of anything. It is taking up a lot of memory,
> > so it seems to me like this is a bug. Should I post this to
> > bugs.r-project.org?
> >
> > A minimal reproducible example can be obtained by first starting a memory
> > monitoring program such as htop, and then executing the following code
> > while looking at how much memory is being used by the system
> >
> > library(parallel)
> > seconds <- 5
> > N <- 100000
> > result.list <- mclapply(1:N, function(i)Sys.sleep(1/N*seconds))
> >
> > On my system, memory usage goes up about 60MB on this example. But it
> does
> > not go up at all if I change mclapply to lapply. Is this a bug?
> >
> > For a more detailed discussion with a figure that shows that the memory
> > overhead is linear in N, please see
> > https://github.com/tdhock/mclapply-memory
> >
>
>
> I'm not quite sure what is supposed to be the issue here. One would expect
> the memory used will be linear in the number elements you process - by
> definition of the task, since you'll be creating linearly many more objects.
>
> Also using top doesn't actually measure the memory used by R itself (see
> FAQ 7.42).
>
> That said, I re-run your script and it didn't look anything like what you
> have on your webpage.  For the NULL result you end up dealing will all the
> objects you create in your test that overshadow any memory usage and
> stabilizes after garbage-collection. As you would expect, any output of top
> is essentially bogus up to a gc. How much memory R will use is essentially
> governed by the level at which you set the gc trigger. In real world you
> actually want that to be fairly high if you can afford it (in gigabytes,
> not megabytes), because you get often much higher performance by delaying
> gcs if you don't have low total memory (essentially using the memory as a
> buffer). Given that the usage is so negligible, it won't trigger any gc on
> its own, so you're just measuring accumulated objects - which will be
> always higher for mclapply because of the bookkeeping and serialization
> involved in the communication.
>
> The real difference is only in the df case. The reason for it is that your
> lapply() there is simply a no-op, because R is smart enough to realize that
> you are always returning the same object so it won't actually create
> anything and just return a reference back to df - thus using no memory at
> all. However, once you split the inputs, your main session can no longer
> perform this optimization because the processing is now in a separate
> process, so it has no way of knowing that you are returning the object
> unmodified. So what you are measuring is a special case that is arguably
> not really relevant in real applications.
>
> Cheers,
> Simon
>
>
>
> >> sessionInfo()
> > R version 3.2.2 (2015-08-14)
> > Platform: x86_64-pc-linux-gnu (64-bit)
> > Running under: Ubuntu precise (12.04.5 LTS)
> >
> > locale:
> > [1] LC_CTYPE=en_CA.UTF-8       LC_NUMERIC=C
> > [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_CA.UTF-8
> > [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_CA.UTF-8
> > [7] LC_PAPER=en_US.UTF-8       LC_NAME=C
> > [9] LC_ADDRESS=C               LC_TELEPHONE=C
> > [11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C
> >
> > attached base packages:
> > [1] parallel  graphics  utils     datasets  stats     grDevices methods
> > [8] base
> >
> > other attached packages:
> > [1] ggplot2_1.0.1      RColorBrewer_1.0-5 lattice_0.20-33
> >
> > loaded via a namespace (and not attached):
> > [1] Rcpp_0.11.6             digest_0.6.4            MASS_7.3-43
> > [4] grid_3.2.2              plyr_1.8.1              gtable_0.1.2
> > [7] scales_0.2.3            reshape2_1.2.2          proto_1.0.0
> > [10] labeling_0.2            tools_3.2.2             stringr_0.6.2
> > [13] dichromat_2.0-0         munsell_0.4.2
>  PeakSegJoint_2015.08.06
> > [16] compiler_3.2.2          colorspace_1.2-4
> >
> >       [[alternative HTML version deleted]]
> >
> > ______________________________________________
> > R-devel at r-project.org mailing list
> > https://stat.ethz.ch/mailman/listinfo/r-devel
> >
>
>

	[[alternative HTML version deleted]]


From plummerm at iarc.fr  Fri Sep  4 17:58:05 2015
From: plummerm at iarc.fr (Martyn Plummer)
Date: Fri, 4 Sep 2015 15:58:05 +0000
Subject: [Rd] Build R with MKL and ICC
In-Reply-To: <CAK1hC9u0btbbXGR3+OAcAd5n3SbFwUHoH+YsT5FzVpaeyZWdEQ@mail.gmail.com>
References: <CAK1hC9uLYSyA-7W92TwD4J9adcxDRE1a2ig1iDDPSyN43kikyg@mail.gmail.com>
	<CAK1hC9u0btbbXGR3+OAcAd5n3SbFwUHoH+YsT5FzVpaeyZWdEQ@mail.gmail.com>
Message-ID: <1441382281.4083.26.camel@iarc.fr>

On Wed, 2015-09-02 at 20:49 +0200, arnaud gaboury wrote:
> On Wed, Sep 2, 2015 at 7:35 PM, arnaud gaboury <arnaud.gaboury at gmail.com> wrote:
> > After a few days of reading and headache, I finally gave a try at
> > building R from source with Intel MKL and ICC. Documentation and posts
> > on this topic are rather incomplete, sometime fantasist et do not give
> > much explanations about configure options.
> > As I am not sure if mine is correct, I would appreciate some advices and hints.
> >
> > OS: Fedora 22
> > parallel_studio_xe_2016
> > Hardware : 8 Thread(s) per core: 2 Vendor ID: GenuineIntel Model name:
> > Intel(R) Core(TM) i7-2600K CPU @ 3.40GHz - Sandybridge
> > R-3.2.2
> >
> > Here is my build configuration:
> >
> > -------------------------------------------------------
> > source /opt/intel/compilers_and_libraries_2016/linux/mkl/bin/mklvars.sh intel64
> > source /opt/intel/bin/compilervars.sh intel64
> > _mkllibpath=$MKLROOT/lib/intel64
> > _icclibpath=$MKLROOT/linux/compiler/lib
> > export LD_LIBRARY_PATH=${_mkllibpath}:${_icclibpath}
> > export MKL="-L${_mkllibpath} -L${_icclibpath} -lmkl_intel_lp64
> > -lmkl_intel_thread -lmkl_core  -liomp5 -lpthread"
> > export CC="icc"
> > export F77="ifort"
> > export CXX="icpc"
> > export AR="xiar"
> > export LD="xild"
> > export CFLAGS="-O3 -ipo -openmp -parallel -xAVX"
> > export CXXFLAGS="-O3 -ipo -openmp -parallel -xAVX"
> > export FFLAGS="-O3 -ipo -openmp -parallel -xAVX"
> > export MAIN_LDFLAGS='-openmp'
> > ./configure --with-lapack --with-blas="$MKL" --enable-R-shlib
> > --enable-memory-profiling --enable-openmp --enable-BLAS-shlib
> > --enable-lto F77=${F77} FC=${F77}
> > ------------------------------------------------------------
> >
> > After I run ./configure, it seems from config.log everything is fine:
> >
> > checking for dgemm_ in
> > result: yes
> >
> > checking whether double complex BLAS can be used
> > result: yes
> >
> > checking whether the BLAS is complete
> > result: yes
> >
> > The only error I can see is ld complaining about not finding -lRblas
> > ----------------------------------------------------------------------------
> >
> > Then run $ make with no errors.
> > Now, with no $ make install, I get this:
> >
> > --------------------------------------------------------------------
> > $ ldd bin/exec/R
> > linux-vdso.so.1 (0x00007ffe073f3000)
> > libR.so => /usr/lib64/R/lib/libR.so (0x00007f43939e6000)
> > libRblas.so => not found
> > libm.so.6 => /lib64/libm.so.6 (0x00007f43936de000)
> > libiomp5.so => /opt/intel/compilers_and_libraries_2016.0.109/linux/compiler/lib/intel64/libiomp5.so
> > (0x00007f439339c000)
> > libgcc_s.so.1 => /lib64/libgcc_s.so.1 (0x00007f4393185000)
> > libpthread.so.0 => /lib64/libpthread.so.0 (0x00007f4392f69000)
> > libc.so.6 => /lib64/libc.so.6 (0x00007f4392ba8000)
> > libdl.so.2 => /lib64/libdl.so.2 (0x00007f43929a4000)
> > libblas.so.3 => /lib64/libblas.so.3 (0x00007f439274b000)
> > libgfortran.so.3 => /lib64/libgfortran.so.3 (0x00007f439241f000)
> > libquadmath.so.0 => /lib64/libquadmath.so.0 (0x00007f43921e0000)
> > libreadline.so.6 => /lib64/libreadline.so.6 (0x00007f4391f96000)
> > libtre.so.5 => /lib64/libtre.so.5 (0x00007f4391d85000)
> > libpcre.so.1 => /lib64/libpcre.so.1 (0x00007f4391b15000)
> > liblzma.so.5 => /lib64/liblzma.so.5 (0x00007f43918ef000)
> > libbz2.so.1 => /lib64/libbz2.so.1 (0x00007f43916de000)
> > libz.so.1 => /lib64/libz.so.1 (0x00007f43914c8000)
> > librt.so.1 => /lib64/librt.so.1 (0x00007f43912c0000)
> > libicuuc.so.54 => /lib64/libicuuc.so.54 (0x00007f4390f2e000)
> > libicui18n.so.54 => /lib64/libicui18n.so.54 (0x00007f4390ad7000)
> > libgomp.so.1 => /lib64/libgomp.so.1 (0x00007f43908b5000)
> > /lib64/ld-linux-x86-64.so.2 (0x00005557e2243000)
> > libtinfo.so.5 => /lib64/libtinfo.so.5 (0x00007f439068a000)
> > libicudata.so.54 => /lib64/libicudata.so.54 (0x00007f438ec5f000)
> > libstdc++.so.6 => /lib64/libstdc++.so.6 (0x00007f438e8dc000)
> > -----------------------------------------------------------------------------------------------
> >
> >
> > Now a few questions:
> >
> EDIT
> > 1- am I not supposed to see these libraries in the list ?
> > libmkl_intel_lp64.so
> > libmkl_intel_thread.so
> > libmkl_core.so

You are looking in the wrong place. With the option --enable-BLAS-shlib,
R is linked to MKL via the library libRblas.so which you will find in
the directory "lib" after building R.

> > Or do I need to run $make install before ldd?
> >
> > 2- when visiting Intel MKL link advisor[0], here is what I get as
> > configure and make options:
> > Linking: -L${MKLROOT}/lib/intel64 -lmkl_intel_ilp64 -lmkl_core
> > -lmkl_intel_thread -lpthread -lm
> > Compiler options:  -DMKL_ILP64 -qopenmp -I${MKLROOT}/include
> >
> > What is the difference between -openmp and -qopenmp? Shall I use
> > indeed the above compiler options?

The option -qopenmp replaces -openmp, which is deprecated. This is in
the man page for icc.

Martyn

> > Thank you for help in this difficult topic for me.
> >
> > --
> >
> > google.com/+arnaudgabourygabx
> 
> 
> 

-----------------------------------------------------------------------
This message and its attachments are strictly confidenti...{{dropped:8}}


From kittlein at mdp.edu.ar  Fri Sep  4 23:35:46 2015
From: kittlein at mdp.edu.ar (Marcelo Kittlein)
Date: Fri, 4 Sep 2015 21:35:46 +0000
Subject: [Rd] getting a vector of unown size
Message-ID: <55EA0EB2.70901@mdp.edu.ar>

Hi all!

I have written some code in C for simulating the fate of population 
using a dll loaded in R. During this simulation the population may go 
extinct such that the length of its trajectory is unknown beforehand. I 
wonder there is a way to define the size of the result in C and make it 
known to R to get the vector appropriately.

I have defined the output size very much larger than necessary to hold 
the result and then shrink the vector to the size where meaningful 
values occur, but this waste much resources and time unnecessarily.

The C code


#include <stdlib.h>
#include <math.h>


double min(double a, double b)
{
if(a>b)
return b;
else
return a;
}

double unirand()
{
return (rand()+1.0)/(RAND_MAX+1.0);
}

void RndSBDdemography(double *b, double *d, double *a, double *c, double 
*No, double *tmax, double *tiempo, double *Nind)
{
double tb, td, n;
int bc=0;
tiempo[0]=1.0;
Nind[0] = *No;

// This loop generates output of variable and a priori unknown size

while (Nind[bc] >= 2 && tiempo[bc] <= *tmax)
{
bc = bc + 1;
tb = -(1 / (*b - *a * Nind[bc-1])) * log(unirand());
td = -(1 / (*d + *c * Nind[bc-1])) * log(unirand());

tiempo[bc]= tiempo[bc-1] + min(tb, td)/ Nind[bc-1];

if (tb < td) n=1.0 ; else n= -1.0;

Nind[bc] = Nind[bc-1] + n;

}

}


The definition of the function call in R


RndSBDdemography = function(b=b,d=d,a=a,c=c, No=No, tmax=tmax){
tiempo=numeric(100000);
Nind=numeric(100000);
out=.C("RndSBDdemography",
b=as.double(b),
d=as.double(d),
a=as.double(a),
c=as.double(c),
No=as.double(No),
tmax=as.double(tmax),
tiempo=as.double(tiempo),
Nind=as.double(Nind)
)

# trim the output to a size where meaningful values occur
indi=which(out$tiempo!=0)
return(data.frame(tiempo=out$tiempo[indi], Nind=out$Nind[indi]))
}

Hope someone can give a hint on this.

Best Regards

Marcelo Kittlein


From rhurlin at gwdg.de  Sat Sep  5 08:28:33 2015
From: rhurlin at gwdg.de (Rainer Hurling)
Date: Sat, 5 Sep 2015 08:28:33 +0200
Subject: [Rd] No new daily R-devel tarball since r69202?
Message-ID: <55EA8B91.3090406@gwdg.de>

Is there any reason that the R-devel tarball at [1] stucks on r69202?

It seems, that newer R-devel versions are now published on
/pub/misc/cran/src/base-prerelease, for example at
http://ftp5.gwdg.de/pub/misc/cran/, but without an R-devel.tar.gz
tarball ...

Is this intended? Any clarification would be appreciated.

Thanks and greetings,
Rainer Hurling


[1] https://stat.ethz.ch/R/daily/R-devel.tar.gz


From pdalgd at gmail.com  Sat Sep  5 10:18:52 2015
From: pdalgd at gmail.com (peter dalgaard)
Date: Sat, 5 Sep 2015 10:18:52 +0200
Subject: [Rd] No new daily R-devel tarball since r69202?
In-Reply-To: <55EA8B91.3090406@gwdg.de>
References: <55EA8B91.3090406@gwdg.de>
Message-ID: <3D98BDC6-A3DF-4FD2-93C2-500A8AC6425C@gmail.com>


> On 05 Sep 2015, at 08:28 , Rainer Hurling <rhurlin at gwdg.de> wrote:
> 
> Is there any reason that the R-devel tarball at [1] stucks on r69202?
> 
> It seems, that newer R-devel versions are now published on
> /pub/misc/cran/src/base-prerelease, for example at
> http://ftp5.gwdg.de/pub/misc/cran/, but without an R-devel.tar.gz
> tarball ...
> 
> Is this intended? Any clarification would be appreciated.

Probably not (it is on Martin Maechler's turf, though). These things are run by cron jobs, and sometimes they get stalled. It is also possible that a change to the build tools on that machine caused the tarballs to fail their builds (the way things work, you need to build R before you can build the tarball.)

Is there a need for an R-devel.tar.gz in src/base-prerelease? It would just be a copy of the most recent one.

-pd

> 
> Thanks and greetings,
> Rainer Hurling
> 
> 
> [1] https://stat.ethz.ch/R/daily/R-devel.tar.gz
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel

-- 
Peter Dalgaard, Professor,
Center for Statistics, Copenhagen Business School
Solbjerg Plads 3, 2000 Frederiksberg, Denmark
Phone: (+45)38153501
Email: pd.mes at cbs.dk  Priv: PDalgd at gmail.com


From arnaud.gaboury at gmail.com  Sat Sep  5 11:53:49 2015
From: arnaud.gaboury at gmail.com (arnaud gaboury)
Date: Sat, 5 Sep 2015 11:53:49 +0200
Subject: [Rd] Build R with MKL and ICC
In-Reply-To: <1441382281.4083.26.camel@iarc.fr>
References: <CAK1hC9uLYSyA-7W92TwD4J9adcxDRE1a2ig1iDDPSyN43kikyg@mail.gmail.com>
	<CAK1hC9u0btbbXGR3+OAcAd5n3SbFwUHoH+YsT5FzVpaeyZWdEQ@mail.gmail.com>
	<1441382281.4083.26.camel@iarc.fr>
Message-ID: <CAK1hC9vg0SePBhEbp-Xpt8W1BDH-kY3XTLr39ZHCp2k2MHxUhA@mail.gmail.com>

On Fri, Sep 4, 2015 at 5:58 PM, Martyn Plummer <plummerm at iarc.fr> wrote:
> On Wed, 2015-09-02 at 20:49 +0200, arnaud gaboury wrote:
>> On Wed, Sep 2, 2015 at 7:35 PM, arnaud gaboury <arnaud.gaboury at gmail.com> wrote:
>> > After a few days of reading and headache, I finally gave a try at
>> > building R from source with Intel MKL and ICC. Documentation and posts
>> > on this topic are rather incomplete, sometime fantasist et do not give
>> > much explanations about configure options.
>> > As I am not sure if mine is correct, I would appreciate some advices and hints.
>> >
>> > OS: Fedora 22
>> > parallel_studio_xe_2016
>> > Hardware : 8 Thread(s) per core: 2 Vendor ID: GenuineIntel Model name:
>> > Intel(R) Core(TM) i7-2600K CPU @ 3.40GHz - Sandybridge
>> > R-3.2.2
>> >
>> > Here is my build configuration:
>> >
>> > -------------------------------------------------------
>> > source /opt/intel/compilers_and_libraries_2016/linux/mkl/bin/mklvars.sh intel64
>> > source /opt/intel/bin/compilervars.sh intel64
>> > _mkllibpath=$MKLROOT/lib/intel64
>> > _icclibpath=$MKLROOT/linux/compiler/lib
>> > export LD_LIBRARY_PATH=${_mkllibpath}:${_icclibpath}
>> > export MKL="-L${_mkllibpath} -L${_icclibpath} -lmkl_intel_lp64
>> > -lmkl_intel_thread -lmkl_core  -liomp5 -lpthread"
>> > export CC="icc"
>> > export F77="ifort"
>> > export CXX="icpc"
>> > export AR="xiar"
>> > export LD="xild"
>> > export CFLAGS="-O3 -ipo -openmp -parallel -xAVX"
>> > export CXXFLAGS="-O3 -ipo -openmp -parallel -xAVX"
>> > export FFLAGS="-O3 -ipo -openmp -parallel -xAVX"
>> > export MAIN_LDFLAGS='-openmp'
>> > ./configure --with-lapack --with-blas="$MKL" --enable-R-shlib
>> > --enable-memory-profiling --enable-openmp --enable-BLAS-shlib
>> > --enable-lto F77=${F77} FC=${F77}
>> > ------------------------------------------------------------
>> >
>> > After I run ./configure, it seems from config.log everything is fine:
>> >
>> > checking for dgemm_ in
>> > result: yes
>> >
>> > checking whether double complex BLAS can be used
>> > result: yes
>> >
>> > checking whether the BLAS is complete
>> > result: yes
>> >
>> > The only error I can see is ld complaining about not finding -lRblas
>> > ----------------------------------------------------------------------------
>> >
>> > Then run $ make with no errors.
>> > Now, with no $ make install, I get this:
>> >
>> > --------------------------------------------------------------------
>> > $ ldd bin/exec/R
>> > linux-vdso.so.1 (0x00007ffe073f3000)
>> > libR.so => /usr/lib64/R/lib/libR.so (0x00007f43939e6000)
>> > libRblas.so => not found
>> > libm.so.6 => /lib64/libm.so.6 (0x00007f43936de000)
>> > libiomp5.so => /opt/intel/compilers_and_libraries_2016.0.109/linux/compiler/lib/intel64/libiomp5.so
>> > (0x00007f439339c000)
>> > libgcc_s.so.1 => /lib64/libgcc_s.so.1 (0x00007f4393185000)
>> > libpthread.so.0 => /lib64/libpthread.so.0 (0x00007f4392f69000)
>> > libc.so.6 => /lib64/libc.so.6 (0x00007f4392ba8000)
>> > libdl.so.2 => /lib64/libdl.so.2 (0x00007f43929a4000)
>> > libblas.so.3 => /lib64/libblas.so.3 (0x00007f439274b000)
>> > libgfortran.so.3 => /lib64/libgfortran.so.3 (0x00007f439241f000)
>> > libquadmath.so.0 => /lib64/libquadmath.so.0 (0x00007f43921e0000)
>> > libreadline.so.6 => /lib64/libreadline.so.6 (0x00007f4391f96000)
>> > libtre.so.5 => /lib64/libtre.so.5 (0x00007f4391d85000)
>> > libpcre.so.1 => /lib64/libpcre.so.1 (0x00007f4391b15000)
>> > liblzma.so.5 => /lib64/liblzma.so.5 (0x00007f43918ef000)
>> > libbz2.so.1 => /lib64/libbz2.so.1 (0x00007f43916de000)
>> > libz.so.1 => /lib64/libz.so.1 (0x00007f43914c8000)
>> > librt.so.1 => /lib64/librt.so.1 (0x00007f43912c0000)
>> > libicuuc.so.54 => /lib64/libicuuc.so.54 (0x00007f4390f2e000)
>> > libicui18n.so.54 => /lib64/libicui18n.so.54 (0x00007f4390ad7000)
>> > libgomp.so.1 => /lib64/libgomp.so.1 (0x00007f43908b5000)
>> > /lib64/ld-linux-x86-64.so.2 (0x00005557e2243000)
>> > libtinfo.so.5 => /lib64/libtinfo.so.5 (0x00007f439068a000)
>> > libicudata.so.54 => /lib64/libicudata.so.54 (0x00007f438ec5f000)
>> > libstdc++.so.6 => /lib64/libstdc++.so.6 (0x00007f438e8dc000)
>> > -----------------------------------------------------------------------------------------------
>> >
>> >
>> > Now a few questions:
>> >
>> EDIT
>> > 1- am I not supposed to see these libraries in the list ?
>> > libmkl_intel_lp64.so
>> > libmkl_intel_thread.so
>> > libmkl_core.so
>
> You are looking in the wrong place. With the option --enable-BLAS-shlib,
> R is linked to MKL via the library libRblas.so which you will find in
> the directory "lib" after building R.


Right.
$ ls lib
libRblas.so*  libRlapack.so*  libR.so*

$ ldd bin/exec/R returns
....
libRblas.so => not found

Shall I let things like that or tell R the path to libRblas.so ?

>> > Or do I need to run $make install before ldd?
>> >
>> > 2- when visiting Intel MKL link advisor[0], here is what I get as
>> > configure and make options:
>> > Linking: -L${MKLROOT}/lib/intel64 -lmkl_intel_ilp64 -lmkl_core
>> > -lmkl_intel_thread -lpthread -lm
>> > Compiler options:  -DMKL_ILP64 -qopenmp -I${MKLROOT}/include
>> >
>> > What is the difference between -openmp and -qopenmp? Shall I use
>> > indeed the above compiler options?
>
> The option -qopenmp replaces -openmp, which is deprecated. This is in
> the man page for icc.
>
> Martyn
>
>> > Thank you for help in this difficult topic for me.
>> >
>> > --
>> >
>> > google.com/+arnaudgabourygabx
>>
>>
>>
>
> -----------------------------------------------------------------------
> This message and its attachments are strictly confiden...{{dropped:14}}


From Tom.Wenseleers at bio.kuleuven.be  Sat Sep  5 13:46:44 2015
From: Tom.Wenseleers at bio.kuleuven.be (Tom Wenseleers)
Date: Sat, 5 Sep 2015 11:46:44 +0000
Subject: [Rd] Support for high DPI 4K screens
Message-ID: <37EFC97028F3E44082ACC5CBEC00563032C4B905@ICTS-S-MBX14.luna.kuleuven.be>

I was recently testing R and RStudio on a high dpi 4K monitor under Windows and noticed that the plot window cannot be scaled or zoomed without affecting the relative sizing of all plot elements (line widths, font sizes, legend spacing etc). RStudio seems to try to overcome this by enabling dpi scaling for the plot window on high dpi screens, but this results in really fuzzy text and graphics (e.g. causing colour fringing when using Cleartype).
This made me wonder if the assumed dpi of the screen could perhaps be set using some global option, so that all graphics could be made to scale their contents in a correct way, without affecting the size relative to the size of the plot window (I think now it is always assumed to be 72 dpi)? I recently asked a related question re how to scale R graphics proportionally to the size of the plot window on Stackoverflow, http://stackoverflow.com/questions/31381066/r-function-to-make-plot-symbols-line-widths-and-text-in-ggplot2-lattice-and-b/32412384#32412384 but nobody seemed to be able to come up with a good answer/solution. This made me wonder if there could perhaps be some low-level solution to this?

best regards,
Tom

	[[alternative HTML version deleted]]


From rhurlin at gwdg.de  Sat Sep  5 13:54:21 2015
From: rhurlin at gwdg.de (Rainer Hurling)
Date: Sat, 5 Sep 2015 13:54:21 +0200
Subject: [Rd] No new daily R-devel tarball since r69202?
In-Reply-To: <3D98BDC6-A3DF-4FD2-93C2-500A8AC6425C@gmail.com>
References: <55EA8B91.3090406@gwdg.de>
	<3D98BDC6-A3DF-4FD2-93C2-500A8AC6425C@gmail.com>
Message-ID: <55EAD7ED.8070808@gwdg.de>

Am 05.09.2015 um 10:18 schrieb peter dalgaard:
> 
>> On 05 Sep 2015, at 08:28 , Rainer Hurling <rhurlin at gwdg.de> wrote:
>>
>> Is there any reason that the R-devel tarball at [1] stucks on r69202?
>>
>> It seems, that newer R-devel versions are now published on
>> /pub/misc/cran/src/base-prerelease, for example at
>> http://ftp5.gwdg.de/pub/misc/cran/, but without an R-devel.tar.gz
>> tarball ...
>>
>> Is this intended? Any clarification would be appreciated.
> 
> Probably not (it is on Martin Maechler's turf, though). These things are run by cron jobs, and sometimes they get stalled. It is also possible that a change to the build tools on that machine caused the tarballs to fail their builds (the way things work, you need to build R before you can build the tarball.)

Yes, I am aware of the build process before the tarball. The mail should
only take some attention on it ;)

Since end of August, there had been a change of the location, where
devel and patched sources are located: from
https://stat.ethz.ch/R/daily/ to
::mirror::/pub/misc/cran/src/base-prerelease/

Perhaps something with the cron jobs did not follow these changes?

> Is there a need for an R-devel.tar.gz in src/base-prerelease? It would just be a copy of the most recent one.

I prefer the R-devel.tar.gz without date and version number for
automated fetching and building R-devel on FreeBSD on an almost daily basis.

Many thanks for your answer.

Regards,
Rainer Hurling

> 
> -pd
> 
>>
>> Thanks and greetings,
>> Rainer Hurling
>>
>>
>> [1] https://stat.ethz.ch/R/daily/R-devel.tar.gz
>>


From Tom.Wenseleers at bio.kuleuven.be  Sat Sep  5 14:05:34 2015
From: Tom.Wenseleers at bio.kuleuven.be (Tom Wenseleers)
Date: Sat, 5 Sep 2015 12:05:34 +0000
Subject: [Rd] Default location where packages are stored under Windows
Message-ID: <37EFC97028F3E44082ACC5CBEC00563032C4B932@ICTS-S-MBX14.luna.kuleuven.be>

With a default installation of R on Windows platforms, packages are stored under Program Files/R/R-3.X.X/library. This often causes permission problems, as this directory is always read only by default, requiring the user to either change permissions for that directory or to change the directory where packages are stored later on option wise through modification of .libPaths in .Rprofile. For most users I imagine this is slightly annoying, having to do this over and over. I was just wondering if the default directory to store packages on Windows platforms could therefore not better be made the personal library folder, Users/Username/Documents/R/win-library/3.XX/, or perhaps even better, Users/All Users/Documents/R/win-library/3.XX/, so that downloaded packages are available for all users ?



	[[alternative HTML version deleted]]


From jeroenooms at gmail.com  Sat Sep  5 14:45:22 2015
From: jeroenooms at gmail.com (Jeroen Ooms)
Date: Sat, 5 Sep 2015 14:45:22 +0200
Subject: [Rd] Default location where packages are stored under Windows
In-Reply-To: <37EFC97028F3E44082ACC5CBEC00563032C4B932@ICTS-S-MBX14.luna.kuleuven.be>
References: <37EFC97028F3E44082ACC5CBEC00563032C4B932@ICTS-S-MBX14.luna.kuleuven.be>
Message-ID: <CABFfbXsXvkHF8Zq8BwmuTCc-1D-c3jpQBaCC0JiZcYmgpQDZRg@mail.gmail.com>

On Sat, Sep 5, 2015 at 2:05 PM, Tom Wenseleers
<Tom.Wenseleers at bio.kuleuven.be> wrote:
> I was just wondering if the default directory to store packages on Windows platforms could therefore not better be made the personal library folder, Users/Username/Documents/R/win-library/3.XX/


I think this is already the case? The first time you try to install a
package as non-admin, you will be prompted with a message that the
global library is not writable and if you want to create a user
library. Once the user library exists, R will make that the default by
putting it on the head of .libPaths() at the start of every R session.


From Tom.Wenseleers at bio.kuleuven.be  Sat Sep  5 15:13:29 2015
From: Tom.Wenseleers at bio.kuleuven.be (Tom Wenseleers)
Date: Sat, 5 Sep 2015 13:13:29 +0000
Subject: [Rd] Default location where packages are stored under Windows
In-Reply-To: <CABFfbXsXvkHF8Zq8BwmuTCc-1D-c3jpQBaCC0JiZcYmgpQDZRg@mail.gmail.com>
References: <37EFC97028F3E44082ACC5CBEC00563032C4B932@ICTS-S-MBX14.luna.kuleuven.be>,
	<CABFfbXsXvkHF8Zq8BwmuTCc-1D-c3jpQBaCC0JiZcYmgpQDZRg@mail.gmail.com>
Message-ID: <37EFC97028F3E44082ACC5CBEC00563032C4B961@ICTS-S-MBX14.luna.kuleuven.be>

Hi Jeroen,
Yes I noticed this - but with students etc it often still causes confusion, and I was just wondering if it would not be better to make it the default during installation of a new R version, as opposed to only changing over the first time you try to install a package and R noticing that the default directory is not writable...

cheers,
Tom

________________________________________
From: Jeroen Ooms [jeroenooms at gmail.com]
Sent: 05 September 2015 14:45
To: Tom Wenseleers
Cc: r-devel at r-project.org
Subject: Re: [Rd] Default location where packages are stored under Windows

On Sat, Sep 5, 2015 at 2:05 PM, Tom Wenseleers
<Tom.Wenseleers at bio.kuleuven.be> wrote:
> I was just wondering if the default directory to store packages on Windows platforms could therefore not better be made the personal library folder, Users/Username/Documents/R/win-library/3.XX/


I think this is already the case? The first time you try to install a
package as non-admin, you will be prompted with a message that the
global library is not writable and if you want to create a user
library. Once the user library exists, R will make that the default by
putting it on the head of .libPaths() at the start of every R session.


From brian at braverock.com  Sat Sep  5 15:56:18 2015
From: brian at braverock.com (Brian G. Peterson)
Date: Sat, 05 Sep 2015 08:56:18 -0500
Subject: [Rd] Support for high DPI 4K screens
In-Reply-To: <37EFC97028F3E44082ACC5CBEC00563032C4B905@ICTS-S-MBX14.luna.kuleuven.be>
References: <37EFC97028F3E44082ACC5CBEC00563032C4B905@ICTS-S-MBX14.luna.kuleuven.be>
Message-ID: <55EAF482.30505@braverock.com>

On 09/05/2015 06:46 AM, Tom Wenseleers wrote:
> I was recently testing R and RStudio on a high dpi 4K monitor under
> Windows and noticed that the plot window cannot be scaled or zoomed
> without affecting the relative sizing of all plot elements (line
> widths, font sizes, legend spacing etc). RStudio seems to try to
> overcome this by enabling dpi scaling for the plot window on high dpi
> screens, but this results in really fuzzy text and graphics (e.g.
> causing colour fringing when using Cleartype). This made me wonder if
> the assumed dpi of the screen could perhaps be set using some global
> option, so that all graphics could be made to scale their contents in
> a correct way, without affecting the size relative to the size of the
> plot window (I think now it is always assumed to be 72 dpi)? I
> recently asked a related question re how to scale R graphics
> proportionally to the size of the plot window on Stackoverflow,
> http://stackoverflow.com/questions/31381066/r-function-to-make-plot-symbols-line-widths-and-text-in-ggplot2-lattice-and-b/32412384#32412384
> but nobody seemed to be able to come up with a good answer/solution.
> This made me wonder if there could perhaps be some low-level solution
> to this?

R-help or RStudio support seem more appropriate for this?

'The correct way' is a very subjective term.  I really don't want R or 
any other application or operating system assuming that I bought a whole 
bunch of expensive 4k displays for smoother lines.  I bought them for 
pixel count.

We routinely use R and RStudio on 4k displays, I'm doing so right now.

The problem you are likely having is an old version of Windows, and has 
little or nothing to do with R or RStudio.  Windows 8 and higher have 
extensive application scaling support.

Of course, Macs and Linux have good scaling support also, and you get 
better R performance on Macs and Linux as well.

Even on Windows, we typically run almost all our applications on 4k 
displays at native resolution, and only change title bar and menu 
scaling based on distance to the screen.  We also use all those pixels.

Your use cases, of course, may vary. Which, in part, is why R has so 
much control over the types of graphic devices you create, and how you 
choose to control them.

Regards,

Brian

-- 
Brian G. Peterson
http://braverock.com/brian/
Ph: 773-459-4973
IM: bgpbraverock


From pdalgd at gmail.com  Sat Sep  5 19:09:28 2015
From: pdalgd at gmail.com (peter dalgaard)
Date: Sat, 5 Sep 2015 19:09:28 +0200
Subject: [Rd] No new daily R-devel tarball since r69202?
In-Reply-To: <55EAD7ED.8070808@gwdg.de>
References: <55EA8B91.3090406@gwdg.de>
	<3D98BDC6-A3DF-4FD2-93C2-500A8AC6425C@gmail.com>
	<55EAD7ED.8070808@gwdg.de>
Message-ID: <E6A06479-F7D6-477C-829B-5BC1A9245269@gmail.com>


> On 05 Sep 2015, at 13:54 , Rainer Hurling <rhurlin at gwdg.de> wrote:
> 
> Am 05.09.2015 um 10:18 schrieb peter dalgaard:
>> 
>>> On 05 Sep 2015, at 08:28 , Rainer Hurling <rhurlin at gwdg.de> wrote:
>>> 
>>> Is there any reason that the R-devel tarball at [1] stucks on r69202?
>>> 
>>> It seems, that newer R-devel versions are now published on
>>> /pub/misc/cran/src/base-prerelease, for example at
>>> http://ftp5.gwdg.de/pub/misc/cran/, but without an R-devel.tar.gz
>>> tarball ...
>>> 
>>> Is this intended? Any clarification would be appreciated.
>> 
>> Probably not (it is on Martin Maechler's turf, though). These things are run by cron jobs, and sometimes they get stalled. It is also possible that a change to the build tools on that machine caused the tarballs to fail their builds (the way things work, you need to build R before you can build the tarball.)
> 
> Yes, I am aware of the build process before the tarball. The mail should
> only take some attention on it ;)
> 
> Since end of August, there had been a change of the location, where
> devel and patched sources are located: from
> https://stat.ethz.ch/R/daily/ to
> ::mirror::/pub/misc/cran/src/base-prerelease/

There is no change, there has been two locations for a while now. One is an extension of the alpha/beta/RC-releases built by me, leading up to the release tarballs, the other maintained by Martin/ETHZ for a much longer time. The issue is just that Martin's updates seem to have been stalled for some reason.

This configuration sort of came sneaking up on us (long story...), so the CRAN descriptions are not completely precise.

It's not a big deal for me to set up so that there is also an R-devel-latest.tar.gz or so in base-prerelease.

-pd

> 
> Perhaps something with the cron jobs did not follow these changes?
> 
>> Is there a need for an R-devel.tar.gz in src/base-prerelease? It would just be a copy of the most recent one.
> 
> I prefer the R-devel.tar.gz without date and version number for
> automated fetching and building R-devel on FreeBSD on an almost daily basis.
> 
> Many thanks for your answer.
> 
> Regards,
> Rainer Hurling
> 
>> 
>> -pd
>> 
>>> 
>>> Thanks and greetings,
>>> Rainer Hurling
>>> 
>>> 
>>> [1] https://stat.ethz.ch/R/daily/R-devel.tar.gz

-- 
Peter Dalgaard, Professor,
Center for Statistics, Copenhagen Business School
Solbjerg Plads 3, 2000 Frederiksberg, Denmark
Phone: (+45)38153501
Email: pd.mes at cbs.dk  Priv: PDalgd at gmail.com


From Tom.Wenseleers at bio.kuleuven.be  Sat Sep  5 22:20:06 2015
From: Tom.Wenseleers at bio.kuleuven.be (Tom Wenseleers)
Date: Sat, 5 Sep 2015 20:20:06 +0000
Subject: [Rd] Support for high DPI 4K screens
In-Reply-To: <55EAF482.30505@braverock.com>
References: <37EFC97028F3E44082ACC5CBEC00563032C4B905@ICTS-S-MBX14.luna.kuleuven.be>,
	<55EAF482.30505@braverock.com>
Message-ID: <37EFC97028F3E44082ACC5CBEC00563032C4BA27@ICTS-S-MBX14.luna.kuleuven.be>

Hi Brian,
Thanks for your message. Just to clarify - I've seen this problem on Windows both under Windows 8.1 and Windows 10, and the RStudio people were also aware of the problem (it's also a known problem on Linux btw, https://support.rstudio.com/hc/communities/public/questions/201913407-RStudioGD-option-to-set-screen-DPI?locale=en-us )... I gathered that part of the problem is the difficulty to scale a graphics window without affecting the relative scaling of the plot elements (text, line widths etc), which is why in RStudio they now rely on the inbuilt dpi scaling of Windows, which merely upscales the low res image by a factor of 2 if you set the zoom factor to 2 (resulting in a blurry plot window). Not using dpi scaling or zooming is also an option, but then one typically has to make one's plot window larger, thereby requiring one to adjust the scaling of all plot elements, e.g. in ggplot2, ie text sizes, plot symbol sizes, line sizes etc due to the fact that all those sizes are specified as absolute sizes... Other problem is that without zooming the default text sizes of all standard ggplot2 themes e.g. are much too small. 

This made me wonder if in some future edition such problems could not be solved by allowing graphics to scale proportionally, maybe with some optional zoom factor or something, or by being able to specify how many ppi one's screen is? Many people I know that use R would also love to be able to maximize their plot window without it affecting the scaling of all the text etc in the graph. Right now one is pretty much tied to exporting as PDF and then viewing that full screen... Or am I overlooking something? I am just asking this question here as I have a feeling that a solution to this problem would probably be most conveniently addressed somewhere at a low level in grDevices or grid...

best regards,
Tom

________________________________________
From: R-devel [r-devel-bounces at r-project.org] on behalf of Brian G. Peterson [brian at braverock.com]
Sent: 05 September 2015 15:56
To: r-devel at r-project.org
Subject: Re: [Rd] Support for high DPI 4K screens

On 09/05/2015 06:46 AM, Tom Wenseleers wrote:
> I was recently testing R and RStudio on a high dpi 4K monitor under
> Windows and noticed that the plot window cannot be scaled or zoomed
> without affecting the relative sizing of all plot elements (line
> widths, font sizes, legend spacing etc). RStudio seems to try to
> overcome this by enabling dpi scaling for the plot window on high dpi
> screens, but this results in really fuzzy text and graphics (e.g.
> causing colour fringing when using Cleartype). This made me wonder if
> the assumed dpi of the screen could perhaps be set using some global
> option, so that all graphics could be made to scale their contents in
> a correct way, without affecting the size relative to the size of the
> plot window (I think now it is always assumed to be 72 dpi)? I
> recently asked a related question re how to scale R graphics
> proportionally to the size of the plot window on Stackoverflow,
> http://stackoverflow.com/questions/31381066/r-function-to-make-plot-symbols-line-widths-and-text-in-ggplot2-lattice-and-b/32412384#32412384
> but nobody seemed to be able to come up with a good answer/solution.
> This made me wonder if there could perhaps be some low-level solution
> to this?

R-help or RStudio support seem more appropriate for this?

'The correct way' is a very subjective term.  I really don't want R or
any other application or operating system assuming that I bought a whole
bunch of expensive 4k displays for smoother lines.  I bought them for
pixel count.

We routinely use R and RStudio on 4k displays, I'm doing so right now.

The problem you are likely having is an old version of Windows, and has
little or nothing to do with R or RStudio.  Windows 8 and higher have
extensive application scaling support.

Of course, Macs and Linux have good scaling support also, and you get
better R performance on Macs and Linux as well.

Even on Windows, we typically run almost all our applications on 4k
displays at native resolution, and only change title bar and menu
scaling based on distance to the screen.  We also use all those pixels.

Your use cases, of course, may vary. Which, in part, is why R has so
much control over the types of graphic devices you create, and how you
choose to control them.

Regards,

Brian

--
Brian G. Peterson
http://braverock.com/brian/
Ph: 773-459-4973
IM: bgpbraverock

______________________________________________
R-devel at r-project.org mailing list
https://stat.ethz.ch/mailman/listinfo/r-devel


From rhurlin at gwdg.de  Sun Sep  6 08:40:13 2015
From: rhurlin at gwdg.de (Rainer Hurling)
Date: Sun, 6 Sep 2015 08:40:13 +0200
Subject: [Rd] No new daily R-devel tarball since r69202?
In-Reply-To: <E6A06479-F7D6-477C-829B-5BC1A9245269@gmail.com>
References: <55EA8B91.3090406@gwdg.de>
	<3D98BDC6-A3DF-4FD2-93C2-500A8AC6425C@gmail.com>
	<55EAD7ED.8070808@gwdg.de>
	<E6A06479-F7D6-477C-829B-5BC1A9245269@gmail.com>
Message-ID: <55EBDFCD.4070305@gwdg.de>

Am 05.09.2015 um 19:09 schrieb peter dalgaard:
> 
>> On 05 Sep 2015, at 13:54 , Rainer Hurling <rhurlin at gwdg.de> wrote:
>>
>> Am 05.09.2015 um 10:18 schrieb peter dalgaard:
>>>
>>>> On 05 Sep 2015, at 08:28 , Rainer Hurling <rhurlin at gwdg.de> wrote:
>>>>
>>>> Is there any reason that the R-devel tarball at [1] stucks on r69202?
>>>>
>>>> It seems, that newer R-devel versions are now published on
>>>> /pub/misc/cran/src/base-prerelease, for example at
>>>> http://ftp5.gwdg.de/pub/misc/cran/, but without an R-devel.tar.gz
>>>> tarball ...
>>>>
>>>> Is this intended? Any clarification would be appreciated.
>>>
>>> Probably not (it is on Martin Maechler's turf, though). These things are run by cron jobs, and sometimes they get stalled. It is also possible that a change to the build tools on that machine caused the tarballs to fail their builds (the way things work, you need to build R before you can build the tarball.)
>>
>> Yes, I am aware of the build process before the tarball. The mail should
>> only take some attention on it ;)
>>
>> Since end of August, there had been a change of the location, where
>> devel and patched sources are located: from
>> https://stat.ethz.ch/R/daily/ to
>> ::mirror::/pub/misc/cran/src/base-prerelease/
> 
> There is no change, there has been two locations for a while now. One is an extension of the alpha/beta/RC-releases built by me, leading up to the release tarballs, the other maintained by Martin/ETHZ for a much longer time. The issue is just that Martin's updates seem to have been stalled for some reason.
> 
> This configuration sort of came sneaking up on us (long story...), so the CRAN descriptions are not completely precise.

Thanks for the clarification. So it was intended to have two different
places with (slightly) different aims.

> It's not a big deal for me to set up so that there is also an R-devel-latest.tar.gz or so in base-prerelease.

This would be nice, but it only should be necessary, if the ETHZ server
would not come up again with this service.

Many thanks again for your answer and for the proposal.

Greetings,
Rainer Hurling

> 
> -pd
> 
>>
>> Perhaps something with the cron jobs did not follow these changes?
>>
>>> Is there a need for an R-devel.tar.gz in src/base-prerelease? It would just be a copy of the most recent one.
>>
>> I prefer the R-devel.tar.gz without date and version number for
>> automated fetching and building R-devel on FreeBSD on an almost daily basis.
>>
>> Many thanks for your answer.
>>
>> Regards,
>> Rainer Hurling
>>
>>>
>>> -pd
>>>
>>>>
>>>> Thanks and greetings,
>>>> Rainer Hurling
>>>>
>>>>
>>>> [1] https://stat.ethz.ch/R/daily/R-devel.tar.gz
>


From b.h.mevik at usit.uio.no  Mon Sep  7 09:16:21 2015
From: b.h.mevik at usit.uio.no (=?utf-8?Q?Bj=C3=B8rn-Helge_Mevik?=)
Date: Mon, 7 Sep 2015 09:16:21 +0200
Subject: [Rd] Build R with MKL and ICC
In-Reply-To: <CAK1hC9v_vJ_JO4Oz8c26bzxaJ=n6JAx38w48L7fC1yEGuHunMg@mail.gmail.com>
	(arnaud gaboury's message of "Fri, 4 Sep 2015 08:01:03 +0000")
References: <CAK1hC9uLYSyA-7W92TwD4J9adcxDRE1a2ig1iDDPSyN43kikyg@mail.gmail.com>
	<s3szj12y7ge.fsf@slagelg.uio.no>
	<CAK1hC9v_vJ_JO4Oz8c26bzxaJ=n6JAx38w48L7fC1yEGuHunMg@mail.gmail.com>
Message-ID: <s3sfv2qvgvu.fsf@slagelg.uio.no>

arnaud gaboury <arnaud.gaboury at gmail.com> writes:

> Thank you for this configuration. Nothing about openmp?

I believe -mkl=parallel makes sure that all relevant libraries and
switches are used.  But you might want to check with the manual.  All I
can say is that it works.

-- 
Regards,
Bj?rn-Helge Mevik


From plummerm at iarc.fr  Mon Sep  7 12:22:09 2015
From: plummerm at iarc.fr (Martyn Plummer)
Date: Mon, 7 Sep 2015 10:22:09 +0000
Subject: [Rd] Build R with MKL and ICC
In-Reply-To: <CAK1hC9vg0SePBhEbp-Xpt8W1BDH-kY3XTLr39ZHCp2k2MHxUhA@mail.gmail.com>
References: <CAK1hC9uLYSyA-7W92TwD4J9adcxDRE1a2ig1iDDPSyN43kikyg@mail.gmail.com>
	<CAK1hC9u0btbbXGR3+OAcAd5n3SbFwUHoH+YsT5FzVpaeyZWdEQ@mail.gmail.com>
	<1441382281.4083.26.camel@iarc.fr>
	<CAK1hC9vg0SePBhEbp-Xpt8W1BDH-kY3XTLr39ZHCp2k2MHxUhA@mail.gmail.com>
Message-ID: <1441621388.4083.54.camel@iarc.fr>

On Sat, 2015-09-05 at 11:53 +0200, arnaud gaboury wrote:
> On Fri, Sep 4, 2015 at 5:58 PM, Martyn Plummer <plummerm at iarc.fr> wrote:
> > On Wed, 2015-09-02 at 20:49 +0200, arnaud gaboury wrote:
> >> On Wed, Sep 2, 2015 at 7:35 PM, arnaud gaboury <arnaud.gaboury at gmail.com> wrote:
> >> > After a few days of reading and headache, I finally gave a try at
> >> > building R from source with Intel MKL and ICC. Documentation and posts
> >> > on this topic are rather incomplete, sometime fantasist et do not give
> >> > much explanations about configure options.
> >> > As I am not sure if mine is correct, I would appreciate some advices and hints.
> >> >
> >> > OS: Fedora 22
> >> > parallel_studio_xe_2016
> >> > Hardware : 8 Thread(s) per core: 2 Vendor ID: GenuineIntel Model name:
> >> > Intel(R) Core(TM) i7-2600K CPU @ 3.40GHz - Sandybridge
> >> > R-3.2.2
> >> >
> >> > Here is my build configuration:
> >> >
> >> > -------------------------------------------------------
> >> > source /opt/intel/compilers_and_libraries_2016/linux/mkl/bin/mklvars.sh intel64
> >> > source /opt/intel/bin/compilervars.sh intel64
> >> > _mkllibpath=$MKLROOT/lib/intel64
> >> > _icclibpath=$MKLROOT/linux/compiler/lib
> >> > export LD_LIBRARY_PATH=${_mkllibpath}:${_icclibpath}
> >> > export MKL="-L${_mkllibpath} -L${_icclibpath} -lmkl_intel_lp64
> >> > -lmkl_intel_thread -lmkl_core  -liomp5 -lpthread"
> >> > export CC="icc"
> >> > export F77="ifort"
> >> > export CXX="icpc"
> >> > export AR="xiar"
> >> > export LD="xild"
> >> > export CFLAGS="-O3 -ipo -openmp -parallel -xAVX"
> >> > export CXXFLAGS="-O3 -ipo -openmp -parallel -xAVX"
> >> > export FFLAGS="-O3 -ipo -openmp -parallel -xAVX"
> >> > export MAIN_LDFLAGS='-openmp'
> >> > ./configure --with-lapack --with-blas="$MKL" --enable-R-shlib
> >> > --enable-memory-profiling --enable-openmp --enable-BLAS-shlib
> >> > --enable-lto F77=${F77} FC=${F77}
> >> > ------------------------------------------------------------
> >> >
> >> > After I run ./configure, it seems from config.log everything is fine:
> >> >
> >> > checking for dgemm_ in
> >> > result: yes
> >> >
> >> > checking whether double complex BLAS can be used
> >> > result: yes
> >> >
> >> > checking whether the BLAS is complete
> >> > result: yes
> >> >
> >> > The only error I can see is ld complaining about not finding -lRblas
> >> > ----------------------------------------------------------------------------
> >> >
> >> > Then run $ make with no errors.
> >> > Now, with no $ make install, I get this:
> >> >
> >> > --------------------------------------------------------------------
> >> > $ ldd bin/exec/R
> >> > linux-vdso.so.1 (0x00007ffe073f3000)
> >> > libR.so => /usr/lib64/R/lib/libR.so (0x00007f43939e6000)
> >> > libRblas.so => not found
> >> > libm.so.6 => /lib64/libm.so.6 (0x00007f43936de000)
> >> > libiomp5.so => /opt/intel/compilers_and_libraries_2016.0.109/linux/compiler/lib/intel64/libiomp5.so
> >> > (0x00007f439339c000)
> >> > libgcc_s.so.1 => /lib64/libgcc_s.so.1 (0x00007f4393185000)
> >> > libpthread.so.0 => /lib64/libpthread.so.0 (0x00007f4392f69000)
> >> > libc.so.6 => /lib64/libc.so.6 (0x00007f4392ba8000)
> >> > libdl.so.2 => /lib64/libdl.so.2 (0x00007f43929a4000)
> >> > libblas.so.3 => /lib64/libblas.so.3 (0x00007f439274b000)
> >> > libgfortran.so.3 => /lib64/libgfortran.so.3 (0x00007f439241f000)
> >> > libquadmath.so.0 => /lib64/libquadmath.so.0 (0x00007f43921e0000)
> >> > libreadline.so.6 => /lib64/libreadline.so.6 (0x00007f4391f96000)
> >> > libtre.so.5 => /lib64/libtre.so.5 (0x00007f4391d85000)
> >> > libpcre.so.1 => /lib64/libpcre.so.1 (0x00007f4391b15000)
> >> > liblzma.so.5 => /lib64/liblzma.so.5 (0x00007f43918ef000)
> >> > libbz2.so.1 => /lib64/libbz2.so.1 (0x00007f43916de000)
> >> > libz.so.1 => /lib64/libz.so.1 (0x00007f43914c8000)
> >> > librt.so.1 => /lib64/librt.so.1 (0x00007f43912c0000)
> >> > libicuuc.so.54 => /lib64/libicuuc.so.54 (0x00007f4390f2e000)
> >> > libicui18n.so.54 => /lib64/libicui18n.so.54 (0x00007f4390ad7000)
> >> > libgomp.so.1 => /lib64/libgomp.so.1 (0x00007f43908b5000)
> >> > /lib64/ld-linux-x86-64.so.2 (0x00005557e2243000)
> >> > libtinfo.so.5 => /lib64/libtinfo.so.5 (0x00007f439068a000)
> >> > libicudata.so.54 => /lib64/libicudata.so.54 (0x00007f438ec5f000)
> >> > libstdc++.so.6 => /lib64/libstdc++.so.6 (0x00007f438e8dc000)
> >> > -----------------------------------------------------------------------------------------------
> >> >
> >> >
> >> > Now a few questions:
> >> >
> >> EDIT
> >> > 1- am I not supposed to see these libraries in the list ?
> >> > libmkl_intel_lp64.so
> >> > libmkl_intel_thread.so
> >> > libmkl_core.so
> >
> > You are looking in the wrong place. With the option --enable-BLAS-shlib,
> > R is linked to MKL via the library libRblas.so which you will find in
> > the directory "lib" after building R.
> 
> 
> Right.
> $ ls lib
> libRblas.so*  libRlapack.so*  libR.so*
> 
> $ ldd bin/exec/R returns
> ....
> libRblas.so => not found
> 
> Shall I let things like that or tell R the path to libRblas.so ?

No that is not a problem. R knows where to find these libaries even if
they are not on the linker path. 

Your only problem is to tell R where the Intel libraries are at runtime,
typically by setting/modifying LD_LIBRARY_PATH before launching R, e.g.
on my desktop I use 

export LD_LIBRARY_PATH=/opt/intel/composerxe/lib/intel64:/opt/intel/composerxe/mkl/lib/intel64/

Martyn

> >> > Or do I need to run $make install before ldd?
> >> >
> >> > 2- when visiting Intel MKL link advisor[0], here is what I get as
> >> > configure and make options:
> >> > Linking: -L${MKLROOT}/lib/intel64 -lmkl_intel_ilp64 -lmkl_core
> >> > -lmkl_intel_thread -lpthread -lm
> >> > Compiler options:  -DMKL_ILP64 -qopenmp -I${MKLROOT}/include
> >> >
> >> > What is the difference between -openmp and -qopenmp? Shall I use
> >> > indeed the above compiler options?
> >
> > The option -qopenmp replaces -openmp, which is deprecated. This is in
> > the man page for icc.
> >
> > Martyn
> >
> >> > Thank you for help in this difficult topic for me.
> >> >
> >> > --
> >> >
> >> > google.com/+arnaudgabourygabx
> >>
> >>
> >>
> 
> 

-----------------------------------------------------------------------
This message and its attachments are strictly confidenti...{{dropped:8}}


From maechler at stat.math.ethz.ch  Mon Sep  7 18:17:40 2015
From: maechler at stat.math.ethz.ch (Martin Maechler)
Date: Mon, 7 Sep 2015 18:17:40 +0200
Subject: [Rd] No new daily R-devel tarball since r69202?
In-Reply-To: <55EBDFCD.4070305@gwdg.de>
References: <55EA8B91.3090406@gwdg.de>
	<3D98BDC6-A3DF-4FD2-93C2-500A8AC6425C@gmail.com>
	<55EAD7ED.8070808@gwdg.de>
	<E6A06479-F7D6-477C-829B-5BC1A9245269@gmail.com>
	<55EBDFCD.4070305@gwdg.de>
Message-ID: <21997.47268.715375.886789@stat.math.ethz.ch>

>>>>> Rainer Hurling <rhurlin at gwdg.de>
>>>>>     on Sun, 6 Sep 2015 08:40:13 +0200 writes:

    > Am 05.09.2015 um 19:09 schrieb peter dalgaard:
    >> 
    >>> On 05 Sep 2015, at 13:54 , Rainer Hurling
    >>> <rhurlin at gwdg.de> wrote:
    >>> 
    >>> Am 05.09.2015 um 10:18 schrieb peter dalgaard:
    >>>> 
    >>>>> On 05 Sep 2015, at 08:28 , Rainer Hurling
    >>>>> <rhurlin at gwdg.de> wrote:
    >>>>> 
    >>>>> Is there any reason that the R-devel tarball at [1]
    >>>>> stucks on r69202?
    >>>>> 
    >>>>> It seems, that newer R-devel versions are now
    >>>>> published on /pub/misc/cran/src/base-prerelease, for
    >>>>> example at http://ftp5.gwdg.de/pub/misc/cran/, but
    >>>>> without an R-devel.tar.gz tarball ...
    >>>>> 
    >>>>> Is this intended? Any clarification would be
    >>>>> appreciated.
    >>>> 
    >>>> Probably not (it is on Martin Maechler's turf,
    >>>> though). These things are run by cron jobs, and
    >>>> sometimes they get stalled. It is also possible that a
    >>>> change to the build tools on that machine caused the
    >>>> tarballs to fail their builds (the way things work, you
    >>>> need to build R before you can build the tarball.)
    >>> 
    >>> Yes, I am aware of the build process before the
    >>> tarball. The mail should only take some attention on it
    >>> ;)
    >>> 
    >>> Since end of August, there had been a change of the
    >>> location, where devel and patched sources are located:
    >>> from https://stat.ethz.ch/R/daily/ to
    >>> ::mirror::/pub/misc/cran/src/base-prerelease/
    >> 
    >> There is no change, there has been two locations for a
    >> while now. One is an extension of the
    >> alpha/beta/RC-releases built by me, leading up to the
    >> release tarballs, the other maintained by Martin/ETHZ for
    >> a much longer time. The issue is just that Martin's
    >> updates seem to have been stalled for some reason.
    >> 
    >> This configuration sort of came sneaking up on us (long
    >> story...), so the CRAN descriptions are not completely
    >> precise.

    > Thanks for the clarification. So it was intended to have
    > two different places with (slightly) different aims.

    >> It's not a big deal for me to set up so that there is
    >> also an R-devel-latest.tar.gz or so in base-prerelease.

    > This would be nice, but it only should be necessary, if
    > the ETHZ server would not come up again with this service.

Thank you for the alert.
I've been teaching in a course "out of town" till Saturday,
and so could not easily attend to this.

I've manually rebuilt the tarballs at noon, and fixed the
(LD..PATH) settings so now the cron job again *does* build the
complete tarball from scratch...
which it stopped doing a bit more than a week ago, because of
some system level changes had broken the linking step (only in
'cron', not in manual interactive use).

Yes, I am happy to get alerts (by e-mail to my personal
address), and usually such hickups are fixed considerably
faster.

Best regards,
Martin


    > Many thanks again for your answer and for the proposal.
    > Greetings, Rainer Hurling

    >> 
    >> -pd
    >> 
    >>> 
    >>> Perhaps something with the cron jobs did not follow
    >>> these changes?
    >>> 
    >>>> Is there a need for an R-devel.tar.gz in
    >>>> src/base-prerelease? It would just be a copy of the
    >>>> most recent one.
    >>> 
    >>> I prefer the R-devel.tar.gz without date and version
    >>> number for automated fetching and building R-devel on
    >>> FreeBSD on an almost daily basis.
    >>> 
    >>> Many thanks for your answer.
    >>> 
    >>> Regards, Rainer Hurling
    >>> 
    >>>> 
    >>>> -pd
    >>>> 
    >>>>> 
    >>>>> Thanks and greetings, Rainer Hurling
    >>>>> 
    >>>>> 
    >>>>> [1] https://stat.ethz.ch/R/daily/R-devel.tar.gz
    >>


From arnaud.gaboury at gmail.com  Tue Sep  8 10:31:48 2015
From: arnaud.gaboury at gmail.com (arnaud gaboury)
Date: Tue, 8 Sep 2015 10:31:48 +0200
Subject: [Rd] Build R with MKL and ICC - make check fails
Message-ID: <CAK1hC9t8hkU9MhkC_ungcBQee9UFgam9uWXC-UKO8=HzY9QBpQ@mail.gmail.com>

The whole build goes well and success. Now, when $ make check, it
fails because of the WARNING.

-------------------------------
running code in 'eval-etc.R' ... OK
  comparing 'eval-etc.Rout' to './eval-etc.Rout.save' ...WARNING:
ignoring environment value of R_HOME
1d0
< WARNING: ignoring environment value of R_HOME
Makefile.common:93: recipe for target 'eval-etc.Rout' failed
-------------------------------

This warning is displaying all along the make process, but does not
break the build as only a warning:

 ignoring environment value of R_HOME

What can I do to fix this and pass the make check? As I am buidling a
.rpm package for my distro (Fedora 22), I would like everything to be
clean.

Thank you for hints.
-- 

google.com/+arnaudgabourygabx


From arnaud.gaboury at gmail.com  Tue Sep  8 11:55:43 2015
From: arnaud.gaboury at gmail.com (arnaud gaboury)
Date: Tue, 8 Sep 2015 11:55:43 +0200
Subject: [Rd] Build R with MKL and ICC - make check fails
In-Reply-To: <CAK1hC9t8hkU9MhkC_ungcBQee9UFgam9uWXC-UKO8=HzY9QBpQ@mail.gmail.com>
References: <CAK1hC9t8hkU9MhkC_ungcBQee9UFgam9uWXC-UKO8=HzY9QBpQ@mail.gmail.com>
Message-ID: <CAK1hC9u=WzBL+A1Kuu8fVU_XWdVrotOA6mrbZF-tnZH9COE=pw@mail.gmail.com>

On Tue, Sep 8, 2015 at 10:31 AM, arnaud gaboury <arnaud.gaboury at gmail.com>
wrote:

> The whole build goes well and success. Now, when $ make check, it
> fails because of the WARNING.
>
> -------------------------------
> running code in 'eval-etc.R' ... OK
>   comparing 'eval-etc.Rout' to './eval-etc.Rout.save' ...WARNING:
> ignoring environment value of R_HOME
> 1d0
> < WARNING: ignoring environment value of R_HOME
> Makefile.common:93: recipe for target 'eval-etc.Rout' failed
> -------------------------------
>
> This warning is displaying all along the make process, but does not
> break the build as only a warning:
>
>  ignoring environment value of R_HOME
>

Issue solved. I am building R with an already existing R installation and
env variable R_HOME was set. I $ unset R_HOME and then make check succeed.

>
> What can I do to fix this and pass the make check? As I am buidling a
> .rpm package for my distro (Fedora 22), I would like everything to be
> clean.
>
> Thank you for hints.
> --
>
> google.com/+arnaudgabourygabx
>



-- 

google.com/+arnaudgabourygabx
<https://plus.google.com/_/notifications/emlink?emr=05814804238976922326&emid=CKiv-v6PvboCFcfoQgod6msAAA&path=%2F116159236040461325607%2Fop%2Fu&dt=1383086841306&ub=50>

	[[alternative HTML version deleted]]


From arnaud.gaboury at gmail.com  Wed Sep  9 08:40:14 2015
From: arnaud.gaboury at gmail.com (arnaud gaboury)
Date: Wed, 9 Sep 2015 08:40:14 +0200
Subject: [Rd] Build R form source - manuals
Message-ID: <CAK1hC9vuUaDt1=-=w=KVaHk27=5BH5C827zC4wfXSX0umWoRBg@mail.gmail.com>

I built R form source succesfully on my Fedora 22 box. No errors.

I can read there is an issue with some manuals at build time when
running makeinfo, especially these two:
doc/manual/R-exts.texi
cp doc/manual/R-intro.texi
Some distro have hacks about makeinfo 5 in their build script.

I wonder if some manuals are broken but couldn't see it when running make.


May someone tells me more about this issue and what can I do to make
sure these manuals are correctly built.

Thank you


-- 

google.com/+arnaudgabourygabx


From ripley at stats.ox.ac.uk  Wed Sep  9 09:11:11 2015
From: ripley at stats.ox.ac.uk (Prof Brian Ripley)
Date: Wed, 9 Sep 2015 08:11:11 +0100
Subject: [Rd] Build R form source - manuals
In-Reply-To: <CAK1hC9vuUaDt1=-=w=KVaHk27=5BH5C827zC4wfXSX0umWoRBg@mail.gmail.com>
References: <CAK1hC9vuUaDt1=-=w=KVaHk27=5BH5C827zC4wfXSX0umWoRBg@mail.gmail.com>
Message-ID: <55EFDB8F.8000101@stats.ox.ac.uk>

On 09/09/2015 07:40, arnaud gaboury wrote:
> I built R form source succesfully on my Fedora 22 box. No errors.

Which version of R?
>
> I can read there is an issue with some manuals at build time when
> running makeinfo, especially these two:
> doc/manual/R-exts.texi
> cp doc/manual/R-intro.texi
> Some distro have hacks about makeinfo 5 in their build script.
>
> I wonder if some manuals are broken but couldn't see it when running make.
>
>
> May someone tells me more about this issue and what can I do to make
> sure these manuals are correctly built.

You are the one claiming there is an issue, so the onus is on you to 
tell us.

Recent versions of R work with makeinfo 5.1/2 (5.0 is broken) or report 
that makeinfo is not available.  And versions released after 6.0 work 
with 6.0 ....

-- 
Brian D. Ripley,                  ripley at stats.ox.ac.uk
Emeritus Professor of Applied Statistics, University of Oxford
1 South Parks Road, Oxford OX1 3TG, UK


From arnaud.gaboury at gmail.com  Wed Sep  9 09:41:17 2015
From: arnaud.gaboury at gmail.com (arnaud gaboury)
Date: Wed, 9 Sep 2015 09:41:17 +0200
Subject: [Rd] Build R form source - manuals
In-Reply-To: <55EFDB8F.8000101@stats.ox.ac.uk>
References: <CAK1hC9vuUaDt1=-=w=KVaHk27=5BH5C827zC4wfXSX0umWoRBg@mail.gmail.com>
	<55EFDB8F.8000101@stats.ox.ac.uk>
Message-ID: <CAK1hC9u-o=ONB0vxBEzpYkNoq=GxEET+g3qytH-CydPzixYaFw@mail.gmail.com>

On Wed, Sep 9, 2015 at 9:11 AM, Prof Brian Ripley <ripley at stats.ox.ac.uk> wrote:
> On 09/09/2015 07:40, arnaud gaboury wrote:
>>
>> I built R form source succesfully on my Fedora 22 box. No errors.
>
>
> Which version of R?
3-2-1

>>
>>
>> I can read there is an issue with some manuals at build time when
>> running makeinfo, especially these two:
>> doc/manual/R-exts.texi
>> cp doc/manual/R-intro.texi
>> Some distro have hacks about makeinfo 5 in their build script.
>>
>> I wonder if some manuals are broken but couldn't see it when running make.
>>
>>
>> May someone tells me more about this issue and what can I do to make
>> sure these manuals are correctly built.
>
>
> You are the one claiming there is an issue, so the onus is on you to tell
> us.

please find below two build scripts for R 3-2-1

* Archlinux:
..........
  # fix for texinfo 5.X
  sed -i 's|test ${makeinfo_version_min} -lt 7|test
${makeinfo_version_min} -lt 0|' configure

* FEDORA 22
.....................
%if 0%{?fedora} >= 19
# What a hack.
# Current texinfo doesn't like @eqn. Use @math instead where stuff breaks.
cp doc/manual/R-exts.texi doc/manual/R-exts.texi.spot
cp doc/manual/R-intro.texi doc/manual/R-intro.texi.spot
sed -i 's|@eqn|@math|g' doc/manual/R-exts.texi
sed -i 's|@eqn|@math|g' doc/manual/R-intro.texi
%endif
%if %{texi2any}
    make MAKEINFO=texi2any info
%else
    make MAKEINFO=makeinfo info
%endif

# Convert to UTF-8
for i in doc/manual/R-intro.info doc/manual/R-FAQ.info doc/FAQ
doc/manual/R-admin.info doc/manual/R-exts.info-1; do
  iconv -f iso-8859-1 -t utf-8 -o $i{.utf8,}
  mv $i{.utf8,}
done

%install
make DESTDIR=${RPM_BUILD_ROOT} install install-info
# And now, undo the hack. :P
%if 0%{?fedora} >= 19
mv doc/manual/R-exts.texi.spot doc/manual/R-exts.texi
mv doc/manual/R-intro.texi.spot doc/manual/R-intro.texi
%endif
make DESTDIR=${RPM_BUILD_ROOT} install-pdf
........................


As seen above, these two scripts contain hacks.

Again, building on my Linux R from CRAN source is OK. My worry is
being left with broken manuals, thus the idea to verify if everything
is correctly built.

Thank you

>
> Recent versions of R work with makeinfo 5.1/2 (5.0 is broken) or report that
> makeinfo is not available.  And versions released after 6.0 work with 6.0
> ....
>
> --
> Brian D. Ripley,                  ripley at stats.ox.ac.uk
> Emeritus Professor of Applied Statistics, University of Oxford
> 1 South Parks Road, Oxford OX1 3TG, UK
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel



-- 

google.com/+arnaudgabourygabx


From karch at mpib-berlin.mpg.de  Wed Sep  9 15:46:42 2015
From: karch at mpib-berlin.mpg.de (Julian Karch)
Date: Wed, 9 Sep 2015 15:46:42 +0200
Subject: [Rd] Profiling function that contains both C++ and Fortran Code
Message-ID: <55F03842.5020302@mpib-berlin.mpg.de>

Hello,

I am trying to profile a function of OpenMx 
(http://openmx.psyc.virginia.edu) for CPU time. My operating system is 
OS X 10.10. OpenMx contains C++ and Fortran code. I have read the 
section regarding profiling compiled code in the manual 
(https://cran.r-project.org/doc/manuals/r-release/R-exts.html#Profiling-compiled-code). 
This section and this post (http://blog.fellstat.com/?p=337) lead me to 
try Instruments. Here is what I did:

-Opened Instruments
-Chose the Time Profiler Template
-Pressed Record
-Started my script using RStudio

The output of instruments looks like this: 
http://i.stack.imgur.com/aKIQm.jpg. The command line tool "sample" 
returns the same output

The problem is that it looks like "omxunsafedgemm_", the functions that 
consumes the vast majority of the time, would be called directly from 
the Main Thread. However, this is a low level Fortran function. It is 
always called by a C++ function called "omxDGEMM". In this example 
"omxDGEMM" is first called by "omxCallRamExpection" (so almost at the 
bottom of the call tree). The total time of "omxDGEMM" is 0. Thus, the 
profiling information is currently useless.

In the original version of the package "omxDGEMM" is defined as inline. 
I changed this in the hope that it would resolve the issue. This was not 
the case. "omxunsafedgemm" is called by "omxDGEMM" like that

F77_CALL(omxunsafedgemm)(&transa, &transb,
                         &(nrow), &(ncol), &(nmid),
                         &alpha, a->data, &(a->leading),
                         b->data, &(b->leading),&beta, 		 
result->data, 		&(result->leading));

Any ideas how to obtain a sensible profiler output?


Best,

Julian Karch


From nate at verse.com  Wed Sep  9 23:26:27 2015
From: nate at verse.com (Nathan Kurz)
Date: Wed, 9 Sep 2015 14:26:27 -0700
Subject: [Rd] Build R with MKL and ICC
In-Reply-To: <1441621388.4083.54.camel@iarc.fr>
References: <CAK1hC9uLYSyA-7W92TwD4J9adcxDRE1a2ig1iDDPSyN43kikyg@mail.gmail.com>
	<CAK1hC9u0btbbXGR3+OAcAd5n3SbFwUHoH+YsT5FzVpaeyZWdEQ@mail.gmail.com>
	<1441382281.4083.26.camel@iarc.fr>
	<CAK1hC9vg0SePBhEbp-Xpt8W1BDH-kY3XTLr39ZHCp2k2MHxUhA@mail.gmail.com>
	<1441621388.4083.54.camel@iarc.fr>
Message-ID: <CAFAN8vw53p+dCnr_LroKZbQMw66kwMiXypNBJAZVHhW998Di2g@mail.gmail.com>

As a short and simple approach, I just compiled the current R release
on Ubuntu with ICC and MKL using just this:

$ tar -xzf R-3.2.2.tar.gz
$ cd R-3.2.2
$ CC=icc CXX=icpc AR=xiar LD=xild CFLAGS="-g -O3 -xHost" CXXFLAGS="-g
-O3 -xHost" ./configure --with-blas="-lmkl_rt -lpthread" --with-lapack
--enable-memory-profiling --enable-R-shlib
$ make
$ sudo make install
$ R --version
R version 3.2.2 (2015-08-14) -- "Fire Safety"

If you have 'ifort' available, you would probably want to add it to
the list of environment variables.

--nate


From nate at verse.com  Wed Sep  9 23:57:37 2015
From: nate at verse.com (Nathan Kurz)
Date: Wed, 9 Sep 2015 14:57:37 -0700
Subject: [Rd] sample.int() algorithms
Message-ID: <CAFAN8vxy=EXbxwZUpj5MUpXQd=4RjNn+whVdxCT0=ae0zAEZsQ@mail.gmail.com>

I was experiencing a strange pattern of slowdowns when using
sample.int(), where sampling from a one  population would sometimes
take 1000x longer than taking the same number of samples from a
slightly larger population.   For my application, this resulted in a
runtime of several hours rather than a few seconds.  Looking into it,
I saw that sample.int() is hardcoded to switch algorithms when the
population is larger than 1e+7, and I was straddling this boundary:

sample.int  <- function(n, size = n, replace = FALSE, prob = NULL)
{
    if (!replace && is.null(prob) && n > 1e7 && size <= n/2)
        .Internal(sample2(n, size))
    else .Internal(sample(n, size, replace, prob))
}

do_sample2() takes the approach of taking a sample, and then checking
if this sample is a duplicate.  As long as the population size is much
larger than numbers of samples, this will be efficient.  This explains
the check for "size <= n/2".   But I'm not sure why the "n > 1e7"
check is needed.

I put together some sample code to show the difference in timing
letting sample.int() choose the cutoff point versus manually
specifying the use of do_sample2():

###  compare times for sample.int() vs internal function sample2()
compareSampleTimes = function(popSizeList=c(1e5, 1e6, 1e7, 1e8, 1e9),
    sampleSizeList=c(10, 100, 1000, 10000),
    numReplications=1000) {
    for (sampleSize in sampleSizeList) {
        for (popSize in popSizeList)  {
            elapsed1 = system.time(replicate(numReplications,
sample.int(popSize, sampleSize)))[["elapsed"]]
            elapsed2 = system.time(replicate(numReplications,
.Internal(sample2(popSize, sampleSize))))[["elapsed"]]
            cat(sprintf("Sample %d from %.0e: %f vs %f seconds\n",
sampleSize, popSize, elapsed1, elapsed2))
        }
        cat("\n")
    }
}

compareSampleTimes()

https://gist.github.com/nkurz/8fa6ff3772a054294531

And here's the output showing the 1000x slowdowns at population sizes
of 10e7 under R-3.2.2:

$ Rscript compareSampleTimes.R
Sample 10 from 1e+05: 0.133000 vs 0.003000 seconds
Sample 10 from 1e+06: 0.931000 vs 0.003000 seconds
Sample 10 from 1e+07: 13.190000 vs 0.003000 seconds
Sample 10 from 1e+08: 0.004000 vs 0.003000 seconds
Sample 10 from 1e+09: 0.004000 vs 0.002000 seconds

Sample 100 from 1e+05: 0.180000 vs 0.007000 seconds
Sample 100 from 1e+06: 0.908000 vs 0.006000 seconds
Sample 100 from 1e+07: 13.161000 vs 0.007000 seconds
Sample 100 from 1e+08: 0.007000 vs 0.006000 seconds
Sample 100 from 1e+09: 0.007000 vs 0.006000 seconds

Sample 1000 from 1e+05: 0.194000 vs 0.057000 seconds
Sample 1000 from 1e+06: 1.084000 vs 0.049000 seconds
Sample 1000 from 1e+07: 13.226000 vs 0.049000 seconds
Sample 1000 from 1e+08: 0.047000 vs 0.046000 seconds
Sample 1000 from 1e+09: 0.048000 vs 0.047000 seconds

Sample 10000 from 1e+05: 0.414000 vs 0.712000 seconds
Sample 10000 from 1e+06: 1.100000 vs 0.453000 seconds
Sample 10000 from 1e+07: 14.882000 vs 0.443000 seconds
Sample 10000 from 1e+08: 0.448000 vs 0.443000 seconds
Sample 10000 from 1e+09: 0.445000 vs 0.443000 seconds

Since my usage involves taking samples of 1K from populations of about
10M, the do_sample2() approach is the clear winner: .05 seconds vs 13
seconds.  I tested on a couple machines, and got similar results on
both. Would there be a downside to having sample.int() use the faster
do_sample2() approach for populations of all sizes whenever the ratio
of population size to sample size is large?

--nate


From richierocks at gmail.com  Thu Sep 10 11:52:02 2015
From: richierocks at gmail.com (Richard Cotton)
Date: Thu, 10 Sep 2015 12:52:02 +0300
Subject: [Rd] Using IDs to suppress specific messages and warnings
Message-ID: <CAPp_+=dnGknY1_SzsMw48q89LCBvavrceUZj4hyowWt8YAOseg@mail.gmail.com>

The suppressMessages and suppressWarnings functions currently suppress
all the message or warnings that are generated by the input
expression.

The ability to suppress only specific messages or warnings is
sometimes useful, particularly for cases like file import where there
are lots of things that can go wrong.

Suppressing only messages that match a regular expression has rightly
been rejected as problematic due to non-portability across locales.
See, for example,

https://stat.ethz.ch/pipermail/r-devel/2012-October/065089.html

A better way of suppressing certain conditions would be to allow them
to have an identifier.  (This is how MATLAB allows control over
individual conditions.)

The implementation ought to be fairly simple.

simpleMessage, simpleWarning, and simpleError gain an id arg, which is
stored in their structure.

simpleMessage <- function (message, call = NULL, id = NULL)
{
  structure(
    list(message = message, call = call, id = id),
    class = c("simpleMessage", "message", "condition")
  )
}

I envisage IDs being strings, for example, the "NaN produced" warning
when you ask call, e.g., sqrt(-1) could have an ID of
"base:sqrt:nan_produced".

suppressMessage and suppressWarnings gain an ids arg, defaulting to
NULL, which preserves existing behaviour.  If it takes a character
vector, messages with the IDs provided get muffled.  Something like:

suppressMessages <- function (expr, ids = NULL)
{
  withCallingHandlers(
    expr,
    message = function(c)
    {
       if(is.null(ids) || (inherits(c, "simpleMessage") && c$id %in%
as.character(ids)))
       {
         invokeRestart("muffleMessage")
       }
    }
  )
}

The hard part is providing IDs for all the existing messages in R and
its packages.  It's certainly do-able, but I imagine would take quite
a lot of time.

Is there any enthusiasm for implementing this feature, or something like it?

-- 
Regards,
Richie

Learning R
4dpiecharts.com


From richierocks at gmail.com  Thu Sep 10 13:15:32 2015
From: richierocks at gmail.com (Richard Cotton)
Date: Thu, 10 Sep 2015 14:15:32 +0300
Subject: [Rd] Proposed change in file.exists() to tolerate Windows
In-Reply-To: <CAErODj9qf7BiGV1n9Vu9d0nyiCeOFQm7DJzTrH0vZgTQsm5nTQ@mail.gmail.com>
References: <CAErODj9qf7BiGV1n9Vu9d0nyiCeOFQm7DJzTrH0vZgTQsm5nTQ@mail.gmail.com>
Message-ID: <CAPp_+=cAystTbntkGRfTfAv+3eHnNQ0vmJ5W_FaXmA33QoSvRA@mail.gmail.com>

Two solutions:

1. Use the wrapper function is_existing_file in assertive.

2. Use standardize_path in pathological before you call file.exists.



On 27 August 2015 at 17:02, Paul Johnson <pauljohn32 at gmail.com> wrote:
> I'm writing to ask if R Core would make file.exists more Windows
> tolerant when the argument has a trailing slash. This has been
> discussed by users a few times here, I know it is not a new topic. But
> it is not a solved problem, yet. I acknowledge that CRAN packages
> exist which fix this by replacing file.exists(), but it seems more
> elegant to me to fix the problem in R itself.
>
> R Core goes to great extremes to accommodate Windows users and the
> refusal to make file.exists() work in a cross-platform way is
> incongruous.
>
> I often do have slashes on the end of directory names being tested.
> Now that I understand the meaning of ?file.exists,  I need to wrap the
> name being checked in a slash-deleter
>
> ## delete trailing slashes
> dts <- function(name) gsub("/$", "", name)
> if(!file.exists(dts(any_name))) { ...
>
> Can't you make file.exists do this invisibly? Maybe the argument could
> be filtered through normalizePath() instead.
>
> If not, would you please consider putting a workaround like mine into
> the file.exists documentation so Windows users can see how easy this
> is to avoid?
>
> Respectfully yours,
>
> pj
>
> --
> Paul E. Johnson
> Professor, Political Science        Director
> 1541 Lilac Lane, Room 504      Center for Research Methods
> University of Kansas                 University of Kansas
> http://pj.freefaculty.org              http://crmda.ku.edu
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel



-- 
Regards,
Richie

Learning R
4dpiecharts.com


From luke-tierney at uiowa.edu  Thu Sep 10 13:47:24 2015
From: luke-tierney at uiowa.edu (luke-tierney at uiowa.edu)
Date: Thu, 10 Sep 2015 06:47:24 -0500
Subject: [Rd] Using IDs to suppress specific messages and warnings
In-Reply-To: <CAPp_+=dnGknY1_SzsMw48q89LCBvavrceUZj4hyowWt8YAOseg@mail.gmail.com>
References: <CAPp_+=dnGknY1_SzsMw48q89LCBvavrceUZj4hyowWt8YAOseg@mail.gmail.com>
Message-ID: <alpine.DEB.2.10.1509100642530.2561@luke-Latitude>

Conditions have classes and the condition system is designed around
the idea that classes would be used for this sort of thing. That is
already how tryCatch and withCallingHandlers discriminate the
conditions to handle.

Designing and implementing a condition class hierarchy to support this
is indeed the hard/tedious part.

Best,

luke

On Thu, 10 Sep 2015, Richard Cotton wrote:

> The suppressMessages and suppressWarnings functions currently suppress
> all the message or warnings that are generated by the input
> expression.
>
> The ability to suppress only specific messages or warnings is
> sometimes useful, particularly for cases like file import where there
> are lots of things that can go wrong.
>
> Suppressing only messages that match a regular expression has rightly
> been rejected as problematic due to non-portability across locales.
> See, for example,
>
> https://stat.ethz.ch/pipermail/r-devel/2012-October/065089.html
>
> A better way of suppressing certain conditions would be to allow them
> to have an identifier.  (This is how MATLAB allows control over
> individual conditions.)
>
> The implementation ought to be fairly simple.
>
> simpleMessage, simpleWarning, and simpleError gain an id arg, which is
> stored in their structure.
>
> simpleMessage <- function (message, call = NULL, id = NULL)
> {
>  structure(
>    list(message = message, call = call, id = id),
>    class = c("simpleMessage", "message", "condition")
>  )
> }
>
> I envisage IDs being strings, for example, the "NaN produced" warning
> when you ask call, e.g., sqrt(-1) could have an ID of
> "base:sqrt:nan_produced".
>
> suppressMessage and suppressWarnings gain an ids arg, defaulting to
> NULL, which preserves existing behaviour.  If it takes a character
> vector, messages with the IDs provided get muffled.  Something like:
>
> suppressMessages <- function (expr, ids = NULL)
> {
>  withCallingHandlers(
>    expr,
>    message = function(c)
>    {
>       if(is.null(ids) || (inherits(c, "simpleMessage") && c$id %in%
> as.character(ids)))
>       {
>         invokeRestart("muffleMessage")
>       }
>    }
>  )
> }
>
> The hard part is providing IDs for all the existing messages in R and
> its packages.  It's certainly do-able, but I imagine would take quite
> a lot of time.
>
> Is there any enthusiasm for implementing this feature, or something like it?
>
>

-- 
Luke Tierney
Ralph E. Wareham Professor of Mathematical Sciences
University of Iowa                  Phone:             319-335-3386
Department of Statistics and        Fax:               319-335-3017
    Actuarial Science
241 Schaeffer Hall                  email:   luke-tierney at uiowa.edu
Iowa City, IA 52242                 WWW:  http://www.stat.uiowa.edu


From richierocks at gmail.com  Thu Sep 10 15:03:24 2015
From: richierocks at gmail.com (Richard Cotton)
Date: Thu, 10 Sep 2015 16:03:24 +0300
Subject: [Rd] Using IDs to suppress specific messages and warnings
In-Reply-To: <alpine.DEB.2.10.1509100642530.2561@luke-Latitude>
References: <CAPp_+=dnGknY1_SzsMw48q89LCBvavrceUZj4hyowWt8YAOseg@mail.gmail.com>
	<alpine.DEB.2.10.1509100642530.2561@luke-Latitude>
Message-ID: <CAPp_+=f5bsevd=Cpw5jTm2+H6qjES_qykMkVtBo4FPvC3+RHRA@mail.gmail.com>

Thanks Luke,

On 10 September 2015 at 14:47,  <luke-tierney at uiowa.edu> wrote:
> Conditions have classes and the condition system is designed around
> the idea that classes would be used for this sort of thing. That is
> already how tryCatch and withCallingHandlers discriminate the
> conditions to handle.

That makes sense.  Though with my sqrt example, it's just a plain
simpleWarning, which doesn't give you the opportunity to do special
handling.

tryCatch(sqrt(-1), warning = function(w) class(w))
## [1] "simpleWarning" "warning"       "condition"


> Designing and implementing a condition class hierarchy to support this
> is indeed the hard/tedious part.

There are precedents from other languages that could be used as a
template.  For example, .NET and Java both have very well defined
exception hierarchies that could serve as a starting point.

https://msdn.microsoft.com/en-us/library/z4c5tckx%28v=vs.110%29.aspx
https://docs.oracle.com/javase/7/docs/api/java/lang/package-tree.html

Who is the best person to ask/cajole to start getting this implemented?

-- 
Regards,
Richie

Learning R
4dpiecharts.com


From murdoch.duncan at gmail.com  Thu Sep 10 15:18:49 2015
From: murdoch.duncan at gmail.com (Duncan Murdoch)
Date: Thu, 10 Sep 2015 09:18:49 -0400
Subject: [Rd] Using IDs to suppress specific messages and warnings
In-Reply-To: <CAPp_+=f5bsevd=Cpw5jTm2+H6qjES_qykMkVtBo4FPvC3+RHRA@mail.gmail.com>
References: <CAPp_+=dnGknY1_SzsMw48q89LCBvavrceUZj4hyowWt8YAOseg@mail.gmail.com>
	<alpine.DEB.2.10.1509100642530.2561@luke-Latitude>
	<CAPp_+=f5bsevd=Cpw5jTm2+H6qjES_qykMkVtBo4FPvC3+RHRA@mail.gmail.com>
Message-ID: <55F18339.9090400@gmail.com>

On 10/09/2015 9:03 AM, Richard Cotton wrote:
> Thanks Luke,
> 
> On 10 September 2015 at 14:47,  <luke-tierney at uiowa.edu> wrote:
>> Conditions have classes and the condition system is designed around
>> the idea that classes would be used for this sort of thing. That is
>> already how tryCatch and withCallingHandlers discriminate the
>> conditions to handle.
> 
> That makes sense.  Though with my sqrt example, it's just a plain
> simpleWarning, which doesn't give you the opportunity to do special
> handling.
> 
> tryCatch(sqrt(-1), warning = function(w) class(w))
> ## [1] "simpleWarning" "warning"       "condition"
> 
> 
>> Designing and implementing a condition class hierarchy to support this
>> is indeed the hard/tedious part.
> 
> There are precedents from other languages that could be used as a
> template.  For example, .NET and Java both have very well defined
> exception hierarchies that could serve as a starting point.
> 
> https://msdn.microsoft.com/en-us/library/z4c5tckx%28v=vs.110%29.aspx
> https://docs.oracle.com/javase/7/docs/api/java/lang/package-tree.html
> 
> Who is the best person to ask/cajole to start getting this implemented?

I think that if you put together a proposal that looks easy to implement
and maintain, and volunteered (or recruited volunteers) to do most of
the work, then it would get done.  I don't think either of the posted
hierarchies would be acceptable, though, because they'd require anyone
who was writing new code to learn them.

Currently if I want to put in a warning, it's easy:  I just call
warning().  If you make it take an extra 5 seconds to add something that
makes the warning more useful, I'd do it.  If it takes 10 minutes of
reading through voluminous documentation, I wouldn't.

Duncan Murdoch


From luke-tierney at uiowa.edu  Thu Sep 10 15:24:58 2015
From: luke-tierney at uiowa.edu (luke-tierney at uiowa.edu)
Date: Thu, 10 Sep 2015 08:24:58 -0500
Subject: [Rd] Using IDs to suppress specific messages and warnings
In-Reply-To: <CAPp_+=f5bsevd=Cpw5jTm2+H6qjES_qykMkVtBo4FPvC3+RHRA@mail.gmail.com>
References: <CAPp_+=dnGknY1_SzsMw48q89LCBvavrceUZj4hyowWt8YAOseg@mail.gmail.com>
	<alpine.DEB.2.10.1509100642530.2561@luke-Latitude>
	<CAPp_+=f5bsevd=Cpw5jTm2+H6qjES_qykMkVtBo4FPvC3+RHRA@mail.gmail.com>
Message-ID: <alpine.DEB.2.10.1509100816580.2561@luke-Latitude>

On Thu, 10 Sep 2015, Richard Cotton wrote:

> Thanks Luke,
>
> On 10 September 2015 at 14:47,  <luke-tierney at uiowa.edu> wrote:
>> Conditions have classes and the condition system is designed around
>> the idea that classes would be used for this sort of thing. That is
>> already how tryCatch and withCallingHandlers discriminate the
>> conditions to handle.
>
> That makes sense.  Though with my sqrt example, it's just a plain
> simpleWarning, which doesn't give you the opportunity to do special
> handling.
>
> tryCatch(sqrt(-1), warning = function(w) class(w))
> ## [1] "simpleWarning" "warning"       "condition"

Obviously, that is what happens now since e don't yet have a developed
hierarchy of classes. This, and most other internally generated
warnings/errors, would need to change to more specific classes of
warnings/errors once the hierarchy is developed.

>> Designing and implementing a condition class hierarchy to support this
>> is indeed the hard/tedious part.
>
> There are precedents from other languages that could be used as a
> template.  For example, .NET and Java both have very well defined
> exception hierarchies that could serve as a starting point.
>
> https://msdn.microsoft.com/en-us/library/z4c5tckx%28v=vs.110%29.aspx
> https://docs.oracle.com/javase/7/docs/api/java/lang/package-tree.html

The R condition system is based on the one in common lisp, which is
quite bit richer than Java's mechanism. Common Lisp's hierarchy would
be the best starting point, though ideas from the hierarchy in Java
could be useful as well.

> Who is the best person to ask/cajole to start getting this implemented?

I't been on my long todo list for a long time, but I don't expect to
have the time to do it myself anytime soon.  If someone else want to
put in the work I am willing to work with them.

Best,

luke

-- 
Luke Tierney
Ralph E. Wareham Professor of Mathematical Sciences
University of Iowa                  Phone:             319-335-3386
Department of Statistics and        Fax:               319-335-3017
    Actuarial Science
241 Schaeffer Hall                  email:   luke-tierney at uiowa.edu
Iowa City, IA 52242                 WWW:  http://www.stat.uiowa.edu


From h.wickham at gmail.com  Thu Sep 10 20:34:38 2015
From: h.wickham at gmail.com (Hadley Wickham)
Date: Thu, 10 Sep 2015 13:34:38 -0500
Subject: [Rd] Printing buglet for latin1 encoded strings
Message-ID: <CABdHhvE+Rfk7kVJ0TdjiRssLUFz-S7wj2UUeaki6=-F=uni+tQ@mail.gmail.com>

x <- c("ao?t", "?l?ve", "?a va")
y <- iconv(x, "UTF-8", "latin1")

x
#> [1] "ao?t"  "?l?ve" "?a va"
y
#> [1] "ao?t"        "?l?ve"       "?a va"

(note the difference in spacing)

On both R-release (mac) and R-devel (linux).  nchar() and format() both look ok.

Hadley


-- 
http://had.co.nz/


From djsamperi at gmail.com  Sat Sep 12 04:14:05 2015
From: djsamperi at gmail.com (Dominick Samperi)
Date: Fri, 11 Sep 2015 22:14:05 -0400
Subject: [Rd] rgl/webGL complains about Javascript,
	even in recent online docs?
Message-ID: <CADUbQ5jU5DJUVmojoC3rNRe9ORVqpRFJUp7B0TN4vaNQBwFfWg@mail.gmail.com>

Hello,

The recently created online "rgl Overview" at
https://cran.r-project.org/web/packages/rgl/vignettes/rgl.html
illustrates a problem that I am trying to resolve.

At the bottom of each image block on that page appears the
advisory: You must enable Javascript to view this page properly.

I am using Safari under MacOS with Javascript and WebGL
both enabled, so it must be the detection algorithm that is
mistaken. It is not clear to me how this works after looking
over the generated HTML code (generated by knit2html
in my case).

I found this after I ran into this problem in a different context,
namely, in the process of creating a wordpress page that
contains interactive rgl content. I tried simply placing
the code generated by knit2html into a wordpress page,
but the result is not interactive and that message about
Javascript not being enabled appears.

On the other hand, if I open the generated code in a
browser directly, interaction works and there is no
Javascript message.

In summary, interactive rgl code works stand-alone, but
not in wordpress, and not in the "rgl Overview" page.

Thanks,
Dominick


From murdoch.duncan at gmail.com  Sat Sep 12 13:37:28 2015
From: murdoch.duncan at gmail.com (Duncan Murdoch)
Date: Sat, 12 Sep 2015 07:37:28 -0400
Subject: [Rd] rgl/webGL complains about Javascript,
 even in recent online docs?
In-Reply-To: <CADUbQ5jU5DJUVmojoC3rNRe9ORVqpRFJUp7B0TN4vaNQBwFfWg@mail.gmail.com>
References: <CADUbQ5jU5DJUVmojoC3rNRe9ORVqpRFJUp7B0TN4vaNQBwFfWg@mail.gmail.com>
Message-ID: <55F40E78.6010101@gmail.com>

On 11/09/2015 10:14 PM, Dominick Samperi wrote:
> Hello,
> 
> The recently created online "rgl Overview" at
> https://cran.r-project.org/web/packages/rgl/vignettes/rgl.html
> illustrates a problem that I am trying to resolve.
> 
> At the bottom of each image block on that page appears the
> advisory: You must enable Javascript to view this page properly.
> 
> I am using Safari under MacOS with Javascript and WebGL
> both enabled, so it must be the detection algorithm that is
> mistaken. It is not clear to me how this works after looking
> over the generated HTML code (generated by knit2html
> in my case).
> 
> I found this after I ran into this problem in a different context,
> namely, in the process of creating a wordpress page that
> contains interactive rgl content. I tried simply placing
> the code generated by knit2html into a wordpress page,
> but the result is not interactive and that message about
> Javascript not being enabled appears.
> 
> On the other hand, if I open the generated code in a
> browser directly, interaction works and there is no
> Javascript message.
> 
> In summary, interactive rgl code works stand-alone, but
> not in wordpress, and not in the "rgl Overview" page.
> 

I see the same in Firefox, it's not just Safari.

If I look at the browser console, I see errors indicating that rglClass
is not defined, and I don't see a block of Javascript code that should
have been inserted.

If I install rgl from the source on CRAN, I see the same problem, so it
looks like an rgl bug.  I'll see if I can fix it.

Duncan Murdoch


From murdoch.duncan at gmail.com  Sat Sep 12 18:42:01 2015
From: murdoch.duncan at gmail.com (Duncan Murdoch)
Date: Sat, 12 Sep 2015 12:42:01 -0400
Subject: [Rd] rgl/webGL complains about Javascript,
 even in recent online docs?
In-Reply-To: <55F40E78.6010101@gmail.com>
References: <CADUbQ5jU5DJUVmojoC3rNRe9ORVqpRFJUp7B0TN4vaNQBwFfWg@mail.gmail.com>
	<55F40E78.6010101@gmail.com>
Message-ID: <55F455D9.70807@gmail.com>

On 12/09/2015 7:37 AM, Duncan Murdoch wrote:
> On 11/09/2015 10:14 PM, Dominick Samperi wrote:
>> Hello,
>>
>> The recently created online "rgl Overview" at
>> https://cran.r-project.org/web/packages/rgl/vignettes/rgl.html
>> illustrates a problem that I am trying to resolve.
>>
>> At the bottom of each image block on that page appears the
>> advisory: You must enable Javascript to view this page properly.
>>
>> I am using Safari under MacOS with Javascript and WebGL
>> both enabled, so it must be the detection algorithm that is
>> mistaken. It is not clear to me how this works after looking
>> over the generated HTML code (generated by knit2html
>> in my case).
>>
>> I found this after I ran into this problem in a different context,
>> namely, in the process of creating a wordpress page that
>> contains interactive rgl content. I tried simply placing
>> the code generated by knit2html into a wordpress page,
>> but the result is not interactive and that message about
>> Javascript not being enabled appears.
>>
>> On the other hand, if I open the generated code in a
>> browser directly, interaction works and there is no
>> Javascript message.
>>
>> In summary, interactive rgl code works stand-alone, but
>> not in wordpress, and not in the "rgl Overview" page.
>>
> 
> I see the same in Firefox, it's not just Safari.
> 
> If I look at the browser console, I see errors indicating that rglClass
> is not defined, and I don't see a block of Javascript code that should
> have been inserted.
> 
> If I install rgl from the source on CRAN, I see the same problem, so it
> looks like an rgl bug.  I'll see if I can fix it.

Yes, it was an rgl bug.  During my testing I always had knitr loaded
before rgl, but when building the vignettes for the package, the load
order is different, and the initialization was silently skipped.

I'll soon be committing changes to R-forge to fix this, and eventually
it will end up on CRAN.  At the moment it looks like I need to add this
function:

setupKnitr <- function() {
  if (requireNamespace("knitr")) {
    knitr::knit_hooks$set(webgl = hook_webgl)
    knitr::knit_hooks$set(rgl = hook_rgl)
    environment(hook_webgl)$commonParts <- TRUE
    environment(hook_webgl)$reuse <- TRUE
  }
}

and that should be called (just once) near the start of the vignette.

Duncan Murdoch


From djsamperi at gmail.com  Sat Sep 12 22:33:29 2015
From: djsamperi at gmail.com (Dominick Samperi)
Date: Sat, 12 Sep 2015 16:33:29 -0400
Subject: [Rd] rgl/webGL complains about Javascript,
	even in recent online docs?
In-Reply-To: <55F455D9.70807@gmail.com>
References: <CADUbQ5jU5DJUVmojoC3rNRe9ORVqpRFJUp7B0TN4vaNQBwFfWg@mail.gmail.com>
	<55F40E78.6010101@gmail.com> <55F455D9.70807@gmail.com>
Message-ID: <CADUbQ5jpYiF2OuST5wNBmjL0ZSnZW9=AcOHUc6M+od5n4DKHaw@mail.gmail.com>

Thanks for the pointers and the quick fix.

Perhaps the generated HTML code should issue a
message like "Javascript load problem" instead of
"You must enable Javascript to view this page properly,"
because the latter can be misleading.


On Sat, Sep 12, 2015 at 12:42 PM, Duncan Murdoch
<murdoch.duncan at gmail.com> wrote:
> On 12/09/2015 7:37 AM, Duncan Murdoch wrote:
>> On 11/09/2015 10:14 PM, Dominick Samperi wrote:
>>> Hello,
>>>
>>> The recently created online "rgl Overview" at
>>> https://cran.r-project.org/web/packages/rgl/vignettes/rgl.html
>>> illustrates a problem that I am trying to resolve.
>>>
>>> At the bottom of each image block on that page appears the
>>> advisory: You must enable Javascript to view this page properly.
>>>
>>> I am using Safari under MacOS with Javascript and WebGL
>>> both enabled, so it must be the detection algorithm that is
>>> mistaken. It is not clear to me how this works after looking
>>> over the generated HTML code (generated by knit2html
>>> in my case).
>>>
>>> I found this after I ran into this problem in a different context,
>>> namely, in the process of creating a wordpress page that
>>> contains interactive rgl content. I tried simply placing
>>> the code generated by knit2html into a wordpress page,
>>> but the result is not interactive and that message about
>>> Javascript not being enabled appears.
>>>
>>> On the other hand, if I open the generated code in a
>>> browser directly, interaction works and there is no
>>> Javascript message.
>>>
>>> In summary, interactive rgl code works stand-alone, but
>>> not in wordpress, and not in the "rgl Overview" page.
>>>
>>
>> I see the same in Firefox, it's not just Safari.
>>
>> If I look at the browser console, I see errors indicating that rglClass
>> is not defined, and I don't see a block of Javascript code that should
>> have been inserted.
>>
>> If I install rgl from the source on CRAN, I see the same problem, so it
>> looks like an rgl bug.  I'll see if I can fix it.
>
> Yes, it was an rgl bug.  During my testing I always had knitr loaded
> before rgl, but when building the vignettes for the package, the load
> order is different, and the initialization was silently skipped.
>
> I'll soon be committing changes to R-forge to fix this, and eventually
> it will end up on CRAN.  At the moment it looks like I need to add this
> function:
>
> setupKnitr <- function() {
>   if (requireNamespace("knitr")) {
>     knitr::knit_hooks$set(webgl = hook_webgl)
>     knitr::knit_hooks$set(rgl = hook_rgl)
>     environment(hook_webgl)$commonParts <- TRUE
>     environment(hook_webgl)$reuse <- TRUE
>   }
> }
>
> and that should be called (just once) near the start of the vignette.
>
> Duncan Murdoch
>


From murdoch.duncan at gmail.com  Sun Sep 13 00:11:50 2015
From: murdoch.duncan at gmail.com (Duncan Murdoch)
Date: Sat, 12 Sep 2015 18:11:50 -0400
Subject: [Rd] rgl/webGL complains about Javascript,
 even in recent online docs?
In-Reply-To: <CADUbQ5jpYiF2OuST5wNBmjL0ZSnZW9=AcOHUc6M+od5n4DKHaw@mail.gmail.com>
References: <CADUbQ5jU5DJUVmojoC3rNRe9ORVqpRFJUp7B0TN4vaNQBwFfWg@mail.gmail.com>
	<55F40E78.6010101@gmail.com> <55F455D9.70807@gmail.com>
	<CADUbQ5jpYiF2OuST5wNBmjL0ZSnZW9=AcOHUc6M+od5n4DKHaw@mail.gmail.com>
Message-ID: <55F4A326.1000408@gmail.com>

On 12/09/2015 4:33 PM, Dominick Samperi wrote:
> Thanks for the pointers and the quick fix.
> 
> Perhaps the generated HTML code should issue a
> message like "Javascript load problem" instead of
> "You must enable Javascript to view this page properly,"
> because the latter can be misleading.

It only gives that message when things are so bad that no code is
running at all.  The bug you saw meant it showed up when it shouldn't;
that should have been fixed, but we'll see.

Duncan Murdoch

> 
> 
> On Sat, Sep 12, 2015 at 12:42 PM, Duncan Murdoch
> <murdoch.duncan at gmail.com> wrote:
>> On 12/09/2015 7:37 AM, Duncan Murdoch wrote:
>>> On 11/09/2015 10:14 PM, Dominick Samperi wrote:
>>>> Hello,
>>>>
>>>> The recently created online "rgl Overview" at
>>>> https://cran.r-project.org/web/packages/rgl/vignettes/rgl.html
>>>> illustrates a problem that I am trying to resolve.
>>>>
>>>> At the bottom of each image block on that page appears the
>>>> advisory: You must enable Javascript to view this page properly.
>>>>
>>>> I am using Safari under MacOS with Javascript and WebGL
>>>> both enabled, so it must be the detection algorithm that is
>>>> mistaken. It is not clear to me how this works after looking
>>>> over the generated HTML code (generated by knit2html
>>>> in my case).
>>>>
>>>> I found this after I ran into this problem in a different context,
>>>> namely, in the process of creating a wordpress page that
>>>> contains interactive rgl content. I tried simply placing
>>>> the code generated by knit2html into a wordpress page,
>>>> but the result is not interactive and that message about
>>>> Javascript not being enabled appears.
>>>>
>>>> On the other hand, if I open the generated code in a
>>>> browser directly, interaction works and there is no
>>>> Javascript message.
>>>>
>>>> In summary, interactive rgl code works stand-alone, but
>>>> not in wordpress, and not in the "rgl Overview" page.
>>>>
>>>
>>> I see the same in Firefox, it's not just Safari.
>>>
>>> If I look at the browser console, I see errors indicating that rglClass
>>> is not defined, and I don't see a block of Javascript code that should
>>> have been inserted.
>>>
>>> If I install rgl from the source on CRAN, I see the same problem, so it
>>> looks like an rgl bug.  I'll see if I can fix it.
>>
>> Yes, it was an rgl bug.  During my testing I always had knitr loaded
>> before rgl, but when building the vignettes for the package, the load
>> order is different, and the initialization was silently skipped.
>>
>> I'll soon be committing changes to R-forge to fix this, and eventually
>> it will end up on CRAN.  At the moment it looks like I need to add this
>> function:
>>
>> setupKnitr <- function() {
>>   if (requireNamespace("knitr")) {
>>     knitr::knit_hooks$set(webgl = hook_webgl)
>>     knitr::knit_hooks$set(rgl = hook_rgl)
>>     environment(hook_webgl)$commonParts <- TRUE
>>     environment(hook_webgl)$reuse <- TRUE
>>   }
>> }
>>
>> and that should be called (just once) near the start of the vignette.
>>
>> Duncan Murdoch
>>


From djsamperi at gmail.com  Sun Sep 13 00:12:38 2015
From: djsamperi at gmail.com (Dominick Samperi)
Date: Sat, 12 Sep 2015 18:12:38 -0400
Subject: [Rd] rgl/webGL complains about Javascript,
	even in recent online docs?
In-Reply-To: <CADUbQ5jpYiF2OuST5wNBmjL0ZSnZW9=AcOHUc6M+od5n4DKHaw@mail.gmail.com>
References: <CADUbQ5jU5DJUVmojoC3rNRe9ORVqpRFJUp7B0TN4vaNQBwFfWg@mail.gmail.com>
	<55F40E78.6010101@gmail.com> <55F455D9.70807@gmail.com>
	<CADUbQ5jpYiF2OuST5wNBmjL0ZSnZW9=AcOHUc6M+od5n4DKHaw@mail.gmail.com>
Message-ID: <CADUbQ5jTo8hhVsh6SKKHqb_ZEHAJvMjAi9ZMyQGO4eHg8y_oFA@mail.gmail.com>

FYI, one platform where I have not been able to get interactive rgl
working is iOS 8.
iOS 8 is supposed to support WebGL, and Javascript is enabled.

On Sat, Sep 12, 2015 at 4:33 PM, Dominick Samperi <djsamperi at gmail.com> wrote:
> Thanks for the pointers and the quick fix.
>
> Perhaps the generated HTML code should issue a
> message like "Javascript load problem" instead of
> "You must enable Javascript to view this page properly,"
> because the latter can be misleading.
>
>
> On Sat, Sep 12, 2015 at 12:42 PM, Duncan Murdoch
> <murdoch.duncan at gmail.com> wrote:
>> On 12/09/2015 7:37 AM, Duncan Murdoch wrote:
>>> On 11/09/2015 10:14 PM, Dominick Samperi wrote:
>>>> Hello,
>>>>
>>>> The recently created online "rgl Overview" at
>>>> https://cran.r-project.org/web/packages/rgl/vignettes/rgl.html
>>>> illustrates a problem that I am trying to resolve.
>>>>
>>>> At the bottom of each image block on that page appears the
>>>> advisory: You must enable Javascript to view this page properly.
>>>>
>>>> I am using Safari under MacOS with Javascript and WebGL
>>>> both enabled, so it must be the detection algorithm that is
>>>> mistaken. It is not clear to me how this works after looking
>>>> over the generated HTML code (generated by knit2html
>>>> in my case).
>>>>
>>>> I found this after I ran into this problem in a different context,
>>>> namely, in the process of creating a wordpress page that
>>>> contains interactive rgl content. I tried simply placing
>>>> the code generated by knit2html into a wordpress page,
>>>> but the result is not interactive and that message about
>>>> Javascript not being enabled appears.
>>>>
>>>> On the other hand, if I open the generated code in a
>>>> browser directly, interaction works and there is no
>>>> Javascript message.
>>>>
>>>> In summary, interactive rgl code works stand-alone, but
>>>> not in wordpress, and not in the "rgl Overview" page.
>>>>
>>>
>>> I see the same in Firefox, it's not just Safari.
>>>
>>> If I look at the browser console, I see errors indicating that rglClass
>>> is not defined, and I don't see a block of Javascript code that should
>>> have been inserted.
>>>
>>> If I install rgl from the source on CRAN, I see the same problem, so it
>>> looks like an rgl bug.  I'll see if I can fix it.
>>
>> Yes, it was an rgl bug.  During my testing I always had knitr loaded
>> before rgl, but when building the vignettes for the package, the load
>> order is different, and the initialization was silently skipped.
>>
>> I'll soon be committing changes to R-forge to fix this, and eventually
>> it will end up on CRAN.  At the moment it looks like I need to add this
>> function:
>>
>> setupKnitr <- function() {
>>   if (requireNamespace("knitr")) {
>>     knitr::knit_hooks$set(webgl = hook_webgl)
>>     knitr::knit_hooks$set(rgl = hook_rgl)
>>     environment(hook_webgl)$commonParts <- TRUE
>>     environment(hook_webgl)$reuse <- TRUE
>>   }
>> }
>>
>> and that should be called (just once) near the start of the vignette.
>>
>> Duncan Murdoch
>>


From murdoch.duncan at gmail.com  Sun Sep 13 01:43:30 2015
From: murdoch.duncan at gmail.com (Duncan Murdoch)
Date: Sat, 12 Sep 2015 19:43:30 -0400
Subject: [Rd] rgl/webGL complains about Javascript,
 even in recent online docs?
In-Reply-To: <CADUbQ5jTo8hhVsh6SKKHqb_ZEHAJvMjAi9ZMyQGO4eHg8y_oFA@mail.gmail.com>
References: <CADUbQ5jU5DJUVmojoC3rNRe9ORVqpRFJUp7B0TN4vaNQBwFfWg@mail.gmail.com>
	<55F40E78.6010101@gmail.com> <55F455D9.70807@gmail.com>
	<CADUbQ5jpYiF2OuST5wNBmjL0ZSnZW9=AcOHUc6M+od5n4DKHaw@mail.gmail.com>
	<CADUbQ5jTo8hhVsh6SKKHqb_ZEHAJvMjAi9ZMyQGO4eHg8y_oFA@mail.gmail.com>
Message-ID: <55F4B8A2.5000407@gmail.com>

On 12/09/2015 6:12 PM, Dominick Samperi wrote:
> FYI, one platform where I have not been able to get interactive rgl
> working is iOS 8.
> iOS 8 is supposed to support WebGL, and Javascript is enabled.

I'm not going to try to support iOS.

Duncan Murdoch



> On Sat, Sep 12, 2015 at 4:33 PM, Dominick Samperi <djsamperi at gmail.com> wrote:
>> Thanks for the pointers and the quick fix.
>>
>> Perhaps the generated HTML code should issue a
>> message like "Javascript load problem" instead of
>> "You must enable Javascript to view this page properly,"
>> because the latter can be misleading.
>>
>>
>> On Sat, Sep 12, 2015 at 12:42 PM, Duncan Murdoch
>> <murdoch.duncan at gmail.com> wrote:
>>> On 12/09/2015 7:37 AM, Duncan Murdoch wrote:
>>>> On 11/09/2015 10:14 PM, Dominick Samperi wrote:
>>>>> Hello,
>>>>>
>>>>> The recently created online "rgl Overview" at
>>>>> https://cran.r-project.org/web/packages/rgl/vignettes/rgl.html
>>>>> illustrates a problem that I am trying to resolve.
>>>>>
>>>>> At the bottom of each image block on that page appears the
>>>>> advisory: You must enable Javascript to view this page properly.
>>>>>
>>>>> I am using Safari under MacOS with Javascript and WebGL
>>>>> both enabled, so it must be the detection algorithm that is
>>>>> mistaken. It is not clear to me how this works after looking
>>>>> over the generated HTML code (generated by knit2html
>>>>> in my case).
>>>>>
>>>>> I found this after I ran into this problem in a different context,
>>>>> namely, in the process of creating a wordpress page that
>>>>> contains interactive rgl content. I tried simply placing
>>>>> the code generated by knit2html into a wordpress page,
>>>>> but the result is not interactive and that message about
>>>>> Javascript not being enabled appears.
>>>>>
>>>>> On the other hand, if I open the generated code in a
>>>>> browser directly, interaction works and there is no
>>>>> Javascript message.
>>>>>
>>>>> In summary, interactive rgl code works stand-alone, but
>>>>> not in wordpress, and not in the "rgl Overview" page.
>>>>>
>>>>
>>>> I see the same in Firefox, it's not just Safari.
>>>>
>>>> If I look at the browser console, I see errors indicating that rglClass
>>>> is not defined, and I don't see a block of Javascript code that should
>>>> have been inserted.
>>>>
>>>> If I install rgl from the source on CRAN, I see the same problem, so it
>>>> looks like an rgl bug.  I'll see if I can fix it.
>>>
>>> Yes, it was an rgl bug.  During my testing I always had knitr loaded
>>> before rgl, but when building the vignettes for the package, the load
>>> order is different, and the initialization was silently skipped.
>>>
>>> I'll soon be committing changes to R-forge to fix this, and eventually
>>> it will end up on CRAN.  At the moment it looks like I need to add this
>>> function:
>>>
>>> setupKnitr <- function() {
>>>   if (requireNamespace("knitr")) {
>>>     knitr::knit_hooks$set(webgl = hook_webgl)
>>>     knitr::knit_hooks$set(rgl = hook_rgl)
>>>     environment(hook_webgl)$commonParts <- TRUE
>>>     environment(hook_webgl)$reuse <- TRUE
>>>   }
>>> }
>>>
>>> and that should be called (just once) near the start of the vignette.
>>>
>>> Duncan Murdoch
>>>


From jeroen.ooms at stat.ucla.edu  Mon Sep 14 14:49:27 2015
From: jeroen.ooms at stat.ucla.edu (Jeroen Ooms)
Date: Mon, 14 Sep 2015 14:49:27 +0200
Subject: [Rd] Optimization bug when byte compiling with gcc 5.2.0 on windows
Message-ID: <CABFfbXsdT2-jBdaqr4oCtZ2AvBWZ++tQHa49DyWc=m3G_qE7bw@mail.gmail.com>

When building R-devel with gcc 5.2.0 (mingw-w64 v4) on Windows, make
check fails reg-tests-1b.R at the following check:

  x <- c(1:2, NA)
  sx <- sd(x)
  !is.nan(sx)

Here 'sx' should be 'NA' but it is 'NaN'. It turns out this problem
only appears when the function is byte compiled with optimization
level 3:

  mysd <- function (x, na.rm = FALSE)
    sqrt(var(if (is.vector(x)) x else as.double(x), na.rm = na.rm))

  mysd(x)
  # [1] NA
  compiler::cmpfun(mysd, list(optimize = 1L))(x)
  # [1] NA
  compiler::cmpfun(mysd, list(optimize = 2L))(x)
  # [1] NA
  compiler::cmpfun(mysd, list(optimize = 3L))(x)
  # [1] NaN

The problem does not appear with gcc 5.2.0 on Debian, and also not
with gcc 4.9.3 on Windows. Where do I start debugging this? The
disassembled output from the compiled functions is here:
https://gist.github.com/jeroenooms/3206945a6db6680a9c5c


From simon.urbanek at r-project.org  Mon Sep 14 15:27:57 2015
From: simon.urbanek at r-project.org (Simon Urbanek)
Date: Mon, 14 Sep 2015 09:27:57 -0400
Subject: [Rd] Optimization bug when byte compiling with gcc 5.2.0 on
	windows
In-Reply-To: <CABFfbXsdT2-jBdaqr4oCtZ2AvBWZ++tQHa49DyWc=m3G_qE7bw@mail.gmail.com>
References: <CABFfbXsdT2-jBdaqr4oCtZ2AvBWZ++tQHa49DyWc=m3G_qE7bw@mail.gmail.com>
Message-ID: <2E775529-1E44-480C-97B6-AB847BDB6928@r-project.org>

Jeroen,

the difference is that level 3 is using the internal implementation of sqrt in the compiler instead of calling the sqrt function. The internal path goes to R_sqrt which is defined as

# define R_sqrt(x) (ISNAN(x) ? x : sqrt(x))

so you could check if that is where the problem happens. It theory NA should yield itself, but perhaps the compiler thinks all NANs are equal and will return a constant one. If that's not it, then something else in the direct FastMath1(R_sqrt, R_SqrtSym) path...

Cheers,
Simon


> On Sep 14, 2015, at 8:49 AM, Jeroen Ooms <jeroen.ooms at stat.ucla.edu> wrote:
> 
> When building R-devel with gcc 5.2.0 (mingw-w64 v4) on Windows, make
> check fails reg-tests-1b.R at the following check:
> 
>  x <- c(1:2, NA)
>  sx <- sd(x)
>  !is.nan(sx)
> 
> Here 'sx' should be 'NA' but it is 'NaN'. It turns out this problem
> only appears when the function is byte compiled with optimization
> level 3:
> 
>  mysd <- function (x, na.rm = FALSE)
>    sqrt(var(if (is.vector(x)) x else as.double(x), na.rm = na.rm))
> 
>  mysd(x)
>  # [1] NA
>  compiler::cmpfun(mysd, list(optimize = 1L))(x)
>  # [1] NA
>  compiler::cmpfun(mysd, list(optimize = 2L))(x)
>  # [1] NA
>  compiler::cmpfun(mysd, list(optimize = 3L))(x)
>  # [1] NaN
> 
> The problem does not appear with gcc 5.2.0 on Debian, and also not
> with gcc 4.9.3 on Windows. Where do I start debugging this? The
> disassembled output from the compiled functions is here:
> https://gist.github.com/jeroenooms/3206945a6db6680a9c5c
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
> 


From luke-tierney at uiowa.edu  Mon Sep 14 15:36:22 2015
From: luke-tierney at uiowa.edu (luke-tierney at uiowa.edu)
Date: Mon, 14 Sep 2015 08:36:22 -0500
Subject: [Rd] Optimization bug when byte compiling with gcc 5.2.0 on
 windows
In-Reply-To: <CABFfbXsdT2-jBdaqr4oCtZ2AvBWZ++tQHa49DyWc=m3G_qE7bw@mail.gmail.com>
References: <CABFfbXsdT2-jBdaqr4oCtZ2AvBWZ++tQHa49DyWc=m3G_qE7bw@mail.gmail.com>
Message-ID: <alpine.LFD.2.20.1509140826370.19382@itasca.stat.uiowa.edu>

I believe the issue is that on Windows the sqrt function when called
with a NaN does not return the same NaN, as it does on other platforms.
We have

#if (defined(_WIN32) || defined(_WIN64)) && defined(__GNUC__) && \
     __GNUC__ <= 4
# define R_sqrt(x) (ISNAN(x) ? x : sqrt(x))
#else
# define R_sqrt sqrt
#endif

for implementing the SQRT opcode. I suspect this came from Duncan
Murdoch; I don't know the reason for restricting to __GNUC__ <= 4. I
seem to recall that there are other places in the code where we have
similar workarounds but I can't find them at the moment.

The builtin sqrt always pretests with ISNAN.

Best,

luke



On Mon, 14 Sep 2015, Jeroen Ooms wrote:

> When building R-devel with gcc 5.2.0 (mingw-w64 v4) on Windows, make
> check fails reg-tests-1b.R at the following check:
>
>  x <- c(1:2, NA)
>  sx <- sd(x)
>  !is.nan(sx)
>
> Here 'sx' should be 'NA' but it is 'NaN'. It turns out this problem
> only appears when the function is byte compiled with optimization
> level 3:
>
>  mysd <- function (x, na.rm = FALSE)
>    sqrt(var(if (is.vector(x)) x else as.double(x), na.rm = na.rm))
>
>  mysd(x)
>  # [1] NA
>  compiler::cmpfun(mysd, list(optimize = 1L))(x)
>  # [1] NA
>  compiler::cmpfun(mysd, list(optimize = 2L))(x)
>  # [1] NA
>  compiler::cmpfun(mysd, list(optimize = 3L))(x)
>  # [1] NaN
>
> The problem does not appear with gcc 5.2.0 on Debian, and also not
> with gcc 4.9.3 on Windows. Where do I start debugging this? The
> disassembled output from the compiled functions is here:
> https://gist.github.com/jeroenooms/3206945a6db6680a9c5c
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>

-- 
Luke Tierney
Ralph E. Wareham Professor of Mathematical Sciences
University of Iowa                  Phone:             319-335-3386
Department of Statistics and        Fax:               319-335-3017
    Actuarial Science
241 Schaeffer Hall                  email:   luke-tierney at uiowa.edu
Iowa City, IA 52242                 WWW:  http://www.stat.uiowa.edu


From murdoch.duncan at gmail.com  Mon Sep 14 16:16:07 2015
From: murdoch.duncan at gmail.com (Duncan Murdoch)
Date: Mon, 14 Sep 2015 10:16:07 -0400
Subject: [Rd] Optimization bug when byte compiling with gcc 5.2.0 on
 windows
In-Reply-To: <alpine.LFD.2.20.1509140826370.19382@itasca.stat.uiowa.edu>
References: <CABFfbXsdT2-jBdaqr4oCtZ2AvBWZ++tQHa49DyWc=m3G_qE7bw@mail.gmail.com>
	<alpine.LFD.2.20.1509140826370.19382@itasca.stat.uiowa.edu>
Message-ID: <55F6D6A7.3060603@gmail.com>

On 14/09/2015 9:36 AM, luke-tierney at uiowa.edu wrote:
> I believe the issue is that on Windows the sqrt function when called
> with a NaN does not return the same NaN, as it does on other platforms.
> We have
>
> #if (defined(_WIN32) || defined(_WIN64)) && defined(__GNUC__) && \
>       __GNUC__ <= 4
> # define R_sqrt(x) (ISNAN(x) ? x : sqrt(x))
> #else
> # define R_sqrt sqrt
> #endif
>
> for implementing the SQRT opcode. I suspect this came from Duncan
> Murdoch; I don't know the reason for restricting to __GNUC__ <= 4.

That was an update to keep the workaround for gcc 4.9.2.  The previous 
code restricted the change to 4.6.x or earlier.

I think the reason for the earlier restriction is the assumption that 
eventually gcc will be fixed and this workaround won't be necessary, but 
apparently 5.2.0 still has the same problem.

Duncan Murdoch

>   I
> seem to recall that there are other places in the code where we have
> similar workarounds but I can't find them at the moment.
>
> The builtin sqrt always pretests with ISNAN.
>
> Best,
>
> luke
>
>
>
> On Mon, 14 Sep 2015, Jeroen Ooms wrote:
>
> > When building R-devel with gcc 5.2.0 (mingw-w64 v4) on Windows, make
> > check fails reg-tests-1b.R at the following check:
> >
> >  x <- c(1:2, NA)
> >  sx <- sd(x)
> >  !is.nan(sx)
> >
> > Here 'sx' should be 'NA' but it is 'NaN'. It turns out this problem
> > only appears when the function is byte compiled with optimization
> > level 3:
> >
> >  mysd <- function (x, na.rm = FALSE)
> >    sqrt(var(if (is.vector(x)) x else as.double(x), na.rm = na.rm))
> >
> >  mysd(x)
> >  # [1] NA
> >  compiler::cmpfun(mysd, list(optimize = 1L))(x)
> >  # [1] NA
> >  compiler::cmpfun(mysd, list(optimize = 2L))(x)
> >  # [1] NA
> >  compiler::cmpfun(mysd, list(optimize = 3L))(x)
> >  # [1] NaN
> >
> > The problem does not appear with gcc 5.2.0 on Debian, and also not
> > with gcc 4.9.3 on Windows. Where do I start debugging this? The
> > disassembled output from the compiled functions is here:
> > https://gist.github.com/jeroenooms/3206945a6db6680a9c5c
> >
> > ______________________________________________
> > R-devel at r-project.org mailing list
> > https://stat.ethz.ch/mailman/listinfo/r-devel
> >
>


From jeroen.ooms at stat.ucla.edu  Mon Sep 14 20:49:37 2015
From: jeroen.ooms at stat.ucla.edu (Jeroen Ooms)
Date: Mon, 14 Sep 2015 20:49:37 +0200
Subject: [Rd] Optimization bug when byte compiling with gcc 5.2.0 on
	windows
In-Reply-To: <55F6D6A7.3060603@gmail.com>
References: <CABFfbXsdT2-jBdaqr4oCtZ2AvBWZ++tQHa49DyWc=m3G_qE7bw@mail.gmail.com>
	<alpine.LFD.2.20.1509140826370.19382@itasca.stat.uiowa.edu>
	<55F6D6A7.3060603@gmail.com>
Message-ID: <CABFfbXtsZwUhQGdVG-3OAq_bReZGNkSJ2SRVpXkrFT06a7AuYg@mail.gmail.com>

On Mon, Sep 14, 2015 at 4:16 PM, Duncan Murdoch
<murdoch.duncan at gmail.com> wrote:
> I think the reason for the earlier restriction is the assumption that
> eventually gcc will be fixed and this workaround won't be necessary, but
> apparently 5.2.0 still has the same problem.

I tested this hypothesis by replacing '__GNUC__ <= 4' with '__GNUC__
<= 5' and rebuilding R, but this introduces a whole lot of problems
that were not there before. In particular R crashes when using the
graphics device, which it did not without this fix.

I first thought this was an unrelated random crash, but 'make check'
consistently fails in base-Ex.R at the first invocation of boxplot().
Same for 'check recommended', each package fails when making a plot.
None of this happens with the original source code, where everything
works fine, besides the optimized version of sqrt(NA) giving NaN. Did
something perhaps change in gcc 5 for the ISNAN macro that makes it
unsuitable to be used in this way?

FWIW it looks like the original fix was introduced by Luke about a
year ago in r66652:
https://github.com/wch/r-source/commit/e9aaf8fdeddf27c2a9078cd214a41475c8ff6f40


From jeroen.ooms at stat.ucla.edu  Mon Sep 14 23:19:58 2015
From: jeroen.ooms at stat.ucla.edu (Jeroen Ooms)
Date: Mon, 14 Sep 2015 23:19:58 +0200
Subject: [Rd] Optimization bug when byte compiling with gcc 5.2.0 on
	windows
In-Reply-To: <CABFfbXtsZwUhQGdVG-3OAq_bReZGNkSJ2SRVpXkrFT06a7AuYg@mail.gmail.com>
References: <CABFfbXsdT2-jBdaqr4oCtZ2AvBWZ++tQHa49DyWc=m3G_qE7bw@mail.gmail.com>
	<alpine.LFD.2.20.1509140826370.19382@itasca.stat.uiowa.edu>
	<55F6D6A7.3060603@gmail.com>
	<CABFfbXtsZwUhQGdVG-3OAq_bReZGNkSJ2SRVpXkrFT06a7AuYg@mail.gmail.com>
Message-ID: <CABFfbXtcL-Lv=yJwSQeoZs5BxHsSfLen8tE1j2dDe2zSHYYzQw@mail.gmail.com>

On Mon, Sep 14, 2015 at 8:49 PM, Jeroen Ooms <jeroen.ooms at stat.ucla.edu> wrote:

> I tested this hypothesis by replacing '__GNUC__ <= 4' with '__GNUC__
> <= 5' and rebuilding R, but this introduces a whole lot of problems
> that were not there before. In particular R crashes when using the
> graphics device, which it did not without this fix.

I found that the problem goes away when we use isnanl() instead of
isnan(). This is very similar to the problem we have for R_pow() where
we need to use powl() instead of pow() for recent versions mingw-w64
(this still needs to be patched in r-devel).

So the full solution is:

#if (defined(_WIN32) || defined(_WIN64)) && defined(__GNUC__)
# define R_sqrt(x) (isnanl(x) ? x : sqrt(x))
#else
# define R_sqrt sqrt
#endif

Below the relevant mingw-w64 sources:

https://github.com/Alexpux/mingw-w64/blob/master/mingw-w64-crt/math/isnan.c
https://github.com/Alexpux/mingw-w64/blob/master/mingw-w64-crt/math/isnanf.c
https://github.com/Alexpux/mingw-w64/blob/master/mingw-w64-crt/math/isnanl.c

I think mingw-w64 takes powl from glibc.


From luke-tierney at uiowa.edu  Mon Sep 14 23:40:16 2015
From: luke-tierney at uiowa.edu (luke-tierney at uiowa.edu)
Date: Mon, 14 Sep 2015 16:40:16 -0500
Subject: [Rd] Optimization bug when byte compiling with gcc 5.2.0 on
 windows
In-Reply-To: <CABFfbXtcL-Lv=yJwSQeoZs5BxHsSfLen8tE1j2dDe2zSHYYzQw@mail.gmail.com>
References: <CABFfbXsdT2-jBdaqr4oCtZ2AvBWZ++tQHa49DyWc=m3G_qE7bw@mail.gmail.com>
	<alpine.LFD.2.20.1509140826370.19382@itasca.stat.uiowa.edu>
	<55F6D6A7.3060603@gmail.com>
	<CABFfbXtsZwUhQGdVG-3OAq_bReZGNkSJ2SRVpXkrFT06a7AuYg@mail.gmail.com>
	<CABFfbXtcL-Lv=yJwSQeoZs5BxHsSfLen8tE1j2dDe2zSHYYzQw@mail.gmail.com>
Message-ID: <alpine.DEB.2.10.1509141637220.2561@luke-Latitude>

On Mon, 14 Sep 2015, Jeroen Ooms wrote:

> On Mon, Sep 14, 2015 at 8:49 PM, Jeroen Ooms <jeroen.ooms at stat.ucla.edu> wrote:
>
>> I tested this hypothesis by replacing '__GNUC__ <= 4' with '__GNUC__
>> <= 5' and rebuilding R, but this introduces a whole lot of problems
>> that were not there before. In particular R crashes when using the
>> graphics device, which it did not without this fix.
>
> I found that the problem goes away when we use isnanl() instead of
> isnan(). This is very similar to the problem we have for R_pow() where
> we need to use powl() instead of pow() for recent versions mingw-w64
> (this still needs to be patched in r-devel).
>
> So the full solution is:
>
> #if (defined(_WIN32) || defined(_WIN64)) && defined(__GNUC__)
> # define R_sqrt(x) (isnanl(x) ? x : sqrt(x))
> #else
> # define R_sqrt sqrt
> #endif

That can't possibly be the right solution. We use ISNAN in lots of
places and long doubles in very few.

Best,

luke

>
> Below the relevant mingw-w64 sources:
>
> https://github.com/Alexpux/mingw-w64/blob/master/mingw-w64-crt/math/isnan.c
> https://github.com/Alexpux/mingw-w64/blob/master/mingw-w64-crt/math/isnanf.c
> https://github.com/Alexpux/mingw-w64/blob/master/mingw-w64-crt/math/isnanl.c
>
> I think mingw-w64 takes powl from glibc.
>

-- 
Luke Tierney
Ralph E. Wareham Professor of Mathematical Sciences
University of Iowa                  Phone:             319-335-3386
Department of Statistics and        Fax:               319-335-3017
    Actuarial Science
241 Schaeffer Hall                  email:   luke-tierney at uiowa.edu
Iowa City, IA 52242                 WWW:  http://www.stat.uiowa.edu


From avraham.adler at gmail.com  Wed Sep 16 21:32:12 2015
From: avraham.adler at gmail.com (Avraham Adler)
Date: Wed, 16 Sep 2015 15:32:12 -0400
Subject: [Rd] R-devel_2015-09-14 throws an error in reg-packages test
Message-ID: <CAL6gwnLfdszEfi5xozPm=EEdsy0GVz6S=O-QwTGWAm+qNX1LrQ@mail.gmail.com>

Hello.

I have successfully built R on windows scores of times, and have never
come across this problem. For this build, I am using the current 4.6.3
prerelease version of Rtools, Windows7 64 bit, and
R-devel_2015-09-14.tar.gz

When running make check, I get the following error:


running code in 'reg-packages.R' ...make[3]: *** [reg-packages.Rout] Error 1
make[2]: *** [test-Reg] Error 2
make[1]: *** [test-all-basics] Error 1
make: *** [check] Error 2


Looking at reg-packages.Rout.fail shows:

>
> ## else w/o clause:
> ## could use file.copy(recursive = TRUE)
> system(paste('cp -R', shQuote(pkgSrcPath), shQuote(tempdir())))
> pkgPath <- file.path(tempdir(), "Pkgs")
> ## pkgB tests an empty R directory
> dir.create(file.path(pkgPath, "pkgB", "R"), recursive = TRUE,
+        showWarnings = FALSE)
> p.lis <- if("Matrix" %in% row.names(installed.packages(.Library)))
+          c("pkgA", "pkgB", "exNSS4") else "exNSS4"
> for(p. in p.lis) {
+     cat("building package", p., "...\n")
+     r <- build.pkg(file.path(pkgPath, p.))
+     cat("installing package", p., "using file", r, "...\n")
+     ## we could install the tar file ... (see build.pkg()'s definition)
+     install.packages(r, lib = "myLib", repos=NULL, type = "source")
+     stopifnot(require(p.,lib = "myLib", character.only=TRUE))
+     detach(pos = match(p., sub("^package:","", search())))
+ }
building package pkgA ...
Error: dir.exists(dir) is not TRUE
Execution halted

This error does NOT occur when building R-patched_2015-09-13, so it
must be something in R-devel.

A similar question was asked previously in 2012, once on r-help [1]
and once here [2], but did not receive any answer.

Any and all suggestions would be greatly appreciated.

Thank you,

Avi

[1] <https://stat.ethz.ch/pipermail/r-help//2012-October/337237.html>
[2] <https://mailman.stat.ethz.ch/pipermail/r-devel//2012-October/065002.html>


From jeroen.ooms at stat.ucla.edu  Wed Sep 16 22:56:19 2015
From: jeroen.ooms at stat.ucla.edu (Jeroen Ooms)
Date: Wed, 16 Sep 2015 22:56:19 +0200
Subject: [Rd] R-devel_2015-09-14 throws an error in reg-packages test
In-Reply-To: <CAL6gwnLfdszEfi5xozPm=EEdsy0GVz6S=O-QwTGWAm+qNX1LrQ@mail.gmail.com>
References: <CAL6gwnLfdszEfi5xozPm=EEdsy0GVz6S=O-QwTGWAm+qNX1LrQ@mail.gmail.com>
Message-ID: <CABFfbXseWcQ58zPe9P=Fvx1ZH8P3OQ1_K=sh2Zn558-+mTuD5Q@mail.gmail.com>

On Wed, Sep 16, 2015 at 9:32 PM, Avraham Adler <avraham.adler at gmail.com> wrote:

> When running make check, I get the following error:
>
> running code in 'reg-packages.R' ...make[3]: *** [reg-packages.Rout] Error 1
> make[2]: *** [test-Reg] Error 2
> make[1]: *** [test-all-basics] Error 1
> make: *** [check] Error 2
>
> Looking at reg-packages.Rout.fail shows

The r-devel commit log [1] shows that Martin has been working on this
test over the past few days. Sometimes work-in-progress causes the
daily svn snapshot to be broken; typically it gets fixed the next day
or so. If you don't want to wait, try building
R-devel_2015-09-10.tar.gz that one works.

[1] https://github.com/wch/r-source/commits/trunk


From spencer.graves at prodsyse.com  Thu Sep 17 04:50:45 2015
From: spencer.graves at prodsyse.com (Spencer Graves)
Date: Wed, 16 Sep 2015 21:50:45 -0500
Subject: [Rd] RSiteSearch, sos, rdocumentation.org, ...?
Message-ID: <55FA2A85.3070405@prodsyse.com>

Hello:


       What search capabilities seem most valuable for R users, and how 
can those needs most easily be met?


       I ask, because the database behind RSiteSearch and sos is based 
on Namazu, which is no longer maintained, and Jonathan Baron, who 
maintains that database, is considering alternatives. 
"rdocumentation.org" provides some but apparently not all of the desired 
capabilities.


       Might this be an appropriate time to consider a redesign of 
search capabilities for R?  The "sos" package is designed to search 
packages more than help pages.  Unfortunately, I don't understand how it 
interfaces with the database.  If changes to Baron's database break 
findFn{sos}, I'd like help in fixing the problem -- or in deciding to 
discontinue sos in favor of something else.  (Of course, if changes to 
Baron's database break findFn, RSiteSearch may need comparable maintenance.)


       Thanks,
       Spencer


From maechler at stat.math.ethz.ch  Thu Sep 17 10:49:51 2015
From: maechler at stat.math.ethz.ch (Martin Maechler)
Date: Thu, 17 Sep 2015 10:49:51 +0200
Subject: [Rd] R-devel_2015-09-14 throws an error in reg-packages test
In-Reply-To: <CABFfbXseWcQ58zPe9P=Fvx1ZH8P3OQ1_K=sh2Zn558-+mTuD5Q@mail.gmail.com>
References: <CAL6gwnLfdszEfi5xozPm=EEdsy0GVz6S=O-QwTGWAm+qNX1LrQ@mail.gmail.com>
	<CABFfbXseWcQ58zPe9P=Fvx1ZH8P3OQ1_K=sh2Zn558-+mTuD5Q@mail.gmail.com>
Message-ID: <22010.32431.873284.768548@stat.math.ethz.ch>

>>>>> Jeroen Ooms <jeroen.ooms at stat.ucla.edu>
>>>>>     on Wed, 16 Sep 2015 22:56:19 +0200 writes:

    > On Wed, Sep 16, 2015 at 9:32 PM, Avraham Adler <avraham.adler at gmail.com> wrote:
    >> When running make check, I get the following error:
    >> 
    >> running code in 'reg-packages.R' ...make[3]: *** [reg-packages.Rout] Error 1
    >> make[2]: *** [test-Reg] Error 2
    >> make[1]: *** [test-all-basics] Error 1
    >> make: *** [check] Error 2
    >> 
    >> Looking at reg-packages.Rout.fail shows

    > The r-devel commit log [1] shows that Martin has been working on this
    > test over the past few days.

Yes... and you can also find which misfeature this was
addressing. While the above problem only ever happened on
Windows {because it often does not work with symbolic links ..}
the check was even generally broken for a couple hours a few
days earlier, because I had failed to commit all my relevant changes....

    > Sometimes work-in-progress causes the
    > daily svn snapshot to be broken; typically it gets fixed the next day
    > or so.

Exactly.  Thank you Jeroen.

Typically you'd report such problems only if they persist for
more than a day, or at least only report to R-core .. and we
will thank you if we did not know about it already (and on a
lucky day even thank you *if* we knew already ;-).

Martin

    > If you don't want to wait, try building
    > R-devel_2015-09-10.tar.gz that one works.

    > [1] https://github.com/wch/r-source/commits/trunk


From dutangc at gmail.com  Thu Sep 17 13:04:19 2015
From: dutangc at gmail.com (Christophe Dutang)
Date: Thu, 17 Sep 2015 13:04:19 +0200
Subject: [Rd] names treatment in optim()
Message-ID: <5BD131B0-C1B7-43FE-A309-3082EBE80807@gmail.com>

Dear both,

I have found that names are not treated in the same way in optim() depending on the optimization method (argument method). 

The example below shows the difference between the Brent method and the L-BFGS-B method.

f <- function(x){ y <- x^2;names(y) <-"f(x)";y}
optim(10, f, method="Brent", lower=-1, upper=10)$value
optim(10, f, method="L-BFGS-B", lower=-1, upper=10)$value

z <- 10
names(z) <- "x"
z
optim(z, f, method="Brent", lower=-1, upper=10)$par
optim(z, f, method="L-BFGS-B", lower=-1, upper=10)$par


Do you obtain the same behavior? would you consider interesting to have the names passed to the components value and par?

I?m using R version 3.2.2 (2015-08-14)
Platform: x86_64-apple-darwin13.4.0 (64-bit)
Running under: OS X 10.10.5 (Yosemite)

locale:
[1] fr_FR.UTF-8/fr_FR.UTF-8/fr_FR.UTF-8/C/fr_FR.UTF-8/fr_FR.UTF-8

attached base packages:
[1] stats     graphics  grDevices utils     datasets  methods   base   



Kind regards, Christophe

---------------------------------------
Christophe Dutang
LMM, UdM, Le Mans, France
web: http://dutangc.free.fr <http://dutangc.free.fr/>

	[[alternative HTML version deleted]]


From arnaud.gaboury at gmail.com  Thu Sep 17 23:43:26 2015
From: arnaud.gaboury at gmail.com (arnaud gaboury)
Date: Thu, 17 Sep 2015 23:43:26 +0200
Subject: [Rd] Optimize R: some confusion with Lapack and OpenBlas/openBlas
	openmp packages.
Message-ID: <CAK1hC9tBuxr92h8QPC=PjCcFfTgVo+w_Uj_a4mcGnfzEFLHZWQ@mail.gmail.com>

I run Fedora 22 R package. It is build with  --with-lapack \
--with-blas \  --enable-R-shlib \.

As the machine will act as a server with lots of R data computing, I
try to optimize my R package.

At first, I installed parallel_studio_xe_2016 with a free one year
licence. Then, I build a package for R with Intel MKL and compiler.
This took me lots of time as it was my first .rmp build. I finally
managed to build and run it.

Now, when looking at some blogs about R-RBenchmark.25, I realized that
there is very few speed difference between Intel BLAS and OpenBlas. I
am now wondering if such Intel stuff (with its paid licencing) and the
need to build my own R package is really worth.

Do anyone have some realistic point of view/advice?

Then, in case I gave up with the Intel stuff, I am confused between
the Lapack package and Openblas one. I know first one will provide
liblas.so.3 when second one libopenblas.so. Am i right to say I only
need one blas library and the openBlas one is the one to get? Can I
use instead the openmp version of openblas, or shall I installed both?
here again, I am a litle confused.
As for the liblapack.so.3, I will get it from the Fedora lapack package.

last, what is the correct way to tell R to use these shared libraries,
after R has been built?

Thank you for advices and help.

--


From arnaud.gaboury at gmail.com  Fri Sep 18 09:38:31 2015
From: arnaud.gaboury at gmail.com (arnaud gaboury)
Date: Fri, 18 Sep 2015 09:38:31 +0200
Subject: [Rd] Optimize R: some confusion with Lapack and
 OpenBlas/openBlas openmp packages.
In-Reply-To: <CAK1hC9tBuxr92h8QPC=PjCcFfTgVo+w_Uj_a4mcGnfzEFLHZWQ@mail.gmail.com>
References: <CAK1hC9tBuxr92h8QPC=PjCcFfTgVo+w_Uj_a4mcGnfzEFLHZWQ@mail.gmail.com>
Message-ID: <CAK1hC9sJ4vTFKVPcRHNadiY2FScC7XDGgRaduoiyJMF3WDGN4w@mail.gmail.com>

On Thu, Sep 17, 2015 at 11:43 PM, arnaud gaboury
<arnaud.gaboury at gmail.com> wrote:
> I run Fedora 22 R package. It is build with  --with-lapack \
> --with-blas \  --enable-R-shlib \.
>
> As the machine will act as a server with lots of R data computing, I
> try to optimize my R package.
>
> At first, I installed parallel_studio_xe_2016 with a free one year
> licence. Then, I build a package for R with Intel MKL and compiler.
> This took me lots of time as it was my first .rmp build. I finally
> managed to build and run it.
>
> Now, when looking at some blogs about R-RBenchmark.25, I realized that
> there is very few speed difference between Intel BLAS and OpenBlas. I
> am now wondering if such Intel stuff (with its paid licencing) and the
> need to build my own R package is really worth.
>
> Do anyone have some realistic point of view/advice?
>
> Then, in case I gave up with the Intel stuff, I am confused between
> the Lapack package and Openblas one. I know first one will provide
> liblas.so.3 when second one libopenblas.so. Am i right to say I only
> need one blas library and the openBlas one is the one to get? Can I
> use instead the openmp version of openblas, or shall I installed both?
> here again, I am a litle confused.
> As for the liblapack.so.3, I will get it from the Fedora lapack package.
>
> last, what is the correct way to tell R to use these shared libraries,
> after R has been built?

What I have done:
# update-alternatives --install /usr/lib64/libblas.so.3 libblas.so.3
/usr/lib64/libopenblas.so 90
so now:
# update-alternatives --config libblas.so.3
There is 1 program that provides 'libblas.so.3'.

  Selection    Command
-----------------------------------------------
*+ 1           /usr/lib64/libopenblas.so

--------------------------------

As for lappack, I can't see anything about this library in my R
dynamic executable:

% ldd /usr/lib64/R/bin/exec/R
linux-vdso.so.1 (0x00007fffc8de5000)
libR.so => /usr/lib64/R/lib/libR.so (0x00007f69b8d93000)
libgomp.so.1 => /lib64/libgomp.so.1 (0x00007f69b8b70000)
libpthread.so.0 => /lib64/libpthread.so.0 (0x00007f69b8954000)
libc.so.6 => /lib64/libc.so.6 (0x00007f69b8594000)
libblas.so.3 => /lib64/libblas.so.3 (0x00007f69b64ef000)
libgfortran.so.3 => /lib64/libgfortran.so.3 (0x00007f69b61c4000)
libm.so.6 => /lib64/libm.so.6 (0x00007f69b5ebc000)
libquadmath.so.0 => /lib64/libquadmath.so.0 (0x00007f69b5c7c000)
libreadline.so.6 => /lib64/libreadline.so.6 (0x00007f69b5a32000)
libtre.so.5 => /lib64/libtre.so.5 (0x00007f69b5822000)
libpcre.so.1 => /lib64/libpcre.so.1 (0x00007f69b55b1000)
liblzma.so.5 => /lib64/liblzma.so.5 (0x00007f69b538b000)
libbz2.so.1 => /lib64/libbz2.so.1 (0x00007f69b517b000)
libz.so.1 => /lib64/libz.so.1 (0x00007f69b4f64000)
librt.so.1 => /lib64/librt.so.1 (0x00007f69b4d5c000)
libdl.so.2 => /lib64/libdl.so.2 (0x00007f69b4b58000)
libicuuc.so.54 => /lib64/libicuuc.so.54 (0x00007f69b47c6000)
libicui18n.so.54 => /lib64/libicui18n.so.54 (0x00007f69b436f000)
/lib64/ld-linux-x86-64.so.2 (0x000055bf4c183000)
libgcc_s.so.1 => /lib64/libgcc_s.so.1 (0x00007f69b4157000)
libtinfo.so.5 => /lib64/libtinfo.so.5 (0x00007f69b3f2d000)
libicudata.so.54 => /lib64/libicudata.so.54 (0x00007f69b2501000)
libstdc++.so.6 => /lib64/libstdc++.so.6 (0x00007f69b217f000)

-------------------------------------------------------

I guess I have to build with openmp to be able to use it.



>
> Thank you for advices and help.
>
> --



-- 

google.com/+arnaudgabourygabx


From marc_schwartz at me.com  Fri Sep 18 16:03:57 2015
From: marc_schwartz at me.com (Marc Schwartz)
Date: Fri, 18 Sep 2015 14:03:57 +0000
Subject: [Rd] Test Post
Message-ID: <loom.20150918T160143-52@post.gmane.org>

Hi,

Sorry for the noise, this a only a test post. 

if it works, there should be a reply from me as well.

Thanks,

Marc Schwartz


From marc_schwartz at me.com  Fri Sep 18 16:15:41 2015
From: marc_schwartz at me.com (Marc Schwartz)
Date: Fri, 18 Sep 2015 14:15:41 +0000
Subject: [Rd] Test Post
References: <loom.20150918T160143-52@post.gmane.org>
Message-ID: <loom.20150918T161424-496@post.gmane.org>

Marc Schwartz <marc_schwartz <at> me.com> writes:

> 
> Hi,
> 
> Sorry for the noise, this a only a test post. 
> 
> if it works, there should be a reply from me as well.
> 
> Thanks,
> 
> Marc Schwartz
> 
> 


Hi,

This is the reply.

There should be no further activity.

Thanks,

Marc


From piotr.turski at gmail.com  Sat Sep 19 00:58:16 2015
From: piotr.turski at gmail.com (Piotr Turski)
Date: Sat, 19 Sep 2015 00:58:16 +0200
Subject: [Rd] is R syntax closed?
Message-ID: <55FC9708.1030405@gmail.com>

hi,

i'm new to R and i discovered that for years people are complaining 
about lacking of very basic and hopefully simple things, like multiline 
comment, some marker for 'command doesn't end at this line' etc.

so my question is why some of those things are still not implemented? is 
it because of compatibility/policy reasons? is R syntax done and any 
extensions are forbidden? or it's simply because everyone is doing 
something more interesting?
if it's the second case then do such pull requests/patches have a chance 
of being accepted?

-- 
regards,
piotrek


From mark.vanderloo at gmail.com  Sat Sep 19 09:02:50 2015
From: mark.vanderloo at gmail.com (Mark van der Loo)
Date: Sat, 19 Sep 2015 07:02:50 +0000
Subject: [Rd] is R syntax closed?
In-Reply-To: <55FC9708.1030405@gmail.com>
References: <55FC9708.1030405@gmail.com>
Message-ID: <CAOKDuOgu42xB-8V+DAen0+0WwuJjGeK9aUdi7CkXNZn0BUCyxA@mail.gmail.com>

> comment, some marker for 'command doesn't end at this line' etc.

That is not necessary since R supports multi-line commands without the need
for marking continuation.


> R syntax done and any extensions are forbidden?

R is maintained and extended by the R code team[1] who decide on the GNU R
project. Suggestions (or sometimes patches) are posted on this list and may
or may not be implemented (but please check that your suggestion/question
is indeed new by searching the list archive). R is maintained on an svn
repository and doesn't support pull requests in the same way git does.
Since R is free in the GNU sense you can always define your own local
version, see e.g. [2].

> i'm new to R

welcome, and have fun!

best,
Mark


[1] https://www.r-project.org/contributors.html
[2] https://github.com/radfordneal/pqR



Op za 19 sep. 2015 om 04:02 schreef Piotr Turski <piotr.turski at gmail.com>:

> hi,
>
> i'm new to R and i discovered that for years people are complaining
> about lacking of very basic and hopefully simple things, like multiline
> comment, some marker for 'command doesn't end at this line' etc.
>
> so my question is why some of those things are still not implemented? is
> it because of compatibility/policy reasons? is R syntax done and any
> extensions are forbidden? or it's simply because everyone is doing
> something more interesting?
> if it's the second case then do such pull requests/patches have a chance
> of being accepted?
>
> --
> regards,
> piotrek
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>

	[[alternative HTML version deleted]]


From radford at cs.toronto.edu  Sat Sep 19 16:07:18 2015
From: radford at cs.toronto.edu (Radford Neal)
Date: Sat, 19 Sep 2015 10:07:18 -0400
Subject: [Rd] New version of the R parser in pqR
Message-ID: <20150919140718.GA24203@cs.toronto.edu>

I have rewritten the R parser in the new version of pqR that I
recently released (pqR-2015-09-14, at pqR-project.org).  The new
version of the parser is much cleaner, is faster (sometimes quite
substantially faster), has a better interface to the read-eval-print
loop, and provides a better basis for future extensions.  The deparser
has also been substantially revised in pqR, and is better coordinated
with the parser.  The new parser and deparser also fix a number of
bugs, as can be seen in the NEWS file at pqR-project.org.

I believe the new parser is almost completely compatible with R-3.2.2,
with just a few slight differences in the result of getParseData, and
a few deliberate changes, which could easily be undone if one really
wanted to.  It works with RStudio and with the Windows GUI (I haven't
tested with the Mac GUI).  Internally, there is some slight interaction 
with pqR's use of read-only constants for some frequent sub-expressions, 
but this also is easily removed if desired.

The new parser operates top-down, by recursive descent, rather than
using a bottom-up parser generated by Bison.  This allows for much
cleaner operation in several respects.  Use of PROTECT can now follow
the usual conventions, with no need to use UNPROTECT_PTR.  Creation of
parse data records is relatively straightforward.  The special
handling of newlines is also comparatively easy, without the need to
embed a rudimentary top-down parser within the lexical analyser, as was
done in the Bison parser.

The old read-eval-print loop operates by calling the parser repeatedly
with one line of input, two lines of input, etc. until it gets a
return code other than PARSE_INCOMPLETE.  This results in the time
taken growing as the square of the number of source lines.  The new
read-eval-print loop simply provides the parser with a character input
routine that reads new lines as required, while the parser avoids
looking at a character until really needed, to avoid spurious requests
for more input lines.  A quadratic time growth relating to parse data
is also avoided in the new parser.

I suggest that R Core consider adopting this new parser in future R Core
releases of R, along with the associated changes to the read-eval-print 
loop, and the revised version of the deparser.

The new parser is better documented than the old parser.  I am also
willing to provide assistance to anyone trying to understand the code.
I have tested the new parser on the 5018 packages in the pqR repository, 
but of course it's possible that problems might show up in some other 
CRAN packages.  I'm willing to help in resolving any such problems as
well.

   Radford Neal


From bbolker at gmail.com  Sat Sep 19 19:27:24 2015
From: bbolker at gmail.com (Ben Bolker)
Date: Sat, 19 Sep 2015 17:27:24 +0000
Subject: [Rd] is R syntax closed?
References: <55FC9708.1030405@gmail.com>
	<CAOKDuOgu42xB-8V+DAen0+0WwuJjGeK9aUdi7CkXNZn0BUCyxA@mail.gmail.com>
Message-ID: <loom.20150919T191612-972@post.gmane.org>

Mark van der Loo <mark.vanderloo <at> gmail.com> writes:

> 
> > comment, some marker for 'command doesn't end at this line' etc.
> 
> That is not necessary since R supports multi-line commands
>  without the need
> for marking continuation.
> 
> > R syntax done and any extensions are forbidden?
> 
> R is maintained and extended by the R code team[1] who decide 
> on the GNU R
> project. Suggestions (or sometimes patches) are posted on this
>  list and may
> or may not be implemented (but please check that your suggestion/question
> is indeed new by searching the list archive). R is maintained on an svn
> repository and doesn't support pull requests in the same way git does.
> Since R is free in the GNU sense you can always define your own local
> version, see e.g. [2].
> 
> > i'm new to R
> 
> welcome, and have fun!
> 
> best,
> Mark
> 
> [1] https://www.r-project.org/contributors.html
> [2] https://github.com/radfordneal/pqR
> 

   You might find the discussion at http://bit.ly/1ip1S2G
(StackOverflow "proposing feature requests to the r core team")
useful.  For practical purposes, I would say R syntax *is* closed, 
because any changes to the syntax would have to (1) be implementable
without unreasonable effort by the R Core members (ideally by extremely
high-quality contributed code) (2) not break backward compatibility
in any way, including the 7000ish packages currently on CRAN and
2000+ packages on BioConductor, which represent the tip of the
iceberg of deployed R code ...

  As you say, multi-line comments and multi-line commands have
been discussed many times, but most existing R users have already
gotten used to the existing workarounds (e.g. using smart editors
or an if (FALSE) {   ...  })

see also

http://stackoverflow.com/questions/1231195/multiline-comment-workarounds

  Ben Bolker

  Ben Bolker


From bbolker at gmail.com  Sun Sep 20 20:52:22 2015
From: bbolker at gmail.com (Ben Bolker)
Date: Sun, 20 Sep 2015 14:52:22 -0400
Subject: [Rd] summary(lmList) issues
Message-ID: <55FF0066.2060705@gmail.com>


  Over on StackOverflow someone is trying to get this code to work:

library("nlme")
fm2Pixel.lis<-lmList(pixel~day+I(day^2)|Dog, Pixel)
summary(fm2Pixel.lis)

(results: Error in `[<-`(`*tmp*`, use, use, ii, value = lst[[ii]]) :
 subscript out of bounds)


http://stackoverflow.com/questions/32680306/plotting-individual-confidence-intervals-for-the-coefficients-in-the-lmlist-fit

   The problem occurs because one Dog (#9) in the data set only has
data from two days, so the quadratic term is automatically dropped
from the corresponding lm() fit.   (See with(Pixel,table(Dog,day)) )

  nlme::summary.lmList seems to have some reasonably fancy code that
tries to address this, but I haven't been able to get to the bottom of
the problem yet.

  Opinions about submitting this as a bug report (nlme is maintained
by R-core), or other useful input?  It seems reasonable to me, but it
could be argued that this is just an edge case, too bad.  I don't
really mind getting scolded for submitting what is considered, but I'm
trying to do my due diligence.

  Ben Bolker


From henrik.bengtsson at ucsf.edu  Sun Sep 20 21:06:35 2015
From: henrik.bengtsson at ucsf.edu (Henrik Bengtsson)
Date: Sun, 20 Sep 2015 12:06:35 -0700
Subject: [Rd] Long vectors: Missing values and R_xlen_t?
Message-ID: <CAFDcVCSaXrXVLNq1jSaxhs4yJhHsqSSNEGnihebUY_wjBs=Vcw@mail.gmail.com>

Is there a missing value constant defined for R_xlen_t, cf. NA_INTEGER
(== R_NaInt == INT_MIN) for int(eger)?  If not, is it correct to
assume that missing values should be taken care/tested for before
coercing from int or double?

Thank you,

Henrik


From vinhdizzo at gmail.com  Mon Sep 21 19:01:12 2015
From: vinhdizzo at gmail.com (Vinh Nguyen)
Date: Mon, 21 Sep 2015 10:01:12 -0700
Subject: [Rd] segfault with readDCF on R 3.1.2 on AIX 6.1 when using
	install.packages
In-Reply-To: <CA+2Dmwgowjk9+qKcVQOPXRaGpER5wu+UtqZ=pJrJmaNS1DDpdw@mail.gmail.com>
References: <CA+2Dmwgowjk9+qKcVQOPXRaGpER5wu+UtqZ=pJrJmaNS1DDpdw@mail.gmail.com>
Message-ID: <CA+2DmwigXqx_ymW85qzgL7JvyM6tHyzyqSNjWcazow+JROZZ+g@mail.gmail.com>

Hi there,

I just wanted to follow up on this readDCF issue with install.packages
on AIX on R 3.*.  I'm happy to help try potential solutions or debug
if anyone could point me in the right direction.

To re-cap, it appears readDCF is segfault'ing since R 3.* on AIX.
This was not the case up until R 2.15.3.  This makes install.packages
not usable.  Thanks.

-- Vinh


On Tue, Nov 11, 2014 at 10:23 AM, Vinh Nguyen <vinhdizzo at gmail.com> wrote:
> Dear list (re-posting from r-help as r-devel is probably more appropriate),
>
> I was able to successfully compile R on our AIX box at work using the
> GNU compilers following the instructions on the R Administration
> guide.  The output can be seen at here
> (https://gist.github.com/nguyenvinh/504321ea9c89d8919bef) and yields
> no errors .
>
> However, I get a segfault whenever I try to use the install.packages
> function to install packages.  Using debug, I was able to trace it to
> the readDCF function:
>
> Browse[2]>
> debug: if (!all) return(.Internal(readDCF(file, fields, keep.white)))
> Browse[2]>
> debug: return(.Internal(readDCF(file, fields, keep.white)))
> Browse[2]>
>
>  *** caught segfault ***
> address 4, cause 'invalid permissions'
>
> Possible actions:
> 1: abort (with core dump, if enabled)
> 2: normal R exit
> 3: exit R without saving workspace
> 4: exit R saving workspace
> Selection:
>
> Was curious if anyone has a clue on why such error exists or what I
> could do to fix it?  I'm able to install packages via R CMD INSTALL,
> but I would hate to have to manually determine dependencies, download
> the source for each package, and install them "by hand" via R CMD
> INSTALL.
>
> I went back and compiled older versions of R to see if this error
> exists.  On R 3.0.3, I get:
>
> debug(available.packages)
> install.packages('ggplot2', dep=TRUE, repo='http://cran.stat.ucla.edu')
> ...
> Browse[2]>
> debug: z <- res0 <- tryCatch(read.dcf(file = tmpf), error = identity)
> Browse[2]>
> Error: segfault from C stack overflow
>
> On R 2.15.3, I do not see the error.
>
> Would be great to get this resolved.  Thank you for your help.
>
> -- Vinh


From vinhdizzo at gmail.com  Mon Sep 21 19:49:57 2015
From: vinhdizzo at gmail.com (Vinh Nguyen)
Date: Mon, 21 Sep 2015 10:49:57 -0700
Subject: [Rd] segfault with readDCF on R 3.1.2 on AIX 6.1 when using
	install.packages
In-Reply-To: <CA+2DmwigXqx_ymW85qzgL7JvyM6tHyzyqSNjWcazow+JROZZ+g@mail.gmail.com>
References: <CA+2Dmwgowjk9+qKcVQOPXRaGpER5wu+UtqZ=pJrJmaNS1DDpdw@mail.gmail.com>
	<CA+2DmwigXqx_ymW85qzgL7JvyM6tHyzyqSNjWcazow+JROZZ+g@mail.gmail.com>
Message-ID: <CA+2DmwgZ6XKW9Py7bEx9EC-gQtjmR9yJr-JMHW731gxJKarTfg@mail.gmail.com>

Here's an update:

I checked the ChangeLog for R, and it seems like readDCF was changed
in 3.0.2.  I went on a whim and copied src/main/dcf.c from R 2.15.3
over to 3.2.2, and R compiled fine and install.packages now work for
me.

This is probably not ideal, but it at least makes R usable on AIX for
me.  Would definitely like to help figure out what's wrong with the
new dcf.c on AIX.

Thanks.

-- Vinh


On Mon, Sep 21, 2015 at 10:01 AM, Vinh Nguyen <vinhdizzo at gmail.com> wrote:
> Hi there,
>
> I just wanted to follow up on this readDCF issue with install.packages
> on AIX on R 3.*.  I'm happy to help try potential solutions or debug
> if anyone could point me in the right direction.
>
> To re-cap, it appears readDCF is segfault'ing since R 3.* on AIX.
> This was not the case up until R 2.15.3.  This makes install.packages
> not usable.  Thanks.
>
> -- Vinh
>
>
> On Tue, Nov 11, 2014 at 10:23 AM, Vinh Nguyen <vinhdizzo at gmail.com> wrote:
>> Dear list (re-posting from r-help as r-devel is probably more appropriate),
>>
>> I was able to successfully compile R on our AIX box at work using the
>> GNU compilers following the instructions on the R Administration
>> guide.  The output can be seen at here
>> (https://gist.github.com/nguyenvinh/504321ea9c89d8919bef) and yields
>> no errors .
>>
>> However, I get a segfault whenever I try to use the install.packages
>> function to install packages.  Using debug, I was able to trace it to
>> the readDCF function:
>>
>> Browse[2]>
>> debug: if (!all) return(.Internal(readDCF(file, fields, keep.white)))
>> Browse[2]>
>> debug: return(.Internal(readDCF(file, fields, keep.white)))
>> Browse[2]>
>>
>>  *** caught segfault ***
>> address 4, cause 'invalid permissions'
>>
>> Possible actions:
>> 1: abort (with core dump, if enabled)
>> 2: normal R exit
>> 3: exit R without saving workspace
>> 4: exit R saving workspace
>> Selection:
>>
>> Was curious if anyone has a clue on why such error exists or what I
>> could do to fix it?  I'm able to install packages via R CMD INSTALL,
>> but I would hate to have to manually determine dependencies, download
>> the source for each package, and install them "by hand" via R CMD
>> INSTALL.
>>
>> I went back and compiled older versions of R to see if this error
>> exists.  On R 3.0.3, I get:
>>
>> debug(available.packages)
>> install.packages('ggplot2', dep=TRUE, repo='http://cran.stat.ucla.edu')
>> ...
>> Browse[2]>
>> debug: z <- res0 <- tryCatch(read.dcf(file = tmpf), error = identity)
>> Browse[2]>
>> Error: segfault from C stack overflow
>>
>> On R 2.15.3, I do not see the error.
>>
>> Would be great to get this resolved.  Thank you for your help.
>>
>> -- Vinh


From murdoch.duncan at gmail.com  Mon Sep 21 20:01:23 2015
From: murdoch.duncan at gmail.com (Duncan Murdoch)
Date: Mon, 21 Sep 2015 14:01:23 -0400
Subject: [Rd] segfault with readDCF on R 3.1.2 on AIX 6.1 when using
 install.packages
In-Reply-To: <CA+2DmwgZ6XKW9Py7bEx9EC-gQtjmR9yJr-JMHW731gxJKarTfg@mail.gmail.com>
References: <CA+2Dmwgowjk9+qKcVQOPXRaGpER5wu+UtqZ=pJrJmaNS1DDpdw@mail.gmail.com>
	<CA+2DmwigXqx_ymW85qzgL7JvyM6tHyzyqSNjWcazow+JROZZ+g@mail.gmail.com>
	<CA+2DmwgZ6XKW9Py7bEx9EC-gQtjmR9yJr-JMHW731gxJKarTfg@mail.gmail.com>
Message-ID: <560045F3.1060503@gmail.com>

On 21/09/2015 1:49 PM, Vinh Nguyen wrote:
> Here's an update:
> 
> I checked the ChangeLog for R, and it seems like readDCF was changed
> in 3.0.2.  I went on a whim and copied src/main/dcf.c from R 2.15.3
> over to 3.2.2, and R compiled fine and install.packages now work for
> me.
> 
> This is probably not ideal, but it at least makes R usable on AIX for
> me.  Would definitely like to help figure out what's wrong with the
> new dcf.c on AIX.

I don't know if anyone on the core team has access to AIX, so you're
likely on your own for this.

I'd suggest running R in a debugger (gdb or whatever you have), and
identifying exactly which line in dcf.c fails, and why.  If you tell us
that, we might be able to spot what is going wrong.

Duncan Murdoch

> 
> Thanks.
> 
> -- Vinh
> 
> 
> On Mon, Sep 21, 2015 at 10:01 AM, Vinh Nguyen <vinhdizzo at gmail.com> wrote:
>> Hi there,
>>
>> I just wanted to follow up on this readDCF issue with install.packages
>> on AIX on R 3.*.  I'm happy to help try potential solutions or debug
>> if anyone could point me in the right direction.
>>
>> To re-cap, it appears readDCF is segfault'ing since R 3.* on AIX.
>> This was not the case up until R 2.15.3.  This makes install.packages
>> not usable.  Thanks.
>>
>> -- Vinh
>>
>>
>> On Tue, Nov 11, 2014 at 10:23 AM, Vinh Nguyen <vinhdizzo at gmail.com> wrote:
>>> Dear list (re-posting from r-help as r-devel is probably more appropriate),
>>>
>>> I was able to successfully compile R on our AIX box at work using the
>>> GNU compilers following the instructions on the R Administration
>>> guide.  The output can be seen at here
>>> (https://gist.github.com/nguyenvinh/504321ea9c89d8919bef) and yields
>>> no errors .
>>>
>>> However, I get a segfault whenever I try to use the install.packages
>>> function to install packages.  Using debug, I was able to trace it to
>>> the readDCF function:
>>>
>>> Browse[2]>
>>> debug: if (!all) return(.Internal(readDCF(file, fields, keep.white)))
>>> Browse[2]>
>>> debug: return(.Internal(readDCF(file, fields, keep.white)))
>>> Browse[2]>
>>>
>>>  *** caught segfault ***
>>> address 4, cause 'invalid permissions'
>>>
>>> Possible actions:
>>> 1: abort (with core dump, if enabled)
>>> 2: normal R exit
>>> 3: exit R without saving workspace
>>> 4: exit R saving workspace
>>> Selection:
>>>
>>> Was curious if anyone has a clue on why such error exists or what I
>>> could do to fix it?  I'm able to install packages via R CMD INSTALL,
>>> but I would hate to have to manually determine dependencies, download
>>> the source for each package, and install them "by hand" via R CMD
>>> INSTALL.
>>>
>>> I went back and compiled older versions of R to see if this error
>>> exists.  On R 3.0.3, I get:
>>>
>>> debug(available.packages)
>>> install.packages('ggplot2', dep=TRUE, repo='http://cran.stat.ucla.edu')
>>> ...
>>> Browse[2]>
>>> debug: z <- res0 <- tryCatch(read.dcf(file = tmpf), error = identity)
>>> Browse[2]>
>>> Error: segfault from C stack overflow
>>>
>>> On R 2.15.3, I do not see the error.
>>>
>>> Would be great to get this resolved.  Thank you for your help.
>>>
>>> -- Vinh
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>


From simon.urbanek at r-project.org  Mon Sep 21 20:20:34 2015
From: simon.urbanek at r-project.org (Simon Urbanek)
Date: Mon, 21 Sep 2015 14:20:34 -0400
Subject: [Rd] Long vectors: Missing values and R_xlen_t?
In-Reply-To: <CAFDcVCSaXrXVLNq1jSaxhs4yJhHsqSSNEGnihebUY_wjBs=Vcw@mail.gmail.com>
References: <CAFDcVCSaXrXVLNq1jSaxhs4yJhHsqSSNEGnihebUY_wjBs=Vcw@mail.gmail.com>
Message-ID: <66923C02-7DFA-4E8C-8AA4-53019B7EDF34@r-project.org>


On Sep 20, 2015, at 3:06 PM, Henrik Bengtsson <henrik.bengtsson at ucsf.edu> wrote:

> Is there a missing value constant defined for R_xlen_t, cf. NA_INTEGER
> (== R_NaInt == INT_MIN) for int(eger)?  If not, is it correct to
> assume that missing values should be taken care/tested for before
> coercing from int or double?
> 

R_xlen_t is type of the vector length (see XLENGTH()) and as such never holds a missing value (since there is no such thing as a missing length). It is *not* a native type for R vectors and therefore there is no official representation of NAs in R_xlen_t.

Although native R vectors can be used as indices, the way it typically works is that the code first checks for NAs in the R vector and only then converts to R_xlen_t, so the NA value is never stored in R_xlen_t even for indexing.

--- cut here, content below is less relevant ---

That said, when converting packages from "legacy" .Call code before long vector support which used asInteger() to convert an index I tend to use this utility for convenience:

static R_INLINE R_xlen_t asLength(SEXP x, R_xlen_t NA) {
    double d;
    if (TYPEOF(x) == INTSXP && LENGTH(x) > 0) {
        int res = INTEGER(x)[0];
        return (res == NA_INTEGER) ? NA : ((R_xlen_t) res);
    }
    d = asReal(x);
    return (R_finite(d)) ? ((R_xlen_t) d) : NA;
}

Note that this explicitly allows the caller to specify NA representation since it depends on the use - often it's simply 0, other times -1 will do since typically anything negative is equally bad. As noted above, this is not what R itself does, so it's more of a convenience to simplify conversion of legacy code.

Cheers,
Simon


From henrik.bengtsson at ucsf.edu  Mon Sep 21 21:41:06 2015
From: henrik.bengtsson at ucsf.edu (Henrik Bengtsson)
Date: Mon, 21 Sep 2015 12:41:06 -0700
Subject: [Rd] Long vectors: Missing values and R_xlen_t?
In-Reply-To: <66923C02-7DFA-4E8C-8AA4-53019B7EDF34@r-project.org>
References: <CAFDcVCSaXrXVLNq1jSaxhs4yJhHsqSSNEGnihebUY_wjBs=Vcw@mail.gmail.com>
	<66923C02-7DFA-4E8C-8AA4-53019B7EDF34@r-project.org>
Message-ID: <CAFDcVCSVVCGPXX=YdJyTkAtGiLX4e03H5aQKxsK0YA-DE7nS9Q@mail.gmail.com>

On Mon, Sep 21, 2015 at 11:20 AM, Simon Urbanek
<simon.urbanek at r-project.org> wrote:
>
> On Sep 20, 2015, at 3:06 PM, Henrik Bengtsson <henrik.bengtsson at ucsf.edu> wrote:
>
>> Is there a missing value constant defined for R_xlen_t, cf. NA_INTEGER
>> (== R_NaInt == INT_MIN) for int(eger)?  If not, is it correct to
>> assume that missing values should be taken care/tested for before
>> coercing from int or double?
>>
>
> R_xlen_t is type of the vector length (see XLENGTH()) and as such never holds a missing value (since there is no such thing as a missing length). It is *not* a native type for R vectors and therefore there is no official representation of NAs in R_xlen_t.
>
> Although native R vectors can be used as indices, the way it typically works is that the code first checks for NAs in the R vector and only then converts to R_xlen_t, so the NA value is never stored in R_xlen_t even for indexing.
>
> --- cut here, content below is less relevant ---
>
> That said, when converting packages from "legacy" .Call code before long vector support which used asInteger() to convert an index I tend to use this utility for convenience:
>
> static R_INLINE R_xlen_t asLength(SEXP x, R_xlen_t NA) {
>     double d;
>     if (TYPEOF(x) == INTSXP && LENGTH(x) > 0) {
>         int res = INTEGER(x)[0];
>         return (res == NA_INTEGER) ? NA : ((R_xlen_t) res);
>     }
>     d = asReal(x);
>     return (R_finite(d)) ? ((R_xlen_t) d) : NA;
> }
>
> Note that this explicitly allows the caller to specify NA representation since it depends on the use - often it's simply 0, other times -1 will do since typically anything negative is equally bad. As noted above, this is not what R itself does, so it's more of a convenience to simplify conversion of legacy code.

Thank you Simon,

all this helped clarify it for me.  It's in line with what I
suspected, but it is really useful to hear it from the "officials".

Cheers,

Henrik

>
> Cheers,
> Simon
>


From hpages at fredhutch.org  Mon Sep 21 22:50:46 2015
From: hpages at fredhutch.org (=?UTF-8?B?SGVydsOpIFBhZ8Oocw==?=)
Date: Mon, 21 Sep 2015 13:50:46 -0700
Subject: [Rd] segfault with readDCF on R 3.1.2 on AIX 6.1 when using
 install.packages
In-Reply-To: <560045F3.1060503@gmail.com>
References: <CA+2Dmwgowjk9+qKcVQOPXRaGpER5wu+UtqZ=pJrJmaNS1DDpdw@mail.gmail.com>
	<CA+2DmwigXqx_ymW85qzgL7JvyM6tHyzyqSNjWcazow+JROZZ+g@mail.gmail.com>
	<CA+2DmwgZ6XKW9Py7bEx9EC-gQtjmR9yJr-JMHW731gxJKarTfg@mail.gmail.com>
	<560045F3.1060503@gmail.com>
Message-ID: <56006DA6.1010002@fredhutch.org>

Hi,

Note that one significant change to read.dcf() that happened since R
3.0.2 is the addition of support for arbitrary long lines (commit
63281), which never worked:

   dcf <- paste(c("aa: ", rep(letters, length.out=10000)), collapse="")
   writeLines(dcf, "test.dcf")
   nchar(read.dcf("test.dcf"))
   #        aa
   # [1,] 8186

The culprit being line 53 in src/main/dcf.c where the author of the
Rconn_getline2() function only copies 'nbuf' chars from 'buf' to 'buf2'
when in fact 'nbuf + 1' chars have been stored in 'buf' so far.

Quickest fix:

Index: src/main/dcf.c
===================================================================
--- src/main/dcf.c	(revision 69404)
+++ src/main/dcf.c	(working copy)
@@ -50,7 +50,7 @@
  	if(nbuf+2 >= bufsize) { // allow for terminator below
  	    bufsize *= 2;
  	    char *buf2 = R_alloc(bufsize, sizeof(char));
-	    memcpy(buf2, buf, nbuf);
+	    memcpy(buf2, buf, nbuf + 1);
  	    buf = buf2;
  	}
  	if(c != '\n'){

However a better fix would be to have 'nbuf' actually contain the nb
of chars that was stored in 'buf' so far (as it name suggests):

Index: src/main/dcf.c
===================================================================
--- src/main/dcf.c	(revision 69404)
+++ src/main/dcf.c	(working copy)
@@ -42,12 +42,12 @@
  /* Use R_alloc as this might get interrupted */
  static char *Rconn_getline2(Rconnection con)
  {
-    int c, bufsize = MAXELTSIZE, nbuf = -1;
+    int c, bufsize = MAXELTSIZE, nbuf = 0;
      char *buf;

      buf = R_alloc(bufsize, sizeof(char));
      while((c = Rconn_fgetc(con)) != R_EOF) {
-	if(nbuf+2 >= bufsize) { // allow for terminator below
+	if(nbuf+1 >= bufsize) { // allow for terminator below
  	    bufsize *= 2;
  	    char *buf2 = R_alloc(bufsize, sizeof(char));
  	    memcpy(buf2, buf, nbuf);
@@ -54,17 +54,19 @@
  	    buf = buf2;
  	}
  	if(c != '\n'){
-	    buf[++nbuf] = (char) c;
+	    buf[nbuf++] = (char) c;
  	} else {
-	    buf[++nbuf] = '\0';
+	    buf[nbuf++] = '\0';
  	    break;
  	}
      }
+    if (nbuf == 0)
+        return NULL;
      /* Make sure it is null-terminated even if file did not end with
       *  newline.
       */
-    if(nbuf >= 0 && buf[nbuf]) buf[++nbuf] = '\0';
-    return (nbuf == -1) ? NULL: buf;
+    buf[nbuf-1] = '\0';
+    return buf;
  }

That improves readability and reduces the risk of bugs.

Also note that Rconn_getline2() allocates a new buffer for each line in
the DCF file. So we got support for arbitrary long lines (a rare
situation) at the price of a slow down and increased memory usage for
all DCF files. Sounds less than optimal :-/

Cheers,
H.


On 09/21/2015 11:01 AM, Duncan Murdoch wrote:
> On 21/09/2015 1:49 PM, Vinh Nguyen wrote:
>> Here's an update:
>>
>> I checked the ChangeLog for R, and it seems like readDCF was changed
>> in 3.0.2.  I went on a whim and copied src/main/dcf.c from R 2.15.3
>> over to 3.2.2, and R compiled fine and install.packages now work for
>> me.
>>
>> This is probably not ideal, but it at least makes R usable on AIX for
>> me.  Would definitely like to help figure out what's wrong with the
>> new dcf.c on AIX.
>
> I don't know if anyone on the core team has access to AIX, so you're
> likely on your own for this.
>
> I'd suggest running R in a debugger (gdb or whatever you have), and
> identifying exactly which line in dcf.c fails, and why.  If you tell us
> that, we might be able to spot what is going wrong.
>
> Duncan Murdoch
>
>>
>> Thanks.
>>
>> -- Vinh
>>
>>
>> On Mon, Sep 21, 2015 at 10:01 AM, Vinh Nguyen <vinhdizzo at gmail.com> wrote:
>>> Hi there,
>>>
>>> I just wanted to follow up on this readDCF issue with install.packages
>>> on AIX on R 3.*.  I'm happy to help try potential solutions or debug
>>> if anyone could point me in the right direction.
>>>
>>> To re-cap, it appears readDCF is segfault'ing since R 3.* on AIX.
>>> This was not the case up until R 2.15.3.  This makes install.packages
>>> not usable.  Thanks.
>>>
>>> -- Vinh
>>>
>>>
>>> On Tue, Nov 11, 2014 at 10:23 AM, Vinh Nguyen <vinhdizzo at gmail.com> wrote:
>>>> Dear list (re-posting from r-help as r-devel is probably more appropriate),
>>>>
>>>> I was able to successfully compile R on our AIX box at work using the
>>>> GNU compilers following the instructions on the R Administration
>>>> guide.  The output can be seen at here
>>>> (https://gist.github.com/nguyenvinh/504321ea9c89d8919bef) and yields
>>>> no errors .
>>>>
>>>> However, I get a segfault whenever I try to use the install.packages
>>>> function to install packages.  Using debug, I was able to trace it to
>>>> the readDCF function:
>>>>
>>>> Browse[2]>
>>>> debug: if (!all) return(.Internal(readDCF(file, fields, keep.white)))
>>>> Browse[2]>
>>>> debug: return(.Internal(readDCF(file, fields, keep.white)))
>>>> Browse[2]>
>>>>
>>>>   *** caught segfault ***
>>>> address 4, cause 'invalid permissions'
>>>>
>>>> Possible actions:
>>>> 1: abort (with core dump, if enabled)
>>>> 2: normal R exit
>>>> 3: exit R without saving workspace
>>>> 4: exit R saving workspace
>>>> Selection:
>>>>
>>>> Was curious if anyone has a clue on why such error exists or what I
>>>> could do to fix it?  I'm able to install packages via R CMD INSTALL,
>>>> but I would hate to have to manually determine dependencies, download
>>>> the source for each package, and install them "by hand" via R CMD
>>>> INSTALL.
>>>>
>>>> I went back and compiled older versions of R to see if this error
>>>> exists.  On R 3.0.3, I get:
>>>>
>>>> debug(available.packages)
>>>> install.packages('ggplot2', dep=TRUE, repo='http://cran.stat.ucla.edu')
>>>> ...
>>>> Browse[2]>
>>>> debug: z <- res0 <- tryCatch(read.dcf(file = tmpf), error = identity)
>>>> Browse[2]>
>>>> Error: segfault from C stack overflow
>>>>
>>>> On R 2.15.3, I do not see the error.
>>>>
>>>> Would be great to get this resolved.  Thank you for your help.
>>>>
>>>> -- Vinh
>>
>> ______________________________________________
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>

-- 
Herv? Pag?s

Program in Computational Biology
Division of Public Health Sciences
Fred Hutchinson Cancer Research Center
1100 Fairview Ave. N, M1-B514
P.O. Box 19024
Seattle, WA 98109-1024

E-mail: hpages at fredhutch.org
Phone:  (206) 667-5791
Fax:    (206) 667-1319


From hpages at fredhutch.org  Mon Sep 21 23:36:36 2015
From: hpages at fredhutch.org (=?UTF-8?B?SGVydsOpIFBhZ8Oocw==?=)
Date: Mon, 21 Sep 2015 14:36:36 -0700
Subject: [Rd] segfault with readDCF on R 3.1.2 on AIX 6.1 when using
 install.packages
In-Reply-To: <56006DA6.1010002@fredhutch.org>
References: <CA+2Dmwgowjk9+qKcVQOPXRaGpER5wu+UtqZ=pJrJmaNS1DDpdw@mail.gmail.com>
	<CA+2DmwigXqx_ymW85qzgL7JvyM6tHyzyqSNjWcazow+JROZZ+g@mail.gmail.com>
	<CA+2DmwgZ6XKW9Py7bEx9EC-gQtjmR9yJr-JMHW731gxJKarTfg@mail.gmail.com>
	<560045F3.1060503@gmail.com> <56006DA6.1010002@fredhutch.org>
Message-ID: <56007864.3090206@fredhutch.org>

On 09/21/2015 01:50 PM, Herv? Pag?s wrote:
> Hi,
>
> Note that one significant change to read.dcf() that happened since R
> 3.0.2 is the addition of support for arbitrary long lines (commit
> 63281), which never worked:
>
>    dcf <- paste(c("aa: ", rep(letters, length.out=10000)), collapse="")
>    writeLines(dcf, "test.dcf")
>    nchar(read.dcf("test.dcf"))
>    #        aa
>    # [1,] 8186
>
> The culprit being line 53 in src/main/dcf.c where the author of the
> Rconn_getline2() function only copies 'nbuf' chars from 'buf' to 'buf2'
> when in fact 'nbuf + 1' chars have been stored in 'buf' so far.
>
> Quickest fix:
>
> Index: src/main/dcf.c
> ===================================================================
> --- src/main/dcf.c    (revision 69404)
> +++ src/main/dcf.c    (working copy)
> @@ -50,7 +50,7 @@
>       if(nbuf+2 >= bufsize) { // allow for terminator below
>           bufsize *= 2;
>           char *buf2 = R_alloc(bufsize, sizeof(char));
> -        memcpy(buf2, buf, nbuf);
> +        memcpy(buf2, buf, nbuf + 1);
>           buf = buf2;
>       }
>       if(c != '\n'){
>
> However a better fix would be to have 'nbuf' actually contain the nb
> of chars that was stored in 'buf' so far (as it name suggests):
>
> Index: src/main/dcf.c
> ===================================================================
> --- src/main/dcf.c    (revision 69404)
> +++ src/main/dcf.c    (working copy)
> @@ -42,12 +42,12 @@
>   /* Use R_alloc as this might get interrupted */
>   static char *Rconn_getline2(Rconnection con)
>   {
> -    int c, bufsize = MAXELTSIZE, nbuf = -1;
> +    int c, bufsize = MAXELTSIZE, nbuf = 0;
>       char *buf;
>
>       buf = R_alloc(bufsize, sizeof(char));
>       while((c = Rconn_fgetc(con)) != R_EOF) {
> -    if(nbuf+2 >= bufsize) { // allow for terminator below
> +    if(nbuf+1 >= bufsize) { // allow for terminator below
>           bufsize *= 2;
>           char *buf2 = R_alloc(bufsize, sizeof(char));
>           memcpy(buf2, buf, nbuf);
> @@ -54,17 +54,19 @@
>           buf = buf2;
>       }
>       if(c != '\n'){
> -        buf[++nbuf] = (char) c;
> +        buf[nbuf++] = (char) c;
>       } else {
> -        buf[++nbuf] = '\0';
> +        buf[nbuf++] = '\0';
>           break;
>       }
>       }
> +    if (nbuf == 0)
> +        return NULL;
>       /* Make sure it is null-terminated even if file did not end with
>        *  newline.
>        */
> -    if(nbuf >= 0 && buf[nbuf]) buf[++nbuf] = '\0';
> -    return (nbuf == -1) ? NULL: buf;
> +    buf[nbuf-1] = '\0';
            ^^^^^^
oops... need to be:

        buf[nbuf] = '\0';

Cheers,
H.

> +    return buf;
>   }
>
> That improves readability and reduces the risk of bugs.
>
> Also note that Rconn_getline2() allocates a new buffer for each line in
> the DCF file. So we got support for arbitrary long lines (a rare
> situation) at the price of a slow down and increased memory usage for
> all DCF files. Sounds less than optimal :-/
>
> Cheers,
> H.
>
>
> On 09/21/2015 11:01 AM, Duncan Murdoch wrote:
>> On 21/09/2015 1:49 PM, Vinh Nguyen wrote:
>>> Here's an update:
>>>
>>> I checked the ChangeLog for R, and it seems like readDCF was changed
>>> in 3.0.2.  I went on a whim and copied src/main/dcf.c from R 2.15.3
>>> over to 3.2.2, and R compiled fine and install.packages now work for
>>> me.
>>>
>>> This is probably not ideal, but it at least makes R usable on AIX for
>>> me.  Would definitely like to help figure out what's wrong with the
>>> new dcf.c on AIX.
>>
>> I don't know if anyone on the core team has access to AIX, so you're
>> likely on your own for this.
>>
>> I'd suggest running R in a debugger (gdb or whatever you have), and
>> identifying exactly which line in dcf.c fails, and why.  If you tell us
>> that, we might be able to spot what is going wrong.
>>
>> Duncan Murdoch
>>
>>>
>>> Thanks.
>>>
>>> -- Vinh
>>>
>>>
>>> On Mon, Sep 21, 2015 at 10:01 AM, Vinh Nguyen <vinhdizzo at gmail.com>
>>> wrote:
>>>> Hi there,
>>>>
>>>> I just wanted to follow up on this readDCF issue with install.packages
>>>> on AIX on R 3.*.  I'm happy to help try potential solutions or debug
>>>> if anyone could point me in the right direction.
>>>>
>>>> To re-cap, it appears readDCF is segfault'ing since R 3.* on AIX.
>>>> This was not the case up until R 2.15.3.  This makes install.packages
>>>> not usable.  Thanks.
>>>>
>>>> -- Vinh
>>>>
>>>>
>>>> On Tue, Nov 11, 2014 at 10:23 AM, Vinh Nguyen <vinhdizzo at gmail.com>
>>>> wrote:
>>>>> Dear list (re-posting from r-help as r-devel is probably more
>>>>> appropriate),
>>>>>
>>>>> I was able to successfully compile R on our AIX box at work using the
>>>>> GNU compilers following the instructions on the R Administration
>>>>> guide.  The output can be seen at here
>>>>> (https://gist.github.com/nguyenvinh/504321ea9c89d8919bef) and yields
>>>>> no errors .
>>>>>
>>>>> However, I get a segfault whenever I try to use the install.packages
>>>>> function to install packages.  Using debug, I was able to trace it to
>>>>> the readDCF function:
>>>>>
>>>>> Browse[2]>
>>>>> debug: if (!all) return(.Internal(readDCF(file, fields, keep.white)))
>>>>> Browse[2]>
>>>>> debug: return(.Internal(readDCF(file, fields, keep.white)))
>>>>> Browse[2]>
>>>>>
>>>>>   *** caught segfault ***
>>>>> address 4, cause 'invalid permissions'
>>>>>
>>>>> Possible actions:
>>>>> 1: abort (with core dump, if enabled)
>>>>> 2: normal R exit
>>>>> 3: exit R without saving workspace
>>>>> 4: exit R saving workspace
>>>>> Selection:
>>>>>
>>>>> Was curious if anyone has a clue on why such error exists or what I
>>>>> could do to fix it?  I'm able to install packages via R CMD INSTALL,
>>>>> but I would hate to have to manually determine dependencies, download
>>>>> the source for each package, and install them "by hand" via R CMD
>>>>> INSTALL.
>>>>>
>>>>> I went back and compiled older versions of R to see if this error
>>>>> exists.  On R 3.0.3, I get:
>>>>>
>>>>> debug(available.packages)
>>>>> install.packages('ggplot2', dep=TRUE,
>>>>> repo='http://cran.stat.ucla.edu')
>>>>> ...
>>>>> Browse[2]>
>>>>> debug: z <- res0 <- tryCatch(read.dcf(file = tmpf), error = identity)
>>>>> Browse[2]>
>>>>> Error: segfault from C stack overflow
>>>>>
>>>>> On R 2.15.3, I do not see the error.
>>>>>
>>>>> Would be great to get this resolved.  Thank you for your help.
>>>>>
>>>>> -- Vinh
>>>
>>> ______________________________________________
>>> R-devel at r-project.org mailing list
>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>>
>>
>> ______________________________________________
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>
>

-- 
Herv? Pag?s

Program in Computational Biology
Division of Public Health Sciences
Fred Hutchinson Cancer Research Center
1100 Fairview Ave. N, M1-B514
P.O. Box 19024
Seattle, WA 98109-1024

E-mail: hpages at fredhutch.org
Phone:  (206) 667-5791
Fax:    (206) 667-1319


From murdoch.duncan at gmail.com  Mon Sep 21 23:48:02 2015
From: murdoch.duncan at gmail.com (Duncan Murdoch)
Date: Mon, 21 Sep 2015 17:48:02 -0400
Subject: [Rd] segfault with readDCF on R 3.1.2 on AIX 6.1 when using
 install.packages
In-Reply-To: <56006DA6.1010002@fredhutch.org>
References: <CA+2Dmwgowjk9+qKcVQOPXRaGpER5wu+UtqZ=pJrJmaNS1DDpdw@mail.gmail.com>
	<CA+2DmwigXqx_ymW85qzgL7JvyM6tHyzyqSNjWcazow+JROZZ+g@mail.gmail.com>
	<CA+2DmwgZ6XKW9Py7bEx9EC-gQtjmR9yJr-JMHW731gxJKarTfg@mail.gmail.com>
	<560045F3.1060503@gmail.com> <56006DA6.1010002@fredhutch.org>
Message-ID: <56007B12.5090500@gmail.com>

On 21/09/2015 4:50 PM, Herv? Pag?s wrote:
> Hi,
> 
> Note that one significant change to read.dcf() that happened since R
> 3.0.2 is the addition of support for arbitrary long lines (commit
> 63281), which never worked:
> 
>    dcf <- paste(c("aa: ", rep(letters, length.out=10000)), collapse="")
>    writeLines(dcf, "test.dcf")
>    nchar(read.dcf("test.dcf"))
>    #        aa
>    # [1,] 8186
> 

I don't see that in R 3.2.2 on OSX or 3.2.2 patched on Windows:

>    nchar(read.dcf("test.dcf"))
        aa
[1,] 10000

Duncan Murdoch

> The culprit being line 53 in src/main/dcf.c where the author of the
> Rconn_getline2() function only copies 'nbuf' chars from 'buf' to 'buf2'
> when in fact 'nbuf + 1' chars have been stored in 'buf' so far.
> 
> Quickest fix:
> 
> Index: src/main/dcf.c
> ===================================================================
> --- src/main/dcf.c	(revision 69404)
> +++ src/main/dcf.c	(working copy)
> @@ -50,7 +50,7 @@
>   	if(nbuf+2 >= bufsize) { // allow for terminator below
>   	    bufsize *= 2;
>   	    char *buf2 = R_alloc(bufsize, sizeof(char));
> -	    memcpy(buf2, buf, nbuf);
> +	    memcpy(buf2, buf, nbuf + 1);
>   	    buf = buf2;
>   	}
>   	if(c != '\n'){
> 
> However a better fix would be to have 'nbuf' actually contain the nb
> of chars that was stored in 'buf' so far (as it name suggests):
> 
> Index: src/main/dcf.c
> ===================================================================
> --- src/main/dcf.c	(revision 69404)
> +++ src/main/dcf.c	(working copy)
> @@ -42,12 +42,12 @@
>   /* Use R_alloc as this might get interrupted */
>   static char *Rconn_getline2(Rconnection con)
>   {
> -    int c, bufsize = MAXELTSIZE, nbuf = -1;
> +    int c, bufsize = MAXELTSIZE, nbuf = 0;
>       char *buf;
> 
>       buf = R_alloc(bufsize, sizeof(char));
>       while((c = Rconn_fgetc(con)) != R_EOF) {
> -	if(nbuf+2 >= bufsize) { // allow for terminator below
> +	if(nbuf+1 >= bufsize) { // allow for terminator below
>   	    bufsize *= 2;
>   	    char *buf2 = R_alloc(bufsize, sizeof(char));
>   	    memcpy(buf2, buf, nbuf);
> @@ -54,17 +54,19 @@
>   	    buf = buf2;
>   	}
>   	if(c != '\n'){
> -	    buf[++nbuf] = (char) c;
> +	    buf[nbuf++] = (char) c;
>   	} else {
> -	    buf[++nbuf] = '\0';
> +	    buf[nbuf++] = '\0';
>   	    break;
>   	}
>       }
> +    if (nbuf == 0)
> +        return NULL;
>       /* Make sure it is null-terminated even if file did not end with
>        *  newline.
>        */
> -    if(nbuf >= 0 && buf[nbuf]) buf[++nbuf] = '\0';
> -    return (nbuf == -1) ? NULL: buf;
> +    buf[nbuf-1] = '\0';
> +    return buf;
>   }
> 
> That improves readability and reduces the risk of bugs.
> 
> Also note that Rconn_getline2() allocates a new buffer for each line in
> the DCF file. So we got support for arbitrary long lines (a rare
> situation) at the price of a slow down and increased memory usage for
> all DCF files. Sounds less than optimal :-/
> 
> Cheers,
> H.
> 
> 
> On 09/21/2015 11:01 AM, Duncan Murdoch wrote:
>> On 21/09/2015 1:49 PM, Vinh Nguyen wrote:
>>> Here's an update:
>>>
>>> I checked the ChangeLog for R, and it seems like readDCF was changed
>>> in 3.0.2.  I went on a whim and copied src/main/dcf.c from R 2.15.3
>>> over to 3.2.2, and R compiled fine and install.packages now work for
>>> me.
>>>
>>> This is probably not ideal, but it at least makes R usable on AIX for
>>> me.  Would definitely like to help figure out what's wrong with the
>>> new dcf.c on AIX.
>>
>> I don't know if anyone on the core team has access to AIX, so you're
>> likely on your own for this.
>>
>> I'd suggest running R in a debugger (gdb or whatever you have), and
>> identifying exactly which line in dcf.c fails, and why.  If you tell us
>> that, we might be able to spot what is going wrong.
>>
>> Duncan Murdoch
>>
>>>
>>> Thanks.
>>>
>>> -- Vinh
>>>
>>>
>>> On Mon, Sep 21, 2015 at 10:01 AM, Vinh Nguyen <vinhdizzo at gmail.com> wrote:
>>>> Hi there,
>>>>
>>>> I just wanted to follow up on this readDCF issue with install.packages
>>>> on AIX on R 3.*.  I'm happy to help try potential solutions or debug
>>>> if anyone could point me in the right direction.
>>>>
>>>> To re-cap, it appears readDCF is segfault'ing since R 3.* on AIX.
>>>> This was not the case up until R 2.15.3.  This makes install.packages
>>>> not usable.  Thanks.
>>>>
>>>> -- Vinh
>>>>
>>>>
>>>> On Tue, Nov 11, 2014 at 10:23 AM, Vinh Nguyen <vinhdizzo at gmail.com> wrote:
>>>>> Dear list (re-posting from r-help as r-devel is probably more appropriate),
>>>>>
>>>>> I was able to successfully compile R on our AIX box at work using the
>>>>> GNU compilers following the instructions on the R Administration
>>>>> guide.  The output can be seen at here
>>>>> (https://gist.github.com/nguyenvinh/504321ea9c89d8919bef) and yields
>>>>> no errors .
>>>>>
>>>>> However, I get a segfault whenever I try to use the install.packages
>>>>> function to install packages.  Using debug, I was able to trace it to
>>>>> the readDCF function:
>>>>>
>>>>> Browse[2]>
>>>>> debug: if (!all) return(.Internal(readDCF(file, fields, keep.white)))
>>>>> Browse[2]>
>>>>> debug: return(.Internal(readDCF(file, fields, keep.white)))
>>>>> Browse[2]>
>>>>>
>>>>>   *** caught segfault ***
>>>>> address 4, cause 'invalid permissions'
>>>>>
>>>>> Possible actions:
>>>>> 1: abort (with core dump, if enabled)
>>>>> 2: normal R exit
>>>>> 3: exit R without saving workspace
>>>>> 4: exit R saving workspace
>>>>> Selection:
>>>>>
>>>>> Was curious if anyone has a clue on why such error exists or what I
>>>>> could do to fix it?  I'm able to install packages via R CMD INSTALL,
>>>>> but I would hate to have to manually determine dependencies, download
>>>>> the source for each package, and install them "by hand" via R CMD
>>>>> INSTALL.
>>>>>
>>>>> I went back and compiled older versions of R to see if this error
>>>>> exists.  On R 3.0.3, I get:
>>>>>
>>>>> debug(available.packages)
>>>>> install.packages('ggplot2', dep=TRUE, repo='http://cran.stat.ucla.edu')
>>>>> ...
>>>>> Browse[2]>
>>>>> debug: z <- res0 <- tryCatch(read.dcf(file = tmpf), error = identity)
>>>>> Browse[2]>
>>>>> Error: segfault from C stack overflow
>>>>>
>>>>> On R 2.15.3, I do not see the error.
>>>>>
>>>>> Would be great to get this resolved.  Thank you for your help.
>>>>>
>>>>> -- Vinh
>>>
>>> ______________________________________________
>>> R-devel at r-project.org mailing list
>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>>
>>
>> ______________________________________________
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>
>


From hpages at fredhutch.org  Tue Sep 22 00:22:36 2015
From: hpages at fredhutch.org (=?UTF-8?B?SGVydsOpIFBhZ8Oocw==?=)
Date: Mon, 21 Sep 2015 15:22:36 -0700
Subject: [Rd] segfault with readDCF on R 3.1.2 on AIX 6.1 when using
 install.packages
In-Reply-To: <56007B12.5090500@gmail.com>
References: <CA+2Dmwgowjk9+qKcVQOPXRaGpER5wu+UtqZ=pJrJmaNS1DDpdw@mail.gmail.com>
	<CA+2DmwigXqx_ymW85qzgL7JvyM6tHyzyqSNjWcazow+JROZZ+g@mail.gmail.com>
	<CA+2DmwgZ6XKW9Py7bEx9EC-gQtjmR9yJr-JMHW731gxJKarTfg@mail.gmail.com>
	<560045F3.1060503@gmail.com> <56006DA6.1010002@fredhutch.org>
	<56007B12.5090500@gmail.com>
Message-ID: <5600832C.2080007@fredhutch.org>


On 09/21/2015 02:48 PM, Duncan Murdoch wrote:
> On 21/09/2015 4:50 PM, Herv? Pag?s wrote:
>> Hi,at
>>
>> Note that one significant change to read.dcf() that happened since R
>> 3.0.2 is the addition of support for arbitrary long lines (commit
>> 63281), which never worked:
>>
>>     dcf <- paste(c("aa: ", rep(letters, length.out=10000)), collapse="")
>>     writeLines(dcf, "test.dcf")
>>     nchar(read.dcf("test.dcf"))
>>     #        aa
>>     # [1,] 8186
>>
>
> I don't see that in R 3.2.2 on OSX or 3.2.2 patched on Windows:
>
>>     nchar(read.dcf("test.dcf"))
>          aa
> [1,] 10000

You're just being lucky that 'buf2[nbuf + 1]' is not '\0' after
allocation by R_alloc(). Try this:

   val <- paste(rep(letters, length.out=10000), collapse="")
   writeLines(paste("aa:", val), "test.dcf")
   identical(val, read.dcf("test.dcf")[1])

Maybe you won't be so lucky with this one.

H.

>
> Duncan Murdoch
>
>> The culprit being line 53 in src/main/dcf.c where the author of the
>> Rconn_getline2() function only copies 'nbuf' chars from 'buf' to 'buf2'
>> when in fact 'nbuf + 1' chars have been stored in 'buf' so far.
>>
>> Quickest fix:
>>
>> Index: src/main/dcf.c
>> ===================================================================
>> --- src/main/dcf.c	(revision 69404)
>> +++ src/main/dcf.c	(working copy)
>> @@ -50,7 +50,7 @@
>>    	if(nbuf+2 >= bufsize) { // allow for terminator below
>>    	    bufsize *= 2;
>>    	    char *buf2 = R_alloc(bufsize, sizeof(char));
>> -	    memcpy(buf2, buf, nbuf);
>> +	    memcpy(buf2, buf, nbuf + 1);
>>    	    buf = buf2;
>>    	}
>>    	if(c != '\n'){
>>
>> However a better fix would be to have 'nbuf' actually contain the nb
>> of chars that was stored in 'buf' so far (as it name suggests):
>>
>> Index: src/main/dcf.c
>> ===================================================================
>> --- src/main/dcf.c	(revision 69404)
>> +++ src/main/dcf.c	(working copy)
>> @@ -42,12 +42,12 @@
>>    /* Use R_alloc as this might get interrupted */
>>    static char *Rconn_getline2(Rconnection con)
>>    {
>> -    int c, bufsize = MAXELTSIZE, nbuf = -1;
>> +    int c, bufsize = MAXELTSIZE, nbuf = 0;
>>        char *buf;
>>
>>        buf = R_alloc(bufsize, sizeof(char));
>>        while((c = Rconn_fgetc(con)) != R_EOF) {
>> -	if(nbuf+2 >= bufsize) { // allow for terminator below
>> +	if(nbuf+1 >= bufsize) { // allow for terminator below
>>    	    bufsize *= 2;
>>    	    char *buf2 = R_alloc(bufsize, sizeof(char));
>>    	    memcpy(buf2, buf, nbuf);
>> @@ -54,17 +54,19 @@
>>    	    buf = buf2;
>>    	}
>>    	if(c != '\n'){
>> -	    buf[++nbuf] = (char) c;
>> +	    buf[nbuf++] = (char) c;
>>    	} else {
>> -	    buf[++nbuf] = '\0';
>> +	    buf[nbuf++] = '\0';
>>    	    break;
>>    	}
>>        }
>> +    if (nbuf == 0)
>> +        return NULL;
>>        /* Make sure it is null-terminated even if file did not end with
>>         *  newline.
>>         */
>> -    if(nbuf >= 0 && buf[nbuf]) buf[++nbuf] = '\0';
>> -    return (nbuf == -1) ? NULL: buf;
>> +    buf[nbuf-1] = '\0';
>> +    return buf;
>>    }
>>
>> That improves readability and reduces the risk of bugs.
>>
>> Also note that Rconn_getline2() allocates a new buffer for each line in
>> the DCF file. So we got support for arbitrary long lines (a rare
>> situation) at the price of a slow down and increased memory usage for
>> all DCF files. Sounds less than optimal :-/
>>
>> Cheers,
>> H.
>>
>>
>> On 09/21/2015 11:01 AM, Duncan Murdoch wrote:
>>> On 21/09/2015 1:49 PM, Vinh Nguyen wrote:
>>>> Here's an update:
>>>>
>>>> I checked the ChangeLog for R, and it seems like readDCF was changed
>>>> in 3.0.2.  I went on a whim and copied src/main/dcf.c from R 2.15.3
>>>> over to 3.2.2, and R compiled fine and install.packages now work for
>>>> me.
>>>>
>>>> This is probably not ideal, but it at least makes R usable on AIX for
>>>> me.  Would definitely like to help figure out what's wrong with the
>>>> new dcf.c on AIX.
>>>
>>> I don't know if anyone on the core team has access to AIX, so you're
>>> likely on your own for this.
>>>
>>> I'd suggest running R in a debugger (gdb or whatever you have), and
>>> identifying exactly which line in dcf.c fails, and why.  If you tell us
>>> that, we might be able to spot what is going wrong.
>>>
>>> Duncan Murdoch
>>>
>>>>
>>>> Thanks.
>>>>
>>>> -- Vinh
>>>>
>>>>
>>>> On Mon, Sep 21, 2015 at 10:01 AM, Vinh Nguyen <vinhdizzo at gmail.com> wrote:
>>>>> Hi there,
>>>>>
>>>>> I just wanted to follow up on this readDCF issue with install.packages
>>>>> on AIX on R 3.*.  I'm happy to help try potential solutions or debug
>>>>> if anyone could point me in the right direction.
>>>>>
>>>>> To re-cap, it appears readDCF is segfault'ing since R 3.* on AIX.
>>>>> This was not the case up until R 2.15.3.  This makes install.packages
>>>>> not usable.  Thanks.
>>>>>
>>>>> -- Vinh
>>>>>
>>>>>
>>>>> On Tue, Nov 11, 2014 at 10:23 AM, Vinh Nguyen <vinhdizzo at gmail.com> wrote:
>>>>>> Dear list (re-posting from r-help as r-devel is probably more appropriate),
>>>>>>
>>>>>> I was able to successfully compile R on our AIX box at work using the
>>>>>> GNU compilers following the instructions on the R Administration
>>>>>> guide.  The output can be seen at here
>>>>>> (https://gist.github.com/nguyenvinh/504321ea9c89d8919bef) and yields
>>>>>> no errors .
>>>>>>
>>>>>> However, I get a segfault whenever I try to use the install.packages
>>>>>> function to install packages.  Using debug, I was able to trace it to
>>>>>> the readDCF function:
>>>>>>
>>>>>> Browse[2]>
>>>>>> debug: if (!all) return(.Internal(readDCF(file, fields, keep.white)))
>>>>>> Browse[2]>
>>>>>> debug: return(.Internal(readDCF(file, fields, keep.white)))
>>>>>> Browse[2]>
>>>>>>
>>>>>>    *** caught segfault ***
>>>>>> address 4, cause 'invalid permissions'
>>>>>>
>>>>>> Possible actions:
>>>>>> 1: abort (with core dump, if enabled)
>>>>>> 2: normal R exit
>>>>>> 3: exit R without saving workspace
>>>>>> 4: exit R saving workspace
>>>>>> Selection:
>>>>>>
>>>>>> Was curious if anyone has a clue on why such error exists or what I
>>>>>> could do to fix it?  I'm able to install packages via R CMD INSTALL,
>>>>>> but I would hate to have to manually determine dependencies, download
>>>>>> the source for each package, and install them "by hand" via R CMD
>>>>>> INSTALL.
>>>>>>
>>>>>> I went back and compiled older versions of R to see if this error
>>>>>> exists.  On R 3.0.3, I get:
>>>>>>
>>>>>> debug(available.packages)
>>>>>> install.packages('ggplot2', dep=TRUE, repo='http://cran.stat.ucla.edu')
>>>>>> ...
>>>>>> Browse[2]>
>>>>>> debug: z <- res0 <- tryCatch(read.dcf(file = tmpf), error = identity)
>>>>>> Browse[2]>
>>>>>> Error: segfault from C stack overflow
>>>>>>
>>>>>> On R 2.15.3, I do not see the error.
>>>>>>
>>>>>> Would be great to get this resolved.  Thank you for your help.
>>>>>>
>>>>>> -- Vinh
>>>>
>>>> ______________________________________________
>>>> R-devel at r-project.org mailing list
>>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>>>
>>>
>>> ______________________________________________
>>> R-devel at r-project.org mailing list
>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>>
>>
>

-- 
Herv? Pag?s

Program in Computational Biology
Division of Public Health Sciences
Fred Hutchinson Cancer Research Center
1100 Fairview Ave. N, M1-B514
P.O. Box 19024
Seattle, WA 98109-1024

E-mail: hpages at fredhutch.org
Phone:  (206) 667-5791
Fax:    (206) 667-1319


From vinhdizzo at gmail.com  Tue Sep 22 04:20:46 2015
From: vinhdizzo at gmail.com (Vinh Nguyen)
Date: Mon, 21 Sep 2015 19:20:46 -0700
Subject: [Rd] segfault with readDCF on R 3.1.2 on AIX 6.1 when using
	install.packages
In-Reply-To: <56007B12.5090500@gmail.com>
References: <CA+2Dmwgowjk9+qKcVQOPXRaGpER5wu+UtqZ=pJrJmaNS1DDpdw@mail.gmail.com>
	<CA+2DmwigXqx_ymW85qzgL7JvyM6tHyzyqSNjWcazow+JROZZ+g@mail.gmail.com>
	<CA+2DmwgZ6XKW9Py7bEx9EC-gQtjmR9yJr-JMHW731gxJKarTfg@mail.gmail.com>
	<560045F3.1060503@gmail.com> <56006DA6.1010002@fredhutch.org>
	<56007B12.5090500@gmail.com>
Message-ID: <CA+2DmwhXih3Nv9g7ZA5Kh9WudfAat02TCxbb4mOQbeK8WvVqVg@mail.gmail.com>

On Mon, Sep 21, 2015 at 2:48 PM, Duncan Murdoch
<murdoch.duncan at gmail.com> wrote:
> On 21/09/2015 4:50 PM, Herv? Pag?s wrote:
>> Hi,
>>
>> Note that one significant change to read.dcf() that happened since R
>> 3.0.2 is the addition of support for arbitrary long lines (commit
>> 63281), which never worked:
>>
>>    dcf <- paste(c("aa: ", rep(letters, length.out=10000)), collapse="")
>>    writeLines(dcf, "test.dcf")
>>    nchar(read.dcf("test.dcf"))
>>    #        aa
>>    # [1,] 8186
>>
>
> I don't see that in R 3.2.2 on OSX or 3.2.2 patched on Windows:
>
>>    nchar(read.dcf("test.dcf"))
>         aa
> [1,] 10000

I'm at home now and getting the following from Revolution R Open 3.2.2 on a Mac:

> dcf <- paste(c("aa: ", rep(letters, length.out=10000)), collapse="")
> writeLines(dcf, "test.dcf")
> nchar(read.dcf("test.dcf"))
       aa
[1,] 8186

Here's what I see in the file:

$ wc -c test.dcf

   10005 test.dcf

Same results using Revolution R Open on Windows.  Also same results on
regular R 3.2.0 on Windows.

-- Vinh


From murdoch.duncan at gmail.com  Tue Sep 22 10:46:31 2015
From: murdoch.duncan at gmail.com (Duncan Murdoch)
Date: Tue, 22 Sep 2015 04:46:31 -0400
Subject: [Rd] segfault with readDCF on R 3.1.2 on AIX 6.1 when using
 install.packages
In-Reply-To: <CA+2DmwhXih3Nv9g7ZA5Kh9WudfAat02TCxbb4mOQbeK8WvVqVg@mail.gmail.com>
References: <CA+2Dmwgowjk9+qKcVQOPXRaGpER5wu+UtqZ=pJrJmaNS1DDpdw@mail.gmail.com>
	<CA+2DmwigXqx_ymW85qzgL7JvyM6tHyzyqSNjWcazow+JROZZ+g@mail.gmail.com>
	<CA+2DmwgZ6XKW9Py7bEx9EC-gQtjmR9yJr-JMHW731gxJKarTfg@mail.gmail.com>
	<560045F3.1060503@gmail.com> <56006DA6.1010002@fredhutch.org>
	<56007B12.5090500@gmail.com>
	<CA+2DmwhXih3Nv9g7ZA5Kh9WudfAat02TCxbb4mOQbeK8WvVqVg@mail.gmail.com>
Message-ID: <56011567.60607@gmail.com>

On 21/09/2015 10:20 PM, Vinh Nguyen wrote:
> On Mon, Sep 21, 2015 at 2:48 PM, Duncan Murdoch
> <murdoch.duncan at gmail.com> wrote:
>> On 21/09/2015 4:50 PM, Herv? Pag?s wrote:
>>> Hi,
>>>
>>> Note that one significant change to read.dcf() that happened since R
>>> 3.0.2 is the addition of support for arbitrary long lines (commit
>>> 63281), which never worked:
>>>
>>>    dcf <- paste(c("aa: ", rep(letters, length.out=10000)), collapse="")
>>>    writeLines(dcf, "test.dcf")
>>>    nchar(read.dcf("test.dcf"))
>>>    #        aa
>>>    # [1,] 8186
>>>
>>
>> I don't see that in R 3.2.2 on OSX or 3.2.2 patched on Windows:
>>
>>>    nchar(read.dcf("test.dcf"))
>>         aa
>> [1,] 10000
> 
> I'm at home now and getting the following from Revolution R Open 3.2.2 on a Mac:

You should post bug reports about that build to Revolution.  We have no
idea what changes it includes, and (being part of Microsoft) they have
tens of thousands more employees to deal with their bugs than we (being
all volunteers) do.

However, Herve's second example does illustrate a bug I can reproduce:
one character out of 10000 was read incorrectly.  Could you please try
his final patch and see if it fixes your AIX problems?

> 
>> dcf <- paste(c("aa: ", rep(letters, length.out=10000)), collapse="")
>> writeLines(dcf, "test.dcf")
>> nchar(read.dcf("test.dcf"))
>        aa
> [1,] 8186
> 
> Here's what I see in the file:
> 
> $ wc -c test.dcf
> 
>    10005 test.dcf
> 
> Same results using Revolution R Open on Windows.  Also same results on
> regular R 3.2.0 on Windows.

Version 3.2.0 is not current.

Duncan Murdoch

> 
> -- Vinh
>


From murdoch.duncan at gmail.com  Tue Sep 22 13:00:59 2015
From: murdoch.duncan at gmail.com (Duncan Murdoch)
Date: Tue, 22 Sep 2015 07:00:59 -0400
Subject: [Rd] segfault with readDCF on R 3.1.2 on AIX 6.1 when using
 install.packages
In-Reply-To: <56006DA6.1010002@fredhutch.org>
References: <CA+2Dmwgowjk9+qKcVQOPXRaGpER5wu+UtqZ=pJrJmaNS1DDpdw@mail.gmail.com>
	<CA+2DmwigXqx_ymW85qzgL7JvyM6tHyzyqSNjWcazow+JROZZ+g@mail.gmail.com>
	<CA+2DmwgZ6XKW9Py7bEx9EC-gQtjmR9yJr-JMHW731gxJKarTfg@mail.gmail.com>
	<560045F3.1060503@gmail.com> <56006DA6.1010002@fredhutch.org>
Message-ID: <560134EB.8060909@gmail.com>

On 21/09/2015 4:50 PM, Herv? Pag?s wrote:
> Hi,
> 
> Note that one significant change to read.dcf() that happened since R
> 3.0.2 is the addition of support for arbitrary long lines (commit
> 63281), which never worked:
> 
>    dcf <- paste(c("aa: ", rep(letters, length.out=10000)), collapse="")
>    writeLines(dcf, "test.dcf")
>    nchar(read.dcf("test.dcf"))
>    #        aa
>    # [1,] 8186
> 
> The culprit being line 53 in src/main/dcf.c where the author of the
> Rconn_getline2() function only copies 'nbuf' chars from 'buf' to 'buf2'
> when in fact 'nbuf + 1' chars have been stored in 'buf' so far.
> 
> Quickest fix:
> 
> Index: src/main/dcf.c
> ===================================================================
> --- src/main/dcf.c	(revision 69404)
> +++ src/main/dcf.c	(working copy)
> @@ -50,7 +50,7 @@
>   	if(nbuf+2 >= bufsize) { // allow for terminator below
>   	    bufsize *= 2;
>   	    char *buf2 = R_alloc(bufsize, sizeof(char));
> -	    memcpy(buf2, buf, nbuf);
> +	    memcpy(buf2, buf, nbuf + 1);
>   	    buf = buf2;
>   	}
>   	if(c != '\n'){
> 
> However a better fix would be to have 'nbuf' actually contain the nb
> of chars that was stored in 'buf' so far (as it name suggests):
> 
> Index: src/main/dcf.c
> ===================================================================
> --- src/main/dcf.c	(revision 69404)
> +++ src/main/dcf.c	(working copy)
> @@ -42,12 +42,12 @@
>   /* Use R_alloc as this might get interrupted */
>   static char *Rconn_getline2(Rconnection con)
>   {
> -    int c, bufsize = MAXELTSIZE, nbuf = -1;
> +    int c, bufsize = MAXELTSIZE, nbuf = 0;
>       char *buf;
> 
>       buf = R_alloc(bufsize, sizeof(char));
>       while((c = Rconn_fgetc(con)) != R_EOF) {
> -	if(nbuf+2 >= bufsize) { // allow for terminator below
> +	if(nbuf+1 >= bufsize) { // allow for terminator below
>   	    bufsize *= 2;
>   	    char *buf2 = R_alloc(bufsize, sizeof(char));
>   	    memcpy(buf2, buf, nbuf);
> @@ -54,17 +54,19 @@
>   	    buf = buf2;
>   	}
>   	if(c != '\n'){
> -	    buf[++nbuf] = (char) c;
> +	    buf[nbuf++] = (char) c;
>   	} else {
> -	    buf[++nbuf] = '\0';
> +	    buf[nbuf++] = '\0';
>   	    break;
>   	}
>       }
> +    if (nbuf == 0)
> +        return NULL;
>       /* Make sure it is null-terminated even if file did not end with
>        *  newline.
>        */
> -    if(nbuf >= 0 && buf[nbuf]) buf[++nbuf] = '\0';
> -    return (nbuf == -1) ? NULL: buf;
> +    buf[nbuf-1] = '\0';
> +    return buf;
>   }
> 
> That improves readability and reduces the risk of bugs.
> 
> Also note that Rconn_getline2() allocates a new buffer for each line in
> the DCF file. So we got support for arbitrary long lines (a rare
> situation) at the price of a slow down and increased memory usage for
> all DCF files. Sounds less than optimal :-/

I'll put in your patch plus a partial fix for the efficiency issue.  (It
will allocate the first buffer on the stack.)

Should show up in R-devel and R-patched in due course.

Duncan Murdoch

> 
> Cheers,
> H.
> 
> 
> On 09/21/2015 11:01 AM, Duncan Murdoch wrote:
>> On 21/09/2015 1:49 PM, Vinh Nguyen wrote:
>>> Here's an update:
>>>
>>> I checked the ChangeLog for R, and it seems like readDCF was changed
>>> in 3.0.2.  I went on a whim and copied src/main/dcf.c from R 2.15.3
>>> over to 3.2.2, and R compiled fine and install.packages now work for
>>> me.
>>>
>>> This is probably not ideal, but it at least makes R usable on AIX for
>>> me.  Would definitely like to help figure out what's wrong with the
>>> new dcf.c on AIX.
>>
>> I don't know if anyone on the core team has access to AIX, so you're
>> likely on your own for this.
>>
>> I'd suggest running R in a debugger (gdb or whatever you have), and
>> identifying exactly which line in dcf.c fails, and why.  If you tell us
>> that, we might be able to spot what is going wrong.
>>
>> Duncan Murdoch
>>
>>>
>>> Thanks.
>>>
>>> -- Vinh
>>>
>>>
>>> On Mon, Sep 21, 2015 at 10:01 AM, Vinh Nguyen <vinhdizzo at gmail.com> wrote:
>>>> Hi there,
>>>>
>>>> I just wanted to follow up on this readDCF issue with install.packages
>>>> on AIX on R 3.*.  I'm happy to help try potential solutions or debug
>>>> if anyone could point me in the right direction.
>>>>
>>>> To re-cap, it appears readDCF is segfault'ing since R 3.* on AIX.
>>>> This was not the case up until R 2.15.3.  This makes install.packages
>>>> not usable.  Thanks.
>>>>
>>>> -- Vinh
>>>>
>>>>
>>>> On Tue, Nov 11, 2014 at 10:23 AM, Vinh Nguyen <vinhdizzo at gmail.com> wrote:
>>>>> Dear list (re-posting from r-help as r-devel is probably more appropriate),
>>>>>
>>>>> I was able to successfully compile R on our AIX box at work using the
>>>>> GNU compilers following the instructions on the R Administration
>>>>> guide.  The output can be seen at here
>>>>> (https://gist.github.com/nguyenvinh/504321ea9c89d8919bef) and yields
>>>>> no errors .
>>>>>
>>>>> However, I get a segfault whenever I try to use the install.packages
>>>>> function to install packages.  Using debug, I was able to trace it to
>>>>> the readDCF function:
>>>>>
>>>>> Browse[2]>
>>>>> debug: if (!all) return(.Internal(readDCF(file, fields, keep.white)))
>>>>> Browse[2]>
>>>>> debug: return(.Internal(readDCF(file, fields, keep.white)))
>>>>> Browse[2]>
>>>>>
>>>>>   *** caught segfault ***
>>>>> address 4, cause 'invalid permissions'
>>>>>
>>>>> Possible actions:
>>>>> 1: abort (with core dump, if enabled)
>>>>> 2: normal R exit
>>>>> 3: exit R without saving workspace
>>>>> 4: exit R saving workspace
>>>>> Selection:
>>>>>
>>>>> Was curious if anyone has a clue on why such error exists or what I
>>>>> could do to fix it?  I'm able to install packages via R CMD INSTALL,
>>>>> but I would hate to have to manually determine dependencies, download
>>>>> the source for each package, and install them "by hand" via R CMD
>>>>> INSTALL.
>>>>>
>>>>> I went back and compiled older versions of R to see if this error
>>>>> exists.  On R 3.0.3, I get:
>>>>>
>>>>> debug(available.packages)
>>>>> install.packages('ggplot2', dep=TRUE, repo='http://cran.stat.ucla.edu')
>>>>> ...
>>>>> Browse[2]>
>>>>> debug: z <- res0 <- tryCatch(read.dcf(file = tmpf), error = identity)
>>>>> Browse[2]>
>>>>> Error: segfault from C stack overflow
>>>>>
>>>>> On R 2.15.3, I do not see the error.
>>>>>
>>>>> Would be great to get this resolved.  Thank you for your help.
>>>>>
>>>>> -- Vinh
>>>
>>> ______________________________________________
>>> R-devel at r-project.org mailing list
>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>>
>>
>> ______________________________________________
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>
>


From richierocks at gmail.com  Tue Sep 22 14:55:43 2015
From: richierocks at gmail.com (Richard Cotton)
Date: Tue, 22 Sep 2015 15:55:43 +0300
Subject: [Rd] Differences in printing UTF-8 strings to stdout vs. stderr
	under Windows
Message-ID: <CAPp_+=cw-1FCLmZVj7da6P1EhOysyD6sG575xhB8CJLXOmgTGw@mail.gmail.com>

It seems that under Windows, some UTF-8 strings that print OK to
stdout do not print correctly to stderr.  To reproduce:

x <- "\ub124"
cat(x, file = stdout())
## ?
cat(x, file = stderr())
## <U+B124>

Original motivating problem here:
https://stackoverflow.com/questions/32696241/how-to-display-a-message-warning-error-with-unicode-characters-under-windows

How does printing to stderr differ from printing to stdout?

And more importantly, is there any way I can ensure correct printing
of Unicode characters when I need to write to stderr (when throwing
errors or warnings)?

-- 
Regards,
Richie

Learning R
4dpiecharts.com


From vinhdizzo at gmail.com  Tue Sep 22 15:22:00 2015
From: vinhdizzo at gmail.com (Vinh Nguyen)
Date: Tue, 22 Sep 2015 06:22:00 -0700
Subject: [Rd] segfault with readDCF on R 3.1.2 on AIX 6.1 when using
	install.packages
In-Reply-To: <56011567.60607@gmail.com>
References: <CA+2Dmwgowjk9+qKcVQOPXRaGpER5wu+UtqZ=pJrJmaNS1DDpdw@mail.gmail.com>
	<CA+2DmwigXqx_ymW85qzgL7JvyM6tHyzyqSNjWcazow+JROZZ+g@mail.gmail.com>
	<CA+2DmwgZ6XKW9Py7bEx9EC-gQtjmR9yJr-JMHW731gxJKarTfg@mail.gmail.com>
	<560045F3.1060503@gmail.com> <56006DA6.1010002@fredhutch.org>
	<56007B12.5090500@gmail.com>
	<CA+2DmwhXih3Nv9g7ZA5Kh9WudfAat02TCxbb4mOQbeK8WvVqVg@mail.gmail.com>
	<56011567.60607@gmail.com>
Message-ID: <CA+2DmwhrY60JwWDGS8Gv6-NSXND1CXXvqZJCy5=NoD856NP6_A@mail.gmail.com>

On Tue, Sep 22, 2015 at 1:46 AM, Duncan Murdoch
<murdoch.duncan at gmail.com> wrote:
> However, Herve's second example does illustrate a bug I can reproduce:
> one character out of 10000 was read incorrectly.  Could you please try
> his final patch and see if it fixes your AIX problems?

Just tried the latest dcf.c from R-dev and install.packages no longer
segfaults from readDCF.  Thank you both Duncan and Murdoch for your
help.  Can finally make use of this AIX box now (fyi placed request to
get gdb installed but who knows when that would've been installed).

Thanks again.

-- Vinh


From murdoch.duncan at gmail.com  Tue Sep 22 15:32:09 2015
From: murdoch.duncan at gmail.com (Duncan Murdoch)
Date: Tue, 22 Sep 2015 09:32:09 -0400
Subject: [Rd] Differences in printing UTF-8 strings to stdout vs. stderr
 under Windows
In-Reply-To: <CAPp_+=cw-1FCLmZVj7da6P1EhOysyD6sG575xhB8CJLXOmgTGw@mail.gmail.com>
References: <CAPp_+=cw-1FCLmZVj7da6P1EhOysyD6sG575xhB8CJLXOmgTGw@mail.gmail.com>
Message-ID: <56015859.2070102@gmail.com>

On 22/09/2015 8:55 AM, Richard Cotton wrote:
> It seems that under Windows, some UTF-8 strings that print OK to
> stdout do not print correctly to stderr.  To reproduce:
> 
> x <- "\ub124"
> cat(x, file = stdout())
> ## ?
> cat(x, file = stderr())
> ## <U+B124>
> 
> Original motivating problem here:
> https://stackoverflow.com/questions/32696241/how-to-display-a-message-warning-error-with-unicode-characters-under-windows
> 
> How does printing to stderr differ from printing to stdout?
> 
> And more importantly, is there any way I can ensure correct printing
> of Unicode characters when I need to write to stderr (when throwing
> errors or warnings)?
> 

The answer to the last question is certainly "no".  If you are running
Rterm, you are limited to printing in the native encoding, and that
won't cover all Unicode characters.

In Rgui we make more of an effort to convert characters to UTF-16, which
covers most Unicode characters.  (I think we still don't handle
surrogate pairs, but they're rarely used.)  Apparently this is done for
stdout() but not for stderr().  I don't know the rationale for that design.

Duncan Murdoch


From murdoch.duncan at gmail.com  Tue Sep 22 15:34:27 2015
From: murdoch.duncan at gmail.com (Duncan Murdoch)
Date: Tue, 22 Sep 2015 09:34:27 -0400
Subject: [Rd] segfault with readDCF on R 3.1.2 on AIX 6.1 when using
 install.packages
In-Reply-To: <CA+2DmwhrY60JwWDGS8Gv6-NSXND1CXXvqZJCy5=NoD856NP6_A@mail.gmail.com>
References: <CA+2Dmwgowjk9+qKcVQOPXRaGpER5wu+UtqZ=pJrJmaNS1DDpdw@mail.gmail.com>
	<CA+2DmwigXqx_ymW85qzgL7JvyM6tHyzyqSNjWcazow+JROZZ+g@mail.gmail.com>
	<CA+2DmwgZ6XKW9Py7bEx9EC-gQtjmR9yJr-JMHW731gxJKarTfg@mail.gmail.com>
	<560045F3.1060503@gmail.com> <56006DA6.1010002@fredhutch.org>
	<56007B12.5090500@gmail.com>
	<CA+2DmwhXih3Nv9g7ZA5Kh9WudfAat02TCxbb4mOQbeK8WvVqVg@mail.gmail.com>
	<56011567.60607@gmail.com>
	<CA+2DmwhrY60JwWDGS8Gv6-NSXND1CXXvqZJCy5=NoD856NP6_A@mail.gmail.com>
Message-ID: <560158E3.4040105@gmail.com>

On 22/09/2015 9:22 AM, Vinh Nguyen wrote:
> On Tue, Sep 22, 2015 at 1:46 AM, Duncan Murdoch
> <murdoch.duncan at gmail.com> wrote:
>> However, Herve's second example does illustrate a bug I can reproduce:
>> one character out of 10000 was read incorrectly.  Could you please try
>> his final patch and see if it fixes your AIX problems?
> 
> Just tried the latest dcf.c from R-dev and install.packages no longer
> segfaults from readDCF.  Thank you both Duncan and Murdoch for your
> help.  

You're welcome.  (Just wanted to point out:  I'm only one person.  But I
suspect you meant to thank Herv?.  I'll do it for you:  thanks!)

Duncan Murdoch

Can finally make use of this AIX box now (fyi placed request to
> get gdb installed but who knows when that would've been installed).
> 
> Thanks again.
> 
> -- Vinh
>


From maechler at stat.math.ethz.ch  Tue Sep 22 15:54:19 2015
From: maechler at stat.math.ethz.ch (Martin Maechler)
Date: Tue, 22 Sep 2015 15:54:19 +0200
Subject: [Rd] Should as.complex(NaN) -> NA?
In-Reply-To: <77EB52C6DD32BA4D87471DCD70C8D70002B76B26@NA-PA-VBE03.na.tibco.com>
References: <77EB52C6DD32BA4D87471DCD70C8D70002B76B26@NA-PA-VBE03.na.tibco.com>
Message-ID: <22017.23947.70194.983519@stat.math.ethz.ch>

>>>>> William Dunlap <wdunlap at tibco.com>
>>>>>     on Wed, 31 Mar 2010 12:04:42 -0700 writes:

    > I'm having trouble grokking complex NaN's.  This first set
    > examples using complex(re=NaN,im=NaN) give what I expect
    >> Re(complex(re=NaN, im=NaN))
    >   [1] NaN
    >> Im(complex(re=NaN, im=NaN))
    >   [1] NaN
    >> Arg(complex(re=NaN, im=NaN))
    >   [1] NaN
    >> Mod(complex(re=NaN, im=NaN))
    >   [1] NaN
    >> abs(complex(re=NaN, im=NaN))
    >   [1] NaN and so do the following
    >> Re(complex(re=1, im=NaN))
    >   [1] 1
    >> Im(complex(re=1, im=NaN))
    >   [1] NaN
    >> Re(complex(re=NaN, im=1))
    >   [1] NaN
    >> Im(complex(re=NaN, im=1))
    >   [1] 1 but I don't have a good mental model that explains
    > why the following produce NA instead of NaN.
    >> as.complex(NaN)
    >   [1] NA
    >> Im(complex(modulus=NaN, argument=NaN))
    >   [1] NA
    >> Re(complex(modulus=NaN, argument=NaN))
    >   [1] NA
    >> Re(1i * NaN)
    >   [1] NA
    >> Im(1i * NaN)
    >   [1] NA
    >> Re(NaN + 1i)
    >   [1] NA
    >> Im(NaN + 1i)
    >   [1] NA

    > It may be that if as.complex(NaN), and its C equivalent,
    > were changed to return complex(re=NaN,im=NaN) then the
    > arithmetic examples would return NaN.  Is there a better
    > way for me to model how NaN's in complex numbers should
    > work or is this a bug?

We have finally re-found this posting (from > 5.5 year back!),
and even though my first gut answers would have been

1) it has always been like that in R  {which is true; this dates
  back to the very earliest R source code, in the nineties}.

2) it has been documented that as.complex(.) coerces everything
  NA-like to  NA_complex_

 '2)' actually has not quite been true: Coercing from character, e.g.,

  > as.complex("NaN")
  [1] NaN+0i

which differs from NA_complex_.

I now have committed fairly small changes to R-devel (svn 69410),
which change the behavior of the cases above you found hard to
model mentally and as further consequence, now

 identical(as.complex("NaN"),
           as.complex( NaN ))

is true.

The change has not tripped *any* problems in R's own extended
tests (including the recommended packages), but I do expect that
some packages may have changed behavior / output in border line
cases.

The following mental model should apply now (in R-devel >= svn 69410)
hopefully everywhere (please send exceptions!)

1. as.complex(.) coerces everything with "NA" to  NA_complex_ (=: "complex NA")

2. all (well, maybe with reasonable exceptions) operations
   involving complex NAs return (complex) NAs. 

3 a. Operations with complex NaNs return complex NaNs (but
     there are many versions of those).

  b. "+" and "-" with complex NaNs work coordinate-wise

  c. Most/all (?) other mathematical operations involving complex NaNs
     return  complex(re = NaN, im = NaN) ... by using the
     underlying C99 complex math library.
     complex(re = NaN, im = NaN) can be considered as "the complex NaN"
     (whereas e.g., complex(re = Inf, im = NaN) considered as
     one of the infinitely many complex infinities by at least
     some of the C library implementations.

---

I have found that  match(), unique(), and duplicated() still
behave pretty pecularly --- I'd say bugously --- even after the
69410 change.

Some illustration of the above -- but with the "old" R 3.2.2
behavior is available at http://rpubs.com/maechler/complex-NAs-v3_2_2 .

--
Martin Maechler


From henrik.bengtsson at ucsf.edu  Tue Sep 22 19:48:49 2015
From: henrik.bengtsson at ucsf.edu (Henrik Bengtsson)
Date: Tue, 22 Sep 2015 10:48:49 -0700
Subject: [Rd] Rscript --args -e <cmd> / R --vanilla --slave --args -e <cmd>
 opens an interactive R session
Message-ID: <CAFDcVCTmK7F6Y0RsUaAAETz+8LjFpxnxKqdZPE3YtVAaFnBbgw@mail.gmail.com>

When using Rscript -e <cmd>, (mistakenly) putting --args in front of
-e causes an interactive R session to start that does not quit
automatically and that does not display a prompt. For example,

{hb}: Rscript --vanilla -e "0"
[1] 0

{hb}: Rscript --vanilla -e "0" --args
[1] 0

{hb}: Rscript --vanilla --args -e "0"
1
[1] 1
2
[1] 2
quit("no")

Further troubleshooting narrows this down to:

{hb}: R --vanilla --slave --args -e 0
1
[1] 1
quit('no')

having this problem.

/Henrik


From skyebend at skyeome.net  Fri Sep 25 20:53:34 2015
From: skyebend at skyeome.net (Skye Bender-deMoll)
Date: Fri, 25 Sep 2015 11:53:34 -0700
Subject: [Rd] issues with dev.new avoiding RStudio plot device on unix?
Message-ID: <5605982E.5000104@skyeome.net>

Hi R-devl,

I'm still unable to force opening an *interactive* non-Rstudio 
platform-specific plot device on *unix* systems.

dev.new() add a new argument 'noRStudioGD' in R 3.1.1.  Thank you. It 
works for me when using RStudio on Windows, but on the unix system it 
opens a pdf device instead of an interactive device when using an 
interactive RStudio session (with R_DEFAULT_DEVICE and 
R_INTERACIVE_DEVICE not set).

Do other unix RStudio users see this behavior?

It appears that the relevant line of dev.new (and in zzz.R):

    else if (nzchar(dsp) && .Platform$GUI %in% c("X11", "Tk"))
              X11
    else defdev


but when I step through in debugger, I see that

Browse[2]> .Platform$GUI
[1] "RStudio"

so instead of returning X11, it returnd defdev (pdf)

perhaps changing to

.Platform$GUI %in% c("X11", "Tk", "RStudio")

would work, but seems a little strange logically.


best,
  -skye

p.s.  I wonder if instead of having a noRStudioGD=TRUE flag, it might be 
a more future-proof design to have an avoid.devices='RStudioGD' argument 
  in case users need to induce similar behavior to avoid other current 
or future devices?  Probably to late now tho.


From otoomet at gmail.com  Sat Sep 26 05:31:22 2015
From: otoomet at gmail.com (Ott Toomet)
Date: Fri, 25 Sep 2015 20:31:22 -0700
Subject: [Rd] issues with dev.new avoiding RStudio plot device on unix?
In-Reply-To: <5605982E.5000104@skyeome.net>
References: <5605982E.5000104@skyeome.net>
Message-ID: <CAMMJQ0Y2dHA2wjdzNQznEA=cfh7PLdQH4XBBzJcdzoVUx19EMA@mail.gmail.com>

Can you describe your problem a bit more?

* What kind of unix system do you have?
* Can you run other X11 programs?

I had a similar issue, and the problem was that the computer was not set up
to support X11.  As a minimum, you have to install /xauth/, and potentially
also other libraries if you want to install packages from source.

Best,
Ott

On Fri, Sep 25, 2015 at 11:53 AM, Skye Bender-deMoll <skyebend at skyeome.net>
wrote:

> Hi R-devl,
>
> I'm still unable to force opening an *interactive* non-Rstudio
> platform-specific plot device on *unix* systems.
>
> dev.new() add a new argument 'noRStudioGD' in R 3.1.1.  Thank you. It
> works for me when using RStudio on Windows, but on the unix system it opens
> a pdf device instead of an interactive device when using an interactive
> RStudio session (with R_DEFAULT_DEVICE and R_INTERACIVE_DEVICE not set).
>
> Do other unix RStudio users see this behavior?
>
> It appears that the relevant line of dev.new (and in zzz.R):
>
>    else if (nzchar(dsp) && .Platform$GUI %in% c("X11", "Tk"))
>              X11
>    else defdev
>
>
> but when I step through in debugger, I see that
>
> Browse[2]> .Platform$GUI
> [1] "RStudio"
>
> so instead of returning X11, it returnd defdev (pdf)
>
> perhaps changing to
>
> .Platform$GUI %in% c("X11", "Tk", "RStudio")
>
> would work, but seems a little strange logically.
>
>
> best,
>  -skye
>
> p.s.  I wonder if instead of having a noRStudioGD=TRUE flag, it might be a
> more future-proof design to have an avoid.devices='RStudioGD' argument  in
> case users need to induce similar behavior to avoid other current or future
> devices?  Probably to late now tho.
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>



-- 
Ott Toomet

Visiting Researcher
School of Information
Mary Gates Hall, Suite 310
University of Washington
Seattle, WA 98195

	[[alternative HTML version deleted]]


From skyebend at skyeome.net  Sat Sep 26 06:42:14 2015
From: skyebend at skyeome.net (Skye Bender-deMoll)
Date: Fri, 25 Sep 2015 21:42:14 -0700
Subject: [Rd] issues with dev.new avoiding RStudio plot device on unix?
In-Reply-To: <CAMMJQ0Y2dHA2wjdzNQznEA=cfh7PLdQH4XBBzJcdzoVUx19EMA@mail.gmail.com>
References: <5605982E.5000104@skyeome.net>
	<CAMMJQ0Y2dHA2wjdzNQznEA=cfh7PLdQH4XBBzJcdzoVUx19EMA@mail.gmail.com>
Message-ID: <56062226.8010005@skyeome.net>

Sorry, should have given more background.  x11 works fine on all my 
systems when called by x11().  I'm the maintainer of a package that uses 
the animation library, which has performance issues when used with the 
RStudio plot device.  But if you call plot.new() when using RStudio, you 
get an RStudio device, not the standard device for the platform because 
it overrides the device option.  So I've had to have the library do 
platform detection and platform-specific device calls, which R CMD check 
doesn't like.  I believe that noRStudioGD argument was avoided to give 
users a way around this, but it doesn't seem to be behaving correctly in 
the unix interactive case.

On 09/25/2015 08:31 PM, Ott Toomet wrote:
> Can you describe your problem a bit more?
>
> * What kind of unix system do you have??
> * Can you run other X11 programs?
>
> I had a similar issue, and the problem was that the computer was not set
> up to support X11.?  As a minimum, you have to install /xauth/, and
> potentially also other libraries if you want to install packages from
> source.
>
> Best,
> Ott
>
> On Fri, Sep 25, 2015 at 11:53 AM, Skye Bender-deMoll
> <skyebend at skyeome.net <mailto:skyebend at skyeome.net>> wrote:
>
>     Hi R-devl,
>
>     I'm still unable to force opening an *interactive* non-Rstudio
>     platform-specific plot device on *unix* systems.
>
>     dev.new() add a new argument 'noRStudioGD' in R 3.1.1.?  Thank you.
>     It works for me when using RStudio on Windows, but on the unix
>     system it opens a pdf device instead of an interactive device when
>     using an interactive RStudio session (with R_DEFAULT_DEVICE and
>     R_INTERACIVE_DEVICE not set).
>
>     Do other unix RStudio users see this behavior?
>
>     It appears that the relevant line of dev.new (and in zzz.R):
>
>     ?  ? else if (nzchar(dsp) && .Platform$GUI %in% c("X11", "Tk"))
>     ?  ?  ?  ?  ?  ?  ? X11
>     ?  ? else defdev
>
>
>     but when I step through in debugger, I see that
>
>     Browse[2]> .Platform$GUI
>     [1] "RStudio"
>
>     so instead of returning X11, it returnd defdev (pdf)
>
>     perhaps changing to
>
>     .Platform$GUI %in% c("X11", "Tk", "RStudio")
>
>     would work, but seems a little strange logically.
>
>
>     best,
>     ? -skye
>
>     p.s.?  I wonder if instead of having a noRStudioGD=TRUE flag, it
>     might be a more future-proof design to have an
>     avoid.devices='RStudioGD' argument?  in case users need to induce
>     similar behavior to avoid other current or future devices??
>     Probably to late now tho.
>
>     ______________________________________________
>     R-devel at r-project.org <mailto:R-devel at r-project.org> mailing list
>     https://stat.ethz.ch/mailman/listinfo/r-devel
>
>
>
>
> --
> Ott Toomet
>
> Visiting Researcher
> School of Information
> Mary Gates Hall, Suite 310
> University of Washington
> Seattle, WA 98195
>


From htl10 at users.sourceforge.net  Sat Sep 26 09:39:30 2015
From: htl10 at users.sourceforge.net (Hin-Tak Leung)
Date: Sat, 26 Sep 2015 08:39:30 +0100
Subject: [Rd] grDevice in R HEAD been broken for 6 weeks.
Message-ID: <1443253170.62261.YahooMailBasic@web172303.mail.ir2.yahoo.com>

geDevice has been failing check for 6 weeks now with --enable-strict-barrier , 
bisected to:

------------------------------------------------------------------------
r69049 | murrell | 2015-08-14 00:03:12 +0100 (Fri, 14 Aug 2015) | 2 lines

first hack at adding grid display list to recorded plot objects, so can add further grid drawing following a replayPlot()

------------------------------------------------------------------------

It seems to be broken by the GE_SaveSnapshotState addition
in src/library/grid/src/state.c:

     case GE_SaveSnapshotState:
+        /*
+         * Save the current 'grid' DL.
+         */
+        PROTECT(result = allocVector(VECSXP, 3));
+        SET_VECTOR_ELT(result, 0, gridStateElement(dd, GSS_DL));
+        SET_VECTOR_ELT(result, 1, gridStateElement(dd, GSS_DLINDEX));
+        UNPROTECT(1);
        break;

> showCols2()
Loading required package: grid
Error in grDevices:::recordPalette() : 
  LOGICAL() can only be applied to a 'logical', not a 'list'
Calls: demo ... eval -> eval -> showCols2 -> grid.newpage -> <Anonymous>
Execution halted

somewhere else it seems to expect the outcome of GE_SaveSnapshotState to be
a logical array rather than a list, though I cannot find where it is.

Any chance of that getting fixed any time soon?


From stefanML at collocations.de  Sat Sep 26 10:32:54 2015
From: stefanML at collocations.de (Stefan Evert)
Date: Sat, 26 Sep 2015 10:32:54 +0200
Subject: [Rd] issues with dev.new avoiding RStudio plot device on unix?
In-Reply-To: <56062226.8010005@skyeome.net>
References: <5605982E.5000104@skyeome.net>
	<CAMMJQ0Y2dHA2wjdzNQznEA=cfh7PLdQH4XBBzJcdzoVUx19EMA@mail.gmail.com>
	<56062226.8010005@skyeome.net>
Message-ID: <F0481E92-7EA1-414C-B42E-B656A78D01F4@collocations.de>

Same problem here on Mac OS X 10.10.5 with R 3.2.2 and RStudio 0.99.473.

I think dev.new() tries to find a suitable device in an interactive session with this code

	dsp <- Sys.getenv("DISPLAY")
	if (.Platform$OS.type == "windows")
		windows
	else if (.Platform$GUI == "AQUA" || ((!nzchar(dsp) || grepl("^/tmp/launch-", dsp)) && .Call(C_makeQuartzDefault)))
		quartz
	else if (nzchar(dsp) && .Platform$GUI %in% c("X11", "Tk"))
		X11
	else defdev 

which fails for me because RStudio sets .Platform$GUI to "RStudio" (thanks, RStudio!) and my DISPLAY variable looks like this

	/private/tmp/com.apple.launchd.2wKas4wzPe/org.macosforge.xquartz:0

so the grepl() on dsp doesn't match.

Best,
Stefan


> On 26 Sep 2015, at 06:42, Skye Bender-deMoll <skyebend at skyeome.net> wrote:
> 
> Sorry, should have given more background.  x11 works fine on all my systems when called by x11().  I'm the maintainer of a package that uses the animation library, which has performance issues when used with the RStudio plot device.  But if you call plot.new() when using RStudio, you get an RStudio device, not the standard device for the platform because it overrides the device option.  So I've had to have the library do platform detection and platform-specific device calls, which R CMD check doesn't like.  I believe that noRStudioGD argument was avoided to give users a way around this, but it doesn't seem to be behaving correctly in the unix interactive case.


From cstrato at aon.at  Sat Sep 26 21:30:14 2015
From: cstrato at aon.at (cstrato)
Date: Sat, 26 Sep 2015 21:30:14 +0200
Subject: [Rd] Hidden files problem in R CMD check
Message-ID: <5606F246.20902@aon.at>

Dear all,

When running R CMD check on my Mac (Yosemite 10.10.5) I get suddenly 
NOTEs and WARNINGs
that my tar.gz file does contain hidden files.

However, when checking the corresponding directories with 'ls -al' (or 
with mc)
none of these files does exist!! (with exception .BBSoptions).

Here is a partial output of 00check.log:

* using log directory '/Volumes/LumiData/CRAN/xps.Rcheck'
* using R version 3.2.0 (2015-04-16)
* using platform: x86_64-apple-darwin13.4.0 (64-bit)
* using session charset: ASCII
* checking for file 'xps/DESCRIPTION' ... OK
* this is package 'xps' version '1.29.2'
* checking package namespace information ... OK
* checking package dependencies ... OK
* checking if this is a source package ... OK
* checking if there is a namespace ... OK
* checking for executable files ... OK
* checking for hidden files and directories ... NOTE
Found the following hidden files and directories:
   .BBSoptions
   ._.BBSoptions
   ._DESCRIPTION
   ._NAMESPACE
   ._R
   ._README
   ._build
   ._inst
   ._man
   ._src
   ._vignettes
   R/._AffyRNAdeg.R
   R/._Constructors.R
   R/._TreeSetClasses.R
   R/._bgcorrect.R
   R/._dabg.call.R
...
   man/._AffyRNAdeg.Rd
   man/._AnalysisTreeSet-class.Rd
   man/._CallTreeSet-class.Rd
   man/._DataTreeSet-class.Rd
   man/._ExprTreeSet-class.Rd
...
   src/._rwrapper.cxx
   src/._rwrapper.h
   src/._xps.def
   src/._xpsLinkDef.h
   vignettes/._APTvsXPS.Rnw
   vignettes/._BoxPlot_BgrdGC_bgrd.png
   vignettes/._BoxPlot_BgrdMAS5_bgrd.png
   vignettes/._BoxPlot_BgrdRMA.png
...
* checking package subdirectories ... WARNING
Subdirectory 'R' contains invalid file names:
   '._AffyRNAdeg.R' '._Constructors.R' '._TreeSetClasses.R'
   '._bgcorrect.R' '._dabg.call.R' '._dfw.R' '._export.R' '._express.R'
...
Subdirectory 'man' contains invalid file names:
   '._AffyRNAdeg.Rd' '._AnalysisTreeSet-class.Rd'
   '._CallTreeSet-class.Rd' '._DataTreeSet-class.Rd'
   '._ExprTreeSet-class.Rd' '._Filter-class.Rd'
   ...


Does anyone know why these files are listed?
For some reason all these hidden files start with '._'

My suspicion was that maybe there is something wrong with Spotlight 
(i.e. mdutil)
so I excluded the whole volume from Spotlight. This did not help. Adding 
the volume
again and thus forcing a rebuild for Spotlight did not help either.

What could I do to remove these apparently non-existing hidden files?

Best regards
Christian
_._._._._._._._._._._._._._._._._._
C.h.r.i.s.t.i.a.n   S.t.r.a.t.o.w.a
V.i.e.n.n.a           A.u.s.t.r.i.a
e.m.a.i.l:        cstrato at aon.at
_._._._._._._._._._._._._._._._._._


From simon.urbanek at r-project.org  Sat Sep 26 21:44:48 2015
From: simon.urbanek at r-project.org (Simon Urbanek)
Date: Sat, 26 Sep 2015 15:44:48 -0400
Subject: [Rd] Hidden files problem in R CMD check
In-Reply-To: <5606F246.20902@aon.at>
References: <5606F246.20902@aon.at>
Message-ID: <1B413D74-CCFD-4E5B-B6F0-B42D4C1B46E1@r-project.org>

Christian,

those are resource forks from your files - possibly maintained by your (likey very old?) editor.

First, is seems that you are not creating the tar ball correctly - the correct way is to use R CMD build which should not include resource forks nor files on the ignore list.

That said, if for some reason you intend to create is by hand (not recommended), you may want to set COPYFILE_DISABLE=1 so it doesn't include resource forks.

Cheers,
Simon


On Sep 26, 2015, at 3:30 PM, cstrato <cstrato at aon.at> wrote:

> Dear all,
> 
> When running R CMD check on my Mac (Yosemite 10.10.5) I get suddenly NOTEs and WARNINGs
> that my tar.gz file does contain hidden files.
> 
> However, when checking the corresponding directories with 'ls -al' (or with mc)
> none of these files does exist!! (with exception .BBSoptions).
> 
> Here is a partial output of 00check.log:
> 
> * using log directory '/Volumes/LumiData/CRAN/xps.Rcheck'
> * using R version 3.2.0 (2015-04-16)
> * using platform: x86_64-apple-darwin13.4.0 (64-bit)
> * using session charset: ASCII
> * checking for file 'xps/DESCRIPTION' ... OK
> * this is package 'xps' version '1.29.2'
> * checking package namespace information ... OK
> * checking package dependencies ... OK
> * checking if this is a source package ... OK
> * checking if there is a namespace ... OK
> * checking for executable files ... OK
> * checking for hidden files and directories ... NOTE
> Found the following hidden files and directories:
>  .BBSoptions
>  ._.BBSoptions
>  ._DESCRIPTION
>  ._NAMESPACE
>  ._R
>  ._README
>  ._build
>  ._inst
>  ._man
>  ._src
>  ._vignettes
>  R/._AffyRNAdeg.R
>  R/._Constructors.R
>  R/._TreeSetClasses.R
>  R/._bgcorrect.R
>  R/._dabg.call.R
> ...
>  man/._AffyRNAdeg.Rd
>  man/._AnalysisTreeSet-class.Rd
>  man/._CallTreeSet-class.Rd
>  man/._DataTreeSet-class.Rd
>  man/._ExprTreeSet-class.Rd
> ...
>  src/._rwrapper.cxx
>  src/._rwrapper.h
>  src/._xps.def
>  src/._xpsLinkDef.h
>  vignettes/._APTvsXPS.Rnw
>  vignettes/._BoxPlot_BgrdGC_bgrd.png
>  vignettes/._BoxPlot_BgrdMAS5_bgrd.png
>  vignettes/._BoxPlot_BgrdRMA.png
> ...
> * checking package subdirectories ... WARNING
> Subdirectory 'R' contains invalid file names:
>  '._AffyRNAdeg.R' '._Constructors.R' '._TreeSetClasses.R'
>  '._bgcorrect.R' '._dabg.call.R' '._dfw.R' '._export.R' '._express.R'
> ...
> Subdirectory 'man' contains invalid file names:
>  '._AffyRNAdeg.Rd' '._AnalysisTreeSet-class.Rd'
>  '._CallTreeSet-class.Rd' '._DataTreeSet-class.Rd'
>  '._ExprTreeSet-class.Rd' '._Filter-class.Rd'
>  ...
> 
> 
> Does anyone know why these files are listed?
> For some reason all these hidden files start with '._'
> 
> My suspicion was that maybe there is something wrong with Spotlight (i.e. mdutil)
> so I excluded the whole volume from Spotlight. This did not help. Adding the volume
> again and thus forcing a rebuild for Spotlight did not help either.
> 
> What could I do to remove these apparently non-existing hidden files?
> 
> Best regards
> Christian
> _._._._._._._._._._._._._._._._._._
> C.h.r.i.s.t.i.a.n   S.t.r.a.t.o.w.a
> V.i.e.n.n.a           A.u.s.t.r.i.a
> e.m.a.i.l:        cstrato at aon.at
> _._._._._._._._._._._._._._._._._._
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
> 


From cstrato at aon.at  Sat Sep 26 22:41:14 2015
From: cstrato at aon.at (cstrato)
Date: Sat, 26 Sep 2015 22:41:14 +0200
Subject: [Rd] Hidden files problem in R CMD check
In-Reply-To: <1B413D74-CCFD-4E5B-B6F0-B42D4C1B46E1@r-project.org>
References: <5606F246.20902@aon.at>
	<1B413D74-CCFD-4E5B-B6F0-B42D4C1B46E1@r-project.org>
Message-ID: <560702EA.7090501@aon.at>

Dear Simon,

Thank you very much for your help, it did solve my problems!! Great!

I have googled COPYFILE_DISABLE and found the following site which does 
explain the issue with tar on Mac OS X, see:
http://unix.stackexchange.com/questions/9665/create-tar-archive-of-a-directory-except-for-hidden-files

Instead of doing:
$tar czf xps_1.29.2.tar.gz xps

I did now:
$COPYFILE_DISABLE=1 tar czf xps_1.29.2.tar.gz xps

Running:
$R CMD check xps_1.29.2.tar.gz
now leaves only '.BBSoptions' as hidden file.


However, I must admit that I do not understand it.

Since  more than ten years I am running the 'tar' command on my Macs
(using Leopard, Snow Leopard, Lion and now Yosemite) and running
R CMD check did never give these warning messages.
Even two weeks ago everything was ok.

Could it be that upgrading from OS X 10.10.3 to 10.10.5 did change the 
behaviour?
(However, the link above is already from 2011)


Maybe one word regarding the editor I am using:
Yes, I am using 'nedit-5.5-Darwin-i386/nedit' which is pretty old,
but in my opinion the best and fastest editor I know:
- When I open a C++ file containing more than 10,000 lines it opens it
   immediately with all C++ instructions highlighted immediately
   (in contrast to emacs)
- I can open the huge (>500 MB) Affymetrix annotation files containing
   more than one million lines in few seconds and scroll fast from
   beginning to end
- It does even have a Language Mode for R

I do not believe that 'nedit' does  create these hidden files, since it 
never did.


Thank you once again.
Best regards,
Christian


On 09/26/15 21:44, Simon Urbanek wrote:
> Christian,
>
> those are resource forks from your files - possibly maintained by your (likey very old?) editor.
>
> First, is seems that you are not creating the tar ball correctly - the correct way is to use R CMD build which should not include resource forks nor files on the ignore list.
>
> That said, if for some reason you intend to create is by hand (not recommended), you may want to set COPYFILE_DISABLE=1 so it doesn't include resource forks.
>
> Cheers,
> Simon
>
>
> On Sep 26, 2015, at 3:30 PM, cstrato <cstrato at aon.at> wrote:
>
>> Dear all,
>>
>> When running R CMD check on my Mac (Yosemite 10.10.5) I get suddenly NOTEs and WARNINGs
>> that my tar.gz file does contain hidden files.
>>
>> However, when checking the corresponding directories with 'ls -al' (or with mc)
>> none of these files does exist!! (with exception .BBSoptions).
>>
>> Here is a partial output of 00check.log:
>>
>> * using log directory '/Volumes/LumiData/CRAN/xps.Rcheck'
>> * using R version 3.2.0 (2015-04-16)
>> * using platform: x86_64-apple-darwin13.4.0 (64-bit)
>> * using session charset: ASCII
>> * checking for file 'xps/DESCRIPTION' ... OK
>> * this is package 'xps' version '1.29.2'
>> * checking package namespace information ... OK
>> * checking package dependencies ... OK
>> * checking if this is a source package ... OK
>> * checking if there is a namespace ... OK
>> * checking for executable files ... OK
>> * checking for hidden files and directories ... NOTE
>> Found the following hidden files and directories:
>>   .BBSoptions
>>   ._.BBSoptions
>>   ._DESCRIPTION
>>   ._NAMESPACE
>>   ._R
>>   ._README
>>   ._build
>>   ._inst
>>   ._man
>>   ._src
>>   ._vignettes
>>   R/._AffyRNAdeg.R
>>   R/._Constructors.R
>>   R/._TreeSetClasses.R
>>   R/._bgcorrect.R
>>   R/._dabg.call.R
>> ...
>>   man/._AffyRNAdeg.Rd
>>   man/._AnalysisTreeSet-class.Rd
>>   man/._CallTreeSet-class.Rd
>>   man/._DataTreeSet-class.Rd
>>   man/._ExprTreeSet-class.Rd
>> ...
>>   src/._rwrapper.cxx
>>   src/._rwrapper.h
>>   src/._xps.def
>>   src/._xpsLinkDef.h
>>   vignettes/._APTvsXPS.Rnw
>>   vignettes/._BoxPlot_BgrdGC_bgrd.png
>>   vignettes/._BoxPlot_BgrdMAS5_bgrd.png
>>   vignettes/._BoxPlot_BgrdRMA.png
>> ...
>> * checking package subdirectories ... WARNING
>> Subdirectory 'R' contains invalid file names:
>>   '._AffyRNAdeg.R' '._Constructors.R' '._TreeSetClasses.R'
>>   '._bgcorrect.R' '._dabg.call.R' '._dfw.R' '._export.R' '._express.R'
>> ...
>> Subdirectory 'man' contains invalid file names:
>>   '._AffyRNAdeg.Rd' '._AnalysisTreeSet-class.Rd'
>>   '._CallTreeSet-class.Rd' '._DataTreeSet-class.Rd'
>>   '._ExprTreeSet-class.Rd' '._Filter-class.Rd'
>>   ...
>>
>>
>> Does anyone know why these files are listed?
>> For some reason all these hidden files start with '._'
>>
>> My suspicion was that maybe there is something wrong with Spotlight (i.e. mdutil)
>> so I excluded the whole volume from Spotlight. This did not help. Adding the volume
>> again and thus forcing a rebuild for Spotlight did not help either.
>>
>> What could I do to remove these apparently non-existing hidden files?
>>
>> Best regards
>> Christian
>> _._._._._._._._._._._._._._._._._._
>> C.h.r.i.s.t.i.a.n   S.t.r.a.t.o.w.a
>> V.i.e.n.n.a           A.u.s.t.r.i.a
>> e.m.a.i.l:        cstrato at aon.at
>> _._._._._._._._._._._._._._._._._._
>>
>> ______________________________________________
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>
>
>


From edd at debian.org  Sat Sep 26 23:01:09 2015
From: edd at debian.org (Dirk Eddelbuettel)
Date: Sat, 26 Sep 2015 16:01:09 -0500
Subject: [Rd] Hidden files problem in R CMD check
In-Reply-To: <560702EA.7090501@aon.at>
References: <5606F246.20902@aon.at>
	<1B413D74-CCFD-4E5B-B6F0-B42D4C1B46E1@r-project.org>
	<560702EA.7090501@aon.at>
Message-ID: <22023.1941.346237.222744@max.nulle.part>


On 26 September 2015 at 22:41, cstrato wrote:
| Dear Simon,
| 
| Thank you very much for your help, it did solve my problems!! Great!
| 
| I have googled COPYFILE_DISABLE and found the following site which does 
| explain the issue with tar on Mac OS X, see:
| http://unix.stackexchange.com/questions/9665/create-tar-archive-of-a-directory-except-for-hidden-files
| 
| Instead of doing:
| $tar czf xps_1.29.2.tar.gz xps
| 
| I did now:
| $COPYFILE_DISABLE=1 tar czf xps_1.29.2.tar.gz xps
| 
| Running:
| $R CMD check xps_1.29.2.tar.gz
| now leaves only '.BBSoptions' as hidden file.

No, still wrong. As Simon said, we all are supposed to use 'R CMD build xps'
to create the tarball.  "Back in the day ..." straight tar cfz ... worked, it
more or less stopped _many_ years ago.  Cf TheOneManualThatMatters:

   1.3.1 Checking packages
   -----------------------

   Using 'R CMD check', the R package checker, one can test whether
   _source_ R packages work correctly.  It can be run on one or more
   directories, or compressed package 'tar' archives with extension
   '.tar.gz', '.tgz', '.tar.bz2' or '.tar.xz'.

      It is strongly recommended that the final checks are run on a 'tar'
   archive prepared by 'R CMD build'.

Ie "It is strongly recommended ... 'tar' archive prepared by 'R CMD build'.

Dirk

-- 
http://dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org


From cstrato at aon.at  Sat Sep 26 23:06:54 2015
From: cstrato at aon.at (cstrato)
Date: Sat, 26 Sep 2015 23:06:54 +0200
Subject: [Rd] Hidden files problem in R CMD check
In-Reply-To: <22023.1941.346237.222744@max.nulle.part>
References: <5606F246.20902@aon.at>
	<1B413D74-CCFD-4E5B-B6F0-B42D4C1B46E1@r-project.org>
	<560702EA.7090501@aon.at> <22023.1941.346237.222744@max.nulle.part>
Message-ID: <560708EE.5070600@aon.at>

Dear Dirk,

Yes, I know, however forget for one moment R.

If I use tar independent of R it still should not create these hidden 
files.

BTW, do you know where these hidden files are stored on the Mac?

Best regards,
Christian


On 09/26/15 23:01, Dirk Eddelbuettel wrote:
>
> On 26 September 2015 at 22:41, cstrato wrote:
> | Dear Simon,
> |
> | Thank you very much for your help, it did solve my problems!! Great!
> |
> | I have googled COPYFILE_DISABLE and found the following site which does
> | explain the issue with tar on Mac OS X, see:
> | http://unix.stackexchange.com/questions/9665/create-tar-archive-of-a-directory-except-for-hidden-files
> |
> | Instead of doing:
> | $tar czf xps_1.29.2.tar.gz xps
> |
> | I did now:
> | $COPYFILE_DISABLE=1 tar czf xps_1.29.2.tar.gz xps
> |
> | Running:
> | $R CMD check xps_1.29.2.tar.gz
> | now leaves only '.BBSoptions' as hidden file.
>
> No, still wrong. As Simon said, we all are supposed to use 'R CMD build xps'
> to create the tarball.  "Back in the day ..." straight tar cfz ... worked, it
> more or less stopped _many_ years ago.  Cf TheOneManualThatMatters:
>
>     1.3.1 Checking packages
>     -----------------------
>
>     Using 'R CMD check', the R package checker, one can test whether
>     _source_ R packages work correctly.  It can be run on one or more
>     directories, or compressed package 'tar' archives with extension
>     '.tar.gz', '.tgz', '.tar.bz2' or '.tar.xz'.
>
>        It is strongly recommended that the final checks are run on a 'tar'
>     archive prepared by 'R CMD build'.
>
> Ie "It is strongly recommended ... 'tar' archive prepared by 'R CMD build'.
>
> Dirk
>


From edd at debian.org  Sat Sep 26 23:30:17 2015
From: edd at debian.org (Dirk Eddelbuettel)
Date: Sat, 26 Sep 2015 16:30:17 -0500
Subject: [Rd] Hidden files problem in R CMD check
In-Reply-To: <560708EE.5070600@aon.at>
References: <5606F246.20902@aon.at>
	<1B413D74-CCFD-4E5B-B6F0-B42D4C1B46E1@r-project.org>
	<560702EA.7090501@aon.at> <22023.1941.346237.222744@max.nulle.part>
	<560708EE.5070600@aon.at>
Message-ID: <22023.3689.759265.11139@max.nulle.part>


On 26 September 2015 at 23:06, cstrato wrote:
| Dear Dirk,
| 
| Yes, I know, however forget for one moment R.

No we can't. Your question was about to make R CMD check happy and
'quiet'. And one answer is to feed it a properly constructed file.
| 
| If I use tar independent of R it still should not create these hidden 
| files.

Hm, I doubt that. We have to tell R explicitly to exclude dotfiles,
directories from version control etc pp. Recall the discussion years when
.git was added to the already existing .svn?

In any event, R is open source so you can check what 'build' does and follow
its code into the tools package.
 
| BTW, do you know where these hidden files are stored on the Mac?

Pass -- I am too pedestrian for owing one of those machines ;-)

Dirk

-- 
http://dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org


From cstrato at aon.at  Sun Sep 27 00:19:02 2015
From: cstrato at aon.at (cstrato)
Date: Sun, 27 Sep 2015 00:19:02 +0200
Subject: [Rd] Hidden files problem in R CMD check
In-Reply-To: <22023.3689.759265.11139@max.nulle.part>
References: <5606F246.20902@aon.at>
	<1B413D74-CCFD-4E5B-B6F0-B42D4C1B46E1@r-project.org>
	<560702EA.7090501@aon.at> <22023.1941.346237.222744@max.nulle.part>
	<560708EE.5070600@aon.at> <22023.3689.759265.11139@max.nulle.part>
Message-ID: <560719D6.9030502@aon.at>

Dear Dirk,

Please do not get me wrong.

Yes, I am doing it the wrong way and I am doing it since about eight 
years. Nevertheless I am still allowed to be confused when something 
suddenly happens which did not happen before during all these years.

Doing it correctly will solve the problem, but it will not explain this 
behavior which suddenly popped up.

Best regards,
Christian


On 09/26/15 23:30, Dirk Eddelbuettel wrote:
>
> On 26 September 2015 at 23:06, cstrato wrote:
> | Dear Dirk,
> |
> | Yes, I know, however forget for one moment R.
>
> No we can't. Your question was about to make R CMD check happy and
> 'quiet'. And one answer is to feed it a properly constructed file.
> |
> | If I use tar independent of R it still should not create these hidden
> | files.
>
> Hm, I doubt that. We have to tell R explicitly to exclude dotfiles,
> directories from version control etc pp. Recall the discussion years when
> .git was added to the already existing .svn?
>
> In any event, R is open source so you can check what 'build' does and follow
> its code into the tools package.
>
> | BTW, do you know where these hidden files are stored on the Mac?
>
> Pass -- I am too pedestrian for owing one of those machines ;-)
>
> Dirk
>


From dwinsemius at comcast.net  Sun Sep 27 02:38:13 2015
From: dwinsemius at comcast.net (David Winsemius)
Date: Sat, 26 Sep 2015 17:38:13 -0700
Subject: [Rd] Hidden files problem in R CMD check
In-Reply-To: <560708EE.5070600@aon.at>
References: <5606F246.20902@aon.at>
	<1B413D74-CCFD-4E5B-B6F0-B42D4C1B46E1@r-project.org>
	<560702EA.7090501@aon.at> <22023.1941.346237.222744@max.nulle.part>
	<560708EE.5070600@aon.at>
Message-ID: <DB4BD38F-54DE-47FE-9204-1CB3BE8A14A2@comcast.net>


On Sep 26, 2015, at 2:06 PM, cstrato wrote:

> Dear Dirk,
> 
> Yes, I know, however forget for one moment R.
> 
> If I use tar independent of R it still should not create these hidden files.
> 
> BTW, do you know where these hidden files are stored on the Mac?

Your first posting showed which of several different directories they were in. Do you understand that any file whose name starts with a <period> is called a "hidden file"? It is "hidden", i.e not displayed in a Finder window, from people who are using Finder.app unless you change the default settings. It's easy to look up the code that is needed to be pasted into a Terminal session. I never remember it. I just leave Finder set up to display these 'dotfiles' as they are also called.

defaults write com.apple.finder AppleShowAllFiles YES

killall Finder

#The second command restarts Finder.app or you could try to restart the Finder by option (=alt) + rightclicking the Finder icon in the Dock and selecting Relaunch.

-- 
David.

> 
> Best regards,
> Christian
> 
> 
> On 09/26/15 23:01, Dirk Eddelbuettel wrote:
>> 
>> On 26 September 2015 at 22:41, cstrato wrote:
>> | Dear Simon,
>> |
>> | Thank you very much for your help, it did solve my problems!! Great!
>> |
>> | I have googled COPYFILE_DISABLE and found the following site which does
>> | explain the issue with tar on Mac OS X, see:
>> | http://unix.stackexchange.com/questions/9665/create-tar-archive-of-a-directory-except-for-hidden-files
>> |
>> | Instead of doing:
>> | $tar czf xps_1.29.2.tar.gz xps
>> |
>> | I did now:
>> | $COPYFILE_DISABLE=1 tar czf xps_1.29.2.tar.gz xps
>> |
>> | Running:
>> | $R CMD check xps_1.29.2.tar.gz
>> | now leaves only '.BBSoptions' as hidden file.
>> 
>> No, still wrong. As Simon said, we all are supposed to use 'R CMD build xps'
>> to create the tarball.  "Back in the day ..." straight tar cfz ... worked, it
>> more or less stopped _many_ years ago.  Cf TheOneManualThatMatters:
>> 
>>    1.3.1 Checking packages
>>    -----------------------
>> 
>>    Using 'R CMD check', the R package checker, one can test whether
>>    _source_ R packages work correctly.  It can be run on one or more
>>    directories, or compressed package 'tar' archives with extension
>>    '.tar.gz', '.tgz', '.tar.bz2' or '.tar.xz'.
>> 
>>       It is strongly recommended that the final checks are run on a 'tar'
>>    archive prepared by 'R CMD build'.
>> 
>> Ie "It is strongly recommended ... 'tar' archive prepared by 'R CMD build'.
>> 
>> Dirk
>> 
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel

David Winsemius
Alameda, CA, USA


From istazahn at gmail.com  Sun Sep 27 03:05:42 2015
From: istazahn at gmail.com (Ista Zahn)
Date: Sat, 26 Sep 2015 21:05:42 -0400
Subject: [Rd] Hidden files problem in R CMD check
In-Reply-To: <DB4BD38F-54DE-47FE-9204-1CB3BE8A14A2@comcast.net>
References: <5606F246.20902@aon.at>
	<1B413D74-CCFD-4E5B-B6F0-B42D4C1B46E1@r-project.org>
	<560702EA.7090501@aon.at> <22023.1941.346237.222744@max.nulle.part>
	<560708EE.5070600@aon.at>
	<DB4BD38F-54DE-47FE-9204-1CB3BE8A14A2@comcast.net>
Message-ID: <CA+vqiLHKQMSQs64jjmbhYJE1X477c9ZKPWvkSkWTF6WMocj9+w@mail.gmail.com>

Hi Christian,

This seems like a question about OSX rather than R. You will probably have
more luck asking on an apple forum. Or just google: http://bfy.tw/1zhP

Best,
Ista
On Sep 26, 2015 8:39 PM, "David Winsemius" <dwinsemius at comcast.net> wrote:

>
> On Sep 26, 2015, at 2:06 PM, cstrato wrote:
>
> > Dear Dirk,
> >
> > Yes, I know, however forget for one moment R.
> >
> > If I use tar independent of R it still should not create these hidden
> files.
> >
> > BTW, do you know where these hidden files are stored on the Mac?
>
> Your first posting showed which of several different directories they were
> in. Do you understand that any file whose name starts with a <period> is
> called a "hidden file"? It is "hidden", i.e not displayed in a Finder
> window, from people who are using Finder.app unless you change the default
> settings. It's easy to look up the code that is needed to be pasted into a
> Terminal session. I never remember it. I just leave Finder set up to
> display these 'dotfiles' as they are also called.
>
> defaults write com.apple.finder AppleShowAllFiles YES
>
> killall Finder
>
> #The second command restarts Finder.app or you could try to restart the
> Finder by option (=alt) + rightclicking the Finder icon in the Dock and
> selecting Relaunch.
>
> --
> David.
>
> >
> > Best regards,
> > Christian
> >
> >
> > On 09/26/15 23:01, Dirk Eddelbuettel wrote:
> >>
> >> On 26 September 2015 at 22:41, cstrato wrote:
> >> | Dear Simon,
> >> |
> >> | Thank you very much for your help, it did solve my problems!! Great!
> >> |
> >> | I have googled COPYFILE_DISABLE and found the following site which
> does
> >> | explain the issue with tar on Mac OS X, see:
> >> |
> http://unix.stackexchange.com/questions/9665/create-tar-archive-of-a-directory-except-for-hidden-files
> >> |
> >> | Instead of doing:
> >> | $tar czf xps_1.29.2.tar.gz xps
> >> |
> >> | I did now:
> >> | $COPYFILE_DISABLE=1 tar czf xps_1.29.2.tar.gz xps
> >> |
> >> | Running:
> >> | $R CMD check xps_1.29.2.tar.gz
> >> | now leaves only '.BBSoptions' as hidden file.
> >>
> >> No, still wrong. As Simon said, we all are supposed to use 'R CMD build
> xps'
> >> to create the tarball.  "Back in the day ..." straight tar cfz ...
> worked, it
> >> more or less stopped _many_ years ago.  Cf TheOneManualThatMatters:
> >>
> >>    1.3.1 Checking packages
> >>    -----------------------
> >>
> >>    Using 'R CMD check', the R package checker, one can test whether
> >>    _source_ R packages work correctly.  It can be run on one or more
> >>    directories, or compressed package 'tar' archives with extension
> >>    '.tar.gz', '.tgz', '.tar.bz2' or '.tar.xz'.
> >>
> >>       It is strongly recommended that the final checks are run on a
> 'tar'
> >>    archive prepared by 'R CMD build'.
> >>
> >> Ie "It is strongly recommended ... 'tar' archive prepared by 'R CMD
> build'.
> >>
> >> Dirk
> >>
> >
> > ______________________________________________
> > R-devel at r-project.org mailing list
> > https://stat.ethz.ch/mailman/listinfo/r-devel
>
> David Winsemius
> Alameda, CA, USA
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>

	[[alternative HTML version deleted]]


From simon.urbanek at r-project.org  Sun Sep 27 03:36:17 2015
From: simon.urbanek at r-project.org (Simon Urbanek)
Date: Sat, 26 Sep 2015 21:36:17 -0400
Subject: [Rd] Hidden files problem in R CMD check
In-Reply-To: <560708EE.5070600@aon.at>
References: <5606F246.20902@aon.at>
	<1B413D74-CCFD-4E5B-B6F0-B42D4C1B46E1@r-project.org>
	<560702EA.7090501@aon.at> <22023.1941.346237.222744@max.nulle.part>
	<560708EE.5070600@aon.at>
Message-ID: <3C757FF2-09BE-48EB-976C-53D9D066CE60@r-project.org>


On Sep 26, 2015, at 5:06 PM, cstrato <cstrato at aon.at> wrote:

> Dear Dirk,
> 
> Yes, I know, however forget for one moment R.
> 
> If I use tar independent of R it still should not create these hidden files.
> 
> BTW, do you know where these hidden files are stored on the Mac?
> 

Please consider reading my original reply - those are not actual files (all but .BBSoptions which is an actual file you can see with ls -a), those are just resource forks of files [or extended attributes in general] -- and Apple tar if instructed to preserve resource forks encodes them as ._* in tar balls since tar has no native way of storing resource forks. And, again, as I said in my reply those likely come from some software you may have used (possibly the editor). For example, some editors store the file encoding in xattr. To list them you can use ls -l@ 

Cheers,
Simon



> Best regards,
> Christian
> 
> 
> On 09/26/15 23:01, Dirk Eddelbuettel wrote:
>> 
>> On 26 September 2015 at 22:41, cstrato wrote:
>> | Dear Simon,
>> |
>> | Thank you very much for your help, it did solve my problems!! Great!
>> |
>> | I have googled COPYFILE_DISABLE and found the following site which does
>> | explain the issue with tar on Mac OS X, see:
>> | http://unix.stackexchange.com/questions/9665/create-tar-archive-of-a-directory-except-for-hidden-files
>> |
>> | Instead of doing:
>> | $tar czf xps_1.29.2.tar.gz xps
>> |
>> | I did now:
>> | $COPYFILE_DISABLE=1 tar czf xps_1.29.2.tar.gz xps
>> |
>> | Running:
>> | $R CMD check xps_1.29.2.tar.gz
>> | now leaves only '.BBSoptions' as hidden file.
>> 
>> No, still wrong. As Simon said, we all are supposed to use 'R CMD build xps'
>> to create the tarball.  "Back in the day ..." straight tar cfz ... worked, it
>> more or less stopped _many_ years ago.  Cf TheOneManualThatMatters:
>> 
>>    1.3.1 Checking packages
>>    -----------------------
>> 
>>    Using 'R CMD check', the R package checker, one can test whether
>>    _source_ R packages work correctly.  It can be run on one or more
>>    directories, or compressed package 'tar' archives with extension
>>    '.tar.gz', '.tgz', '.tar.bz2' or '.tar.xz'.
>> 
>>       It is strongly recommended that the final checks are run on a 'tar'
>>    archive prepared by 'R CMD build'.
>> 
>> Ie "It is strongly recommended ... 'tar' archive prepared by 'R CMD build'.
>> 
>> Dirk
>> 
> 


From cstrato at aon.at  Sun Sep 27 09:30:08 2015
From: cstrato at aon.at (cstrato)
Date: Sun, 27 Sep 2015 09:30:08 +0200
Subject: [Rd] Hidden files problem in R CMD check
In-Reply-To: <3C757FF2-09BE-48EB-976C-53D9D066CE60@r-project.org>
References: <5606F246.20902@aon.at>
	<1B413D74-CCFD-4E5B-B6F0-B42D4C1B46E1@r-project.org>
	<560702EA.7090501@aon.at> <22023.1941.346237.222744@max.nulle.part>
	<560708EE.5070600@aon.at>
	<3C757FF2-09BE-48EB-976C-53D9D066CE60@r-project.org>
Message-ID: <56079B00.6000906@aon.at>

Dear Simon,

As  usual you are not only right but also very helpful.
It seems that I did miss your point with '._*' files.

Now, when I do 'ls - at l' I get e.g. in directory /R:

s$ ls - at l
total 1232
-rw-r--r--@ 1 rabbitus  staff    4691 Apr 10 22:07 AffyRNAdeg.R
         com.apple.quarantine        26
-rw-r--r--@ 1 rabbitus  staff    3629 Apr 10 22:07 Constructors.R
         com.apple.quarantine        26
-rw-r--r--@ 1 rabbitus  staff   26283 Apr 10 22:07 TreeSetClasses.R
         com.apple.quarantine        26
...

Thank you and
Best regards,
Christian


On 09/27/15 03:36, Simon Urbanek wrote:
>
> On Sep 26, 2015, at 5:06 PM, cstrato <cstrato at aon.at> wrote:
>
>> Dear Dirk,
>>
>> Yes, I know, however forget for one moment R.
>>
>> If I use tar independent of R it still should not create these hidden files.
>>
>> BTW, do you know where these hidden files are stored on the Mac?
>>
>
> Please consider reading my original reply - those are not actual files (all but .BBSoptions which is an actual file you can see with ls -a), those are just resource forks of files [or extended attributes in general] -- and Apple tar if instructed to preserve resource forks encodes them as ._* in tar balls since tar has no native way of storing resource forks. And, again, as I said in my reply those likely come from some software you may have used (possibly the editor). For example, some editors store the file encoding in xattr. To list them you can use ls -l@
>
> Cheers,
> Simon
>
>
>
>> Best regards,
>> Christian
>>
>>
>> On 09/26/15 23:01, Dirk Eddelbuettel wrote:
>>>
>>> On 26 September 2015 at 22:41, cstrato wrote:
>>> | Dear Simon,
>>> |
>>> | Thank you very much for your help, it did solve my problems!! Great!
>>> |
>>> | I have googled COPYFILE_DISABLE and found the following site which does
>>> | explain the issue with tar on Mac OS X, see:
>>> | http://unix.stackexchange.com/questions/9665/create-tar-archive-of-a-directory-except-for-hidden-files
>>> |
>>> | Instead of doing:
>>> | $tar czf xps_1.29.2.tar.gz xps
>>> |
>>> | I did now:
>>> | $COPYFILE_DISABLE=1 tar czf xps_1.29.2.tar.gz xps
>>> |
>>> | Running:
>>> | $R CMD check xps_1.29.2.tar.gz
>>> | now leaves only '.BBSoptions' as hidden file.
>>>
>>> No, still wrong. As Simon said, we all are supposed to use 'R CMD build xps'
>>> to create the tarball.  "Back in the day ..." straight tar cfz ... worked, it
>>> more or less stopped _many_ years ago.  Cf TheOneManualThatMatters:
>>>
>>>     1.3.1 Checking packages
>>>     -----------------------
>>>
>>>     Using 'R CMD check', the R package checker, one can test whether
>>>     _source_ R packages work correctly.  It can be run on one or more
>>>     directories, or compressed package 'tar' archives with extension
>>>     '.tar.gz', '.tgz', '.tar.bz2' or '.tar.xz'.
>>>
>>>        It is strongly recommended that the final checks are run on a 'tar'
>>>     archive prepared by 'R CMD build'.
>>>
>>> Ie "It is strongly recommended ... 'tar' archive prepared by 'R CMD build'.
>>>
>>> Dirk
>>>
>>
>
>


From adrian at waddell.ch  Mon Sep 28 19:36:14 2015
From: adrian at waddell.ch (Adrian Waddell)
Date: Mon, 28 Sep 2015 19:36:14 +0200
Subject: [Rd] Link R with Tcl 8.6 on Windows
Message-ID: <9D174DCE-E5B2-448B-A46F-A4ACC6552BC2@waddell.ch>

Dear all,

I am working on an R package intended for CRAN that requires Tcl version 8.6 because of the TclOO tcl extension and the -angle option for canvas text items.

R for Windows currently still ships with Tcl 8.5. Does anyone have experience with linking R under Windows to a Tcl interpreter of version 8.6?

When I link R 3.2.2 (installed from the binary on Windows 8) to a custom Tcl installation of version 8.6 (e.g. from ActiveState for both 32bit or 64bit) using the MY_TCLTK environment variable, then loading the tcltk package will result with a tk85.dll not found error. This problem can be ?fixed? by copying and renaming the tk86.dll and the tcl86.dll files in the bin folder of the activetcl installation to tk85.dll and tcl85.dll.

However, this setup does not work well for me; sometimes, when creating a number of involved toplevel windows at once, some of them are not created properly and are left completely unresponsive, see the attached image. I have not managed to create a small contained example so far. But I can share my code, if necessary.

Is there a reason that under Windows R looks for the tk85.dll in particular, effectively forcing the Tcl version to 8.5? Also, does anyone know a remedy to this gui error?

Thanks,

Adrian Waddell


> sessionInfo()
R version 3.2.2 (2015-08-14)
Platform: i386-w64-mingw32/i386 (32-bit)
Running under: Windows 8 x64 (build 9200)

locale:
    [1] LC_COLLATE=English_Canada.1252  LC_CTYPE=English_Canada.1252
[3] LC_MONETARY=English_Canada.1252 LC_NUMERIC=C
[5] LC_TIME=English_Canada.1252

attached base packages:
    [1] tools     tcltk     stats     graphics  grDevices utils     datasets
[8] methods   base

other attached packages:
    [1] loon_0.8.4.4



From kmezhoud at gmail.com  Mon Sep 28 21:28:57 2015
From: kmezhoud at gmail.com (Karim Mezhoud)
Date: Mon, 28 Sep 2015 20:28:57 +0100
Subject: [Rd] Link R with Tcl 8.6 on Windows
In-Reply-To: <9D174DCE-E5B2-448B-A46F-A4ACC6552BC2@waddell.ch>
References: <9D174DCE-E5B2-448B-A46F-A4ACC6552BC2@waddell.ch>
Message-ID: <CALJKBv80RuZWS6zTAZosi8cX5HatrC6jbqDsxKCFZataTYMQng@mail.gmail.com>

Hi,
I Think you can install devel version by:

 devtools::install_github("tcltk/tcl")

from this link https://github.com/tcltk/tcl

Karim



On Mon, Sep 28, 2015 at 6:36 PM, Adrian Waddell <adrian at waddell.ch> wrote:

> Dear all,
>
> I am working on an R package intended for CRAN that requires Tcl version
> 8.6 because of the TclOO tcl extension and the -angle option for canvas
> text items.
>
> R for Windows currently still ships with Tcl 8.5. Does anyone have
> experience with linking R under Windows to a Tcl interpreter of version 8.6?
>
> When I link R 3.2.2 (installed from the binary on Windows 8) to a custom
> Tcl installation of version 8.6 (e.g. from ActiveState for both 32bit or
> 64bit) using the MY_TCLTK environment variable, then loading the tcltk
> package will result with a tk85.dll not found error. This problem can be
> ?fixed? by copying and renaming the tk86.dll and the tcl86.dll files in the
> bin folder of the activetcl installation to tk85.dll and tcl85.dll.
>
> However, this setup does not work well for me; sometimes, when creating a
> number of involved toplevel windows at once, some of them are not created
> properly and are left completely unresponsive, see the attached image. I
> have not managed to create a small contained example so far. But I can
> share my code, if necessary.
>
> Is there a reason that under Windows R looks for the tk85.dll in
> particular, effectively forcing the Tcl version to 8.5? Also, does anyone
> know a remedy to this gui error?
>
> Thanks,
>
> Adrian Waddell
>
>
> > sessionInfo()
> R version 3.2.2 (2015-08-14)
> Platform: i386-w64-mingw32/i386 (32-bit)
> Running under: Windows 8 x64 (build 9200)
>
> locale:
>     [1] LC_COLLATE=English_Canada.1252  LC_CTYPE=English_Canada.1252
> [3] LC_MONETARY=English_Canada.1252 LC_NUMERIC=C
> [5] LC_TIME=English_Canada.1252
>
> attached base packages:
>     [1] tools     tcltk     stats     graphics  grDevices utils
>  datasets
> [8] methods   base
>
> other attached packages:
>     [1] loon_0.8.4.4
>
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>

	[[alternative HTML version deleted]]


From adrian at waddell.ch  Tue Sep 29 02:32:30 2015
From: adrian at waddell.ch (Adrian Waddell)
Date: Tue, 29 Sep 2015 02:32:30 +0200
Subject: [Rd] Link R with Tcl 8.6 on Windows
In-Reply-To: <9D174DCE-E5B2-448B-A46F-A4ACC6552BC2@waddell.ch>
References: <9D174DCE-E5B2-448B-A46F-A4ACC6552BC2@waddell.ch>
Message-ID: <5609DC1E.7020700@waddell.ch>

OK, I have the answers to my questions:

The GUI error in Windows happens for the sequence: create a toplevel in 
Tcl, set an icon, pack something. A small self contained example is:

library(tcltk)

.Tcl("

     set icon [image create photo -width 30 -height 20]

     $icon put blue -to 0 0 30 20; $icon put yellow -to 0 6 30 11



      proc foo {} {

         set i 0

         while {[winfo exists .w$i]} {

             incr i

         }

         toplevel .w$i

         wm iconphoto .w$i $::icon

         canvas .w$i.c -bg steelblue

         pack .w$i.c -fill both -expand TRUE

      }

   ")



.Tcl('foo')

Not setting the icon or replacing the "toplevel .w$i" command with the 
tktoplevel() R callback will fix the problem.

As for linking Tcl version 8.6 with R under Windows: I have compiled R 
against ActiveTcl version 8.6 which works without the necessity of 
copying and renaming the dlls. So far, ActiveTcl 8.6 works well.

Adrian


On 2015-09-28 07:36 PM, Adrian Waddell wrote:
> Dear all,
>
> I am working on an R package intended for CRAN that requires Tcl version
> 8.6 because of the TclOO tcl extension and the -angle option for canvas
> text items.
>
> R for Windows currently still ships with Tcl 8.5. Does anyone have
> experience with linking R under Windows to a Tcl interpreter of version 8.6?
>
> When I link R 3.2.2 (installed from the binary on Windows 8) to a custom
> Tcl installation of version 8.6 (e.g. from ActiveState for both 32bit or
> 64bit) using the MY_TCLTK environment variable, then loading the tcltk
> package will result with a tk85.dll not found error. This problem can be
> ?fixed? by copying and renaming the tk86.dll and the tcl86.dll files in
> the bin folder of the activetcl installation to tk85.dll and tcl85.dll.
>
> However, this setup does not work well for me; sometimes, when creating
> a number of involved toplevel windows at once, some of them are not
> created properly and are left completely unresponsive, see the attached
> image. I have not managed to create a small contained example so far.
> But I can share my code, if necessary.
>
> Is there a reason that under Windows R looks for the tk85.dll in
> particular, effectively forcing the Tcl version to 8.5? Also, does
> anyone know a remedy to this gui error?
>
> Thanks,
>
> Adrian Waddell
>
>
>  > sessionInfo()
> R version 3.2.2 (2015-08-14)
> Platform: i386-w64-mingw32/i386 (32-bit)
> Running under: Windows 8 x64 (build 9200)
>
> locale:
>      [1] LC_COLLATE=English_Canada.1252  LC_CTYPE=English_Canada.1252
> [3] LC_MONETARY=English_Canada.1252 LC_NUMERIC=C
> [5] LC_TIME=English_Canada.1252
>
> attached base packages:
>      [1] tools     tcltk     stats     graphics  grDevices utils
> datasets
> [8] methods   base
>
> other attached packages:
>      [1] loon_0.8.4.4
>
>


From mestre.frederico at gmail.com  Tue Sep 29 12:52:44 2015
From: mestre.frederico at gmail.com (Frederico Mestre)
Date: Tue, 29 Sep 2015 11:52:44 +0100
Subject: [Rd] Error possibly related with environments/namespace
Message-ID: <CAPfBvqx=AQ-VQmXWDaJzi68=5BdBuyUyf9XxpkVw8_kGviaikA@mail.gmail.com>

Hello all,

I've got a problem with a function in a R package I've developed
(MetaLandSim).

One of the outputs of my function is the plotting of four images (combining
a graph and a map). This plotting is made in a graphical device, with the
graph in one side and the map in the other.

My function works perfectly fine until it has to plot the map. Then it
stops and I get an error.

However if I load the exact same function in R it runs perfectly well.

This has something to do with environments, but I can't understand whats
wrong. It is also related with the plotting, since if I set the argument
plot.directions to FALSE I get no error.

Here's the code:

#Loading packages
library(MetaLandSim)
library(rgrass7)

#Loading required data
data(rg_exp)

#Loading required maps
presences <- system.file("examples/presences.asc", package="MetaLandSim")
mask <- system.file("examples/landmask.asc", package="MetaLandSim")

#Start  GRASS using rgrass7
initGRASS("C:/Program Files (x86)/GRASS GIS 7.0.0", home=tempdir())

#Running function
range.map <- range_raster(presences.map=presences, re.out=rg_exp,
mask.map=mask,plot.directions=TRUE)


Cheers,
Frederico Mestre
?

	[[alternative HTML version deleted]]


From murdoch.duncan at gmail.com  Sat Sep 26 12:22:57 2015
From: murdoch.duncan at gmail.com (Duncan Murdoch)
Date: Sat, 26 Sep 2015 07:22:57 -0300
Subject: [Rd] issues with dev.new avoiding RStudio plot device on unix?
In-Reply-To: <56062226.8010005@skyeome.net>
References: <5605982E.5000104@skyeome.net>
	<CAMMJQ0Y2dHA2wjdzNQznEA=cfh7PLdQH4XBBzJcdzoVUx19EMA@mail.gmail.com>
	<56062226.8010005@skyeome.net>
Message-ID: <56067201.4070707@gmail.com>

On 26/09/2015 1:42 AM, Skye Bender-deMoll wrote:
> Sorry, should have given more background.  x11 works fine on all my 
> systems when called by x11().  I'm the maintainer of a package that uses 
> the animation library, which has performance issues when used with the 
> RStudio plot device.  But if you call plot.new() when using RStudio, you 
> get an RStudio device, not the standard device for the platform because 
> it overrides the device option.  So I've had to have the library do 
> platform detection and platform-specific device calls, which R CMD check 
> doesn't like.  I believe that noRStudioGD argument was avoided to give 
> users a way around this, but it doesn't seem to be behaving correctly in 
> the unix interactive case.

It seems like the best workaround here could come from RStudio.  They
could provide a way for a user to indicate that they sometimes don't
want to use the RStudio graphics device (e.g. an option setting), and
your package could set and restore this option around your dev.new() call.

The other seems to be for your package to temporarily set
R_DEFAULT_DEVICE if the user doesn't already have it set, and use
noRStudioGD=TRUE.  The disadvantage of this is that you need to do all
the platform-based decision making.

Duncan
> 
> On 09/25/2015 08:31 PM, Ott Toomet wrote:
>> Can you describe your problem a bit more?
>>
>> * What kind of unix system do you have??
>> * Can you run other X11 programs?
>>
>> I had a similar issue, and the problem was that the computer was not set
>> up to support X11.?  As a minimum, you have to install /xauth/, and
>> potentially also other libraries if you want to install packages from
>> source.
>>
>> Best,
>> Ott
>>
>> On Fri, Sep 25, 2015 at 11:53 AM, Skye Bender-deMoll
>> <skyebend at skyeome.net <mailto:skyebend at skyeome.net>> wrote:
>>
>>     Hi R-devl,
>>
>>     I'm still unable to force opening an *interactive* non-Rstudio
>>     platform-specific plot device on *unix* systems.
>>
>>     dev.new() add a new argument 'noRStudioGD' in R 3.1.1.?  Thank you.
>>     It works for me when using RStudio on Windows, but on the unix
>>     system it opens a pdf device instead of an interactive device when
>>     using an interactive RStudio session (with R_DEFAULT_DEVICE and
>>     R_INTERACIVE_DEVICE not set).
>>
>>     Do other unix RStudio users see this behavior?
>>
>>     It appears that the relevant line of dev.new (and in zzz.R):
>>
>>     ?  ? else if (nzchar(dsp) && .Platform$GUI %in% c("X11", "Tk"))
>>     ?  ?  ?  ?  ?  ?  ? X11
>>     ?  ? else defdev
>>
>>
>>     but when I step through in debugger, I see that
>>
>>     Browse[2]> .Platform$GUI
>>     [1] "RStudio"
>>
>>     so instead of returning X11, it returnd defdev (pdf)
>>
>>     perhaps changing to
>>
>>     .Platform$GUI %in% c("X11", "Tk", "RStudio")
>>
>>     would work, but seems a little strange logically.
>>
>>
>>     best,
>>     ? -skye
>>
>>     p.s.?  I wonder if instead of having a noRStudioGD=TRUE flag, it
>>     might be a more future-proof design to have an
>>     avoid.devices='RStudioGD' argument?  in case users need to induce
>>     similar behavior to avoid other current or future devices??
>>     Probably to late now tho.
>>
>>     ______________________________________________
>>     R-devel at r-project.org <mailto:R-devel at r-project.org> mailing list
>>     https://stat.ethz.ch/mailman/listinfo/r-devel
>>
>>
>>
>>
>> --
>> Ott Toomet
>>
>> Visiting Researcher
>> School of Information
>> Mary Gates Hall, Suite 310
>> University of Washington
>> Seattle, WA 98195
>>
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>


From arnaud.gaboury at gmail.com  Tue Sep 29 18:07:27 2015
From: arnaud.gaboury at gmail.com (arnaud gaboury)
Date: Tue, 29 Sep 2015 18:07:27 +0200
Subject: [Rd] Build R with MKL and ICC
In-Reply-To: <CAFAN8vw53p+dCnr_LroKZbQMw66kwMiXypNBJAZVHhW998Di2g@mail.gmail.com>
References: <CAK1hC9uLYSyA-7W92TwD4J9adcxDRE1a2ig1iDDPSyN43kikyg@mail.gmail.com>
	<CAK1hC9u0btbbXGR3+OAcAd5n3SbFwUHoH+YsT5FzVpaeyZWdEQ@mail.gmail.com>
	<1441382281.4083.26.camel@iarc.fr>
	<CAK1hC9vg0SePBhEbp-Xpt8W1BDH-kY3XTLr39ZHCp2k2MHxUhA@mail.gmail.com>
	<1441621388.4083.54.camel@iarc.fr>
	<CAFAN8vw53p+dCnr_LroKZbQMw66kwMiXypNBJAZVHhW998Di2g@mail.gmail.com>
Message-ID: <CAK1hC9sZKdaWTGxCDQhhPa-nJARfd-WG=ivi8gWpLiL-4BA8VQ@mail.gmail.com>

On Wed, Sep 9, 2015 at 11:26 PM, Nathan Kurz <nate at verse.com> wrote:
>
> As a short and simple approach, I just compiled the current R release
> on Ubuntu with ICC and MKL using just this:
>
> $ tar -xzf R-3.2.2.tar.gz
> $ cd R-3.2.2
> $ CC=icc CXX=icpc AR=xiar LD=xild CFLAGS="-g -O3 -xHost" CXXFLAGS="-g
> -O3 -xHost" ./configure --with-blas="-lmkl_rt -lpthread" --with-lapack
> --enable-memory-profiling --enable-R-shlib
> $ make
> $ sudo make install
> $ R --version
> R version 3.2.2 (2015-08-14) -- "Fire Safety"


That is exactly the right combo: with-blas="-lmkl_rt -lpthread"
Nothing more for $MKL

now
$ ldd bin/exec/R
linux-vdso.so.1 (0x00007ffe305f9000)
libmkl_rt.so => /opt/intel/mkl/lib/intel64_lin/libmkl_rt.so (0x00007f216c9e3000)
        .................................

Thank you

> If you have 'ifort' available, you would probably want to add it to
> the list of environment variables.
>
> --nate
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From skyebend at skyeome.net  Tue Sep 29 20:00:57 2015
From: skyebend at skyeome.net (Skye Bender-deMoll)
Date: Tue, 29 Sep 2015 11:00:57 -0700
Subject: [Rd] issues with dev.new avoiding RStudio plot device on unix?
In-Reply-To: <56067201.4070707@gmail.com>
References: <5605982E.5000104@skyeome.net>
	<CAMMJQ0Y2dHA2wjdzNQznEA=cfh7PLdQH4XBBzJcdzoVUx19EMA@mail.gmail.com>
	<56062226.8010005@skyeome.net> <56067201.4070707@gmail.com>
Message-ID: <560AD1D9.9050900@skyeome.net>



On 09/26/2015 03:22 AM, Duncan Murdoch wrote:
> On 26/09/2015 1:42 AM, Skye Bender-deMoll wrote:
>> Sorry, should have given more background.  x11 works fine on all my
>> systems when called by x11().  I'm the maintainer of a package that uses
>> the animation library, which has performance issues when used with the
>> RStudio plot device.  But if you call plot.new() when using RStudio, you
>> get an RStudio device, not the standard device for the platform because
>> it overrides the device option.  So I've had to have the library do
>> platform detection and platform-specific device calls, which R CMD check
>> doesn't like.  I believe that noRStudioGD argument was avoided to give
>> users a way around this, but it doesn't seem to be behaving correctly in
>> the unix interactive case.
>
> It seems like the best workaround here could come from RStudio.  They
> could provide a way for a user to indicate that they sometimes don't
> want to use the RStudio graphics device (e.g. an option setting), and
> your package could set and restore this option around your dev.new() call.

That would make sense, I've tried to propose they add it as a feature in 
the rstudioapi.  However, since the noRstudioGD option now exists in R, 
I'd think it should behave consistently across platforms?  Opening pdf 
on one and interactive on another seems odd.

>
> The other seems to be for your package to temporarily set
> R_DEFAULT_DEVICE if the user doesn't already have it set, and use
> noRStudioGD=TRUE.  The disadvantage of this is that you need to do all
> the platform-based decision making.

Great idea, I'll employ this workaround for now. Thanks!

best,
  -skye


From nate at verse.com  Tue Sep 29 20:11:59 2015
From: nate at verse.com (Nathan Kurz)
Date: Tue, 29 Sep 2015 11:11:59 -0700
Subject: [Rd] Build R with MKL and ICC
In-Reply-To: <CAK1hC9sZKdaWTGxCDQhhPa-nJARfd-WG=ivi8gWpLiL-4BA8VQ@mail.gmail.com>
References: <CAK1hC9uLYSyA-7W92TwD4J9adcxDRE1a2ig1iDDPSyN43kikyg@mail.gmail.com>
	<CAK1hC9u0btbbXGR3+OAcAd5n3SbFwUHoH+YsT5FzVpaeyZWdEQ@mail.gmail.com>
	<1441382281.4083.26.camel@iarc.fr>
	<CAK1hC9vg0SePBhEbp-Xpt8W1BDH-kY3XTLr39ZHCp2k2MHxUhA@mail.gmail.com>
	<1441621388.4083.54.camel@iarc.fr>
	<CAFAN8vw53p+dCnr_LroKZbQMw66kwMiXypNBJAZVHhW998Di2g@mail.gmail.com>
	<CAK1hC9sZKdaWTGxCDQhhPa-nJARfd-WG=ivi8gWpLiL-4BA8VQ@mail.gmail.com>
Message-ID: <CAFAN8vz0H9TZ4Q3+dkoaMWvrJvK9O9g3=ioXWDS6zCM+YFqfbA@mail.gmail.com>

Hi Arnaud --

I'm glad it's working for you.  I'm not sure I understand your final
answer.  Are you saying that the version I posted worked for you as
given, or that you had to remove some of the other options?

Perhaps you could post the full final recipe in a way that others can
copy and paste if they find this thread in the future?

Also, did you determine if the the same approach worked for linking to
MKL worked when using a non-Intel compiler?   That is, can you
substitute the gcc or clang tool names and get the same result?

--nate

On Tue, Sep 29, 2015 at 9:07 AM, arnaud gaboury
<arnaud.gaboury at gmail.com> wrote:
> On Wed, Sep 9, 2015 at 11:26 PM, Nathan Kurz <nate at verse.com> wrote:
>>
>> As a short and simple approach, I just compiled the current R release
>> on Ubuntu with ICC and MKL using just this:
>>
>> $ tar -xzf R-3.2.2.tar.gz
>> $ cd R-3.2.2
>> $ CC=icc CXX=icpc AR=xiar LD=xild CFLAGS="-g -O3 -xHost" CXXFLAGS="-g
>> -O3 -xHost" ./configure --with-blas="-lmkl_rt -lpthread" --with-lapack
>> --enable-memory-profiling --enable-R-shlib
>> $ make
>> $ sudo make install
>> $ R --version
>> R version 3.2.2 (2015-08-14) -- "Fire Safety"
>
>
> That is exactly the right combo: with-blas="-lmkl_rt -lpthread"
> Nothing more for $MKL
>
> now
> $ ldd bin/exec/R
> linux-vdso.so.1 (0x00007ffe305f9000)
> libmkl_rt.so => /opt/intel/mkl/lib/intel64_lin/libmkl_rt.so (0x00007f216c9e3000)
>         .................................


From murdoch.duncan at gmail.com  Tue Sep 29 22:58:21 2015
From: murdoch.duncan at gmail.com (Duncan Murdoch)
Date: Tue, 29 Sep 2015 16:58:21 -0400
Subject: [Rd] issues with dev.new avoiding RStudio plot device on unix?
In-Reply-To: <560AD1D9.9050900@skyeome.net>
References: <5605982E.5000104@skyeome.net>
	<CAMMJQ0Y2dHA2wjdzNQznEA=cfh7PLdQH4XBBzJcdzoVUx19EMA@mail.gmail.com>
	<56062226.8010005@skyeome.net> <56067201.4070707@gmail.com>
	<560AD1D9.9050900@skyeome.net>
Message-ID: <560AFB6D.5020301@gmail.com>

On 29/09/2015 2:00 PM, Skye Bender-deMoll wrote:
> 
> 
> On 09/26/2015 03:22 AM, Duncan Murdoch wrote:
>> On 26/09/2015 1:42 AM, Skye Bender-deMoll wrote:
>>> Sorry, should have given more background.  x11 works fine on all my
>>> systems when called by x11().  I'm the maintainer of a package that uses
>>> the animation library, which has performance issues when used with the
>>> RStudio plot device.  But if you call plot.new() when using RStudio, you
>>> get an RStudio device, not the standard device for the platform because
>>> it overrides the device option.  So I've had to have the library do
>>> platform detection and platform-specific device calls, which R CMD check
>>> doesn't like.  I believe that noRStudioGD argument was avoided to give
>>> users a way around this, but it doesn't seem to be behaving correctly in
>>> the unix interactive case.
>>
>> It seems like the best workaround here could come from RStudio.  They
>> could provide a way for a user to indicate that they sometimes don't
>> want to use the RStudio graphics device (e.g. an option setting), and
>> your package could set and restore this option around your dev.new() call.
> 
> That would make sense, I've tried to propose they add it as a feature in 
> the rstudioapi.  However, since the noRstudioGD option now exists in R, 
> I'd think it should behave consistently across platforms?  Opening pdf 
> on one and interactive on another seems odd.

The problem is that the device chosen by dev.new() depends on the GUI.
You can see the code that does this in grDevices:::.onLoad.  So in fact
with noRstudioGD=TRUE, the decision is identical to what it is in R:
you only get X11 if your GUI is X11 or Tk, you get pdf otherwise.
It's pretty common to use R on a machine where X11 won't work, so this
makes sense.

Now "RStudio" is common enough nowadays as a GUI so perhaps it should be
added to the list in both places, but I'm not sure that would work when
RStudio is running on a server rather than on the local machine.  I
think the RStudio people would have to make sure this worked, and if
they're doing that, wouldn't it be easier for them to provide the option
themselves?

Duncan Murdoch


>>
>> The other seems to be for your package to temporarily set
>> R_DEFAULT_DEVICE if the user doesn't already have it set, and use
>> noRStudioGD=TRUE.  The disadvantage of this is that you need to do all
>> the platform-based decision making.
> 
> Great idea, I'll employ this workaround for now. Thanks!
> 
> best,
>   -skye
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>


From hpages at fredhutch.org  Tue Sep 29 23:42:55 2015
From: hpages at fredhutch.org (=?UTF-8?B?SGVydsOpIFBhZ8Oocw==?=)
Date: Tue, 29 Sep 2015 14:42:55 -0700
Subject: [Rd] making object.size() more meaningful on environments?
Message-ID: <560B05DF.9020103@fredhutch.org>

Hi,

Currently object.size() is not very useful on environments as it always
returns 56 bytes, no matter how big the environment is:

   env1 <- new.env()
   object.size(env1)  # 56 bytes

   env2 <- new.env(hash=TRUE, size=75000000L)
   object.size(env2)  # 56 bytes

   env3 <- list2env(list(a=runif(25000000), L=LETTERS))
   object.size(env3)  # 56 bytes

This makes it pretty useless on reference class instances and other
objects that use environments internally for caching or other purposes.

What about changing this and make it return something more meaningful?

Cheers,
H.

-- 
Herv? Pag?s

Program in Computational Biology
Division of Public Health Sciences
Fred Hutchinson Cancer Research Center
1100 Fairview Ave. N, M1-B514
P.O. Box 19024
Seattle, WA 98109-1024

E-mail: hpages at fredhutch.org
Phone:  (206) 667-5791
Fax:    (206) 667-1319


From gmbecker at ucdavis.edu  Tue Sep 29 23:51:53 2015
From: gmbecker at ucdavis.edu (Gabriel Becker)
Date: Tue, 29 Sep 2015 14:51:53 -0700
Subject: [Rd] making object.size() more meaningful on environments?
In-Reply-To: <560B05DF.9020103@fredhutch.org>
References: <560B05DF.9020103@fredhutch.org>
Message-ID: <CADwqtCPzwmYLSVoA+9jea5_sO3WUhN8ZseHfm-3yO2Lu2ao99g@mail.gmail.com>

Herve,

The problem then would be that for A a refClass whose fields take up N
bytes (in the sense that you mean), if we do

B <- A

A and B would look like the BOTH take up N bytes, for a total of 2N,
whereas AFAIK R would only be using ~ N + 2*56 bytes, right?

~G



On Tue, Sep 29, 2015 at 2:42 PM, Herv? Pag?s <hpages at fredhutch.org> wrote:

> Hi,
>
> Currently object.size() is not very useful on environments as it always
> returns 56 bytes, no matter how big the environment is:
>
>   env1 <- new.env()
>   object.size(env1)  # 56 bytes
>
>   env2 <- new.env(hash=TRUE, size=75000000L)
>   object.size(env2)  # 56 bytes
>
>   env3 <- list2env(list(a=runif(25000000), L=LETTERS))
>   object.size(env3)  # 56 bytes
>
> This makes it pretty useless on reference class instances and other
> objects that use environments internally for caching or other purposes.
>
> What about changing this and make it return something more meaningful?
>
> Cheers,
> H.
>
> --
> Herv? Pag?s
>
> Program in Computational Biology
> Division of Public Health Sciences
> Fred Hutchinson Cancer Research Center
> 1100 Fairview Ave. N, M1-B514
> P.O. Box 19024
> Seattle, WA 98109-1024
>
> E-mail: hpages at fredhutch.org
> Phone:  (206) 667-5791
> Fax:    (206) 667-1319
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>



-- 
Gabriel Becker, PhD
Computational Biologist
Bioinformatics and Computational Biology
Genentech, Inc.

	[[alternative HTML version deleted]]


From h.wickham at gmail.com  Wed Sep 30 00:02:46 2015
From: h.wickham at gmail.com (Hadley Wickham)
Date: Tue, 29 Sep 2015 17:02:46 -0500
Subject: [Rd] making object.size() more meaningful on environments?
In-Reply-To: <560B05DF.9020103@fredhutch.org>
References: <560B05DF.9020103@fredhutch.org>
Message-ID: <CABdHhvHF-MytBFyzh2EvMaWdcwHRfZt74Zkfgz90+x3FQvduwA@mail.gmail.com>

You might like to try pryr::object_size() :

``` r
library(pryr)
env1 <- new.env()
object_size(env1)
#> 328 B
env2 <- new.env(hash = TRUE, size = 75000000L)
object_size(env2)
#> 600 MB
env3 <- list2env(list(a = runif(2.5e+07), L = LETTERS))
object_size(env3)
#> 200 MB
```

It handles the issue that Gabe mentions:

``` r
a <- list2env(list(a = runif(1e+06)))
object_size(a)
#> 8 MB
b <- new.env()
b$a <- a
b$b <- runif(1e+06)
object_size(b)
#> 16 MB
object_size(a, b)
#> 16 MB
```

You just have to remember that object_size(a) + object_size(b) <=
object_size(a, b).

Hadley

On Tue, Sep 29, 2015 at 4:42 PM, Herv? Pag?s <hpages at fredhutch.org> wrote:
> Hi,
>
> Currently object.size() is not very useful on environments as it always
> returns 56 bytes, no matter how big the environment is:
>
>   env1 <- new.env()
>   object.size(env1)  # 56 bytes
>
>   env2 <- new.env(hash=TRUE, size=75000000L)
>   object.size(env2)  # 56 bytes
>
>   env3 <- list2env(list(a=runif(25000000), L=LETTERS))
>   object.size(env3)  # 56 bytes
>
> This makes it pretty useless on reference class instances and other
> objects that use environments internally for caching or other purposes.
>
> What about changing this and make it return something more meaningful?
>
> Cheers,
> H.
>
> --
> Herv? Pag?s
>
> Program in Computational Biology
> Division of Public Health Sciences
> Fred Hutchinson Cancer Research Center
> 1100 Fairview Ave. N, M1-B514
> P.O. Box 19024
> Seattle, WA 98109-1024
>
> E-mail: hpages at fredhutch.org
> Phone:  (206) 667-5791
> Fax:    (206) 667-1319
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel



-- 
http://had.co.nz/


From hpages at fredhutch.org  Wed Sep 30 00:18:47 2015
From: hpages at fredhutch.org (=?UTF-8?B?SGVydsOpIFBhZ8Oocw==?=)
Date: Tue, 29 Sep 2015 15:18:47 -0700
Subject: [Rd] making object.size() more meaningful on environments?
In-Reply-To: <CADwqtCPzwmYLSVoA+9jea5_sO3WUhN8ZseHfm-3yO2Lu2ao99g@mail.gmail.com>
References: <560B05DF.9020103@fredhutch.org>
	<CADwqtCPzwmYLSVoA+9jea5_sO3WUhN8ZseHfm-3yO2Lu2ao99g@mail.gmail.com>
Message-ID: <560B0E47.6050909@fredhutch.org>

Hi Gabe,

On 09/29/2015 02:51 PM, Gabriel Becker wrote:
> Herve,
>
> The problem then would be that for A a refClass whose fields take up N
> bytes (in the sense that you mean), if we do
>
> B <- A
>
> A and B would look like the BOTH take up N bytes, for a total of 2N,
> whereas AFAIK R would only be using ~ N + 2*56 bytes, right?

Yes, but that's still a *much* better situation than the current one in
my opinion. More generally speaking counting shared memory for each
object (or process) that uses it is a common, sensible, and accepted
approach. No need to look far: a character vector is just a collection
of pointers to stuff that is shared thru the global CHARSXP cache and
AFAIK object.size() takes this stuff into account.

H.

>
> ~G
>
>
>
> On Tue, Sep 29, 2015 at 2:42 PM, Herv? Pag?s <hpages at fredhutch.org
> <mailto:hpages at fredhutch.org>> wrote:
>
>     Hi,
>
>     Currently object.size() is not very useful on environments as it always
>     returns 56 bytes, no matter how big the environment is:
>
>        env1 <- new.env()
>        object.size(env1)  # 56 bytes
>
>        env2 <- new.env(hash=TRUE, size=75000000L)
>        object.size(env2)  # 56 bytes
>
>        env3 <- list2env(list(a=runif(25000000), L=LETTERS))
>        object.size(env3)  # 56 bytes
>
>     This makes it pretty useless on reference class instances and other
>     objects that use environments internally for caching or other purposes.
>
>     What about changing this and make it return something more meaningful?
>
>     Cheers,
>     H.
>
>     --
>     Herv? Pag?s
>
>     Program in Computational Biology
>     Division of Public Health Sciences
>     Fred Hutchinson Cancer Research Center
>     1100 Fairview Ave. N, M1-B514
>     P.O. Box 19024
>     Seattle, WA 98109-1024
>
>     E-mail: hpages at fredhutch.org <mailto:hpages at fredhutch.org>
>     Phone: (206) 667-5791 <tel:%28206%29%20667-5791>
>     Fax: (206) 667-1319 <tel:%28206%29%20667-1319>
>
>     ______________________________________________
>     R-devel at r-project.org <mailto:R-devel at r-project.org> mailing list
>     https://stat.ethz.ch/mailman/listinfo/r-devel
>
>
>
>
> --
> Gabriel Becker, PhD
> Computational Biologist
> Bioinformatics and Computational Biology
> Genentech, Inc.

-- 
Herv? Pag?s

Program in Computational Biology
Division of Public Health Sciences
Fred Hutchinson Cancer Research Center
1100 Fairview Ave. N, M1-B514
P.O. Box 19024
Seattle, WA 98109-1024

E-mail: hpages at fredhutch.org
Phone:  (206) 667-5791
Fax:    (206) 667-1319


From hpages at fredhutch.org  Wed Sep 30 01:03:51 2015
From: hpages at fredhutch.org (=?UTF-8?B?SGVydsOpIFBhZ8Oocw==?=)
Date: Tue, 29 Sep 2015 16:03:51 -0700
Subject: [Rd] making object.size() more meaningful on environments?
In-Reply-To: <560B0E47.6050909@fredhutch.org>
References: <560B05DF.9020103@fredhutch.org>
	<CADwqtCPzwmYLSVoA+9jea5_sO3WUhN8ZseHfm-3yO2Lu2ao99g@mail.gmail.com>
	<560B0E47.6050909@fredhutch.org>
Message-ID: <560B18D7.5020204@fredhutch.org>

On 09/29/2015 03:18 PM, Herv? Pag?s wrote:
> Hi Gabe,
>
> On 09/29/2015 02:51 PM, Gabriel Becker wrote:
>> Herve,
>>
>> The problem then would be that for A a refClass whose fields take up N
>> bytes (in the sense that you mean), if we do
>>
>> B <- A
>>
>> A and B would look like the BOTH take up N bytes, for a total of 2N,
>> whereas AFAIK R would only be using ~ N + 2*56 bytes, right?

Of course I should also add that this is actually the situation with
any object in R, not just refClass objects, because of the
copy-on-modification trick.

H.

>
> Yes, but that's still a *much* better situation than the current one in
> my opinion. More generally speaking counting shared memory for each
> object (or process) that uses it is a common, sensible, and accepted
> approach. No need to look far: a character vector is just a collection
> of pointers to stuff that is shared thru the global CHARSXP cache and
> AFAIK object.size() takes this stuff into account.
>
> H.
>
>>
>> ~G
>>
>>
>>
>> On Tue, Sep 29, 2015 at 2:42 PM, Herv? Pag?s <hpages at fredhutch.org
>> <mailto:hpages at fredhutch.org>> wrote:
>>
>>     Hi,
>>
>>     Currently object.size() is not very useful on environments as it
>> always
>>     returns 56 bytes, no matter how big the environment is:
>>
>>        env1 <- new.env()
>>        object.size(env1)  # 56 bytes
>>
>>        env2 <- new.env(hash=TRUE, size=75000000L)
>>        object.size(env2)  # 56 bytes
>>
>>        env3 <- list2env(list(a=runif(25000000), L=LETTERS))
>>        object.size(env3)  # 56 bytes
>>
>>     This makes it pretty useless on reference class instances and other
>>     objects that use environments internally for caching or other
>> purposes.
>>
>>     What about changing this and make it return something more
>> meaningful?
>>
>>     Cheers,
>>     H.
>>
>>     --
>>     Herv? Pag?s
>>
>>     Program in Computational Biology
>>     Division of Public Health Sciences
>>     Fred Hutchinson Cancer Research Center
>>     1100 Fairview Ave. N, M1-B514
>>     P.O. Box 19024
>>     Seattle, WA 98109-1024
>>
>>     E-mail: hpages at fredhutch.org <mailto:hpages at fredhutch.org>
>>     Phone: (206) 667-5791 <tel:%28206%29%20667-5791>
>>     Fax: (206) 667-1319 <tel:%28206%29%20667-1319>
>>
>>     ______________________________________________
>>     R-devel at r-project.org <mailto:R-devel at r-project.org> mailing list
>>     https://stat.ethz.ch/mailman/listinfo/r-devel
>>
>>
>>
>>
>> --
>> Gabriel Becker, PhD
>> Computational Biologist
>> Bioinformatics and Computational Biology
>> Genentech, Inc.
>

-- 
Herv? Pag?s

Program in Computational Biology
Division of Public Health Sciences
Fred Hutchinson Cancer Research Center
1100 Fairview Ave. N, M1-B514
P.O. Box 19024
Seattle, WA 98109-1024

E-mail: hpages at fredhutch.org
Phone:  (206) 667-5791
Fax:    (206) 667-1319


From paul at stat.auckland.ac.nz  Wed Sep 30 04:35:41 2015
From: paul at stat.auckland.ac.nz (Paul Murrell)
Date: Wed, 30 Sep 2015 15:35:41 +1300
Subject: [Rd] grDevice in R HEAD been broken for 6 weeks.
In-Reply-To: <1443253170.62261.YahooMailBasic@web172303.mail.ir2.yahoo.com>
References: <1443253170.62261.YahooMailBasic@web172303.mail.ir2.yahoo.com>
Message-ID: <560B4A7D.4090808@stat.auckland.ac.nz>

Hi

This should be fixed in r-devel r69442.

Thanks very much for reporting the problem!

Paul

On 26/09/15 19:39, Hin-Tak Leung wrote:
> geDevice has been failing check for 6 weeks now with --enable-strict-barrier ,
> bisected to:
>
> ------------------------------------------------------------------------
> r69049 | murrell | 2015-08-14 00:03:12 +0100 (Fri, 14 Aug 2015) | 2 lines
>
> first hack at adding grid display list to recorded plot objects, so can add further grid drawing following a replayPlot()
>
> ------------------------------------------------------------------------
>
> It seems to be broken by the GE_SaveSnapshotState addition
> in src/library/grid/src/state.c:
>
>       case GE_SaveSnapshotState:
> +        /*
> +         * Save the current 'grid' DL.
> +         */
> +        PROTECT(result = allocVector(VECSXP, 3));
> +        SET_VECTOR_ELT(result, 0, gridStateElement(dd, GSS_DL));
> +        SET_VECTOR_ELT(result, 1, gridStateElement(dd, GSS_DLINDEX));
> +        UNPROTECT(1);
>          break;
>
>> showCols2()
> Loading required package: grid
> Error in grDevices:::recordPalette() :
>    LOGICAL() can only be applied to a 'logical', not a 'list'
> Calls: demo ... eval -> eval -> showCols2 -> grid.newpage -> <Anonymous>
> Execution halted
>
> somewhere else it seems to expect the outcome of GE_SaveSnapshotState to be
> a logical array rather than a list, though I cannot find where it is.
>
> Any chance of that getting fixed any time soon?
>

-- 
Dr Paul Murrell
Department of Statistics
The University of Auckland
Private Bag 92019
Auckland
New Zealand
64 9 3737599 x85392
paul at stat.auckland.ac.nz
http://www.stat.auckland.ac.nz/~paul/


From arnaud.gaboury at gmail.com  Wed Sep 30 12:18:32 2015
From: arnaud.gaboury at gmail.com (arnaud gaboury)
Date: Wed, 30 Sep 2015 12:18:32 +0200
Subject: [Rd] Build R with MKL and ICC
In-Reply-To: <CAFAN8vz0H9TZ4Q3+dkoaMWvrJvK9O9g3=ioXWDS6zCM+YFqfbA@mail.gmail.com>
References: <CAK1hC9uLYSyA-7W92TwD4J9adcxDRE1a2ig1iDDPSyN43kikyg@mail.gmail.com>
	<CAK1hC9u0btbbXGR3+OAcAd5n3SbFwUHoH+YsT5FzVpaeyZWdEQ@mail.gmail.com>
	<1441382281.4083.26.camel@iarc.fr>
	<CAK1hC9vg0SePBhEbp-Xpt8W1BDH-kY3XTLr39ZHCp2k2MHxUhA@mail.gmail.com>
	<1441621388.4083.54.camel@iarc.fr>
	<CAFAN8vw53p+dCnr_LroKZbQMw66kwMiXypNBJAZVHhW998Di2g@mail.gmail.com>
	<CAK1hC9sZKdaWTGxCDQhhPa-nJARfd-WG=ivi8gWpLiL-4BA8VQ@mail.gmail.com>
	<CAFAN8vz0H9TZ4Q3+dkoaMWvrJvK9O9g3=ioXWDS6zCM+YFqfbA@mail.gmail.com>
Message-ID: <CAK1hC9uEvrvsAob9hPUaFM1RVY8dYWun3udfqZT21fw2Gy1SpQ@mail.gmail.com>

On Tue, Sep 29, 2015 at 8:11 PM, Nathan Kurz <nate at verse.com> wrote:
> Hi Arnaud --
>
> I'm glad it's working for you.  I'm not sure I understand your final
> answer.  Are you saying that the version I posted worked for you as
> given, or that you had to remove some of the other options?

I say it works perfectly when using the single dynamic library
(lmkl_rt):  MKL=" -L${_mkllibpath} -lmkl_rt -lpthread -lm"
N.B: not sure the -lm is needed, and It builds without it. It seems it
may trigger some issues on. See[0]. Thus I removed it

> Perhaps you could post the full final recipe in a way that others can
> copy and paste if they find this thread in the future?

Here it is. The script is writen for Parallel studio 2016. Change path
accordingly if composerxe 2015.
libRlib and libRblas are build as shared librairies. It build with
static libraries too.
More options can be added to configure.
Best is to source mklvars and compilervars in a script so it won't
polluated your shell environment once the build is done.

---------------------------------------------------------------
#! /bin/sh

source /opt/intel/compilers_and_libraries_2016.0.109/linux/mkl/bin/mklvars.sh
intel64
source /opt/intel/bin/compilervars.sh intel64

_icclibpath=/opt/intel/compilers_and_lbraries_2016.0.109/linux/compiler/lib/intel64/
_mkllibpath=${MKLROOT}/lib/intel64/
_omp_lib=/opt/intel/lib/intel64/

MKL=" -L${_mkllibpath} -lmkl_rt -lpthread"

export CC="icc"
export CXX="icpc"
export AR="xiar"
export LD="xild"
export F77="ifort"

export CFLAGS="-g -O3 -xHost -I${MKLROOT}/include"
export CXXFLAGS="-g -O3 -xHost -I${MKLROOT}/include"
export FFLAGS="-I${MKLROOT}/include"
export FCFLAGS="-I${MKLROOT}/include"

# shared libs
./configure --with-blas="${MKL}" --enable-R-shlib --enable-BLAS-shlib
# static libs
./configure --with-blas="${MKL}" --with-lapack

make -j4
----------------------------------------------------------------------------------------------

from inside the build folder:
-------------------------
$ldd bin/exec/R
linux-vdso.so.1 (0x00007ffc1e853000)
libR.so => /usr/lib64/R/lib/libR.so (0x00007f747091f000)
libRblas.so => not found         !! is not yet installed in the machine !!
libm.so.6 => /lib64/libm.so.6 (0x00007f7470616000)
libiomp5.so => /opt/intel/lib/intel64_lin/libiomp5.so (0x00007f74702d5000)
libgcc_s.so.1 => /lib64/libgcc_s.so.1 (0x00007f74700be000)
libpthread.so.0 => /lib64/libpthread.so.0 (0x00007f746fea1000)
libc.so.6 => /lib64/libc.so.6 (0x00007f746fae1000)
libdl.so.2 => /lib64/libdl.so.2 (0x00007f746f8dd000)
libblas.so.3 => not found         !! we don't need it !!
libgfortran.so.3 => /lib64/libgfortran.so.3 (0x00007f746f5b1000)
libquadmath.so.0 => /lib64/libquadmath.so.0 (0x00007f746f372000)
libreadline.so.6 => /lib64/libreadline.so.6 (0x00007f746f127000)
libtre.so.5 => /lib64/libtre.so.5 (0x00007f746ef17000)
libpcre.so.1 => /lib64/libpcre.so.1 (0x00007f746eca7000)
liblzma.so.5 => /lib64/liblzma.so.5 (0x00007f746ea80000)
libbz2.so.1 => /lib64/libbz2.so.1 (0x00007f746e870000)
libz.so.1 => /lib64/libz.so.1 (0x00007f746e65a000)
librt.so.1 => /lib64/librt.so.1 (0x00007f746e451000)
libicuuc.so.54 => /lib64/libicuuc.so.54 (0x00007f746e0c0000)
libicui18n.so.54 => /lib64/libicui18n.so.54 (0x00007f746dc69000)
libgomp.so.1 => /lib64/libgomp.so.1 (0x00007f746da46000)
/lib64/ld-linux-x86-64.so.2 (0x000055fcb8058000)
libtinfo.so.5 => /lib64/libtinfo.so.5 (0x00007f746d81c000)
libicudata.so.54 => /lib64/libicudata.so.54 (0x00007f746bdf0000)
libstdc++.so.6 => /lib64/libstdc++.so.6 (0x00007f746ba6e000)

$ ldd lib/libRblas.so
linux-vdso.so.1 (0x00007ffc5f3da000)
libmkl_rt.so => /opt/intel/mkl/lib/intel64_lin/libmkl_rt.so (0x00007f232203e000)
libpthread.so.0 => /lib64/libpthread.so.0 (0x00007f2321e21000)
libm.so.6 => /lib64/libm.so.6 (0x00007f2321b19000)
libimf.so => /opt/intel/lib/intel64_lin/libimf.so (0x00007f2321621000)
libsvml.so => /opt/intel/lib/intel64_lin/libsvml.so (0x00007f2320762000)
libirng.so => /opt/intel/lib/intel64_lin/libirng.so (0x00007f2320559000)
libiomp5.so => /opt/intel/lib/intel64_lin/libiomp5.so (0x00007f2320218000)
libgcc_s.so.1 => /lib64/libgcc_s.so.1 (0x00007f2320001000)
libintlc.so.5 => /opt/intel/lib/intel64_lin/libintlc.so.5 (0x00007f231fda1000)
libc.so.6 => /lib64/libc.so.6 (0x00007f231f9e1000)
libdl.so.2 => /lib64/libdl.so.2 (0x00007f231f7dd000)
/lib64/ld-linux-x86-64.so.2 (0x000055ce12e09000)
--------------------------------------------------------------------------


>
> Also, did you determine if the the same approach worked for linking to
> MKL worked when using a non-Intel compiler?   That is, can you
> substitute the gcc or clang tool names and get the same result?

No. I was not enable to do it with gcc. More tries are needed with
some variations.
>
> --nate
>
> On Tue, Sep 29, 2015 at 9:07 AM, arnaud gaboury
> <arnaud.gaboury at gmail.com> wrote:
>> On Wed, Sep 9, 2015 at 11:26 PM, Nathan Kurz <nate at verse.com> wrote:
>>>
>>> As a short and simple approach, I just compiled the current R release
>>> on Ubuntu with ICC and MKL using just this:
>>>
>>> $ tar -xzf R-3.2.2.tar.gz
>>> $ cd R-3.2.2
>>> $ CC=icc CXX=icpc AR=xiar LD=xild CFLAGS="-g -O3 -xHost" CXXFLAGS="-g
>>> -O3 -xHost" ./configure --with-blas="-lmkl_rt -lpthread" --with-lapack
>>> --enable-memory-profiling --enable-R-shlib
>>> $ make
>>> $ sudo make install
>>> $ R --version
>>> R version 3.2.2 (2015-08-14) -- "Fire Safety"
>>
>>
>> That is exactly the right combo: with-blas="-lmkl_rt -lpthread"
>> Nothing more for $MKL
>>
>> now
>> $ ldd bin/exec/R
>> linux-vdso.so.1 (0x00007ffe305f9000)
>> libmkl_rt.so => /opt/intel/mkl/lib/intel64_lin/libmkl_rt.so (0x00007f216c9e3000)
>>         .................................


[0]https://software.intel.com/en-us/search/site/language/en?query=-lm
-- 

google.com/+arnaudgabourygabx


From Roger.Bivand at nhh.no  Wed Sep 30 12:55:34 2015
From: Roger.Bivand at nhh.no (Roger Bivand)
Date: Wed, 30 Sep 2015 10:55:34 +0000
Subject: [Rd] Error possibly related with environments/namespace
References: <CAPfBvqx=AQ-VQmXWDaJzi68=5BdBuyUyf9XxpkVw8_kGviaikA@mail.gmail.com>
Message-ID: <loom.20150930T124117-119@post.gmane.org>

Frederico Mestre <mestre.frederico <at> gmail.com> writes:

> 
> Hello all,
> 
> I've got a problem with a function in a R package I've developed
> (MetaLandSim).
> 

The function with the problem is a GRASS script embedded in a portmanteau
function (doing too much at once). This list is not appropriate, and
http://lists.osgeo.org/mailman/listinfo/grass-stats would be much more
appropriate, as this has nothing to do with the development of R internals.

The function should return an S3 object (list of objects) with plot and
summary methods. Then you can see where problems are happening.

> 
> However if I load the exact same function in R it runs perfectly well.
> 
> This has something to do with environments, but I can't understand whats
> wrong. It is also related with the plotting, since if I set the argument
> plot.directions to FALSE I get no error.
> 
> Here's the code:
> 
> #Loading packages
> library(MetaLandSim)
> library(rgrass7)
> 
> #Loading required data
> data(rg_exp)
> 
> #Loading required maps
> presences <- system.file("examples/presences.asc", package="MetaLandSim")
> mask <- system.file("examples/landmask.asc", package="MetaLandSim")
> 
> #Start  GRASS using rgrass7
> initGRASS("C:/Program Files (x86)/GRASS GIS 7.0.0", home=tempdir())
> 
> #Running function
> range.map <- range_raster(presences.map=presences, re.out=rg_exp,
> mask.map=mask,plot.directions=TRUE)

The example fails because you expect a mask to be set, and remove it - if it
isn't there, the GRASS script fails. Adding:

execGRASS("r.mask", raster="map.mask") gets me further, but isn't the
problem, which is (in this case):

Browse[2]> 
debug: image(raster(readRAST("Nprobability")), main = "Northern probability")
Browse[2]> 
Creating BIL support files...
Exporting raster as floating values (bytes=8)
 100%
Error in image.default(raster(readRAST("Nprobability")), main = "Northern
probability") : 
  'z' must be a matrix

so there is an issue here, which might be addressed by raster::raster
(untried). Main take-home point - write simple functions and leave plota and
summaries to methods used on the output objects - anything else is hard to
debug and maintain.

Hope this clarifies,

Roger


> 
> Cheers,
> Frederico Mestre
> ?
> 

