From henr|k@bengt@@on @end|ng |rom gm@||@com  Mon Dec  5 23:19:09 2022
From: henr|k@bengt@@on @end|ng |rom gm@||@com (Henrik Bengtsson)
Date: Mon, 5 Dec 2022 14:19:09 -0800
Subject: [Rd] 
 R-devel: toLatex() for sessionInfo needs to escape new 'Time
 zone' entry
In-Reply-To: <CAFDcVCSjtrHNOXMm7zDDau7FgyK=Chv1eTDVafj4hi0tRT6b_Q@mail.gmail.com>
References: <CAFDcVCSjtrHNOXMm7zDDau7FgyK=Chv1eTDVafj4hi0tRT6b_Q@mail.gmail.com>
Message-ID: <CAFDcVCS5L81zNDO4QVHDCLxeAaD7xEN9QXbur9gT0M-__ewWWA@mail.gmail.com>

I've moved this to https://bugs.r-project.org/show_bug.cgi?id=18443.

/Henrik

On Wed, Nov 30, 2022 at 2:03 PM Henrik Bengtsson
<henrik.bengtsson at gmail.com> wrote:
>
> BACKGROUND:
>
> In recent versions of R-devel, sessionInfo() has a 'tzone' element, e.g.
>
> > sessionInfo()$tzone
> [1] "America/Los_Angeles"
>
>
> ISSUE:
>
> Some time zones, like the one above, has an underscore.  This
> underscore is *not* escaped by utils:::toLatex.sessionInfo, e.g.
>
> $ TZ="America/Los_Angeles" Rscript --vanilla -e "toLatex(sessionInfo())"
> \begin{itemize}\raggedright
>   \item R Under development (unstable) (2022-11-30 r83391),
> \verb|x86_64-pc-linux-gnu|
>   \item Locale: \verb|LC_CTYPE=en_US.UTF-8|, \verb|LC_NUMERIC=C|,
> \verb|LC_TIME=en_US.UTF-8|, \verb|LC_COLLATE=en_US.UTF-8|,
> \verb|LC_MONETARY=en_US.UTF-8|, \verb|LC_MESSAGES=en_US.UTF-8|,
> \verb|LC_PAPER=en_US.UTF-8|, \verb|LC_NAME=C|, \verb|LC_ADDRESS=C|,
> \verb|LC_TELEPHONE=C|, \verb|LC_MEASUREMENT=en_US.UTF-8|,
> \verb|LC_IDENTIFICATION=C|
>   \item Time zone America/Los_Angeles
>   \item Running under: \verb|Ubuntu 20.04.5 LTS|
>   \item Matrix products: default
>   \item BLAS:   \verb|/home/hb/software/R-devel/trunk/lib/R/lib/libRblas.so|
>   \item LAPACK: \verb|/home/hb/software/R-devel/trunk/lib/R/lib/libRlapack.so|
>   \item Base packages: base, datasets, graphics, grDevices, methods,
>     stats, utils
>   \item Loaded via a namespace (and not attached): compiler~4.3.0
> \end{itemize}
>
> This causes LaTeX-based vignettes using toLatex(sessionInfo()) to fail
> their LaTeX compilation with an error, e.g.
>
> Error: processing vignette 'mypkg.Rnw' failed with diagnostics:
> Running 'texi2dvi' on 'mypkg.tex' failed.
> LaTeX errors:
> ! Missing $ inserted.
> <inserted text>
>                 $
> l.684   \item Time zone America/Los_
>                                     Angeles
> ! LaTeX Error: Command \item invalid in math mode.
>
>
> SUGGESTION:
>
> To fix this, either escape any underscores, e.g.
>
>   \item Time zone America/Los\_Angeles
>
> or use \verb as done elsewhere:
>
>   \item Time zone \verb|America/Los_Angeles|
>
> /Henrik


From @pencer@gr@ve@ @end|ng |rom e||ect|vede|en@e@org  Fri Dec  9 01:12:34 2022
From: @pencer@gr@ve@ @end|ng |rom e||ect|vede|en@e@org (Spencer Graves)
Date: Thu, 8 Dec 2022 18:12:34 -0600
Subject: [Rd] unlist preserve common class?
Message-ID: <1de177a0-7373-d878-7edd-411fd53aa2fc@effectivedefense.org>

Consider:


 > str(unlist(list(Sys.Date())))
  num 19334


 > str(unlist(list(factor('a'))))
  Factor w/ 1 level "a": 1


	  I naively expected "str(unlist(list(Sys.Date())))" to return an 
object of class 'Date'.  After some thought, I felt a need to ask this 
list if they think that the core R language might benefit from modifying 
the language so "str(unlist(list(Sys.Date())))" was of class 'Date', at 
least as an option.


	  Comments?
	  Thanks,
	  Spencer Graves


 > sessionInfo()
R version 4.2.2 (2022-10-31)
Platform: x86_64-apple-darwin17.0 (64-bit)
Running under: macOS Big Sur 11.7.1

Matrix products: default
LAPACK: 
/Library/Frameworks/R.framework/Versions/4.2/Resources/lib/libRlapack.dylib

locale:
[1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8

attached base packages:
[1] stats     graphics  grDevices utils     datasets  methods   base

loaded via a namespace (and not attached):
[1] compiler_4.2.2 tools_4.2.2


From g@bembecker @end|ng |rom gm@||@com  Fri Dec  9 03:20:26 2022
From: g@bembecker @end|ng |rom gm@||@com (Gabriel Becker)
Date: Thu, 8 Dec 2022 18:20:26 -0800
Subject: [Rd] unlist preserve common class?
In-Reply-To: <1de177a0-7373-d878-7edd-411fd53aa2fc@effectivedefense.org>
References: <1de177a0-7373-d878-7edd-411fd53aa2fc@effectivedefense.org>
Message-ID: <CAD4oTHFOkAGT1APipWNSpb_57vc6LCAeZbOK4kBydiCiem-ZZg@mail.gmail.com>

Hi Spencer,

My 2c.

According to the docs, factors are special-cased. Other S3 'classes' could
be special-cased, such as Date in your example, I suppose, but it is not
clear how what you're describing could be implemented for the general case.

Suppose I define an S3 "class" called my_awesome_class, and have a list of
3 of them in it, and no other guarantees are provided. What should, or even
could, R do in the case of unlist(list_of_awesomes)?

There is no guarantee that I as an S3 developer have provided a c method
for my class such that we could say the unlist call above is equivalent
(roughly) to do.call(c, list_of_awesomes), nor that I provided any other
particular "mash this set of my_awesome_class objects into one". Nor is it
even guaranteed that the concept of combining my_awesome_class objects is
even coherent, or would produce a new my_awesome_class object when
performed if it is.

That said, your example was of length one, we could special case (the
default method of) unlist so that for x *not a list*, we're guaranteed that

identical(unlist(list(x)), x) == TRUE

This would simplify certain code, such as the one from your motivating
example, but at the cost of making the output of unlist across inputs less
consistent and less easy to reason about and predict. In other words the
answer to the question "what class is unlist(list_of_awesomes)? " would
become "it depends on how many of them are in the list"... That wouldn't be
a good thing on balance, imho.

Best,
~G

On Thu, Dec 8, 2022 at 5:44 PM Spencer Graves <
spencer.graves at effectivedefense.org> wrote:

> Consider:
>
>
>  > str(unlist(list(Sys.Date())))
>   num 19334
>
>
>  > str(unlist(list(factor('a'))))
>   Factor w/ 1 level "a": 1
>
>
>           I naively expected "str(unlist(list(Sys.Date())))" to return an
> object of class 'Date'.  After some thought, I felt a need to ask this
> list if they think that the core R language might benefit from modifying
> the language so "str(unlist(list(Sys.Date())))" was of class 'Date', at
> least as an option.
>
>
>           Comments?
>           Thanks,
>           Spencer Graves
>
>
>  > sessionInfo()
> R version 4.2.2 (2022-10-31)
> Platform: x86_64-apple-darwin17.0 (64-bit)
> Running under: macOS Big Sur 11.7.1
>
> Matrix products: default
> LAPACK:
> /Library/Frameworks/R.framework/Versions/4.2/Resources/lib/libRlapack.dylib
>
> locale:
> [1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8
>
> attached base packages:
> [1] stats     graphics  grDevices utils     datasets  methods   base
>
> loaded via a namespace (and not attached):
> [1] compiler_4.2.2 tools_4.2.2
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>

	[[alternative HTML version deleted]]


From @pencer@gr@ve@ @end|ng |rom e||ect|vede|en@e@org  Fri Dec  9 05:21:07 2022
From: @pencer@gr@ve@ @end|ng |rom e||ect|vede|en@e@org (Spencer Graves)
Date: Thu, 8 Dec 2022 22:21:07 -0600
Subject: [Rd] unlist preserve common class?
In-Reply-To: <CAD4oTHFOkAGT1APipWNSpb_57vc6LCAeZbOK4kBydiCiem-ZZg@mail.gmail.com>
References: <1de177a0-7373-d878-7edd-411fd53aa2fc@effectivedefense.org>
 <CAD4oTHFOkAGT1APipWNSpb_57vc6LCAeZbOK4kBydiCiem-ZZg@mail.gmail.com>
Message-ID: <05625875-f069-f5ce-008d-84e8eec2b5ea@effectivedefense.org>

Hi, Gabriel:


On 12/8/22 8:20 PM, Gabriel Becker wrote:
> Hi Spencer,
> 
> My 2c.
> 
> According to the docs, factors are special-cased. Other S3 'classes' 
> could be special-cased, such as Date in your example, I suppose, but it 
> is not clear how what you're describing could be implemented for the 
> general case.
> 
> Suppose I define an S3 "class" called my_awesome_class, and have a list 
> of 3 of them in it, and no other guarantees are provided. What should, 
> or even could, R do in the case of unlist(list_of_awesomes)?
> 
> There is no guarantee that I as an S3 developer have provided a c method 
> for my class such that we could say the unlist call above is equivalent 
> (roughly) to do.call(c, list_of_awesomes), nor that I provided any other 
> particular "mash this set of my_awesome_class objects into one". Nor is 
> it even guaranteed that the concept of combining my_awesome_classobjects 
> is even coherent, or would produce a new my_awesome_classobject when 
> performed if it is.


	  What about adding another argument to create, e.g.,


unlist(x, recursive = TRUE, use.names = TRUE, attributeFunction=NULL)


	  Then assign the assign the results of the current "unlist(x, ...)" 
to, say, "ux", and follow that by



if(!is.null(attributeFunction))attributes(ux) <- attributeFunction(x)


return(ux)


	  An alternative could be to have a default attributeFunction, that 
computes the attributes of each component of x and keeps only the ones 
that are shared by all components of x.  This would be the same as the 
current behavior for factors IF each component had the same factor 
levels and would drop attributes that are different between components. 
For S4 classes, if the attributes were not ALL identical, then all the 
attributes would be dropped, as with the current behavior.  This should 
not be a problem for S3 generics, because they should always check to 
make sure all the required attributes are available.

> 
> That said, your example was of length one, 


	  My example was of length one to provide a minimal, self-contained 
example.  That was motivated by a more complicated example, which took 
me a couple of hours to understand why it wasn't working as I expected ;-)


	  Thanks for your reply.


	  Spencer Graves


we could special case (the
> default method of) unlist so that for x /not a list/, we're guaranteed that
> 
> identical(unlist(list(x)), x) == TRUE
> 
> This would simplify certain code, such as the one from your motivating 
> example, but at the cost of making the output of unlist across inputs 
> less consistent and less easy to reason about and predict. In other 
> words the answer to the question "what class is 
> unlist(list_of_awesomes)? " would become "it depends on how many of them 
> are in the list"... That wouldn't be a good thing on balance, imho.
> 
> Best,
> ~G
> 
> On Thu, Dec 8, 2022 at 5:44 PM Spencer Graves 
> <spencer.graves at effectivedefense.org 
> <mailto:spencer.graves at effectivedefense.org>> wrote:
> 
>     Consider:
> 
> 
>      ?> str(unlist(list(Sys.Date())))
>      ? num 19334
> 
> 
>      ?> str(unlist(list(factor('a'))))
>      ? Factor w/ 1 level "a": 1
> 
> 
>      ? ? ? ? ? I naively expected "str(unlist(list(Sys.Date())))" to
>     return an
>     object of class 'Date'.? After some thought, I felt a need to ask this
>     list if they think that the core R language might benefit from
>     modifying
>     the language so "str(unlist(list(Sys.Date())))" was of class 'Date', at
>     least as an option.
> 
> 
>      ? ? ? ? ? Comments?
>      ? ? ? ? ? Thanks,
>      ? ? ? ? ? Spencer Graves
> 
> 
>      ?> sessionInfo()
>     R version 4.2.2 (2022-10-31)
>     Platform: x86_64-apple-darwin17.0 (64-bit)
>     Running under: macOS Big Sur 11.7.1
> 
>     Matrix products: default
>     LAPACK:
>     /Library/Frameworks/R.framework/Versions/4.2/Resources/lib/libRlapack.dylib
> 
>     locale:
>     [1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8
> 
>     attached base packages:
>     [1] stats? ? ?graphics? grDevices utils? ? ?datasets? methods? ?base
> 
>     loaded via a namespace (and not attached):
>     [1] compiler_4.2.2 tools_4.2.2
> 
>     ______________________________________________
>     R-devel at r-project.org <mailto:R-devel at r-project.org> mailing list
>     https://stat.ethz.ch/mailman/listinfo/r-devel
>     <https://stat.ethz.ch/mailman/listinfo/r-devel>
>


From g@bembecker @end|ng |rom gm@||@com  Fri Dec  9 09:44:16 2022
From: g@bembecker @end|ng |rom gm@||@com (Gabriel Becker)
Date: Fri, 9 Dec 2022 00:44:16 -0800
Subject: [Rd] unlist preserve common class?
In-Reply-To: <05625875-f069-f5ce-008d-84e8eec2b5ea@effectivedefense.org>
References: <1de177a0-7373-d878-7edd-411fd53aa2fc@effectivedefense.org>
 <CAD4oTHFOkAGT1APipWNSpb_57vc6LCAeZbOK4kBydiCiem-ZZg@mail.gmail.com>
 <05625875-f069-f5ce-008d-84e8eec2b5ea@effectivedefense.org>
Message-ID: <CAD4oTHHK9H-xM9qpiDhJrEUmm=aEGEEBURG2yhc0P7apQYUbCw@mail.gmail.com>

Hi Spencer,

Another, potentially somewhat less disruptive/more general option would be
to add a stop.at.object or stop.at.nonlist (or alternatively list.only)
argument, which would basically translate to "collapse the list structure
to flat, but don't try to combine the leaf elements within the list. You
could then do whatever you wanted to said now-flat list as a second call.

i.e.,

flatlist <- unlist(structured_list, list.only = TRUE)
final_res <- cool_combiner_fun(flatlist)

I had to do something similar years ago when I was implementing xpath for
arbitrary R objects, because you can, e.g., always get x[1] out of x
infinitely many times, so I defined "Stopping functions". The fully general
case would be to do the same here, and accept, e.g., stopping.cond, but
that is probably too complex for unlist and might simply belong as a
completely separate function.

Best,
~G

On Thu, Dec 8, 2022 at 8:21 PM Spencer Graves <
spencer.graves at effectivedefense.org> wrote:

> Hi, Gabriel:
>
>
> On 12/8/22 8:20 PM, Gabriel Becker wrote:
> > Hi Spencer,
> >
> > My 2c.
> >
> > According to the docs, factors are special-cased. Other S3 'classes'
> > could be special-cased, such as Date in your example, I suppose, but it
> > is not clear how what you're describing could be implemented for the
> > general case.
> >
> > Suppose I define an S3 "class" called my_awesome_class, and have a list
> > of 3 of them in it, and no other guarantees are provided. What should,
> > or even could, R do in the case of unlist(list_of_awesomes)?
> >
> > There is no guarantee that I as an S3 developer have provided a c method
> > for my class such that we could say the unlist call above is equivalent
> > (roughly) to do.call(c, list_of_awesomes), nor that I provided any other
> > particular "mash this set of my_awesome_class objects into one". Nor is
> > it even guaranteed that the concept of combining my_awesome_classobjects
> > is even coherent, or would produce a new my_awesome_classobject when
> > performed if it is.
>
>
>           What about adding another argument to create, e.g.,
>
>
> unlist(x, recursive = TRUE, use.names = TRUE, attributeFunction=NULL)
>
>
>           Then assign the assign the results of the current "unlist(x,
> ...)"
> to, say, "ux", and follow that by
>
>
>
> if(!is.null(attributeFunction))attributes(ux) <- attributeFunction(x)
>
>
> return(ux)
>
>
>           An alternative could be to have a default attributeFunction,
> that
> computes the attributes of each component of x and keeps only the ones
> that are shared by all components of x.  This would be the same as the
> current behavior for factors IF each component had the same factor
> levels and would drop attributes that are different between components.
> For S4 classes, if the attributes were not ALL identical, then all the
> attributes would be dropped, as with the current behavior.  This should
> not be a problem for S3 generics, because they should always check to
> make sure all the required attributes are available.
>
> >
> > That said, your example was of length one,
>
>
>           My example was of length one to provide a minimal,
> self-contained
> example.  That was motivated by a more complicated example, which took
> me a couple of hours to understand why it wasn't working as I expected ;-)
>
>
>           Thanks for your reply.
>
>
>           Spencer Graves
>
>
> we could special case (the
> > default method of) unlist so that for x /not a list/, we're guaranteed
> that
> >
> > identical(unlist(list(x)), x) == TRUE
> >
> > This would simplify certain code, such as the one from your motivating
> > example, but at the cost of making the output of unlist across inputs
> > less consistent and less easy to reason about and predict. In other
> > words the answer to the question "what class is
> > unlist(list_of_awesomes)? " would become "it depends on how many of them
> > are in the list"... That wouldn't be a good thing on balance, imho.
> >
> > Best,
> > ~G
> >
> > On Thu, Dec 8, 2022 at 5:44 PM Spencer Graves
> > <spencer.graves at effectivedefense.org
> > <mailto:spencer.graves at effectivedefense.org>> wrote:
> >
> >     Consider:
> >
> >
> >       > str(unlist(list(Sys.Date())))
> >        num 19334
> >
> >
> >       > str(unlist(list(factor('a'))))
> >        Factor w/ 1 level "a": 1
> >
> >
> >                I naively expected "str(unlist(list(Sys.Date())))" to
> >     return an
> >     object of class 'Date'.  After some thought, I felt a need to ask
> this
> >     list if they think that the core R language might benefit from
> >     modifying
> >     the language so "str(unlist(list(Sys.Date())))" was of class 'Date',
> at
> >     least as an option.
> >
> >
> >                Comments?
> >                Thanks,
> >                Spencer Graves
> >
> >
> >       > sessionInfo()
> >     R version 4.2.2 (2022-10-31)
> >     Platform: x86_64-apple-darwin17.0 (64-bit)
> >     Running under: macOS Big Sur 11.7.1
> >
> >     Matrix products: default
> >     LAPACK:
> >
>  /Library/Frameworks/R.framework/Versions/4.2/Resources/lib/libRlapack.dylib
> >
> >     locale:
> >     [1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8
> >
> >     attached base packages:
> >     [1] stats     graphics  grDevices utils     datasets  methods   base
> >
> >     loaded via a namespace (and not attached):
> >     [1] compiler_4.2.2 tools_4.2.2
> >
> >     ______________________________________________
> >     R-devel at r-project.org <mailto:R-devel at r-project.org> mailing list
> >     https://stat.ethz.ch/mailman/listinfo/r-devel
> >     <https://stat.ethz.ch/mailman/listinfo/r-devel>
> >
>

	[[alternative HTML version deleted]]


From murdoch@dunc@n @end|ng |rom gm@||@com  Fri Dec  9 11:33:31 2022
From: murdoch@dunc@n @end|ng |rom gm@||@com (Duncan Murdoch)
Date: Fri, 9 Dec 2022 05:33:31 -0500
Subject: [Rd] unlist preserve common class?
In-Reply-To: <CAD4oTHFOkAGT1APipWNSpb_57vc6LCAeZbOK4kBydiCiem-ZZg@mail.gmail.com>
References: <1de177a0-7373-d878-7edd-411fd53aa2fc@effectivedefense.org>
 <CAD4oTHFOkAGT1APipWNSpb_57vc6LCAeZbOK4kBydiCiem-ZZg@mail.gmail.com>
Message-ID: <0ea6747f-ff8d-fb54-a259-44378180b096@gmail.com>

On 08/12/2022 9:20 p.m., Gabriel Becker wrote:
> Hi Spencer,
> 
> My 2c.
> 
> According to the docs, factors are special-cased. Other S3 'classes' could
> be special-cased, such as Date in your example, I suppose, but it is not
> clear how what you're describing could be implemented for the general case.
> 
> Suppose I define an S3 "class" called my_awesome_class, and have a list of
> 3 of them in it, and no other guarantees are provided. What should, or even
> could, R do in the case of unlist(list_of_awesomes)?
> 
> There is no guarantee that I as an S3 developer have provided a c method
> for my class such that we could say the unlist call above is equivalent
> (roughly) to do.call(c, list_of_awesomes), nor that I provided any other
> particular "mash this set of my_awesome_class objects into one". Nor is it
> even guaranteed that the concept of combining my_awesome_class objects is
> even coherent, or would produce a new my_awesome_class object when
> performed if it is.

For the non-recursive case of unlist, do.call(c, list_of_awesomes) is a 
pretty reasonable expectation.  Wouldn't the simplest change be to make 
no change to unlist, but suggest this alternative in the documentation?

Duncan Murdoch

> 
> That said, your example was of length one, we could special case (the
> default method of) unlist so that for x *not a list*, we're guaranteed that
> 
> identical(unlist(list(x)), x) == TRUE
> 
> This would simplify certain code, such as the one from your motivating
> example, but at the cost of making the output of unlist across inputs less
> consistent and less easy to reason about and predict. In other words the
> answer to the question "what class is unlist(list_of_awesomes)? " would
> become "it depends on how many of them are in the list"... That wouldn't be
> a good thing on balance, imho.
> 
> Best,
> ~G
> 
> On Thu, Dec 8, 2022 at 5:44 PM Spencer Graves <
> spencer.graves at effectivedefense.org> wrote:
> 
>> Consider:
>>
>>
>>   > str(unlist(list(Sys.Date())))
>>    num 19334
>>
>>
>>   > str(unlist(list(factor('a'))))
>>    Factor w/ 1 level "a": 1
>>
>>
>>            I naively expected "str(unlist(list(Sys.Date())))" to return an
>> object of class 'Date'.  After some thought, I felt a need to ask this
>> list if they think that the core R language might benefit from modifying
>> the language so "str(unlist(list(Sys.Date())))" was of class 'Date', at
>> least as an option.
>>
>>
>>            Comments?
>>            Thanks,
>>            Spencer Graves
>>
>>
>>   > sessionInfo()
>> R version 4.2.2 (2022-10-31)
>> Platform: x86_64-apple-darwin17.0 (64-bit)
>> Running under: macOS Big Sur 11.7.1
>>
>> Matrix products: default
>> LAPACK:
>> /Library/Frameworks/R.framework/Versions/4.2/Resources/lib/libRlapack.dylib
>>
>> locale:
>> [1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8
>>
>> attached base packages:
>> [1] stats     graphics  grDevices utils     datasets  methods   base
>>
>> loaded via a namespace (and not attached):
>> [1] compiler_4.2.2 tools_4.2.2
>>
>> ______________________________________________
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>
> 
> 	[[alternative HTML version deleted]]
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From @pencer@gr@ve@ @end|ng |rom prod@y@e@com  Fri Dec  9 11:57:33 2022
From: @pencer@gr@ve@ @end|ng |rom prod@y@e@com (Spencer Graves)
Date: Fri, 9 Dec 2022 04:57:33 -0600
Subject: [Rd] unlist preserve common class?
In-Reply-To: <0ea6747f-ff8d-fb54-a259-44378180b096@gmail.com>
References: <1de177a0-7373-d878-7edd-411fd53aa2fc@effectivedefense.org>
 <CAD4oTHFOkAGT1APipWNSpb_57vc6LCAeZbOK4kBydiCiem-ZZg@mail.gmail.com>
 <0ea6747f-ff8d-fb54-a259-44378180b096@gmail.com>
Message-ID: <05f39c78-d1f2-90f0-fe67-b656b529bec0@prodsyse.com>



On 12/9/22 4:33 AM, Duncan Murdoch wrote:
> On 08/12/2022 9:20 p.m., Gabriel Becker wrote:
>> Hi Spencer,
>>
>> My 2c.
>>
>> According to the docs, factors are special-cased. Other S3 'classes' 
>> could
>> be special-cased, such as Date in your example, I suppose, but it is not
>> clear how what you're describing could be implemented for the general 
>> case.
>>
>> Suppose I define an S3 "class" called my_awesome_class, and have a 
>> list of
>> 3 of them in it, and no other guarantees are provided. What should, or 
>> even
>> could, R do in the case of unlist(list_of_awesomes)?
>>
>> There is no guarantee that I as an S3 developer have provided a c method
>> for my class such that we could say the unlist call above is equivalent
>> (roughly) to do.call(c, list_of_awesomes), nor that I provided any other
>> particular "mash this set of my_awesome_class objects into one". Nor 
>> is it
>> even guaranteed that the concept of combining my_awesome_class objects is
>> even coherent, or would produce a new my_awesome_class object when
>> performed if it is.
> 
> For the non-recursive case of unlist, do.call(c, list_of_awesomes) is a 
> pretty reasonable expectation.? Wouldn't the simplest change be to make 
> no change to unlist, but suggest this alternative in the documentation?
> 
> Duncan Murdoch


Hi, Duncan and Gabrien:


	  That's ultimately what I did.  My real problem was more like:


(todaytomorrow <- list(d0=Sys.Date()+0:1, d1=Sys.Date()+2:3))

$d0
[1] "2022-12-09" "2022-12-10"

$d1
[1] "2022-12-11" "2022-12-12"


	  I wanted the minimum of the maxima.  So I naively did:


(tt2 <- sapply(todaytomorrow, min))


    d0    d1
19335 19337


	  So I next tried:


 > (tt3 <- as.Date(tt2))

Error in as.Date.numeric(tt2) : 'origin' must be supplied


	  I believe that the default "origin" for "as.Date.numeric" should be 
"1970-01-01".  I implemented that several years ago in Ecfun:


 > (tt4 <- Ecfun::as.Date1970(tt2))

           d0           d1
"2022-12-09" "2022-12-11"


	  However, before getting here, I first misdiagnosed the problem with 
"tt2", believing that "min" not "sapply" was stripping the attributes.


	  After fixing that problem, I came to Duncan's solution:


 > (tt4 <- lapply(todaytomorrow, min))

$d0
[1] "2022-12-09"

$d1
[1] "2022-12-11"


(maximin <- do.call('max', tt4))
	
[1] "2022-12-11"


	  Conclusion:  It would help to document Duncan's solution using 
"do.call" and avoiding "unlist" and "sapply".  I brought it to the 
attention of this group, because I wondered if you might want to change 
the language -- or at least the documentation, as Duncan suggested.


	  Thanks,
	  Spencer Graves
> 
>>
>> That said, your example was of length one, we could special case (the
>> default method of) unlist so that for x *not a list*, we're guaranteed 
>> that
>>
>> identical(unlist(list(x)), x) == TRUE
>>
>> This would simplify certain code, such as the one from your motivating
>> example, but at the cost of making the output of unlist across inputs 
>> less
>> consistent and less easy to reason about and predict. In other words the
>> answer to the question "what class is unlist(list_of_awesomes)? " would
>> become "it depends on how many of them are in the list"... That 
>> wouldn't be
>> a good thing on balance, imho.
>>
>> Best,
>> ~G
>>
>> On Thu, Dec 8, 2022 at 5:44 PM Spencer Graves <
>> spencer.graves at effectivedefense.org> wrote:
>>
>>> Consider:
>>>
>>>
>>> ? > str(unlist(list(Sys.Date())))
>>> ?? num 19334
>>>
>>>
>>> ? > str(unlist(list(factor('a'))))
>>> ?? Factor w/ 1 level "a": 1
>>>
>>>
>>> ?????????? I naively expected "str(unlist(list(Sys.Date())))" to 
>>> return an
>>> object of class 'Date'.? After some thought, I felt a need to ask this
>>> list if they think that the core R language might benefit from modifying
>>> the language so "str(unlist(list(Sys.Date())))" was of class 'Date', at
>>> least as an option.
>>>
>>>
>>> ?????????? Comments?
>>> ?????????? Thanks,
>>> ?????????? Spencer Graves
>>>
>>>
>>> ? > sessionInfo()
>>> R version 4.2.2 (2022-10-31)
>>> Platform: x86_64-apple-darwin17.0 (64-bit)
>>> Running under: macOS Big Sur 11.7.1
>>>
>>> Matrix products: default
>>> LAPACK:
>>> /Library/Frameworks/R.framework/Versions/4.2/Resources/lib/libRlapack.dylib
>>>
>>> locale:
>>> [1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8
>>>
>>> attached base packages:
>>> [1] stats???? graphics? grDevices utils???? datasets? methods?? base
>>>
>>> loaded via a namespace (and not attached):
>>> [1] compiler_4.2.2 tools_4.2.2
>>>
>>> ______________________________________________
>>> R-devel at r-project.org mailing list
>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>>
>>
>> ????[[alternative HTML version deleted]]
>>
>> ______________________________________________
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From wewo|@k| @end|ng |rom gm@||@com  Thu Dec 15 19:01:38 2022
From: wewo|@k| @end|ng |rom gm@||@com (Witold E Wolski)
Date: Thu, 15 Dec 2022 19:01:38 +0100
Subject: [Rd] I do not want that R CMD build removes temp directory
Message-ID: <CAAjnpdg8uLOBBEHWEWq81R+t0sUy=TiTPN_fy2WrgTn2-AWRqA@mail.gmail.com>

I am getting a package build error, and can not figure out the problem.
The error is
"
ERROR: lazy loading failed for package 'prolfqua'
* removing 'C:/Users/
"
However since R CMD build removes the temp directory and does not give
any other errors how can I find out what the build problem is?

Is there a way to disable the temp directory removal?

Best Regards
Witek
-- 
Witold Eryk Wolski


From @|mon@urb@nek @end|ng |rom R-project@org  Thu Dec 15 19:09:34 2022
From: @|mon@urb@nek @end|ng |rom R-project@org (Simon Urbanek)
Date: Fri, 16 Dec 2022 07:09:34 +1300
Subject: [Rd] I do not want that R CMD build removes temp directory
In-Reply-To: <CAAjnpdg8uLOBBEHWEWq81R+t0sUy=TiTPN_fy2WrgTn2-AWRqA@mail.gmail.com>
References: <CAAjnpdg8uLOBBEHWEWq81R+t0sUy=TiTPN_fy2WrgTn2-AWRqA@mail.gmail.com>
Message-ID: <24A51D24-B62A-42E2-94C4-6842EFC87D50@R-project.org>

Yes:

$ R CMD INSTALL --help | grep error
      --no-clean-on-error	do not remove installed package on error

But probably more commonly used way is to install the package from its unpacked directory as that avoids the use of temporary directories in the first place.

In you case you can also use --no-test-load and the non-functional package will still be installed so you can inspect it.

Cheers,
Simon

PS: please don't cross-post


> On Dec 16, 2022, at 7:01 AM, Witold E Wolski <wewolski at gmail.com> wrote:
> 
> I am getting a package build error, and can not figure out the problem.
> The error is
> "
> ERROR: lazy loading failed for package 'prolfqua'
> * removing 'C:/Users/
> "
> However since R CMD build removes the temp directory and does not give
> any other errors how can I find out what the build problem is?
> 
> Is there a way to disable the temp directory removal?
> 
> Best Regards
> Witek
> -- 
> Witold Eryk Wolski
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
> 


From wewo|@k| @end|ng |rom gm@||@com  Thu Dec 15 21:47:24 2022
From: wewo|@k| @end|ng |rom gm@||@com (Witold E Wolski)
Date: Thu, 15 Dec 2022 21:47:24 +0100
Subject: [Rd] I do not want that R CMD build removes temp directory
In-Reply-To: <24A51D24-B62A-42E2-94C4-6842EFC87D50@R-project.org>
References: <CAAjnpdg8uLOBBEHWEWq81R+t0sUy=TiTPN_fy2WrgTn2-AWRqA@mail.gmail.com>
 <24A51D24-B62A-42E2-94C4-6842EFC87D50@R-project.org>
Message-ID: <CAAjnpdhUb6eJ78wZd501AH0CnkDYN7TQ0U=sP7RXpYjQTd0Reg@mail.gmail.com>

Thank you Simon,

It seems not to be related to the R package but rather to the OS,
(just got the same error when installing the shiny R package from
CRAN).
I am on an M1 mac running Windows ARM in Parallels. Installed a
x86_64-w64 R version.



"** byte-compile and prepare package for lazy loading
ERROR: lazy loading failed for package 'shiny'
* removing 'C:/Users/witoldwolski/AppData/Local/R/win-library/4.2/shiny'
Warning in install.packages :"

On Thu, 15 Dec 2022 at 19:09, Simon Urbanek <simon.urbanek at r-project.org> wrote:
>
> Yes:
>
> $ R CMD INSTALL --help | grep error
>       --no-clean-on-error       do not remove installed package on error
>
> But probably more commonly used way is to install the package from its unpacked directory as that avoids the use of temporary directories in the first place.
>
> In you case you can also use --no-test-load and the non-functional package will still be installed so you can inspect it.
>
> Cheers,
> Simon
>
> PS: please don't cross-post
>
>
> > On Dec 16, 2022, at 7:01 AM, Witold E Wolski <wewolski at gmail.com> wrote:
> >
> > I am getting a package build error, and can not figure out the problem.
> > The error is
> > "
> > ERROR: lazy loading failed for package 'prolfqua'
> > * removing 'C:/Users/
> > "
> > However since R CMD build removes the temp directory and does not give
> > any other errors how can I find out what the build problem is?
> >
> > Is there a way to disable the temp directory removal?
> >
> > Best Regards
> > Witek
> > --
> > Witold Eryk Wolski
> >
> > ______________________________________________
> > R-devel at r-project.org mailing list
> > https://stat.ethz.ch/mailman/listinfo/r-devel
> >
>


-- 
Witold Eryk Wolski


From ||gge@ @end|ng |rom @t@t|@t|k@tu-dortmund@de  Fri Dec 16 11:24:49 2022
From: ||gge@ @end|ng |rom @t@t|@t|k@tu-dortmund@de (Uwe Ligges)
Date: Fri, 16 Dec 2022 11:24:49 +0100
Subject: [Rd] [R]  I do not want that R CMD build removes temp directory
In-Reply-To: <CAAjnpdhUb6eJ78wZd501AH0CnkDYN7TQ0U=sP7RXpYjQTd0Reg@mail.gmail.com>
References: <CAAjnpdg8uLOBBEHWEWq81R+t0sUy=TiTPN_fy2WrgTn2-AWRqA@mail.gmail.com>
 <24A51D24-B62A-42E2-94C4-6842EFC87D50@R-project.org>
 <CAAjnpdhUb6eJ78wZd501AH0CnkDYN7TQ0U=sP7RXpYjQTd0Reg@mail.gmail.com>
Message-ID: <b2825ce6-6601-eb65-fffd-981db52feb58@statistik.tu-dortmund.de>



On 15.12.2022 21:47, Witold E Wolski wrote:
> Thank you Simon,
> 
> It seems not to be related to the R package but rather to the OS,
> (just got the same error when installing the shiny R package from
> CRAN).
> I am on an M1 mac running Windows ARM in Parallels. Installed a
> x86_64-w64 R version.
> 
> 
> 
> "** byte-compile and prepare package for lazy loading
> ERROR: lazy loading failed for package 'shiny'
> * removing 'C:/Users/witoldwolski/AppData/Local/R/win-library/4.2/shiny'
> Warning in install.packages :"

Can we please have the full output?

Best,
Uwe Ligges



> On Thu, 15 Dec 2022 at 19:09, Simon Urbanek <simon.urbanek at r-project.org> wrote:
>>
>> Yes:
>>
>> $ R CMD INSTALL --help | grep error
>>        --no-clean-on-error       do not remove installed package on error
>>
>> But probably more commonly used way is to install the package from its unpacked directory as that avoids the use of temporary directories in the first place.
>>
>> In you case you can also use --no-test-load and the non-functional package will still be installed so you can inspect it.
>>
>> Cheers,
>> Simon
>>
>> PS: please don't cross-post
>>
>>
>>> On Dec 16, 2022, at 7:01 AM, Witold E Wolski <wewolski at gmail.com> wrote:
>>>
>>> I am getting a package build error, and can not figure out the problem.
>>> The error is
>>> "
>>> ERROR: lazy loading failed for package 'prolfqua'
>>> * removing 'C:/Users/
>>> "
>>> However since R CMD build removes the temp directory and does not give
>>> any other errors how can I find out what the build problem is?
>>>
>>> Is there a way to disable the temp directory removal?
>>>
>>> Best Regards
>>> Witek
>>> --
>>> Witold Eryk Wolski
>>>
>>> ______________________________________________
>>> R-devel at r-project.org mailing list
>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>>
>>
> 
>


From edd @end|ng |rom deb|@n@org  Sun Dec 18 20:41:01 2022
From: edd @end|ng |rom deb|@n@org (Dirk Eddelbuettel)
Date: Sun, 18 Dec 2022 13:41:01 -0600
Subject: [Rd] Repeated segfault at installing sysdata.rda with clang/san
 build
Message-ID: <25503.27853.968124.950608@rob.eddelbuettel.com>


I have maintained two SAN/UBSAN builds (one gcc, one clang) for many years
(even though I also happily use Winston's newer/bigger container and
generally recommend its use) and still have GitHub actions build them on a
weekly schedule (as they follow r-devel).

The clang one started to fail a little while ago. I just tried it locally,
and it too blew up in the same spot:


[...]
make[4]: Entering directory '/tmp/R-devel/src/library/tools'
installing 'sysdata.rda'

 *** caught segfault ***
address (nil), cause 'memory not mapped'

Traceback:
 1: load(srcFile, e)
 2: tools:::sysdata2LazyLoadDB("./R/sysdata.rda", "../../../library/tools/R")
An irrecoverable exception occurred. R is aborting now ...
/bin/bash: line 2: 10795 Done                    echo "tools:::sysdata2LazyLoadDB(\"./R/sysdata.rda\",\"../../../library/tools/R\")"
     10796 Segmentation fault      (core dumped) | R_DEFAULT_PACKAGES=NULL LC_ALL=C R_ENABLE_JIT=0 TZ=UTC ../../../bin/R --vanilla --no-echo
make[4]: Leaving directory '/tmp/R-devel/src/library/tools'
make[4]: *** [../../../share/make/basepkg.mk:151: sysdata] Error 139
make[3]: *** [Makefile:36: all] Error 2
make[3]: Leaving directory '/tmp/R-devel/src/library/tools'
make[2]: Leaving directory '/tmp/R-devel/src/library'
make[2]: *** [Makefile:37: R] Error 1
make[1]: *** [Makefile:28: R] Error 1
make[1]: Leaving directory '/tmp/R-devel/src'
make: *** [Makefile:61: R] Error 1


I assume it shouldn't. But I am also not too familiar with internals of
sysdata and the lazyload format.  The Dockerfile is in the repository at

  https://github.com/rocker-org/r-devel-san-clang

in case someone else wants to take stab. I may try this on my Ubuntu machine
too in temporary directory.

Dirk

-- 
dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org


From @|mon@urb@nek @end|ng |rom R-project@org  Mon Dec 19 01:57:29 2022
From: @|mon@urb@nek @end|ng |rom R-project@org (Simon Urbanek)
Date: Mon, 19 Dec 2022 13:57:29 +1300
Subject: [Rd] Repeated segfault at installing sysdata.rda with clang/san
 build
In-Reply-To: <25503.27853.968124.950608@rob.eddelbuettel.com>
References: <25503.27853.968124.950608@rob.eddelbuettel.com>
Message-ID: <6E666940-253D-4DAB-BAF3-B80A3349593A@R-project.org>

This crashes unceremoniously in glibc:

> tools:::sysdata2LazyLoadDB("./R/sysdata.rda","../../../library/tools/R")
xdrmem_create(0x7ffdf19699e0, 0x7ffdf1969ba0, 4)

Program received signal SIGSEGV, Segmentation fault.
0x0000000000000000 in ?? ()
(gdb) bt

#0  0x0000000000000000 in ?? ()
#1  0x00005559317e61d4 in xdrmem_create ()
#2  0x00007fd82b9bd08b in R_XDRDecodeInteger (buf=<optimized out>) at saveload.c:2246
#3  0x00007fd82ba007db in InInteger (stream=0x7ffc57b50f40) at serialize.c:425
#4  0x00007fd82b9ff743 in R_Unserialize (stream=0x7ffc57b50f40) at serialize.c:2175
#5  0x00007fd82ba0bfa4 in do_unserializeFromConn (call=0x625000706cb8, op=0x6250000298a8, args=<optimized out>, env=<optimized out>) at ser\
ialize.c:2628
#6  0x00007fd82b8b5435 in do_internal (call=call at entry=0x625000706ba0, op=op at entry=0x62500000b678, args=<optimized out>, env=0x1, env at entry\
=0x625000d7b3a0) at names.c:1403

int attribute_hidden R_XDRDecodeInteger(void *buf)
{
    XDR xdrs;
    int i, success;

    xdrmem_create(&xdrs, (char *) buf, R_XDR_INTEGER_SIZE, XDR_DECODE);

The odd thing is there is nothing wrong with the input, the location is accessible and just 4 bytes of an integer as expected:

(gdb) p/x *((int*)0x7ffdf1969ba0)
$4 = 0x3000000

which should turn into a perfectly normal 3L, so this a something bad happening in xdrmem_create() which is part of glibc. But looking at glibc sources, nothing suspicious in there, since it just populates XDR and shouldn't call any function, but yet it looks like it is trying to call a function which is a NULL pointer ... This is outside of R so really odd - perhaps some odd interaction of *SAN and glibc? No idea why it suddenly appeared - perhaps some changes in toolchain or glibc?

Cheers,
Simon


> On 19/12/2022, at 8:41 AM, Dirk Eddelbuettel <edd at debian.org> wrote:
> 
> 
> I have maintained two SAN/UBSAN builds (one gcc, one clang) for many years
> (even though I also happily use Winston's newer/bigger container and
> generally recommend its use) and still have GitHub actions build them on a
> weekly schedule (as they follow r-devel).
> 
> The clang one started to fail a little while ago. I just tried it locally,
> and it too blew up in the same spot:
> 
> 
> [...]
> make[4]: Entering directory '/tmp/R-devel/src/library/tools'
> installing 'sysdata.rda'
> 
> *** caught segfault ***
> address (nil), cause 'memory not mapped'
> 
> Traceback:
> 1: load(srcFile, e)
> 2: tools:::sysdata2LazyLoadDB("./R/sysdata.rda", "../../../library/tools/R")
> An irrecoverable exception occurred. R is aborting now ...
> /bin/bash: line 2: 10795 Done                    echo "tools:::sysdata2LazyLoadDB(\"./R/sysdata.rda\",\"../../../library/tools/R\")"
>     10796 Segmentation fault      (core dumped) | R_DEFAULT_PACKAGES=NULL LC_ALL=C R_ENABLE_JIT=0 TZ=UTC ../../../bin/R --vanilla --no-echo
> make[4]: Leaving directory '/tmp/R-devel/src/library/tools'
> make[4]: *** [../../../share/make/basepkg.mk:151: sysdata] Error 139
> make[3]: *** [Makefile:36: all] Error 2
> make[3]: Leaving directory '/tmp/R-devel/src/library/tools'
> make[2]: Leaving directory '/tmp/R-devel/src/library'
> make[2]: *** [Makefile:37: R] Error 1
> make[1]: *** [Makefile:28: R] Error 1
> make[1]: Leaving directory '/tmp/R-devel/src'
> make: *** [Makefile:61: R] Error 1
> 
> 
> I assume it shouldn't. But I am also not too familiar with internals of
> sysdata and the lazyload format.  The Dockerfile is in the repository at
> 
>  https://github.com/rocker-org/r-devel-san-clang
> 
> in case someone else wants to take stab. I may try this on my Ubuntu machine
> too in temporary directory.
> 
> Dirk
> 
> -- 
> dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
> 


From edd @end|ng |rom deb|@n@org  Mon Dec 19 03:43:16 2022
From: edd @end|ng |rom deb|@n@org (Dirk Eddelbuettel)
Date: Sun, 18 Dec 2022 20:43:16 -0600
Subject: [Rd] Repeated segfault at installing sysdata.rda with clang/san
 build
In-Reply-To: <6E666940-253D-4DAB-BAF3-B80A3349593A@R-project.org>
References: <25503.27853.968124.950608@rob.eddelbuettel.com>
 <6E666940-253D-4DAB-BAF3-B80A3349593A@R-project.org>
Message-ID: <25503.53188.444343.954168@rob.eddelbuettel.com>


Very nice follow-up, Simon.

On 19 December 2022 at 13:57, Simon Urbanek wrote:
| This crashes unceremoniously in glibc:
| 
| > tools:::sysdata2LazyLoadDB("./R/sysdata.rda","../../../library/tools/R")
| xdrmem_create(0x7ffdf19699e0, 0x7ffdf1969ba0, 4)
| 
| Program received signal SIGSEGV, Segmentation fault.
| 0x0000000000000000 in ?? ()
| (gdb) bt
| 
| #0  0x0000000000000000 in ?? ()
| #1  0x00005559317e61d4 in xdrmem_create ()
| #2  0x00007fd82b9bd08b in R_XDRDecodeInteger (buf=<optimized out>) at saveload.c:2246
| #3  0x00007fd82ba007db in InInteger (stream=0x7ffc57b50f40) at serialize.c:425
| #4  0x00007fd82b9ff743 in R_Unserialize (stream=0x7ffc57b50f40) at serialize.c:2175
| #5  0x00007fd82ba0bfa4 in do_unserializeFromConn (call=0x625000706cb8, op=0x6250000298a8, args=<optimized out>, env=<optimized out>) at ser\
| ialize.c:2628
| #6  0x00007fd82b8b5435 in do_internal (call=call at entry=0x625000706ba0, op=op at entry=0x62500000b678, args=<optimized out>, env=0x1, env at entry\
| =0x625000d7b3a0) at names.c:1403
| 
| int attribute_hidden R_XDRDecodeInteger(void *buf)
| {
|     XDR xdrs;
|     int i, success;
| 
|     xdrmem_create(&xdrs, (char *) buf, R_XDR_INTEGER_SIZE, XDR_DECODE);
| 
| The odd thing is there is nothing wrong with the input, the location is accessible and just 4 bytes of an integer as expected:
| 
| (gdb) p/x *((int*)0x7ffdf1969ba0)
| $4 = 0x3000000
| 
| which should turn into a perfectly normal 3L, so this a something bad happening in xdrmem_create() which is part of glibc. But looking at glibc sources, nothing suspicious in there, since it just populates XDR and shouldn't call any function, but yet it looks like it is trying to call a function which is a NULL pointer ... This is outside of R so really odd - perhaps some odd interaction of *SAN and glibc? No idea why it suddenly appeared - perhaps some changes in toolchain or glibc?

Yep. And as I had on schedule for some time with no issues it likely is
external. No obvious how to minimize it to a smaller reproducible example
though.

Best, Dirk

| Cheers,
| Simon
| 
| 
| > On 19/12/2022, at 8:41 AM, Dirk Eddelbuettel <edd at debian.org> wrote:
| > 
| > 
| > I have maintained two SAN/UBSAN builds (one gcc, one clang) for many years
| > (even though I also happily use Winston's newer/bigger container and
| > generally recommend its use) and still have GitHub actions build them on a
| > weekly schedule (as they follow r-devel).
| > 
| > The clang one started to fail a little while ago. I just tried it locally,
| > and it too blew up in the same spot:
| > 
| > 
| > [...]
| > make[4]: Entering directory '/tmp/R-devel/src/library/tools'
| > installing 'sysdata.rda'
| > 
| > *** caught segfault ***
| > address (nil), cause 'memory not mapped'
| > 
| > Traceback:
| > 1: load(srcFile, e)
| > 2: tools:::sysdata2LazyLoadDB("./R/sysdata.rda", "../../../library/tools/R")
| > An irrecoverable exception occurred. R is aborting now ...
| > /bin/bash: line 2: 10795 Done                    echo "tools:::sysdata2LazyLoadDB(\"./R/sysdata.rda\",\"../../../library/tools/R\")"
| >     10796 Segmentation fault      (core dumped) | R_DEFAULT_PACKAGES=NULL LC_ALL=C R_ENABLE_JIT=0 TZ=UTC ../../../bin/R --vanilla --no-echo
| > make[4]: Leaving directory '/tmp/R-devel/src/library/tools'
| > make[4]: *** [../../../share/make/basepkg.mk:151: sysdata] Error 139
| > make[3]: *** [Makefile:36: all] Error 2
| > make[3]: Leaving directory '/tmp/R-devel/src/library/tools'
| > make[2]: Leaving directory '/tmp/R-devel/src/library'
| > make[2]: *** [Makefile:37: R] Error 1
| > make[1]: *** [Makefile:28: R] Error 1
| > make[1]: Leaving directory '/tmp/R-devel/src'
| > make: *** [Makefile:61: R] Error 1
| > 
| > 
| > I assume it shouldn't. But I am also not too familiar with internals of
| > sysdata and the lazyload format.  The Dockerfile is in the repository at
| > 
| >  https://github.com/rocker-org/r-devel-san-clang
| > 
| > in case someone else wants to take stab. I may try this on my Ubuntu machine
| > too in temporary directory.
| > 
| > Dirk
| > 
| > -- 
| > dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org
| > 
| > ______________________________________________
| > R-devel at r-project.org mailing list
| > https://stat.ethz.ch/mailman/listinfo/r-devel
| > 
| 

-- 
dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org


From wewo|@k| @end|ng |rom gm@||@com  Mon Dec 19 10:52:30 2022
From: wewo|@k| @end|ng |rom gm@||@com (Witold E Wolski)
Date: Mon, 19 Dec 2022 10:52:30 +0100
Subject: [Rd] [R]  I do not want that R CMD build removes temp directory
In-Reply-To: <b2825ce6-6601-eb65-fffd-981db52feb58@statistik.tu-dortmund.de>
References: <CAAjnpdg8uLOBBEHWEWq81R+t0sUy=TiTPN_fy2WrgTn2-AWRqA@mail.gmail.com>
 <24A51D24-B62A-42E2-94C4-6842EFC87D50@R-project.org>
 <CAAjnpdhUb6eJ78wZd501AH0CnkDYN7TQ0U=sP7RXpYjQTd0Reg@mail.gmail.com>
 <b2825ce6-6601-eb65-fffd-981db52feb58@statistik.tu-dortmund.de>
Message-ID: <CAAjnpdiR6sugnRDB93UNGGxuQ0O_F-8nNOQtcd=u7-tmZEh4Ow@mail.gmail.com>

Dear Uwe,

Unfortunately there isn't much of an output. This is all what I have:

$ R CMD INSTALL --log prolfqua
Warning: unknown option '--log'
* installing to library 'C:/Users/witoldwolski/AppData/Local/R/win-library/4.2'
* installing *source* package 'prolfqua' ...
** using staged installation
** R
** data
** inst
** byte-compile and prepare package for lazy loading
ERROR: lazy loading failed for package 'prolfqua'
* removing 'C:/Users/witoldwolski/AppData/Local/R/win-library/4.2/prolfqua'

Also with --no-test-load option the install is failing :

$ R CMD INSTALL --clean --no-test-load prolfqua

* installing to library 'C:/Users/witoldwolski/AppData/Local/R/win-library/4.2'
* installing *source* package 'prolfqua' ...
** using staged installation
** R
** data
** inst
** byte-compile and prepare package for lazy loading
ERROR: lazy loading failed for package 'prolfqua'
* removing 'C:/Users/witoldwolski/AppData/Local/R/win-library/4.2/prolfqua'

And including "--no-clean-on-error" also does not help because the
installation directory is empty.


Tested the install, on macos M1, linux ARM64, linux x86, Windows 64,
and it works everywhere except
Parallels Windows 64 on ARM M1.

R version 4.2.2 (2022-10-31 ucrt) -- "Innocent and Trusting"
Copyright (C) 2022 The R Foundation for Statistical Computing
Platform: x86_64-w64-mingw32/x64 (64-bit)

best regards
Witek



On Fri, 16 Dec 2022 at 11:24, Uwe Ligges
<ligges at statistik.tu-dortmund.de> wrote:
>
>
>
> On 15.12.2022 21:47, Witold E Wolski wrote:
> > Thank you Simon,
> >
> > It seems not to be related to the R package but rather to the OS,
> > (just got the same error when installing the shiny R package from
> > CRAN).
> > I am on an M1 mac running Windows ARM in Parallels. Installed a
> > x86_64-w64 R version.
> >
> >
> >
> > "** byte-compile and prepare package for lazy loading
> > ERROR: lazy loading failed for package 'shiny'
> > * removing 'C:/Users/witoldwolski/AppData/Local/R/win-library/4.2/shiny'
> > Warning in install.packages :"
>
> Can we please have the full output?
>
> Best,
> Uwe Ligges
>
>
>
> > On Thu, 15 Dec 2022 at 19:09, Simon Urbanek <simon.urbanek at r-project.org> wrote:
> >>
> >> Yes:
> >>
> >> $ R CMD INSTALL --help | grep error
> >>        --no-clean-on-error       do not remove installed package on error
> >>
> >> But probably more commonly used way is to install the package from its unpacked directory as that avoids the use of temporary directories in the first place.
> >>
> >> In you case you can also use --no-test-load and the non-functional package will still be installed so you can inspect it.
> >>
> >> Cheers,
> >> Simon
> >>
> >> PS: please don't cross-post
> >>
> >>
> >>> On Dec 16, 2022, at 7:01 AM, Witold E Wolski <wewolski at gmail.com> wrote:
> >>>
> >>> I am getting a package build error, and can not figure out the problem.
> >>> The error is
> >>> "
> >>> ERROR: lazy loading failed for package 'prolfqua'
> >>> * removing 'C:/Users/
> >>> "
> >>> However since R CMD build removes the temp directory and does not give
> >>> any other errors how can I find out what the build problem is?
> >>>
> >>> Is there a way to disable the temp directory removal?
> >>>
> >>> Best Regards
> >>> Witek
> >>> --
> >>> Witold Eryk Wolski
> >>>
> >>> ______________________________________________
> >>> R-devel at r-project.org mailing list
> >>> https://stat.ethz.ch/mailman/listinfo/r-devel
> >>>
> >>
> >
> >



--
Witold Eryk Wolski


From ||gge@ @end|ng |rom @t@t|@t|k@tu-dortmund@de  Mon Dec 19 11:08:15 2022
From: ||gge@ @end|ng |rom @t@t|@t|k@tu-dortmund@de (Uwe Ligges)
Date: Mon, 19 Dec 2022 11:08:15 +0100
Subject: [Rd] [R]  I do not want that R CMD build removes temp directory
In-Reply-To: <CAAjnpdiR6sugnRDB93UNGGxuQ0O_F-8nNOQtcd=u7-tmZEh4Ow@mail.gmail.com>
References: <CAAjnpdg8uLOBBEHWEWq81R+t0sUy=TiTPN_fy2WrgTn2-AWRqA@mail.gmail.com>
 <24A51D24-B62A-42E2-94C4-6842EFC87D50@R-project.org>
 <CAAjnpdhUb6eJ78wZd501AH0CnkDYN7TQ0U=sP7RXpYjQTd0Reg@mail.gmail.com>
 <b2825ce6-6601-eb65-fffd-981db52feb58@statistik.tu-dortmund.de>
 <CAAjnpdiR6sugnRDB93UNGGxuQ0O_F-8nNOQtcd=u7-tmZEh4Ow@mail.gmail.com>
Message-ID: <179a373c-d53a-849c-3c83-43fb09148fb9@statistik.tu-dortmund.de>

Ah, before that you wrote

""
ERROR: lazy loading failed for package 'prolfqua'
* removing 'C:Users
"

and C:Users  without a slash sonds suspicious. Now with the new output I 
do not see where the issue is from. Does this also happen when you try 
it on winbuilder?

Best,
Uwe Ligges

On 19.12.2022 10:52, Witold E Wolski wrote:
> Dear Uwe,
> 
> Unfortunately there isn't much of an output. This is all what I have:
> 
> $ R CMD INSTALL --log prolfqua
> Warning: unknown option '--log'
> * installing to library 'C:/Users/witoldwolski/AppData/Local/R/win-library/4.2'
> * installing *source* package 'prolfqua' ...
> ** using staged installation
> ** R
> ** data
> ** inst
> ** byte-compile and prepare package for lazy loading
> ERROR: lazy loading failed for package 'prolfqua'
> * removing 'C:/Users/witoldwolski/AppData/Local/R/win-library/4.2/prolfqua'
> 
> Also with --no-test-load option the install is failing :
> 
> $ R CMD INSTALL --clean --no-test-load prolfqua
> 
> * installing to library 'C:/Users/witoldwolski/AppData/Local/R/win-library/4.2'
> * installing *source* package 'prolfqua' ...
> ** using staged installation
> ** R
> ** data
> ** inst
> ** byte-compile and prepare package for lazy loading
> ERROR: lazy loading failed for package 'prolfqua'
> * removing 'C:/Users/witoldwolski/AppData/Local/R/win-library/4.2/prolfqua'
> 
> And including "--no-clean-on-error" also does not help because the
> installation directory is empty.
> 
> 
> Tested the install, on macos M1, linux ARM64, linux x86, Windows 64,
> and it works everywhere except
> Parallels Windows 64 on ARM M1.
> 
> R version 4.2.2 (2022-10-31 ucrt) -- "Innocent and Trusting"
> Copyright (C) 2022 The R Foundation for Statistical Computing
> Platform: x86_64-w64-mingw32/x64 (64-bit)
> 
> best regards
> Witek
> 
> 
> 
> On Fri, 16 Dec 2022 at 11:24, Uwe Ligges
> <ligges at statistik.tu-dortmund.de> wrote:
>>
>>
>>
>> On 15.12.2022 21:47, Witold E Wolski wrote:
>>> Thank you Simon,
>>>
>>> It seems not to be related to the R package but rather to the OS,
>>> (just got the same error when installing the shiny R package from
>>> CRAN).
>>> I am on an M1 mac running Windows ARM in Parallels. Installed a
>>> x86_64-w64 R version.
>>>
>>>
>>>
>>> "** byte-compile and prepare package for lazy loading
>>> ERROR: lazy loading failed for package 'shiny'
>>> * removing 'C:/Users/witoldwolski/AppData/Local/R/win-library/4.2/shiny'
>>> Warning in install.packages :"
>>
>> Can we please have the full output?
>>
>> Best,
>> Uwe Ligges
>>
>>
>>
>>> On Thu, 15 Dec 2022 at 19:09, Simon Urbanek <simon.urbanek at r-project.org> wrote:
>>>>
>>>> Yes:
>>>>
>>>> $ R CMD INSTALL --help | grep error
>>>>         --no-clean-on-error       do not remove installed package on error
>>>>
>>>> But probably more commonly used way is to install the package from its unpacked directory as that avoids the use of temporary directories in the first place.
>>>>
>>>> In you case you can also use --no-test-load and the non-functional package will still be installed so you can inspect it.
>>>>
>>>> Cheers,
>>>> Simon
>>>>
>>>> PS: please don't cross-post
>>>>
>>>>
>>>>> On Dec 16, 2022, at 7:01 AM, Witold E Wolski <wewolski at gmail.com> wrote:
>>>>>
>>>>> I am getting a package build error, and can not figure out the problem.
>>>>> The error is
>>>>> "
>>>>> ERROR: lazy loading failed for package 'prolfqua'
>>>>> * removing 'C:/Users/
>>>>> "
>>>>> However since R CMD build removes the temp directory and does not give
>>>>> any other errors how can I find out what the build problem is?
>>>>>
>>>>> Is there a way to disable the temp directory removal?
>>>>>
>>>>> Best Regards
>>>>> Witek
>>>>> --
>>>>> Witold Eryk Wolski
>>>>>
>>>>> ______________________________________________
>>>>> R-devel at r-project.org mailing list
>>>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>>>>
>>>>
>>>
>>>
> 
> 
> 
> --
> Witold Eryk Wolski
> 
> ______________________________________________
> R-help at r-project.org mailing list -- To UNSUBSCRIBE and more, see
> https://stat.ethz.ch/mailman/listinfo/r-help
> PLEASE do read the posting guide http://www.R-project.org/posting-guide.html
> and provide commented, minimal, self-contained, reproducible code.


From @oko| @end|ng |rom |n@@-tou|ou@e@|r  Mon Dec 19 11:17:36 2022
From: @oko| @end|ng |rom |n@@-tou|ou@e@|r (Serguei Sokol)
Date: Mon, 19 Dec 2022 11:17:36 +0100
Subject: [Rd] [R] I do not want that R CMD build removes temp directory
In-Reply-To: <CAAjnpdiR6sugnRDB93UNGGxuQ0O_F-8nNOQtcd=u7-tmZEh4Ow@mail.gmail.com>
References: <CAAjnpdg8uLOBBEHWEWq81R+t0sUy=TiTPN_fy2WrgTn2-AWRqA@mail.gmail.com>
 <24A51D24-B62A-42E2-94C4-6842EFC87D50@R-project.org>
 <CAAjnpdhUb6eJ78wZd501AH0CnkDYN7TQ0U=sP7RXpYjQTd0Reg@mail.gmail.com>
 <b2825ce6-6601-eb65-fffd-981db52feb58@statistik.tu-dortmund.de>
 <CAAjnpdiR6sugnRDB93UNGGxuQ0O_F-8nNOQtcd=u7-tmZEh4Ow@mail.gmail.com>
Message-ID: <d5cff7f3-487f-9a2c-b2c1-7ddb6c8cb59e@insa-toulouse.fr>

Le 19/12/2022 ? 10:52, Witold E Wolski a ?crit?:
> Dear Uwe,
>
> Unfortunately there isn't much of an output. This is all what I have:
>
> $ R CMD INSTALL --log prolfqua
> Warning: unknown option '--log'
> * installing to library 'C:/Users/witoldwolski/AppData/Local/R/win-library/4.2'
> * installing *source* package 'prolfqua' ...
> ** using staged installation
> ** R
> ** data
> ** inst
> ** byte-compile and prepare package for lazy loading
> ERROR: lazy loading failed for package 'prolfqua'
> * removing 'C:/Users/witoldwolski/AppData/Local/R/win-library/4.2/prolfqua'
>
> Also with --no-test-load option the install is failing :
>
> $ R CMD INSTALL --clean --no-test-load prolfqua
>
> * installing to library 'C:/Users/witoldwolski/AppData/Local/R/win-library/4.2'
> * installing *source* package 'prolfqua' ...
> ** using staged installation
> ** R
> ** data
> ** inst
> ** byte-compile and prepare package for lazy loading
> ERROR: lazy loading failed for package 'prolfqua'
> * removing 'C:/Users/witoldwolski/AppData/Local/R/win-library/4.2/prolfqua'
>
> And including "--no-clean-on-error" also does not help because the
> installation directory is empty.
You don't show the full command you run. If you included also "--clean" 
as in previous command, may be it just does what is asked, i.e. clean 
the temp dir ?
I don't know what prevails: "--clean" or "--no-clean-on-error" if put 
simultaneously.

Best,
Serguei.

>
>
> Tested the install, on macos M1, linux ARM64, linux x86, Windows 64,
> and it works everywhere except
> Parallels Windows 64 on ARM M1.
>
> R version 4.2.2 (2022-10-31 ucrt) -- "Innocent and Trusting"
> Copyright (C) 2022 The R Foundation for Statistical Computing
> Platform: x86_64-w64-mingw32/x64 (64-bit)
>
> best regards
> Witek
>
>
>
> On Fri, 16 Dec 2022 at 11:24, Uwe Ligges
> <ligges at statistik.tu-dortmund.de> wrote:
>>
>>
>> On 15.12.2022 21:47, Witold E Wolski wrote:
>>> Thank you Simon,
>>>
>>> It seems not to be related to the R package but rather to the OS,
>>> (just got the same error when installing the shiny R package from
>>> CRAN).
>>> I am on an M1 mac running Windows ARM in Parallels. Installed a
>>> x86_64-w64 R version.
>>>
>>>
>>>
>>> "** byte-compile and prepare package for lazy loading
>>> ERROR: lazy loading failed for package 'shiny'
>>> * removing 'C:/Users/witoldwolski/AppData/Local/R/win-library/4.2/shiny'
>>> Warning in install.packages :"
>> Can we please have the full output?
>>
>> Best,
>> Uwe Ligges
>>
>>
>>
>>> On Thu, 15 Dec 2022 at 19:09, Simon Urbanek <simon.urbanek at r-project.org> wrote:
>>>> Yes:
>>>>
>>>> $ R CMD INSTALL --help | grep error
>>>>         --no-clean-on-error       do not remove installed package on error
>>>>
>>>> But probably more commonly used way is to install the package from its unpacked directory as that avoids the use of temporary directories in the first place.
>>>>
>>>> In you case you can also use --no-test-load and the non-functional package will still be installed so you can inspect it.
>>>>
>>>> Cheers,
>>>> Simon
>>>>
>>>> PS: please don't cross-post
>>>>
>>>>
>>>>> On Dec 16, 2022, at 7:01 AM, Witold E Wolski <wewolski at gmail.com> wrote:
>>>>>
>>>>> I am getting a package build error, and can not figure out the problem.
>>>>> The error is
>>>>> "
>>>>> ERROR: lazy loading failed for package 'prolfqua'
>>>>> * removing 'C:/Users/
>>>>> "
>>>>> However since R CMD build removes the temp directory and does not give
>>>>> any other errors how can I find out what the build problem is?
>>>>>
>>>>> Is there a way to disable the temp directory removal?
>>>>>
>>>>> Best Regards
>>>>> Witek
>>>>> --
>>>>> Witold Eryk Wolski
>>>>>
>>>>> ______________________________________________
>>>>> R-devel at r-project.org mailing list
>>>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>>>>
>>>
>
>
> --
> Witold Eryk Wolski
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


-- 
Serguei Sokol
Ingenieur de recherche INRAE

Cellule Math?matiques
TBI, INSA/INRAE UMR 792, INSA/CNRS UMR 5504
135 Avenue de Rangueil
31077 Toulouse Cedex 04

tel: +33 5 61 55 98 49
email: sokol at insa-toulouse.fr
http://www.toulouse-biotechnology-institute.fr/en/technology_platforms/mathematics-cell.html


From tom@@@k@||ber@ @end|ng |rom gm@||@com  Mon Dec 19 11:42:09 2022
From: tom@@@k@||ber@ @end|ng |rom gm@||@com (Tomas Kalibera)
Date: Mon, 19 Dec 2022 11:42:09 +0100
Subject: [Rd] [R] I do not want that R CMD build removes temp directory
In-Reply-To: <179a373c-d53a-849c-3c83-43fb09148fb9@statistik.tu-dortmund.de>
References: <CAAjnpdg8uLOBBEHWEWq81R+t0sUy=TiTPN_fy2WrgTn2-AWRqA@mail.gmail.com>
 <24A51D24-B62A-42E2-94C4-6842EFC87D50@R-project.org>
 <CAAjnpdhUb6eJ78wZd501AH0CnkDYN7TQ0U=sP7RXpYjQTd0Reg@mail.gmail.com>
 <b2825ce6-6601-eb65-fffd-981db52feb58@statistik.tu-dortmund.de>
 <CAAjnpdiR6sugnRDB93UNGGxuQ0O_F-8nNOQtcd=u7-tmZEh4Ow@mail.gmail.com>
 <179a373c-d53a-849c-3c83-43fb09148fb9@statistik.tu-dortmund.de>
Message-ID: <9a88642f-3e1a-a000-4ce4-a27a28e86ea1@gmail.com>


On 12/19/22 11:08, Uwe Ligges wrote:
> Ah, before that you wrote
>
> ""
> ERROR: lazy loading failed for package 'prolfqua'
> * removing 'C:Users
> "
>
> and C:Users? without a slash sonds suspicious. Now with the new output 
> I do not see where the issue is from. Does this also happen when you 
> try it on winbuilder?

You can try Process Monitor (from sysinternals) to get a trace of system 
calls and failures. There may be something indicative there.

If it works in Winbuilder and on your Windows installation, and you 
don't do anything special in the package, and can't find a way to debug 
this, you can perhaps assume it is specific to your Parallels Windows 
installation and ignore.

You can try with a shorter username (e.g. "witold" only - up to 8 ASCII 
characters) - maybe your installation in Parallels doesn't enable short 
names by default on the used volume - but, this is a guess, the trace 
would allow to tell more, and I would expect an indicative error message 
if this were the cause.

Best
Tomas


>
> Best,
> Uwe Ligges
>
> On 19.12.2022 10:52, Witold E Wolski wrote:
>> Dear Uwe,
>>
>> Unfortunately there isn't much of an output. This is all what I have:
>>
>> $ R CMD INSTALL --log prolfqua
>> Warning: unknown option '--log'
>> * installing to library 
>> 'C:/Users/witoldwolski/AppData/Local/R/win-library/4.2'
>> * installing *source* package 'prolfqua' ...
>> ** using staged installation
>> ** R
>> ** data
>> ** inst
>> ** byte-compile and prepare package for lazy loading
>> ERROR: lazy loading failed for package 'prolfqua'
>> * removing 
>> 'C:/Users/witoldwolski/AppData/Local/R/win-library/4.2/prolfqua'
>>
>> Also with --no-test-load option the install is failing :
>>
>> $ R CMD INSTALL --clean --no-test-load prolfqua
>>
>> * installing to library 
>> 'C:/Users/witoldwolski/AppData/Local/R/win-library/4.2'
>> * installing *source* package 'prolfqua' ...
>> ** using staged installation
>> ** R
>> ** data
>> ** inst
>> ** byte-compile and prepare package for lazy loading
>> ERROR: lazy loading failed for package 'prolfqua'
>> * removing 
>> 'C:/Users/witoldwolski/AppData/Local/R/win-library/4.2/prolfqua'
>>
>> And including "--no-clean-on-error" also does not help because the
>> installation directory is empty.
>>
>>
>> Tested the install, on macos M1, linux ARM64, linux x86, Windows 64,
>> and it works everywhere except
>> Parallels Windows 64 on ARM M1.
>>
>> R version 4.2.2 (2022-10-31 ucrt) -- "Innocent and Trusting"
>> Copyright (C) 2022 The R Foundation for Statistical Computing
>> Platform: x86_64-w64-mingw32/x64 (64-bit)
>>
>> best regards
>> Witek
>>
>>
>>
>> On Fri, 16 Dec 2022 at 11:24, Uwe Ligges
>> <ligges at statistik.tu-dortmund.de> wrote:
>>>
>>>
>>>
>>> On 15.12.2022 21:47, Witold E Wolski wrote:
>>>> Thank you Simon,
>>>>
>>>> It seems not to be related to the R package but rather to the OS,
>>>> (just got the same error when installing the shiny R package from
>>>> CRAN).
>>>> I am on an M1 mac running Windows ARM in Parallels. Installed a
>>>> x86_64-w64 R version.
>>>>
>>>>
>>>>
>>>> "** byte-compile and prepare package for lazy loading
>>>> ERROR: lazy loading failed for package 'shiny'
>>>> * removing 
>>>> 'C:/Users/witoldwolski/AppData/Local/R/win-library/4.2/shiny'
>>>> Warning in install.packages :"
>>>
>>> Can we please have the full output?
>>>
>>> Best,
>>> Uwe Ligges
>>>
>>>
>>>
>>>> On Thu, 15 Dec 2022 at 19:09, Simon Urbanek 
>>>> <simon.urbanek at r-project.org> wrote:
>>>>>
>>>>> Yes:
>>>>>
>>>>> $ R CMD INSTALL --help | grep error
>>>>> ??????? --no-clean-on-error?????? do not remove installed package 
>>>>> on error
>>>>>
>>>>> But probably more commonly used way is to install the package from 
>>>>> its unpacked directory as that avoids the use of temporary 
>>>>> directories in the first place.
>>>>>
>>>>> In you case you can also use --no-test-load and the non-functional 
>>>>> package will still be installed so you can inspect it.
>>>>>
>>>>> Cheers,
>>>>> Simon
>>>>>
>>>>> PS: please don't cross-post
>>>>>
>>>>>
>>>>>> On Dec 16, 2022, at 7:01 AM, Witold E Wolski <wewolski at gmail.com> 
>>>>>> wrote:
>>>>>>
>>>>>> I am getting a package build error, and can not figure out the 
>>>>>> problem.
>>>>>> The error is
>>>>>> "
>>>>>> ERROR: lazy loading failed for package 'prolfqua'
>>>>>> * removing 'C:/Users/
>>>>>> "
>>>>>> However since R CMD build removes the temp directory and does not 
>>>>>> give
>>>>>> any other errors how can I find out what the build problem is?
>>>>>>
>>>>>> Is there a way to disable the temp directory removal?
>>>>>>
>>>>>> Best Regards
>>>>>> Witek
>>>>>> -- 
>>>>>> Witold Eryk Wolski
>>>>>>
>>>>>> ______________________________________________
>>>>>> R-devel at r-project.org mailing list
>>>>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>>>>>
>>>>>
>>>>
>>>>
>>
>>
>>
>> -- 
>> Witold Eryk Wolski
>>
>> ______________________________________________
>> R-help at r-project.org mailing list -- To UNSUBSCRIBE and more, see
>> https://stat.ethz.ch/mailman/listinfo/r-help
>> PLEASE do read the posting guide 
>> http://www.R-project.org/posting-guide.html
>> and provide commented, minimal, self-contained, reproducible code.
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


