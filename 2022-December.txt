From henr|k@bengt@@on @end|ng |rom gm@||@com  Mon Dec  5 23:19:09 2022
From: henr|k@bengt@@on @end|ng |rom gm@||@com (Henrik Bengtsson)
Date: Mon, 5 Dec 2022 14:19:09 -0800
Subject: [Rd] 
 R-devel: toLatex() for sessionInfo needs to escape new 'Time
 zone' entry
In-Reply-To: <CAFDcVCSjtrHNOXMm7zDDau7FgyK=Chv1eTDVafj4hi0tRT6b_Q@mail.gmail.com>
References: <CAFDcVCSjtrHNOXMm7zDDau7FgyK=Chv1eTDVafj4hi0tRT6b_Q@mail.gmail.com>
Message-ID: <CAFDcVCS5L81zNDO4QVHDCLxeAaD7xEN9QXbur9gT0M-__ewWWA@mail.gmail.com>

I've moved this to https://bugs.r-project.org/show_bug.cgi?id=18443.

/Henrik

On Wed, Nov 30, 2022 at 2:03 PM Henrik Bengtsson
<henrik.bengtsson at gmail.com> wrote:
>
> BACKGROUND:
>
> In recent versions of R-devel, sessionInfo() has a 'tzone' element, e.g.
>
> > sessionInfo()$tzone
> [1] "America/Los_Angeles"
>
>
> ISSUE:
>
> Some time zones, like the one above, has an underscore.  This
> underscore is *not* escaped by utils:::toLatex.sessionInfo, e.g.
>
> $ TZ="America/Los_Angeles" Rscript --vanilla -e "toLatex(sessionInfo())"
> \begin{itemize}\raggedright
>   \item R Under development (unstable) (2022-11-30 r83391),
> \verb|x86_64-pc-linux-gnu|
>   \item Locale: \verb|LC_CTYPE=en_US.UTF-8|, \verb|LC_NUMERIC=C|,
> \verb|LC_TIME=en_US.UTF-8|, \verb|LC_COLLATE=en_US.UTF-8|,
> \verb|LC_MONETARY=en_US.UTF-8|, \verb|LC_MESSAGES=en_US.UTF-8|,
> \verb|LC_PAPER=en_US.UTF-8|, \verb|LC_NAME=C|, \verb|LC_ADDRESS=C|,
> \verb|LC_TELEPHONE=C|, \verb|LC_MEASUREMENT=en_US.UTF-8|,
> \verb|LC_IDENTIFICATION=C|
>   \item Time zone America/Los_Angeles
>   \item Running under: \verb|Ubuntu 20.04.5 LTS|
>   \item Matrix products: default
>   \item BLAS:   \verb|/home/hb/software/R-devel/trunk/lib/R/lib/libRblas.so|
>   \item LAPACK: \verb|/home/hb/software/R-devel/trunk/lib/R/lib/libRlapack.so|
>   \item Base packages: base, datasets, graphics, grDevices, methods,
>     stats, utils
>   \item Loaded via a namespace (and not attached): compiler~4.3.0
> \end{itemize}
>
> This causes LaTeX-based vignettes using toLatex(sessionInfo()) to fail
> their LaTeX compilation with an error, e.g.
>
> Error: processing vignette 'mypkg.Rnw' failed with diagnostics:
> Running 'texi2dvi' on 'mypkg.tex' failed.
> LaTeX errors:
> ! Missing $ inserted.
> <inserted text>
>                 $
> l.684   \item Time zone America/Los_
>                                     Angeles
> ! LaTeX Error: Command \item invalid in math mode.
>
>
> SUGGESTION:
>
> To fix this, either escape any underscores, e.g.
>
>   \item Time zone America/Los\_Angeles
>
> or use \verb as done elsewhere:
>
>   \item Time zone \verb|America/Los_Angeles|
>
> /Henrik


From @pencer@gr@ve@ @end|ng |rom e||ect|vede|en@e@org  Fri Dec  9 01:12:34 2022
From: @pencer@gr@ve@ @end|ng |rom e||ect|vede|en@e@org (Spencer Graves)
Date: Thu, 8 Dec 2022 18:12:34 -0600
Subject: [Rd] unlist preserve common class?
Message-ID: <1de177a0-7373-d878-7edd-411fd53aa2fc@effectivedefense.org>

Consider:


 > str(unlist(list(Sys.Date())))
  num 19334


 > str(unlist(list(factor('a'))))
  Factor w/ 1 level "a": 1


	  I naively expected "str(unlist(list(Sys.Date())))" to return an 
object of class 'Date'.  After some thought, I felt a need to ask this 
list if they think that the core R language might benefit from modifying 
the language so "str(unlist(list(Sys.Date())))" was of class 'Date', at 
least as an option.


	  Comments?
	  Thanks,
	  Spencer Graves


 > sessionInfo()
R version 4.2.2 (2022-10-31)
Platform: x86_64-apple-darwin17.0 (64-bit)
Running under: macOS Big Sur 11.7.1

Matrix products: default
LAPACK: 
/Library/Frameworks/R.framework/Versions/4.2/Resources/lib/libRlapack.dylib

locale:
[1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8

attached base packages:
[1] stats     graphics  grDevices utils     datasets  methods   base

loaded via a namespace (and not attached):
[1] compiler_4.2.2 tools_4.2.2


From g@bembecker @end|ng |rom gm@||@com  Fri Dec  9 03:20:26 2022
From: g@bembecker @end|ng |rom gm@||@com (Gabriel Becker)
Date: Thu, 8 Dec 2022 18:20:26 -0800
Subject: [Rd] unlist preserve common class?
In-Reply-To: <1de177a0-7373-d878-7edd-411fd53aa2fc@effectivedefense.org>
References: <1de177a0-7373-d878-7edd-411fd53aa2fc@effectivedefense.org>
Message-ID: <CAD4oTHFOkAGT1APipWNSpb_57vc6LCAeZbOK4kBydiCiem-ZZg@mail.gmail.com>

Hi Spencer,

My 2c.

According to the docs, factors are special-cased. Other S3 'classes' could
be special-cased, such as Date in your example, I suppose, but it is not
clear how what you're describing could be implemented for the general case.

Suppose I define an S3 "class" called my_awesome_class, and have a list of
3 of them in it, and no other guarantees are provided. What should, or even
could, R do in the case of unlist(list_of_awesomes)?

There is no guarantee that I as an S3 developer have provided a c method
for my class such that we could say the unlist call above is equivalent
(roughly) to do.call(c, list_of_awesomes), nor that I provided any other
particular "mash this set of my_awesome_class objects into one". Nor is it
even guaranteed that the concept of combining my_awesome_class objects is
even coherent, or would produce a new my_awesome_class object when
performed if it is.

That said, your example was of length one, we could special case (the
default method of) unlist so that for x *not a list*, we're guaranteed that

identical(unlist(list(x)), x) == TRUE

This would simplify certain code, such as the one from your motivating
example, but at the cost of making the output of unlist across inputs less
consistent and less easy to reason about and predict. In other words the
answer to the question "what class is unlist(list_of_awesomes)? " would
become "it depends on how many of them are in the list"... That wouldn't be
a good thing on balance, imho.

Best,
~G

On Thu, Dec 8, 2022 at 5:44 PM Spencer Graves <
spencer.graves at effectivedefense.org> wrote:

> Consider:
>
>
>  > str(unlist(list(Sys.Date())))
>   num 19334
>
>
>  > str(unlist(list(factor('a'))))
>   Factor w/ 1 level "a": 1
>
>
>           I naively expected "str(unlist(list(Sys.Date())))" to return an
> object of class 'Date'.  After some thought, I felt a need to ask this
> list if they think that the core R language might benefit from modifying
> the language so "str(unlist(list(Sys.Date())))" was of class 'Date', at
> least as an option.
>
>
>           Comments?
>           Thanks,
>           Spencer Graves
>
>
>  > sessionInfo()
> R version 4.2.2 (2022-10-31)
> Platform: x86_64-apple-darwin17.0 (64-bit)
> Running under: macOS Big Sur 11.7.1
>
> Matrix products: default
> LAPACK:
> /Library/Frameworks/R.framework/Versions/4.2/Resources/lib/libRlapack.dylib
>
> locale:
> [1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8
>
> attached base packages:
> [1] stats     graphics  grDevices utils     datasets  methods   base
>
> loaded via a namespace (and not attached):
> [1] compiler_4.2.2 tools_4.2.2
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>

	[[alternative HTML version deleted]]


From @pencer@gr@ve@ @end|ng |rom e||ect|vede|en@e@org  Fri Dec  9 05:21:07 2022
From: @pencer@gr@ve@ @end|ng |rom e||ect|vede|en@e@org (Spencer Graves)
Date: Thu, 8 Dec 2022 22:21:07 -0600
Subject: [Rd] unlist preserve common class?
In-Reply-To: <CAD4oTHFOkAGT1APipWNSpb_57vc6LCAeZbOK4kBydiCiem-ZZg@mail.gmail.com>
References: <1de177a0-7373-d878-7edd-411fd53aa2fc@effectivedefense.org>
 <CAD4oTHFOkAGT1APipWNSpb_57vc6LCAeZbOK4kBydiCiem-ZZg@mail.gmail.com>
Message-ID: <05625875-f069-f5ce-008d-84e8eec2b5ea@effectivedefense.org>

Hi, Gabriel:


On 12/8/22 8:20 PM, Gabriel Becker wrote:
> Hi Spencer,
> 
> My 2c.
> 
> According to the docs, factors are special-cased. Other S3 'classes' 
> could be special-cased, such as Date in your example, I suppose, but it 
> is not clear how what you're describing could be implemented for the 
> general case.
> 
> Suppose I define an S3 "class" called my_awesome_class, and have a list 
> of 3 of them in it, and no other guarantees are provided. What should, 
> or even could, R do in the case of unlist(list_of_awesomes)?
> 
> There is no guarantee that I as an S3 developer have provided a c method 
> for my class such that we could say the unlist call above is equivalent 
> (roughly) to do.call(c, list_of_awesomes), nor that I provided any other 
> particular "mash this set of my_awesome_class objects into one". Nor is 
> it even guaranteed that the concept of combining my_awesome_classobjects 
> is even coherent, or would produce a new my_awesome_classobject when 
> performed if it is.


	  What about adding another argument to create, e.g.,


unlist(x, recursive = TRUE, use.names = TRUE, attributeFunction=NULL)


	  Then assign the assign the results of the current "unlist(x, ...)" 
to, say, "ux", and follow that by



if(!is.null(attributeFunction))attributes(ux) <- attributeFunction(x)


return(ux)


	  An alternative could be to have a default attributeFunction, that 
computes the attributes of each component of x and keeps only the ones 
that are shared by all components of x.  This would be the same as the 
current behavior for factors IF each component had the same factor 
levels and would drop attributes that are different between components. 
For S4 classes, if the attributes were not ALL identical, then all the 
attributes would be dropped, as with the current behavior.  This should 
not be a problem for S3 generics, because they should always check to 
make sure all the required attributes are available.

> 
> That said, your example was of length one, 


	  My example was of length one to provide a minimal, self-contained 
example.  That was motivated by a more complicated example, which took 
me a couple of hours to understand why it wasn't working as I expected ;-)


	  Thanks for your reply.


	  Spencer Graves


we could special case (the
> default method of) unlist so that for x /not a list/, we're guaranteed that
> 
> identical(unlist(list(x)), x) == TRUE
> 
> This would simplify certain code, such as the one from your motivating 
> example, but at the cost of making the output of unlist across inputs 
> less consistent and less easy to reason about and predict. In other 
> words the answer to the question "what class is 
> unlist(list_of_awesomes)? " would become "it depends on how many of them 
> are in the list"... That wouldn't be a good thing on balance, imho.
> 
> Best,
> ~G
> 
> On Thu, Dec 8, 2022 at 5:44 PM Spencer Graves 
> <spencer.graves at effectivedefense.org 
> <mailto:spencer.graves at effectivedefense.org>> wrote:
> 
>     Consider:
> 
> 
>      ?> str(unlist(list(Sys.Date())))
>      ? num 19334
> 
> 
>      ?> str(unlist(list(factor('a'))))
>      ? Factor w/ 1 level "a": 1
> 
> 
>      ? ? ? ? ? I naively expected "str(unlist(list(Sys.Date())))" to
>     return an
>     object of class 'Date'.? After some thought, I felt a need to ask this
>     list if they think that the core R language might benefit from
>     modifying
>     the language so "str(unlist(list(Sys.Date())))" was of class 'Date', at
>     least as an option.
> 
> 
>      ? ? ? ? ? Comments?
>      ? ? ? ? ? Thanks,
>      ? ? ? ? ? Spencer Graves
> 
> 
>      ?> sessionInfo()
>     R version 4.2.2 (2022-10-31)
>     Platform: x86_64-apple-darwin17.0 (64-bit)
>     Running under: macOS Big Sur 11.7.1
> 
>     Matrix products: default
>     LAPACK:
>     /Library/Frameworks/R.framework/Versions/4.2/Resources/lib/libRlapack.dylib
> 
>     locale:
>     [1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8
> 
>     attached base packages:
>     [1] stats? ? ?graphics? grDevices utils? ? ?datasets? methods? ?base
> 
>     loaded via a namespace (and not attached):
>     [1] compiler_4.2.2 tools_4.2.2
> 
>     ______________________________________________
>     R-devel at r-project.org <mailto:R-devel at r-project.org> mailing list
>     https://stat.ethz.ch/mailman/listinfo/r-devel
>     <https://stat.ethz.ch/mailman/listinfo/r-devel>
>


From g@bembecker @end|ng |rom gm@||@com  Fri Dec  9 09:44:16 2022
From: g@bembecker @end|ng |rom gm@||@com (Gabriel Becker)
Date: Fri, 9 Dec 2022 00:44:16 -0800
Subject: [Rd] unlist preserve common class?
In-Reply-To: <05625875-f069-f5ce-008d-84e8eec2b5ea@effectivedefense.org>
References: <1de177a0-7373-d878-7edd-411fd53aa2fc@effectivedefense.org>
 <CAD4oTHFOkAGT1APipWNSpb_57vc6LCAeZbOK4kBydiCiem-ZZg@mail.gmail.com>
 <05625875-f069-f5ce-008d-84e8eec2b5ea@effectivedefense.org>
Message-ID: <CAD4oTHHK9H-xM9qpiDhJrEUmm=aEGEEBURG2yhc0P7apQYUbCw@mail.gmail.com>

Hi Spencer,

Another, potentially somewhat less disruptive/more general option would be
to add a stop.at.object or stop.at.nonlist (or alternatively list.only)
argument, which would basically translate to "collapse the list structure
to flat, but don't try to combine the leaf elements within the list. You
could then do whatever you wanted to said now-flat list as a second call.

i.e.,

flatlist <- unlist(structured_list, list.only = TRUE)
final_res <- cool_combiner_fun(flatlist)

I had to do something similar years ago when I was implementing xpath for
arbitrary R objects, because you can, e.g., always get x[1] out of x
infinitely many times, so I defined "Stopping functions". The fully general
case would be to do the same here, and accept, e.g., stopping.cond, but
that is probably too complex for unlist and might simply belong as a
completely separate function.

Best,
~G

On Thu, Dec 8, 2022 at 8:21 PM Spencer Graves <
spencer.graves at effectivedefense.org> wrote:

> Hi, Gabriel:
>
>
> On 12/8/22 8:20 PM, Gabriel Becker wrote:
> > Hi Spencer,
> >
> > My 2c.
> >
> > According to the docs, factors are special-cased. Other S3 'classes'
> > could be special-cased, such as Date in your example, I suppose, but it
> > is not clear how what you're describing could be implemented for the
> > general case.
> >
> > Suppose I define an S3 "class" called my_awesome_class, and have a list
> > of 3 of them in it, and no other guarantees are provided. What should,
> > or even could, R do in the case of unlist(list_of_awesomes)?
> >
> > There is no guarantee that I as an S3 developer have provided a c method
> > for my class such that we could say the unlist call above is equivalent
> > (roughly) to do.call(c, list_of_awesomes), nor that I provided any other
> > particular "mash this set of my_awesome_class objects into one". Nor is
> > it even guaranteed that the concept of combining my_awesome_classobjects
> > is even coherent, or would produce a new my_awesome_classobject when
> > performed if it is.
>
>
>           What about adding another argument to create, e.g.,
>
>
> unlist(x, recursive = TRUE, use.names = TRUE, attributeFunction=NULL)
>
>
>           Then assign the assign the results of the current "unlist(x,
> ...)"
> to, say, "ux", and follow that by
>
>
>
> if(!is.null(attributeFunction))attributes(ux) <- attributeFunction(x)
>
>
> return(ux)
>
>
>           An alternative could be to have a default attributeFunction,
> that
> computes the attributes of each component of x and keeps only the ones
> that are shared by all components of x.  This would be the same as the
> current behavior for factors IF each component had the same factor
> levels and would drop attributes that are different between components.
> For S4 classes, if the attributes were not ALL identical, then all the
> attributes would be dropped, as with the current behavior.  This should
> not be a problem for S3 generics, because they should always check to
> make sure all the required attributes are available.
>
> >
> > That said, your example was of length one,
>
>
>           My example was of length one to provide a minimal,
> self-contained
> example.  That was motivated by a more complicated example, which took
> me a couple of hours to understand why it wasn't working as I expected ;-)
>
>
>           Thanks for your reply.
>
>
>           Spencer Graves
>
>
> we could special case (the
> > default method of) unlist so that for x /not a list/, we're guaranteed
> that
> >
> > identical(unlist(list(x)), x) == TRUE
> >
> > This would simplify certain code, such as the one from your motivating
> > example, but at the cost of making the output of unlist across inputs
> > less consistent and less easy to reason about and predict. In other
> > words the answer to the question "what class is
> > unlist(list_of_awesomes)? " would become "it depends on how many of them
> > are in the list"... That wouldn't be a good thing on balance, imho.
> >
> > Best,
> > ~G
> >
> > On Thu, Dec 8, 2022 at 5:44 PM Spencer Graves
> > <spencer.graves at effectivedefense.org
> > <mailto:spencer.graves at effectivedefense.org>> wrote:
> >
> >     Consider:
> >
> >
> >       > str(unlist(list(Sys.Date())))
> >        num 19334
> >
> >
> >       > str(unlist(list(factor('a'))))
> >        Factor w/ 1 level "a": 1
> >
> >
> >                I naively expected "str(unlist(list(Sys.Date())))" to
> >     return an
> >     object of class 'Date'.  After some thought, I felt a need to ask
> this
> >     list if they think that the core R language might benefit from
> >     modifying
> >     the language so "str(unlist(list(Sys.Date())))" was of class 'Date',
> at
> >     least as an option.
> >
> >
> >                Comments?
> >                Thanks,
> >                Spencer Graves
> >
> >
> >       > sessionInfo()
> >     R version 4.2.2 (2022-10-31)
> >     Platform: x86_64-apple-darwin17.0 (64-bit)
> >     Running under: macOS Big Sur 11.7.1
> >
> >     Matrix products: default
> >     LAPACK:
> >
>  /Library/Frameworks/R.framework/Versions/4.2/Resources/lib/libRlapack.dylib
> >
> >     locale:
> >     [1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8
> >
> >     attached base packages:
> >     [1] stats     graphics  grDevices utils     datasets  methods   base
> >
> >     loaded via a namespace (and not attached):
> >     [1] compiler_4.2.2 tools_4.2.2
> >
> >     ______________________________________________
> >     R-devel at r-project.org <mailto:R-devel at r-project.org> mailing list
> >     https://stat.ethz.ch/mailman/listinfo/r-devel
> >     <https://stat.ethz.ch/mailman/listinfo/r-devel>
> >
>

	[[alternative HTML version deleted]]


From murdoch@dunc@n @end|ng |rom gm@||@com  Fri Dec  9 11:33:31 2022
From: murdoch@dunc@n @end|ng |rom gm@||@com (Duncan Murdoch)
Date: Fri, 9 Dec 2022 05:33:31 -0500
Subject: [Rd] unlist preserve common class?
In-Reply-To: <CAD4oTHFOkAGT1APipWNSpb_57vc6LCAeZbOK4kBydiCiem-ZZg@mail.gmail.com>
References: <1de177a0-7373-d878-7edd-411fd53aa2fc@effectivedefense.org>
 <CAD4oTHFOkAGT1APipWNSpb_57vc6LCAeZbOK4kBydiCiem-ZZg@mail.gmail.com>
Message-ID: <0ea6747f-ff8d-fb54-a259-44378180b096@gmail.com>

On 08/12/2022 9:20 p.m., Gabriel Becker wrote:
> Hi Spencer,
> 
> My 2c.
> 
> According to the docs, factors are special-cased. Other S3 'classes' could
> be special-cased, such as Date in your example, I suppose, but it is not
> clear how what you're describing could be implemented for the general case.
> 
> Suppose I define an S3 "class" called my_awesome_class, and have a list of
> 3 of them in it, and no other guarantees are provided. What should, or even
> could, R do in the case of unlist(list_of_awesomes)?
> 
> There is no guarantee that I as an S3 developer have provided a c method
> for my class such that we could say the unlist call above is equivalent
> (roughly) to do.call(c, list_of_awesomes), nor that I provided any other
> particular "mash this set of my_awesome_class objects into one". Nor is it
> even guaranteed that the concept of combining my_awesome_class objects is
> even coherent, or would produce a new my_awesome_class object when
> performed if it is.

For the non-recursive case of unlist, do.call(c, list_of_awesomes) is a 
pretty reasonable expectation.  Wouldn't the simplest change be to make 
no change to unlist, but suggest this alternative in the documentation?

Duncan Murdoch

> 
> That said, your example was of length one, we could special case (the
> default method of) unlist so that for x *not a list*, we're guaranteed that
> 
> identical(unlist(list(x)), x) == TRUE
> 
> This would simplify certain code, such as the one from your motivating
> example, but at the cost of making the output of unlist across inputs less
> consistent and less easy to reason about and predict. In other words the
> answer to the question "what class is unlist(list_of_awesomes)? " would
> become "it depends on how many of them are in the list"... That wouldn't be
> a good thing on balance, imho.
> 
> Best,
> ~G
> 
> On Thu, Dec 8, 2022 at 5:44 PM Spencer Graves <
> spencer.graves at effectivedefense.org> wrote:
> 
>> Consider:
>>
>>
>>   > str(unlist(list(Sys.Date())))
>>    num 19334
>>
>>
>>   > str(unlist(list(factor('a'))))
>>    Factor w/ 1 level "a": 1
>>
>>
>>            I naively expected "str(unlist(list(Sys.Date())))" to return an
>> object of class 'Date'.  After some thought, I felt a need to ask this
>> list if they think that the core R language might benefit from modifying
>> the language so "str(unlist(list(Sys.Date())))" was of class 'Date', at
>> least as an option.
>>
>>
>>            Comments?
>>            Thanks,
>>            Spencer Graves
>>
>>
>>   > sessionInfo()
>> R version 4.2.2 (2022-10-31)
>> Platform: x86_64-apple-darwin17.0 (64-bit)
>> Running under: macOS Big Sur 11.7.1
>>
>> Matrix products: default
>> LAPACK:
>> /Library/Frameworks/R.framework/Versions/4.2/Resources/lib/libRlapack.dylib
>>
>> locale:
>> [1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8
>>
>> attached base packages:
>> [1] stats     graphics  grDevices utils     datasets  methods   base
>>
>> loaded via a namespace (and not attached):
>> [1] compiler_4.2.2 tools_4.2.2
>>
>> ______________________________________________
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>
> 
> 	[[alternative HTML version deleted]]
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From @pencer@gr@ve@ @end|ng |rom prod@y@e@com  Fri Dec  9 11:57:33 2022
From: @pencer@gr@ve@ @end|ng |rom prod@y@e@com (Spencer Graves)
Date: Fri, 9 Dec 2022 04:57:33 -0600
Subject: [Rd] unlist preserve common class?
In-Reply-To: <0ea6747f-ff8d-fb54-a259-44378180b096@gmail.com>
References: <1de177a0-7373-d878-7edd-411fd53aa2fc@effectivedefense.org>
 <CAD4oTHFOkAGT1APipWNSpb_57vc6LCAeZbOK4kBydiCiem-ZZg@mail.gmail.com>
 <0ea6747f-ff8d-fb54-a259-44378180b096@gmail.com>
Message-ID: <05f39c78-d1f2-90f0-fe67-b656b529bec0@prodsyse.com>



On 12/9/22 4:33 AM, Duncan Murdoch wrote:
> On 08/12/2022 9:20 p.m., Gabriel Becker wrote:
>> Hi Spencer,
>>
>> My 2c.
>>
>> According to the docs, factors are special-cased. Other S3 'classes' 
>> could
>> be special-cased, such as Date in your example, I suppose, but it is not
>> clear how what you're describing could be implemented for the general 
>> case.
>>
>> Suppose I define an S3 "class" called my_awesome_class, and have a 
>> list of
>> 3 of them in it, and no other guarantees are provided. What should, or 
>> even
>> could, R do in the case of unlist(list_of_awesomes)?
>>
>> There is no guarantee that I as an S3 developer have provided a c method
>> for my class such that we could say the unlist call above is equivalent
>> (roughly) to do.call(c, list_of_awesomes), nor that I provided any other
>> particular "mash this set of my_awesome_class objects into one". Nor 
>> is it
>> even guaranteed that the concept of combining my_awesome_class objects is
>> even coherent, or would produce a new my_awesome_class object when
>> performed if it is.
> 
> For the non-recursive case of unlist, do.call(c, list_of_awesomes) is a 
> pretty reasonable expectation.? Wouldn't the simplest change be to make 
> no change to unlist, but suggest this alternative in the documentation?
> 
> Duncan Murdoch


Hi, Duncan and Gabrien:


	  That's ultimately what I did.  My real problem was more like:


(todaytomorrow <- list(d0=Sys.Date()+0:1, d1=Sys.Date()+2:3))

$d0
[1] "2022-12-09" "2022-12-10"

$d1
[1] "2022-12-11" "2022-12-12"


	  I wanted the minimum of the maxima.  So I naively did:


(tt2 <- sapply(todaytomorrow, min))


    d0    d1
19335 19337


	  So I next tried:


 > (tt3 <- as.Date(tt2))

Error in as.Date.numeric(tt2) : 'origin' must be supplied


	  I believe that the default "origin" for "as.Date.numeric" should be 
"1970-01-01".  I implemented that several years ago in Ecfun:


 > (tt4 <- Ecfun::as.Date1970(tt2))

           d0           d1
"2022-12-09" "2022-12-11"


	  However, before getting here, I first misdiagnosed the problem with 
"tt2", believing that "min" not "sapply" was stripping the attributes.


	  After fixing that problem, I came to Duncan's solution:


 > (tt4 <- lapply(todaytomorrow, min))

$d0
[1] "2022-12-09"

$d1
[1] "2022-12-11"


(maximin <- do.call('max', tt4))
	
[1] "2022-12-11"


	  Conclusion:  It would help to document Duncan's solution using 
"do.call" and avoiding "unlist" and "sapply".  I brought it to the 
attention of this group, because I wondered if you might want to change 
the language -- or at least the documentation, as Duncan suggested.


	  Thanks,
	  Spencer Graves
> 
>>
>> That said, your example was of length one, we could special case (the
>> default method of) unlist so that for x *not a list*, we're guaranteed 
>> that
>>
>> identical(unlist(list(x)), x) == TRUE
>>
>> This would simplify certain code, such as the one from your motivating
>> example, but at the cost of making the output of unlist across inputs 
>> less
>> consistent and less easy to reason about and predict. In other words the
>> answer to the question "what class is unlist(list_of_awesomes)? " would
>> become "it depends on how many of them are in the list"... That 
>> wouldn't be
>> a good thing on balance, imho.
>>
>> Best,
>> ~G
>>
>> On Thu, Dec 8, 2022 at 5:44 PM Spencer Graves <
>> spencer.graves at effectivedefense.org> wrote:
>>
>>> Consider:
>>>
>>>
>>> ? > str(unlist(list(Sys.Date())))
>>> ?? num 19334
>>>
>>>
>>> ? > str(unlist(list(factor('a'))))
>>> ?? Factor w/ 1 level "a": 1
>>>
>>>
>>> ?????????? I naively expected "str(unlist(list(Sys.Date())))" to 
>>> return an
>>> object of class 'Date'.? After some thought, I felt a need to ask this
>>> list if they think that the core R language might benefit from modifying
>>> the language so "str(unlist(list(Sys.Date())))" was of class 'Date', at
>>> least as an option.
>>>
>>>
>>> ?????????? Comments?
>>> ?????????? Thanks,
>>> ?????????? Spencer Graves
>>>
>>>
>>> ? > sessionInfo()
>>> R version 4.2.2 (2022-10-31)
>>> Platform: x86_64-apple-darwin17.0 (64-bit)
>>> Running under: macOS Big Sur 11.7.1
>>>
>>> Matrix products: default
>>> LAPACK:
>>> /Library/Frameworks/R.framework/Versions/4.2/Resources/lib/libRlapack.dylib
>>>
>>> locale:
>>> [1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8
>>>
>>> attached base packages:
>>> [1] stats???? graphics? grDevices utils???? datasets? methods?? base
>>>
>>> loaded via a namespace (and not attached):
>>> [1] compiler_4.2.2 tools_4.2.2
>>>
>>> ______________________________________________
>>> R-devel at r-project.org mailing list
>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>>
>>
>> ????[[alternative HTML version deleted]]
>>
>> ______________________________________________
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From wewo|@k| @end|ng |rom gm@||@com  Thu Dec 15 19:01:38 2022
From: wewo|@k| @end|ng |rom gm@||@com (Witold E Wolski)
Date: Thu, 15 Dec 2022 19:01:38 +0100
Subject: [Rd] I do not want that R CMD build removes temp directory
Message-ID: <CAAjnpdg8uLOBBEHWEWq81R+t0sUy=TiTPN_fy2WrgTn2-AWRqA@mail.gmail.com>

I am getting a package build error, and can not figure out the problem.
The error is
"
ERROR: lazy loading failed for package 'prolfqua'
* removing 'C:/Users/
"
However since R CMD build removes the temp directory and does not give
any other errors how can I find out what the build problem is?

Is there a way to disable the temp directory removal?

Best Regards
Witek
-- 
Witold Eryk Wolski


From @|mon@urb@nek @end|ng |rom R-project@org  Thu Dec 15 19:09:34 2022
From: @|mon@urb@nek @end|ng |rom R-project@org (Simon Urbanek)
Date: Fri, 16 Dec 2022 07:09:34 +1300
Subject: [Rd] I do not want that R CMD build removes temp directory
In-Reply-To: <CAAjnpdg8uLOBBEHWEWq81R+t0sUy=TiTPN_fy2WrgTn2-AWRqA@mail.gmail.com>
References: <CAAjnpdg8uLOBBEHWEWq81R+t0sUy=TiTPN_fy2WrgTn2-AWRqA@mail.gmail.com>
Message-ID: <24A51D24-B62A-42E2-94C4-6842EFC87D50@R-project.org>

Yes:

$ R CMD INSTALL --help | grep error
      --no-clean-on-error	do not remove installed package on error

But probably more commonly used way is to install the package from its unpacked directory as that avoids the use of temporary directories in the first place.

In you case you can also use --no-test-load and the non-functional package will still be installed so you can inspect it.

Cheers,
Simon

PS: please don't cross-post


> On Dec 16, 2022, at 7:01 AM, Witold E Wolski <wewolski at gmail.com> wrote:
> 
> I am getting a package build error, and can not figure out the problem.
> The error is
> "
> ERROR: lazy loading failed for package 'prolfqua'
> * removing 'C:/Users/
> "
> However since R CMD build removes the temp directory and does not give
> any other errors how can I find out what the build problem is?
> 
> Is there a way to disable the temp directory removal?
> 
> Best Regards
> Witek
> -- 
> Witold Eryk Wolski
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
> 


From wewo|@k| @end|ng |rom gm@||@com  Thu Dec 15 21:47:24 2022
From: wewo|@k| @end|ng |rom gm@||@com (Witold E Wolski)
Date: Thu, 15 Dec 2022 21:47:24 +0100
Subject: [Rd] I do not want that R CMD build removes temp directory
In-Reply-To: <24A51D24-B62A-42E2-94C4-6842EFC87D50@R-project.org>
References: <CAAjnpdg8uLOBBEHWEWq81R+t0sUy=TiTPN_fy2WrgTn2-AWRqA@mail.gmail.com>
 <24A51D24-B62A-42E2-94C4-6842EFC87D50@R-project.org>
Message-ID: <CAAjnpdhUb6eJ78wZd501AH0CnkDYN7TQ0U=sP7RXpYjQTd0Reg@mail.gmail.com>

Thank you Simon,

It seems not to be related to the R package but rather to the OS,
(just got the same error when installing the shiny R package from
CRAN).
I am on an M1 mac running Windows ARM in Parallels. Installed a
x86_64-w64 R version.



"** byte-compile and prepare package for lazy loading
ERROR: lazy loading failed for package 'shiny'
* removing 'C:/Users/witoldwolski/AppData/Local/R/win-library/4.2/shiny'
Warning in install.packages :"

On Thu, 15 Dec 2022 at 19:09, Simon Urbanek <simon.urbanek at r-project.org> wrote:
>
> Yes:
>
> $ R CMD INSTALL --help | grep error
>       --no-clean-on-error       do not remove installed package on error
>
> But probably more commonly used way is to install the package from its unpacked directory as that avoids the use of temporary directories in the first place.
>
> In you case you can also use --no-test-load and the non-functional package will still be installed so you can inspect it.
>
> Cheers,
> Simon
>
> PS: please don't cross-post
>
>
> > On Dec 16, 2022, at 7:01 AM, Witold E Wolski <wewolski at gmail.com> wrote:
> >
> > I am getting a package build error, and can not figure out the problem.
> > The error is
> > "
> > ERROR: lazy loading failed for package 'prolfqua'
> > * removing 'C:/Users/
> > "
> > However since R CMD build removes the temp directory and does not give
> > any other errors how can I find out what the build problem is?
> >
> > Is there a way to disable the temp directory removal?
> >
> > Best Regards
> > Witek
> > --
> > Witold Eryk Wolski
> >
> > ______________________________________________
> > R-devel at r-project.org mailing list
> > https://stat.ethz.ch/mailman/listinfo/r-devel
> >
>


-- 
Witold Eryk Wolski


From ||gge@ @end|ng |rom @t@t|@t|k@tu-dortmund@de  Fri Dec 16 11:24:49 2022
From: ||gge@ @end|ng |rom @t@t|@t|k@tu-dortmund@de (Uwe Ligges)
Date: Fri, 16 Dec 2022 11:24:49 +0100
Subject: [Rd] [R]  I do not want that R CMD build removes temp directory
In-Reply-To: <CAAjnpdhUb6eJ78wZd501AH0CnkDYN7TQ0U=sP7RXpYjQTd0Reg@mail.gmail.com>
References: <CAAjnpdg8uLOBBEHWEWq81R+t0sUy=TiTPN_fy2WrgTn2-AWRqA@mail.gmail.com>
 <24A51D24-B62A-42E2-94C4-6842EFC87D50@R-project.org>
 <CAAjnpdhUb6eJ78wZd501AH0CnkDYN7TQ0U=sP7RXpYjQTd0Reg@mail.gmail.com>
Message-ID: <b2825ce6-6601-eb65-fffd-981db52feb58@statistik.tu-dortmund.de>



On 15.12.2022 21:47, Witold E Wolski wrote:
> Thank you Simon,
> 
> It seems not to be related to the R package but rather to the OS,
> (just got the same error when installing the shiny R package from
> CRAN).
> I am on an M1 mac running Windows ARM in Parallels. Installed a
> x86_64-w64 R version.
> 
> 
> 
> "** byte-compile and prepare package for lazy loading
> ERROR: lazy loading failed for package 'shiny'
> * removing 'C:/Users/witoldwolski/AppData/Local/R/win-library/4.2/shiny'
> Warning in install.packages :"

Can we please have the full output?

Best,
Uwe Ligges



> On Thu, 15 Dec 2022 at 19:09, Simon Urbanek <simon.urbanek at r-project.org> wrote:
>>
>> Yes:
>>
>> $ R CMD INSTALL --help | grep error
>>        --no-clean-on-error       do not remove installed package on error
>>
>> But probably more commonly used way is to install the package from its unpacked directory as that avoids the use of temporary directories in the first place.
>>
>> In you case you can also use --no-test-load and the non-functional package will still be installed so you can inspect it.
>>
>> Cheers,
>> Simon
>>
>> PS: please don't cross-post
>>
>>
>>> On Dec 16, 2022, at 7:01 AM, Witold E Wolski <wewolski at gmail.com> wrote:
>>>
>>> I am getting a package build error, and can not figure out the problem.
>>> The error is
>>> "
>>> ERROR: lazy loading failed for package 'prolfqua'
>>> * removing 'C:/Users/
>>> "
>>> However since R CMD build removes the temp directory and does not give
>>> any other errors how can I find out what the build problem is?
>>>
>>> Is there a way to disable the temp directory removal?
>>>
>>> Best Regards
>>> Witek
>>> --
>>> Witold Eryk Wolski
>>>
>>> ______________________________________________
>>> R-devel at r-project.org mailing list
>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>>
>>
> 
>


From edd @end|ng |rom deb|@n@org  Sun Dec 18 20:41:01 2022
From: edd @end|ng |rom deb|@n@org (Dirk Eddelbuettel)
Date: Sun, 18 Dec 2022 13:41:01 -0600
Subject: [Rd] Repeated segfault at installing sysdata.rda with clang/san
 build
Message-ID: <25503.27853.968124.950608@rob.eddelbuettel.com>


I have maintained two SAN/UBSAN builds (one gcc, one clang) for many years
(even though I also happily use Winston's newer/bigger container and
generally recommend its use) and still have GitHub actions build them on a
weekly schedule (as they follow r-devel).

The clang one started to fail a little while ago. I just tried it locally,
and it too blew up in the same spot:


[...]
make[4]: Entering directory '/tmp/R-devel/src/library/tools'
installing 'sysdata.rda'

 *** caught segfault ***
address (nil), cause 'memory not mapped'

Traceback:
 1: load(srcFile, e)
 2: tools:::sysdata2LazyLoadDB("./R/sysdata.rda", "../../../library/tools/R")
An irrecoverable exception occurred. R is aborting now ...
/bin/bash: line 2: 10795 Done                    echo "tools:::sysdata2LazyLoadDB(\"./R/sysdata.rda\",\"../../../library/tools/R\")"
     10796 Segmentation fault      (core dumped) | R_DEFAULT_PACKAGES=NULL LC_ALL=C R_ENABLE_JIT=0 TZ=UTC ../../../bin/R --vanilla --no-echo
make[4]: Leaving directory '/tmp/R-devel/src/library/tools'
make[4]: *** [../../../share/make/basepkg.mk:151: sysdata] Error 139
make[3]: *** [Makefile:36: all] Error 2
make[3]: Leaving directory '/tmp/R-devel/src/library/tools'
make[2]: Leaving directory '/tmp/R-devel/src/library'
make[2]: *** [Makefile:37: R] Error 1
make[1]: *** [Makefile:28: R] Error 1
make[1]: Leaving directory '/tmp/R-devel/src'
make: *** [Makefile:61: R] Error 1


I assume it shouldn't. But I am also not too familiar with internals of
sysdata and the lazyload format.  The Dockerfile is in the repository at

  https://github.com/rocker-org/r-devel-san-clang

in case someone else wants to take stab. I may try this on my Ubuntu machine
too in temporary directory.

Dirk

-- 
dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org


From @|mon@urb@nek @end|ng |rom R-project@org  Mon Dec 19 01:57:29 2022
From: @|mon@urb@nek @end|ng |rom R-project@org (Simon Urbanek)
Date: Mon, 19 Dec 2022 13:57:29 +1300
Subject: [Rd] Repeated segfault at installing sysdata.rda with clang/san
 build
In-Reply-To: <25503.27853.968124.950608@rob.eddelbuettel.com>
References: <25503.27853.968124.950608@rob.eddelbuettel.com>
Message-ID: <6E666940-253D-4DAB-BAF3-B80A3349593A@R-project.org>

This crashes unceremoniously in glibc:

> tools:::sysdata2LazyLoadDB("./R/sysdata.rda","../../../library/tools/R")
xdrmem_create(0x7ffdf19699e0, 0x7ffdf1969ba0, 4)

Program received signal SIGSEGV, Segmentation fault.
0x0000000000000000 in ?? ()
(gdb) bt

#0  0x0000000000000000 in ?? ()
#1  0x00005559317e61d4 in xdrmem_create ()
#2  0x00007fd82b9bd08b in R_XDRDecodeInteger (buf=<optimized out>) at saveload.c:2246
#3  0x00007fd82ba007db in InInteger (stream=0x7ffc57b50f40) at serialize.c:425
#4  0x00007fd82b9ff743 in R_Unserialize (stream=0x7ffc57b50f40) at serialize.c:2175
#5  0x00007fd82ba0bfa4 in do_unserializeFromConn (call=0x625000706cb8, op=0x6250000298a8, args=<optimized out>, env=<optimized out>) at ser\
ialize.c:2628
#6  0x00007fd82b8b5435 in do_internal (call=call at entry=0x625000706ba0, op=op at entry=0x62500000b678, args=<optimized out>, env=0x1, env at entry\
=0x625000d7b3a0) at names.c:1403

int attribute_hidden R_XDRDecodeInteger(void *buf)
{
    XDR xdrs;
    int i, success;

    xdrmem_create(&xdrs, (char *) buf, R_XDR_INTEGER_SIZE, XDR_DECODE);

The odd thing is there is nothing wrong with the input, the location is accessible and just 4 bytes of an integer as expected:

(gdb) p/x *((int*)0x7ffdf1969ba0)
$4 = 0x3000000

which should turn into a perfectly normal 3L, so this a something bad happening in xdrmem_create() which is part of glibc. But looking at glibc sources, nothing suspicious in there, since it just populates XDR and shouldn't call any function, but yet it looks like it is trying to call a function which is a NULL pointer ... This is outside of R so really odd - perhaps some odd interaction of *SAN and glibc? No idea why it suddenly appeared - perhaps some changes in toolchain or glibc?

Cheers,
Simon


> On 19/12/2022, at 8:41 AM, Dirk Eddelbuettel <edd at debian.org> wrote:
> 
> 
> I have maintained two SAN/UBSAN builds (one gcc, one clang) for many years
> (even though I also happily use Winston's newer/bigger container and
> generally recommend its use) and still have GitHub actions build them on a
> weekly schedule (as they follow r-devel).
> 
> The clang one started to fail a little while ago. I just tried it locally,
> and it too blew up in the same spot:
> 
> 
> [...]
> make[4]: Entering directory '/tmp/R-devel/src/library/tools'
> installing 'sysdata.rda'
> 
> *** caught segfault ***
> address (nil), cause 'memory not mapped'
> 
> Traceback:
> 1: load(srcFile, e)
> 2: tools:::sysdata2LazyLoadDB("./R/sysdata.rda", "../../../library/tools/R")
> An irrecoverable exception occurred. R is aborting now ...
> /bin/bash: line 2: 10795 Done                    echo "tools:::sysdata2LazyLoadDB(\"./R/sysdata.rda\",\"../../../library/tools/R\")"
>     10796 Segmentation fault      (core dumped) | R_DEFAULT_PACKAGES=NULL LC_ALL=C R_ENABLE_JIT=0 TZ=UTC ../../../bin/R --vanilla --no-echo
> make[4]: Leaving directory '/tmp/R-devel/src/library/tools'
> make[4]: *** [../../../share/make/basepkg.mk:151: sysdata] Error 139
> make[3]: *** [Makefile:36: all] Error 2
> make[3]: Leaving directory '/tmp/R-devel/src/library/tools'
> make[2]: Leaving directory '/tmp/R-devel/src/library'
> make[2]: *** [Makefile:37: R] Error 1
> make[1]: *** [Makefile:28: R] Error 1
> make[1]: Leaving directory '/tmp/R-devel/src'
> make: *** [Makefile:61: R] Error 1
> 
> 
> I assume it shouldn't. But I am also not too familiar with internals of
> sysdata and the lazyload format.  The Dockerfile is in the repository at
> 
>  https://github.com/rocker-org/r-devel-san-clang
> 
> in case someone else wants to take stab. I may try this on my Ubuntu machine
> too in temporary directory.
> 
> Dirk
> 
> -- 
> dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
> 


From edd @end|ng |rom deb|@n@org  Mon Dec 19 03:43:16 2022
From: edd @end|ng |rom deb|@n@org (Dirk Eddelbuettel)
Date: Sun, 18 Dec 2022 20:43:16 -0600
Subject: [Rd] Repeated segfault at installing sysdata.rda with clang/san
 build
In-Reply-To: <6E666940-253D-4DAB-BAF3-B80A3349593A@R-project.org>
References: <25503.27853.968124.950608@rob.eddelbuettel.com>
 <6E666940-253D-4DAB-BAF3-B80A3349593A@R-project.org>
Message-ID: <25503.53188.444343.954168@rob.eddelbuettel.com>


Very nice follow-up, Simon.

On 19 December 2022 at 13:57, Simon Urbanek wrote:
| This crashes unceremoniously in glibc:
| 
| > tools:::sysdata2LazyLoadDB("./R/sysdata.rda","../../../library/tools/R")
| xdrmem_create(0x7ffdf19699e0, 0x7ffdf1969ba0, 4)
| 
| Program received signal SIGSEGV, Segmentation fault.
| 0x0000000000000000 in ?? ()
| (gdb) bt
| 
| #0  0x0000000000000000 in ?? ()
| #1  0x00005559317e61d4 in xdrmem_create ()
| #2  0x00007fd82b9bd08b in R_XDRDecodeInteger (buf=<optimized out>) at saveload.c:2246
| #3  0x00007fd82ba007db in InInteger (stream=0x7ffc57b50f40) at serialize.c:425
| #4  0x00007fd82b9ff743 in R_Unserialize (stream=0x7ffc57b50f40) at serialize.c:2175
| #5  0x00007fd82ba0bfa4 in do_unserializeFromConn (call=0x625000706cb8, op=0x6250000298a8, args=<optimized out>, env=<optimized out>) at ser\
| ialize.c:2628
| #6  0x00007fd82b8b5435 in do_internal (call=call at entry=0x625000706ba0, op=op at entry=0x62500000b678, args=<optimized out>, env=0x1, env at entry\
| =0x625000d7b3a0) at names.c:1403
| 
| int attribute_hidden R_XDRDecodeInteger(void *buf)
| {
|     XDR xdrs;
|     int i, success;
| 
|     xdrmem_create(&xdrs, (char *) buf, R_XDR_INTEGER_SIZE, XDR_DECODE);
| 
| The odd thing is there is nothing wrong with the input, the location is accessible and just 4 bytes of an integer as expected:
| 
| (gdb) p/x *((int*)0x7ffdf1969ba0)
| $4 = 0x3000000
| 
| which should turn into a perfectly normal 3L, so this a something bad happening in xdrmem_create() which is part of glibc. But looking at glibc sources, nothing suspicious in there, since it just populates XDR and shouldn't call any function, but yet it looks like it is trying to call a function which is a NULL pointer ... This is outside of R so really odd - perhaps some odd interaction of *SAN and glibc? No idea why it suddenly appeared - perhaps some changes in toolchain or glibc?

Yep. And as I had on schedule for some time with no issues it likely is
external. No obvious how to minimize it to a smaller reproducible example
though.

Best, Dirk

| Cheers,
| Simon
| 
| 
| > On 19/12/2022, at 8:41 AM, Dirk Eddelbuettel <edd at debian.org> wrote:
| > 
| > 
| > I have maintained two SAN/UBSAN builds (one gcc, one clang) for many years
| > (even though I also happily use Winston's newer/bigger container and
| > generally recommend its use) and still have GitHub actions build them on a
| > weekly schedule (as they follow r-devel).
| > 
| > The clang one started to fail a little while ago. I just tried it locally,
| > and it too blew up in the same spot:
| > 
| > 
| > [...]
| > make[4]: Entering directory '/tmp/R-devel/src/library/tools'
| > installing 'sysdata.rda'
| > 
| > *** caught segfault ***
| > address (nil), cause 'memory not mapped'
| > 
| > Traceback:
| > 1: load(srcFile, e)
| > 2: tools:::sysdata2LazyLoadDB("./R/sysdata.rda", "../../../library/tools/R")
| > An irrecoverable exception occurred. R is aborting now ...
| > /bin/bash: line 2: 10795 Done                    echo "tools:::sysdata2LazyLoadDB(\"./R/sysdata.rda\",\"../../../library/tools/R\")"
| >     10796 Segmentation fault      (core dumped) | R_DEFAULT_PACKAGES=NULL LC_ALL=C R_ENABLE_JIT=0 TZ=UTC ../../../bin/R --vanilla --no-echo
| > make[4]: Leaving directory '/tmp/R-devel/src/library/tools'
| > make[4]: *** [../../../share/make/basepkg.mk:151: sysdata] Error 139
| > make[3]: *** [Makefile:36: all] Error 2
| > make[3]: Leaving directory '/tmp/R-devel/src/library/tools'
| > make[2]: Leaving directory '/tmp/R-devel/src/library'
| > make[2]: *** [Makefile:37: R] Error 1
| > make[1]: *** [Makefile:28: R] Error 1
| > make[1]: Leaving directory '/tmp/R-devel/src'
| > make: *** [Makefile:61: R] Error 1
| > 
| > 
| > I assume it shouldn't. But I am also not too familiar with internals of
| > sysdata and the lazyload format.  The Dockerfile is in the repository at
| > 
| >  https://github.com/rocker-org/r-devel-san-clang
| > 
| > in case someone else wants to take stab. I may try this on my Ubuntu machine
| > too in temporary directory.
| > 
| > Dirk
| > 
| > -- 
| > dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org
| > 
| > ______________________________________________
| > R-devel at r-project.org mailing list
| > https://stat.ethz.ch/mailman/listinfo/r-devel
| > 
| 

-- 
dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org


From wewo|@k| @end|ng |rom gm@||@com  Mon Dec 19 10:52:30 2022
From: wewo|@k| @end|ng |rom gm@||@com (Witold E Wolski)
Date: Mon, 19 Dec 2022 10:52:30 +0100
Subject: [Rd] [R]  I do not want that R CMD build removes temp directory
In-Reply-To: <b2825ce6-6601-eb65-fffd-981db52feb58@statistik.tu-dortmund.de>
References: <CAAjnpdg8uLOBBEHWEWq81R+t0sUy=TiTPN_fy2WrgTn2-AWRqA@mail.gmail.com>
 <24A51D24-B62A-42E2-94C4-6842EFC87D50@R-project.org>
 <CAAjnpdhUb6eJ78wZd501AH0CnkDYN7TQ0U=sP7RXpYjQTd0Reg@mail.gmail.com>
 <b2825ce6-6601-eb65-fffd-981db52feb58@statistik.tu-dortmund.de>
Message-ID: <CAAjnpdiR6sugnRDB93UNGGxuQ0O_F-8nNOQtcd=u7-tmZEh4Ow@mail.gmail.com>

Dear Uwe,

Unfortunately there isn't much of an output. This is all what I have:

$ R CMD INSTALL --log prolfqua
Warning: unknown option '--log'
* installing to library 'C:/Users/witoldwolski/AppData/Local/R/win-library/4.2'
* installing *source* package 'prolfqua' ...
** using staged installation
** R
** data
** inst
** byte-compile and prepare package for lazy loading
ERROR: lazy loading failed for package 'prolfqua'
* removing 'C:/Users/witoldwolski/AppData/Local/R/win-library/4.2/prolfqua'

Also with --no-test-load option the install is failing :

$ R CMD INSTALL --clean --no-test-load prolfqua

* installing to library 'C:/Users/witoldwolski/AppData/Local/R/win-library/4.2'
* installing *source* package 'prolfqua' ...
** using staged installation
** R
** data
** inst
** byte-compile and prepare package for lazy loading
ERROR: lazy loading failed for package 'prolfqua'
* removing 'C:/Users/witoldwolski/AppData/Local/R/win-library/4.2/prolfqua'

And including "--no-clean-on-error" also does not help because the
installation directory is empty.


Tested the install, on macos M1, linux ARM64, linux x86, Windows 64,
and it works everywhere except
Parallels Windows 64 on ARM M1.

R version 4.2.2 (2022-10-31 ucrt) -- "Innocent and Trusting"
Copyright (C) 2022 The R Foundation for Statistical Computing
Platform: x86_64-w64-mingw32/x64 (64-bit)

best regards
Witek



On Fri, 16 Dec 2022 at 11:24, Uwe Ligges
<ligges at statistik.tu-dortmund.de> wrote:
>
>
>
> On 15.12.2022 21:47, Witold E Wolski wrote:
> > Thank you Simon,
> >
> > It seems not to be related to the R package but rather to the OS,
> > (just got the same error when installing the shiny R package from
> > CRAN).
> > I am on an M1 mac running Windows ARM in Parallels. Installed a
> > x86_64-w64 R version.
> >
> >
> >
> > "** byte-compile and prepare package for lazy loading
> > ERROR: lazy loading failed for package 'shiny'
> > * removing 'C:/Users/witoldwolski/AppData/Local/R/win-library/4.2/shiny'
> > Warning in install.packages :"
>
> Can we please have the full output?
>
> Best,
> Uwe Ligges
>
>
>
> > On Thu, 15 Dec 2022 at 19:09, Simon Urbanek <simon.urbanek at r-project.org> wrote:
> >>
> >> Yes:
> >>
> >> $ R CMD INSTALL --help | grep error
> >>        --no-clean-on-error       do not remove installed package on error
> >>
> >> But probably more commonly used way is to install the package from its unpacked directory as that avoids the use of temporary directories in the first place.
> >>
> >> In you case you can also use --no-test-load and the non-functional package will still be installed so you can inspect it.
> >>
> >> Cheers,
> >> Simon
> >>
> >> PS: please don't cross-post
> >>
> >>
> >>> On Dec 16, 2022, at 7:01 AM, Witold E Wolski <wewolski at gmail.com> wrote:
> >>>
> >>> I am getting a package build error, and can not figure out the problem.
> >>> The error is
> >>> "
> >>> ERROR: lazy loading failed for package 'prolfqua'
> >>> * removing 'C:/Users/
> >>> "
> >>> However since R CMD build removes the temp directory and does not give
> >>> any other errors how can I find out what the build problem is?
> >>>
> >>> Is there a way to disable the temp directory removal?
> >>>
> >>> Best Regards
> >>> Witek
> >>> --
> >>> Witold Eryk Wolski
> >>>
> >>> ______________________________________________
> >>> R-devel at r-project.org mailing list
> >>> https://stat.ethz.ch/mailman/listinfo/r-devel
> >>>
> >>
> >
> >



--
Witold Eryk Wolski


From ||gge@ @end|ng |rom @t@t|@t|k@tu-dortmund@de  Mon Dec 19 11:08:15 2022
From: ||gge@ @end|ng |rom @t@t|@t|k@tu-dortmund@de (Uwe Ligges)
Date: Mon, 19 Dec 2022 11:08:15 +0100
Subject: [Rd] [R]  I do not want that R CMD build removes temp directory
In-Reply-To: <CAAjnpdiR6sugnRDB93UNGGxuQ0O_F-8nNOQtcd=u7-tmZEh4Ow@mail.gmail.com>
References: <CAAjnpdg8uLOBBEHWEWq81R+t0sUy=TiTPN_fy2WrgTn2-AWRqA@mail.gmail.com>
 <24A51D24-B62A-42E2-94C4-6842EFC87D50@R-project.org>
 <CAAjnpdhUb6eJ78wZd501AH0CnkDYN7TQ0U=sP7RXpYjQTd0Reg@mail.gmail.com>
 <b2825ce6-6601-eb65-fffd-981db52feb58@statistik.tu-dortmund.de>
 <CAAjnpdiR6sugnRDB93UNGGxuQ0O_F-8nNOQtcd=u7-tmZEh4Ow@mail.gmail.com>
Message-ID: <179a373c-d53a-849c-3c83-43fb09148fb9@statistik.tu-dortmund.de>

Ah, before that you wrote

""
ERROR: lazy loading failed for package 'prolfqua'
* removing 'C:Users
"

and C:Users  without a slash sonds suspicious. Now with the new output I 
do not see where the issue is from. Does this also happen when you try 
it on winbuilder?

Best,
Uwe Ligges

On 19.12.2022 10:52, Witold E Wolski wrote:
> Dear Uwe,
> 
> Unfortunately there isn't much of an output. This is all what I have:
> 
> $ R CMD INSTALL --log prolfqua
> Warning: unknown option '--log'
> * installing to library 'C:/Users/witoldwolski/AppData/Local/R/win-library/4.2'
> * installing *source* package 'prolfqua' ...
> ** using staged installation
> ** R
> ** data
> ** inst
> ** byte-compile and prepare package for lazy loading
> ERROR: lazy loading failed for package 'prolfqua'
> * removing 'C:/Users/witoldwolski/AppData/Local/R/win-library/4.2/prolfqua'
> 
> Also with --no-test-load option the install is failing :
> 
> $ R CMD INSTALL --clean --no-test-load prolfqua
> 
> * installing to library 'C:/Users/witoldwolski/AppData/Local/R/win-library/4.2'
> * installing *source* package 'prolfqua' ...
> ** using staged installation
> ** R
> ** data
> ** inst
> ** byte-compile and prepare package for lazy loading
> ERROR: lazy loading failed for package 'prolfqua'
> * removing 'C:/Users/witoldwolski/AppData/Local/R/win-library/4.2/prolfqua'
> 
> And including "--no-clean-on-error" also does not help because the
> installation directory is empty.
> 
> 
> Tested the install, on macos M1, linux ARM64, linux x86, Windows 64,
> and it works everywhere except
> Parallels Windows 64 on ARM M1.
> 
> R version 4.2.2 (2022-10-31 ucrt) -- "Innocent and Trusting"
> Copyright (C) 2022 The R Foundation for Statistical Computing
> Platform: x86_64-w64-mingw32/x64 (64-bit)
> 
> best regards
> Witek
> 
> 
> 
> On Fri, 16 Dec 2022 at 11:24, Uwe Ligges
> <ligges at statistik.tu-dortmund.de> wrote:
>>
>>
>>
>> On 15.12.2022 21:47, Witold E Wolski wrote:
>>> Thank you Simon,
>>>
>>> It seems not to be related to the R package but rather to the OS,
>>> (just got the same error when installing the shiny R package from
>>> CRAN).
>>> I am on an M1 mac running Windows ARM in Parallels. Installed a
>>> x86_64-w64 R version.
>>>
>>>
>>>
>>> "** byte-compile and prepare package for lazy loading
>>> ERROR: lazy loading failed for package 'shiny'
>>> * removing 'C:/Users/witoldwolski/AppData/Local/R/win-library/4.2/shiny'
>>> Warning in install.packages :"
>>
>> Can we please have the full output?
>>
>> Best,
>> Uwe Ligges
>>
>>
>>
>>> On Thu, 15 Dec 2022 at 19:09, Simon Urbanek <simon.urbanek at r-project.org> wrote:
>>>>
>>>> Yes:
>>>>
>>>> $ R CMD INSTALL --help | grep error
>>>>         --no-clean-on-error       do not remove installed package on error
>>>>
>>>> But probably more commonly used way is to install the package from its unpacked directory as that avoids the use of temporary directories in the first place.
>>>>
>>>> In you case you can also use --no-test-load and the non-functional package will still be installed so you can inspect it.
>>>>
>>>> Cheers,
>>>> Simon
>>>>
>>>> PS: please don't cross-post
>>>>
>>>>
>>>>> On Dec 16, 2022, at 7:01 AM, Witold E Wolski <wewolski at gmail.com> wrote:
>>>>>
>>>>> I am getting a package build error, and can not figure out the problem.
>>>>> The error is
>>>>> "
>>>>> ERROR: lazy loading failed for package 'prolfqua'
>>>>> * removing 'C:/Users/
>>>>> "
>>>>> However since R CMD build removes the temp directory and does not give
>>>>> any other errors how can I find out what the build problem is?
>>>>>
>>>>> Is there a way to disable the temp directory removal?
>>>>>
>>>>> Best Regards
>>>>> Witek
>>>>> --
>>>>> Witold Eryk Wolski
>>>>>
>>>>> ______________________________________________
>>>>> R-devel at r-project.org mailing list
>>>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>>>>
>>>>
>>>
>>>
> 
> 
> 
> --
> Witold Eryk Wolski
> 
> ______________________________________________
> R-help at r-project.org mailing list -- To UNSUBSCRIBE and more, see
> https://stat.ethz.ch/mailman/listinfo/r-help
> PLEASE do read the posting guide http://www.R-project.org/posting-guide.html
> and provide commented, minimal, self-contained, reproducible code.


From @oko| @end|ng |rom |n@@-tou|ou@e@|r  Mon Dec 19 11:17:36 2022
From: @oko| @end|ng |rom |n@@-tou|ou@e@|r (Serguei Sokol)
Date: Mon, 19 Dec 2022 11:17:36 +0100
Subject: [Rd] [R] I do not want that R CMD build removes temp directory
In-Reply-To: <CAAjnpdiR6sugnRDB93UNGGxuQ0O_F-8nNOQtcd=u7-tmZEh4Ow@mail.gmail.com>
References: <CAAjnpdg8uLOBBEHWEWq81R+t0sUy=TiTPN_fy2WrgTn2-AWRqA@mail.gmail.com>
 <24A51D24-B62A-42E2-94C4-6842EFC87D50@R-project.org>
 <CAAjnpdhUb6eJ78wZd501AH0CnkDYN7TQ0U=sP7RXpYjQTd0Reg@mail.gmail.com>
 <b2825ce6-6601-eb65-fffd-981db52feb58@statistik.tu-dortmund.de>
 <CAAjnpdiR6sugnRDB93UNGGxuQ0O_F-8nNOQtcd=u7-tmZEh4Ow@mail.gmail.com>
Message-ID: <d5cff7f3-487f-9a2c-b2c1-7ddb6c8cb59e@insa-toulouse.fr>

Le 19/12/2022 ? 10:52, Witold E Wolski a ?crit?:
> Dear Uwe,
>
> Unfortunately there isn't much of an output. This is all what I have:
>
> $ R CMD INSTALL --log prolfqua
> Warning: unknown option '--log'
> * installing to library 'C:/Users/witoldwolski/AppData/Local/R/win-library/4.2'
> * installing *source* package 'prolfqua' ...
> ** using staged installation
> ** R
> ** data
> ** inst
> ** byte-compile and prepare package for lazy loading
> ERROR: lazy loading failed for package 'prolfqua'
> * removing 'C:/Users/witoldwolski/AppData/Local/R/win-library/4.2/prolfqua'
>
> Also with --no-test-load option the install is failing :
>
> $ R CMD INSTALL --clean --no-test-load prolfqua
>
> * installing to library 'C:/Users/witoldwolski/AppData/Local/R/win-library/4.2'
> * installing *source* package 'prolfqua' ...
> ** using staged installation
> ** R
> ** data
> ** inst
> ** byte-compile and prepare package for lazy loading
> ERROR: lazy loading failed for package 'prolfqua'
> * removing 'C:/Users/witoldwolski/AppData/Local/R/win-library/4.2/prolfqua'
>
> And including "--no-clean-on-error" also does not help because the
> installation directory is empty.
You don't show the full command you run. If you included also "--clean" 
as in previous command, may be it just does what is asked, i.e. clean 
the temp dir ?
I don't know what prevails: "--clean" or "--no-clean-on-error" if put 
simultaneously.

Best,
Serguei.

>
>
> Tested the install, on macos M1, linux ARM64, linux x86, Windows 64,
> and it works everywhere except
> Parallels Windows 64 on ARM M1.
>
> R version 4.2.2 (2022-10-31 ucrt) -- "Innocent and Trusting"
> Copyright (C) 2022 The R Foundation for Statistical Computing
> Platform: x86_64-w64-mingw32/x64 (64-bit)
>
> best regards
> Witek
>
>
>
> On Fri, 16 Dec 2022 at 11:24, Uwe Ligges
> <ligges at statistik.tu-dortmund.de> wrote:
>>
>>
>> On 15.12.2022 21:47, Witold E Wolski wrote:
>>> Thank you Simon,
>>>
>>> It seems not to be related to the R package but rather to the OS,
>>> (just got the same error when installing the shiny R package from
>>> CRAN).
>>> I am on an M1 mac running Windows ARM in Parallels. Installed a
>>> x86_64-w64 R version.
>>>
>>>
>>>
>>> "** byte-compile and prepare package for lazy loading
>>> ERROR: lazy loading failed for package 'shiny'
>>> * removing 'C:/Users/witoldwolski/AppData/Local/R/win-library/4.2/shiny'
>>> Warning in install.packages :"
>> Can we please have the full output?
>>
>> Best,
>> Uwe Ligges
>>
>>
>>
>>> On Thu, 15 Dec 2022 at 19:09, Simon Urbanek <simon.urbanek at r-project.org> wrote:
>>>> Yes:
>>>>
>>>> $ R CMD INSTALL --help | grep error
>>>>         --no-clean-on-error       do not remove installed package on error
>>>>
>>>> But probably more commonly used way is to install the package from its unpacked directory as that avoids the use of temporary directories in the first place.
>>>>
>>>> In you case you can also use --no-test-load and the non-functional package will still be installed so you can inspect it.
>>>>
>>>> Cheers,
>>>> Simon
>>>>
>>>> PS: please don't cross-post
>>>>
>>>>
>>>>> On Dec 16, 2022, at 7:01 AM, Witold E Wolski <wewolski at gmail.com> wrote:
>>>>>
>>>>> I am getting a package build error, and can not figure out the problem.
>>>>> The error is
>>>>> "
>>>>> ERROR: lazy loading failed for package 'prolfqua'
>>>>> * removing 'C:/Users/
>>>>> "
>>>>> However since R CMD build removes the temp directory and does not give
>>>>> any other errors how can I find out what the build problem is?
>>>>>
>>>>> Is there a way to disable the temp directory removal?
>>>>>
>>>>> Best Regards
>>>>> Witek
>>>>> --
>>>>> Witold Eryk Wolski
>>>>>
>>>>> ______________________________________________
>>>>> R-devel at r-project.org mailing list
>>>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>>>>
>>>
>
>
> --
> Witold Eryk Wolski
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


-- 
Serguei Sokol
Ingenieur de recherche INRAE

Cellule Math?matiques
TBI, INSA/INRAE UMR 792, INSA/CNRS UMR 5504
135 Avenue de Rangueil
31077 Toulouse Cedex 04

tel: +33 5 61 55 98 49
email: sokol at insa-toulouse.fr
http://www.toulouse-biotechnology-institute.fr/en/technology_platforms/mathematics-cell.html


From tom@@@k@||ber@ @end|ng |rom gm@||@com  Mon Dec 19 11:42:09 2022
From: tom@@@k@||ber@ @end|ng |rom gm@||@com (Tomas Kalibera)
Date: Mon, 19 Dec 2022 11:42:09 +0100
Subject: [Rd] [R] I do not want that R CMD build removes temp directory
In-Reply-To: <179a373c-d53a-849c-3c83-43fb09148fb9@statistik.tu-dortmund.de>
References: <CAAjnpdg8uLOBBEHWEWq81R+t0sUy=TiTPN_fy2WrgTn2-AWRqA@mail.gmail.com>
 <24A51D24-B62A-42E2-94C4-6842EFC87D50@R-project.org>
 <CAAjnpdhUb6eJ78wZd501AH0CnkDYN7TQ0U=sP7RXpYjQTd0Reg@mail.gmail.com>
 <b2825ce6-6601-eb65-fffd-981db52feb58@statistik.tu-dortmund.de>
 <CAAjnpdiR6sugnRDB93UNGGxuQ0O_F-8nNOQtcd=u7-tmZEh4Ow@mail.gmail.com>
 <179a373c-d53a-849c-3c83-43fb09148fb9@statistik.tu-dortmund.de>
Message-ID: <9a88642f-3e1a-a000-4ce4-a27a28e86ea1@gmail.com>


On 12/19/22 11:08, Uwe Ligges wrote:
> Ah, before that you wrote
>
> ""
> ERROR: lazy loading failed for package 'prolfqua'
> * removing 'C:Users
> "
>
> and C:Users? without a slash sonds suspicious. Now with the new output 
> I do not see where the issue is from. Does this also happen when you 
> try it on winbuilder?

You can try Process Monitor (from sysinternals) to get a trace of system 
calls and failures. There may be something indicative there.

If it works in Winbuilder and on your Windows installation, and you 
don't do anything special in the package, and can't find a way to debug 
this, you can perhaps assume it is specific to your Parallels Windows 
installation and ignore.

You can try with a shorter username (e.g. "witold" only - up to 8 ASCII 
characters) - maybe your installation in Parallels doesn't enable short 
names by default on the used volume - but, this is a guess, the trace 
would allow to tell more, and I would expect an indicative error message 
if this were the cause.

Best
Tomas


>
> Best,
> Uwe Ligges
>
> On 19.12.2022 10:52, Witold E Wolski wrote:
>> Dear Uwe,
>>
>> Unfortunately there isn't much of an output. This is all what I have:
>>
>> $ R CMD INSTALL --log prolfqua
>> Warning: unknown option '--log'
>> * installing to library 
>> 'C:/Users/witoldwolski/AppData/Local/R/win-library/4.2'
>> * installing *source* package 'prolfqua' ...
>> ** using staged installation
>> ** R
>> ** data
>> ** inst
>> ** byte-compile and prepare package for lazy loading
>> ERROR: lazy loading failed for package 'prolfqua'
>> * removing 
>> 'C:/Users/witoldwolski/AppData/Local/R/win-library/4.2/prolfqua'
>>
>> Also with --no-test-load option the install is failing :
>>
>> $ R CMD INSTALL --clean --no-test-load prolfqua
>>
>> * installing to library 
>> 'C:/Users/witoldwolski/AppData/Local/R/win-library/4.2'
>> * installing *source* package 'prolfqua' ...
>> ** using staged installation
>> ** R
>> ** data
>> ** inst
>> ** byte-compile and prepare package for lazy loading
>> ERROR: lazy loading failed for package 'prolfqua'
>> * removing 
>> 'C:/Users/witoldwolski/AppData/Local/R/win-library/4.2/prolfqua'
>>
>> And including "--no-clean-on-error" also does not help because the
>> installation directory is empty.
>>
>>
>> Tested the install, on macos M1, linux ARM64, linux x86, Windows 64,
>> and it works everywhere except
>> Parallels Windows 64 on ARM M1.
>>
>> R version 4.2.2 (2022-10-31 ucrt) -- "Innocent and Trusting"
>> Copyright (C) 2022 The R Foundation for Statistical Computing
>> Platform: x86_64-w64-mingw32/x64 (64-bit)
>>
>> best regards
>> Witek
>>
>>
>>
>> On Fri, 16 Dec 2022 at 11:24, Uwe Ligges
>> <ligges at statistik.tu-dortmund.de> wrote:
>>>
>>>
>>>
>>> On 15.12.2022 21:47, Witold E Wolski wrote:
>>>> Thank you Simon,
>>>>
>>>> It seems not to be related to the R package but rather to the OS,
>>>> (just got the same error when installing the shiny R package from
>>>> CRAN).
>>>> I am on an M1 mac running Windows ARM in Parallels. Installed a
>>>> x86_64-w64 R version.
>>>>
>>>>
>>>>
>>>> "** byte-compile and prepare package for lazy loading
>>>> ERROR: lazy loading failed for package 'shiny'
>>>> * removing 
>>>> 'C:/Users/witoldwolski/AppData/Local/R/win-library/4.2/shiny'
>>>> Warning in install.packages :"
>>>
>>> Can we please have the full output?
>>>
>>> Best,
>>> Uwe Ligges
>>>
>>>
>>>
>>>> On Thu, 15 Dec 2022 at 19:09, Simon Urbanek 
>>>> <simon.urbanek at r-project.org> wrote:
>>>>>
>>>>> Yes:
>>>>>
>>>>> $ R CMD INSTALL --help | grep error
>>>>> ??????? --no-clean-on-error?????? do not remove installed package 
>>>>> on error
>>>>>
>>>>> But probably more commonly used way is to install the package from 
>>>>> its unpacked directory as that avoids the use of temporary 
>>>>> directories in the first place.
>>>>>
>>>>> In you case you can also use --no-test-load and the non-functional 
>>>>> package will still be installed so you can inspect it.
>>>>>
>>>>> Cheers,
>>>>> Simon
>>>>>
>>>>> PS: please don't cross-post
>>>>>
>>>>>
>>>>>> On Dec 16, 2022, at 7:01 AM, Witold E Wolski <wewolski at gmail.com> 
>>>>>> wrote:
>>>>>>
>>>>>> I am getting a package build error, and can not figure out the 
>>>>>> problem.
>>>>>> The error is
>>>>>> "
>>>>>> ERROR: lazy loading failed for package 'prolfqua'
>>>>>> * removing 'C:/Users/
>>>>>> "
>>>>>> However since R CMD build removes the temp directory and does not 
>>>>>> give
>>>>>> any other errors how can I find out what the build problem is?
>>>>>>
>>>>>> Is there a way to disable the temp directory removal?
>>>>>>
>>>>>> Best Regards
>>>>>> Witek
>>>>>> -- 
>>>>>> Witold Eryk Wolski
>>>>>>
>>>>>> ______________________________________________
>>>>>> R-devel at r-project.org mailing list
>>>>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>>>>>
>>>>>
>>>>
>>>>
>>
>>
>>
>> -- 
>> Witold Eryk Wolski
>>
>> ______________________________________________
>> R-help at r-project.org mailing list -- To UNSUBSCRIBE and more, see
>> https://stat.ethz.ch/mailman/listinfo/r-help
>> PLEASE do read the posting guide 
>> http://www.R-project.org/posting-guide.html
>> and provide commented, minimal, self-contained, reproducible code.
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From |@r@@re|und @end|ng |rom gm@||@com  Tue Dec 20 12:33:40 2022
From: |@r@@re|und @end|ng |rom gm@||@com (Lars Relund)
Date: Tue, 20 Dec 2022 12:33:40 +0100
Subject: [Rd] F77_CALL(dgetrs) C++ call in R-devel
Message-ID: <CAGJijVNbg7CNu4tEkKomCknBHgzmXwMUEdYFXe=3zaMWRaHYJA@mail.gmail.com>

In my package, I have the method:

    /** Solve equations transpose(P)w = r. */
    int LASolveT(MatSimple<double> &P, MatSimple<double> &w, const
MatSimple<double> &r) {
        int rows = P.rows;
        int nrhs = 1;
        int lda = rows;
        int ldb = rows;
        int info = -1;
        MatSimple<int> ipivot(1,rows);
        w.Inject(r);    // copy r to w;
        F77_CALL(dgetrf)(&rows, &rows, &P(0,0), &lda, &ipivot(0,0), &info);
        if (info!=0) {
            cout << "Error in LASolve (dgetrf). Info=" << info << endl;
            return 1;
        }
        F77_CALL(dgetrs)("T", &rows, &nrhs, &P(0,0), &lda, &ipivot(0,0),
&w(0,0), &ldb, &info);("T", &rows, &nrhs, &P(0,0), &lda, &ipivot(0,0),
&w(0,0), &ldb, &info);
        if (info!=0) {
            cout << "Error in LASolve (dgetrs). Info=" << info << endl;
            return 1;
        }
        return 0;
    }

When compiling the package on using R-devel the error for F77_CALL(dgetrs)
occur:

matalg.h:67:25: error: too few arguments to function ?void dgetrs_(const
char*, const int*, const int*, const double*, const int*, const int*,
double*, const int*, int*, size_t)?
   67 |         F77_CALL(dgetrs)("T", &rows, &nrhs, &P(0,0), &lda,
&ipivot(0,0), &w(0,0), &ldb, &info);

It works in R-release and I guess it have something to do with
https://cran.r-project.org/doc/manuals/r-devel/NEWS.html and LAPACK.

Any hints on how to get it to work for both R-release and R-devel.

Best
Lars Relund

	[[alternative HTML version deleted]]


From edd @end|ng |rom deb|@n@org  Tue Dec 20 14:09:16 2022
From: edd @end|ng |rom deb|@n@org (Dirk Eddelbuettel)
Date: Tue, 20 Dec 2022 07:09:16 -0600
Subject: [Rd] F77_CALL(dgetrs) C++ call in R-devel
In-Reply-To: <CAGJijVNbg7CNu4tEkKomCknBHgzmXwMUEdYFXe=3zaMWRaHYJA@mail.gmail.com>
References: <CAGJijVNbg7CNu4tEkKomCknBHgzmXwMUEdYFXe=3zaMWRaHYJA@mail.gmail.com>
Message-ID: <25505.46076.413588.816423@rob.eddelbuettel.com>


On 20 December 2022 at 12:33, Lars Relund wrote:
| In my package, I have the method:
| 
|     /** Solve equations transpose(P)w = r. */
|     int LASolveT(MatSimple<double> &P, MatSimple<double> &w, const
| MatSimple<double> &r) {
|         int rows = P.rows;
|         int nrhs = 1;
|         int lda = rows;
|         int ldb = rows;
|         int info = -1;
|         MatSimple<int> ipivot(1,rows);
|         w.Inject(r);    // copy r to w;
|         F77_CALL(dgetrf)(&rows, &rows, &P(0,0), &lda, &ipivot(0,0), &info);
|         if (info!=0) {
|             cout << "Error in LASolve (dgetrf). Info=" << info << endl;
|             return 1;
|         }
|         F77_CALL(dgetrs)("T", &rows, &nrhs, &P(0,0), &lda, &ipivot(0,0),
| &w(0,0), &ldb, &info);("T", &rows, &nrhs, &P(0,0), &lda, &ipivot(0,0),
| &w(0,0), &ldb, &info);
|         if (info!=0) {
|             cout << "Error in LASolve (dgetrs). Info=" << info << endl;
|             return 1;
|         }
|         return 0;
|     }
| 
| When compiling the package on using R-devel the error for F77_CALL(dgetrs)
| occur:
| 
| matalg.h:67:25: error: too few arguments to function ?void dgetrs_(const
| char*, const int*, const int*, const double*, const int*, const int*,
| double*, const int*, int*, size_t)?
|    67 |         F77_CALL(dgetrs)("T", &rows, &nrhs, &P(0,0), &lda,
| &ipivot(0,0), &w(0,0), &ldb, &info);
| 
| It works in R-release and I guess it have something to do with
| https://cran.r-project.org/doc/manuals/r-devel/NEWS.html and LAPACK.
| 
| Any hints on how to get it to work for both R-release and R-devel.

I can offer you two answers. The first, and narrower, is in Writing R
Extensions and concerns FC_LEN. R now 'automagically' injects additional
parameters for a better, more stringent, control of character variable
length. See eg

  https://rstudio.github.io/r-manuals/r-exts/The-R-API.html#fortran-character-strings

and related. (And this isn't new per se, those of use with packages with
Fortran interfaces have been keeping this up.)

The second, more pragmatic answer, is of course 'to not do that' but to rely
on the decade of tuning and bazillion of test and runs a higher-end Linear
Algebra package like (Rcpp)Armadillo offers by wrapping around LAPACK and
BLAS for you.  You already are in C++, so there os essentially no switching
cost. And (Rcpp)Armadillo is header-only and hence free of added
complications.

Dirk

-- 
dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org


From tom@@@k@||ber@ @end|ng |rom gm@||@com  Tue Dec 20 22:27:36 2022
From: tom@@@k@||ber@ @end|ng |rom gm@||@com (Tomas Kalibera)
Date: Tue, 20 Dec 2022 22:27:36 +0100
Subject: [Rd] Problem with accessibility in R 4.2.0 and 4.2.1.
In-Reply-To: <23cdc9ad-765b-b5c9-32b6-d1cbfe9ccd44@dim.uchile.cl>
References: <88b4bd63-0ec3-626b-1fa3-148f1419a8a3@dim.uchile.cl>
 <0836b27f-99cf-ef24-fa31-3f4af75f276d@gmail.com>
 <CALK03d36eK=VtUPPTTS1O5ch7dL+y2nKQvwdvAHkz5XL23vu9Q@mail.gmail.com>
 <23cdc9ad-765b-b5c9-32b6-d1cbfe9ccd44@dim.uchile.cl>
Message-ID: <06bb9c2e-566b-3ba2-2bb4-79279fc20992@gmail.com>


On 9/22/22 23:15, Andrew Hart via R-devel wrote:
> ????On 22/09/2022 16:42, Toby Hocking wrote:
>> Another option is to use https://emacspeak.sourceforge.net/ 
>> <https://emacspeak.sourceforge.net/> (version of emacs editor/ide 
>> which can speak letters/words/lines -- has a blind maintainer) with 
>> https://ess.r-project.org/ <https://ess.r-project.org/> (interface 
>> for editing and running R code from within emacs)
>
> Thanks everyone for all the suggestions. Of course, the optimal 
> solution would be to figure out what is going on in Rgui, but, as is 
> always the case, the blind user use case is a fairly niche one. I 
> appreciate all the suggestions for finding an immediate solution to my 
> problem.
> I don't use any kind of IDE for working with R since I simply haven't 
> found one that is accessible or that i understand how to use. There is 
> a plug-in for the Eclipse IDE I installed a few years ago, but I 
> didn't understand the first thing about how it was to be used. So I've 
> just always worked with an editor open in one Window and R in another,
> working interactively in R or bouncing over to the editor for more 
> complex things and sourcing code into R as necessary. However, I only 
> use the R console in Rgui. I went and had a look at Rterm, which I 
> have never used on Windows; I've only ever used it when ssh-ing into 
> Linux systems to use R. However, I've just found out that Rterm does a 
> number of fairly important things that probably mean I can just use it 
> instead of Rgui:
> 1. You can paste from the clipboard into the Rterm prompt;
> 2. It has a command history;
> 3. If you plot something, it opens a Window to draw the plot (I never 
> realised it could do this and had always assumed Rgui was needed for 
> this); and
> 4. It opens the HTML help if you ask for help on windows. I only ever 
> saw it display text help on Linux, but I was logged in remotely. 
> Text-based help is fine when ssh-ing into a machine, but HTML help is 
> much nicer to read and navigate.
>
> I think I'll just switch over to Rterm for a while, but I can also 
> check out ess, which I wasn't aware of.
>
> Thanks a lot,
> Andrew.
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From tom@@@k@||ber@ @end|ng |rom gm@||@com  Tue Dec 20 23:33:41 2022
From: tom@@@k@||ber@ @end|ng |rom gm@||@com (Tomas Kalibera)
Date: Tue, 20 Dec 2022 23:33:41 +0100
Subject: [Rd] Problem with accessibility in R 4.2.0 and 4.2.1.
In-Reply-To: <23cdc9ad-765b-b5c9-32b6-d1cbfe9ccd44@dim.uchile.cl>
References: <88b4bd63-0ec3-626b-1fa3-148f1419a8a3@dim.uchile.cl>
 <0836b27f-99cf-ef24-fa31-3f4af75f276d@gmail.com>
 <CALK03d36eK=VtUPPTTS1O5ch7dL+y2nKQvwdvAHkz5XL23vu9Q@mail.gmail.com>
 <23cdc9ad-765b-b5c9-32b6-d1cbfe9ccd44@dim.uchile.cl>
Message-ID: <06025c82-ad7a-70f4-96a9-3e5f4ec4251f@gmail.com>

Dear Andrew, Jonathan,

I had a closer look and tried to improve accessibility in Rgui, please 
see below. I would be grateful for feedback.

Rgui supports three cursor types, which can be selected via Edit/GUI 
preferences/Cursor blink.

The default is "partial", but for screen readers, please use "full". You 
can change the selection in the menu and then "Save..." to save it into 
your Rconsole file. If you already have the file, the corresponding 
selection is "cursor_blink = Full".

The "full" cursor is implemented as the standard Windows "caret" and 
this is what screen readers can see. Once you set this cursor as the 
default in your Rconsole file and re-start Rgui, but before you start 
using the console, please switch focus out and back in (e.g. press 
Alt+TAB twice). This helps NVDA detect the characters under the cursor 
in already released versions of R. Please start the screen reader before 
starting Rgui.

I found that the "full" cursor implementation has a number of problems: 
in some situation it disappears when it shouldn't, in some the other way 
around. I thought this was confusing the screen reader, so I fixed most 
of these cases.

However, the true cause was that Rgui didn't create the cursor right 
when it got focus the first time. Luckily NVDA is open-source, so one 
can read and modify the source code to find out. I've added a 
work-around to Rgui, which is used only with the "full" cursor, because 
the "partial" cursor confuses the screen reader too much to be usable, 
anyway. So, after this fix, one doesn't have to do that focus out+in trick.

The improvements are in R-devel (revision 83482 or newer). I would be 
grateful if you could test it, so that it could be improved further (or 
reverted if it actually turned out worse). Particularly if you find a 
problem reproducible with NVDA, that should be something I could 
diagnose and improve, as I have the sources.

I've been testing with NVDA and I'd be curious about the impact on JAWS.
Rgui doesn't work with Narrator.

Thanks,
Tomas

On 9/22/22 23:15, Andrew Hart via R-devel wrote:
> ????On 22/09/2022 16:42, Toby Hocking wrote:
>> Another option is to use https://emacspeak.sourceforge.net/ 
>> <https://emacspeak.sourceforge.net/> (version of emacs editor/ide 
>> which can speak letters/words/lines -- has a blind maintainer) with 
>> https://ess.r-project.org/ <https://ess.r-project.org/> (interface 
>> for editing and running R code from within emacs)
>
> Thanks everyone for all the suggestions. Of course, the optimal 
> solution would be to figure out what is going on in Rgui, but, as is 
> always the case, the blind user use case is a fairly niche one. I 
> appreciate all the suggestions for finding an immediate solution to my 
> problem.
> I don't use any kind of IDE for working with R since I simply haven't 
> found one that is accessible or that i understand how to use. There is 
> a plug-in for the Eclipse IDE I installed a few years ago, but I 
> didn't understand the first thing about how it was to be used. So I've 
> just always worked with an editor open in one Window and R in another,
> working interactively in R or bouncing over to the editor for more 
> complex things and sourcing code into R as necessary. However, I only 
> use the R console in Rgui. I went and had a look at Rterm, which I 
> have never used on Windows; I've only ever used it when ssh-ing into 
> Linux systems to use R. However, I've just found out that Rterm does a 
> number of fairly important things that probably mean I can just use it 
> instead of Rgui:
> 1. You can paste from the clipboard into the Rterm prompt;
> 2. It has a command history;
> 3. If you plot something, it opens a Window to draw the plot (I never 
> realised it could do this and had always assumed Rgui was needed for 
> this); and
> 4. It opens the HTML help if you ask for help on windows. I only ever 
> saw it display text help on Linux, but I was logged in remotely. 
> Text-based help is fine when ssh-ing into a machine, but HTML help is 
> much nicer to read and navigate.
>
> I think I'll just switch over to Rterm for a while, but I can also 
> check out ess, which I wasn't aware of.
>
> Thanks a lot,
> Andrew.
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From |@r@@re|und @end|ng |rom gm@||@com  Wed Dec 21 12:43:54 2022
From: |@r@@re|und @end|ng |rom gm@||@com (Lars Relund)
Date: Wed, 21 Dec 2022 12:43:54 +0100
Subject: [Rd] F77_CALL(dgetrs) C++ call in R-devel
In-Reply-To: <25505.46076.413588.816423@rob.eddelbuettel.com>
References: <CAGJijVNbg7CNu4tEkKomCknBHgzmXwMUEdYFXe=3zaMWRaHYJA@mail.gmail.com>
 <25505.46076.413588.816423@rob.eddelbuettel.com>
Message-ID: <CAGJijVOPsCXu_k_Yr-kFKA+hziSQdtQxbTQicRBvp559tg=+Wg@mail.gmail.com>

Thanks I got it to work!

I will try to migrate to (Rcpp)Armadillo asap.

Lars


Den tir. 20. dec. 2022 kl. 14.09 skrev Dirk Eddelbuettel <edd at debian.org>:

>
> On 20 December 2022 at 12:33, Lars Relund wrote:
> | In my package, I have the method:
> |
> |     /** Solve equations transpose(P)w = r. */
> |     int LASolveT(MatSimple<double> &P, MatSimple<double> &w, const
> | MatSimple<double> &r) {
> |         int rows = P.rows;
> |         int nrhs = 1;
> |         int lda = rows;
> |         int ldb = rows;
> |         int info = -1;
> |         MatSimple<int> ipivot(1,rows);
> |         w.Inject(r);    // copy r to w;
> |         F77_CALL(dgetrf)(&rows, &rows, &P(0,0), &lda, &ipivot(0,0),
> &info);
> |         if (info!=0) {
> |             cout << "Error in LASolve (dgetrf). Info=" << info << endl;
> |             return 1;
> |         }
> |         F77_CALL(dgetrs)("T", &rows, &nrhs, &P(0,0), &lda, &ipivot(0,0),
> | &w(0,0), &ldb, &info);("T", &rows, &nrhs, &P(0,0), &lda, &ipivot(0,0),
> | &w(0,0), &ldb, &info);
> |         if (info!=0) {
> |             cout << "Error in LASolve (dgetrs). Info=" << info << endl;
> |             return 1;
> |         }
> |         return 0;
> |     }
> |
> | When compiling the package on using R-devel the error for
> F77_CALL(dgetrs)
> | occur:
> |
> | matalg.h:67:25: error: too few arguments to function ?void dgetrs_(const
> | char*, const int*, const int*, const double*, const int*, const int*,
> | double*, const int*, int*, size_t)?
> |    67 |         F77_CALL(dgetrs)("T", &rows, &nrhs, &P(0,0), &lda,
> | &ipivot(0,0), &w(0,0), &ldb, &info);
> |
> | It works in R-release and I guess it have something to do with
> | https://cran.r-project.org/doc/manuals/r-devel/NEWS.html and LAPACK.
> |
> | Any hints on how to get it to work for both R-release and R-devel.
>
> I can offer you two answers. The first, and narrower, is in Writing R
> Extensions and concerns FC_LEN. R now 'automagically' injects additional
> parameters for a better, more stringent, control of character variable
> length. See eg
>
>
> https://rstudio.github.io/r-manuals/r-exts/The-R-API.html#fortran-character-strings
>
> and related. (And this isn't new per se, those of use with packages with
> Fortran interfaces have been keeping this up.)
>
> The second, more pragmatic answer, is of course 'to not do that' but to
> rely
> on the decade of tuning and bazillion of test and runs a higher-end Linear
> Algebra package like (Rcpp)Armadillo offers by wrapping around LAPACK and
> BLAS for you.  You already are in C++, so there os essentially no switching
> cost. And (Rcpp)Armadillo is header-only and hence free of added
> complications.
>
> Dirk
>
> --
> dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org
>

	[[alternative HTML version deleted]]


From @h@rt @end|ng |rom d|m@uch||e@c|  Wed Dec 21 17:12:56 2022
From: @h@rt @end|ng |rom d|m@uch||e@c| (Andrew Hart)
Date: Wed, 21 Dec 2022 13:12:56 -0300
Subject: [Rd] Problem with accessibility in R 4.2.0 and 4.2.1.
In-Reply-To: <06025c82-ad7a-70f4-96a9-3e5f4ec4251f@gmail.com>
References: <88b4bd63-0ec3-626b-1fa3-148f1419a8a3@dim.uchile.cl>
 <0836b27f-99cf-ef24-fa31-3f4af75f276d@gmail.com>
 <CALK03d36eK=VtUPPTTS1O5ch7dL+y2nKQvwdvAHkz5XL23vu9Q@mail.gmail.com>
 <23cdc9ad-765b-b5c9-32b6-d1cbfe9ccd44@dim.uchile.cl>
 <06025c82-ad7a-70f4-96a9-3e5f4ec4251f@gmail.com>
Message-ID: <b16f8ab4-118e-17a6-f511-3a45641160d9@dim.uchile.cl>

HI Tomas,

Thanks a lot for not letting this go. It is truly appreciated. I had 
been using Rterm directly as Jonathan had suggested since we discussed 
this a number of months ago on the R-devel list. However, about a week 
and a half ago I accidentally launched Rgui for R 4.2.2 (which I 
installed around the end of October) and was surprised when I could 
actually  use it like I could use the pre-4.2 versions of R! I have been 
using it for a little more than a week now and was intending to write to 
you, but you beat me with this message.
The accessibility of Rgui 4.2.2 seems very similar to R 4.1.2 (which I 
still have on my system). In contrast, Rgui 4.2.1 is more or less 
unusable. I was wanting to ask you if perhaps something got changed in R 
4.2.2? Nothing jumped out at me in the release notes, but I could easily 
have overlooked something.

After reading this message, I went and checked the cursor blink setting 
in my 4.2.2 installation and it is indeed set to partial. You're right 
in that occasionally JAWS loses the cursor and the ability to read the R 
window. However, simply pressing the <enter> key while Rgui has the 
focus fixes this. It seems that drawing a new command prompt on a new 
line sets JAWS straight and I am able to keep working. I haven't used 
4.1.2 for a while, but I think it had the same issue. I assumed that 
this was caused by moving from Windows 7 to Windows 10, since I never 
encountered this kind of issue in windows 7. I'll try out full cursor 
and see if that makes a difference in 4.2.2.

Also, I'll download the development snapshot and try it out. I'll let 
you know how I get on. Please excuse me if I don't get to it 
immediately; things are a bit crazy at work at the moment and it is that 
time of the year too!

Cheers,
Andrew.

On 20/12/2022 19:33, Tomas Kalibera wrote:
> Dear Andrew, Jonathan,
> 
> I had a closer look and tried to improve accessibility in Rgui, please 
> see below. I would be grateful for feedback.
> 
> Rgui supports three cursor types, which can be selected via Edit/GUI 
> preferences/Cursor blink.
> 
> The default is "partial", but for screen readers, please use "full". You 
> can change the selection in the menu and then "Save..." to save it into 
> your Rconsole file. If you already have the file, the corresponding 
> selection is "cursor_blink = Full".
> 
> The "full" cursor is implemented as the standard Windows "caret" and 
> this is what screen readers can see. Once you set this cursor as the 
> default in your Rconsole file and re-start Rgui, but before you start 
> using the console, please switch focus out and back in (e.g. press 
> Alt+TAB twice). This helps NVDA detect the characters under the cursor 
> in already released versions of R. Please start the screen reader before 
> starting Rgui.
> 
> I found that the "full" cursor implementation has a number of problems: 
> in some situation it disappears when it shouldn't, in some the other way 
> around. I thought this was confusing the screen reader, so I fixed most 
> of these cases.
> 
> However, the true cause was that Rgui didn't create the cursor right 
> when it got focus the first time. Luckily NVDA is open-source, so one 
> can read and modify the source code to find out. I've added a 
> work-around to Rgui, which is used only with the "full" cursor, because 
> the "partial" cursor confuses the screen reader too much to be usable, 
> anyway. So, after this fix, one doesn't have to do that focus out+in trick.
> 
> The improvements are in R-devel (revision 83482 or newer). I would be 
> grateful if you could test it, so that it could be improved further (or 
> reverted if it actually turned out worse). Particularly if you find a 
> problem reproducible with NVDA, that should be something I could 
> diagnose and improve, as I have the sources.
> 
> I've been testing with NVDA and I'd be curious about the impact on JAWS.
> Rgui doesn't work with Narrator.
> 
> Thanks,
> Tomas
> 
> On 9/22/22 23:15, Andrew Hart via R-devel wrote:
>> ????On 22/09/2022 16:42, Toby Hocking wrote:
>>> Another option is to use https://emacspeak.sourceforge.net/ 
>>> <https://emacspeak.sourceforge.net/> (version of emacs editor/ide 
>>> which can speak letters/words/lines -- has a blind maintainer) with 
>>> https://ess.r-project.org/ <https://ess.r-project.org/> (interface 
>>> for editing and running R code from within emacs)
>>
>> Thanks everyone for all the suggestions. Of course, the optimal 
>> solution would be to figure out what is going on in Rgui, but, as is 
>> always the case, the blind user use case is a fairly niche one. I 
>> appreciate all the suggestions for finding an immediate solution to my 
>> problem.
>> I don't use any kind of IDE for working with R since I simply haven't 
>> found one that is accessible or that i understand how to use. There is 
>> a plug-in for the Eclipse IDE I installed a few years ago, but I 
>> didn't understand the first thing about how it was to be used. So I've 
>> just always worked with an editor open in one Window and R in another,
>> working interactively in R or bouncing over to the editor for more 
>> complex things and sourcing code into R as necessary. However, I only 
>> use the R console in Rgui. I went and had a look at Rterm, which I 
>> have never used on Windows; I've only ever used it when ssh-ing into 
>> Linux systems to use R. However, I've just found out that Rterm does a 
>> number of fairly important things that probably mean I can just use it 
>> instead of Rgui:
>> 1. You can paste from the clipboard into the Rterm prompt;
>> 2. It has a command history;
>> 3. If you plot something, it opens a Window to draw the plot (I never 
>> realised it could do this and had always assumed Rgui was needed for 
>> this); and
>> 4. It opens the HTML help if you ask for help on windows. I only ever 
>> saw it display text help on Linux, but I was logged in remotely. 
>> Text-based help is fine when ssh-ing into a machine, but HTML help is 
>> much nicer to read and navigate.
>>
>> I think I'll just switch over to Rterm for a while, but I can also 
>> check out ess, which I wasn't aware of.
>>
>> Thanks a lot,
>> Andrew.
>>
>> ______________________________________________
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel
>


From tom@@@k@||ber@ @end|ng |rom gm@||@com  Wed Dec 21 18:53:16 2022
From: tom@@@k@||ber@ @end|ng |rom gm@||@com (Tomas Kalibera)
Date: Wed, 21 Dec 2022 18:53:16 +0100
Subject: [Rd] Problem with accessibility in R 4.2.0 and 4.2.1.
In-Reply-To: <b16f8ab4-118e-17a6-f511-3a45641160d9@dim.uchile.cl>
References: <88b4bd63-0ec3-626b-1fa3-148f1419a8a3@dim.uchile.cl>
 <0836b27f-99cf-ef24-fa31-3f4af75f276d@gmail.com>
 <CALK03d36eK=VtUPPTTS1O5ch7dL+y2nKQvwdvAHkz5XL23vu9Q@mail.gmail.com>
 <23cdc9ad-765b-b5c9-32b6-d1cbfe9ccd44@dim.uchile.cl>
 <06025c82-ad7a-70f4-96a9-3e5f4ec4251f@gmail.com>
 <b16f8ab4-118e-17a6-f511-3a45641160d9@dim.uchile.cl>
Message-ID: <73b7f903-30bb-85e9-b7da-98103ed27f1f@gmail.com>

Hi Andrew,

thanks a lot for your testing and I am looking forward to what you find 
out about the fixes in R-devel.

You asked about changes between 4.2.1 and 4.2.2 relevant to this. I 
don't think you overlooked anything, I looked now again at the source 
code diff and I didn't find anything relevant. The Rgui console was 
fixed to work with Alt+sequences (tilde on Italian keyboard). GraphApp 
was fixed to use the correct font charset for UTF-8 in dialog boxes. 
Search and replace was fixed in the script editor. Invalid write was 
fixed with printing very long lines.

None of those changes should impact the behavior of the caret in the 
console window. I would not be surprised if the behavior with the screen 
reader was unpredictable/random, certainly inconsequential to whether we 
had R 4.2.1 or 4.2.2. Hopefully the changes now in R-devel would make it 
more reliable. If not, we can try to improve it further.

Thanks for testing with JAWS, I am impressed it can get anything out 
from Rgui with the partial cursor. NVDA cannot, it allows navigating 
using left arrow/right arrow over the line (after focus out+in in R 
4.2.2), but it thinks that the characters on the line are all spaces.

In either case, I think using the partial cursor with screen readers 
doesn't make sense, it could only confuse the screen reader application. 
If some people preferred a wider cursor than "full", we could add a 
"wide full" cursor, that would be quite easy. If some people preferred 
less blinking or no blinking at all, they can already set that up 
system-wide in Windows for the "full" (or potential "wide full") cursor.

Cheers
Tomas

On 12/21/22 17:12, Andrew Hart wrote:
> HI Tomas,
>
> Thanks a lot for not letting this go. It is truly appreciated. I had 
> been using Rterm directly as Jonathan had suggested since we discussed 
> this a number of months ago on the R-devel list. However, about a week 
> and a half ago I accidentally launched Rgui for R 4.2.2 (which I 
> installed around the end of October) and was surprised when I could 
> actually? use it like I could use the pre-4.2 versions of R! I have 
> been using it for a little more than a week now and was intending to 
> write to you, but you beat me with this message.
> The accessibility of Rgui 4.2.2 seems very similar to R 4.1.2 (which I 
> still have on my system). In contrast, Rgui 4.2.1 is more or less 
> unusable. I was wanting to ask you if perhaps something got changed in 
> R 4.2.2? Nothing jumped out at me in the release notes, but I could 
> easily have overlooked something.
>
> After reading this message, I went and checked the cursor blink 
> setting in my 4.2.2 installation and it is indeed set to partial. 
> You're right in that occasionally JAWS loses the cursor and the 
> ability to read the R window. However, simply pressing the <enter> key 
> while Rgui has the focus fixes this. It seems that drawing a new 
> command prompt on a new line sets JAWS straight and I am able to keep 
> working. I haven't used 4.1.2 for a while, but I think it had the same 
> issue. I assumed that this was caused by moving from Windows 7 to 
> Windows 10, since I never encountered this kind of issue in windows 7. 
> I'll try out full cursor and see if that makes a difference in 4.2.2.
>
> Also, I'll download the development snapshot and try it out. I'll let 
> you know how I get on. Please excuse me if I don't get to it 
> immediately; things are a bit crazy at work at the moment and it is 
> that time of the year too!
>
> Cheers,
> Andrew.
>
> On 20/12/2022 19:33, Tomas Kalibera wrote:
>> Dear Andrew, Jonathan,
>>
>> I had a closer look and tried to improve accessibility in Rgui, 
>> please see below. I would be grateful for feedback.
>>
>> Rgui supports three cursor types, which can be selected via Edit/GUI 
>> preferences/Cursor blink.
>>
>> The default is "partial", but for screen readers, please use "full". 
>> You can change the selection in the menu and then "Save..." to save 
>> it into your Rconsole file. If you already have the file, the 
>> corresponding selection is "cursor_blink = Full".
>>
>> The "full" cursor is implemented as the standard Windows "caret" and 
>> this is what screen readers can see. Once you set this cursor as the 
>> default in your Rconsole file and re-start Rgui, but before you start 
>> using the console, please switch focus out and back in (e.g. press 
>> Alt+TAB twice). This helps NVDA detect the characters under the 
>> cursor in already released versions of R. Please start the screen 
>> reader before starting Rgui.
>>
>> I found that the "full" cursor implementation has a number of 
>> problems: in some situation it disappears when it shouldn't, in some 
>> the other way around. I thought this was confusing the screen reader, 
>> so I fixed most of these cases.
>>
>> However, the true cause was that Rgui didn't create the cursor right 
>> when it got focus the first time. Luckily NVDA is open-source, so one 
>> can read and modify the source code to find out. I've added a 
>> work-around to Rgui, which is used only with the "full" cursor, 
>> because the "partial" cursor confuses the screen reader too much to 
>> be usable, anyway. So, after this fix, one doesn't have to do that 
>> focus out+in trick.
>>
>> The improvements are in R-devel (revision 83482 or newer). I would be 
>> grateful if you could test it, so that it could be improved further 
>> (or reverted if it actually turned out worse). Particularly if you 
>> find a problem reproducible with NVDA, that should be something I 
>> could diagnose and improve, as I have the sources.
>>
>> I've been testing with NVDA and I'd be curious about the impact on JAWS.
>> Rgui doesn't work with Narrator.
>>
>> Thanks,
>> Tomas
>>
>> On 9/22/22 23:15, Andrew Hart via R-devel wrote:
>>> ????On 22/09/2022 16:42, Toby Hocking wrote:
>>>> Another option is to use https://emacspeak.sourceforge.net/ 
>>>> <https://emacspeak.sourceforge.net/> (version of emacs editor/ide 
>>>> which can speak letters/words/lines -- has a blind maintainer) with 
>>>> https://ess.r-project.org/ <https://ess.r-project.org/> (interface 
>>>> for editing and running R code from within emacs)
>>>
>>> Thanks everyone for all the suggestions. Of course, the optimal 
>>> solution would be to figure out what is going on in Rgui, but, as is 
>>> always the case, the blind user use case is a fairly niche one. I 
>>> appreciate all the suggestions for finding an immediate solution to 
>>> my problem.
>>> I don't use any kind of IDE for working with R since I simply 
>>> haven't found one that is accessible or that i understand how to 
>>> use. There is a plug-in for the Eclipse IDE I installed a few years 
>>> ago, but I didn't understand the first thing about how it was to be 
>>> used. So I've just always worked with an editor open in one Window 
>>> and R in another,
>>> working interactively in R or bouncing over to the editor for more 
>>> complex things and sourcing code into R as necessary. However, I 
>>> only use the R console in Rgui. I went and had a look at Rterm, 
>>> which I have never used on Windows; I've only ever used it when 
>>> ssh-ing into Linux systems to use R. However, I've just found out 
>>> that Rterm does a number of fairly important things that probably 
>>> mean I can just use it instead of Rgui:
>>> 1. You can paste from the clipboard into the Rterm prompt;
>>> 2. It has a command history;
>>> 3. If you plot something, it opens a Window to draw the plot (I 
>>> never realised it could do this and had always assumed Rgui was 
>>> needed for this); and
>>> 4. It opens the HTML help if you ask for help on windows. I only 
>>> ever saw it display text help on Linux, but I was logged in 
>>> remotely. Text-based help is fine when ssh-ing into a machine, but 
>>> HTML help is much nicer to read and navigate.
>>>
>>> I think I'll just switch over to Rterm for a while, but I can also 
>>> check out ess, which I wasn't aware of.
>>>
>>> Thanks a lot,
>>> Andrew.
>>>
>>> ______________________________________________
>>> R-devel at r-project.org mailing list
>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>
>


From A@J@God|rey @end|ng |rom m@@@ey@@c@nz  Wed Dec 21 20:33:09 2022
From: A@J@God|rey @end|ng |rom m@@@ey@@c@nz (Jonathan Godfrey)
Date: Wed, 21 Dec 2022 19:33:09 +0000
Subject: [Rd] Problem with accessibility in R 4.2.0 and 4.2.1.
In-Reply-To: <73b7f903-30bb-85e9-b7da-98103ed27f1f@gmail.com>
References: <88b4bd63-0ec3-626b-1fa3-148f1419a8a3@dim.uchile.cl>
 <0836b27f-99cf-ef24-fa31-3f4af75f276d@gmail.com>
 <CALK03d36eK=VtUPPTTS1O5ch7dL+y2nKQvwdvAHkz5XL23vu9Q@mail.gmail.com>
 <23cdc9ad-765b-b5c9-32b6-d1cbfe9ccd44@dim.uchile.cl>
 <06025c82-ad7a-70f4-96a9-3e5f4ec4251f@gmail.com>
 <b16f8ab4-118e-17a6-f511-3a45641160d9@dim.uchile.cl>
 <73b7f903-30bb-85e9-b7da-98103ed27f1f@gmail.com>
Message-ID: <MEAPR01MB3829A370C96D682D114BDE4593EB9@MEAPR01MB3829.ausprd01.prod.outlook.com>

Hello both,

I so seldom use the RGUI that I hand't noticed it was behaving nicely in 4.2.2 which has been running on my laptop for a long time!

I confirm the JAWS experience is back to what I expected prior to 4.2.0 and assure you that I do nothing to alter the default settings. I do think maintaining the usefulness of the GUI has merit because that is what a new R user will end up trying once they discover RStudio's inaccessibility.

I really do not understand how/why switching a cosmetic element of a cursor should lead to changes in the screen reader performance. I'm sure the size, shape, and colour of a mouse pointer  doesn't affect it's performance although I would expect it to have an impact on a user's performance.

Rather, I assumed that the change in the cosmetics of the cursor was the symptom of an underlying change that had multiple impacts, one of which was the disconnect with the screen reader. 

Did the underlying development toolbox undergo any version changes from ( <4.2.0 ) to (4.2.0...4.2.1) to (4.2.2) ??

Great that normal transmission has resumed.

Jonathan


-----Original Message-----
From: Tomas Kalibera <tomas.kalibera at gmail.com> 
Sent: Thursday, 22 December 2022 6:53 am
To: Andrew Hart <ahart at dim.uchile.cl>; Jonathan Godfrey <A.J.Godfrey at massey.ac.nz>
Cc: R-devel at r-project.org
Subject: Re: [Rd] Problem with accessibility in R 4.2.0 and 4.2.1.

Hi Andrew,

thanks a lot for your testing and I am looking forward to what you find 
out about the fixes in R-devel.

You asked about changes between 4.2.1 and 4.2.2 relevant to this. I 
don't think you overlooked anything, I looked now again at the source 
code diff and I didn't find anything relevant. The Rgui console was 
fixed to work with Alt+sequences (tilde on Italian keyboard). GraphApp 
was fixed to use the correct font charset for UTF-8 in dialog boxes. 
Search and replace was fixed in the script editor. Invalid write was 
fixed with printing very long lines.

None of those changes should impact the behavior of the caret in the 
console window. I would not be surprised if the behavior with the screen 
reader was unpredictable/random, certainly inconsequential to whether we 
had R 4.2.1 or 4.2.2. Hopefully the changes now in R-devel would make it 
more reliable. If not, we can try to improve it further.

Thanks for testing with JAWS, I am impressed it can get anything out 
from Rgui with the partial cursor. NVDA cannot, it allows navigating 
using left arrow/right arrow over the line (after focus out+in in R 
4.2.2), but it thinks that the characters on the line are all spaces.

In either case, I think using the partial cursor with screen readers 
doesn't make sense, it could only confuse the screen reader application. 
If some people preferred a wider cursor than "full", we could add a 
"wide full" cursor, that would be quite easy. If some people preferred 
less blinking or no blinking at all, they can already set that up 
system-wide in Windows for the "full" (or potential "wide full") cursor.

Cheers
Tomas

On 12/21/22 17:12, Andrew Hart wrote:
> HI Tomas,
>
> Thanks a lot for not letting this go. It is truly appreciated. I had 
> been using Rterm directly as Jonathan had suggested since we discussed 
> this a number of months ago on the R-devel list. However, about a week 
> and a half ago I accidentally launched Rgui for R 4.2.2 (which I 
> installed around the end of October) and was surprised when I could 
> actually? use it like I could use the pre-4.2 versions of R! I have 
> been using it for a little more than a week now and was intending to 
> write to you, but you beat me with this message.
> The accessibility of Rgui 4.2.2 seems very similar to R 4.1.2 (which I 
> still have on my system). In contrast, Rgui 4.2.1 is more or less 
> unusable. I was wanting to ask you if perhaps something got changed in 
> R 4.2.2? Nothing jumped out at me in the release notes, but I could 
> easily have overlooked something.
>
> After reading this message, I went and checked the cursor blink 
> setting in my 4.2.2 installation and it is indeed set to partial. 
> You're right in that occasionally JAWS loses the cursor and the 
> ability to read the R window. However, simply pressing the <enter> key 
> while Rgui has the focus fixes this. It seems that drawing a new 
> command prompt on a new line sets JAWS straight and I am able to keep 
> working. I haven't used 4.1.2 for a while, but I think it had the same 
> issue. I assumed that this was caused by moving from Windows 7 to 
> Windows 10, since I never encountered this kind of issue in windows 7. 
> I'll try out full cursor and see if that makes a difference in 4.2.2.
>
> Also, I'll download the development snapshot and try it out. I'll let 
> you know how I get on. Please excuse me if I don't get to it 
> immediately; things are a bit crazy at work at the moment and it is 
> that time of the year too!
>
> Cheers,
> Andrew.
>
> On 20/12/2022 19:33, Tomas Kalibera wrote:
>> Dear Andrew, Jonathan,
>>
>> I had a closer look and tried to improve accessibility in Rgui, 
>> please see below. I would be grateful for feedback.
>>
>> Rgui supports three cursor types, which can be selected via Edit/GUI 
>> preferences/Cursor blink.
>>
>> The default is "partial", but for screen readers, please use "full". 
>> You can change the selection in the menu and then "Save..." to save 
>> it into your Rconsole file. If you already have the file, the 
>> corresponding selection is "cursor_blink = Full".
>>
>> The "full" cursor is implemented as the standard Windows "caret" and 
>> this is what screen readers can see. Once you set this cursor as the 
>> default in your Rconsole file and re-start Rgui, but before you start 
>> using the console, please switch focus out and back in (e.g. press 
>> Alt+TAB twice). This helps NVDA detect the characters under the 
>> cursor in already released versions of R. Please start the screen 
>> reader before starting Rgui.
>>
>> I found that the "full" cursor implementation has a number of 
>> problems: in some situation it disappears when it shouldn't, in some 
>> the other way around. I thought this was confusing the screen reader, 
>> so I fixed most of these cases.
>>
>> However, the true cause was that Rgui didn't create the cursor right 
>> when it got focus the first time. Luckily NVDA is open-source, so one 
>> can read and modify the source code to find out. I've added a 
>> work-around to Rgui, which is used only with the "full" cursor, 
>> because the "partial" cursor confuses the screen reader too much to 
>> be usable, anyway. So, after this fix, one doesn't have to do that 
>> focus out+in trick.
>>
>> The improvements are in R-devel (revision 83482 or newer). I would be 
>> grateful if you could test it, so that it could be improved further 
>> (or reverted if it actually turned out worse). Particularly if you 
>> find a problem reproducible with NVDA, that should be something I 
>> could diagnose and improve, as I have the sources.
>>
>> I've been testing with NVDA and I'd be curious about the impact on JAWS.
>> Rgui doesn't work with Narrator.
>>
>> Thanks,
>> Tomas
>>
>> On 9/22/22 23:15, Andrew Hart via R-devel wrote:
>>> ????On 22/09/2022 16:42, Toby Hocking wrote:
>>>> Another option is to use https://apc01.safelinks.protection.outlook.com/?url=https%3A%2F%2Femacspeak.sourceforge.net%2F&data=05%7C01%7CA.J.Godfrey%40massey.ac.nz%7C57c5944c92d44191ddc108dae37c3ec1%7C388728e1bbd0437898dcf8682e644300%7C1%7C0%7C638072420031027810%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C3000%7C%7C%7C&sdata=26qSJenRyJmtcitO543qXzUrMv0APRhPUVroL5j2bWA%3D&reserved=0 
>>>> <https://apc01.safelinks.protection.outlook.com/?url=https%3A%2F%2Femacspeak.sourceforge.net%2F&data=05%7C01%7CA.J.Godfrey%40massey.ac.nz%7C57c5944c92d44191ddc108dae37c3ec1%7C388728e1bbd0437898dcf8682e644300%7C1%7C0%7C638072420031027810%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C3000%7C%7C%7C&sdata=26qSJenRyJmtcitO543qXzUrMv0APRhPUVroL5j2bWA%3D&reserved=0> (version of emacs editor/ide 
>>>> which can speak letters/words/lines -- has a blind maintainer) with 
>>>> https://apc01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fess.r-project.org%2F&data=05%7C01%7CA.J.Godfrey%40massey.ac.nz%7C57c5944c92d44191ddc108dae37c3ec1%7C388728e1bbd0437898dcf8682e644300%7C1%7C0%7C638072420031027810%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C3000%7C%7C%7C&sdata=zaSGfvpJrIKhSFU6fC%2FoBFFrRQJmp0bNui79UyHkmdE%3D&reserved=0 <https://apc01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fess.r-project.org%2F&data=05%7C01%7CA.J.Godfrey%40massey.ac.nz%7C57c5944c92d44191ddc108dae37c3ec1%7C388728e1bbd0437898dcf8682e644300%7C1%7C0%7C638072420031027810%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C3000%7C%7C%7C&sdata=zaSGfvpJrIKhSFU6fC%2FoBFFrRQJmp0bNui79UyHkmdE%3D&reserved=0> (interface 
>>>> for editing and running R code from within emacs)
>>>
>>> Thanks everyone for all the suggestions. Of course, the optimal 
>>> solution would be to figure out what is going on in Rgui, but, as is 
>>> always the case, the blind user use case is a fairly niche one. I 
>>> appreciate all the suggestions for finding an immediate solution to 
>>> my problem.
>>> I don't use any kind of IDE for working with R since I simply 
>>> haven't found one that is accessible or that i understand how to 
>>> use. There is a plug-in for the Eclipse IDE I installed a few years 
>>> ago, but I didn't understand the first thing about how it was to be 
>>> used. So I've just always worked with an editor open in one Window 
>>> and R in another,
>>> working interactively in R or bouncing over to the editor for more 
>>> complex things and sourcing code into R as necessary. However, I 
>>> only use the R console in Rgui. I went and had a look at Rterm, 
>>> which I have never used on Windows; I've only ever used it when 
>>> ssh-ing into Linux systems to use R. However, I've just found out 
>>> that Rterm does a number of fairly important things that probably 
>>> mean I can just use it instead of Rgui:
>>> 1. You can paste from the clipboard into the Rterm prompt;
>>> 2. It has a command history;
>>> 3. If you plot something, it opens a Window to draw the plot (I 
>>> never realised it could do this and had always assumed Rgui was 
>>> needed for this); and
>>> 4. It opens the HTML help if you ask for help on windows. I only 
>>> ever saw it display text help on Linux, but I was logged in 
>>> remotely. Text-based help is fine when ssh-ing into a machine, but 
>>> HTML help is much nicer to read and navigate.
>>>
>>> I think I'll just switch over to Rterm for a while, but I can also 
>>> check out ess, which I wasn't aware of.
>>>
>>> Thanks a lot,
>>> Andrew.
>>>
>>> ______________________________________________
>>> R-devel at r-project.org mailing list
>>> https://apc01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fstat.ethz.ch%2Fmailman%2Flistinfo%2Fr-devel&data=05%7C01%7CA.J.Godfrey%40massey.ac.nz%7C57c5944c92d44191ddc108dae37c3ec1%7C388728e1bbd0437898dcf8682e644300%7C1%7C0%7C638072420031027810%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C3000%7C%7C%7C&sdata=H2lu1uaB3BLrl5trR2KweKe4GvFNTCK0KGIYVEMsBS8%3D&reserved=0
>>
>


From tom@@@k@||ber@ @end|ng |rom gm@||@com  Thu Dec 22 09:14:59 2022
From: tom@@@k@||ber@ @end|ng |rom gm@||@com (Tomas Kalibera)
Date: Thu, 22 Dec 2022 09:14:59 +0100
Subject: [Rd] Problem with accessibility in R 4.2.0 and 4.2.1.
In-Reply-To: <MEAPR01MB3829A370C96D682D114BDE4593EB9@MEAPR01MB3829.ausprd01.prod.outlook.com>
References: <88b4bd63-0ec3-626b-1fa3-148f1419a8a3@dim.uchile.cl>
 <0836b27f-99cf-ef24-fa31-3f4af75f276d@gmail.com>
 <CALK03d36eK=VtUPPTTS1O5ch7dL+y2nKQvwdvAHkz5XL23vu9Q@mail.gmail.com>
 <23cdc9ad-765b-b5c9-32b6-d1cbfe9ccd44@dim.uchile.cl>
 <06025c82-ad7a-70f4-96a9-3e5f4ec4251f@gmail.com>
 <b16f8ab4-118e-17a6-f511-3a45641160d9@dim.uchile.cl>
 <73b7f903-30bb-85e9-b7da-98103ed27f1f@gmail.com>
 <MEAPR01MB3829A370C96D682D114BDE4593EB9@MEAPR01MB3829.ausprd01.prod.outlook.com>
Message-ID: <f1e01766-01d7-fa80-9f96-30d69836f088@gmail.com>

Hello Jonathan,

Rgui uses GraphApp as toolbox, but that is part of R source code and 
I've included into my summary of changes between 4.2.1 and 4.2.2, and I 
couldn't find anything that I think could impact the screen reader on 
the Rgui console. The changes in GraphApp are included also in NEWS, 
many of the fixes in Rgui are in fact in GraphApp. GraphApp then 
directly uses the Windows Graphics Device Interface (GDI). I am not 
aware of any such changes even between 4.2.0 and 4.2.1, either. So I 
have no clue why differences in screen reader performance were observed.

I've now tried with JAWS as well, the default installation, 40 minute 
trial. I did this experiment:

1. start Rgui
2. type "hello"
3. navigate back using left arrow

On R 4.0.5, 4.1.3, 4.2.1, 4.2.2, R-devel with the defaults (so 
"partial") cursor, JAWS worked fine and the same in all versions. It 
could read the letters back when I was navigating over them. It worked 
also with the "full" cursor. I didn't find any difference. I noticed 
that JAWS increased the cursor blink rate, which sighted people could 
find annoying.

Trying the same with NVDA.? "partial" cursor didn't work with any R 
version, the letters could be read when typed, but not when navigated 
back. The "full" cursor worked fine in R-devel (so with my recent 
fixes). In the released R versions I tested, I could make the "full" 
cursor work by switching focus (before step 3) by going to the "Edit" 
menu and back, e.g. "Alt+E followed by ESC followed by ESC".

So it looks like my fix wasn't needed for JAWS, but only for NVDA.

Of course my experiment is rather limited, if you or anyone else could 
test more scenarios and report any problems with the current R-devel 
Rgui (and the "full" cursor), it would be a great help and we can try to 
fix those.

Regarding changes that did happen to the R sources in the past, which 
clearly could impact the screen reader performance, I see R 2.12.0 has 
in NEWS: "The Rgui console now has an optional blinking caret (cursor) 
to assist screen readers for the visually impaired." Before this change, 
Rgui only used its custom drawn cursor, about which it didn't tell 
Windows, and hence Windows couldn't tell the screen readers. After this 
change, one could choose also "partial" (default) and "full" cursor. 
"partial" included the custom drawn cursor together with the standard 
Windows cursor ("caret") Windows knows about. "Full" cursor included 
only the standard Windows cursor. This was an addition by Duncan 
Murdoch, which allowed the navigation to work. "None" (none blinking) 
cursor in R 4.2.2 is like the original custom drawn cursor and neither 
NVDA nor JAWS with that can read the characters back when they are 
navigated over: they cannot detect the cursor.

I don't see any changes in the implementation of the cursor since the 
original Duncan's code for 2.12.0. I fixed some name clashes in 76745 in 
June 2019 (so R 4.0.0), but that should be completely benign.

However, what I did see was non-standard behavior of the standard 
Windows cursor in Rgui when switching windows, going to menu, starting 
Rgui, etc. I've fixed most but not (yet) all of those. It may be that 
users have ran into intermittent problems with the screen readers as a 
consequence of such actions (sometimes they lead not only to visually 
loosing the Windows cursor, but also to the cursor really disappearing 
so that Windows didn't know about it anymore). It is well possible that 
this also affected JAWS. I know for sure it did affect NVDA, based on 
which I did the current fixes.

Best
Tomas

On 12/21/22 20:33, Jonathan Godfrey wrote:
> Hello both,
>
> I so seldom use the RGUI that I hand't noticed it was behaving nicely in 4.2.2 which has been running on my laptop for a long time!
>
> I confirm the JAWS experience is back to what I expected prior to 4.2.0 and assure you that I do nothing to alter the default settings. I do think maintaining the usefulness of the GUI has merit because that is what a new R user will end up trying once they discover RStudio's inaccessibility.
>
> I really do not understand how/why switching a cosmetic element of a cursor should lead to changes in the screen reader performance. I'm sure the size, shape, and colour of a mouse pointer  doesn't affect it's performance although I would expect it to have an impact on a user's performance.
>
> Rather, I assumed that the change in the cosmetics of the cursor was the symptom of an underlying change that had multiple impacts, one of which was the disconnect with the screen reader.
>
> Did the underlying development toolbox undergo any version changes from ( <4.2.0 ) to (4.2.0...4.2.1) to (4.2.2) ??
>
> Great that normal transmission has resumed.
>
> Jonathan
>
>
> -----Original Message-----
> From: Tomas Kalibera <tomas.kalibera at gmail.com>
> Sent: Thursday, 22 December 2022 6:53 am
> To: Andrew Hart <ahart at dim.uchile.cl>; Jonathan Godfrey <A.J.Godfrey at massey.ac.nz>
> Cc: R-devel at r-project.org
> Subject: Re: [Rd] Problem with accessibility in R 4.2.0 and 4.2.1.
>
> Hi Andrew,
>
> thanks a lot for your testing and I am looking forward to what you find
> out about the fixes in R-devel.
>
> You asked about changes between 4.2.1 and 4.2.2 relevant to this. I
> don't think you overlooked anything, I looked now again at the source
> code diff and I didn't find anything relevant. The Rgui console was
> fixed to work with Alt+sequences (tilde on Italian keyboard). GraphApp
> was fixed to use the correct font charset for UTF-8 in dialog boxes.
> Search and replace was fixed in the script editor. Invalid write was
> fixed with printing very long lines.
>
> None of those changes should impact the behavior of the caret in the
> console window. I would not be surprised if the behavior with the screen
> reader was unpredictable/random, certainly inconsequential to whether we
> had R 4.2.1 or 4.2.2. Hopefully the changes now in R-devel would make it
> more reliable. If not, we can try to improve it further.
>
> Thanks for testing with JAWS, I am impressed it can get anything out
> from Rgui with the partial cursor. NVDA cannot, it allows navigating
> using left arrow/right arrow over the line (after focus out+in in R
> 4.2.2), but it thinks that the characters on the line are all spaces.
>
> In either case, I think using the partial cursor with screen readers
> doesn't make sense, it could only confuse the screen reader application.
> If some people preferred a wider cursor than "full", we could add a
> "wide full" cursor, that would be quite easy. If some people preferred
> less blinking or no blinking at all, they can already set that up
> system-wide in Windows for the "full" (or potential "wide full") cursor.
>
> Cheers
> Tomas
>
> On 12/21/22 17:12, Andrew Hart wrote:
>> HI Tomas,
>>
>> Thanks a lot for not letting this go. It is truly appreciated. I had
>> been using Rterm directly as Jonathan had suggested since we discussed
>> this a number of months ago on the R-devel list. However, about a week
>> and a half ago I accidentally launched Rgui for R 4.2.2 (which I
>> installed around the end of October) and was surprised when I could
>> actually? use it like I could use the pre-4.2 versions of R! I have
>> been using it for a little more than a week now and was intending to
>> write to you, but you beat me with this message.
>> The accessibility of Rgui 4.2.2 seems very similar to R 4.1.2 (which I
>> still have on my system). In contrast, Rgui 4.2.1 is more or less
>> unusable. I was wanting to ask you if perhaps something got changed in
>> R 4.2.2? Nothing jumped out at me in the release notes, but I could
>> easily have overlooked something.
>>
>> After reading this message, I went and checked the cursor blink
>> setting in my 4.2.2 installation and it is indeed set to partial.
>> You're right in that occasionally JAWS loses the cursor and the
>> ability to read the R window. However, simply pressing the <enter> key
>> while Rgui has the focus fixes this. It seems that drawing a new
>> command prompt on a new line sets JAWS straight and I am able to keep
>> working. I haven't used 4.1.2 for a while, but I think it had the same
>> issue. I assumed that this was caused by moving from Windows 7 to
>> Windows 10, since I never encountered this kind of issue in windows 7.
>> I'll try out full cursor and see if that makes a difference in 4.2.2.
>>
>> Also, I'll download the development snapshot and try it out. I'll let
>> you know how I get on. Please excuse me if I don't get to it
>> immediately; things are a bit crazy at work at the moment and it is
>> that time of the year too!
>>
>> Cheers,
>> Andrew.
>>
>> On 20/12/2022 19:33, Tomas Kalibera wrote:
>>> Dear Andrew, Jonathan,
>>>
>>> I had a closer look and tried to improve accessibility in Rgui,
>>> please see below. I would be grateful for feedback.
>>>
>>> Rgui supports three cursor types, which can be selected via Edit/GUI
>>> preferences/Cursor blink.
>>>
>>> The default is "partial", but for screen readers, please use "full".
>>> You can change the selection in the menu and then "Save..." to save
>>> it into your Rconsole file. If you already have the file, the
>>> corresponding selection is "cursor_blink = Full".
>>>
>>> The "full" cursor is implemented as the standard Windows "caret" and
>>> this is what screen readers can see. Once you set this cursor as the
>>> default in your Rconsole file and re-start Rgui, but before you start
>>> using the console, please switch focus out and back in (e.g. press
>>> Alt+TAB twice). This helps NVDA detect the characters under the
>>> cursor in already released versions of R. Please start the screen
>>> reader before starting Rgui.
>>>
>>> I found that the "full" cursor implementation has a number of
>>> problems: in some situation it disappears when it shouldn't, in some
>>> the other way around. I thought this was confusing the screen reader,
>>> so I fixed most of these cases.
>>>
>>> However, the true cause was that Rgui didn't create the cursor right
>>> when it got focus the first time. Luckily NVDA is open-source, so one
>>> can read and modify the source code to find out. I've added a
>>> work-around to Rgui, which is used only with the "full" cursor,
>>> because the "partial" cursor confuses the screen reader too much to
>>> be usable, anyway. So, after this fix, one doesn't have to do that
>>> focus out+in trick.
>>>
>>> The improvements are in R-devel (revision 83482 or newer). I would be
>>> grateful if you could test it, so that it could be improved further
>>> (or reverted if it actually turned out worse). Particularly if you
>>> find a problem reproducible with NVDA, that should be something I
>>> could diagnose and improve, as I have the sources.
>>>
>>> I've been testing with NVDA and I'd be curious about the impact on JAWS.
>>> Rgui doesn't work with Narrator.
>>>
>>> Thanks,
>>> Tomas
>>>
>>> On 9/22/22 23:15, Andrew Hart via R-devel wrote:
>>>>  ????On 22/09/2022 16:42, Toby Hocking wrote:
>>>>> Another option is to use https://apc01.safelinks.protection.outlook.com/?url=https%3A%2F%2Femacspeak.sourceforge.net%2F&data=05%7C01%7CA.J.Godfrey%40massey.ac.nz%7C57c5944c92d44191ddc108dae37c3ec1%7C388728e1bbd0437898dcf8682e644300%7C1%7C0%7C638072420031027810%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C3000%7C%7C%7C&sdata=26qSJenRyJmtcitO543qXzUrMv0APRhPUVroL5j2bWA%3D&reserved=0
>>>>> <https://apc01.safelinks.protection.outlook.com/?url=https%3A%2F%2Femacspeak.sourceforge.net%2F&data=05%7C01%7CA.J.Godfrey%40massey.ac.nz%7C57c5944c92d44191ddc108dae37c3ec1%7C388728e1bbd0437898dcf8682e644300%7C1%7C0%7C638072420031027810%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C3000%7C%7C%7C&sdata=26qSJenRyJmtcitO543qXzUrMv0APRhPUVroL5j2bWA%3D&reserved=0> (version of emacs editor/ide
>>>>> which can speak letters/words/lines -- has a blind maintainer) with
>>>>> https://apc01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fess.r-project.org%2F&data=05%7C01%7CA.J.Godfrey%40massey.ac.nz%7C57c5944c92d44191ddc108dae37c3ec1%7C388728e1bbd0437898dcf8682e644300%7C1%7C0%7C638072420031027810%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C3000%7C%7C%7C&sdata=zaSGfvpJrIKhSFU6fC%2FoBFFrRQJmp0bNui79UyHkmdE%3D&reserved=0 <https://apc01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fess.r-project.org%2F&data=05%7C01%7CA.J.Godfrey%40massey.ac.nz%7C57c5944c92d44191ddc108dae37c3ec1%7C388728e1bbd0437898dcf8682e644300%7C1%7C0%7C638072420031027810%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C3000%7C%7C%7C&sdata=zaSGfvpJrIKhSFU6fC%2FoBFFrRQJmp0bNui79UyHkmdE%3D&reserved=0> (interface
>>>>> for editing and running R code from within emacs)
>>>> Thanks everyone for all the suggestions. Of course, the optimal
>>>> solution would be to figure out what is going on in Rgui, but, as is
>>>> always the case, the blind user use case is a fairly niche one. I
>>>> appreciate all the suggestions for finding an immediate solution to
>>>> my problem.
>>>> I don't use any kind of IDE for working with R since I simply
>>>> haven't found one that is accessible or that i understand how to
>>>> use. There is a plug-in for the Eclipse IDE I installed a few years
>>>> ago, but I didn't understand the first thing about how it was to be
>>>> used. So I've just always worked with an editor open in one Window
>>>> and R in another,
>>>> working interactively in R or bouncing over to the editor for more
>>>> complex things and sourcing code into R as necessary. However, I
>>>> only use the R console in Rgui. I went and had a look at Rterm,
>>>> which I have never used on Windows; I've only ever used it when
>>>> ssh-ing into Linux systems to use R. However, I've just found out
>>>> that Rterm does a number of fairly important things that probably
>>>> mean I can just use it instead of Rgui:
>>>> 1. You can paste from the clipboard into the Rterm prompt;
>>>> 2. It has a command history;
>>>> 3. If you plot something, it opens a Window to draw the plot (I
>>>> never realised it could do this and had always assumed Rgui was
>>>> needed for this); and
>>>> 4. It opens the HTML help if you ask for help on windows. I only
>>>> ever saw it display text help on Linux, but I was logged in
>>>> remotely. Text-based help is fine when ssh-ing into a machine, but
>>>> HTML help is much nicer to read and navigate.
>>>>
>>>> I think I'll just switch over to Rterm for a while, but I can also
>>>> check out ess, which I wasn't aware of.
>>>>
>>>> Thanks a lot,
>>>> Andrew.
>>>>
>>>> ______________________________________________
>>>> R-devel at r-project.org mailing list
>>>> https://apc01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fstat.ethz.ch%2Fmailman%2Flistinfo%2Fr-devel&data=05%7C01%7CA.J.Godfrey%40massey.ac.nz%7C57c5944c92d44191ddc108dae37c3ec1%7C388728e1bbd0437898dcf8682e644300%7C1%7C0%7C638072420031027810%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C3000%7C%7C%7C&sdata=H2lu1uaB3BLrl5trR2KweKe4GvFNTCK0KGIYVEMsBS8%3D&reserved=0


From sergio@vig@@ii m@iii@g oii u@ibe@ch  Fri Dec 23 15:45:17 2022
From: sergio@vig@@ii m@iii@g oii u@ibe@ch (sergio@vig@@ii m@iii@g oii u@ibe@ch)
Date: Fri, 23 Dec 2022 14:45:17 +0000
Subject: [Rd] RTools 4.2 - possible conflict with git bash
Message-ID: <403295558c4742549a750e284346ac85@unibe.ch>

Hi all,

It seems that RTools 4.2 conflicts with git bash on Windows 10.
When I use the git bash terminal in RStudio and I run `make --version`, I get the following error:

$ C:/rtools42/usr/bin/make.exe --version
      1 [main] make (5948) C:\rtools42\usr\bin\make.exe: *** fatal error - cygheap base mismatch detected - 0x210351408/0x180350408.
This problem is probably due to using incompatible versions of the cygwin DLL.
Search for cygwin1.dll using the Windows Start->Find/Search facility
and delete all but the most recent version.  The most recent version *should*
reside in x:\cygwin\bin, where 'x' is the drive on which you have
installed the cygwin distribution.  Rebooting is also suggested if you
are unable to find another cygwin DLL.

However, if I use the **Build All** tool of RStudio, the command works properly.
The problem seems an incompatible version of msys-2.0.dll, but I could not solve the problem. Any idea?

Below the version of git:

$ git --version
git version 2.39.0.windows.2

From tom@@@k@||ber@ @end|ng |rom gm@||@com  Fri Dec 23 16:17:04 2022
From: tom@@@k@||ber@ @end|ng |rom gm@||@com (Tomas Kalibera)
Date: Fri, 23 Dec 2022 16:17:04 +0100
Subject: [Rd] RTools 4.2 - possible conflict with git bash
In-Reply-To: <403295558c4742549a750e284346ac85@unibe.ch>
References: <403295558c4742549a750e284346ac85@unibe.ch>
Message-ID: <bbdf1e2f-bf3b-f028-ffb5-b1e76626ea1d@gmail.com>

On 12/23/22 15:45, sergio.vignali at unibe.ch wrote:
> Hi all,
>
> It seems that RTools 4.2 conflicts with git bash on Windows 10.

You can't mix tools from two different distributions based on msys2 (or 
cygwin). You cannot e.g. call "make" of one of them from a shell ran in 
another one. This is due to how cygwin and dynamic loading on Windows 
works. Both Rtools42 and git bash are based on msys2.

You need to stick to one of the distributions. For instance, you can use 
Rtools42 and install there any msys2 tools you want there, e.g. 
including git.

Or, you can have a standalone Msys2 installation and use only toolchain 
tarballs from Rtools (requires some set up but is documented). This is 
what I usually do as I want to upgrade Rtools often without messing with 
my Msys2 installation and vice-versa. One of the Msys2 packages I have 
installed there is git.

Tomas

> When I use the git bash terminal in RStudio and I run `make --version`, I get the following error:
>
> $ C:/rtools42/usr/bin/make.exe --version
>        1 [main] make (5948) C:\rtools42\usr\bin\make.exe: *** fatal error - cygheap base mismatch detected - 0x210351408/0x180350408.
> This problem is probably due to using incompatible versions of the cygwin DLL.
> Search for cygwin1.dll using the Windows Start->Find/Search facility
> and delete all but the most recent version.  The most recent version *should*
> reside in x:\cygwin\bin, where 'x' is the drive on which you have
> installed the cygwin distribution.  Rebooting is also suggested if you
> are unable to find another cygwin DLL.
>
> However, if I use the **Build All** tool of RStudio, the command works properly.
> The problem seems an incompatible version of msys-2.0.dll, but I could not solve the problem. Any idea?
>
> Below the version of git:
>
> $ git --version
> git version 2.39.0.windows.2
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From co|||nber|ck@on @end|ng |rom gm@||@com  Fri Dec 23 18:30:06 2022
From: co|||nber|ck@on @end|ng |rom gm@||@com (Collin Erickson)
Date: Fri, 23 Dec 2022 11:30:06 -0600
Subject: [Rd] Bug in optim for specific orders of magnitude
Message-ID: <CAP6aD9d+A9h8FfAX1On29Oo2979HeiWSQMg=dxBSAu_zJNXTqQ@mail.gmail.com>

Hello,

I've come across what seems to be a bug in optim that has become a nuisance
for me.

To recreate the bug, run:

optim(c(0,0), function(x) {x[1]*1e-317}, lower=c(-1,-1), upper=c(1,1),
method='L-BFGS-B')

The error message says:

Error in optim(c(0, 0), function(x) { :
  non-finite value supplied by optim

What makes this particularly treacherous is that this error only occurs for
specific powers. By running the following code you will find that the error
only occurs when the power is between -309 and -320; above and below that
work fine.

p <- 1:1000
giveserror <- rep(NA, length(p))
for (i in seq_along(p)) {
  tryout <- try({
    optim(c(0,0), function(x) {x[1]*10^-p[i]}, lower=c(-1,-1),
upper=c(1,1), method='L-BFGS-B')
  })
  giveserror[i] <- inherits(tryout, "try-error")
}
p[giveserror]

Obviously my function is much more complex than this and usually doesn't
fail, but this reprex demonstrates that this is a problem. To avoid the
error I may multiply by a factor or take the log, but it seems like a
legitimate bug that should be fixed.

I tried to look inside of optim to track down the error, but the error lies
within the external C code:

.External2(C_optim, par, fn1, gr1, method, con, lower,
        upper)

For reference, I am running R 4.2.2, but was also able to recreate this bug
on another device running R 4.1.2 and another running 4.0.3.

Thanks,
Collin Erickson

	[[alternative HTML version deleted]]


From ru|pb@rr@d@@ @end|ng |rom @@po@pt  Fri Dec 23 19:41:10 2022
From: ru|pb@rr@d@@ @end|ng |rom @@po@pt (Rui Barradas)
Date: Fri, 23 Dec 2022 18:41:10 +0000
Subject: [Rd] Bug in optim for specific orders of magnitude
In-Reply-To: <CAP6aD9d+A9h8FfAX1On29Oo2979HeiWSQMg=dxBSAu_zJNXTqQ@mail.gmail.com>
References: <CAP6aD9d+A9h8FfAX1On29Oo2979HeiWSQMg=dxBSAu_zJNXTqQ@mail.gmail.com>
Message-ID: <6722312a-0975-23db-ebce-2466971317bb@sapo.pt>

?s 17:30 de 23/12/2022, Collin Erickson escreveu:
> Hello,
> 
> I've come across what seems to be a bug in optim that has become a nuisance
> for me.
> 
> To recreate the bug, run:
> 
> optim(c(0,0), function(x) {x[1]*1e-317}, lower=c(-1,-1), upper=c(1,1),
> method='L-BFGS-B')
> 
> The error message says:
> 
> Error in optim(c(0, 0), function(x) { :
>    non-finite value supplied by optim
> 
> What makes this particularly treacherous is that this error only occurs for
> specific powers. By running the following code you will find that the error
> only occurs when the power is between -309 and -320; above and below that
> work fine.
> 
> p <- 1:1000
> giveserror <- rep(NA, length(p))
> for (i in seq_along(p)) {
>    tryout <- try({
>      optim(c(0,0), function(x) {x[1]*10^-p[i]}, lower=c(-1,-1),
> upper=c(1,1), method='L-BFGS-B')
>    })
>    giveserror[i] <- inherits(tryout, "try-error")
> }
> p[giveserror]
> 
> Obviously my function is much more complex than this and usually doesn't
> fail, but this reprex demonstrates that this is a problem. To avoid the
> error I may multiply by a factor or take the log, but it seems like a
> legitimate bug that should be fixed.
> 
> I tried to look inside of optim to track down the error, but the error lies
> within the external C code:
> 
> .External2(C_optim, par, fn1, gr1, method, con, lower,
>          upper)
> 
> For reference, I am running R 4.2.2, but was also able to recreate this bug
> on another device running R 4.1.2 and another running 4.0.3.
> 
> Thanks,
> Collin Erickson
> 
> 	[[alternative HTML version deleted]]
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel

Hello,

See if this R-Help thread [1] earlier this year is relevant.
In particular, the post by R Core team member Luke Tierney [2], that 
answers much better than what I could.

The very small numbers in your question seem to have hit a limit and 
this limit is not R related.


[1] https://stat.ethz.ch/pipermail/r-help/2022-February/473840.html
[2] https://stat.ethz.ch/pipermail/r-help/2022-February/473844.html


Hope this helps,

Rui Barradas


From @d|rk@e @end|ng |rom g@m@@com  Fri Dec 23 20:29:07 2022
From: @d|rk@e @end|ng |rom g@m@@com (Steven Dirkse)
Date: Fri, 23 Dec 2022 14:29:07 -0500
Subject: [Rd] Bug in optim for specific orders of magnitude
In-Reply-To: <CAP6aD9d+A9h8FfAX1On29Oo2979HeiWSQMg=dxBSAu_zJNXTqQ@mail.gmail.com>
References: <CAP6aD9d+A9h8FfAX1On29Oo2979HeiWSQMg=dxBSAu_zJNXTqQ@mail.gmail.com>
Message-ID: <CAHiA-Zkf2kRniCRo0g2S5o_JG4BksqcSQ_-c4j83_-3Fm2TC6g@mail.gmail.com>

Collin,

It is interesting that you get such strange results when passing denormal
values to optim().  Several possibilities for this spring to mind.

A better question though might be, "What kind of results are you expecting
when you pass such small values to optim()?"  In general, you shouldn't
have a strong expectation that you'll get good results back when you have
small coefficients like 1e-317 (or 1e-17) in your objective function.  The
algorithms behind optim() are not designed or implemented to do their best
work with coefficients of magnitude far from 1.  You can hope.  You can get
lucky.  But I would not advise you to have strong expectations.

-Steve

On Fri, Dec 23, 2022 at 1:20 PM Collin Erickson <collinberickson at gmail.com>
wrote:

> Hello,
>
> I've come across what seems to be a bug in optim that has become a nuisance
> for me.
>
> To recreate the bug, run:
>
> optim(c(0,0), function(x) {x[1]*1e-317}, lower=c(-1,-1), upper=c(1,1),
> method='L-BFGS-B')
>
> The error message says:
>
> Error in optim(c(0, 0), function(x) { :
>   non-finite value supplied by optim
>
> What makes this particularly treacherous is that this error only occurs for
> specific powers. By running the following code you will find that the error
> only occurs when the power is between -309 and -320; above and below that
> work fine.
>
> p <- 1:1000
> giveserror <- rep(NA, length(p))
> for (i in seq_along(p)) {
>   tryout <- try({
>     optim(c(0,0), function(x) {x[1]*10^-p[i]}, lower=c(-1,-1),
> upper=c(1,1), method='L-BFGS-B')
>   })
>   giveserror[i] <- inherits(tryout, "try-error")
> }
> p[giveserror]
>
> Obviously my function is much more complex than this and usually doesn't
> fail, but this reprex demonstrates that this is a problem. To avoid the
> error I may multiply by a factor or take the log, but it seems like a
> legitimate bug that should be fixed.
>
> I tried to look inside of optim to track down the error, but the error lies
> within the external C code:
>
> .External2(C_optim, par, fn1, gr1, method, con, lower,
>         upper)
>
> For reference, I am running R 4.2.2, but was also able to recreate this bug
> on another device running R 4.1.2 and another running 4.0.3.
>
> Thanks,
> Collin Erickson
>
>         [[alternative HTML version deleted]]
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>


-- 
Steven Dirkse, Ph.D.
GAMS Development Corp.
office: 202.342.0180

	[[alternative HTML version deleted]]


From pro|jcn@@h @end|ng |rom gm@||@com  Fri Dec 23 20:36:29 2022
From: pro|jcn@@h @end|ng |rom gm@||@com (J C Nash)
Date: Fri, 23 Dec 2022 14:36:29 -0500
Subject: [Rd] Bug in optim for specific orders of magnitude
In-Reply-To: <6722312a-0975-23db-ebce-2466971317bb@sapo.pt>
References: <CAP6aD9d+A9h8FfAX1On29Oo2979HeiWSQMg=dxBSAu_zJNXTqQ@mail.gmail.com>
 <6722312a-0975-23db-ebce-2466971317bb@sapo.pt>
Message-ID: <3475cfd9-06a2-39c1-bb8d-ab69932c4306@gmail.com>

Extreme scaling quite often ruins optimization calculations. If you think available methods
are capable of doing this, there's a bridge I can sell you in NYC.

I've been trying for some years to develop a good check on scaling so I can tell users
who provide functions like this to send (lots of) money and I'll give them the best answer
there is (generally no answer at all). Or, more seriously, to inform them that they should
not expect results unless they scale. Richard Varga once said some decades ago that any
problem was trivially solvable in the right scale, and he was mostly right. Scaling is
important.

To see the range of answers from a number of methods, the script below is helpful. I had
to remove lbfgsb3c from the mix as it stopped mid-calculation in unrecoverable way. Note
that I use my development version of optimx, so some methods might not be included in
CRAN offering. Just remove the methods from the ameth and bmeth lists if necessary.

Cheers, John Nash

# CErickson221223.R
# optim(c(0,0), function(x) {x[1]*1e-317}, lower=c(-1,-1), upper=c(1,1),
#      method='L-BFGS-B')

tfun <- function(x, xpnt=317){
       if ((length(x)) != 2) {stop("Must have length 2")}
       scl <- 10^(-xpnt)
       val <- x[1]*scl # note that x[2] unused. May be an issue!
       val
}
gtfun <- function(x, xpnt=317){ # gradient
   scl <- 10^(-xpnt)
   gg <- c(scl, 0.0)
   gg
}


xx <- c(0,0)
lo <- c(-1,-1)
up <- c(1,1)
print(tfun(xx))
library(optimx)
ameth <- c("BFGS", "CG", "Nelder-Mead", "L-BFGS-B", "nlm", "nlminb",
              "Rcgmin", "Rtnmin", "Rvmmin", "spg", "ucminf", "newuoa", "bobyqa",
              "nmkb", "hjkb",  "hjn", "lbfgs", "subplex", "ncg", "nvm", "mla",
              "slsqp", "anms")

bmeth <- c("L-BFGS-B", "nlminb", "Rcgmin", "Rtnmin", "nvm",
             "bobyqa", "nmkb", "hjkb", "hjn", "ncg", "slsqp")

tstu <- opm(x<-c(0,0), fn=tfun, gr=gtfun, method=ameth, control=list(trace=0))
summary(tstu, order=value)

tstb <- opm(x<-c(0,0), fn=tfun, gr=gtfun, method=bmeth, lower=lo, upper=up,
             control=list(trace=0))
summary(tstb, order=value)


On 2022-12-23 13:41, Rui Barradas wrote:
> ?s 17:30 de 23/12/2022, Collin Erickson escreveu:
>> Hello,
>>
>> I've come across what seems to be a bug in optim that has become a nuisance
>> for me.
>>
>> To recreate the bug, run:
>>
>> optim(c(0,0), function(x) {x[1]*1e-317}, lower=c(-1,-1), upper=c(1,1),
>> method='L-BFGS-B')
>>
>> The error message says:
>>
>> Error in optim(c(0, 0), function(x) { :
>> ?? non-finite value supplied by optim
>>
>> What makes this particularly treacherous is that this error only occurs for
>> specific powers. By running the following code you will find that the error
>> only occurs when the power is between -309 and -320; above and below that
>> work fine.
>>
>> p <- 1:1000
>> giveserror <- rep(NA, length(p))
>> for (i in seq_along(p)) {
>> ?? tryout <- try({
>> ???? optim(c(0,0), function(x) {x[1]*10^-p[i]}, lower=c(-1,-1),
>> upper=c(1,1), method='L-BFGS-B')
>> ?? })
>> ?? giveserror[i] <- inherits(tryout, "try-error")
>> }
>> p[giveserror]
>>
>> Obviously my function is much more complex than this and usually doesn't
>> fail, but this reprex demonstrates that this is a problem. To avoid the
>> error I may multiply by a factor or take the log, but it seems like a
>> legitimate bug that should be fixed.
>>
>> I tried to look inside of optim to track down the error, but the error lies
>> within the external C code:
>>
>> .External2(C_optim, par, fn1, gr1, method, con, lower,
>> ???????? upper)
>>
>> For reference, I am running R 4.2.2, but was also able to recreate this bug
>> on another device running R 4.1.2 and another running 4.0.3.
>>
>> Thanks,
>> Collin Erickson
>>
>> ????[[alternative HTML version deleted]]
>>
>> ______________________________________________
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel
> 
> Hello,
> 
> See if this R-Help thread [1] earlier this year is relevant.
> In particular, the post by R Core team member Luke Tierney [2], that answers much better than what I could.
> 
> The very small numbers in your question seem to have hit a limit and this limit is not R related.
> 
> 
> [1] https://stat.ethz.ch/pipermail/r-help/2022-February/473840.html
> [2] https://stat.ethz.ch/pipermail/r-help/2022-February/473844.html
> 
> 
> Hope this helps,
> 
> Rui Barradas
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From murdoch@dunc@n @end|ng |rom gm@||@com  Fri Dec 23 20:52:52 2022
From: murdoch@dunc@n @end|ng |rom gm@||@com (Duncan Murdoch)
Date: Fri, 23 Dec 2022 14:52:52 -0500
Subject: [Rd] Bug in optim for specific orders of magnitude
In-Reply-To: <CAP6aD9d+A9h8FfAX1On29Oo2979HeiWSQMg=dxBSAu_zJNXTqQ@mail.gmail.com>
References: <CAP6aD9d+A9h8FfAX1On29Oo2979HeiWSQMg=dxBSAu_zJNXTqQ@mail.gmail.com>
Message-ID: <52130044-5386-3c13-6953-28da6709c358@gmail.com>

The optim help page mentions scaling in the discussion of the "control" 
argument.  Specifically under the parscale description:

"Optimization is performed on par/parscale and these should be 
comparable in the sense that a unit change in any element produces about 
a unit change in the scaled value."

In your function a unit change in x[1] makes a change of 1e-317 in the 
function value, and changing x[2] has no effect at all.

It would be nice if violating the rule only led to inefficiencies or 
poor stopping decisions, but the numbers you are working with are close 
to the hardware limits (the smallest positive number with full precision 
is .Machine$double.xmin, about 2e-308), and sometimes that means 
assumptions in the code about how arithmetic works are violated, e.g. 
things like x*1.1 > x may not be true for positive x below 
.Machine$double.xmin .

Duncan Murdoch

On 23/12/2022 12:30 p.m., Collin Erickson wrote:
> Hello,
> 
> I've come across what seems to be a bug in optim that has become a nuisance
> for me.
> 
> To recreate the bug, run:
> 
> optim(c(0,0), function(x) {x[1]*1e-317}, lower=c(-1,-1), upper=c(1,1),
> method='L-BFGS-B')
> 
> The error message says:
> 
> Error in optim(c(0, 0), function(x) { :
>    non-finite value supplied by optim
> 
> What makes this particularly treacherous is that this error only occurs for
> specific powers. By running the following code you will find that the error
> only occurs when the power is between -309 and -320; above and below that
> work fine.
> 
> p <- 1:1000
> giveserror <- rep(NA, length(p))
> for (i in seq_along(p)) {
>    tryout <- try({
>      optim(c(0,0), function(x) {x[1]*10^-p[i]}, lower=c(-1,-1),
> upper=c(1,1), method='L-BFGS-B')
>    })
>    giveserror[i] <- inherits(tryout, "try-error")
> }
> p[giveserror]
> 
> Obviously my function is much more complex than this and usually doesn't
> fail, but this reprex demonstrates that this is a problem. To avoid the
> error I may multiply by a factor or take the log, but it seems like a
> legitimate bug that should be fixed.
> 
> I tried to look inside of optim to track down the error, but the error lies
> within the external C code:
> 
> .External2(C_optim, par, fn1, gr1, method, con, lower,
>          upper)
> 
> For reference, I am running R 4.2.2, but was also able to recreate this bug
> on another device running R 4.1.2 and another running 4.0.3.
> 
> Thanks,
> Collin Erickson
> 
> 	[[alternative HTML version deleted]]
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From co|||nber|ck@on @end|ng |rom gm@||@com  Fri Dec 23 23:09:09 2022
From: co|||nber|ck@on @end|ng |rom gm@||@com (Collin Erickson)
Date: Fri, 23 Dec 2022 16:09:09 -0600
Subject: [Rd] Bug in optim for specific orders of magnitude
In-Reply-To: <52130044-5386-3c13-6953-28da6709c358@gmail.com>
References: <CAP6aD9d+A9h8FfAX1On29Oo2979HeiWSQMg=dxBSAu_zJNXTqQ@mail.gmail.com>
 <52130044-5386-3c13-6953-28da6709c358@gmail.com>
Message-ID: <CAP6aD9drCFjRVkEcYGu6MhU7RU+h+r9H_oeZ34SR_UdXbPC51Q@mail.gmail.com>

Thanks for all of your replies.

I would like to clarify that I am not expecting optim to return a good
result in these cases, as I am aware of the difficulties that come with the
numerical precision for such small numbers. I would be happy for optim to
take zero steps and return the initial value after it sees the gradient as
close enough to 0. What I think is a bug is for optim to return an error
for a specific range of numbers between 1e-309 and 1e-320 while not giving
an error for values on either side. I think the behavior should be the same
as for smaller numbers where it simply returns the starting point after
estimating the gradient to be 0.

To give an idea of where I was seeing the error, consider a function that
is mostly near 0, but has some areas of interest, for example:
f <- function(x) {-exp(-sum(x^2))}

As long as the starting point is near the peak, optim works fine, but if
you give it a bad starting point it will see the function as flat and
return the starting point.

Again, it is fine that it is not able to find the optimum in the scenario
of starting far from the peak, but I believe that it should NOT return an
error when the initial value falls within a specific range. The bug is that
it returns an error, not that it fails to optimize.

Thanks,
Collin

On Fri, Dec 23, 2022 at 1:52 PM Duncan Murdoch <murdoch.duncan at gmail.com>
wrote:

> The optim help page mentions scaling in the discussion of the "control"
> argument.  Specifically under the parscale description:
>
> "Optimization is performed on par/parscale and these should be
> comparable in the sense that a unit change in any element produces about
> a unit change in the scaled value."
>
> In your function a unit change in x[1] makes a change of 1e-317 in the
> function value, and changing x[2] has no effect at all.
>
> It would be nice if violating the rule only led to inefficiencies or
> poor stopping decisions, but the numbers you are working with are close
> to the hardware limits (the smallest positive number with full precision
> is .Machine$double.xmin, about 2e-308), and sometimes that means
> assumptions in the code about how arithmetic works are violated, e.g.
> things like x*1.1 > x may not be true for positive x below
> .Machine$double.xmin .
>
> Duncan Murdoch
>
> On 23/12/2022 12:30 p.m., Collin Erickson wrote:
> > Hello,
> >
> > I've come across what seems to be a bug in optim that has become a
> nuisance
> > for me.
> >
> > To recreate the bug, run:
> >
> > optim(c(0,0), function(x) {x[1]*1e-317}, lower=c(-1,-1), upper=c(1,1),
> > method='L-BFGS-B')
> >
> > The error message says:
> >
> > Error in optim(c(0, 0), function(x) { :
> >    non-finite value supplied by optim
> >
> > What makes this particularly treacherous is that this error only occurs
> for
> > specific powers. By running the following code you will find that the
> error
> > only occurs when the power is between -309 and -320; above and below that
> > work fine.
> >
> > p <- 1:1000
> > giveserror <- rep(NA, length(p))
> > for (i in seq_along(p)) {
> >    tryout <- try({
> >      optim(c(0,0), function(x) {x[1]*10^-p[i]}, lower=c(-1,-1),
> > upper=c(1,1), method='L-BFGS-B')
> >    })
> >    giveserror[i] <- inherits(tryout, "try-error")
> > }
> > p[giveserror]
> >
> > Obviously my function is much more complex than this and usually doesn't
> > fail, but this reprex demonstrates that this is a problem. To avoid the
> > error I may multiply by a factor or take the log, but it seems like a
> > legitimate bug that should be fixed.
> >
> > I tried to look inside of optim to track down the error, but the error
> lies
> > within the external C code:
> >
> > .External2(C_optim, par, fn1, gr1, method, con, lower,
> >          upper)
> >
> > For reference, I am running R 4.2.2, but was also able to recreate this
> bug
> > on another device running R 4.1.2 and another running 4.0.3.
> >
> > Thanks,
> > Collin Erickson
> >
> >       [[alternative HTML version deleted]]
> >
> > ______________________________________________
> > R-devel at r-project.org mailing list
> > https://stat.ethz.ch/mailman/listinfo/r-devel
>
>

	[[alternative HTML version deleted]]


From yugong @end|ng |rom out|ook@com  Mon Dec 26 03:46:38 2022
From: yugong @end|ng |rom out|ook@com (gong yu)
Date: Mon, 26 Dec 2022 02:46:38 +0000
Subject: [Rd] Sys.timezone() return wrong result on windows 10
Message-ID: <TYAP286MB02684C8D2C8EDBB6F823CEFBD1EC9@TYAP286MB0268.JPNP286.PROD.OUTLOOK.COM>

Dear R core team:
Sys.timezone()  return wrong result on windows 10 (simple chinese version), it return  Asia/Taipei ,but The time zone  is  " China Standard Time (UTC+08:00) Beijing, Chongqing, Hong Kong, Urumqi" .

after some digging , the code related this issue at r\src\extra\tzone\registryTZ.c line 54.
 { L"China Standard Time", "Asia/Taipei" }
it should be
 { L"China Standard Time", "Asia/Shanghai" }

this can be verified use windows command  " tzutil /l" , which report :
(UTC+08:00) Beijing, Chongqing, Hong Kong, Urumqi
China Standard Time

(UTC+08:00) Taipei
Taipei Standard Time

there also more information about timezone  on windows 10 (https://learn.microsoft.com/en-us/windows-hardware/manufacture/desktop/default-time-zones?view=windows-10)

could we chang r\src\extra\tzone\registryTZ.c line 54 to { L"China Standard Time", "Asia/Shanghai" } ?

your sincerely

Yu Gong


	[[alternative HTML version deleted]]


From ggrothend|eck @end|ng |rom gm@||@com  Mon Dec 26 13:49:45 2022
From: ggrothend|eck @end|ng |rom gm@||@com (Gabor Grothendieck)
Date: Mon, 26 Dec 2022 07:49:45 -0500
Subject: [Rd] anova and intercept
Message-ID: <CAP01uRkgyfuJVR2c2rsGXn5cxXizGVzj+f0n+kLSnsPyP2jGSw@mail.gmail.com>

Suppose we want to perform a paired test using the sleep data frame
with anova in R.  Then this works and gives the same p value as
t.test(extra ~ group, sleep, paired = TRUE, var.equal = TRUE)

   ones <- rep(1, 10)
   anova(lm(diff(extra, 10) ~ ones + 0, sleep)

This gives output but does not give an F test at all.

   ones <- rep(1, 10)
   anova(lm(diff(extra, 10) ~ 1, sleep)

Maybe there should be some way to force an F test to be produced for
the intercept in anova for consistency with t.test so that the second
code can be used.


-- 
Statistics & Software Consulting
GKX Group, GKX Associates Inc.
tel: 1-877-GKX-GROUP
email: ggrothendieck at gmail.com


From brod|e@g@@|@m @end|ng |rom y@hoo@com  Mon Dec 26 15:19:34 2022
From: brod|e@g@@|@m @end|ng |rom y@hoo@com (Brodie Gaslam)
Date: Mon, 26 Dec 2022 14:19:34 +0000 (UTC)
Subject: [Rd] Bug in optim for specific orders of magnitude
In-Reply-To: <CAP6aD9drCFjRVkEcYGu6MhU7RU+h+r9H_oeZ34SR_UdXbPC51Q@mail.gmail.com>
References: <CAP6aD9d+A9h8FfAX1On29Oo2979HeiWSQMg=dxBSAu_zJNXTqQ@mail.gmail.com>
 <52130044-5386-3c13-6953-28da6709c358@gmail.com>
 <CAP6aD9drCFjRVkEcYGu6MhU7RU+h+r9H_oeZ34SR_UdXbPC51Q@mail.gmail.com>
Message-ID: <1194615585.3969501.1672064374067@mail.yahoo.com>

FWIW, I suspect the problem might have something to do with:

> 1/1e-308
[1] 1e+308
> 1/1e-309
[1] Inf
> 1e-309 > 0
[1] TRUE
> 1e-324 > 0
[1] FALSE

That is 1e-309 starts being treated as zero by division, but not by comparison (which happens at 1e-324).? This is not quite the range of values you were seeing the anomaly, but close.

This is on a 6th gen Skylake on MacOS.? 

Best,

B.






On Monday, December 26, 2022 at 06:57:03 AM EST, Collin Erickson <collinberickson at gmail.com> wrote: 





Thanks for all of your replies.

I would like to clarify that I am not expecting optim to return a good
result in these cases, as I am aware of the difficulties that come with the
numerical precision for such small numbers. I would be happy for optim to
take zero steps and return the initial value after it sees the gradient as
close enough to 0. What I think is a bug is for optim to return an error
for a specific range of numbers between 1e-309 and 1e-320 while not giving
an error for values on either side. I think the behavior should be the same
as for smaller numbers where it simply returns the starting point after
estimating the gradient to be 0.

To give an idea of where I was seeing the error, consider a function that
is mostly near 0, but has some areas of interest, for example:
f <- function(x) {-exp(-sum(x^2))}

As long as the starting point is near the peak, optim works fine, but if
you give it a bad starting point it will see the function as flat and
return the starting point.

Again, it is fine that it is not able to find the optimum in the scenario
of starting far from the peak, but I believe that it should NOT return an
error when the initial value falls within a specific range. The bug is that
it returns an error, not that it fails to optimize.

Thanks,
Collin

On Fri, Dec 23, 2022 at 1:52 PM Duncan Murdoch <murdoch.duncan at gmail.com>
wrote:

> The optim help page mentions scaling in the discussion of the "control"
> argument.? Specifically under the parscale description:
>
> "Optimization is performed on par/parscale and these should be
> comparable in the sense that a unit change in any element produces about
> a unit change in the scaled value."
>
> In your function a unit change in x[1] makes a change of 1e-317 in the
> function value, and changing x[2] has no effect at all.
>
> It would be nice if violating the rule only led to inefficiencies or
> poor stopping decisions, but the numbers you are working with are close
> to the hardware limits (the smallest positive number with full precision
> is .Machine$double.xmin, about 2e-308), and sometimes that means
> assumptions in the code about how arithmetic works are violated, e.g.
> things like x*1.1 > x may not be true for positive x below
> .Machine$double.xmin .
>
> Duncan Murdoch
>
> On 23/12/2022 12:30 p.m., Collin Erickson wrote:
> > Hello,
> >
> > I've come across what seems to be a bug in optim that has become a
> nuisance
> > for me.
> >
> > To recreate the bug, run:
> >
> > optim(c(0,0), function(x) {x[1]*1e-317}, lower=c(-1,-1), upper=c(1,1),
> > method='L-BFGS-B')
> >
> > The error message says:
> >
> > Error in optim(c(0, 0), function(x) { :
> >? ? non-finite value supplied by optim
> >
> > What makes this particularly treacherous is that this error only occurs
> for
> > specific powers. By running the following code you will find that the
> error
> > only occurs when the power is between -309 and -320; above and below that
> > work fine.
> >
> > p <- 1:1000
> > giveserror <- rep(NA, length(p))
> > for (i in seq_along(p)) {
> >? ? tryout <- try({
> >? ? ? optim(c(0,0), function(x) {x[1]*10^-p[i]}, lower=c(-1,-1),
> > upper=c(1,1), method='L-BFGS-B')
> >? ? })
> >? ? giveserror[i] <- inherits(tryout, "try-error")
> > }
> > p[giveserror]
> >
> > Obviously my function is much more complex than this and usually doesn't
> > fail, but this reprex demonstrates that this is a problem. To avoid the
> > error I may multiply by a factor or take the log, but it seems like a
> > legitimate bug that should be fixed.
> >
> > I tried to look inside of optim to track down the error, but the error
> lies
> > within the external C code:
> >
> > .External2(C_optim, par, fn1, gr1, method, con, lower,
> >? ? ? ? ? upper)
> >
> > For reference, I am running R 4.2.2, but was also able to recreate this
> bug
> > on another device running R 4.1.2 and another running 4.0.3.
> >
> > Thanks,
> > Collin Erickson
> >
> >? ? ? [[alternative HTML version deleted]]
> >
> > ______________________________________________
> > R-devel at r-project.org mailing list
> > https://stat.ethz.ch/mailman/listinfo/r-devel

>
>

??? [[alternative HTML version deleted]]

______________________________________________
R-devel at r-project.org mailing list
https://stat.ethz.ch/mailman/listinfo/r-devel


From pd@|gd @end|ng |rom gm@||@com  Mon Dec 26 18:59:35 2022
From: pd@|gd @end|ng |rom gm@||@com (peter dalgaard)
Date: Mon, 26 Dec 2022 18:59:35 +0100
Subject: [Rd] anova and intercept
In-Reply-To: <CAP01uRkgyfuJVR2c2rsGXn5cxXizGVzj+f0n+kLSnsPyP2jGSw@mail.gmail.com>
References: <CAP01uRkgyfuJVR2c2rsGXn5cxXizGVzj+f0n+kLSnsPyP2jGSw@mail.gmail.com>
Message-ID: <0136AFB4-B361-4520-A09B-434F4034F110@gmail.com>

My usual advice on getting nonstandard F tests out of anova() is to fit the models explicitly and compare. 

So how about this?

fit1 <- lm(diff(extra,10) ~ 1, sleep)
fit0 <- update(fit1, ~ -1)
anova(fit0, fit1)

-pd

> On 26 Dec 2022, at 13:49 , Gabor Grothendieck <ggrothendieck at gmail.com> wrote:
> 
> Suppose we want to perform a paired test using the sleep data frame
> with anova in R.  Then this works and gives the same p value as
> t.test(extra ~ group, sleep, paired = TRUE, var.equal = TRUE)
> 
>   ones <- rep(1, 10)
>   anova(lm(diff(extra, 10) ~ ones + 0, sleep)
> 
> This gives output but does not give an F test at all.
> 
>   ones <- rep(1, 10)
>   anova(lm(diff(extra, 10) ~ 1, sleep)
> 
> Maybe there should be some way to force an F test to be produced for
> the intercept in anova for consistency with t.test so that the second
> code can be used.
> 
> 
> -- 
> Statistics & Software Consulting
> GKX Group, GKX Associates Inc.
> tel: 1-877-GKX-GROUP
> email: ggrothendieck at gmail.com
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel

-- 
Peter Dalgaard, Professor,
Center for Statistics, Copenhagen Business School
Solbjerg Plads 3, 2000 Frederiksberg, Denmark
Phone: (+45)38153501
Office: A 4.23
Email: pd.mes at cbs.dk  Priv: PDalgd at gmail.com


