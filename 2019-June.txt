From therne@u @end|ng |rom m@yo@edu  Sat Jun  1 12:22:33 2019
From: therne@u @end|ng |rom m@yo@edu (Therneau, Terry M., Ph.D.)
Date: Sat, 01 Jun 2019 06:22:33 -0400
Subject: [Rd] survival changes
Message-ID: <9ecfbe$bq2hcm@ironport10.mayo.edu>

In the next version of the survival package I intend to make a non-upwardly compatable 
change to the survfit object.? With over 600 dependent packages this is not something to 
take lightly, and I am currently undecided about the best way to go about it.? I'm looking 
for advice.

The change: 20+ years ago I had decided not to include the initial x=0,y=1 data point in 
the survfit object itself.? It was not formally an estimand and the plot/points/lines etc 
routines could add this on themselves.? That turns out to have been a mistake, and has led 
to a steady proliferation of extra bits as I realized that the time axis doesn't always 
start at 0, and later (with multi state) that y does not always start at 1 (though the 
states sum to 1), and later the the error doesn't always start at 0, and another 
realization with cumulative hazard, and ...
The new survfit method for multi-state coxph models was going to add yet another special 
case.? Basically every component is turning into a duplicate of "row 1" vs "all the 
others".? (And inconsistently named.)

Three possible solutions
1. Current working draft of survival_3.0.3:? Add a 'version' element to the survfit object 
and a 'survfit2.3' function that converts old to new.? All my downstream functions (print, 
plot,...) start with an "if (old) update to new" line.? This has allowed me to stage 
updates to the functions that create survfit objects -- I expect it to happen slowly.? 
There will also be a survfit3.2 function to go backwards. Both the forward and backwards 
functions leave objects alone if they are currently in the desired format.

2. Make a new class "survfit3" and the necessary 'as' functions. The package would contain 
plot.survfit and plot.survfit3 methods, the former a two line "convert and call the 
second" function.

3. Something I haven't thought of.

Number 2 has a cleanness about it, but there is a long term nuisance about it wrt 
documentation.? Users, not unreasonably, expect the survfit function to produce a survfit 
object, and that is what they look for in the help pages.

I plan to have 3.0-x on github before userR so that users can begin to play with it (and 
to get feeback before pushing to CRAN), so need to make a decision.

Terry T.



	[[alternative HTML version deleted]]


From jo@h@m@u|r|ch @end|ng |rom gm@||@com  Sat Jun  1 14:57:38 2019
From: jo@h@m@u|r|ch @end|ng |rom gm@||@com (Joshua Ulrich)
Date: Sat, 1 Jun 2019 07:57:38 -0500
Subject: [Rd] survival changes
In-Reply-To: <9ecfbe$bq2hcm@ironport10.mayo.edu>
References: <9ecfbe$bq2hcm@ironport10.mayo.edu>
Message-ID: <CAPPM_gRhQssb-uPJn+SEzv5UAGD-rgNzEDBmMHu+xb+5wFnwYg@mail.gmail.com>

On Sat, Jun 1, 2019 at 5:22 AM Therneau, Terry M., Ph.D. via R-devel
<r-devel at r-project.org> wrote:
>
> In the next version of the survival package I intend to make a non-upwardly compatable
> change to the survfit object.  With over 600 dependent packages this is not something to
> take lightly, and I am currently undecided about the best way to go about it.  I'm looking
> for advice.
>
I encountered several issues like this while making a change to xts. I
encountered several buggy and inconsistent behaviors while moving
attributes from the xts object to the xts object's index attribute.  I
don't want to "fix" some of these in the next version, because
downstream packages may rely on the old behavior.

Though it's specific to Python, "API Evolution the Right Way" has many
good strategies.
https://emptysqua.re/blog/api-evolution-the-right-way/

The "Deleting Features" and "Changing Behavior" sections are most
relevant to your situation.

> The change: 20+ years ago I had decided not to include the initial x=0,y=1 data point in
> the survfit object itself.  It was not formally an estimand and the plot/points/lines etc
> routines could add this on themselves.  That turns out to have been a mistake, and has led
> to a steady proliferation of extra bits as I realized that the time axis doesn't always
> start at 0, and later (with multi state) that y does not always start at 1 (though the
> states sum to 1), and later the the error doesn't always start at 0, and another
> realization with cumulative hazard, and ...
> The new survfit method for multi-state coxph models was going to add yet another special
> case.  Basically every component is turning into a duplicate of "row 1" vs "all the
> others".  (And inconsistently named.)
>
> Three possible solutions
> 1. Current working draft of survival_3.0.3:  Add a 'version' element to the survfit object
> and a 'survfit2.3' function that converts old to new.  All my downstream functions (print,
> plot,...) start with an "if (old) update to new" line.  This has allowed me to stage
> updates to the functions that create survfit objects -- I expect it to happen slowly.
> There will also be a survfit3.2 function to go backwards. Both the forward and backwards
> functions leave objects alone if they are currently in the desired format.
>
This seems reasonable. It would also give you opportunity to warn
users if functions that expect a new object receive an old object.
That would help them convert any of their functions that rely on the
old structure/behavior.

You could also add a global option to enable warnings with the default
set to FALSE for the first release.  Let users know they can set that
option to TRUE to identify places where they may need to modify their
use cases.

> 2. Make a new class "survfit3" and the necessary 'as' functions. The package would contain
> plot.survfit and plot.survfit3 methods, the former a two line "convert and call the
> second" function.
>
Rather than an entirely new class, I wonder if you could instead make
the new class a subclass.  I'm not sure whether this has advantages
over adding an element, but it's another possibility.

> 3. Something I haven't thought of.
>
I don't have any other ideas, but I would be happy to discuss offline
if that would be helpful.

> Number 2 has a cleanness about it, but there is a long term nuisance about it wrt
> documentation.  Users, not unreasonably, expect the survfit function to produce a survfit
> object, and that is what they look for in the help pages.
>
> I plan to have 3.0-x on github before userR so that users can begin to play with it (and
> to get feeback before pushing to CRAN), so need to make a decision.
>
> Terry T.
>
>
>
>         [[alternative HTML version deleted]]
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel



-- 
Joshua Ulrich  |  about.me/joshuaulrich
FOSS Trading  |  www.fosstrading.com
R/Finance 2019 | www.rinfinance.com


From m@ech|er @end|ng |rom @t@t@m@th@ethz@ch  Sat Jun  1 18:29:01 2019
From: m@ech|er @end|ng |rom @t@t@m@th@ethz@ch (Martin Maechler)
Date: Sat, 1 Jun 2019 18:29:01 +0200
Subject: [Rd] 
 Converting non-32-bit integers from python to R to use bit64:
 reticulate
In-Reply-To: <CAJXDcw1V=2Z0BM31Ovc5SfiUEotuHoQRqWWi5z-8UfRg2qkM5w@mail.gmail.com>
References: <CAJXDcw3jQd2B+hvfXuUUeczx=mmtw0MA_Udaesd-UgM+spyGJw@mail.gmail.com>
 <CAD4oTHH_ixXYEk1OEuFq_yJf83sDYmShbZ1nPGFovRvy-XZPnw@mail.gmail.com>
 <CAJXDcw1V=2Z0BM31Ovc5SfiUEotuHoQRqWWi5z-8UfRg2qkM5w@mail.gmail.com>
Message-ID: <23794.42957.74307.509821@stat.math.ethz.ch>

>>>>> Juan Telleria Ruiz de Aguirre 
>>>>>     on Thu, 30 May 2019 18:46:29 +0200 writes:

    >Thank you Gabriel for valuable insights on the 64-bit integers topic.
    >In addition, my statement was wrong, as Python3 seems to have unlimited
    >(and variable) size integers.
    ....

If you are interested in using unlimited size integers, you
could use the CRAN R package 'gmp' which builds on the GMP = GNU
MP = GNU Multi Precision C library.

   https://cran.r-project.org/package=gmp

(and for arbitrary precision "floats", see CRAN pkg 'Rmpfr'
 built on package gmp, and both the GNU C libraries  GMP and
 MPFR:
	   https://cran.r-project.org/package=Rmpfr
) 


    >Division between Int-32 and Int-64 seems to only happen in Python2.

    >Best,
    >Juan

    >El mi?rcoles, 29 de mayo de 2019, Gabriel Becker <gabembecker at gmail.com>
    >escribi?:

    >> Hi Juan,
    >> 
    >> Comments inline.
    >> 
    >> On Wed, May 29, 2019 at 12:48 PM Juan Telleria Ruiz de Aguirre <
    >> jtelleria.rproject at gmail.com> wrote:
    >> 
    >>> Dear R Developers,
    >>> 
    >>> There is an interesting issue related to "reticulate" R package which
    >>> discusses how to convert Python's non-32 bit integers to R, which has had
    >>> quite an exhaustive discussion:
    >>> 
    >>> https://github.com/rstudio/reticulate/issues/323
    >>> 
    >>> Python seems to handle integers differently from R, and is dependant on
    >>> the
    >>> system arquitecture: On 32 bit systems uses 32-bit integers, and on 64-bit
    >>> systems uses 64-bit integers.
    >>> 
    >>> So my question is:
    >>> 
    >>> As regards R's C Interface, how costly would it be to convert INTSXP from
    >>> 32 bits to 64 bits using C, on 64 bits Systems? Do the benefits surpass
    >>> the
    >>> costs? And should such development be handled from within R Core /
    >>> Ordinary
    >>> Members , or it shall be left to package maintainers?
    >>> 
    >> 
    >> Well, I am not an R-core member, but I can mention a few things:
    >> 
    >> 1. This seems like it would make the results of R code non-reproducible
    >> between 32 and 64bit versions of R; at least some code would give different
    >> results (at the very least in terms of when integer values overflow to NA,
    >> which is documented behavior).
    >> 2. Obviously all integer data would take twice as much memory, memory
    >> bandwidth, space in caches, etc, even when it doesn't need it.
    >> 3. Various places treat data /data pointers coming out of INTSXP and
    >> LGLSXP objects the same within the internal R sources (as currently they're
    >> both int/int*). Catching and fixing all those wouldn't be impossible, but
    >> it would take at least some doing.
    >> 
    >> For me personally 1 seems like a big problem, and 3 makes the conversion
    >> more work than it might have seemed initially.
    >> 
    >> As a related side note, as far as I understand what I've heard from R-core
    >> members directly, the choice to not have multiple types of integers is
    >> intentional and unlikely to change.
    >> 
    >> Best,
    >> ~G
    >> 
    >> 
    >> 
    >> 
    >>> 
    >>> Thank you! :)


From peter@|@ng|e|der @end|ng |rom gm@||@com  Sat Jun  1 18:59:05 2019
From: peter@|@ng|e|der @end|ng |rom gm@||@com (Peter Langfelder)
Date: Sat, 1 Jun 2019 09:59:05 -0700
Subject: [Rd] survival changes
In-Reply-To: <9ecfbe$bq2hcm@ironport10.mayo.edu>
References: <9ecfbe$bq2hcm@ironport10.mayo.edu>
Message-ID: <CA+hbrhWoxyBwMUac9cvWr0gfeQODUoVyjH-PmsXPifPDSfWXqA@mail.gmail.com>

On Sat, Jun 1, 2019 at 3:22 AM Therneau, Terry M., Ph.D. via R-devel
<r-devel at r-project.org> wrote:
>
> In the next version of the survival package I intend to make a non-upwardly compatable
> change to the survfit object.  With over 600 dependent packages this is not something to
> take lightly, and I am currently undecided about the best way to go about it.  I'm looking
> for advice.
>
> The change: 20+ years ago I had decided not to include the initial x=0,y=1 data point in
> the survfit object itself.  It was not formally an estimand and the plot/points/lines etc
> routines could add this on themselves.  That turns out to have been a mistake, and has led
> to a steady proliferation of extra bits as I realized that the time axis doesn't always
> start at 0, and later (with multi state) that y does not always start at 1 (though the
> states sum to 1), and later the the error doesn't always start at 0, and another
> realization with cumulative hazard, and ...
> The new survfit method for multi-state coxph models was going to add yet another special
> case.  Basically every component is turning into a duplicate of "row 1" vs "all the
> others".  (And inconsistently named.)
>
> Three possible solutions
> 1. Current working draft of survival_3.0.3:  Add a 'version' element to the survfit object
> and a 'survfit2.3' function that converts old to new.  All my downstream functions (print,
> plot,...) start with an "if (old) update to new" line.  This has allowed me to stage
> updates to the functions that create survfit objects -- I expect it to happen slowly.
> There will also be a survfit3.2 function to go backwards. Both the forward and backwards
> functions leave objects alone if they are currently in the desired format.
>
> 2. Make a new class "survfit3" and the necessary 'as' functions. The package would contain
> plot.survfit and plot.survfit3 methods, the former a two line "convert and call the
> second" function.
>
> 3. Something I haven't thought of.

A more "clean break" solution would be to start a whole new package
(call it survival2) that would make these changes, and deprecate the
current survival. You could add warnings about deprecation and urging
users to switch in existing survival functions. You could continue
bugfixes for survival but only add new features to survival2. The new
survival2 and the current survival could live side by side on CRAN for
quite some time, giving maintainers of dependent packages (and just
plain users) enough time to switch. This could allow you to
change/clean up other parts of the package that you could perhaps also
use a rethink/rewrite, without too much concern for backward
compatibility.

Peter


From m@rc_@chw@rtz @end|ng |rom me@com  Sat Jun  1 19:32:07 2019
From: m@rc_@chw@rtz @end|ng |rom me@com (Marc Schwartz)
Date: Sat, 1 Jun 2019 13:32:07 -0400
Subject: [Rd] survival changes
In-Reply-To: <CA+hbrhWoxyBwMUac9cvWr0gfeQODUoVyjH-PmsXPifPDSfWXqA@mail.gmail.com>
References: <9ecfbe$bq2hcm@ironport10.mayo.edu>
 <CA+hbrhWoxyBwMUac9cvWr0gfeQODUoVyjH-PmsXPifPDSfWXqA@mail.gmail.com>
Message-ID: <2627EEE9-FBC7-48E7-9F31-4124CAF353CB@me.com>



> On Jun 1, 2019, at 12:59 PM, Peter Langfelder <peter.langfelder at gmail.com> wrote:
> 
> On Sat, Jun 1, 2019 at 3:22 AM Therneau, Terry M., Ph.D. via R-devel
> <r-devel at r-project.org> wrote:
>> 
>> In the next version of the survival package I intend to make a non-upwardly compatable
>> change to the survfit object.  With over 600 dependent packages this is not something to
>> take lightly, and I am currently undecided about the best way to go about it.  I'm looking
>> for advice.
>> 
>> The change: 20+ years ago I had decided not to include the initial x=0,y=1 data point in
>> the survfit object itself.  It was not formally an estimand and the plot/points/lines etc
>> routines could add this on themselves.  That turns out to have been a mistake, and has led
>> to a steady proliferation of extra bits as I realized that the time axis doesn't always
>> start at 0, and later (with multi state) that y does not always start at 1 (though the
>> states sum to 1), and later the the error doesn't always start at 0, and another
>> realization with cumulative hazard, and ...
>> The new survfit method for multi-state coxph models was going to add yet another special
>> case.  Basically every component is turning into a duplicate of "row 1" vs "all the
>> others".  (And inconsistently named.)
>> 
>> Three possible solutions
>> 1. Current working draft of survival_3.0.3:  Add a 'version' element to the survfit object
>> and a 'survfit2.3' function that converts old to new.  All my downstream functions (print,
>> plot,...) start with an "if (old) update to new" line.  This has allowed me to stage
>> updates to the functions that create survfit objects -- I expect it to happen slowly.
>> There will also be a survfit3.2 function to go backwards. Both the forward and backwards
>> functions leave objects alone if they are currently in the desired format.
>> 
>> 2. Make a new class "survfit3" and the necessary 'as' functions. The package would contain
>> plot.survfit and plot.survfit3 methods, the former a two line "convert and call the
>> second" function.
>> 
>> 3. Something I haven't thought of.
> 
> A more "clean break" solution would be to start a whole new package
> (call it survival2) that would make these changes, and deprecate the
> current survival. You could add warnings about deprecation and urging
> users to switch in existing survival functions. You could continue
> bugfixes for survival but only add new features to survival2. The new
> survival2 and the current survival could live side by side on CRAN for
> quite some time, giving maintainers of dependent packages (and just
> plain users) enough time to switch. This could allow you to
> change/clean up other parts of the package that you could perhaps also
> use a rethink/rewrite, without too much concern for backward
> compatibility.
> 
> Peter


Hi,

I would be cautious in going in that direction, bearing in mind that survival is a Recommended package, therefore included in the default R distribution from the R Foundation and other parties. To have two versions can/will result in substantial confusion, and I would argue against that approach.

There is language in the CRAN submission policy that covers API changes, which strictly speaking, may or may not be the case here, depending upon which direction Terry elects to go:

"If an update will change the package?s API and hence affect packages depending on it, it is expected that you will contact the maintainers of affected packages and suggest changes, and give them time (at least 2 weeks, ideally more) to prepare updates before submitting your updated package. Do mention in the submission email which packages are affected and that their maintainers have been informed. In order to derive the reverse dependencies of a package including the addresses of maintainers who have to be notified upon changes, the function reverse_dependencies_with_maintainers is available from the developer website."


Given the potential extent and impact of the changes being considered, it would seem reasonable to:

1. Post a note to R-Devel (possibly R-Help to cover a larger useR base) regarding whatever changes are finalized and formally announce them. The changes are likely to affect end useRs as well as package maintainers.

2. Send communications directly via e-mail to the relevant package maintainers that have dependencies on survival.

3. Consider a longer deprecation time frame for relevant functions, to raise awareness and allow for changes to be made by package maintainers and useRs as may be apropos. Perhaps post reminders to R-Help at relevant time points in advance as you approach the formal deprecation and release of the updated package.


Terry, if you have not used it yet and/or are not aware of it, take a look at ?Deprecated in base:

  https://stat.ethz.ch/R-manual/R-devel/library/base/html/Deprecated.html

which is helpful in setting up a deprecation process. If you Google "deprecating functions in R", there are numerous examples/flows of use and the associated processes, since the help page does not contain any examples at present.

Regards,

Marc Schwartz


From therne@u @end|ng |rom m@yo@edu  Sun Jun  2 02:02:58 2019
From: therne@u @end|ng |rom m@yo@edu (Therneau, Terry M., Ph.D.)
Date: Sat, 01 Jun 2019 20:02:58 -0400
Subject: [Rd] [EXTERNAL] Re:  survival changes
In-Reply-To: <2627EEE9-FBC7-48E7-9F31-4124CAF353CB@me.com>
References: <9ecfbe$bq2hcm@ironport10.mayo.edu>
 <CA+hbrhWoxyBwMUac9cvWr0gfeQODUoVyjH-PmsXPifPDSfWXqA@mail.gmail.com>
 <2627EEE9-FBC7-48E7-9F31-4124CAF353CB@me.com>
Message-ID: <9ecfbe$bq4f1m@ironport10.mayo.edu>



On 6/1/19 1:32 PM, Marc Schwartz wrote:
>
>> On Jun 1, 2019, at 12:59 PM, Peter Langfelder <peter.langfelder at gmail.com> wrote:
>>
>> On Sat, Jun 1, 2019 at 3:22 AM Therneau, Terry M., Ph.D. via R-devel
>> <r-devel at r-project.org> wrote:
>>> In the next version of the survival package I intend to make a non-upwardly compatable
>>> change to the survfit object.  With over 600 dependent packages this is not something to
>>> take lightly, and I am currently undecided about the best way to go about it.  I'm looking
>>> for advice.
>>>
>>> The change: 20+ years ago I had decided not to include the initial x=0,y=1 data point in
>>> the survfit object itself.  It was not formally an estimand and the plot/points/lines etc
>>> routines could add this on themselves.  That turns out to have been a mistake, and has led
>>> to a steady proliferation of extra bits as I realized that the time axis doesn't always
>>> start at 0, and later (with multi state) that y does not always start at 1 (though the
>>> states sum to 1), and later the the error doesn't always start at 0, and another
>>> realization with cumulative hazard, and ...
>>> The new survfit method for multi-state coxph models was going to add yet another special
>>> case.  Basically every component is turning into a duplicate of "row 1" vs "all the
>>> others".  (And inconsistently named.)
>>>
>>> Three possible solutions
>>> 1. Current working draft of survival_3.0.3:  Add a 'version' element to the survfit object
>>> and a 'survfit2.3' function that converts old to new.  All my downstream functions (print,
>>> plot,...) start with an "if (old) update to new" line.  This has allowed me to stage
>>> updates to the functions that create survfit objects -- I expect it to happen slowly.
>>> There will also be a survfit3.2 function to go backwards. Both the forward and backwards
>>> functions leave objects alone if they are currently in the desired format.
>>>
>>> 2. Make a new class "survfit3" and the necessary 'as' functions. The package would contain
>>> plot.survfit and plot.survfit3 methods, the former a two line "convert and call the
>>> second" function.
>>>
>>> 3. Something I haven't thought of.
>> A more "clean break" solution would be to start a whole new package
>> (call it survival2) that would make these changes, and deprecate the
>> current survival. You could add warnings about deprecation and urging
>> users to switch in existing survival functions. You could continue
>> bugfixes for survival but only add new features to survival2. The new
>> survival2 and the current survival could live side by side on CRAN for
>> quite some time, giving maintainers of dependent packages (and just
>> plain users) enough time to switch. This could allow you to
>> change/clean up other parts of the package that you could perhaps also
>> use a rethink/rewrite, without too much concern for backward
>> compatibility.
>>
>> Peter
>
> Hi,
>
> I would be cautious in going in that direction, bearing in mind that survival is a Recommended package, therefore included in the default R distribution from the R Foundation and other parties. To have two versions can/will result in substantial confusion, and I would argue against that approach.
>
> There is language in the CRAN submission policy that covers API changes, which strictly speaking, may or may not be the case here, depending upon which direction Terry elects to go:
>
> "If an update will change the package?s API and hence affect packages depending on it, it is expected that you will contact the maintainers of affected packages and suggest changes, and give them time (at least 2 weeks, ideally more) to prepare updates before submitting your updated package. Do mention in the submission email which packages are affected and that their maintainers have been informed. In order to derive the reverse dependencies of a package including the addresses of maintainers who have to be notified upon changes, the function reverse_dependencies_with_maintainers is available from the developer website."
>
>
> Given the potential extent and impact of the changes being considered, it would seem reasonable to:
>
> 1. Post a note to R-Devel (possibly R-Help to cover a larger useR base) regarding whatever changes are finalized and formally announce them. The changes are likely to affect end useRs as well as package maintainers.
>
> 2. Send communications directly via e-mail to the relevant package maintainers that have dependencies on survival.
>
> 3. Consider a longer deprecation time frame for relevant functions, to raise awareness and allow for changes to be made by package maintainers and useRs as may be apropos. Perhaps post reminders to R-Help at relevant time points in advance as you approach the formal deprecation and release of the updated package.
>
>
> Terry, if you have not used it yet and/or are not aware of it, take a look at ?Deprecated in base:
>
>    https://stat.ethz.ch/R-manual/R-devel/library/base/html/Deprecated.html
>
> which is helpful in setting up a deprecation process. If you Google "deprecating functions in R", there are numerous examples/flows of use and the associated processes, since the help page does not contain any examples at present.
>
> Regards,
>
> Marc Schwartz
>

Thanks for the comments thus far.
I think that a new package is out of the question, survival is just too deeply embedded.

Note that my standard policy is to run R CMD check on ALL of the packages in CRAN that 
depend, import, or suggest survival, before any update to CRAN.? Well, almost all: I skip 
the bioconductor ones, and there are a handful that want a GIS or some other addition not 
on my test box.? It usually takes a week or more to chase down everything.? Then the CRAN 
folks do the same, and often find one or two that I missed.? I plan to make the github 
version available well before pushing to CRAN.? Any change to the package will be painful 
to me as well.

Terry T.


From hugh@p@r@on@ge @end|ng |rom gm@||@com  Sun Jun  2 04:19:43 2019
From: hugh@p@r@on@ge @end|ng |rom gm@||@com (Hugh Parsonage)
Date: Sun, 2 Jun 2019 12:19:43 +1000
Subject: [Rd] [EXTERNAL] Re: survival changes
In-Reply-To: <9ecfbe$bq4f1m@ironport10.mayo.edu>
References: <9ecfbe$bq2hcm@ironport10.mayo.edu>
 <CA+hbrhWoxyBwMUac9cvWr0gfeQODUoVyjH-PmsXPifPDSfWXqA@mail.gmail.com>
 <2627EEE9-FBC7-48E7-9F31-4124CAF353CB@me.com>
 <9ecfbe$bq4f1m@ironport10.mayo.edu>
Message-ID: <CAJmOi+MRrmWXEqmM8S5M+eAt2tspTCdvfiYxfiXzQrNQp2Rxkw@mail.gmail.com>

Would this not be the case *for* a new package?

FWIW I would much prefer packages maintainers who make significant changes
also change the name of the package (e.g. to survival2). That way
disturbance is minimized and the package?s developers can add features and
refactor their code much faster.

On Sun, 2 Jun 2019 at 10:03 am, Therneau, Terry M., Ph.D. via R-devel <
r-devel at r-project.org> wrote:

>
>
> On 6/1/19 1:32 PM, Marc Schwartz wrote:
> >
> >> On Jun 1, 2019, at 12:59 PM, Peter Langfelder <
> peter.langfelder at gmail.com> wrote:
> >>
> >> On Sat, Jun 1, 2019 at 3:22 AM Therneau, Terry M., Ph.D. via R-devel
> >> <r-devel at r-project.org> wrote:
> >>> In the next version of the survival package I intend to make a
> non-upwardly compatable
> >>> change to the survfit object.  With over 600 dependent packages this
> is not something to
> >>> take lightly, and I am currently undecided about the best way to go
> about it.  I'm looking
> >>> for advice.
> >>>
> >>> The change: 20+ years ago I had decided not to include the initial
> x=0,y=1 data point in
> >>> the survfit object itself.  It was not formally an estimand and the
> plot/points/lines etc
> >>> routines could add this on themselves.  That turns out to have been a
> mistake, and has led
> >>> to a steady proliferation of extra bits as I realized that the time
> axis doesn't always
> >>> start at 0, and later (with multi state) that y does not always start
> at 1 (though the
> >>> states sum to 1), and later the the error doesn't always start at 0,
> and another
> >>> realization with cumulative hazard, and ...
> >>> The new survfit method for multi-state coxph models was going to add
> yet another special
> >>> case.  Basically every component is turning into a duplicate of "row
> 1" vs "all the
> >>> others".  (And inconsistently named.)
> >>>
> >>> Three possible solutions
> >>> 1. Current working draft of survival_3.0.3:  Add a 'version' element
> to the survfit object
> >>> and a 'survfit2.3' function that converts old to new.  All my
> downstream functions (print,
> >>> plot,...) start with an "if (old) update to new" line.  This has
> allowed me to stage
> >>> updates to the functions that create survfit objects -- I expect it to
> happen slowly.
> >>> There will also be a survfit3.2 function to go backwards. Both the
> forward and backwards
> >>> functions leave objects alone if they are currently in the desired
> format.
> >>>
> >>> 2. Make a new class "survfit3" and the necessary 'as' functions. The
> package would contain
> >>> plot.survfit and plot.survfit3 methods, the former a two line "convert
> and call the
> >>> second" function.
> >>>
> >>> 3. Something I haven't thought of.
> >> A more "clean break" solution would be to start a whole new package
> >> (call it survival2) that would make these changes, and deprecate the
> >> current survival. You could add warnings about deprecation and urging
> >> users to switch in existing survival functions. You could continue
> >> bugfixes for survival but only add new features to survival2. The new
> >> survival2 and the current survival could live side by side on CRAN for
> >> quite some time, giving maintainers of dependent packages (and just
> >> plain users) enough time to switch. This could allow you to
> >> change/clean up other parts of the package that you could perhaps also
> >> use a rethink/rewrite, without too much concern for backward
> >> compatibility.
> >>
> >> Peter
> >
> > Hi,
> >
> > I would be cautious in going in that direction, bearing in mind that
> survival is a Recommended package, therefore included in the default R
> distribution from the R Foundation and other parties. To have two versions
> can/will result in substantial confusion, and I would argue against that
> approach.
> >
> > There is language in the CRAN submission policy that covers API changes,
> which strictly speaking, may or may not be the case here, depending upon
> which direction Terry elects to go:
> >
> > "If an update will change the package?s API and hence affect packages
> depending on it, it is expected that you will contact the maintainers of
> affected packages and suggest changes, and give them time (at least 2
> weeks, ideally more) to prepare updates before submitting your updated
> package. Do mention in the submission email which packages are affected and
> that their maintainers have been informed. In order to derive the reverse
> dependencies of a package including the addresses of maintainers who have
> to be notified upon changes, the function
> reverse_dependencies_with_maintainers is available from the developer
> website."
> >
> >
> > Given the potential extent and impact of the changes being considered,
> it would seem reasonable to:
> >
> > 1. Post a note to R-Devel (possibly R-Help to cover a larger useR base)
> regarding whatever changes are finalized and formally announce them. The
> changes are likely to affect end useRs as well as package maintainers.
> >
> > 2. Send communications directly via e-mail to the relevant package
> maintainers that have dependencies on survival.
> >
> > 3. Consider a longer deprecation time frame for relevant functions, to
> raise awareness and allow for changes to be made by package maintainers and
> useRs as may be apropos. Perhaps post reminders to R-Help at relevant time
> points in advance as you approach the formal deprecation and release of the
> updated package.
> >
> >
> > Terry, if you have not used it yet and/or are not aware of it, take a
> look at ?Deprecated in base:
> >
> >
> https://stat.ethz.ch/R-manual/R-devel/library/base/html/Deprecated.html
> >
> > which is helpful in setting up a deprecation process. If you Google
> "deprecating functions in R", there are numerous examples/flows of use and
> the associated processes, since the help page does not contain any examples
> at present.
> >
> > Regards,
> >
> > Marc Schwartz
> >
>
> Thanks for the comments thus far.
> I think that a new package is out of the question, survival is just too
> deeply embedded.
>
> Note that my standard policy is to run R CMD check on ALL of the packages
> in CRAN that
> depend, import, or suggest survival, before any update to CRAN.  Well,
> almost all: I skip
> the bioconductor ones, and there are a handful that want a GIS or some
> other addition not
> on my test box.  It usually takes a week or more to chase down
> everything.  Then the CRAN
> folks do the same, and often find one or two that I missed.  I plan to
> make the github
> version available well before pushing to CRAN.  Any change to the package
> will be painful
> to me as well.
>
> Terry T.
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>

	[[alternative HTML version deleted]]


From @purd|e@@ @end|ng |rom gm@||@com  Sun Jun  2 05:06:12 2019
From: @purd|e@@ @end|ng |rom gm@||@com (Abby Spurdle)
Date: Sun, 2 Jun 2019 15:06:12 +1200
Subject: [Rd] survival changes
In-Reply-To: <9ecfbe$bq2hcm@ironport10.mayo.edu>
References: <9ecfbe$bq2hcm@ironport10.mayo.edu>
Message-ID: <CAB8pepzpEnd317TN7DgsHRoo51ZRMLNamYNbCMTFYBTGFPYEdg@mail.gmail.com>

> In the next version of the survival package I intend to make a
non-upwardly compatable
> change to the survfit object.  With over 600 dependent packages this is
not something to
> take lightly, and I am currently undecided about the best way to go about
it.  I'm looking
> for advice.
>
> The change: 20+ years ago I had decided not to include the initial
x=0,y=1 data point in
> the survfit object itself.

New Package -> Bad idea.
Copying Python -> The worst idea...
Version element -> Not sure I understand how that works, but probably a bad
idea.

If all you want to do, is add an initial data point, that shouldn't be an
issue.
However, I'm assuming that you want to make other more significant changes
to your object.
So, at face value, a new object class would be the best option, so number
(2) from your list of options.

Note there is another possibility.
With a little bit of tricky-ness, you can check if your constructor is
called by a function inside a package.
In which case, you can check the publication date of that package (if
published after your package), and then then respond accordingly.
Then you can ask the maintainers of the other packages to update their
packages, but at their own time.


Abs

	[[alternative HTML version deleted]]


From jo@h@m@u|r|ch @end|ng |rom gm@||@com  Sun Jun  2 14:00:09 2019
From: jo@h@m@u|r|ch @end|ng |rom gm@||@com (Joshua Ulrich)
Date: Sun, 2 Jun 2019 07:00:09 -0500
Subject: [Rd] rbind has confusing result for custom sub-class (possible
 bug?)
In-Reply-To: <CAPPM_gRGb3Jgwvhgw97ptJ5MVmJuYzH5SjT8s78pHwJJtBcpyA@mail.gmail.com>
References: <CAPRVBcz2zPtcFbdJwtrmvHBOj1Z9u-oCBbH27a96=BAESaDq1Q@mail.gmail.com>
 <CAPRVBcwBCxHBMAPy=i0_8gtjsFbYrCqkXxqeO2xDGwH3-WChiQ@mail.gmail.com>
 <CAPPM_gRYoZFvLZ_T8M2rNY7uhZ4kcPzOFF6ot+nRUJW4HCBPkg@mail.gmail.com>
 <CAPPM_gTCkdRYMJV16KC-wAKt7uONbt1cYyJfxJ_n8AkQ25oxFw@mail.gmail.com>
 <CAPRVBczGX=xy+LmMoRaZzoEtqQ9Rx__pVbzNpZMPq=Sn9+Cf4w@mail.gmail.com>
 <CAPPM_gRGb3Jgwvhgw97ptJ5MVmJuYzH5SjT8s78pHwJJtBcpyA@mail.gmail.com>
Message-ID: <CAPPM_gR1PCGw+FSSfHoFn-fD7S2V9nxOLeijRrY5WRn4-18KNQ@mail.gmail.com>

I thought it would be good to summarize my thoughts, since I made a
few hypotheses that turned out to be false.

This isn't a bug in base R, in either rbind() or `[<-.Date`.

To summarize the root cause:
base::rbind.data.frame() calls `[<-` for each column of the
data.frame, and there is no `[<-.IDate` method to ensure the
replacement value is converted to integer.  And, in fact, `[<-.Date`
calls as.Date() and data.table::as.Date.IDate() calls as.numeric() on
the IDate object.  So the problem exists, and can be fixed, in
data.table.

Best,
Josh

On Mon, May 27, 2019 at 9:34 AM Joshua Ulrich <josh.m.ulrich at gmail.com> wrote:
>
> Follow-up (inline) on my comment about a potential issue in `[<-.Date`.
>
> On Mon, May 27, 2019 at 9:31 AM Michael Chirico
> <michaelchirico4 at gmail.com> wrote:
> >
> > Yes, thanks for following up on thread here. And thanks again for clearing things up, your email was a finger snap of clarity on the whole issue.
> >
> > I'll add that actually it was data.table's code at fault on the storage conversion -- note that if you use an arbitrary sub-class 'foo' with no methods defined, it'll stay integer.
> >
> > That's because [<- calls as.Date and then as.Date.IDate, and that method (ours) has as.numeric(); earlier I had recognized that if we commented that line, the issue was "fixed" but I still wasn't understanding the root cause.
> >
> > My last curiosity on this issue will be in my follow-up thread.
> >
> > Mike C
> >
> > On Mon, May 27, 2019, 10:25 PM Joshua Ulrich <josh.m.ulrich at gmail.com> wrote:
> >>
> >> On Sun, May 26, 2019 at 6:47 AM Joshua Ulrich <josh.m.ulrich at gmail.com> wrote:
> >> >
> >> > On Sun, May 26, 2019 at 4:06 AM Michael Chirico
> >> > <michaelchirico4 at gmail.com> wrote:
> >> > >
> >> > > Have finally managed to come up with a fix after checking out sys.calls()
> >> > > from within the as.Date.IDate debugger, which shows something like:
> >> > >
> >> > > [[1]] rbind(DF, DF)
> >> > > [[2]] rbind(deparse.level, ...)
> >> > > [[3]] `[<-`(`*tmp*`, ri, value = 18042L)
> >> > > [[4]] `[<-.Date`(`*tmp*`, ri, value = 18042L)
> >> > > [[5]] as.Date(value)
> >> > > [[6]] as.Date.IDate(value)
> >> > >
> >> > > I'm not sure why [<- is called, I guess the implementation is to assign to
> >> > > the output block by block? Anyway, we didn't have a [<- method. And
> >> > > [<-.Date looks like:
> >> > >
> >> > > value <- unclass(as.Date(value)) # <- converts to double
> >> > > .Date(NextMethod(.Generic), oldClass(x)) # <- restores 'IDate' class
> >> > >
> >> > > So we can fix our bug by defining a [<- class; the question that I still
> >> > > don't see answered in documentation or source code is, why/where is [<-
> >> > > called, exactly?
> >> > >
> >> > Your rbind(DF, DF) call dispatches to base::rbind.data.frame().  The
> >> > `[<-` call is this line:
> >> > value[[jj]][ri] <- if (is.factor(xij)) as.vector(xij) else xij
> >> >
> >> > That's where the storage.mode changes from integer to double.
> >> >
> >> > debug: value[[jj]][ri] <- if (is.factor(xij)) as.vector(xij) else xij
> >> > Browse[2]>
> >> > debug: xij
> >> > Browse[2]> storage.mode(xij)
> >> > [1] "integer"
> >> > Browse[2]> value[[jj]][ri]
> >> > [1] "2019-05-26"
> >> > Browse[2]> storage.mode(value[[jj]][ri])
> >> > [1] "integer"
> >> > Browse[2]>
> >> > debug: if (!is.null(nm <- names(xij))) names(value[[jj]])[ri] <- nm
> >> > Browse[2]> storage.mode(value[[jj]][ri])
> >> > [1] "double"
> >> >
> >> To be clear, I don't think this is a bug in rbind() or
> >> rbind.data.frame().  The confusion is that rbind.data.frame() calls
> >> `[<-` for each column of the data.frame, and there is no `[<-.IDate`
> >> method.  So the parent class method is dispatched, which converts the
> >> storage mode to double.
> >>
> >> Someone may argue that this is an issue with `[<-.Date`, and that it
> >> shouldn't convert the storage.mode from integer to double.
>
> I don't think this is an issue.  The storage mode isn't converted if
> the replacement is the same storage mode.  For example:
>
> R> x <- .Date(1:5)
> R> storage.mode(x)
> [1] "integer"
> R> x[1L] <- .Date(0L)
> R> storage.mode(x)
> [1] "integer"
> R> x[1L] <- .Date(0)
> R> storage.mode(x)
> [1] "double"
>
> >> >
> >> > > Mike C
> >> > >
> >> > > On Sun, May 26, 2019 at 1:16 PM Michael Chirico <michaelchirico4 at gmail.com>
> >> > > wrote:
> >> > >
> >> > > > Debugging this issue:
> >> > > >
> >> > > > https://github.com/Rdatatable/data.table/issues/2008
> >> > > >
> >> > > > We have custom class 'IDate' which inherits from 'Date' (it just forces
> >> > > > integer storage for efficiency, hence, I).
> >> > > >
> >> > > > The concatenation done by rbind, however, breaks this and returns a double:
> >> > > >
> >> > > > library(data.table)
> >> > > > DF = data.frame(date = as.IDate(Sys.Date()))
> >> > > > storage.mode(rbind(DF, DF)$date)
> >> > > > # [1] "double"
> >> > > >
> >> > > > This is specific to base::rbind (data.table's rbind returns an integer as
> >> > > > expected); in ?rbind we see:
> >> > > >
> >> > > > The method dispatching is not done via UseMethod(), but by C-internal
> >> > > > dispatching. Therefore there is no need for, e.g., rbind.default.
> >> > > > The dispatch algorithm is described in the source file
> >> > > > (?.../src/main/bind.c?) as
> >> > > > 1. For each argument we get the list of possible class memberships from
> >> > > > the class attribute.
> >> > > > 2. *We inspect each class in turn to see if there is an applicable
> >> > > > method.*
> >> > > > 3. If we find an applicable method we make sure that it is identical to
> >> > > > any method determined for prior arguments. If it is identical, we proceed,
> >> > > > otherwise we immediately drop through to the default code.
> >> > > >
> >> > > > It's not clear what #2 means -- an applicable method *for what*? Glancing
> >> > > > at the source code would suggest it's looking for rbind.IDate:
> >> > > >
> >> > > > https://github.com/wch/r-source/blob/trunk/src/main/bind.c#L1051-L1063
> >> > > >
> >> > > > const char *generic = ((PRIMVAL(op) == 1) ? "cbind" : "rbind"); // should
> >> > > > be rbind here
> >> > > > const char *s = translateChar(STRING_ELT(classlist, i)); // iterating over
> >> > > > the classes, should get to IDate first
> >> > > > sprintf(buf, "%s.%s", generic, s); // should be rbind.IDate
> >> > > >
> >> > > > but adding this method (or even exporting it) is no help [ simply defining
> >> > > > rbind.IDate = function(...) as.IDate(NextMethod()) ]
> >> > > >
> >> > > > Lastly, it appears that as.Date.IDate is called, which is causing the type
> >> > > > conversion:
> >> > > >
> >> > > > debug(data.table:::as.Date.IDate)
> >> > > > rbind(DF, DF) # launches debugger
> >> > > > x
> >> > > > # [1] "2019-05-26" <-- singleton, so apparently applied to DF$date, not
> >> > > > c(DF$date, DF$date)
> >> > > > undebug(data.table:::as.Date.IDate)
> >> > > >
> >> > > > I can't really wrap my head around why as.Date is being called here, and
> >> > > > even allowing that, why the end result is still the original class [
> >> > > > class(rbind(DF, DF)$date) == c('IDate', 'Date') ]
> >> > > >
> >> > > > So, I'm beginning to think this might be a bug. Am I missing something?
> >> > > >
> >> > >
> >> > >         [[alternative HTML version deleted]]
> >> > >
> >> > > ______________________________________________
> >> > > R-devel at r-project.org mailing list
> >> > > https://stat.ethz.ch/mailman/listinfo/r-devel
> >> >
> >>
>



-- 
Joshua Ulrich  |  about.me/joshuaulrich
FOSS Trading  |  www.fosstrading.com


From pg||bert902 @end|ng |rom gm@||@com  Sun Jun  2 16:10:24 2019
From: pg||bert902 @end|ng |rom gm@||@com (Paul Gilbert)
Date: Sun, 2 Jun 2019 10:10:24 -0400
Subject: [Rd] survival changes
In-Reply-To: <9ecfbe$bq4f1m@ironport10.mayo.edu>
References: <9ecfbe$bq2hcm@ironport10.mayo.edu>
 <CA+hbrhWoxyBwMUac9cvWr0gfeQODUoVyjH-PmsXPifPDSfWXqA@mail.gmail.com>
 <2627EEE9-FBC7-48E7-9F31-4124CAF353CB@me.com>
 <9ecfbe$bq4f1m@ironport10.mayo.edu>
Message-ID: <09fccbb3-7c29-077f-7679-1551d6409fb9@gmail.com>

Terry

Let me call this things to think about, rather than advice. I went 
through a similar process twice, once about 30 years ago and once about 
20 years ago. I had fewer dependent packages of course, but still enough 
to cause headaches. I don't recommend doing it often.

- I think you need to consider where you would like to end up before 
deciding how to get there. If you end up having to maintain a lot of 
legacy stuff I don't think you will be very happy. So then the problem 
becomes how to help people get off the part you want to abandon, rather 
then how to help them stay on it.

- I know you are very experienced, but I will be really impressed if you 
get the new approach perfect on the first shot. That argues for having a 
new package with hardly any users so you can fiddle with the API more 
easily, and not deprecating the old one until you are really happy with 
the new one.

- There may be a part which is common to both old and new and/or there 
may be a part which is what most dependent packages use. If you can 
separate that out as something like survivalBase it would make your life 
easier. That will be especial true if that part is more stable, so don't 
put in anything you are experimenting with.

Good luck,
Paul Gilbert

On 6/1/19 8:02 PM, Therneau, Terry M., Ph.D. via R-devel wrote:
> 
> 
> On 6/1/19 1:32 PM, Marc Schwartz wrote:
>>
>>> On Jun 1, 2019, at 12:59 PM, Peter Langfelder 
>>> <peter.langfelder at gmail.com> wrote:
>>>
>>> On Sat, Jun 1, 2019 at 3:22 AM Therneau, Terry M., Ph.D. via R-devel
>>> <r-devel at r-project.org> wrote:
>>>> In the next version of the survival package I intend to make a 
>>>> non-upwardly compatable
>>>> change to the survfit object.? With over 600 dependent packages this 
>>>> is not something to
>>>> take lightly, and I am currently undecided about the best way to go 
>>>> about it.? I'm looking
>>>> for advice.
>>>>
>>>> The change: 20+ years ago I had decided not to include the initial 
>>>> x=0,y=1 data point in
>>>> the survfit object itself.? It was not formally an estimand and the 
>>>> plot/points/lines etc
>>>> routines could add this on themselves.? That turns out to have been 
>>>> a mistake, and has led
>>>> to a steady proliferation of extra bits as I realized that the time 
>>>> axis doesn't always
>>>> start at 0, and later (with multi state) that y does not always 
>>>> start at 1 (though the
>>>> states sum to 1), and later the the error doesn't always start at 0, 
>>>> and another
>>>> realization with cumulative hazard, and ...
>>>> The new survfit method for multi-state coxph models was going to add 
>>>> yet another special
>>>> case.? Basically every component is turning into a duplicate of "row 
>>>> 1" vs "all the
>>>> others".? (And inconsistently named.)
>>>>
>>>> Three possible solutions
>>>> 1. Current working draft of survival_3.0.3:? Add a 'version' element 
>>>> to the survfit object
>>>> and a 'survfit2.3' function that converts old to new.? All my 
>>>> downstream functions (print,
>>>> plot,...) start with an "if (old) update to new" line.? This has 
>>>> allowed me to stage
>>>> updates to the functions that create survfit objects -- I expect it 
>>>> to happen slowly.
>>>> There will also be a survfit3.2 function to go backwards. Both the 
>>>> forward and backwards
>>>> functions leave objects alone if they are currently in the desired 
>>>> format.
>>>>
>>>> 2. Make a new class "survfit3" and the necessary 'as' functions. The 
>>>> package would contain
>>>> plot.survfit and plot.survfit3 methods, the former a two line 
>>>> "convert and call the
>>>> second" function.
>>>>
>>>> 3. Something I haven't thought of.
>>> A more "clean break" solution would be to start a whole new package
>>> (call it survival2) that would make these changes, and deprecate the
>>> current survival. You could add warnings about deprecation and urging
>>> users to switch in existing survival functions. You could continue
>>> bugfixes for survival but only add new features to survival2. The new
>>> survival2 and the current survival could live side by side on CRAN for
>>> quite some time, giving maintainers of dependent packages (and just
>>> plain users) enough time to switch. This could allow you to
>>> change/clean up other parts of the package that you could perhaps also
>>> use a rethink/rewrite, without too much concern for backward
>>> compatibility.
>>>
>>> Peter
>>
>> Hi,
>>
>> I would be cautious in going in that direction, bearing in mind that 
>> survival is a Recommended package, therefore included in the default R 
>> distribution from the R Foundation and other parties. To have two 
>> versions can/will result in substantial confusion, and I would argue 
>> against that approach.
>>
>> There is language in the CRAN submission policy that covers API 
>> changes, which strictly speaking, may or may not be the case here, 
>> depending upon which direction Terry elects to go:
>>
>> "If an update will change the package?s API and hence affect packages 
>> depending on it, it is expected that you will contact the maintainers 
>> of affected packages and suggest changes, and give them time (at least 
>> 2 weeks, ideally more) to prepare updates before submitting your 
>> updated package. Do mention in the submission email which packages are 
>> affected and that their maintainers have been informed. In order to 
>> derive the reverse dependencies of a package including the addresses 
>> of maintainers who have to be notified upon changes, the function 
>> reverse_dependencies_with_maintainers is available from the developer 
>> website."
>>
>>
>> Given the potential extent and impact of the changes being considered, 
>> it would seem reasonable to:
>>
>> 1. Post a note to R-Devel (possibly R-Help to cover a larger useR 
>> base) regarding whatever changes are finalized and formally announce 
>> them. The changes are likely to affect end useRs as well as package 
>> maintainers.
>>
>> 2. Send communications directly via e-mail to the relevant package 
>> maintainers that have dependencies on survival.
>>
>> 3. Consider a longer deprecation time frame for relevant functions, to 
>> raise awareness and allow for changes to be made by package 
>> maintainers and useRs as may be apropos. Perhaps post reminders to 
>> R-Help at relevant time points in advance as you approach the formal 
>> deprecation and release of the updated package.
>>
>>
>> Terry, if you have not used it yet and/or are not aware of it, take a 
>> look at ?Deprecated in base:
>>
>>    
>> https://stat.ethz.ch/R-manual/R-devel/library/base/html/Deprecated.html
>>
>> which is helpful in setting up a deprecation process. If you Google 
>> "deprecating functions in R", there are numerous examples/flows of use 
>> and the associated processes, since the help page does not contain any 
>> examples at present.
>>
>> Regards,
>>
>> Marc Schwartz
>>
> 
> Thanks for the comments thus far.
> I think that a new package is out of the question, survival is just too 
> deeply embedded.
> 
> Note that my standard policy is to run R CMD check on ALL of the 
> packages in CRAN that depend, import, or suggest survival, before any 
> update to CRAN.? Well, almost all: I skip the bioconductor ones, and 
> there are a handful that want a GIS or some other addition not on my 
> test box.? It usually takes a week or more to chase down everything.  
> Then the CRAN folks do the same, and often find one or two that I 
> missed.? I plan to make the github version available well before pushing 
> to CRAN.? Any change to the package will be painful to me as well.
> 
> Terry T.
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From rkoenker @end|ng |rom ||||no|@@edu  Sun Jun  2 17:28:04 2019
From: rkoenker @end|ng |rom ||||no|@@edu (Koenker, Roger W)
Date: Sun, 2 Jun 2019 15:28:04 +0000
Subject: [Rd] rgl install for R 3.7
Message-ID: <3730C08F-191C-4879-994F-145C6D8B6C69@illinois.edu>

I?ve installed R 3.7.0 on a new laptop running macos 10.14.5 and have managed to get most of my usual packages
to compile from source with a ~/.R/Makevars file that looks like this:

CC=/usr/local/clang8/bin/clang
CXX=/usr/local/clang8/bin/clang++ 
LDFLAGS=-L/usr/local/clang8/lib 
CPPFLAGS=-I/usr/local/clang8/include -I/opt/X11/include/freetype2
FC=/usr/local/gfortran/bin/gfortran
FLIBS=-L/usr/local/gfortran/lib -lgfortran

As usual, the last challenge seems to be to get rgl installed.  Compilation _seems_ to go 
smoothly, but I now see:


Error in dyn.load(file, DLLpath = DLLpath, ...) :
  unable to load shared object '/Library/Frameworks/R.framework/Versions/3.7/Resources/library/00LOCK-rgl/00new/rgl/libs/rgl.so':
  dlopen(/Library/Frameworks/R.framework/Versions/3.7/Resources/library/00LOCK-rgl/00new/rgl/libs/rgl.so, 6): Symbol not found: _FT_Attach_File
  Referenced from: /Library/Frameworks/R.framework/Versions/3.7/Resources/library/00LOCK-rgl/00new/rgl/libs/rgl.so


There is a comment somewhat after this about rgl requiring XQuartz, but I have  XQuartz 2.7.11 so I don?t
think that this is the problem.  Apparently, there is still a freetype problem, however I?m out of my depth at this
point.   Any suggestions would be most welcome.

Roger Koenker
Honorary Professor
Department of Economics, UCL
London  WC1H 0AX.



From murdoch@dunc@n @end|ng |rom gm@||@com  Sun Jun  2 18:27:31 2019
From: murdoch@dunc@n @end|ng |rom gm@||@com (Duncan Murdoch)
Date: Sun, 2 Jun 2019 12:27:31 -0400
Subject: [Rd] rgl install for R 3.7
In-Reply-To: <3730C08F-191C-4879-994F-145C6D8B6C69@illinois.edu>
References: <3730C08F-191C-4879-994F-145C6D8B6C69@illinois.edu>
Message-ID: <a4cb75e6-f75e-68ee-cc12-7ba9445009d5@gmail.com>

On 02/06/2019 11:28 a.m., Koenker, Roger W wrote:
> I?ve installed R 3.7.0 on a new laptop running macos 10.14.5 and have managed to get most of my usual packages
> to compile from source with a ~/.R/Makevars file that looks like this:
> 
> CC=/usr/local/clang8/bin/clang
> CXX=/usr/local/clang8/bin/clang++
> LDFLAGS=-L/usr/local/clang8/lib
> CPPFLAGS=-I/usr/local/clang8/include -I/opt/X11/include/freetype2
> FC=/usr/local/gfortran/bin/gfortran
> FLIBS=-L/usr/local/gfortran/lib -lgfortran
> 
> As usual, the last challenge seems to be to get rgl installed.  Compilation _seems_ to go
> smoothly, but I now see:
> 
> 
> Error in dyn.load(file, DLLpath = DLLpath, ...) :
>    unable to load shared object '/Library/Frameworks/R.framework/Versions/3.7/Resources/library/00LOCK-rgl/00new/rgl/libs/rgl.so':
>    dlopen(/Library/Frameworks/R.framework/Versions/3.7/Resources/library/00LOCK-rgl/00new/rgl/libs/rgl.so, 6): Symbol not found: _FT_Attach_File
>    Referenced from: /Library/Frameworks/R.framework/Versions/3.7/Resources/library/00LOCK-rgl/00new/rgl/libs/rgl.so
> 
> 
> There is a comment somewhat after this about rgl requiring XQuartz, but I have  XQuartz 2.7.11 so I don?t
> think that this is the problem.  Apparently, there is still a freetype problem, however I?m out of my depth at this
> point.   Any suggestions would be most welcome.
> 

I'm not up to date on MacOS (I have 10.13.6) or clang.  I'm compiling 
with something that calls itself gcc, but gcc --version gives

Apple LLVM version 9.0.0 (clang-900.0.39.2)

So this isn't very relevant, but for what it's worth, rgl compiles and 
loads fine in the current R-devel (r76642).

Duncan Murdoch


From r|p|ey @end|ng |rom @t@t@@ox@@c@uk  Sun Jun  2 20:42:38 2019
From: r|p|ey @end|ng |rom @t@t@@ox@@c@uk (Prof Brian Ripley)
Date: Sun, 2 Jun 2019 19:42:38 +0100
Subject: [Rd] rgl install for R 3.7
In-Reply-To: <3730C08F-191C-4879-994F-145C6D8B6C69@illinois.edu>
References: <3730C08F-191C-4879-994F-145C6D8B6C69@illinois.edu>
Message-ID: <894218c1-d1b0-c0af-5e0a-2f0a19214011@stats.ox.ac.uk>

On 02/06/2019 16:28, Koenker, Roger W wrote:
> I?ve installed R 3.7.0 on a new laptop running macos 10.14.5 and have managed to get most of my usual packages

I presume 'R 3.7.0' is R-devel: it is not released and may never be 
released under that version.

> to compile from source with a ~/.R/Makevars file that looks like this:
> 
> CC=/usr/local/clang8/bin/clang
> CXX=/usr/local/clang8/bin/clang++
> LDFLAGS=-L/usr/local/clang8/lib
> CPPFLAGS=-I/usr/local/clang8/include -I/opt/X11/include/freetype2

I suspect you don't want the second: if you have pkg-config it should 
find include paths for you.

> FC=/usr/local/gfortran/bin/gfortran
> FLIBS=-L/usr/local/gfortran/lib -lgfortran
> 
> As usual, the last challenge seems to be to get rgl installed.  Compilation _seems_ to go
> smoothly, but I now see:
> 
> 
> Error in dyn.load(file, DLLpath = DLLpath, ...) :
>    unable to load shared object '/Library/Frameworks/R.framework/Versions/3.7/Resources/library/00LOCK-rgl/00new/rgl/libs/rgl.so':
>    dlopen(/Library/Frameworks/R.framework/Versions/3.7/Resources/library/00LOCK-rgl/00new/rgl/libs/rgl.so, 6): Symbol not found: _FT_Attach_File
>    Referenced from: /Library/Frameworks/R.framework/Versions/3.7/Resources/library/00LOCK-rgl/00new/rgl/libs/rgl.so

Perhaps you should show the linking line.  A similar setup works for me:

configure: Darwin, so ensuring /opt/X11/bin is at the head of the PATH...
checking for pkg-config... yes
...

Do you have pkg-config (it is not a standard part of macOS, but is 
available on SU's site -- see the R-admin manual)?  You may need to set 
its path: for rgl I used

PKG_CONFIG_PATH=/usr/local/lib/pkgconfig:/usr/lib/pkgconfig

(which should be the default) but for a few packages (Cairo gdtools rsvg)

PKG_CONFIG_PATH=/opt/X11/lib/pkgconfig:/usr/local/lib/pkgconfig:/usr/lib/pkgconfig

/usr/local/clang8/bin/clang++ -std=gnu++11 -dynamiclib 
-Wl,-headerpad_max_install_names -undefined dynamic_lookup 
-single_module -multiply_defined suppress -L/Users/ripley/R/R-devel/lib 
-L/usr/local/clang8/lib -L/usr/local/lib -o rgl.so ABCLineSet.o 
BBoxDeco.o Background.o ClipPlane.o Color.o Disposable.o Light.o 
LineSet.o LineStripSet.o Material.o NULLgui.o PlaneSet.o PointSet.o 
PrimitiveSet.o RenderContext.o Shape.o SphereMesh.o SphereSet.o 
SpriteSet.o String.o Surface.o TextSet.o Texture.o Viewpoint.o api.o 
assert.o callbacks.o device.o devicemanager.o fps.o ftgl.o geom.o 
gl2ps.o glErrors.o glgui.o gui.o init.o par3d.o pixmap.o platform.o 
pretty.o render.o rglmath.o rglview.o scene.o select.o subscene.o 
win32gui.o win32lib.o x11gui.o x11lib.o -lGLU -lGL -framework GLKit 
-framework OpenGL -dylib_file 
/System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libGL.dylib:/System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libGL.dylib 
-L/usr/local/lib -lpng16 -L/usr/X11/lib -lX11 -L/usr/local/lib 
-lfreetype -L/Users/ripley/R/R-devel/lib -lR -Wl,-framework 
-Wl,CoreFoundation

so that is statically linking libfreetype from /usr/local/lib and 
installed from 
https://mac.r-project.org/libs/freetype-2.5.5-darwin.13-x86_64.tar.gz . 
And that provides a freetype2.pc file, so

% pkg-config freetype2 --cflags
-I/usr/local/include/freetype2 -I/usr/local/include/libpng16
% pkg-config freetype2 --libs
-L/usr/local/lib -lfreetype



> There is a comment somewhat after this about rgl requiring XQuartz, but I have  XQuartz 2.7.11 so I don?t
> think that this is the problem.  Apparently, there is still a freetype problem, however I?m out of my depth at this
> point.   Any suggestions would be most welcome.
> 
> Roger Koenker
> Honorary Professor
> Department of Economics, UCL
> London  WC1H 0AX.


-- 
Brian D. Ripley,                  ripley at stats.ox.ac.uk
Emeritus Professor of Applied Statistics, University of Oxford


From m|ch@e|ch|r|co4 @end|ng |rom gm@||@com  Mon Jun  3 05:21:52 2019
From: m|ch@e|ch|r|co4 @end|ng |rom gm@||@com (Michael Chirico)
Date: Mon, 3 Jun 2019 11:21:52 +0800
Subject: [Rd] rbind has confusing result for custom sub-class (possible
 bug?)
In-Reply-To: <CAPPM_gR1PCGw+FSSfHoFn-fD7S2V9nxOLeijRrY5WRn4-18KNQ@mail.gmail.com>
References: <CAPRVBcz2zPtcFbdJwtrmvHBOj1Z9u-oCBbH27a96=BAESaDq1Q@mail.gmail.com>
 <CAPRVBcwBCxHBMAPy=i0_8gtjsFbYrCqkXxqeO2xDGwH3-WChiQ@mail.gmail.com>
 <CAPPM_gRYoZFvLZ_T8M2rNY7uhZ4kcPzOFF6ot+nRUJW4HCBPkg@mail.gmail.com>
 <CAPPM_gTCkdRYMJV16KC-wAKt7uONbt1cYyJfxJ_n8AkQ25oxFw@mail.gmail.com>
 <CAPRVBczGX=xy+LmMoRaZzoEtqQ9Rx__pVbzNpZMPq=Sn9+Cf4w@mail.gmail.com>
 <CAPPM_gRGb3Jgwvhgw97ptJ5MVmJuYzH5SjT8s78pHwJJtBcpyA@mail.gmail.com>
 <CAPPM_gR1PCGw+FSSfHoFn-fD7S2V9nxOLeijRrY5WRn4-18KNQ@mail.gmail.com>
Message-ID: <CAPRVBcwuX2L4qdnV5wQja128K8OjPTM8oSMcwQZKzN8WEAnaCQ@mail.gmail.com>

Thanks for following up! In fact that's exactly what was done here:

https://github.com/Rdatatable/data.table/pull/3602/files

On Sun, Jun 2, 2019 at 8:00 PM Joshua Ulrich <josh.m.ulrich at gmail.com>
wrote:

> I thought it would be good to summarize my thoughts, since I made a
> few hypotheses that turned out to be false.
>
> This isn't a bug in base R, in either rbind() or `[<-.Date`.
>
> To summarize the root cause:
> base::rbind.data.frame() calls `[<-` for each column of the
> data.frame, and there is no `[<-.IDate` method to ensure the
> replacement value is converted to integer.  And, in fact, `[<-.Date`
> calls as.Date() and data.table::as.Date.IDate() calls as.numeric() on
> the IDate object.  So the problem exists, and can be fixed, in
> data.table.
>
> Best,
> Josh
>
> On Mon, May 27, 2019 at 9:34 AM Joshua Ulrich <josh.m.ulrich at gmail.com>
> wrote:
> >
> > Follow-up (inline) on my comment about a potential issue in `[<-.Date`.
> >
> > On Mon, May 27, 2019 at 9:31 AM Michael Chirico
> > <michaelchirico4 at gmail.com> wrote:
> > >
> > > Yes, thanks for following up on thread here. And thanks again for
> clearing things up, your email was a finger snap of clarity on the whole
> issue.
> > >
> > > I'll add that actually it was data.table's code at fault on the
> storage conversion -- note that if you use an arbitrary sub-class 'foo'
> with no methods defined, it'll stay integer.
> > >
> > > That's because [<- calls as.Date and then as.Date.IDate, and that
> method (ours) has as.numeric(); earlier I had recognized that if we
> commented that line, the issue was "fixed" but I still wasn't understanding
> the root cause.
> > >
> > > My last curiosity on this issue will be in my follow-up thread.
> > >
> > > Mike C
> > >
> > > On Mon, May 27, 2019, 10:25 PM Joshua Ulrich <josh.m.ulrich at gmail.com>
> wrote:
> > >>
> > >> On Sun, May 26, 2019 at 6:47 AM Joshua Ulrich <
> josh.m.ulrich at gmail.com> wrote:
> > >> >
> > >> > On Sun, May 26, 2019 at 4:06 AM Michael Chirico
> > >> > <michaelchirico4 at gmail.com> wrote:
> > >> > >
> > >> > > Have finally managed to come up with a fix after checking out
> sys.calls()
> > >> > > from within the as.Date.IDate debugger, which shows something
> like:
> > >> > >
> > >> > > [[1]] rbind(DF, DF)
> > >> > > [[2]] rbind(deparse.level, ...)
> > >> > > [[3]] `[<-`(`*tmp*`, ri, value = 18042L)
> > >> > > [[4]] `[<-.Date`(`*tmp*`, ri, value = 18042L)
> > >> > > [[5]] as.Date(value)
> > >> > > [[6]] as.Date.IDate(value)
> > >> > >
> > >> > > I'm not sure why [<- is called, I guess the implementation is to
> assign to
> > >> > > the output block by block? Anyway, we didn't have a [<- method.
> And
> > >> > > [<-.Date looks like:
> > >> > >
> > >> > > value <- unclass(as.Date(value)) # <- converts to double
> > >> > > .Date(NextMethod(.Generic), oldClass(x)) # <- restores 'IDate'
> class
> > >> > >
> > >> > > So we can fix our bug by defining a [<- class; the question that
> I still
> > >> > > don't see answered in documentation or source code is, why/where
> is [<-
> > >> > > called, exactly?
> > >> > >
> > >> > Your rbind(DF, DF) call dispatches to base::rbind.data.frame().  The
> > >> > `[<-` call is this line:
> > >> > value[[jj]][ri] <- if (is.factor(xij)) as.vector(xij) else xij
> > >> >
> > >> > That's where the storage.mode changes from integer to double.
> > >> >
> > >> > debug: value[[jj]][ri] <- if (is.factor(xij)) as.vector(xij) else
> xij
> > >> > Browse[2]>
> > >> > debug: xij
> > >> > Browse[2]> storage.mode(xij)
> > >> > [1] "integer"
> > >> > Browse[2]> value[[jj]][ri]
> > >> > [1] "2019-05-26"
> > >> > Browse[2]> storage.mode(value[[jj]][ri])
> > >> > [1] "integer"
> > >> > Browse[2]>
> > >> > debug: if (!is.null(nm <- names(xij))) names(value[[jj]])[ri] <- nm
> > >> > Browse[2]> storage.mode(value[[jj]][ri])
> > >> > [1] "double"
> > >> >
> > >> To be clear, I don't think this is a bug in rbind() or
> > >> rbind.data.frame().  The confusion is that rbind.data.frame() calls
> > >> `[<-` for each column of the data.frame, and there is no `[<-.IDate`
> > >> method.  So the parent class method is dispatched, which converts the
> > >> storage mode to double.
> > >>
> > >> Someone may argue that this is an issue with `[<-.Date`, and that it
> > >> shouldn't convert the storage.mode from integer to double.
> >
> > I don't think this is an issue.  The storage mode isn't converted if
> > the replacement is the same storage mode.  For example:
> >
> > R> x <- .Date(1:5)
> > R> storage.mode(x)
> > [1] "integer"
> > R> x[1L] <- .Date(0L)
> > R> storage.mode(x)
> > [1] "integer"
> > R> x[1L] <- .Date(0)
> > R> storage.mode(x)
> > [1] "double"
> >
> > >> >
> > >> > > Mike C
> > >> > >
> > >> > > On Sun, May 26, 2019 at 1:16 PM Michael Chirico <
> michaelchirico4 at gmail.com>
> > >> > > wrote:
> > >> > >
> > >> > > > Debugging this issue:
> > >> > > >
> > >> > > > https://github.com/Rdatatable/data.table/issues/2008
> > >> > > >
> > >> > > > We have custom class 'IDate' which inherits from 'Date' (it
> just forces
> > >> > > > integer storage for efficiency, hence, I).
> > >> > > >
> > >> > > > The concatenation done by rbind, however, breaks this and
> returns a double:
> > >> > > >
> > >> > > > library(data.table)
> > >> > > > DF = data.frame(date = as.IDate(Sys.Date()))
> > >> > > > storage.mode(rbind(DF, DF)$date)
> > >> > > > # [1] "double"
> > >> > > >
> > >> > > > This is specific to base::rbind (data.table's rbind returns an
> integer as
> > >> > > > expected); in ?rbind we see:
> > >> > > >
> > >> > > > The method dispatching is not done via UseMethod(), but by
> C-internal
> > >> > > > dispatching. Therefore there is no need for, e.g.,
> rbind.default.
> > >> > > > The dispatch algorithm is described in the source file
> > >> > > > (?.../src/main/bind.c?) as
> > >> > > > 1. For each argument we get the list of possible class
> memberships from
> > >> > > > the class attribute.
> > >> > > > 2. *We inspect each class in turn to see if there is an
> applicable
> > >> > > > method.*
> > >> > > > 3. If we find an applicable method we make sure that it is
> identical to
> > >> > > > any method determined for prior arguments. If it is identical,
> we proceed,
> > >> > > > otherwise we immediately drop through to the default code.
> > >> > > >
> > >> > > > It's not clear what #2 means -- an applicable method *for
> what*? Glancing
> > >> > > > at the source code would suggest it's looking for rbind.IDate:
> > >> > > >
> > >> > > >
> https://github.com/wch/r-source/blob/trunk/src/main/bind.c#L1051-L1063
> > >> > > >
> > >> > > > const char *generic = ((PRIMVAL(op) == 1) ? "cbind" : "rbind");
> // should
> > >> > > > be rbind here
> > >> > > > const char *s = translateChar(STRING_ELT(classlist, i)); //
> iterating over
> > >> > > > the classes, should get to IDate first
> > >> > > > sprintf(buf, "%s.%s", generic, s); // should be rbind.IDate
> > >> > > >
> > >> > > > but adding this method (or even exporting it) is no help [
> simply defining
> > >> > > > rbind.IDate = function(...) as.IDate(NextMethod()) ]
> > >> > > >
> > >> > > > Lastly, it appears that as.Date.IDate is called, which is
> causing the type
> > >> > > > conversion:
> > >> > > >
> > >> > > > debug(data.table:::as.Date.IDate)
> > >> > > > rbind(DF, DF) # launches debugger
> > >> > > > x
> > >> > > > # [1] "2019-05-26" <-- singleton, so apparently applied to
> DF$date, not
> > >> > > > c(DF$date, DF$date)
> > >> > > > undebug(data.table:::as.Date.IDate)
> > >> > > >
> > >> > > > I can't really wrap my head around why as.Date is being called
> here, and
> > >> > > > even allowing that, why the end result is still the original
> class [
> > >> > > > class(rbind(DF, DF)$date) == c('IDate', 'Date') ]
> > >> > > >
> > >> > > > So, I'm beginning to think this might be a bug. Am I missing
> something?
> > >> > > >
> > >> > >
> > >> > >         [[alternative HTML version deleted]]
> > >> > >
> > >> > > ______________________________________________
> > >> > > R-devel at r-project.org mailing list
> > >> > > https://stat.ethz.ch/mailman/listinfo/r-devel
> > >> >
> > >>
> >
>
>
>
> --
> Joshua Ulrich  |  about.me/joshuaulrich
> FOSS Trading  |  www.fosstrading.com
>

	[[alternative HTML version deleted]]


From jte||er|@@rproject @end|ng |rom gm@||@com  Mon Jun  3 06:50:17 2019
From: jte||er|@@rproject @end|ng |rom gm@||@com (Juan Telleria Ruiz de Aguirre)
Date: Mon, 3 Jun 2019 06:50:17 +0200
Subject: [Rd] 
 Converting non-32-bit integers from python to R to use bit64:
 reticulate
In-Reply-To: <23794.42957.74307.509821@stat.math.ethz.ch>
References: <CAJXDcw3jQd2B+hvfXuUUeczx=mmtw0MA_Udaesd-UgM+spyGJw@mail.gmail.com>
 <CAD4oTHH_ixXYEk1OEuFq_yJf83sDYmShbZ1nPGFovRvy-XZPnw@mail.gmail.com>
 <CAJXDcw1V=2Z0BM31Ovc5SfiUEotuHoQRqWWi5z-8UfRg2qkM5w@mail.gmail.com>
 <23794.42957.74307.509821@stat.math.ethz.ch>
Message-ID: <CAJXDcw1oP51CdTqRLvOCNGPze2mS3Y+df3SUfO=bwsHRb3nzfg@mail.gmail.com>

Thank you Martin for giving to know and developing 'Rmpfr' library for
unlimited size integers (GNU C GMP) and arbitrary precision floats (GNU C
MPFR):

https://cran.r-project.org/package=Rmpfr

My question is: In the long term (For R3.7.0 or R3.8.0):

Does it have sense that CMP substitutes INTSXP, and MPFR substitutes
REALSXP code? With this we would achieve that an integer is always an
integer, and a numeric double precision float always a numeric double
precision float, without sometimes casting underneath.

And would the R Community / R Ordinary Members would be willing to help R
Core on such implementation (If has sense, and wants to be adopted)?

Thank you all! :)


>
> If you are interested in using unlimited size integers, you
> could use the CRAN R package 'gmp' which builds on the GMP = GNU
> MP = GNU Multi Precision C library.
>
>    https://cran.r-project.org/package=gmp
>
> (and for arbitrary precision "floats", see CRAN pkg 'Rmpfr'
>  built on package gmp, and both the GNU C libraries  GMP and
>  MPFR:
>            https://cran.r-project.org/package=Rmpfr
> )
>
>

	[[alternative HTML version deleted]]


From @vnpenn @end|ng |rom gm@||@com  Sun Jun  2 05:02:38 2019
From: @vnpenn @end|ng |rom gm@||@com (Steven Penny)
Date: Sat, 01 Jun 2019 20:02:38 -0700 (PDT)
Subject: [Rd] Offer zip builds
Message-ID: <5cf33c4e.1c69fb81.66223.ed3b@mx.google.com>

If you go here:

https://cran.cnr.berkeley.edu/bin/windows/base

you see EXE installers for Windows. This contrasts with other programming
languages that offer both an executable installer and ZIP files that can be
extracted and run. For example Go:

https://golang.org/dl

and Nim:

https://nim-lang.org/install_windows.html

Python:

https://python.org/downloads/release/python-373

and C#:

https://dotnet.microsoft.com/download/dotnet-core/2.2

PHP:

https://windows.php.net/download

Perl:

http://strawberryperl.com/releases.html


From rkoenker @end|ng |rom ||||no|@@edu  Mon Jun  3 10:18:05 2019
From: rkoenker @end|ng |rom ||||no|@@edu (Koenker, Roger W)
Date: Mon, 3 Jun 2019 08:18:05 +0000
Subject: [Rd] rgl install for R 3.7
In-Reply-To: <894218c1-d1b0-c0af-5e0a-2f0a19214011@stats.ox.ac.uk>
References: <3730C08F-191C-4879-994F-145C6D8B6C69@illinois.edu>
 <894218c1-d1b0-c0af-5e0a-2f0a19214011@stats.ox.ac.uk>
Message-ID: <F0F4B19B-B484-47DA-AA2C-552015CEB95B@illinois.edu>

Many thanks,  I couldn?t find the right way to convince R that freetype was installed in /opt/X11 but installing it
from http://mac.r-project.org/libs/ into /usr/local worked immediately without any change in my Makevars file.


Roger Koenker
r.koenker at ucl.ac.uk<mailto:r.koenker at ucl.ac.uk>
Department of Economics, UCL
London  WC1H 0AX.


On Jun 2, 2019, at 7:42 PM, Prof Brian Ripley <ripley at stats.ox.ac.uk<mailto:ripley at stats.ox.ac.uk>> wrote:

On 02/06/2019 16:28, Koenker, Roger W wrote:
I?ve installed R 3.7.0 on a new laptop running macos 10.14.5 and have managed to get most of my usual packages

I presume 'R 3.7.0' is R-devel: it is not released and may never be released under that version.

to compile from source with a ~/.R/Makevars file that looks like this:
CC=/usr/local/clang8/bin/clang
CXX=/usr/local/clang8/bin/clang++
LDFLAGS=-L/usr/local/clang8/lib
CPPFLAGS=-I/usr/local/clang8/include -I/opt/X11/include/freetype2

I suspect you don't want the second: if you have pkg-config it should find include paths for you.

FC=/usr/local/gfortran/bin/gfortran
FLIBS=-L/usr/local/gfortran/lib -lgfortran
As usual, the last challenge seems to be to get rgl installed.  Compilation _seems_ to go
smoothly, but I now see:
Error in dyn.load(file, DLLpath = DLLpath, ...) :
  unable to load shared object '/Library/Frameworks/R.framework/Versions/3.7/Resources/library/00LOCK-rgl/00new/rgl/libs/rgl.so':
  dlopen(/Library/Frameworks/R.framework/Versions/3.7/Resources/library/00LOCK-rgl/00new/rgl/libs/rgl.so, 6): Symbol not found: _FT_Attach_File
  Referenced from: /Library/Frameworks/R.framework/Versions/3.7/Resources/library/00LOCK-rgl/00new/rgl/libs/rgl.so

Perhaps you should show the linking line.  A similar setup works for me:

configure: Darwin, so ensuring /opt/X11/bin is at the head of the PATH...
checking for pkg-config... yes
...

Do you have pkg-config (it is not a standard part of macOS, but is available on SU's site -- see the R-admin manual)?  You may need to set its path: for rgl I used

PKG_CONFIG_PATH=/usr/local/lib/pkgconfig:/usr/lib/pkgconfig

(which should be the default) but for a few packages (Cairo gdtools rsvg)

PKG_CONFIG_PATH=/opt/X11/lib/pkgconfig:/usr/local/lib/pkgconfig:/usr/lib/pkgconfig

/usr/local/clang8/bin/clang++ -std=gnu++11 -dynamiclib -Wl,-headerpad_max_install_names -undefined dynamic_lookup -single_module -multiply_defined suppress -L/Users/ripley/R/R-devel/lib -L/usr/local/clang8/lib -L/usr/local/lib -o rgl.so ABCLineSet.o BBoxDeco.o Background.o ClipPlane.o Color.o Disposable.o Light.o LineSet.o LineStripSet.o Material.o NULLgui.o PlaneSet.o PointSet.o PrimitiveSet.o RenderContext.o Shape.o SphereMesh.o SphereSet.o SpriteSet.o String.o Surface.o TextSet.o Texture.o Viewpoint.o api.o assert.o callbacks.o device.o devicemanager.o fps.o ftgl.o geom.o gl2ps.o glErrors.o glgui.o gui.o init.o par3d.o pixmap.o platform.o pretty.o render.o rglmath.o rglview.o scene.o select.o subscene.o win32gui.o win32lib.o x11gui.o x11lib.o -lGLU -lGL -framework GLKit -framework OpenGL -dylib_file /System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libGL.dylib:/System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libGL.dylib -L/usr/local/lib -lpng16 -L/usr/X11/lib -lX11 -L/usr/local/lib -lfreetype -L/Users/ripley/R/R-devel/lib -lR -Wl,-framework -Wl,CoreFoundation

so that is statically linking libfreetype from /usr/local/lib and installed from https://mac.r-project.org/libs/freetype-2.5.5-darwin.13-x86_64.tar.gz . And that provides a freetype2.pc file, so

% pkg-config freetype2 --cflags
-I/usr/local/include/freetype2 -I/usr/local/include/libpng16
% pkg-config freetype2 --libs
-L/usr/local/lib -lfreetype



There is a comment somewhat after this about rgl requiring XQuartz, but I have  XQuartz 2.7.11 so I don?t
think that this is the problem.  Apparently, there is still a freetype problem, however I?m out of my depth at this
point.   Any suggestions would be most welcome.
Roger Koenker
Honorary Professor
Department of Economics, UCL
London  WC1H 0AX.


--
Brian D. Ripley,                  ripley at stats.ox.ac.uk<mailto:ripley at stats.ox.ac.uk>
Emeritus Professor of Applied Statistics, University of Oxford


	[[alternative HTML version deleted]]


From m@ech|er @end|ng |rom @t@t@m@th@ethz@ch  Mon Jun  3 17:04:27 2019
From: m@ech|er @end|ng |rom @t@t@m@th@ethz@ch (Martin Maechler)
Date: Mon, 3 Jun 2019 17:04:27 +0200
Subject: [Rd] Possible bug in formatC
In-Reply-To: <00de01d5169f$e07f2de0$a17d89a0$@rcragun.net>
References: <00de01d5169f$e07f2de0$a17d89a0$@rcragun.net>
Message-ID: <23797.14075.734906.735223@stat.math.ethz.ch>

>>>>> Randy Cragun 
>>>>>     on Thu, 30 May 2019 00:26:38 -0400 writes:

    > I do not know if this is a bug or a case of improper
    > documentation. The documentation for formatC() implies
    > that the difference between the options format="f" and
    > format="g" is that with "g", scientific format is
    > sometimes used. There is another difference between them
    > that is not mentioned in the
    > documentation. drop0trailing=FALSE is ignored when format
    > is set to "g" unless flag contains "#" (this is the
    > documented behavior for format="fg").  For instance, the
    > first line below return " 2.5", whereas the second returns
    > the expected "2.50".

    > formatC(2.50, format="g", digits=3, drop0trailing=F)
    > formatC(2.50, format="g", digits=3, drop0trailing=F, flag="#")

Well, you have a point that this behavior is not documented in
details (and I assume the text reference "Kernighan and Richie"
is less available for the typical R users than in 1995...)

However, formatC() has been unchanged like that for close to 20
years, so we will most probably not change the function's behavior.

Notice that   drop0trailing=FALSE  is really the default
(and format="g" is also the default for non-character / non-integer numbers).

The design of formatC(*) for numbers has entailed to default to
format="g" which drops trailing zeros most of the time
[whereas the format = "f" does not, unless drop0trailing=TRUE is set.]

Lastly, note that 2.50 and 2.5 are exactly identical as R
numbers; so, your two examples above are identical to the much shorter

   formatC(2.5, digits=3)
   formatC(2.5, digits=3, flag="#")

If you want "extraneous" trailing zeros, the "f" format is your
friend most of the time anyway:

> t(sapply(1:8, function(D) formatC(c(2.5,pi), format="f", digits= D)))
     [,1]         [,2]        
[1,] "2.5"        "3.1"       
[2,] "2.50"       "3.14"      
[3,] "2.500"      "3.142"     
[4,] "2.5000"     "3.1416"    
[5,] "2.50000"    "3.14159"   
[6,] "2.500000"   "3.141593"  
[7,] "2.5000000"  "3.1415927" 
[8,] "2.50000000" "3.14159265"
> 

I will add more information to the formatC()  help
page, notably not only mentioning but explaining most of the
'flag's that are available typically(*).

Thank you for raising the issue.

Martin Maechler
ETH Zurich and R Core Team

--
*) as formatC() interfaces to the OS C library, some of the
   availability and meaning of 'flags' is platform dependent.



    > ----------------------
    > sessionInfo():

    > R version 3.5.3 (2019-03-11) Platform:
    > x86_64-w64-mingw32/x64 (64-bit) Running under: Windows >=
    > 8 x64 (build 9200)

    > Matrix products: default

    > locale: [1] LC_COLLATE=English_United States.1252
    > LC_CTYPE=English_United States.1252 [3]
    > LC_MONETARY=English_United States.1252 LC_NUMERIC=C

    > [5] LC_TIME=English_United States.1252

    > attached base packages: [1] stats graphics grDevices utils
    > datasets methods base

    > loaded via a namespace (and not attached): [1]
    > compiler_3.5.3 tools_3.5.3

    > ______________________________________________
    > R-devel at r-project.org mailing list
    > https://stat.ethz.ch/mailman/listinfo/r-devel


From m@ech|er @end|ng |rom @t@t@m@th@ethz@ch  Mon Jun  3 18:14:15 2019
From: m@ech|er @end|ng |rom @t@t@m@th@ethz@ch (Martin Maechler)
Date: Mon, 3 Jun 2019 18:14:15 +0200
Subject: [Rd] stopifnot
In-Reply-To: <1923928808.6775475.1559227522953@mail.yahoo.com>
References: <1923928808.6775475.1559227522953.ref@mail.yahoo.com>
 <1923928808.6775475.1559227522953@mail.yahoo.com>
Message-ID: <23797.18263.920601.137937@stat.math.ethz.ch>

>>>>> Suharto Anggono Suharto Anggono 
>>>>>     on Thu, 30 May 2019 14:45:22 +0000 writes:
>>>>> Suharto Anggono Suharto Anggono 
>>>>>     on Thu, 30 May 2019 14:45:22 +0000 writes:

    > Here is a patch to function 'stopifnot' that adds 'evaluated' argument and makes 'exprs' argument in 'stopifnot' like 'exprs' argument in 'withAutoprint'.

    > --- stop.R	2019-05-30 14:01:15.282197286 +0000
    > +++ stop_new.R	2019-05-30 14:01:51.372187466 +0000

    [..........]

Thank you, Suharto.

I've looked at the patch and tested it a bit, and also (re)read
your April 15 remarks (cited below).  I now agree that my hacks to
enable dealing with "language objects" (typically class
'expression')  'exprs' has remained hackish and hence not
working in all cases,  and that it may be a better idea to add
a new logical argument (as in other functions) which has to be
"switched" and then leads somewhat simpler and more robust code.

OTOH, of course, this is an API change would typically not go into the R
3.6.x series ... and I have no idea if it would affect much more
than R's own tests/reg-tests-* ...

Even though the argument name 'evaluated' was chosen for
withAutoprint(), I don't find it a very good name anymore, and -
if the change should happen - would probably prefer something
like 'is.language' or 'expr.is.language' or similar..

Could we get any other readers' opinions ?

Martin

    > --------------------------------------------
    > On Mon, 15/4/19, Suharto Anggono Suharto Anggono <suharto_anggono at yahoo.com> wrote:

    > Subject: Re: [Rd] stopifnot
    > To: "Martin Maechler" <maechler at stat.math.ethz.ch>
    > Cc: r-devel at r-project.org
    > Date: Monday, 15 April, 2019, 2:56 AM
 
    > Also, in current definition of function 'stopifnot' in R 3.6.0 beta or R devel, for 'cl' if 'exprs' is specified, there a case with comment "the *name* of an expression". The intent is allowing
    > stopifnot(exprs = ee) ,
    > where variable 'ee' holds an expression object, to work on the expression object.

    > It is not quite right to use eval(exprs) . It fails when 'stopifnot' is called inside a function, like
    > f <- function(ee) stopifnot(exprs = ee)
    > f(expression())

    > But, how about local=FALSE case? Should the following work?
    > f <- function(ee) stopifnot(exprs = ee, local = FALSE)
    > f(expression())

    > But, why bother making it work, while it is undocumented that 'exprs' argument in 'stopifnot' can be an expression? Well, yes, expectation may be set from the name "exprs" itself or from argument 'exprs' in function 'source' or 'withAutoprint'. Function 'withAutoprint' may be the closest match.

    > Function 'withAutoprint' has 'evaluated' argument that controls whether work is on value of  'exprs' or on 'exprs' as given. I like the approach.


From @purd|e@@ @end|ng |rom gm@||@com  Mon Jun  3 22:40:34 2019
From: @purd|e@@ @end|ng |rom gm@||@com (Abby Spurdle)
Date: Tue, 4 Jun 2019 08:40:34 +1200
Subject: [Rd] Offer zip builds
In-Reply-To: <5cf33c4e.1c69fb81.66223.ed3b@mx.google.com>
References: <5cf33c4e.1c69fb81.66223.ed3b@mx.google.com>
Message-ID: <CAB8pepxBjuvgRsECfRgF6vomN+m+WTVAZftKHQPc4LELcfjcWA@mail.gmail.com>

> If you go here:
> https://cran.cnr.berkeley.edu/bin/windows/base
> you see EXE installers for Windows. This contrasts with other programming
> languages that offer both an executable installer and ZIP files that can
be
> extracted and run

Are you suggesting that R should do the same?
If so, I second that, excellent idea.
(However, gzip preferred).

I've had significant problems with the Windows installer.
I've never had significant problems with zip files.
Also, I assuming that the zip approach would be easier for systems
administrators.
However, I'm not a systems administrator...


Abs

	[[alternative HTML version deleted]]


From m@rc_@chw@rtz @end|ng |rom me@com  Mon Jun  3 23:11:48 2019
From: m@rc_@chw@rtz @end|ng |rom me@com (Marc Schwartz)
Date: Mon, 3 Jun 2019 17:11:48 -0400
Subject: [Rd] Offer zip builds
In-Reply-To: <CAB8pepxBjuvgRsECfRgF6vomN+m+WTVAZftKHQPc4LELcfjcWA@mail.gmail.com>
References: <5cf33c4e.1c69fb81.66223.ed3b@mx.google.com>
 <CAB8pepxBjuvgRsECfRgF6vomN+m+WTVAZftKHQPc4LELcfjcWA@mail.gmail.com>
Message-ID: <077E185D-AE99-442F-9DA1-6119227DE101@me.com>



> On Jun 3, 2019, at 4:40 PM, Abby Spurdle <spurdle.a at gmail.com> wrote:
> 
>> If you go here:
>> https://cran.cnr.berkeley.edu/bin/windows/base
>> you see EXE installers for Windows. This contrasts with other programming
>> languages that offer both an executable installer and ZIP files that can
> be
>> extracted and run
> 
> Are you suggesting that R should do the same?
> If so, I second that, excellent idea.
> (However, gzip preferred).
> 
> I've had significant problems with the Windows installer.
> I've never had significant problems with zip files.
> Also, I assuming that the zip approach would be easier for systems
> administrators.
> However, I'm not a systems administrator...
> 
> 
> Abs


Hi,

First, I do not speak for R Core, who would, in the end, be responsible for offering something official here.

Second, prior discussions on this topic have generally pointed to:

  https://sourceforge.net/projects/rportable/

as one source for a portable version of R, albeit, with some dependencies (e.g. PortableApps framework)

That being said, again, based upon prior discussions on this topic, the typical reason for needing a ZIP archive of an R installation, is to circumvent Windows OS security restrictions, whereby a useR does not have the requisite Admin rights to install R via the default installer.

Thus, you can presumably download a ZIP of an R installation, unzip it in a location of your choosing, whereby you can then execute/run the R .exe binary. If you can't do that, then a ZIP will not be helpful to you.

I have not tried it, but if that is the case here, you may be able to use the normal R binary installer, but adjust the default install options when prompted, allowing you to customize the install location and other parameters, that may be suitable in the absence of Admin rights.

Prior statements, not official, would suggest that R Core is not likely to assist in providing official options for useRs to circumvent OS security restrictions.

Regards,

Marc Schwartz


From m@rc_@chw@rtz @end|ng |rom me@com  Tue Jun  4 01:54:19 2019
From: m@rc_@chw@rtz @end|ng |rom me@com (Marc Schwartz)
Date: Mon, 3 Jun 2019 19:54:19 -0400
Subject: [Rd] Offer zip builds
In-Reply-To: <CAAXzdLXpXXs0meVWdMOVoxhyfDDSQnyuEEi_XBzivdGDR7jf1A@mail.gmail.com>
References: <5cf33c4e.1c69fb81.66223.ed3b@mx.google.com>
 <CAB8pepxBjuvgRsECfRgF6vomN+m+WTVAZftKHQPc4LELcfjcWA@mail.gmail.com>
 <077E185D-AE99-442F-9DA1-6119227DE101@me.com>
 <CAAXzdLXpXXs0meVWdMOVoxhyfDDSQnyuEEi_XBzivdGDR7jf1A@mail.gmail.com>
Message-ID: <204E367A-8817-4C4D-9FEE-1A9E88929417@me.com>



> On Jun 3, 2019, at 6:31 PM, Steven Penny <svnpenn at gmail.com> wrote:
> 
> On Mon, Jun 3, 2019 at 4:11 PM Marc Schwartz wrote:
>> I have not tried it, but if that is the case here, you may be able to use the
>> normal R binary installer, but adjust the default install options when
>> prompted, allowing you to customize the install location and other parameters,
>> that may be suitable in the absence of Admin rights.
>> 
>> Prior statements, not official, would suggest that R Core is not likely to
>> assist in providing official options for useRs to circumvent OS security
>> restrictions.
> 
> Theres nothing nefarious here. It would allow people to use the R environment
> without running an installer. If someone is a new user they may want to try
> R out, and installers can be invasive as they commonly:
> 
> - copy files to install dir
> - copy files to profile dir
> - set registry entries
> - set environment variables
> - set start menu entries
> 
> and historically uninstallers have a bad record of reverting these changes.
> should not put this burden upon new users or even having them resort to virtual
> machine to avoid items above. having a ZIP file allows new users to run the
> R environment, then if they like it perhaps they can run the installer going
> forward. Are you familiar with Windows? As everything I am describing hasnt
> changed in at least 20 years.
> 
> I dont have a criticism of the R installer, I have not run tests to be able to
> determine if its well behaved or not. Its the *not knowing* that is the issue.
> With Windows, every installer could be perceived as a "black box".


Hi,

I am on macOS primarily, albeit, I have run both Windows and Linux routinely in years past.

That being said, these days, I do run Windows 10 under a Parallels VM on macOS, as I have a single commercial application that I need to run for clients now and then, and it sadly only runs on a real Windows install (e.g. not with Wine).

To your points:

The R for Windows FAQ does provide some information on installing R as a non-Admin:

  https://cran.r-project.org/bin/windows/base/rw-FAQ.html#How-do-I-install-R-for-Windows_003f

as well as Registry change related information:

  https://cran.r-project.org/bin/windows/base/rw-FAQ.html#Does-R-use-the-Registry_003f

There is also information on running from external media:

 https://cran.r-project.org/bin/windows/base/rw-FAQ.html#Can-I-run-R-from-a-CD-or-USB-drive_003f

and uninstalling:

  https://cran.r-project.org/bin/windows/base/rw-FAQ.html#How-do-I-UNinstall-R_003f


In addition, the R-Admin manual provides information on the Inno Setup installer:

  https://cran.r-project.org/doc/manuals/r-release/R-admin.html#Building-the-Inno-Setup-installer
  https://cran.r-project.org/doc/manuals/r-release/R-admin.html#The-Inno-Setup-installer

which leads you to:

  http://jrsoftware.org/isinfo.php

and shows that Inno Setup is, like R, fully open source, hence reviewable and not a black box, any more than R itself is. That should not be a surprise...

While I understand the use case you describe, it is, as I noted initially, up to R Core to be willing to provide an official release of a ZIP based installation. Unless you can make the case to them to expend the finite resources that they have to support this as part of each version release process, in light of the prior discussions, it is not clear that this appears to be a priority.

Again, I do not speak for them.

Otherwise, it falls to the community to volunteer to engage in that activity and fulfill the need.

Regards,

Marc


From d@@cott @end|ng |rom @uck|@nd@@c@nz  Tue Jun  4 02:32:03 2019
From: d@@cott @end|ng |rom @uck|@nd@@c@nz (David Scott)
Date: Tue, 4 Jun 2019 12:32:03 +1200
Subject: [Rd] Trivial error in documentation
Message-ID: <5bd8945c-376e-7523-1ecb-48fbd58914a8@auckland.ac.nz>

This must have been there for a while>

In the datasets package, the help for airquality says:

A data frame with 154 observations on 6 variables.

But:

 > str(airquality)
'data.frame':??? 153 obs. of? 6 variables:
 ?$ Ozone? : int? 41 36 12 18 NA 28 23 19 8 NA ...
 ?$ Solar.R: int? 190 118 149 313 NA NA 299 99 19 194 ...
 ?$ Wind?? : num? 7.4 8 12.6 11.5 14.3 14.9 8.6 13.8 20.1 8.6 ...
 ?$ Temp?? : int? 67 72 74 62 56 66 65 59 61 69 ...
 ?$ Month? : int? 5 5 5 5 5 5 5 5 5 5 ...
 ?$ Day??? : int? 1 2 3 4 5 6 7 8 9 10 ...

Regards

David Scott


-- 
_________________________________________________________________
David Scott	Department of Statistics
		The University of Auckland, PB 92019
		Auckland 1142,    NEW ZEALAND
Phone: +64 9 923 5055, or +64 9 373 7599 ext 85055
Email:	d.scott at auckland.ac.nz,  Fax: +64 9 373 7018


From murdoch@dunc@n @end|ng |rom gm@||@com  Tue Jun  4 03:04:26 2019
From: murdoch@dunc@n @end|ng |rom gm@||@com (Duncan Murdoch)
Date: Mon, 3 Jun 2019 21:04:26 -0400
Subject: [Rd] Offer zip builds
In-Reply-To: <5cf33c4e.1c69fb81.66223.ed3b@mx.google.com>
References: <5cf33c4e.1c69fb81.66223.ed3b@mx.google.com>
Message-ID: <c679949c-d5bc-1ce9-91fd-ba8203e92cad@gmail.com>

On 01/06/2019 11:02 p.m., Steven Penny wrote:
> If you go here:
> 
> https://cran.cnr.berkeley.edu/bin/windows/base
> 
> you see EXE installers for Windows. This contrasts with other programming
> languages that offer both an executable installer and ZIP files that can be
> extracted and run. For example Go:

We did offer both zips and an installer until 2001 or 2002.  It was 
decided then that it wasn't worth the trouble of offering both.

I don't recall anyone asking for the zip in the 17 years after that 
change, until now (though I haven't been paying attention lately, since 
I retired from building the binaries a couple of years ago).

If you think it's worthwhile to do it, then I don't think anyone would 
object if you went ahead and did so.

Duncan Murdoch


From murdoch@dunc@n @end|ng |rom gm@||@com  Tue Jun  4 09:20:25 2019
From: murdoch@dunc@n @end|ng |rom gm@||@com (Duncan Murdoch)
Date: Tue, 4 Jun 2019 03:20:25 -0400
Subject: [Rd] Offer zip builds
In-Reply-To: <CAAXzdLVEMFSNOADT0xhnE7P32OFSBnHR8yrPcVQ01YLVmoOL-Q@mail.gmail.com>
References: <5cf33c4e.1c69fb81.66223.ed3b@mx.google.com>
 <c679949c-d5bc-1ce9-91fd-ba8203e92cad@gmail.com>
 <CAAXzdLVEMFSNOADT0xhnE7P32OFSBnHR8yrPcVQ01YLVmoOL-Q@mail.gmail.com>
Message-ID: <0000167f-7231-bb1f-d43f-300713cd0eef@gmail.com>

On 03/06/2019 9:16 p.m., Steven Penny wrote:
> On Mon, Jun 3, 2019 at 8:04 PM Duncan Murdoch wrote:
>> I don't recall anyone asking for the zip in the 17 years after that
>> change, until now (though I haven't been paying attention lately, since
>> I retired from building the binaries a couple of years ago).
>>
>> If you think it's worthwhile to do it, then I don't think anyone would
>> object if you went ahead and did so.
> 
> If I visited this page:
> 
> https://cran.cnr.berkeley.edu/bin/windows/base
> 
> and found Zip builds I would use those. Not only do those not exist, but the
> installer has been created in such a way that it cant even be extracted from.
> Just because you dont recall it, doesnt mean the demand isnt there. The R
> community isnt exactly reachable:
> 
>> NOTE: due to abuse by spammers, since 2016-07-09 only ?members? (including all
>> who have previously submitted bugs) can submit new bugs on R?s Bugzilla. For
>> now, either post (e-mail) your bug report to R-devel or ask an R Core member to
>> add you manually to R?s Bugzilla members.
> 
> http://r-project.org/bugs.html
> 
> So bugs and feature requests cant even be posted to bugzilla. Then regarding the
> mailing list, even if subscribed you cant post, as all posts are moderated.
> Compare to other languages, where you just log in an post an issue:
> 
> - https://github.com/crystal-lang/crystal/issues
> - https://github.com/dart-lang/sdk/issues
> - https://github.com/dotnet/coreclr/issues
> - https://github.com/JuliaLang/julia/issues
> - https://github.com/ponylang/ponyc/issues
> - https://github.com/ziglang/zig/issues
> 
> If R team is happy with current status quo, then do nothing. If they are
> interested in growing the userbase this might be one way to do it.
> 

You are as much a member of the R team as I am.  If you are interested 
in growing the userbase, then you should go ahead and do it.

By the way, I realized after posting that I was wrong when I said nobody 
would object if you did that.  People object to everything.

Duncan Murdoch


From @vnpenn @end|ng |rom gm@||@com  Tue Jun  4 00:31:21 2019
From: @vnpenn @end|ng |rom gm@||@com (Steven Penny)
Date: Mon, 3 Jun 2019 17:31:21 -0500
Subject: [Rd] Offer zip builds
In-Reply-To: <077E185D-AE99-442F-9DA1-6119227DE101@me.com>
References: <5cf33c4e.1c69fb81.66223.ed3b@mx.google.com>
 <CAB8pepxBjuvgRsECfRgF6vomN+m+WTVAZftKHQPc4LELcfjcWA@mail.gmail.com>
 <077E185D-AE99-442F-9DA1-6119227DE101@me.com>
Message-ID: <CAAXzdLXpXXs0meVWdMOVoxhyfDDSQnyuEEi_XBzivdGDR7jf1A@mail.gmail.com>

On Mon, Jun 3, 2019 at 4:11 PM Marc Schwartz wrote:
> I have not tried it, but if that is the case here, you may be able to use the
> normal R binary installer, but adjust the default install options when
> prompted, allowing you to customize the install location and other parameters,
> that may be suitable in the absence of Admin rights.
>
> Prior statements, not official, would suggest that R Core is not likely to
> assist in providing official options for useRs to circumvent OS security
> restrictions.

Theres nothing nefarious here. It would allow people to use the R environment
without running an installer. If someone is a new user they may want to try
R out, and installers can be invasive as they commonly:

- copy files to install dir
- copy files to profile dir
- set registry entries
- set environment variables
- set start menu entries

and historically uninstallers have a bad record of reverting these changes.
should not put this burden upon new users or even having them resort to virtual
machine to avoid items above. having a ZIP file allows new users to run the
R environment, then if they like it perhaps they can run the installer going
forward. Are you familiar with Windows? As everything I am describing hasnt
changed in at least 20 years.

I dont have a criticism of the R installer, I have not run tests to be able to
determine if its well behaved or not. Its the *not knowing* that is the issue.
With Windows, every installer could be perceived as a "black box".


From @vnpenn @end|ng |rom gm@||@com  Tue Jun  4 02:11:37 2019
From: @vnpenn @end|ng |rom gm@||@com (Steven Penny)
Date: Mon, 3 Jun 2019 19:11:37 -0500
Subject: [Rd] Offer zip builds
In-Reply-To: <204E367A-8817-4C4D-9FEE-1A9E88929417@me.com>
References: <5cf33c4e.1c69fb81.66223.ed3b@mx.google.com>
 <CAB8pepxBjuvgRsECfRgF6vomN+m+WTVAZftKHQPc4LELcfjcWA@mail.gmail.com>
 <077E185D-AE99-442F-9DA1-6119227DE101@me.com>
 <CAAXzdLXpXXs0meVWdMOVoxhyfDDSQnyuEEi_XBzivdGDR7jf1A@mail.gmail.com>
 <204E367A-8817-4C4D-9FEE-1A9E88929417@me.com>
Message-ID: <CAAXzdLVpQpPemiM3+Lr=_mVs+XRNuLMq-oKRd_Rxmny7nG3Z_A@mail.gmail.com>

On Mon, Jun 3, 2019 at 6:54 PM Marc Schwartz wrote:
> I am on macOS primarily, albeit, I have run both Windows and Linux routinely
> in years past.

With all due respect, then you have no business in this thread.

> That being said, these days, I do run Windows 10 under a Parallels VM on
> macOS, as I have a single commercial application that I need to run for
> clients now and then, and it sadly only runs on a real Windows install (e.g.
> not with Wine).

Further demonstrating my point. You run Windows in a virtual machine, meaning
even if you encountered some bad installer, you could just revert to a snapshot
or similar.

> To your points:
>
> [bunch of links]

I am sorry if I miscommunicated, I didnt and dont wish to be convinced about how
well behaved R installer is. I wish for R to offer zip builds. Many other
programming languages do:

- http://strawberryperl.com/releases.html
- https://dotnet.microsoft.com/download/dotnet-core/2.2
- https://golang.org/dl
- https://nim-lang.org/install_windows.html
- https://python.org/downloads/release/python-373
- https://windows.php.net/download

As I see it, the question isnt "should R offer zip builds", its "why isnt R
offering zip builds".

> Unless you can make the case to them to expend the finite resources that they
> have to support this as part of each version release process, in light of the
> prior discussions, it is not clear that this appears to be a priority.

Thats the point of my original post. If they choose to continue with only EXE,
I will just keep using other programming languages. So you could see how it
might be in R interest to offer this, as no zip builds might be one of the
reasons people avoid the language.


From @vnpenn @end|ng |rom gm@||@com  Tue Jun  4 03:16:39 2019
From: @vnpenn @end|ng |rom gm@||@com (Steven Penny)
Date: Mon, 3 Jun 2019 20:16:39 -0500
Subject: [Rd] Offer zip builds
In-Reply-To: <c679949c-d5bc-1ce9-91fd-ba8203e92cad@gmail.com>
References: <5cf33c4e.1c69fb81.66223.ed3b@mx.google.com>
 <c679949c-d5bc-1ce9-91fd-ba8203e92cad@gmail.com>
Message-ID: <CAAXzdLVEMFSNOADT0xhnE7P32OFSBnHR8yrPcVQ01YLVmoOL-Q@mail.gmail.com>

On Mon, Jun 3, 2019 at 8:04 PM Duncan Murdoch wrote:
> I don't recall anyone asking for the zip in the 17 years after that
> change, until now (though I haven't been paying attention lately, since
> I retired from building the binaries a couple of years ago).
>
> If you think it's worthwhile to do it, then I don't think anyone would
> object if you went ahead and did so.

If I visited this page:

https://cran.cnr.berkeley.edu/bin/windows/base

and found Zip builds I would use those. Not only do those not exist, but the
installer has been created in such a way that it cant even be extracted from.
Just because you dont recall it, doesnt mean the demand isnt there. The R
community isnt exactly reachable:

> NOTE: due to abuse by spammers, since 2016-07-09 only ?members? (including all
> who have previously submitted bugs) can submit new bugs on R?s Bugzilla. For
> now, either post (e-mail) your bug report to R-devel or ask an R Core member to
> add you manually to R?s Bugzilla members.

http://r-project.org/bugs.html

So bugs and feature requests cant even be posted to bugzilla. Then regarding the
mailing list, even if subscribed you cant post, as all posts are moderated.
Compare to other languages, where you just log in an post an issue:

- https://github.com/crystal-lang/crystal/issues
- https://github.com/dart-lang/sdk/issues
- https://github.com/dotnet/coreclr/issues
- https://github.com/JuliaLang/julia/issues
- https://github.com/ponylang/ponyc/issues
- https://github.com/ziglang/zig/issues

If R team is happy with current status quo, then do nothing. If they are
interested in growing the userbase this might be one way to do it.


From @unq|ngy@o19970825 @end|ng |rom |c|oud@com  Tue Jun  4 09:36:48 2019
From: @unq|ngy@o19970825 @end|ng |rom |c|oud@com (=?utf-8?B?5a2Z5bqG6ICA?=)
Date: Tue, 4 Jun 2019 15:36:48 +0800
Subject: [Rd] tsdiag should pass the fitdf parameter to Box.test
Message-ID: <ECD8D2D9-9FD4-407C-8377-351FF6511E3C@icloud.com>

Dear Everyone,

The document of `tsdiag? says

> These tests are sometimes applied to the residuals from an ARMA(p, q) fit, in which case the references suggest a better approximation to the null-hypothesis distribution is obtained by setting fitdf = p+q, provided of course that lag > fitdf.

This implies that we should pass the `fitdf' parameter when applying `Box.test' to residuals. When checking the source code for `getS3method("tsdiag", "Arima?)?, however, I noticed that it didn?t pass this parameter. The relevant line is `for (i in 1L:nlag) pval[i] <- Box.test(rs, i, type = "Ljung-Box")$p.value?. I suppose this could be fixed by passing an additional `fitdf = sum(object$arma[1:4])?.

See also this thread on Cross Validated: https://stats.stackexchange.com/questions/411432/significance-of-the-parameter-fitdf-in-box-test

From |eutn@nt @end|ng |rom |h-muen@ter@de  Tue Jun  4 10:45:22 2019
From: |eutn@nt @end|ng |rom |h-muen@ter@de (Dominik Leutnant)
Date: Tue, 4 Jun 2019 08:45:22 +0000
Subject: [Rd] MacOS parallel::makeCluster fails
Message-ID: <BA251FC4-C0F3-4473-834C-72B147F63C26@contoso.com>

Hi all,

The call parallel::makeCluster(1L) hangs infinitely on my MacOS machine which seems to be already reported by some people (e.g., https://stat.ethz.ch/pipermail/r-devel/2018-February/075565.html).
However, the solutions posted on SO, GH or R-devel do not work in my case.

So far, I unsuccessfully tested ?

  1.  Couple of reboots
  2.  Adding 192.0.0.1 to /etc/hosts
  3.  Using R.app instead of RStudio.app
  4.  Turn off the firewall

Following Hendriks advice, ?cl <- future::makeClusterPSOCK(1L, verbose = TRUE, timeout = 60)? gives (note: without adding the timeout parameter, R just hangs):
> Sys.setenv(LANGUAGE='en')
> cl <- future::makeClusterPSOCK(1L, verbose = TRUE, timeout = 60)
[local output] Workers: [n = 1] ?localhost?
[local output] Base port: 11867
[local output] Creating node 1 of 1 ...
[local output] - setting up node
Testing if worker's PID can be inferred: ?'/Library/Frameworks/R.framework/Resources/bin/Rscript' -e 'try(cat(Sys.getpid(),file="/var/folders/5s/kgm05t2s0_52gz1s445mnlgw0000gn/T//RtmpZp1RX6/future.parent=835.3434fe0c5c6.pid"), silent = TRUE)' -e "file.exists('/var/folders/5s/kgm05t2s0_52gz1s445mnlgw0000gn/T//RtmpZp1RX6/future.parent=835.3434fe0c5c6.pid')"?
- Possible to infer worker's PID: TRUE
[local output] Starting worker #1 on ?localhost?: '/Library/Frameworks/R.framework/Resources/bin/Rscript' --default-packages=datasets,utils,grDevices,graphics,stats,methods -e 'try(cat(Sys.getpid(),file="/var/folders/5s/kgm05t2s0_52gz1s445mnlgw0000gn/T//RtmpZp1RX6/future.parent=835.3434fe0c5c6.pid"), silent = TRUE)' -e 'parallel:::.slaveRSOCK()' MASTER=localhost PORT=11867 OUT=/dev/null TIMEOUT=60 XDR=TRUE
[local output] - Exit code of system() call: 0
[local output] Waiting for worker #1 on ?localhost? to connect back
[local output] Detected a warning from socketConnection(): ?problem in listening on this socket?
Killing worker process (PID 903) if still alive
Worker (PID 903) was successfully killed: TRUE
Error in socketConnection("localhost", port = port, server = TRUE, blocking = TRUE,  :
  Failed to launch and connect to R worker on local machine ?localhost? from local machine ?Dominiks-MBP.local?.
* The error produced by socketConnection() was: ?cannot open the connection?
* In addition, socketConnection() produced 1 warning(s):
   - Warning #1: ?problem in listening on this socket?
* The localhost socket connection that failed to connect to the R worker used port 11867 using a communication timeout of 60 seconds and a connection timeout of 120 seconds.
* Worker launch call: '/Library/Frameworks/R.framework/Resources/bin/Rscript' --default-packages=datasets,utils,grDevices,graphics,stats,methods -e 'try(cat(Sys.getpid(),file="/var/folders/5s/kgm05t2s0_52gz1s445mnlgw0000gn/T//RtmpZp1RX6/future.parent=835.3434fe0c5c6.pid"), silent = TRUE)' -e 'parallel:::.slaveRSOCK()' MASTER=localhost PORT=11867 OUT=/dev/null TIMEOUT=60 XDR=TRUE.
* Worker (PID 903) was successfully killed: TRUE
* Troubleshooting suggestions:
   - Suggestion #1: Set 'outfile=NULL' to see output from worker.
In addition: Warning message:
In socketConnection("localhost", port = port, server = TRUE, blocking = TRUE,  :
  problem in listening on this socket

My session looks like:
> sessionInfo()
R version 3.6.0 (2019-04-26)
Platform: x86_64-apple-darwin15.6.0 (64-bit)
Running under: macOS Mojave 10.14.5

Matrix products: default
BLAS:   /Library/Frameworks/R.framework/Versions/3.6/Resources/lib/libRblas.0.dylib
LAPACK: /Library/Frameworks/R.framework/Versions/3.6/Resources/lib/libRlapack.dylib

Random number generation:
RNG:     Mersenne-Twister
 Normal:  Inversion
 Sample:  Rounding

locale:
[1] de_DE.UTF-8/de_DE.UTF-8/de_DE.UTF-8/C/de_DE.UTF-8/de_DE.UTF-8

attached base packages:
[1] stats     graphics  grDevices utils     datasets  methods   base

loaded via a namespace (and not attached):
[1] compiler_3.6.0
>

Any help is greatly appreciated.
Best regards
Dominik

Dr. Dominik Leutnant

Muenster University of Applied Sciences
Department of Civil Engineering
Institute for Infrastucture?Water?Resources?Environment (IWARU)
WG Urban Hydrology and Water Management
Corrensstr. 25
FRG-48149 M?nster, Germany

Tel.:  +49 (0) 251/83-65274
Fax:  +49 (0) 251/83-65915
Mail:  leutnant at fh-muenster.de<mailto:leutnant at fh-muenster.de>
Web: https://www.fh-muenster.de/

	[[alternative HTML version deleted]]


From m@rkk||k @end|ng |rom gm@||@com  Tue Jun  4 11:14:35 2019
From: m@rkk||k @end|ng |rom gm@||@com (Mark Klik)
Date: Tue, 4 Jun 2019 11:14:35 +0200
Subject: [Rd] undefined symbol errors when compiling package using ALTREP API
Message-ID: <CACdkz5-3-Z+YqoMoEwC6LPYFxw_NDRHOQG7x3ymai=PU7OjOoA@mail.gmail.com>

Hello,

I'm developing a package (lazyvec) that makes full use of the ALTREP
framework (R >= 3.6.0).
One application of the package is to wrap existing ALTREP vectors in a new
ALTREP vector and pass all calls from R to the contained object. The
purpose of this is to provide a diagnostic framework for working with
ALTREP vectors and show information about internal calls.

The package builds on Windows and OSX but fails to build on Linux as can be
seen from the link to the Travis build:
https://travis-ci.org/fstpackage/lazyvec/jobs/539442806

The reason of build failure is that many ALTREP methods generate 'undefined
symbol' errors upon building the package (on Linux). I've checked the R
source code and the undefined symbols seems to be related to the
'attribute_hidden' before the function definition. For example, the method
'ALTVEC_EXTRACT_SUBSET' is defined as:

SEXP attribute_hidden ALTVEC_EXTRACT_SUBSET(SEXP x, SEXP indx, SEXP call)

My question is why these differences between Windows / OSX and Linux exist
and if they are intentional?
Do I need special build parameters to make sure my package builds correctly
on Linux?

thanks for all the hard work!

best,
Mark

PS: some additional info:

package github repository: https://github.com/fstpackage/lazyvec
AppVeyor package build logs:
https://ci.appveyor.com/project/fstpackage/lazyvec
Travis package build logs: https://travis-ci.org/fstpackage/lazyvec/builds

	[[alternative HTML version deleted]]


From We|g@nd@Stephen @end|ng |rom m@yo@edu  Tue Jun  4 15:27:03 2019
From: We|g@nd@Stephen @end|ng |rom m@yo@edu (Weigand, Stephen D.)
Date: Tue, 04 Jun 2019 13:27:03 +0000
Subject: [Rd] foreign:::writeForeignSAS patch not released?
Message-ID: <9ecfbe$bqh68u@ironport10.mayo.edu>

Hello,

In May 2018 there was some R-devel discussion about a bug in 
foreign:::writeForeignSAS. See here:

  https://stat.ethz.ch/pipermail/r-devel/2018-May/076220.html

and it resulted in a patch. See:

  https://bugs.r-project.org/bugzilla/show_bug.cgi?id=17256

And I see the changes in Subversion here:

  https://svn.r-project.org/R-packages/trunk/foreign/R/writeForeignSAS.R

But I don't think the patched version is being released with R or on CRAN.  
Subversion shows version 0.8-72 of the 'foreign' package but CRAN and 
'R-3.6.0.tar.gz' both have version 0.8-71.

Sincerely,
Stephen


From m@ech|er @end|ng |rom @t@t@m@th@ethz@ch  Tue Jun  4 17:50:02 2019
From: m@ech|er @end|ng |rom @t@t@m@th@ethz@ch (Martin Maechler)
Date: Tue, 4 Jun 2019 17:50:02 +0200
Subject: [Rd] Trivial error in documentation
In-Reply-To: <5bd8945c-376e-7523-1ecb-48fbd58914a8@auckland.ac.nz>
References: <5bd8945c-376e-7523-1ecb-48fbd58914a8@auckland.ac.nz>
Message-ID: <23798.37674.263072.874342@stat.math.ethz.ch>

>>>>> David Scott 
>>>>>     on Tue, 4 Jun 2019 12:32:03 +1200 writes:

    > This must have been there for a while>
    > In the datasets package, the help for airquality says:

    > A data frame with 154 observations on 6 variables.

    > But:

    >> str(airquality)
    > 'data.frame':??? 153 obs. of? 6 variables:
    > ?$ Ozone? : int? 41 36 12 18 NA 28 23 19 8 NA ...
    > ?$ Solar.R: int? 190 118 149 313 NA NA 299 99 19 194 ...
    > ?$ Wind?? : num? 7.4 8 12.6 11.5 14.3 14.9 8.6 13.8 20.1 8.6 ...
    > ?$ Temp?? : int? 67 72 74 62 56 66 65 59 61 69 ...
    > ?$ Month? : int? 5 5 5 5 5 5 5 5 5 5 ...
    > ?$ Day??? : int? 1 2 3 4 5 6 7 8 9 10 ...


    > Regards
    > David Scott

Thank you, David!
Already fixed in the sources (R-devel & R-patched).

Best,
Martin


From |uc@r @end|ng |rom |edor@project@org  Tue Jun  4 18:06:34 2019
From: |uc@r @end|ng |rom |edor@project@org (=?UTF-8?Q?I=C3=B1aki_Ucar?=)
Date: Tue, 4 Jun 2019 18:06:34 +0200
Subject: [Rd] Offer zip builds
In-Reply-To: <CAAXzdLVpQpPemiM3+Lr=_mVs+XRNuLMq-oKRd_Rxmny7nG3Z_A@mail.gmail.com>
References: <5cf33c4e.1c69fb81.66223.ed3b@mx.google.com>
 <CAB8pepxBjuvgRsECfRgF6vomN+m+WTVAZftKHQPc4LELcfjcWA@mail.gmail.com>
 <077E185D-AE99-442F-9DA1-6119227DE101@me.com>
 <CAAXzdLXpXXs0meVWdMOVoxhyfDDSQnyuEEi_XBzivdGDR7jf1A@mail.gmail.com>
 <204E367A-8817-4C4D-9FEE-1A9E88929417@me.com>
 <CAAXzdLVpQpPemiM3+Lr=_mVs+XRNuLMq-oKRd_Rxmny7nG3Z_A@mail.gmail.com>
Message-ID: <CALEXWq2_QpiREMR4p7Q9BqNDitZUCNqVbETgt==uACSSWByKjw@mail.gmail.com>

FWIW, innoextract extracts the contents of the installer just fine.

I?aki

On Tue, 4 Jun 2019 at 17:40, Steven Penny <svnpenn at gmail.com> wrote:
>
> On Mon, Jun 3, 2019 at 6:54 PM Marc Schwartz wrote:
> > I am on macOS primarily, albeit, I have run both Windows and Linux routinely
> > in years past.
>
> With all due respect, then you have no business in this thread.
>
> > That being said, these days, I do run Windows 10 under a Parallels VM on
> > macOS, as I have a single commercial application that I need to run for
> > clients now and then, and it sadly only runs on a real Windows install (e.g.
> > not with Wine).
>
> Further demonstrating my point. You run Windows in a virtual machine, meaning
> even if you encountered some bad installer, you could just revert to a snapshot
> or similar.
>
> > To your points:
> >
> > [bunch of links]
>
> I am sorry if I miscommunicated, I didnt and dont wish to be convinced about how
> well behaved R installer is. I wish for R to offer zip builds. Many other
> programming languages do:
>
> - http://strawberryperl.com/releases.html
> - https://dotnet.microsoft.com/download/dotnet-core/2.2
> - https://golang.org/dl
> - https://nim-lang.org/install_windows.html
> - https://python.org/downloads/release/python-373
> - https://windows.php.net/download
>
> As I see it, the question isnt "should R offer zip builds", its "why isnt R
> offering zip builds".
>
> > Unless you can make the case to them to expend the finite resources that they
> > have to support this as part of each version release process, in light of the
> > prior discussions, it is not clear that this appears to be a priority.
>
> Thats the point of my original post. If they choose to continue with only EXE,
> I will just keep using other programming languages. So you could see how it
> might be in R interest to offer this, as no zip builds might be one of the
> reasons people avoid the language.
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel



-- 
I?aki ?car


From m@ech|er @end|ng |rom @t@t@m@th@ethz@ch  Tue Jun  4 18:08:27 2019
From: m@ech|er @end|ng |rom @t@t@m@th@ethz@ch (Martin Maechler)
Date: Tue, 4 Jun 2019 18:08:27 +0200
Subject: [Rd] 
 Converting non-32-bit integers from python to R to use bit64:
 reticulate
In-Reply-To: <CAJXDcw1oP51CdTqRLvOCNGPze2mS3Y+df3SUfO=bwsHRb3nzfg@mail.gmail.com>
References: <CAJXDcw3jQd2B+hvfXuUUeczx=mmtw0MA_Udaesd-UgM+spyGJw@mail.gmail.com>
 <CAD4oTHH_ixXYEk1OEuFq_yJf83sDYmShbZ1nPGFovRvy-XZPnw@mail.gmail.com>
 <CAJXDcw1V=2Z0BM31Ovc5SfiUEotuHoQRqWWi5z-8UfRg2qkM5w@mail.gmail.com>
 <23794.42957.74307.509821@stat.math.ethz.ch>
 <CAJXDcw1oP51CdTqRLvOCNGPze2mS3Y+df3SUfO=bwsHRb3nzfg@mail.gmail.com>
Message-ID: <23798.38779.375414.460468@stat.math.ethz.ch>

>>>>> Juan Telleria Ruiz de Aguirre 
>>>>>     on Mon, 3 Jun 2019 06:50:17 +0200 writes:

    > Thank you Martin for giving to know and developing 'Rmpfr' library for
    > unlimited size integers (GNU C GMP) and arbitrary precision floats (GNU C
    > MPFR):

    > https://cran.r-project.org/package=Rmpfr

    > My question is: In the long term (For R3.7.0 or R3.8.0):

    > Does it have sense that CMP substitutes INTSXP, and MPFR substitutes
    > REALSXP code? With this we would achieve that an integer is always an
    > integer, and a numeric double precision float always a numeric double
    > precision float, without sometimes casting underneath.

    > And would the R Community / R Ordinary Members would be willing to help R
    > Core on such implementation (If has sense, and wants to be adopted)?

No, such a change has "no sense" and hence won't be adopted (in
this form):

- INTSXP and REALSXP are part of the C API of R, and are well defined.
  Changing them will almost surely break 100s and by
  dependencies, probably 1000s of existing R packages.

- I'm sure Python and other system do have fixed size "double
  precision" vectors, because that's how you interface with all
  pre-existing computational libraries,
  and I am almost sure that support of arbitrary long integer
  (or double) is via another class/type.

- I know that Julia has adopted these (GMP and MPFR I think)
  types and nicely interfaces them on a relatively "base" level.
  With their nice class hierarchy (and very nice "S4 like" multi-argument
  method dispatch for *all* functions) it can look quite
  seemless for the user to work with these extended classes, but
  they are not all identical to the basic "real"/"double" or "integer" classes.
  
- I'm not the expert here (but there are not so many experts
  ..), but I'm pretty sure that adding new "basic types" in the
  underlying C level seems not at all easy for R.  It would mean a big
  break in all back compatibility -- which is conceivable --
  and *may* also need a big rewrite of much of the R code base
  which seems less conceivable in the mid term (2-3 years; long
  term: > 5 years).


    > Thank you all! :)

You are welcome.

I think we should close this thread here,  unless some real
experts join.

Martin


From |uke-t|erney @end|ng |rom u|ow@@edu  Tue Jun  4 18:52:57 2019
From: |uke-t|erney @end|ng |rom u|ow@@edu (Tierney, Luke)
Date: Tue, 4 Jun 2019 16:52:57 +0000
Subject: [Rd] [External] undefined symbol errors when compiling package
 using ALTREP API
In-Reply-To: <CACdkz5-3-Z+YqoMoEwC6LPYFxw_NDRHOQG7x3ymai=PU7OjOoA@mail.gmail.com>
References: <CACdkz5-3-Z+YqoMoEwC6LPYFxw_NDRHOQG7x3ymai=PU7OjOoA@mail.gmail.com>
Message-ID: <alpine.DEB.2.21.1906041150200.2805@luke-Latitude-7480>

On Tue, 4 Jun 2019, Mark Klik wrote:

> Hello,
>
> I'm developing a package (lazyvec) that makes full use of the ALTREP
> framework (R >= 3.6.0).
> One application of the package is to wrap existing ALTREP vectors in a new
> ALTREP vector and pass all calls from R to the contained object. The
> purpose of this is to provide a diagnostic framework for working with
> ALTREP vectors and show information about internal calls.
>
> The package builds on Windows and OSX but fails to build on Linux as can be
> seen from the link to the Travis build:
> https://travis-ci.org/fstpackage/lazyvec/jobs/539442806
>
> The reason of build failure is that many ALTREP methods generate 'undefined
> symbol' errors upon building the package (on Linux). I've checked the R
> source code and the undefined symbols seems to be related to the
> 'attribute_hidden' before the function definition. For example, the method
> 'ALTVEC_EXTRACT_SUBSET' is defined as:
>
> SEXP attribute_hidden ALTVEC_EXTRACT_SUBSET(SEXP x, SEXP indx, SEXP call)
>
> My question is why these differences between Windows / OSX and Linux exist
> and if they are intentional?

It is intentional that this not be part of the public API. This is
true of almost all functions with an ALTREP prefix. You need a
different approach that avoids using these directly.

Best,

luke

> Do I need special build parameters to make sure my package builds correctly
> on Linux?
>
> thanks for all the hard work!
>
> best,
> Mark
>
> PS: some additional info:
>
> package github repository: https://github.com/fstpackage/lazyvec
> AppVeyor package build logs:
> https://ci.appveyor.com/project/fstpackage/lazyvec
> Travis package build logs: https://travis-ci.org/fstpackage/lazyvec/builds
>
> 	[[alternative HTML version deleted]]
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>

-- 
Luke Tierney
Ralph E. Wareham Professor of Mathematical Sciences
University of Iowa                  Phone:             319-335-3386
Department of Statistics and        Fax:               319-335-3017
    Actuarial Science
241 Schaeffer Hall                  email:   luke-tierney at uiowa.edu
Iowa City, IA 52242                 WWW:  http://www.stat.uiowa.edu


From kev|nu@hey @end|ng |rom gm@||@com  Tue Jun  4 19:14:22 2019
From: kev|nu@hey @end|ng |rom gm@||@com (Kevin Ushey)
Date: Tue, 4 Jun 2019 10:14:22 -0700
Subject: [Rd] 
 Converting non-32-bit integers from python to R to use bit64:
 reticulate
In-Reply-To: <23798.38779.375414.460468@stat.math.ethz.ch>
References: <CAJXDcw3jQd2B+hvfXuUUeczx=mmtw0MA_Udaesd-UgM+spyGJw@mail.gmail.com>
 <CAD4oTHH_ixXYEk1OEuFq_yJf83sDYmShbZ1nPGFovRvy-XZPnw@mail.gmail.com>
 <CAJXDcw1V=2Z0BM31Ovc5SfiUEotuHoQRqWWi5z-8UfRg2qkM5w@mail.gmail.com>
 <23794.42957.74307.509821@stat.math.ethz.ch>
 <CAJXDcw1oP51CdTqRLvOCNGPze2mS3Y+df3SUfO=bwsHRb3nzfg@mail.gmail.com>
 <23798.38779.375414.460468@stat.math.ethz.ch>
Message-ID: <CAJXgQP1hb23f5gUq+=v__4FL3joA9L5MULKt539eqw_x28yUCg@mail.gmail.com>

I think a more productive conversation could be: what additions to R
would allow for user-defined types / classes that behave just like the
built-in vector types? As a motivating example, one cannot currently
use the 64bit integer objects from bit64 to subset data frames:

   > library(bit64); mtcars[as.integer64(1:3), ]
    [1] mpg  cyl  disp hp   drat wt   qsec vs   am   gear carb
   <0 rows> (or 0-length row.names)

I think ALTREP presents a possibility here, in that we could have a
64bit integer ALTREP object that behaves either like an INTSXP or
REALSXP as necessary. But I'm not sure how we would handle large 64bit
integer values which won't fit in either an INTSXP or REALSXP (in the
REALSXP case, precision could be lost for values > 2^53).

One possibility would be to allow ALTREP objects to have a chance at
managing dispatch in some methods, so that (for example) in e.g.
data[<ALTREP>], the ALTREP object has the opportunity to choose how
the data object should be subsetted. Of course, this implies wiring
through yet another dispatch mechanism through a category of primitive
/ internal functions, which could be expensive in terms of
implementation / maintenance... and I'm not sure if this could play
well with the existing S3 / S4 dispatch mechanisms.

FWIW, I think most commonly 64bit integers arise as e.g. database keys
/ IDs, and are typically just used for subsetting / reordering of data
as opposed to math. In these cases, converting the 64bit integers to a
character vector is typically a viable workaround, although it's much
slower.

Still, at least to me, it seems like there is likely a path forward
with ALTREP for 64bit integer vectors that can behave (more or less)
just like builtin R vectors.

Best,
Kevin

On Tue, Jun 4, 2019 at 9:34 AM Martin Maechler
<maechler at stat.math.ethz.ch> wrote:
>
> >>>>> Juan Telleria Ruiz de Aguirre
> >>>>>     on Mon, 3 Jun 2019 06:50:17 +0200 writes:
>
>     > Thank you Martin for giving to know and developing 'Rmpfr' library for
>     > unlimited size integers (GNU C GMP) and arbitrary precision floats (GNU C
>     > MPFR):
>
>     > https://cran.r-project.org/package=Rmpfr
>
>     > My question is: In the long term (For R3.7.0 or R3.8.0):
>
>     > Does it have sense that CMP substitutes INTSXP, and MPFR substitutes
>     > REALSXP code? With this we would achieve that an integer is always an
>     > integer, and a numeric double precision float always a numeric double
>     > precision float, without sometimes casting underneath.
>
>     > And would the R Community / R Ordinary Members would be willing to help R
>     > Core on such implementation (If has sense, and wants to be adopted)?
>
> No, such a change has "no sense" and hence won't be adopted (in
> this form):
>
> - INTSXP and REALSXP are part of the C API of R, and are well defined.
>   Changing them will almost surely break 100s and by
>   dependencies, probably 1000s of existing R packages.
>
> - I'm sure Python and other system do have fixed size "double
>   precision" vectors, because that's how you interface with all
>   pre-existing computational libraries,
>   and I am almost sure that support of arbitrary long integer
>   (or double) is via another class/type.
>
> - I know that Julia has adopted these (GMP and MPFR I think)
>   types and nicely interfaces them on a relatively "base" level.
>   With their nice class hierarchy (and very nice "S4 like" multi-argument
>   method dispatch for *all* functions) it can look quite
>   seemless for the user to work with these extended classes, but
>   they are not all identical to the basic "real"/"double" or "integer" classes.
>
> - I'm not the expert here (but there are not so many experts
>   ..), but I'm pretty sure that adding new "basic types" in the
>   underlying C level seems not at all easy for R.  It would mean a big
>   break in all back compatibility -- which is conceivable --
>   and *may* also need a big rewrite of much of the R code base
>   which seems less conceivable in the mid term (2-3 years; long
>   term: > 5 years).
>
>
>     > Thank you all! :)
>
> You are welcome.
>
> I think we should close this thread here,  unless some real
> experts join.
>
> Martin
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From ru|pb@rr@d@@ @end|ng |rom @@po@pt  Tue Jun  4 20:41:19 2019
From: ru|pb@rr@d@@ @end|ng |rom @@po@pt (Rui Barradas)
Date: Tue, 4 Jun 2019 19:41:19 +0100
Subject: [Rd] [r-devel] integrate over an infinite region produces wrong
 results depending on scaling
In-Reply-To: <aceaa0f9-fdf0-8df1-2d87-0e57dcf4aa2f@uni.lu>
References: <aceaa0f9-fdf0-8df1-2d87-0e57dcf4aa2f@uni.lu>
Message-ID: <7a47b463-3cf0-427a-8641-f7c6e1091735@sapo.pt>

Hello,

A solution is to use package cubature, both unscaled and scaled versions 
return the correct result, 3.575294.
But the performance penalty is BIG. This is because the number of 
evaluations is much bigger.

library(cubature)

cubintegrate(f, -Inf, 0, method = "hcubature")
#$integral
#[1] 3.575294
#
#$error
#[1] 1.494242e-07
#
#$neval
#[1] 375
#
#$returnCode
#[1] 0

cubintegrate(f, -Inf, 0, method = "hcubature", numstab = sc)
#$integral
#[1] 3.575294
#
#$error
#[1] 1.064195e-05
#
#$neval
#[1] 255
#
#$returnCode
#[1] 0



library(microbenchmark)

microbenchmark(
  base1 = integrate(f, -Inf, 0),
  base2 = integrate(f, -Inf, 0, numstab = sc),
  cuba1 = cubintegrate(f, -Inf, 0, method = "hcubature"),
  cuba2 = cubintegrate(f, -Inf, 0, method = "hcubature", numstab = sc)
)


Hope this helps,

Rui Barradas


?s 15:52 de 12/04/19, Andre? V. Kostyrka escreveu:
> Dear all,
> 
> This is the first time I am posting to the r-devel list. On 
> StackOverflow, they suggested that the strange behaviour of integrate() 
> was more bug-like. I am providing a short version of the question (full 
> one with plots: https://stackoverflow.com/q/55639401).
> 
> Suppose one wants integrate a function that is just a product of two 
> density functions (like gamma). The support of the random variable is 
> (-Inf, 0]. The scale parameter of the distribution is quite small 
> (around 0.01), so often, the standard integration routine would fail to 
> integrate a function that is non-zero on a very small section of the 
> negative line (like [-0.02, -0.01], where it takes huge values, and 
> almost 0 everywhere else). R?s integrate would often return the machine 
> epsilon as a result. So I stretch the function around the zero by an 
> inverse of the scale parameter, compute the integral, and then divide it 
> by the scale. Sometimes, this re-scaling also failed, so I did both if 
> the first result was very small.
> 
> Today when integration of the rescaled function suddenly yielded a value 
> of 1.5 instead of 3.5 (not even zero). The MWE is below.
> 
> cons <- -0.020374721416129591
> sc <- 0.00271245601724757383
> sh <- 5.704
> f <- function(x, numstab = 1) dgamma(cons - x * numstab, shape = sh, 
> scale = sc) * dgamma(-x * numstab, shape = sh, scale = sc) * numstab
> 
> curve(f, -0.06, 0, n = 501, main = "Unscaled f", bty = "n")
> curve(f(x, sc), -0.06 / sc, 0, n = 501, main = "Scaled f", bty = "n")
> 
> sum(f(seq(-0.08, 0, 1e-6))) * 1e-6 #? Checking by summation: 3.575294
> sum(f(seq(-30, 0, 1e-4), numstab = sc)) * 1e-4 # True value, 3.575294
> str(integrate(f, -Inf, 0)) # Gives 3.575294
> # $ value?????? : num 3.58
> # $ abs.error?? : num 1.71e-06
> # $ subdivisions: int 10
> str(integrate(f, -Inf, 0, numstab = sc))
> # $ value?????? : num 1.5 # What?!
> # $ abs.error?? : num 0.000145 # What?!
> # $ subdivisions: int 2
> 
> It stop at just two subdivisions! The problem is, I cannot try various 
> stabilising multipliers for the function because I have to compute this 
> integral thousands of times for thousands of parameter values on 
> thousands of sample windows for hundreds on models, so even in the 
> super-computer cluster, this takes weeks. Besides that, reducing the 
> rel.tol just to 1e-5 or 1e-6, helped a bit, but I am not sure whether 
> this guarantees success (and reducing it to 1e-7 slowed down the 
> computations in some cases). And I have looked at the Fortran code of 
> the quadrature just to see the integration rule, and was wondering.
> 
> How can I make sure that the integration routine will not produce such 
> wrong results for such a function, and the integration will still be fast?
> 
> Yours sincerely,
> Andre? V. Kostyrka
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From m@rkk||k @end|ng |rom gm@||@com  Tue Jun  4 23:21:42 2019
From: m@rkk||k @end|ng |rom gm@||@com (Mark Klik)
Date: Tue, 4 Jun 2019 23:21:42 +0200
Subject: [Rd] [External] undefined symbol errors when compiling package
 using ALTREP API
In-Reply-To: <alpine.DEB.2.21.1906041150200.2805@luke-Latitude-7480>
References: <CACdkz5-3-Z+YqoMoEwC6LPYFxw_NDRHOQG7x3ymai=PU7OjOoA@mail.gmail.com>
 <alpine.DEB.2.21.1906041150200.2805@luke-Latitude-7480>
Message-ID: <CACdkz5-e09yPjvrP7Xo59DGeJTY_LU2NrMzxLunsYrVfAhSvbA@mail.gmail.com>

thanks for clearing that up, so these methods are actually not meant to be
exported on Windows and OSX?
Some of the ALTREP methods that now use 'attribute_hidden' would be very
useful to packages that aim to be ALTREP aware, should the currently
(exported) API be considered final?

thanks  for your time & best,
Mark

On Tue, Jun 4, 2019 at 6:52 PM Tierney, Luke <luke-tierney at uiowa.edu> wrote:

> On Tue, 4 Jun 2019, Mark Klik wrote:
>
> > Hello,
> >
> > I'm developing a package (lazyvec) that makes full use of the ALTREP
> > framework (R >= 3.6.0).
> > One application of the package is to wrap existing ALTREP vectors in a
> new
> > ALTREP vector and pass all calls from R to the contained object. The
> > purpose of this is to provide a diagnostic framework for working with
> > ALTREP vectors and show information about internal calls.
> >
> > The package builds on Windows and OSX but fails to build on Linux as can
> be
> > seen from the link to the Travis build:
> > https://travis-ci.org/fstpackage/lazyvec/jobs/539442806
> >
> > The reason of build failure is that many ALTREP methods generate
> 'undefined
> > symbol' errors upon building the package (on Linux). I've checked the R
> > source code and the undefined symbols seems to be related to the
> > 'attribute_hidden' before the function definition. For example, the
> method
> > 'ALTVEC_EXTRACT_SUBSET' is defined as:
> >
> > SEXP attribute_hidden ALTVEC_EXTRACT_SUBSET(SEXP x, SEXP indx, SEXP call)
> >
> > My question is why these differences between Windows / OSX and Linux
> exist
> > and if they are intentional?
>
> It is intentional that this not be part of the public API. This is
> true of almost all functions with an ALTREP prefix. You need a
> different approach that avoids using these directly.
>
> Best,
>
> luke
>
> > Do I need special build parameters to make sure my package builds
> correctly
> > on Linux?
> >
> > thanks for all the hard work!
> >
> > best,
> > Mark
> >
> > PS: some additional info:
> >
> > package github repository: https://github.com/fstpackage/lazyvec
> > AppVeyor package build logs:
> > https://ci.appveyor.com/project/fstpackage/lazyvec
> > Travis package build logs:
> https://travis-ci.org/fstpackage/lazyvec/builds
> >
> >       [[alternative HTML version deleted]]
> >
> > ______________________________________________
> > R-devel at r-project.org mailing list
> > https://stat.ethz.ch/mailman/listinfo/r-devel
> >
>
> --
> Luke Tierney
> Ralph E. Wareham Professor of Mathematical Sciences
> University of Iowa                  Phone:             319-335-3386
> Department of Statistics and        Fax:               319-335-3017
>     Actuarial Science
> 241 Schaeffer Hall                  email:   luke-tierney at uiowa.edu
> Iowa City, IA 52242                 WWW:  http://www.stat.uiowa.edu
>

	[[alternative HTML version deleted]]


From g@bembecker @end|ng |rom gm@||@com  Tue Jun  4 23:50:43 2019
From: g@bembecker @end|ng |rom gm@||@com (Gabriel Becker)
Date: Tue, 4 Jun 2019 14:50:43 -0700
Subject: [Rd] [External] undefined symbol errors when compiling package
 using ALTREP API
In-Reply-To: <CACdkz5-e09yPjvrP7Xo59DGeJTY_LU2NrMzxLunsYrVfAhSvbA@mail.gmail.com>
References: <CACdkz5-3-Z+YqoMoEwC6LPYFxw_NDRHOQG7x3ymai=PU7OjOoA@mail.gmail.com>
 <alpine.DEB.2.21.1906041150200.2805@luke-Latitude-7480>
 <CACdkz5-e09yPjvrP7Xo59DGeJTY_LU2NrMzxLunsYrVfAhSvbA@mail.gmail.com>
Message-ID: <CAD4oTHHWLyqaRxaRzaJ95BS7DnE-JSKP+9TxXziHJkrq1VKj7Q@mail.gmail.com>

Hi Mark,

So depending pretty strongly on what you mean by "ALTREP aware", packages
aren't necessarily supposed to be ALTREP aware. What I mean by this is that
as of right now, ALTREP objects are designed to be interacted with by
non-ALTREP-implementing package code, *more-or-less *exactly as standard
(non-AR) SEXPs are: via the published C API. The more or less comes from
the fact that in some cases, doing things that are good ideas on standard
SEXPS will work, but may not be a good idea for ALTREPs.

The most "low-hanging-fruit" example of something that was best practice
for standard vectors but is not a good idea for ALTREP vectors is grabbing
a DATAPTR and iterating over the values without modification in a tight
loop.  This will work (absent allocation  failure or, I suppose, the ALTREP
being specifically designed to refuse to give you a full DATAPTR), but with
ALTREP in place its no longer what you want to do.

That said, you don't want to check whether something is an ALTREP yourself
and branch your code, what you want to do is use the ITERATE_BY_REGION
macro in R_ext/Itermacros.h for ALL SEXPs, which will be nearly as for
standard vectors and work safely for ALTREP vectors.

Basically any time you find yourself wanting to check if something is an
ALTREP and if so, call a specific ALT*_BLAH method, the intention is that
there should be a universal API point you can call which will work for both
types.

This is true, e.g., of INTEGER_IS_SORTED (which will always work and just
returns UNKNOWN_SORTEDNESS, ie INT_MIN, ie NA_INTEGER for non-ALTREPs).,
for REAL_GET_REGION, (which populates a double* with the requested values
for both standard and ALTREP REALSXPs), etc.

Does the above make sense?

If you feel a universal API point is missing, you can raise that here,
though I can't promise that will ultimately result in the method being
added.

Best,
~G

On Tue, Jun 4, 2019 at 2:22 PM Mark Klik <markklik at gmail.com> wrote:

> thanks for clearing that up, so these methods are actually not meant to be
> exported on Windows and OSX?
> Some of the ALTREP methods that now use 'attribute_hidden' would be very
> useful to packages that aim to be ALTREP aware, should the currently
> (exported) API be considered final?
>
> thanks  for your time & best,
> Mark
>
> On Tue, Jun 4, 2019 at 6:52 PM Tierney, Luke <luke-tierney at uiowa.edu>
> wrote:
>
> > On Tue, 4 Jun 2019, Mark Klik wrote:
> >
> > > Hello,
> > >
> > > I'm developing a package (lazyvec) that makes full use of the ALTREP
> > > framework (R >= 3.6.0).
> > > One application of the package is to wrap existing ALTREP vectors in a
> > new
> > > ALTREP vector and pass all calls from R to the contained object. The
> > > purpose of this is to provide a diagnostic framework for working with
> > > ALTREP vectors and show information about internal calls.
> > >
> > > The package builds on Windows and OSX but fails to build on Linux as
> can
> > be
> > > seen from the link to the Travis build:
> > > https://travis-ci.org/fstpackage/lazyvec/jobs/539442806
> > >
> > > The reason of build failure is that many ALTREP methods generate
> > 'undefined
> > > symbol' errors upon building the package (on Linux). I've checked the R
> > > source code and the undefined symbols seems to be related to the
> > > 'attribute_hidden' before the function definition. For example, the
> > method
> > > 'ALTVEC_EXTRACT_SUBSET' is defined as:
> > >
> > > SEXP attribute_hidden ALTVEC_EXTRACT_SUBSET(SEXP x, SEXP indx, SEXP
> call)
> > >
> > > My question is why these differences between Windows / OSX and Linux
> > exist
> > > and if they are intentional?
> >
> > It is intentional that this not be part of the public API. This is
> > true of almost all functions with an ALTREP prefix. You need a
> > different approach that avoids using these directly.
> >
> > Best,
> >
> > luke
> >
> > > Do I need special build parameters to make sure my package builds
> > correctly
> > > on Linux?
> > >
> > > thanks for all the hard work!
> > >
> > > best,
> > > Mark
> > >
> > > PS: some additional info:
> > >
> > > package github repository: https://github.com/fstpackage/lazyvec
> > > AppVeyor package build logs:
> > > https://ci.appveyor.com/project/fstpackage/lazyvec
> > > Travis package build logs:
> > https://travis-ci.org/fstpackage/lazyvec/builds
> > >
> > >       [[alternative HTML version deleted]]
> > >
> > > ______________________________________________
> > > R-devel at r-project.org mailing list
> > > https://stat.ethz.ch/mailman/listinfo/r-devel
> > >
> >
> > --
> > Luke Tierney
> > Ralph E. Wareham Professor of Mathematical Sciences
> > University of Iowa                  Phone:             319-335-3386
> > Department of Statistics and        Fax:               319-335-3017
> >     Actuarial Science
> > 241 Schaeffer Hall                  email:   luke-tierney at uiowa.edu
> > Iowa City, IA 52242                 WWW:  http://www.stat.uiowa.edu
> >
>
>         [[alternative HTML version deleted]]
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>

	[[alternative HTML version deleted]]


From hp@ge@ @end|ng |rom |redhutch@org  Tue Jun  4 23:58:45 2019
From: hp@ge@ @end|ng |rom |redhutch@org (Pages, Herve)
Date: Tue, 4 Jun 2019 21:58:45 +0000
Subject: [Rd] R pkg install should fail for unsuccessful DLL copy on
 windows?
In-Reply-To: <CALK03d3C2GREMTmjVHDeLJQ0ck9Jae93q2n+tpS+w3ouFf62kA@mail.gmail.com>
References: <CALK03d2hj9Ae3=7RTt-KLK+zZZ_2b1RK6RHK=rBNrR1MbZrV=w@mail.gmail.com>
 <CAOO9MKUNCqx+x4=Ny-OyO9TFiqZifDn7_vKGR7m04fyVbnhjLA@mail.gmail.com>
 <CALK03d2kWF2NT-x0uOqbxriLMgKVatLfVEkxwUmkb6Zgnyy7OQ@mail.gmail.com>
 <35b31c30-cf83-1505-70ca-c6a90185dce5@fredhutch.org>
 <CALK03d3C2GREMTmjVHDeLJQ0ck9Jae93q2n+tpS+w3ouFf62kA@mail.gmail.com>
Message-ID: <3cdc71b4-116c-75f2-fffa-597a7ec1db3d@fredhutch.org>

On 5/31/19 08:41, Toby Hocking wrote:...
> In my opinion install.packages should stop with an error (instead of a
> warning) if this happens.

Totally agree with that.

Best,
H.

-- 
Herv? Pag?s

Program in Computational Biology
Division of Public Health Sciences
Fred Hutchinson Cancer Research Center
1100 Fairview Ave. N, M1-B514
P.O. Box 19024
Seattle, WA 98109-1024

E-mail: hpages at fredhutch.org
Phone:  (206) 667-5791
Fax:    (206) 667-1319

From m@rkk||k @end|ng |rom gm@||@com  Wed Jun  5 00:29:25 2019
From: m@rkk||k @end|ng |rom gm@||@com (Mark Klik)
Date: Wed, 5 Jun 2019 00:29:25 +0200
Subject: [Rd] [External] undefined symbol errors when compiling package
 using ALTREP API
In-Reply-To: <CAD4oTHHWLyqaRxaRzaJ95BS7DnE-JSKP+9TxXziHJkrq1VKj7Q@mail.gmail.com>
References: <CACdkz5-3-Z+YqoMoEwC6LPYFxw_NDRHOQG7x3ymai=PU7OjOoA@mail.gmail.com>
 <alpine.DEB.2.21.1906041150200.2805@luke-Latitude-7480>
 <CACdkz5-e09yPjvrP7Xo59DGeJTY_LU2NrMzxLunsYrVfAhSvbA@mail.gmail.com>
 <CAD4oTHHWLyqaRxaRzaJ95BS7DnE-JSKP+9TxXziHJkrq1VKj7Q@mail.gmail.com>
Message-ID: <CACdkz58ajb=CSxZY5ODavp6TqeUzwn91-vAhSRx3YmYzeF6XKw@mail.gmail.com>

Hi Gabriel,

thanks for your detailed explanation, that definitely clarifies the design
choices that were made in setting up the ALTREP framework and I can see how
those choices make sure existing code won't break.

My specific use-case for wanting to check whether a vector is an ALTREP is
the following: the fst package wraps an external C++ library (fstlib,
independent from R) that was made for high speed serialization of
dataframe's. Sequences are fairly common in dataframe's and I'm planning to
add the concept of a sequence to the (R-agnostic) fst format. When I can
detect, e.g. a 'compact_intseq' ALTREP vector and just retrieve it's 3
integer internal representation, serialization could be very fast.
Alternatively, as you describe, the vector needs to be expanded first
before serialization, which will actually be slower than using an already
expanded vector and can take a lot of RAM for large datasets.

So being able to make use of the internal representation of (a few of the)
base ALTREP vectors can be very interesting for (non-R) serialization
schemes.

thanks for your time!
Mark


On Tue, Jun 4, 2019 at 11:50 PM Gabriel Becker <gabembecker at gmail.com>
wrote:

> Hi Mark,
>
> So depending pretty strongly on what you mean by "ALTREP aware", packages
> aren't necessarily supposed to be ALTREP aware. What I mean by this is that
> as of right now, ALTREP objects are designed to be interacted with by
> non-ALTREP-implementing package code, *more-or-less *exactly as standard
> (non-AR) SEXPs are: via the published C API. The more or less comes from
> the fact that in some cases, doing things that are good ideas on standard
> SEXPS will work, but may not be a good idea for ALTREPs.
>
> The most "low-hanging-fruit" example of something that was best practice
> for standard vectors but is not a good idea for ALTREP vectors is grabbing
> a DATAPTR and iterating over the values without modification in a tight
> loop.  This will work (absent allocation  failure or, I suppose, the ALTREP
> being specifically designed to refuse to give you a full DATAPTR), but with
> ALTREP in place its no longer what you want to do.
>
> That said, you don't want to check whether something is an ALTREP yourself
> and branch your code, what you want to do is use the ITERATE_BY_REGION
> macro in R_ext/Itermacros.h for ALL SEXPs, which will be nearly as for
> standard vectors and work safely for ALTREP vectors.
>
> Basically any time you find yourself wanting to check if something is an
> ALTREP and if so, call a specific ALT*_BLAH method, the intention is that
> there should be a universal API point you can call which will work for both
> types.
>
> This is true, e.g., of INTEGER_IS_SORTED (which will always work and just
> returns UNKNOWN_SORTEDNESS, ie INT_MIN, ie NA_INTEGER for non-ALTREPs).,
> for REAL_GET_REGION, (which populates a double* with the requested values
> for both standard and ALTREP REALSXPs), etc.
>
> Does the above make sense?
>
> If you feel a universal API point is missing, you can raise that here,
> though I can't promise that will ultimately result in the method being
> added.
>
> Best,
> ~G
>
> On Tue, Jun 4, 2019 at 2:22 PM Mark Klik <markklik at gmail.com> wrote:
>
>> thanks for clearing that up, so these methods are actually not meant to be
>> exported on Windows and OSX?
>> Some of the ALTREP methods that now use 'attribute_hidden' would be very
>> useful to packages that aim to be ALTREP aware, should the currently
>> (exported) API be considered final?
>>
>> thanks  for your time & best,
>> Mark
>>
>> On Tue, Jun 4, 2019 at 6:52 PM Tierney, Luke <luke-tierney at uiowa.edu>
>> wrote:
>>
>> > On Tue, 4 Jun 2019, Mark Klik wrote:
>> >
>> > > Hello,
>> > >
>> > > I'm developing a package (lazyvec) that makes full use of the ALTREP
>> > > framework (R >= 3.6.0).
>> > > One application of the package is to wrap existing ALTREP vectors in a
>> > new
>> > > ALTREP vector and pass all calls from R to the contained object. The
>> > > purpose of this is to provide a diagnostic framework for working with
>> > > ALTREP vectors and show information about internal calls.
>> > >
>> > > The package builds on Windows and OSX but fails to build on Linux as
>> can
>> > be
>> > > seen from the link to the Travis build:
>> > > https://travis-ci.org/fstpackage/lazyvec/jobs/539442806
>> > >
>> > > The reason of build failure is that many ALTREP methods generate
>> > 'undefined
>> > > symbol' errors upon building the package (on Linux). I've checked the
>> R
>> > > source code and the undefined symbols seems to be related to the
>> > > 'attribute_hidden' before the function definition. For example, the
>> > method
>> > > 'ALTVEC_EXTRACT_SUBSET' is defined as:
>> > >
>> > > SEXP attribute_hidden ALTVEC_EXTRACT_SUBSET(SEXP x, SEXP indx, SEXP
>> call)
>> > >
>> > > My question is why these differences between Windows / OSX and Linux
>> > exist
>> > > and if they are intentional?
>> >
>> > It is intentional that this not be part of the public API. This is
>> > true of almost all functions with an ALTREP prefix. You need a
>> > different approach that avoids using these directly.
>> >
>> > Best,
>> >
>> > luke
>> >
>> > > Do I need special build parameters to make sure my package builds
>> > correctly
>> > > on Linux?
>> > >
>> > > thanks for all the hard work!
>> > >
>> > > best,
>> > > Mark
>> > >
>> > > PS: some additional info:
>> > >
>> > > package github repository: https://github.com/fstpackage/lazyvec
>> > > AppVeyor package build logs:
>> > > https://ci.appveyor.com/project/fstpackage/lazyvec
>> > > Travis package build logs:
>> > https://travis-ci.org/fstpackage/lazyvec/builds
>> > >
>> > >       [[alternative HTML version deleted]]
>> > >
>> > > ______________________________________________
>> > > R-devel at r-project.org mailing list
>> > > https://stat.ethz.ch/mailman/listinfo/r-devel
>> > >
>> >
>> > --
>> > Luke Tierney
>> > Ralph E. Wareham Professor of Mathematical Sciences
>> > University of Iowa                  Phone:             319-335-3386
>> > Department of Statistics and        Fax:               319-335-3017
>> >     Actuarial Science
>> > 241 Schaeffer Hall                  email:   luke-tierney at uiowa.edu
>> > Iowa City, IA 52242                 WWW:  http://www.stat.uiowa.edu
>> >
>>
>>         [[alternative HTML version deleted]]
>>
>> ______________________________________________
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>
>

	[[alternative HTML version deleted]]


From m@ech|er @end|ng |rom @t@t@m@th@ethz@ch  Wed Jun  5 09:20:02 2019
From: m@ech|er @end|ng |rom @t@t@m@th@ethz@ch (Martin Maechler)
Date: Wed, 5 Jun 2019 09:20:02 +0200
Subject: [Rd] Offer zip builds
In-Reply-To: <CALEXWq2_QpiREMR4p7Q9BqNDitZUCNqVbETgt==uACSSWByKjw@mail.gmail.com>
References: <5cf33c4e.1c69fb81.66223.ed3b@mx.google.com>
 <CAB8pepxBjuvgRsECfRgF6vomN+m+WTVAZftKHQPc4LELcfjcWA@mail.gmail.com>
 <077E185D-AE99-442F-9DA1-6119227DE101@me.com>
 <CAAXzdLXpXXs0meVWdMOVoxhyfDDSQnyuEEi_XBzivdGDR7jf1A@mail.gmail.com>
 <204E367A-8817-4C4D-9FEE-1A9E88929417@me.com>
 <CAAXzdLVpQpPemiM3+Lr=_mVs+XRNuLMq-oKRd_Rxmny7nG3Z_A@mail.gmail.com>
 <CALEXWq2_QpiREMR4p7Q9BqNDitZUCNqVbETgt==uACSSWByKjw@mail.gmail.com>
Message-ID: <23799.27938.632385.316455@stat.math.ethz.ch>

>>>>> I?aki Ucar 
>>>>>     on Tue, 4 Jun 2019 18:06:34 +0200 writes:

    > FWIW, innoextract extracts the contents of the installer just fine.

    > I?aki

Thank you, I?aki

For me too.  On the Windows server (I almost only use for testing R and
ESS), I've always been happy I could install *several* versions
of R (and use them easily simultaneously with ESS in the same
emacs instance running).

Maybe the R project is rather the example the other projects should take:
It costs much less maintainer time (including documenting,
helping users to solve problems, ... da da da) to provide it in this
one form which *does* provide the flexibility of installing
anywhere on your computer and *is* based on FOSS.

    > On Tue, 4 Jun 2019 at 17:40, Steven Penny <svnpenn at gmail.com> wrote:
    >> 
    >> On Mon, Jun 3, 2019 at 6:54 PM Marc Schwartz wrote:
    >> > I am on macOS primarily, albeit, I have run both Windows and Linux routinely
    >> > in years past.
    >> 
    >> With all due respect, then you have no business in this thread.
    >> 
    >> > That being said, these days, I do run Windows 10 under a Parallels VM on
    >> > macOS, as I have a single commercial application that I need to run for
    >> > clients now and then, and it sadly only runs on a real Windows install (e.g.
    >> > not with Wine).
    >> 
    >> Further demonstrating my point. You run Windows in a virtual machine, meaning
    >> even if you encountered some bad installer, you could just revert to a snapshot
    >> or similar.
    >> 
    >> > To your points:
    >> >
    >> > [bunch of links]
    >> 
    >> I am sorry if I miscommunicated, I didnt and dont wish to be convinced about how
    >> well behaved R installer is. 
    >> I wish for R to offer zip builds.

Are you volunteering to do this for every release? .. on an
ongoing basis ..  unpaid ?

To mention examples of BIG BIG company products such as Microsoft
or Google (below) is really ridiculous.
They have lots of money to spend and pay many many work hours to
pay.

We don't want to:  Given such (and potentially many more similar) e-mail
threads plus the issues mentioned above (plus Virus scanners,
plus broken file transfers less easily detected than with an
*.exe, plus ...),
this is mainly a big time sink with an epsilon benefit.

As Duncan Murdoch explained nicel, you may do it.

Martin Maechler
ETH Zurich and R Core Team



    >> Many other programming languages do:
    >> 
    >> - http://strawberryperl.com/releases.html
    >> - https://dotnet.microsoft.com/download/dotnet-core/2.2
    >> - https://golang.org/dl
    >> - https://nim-lang.org/install_windows.html
    >> - https://python.org/downloads/release/python-373
    >> - https://windows.php.net/download
    >> 
    >> As I see it, the question isnt "should R offer zip builds", its "why isnt R
    >> offering zip builds".
    >> 
    >> > Unless you can make the case to them to expend the finite resources that they
    >> > have to support this as part of each version release process, in light of the
    >> > prior discussions, it is not clear that this appears to be a priority.
    >> 
    >> Thats the point of my original post. If they choose to continue with only EXE,
    >> I will just keep using other programming languages. So you could see how it
    >> might be in R interest to offer this, as no zip builds might be one of the
    >> reasons people avoid the language.
    >> 
    >> ______________________________________________
    >> R-devel at r-project.org mailing list
    >> https://stat.ethz.ch/mailman/listinfo/r-devel



    > -- 
    > I?aki ?car

    > ______________________________________________
    > R-devel at r-project.org mailing list
    > https://stat.ethz.ch/mailman/listinfo/r-devel


From tom@@@k@||ber@ @end|ng |rom gm@||@com  Wed Jun  5 10:18:25 2019
From: tom@@@k@||ber@ @end|ng |rom gm@||@com (Tomas Kalibera)
Date: Wed, 5 Jun 2019 10:18:25 +0200
Subject: [Rd] MacOS parallel::makeCluster fails
In-Reply-To: <BA251FC4-C0F3-4473-834C-72B147F63C26@contoso.com>
References: <BA251FC4-C0F3-4473-834C-72B147F63C26@contoso.com>
Message-ID: <fedc97a1-e407-b427-a7f3-225a91fae27e@gmail.com>

Hi Dominik,

from the output, the master process could not "listen" on the port where 
it expects a connection from the worker. We need to find out why. I'd 
recommend first to create a minimal reproducible example (and one that 
does not use future, only parallel, and a minimal number of threads, 
ideally just 2). Then I'd recommend to check if the problem still exists 
with R-devel. Then I'd check if the problem happens in all invocations, 
even after reboots, on a clean system, without many running applications 
- if it does, this is good news. Then you could post such example and we 
could help more - if we can reproduce on our system indeed we could 
debug, if not there could at least be more directed advice on how to 
debug on your side. What I'd do myself if I could reproduce on my system 
would be instrument R around Sock_listen in internet module to see 
exactly what has failed with which error. Maybe dtruss would help too, 
but instrumenting may be easier. The earlier problem you mention has 
never been diagnosed (it was only intermittent on the reporter's 
machine, we could not reproduce on our systems, and despite a lot of 
effort on our side and on the reporter's, we could not reliably 
diagnose). In principle, it could be some race condition in R (one has 
been fixed since the previous report), but especially if it is 
deterministic it would more likely be some OS limit on your system. You 
could of course try playing with OS limits, on the number of open files, 
etc, with changing the port number (port= option), etc, but I would 
recommend the systematic approach of debugging the cause.

Best
Tomas

On 6/4/19 10:45 AM, Dominik Leutnant wrote:
> Hi all,
>
> The call parallel::makeCluster(1L) hangs infinitely on my MacOS machine which seems to be already reported by some people (e.g., https://stat.ethz.ch/pipermail/r-devel/2018-February/075565.html).
> However, the solutions posted on SO, GH or R-devel do not work in my case.
>
> So far, I unsuccessfully tested ?
>
>    1.  Couple of reboots
>    2.  Adding 192.0.0.1 to /etc/hosts
>    3.  Using R.app instead of RStudio.app
>    4.  Turn off the firewall
>
> Following Hendriks advice, ?cl <- future::makeClusterPSOCK(1L, verbose = TRUE, timeout = 60)? gives (note: without adding the timeout parameter, R just hangs):
>> Sys.setenv(LANGUAGE='en')
>> cl <- future::makeClusterPSOCK(1L, verbose = TRUE, timeout = 60)
> [local output] Workers: [n = 1] ?localhost?
> [local output] Base port: 11867
> [local output] Creating node 1 of 1 ...
> [local output] - setting up node
> Testing if worker's PID can be inferred: ?'/Library/Frameworks/R.framework/Resources/bin/Rscript' -e 'try(cat(Sys.getpid(),file="/var/folders/5s/kgm05t2s0_52gz1s445mnlgw0000gn/T//RtmpZp1RX6/future.parent=835.3434fe0c5c6.pid"), silent = TRUE)' -e "file.exists('/var/folders/5s/kgm05t2s0_52gz1s445mnlgw0000gn/T//RtmpZp1RX6/future.parent=835.3434fe0c5c6.pid')"?
> - Possible to infer worker's PID: TRUE
> [local output] Starting worker #1 on ?localhost?: '/Library/Frameworks/R.framework/Resources/bin/Rscript' --default-packages=datasets,utils,grDevices,graphics,stats,methods -e 'try(cat(Sys.getpid(),file="/var/folders/5s/kgm05t2s0_52gz1s445mnlgw0000gn/T//RtmpZp1RX6/future.parent=835.3434fe0c5c6.pid"), silent = TRUE)' -e 'parallel:::.slaveRSOCK()' MASTER=localhost PORT=11867 OUT=/dev/null TIMEOUT=60 XDR=TRUE
> [local output] - Exit code of system() call: 0
> [local output] Waiting for worker #1 on ?localhost? to connect back
> [local output] Detected a warning from socketConnection(): ?problem in listening on this socket?
> Killing worker process (PID 903) if still alive
> Worker (PID 903) was successfully killed: TRUE
> Error in socketConnection("localhost", port = port, server = TRUE, blocking = TRUE,  :
>    Failed to launch and connect to R worker on local machine ?localhost? from local machine ?Dominiks-MBP.local?.
> * The error produced by socketConnection() was: ?cannot open the connection?
> * In addition, socketConnection() produced 1 warning(s):
>     - Warning #1: ?problem in listening on this socket?
> * The localhost socket connection that failed to connect to the R worker used port 11867 using a communication timeout of 60 seconds and a connection timeout of 120 seconds.
> * Worker launch call: '/Library/Frameworks/R.framework/Resources/bin/Rscript' --default-packages=datasets,utils,grDevices,graphics,stats,methods -e 'try(cat(Sys.getpid(),file="/var/folders/5s/kgm05t2s0_52gz1s445mnlgw0000gn/T//RtmpZp1RX6/future.parent=835.3434fe0c5c6.pid"), silent = TRUE)' -e 'parallel:::.slaveRSOCK()' MASTER=localhost PORT=11867 OUT=/dev/null TIMEOUT=60 XDR=TRUE.
> * Worker (PID 903) was successfully killed: TRUE
> * Troubleshooting suggestions:
>     - Suggestion #1: Set 'outfile=NULL' to see output from worker.
> In addition: Warning message:
> In socketConnection("localhost", port = port, server = TRUE, blocking = TRUE,  :
>    problem in listening on this socket
>
> My session looks like:
>> sessionInfo()
> R version 3.6.0 (2019-04-26)
> Platform: x86_64-apple-darwin15.6.0 (64-bit)
> Running under: macOS Mojave 10.14.5
>
> Matrix products: default
> BLAS:   /Library/Frameworks/R.framework/Versions/3.6/Resources/lib/libRblas.0.dylib
> LAPACK: /Library/Frameworks/R.framework/Versions/3.6/Resources/lib/libRlapack.dylib
>
> Random number generation:
> RNG:     Mersenne-Twister
>   Normal:  Inversion
>   Sample:  Rounding
>
> locale:
> [1] de_DE.UTF-8/de_DE.UTF-8/de_DE.UTF-8/C/de_DE.UTF-8/de_DE.UTF-8
>
> attached base packages:
> [1] stats     graphics  grDevices utils     datasets  methods   base
>
> loaded via a namespace (and not attached):
> [1] compiler_3.6.0
> Any help is greatly appreciated.
> Best regards
> Dominik
>
> Dr. Dominik Leutnant
>
> Muenster University of Applied Sciences
> Department of Civil Engineering
> Institute for Infrastucture?Water?Resources?Environment (IWARU)
> WG Urban Hydrology and Water Management
> Corrensstr. 25
> FRG-48149 M?nster, Germany
>
> Tel.:  +49 (0) 251/83-65274
> Fax:  +49 (0) 251/83-65915
> Mail:  leutnant at fh-muenster.de<mailto:leutnant at fh-muenster.de>
> Web: https://www.fh-muenster.de/
>
> 	[[alternative HTML version deleted]]
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From |uke-t|erney @end|ng |rom u|ow@@edu  Wed Jun  5 18:02:32 2019
From: |uke-t|erney @end|ng |rom u|ow@@edu (Tierney, Luke)
Date: Wed, 5 Jun 2019 16:02:32 +0000
Subject: [Rd] [External] undefined symbol errors when compiling package
 using ALTREP API
In-Reply-To: <CACdkz58ajb=CSxZY5ODavp6TqeUzwn91-vAhSRx3YmYzeF6XKw@mail.gmail.com>
References: <CACdkz5-3-Z+YqoMoEwC6LPYFxw_NDRHOQG7x3ymai=PU7OjOoA@mail.gmail.com>
 <alpine.DEB.2.21.1906041150200.2805@luke-Latitude-7480>
 <CACdkz5-e09yPjvrP7Xo59DGeJTY_LU2NrMzxLunsYrVfAhSvbA@mail.gmail.com>
 <CAD4oTHHWLyqaRxaRzaJ95BS7DnE-JSKP+9TxXziHJkrq1VKj7Q@mail.gmail.com>
 <CACdkz58ajb=CSxZY5ODavp6TqeUzwn91-vAhSRx3YmYzeF6XKw@mail.gmail.com>
Message-ID: <alpine.DEB.2.21.1906051048130.3079@luke-Latitude-7480>

For now you can use

R_altrep_inherits(x, R_compact_intseq_class)

The variable R_compact_intseq_class should currently be visible to
packages on all platforms, though that may change if we eventually
provide a string-based lookup mechanism, e.g. somehting like

R_find_altrep_class("compact_intseq", "base")

Best,

luke


On Tue, 4 Jun 2019, Mark Klik wrote:

> Hi Gabriel,
>
> thanks for your detailed explanation, that definitely clarifies the design
> choices that were made in setting up the ALTREP framework and I can see how
> those choices make sure existing code won't break.
>
> My specific use-case for wanting to check whether a vector is an ALTREP is
> the following: the fst package wraps an external C++ library (fstlib,
> independent from R) that was made for high speed serialization of
> dataframe's. Sequences are fairly common in dataframe's and I'm planning to
> add the concept of a sequence to the (R-agnostic) fst format. When I can
> detect, e.g. a 'compact_intseq' ALTREP vector and just retrieve it's 3
> integer internal representation, serialization could be very fast.
> Alternatively, as you describe, the vector needs to be expanded first
> before serialization, which will actually be slower than using an already
> expanded vector and can take a lot of RAM for large datasets.
>
> So being able to make use of the internal representation of (a few of the)
> base ALTREP vectors can be very interesting for (non-R) serialization
> schemes.
>
> thanks for your time!
> Mark
>
>
> On Tue, Jun 4, 2019 at 11:50 PM Gabriel Becker <gabembecker at gmail.com>
> wrote:
>
>> Hi Mark,
>>
>> So depending pretty strongly on what you mean by "ALTREP aware", packages
>> aren't necessarily supposed to be ALTREP aware. What I mean by this is that
>> as of right now, ALTREP objects are designed to be interacted with by
>> non-ALTREP-implementing package code, *more-or-less *exactly as standard
>> (non-AR) SEXPs are: via the published C API. The more or less comes from
>> the fact that in some cases, doing things that are good ideas on standard
>> SEXPS will work, but may not be a good idea for ALTREPs.
>>
>> The most "low-hanging-fruit" example of something that was best practice
>> for standard vectors but is not a good idea for ALTREP vectors is grabbing
>> a DATAPTR and iterating over the values without modification in a tight
>> loop.  This will work (absent allocation  failure or, I suppose, the ALTREP
>> being specifically designed to refuse to give you a full DATAPTR), but with
>> ALTREP in place its no longer what you want to do.
>>
>> That said, you don't want to check whether something is an ALTREP yourself
>> and branch your code, what you want to do is use the ITERATE_BY_REGION
>> macro in R_ext/Itermacros.h for ALL SEXPs, which will be nearly as for
>> standard vectors and work safely for ALTREP vectors.
>>
>> Basically any time you find yourself wanting to check if something is an
>> ALTREP and if so, call a specific ALT*_BLAH method, the intention is that
>> there should be a universal API point you can call which will work for both
>> types.
>>
>> This is true, e.g., of INTEGER_IS_SORTED (which will always work and just
>> returns UNKNOWN_SORTEDNESS, ie INT_MIN, ie NA_INTEGER for non-ALTREPs).,
>> for REAL_GET_REGION, (which populates a double* with the requested values
>> for both standard and ALTREP REALSXPs), etc.
>>
>> Does the above make sense?
>>
>> If you feel a universal API point is missing, you can raise that here,
>> though I can't promise that will ultimately result in the method being
>> added.
>>
>> Best,
>> ~G
>>
>> On Tue, Jun 4, 2019 at 2:22 PM Mark Klik <markklik at gmail.com> wrote:
>>
>>> thanks for clearing that up, so these methods are actually not meant to be
>>> exported on Windows and OSX?
>>> Some of the ALTREP methods that now use 'attribute_hidden' would be very
>>> useful to packages that aim to be ALTREP aware, should the currently
>>> (exported) API be considered final?
>>>
>>> thanks  for your time & best,
>>> Mark
>>>
>>> On Tue, Jun 4, 2019 at 6:52 PM Tierney, Luke <luke-tierney at uiowa.edu>
>>> wrote:
>>>
>>>> On Tue, 4 Jun 2019, Mark Klik wrote:
>>>>
>>>>> Hello,
>>>>>
>>>>> I'm developing a package (lazyvec) that makes full use of the ALTREP
>>>>> framework (R >= 3.6.0).
>>>>> One application of the package is to wrap existing ALTREP vectors in a
>>>> new
>>>>> ALTREP vector and pass all calls from R to the contained object. The
>>>>> purpose of this is to provide a diagnostic framework for working with
>>>>> ALTREP vectors and show information about internal calls.
>>>>>
>>>>> The package builds on Windows and OSX but fails to build on Linux as
>>> can
>>>> be
>>>>> seen from the link to the Travis build:
>>>>> https://travis-ci.org/fstpackage/lazyvec/jobs/539442806
>>>>>
>>>>> The reason of build failure is that many ALTREP methods generate
>>>> 'undefined
>>>>> symbol' errors upon building the package (on Linux). I've checked the
>>> R
>>>>> source code and the undefined symbols seems to be related to the
>>>>> 'attribute_hidden' before the function definition. For example, the
>>>> method
>>>>> 'ALTVEC_EXTRACT_SUBSET' is defined as:
>>>>>
>>>>> SEXP attribute_hidden ALTVEC_EXTRACT_SUBSET(SEXP x, SEXP indx, SEXP
>>> call)
>>>>>
>>>>> My question is why these differences between Windows / OSX and Linux
>>>> exist
>>>>> and if they are intentional?
>>>>
>>>> It is intentional that this not be part of the public API. This is
>>>> true of almost all functions with an ALTREP prefix. You need a
>>>> different approach that avoids using these directly.
>>>>
>>>> Best,
>>>>
>>>> luke
>>>>
>>>>> Do I need special build parameters to make sure my package builds
>>>> correctly
>>>>> on Linux?
>>>>>
>>>>> thanks for all the hard work!
>>>>>
>>>>> best,
>>>>> Mark
>>>>>
>>>>> PS: some additional info:
>>>>>
>>>>> package github repository: https://github.com/fstpackage/lazyvec
>>>>> AppVeyor package build logs:
>>>>> https://ci.appveyor.com/project/fstpackage/lazyvec
>>>>> Travis package build logs:
>>>> https://travis-ci.org/fstpackage/lazyvec/builds
>>>>>
>>>>>       [[alternative HTML version deleted]]
>>>>>
>>>>> ______________________________________________
>>>>> R-devel at r-project.org mailing list
>>>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>>>>
>>>>
>>>> --
>>>> Luke Tierney
>>>> Ralph E. Wareham Professor of Mathematical Sciences
>>>> University of Iowa                  Phone:             319-335-3386
>>>> Department of Statistics and        Fax:               319-335-3017
>>>>     Actuarial Science
>>>> 241 Schaeffer Hall                  email:   luke-tierney at uiowa.edu
>>>> Iowa City, IA 52242                 WWW:  http://www.stat.uiowa.edu
>>>>
>>>
>>>         [[alternative HTML version deleted]]
>>>
>>> ______________________________________________
>>> R-devel at r-project.org mailing list
>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>>
>>
>
> 	[[alternative HTML version deleted]]
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>

-- 
Luke Tierney
Ralph E. Wareham Professor of Mathematical Sciences
University of Iowa                  Phone:             319-335-3386
Department of Statistics and        Fax:               319-335-3017
    Actuarial Science
241 Schaeffer Hall                  email:   luke-tierney at uiowa.edu
Iowa City, IA 52242                 WWW:  http://www.stat.uiowa.edu


From @purd|e@@ @end|ng |rom gm@||@com  Wed Jun  5 22:48:29 2019
From: @purd|e@@ @end|ng |rom gm@||@com (Abby Spurdle)
Date: Thu, 6 Jun 2019 08:48:29 +1200
Subject: [Rd] Offer zip builds
In-Reply-To: <0000167f-7231-bb1f-d43f-300713cd0eef@gmail.com>
References: <5cf33c4e.1c69fb81.66223.ed3b@mx.google.com>
 <c679949c-d5bc-1ce9-91fd-ba8203e92cad@gmail.com>
 <CAAXzdLVEMFSNOADT0xhnE7P32OFSBnHR8yrPcVQ01YLVmoOL-Q@mail.gmail.com>
 <0000167f-7231-bb1f-d43f-300713cd0eef@gmail.com>
Message-ID: <CAB8pepzpAxWgFt1bHU8hF6FfMH8MBHNk6E0nNDpgtaPwScsAuQ@mail.gmail.com>

> If they choose to continue with only EXE,
> I will just keep using other programming languages.

I did agree with your original suggestion.
However, I don't think that a lack of zip formats, is a disincentive from
using R.

If you have an issue with the Windows installer, the obvious option is to
install the source version, and compile from it.

This is, after all, how open source is designed to work.

Also, I agree with what Duncan said.


Abs

	[[alternative HTML version deleted]]


From m@rkk||k @end|ng |rom gm@||@com  Wed Jun  5 22:49:08 2019
From: m@rkk||k @end|ng |rom gm@||@com (Mark Klik)
Date: Wed, 5 Jun 2019 22:49:08 +0200
Subject: [Rd] [External] undefined symbol errors when compiling package
 using ALTREP API
In-Reply-To: <alpine.DEB.2.21.1906051048130.3079@luke-Latitude-7480>
References: <CACdkz5-3-Z+YqoMoEwC6LPYFxw_NDRHOQG7x3ymai=PU7OjOoA@mail.gmail.com>
 <alpine.DEB.2.21.1906041150200.2805@luke-Latitude-7480>
 <CACdkz5-e09yPjvrP7Xo59DGeJTY_LU2NrMzxLunsYrVfAhSvbA@mail.gmail.com>
 <CAD4oTHHWLyqaRxaRzaJ95BS7DnE-JSKP+9TxXziHJkrq1VKj7Q@mail.gmail.com>
 <CACdkz58ajb=CSxZY5ODavp6TqeUzwn91-vAhSRx3YmYzeF6XKw@mail.gmail.com>
 <alpine.DEB.2.21.1906051048130.3079@luke-Latitude-7480>
Message-ID: <CACdkz5-wRMJOT5CpX+quc+bKzsnCeBBfdn1+A9aEmFFmmShy4Q@mail.gmail.com>

thanks Luke, I can work with that and will watch out for changes and new
developments in the ALTREP code with great interest.

all the best,
Mark



On Wed, Jun 5, 2019 at 6:02 PM Tierney, Luke <luke-tierney at uiowa.edu> wrote:

> For now you can use
>
> R_altrep_inherits(x, R_compact_intseq_class)
>
> The variable R_compact_intseq_class should currently be visible to
> packages on all platforms, though that may change if we eventually
> provide a string-based lookup mechanism, e.g. somehting like
>
> R_find_altrep_class("compact_intseq", "base")
>
> Best,
>
> luke
>
>
> On Tue, 4 Jun 2019, Mark Klik wrote:
>
> > Hi Gabriel,
> >
> > thanks for your detailed explanation, that definitely clarifies the
> design
> > choices that were made in setting up the ALTREP framework and I can see
> how
> > those choices make sure existing code won't break.
> >
> > My specific use-case for wanting to check whether a vector is an ALTREP
> is
> > the following: the fst package wraps an external C++ library (fstlib,
> > independent from R) that was made for high speed serialization of
> > dataframe's. Sequences are fairly common in dataframe's and I'm planning
> to
> > add the concept of a sequence to the (R-agnostic) fst format. When I can
> > detect, e.g. a 'compact_intseq' ALTREP vector and just retrieve it's 3
> > integer internal representation, serialization could be very fast.
> > Alternatively, as you describe, the vector needs to be expanded first
> > before serialization, which will actually be slower than using an already
> > expanded vector and can take a lot of RAM for large datasets.
> >
> > So being able to make use of the internal representation of (a few of
> the)
> > base ALTREP vectors can be very interesting for (non-R) serialization
> > schemes.
> >
> > thanks for your time!
> > Mark
> >
> >
> > On Tue, Jun 4, 2019 at 11:50 PM Gabriel Becker <gabembecker at gmail.com>
> > wrote:
> >
> >> Hi Mark,
> >>
> >> So depending pretty strongly on what you mean by "ALTREP aware",
> packages
> >> aren't necessarily supposed to be ALTREP aware. What I mean by this is
> that
> >> as of right now, ALTREP objects are designed to be interacted with by
> >> non-ALTREP-implementing package code, *more-or-less *exactly as standard
> >> (non-AR) SEXPs are: via the published C API. The more or less comes from
> >> the fact that in some cases, doing things that are good ideas on
> standard
> >> SEXPS will work, but may not be a good idea for ALTREPs.
> >>
> >> The most "low-hanging-fruit" example of something that was best practice
> >> for standard vectors but is not a good idea for ALTREP vectors is
> grabbing
> >> a DATAPTR and iterating over the values without modification in a tight
> >> loop.  This will work (absent allocation  failure or, I suppose, the
> ALTREP
> >> being specifically designed to refuse to give you a full DATAPTR), but
> with
> >> ALTREP in place its no longer what you want to do.
> >>
> >> That said, you don't want to check whether something is an ALTREP
> yourself
> >> and branch your code, what you want to do is use the ITERATE_BY_REGION
> >> macro in R_ext/Itermacros.h for ALL SEXPs, which will be nearly as for
> >> standard vectors and work safely for ALTREP vectors.
> >>
> >> Basically any time you find yourself wanting to check if something is an
> >> ALTREP and if so, call a specific ALT*_BLAH method, the intention is
> that
> >> there should be a universal API point you can call which will work for
> both
> >> types.
> >>
> >> This is true, e.g., of INTEGER_IS_SORTED (which will always work and
> just
> >> returns UNKNOWN_SORTEDNESS, ie INT_MIN, ie NA_INTEGER for non-ALTREPs).,
> >> for REAL_GET_REGION, (which populates a double* with the requested
> values
> >> for both standard and ALTREP REALSXPs), etc.
> >>
> >> Does the above make sense?
> >>
> >> If you feel a universal API point is missing, you can raise that here,
> >> though I can't promise that will ultimately result in the method being
> >> added.
> >>
> >> Best,
> >> ~G
> >>
> >> On Tue, Jun 4, 2019 at 2:22 PM Mark Klik <markklik at gmail.com> wrote:
> >>
> >>> thanks for clearing that up, so these methods are actually not meant
> to be
> >>> exported on Windows and OSX?
> >>> Some of the ALTREP methods that now use 'attribute_hidden' would be
> very
> >>> useful to packages that aim to be ALTREP aware, should the currently
> >>> (exported) API be considered final?
> >>>
> >>> thanks  for your time & best,
> >>> Mark
> >>>
> >>> On Tue, Jun 4, 2019 at 6:52 PM Tierney, Luke <luke-tierney at uiowa.edu>
> >>> wrote:
> >>>
> >>>> On Tue, 4 Jun 2019, Mark Klik wrote:
> >>>>
> >>>>> Hello,
> >>>>>
> >>>>> I'm developing a package (lazyvec) that makes full use of the ALTREP
> >>>>> framework (R >= 3.6.0).
> >>>>> One application of the package is to wrap existing ALTREP vectors in
> a
> >>>> new
> >>>>> ALTREP vector and pass all calls from R to the contained object. The
> >>>>> purpose of this is to provide a diagnostic framework for working with
> >>>>> ALTREP vectors and show information about internal calls.
> >>>>>
> >>>>> The package builds on Windows and OSX but fails to build on Linux as
> >>> can
> >>>> be
> >>>>> seen from the link to the Travis build:
> >>>>> https://travis-ci.org/fstpackage/lazyvec/jobs/539442806
> >>>>>
> >>>>> The reason of build failure is that many ALTREP methods generate
> >>>> 'undefined
> >>>>> symbol' errors upon building the package (on Linux). I've checked the
> >>> R
> >>>>> source code and the undefined symbols seems to be related to the
> >>>>> 'attribute_hidden' before the function definition. For example, the
> >>>> method
> >>>>> 'ALTVEC_EXTRACT_SUBSET' is defined as:
> >>>>>
> >>>>> SEXP attribute_hidden ALTVEC_EXTRACT_SUBSET(SEXP x, SEXP indx, SEXP
> >>> call)
> >>>>>
> >>>>> My question is why these differences between Windows / OSX and Linux
> >>>> exist
> >>>>> and if they are intentional?
> >>>>
> >>>> It is intentional that this not be part of the public API. This is
> >>>> true of almost all functions with an ALTREP prefix. You need a
> >>>> different approach that avoids using these directly.
> >>>>
> >>>> Best,
> >>>>
> >>>> luke
> >>>>
> >>>>> Do I need special build parameters to make sure my package builds
> >>>> correctly
> >>>>> on Linux?
> >>>>>
> >>>>> thanks for all the hard work!
> >>>>>
> >>>>> best,
> >>>>> Mark
> >>>>>
> >>>>> PS: some additional info:
> >>>>>
> >>>>> package github repository: https://github.com/fstpackage/lazyvec
> >>>>> AppVeyor package build logs:
> >>>>> https://ci.appveyor.com/project/fstpackage/lazyvec
> >>>>> Travis package build logs:
> >>>> https://travis-ci.org/fstpackage/lazyvec/builds
> >>>>>
> >>>>>       [[alternative HTML version deleted]]
> >>>>>
> >>>>> ______________________________________________
> >>>>> R-devel at r-project.org mailing list
> >>>>> https://stat.ethz.ch/mailman/listinfo/r-devel
> >>>>>
> >>>>
> >>>> --
> >>>> Luke Tierney
> >>>> Ralph E. Wareham Professor of Mathematical Sciences
> >>>> University of Iowa                  Phone:             319-335-3386
> >>>> Department of Statistics and        Fax:               319-335-3017
> >>>>     Actuarial Science
> >>>> 241 Schaeffer Hall                  email:   luke-tierney at uiowa.edu
> >>>> Iowa City, IA 52242                 WWW:  http://www.stat.uiowa.edu
> >>>>
> >>>
> >>>         [[alternative HTML version deleted]]
> >>>
> >>> ______________________________________________
> >>> R-devel at r-project.org mailing list
> >>> https://stat.ethz.ch/mailman/listinfo/r-devel
> >>>
> >>
> >
> >       [[alternative HTML version deleted]]
> >
> > ______________________________________________
> > R-devel at r-project.org mailing list
> > https://stat.ethz.ch/mailman/listinfo/r-devel
> >
>
> --
> Luke Tierney
> Ralph E. Wareham Professor of Mathematical Sciences
> University of Iowa                  Phone:             319-335-3386
> Department of Statistics and        Fax:               319-335-3017
>     Actuarial Science
> 241 Schaeffer Hall                  email:   luke-tierney at uiowa.edu
> Iowa City, IA 52242                 WWW:  http://www.stat.uiowa.edu
>

	[[alternative HTML version deleted]]


From murdoch@dunc@n @end|ng |rom gm@||@com  Wed Jun  5 23:02:10 2019
From: murdoch@dunc@n @end|ng |rom gm@||@com (Duncan Murdoch)
Date: Wed, 5 Jun 2019 17:02:10 -0400
Subject: [Rd] Offer zip builds
In-Reply-To: <CAB8pepzpAxWgFt1bHU8hF6FfMH8MBHNk6E0nNDpgtaPwScsAuQ@mail.gmail.com>
References: <5cf33c4e.1c69fb81.66223.ed3b@mx.google.com>
 <c679949c-d5bc-1ce9-91fd-ba8203e92cad@gmail.com>
 <CAAXzdLVEMFSNOADT0xhnE7P32OFSBnHR8yrPcVQ01YLVmoOL-Q@mail.gmail.com>
 <0000167f-7231-bb1f-d43f-300713cd0eef@gmail.com>
 <CAB8pepzpAxWgFt1bHU8hF6FfMH8MBHNk6E0nNDpgtaPwScsAuQ@mail.gmail.com>
Message-ID: <98d6e294-faad-2939-d113-d54f7cec7425@gmail.com>

On 05/06/2019 4:48 p.m., Abby Spurdle wrote:
>  > If they choose to continue with only EXE,
>  > I will just keep using other programming languages.
> 
> I did agree with your original suggestion.
> However, I don't think that a lack of zip formats, is a disincentive 
> from using R.

If you don't want to run the installer, see I?aki's message for how to 
extract the files without running it.  I don't know if any of the 
configuration done by the installer is essential; you can read the 
source in https://svn.r-project.org/R/trunk/src/gnuwin32/installer if 
you are curious.

Duncan Murdoch

> 
> If you have an issue with the Windows installer, the obvious option is 
> to install the source version, and compile from it.
> 
> This is, after all, how open source is designed to work.
> 
> Also, I agree with what Duncan said.
> 
> 
> Abs
> 
> 
>


From @vnpenn @end|ng |rom gm@||@com  Tue Jun  4 20:33:47 2019
From: @vnpenn @end|ng |rom gm@||@com (Steven Penny)
Date: Tue, 4 Jun 2019 13:33:47 -0500
Subject: [Rd] Offer zip builds
In-Reply-To: <CALEXWq2_QpiREMR4p7Q9BqNDitZUCNqVbETgt==uACSSWByKjw@mail.gmail.com>
References: <5cf33c4e.1c69fb81.66223.ed3b@mx.google.com>
 <CAB8pepxBjuvgRsECfRgF6vomN+m+WTVAZftKHQPc4LELcfjcWA@mail.gmail.com>
 <077E185D-AE99-442F-9DA1-6119227DE101@me.com>
 <CAAXzdLXpXXs0meVWdMOVoxhyfDDSQnyuEEi_XBzivdGDR7jf1A@mail.gmail.com>
 <204E367A-8817-4C4D-9FEE-1A9E88929417@me.com>
 <CAAXzdLVpQpPemiM3+Lr=_mVs+XRNuLMq-oKRd_Rxmny7nG3Z_A@mail.gmail.com>
 <CALEXWq2_QpiREMR4p7Q9BqNDitZUCNqVbETgt==uACSSWByKjw@mail.gmail.com>
Message-ID: <CAAXzdLWy5fHDKkyvifY-7r12XP2JwPA_8y_jcrouYks1aNp9QA@mail.gmail.com>

On Tue, Jun 4, 2019 at 11:06 AM I?aki Ucar wrote:
> FWIW, innoextract extracts the contents of the installer just fine.

That is great, thank you very much:

https://github.com/dscharrer/innoextract

Between this thread and others I have interacted with 14 people, and you are the
first person to post an actual solution rather than arguing.

I still think zip builds should be offered, but this is a good workaround until
then. Thanks again.


From @vnpenn @end|ng |rom gm@||@com  Wed Jun  5 03:49:43 2019
From: @vnpenn @end|ng |rom gm@||@com (Steven Penny)
Date: Tue, 04 Jun 2019 18:49:43 -0700 (PDT)
Subject: [Rd] Setting LC_CTYPE=en_US.UTF-8 failed
Message-ID: <5cf71fb7.1c69fb81.b7e07.8174@mx.google.com>

Using this in my "~/.profile":

    export LC_ALL=en_US.UTF-8

Yields this:

    $ Rscript -e 'print(9)'
    During startup - Warning message:
    Setting LC_CTYPE=en_US.UTF-8 failed
    [1] 9

This is confusing as the exact same environment works fine with other
languages:

    $ python3 -c 'print(9)'
    9

    $ ruby -e 'puts 9'
    9


From tom@@@k@||ber@ @end|ng |rom gm@||@com  Thu Jun  6 12:22:52 2019
From: tom@@@k@||ber@ @end|ng |rom gm@||@com (Tomas Kalibera)
Date: Thu, 6 Jun 2019 12:22:52 +0200
Subject: [Rd] Setting LC_CTYPE=en_US.UTF-8 failed
In-Reply-To: <5cf71fb7.1c69fb81.b7e07.8174@mx.google.com>
References: <5cf71fb7.1c69fb81.b7e07.8174@mx.google.com>
Message-ID: <c600408c-7727-6478-5f2c-96c3f08748ce@gmail.com>

On 6/5/19 3:49 AM, Steven Penny wrote:
> Using this in my "~/.profile":
>
> ?? export LC_ALL=en_US.UTF-8
>
> Yields this:
>
> ?? $ Rscript -e 'print(9)'
> ?? During startup - Warning message:
> ?? Setting LC_CTYPE=en_US.UTF-8 failed
> ?? [1] 9
>
> This is confusing as the exact same environment works fine with other
> languages:
>
> ?? $ python3 -c 'print(9)'
> ?? 9
>
> ?? $ ruby -e 'puts 9'
> ?? 9

The locale is probably not available on your system, please 
install/generate it.

Tomas


>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From jeroen @end|ng |rom berke|ey@edu  Thu Jun  6 12:33:56 2019
From: jeroen @end|ng |rom berke|ey@edu (Jeroen Ooms)
Date: Thu, 6 Jun 2019 12:33:56 +0200
Subject: [Rd] Offer zip builds
In-Reply-To: <CAAXzdLXpXXs0meVWdMOVoxhyfDDSQnyuEEi_XBzivdGDR7jf1A@mail.gmail.com>
References: <5cf33c4e.1c69fb81.66223.ed3b@mx.google.com>
 <CAB8pepxBjuvgRsECfRgF6vomN+m+WTVAZftKHQPc4LELcfjcWA@mail.gmail.com>
 <077E185D-AE99-442F-9DA1-6119227DE101@me.com>
 <CAAXzdLXpXXs0meVWdMOVoxhyfDDSQnyuEEi_XBzivdGDR7jf1A@mail.gmail.com>
Message-ID: <CABFfbXvf9xHkdumaZy6HY4HQpOUmpGdzdWh4c9kU-Pg6+7hbXw@mail.gmail.com>

On Tue, Jun 4, 2019 at 5:40 PM Steven Penny <svnpenn at gmail.com> wrote:
>
> Theres nothing nefarious here. It would allow people to use the R environment
> without running an installer. If someone is a new user they may want to try
> R out, and installers can be invasive as they commonly:
>
> - copy files to install dir
> - copy files to profile dir
> - set registry entries
> - set environment variables
> - set start menu entries
>
> and historically uninstallers have a bad record of reverting these changes.
> should not put this burden upon new users or even having them resort to virtual
> machine to avoid items above. having a ZIP file allows new users to run the
> R environment, then if they like it perhaps they can run the installer going
> forward.

This is a valid suggestion, but probably impossible to do reliably.
Most installers (the R one is completely open source btw) perform
those steps for a reason. It is great if software can be installed
simply by extracting a zip file somewhere, but if this is what you
desire, you're using the wrong operating system.

We only offer official installation options that work 100% reliably
and I don't think this can be accomplished with a zip file. For
example a zip file won't be able to set the installation location in
the registry, and hence other software such as RStudio won't be able
to find the R installation. Also a zip installation might mix up
package libraries from different R versions (which is bad), or users
might expect they can upgrade R by overwriting their installation with
a new zip (also bad). Hence I'm afraid offering such alternative
installation options would open a new can of worms with bug reports
from Windows users with broken installations, or packages that don't
work as expected.

As for alternatives, 'rportable' and 'innoextract' have already been
mentioned if you really just want to dump the files from the
installer, if that works for you. Another popular option to install
(any) Windows software without manually running installers is using
chocolatey, for example:

  choco install miktex
  choco install r.project

This will still indirectly use official installers, but the installers
have been verified as "safe" by external folks and the installation is
completely automated. Perhaps that's another compromise you could live
with.


From murdoch@dunc@n @end|ng |rom gm@||@com  Thu Jun  6 13:28:53 2019
From: murdoch@dunc@n @end|ng |rom gm@||@com (Duncan Murdoch)
Date: Thu, 6 Jun 2019 07:28:53 -0400
Subject: [Rd] Setting LC_CTYPE=en_US.UTF-8 failed
In-Reply-To: <c600408c-7727-6478-5f2c-96c3f08748ce@gmail.com>
References: <5cf71fb7.1c69fb81.b7e07.8174@mx.google.com>
 <c600408c-7727-6478-5f2c-96c3f08748ce@gmail.com>
Message-ID: <97078865-7b82-c011-34ea-f30673c19ebc@gmail.com>

On 06/06/2019 6:22 a.m., Tomas Kalibera wrote:
> On 6/5/19 3:49 AM, Steven Penny wrote:
>> Using this in my "~/.profile":
>>
>>  ?? export LC_ALL=en_US.UTF-8
>>
>> Yields this:
>>
>>  ?? $ Rscript -e 'print(9)'
>>  ?? During startup - Warning message:
>>  ?? Setting LC_CTYPE=en_US.UTF-8 failed
>>  ?? [1] 9
>>
>> This is confusing as the exact same environment works fine with other
>> languages:
>>
>>  ?? $ python3 -c 'print(9)'
>>  ?? 9
>>
>>  ?? $ ruby -e 'puts 9'
>>  ?? 9
> 
> The locale is probably not available on your system, please
> install/generate it.

I think Steven is running the Windows build, not a POSIX build, so 
that's not a legal value.  He could try the Cygwin build, but I think it 
has other problems, and isn't supported by R Core.  As far as I know 
there is no Windows locale that fully supports UTF-8.

Duncan Murdoch


From murdoch@dunc@n @end|ng |rom gm@||@com  Thu Jun  6 15:24:31 2019
From: murdoch@dunc@n @end|ng |rom gm@||@com (Duncan Murdoch)
Date: Thu, 6 Jun 2019 09:24:31 -0400
Subject: [Rd] Setting LC_CTYPE=en_US.UTF-8 failed
In-Reply-To: <97078865-7b82-c011-34ea-f30673c19ebc@gmail.com>
References: <5cf71fb7.1c69fb81.b7e07.8174@mx.google.com>
 <c600408c-7727-6478-5f2c-96c3f08748ce@gmail.com>
 <97078865-7b82-c011-34ea-f30673c19ebc@gmail.com>
Message-ID: <77b33a07-4945-dd5c-24e4-2e17af7a0f14@gmail.com>

On 06/06/2019 7:28 a.m., Duncan Murdoch wrote:
> On 06/06/2019 6:22 a.m., Tomas Kalibera wrote:
>> On 6/5/19 3:49 AM, Steven Penny wrote:
>>> Using this in my "~/.profile":
>>>
>>>   ?? export LC_ALL=en_US.UTF-8
>>>
>>> Yields this:
>>>
>>>   ?? $ Rscript -e 'print(9)'
>>>   ?? During startup - Warning message:
>>>   ?? Setting LC_CTYPE=en_US.UTF-8 failed
>>>   ?? [1] 9
>>>
>>> This is confusing as the exact same environment works fine with other
>>> languages:
>>>
>>>   ?? $ python3 -c 'print(9)'
>>>   ?? 9
>>>
>>>   ?? $ ruby -e 'puts 9'
>>>   ?? 9
>>
>> The locale is probably not available on your system, please
>> install/generate it.
> 
> I think Steven is running the Windows build, not a POSIX build, so
> that's not a legal value.  He could try the Cygwin build, but I think it
> has other problems, and isn't supported by R Core.  As far as I know
> there is no Windows locale that fully supports UTF-8.
> 

The Windows name for a UTF-8 locale is supposed to be en_US.65001 (see
<https://docs.microsoft.com/en-us/cpp/c-runtime-library/locale-names-languages-and-country-region-strings?view=vs-2019> 
if it hasn't disappeared by the time you read this).  However, when I 
tried that a few years ago, it didn't work.  Maybe it does now.

Duncan Murdoch


From m@ech|er @end|ng |rom @t@t@m@th@ethz@ch  Thu Jun  6 16:06:53 2019
From: m@ech|er @end|ng |rom @t@t@m@th@ethz@ch (Martin Maechler)
Date: Thu, 6 Jun 2019 16:06:53 +0200
Subject: [Rd] stopifnot
In-Reply-To: <23797.18263.920601.137937@stat.math.ethz.ch>
References: <1923928808.6775475.1559227522953.ref@mail.yahoo.com>
 <1923928808.6775475.1559227522953@mail.yahoo.com>
 <23797.18263.920601.137937@stat.math.ethz.ch>
Message-ID: <23801.7677.483926.52379@stat.math.ethz.ch>

>>>>> Martin Maechler 
>>>>>     on Mon, 3 Jun 2019 18:14:15 +0200 writes:

>>>>> Suharto Anggono Suharto Anggono 
>>>>>     on Thu, 30 May 2019 14:45:22 +0000 writes:
>>>>> Suharto Anggono Suharto Anggono 
>>>>>     on Thu, 30 May 2019 14:45:22 +0000 writes:

    >> Here is a patch to function 'stopifnot' that adds 'evaluated' argument and makes 'exprs' argument in 'stopifnot' like 'exprs' argument in 'withAutoprint'.

    >> --- stop.R	2019-05-30 14:01:15.282197286 +0000
    >> +++ stop_new.R	2019-05-30 14:01:51.372187466 +0000

    > [..........]

    > Thank you, Suharto.

    > I've looked at the patch and tested it a bit, and also (re)read
    > your April 15 remarks (cited below).  I now agree that my hacks to
    > enable dealing with "language objects" (typically class
    > 'expression')  'exprs' has remained hackish and hence not
    > working in all cases,  and that it may be a better idea to add
    > a new logical argument (as in other functions) which has to be
    > "switched" and then leads somewhat simpler and more robust code.

    > OTOH, of course, this is an API change would typically not go into the R
    > 3.6.x series ... and I have no idea if it would affect much more
    > than R's own tests/reg-tests-* ...

    > Even though the argument name 'evaluated' was chosen for
    > withAutoprint(), I don't find it a very good name anymore, and -
    > if the change should happen - would probably prefer something
    > like 'is.language' or 'expr.is.language' or similar..

    > Could we get any other readers' opinions ?

[none ..]

In the mean time, I've seen a nicer solution:  If have to add
yet another argument to stopifnot() to make this cleaner, I'm
now pretty sure we should rather use that new argument  to pass
an "expression-alike" object instead of unevaluated expressions.

I'm calling it `exprObject`  for now (and ditch the `evaluated=FALSE`).
With that the new code becomes even cleaner and easier to understand:

stopifnot <- function(..., exprs, exprObject, local = TRUE)
{
    n <- ...length()
    if((has.e <- !missing(exprs)) || !missing(exprObject)) {
	if(n || (has.e && !missing(exprObject)))
	    stop("Only one of 'exprs', 'exprObject' or unnamed expressions, not more")
	envir <- if (isTRUE(local)) parent.frame()
		 else if(isFALSE(local)) .GlobalEnv
		 else if (is.environment(local)) local
		 else stop("'local' must be TRUE, FALSE or an environment")
	E1 <- if(has.e && is.call(exprs <- substitute(exprs))) exprs[[1]]
	cl <- if(is.symbol(E1) &&
		 E1 == quote(`{`)) {
		  exprs[[1]] <- quote(stopifnot) ## --> stopifnot(*, *, ..., *) :
		  exprs
	      }
	      else
		  as.call(c(quote(stopifnot),
			    if(!has.e) exprObject else as.expression(exprs)))
        names(cl) <- NULL
	return(eval(cl, envir=envir))
    }
    ## else   use '...' (and not 'exprs') :

   [............ code unchanged from here to the end .. ............]
   [............ code unchanged from here to the end .. ............]
}


From kry|ov@r00t @end|ng |rom gm@||@com  Thu Jun  6 12:59:57 2019
From: kry|ov@r00t @end|ng |rom gm@||@com (Ivan Krylov)
Date: Thu, 6 Jun 2019 13:59:57 +0300
Subject: [Rd] [R] Open a file which name contains a tilde
In-Reply-To: <20190605160714.GA24635@debian64>
References: <20190605160714.GA24635@debian64>
Message-ID: <20190606135957.0be4db10@trisector>

On Wed, 5 Jun 2019 18:07:15 +0200
Frank Schwidom <schwidom at gmx.net> wrote:

> +> path.expand("a ~ b")  
> [1] "a /home/user b"

> How can I switch off any file crippling activity?

It doesn't seem to be possible if readline is enabled and works
correctly.

Calls to path.expand [1] end up [2] in R_ExpandFileName [3], which
calls R_ExpandFileName_readline [4], which uses libreadline function
tilde_expand [5]. tilde_expand seems to be designed to expand '~'
anywhere in the string it is handed, i.e. operate on whole command
lines, not file paths.

I am taking the liberty of Cc-ing R-devel in case this can be
considered a bug.

-- 
Best regards,
Ivan

[1]
https://github.com/wch/r-source/blob/12d1d2d232d84aa355e333348b81180a0e2c6f2f/src/main/names.c#L807

[2]
https://github.com/wch/r-source/blob/12d1d2d232d84aa355e333348b81180a0e2c6f2f/src/main/platform.c#L1915

[3]
https://github.com/wch/r-source/blob/12d1d2d232d84aa355e333348b81180a0e2c6f2f/src/unix/sys-unix.c#L147

[4]
https://github.com/wch/r-source/blob/12d1d2d232d84aa355e333348b81180a0e2c6f2f/src/unix/sys-std.c#L494

[5]
https://git.savannah.gnu.org/cgit/readline.git/tree/tilde.c?h=devel#n187


From tom@@@k@||ber@ @end|ng |rom gm@||@com  Thu Jun  6 18:23:54 2019
From: tom@@@k@||ber@ @end|ng |rom gm@||@com (Tomas Kalibera)
Date: Thu, 6 Jun 2019 18:23:54 +0200
Subject: [Rd] Setting LC_CTYPE=en_US.UTF-8 failed
In-Reply-To: <77b33a07-4945-dd5c-24e4-2e17af7a0f14@gmail.com>
References: <5cf71fb7.1c69fb81.b7e07.8174@mx.google.com>
 <c600408c-7727-6478-5f2c-96c3f08748ce@gmail.com>
 <97078865-7b82-c011-34ea-f30673c19ebc@gmail.com>
 <77b33a07-4945-dd5c-24e4-2e17af7a0f14@gmail.com>
Message-ID: <63b3fcf7-5362-5a0c-6e98-0f6595c00128@gmail.com>

On 6/6/19 3:24 PM, Duncan Murdoch wrote:
> On 06/06/2019 7:28 a.m., Duncan Murdoch wrote:
>> On 06/06/2019 6:22 a.m., Tomas Kalibera wrote:
>>> On 6/5/19 3:49 AM, Steven Penny wrote:
>>>> Using this in my "~/.profile":
>>>>
>>>> ? ?? export LC_ALL=en_US.UTF-8
>>>>
>>>> Yields this:
>>>>
>>>> ? ?? $ Rscript -e 'print(9)'
>>>> ? ?? During startup - Warning message:
>>>> ? ?? Setting LC_CTYPE=en_US.UTF-8 failed
>>>> ? ?? [1] 9
>>>>
>>>> This is confusing as the exact same environment works fine with other
>>>> languages:
>>>>
>>>> ? ?? $ python3 -c 'print(9)'
>>>> ? ?? 9
>>>>
>>>> ? ?? $ ruby -e 'puts 9'
>>>> ? ?? 9
>>>
>>> The locale is probably not available on your system, please
>>> install/generate it.
>>
>> I think Steven is running the Windows build, not a POSIX build, so
>> that's not a legal value.? He could try the Cygwin build, but I think it
>> has other problems, and isn't supported by R Core.? As far as I know
>> there is no Windows locale that fully supports UTF-8.
>>
>
> The Windows name for a UTF-8 locale is supposed to be en_US.65001 (see
> <https://docs.microsoft.com/en-us/cpp/c-runtime-library/locale-names-languages-and-country-region-strings?view=vs-2019> 
> if it hasn't disappeared by the time you read this).? However, when I 
> tried that a few years ago, it didn't work.? Maybe it does now.

Yes, it is 65001 but it still cannot be used as setlocale() Windows 
locale (in LC_CTYPE), and hence R on Windows cannot use UTF-8 as native 
encoding.

Tomas

>
> Duncan Murdoch


From tdhock5 @end|ng |rom gm@||@com  Thu Jun  6 22:19:43 2019
From: tdhock5 @end|ng |rom gm@||@com (Toby Hocking)
Date: Thu, 6 Jun 2019 13:19:43 -0700
Subject: [Rd] R pkg install should fail for unsuccessful DLL copy on
 windows?
In-Reply-To: <3cdc71b4-116c-75f2-fffa-597a7ec1db3d@fredhutch.org>
References: <CALK03d2hj9Ae3=7RTt-KLK+zZZ_2b1RK6RHK=rBNrR1MbZrV=w@mail.gmail.com>
 <CAOO9MKUNCqx+x4=Ny-OyO9TFiqZifDn7_vKGR7m04fyVbnhjLA@mail.gmail.com>
 <CALK03d2kWF2NT-x0uOqbxriLMgKVatLfVEkxwUmkb6Zgnyy7OQ@mail.gmail.com>
 <35b31c30-cf83-1505-70ca-c6a90185dce5@fredhutch.org>
 <CALK03d3C2GREMTmjVHDeLJQ0ck9Jae93q2n+tpS+w3ouFf62kA@mail.gmail.com>
 <3cdc71b4-116c-75f2-fffa-597a7ec1db3d@fredhutch.org>
Message-ID: <CALK03d2AG6ZqVFcprfOtpi5cA5pxTLWUqQZ+UnQfW1Dt3erZNA@mail.gmail.com>

If anybody else has this issue, please add a comment on
https://bugs.r-project.org/bugzilla/show_bug.cgi?id=17478 so we are more
likely to get R-core to address this.

Thanks
Toby

On Tue, Jun 4, 2019 at 2:58 PM Pages, Herve <hpages at fredhutch.org> wrote:

> On 5/31/19 08:41, Toby Hocking wrote:...
> > In my opinion install.packages should stop with an error (instead of a
> > warning) if this happens.
>
> Totally agree with that.
>
> Best,
> H.
>
> --
> Herv? Pag?s
>
> Program in Computational Biology
> Division of Public Health Sciences
> Fred Hutchinson Cancer Research Center
> 1100 Fairview Ave. N, M1-B514
> P.O. Box 19024
> Seattle, WA 98109-1024
>
> E-mail: hpages at fredhutch.org
> Phone:  (206) 667-5791
> Fax:    (206) 667-1319
>

	[[alternative HTML version deleted]]


From murdoch@dunc@n @end|ng |rom gm@||@com  Thu Jun  6 22:23:44 2019
From: murdoch@dunc@n @end|ng |rom gm@||@com (Duncan Murdoch)
Date: Thu, 6 Jun 2019 16:23:44 -0400
Subject: [Rd] R pkg install should fail for unsuccessful DLL copy on
 windows?
In-Reply-To: <CALK03d2AG6ZqVFcprfOtpi5cA5pxTLWUqQZ+UnQfW1Dt3erZNA@mail.gmail.com>
References: <CALK03d2hj9Ae3=7RTt-KLK+zZZ_2b1RK6RHK=rBNrR1MbZrV=w@mail.gmail.com>
 <CAOO9MKUNCqx+x4=Ny-OyO9TFiqZifDn7_vKGR7m04fyVbnhjLA@mail.gmail.com>
 <CALK03d2kWF2NT-x0uOqbxriLMgKVatLfVEkxwUmkb6Zgnyy7OQ@mail.gmail.com>
 <35b31c30-cf83-1505-70ca-c6a90185dce5@fredhutch.org>
 <CALK03d3C2GREMTmjVHDeLJQ0ck9Jae93q2n+tpS+w3ouFf62kA@mail.gmail.com>
 <3cdc71b4-116c-75f2-fffa-597a7ec1db3d@fredhutch.org>
 <CALK03d2AG6ZqVFcprfOtpi5cA5pxTLWUqQZ+UnQfW1Dt3erZNA@mail.gmail.com>
Message-ID: <e77efa54-0b19-a2e5-4649-cf1746dc6640@gmail.com>

On 06/06/2019 4:19 p.m., Toby Hocking wrote:
> If anybody else has this issue, please add a comment on
> https://bugs.r-project.org/bugzilla/show_bug.cgi?id=17478 so we are more
> likely to get R-core to address this.

Please don't encourage spam there.  Add a comment if you have 
information to add, but "me too" messages just waste everybody's time.

Duncan Murdoch

> 
> Thanks
> Toby
> 
> On Tue, Jun 4, 2019 at 2:58 PM Pages, Herve <hpages at fredhutch.org> wrote:
> 
>> On 5/31/19 08:41, Toby Hocking wrote:...
>>> In my opinion install.packages should stop with an error (instead of a
>>> warning) if this happens.
>>
>> Totally agree with that.
>>
>> Best,
>> H.
>>
>> --
>> Herv? Pag?s
>>
>> Program in Computational Biology
>> Division of Public Health Sciences
>> Fred Hutchinson Cancer Research Center
>> 1100 Fairview Ave. N, M1-B514
>> P.O. Box 19024
>> Seattle, WA 98109-1024
>>
>> E-mail: hpages at fredhutch.org
>> Phone:  (206) 667-5791
>> Fax:    (206) 667-1319
>>
> 
> 	[[alternative HTML version deleted]]
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>


From murdoch@dunc@n @end|ng |rom gm@||@com  Thu Jun  6 23:50:27 2019
From: murdoch@dunc@n @end|ng |rom gm@||@com (Duncan Murdoch)
Date: Thu, 6 Jun 2019 17:50:27 -0400
Subject: [Rd] [R] Open a file which name contains a tilde
In-Reply-To: <CABcYAdLgLrBwNW4A4EgYx0RwD9zjCo4Mpe7S05SeohoNmMQSGg@mail.gmail.com>
References: <20190605160714.GA24635@debian64>
 <20190606135957.0be4db10@trisector>
 <CABcYAdLgLrBwNW4A4EgYx0RwD9zjCo4Mpe7S05SeohoNmMQSGg@mail.gmail.com>
Message-ID: <c4d513f5-f083-16f2-cb5a-dadf0697f242@gmail.com>

On 06/06/2019 5:04 p.m., Richard O'Keefe wrote:
> How can expanding tildes anywhere but the beginning of a file name NOT be
> considered a bug?

It looks like a bug in R, but not necessarily a bug in libreadline:  we 
may just be using tilde_expand improperly.

Duncan Murdoch

> 
> 
> On Thu, 6 Jun 2019 at 23:04, Ivan Krylov <krylov.r00t at gmail.com> wrote:
> 
>> On Wed, 5 Jun 2019 18:07:15 +0200
>> Frank Schwidom <schwidom at gmx.net> wrote:
>>
>>> +> path.expand("a ~ b")
>>> [1] "a /home/user b"
>>
>>> How can I switch off any file crippling activity?
>>
>> It doesn't seem to be possible if readline is enabled and works
>> correctly.
>>
>> Calls to path.expand [1] end up [2] in R_ExpandFileName [3], which
>> calls R_ExpandFileName_readline [4], which uses libreadline function
>> tilde_expand [5]. tilde_expand seems to be designed to expand '~'
>> anywhere in the string it is handed, i.e. operate on whole command
>> lines, not file paths.
>>
>> I am taking the liberty of Cc-ing R-devel in case this can be
>> considered a bug.
>>
>> --
>> Best regards,
>> Ivan
>>
>> [1]
>>
>> https://github.com/wch/r-source/blob/12d1d2d232d84aa355e333348b81180a0e2c6f2f/src/main/names.c#L807
>>
>> [2]
>>
>> https://github.com/wch/r-source/blob/12d1d2d232d84aa355e333348b81180a0e2c6f2f/src/main/platform.c#L1915
>>
>> [3]
>>
>> https://github.com/wch/r-source/blob/12d1d2d232d84aa355e333348b81180a0e2c6f2f/src/unix/sys-unix.c#L147
>>
>> [4]
>>
>> https://github.com/wch/r-source/blob/12d1d2d232d84aa355e333348b81180a0e2c6f2f/src/unix/sys-std.c#L494
>>
>> [5]
>> https://git.savannah.gnu.org/cgit/readline.git/tree/tilde.c?h=devel#n187
>>
>> ______________________________________________
>> R-help at r-project.org mailing list -- To UNSUBSCRIBE and more, see
>> https://stat.ethz.ch/mailman/listinfo/r-help
>> PLEASE do read the posting guide
>> http://www.R-project.org/posting-guide.html
>> and provide commented, minimal, self-contained, reproducible code.
>>
> 
> 	[[alternative HTML version deleted]]
> 
> ______________________________________________
> R-help at r-project.org mailing list -- To UNSUBSCRIBE and more, see
> https://stat.ethz.ch/mailman/listinfo/r-help
> PLEASE do read the posting guide http://www.R-project.org/posting-guide.html
> and provide commented, minimal, self-contained, reproducible code.
>


From r@oknz @end|ng |rom gm@||@com  Thu Jun  6 23:04:06 2019
From: r@oknz @end|ng |rom gm@||@com (Richard O'Keefe)
Date: Fri, 7 Jun 2019 09:04:06 +1200
Subject: [Rd] [R] Open a file which name contains a tilde
In-Reply-To: <20190606135957.0be4db10@trisector>
References: <20190605160714.GA24635@debian64>
 <20190606135957.0be4db10@trisector>
Message-ID: <CABcYAdLgLrBwNW4A4EgYx0RwD9zjCo4Mpe7S05SeohoNmMQSGg@mail.gmail.com>

How can expanding tildes anywhere but the beginning of a file name NOT be
considered a bug?


On Thu, 6 Jun 2019 at 23:04, Ivan Krylov <krylov.r00t at gmail.com> wrote:

> On Wed, 5 Jun 2019 18:07:15 +0200
> Frank Schwidom <schwidom at gmx.net> wrote:
>
> > +> path.expand("a ~ b")
> > [1] "a /home/user b"
>
> > How can I switch off any file crippling activity?
>
> It doesn't seem to be possible if readline is enabled and works
> correctly.
>
> Calls to path.expand [1] end up [2] in R_ExpandFileName [3], which
> calls R_ExpandFileName_readline [4], which uses libreadline function
> tilde_expand [5]. tilde_expand seems to be designed to expand '~'
> anywhere in the string it is handed, i.e. operate on whole command
> lines, not file paths.
>
> I am taking the liberty of Cc-ing R-devel in case this can be
> considered a bug.
>
> --
> Best regards,
> Ivan
>
> [1]
>
> https://github.com/wch/r-source/blob/12d1d2d232d84aa355e333348b81180a0e2c6f2f/src/main/names.c#L807
>
> [2]
>
> https://github.com/wch/r-source/blob/12d1d2d232d84aa355e333348b81180a0e2c6f2f/src/main/platform.c#L1915
>
> [3]
>
> https://github.com/wch/r-source/blob/12d1d2d232d84aa355e333348b81180a0e2c6f2f/src/unix/sys-unix.c#L147
>
> [4]
>
> https://github.com/wch/r-source/blob/12d1d2d232d84aa355e333348b81180a0e2c6f2f/src/unix/sys-std.c#L494
>
> [5]
> https://git.savannah.gnu.org/cgit/readline.git/tree/tilde.c?h=devel#n187
>
> ______________________________________________
> R-help at r-project.org mailing list -- To UNSUBSCRIBE and more, see
> https://stat.ethz.ch/mailman/listinfo/r-help
> PLEASE do read the posting guide
> http://www.R-project.org/posting-guide.html
> and provide commented, minimal, self-contained, reproducible code.
>

	[[alternative HTML version deleted]]


From c@g|||e@p|e @end|ng |rom gm@||@com  Fri Jun  7 16:08:46 2019
From: c@g|||e@p|e @end|ng |rom gm@||@com (Colin Gillespie)
Date: Fri, 7 Jun 2019 15:08:46 +0100
Subject: [Rd] Parallel number stream: clusterSetRNGStream
Message-ID: <CADbDLZnxq7Rh8shVS7q3kCCuaogLkYZ3ob2jO3WA1pCrOL+XTg@mail.gmail.com>

Dear All,

Is the following expected behaviour?

set.seed(1)
library(parallel)
cl = makeCluster(5)
clusterSetRNGStream(cl, iseed = NULL)
parSapply(cl, 1:5, function(i) sample(1:10, 1))
# 7  4  2 10 10
clusterSetRNGStream(cl, iseed = NULL)
# 7  4  2 10 10
parSapply(cl, 1:5, function(i) sample(1:10, 1))
stopCluster(cl)

The documentation could be read either way, e.g.

 * iseed: An integer to be supplied to set.seed, or NULL not to set
reproducible seeds.

>From Details

.... optionally setting the seed of the streams by set.seed(iseed)
(otherwise they are set from the current seed of the master process:
after selecting the L'Ecuyer generator).

As may be guessed, this caught me out, since I was expecting the same
behaviour as set.seed(NULL).

Thanks

Colin

----------

R version 3.6.0 (2019-04-26)
Platform: x86_64-pc-linux-gnu (64-bit)
Running under: Ubuntu 18.04.2 LTS


From m@ech|er @end|ng |rom @t@t@m@th@ethz@ch  Fri Jun  7 16:11:29 2019
From: m@ech|er @end|ng |rom @t@t@m@th@ethz@ch (Martin Maechler)
Date: Fri, 7 Jun 2019 16:11:29 +0200
Subject: [Rd] 
 Give update.formula() an option not to simplify or reorder the
 result -- request for comments
In-Reply-To: <CAB8pepydYdTRYqKAsL0kJ_o3aTfhg7pT38U1t=pFJqpyYfJ+tw@mail.gmail.com>
References: <56ee72cb833f01d6eb3925452925d54f7c2e03d7.camel@uow.edu.au>
 <CAB8pepydYdTRYqKAsL0kJ_o3aTfhg7pT38U1t=pFJqpyYfJ+tw@mail.gmail.com>
Message-ID: <23802.28817.525607.244916@stat.math.ethz.ch>

Trying to revive, possibly conclude a forgotten thread ...

>>>>> Abby Spurdle 
>>>>>     on Mon, 20 May 2019 14:11:47 +1200 writes:

    > Hi Pavel
    > (Back On List)

    > And my two cents...

    >> At this time, the update.formula() method always performs a number of
    >> transformations on the results, eliminating redundant variables and
    >> reordering interactions to be after the main effects.
    >> This the proposal is to add an option simplify= (defaulting to TRUE,
    >> for backwards compatibility) that if FALSE will skip the simplification
    >> step.
    >> Any thoughts? One particular question that Martin raised is whether the
    >> UI should be just a single logical argument, or something else.

    > Firstly, note that the constructor for formula objects behaves differently
    > to the update method, so I think any changes should be consistent between
    > the two functions.

Not so easily:  The ` ~ ` constructor does not sensibly (in my
opinion) get optional arguments,
whereas Pavel was suggesting a new *optional* argument to update.formula()

    >> #constructor - doesn't simplify
    >> y ~ x + x
    > y ~ x + x
    >> #update method - does simplify
    >> update (y ~ x, ~. + x)
    > y ~ x

    > Interestingly, this doesn't simplify.
    >> update (y ~ I (x), ~. + x)
    > y ~ I(x) + x

well, I hope so:
The whole point of  I(.) is to  *not* be identical (but close) to its argument.

    > I think that simplification could mean different things.

Good point, I tend to agree, with the above,

(whereas I'm less happy with this example : )

    > So, there could be something like:
    >> update (y ~ x, ~. + x, strip=FALSE)
    > y ~ I (2 * x)

    > I don't know how easy that would be to implement.
    > (Symbolic computation on par with computer algebra systems is a discussion
    > in itself...).
    > And you could have one argument (say, method="simplify") rather than two or
    > more logical arguments.

Yes exactly; given what we've heard till now, I'd also go for a
new argument (possibly 'method') which should be a string
(and keep the current behavior as default), ideally here with a
match.arg() setup.

    > It would also be possible to allow partial forms of simplification, by
    > specifying which terms should be collapsed, however, I doubt any possible
    > usefulness of this, would justify the complexity.
    > However, feel free to disagree.

    > You made an interesting comment.

    >> This is not
    >> always the desired behavior, because formulas are increasingly used
    >> for purposes other than specifying linear models.

    > Can I ask what these purposes are?

    > kind regards
    > Abs


From @|mon@urb@nek @end|ng |rom R-project@org  Fri Jun  7 17:10:14 2019
From: @|mon@urb@nek @end|ng |rom R-project@org (Simon Urbanek)
Date: Fri, 7 Jun 2019 11:10:14 -0400
Subject: [Rd] Offer zip builds
In-Reply-To: <CABFfbXvf9xHkdumaZy6HY4HQpOUmpGdzdWh4c9kU-Pg6+7hbXw@mail.gmail.com>
References: <5cf33c4e.1c69fb81.66223.ed3b@mx.google.com>
 <CAB8pepxBjuvgRsECfRgF6vomN+m+WTVAZftKHQPc4LELcfjcWA@mail.gmail.com>
 <077E185D-AE99-442F-9DA1-6119227DE101@me.com>
 <CAAXzdLXpXXs0meVWdMOVoxhyfDDSQnyuEEi_XBzivdGDR7jf1A@mail.gmail.com>
 <CABFfbXvf9xHkdumaZy6HY4HQpOUmpGdzdWh4c9kU-Pg6+7hbXw@mail.gmail.com>
Message-ID: <71CEE69A-6052-4FA0-80E4-529C3866C5BD@R-project.org>

Just to add to that point - it is expected that the registry is appropriately updated so the correct version of R can be located. Just unpacking a ZIP won't work in general since tools using R have no reliable way to find it.

Cheers,
Simon


> On Jun 6, 2019, at 6:33 AM, Jeroen Ooms <jeroen at berkeley.edu> wrote:
> 
> On Tue, Jun 4, 2019 at 5:40 PM Steven Penny <svnpenn at gmail.com> wrote:
>> 
>> Theres nothing nefarious here. It would allow people to use the R environment
>> without running an installer. If someone is a new user they may want to try
>> R out, and installers can be invasive as they commonly:
>> 
>> - copy files to install dir
>> - copy files to profile dir
>> - set registry entries
>> - set environment variables
>> - set start menu entries
>> 
>> and historically uninstallers have a bad record of reverting these changes.
>> should not put this burden upon new users or even having them resort to virtual
>> machine to avoid items above. having a ZIP file allows new users to run the
>> R environment, then if they like it perhaps they can run the installer going
>> forward.
> 
> This is a valid suggestion, but probably impossible to do reliably.
> Most installers (the R one is completely open source btw) perform
> those steps for a reason. It is great if software can be installed
> simply by extracting a zip file somewhere, but if this is what you
> desire, you're using the wrong operating system.
> 
> We only offer official installation options that work 100% reliably
> and I don't think this can be accomplished with a zip file. For
> example a zip file won't be able to set the installation location in
> the registry, and hence other software such as RStudio won't be able
> to find the R installation. Also a zip installation might mix up
> package libraries from different R versions (which is bad), or users
> might expect they can upgrade R by overwriting their installation with
> a new zip (also bad). Hence I'm afraid offering such alternative
> installation options would open a new can of worms with bug reports
> from Windows users with broken installations, or packages that don't
> work as expected.
> 
> As for alternatives, 'rportable' and 'innoextract' have already been
> mentioned if you really just want to dump the files from the
> installer, if that works for you. Another popular option to install
> (any) Windows software without manually running installers is using
> chocolatey, for example:
> 
>  choco install miktex
>  choco install r.project
> 
> This will still indirectly use official installers, but the installers
> have been verified as "safe" by external folks and the installation is
> completely automated. Perhaps that's another compromise you could live
> with.
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
> 


From ccberry @end|ng |rom uc@d@edu  Fri Jun  7 18:08:28 2019
From: ccberry @end|ng |rom uc@d@edu (Berry, Charles)
Date: Fri, 7 Jun 2019 16:08:28 +0000
Subject: [Rd] [R] Open a file which name contains a tilde
In-Reply-To: <CABcYAdLgLrBwNW4A4EgYx0RwD9zjCo4Mpe7S05SeohoNmMQSGg__2324.26375603012$1559899589$gmane$org@mail.gmail.com>
References: <20190605160714.GA24635@debian64>
 <20190606135957.0be4db10@trisector>
 <CABcYAdLgLrBwNW4A4EgYx0RwD9zjCo4Mpe7S05SeohoNmMQSGg__2324.26375603012$1559899589$gmane$org@mail.gmail.com>
Message-ID: <4BCEF16D-A9B7-460B-9E47-91B8A7B5DAB2@ucsd.edu>



> On Jun 6, 2019, at 2:04 PM, Richard O'Keefe <raoknz at gmail.com> wrote:
> 
> How can expanding tildes anywhere but the beginning of a file name NOT be
> considered a bug?
> 
> 

I think that that IS what libreadline is doing if one allows a whitespace separated list of file names.

As reported in R-help, 

	https://www.mail-archive.com/r-help at r-project.org/msg254116.html

path.expand seems to expand tildes beginning whitespace separated strings that could be filenames, but not other tildes.

Thus,

> path.expand("~/.newsrc ~/.R/*")  # expands both tildes
[1] "/Users/cberry/.newsrc /Users/cberry/.R/*"
> path.expand("~/.newsrc~/.R/*")   # expands only the first
[1] "/Users/cberry/.newsrc~/.R/*"
> 

This could be a feature if what one wanted was to pass the result to a system command that will process multiple file arguments, e.g. 

> system(paste( "wc", path.expand("~/.newsrc ~/.R/*"))) # run wc on some files

I doubt that this was intended by R-core, but perhaps the readline devs had this in mind. 

Chuck


> On Thu, 6 Jun 2019 at 23:04, Ivan Krylov <krylov.r00t at gmail.com> wrote:
> 
>> On Wed, 5 Jun 2019 18:07:15 +0200
>> Frank Schwidom <schwidom at gmx.net> wrote:
>> 
>>> +> path.expand("a ~ b")
>>> [1] "a /home/user b"
>> 
>>> How can I switch off any file crippling activity?
>> 
>> It doesn't seem to be possible if readline is enabled and works
>> correctly.
>> 
>> Calls to path.expand [1] end up [2] in R_ExpandFileName [3], which
>> calls R_ExpandFileName_readline [4], which uses libreadline function
>> tilde_expand [5]. tilde_expand seems to be designed to expand '~'
>> anywhere in the string it is handed, i.e. operate on whole command
>> lines, not file paths.
>> 
>> I am taking the liberty of Cc-ing R-devel in case this can be
>> considered a bug.
>> 
>> --
>> Best regards,
>> Ivan
>> 
>> [1]
>> 
>> https://github.com/wch/r-source/blob/12d1d2d232d84aa355e333348b81180a0e2c6f2f/src/main/names.c#L807
>> 
>> [2]
>> 
>> https://github.com/wch/r-source/blob/12d1d2d232d84aa355e333348b81180a0e2c6f2f/src/main/platform.c#L1915
>> 
>> [3]
>> 
>> https://github.com/wch/r-source/blob/12d1d2d232d84aa355e333348b81180a0e2c6f2f/src/unix/sys-unix.c#L147
>> 
>> [4]
>> 
>> https://github.com/wch/r-source/blob/12d1d2d232d84aa355e333348b81180a0e2c6f2f/src/unix/sys-std.c#L494
>> 
>> [5]
>> https://git.savannah.gnu.org/cgit/readline.git/tree/tilde.c?h=devel#n187
>> 
>> ______________________________________________
>> R-help at r-project.org mailing list -- To UNSUBSCRIBE and more, see
>> https://stat.ethz.ch/mailman/listinfo/r-help
>> PLEASE do read the posting guide
>> http://www.R-project.org/posting-guide.html
>> and provide commented, minimal, self-contained, reproducible code.
>> 
> 
> 	[[alternative HTML version deleted]]
> 


From henr|k@bengt@@on @end|ng |rom gm@||@com  Fri Jun  7 22:31:53 2019
From: henr|k@bengt@@on @end|ng |rom gm@||@com (Henrik Bengtsson)
Date: Fri, 7 Jun 2019 13:31:53 -0700
Subject: [Rd] Parallel number stream: clusterSetRNGStream
In-Reply-To: <CADbDLZnxq7Rh8shVS7q3kCCuaogLkYZ3ob2jO3WA1pCrOL+XTg@mail.gmail.com>
References: <CADbDLZnxq7Rh8shVS7q3kCCuaogLkYZ3ob2jO3WA1pCrOL+XTg@mail.gmail.com>
Message-ID: <CAFDcVCTTaNJreWAYnf04CxRBuoccQvwzmdYBo-iQC1WO=0FuMQ@mail.gmail.com>

Yes, I would think this behavior is intentionally, but obviously, I
don't know for sure.  Looking at the code:

> parallel::clusterSetRNGStream
function (cl = NULL, iseed = NULL)
{
    cl <- defaultCluster(cl)
    oldseed <- if (exists(".Random.seed", envir = .GlobalEnv,
        inherits = FALSE))
        get(".Random.seed", envir = .GlobalEnv, inherits = FALSE)
    else NULL
    RNGkind("L'Ecuyer-CMRG")
    if (!is.null(iseed))
        set.seed(iseed)
    nc <- length(cl)
    seeds <- vector("list", nc)
    seeds[[1L]] <- .Random.seed

You'll find that:

1. the stream of RNG seeds, originates from .Random.seed.
2a. 'iseed' is only applied if non-NULL, which changes starting .Random.seed.
2b. If iseed = NULL, then the .Random.seed is whatever it was when you
called the function

If you use iseed = NULL, then you need to forward the RNG state
(=.Random.seed) yourself.   Here's an example:

set.seed(1)
library(parallel)
cl <- parallel::makeCluster(5)

str(.Random.seed)
# int [1:626] 10403 624 -169270483 -442010614 -603558397 -222347416 ...
clusterSetRNGStream(cl, iseed = NULL)
parSapply(cl, 1:5, function(i) sample(1:10, 1))
# [1]  7  4  2 10 10

str(.Random.seed)
# int [1:626] 10403 624 -169270483 -442010614 -603558397 -222347416 ...
clusterSetRNGStream(cl, iseed = NULL)
parSapply(cl, 1:5, function(i) sample(1:10, 1))
# [1]  7  4  2 10 10

## Forward RNG state
sample.int(1)
# [1] 1

str(.Random.seed)
# int [1:626] 10403 1 1654269195 -1877109783 -961256264 1403523942 ...
clusterSetRNGStream(cl, iseed = NULL)
parSapply(cl, 1:5, function(i) sample(1:10, 1))
# [1] 8 6 1 7 5


FYI, you see a similar behavior with parallel::mclapply():

set.seed(1)
library(parallel)
RNGkind("L'Ecuyer-CMRG")
unlist(parallel::mclapply(1:2, function(n) rnorm(n), mc.set.seed = TRUE))
# [1] -1.2673735  0.9045952  1.9502072
unlist(parallel::mclapply(1:2, function(n) rnorm(n), mc.set.seed = TRUE))
# [1] -1.2673735  0.9045952  1.9502072
## Forward RNG state
sample.int(1)
# [1] 1
unlist(parallel::mclapply(1:2, function(n) rnorm(n), mc.set.seed = TRUE))
# [1] -0.09117479 -1.07803714  0.13924063

I can see pros and cons with this behavior, but I think the default is
risky.  For instance, it's not hard to imagine an implementation
resampling algorithm where you have to option to run it via lapply()
or via parallel::mclapply() - there is a non-zero probability that
such an implementation produces identical samples.

Proper parallel RNG can be tricky

/Henrik

On Fri, Jun 7, 2019 at 7:09 AM Colin Gillespie <csgillespie at gmail.com> wrote:
>
> Dear All,
>
> Is the following expected behaviour?
>
> set.seed(1)
> library(parallel)
> cl = makeCluster(5)
> clusterSetRNGStream(cl, iseed = NULL)
> parSapply(cl, 1:5, function(i) sample(1:10, 1))
> # 7  4  2 10 10
> clusterSetRNGStream(cl, iseed = NULL)
> # 7  4  2 10 10
> parSapply(cl, 1:5, function(i) sample(1:10, 1))
> stopCluster(cl)
>
> The documentation could be read either way, e.g.
>
>  * iseed: An integer to be supplied to set.seed, or NULL not to set
> reproducible seeds.
>
> From Details
>
> .... optionally setting the seed of the streams by set.seed(iseed)
> (otherwise they are set from the current seed of the master process:
> after selecting the L'Ecuyer generator).
>
> As may be guessed, this caught me out, since I was expecting the same
> behaviour as set.seed(NULL).
>
> Thanks
>
> Colin
>
> ----------
>
> R version 3.6.0 (2019-04-26)
> Platform: x86_64-pc-linux-gnu (64-bit)
> Running under: Ubuntu 18.04.2 LTS
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From @purd|e@@ @end|ng |rom gm@||@com  Sat Jun  8 00:42:22 2019
From: @purd|e@@ @end|ng |rom gm@||@com (Abby Spurdle)
Date: Sat, 8 Jun 2019 10:42:22 +1200
Subject: [Rd] Offer zip builds
In-Reply-To: <71CEE69A-6052-4FA0-80E4-529C3866C5BD@R-project.org>
References: <5cf33c4e.1c69fb81.66223.ed3b@mx.google.com>
 <CAB8pepxBjuvgRsECfRgF6vomN+m+WTVAZftKHQPc4LELcfjcWA@mail.gmail.com>
 <077E185D-AE99-442F-9DA1-6119227DE101@me.com>
 <CAAXzdLXpXXs0meVWdMOVoxhyfDDSQnyuEEi_XBzivdGDR7jf1A@mail.gmail.com>
 <CABFfbXvf9xHkdumaZy6HY4HQpOUmpGdzdWh4c9kU-Pg6+7hbXw@mail.gmail.com>
 <71CEE69A-6052-4FA0-80E4-529C3866C5BD@R-project.org>
Message-ID: <CAB8pepwB8n-yeBj8rxK0gkYhOdOZiPiE13-NGSpk9UrT4r9YOQ@mail.gmail.com>

> Just to add to that point - it is expected that the registry is
appropriately updated so the correct version of R can be located. Just
unpacking a ZIP won't work in general since tools using R have no reliable
way to find it.

Shouldn't it be sufficient to set the "Path" system or environment
variables?

	[[alternative HTML version deleted]]


From ru|pb@rr@d@@ @end|ng |rom @@po@pt  Sat Jun  8 12:38:44 2019
From: ru|pb@rr@d@@ @end|ng |rom @@po@pt (Rui Barradas)
Date: Sat, 8 Jun 2019 11:38:44 +0100
Subject: [Rd] [R] Open a file which name contains a tilde
In-Reply-To: <CABcYAdKzT5qGQMOerqy_=v5ztUBFe-zqfC6rMf+XhiOt1T9Dhg@mail.gmail.com>
References: <20190605160714.GA24635@debian64>
 <20190606135957.0be4db10@trisector>
 <CABcYAdLgLrBwNW4A4EgYx0RwD9zjCo4Mpe7S05SeohoNmMQSGg__2324.26375603012$1559899589$gmane$org@mail.gmail.com>
 <4BCEF16D-A9B7-460B-9E47-91B8A7B5DAB2@ucsd.edu>
 <CABcYAdKzT5qGQMOerqy_=v5ztUBFe-zqfC6rMf+XhiOt1T9Dhg@mail.gmail.com>
Message-ID: <14481952-7c0d-e10a-608f-75953aada5d6@sapo.pt>

Hello,

R 3.6.0 on Ubuntu 19.04.
Since no one mentioned it, notice that the tilde in the middle of a 
string needs to be surrounded by spaces to be expanded.

The first code line works as expected, only the second is wrong (buggy).

path.expand('a~b')
#[1] "a~b"
path.expand('a ~ b')
#[1] "a /home/rui b"


Rui Barradas

?s 04:27 de 08/06/19, Richard O'Keefe escreveu:
> ?path.expand
>      Expand a path name, for example by replacing a leading tilde by
>      the user's home directory (if defined on that platform).
> 
> *A* path name.  The argument is a character vector.
> If multiple path names are passed, they are passed
> 
>      On most builds of R *A LEADING* "~user" will be replaced...
> 
> Nothing is said in the R documentation about *multiple* or
> *non-leading* tildes being replaced.
> 
> The actual behaviour is inconsistent with the documentation.
> SOMETHING is a bug.
> 
> It's not clear to me why this is in any way dependent on
> readline.  I've implemented tilde expansion several times
> and always without readline.
> It sounds as though R might be calling tilde_expand()
> when it *should*, to be consistent with the documentation,
> be calling tilde_expand_word().
> 
> 
> 
> as separate elements of the character vector.
> 
> 
> 
> On Sat, 8 Jun 2019 at 04:10, Berry, Charles <ccberry at ucsd.edu> wrote:
> 
>>
>>
>>> On Jun 6, 2019, at 2:04 PM, Richard O'Keefe <raoknz at gmail.com> wrote:
>>>
>>> How can expanding tildes anywhere but the beginning of a file name NOT be
>>> considered a bug?
>>>
>>>
>>
>> I think that that IS what libreadline is doing if one allows a whitespace
>> separated list of file names.
>>
>> As reported in R-help,
>>
>>          https://www.mail-archive.com/r-help at r-project.org/msg254116.html
>>
>> path.expand seems to expand tildes beginning whitespace separated strings
>> that could be filenames, but not other tildes.
>>
>> Thus,
>>
>>> path.expand("~/.newsrc ~/.R/*")  # expands both tildes
>> [1] "/Users/cberry/.newsrc /Users/cberry/.R/*"
>>> path.expand("~/.newsrc~/.R/*")   # expands only the first
>> [1] "/Users/cberry/.newsrc~/.R/*"
>>>
>>
>> This could be a feature if what one wanted was to pass the result to a
>> system command that will process multiple file arguments, e.g.
>>
>>> system(paste( "wc", path.expand("~/.newsrc ~/.R/*"))) # run wc on some
>> files
>>
>> I doubt that this was intended by R-core, but perhaps the readline devs
>> had this in mind.
>>
>> Chuck
>>
>>
>>> On Thu, 6 Jun 2019 at 23:04, Ivan Krylov <krylov.r00t at gmail.com> wrote:
>>>
>>>> On Wed, 5 Jun 2019 18:07:15 +0200
>>>> Frank Schwidom <schwidom at gmx.net> wrote:
>>>>
>>>>> +> path.expand("a ~ b")
>>>>> [1] "a /home/user b"
>>>>
>>>>> How can I switch off any file crippling activity?
>>>>
>>>> It doesn't seem to be possible if readline is enabled and works
>>>> correctly.
>>>>
>>>> Calls to path.expand [1] end up [2] in R_ExpandFileName [3], which
>>>> calls R_ExpandFileName_readline [4], which uses libreadline function
>>>> tilde_expand [5]. tilde_expand seems to be designed to expand '~'
>>>> anywhere in the string it is handed, i.e. operate on whole command
>>>> lines, not file paths.
>>>>
>>>> I am taking the liberty of Cc-ing R-devel in case this can be
>>>> considered a bug.
>>>>
>>>> --
>>>> Best regards,
>>>> Ivan
>>>>
>>>> [1]
>>>>
>>>>
>> https://github.com/wch/r-source/blob/12d1d2d232d84aa355e333348b81180a0e2c6f2f/src/main/names.c#L807
>>>>
>>>> [2]
>>>>
>>>>
>> https://github.com/wch/r-source/blob/12d1d2d232d84aa355e333348b81180a0e2c6f2f/src/main/platform.c#L1915
>>>>
>>>> [3]
>>>>
>>>>
>> https://github.com/wch/r-source/blob/12d1d2d232d84aa355e333348b81180a0e2c6f2f/src/unix/sys-unix.c#L147
>>>>
>>>> [4]
>>>>
>>>>
>> https://github.com/wch/r-source/blob/12d1d2d232d84aa355e333348b81180a0e2c6f2f/src/unix/sys-std.c#L494
>>>>
>>>> [5]
>>>>
>> https://git.savannah.gnu.org/cgit/readline.git/tree/tilde.c?h=devel#n187
>>>>
>>>> ______________________________________________
>>>> R-help at r-project.org mailing list -- To UNSUBSCRIBE and more, see
>>>> https://stat.ethz.ch/mailman/listinfo/r-help
>>>> PLEASE do read the posting guide
>>>> http://www.R-project.org/posting-guide.html
>>>> and provide commented, minimal, self-contained, reproducible code.
>>>>
>>>
>>>        [[alternative HTML version deleted]]
>>>
>>
>>
>>
> 
> 	[[alternative HTML version deleted]]
> 
> ______________________________________________
> R-help at r-project.org mailing list -- To UNSUBSCRIBE and more, see
> https://stat.ethz.ch/mailman/listinfo/r-help
> PLEASE do read the posting guide http://www.R-project.org/posting-guide.html
> and provide commented, minimal, self-contained, reproducible code.
>


From d@rocz|g @end|ng |rom r@pporter@net  Sat Jun  8 13:42:01 2019
From: d@rocz|g @end|ng |rom r@pporter@net (=?UTF-8?Q?Gergely_Dar=C3=B3czi?=)
Date: Sat, 8 Jun 2019 13:42:01 +0200
Subject: [Rd] Determining the exit code of an "almost finished" R script
Message-ID: <CAPvvxJUyDVV4xe5=zPJzWs=OeD0DtSw1iWFP90LNn1apu+VCQg@mail.gmail.com>

Dear All,

I'm using "reg.finalizer" in a function that is to be called in R scripts
to do some cleanup on success. I have not found a way to run the function
only if the script run without errors, so when the exit code is expected to
be 0.

What I've tried is checking "geterrmessage()", but unfortunately it's not
perfect: if an error was handled with eg "tryCatch" previously, that
message still shows up there.

Is there any better way of figuring out in "reg.finalizer" or ".Last" if
the session run OK or exiting with !0 exit code?

Thanks,
Gergely

	[[alternative HTML version deleted]]


From murdoch@dunc@n @end|ng |rom gm@||@com  Sat Jun  8 14:13:55 2019
From: murdoch@dunc@n @end|ng |rom gm@||@com (Duncan Murdoch)
Date: Sat, 8 Jun 2019 08:13:55 -0400
Subject: [Rd] Determining the exit code of an "almost finished" R script
In-Reply-To: <CAPvvxJUyDVV4xe5=zPJzWs=OeD0DtSw1iWFP90LNn1apu+VCQg@mail.gmail.com>
References: <CAPvvxJUyDVV4xe5=zPJzWs=OeD0DtSw1iWFP90LNn1apu+VCQg@mail.gmail.com>
Message-ID: <03638bde-bb9b-1e67-abc1-1ab66ff153f7@gmail.com>

On 08/06/2019 7:42 a.m., Gergely Dar?czi wrote:
> Dear All,
> 
> I'm using "reg.finalizer" in a function that is to be called in R scripts
> to do some cleanup on success. I have not found a way to run the function
> only if the script run without errors, so when the exit code is expected to
> be 0.
> 
> What I've tried is checking "geterrmessage()", but unfortunately it's not
> perfect: if an error was handled with eg "tryCatch" previously, that
> message still shows up there.
> 
> Is there any better way of figuring out in "reg.finalizer" or ".Last" if
> the session run OK or exiting with !0 exit code?

Can't you just put the line to run it as the last line of your script? 
You won't get there if there was an error.

The point of reg.finalizer is to run code even if there was an error; 
your situation is much simpler.

Duncan Murdoch


From d@rocz|g @end|ng |rom r@pporter@net  Sat Jun  8 15:55:42 2019
From: d@rocz|g @end|ng |rom r@pporter@net (=?UTF-8?Q?Gergely_Dar=C3=B3czi?=)
Date: Sat, 8 Jun 2019 15:55:42 +0200
Subject: [Rd] Determining the exit code of an "almost finished" R script
In-Reply-To: <03638bde-bb9b-1e67-abc1-1ab66ff153f7@gmail.com>
References: <CAPvvxJUyDVV4xe5=zPJzWs=OeD0DtSw1iWFP90LNn1apu+VCQg@mail.gmail.com>
 <03638bde-bb9b-1e67-abc1-1ab66ff153f7@gmail.com>
Message-ID: <CAPvvxJUteOKZfT+-uE+Cb+o-V24YP_LrVu4eWt=FYotenOZURw@mail.gmail.com>

On Sat, Jun 8, 2019 at 2:13 PM Duncan Murdoch <murdoch.duncan at gmail.com> wrote:
>
> On 08/06/2019 7:42 a.m., Gergely Dar?czi wrote:
> > Dear All,
> >
> > I'm using "reg.finalizer" in a function that is to be called in R scripts
> > to do some cleanup on success. I have not found a way to run the function
> > only if the script run without errors, so when the exit code is expected to
> > be 0.
> >
> > What I've tried is checking "geterrmessage()", but unfortunately it's not
> > perfect: if an error was handled with eg "tryCatch" previously, that
> > message still shows up there.
> >
> > Is there any better way of figuring out in "reg.finalizer" or ".Last" if
> > the session run OK or exiting with !0 exit code?
>
> Can't you just put the line to run it as the last line of your script?
> You won't get there if there was an error.

Thank you very much, Duncan, but unfortunately, that's not feasible.

"reg.finalizer" is called from a function early in the script, which
function first checks when the same script last run and optionally
exists early.
If that optional early exit (within the helper function) doesn't
happen, then the "reg.finalizer" call sets a status update when the R
script has finished, but that should only happen if the script run
without any problems.

Of course, this helper could be split into two -- (1) function call at
the beginning of the script and (2) another at the end, but it would
be much less elegant and error-prone.

I know I'm trying to hack-in some features in my R scripts that should
be better handled by an external job scheduler, but I hope this is
doable.

>
>
> The point of reg.finalizer is to run code even if there was an error;
> your situation is much simpler.
>
> Duncan Murdoch


From murdoch@dunc@n @end|ng |rom gm@||@com  Sat Jun  8 18:50:33 2019
From: murdoch@dunc@n @end|ng |rom gm@||@com (Duncan Murdoch)
Date: Sat, 8 Jun 2019 12:50:33 -0400
Subject: [Rd] Determining the exit code of an "almost finished" R script
In-Reply-To: <CAPvvxJUteOKZfT+-uE+Cb+o-V24YP_LrVu4eWt=FYotenOZURw@mail.gmail.com>
References: <CAPvvxJUyDVV4xe5=zPJzWs=OeD0DtSw1iWFP90LNn1apu+VCQg@mail.gmail.com>
 <03638bde-bb9b-1e67-abc1-1ab66ff153f7@gmail.com>
 <CAPvvxJUteOKZfT+-uE+Cb+o-V24YP_LrVu4eWt=FYotenOZURw@mail.gmail.com>
Message-ID: <2360288f-52fb-096b-beb7-f5252844b2a2@gmail.com>

On 08/06/2019 9:55 a.m., Gergely Dar?czi wrote:
> On Sat, Jun 8, 2019 at 2:13 PM Duncan Murdoch <murdoch.duncan at gmail.com> wrote:
>>
>> On 08/06/2019 7:42 a.m., Gergely Dar?czi wrote:
>>> Dear All,
>>>
>>> I'm using "reg.finalizer" in a function that is to be called in R scripts
>>> to do some cleanup on success. I have not found a way to run the function
>>> only if the script run without errors, so when the exit code is expected to
>>> be 0.
>>>
>>> What I've tried is checking "geterrmessage()", but unfortunately it's not
>>> perfect: if an error was handled with eg "tryCatch" previously, that
>>> message still shows up there.
>>>
>>> Is there any better way of figuring out in "reg.finalizer" or ".Last" if
>>> the session run OK or exiting with !0 exit code?
>>
>> Can't you just put the line to run it as the last line of your script?
>> You won't get there if there was an error.
> 
> Thank you very much, Duncan, but unfortunately, that's not feasible.
> 
> "reg.finalizer" is called from a function early in the script, which
> function first checks when the same script last run and optionally
> exists early.

> If that optional early exit (within the helper function) doesn't
> happen, then the "reg.finalizer" call sets a status update when the R
> script has finished, but that should only happen if the script run
> without any problems.
> 
> Of course, this helper could be split into two -- (1) function call at
> the beginning of the script and (2) another at the end, but it would
> be much less elegant and error-prone.
> 
> I know I'm trying to hack-in some features in my R scripts that should
> be better handled by an external job scheduler, but I hope this is
> doable.

I still think you're using reg.finalizer() in a way it's not designed to 
work, and this makes it more complicated than necessary.  The strategy 
of splitting into two seems safer to me:  you never know when a 
finalizer will be called, because it is triggered by garbage 
collections, and those can happen asynchronously, not under your control.

It is nice to have all code for some purpose in one place, so if you 
really want that, you could put together your own explicitly called 
finalizer, something like this:

   finalizers <- list()

   addFinalizer <- function(fn) {
     finalizers <<- c(finalizers, list(fn))
   }

   runFinalizers <- function() {
     for (i in rev(seq_along(finalizers))) { # Run in reverse order
       finalizers[[i]]()       # Call the finalizer
       finalizers[[i]] <- NULL # Allow related objects to be released
     }
   }


In the place you now call reg.finalizer(), you call addFinalizer() 
instead; so all code specific to that task remains local.  At the end of 
your script if things have been successful, you call runFinalizers().

Duncan Murdoch





> 
>>
>>
>> The point of reg.finalizer is to run code even if there was an error;
>> your situation is much simpler.
>>
>> Duncan Murdoch


From @purd|e@@ @end|ng |rom gm@||@com  Tue Jun 11 00:06:31 2019
From: @purd|e@@ @end|ng |rom gm@||@com (Abby Spurdle)
Date: Tue, 11 Jun 2019 10:06:31 +1200
Subject: [Rd] Halfway through writing an "IDE" with support for R;
 Proof of concept, and request for suggestions.
Message-ID: <CAB8pepyZQRnw9xWG8DONb32KB5pw-x_a-3xQ9R1RswoLUVkBfw@mail.gmail.com>

I've written what I refer to as an "Integrated Console Environment".
Similar to an IDE, but more console oriented, so suitable for running
scripts and dynamic programming languages.
Also, it's designed to be congruent with the file system.

Obviously, I want to support R.
However, the long term plan is to make the core system relatively language
neutral, and to support R via a plugin.

Here's my (early, partially complete) prototype:
https://sites.google.com/site/spurdlea/java/symbyont

And I have some screenshots, which give the general idea:
https://sites.google.com/site/spurdlea/java/symbyont/screenshots

This biggest problem is that I don't have a fully functional console (or
terminal).
I don't know how this works under Windows, but I have found some
information on how it works under Linux.
If anyone would like to contribute or make suggestions in this area, please
email me.

Currently, I'm simply forking child processes, which works most of the
time, including the Windows command prompt.
There are some complications running R this way.
However, running "R --vanilla --ess" produces a reasonable result.

Also, I'm interested to hear what people would like to see in an R user
interface.

Any suggestions are welcome.
However, here are some specific questions that I have:
(1) What would people teaching R, like to see?
(2) If running multiple versions of R at the same time, are there any
GUI-level features that would be desirable?
(3) What should an outline viewer for R, look like and do?
(4) Should there be a data editor, and if so, should it be able to edit R
objects directly?

Noting that point (4) is contrary to the principle of being console
oriented.

Other notes:
(1) It's written in Java, and Swing.
This was the easiest way to create a cross platform user interface.
(2) Currently, it only supports Windows, very sorry.
I'm planning to have it working on Fedora, in the near future.
Then after that, we'll see...
(3) It's dual licensed under GPL 2 and GPL 3.
(4) I wrote most of this in 2006 and 2007.
I pulled it out of my personal archives at the end of April.
(5) It's badly written, and has some bugs and other problems.
Please don't email me and tell me it's badly written or has bugs, because I
know.
(6) I'm planning to completely rewrite it.
I'm likely to do one or two updates before I start rewriting it.
And hopefully, I'll have most of the problems solved, very soon.

It would be good to get suggestions *before* I start rewriting it.


Abs

	[[alternative HTML version deleted]]


From r@oknz @end|ng |rom gm@||@com  Sat Jun  8 05:27:54 2019
From: r@oknz @end|ng |rom gm@||@com (Richard O'Keefe)
Date: Sat, 8 Jun 2019 15:27:54 +1200
Subject: [Rd] [R] Open a file which name contains a tilde
In-Reply-To: <4BCEF16D-A9B7-460B-9E47-91B8A7B5DAB2@ucsd.edu>
References: <20190605160714.GA24635@debian64>
 <20190606135957.0be4db10@trisector>
 <CABcYAdLgLrBwNW4A4EgYx0RwD9zjCo4Mpe7S05SeohoNmMQSGg__2324.26375603012$1559899589$gmane$org@mail.gmail.com>
 <4BCEF16D-A9B7-460B-9E47-91B8A7B5DAB2@ucsd.edu>
Message-ID: <CABcYAdKzT5qGQMOerqy_=v5ztUBFe-zqfC6rMf+XhiOt1T9Dhg@mail.gmail.com>

?path.expand
    Expand a path name, for example by replacing a leading tilde by
    the user's home directory (if defined on that platform).

*A* path name.  The argument is a character vector.
If multiple path names are passed, they are passed

    On most builds of R *A LEADING* "~user" will be replaced...

Nothing is said in the R documentation about *multiple* or
*non-leading* tildes being replaced.

The actual behaviour is inconsistent with the documentation.
SOMETHING is a bug.

It's not clear to me why this is in any way dependent on
readline.  I've implemented tilde expansion several times
and always without readline.
It sounds as though R might be calling tilde_expand()
when it *should*, to be consistent with the documentation,
be calling tilde_expand_word().



as separate elements of the character vector.



On Sat, 8 Jun 2019 at 04:10, Berry, Charles <ccberry at ucsd.edu> wrote:

>
>
> > On Jun 6, 2019, at 2:04 PM, Richard O'Keefe <raoknz at gmail.com> wrote:
> >
> > How can expanding tildes anywhere but the beginning of a file name NOT be
> > considered a bug?
> >
> >
>
> I think that that IS what libreadline is doing if one allows a whitespace
> separated list of file names.
>
> As reported in R-help,
>
>         https://www.mail-archive.com/r-help at r-project.org/msg254116.html
>
> path.expand seems to expand tildes beginning whitespace separated strings
> that could be filenames, but not other tildes.
>
> Thus,
>
> > path.expand("~/.newsrc ~/.R/*")  # expands both tildes
> [1] "/Users/cberry/.newsrc /Users/cberry/.R/*"
> > path.expand("~/.newsrc~/.R/*")   # expands only the first
> [1] "/Users/cberry/.newsrc~/.R/*"
> >
>
> This could be a feature if what one wanted was to pass the result to a
> system command that will process multiple file arguments, e.g.
>
> > system(paste( "wc", path.expand("~/.newsrc ~/.R/*"))) # run wc on some
> files
>
> I doubt that this was intended by R-core, but perhaps the readline devs
> had this in mind.
>
> Chuck
>
>
> > On Thu, 6 Jun 2019 at 23:04, Ivan Krylov <krylov.r00t at gmail.com> wrote:
> >
> >> On Wed, 5 Jun 2019 18:07:15 +0200
> >> Frank Schwidom <schwidom at gmx.net> wrote:
> >>
> >>> +> path.expand("a ~ b")
> >>> [1] "a /home/user b"
> >>
> >>> How can I switch off any file crippling activity?
> >>
> >> It doesn't seem to be possible if readline is enabled and works
> >> correctly.
> >>
> >> Calls to path.expand [1] end up [2] in R_ExpandFileName [3], which
> >> calls R_ExpandFileName_readline [4], which uses libreadline function
> >> tilde_expand [5]. tilde_expand seems to be designed to expand '~'
> >> anywhere in the string it is handed, i.e. operate on whole command
> >> lines, not file paths.
> >>
> >> I am taking the liberty of Cc-ing R-devel in case this can be
> >> considered a bug.
> >>
> >> --
> >> Best regards,
> >> Ivan
> >>
> >> [1]
> >>
> >>
> https://github.com/wch/r-source/blob/12d1d2d232d84aa355e333348b81180a0e2c6f2f/src/main/names.c#L807
> >>
> >> [2]
> >>
> >>
> https://github.com/wch/r-source/blob/12d1d2d232d84aa355e333348b81180a0e2c6f2f/src/main/platform.c#L1915
> >>
> >> [3]
> >>
> >>
> https://github.com/wch/r-source/blob/12d1d2d232d84aa355e333348b81180a0e2c6f2f/src/unix/sys-unix.c#L147
> >>
> >> [4]
> >>
> >>
> https://github.com/wch/r-source/blob/12d1d2d232d84aa355e333348b81180a0e2c6f2f/src/unix/sys-std.c#L494
> >>
> >> [5]
> >>
> https://git.savannah.gnu.org/cgit/readline.git/tree/tilde.c?h=devel#n187
> >>
> >> ______________________________________________
> >> R-help at r-project.org mailing list -- To UNSUBSCRIBE and more, see
> >> https://stat.ethz.ch/mailman/listinfo/r-help
> >> PLEASE do read the posting guide
> >> http://www.R-project.org/posting-guide.html
> >> and provide commented, minimal, self-contained, reproducible code.
> >>
> >
> >       [[alternative HTML version deleted]]
> >
>
>
>

	[[alternative HTML version deleted]]


From @chw|dom @end|ng |rom gmx@net  Mon Jun 10 18:51:55 2019
From: @chw|dom @end|ng |rom gmx@net (Frank Schwidom)
Date: Mon, 10 Jun 2019 18:51:55 +0200
Subject: [Rd] [R] Open a file which name contains a tilde
In-Reply-To: <CABcYAdLgLrBwNW4A4EgYx0RwD9zjCo4Mpe7S05SeohoNmMQSGg@mail.gmail.com>
References: <20190605160714.GA24635@debian64>
 <20190606135957.0be4db10@trisector>
 <CABcYAdLgLrBwNW4A4EgYx0RwD9zjCo4Mpe7S05SeohoNmMQSGg@mail.gmail.com>
Message-ID: <20190610165155.GA29855@debian64>

Hi,

to get rid of any possible filename modification I started a little project to cover my usecase:

https://github.com/schwidom/simplefs

This is my first R package, suggestions and a review are welcome.

Thanks in advance
Frank Schwidom

On 2019-06-07 09:04:06, Richard O'Keefe wrote:
>    How can expanding tildes anywhere but the beginning of a file name NOT be
>    considered a bug?
>    On Thu, 6 Jun 2019 at 23:04, Ivan Krylov <[1]krylov.r00t at gmail.com> wrote:
>
>      On Wed, 5 Jun 2019 18:07:15 +0200
>      Frank Schwidom <[2]schwidom at gmx.net> wrote:
>
>      > +> path.expand("a ~ b")?
>      > [1] "a /home/user b"
>
>      > How can I switch off any file crippling activity?
>
>      It doesn't seem to be possible if readline is enabled and works
>      correctly.
>
>      Calls to path.expand [1] end up [2] in R_ExpandFileName [3], which
>      calls R_ExpandFileName_readline [4], which uses libreadline function
>      tilde_expand [5]. tilde_expand seems to be designed to expand '~'
>      anywhere in the string it is handed, i.e. operate on whole command
>      lines, not file paths.
>
>      I am taking the liberty of Cc-ing R-devel in case this can be
>      considered a bug.
>
>      --
>      Best regards,
>      Ivan
>
>      [1]
>      [3]https://github.com/wch/r-source/blob/12d1d2d232d84aa355e333348b81180a0e2c6f2f/src/main/names.c#L807
>
>      [2]
>      [4]https://github.com/wch/r-source/blob/12d1d2d232d84aa355e333348b81180a0e2c6f2f/src/main/platform.c#L1915
>
>      [3]
>      [5]https://github.com/wch/r-source/blob/12d1d2d232d84aa355e333348b81180a0e2c6f2f/src/unix/sys-unix.c#L147
>
>      [4]
>      [6]https://github.com/wch/r-source/blob/12d1d2d232d84aa355e333348b81180a0e2c6f2f/src/unix/sys-std.c#L494
>
>      [5]
>      [7]https://git.savannah.gnu.org/cgit/readline.git/tree/tilde.c?h=devel#n187
>
>      ______________________________________________
>      [8]R-help at r-project.org mailing list -- To UNSUBSCRIBE and more, see
>      [9]https://stat.ethz.ch/mailman/listinfo/r-help
>      PLEASE do read the posting guide
>      [10]http://www.R-project.org/posting-guide.html
>      and provide commented, minimal, self-contained, reproducible code.
>
> References
>
>    Visible links
>    1. mailto:krylov.r00t at gmail.com
>    2. mailto:schwidom at gmx.net
>    3. https://github.com/wch/r-source/blob/12d1d2d232d84aa355e333348b81180a0e2c6f2f/src/main/names.c#L807
>    4. https://github.com/wch/r-source/blob/12d1d2d232d84aa355e333348b81180a0e2c6f2f/src/main/platform.c#L1915
>    5. https://github.com/wch/r-source/blob/12d1d2d232d84aa355e333348b81180a0e2c6f2f/src/unix/sys-unix.c#L147
>    6. https://github.com/wch/r-source/blob/12d1d2d232d84aa355e333348b81180a0e2c6f2f/src/unix/sys-std.c#L494
>    7. https://git.savannah.gnu.org/cgit/readline.git/tree/tilde.c?h=devel#n187
>    8. mailto:R-help at r-project.org
>    9. https://stat.ethz.ch/mailman/listinfo/r-help
>   10. http://www.r-project.org/posting-guide.html


From @chw|dom @end|ng |rom gmx@net  Tue Jun 11 12:09:38 2019
From: @chw|dom @end|ng |rom gmx@net (Frank Schwidom)
Date: Tue, 11 Jun 2019 12:09:38 +0200
Subject: [Rd] [R] Open a file which name contains a tilde
In-Reply-To: <CABtg=Km4i9dsPoqC0sK=G9LvxbMd4FcHJ436usHkd+i7FPrR5Q@mail.gmail.com>
References: <20190605160714.GA24635@debian64>
 <20190606135957.0be4db10@trisector>
 <CABcYAdLgLrBwNW4A4EgYx0RwD9zjCo4Mpe7S05SeohoNmMQSGg@mail.gmail.com>
 <20190610165155.GA29855@debian64>
 <CABtg=Km4i9dsPoqC0sK=G9LvxbMd4FcHJ436usHkd+i7FPrR5Q@mail.gmail.com>
Message-ID: <20190611100938.GA3588@debian64>

Hi,

yes, I have seen this package and it has the same tilde expanding problem.

Please excuse me I will cc this answer to r-help and r-devel to keep the discussion running.

Kind regards,
Frank Schwidom

On 2019-06-11 09:12:36, G?bor Cs?rdi wrote:
> Just in case, have you seen the fs package?
> https://fs.r-lib.org/
>
> Gabor
>
> On Tue, Jun 11, 2019 at 7:51 AM Frank Schwidom <schwidom at gmx.net> wrote:
> >
> > Hi,
> >
> > to get rid of any possible filename modification I started a little project to cover my usecase:
> >
> > https://github.com/schwidom/simplefs
> >
> > This is my first R package, suggestions and a review are welcome.
> >
> > Thanks in advance
> > Frank Schwidom
> >
> > On 2019-06-07 09:04:06, Richard O'Keefe wrote:
> > >    How can expanding tildes anywhere but the beginning of a file name NOT be
> > >    considered a bug?
> > >    On Thu, 6 Jun 2019 at 23:04, Ivan Krylov <[1]krylov.r00t at gmail.com> wrote:
> > >
> > >      On Wed, 5 Jun 2019 18:07:15 +0200
> > >      Frank Schwidom <[2]schwidom at gmx.net> wrote:
> > >
> > >      > +> path.expand("a ~ b")
> > >      > [1] "a /home/user b"
> > >
> > >      > How can I switch off any file crippling activity?
> > >
> > >      It doesn't seem to be possible if readline is enabled and works
> > >      correctly.
> > >
> > >      Calls to path.expand [1] end up [2] in R_ExpandFileName [3], which
> > >      calls R_ExpandFileName_readline [4], which uses libreadline function
> > >      tilde_expand [5]. tilde_expand seems to be designed to expand '~'
> > >      anywhere in the string it is handed, i.e. operate on whole command
> > >      lines, not file paths.
> > >
> > >      I am taking the liberty of Cc-ing R-devel in case this can be
> > >      considered a bug.
> > >
> > >      --
> > >      Best regards,
> > >      Ivan
> > >
> > >      [1]
> > >      [3]https://github.com/wch/r-source/blob/12d1d2d232d84aa355e333348b81180a0e2c6f2f/src/main/names.c#L807
> > >
> > >      [2]
> > >      [4]https://github.com/wch/r-source/blob/12d1d2d232d84aa355e333348b81180a0e2c6f2f/src/main/platform.c#L1915
> > >
> > >      [3]
> > >      [5]https://github.com/wch/r-source/blob/12d1d2d232d84aa355e333348b81180a0e2c6f2f/src/unix/sys-unix.c#L147
> > >
> > >      [4]
> > >      [6]https://github.com/wch/r-source/blob/12d1d2d232d84aa355e333348b81180a0e2c6f2f/src/unix/sys-std.c#L494
> > >
> > >      [5]
> > >      [7]https://git.savannah.gnu.org/cgit/readline.git/tree/tilde.c?h=devel#n187
> > >
> > >      ______________________________________________
> > >      [8]R-help at r-project.org mailing list -- To UNSUBSCRIBE and more, see
> > >      [9]https://stat.ethz.ch/mailman/listinfo/r-help
> > >      PLEASE do read the posting guide
> > >      [10]http://www.R-project.org/posting-guide.html
> > >      and provide commented, minimal, self-contained, reproducible code.
> > >
> > > References
> > >
> > >    Visible links
> > >    1. mailto:krylov.r00t at gmail.com
> > >    2. mailto:schwidom at gmx.net
> > >    3. https://github.com/wch/r-source/blob/12d1d2d232d84aa355e333348b81180a0e2c6f2f/src/main/names.c#L807
> > >    4. https://github.com/wch/r-source/blob/12d1d2d232d84aa355e333348b81180a0e2c6f2f/src/main/platform.c#L1915
> > >    5. https://github.com/wch/r-source/blob/12d1d2d232d84aa355e333348b81180a0e2c6f2f/src/unix/sys-unix.c#L147
> > >    6. https://github.com/wch/r-source/blob/12d1d2d232d84aa355e333348b81180a0e2c6f2f/src/unix/sys-std.c#L494
> > >    7. https://git.savannah.gnu.org/cgit/readline.git/tree/tilde.c?h=devel#n187
> > >    8. mailto:R-help at r-project.org
> > >    9. https://stat.ethz.ch/mailman/listinfo/r-help
> > >   10. http://www.r-project.org/posting-guide.html
> >
> > ______________________________________________
> > R-devel at r-project.org mailing list
> > https://stat.ethz.ch/mailman/listinfo/r-devel
>


From g@bembecker @end|ng |rom gm@||@com  Tue Jun 11 18:49:17 2019
From: g@bembecker @end|ng |rom gm@||@com (Gabriel Becker)
Date: Tue, 11 Jun 2019 09:49:17 -0700
Subject: [Rd] [R] Open a file which name contains a tilde
In-Reply-To: <20190611100938.GA3588@debian64>
References: <20190605160714.GA24635@debian64>
 <20190606135957.0be4db10@trisector>
 <CABcYAdLgLrBwNW4A4EgYx0RwD9zjCo4Mpe7S05SeohoNmMQSGg@mail.gmail.com>
 <20190610165155.GA29855@debian64>
 <CABtg=Km4i9dsPoqC0sK=G9LvxbMd4FcHJ436usHkd+i7FPrR5Q@mail.gmail.com>
 <20190611100938.GA3588@debian64>
Message-ID: <CAD4oTHEqKpgxrV406fzqO2CYz2y7ccAsFBaU3TFt5ShVop1uXQ@mail.gmail.com>

Hi Frank,

I'm hesitant to be "that guy", but in case no one else has brought this up
to you, having files with a tilde in their names (generally but especially
on a linux system, where ~ in file names has a very important special
meaning in some cases, as we know) strikes me as an exceptionally bad
practice anyway. In light of that, the solution with the smallest amount of
pain for you is almost surely to just... not do that. Your filenames will
be better for it anyway.

There is a reason no one has complained about this before, and while I
haven't run a study or anything, I strongly suspect its that "everyone"
else is already on the "no tildes in filenames" bandwagon, so this
behavior, even if technically a bug, has no ability to cause them problems.

Best,
~G

On Tue, Jun 11, 2019 at 8:25 AM Frank Schwidom <schwidom at gmx.net> wrote:

> Hi,
>
> yes, I have seen this package and it has the same tilde expanding problem.
>
> Please excuse me I will cc this answer to r-help and r-devel to keep the
> discussion running.
>
> Kind regards,
> Frank Schwidom
>
> On 2019-06-11 09:12:36, G?bor Cs?rdi wrote:
> > Just in case, have you seen the fs package?
> > https://fs.r-lib.org/
> >
> > Gabor
> >
> > On Tue, Jun 11, 2019 at 7:51 AM Frank Schwidom <schwidom at gmx.net> wrote:
> > >
> > > Hi,
> > >
> > > to get rid of any possible filename modification I started a little
> project to cover my usecase:
> > >
> > > https://github.com/schwidom/simplefs
> > >
> > > This is my first R package, suggestions and a review are welcome.
> > >
> > > Thanks in advance
> > > Frank Schwidom
> > >
> > > On 2019-06-07 09:04:06, Richard O'Keefe wrote:
> > > >    How can expanding tildes anywhere but the beginning of a file
> name NOT be
> > > >    considered a bug?
> > > >    On Thu, 6 Jun 2019 at 23:04, Ivan Krylov <[1]
> krylov.r00t at gmail.com> wrote:
> > > >
> > > >      On Wed, 5 Jun 2019 18:07:15 +0200
> > > >      Frank Schwidom <[2]schwidom at gmx.net> wrote:
> > > >
> > > >      > +> path.expand("a ~ b")
> > > >      > [1] "a /home/user b"
> > > >
> > > >      > How can I switch off any file crippling activity?
> > > >
> > > >      It doesn't seem to be possible if readline is enabled and works
> > > >      correctly.
> > > >
> > > >      Calls to path.expand [1] end up [2] in R_ExpandFileName [3],
> which
> > > >      calls R_ExpandFileName_readline [4], which uses libreadline
> function
> > > >      tilde_expand [5]. tilde_expand seems to be designed to expand
> '~'
> > > >      anywhere in the string it is handed, i.e. operate on whole
> command
> > > >      lines, not file paths.
> > > >
> > > >      I am taking the liberty of Cc-ing R-devel in case this can be
> > > >      considered a bug.
> > > >
> > > >      --
> > > >      Best regards,
> > > >      Ivan
> > > >
> > > >      [1]
> > > >      [3]
> https://github.com/wch/r-source/blob/12d1d2d232d84aa355e333348b81180a0e2c6f2f/src/main/names.c#L807
> > > >
> > > >      [2]
> > > >      [4]
> https://github.com/wch/r-source/blob/12d1d2d232d84aa355e333348b81180a0e2c6f2f/src/main/platform.c#L1915
> > > >
> > > >      [3]
> > > >      [5]
> https://github.com/wch/r-source/blob/12d1d2d232d84aa355e333348b81180a0e2c6f2f/src/unix/sys-unix.c#L147
> > > >
> > > >      [4]
> > > >      [6]
> https://github.com/wch/r-source/blob/12d1d2d232d84aa355e333348b81180a0e2c6f2f/src/unix/sys-std.c#L494
> > > >
> > > >      [5]
> > > >      [7]
> https://git.savannah.gnu.org/cgit/readline.git/tree/tilde.c?h=devel#n187
> > > >
> > > >      ______________________________________________
> > > >      [8]R-help at r-project.org mailing list -- To UNSUBSCRIBE and
> more, see
> > > >      [9]https://stat.ethz.ch/mailman/listinfo/r-help
> > > >      PLEASE do read the posting guide
> > > >      [10]http://www.R-project.org/posting-guide.html
> > > >      and provide commented, minimal, self-contained, reproducible
> code.
> > > >
> > > > References
> > > >
> > > >    Visible links
> > > >    1. mailto:krylov.r00t at gmail.com
> > > >    2. mailto:schwidom at gmx.net
> > > >    3.
> https://github.com/wch/r-source/blob/12d1d2d232d84aa355e333348b81180a0e2c6f2f/src/main/names.c#L807
> > > >    4.
> https://github.com/wch/r-source/blob/12d1d2d232d84aa355e333348b81180a0e2c6f2f/src/main/platform.c#L1915
> > > >    5.
> https://github.com/wch/r-source/blob/12d1d2d232d84aa355e333348b81180a0e2c6f2f/src/unix/sys-unix.c#L147
> > > >    6.
> https://github.com/wch/r-source/blob/12d1d2d232d84aa355e333348b81180a0e2c6f2f/src/unix/sys-std.c#L494
> > > >    7.
> https://git.savannah.gnu.org/cgit/readline.git/tree/tilde.c?h=devel#n187
> > > >    8. mailto:R-help at r-project.org
> > > >    9. https://stat.ethz.ch/mailman/listinfo/r-help
> > > >   10. http://www.r-project.org/posting-guide.html
> > >
> > > ______________________________________________
> > > R-devel at r-project.org mailing list
> > > https://stat.ethz.ch/mailman/listinfo/r-devel
> >
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>

	[[alternative HTML version deleted]]


From tr@ver@c @end|ng |rom gm@||@com  Tue Jun 11 20:26:40 2019
From: tr@ver@c @end|ng |rom gm@||@com (Travers Ching)
Date: Tue, 11 Jun 2019 11:26:40 -0700
Subject: [Rd] [R] Open a file which name contains a tilde
In-Reply-To: <CAD4oTHEqKpgxrV406fzqO2CYz2y7ccAsFBaU3TFt5ShVop1uXQ@mail.gmail.com>
References: <20190605160714.GA24635@debian64>
 <20190606135957.0be4db10@trisector>
 <CABcYAdLgLrBwNW4A4EgYx0RwD9zjCo4Mpe7S05SeohoNmMQSGg@mail.gmail.com>
 <20190610165155.GA29855@debian64>
 <CABtg=Km4i9dsPoqC0sK=G9LvxbMd4FcHJ436usHkd+i7FPrR5Q@mail.gmail.com>
 <20190611100938.GA3588@debian64>
 <CAD4oTHEqKpgxrV406fzqO2CYz2y7ccAsFBaU3TFt5ShVop1uXQ@mail.gmail.com>
Message-ID: <CAPLMX9FrM2ZjuzjR6FEibZt0_KkujhwknQPXoWjfVfgFZNFYFQ@mail.gmail.com>

Hi Gabriel,

It may be bad practice, but you don't always have control over the file
name.

E.g. if someone shares a file with a tilde in it -- yes it is simple to
rename but it is extra time, and you might not bother to rename a file
without foreknowledge of this bug in the first place.

Even worse, if someone points you to a read only location on a shared
server, you won't even be able to rename the file, and copying might be
prohibitive if it's a large file.

There are also tilde files created automatically by other programs, notably
microsoft office.

Travers




On Tue, Jun 11, 2019 at 9:49 AM Gabriel Becker <gabembecker at gmail.com>
wrote:

> Hi Frank,
>
> I'm hesitant to be "that guy", but in case no one else has brought this up
> to you, having files with a tilde in their names (generally but especially
> on a linux system, where ~ in file names has a very important special
> meaning in some cases, as we know) strikes me as an exceptionally bad
> practice anyway. In light of that, the solution with the smallest amount of
> pain for you is almost surely to just... not do that. Your filenames will
> be better for it anyway.
>
> There is a reason no one has complained about this before, and while I
> haven't run a study or anything, I strongly suspect its that "everyone"
> else is already on the "no tildes in filenames" bandwagon, so this
> behavior, even if technically a bug, has no ability to cause them problems.
>
> Best,
> ~G
>
> On Tue, Jun 11, 2019 at 8:25 AM Frank Schwidom <schwidom at gmx.net> wrote:
>
> > Hi,
> >
> > yes, I have seen this package and it has the same tilde expanding
> problem.
> >
> > Please excuse me I will cc this answer to r-help and r-devel to keep the
> > discussion running.
> >
> > Kind regards,
> > Frank Schwidom
> >
> > On 2019-06-11 09:12:36, G?bor Cs?rdi wrote:
> > > Just in case, have you seen the fs package?
> > > https://fs.r-lib.org/
> > >
> > > Gabor
> > >
> > > On Tue, Jun 11, 2019 at 7:51 AM Frank Schwidom <schwidom at gmx.net>
> wrote:
> > > >
> > > > Hi,
> > > >
> > > > to get rid of any possible filename modification I started a little
> > project to cover my usecase:
> > > >
> > > > https://github.com/schwidom/simplefs
> > > >
> > > > This is my first R package, suggestions and a review are welcome.
> > > >
> > > > Thanks in advance
> > > > Frank Schwidom
> > > >
> > > > On 2019-06-07 09:04:06, Richard O'Keefe wrote:
> > > > >    How can expanding tildes anywhere but the beginning of a file
> > name NOT be
> > > > >    considered a bug?
> > > > >    On Thu, 6 Jun 2019 at 23:04, Ivan Krylov <[1]
> > krylov.r00t at gmail.com> wrote:
> > > > >
> > > > >      On Wed, 5 Jun 2019 18:07:15 +0200
> > > > >      Frank Schwidom <[2]schwidom at gmx.net> wrote:
> > > > >
> > > > >      > +> path.expand("a ~ b")
> > > > >      > [1] "a /home/user b"
> > > > >
> > > > >      > How can I switch off any file crippling activity?
> > > > >
> > > > >      It doesn't seem to be possible if readline is enabled and
> works
> > > > >      correctly.
> > > > >
> > > > >      Calls to path.expand [1] end up [2] in R_ExpandFileName [3],
> > which
> > > > >      calls R_ExpandFileName_readline [4], which uses libreadline
> > function
> > > > >      tilde_expand [5]. tilde_expand seems to be designed to expand
> > '~'
> > > > >      anywhere in the string it is handed, i.e. operate on whole
> > command
> > > > >      lines, not file paths.
> > > > >
> > > > >      I am taking the liberty of Cc-ing R-devel in case this can be
> > > > >      considered a bug.
> > > > >
> > > > >      --
> > > > >      Best regards,
> > > > >      Ivan
> > > > >
> > > > >      [1]
> > > > >      [3]
> >
> https://github.com/wch/r-source/blob/12d1d2d232d84aa355e333348b81180a0e2c6f2f/src/main/names.c#L807
> > > > >
> > > > >      [2]
> > > > >      [4]
> >
> https://github.com/wch/r-source/blob/12d1d2d232d84aa355e333348b81180a0e2c6f2f/src/main/platform.c#L1915
> > > > >
> > > > >      [3]
> > > > >      [5]
> >
> https://github.com/wch/r-source/blob/12d1d2d232d84aa355e333348b81180a0e2c6f2f/src/unix/sys-unix.c#L147
> > > > >
> > > > >      [4]
> > > > >      [6]
> >
> https://github.com/wch/r-source/blob/12d1d2d232d84aa355e333348b81180a0e2c6f2f/src/unix/sys-std.c#L494
> > > > >
> > > > >      [5]
> > > > >      [7]
> > https://git.savannah.gnu.org/cgit/readline.git/tree/tilde.c?h=devel#n187
> > > > >
> > > > >      ______________________________________________
> > > > >      [8]R-help at r-project.org mailing list -- To UNSUBSCRIBE and
> > more, see
> > > > >      [9]https://stat.ethz.ch/mailman/listinfo/r-help
> > > > >      PLEASE do read the posting guide
> > > > >      [10]http://www.R-project.org/posting-guide.html
> > > > >      and provide commented, minimal, self-contained, reproducible
> > code.
> > > > >
> > > > > References
> > > > >
> > > > >    Visible links
> > > > >    1. mailto:krylov.r00t at gmail.com
> > > > >    2. mailto:schwidom at gmx.net
> > > > >    3.
> >
> https://github.com/wch/r-source/blob/12d1d2d232d84aa355e333348b81180a0e2c6f2f/src/main/names.c#L807
> > > > >    4.
> >
> https://github.com/wch/r-source/blob/12d1d2d232d84aa355e333348b81180a0e2c6f2f/src/main/platform.c#L1915
> > > > >    5.
> >
> https://github.com/wch/r-source/blob/12d1d2d232d84aa355e333348b81180a0e2c6f2f/src/unix/sys-unix.c#L147
> > > > >    6.
> >
> https://github.com/wch/r-source/blob/12d1d2d232d84aa355e333348b81180a0e2c6f2f/src/unix/sys-std.c#L494
> > > > >    7.
> > https://git.savannah.gnu.org/cgit/readline.git/tree/tilde.c?h=devel#n187
> > > > >    8. mailto:R-help at r-project.org
> > > > >    9. https://stat.ethz.ch/mailman/listinfo/r-help
> > > > >   10. http://www.r-project.org/posting-guide.html
> > > >
> > > > ______________________________________________
> > > > R-devel at r-project.org mailing list
> > > > https://stat.ethz.ch/mailman/listinfo/r-devel
> > >
> >
> > ______________________________________________
> > R-devel at r-project.org mailing list
> > https://stat.ethz.ch/mailman/listinfo/r-devel
> >
>
>         [[alternative HTML version deleted]]
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>

	[[alternative HTML version deleted]]


From @chw|dom @end|ng |rom gmx@net  Tue Jun 11 22:18:23 2019
From: @chw|dom @end|ng |rom gmx@net (Frank Schwidom)
Date: Tue, 11 Jun 2019 22:18:23 +0200
Subject: [Rd] [R] Open a file which name contains a tilde
In-Reply-To: <CAD4oTHEqKpgxrV406fzqO2CYz2y7ccAsFBaU3TFt5ShVop1uXQ@mail.gmail.com>
References: <20190605160714.GA24635@debian64>
 <20190606135957.0be4db10@trisector>
 <CABcYAdLgLrBwNW4A4EgYx0RwD9zjCo4Mpe7S05SeohoNmMQSGg@mail.gmail.com>
 <20190610165155.GA29855@debian64>
 <CABtg=Km4i9dsPoqC0sK=G9LvxbMd4FcHJ436usHkd+i7FPrR5Q@mail.gmail.com>
 <20190611100938.GA3588@debian64>
 <CAD4oTHEqKpgxrV406fzqO2CYz2y7ccAsFBaU3TFt5ShVop1uXQ@mail.gmail.com>
Message-ID: <20190611201823.GA6068@debian64>

Hi Gabriel,

I actually want to make renames over thousands of files. But if I am not able to express the source filename of the rename operation I will not be able to get the work done. Besides the fact that there are issues I think that R is qualified for solving my problem by the method how it can handle long vectors of strings, booleans and also lists.

Kind regards,
Frank

On 2019-06-11 09:49:17, Gabriel Becker wrote:
>    Hi Frank,
>    I'm hesitant to be "that guy", but in case no one else has brought this up
>    to you, having files with a tilde in their names (generally but especially
>    on a linux system, where ~ in file names has a very important special
>    meaning in some cases, as we know) strikes me as an exceptionally bad
>    practice anyway. In light of that, the solution with the smallest amount
>    of pain for you is almost surely to just... not do that. Your filenames
>    will be better for it anyway.
>    There is a reason no one has complained about this before, and while I
>    haven't run a study or anything, I strongly suspect its that "everyone"
>    else is already on the "no tildes in filenames" bandwagon, so this
>    behavior, even if technically a bug, has no ability to cause them
>    problems.
>    Best,
>    ~G
>    On Tue, Jun 11, 2019 at 8:25 AM Frank Schwidom <[1]schwidom at gmx.net>
>    wrote:
>
>      Hi,
>
>      yes, I have seen this package and it has the same tilde expanding
>      problem.
>
>      Please excuse me I will cc this answer to r-help and r-devel to keep the
>      discussion running.
>
>      Kind regards,
>      Frank Schwidom
>
>      On 2019-06-11 09:12:36, G?bor Cs?rdi wrote:
>      > Just in case, have you seen the fs package?
>      > [2]https://fs.r-lib.org/
>      >
>      > Gabor
>      >
>      > On Tue, Jun 11, 2019 at 7:51 AM Frank Schwidom <[3]schwidom at gmx.net>
>      wrote:
>      > >
>      > > Hi,
>      > >
>      > > to get rid of any possible filename modification I started a little
>      project to cover my usecase:
>      > >
>      > > [4]https://github.com/schwidom/simplefs
>      > >
>      > > This is my first R package, suggestions and a review are welcome.
>      > >
>      > > Thanks in advance
>      > > Frank Schwidom
>      > >
>      > > On 2019-06-07 09:04:06, Richard O'Keefe wrote:
>      > > >? ? How can expanding tildes anywhere but the beginning of a file
>      name NOT be
>      > > >? ? considered a bug?
>      > > >? ? On Thu, 6 Jun 2019 at 23:04, Ivan Krylov
>      <[1][5]krylov.r00t at gmail.com> wrote:
>      > > >
>      > > >? ? ? On Wed, 5 Jun 2019 18:07:15 +0200
>      > > >? ? ? Frank Schwidom <[2][6]schwidom at gmx.net> wrote:
>      > > >
>      > > >? ? ? > +> path.expand("a ~ b")
>      > > >? ? ? > [1] "a /home/user b"
>      > > >
>      > > >? ? ? > How can I switch off any file crippling activity?
>      > > >
>      > > >? ? ? It doesn't seem to be possible if readline is enabled and
>      works
>      > > >? ? ? correctly.
>      > > >
>      > > >? ? ? Calls to path.expand [1] end up [2] in R_ExpandFileName [3],
>      which
>      > > >? ? ? calls R_ExpandFileName_readline [4], which uses libreadline
>      function
>      > > >? ? ? tilde_expand [5]. tilde_expand seems to be designed to expand
>      '~'
>      > > >? ? ? anywhere in the string it is handed, i.e. operate on whole
>      command
>      > > >? ? ? lines, not file paths.
>      > > >
>      > > >? ? ? I am taking the liberty of Cc-ing R-devel in case this can be
>      > > >? ? ? considered a bug.
>      > > >
>      > > >? ? ? --
>      > > >? ? ? Best regards,
>      > > >? ? ? Ivan
>      > > >
>      > > >? ? ? [1]
>      > > >? ? ?
>      [3][7]https://github.com/wch/r-source/blob/12d1d2d232d84aa355e333348b81180a0e2c6f2f/src/main/names.c#L807
>      > > >
>      > > >? ? ? [2]
>      > > >? ? ?
>      [4][8]https://github.com/wch/r-source/blob/12d1d2d232d84aa355e333348b81180a0e2c6f2f/src/main/platform.c#L1915
>      > > >
>      > > >? ? ? [3]
>      > > >? ? ?
>      [5][9]https://github.com/wch/r-source/blob/12d1d2d232d84aa355e333348b81180a0e2c6f2f/src/unix/sys-unix.c#L147
>      > > >
>      > > >? ? ? [4]
>      > > >? ? ?
>      [6][10]https://github.com/wch/r-source/blob/12d1d2d232d84aa355e333348b81180a0e2c6f2f/src/unix/sys-std.c#L494
>      > > >
>      > > >? ? ? [5]
>      > > >? ? ?
>      [7][11]https://git.savannah.gnu.org/cgit/readline.git/tree/tilde.c?h=devel#n187
>      > > >
>      > > >? ? ? ______________________________________________
>      > > >? ? ? [8][12]R-help at r-project.org mailing list -- To UNSUBSCRIBE
>      and more, see
>      > > >? ? ? [9][13]https://stat.ethz.ch/mailman/listinfo/r-help
>      > > >? ? ? PLEASE do read the posting guide
>      > > >? ? ? [10][14]http://www.R-project.org/posting-guide.html
>      > > >? ? ? and provide commented, minimal, self-contained, reproducible
>      code.
>      > > >
>      > > > References
>      > > >
>      > > >? ? Visible links
>      > > >? ? 1. mailto:[15]krylov.r00t at gmail.com
>      > > >? ? 2. mailto:[16]schwidom at gmx.net
>      > > >? ? 3.
>      [17]https://github.com/wch/r-source/blob/12d1d2d232d84aa355e333348b81180a0e2c6f2f/src/main/names.c#L807
>      > > >? ? 4.
>      [18]https://github.com/wch/r-source/blob/12d1d2d232d84aa355e333348b81180a0e2c6f2f/src/main/platform.c#L1915
>      > > >? ? 5.
>      [19]https://github.com/wch/r-source/blob/12d1d2d232d84aa355e333348b81180a0e2c6f2f/src/unix/sys-unix.c#L147
>      > > >? ? 6.
>      [20]https://github.com/wch/r-source/blob/12d1d2d232d84aa355e333348b81180a0e2c6f2f/src/unix/sys-std.c#L494
>      > > >? ? 7.
>      [21]https://git.savannah.gnu.org/cgit/readline.git/tree/tilde.c?h=devel#n187
>      > > >? ? 8. mailto:[22]R-help at r-project.org
>      > > >? ? 9. [23]https://stat.ethz.ch/mailman/listinfo/r-help
>      > > >? ?10. [24]http://www.r-project.org/posting-guide.html
>      > >
>      > > ______________________________________________
>      > > [25]R-devel at r-project.org mailing list
>      > > [26]https://stat.ethz.ch/mailman/listinfo/r-devel
>      >
>
>      ______________________________________________
>      [27]R-devel at r-project.org mailing list
>      [28]https://stat.ethz.ch/mailman/listinfo/r-devel
>
> References
>
>    Visible links
>    1. mailto:schwidom at gmx.net
>    2. https://fs.r-lib.org/
>    3. mailto:schwidom at gmx.net
>    4. https://github.com/schwidom/simplefs
>    5. mailto:krylov.r00t at gmail.com
>    6. mailto:schwidom at gmx.net
>    7. https://github.com/wch/r-source/blob/12d1d2d232d84aa355e333348b81180a0e2c6f2f/src/main/names.c#L807
>    8. https://github.com/wch/r-source/blob/12d1d2d232d84aa355e333348b81180a0e2c6f2f/src/main/platform.c#L1915
>    9. https://github.com/wch/r-source/blob/12d1d2d232d84aa355e333348b81180a0e2c6f2f/src/unix/sys-unix.c#L147
>   10. https://github.com/wch/r-source/blob/12d1d2d232d84aa355e333348b81180a0e2c6f2f/src/unix/sys-std.c#L494
>   11. https://git.savannah.gnu.org/cgit/readline.git/tree/tilde.c?h=devel#n187
>   12. mailto:R-help at r-project.org
>   13. https://stat.ethz.ch/mailman/listinfo/r-help
>   14. http://www.r-project.org/posting-guide.html
>   15. mailto:krylov.r00t at gmail.com
>   16. mailto:schwidom at gmx.net
>   17. https://github.com/wch/r-source/blob/12d1d2d232d84aa355e333348b81180a0e2c6f2f/src/main/names.c#L807
>   18. https://github.com/wch/r-source/blob/12d1d2d232d84aa355e333348b81180a0e2c6f2f/src/main/platform.c#L1915
>   19. https://github.com/wch/r-source/blob/12d1d2d232d84aa355e333348b81180a0e2c6f2f/src/unix/sys-unix.c#L147
>   20. https://github.com/wch/r-source/blob/12d1d2d232d84aa355e333348b81180a0e2c6f2f/src/unix/sys-std.c#L494
>   21. https://git.savannah.gnu.org/cgit/readline.git/tree/tilde.c?h=devel#n187
>   22. mailto:R-help at r-project.org
>   23. https://stat.ethz.ch/mailman/listinfo/r-help
>   24. http://www.r-project.org/posting-guide.html
>   25. mailto:R-devel at r-project.org
>   26. https://stat.ethz.ch/mailman/listinfo/r-devel
>   27. mailto:R-devel at r-project.org
>   28. https://stat.ethz.ch/mailman/listinfo/r-devel


From wdun|@p @end|ng |rom t|bco@com  Tue Jun 11 22:34:27 2019
From: wdun|@p @end|ng |rom t|bco@com (William Dunlap)
Date: Tue, 11 Jun 2019 13:34:27 -0700
Subject: [Rd] [R] Open a file which name contains a tilde
In-Reply-To: <20190611201823.GA6068@debian64>
References: <20190605160714.GA24635@debian64>
 <20190606135957.0be4db10@trisector>
 <CABcYAdLgLrBwNW4A4EgYx0RwD9zjCo4Mpe7S05SeohoNmMQSGg@mail.gmail.com>
 <20190610165155.GA29855@debian64>
 <CABtg=Km4i9dsPoqC0sK=G9LvxbMd4FcHJ436usHkd+i7FPrR5Q@mail.gmail.com>
 <20190611100938.GA3588@debian64>
 <CAD4oTHEqKpgxrV406fzqO2CYz2y7ccAsFBaU3TFt5ShVop1uXQ@mail.gmail.com>
 <20190611201823.GA6068@debian64>
Message-ID: <CAF8bMcYehy+Etkh5Xwzd6gG5bON1CFW9cKF9Mdo-oN4dprYq_A@mail.gmail.com>

Note that R treats tildes in file names differently on Windows and Linux.
On Windows, it is only replaced if it it at the beginning of the line and
is followed by a forward or backward slash or end-of-line.  On Linux it is
replaced no matter where it is in the text and ~someUser will be replaced
by someUser's home directory (if 'someUser' is a user with a home
directory).

Hence, if you have a Windows machine that can look at the file system on
your Linux machine you can use file.rename on Windows to change the names.
My inclination would be to use a bash script on Linux to change the names,
but if you are not comfortable with bash try the Windows approach.

Bill Dunlap
TIBCO Software
wdunlap tibco.com


On Tue, Jun 11, 2019 at 1:13 PM Frank Schwidom <schwidom at gmx.net> wrote:

> Hi Gabriel,
>
> I actually want to make renames over thousands of files. But if I am not
> able to express the source filename of the rename operation I will not be
> able to get the work done. Besides the fact that there are issues I think
> that R is qualified for solving my problem by the method how it can handle
> long vectors of strings, booleans and also lists.
>
> Kind regards,
> Frank
>
> On 2019-06-11 09:49:17, Gabriel Becker wrote:
> >    Hi Frank,
> >    I'm hesitant to be "that guy", but in case no one else has brought
> this up
> >    to you, having files with a tilde in their names (generally but
> especially
> >    on a linux system, where ~ in file names has a very important special
> >    meaning in some cases, as we know) strikes me as an exceptionally bad
> >    practice anyway. In light of that, the solution with the smallest
> amount
> >    of pain for you is almost surely to just... not do that. Your
> filenames
> >    will be better for it anyway.
> >    There is a reason no one has complained about this before, and while I
> >    haven't run a study or anything, I strongly suspect its that
> "everyone"
> >    else is already on the "no tildes in filenames" bandwagon, so this
> >    behavior, even if technically a bug, has no ability to cause them
> >    problems.
> >    Best,
> >    ~G
> >    On Tue, Jun 11, 2019 at 8:25 AM Frank Schwidom <[1]schwidom at gmx.net>
> >    wrote:
> >
> >      Hi,
> >
> >      yes, I have seen this package and it has the same tilde expanding
> >      problem.
> >
> >      Please excuse me I will cc this answer to r-help and r-devel to
> keep the
> >      discussion running.
> >
> >      Kind regards,
> >      Frank Schwidom
> >
> >      On 2019-06-11 09:12:36, G?bor Cs?rdi wrote:
> >      > Just in case, have you seen the fs package?
> >      > [2]https://fs.r-lib.org/
> >      >
> >      > Gabor
> >      >
> >      > On Tue, Jun 11, 2019 at 7:51 AM Frank Schwidom <[3]
> schwidom at gmx.net>
> >      wrote:
> >      > >
> >      > > Hi,
> >      > >
> >      > > to get rid of any possible filename modification I started a
> little
> >      project to cover my usecase:
> >      > >
> >      > > [4]https://github.com/schwidom/simplefs
> >      > >
> >      > > This is my first R package, suggestions and a review are
> welcome.
> >      > >
> >      > > Thanks in advance
> >      > > Frank Schwidom
> >      > >
> >      > > On 2019-06-07 09:04:06, Richard O'Keefe wrote:
> >      > > >    How can expanding tildes anywhere but the beginning of a
> file
> >      name NOT be
> >      > > >    considered a bug?
> >      > > >    On Thu, 6 Jun 2019 at 23:04, Ivan Krylov
> >      <[1][5]krylov.r00t at gmail.com> wrote:
> >      > > >
> >      > > >      On Wed, 5 Jun 2019 18:07:15 +0200
> >      > > >      Frank Schwidom <[2][6]schwidom at gmx.net> wrote:
> >      > > >
> >      > > >      > +> path.expand("a ~ b")
> >      > > >      > [1] "a /home/user b"
> >      > > >
> >      > > >      > How can I switch off any file crippling activity?
> >      > > >
> >      > > >      It doesn't seem to be possible if readline is enabled and
> >      works
> >      > > >      correctly.
> >      > > >
> >      > > >      Calls to path.expand [1] end up [2] in R_ExpandFileName
> [3],
> >      which
> >      > > >      calls R_ExpandFileName_readline [4], which uses
> libreadline
> >      function
> >      > > >      tilde_expand [5]. tilde_expand seems to be designed to
> expand
> >      '~'
> >      > > >      anywhere in the string it is handed, i.e. operate on
> whole
> >      command
> >      > > >      lines, not file paths.
> >      > > >
> >      > > >      I am taking the liberty of Cc-ing R-devel in case this
> can be
> >      > > >      considered a bug.
> >      > > >
> >      > > >      --
> >      > > >      Best regards,
> >      > > >      Ivan
> >      > > >
> >      > > >      [1]
> >      > > >
> >      [3][7]
> https://github.com/wch/r-source/blob/12d1d2d232d84aa355e333348b81180a0e2c6f2f/src/main/names.c#L807
> >      > > >
> >      > > >      [2]
> >      > > >
> >      [4][8]
> https://github.com/wch/r-source/blob/12d1d2d232d84aa355e333348b81180a0e2c6f2f/src/main/platform.c#L1915
> >      > > >
> >      > > >      [3]
> >      > > >
> >      [5][9]
> https://github.com/wch/r-source/blob/12d1d2d232d84aa355e333348b81180a0e2c6f2f/src/unix/sys-unix.c#L147
> >      > > >
> >      > > >      [4]
> >      > > >
> >      [6][10]
> https://github.com/wch/r-source/blob/12d1d2d232d84aa355e333348b81180a0e2c6f2f/src/unix/sys-std.c#L494
> >      > > >
> >      > > >      [5]
> >      > > >
> >      [7][11]
> https://git.savannah.gnu.org/cgit/readline.git/tree/tilde.c?h=devel#n187
> >      > > >
> >      > > >      ______________________________________________
> >      > > >      [8][12]R-help at r-project.org mailing list -- To
> UNSUBSCRIBE
> >      and more, see
> >      > > >      [9][13]https://stat.ethz.ch/mailman/listinfo/r-help
> >      > > >      PLEASE do read the posting guide
> >      > > >      [10][14]http://www.R-project.org/posting-guide.html
> >      > > >      and provide commented, minimal, self-contained,
> reproducible
> >      code.
> >      > > >
> >      > > > References
> >      > > >
> >      > > >    Visible links
> >      > > >    1. mailto:[15]krylov.r00t at gmail.com
> >      > > >    2. mailto:[16]schwidom at gmx.net
> >      > > >    3.
> >      [17]
> https://github.com/wch/r-source/blob/12d1d2d232d84aa355e333348b81180a0e2c6f2f/src/main/names.c#L807
> >      > > >    4.
> >      [18]
> https://github.com/wch/r-source/blob/12d1d2d232d84aa355e333348b81180a0e2c6f2f/src/main/platform.c#L1915
> >      > > >    5.
> >      [19]
> https://github.com/wch/r-source/blob/12d1d2d232d84aa355e333348b81180a0e2c6f2f/src/unix/sys-unix.c#L147
> >      > > >    6.
> >      [20]
> https://github.com/wch/r-source/blob/12d1d2d232d84aa355e333348b81180a0e2c6f2f/src/unix/sys-std.c#L494
> >      > > >    7.
> >      [21]
> https://git.savannah.gnu.org/cgit/readline.git/tree/tilde.c?h=devel#n187
> >      > > >    8. mailto:[22]R-help at r-project.org
> >      > > >    9. [23]https://stat.ethz.ch/mailman/listinfo/r-help
> >      > > >   10. [24]http://www.r-project.org/posting-guide.html
> >      > >
> >      > > ______________________________________________
> >      > > [25]R-devel at r-project.org mailing list
> >      > > [26]https://stat.ethz.ch/mailman/listinfo/r-devel
> >      >
> >
> >      ______________________________________________
> >      [27]R-devel at r-project.org mailing list
> >      [28]https://stat.ethz.ch/mailman/listinfo/r-devel
> >
> > References
> >
> >    Visible links
> >    1. mailto:schwidom at gmx.net
> >    2. https://fs.r-lib.org/
> >    3. mailto:schwidom at gmx.net
> >    4. https://github.com/schwidom/simplefs
> >    5. mailto:krylov.r00t at gmail.com
> >    6. mailto:schwidom at gmx.net
> >    7.
> https://github.com/wch/r-source/blob/12d1d2d232d84aa355e333348b81180a0e2c6f2f/src/main/names.c#L807
> >    8.
> https://github.com/wch/r-source/blob/12d1d2d232d84aa355e333348b81180a0e2c6f2f/src/main/platform.c#L1915
> >    9.
> https://github.com/wch/r-source/blob/12d1d2d232d84aa355e333348b81180a0e2c6f2f/src/unix/sys-unix.c#L147
> >   10.
> https://github.com/wch/r-source/blob/12d1d2d232d84aa355e333348b81180a0e2c6f2f/src/unix/sys-std.c#L494
> >   11.
> https://git.savannah.gnu.org/cgit/readline.git/tree/tilde.c?h=devel#n187
> >   12. mailto:R-help at r-project.org
> >   13. https://stat.ethz.ch/mailman/listinfo/r-help
> >   14. http://www.r-project.org/posting-guide.html
> >   15. mailto:krylov.r00t at gmail.com
> >   16. mailto:schwidom at gmx.net
> >   17.
> https://github.com/wch/r-source/blob/12d1d2d232d84aa355e333348b81180a0e2c6f2f/src/main/names.c#L807
> >   18.
> https://github.com/wch/r-source/blob/12d1d2d232d84aa355e333348b81180a0e2c6f2f/src/main/platform.c#L1915
> >   19.
> https://github.com/wch/r-source/blob/12d1d2d232d84aa355e333348b81180a0e2c6f2f/src/unix/sys-unix.c#L147
> >   20.
> https://github.com/wch/r-source/blob/12d1d2d232d84aa355e333348b81180a0e2c6f2f/src/unix/sys-std.c#L494
> >   21.
> https://git.savannah.gnu.org/cgit/readline.git/tree/tilde.c?h=devel#n187
> >   22. mailto:R-help at r-project.org
> >   23. https://stat.ethz.ch/mailman/listinfo/r-help
> >   24. http://www.r-project.org/posting-guide.html
> >   25. mailto:R-devel at r-project.org
> >   26. https://stat.ethz.ch/mailman/listinfo/r-devel
> >   27. mailto:R-devel at r-project.org
> >   28. https://stat.ethz.ch/mailman/listinfo/r-devel
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>

	[[alternative HTML version deleted]]


From murdoch@dunc@n @end|ng |rom gm@||@com  Tue Jun 11 22:59:04 2019
From: murdoch@dunc@n @end|ng |rom gm@||@com (Duncan Murdoch)
Date: Tue, 11 Jun 2019 16:59:04 -0400
Subject: [Rd] [R] Open a file which name contains a tilde
In-Reply-To: <CAF8bMcYehy+Etkh5Xwzd6gG5bON1CFW9cKF9Mdo-oN4dprYq_A@mail.gmail.com>
References: <20190605160714.GA24635@debian64>
 <20190606135957.0be4db10@trisector>
 <CABcYAdLgLrBwNW4A4EgYx0RwD9zjCo4Mpe7S05SeohoNmMQSGg@mail.gmail.com>
 <20190610165155.GA29855@debian64>
 <CABtg=Km4i9dsPoqC0sK=G9LvxbMd4FcHJ436usHkd+i7FPrR5Q@mail.gmail.com>
 <20190611100938.GA3588@debian64>
 <CAD4oTHEqKpgxrV406fzqO2CYz2y7ccAsFBaU3TFt5ShVop1uXQ@mail.gmail.com>
 <20190611201823.GA6068@debian64>
 <CAF8bMcYehy+Etkh5Xwzd6gG5bON1CFW9cKF9Mdo-oN4dprYq_A@mail.gmail.com>
Message-ID: <3dda0b39-4708-c220-530c-d5e07eb4168a@gmail.com>

On 11/06/2019 4:34 p.m., William Dunlap via R-devel wrote:
> Note that R treats tildes in file names differently on Windows and Linux.
> On Windows, it is only replaced if it it at the beginning of the line and
> is followed by a forward or backward slash or end-of-line.  On Linux it is
> replaced no matter where it is in the text and ~someUser will be replaced
> by someUser's home directory (if 'someUser' is a user with a home
> directory).

That's not quite true:  On Linux the bug is in the code that uses 
libreadline, which you don't have to use.  If you just specify
"--no-readline" when you start R, it will be fine on Linux, as far as I 
can see.

I wouldn't choose that as the default way to run R (it's pretty 
irritating not to have readline support), but it is a workaround for 
this bug.

Duncan Murdoch

> 
> Hence, if you have a Windows machine that can look at the file system on
> your Linux machine you can use file.rename on Windows to change the names.
> My inclination would be to use a bash script on Linux to change the names,
> but if you are not comfortable with bash try the Windows approach.
> 
> Bill Dunlap
> TIBCO Software
> wdunlap tibco.com
> 
> 
> On Tue, Jun 11, 2019 at 1:13 PM Frank Schwidom <schwidom at gmx.net> wrote:
> 
>> Hi Gabriel,
>>
>> I actually want to make renames over thousands of files. But if I am not
>> able to express the source filename of the rename operation I will not be
>> able to get the work done. Besides the fact that there are issues I think
>> that R is qualified for solving my problem by the method how it can handle
>> long vectors of strings, booleans and also lists.
>>
>> Kind regards,
>> Frank
>>
>> On 2019-06-11 09:49:17, Gabriel Becker wrote:
>>>     Hi Frank,
>>>     I'm hesitant to be "that guy", but in case no one else has brought
>> this up
>>>     to you, having files with a tilde in their names (generally but
>> especially
>>>     on a linux system, where ~ in file names has a very important special
>>>     meaning in some cases, as we know) strikes me as an exceptionally bad
>>>     practice anyway. In light of that, the solution with the smallest
>> amount
>>>     of pain for you is almost surely to just... not do that. Your
>> filenames
>>>     will be better for it anyway.
>>>     There is a reason no one has complained about this before, and while I
>>>     haven't run a study or anything, I strongly suspect its that
>> "everyone"
>>>     else is already on the "no tildes in filenames" bandwagon, so this
>>>     behavior, even if technically a bug, has no ability to cause them
>>>     problems.
>>>     Best,
>>>     ~G
>>>     On Tue, Jun 11, 2019 at 8:25 AM Frank Schwidom <[1]schwidom at gmx.net>
>>>     wrote:
>>>
>>>       Hi,
>>>
>>>       yes, I have seen this package and it has the same tilde expanding
>>>       problem.
>>>
>>>       Please excuse me I will cc this answer to r-help and r-devel to
>> keep the
>>>       discussion running.
>>>
>>>       Kind regards,
>>>       Frank Schwidom
>>>
>>>       On 2019-06-11 09:12:36, G?bor Cs?rdi wrote:
>>>       > Just in case, have you seen the fs package?
>>>       > [2]https://fs.r-lib.org/
>>>       >
>>>       > Gabor
>>>       >
>>>       > On Tue, Jun 11, 2019 at 7:51 AM Frank Schwidom <[3]
>> schwidom at gmx.net>
>>>       wrote:
>>>       > >
>>>       > > Hi,
>>>       > >
>>>       > > to get rid of any possible filename modification I started a
>> little
>>>       project to cover my usecase:
>>>       > >
>>>       > > [4]https://github.com/schwidom/simplefs
>>>       > >
>>>       > > This is my first R package, suggestions and a review are
>> welcome.
>>>       > >
>>>       > > Thanks in advance
>>>       > > Frank Schwidom
>>>       > >
>>>       > > On 2019-06-07 09:04:06, Richard O'Keefe wrote:
>>>       > > >    How can expanding tildes anywhere but the beginning of a
>> file
>>>       name NOT be
>>>       > > >    considered a bug?
>>>       > > >    On Thu, 6 Jun 2019 at 23:04, Ivan Krylov
>>>       <[1][5]krylov.r00t at gmail.com> wrote:
>>>       > > >
>>>       > > >      On Wed, 5 Jun 2019 18:07:15 +0200
>>>       > > >      Frank Schwidom <[2][6]schwidom at gmx.net> wrote:
>>>       > > >
>>>       > > >      > +> path.expand("a ~ b")
>>>       > > >      > [1] "a /home/user b"
>>>       > > >
>>>       > > >      > How can I switch off any file crippling activity?
>>>       > > >
>>>       > > >      It doesn't seem to be possible if readline is enabled and
>>>       works
>>>       > > >      correctly.
>>>       > > >
>>>       > > >      Calls to path.expand [1] end up [2] in R_ExpandFileName
>> [3],
>>>       which
>>>       > > >      calls R_ExpandFileName_readline [4], which uses
>> libreadline
>>>       function
>>>       > > >      tilde_expand [5]. tilde_expand seems to be designed to
>> expand
>>>       '~'
>>>       > > >      anywhere in the string it is handed, i.e. operate on
>> whole
>>>       command
>>>       > > >      lines, not file paths.
>>>       > > >
>>>       > > >      I am taking the liberty of Cc-ing R-devel in case this
>> can be
>>>       > > >      considered a bug.
>>>       > > >
>>>       > > >      --
>>>       > > >      Best regards,
>>>       > > >      Ivan
>>>       > > >
>>>       > > >      [1]
>>>       > > >
>>>       [3][7]
>> https://github.com/wch/r-source/blob/12d1d2d232d84aa355e333348b81180a0e2c6f2f/src/main/names.c#L807
>>>       > > >
>>>       > > >      [2]
>>>       > > >
>>>       [4][8]
>> https://github.com/wch/r-source/blob/12d1d2d232d84aa355e333348b81180a0e2c6f2f/src/main/platform.c#L1915
>>>       > > >
>>>       > > >      [3]
>>>       > > >
>>>       [5][9]
>> https://github.com/wch/r-source/blob/12d1d2d232d84aa355e333348b81180a0e2c6f2f/src/unix/sys-unix.c#L147
>>>       > > >
>>>       > > >      [4]
>>>       > > >
>>>       [6][10]
>> https://github.com/wch/r-source/blob/12d1d2d232d84aa355e333348b81180a0e2c6f2f/src/unix/sys-std.c#L494
>>>       > > >
>>>       > > >      [5]
>>>       > > >
>>>       [7][11]
>> https://git.savannah.gnu.org/cgit/readline.git/tree/tilde.c?h=devel#n187
>>>       > > >
>>>       > > >      ______________________________________________
>>>       > > >      [8][12]R-help at r-project.org mailing list -- To
>> UNSUBSCRIBE
>>>       and more, see
>>>       > > >      [9][13]https://stat.ethz.ch/mailman/listinfo/r-help
>>>       > > >      PLEASE do read the posting guide
>>>       > > >      [10][14]http://www.R-project.org/posting-guide.html
>>>       > > >      and provide commented, minimal, self-contained,
>> reproducible
>>>       code.
>>>       > > >
>>>       > > > References
>>>       > > >
>>>       > > >    Visible links
>>>       > > >    1. mailto:[15]krylov.r00t at gmail.com
>>>       > > >    2. mailto:[16]schwidom at gmx.net
>>>       > > >    3.
>>>       [17]
>> https://github.com/wch/r-source/blob/12d1d2d232d84aa355e333348b81180a0e2c6f2f/src/main/names.c#L807
>>>       > > >    4.
>>>       [18]
>> https://github.com/wch/r-source/blob/12d1d2d232d84aa355e333348b81180a0e2c6f2f/src/main/platform.c#L1915
>>>       > > >    5.
>>>       [19]
>> https://github.com/wch/r-source/blob/12d1d2d232d84aa355e333348b81180a0e2c6f2f/src/unix/sys-unix.c#L147
>>>       > > >    6.
>>>       [20]
>> https://github.com/wch/r-source/blob/12d1d2d232d84aa355e333348b81180a0e2c6f2f/src/unix/sys-std.c#L494
>>>       > > >    7.
>>>       [21]
>> https://git.savannah.gnu.org/cgit/readline.git/tree/tilde.c?h=devel#n187
>>>       > > >    8. mailto:[22]R-help at r-project.org
>>>       > > >    9. [23]https://stat.ethz.ch/mailman/listinfo/r-help
>>>       > > >   10. [24]http://www.r-project.org/posting-guide.html
>>>       > >
>>>       > > ______________________________________________
>>>       > > [25]R-devel at r-project.org mailing list
>>>       > > [26]https://stat.ethz.ch/mailman/listinfo/r-devel
>>>       >
>>>
>>>       ______________________________________________
>>>       [27]R-devel at r-project.org mailing list
>>>       [28]https://stat.ethz.ch/mailman/listinfo/r-devel
>>>
>>> References
>>>
>>>     Visible links
>>>     1. mailto:schwidom at gmx.net
>>>     2. https://fs.r-lib.org/
>>>     3. mailto:schwidom at gmx.net
>>>     4. https://github.com/schwidom/simplefs
>>>     5. mailto:krylov.r00t at gmail.com
>>>     6. mailto:schwidom at gmx.net
>>>     7.
>> https://github.com/wch/r-source/blob/12d1d2d232d84aa355e333348b81180a0e2c6f2f/src/main/names.c#L807
>>>     8.
>> https://github.com/wch/r-source/blob/12d1d2d232d84aa355e333348b81180a0e2c6f2f/src/main/platform.c#L1915
>>>     9.
>> https://github.com/wch/r-source/blob/12d1d2d232d84aa355e333348b81180a0e2c6f2f/src/unix/sys-unix.c#L147
>>>    10.
>> https://github.com/wch/r-source/blob/12d1d2d232d84aa355e333348b81180a0e2c6f2f/src/unix/sys-std.c#L494
>>>    11.
>> https://git.savannah.gnu.org/cgit/readline.git/tree/tilde.c?h=devel#n187
>>>    12. mailto:R-help at r-project.org
>>>    13. https://stat.ethz.ch/mailman/listinfo/r-help
>>>    14. http://www.r-project.org/posting-guide.html
>>>    15. mailto:krylov.r00t at gmail.com
>>>    16. mailto:schwidom at gmx.net
>>>    17.
>> https://github.com/wch/r-source/blob/12d1d2d232d84aa355e333348b81180a0e2c6f2f/src/main/names.c#L807
>>>    18.
>> https://github.com/wch/r-source/blob/12d1d2d232d84aa355e333348b81180a0e2c6f2f/src/main/platform.c#L1915
>>>    19.
>> https://github.com/wch/r-source/blob/12d1d2d232d84aa355e333348b81180a0e2c6f2f/src/unix/sys-unix.c#L147
>>>    20.
>> https://github.com/wch/r-source/blob/12d1d2d232d84aa355e333348b81180a0e2c6f2f/src/unix/sys-std.c#L494
>>>    21.
>> https://git.savannah.gnu.org/cgit/readline.git/tree/tilde.c?h=devel#n187
>>>    22. mailto:R-help at r-project.org
>>>    23. https://stat.ethz.ch/mailman/listinfo/r-help
>>>    24. http://www.r-project.org/posting-guide.html
>>>    25. mailto:R-devel at r-project.org
>>>    26. https://stat.ethz.ch/mailman/listinfo/r-devel
>>>    27. mailto:R-devel at r-project.org
>>>    28. https://stat.ethz.ch/mailman/listinfo/r-devel
>>
>> ______________________________________________
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>
> 
> 	[[alternative HTML version deleted]]
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>


From Kurt@Horn|k @end|ng |rom wu@@c@@t  Wed Jun 12 09:42:50 2019
From: Kurt@Horn|k @end|ng |rom wu@@c@@t (Kurt Hornik)
Date: Wed, 12 Jun 2019 09:42:50 +0200
Subject: [Rd] [R] Open a file which name contains a tilde
In-Reply-To: <3dda0b39-4708-c220-530c-d5e07eb4168a@gmail.com>
References: <20190605160714.GA24635@debian64>
 <20190606135957.0be4db10@trisector>
 <CABcYAdLgLrBwNW4A4EgYx0RwD9zjCo4Mpe7S05SeohoNmMQSGg@mail.gmail.com>
 <20190610165155.GA29855@debian64>
 <CABtg=Km4i9dsPoqC0sK=G9LvxbMd4FcHJ436usHkd+i7FPrR5Q@mail.gmail.com>
 <20190611100938.GA3588@debian64>
 <CAD4oTHEqKpgxrV406fzqO2CYz2y7ccAsFBaU3TFt5ShVop1uXQ@mail.gmail.com>
 <20190611201823.GA6068@debian64>
 <CAF8bMcYehy+Etkh5Xwzd6gG5bON1CFW9cKF9Mdo-oN4dprYq_A@mail.gmail.com>
 <3dda0b39-4708-c220-530c-d5e07eb4168a@gmail.com>
Message-ID: <23808.44282.850500.926937@hornik.net>

>>>>> Duncan Murdoch writes:

With c76695 in the trunk, we now only tilde expand file names starting
with a tilde also when using readline.

Best
-k

> On 11/06/2019 4:34 p.m., William Dunlap via R-devel wrote:
>> Note that R treats tildes in file names differently on Windows and Linux.
>> On Windows, it is only replaced if it it at the beginning of the line and
>> is followed by a forward or backward slash or end-of-line.  On Linux it is
>> replaced no matter where it is in the text and ~someUser will be replaced
>> by someUser's home directory (if 'someUser' is a user with a home
>> directory).

> That's not quite true:  On Linux the bug is in the code that uses 
> libreadline, which you don't have to use.  If you just specify
> "--no-readline" when you start R, it will be fine on Linux, as far as I 
> can see.

> I wouldn't choose that as the default way to run R (it's pretty 
> irritating not to have readline support), but it is a workaround for 
> this bug.

> Duncan Murdoch

>> 
>> Hence, if you have a Windows machine that can look at the file system on
>> your Linux machine you can use file.rename on Windows to change the names.
>> My inclination would be to use a bash script on Linux to change the names,
>> but if you are not comfortable with bash try the Windows approach.
>> 
>> Bill Dunlap
>> TIBCO Software
>> wdunlap tibco.com
>> 
>> 
>> On Tue, Jun 11, 2019 at 1:13 PM Frank Schwidom <schwidom at gmx.net> wrote:
>> 
>>> Hi Gabriel,
>>> 
>>> I actually want to make renames over thousands of files. But if I am not
>>> able to express the source filename of the rename operation I will not be
>>> able to get the work done. Besides the fact that there are issues I think
>>> that R is qualified for solving my problem by the method how it can handle
>>> long vectors of strings, booleans and also lists.
>>> 
>>> Kind regards,
>>> Frank
>>> 
>>> On 2019-06-11 09:49:17, Gabriel Becker wrote:
>>>> Hi Frank,
>>>> I'm hesitant to be "that guy", but in case no one else has brought
>>> this up
>>>> to you, having files with a tilde in their names (generally but
>>> especially
>>>> on a linux system, where ~ in file names has a very important special
>>>> meaning in some cases, as we know) strikes me as an exceptionally bad
>>>> practice anyway. In light of that, the solution with the smallest
>>> amount
>>>> of pain for you is almost surely to just... not do that. Your
>>> filenames
>>>> will be better for it anyway.
>>>> There is a reason no one has complained about this before, and while I
>>>> haven't run a study or anything, I strongly suspect its that
>>> "everyone"
>>>> else is already on the "no tildes in filenames" bandwagon, so this
>>>> behavior, even if technically a bug, has no ability to cause them
>>>> problems.
>>>> Best,
>>>> ~G
>>>> On Tue, Jun 11, 2019 at 8:25 AM Frank Schwidom <[1]schwidom at gmx.net>
>>>> wrote:
>>>> 
>>>> Hi,
>>>> 
>>>> yes, I have seen this package and it has the same tilde expanding
>>>> problem.
>>>> 
>>>> Please excuse me I will cc this answer to r-help and r-devel to
>>> keep the
>>>> discussion running.
>>>> 
>>>> Kind regards,
>>>> Frank Schwidom
>>>> 
>>>> On 2019-06-11 09:12:36, G?bor Cs?rdi wrote:
>>>> > Just in case, have you seen the fs package?
>>>> > [2]https://fs.r-lib.org/
>>>> >
>>>> > Gabor
>>>> >
>>>> > On Tue, Jun 11, 2019 at 7:51 AM Frank Schwidom <[3]
>>> schwidom at gmx.net>
>>>> wrote:
>>>> > >
>>>> > > Hi,
>>>> > >
>>>> > > to get rid of any possible filename modification I started a
>>> little
>>>> project to cover my usecase:
>>>> > >
>>>> > > [4]https://github.com/schwidom/simplefs
>>>> > >
>>>> > > This is my first R package, suggestions and a review are
>>> welcome.
>>>> > >
>>>> > > Thanks in advance
>>>> > > Frank Schwidom
>>>> > >
>>>> > > On 2019-06-07 09:04:06, Richard O'Keefe wrote:
>>>> > > >    How can expanding tildes anywhere but the beginning of a
>>> file
>>>> name NOT be
>>>> > > >    considered a bug?
>>>> > > >    On Thu, 6 Jun 2019 at 23:04, Ivan Krylov
>>>> <[1][5]krylov.r00t at gmail.com> wrote:
>>>> > > >
>>>> > > >      On Wed, 5 Jun 2019 18:07:15 +0200
>>>> > > >      Frank Schwidom <[2][6]schwidom at gmx.net> wrote:
>>>> > > >
>>>> > > >      > +> path.expand("a ~ b")
>>>> > > >      > [1] "a /home/user b"
>>>> > > >
>>>> > > >      > How can I switch off any file crippling activity?
>>>> > > >
>>>> > > >      It doesn't seem to be possible if readline is enabled and
>>>> works
>>>> > > >      correctly.
>>>> > > >
>>>> > > >      Calls to path.expand [1] end up [2] in R_ExpandFileName
>>> [3],
>>>> which
>>>> > > >      calls R_ExpandFileName_readline [4], which uses
>>> libreadline
>>>> function
>>>> > > >      tilde_expand [5]. tilde_expand seems to be designed to
>>> expand
>>>> '~'
>>>> > > >      anywhere in the string it is handed, i.e. operate on
>>> whole
>>>> command
>>>> > > >      lines, not file paths.
>>>> > > >
>>>> > > >      I am taking the liberty of Cc-ing R-devel in case this
>>> can be
>>>> > > >      considered a bug.
>>>> > > >
>>>> > > >      --
>>>> > > >      Best regards,
>>>> > > >      Ivan
>>>> > > >
>>>> > > >      [1]
>>>> > > >
>>>> [3][7]
>>> https://github.com/wch/r-source/blob/12d1d2d232d84aa355e333348b81180a0e2c6f2f/src/main/names.c#L807
>>>> > > >
>>>> > > >      [2]
>>>> > > >
>>>> [4][8]
>>> https://github.com/wch/r-source/blob/12d1d2d232d84aa355e333348b81180a0e2c6f2f/src/main/platform.c#L1915
>>>> > > >
>>>> > > >      [3]
>>>> > > >
>>>> [5][9]
>>> https://github.com/wch/r-source/blob/12d1d2d232d84aa355e333348b81180a0e2c6f2f/src/unix/sys-unix.c#L147
>>>> > > >
>>>> > > >      [4]
>>>> > > >
>>>> [6][10]
>>> https://github.com/wch/r-source/blob/12d1d2d232d84aa355e333348b81180a0e2c6f2f/src/unix/sys-std.c#L494
>>>> > > >
>>>> > > >      [5]
>>>> > > >
>>>> [7][11]
>>> https://git.savannah.gnu.org/cgit/readline.git/tree/tilde.c?h=devel#n187
>>>> > > >
>>>> > > >      ______________________________________________
>>>> > > >      [8][12]R-help at r-project.org mailing list -- To
>>> UNSUBSCRIBE
>>>> and more, see
>>>> > > >      [9][13]https://stat.ethz.ch/mailman/listinfo/r-help
>>>> > > >      PLEASE do read the posting guide
>>>> > > >      [10][14]http://www.R-project.org/posting-guide.html
>>>> > > >      and provide commented, minimal, self-contained,
>>> reproducible
>>>> code.
>>>> > > >
>>>> > > > References
>>>> > > >
>>>> > > >    Visible links
>>>> > > >    1. mailto:[15]krylov.r00t at gmail.com
>>>> > > >    2. mailto:[16]schwidom at gmx.net
>>>> > > >    3.
>>>> [17]
>>> https://github.com/wch/r-source/blob/12d1d2d232d84aa355e333348b81180a0e2c6f2f/src/main/names.c#L807
>>>> > > >    4.
>>>> [18]
>>> https://github.com/wch/r-source/blob/12d1d2d232d84aa355e333348b81180a0e2c6f2f/src/main/platform.c#L1915
>>>> > > >    5.
>>>> [19]
>>> https://github.com/wch/r-source/blob/12d1d2d232d84aa355e333348b81180a0e2c6f2f/src/unix/sys-unix.c#L147
>>>> > > >    6.
>>>> [20]
>>> https://github.com/wch/r-source/blob/12d1d2d232d84aa355e333348b81180a0e2c6f2f/src/unix/sys-std.c#L494
>>>> > > >    7.
>>>> [21]
>>> https://git.savannah.gnu.org/cgit/readline.git/tree/tilde.c?h=devel#n187
>>>> > > >    8. mailto:[22]R-help at r-project.org
>>>> > > >    9. [23]https://stat.ethz.ch/mailman/listinfo/r-help
>>>> > > >   10. [24]http://www.r-project.org/posting-guide.html
>>>> > >
>>>> > > ______________________________________________
>>>> > > [25]R-devel at r-project.org mailing list
>>>> > > [26]https://stat.ethz.ch/mailman/listinfo/r-devel
>>>> >
>>>> 
>>>> ______________________________________________
>>>> [27]R-devel at r-project.org mailing list
>>>> [28]https://stat.ethz.ch/mailman/listinfo/r-devel
>>>> 
>>>> References
>>>> 
>>>> Visible links
>>>> 1. mailto:schwidom at gmx.net
>>>> 2. https://fs.r-lib.org/
>>>> 3. mailto:schwidom at gmx.net
>>>> 4. https://github.com/schwidom/simplefs
>>>> 5. mailto:krylov.r00t at gmail.com
>>>> 6. mailto:schwidom at gmx.net
>>>> 7.
>>> https://github.com/wch/r-source/blob/12d1d2d232d84aa355e333348b81180a0e2c6f2f/src/main/names.c#L807
>>>> 8.
>>> https://github.com/wch/r-source/blob/12d1d2d232d84aa355e333348b81180a0e2c6f2f/src/main/platform.c#L1915
>>>> 9.
>>> https://github.com/wch/r-source/blob/12d1d2d232d84aa355e333348b81180a0e2c6f2f/src/unix/sys-unix.c#L147
>>>> 10.
>>> https://github.com/wch/r-source/blob/12d1d2d232d84aa355e333348b81180a0e2c6f2f/src/unix/sys-std.c#L494
>>>> 11.
>>> https://git.savannah.gnu.org/cgit/readline.git/tree/tilde.c?h=devel#n187
>>>> 12. mailto:R-help at r-project.org
>>>> 13. https://stat.ethz.ch/mailman/listinfo/r-help
>>>> 14. http://www.r-project.org/posting-guide.html
>>>> 15. mailto:krylov.r00t at gmail.com
>>>> 16. mailto:schwidom at gmx.net
>>>> 17.
>>> https://github.com/wch/r-source/blob/12d1d2d232d84aa355e333348b81180a0e2c6f2f/src/main/names.c#L807
>>>> 18.
>>> https://github.com/wch/r-source/blob/12d1d2d232d84aa355e333348b81180a0e2c6f2f/src/main/platform.c#L1915
>>>> 19.
>>> https://github.com/wch/r-source/blob/12d1d2d232d84aa355e333348b81180a0e2c6f2f/src/unix/sys-unix.c#L147
>>>> 20.
>>> https://github.com/wch/r-source/blob/12d1d2d232d84aa355e333348b81180a0e2c6f2f/src/unix/sys-std.c#L494
>>>> 21.
>>> https://git.savannah.gnu.org/cgit/readline.git/tree/tilde.c?h=devel#n187
>>>> 22. mailto:R-help at r-project.org
>>>> 23. https://stat.ethz.ch/mailman/listinfo/r-help
>>>> 24. http://www.r-project.org/posting-guide.html
>>>> 25. mailto:R-devel at r-project.org
>>>> 26. https://stat.ethz.ch/mailman/listinfo/r-devel
>>>> 27. mailto:R-devel at r-project.org
>>>> 28. https://stat.ethz.ch/mailman/listinfo/r-devel
>>> 
>>> ______________________________________________
>>> R-devel at r-project.org mailing list
>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>> 
>> 
>> [[alternative HTML version deleted]]
>> 
>> ______________________________________________
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel
>> 

> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From mcque@ten @end|ng |rom gm@||@com  Wed Jun 12 14:15:16 2019
From: mcque@ten @end|ng |rom gm@||@com (Paul McQuesten)
Date: Wed, 12 Jun 2019 07:15:16 -0500
Subject: [Rd] [R] Open a file which name contains a tilde
In-Reply-To: <23808.44282.850500.926937@hornik.net>
References: <20190605160714.GA24635@debian64>
 <20190606135957.0be4db10@trisector>
 <CABcYAdLgLrBwNW4A4EgYx0RwD9zjCo4Mpe7S05SeohoNmMQSGg@mail.gmail.com>
 <20190610165155.GA29855@debian64>
 <CABtg=Km4i9dsPoqC0sK=G9LvxbMd4FcHJ436usHkd+i7FPrR5Q@mail.gmail.com>
 <20190611100938.GA3588@debian64>
 <CAD4oTHEqKpgxrV406fzqO2CYz2y7ccAsFBaU3TFt5ShVop1uXQ@mail.gmail.com>
 <20190611201823.GA6068@debian64>
 <CAF8bMcYehy+Etkh5Xwzd6gG5bON1CFW9cKF9Mdo-oN4dprYq_A@mail.gmail.com>
 <3dda0b39-4708-c220-530c-d5e07eb4168a@gmail.com>
 <23808.44282.850500.926937@hornik.net>
Message-ID: <CAN6Gc-3P6n_xz=61ry=Hcgfk7t3JS2RSidSL33R4e8yUxr8VPA@mail.gmail.com>

@ Gabriel:

"Avoid tilde in file names":
Not quite.
A tilde *suffix* is commonly used by *nix editors for backup files
https://unix.stackexchange.com/questions/76189/what-does-the-tilde-mean-at-the-end-of-a-filename

On Wed, Jun 12, 2019 at 2:43 AM Kurt Hornik <Kurt.Hornik at wu.ac.at> wrote:

> >>>>> Duncan Murdoch writes:
>
> With c76695 in the trunk, we now only tilde expand file names starting
> with a tilde also when using readline.
>
> Best
> -k
>
> > On 11/06/2019 4:34 p.m., William Dunlap via R-devel wrote:
> >> Note that R treats tildes in file names differently on Windows and
> Linux.
> >> On Windows, it is only replaced if it it at the beginning of the line
> and
> >> is followed by a forward or backward slash or end-of-line.  On Linux it
> is
> >> replaced no matter where it is in the text and ~someUser will be
> replaced
> >> by someUser's home directory (if 'someUser' is a user with a home
> >> directory).
>
> > That's not quite true:  On Linux the bug is in the code that uses
> > libreadline, which you don't have to use.  If you just specify
> > "--no-readline" when you start R, it will be fine on Linux, as far as I
> > can see.
>
> > I wouldn't choose that as the default way to run R (it's pretty
> > irritating not to have readline support), but it is a workaround for
> > this bug.
>
> > Duncan Murdoch
>
> >>
> >> Hence, if you have a Windows machine that can look at the file system on
> >> your Linux machine you can use file.rename on Windows to change the
> names.
> >> My inclination would be to use a bash script on Linux to change the
> names,
> >> but if you are not comfortable with bash try the Windows approach.
> >>
> >> Bill Dunlap
> >> TIBCO Software
> >> wdunlap tibco.com
> >>
> >>
> >> On Tue, Jun 11, 2019 at 1:13 PM Frank Schwidom <schwidom at gmx.net>
> wrote:
> >>
> >>> Hi Gabriel,
> >>>
> >>> I actually want to make renames over thousands of files. But if I am
> not
> >>> able to express the source filename of the rename operation I will not
> be
> >>> able to get the work done. Besides the fact that there are issues I
> think
> >>> that R is qualified for solving my problem by the method how it can
> handle
> >>> long vectors of strings, booleans and also lists.
> >>>
> >>> Kind regards,
> >>> Frank
> >>>
> >>> On 2019-06-11 09:49:17, Gabriel Becker wrote:
> >>>> Hi Frank,
> >>>> I'm hesitant to be "that guy", but in case no one else has brought
> >>> this up
> >>>> to you, having files with a tilde in their names (generally but
> >>> especially
> >>>> on a linux system, where ~ in file names has a very important special
> >>>> meaning in some cases, as we know) strikes me as an exceptionally bad
> >>>> practice anyway. In light of that, the solution with the smallest
> >>> amount
> >>>> of pain for you is almost surely to just... not do that. Your
> >>> filenames
> >>>> will be better for it anyway.
> >>>> There is a reason no one has complained about this before, and while I
> >>>> haven't run a study or anything, I strongly suspect its that
> >>> "everyone"
> >>>> else is already on the "no tildes in filenames" bandwagon, so this
> >>>> behavior, even if technically a bug, has no ability to cause them
> >>>> problems.
> >>>> Best,
> >>>> ~G
> >>>> On Tue, Jun 11, 2019 at 8:25 AM Frank Schwidom <[1]schwidom at gmx.net>
> >>>> wrote:
> >>>>
> >>>> Hi,
> >>>>
> >>>> yes, I have seen this package and it has the same tilde expanding
> >>>> problem.
> >>>>
> >>>> Please excuse me I will cc this answer to r-help and r-devel to
> >>> keep the
> >>>> discussion running.
> >>>>
> >>>> Kind regards,
> >>>> Frank Schwidom
> >>>>
> >>>> On 2019-06-11 09:12:36, G?bor Cs?rdi wrote:
> >>>> > Just in case, have you seen the fs package?
> >>>> > [2]https://fs.r-lib.org/
> >>>> >
> >>>> > Gabor
> >>>> >
> >>>> > On Tue, Jun 11, 2019 at 7:51 AM Frank Schwidom <[3]
> >>> schwidom at gmx.net>
> >>>> wrote:
> >>>> > >
> >>>> > > Hi,
> >>>> > >
> >>>> > > to get rid of any possible filename modification I started a
> >>> little
> >>>> project to cover my usecase:
> >>>> > >
> >>>> > > [4]https://github.com/schwidom/simplefs
> >>>> > >
> >>>> > > This is my first R package, suggestions and a review are
> >>> welcome.
> >>>> > >
> >>>> > > Thanks in advance
> >>>> > > Frank Schwidom
> >>>> > >
> >>>> > > On 2019-06-07 09:04:06, Richard O'Keefe wrote:
> >>>> > > >    How can expanding tildes anywhere but the beginning of a
> >>> file
> >>>> name NOT be
> >>>> > > >    considered a bug?
> >>>> > > >    On Thu, 6 Jun 2019 at 23:04, Ivan Krylov
> >>>> <[1][5]krylov.r00t at gmail.com> wrote:
> >>>> > > >
> >>>> > > >      On Wed, 5 Jun 2019 18:07:15 +0200
> >>>> > > >      Frank Schwidom <[2][6]schwidom at gmx.net> wrote:
> >>>> > > >
> >>>> > > >      > +> path.expand("a ~ b")
> >>>> > > >      > [1] "a /home/user b"
> >>>> > > >
> >>>> > > >      > How can I switch off any file crippling activity?
> >>>> > > >
> >>>> > > >      It doesn't seem to be possible if readline is enabled and
> >>>> works
> >>>> > > >      correctly.
> >>>> > > >
> >>>> > > >      Calls to path.expand [1] end up [2] in R_ExpandFileName
> >>> [3],
> >>>> which
> >>>> > > >      calls R_ExpandFileName_readline [4], which uses
> >>> libreadline
> >>>> function
> >>>> > > >      tilde_expand [5]. tilde_expand seems to be designed to
> >>> expand
> >>>> '~'
> >>>> > > >      anywhere in the string it is handed, i.e. operate on
> >>> whole
> >>>> command
> >>>> > > >      lines, not file paths.
> >>>> > > >
> >>>> > > >      I am taking the liberty of Cc-ing R-devel in case this
> >>> can be
> >>>> > > >      considered a bug.
> >>>> > > >
> >>>> > > >      --
> >>>> > > >      Best regards,
> >>>> > > >      Ivan
> >>>> > > >
> >>>> > > >      [1]
> >>>> > > >
> >>>> [3][7]
> >>>
> https://github.com/wch/r-source/blob/12d1d2d232d84aa355e333348b81180a0e2c6f2f/src/main/names.c#L807
> >>>> > > >
> >>>> > > >      [2]
> >>>> > > >
> >>>> [4][8]
> >>>
> https://github.com/wch/r-source/blob/12d1d2d232d84aa355e333348b81180a0e2c6f2f/src/main/platform.c#L1915
> >>>> > > >
> >>>> > > >      [3]
> >>>> > > >
> >>>> [5][9]
> >>>
> https://github.com/wch/r-source/blob/12d1d2d232d84aa355e333348b81180a0e2c6f2f/src/unix/sys-unix.c#L147
> >>>> > > >
> >>>> > > >      [4]
> >>>> > > >
> >>>> [6][10]
> >>>
> https://github.com/wch/r-source/blob/12d1d2d232d84aa355e333348b81180a0e2c6f2f/src/unix/sys-std.c#L494
> >>>> > > >
> >>>> > > >      [5]
> >>>> > > >
> >>>> [7][11]
> >>>
> https://git.savannah.gnu.org/cgit/readline.git/tree/tilde.c?h=devel#n187
> >>>> > > >
> >>>> > > >      ______________________________________________
> >>>> > > >      [8][12]R-help at r-project.org mailing list -- To
> >>> UNSUBSCRIBE
> >>>> and more, see
> >>>> > > >      [9][13]https://stat.ethz.ch/mailman/listinfo/r-help
> >>>> > > >      PLEASE do read the posting guide
> >>>> > > >      [10][14]http://www.R-project.org/posting-guide.html
> >>>> > > >      and provide commented, minimal, self-contained,
> >>> reproducible
> >>>> code.
> >>>> > > >
> >>>> > > > References
> >>>> > > >
> >>>> > > >    Visible links
> >>>> > > >    1. mailto:[15]krylov.r00t at gmail.com
> >>>> > > >    2. mailto:[16]schwidom at gmx.net
> >>>> > > >    3.
> >>>> [17]
> >>>
> https://github.com/wch/r-source/blob/12d1d2d232d84aa355e333348b81180a0e2c6f2f/src/main/names.c#L807
> >>>> > > >    4.
> >>>> [18]
> >>>
> https://github.com/wch/r-source/blob/12d1d2d232d84aa355e333348b81180a0e2c6f2f/src/main/platform.c#L1915
> >>>> > > >    5.
> >>>> [19]
> >>>
> https://github.com/wch/r-source/blob/12d1d2d232d84aa355e333348b81180a0e2c6f2f/src/unix/sys-unix.c#L147
> >>>> > > >    6.
> >>>> [20]
> >>>
> https://github.com/wch/r-source/blob/12d1d2d232d84aa355e333348b81180a0e2c6f2f/src/unix/sys-std.c#L494
> >>>> > > >    7.
> >>>> [21]
> >>>
> https://git.savannah.gnu.org/cgit/readline.git/tree/tilde.c?h=devel#n187
> >>>> > > >    8. mailto:[22]R-help at r-project.org
> >>>> > > >    9. [23]https://stat.ethz.ch/mailman/listinfo/r-help
> >>>> > > >   10. [24]http://www.r-project.org/posting-guide.html
> >>>> > >
> >>>> > > ______________________________________________
> >>>> > > [25]R-devel at r-project.org mailing list
> >>>> > > [26]https://stat.ethz.ch/mailman/listinfo/r-devel
> >>>> >
> >>>>
> >>>> ______________________________________________
> >>>> [27]R-devel at r-project.org mailing list
> >>>> [28]https://stat.ethz.ch/mailman/listinfo/r-devel
> >>>>
> >>>> References
> >>>>
> >>>> Visible links
> >>>> 1. mailto:schwidom at gmx.net
> >>>> 2. https://fs.r-lib.org/
> >>>> 3. mailto:schwidom at gmx.net
> >>>> 4. https://github.com/schwidom/simplefs
> >>>> 5. mailto:krylov.r00t at gmail.com
> >>>> 6. mailto:schwidom at gmx.net
> >>>> 7.
> >>>
> https://github.com/wch/r-source/blob/12d1d2d232d84aa355e333348b81180a0e2c6f2f/src/main/names.c#L807
> >>>> 8.
> >>>
> https://github.com/wch/r-source/blob/12d1d2d232d84aa355e333348b81180a0e2c6f2f/src/main/platform.c#L1915
> >>>> 9.
> >>>
> https://github.com/wch/r-source/blob/12d1d2d232d84aa355e333348b81180a0e2c6f2f/src/unix/sys-unix.c#L147
> >>>> 10.
> >>>
> https://github.com/wch/r-source/blob/12d1d2d232d84aa355e333348b81180a0e2c6f2f/src/unix/sys-std.c#L494
> >>>> 11.
> >>>
> https://git.savannah.gnu.org/cgit/readline.git/tree/tilde.c?h=devel#n187
> >>>> 12. mailto:R-help at r-project.org
> >>>> 13. https://stat.ethz.ch/mailman/listinfo/r-help
> >>>> 14. http://www.r-project.org/posting-guide.html
> >>>> 15. mailto:krylov.r00t at gmail.com
> >>>> 16. mailto:schwidom at gmx.net
> >>>> 17.
> >>>
> https://github.com/wch/r-source/blob/12d1d2d232d84aa355e333348b81180a0e2c6f2f/src/main/names.c#L807
> >>>> 18.
> >>>
> https://github.com/wch/r-source/blob/12d1d2d232d84aa355e333348b81180a0e2c6f2f/src/main/platform.c#L1915
> >>>> 19.
> >>>
> https://github.com/wch/r-source/blob/12d1d2d232d84aa355e333348b81180a0e2c6f2f/src/unix/sys-unix.c#L147
> >>>> 20.
> >>>
> https://github.com/wch/r-source/blob/12d1d2d232d84aa355e333348b81180a0e2c6f2f/src/unix/sys-std.c#L494
> >>>> 21.
> >>>
> https://git.savannah.gnu.org/cgit/readline.git/tree/tilde.c?h=devel#n187
> >>>> 22. mailto:R-help at r-project.org
> >>>> 23. https://stat.ethz.ch/mailman/listinfo/r-help
> >>>> 24. http://www.r-project.org/posting-guide.html
> >>>> 25. mailto:R-devel at r-project.org
> >>>> 26. https://stat.ethz.ch/mailman/listinfo/r-devel
> >>>> 27. mailto:R-devel at r-project.org
> >>>> 28. https://stat.ethz.ch/mailman/listinfo/r-devel
> >>>
> >>> ______________________________________________
> >>> R-devel at r-project.org mailing list
> >>> https://stat.ethz.ch/mailman/listinfo/r-devel
> >>>
> >>
> >> [[alternative HTML version deleted]]
> >>
> >> ______________________________________________
> >> R-devel at r-project.org mailing list
> >> https://stat.ethz.ch/mailman/listinfo/r-devel
> >>
>
> > ______________________________________________
> > R-devel at r-project.org mailing list
> > https://stat.ethz.ch/mailman/listinfo/r-devel
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>

	[[alternative HTML version deleted]]


From g@bembecker @end|ng |rom gm@||@com  Thu Jun 13 08:51:45 2019
From: g@bembecker @end|ng |rom gm@||@com (Gabriel Becker)
Date: Wed, 12 Jun 2019 23:51:45 -0700
Subject: [Rd] [R] Open a file which name contains a tilde
In-Reply-To: <CAN6Gc-3P6n_xz=61ry=Hcgfk7t3JS2RSidSL33R4e8yUxr8VPA@mail.gmail.com>
References: <20190605160714.GA24635@debian64>
 <20190606135957.0be4db10@trisector>
 <CABcYAdLgLrBwNW4A4EgYx0RwD9zjCo4Mpe7S05SeohoNmMQSGg@mail.gmail.com>
 <20190610165155.GA29855@debian64>
 <CABtg=Km4i9dsPoqC0sK=G9LvxbMd4FcHJ436usHkd+i7FPrR5Q@mail.gmail.com>
 <20190611100938.GA3588@debian64>
 <CAD4oTHEqKpgxrV406fzqO2CYz2y7ccAsFBaU3TFt5ShVop1uXQ@mail.gmail.com>
 <20190611201823.GA6068@debian64>
 <CAF8bMcYehy+Etkh5Xwzd6gG5bON1CFW9cKF9Mdo-oN4dprYq_A@mail.gmail.com>
 <3dda0b39-4708-c220-530c-d5e07eb4168a@gmail.com>
 <23808.44282.850500.926937@hornik.net>
 <CAN6Gc-3P6n_xz=61ry=Hcgfk7t3JS2RSidSL33R4e8yUxr8VPA@mail.gmail.com>
Message-ID: <CAD4oTHHF_VMYpKDTmoGYt_EfrsVNpUrRahnhKbe=Rih+Q4QEBQ@mail.gmail.com>

On Wed, Jun 12, 2019, 5:16 AM Paul McQuesten <mcquesten at gmail.com> wrote:

> @ Gabriel:
>
> "Avoid tilde in file names":
> Not quite.
> A tilde *suffix* is commonly used by *nix editors for backup files
>
> https://unix.stackexchange.com/questions/76189/what-does-the-tilde-mean-at-the-end-of-a-filename


I'm aware of that, but that isn't the case that is being discussed, as the
example given clearly had a tilde (and spaces) in the middle of the file.
Backup files witilde suffix does not trigger the bug being discussed. It's
*only* files paths where the tilde is surrounded on both by spaces (or on
the right by the end fo the string) that trigger it.

> path.expand("a~b")

[1] "a~b"

> path.expand("a ~ b")

[1] "a /Users/gabrielbecker b"

> path.expand("myfile.txt~")

[1] "myfile.txt~"

> path.expand("myfile.txt ~")

[1] "myfile.txt /Users/gabrielbecker"


All that said I'm really not interested in participating in a flame war
over this. I gave my 2 cents as respectfully as I could, so as of now
please consider my participation  and interest in this thread closed.

Best,
~G



>
>
>
> On Wed, Jun 12, 2019 at 2:43 AM Kurt Hornik <Kurt.Hornik at wu.ac.at> wrote:
>
> > >>>>> Duncan Murdoch writes:
> >
> > With c76695 in the trunk, we now only tilde expand file names starting
> > with a tilde also when using readline.
> >
> > Best
> > -k
> >
> > > On 11/06/2019 4:34 p.m., William Dunlap via R-devel wrote:
> > >> Note that R treats tildes in file names differently on Windows and
> > Linux.
> > >> On Windows, it is only replaced if it it at the beginning of the line
> > and
> > >> is followed by a forward or backward slash or end-of-line.  On Linux
> it
> > is
> > >> replaced no matter where it is in the text and ~someUser will be
> > replaced
> > >> by someUser's home directory (if 'someUser' is a user with a home
> > >> directory).
> >
> > > That's not quite true:  On Linux the bug is in the code that uses
> > > libreadline, which you don't have to use.  If you just specify
> > > "--no-readline" when you start R, it will be fine on Linux, as far as I
> > > can see.
> >
> > > I wouldn't choose that as the default way to run R (it's pretty
> > > irritating not to have readline support), but it is a workaround for
> > > this bug.
> >
> > > Duncan Murdoch
> >
> > >>
> > >> Hence, if you have a Windows machine that can look at the file system
> on
> > >> your Linux machine you can use file.rename on Windows to change the
> > names.
> > >> My inclination would be to use a bash script on Linux to change the
> > names,
> > >> but if you are not comfortable with bash try the Windows approach.
> > >>
> > >> Bill Dunlap
> > >> TIBCO Software
> > >> wdunlap tibco.com
> > >>
> > >>
> > >> On Tue, Jun 11, 2019 at 1:13 PM Frank Schwidom <schwidom at gmx.net>
> > wrote:
> > >>
> > >>> Hi Gabriel,
> > >>>
> > >>> I actually want to make renames over thousands of files. But if I am
> > not
> > >>> able to express the source filename of the rename operation I will
> not
> > be
> > >>> able to get the work done. Besides the fact that there are issues I
> > think
> > >>> that R is qualified for solving my problem by the method how it can
> > handle
> > >>> long vectors of strings, booleans and also lists.
> > >>>
> > >>> Kind regards,
> > >>> Frank
> > >>>
> > >>> On 2019-06-11 09:49:17, Gabriel Becker wrote:
> > >>>> Hi Frank,
> > >>>> I'm hesitant to be "that guy", but in case no one else has brought
> > >>> this up
> > >>>> to you, having files with a tilde in their names (generally but
> > >>> especially
> > >>>> on a linux system, where ~ in file names has a very important
> special
> > >>>> meaning in some cases, as we know) strikes me as an exceptionally
> bad
> > >>>> practice anyway. In light of that, the solution with the smallest
> > >>> amount
> > >>>> of pain for you is almost surely to just... not do that. Your
> > >>> filenames
> > >>>> will be better for it anyway.
> > >>>> There is a reason no one has complained about this before, and
> while I
> > >>>> haven't run a study or anything, I strongly suspect its that
> > >>> "everyone"
> > >>>> else is already on the "no tildes in filenames" bandwagon, so this
> > >>>> behavior, even if technically a bug, has no ability to cause them
> > >>>> problems.
> > >>>> Best,
> > >>>> ~G
> > >>>> On Tue, Jun 11, 2019 at 8:25 AM Frank Schwidom <[1]schwidom at gmx.net
> >
> > >>>> wrote:
> > >>>>
> > >>>> Hi,
> > >>>>
> > >>>> yes, I have seen this package and it has the same tilde expanding
> > >>>> problem.
> > >>>>
> > >>>> Please excuse me I will cc this answer to r-help and r-devel to
> > >>> keep the
> > >>>> discussion running.
> > >>>>
> > >>>> Kind regards,
> > >>>> Frank Schwidom
> > >>>>
> > >>>> On 2019-06-11 09:12:36, G?bor Cs?rdi wrote:
> > >>>> > Just in case, have you seen the fs package?
> > >>>> > [2]https://fs.r-lib.org/
> > >>>> >
> > >>>> > Gabor
> > >>>> >
> > >>>> > On Tue, Jun 11, 2019 at 7:51 AM Frank Schwidom <[3]
> > >>> schwidom at gmx.net>
> > >>>> wrote:
> > >>>> > >
> > >>>> > > Hi,
> > >>>> > >
> > >>>> > > to get rid of any possible filename modification I started a
> > >>> little
> > >>>> project to cover my usecase:
> > >>>> > >
> > >>>> > > [4]https://github.com/schwidom/simplefs
> > >>>> > >
> > >>>> > > This is my first R package, suggestions and a review are
> > >>> welcome.
> > >>>> > >
> > >>>> > > Thanks in advance
> > >>>> > > Frank Schwidom
> > >>>> > >
> > >>>> > > On 2019-06-07 09:04:06, Richard O'Keefe wrote:
> > >>>> > > >    How can expanding tildes anywhere but the beginning of a
> > >>> file
> > >>>> name NOT be
> > >>>> > > >    considered a bug?
> > >>>> > > >    On Thu, 6 Jun 2019 at 23:04, Ivan Krylov
> > >>>> <[1][5]krylov.r00t at gmail.com> wrote:
> > >>>> > > >
> > >>>> > > >      On Wed, 5 Jun 2019 18:07:15 +0200
> > >>>> > > >      Frank Schwidom <[2][6]schwidom at gmx.net> wrote:
> > >>>> > > >
> > >>>> > > >      > +> path.expand("a ~ b")
> > >>>> > > >      > [1] "a /home/user b"
> > >>>> > > >
> > >>>> > > >      > How can I switch off any file crippling activity?
> > >>>> > > >
> > >>>> > > >      It doesn't seem to be possible if readline is enabled and
> > >>>> works
> > >>>> > > >      correctly.
> > >>>> > > >
> > >>>> > > >      Calls to path.expand [1] end up [2] in R_ExpandFileName
> > >>> [3],
> > >>>> which
> > >>>> > > >      calls R_ExpandFileName_readline [4], which uses
> > >>> libreadline
> > >>>> function
> > >>>> > > >      tilde_expand [5]. tilde_expand seems to be designed to
> > >>> expand
> > >>>> '~'
> > >>>> > > >      anywhere in the string it is handed, i.e. operate on
> > >>> whole
> > >>>> command
> > >>>> > > >      lines, not file paths.
> > >>>> > > >
> > >>>> > > >      I am taking the liberty of Cc-ing R-devel in case this
> > >>> can be
> > >>>> > > >      considered a bug.
> > >>>> > > >
> > >>>> > > >      --
> > >>>> > > >      Best regards,
> > >>>> > > >      Ivan
> > >>>> > > >
> > >>>> > > >      [1]
> > >>>> > > >
> > >>>> [3][7]
> > >>>
> >
> https://github.com/wch/r-source/blob/12d1d2d232d84aa355e333348b81180a0e2c6f2f/src/main/names.c#L807
> > >>>> > > >
> > >>>> > > >      [2]
> > >>>> > > >
> > >>>> [4][8]
> > >>>
> >
> https://github.com/wch/r-source/blob/12d1d2d232d84aa355e333348b81180a0e2c6f2f/src/main/platform.c#L1915
> > >>>> > > >
> > >>>> > > >      [3]
> > >>>> > > >
> > >>>> [5][9]
> > >>>
> >
> https://github.com/wch/r-source/blob/12d1d2d232d84aa355e333348b81180a0e2c6f2f/src/unix/sys-unix.c#L147
> > >>>> > > >
> > >>>> > > >      [4]
> > >>>> > > >
> > >>>> [6][10]
> > >>>
> >
> https://github.com/wch/r-source/blob/12d1d2d232d84aa355e333348b81180a0e2c6f2f/src/unix/sys-std.c#L494
> > >>>> > > >
> > >>>> > > >      [5]
> > >>>> > > >
> > >>>> [7][11]
> > >>>
> > https://git.savannah.gnu.org/cgit/readline.git/tree/tilde.c?h=devel#n187
> > >>>> > > >
> > >>>> > > >      ______________________________________________
> > >>>> > > >      [8][12]R-help at r-project.org mailing list -- To
> > >>> UNSUBSCRIBE
> > >>>> and more, see
> > >>>> > > >      [9][13]https://stat.ethz.ch/mailman/listinfo/r-help
> > >>>> > > >      PLEASE do read the posting guide
> > >>>> > > >      [10][14]http://www.R-project.org/posting-guide.html
> > >>>> > > >      and provide commented, minimal, self-contained,
> > >>> reproducible
> > >>>> code.
> > >>>> > > >
> > >>>> > > > References
> > >>>> > > >
> > >>>> > > >    Visible links
> > >>>> > > >    1. mailto:[15]krylov.r00t at gmail.com
> > >>>> > > >    2. mailto:[16]schwidom at gmx.net
> > >>>> > > >    3.
> > >>>> [17]
> > >>>
> >
> https://github.com/wch/r-source/blob/12d1d2d232d84aa355e333348b81180a0e2c6f2f/src/main/names.c#L807
> > >>>> > > >    4.
> > >>>> [18]
> > >>>
> >
> https://github.com/wch/r-source/blob/12d1d2d232d84aa355e333348b81180a0e2c6f2f/src/main/platform.c#L1915
> > >>>> > > >    5.
> > >>>> [19]
> > >>>
> >
> https://github.com/wch/r-source/blob/12d1d2d232d84aa355e333348b81180a0e2c6f2f/src/unix/sys-unix.c#L147
> > >>>> > > >    6.
> > >>>> [20]
> > >>>
> >
> https://github.com/wch/r-source/blob/12d1d2d232d84aa355e333348b81180a0e2c6f2f/src/unix/sys-std.c#L494
> > >>>> > > >    7.
> > >>>> [21]
> > >>>
> > https://git.savannah.gnu.org/cgit/readline.git/tree/tilde.c?h=devel#n187
> > >>>> > > >    8. mailto:[22]R-help at r-project.org
> > >>>> > > >    9. [23]https://stat.ethz.ch/mailman/listinfo/r-help
> > >>>> > > >   10. [24]http://www.r-project.org/posting-guide.html
> > >>>> > >
> > >>>> > > ______________________________________________
> > >>>> > > [25]R-devel at r-project.org mailing list
> > >>>> > > [26]https://stat.ethz.ch/mailman/listinfo/r-devel
> > >>>> >
> > >>>>
> > >>>> ______________________________________________
> > >>>> [27]R-devel at r-project.org mailing list
> > >>>> [28]https://stat.ethz.ch/mailman/listinfo/r-devel
> > >>>>
> > >>>> References
> > >>>>
> > >>>> Visible links
> > >>>> 1. mailto:schwidom at gmx.net
> > >>>> 2. https://fs.r-lib.org/
> > >>>> 3. mailto:schwidom at gmx.net
> > >>>> 4. https://github.com/schwidom/simplefs
> > >>>> 5. mailto:krylov.r00t at gmail.com
> > >>>> 6. mailto:schwidom at gmx.net
> > >>>> 7.
> > >>>
> >
> https://github.com/wch/r-source/blob/12d1d2d232d84aa355e333348b81180a0e2c6f2f/src/main/names.c#L807
> > >>>> 8.
> > >>>
> >
> https://github.com/wch/r-source/blob/12d1d2d232d84aa355e333348b81180a0e2c6f2f/src/main/platform.c#L1915
> > >>>> 9.
> > >>>
> >
> https://github.com/wch/r-source/blob/12d1d2d232d84aa355e333348b81180a0e2c6f2f/src/unix/sys-unix.c#L147
> > >>>> 10.
> > >>>
> >
> https://github.com/wch/r-source/blob/12d1d2d232d84aa355e333348b81180a0e2c6f2f/src/unix/sys-std.c#L494
> > >>>> 11.
> > >>>
> > https://git.savannah.gnu.org/cgit/readline.git/tree/tilde.c?h=devel#n187
> > >>>> 12. mailto:R-help at r-project.org
> > >>>> 13. https://stat.ethz.ch/mailman/listinfo/r-help
> > >>>> 14. http://www.r-project.org/posting-guide.html
> > >>>> 15. mailto:krylov.r00t at gmail.com
> > >>>> 16. mailto:schwidom at gmx.net
> > >>>> 17.
> > >>>
> >
> https://github.com/wch/r-source/blob/12d1d2d232d84aa355e333348b81180a0e2c6f2f/src/main/names.c#L807
> > >>>> 18.
> > >>>
> >
> https://github.com/wch/r-source/blob/12d1d2d232d84aa355e333348b81180a0e2c6f2f/src/main/platform.c#L1915
> > >>>> 19.
> > >>>
> >
> https://github.com/wch/r-source/blob/12d1d2d232d84aa355e333348b81180a0e2c6f2f/src/unix/sys-unix.c#L147
> > >>>> 20.
> > >>>
> >
> https://github.com/wch/r-source/blob/12d1d2d232d84aa355e333348b81180a0e2c6f2f/src/unix/sys-std.c#L494
> > >>>> 21.
> > >>>
> > https://git.savannah.gnu.org/cgit/readline.git/tree/tilde.c?h=devel#n187
> > >>>> 22. mailto:R-help at r-project.org
> > >>>> 23. https://stat.ethz.ch/mailman/listinfo/r-help
> > >>>> 24. http://www.r-project.org/posting-guide.html
> > >>>> 25. mailto:R-devel at r-project.org
> > >>>> 26. https://stat.ethz.ch/mailman/listinfo/r-devel
> > >>>> 27. mailto:R-devel at r-project.org
> > >>>> 28. https://stat.ethz.ch/mailman/listinfo/r-devel
> > >>>
> > >>> ______________________________________________
> > >>> R-devel at r-project.org mailing list
> > >>> https://stat.ethz.ch/mailman/listinfo/r-devel
> > >>>
> > >>
> > >> [[alternative HTML version deleted]]
> > >>
> > >> ______________________________________________
> > >> R-devel at r-project.org mailing list
> > >> https://stat.ethz.ch/mailman/listinfo/r-devel
> > >>
> >
> > > ______________________________________________
> > > R-devel at r-project.org mailing list
> > > https://stat.ethz.ch/mailman/listinfo/r-devel
> >
> > ______________________________________________
> > R-devel at r-project.org mailing list
> > https://stat.ethz.ch/mailman/listinfo/r-devel
> >
>
>         [[alternative HTML version deleted]]
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>

	[[alternative HTML version deleted]]


From g@bembecker @end|ng |rom gm@||@com  Thu Jun 13 09:12:56 2019
From: g@bembecker @end|ng |rom gm@||@com (Gabriel Becker)
Date: Thu, 13 Jun 2019 00:12:56 -0700
Subject: [Rd] [R] Open a file which name contains a tilde
In-Reply-To: <CAD4oTHHF_VMYpKDTmoGYt_EfrsVNpUrRahnhKbe=Rih+Q4QEBQ@mail.gmail.com>
References: <20190605160714.GA24635@debian64>
 <20190606135957.0be4db10@trisector>
 <CABcYAdLgLrBwNW4A4EgYx0RwD9zjCo4Mpe7S05SeohoNmMQSGg@mail.gmail.com>
 <20190610165155.GA29855@debian64>
 <CABtg=Km4i9dsPoqC0sK=G9LvxbMd4FcHJ436usHkd+i7FPrR5Q@mail.gmail.com>
 <20190611100938.GA3588@debian64>
 <CAD4oTHEqKpgxrV406fzqO2CYz2y7ccAsFBaU3TFt5ShVop1uXQ@mail.gmail.com>
 <20190611201823.GA6068@debian64>
 <CAF8bMcYehy+Etkh5Xwzd6gG5bON1CFW9cKF9Mdo-oN4dprYq_A@mail.gmail.com>
 <3dda0b39-4708-c220-530c-d5e07eb4168a@gmail.com>
 <23808.44282.850500.926937@hornik.net>
 <CAN6Gc-3P6n_xz=61ry=Hcgfk7t3JS2RSidSL33R4e8yUxr8VPA@mail.gmail.com>
 <CAD4oTHHF_VMYpKDTmoGYt_EfrsVNpUrRahnhKbe=Rih+Q4QEBQ@mail.gmail.com>
Message-ID: <CAD4oTHENxXDP6jNpLju+5BwziqHU8bVkXecYbKytOSg15jejMA@mail.gmail.com>

At the risk of looking silly, note that all of this is now largely moot
anyway (or will be with the next release of R), thanks to Kurt Hornik's
fixing of the bug in question (which he announced on this thread prior to
but I read after Paul's).

~G

On Wed, Jun 12, 2019 at 11:51 PM Gabriel Becker <gabembecker at gmail.com>
wrote:

>
>
> On Wed, Jun 12, 2019, 5:16 AM Paul McQuesten <mcquesten at gmail.com> wrote:
>
>> @ Gabriel:
>>
>> "Avoid tilde in file names":
>> Not quite.
>> A tilde *suffix* is commonly used by *nix editors for backup files
>>
>> https://unix.stackexchange.com/questions/76189/what-does-the-tilde-mean-at-the-end-of-a-filename
>
>
> I'm aware of that, but that isn't the case that is being discussed, as the
> example given clearly had a tilde (and spaces) in the middle of the file.
> Backup files witilde suffix does not trigger the bug being discussed. It's
> *only* files paths where the tilde is surrounded on both by spaces (or on
> the right by the end fo the string) that trigger it.
>
> > path.expand("a~b")
>
> [1] "a~b"
>
> > path.expand("a ~ b")
>
> [1] "a /Users/gabrielbecker b"
>
> > path.expand("myfile.txt~")
>
> [1] "myfile.txt~"
>
> > path.expand("myfile.txt ~")
>
> [1] "myfile.txt /Users/gabrielbecker"
>
>
> All that said I'm really not interested in participating in a flame war
> over this. I gave my 2 cents as respectfully as I could, so as of now
> please consider my participation  and interest in this thread closed.
>
> Best,
> ~G
>
>
>
>>
>>
>>
>> On Wed, Jun 12, 2019 at 2:43 AM Kurt Hornik <Kurt.Hornik at wu.ac.at> wrote:
>>
>> > >>>>> Duncan Murdoch writes:
>> >
>> > With c76695 in the trunk, we now only tilde expand file names starting
>> > with a tilde also when using readline.
>> >
>> > Best
>> > -k
>> >
>> > > On 11/06/2019 4:34 p.m., William Dunlap via R-devel wrote:
>> > >> Note that R treats tildes in file names differently on Windows and
>> > Linux.
>> > >> On Windows, it is only replaced if it it at the beginning of the line
>> > and
>> > >> is followed by a forward or backward slash or end-of-line.  On Linux
>> it
>> > is
>> > >> replaced no matter where it is in the text and ~someUser will be
>> > replaced
>> > >> by someUser's home directory (if 'someUser' is a user with a home
>> > >> directory).
>> >
>> > > That's not quite true:  On Linux the bug is in the code that uses
>> > > libreadline, which you don't have to use.  If you just specify
>> > > "--no-readline" when you start R, it will be fine on Linux, as far as
>> I
>> > > can see.
>> >
>> > > I wouldn't choose that as the default way to run R (it's pretty
>> > > irritating not to have readline support), but it is a workaround for
>> > > this bug.
>> >
>> > > Duncan Murdoch
>> >
>> > >>
>> > >> Hence, if you have a Windows machine that can look at the file
>> system on
>> > >> your Linux machine you can use file.rename on Windows to change the
>> > names.
>> > >> My inclination would be to use a bash script on Linux to change the
>> > names,
>> > >> but if you are not comfortable with bash try the Windows approach.
>> > >>
>> > >> Bill Dunlap
>> > >> TIBCO Software
>> > >> wdunlap tibco.com
>> > >>
>> > >>
>> > >> On Tue, Jun 11, 2019 at 1:13 PM Frank Schwidom <schwidom at gmx.net>
>> > wrote:
>> > >>
>> > >>> Hi Gabriel,
>> > >>>
>> > >>> I actually want to make renames over thousands of files. But if I am
>> > not
>> > >>> able to express the source filename of the rename operation I will
>> not
>> > be
>> > >>> able to get the work done. Besides the fact that there are issues I
>> > think
>> > >>> that R is qualified for solving my problem by the method how it can
>> > handle
>> > >>> long vectors of strings, booleans and also lists.
>> > >>>
>> > >>> Kind regards,
>> > >>> Frank
>> > >>>
>> > >>> On 2019-06-11 09:49:17, Gabriel Becker wrote:
>> > >>>> Hi Frank,
>> > >>>> I'm hesitant to be "that guy", but in case no one else has brought
>> > >>> this up
>> > >>>> to you, having files with a tilde in their names (generally but
>> > >>> especially
>> > >>>> on a linux system, where ~ in file names has a very important
>> special
>> > >>>> meaning in some cases, as we know) strikes me as an exceptionally
>> bad
>> > >>>> practice anyway. In light of that, the solution with the smallest
>> > >>> amount
>> > >>>> of pain for you is almost surely to just... not do that. Your
>> > >>> filenames
>> > >>>> will be better for it anyway.
>> > >>>> There is a reason no one has complained about this before, and
>> while I
>> > >>>> haven't run a study or anything, I strongly suspect its that
>> > >>> "everyone"
>> > >>>> else is already on the "no tildes in filenames" bandwagon, so this
>> > >>>> behavior, even if technically a bug, has no ability to cause them
>> > >>>> problems.
>> > >>>> Best,
>> > >>>> ~G
>> > >>>> On Tue, Jun 11, 2019 at 8:25 AM Frank Schwidom <[1]
>> schwidom at gmx.net>
>> > >>>> wrote:
>> > >>>>
>> > >>>> Hi,
>> > >>>>
>> > >>>> yes, I have seen this package and it has the same tilde expanding
>> > >>>> problem.
>> > >>>>
>> > >>>> Please excuse me I will cc this answer to r-help and r-devel to
>> > >>> keep the
>> > >>>> discussion running.
>> > >>>>
>> > >>>> Kind regards,
>> > >>>> Frank Schwidom
>> > >>>>
>> > >>>> On 2019-06-11 09:12:36, G?bor Cs?rdi wrote:
>> > >>>> > Just in case, have you seen the fs package?
>> > >>>> > [2]https://fs.r-lib.org/
>> > >>>> >
>> > >>>> > Gabor
>> > >>>> >
>> > >>>> > On Tue, Jun 11, 2019 at 7:51 AM Frank Schwidom <[3]
>> > >>> schwidom at gmx.net>
>> > >>>> wrote:
>> > >>>> > >
>> > >>>> > > Hi,
>> > >>>> > >
>> > >>>> > > to get rid of any possible filename modification I started a
>> > >>> little
>> > >>>> project to cover my usecase:
>> > >>>> > >
>> > >>>> > > [4]https://github.com/schwidom/simplefs
>> > >>>> > >
>> > >>>> > > This is my first R package, suggestions and a review are
>> > >>> welcome.
>> > >>>> > >
>> > >>>> > > Thanks in advance
>> > >>>> > > Frank Schwidom
>> > >>>> > >
>> > >>>> > > On 2019-06-07 09:04:06, Richard O'Keefe wrote:
>> > >>>> > > >    How can expanding tildes anywhere but the beginning of a
>> > >>> file
>> > >>>> name NOT be
>> > >>>> > > >    considered a bug?
>> > >>>> > > >    On Thu, 6 Jun 2019 at 23:04, Ivan Krylov
>> > >>>> <[1][5]krylov.r00t at gmail.com> wrote:
>> > >>>> > > >
>> > >>>> > > >      On Wed, 5 Jun 2019 18:07:15 +0200
>> > >>>> > > >      Frank Schwidom <[2][6]schwidom at gmx.net> wrote:
>> > >>>> > > >
>> > >>>> > > >      > +> path.expand("a ~ b")
>> > >>>> > > >      > [1] "a /home/user b"
>> > >>>> > > >
>> > >>>> > > >      > How can I switch off any file crippling activity?
>> > >>>> > > >
>> > >>>> > > >      It doesn't seem to be possible if readline is enabled
>> and
>> > >>>> works
>> > >>>> > > >      correctly.
>> > >>>> > > >
>> > >>>> > > >      Calls to path.expand [1] end up [2] in R_ExpandFileName
>> > >>> [3],
>> > >>>> which
>> > >>>> > > >      calls R_ExpandFileName_readline [4], which uses
>> > >>> libreadline
>> > >>>> function
>> > >>>> > > >      tilde_expand [5]. tilde_expand seems to be designed to
>> > >>> expand
>> > >>>> '~'
>> > >>>> > > >      anywhere in the string it is handed, i.e. operate on
>> > >>> whole
>> > >>>> command
>> > >>>> > > >      lines, not file paths.
>> > >>>> > > >
>> > >>>> > > >      I am taking the liberty of Cc-ing R-devel in case this
>> > >>> can be
>> > >>>> > > >      considered a bug.
>> > >>>> > > >
>> > >>>> > > >      --
>> > >>>> > > >      Best regards,
>> > >>>> > > >      Ivan
>> > >>>> > > >
>> > >>>> > > >      [1]
>> > >>>> > > >
>> > >>>> [3][7]
>> > >>>
>> >
>> https://github.com/wch/r-source/blob/12d1d2d232d84aa355e333348b81180a0e2c6f2f/src/main/names.c#L807
>> > >>>> > > >
>> > >>>> > > >      [2]
>> > >>>> > > >
>> > >>>> [4][8]
>> > >>>
>> >
>> https://github.com/wch/r-source/blob/12d1d2d232d84aa355e333348b81180a0e2c6f2f/src/main/platform.c#L1915
>> > >>>> > > >
>> > >>>> > > >      [3]
>> > >>>> > > >
>> > >>>> [5][9]
>> > >>>
>> >
>> https://github.com/wch/r-source/blob/12d1d2d232d84aa355e333348b81180a0e2c6f2f/src/unix/sys-unix.c#L147
>> > >>>> > > >
>> > >>>> > > >      [4]
>> > >>>> > > >
>> > >>>> [6][10]
>> > >>>
>> >
>> https://github.com/wch/r-source/blob/12d1d2d232d84aa355e333348b81180a0e2c6f2f/src/unix/sys-std.c#L494
>> > >>>> > > >
>> > >>>> > > >      [5]
>> > >>>> > > >
>> > >>>> [7][11]
>> > >>>
>> >
>> https://git.savannah.gnu.org/cgit/readline.git/tree/tilde.c?h=devel#n187
>> > >>>> > > >
>> > >>>> > > >      ______________________________________________
>> > >>>> > > >      [8][12]R-help at r-project.org mailing list -- To
>> > >>> UNSUBSCRIBE
>> > >>>> and more, see
>> > >>>> > > >      [9][13]https://stat.ethz.ch/mailman/listinfo/r-help
>> > >>>> > > >      PLEASE do read the posting guide
>> > >>>> > > >      [10][14]http://www.R-project.org/posting-guide.html
>> > >>>> > > >      and provide commented, minimal, self-contained,
>> > >>> reproducible
>> > >>>> code.
>> > >>>> > > >
>> > >>>> > > > References
>> > >>>> > > >
>> > >>>> > > >    Visible links
>> > >>>> > > >    1. mailto:[15]krylov.r00t at gmail.com
>> > >>>> > > >    2. mailto:[16]schwidom at gmx.net
>> > >>>> > > >    3.
>> > >>>> [17]
>> > >>>
>> >
>> https://github.com/wch/r-source/blob/12d1d2d232d84aa355e333348b81180a0e2c6f2f/src/main/names.c#L807
>> > >>>> > > >    4.
>> > >>>> [18]
>> > >>>
>> >
>> https://github.com/wch/r-source/blob/12d1d2d232d84aa355e333348b81180a0e2c6f2f/src/main/platform.c#L1915
>> > >>>> > > >    5.
>> > >>>> [19]
>> > >>>
>> >
>> https://github.com/wch/r-source/blob/12d1d2d232d84aa355e333348b81180a0e2c6f2f/src/unix/sys-unix.c#L147
>> > >>>> > > >    6.
>> > >>>> [20]
>> > >>>
>> >
>> https://github.com/wch/r-source/blob/12d1d2d232d84aa355e333348b81180a0e2c6f2f/src/unix/sys-std.c#L494
>> > >>>> > > >    7.
>> > >>>> [21]
>> > >>>
>> >
>> https://git.savannah.gnu.org/cgit/readline.git/tree/tilde.c?h=devel#n187
>> > >>>> > > >    8. mailto:[22]R-help at r-project.org
>> > >>>> > > >    9. [23]https://stat.ethz.ch/mailman/listinfo/r-help
>> > >>>> > > >   10. [24]http://www.r-project.org/posting-guide.html
>> > >>>> > >
>> > >>>> > > ______________________________________________
>> > >>>> > > [25]R-devel at r-project.org mailing list
>> > >>>> > > [26]https://stat.ethz.ch/mailman/listinfo/r-devel
>> > >>>> >
>> > >>>>
>> > >>>> ______________________________________________
>> > >>>> [27]R-devel at r-project.org mailing list
>> > >>>> [28]https://stat.ethz.ch/mailman/listinfo/r-devel
>> > >>>>
>> > >>>> References
>> > >>>>
>> > >>>> Visible links
>> > >>>> 1. mailto:schwidom at gmx.net
>> > >>>> 2. https://fs.r-lib.org/
>> > >>>> 3. mailto:schwidom at gmx.net
>> > >>>> 4. https://github.com/schwidom/simplefs
>> > >>>> 5. mailto:krylov.r00t at gmail.com
>> > >>>> 6. mailto:schwidom at gmx.net
>> > >>>> 7.
>> > >>>
>> >
>> https://github.com/wch/r-source/blob/12d1d2d232d84aa355e333348b81180a0e2c6f2f/src/main/names.c#L807
>> > >>>> 8.
>> > >>>
>> >
>> https://github.com/wch/r-source/blob/12d1d2d232d84aa355e333348b81180a0e2c6f2f/src/main/platform.c#L1915
>> > >>>> 9.
>> > >>>
>> >
>> https://github.com/wch/r-source/blob/12d1d2d232d84aa355e333348b81180a0e2c6f2f/src/unix/sys-unix.c#L147
>> > >>>> 10.
>> > >>>
>> >
>> https://github.com/wch/r-source/blob/12d1d2d232d84aa355e333348b81180a0e2c6f2f/src/unix/sys-std.c#L494
>> > >>>> 11.
>> > >>>
>> >
>> https://git.savannah.gnu.org/cgit/readline.git/tree/tilde.c?h=devel#n187
>> > >>>> 12. mailto:R-help at r-project.org
>> > >>>> 13. https://stat.ethz.ch/mailman/listinfo/r-help
>> > >>>> 14. http://www.r-project.org/posting-guide.html
>> > >>>> 15. mailto:krylov.r00t at gmail.com
>> > >>>> 16. mailto:schwidom at gmx.net
>> > >>>> 17.
>> > >>>
>> >
>> https://github.com/wch/r-source/blob/12d1d2d232d84aa355e333348b81180a0e2c6f2f/src/main/names.c#L807
>> > >>>> 18.
>> > >>>
>> >
>> https://github.com/wch/r-source/blob/12d1d2d232d84aa355e333348b81180a0e2c6f2f/src/main/platform.c#L1915
>> > >>>> 19.
>> > >>>
>> >
>> https://github.com/wch/r-source/blob/12d1d2d232d84aa355e333348b81180a0e2c6f2f/src/unix/sys-unix.c#L147
>> > >>>> 20.
>> > >>>
>> >
>> https://github.com/wch/r-source/blob/12d1d2d232d84aa355e333348b81180a0e2c6f2f/src/unix/sys-std.c#L494
>> > >>>> 21.
>> > >>>
>> >
>> https://git.savannah.gnu.org/cgit/readline.git/tree/tilde.c?h=devel#n187
>> > >>>> 22. mailto:R-help at r-project.org
>> > >>>> 23. https://stat.ethz.ch/mailman/listinfo/r-help
>> > >>>> 24. http://www.r-project.org/posting-guide.html
>> > >>>> 25. mailto:R-devel at r-project.org
>> > >>>> 26. https://stat.ethz.ch/mailman/listinfo/r-devel
>> > >>>> 27. mailto:R-devel at r-project.org
>> > >>>> 28. https://stat.ethz.ch/mailman/listinfo/r-devel
>> > >>>
>> > >>> ______________________________________________
>> > >>> R-devel at r-project.org mailing list
>> > >>> https://stat.ethz.ch/mailman/listinfo/r-devel
>> > >>>
>> > >>
>> > >> [[alternative HTML version deleted]]
>> > >>
>> > >> ______________________________________________
>> > >> R-devel at r-project.org mailing list
>> > >> https://stat.ethz.ch/mailman/listinfo/r-devel
>> > >>
>> >
>> > > ______________________________________________
>> > > R-devel at r-project.org mailing list
>> > > https://stat.ethz.ch/mailman/listinfo/r-devel
>> >
>> > ______________________________________________
>> > R-devel at r-project.org mailing list
>> > https://stat.ethz.ch/mailman/listinfo/r-devel
>> >
>>
>>         [[alternative HTML version deleted]]
>>
>> ______________________________________________
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>
>

	[[alternative HTML version deleted]]


From mcque@ten @end|ng |rom gm@||@com  Thu Jun 13 14:13:43 2019
From: mcque@ten @end|ng |rom gm@||@com (Paul McQuesten)
Date: Thu, 13 Jun 2019 07:13:43 -0500
Subject: [Rd] [R] Open a file which name contains a tilde
In-Reply-To: <CAD4oTHENxXDP6jNpLju+5BwziqHU8bVkXecYbKytOSg15jejMA@mail.gmail.com>
References: <20190605160714.GA24635@debian64>
 <20190606135957.0be4db10@trisector>
 <CABcYAdLgLrBwNW4A4EgYx0RwD9zjCo4Mpe7S05SeohoNmMQSGg@mail.gmail.com>
 <20190610165155.GA29855@debian64>
 <CABtg=Km4i9dsPoqC0sK=G9LvxbMd4FcHJ436usHkd+i7FPrR5Q@mail.gmail.com>
 <20190611100938.GA3588@debian64>
 <CAD4oTHEqKpgxrV406fzqO2CYz2y7ccAsFBaU3TFt5ShVop1uXQ@mail.gmail.com>
 <20190611201823.GA6068@debian64>
 <CAF8bMcYehy+Etkh5Xwzd6gG5bON1CFW9cKF9Mdo-oN4dprYq_A@mail.gmail.com>
 <3dda0b39-4708-c220-530c-d5e07eb4168a@gmail.com>
 <23808.44282.850500.926937@hornik.net>
 <CAN6Gc-3P6n_xz=61ry=Hcgfk7t3JS2RSidSL33R4e8yUxr8VPA@mail.gmail.com>
 <CAD4oTHHF_VMYpKDTmoGYt_EfrsVNpUrRahnhKbe=Rih+Q4QEBQ@mail.gmail.com>
 <CAD4oTHENxXDP6jNpLju+5BwziqHU8bVkXecYbKytOSg15jejMA@mail.gmail.com>
Message-ID: <CAN6Gc-3T7aXsNTqrZ9RAobZpfaeqxVS7KKFi8TcKxUeMCCiUEA@mail.gmail.com>

Gabriel,

I apologize. I did not mean to flame, merely to point out a typical usage
of tilde that might have escaped the discussion.
As you say, Kurt's fix makes this all moot.
I also apologize for wasting everyone's time with my spam.

On Thu, Jun 13, 2019 at 2:13 AM Gabriel Becker <gabembecker at gmail.com>
wrote:

> At the risk of looking silly, note that all of this is now largely moot
> anyway (or will be with the next release of R), thanks to Kurt Hornik's
> fixing of the bug in question (which he announced on this thread prior to
> but I read after Paul's).
>
> ~G
>
> On Wed, Jun 12, 2019 at 11:51 PM Gabriel Becker <gabembecker at gmail.com>
> wrote:
>
>>
>>
>> On Wed, Jun 12, 2019, 5:16 AM Paul McQuesten <mcquesten at gmail.com> wrote:
>>
>>> @ Gabriel:
>>>
>>> "Avoid tilde in file names":
>>> Not quite.
>>> A tilde *suffix* is commonly used by *nix editors for backup files
>>>
>>> https://unix.stackexchange.com/questions/76189/what-does-the-tilde-mean-at-the-end-of-a-filename
>>
>>
>> I'm aware of that, but that isn't the case that is being discussed, as
>> the example given clearly had a tilde (and spaces) in the middle of the
>> file. Backup files witilde suffix does not trigger the bug being discussed.
>> It's *only* files paths where the tilde is surrounded on both by spaces
>> (or on the right by the end fo the string) that trigger it.
>>
>> > path.expand("a~b")
>>
>> [1] "a~b"
>>
>> > path.expand("a ~ b")
>>
>> [1] "a /Users/gabrielbecker b"
>>
>> > path.expand("myfile.txt~")
>>
>> [1] "myfile.txt~"
>>
>> > path.expand("myfile.txt ~")
>>
>> [1] "myfile.txt /Users/gabrielbecker"
>>
>>
>> All that said I'm really not interested in participating in a flame war
>> over this. I gave my 2 cents as respectfully as I could, so as of now
>> please consider my participation  and interest in this thread closed.
>>
>> Best,
>> ~G
>>
>>
>>
>>>
>>>
>>>
>>> On Wed, Jun 12, 2019 at 2:43 AM Kurt Hornik <Kurt.Hornik at wu.ac.at>
>>> wrote:
>>>
>>> > >>>>> Duncan Murdoch writes:
>>> >
>>> > With c76695 in the trunk, we now only tilde expand file names starting
>>> > with a tilde also when using readline.
>>> >
>>> > Best
>>> > -k
>>> >
>>> > > On 11/06/2019 4:34 p.m., William Dunlap via R-devel wrote:
>>> > >> Note that R treats tildes in file names differently on Windows and
>>> > Linux.
>>> > >> On Windows, it is only replaced if it it at the beginning of the
>>> line
>>> > and
>>> > >> is followed by a forward or backward slash or end-of-line.  On
>>> Linux it
>>> > is
>>> > >> replaced no matter where it is in the text and ~someUser will be
>>> > replaced
>>> > >> by someUser's home directory (if 'someUser' is a user with a home
>>> > >> directory).
>>> >
>>> > > That's not quite true:  On Linux the bug is in the code that uses
>>> > > libreadline, which you don't have to use.  If you just specify
>>> > > "--no-readline" when you start R, it will be fine on Linux, as far
>>> as I
>>> > > can see.
>>> >
>>> > > I wouldn't choose that as the default way to run R (it's pretty
>>> > > irritating not to have readline support), but it is a workaround for
>>> > > this bug.
>>> >
>>> > > Duncan Murdoch
>>> >
>>> > >>
>>> > >> Hence, if you have a Windows machine that can look at the file
>>> system on
>>> > >> your Linux machine you can use file.rename on Windows to change the
>>> > names.
>>> > >> My inclination would be to use a bash script on Linux to change the
>>> > names,
>>> > >> but if you are not comfortable with bash try the Windows approach.
>>> > >>
>>> > >> Bill Dunlap
>>> > >> TIBCO Software
>>> > >> wdunlap tibco.com
>>> > >>
>>> > >>
>>> > >> On Tue, Jun 11, 2019 at 1:13 PM Frank Schwidom <schwidom at gmx.net>
>>> > wrote:
>>> > >>
>>> > >>> Hi Gabriel,
>>> > >>>
>>> > >>> I actually want to make renames over thousands of files. But if I
>>> am
>>> > not
>>> > >>> able to express the source filename of the rename operation I will
>>> not
>>> > be
>>> > >>> able to get the work done. Besides the fact that there are issues I
>>> > think
>>> > >>> that R is qualified for solving my problem by the method how it can
>>> > handle
>>> > >>> long vectors of strings, booleans and also lists.
>>> > >>>
>>> > >>> Kind regards,
>>> > >>> Frank
>>> > >>>
>>> > >>> On 2019-06-11 09:49:17, Gabriel Becker wrote:
>>> > >>>> Hi Frank,
>>> > >>>> I'm hesitant to be "that guy", but in case no one else has brought
>>> > >>> this up
>>> > >>>> to you, having files with a tilde in their names (generally but
>>> > >>> especially
>>> > >>>> on a linux system, where ~ in file names has a very important
>>> special
>>> > >>>> meaning in some cases, as we know) strikes me as an exceptionally
>>> bad
>>> > >>>> practice anyway. In light of that, the solution with the smallest
>>> > >>> amount
>>> > >>>> of pain for you is almost surely to just... not do that. Your
>>> > >>> filenames
>>> > >>>> will be better for it anyway.
>>> > >>>> There is a reason no one has complained about this before, and
>>> while I
>>> > >>>> haven't run a study or anything, I strongly suspect its that
>>> > >>> "everyone"
>>> > >>>> else is already on the "no tildes in filenames" bandwagon, so this
>>> > >>>> behavior, even if technically a bug, has no ability to cause them
>>> > >>>> problems.
>>> > >>>> Best,
>>> > >>>> ~G
>>> > >>>> On Tue, Jun 11, 2019 at 8:25 AM Frank Schwidom <[1]
>>> schwidom at gmx.net>
>>> > >>>> wrote:
>>> > >>>>
>>> > >>>> Hi,
>>> > >>>>
>>> > >>>> yes, I have seen this package and it has the same tilde expanding
>>> > >>>> problem.
>>> > >>>>
>>> > >>>> Please excuse me I will cc this answer to r-help and r-devel to
>>> > >>> keep the
>>> > >>>> discussion running.
>>> > >>>>
>>> > >>>> Kind regards,
>>> > >>>> Frank Schwidom
>>> > >>>>
>>> > >>>> On 2019-06-11 09:12:36, G?bor Cs?rdi wrote:
>>> > >>>> > Just in case, have you seen the fs package?
>>> > >>>> > [2]https://fs.r-lib.org/
>>> > >>>> >
>>> > >>>> > Gabor
>>> > >>>> >
>>> > >>>> > On Tue, Jun 11, 2019 at 7:51 AM Frank Schwidom <[3]
>>> > >>> schwidom at gmx.net>
>>> > >>>> wrote:
>>> > >>>> > >
>>> > >>>> > > Hi,
>>> > >>>> > >
>>> > >>>> > > to get rid of any possible filename modification I started a
>>> > >>> little
>>> > >>>> project to cover my usecase:
>>> > >>>> > >
>>> > >>>> > > [4]https://github.com/schwidom/simplefs
>>> > >>>> > >
>>> > >>>> > > This is my first R package, suggestions and a review are
>>> > >>> welcome.
>>> > >>>> > >
>>> > >>>> > > Thanks in advance
>>> > >>>> > > Frank Schwidom
>>> > >>>> > >
>>> > >>>> > > On 2019-06-07 09:04:06, Richard O'Keefe wrote:
>>> > >>>> > > >    How can expanding tildes anywhere but the beginning of a
>>> > >>> file
>>> > >>>> name NOT be
>>> > >>>> > > >    considered a bug?
>>> > >>>> > > >    On Thu, 6 Jun 2019 at 23:04, Ivan Krylov
>>> > >>>> <[1][5]krylov.r00t at gmail.com> wrote:
>>> > >>>> > > >
>>> > >>>> > > >      On Wed, 5 Jun 2019 18:07:15 +0200
>>> > >>>> > > >      Frank Schwidom <[2][6]schwidom at gmx.net> wrote:
>>> > >>>> > > >
>>> > >>>> > > >      > +> path.expand("a ~ b")
>>> > >>>> > > >      > [1] "a /home/user b"
>>> > >>>> > > >
>>> > >>>> > > >      > How can I switch off any file crippling activity?
>>> > >>>> > > >
>>> > >>>> > > >      It doesn't seem to be possible if readline is enabled
>>> and
>>> > >>>> works
>>> > >>>> > > >      correctly.
>>> > >>>> > > >
>>> > >>>> > > >      Calls to path.expand [1] end up [2] in R_ExpandFileName
>>> > >>> [3],
>>> > >>>> which
>>> > >>>> > > >      calls R_ExpandFileName_readline [4], which uses
>>> > >>> libreadline
>>> > >>>> function
>>> > >>>> > > >      tilde_expand [5]. tilde_expand seems to be designed to
>>> > >>> expand
>>> > >>>> '~'
>>> > >>>> > > >      anywhere in the string it is handed, i.e. operate on
>>> > >>> whole
>>> > >>>> command
>>> > >>>> > > >      lines, not file paths.
>>> > >>>> > > >
>>> > >>>> > > >      I am taking the liberty of Cc-ing R-devel in case this
>>> > >>> can be
>>> > >>>> > > >      considered a bug.
>>> > >>>> > > >
>>> > >>>> > > >      --
>>> > >>>> > > >      Best regards,
>>> > >>>> > > >      Ivan
>>> > >>>> > > >
>>> > >>>> > > >      [1]
>>> > >>>> > > >
>>> > >>>> [3][7]
>>> > >>>
>>> >
>>> https://github.com/wch/r-source/blob/12d1d2d232d84aa355e333348b81180a0e2c6f2f/src/main/names.c#L807
>>> > >>>> > > >
>>> > >>>> > > >      [2]
>>> > >>>> > > >
>>> > >>>> [4][8]
>>> > >>>
>>> >
>>> https://github.com/wch/r-source/blob/12d1d2d232d84aa355e333348b81180a0e2c6f2f/src/main/platform.c#L1915
>>> > >>>> > > >
>>> > >>>> > > >      [3]
>>> > >>>> > > >
>>> > >>>> [5][9]
>>> > >>>
>>> >
>>> https://github.com/wch/r-source/blob/12d1d2d232d84aa355e333348b81180a0e2c6f2f/src/unix/sys-unix.c#L147
>>> > >>>> > > >
>>> > >>>> > > >      [4]
>>> > >>>> > > >
>>> > >>>> [6][10]
>>> > >>>
>>> >
>>> https://github.com/wch/r-source/blob/12d1d2d232d84aa355e333348b81180a0e2c6f2f/src/unix/sys-std.c#L494
>>> > >>>> > > >
>>> > >>>> > > >      [5]
>>> > >>>> > > >
>>> > >>>> [7][11]
>>> > >>>
>>> >
>>> https://git.savannah.gnu.org/cgit/readline.git/tree/tilde.c?h=devel#n187
>>> > >>>> > > >
>>> > >>>> > > >      ______________________________________________
>>> > >>>> > > >      [8][12]R-help at r-project.org mailing list -- To
>>> > >>> UNSUBSCRIBE
>>> > >>>> and more, see
>>> > >>>> > > >      [9][13]https://stat.ethz.ch/mailman/listinfo/r-help
>>> > >>>> > > >      PLEASE do read the posting guide
>>> > >>>> > > >      [10][14]http://www.R-project.org/posting-guide.html
>>> > >>>> > > >      and provide commented, minimal, self-contained,
>>> > >>> reproducible
>>> > >>>> code.
>>> > >>>> > > >
>>> > >>>> > > > References
>>> > >>>> > > >
>>> > >>>> > > >    Visible links
>>> > >>>> > > >    1. mailto:[15]krylov.r00t at gmail.com
>>> > >>>> > > >    2. mailto:[16]schwidom at gmx.net
>>> > >>>> > > >    3.
>>> > >>>> [17]
>>> > >>>
>>> >
>>> https://github.com/wch/r-source/blob/12d1d2d232d84aa355e333348b81180a0e2c6f2f/src/main/names.c#L807
>>> > >>>> > > >    4.
>>> > >>>> [18]
>>> > >>>
>>> >
>>> https://github.com/wch/r-source/blob/12d1d2d232d84aa355e333348b81180a0e2c6f2f/src/main/platform.c#L1915
>>> > >>>> > > >    5.
>>> > >>>> [19]
>>> > >>>
>>> >
>>> https://github.com/wch/r-source/blob/12d1d2d232d84aa355e333348b81180a0e2c6f2f/src/unix/sys-unix.c#L147
>>> > >>>> > > >    6.
>>> > >>>> [20]
>>> > >>>
>>> >
>>> https://github.com/wch/r-source/blob/12d1d2d232d84aa355e333348b81180a0e2c6f2f/src/unix/sys-std.c#L494
>>> > >>>> > > >    7.
>>> > >>>> [21]
>>> > >>>
>>> >
>>> https://git.savannah.gnu.org/cgit/readline.git/tree/tilde.c?h=devel#n187
>>> > >>>> > > >    8. mailto:[22]R-help at r-project.org
>>> > >>>> > > >    9. [23]https://stat.ethz.ch/mailman/listinfo/r-help
>>> > >>>> > > >   10. [24]http://www.r-project.org/posting-guide.html
>>> > >>>> > >
>>> > >>>> > > ______________________________________________
>>> > >>>> > > [25]R-devel at r-project.org mailing list
>>> > >>>> > > [26]https://stat.ethz.ch/mailman/listinfo/r-devel
>>> > >>>> >
>>> > >>>>
>>> > >>>> ______________________________________________
>>> > >>>> [27]R-devel at r-project.org mailing list
>>> > >>>> [28]https://stat.ethz.ch/mailman/listinfo/r-devel
>>> > >>>>
>>> > >>>> References
>>> > >>>>
>>> > >>>> Visible links
>>> > >>>> 1. mailto:schwidom at gmx.net
>>> > >>>> 2. https://fs.r-lib.org/
>>> > >>>> 3. mailto:schwidom at gmx.net
>>> > >>>> 4. https://github.com/schwidom/simplefs
>>> > >>>> 5. mailto:krylov.r00t at gmail.com
>>> > >>>> 6. mailto:schwidom at gmx.net
>>> > >>>> 7.
>>> > >>>
>>> >
>>> https://github.com/wch/r-source/blob/12d1d2d232d84aa355e333348b81180a0e2c6f2f/src/main/names.c#L807
>>> > >>>> 8.
>>> > >>>
>>> >
>>> https://github.com/wch/r-source/blob/12d1d2d232d84aa355e333348b81180a0e2c6f2f/src/main/platform.c#L1915
>>> > >>>> 9.
>>> > >>>
>>> >
>>> https://github.com/wch/r-source/blob/12d1d2d232d84aa355e333348b81180a0e2c6f2f/src/unix/sys-unix.c#L147
>>> > >>>> 10.
>>> > >>>
>>> >
>>> https://github.com/wch/r-source/blob/12d1d2d232d84aa355e333348b81180a0e2c6f2f/src/unix/sys-std.c#L494
>>> > >>>> 11.
>>> > >>>
>>> >
>>> https://git.savannah.gnu.org/cgit/readline.git/tree/tilde.c?h=devel#n187
>>> > >>>> 12. mailto:R-help at r-project.org
>>> > >>>> 13. https://stat.ethz.ch/mailman/listinfo/r-help
>>> > >>>> 14. http://www.r-project.org/posting-guide.html
>>> > >>>> 15. mailto:krylov.r00t at gmail.com
>>> > >>>> 16. mailto:schwidom at gmx.net
>>> > >>>> 17.
>>> > >>>
>>> >
>>> https://github.com/wch/r-source/blob/12d1d2d232d84aa355e333348b81180a0e2c6f2f/src/main/names.c#L807
>>> > >>>> 18.
>>> > >>>
>>> >
>>> https://github.com/wch/r-source/blob/12d1d2d232d84aa355e333348b81180a0e2c6f2f/src/main/platform.c#L1915
>>> > >>>> 19.
>>> > >>>
>>> >
>>> https://github.com/wch/r-source/blob/12d1d2d232d84aa355e333348b81180a0e2c6f2f/src/unix/sys-unix.c#L147
>>> > >>>> 20.
>>> > >>>
>>> >
>>> https://github.com/wch/r-source/blob/12d1d2d232d84aa355e333348b81180a0e2c6f2f/src/unix/sys-std.c#L494
>>> > >>>> 21.
>>> > >>>
>>> >
>>> https://git.savannah.gnu.org/cgit/readline.git/tree/tilde.c?h=devel#n187
>>> > >>>> 22. mailto:R-help at r-project.org
>>> > >>>> 23. https://stat.ethz.ch/mailman/listinfo/r-help
>>> > >>>> 24. http://www.r-project.org/posting-guide.html
>>> > >>>> 25. mailto:R-devel at r-project.org
>>> > >>>> 26. https://stat.ethz.ch/mailman/listinfo/r-devel
>>> > >>>> 27. mailto:R-devel at r-project.org
>>> > >>>> 28. https://stat.ethz.ch/mailman/listinfo/r-devel
>>> > >>>
>>> > >>> ______________________________________________
>>> > >>> R-devel at r-project.org mailing list
>>> > >>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>> > >>>
>>> > >>
>>> > >> [[alternative HTML version deleted]]
>>> > >>
>>> > >> ______________________________________________
>>> > >> R-devel at r-project.org mailing list
>>> > >> https://stat.ethz.ch/mailman/listinfo/r-devel
>>> > >>
>>> >
>>> > > ______________________________________________
>>> > > R-devel at r-project.org mailing list
>>> > > https://stat.ethz.ch/mailman/listinfo/r-devel
>>> >
>>> > ______________________________________________
>>> > R-devel at r-project.org mailing list
>>> > https://stat.ethz.ch/mailman/listinfo/r-devel
>>> >
>>>
>>>         [[alternative HTML version deleted]]
>>>
>>> ______________________________________________
>>> R-devel at r-project.org mailing list
>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>>
>>

	[[alternative HTML version deleted]]


From pe|j@@z @end|ng |rom y@hoo@co@uk  Thu Jun 13 17:05:13 2019
From: pe|j@@z @end|ng |rom y@hoo@co@uk (lejeczek)
Date: Thu, 13 Jun 2019 16:05:13 +0100
Subject: [Rd] compiler flags for performance
Message-ID: <3cd16957-b4f0-6d32-25ed-c3b1ffa4f241@yahoo.co.uk>

hi guys,

I'd like to ask, and I believe this place here should be best as who can
know better, if building R with different compilers and opt flags is
something worth investing time into?

Or maybe this a subject that somebody has already investigated. If yes
what then are the conclusion?

Reason I ask is such that, on Centos 7.6 with different compilers from
stock repo but also from so called software collections, do not
render(with flags for performance) an R binaries which would perform any
better, according to R-benchmark-25 at least, then "vanilla" packages
shipped from distro.

And that makes me curious - is it because R is such a case which is
prone to any compiler performance optimizations?

Maybe there is more structured and organized way to conduct such
different-compilers-optimizations benchmarks/test?

What do devel can say and advise with regards to compile-for-performance
subject?

many thanks, L.?



From edd @end|ng |rom deb|@n@org  Thu Jun 13 17:14:15 2019
From: edd @end|ng |rom deb|@n@org (Dirk Eddelbuettel)
Date: Thu, 13 Jun 2019 10:14:15 -0500
Subject: [Rd] compiler flags for performance
In-Reply-To: <3cd16957-b4f0-6d32-25ed-c3b1ffa4f241@yahoo.co.uk>
References: <3cd16957-b4f0-6d32-25ed-c3b1ffa4f241@yahoo.co.uk>
Message-ID: <23810.26695.725131.693656@rob.eddelbuettel.com>


On 13 June 2019 at 16:05, lejeczek via R-devel wrote:
| I'd like to ask, and I believe this place here should be best as who can
| know better, if building R with different compilers and opt flags is
| something worth investing time into?
| 
| Or maybe this a subject that somebody has already investigated. If yes
| what then are the conclusion?
| 
| Reason I ask is such that, on Centos 7.6 with different compilers from
| stock repo but also from so called software collections, do not
| render(with flags for performance) an R binaries which would perform any
| better, according to R-benchmark-25 at least, then "vanilla" packages
| shipped from distro.
| 
| And that makes me curious - is it because R is such a case which is
| prone to any compiler performance optimizations?
| 
| Maybe there is more structured and organized way to conduct such
| different-compilers-optimizations benchmarks/test?
| 
| What do devel can say and advise with regards to compile-for-performance
| subject?

Of course you do that, and add those switches to ~/.R/Makeconf.  The
resulting binaries may become non-portable.

E.g. "at work" we use -march=native quite a bit but it means can't share
libraries from a beefier dev box with skinnier deployment boxen as they don't
have the same chipset even thought the are both x86_64 and use the same Linux
distro.  

As for which switches help in which way on different compiler: that is
probably best seen as a black box.  Time and profile locally, I no longer try
to generalize.   The newer 'link-time-optimizations' can help too, they
certainly make builds longer ...

Dirk

-- 
http://dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org


From @purd|e@@ @end|ng |rom gm@||@com  Fri Jun 14 03:17:44 2019
From: @purd|e@@ @end|ng |rom gm@||@com (Abby Spurdle)
Date: Fri, 14 Jun 2019 13:17:44 +1200
Subject: [Rd] Halfway through writing an "IDE" with support for R;
 Proof of concept, and request for suggestions.
In-Reply-To: <CAB8pepyZQRnw9xWG8DONb32KB5pw-x_a-3xQ9R1RswoLUVkBfw@mail.gmail.com>
References: <CAB8pepyZQRnw9xWG8DONb32KB5pw-x_a-3xQ9R1RswoLUVkBfw@mail.gmail.com>
Message-ID: <CAB8pepyK0tZmDUk6n8jebDmBRYVCt+Zp+vv3JjAzS3XYaL8kuw@mail.gmail.com>

I thought that I'd get more feedback.
But it's ok, I understand.

I wanted to note that I've moved symbyont to GitLab, which is where I
should have put it, in the first place.

Also, I'm not planning to start another thread.
However, if anyone has suggestions six months from now (or six years from
now...), you're still welcome to email me, and I will try to listen...

	[[alternative HTML version deleted]]


From |uc@r @end|ng |rom |edor@project@org  Fri Jun 14 09:24:07 2019
From: |uc@r @end|ng |rom |edor@project@org (=?UTF-8?Q?I=C3=B1aki_Ucar?=)
Date: Fri, 14 Jun 2019 09:24:07 +0200
Subject: [Rd] Halfway through writing an "IDE" with support for R;
 Proof of concept, and request for suggestions.
In-Reply-To: <CAB8pepyK0tZmDUk6n8jebDmBRYVCt+Zp+vv3JjAzS3XYaL8kuw@mail.gmail.com>
References: <CAB8pepyZQRnw9xWG8DONb32KB5pw-x_a-3xQ9R1RswoLUVkBfw@mail.gmail.com>
 <CAB8pepyK0tZmDUk6n8jebDmBRYVCt+Zp+vv3JjAzS3XYaL8kuw@mail.gmail.com>
Message-ID: <CALEXWq2jksxKDsdEQncjQNz0OLr0xWJTUb2ud_YWkDbkaQv8gA@mail.gmail.com>

Honestly, I don't see the motivation for this. There are many similar
projects that are mature, so my feedback would be: don't reinvent the wheel
and contribute to those.

I?aki


El vie., 14 jun. 2019 3:18, Abby Spurdle <spurdle.a at gmail.com> escribi?:

> I thought that I'd get more feedback.
> But it's ok, I understand.
>
> I wanted to note that I've moved symbyont to GitLab, which is where I
> should have put it, in the first place.
>
> Also, I'm not planning to start another thread.
> However, if anyone has suggestions six months from now (or six years from
> now...), you're still welcome to email me, and I will try to listen...
>
>         [[alternative HTML version deleted]]
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>

	[[alternative HTML version deleted]]


From pd@me@ @end|ng |rom cb@@dk  Fri Jun 14 13:13:59 2019
From: pd@me@ @end|ng |rom cb@@dk (Peter Dalgaard)
Date: Fri, 14 Jun 2019 11:13:59 +0000
Subject: [Rd] R 3.6.1 scheduled for July 5
Message-ID: <CAF16E3F-C6A7-4045-804D-2F322D7E2A91@cbs.dk>

Full schedule is available on developer.r-project.org.

-- 
Peter Dalgaard, Professor,
Center for Statistics, Copenhagen Business School
Solbjerg Plads 3, 2000 Frederiksberg, Denmark
Phone: (+45)38153501
Office: A 4.23
Email: pd.mes at cbs.dk  Priv: PDalgd at gmail.com


From pe|j@@z @end|ng |rom y@hoo@co@uk  Fri Jun 14 13:43:49 2019
From: pe|j@@z @end|ng |rom y@hoo@co@uk (lejeczek)
Date: Fri, 14 Jun 2019 12:43:49 +0100
Subject: [Rd] compiler flags for performance
In-Reply-To: <23810.26695.725131.693656@rob.eddelbuettel.com>
References: <3cd16957-b4f0-6d32-25ed-c3b1ffa4f241@yahoo.co.uk>
 <23810.26695.725131.693656@rob.eddelbuettel.com>
Message-ID: <b312e475-575f-5173-d7c8-2b404690b1ce@yahoo.co.uk>

On 13/06/2019 16:14, Dirk Eddelbuettel wrote:
> On 13 June 2019 at 16:05, lejeczek via R-devel wrote:
> | I'd like to ask, and I believe this place here should be best as who can
> | know better, if building R with different compilers and opt flags is
> | something worth investing time into?
> | 
> | Or maybe this a subject that somebody has already investigated. If yes
> | what then are the conclusion?
> | 
> | Reason I ask is such that, on Centos 7.6 with different compilers from
> | stock repo but also from so called software collections, do not
> | render(with flags for performance) an R binaries which would perform any
> | better, according to R-benchmark-25 at least, then "vanilla" packages
> | shipped from distro.
> | 
> | And that makes me curious - is it because R is such a case which is
> | prone to any compiler performance optimizations?
> | 
> | Maybe there is more structured and organized way to conduct such
> | different-compilers-optimizations benchmarks/test?
> | 
> | What do devel can say and advise with regards to compile-for-performance
> | subject?
>
> Of course you do that, and add those switches to ~/.R/Makeconf.  The
> resulting binaries may become non-portable.
>
> E.g. "at work" we use -march=native quite a bit but it means can't share
> libraries from a beefier dev box with skinnier deployment boxen as they don't
> have the same chipset even thought the are both x86_64 and use the same Linux
> distro.  
>
> As for which switches help in which way on different compiler: that is
> probably best seen as a black box.  Time and profile locally, I no longer try
> to generalize.   The newer 'link-time-optimizations' can help too, they
> certainly make builds longer ...
>
> Dirk
>
I've tried the "usual" tweaks and what puzzles me is the fact, that
-march=native and -lto(s) + Os/3 do not help much, make almost invisible
improvements (again, judging by results from R-benchmark-25) with gcc >=
7 as compared to distro's package which is built with -O2 -mtune=generic
and no ltos.

Would there be other(better) way to test core R?

What king of R perf increases do you guys see with compiler's opt flags,
if any?

regards, L.





From @chw|dom @end|ng |rom gmx@net  Fri Jun 14 14:43:56 2019
From: @chw|dom @end|ng |rom gmx@net (Frank Schwidom)
Date: Fri, 14 Jun 2019 14:43:56 +0200
Subject: [Rd] [R] Open a file which name contains a tilde
In-Reply-To: <20190612125012.6e2eb1ef@Draco.localdomain>
References: <20190605160714.GA24635@debian64>
 <20190612125012.6e2eb1ef@Draco.localdomain>
Message-ID: <20190614124356.GA19666@debian64>

Hi John,

First, the unix and linux filesystem allows the use of any nonzero character in its filesystem filenames and the c functions open / fopen, symlink. rename, chdir and so on  don't care about any tilde. If the open systemcall gets a file which begins with a tilde then it will try to open this filename without any preceding modification.

So the tilde expansion is not really a unix idiom. It is rather an idiom of its unix shells like bash. But beware, the bash treats the tilde as home path not in all cases.

Inside of quotes the tilde keeps unaltered. So bedides any cenvenience functionality which can lead to failing code the bash has a very clean way to access files in a unique way.

And here is the problem wirh R.

The R shell has no quoting mechanism for this use case. It provides the tilde expansion after a string has been defined. In the bash it is the opposite. First the string gets defined ( for instance ~"/abc.txt" would expand to "/home/user/abc.txt" or "~/abc.txt" keeps "~/abc.txt" and that means a directory named '~' with a directory entry named 'abc.txt' inside of it) and after it is defined it keeps consistent and can be passed to every function.

Actually R has already a clean string datatype. But by the transition to filesystem operations the expansion takes place. In my opinion at the wrong place. And additionally there exists no quoting mechanism which allows to keep tildes unaltered.  It would be better to clear distinguish between a string which is passed to the filesystem calls and some convenience expansion mechanisms.

But it is like it is. For my need I created a solution which takes strings unaltered and so I can fulfil my work.

And for whom who is interested in it, can take a look:

https://github.com/schwidom/simplefs

Suggestions are welcome.

Kind regards
Frank Schwidom



On 2019-06-12 12:50:12, John via R-help wrote:
> On Wed, 5 Jun 2019 18:07:15 +0200
> Frank Schwidom <schwidom at gmx.net> wrote:
>
> In reading file names, names with spaces require escaping of the
> spaces, and you are using not only a tilde but the space as spell.  The
> tilde is conventionally read as wild card representing the leading
> portion of the file address, which is what you see here:
>
> The long standing convention in unix and linux is that a tilde is
> shorthand for your home directory, just as "./" is the local directory
> and "../" is one step back up the directory tree. The output of
> path.expand() varies in how your string is constructed:
>
> 1. > path.expand("ab")
>    [1] "ab"
> 2. > path.expand("a b")
>    [1] "a b"
> 3. > path.expand("a ~b")
>    [1] "a ~b"
> 4. > path.expand("a ~ b")
>    [1] "a /home/john b"
> 5. > path.expand("a ~/b")
>    [1] "a /home/john/b"
> 6. > path.expand("~/a  b")
>    [1] "/home/john/a  b"
>
> Notice that the spaces have an effect on how the tilde is parsed in
> the string.  The next to last case sees a string with three elements:
> "a", the local path, and "b".  The last expands the tilde as the "path"
> to a hypothetical file "b" in the home directory. In the sixth case the
> same behaviour occurs.
>
> If you read the help for path.expand(), the routine expects
> "leading" tildes, which explains the free floating "path in the fourth
> example.  In the third example, where the forward slash is omitted, the
> routine simply treats the tilde as part of a string.
>
> Also note this at http://www.linfo.org/file_name.html:
>
> "...file names only use alphanumeric characters (mostly lower case),
> underscores, hyphens and periods. Other characters, such as dollar
> signs, percentage signs and brackets, have special meanings to the
> shell and can be distracting to work with. File names should never
> begin with a hyphen."
>
> The probable "bug" is that none of the programmers imagined that anyone
> would use special characters within file names, "legal" or not, (just
> not done, don't y' know). In any case the simple solution, if you
> really, really need a tilde in a filename, is to avoid setting it off in
> spaces, or any other character that could mislead a routine into
> treating it conventionally as shorthand for you home directory.
>
> JWDougherty
>
> ______________________________________________
> R-help at r-project.org mailing list -- To UNSUBSCRIBE and more, see
> https://stat.ethz.ch/mailman/listinfo/r-help
> PLEASE do read the posting guide http://www.R-project.org/posting-guide.html
> and provide commented, minimal, self-contained, reproducible code.
>


From @oko| @end|ng |rom |n@@-tou|ou@e@|r  Fri Jun 14 14:58:02 2019
From: @oko| @end|ng |rom |n@@-tou|ou@e@|r (Serguei Sokol)
Date: Fri, 14 Jun 2019 14:58:02 +0200
Subject: [Rd] [R] Open a file which name contains a tilde
In-Reply-To: <20190614124356.GA19666@debian64>
References: <20190605160714.GA24635@debian64>
 <20190612125012.6e2eb1ef@Draco.localdomain> <20190614124356.GA19666@debian64>
Message-ID: <f8074d2b-8e4d-1eec-f531-7adca44e99e3@insa-toulouse.fr>

On 14/06/2019 14:43, Frank Schwidom wrote:
> Hi John,
>
> First, the unix and linux filesystem allows the use of any nonzero character in its filesystem filenames
Well, even it's not the central point of the discussion let make this 
assertion more correct. It depends on file system. E.g. JFS 
(https://en.wikipedia.org/wiki/JFS_%28file_system%29) abides to this 
rule while very popular ext4 (https://en.wikipedia.org/wiki/Ext4) does 
not. In addition to NUL character, the latter forbids '/' as well.

Best,
Serguei.


From rmh @end|ng |rom temp|e@edu  Fri Jun 14 15:12:24 2019
From: rmh @end|ng |rom temp|e@edu (Richard M. Heiberger)
Date: Fri, 14 Jun 2019 09:12:24 -0400
Subject: [Rd] inappropriate warning in latticeExtra
In-Reply-To: <CADfFDC54=15F4F=9FC4QJdPBG+WyAt_SepWJ81FE0aJkP=XA-A@mail.gmail.com>
References: <CAGx1TMCADAAvL0wa6hyHSuRtrrpU1qFNvPpsaorRAtm6P0roaw@mail.gmail.com>
 <CADfFDC54=15F4F=9FC4QJdPBG+WyAt_SepWJ81FE0aJkP=XA-A@mail.gmail.com>
Message-ID: <CAGx1TMBKiBFWuRr-_avryrqypmf_YtL_tvCi4hUNVnNCpmXM-A@mail.gmail.com>

This is still not repaired in
 R version 3.6.0 Patched (2019-05-17 r76528)
> library(latticeExtra)
>  a <- xyplot(1 ~ 1)
> c(a,a)
Warning message:
In formals(fun) : argument is not a function

Can we have it in R-3.6.1 that Peter just announced?

Rich

On Mon, Apr 2, 2018 at 4:08 AM Deepayan Sarkar
<deepayan.sarkar at gmail.com> wrote:
>
> On Fri, Mar 23, 2018 at 7:58 AM, Richard M. Heiberger <rmh at temple.edu> wrote:
> > The warning message in the last line of this email is incorrect.
> > This is behavior which Duncan Murdoch labeled a bug in
> >    https://stat.ethz.ch/pipermail/r-help/2017-December/450494.html
>
> Yes, sorry, this has been fixed in the r-forge sources for a while
> now, but I haven't had the time to finish up some other fixes and push
> an update to CRAN.
>
> Hopefully over the summer break.
>
> Regards,
> -Deepayan
>
>
> > This is a fresh install of R-devel (2018-03-21 r74436)
> >
> >
> >
> >
> > R Under development (unstable) (2018-03-21 r74436) -- "Unsuffered Consequences"
> > Copyright (C) 2018 The R Foundation for Statistical Computing
> > Platform: x86_64-w64-mingw32/x64 (64-bit)
> >
> > R is free software and comes with ABSOLUTELY NO WARRANTY.
> > You are welcome to redistribute it under certain conditions.
> > Type 'license()' or 'licence()' for distribution details.
> >
> >   Natural language support but running in an English locale
> >
> > R is a collaborative project with many contributors.
> > Type 'contributors()' for more information and
> > 'citation()' on how to cite R or R packages in publications.
> >
> > Type 'demo()' for some demos, 'help()' for on-line help, or
> > 'help.start()' for an HTML browser interface to help.
> > Type 'q()' to quit R.
> >
> >> library(latticeExtra)
> > Error in library(latticeExtra) :
> >   there is no package called ?latticeExtra?
> >> install.packages("latticeExtra")
> > Warning in install.packages("latticeExtra") :
> >   'lib = "C:/Program Files/R/R-devel/library"' is not writable
> > --- Please select a CRAN mirror for use in this session ---
> > also installing the dependency ?RColorBrewer?
> >
> > Warning: unable to access index for repository
> > http://www.stats.ox.ac.uk/pub/RWin/bin/windows/contrib/3.5:
> >   cannot open URL
> > 'http://www.stats.ox.ac.uk/pub/RWin/bin/windows/contrib/3.5/PACKAGES'
> > trying URL 'https://cran.wu.ac.at/bin/windows/contrib/3.5/RColorBrewer_1.1-2.zip'
> > Content type 'application/zip' length 55444 bytes (54 KB)
> > downloaded 54 KB
> >
> > trying URL 'https://cran.wu.ac.at/bin/windows/contrib/3.5/latticeExtra_0.6-28.zip'
> > Content type 'application/zip' length 2191524 bytes (2.1 MB)
> > downloaded 2.1 MB
> >
> > package ?RColorBrewer? successfully unpacked and MD5 sums checked
> > package ?latticeExtra? successfully unpacked and MD5 sums checked
> >
> > The downloaded binary packages are in
> >         C:\Users\rmh.DESKTOP-60G4CCO\AppData\Local\Temp\RtmpqA7Rqg\downloaded_packages
> >> library(latticeExtra)
> > Loading required package: lattice
> > Loading required package: RColorBrewer
> >> a <- xyplot(1 ~ 1)
> >> c(a,a)
> > Warning message:
> > In formals(fun) : argument is not a function
> >>
> >
> > ______________________________________________
> > R-devel at r-project.org mailing list
> > https://stat.ethz.ch/mailman/listinfo/r-devel


From @rn@ud@g@boury @end|ng |rom gm@||@com  Fri Jun 14 15:22:01 2019
From: @rn@ud@g@boury @end|ng |rom gm@||@com (arnaud gaboury)
Date: Fri, 14 Jun 2019 15:22:01 +0200
Subject: [Rd] compiler flags for performance
In-Reply-To: <b312e475-575f-5173-d7c8-2b404690b1ce@yahoo.co.uk>
References: <3cd16957-b4f0-6d32-25ed-c3b1ffa4f241@yahoo.co.uk>
 <23810.26695.725131.693656@rob.eddelbuettel.com>
 <b312e475-575f-5173-d7c8-2b404690b1ce@yahoo.co.uk>
Message-ID: <CAK1hC9vfEvA2dZHLZZKh_6jPF9kX2fER=3MdwqfLrkfBbUpnOQ@mail.gmail.com>

On Fri, Jun 14, 2019 at 1:44 PM lejeczek via R-devel <r-devel at r-project.org>
wrote:

> On 13/06/2019 16:14, Dirk Eddelbuettel wrote:
> > On 13 June 2019 at 16:05, lejeczek via R-devel wrote:
> > | I'd like to ask, and I believe this place here should be best as who
> can
> > | know better, if building R with different compilers and opt flags is
> > | something worth investing time into?
>
> |
> > | Or maybe this a subject that somebody has already investigated. If yes
> > | what then are the conclusion?
>

It is worth spending sometime,but all in all, you may end  disapointed.
There are other things you may try: new Intel Linux distro (optimized for
Intelprocessors); build with Clang compiler instead of GCC; use optimized
BLAS (that's indeed a very good idea,look for openblas).

I have build R with Intel MKL.The libraries are free for one year (maybe
did it change). The build is far from being trivial. Please find on my
github[0] some details


> |
> > | Reason I ask is such that, on Centos 7.6 with different compilers from
> > | stock repo but also from so called software collections, do not
> > | render(with flags for performance) an R binaries which would perform
> any
> > | better, according to R-benchmark-25 at least, then "vanilla" packages
> > | shipped from distro.
> > |
> > | And that makes me curious - is it because R is such a case which is
> > | prone to any compiler performance optimizations?
> > |
> > | Maybe there is more structured and organized way to conduct such
> > | different-compilers-optimizations benchmarks/test?
> > |
> > | What do devel can say and advise with regards to
> compile-for-performance
> > | subject?
> >
> > Of course you do that, and add those switches to ~/.R/Makeconf.  The
> > resulting binaries may become non-portable.
> >
> > E.g. "at work" we use -march=native quite a bit but it means can't share
> > libraries from a beefier dev box with skinnier deployment boxen as they
> don't
> > have the same chipset even thought the are both x86_64 and use the same
> Linux
> > distro.
> >
> > As for which switches help in which way on different compiler: that is
> > probably best seen as a black box.  Time and profile locally, I no
> longer try
> > to generalize.   The newer 'link-time-optimizations' can help too, they
> > certainly make builds longer ...
> >
> > Dirk
> >
> I've tried the "usual" tweaks and what puzzles me is the fact, that
> -march=native and -lto(s) + Os/3 do not help much, make almost invisible
> improvements (again, judging by results from R-benchmark-25) with gcc >=
> 7 as compared to distro's package which is built with -O2 -mtune=generic
> and no ltos.
>
> Would there be other(better) way to test core R?
>
> What king of R perf increases do you guys see with compiler's opt flags,
> if any?
>
> regards, L.
>
> [0] https://github.com/gabx/R-project/tree/master/R-mkl
>
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>

	[[alternative HTML version deleted]]


From edd @end|ng |rom deb|@n@org  Fri Jun 14 15:44:36 2019
From: edd @end|ng |rom deb|@n@org (Dirk Eddelbuettel)
Date: Fri, 14 Jun 2019 08:44:36 -0500
Subject: [Rd] compiler flags for performance
In-Reply-To: <CAK1hC9vfEvA2dZHLZZKh_6jPF9kX2fER=3MdwqfLrkfBbUpnOQ@mail.gmail.com>
References: <3cd16957-b4f0-6d32-25ed-c3b1ffa4f241@yahoo.co.uk>
 <23810.26695.725131.693656@rob.eddelbuettel.com>
 <b312e475-575f-5173-d7c8-2b404690b1ce@yahoo.co.uk>
 <CAK1hC9vfEvA2dZHLZZKh_6jPF9kX2fER=3MdwqfLrkfBbUpnOQ@mail.gmail.com>
Message-ID: <23811.42180.811363.513415@rob.eddelbuettel.com>


On 14 June 2019 at 15:22, arnaud gaboury wrote:
| I have build R with Intel MKL.The libraries are free for one year (maybe
| did it change). The build is far from being trivial. Please find on my
| github[0] some details

Gee, when oh when does this "meme" of "I built R with MKL" die?

BLAS/LAPACK are _an interface_ and once you tell R to configure with BLAS as
a shared library, _all_ matching BLAS/LAPACK libraries become _pluggable_. My
gcbd package and vignette demonstrated that a decade+ ago (then using Goto).
It also holds for MKL, and these days Intel tries harder with a) friendlier
licenses and b) better packaging -- they even give .deb (and I believe .rpm).

So now you just drop MKL in/out with a single script which you can find here
https://github.com/eddelbuettel/mkl4deb with supporting blog posts at
http://dirk.eddelbuettel.com/blog/2018/04/15#018_mkl_for_debian_ubuntu

So please, let's not repeat this 'you have to use Revolution / Microsoft /
$whatever R to get MKL' or 'you have to recompile R for MKL'.

Lastly, if it matters is up to the beholder. Because the optmization in the
MKL appears to come from _many_ explicit code paths for many Intel cpu
(micro-)architectures, the installed footprint is sizeable -- IIRC it was 2gb
when I wrote the blog post above.  My linear algebra use (at home) is light
so I just kept OpenBLAS which is almost as fast, and proper free software
with a smaller installation footprint. Your mileage, as they say, may vary.

Dirk

-- 
http://dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org


From murdoch@dunc@n @end|ng |rom gm@||@com  Fri Jun 14 22:04:36 2019
From: murdoch@dunc@n @end|ng |rom gm@||@com (Duncan Murdoch)
Date: Fri, 14 Jun 2019 16:04:36 -0400
Subject: [Rd] inappropriate warning in latticeExtra
In-Reply-To: <CAGx1TMBKiBFWuRr-_avryrqypmf_YtL_tvCi4hUNVnNCpmXM-A@mail.gmail.com>
References: <CAGx1TMCADAAvL0wa6hyHSuRtrrpU1qFNvPpsaorRAtm6P0roaw@mail.gmail.com>
 <CADfFDC54=15F4F=9FC4QJdPBG+WyAt_SepWJ81FE0aJkP=XA-A@mail.gmail.com>
 <CAGx1TMBKiBFWuRr-_avryrqypmf_YtL_tvCi4hUNVnNCpmXM-A@mail.gmail.com>
Message-ID: <3a7b17f4-1631-7fe0-ea16-75ca8524fd24@gmail.com>

On 14/06/2019 9:12 a.m., Richard M. Heiberger wrote:
> This is still not repaired in
>   R version 3.6.0 Patched (2019-05-17 r76528)
>> library(latticeExtra)
>>   a <- xyplot(1 ~ 1)
>> c(a,a)
> Warning message:
> In formals(fun) : argument is not a function
> 
> Can we have it in R-3.6.1 that Peter just announced?

That looks like a bug in the latticeExtra package, not in base R.  In 
particular, the latticeExtra:::c.trellis function appears to be trying 
to take the formals of NULL, and that's why you get the warning.

Duncan Murdoch

> 
> Rich
> 
> On Mon, Apr 2, 2018 at 4:08 AM Deepayan Sarkar
> <deepayan.sarkar at gmail.com> wrote:
>>
>> On Fri, Mar 23, 2018 at 7:58 AM, Richard M. Heiberger <rmh at temple.edu> wrote:
>>> The warning message in the last line of this email is incorrect.
>>> This is behavior which Duncan Murdoch labeled a bug in
>>>     https://stat.ethz.ch/pipermail/r-help/2017-December/450494.html
>>
>> Yes, sorry, this has been fixed in the r-forge sources for a while
>> now, but I haven't had the time to finish up some other fixes and push
>> an update to CRAN.
>>
>> Hopefully over the summer break.
>>
>> Regards,
>> -Deepayan
>>
>>
>>> This is a fresh install of R-devel (2018-03-21 r74436)
>>>
>>>
>>>
>>>
>>> R Under development (unstable) (2018-03-21 r74436) -- "Unsuffered Consequences"
>>> Copyright (C) 2018 The R Foundation for Statistical Computing
>>> Platform: x86_64-w64-mingw32/x64 (64-bit)
>>>
>>> R is free software and comes with ABSOLUTELY NO WARRANTY.
>>> You are welcome to redistribute it under certain conditions.
>>> Type 'license()' or 'licence()' for distribution details.
>>>
>>>    Natural language support but running in an English locale
>>>
>>> R is a collaborative project with many contributors.
>>> Type 'contributors()' for more information and
>>> 'citation()' on how to cite R or R packages in publications.
>>>
>>> Type 'demo()' for some demos, 'help()' for on-line help, or
>>> 'help.start()' for an HTML browser interface to help.
>>> Type 'q()' to quit R.
>>>
>>>> library(latticeExtra)
>>> Error in library(latticeExtra) :
>>>    there is no package called ?latticeExtra?
>>>> install.packages("latticeExtra")
>>> Warning in install.packages("latticeExtra") :
>>>    'lib = "C:/Program Files/R/R-devel/library"' is not writable
>>> --- Please select a CRAN mirror for use in this session ---
>>> also installing the dependency ?RColorBrewer?
>>>
>>> Warning: unable to access index for repository
>>> http://www.stats.ox.ac.uk/pub/RWin/bin/windows/contrib/3.5:
>>>    cannot open URL
>>> 'http://www.stats.ox.ac.uk/pub/RWin/bin/windows/contrib/3.5/PACKAGES'
>>> trying URL 'https://cran.wu.ac.at/bin/windows/contrib/3.5/RColorBrewer_1.1-2.zip'
>>> Content type 'application/zip' length 55444 bytes (54 KB)
>>> downloaded 54 KB
>>>
>>> trying URL 'https://cran.wu.ac.at/bin/windows/contrib/3.5/latticeExtra_0.6-28.zip'
>>> Content type 'application/zip' length 2191524 bytes (2.1 MB)
>>> downloaded 2.1 MB
>>>
>>> package ?RColorBrewer? successfully unpacked and MD5 sums checked
>>> package ?latticeExtra? successfully unpacked and MD5 sums checked
>>>
>>> The downloaded binary packages are in
>>>          C:\Users\rmh.DESKTOP-60G4CCO\AppData\Local\Temp\RtmpqA7Rqg\downloaded_packages
>>>> library(latticeExtra)
>>> Loading required package: lattice
>>> Loading required package: RColorBrewer
>>>> a <- xyplot(1 ~ 1)
>>>> c(a,a)
>>> Warning message:
>>> In formals(fun) : argument is not a function
>>>>
>>>
>>> ______________________________________________
>>> R-devel at r-project.org mailing list
>>> https://stat.ethz.ch/mailman/listinfo/r-devel
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>


From rmh @end|ng |rom temp|e@edu  Fri Jun 14 23:58:46 2019
From: rmh @end|ng |rom temp|e@edu (Richard M. Heiberger)
Date: Fri, 14 Jun 2019 17:58:46 -0400
Subject: [Rd] inappropriate warning in latticeExtra
In-Reply-To: <3a7b17f4-1631-7fe0-ea16-75ca8524fd24@gmail.com>
References: <CAGx1TMCADAAvL0wa6hyHSuRtrrpU1qFNvPpsaorRAtm6P0roaw@mail.gmail.com>
 <CADfFDC54=15F4F=9FC4QJdPBG+WyAt_SepWJ81FE0aJkP=XA-A@mail.gmail.com>
 <CAGx1TMBKiBFWuRr-_avryrqypmf_YtL_tvCi4hUNVnNCpmXM-A@mail.gmail.com>
 <3a7b17f4-1631-7fe0-ea16-75ca8524fd24@gmail.com>
Message-ID: <CAGx1TMA7gMTsBbnEx4SHnM9z6xRCdOr20sjS4282pQqtXA6SJg@mail.gmail.com>

Yes. You identified it a while ago and Deepayan wrote that he fixed it on
r-forge a year ago.  It still isn't on cran.

On Fri, Jun 14, 2019 at 16:04 Duncan Murdoch <murdoch.duncan at gmail.com>
wrote:

> On 14/06/2019 9:12 a.m., Richard M. Heiberger wrote:
> > This is still not repaired in
> >   R version 3.6.0 Patched (2019-05-17 r76528)
> >> library(latticeExtra)
> >>   a <- xyplot(1 ~ 1)
> >> c(a,a)
> > Warning message:
> > In formals(fun) : argument is not a function
> >
> > Can we have it in R-3.6.1 that Peter just announced?
>
> That looks like a bug in the latticeExtra package, not in base R.  In
> particular, the latticeExtra:::c.trellis function appears to be trying
> to take the formals of NULL, and that's why you get the warning.
>
> Duncan Murdoch
>
> >
> > Rich
> >
> > On Mon, Apr 2, 2018 at 4:08 AM Deepayan Sarkar
> > <deepayan.sarkar at gmail.com> wrote:
> >>
> >> On Fri, Mar 23, 2018 at 7:58 AM, Richard M. Heiberger <rmh at temple.edu>
> wrote:
> >>> The warning message in the last line of this email is incorrect.
> >>> This is behavior which Duncan Murdoch labeled a bug in
> >>>     https://stat.ethz.ch/pipermail/r-help/2017-December/450494.html
> >>
> >> Yes, sorry, this has been fixed in the r-forge sources for a while
> >> now, but I haven't had the time to finish up some other fixes and push
> >> an update to CRAN.
> >>
> >> Hopefully over the summer break.
> >>
> >> Regards,
> >> -Deepayan
> >>
> >>
> >>> This is a fresh install of R-devel (2018-03-21 r74436)
> >>>
> >>>
> >>>
> >>>
> >>> R Under development (unstable) (2018-03-21 r74436) -- "Unsuffered
> Consequences"
> >>> Copyright (C) 2018 The R Foundation for Statistical Computing
> >>> Platform: x86_64-w64-mingw32/x64 (64-bit)
> >>>
> >>> R is free software and comes with ABSOLUTELY NO WARRANTY.
> >>> You are welcome to redistribute it under certain conditions.
> >>> Type 'license()' or 'licence()' for distribution details.
> >>>
> >>>    Natural language support but running in an English locale
> >>>
> >>> R is a collaborative project with many contributors.
> >>> Type 'contributors()' for more information and
> >>> 'citation()' on how to cite R or R packages in publications.
> >>>
> >>> Type 'demo()' for some demos, 'help()' for on-line help, or
> >>> 'help.start()' for an HTML browser interface to help.
> >>> Type 'q()' to quit R.
> >>>
> >>>> library(latticeExtra)
> >>> Error in library(latticeExtra) :
> >>>    there is no package called ?latticeExtra?
> >>>> install.packages("latticeExtra")
> >>> Warning in install.packages("latticeExtra") :
> >>>    'lib = "C:/Program Files/R/R-devel/library"' is not writable
> >>> --- Please select a CRAN mirror for use in this session ---
> >>> also installing the dependency ?RColorBrewer?
> >>>
> >>> Warning: unable to access index for repository
> >>> http://www.stats.ox.ac.uk/pub/RWin/bin/windows/contrib/3.5:
> >>>    cannot open URL
> >>> 'http://www.stats.ox.ac.uk/pub/RWin/bin/windows/contrib/3.5/PACKAGES'
> >>> trying URL '
> https://cran.wu.ac.at/bin/windows/contrib/3.5/RColorBrewer_1.1-2.zip'
> >>> Content type 'application/zip' length 55444 bytes (54 KB)
> >>> downloaded 54 KB
> >>>
> >>> trying URL '
> https://cran.wu.ac.at/bin/windows/contrib/3.5/latticeExtra_0.6-28.zip'
> >>> Content type 'application/zip' length 2191524 bytes (2.1 MB)
> >>> downloaded 2.1 MB
> >>>
> >>> package ?RColorBrewer? successfully unpacked and MD5 sums checked
> >>> package ?latticeExtra? successfully unpacked and MD5 sums checked
> >>>
> >>> The downloaded binary packages are in
> >>>
> C:\Users\rmh.DESKTOP-60G4CCO\AppData\Local\Temp\RtmpqA7Rqg\downloaded_packages
> >>>> library(latticeExtra)
> >>> Loading required package: lattice
> >>> Loading required package: RColorBrewer
> >>>> a <- xyplot(1 ~ 1)
> >>>> c(a,a)
> >>> Warning message:
> >>> In formals(fun) : argument is not a function
> >>>>
> >>>
> >>> ______________________________________________
> >>> R-devel at r-project.org mailing list
> >>> https://stat.ethz.ch/mailman/listinfo/r-devel
> >
> > ______________________________________________
> > R-devel at r-project.org mailing list
> > https://stat.ethz.ch/mailman/listinfo/r-devel
> >
>
>

	[[alternative HTML version deleted]]


From @purd|e@@ @end|ng |rom gm@||@com  Sat Jun 15 01:23:55 2019
From: @purd|e@@ @end|ng |rom gm@||@com (Abby Spurdle)
Date: Sat, 15 Jun 2019 11:23:55 +1200
Subject: [Rd] Halfway through writing an "IDE" with support for R;
 Proof of concept, and request for suggestions.
In-Reply-To: <CALEXWq2jksxKDsdEQncjQNz0OLr0xWJTUb2ud_YWkDbkaQv8gA@mail.gmail.com>
References: <CAB8pepyZQRnw9xWG8DONb32KB5pw-x_a-3xQ9R1RswoLUVkBfw@mail.gmail.com>
 <CAB8pepyK0tZmDUk6n8jebDmBRYVCt+Zp+vv3JjAzS3XYaL8kuw@mail.gmail.com>
 <CALEXWq2jksxKDsdEQncjQNz0OLr0xWJTUb2ud_YWkDbkaQv8gA@mail.gmail.com>
Message-ID: <CAB8pepxxQ34T_mh=7aVP7WgcfxyZJ23gB4whrincN55BY9DpGw@mail.gmail.com>

On Fri, Jun 14, 2019 at 7:24 PM I?aki Ucar <iucar at fedoraproject.org> wrote:
>
> There are many similar projects that are mature

I'm not sure what projects you're referring to.

If we create some constraints:

(1) Internal systems consoles (*plural*).
Rules out most things.
Noting that many tools are designed to bypass the console.

(2) Modern user interface.
Rules out Vim and Emacs.

(3) File system based rather than (IDE-dependent) project based.
Rules out Eclipse and many other IDEs.

(4) Multi-language focus.
Rules out RStudio and many other IDEs.

(5) Completely open source and completely free.
Also rules out RStudio, which limites many features to it's enterprise
edition.

(6) Cross platform desktop application, not web based.
(However, there is a need for web based tools).

None of the tools that I've looked at satisfy these constraints.
But if you know of some, I'd like to know... And I would consider
contributing...

	[[alternative HTML version deleted]]


From |uc@r @end|ng |rom |edor@project@org  Sat Jun 15 01:39:46 2019
From: |uc@r @end|ng |rom |edor@project@org (=?UTF-8?Q?I=C3=B1aki_Ucar?=)
Date: Sat, 15 Jun 2019 01:39:46 +0200
Subject: [Rd] Halfway through writing an "IDE" with support for R;
 Proof of concept, and request for suggestions.
In-Reply-To: <CAB8pepxxQ34T_mh=7aVP7WgcfxyZJ23gB4whrincN55BY9DpGw@mail.gmail.com>
References: <CAB8pepyZQRnw9xWG8DONb32KB5pw-x_a-3xQ9R1RswoLUVkBfw@mail.gmail.com>
 <CAB8pepyK0tZmDUk6n8jebDmBRYVCt+Zp+vv3JjAzS3XYaL8kuw@mail.gmail.com>
 <CALEXWq2jksxKDsdEQncjQNz0OLr0xWJTUb2ud_YWkDbkaQv8gA@mail.gmail.com>
 <CAB8pepxxQ34T_mh=7aVP7WgcfxyZJ23gB4whrincN55BY9DpGw@mail.gmail.com>
Message-ID: <CALEXWq18gfGc12RV=2Y01tR6vDqWCS5YTWVfPPvE9XAj3Ad8hQ@mail.gmail.com>

On Sat, 15 Jun 2019 at 01:24, Abby Spurdle <spurdle.a at gmail.com> wrote:
>
> None of the tools that I've looked at satisfy these constraints.
> But if you know of some, I'd like to know... And I would consider contributing...

What about Atom, VS Code and the like? Or what about taking a project
that meets most of the constraints and pushing to cover all of them,
or even forking it and modifying the part you don't like?

I?aki


From @purd|e@@ @end|ng |rom gm@||@com  Sat Jun 15 03:13:07 2019
From: @purd|e@@ @end|ng |rom gm@||@com (Abby Spurdle)
Date: Sat, 15 Jun 2019 13:13:07 +1200
Subject: [Rd] Halfway through writing an "IDE" with support for R;
 Proof of concept, and request for suggestions.
In-Reply-To: <CALEXWq18gfGc12RV=2Y01tR6vDqWCS5YTWVfPPvE9XAj3Ad8hQ@mail.gmail.com>
References: <CAB8pepyZQRnw9xWG8DONb32KB5pw-x_a-3xQ9R1RswoLUVkBfw@mail.gmail.com>
 <CAB8pepyK0tZmDUk6n8jebDmBRYVCt+Zp+vv3JjAzS3XYaL8kuw@mail.gmail.com>
 <CALEXWq2jksxKDsdEQncjQNz0OLr0xWJTUb2ud_YWkDbkaQv8gA@mail.gmail.com>
 <CAB8pepxxQ34T_mh=7aVP7WgcfxyZJ23gB4whrincN55BY9DpGw@mail.gmail.com>
 <CALEXWq18gfGc12RV=2Y01tR6vDqWCS5YTWVfPPvE9XAj3Ad8hQ@mail.gmail.com>
Message-ID: <CAB8pepwvFnj5XmLODv8BEH0NxXnixgkBnQh__WAnR+vVoX53wA@mail.gmail.com>

> What about Atom, VS Code and the like? Or what about taking a project
> that meets most of the constraints and pushing to cover all of them,
> or even forking it and modifying the part you don't like?

I'm not prepared to endorse GitHub affiliated software.

	[[alternative HTML version deleted]]


From deep@y@n@@@rk@r @end|ng |rom gm@||@com  Sat Jun 15 09:13:39 2019
From: deep@y@n@@@rk@r @end|ng |rom gm@||@com (Deepayan Sarkar)
Date: Sat, 15 Jun 2019 12:43:39 +0530
Subject: [Rd] inappropriate warning in latticeExtra
In-Reply-To: <CAGx1TMBKiBFWuRr-_avryrqypmf_YtL_tvCi4hUNVnNCpmXM-A@mail.gmail.com>
References: <CAGx1TMCADAAvL0wa6hyHSuRtrrpU1qFNvPpsaorRAtm6P0roaw@mail.gmail.com>
 <CADfFDC54=15F4F=9FC4QJdPBG+WyAt_SepWJ81FE0aJkP=XA-A@mail.gmail.com>
 <CAGx1TMBKiBFWuRr-_avryrqypmf_YtL_tvCi4hUNVnNCpmXM-A@mail.gmail.com>
Message-ID: <CADfFDC4n7dH9wsf5YHRtOPyZPMRMVGLuFqZ-DcL2B+PFA0WJ+A@mail.gmail.com>

On Fri, Jun 14, 2019 at 6:42 PM Richard M. Heiberger <rmh at temple.edu> wrote:
>
> This is still not repaired in
>  R version 3.6.0 Patched (2019-05-17 r76528)
> > library(latticeExtra)
> >  a <- xyplot(1 ~ 1)
> > c(a,a)
> Warning message:
> In formals(fun) : argument is not a function
>
> Can we have it in R-3.6.1 that Peter just announced?

Sorry I have been neglecting this (and some lattice bugs as well). I
should get time to work on this after mid-July.

-Deepayan

>
> Rich
>
> On Mon, Apr 2, 2018 at 4:08 AM Deepayan Sarkar
> <deepayan.sarkar at gmail.com> wrote:
> >
> > On Fri, Mar 23, 2018 at 7:58 AM, Richard M. Heiberger <rmh at temple.edu> wrote:
> > > The warning message in the last line of this email is incorrect.
> > > This is behavior which Duncan Murdoch labeled a bug in
> > >    https://stat.ethz.ch/pipermail/r-help/2017-December/450494.html
> >
> > Yes, sorry, this has been fixed in the r-forge sources for a while
> > now, but I haven't had the time to finish up some other fixes and push
> > an update to CRAN.
> >
> > Hopefully over the summer break.
> >
> > Regards,
> > -Deepayan
> >
> >
> > > This is a fresh install of R-devel (2018-03-21 r74436)
> > >
> > >
> > >
> > >
> > > R Under development (unstable) (2018-03-21 r74436) -- "Unsuffered Consequences"
> > > Copyright (C) 2018 The R Foundation for Statistical Computing
> > > Platform: x86_64-w64-mingw32/x64 (64-bit)
> > >
> > > R is free software and comes with ABSOLUTELY NO WARRANTY.
> > > You are welcome to redistribute it under certain conditions.
> > > Type 'license()' or 'licence()' for distribution details.
> > >
> > >   Natural language support but running in an English locale
> > >
> > > R is a collaborative project with many contributors.
> > > Type 'contributors()' for more information and
> > > 'citation()' on how to cite R or R packages in publications.
> > >
> > > Type 'demo()' for some demos, 'help()' for on-line help, or
> > > 'help.start()' for an HTML browser interface to help.
> > > Type 'q()' to quit R.
> > >
> > >> library(latticeExtra)
> > > Error in library(latticeExtra) :
> > >   there is no package called ?latticeExtra?
> > >> install.packages("latticeExtra")
> > > Warning in install.packages("latticeExtra") :
> > >   'lib = "C:/Program Files/R/R-devel/library"' is not writable
> > > --- Please select a CRAN mirror for use in this session ---
> > > also installing the dependency ?RColorBrewer?
> > >
> > > Warning: unable to access index for repository
> > > http://www.stats.ox.ac.uk/pub/RWin/bin/windows/contrib/3.5:
> > >   cannot open URL
> > > 'http://www.stats.ox.ac.uk/pub/RWin/bin/windows/contrib/3.5/PACKAGES'
> > > trying URL 'https://cran.wu.ac.at/bin/windows/contrib/3.5/RColorBrewer_1.1-2.zip'
> > > Content type 'application/zip' length 55444 bytes (54 KB)
> > > downloaded 54 KB
> > >
> > > trying URL 'https://cran.wu.ac.at/bin/windows/contrib/3.5/latticeExtra_0.6-28.zip'
> > > Content type 'application/zip' length 2191524 bytes (2.1 MB)
> > > downloaded 2.1 MB
> > >
> > > package ?RColorBrewer? successfully unpacked and MD5 sums checked
> > > package ?latticeExtra? successfully unpacked and MD5 sums checked
> > >
> > > The downloaded binary packages are in
> > >         C:\Users\rmh.DESKTOP-60G4CCO\AppData\Local\Temp\RtmpqA7Rqg\downloaded_packages
> > >> library(latticeExtra)
> > > Loading required package: lattice
> > > Loading required package: RColorBrewer
> > >> a <- xyplot(1 ~ 1)
> > >> c(a,a)
> > > Warning message:
> > > In formals(fun) : argument is not a function
> > >>
> > >
> > > ______________________________________________
> > > R-devel at r-project.org mailing list
> > > https://stat.ethz.ch/mailman/listinfo/r-devel


From morg@n@em@||box @end|ng |rom gm@||@com  Fri Jun 14 23:31:53 2019
From: morg@n@em@||box @end|ng |rom gm@||@com (Morgan Morgan)
Date: Fri, 14 Jun 2019 22:31:53 +0100
Subject: [Rd] R C API resize matrix
Message-ID: <CAL0QV_NPf1NzMJbscLc3QirJcAfG=Ks9ecXPbykk--kFmT_0fw@mail.gmail.com>

Hi,

Is there a way to resize a matrix defined as follows:

SEXP a = PROTECT(allocMatrix(INTSXP, 10, 2));
int *pa  = INTEGER(a)

To row = 5 and col = 1 or do I have to allocate a second matrix "b" with
pointer *pb and do a "for" loop to transfer the value of a to b?

Thank you
Best regards
Morgan

	[[alternative HTML version deleted]]


From p@u|poncet @end|ng |rom y@hoo@|r  Fri Jun 14 21:56:14 2019
From: p@u|poncet @end|ng |rom y@hoo@|r (P Poncet)
Date: Fri, 14 Jun 2019 19:56:14 +0000 (UTC)
Subject: [Rd] Bug report: 'formula("x")' loops infinitely ('formula("y")'
 does not)
References: <1166390877.2555935.1560542174704.ref@mail.yahoo.com>
Message-ID: <1166390877.2555935.1560542174704@mail.yahoo.com>


Dear,??

The script'formula("x")' loops infinitely. More specifically, it throws thefollowing error:?

?

Error: evaluationnested too deeply: infinite recursion / options(expressions=)??

?

As a side effect,this makes an IDE like RStudio to crash. 

On the other hand,the script 'formula("y")'?works as expected : if ?y? does notexist in the global environment, it throws: 

?

Error ineval(parse(text = x, keep.source = FALSE)[[1L]]) : object ?y? not found

?

I use R-3.6.0 onWindows.?

?

Bestregards,?
Paul Poncet

?


	[[alternative HTML version deleted]]


From m@ech|er @end|ng |rom @t@t@m@th@ethz@ch  Mon Jun 17 10:21:24 2019
From: m@ech|er @end|ng |rom @t@t@m@th@ethz@ch (Martin Maechler)
Date: Mon, 17 Jun 2019 10:21:24 +0200
Subject: [Rd] 
 Bug report: 'formula("x")' loops infinitely ('formula("y")'
 does not)
In-Reply-To: <1166390877.2555935.1560542174704@mail.yahoo.com>
References: <1166390877.2555935.1560542174704.ref@mail.yahoo.com>
 <1166390877.2555935.1560542174704@mail.yahoo.com>
Message-ID: <23815.19844.883659.184113@stat.math.ethz.ch>

>>>>> P Poncet via R-devel 
>>>>>     on Fri, 14 Jun 2019 19:56:14 +0000 writes:

    > Dear,??

    > The script'formula("x")' loops infinitely. 

well ... if it would really, your computer would still be
running and heating ... ;-)

    > More specifically, it throws the following error:?

    > Error: evaluation nested too deeply: infinite recursion /
    > options(expressions=)??

Yes, or something similar depending on your computer operating
system (OS) and/or memory settings.

    > As a side effect,this makes an IDE like RStudio to crash.

[really ?]

    > On the other hand,the script 'formula("y")'?works as
    > expected :  if ?y? does not exist in the global environment,
    > it throws:

    > Error in eval(parse(text = x, keep.source = FALSE)[[1L]]) :
    > object ?y? not found

well, that's not "as expected" I hope; also it should not depend
on "y" existing or not.

    > I use R-3.6.0 on Windows.?

Interestingly, when I had introduced str2lang() and
str2expression() into R-devel [now in R 3.6.0]  I also made long
passes into all the base R code to find locations where these
new functions could & should be used... and also found the
formula.character method (in R base package 'stats')  which is
indeed what formula("..")  calls.

When trying to introduce str2call() etc there, I indeed found
that formula.character() had many quirks and undesired
properties *in the case* a user does not specify a formula
correctly.  I've corrected all (well, modestly say "most") of
these, such in R-devel, for several months now,

> formula("x")
Error in formula.character("x") : invalid formula "x": not a call
> formula("y")
Error in formula.character("y") : invalid formula "y": not a call
> 

{ which is something I would expect rather then the above
  'object "y" not found'  ...}

    > Best regards,? Paul Poncet

Thank you, Paul!

To other readers:  I am tempted to port the new formula()
behavior from R-devel to R patched,  to make it into R 3.6.1
It does fix this and similar bugs/inconsistencies but it *is* a minor
API change and may break user code that had relied on previous
incorrect behavior.

In R-devel, e.g.,

> formula(c("y~ ", " x"))
y ~ x
Warning message:
Using formula(x) is deprecated when x is a character vector of length > 1.
  Consider formula(paste(x, collapse = " ")) instead. 

> formula("{y ~ x}")
y ~ x
Warning message:
invalid formula "{y ~ x}": extraneous call to `{` is deprecated 
>

and if we port formula.character() from R-devel to  'R patched'
(to become 3.6.1), we'd port it completely.

Opinions?

Martin Maechler
ETH Zurich  and  R Core team


From @|mon@urb@nek @end|ng |rom R-project@org  Mon Jun 17 16:54:15 2019
From: @|mon@urb@nek @end|ng |rom R-project@org (Simon Urbanek)
Date: Mon, 17 Jun 2019 10:54:15 -0400
Subject: [Rd] R C API resize matrix
In-Reply-To: <CAL0QV_NPf1NzMJbscLc3QirJcAfG=Ks9ecXPbykk--kFmT_0fw@mail.gmail.com>
References: <CAL0QV_NPf1NzMJbscLc3QirJcAfG=Ks9ecXPbykk--kFmT_0fw@mail.gmail.com>
Message-ID: <D7E7A385-9A9D-4933-9798-1B19AEC47577@R-project.org>

Matrix is just a vector with the dim attribute. Assuming it is not referenced by anyone, you can set any values to the dim attribute. As for the vector, you can use SET_LENGTH() to shorten it - but I'm not sure how official it is - it was originally designed to work, but there were abuses of TRUELENGTH so not sure where we stand now (shortened vectors used to fool the garbage collector as far as object sizes go). I wouldn't do it unless you're dealing with rally huge matrices.

Cheers,
Simon


> On Jun 14, 2019, at 5:31 PM, Morgan Morgan <morgan.emailbox at gmail.com> wrote:
> 
> Hi,
> 
> Is there a way to resize a matrix defined as follows:
> 
> SEXP a = PROTECT(allocMatrix(INTSXP, 10, 2));
> int *pa  = INTEGER(a)
> 
> To row = 5 and col = 1 or do I have to allocate a second matrix "b" with
> pointer *pb and do a "for" loop to transfer the value of a to b?
> 
> Thank you
> Best regards
> Morgan
> 
> 	[[alternative HTML version deleted]]
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
> 


From |uke-t|erney @end|ng |rom u|ow@@edu  Mon Jun 17 19:38:14 2019
From: |uke-t|erney @end|ng |rom u|ow@@edu (Tierney, Luke)
Date: Mon, 17 Jun 2019 17:38:14 +0000
Subject: [Rd] [External] Re:  R C API resize matrix
In-Reply-To: <D7E7A385-9A9D-4933-9798-1B19AEC47577@R-project.org>
References: <CAL0QV_NPf1NzMJbscLc3QirJcAfG=Ks9ecXPbykk--kFmT_0fw@mail.gmail.com>
 <D7E7A385-9A9D-4933-9798-1B19AEC47577@R-project.org>
Message-ID: <alpine.DEB.2.21.1906171234020.4155@luke-Latitude-7480>

On Mon, 17 Jun 2019, Simon Urbanek wrote:

> Matrix is just a vector with the dim attribute. Assuming it is not referenced by anyone, you can set any values to the dim attribute. As for the vector, you can use SET_LENGTH() to shorten it - but I'm not sure how official it is - it was originally designed to work, but there were abuses of TRUELENGTH so not sure where we stand now (shortened vectors used to fool the garbage collector as far as object sizes go). I wouldn't do it unless you're dealing with rally huge matrices.

Don't do that. SET_LENGTH isn't part of the API and using it outside
specific internal code confuses the garbage collector.

There is support for a growable vector but it's not a at a point where
the interface is stable enough to be used in packages. So again please
don't go there.

Also for a matrix unless you are just dropping trailing columns you
would have to move data in memory.

Best,

luke

>
> Cheers,
> Simon
>
>
>> On Jun 14, 2019, at 5:31 PM, Morgan Morgan <morgan.emailbox at gmail.com> wrote:
>>
>> Hi,
>>
>> Is there a way to resize a matrix defined as follows:
>>
>> SEXP a = PROTECT(allocMatrix(INTSXP, 10, 2));
>> int *pa  = INTEGER(a)
>>
>> To row = 5 and col = 1 or do I have to allocate a second matrix "b" with
>> pointer *pb and do a "for" loop to transfer the value of a to b?
>>
>> Thank you
>> Best regards
>> Morgan
>>
>> 	[[alternative HTML version deleted]]
>>
>> ______________________________________________
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>

-- 
Luke Tierney
Ralph E. Wareham Professor of Mathematical Sciences
University of Iowa                  Phone:             319-335-3386
Department of Statistics and        Fax:               319-335-3017
    Actuarial Science
241 Schaeffer Hall                  email:   luke-tierney at uiowa.edu
Iowa City, IA 52242                 WWW:  http://www.stat.uiowa.edu


From irederik m@iii@g oii oib@@et  Tue Jun 18 04:22:18 2019
From: irederik m@iii@g oii oib@@et (irederik m@iii@g oii oib@@et)
Date: Mon, 17 Jun 2019 19:22:18 -0700
Subject: [Rd] Halfway through writing an "IDE" with support for R;
 Proof of concept, and request for suggestions.
In-Reply-To: <CAB8pepwvFnj5XmLODv8BEH0NxXnixgkBnQh__WAnR+vVoX53wA@mail.gmail.com>
References: <CAB8pepyZQRnw9xWG8DONb32KB5pw-x_a-3xQ9R1RswoLUVkBfw@mail.gmail.com>
 <CAB8pepyK0tZmDUk6n8jebDmBRYVCt+Zp+vv3JjAzS3XYaL8kuw@mail.gmail.com>
 <CALEXWq2jksxKDsdEQncjQNz0OLr0xWJTUb2ud_YWkDbkaQv8gA@mail.gmail.com>
 <CAB8pepxxQ34T_mh=7aVP7WgcfxyZJ23gB4whrincN55BY9DpGw@mail.gmail.com>
 <CALEXWq18gfGc12RV=2Y01tR6vDqWCS5YTWVfPPvE9XAj3Ad8hQ@mail.gmail.com>
 <CAB8pepwvFnj5XmLODv8BEH0NxXnixgkBnQh__WAnR+vVoX53wA@mail.gmail.com>
Message-ID: <20190618022218.r4lwu6cpmffyfnse@localhost>

On Sat, Jun 15, 2019 at 01:13:07PM +1200, Abby Spurdle wrote:
>> What about Atom, VS Code and the like? Or what about taking a project
>> that meets most of the constraints and pushing to cover all of them,
>> or even forking it and modifying the part you don't like?
>
>I'm not prepared to endorse GitHub affiliated software.
>
>	[[alternative HTML version deleted]]

I'm trying to figure out what (of many possibilities) is wrong with GitHub.

Also, do good programmers really use IDEs? For me the problem is the "integrated" part; the more stuff is bundled together in one package (terminal, editor, window manager, build system), the more annoying it's going to be that I can't use the terminal/editor/window-manager/build-system of my preference.

When I use R, I use it on the command-line with a general-purpose terminal multiplexer, terminal, text editor, (tiling) window manager, and so on. The text editor and R are both running in separate windows in a terminal multiplexer session. I have custom key-bindings in my terminal and text editor which help me move text back and forth between R and the editor, and to do common tasks like sourcing the current file that I'm editing. For me this is much more flexible than anything I could get in a coherent package like RStudio, or something like what Abby is working on. For example, in my setup I never have to use the mouse, which is great for me.

Although Abby's IDE looks awesome, and like a fun project, I felt obliged to weigh in with my own opinions. Not that I'm a very good programmer, but I feel an IDE would make me worse. It seems more like a valuable tool for introducing beginners to the language. We have RStudio, which already fills this niche pretty well (to echo I?aki).

I'm not even quite sure why I'm writing this, but I hope it may be vaguely useful...

Best wishes,

Frederick


From |@g|ne @end|ng |rom p@@jd@org  Mon Jun 17 09:56:39 2019
From: |@g|ne @end|ng |rom p@@jd@org (=?iso-8859-1?Q?IAGO_GIN=C9_V=C1ZQUEZ?=)
Date: Mon, 17 Jun 2019 07:56:39 +0000
Subject: [Rd] Could generic functions check different S3 methods for an
 object when one of them produces an error?
Message-ID: <DB6PR02MB31272F107C5F54FE88D63B9592EB0@DB6PR02MB3127.eurprd02.prod.outlook.com>

Hi,


Let's say one has an object with multiple classes, and a generic function to apply to it has associated S3 methods for more than one of those classes. Further, the method it chooses (I do not know how; some order in the class vector?) is not the suitable one and it produces an error. Would there be some way to make the generic function to choice the correct method, or in case that for any method taken it produces an error, to try another one.


For example (commented in detail here<https://github.com/tidymodels/broom/issues/714>):


# object with multiple classes: the output of function `geepack::geeglm`. The output of `class(object)`:

```

[1] "geeglm" "gee" "glm" "lm"

```

The generic function: `stats::confint`.

The S3 method chosen: `confint.glm`. It produces an error. The correct method in this case would be `broom:::confint.geeglm`.


Thank you!

Iago

	[[alternative HTML version deleted]]


From j|ox @end|ng |rom mcm@@ter@c@  Tue Jun 18 17:28:36 2019
From: j|ox @end|ng |rom mcm@@ter@c@ (Fox, John)
Date: Tue, 18 Jun 2019 15:28:36 +0000
Subject: [Rd] Could generic functions check different S3 methods for an
 object when one of them produces an error?
In-Reply-To: <2099_1560870679_x5IFBIWA007940_DB6PR02MB31272F107C5F54FE88D63B9592EB0@DB6PR02MB3127.eurprd02.prod.outlook.com>
References: <2099_1560870679_x5IFBIWA007940_DB6PR02MB31272F107C5F54FE88D63B9592EB0@DB6PR02MB3127.eurprd02.prod.outlook.com>
Message-ID: <2E47F9C5-9C46-4BFB-9260-FB7ABB5FAE3C@mcmaster.ca>

Dear Iago,

The R S3 object system works as expected here, using the first available method processing the class vector from left to right. The problem is that the broom package doesn't export the confint.geeglm() method but rather reserves it for internal use. I can't think why the package authors chose to do that but you could ask them. The following therefore works (following on with your example):

> confint.geeglm <- broom:::confint.geeglm
> confint(geefit)
                    lwr         upr
(Intercept) 3607.595981 5204.790222
Frost         -2.723317    6.097207
Murder       -84.166856   38.838155

I hope this helps,
 John

  -------------------------------------------------
  John Fox, Professor Emeritus
  McMaster University
  Hamilton, Ontario, Canada
  Web: http::/socserv.mcmaster.ca/jfox

> On Jun 17, 2019, at 3:56 AM, IAGO GIN? V?ZQUEZ <i.gine at pssjd.org> wrote:
> 
> Hi,
> 
> 
> Let's say one has an object with multiple classes, and a generic function to apply to it has associated S3 methods for more than one of those classes. Further, the method it chooses (I do not know how; some order in the class vector?) is not the suitable one and it produces an error. Would there be some way to make the generic function to choice the correct method, or in case that for any method taken it produces an error, to try another one.
> 
> 
> For example (commented in detail here<https://github.com/tidymodels/broom/issues/714>):
> 
> 
> # object with multiple classes: the output of function `geepack::geeglm`. The output of `class(object)`:
> 
> ```
> 
> [1] "geeglm" "gee" "glm" "lm"
> 
> ```
> 
> The generic function: `stats::confint`.
> 
> The S3 method chosen: `confint.glm`. It produces an error. The correct method in this case would be `broom:::confint.geeglm`.
> 
> 
> Thank you!
> 
> Iago
> 
> 	[[alternative HTML version deleted]]
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From murdoch@dunc@n @end|ng |rom gm@||@com  Tue Jun 18 17:28:50 2019
From: murdoch@dunc@n @end|ng |rom gm@||@com (Duncan Murdoch)
Date: Tue, 18 Jun 2019 11:28:50 -0400
Subject: [Rd] Could generic functions check different S3 methods for an
 object when one of them produces an error?
In-Reply-To: <DB6PR02MB31272F107C5F54FE88D63B9592EB0@DB6PR02MB3127.eurprd02.prod.outlook.com>
References: <DB6PR02MB31272F107C5F54FE88D63B9592EB0@DB6PR02MB3127.eurprd02.prod.outlook.com>
Message-ID: <a4354681-7b29-e1b5-4703-9894183c03d5@gmail.com>

On 17/06/2019 3:56 a.m., IAGO GIN? V?ZQUEZ wrote:
> Hi,
> 
> 
> Let's say one has an object with multiple classes, and a generic function to apply to it has associated S3 methods for more than one of those classes. Further, the method it chooses (I do not know how; some order in the class vector?) is not the suitable one and it produces an error. Would there be some way to make the generic function to choice the correct method, or in case that for any method taken it produces an error, to try another one.
> 
> 
> For example (commented in detail here<https://github.com/tidymodels/broom/issues/714>):
> 
> 
> # object with multiple classes: the output of function `geepack::geeglm`. The output of `class(object)`:
> 
> ```
> 
> [1] "geeglm" "gee" "glm" "lm"
> 
> ```
> 
> The generic function: `stats::confint`.
> 
> The S3 method chosen: `confint.glm`. It produces an error. The correct method in this case would be `broom:::confint.geeglm`.

There is something wrong here.  If R knows about confint.geeglm (because 
broom is loaded, for example), then confint(x) should call it before it 
calls confint.glm.  It will look for methods confint.geeglm, then 
confint.gee, then confint.glm, then confint.lm.

However, when I run your code and load broom, I see

 > methods("confint")
[1] confint.default  confint.glm*     confint.lm       confint.lme* 
confint.lmList*  confint.nls*     confint.nlsList*
see '?methods' for accessing help and source code


(with no confint.geeglm shown).  So something is wrong, probably in 
broom.  As far as I can see, it never declares confint.geeglm as an 
S3method in its NAMESPACE file.  (I'm looking at the devel version in 
https://github.com/tidymodels/broom/blob/master/NAMESPACE).

Get that fixed, and your problem should go away.

Duncan Murdoch


From therne@u @end|ng |rom m@yo@edu  Tue Jun 18 19:02:29 2019
From: therne@u @end|ng |rom m@yo@edu (Therneau, Terry M., Ph.D.)
Date: Tue, 18 Jun 2019 12:02:29 -0500
Subject: [Rd] making a vignette optional
Message-ID: <9ecfbe$btcmmv@ironport10.mayo.edu>

I had added a vignette to the coxme package and all worked well locally, but it failed at 
CRAN.???? The issue is that the vignette involves using coxme for pedigree data, it 
doesn't work without the kinship2 package, and I hadn't put in the necessary "if 
(require(...." logic.

The question is, how do I make the entire vignette conditional? If the package isn't 
available, there is nothing to run.? The latex itself will fail when it can't find the 
figures? (I float them), and the parts that don't will end up as inane discussion of 
material that isn't there.

Terry T.



	[[alternative HTML version deleted]]


From |uc@r @end|ng |rom |edor@project@org  Tue Jun 18 19:38:58 2019
From: |uc@r @end|ng |rom |edor@project@org (=?UTF-8?Q?I=C3=B1aki_Ucar?=)
Date: Tue, 18 Jun 2019 19:38:58 +0200
Subject: [Rd] making a vignette optional
In-Reply-To: <9ecfbe$btcmmv@ironport10.mayo.edu>
References: <9ecfbe$btcmmv@ironport10.mayo.edu>
Message-ID: <CALEXWq1NohT+JGnLaCDb5RKFLQ5ZbWsMUO-HZDEV5+v-Ky0u=g@mail.gmail.com>

On Tue, 18 Jun 2019 at 19:03, Therneau, Terry M., Ph.D. via R-devel
<r-devel at r-project.org> wrote:
>
> I had added a vignette to the coxme package and all worked well locally, but it failed at
> CRAN.     The issue is that the vignette involves using coxme for pedigree data, it
> doesn't work without the kinship2 package, and I hadn't put in the necessary "if
> (require(...." logic.
>
> The question is, how do I make the entire vignette conditional? If the package isn't
> available, there is nothing to run.  The latex itself will fail when it can't find the
> figures  (I float them), and the parts that don't will end up as inane discussion of
> material that isn't there.

This is what I do in my packages:
https://github.com/r-simmer/simmer/blob/master/vignettes/simmer-08-philosophers.Rmd#L21

If SweaveOpts accept code in the same way, you can set something like

\SweaveOpts{eval=requireNamespace("kinship2", quietly=TRUE)}

I?aki


From @zwj|08 @end|ng |rom gm@||@com  Tue Jun 18 19:41:09 2019
From: @zwj|08 @end|ng |rom gm@||@com (King Jiefei)
Date: Tue, 18 Jun 2019 13:41:09 -0400
Subject: [Rd] Fast way to call an R function from C++?
Message-ID: <CAGiFhPONJoEeWWdtTyHw=Y5or1ad3pXtydLNQyONzU3FPatgPA@mail.gmail.com>

Hi,

I'm looking for a most efficient way to call an R function from C++ in a
package. I know there are two functions (`R_forceAndCall` and `Rf_eval`)
that can do the "call" part, but both are slow compared to calling the same
function in R. I also try to use Rcpp and it is the worse one. Here is my
test code:

C++ code:
```
// [[Rcpp::export]]
SEXP C_test1(SEXP f, SEXP x) {
SEXP call =PROTECT(Rf_lang2(f, x));
SEXP val = R_forceAndCall(call, 1, R_GlobalEnv);
UNPROTECT(1);
return val;
}

// [[Rcpp::export]]
SEXP C_test2(SEXP expr, SEXP env) {
SEXP val = Rf_eval(expr, env);
return val;
}

// [[Rcpp::export]]
SEXP C_test3(SEXP f,SEXP x) {
Function fun(f);
return fun(x);
}
```

R code:
```
testFunc<-function(x){
  x=x^2
  return(x)
}
evn=new.env()
evn$x=x
expr=quote(testFunc(evn$x))

testFunc(evn$x)
C_test1(testFunc, evn$x)
C_test2(expr,evn)
C_test3(testFunc,evn$x)
```

For the results, I run each function 1,000,000 times:

   - testFunc : 0.47 sec
   - C_test1 : 2.46 sec
   - C_test2 : 2.74 sec
   - C_test3 : 18.86 sec

It is clear to see that calling an R function in R is the fast one, it is
about 5X faster than ` R_forceAndCall ` and ` Rf_eval`. the latter two
functions have a similar performance and using Rcpp is the worst one. Is it
expected? Why is calling an R function from C++ much slower than calling
the function from R? Is there any faster way to do the function call in C++?

Best,
Jiefei

	[[alternative HTML version deleted]]


From kev|nu@hey @end|ng |rom gm@||@com  Tue Jun 18 20:11:32 2019
From: kev|nu@hey @end|ng |rom gm@||@com (Kevin Ushey)
Date: Tue, 18 Jun 2019 11:11:32 -0700
Subject: [Rd] Fast way to call an R function from C++?
In-Reply-To: <CAGiFhPONJoEeWWdtTyHw=Y5or1ad3pXtydLNQyONzU3FPatgPA@mail.gmail.com>
References: <CAGiFhPONJoEeWWdtTyHw=Y5or1ad3pXtydLNQyONzU3FPatgPA@mail.gmail.com>
Message-ID: <CAJXgQP38YFiXpOOg7sEwqHa7tJnx1W4Okf=8DRhYn7saiKrjeg@mail.gmail.com>

Hi Jiefei,

Calling into R from C++ code is more complicated than one might think.
Please see Tomas Kalibera's post here:
https://developer.r-project.org/Blog/public/2019/03/28/use-of-c---in-packages/index.html

The Rcpp Function class is more expensive than a regular Rf_eval()
because it tries to prevent errors (longjmps) from jumping to the top
level, so that the C++ stack can be properly unwound. In addition,
your example also pays a cost for the indirect function calls used
with Rcpp attributes, since the generated R wrapper functions will
then use `.Call()` under the hood. You could also try to directly use
.Call() to avoid that extra R function call overhead.

Even then, R's dispatch system for primitive functions (like `^`) is
likely still going to be faster than what you get from the .Call()
interface, especially since some extra validation does occur when
using .Call(). In practice, that difference is usually negligible
outside of synthetic benchmarks.

Best,
Kevin

On Tue, Jun 18, 2019 at 10:41 AM King Jiefei <szwjf08 at gmail.com> wrote:
>
> Hi,
>
> I'm looking for a most efficient way to call an R function from C++ in a
> package. I know there are two functions (`R_forceAndCall` and `Rf_eval`)
> that can do the "call" part, but both are slow compared to calling the same
> function in R. I also try to use Rcpp and it is the worse one. Here is my
> test code:
>
> C++ code:
> ```
> // [[Rcpp::export]]
> SEXP C_test1(SEXP f, SEXP x) {
> SEXP call =PROTECT(Rf_lang2(f, x));
> SEXP val = R_forceAndCall(call, 1, R_GlobalEnv);
> UNPROTECT(1);
> return val;
> }
>
> // [[Rcpp::export]]
> SEXP C_test2(SEXP expr, SEXP env) {
> SEXP val = Rf_eval(expr, env);
> return val;
> }
>
> // [[Rcpp::export]]
> SEXP C_test3(SEXP f,SEXP x) {
> Function fun(f);
> return fun(x);
> }
> ```
>
> R code:
> ```
> testFunc<-function(x){
>   x=x^2
>   return(x)
> }
> evn=new.env()
> evn$x=x
> expr=quote(testFunc(evn$x))
>
> testFunc(evn$x)
> C_test1(testFunc, evn$x)
> C_test2(expr,evn)
> C_test3(testFunc,evn$x)
> ```
>
> For the results, I run each function 1,000,000 times:
>
>    - testFunc : 0.47 sec
>    - C_test1 : 2.46 sec
>    - C_test2 : 2.74 sec
>    - C_test3 : 18.86 sec
>
> It is clear to see that calling an R function in R is the fast one, it is
> about 5X faster than ` R_forceAndCall ` and ` Rf_eval`. the latter two
> functions have a similar performance and using Rcpp is the worst one. Is it
> expected? Why is calling an R function from C++ much slower than calling
> the function from R? Is there any faster way to do the function call in C++?
>
> Best,
> Jiefei
>
>         [[alternative HTML version deleted]]
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From |uc@r @end|ng |rom |edor@project@org  Tue Jun 18 20:35:13 2019
From: |uc@r @end|ng |rom |edor@project@org (=?UTF-8?Q?I=C3=B1aki_Ucar?=)
Date: Tue, 18 Jun 2019 20:35:13 +0200
Subject: [Rd] Fast way to call an R function from C++?
In-Reply-To: <CAGiFhPONJoEeWWdtTyHw=Y5or1ad3pXtydLNQyONzU3FPatgPA@mail.gmail.com>
References: <CAGiFhPONJoEeWWdtTyHw=Y5or1ad3pXtydLNQyONzU3FPatgPA@mail.gmail.com>
Message-ID: <CALEXWq2g2XFAZ4tzjWuP65PDKXVx1HFK3DvsWVhtV18T61vKEQ@mail.gmail.com>

On Tue, 18 Jun 2019 at 19:41, King Jiefei <szwjf08 at gmail.com> wrote:
>
> [...]
>
> It is clear to see that calling an R function in R is the fast one, it is
> about 5X faster than ` R_forceAndCall ` and ` Rf_eval`. the latter two
> functions have a similar performance and using Rcpp is the worst one. Is it
> expected? Why is calling an R function from C++ much slower than calling
> the function from R? Is there any faster way to do the function call in C++?

Yes, there is: enable fast evaluation by setting
-DRCPP_USE_UNWIND_PROTECT, or alternatively, use

// [[Rcpp::plugins(unwindProtect)]]

I?aki


From |uc@r @end|ng |rom |edor@project@org  Tue Jun 18 20:39:16 2019
From: |uc@r @end|ng |rom |edor@project@org (=?UTF-8?Q?I=C3=B1aki_Ucar?=)
Date: Tue, 18 Jun 2019 20:39:16 +0200
Subject: [Rd] Fast way to call an R function from C++?
In-Reply-To: <CALEXWq2g2XFAZ4tzjWuP65PDKXVx1HFK3DvsWVhtV18T61vKEQ@mail.gmail.com>
References: <CAGiFhPONJoEeWWdtTyHw=Y5or1ad3pXtydLNQyONzU3FPatgPA@mail.gmail.com>
 <CALEXWq2g2XFAZ4tzjWuP65PDKXVx1HFK3DvsWVhtV18T61vKEQ@mail.gmail.com>
Message-ID: <CALEXWq3q3uVXKsiOE=XTT5UxEWbCPF38JNbB8H+RTyioQOEN9w@mail.gmail.com>

For reference, your benchmark using UNWIND_PROTECT:

> system.time(test(testFunc, evn$x))
   user  system elapsed
  0.331   0.000   0.331
> system.time(test(C_test1, testFunc, evn$x))
   user  system elapsed
  2.029   0.000   2.036
> system.time(test(C_test2, expr, evn))
   user  system elapsed
  2.307   0.000   2.313
> system.time(test(C_test3, testFunc, evn$x))
   user  system elapsed
  2.131   0.000   2.138

I?aki

On Tue, 18 Jun 2019 at 20:35, I?aki Ucar <iucar at fedoraproject.org> wrote:
>
> On Tue, 18 Jun 2019 at 19:41, King Jiefei <szwjf08 at gmail.com> wrote:
> >
> > [...]
> >
> > It is clear to see that calling an R function in R is the fast one, it is
> > about 5X faster than ` R_forceAndCall ` and ` Rf_eval`. the latter two
> > functions have a similar performance and using Rcpp is the worst one. Is it
> > expected? Why is calling an R function from C++ much slower than calling
> > the function from R? Is there any faster way to do the function call in C++?
>
> Yes, there is: enable fast evaluation by setting
> -DRCPP_USE_UNWIND_PROTECT, or alternatively, use
>
> // [[Rcpp::plugins(unwindProtect)]]
>
> I?aki



-- 
I?aki ?car


From @zwj|08 @end|ng |rom gm@||@com  Wed Jun 19 07:42:31 2019
From: @zwj|08 @end|ng |rom gm@||@com (King Jiefei)
Date: Wed, 19 Jun 2019 01:42:31 -0400
Subject: [Rd] Fast way to call an R function from C++?
In-Reply-To: <CALEXWq3q3uVXKsiOE=XTT5UxEWbCPF38JNbB8H+RTyioQOEN9w@mail.gmail.com>
References: <CAGiFhPONJoEeWWdtTyHw=Y5or1ad3pXtydLNQyONzU3FPatgPA@mail.gmail.com>
 <CALEXWq2g2XFAZ4tzjWuP65PDKXVx1HFK3DvsWVhtV18T61vKEQ@mail.gmail.com>
 <CALEXWq3q3uVXKsiOE=XTT5UxEWbCPF38JNbB8H+RTyioQOEN9w@mail.gmail.com>
Message-ID: <CAGiFhPOxoTvvG4hffr8deBsQX6RUaNuk0+guZLpkdSoNkRBgeA@mail.gmail.com>

Hello Kevin and I?aki,

Thanks for your quick responses. I sincerely appreciate them! I can see how
complicated it is to interact with R in C. I?aki's suggestion is very
helpful, I saw there is a lot of performance gain by turning the flag on,
but sadly the best performance it can offer still cannot beat R itself. It
is interesting to see that C++ is worse than R in this special case despite
there is a common belief that C++ code is the fast one... Anyway, thanks
again for your suggestions and reference!

Best,
Jiefei


On Tue, Jun 18, 2019 at 2:39 PM I?aki Ucar <iucar at fedoraproject.org> wrote:

> For reference, your benchmark using UNWIND_PROTECT:
>
> > system.time(test(testFunc, evn$x))
>    user  system elapsed
>   0.331   0.000   0.331
> > system.time(test(C_test1, testFunc, evn$x))
>    user  system elapsed
>   2.029   0.000   2.036
> > system.time(test(C_test2, expr, evn))
>    user  system elapsed
>   2.307   0.000   2.313
> > system.time(test(C_test3, testFunc, evn$x))
>    user  system elapsed
>   2.131   0.000   2.138
>
> I?aki
>
> On Tue, 18 Jun 2019 at 20:35, I?aki Ucar <iucar at fedoraproject.org> wrote:
> >
> > On Tue, 18 Jun 2019 at 19:41, King Jiefei <szwjf08 at gmail.com> wrote:
> > >
> > > [...]
> > >
> > > It is clear to see that calling an R function in R is the fast one, it
> is
> > > about 5X faster than ` R_forceAndCall ` and ` Rf_eval`. the latter two
> > > functions have a similar performance and using Rcpp is the worst one.
> Is it
> > > expected? Why is calling an R function from C++ much slower than
> calling
> > > the function from R? Is there any faster way to do the function call
> in C++?
> >
> > Yes, there is: enable fast evaluation by setting
> > -DRCPP_USE_UNWIND_PROTECT, or alternatively, use
> >
> > // [[Rcpp::plugins(unwindProtect)]]
> >
> > I?aki
>
>
>
> --
> I?aki ?car
>

	[[alternative HTML version deleted]]


From k@ro||@@koncev|c|u@ @end|ng |rom gm@||@com  Tue Jun 18 23:37:57 2019
From: k@ro||@@koncev|c|u@ @end|ng |rom gm@||@com (Karolis =?utf-8?Q?Koncevi=C4=8Dius?=)
Date: Wed, 19 Jun 2019 00:37:57 +0300
Subject: [Rd] Small bug in fligner.test - constant values can produce
 significant results (patch attached)
Message-ID: <20190618213754.q3d2lxj5ozpyagwa@PMW.local>

In specific cases fligner.test() can produce a small p-value even when both groups have constant variance.

Here is an illustration:

    fligner.test(c(1,1,2,2), c("a","a","b","b"))
    # p-value = NA

But:

    fligner.test(c(1,1,1,2,2,2), c("a","a","a","b","b","b"))
    # p-value < 2.2e-16

This can potentially get dangerous if people perform lots of parallel tests of this type (i.e. when doing a test for each gene in genomic studies).

Submitted a proposed patch that should solve the issue by producing an error "data is essentially constant"
- which is the same error message found in t-test under similar conditions.

P.S. First time writing to this list. Read all the guides of posting, but sorry in advance if I still missed any rules.

---
Karolis Koncevi?ius

-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: patch.diff
URL: <https://stat.ethz.ch/pipermail/r-devel/attachments/20190619/0642547d/attachment.ksh>

From |uc@r @end|ng |rom |edor@project@org  Wed Jun 19 12:43:20 2019
From: |uc@r @end|ng |rom |edor@project@org (=?UTF-8?Q?I=C3=B1aki_Ucar?=)
Date: Wed, 19 Jun 2019 12:43:20 +0200
Subject: [Rd] Fast way to call an R function from C++?
In-Reply-To: <CAGiFhPOxoTvvG4hffr8deBsQX6RUaNuk0+guZLpkdSoNkRBgeA@mail.gmail.com>
References: <CAGiFhPONJoEeWWdtTyHw=Y5or1ad3pXtydLNQyONzU3FPatgPA@mail.gmail.com>
 <CALEXWq2g2XFAZ4tzjWuP65PDKXVx1HFK3DvsWVhtV18T61vKEQ@mail.gmail.com>
 <CALEXWq3q3uVXKsiOE=XTT5UxEWbCPF38JNbB8H+RTyioQOEN9w@mail.gmail.com>
 <CAGiFhPOxoTvvG4hffr8deBsQX6RUaNuk0+guZLpkdSoNkRBgeA@mail.gmail.com>
Message-ID: <CALEXWq26K35vw7cHCe-pHyV44ZajNvwhjsaZDpQ7r7in6Rgc1g@mail.gmail.com>

On Wed, 19 Jun 2019 at 07:42, King Jiefei <szwjf08 at gmail.com> wrote:
>
> Hello Kevin and I?aki,
>
> Thanks for your quick responses. I sincerely appreciate them! I can see how complicated it is to interact with R in C. I?aki's suggestion is very helpful, I saw there is a lot of performance gain by turning the flag on, but sadly the best performance it can offer still cannot beat R itself. It is interesting to see that C++ is worse than R in this special case despite there is a common belief that C++ code is the fast one... Anyway, thanks again for your suggestions and reference!

That is misleading. C++ code is faster, that's beyond doubt. But you
are not running C++ code here, you are running R code. So what is
faster, running R code or executing something that then runs R code?
Obviously the first thing is the baseline, and from there, it can only
get worse as you add more layers on top of it.

I?aki


From @pencer@gr@ve@ @end|ng |rom prod@y@e@com  Wed Jun 19 17:19:01 2019
From: @pencer@gr@ve@ @end|ng |rom prod@y@e@com (Spencer Graves)
Date: Wed, 19 Jun 2019 08:19:01 -0700
Subject: [Rd] point size in svg
Message-ID: <2044e902-5440-678a-d845-d2d521ca428a@prodsyse.com>

Hello, All:


 ????? I'm unable to control the font size in plots to svg.? Consider 
the following:


svg('cex-svg.svg')
cex. <- 5
plot(1:2, cex.axis=cex.)
text(1:2, 1:2, c('as', 'DF'),
 ????????? cex=cex.)
dev.off()


 ????? When I open this in Gimp 2.10.4, the font size is tiny.? I also 
tried:


svg('cex-svg.svg', width=15, height=15, pointsize=24)
cex. <- 5
plot(1:2, cex.axis=cex.)
text(1:2, 1:2, c('as', 'DF'),
 ????????? cex=cex.)
dev.off()


 ????? What do I do to control the font size in svg?


 ????? Thanks,
 ????? Spencer Graves


sessionInfo()
R version 3.6.0 (2019-04-26)
Platform: x86_64-apple-darwin15.6.0 (64-bit)
Running under: macOS Mojave 10.14.5

Matrix products: default
BLAS: 
/System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libBLAS.dylib
LAPACK: 
/Library/Frameworks/R.framework/Versions/3.6/Resources/lib/libRlapack.dylib

locale:
[1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8

attached base packages:
[1] stats???? graphics? grDevices utils???? datasets
[6] methods?? base

other attached packages:
[1] Ecdat_0.3-2 Ecfun_0.2-1


From peter@|@ng|e|der @end|ng |rom gm@||@com  Wed Jun 19 18:29:55 2019
From: peter@|@ng|e|der @end|ng |rom gm@||@com (Peter Langfelder)
Date: Wed, 19 Jun 2019 09:29:55 -0700
Subject: [Rd] point size in svg
In-Reply-To: <2044e902-5440-678a-d845-d2d521ca428a@prodsyse.com>
References: <2044e902-5440-678a-d845-d2d521ca428a@prodsyse.com>
Message-ID: <CA+hbrhULE70+4dP24-ee6q29ViSuCjbkEq=_yD8QyZcs3XNn7Q@mail.gmail.com>

Unless this is something Apple-specific, the problem seems to be with
Gimp, not with R. On my system (linux), opening your examples with
either firefox or inkscape shows huge letters. At least firefox should
be able to open the svg on a Mac as well. BTW, Gimp on linux does not
open your cex-svg.svg at all, it says the plugin crashed.

Peter

On Wed, Jun 19, 2019 at 8:19 AM Spencer Graves
<spencer.graves at prodsyse.com> wrote:
>
> Hello, All:
>
>
>        I'm unable to control the font size in plots to svg.  Consider
> the following:
>
>
> svg('cex-svg.svg')
> cex. <- 5
> plot(1:2, cex.axis=cex.)
> text(1:2, 1:2, c('as', 'DF'),
>            cex=cex.)
> dev.off()
>
>
>        When I open this in Gimp 2.10.4, the font size is tiny.  I also
> tried:
>
>
> svg('cex-svg.svg', width=15, height=15, pointsize=24)
> cex. <- 5
> plot(1:2, cex.axis=cex.)
> text(1:2, 1:2, c('as', 'DF'),
>            cex=cex.)
> dev.off()
>
>
>        What do I do to control the font size in svg?
>
>
>        Thanks,
>        Spencer Graves
>
>
> sessionInfo()
> R version 3.6.0 (2019-04-26)
> Platform: x86_64-apple-darwin15.6.0 (64-bit)
> Running under: macOS Mojave 10.14.5
>
> Matrix products: default
> BLAS:
> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libBLAS.dylib
> LAPACK:
> /Library/Frameworks/R.framework/Versions/3.6/Resources/lib/libRlapack.dylib
>
> locale:
> [1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8
>
> attached base packages:
> [1] stats     graphics  grDevices utils     datasets
> [6] methods   base
>
> other attached packages:
> [1] Ecdat_0.3-2 Ecfun_0.2-1
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From dw|n@em|u@ @end|ng |rom comc@@t@net  Wed Jun 19 18:32:31 2019
From: dw|n@em|u@ @end|ng |rom comc@@t@net (David Winsemius)
Date: Wed, 19 Jun 2019 09:32:31 -0700
Subject: [Rd] point size in svg
In-Reply-To: <2044e902-5440-678a-d845-d2d521ca428a@prodsyse.com>
References: <2044e902-5440-678a-d845-d2d521ca428a@prodsyse.com>
Message-ID: <63168c7a-07b5-3ee5-281e-1274a8b43f0f@comcast.net>


On 6/19/19 8:19 AM, Spencer Graves wrote:
> Hello, All:
>
>
> ????? I'm unable to control the font size in plots to svg. Consider 
> the following:
>
>
> svg('cex-svg.svg')
> cex. <- 5
> plot(1:2, cex.axis=cex.)
> text(1:2, 1:2, c('as', 'DF'),
> ????????? cex=cex.)
> dev.off()
>
>
> ????? When I open this in Gimp 2.10.4, the font size is tiny.? I also 
> tried:
>
>
> svg('cex-svg.svg', width=15, height=15, pointsize=24)
> cex. <- 5
> plot(1:2, cex.axis=cex.)
> text(1:2, 1:2, c('as', 'DF'),
> ????????? cex=cex.)
> dev.off()
>
>
> ????? What do I do to control the font size in svg?


I'm unable to reproduce. (I get very large fonts in all three viewing 
methods: Rstudio plot panel, ImageViewer and GIMP)

Ubuntu 18.04

R 3.15.2

Gimp 2.10.12


Looking at ?svg makes me think you should be looking at the Cairo Fonts 
section of ?X11.


Best;

David.

>
>
> ????? Thanks,
> ????? Spencer Graves
>
>
> sessionInfo()
> R version 3.6.0 (2019-04-26)
> Platform: x86_64-apple-darwin15.6.0 (64-bit)
> Running under: macOS Mojave 10.14.5
>
> Matrix products: default
> BLAS: 
> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libBLAS.dylib
> LAPACK: 
> /Library/Frameworks/R.framework/Versions/3.6/Resources/lib/libRlapack.dylib
>
> locale:
> [1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8
>
> attached base packages:
> [1] stats???? graphics? grDevices utils???? datasets
> [6] methods?? base
>
> other attached packages:
> [1] Ecdat_0.3-2 Ecfun_0.2-1
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From djb|rke @end|ng |rom berke|ey@edu  Thu Jun 20 02:24:38 2019
From: djb|rke @end|ng |rom berke|ey@edu (David J. Birke)
Date: Wed, 19 Jun 2019 17:24:38 -0700
Subject: [Rd] base::format adds extraneous whitespace for some inputs
Message-ID: <13ea45cb-564b-8bd5-b75f-5c2ef53119dc@berkeley.edu>

Dear R Core Team,

First of all, thank you for your amazing work on developing and 
maintaining this wonderful language.

I just stumbled upon the following behavior in R version 3.6.0:

format(9.91, digits = 2, nsmall = 2)
format(9.99, digits = 2, nsmall = 2)

yield "9.91" and " 9.99" with an extraneous whitespace.

My expected output for the second command is "9.99".

I have not found anything explaining the whitespace in the help files. 
Therefore, I am writing to report this behavior as a possible bug.

Best wishes,
David


From tony@987410 @end|ng |rom gm@||@com  Wed Jun 19 16:38:59 2019
From: tony@987410 @end|ng |rom gm@||@com (Tonya Watson)
Date: Wed, 19 Jun 2019 20:08:59 +0530
Subject: [Rd] ESRI User Conference 2019 Attendees
Message-ID: <CACuHsxsG4rzqkME_7g9uoR1CcK8gE2Sx5=zy=q4RoBTR31BsKA@mail.gmail.com>

Hi,



Would you be interested in acquiring the attendees information of ESRI User
Conference 2019, scheduled to be held on July 8 - 12, 2019 at San Diego
Convention Center, San Diego, California, USA?



Would like to receive the quote for this?



If there's someone else I should be speaking with, I'd really appreciate if
you could point me in the right direction.



Looking forward for your reply.



Cheers,

Tonya Watson | Demand Generation Specialist

Address: 548 Market St, San Francisco, CA- 94112

Reply back with Opt Out in subject line, if you don't wish to receive our
newsletters.

	[[alternative HTML version deleted]]


From @@r@h@go@|ee @end|ng |rom gm@||@com  Thu Jun 20 15:56:44 2019
From: @@r@h@go@|ee @end|ng |rom gm@||@com (Sarah Goslee)
Date: Thu, 20 Jun 2019 09:56:44 -0400
Subject: [Rd] base::format adds extraneous whitespace for some inputs
In-Reply-To: <13ea45cb-564b-8bd5-b75f-5c2ef53119dc@berkeley.edu>
References: <13ea45cb-564b-8bd5-b75f-5c2ef53119dc@berkeley.edu>
Message-ID: <CAM_vjukayUfiSWSdrQiJaJ-jThVbGuy0QzNkMpYrjt+J-XnJAg@mail.gmail.com>

I can reproduce this.

It has to do with whether the value rounds down to 9 or up to 10, and
thus needs another space, I think. I agree that it shouldn't happen,
but at least you can get rid of the space by using trim = TRUE.

# rounds to 9 vs 10

format(9.95, digits = 2)
format(9.96, digits = 2)

format(9.95, digits = 2, nsmall = 2)
format(9.96, digits = 2, nsmall = 2)

format(9.95, digits = 2, nsmall = 2, trim=TRUE)
format(9.96, digits = 2, nsmall = 2, trim=TRUE)

# rounds to 99 vs 100

format(99.94, digits = 3)
format(99.95, digits = 3)

format(99.94, digits = 3, nsmall = 2)
format(99.95, digits = 3, nsmall = 2)

format(99.94, digits = 3, nsmall = 2, trim=TRUE)
format(99.95, digits = 3, nsmall = 2, trim=TRUE)


> sessionInfo()
R version 3.5.3 (2019-03-11)
Platform: x86_64-redhat-linux-gnu (64-bit)
Running under: Fedora 28 (Workstation Edition)

Matrix products: default
BLAS/LAPACK: /usr/lib64/R/lib/libRblas.so

locale:
 [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C
 [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8
 [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8
 [7] LC_PAPER=en_US.UTF-8       LC_NAME=C
 [9] LC_ADDRESS=C               LC_TELEPHONE=C
[11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C

attached base packages:
[1] stats     graphics  grDevices utils     datasets  methods   base

other attached packages:
[1] colorout_1.2-0

loaded via a namespace (and not attached):
[1] compiler_3.5.3 tools_3.5.3

> # rounds to 9 vs 10
>
> format(9.95, digits = 2)
[1] "9.9"
> format(9.96, digits = 2)
[1] "10"
>
> format(9.95, digits = 2, nsmall = 2)
[1] "9.95"
> format(9.96, digits = 2, nsmall = 2)
[1] " 9.96"
>
> format(9.95, digits = 2, nsmall = 2, trim=TRUE)
[1] "9.95"
> format(9.96, digits = 2, nsmall = 2, trim=TRUE)
[1] "9.96"
>
> # rounds to 99 vs 100
>
> format(99.94, digits = 3)
[1] "99.9"
> format(99.95, digits = 3)
[1] "100"
>
> format(99.94, digits = 3, nsmall = 2)
[1] "99.94"
> format(99.95, digits = 3, nsmall = 2)
[1] " 99.95"
>
> format(99.94, digits = 3, nsmall = 2, trim=TRUE)
[1] "99.94"
> format(99.95, digits = 3, nsmall = 2, trim=TRUE)
[1] "99.95"

On Thu, Jun 20, 2019 at 3:19 AM David J. Birke <djbirke at berkeley.edu> wrote:
>
> Dear R Core Team,
>
> First of all, thank you for your amazing work on developing and
> maintaining this wonderful language.
>
> I just stumbled upon the following behavior in R version 3.6.0:
>
> format(9.91, digits = 2, nsmall = 2)
> format(9.99, digits = 2, nsmall = 2)
>
> yield "9.91" and " 9.99" with an extraneous whitespace.
>
> My expected output for the second command is "9.99".
>
> I have not found anything explaining the whitespace in the help files.
> Therefore, I am writing to report this behavior as a possible bug.
>
> Best wishes,
> David
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel



-- 
Sarah Goslee (she/her)
http://www.numberwright.com


From m@ech|er @end|ng |rom @t@t@m@th@ethz@ch  Thu Jun 20 17:27:23 2019
From: m@ech|er @end|ng |rom @t@t@m@th@ethz@ch (Martin Maechler)
Date: Thu, 20 Jun 2019 17:27:23 +0200
Subject: [Rd] base::format adds extraneous whitespace for some inputs
In-Reply-To: <CAM_vjukayUfiSWSdrQiJaJ-jThVbGuy0QzNkMpYrjt+J-XnJAg@mail.gmail.com>
References: <13ea45cb-564b-8bd5-b75f-5c2ef53119dc@berkeley.edu>
 <CAM_vjukayUfiSWSdrQiJaJ-jThVbGuy0QzNkMpYrjt+J-XnJAg@mail.gmail.com>
Message-ID: <23819.42459.629240.317146@stat.math.ethz.ch>

>>>>> Sarah Goslee 
>>>>>     on Thu, 20 Jun 2019 09:56:44 -0400 writes:

    > I can reproduce this.
    > It has to do with whether the value rounds down to 9 or up to 10, and
    > thus needs another space, I think. I agree that it shouldn't happen,
    > but at least you can get rid of the space by using trim = TRUE.

    > # rounds to 9 vs 10

    > format(9.95, digits = 2)
    > format(9.96, digits = 2)

    > format(9.95, digits = 2, nsmall = 2)
    > format(9.96, digits = 2, nsmall = 2)

    > format(9.95, digits = 2, nsmall = 2, trim=TRUE)
    > format(9.96, digits = 2, nsmall = 2, trim=TRUE)

    > # rounds to 99 vs 100

    > format(99.94, digits = 3)
    > format(99.95, digits = 3)

    > format(99.94, digits = 3, nsmall = 2)
    > format(99.95, digits = 3, nsmall = 2)

    > format(99.94, digits = 3, nsmall = 2, trim=TRUE)
    > format(99.95, digits = 3, nsmall = 2, trim=TRUE)

Yes, indeed;
I had wanted to reply earlier, but did not get to.

I agree that this is bogous;
I've never encountered it as I've (almost?) never used 'nsmall' consciously.

Interestingly, this behavior has probably existed unchanged for close to R's
full history.  The 'nsmall = *' optional argument (of
format.default() to be precise) was introduced in R 1.3.0   in 2001.

And in my still working version of R 1.3.1, behavior seems
similar (not identical) I think.

You can access the underlying computations using format.info()
from the R level. It calls into the C code which is really used here from the
.Internal(format(...))  C code :

e.g.

> format.info(9.91, 2, 2)
[1] 4 2 0

 ==> result will use 4 characters

> format.info(9.99, 2, 2)
[1] 5 2 0

 ==> result will use 5 characters



-----------------

One more thing:  format() has really been designed (in S, and
inherited for R) to format *several* numbers, often matrices (or
data frames if you must) to be printed and look nicely.

For this (in cases like these, with numbers),
format() must find a common format for all numbers, and that is
the reason the underlying algorithm is quite sophisticated
because it needs to cover many border line cases, notably
deciding on when exponential format is needed, etc etc.


For format()ting simple numbers (i.e. numeric vectors of length *one*),
using  formatC()  (or even sprintf()  is typically faster and easier
to use--for sprintf() you need to know C-standard formatting a bit.


    >> sessionInfo()
    > R version 3.5.3 (2019-03-11)
    > Platform: x86_64-redhat-linux-gnu (64-bit)
    > Running under: Fedora 28 (Workstation Edition)

    ..........

    >> # rounds to 9 vs 10
    >> 
    >> format(9.95, digits = 2)
    > [1] "9.9"
    >> format(9.96, digits = 2)
    > [1] "10"
    >> 
    >> format(9.95, digits = 2, nsmall = 2)
    > [1] "9.95"
    >> format(9.96, digits = 2, nsmall = 2)
    > [1] " 9.96"
    >> 
    >> format(9.95, digits = 2, nsmall = 2, trim=TRUE)
    > [1] "9.95"
    >> format(9.96, digits = 2, nsmall = 2, trim=TRUE)
    > [1] "9.96"
    >> 
    >> # rounds to 99 vs 100
    >> 
    >> format(99.94, digits = 3)
    > [1] "99.9"
    >> format(99.95, digits = 3)
    > [1] "100"
    >> 
    >> format(99.94, digits = 3, nsmall = 2)
    > [1] "99.94"
    >> format(99.95, digits = 3, nsmall = 2)
    > [1] " 99.95"
    >> 
    >> format(99.94, digits = 3, nsmall = 2, trim=TRUE)
    > [1] "99.94"
    >> format(99.95, digits = 3, nsmall = 2, trim=TRUE)
    > [1] "99.95"

    > On Thu, Jun 20, 2019 at 3:19 AM David J. Birke <djbirke at berkeley.edu> wrote:
    >> 
    >> Dear R Core Team,
    >> 
    >> First of all, thank you for your amazing work on developing and
    >> maintaining this wonderful language.
    >> 
    >> I just stumbled upon the following behavior in R version 3.6.0:
    >> 
    >> format(9.91, digits = 2, nsmall = 2)
    >> format(9.99, digits = 2, nsmall = 2)
    >> 
    >> yield "9.91" and " 9.99" with an extraneous whitespace.
    >> 
    >> My expected output for the second command is "9.99".
    >> 
    >> I have not found anything explaining the whitespace in the help files.
    >> Therefore, I am writing to report this behavior as a possible bug.
    >> 
    >> Best wishes,
    >> David
    >> 
    >> ______________________________________________
    >> R-devel at r-project.org mailing list
    >> https://stat.ethz.ch/mailman/listinfo/r-devel



    > -- 
    > Sarah Goslee (she/her)
    > http://www.numberwright.com

    > ______________________________________________
    > R-devel at r-project.org mailing list
    > https://stat.ethz.ch/mailman/listinfo/r-devel


From M@rce|@R@mo@ @end|ng |rom ro@we||p@rk@org  Fri Jun 21 03:01:05 2019
From: M@rce|@R@mo@ @end|ng |rom ro@we||p@rk@org (Marcel Ramos)
Date: Fri, 21 Jun 2019 01:01:05 +0000
Subject: [Rd] Suggested Patch: Library returns matching installed packages
 when typo present
Message-ID: <3590fa89-24f1-9ef4-95b2-8c6e0d5e9b7f@roswellpark.org>

Dear R-core devs,

I hope this email finds you well.

Please see the proposed patch to R-devel below:

Scenario:

When loading a package using `library`, a package may not be found if the cases are not matching:

```
> library(ORG.Hs.eg.db)
 Error in library(ORG.Hs.eg.db) :
  there is no package called 'ORG.Hs.eg.db'
```


Suggested Patch:

Returns a message matching what `install.packages` returns in such situations:

```
> library("ORG.Hs.eg.db")
 Error in library("ORG.Hs.eg.db") :
   there is no package called 'ORG.Hs.eg.db'
 In addition: Warning message:
 Perhaps you meant 'org.Hs.eg.db' ?
```

This patch will be helpful with 'fat-finger' typos. It will match a package
called with `library` against installed packages.


svn diff:

Index: src/library/base/R/library.R
===================================================================
--- src/library/base/R/library.R    (revision 76727)
+++ src/library/base/R/library.R    (working copy)
@@ -300,8 +300,13 @@
         pkgpath <- find.package(package, lib.loc, quiet = TRUE,
                                     verbose = verbose)
             if(length(pkgpath) == 0L) {
-                if(length(lib.loc) && !logical.return)
+                if(length(lib.loc) && !logical.return) {
+                    allpkgs <- .packages(TRUE, lib.loc)
+                    if (!is.na(w <- match(tolower(package), tolower(allpkgs))))
+                        warning(sprintf("Perhaps you meant %s ?",
+                            sQuote(allpkgs[w])), call. = FALSE, domain = NA)
                     stop(packageNotFoundError(package, lib.loc, sys.call()))
+                }
                 txt <- if(length(lib.loc))
                     gettextf("there is no package called %s", sQuote(package))
                 else


Thank you!

Best regards,

Marcel



--
Marcel Ramos
Bioconductor Core Team
Roswell Park Comprehensive Care Center
Dept. of Biostatistics & Bioinformatics
Elm & Carlton Streets
Buffalo, New York 14263


This email message may contain legally privileged and/or confidential information.  If you are not the intended recipient(s), or the employee or agent responsible for the delivery of this message to the intended recipient(s), you are hereby notified that any disclosure, copying, distribution, or use of this email message is prohibited.  If you have received this message in error, please notify the sender immediately by e-mail and delete this email message from your computer. Thank you.
	[[alternative HTML version deleted]]


From @nto|ne@|@br| @end|ng |rom gm@||@com  Fri Jun 21 15:08:13 2019
From: @nto|ne@|@br| @end|ng |rom gm@||@com (Ant F)
Date: Fri, 21 Jun 2019 15:08:13 +0200
Subject: [Rd] head with non integer n returns confusing output
Message-ID: <CAEKh8ujebf5oKxWbSHLgyU1cNtbh7=U0dp6k_nne=-gUenUdgQ@mail.gmail.com>

Dear all,

`head()` returns a problematic output when a character is fed to its `n`
parameter.

doubles and logicals are converted to integer as if `as.integer` was used,
which I think is intuitive enough :

```
head(1:10, 4.1)  # [1] 1 2 3 4
head(1:10, 4.9)  # [1] 1 2 3 4
head(1:10, TRUE)  # 1
head(1:10, FALSE) # integer(0)
```

But characters have a stranger behavior :

```
head(1:10, "0") # integer(0)
head(1:10, "0.1") # integer(0)
head(1:10, "1") # [1] 1
head(1:10, "1.2") # [1] 1
head(1:10, "2") # [1] [1]  1  2  3  4  5  6  7  8  9 10
head(1:10, "-1") # Error in length(x) + n : non-numeric argument to binary
operator
head(1:10, "-0") # Error in length(x) + n : non-numeric argument to binary
operator
head(1:10, "foo") # [1]  1  2  3  4  5  6  7  8  9 10
```

When forgetting to convert user input to numeric this can lead to an
unexpected and inconsistent result.

I would suggest either using `as.integer` consistently on the input, or
having a consistent error for all character input.

`n = NA` also a returns a somewhat misleading error as it demands a logical
input while the top level function requires an integer input.

```
head(1:10, NA)  # same output for head(1:10, NA_integer_)
# Error in if (n < 0L) max(length(x) + n, 0L) else min(n, length(x)) :
#   missing value where TRUE/FALSE needed
```

Kind regards,

Antoine

	[[alternative HTML version deleted]]


From j|nghu@zh@o @end|ng |rom hotm@||@com  Fri Jun 21 16:24:36 2019
From: j|nghu@zh@o @end|ng |rom hotm@||@com (jing hua zhao)
Date: Fri, 21 Jun 2019 14:24:36 +0000
Subject: [Rd] Calculation of e^{z^2/2} for a normal deviate z
In-Reply-To: <DB6P189MB0581A9E34BD18A3E06B8E725A5180@DB6P189MB0581.EURP189.PROD.OUTLOOK.COM>
References: <32da856c-a60a-974f-65ab-d7123e12e813@daqana.com>
 <23307.48529.773039.904392@stat.math.ethz.ch>
 <23307.49323.908367.788461@stat.math.ethz.ch>
 <CABtg=KkuVHoX1tZ=+Lr7mDFrXvn5zdf3+Wmqhnv58GXZJS2KwQ@mail.gmail.com>,
 <f3388993-5e20-d7e5-346a-785d33fab27b@daqana.com>,
 <DB6P189MB0581F101B909FA1E2ACC509DA51F0@DB6P189MB0581.EURP189.PROD.OUTLOOK.COM>,
 <DB6P189MB0581A9E34BD18A3E06B8E725A5180@DB6P189MB0581.EURP189.PROD.OUTLOOK.COM>
Message-ID: <DB6P189MB05813B949D25C28767CD8E5FA5E70@DB6P189MB0581.EURP189.PROD.OUTLOOK.COM>

Dear R-developers,

I am keen to calculate exp(z*z/2) with z=qnorm(p/2) and p is very small. I wonder if anyone has experience with this?

Thanks very much in advance,


Jing Hua

	[[alternative HTML version deleted]]


From |uke-t|erney @end|ng |rom u|ow@@edu  Fri Jun 21 16:56:21 2019
From: |uke-t|erney @end|ng |rom u|ow@@edu (Tierney, Luke)
Date: Fri, 21 Jun 2019 14:56:21 +0000
Subject: [Rd] 
 [External] Suggested Patch: Library returns matching installed
 packages when typo present
In-Reply-To: <3590fa89-24f1-9ef4-95b2-8c6e0d5e9b7f@roswellpark.org>
References: <3590fa89-24f1-9ef4-95b2-8c6e0d5e9b7f@roswellpark.org>
Message-ID: <alpine.DEB.2.21.1906210940210.9391@luke-Latitude-7480>

Thanks for the suggestion. However I don't think it is the right way
to go. I also don't care for what install.packages() does. Signaling a
warning and then an error means someone has to catch both the error
and the warning, or suppress the warning, in order to handle the error
programmatically.

Now that library() signals a structured error there are other options.
One possibility, at least as an interim, is to define a
conditionMessage method, e.g. as

conditionMessage.packageNotFoundError <- function(c) {
     lib.loc <- c$lib.loc
     msg <- c$message
     package <- c$package
     if(length(lib.loc)) {
         allpkgs <- .packages(TRUE, lib.loc)
         if (!is.na(w <- match(tolower(package), tolower(allpkgs)))) {
             msg2 <- sprintf("Perhaps you meant %s ?", sQuote(allpkgs[w]))
             return(paste(msg, msg2, sep = "\n"))
         }
     }
     msg
}

This is something you can do yourself, though it is generally not a
good idea to define a method when you don't own either the generic or
the class.

Something that would be useful and is being considered is having a
mechanism for registering default condition handlers. This would allow
the condition to be re-signaled with a custom class and then having
a custom conditionMessage method is less likely to cause conflicts.

Also worth looking into is establishing a restart around the error
signal.  This would allow an IDE, for example, to provide a dialog for
choosing the alternate package and retrying without the need to call
library() again. This is currently done in loadNamespace() but not yet
in library(). Can have downsides as well -- if the library() call is
in a notebook, for example, then you do want to fix the call ...  It
is arguably more useful in loadNamespace since that can get called
implicitly inside a longer computation that you don't necessarily want
to start over.

Best,

luke

On Fri, 21 Jun 2019, Marcel Ramos wrote:

> Dear R-core devs,
>
> I hope this email finds you well.
>
> Please see the proposed patch to R-devel below:
>
> Scenario:
>
> When loading a package using `library`, a package may not be found if the cases are not matching:
>
> ```
>> library(ORG.Hs.eg.db)
> Error in library(ORG.Hs.eg.db) :
>  there is no package called 'ORG.Hs.eg.db'
> ```
>
>
> Suggested Patch:
>
> Returns a message matching what `install.packages` returns in such situations:
>
> ```
>> library("ORG.Hs.eg.db")
> Error in library("ORG.Hs.eg.db") :
>   there is no package called 'ORG.Hs.eg.db'
> In addition: Warning message:
> Perhaps you meant 'org.Hs.eg.db' ?
> ```
>
> This patch will be helpful with 'fat-finger' typos. It will match a package
> called with `library` against installed packages.
>
>
> svn diff:
>
> Index: src/library/base/R/library.R
> ===================================================================
> --- src/library/base/R/library.R    (revision 76727)
> +++ src/library/base/R/library.R    (working copy)
> @@ -300,8 +300,13 @@
>         pkgpath <- find.package(package, lib.loc, quiet = TRUE,
>                                     verbose = verbose)
>             if(length(pkgpath) == 0L) {
> -                if(length(lib.loc) && !logical.return)
> +                if(length(lib.loc) && !logical.return) {
> +                    allpkgs <- .packages(TRUE, lib.loc)
> +                    if (!is.na(w <- match(tolower(package), tolower(allpkgs))))
> +                        warning(sprintf("Perhaps you meant %s ?",
> +                            sQuote(allpkgs[w])), call. = FALSE, domain = NA)
>                     stop(packageNotFoundError(package, lib.loc, sys.call()))
> +                }
>                 txt <- if(length(lib.loc))
>                     gettextf("there is no package called %s", sQuote(package))
>                 else
>
>
> Thank you!
>
> Best regards,
>
> Marcel
>
>
>
> --
> Marcel Ramos
> Bioconductor Core Team
> Roswell Park Comprehensive Care Center
> Dept. of Biostatistics & Bioinformatics
> Elm & Carlton Streets
> Buffalo, New York 14263
>
>
> This email message may contain legally privileged and/or confidential information.  If you are not the intended recipient(s), or the employee or agent responsible for the delivery of this message to the intended recipient(s), you are hereby notified that any disclosure, copying, distribution, or use of this email message is prohibited.  If you have received this message in error, please notify the sender immediately by e-mail and delete this email message from your computer. Thank you.
> 	[[alternative HTML version deleted]]
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>

-- 
Luke Tierney
Ralph E. Wareham Professor of Mathematical Sciences
University of Iowa                  Phone:             319-335-3386
Department of Statistics and        Fax:               319-335-3017
    Actuarial Science
241 Schaeffer Hall                  email:   luke-tierney at uiowa.edu
Iowa City, IA 52242                 WWW:  http://www.stat.uiowa.edu


From k@ro||@@koncev|c|u@ @end|ng |rom gm@||@com  Fri Jun 21 17:00:36 2019
From: k@ro||@@koncev|c|u@ @end|ng |rom gm@||@com (Karolis K)
Date: Fri, 21 Jun 2019 18:00:36 +0300
Subject: [Rd] [Suggested patch] to fligner.test - constant values can
 produce significant results
Message-ID: <CACT_sGb+Gk3a9U=vdfHKrrbt11bQceLsyf_r8GtzvEzRwc3R6A@mail.gmail.com>

In specific cases fligner.test() can produce a small p-value even when both
groups have constant variance.

Here is an illustration:

    fligner.test(c(1,1,2,2), c("a","a","b","b"))
    # p-value = NA

But:

    fligner.test(c(1,1,1,2,2,2), c("a","a","a","b","b","b"))
    # p-value < 2.2e-16

This can potentially get dangerous if people perform lots of parallel tests
of this type (i.e. when doing a test for each gene in genomic studies).

Submitted a proposed patch that should solve the issue by producing an
error "data is essentially constant" - which is the same error message
found in t-test under similar conditions.

P.S. First time writing to this list. Read all the guides of posting, but
sorry in advance if I still missed any rules.

svn.diff:

Index: src/library/stats/R/fligner.test.R
===================================================================
--- src/library/stats/R/fligner.test.R  (revision 76710)
+++ src/library/stats/R/fligner.test.R  (working copy)
@@ -55,6 +55,8 @@

     ## Careful. This assumes that g is a factor:
     x <- x - tapply(x,g,median)[g]
+    if (all(x == 0))
+      stop("data are essentially constant")

     a <- qnorm((1 + rank(abs(x)) / (n + 1)) / 2)
     STATISTIC <- sum(tapply(a, g, "sum")^2 / tapply(a, g, "length"))


---
Karolis Koncevi?ius

	[[alternative HTML version deleted]]


From j|nghu@zh@o @end|ng |rom hotm@||@com  Fri Jun 21 17:11:43 2019
From: j|nghu@zh@o @end|ng |rom hotm@||@com (jing hua zhao)
Date: Fri, 21 Jun 2019 15:11:43 +0000
Subject: [Rd] Calculation of e^{z^2/2} for a normal deviate z
In-Reply-To: <8b926873-2fdf-4553-b62c-a928fbff70e9@sapo.pt>
References: <32da856c-a60a-974f-65ab-d7123e12e813@daqana.com>
 <23307.48529.773039.904392@stat.math.ethz.ch>
 <23307.49323.908367.788461@stat.math.ethz.ch>
 <CABtg=KkuVHoX1tZ=+Lr7mDFrXvn5zdf3+Wmqhnv58GXZJS2KwQ@mail.gmail.com>
 <f3388993-5e20-d7e5-346a-785d33fab27b@daqana.com>
 <DB6P189MB0581F101B909FA1E2ACC509DA51F0@DB6P189MB0581.EURP189.PROD.OUTLOOK.COM>
 <DB6P189MB0581A9E34BD18A3E06B8E725A5180@DB6P189MB0581.EURP189.PROD.OUTLOOK.COM>
 <DB6P189MB05813B949D25C28767CD8E5FA5E70@DB6P189MB0581.EURP189.PROD.OUTLOOK.COM>,
 <8b926873-2fdf-4553-b62c-a928fbff70e9@sapo.pt>
Message-ID: <DB6P189MB05810066BDE0B49EFBCFC73DA5E70@DB6P189MB0581.EURP189.PROD.OUTLOOK.COM>

Dear Rui,

Thanks for your quick reply -- this allows me to see the bottom of this. I was hoping we could have a handle of those p in genmoics such as 1e-300 or smaller.

Best wishes,


Jing Hua

________________________________
From: Rui Barradas <ruipbarradas at sapo.pt>
Sent: 21 June 2019 15:03
To: jing hua zhao; r-devel at r-project.org
Subject: Re: [Rd] Calculation of e^{z^2/2} for a normal deviate z

Hello,

Well, try it:

p <- .Machine$double.eps^seq(0.5, 1, by = 0.05)
z <- qnorm(p/2)

pnorm(z)
# [1] 7.450581e-09 1.228888e-09 2.026908e-10 3.343152e-11 5.514145e-12
# [6] 9.094947e-13 1.500107e-13 2.474254e-14 4.080996e-15 6.731134e-16
#[11] 1.110223e-16
p/2
# [1] 7.450581e-09 1.228888e-09 2.026908e-10 3.343152e-11 5.514145e-12
# [6] 9.094947e-13 1.500107e-13 2.474254e-14 4.080996e-15 6.731134e-16
#[11] 1.110223e-16

exp(z*z/2)
# [1] 9.184907e+06 5.301421e+07 3.073154e+08 1.787931e+09 1.043417e+10
# [6] 6.105491e+10 3.580873e+11 2.104460e+12 1.239008e+13 7.306423e+13
#[11] 4.314798e+14


p is the smallest possible such that 1 + p != 1 and I couldn't find
anything to worry about.


R version 3.6.0 (2019-04-26)
Platform: x86_64-pc-linux-gnu (64-bit)
Running under: Ubuntu 19.04

Matrix products: default
BLAS:   /usr/lib/x86_64-linux-gnu/blas/libblas.so.3.8.0
LAPACK: /usr/lib/x86_64-linux-gnu/lapack/liblapack.so.3.8.0

locale:
  [1] LC_CTYPE=pt_PT.UTF-8       LC_NUMERIC=C
  [3] LC_TIME=pt_PT.UTF-8        LC_COLLATE=pt_PT.UTF-8
  [5] LC_MONETARY=pt_PT.UTF-8    LC_MESSAGES=pt_PT.UTF-8
  [7] LC_PAPER=pt_PT.UTF-8       LC_NAME=C
  [9] LC_ADDRESS=C               LC_TELEPHONE=C
[11] LC_MEASUREMENT=pt_PT.UTF-8 LC_IDENTIFICATION=C

attached base packages:
[1] stats     graphics  grDevices utils     datasets  methods
[7] base

other attached packages:

[many packages loaded]


Hope this helps,

Rui Barradas

?s 15:24 de 21/06/19, jing hua zhao escreveu:
> Dear R-developers,
>
> I am keen to calculate exp(z*z/2) with z=qnorm(p/2) and p is very small. I wonder if anyone has experience with this?
>
> Thanks very much in advance,
>
>
> Jing Hua
>
>        [[alternative HTML version deleted]]
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>

	[[alternative HTML version deleted]]


From M@rce|@R@mo@ @end|ng |rom ro@we||p@rk@org  Fri Jun 21 17:54:59 2019
From: M@rce|@R@mo@ @end|ng |rom ro@we||p@rk@org (Marcel Ramos)
Date: Fri, 21 Jun 2019 15:54:59 +0000
Subject: [Rd] 
 Suggested Patch: Library returns matching installed packages
 when typo present
In-Reply-To: <alpine.DEB.2.21.1906210940210.9391@luke-Latitude-7480>
References: <3590fa89-24f1-9ef4-95b2-8c6e0d5e9b7f@roswellpark.org>
 <alpine.DEB.2.21.1906210940210.9391@luke-Latitude-7480>
Message-ID: <88447493-f407-5669-28a8-9782d19c6a24@roswellpark.org>

Hi Luke,

Thank you for your response.

On 6/21/19 10:56 AM, Tierney, Luke wrote:

Thanks for the suggestion. However I don't think it is the right way
to go. I also don't care for what install.packages() does. Signaling a
warning and then an error means someone has to catch both the error
and the warning, or suppress the warning, in order to handle the error
programmatically.

I do care for what install.packages() does because it's preferable
to have consistency in the user interface.

I see that the proposed patch does return both an error and a warning
but as far as I understand it, library()'s main/intended use is interactive and
there are other functions available for programmatic use cases.



Now that library() signals a structured error there are other options.
One possibility, at least as an interim, is to define a
conditionMessage method, e.g. as

conditionMessage.packageNotFoundError <- function(c) {
     lib.loc <- c$lib.loc
     msg <- c$message
     package <- c$package
     if(length(lib.loc)) {
         allpkgs <- .packages(TRUE, lib.loc)
         if (!is.na(w <- match(tolower(package), tolower(allpkgs)))) {
             msg2 <- sprintf("Perhaps you meant %s ?", sQuote(allpkgs[w]))
             return(paste(msg, msg2, sep = "\n"))
         }
     }
     msg
}

This is something you can do yourself, though it is generally not a
good idea to define a method when you don't own either the generic or
the class.

Something that would be useful and is being considered is having a
mechanism for registering default condition handlers. This would allow
the condition to be re-signaled with a custom class and then having
a custom conditionMessage method is less likely to cause conflicts.

I'd argue that this is quite useful especially for new users and that creating
condition handlers may involve more than what is needed for interactive use.


Best,

Marcel



Also worth looking into is establishing a restart around the error
signal.  This would allow an IDE, for example, to provide a dialog for
choosing the alternate package and retrying without the need to call
library() again. This is currently done in loadNamespace() but not yet
in library(). Can have downsides as well -- if the library() call is
in a notebook, for example, then you do want to fix the call ...  It
is arguably more useful in loadNamespace since that can get called
implicitly inside a longer computation that you don't necessarily want
to start over.

Best,

luke

On Fri, 21 Jun 2019, Marcel Ramos wrote:



Dear R-core devs,

I hope this email finds you well.

Please see the proposed patch to R-devel below:

Scenario:

When loading a package using `library`, a package may not be found if the cases are not matching:

```


library(ORG.Hs.eg.db)


Error in library(ORG.Hs.eg.db) :
 there is no package called 'ORG.Hs.eg.db'
```


Suggested Patch:

Returns a message matching what `install.packages` returns in such situations:

```


library("ORG.Hs.eg.db")


Error in library("ORG.Hs.eg.db") :
  there is no package called 'ORG.Hs.eg.db'
In addition: Warning message:
Perhaps you meant 'org.Hs.eg.db' ?
```

This patch will be helpful with 'fat-finger' typos. It will match a package
called with `library` against installed packages.


svn diff:

Index: src/library/base/R/library.R
===================================================================
--- src/library/base/R/library.R    (revision 76727)
+++ src/library/base/R/library.R    (working copy)
@@ -300,8 +300,13 @@
        pkgpath <- find.package(package, lib.loc, quiet = TRUE,
                                    verbose = verbose)
            if(length(pkgpath) == 0L) {
-                if(length(lib.loc) && !logical.return)
+                if(length(lib.loc) && !logical.return) {
+                    allpkgs <- .packages(TRUE, lib.loc)
+                    if (!is.na(w <- match(tolower(package), tolower(allpkgs))))
+                        warning(sprintf("Perhaps you meant %s ?",
+                            sQuote(allpkgs[w])), call. = FALSE, domain = NA)
                    stop(packageNotFoundError(package, lib.loc, sys.call()))
+                }
                txt <- if(length(lib.loc))
                    gettextf("there is no package called %s", sQuote(package))
                else


Thank you!

Best regards,

Marcel



--
Marcel Ramos
Bioconductor Core Team
Roswell Park Comprehensive Care Center
Dept. of Biostatistics & Bioinformatics
Elm & Carlton Streets
Buffalo, New York 14263


This email message may contain legally privileged and/or confidential information.  If you are not the intended recipient(s), or the employee or agent responsible for the delivery of this message to the intended recipient(s), you are hereby notified that any disclosure, copying, distribution, or use of this email message is prohibited.  If you have received this message in error, please notify the sender immediately by e-mail and delete this email message from your computer. Thank you.
        [[alternative HTML version deleted]]

______________________________________________
R-devel at r-project.org<mailto:R-devel at r-project.org> mailing list
https://stat.ethz.ch/mailman/listinfo/r-devel







This email message may contain legally privileged and/or confidential information.  If you are not the intended recipient(s), or the employee or agent responsible for the delivery of this message to the intended recipient(s), you are hereby notified that any disclosure, copying, distribution, or use of this email message is prohibited.  If you have received this message in error, please notify the sender immediately by e-mail and delete this email message from your computer. Thank you.
	[[alternative HTML version deleted]]


From dut@ngc @end|ng |rom gm@||@com  Fri Jun 21 18:21:43 2019
From: dut@ngc @end|ng |rom gm@||@com (Christophe DUTANG)
Date: Fri, 21 Jun 2019 18:21:43 +0200
Subject: [Rd] Calculation of e^{z^2/2} for a normal deviate z
In-Reply-To: <DB6P189MB05810066BDE0B49EFBCFC73DA5E70@DB6P189MB0581.EURP189.PROD.OUTLOOK.COM>
References: <32da856c-a60a-974f-65ab-d7123e12e813@daqana.com>
 <23307.48529.773039.904392@stat.math.ethz.ch>
 <23307.49323.908367.788461@stat.math.ethz.ch>
 <CABtg=KkuVHoX1tZ=+Lr7mDFrXvn5zdf3+Wmqhnv58GXZJS2KwQ@mail.gmail.com>
 <f3388993-5e20-d7e5-346a-785d33fab27b@daqana.com>
 <DB6P189MB0581F101B909FA1E2ACC509DA51F0@DB6P189MB0581.EURP189.PROD.OUTLOOK.COM>
 <DB6P189MB0581A9E34BD18A3E06B8E725A5180@DB6P189MB0581.EURP189.PROD.OUTLOOK.COM>
 <DB6P189MB05813B949D25C28767CD8E5FA5E70@DB6P189MB0581.EURP189.PROD.OUTLOOK.COM>
 <8b926873-2fdf-4553-b62c-a928fbff70e9@sapo.pt>
 <DB6P189MB05810066BDE0B49EFBCFC73DA5E70@DB6P189MB0581.EURP189.PROD.OUTLOOK.COM>
Message-ID: <4EBF31BA-1A0E-429D-B59E-1B09273F9879@gmail.com>

You should take a look at https://CRAN.R-project.org/package=Rmpfr

Regards, Christophe 

------------------------------------------------------------
Christophe Dutang
CEREMADE, Univ. Paris Dauphine, PSL Univ., France
Web : http://dutangc.free.fr
------------------------------------------------------------

> Le 21 juin 2019 ? 17:11, jing hua zhao <jinghuazhao at hotmail.com> a ?crit :
> 
> Dear Rui,
> 
> Thanks for your quick reply -- this allows me to see the bottom of this. I was hoping we could have a handle of those p in genmoics such as 1e-300 or smaller.
> 
> Best wishes,
> 
> 
> Jing Hua
> 
> ________________________________
> From: Rui Barradas <ruipbarradas at sapo.pt>
> Sent: 21 June 2019 15:03
> To: jing hua zhao; r-devel at r-project.org
> Subject: Re: [Rd] Calculation of e^{z^2/2} for a normal deviate z
> 
> Hello,
> 
> Well, try it:
> 
> p <- .Machine$double.eps^seq(0.5, 1, by = 0.05)
> z <- qnorm(p/2)
> 
> pnorm(z)
> # [1] 7.450581e-09 1.228888e-09 2.026908e-10 3.343152e-11 5.514145e-12
> # [6] 9.094947e-13 1.500107e-13 2.474254e-14 4.080996e-15 6.731134e-16
> #[11] 1.110223e-16
> p/2
> # [1] 7.450581e-09 1.228888e-09 2.026908e-10 3.343152e-11 5.514145e-12
> # [6] 9.094947e-13 1.500107e-13 2.474254e-14 4.080996e-15 6.731134e-16
> #[11] 1.110223e-16
> 
> exp(z*z/2)
> # [1] 9.184907e+06 5.301421e+07 3.073154e+08 1.787931e+09 1.043417e+10
> # [6] 6.105491e+10 3.580873e+11 2.104460e+12 1.239008e+13 7.306423e+13
> #[11] 4.314798e+14
> 
> 
> p is the smallest possible such that 1 + p != 1 and I couldn't find
> anything to worry about.
> 
> 
> R version 3.6.0 (2019-04-26)
> Platform: x86_64-pc-linux-gnu (64-bit)
> Running under: Ubuntu 19.04
> 
> Matrix products: default
> BLAS:   /usr/lib/x86_64-linux-gnu/blas/libblas.so.3.8.0
> LAPACK: /usr/lib/x86_64-linux-gnu/lapack/liblapack.so.3.8.0
> 
> locale:
>  [1] LC_CTYPE=pt_PT.UTF-8       LC_NUMERIC=C
>  [3] LC_TIME=pt_PT.UTF-8        LC_COLLATE=pt_PT.UTF-8
>  [5] LC_MONETARY=pt_PT.UTF-8    LC_MESSAGES=pt_PT.UTF-8
>  [7] LC_PAPER=pt_PT.UTF-8       LC_NAME=C
>  [9] LC_ADDRESS=C               LC_TELEPHONE=C
> [11] LC_MEASUREMENT=pt_PT.UTF-8 LC_IDENTIFICATION=C
> 
> attached base packages:
> [1] stats     graphics  grDevices utils     datasets  methods
> [7] base
> 
> other attached packages:
> 
> [many packages loaded]
> 
> 
> Hope this helps,
> 
> Rui Barradas
> 
> ?s 15:24 de 21/06/19, jing hua zhao escreveu:
>> Dear R-developers,
>> 
>> I am keen to calculate exp(z*z/2) with z=qnorm(p/2) and p is very small. I wonder if anyone has experience with this?
>> 
>> Thanks very much in advance,
>> 
>> 
>> Jing Hua
>> 
>>       [[alternative HTML version deleted]]
>> 
>> ______________________________________________
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel
>> 
> 
> 	[[alternative HTML version deleted]]
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From pd@|gd @end|ng |rom gm@||@com  Fri Jun 21 18:24:24 2019
From: pd@|gd @end|ng |rom gm@||@com (peter dalgaard)
Date: Fri, 21 Jun 2019 18:24:24 +0200
Subject: [Rd] Calculation of e^{z^2/2} for a normal deviate z
In-Reply-To: <DB6P189MB05810066BDE0B49EFBCFC73DA5E70@DB6P189MB0581.EURP189.PROD.OUTLOOK.COM>
References: <32da856c-a60a-974f-65ab-d7123e12e813@daqana.com>
 <23307.48529.773039.904392@stat.math.ethz.ch>
 <23307.49323.908367.788461@stat.math.ethz.ch>
 <CABtg=KkuVHoX1tZ=+Lr7mDFrXvn5zdf3+Wmqhnv58GXZJS2KwQ@mail.gmail.com>
 <f3388993-5e20-d7e5-346a-785d33fab27b@daqana.com>
 <DB6P189MB0581F101B909FA1E2ACC509DA51F0@DB6P189MB0581.EURP189.PROD.OUTLOOK.COM>
 <DB6P189MB0581A9E34BD18A3E06B8E725A5180@DB6P189MB0581.EURP189.PROD.OUTLOOK.COM>
 <DB6P189MB05813B949D25C28767CD8E5FA5E70@DB6P189MB0581.EURP189.PROD.OUTLOOK.COM>
 <8b926873-2fdf-4553-b62c-a928fbff70e9@sapo.pt>
 <DB6P189MB05810066BDE0B49EFBCFC73DA5E70@DB6P189MB0581.EURP189.PROD.OUTLOOK.COM>
Message-ID: <34FAD6F0-ABCE-4965-858A-0F0616D451B6@gmail.com>

You may want to look into using the log option to qnorm

e.g., in round figures:

> log(1e-300)
[1] -690.7755
> qnorm(-691, log=TRUE)
[1] -37.05315
> exp(37^2/2)
[1] 1.881797e+297
> exp(-37^2/2)
[1] 5.314068e-298

Notice that floating point representation cuts out at 1e+/-308 or so. If you want to go outside that range, you may need explicit manipulation of the log values. qnorm() itself seems quite happy with much smaller values:

> qnorm(-5000, log=TRUE)
[1] -99.94475

-pd

> On 21 Jun 2019, at 17:11 , jing hua zhao <jinghuazhao at hotmail.com> wrote:
> 
> Dear Rui,
> 
> Thanks for your quick reply -- this allows me to see the bottom of this. I was hoping we could have a handle of those p in genmoics such as 1e-300 or smaller.
> 
> Best wishes,
> 
> 
> Jing Hua
> 
> ________________________________
> From: Rui Barradas <ruipbarradas at sapo.pt>
> Sent: 21 June 2019 15:03
> To: jing hua zhao; r-devel at r-project.org
> Subject: Re: [Rd] Calculation of e^{z^2/2} for a normal deviate z
> 
> Hello,
> 
> Well, try it:
> 
> p <- .Machine$double.eps^seq(0.5, 1, by = 0.05)
> z <- qnorm(p/2)
> 
> pnorm(z)
> # [1] 7.450581e-09 1.228888e-09 2.026908e-10 3.343152e-11 5.514145e-12
> # [6] 9.094947e-13 1.500107e-13 2.474254e-14 4.080996e-15 6.731134e-16
> #[11] 1.110223e-16
> p/2
> # [1] 7.450581e-09 1.228888e-09 2.026908e-10 3.343152e-11 5.514145e-12
> # [6] 9.094947e-13 1.500107e-13 2.474254e-14 4.080996e-15 6.731134e-16
> #[11] 1.110223e-16
> 
> exp(z*z/2)
> # [1] 9.184907e+06 5.301421e+07 3.073154e+08 1.787931e+09 1.043417e+10
> # [6] 6.105491e+10 3.580873e+11 2.104460e+12 1.239008e+13 7.306423e+13
> #[11] 4.314798e+14
> 
> 
> p is the smallest possible such that 1 + p != 1 and I couldn't find
> anything to worry about.
> 
> 
> R version 3.6.0 (2019-04-26)
> Platform: x86_64-pc-linux-gnu (64-bit)
> Running under: Ubuntu 19.04
> 
> Matrix products: default
> BLAS:   /usr/lib/x86_64-linux-gnu/blas/libblas.so.3.8.0
> LAPACK: /usr/lib/x86_64-linux-gnu/lapack/liblapack.so.3.8.0
> 
> locale:
>  [1] LC_CTYPE=pt_PT.UTF-8       LC_NUMERIC=C
>  [3] LC_TIME=pt_PT.UTF-8        LC_COLLATE=pt_PT.UTF-8
>  [5] LC_MONETARY=pt_PT.UTF-8    LC_MESSAGES=pt_PT.UTF-8
>  [7] LC_PAPER=pt_PT.UTF-8       LC_NAME=C
>  [9] LC_ADDRESS=C               LC_TELEPHONE=C
> [11] LC_MEASUREMENT=pt_PT.UTF-8 LC_IDENTIFICATION=C
> 
> attached base packages:
> [1] stats     graphics  grDevices utils     datasets  methods
> [7] base
> 
> other attached packages:
> 
> [many packages loaded]
> 
> 
> Hope this helps,
> 
> Rui Barradas
> 
> ?s 15:24 de 21/06/19, jing hua zhao escreveu:
>> Dear R-developers,
>> 
>> I am keen to calculate exp(z*z/2) with z=qnorm(p/2) and p is very small. I wonder if anyone has experience with this?
>> 
>> Thanks very much in advance,
>> 
>> 
>> Jing Hua
>> 
>>       [[alternative HTML version deleted]]
>> 
>> ______________________________________________
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel
>> 
> 
> 	[[alternative HTML version deleted]]
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel

-- 
Peter Dalgaard, Professor,
Center for Statistics, Copenhagen Business School
Solbjerg Plads 3, 2000 Frederiksberg, Denmark
Phone: (+45)38153501
Office: A 4.23
Email: pd.mes at cbs.dk  Priv: PDalgd at gmail.com


From henr|k@bengt@@on @end|ng |rom gm@||@com  Fri Jun 21 20:04:18 2019
From: henr|k@bengt@@on @end|ng |rom gm@||@com (Henrik Bengtsson)
Date: Fri, 21 Jun 2019 11:04:18 -0700
Subject: [Rd] 
 Suggested Patch: Library returns matching installed packages
 when typo present
In-Reply-To: <88447493-f407-5669-28a8-9782d19c6a24@roswellpark.org>
References: <3590fa89-24f1-9ef4-95b2-8c6e0d5e9b7f@roswellpark.org>
 <alpine.DEB.2.21.1906210940210.9391@luke-Latitude-7480>
 <88447493-f407-5669-28a8-9782d19c6a24@roswellpark.org>
Message-ID: <CAFDcVCQWecQf=StPtX4s46Yd8n-0DyaBBCnWRQNAdfrNvE4fOA@mail.gmail.com>

> On 6/21/19 10:56 AM, Tierney, Luke wrote:
> [...]
> Something that would be useful and is being considered is having a
> mechanism for registering default condition handlers. This would allow
> the condition to be re-signaled with a custom class and then having
> a custom conditionMessage method is less likely to cause conflicts.

Is it correct that you are proposing something that allows us to do:

registerDefaultConditionHandlers(
  packageStartupMessage = function(c) {
    ## Do something with condition 'c'
    ...
    ## Suppress futher processing
    invokeRestart("muffleMessage")
  }
)

at the core, which avoids having us to wrap up calls in
withCallingHandlers() at top-level calls, e.g.

> withCallingHandlers({
  library("foobar"),
}, packageStartupMessage = function(c) {
  ## Do something with condition 'c'
  ...
  ## Suppress futher processing
  invokeRestart("muffleMessage")
})

?

Then, if I read this correctly, I'd say, this would be a very useful
addition to base R.  This will provide a core framework that opens up
for several neat extensions, e.g. the one that Marcel suggests - some
people prefer a message/warning on misspelled package names, while
others might want to see if it can be automatically installed, and so
on.  And, it will (=should) be all in the hands of the end user to
control this, i.e. various packages should not override this similar
to how we don't expect them to override other personal R settings we
have.

With this in place, it's not hard to imagine a third-party package
that provides useful handlers that users can pick from, e.g.

  buttlr::i_am_a("first_time_r_user")

to get extra information for some of the common warnings and errors,
which is in the same spirit as your idea on:

> [...] This would allow an IDE, for example, to provide a dialog for
> choosing the alternate package and retrying without the need to call
> library() again. [...]

I also think such a framework could replace some of the "legacy
handlers" we currently have in place, e.g. R options 'warn',
'warnPartialMatchArgs', '...', and even 'error', and give more
granular control over those use cases.  For instance, instead of a
warning or a partial argument match, I might want to produce an error
unless it comes from one particular package, say, which is something
that is a bit tricky to do today.

/Henrik

PS. Somewhat related to this, standardizing muffling and signaling of
conditions could be worth looking into as well.  For instance, being
able to resignal an error 'e' with a *generic* signalCondition(e)
instead of having to know that you should call stop(e) for 'error'
conditions and maybe another function if the error is of another
class.

On Fri, Jun 21, 2019 at 8:55 AM Marcel Ramos
<Marcel.Ramos at roswellpark.org> wrote:
>
> Hi Luke,
>
> Thank you for your response.
>
> On 6/21/19 10:56 AM, Tierney, Luke wrote:
>
> Thanks for the suggestion. However I don't think it is the right way
> to go. I also don't care for what install.packages() does. Signaling a
> warning and then an error means someone has to catch both the error
> and the warning, or suppress the warning, in order to handle the error
> programmatically.
>
> I do care for what install.packages() does because it's preferable
> to have consistency in the user interface.
>
> I see that the proposed patch does return both an error and a warning
> but as far as I understand it, library()'s main/intended use is interactive and
> there are other functions available for programmatic use cases.
>
>
>
> Now that library() signals a structured error there are other options.
> One possibility, at least as an interim, is to define a
> conditionMessage method, e.g. as
>
> conditionMessage.packageNotFoundError <- function(c) {
>      lib.loc <- c$lib.loc
>      msg <- c$message
>      package <- c$package
>      if(length(lib.loc)) {
>          allpkgs <- .packages(TRUE, lib.loc)
>          if (!is.na(w <- match(tolower(package), tolower(allpkgs)))) {
>              msg2 <- sprintf("Perhaps you meant %s ?", sQuote(allpkgs[w]))
>              return(paste(msg, msg2, sep = "\n"))
>          }
>      }
>      msg
> }
>
> This is something you can do yourself, though it is generally not a
> good idea to define a method when you don't own either the generic or
> the class.
>
> Something that would be useful and is being considered is having a
> mechanism for registering default condition handlers. This would allow
> the condition to be re-signaled with a custom class and then having
> a custom conditionMessage method is less likely to cause conflicts.
>
> I'd argue that this is quite useful especially for new users and that creating
> condition handlers may involve more than what is needed for interactive use.
>
>
> Best,
>
> Marcel
>
>
>
> Also worth looking into is establishing a restart around the error
> signal.  This would allow an IDE, for example, to provide a dialog for
> choosing the alternate package and retrying without the need to call
> library() again. This is currently done in loadNamespace() but not yet
> in library(). Can have downsides as well -- if the library() call is
> in a notebook, for example, then you do want to fix the call ...  It
> is arguably more useful in loadNamespace since that can get called
> implicitly inside a longer computation that you don't necessarily want
> to start over.
>
> Best,
>
> luke
>
> On Fri, 21 Jun 2019, Marcel Ramos wrote:
>
>
>
> Dear R-core devs,
>
> I hope this email finds you well.
>
> Please see the proposed patch to R-devel below:
>
> Scenario:
>
> When loading a package using `library`, a package may not be found if the cases are not matching:
>
> ```
>
>
> library(ORG.Hs.eg.db)
>
>
> Error in library(ORG.Hs.eg.db) :
>  there is no package called 'ORG.Hs.eg.db'
> ```
>
>
> Suggested Patch:
>
> Returns a message matching what `install.packages` returns in such situations:
>
> ```
>
>
> library("ORG.Hs.eg.db")
>
>
> Error in library("ORG.Hs.eg.db") :
>   there is no package called 'ORG.Hs.eg.db'
> In addition: Warning message:
> Perhaps you meant 'org.Hs.eg.db' ?
> ```
>
> This patch will be helpful with 'fat-finger' typos. It will match a package
> called with `library` against installed packages.
>
>
> svn diff:
>
> Index: src/library/base/R/library.R
> ===================================================================
> --- src/library/base/R/library.R    (revision 76727)
> +++ src/library/base/R/library.R    (working copy)
> @@ -300,8 +300,13 @@
>         pkgpath <- find.package(package, lib.loc, quiet = TRUE,
>                                     verbose = verbose)
>             if(length(pkgpath) == 0L) {
> -                if(length(lib.loc) && !logical.return)
> +                if(length(lib.loc) && !logical.return) {
> +                    allpkgs <- .packages(TRUE, lib.loc)
> +                    if (!is.na(w <- match(tolower(package), tolower(allpkgs))))
> +                        warning(sprintf("Perhaps you meant %s ?",
> +                            sQuote(allpkgs[w])), call. = FALSE, domain = NA)
>                     stop(packageNotFoundError(package, lib.loc, sys.call()))
> +                }
>                 txt <- if(length(lib.loc))
>                     gettextf("there is no package called %s", sQuote(package))
>                 else
>
>
> Thank you!
>
> Best regards,
>
> Marcel
>
>
>
> --
> Marcel Ramos
> Bioconductor Core Team
> Roswell Park Comprehensive Care Center
> Dept. of Biostatistics & Bioinformatics
> Elm & Carlton Streets
> Buffalo, New York 14263
>
>
> This email message may contain legally privileged and/or confidential information.  If you are not the intended recipient(s), or the employee or agent responsible for the delivery of this message to the intended recipient(s), you are hereby notified that any disclosure, copying, distribution, or use of this email message is prohibited.  If you have received this message in error, please notify the sender immediately by e-mail and delete this email message from your computer. Thank you.
>         [[alternative HTML version deleted]]
>
> ______________________________________________
> R-devel at r-project.org<mailto:R-devel at r-project.org> mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>
>
>
>
>
>
>
> This email message may contain legally privileged and/or confidential information.  If you are not the intended recipient(s), or the employee or agent responsible for the delivery of this message to the intended recipient(s), you are hereby notified that any disclosure, copying, distribution, or use of this email message is prohibited.  If you have received this message in error, please notify the sender immediately by e-mail and delete this email message from your computer. Thank you.
>         [[alternative HTML version deleted]]
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From g@bembecker @end|ng |rom gm@||@com  Fri Jun 21 22:39:58 2019
From: g@bembecker @end|ng |rom gm@||@com (Gabriel Becker)
Date: Fri, 21 Jun 2019 13:39:58 -0700
Subject: [Rd] Calculation of e^{z^2/2} for a normal deviate z
In-Reply-To: <34FAD6F0-ABCE-4965-858A-0F0616D451B6@gmail.com>
References: <32da856c-a60a-974f-65ab-d7123e12e813@daqana.com>
 <23307.48529.773039.904392@stat.math.ethz.ch>
 <23307.49323.908367.788461@stat.math.ethz.ch>
 <CABtg=KkuVHoX1tZ=+Lr7mDFrXvn5zdf3+Wmqhnv58GXZJS2KwQ@mail.gmail.com>
 <f3388993-5e20-d7e5-346a-785d33fab27b@daqana.com>
 <DB6P189MB0581F101B909FA1E2ACC509DA51F0@DB6P189MB0581.EURP189.PROD.OUTLOOK.COM>
 <DB6P189MB0581A9E34BD18A3E06B8E725A5180@DB6P189MB0581.EURP189.PROD.OUTLOOK.COM>
 <DB6P189MB05813B949D25C28767CD8E5FA5E70@DB6P189MB0581.EURP189.PROD.OUTLOOK.COM>
 <8b926873-2fdf-4553-b62c-a928fbff70e9@sapo.pt>
 <DB6P189MB05810066BDE0B49EFBCFC73DA5E70@DB6P189MB0581.EURP189.PROD.OUTLOOK.COM>
 <34FAD6F0-ABCE-4965-858A-0F0616D451B6@gmail.com>
Message-ID: <CAD4oTHFG40XxatH-KRMN2bPCema5s-KbJO9n_7C5+oLYpOiY3w@mail.gmail.com>

Hi Jing,

Peter pointed out how you can, more or less, get numbers for this, and he's
absolutely right. At the risk of giving unsolicited advice, though, Im
don't think you *should* in this case.

Someone on this list with more applied Statistics or Statistical Genetics
experience can correct me if I'm wrong, but I have always been under the
impression that "pvalues" that small  (and honestly ones that are not
nearly that small) are not meaningful as actual numbers and should never be
used as such. Essentially, AFAIK, a p-value of 1e-300 just means "really
small"/"really unlikely", the same as a pvalue of 1e-280 does (even though
the second pvalue is *20 orders of magnitude* larger). Like, how
*precicely* correct
would the distributional assumptions the test is making have to be for that
-300 to be meaningful?

Note that if you have putative pvalues in the 1e-300 range, a full order of
magnitude increase in the pvalue (to 1e-299) only corresponds to only a
reduction of 0.06 in the quantile value. Is that amount of measurement
difference likely to be meaningful in a genomics setting or is it probably
machine noise? (my impression is the later).

> log(1e-300)

[1] -690.7755

> log(1e-299)

[1] -688.4729

> qnorm(-691, log = TRUE)

[1] -37.05315

> qnorm(-688, log=TRUE)

[1] -36.97216

> qnorm(-688.4729, log=TRUE) - qnorm(-690.7755, log = TRUE)

[1] 0.06216021

 And all of the above ignores  the most important thing in practice, though
(sorry for burying the lede), which is the fact that the precision
tolerance of the computation calculating the pvalue is very likely *hundreds
of orders of magnitude *larger (ie less precise) than 1e-300 unless it uses
infinite precision arithmetic (which, I think, would be a very weird thing
to do for the reasons pointed out above).

Personally, whenever I See values on the order of 1e-K where K is bigger
than like 20 on the ouside , I just see rounding errors around 0, not
numbers that are, e.g., meaningfully comparable or sortable or summable,
etc.

So R will give you numbers for this, as Peter showed you, but personally
remain pretty skeptical that they will actually be useful for what you want
to do with them i this case.

Best,
~G

On Fri, Jun 21, 2019 at 9:32 AM peter dalgaard <pdalgd at gmail.com> wrote:

> You may want to look into using the log option to qnorm
>
> e.g., in round figures:
>
> > log(1e-300)
> [1] -690.7755
> > qnorm(-691, log=TRUE)
> [1] -37.05315
> > exp(37^2/2)
> [1] 1.881797e+297
> > exp(-37^2/2)
> [1] 5.314068e-298
>
> Notice that floating point representation cuts out at 1e+/-308 or so. If
> you want to go outside that range, you may need explicit manipulation of
> the log values. qnorm() itself seems quite happy with much smaller values:
>
> > qnorm(-5000, log=TRUE)
> [1] -99.94475
>
> -pd
>
> > On 21 Jun 2019, at 17:11 , jing hua zhao <jinghuazhao at hotmail.com>
> wrote:
> >
> > Dear Rui,
> >
> > Thanks for your quick reply -- this allows me to see the bottom of this.
> I was hoping we could have a handle of those p in genmoics such as 1e-300
> or smaller.
> >
> > Best wishes,
> >
> >
> > Jing Hua
> >
> > ________________________________
> > From: Rui Barradas <ruipbarradas at sapo.pt>
> > Sent: 21 June 2019 15:03
> > To: jing hua zhao; r-devel at r-project.org
> > Subject: Re: [Rd] Calculation of e^{z^2/2} for a normal deviate z
> >
> > Hello,
> >
> > Well, try it:
> >
> > p <- .Machine$double.eps^seq(0.5, 1, by = 0.05)
> > z <- qnorm(p/2)
> >
> > pnorm(z)
> > # [1] 7.450581e-09 1.228888e-09 2.026908e-10 3.343152e-11 5.514145e-12
> > # [6] 9.094947e-13 1.500107e-13 2.474254e-14 4.080996e-15 6.731134e-16
> > #[11] 1.110223e-16
> > p/2
> > # [1] 7.450581e-09 1.228888e-09 2.026908e-10 3.343152e-11 5.514145e-12
> > # [6] 9.094947e-13 1.500107e-13 2.474254e-14 4.080996e-15 6.731134e-16
> > #[11] 1.110223e-16
> >
> > exp(z*z/2)
> > # [1] 9.184907e+06 5.301421e+07 3.073154e+08 1.787931e+09 1.043417e+10
> > # [6] 6.105491e+10 3.580873e+11 2.104460e+12 1.239008e+13 7.306423e+13
> > #[11] 4.314798e+14
> >
> >
> > p is the smallest possible such that 1 + p != 1 and I couldn't find
> > anything to worry about.
> >
> >
> > R version 3.6.0 (2019-04-26)
> > Platform: x86_64-pc-linux-gnu (64-bit)
> > Running under: Ubuntu 19.04
> >
> > Matrix products: default
> > BLAS:   /usr/lib/x86_64-linux-gnu/blas/libblas.so.3.8.0
> > LAPACK: /usr/lib/x86_64-linux-gnu/lapack/liblapack.so.3.8.0
> >
> > locale:
> >  [1] LC_CTYPE=pt_PT.UTF-8       LC_NUMERIC=C
> >  [3] LC_TIME=pt_PT.UTF-8        LC_COLLATE=pt_PT.UTF-8
> >  [5] LC_MONETARY=pt_PT.UTF-8    LC_MESSAGES=pt_PT.UTF-8
> >  [7] LC_PAPER=pt_PT.UTF-8       LC_NAME=C
> >  [9] LC_ADDRESS=C               LC_TELEPHONE=C
> > [11] LC_MEASUREMENT=pt_PT.UTF-8 LC_IDENTIFICATION=C
> >
> > attached base packages:
> > [1] stats     graphics  grDevices utils     datasets  methods
> > [7] base
> >
> > other attached packages:
> >
> > [many packages loaded]
> >
> >
> > Hope this helps,
> >
> > Rui Barradas
> >
> > ?s 15:24 de 21/06/19, jing hua zhao escreveu:
> >> Dear R-developers,
> >>
> >> I am keen to calculate exp(z*z/2) with z=qnorm(p/2) and p is very
> small. I wonder if anyone has experience with this?
> >>
> >> Thanks very much in advance,
> >>
> >>
> >> Jing Hua
> >>
> >>       [[alternative HTML version deleted]]
> >>
> >> ______________________________________________
> >> R-devel at r-project.org mailing list
> >> https://stat.ethz.ch/mailman/listinfo/r-devel
> >>
> >
> >       [[alternative HTML version deleted]]
> >
> > ______________________________________________
> > R-devel at r-project.org mailing list
> > https://stat.ethz.ch/mailman/listinfo/r-devel
>
> --
> Peter Dalgaard, Professor,
> Center for Statistics, Copenhagen Business School
> Solbjerg Plads 3, 2000 Frederiksberg, Denmark
> Phone: (+45)38153501
> Office: A 4.23
> Email: pd.mes at cbs.dk  Priv: PDalgd at gmail.com
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>

	[[alternative HTML version deleted]]


From j|nghu@zh@o @end|ng |rom hotm@||@com  Sat Jun 22 00:58:18 2019
From: j|nghu@zh@o @end|ng |rom hotm@||@com (jing hua zhao)
Date: Fri, 21 Jun 2019 22:58:18 +0000
Subject: [Rd] Calculation of e^{z^2/2} for a normal deviate z
In-Reply-To: <34FAD6F0-ABCE-4965-858A-0F0616D451B6@gmail.com>
References: <32da856c-a60a-974f-65ab-d7123e12e813@daqana.com>
 <23307.48529.773039.904392@stat.math.ethz.ch>
 <23307.49323.908367.788461@stat.math.ethz.ch>
 <CABtg=KkuVHoX1tZ=+Lr7mDFrXvn5zdf3+Wmqhnv58GXZJS2KwQ@mail.gmail.com>
 <f3388993-5e20-d7e5-346a-785d33fab27b@daqana.com>
 <DB6P189MB0581F101B909FA1E2ACC509DA51F0@DB6P189MB0581.EURP189.PROD.OUTLOOK.COM>
 <DB6P189MB0581A9E34BD18A3E06B8E725A5180@DB6P189MB0581.EURP189.PROD.OUTLOOK.COM>
 <DB6P189MB05813B949D25C28767CD8E5FA5E70@DB6P189MB0581.EURP189.PROD.OUTLOOK.COM>
 <8b926873-2fdf-4553-b62c-a928fbff70e9@sapo.pt>
 <DB6P189MB05810066BDE0B49EFBCFC73DA5E70@DB6P189MB0581.EURP189.PROD.OUTLOOK.COM>,
 <34FAD6F0-ABCE-4965-858A-0F0616D451B6@gmail.com>
Message-ID: <DB6P189MB058181A3D23F4EB37C3175B5A5E70@DB6P189MB0581.EURP189.PROD.OUTLOOK.COM>

Hi Peter, Rui, Chrstophe and Gabriel,

Thanks for your inputs --  the use of qnorm(., log=TRUE) is a good point in line with pnorm with which we devised log(p)  as

log(2) + pnorm(-abs(z), lower.tail = TRUE, log.p = TRUE)

that could do really really well for large z compared to Rmpfr. Maybe I am asking too much since

z <-20000
> Rmpfr::format(2*pnorm(mpfr(-abs(z),100),lower.tail=TRUE,log.p=FALSE))
[1] "1.660579603192917090365313727164e-86858901"

already gives a rarely seen small p value. I gather I also need a multiple precision exp() and their sum since exp(z^2/2) is also a Bayes Factor so I  get log(x_i )/sum_i log(x_i) instead. To this point, I am obliged to clarify, see https://statgen.github.io/gwas-credible-sets/method/locuszoom-credible-sets.pdf.

I agree many feel geneticists go to far with small p values which I would have difficulty to argue againston the other hand it is also expected to see these in a non-genetic context. For instance the Framingham study was established in 1948 just got $34m for six years on phenotypewide association which we would be interesting to see.

Best wishes,


Jing Hua


________________________________
From: peter dalgaard <pdalgd at gmail.com>
Sent: 21 June 2019 16:24
To: jing hua zhao
Cc: Rui Barradas; r-devel at r-project.org
Subject: Re: [Rd] Calculation of e^{z^2/2} for a normal deviate z

You may want to look into using the log option to qnorm

e.g., in round figures:

> log(1e-300)
[1] -690.7755
> qnorm(-691, log=TRUE)
[1] -37.05315
> exp(37^2/2)
[1] 1.881797e+297
> exp(-37^2/2)
[1] 5.314068e-298

Notice that floating point representation cuts out at 1e+/-308 or so. If you want to go outside that range, you may need explicit manipulation of the log values. qnorm() itself seems quite happy with much smaller values:

> qnorm(-5000, log=TRUE)
[1] -99.94475

-pd

> On 21 Jun 2019, at 17:11 , jing hua zhao <jinghuazhao at hotmail.com> wrote:
>
> Dear Rui,
>
> Thanks for your quick reply -- this allows me to see the bottom of this. I was hoping we could have a handle of those p in genmoics such as 1e-300 or smaller.
>
> Best wishes,
>
>
> Jing Hua
>
> ________________________________
> From: Rui Barradas <ruipbarradas at sapo.pt>
> Sent: 21 June 2019 15:03
> To: jing hua zhao; r-devel at r-project.org
> Subject: Re: [Rd] Calculation of e^{z^2/2} for a normal deviate z
>
> Hello,
>
> Well, try it:
>
> p <- .Machine$double.eps^seq(0.5, 1, by = 0.05)
> z <- qnorm(p/2)
>
> pnorm(z)
> # [1] 7.450581e-09 1.228888e-09 2.026908e-10 3.343152e-11 5.514145e-12
> # [6] 9.094947e-13 1.500107e-13 2.474254e-14 4.080996e-15 6.731134e-16
> #[11] 1.110223e-16
> p/2
> # [1] 7.450581e-09 1.228888e-09 2.026908e-10 3.343152e-11 5.514145e-12
> # [6] 9.094947e-13 1.500107e-13 2.474254e-14 4.080996e-15 6.731134e-16
> #[11] 1.110223e-16
>
> exp(z*z/2)
> # [1] 9.184907e+06 5.301421e+07 3.073154e+08 1.787931e+09 1.043417e+10
> # [6] 6.105491e+10 3.580873e+11 2.104460e+12 1.239008e+13 7.306423e+13
> #[11] 4.314798e+14
>
>
> p is the smallest possible such that 1 + p != 1 and I couldn't find
> anything to worry about.
>
>
> R version 3.6.0 (2019-04-26)
> Platform: x86_64-pc-linux-gnu (64-bit)
> Running under: Ubuntu 19.04
>
> Matrix products: default
> BLAS:   /usr/lib/x86_64-linux-gnu/blas/libblas.so.3.8.0
> LAPACK: /usr/lib/x86_64-linux-gnu/lapack/liblapack.so.3.8.0
>
> locale:
>  [1] LC_CTYPE=pt_PT.UTF-8       LC_NUMERIC=C
>  [3] LC_TIME=pt_PT.UTF-8        LC_COLLATE=pt_PT.UTF-8
>  [5] LC_MONETARY=pt_PT.UTF-8    LC_MESSAGES=pt_PT.UTF-8
>  [7] LC_PAPER=pt_PT.UTF-8       LC_NAME=C
>  [9] LC_ADDRESS=C               LC_TELEPHONE=C
> [11] LC_MEASUREMENT=pt_PT.UTF-8 LC_IDENTIFICATION=C
>
> attached base packages:
> [1] stats     graphics  grDevices utils     datasets  methods
> [7] base
>
> other attached packages:
>
> [many packages loaded]
>
>
> Hope this helps,
>
> Rui Barradas
>
> ?s 15:24 de 21/06/19, jing hua zhao escreveu:
>> Dear R-developers,
>>
>> I am keen to calculate exp(z*z/2) with z=qnorm(p/2) and p is very small. I wonder if anyone has experience with this?
>>
>> Thanks very much in advance,
>>
>>
>> Jing Hua
>>
>>       [[alternative HTML version deleted]]
>>
>> ______________________________________________
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>
>
>        [[alternative HTML version deleted]]
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel

--
Peter Dalgaard, Professor,
Center for Statistics, Copenhagen Business School
Solbjerg Plads 3, 2000 Frederiksberg, Denmark
Phone: (+45)38153501
Office: A 4.23
Email: pd.mes at cbs.dk  Priv: PDalgd at gmail.com










	[[alternative HTML version deleted]]


From ru|pb@rr@d@@ @end|ng |rom @@po@pt  Fri Jun 21 17:03:22 2019
From: ru|pb@rr@d@@ @end|ng |rom @@po@pt (Rui Barradas)
Date: Fri, 21 Jun 2019 16:03:22 +0100
Subject: [Rd] Calculation of e^{z^2/2} for a normal deviate z
In-Reply-To: <DB6P189MB05813B949D25C28767CD8E5FA5E70@DB6P189MB0581.EURP189.PROD.OUTLOOK.COM>
References: <32da856c-a60a-974f-65ab-d7123e12e813@daqana.com>
 <23307.48529.773039.904392@stat.math.ethz.ch>
 <23307.49323.908367.788461@stat.math.ethz.ch>
 <CABtg=KkuVHoX1tZ=+Lr7mDFrXvn5zdf3+Wmqhnv58GXZJS2KwQ@mail.gmail.com>
 <f3388993-5e20-d7e5-346a-785d33fab27b@daqana.com>
 <DB6P189MB0581F101B909FA1E2ACC509DA51F0@DB6P189MB0581.EURP189.PROD.OUTLOOK.COM>
 <DB6P189MB0581A9E34BD18A3E06B8E725A5180@DB6P189MB0581.EURP189.PROD.OUTLOOK.COM>
 <DB6P189MB05813B949D25C28767CD8E5FA5E70@DB6P189MB0581.EURP189.PROD.OUTLOOK.COM>
Message-ID: <8b926873-2fdf-4553-b62c-a928fbff70e9@sapo.pt>

Hello,

Well, try it:

p <- .Machine$double.eps^seq(0.5, 1, by = 0.05)
z <- qnorm(p/2)

pnorm(z)
# [1] 7.450581e-09 1.228888e-09 2.026908e-10 3.343152e-11 5.514145e-12
# [6] 9.094947e-13 1.500107e-13 2.474254e-14 4.080996e-15 6.731134e-16
#[11] 1.110223e-16
p/2
# [1] 7.450581e-09 1.228888e-09 2.026908e-10 3.343152e-11 5.514145e-12
# [6] 9.094947e-13 1.500107e-13 2.474254e-14 4.080996e-15 6.731134e-16
#[11] 1.110223e-16

exp(z*z/2)
# [1] 9.184907e+06 5.301421e+07 3.073154e+08 1.787931e+09 1.043417e+10
# [6] 6.105491e+10 3.580873e+11 2.104460e+12 1.239008e+13 7.306423e+13
#[11] 4.314798e+14


p is the smallest possible such that 1 + p != 1 and I couldn't find 
anything to worry about.


R version 3.6.0 (2019-04-26)
Platform: x86_64-pc-linux-gnu (64-bit)
Running under: Ubuntu 19.04

Matrix products: default
BLAS:   /usr/lib/x86_64-linux-gnu/blas/libblas.so.3.8.0
LAPACK: /usr/lib/x86_64-linux-gnu/lapack/liblapack.so.3.8.0

locale:
  [1] LC_CTYPE=pt_PT.UTF-8       LC_NUMERIC=C
  [3] LC_TIME=pt_PT.UTF-8        LC_COLLATE=pt_PT.UTF-8
  [5] LC_MONETARY=pt_PT.UTF-8    LC_MESSAGES=pt_PT.UTF-8
  [7] LC_PAPER=pt_PT.UTF-8       LC_NAME=C
  [9] LC_ADDRESS=C               LC_TELEPHONE=C
[11] LC_MEASUREMENT=pt_PT.UTF-8 LC_IDENTIFICATION=C

attached base packages:
[1] stats     graphics  grDevices utils     datasets  methods
[7] base

other attached packages:

[many packages loaded]


Hope this helps,

Rui Barradas

?s 15:24 de 21/06/19, jing hua zhao escreveu:
> Dear R-developers,
> 
> I am keen to calculate exp(z*z/2) with z=qnorm(p/2) and p is very small. I wonder if anyone has experience with this?
> 
> Thanks very much in advance,
> 
> 
> Jing Hua
> 
> 	[[alternative HTML version deleted]]
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>


From ru|pb@rr@d@@ @end|ng |rom @@po@pt  Fri Jun 21 17:30:17 2019
From: ru|pb@rr@d@@ @end|ng |rom @@po@pt (Rui Barradas)
Date: Fri, 21 Jun 2019 16:30:17 +0100
Subject: [Rd] Calculation of e^{z^2/2} for a normal deviate z
In-Reply-To: <DB6P189MB05810066BDE0B49EFBCFC73DA5E70@DB6P189MB0581.EURP189.PROD.OUTLOOK.COM>
References: <32da856c-a60a-974f-65ab-d7123e12e813@daqana.com>
 <23307.48529.773039.904392@stat.math.ethz.ch>
 <23307.49323.908367.788461@stat.math.ethz.ch>
 <CABtg=KkuVHoX1tZ=+Lr7mDFrXvn5zdf3+Wmqhnv58GXZJS2KwQ@mail.gmail.com>
 <f3388993-5e20-d7e5-346a-785d33fab27b@daqana.com>
 <DB6P189MB0581F101B909FA1E2ACC509DA51F0@DB6P189MB0581.EURP189.PROD.OUTLOOK.COM>
 <DB6P189MB0581A9E34BD18A3E06B8E725A5180@DB6P189MB0581.EURP189.PROD.OUTLOOK.COM>
 <DB6P189MB05813B949D25C28767CD8E5FA5E70@DB6P189MB0581.EURP189.PROD.OUTLOOK.COM>
 <8b926873-2fdf-4553-b62c-a928fbff70e9@sapo.pt>
 <DB6P189MB05810066BDE0B49EFBCFC73DA5E70@DB6P189MB0581.EURP189.PROD.OUTLOOK.COM>
Message-ID: <ca36d8ae-25f0-67b8-2874-6d66d3b1bac7@sapo.pt>

Hello,

Sorry, my mistake, I grossly misunderstood the question.

qnorm(1e-300)
#[1] -37.0471

Anyway, you cannot go much smaller.

p <- 10^seq(-300, -400, by = -10)
z <- qnorm(p/2)
exp(z*z/2)


Hope this helps,

Rui Barradas

?s 16:11 de 21/06/19, jing hua zhao escreveu:
> Dear Rui,
> 
> Thanks for your quick reply -- this allows me to see the bottom of this. 
> I was hoping we could have a handle of those p in genmoics such as 
> 1e-300 or smaller.
> 
> Best wishes,
> 
> 
> Jing Hua
> 
> ------------------------------------------------------------------------
> *From:* Rui Barradas <ruipbarradas at sapo.pt>
> *Sent:* 21 June 2019 15:03
> *To:* jing hua zhao; r-devel at r-project.org
> *Subject:* Re: [Rd] Calculation of e^{z^2/2} for a normal deviate z
> Hello,
> 
> Well, try it:
> 
> p <- .Machine$double.eps^seq(0.5, 1, by = 0.05)
> z <- qnorm(p/2)
> 
> pnorm(z)
> # [1] 7.450581e-09 1.228888e-09 2.026908e-10 3.343152e-11 5.514145e-12
> # [6] 9.094947e-13 1.500107e-13 2.474254e-14 4.080996e-15 6.731134e-16
> #[11] 1.110223e-16
> p/2
> # [1] 7.450581e-09 1.228888e-09 2.026908e-10 3.343152e-11 5.514145e-12
> # [6] 9.094947e-13 1.500107e-13 2.474254e-14 4.080996e-15 6.731134e-16
> #[11] 1.110223e-16
> 
> exp(z*z/2)
> # [1] 9.184907e+06 5.301421e+07 3.073154e+08 1.787931e+09 1.043417e+10
> # [6] 6.105491e+10 3.580873e+11 2.104460e+12 1.239008e+13 7.306423e+13
> #[11] 4.314798e+14
> 
> 
> p is the smallest possible such that 1 + p != 1 and I couldn't find
> anything to worry about.
> 
> 
> R version 3.6.0 (2019-04-26)
> Platform: x86_64-pc-linux-gnu (64-bit)
> Running under: Ubuntu 19.04
> 
> Matrix products: default
> BLAS:?? /usr/lib/x86_64-linux-gnu/blas/libblas.so.3.8.0
> LAPACK: /usr/lib/x86_64-linux-gnu/lapack/liblapack.so.3.8.0
> 
> locale:
>  ? [1] LC_CTYPE=pt_PT.UTF-8?????? LC_NUMERIC=C
>  ? [3] LC_TIME=pt_PT.UTF-8??????? LC_COLLATE=pt_PT.UTF-8
>  ? [5] LC_MONETARY=pt_PT.UTF-8??? LC_MESSAGES=pt_PT.UTF-8
>  ? [7] LC_PAPER=pt_PT.UTF-8?????? LC_NAME=C
>  ? [9] LC_ADDRESS=C?????????????? LC_TELEPHONE=C
> [11] LC_MEASUREMENT=pt_PT.UTF-8 LC_IDENTIFICATION=C
> 
> attached base packages:
> [1] stats???? graphics? grDevices utils???? datasets? methods
> [7] base
> 
> other attached packages:
> 
> [many packages loaded]
> 
> 
> Hope this helps,
> 
> Rui Barradas
> 
> ?s 15:24 de 21/06/19, jing hua zhao escreveu:
>> Dear R-developers,
>> 
>> I am keen to calculate exp(z*z/2) with z=qnorm(p/2) and p is very small. I wonder if anyone has experience with this?
>> 
>> Thanks very much in advance,
>> 
>> 
>> Jing Hua
>> 
>>??????? [[alternative HTML version deleted]]
>> 
>> ______________________________________________
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>


From |uke-t|erney @end|ng |rom u|ow@@edu  Sat Jun 22 15:51:51 2019
From: |uke-t|erney @end|ng |rom u|ow@@edu (Tierney, Luke)
Date: Sat, 22 Jun 2019 13:51:51 +0000
Subject: [Rd] [External] Re: Suggested Patch: Library returns matching
 installed packages when typo present
In-Reply-To: <CAFDcVCQWecQf=StPtX4s46Yd8n-0DyaBBCnWRQNAdfrNvE4fOA@mail.gmail.com>
References: <3590fa89-24f1-9ef4-95b2-8c6e0d5e9b7f@roswellpark.org>
 <alpine.DEB.2.21.1906210940210.9391@luke-Latitude-7480>
 <88447493-f407-5669-28a8-9782d19c6a24@roswellpark.org>
 <CAFDcVCQWecQf=StPtX4s46Yd8n-0DyaBBCnWRQNAdfrNvE4fOA@mail.gmail.com>
Message-ID: <alpine.DEB.2.21.1906220829260.9391@luke-Latitude-7480>

On Fri, 21 Jun 2019, Henrik Bengtsson wrote:

>> On 6/21/19 10:56 AM, Tierney, Luke wrote:
>> [...]
>> Something that would be useful and is being considered is having a
>> mechanism for registering default condition handlers. This would allow
>> the condition to be re-signaled with a custom class and then having
>> a custom conditionMessage method is less likely to cause conflicts.
>
> Is it correct that you are proposing something that allows us to do:
>
> registerDefaultConditionHandlers(
>  packageStartupMessage = function(c) {
>    ## Do something with condition 'c'
>    ...
>    ## Suppress futher processing
>    invokeRestart("muffleMessage")
>  }
> )
>
> at the core, which avoids having us to wrap up calls in
> withCallingHandlers() at top-level calls, e.g.
>
>> withCallingHandlers({
>  library("foobar"),
> }, packageStartupMessage = function(c) {
>  ## Do something with condition 'c'
>  ...
>  ## Suppress futher processing
>  invokeRestart("muffleMessage")
> })
>
> ?
>
> Then, if I read this correctly, I'd say, this would be a very useful
> addition to base R.  This will provide a core framework that opens up
> for several neat extensions, e.g. the one that Marcel suggests - some
> people prefer a message/warning on misspelled package names, while
> others might want to see if it can be automatically installed, and so
> on.  And, it will (=should) be all in the hands of the end user to
> control this, i.e. various packages should not override this similar
> to how we don't expect them to override other personal R settings we
> have.

Something along those lines. Not thoroughly thought through yet, and
there are lots of other things ahead in the queue ...

>
> With this in place, it's not hard to imagine a third-party package
> that provides useful handlers that users can pick from, e.g.
>
>  buttlr::i_am_a("first_time_r_user")
>
> to get extra information for some of the common warnings and errors,
> which is in the same spirit as your idea on:
>
>> [...] This would allow an IDE, for example, to provide a dialog for
>> choosing the alternate package and retrying without the need to call
>> library() again. [...]
>
> I also think such a framework could replace some of the "legacy
> handlers" we currently have in place, e.g. R options 'warn',
> 'warnPartialMatchArgs', '...', and even 'error', and give more
> granular control over those use cases.  For instance, instead of a
> warning or a partial argument match, I might want to produce an error
> unless it comes from one particular package, say, which is something
> that is a bit tricky to do today.

As I am sure you know changing things that have been around for a long
time is a lot more complicated than adding new things ...

>
> /Henrik
>
> PS. Somewhat related to this, standardizing muffling and signaling of
> conditions could be worth looking into as well.  For instance, being
> able to resignal an error 'e' with a *generic* signalCondition(e)
> instead of having to know that you should call stop(e) for 'error'
> conditions and maybe another function if the error is of another
> class.

No. This is working as intended. Signaling protocols and class
hierarchies are separate. _Usually_ you will signal an error with
stop() and a warning with warning() but you can do it the other way as
well. Condition classes determine what handlers are eligible. The
choice of signaling function determines the protocol for signaling
whatever condition the function is given, including what extra
restarts might be available and what happens if no handler is
available or all handlers decline by returning. stop() and
warning/message both use signalCondition to allow handlers to handle
the condition.  For stop(), the protocol guarantees that stop will
never return since it invokes an abort restart if the condition is not
handled. warning/message signal with a muffling restart in place. If
you use signalCondition directly you can establish your own protocol.

Best,

luke


> On Fri, Jun 21, 2019 at 8:55 AM Marcel Ramos
> <Marcel.Ramos at roswellpark.org> wrote:
>>
>> Hi Luke,
>>
>> Thank you for your response.
>>
>> On 6/21/19 10:56 AM, Tierney, Luke wrote:
>>
>> Thanks for the suggestion. However I don't think it is the right way
>> to go. I also don't care for what install.packages() does. Signaling a
>> warning and then an error means someone has to catch both the error
>> and the warning, or suppress the warning, in order to handle the error
>> programmatically.
>>
>> I do care for what install.packages() does because it's preferable
>> to have consistency in the user interface.
>>
>> I see that the proposed patch does return both an error and a warning
>> but as far as I understand it, library()'s main/intended use is interactive and
>> there are other functions available for programmatic use cases.
>>
>>
>>
>> Now that library() signals a structured error there are other options.
>> One possibility, at least as an interim, is to define a
>> conditionMessage method, e.g. as
>>
>> conditionMessage.packageNotFoundError <- function(c) {
>>      lib.loc <- c$lib.loc
>>      msg <- c$message
>>      package <- c$package
>>      if(length(lib.loc)) {
>>          allpkgs <- .packages(TRUE, lib.loc)
>>          if (!is.na(w <- match(tolower(package), tolower(allpkgs)))) {
>>              msg2 <- sprintf("Perhaps you meant %s ?", sQuote(allpkgs[w]))
>>              return(paste(msg, msg2, sep = "\n"))
>>          }
>>      }
>>      msg
>> }
>>
>> This is something you can do yourself, though it is generally not a
>> good idea to define a method when you don't own either the generic or
>> the class.
>>
>> Something that would be useful and is being considered is having a
>> mechanism for registering default condition handlers. This would allow
>> the condition to be re-signaled with a custom class and then having
>> a custom conditionMessage method is less likely to cause conflicts.
>>
>> I'd argue that this is quite useful especially for new users and that creating
>> condition handlers may involve more than what is needed for interactive use.
>>
>>
>> Best,
>>
>> Marcel
>>
>>
>>
>> Also worth looking into is establishing a restart around the error
>> signal.  This would allow an IDE, for example, to provide a dialog for
>> choosing the alternate package and retrying without the need to call
>> library() again. This is currently done in loadNamespace() but not yet
>> in library(). Can have downsides as well -- if the library() call is
>> in a notebook, for example, then you do want to fix the call ...  It
>> is arguably more useful in loadNamespace since that can get called
>> implicitly inside a longer computation that you don't necessarily want
>> to start over.
>>
>> Best,
>>
>> luke
>>
>> On Fri, 21 Jun 2019, Marcel Ramos wrote:
>>
>>
>>
>> Dear R-core devs,
>>
>> I hope this email finds you well.
>>
>> Please see the proposed patch to R-devel below:
>>
>> Scenario:
>>
>> When loading a package using `library`, a package may not be found if the cases are not matching:
>>
>> ```
>>
>>
>> library(ORG.Hs.eg.db)
>>
>>
>> Error in library(ORG.Hs.eg.db) :
>>  there is no package called 'ORG.Hs.eg.db'
>> ```
>>
>>
>> Suggested Patch:
>>
>> Returns a message matching what `install.packages` returns in such situations:
>>
>> ```
>>
>>
>> library("ORG.Hs.eg.db")
>>
>>
>> Error in library("ORG.Hs.eg.db") :
>>   there is no package called 'ORG.Hs.eg.db'
>> In addition: Warning message:
>> Perhaps you meant 'org.Hs.eg.db' ?
>> ```
>>
>> This patch will be helpful with 'fat-finger' typos. It will match a package
>> called with `library` against installed packages.
>>
>>
>> svn diff:
>>
>> Index: src/library/base/R/library.R
>> ===================================================================
>> --- src/library/base/R/library.R    (revision 76727)
>> +++ src/library/base/R/library.R    (working copy)
>> @@ -300,8 +300,13 @@
>>         pkgpath <- find.package(package, lib.loc, quiet = TRUE,
>>                                     verbose = verbose)
>>             if(length(pkgpath) == 0L) {
>> -                if(length(lib.loc) && !logical.return)
>> +                if(length(lib.loc) && !logical.return) {
>> +                    allpkgs <- .packages(TRUE, lib.loc)
>> +                    if (!is.na(w <- match(tolower(package), tolower(allpkgs))))
>> +                        warning(sprintf("Perhaps you meant %s ?",
>> +                            sQuote(allpkgs[w])), call. = FALSE, domain = NA)
>>                     stop(packageNotFoundError(package, lib.loc, sys.call()))
>> +                }
>>                 txt <- if(length(lib.loc))
>>                     gettextf("there is no package called %s", sQuote(package))
>>                 else
>>
>>
>> Thank you!
>>
>> Best regards,
>>
>> Marcel
>>
>>
>>
>> --
>> Marcel Ramos
>> Bioconductor Core Team
>> Roswell Park Comprehensive Care Center
>> Dept. of Biostatistics & Bioinformatics
>> Elm & Carlton Streets
>> Buffalo, New York 14263
>>
>>
>> This email message may contain legally privileged and/or confidential information.  If you are not the intended recipient(s), or the employee or agent responsible for the delivery of this message to the intended recipient(s), you are hereby notified that any disclosure, copying, distribution, or use of this email message is prohibited.  If you have received this message in error, please notify the sender immediately by e-mail and delete this email message from your computer. Thank you.
>>         [[alternative HTML version deleted]]
>>
>> ______________________________________________
>> R-devel at r-project.org<mailto:R-devel at r-project.org> mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>
>>
>>
>>
>>
>>
>>
>> This email message may contain legally privileged and/or confidential information.  If you are not the intended recipient(s), or the employee or agent responsible for the delivery of this message to the intended recipient(s), you are hereby notified that any disclosure, copying, distribution, or use of this email message is prohibited.  If you have received this message in error, please notify the sender immediately by e-mail and delete this email message from your computer. Thank you.
>>         [[alternative HTML version deleted]]
>>
>> ______________________________________________
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel
>

-- 
Luke Tierney
Ralph E. Wareham Professor of Mathematical Sciences
University of Iowa                  Phone:             319-335-3386
Department of Statistics and        Fax:               319-335-3017
    Actuarial Science
241 Schaeffer Hall                  email:   luke-tierney at uiowa.edu
Iowa City, IA 52242                 WWW:  http://www.stat.uiowa.edu


From henr|k@bengt@@on @end|ng |rom gm@||@com  Sat Jun 22 18:49:17 2019
From: henr|k@bengt@@on @end|ng |rom gm@||@com (Henrik Bengtsson)
Date: Sat, 22 Jun 2019 09:49:17 -0700
Subject: [Rd] methods package: A _R_CHECK_LENGTH_1_LOGIC2_=true error
Message-ID: <CAFDcVCQOWVr0p2e2HONOy9NvqPdpoAH=HPMOEP65K-N6UjhA2g@mail.gmail.com>

DISCLAIMER: I can not get this error with R --vanilla, so it only
occurs when some other package is also loaded.  I don't have time to
find to narrow that down for a reproducible example, but I believe the
following error in R 3.6.0:

> Sys.setenv("_R_CHECK_LENGTH_1_LOGIC2_" = "true")
> library(oligo)
Error in omittedSig && (signature[omittedSig] != "missing") :
  'length(x) = 4 > 1' in coercion to 'logical(1)'
Error: unable to load R code in package 'oligo'

is because of a '_R_CHECK_LENGTH_1_LOGIC2_=true' mistake in the
'methods' package.  Here's the patch:

$ svn diff src/library/methods/R/RMethodUtils.R &
[1] 1062
Index: src/library/methods/R/RMethodUtils.R
===================================================================
--- src/library/methods/R/RMethodUtils.R (revision 76731)
+++ src/library/methods/R/RMethodUtils.R (working copy)
@@ -343,7 +343,7 @@
              call. = TRUE, domain = NA)
     }
     else if(!all(signature[omittedSig] == "missing")) {
-        omittedSig <- omittedSig && (signature[omittedSig] != "missing")
+        omittedSig <- omittedSig & (signature[omittedSig] != "missing")
         .message("Note: ", .renderSignature(f, sig0),
                  gettextf("expanding the signature to include omitted
arguments in definition: %s",
                           paste(sigNames[omittedSig], "=
\"missing\"",collapse = ", ")))
[1]+  Done                    svn diff src/library/methods/R/RMethodUtils.R

Maybe still in time for R 3.6.1?

/Henrik


From @purd|e@@ @end|ng |rom gm@||@com  Sun Jun 23 02:38:07 2019
From: @purd|e@@ @end|ng |rom gm@||@com (Abby Spurdle)
Date: Sun, 23 Jun 2019 12:38:07 +1200
Subject: [Rd] head with non integer n returns confusing output
In-Reply-To: <CAEKh8ujebf5oKxWbSHLgyU1cNtbh7=U0dp6k_nne=-gUenUdgQ@mail.gmail.com>
References: <CAEKh8ujebf5oKxWbSHLgyU1cNtbh7=U0dp6k_nne=-gUenUdgQ@mail.gmail.com>
Message-ID: <CAB8pepwaapVkEVOhZYrU9HXs9iMRmx+H8CDXNY8Jb_fFxxgPYw@mail.gmail.com>

> `head()` returns a problematic output when a character is fed to its `n`
> parameter.
> this can lead to an unexpected and inconsistent result.
> I would suggest either using `as.integer` consistently on the input, or
> having a consistent error for all character input.

I use the head() and tail() functions, a lot.
I agree that the argument checking and argument handling is not as good as
it could be.

In march I posted the following thread:
https://stat.ethz.ch/pipermail/r-devel/2019-March/077512.html
https://stat.ethz.ch/pipermail/r-devel/2019-March/077527.html

Perhaps, head (1:10, "foo"), should return a clear error message...
Then it's up to the user to convert strings to integers, if that's want he
or she wants to do.

	[[alternative HTML version deleted]]


From bbo|ker @end|ng |rom gm@||@com  Sun Jun 23 10:39:51 2019
From: bbo|ker @end|ng |rom gm@||@com (Ben Bolker)
Date: Sun, 23 Jun 2019 04:39:51 -0400
Subject: [Rd] Calculation of e^{z^2/2} for a normal deviate z
In-Reply-To: <DB6P189MB058181A3D23F4EB37C3175B5A5E70@DB6P189MB0581.EURP189.PROD.OUTLOOK.COM>
References: <32da856c-a60a-974f-65ab-d7123e12e813@daqana.com>
 <23307.48529.773039.904392@stat.math.ethz.ch>
 <23307.49323.908367.788461@stat.math.ethz.ch>
 <CABtg=KkuVHoX1tZ=+Lr7mDFrXvn5zdf3+Wmqhnv58GXZJS2KwQ@mail.gmail.com>
 <f3388993-5e20-d7e5-346a-785d33fab27b@daqana.com>
 <DB6P189MB0581F101B909FA1E2ACC509DA51F0@DB6P189MB0581.EURP189.PROD.OUTLOOK.COM>
 <DB6P189MB0581A9E34BD18A3E06B8E725A5180@DB6P189MB0581.EURP189.PROD.OUTLOOK.COM>
 <DB6P189MB05813B949D25C28767CD8E5FA5E70@DB6P189MB0581.EURP189.PROD.OUTLOOK.COM>
 <8b926873-2fdf-4553-b62c-a928fbff70e9@sapo.pt>
 <DB6P189MB05810066BDE0B49EFBCFC73DA5E70@DB6P189MB0581.EURP189.PROD.OUTLOOK.COM>
 <34FAD6F0-ABCE-4965-858A-0F0616D451B6@gmail.com>
 <DB6P189MB058181A3D23F4EB37C3175B5A5E70@DB6P189MB0581.EURP189.PROD.OUTLOOK.COM>
Message-ID: <6925f9e4-38bf-d901-ff8c-4e690b450d23@gmail.com>


  I agree with many the sentiments about the wisdom of computing very
small p-values (although the example below may win some kind of a prize:
I've seen people talking about p-values of the order of 10^(-2000), but
never 10^(-(10^8)) !).  That said, there are a several tricks for
getting more reasonable sums of very small probabilities.  The first is
to scale the p-values by dividing the *largest* of the probabilities,
then do the (p/sum(p)) computation, then multiply the result (I'm sure
this is described/documented somewhere).  More generally, there are
methods for computing sums on the log scale, e.g.

https://docs.scipy.org/doc/scipy-0.14.0/reference/generated/scipy.misc.logsumexp.html

 I don't know where this has been implemented in the R ecosystem, but
this sort of computation is the basis of the "Brobdingnag" package for
operating on very large ("Brobdingnagian") and very small
("Lilliputian") numbers.


On 2019-06-21 6:58 p.m., jing hua zhao wrote:
> Hi Peter, Rui, Chrstophe and Gabriel,
> 
> Thanks for your inputs --  the use of qnorm(., log=TRUE) is a good point in line with pnorm with which we devised log(p)  as
> 
> log(2) + pnorm(-abs(z), lower.tail = TRUE, log.p = TRUE)
> 
> that could do really really well for large z compared to Rmpfr. Maybe I am asking too much since
> 
> z <-20000
>> Rmpfr::format(2*pnorm(mpfr(-abs(z),100),lower.tail=TRUE,log.p=FALSE))
> [1] "1.660579603192917090365313727164e-86858901"
> 
> already gives a rarely seen small p value. I gather I also need a multiple precision exp() and their sum since exp(z^2/2) is also a Bayes Factor so I  get log(x_i )/sum_i log(x_i) instead. To this point, I am obliged to clarify, see https://statgen.github.io/gwas-credible-sets/method/locuszoom-credible-sets.pdf.
> 
> I agree many feel geneticists go to far with small p values which I would have difficulty to argue againston the other hand it is also expected to see these in a non-genetic context. For instance the Framingham study was established in 1948 just got $34m for six years on phenotypewide association which we would be interesting to see.
> 
> Best wishes,
> 
> 
> Jing Hua
> 
> 
> ________________________________
> From: peter dalgaard <pdalgd at gmail.com>
> Sent: 21 June 2019 16:24
> To: jing hua zhao
> Cc: Rui Barradas; r-devel at r-project.org
> Subject: Re: [Rd] Calculation of e^{z^2/2} for a normal deviate z
> 
> You may want to look into using the log option to qnorm
> 
> e.g., in round figures:
> 
>> log(1e-300)
> [1] -690.7755
>> qnorm(-691, log=TRUE)
> [1] -37.05315
>> exp(37^2/2)
> [1] 1.881797e+297
>> exp(-37^2/2)
> [1] 5.314068e-298
> 
> Notice that floating point representation cuts out at 1e+/-308 or so. If you want to go outside that range, you may need explicit manipulation of the log values. qnorm() itself seems quite happy with much smaller values:
> 
>> qnorm(-5000, log=TRUE)
> [1] -99.94475
> 
> -pd
> 
>> On 21 Jun 2019, at 17:11 , jing hua zhao <jinghuazhao at hotmail.com> wrote:
>>
>> Dear Rui,
>>
>> Thanks for your quick reply -- this allows me to see the bottom of this. I was hoping we could have a handle of those p in genmoics such as 1e-300 or smaller.
>>
>> Best wishes,
>>
>>
>> Jing Hua
>>
>> ________________________________
>> From: Rui Barradas <ruipbarradas at sapo.pt>
>> Sent: 21 June 2019 15:03
>> To: jing hua zhao; r-devel at r-project.org
>> Subject: Re: [Rd] Calculation of e^{z^2/2} for a normal deviate z
>>
>> Hello,
>>
>> Well, try it:
>>
>> p <- .Machine$double.eps^seq(0.5, 1, by = 0.05)
>> z <- qnorm(p/2)
>>
>> pnorm(z)
>> # [1] 7.450581e-09 1.228888e-09 2.026908e-10 3.343152e-11 5.514145e-12
>> # [6] 9.094947e-13 1.500107e-13 2.474254e-14 4.080996e-15 6.731134e-16
>> #[11] 1.110223e-16
>> p/2
>> # [1] 7.450581e-09 1.228888e-09 2.026908e-10 3.343152e-11 5.514145e-12
>> # [6] 9.094947e-13 1.500107e-13 2.474254e-14 4.080996e-15 6.731134e-16
>> #[11] 1.110223e-16
>>
>> exp(z*z/2)
>> # [1] 9.184907e+06 5.301421e+07 3.073154e+08 1.787931e+09 1.043417e+10
>> # [6] 6.105491e+10 3.580873e+11 2.104460e+12 1.239008e+13 7.306423e+13
>> #[11] 4.314798e+14
>>
>>
>> p is the smallest possible such that 1 + p != 1 and I couldn't find
>> anything to worry about.
>>
>>
>> R version 3.6.0 (2019-04-26)
>> Platform: x86_64-pc-linux-gnu (64-bit)
>> Running under: Ubuntu 19.04
>>
>> Matrix products: default
>> BLAS:   /usr/lib/x86_64-linux-gnu/blas/libblas.so.3.8.0
>> LAPACK: /usr/lib/x86_64-linux-gnu/lapack/liblapack.so.3.8.0
>>
>> locale:
>>  [1] LC_CTYPE=pt_PT.UTF-8       LC_NUMERIC=C
>>  [3] LC_TIME=pt_PT.UTF-8        LC_COLLATE=pt_PT.UTF-8
>>  [5] LC_MONETARY=pt_PT.UTF-8    LC_MESSAGES=pt_PT.UTF-8
>>  [7] LC_PAPER=pt_PT.UTF-8       LC_NAME=C
>>  [9] LC_ADDRESS=C               LC_TELEPHONE=C
>> [11] LC_MEASUREMENT=pt_PT.UTF-8 LC_IDENTIFICATION=C
>>
>> attached base packages:
>> [1] stats     graphics  grDevices utils     datasets  methods
>> [7] base
>>
>> other attached packages:
>>
>> [many packages loaded]
>>
>>
>> Hope this helps,
>>
>> Rui Barradas
>>
>> ?s 15:24 de 21/06/19, jing hua zhao escreveu:
>>> Dear R-developers,
>>>
>>> I am keen to calculate exp(z*z/2) with z=qnorm(p/2) and p is very small. I wonder if anyone has experience with this?
>>>
>>> Thanks very much in advance,
>>>
>>>
>>> Jing Hua
>>>
>>>       [[alternative HTML version deleted]]
>>>
>>> ______________________________________________
>>> R-devel at r-project.org mailing list
>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>>
>>
>>        [[alternative HTML version deleted]]
>>
>> ______________________________________________
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel
> 
> --
> Peter Dalgaard, Professor,
> Center for Statistics, Copenhagen Business School
> Solbjerg Plads 3, 2000 Frederiksberg, Denmark
> Phone: (+45)38153501
> Office: A 4.23
> Email: pd.mes at cbs.dk  Priv: PDalgd at gmail.com
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 	[[alternative HTML version deleted]]
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>


From pd@|gd @end|ng |rom gm@||@com  Sun Jun 23 10:53:57 2019
From: pd@|gd @end|ng |rom gm@||@com (peter dalgaard)
Date: Sun, 23 Jun 2019 10:53:57 +0200
Subject: [Rd] methods package: A _R_CHECK_LENGTH_1_LOGIC2_=true error
In-Reply-To: <CAFDcVCQOWVr0p2e2HONOy9NvqPdpoAH=HPMOEP65K-N6UjhA2g@mail.gmail.com>
References: <CAFDcVCQOWVr0p2e2HONOy9NvqPdpoAH=HPMOEP65K-N6UjhA2g@mail.gmail.com>
Message-ID: <67D2E7FE-74E3-4379-B9FB-C4028AB808DF@gmail.com>

This looks obvious enough, so I just committed your fix to R-devel and R-patched.

I'm at the wrong machine for thorough testing, but at least it seems to build OK. However, I sense some risk that this could uncover sleeping bugs elsewhere, so watch out.

-pd

> On 22 Jun 2019, at 18:49 , Henrik Bengtsson <henrik.bengtsson at gmail.com> wrote:
> 
> DISCLAIMER: I can not get this error with R --vanilla, so it only
> occurs when some other package is also loaded.  I don't have time to
> find to narrow that down for a reproducible example, but I believe the
> following error in R 3.6.0:
> 
>> Sys.setenv("_R_CHECK_LENGTH_1_LOGIC2_" = "true")
>> library(oligo)
> Error in omittedSig && (signature[omittedSig] != "missing") :
>  'length(x) = 4 > 1' in coercion to 'logical(1)'
> Error: unable to load R code in package 'oligo'
> 
> is because of a '_R_CHECK_LENGTH_1_LOGIC2_=true' mistake in the
> 'methods' package.  Here's the patch:
> 
> $ svn diff src/library/methods/R/RMethodUtils.R &
> [1] 1062
> Index: src/library/methods/R/RMethodUtils.R
> ===================================================================
> --- src/library/methods/R/RMethodUtils.R (revision 76731)
> +++ src/library/methods/R/RMethodUtils.R (working copy)
> @@ -343,7 +343,7 @@
>              call. = TRUE, domain = NA)
>     }
>     else if(!all(signature[omittedSig] == "missing")) {
> -        omittedSig <- omittedSig && (signature[omittedSig] != "missing")
> +        omittedSig <- omittedSig & (signature[omittedSig] != "missing")
>         .message("Note: ", .renderSignature(f, sig0),
>                  gettextf("expanding the signature to include omitted
> arguments in definition: %s",
>                           paste(sigNames[omittedSig], "=
> \"missing\"",collapse = ", ")))
> [1]+  Done                    svn diff src/library/methods/R/RMethodUtils.R
> 
> Maybe still in time for R 3.6.1?
> 
> /Henrik
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel

-- 
Peter Dalgaard, Professor,
Center for Statistics, Copenhagen Business School
Solbjerg Plads 3, 2000 Frederiksberg, Denmark
Phone: (+45)38153501
Office: A 4.23
Email: pd.mes at cbs.dk  Priv: PDalgd at gmail.com


From wdun|@p @end|ng |rom t|bco@com  Sun Jun 23 19:34:47 2019
From: wdun|@p @end|ng |rom t|bco@com (William Dunlap)
Date: Sun, 23 Jun 2019 10:34:47 -0700
Subject: [Rd] Calculation of e^{z^2/2} for a normal deviate z
In-Reply-To: <6925f9e4-38bf-d901-ff8c-4e690b450d23@gmail.com>
References: <32da856c-a60a-974f-65ab-d7123e12e813@daqana.com>
 <23307.48529.773039.904392@stat.math.ethz.ch>
 <23307.49323.908367.788461@stat.math.ethz.ch>
 <CABtg=KkuVHoX1tZ=+Lr7mDFrXvn5zdf3+Wmqhnv58GXZJS2KwQ@mail.gmail.com>
 <f3388993-5e20-d7e5-346a-785d33fab27b@daqana.com>
 <DB6P189MB0581F101B909FA1E2ACC509DA51F0@DB6P189MB0581.EURP189.PROD.OUTLOOK.COM>
 <DB6P189MB0581A9E34BD18A3E06B8E725A5180@DB6P189MB0581.EURP189.PROD.OUTLOOK.COM>
 <DB6P189MB05813B949D25C28767CD8E5FA5E70@DB6P189MB0581.EURP189.PROD.OUTLOOK.COM>
 <8b926873-2fdf-4553-b62c-a928fbff70e9@sapo.pt>
 <DB6P189MB05810066BDE0B49EFBCFC73DA5E70@DB6P189MB0581.EURP189.PROD.OUTLOOK.COM>
 <34FAD6F0-ABCE-4965-858A-0F0616D451B6@gmail.com>
 <DB6P189MB058181A3D23F4EB37C3175B5A5E70@DB6P189MB0581.EURP189.PROD.OUTLOOK.COM>
 <6925f9e4-38bf-d901-ff8c-4e690b450d23@gmail.com>
Message-ID: <CAF8bMca=jxkYbHrcjH-TJFtJf2u4KfiKmkFQQFoPx7=-1m4akw@mail.gmail.com>

include/Rmath.h declares a set of 'logspace' functions for use at the C
level.  I don't think there are core R functions that call them.

/* Compute the log of a sum or difference from logs of terms, i.e.,
 *
 *     log (exp (logx) + exp (logy))
 * or  log (exp (logx) - exp (logy))
 *
 * without causing overflows or throwing away too much accuracy:
 */
double  Rf_logspace_add(double logx, double logy);
double  Rf_logspace_sub(double logx, double logy);
double  Rf_logspace_sum(const double *logx, int nx);

Bill Dunlap
TIBCO Software
wdunlap tibco.com


On Sun, Jun 23, 2019 at 1:40 AM Ben Bolker <bbolker at gmail.com> wrote:

>
>   I agree with many the sentiments about the wisdom of computing very
> small p-values (although the example below may win some kind of a prize:
> I've seen people talking about p-values of the order of 10^(-2000), but
> never 10^(-(10^8)) !).  That said, there are a several tricks for
> getting more reasonable sums of very small probabilities.  The first is
> to scale the p-values by dividing the *largest* of the probabilities,
> then do the (p/sum(p)) computation, then multiply the result (I'm sure
> this is described/documented somewhere).  More generally, there are
> methods for computing sums on the log scale, e.g.
>
>
> https://docs.scipy.org/doc/scipy-0.14.0/reference/generated/scipy.misc.logsumexp.html
>
>  I don't know where this has been implemented in the R ecosystem, but
> this sort of computation is the basis of the "Brobdingnag" package for
> operating on very large ("Brobdingnagian") and very small
> ("Lilliputian") numbers.
>
>
> On 2019-06-21 6:58 p.m., jing hua zhao wrote:
> > Hi Peter, Rui, Chrstophe and Gabriel,
> >
> > Thanks for your inputs --  the use of qnorm(., log=TRUE) is a good point
> in line with pnorm with which we devised log(p)  as
> >
> > log(2) + pnorm(-abs(z), lower.tail = TRUE, log.p = TRUE)
> >
> > that could do really really well for large z compared to Rmpfr. Maybe I
> am asking too much since
> >
> > z <-20000
> >> Rmpfr::format(2*pnorm(mpfr(-abs(z),100),lower.tail=TRUE,log.p=FALSE))
> > [1] "1.660579603192917090365313727164e-86858901"
> >
> > already gives a rarely seen small p value. I gather I also need a
> multiple precision exp() and their sum since exp(z^2/2) is also a Bayes
> Factor so I  get log(x_i )/sum_i log(x_i) instead. To this point, I am
> obliged to clarify, see
> https://statgen.github.io/gwas-credible-sets/method/locuszoom-credible-sets.pdf
> .
> >
> > I agree many feel geneticists go to far with small p values which I
> would have difficulty to argue againston the other hand it is also expected
> to see these in a non-genetic context. For instance the Framingham study
> was established in 1948 just got $34m for six years on phenotypewide
> association which we would be interesting to see.
> >
> > Best wishes,
> >
> >
> > Jing Hua
> >
> >
> > ________________________________
> > From: peter dalgaard <pdalgd at gmail.com>
> > Sent: 21 June 2019 16:24
> > To: jing hua zhao
> > Cc: Rui Barradas; r-devel at r-project.org
> > Subject: Re: [Rd] Calculation of e^{z^2/2} for a normal deviate z
> >
> > You may want to look into using the log option to qnorm
> >
> > e.g., in round figures:
> >
> >> log(1e-300)
> > [1] -690.7755
> >> qnorm(-691, log=TRUE)
> > [1] -37.05315
> >> exp(37^2/2)
> > [1] 1.881797e+297
> >> exp(-37^2/2)
> > [1] 5.314068e-298
> >
> > Notice that floating point representation cuts out at 1e+/-308 or so. If
> you want to go outside that range, you may need explicit manipulation of
> the log values. qnorm() itself seems quite happy with much smaller values:
> >
> >> qnorm(-5000, log=TRUE)
> > [1] -99.94475
> >
> > -pd
> >
> >> On 21 Jun 2019, at 17:11 , jing hua zhao <jinghuazhao at hotmail.com>
> wrote:
> >>
> >> Dear Rui,
> >>
> >> Thanks for your quick reply -- this allows me to see the bottom of
> this. I was hoping we could have a handle of those p in genmoics such as
> 1e-300 or smaller.
> >>
> >> Best wishes,
> >>
> >>
> >> Jing Hua
> >>
> >> ________________________________
> >> From: Rui Barradas <ruipbarradas at sapo.pt>
> >> Sent: 21 June 2019 15:03
> >> To: jing hua zhao; r-devel at r-project.org
> >> Subject: Re: [Rd] Calculation of e^{z^2/2} for a normal deviate z
> >>
> >> Hello,
> >>
> >> Well, try it:
> >>
> >> p <- .Machine$double.eps^seq(0.5, 1, by = 0.05)
> >> z <- qnorm(p/2)
> >>
> >> pnorm(z)
> >> # [1] 7.450581e-09 1.228888e-09 2.026908e-10 3.343152e-11 5.514145e-12
> >> # [6] 9.094947e-13 1.500107e-13 2.474254e-14 4.080996e-15 6.731134e-16
> >> #[11] 1.110223e-16
> >> p/2
> >> # [1] 7.450581e-09 1.228888e-09 2.026908e-10 3.343152e-11 5.514145e-12
> >> # [6] 9.094947e-13 1.500107e-13 2.474254e-14 4.080996e-15 6.731134e-16
> >> #[11] 1.110223e-16
> >>
> >> exp(z*z/2)
> >> # [1] 9.184907e+06 5.301421e+07 3.073154e+08 1.787931e+09 1.043417e+10
> >> # [6] 6.105491e+10 3.580873e+11 2.104460e+12 1.239008e+13 7.306423e+13
> >> #[11] 4.314798e+14
> >>
> >>
> >> p is the smallest possible such that 1 + p != 1 and I couldn't find
> >> anything to worry about.
> >>
> >>
> >> R version 3.6.0 (2019-04-26)
> >> Platform: x86_64-pc-linux-gnu (64-bit)
> >> Running under: Ubuntu 19.04
> >>
> >> Matrix products: default
> >> BLAS:   /usr/lib/x86_64-linux-gnu/blas/libblas.so.3.8.0
> >> LAPACK: /usr/lib/x86_64-linux-gnu/lapack/liblapack.so.3.8.0
> >>
> >> locale:
> >>  [1] LC_CTYPE=pt_PT.UTF-8       LC_NUMERIC=C
> >>  [3] LC_TIME=pt_PT.UTF-8        LC_COLLATE=pt_PT.UTF-8
> >>  [5] LC_MONETARY=pt_PT.UTF-8    LC_MESSAGES=pt_PT.UTF-8
> >>  [7] LC_PAPER=pt_PT.UTF-8       LC_NAME=C
> >>  [9] LC_ADDRESS=C               LC_TELEPHONE=C
> >> [11] LC_MEASUREMENT=pt_PT.UTF-8 LC_IDENTIFICATION=C
> >>
> >> attached base packages:
> >> [1] stats     graphics  grDevices utils     datasets  methods
> >> [7] base
> >>
> >> other attached packages:
> >>
> >> [many packages loaded]
> >>
> >>
> >> Hope this helps,
> >>
> >> Rui Barradas
> >>
> >> ?s 15:24 de 21/06/19, jing hua zhao escreveu:
> >>> Dear R-developers,
> >>>
> >>> I am keen to calculate exp(z*z/2) with z=qnorm(p/2) and p is very
> small. I wonder if anyone has experience with this?
> >>>
> >>> Thanks very much in advance,
> >>>
> >>>
> >>> Jing Hua
> >>>
> >>>       [[alternative HTML version deleted]]
> >>>
> >>> ______________________________________________
> >>> R-devel at r-project.org mailing list
> >>> https://stat.ethz.ch/mailman/listinfo/r-devel
> >>>
> >>
> >>        [[alternative HTML version deleted]]
> >>
> >> ______________________________________________
> >> R-devel at r-project.org mailing list
> >> https://stat.ethz.ch/mailman/listinfo/r-devel
> >
> > --
> > Peter Dalgaard, Professor,
> > Center for Statistics, Copenhagen Business School
> > Solbjerg Plads 3, 2000 Frederiksberg, Denmark
> > Phone: (+45)38153501
> > Office: A 4.23
> > Email: pd.mes at cbs.dk  Priv: PDalgd at gmail.com
> >
> >
> >
> >
> >
> >
> >
> >
> >
> >
> >       [[alternative HTML version deleted]]
> >
> > ______________________________________________
> > R-devel at r-project.org mailing list
> > https://stat.ethz.ch/mailman/listinfo/r-devel
> >
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>

	[[alternative HTML version deleted]]


From henr|k@bengt@@on @end|ng |rom gm@||@com  Sun Jun 23 20:29:58 2019
From: henr|k@bengt@@on @end|ng |rom gm@||@com (Henrik Bengtsson)
Date: Sun, 23 Jun 2019 11:29:58 -0700
Subject: [Rd] methods package: A _R_CHECK_LENGTH_1_LOGIC2_=true error
In-Reply-To: <67D2E7FE-74E3-4379-B9FB-C4028AB808DF@gmail.com>
References: <CAFDcVCQOWVr0p2e2HONOy9NvqPdpoAH=HPMOEP65K-N6UjhA2g@mail.gmail.com>
 <67D2E7FE-74E3-4379-B9FB-C4028AB808DF@gmail.com>
Message-ID: <CAFDcVCTARMfrJRs-KiS5UiSo=SoU8+TgPh_KE+e-zFRR0eCSFQ@mail.gmail.com>

Thank you.

To correct myself, I can indeed reproduce this with R --vanilla too.
A reproducible example is:

$ R --vanilla
R version 3.6.0 Patched (2019-05-31 r76629) -- "Planting of a Tree"
...
> Sys.setenv("_R_CHECK_LENGTH_1_LOGIC2_" = "true")
> loadNamespace("oligo")
Error in omittedSig && (signature[omittedSig] != "missing") :
  'length(x) = 4 > 1' in coercion to 'logical(1)'
Error: unable to load R code in package ?oligo?

/Henrik

On Sun, Jun 23, 2019 at 1:54 AM peter dalgaard <pdalgd at gmail.com> wrote:
>
> This looks obvious enough, so I just committed your fix to R-devel and R-patched.
>
> I'm at the wrong machine for thorough testing, but at least it seems to build OK. However, I sense some risk that this could uncover sleeping bugs elsewhere, so watch out.
>
> -pd
>
> > On 22 Jun 2019, at 18:49 , Henrik Bengtsson <henrik.bengtsson at gmail.com> wrote:
> >
> > DISCLAIMER: I can not get this error with R --vanilla, so it only
> > occurs when some other package is also loaded.  I don't have time to
> > find to narrow that down for a reproducible example, but I believe the
> > following error in R 3.6.0:
> >
> >> Sys.setenv("_R_CHECK_LENGTH_1_LOGIC2_" = "true")
> >> library(oligo)
> > Error in omittedSig && (signature[omittedSig] != "missing") :
> >  'length(x) = 4 > 1' in coercion to 'logical(1)'
> > Error: unable to load R code in package 'oligo'
> >
> > is because of a '_R_CHECK_LENGTH_1_LOGIC2_=true' mistake in the
> > 'methods' package.  Here's the patch:
> >
> > $ svn diff src/library/methods/R/RMethodUtils.R &
> > [1] 1062
> > Index: src/library/methods/R/RMethodUtils.R
> > ===================================================================
> > --- src/library/methods/R/RMethodUtils.R (revision 76731)
> > +++ src/library/methods/R/RMethodUtils.R (working copy)
> > @@ -343,7 +343,7 @@
> >              call. = TRUE, domain = NA)
> >     }
> >     else if(!all(signature[omittedSig] == "missing")) {
> > -        omittedSig <- omittedSig && (signature[omittedSig] != "missing")
> > +        omittedSig <- omittedSig & (signature[omittedSig] != "missing")
> >         .message("Note: ", .renderSignature(f, sig0),
> >                  gettextf("expanding the signature to include omitted
> > arguments in definition: %s",
> >                           paste(sigNames[omittedSig], "=
> > \"missing\"",collapse = ", ")))
> > [1]+  Done                    svn diff src/library/methods/R/RMethodUtils.R
> >
> > Maybe still in time for R 3.6.1?
> >
> > /Henrik
> >
> > ______________________________________________
> > R-devel at r-project.org mailing list
> > https://stat.ethz.ch/mailman/listinfo/r-devel
>
> --
> Peter Dalgaard, Professor,
> Center for Statistics, Copenhagen Business School
> Solbjerg Plads 3, 2000 Frederiksberg, Denmark
> Phone: (+45)38153501
> Office: A 4.23
> Email: pd.mes at cbs.dk  Priv: PDalgd at gmail.com
>
>
>
>
>
>
>
>
>


From @pencer@gr@ve@ @end|ng |rom prod@y@e@com  Mon Jun 24 06:37:53 2019
From: @pencer@gr@ve@ @end|ng |rom prod@y@e@com (Spencer Graves)
Date: Sun, 23 Jun 2019 23:37:53 -0500
Subject: [Rd] point size in svg
In-Reply-To: <63168c7a-07b5-3ee5-281e-1274a8b43f0f@comcast.net>
References: <2044e902-5440-678a-d845-d2d521ca428a@prodsyse.com>
 <63168c7a-07b5-3ee5-281e-1274a8b43f0f@comcast.net>
Message-ID: <e2425faa-ccad-d1bb-81e5-41142cab050e@prodsyse.com>

 ????? Thanks to Peter Langfelder and David Winsemius for their replies.


 ????? It must be Apple specific.? I transferred the R script with the 
svg files between my Mac and a Windows 7 machine.? The svg files created 
on the Windows machine displayed properly on both machines. The svg 
files created on the Mac showed the same tiny fonts on both machines.


 ????? Following David's suggestion, I tried 
svg('cex-svg-Helvetica.svg', family="Helvetica") and 
svg('cex-svg-serif.svg', family="serif") with otherwise the same script 
as before with the same results.


 ????? I will repost this to r-sig-mac R <r-sig-mac at r-project.org>.


 ????? Thanks again to Peter and David.
 ????? Spencer Graves


#? From the Windows system:
sessionInfo()
R version 3.5.2 (2018-12-20)
Platform: x86_64-w64-mingw32/x64 (64-bit)
Running under: Windows 7 x64 (build 7601) Service Pack 1

Matrix products: default

locale:
 ? [1] LC_COLLATE=English_United States.1252
[2] LC_CTYPE=English_United States.1252
[3] LC_MONETARY=English_United States.1252
[4] LC_NUMERIC=C
[5] LC_TIME=English_United States.1252

attached base packages:
 ? [1] stats???? graphics? grDevices utils???? datasets
[6] methods?? base

loaded via a namespace (and not attached):
 ? [1] compiler_3.5.2 tools_3.5.2??? yaml_2.2.0


On 2019-06-19 11:32, David Winsemius wrote:
>
> On 6/19/19 8:19 AM, Spencer Graves wrote:
>> Hello, All:
>>
>>
>> ????? I'm unable to control the font size in plots to svg. Consider 
>> the following:
>>
>>
>> svg('cex-svg.svg')
>> cex. <- 5
>> plot(1:2, cex.axis=cex.)
>> text(1:2, 1:2, c('as', 'DF'),
>> ????????? cex=cex.)
>> dev.off()
>>
>>
>> ????? When I open this in Gimp 2.10.4, the font size is tiny.? I also 
>> tried:
>>
>>
>> svg('cex-svg.svg', width=15, height=15, pointsize=24)
>> cex. <- 5
>> plot(1:2, cex.axis=cex.)
>> text(1:2, 1:2, c('as', 'DF'),
>> ????????? cex=cex.)
>> dev.off()
>>
>>
>> ????? What do I do to control the font size in svg?
>
>
> I'm unable to reproduce. (I get very large fonts in all three viewing 
> methods: Rstudio plot panel, ImageViewer and GIMP)
>
> Ubuntu 18.04
>
> R 3.15.2
>
> Gimp 2.10.12
>
>
> Looking at ?svg makes me think you should be looking at the Cairo 
> Fonts section of ?X11.
>
>
> Best;
>
> David.
>
>>
>>
>> ????? Thanks,
>> ????? Spencer Graves
>>
>>
>> sessionInfo()
>> R version 3.6.0 (2019-04-26)
>> Platform: x86_64-apple-darwin15.6.0 (64-bit)
>> Running under: macOS Mojave 10.14.5
>>
>> Matrix products: default
>> BLAS: 
>> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libBLAS.dylib
>> LAPACK: 
>> /Library/Frameworks/R.framework/Versions/3.6/Resources/lib/libRlapack.dylib
>>
>> locale:
>> [1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8
>>
>> attached base packages:
>> [1] stats???? graphics? grDevices utils???? datasets
>> [6] methods?? base
>>
>> other attached packages:
>> [1] Ecdat_0.3-2 Ecfun_0.2-1
>>
>> ______________________________________________
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>


From @oko| @end|ng |rom |n@@-tou|ou@e@|r  Mon Jun 24 10:00:43 2019
From: @oko| @end|ng |rom |n@@-tou|ou@e@|r (Serguei Sokol)
Date: Mon, 24 Jun 2019 10:00:43 +0200
Subject: [Rd] Calculation of e^{z^2/2} for a normal deviate z
In-Reply-To: <DB6P189MB058181A3D23F4EB37C3175B5A5E70@DB6P189MB0581.EURP189.PROD.OUTLOOK.COM>
References: <32da856c-a60a-974f-65ab-d7123e12e813@daqana.com>
 <23307.48529.773039.904392@stat.math.ethz.ch>
 <23307.49323.908367.788461@stat.math.ethz.ch>
 <CABtg=KkuVHoX1tZ=+Lr7mDFrXvn5zdf3+Wmqhnv58GXZJS2KwQ@mail.gmail.com>
 <f3388993-5e20-d7e5-346a-785d33fab27b@daqana.com>
 <DB6P189MB0581F101B909FA1E2ACC509DA51F0@DB6P189MB0581.EURP189.PROD.OUTLOOK.COM>
 <DB6P189MB0581A9E34BD18A3E06B8E725A5180@DB6P189MB0581.EURP189.PROD.OUTLOOK.COM>
 <DB6P189MB05813B949D25C28767CD8E5FA5E70@DB6P189MB0581.EURP189.PROD.OUTLOOK.COM>
 <8b926873-2fdf-4553-b62c-a928fbff70e9@sapo.pt>
 <DB6P189MB05810066BDE0B49EFBCFC73DA5E70@DB6P189MB0581.EURP189.PROD.OUTLOOK.COM>
 <34FAD6F0-ABCE-4965-858A-0F0616D451B6@gmail.com>
 <DB6P189MB058181A3D23F4EB37C3175B5A5E70@DB6P189MB0581.EURP189.PROD.OUTLOOK.COM>
Message-ID: <3819bc60-e2ff-fcfd-6d06-ecb72e43ec86@insa-toulouse.fr>

On 22/06/2019 00:58, jing hua zhao wrote:
> Hi Peter, Rui, Chrstophe and Gabriel,
>
> Thanks for your inputs --  the use of qnorm(., log=TRUE) is a good point
Another approach could be simply to note that a function defined as 
f(p)=exp(-z(p)^2/2) is regular around p=0 with f(0)=0.
It has roughly the shape of p*(2-p) for p \in [0; 1]. So we can 
calculate let say f(10^-10) with sufficient precision using Rmpfr and 
then use a linear approximation for p from [0, 10^-10]. After that a 
simple inverse gives us e^(z*z/2).

Serguei.

>   in line with pnorm with which we devised log(p)  as
>
> log(2) + pnorm(-abs(z), lower.tail = TRUE, log.p = TRUE)
>
> that could do really really well for large z compared to Rmpfr. Maybe I am asking too much since
>
> z <-20000
>> Rmpfr::format(2*pnorm(mpfr(-abs(z),100),lower.tail=TRUE,log.p=FALSE))
> [1] "1.660579603192917090365313727164e-86858901"
>
> already gives a rarely seen small p value. I gather I also need a multiple precision exp() and their sum since exp(z^2/2) is also a Bayes Factor so I  get log(x_i )/sum_i log(x_i) instead. To this point, I am obliged to clarify, see https://statgen.github.io/gwas-credible-sets/method/locuszoom-credible-sets.pdf.
>
> I agree many feel geneticists go to far with small p values which I would have difficulty to argue againston the other hand it is also expected to see these in a non-genetic context. For instance the Framingham study was established in 1948 just got $34m for six years on phenotypewide association which we would be interesting to see.
>
> Best wishes,
>
>
> Jing Hua
>
>
> ________________________________
> From: peter dalgaard <pdalgd at gmail.com>
> Sent: 21 June 2019 16:24
> To: jing hua zhao
> Cc: Rui Barradas; r-devel at r-project.org
> Subject: Re: [Rd] Calculation of e^{z^2/2} for a normal deviate z
>
> You may want to look into using the log option to qnorm
>
> e.g., in round figures:
>
>> log(1e-300)
> [1] -690.7755
>> qnorm(-691, log=TRUE)
> [1] -37.05315
>> exp(37^2/2)
> [1] 1.881797e+297
>> exp(-37^2/2)
> [1] 5.314068e-298
>
> Notice that floating point representation cuts out at 1e+/-308 or so. If you want to go outside that range, you may need explicit manipulation of the log values. qnorm() itself seems quite happy with much smaller values:
>
>> qnorm(-5000, log=TRUE)
> [1] -99.94475
>
> -pd
>
>> On 21 Jun 2019, at 17:11 , jing hua zhao <jinghuazhao at hotmail.com> wrote:
>>
>> Dear Rui,
>>
>> Thanks for your quick reply -- this allows me to see the bottom of this. I was hoping we could have a handle of those p in genmoics such as 1e-300 or smaller.
>>
>> Best wishes,
>>
>>
>> Jing Hua
>>
>> ________________________________
>> From: Rui Barradas <ruipbarradas at sapo.pt>
>> Sent: 21 June 2019 15:03
>> To: jing hua zhao; r-devel at r-project.org
>> Subject: Re: [Rd] Calculation of e^{z^2/2} for a normal deviate z
>>
>> Hello,
>>
>> Well, try it:
>>
>> p <- .Machine$double.eps^seq(0.5, 1, by = 0.05)
>> z <- qnorm(p/2)
>>
>> pnorm(z)
>> # [1] 7.450581e-09 1.228888e-09 2.026908e-10 3.343152e-11 5.514145e-12
>> # [6] 9.094947e-13 1.500107e-13 2.474254e-14 4.080996e-15 6.731134e-16
>> #[11] 1.110223e-16
>> p/2
>> # [1] 7.450581e-09 1.228888e-09 2.026908e-10 3.343152e-11 5.514145e-12
>> # [6] 9.094947e-13 1.500107e-13 2.474254e-14 4.080996e-15 6.731134e-16
>> #[11] 1.110223e-16
>>
>> exp(z*z/2)
>> # [1] 9.184907e+06 5.301421e+07 3.073154e+08 1.787931e+09 1.043417e+10
>> # [6] 6.105491e+10 3.580873e+11 2.104460e+12 1.239008e+13 7.306423e+13
>> #[11] 4.314798e+14
>>
>>
>> p is the smallest possible such that 1 + p != 1 and I couldn't find
>> anything to worry about.
>>
>>
>> R version 3.6.0 (2019-04-26)
>> Platform: x86_64-pc-linux-gnu (64-bit)
>> Running under: Ubuntu 19.04
>>
>> Matrix products: default
>> BLAS:   /usr/lib/x86_64-linux-gnu/blas/libblas.so.3.8.0
>> LAPACK: /usr/lib/x86_64-linux-gnu/lapack/liblapack.so.3.8.0
>>
>> locale:
>>   [1] LC_CTYPE=pt_PT.UTF-8       LC_NUMERIC=C
>>   [3] LC_TIME=pt_PT.UTF-8        LC_COLLATE=pt_PT.UTF-8
>>   [5] LC_MONETARY=pt_PT.UTF-8    LC_MESSAGES=pt_PT.UTF-8
>>   [7] LC_PAPER=pt_PT.UTF-8       LC_NAME=C
>>   [9] LC_ADDRESS=C               LC_TELEPHONE=C
>> [11] LC_MEASUREMENT=pt_PT.UTF-8 LC_IDENTIFICATION=C
>>
>> attached base packages:
>> [1] stats     graphics  grDevices utils     datasets  methods
>> [7] base
>>
>> other attached packages:
>>
>> [many packages loaded]
>>
>>
>> Hope this helps,
>>
>> Rui Barradas
>>
>> ?s 15:24 de 21/06/19, jing hua zhao escreveu:
>>> Dear R-developers,
>>>
>>> I am keen to calculate exp(z*z/2) with z=qnorm(p/2) and p is very small. I wonder if anyone has experience with this?
>>>
>>> Thanks very much in advance,
>>>
>>>
>>> Jing Hua
>>>
>>>        [[alternative HTML version deleted]]
>>>
>>> ______________________________________________
>>> R-devel at r-project.org mailing list
>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>>
>>         [[alternative HTML version deleted]]
>>
>> ______________________________________________
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel
> --
> Peter Dalgaard, Professor,
> Center for Statistics, Copenhagen Business School
> Solbjerg Plads 3, 2000 Frederiksberg, Denmark
> Phone: (+45)38153501
> Office: A 4.23
> Email: pd.mes at cbs.dk  Priv: PDalgd at gmail.com
>
>
>
>
>
>
>
>
>
>
> 	[[alternative HTML version deleted]]
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From m@ech|er @end|ng |rom @t@t@m@th@ethz@ch  Mon Jun 24 10:37:54 2019
From: m@ech|er @end|ng |rom @t@t@m@th@ethz@ch (Martin Maechler)
Date: Mon, 24 Jun 2019 10:37:54 +0200
Subject: [Rd] Calculation of e^{z^2/2} for a normal deviate z
In-Reply-To: <CAF8bMca=jxkYbHrcjH-TJFtJf2u4KfiKmkFQQFoPx7=-1m4akw@mail.gmail.com>
References: <32da856c-a60a-974f-65ab-d7123e12e813@daqana.com>
 <23307.48529.773039.904392@stat.math.ethz.ch>
 <23307.49323.908367.788461@stat.math.ethz.ch>
 <CABtg=KkuVHoX1tZ=+Lr7mDFrXvn5zdf3+Wmqhnv58GXZJS2KwQ@mail.gmail.com>
 <f3388993-5e20-d7e5-346a-785d33fab27b@daqana.com>
 <DB6P189MB0581F101B909FA1E2ACC509DA51F0@DB6P189MB0581.EURP189.PROD.OUTLOOK.COM>
 <DB6P189MB0581A9E34BD18A3E06B8E725A5180@DB6P189MB0581.EURP189.PROD.OUTLOOK.COM>
 <DB6P189MB05813B949D25C28767CD8E5FA5E70@DB6P189MB0581.EURP189.PROD.OUTLOOK.COM>
 <8b926873-2fdf-4553-b62c-a928fbff70e9@sapo.pt>
 <DB6P189MB05810066BDE0B49EFBCFC73DA5E70@DB6P189MB0581.EURP189.PROD.OUTLOOK.COM>
 <34FAD6F0-ABCE-4965-858A-0F0616D451B6@gmail.com>
 <DB6P189MB058181A3D23F4EB37C3175B5A5E70@DB6P189MB0581.EURP189.PROD.OUTLOOK.COM>
 <6925f9e4-38bf-d901-ff8c-4e690b450d23@gmail.com>
 <CAF8bMca=jxkYbHrcjH-TJFtJf2u4KfiKmkFQQFoPx7=-1m4akw@mail.gmail.com>
Message-ID: <23824.35810.330948.401893@stat.math.ethz.ch>

>>>>> William Dunlap via R-devel 
>>>>>     on Sun, 23 Jun 2019 10:34:47 -0700 writes:
>>>>> William Dunlap via R-devel 
>>>>>     on Sun, 23 Jun 2019 10:34:47 -0700 writes:

    > include/Rmath.h declares a set of 'logspace' functions for use at the C
    > level.  I don't think there are core R functions that call them.

    > /* Compute the log of a sum or difference from logs of terms, i.e.,
    > *
    > *     log (exp (logx) + exp (logy))
    > * or  log (exp (logx) - exp (logy))
    > *
    > * without causing overflows or throwing away too much accuracy:
    > */
    > double  Rf_logspace_add(double logx, double logy);
    > double  Rf_logspace_sub(double logx, double logy);
    > double  Rf_logspace_sum(const double *logx, int nx);

    > Bill Dunlap
    > TIBCO Software
    > wdunlap tibco.com

Yes, indeed, thank you, Bill!

But they *have* been in use by core R functions for a long time
in pgamma, pbeta and related functions.

[and I have had changes in *hyper.c where logspace_add() is used too, 
 for several years now (since 2015) but I no longer know which
 concrete accuracy problem that addresses, so have not yet committed it]


Martin Maechler
ETH Zurich and R Core Team



    > On Sun, Jun 23, 2019 at 1:40 AM Ben Bolker <bbolker at gmail.com> wrote:

    >> 
    >> I agree with many the sentiments about the wisdom of computing very
    >> small p-values (although the example below may win some kind of a prize:
    >> I've seen people talking about p-values of the order of 10^(-2000), but
    >> never 10^(-(10^8)) !).  That said, there are a several tricks for
    >> getting more reasonable sums of very small probabilities.  The first is
    >> to scale the p-values by dividing the *largest* of the probabilities,
    >> then do the (p/sum(p)) computation, then multiply the result (I'm sure
    >> this is described/documented somewhere).  More generally, there are
    >> methods for computing sums on the log scale, e.g.
    >> 
    >> 
    >> https://docs.scipy.org/doc/scipy-0.14.0/reference/generated/scipy.misc.logsumexp.html
    >> 
    >> I don't know where this has been implemented in the R ecosystem, but
    >> this sort of computation is the basis of the "Brobdingnag" package for
    >> operating on very large ("Brobdingnagian") and very small
    >> ("Lilliputian") numbers.
    >> 
    >> 
    >> On 2019-06-21 6:58 p.m., jing hua zhao wrote:
    >> > Hi Peter, Rui, Chrstophe and Gabriel,
    >> >
    >> > Thanks for your inputs --  the use of qnorm(., log=TRUE) is a good point
    >> in line with pnorm with which we devised log(p)  as
    >> >
    >> > log(2) + pnorm(-abs(z), lower.tail = TRUE, log.p = TRUE)
    >> >
    >> > that could do really really well for large z compared to Rmpfr. Maybe I
    >> am asking too much since
    >> >
    >> > z <-20000
    >> >> Rmpfr::format(2*pnorm(mpfr(-abs(z),100),lower.tail=TRUE,log.p=FALSE))
    >> > [1] "1.660579603192917090365313727164e-86858901"
    >> >
    >> > already gives a rarely seen small p value. I gather I also need a
    >> multiple precision exp() and their sum since exp(z^2/2) is also a Bayes
    >> Factor so I  get log(x_i )/sum_i log(x_i) instead. To this point, I am
    >> obliged to clarify, see
    >> https://statgen.github.io/gwas-credible-sets/method/locuszoom-credible-sets.pdf
    >> .
    >> >
    >> > I agree many feel geneticists go to far with small p values which I
    >> would have difficulty to argue againston the other hand it is also expected
    >> to see these in a non-genetic context. For instance the Framingham study
    >> was established in 1948 just got $34m for six years on phenotypewide
    >> association which we would be interesting to see.
    >> >
    >> > Best wishes,
    >> >
    >> >
    >> > Jing Hua
    >> >
    >> >
    >> > ________________________________
    >> > From: peter dalgaard <pdalgd at gmail.com>
    >> > Sent: 21 June 2019 16:24
    >> > To: jing hua zhao
    >> > Cc: Rui Barradas; r-devel at r-project.org
    >> > Subject: Re: [Rd] Calculation of e^{z^2/2} for a normal deviate z
    >> >
    >> > You may want to look into using the log option to qnorm
    >> >
    >> > e.g., in round figures:
    >> >
    >> >> log(1e-300)
    >> > [1] -690.7755
    >> >> qnorm(-691, log=TRUE)
    >> > [1] -37.05315
    >> >> exp(37^2/2)
    >> > [1] 1.881797e+297
    >> >> exp(-37^2/2)
    >> > [1] 5.314068e-298
    >> >
    >> > Notice that floating point representation cuts out at 1e+/-308 or so. If
    >> you want to go outside that range, you may need explicit manipulation of
    >> the log values. qnorm() itself seems quite happy with much smaller values:
    >> >
    >> >> qnorm(-5000, log=TRUE)
    >> > [1] -99.94475
    >> >
    >> > -pd
    >> >
    >> >> On 21 Jun 2019, at 17:11 , jing hua zhao <jinghuazhao at hotmail.com>
    >> wrote:
    >> >>
    >> >> Dear Rui,
    >> >>
    >> >> Thanks for your quick reply -- this allows me to see the bottom of
    >> this. I was hoping we could have a handle of those p in genmoics such as
    >> 1e-300 or smaller.
    >> >>
    >> >> Best wishes,
    >> >>
    >> >>
    >> >> Jing Hua
    >> >>
    >> >> ________________________________
    >> >> From: Rui Barradas <ruipbarradas at sapo.pt>
    >> >> Sent: 21 June 2019 15:03
    >> >> To: jing hua zhao; r-devel at r-project.org
    >> >> Subject: Re: [Rd] Calculation of e^{z^2/2} for a normal deviate z
    >> >>
    >> >> Hello,
    >> >>
    >> >> Well, try it:
    >> >>
    >> >> p <- .Machine$double.eps^seq(0.5, 1, by = 0.05)
    >> >> z <- qnorm(p/2)
    >> >>
    >> >> pnorm(z)
    >> >> # [1] 7.450581e-09 1.228888e-09 2.026908e-10 3.343152e-11 5.514145e-12
    >> >> # [6] 9.094947e-13 1.500107e-13 2.474254e-14 4.080996e-15 6.731134e-16
    >> >> #[11] 1.110223e-16
    >> >> p/2
    >> >> # [1] 7.450581e-09 1.228888e-09 2.026908e-10 3.343152e-11 5.514145e-12
    >> >> # [6] 9.094947e-13 1.500107e-13 2.474254e-14 4.080996e-15 6.731134e-16
    >> >> #[11] 1.110223e-16
    >> >>
    >> >> exp(z*z/2)
    >> >> # [1] 9.184907e+06 5.301421e+07 3.073154e+08 1.787931e+09 1.043417e+10
    >> >> # [6] 6.105491e+10 3.580873e+11 2.104460e+12 1.239008e+13 7.306423e+13
    >> >> #[11] 4.314798e+14
    >> >>
    >> >>
    >> >> p is the smallest possible such that 1 + p != 1 and I couldn't find
    >> >> anything to worry about.
    >> >>
    >> >>
    >> >> R version 3.6.0 (2019-04-26)
    >> >> Platform: x86_64-pc-linux-gnu (64-bit)
    >> >> Running under: Ubuntu 19.04
    >> >>
    >> >> Matrix products: default
    >> >> BLAS:   /usr/lib/x86_64-linux-gnu/blas/libblas.so.3.8.0
    >> >> LAPACK: /usr/lib/x86_64-linux-gnu/lapack/liblapack.so.3.8.0
    >> >>
    >> >> locale:
    >> >>  [1] LC_CTYPE=pt_PT.UTF-8       LC_NUMERIC=C
    >> >>  [3] LC_TIME=pt_PT.UTF-8        LC_COLLATE=pt_PT.UTF-8
    >> >>  [5] LC_MONETARY=pt_PT.UTF-8    LC_MESSAGES=pt_PT.UTF-8
    >> >>  [7] LC_PAPER=pt_PT.UTF-8       LC_NAME=C
    >> >>  [9] LC_ADDRESS=C               LC_TELEPHONE=C
    >> >> [11] LC_MEASUREMENT=pt_PT.UTF-8 LC_IDENTIFICATION=C
    >> >>
    >> >> attached base packages:
    >> >> [1] stats     graphics  grDevices utils     datasets  methods
    >> >> [7] base
    >> >>
    >> >> other attached packages:
    >> >>
    >> >> [many packages loaded]
    >> >>
    >> >>
    >> >> Hope this helps,
    >> >>
    >> >> Rui Barradas
    >> >>
    >> >> ?s 15:24 de 21/06/19, jing hua zhao escreveu:
    >> >>> Dear R-developers,
    >> >>>
    >> >>> I am keen to calculate exp(z*z/2) with z=qnorm(p/2) and p is very
    >> small. I wonder if anyone has experience with this?
    >> >>>
    >> >>> Thanks very much in advance,
    >> >>>
    >> >>>
    >> >>> Jing Hua
    >> >>>
    >> >>>       [[alternative HTML version deleted]]
    >> >>>
    >> >>> ______________________________________________
    >> >>> R-devel at r-project.org mailing list
    >> >>> https://stat.ethz.ch/mailman/listinfo/r-devel
    >> >>>
    >> >>
    >> >>        [[alternative HTML version deleted]]
    >> >>
    >> >> ______________________________________________
    >> >> R-devel at r-project.org mailing list
    >> >> https://stat.ethz.ch/mailman/listinfo/r-devel
    >> >
    >> > --
    >> > Peter Dalgaard, Professor,
    >> > Center for Statistics, Copenhagen Business School
    >> > Solbjerg Plads 3, 2000 Frederiksberg, Denmark
    >> > Phone: (+45)38153501
    >> > Office: A 4.23
    >> > Email: pd.mes at cbs.dk  Priv: PDalgd at gmail.com
    >> >
    >> >
    >> >
    >> >
    >> >
    >> >
    >> >
    >> >
    >> >
    >> >
    >> >       [[alternative HTML version deleted]]
    >> >
    >> > ______________________________________________
    >> > R-devel at r-project.org mailing list
    >> > https://stat.ethz.ch/mailman/listinfo/r-devel
    >> >
    >> 
    >> ______________________________________________
    >> R-devel at r-project.org mailing list
    >> https://stat.ethz.ch/mailman/listinfo/r-devel
    >> 

    > [[alternative HTML version deleted]]

    > ______________________________________________
    > R-devel at r-project.org mailing list
    > https://stat.ethz.ch/mailman/listinfo/r-devel


From j|nghu@zh@o @end|ng |rom hotm@||@com  Mon Jun 24 10:51:43 2019
From: j|nghu@zh@o @end|ng |rom hotm@||@com (jing hua zhao)
Date: Mon, 24 Jun 2019 08:51:43 +0000
Subject: [Rd] Calculation of e^{z^2/2} for a normal deviate z
In-Reply-To: <23824.35810.330948.401893@stat.math.ethz.ch>
References: <32da856c-a60a-974f-65ab-d7123e12e813@daqana.com>
 <23307.48529.773039.904392@stat.math.ethz.ch>
 <23307.49323.908367.788461@stat.math.ethz.ch>
 <CABtg=KkuVHoX1tZ=+Lr7mDFrXvn5zdf3+Wmqhnv58GXZJS2KwQ@mail.gmail.com>
 <f3388993-5e20-d7e5-346a-785d33fab27b@daqana.com>
 <DB6P189MB0581F101B909FA1E2ACC509DA51F0@DB6P189MB0581.EURP189.PROD.OUTLOOK.COM>
 <DB6P189MB0581A9E34BD18A3E06B8E725A5180@DB6P189MB0581.EURP189.PROD.OUTLOOK.COM>
 <DB6P189MB05813B949D25C28767CD8E5FA5E70@DB6P189MB0581.EURP189.PROD.OUTLOOK.COM>
 <8b926873-2fdf-4553-b62c-a928fbff70e9@sapo.pt>
 <DB6P189MB05810066BDE0B49EFBCFC73DA5E70@DB6P189MB0581.EURP189.PROD.OUTLOOK.COM>
 <34FAD6F0-ABCE-4965-858A-0F0616D451B6@gmail.com>
 <DB6P189MB058181A3D23F4EB37C3175B5A5E70@DB6P189MB0581.EURP189.PROD.OUTLOOK.COM>
 <6925f9e4-38bf-d901-ff8c-4e690b450d23@gmail.com>
 <CAF8bMca=jxkYbHrcjH-TJFtJf2u4KfiKmkFQQFoPx7=-1m4akw@mail.gmail.com>,
 <23824.35810.330948.401893@stat.math.ethz.ch>
Message-ID: <DB6P189MB0581CB7F9D31D6DD8DF14C77A5E00@DB6P189MB0581.EURP189.PROD.OUTLOOK.COM>

Hi All,

Thanks for all your comments which allows me to appreciate more of these in Python and R.

I just came across the matrixStats package,


## EXAMPLE #1
lx <- c(1000.01, 1000.02)
y0 <- log(sum(exp(lx)))
print(y0) ## Inf

y1 <- logSumExp(lx)
print(y1) ## 1000.708

and

> ly <- lx*100000
> ly
[1] 100001000 100002000
> y1 <- logSumExp(ly)
> print(y1)
[1] 100002000
> logSumExp
function (lx, idxs = NULL, na.rm = FALSE, ...)
{
    has_na <- TRUE
    .Call(C_logSumExp, as.numeric(lx), idxs, as.logical(na.rm),
        has_na)
}
<bytecode: 0x20c07a8>
<environment: namespace:matrixStats>

Maybe this is rather close?

Best wishes,


Jing Hua

________________________________
From: R-devel <r-devel-bounces at r-project.org> on behalf of Martin Maechler <maechler at stat.math.ethz.ch>
Sent: 24 June 2019 08:37
To: William Dunlap
Cc: r-devel at r-project.org
Subject: Re: [Rd] Calculation of e^{z^2/2} for a normal deviate z

>>>>> William Dunlap via R-devel
>>>>>     on Sun, 23 Jun 2019 10:34:47 -0700 writes:
>>>>> William Dunlap via R-devel
>>>>>     on Sun, 23 Jun 2019 10:34:47 -0700 writes:

    > include/Rmath.h declares a set of 'logspace' functions for use at the C
    > level.  I don't think there are core R functions that call them.

    > /* Compute the log of a sum or difference from logs of terms, i.e.,
    > *
    > *     log (exp (logx) + exp (logy))
    > * or  log (exp (logx) - exp (logy))
    > *
    > * without causing overflows or throwing away too much accuracy:
    > */
    > double  Rf_logspace_add(double logx, double logy);
    > double  Rf_logspace_sub(double logx, double logy);
    > double  Rf_logspace_sum(const double *logx, int nx);

    > Bill Dunlap
    > TIBCO Software
    > wdunlap tibco.com

Yes, indeed, thank you, Bill!

But they *have* been in use by core R functions for a long time
in pgamma, pbeta and related functions.

[and I have had changes in *hyper.c where logspace_add() is used too,
 for several years now (since 2015) but I no longer know which
 concrete accuracy problem that addresses, so have not yet committed it]


Martin Maechler
ETH Zurich and R Core Team



    > On Sun, Jun 23, 2019 at 1:40 AM Ben Bolker <bbolker at gmail.com> wrote:

    >>
    >> I agree with many the sentiments about the wisdom of computing very
    >> small p-values (although the example below may win some kind of a prize:
    >> I've seen people talking about p-values of the order of 10^(-2000), but
    >> never 10^(-(10^8)) !).  That said, there are a several tricks for
    >> getting more reasonable sums of very small probabilities.  The first is
    >> to scale the p-values by dividing the *largest* of the probabilities,
    >> then do the (p/sum(p)) computation, then multiply the result (I'm sure
    >> this is described/documented somewhere).  More generally, there are
    >> methods for computing sums on the log scale, e.g.
    >>
    >>
    >> https://docs.scipy.org/doc/scipy-0.14.0/reference/generated/scipy.misc.logsumexp.html
    >>
    >> I don't know where this has been implemented in the R ecosystem, but
    >> this sort of computation is the basis of the "Brobdingnag" package for
    >> operating on very large ("Brobdingnagian") and very small
    >> ("Lilliputian") numbers.
    >>
    >>
    >> On 2019-06-21 6:58 p.m., jing hua zhao wrote:
    >> > Hi Peter, Rui, Chrstophe and Gabriel,
    >> >
    >> > Thanks for your inputs --  the use of qnorm(., log=TRUE) is a good point
    >> in line with pnorm with which we devised log(p)  as
    >> >
    >> > log(2) + pnorm(-abs(z), lower.tail = TRUE, log.p = TRUE)
    >> >
    >> > that could do really really well for large z compared to Rmpfr. Maybe I
    >> am asking too much since
    >> >
    >> > z <-20000
    >> >> Rmpfr::format(2*pnorm(mpfr(-abs(z),100),lower.tail=TRUE,log.p=FALSE))
    >> > [1] "1.660579603192917090365313727164e-86858901"
    >> >
    >> > already gives a rarely seen small p value. I gather I also need a
    >> multiple precision exp() and their sum since exp(z^2/2) is also a Bayes
    >> Factor so I  get log(x_i )/sum_i log(x_i) instead. To this point, I am
    >> obliged to clarify, see
    >> https://statgen.github.io/gwas-credible-sets/method/locuszoom-credible-sets.pdf
    >> .
    >> >
    >> > I agree many feel geneticists go to far with small p values which I
    >> would have difficulty to argue againston the other hand it is also expected
    >> to see these in a non-genetic context. For instance the Framingham study
    >> was established in 1948 just got $34m for six years on phenotypewide
    >> association which we would be interesting to see.
    >> >
    >> > Best wishes,
    >> >
    >> >
    >> > Jing Hua
    >> >
    >> >
    >> > ________________________________
    >> > From: peter dalgaard <pdalgd at gmail.com>
    >> > Sent: 21 June 2019 16:24
    >> > To: jing hua zhao
    >> > Cc: Rui Barradas; r-devel at r-project.org
    >> > Subject: Re: [Rd] Calculation of e^{z^2/2} for a normal deviate z
    >> >
    >> > You may want to look into using the log option to qnorm
    >> >
    >> > e.g., in round figures:
    >> >
    >> >> log(1e-300)
    >> > [1] -690.7755
    >> >> qnorm(-691, log=TRUE)
    >> > [1] -37.05315
    >> >> exp(37^2/2)
    >> > [1] 1.881797e+297
    >> >> exp(-37^2/2)
    >> > [1] 5.314068e-298
    >> >
    >> > Notice that floating point representation cuts out at 1e+/-308 or so. If
    >> you want to go outside that range, you may need explicit manipulation of
    >> the log values. qnorm() itself seems quite happy with much smaller values:
    >> >
    >> >> qnorm(-5000, log=TRUE)
    >> > [1] -99.94475
    >> >
    >> > -pd
    >> >
    >> >> On 21 Jun 2019, at 17:11 , jing hua zhao <jinghuazhao at hotmail.com>
    >> wrote:
    >> >>
    >> >> Dear Rui,
    >> >>
    >> >> Thanks for your quick reply -- this allows me to see the bottom of
    >> this. I was hoping we could have a handle of those p in genmoics such as
    >> 1e-300 or smaller.
    >> >>
    >> >> Best wishes,
    >> >>
    >> >>
    >> >> Jing Hua
    >> >>
    >> >> ________________________________
    >> >> From: Rui Barradas <ruipbarradas at sapo.pt>
    >> >> Sent: 21 June 2019 15:03
    >> >> To: jing hua zhao; r-devel at r-project.org
    >> >> Subject: Re: [Rd] Calculation of e^{z^2/2} for a normal deviate z
    >> >>
    >> >> Hello,
    >> >>
    >> >> Well, try it:
    >> >>
    >> >> p <- .Machine$double.eps^seq(0.5, 1, by = 0.05)
    >> >> z <- qnorm(p/2)
    >> >>
    >> >> pnorm(z)
    >> >> # [1] 7.450581e-09 1.228888e-09 2.026908e-10 3.343152e-11 5.514145e-12
    >> >> # [6] 9.094947e-13 1.500107e-13 2.474254e-14 4.080996e-15 6.731134e-16
    >> >> #[11] 1.110223e-16
    >> >> p/2
    >> >> # [1] 7.450581e-09 1.228888e-09 2.026908e-10 3.343152e-11 5.514145e-12
    >> >> # [6] 9.094947e-13 1.500107e-13 2.474254e-14 4.080996e-15 6.731134e-16
    >> >> #[11] 1.110223e-16
    >> >>
    >> >> exp(z*z/2)
    >> >> # [1] 9.184907e+06 5.301421e+07 3.073154e+08 1.787931e+09 1.043417e+10
    >> >> # [6] 6.105491e+10 3.580873e+11 2.104460e+12 1.239008e+13 7.306423e+13
    >> >> #[11] 4.314798e+14
    >> >>
    >> >>
    >> >> p is the smallest possible such that 1 + p != 1 and I couldn't find
    >> >> anything to worry about.
    >> >>
    >> >>
    >> >> R version 3.6.0 (2019-04-26)
    >> >> Platform: x86_64-pc-linux-gnu (64-bit)
    >> >> Running under: Ubuntu 19.04
    >> >>
    >> >> Matrix products: default
    >> >> BLAS:   /usr/lib/x86_64-linux-gnu/blas/libblas.so.3.8.0
    >> >> LAPACK: /usr/lib/x86_64-linux-gnu/lapack/liblapack.so.3.8.0
    >> >>
    >> >> locale:
    >> >>  [1] LC_CTYPE=pt_PT.UTF-8       LC_NUMERIC=C
    >> >>  [3] LC_TIME=pt_PT.UTF-8        LC_COLLATE=pt_PT.UTF-8
    >> >>  [5] LC_MONETARY=pt_PT.UTF-8    LC_MESSAGES=pt_PT.UTF-8
    >> >>  [7] LC_PAPER=pt_PT.UTF-8       LC_NAME=C
    >> >>  [9] LC_ADDRESS=C               LC_TELEPHONE=C
    >> >> [11] LC_MEASUREMENT=pt_PT.UTF-8 LC_IDENTIFICATION=C
    >> >>
    >> >> attached base packages:
    >> >> [1] stats     graphics  grDevices utils     datasets  methods
    >> >> [7] base
    >> >>
    >> >> other attached packages:
    >> >>
    >> >> [many packages loaded]
    >> >>
    >> >>
    >> >> Hope this helps,
    >> >>
    >> >> Rui Barradas
    >> >>
    >> >> ?s 15:24 de 21/06/19, jing hua zhao escreveu:
    >> >>> Dear R-developers,
    >> >>>
    >> >>> I am keen to calculate exp(z*z/2) with z=qnorm(p/2) and p is very
    >> small. I wonder if anyone has experience with this?
    >> >>>
    >> >>> Thanks very much in advance,
    >> >>>
    >> >>>
    >> >>> Jing Hua
    >> >>>
    >> >>>       [[alternative HTML version deleted]]
    >> >>>
    >> >>> ______________________________________________
    >> >>> R-devel at r-project.org mailing list
    >> >>> https://stat.ethz.ch/mailman/listinfo/r-devel
    >> >>>
    >> >>
    >> >>        [[alternative HTML version deleted]]
    >> >>
    >> >> ______________________________________________
    >> >> R-devel at r-project.org mailing list
    >> >> https://stat.ethz.ch/mailman/listinfo/r-devel
    >> >
    >> > --
    >> > Peter Dalgaard, Professor,
    >> > Center for Statistics, Copenhagen Business School
    >> > Solbjerg Plads 3, 2000 Frederiksberg, Denmark
    >> > Phone: (+45)38153501
    >> > Office: A 4.23
    >> > Email: pd.mes at cbs.dk  Priv: PDalgd at gmail.com
    >> >
    >> >
    >> >
    >> >
    >> >
    >> >
    >> >
    >> >
    >> >
    >> >
    >> >       [[alternative HTML version deleted]]
    >> >
    >> > ______________________________________________
    >> > R-devel at r-project.org mailing list
    >> > https://stat.ethz.ch/mailman/listinfo/r-devel
    >> >
    >>
    >> ______________________________________________
    >> R-devel at r-project.org mailing list
    >> https://stat.ethz.ch/mailman/listinfo/r-devel
    >>

    > [[alternative HTML version deleted]]

    > ______________________________________________
    > R-devel at r-project.org mailing list
    > https://stat.ethz.ch/mailman/listinfo/r-devel

______________________________________________
R-devel at r-project.org mailing list
https://stat.ethz.ch/mailman/listinfo/r-devel

	[[alternative HTML version deleted]]


From m@ech|er @end|ng |rom @t@t@m@th@ethz@ch  Mon Jun 24 11:29:56 2019
From: m@ech|er @end|ng |rom @t@t@m@th@ethz@ch (Martin Maechler)
Date: Mon, 24 Jun 2019 11:29:56 +0200
Subject: [Rd] Calculation of e^{z^2/2} for a normal deviate z
In-Reply-To: <DB6P189MB0581CB7F9D31D6DD8DF14C77A5E00@DB6P189MB0581.EURP189.PROD.OUTLOOK.COM>
References: <32da856c-a60a-974f-65ab-d7123e12e813@daqana.com>
 <23307.48529.773039.904392@stat.math.ethz.ch>
 <23307.49323.908367.788461@stat.math.ethz.ch>
 <CABtg=KkuVHoX1tZ=+Lr7mDFrXvn5zdf3+Wmqhnv58GXZJS2KwQ@mail.gmail.com>
 <f3388993-5e20-d7e5-346a-785d33fab27b@daqana.com>
 <DB6P189MB0581F101B909FA1E2ACC509DA51F0@DB6P189MB0581.EURP189.PROD.OUTLOOK.COM>
 <DB6P189MB0581A9E34BD18A3E06B8E725A5180@DB6P189MB0581.EURP189.PROD.OUTLOOK.COM>
 <DB6P189MB05813B949D25C28767CD8E5FA5E70@DB6P189MB0581.EURP189.PROD.OUTLOOK.COM>
 <8b926873-2fdf-4553-b62c-a928fbff70e9@sapo.pt>
 <DB6P189MB05810066BDE0B49EFBCFC73DA5E70@DB6P189MB0581.EURP189.PROD.OUTLOOK.COM>
 <34FAD6F0-ABCE-4965-858A-0F0616D451B6@gmail.com>
 <DB6P189MB058181A3D23F4EB37C3175B5A5E70@DB6P189MB0581.EURP189.PROD.OUTLOOK.COM>
 <6925f9e4-38bf-d901-ff8c-4e690b450d23@gmail.com>
 <CAF8bMca=jxkYbHrcjH-TJFtJf2u4KfiKmkFQQFoPx7=-1m4akw@mail.gmail.com>
 <23824.35810.330948.401893@stat.math.ethz.ch>
 <DB6P189MB0581CB7F9D31D6DD8DF14C77A5E00@DB6P189MB0581.EURP189.PROD.OUTLOOK.COM>
Message-ID: <23824.38932.894586.752138@stat.math.ethz.ch>

>>>>> jing hua zhao 
>>>>>     on Mon, 24 Jun 2019 08:51:43 +0000 writes:

    > Hi All,
    > Thanks for all your comments which allows me to appreciate more of these in Python and R.

    > I just came across the matrixStats package,


    > ## EXAMPLE #1
    > lx <- c(1000.01, 1000.02)
    > y0 <- log(sum(exp(lx)))
    > print(y0) ## Inf

    > y1 <- logSumExp(lx)
    > print(y1) ## 1000.708

    > and

    >> ly <- lx*100000
    >> ly
    > [1] 100001000 100002000
    >> y1 <- logSumExp(ly)
    >> print(y1)
    > [1] 100002000
    >> logSumExp
    > function (lx, idxs = NULL, na.rm = FALSE, ...)
    > {
    > has_na <- TRUE
    > .Call(C_logSumExp, as.numeric(lx), idxs, as.logical(na.rm),
    > has_na)
    > }
    > <bytecode: 0x20c07a8>
    > <environment: namespace:matrixStats>

    > Maybe this is rather close?

Thank you  Jing Hua,

indeed the issue of sums of (very large or very small)
exponentials is a special case, that can well be treated
specially
 - as it is not so infrequent
 - via "obvious" simplifications can be implemented even more accurately

We (authors of the R package 'copula') have had a need for
these as well, in likelihood computation for Archimedean
copulas, and
have efficient R level implementations, both for your case  and
the -- even more delicate -- case of e.g., alternating signs of
exponential terms.

"Unfortunately", we had never exported the functions from the
package, so you'd need

     copula:::lsum()   # log          sum {of exponentials in log scale}
or
     copula:::lssum()  # log *s*igned sum {of exponentials in log scale}

for the 2nd case.

The advantage is it's simple R code implemented quite
efficiently for the vector and matrices cases,

Source code from source file copula/R/special-func.R

 (in svn at R-forge :
   -->
   https://r-forge.r-project.org/scm/viewvc.php/pkg/copula/R/special-func.R?view=markup&root=copula )

{Yes, this GPL-2 licenced  {with Copyright, see file, please
      	   	 	    keep this one line}
## Copyright (C) 2012 Marius Hofert, Ivan Kojadinovic, Martin Maechler, and Jun Y
}

----------------------------------------------------------------------

##' Properly compute log(x_1 + .. + x_n) for a given (n x d)-matrix of n row
##' vectors log(x_1),..,log(x_n) (each of dimension d)
##' Here, x_i > 0  for all i
##' @title Properly compute the logarithm of a sum
##' @param lx (n,d)-matrix containing the row vectors log(x_1),..,log(x_n)
##'        each of dimension d
##' @param l.off the offset to subtract and re-add; ideally in the order of
##'        the maximum of each column
##' @return log(x_1 + .. + x_n) [i.e., OF DIMENSION d!!!] computed via
##'         log(sum(x)) = log(sum(exp(log(x))))
##'         = log(exp(log(x_max))*sum(exp(log(x)-log(x_max))))
##'         = log(x_max) + log(sum(exp(log(x)-log(x_max)))))
##'         = lx.max + log(sum(exp(lx-lx.max)))
##'         => VECTOR OF DIMENSION d
##' @author Marius Hofert, Martin Maechler
lsum <- function(lx, l.off) {
    rx <- length(d <- dim(lx))
    if(mis.off <- missing(l.off)) l.off <- {
	if(rx <= 1L)
	    max(lx)
	else if(rx == 2L)
	    apply(lx, 2L, max)
    }
    if(rx <= 1L) { ## vector
	if(is.finite(l.off))
	    l.off + log(sum(exp(lx - l.off)))
	else if(mis.off || is.na(l.off) || l.off == max(lx))
	    l.off # NA || NaN or all lx == -Inf, or max(.) == Inf
	else
	    stop("'l.off  is infinite but not == max(.)")
    } else if(rx == 2L) { ## matrix
	if(any(x.off <- !is.finite(l.off))) {
	    if(mis.off || isTRUE(all.equal(l.off, apply(lx, 2L, max)))) {
		## we know l.off = colMax(.)
		if(all(x.off)) return(l.off)
		r <- l.off
		iok <- which(!x.off)
		l.of <- l.off[iok]
		r[iok] <- l.of + log(colSums(exp(lx[,iok,drop=FALSE] -
						     rep(l.of, each=d[1]))))
		r
	    } else ## explicitly specified l.off differing from colMax(.)
		stop("'l.off' has non-finite values but differs from default max(.)")
	}
	else
	    l.off + log(colSums(exp(lx - rep(l.off, each=d[1]))))
    } else stop("not yet implemented for arrays of rank >= 3")
}

##' Properly compute log(x_1 + .. + x_n) for a given matrix of column vectors
##' log(|x_1|),.., log(|x_n|) and corresponding signs sign(x_1),.., sign(x_n)
##' Here, x_i is of arbitrary sign
##' @title compute logarithm of a sum with signed large coefficients
##' @param lxabs (d,n)-matrix containing the column vectors log(|x_1|),..,log(|x_n|)
##'        each of dimension d
##' @param signs corresponding matrix of signs sign(x_1), .., sign(x_n)
##' @param l.off the offset to subtract and re-add; ideally in the order of max(.)
##' @param strict logical indicating if it should stop on some negative sums
##' @return log(x_1 + .. + x_n) [i.e., of dimension d] computed via
##'         log(sum(x)) = log(sum(sign(x)*|x|)) = log(sum(sign(x)*exp(log(|x|))))
##'         = log(exp(log(x0))*sum(signs*exp(log(|x|)-log(x0))))
##'         = log(x0) + log(sum(signs* exp(log(|x|)-log(x0))))
##'         = l.off   + log(sum(signs* exp(lxabs -  l.off  )))
##' @author Marius Hofert and Martin Maechler
lssum <- function (lxabs, signs, l.off = apply(lxabs, 2, max), strict = TRUE) {
    stopifnot(length(dim(lxabs)) == 2L) # is.matrix(.) generalized
    sum. <- colSums(signs * exp(lxabs - rep(l.off, each=nrow(lxabs))))
    if(anyNA(sum.) || any(sum. <= 0))
        (if(strict) stop else warning)("lssum found non-positive sums")
    l.off + log(sum.)
}

----------------------------------------------------------------------

    > Best wishes,
    > Jing Hua

    > ________________________________
    > From: R-devel <r-devel-bounces at r-project.org> on behalf of Martin Maechler <maechler at stat.math.ethz.ch>
    > Sent: 24 June 2019 08:37
    > To: William Dunlap
    > Cc: r-devel at r-project.org
    > Subject: Re: [Rd] Calculation of e^{z^2/2} for a normal deviate z

>>>>> William Dunlap via R-devel
>>>>>     on Sun, 23 Jun 2019 10:34:47 -0700 writes:
>>>>> William Dunlap via R-devel
>>>>>     on Sun, 23 Jun 2019 10:34:47 -0700 writes:

    >> include/Rmath.h declares a set of 'logspace' functions for use at the C
    >> level.  I don't think there are core R functions that call them.

    >> /* Compute the log of a sum or difference from logs of terms, i.e.,
    >> *
    >> *     log (exp (logx) + exp (logy))
    >> * or  log (exp (logx) - exp (logy))
    >> *
    >> * without causing overflows or throwing away too much accuracy:
    >> */
    >> double  Rf_logspace_add(double logx, double logy);
    >> double  Rf_logspace_sub(double logx, double logy);
    >> double  Rf_logspace_sum(const double *logx, int nx);

    >> Bill Dunlap
    >> TIBCO Software
    >> wdunlap tibco.com

    > Yes, indeed, thank you, Bill!

    > But they *have* been in use by core R functions for a long time
    > in pgamma, pbeta and related functions.

    > [and I have had changes in *hyper.c where logspace_add() is used too,
    > for several years now (since 2015) but I no longer know which
    > concrete accuracy problem that addresses, so have not yet committed it]


    > Martin Maechler
    > ETH Zurich and R Core Team


From j|nghu@zh@o @end|ng |rom hotm@||@com  Mon Jun 24 11:47:37 2019
From: j|nghu@zh@o @end|ng |rom hotm@||@com (jing hua zhao)
Date: Mon, 24 Jun 2019 09:47:37 +0000
Subject: [Rd] Calculation of e^{z^2/2} for a normal deviate z
In-Reply-To: <23824.38932.894586.752138@stat.math.ethz.ch>
References: <32da856c-a60a-974f-65ab-d7123e12e813@daqana.com>
 <23307.48529.773039.904392@stat.math.ethz.ch>
 <23307.49323.908367.788461@stat.math.ethz.ch>
 <CABtg=KkuVHoX1tZ=+Lr7mDFrXvn5zdf3+Wmqhnv58GXZJS2KwQ@mail.gmail.com>
 <f3388993-5e20-d7e5-346a-785d33fab27b@daqana.com>
 <DB6P189MB0581F101B909FA1E2ACC509DA51F0@DB6P189MB0581.EURP189.PROD.OUTLOOK.COM>
 <DB6P189MB0581A9E34BD18A3E06B8E725A5180@DB6P189MB0581.EURP189.PROD.OUTLOOK.COM>
 <DB6P189MB05813B949D25C28767CD8E5FA5E70@DB6P189MB0581.EURP189.PROD.OUTLOOK.COM>
 <8b926873-2fdf-4553-b62c-a928fbff70e9@sapo.pt>
 <DB6P189MB05810066BDE0B49EFBCFC73DA5E70@DB6P189MB0581.EURP189.PROD.OUTLOOK.COM>
 <34FAD6F0-ABCE-4965-858A-0F0616D451B6@gmail.com>
 <DB6P189MB058181A3D23F4EB37C3175B5A5E70@DB6P189MB0581.EURP189.PROD.OUTLOOK.COM>
 <6925f9e4-38bf-d901-ff8c-4e690b450d23@gmail.com>
 <CAF8bMca=jxkYbHrcjH-TJFtJf2u4KfiKmkFQQFoPx7=-1m4akw@mail.gmail.com>
 <23824.35810.330948.401893@stat.math.ethz.ch>
 <DB6P189MB0581CB7F9D31D6DD8DF14C77A5E00@DB6P189MB0581.EURP189.PROD.OUTLOOK.COM>,
 <23824.38932.894586.752138@stat.math.ethz.ch>
Message-ID: <DB6P189MB058168C9B599A472DD5E1BADA5E00@DB6P189MB0581.EURP189.PROD.OUTLOOK.COM>

Hi Martin,

Thanks for another tips -- it will be hard for me to comprehend fully your implementation of Rmpfr. I will look at these instead. I realised what I thought was a difficult problem turned to be a popular one. I managed to get a Python version here for information.

# http://bayesjumping.net/log-sum-exp-trick/
import numpy as np
def logSumExp(ns):
    max = np.max(ns)
    ds = ns - max
    sumOfExp = np.exp(ds).sum()
    return max + np.log(sumOfExp)

x = [100001000, 100002000]
logSumExp(x)

from scipy.misc import logsumexp
logsumexp(x)

import numpy as np;
prob1 = np.log(1e-50)
prob2 = np.log(2.5e-50)
prob12 = np.logaddexp(prob1, prob2)
prob12
np.exp(prob12)

As expected they are in good agreement with R.

Best regards,


Jing Hua

________________________________
From: Martin Maechler <maechler at stat.math.ethz.ch>
Sent: 24 June 2019 09:29
To: jing hua zhao
Cc: William Dunlap; Martin Maechler; r-devel at r-project.org
Subject: Re: [Rd] Calculation of e^{z^2/2} for a normal deviate z

>>>>> jing hua zhao
>>>>>     on Mon, 24 Jun 2019 08:51:43 +0000 writes:

    > Hi All,
    > Thanks for all your comments which allows me to appreciate more of these in Python and R.

    > I just came across the matrixStats package,


    > ## EXAMPLE #1
    > lx <- c(1000.01, 1000.02)
    > y0 <- log(sum(exp(lx)))
    > print(y0) ## Inf

    > y1 <- logSumExp(lx)
    > print(y1) ## 1000.708

    > and

    >> ly <- lx*100000
    >> ly
    > [1] 100001000 100002000
    >> y1 <- logSumExp(ly)
    >> print(y1)
    > [1] 100002000
    >> logSumExp
    > function (lx, idxs = NULL, na.rm = FALSE, ...)
    > {
    > has_na <- TRUE
    > .Call(C_logSumExp, as.numeric(lx), idxs, as.logical(na.rm),
    > has_na)
    > }
    > <bytecode: 0x20c07a8>
    > <environment: namespace:matrixStats>

    > Maybe this is rather close?

Thank you  Jing Hua,

indeed the issue of sums of (very large or very small)
exponentials is a special case, that can well be treated
specially
 - as it is not so infrequent
 - via "obvious" simplifications can be implemented even more accurately

We (authors of the R package 'copula') have had a need for
these as well, in likelihood computation for Archimedean
copulas, and
have efficient R level implementations, both for your case  and
the -- even more delicate -- case of e.g., alternating signs of
exponential terms.

"Unfortunately", we had never exported the functions from the
package, so you'd need

     copula:::lsum()   # log          sum {of exponentials in log scale}
or
     copula:::lssum()  # log *s*igned sum {of exponentials in log scale}

for the 2nd case.

The advantage is it's simple R code implemented quite
efficiently for the vector and matrices cases,

Source code from source file copula/R/special-func.R

 (in svn at R-forge :
   -->
   https://r-forge.r-project.org/scm/viewvc.php/pkg/copula/R/special-func.R?view=markup&root=copula )

{Yes, this GPL-2 licenced  {with Copyright, see file, please
                         keep this one line}
## Copyright (C) 2012 Marius Hofert, Ivan Kojadinovic, Martin Maechler, and Jun Y
}

----------------------------------------------------------------------

##' Properly compute log(x_1 + .. + x_n) for a given (n x d)-matrix of n row
##' vectors log(x_1),..,log(x_n) (each of dimension d)
##' Here, x_i > 0  for all i
##' @title Properly compute the logarithm of a sum
##' @param lx (n,d)-matrix containing the row vectors log(x_1),..,log(x_n)
##'        each of dimension d
##' @param l.off the offset to subtract and re-add; ideally in the order of
##'        the maximum of each column
##' @return log(x_1 + .. + x_n) [i.e., OF DIMENSION d!!!] computed via
##'         log(sum(x)) = log(sum(exp(log(x))))
##'         = log(exp(log(x_max))*sum(exp(log(x)-log(x_max))))
##'         = log(x_max) + log(sum(exp(log(x)-log(x_max)))))
##'         = lx.max + log(sum(exp(lx-lx.max)))
##'         => VECTOR OF DIMENSION d
##' @author Marius Hofert, Martin Maechler
lsum <- function(lx, l.off) {
    rx <- length(d <- dim(lx))
    if(mis.off <- missing(l.off)) l.off <- {
        if(rx <= 1L)
            max(lx)
        else if(rx == 2L)
            apply(lx, 2L, max)
    }
    if(rx <= 1L) { ## vector
        if(is.finite(l.off))
            l.off + log(sum(exp(lx - l.off)))
        else if(mis.off || is.na(l.off) || l.off == max(lx))
            l.off # NA || NaN or all lx == -Inf, or max(.) == Inf
        else
            stop("'l.off  is infinite but not == max(.)")
    } else if(rx == 2L) { ## matrix
        if(any(x.off <- !is.finite(l.off))) {
            if(mis.off || isTRUE(all.equal(l.off, apply(lx, 2L, max)))) {
                ## we know l.off = colMax(.)
                if(all(x.off)) return(l.off)
                r <- l.off
                iok <- which(!x.off)
                l.of <- l.off[iok]
                r[iok] <- l.of + log(colSums(exp(lx[,iok,drop=FALSE] -
                                                     rep(l.of, each=d[1]))))
                r
            } else ## explicitly specified l.off differing from colMax(.)
                stop("'l.off' has non-finite values but differs from default max(.)")
        }
        else
            l.off + log(colSums(exp(lx - rep(l.off, each=d[1]))))
    } else stop("not yet implemented for arrays of rank >= 3")
}

##' Properly compute log(x_1 + .. + x_n) for a given matrix of column vectors
##' log(|x_1|),.., log(|x_n|) and corresponding signs sign(x_1),.., sign(x_n)
##' Here, x_i is of arbitrary sign
##' @title compute logarithm of a sum with signed large coefficients
##' @param lxabs (d,n)-matrix containing the column vectors log(|x_1|),..,log(|x_n|)
##'        each of dimension d
##' @param signs corresponding matrix of signs sign(x_1), .., sign(x_n)
##' @param l.off the offset to subtract and re-add; ideally in the order of max(.)
##' @param strict logical indicating if it should stop on some negative sums
##' @return log(x_1 + .. + x_n) [i.e., of dimension d] computed via
##'         log(sum(x)) = log(sum(sign(x)*|x|)) = log(sum(sign(x)*exp(log(|x|))))
##'         = log(exp(log(x0))*sum(signs*exp(log(|x|)-log(x0))))
##'         = log(x0) + log(sum(signs* exp(log(|x|)-log(x0))))
##'         = l.off   + log(sum(signs* exp(lxabs -  l.off  )))
##' @author Marius Hofert and Martin Maechler
lssum <- function (lxabs, signs, l.off = apply(lxabs, 2, max), strict = TRUE) {
    stopifnot(length(dim(lxabs)) == 2L) # is.matrix(.) generalized
    sum. <- colSums(signs * exp(lxabs - rep(l.off, each=nrow(lxabs))))
    if(anyNA(sum.) || any(sum. <= 0))
        (if(strict) stop else warning)("lssum found non-positive sums")
    l.off + log(sum.)
}

----------------------------------------------------------------------

    > Best wishes,
    > Jing Hua

    > ________________________________
    > From: R-devel <r-devel-bounces at r-project.org> on behalf of Martin Maechler <maechler at stat.math.ethz.ch>
    > Sent: 24 June 2019 08:37
    > To: William Dunlap
    > Cc: r-devel at r-project.org
    > Subject: Re: [Rd] Calculation of e^{z^2/2} for a normal deviate z

>>>>> William Dunlap via R-devel
>>>>>     on Sun, 23 Jun 2019 10:34:47 -0700 writes:
>>>>> William Dunlap via R-devel
>>>>>     on Sun, 23 Jun 2019 10:34:47 -0700 writes:

    >> include/Rmath.h declares a set of 'logspace' functions for use at the C
    >> level.  I don't think there are core R functions that call them.

    >> /* Compute the log of a sum or difference from logs of terms, i.e.,
    >> *
    >> *     log (exp (logx) + exp (logy))
    >> * or  log (exp (logx) - exp (logy))
    >> *
    >> * without causing overflows or throwing away too much accuracy:
    >> */
    >> double  Rf_logspace_add(double logx, double logy);
    >> double  Rf_logspace_sub(double logx, double logy);
    >> double  Rf_logspace_sum(const double *logx, int nx);

    >> Bill Dunlap
    >> TIBCO Software
    >> wdunlap tibco.com

[[elided Hotmail spam]]

    > But they *have* been in use by core R functions for a long time
    > in pgamma, pbeta and related functions.

    > [and I have had changes in *hyper.c where logspace_add() is used too,
    > for several years now (since 2015) but I no longer know which
    > concrete accuracy problem that addresses, so have not yet committed it]


    > Martin Maechler
    > ETH Zurich and R Core Team



	[[alternative HTML version deleted]]


From m@ech|er @end|ng |rom @t@t@m@th@ethz@ch  Mon Jun 24 12:04:54 2019
From: m@ech|er @end|ng |rom @t@t@m@th@ethz@ch (Martin Maechler)
Date: Mon, 24 Jun 2019 12:04:54 +0200
Subject: [Rd] methods package: A _R_CHECK_LENGTH_1_LOGIC2_=true error
In-Reply-To: <CAFDcVCTARMfrJRs-KiS5UiSo=SoU8+TgPh_KE+e-zFRR0eCSFQ@mail.gmail.com>
References: <CAFDcVCQOWVr0p2e2HONOy9NvqPdpoAH=HPMOEP65K-N6UjhA2g@mail.gmail.com>
 <67D2E7FE-74E3-4379-B9FB-C4028AB808DF@gmail.com>
 <CAFDcVCTARMfrJRs-KiS5UiSo=SoU8+TgPh_KE+e-zFRR0eCSFQ@mail.gmail.com>
Message-ID: <23824.41030.156424.792062@stat.math.ethz.ch>

>>>>> Henrik Bengtsson via R-core 
>>>>>     on Sun, 23 Jun 2019 11:29:58 -0700 writes:

    > Thank you.
    > To correct myself, I can indeed reproduce this with R --vanilla too.
    > A reproducible example is:

    > $ R --vanilla
    > R version 3.6.0 Patched (2019-05-31 r76629) -- "Planting of a Tree"
    > ...
    >> Sys.setenv("_R_CHECK_LENGTH_1_LOGIC2_" = "true")
    >> loadNamespace("oligo")
    > Error in omittedSig && (signature[omittedSig] != "missing") :
    > 'length(x) = 4 > 1' in coercion to 'logical(1)'
    > Error: unable to load R code in package ?oligo?

    > /Henrik

Thank you Henrik, for the report, etc, but
hmm... after loading the oligo package, almost 40 (non
base+Recommended) packages have been loaded as well, which hence
need to have been installed before, too .. 
which is not quite a "vanilla repr.ex." in my view

Worse, I cannot reproduce :

    > Sys.setenv("_R_CHECK_LENGTH_1_LOGIC2_" = "true")
    > Sys.getenv("_R_CHECK_LENGTH_1_LOGIC2_")
    [1] "true"
    > debugonce(conformMethod)
    > loadNamespace("oligo")
    <environment: namespace:oligo>
    Warning messages:
    1: multiple methods tables found for ?rowSums? 
    2: multiple methods tables found for ?colSums? 
    3: multiple methods tables found for ?rowMeans? 
    4: multiple methods tables found for ?colMeans? 
    > sessionInfo()
    R Under development (unstable) (2019-06-20 r76729)

(similarly with other versions of R >= 3.6.0).

So, even though R core has fixed this now in the sources, it
would be nice to have an "as simple as possible"  repr.ex. for this.

Martin



    > On Sun, Jun 23, 2019 at 1:54 AM peter dalgaard <pdalgd at gmail.com> wrote:
    >> 
    >> This looks obvious enough, so I just committed your fix to R-devel and R-patched.
    >> 
    >> I'm at the wrong machine for thorough testing, but at least it seems to build OK. However, I sense some risk that this could uncover sleeping bugs elsewhere, so watch out.
    >> 
    >> -pd
    >> 
    >> > On 22 Jun 2019, at 18:49 , Henrik Bengtsson <henrik.bengtsson at gmail.com> wrote:
    >> >
    >> > DISCLAIMER: I can not get this error with R --vanilla, so it only
    >> > occurs when some other package is also loaded.  I don't have time to
    >> > find to narrow that down for a reproducible example, but I believe the
    >> > following error in R 3.6.0:
    >> >
    >> >> Sys.setenv("_R_CHECK_LENGTH_1_LOGIC2_" = "true")
    >> >> library(oligo)
    >> > Error in omittedSig && (signature[omittedSig] != "missing") :
    >> >  'length(x) = 4 > 1' in coercion to 'logical(1)'
    >> > Error: unable to load R code in package 'oligo'
    >> >
    >> > is because of a '_R_CHECK_LENGTH_1_LOGIC2_=true' mistake in the
    >> > 'methods' package.  Here's the patch:
    >> >
    >> > $ svn diff src/library/methods/R/RMethodUtils.R &
    >> > [1] 1062
    >> > Index: src/library/methods/R/RMethodUtils.R
    >> > ===================================================================
    >> > --- src/library/methods/R/RMethodUtils.R (revision 76731)
    >> > +++ src/library/methods/R/RMethodUtils.R (working copy)
    >> > @@ -343,7 +343,7 @@
    >> >              call. = TRUE, domain = NA)
    >> >     }
    >> >     else if(!all(signature[omittedSig] == "missing")) {
    >> > -        omittedSig <- omittedSig && (signature[omittedSig] != "missing")
    >> > +        omittedSig <- omittedSig & (signature[omittedSig] != "missing")
    >> >         .message("Note: ", .renderSignature(f, sig0),
    >> >                  gettextf("expanding the signature to include omitted
    >> > arguments in definition: %s",
    >> >                           paste(sigNames[omittedSig], "=
    >> > \"missing\"",collapse = ", ")))
    >> > [1]+  Done                    svn diff src/library/methods/R/RMethodUtils.R
    >> >
    >> > Maybe still in time for R 3.6.1?
    >> >
    >> > /Henrik
    >> >
    >> > ______________________________________________
    >> > R-devel at r-project.org mailing list
    >> > https://stat.ethz.ch/mailman/listinfo/r-devel
    >> 
    >> --
    >> Peter Dalgaard, Professor,
    >> Center for Statistics, Copenhagen Business School
    >> Solbjerg Plads 3, 2000 Frederiksberg, Denmark
    >> Phone: (+45)38153501
    >> Office: A 4.23
    >> Email: pd.mes at cbs.dk  Priv: PDalgd at gmail.com


From henr|k@bengt@@on @end|ng |rom gm@||@com  Tue Jun 25 07:16:53 2019
From: henr|k@bengt@@on @end|ng |rom gm@||@com (Henrik Bengtsson)
Date: Mon, 24 Jun 2019 22:16:53 -0700
Subject: [Rd] methods package: A _R_CHECK_LENGTH_1_LOGIC2_=true error
In-Reply-To: <23824.41030.156424.792062@stat.math.ethz.ch>
References: <CAFDcVCQOWVr0p2e2HONOy9NvqPdpoAH=HPMOEP65K-N6UjhA2g@mail.gmail.com>
 <67D2E7FE-74E3-4379-B9FB-C4028AB808DF@gmail.com>
 <CAFDcVCTARMfrJRs-KiS5UiSo=SoU8+TgPh_KE+e-zFRR0eCSFQ@mail.gmail.com>
 <23824.41030.156424.792062@stat.math.ethz.ch>
Message-ID: <CAFDcVCTq-Zc49t9HrdVQB4VHhOtuaoOmpGnx9JsAy+_esene3w@mail.gmail.com>

**Maybe this bug needs to be understood further before applying the
patch because patch is most likely also wrong**

Because, from just looking at the expressions, I think neither the R
3.6.0 version:

omittedSig <- omittedSig && (signature[omittedSig] != "missing")

nor the patched version (I proposed):

omittedSig <- omittedSig & (signature[omittedSig] != "missing")

can be correct.  For a starter, 'omittedSig' is a logical vector.  We
see that 'omittedSig' is used to subset 'signature'.  In other words,
the length of 'signature[omittedSig]' and hence the length of
'(signature[omittedSig] != "missing")' will equal sum(omittedSig),
i.e. the length will be in {0,1,...,length(omittedSig)}.

The R 3.6.0 version with '&&' is not correct because '&&' requires
length(omittedSig) == 1L and sum(omittedSig) == 1L, which is unlikely
to be the original intention.

The patched version with '&' is most likely not correct either because
'LHS & RHS' assume length(LHS) == length(RHS), unless it relies on the
auto-expansion of either vector.  So, for the '&' version to be
correct, it basically requires that length(omittedSig) = length(LHS) =
length(RHS) = sum(omittedSig), which also sounds unlikely to be the
original intention.

Disclaimer: Please note that I have not at all studied the rest of the
function, so the above is just based on that single line plus
debugging that 'omittedSig' is a logical vector.

Martin, I don't have the time to dive into this further.  Though I did
try to see if it happened when one of oligo's dependencies were
loaded, but that was not the case. It kicks in when oligo is loaded.
FYI, I can also replicate your non-replicatation on another R 3.6.0
version. I'll see if I can narrow down what's different, e.g.
comparing sessionInfo():s, etc.  However, I want to reply with
findings above asap due to the R 3.6.1 release and you might roll back
the patch (since it might introduce other bugs as Peter mentioned).

/Henrik


On Mon, Jun 24, 2019 at 3:05 AM Martin Maechler
<maechler at stat.math.ethz.ch> wrote:
>
> >>>>> Henrik Bengtsson via R-core
> >>>>>     on Sun, 23 Jun 2019 11:29:58 -0700 writes:
>
>     > Thank you.
>     > To correct myself, I can indeed reproduce this with R --vanilla too.
>     > A reproducible example is:
>
>     > $ R --vanilla
>     > R version 3.6.0 Patched (2019-05-31 r76629) -- "Planting of a Tree"
>     > ...
>     >> Sys.setenv("_R_CHECK_LENGTH_1_LOGIC2_" = "true")
>     >> loadNamespace("oligo")
>     > Error in omittedSig && (signature[omittedSig] != "missing") :
>     > 'length(x) = 4 > 1' in coercion to 'logical(1)'
>     > Error: unable to load R code in package ?oligo?
>
>     > /Henrik
>
> Thank you Henrik, for the report, etc, but
> hmm... after loading the oligo package, almost 40 (non
> base+Recommended) packages have been loaded as well, which hence
> need to have been installed before, too ..
> which is not quite a "vanilla repr.ex." in my view
>
> Worse, I cannot reproduce :
>
>     > Sys.setenv("_R_CHECK_LENGTH_1_LOGIC2_" = "true")
>     > Sys.getenv("_R_CHECK_LENGTH_1_LOGIC2_")
>     [1] "true"
>     > debugonce(conformMethod)
>     > loadNamespace("oligo")
>     <environment: namespace:oligo>
>     Warning messages:
>     1: multiple methods tables found for ?rowSums?
>     2: multiple methods tables found for ?colSums?
>     3: multiple methods tables found for ?rowMeans?
>     4: multiple methods tables found for ?colMeans?
>     > sessionInfo()
>     R Under development (unstable) (2019-06-20 r76729)
>
> (similarly with other versions of R >= 3.6.0).
>
> So, even though R core has fixed this now in the sources, it
> would be nice to have an "as simple as possible"  repr.ex. for this.
>
> Martin
>
>
>
>     > On Sun, Jun 23, 2019 at 1:54 AM peter dalgaard <pdalgd at gmail.com> wrote:
>     >>
>     >> This looks obvious enough, so I just committed your fix to R-devel and R-patched.
>     >>
>     >> I'm at the wrong machine for thorough testing, but at least it seems to build OK. However, I sense some risk that this could uncover sleeping bugs elsewhere, so watch out.
>     >>
>     >> -pd
>     >>
>     >> > On 22 Jun 2019, at 18:49 , Henrik Bengtsson <henrik.bengtsson at gmail.com> wrote:
>     >> >
>     >> > DISCLAIMER: I can not get this error with R --vanilla, so it only
>     >> > occurs when some other package is also loaded.  I don't have time to
>     >> > find to narrow that down for a reproducible example, but I believe the
>     >> > following error in R 3.6.0:
>     >> >
>     >> >> Sys.setenv("_R_CHECK_LENGTH_1_LOGIC2_" = "true")
>     >> >> library(oligo)
>     >> > Error in omittedSig && (signature[omittedSig] != "missing") :
>     >> >  'length(x) = 4 > 1' in coercion to 'logical(1)'
>     >> > Error: unable to load R code in package 'oligo'
>     >> >
>     >> > is because of a '_R_CHECK_LENGTH_1_LOGIC2_=true' mistake in the
>     >> > 'methods' package.  Here's the patch:
>     >> >
>     >> > $ svn diff src/library/methods/R/RMethodUtils.R &
>     >> > [1] 1062
>     >> > Index: src/library/methods/R/RMethodUtils.R
>     >> > ===================================================================
>     >> > --- src/library/methods/R/RMethodUtils.R (revision 76731)
>     >> > +++ src/library/methods/R/RMethodUtils.R (working copy)
>     >> > @@ -343,7 +343,7 @@
>     >> >              call. = TRUE, domain = NA)
>     >> >     }
>     >> >     else if(!all(signature[omittedSig] == "missing")) {
>     >> > -        omittedSig <- omittedSig && (signature[omittedSig] != "missing")
>     >> > +        omittedSig <- omittedSig & (signature[omittedSig] != "missing")
>     >> >         .message("Note: ", .renderSignature(f, sig0),
>     >> >                  gettextf("expanding the signature to include omitted
>     >> > arguments in definition: %s",
>     >> >                           paste(sigNames[omittedSig], "=
>     >> > \"missing\"",collapse = ", ")))
>     >> > [1]+  Done                    svn diff src/library/methods/R/RMethodUtils.R
>     >> >
>     >> > Maybe still in time for R 3.6.1?
>     >> >
>     >> > /Henrik
>     >> >
>     >> > ______________________________________________
>     >> > R-devel at r-project.org mailing list
>     >> > https://stat.ethz.ch/mailman/listinfo/r-devel
>     >>
>     >> --
>     >> Peter Dalgaard, Professor,
>     >> Center for Statistics, Copenhagen Business School
>     >> Solbjerg Plads 3, 2000 Frederiksberg, Denmark
>     >> Phone: (+45)38153501
>     >> Office: A 4.23
>     >> Email: pd.mes at cbs.dk  Priv: PDalgd at gmail.com
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From pd@|gd @end|ng |rom gm@||@com  Tue Jun 25 09:44:21 2019
From: pd@|gd @end|ng |rom gm@||@com (peter dalgaard)
Date: Tue, 25 Jun 2019 09:44:21 +0200
Subject: [Rd] methods package: A _R_CHECK_LENGTH_1_LOGIC2_=true error
In-Reply-To: <CAFDcVCTq-Zc49t9HrdVQB4VHhOtuaoOmpGnx9JsAy+_esene3w@mail.gmail.com>
References: <CAFDcVCQOWVr0p2e2HONOy9NvqPdpoAH=HPMOEP65K-N6UjhA2g@mail.gmail.com>
 <67D2E7FE-74E3-4379-B9FB-C4028AB808DF@gmail.com>
 <CAFDcVCTARMfrJRs-KiS5UiSo=SoU8+TgPh_KE+e-zFRR0eCSFQ@mail.gmail.com>
 <23824.41030.156424.792062@stat.math.ethz.ch>
 <CAFDcVCTq-Zc49t9HrdVQB4VHhOtuaoOmpGnx9JsAy+_esene3w@mail.gmail.com>
Message-ID: <03ED7150-6BF7-4E6E-AD78-B6DFACE43A97@gmail.com>

Argh! Yes you are right, the "fix" doesn't. And I fell into the same "hey it's a vector so && has to be wrong"-trap. So this has to be reverted to something that has at least failed unconspicuously for a decade.... Will do. Thanks to Martin for remaining suspicious!

[This code was originally from 2009, by John Chambers. It is not too likely that he'll remember what the intention actually was... The logic does escape me: An omitted signature is only an omitted signature if the signature of the omitted signature is not "missing"? In that case, I think 

omittedSig[omittedSig] <- (signature[omittedSig] != "missing")

might work (omittedSig[omittedSig] == TRUE, so we don't need to &. That is, unless there are NA issues.), but I am not at all sure that is what is wanted!
]

-pd

> On 25 Jun 2019, at 07:16 , Henrik Bengtsson <henrik.bengtsson at gmail.com> wrote:
> 
> **Maybe this bug needs to be understood further before applying the
> patch because patch is most likely also wrong**
> 
> Because, from just looking at the expressions, I think neither the R
> 3.6.0 version:
> 
> omittedSig <- omittedSig && (signature[omittedSig] != "missing")
> 
> nor the patched version (I proposed):
> 
> omittedSig <- omittedSig & (signature[omittedSig] != "missing")
> 
> can be correct.  For a starter, 'omittedSig' is a logical vector.  We
> see that 'omittedSig' is used to subset 'signature'.  In other words,
> the length of 'signature[omittedSig]' and hence the length of
> '(signature[omittedSig] != "missing")' will equal sum(omittedSig),
> i.e. the length will be in {0,1,...,length(omittedSig)}.
> 
> The R 3.6.0 version with '&&' is not correct because '&&' requires
> length(omittedSig) == 1L and sum(omittedSig) == 1L, which is unlikely
> to be the original intention.
> 
> The patched version with '&' is most likely not correct either because
> 'LHS & RHS' assume length(LHS) == length(RHS), unless it relies on the
> auto-expansion of either vector.  So, for the '&' version to be
> correct, it basically requires that length(omittedSig) = length(LHS) =
> length(RHS) = sum(omittedSig), which also sounds unlikely to be the
> original intention.
> 
> Disclaimer: Please note that I have not at all studied the rest of the
> function, so the above is just based on that single line plus
> debugging that 'omittedSig' is a logical vector.
> 
> Martin, I don't have the time to dive into this further.  Though I did
> try to see if it happened when one of oligo's dependencies were
> loaded, but that was not the case. It kicks in when oligo is loaded.
> FYI, I can also replicate your non-replicatation on another R 3.6.0
> version. I'll see if I can narrow down what's different, e.g.
> comparing sessionInfo():s, etc.  However, I want to reply with
> findings above asap due to the R 3.6.1 release and you might roll back
> the patch (since it might introduce other bugs as Peter mentioned).
> 
> /Henrik
> 
> 
> On Mon, Jun 24, 2019 at 3:05 AM Martin Maechler
> <maechler at stat.math.ethz.ch> wrote:
>> 
>>>>>>> Henrik Bengtsson via R-core
>>>>>>>    on Sun, 23 Jun 2019 11:29:58 -0700 writes:
>> 
>>> Thank you.
>>> To correct myself, I can indeed reproduce this with R --vanilla too.
>>> A reproducible example is:
>> 
>>> $ R --vanilla
>>> R version 3.6.0 Patched (2019-05-31 r76629) -- "Planting of a Tree"
>>> ...
>>>> Sys.setenv("_R_CHECK_LENGTH_1_LOGIC2_" = "true")
>>>> loadNamespace("oligo")
>>> Error in omittedSig && (signature[omittedSig] != "missing") :
>>> 'length(x) = 4 > 1' in coercion to 'logical(1)'
>>> Error: unable to load R code in package ?oligo?
>> 
>>> /Henrik
>> 
>> Thank you Henrik, for the report, etc, but
>> hmm... after loading the oligo package, almost 40 (non
>> base+Recommended) packages have been loaded as well, which hence
>> need to have been installed before, too ..
>> which is not quite a "vanilla repr.ex." in my view
>> 
>> Worse, I cannot reproduce :
>> 
>>> Sys.setenv("_R_CHECK_LENGTH_1_LOGIC2_" = "true")
>>> Sys.getenv("_R_CHECK_LENGTH_1_LOGIC2_")
>>    [1] "true"
>>> debugonce(conformMethod)
>>> loadNamespace("oligo")
>>    <environment: namespace:oligo>
>>    Warning messages:
>>    1: multiple methods tables found for ?rowSums?
>>    2: multiple methods tables found for ?colSums?
>>    3: multiple methods tables found for ?rowMeans?
>>    4: multiple methods tables found for ?colMeans?
>>> sessionInfo()
>>    R Under development (unstable) (2019-06-20 r76729)
>> 
>> (similarly with other versions of R >= 3.6.0).
>> 
>> So, even though R core has fixed this now in the sources, it
>> would be nice to have an "as simple as possible"  repr.ex. for this.
>> 
>> Martin
>> 
>> 
>> 
>>> On Sun, Jun 23, 2019 at 1:54 AM peter dalgaard <pdalgd at gmail.com> wrote:
>>>> 
>>>> This looks obvious enough, so I just committed your fix to R-devel and R-patched.
>>>> 
>>>> I'm at the wrong machine for thorough testing, but at least it seems to build OK. However, I sense some risk that this could uncover sleeping bugs elsewhere, so watch out.
>>>> 
>>>> -pd
>>>> 
>>>>> On 22 Jun 2019, at 18:49 , Henrik Bengtsson <henrik.bengtsson at gmail.com> wrote:
>>>>> 
>>>>> DISCLAIMER: I can not get this error with R --vanilla, so it only
>>>>> occurs when some other package is also loaded.  I don't have time to
>>>>> find to narrow that down for a reproducible example, but I believe the
>>>>> following error in R 3.6.0:
>>>>> 
>>>>>> Sys.setenv("_R_CHECK_LENGTH_1_LOGIC2_" = "true")
>>>>>> library(oligo)
>>>>> Error in omittedSig && (signature[omittedSig] != "missing") :
>>>>> 'length(x) = 4 > 1' in coercion to 'logical(1)'
>>>>> Error: unable to load R code in package 'oligo'
>>>>> 
>>>>> is because of a '_R_CHECK_LENGTH_1_LOGIC2_=true' mistake in the
>>>>> 'methods' package.  Here's the patch:
>>>>> 
>>>>> $ svn diff src/library/methods/R/RMethodUtils.R &
>>>>> [1] 1062
>>>>> Index: src/library/methods/R/RMethodUtils.R
>>>>> ===================================================================
>>>>> --- src/library/methods/R/RMethodUtils.R (revision 76731)
>>>>> +++ src/library/methods/R/RMethodUtils.R (working copy)
>>>>> @@ -343,7 +343,7 @@
>>>>>             call. = TRUE, domain = NA)
>>>>>    }
>>>>>    else if(!all(signature[omittedSig] == "missing")) {
>>>>> -        omittedSig <- omittedSig && (signature[omittedSig] != "missing")
>>>>> +        omittedSig <- omittedSig & (signature[omittedSig] != "missing")
>>>>>        .message("Note: ", .renderSignature(f, sig0),
>>>>>                 gettextf("expanding the signature to include omitted
>>>>> arguments in definition: %s",
>>>>>                          paste(sigNames[omittedSig], "=
>>>>> \"missing\"",collapse = ", ")))
>>>>> [1]+  Done                    svn diff src/library/methods/R/RMethodUtils.R
>>>>> 
>>>>> Maybe still in time for R 3.6.1?
>>>>> 
>>>>> /Henrik
>>>>> 
>>>>> ______________________________________________
>>>>> R-devel at r-project.org mailing list
>>>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>>> 
>>>> --
>>>> Peter Dalgaard, Professor,
>>>> Center for Statistics, Copenhagen Business School
>>>> Solbjerg Plads 3, 2000 Frederiksberg, Denmark
>>>> Phone: (+45)38153501
>>>> Office: A 4.23
>>>> Email: pd.mes at cbs.dk  Priv: PDalgd at gmail.com
>> 
>> ______________________________________________
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel

-- 
Peter Dalgaard, Professor,
Center for Statistics, Copenhagen Business School
Solbjerg Plads 3, 2000 Frederiksberg, Denmark
Phone: (+45)38153501
Office: A 4.23
Email: pd.mes at cbs.dk  Priv: PDalgd at gmail.com


From m@ech|er @end|ng |rom @t@t@m@th@ethz@ch  Tue Jun 25 10:11:53 2019
From: m@ech|er @end|ng |rom @t@t@m@th@ethz@ch (Martin Maechler)
Date: Tue, 25 Jun 2019 10:11:53 +0200
Subject: [Rd] [Suggested patch] to fligner.test - constant values can
 produce significant results
In-Reply-To: <CACT_sGb+Gk3a9U=vdfHKrrbt11bQceLsyf_r8GtzvEzRwc3R6A@mail.gmail.com>
References: <CACT_sGb+Gk3a9U=vdfHKrrbt11bQceLsyf_r8GtzvEzRwc3R6A@mail.gmail.com>
Message-ID: <23825.55113.817396.548736@stat.math.ethz.ch>

>>>>> Karolis K 
>>>>>     on Fri, 21 Jun 2019 18:00:36 +0300 writes:

    > In specific cases fligner.test() can produce a small p-value even when both
    > groups have constant variance.

    > Here is an illustration:

    > fligner.test(c(1,1,2,2), c("a","a","b","b"))
    > # p-value = NA

    > But:

    > fligner.test(c(1,1,1,2,2,2), c("a","a","a","b","b","b"))
    > # p-value < 2.2e-16

    > This can potentially get dangerous if people perform lots of parallel tests
    > of this type (i.e. when doing a test for each gene in genomic studies).

I agree; this is really misleading and  dangerously wrong.

    > Submitted a proposed patch that should solve the issue by producing an
    > error "data is essentially constant" - which is the same error message
    > found in t-test under similar conditions.

I'm much less agreeing on that remedy (and also the solution for t.test()):
In many similar situations, it has been very fruitful to have R's
algorithms behave "generalized continuous"ly.  I have defined
this as (something like)

 "The value at infinity should correspond to the limit going to infinity"

 (and also applying that to  1/0 == Inf which is the correct
  limit in the case where the "0" is known to be non-negative,
  as here for the variance/sd) 


In this case (H0: variances in groups are equal), I'd argue that
H0 should *not* be rejected, and the "most correct" P-value to
be 1 .   After all, both groups have the same variance, 0.

In the t.test() case (H0: group means are equal; variances are
equal (or not: that's optional  var.equal = TRUE / FALSE):
When the two group variances are 0, there are 2 cases, and I
claim something like the following should happen by
"generalized continuity":

1) if the group means are equal  H0 is not rejected     (P = 1)
2) if the group means differ,    H0 is clearly rejected (P = 0)

{where for '1)' I could also agree on being undecided and returning P = NaN}

Returning an error in this case, as t.test() has been doing,
seems a waste (loss of information) in my view.
But for now, let's not discuss t.test() but the "var tests"
(homogeneity of variances)


    > P.S. First time writing to this list. Read all the guides of posting, but
    > sorry in advance if I still missed any rules.

well, thank you, but your post is really "perfect" in all formal senses
(correct mailing list, reproducible example code, using plain
 text, being polite ;-), even proposing a patch via diff )
==> really very well done and a role model for others!

Thank you indeed for raising the issue and proposing a patch.
We should discuss here ... i.e. hear other opinions etc.

Note that there ca 5 different such tests for homogeneity of variances
(fligner.test, bartlett.test, var.test, ansari.test, mood.test)
and the behavior of the other 4 tests should also be considered ..


    > svn.diff:

    > Index: src/library/stats/R/fligner.test.R
    > ===================================================================
    > --- src/library/stats/R/fligner.test.R  (revision 76710)
    > +++ src/library/stats/R/fligner.test.R  (working copy)
    > @@ -55,6 +55,8 @@

    > ## Careful. This assumes that g is a factor:
    > x <- x - tapply(x,g,median)[g]
    > +    if (all(x == 0))
    > +      stop("data are essentially constant")

    > a <- qnorm((1 + rank(abs(x)) / (n + 1)) / 2)
    > STATISTIC <- sum(tapply(a, g, "sum")^2 / tapply(a, g, "length"))


    > ---
    > Karolis Koncevi?ius

    > [[alternative HTML version deleted]]

    > ______________________________________________
    > R-devel at r-project.org mailing list
    > https://stat.ethz.ch/mailman/listinfo/r-devel


From pd@|gd @end|ng |rom gm@||@com  Tue Jun 25 11:48:05 2019
From: pd@|gd @end|ng |rom gm@||@com (peter dalgaard)
Date: Tue, 25 Jun 2019 11:48:05 +0200
Subject: [Rd] methods package: A _R_CHECK_LENGTH_1_LOGIC2_=true error
In-Reply-To: <03ED7150-6BF7-4E6E-AD78-B6DFACE43A97@gmail.com>
References: <CAFDcVCQOWVr0p2e2HONOy9NvqPdpoAH=HPMOEP65K-N6UjhA2g@mail.gmail.com>
 <67D2E7FE-74E3-4379-B9FB-C4028AB808DF@gmail.com>
 <CAFDcVCTARMfrJRs-KiS5UiSo=SoU8+TgPh_KE+e-zFRR0eCSFQ@mail.gmail.com>
 <23824.41030.156424.792062@stat.math.ethz.ch>
 <CAFDcVCTq-Zc49t9HrdVQB4VHhOtuaoOmpGnx9JsAy+_esene3w@mail.gmail.com>
 <03ED7150-6BF7-4E6E-AD78-B6DFACE43A97@gmail.com>
Message-ID: <73697C70-3117-4432-A1C4-8060446311E9@gmail.com>

Ah, not quite: The logic is that if something has omittedSig and "missing" is not the signature, those signatures get _set_ to missing. There's just a bit of tap-dancing around to find exactly which they are so that there can be a message about changing them.

-pd

> On 25 Jun 2019, at 09:44 , peter dalgaard <pdalgd at gmail.com> wrote:
> 
> Argh! Yes you are right, the "fix" doesn't. And I fell into the same "hey it's a vector so && has to be wrong"-trap. So this has to be reverted to something that has at least failed unconspicuously for a decade.... Will do. Thanks to Martin for remaining suspicious!
> 
> [This code was originally from 2009, by John Chambers. It is not too likely that he'll remember what the intention actually was... The logic does escape me: An omitted signature is only an omitted signature if the signature of the omitted signature is not "missing"? In that case, I think 
> 
> omittedSig[omittedSig] <- (signature[omittedSig] != "missing")
> 
> might work (omittedSig[omittedSig] == TRUE, so we don't need to &. That is, unless there are NA issues.), but I am not at all sure that is what is wanted!
> ]
> 
> -pd
> 
>> On 25 Jun 2019, at 07:16 , Henrik Bengtsson <henrik.bengtsson at gmail.com> wrote:
>> 
>> **Maybe this bug needs to be understood further before applying the
>> patch because patch is most likely also wrong**
>> 
>> Because, from just looking at the expressions, I think neither the R
>> 3.6.0 version:
>> 
>> omittedSig <- omittedSig && (signature[omittedSig] != "missing")
>> 
>> nor the patched version (I proposed):
>> 
>> omittedSig <- omittedSig & (signature[omittedSig] != "missing")
>> 
>> can be correct.  For a starter, 'omittedSig' is a logical vector.  We
>> see that 'omittedSig' is used to subset 'signature'.  In other words,
>> the length of 'signature[omittedSig]' and hence the length of
>> '(signature[omittedSig] != "missing")' will equal sum(omittedSig),
>> i.e. the length will be in {0,1,...,length(omittedSig)}.
>> 
>> The R 3.6.0 version with '&&' is not correct because '&&' requires
>> length(omittedSig) == 1L and sum(omittedSig) == 1L, which is unlikely
>> to be the original intention.
>> 
>> The patched version with '&' is most likely not correct either because
>> 'LHS & RHS' assume length(LHS) == length(RHS), unless it relies on the
>> auto-expansion of either vector.  So, for the '&' version to be
>> correct, it basically requires that length(omittedSig) = length(LHS) =
>> length(RHS) = sum(omittedSig), which also sounds unlikely to be the
>> original intention.
>> 
>> Disclaimer: Please note that I have not at all studied the rest of the
>> function, so the above is just based on that single line plus
>> debugging that 'omittedSig' is a logical vector.
>> 
>> Martin, I don't have the time to dive into this further.  Though I did
>> try to see if it happened when one of oligo's dependencies were
>> loaded, but that was not the case. It kicks in when oligo is loaded.
>> FYI, I can also replicate your non-replicatation on another R 3.6.0
>> version. I'll see if I can narrow down what's different, e.g.
>> comparing sessionInfo():s, etc.  However, I want to reply with
>> findings above asap due to the R 3.6.1 release and you might roll back
>> the patch (since it might introduce other bugs as Peter mentioned).
>> 
>> /Henrik
>> 
>> 
>> On Mon, Jun 24, 2019 at 3:05 AM Martin Maechler
>> <maechler at stat.math.ethz.ch> wrote:
>>> 
>>>>>>>> Henrik Bengtsson via R-core
>>>>>>>>   on Sun, 23 Jun 2019 11:29:58 -0700 writes:
>>> 
>>>> Thank you.
>>>> To correct myself, I can indeed reproduce this with R --vanilla too.
>>>> A reproducible example is:
>>> 
>>>> $ R --vanilla
>>>> R version 3.6.0 Patched (2019-05-31 r76629) -- "Planting of a Tree"
>>>> ...
>>>>> Sys.setenv("_R_CHECK_LENGTH_1_LOGIC2_" = "true")
>>>>> loadNamespace("oligo")
>>>> Error in omittedSig && (signature[omittedSig] != "missing") :
>>>> 'length(x) = 4 > 1' in coercion to 'logical(1)'
>>>> Error: unable to load R code in package ?oligo?
>>> 
>>>> /Henrik
>>> 
>>> Thank you Henrik, for the report, etc, but
>>> hmm... after loading the oligo package, almost 40 (non
>>> base+Recommended) packages have been loaded as well, which hence
>>> need to have been installed before, too ..
>>> which is not quite a "vanilla repr.ex." in my view
>>> 
>>> Worse, I cannot reproduce :
>>> 
>>>> Sys.setenv("_R_CHECK_LENGTH_1_LOGIC2_" = "true")
>>>> Sys.getenv("_R_CHECK_LENGTH_1_LOGIC2_")
>>>   [1] "true"
>>>> debugonce(conformMethod)
>>>> loadNamespace("oligo")
>>>   <environment: namespace:oligo>
>>>   Warning messages:
>>>   1: multiple methods tables found for ?rowSums?
>>>   2: multiple methods tables found for ?colSums?
>>>   3: multiple methods tables found for ?rowMeans?
>>>   4: multiple methods tables found for ?colMeans?
>>>> sessionInfo()
>>>   R Under development (unstable) (2019-06-20 r76729)
>>> 
>>> (similarly with other versions of R >= 3.6.0).
>>> 
>>> So, even though R core has fixed this now in the sources, it
>>> would be nice to have an "as simple as possible"  repr.ex. for this.
>>> 
>>> Martin
>>> 
>>> 
>>> 
>>>> On Sun, Jun 23, 2019 at 1:54 AM peter dalgaard <pdalgd at gmail.com> wrote:
>>>>> 
>>>>> This looks obvious enough, so I just committed your fix to R-devel and R-patched.
>>>>> 
>>>>> I'm at the wrong machine for thorough testing, but at least it seems to build OK. However, I sense some risk that this could uncover sleeping bugs elsewhere, so watch out.
>>>>> 
>>>>> -pd
>>>>> 
>>>>>> On 22 Jun 2019, at 18:49 , Henrik Bengtsson <henrik.bengtsson at gmail.com> wrote:
>>>>>> 
>>>>>> DISCLAIMER: I can not get this error with R --vanilla, so it only
>>>>>> occurs when some other package is also loaded.  I don't have time to
>>>>>> find to narrow that down for a reproducible example, but I believe the
>>>>>> following error in R 3.6.0:
>>>>>> 
>>>>>>> Sys.setenv("_R_CHECK_LENGTH_1_LOGIC2_" = "true")
>>>>>>> library(oligo)
>>>>>> Error in omittedSig && (signature[omittedSig] != "missing") :
>>>>>> 'length(x) = 4 > 1' in coercion to 'logical(1)'
>>>>>> Error: unable to load R code in package 'oligo'
>>>>>> 
>>>>>> is because of a '_R_CHECK_LENGTH_1_LOGIC2_=true' mistake in the
>>>>>> 'methods' package.  Here's the patch:
>>>>>> 
>>>>>> $ svn diff src/library/methods/R/RMethodUtils.R &
>>>>>> [1] 1062
>>>>>> Index: src/library/methods/R/RMethodUtils.R
>>>>>> ===================================================================
>>>>>> --- src/library/methods/R/RMethodUtils.R (revision 76731)
>>>>>> +++ src/library/methods/R/RMethodUtils.R (working copy)
>>>>>> @@ -343,7 +343,7 @@
>>>>>>            call. = TRUE, domain = NA)
>>>>>>   }
>>>>>>   else if(!all(signature[omittedSig] == "missing")) {
>>>>>> -        omittedSig <- omittedSig && (signature[omittedSig] != "missing")
>>>>>> +        omittedSig <- omittedSig & (signature[omittedSig] != "missing")
>>>>>>       .message("Note: ", .renderSignature(f, sig0),
>>>>>>                gettextf("expanding the signature to include omitted
>>>>>> arguments in definition: %s",
>>>>>>                         paste(sigNames[omittedSig], "=
>>>>>> \"missing\"",collapse = ", ")))
>>>>>> [1]+  Done                    svn diff src/library/methods/R/RMethodUtils.R
>>>>>> 
>>>>>> Maybe still in time for R 3.6.1?
>>>>>> 
>>>>>> /Henrik
>>>>>> 
>>>>>> ______________________________________________
>>>>>> R-devel at r-project.org mailing list
>>>>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>>>> 
>>>>> --
>>>>> Peter Dalgaard, Professor,
>>>>> Center for Statistics, Copenhagen Business School
>>>>> Solbjerg Plads 3, 2000 Frederiksberg, Denmark
>>>>> Phone: (+45)38153501
>>>>> Office: A 4.23
>>>>> Email: pd.mes at cbs.dk  Priv: PDalgd at gmail.com
>>> 
>>> ______________________________________________
>>> R-devel at r-project.org mailing list
>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>> 
>> ______________________________________________
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel
> 
> -- 
> Peter Dalgaard, Professor,
> Center for Statistics, Copenhagen Business School
> Solbjerg Plads 3, 2000 Frederiksberg, Denmark
> Phone: (+45)38153501
> Office: A 4.23
> Email: pd.mes at cbs.dk  Priv: PDalgd at gmail.com
> 
> 
> 
> 
> 
> 
> 
> 
> 

-- 
Peter Dalgaard, Professor,
Center for Statistics, Copenhagen Business School
Solbjerg Plads 3, 2000 Frederiksberg, Denmark
Phone: (+45)38153501
Office: A 4.23
Email: pd.mes at cbs.dk  Priv: PDalgd at gmail.com


From @pencer@gr@ve@ @end|ng |rom prod@y@e@com  Wed Jun 26 16:34:46 2019
From: @pencer@gr@ve@ @end|ng |rom prod@y@e@com (Spencer Graves)
Date: Wed, 26 Jun 2019 09:34:46 -0500
Subject: [Rd] R-Forge > GitHub?
In-Reply-To: <71f66de5-e1aa-5649-b07a-6cf79f9b07bc@prodsyse.com>
References: <71f66de5-e1aa-5649-b07a-6cf79f9b07bc@prodsyse.com>
Message-ID: <cb4218b1-7fcc-80cb-18ab-361b93a3177e@prodsyse.com>

Hello, All:


 ????? What's the status and future plans for R-Forge?


 ????? I ask primarily because a problem I reported May 15 and 17 via 
two different channels has yet to be fixed, and it prevents my 
development versions of the Ecdat and Ecfun packages from building -- 
because the Windows version cannot find "Matrix";? see below. 
Secondarily, the version of R that R-Forge tried to use earlier today 
was 3.5.3 -- NOT the current version.


 ????? Assuming you recommend migrating to GitHub, do you have a 
preferred procedure?? I found 
"https://gist.github.com/friendly/7269490".? This says it was "Last 
active 2 years ago" but seems to be the most current advice I can find 
on this right now.? That looks complicated, but I assume it preserves 
the edit history on R-Forge. ???


 ??? ? Thanks,
 ??? ? Spencer Graves


-------- Forwarded Message --------
Subject: 	Error : package 'Ecfun' could not be loaded
Date: 	Fri, 17 May 2019 18:41:12 -0500
From: 	Spencer Graves <spencer.graves at prodsyse.com>
To: 	r-forge at r-project.org



Hello:


 ????? Your Windows platform cannot find "Matrix" and other packages.? See:


https://r-forge.r-project.org/R/?group_id=1439&add_log=check_x86_64_windows&pkg=Ecdat&flavor=patched&type=00install.out


 ????? I reported this to your Support tracker two days ago:


https://r-forge.r-project.org/tracker/?atid=194&group_id=34&func=browse


 ????? Can someone please fix this?


 ????? Or is it now the official policy of R-Forge to ask people to go 
someplace else, e.g., GitHub?


 ????? From what I know, the basic design of R-Forge is vastly superior 
to GitHub for packages submitted to CRAN.? However, I've encountered 
numerous reliability problems with R-Forge in recent years.


 ????? Thanks,
 ????? Spencer Graves



	[[alternative HTML version deleted]]


From murdoch@dunc@n @end|ng |rom gm@||@com  Wed Jun 26 17:25:40 2019
From: murdoch@dunc@n @end|ng |rom gm@||@com (Duncan Murdoch)
Date: Wed, 26 Jun 2019 11:25:40 -0400
Subject: [Rd] R-Forge > GitHub?
In-Reply-To: <cb4218b1-7fcc-80cb-18ab-361b93a3177e@prodsyse.com>
References: <71f66de5-e1aa-5649-b07a-6cf79f9b07bc@prodsyse.com>
 <cb4218b1-7fcc-80cb-18ab-361b93a3177e@prodsyse.com>
Message-ID: <8d6c6dd4-d231-ecc7-c584-6e08f93a81e5@gmail.com>

On 26/06/2019 10:34 a.m., Spencer Graves wrote:
> Hello, All:
> 
> 
>   ????? What's the status and future plans for R-Forge?
> 
> 
>   ????? I ask primarily because a problem I reported May 15 and 17 via
> two different channels has yet to be fixed, and it prevents my
> development versions of the Ecdat and Ecfun packages from building --
> because the Windows version cannot find "Matrix";? see below.
> Secondarily, the version of R that R-Forge tried to use earlier today
> was 3.5.3 -- NOT the current version.
> 
> 
>   ????? Assuming you recommend migrating to GitHub, do you have a
> preferred procedure?? I found
> "https://gist.github.com/friendly/7269490".? This says it was "Last
> active 2 years ago" but seems to be the most current advice I can find
> on this right now.? That looks complicated, but I assume it preserves
> the edit history on R-Forge. ???

R-Forge is mirrored on Github; see https://github.com/rforge/ecdat, for 
example.  That shows 418 commits in its history; presumably that's the 
full R-forge history.  I think that's newer than Michael Friendly's gist.

So I suspect (but haven't tried to do this) that migration now is as 
simple as doing a Github fork to your own Github account, and then 
basically forgetting about the R-forge stuff, or deleting it (and I 
don't know how to do that).

Duncan Murdoch


From ||one| @end|ng |rom r@tud|o@com  Wed Jun 26 17:35:21 2019
From: ||one| @end|ng |rom r@tud|o@com (Lionel Henry)
Date: Wed, 26 Jun 2019 17:35:21 +0200
Subject: [Rd] R-Forge > GitHub?
In-Reply-To: <8d6c6dd4-d231-ecc7-c584-6e08f93a81e5@gmail.com>
References: <71f66de5-e1aa-5649-b07a-6cf79f9b07bc@prodsyse.com>
 <cb4218b1-7fcc-80cb-18ab-361b93a3177e@prodsyse.com>
 <8d6c6dd4-d231-ecc7-c584-6e08f93a81e5@gmail.com>
Message-ID: <89645BC9-C6BF-4E57-8AA0-9F426BA8AC5E@rstudio.com>


> On 26 Jun 2019, at 17:25, Duncan Murdoch <murdoch.duncan at gmail.com> wrote:
> 
> R-Forge is mirrored on Github; see https://github.com/rforge/ecdat, for example.  That shows 418 commits in its history; presumably that's the full R-forge history.  I think that's newer than Michael Friendly's gist.
> 
> So I suspect (but haven't tried to do this) that migration now is as simple as doing a Github fork to your own Github account, and then basically forgetting about the R-forge stuff, or deleting it (and I don't know how to do that).

I think it's better to avoid the Fork button in this case, because forks are
treated specially in the Github UI. In this case you'll want your repo to
appear as a main repo, and not a fork. AFAIK the only way to unfork a repo
is to ask the Github staff to do it.

So instead of forking, use the "+" button on github.com and select
"Import a repository". This supports both git and svn repos.

Best,
Lionel

From ||one| @end|ng |rom r@tud|o@com  Wed Jun 26 19:02:50 2019
From: ||one| @end|ng |rom r@tud|o@com (Lionel Henry)
Date: Wed, 26 Jun 2019 19:02:50 +0200
Subject: [Rd] R-Forge > GitHub?
In-Reply-To: <8ccacd7d-cfc7-887c-ed37-0af6ca156ddd@prodsyse.com>
References: <71f66de5-e1aa-5649-b07a-6cf79f9b07bc@prodsyse.com>
 <cb4218b1-7fcc-80cb-18ab-361b93a3177e@prodsyse.com>
 <8d6c6dd4-d231-ecc7-c584-6e08f93a81e5@gmail.com>
 <89645BC9-C6BF-4E57-8AA0-9F426BA8AC5E@rstudio.com>
 <8ccacd7d-cfc7-887c-ed37-0af6ca156ddd@prodsyse.com>
Message-ID: <16B55780-26BD-4C96-B0B4-E9FB1F122DDF@rstudio.com>

I think all 3 issues are solved by:

1. Use the "+" button on github.com <http://github.com/> and select "Import a repository".
2. Pass the URL of your SVN repo.

Lionel

> On 26 Jun 2019, at 18:58, Spencer Graves <spencer.graves at prodsyse.com> wrote:
> 
>       Thanks to Duncan, Lionel and Henrik for their quick replies. I have further questions:
> 
> 
>             1.  Will GitHub automatically transfer the commits I made to R-Forge in the past couple of days?  R-Forge is now at Rev. 420, and GitHub is still at 418.  Will 419 and 420 be automatically mirrored onto "https://github.com/rforge/ecdat" sometime in the next 24 hours or so?  Is there something easy I can do to force that update?
> 
> 
>             2.  Is there a way to make this GitHub version the master?  It currently says it is a 'Read-only mirror of "ecdat" from r-forge SVN.'  I can probably change "r-forge.r-project.org/projects/ecdat" so I'm the only one authorized to make changes there and then stop committing changes there.  However, before I do that, I'd want to make sure I can commit directly to the GitHub version, etc.
> 
> 
>             3.  How can I make myself the owner and a contributor for the GitHub version?  I'm a "Project Admin" on the R-Forge version, but currently no one can make any changes to the GitHub version except via R-Forge.  There must be a recommended migration process.
> 
> 
>       I could create a separate version of this package on GitHub, but all the history would be lost.
> 
> 
>       Thanks again,
>       Spencer Graves
> 
> 
> On 2019-06-26 10:35, Lionel Henry wrote:
>>> On 26 Jun 2019, at 17:25, Duncan Murdoch <murdoch.duncan at gmail.com> wrote:
>>> 
>>> R-Forge is mirrored on Github; see https://github.com/rforge/ecdat, for example.  That shows 418 commits in its history; presumably that's the full R-forge history.  I think that's newer than Michael Friendly's gist.
>>> 
>>> So I suspect (but haven't tried to do this) that migration now is as simple as doing a Github fork to your own Github account, and then basically forgetting about the R-forge stuff, or deleting it (and I don't know how to do that).
>> I think it's better to avoid the Fork button in this case, because forks are
>> treated specially in the Github UI. In this case you'll want your repo to
>> appear as a main repo, and not a fork. AFAIK the only way to unfork a repo
>> is to ask the Github staff to do it.
>> 
>> So instead of forking, use the "+" button on github.com and select
>> "Import a repository". This supports both git and svn repos.
>> 
>> Best,
>> Lionel
> 


	[[alternative HTML version deleted]]


From henr|k@bengt@@on @end|ng |rom gm@||@com  Wed Jun 26 17:46:11 2019
From: henr|k@bengt@@on @end|ng |rom gm@||@com (Henrik Bengtsson)
Date: Wed, 26 Jun 2019 08:46:11 -0700
Subject: [Rd] R-Forge > GitHub?
In-Reply-To: <8d6c6dd4-d231-ecc7-c584-6e08f93a81e5@gmail.com>
References: <71f66de5-e1aa-5649-b07a-6cf79f9b07bc@prodsyse.com>
 <cb4218b1-7fcc-80cb-18ab-361b93a3177e@prodsyse.com>
 <8d6c6dd4-d231-ecc7-c584-6e08f93a81e5@gmail.com>
Message-ID: <CAFDcVCRTaspvaiR1fvd5c2oKikn7U6QDUDSkKSVYLqoytP+S0A@mail.gmail.com>

One thing that needs manual work is making each SVN username mP to a Git
(username, email address). This often involved asking contributors what
their preferred endless Git address is.

The email address is what for instance GitHub uses to associate a commit
authorship with a user account. You can register multiple emails addresses
per GitHub account. As far as I remember, this also how GitLab and
Bitbucket work. AFAIK, the Git username is not really used, but I might be
wrong.

You can rewrite the authorship in the Git history to get this correct, but
you want to get that right before going public v if you rewrite the history
and "force" push you'll make life hard for anyone who already cloned.

/Henrik

	[[alternative HTML version deleted]]


From tke|tt @end|ng |rom gm@||@com  Wed Jun 26 22:13:38 2019
From: tke|tt @end|ng |rom gm@||@com (Tim Keitt)
Date: Wed, 26 Jun 2019 15:13:38 -0500
Subject: [Rd] r-project.org dns
Message-ID: <CANnL8gpge4sHQE2R1cSjwMTdr0a=R_Axz88nQL8G0snzT0UiAQ@mail.gmail.com>

Sorry if this was already discussed. I notice that r-project.org is not
found in dns lookups today. (At least for me -- I tried some online web
look services as well.)

THK

	[[alternative HTML version deleted]]


From r|p|ey @end|ng |rom @t@t@@ox@@c@uk  Thu Jun 27 09:20:52 2019
From: r|p|ey @end|ng |rom @t@t@@ox@@c@uk (Prof Brian Ripley)
Date: Thu, 27 Jun 2019 08:20:52 +0100
Subject: [Rd] r-project.org dns
In-Reply-To: <CANnL8gpge4sHQE2R1cSjwMTdr0a=R_Axz88nQL8G0snzT0UiAQ@mail.gmail.com>
References: <CANnL8gpge4sHQE2R1cSjwMTdr0a=R_Axz88nQL8G0snzT0UiAQ@mail.gmail.com>
Message-ID: <5be658e4-0721-96c5-bcdf-20323ef05078@stats.ox.ac.uk>

On 26/06/2019 21:13, Tim Keitt wrote:
> Sorry if this was already discussed. I notice that r-project.org is not
> found in dns lookups today. (At least for me -- I tried some online web
> look services as well.)
> 
> THK

We knew, but all the R listservers were also affected.  The name servers 
in Vienna have been restarted and DNS is slowly recovering (including 
delivering your message).

-- 
Brian D. Ripley,                  ripley at stats.ox.ac.uk
Emeritus Professor of Applied Statistics, University of Oxford


From murdoch@dunc@n @end|ng |rom gm@||@com  Wed Jun 26 21:42:42 2019
From: murdoch@dunc@n @end|ng |rom gm@||@com (Duncan Murdoch)
Date: Wed, 26 Jun 2019 15:42:42 -0400
Subject: [Rd] R-Forge > GitHub?
In-Reply-To: <dd8455dc-bc33-4a11-bda0-85a68d0e1ce2@prodsyse.com>
References: <71f66de5-e1aa-5649-b07a-6cf79f9b07bc@prodsyse.com>
 <cb4218b1-7fcc-80cb-18ab-361b93a3177e@prodsyse.com>
 <8d6c6dd4-d231-ecc7-c584-6e08f93a81e5@gmail.com>
 <89645BC9-C6BF-4E57-8AA0-9F426BA8AC5E@rstudio.com>
 <8ccacd7d-cfc7-887c-ed37-0af6ca156ddd@prodsyse.com>
 <16B55780-26BD-4C96-B0B4-E9FB1F122DDF@rstudio.com>
 <dd8455dc-bc33-4a11-bda0-85a68d0e1ce2@prodsyse.com>
Message-ID: <de1545a5-4acc-9422-3622-2793e66f3862@gmail.com>

On 26/06/2019 1:38 p.m., Spencer Graves wrote:
>  ????? Thanks.? I'm still having problems:
> 
> 
>  ??? ??????? 1.? I went to "github.com" and logged in with my standard 
> GitHub account
> 
> 
>  ??? ??????? 2.? Then I clicked "+" in the upper right, just left of my 
> GitHub ID icon, and selected "Import a repository", as Lionel suggested.
> 
> 
>  ??? ??????? 3.? " Your old repository?s clone URL" = 
> "https://r-forge.r-project.org/projects/ecdat/" with "Name" = "Ecdat".
> 
> 
>  ??? ?? ?? ??????? ** >> This failed, first giving me a 500 failure 
> code, then reporting " Repository creation failed."? When I tried it 
> again, I got, "The repository Ecdat already exists on this account."
> 
> 
>  ????? What do you suggest I try next?

How complicated is your R-forge repository?  Are you hosting more than 
one package there?  Are you using branches and tags?

If it's really simple, I'd recommend importing from the Github read-only 
copy, rather than from R-forge.  R-forge has a non-standard setup for 
repositories, and you probably don't want to import that to Github. (A 
few years ago devtools didn't even work properly on R-forge because of 
the non-standard setup.  I don't know if Github will be able to handle 
it.)  The creator of "https://github.com/rforge/ecdat" simplified things 
a lot, ignoring branches, tags, etc.  For most repositories, this is fine.

Your first step will probably be to delete the existing ecdat repository 
which showed up in your second error message. Instructions for that are 
here:  https://help.github.com/en/articles/deleting-a-repository.

Duncan Murdoch

> 
> 
>  ????? Thanks,
>  ????? Spencer
> 
> 
> On 2019-06-26 12:02, Lionel Henry wrote:
>> I think all 3 issues are solved by:
>>
>> 1. Use the "+" button on github.com <http://github.com>?and select 
>> "Import a repository".
>> 2. Pass the URL of your SVN repo.
>>
>> Lionel
>>
>>> On 26 Jun 2019, at 18:58, Spencer Graves <spencer.graves at prodsyse.com 
>>> <mailto:spencer.graves at prodsyse.com>> wrote:
>>>
>>> ????? Thanks to Duncan, Lionel and Henrik for their quick replies. I 
>>> have further questions:
>>>
>>>
>>> ??? ?? ???? 1.? Will GitHub automatically transfer the commits I made 
>>> to R-Forge in the past couple of days? R-Forge is now at Rev. 420, 
>>> and GitHub is still at 418. Will 419 and 420 be automatically 
>>> mirrored onto "https://github.com/rforge/ecdat" sometime in the next 
>>> 24 hours or so?? Is there something easy I can do to force that update?
>>>
>>>
>>> ??? ?? ???? 2.? Is there a way to make this GitHub version the 
>>> master?? It currently says it is a 'Read-only mirror of "ecdat" from 
>>> r-forge SVN.'? I can probably change 
>>> "r-forge.r-project.org/projects/ecdat 
>>> <http://r-forge.r-project.org/projects/ecdat>" so I'm the only one 
>>> authorized to make changes there and then stop committing changes 
>>> there.? However, before I do that, I'd want to make sure I can commit 
>>> directly to the GitHub version, etc.
>>>
>>>
>>> ??? ?? ???? 3.? How can I make myself the owner and a contributor for 
>>> the GitHub version?? I'm a "Project Admin" on the R-Forge version, 
>>> but currently no one can make any changes to the GitHub version 
>>> except via R-Forge.? There must be a recommended migration process.
>>>
>>>
>>> ????? I could create a separate version of this package on GitHub, 
>>> but all the history would be lost.
>>>
>>>
>>> ????? Thanks again,
>>> ????? Spencer Graves
>>>
>>>
>>> On 2019-06-26 10:35, Lionel Henry wrote:
>>>>> On 26 Jun 2019, at 17:25, Duncan Murdoch <murdoch.duncan at gmail.com 
>>>>> <mailto:murdoch.duncan at gmail.com>> wrote:
>>>>>
>>>>> R-Forge is mirrored on Github; see https://github.com/rforge/ecdat, 
>>>>> for example. ?That shows 418 commits in its history; presumably 
>>>>> that's the full R-forge history. ?I think that's newer than Michael 
>>>>> Friendly's gist.
>>>>>
>>>>> So I suspect (but haven't tried to do this) that migration now is 
>>>>> as simple as doing a Github fork to your own Github account, and 
>>>>> then basically forgetting about the R-forge stuff, or deleting it 
>>>>> (and I don't know how to do that).
>>>> I think it's better to avoid the Fork button in this case, because 
>>>> forks are
>>>> treated specially in the Github UI. In this case you'll want your 
>>>> repo to
>>>> appear as a main repo, and not a fork. AFAIK the only way to unfork 
>>>> a repo
>>>> is to ask the Github staff to do it.
>>>>
>>>> So instead of forking, use the "+" button on github.com 
>>>> <http://github.com> and select
>>>> "Import a repository". This supports both git and svn repos.
>>>>
>>>> Best,
>>>> Lionel
>>>
>>
>


From @pencer@gr@ve@ @end|ng |rom prod@y@e@com  Wed Jun 26 18:58:59 2019
From: @pencer@gr@ve@ @end|ng |rom prod@y@e@com (Spencer Graves)
Date: Wed, 26 Jun 2019 11:58:59 -0500
Subject: [Rd] R-Forge > GitHub?
In-Reply-To: <89645BC9-C6BF-4E57-8AA0-9F426BA8AC5E@rstudio.com>
References: <71f66de5-e1aa-5649-b07a-6cf79f9b07bc@prodsyse.com>
 <cb4218b1-7fcc-80cb-18ab-361b93a3177e@prodsyse.com>
 <8d6c6dd4-d231-ecc7-c584-6e08f93a81e5@gmail.com>
 <89645BC9-C6BF-4E57-8AA0-9F426BA8AC5E@rstudio.com>
Message-ID: <8ccacd7d-cfc7-887c-ed37-0af6ca156ddd@prodsyse.com>

 ????? Thanks to Duncan, Lionel and Henrik for their quick replies. I 
have further questions:


 ??? ?? ???? 1.? Will GitHub automatically transfer the commits I made 
to R-Forge in the past couple of days?? R-Forge is now at Rev. 420, and 
GitHub is still at 418.? Will 419 and 420 be automatically mirrored onto 
"https://github.com/rforge/ecdat" sometime in the next 24 hours or so?? 
Is there something easy I can do to force that update?


 ??? ?? ???? 2.? Is there a way to make this GitHub version the master?? 
It currently says it is a 'Read-only mirror of "ecdat" from r-forge 
SVN.'? I can probably change "r-forge.r-project.org/projects/ecdat" so 
I'm the only one authorized to make changes there and then stop 
committing changes there.? However, before I do that, I'd want to make 
sure I can commit directly to the GitHub version, etc.


 ??? ?? ???? 3.? How can I make myself the owner and a contributor for 
the GitHub version?? I'm a "Project Admin" on the R-Forge version, but 
currently no one can make any changes to the GitHub version except via 
R-Forge.? There must be a recommended migration process.


 ????? I could create a separate version of this package on GitHub, but 
all the history would be lost.


 ????? Thanks again,
 ????? Spencer Graves


On 2019-06-26 10:35, Lionel Henry wrote:
>> On 26 Jun 2019, at 17:25, Duncan Murdoch <murdoch.duncan at gmail.com> wrote:
>>
>> R-Forge is mirrored on Github; see https://github.com/rforge/ecdat, for example.  That shows 418 commits in its history; presumably that's the full R-forge history.  I think that's newer than Michael Friendly's gist.
>>
>> So I suspect (but haven't tried to do this) that migration now is as simple as doing a Github fork to your own Github account, and then basically forgetting about the R-forge stuff, or deleting it (and I don't know how to do that).
> I think it's better to avoid the Fork button in this case, because forks are
> treated specially in the Github UI. In this case you'll want your repo to
> appear as a main repo, and not a fork. AFAIK the only way to unfork a repo
> is to ask the Github staff to do it.
>
> So instead of forking, use the "+" button on github.com and select
> "Import a repository". This supports both git and svn repos.
>
> Best,
> Lionel


From @pencer@gr@ve@ @end|ng |rom prod@y@e@com  Wed Jun 26 19:38:50 2019
From: @pencer@gr@ve@ @end|ng |rom prod@y@e@com (Spencer Graves)
Date: Wed, 26 Jun 2019 12:38:50 -0500
Subject: [Rd] R-Forge > GitHub?
In-Reply-To: <16B55780-26BD-4C96-B0B4-E9FB1F122DDF@rstudio.com>
References: <71f66de5-e1aa-5649-b07a-6cf79f9b07bc@prodsyse.com>
 <cb4218b1-7fcc-80cb-18ab-361b93a3177e@prodsyse.com>
 <8d6c6dd4-d231-ecc7-c584-6e08f93a81e5@gmail.com>
 <89645BC9-C6BF-4E57-8AA0-9F426BA8AC5E@rstudio.com>
 <8ccacd7d-cfc7-887c-ed37-0af6ca156ddd@prodsyse.com>
 <16B55780-26BD-4C96-B0B4-E9FB1F122DDF@rstudio.com>
Message-ID: <dd8455dc-bc33-4a11-bda0-85a68d0e1ce2@prodsyse.com>

 ????? Thanks.? I'm still having problems:


 ??? ??????? 1.? I went to "github.com" and logged in with my standard 
GitHub account


 ??? ??????? 2.? Then I clicked "+" in the upper right, just left of my 
GitHub ID icon, and selected "Import a repository", as Lionel suggested.


 ??? ??????? 3.? " Your old repository?s clone URL" = 
"https://r-forge.r-project.org/projects/ecdat/" with "Name" = "Ecdat".


 ??? ?? ?? ??????? ** >> This failed, first giving me a 500 failure 
code, then reporting " Repository creation failed."? When I tried it 
again, I got, "The repository Ecdat already exists on this account."


 ????? What do you suggest I try next?


 ????? Thanks,
 ????? Spencer


On 2019-06-26 12:02, Lionel Henry wrote:
> I think all 3 issues are solved by:
>
> 1. Use the "+" button on github.com <http://github.com>?and select 
> "Import a repository".
> 2. Pass the URL of your SVN repo.
>
> Lionel
>
>> On 26 Jun 2019, at 18:58, Spencer Graves <spencer.graves at prodsyse.com 
>> <mailto:spencer.graves at prodsyse.com>> wrote:
>>
>> ????? Thanks to Duncan, Lionel and Henrik for their quick replies. I 
>> have further questions:
>>
>>
>> ??? ?? ???? 1.? Will GitHub automatically transfer the commits I made 
>> to R-Forge in the past couple of days? R-Forge is now at Rev. 420, 
>> and GitHub is still at 418. Will 419 and 420 be automatically 
>> mirrored onto "https://github.com/rforge/ecdat" sometime in the next 
>> 24 hours or so?? Is there something easy I can do to force that update?
>>
>>
>> ??? ?? ???? 2.? Is there a way to make this GitHub version the 
>> master?? It currently says it is a 'Read-only mirror of "ecdat" from 
>> r-forge SVN.'? I can probably change 
>> "r-forge.r-project.org/projects/ecdat 
>> <http://r-forge.r-project.org/projects/ecdat>" so I'm the only one 
>> authorized to make changes there and then stop committing changes 
>> there.? However, before I do that, I'd want to make sure I can commit 
>> directly to the GitHub version, etc.
>>
>>
>> ??? ?? ???? 3.? How can I make myself the owner and a contributor for 
>> the GitHub version?? I'm a "Project Admin" on the R-Forge version, 
>> but currently no one can make any changes to the GitHub version 
>> except via R-Forge.? There must be a recommended migration process.
>>
>>
>> ????? I could create a separate version of this package on GitHub, 
>> but all the history would be lost.
>>
>>
>> ????? Thanks again,
>> ????? Spencer Graves
>>
>>
>> On 2019-06-26 10:35, Lionel Henry wrote:
>>>> On 26 Jun 2019, at 17:25, Duncan Murdoch <murdoch.duncan at gmail.com 
>>>> <mailto:murdoch.duncan at gmail.com>> wrote:
>>>>
>>>> R-Forge is mirrored on Github; see https://github.com/rforge/ecdat, 
>>>> for example. ?That shows 418 commits in its history; presumably 
>>>> that's the full R-forge history. ?I think that's newer than Michael 
>>>> Friendly's gist.
>>>>
>>>> So I suspect (but haven't tried to do this) that migration now is 
>>>> as simple as doing a Github fork to your own Github account, and 
>>>> then basically forgetting about the R-forge stuff, or deleting it 
>>>> (and I don't know how to do that).
>>> I think it's better to avoid the Fork button in this case, because 
>>> forks are
>>> treated specially in the Github UI. In this case you'll want your 
>>> repo to
>>> appear as a main repo, and not a fork. AFAIK the only way to unfork 
>>> a repo
>>> is to ask the Github staff to do it.
>>>
>>> So instead of forking, use the "+" button on github.com 
>>> <http://github.com> and select
>>> "Import a repository". This supports both git and svn repos.
>>>
>>> Best,
>>> Lionel
>>
>


	[[alternative HTML version deleted]]


From m@ech|er @end|ng |rom @t@t@m@th@ethz@ch  Thu Jun 27 16:21:11 2019
From: m@ech|er @end|ng |rom @t@t@m@th@ethz@ch (Martin Maechler)
Date: Thu, 27 Jun 2019 16:21:11 +0200
Subject: [Rd] Seg fault stats::runmed
In-Reply-To: <23479.14853.789755.950142@stat.math.ethz.ch>
References: <3e83fd14-fe55-3c45-93cb-57a146d2efaf@mpiib-berlin.mpg.de>
 <23479.14853.789755.950142@stat.math.ethz.ch>
Message-ID: <23828.53463.63477.41179@stat.math.ethz.ch>

>>>>> Martin Maechler 
>>>>>     on Fri, 5 Oct 2018 12:16:37 +0200 writes:

>>>>> Hilmar Berger 
>>>>>     on Fri, 5 Oct 2018 10:17:49 +0200 writes:

    >> Dear all, I just found this issue:

    >> I just found this issue:

    >> dd1 = c(rep(NaN,82), rep(-1, 144), rep(1, 74))
    >> xx = runmed(dd1, 21)

    >>> R crashes reproducibly in R 3.4.3, R3.4.4 (Ubuntu 14.04/Ubuntu 16.04)

    > and also in the latest development version (we call "R-devel").

    > THank you very much, Hilmar!

    > I will have a look, to ensure missing values (incl NaN) are
    > handled propertly.

That "look" had several parts to it, with long breaks in between;
finally Hilmar kindly asked me privately, and I committed
changes to R-devel (and R 3.6.0 patched), with NEWS entry

    * runmed(x, *) when x contains missing values now works for
      algorithm="Stuetzle", also based on smoothEnds(y) working with
      NA's, and no longer segfaults for the "Turlach" algorithm;
      reported by Hilmar Berger.

but the changes were not at all sufficient to correctly deal
with NA / NaN's in runmed() --- and hence the above NEWS entry
was "fake news" as some may call it.

So, the last 2 weeks or so, I've spent several working days and
some extra hours trying to get this going. {several tries proved
to be insufficient, logically wrong, too optimistic, ...}

In the end, I've implemented a simplistic "imputation"-scheme
for the default case, *and* also added a new optional argument
'na.action' to runmed(),
and committed this half an hour ago :

------------------------------------------------------------------------
r76744 | maechler | 2019-06-27 15:51:04 +0200 (Thu, 27. Jun 2019) 

   M doc/NEWS.Rd
   M src/library/stats/R/runmed.R
   M src/library/stats/man/runmed.Rd
   M src/library/stats/man/smoothEnds.Rd
   M src/library/stats/src/Srunmed.c
   M src/library/stats/src/Trunmed.c
   M src/library/stats/src/init.c
   M src/library/stats/src/statsR.h
   M tests/Examples/stats-Ex.Rout.save
   M tests/reg-tests-1d.R

runmed(<NAs>, "Turlach") did still seg.fault. Now, NEWS entry (76682) should be true; new argument `na.action = ".."` determines *how* NA/NaN are treated
------------------------------------------------------------------------

As this does prevent seg.faults, and if it is acceptable to the
release process, this may also make it into the upcoming R 3.6.1.

--
Martin Maechler
ETH Zurich and R Core Team


From pd@|gd @end|ng |rom gm@||@com  Thu Jun 27 16:23:14 2019
From: pd@|gd @end|ng |rom gm@||@com (peter dalgaard)
Date: Thu, 27 Jun 2019 16:23:14 +0200
Subject: [Rd] methods package: A _R_CHECK_LENGTH_1_LOGIC2_=true error
In-Reply-To: <03ED7150-6BF7-4E6E-AD78-B6DFACE43A97@gmail.com>
References: <CAFDcVCQOWVr0p2e2HONOy9NvqPdpoAH=HPMOEP65K-N6UjhA2g@mail.gmail.com>
 <67D2E7FE-74E3-4379-B9FB-C4028AB808DF@gmail.com>
 <CAFDcVCTARMfrJRs-KiS5UiSo=SoU8+TgPh_KE+e-zFRR0eCSFQ@mail.gmail.com>
 <23824.41030.156424.792062@stat.math.ethz.ch>
 <CAFDcVCTq-Zc49t9HrdVQB4VHhOtuaoOmpGnx9JsAy+_esene3w@mail.gmail.com>
 <03ED7150-6BF7-4E6E-AD78-B6DFACE43A97@gmail.com>
Message-ID: <6334E748-4121-41E7-9CD4-3F3B2278E8DC@gmail.com>

Henrik,

If a minimal reprex is hard to construct, could you perhaps instrument your version of R to include a browser() call at the start of the     

else if(!all(signature[omittedSig] == "missing")) {

branch, run the code that triggers the issue for you (and must hit that branch) and tell us what the "signature" and  "omittedSig" objects look like at that point?

Bonus points for figuring out why it is needed to use numerical indexing in 

        omittedSig <- seq_along(omittedSig)[omittedSig]
        signature[omittedSig] <- "missing" # logical index will extend signature!

(I'm sure there is a valid reason, I just don't get it...)

-pd

> On 25 Jun 2019, at 09:44 , peter dalgaard <pdalgd at gmail.com> wrote:
> 
> Argh! Yes you are right, the "fix" doesn't. And I fell into the same "hey it's a vector so && has to be wrong"-trap. So this has to be reverted to something that has at least failed unconspicuously for a decade.... Will do. Thanks to Martin for remaining suspicious!
> 
> [This code was originally from 2009, by John Chambers. It is not too likely that he'll remember what the intention actually was... The logic does escape me: An omitted signature is only an omitted signature if the signature of the omitted signature is not "missing"? In that case, I think 
> 
> omittedSig[omittedSig] <- (signature[omittedSig] != "missing")
> 
> might work (omittedSig[omittedSig] == TRUE, so we don't need to &. That is, unless there are NA issues.), but I am not at all sure that is what is wanted!
> ]
> 
> -pd
> 
>> On 25 Jun 2019, at 07:16 , Henrik Bengtsson <henrik.bengtsson at gmail.com> wrote:
>> 
>> **Maybe this bug needs to be understood further before applying the
>> patch because patch is most likely also wrong**
>> 
>> Because, from just looking at the expressions, I think neither the R
>> 3.6.0 version:
>> 
>> omittedSig <- omittedSig && (signature[omittedSig] != "missing")
>> 
>> nor the patched version (I proposed):
>> 
>> omittedSig <- omittedSig & (signature[omittedSig] != "missing")
>> 
>> can be correct.  For a starter, 'omittedSig' is a logical vector.  We
>> see that 'omittedSig' is used to subset 'signature'.  In other words,
>> the length of 'signature[omittedSig]' and hence the length of
>> '(signature[omittedSig] != "missing")' will equal sum(omittedSig),
>> i.e. the length will be in {0,1,...,length(omittedSig)}.
>> 
>> The R 3.6.0 version with '&&' is not correct because '&&' requires
>> length(omittedSig) == 1L and sum(omittedSig) == 1L, which is unlikely
>> to be the original intention.
>> 
>> The patched version with '&' is most likely not correct either because
>> 'LHS & RHS' assume length(LHS) == length(RHS), unless it relies on the
>> auto-expansion of either vector.  So, for the '&' version to be
>> correct, it basically requires that length(omittedSig) = length(LHS) =
>> length(RHS) = sum(omittedSig), which also sounds unlikely to be the
>> original intention.
>> 
>> Disclaimer: Please note that I have not at all studied the rest of the
>> function, so the above is just based on that single line plus
>> debugging that 'omittedSig' is a logical vector.
>> 
>> Martin, I don't have the time to dive into this further.  Though I did
>> try to see if it happened when one of oligo's dependencies were
>> loaded, but that was not the case. It kicks in when oligo is loaded.
>> FYI, I can also replicate your non-replicatation on another R 3.6.0
>> version. I'll see if I can narrow down what's different, e.g.
>> comparing sessionInfo():s, etc.  However, I want to reply with
>> findings above asap due to the R 3.6.1 release and you might roll back
>> the patch (since it might introduce other bugs as Peter mentioned).
>> 
>> /Henrik
>> 
>> 
>> On Mon, Jun 24, 2019 at 3:05 AM Martin Maechler
>> <maechler at stat.math.ethz.ch> wrote:
>>> 
>>>>>>>> Henrik Bengtsson via R-core
>>>>>>>>   on Sun, 23 Jun 2019 11:29:58 -0700 writes:
>>> 
>>>> Thank you.
>>>> To correct myself, I can indeed reproduce this with R --vanilla too.
>>>> A reproducible example is:
>>> 
>>>> $ R --vanilla
>>>> R version 3.6.0 Patched (2019-05-31 r76629) -- "Planting of a Tree"
>>>> ...
>>>>> Sys.setenv("_R_CHECK_LENGTH_1_LOGIC2_" = "true")
>>>>> loadNamespace("oligo")
>>>> Error in omittedSig && (signature[omittedSig] != "missing") :
>>>> 'length(x) = 4 > 1' in coercion to 'logical(1)'
>>>> Error: unable to load R code in package ?oligo?
>>> 
>>>> /Henrik
>>> 
>>> Thank you Henrik, for the report, etc, but
>>> hmm... after loading the oligo package, almost 40 (non
>>> base+Recommended) packages have been loaded as well, which hence
>>> need to have been installed before, too ..
>>> which is not quite a "vanilla repr.ex." in my view
>>> 
>>> Worse, I cannot reproduce :
>>> 
>>>> Sys.setenv("_R_CHECK_LENGTH_1_LOGIC2_" = "true")
>>>> Sys.getenv("_R_CHECK_LENGTH_1_LOGIC2_")
>>>   [1] "true"
>>>> debugonce(conformMethod)
>>>> loadNamespace("oligo")
>>>   <environment: namespace:oligo>
>>>   Warning messages:
>>>   1: multiple methods tables found for ?rowSums?
>>>   2: multiple methods tables found for ?colSums?
>>>   3: multiple methods tables found for ?rowMeans?
>>>   4: multiple methods tables found for ?colMeans?
>>>> sessionInfo()
>>>   R Under development (unstable) (2019-06-20 r76729)
>>> 
>>> (similarly with other versions of R >= 3.6.0).
>>> 
>>> So, even though R core has fixed this now in the sources, it
>>> would be nice to have an "as simple as possible"  repr.ex. for this.
>>> 
>>> Martin
>>> 
>>> 
>>> 
>>>> On Sun, Jun 23, 2019 at 1:54 AM peter dalgaard <pdalgd at gmail.com> wrote:
>>>>> 
>>>>> This looks obvious enough, so I just committed your fix to R-devel and R-patched.
>>>>> 
>>>>> I'm at the wrong machine for thorough testing, but at least it seems to build OK. However, I sense some risk that this could uncover sleeping bugs elsewhere, so watch out.
>>>>> 
>>>>> -pd
>>>>> 
>>>>>> On 22 Jun 2019, at 18:49 , Henrik Bengtsson <henrik.bengtsson at gmail.com> wrote:
>>>>>> 
>>>>>> DISCLAIMER: I can not get this error with R --vanilla, so it only
>>>>>> occurs when some other package is also loaded.  I don't have time to
>>>>>> find to narrow that down for a reproducible example, but I believe the
>>>>>> following error in R 3.6.0:
>>>>>> 
>>>>>>> Sys.setenv("_R_CHECK_LENGTH_1_LOGIC2_" = "true")
>>>>>>> library(oligo)
>>>>>> Error in omittedSig && (signature[omittedSig] != "missing") :
>>>>>> 'length(x) = 4 > 1' in coercion to 'logical(1)'
>>>>>> Error: unable to load R code in package 'oligo'
>>>>>> 
>>>>>> is because of a '_R_CHECK_LENGTH_1_LOGIC2_=true' mistake in the
>>>>>> 'methods' package.  Here's the patch:
>>>>>> 
>>>>>> $ svn diff src/library/methods/R/RMethodUtils.R &
>>>>>> [1] 1062
>>>>>> Index: src/library/methods/R/RMethodUtils.R
>>>>>> ===================================================================
>>>>>> --- src/library/methods/R/RMethodUtils.R (revision 76731)
>>>>>> +++ src/library/methods/R/RMethodUtils.R (working copy)
>>>>>> @@ -343,7 +343,7 @@
>>>>>>            call. = TRUE, domain = NA)
>>>>>>   }
>>>>>>   else if(!all(signature[omittedSig] == "missing")) {
>>>>>> -        omittedSig <- omittedSig && (signature[omittedSig] != "missing")
>>>>>> +        omittedSig <- omittedSig & (signature[omittedSig] != "missing")
>>>>>>       .message("Note: ", .renderSignature(f, sig0),
>>>>>>                gettextf("expanding the signature to include omitted
>>>>>> arguments in definition: %s",
>>>>>>                         paste(sigNames[omittedSig], "=
>>>>>> \"missing\"",collapse = ", ")))
>>>>>> [1]+  Done                    svn diff src/library/methods/R/RMethodUtils.R
>>>>>> 
>>>>>> Maybe still in time for R 3.6.1?
>>>>>> 
>>>>>> /Henrik
>>>>>> 
>>>>>> ______________________________________________
>>>>>> R-devel at r-project.org mailing list
>>>>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>>>> 
>>>>> --
>>>>> Peter Dalgaard, Professor,
>>>>> Center for Statistics, Copenhagen Business School
>>>>> Solbjerg Plads 3, 2000 Frederiksberg, Denmark
>>>>> Phone: (+45)38153501
>>>>> Office: A 4.23
>>>>> Email: pd.mes at cbs.dk  Priv: PDalgd at gmail.com
>>> 
>>> ______________________________________________
>>> R-devel at r-project.org mailing list
>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>> 
>> ______________________________________________
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel
> 
> -- 
> Peter Dalgaard, Professor,
> Center for Statistics, Copenhagen Business School
> Solbjerg Plads 3, 2000 Frederiksberg, Denmark
> Phone: (+45)38153501
> Office: A 4.23
> Email: pd.mes at cbs.dk  Priv: PDalgd at gmail.com
> 
> 
> 
> 
> 
> 
> 
> 
> 

-- 
Peter Dalgaard, Professor,
Center for Statistics, Copenhagen Business School
Solbjerg Plads 3, 2000 Frederiksberg, Denmark
Phone: (+45)38153501
Office: A 4.23
Email: pd.mes at cbs.dk  Priv: PDalgd at gmail.com


From m@ech|er @end|ng |rom @t@t@m@th@ethz@ch  Thu Jun 27 17:15:50 2019
From: m@ech|er @end|ng |rom @t@t@m@th@ethz@ch (Martin Maechler)
Date: Thu, 27 Jun 2019 17:15:50 +0200
Subject: [Rd] methods package: A _R_CHECK_LENGTH_1_LOGIC2_=true error
In-Reply-To: <6334E748-4121-41E7-9CD4-3F3B2278E8DC@gmail.com>
References: <CAFDcVCQOWVr0p2e2HONOy9NvqPdpoAH=HPMOEP65K-N6UjhA2g@mail.gmail.com>
 <67D2E7FE-74E3-4379-B9FB-C4028AB808DF@gmail.com>
 <CAFDcVCTARMfrJRs-KiS5UiSo=SoU8+TgPh_KE+e-zFRR0eCSFQ@mail.gmail.com>
 <23824.41030.156424.792062@stat.math.ethz.ch>
 <CAFDcVCTq-Zc49t9HrdVQB4VHhOtuaoOmpGnx9JsAy+_esene3w@mail.gmail.com>
 <03ED7150-6BF7-4E6E-AD78-B6DFACE43A97@gmail.com>
 <6334E748-4121-41E7-9CD4-3F3B2278E8DC@gmail.com>
Message-ID: <23828.56742.426539.104574@stat.math.ethz.ch>

>>>>> peter dalgaard 
>>>>>     on Thu, 27 Jun 2019 16:23:14 +0200 writes:

    > Henrik,
    > If a minimal reprex is hard to construct, could you perhaps instrument your version of R to include a browser() call at the start of the     

    > else if(!all(signature[omittedSig] == "missing")) {

    > branch, run the code that triggers the issue for you (and must hit that branch) and tell us what the "signature" and  "omittedSig" objects look like at that point?

    > Bonus points for figuring out why it is needed to use numerical indexing in 

    > omittedSig <- seq_along(omittedSig)[omittedSig]
    > signature[omittedSig] <- "missing" # logical index will extend signature!

    > (I'm sure there is a valid reason, I just don't get it...)

    > -pd

I've also have mused over that question...
and I had assumed some difference in the case the original
omittedSig contains NAs ... but that's NOT true actually, see:

  > sign2 <- signatures <- LETTERS
  > omittedSig <- LETTERS < "K"
  > omittedSig[c(8,18)] <- NA # now have an omittedSig with {T, F, NA}
  > iSig <- seq_along(omittedSig)[omittedSig]
  > sign2[iSig] <- "missing"
  > signatures[omittedSig] <- "missing"
  > identical(sign2, signatures)
  [1] TRUE
  > 

so I still don't see the case where it makes a difference.

Martin

    >> On 25 Jun 2019, at 09:44 , peter dalgaard <pdalgd at gmail.com> wrote:
    >> 
    >> Argh! Yes you are right, the "fix" doesn't. And I fell into the same "hey it's a vector so && has to be wrong"-trap. So this has to be reverted to something that has at least failed unconspicuously for a decade.... Will do. Thanks to Martin for remaining suspicious!
    >> 
    >> [This code was originally from 2009, by John Chambers. It is not too likely that he'll remember what the intention actually was... The logic does escape me: An omitted signature is only an omitted signature if the signature of the omitted signature is not "missing"? In that case, I think 
    >> 
    >> omittedSig[omittedSig] <- (signature[omittedSig] != "missing")
    >> 
    >> might work (omittedSig[omittedSig] == TRUE, so we don't need to &. That is, unless there are NA issues.), but I am not at all sure that is what is wanted!
    >> ]
    >> 
    >> -pd
    >> 
    >>> On 25 Jun 2019, at 07:16 , Henrik Bengtsson <henrik.bengtsson at gmail.com> wrote:
    >>> 
    >>> **Maybe this bug needs to be understood further before applying the
    >>> patch because patch is most likely also wrong**
    >>> 
    >>> Because, from just looking at the expressions, I think neither the R
    >>> 3.6.0 version:
    >>> 
    >>> omittedSig <- omittedSig && (signature[omittedSig] != "missing")
    >>> 
    >>> nor the patched version (I proposed):
    >>> 
    >>> omittedSig <- omittedSig & (signature[omittedSig] != "missing")
    >>> 
    >>> can be correct.  For a starter, 'omittedSig' is a logical vector.  We
    >>> see that 'omittedSig' is used to subset 'signature'.  In other words,
    >>> the length of 'signature[omittedSig]' and hence the length of
    >>> '(signature[omittedSig] != "missing")' will equal sum(omittedSig),
    >>> i.e. the length will be in {0,1,...,length(omittedSig)}.
    >>> 
    >>> The R 3.6.0 version with '&&' is not correct because '&&' requires
    >>> length(omittedSig) == 1L and sum(omittedSig) == 1L, which is unlikely
    >>> to be the original intention.
    >>> 
    >>> The patched version with '&' is most likely not correct either because
    >>> 'LHS & RHS' assume length(LHS) == length(RHS), unless it relies on the
    >>> auto-expansion of either vector.  So, for the '&' version to be
    >>> correct, it basically requires that length(omittedSig) = length(LHS) =
    >>> length(RHS) = sum(omittedSig), which also sounds unlikely to be the
    >>> original intention.
    >>> 
    >>> Disclaimer: Please note that I have not at all studied the rest of the
    >>> function, so the above is just based on that single line plus
    >>> debugging that 'omittedSig' is a logical vector.
    >>> 
    >>> Martin, I don't have the time to dive into this further.  Though I did
    >>> try to see if it happened when one of oligo's dependencies were
    >>> loaded, but that was not the case. It kicks in when oligo is loaded.
    >>> FYI, I can also replicate your non-replicatation on another R 3.6.0
    >>> version. I'll see if I can narrow down what's different, e.g.
    >>> comparing sessionInfo():s, etc.  However, I want to reply with
    >>> findings above asap due to the R 3.6.1 release and you might roll back
    >>> the patch (since it might introduce other bugs as Peter mentioned).
    >>> 
    >>> /Henrik
    >>> 
    >>> 
    >>> On Mon, Jun 24, 2019 at 3:05 AM Martin Maechler
    >>> <maechler at stat.math.ethz.ch> wrote:
    >>>> 
    >>>>>>>>> Henrik Bengtsson via R-core
    >>>>>>>>> on Sun, 23 Jun 2019 11:29:58 -0700 writes:
    >>>> 
    >>>>> Thank you.
    >>>>> To correct myself, I can indeed reproduce this with R --vanilla too.
    >>>>> A reproducible example is:
    >>>> 
    >>>>> $ R --vanilla
    >>>>> R version 3.6.0 Patched (2019-05-31 r76629) -- "Planting of a Tree"
    >>>>> ...
>>>>> Sys.setenv("_R_CHECK_LENGTH_1_LOGIC2_" = "true")
>>>>> loadNamespace("oligo")
    >>>>> Error in omittedSig && (signature[omittedSig] != "missing") :
    >>>>> 'length(x) = 4 > 1' in coercion to 'logical(1)'
    >>>>> Error: unable to load R code in package ?oligo?
    >>>> 
    >>>>> /Henrik
    >>>> 
    >>>> Thank you Henrik, for the report, etc, but
    >>>> hmm... after loading the oligo package, almost 40 (non
    >>>> base+Recommended) packages have been loaded as well, which hence
    >>>> need to have been installed before, too ..
    >>>> which is not quite a "vanilla repr.ex." in my view
    >>>> 
    >>>> Worse, I cannot reproduce :
    >>>> 
    >>>>> Sys.setenv("_R_CHECK_LENGTH_1_LOGIC2_" = "true")
    >>>>> Sys.getenv("_R_CHECK_LENGTH_1_LOGIC2_")
    >>>> [1] "true"
    >>>>> debugonce(conformMethod)
    >>>>> loadNamespace("oligo")
    >>>> <environment: namespace:oligo>
    >>>> Warning messages:
    >>>> 1: multiple methods tables found for ?rowSums?
    >>>> 2: multiple methods tables found for ?colSums?
    >>>> 3: multiple methods tables found for ?rowMeans?
    >>>> 4: multiple methods tables found for ?colMeans?
    >>>>> sessionInfo()
    >>>> R Under development (unstable) (2019-06-20 r76729)
    >>>> 
    >>>> (similarly with other versions of R >= 3.6.0).
    >>>> 
    >>>> So, even though R core has fixed this now in the sources, it
    >>>> would be nice to have an "as simple as possible"  repr.ex. for this.
    >>>> 
    >>>> Martin
    >>>> 
    >>>> 
    >>>> 
    >>>>> On Sun, Jun 23, 2019 at 1:54 AM peter dalgaard <pdalgd at gmail.com> wrote:
>>>>> 
>>>>> This looks obvious enough, so I just committed your fix to R-devel and R-patched.
>>>>> 
>>>>> I'm at the wrong machine for thorough testing, but at least it seems to build OK. However, I sense some risk that this could uncover sleeping bugs elsewhere, so watch out.
>>>>> 
>>>>> -pd
>>>>> 
    >>>>>>> On 22 Jun 2019, at 18:49 , Henrik Bengtsson <henrik.bengtsson at gmail.com> wrote:
    >>>>>>> 
    >>>>>>> DISCLAIMER: I can not get this error with R --vanilla, so it only
    >>>>>>> occurs when some other package is also loaded.  I don't have time to
    >>>>>>> find to narrow that down for a reproducible example, but I believe the
    >>>>>>> following error in R 3.6.0:
    >>>>>>> 
    >>>>>>>> Sys.setenv("_R_CHECK_LENGTH_1_LOGIC2_" = "true")
    >>>>>>>> library(oligo)
    >>>>>>> Error in omittedSig && (signature[omittedSig] != "missing") :
    >>>>>>> 'length(x) = 4 > 1' in coercion to 'logical(1)'
    >>>>>>> Error: unable to load R code in package 'oligo'
    >>>>>>> 
    >>>>>>> is because of a '_R_CHECK_LENGTH_1_LOGIC2_=true' mistake in the
    >>>>>>> 'methods' package.  Here's the patch:
    >>>>>>> 
    >>>>>>> $ svn diff src/library/methods/R/RMethodUtils.R &
    >>>>>>> [1] 1062
    >>>>>>> Index: src/library/methods/R/RMethodUtils.R
    >>>>>>> ===================================================================
    >>>>>>> --- src/library/methods/R/RMethodUtils.R (revision 76731)
    >>>>>>> +++ src/library/methods/R/RMethodUtils.R (working copy)
    >>>>>>> @@ -343,7 +343,7 @@
    >>>>>>> call. = TRUE, domain = NA)
    >>>>>>> }
    >>>>>>> else if(!all(signature[omittedSig] == "missing")) {
    >>>>>>> -        omittedSig <- omittedSig && (signature[omittedSig] != "missing")
    >>>>>>> +        omittedSig <- omittedSig & (signature[omittedSig] != "missing")
    >>>>>>> .message("Note: ", .renderSignature(f, sig0),
    >>>>>>> gettextf("expanding the signature to include omitted
    >>>>>>> arguments in definition: %s",
    >>>>>>> paste(sigNames[omittedSig], "=
    >>>>>>> \"missing\"",collapse = ", ")))
    >>>>>>> [1]+  Done                    svn diff src/library/methods/R/RMethodUtils.R
    >>>>>>> 
    >>>>>>> Maybe still in time for R 3.6.1?
    >>>>>>> 
    >>>>>>> /Henrik
    >>>>>>> 
    >>>>>>> ______________________________________________
    >>>>>>> R-devel at r-project.org mailing list
    >>>>>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>>>> 
>>>>> --
>>>>> Peter Dalgaard, Professor,
>>>>> Center for Statistics, Copenhagen Business School
>>>>> Solbjerg Plads 3, 2000 Frederiksberg, Denmark
>>>>> Phone: (+45)38153501
>>>>> Office: A 4.23
>>>>> Email: pd.mes at cbs.dk  Priv: PDalgd at gmail.com
    >>>> 
    >>>> ______________________________________________
    >>>> R-devel at r-project.org mailing list
    >>>> https://stat.ethz.ch/mailman/listinfo/r-devel
    >>> 
    >>> ______________________________________________
    >>> R-devel at r-project.org mailing list
    >>> https://stat.ethz.ch/mailman/listinfo/r-devel
    >> 
    >> -- 
    >> Peter Dalgaard, Professor,
    >> Center for Statistics, Copenhagen Business School
    >> Solbjerg Plads 3, 2000 Frederiksberg, Denmark
    >> Phone: (+45)38153501
    >> Office: A 4.23
    >> Email: pd.mes at cbs.dk  Priv: PDalgd at gmail.com
    >> 
    >> 
    >> 
    >> 
    >> 
    >> 
    >> 
    >> 
    >> 

    > -- 
    > Peter Dalgaard, Professor,
    > Center for Statistics, Copenhagen Business School
    > Solbjerg Plads 3, 2000 Frederiksberg, Denmark
    > Phone: (+45)38153501
    > Office: A 4.23
    > Email: pd.mes at cbs.dk  Priv: PDalgd at gmail.com


From henr|k@bengt@@on @end|ng |rom gm@||@com  Fri Jun 28 01:00:39 2019
From: henr|k@bengt@@on @end|ng |rom gm@||@com (Henrik Bengtsson)
Date: Thu, 27 Jun 2019 16:00:39 -0700
Subject: [Rd] methods package: A _R_CHECK_LENGTH_1_LOGIC2_=true error
In-Reply-To: <23828.56742.426539.104574@stat.math.ethz.ch>
References: <CAFDcVCQOWVr0p2e2HONOy9NvqPdpoAH=HPMOEP65K-N6UjhA2g@mail.gmail.com>
 <67D2E7FE-74E3-4379-B9FB-C4028AB808DF@gmail.com>
 <CAFDcVCTARMfrJRs-KiS5UiSo=SoU8+TgPh_KE+e-zFRR0eCSFQ@mail.gmail.com>
 <23824.41030.156424.792062@stat.math.ethz.ch>
 <CAFDcVCTq-Zc49t9HrdVQB4VHhOtuaoOmpGnx9JsAy+_esene3w@mail.gmail.com>
 <03ED7150-6BF7-4E6E-AD78-B6DFACE43A97@gmail.com>
 <6334E748-4121-41E7-9CD4-3F3B2278E8DC@gmail.com>
 <23828.56742.426539.104574@stat.math.ethz.ch>
Message-ID: <CAFDcVCSoHT-GxRyw-bncfnbzbG19t9sUpvPnpg=Edz_j35DiFA@mail.gmail.com>

Using:

untrace(methods::conformMethod)
at <- c(12,4,3,2)
str(body(methods::conformMethod)[[at]])
## language omittedSig <- omittedSig && (signature[omittedSig] != "missing")
cc <- 0L
trace(methods::conformMethod, tracer = quote({
  cc <<- cc + 1L
  print(cc)
  if (cc == 31) {  ## manually identified
    untrace(methods::conformMethod)
    trace(methods::conformMethod, at = list(at), tracer = quote({
      str(list(signature = signature, mnames = mnames, fnames = fnames))
      print(ls())
      try(str(list(omittedSig = omittedSig, signature = signature)))
    }))
  }
}))
loadNamespace("oligo")

gives:

Untracing function "conformMethod" in package "methods"
Tracing function "conformMethod" in package "methods"
Tracing conformMethod(signature, mnames, fnames, f, fdef, definition)
step 12,4,3,2
List of 3
 $ signature: Named chr [1:4] "TilingFeatureSet" "ANY" "ANY" "array"
  ..- attr(*, "names")= chr [1:4] "object" "subset" "target" "value"
  ..- attr(*, "package")= chr [1:4] "oligoClasses" "methods" "methods" "methods"
 $ mnames   : chr [1:2] "object" "value"
 $ fnames   : chr [1:4] "object" "subset" "target" "value"
 [1] "f"          "fdef"       "fnames"     "fsig"       "imf"
 [6] "method"     "mnames"     "omitted"    "omittedSig" "sig0"
[11] "sigNames"   "signature"
List of 2
 $ omittedSig: logi [1:4] FALSE TRUE TRUE FALSE
 $ signature : Named chr [1:4] "TilingFeatureSet" "ANY" "ANY" "array"
  ..- attr(*, "names")= chr [1:4] "object" "subset" "target" "value"
  ..- attr(*, "package")= chr [1:4] "oligoClasses" "methods" "methods" "methods"
Error in omittedSig && (signature[omittedSig] != "missing") :
  'length(x) = 4 > 1' in coercion to 'logical(1)'
Error: unable to load R code in package 'oligo'

This is with:

sessionInfo()
R version 3.6.0 Patched (2019-06-23 r76734)
Platform: x86_64-pc-linux-gnu (64-bit)
Running under: Ubuntu 18.04.2 LTS

Matrix products: default
BLAS:   /home/hb/software/R-devel/R-3-6-branch/lib/R/lib/libRblas.so
LAPACK: /home/hb/software/R-devel/R-3-6-branch/lib/R/lib/libRlapack.so

locale:
 [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C
 [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8
 [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8
 [7] LC_PAPER=en_US.UTF-8       LC_NAME=C
 [9] LC_ADDRESS=C               LC_TELEPHONE=C
[11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C

attached base packages:
[1] stats     graphics  grDevices utils     datasets  methods   base

loaded via a namespace (and not attached):
 [1] Rcpp_1.0.1                  affxparser_1.56.0
 [3] XVector_0.24.0              splines_3.6.0
 [5] GenomicRanges_1.36.0        BiocGenerics_0.30.0
 [7] zlibbioc_1.30.0             IRanges_2.18.1
 [9] bit_1.1-14                  BiocParallel_1.18.0
[11] lattice_0.20-38             foreach_1.4.4
[13] blob_1.1.1                  GenomeInfoDb_1.20.0
[15] tools_3.6.0                 SummarizedExperiment_1.14.0
[17] parallel_3.6.0              grid_3.6.0
[19] Biobase_2.44.0              ff_2.2-14
[21] DBI_1.0.0                   iterators_1.0.10
[23] oligoClasses_1.46.0         matrixStats_0.54.0
[25] digest_0.6.19               bit64_0.9-7
[27] preprocessCore_1.46.0       affyio_1.54.0
[29] Matrix_1.2-17               GenomeInfoDbData_1.2.1
[31] BiocManager_1.30.4          codetools_0.2-16
[33] S4Vectors_0.22.0            bitops_1.0-6
[35] RCurl_1.95-4.12             memoise_1.1.0
[37] RSQLite_2.1.1               DelayedArray_0.10.0
[39] compiler_3.6.0              Biostrings_2.52.0
[41] stats4_3.6.0

/Henrik

On Thu, Jun 27, 2019 at 8:16 AM Martin Maechler
<maechler at stat.math.ethz.ch> wrote:
>
> >>>>> peter dalgaard
> >>>>>     on Thu, 27 Jun 2019 16:23:14 +0200 writes:
>
>     > Henrik,
>     > If a minimal reprex is hard to construct, could you perhaps instrument your version of R to include a browser() call at the start of the
>
>     > else if(!all(signature[omittedSig] == "missing")) {
>
>     > branch, run the code that triggers the issue for you (and must hit that branch) and tell us what the "signature" and  "omittedSig" objects look like at that point?
>
>     > Bonus points for figuring out why it is needed to use numerical indexing in
>
>     > omittedSig <- seq_along(omittedSig)[omittedSig]
>     > signature[omittedSig] <- "missing" # logical index will extend signature!
>
>     > (I'm sure there is a valid reason, I just don't get it...)
>
>     > -pd
>
> I've also have mused over that question...
> and I had assumed some difference in the case the original
> omittedSig contains NAs ... but that's NOT true actually, see:
>
>   > sign2 <- signatures <- LETTERS
>   > omittedSig <- LETTERS < "K"
>   > omittedSig[c(8,18)] <- NA # now have an omittedSig with {T, F, NA}
>   > iSig <- seq_along(omittedSig)[omittedSig]
>   > sign2[iSig] <- "missing"
>   > signatures[omittedSig] <- "missing"
>   > identical(sign2, signatures)
>   [1] TRUE
>   >
>
> so I still don't see the case where it makes a difference.
>
> Martin
>
>     >> On 25 Jun 2019, at 09:44 , peter dalgaard <pdalgd at gmail.com> wrote:
>     >>
>     >> Argh! Yes you are right, the "fix" doesn't. And I fell into the same "hey it's a vector so && has to be wrong"-trap. So this has to be reverted to something that has at least failed unconspicuously for a decade.... Will do. Thanks to Martin for remaining suspicious!
>     >>
>     >> [This code was originally from 2009, by John Chambers. It is not too likely that he'll remember what the intention actually was... The logic does escape me: An omitted signature is only an omitted signature if the signature of the omitted signature is not "missing"? In that case, I think
>     >>
>     >> omittedSig[omittedSig] <- (signature[omittedSig] != "missing")
>     >>
>     >> might work (omittedSig[omittedSig] == TRUE, so we don't need to &. That is, unless there are NA issues.), but I am not at all sure that is what is wanted!
>     >> ]
>     >>
>     >> -pd
>     >>
>     >>> On 25 Jun 2019, at 07:16 , Henrik Bengtsson <henrik.bengtsson at gmail.com> wrote:
>     >>>
>     >>> **Maybe this bug needs to be understood further before applying the
>     >>> patch because patch is most likely also wrong**
>     >>>
>     >>> Because, from just looking at the expressions, I think neither the R
>     >>> 3.6.0 version:
>     >>>
>     >>> omittedSig <- omittedSig && (signature[omittedSig] != "missing")
>     >>>
>     >>> nor the patched version (I proposed):
>     >>>
>     >>> omittedSig <- omittedSig & (signature[omittedSig] != "missing")
>     >>>
>     >>> can be correct.  For a starter, 'omittedSig' is a logical vector.  We
>     >>> see that 'omittedSig' is used to subset 'signature'.  In other words,
>     >>> the length of 'signature[omittedSig]' and hence the length of
>     >>> '(signature[omittedSig] != "missing")' will equal sum(omittedSig),
>     >>> i.e. the length will be in {0,1,...,length(omittedSig)}.
>     >>>
>     >>> The R 3.6.0 version with '&&' is not correct because '&&' requires
>     >>> length(omittedSig) == 1L and sum(omittedSig) == 1L, which is unlikely
>     >>> to be the original intention.
>     >>>
>     >>> The patched version with '&' is most likely not correct either because
>     >>> 'LHS & RHS' assume length(LHS) == length(RHS), unless it relies on the
>     >>> auto-expansion of either vector.  So, for the '&' version to be
>     >>> correct, it basically requires that length(omittedSig) = length(LHS) =
>     >>> length(RHS) = sum(omittedSig), which also sounds unlikely to be the
>     >>> original intention.
>     >>>
>     >>> Disclaimer: Please note that I have not at all studied the rest of the
>     >>> function, so the above is just based on that single line plus
>     >>> debugging that 'omittedSig' is a logical vector.
>     >>>
>     >>> Martin, I don't have the time to dive into this further.  Though I did
>     >>> try to see if it happened when one of oligo's dependencies were
>     >>> loaded, but that was not the case. It kicks in when oligo is loaded.
>     >>> FYI, I can also replicate your non-replicatation on another R 3.6.0
>     >>> version. I'll see if I can narrow down what's different, e.g.
>     >>> comparing sessionInfo():s, etc.  However, I want to reply with
>     >>> findings above asap due to the R 3.6.1 release and you might roll back
>     >>> the patch (since it might introduce other bugs as Peter mentioned).
>     >>>
>     >>> /Henrik
>     >>>
>     >>>
>     >>> On Mon, Jun 24, 2019 at 3:05 AM Martin Maechler
>     >>> <maechler at stat.math.ethz.ch> wrote:
>     >>>>
>     >>>>>>>>> Henrik Bengtsson via R-core
>     >>>>>>>>> on Sun, 23 Jun 2019 11:29:58 -0700 writes:
>     >>>>
>     >>>>> Thank you.
>     >>>>> To correct myself, I can indeed reproduce this with R --vanilla too.
>     >>>>> A reproducible example is:
>     >>>>
>     >>>>> $ R --vanilla
>     >>>>> R version 3.6.0 Patched (2019-05-31 r76629) -- "Planting of a Tree"
>     >>>>> ...
> >>>>> Sys.setenv("_R_CHECK_LENGTH_1_LOGIC2_" = "true")
> >>>>> loadNamespace("oligo")
>     >>>>> Error in omittedSig && (signature[omittedSig] != "missing") :
>     >>>>> 'length(x) = 4 > 1' in coercion to 'logical(1)'
>     >>>>> Error: unable to load R code in package ?oligo?
>     >>>>
>     >>>>> /Henrik
>     >>>>
>     >>>> Thank you Henrik, for the report, etc, but
>     >>>> hmm... after loading the oligo package, almost 40 (non
>     >>>> base+Recommended) packages have been loaded as well, which hence
>     >>>> need to have been installed before, too ..
>     >>>> which is not quite a "vanilla repr.ex." in my view
>     >>>>
>     >>>> Worse, I cannot reproduce :
>     >>>>
>     >>>>> Sys.setenv("_R_CHECK_LENGTH_1_LOGIC2_" = "true")
>     >>>>> Sys.getenv("_R_CHECK_LENGTH_1_LOGIC2_")
>     >>>> [1] "true"
>     >>>>> debugonce(conformMethod)
>     >>>>> loadNamespace("oligo")
>     >>>> <environment: namespace:oligo>
>     >>>> Warning messages:
>     >>>> 1: multiple methods tables found for ?rowSums?
>     >>>> 2: multiple methods tables found for ?colSums?
>     >>>> 3: multiple methods tables found for ?rowMeans?
>     >>>> 4: multiple methods tables found for ?colMeans?
>     >>>>> sessionInfo()
>     >>>> R Under development (unstable) (2019-06-20 r76729)
>     >>>>
>     >>>> (similarly with other versions of R >= 3.6.0).
>     >>>>
>     >>>> So, even though R core has fixed this now in the sources, it
>     >>>> would be nice to have an "as simple as possible"  repr.ex. for this.
>     >>>>
>     >>>> Martin
>     >>>>
>     >>>>
>     >>>>
>     >>>>> On Sun, Jun 23, 2019 at 1:54 AM peter dalgaard <pdalgd at gmail.com> wrote:
> >>>>>
> >>>>> This looks obvious enough, so I just committed your fix to R-devel and R-patched.
> >>>>>
> >>>>> I'm at the wrong machine for thorough testing, but at least it seems to build OK. However, I sense some risk that this could uncover sleeping bugs elsewhere, so watch out.
> >>>>>
> >>>>> -pd
> >>>>>
>     >>>>>>> On 22 Jun 2019, at 18:49 , Henrik Bengtsson <henrik.bengtsson at gmail.com> wrote:
>     >>>>>>>
>     >>>>>>> DISCLAIMER: I can not get this error with R --vanilla, so it only
>     >>>>>>> occurs when some other package is also loaded.  I don't have time to
>     >>>>>>> find to narrow that down for a reproducible example, but I believe the
>     >>>>>>> following error in R 3.6.0:
>     >>>>>>>
>     >>>>>>>> Sys.setenv("_R_CHECK_LENGTH_1_LOGIC2_" = "true")
>     >>>>>>>> library(oligo)
>     >>>>>>> Error in omittedSig && (signature[omittedSig] != "missing") :
>     >>>>>>> 'length(x) = 4 > 1' in coercion to 'logical(1)'
>     >>>>>>> Error: unable to load R code in package 'oligo'
>     >>>>>>>
>     >>>>>>> is because of a '_R_CHECK_LENGTH_1_LOGIC2_=true' mistake in the
>     >>>>>>> 'methods' package.  Here's the patch:
>     >>>>>>>
>     >>>>>>> $ svn diff src/library/methods/R/RMethodUtils.R &
>     >>>>>>> [1] 1062
>     >>>>>>> Index: src/library/methods/R/RMethodUtils.R
>     >>>>>>> ===================================================================
>     >>>>>>> --- src/library/methods/R/RMethodUtils.R (revision 76731)
>     >>>>>>> +++ src/library/methods/R/RMethodUtils.R (working copy)
>     >>>>>>> @@ -343,7 +343,7 @@
>     >>>>>>> call. = TRUE, domain = NA)
>     >>>>>>> }
>     >>>>>>> else if(!all(signature[omittedSig] == "missing")) {
>     >>>>>>> -        omittedSig <- omittedSig && (signature[omittedSig] != "missing")
>     >>>>>>> +        omittedSig <- omittedSig & (signature[omittedSig] != "missing")
>     >>>>>>> .message("Note: ", .renderSignature(f, sig0),
>     >>>>>>> gettextf("expanding the signature to include omitted
>     >>>>>>> arguments in definition: %s",
>     >>>>>>> paste(sigNames[omittedSig], "=
>     >>>>>>> \"missing\"",collapse = ", ")))
>     >>>>>>> [1]+  Done                    svn diff src/library/methods/R/RMethodUtils.R
>     >>>>>>>
>     >>>>>>> Maybe still in time for R 3.6.1?
>     >>>>>>>
>     >>>>>>> /Henrik
>     >>>>>>>
>     >>>>>>> ______________________________________________
>     >>>>>>> R-devel at r-project.org mailing list
>     >>>>>>> https://stat.ethz.ch/mailman/listinfo/r-devel
> >>>>>
> >>>>> --
> >>>>> Peter Dalgaard, Professor,
> >>>>> Center for Statistics, Copenhagen Business School
> >>>>> Solbjerg Plads 3, 2000 Frederiksberg, Denmark
> >>>>> Phone: (+45)38153501
> >>>>> Office: A 4.23
> >>>>> Email: pd.mes at cbs.dk  Priv: PDalgd at gmail.com
>     >>>>
>     >>>> ______________________________________________
>     >>>> R-devel at r-project.org mailing list
>     >>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>     >>>
>     >>> ______________________________________________
>     >>> R-devel at r-project.org mailing list
>     >>> https://stat.ethz.ch/mailman/listinfo/r-devel
>     >>
>     >> --
>     >> Peter Dalgaard, Professor,
>     >> Center for Statistics, Copenhagen Business School
>     >> Solbjerg Plads 3, 2000 Frederiksberg, Denmark
>     >> Phone: (+45)38153501
>     >> Office: A 4.23
>     >> Email: pd.mes at cbs.dk  Priv: PDalgd at gmail.com
>     >>
>     >>
>     >>
>     >>
>     >>
>     >>
>     >>
>     >>
>     >>
>
>     > --
>     > Peter Dalgaard, Professor,
>     > Center for Statistics, Copenhagen Business School
>     > Solbjerg Plads 3, 2000 Frederiksberg, Denmark
>     > Phone: (+45)38153501
>     > Office: A 4.23
>     > Email: pd.mes at cbs.dk  Priv: PDalgd at gmail.com
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From @pencer@gr@ve@ @end|ng |rom prod@y@e@com  Fri Jun 28 07:00:56 2019
From: @pencer@gr@ve@ @end|ng |rom prod@y@e@com (Spencer Graves)
Date: Fri, 28 Jun 2019 00:00:56 -0500
Subject: [Rd] R-Forge > GitHub?
In-Reply-To: <CA+rDMK+HXUKnA0j49czOf99M62QBfnyO36Sf1MBEe8a5AO-+XA@mail.gmail.com>
References: <71f66de5-e1aa-5649-b07a-6cf79f9b07bc@prodsyse.com>
 <cb4218b1-7fcc-80cb-18ab-361b93a3177e@prodsyse.com>
 <8d6c6dd4-d231-ecc7-c584-6e08f93a81e5@gmail.com>
 <89645BC9-C6BF-4E57-8AA0-9F426BA8AC5E@rstudio.com>
 <CA+rDMK+HXUKnA0j49czOf99M62QBfnyO36Sf1MBEe8a5AO-+XA@mail.gmail.com>
Message-ID: <06a9569b-5b68-a288-8c4f-1537120a5213@prodsyse.com>

Hi, Henrik Singmann et al.:


 ????? Thanks for the suggestions.? I tried again to pull 
"https://github.com/sbgraves237/Ecdat" from R-Forge, with the same 
"Error 500" as before.? Then I tried pulling from 
"https://github.com/rforge/ecdat", which seemed to work ... AND the copy 
I pulled was at the latest revisions I had posted to R-Forge (520), so 
that makes it easier going forward.


 ????? What do you suggest I do next?? I'm thinking of the following:


 ??? ??????? 1.? Clone a copy of "https://github.com/sbgraves237/Ecdat" 
to my local computer and confirm that it works.


 ??? ??????? 2.? Modify "https://r-forge.r-project.org/projects/ecdat/" 
to make me the only remaining project member, if I can.


 ??? ??????? 3.? Contact GitHub support and ask them if they can delete 
"https://github.com/rforge/ecdat", because it is an orphan with 0 
contributors, and anyone who might want it should be referred to 
"https://github.com/sbgraves237/Ecdat".


 ???? ??????? 4.? Email all the previous project members on 
"https://r-forge.r-project.org/projects/ecdat/" to tell them what I've 
done, in case they want to do anything more with this in the future.


 ????? I believe I know how to do 1, 2, and 4, and I can probably figure 
out 3.? However, before I start on this, I felt a need to thank everyone 
who contributed to this thread and invite comments, especially if 
someone thinks I might be better off doing something different.


 ????? Spencer Graves


On 2019-06-26 16:34, Henrik Singmann wrote:
> Whereas it is true that one has to contact GitHub to detach a GitHub 
> repository, it really is no problem (or at least was no problem in 
> 2016). I wanted to do so when I took over the maintainer role of 
> LaplacesDemon which only remained on GitHub as a fork on some other 
> person's private account. So I forked and then contacted 
> GitHub?support?and simply asked them to remove the "forked form" 
> reference on my new repository.?They then quickly detached my 
> repository.?As you can see, the "forked from" is gone: 
> https://github.com/LaplacesDemonR/LaplacesDemon
>
> In their response to my request they used the phrasing "Fork is 
> detached." which suggests that this is their preferred term for this 
> step.
>
> Best,
> Henrik
>
>
>
> Am Mi., 26. Juni 2019 um 16:38?Uhr schrieb Lionel Henry 
> <lionel at rstudio.com <mailto:lionel at rstudio.com>>:
>
>
>     > On 26 Jun 2019, at 17:25, Duncan Murdoch
>     <murdoch.duncan at gmail.com <mailto:murdoch.duncan at gmail.com>> wrote:
>     >
>     > R-Forge is mirrored on Github; see
>     https://github.com/rforge/ecdat, for example.? That shows 418
>     commits in its history; presumably that's the full R-forge
>     history.? I think that's newer than Michael Friendly's gist.
>     >
>     > So I suspect (but haven't tried to do this) that migration now
>     is as simple as doing a Github fork to your own Github account,
>     and then basically forgetting about the R-forge stuff, or deleting
>     it (and I don't know how to do that).
>
>     I think it's better to avoid the Fork button in this case, because
>     forks are
>     treated specially in the Github UI. In this case you'll want your
>     repo to
>     appear as a main repo, and not a fork. AFAIK the only way to
>     unfork a repo
>     is to ask the Github staff to do it.
>
>     So instead of forking, use the "+" button on github.com
>     <http://github.com> and select
>     "Import a repository". This supports both git and svn repos.
>
>     Best,
>     Lionel
>     ______________________________________________
>     R-devel at r-project.org <mailto:R-devel at r-project.org> mailing list
>     https://stat.ethz.ch/mailman/listinfo/r-devel
>
>
>
> -- 
> Dr. Henrik Singmann
> Assistant Professor, Department of Psychology
> University of Warwick, UK
> http://singmann.org


	[[alternative HTML version deleted]]


From rkoenker @end|ng |rom ||||no|@@edu  Fri Jun 28 11:06:52 2019
From: rkoenker @end|ng |rom ||||no|@@edu (Koenker, Roger W)
Date: Fri, 28 Jun 2019 09:06:52 +0000
Subject: [Rd] tools::package_native_routine_registration_skeleton?
Message-ID: <00702A4F-67B0-4B0C-A791-E72AF51C4F9C@illinois.edu>

I?m trying to sort out the consequences of adding registration for my quantreg package.
I?ve generated a quantreg_init.c file with the directive in the message title, and placed it
in my src directory.  The first issue is that 3 of the 20, or so registered functions have
the same name in fortran as the calling function in R.   This seems easy to fix.  More
puzzling is that R CMD check now reports that the fortran names of all the registered fortran
functions are ?undocumented objects?.  Can someone point me to the officially sanctioned
way to deal with this:  presumably I don?t need to document them as if they were R functions.

Roger Koenker
r.koenker at ucl.ac.uk<mailto:r.koenker at ucl.ac.uk>
Department of Economics, UCL
London  WC1H 0AX.



	[[alternative HTML version deleted]]


From murdoch@dunc@n @end|ng |rom gm@||@com  Fri Jun 28 12:13:42 2019
From: murdoch@dunc@n @end|ng |rom gm@||@com (Duncan Murdoch)
Date: Fri, 28 Jun 2019 06:13:42 -0400
Subject: [Rd] R-Forge > GitHub?
In-Reply-To: <CA+rDMK+VT+OD9g85r7NFTahG=2U9dujQjY7zTuJkBAeSA9x0NQ@mail.gmail.com>
References: <71f66de5-e1aa-5649-b07a-6cf79f9b07bc@prodsyse.com>
 <cb4218b1-7fcc-80cb-18ab-361b93a3177e@prodsyse.com>
 <8d6c6dd4-d231-ecc7-c584-6e08f93a81e5@gmail.com>
 <89645BC9-C6BF-4E57-8AA0-9F426BA8AC5E@rstudio.com>
 <CA+rDMK+HXUKnA0j49czOf99M62QBfnyO36Sf1MBEe8a5AO-+XA@mail.gmail.com>
 <06a9569b-5b68-a288-8c4f-1537120a5213@prodsyse.com>
 <CA+rDMK+VT+OD9g85r7NFTahG=2U9dujQjY7zTuJkBAeSA9x0NQ@mail.gmail.com>
Message-ID: <336eb88d-ff08-b301-687c-3a315343ff5d@gmail.com>

Henrik's advice is all good.  I would say his idea of the final commit 
of a README pointer is better than deleting things at R-forge; there is 
likely old information out there somewhere pointing to R-forge as a 
location for Ecdat development, and any bug reports or discussion on 
R-forge will not have been copied over to Github.

Duncan Murdoch

On 28/06/2019 4:14 a.m., Henrik Singmann wrote:
> Re your point 3: Because you have managed to create a GitHub version of 
> your repository that is not a fork of https://github.com/rforge/ecdat, 
> but its own independent repository, contacting GitHub support might not 
> be the right way forward. Note that https://github.com/rforge?is simply 
> a read-only mirror of the complete R-Forge repository (and at least to 
> me it is unclear of whether GitHub itself or some independent party is 
> responsible for it, but I would assume it is not GitHub). So the easiest 
> way to change something in https://github.com/rforge/ecdat?would be to 
> make the corresponding change in your R-forge repository and wait until 
> it propagates to GitHub.
> 
> So either delete the R-forge repository or make a final commit replacing 
> its content with a README pointing towards the new GitHub repo at 
> https://github.com/sbgraves237/Ecdat. Together with emailing all  
> previous project members this should ensure that interested party will 
> know about the new place where your package is being developed/hosted.
> 
> You might also want to add a new README to the new GitHub repository 
> which replaces the current R-forge one and provides installation 
> instructions.
> 
> Best,
> Henrik
> 
> 
> 
> Am Fr., 28. Juni 2019 um 06:01?Uhr schrieb Spencer Graves 
> <spencer.graves at prodsyse.com <mailto:spencer.graves at prodsyse.com>>:
> 
>     Hi, Henrik Singmann et al.:
> 
> 
>      ????? Thanks for the suggestions.? I tried again to pull
>     "https://github.com/sbgraves237/Ecdat"
>     <https://github.com/sbgraves237/Ecdat> from R-Forge, with the same
>     "Error 500" as before.? Then I tried pulling from
>     "https://github.com/rforge/ecdat" <https://github.com/rforge/ecdat>,
>     which seemed to work ... AND the copy I pulled was at the latest
>     revisions I had posted to R-Forge (520), so that makes it easier
>     going forward.
> 
> 
>      ????? What do you suggest I do next?? I'm thinking of the following:
> 
> 
>      ??? ??????? 1.? Clone a copy of
>     "https://github.com/sbgraves237/Ecdat"
>     <https://github.com/sbgraves237/Ecdat> to my local computer and
>     confirm that it works.
> 
> 
>      ??? ??????? 2.? Modify
>     "https://r-forge.r-project.org/projects/ecdat/"
>     <https://r-forge.r-project.org/projects/ecdat/> to make me the only
>     remaining project member, if I can.
> 
> 
>      ??? ??????? 3.? Contact GitHub support and ask them if they can
>     delete "https://github.com/rforge/ecdat"
>     <https://github.com/rforge/ecdat>, because it is an orphan with 0
>     contributors, and anyone who might want it should be referred to
>     "https://github.com/sbgraves237/Ecdat"
>     <https://github.com/sbgraves237/Ecdat>.
> 
> 
>      ???? ??????? 4.? Email all the previous project members on
>     "https://r-forge.r-project.org/projects/ecdat/"
>     <https://r-forge.r-project.org/projects/ecdat/> to tell them what
>     I've done, in case they want to do anything more with this in the
>     future.
> 
> 
>      ????? I believe I know how to do 1, 2, and 4, and I can probably
>     figure out 3.? However, before I start on this, I felt a need to
>     thank everyone who contributed to this thread and invite comments,
>     especially if someone thinks I might be better off doing something
>     different.
> 
> 
>      ????? Spencer Graves
> 
> 
>     On 2019-06-26 16:34, Henrik Singmann wrote:
>>     Whereas it is true that one has to contact GitHub to detach a
>>     GitHub repository, it really is no problem (or at least was no
>>     problem in 2016). I wanted to do so when I took over the
>>     maintainer role of LaplacesDemon which only remained on GitHub as
>>     a fork on some other person's private account. So I forked and
>>     then contacted GitHub?support?and simply asked them to remove the
>>     "forked form" reference on my new repository.?They then quickly
>>     detached my repository.?As you can see, the "forked from" is gone:
>>     https://github.com/LaplacesDemonR/LaplacesDemon
>>
>>     In their response to my request they used the phrasing "Fork is
>>     detached." which suggests that this is their preferred term for
>>     this step.
>>
>>     Best,
>>     Henrik
>>
>>
>>
>>     Am Mi., 26. Juni 2019 um 16:38?Uhr schrieb Lionel Henry
>>     <lionel at rstudio.com <mailto:lionel at rstudio.com>>:
>>
>>
>>         > On 26 Jun 2019, at 17:25, Duncan Murdoch
>>         <murdoch.duncan at gmail.com <mailto:murdoch.duncan at gmail.com>>
>>         wrote:
>>         >
>>         > R-Forge is mirrored on Github; see
>>         https://github.com/rforge/ecdat, for example.? That shows 418
>>         commits in its history; presumably that's the full R-forge
>>         history.? I think that's newer than Michael Friendly's gist.
>>         >
>>         > So I suspect (but haven't tried to do this) that migration
>>         now is as simple as doing a Github fork to your own Github
>>         account, and then basically forgetting about the R-forge
>>         stuff, or deleting it (and I don't know how to do that).
>>
>>         I think it's better to avoid the Fork button in this case,
>>         because forks are
>>         treated specially in the Github UI. In this case you'll want
>>         your repo to
>>         appear as a main repo, and not a fork. AFAIK the only way to
>>         unfork a repo
>>         is to ask the Github staff to do it.
>>
>>         So instead of forking, use the "+" button on github.com
>>         <http://github.com> and select
>>         "Import a repository". This supports both git and svn repos.
>>
>>         Best,
>>         Lionel
>>         ______________________________________________
>>         R-devel at r-project.org <mailto:R-devel at r-project.org> mailing list
>>         https://stat.ethz.ch/mailman/listinfo/r-devel
>>
>>
>>
>>     -- 
>>     Dr. Henrik Singmann
>>     Assistant Professor, Department of Psychology
>>     University of Warwick, UK
>>     http://singmann.org
> 
> 
> 
> -- 
> Dr. Henrik Singmann
> Assistant Professor, Department of Psychology
> University of Warwick, UK
> http://singmann.org


From georg|@bo@hn@kov @end|ng |rom m@nche@ter@@c@uk  Fri Jun 28 12:23:28 2019
From: georg|@bo@hn@kov @end|ng |rom m@nche@ter@@c@uk (Georgi Boshnakov)
Date: Fri, 28 Jun 2019 10:23:28 +0000
Subject: [Rd] tools::package_native_routine_registration_skeleton?
Message-ID: <438D2EC9EAFE5946B2D5864670EA468E018F7204BD@MBXP02.ds.man.ac.uk>

> ... reports that the fortran names of all the registered fortran functions are ?undocumented objects?...  

Those symbols should not be exported. In quantreg v5.33, NAMESPACE has 'exportPattern(".")'. Maybe it is a good time to remove that and export explicitly the symbols that are meant for export.

Georgi Boshnakov


------------------------------

Message: 6
Date: Fri, 28 Jun 2019 09:06:52 +0000
From: "Koenker, Roger W" <rkoenker at illinois.edu>
To: "r-devel at r-project.org" <r-devel at r-project.org>
Subject: [Rd] tools::package_native_routine_registration_skeleton?
Message-ID: <00702A4F-67B0-4B0C-A791-E72AF51C4F9C at illinois.edu>
Content-Type: text/plain; charset="utf-8"

I?m trying to sort out the consequences of adding registration for my quantreg package.
I?ve generated a quantreg_init.c file with the directive in the message title, and placed it
in my src directory.  The first issue is that 3 of the 20, or so registered functions have
the same name in fortran as the calling function in R.   This seems easy to fix.  More
puzzling is that R CMD check now reports that the fortran names of all the registered fortran
functions are ?undocumented objects?.  Can someone point me to the officially sanctioned
way to deal with this:  presumably I don?t need to document them as if they were R functions.

Roger Koenker
r.koenker at ucl.ac.uk<mailto:r.koenker at ucl.ac.uk>
Department of Economics, UCL
London  WC1H 0AX.



	[[alternative HTML version deleted]]



------------------------------

Subject: Digest Footer

_______________________________________________
R-devel at r-project.org mailing list  DIGESTED
https://stat.ethz.ch/mailman/listinfo/r-devel


------------------------------

End of R-devel Digest, Vol 196, Issue 25
****************************************

From rkoenker @end|ng |rom ||||no|@@edu  Fri Jun 28 12:27:39 2019
From: rkoenker @end|ng |rom ||||no|@@edu (Koenker, Roger W)
Date: Fri, 28 Jun 2019 10:27:39 +0000
Subject: [Rd] tools::package_native_routine_registration_skeleton?
In-Reply-To: <438D2EC9EAFE5946B2D5864670EA468E018F7204BD@MBXP02.ds.man.ac.uk>
References: <438D2EC9EAFE5946B2D5864670EA468E018F7204BD@MBXP02.ds.man.ac.uk>
Message-ID: <E9E44D83-4A0B-46C6-8F29-B07F61F29C4E@illinois.edu>

Thanks,  I was just coming to that conclusion and beginning to look for a way to make a list of
exportable objects.

Roger Koenker
r.koenker at ucl.ac.uk<mailto:r.koenker at ucl.ac.uk>
Department of Economics, UCL
London  WC1H 0AX.


On Jun 28, 2019, at 11:23 AM, Georgi Boshnakov <georgi.boshnakov at manchester.ac.uk<mailto:georgi.boshnakov at manchester.ac.uk>> wrote:

... reports that the fortran names of all the registered fortran functions are ?undocumented objects?...

Those symbols should not be exported. In quantreg v5.33, NAMESPACE has 'exportPattern(".")'. Maybe it is a good time to remove that and export explicitly the symbols that are meant for export.

Georgi Boshnakov


------------------------------

Message: 6
Date: Fri, 28 Jun 2019 09:06:52 +0000
From: "Koenker, Roger W" <rkoenker at illinois.edu<mailto:rkoenker at illinois.edu>>
To: "r-devel at r-project.org<mailto:r-devel at r-project.org>" <r-devel at r-project.org<mailto:r-devel at r-project.org>>
Subject: [Rd] tools::package_native_routine_registration_skeleton?
Message-ID: <00702A4F-67B0-4B0C-A791-E72AF51C4F9C at illinois.edu<mailto:00702A4F-67B0-4B0C-A791-E72AF51C4F9C at illinois.edu>>
Content-Type: text/plain; charset="utf-8"

I?m trying to sort out the consequences of adding registration for my quantreg package.
I?ve generated a quantreg_init.c file with the directive in the message title, and placed it
in my src directory.  The first issue is that 3 of the 20, or so registered functions have
the same name in fortran as the calling function in R.   This seems easy to fix.  More
puzzling is that R CMD check now reports that the fortran names of all the registered fortran
functions are ?undocumented objects?.  Can someone point me to the officially sanctioned
way to deal with this:  presumably I don?t need to document them as if they were R functions.

Roger Koenker
r.koenker at ucl.ac.uk<mailto:r.koenker at ucl.ac.uk><mailto:r.koenker at ucl.ac.uk>
Department of Economics, UCL
London  WC1H 0AX.



[[alternative HTML version deleted]]



------------------------------

Subject: Digest Footer

_______________________________________________
R-devel at r-project.org<mailto:R-devel at r-project.org> mailing list  DIGESTED
https://stat.ethz.ch/mailman/listinfo/r-devel


------------------------------

End of R-devel Digest, Vol 196, Issue 25
****************************************


	[[alternative HTML version deleted]]


From c@@rd|@g@bor @end|ng |rom gm@||@com  Fri Jun 28 12:26:31 2019
From: c@@rd|@g@bor @end|ng |rom gm@||@com (=?UTF-8?B?R8OhYm9yIENzw6FyZGk=?=)
Date: Fri, 28 Jun 2019 11:26:31 +0100
Subject: [Rd] R-Forge > GitHub?
In-Reply-To: <06a9569b-5b68-a288-8c4f-1537120a5213@prodsyse.com>
References: <71f66de5-e1aa-5649-b07a-6cf79f9b07bc@prodsyse.com>
 <cb4218b1-7fcc-80cb-18ab-361b93a3177e@prodsyse.com>
 <8d6c6dd4-d231-ecc7-c584-6e08f93a81e5@gmail.com>
 <89645BC9-C6BF-4E57-8AA0-9F426BA8AC5E@rstudio.com>
 <CA+rDMK+HXUKnA0j49czOf99M62QBfnyO36Sf1MBEe8a5AO-+XA@mail.gmail.com>
 <06a9569b-5b68-a288-8c4f-1537120a5213@prodsyse.com>
Message-ID: <CABtg=Km5cdEWyUM55FEiabNdZdHvJoELHZ7RCRMPgQhUg9Gc6w@mail.gmail.com>

On Fri, Jun 28, 2019 at 6:01 AM Spencer Graves <spencer.graves at prodsyse.com>
wrote:
[...]

>              1.  Clone a copy of "https://github.com/sbgraves237/Ecdat"
> to my local computer and confirm that it works.
>

I suggest you put each package in its own repository, because our R tooling
(e.g. Travis CI, etc.) works best if you do that. This is quite easy to do
nowadays: https://stackoverflow.com/a/17864475/604364


>              3.  Contact GitHub support and ask them if they can delete
> "https://github.com/rforge/ecdat", because it is an orphan with 0
> contributors, and anyone who might want it should be referred to
> "https://github.com/sbgraves237/Ecdat".
>

You don't need do that. It is unlikely that they would remove *someone
else's* repository, anyway, unless the repository has some copyright or
license problems. Which it does not, since your packages are GPL.

GitHub as a company does not manage https://github.com/rforge. This read
only mirror was set up by a fellow GitHub user, and it is best if it is
kept as a read-only mirror.

Instead, you can do as Duncan suggested, and put a README in your R-Forge
repository, that points to *your* GitHub repositor(y/ies). Then the
https://github.com/rforge/ecdat read only mirror will pick this up and will
point there as well.

Gabor

[...]

	[[alternative HTML version deleted]]


From br|@n @end|ng |rom br@verock@com  Fri Jun 28 12:44:45 2019
From: br|@n @end|ng |rom br@verock@com (Brian G. Peterson)
Date: Fri, 28 Jun 2019 05:44:45 -0500
Subject: [Rd] R-Forge > GitHub?
In-Reply-To: <06a9569b-5b68-a288-8c4f-1537120a5213@prodsyse.com>
References: <71f66de5-e1aa-5649-b07a-6cf79f9b07bc@prodsyse.com>
 <cb4218b1-7fcc-80cb-18ab-361b93a3177e@prodsyse.com>
 <8d6c6dd4-d231-ecc7-c584-6e08f93a81e5@gmail.com>
 <89645BC9-C6BF-4E57-8AA0-9F426BA8AC5E@rstudio.com>
 <CA+rDMK+HXUKnA0j49czOf99M62QBfnyO36Sf1MBEe8a5AO-+XA@mail.gmail.com>
 <06a9569b-5b68-a288-8c4f-1537120a5213@prodsyse.com>
Message-ID: <49fd0379-9f0c-da7d-be0b-a93a46b7efa2@braverock.com>

Spencer, on your point 3. below, we took a different path in migrating 
several packages.

After we migrated to github as the new master copy, we made new commits 
to the now orphaned R-Forge copies to include a new .onAttach function 
as so:

.onAttach <- function(libname, pkgname) {
   repo <- "https://github.com/sbgraves237/Ecdat  <https://github.com/braverock/quantstrat>"
   packageStartupMessage(
     "WARNING: this package was installed from R-Forge, but development has\n",
     "moved to GitHub. Please re-install the package using the GitHub repo at:\n",
     repo, ".")
}



And to update the README in the main pkg/ dir on R-Forge.

So all the old references in talks, papers, StackOverflow, whatever will 
point to the R-Forge version, but the R-Forge version will point anyone 
to github.

Regards,

Brian

On 6/28/19 12:00 AM, Spencer Graves wrote:
> Hi, Henrik Singmann et al.:
>
>
>   ????? Thanks for the suggestions.? I tried again to pull
> "https://github.com/sbgraves237/Ecdat" from R-Forge, with the same
> "Error 500" as before.? Then I tried pulling from
> "https://github.com/rforge/ecdat", which seemed to work ... AND the copy
> I pulled was at the latest revisions I had posted to R-Forge (520), so
> that makes it easier going forward.
>
>
>   ????? What do you suggest I do next?? I'm thinking of the following:
>
>
>   ??? ??????? 1.? Clone a copy of "https://github.com/sbgraves237/Ecdat"
> to my local computer and confirm that it works.
>
>
>   ??? ??????? 2.? Modify "https://r-forge.r-project.org/projects/ecdat/"
> to make me the only remaining project member, if I can.
>
>
>   ??? ??????? 3.? Contact GitHub support and ask them if they can delete
> "https://github.com/rforge/ecdat", because it is an orphan with 0
> contributors, and anyone who might want it should be referred to
> "https://github.com/sbgraves237/Ecdat".
>
>
>   ???? ??????? 4.? Email all the previous project members on
> "https://r-forge.r-project.org/projects/ecdat/" to tell them what I've
> done, in case they want to do anything more with this in the future.
>
>
>   ????? I believe I know how to do 1, 2, and 4, and I can probably figure
> out 3.? However, before I start on this, I felt a need to thank everyone
> who contributed to this thread and invite comments, especially if
> someone thinks I might be better off doing something different.
>
>
>   ????? Spencer Graves
>
>
> On 2019-06-26 16:34, Henrik Singmann wrote:
>> Whereas it is true that one has to contact GitHub to detach a GitHub
>> repository, it really is no problem (or at least was no problem in
>> 2016). I wanted to do so when I took over the maintainer role of
>> LaplacesDemon which only remained on GitHub as a fork on some other
>> person's private account. So I forked and then contacted
>> GitHub?support?and simply asked them to remove the "forked form"
>> reference on my new repository.?They then quickly detached my
>> repository.?As you can see, the "forked from" is gone:
>> https://github.com/LaplacesDemonR/LaplacesDemon
>>
>> In their response to my request they used the phrasing "Fork is
>> detached." which suggests that this is their preferred term for this
>> step.
>>
>> Best,
>> Henrik
>>
>>
>>
>> Am Mi., 26. Juni 2019 um 16:38?Uhr schrieb Lionel Henry
>> <lionel at rstudio.com <mailto:lionel at rstudio.com>>:
>>
>>
>>      > On 26 Jun 2019, at 17:25, Duncan Murdoch
>>      <murdoch.duncan at gmail.com <mailto:murdoch.duncan at gmail.com>> wrote:
>>      >
>>      > R-Forge is mirrored on Github; see
>>      https://github.com/rforge/ecdat, for example.? That shows 418
>>      commits in its history; presumably that's the full R-forge
>>      history.? I think that's newer than Michael Friendly's gist.
>>      >
>>      > So I suspect (but haven't tried to do this) that migration now
>>      is as simple as doing a Github fork to your own Github account,
>>      and then basically forgetting about the R-forge stuff, or deleting
>>      it (and I don't know how to do that).
>>
>>      I think it's better to avoid the Fork button in this case, because
>>      forks are
>>      treated specially in the Github UI. In this case you'll want your
>>      repo to
>>      appear as a main repo, and not a fork. AFAIK the only way to
>>      unfork a repo
>>      is to ask the Github staff to do it.
>>
>>      So instead of forking, use the "+" button on github.com
>>      <http://github.com> and select
>>      "Import a repository". This supports both git and svn repos.
>>
>>      Best,
>>      Lionel
>>      ______________________________________________
>>      R-devel at r-project.org <mailto:R-devel at r-project.org> mailing list
>>      https://stat.ethz.ch/mailman/listinfo/r-devel
>>
>>
>>
>> -- 
>> Dr. Henrik Singmann
>> Assistant Professor, Department of Psychology
>> University of Warwick, UK
>> http://singmann.org
>
> 	[[alternative HTML version deleted]]
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


-- 
Brian G. Peterson
http://braverock.com/brian/
Ph: 773-459-4973
IM: bgpbraverock


	[[alternative HTML version deleted]]


From murdoch@dunc@n @end|ng |rom gm@||@com  Fri Jun 28 14:11:49 2019
From: murdoch@dunc@n @end|ng |rom gm@||@com (Duncan Murdoch)
Date: Fri, 28 Jun 2019 08:11:49 -0400
Subject: [Rd] tools::package_native_routine_registration_skeleton?
In-Reply-To: <E9E44D83-4A0B-46C6-8F29-B07F61F29C4E@illinois.edu>
References: <438D2EC9EAFE5946B2D5864670EA468E018F7204BD@MBXP02.ds.man.ac.uk>
 <E9E44D83-4A0B-46C6-8F29-B07F61F29C4E@illinois.edu>
Message-ID: <0055c172-79f9-77ba-ff54-24d7f19b0f2e@gmail.com>

On 28/06/2019 6:27 a.m., Koenker, Roger W wrote:
> Thanks,  I was just coming to that conclusion and beginning to look for a way to make a list of
> exportable objects.

After library(quantreg), ls("package:quantreg") will list all the names 
you currently export.  So

cat(ls("package:quantreg"), sep = ", ")

will print the list in a form suitable for including in the export() 
directive in your NAMESPACE file.  Just delete the names that are meant 
for internal use only.

Duncan Murdoch

> 
> Roger Koenker
> r.koenker at ucl.ac.uk<mailto:r.koenker at ucl.ac.uk>
> Department of Economics, UCL
> London  WC1H 0AX.
> 
> 
> On Jun 28, 2019, at 11:23 AM, Georgi Boshnakov <georgi.boshnakov at manchester.ac.uk<mailto:georgi.boshnakov at manchester.ac.uk>> wrote:
> 
> ... reports that the fortran names of all the registered fortran functions are ?undocumented objects?...
> 
> Those symbols should not be exported. In quantreg v5.33, NAMESPACE has 'exportPattern(".")'. Maybe it is a good time to remove that and export explicitly the symbols that are meant for export.
> 
> Georgi Boshnakov
> 
> 
> ------------------------------
> 
> Message: 6
> Date: Fri, 28 Jun 2019 09:06:52 +0000
> From: "Koenker, Roger W" <rkoenker at illinois.edu<mailto:rkoenker at illinois.edu>>
> To: "r-devel at r-project.org<mailto:r-devel at r-project.org>" <r-devel at r-project.org<mailto:r-devel at r-project.org>>
> Subject: [Rd] tools::package_native_routine_registration_skeleton?
> Message-ID: <00702A4F-67B0-4B0C-A791-E72AF51C4F9C at illinois.edu<mailto:00702A4F-67B0-4B0C-A791-E72AF51C4F9C at illinois.edu>>
> Content-Type: text/plain; charset="utf-8"
> 
> I?m trying to sort out the consequences of adding registration for my quantreg package.
> I?ve generated a quantreg_init.c file with the directive in the message title, and placed it
> in my src directory.  The first issue is that 3 of the 20, or so registered functions have
> the same name in fortran as the calling function in R.   This seems easy to fix.  More
> puzzling is that R CMD check now reports that the fortran names of all the registered fortran
> functions are ?undocumented objects?.  Can someone point me to the officially sanctioned
> way to deal with this:  presumably I don?t need to document them as if they were R functions.
> 
> Roger Koenker
> r.koenker at ucl.ac.uk<mailto:r.koenker at ucl.ac.uk><mailto:r.koenker at ucl.ac.uk>
> Department of Economics, UCL
> London  WC1H 0AX.
> 
> 
> 
> [[alternative HTML version deleted]]
> 
> 
> 
> ------------------------------
> 
> Subject: Digest Footer
> 
> _______________________________________________
> R-devel at r-project.org<mailto:R-devel at r-project.org> mailing list  DIGESTED
> https://stat.ethz.ch/mailman/listinfo/r-devel
> 
> 
> ------------------------------
> 
> End of R-devel Digest, Vol 196, Issue 25
> ****************************************
> 
> 
> 	[[alternative HTML version deleted]]
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>


From murdoch@dunc@n @end|ng |rom gm@||@com  Fri Jun 28 14:13:19 2019
From: murdoch@dunc@n @end|ng |rom gm@||@com (Duncan Murdoch)
Date: Fri, 28 Jun 2019 08:13:19 -0400
Subject: [Rd] R-Forge > GitHub?
In-Reply-To: <CABtg=Km5cdEWyUM55FEiabNdZdHvJoELHZ7RCRMPgQhUg9Gc6w@mail.gmail.com>
References: <71f66de5-e1aa-5649-b07a-6cf79f9b07bc@prodsyse.com>
 <cb4218b1-7fcc-80cb-18ab-361b93a3177e@prodsyse.com>
 <8d6c6dd4-d231-ecc7-c584-6e08f93a81e5@gmail.com>
 <89645BC9-C6BF-4E57-8AA0-9F426BA8AC5E@rstudio.com>
 <CA+rDMK+HXUKnA0j49czOf99M62QBfnyO36Sf1MBEe8a5AO-+XA@mail.gmail.com>
 <06a9569b-5b68-a288-8c4f-1537120a5213@prodsyse.com>
 <CABtg=Km5cdEWyUM55FEiabNdZdHvJoELHZ7RCRMPgQhUg9Gc6w@mail.gmail.com>
Message-ID: <6d983b3b-62ea-3bb9-724a-01baaff51e70@gmail.com>

On 28/06/2019 6:26 a.m., G?bor Cs?rdi wrote:

> Instead, you can do as Duncan suggested, and put a README in your R-Forge
> repository, that points to *your* GitHub repositor(y/ies). Then the
> https://github.com/rforge/ecdat read only mirror will pick this up and will
> point there as well.

Just for the record:  that was Henrik Singmann's suggestion, I just 
agreed with it.

Duncan Murdoch


From @|ngm@nn @end|ng |rom gm@||@com  Wed Jun 26 23:34:51 2019
From: @|ngm@nn @end|ng |rom gm@||@com (Henrik Singmann)
Date: Wed, 26 Jun 2019 22:34:51 +0100
Subject: [Rd] R-Forge > GitHub?
In-Reply-To: <89645BC9-C6BF-4E57-8AA0-9F426BA8AC5E@rstudio.com>
References: <71f66de5-e1aa-5649-b07a-6cf79f9b07bc@prodsyse.com>
 <cb4218b1-7fcc-80cb-18ab-361b93a3177e@prodsyse.com>
 <8d6c6dd4-d231-ecc7-c584-6e08f93a81e5@gmail.com>
 <89645BC9-C6BF-4E57-8AA0-9F426BA8AC5E@rstudio.com>
Message-ID: <CA+rDMK+HXUKnA0j49czOf99M62QBfnyO36Sf1MBEe8a5AO-+XA@mail.gmail.com>

Whereas it is true that one has to contact GitHub to detach a GitHub
repository, it really is no problem (or at least was no problem in 2016). I
wanted to do so when I took over the maintainer role of LaplacesDemon which
only remained on GitHub as a fork on some other person's private account.
So I forked and then contacted GitHub support and simply asked them to
remove the "forked form" reference on my new repository. They then quickly
detached my repository. As you can see, the "forked from" is gone:
https://github.com/LaplacesDemonR/LaplacesDemon

In their response to my request they used the phrasing "Fork is detached."
which suggests that this is their preferred term for this step.

Best,
Henrik



Am Mi., 26. Juni 2019 um 16:38 Uhr schrieb Lionel Henry <lionel at rstudio.com
>:

>
> > On 26 Jun 2019, at 17:25, Duncan Murdoch <murdoch.duncan at gmail.com>
> wrote:
> >
> > R-Forge is mirrored on Github; see https://github.com/rforge/ecdat, for
> example.  That shows 418 commits in its history; presumably that's the full
> R-forge history.  I think that's newer than Michael Friendly's gist.
> >
> > So I suspect (but haven't tried to do this) that migration now is as
> simple as doing a Github fork to your own Github account, and then
> basically forgetting about the R-forge stuff, or deleting it (and I don't
> know how to do that).
>
> I think it's better to avoid the Fork button in this case, because forks
> are
> treated specially in the Github UI. In this case you'll want your repo to
> appear as a main repo, and not a fork. AFAIK the only way to unfork a repo
> is to ask the Github staff to do it.
>
> So instead of forking, use the "+" button on github.com and select
> "Import a repository". This supports both git and svn repos.
>
> Best,
> Lionel
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>


-- 
Dr. Henrik Singmann
Assistant Professor, Department of Psychology
University of Warwick, UK
http://singmann.org

	[[alternative HTML version deleted]]


From @|ngm@nn @end|ng |rom gm@||@com  Fri Jun 28 10:14:36 2019
From: @|ngm@nn @end|ng |rom gm@||@com (Henrik Singmann)
Date: Fri, 28 Jun 2019 09:14:36 +0100
Subject: [Rd] R-Forge > GitHub?
In-Reply-To: <06a9569b-5b68-a288-8c4f-1537120a5213@prodsyse.com>
References: <71f66de5-e1aa-5649-b07a-6cf79f9b07bc@prodsyse.com>
 <cb4218b1-7fcc-80cb-18ab-361b93a3177e@prodsyse.com>
 <8d6c6dd4-d231-ecc7-c584-6e08f93a81e5@gmail.com>
 <89645BC9-C6BF-4E57-8AA0-9F426BA8AC5E@rstudio.com>
 <CA+rDMK+HXUKnA0j49czOf99M62QBfnyO36Sf1MBEe8a5AO-+XA@mail.gmail.com>
 <06a9569b-5b68-a288-8c4f-1537120a5213@prodsyse.com>
Message-ID: <CA+rDMK+VT+OD9g85r7NFTahG=2U9dujQjY7zTuJkBAeSA9x0NQ@mail.gmail.com>

Re your point 3: Because you have managed to create a GitHub version of
your repository that is not a fork of https://github.com/rforge/ecdat, but
its own independent repository, contacting GitHub support might not be the
right way forward. Note that https://github.com/rforge is simply a
read-only mirror of the complete R-Forge repository (and at least to me it
is unclear of whether GitHub itself or some independent party is
responsible for it, but I would assume it is not GitHub). So the easiest
way to change something in https://github.com/rforge/ecdat would be to make
the corresponding change in your R-forge repository and wait until it
propagates to GitHub.

So either delete the R-forge repository or make a final commit replacing
its content with a README pointing towards the new GitHub repo at
https://github.com/sbgraves237/Ecdat. Together with emailing all  previous
project members this should ensure that interested party will know about
the new place where your package is being developed/hosted.

You might also want to add a new README to the new GitHub repository which
replaces the current R-forge one and provides installation instructions.

Best,
Henrik



Am Fr., 28. Juni 2019 um 06:01 Uhr schrieb Spencer Graves <
spencer.graves at prodsyse.com>:

> Hi, Henrik Singmann et al.:
>
>
>       Thanks for the suggestions.  I tried again to pull
> "https://github.com/sbgraves237/Ecdat"
> <https://github.com/sbgraves237/Ecdat> from R-Forge, with the same "Error
> 500" as before.  Then I tried pulling from
> "https://github.com/rforge/ecdat" <https://github.com/rforge/ecdat>,
> which seemed to work ... AND the copy I pulled was at the latest revisions
> I had posted to R-Forge (520), so that makes it easier going forward.
>
>
>       What do you suggest I do next?  I'm thinking of the following:
>
>
>             1.  Clone a copy of "https://github.com/sbgraves237/Ecdat"
> <https://github.com/sbgraves237/Ecdat> to my local computer and confirm
> that it works.
>
>
>             2.  Modify "https://r-forge.r-project.org/projects/ecdat/"
> <https://r-forge.r-project.org/projects/ecdat/> to make me the only
> remaining project member, if I can.
>
>
>             3.  Contact GitHub support and ask them if they can delete
> "https://github.com/rforge/ecdat" <https://github.com/rforge/ecdat>,
> because it is an orphan with 0 contributors, and anyone who might want it
> should be referred to "https://github.com/sbgraves237/Ecdat"
> <https://github.com/sbgraves237/Ecdat>.
>
>
>              4.  Email all the previous project members on
> "https://r-forge.r-project.org/projects/ecdat/"
> <https://r-forge.r-project.org/projects/ecdat/> to tell them what I've
> done, in case they want to do anything more with this in the future.
>
>
>       I believe I know how to do 1, 2, and 4, and I can probably figure
> out 3.  However, before I start on this, I felt a need to thank everyone
> who contributed to this thread and invite comments, especially if someone
> thinks I might be better off doing something different.
>
>
>       Spencer Graves
>
>
> On 2019-06-26 16:34, Henrik Singmann wrote:
>
> Whereas it is true that one has to contact GitHub to detach a GitHub
> repository, it really is no problem (or at least was no problem in 2016). I
> wanted to do so when I took over the maintainer role of LaplacesDemon which
> only remained on GitHub as a fork on some other person's private account.
> So I forked and then contacted GitHub support and simply asked them to
> remove the "forked form" reference on my new repository. They then quickly
> detached my repository. As you can see, the "forked from" is gone:
> https://github.com/LaplacesDemonR/LaplacesDemon
>
> In their response to my request they used the phrasing "Fork is detached."
> which suggests that this is their preferred term for this step.
>
> Best,
> Henrik
>
>
>
> Am Mi., 26. Juni 2019 um 16:38 Uhr schrieb Lionel Henry <
> lionel at rstudio.com>:
>
>>
>> > On 26 Jun 2019, at 17:25, Duncan Murdoch <murdoch.duncan at gmail.com>
>> wrote:
>> >
>> > R-Forge is mirrored on Github; see https://github.com/rforge/ecdat,
>> for example.  That shows 418 commits in its history; presumably that's the
>> full R-forge history.  I think that's newer than Michael Friendly's gist.
>> >
>> > So I suspect (but haven't tried to do this) that migration now is as
>> simple as doing a Github fork to your own Github account, and then
>> basically forgetting about the R-forge stuff, or deleting it (and I don't
>> know how to do that).
>>
>> I think it's better to avoid the Fork button in this case, because forks
>> are
>> treated specially in the Github UI. In this case you'll want your repo to
>> appear as a main repo, and not a fork. AFAIK the only way to unfork a repo
>> is to ask the Github staff to do it.
>>
>> So instead of forking, use the "+" button on github.com and select
>> "Import a repository". This supports both git and svn repos.
>>
>> Best,
>> Lionel
>> ______________________________________________
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>
>
>
> --
> Dr. Henrik Singmann
> Assistant Professor, Department of Psychology
> University of Warwick, UK
> http://singmann.org
>
>
>

-- 
Dr. Henrik Singmann
Assistant Professor, Department of Psychology
University of Warwick, UK
http://singmann.org

	[[alternative HTML version deleted]]


From m@ech|er @end|ng |rom @t@t@m@th@ethz@ch  Fri Jun 28 16:03:40 2019
From: m@ech|er @end|ng |rom @t@t@m@th@ethz@ch (Martin Maechler)
Date: Fri, 28 Jun 2019 16:03:40 +0200
Subject: [Rd] methods package: A _R_CHECK_LENGTH_1_LOGIC2_=true error
In-Reply-To: <CAFDcVCSoHT-GxRyw-bncfnbzbG19t9sUpvPnpg=Edz_j35DiFA@mail.gmail.com>
References: <CAFDcVCQOWVr0p2e2HONOy9NvqPdpoAH=HPMOEP65K-N6UjhA2g@mail.gmail.com>
 <67D2E7FE-74E3-4379-B9FB-C4028AB808DF@gmail.com>
 <CAFDcVCTARMfrJRs-KiS5UiSo=SoU8+TgPh_KE+e-zFRR0eCSFQ@mail.gmail.com>
 <23824.41030.156424.792062@stat.math.ethz.ch>
 <CAFDcVCTq-Zc49t9HrdVQB4VHhOtuaoOmpGnx9JsAy+_esene3w@mail.gmail.com>
 <03ED7150-6BF7-4E6E-AD78-B6DFACE43A97@gmail.com>
 <6334E748-4121-41E7-9CD4-3F3B2278E8DC@gmail.com>
 <23828.56742.426539.104574@stat.math.ethz.ch>
 <CAFDcVCSoHT-GxRyw-bncfnbzbG19t9sUpvPnpg=Edz_j35DiFA@mail.gmail.com>
Message-ID: <23830.7740.817555.22803@stat.math.ethz.ch>

>>>>> Henrik Bengtsson 
>>>>>     on Thu, 27 Jun 2019 16:00:39 -0700 writes:

> Using:
> 
> untrace(methods::conformMethod)
> at <- c(12,4,3,2)
> str(body(methods::conformMethod)[[at]])
> ## language omittedSig <- omittedSig && (signature[omittedSig] != "missing")
> cc <- 0L
> trace(methods::conformMethod, tracer = quote({
>   cc <<- cc + 1L
>   print(cc)
>   if (cc == 31) {  ## manually identified
>     untrace(methods::conformMethod)
>     trace(methods::conformMethod, at = list(at), tracer = quote({
>       str(list(signature = signature, mnames = mnames, fnames = fnames))
>       print(ls())
>       try(str(list(omittedSig = omittedSig, signature = signature)))
>     }))
>   }
> }))
> loadNamespace("oligo")
> 
> gives:
> 
> Untracing function "conformMethod" in package "methods"
> Tracing function "conformMethod" in package "methods"
> Tracing conformMethod(signature, mnames, fnames, f, fdef, definition)
> step 12,4,3,2
> List of 3
>  $ signature: Named chr [1:4] "TilingFeatureSet" "ANY" "ANY" "array"
>   ..- attr(*, "names")= chr [1:4] "object" "subset" "target" "value"
>   ..- attr(*, "package")= chr [1:4] "oligoClasses" "methods" "methods" "methods"
>  $ mnames   : chr [1:2] "object" "value"
>  $ fnames   : chr [1:4] "object" "subset" "target" "value"
>  [1] "f"          "fdef"       "fnames"     "fsig"       "imf"
>  [6] "method"     "mnames"     "omitted"    "omittedSig" "sig0"
> [11] "sigNames"   "signature"
> List of 2
>  $ omittedSig: logi [1:4] FALSE TRUE TRUE FALSE
>  $ signature : Named chr [1:4] "TilingFeatureSet" "ANY" "ANY" "array"
>   ..- attr(*, "names")= chr [1:4] "object" "subset" "target" "value"
>   ..- attr(*, "package")= chr [1:4] "oligoClasses" "methods" "methods" "methods"
> Error in omittedSig && (signature[omittedSig] != "missing") :
>   'length(x) = 4 > 1' in coercion to 'logical(1)'
> Error: unable to load R code in package 'oligo'
> 

Thank you, Henrik, nice piece of using trace() .. and the above
is useful for solving the issue --  I can work with that.

I'm  already pretty sure the wrong code starts with

    omittedSig <- sigNames %in% fnames[omitted] # ....

-------------


*Still*  I cannot understand why in my case (and probably Peter,
 as he also said he can't reproduce),
the  conformMethod() function is not even called  when I run
     loadNamespace("oligo").

As conformMethod() is *only* called from setMethod(), I've
started trace()ing  setMethod() and indeed, it is *only* called one,
and not with oligo methods/generics,... 

Henrik, do you per chance not install packages in the usual way,
i.e., do you install them without saving all the pre-computed
classes and methods tables etc,
and that would be *why* these setMethod() etc are only called at
this point in time ?

Martin


From pd@|gd @end|ng |rom gm@||@com  Fri Jun 28 16:20:03 2019
From: pd@|gd @end|ng |rom gm@||@com (peter dalgaard)
Date: Fri, 28 Jun 2019 16:20:03 +0200
Subject: [Rd] methods package: A _R_CHECK_LENGTH_1_LOGIC2_=true error
In-Reply-To: <23830.7740.817555.22803@stat.math.ethz.ch>
References: <CAFDcVCQOWVr0p2e2HONOy9NvqPdpoAH=HPMOEP65K-N6UjhA2g@mail.gmail.com>
 <67D2E7FE-74E3-4379-B9FB-C4028AB808DF@gmail.com>
 <CAFDcVCTARMfrJRs-KiS5UiSo=SoU8+TgPh_KE+e-zFRR0eCSFQ@mail.gmail.com>
 <23824.41030.156424.792062@stat.math.ethz.ch>
 <CAFDcVCTq-Zc49t9HrdVQB4VHhOtuaoOmpGnx9JsAy+_esene3w@mail.gmail.com>
 <03ED7150-6BF7-4E6E-AD78-B6DFACE43A97@gmail.com>
 <6334E748-4121-41E7-9CD4-3F3B2278E8DC@gmail.com>
 <23828.56742.426539.104574@stat.math.ethz.ch>
 <CAFDcVCSoHT-GxRyw-bncfnbzbG19t9sUpvPnpg=Edz_j35DiFA@mail.gmail.com>
 <23830.7740.817555.22803@stat.math.ethz.ch>
Message-ID: <B499F134-0795-42AD-9CDD-C639D3FD87A0@gmail.com>



> On 28 Jun 2019, at 16:03 , Martin Maechler <maechler at stat.math.ethz.ch> wrote:
> 
>>>>>> Henrik Bengtsson 
>>>>>>    on Thu, 27 Jun 2019 16:00:39 -0700 writes:
> 
>> Using:
>> 
>> untrace(methods::conformMethod)
>> at <- c(12,4,3,2)
>> str(body(methods::conformMethod)[[at]])
>> ## language omittedSig <- omittedSig && (signature[omittedSig] != "missing")
>> cc <- 0L
>> trace(methods::conformMethod, tracer = quote({
>>  cc <<- cc + 1L
>>  print(cc)
>>  if (cc == 31) {  ## manually identified
>>    untrace(methods::conformMethod)
>>    trace(methods::conformMethod, at = list(at), tracer = quote({
>>      str(list(signature = signature, mnames = mnames, fnames = fnames))
>>      print(ls())
>>      try(str(list(omittedSig = omittedSig, signature = signature)))
>>    }))
>>  }
>> }))
>> loadNamespace("oligo")
>> 
>> gives:
>> 
>> Untracing function "conformMethod" in package "methods"
>> Tracing function "conformMethod" in package "methods"
>> Tracing conformMethod(signature, mnames, fnames, f, fdef, definition)
>> step 12,4,3,2
>> List of 3
>> $ signature: Named chr [1:4] "TilingFeatureSet" "ANY" "ANY" "array"
>>  ..- attr(*, "names")= chr [1:4] "object" "subset" "target" "value"
>>  ..- attr(*, "package")= chr [1:4] "oligoClasses" "methods" "methods" "methods"
>> $ mnames   : chr [1:2] "object" "value"
>> $ fnames   : chr [1:4] "object" "subset" "target" "value"
>> [1] "f"          "fdef"       "fnames"     "fsig"       "imf"
>> [6] "method"     "mnames"     "omitted"    "omittedSig" "sig0"
>> [11] "sigNames"   "signature"
>> List of 2
>> $ omittedSig: logi [1:4] FALSE TRUE TRUE FALSE
>> $ signature : Named chr [1:4] "TilingFeatureSet" "ANY" "ANY" "array"
>>  ..- attr(*, "names")= chr [1:4] "object" "subset" "target" "value"
>>  ..- attr(*, "package")= chr [1:4] "oligoClasses" "methods" "methods" "methods"
>> Error in omittedSig && (signature[omittedSig] != "missing") :
>>  'length(x) = 4 > 1' in coercion to 'logical(1)'
>> Error: unable to load R code in package 'oligo'
>> 
> 
> Thank you, Henrik, nice piece of using trace() .. and the above
> is useful for solving the issue --  I can work with that.
> 
> I'm  already pretty sure the wrong code starts with
> 
>    omittedSig <- sigNames %in% fnames[omitted] # ....
> 
> -------------
> 

I think the intention must have been that the two "ANY" signatures should change to "missing". However, with the current logic that will not happen, because

> c(F,T,T,F) &&  c(T,T)
[1] FALSE

Henrik's non-fix would have resulted in

> c(F,T,T,F) &  c(T,T)
[1] FALSE  TRUE  TRUE FALSE

which is actually right, but only coincidentally due to recycling of c(T,T). Had it been c(F,T) then it would have been expanded to c(F,T,F,T) which would be the opposite of what was wanted.

Barring NA issues, I still think 

omittedSig[omittedSig] <- (signature[omittedSig] != "missing")

should do the trick.

-pd

> 
> *Still*  I cannot understand why in my case (and probably Peter,
> as he also said he can't reproduce),
> the  conformMethod() function is not even called  when I run
>     loadNamespace("oligo").
> 
> As conformMethod() is *only* called from setMethod(), I've
> started trace()ing  setMethod() and indeed, it is *only* called one,
> and not with oligo methods/generics,... 
> 
> Henrik, do you per chance not install packages in the usual way,
> i.e., do you install them without saving all the pre-computed
> classes and methods tables etc,
> and that would be *why* these setMethod() etc are only called at
> this point in time ?
> 
> Martin

-- 
Peter Dalgaard, Professor,
Center for Statistics, Copenhagen Business School
Solbjerg Plads 3, 2000 Frederiksberg, Denmark
Phone: (+45)38153501
Office: A 4.23
Email: pd.mes at cbs.dk  Priv: PDalgd at gmail.com


From @pencer@gr@ve@ @end|ng |rom prod@y@e@com  Sat Jun 29 05:17:18 2019
From: @pencer@gr@ve@ @end|ng |rom prod@y@e@com (Spencer Graves)
Date: Fri, 28 Jun 2019 22:17:18 -0500
Subject: [Rd] R-Forge > GitHub?
In-Reply-To: <6d983b3b-62ea-3bb9-724a-01baaff51e70@gmail.com>
References: <71f66de5-e1aa-5649-b07a-6cf79f9b07bc@prodsyse.com>
 <cb4218b1-7fcc-80cb-18ab-361b93a3177e@prodsyse.com>
 <8d6c6dd4-d231-ecc7-c584-6e08f93a81e5@gmail.com>
 <89645BC9-C6BF-4E57-8AA0-9F426BA8AC5E@rstudio.com>
 <CA+rDMK+HXUKnA0j49czOf99M62QBfnyO36Sf1MBEe8a5AO-+XA@mail.gmail.com>
 <06a9569b-5b68-a288-8c4f-1537120a5213@prodsyse.com>
 <CABtg=Km5cdEWyUM55FEiabNdZdHvJoELHZ7RCRMPgQhUg9Gc6w@mail.gmail.com>
 <6d983b3b-62ea-3bb9-724a-01baaff51e70@gmail.com>
Message-ID: <fb319697-6408-17b5-30a1-7a8f9d8da928@prodsyse.com>

Thanks to Duncan, Henrik and Henrik, Brian, and G?bor:


 ????? I created a local copy of the new GitHub version using the 
following:

git clone https://sbgraves237:mypassword at github.com/sbgraves237/Ecdat.git



 ????? That worked in the sense that I got a local copy.? However, after 
I rolled the version number and did "git commit" on the DESCRIPTION 
files, my "git push" command generated the following:


remote: Invalid username or password.
fatal: Authentication failed for 
'https://sbgraves237:mypassword at github.com/sbgraves237/Ecdat.git/'


 ????? What am I missing?? [Note:? I used my actual GitHub password in 
place of "mypassword" here, and this "Authentication failed" message 
reported the GitHub password I used here.]


 ????? Thanks,
 ????? Spencer


p.s.? I'm doing this under macOS Mojave 10.14.5.? Also,? I added 
".onAttach" functions to the R-Forge versions as Brian G. Peterson 
suggested.? That seemed to work fine.


On 2019-06-28 07:13, Duncan Murdoch wrote:
> On 28/06/2019 6:26 a.m., G?bor Cs?rdi wrote:
>
>> Instead, you can do as Duncan suggested, and put a README in your 
>> R-Forge
>> repository, that points to *your* GitHub repositor(y/ies). Then the
>> https://github.com/rforge/ecdat read only mirror will pick this up 
>> and will
>> point there as well.
>
> Just for the record:? that was Henrik Singmann's suggestion, I just 
> agreed with it.
>
> Duncan Murdoch
>


	[[alternative HTML version deleted]]


From otoomet @end|ng |rom gm@||@com  Sat Jun 29 05:25:35 2019
From: otoomet @end|ng |rom gm@||@com (Ott Toomet)
Date: Fri, 28 Jun 2019 20:25:35 -0700
Subject: [Rd] R-Forge > GitHub?
In-Reply-To: <fb319697-6408-17b5-30a1-7a8f9d8da928@prodsyse.com>
References: <71f66de5-e1aa-5649-b07a-6cf79f9b07bc@prodsyse.com>
 <cb4218b1-7fcc-80cb-18ab-361b93a3177e@prodsyse.com>
 <8d6c6dd4-d231-ecc7-c584-6e08f93a81e5@gmail.com>
 <89645BC9-C6BF-4E57-8AA0-9F426BA8AC5E@rstudio.com>
 <CA+rDMK+HXUKnA0j49czOf99M62QBfnyO36Sf1MBEe8a5AO-+XA@mail.gmail.com>
 <06a9569b-5b68-a288-8c4f-1537120a5213@prodsyse.com>
 <CABtg=Km5cdEWyUM55FEiabNdZdHvJoELHZ7RCRMPgQhUg9Gc6w@mail.gmail.com>
 <6d983b3b-62ea-3bb9-724a-01baaff51e70@gmail.com>
 <fb319697-6408-17b5-30a1-7a8f9d8da928@prodsyse.com>
Message-ID: <CAMMJQ0a7ZtndwL8YYas6+k3BRDtAFizAuaacONQ6i6HmrQMTeA@mail.gmail.com>

Apparently your username/password are wrong.  Can you clone/push from other
repos?

You do not need authorization when cloning a public repo, so even incorrect
credentials may work (haven't tested this though).  But for push you have
to have that in order.

I suggest you create ssh keys, upload those to GH, and use ssh
authorization instead of https.

Cheers,
Ott

On Fri, Jun 28, 2019 at 8:18 PM Spencer Graves <spencer.graves at prodsyse.com>
wrote:

> Thanks to Duncan, Henrik and Henrik, Brian, and G?bor:
>
>
>        I created a local copy of the new GitHub version using the
> following:
>
> git clone https://sbgraves237:mypassword at github.com/sbgraves237/Ecdat.git
>
>
>
>        That worked in the sense that I got a local copy.  However, after
> I rolled the version number and did "git commit" on the DESCRIPTION
> files, my "git push" command generated the following:
>
>
> remote: Invalid username or password.
> fatal: Authentication failed for
> 'https://sbgraves237:mypassword at github.com/sbgraves237/Ecdat.git/'
>
>
>        What am I missing?  [Note:  I used my actual GitHub password in
> place of "mypassword" here, and this "Authentication failed" message
> reported the GitHub password I used here.]
>
>
>        Thanks,
>        Spencer
>
>
> p.s.  I'm doing this under macOS Mojave 10.14.5.  Also,  I added
> ".onAttach" functions to the R-Forge versions as Brian G. Peterson
> suggested.  That seemed to work fine.
>
>
> On 2019-06-28 07:13, Duncan Murdoch wrote:
> > On 28/06/2019 6:26 a.m., G?bor Cs?rdi wrote:
> >
> >> Instead, you can do as Duncan suggested, and put a README in your
> >> R-Forge
> >> repository, that points to *your* GitHub repositor(y/ies). Then the
> >> https://github.com/rforge/ecdat read only mirror will pick this up
> >> and will
> >> point there as well.
> >
> > Just for the record:  that was Henrik Singmann's suggestion, I just
> > agreed with it.
> >
> > Duncan Murdoch
> >
>
>
>         [[alternative HTML version deleted]]
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>

	[[alternative HTML version deleted]]


From rkoenker @end|ng |rom ||||no|@@edu  Sat Jun 29 08:12:51 2019
From: rkoenker @end|ng |rom ||||no|@@edu (Koenker, Roger W)
Date: Sat, 29 Jun 2019 06:12:51 +0000
Subject: [Rd] tools::package_native_routine_registration_skeleton?
In-Reply-To: <0055c172-79f9-77ba-ff54-24d7f19b0f2e@gmail.com>
References: <438D2EC9EAFE5946B2D5864670EA468E018F7204BD@MBXP02.ds.man.ac.uk>
 <E9E44D83-4A0B-46C6-8F29-B07F61F29C4E@illinois.edu>
 <0055c172-79f9-77ba-ff54-24d7f19b0f2e@gmail.com>
Message-ID: <D6BFD862-C89C-4B8B-8941-30D36ADEA8E5@illinois.edu>

Thanks Georgi and Duncan, exports are now specified explicitly  and the  new package
is now on CRAN.

Roger Koenker
r.koenker at ucl.ac.uk<mailto:r.koenker at ucl.ac.uk>
Department of Economics, UCL
London  WC1H 0AX.


On Jun 28, 2019, at 1:11 PM, Duncan Murdoch <murdoch.duncan at gmail.com<mailto:murdoch.duncan at gmail.com>> wrote:

On 28/06/2019 6:27 a.m., Koenker, Roger W wrote:
Thanks,  I was just coming to that conclusion and beginning to look for a way to make a list of
exportable objects.

After library(quantreg), ls("package:quantreg") will list all the names you currently export.  So

cat(ls("package:quantreg"), sep = ", ")

will print the list in a form suitable for including in the export() directive in your NAMESPACE file.  Just delete the names that are meant for internal use only.

Duncan Murdoch

Roger Koenker
r.koenker at ucl.ac.uk<mailto:r.koenker at ucl.ac.uk><mailto:r.koenker at ucl.ac.uk>
Department of Economics, UCL
London  WC1H 0AX.
On Jun 28, 2019, at 11:23 AM, Georgi Boshnakov <georgi.boshnakov at manchester.ac.uk<mailto:georgi.boshnakov at manchester.ac.uk><mailto:georgi.boshnakov at manchester.ac.uk>> wrote:
... reports that the fortran names of all the registered fortran functions are ?undocumented objects?...
Those symbols should not be exported. In quantreg v5.33, NAMESPACE has 'exportPattern(".")'. Maybe it is a good time to remove that and export explicitly the symbols that are meant for export.
Georgi Boshnakov
------------------------------
Message: 6
Date: Fri, 28 Jun 2019 09:06:52 +0000
From: "Koenker, Roger W" <rkoenker at illinois.edu<mailto:rkoenker at illinois.edu><mailto:rkoenker at illinois.edu>>
To: "r-devel at r-project.org<mailto:r-devel at r-project.org><mailto:r-devel at r-project.org>" <r-devel at r-project.org<mailto:r-devel at r-project.org><mailto:r-devel at r-project.org>>
Subject: [Rd] tools::package_native_routine_registration_skeleton?
Message-ID: <00702A4F-67B0-4B0C-A791-E72AF51C4F9C at illinois.edu<mailto:00702A4F-67B0-4B0C-A791-E72AF51C4F9C at illinois.edu><mailto:00702A4F-67B0-4B0C-A791-E72AF51C4F9C at illinois.edu>>
Content-Type: text/plain; charset="utf-8"
I?m trying to sort out the consequences of adding registration for my quantreg package.
I?ve generated a quantreg_init.c file with the directive in the message title, and placed it
in my src directory.  The first issue is that 3 of the 20, or so registered functions have
the same name in fortran as the calling function in R.   This seems easy to fix.  More
puzzling is that R CMD check now reports that the fortran names of all the registered fortran
functions are ?undocumented objects?.  Can someone point me to the officially sanctioned
way to deal with this:  presumably I don?t need to document them as if they were R functions.
Roger Koenker
r.koenker at ucl.ac.uk<mailto:r.koenker at ucl.ac.uk><mailto:r.koenker at ucl.ac.uk><mailto:r.koenker at ucl.ac.uk>
Department of Economics, UCL
London  WC1H 0AX.
[[alternative HTML version deleted]]
------------------------------
Subject: Digest Footer
_______________________________________________
R-devel at r-project.org<mailto:R-devel at r-project.org><mailto:R-devel at r-project.org> mailing list  DIGESTED
https://stat.ethz.ch/mailman/listinfo/r-devel
------------------------------
End of R-devel Digest, Vol 196, Issue 25
****************************************
[[alternative HTML version deleted]]
______________________________________________
R-devel at r-project.org mailing list
https://stat.ethz.ch/mailman/listinfo/r-devel



	[[alternative HTML version deleted]]


From m@ech|er @end|ng |rom @t@t@m@th@ethz@ch  Sat Jun 29 10:33:10 2019
From: m@ech|er @end|ng |rom @t@t@m@th@ethz@ch (Martin Maechler)
Date: Sat, 29 Jun 2019 10:33:10 +0200
Subject: [Rd] methods package: A _R_CHECK_LENGTH_1_LOGIC2_=true error
In-Reply-To: <B499F134-0795-42AD-9CDD-C639D3FD87A0@gmail.com>
References: <CAFDcVCQOWVr0p2e2HONOy9NvqPdpoAH=HPMOEP65K-N6UjhA2g@mail.gmail.com>
 <67D2E7FE-74E3-4379-B9FB-C4028AB808DF@gmail.com>
 <CAFDcVCTARMfrJRs-KiS5UiSo=SoU8+TgPh_KE+e-zFRR0eCSFQ@mail.gmail.com>
 <23824.41030.156424.792062@stat.math.ethz.ch>
 <CAFDcVCTq-Zc49t9HrdVQB4VHhOtuaoOmpGnx9JsAy+_esene3w@mail.gmail.com>
 <03ED7150-6BF7-4E6E-AD78-B6DFACE43A97@gmail.com>
 <6334E748-4121-41E7-9CD4-3F3B2278E8DC@gmail.com>
 <23828.56742.426539.104574@stat.math.ethz.ch>
 <CAFDcVCSoHT-GxRyw-bncfnbzbG19t9sUpvPnpg=Edz_j35DiFA@mail.gmail.com>
 <23830.7740.817555.22803@stat.math.ethz.ch>
 <B499F134-0795-42AD-9CDD-C639D3FD87A0@gmail.com>
Message-ID: <23831.8774.109040.126892@stat.math.ethz.ch>

>>>>> peter dalgaard 
>>>>>     on Fri, 28 Jun 2019 16:20:03 +0200 writes:

> > On 28 Jun 2019, at 16:03 , Martin Maechler <maechler at stat.math.ethz.ch> wrote:
> > 
> >>>>>> Henrik Bengtsson 
> >>>>>>    on Thu, 27 Jun 2019 16:00:39 -0700 writes:
> > 
> >> Using:
> >> 
> >> untrace(methods::conformMethod)
> >> at <- c(12,4,3,2)
> >> str(body(methods::conformMethod)[[at]])
> >> ## language omittedSig <- omittedSig && (signature[omittedSig] != "missing")
> >> cc <- 0L
> >> trace(methods::conformMethod, tracer = quote({
> >>  cc <<- cc + 1L
> >>  print(cc)
> >>  if (cc == 31) {  ## manually identified
> >>    untrace(methods::conformMethod)
> >>    trace(methods::conformMethod, at = list(at), tracer = quote({
> >>      str(list(signature = signature, mnames = mnames, fnames = fnames))
> >>      print(ls())
> >>      try(str(list(omittedSig = omittedSig, signature = signature)))
> >>    }))
> >>  }
> >> }))
> >> loadNamespace("oligo")
> >> 
> >> gives:
> >> 
> >> Untracing function "conformMethod" in package "methods"
> >> Tracing function "conformMethod" in package "methods"
> >> Tracing conformMethod(signature, mnames, fnames, f, fdef, definition)
> >> step 12,4,3,2
> >> List of 3
> >> $ signature: Named chr [1:4] "TilingFeatureSet" "ANY" "ANY" "array"
> >>  ..- attr(*, "names")= chr [1:4] "object" "subset" "target" "value"
> >>  ..- attr(*, "package")= chr [1:4] "oligoClasses" "methods" "methods" "methods"
> >> $ mnames   : chr [1:2] "object" "value"
> >> $ fnames   : chr [1:4] "object" "subset" "target" "value"
> >> [1] "f"          "fdef"       "fnames"     "fsig"       "imf"
> >> [6] "method"     "mnames"     "omitted"    "omittedSig" "sig0"
> >> [11] "sigNames"   "signature"
> >> List of 2
> >> $ omittedSig: logi [1:4] FALSE TRUE TRUE FALSE
> >> $ signature : Named chr [1:4] "TilingFeatureSet" "ANY" "ANY" "array"
> >>  ..- attr(*, "names")= chr [1:4] "object" "subset" "target" "value"
> >>  ..- attr(*, "package")= chr [1:4] "oligoClasses" "methods" "methods" "methods"
> >> Error in omittedSig && (signature[omittedSig] != "missing") :
> >>  'length(x) = 4 > 1' in coercion to 'logical(1)'
> >> Error: unable to load R code in package 'oligo'
> >> 
> > 
> > Thank you, Henrik, nice piece of using trace() .. and the above
> > is useful for solving the issue --  I can work with that.
> > 
> > I'm  already pretty sure the wrong code starts with
> > 
> >    omittedSig <- sigNames %in% fnames[omitted] # ....

my  "pretty sure"  statement above has proven to be wrong ..

> > -------------
> > 
> 
> I think the intention must have been that the two "ANY" signatures should change to "missing". 

Definitely.

> However, with the current logic that will not happen, because
> 
> > c(F,T,T,F) &&  c(T,T)
> [1] FALSE
> 
> Henrik's non-fix would have resulted in
> 
> > c(F,T,T,F) &  c(T,T)
> [1] FALSE  TRUE  TRUE FALSE
> 
> which is actually right, but only coincidentally due to recycling of c(T,T). Had it been c(F,T) then it would have been expanded to c(F,T,F,T) which would be the opposite of what was wanted.
> 
> Barring NA issues, I still think 
> 
> omittedSig[omittedSig] <- (signature[omittedSig] != "missing")
> 
> should do the trick.

yes, (most probably).  I've found a version of that which should
be even easier to "read and understand", in  svn commit 76753 :

svn diff -c 76753 src/library/methods/R/RMethodUtils.R

--- src/library/methods/R/RMethodUtils.R	(Revision 76752)
+++ src/library/methods/R/RMethodUtils.R	(Revision 76753)
@@ -342,8 +342,7 @@
              gettextf("formal arguments (%s) omitted in the method definition cannot be in the signature", bad2),
              call. = TRUE, domain = NA)
     }
-    else if(!all(signature[omittedSig] == "missing")) {
-        omittedSig <- omittedSig && (signature[omittedSig] != "missing")
+    else if(any(omittedSig <- omittedSig & signature != "missing")) {


BTW:  I've marked this --- and the  runmed() seg.fault + na.action
change ---  as something to be added to R 3.6.1 patched,  as I
deemed I should obey the "code freeze" rule in both cases.

Martin


> > *Still*  I cannot understand why in my case (and probably Peter,
> > as he also said he can't reproduce),
> > the  conformMethod() function is not even called  when I run
> >     loadNamespace("oligo").
> > 
> > As conformMethod() is *only* called from setMethod(), I've
> > started trace()ing  setMethod() and indeed, it is *only* called one,
> > and not with oligo methods/generics,... 
> > 
> > Henrik, do you per chance not install packages in the usual way,
> > i.e., do you install them without saving all the pre-computed
> > classes and methods tables etc,
> > and that would be *why* these setMethod() etc are only called at
> > this point in time ?
> > 
> > Martin
> 
> -- 
> Peter Dalgaard, Professor,
> Center for Statistics, Copenhagen Business School
> Solbjerg Plads 3, 2000 Frederiksberg, Denmark
> Phone: (+45)38153501
> Office: A 4.23
> Email: pd.mes at cbs.dk  Priv: PDalgd at gmail.com
> 
> 
> 
> 
>


From j@@onx98 @end|ng |rom gm@||@com  Sat Jun 29 00:20:54 2019
From: j@@onx98 @end|ng |rom gm@||@com (Jason Xu)
Date: Fri, 28 Jun 2019 18:20:54 -0400
Subject: [Rd] Making R CMD nicer
Message-ID: <CAGPh-qOZsZz7CPtquXFijQzUwybXjWrTXZFuGYm0G1T_i6VR5Q@mail.gmail.com>

Hello everyone,

First time posting in the R mailing lists so hopefully this works well.
I noticed when I type `R CMD` I get this unhelpful message:

/usr/lib/R/bin/Rcmd: 60: shift: can't shift that many

This probably comes from the file Rcmd.in. This should be easily fixed by
checking $#.

I also think it would be nice if `R CMD help` showed the usable commands.
In fact I think the CMD syntax is unnecessary since the man page shows
using R with an infile or outfile must use redirection, so the syntax can
be simply "R install" (like in git).

Thanks,
Jason

	[[alternative HTML version deleted]]


From m@ech|er @end|ng |rom @t@t@m@th@ethz@ch  Sat Jun 29 12:05:49 2019
From: m@ech|er @end|ng |rom @t@t@m@th@ethz@ch (Martin Maechler)
Date: Sat, 29 Jun 2019 12:05:49 +0200
Subject: [Rd] methods package: A _R_CHECK_LENGTH_1_LOGIC2_=true error
In-Reply-To: <23831.8774.109040.126892@stat.math.ethz.ch>
References: <CAFDcVCQOWVr0p2e2HONOy9NvqPdpoAH=HPMOEP65K-N6UjhA2g@mail.gmail.com>
 <67D2E7FE-74E3-4379-B9FB-C4028AB808DF@gmail.com>
 <CAFDcVCTARMfrJRs-KiS5UiSo=SoU8+TgPh_KE+e-zFRR0eCSFQ@mail.gmail.com>
 <23824.41030.156424.792062@stat.math.ethz.ch>
 <CAFDcVCTq-Zc49t9HrdVQB4VHhOtuaoOmpGnx9JsAy+_esene3w@mail.gmail.com>
 <03ED7150-6BF7-4E6E-AD78-B6DFACE43A97@gmail.com>
 <6334E748-4121-41E7-9CD4-3F3B2278E8DC@gmail.com>
 <23828.56742.426539.104574@stat.math.ethz.ch>
 <CAFDcVCSoHT-GxRyw-bncfnbzbG19t9sUpvPnpg=Edz_j35DiFA@mail.gmail.com>
 <23830.7740.817555.22803@stat.math.ethz.ch>
 <B499F134-0795-42AD-9CDD-C639D3FD87A0@gmail.com>
 <23831.8774.109040.126892@stat.math.ethz.ch>
Message-ID: <23831.14333.101371.604209@stat.math.ethz.ch>

>>>>> Martin Maechler 
>>>>>     on Sat, 29 Jun 2019 10:33:10 +0200 writes:

>>>>> peter dalgaard 
>>>>>     on Fri, 28 Jun 2019 16:20:03 +0200 writes:

    >> > On 28 Jun 2019, at 16:03 , Martin Maechler <maechler at stat.math.ethz.ch> wrote:
    >> > 
    >> >>>>>> Henrik Bengtsson 
    >> >>>>>>    on Thu, 27 Jun 2019 16:00:39 -0700 writes:
    >> > 
    >> >> Using:
    >> >> 
    >> >> untrace(methods::conformMethod)
    >> >> at <- c(12,4,3,2)
    >> >> str(body(methods::conformMethod)[[at]])
    >> >> ## language omittedSig <- omittedSig && (signature[omittedSig] != "missing")
    >> >> cc <- 0L
    >> >> trace(methods::conformMethod, tracer = quote({
    >> >>  cc <<- cc + 1L
    >> >>  print(cc)
    >> >>  if (cc == 31) {  ## manually identified
    >> >>    untrace(methods::conformMethod)
    >> >>    trace(methods::conformMethod, at = list(at), tracer = quote({
    >> >>      str(list(signature = signature, mnames = mnames, fnames = fnames))
    >> >>      print(ls())
    >> >>      try(str(list(omittedSig = omittedSig, signature = signature)))
    >> >>    }))
    >> >>  }
    >> >> }))
    >> >> loadNamespace("oligo")
    >> >> 
    >> >> gives:
    >> >> 
    >> >> Untracing function "conformMethod" in package "methods"
    >> >> Tracing function "conformMethod" in package "methods"
    >> >> Tracing conformMethod(signature, mnames, fnames, f, fdef, definition)
    >> >> step 12,4,3,2
    >> >> List of 3
    >> >> $ signature: Named chr [1:4] "TilingFeatureSet" "ANY" "ANY" "array"
    >> >>  ..- attr(*, "names")= chr [1:4] "object" "subset" "target" "value"
    >> >>  ..- attr(*, "package")= chr [1:4] "oligoClasses" "methods" "methods" "methods"
    >> >> $ mnames   : chr [1:2] "object" "value"
    >> >> $ fnames   : chr [1:4] "object" "subset" "target" "value"
    >> >> [1] "f"          "fdef"       "fnames"     "fsig"       "imf"
    >> >> [6] "method"     "mnames"     "omitted"    "omittedSig" "sig0"
    >> >> [11] "sigNames"   "signature"
    >> >> List of 2
    >> >> $ omittedSig: logi [1:4] FALSE TRUE TRUE FALSE
    >> >> $ signature : Named chr [1:4] "TilingFeatureSet" "ANY" "ANY" "array"
    >> >>  ..- attr(*, "names")= chr [1:4] "object" "subset" "target" "value"
    >> >>  ..- attr(*, "package")= chr [1:4] "oligoClasses" "methods" "methods" "methods"
    >> >> Error in omittedSig && (signature[omittedSig] != "missing") :
    >> >>  'length(x) = 4 > 1' in coercion to 'logical(1)'
    >> >> Error: unable to load R code in package 'oligo'
    >> >> 
    >> > 
    >> > Thank you, Henrik, nice piece of using trace() .. and the above
    >> > is useful for solving the issue --  I can work with that.
    >> > 
    >> > I'm  already pretty sure the wrong code starts with
    >> > 
    >> >    omittedSig <- sigNames %in% fnames[omitted] # ....

    > my  "pretty sure"  statement above has proven to be wrong ..

    >> > -------------
    >> > 
    >> 
    >> I think the intention must have been that the two "ANY" signatures should change to "missing". 

    > Definitely.

    >> However, with the current logic that will not happen, because
    >> 
    >> > c(F,T,T,F) &&  c(T,T)
    >> [1] FALSE
    >> 
    >> Henrik's non-fix would have resulted in
    >> 
    >> > c(F,T,T,F) &  c(T,T)
    >> [1] FALSE  TRUE  TRUE FALSE
    >> 
    >> which is actually right, but only coincidentally due to recycling of c(T,T). Had it been c(F,T) then it would have been expanded to c(F,T,F,T) which would be the opposite of what was wanted.
    >> 
    >> Barring NA issues, I still think 
    >> 
    >> omittedSig[omittedSig] <- (signature[omittedSig] != "missing")
    >> 
    >> should do the trick.

    > yes, (most probably).  I've found a version of that which should
    > be even easier to "read and understand", in  svn commit 76753 :

    > svn diff -c 76753 src/library/methods/R/RMethodUtils.R

    > --- src/library/methods/R/RMethodUtils.R	(Revision 76752)
    > +++ src/library/methods/R/RMethodUtils.R	(Revision 76753)
    > @@ -342,8 +342,7 @@
    > gettextf("formal arguments (%s) omitted in the method definition cannot be in the signature", bad2),
    > call. = TRUE, domain = NA)
    > }
    > -    else if(!all(signature[omittedSig] == "missing")) {
    > -        omittedSig <- omittedSig && (signature[omittedSig] != "missing")
    > +    else if(any(omittedSig <- omittedSig & signature != "missing")) {


    > BTW:  I've marked this --- and the  runmed() seg.fault + na.action
    > change ---  as something to be added to R 3.6.1 patched,  as I
    > deemed I should obey the "code freeze" rule in both cases.

    > Martin

Hmm... I think we got a 'Neverending Story' here -- because it
seems, both Peter and I were wrong in thinking that it's a good
idea to change "missing" to "ANY" here ...
((or if that *was* correct, that needs to entail more changes
happening during setMethod(.) {conformMethod() is only called in
one place in our code base, namely from setMethod()} :

I've started to explore the effects of the change using and
extending the tests/reg-tests-1d.R  example that I had just committed.

And the result is *not good* :

As we said above, the new code does replace all "ANY" by "missing" in the
signature, unless the "ANY" are at the end of the signature.

However, later methods package code producing the .local(.)
calls in the method definition (in cases where the signature of
the generic and the method do not match exactly) --- possibly
may have been tweaked later than the conformMethod() code ---
and the .local() calls they now produce

- work as intended for R <= 3.6.0 (and R 3.6.1 RC)
- fail to work for R-devel with the change :

See this (not a minimal rep.rex. but one building on Henrik's
          oligo case and what's newly in  tests/reg-tests-1d.R ) :

-----------------------------------------------------------------------------

## conformMethod()  "&& logic" bug, by Henrik Bengtsson on R-devel list, 2019-06-22
setClass("tilingFSet", slots = c(x = "numeric"))
if(!is.null(getGeneric("oligoFn"))) removeGeneric("oligoFn")
setGeneric("oligoFn",
           function(object, subset, target, value) { standardGeneric("oligoFn") })
Sys.unsetenv("_R_CHECK_LENGTH_1_LOGIC2_") ## << added here, to compare with R 3.6.0, 3.5.3, ..
setMethod("oligoFn", signature(object = "tilingFSet", value="array"),	## Method _ 1 _
          function(object, value) { list(object=object, value=value) })
setMethod("oligoFn", signature(object = "matrix", target="array"),	## Method _ 2 _
          function(object, target) list(object=object, target=target))
setMethod("oligoFn", signature(object = "matrix", subset="integer"),	## Method _ 3 _
          function(object, subset) list(object=object, subset=subset))	#	(*no* Note: ANY at end)
setMethod("oligoFn", signature(object = "matrix"),			## Method _ 4 _
          function(object) list(object=object))				#	(*no* Note: ANY at end)
showMethods("oligoFn") # F.Y.I.:  in R 3.6.0 and earlier: contains "ANY" everywhere

##-- Now, the following *DOES* work fine in R <= 3.6.0  but *no longer* in R-devel :
str(r1 <- oligoFn(object=new("tilingFSet"), value=array(2)))
str(r2 <- oligoFn(object=diag(2),          target=array(42)))
## These 2 work fine in all versions of R: Here the "ANY" remain at the end:
str(r3 <- oligoFn(object=diag(2),          subset=1:3))
str(r4 <- oligoFn(object=diag(2)))

-----------------------------------------------------------------------------
The two errors in R-devel are actually quite user-confusing:

> r2 <- oligoFn(object=diag(2),          target=array(42))
Error in .local(object, target) : 
  argument "target" is missing, with no default
> getMethod("oligoFn", signature(object="matrix", subset="missing", target="array"))
Method Definition:

function (object, subset, target, value) 
{
    .local <- function (object, subset, target, value) 
    list(object = object, target = target)
    .local(object, target)
}

Signatures:
        object   subset    target  value
target  "matrix" "missing" "array" "ANY"
defined "matrix" "missing" "array" "ANY"
> 


My conclusion:  There's something really wrong with what
conformMethod() has been *intended* to achieve and what it
"accidentally" did achieve in these cases: it never replaced
"ANY" by "missing" in all these cases *AND* that is what it
seems it should continue doing.

BTW: ?conformMethod  goes to a page with quite a few things,
     relevantly containing

  ?conformMethod?: If the formal arguments, ?mnames?, are not
       identical to the formal arguments to the function, ?fnames?,
       ?conformMethod? determines whether the signature and the two
       sets of arguments conform, and returns the signature,
       possibly extended.  The function name, ?f? is supplied for
       error messages. The generic function, ?fdef?, supplies the
       generic signature for matching purposes.

       The method assignment conforms if method and generic function
       have identical formal argument lists.  It can also conform if
       the method omits some of the formal arguments of the function
       but: (1) the non-omitted arguments are a subset of the
       function arguments, appearing in the same order; (2) there
       are no arguments to the method that are not arguments to the
       function; and (3) the omitted formal arguments do not appear
       as explicit classes in the signature.  A future extension
       hopes to test also that the omitted arguments are not assumed
       by being used as locally assigned names or function names in
       the body of the method.

---
It seems my commit to R-devel needs another change.
This has to wait for hours currently, though.

Martin


From @pencer@gr@ve@ @end|ng |rom prod@y@e@com  Sat Jun 29 18:43:28 2019
From: @pencer@gr@ve@ @end|ng |rom prod@y@e@com (Spencer Graves)
Date: Sat, 29 Jun 2019 11:43:28 -0500
Subject: [Rd] R-Forge > GitHub?
In-Reply-To: <CAMMJQ0a7ZtndwL8YYas6+k3BRDtAFizAuaacONQ6i6HmrQMTeA@mail.gmail.com>
References: <71f66de5-e1aa-5649-b07a-6cf79f9b07bc@prodsyse.com>
 <cb4218b1-7fcc-80cb-18ab-361b93a3177e@prodsyse.com>
 <8d6c6dd4-d231-ecc7-c584-6e08f93a81e5@gmail.com>
 <89645BC9-C6BF-4E57-8AA0-9F426BA8AC5E@rstudio.com>
 <CA+rDMK+HXUKnA0j49czOf99M62QBfnyO36Sf1MBEe8a5AO-+XA@mail.gmail.com>
 <06a9569b-5b68-a288-8c4f-1537120a5213@prodsyse.com>
 <CABtg=Km5cdEWyUM55FEiabNdZdHvJoELHZ7RCRMPgQhUg9Gc6w@mail.gmail.com>
 <6d983b3b-62ea-3bb9-724a-01baaff51e70@gmail.com>
 <fb319697-6408-17b5-30a1-7a8f9d8da928@prodsyse.com>
 <CAMMJQ0a7ZtndwL8YYas6+k3BRDtAFizAuaacONQ6i6HmrQMTeA@mail.gmail.com>
Message-ID: <3f01d7bc-ed20-1a39-25bc-ce7d34e22398@prodsyse.com>

Hi, Ott et al.:


 ????? What's the best way to get "Travis CI" to build and test the two 
packages, Ecdat and Ecfun, that have long been combined in the Ecdat 
project?


 ????? Following Ott's advice and studying studying Wickham's "R 
Packages" (http://r-pkgs.had.co.nz/), I was able to configure RStudio so 
it would sync using git with "GitHub.com/sbgraves237/Ecdat".? However, 
when I tried to configure "Travis CI", it said, "No DESCRIPTION file 
found, user must supply their own install and script steps".


 ??? ? Earlier in this thread, I think someone suggested I make the 
Ecdat and Ecfun packages separate projects on GitHub (though I can't 
find that suggestion now).? This would not be an issue if it were all 
local without version control.? With RStudio managing my interface with 
GitHub, it now seems quite tricky.


 ????? Suggestions?
 ????? Thanks again to all who have offered suggestions so far.? This 
migration from R-Forge to GitHub seems complete except for the automatic 
tests provided via "Travis CI".


 ????? Spencer


On 2019-06-28 22:25, Ott Toomet wrote:
> Apparently your username/password are wrong.? Can you clone/push from 
> other repos?
>
> You do not need authorization when cloning a public repo, so even 
> incorrect credentials may work (haven't tested this though).? But for 
> push you have to have that in order.
>
> I suggest you create ssh keys, upload those to GH, and use ssh 
> authorization instead of https.
>
> Cheers,
> Ott
>
> On Fri, Jun 28, 2019 at 8:18 PM Spencer Graves 
> <spencer.graves at prodsyse.com <mailto:spencer.graves at prodsyse.com>> wrote:
>
>     Thanks to Duncan, Henrik and Henrik, Brian, and G?bor:
>
>
>     ?????? I created a local copy of the new GitHub version using the
>     following:
>
>     git clone
>     https://sbgraves237:mypassword at github.com/sbgraves237/Ecdat.git
>
>
>
>     ?????? That worked in the sense that I got a local copy. However,
>     after
>     I rolled the version number and did "git commit" on the DESCRIPTION
>     files, my "git push" command generated the following:
>
>
>     remote: Invalid username or password.
>     fatal: Authentication failed for
>     'https://sbgraves237:mypassword at github.com/sbgraves237/Ecdat.git/'
>
>
>     ?????? What am I missing?? [Note:? I used my actual GitHub
>     password in
>     place of "mypassword" here, and this "Authentication failed" message
>     reported the GitHub password I used here.]
>
>
>     ?????? Thanks,
>     ?????? Spencer
>
>
>     p.s.? I'm doing this under macOS Mojave 10.14.5.? Also,? I added
>     ".onAttach" functions to the R-Forge versions as Brian G. Peterson
>     suggested.? That seemed to work fine.
>
>
>     On 2019-06-28 07:13, Duncan Murdoch wrote:
>     > On 28/06/2019 6:26 a.m., G?bor Cs?rdi wrote:
>     >
>     >> Instead, you can do as Duncan suggested, and put a README in your
>     >> R-Forge
>     >> repository, that points to *your* GitHub repositor(y/ies). Then the
>     >> https://github.com/rforge/ecdat read only mirror will pick this up
>     >> and will
>     >> point there as well.
>     >
>     > Just for the record:? that was Henrik Singmann's suggestion, I just
>     > agreed with it.
>     >
>     > Duncan Murdoch
>     >
>
>
>     ? ? ? ? [[alternative HTML version deleted]]
>
>     ______________________________________________
>     R-devel at r-project.org <mailto:R-devel at r-project.org> mailing list
>     https://stat.ethz.ch/mailman/listinfo/r-devel
>


	[[alternative HTML version deleted]]


From henr|k@bengt@@on @end|ng |rom gm@||@com  Sat Jun 29 21:09:28 2019
From: henr|k@bengt@@on @end|ng |rom gm@||@com (Henrik Bengtsson)
Date: Sat, 29 Jun 2019 12:09:28 -0700
Subject: [Rd] R-Forge > GitHub?
In-Reply-To: <3f01d7bc-ed20-1a39-25bc-ce7d34e22398@prodsyse.com>
References: <71f66de5-e1aa-5649-b07a-6cf79f9b07bc@prodsyse.com>
 <cb4218b1-7fcc-80cb-18ab-361b93a3177e@prodsyse.com>
 <8d6c6dd4-d231-ecc7-c584-6e08f93a81e5@gmail.com>
 <89645BC9-C6BF-4E57-8AA0-9F426BA8AC5E@rstudio.com>
 <CA+rDMK+HXUKnA0j49czOf99M62QBfnyO36Sf1MBEe8a5AO-+XA@mail.gmail.com>
 <06a9569b-5b68-a288-8c4f-1537120a5213@prodsyse.com>
 <CABtg=Km5cdEWyUM55FEiabNdZdHvJoELHZ7RCRMPgQhUg9Gc6w@mail.gmail.com>
 <6d983b3b-62ea-3bb9-724a-01baaff51e70@gmail.com>
 <fb319697-6408-17b5-30a1-7a8f9d8da928@prodsyse.com>
 <CAMMJQ0a7ZtndwL8YYas6+k3BRDtAFizAuaacONQ6i6HmrQMTeA@mail.gmail.com>
 <3f01d7bc-ed20-1a39-25bc-ce7d34e22398@prodsyse.com>
Message-ID: <CAFDcVCR9=WMJRmT3RVZxaQaWxQ4EciojC5ct4K=PrSjuJKtKNw@mail.gmail.com>

On Sat, Jun 29, 2019 at 9:43 AM Spencer Graves
<spencer.graves at prodsyse.com> wrote:
>
> Hi, Ott et al.:
>
>
>        What's the best way to get "Travis CI" to build and test the two
> packages, Ecdat and Ecfun, that have long been combined in the Ecdat
> project?
>
>
>        Following Ott's advice and studying studying Wickham's "R
> Packages" (http://r-pkgs.had.co.nz/), I was able to configure RStudio so
> it would sync using git with "GitHub.com/sbgraves237/Ecdat".  However,
> when I tried to configure "Travis CI", it said, "No DESCRIPTION file
> found, user must supply their own install and script steps".
>
>
>        Earlier in this thread, I think someone suggested I make the
> Ecdat and Ecfun packages separate projects on GitHub (though I can't
> find that suggestion now).  This would not be an issue if it were all
> local without version control.  With RStudio managing my interface with
> GitHub, it now seems quite tricky.

I'm 99.999% confident that your life will be much much easier if you
keep one R package per repository.  If you don't, you'll probably be
very lonely when it comes to tools etc.  There are built-in 'git'
commands, but also git utility tools, for extracting a subset of
folders/files from git repository into new git repositories.  You'll
still preserve the commit history.  I would deal with this in the
terminal, using the 'git' client and possible some extraction tool.

Also, while you spend time on this, have a look at the commit
authorship that I mentioned previously.  It's nice to have that in
place later.

After you got the above in place, then .travis.yml and appveyor.yml is
pretty straightforward (might even be a copy'n'paste).

Finally, I saw you put your credentials in the URL when you cloned.  I
don't think that's safe, your GitHub credentials will be stored in the
./.git/config file.  Instead, just clone with:

git clone https://github.com/sbgraves237/Ecdat.git

You can then configure git to cache your HTTPS credentials for a
certain time, e.g. 120 minutes, so you don't have to enter them each
time you pull/push.  See https://git-scm.com/docs/git-credential-cache
for details.  That's what I tell new-comers to Git(Hub|Lab|...) to
use.  Personally, I add my public SSH key to GitHub and then clone
with the ssh protocol:

git clone git at github.com:sbgraves237/Ecdat.git

That way my I never have to worry entering my credentials.

/Henrik

>
>
>        Suggestions?
>        Thanks again to all who have offered suggestions so far.  This
> migration from R-Forge to GitHub seems complete except for the automatic
> tests provided via "Travis CI".
>
>
>        Spencer
>
>
> On 2019-06-28 22:25, Ott Toomet wrote:
> > Apparently your username/password are wrong.  Can you clone/push from
> > other repos?
> >
> > You do not need authorization when cloning a public repo, so even
> > incorrect credentials may work (haven't tested this though).  But for
> > push you have to have that in order.
> >
> > I suggest you create ssh keys, upload those to GH, and use ssh
> > authorization instead of https.
> >
> > Cheers,
> > Ott
> >
> > On Fri, Jun 28, 2019 at 8:18 PM Spencer Graves
> > <spencer.graves at prodsyse.com <mailto:spencer.graves at prodsyse.com>> wrote:
> >
> >     Thanks to Duncan, Henrik and Henrik, Brian, and G?bor:
> >
> >
> >            I created a local copy of the new GitHub version using the
> >     following:
> >
> >     git clone
> >     https://sbgraves237:mypassword at github.com/sbgraves237/Ecdat.git
> >
> >
> >
> >            That worked in the sense that I got a local copy. However,
> >     after
> >     I rolled the version number and did "git commit" on the DESCRIPTION
> >     files, my "git push" command generated the following:
> >
> >
> >     remote: Invalid username or password.
> >     fatal: Authentication failed for
> >     'https://sbgraves237:mypassword at github.com/sbgraves237/Ecdat.git/'
> >
> >
> >            What am I missing?  [Note:  I used my actual GitHub
> >     password in
> >     place of "mypassword" here, and this "Authentication failed" message
> >     reported the GitHub password I used here.]
> >
> >
> >            Thanks,
> >            Spencer
> >
> >
> >     p.s.  I'm doing this under macOS Mojave 10.14.5.  Also,  I added
> >     ".onAttach" functions to the R-Forge versions as Brian G. Peterson
> >     suggested.  That seemed to work fine.
> >
> >
> >     On 2019-06-28 07:13, Duncan Murdoch wrote:
> >     > On 28/06/2019 6:26 a.m., G?bor Cs?rdi wrote:
> >     >
> >     >> Instead, you can do as Duncan suggested, and put a README in your
> >     >> R-Forge
> >     >> repository, that points to *your* GitHub repositor(y/ies). Then the
> >     >> https://github.com/rforge/ecdat read only mirror will pick this up
> >     >> and will
> >     >> point there as well.
> >     >
> >     > Just for the record:  that was Henrik Singmann's suggestion, I just
> >     > agreed with it.
> >     >
> >     > Duncan Murdoch
> >     >
> >
> >
> >             [[alternative HTML version deleted]]
> >
> >     ______________________________________________
> >     R-devel at r-project.org <mailto:R-devel at r-project.org> mailing list
> >     https://stat.ethz.ch/mailman/listinfo/r-devel
> >
>
>
>         [[alternative HTML version deleted]]
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From m@ech|er @end|ng |rom @t@t@m@th@ethz@ch  Sat Jun 29 22:44:49 2019
From: m@ech|er @end|ng |rom @t@t@m@th@ethz@ch (Martin Maechler)
Date: Sat, 29 Jun 2019 22:44:49 +0200
Subject: [Rd] methods package: A _R_CHECK_LENGTH_1_LOGIC2_=true error
In-Reply-To: <23831.14333.101371.604209@stat.math.ethz.ch>
References: <CAFDcVCQOWVr0p2e2HONOy9NvqPdpoAH=HPMOEP65K-N6UjhA2g@mail.gmail.com>
 <67D2E7FE-74E3-4379-B9FB-C4028AB808DF@gmail.com>
 <CAFDcVCTARMfrJRs-KiS5UiSo=SoU8+TgPh_KE+e-zFRR0eCSFQ@mail.gmail.com>
 <23824.41030.156424.792062@stat.math.ethz.ch>
 <CAFDcVCTq-Zc49t9HrdVQB4VHhOtuaoOmpGnx9JsAy+_esene3w@mail.gmail.com>
 <03ED7150-6BF7-4E6E-AD78-B6DFACE43A97@gmail.com>
 <6334E748-4121-41E7-9CD4-3F3B2278E8DC@gmail.com>
 <23828.56742.426539.104574@stat.math.ethz.ch>
 <CAFDcVCSoHT-GxRyw-bncfnbzbG19t9sUpvPnpg=Edz_j35DiFA@mail.gmail.com>
 <23830.7740.817555.22803@stat.math.ethz.ch>
 <B499F134-0795-42AD-9CDD-C639D3FD87A0@gmail.com>
 <23831.8774.109040.126892@stat.math.ethz.ch>
 <23831.14333.101371.604209@stat.math.ethz.ch>
Message-ID: <23831.52673.201433.320952@stat.math.ethz.ch>

>>>>> Martin Maechler 
>>>>>     on Sat, 29 Jun 2019 12:05:49 +0200 writes:

>>>>> Martin Maechler 
>>>>>     on Sat, 29 Jun 2019 10:33:10 +0200 writes:

>>>>> peter dalgaard 
>>>>>     on Fri, 28 Jun 2019 16:20:03 +0200 writes:

    >>> > On 28 Jun 2019, at 16:03 , Martin Maechler <maechler at stat.math.ethz.ch> wrote:
    >>> > 
    >>> >>>>>> Henrik Bengtsson 
    >>> >>>>>>    on Thu, 27 Jun 2019 16:00:39 -0700 writes:
    >>> > 
    >>> >> Using:
    >>> >> 
    >>> >> untrace(methods::conformMethod)
    >>> >> at <- c(12,4,3,2)
    >>> >> str(body(methods::conformMethod)[[at]])
    >>> >> ## language omittedSig <- omittedSig && (signature[omittedSig] != "missing")
    >>> >> cc <- 0L
    >>> >> trace(methods::conformMethod, tracer = quote({
    >>> >>  cc <<- cc + 1L
    >>> >>  print(cc)
    >>> >>  if (cc == 31) {  ## manually identified
    >>> >>    untrace(methods::conformMethod)
    >>> >>    trace(methods::conformMethod, at = list(at), tracer = quote({
    >>> >>      str(list(signature = signature, mnames = mnames, fnames = fnames))
    >>> >>      print(ls())
    >>> >>      try(str(list(omittedSig = omittedSig, signature = signature)))
    >>> >>    }))
    >>> >>  }
    >>> >> }))
    >>> >> loadNamespace("oligo")
    >>> >> 
    >>> >> gives:
    >>> >> 
    >>> >> Untracing function "conformMethod" in package "methods"
    >>> >> Tracing function "conformMethod" in package "methods"
    >>> >> Tracing conformMethod(signature, mnames, fnames, f, fdef, definition)
    >>> >> step 12,4,3,2
    >>> >> List of 3
    >>> >> $ signature: Named chr [1:4] "TilingFeatureSet" "ANY" "ANY" "array"
    >>> >>  ..- attr(*, "names")= chr [1:4] "object" "subset" "target" "value"
    >>> >>  ..- attr(*, "package")= chr [1:4] "oligoClasses" "methods" "methods" "methods"
    >>> >> $ mnames   : chr [1:2] "object" "value"
    >>> >> $ fnames   : chr [1:4] "object" "subset" "target" "value"
    >>> >> [1] "f"          "fdef"       "fnames"     "fsig"       "imf"
    >>> >> [6] "method"     "mnames"     "omitted"    "omittedSig" "sig0"
    >>> >> [11] "sigNames"   "signature"
    >>> >> List of 2
    >>> >> $ omittedSig: logi [1:4] FALSE TRUE TRUE FALSE
    >>> >> $ signature : Named chr [1:4] "TilingFeatureSet" "ANY" "ANY" "array"
    >>> >>  ..- attr(*, "names")= chr [1:4] "object" "subset" "target" "value"
    >>> >>  ..- attr(*, "package")= chr [1:4] "oligoClasses" "methods" "methods" "methods"
    >>> >> Error in omittedSig && (signature[omittedSig] != "missing") :
    >>> >>  'length(x) = 4 > 1' in coercion to 'logical(1)'
    >>> >> Error: unable to load R code in package 'oligo'
    >>> >> 
    >>> > 
    >>> > Thank you, Henrik, nice piece of using trace() .. and the above
    >>> > is useful for solving the issue --  I can work with that.
    >>> > 
    >>> > I'm  already pretty sure the wrong code starts with
    >>> > 
    >>> >    omittedSig <- sigNames %in% fnames[omitted] # ....

    >> my  "pretty sure"  statement above has proven to be wrong ..

    >>> > -------------
    >>> > 
    >>> 
    >>> I think the intention must have been that the two "ANY" signatures should change to "missing". 

    >> Definitely.

    >>> However, with the current logic that will not happen, because
    >>> 
    >>> > c(F,T,T,F) &&  c(T,T)
    >>> [1] FALSE
    >>> 
    >>> Henrik's non-fix would have resulted in
    >>> 
    >>> > c(F,T,T,F) &  c(T,T)
    >>> [1] FALSE  TRUE  TRUE FALSE
    >>> 
    >>> which is actually right, but only coincidentally due to recycling of c(T,T). Had it been c(F,T) then it would have been expanded to c(F,T,F,T) which would be the opposite of what was wanted.
    >>> 
    >>> Barring NA issues, I still think 
    >>> 
    >>> omittedSig[omittedSig] <- (signature[omittedSig] != "missing")
    >>> 
    >>> should do the trick.

    >> yes, (most probably).  I've found a version of that which should
    >> be even easier to "read and understand", in  svn commit 76753 :

    >> svn diff -c 76753 src/library/methods/R/RMethodUtils.R

    >> --- src/library/methods/R/RMethodUtils.R	(Revision 76752)
    >> +++ src/library/methods/R/RMethodUtils.R	(Revision 76753)
    >> @@ -342,8 +342,7 @@
    >> gettextf("formal arguments (%s) omitted in the method definition cannot be in the signature", bad2),
    >> call. = TRUE, domain = NA)
    >> }
    >> -    else if(!all(signature[omittedSig] == "missing")) {
    >> -        omittedSig <- omittedSig && (signature[omittedSig] != "missing")
    >> +    else if(any(omittedSig <- omittedSig & signature != "missing")) {


    >> BTW:  I've marked this --- and the  runmed() seg.fault + na.action
    >> change ---  as something to be added to R 3.6.1 patched,  as I
    >> deemed I should obey the "code freeze" rule in both cases.

    >> Martin

    > Hmm... I think we got a 'Neverending Story' here -- because it
    > seems, both Peter and I were wrong in thinking that it's a good
    > idea to change "missing" to "ANY" here ...
    > ((or if that *was* correct, that needs to entail more changes
    > happening during setMethod(.) {conformMethod() is only called in
    > one place in our code base, namely from setMethod()} :

as a matter of fact, I've been brave for now, left the change to
conformMethod()  and started to fix the constructed .local()
calls which are created in  conformMethod()'s sibling,
which is rematchDefinition().

It seems that this builds e.g. Matrix {with its gazillion
setMethod()s} and that continues to run its own tests.  OTOH,
Matrix may not trigger the situations that are dealt with here
at all, as the signature() are rarely longer than three, and at
some point in time I had made long passes through the package in
order to "minimize" the .local() calls.

--> svn commit 76756  (in addition to 76753, mentioned earlier)
    now has rematchDefinition() changes

I would be positively surprised if (but can imagine that) this
had no affect on CRAN / Bioconductor packages.

Still, these two changes seem to achieve what both the comments
and the documentation of  conformMethod() and rematchDefinition()
suggest should happen.

Of course, I'd really be happy if people with S4 packages would
check them with an R-devel version with svn rev >=  76756
and report problems they see.
I do imagine effects, and would expect that bugs in current code
become visible where they had not done so previously.

Martin

    > I've started to explore the effects of the change using and
    > extending the tests/reg-tests-1d.R  example that I had just committed.

    > And the result is *not good* :

    > As we said above, the new code does replace all "ANY" by "missing" in the
    > signature, unless the "ANY" are at the end of the signature.

    > However, later methods package code producing the .local(.)
    > calls in the method definition (in cases where the signature of
    > the generic and the method do not match exactly) --- possibly
    > may have been tweaked later than the conformMethod() code ---
    > and the .local() calls they now produce

    > - work as intended for R <= 3.6.0 (and R 3.6.1 RC)
    > - fail to work for R-devel with the change :

    > See this (not a minimal rep.rex. but one building on Henrik's
    > oligo case and what's newly in  tests/reg-tests-1d.R ) :

    > -----------------------------------------------------------------------------

    > ## conformMethod()  "&& logic" bug, by Henrik Bengtsson on R-devel list, 2019-06-22
    > setClass("tilingFSet", slots = c(x = "numeric"))
    > if(!is.null(getGeneric("oligoFn"))) removeGeneric("oligoFn")
    > setGeneric("oligoFn",
    > function(object, subset, target, value) { standardGeneric("oligoFn") })
    > Sys.unsetenv("_R_CHECK_LENGTH_1_LOGIC2_") ## << added here, to compare with R 3.6.0, 3.5.3, ..
    > setMethod("oligoFn", signature(object = "tilingFSet", value="array"),	## Method _ 1 _
    > function(object, value) { list(object=object, value=value) })
    > setMethod("oligoFn", signature(object = "matrix", target="array"),	## Method _ 2 _
    > function(object, target) list(object=object, target=target))
    > setMethod("oligoFn", signature(object = "matrix", subset="integer"),	## Method _ 3 _
    > function(object, subset) list(object=object, subset=subset))	#	(*no* Note: ANY at end)
    > setMethod("oligoFn", signature(object = "matrix"),			## Method _ 4 _
    > function(object) list(object=object))				#	(*no* Note: ANY at end)
    > showMethods("oligoFn") # F.Y.I.:  in R 3.6.0 and earlier: contains "ANY" everywhere

    > ##-- Now, the following *DOES* work fine in R <= 3.6.0  but *no longer* in R-devel :
    > str(r1 <- oligoFn(object=new("tilingFSet"), value=array(2)))
    > str(r2 <- oligoFn(object=diag(2),          target=array(42)))
    > ## These 2 work fine in all versions of R: Here the "ANY" remain at the end:
    > str(r3 <- oligoFn(object=diag(2),          subset=1:3))
    > str(r4 <- oligoFn(object=diag(2)))

    > -----------------------------------------------------------------------------
    > The two errors in R-devel are actually quite user-confusing:

    >> r2 <- oligoFn(object=diag(2),          target=array(42))
    > Error in .local(object, target) : 
    > argument "target" is missing, with no default
    >> getMethod("oligoFn", signature(object="matrix", subset="missing", target="array"))
    > Method Definition:

    > function (object, subset, target, value) 
    > {
    > .local <- function (object, subset, target, value) 
    > list(object = object, target = target)
    > .local(object, target)
    > }

    > Signatures:
    > object   subset    target  value
    > target  "matrix" "missing" "array" "ANY"
    > defined "matrix" "missing" "array" "ANY"
    >> 


    > My conclusion:  There's something really wrong with what
    > conformMethod() has been *intended* to achieve and what it
    > "accidentally" did achieve in these cases: it never replaced
    > "ANY" by "missing" in all these cases *AND* that is what it
    > seems it should continue doing.

    > BTW: ?conformMethod  goes to a page with quite a few things,
    > relevantly containing

    > ?conformMethod?: If the formal arguments, ?mnames?, are not
    > identical to the formal arguments to the function, ?fnames?,
    > ?conformMethod? determines whether the signature and the two
    > sets of arguments conform, and returns the signature,
    > possibly extended.  The function name, ?f? is supplied for
    > error messages. The generic function, ?fdef?, supplies the
    > generic signature for matching purposes.

    > The method assignment conforms if method and generic function
    > have identical formal argument lists.  It can also conform if
    > the method omits some of the formal arguments of the function
    > but: (1) the non-omitted arguments are a subset of the
    > function arguments, appearing in the same order; (2) there
    > are no arguments to the method that are not arguments to the
    > function; and (3) the omitted formal arguments do not appear
    > as explicit classes in the signature.  A future extension
    > hopes to test also that the omitted arguments are not assumed
    > by being used as locally assigned names or function names in
    > the body of the method.

    > ---
    > It seems my commit to R-devel needs another change.
    > This has to wait for hours currently, though.

    > Martin

    > ______________________________________________
    > R-devel at r-project.org mailing list
    > https://stat.ethz.ch/mailman/listinfo/r-devel


From @pencer@gr@ve@ @end|ng |rom prod@y@e@com  Sun Jun 30 01:06:14 2019
From: @pencer@gr@ve@ @end|ng |rom prod@y@e@com (Spencer Graves)
Date: Sat, 29 Jun 2019 18:06:14 -0500
Subject: [Rd] R-Forge > GitHub?
In-Reply-To: <CAFDcVCR9=WMJRmT3RVZxaQaWxQ4EciojC5ct4K=PrSjuJKtKNw@mail.gmail.com>
References: <71f66de5-e1aa-5649-b07a-6cf79f9b07bc@prodsyse.com>
 <cb4218b1-7fcc-80cb-18ab-361b93a3177e@prodsyse.com>
 <8d6c6dd4-d231-ecc7-c584-6e08f93a81e5@gmail.com>
 <89645BC9-C6BF-4E57-8AA0-9F426BA8AC5E@rstudio.com>
 <CA+rDMK+HXUKnA0j49czOf99M62QBfnyO36Sf1MBEe8a5AO-+XA@mail.gmail.com>
 <06a9569b-5b68-a288-8c4f-1537120a5213@prodsyse.com>
 <CABtg=Km5cdEWyUM55FEiabNdZdHvJoELHZ7RCRMPgQhUg9Gc6w@mail.gmail.com>
 <6d983b3b-62ea-3bb9-724a-01baaff51e70@gmail.com>
 <fb319697-6408-17b5-30a1-7a8f9d8da928@prodsyse.com>
 <CAMMJQ0a7ZtndwL8YYas6+k3BRDtAFizAuaacONQ6i6HmrQMTeA@mail.gmail.com>
 <3f01d7bc-ed20-1a39-25bc-ce7d34e22398@prodsyse.com>
 <CAFDcVCR9=WMJRmT3RVZxaQaWxQ4EciojC5ct4K=PrSjuJKtKNw@mail.gmail.com>
Message-ID: <c9f1e823-9384-1f9f-0d70-e6ccbe8e9075@prodsyse.com>

Hi, Henrik et al.:


 ????? What's your favorite documentation on how to make two GitHub 
projects from one containing two packages?


 ????? Currently, "github.com/sbgraves237/Ecdat" consists primarily of a 
directory "pkg" with subdirectories "Ecdat" and "Ecfun" containing the 
two packages.? I need to know how to do the following:


 ??? ??????? 1.? Extract "github.com/sbgraves237/Ecdat/pkg/Ecfun" to 
create? "github.com/sbgraves237/Ecfun".


 ???? ??????? 2.? Elevate "github.com/sbgraves237/Ecdat/pkg/Ecdat" to 
"github.com/sbgraves237/Ecdat", discarding the other files in the 
original "github.com/sbgraves237/Ecdat/".


 ????? This sounds like it could be accomplished relatively easily by 
someone with sufficient understanding of "git" and GitHub.? I could use 
suggestions on how to do this -- or at least on how to find 
documentation on how to do this.


 ????? Thanks,
 ????? Spencer


On 2019-06-29 14:09, Henrik Bengtsson wrote:
> On Sat, Jun 29, 2019 at 9:43 AM Spencer Graves
> <spencer.graves at prodsyse.com> wrote:
>> Hi, Ott et al.:
>>
>>
>>         What's the best way to get "Travis CI" to build and test the two
>> packages, Ecdat and Ecfun, that have long been combined in the Ecdat
>> project?
>>
>>
>>         Following Ott's advice and studying studying Wickham's "R
>> Packages" (http://r-pkgs.had.co.nz/), I was able to configure RStudio so
>> it would sync using git with "GitHub.com/sbgraves237/Ecdat".  However,
>> when I tried to configure "Travis CI", it said, "No DESCRIPTION file
>> found, user must supply their own install and script steps".
>>
>>
>>         Earlier in this thread, I think someone suggested I make the
>> Ecdat and Ecfun packages separate projects on GitHub (though I can't
>> find that suggestion now).  This would not be an issue if it were all
>> local without version control.  With RStudio managing my interface with
>> GitHub, it now seems quite tricky.
> I'm 99.999% confident that your life will be much much easier if you
> keep one R package per repository.  If you don't, you'll probably be
> very lonely when it comes to tools etc.  There are built-in 'git'
> commands, but also git utility tools, for extracting a subset of
> folders/files from git repository into new git repositories.  You'll
> still preserve the commit history.  I would deal with this in the
> terminal, using the 'git' client and possible some extraction tool.
>
> Also, while you spend time on this, have a look at the commit
> authorship that I mentioned previously.  It's nice to have that in
> place later.
>
> After you got the above in place, then .travis.yml and appveyor.yml is
> pretty straightforward (might even be a copy'n'paste).
>
> Finally, I saw you put your credentials in the URL when you cloned.  I
> don't think that's safe, your GitHub credentials will be stored in the
> ./.git/config file.  Instead, just clone with:
>
> git clone https://github.com/sbgraves237/Ecdat.git
>
> You can then configure git to cache your HTTPS credentials for a
> certain time, e.g. 120 minutes, so you don't have to enter them each
> time you pull/push.  See https://git-scm.com/docs/git-credential-cache
> for details.  That's what I tell new-comers to Git(Hub|Lab|...) to
> use.  Personally, I add my public SSH key to GitHub and then clone
> with the ssh protocol:
>
> git clone git at github.com:sbgraves237/Ecdat.git
>
> That way my I never have to worry entering my credentials.
>
> /Henrik
>
>>
>>         Suggestions?
>>         Thanks again to all who have offered suggestions so far.  This
>> migration from R-Forge to GitHub seems complete except for the automatic
>> tests provided via "Travis CI".
>>
>>
>>         Spencer
>>
>>
>> On 2019-06-28 22:25, Ott Toomet wrote:
>>> Apparently your username/password are wrong.  Can you clone/push from
>>> other repos?
>>>
>>> You do not need authorization when cloning a public repo, so even
>>> incorrect credentials may work (haven't tested this though).  But for
>>> push you have to have that in order.
>>>
>>> I suggest you create ssh keys, upload those to GH, and use ssh
>>> authorization instead of https.
>>>
>>> Cheers,
>>> Ott
>>>
>>> On Fri, Jun 28, 2019 at 8:18 PM Spencer Graves
>>> <spencer.graves at prodsyse.com <mailto:spencer.graves at prodsyse.com>> wrote:
>>>
>>>      Thanks to Duncan, Henrik and Henrik, Brian, and G?bor:
>>>
>>>
>>>             I created a local copy of the new GitHub version using the
>>>      following:
>>>
>>>      git clone
>>>      https://sbgraves237:mypassword at github.com/sbgraves237/Ecdat.git
>>>
>>>
>>>
>>>             That worked in the sense that I got a local copy. However,
>>>      after
>>>      I rolled the version number and did "git commit" on the DESCRIPTION
>>>      files, my "git push" command generated the following:
>>>
>>>
>>>      remote: Invalid username or password.
>>>      fatal: Authentication failed for
>>>      'https://sbgraves237:mypassword at github.com/sbgraves237/Ecdat.git/'
>>>
>>>
>>>             What am I missing?  [Note:  I used my actual GitHub
>>>      password in
>>>      place of "mypassword" here, and this "Authentication failed" message
>>>      reported the GitHub password I used here.]
>>>
>>>
>>>             Thanks,
>>>             Spencer
>>>
>>>
>>>      p.s.  I'm doing this under macOS Mojave 10.14.5.  Also,  I added
>>>      ".onAttach" functions to the R-Forge versions as Brian G. Peterson
>>>      suggested.  That seemed to work fine.
>>>
>>>
>>>      On 2019-06-28 07:13, Duncan Murdoch wrote:
>>>      > On 28/06/2019 6:26 a.m., G?bor Cs?rdi wrote:
>>>      >
>>>      >> Instead, you can do as Duncan suggested, and put a README in your
>>>      >> R-Forge
>>>      >> repository, that points to *your* GitHub repositor(y/ies). Then the
>>>      >> https://github.com/rforge/ecdat read only mirror will pick this up
>>>      >> and will
>>>      >> point there as well.
>>>      >
>>>      > Just for the record:  that was Henrik Singmann's suggestion, I just
>>>      > agreed with it.
>>>      >
>>>      > Duncan Murdoch
>>>      >
>>>
>>>
>>>              [[alternative HTML version deleted]]
>>>
>>>      ______________________________________________
>>>      R-devel at r-project.org <mailto:R-devel at r-project.org> mailing list
>>>      https://stat.ethz.ch/mailman/listinfo/r-devel
>>>
>>
>>          [[alternative HTML version deleted]]
>>
>> ______________________________________________
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel


From therne@u @end|ng |rom m@yo@edu  Sun Jun 30 04:27:15 2019
From: therne@u @end|ng |rom m@yo@edu (Therneau, Terry M., Ph.D.)
Date: Sat, 29 Jun 2019 21:27:15 -0500
Subject: [Rd] memory access question
Message-ID: <8fb769$bvgmqt@ironport10.mayo.edu>

I had a problem with the latest iteration of the survival package? (one that I hope to 
post to Github next week) where it would die in strange ways, i.e., work on one box and 
not on another, a vignette would compile if I invoked Sweave myself but fail in R CMD 
build, etc. ? The type of thing that says quite loudly that there is a memory issue 
somewhere in a C routine.?? The kind that has potential for making you tear your hair out.

In any case, I finally built an ASAN aware version of R on my test box, and it failed on 
something that looked minor.? I was reading one element past one of the input vectors, 
though I never used the value.?? In essence I had? "temp = input[i]" one line in front of 
the "if() break" test for i.?? (The while loop for i was running from n-1 to 0; one often 
goes from largest to smallest time value in survival code, so i was -1 at the failure). ?? 
I repaired this of course, but with no real hope that it could be the actual issue causing 
my errors.?? And now the weird behavior seems to have gone away!? The argument in question 
was about midway on the argument list BTW.

My question is, should I have been as surprised as I am?

And let me give a big thank you to the authors of the "debugging" section of the packages 
guide.? Things that reliably die are one thing, but I don't know how I would have found 
this one without the help.

Terry T.


	[[alternative HTML version deleted]]


From jo@h@m@u|r|ch @end|ng |rom gm@||@com  Sun Jun 30 04:46:54 2019
From: jo@h@m@u|r|ch @end|ng |rom gm@||@com (Joshua Ulrich)
Date: Sat, 29 Jun 2019 21:46:54 -0500
Subject: [Rd] R-Forge > GitHub?
In-Reply-To: <c9f1e823-9384-1f9f-0d70-e6ccbe8e9075@prodsyse.com>
References: <71f66de5-e1aa-5649-b07a-6cf79f9b07bc@prodsyse.com>
 <cb4218b1-7fcc-80cb-18ab-361b93a3177e@prodsyse.com>
 <8d6c6dd4-d231-ecc7-c584-6e08f93a81e5@gmail.com>
 <89645BC9-C6BF-4E57-8AA0-9F426BA8AC5E@rstudio.com>
 <CA+rDMK+HXUKnA0j49czOf99M62QBfnyO36Sf1MBEe8a5AO-+XA@mail.gmail.com>
 <06a9569b-5b68-a288-8c4f-1537120a5213@prodsyse.com>
 <CABtg=Km5cdEWyUM55FEiabNdZdHvJoELHZ7RCRMPgQhUg9Gc6w@mail.gmail.com>
 <6d983b3b-62ea-3bb9-724a-01baaff51e70@gmail.com>
 <fb319697-6408-17b5-30a1-7a8f9d8da928@prodsyse.com>
 <CAMMJQ0a7ZtndwL8YYas6+k3BRDtAFizAuaacONQ6i6HmrQMTeA@mail.gmail.com>
 <3f01d7bc-ed20-1a39-25bc-ce7d34e22398@prodsyse.com>
 <CAFDcVCR9=WMJRmT3RVZxaQaWxQ4EciojC5ct4K=PrSjuJKtKNw@mail.gmail.com>
 <c9f1e823-9384-1f9f-0d70-e6ccbe8e9075@prodsyse.com>
Message-ID: <CAPPM_gQ6Ef0+FYz0NrywwiPyW9O2Wwcms8sbmQATp-jcgyYhBA@mail.gmail.com>

On Sat, Jun 29, 2019 at 6:06 PM Spencer Graves
<spencer.graves at prodsyse.com> wrote:
>
> Hi, Henrik et al.:
>
>
>        What's your favorite documentation on how to make two GitHub
> projects from one containing two packages?
>
>
>        Currently, "github.com/sbgraves237/Ecdat" consists primarily of a
> directory "pkg" with subdirectories "Ecdat" and "Ecfun" containing the
> two packages.  I need to know how to do the following:
>
>
>              1.  Extract "github.com/sbgraves237/Ecdat/pkg/Ecfun" to
> create  "github.com/sbgraves237/Ecfun".
>
>
>               2.  Elevate "github.com/sbgraves237/Ecdat/pkg/Ecdat" to
> "github.com/sbgraves237/Ecdat", discarding the other files in the
> original "github.com/sbgraves237/Ecdat/".
>
>
>        This sounds like it could be accomplished relatively easily by
> someone with sufficient understanding of "git" and GitHub.  I could use
> suggestions on how to do this -- or at least on how to find
> documentation on how to do this.
>
This is straightforward if the two packages have always been in the
same directory structure.  But it doesn't look like that's the case
for your repository, since Ecfun was added around r125.  So Ecdat's
history is split and would need to be grafted together.  I've done
this for other packages.  So it's possible, but it took me some trial
and error.

I'm giving that a go right now.  I'll report back tomorrow morning, at
the latest.

>
>        Thanks,
>        Spencer
>
>
> On 2019-06-29 14:09, Henrik Bengtsson wrote:
> > On Sat, Jun 29, 2019 at 9:43 AM Spencer Graves
> > <spencer.graves at prodsyse.com> wrote:
> >> Hi, Ott et al.:
> >>
> >>
> >>         What's the best way to get "Travis CI" to build and test the two
> >> packages, Ecdat and Ecfun, that have long been combined in the Ecdat
> >> project?
> >>
> >>
> >>         Following Ott's advice and studying studying Wickham's "R
> >> Packages" (http://r-pkgs.had.co.nz/), I was able to configure RStudio so
> >> it would sync using git with "GitHub.com/sbgraves237/Ecdat".  However,
> >> when I tried to configure "Travis CI", it said, "No DESCRIPTION file
> >> found, user must supply their own install and script steps".
> >>
> >>
> >>         Earlier in this thread, I think someone suggested I make the
> >> Ecdat and Ecfun packages separate projects on GitHub (though I can't
> >> find that suggestion now).  This would not be an issue if it were all
> >> local without version control.  With RStudio managing my interface with
> >> GitHub, it now seems quite tricky.
> > I'm 99.999% confident that your life will be much much easier if you
> > keep one R package per repository.  If you don't, you'll probably be
> > very lonely when it comes to tools etc.  There are built-in 'git'
> > commands, but also git utility tools, for extracting a subset of
> > folders/files from git repository into new git repositories.  You'll
> > still preserve the commit history.  I would deal with this in the
> > terminal, using the 'git' client and possible some extraction tool.
> >
> > Also, while you spend time on this, have a look at the commit
> > authorship that I mentioned previously.  It's nice to have that in
> > place later.
> >
> > After you got the above in place, then .travis.yml and appveyor.yml is
> > pretty straightforward (might even be a copy'n'paste).
> >
> > Finally, I saw you put your credentials in the URL when you cloned.  I
> > don't think that's safe, your GitHub credentials will be stored in the
> > ./.git/config file.  Instead, just clone with:
> >
> > git clone https://github.com/sbgraves237/Ecdat.git
> >
> > You can then configure git to cache your HTTPS credentials for a
> > certain time, e.g. 120 minutes, so you don't have to enter them each
> > time you pull/push.  See https://git-scm.com/docs/git-credential-cache
> > for details.  That's what I tell new-comers to Git(Hub|Lab|...) to
> > use.  Personally, I add my public SSH key to GitHub and then clone
> > with the ssh protocol:
> >
> > git clone git at github.com:sbgraves237/Ecdat.git
> >
> > That way my I never have to worry entering my credentials.
> >
> > /Henrik
> >
> >>
> >>         Suggestions?
> >>         Thanks again to all who have offered suggestions so far.  This
> >> migration from R-Forge to GitHub seems complete except for the automatic
> >> tests provided via "Travis CI".
> >>
> >>
> >>         Spencer
> >>
> >>
> >> On 2019-06-28 22:25, Ott Toomet wrote:
> >>> Apparently your username/password are wrong.  Can you clone/push from
> >>> other repos?
> >>>
> >>> You do not need authorization when cloning a public repo, so even
> >>> incorrect credentials may work (haven't tested this though).  But for
> >>> push you have to have that in order.
> >>>
> >>> I suggest you create ssh keys, upload those to GH, and use ssh
> >>> authorization instead of https.
> >>>
> >>> Cheers,
> >>> Ott
> >>>
> >>> On Fri, Jun 28, 2019 at 8:18 PM Spencer Graves
> >>> <spencer.graves at prodsyse.com <mailto:spencer.graves at prodsyse.com>> wrote:
> >>>
> >>>      Thanks to Duncan, Henrik and Henrik, Brian, and G?bor:
> >>>
> >>>
> >>>             I created a local copy of the new GitHub version using the
> >>>      following:
> >>>
> >>>      git clone
> >>>      https://sbgraves237:mypassword at github.com/sbgraves237/Ecdat.git
> >>>
> >>>
> >>>
> >>>             That worked in the sense that I got a local copy. However,
> >>>      after
> >>>      I rolled the version number and did "git commit" on the DESCRIPTION
> >>>      files, my "git push" command generated the following:
> >>>
> >>>
> >>>      remote: Invalid username or password.
> >>>      fatal: Authentication failed for
> >>>      'https://sbgraves237:mypassword at github.com/sbgraves237/Ecdat.git/'
> >>>
> >>>
> >>>             What am I missing?  [Note:  I used my actual GitHub
> >>>      password in
> >>>      place of "mypassword" here, and this "Authentication failed" message
> >>>      reported the GitHub password I used here.]
> >>>
> >>>
> >>>             Thanks,
> >>>             Spencer
> >>>
> >>>
> >>>      p.s.  I'm doing this under macOS Mojave 10.14.5.  Also,  I added
> >>>      ".onAttach" functions to the R-Forge versions as Brian G. Peterson
> >>>      suggested.  That seemed to work fine.
> >>>
> >>>
> >>>      On 2019-06-28 07:13, Duncan Murdoch wrote:
> >>>      > On 28/06/2019 6:26 a.m., G?bor Cs?rdi wrote:
> >>>      >
> >>>      >> Instead, you can do as Duncan suggested, and put a README in your
> >>>      >> R-Forge
> >>>      >> repository, that points to *your* GitHub repositor(y/ies). Then the
> >>>      >> https://github.com/rforge/ecdat read only mirror will pick this up
> >>>      >> and will
> >>>      >> point there as well.
> >>>      >
> >>>      > Just for the record:  that was Henrik Singmann's suggestion, I just
> >>>      > agreed with it.
> >>>      >
> >>>      > Duncan Murdoch
> >>>      >
> >>>
> >>>
> >>>              [[alternative HTML version deleted]]
> >>>
> >>>      ______________________________________________
> >>>      R-devel at r-project.org <mailto:R-devel at r-project.org> mailing list
> >>>      https://stat.ethz.ch/mailman/listinfo/r-devel
> >>>
> >>
> >>          [[alternative HTML version deleted]]
> >>
> >> ______________________________________________
> >> R-devel at r-project.org mailing list
> >> https://stat.ethz.ch/mailman/listinfo/r-devel
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel



-- 
Joshua Ulrich  |  about.me/joshuaulrich
FOSS Trading  |  www.fosstrading.com


From |uc@r @end|ng |rom |edor@project@org  Sun Jun 30 11:21:09 2019
From: |uc@r @end|ng |rom |edor@project@org (=?UTF-8?Q?I=C3=B1aki_Ucar?=)
Date: Sun, 30 Jun 2019 11:21:09 +0200
Subject: [Rd] memory access question
In-Reply-To: <8fb769$bvgmqt@ironport10.mayo.edu>
References: <8fb769$bvgmqt@ironport10.mayo.edu>
Message-ID: <CALEXWq2A2ds3NghYNxzdbCKPisMLYeRW3D8+gdO+UOjT_JstcQ@mail.gmail.com>

It doesn't matter you didn't use the value. An invalid read may fail
or not. It depends on whether that memory portion was reallocated or
not by the OS. When it was, you are trying to read in a memory region
where you don't have permission, so it crashes.

I?aki

On Sun, 30 Jun 2019 at 04:27, Therneau, Terry M., Ph.D. via R-devel
<r-devel at r-project.org> wrote:
>
> I had a problem with the latest iteration of the survival package  (one that I hope to
> post to Github next week) where it would die in strange ways, i.e., work on one box and
> not on another, a vignette would compile if I invoked Sweave myself but fail in R CMD
> build, etc.   The type of thing that says quite loudly that there is a memory issue
> somewhere in a C routine.   The kind that has potential for making you tear your hair out.
>
> In any case, I finally built an ASAN aware version of R on my test box, and it failed on
> something that looked minor.  I was reading one element past one of the input vectors,
> though I never used the value.   In essence I had  "temp = input[i]" one line in front of
> the "if() break" test for i.   (The while loop for i was running from n-1 to 0; one often
> goes from largest to smallest time value in survival code, so i was -1 at the failure).
> I repaired this of course, but with no real hope that it could be the actual issue causing
> my errors.   And now the weird behavior seems to have gone away!  The argument in question
> was about midway on the argument list BTW.
>
> My question is, should I have been as surprised as I am?
>
> And let me give a big thank you to the authors of the "debugging" section of the packages
> guide.  Things that reliably die are one thing, but I don't know how I would have found
> this one without the help.
>
> Terry T.
>
>
>         [[alternative HTML version deleted]]
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel



-- 
I?aki ?car


From jo@h@m@u|r|ch @end|ng |rom gm@||@com  Sun Jun 30 13:58:15 2019
From: jo@h@m@u|r|ch @end|ng |rom gm@||@com (Joshua Ulrich)
Date: Sun, 30 Jun 2019 06:58:15 -0500
Subject: [Rd] R-Forge > GitHub?
In-Reply-To: <CAPPM_gQ6Ef0+FYz0NrywwiPyW9O2Wwcms8sbmQATp-jcgyYhBA@mail.gmail.com>
References: <71f66de5-e1aa-5649-b07a-6cf79f9b07bc@prodsyse.com>
 <cb4218b1-7fcc-80cb-18ab-361b93a3177e@prodsyse.com>
 <8d6c6dd4-d231-ecc7-c584-6e08f93a81e5@gmail.com>
 <89645BC9-C6BF-4E57-8AA0-9F426BA8AC5E@rstudio.com>
 <CA+rDMK+HXUKnA0j49czOf99M62QBfnyO36Sf1MBEe8a5AO-+XA@mail.gmail.com>
 <06a9569b-5b68-a288-8c4f-1537120a5213@prodsyse.com>
 <CABtg=Km5cdEWyUM55FEiabNdZdHvJoELHZ7RCRMPgQhUg9Gc6w@mail.gmail.com>
 <6d983b3b-62ea-3bb9-724a-01baaff51e70@gmail.com>
 <fb319697-6408-17b5-30a1-7a8f9d8da928@prodsyse.com>
 <CAMMJQ0a7ZtndwL8YYas6+k3BRDtAFizAuaacONQ6i6HmrQMTeA@mail.gmail.com>
 <3f01d7bc-ed20-1a39-25bc-ce7d34e22398@prodsyse.com>
 <CAFDcVCR9=WMJRmT3RVZxaQaWxQ4EciojC5ct4K=PrSjuJKtKNw@mail.gmail.com>
 <c9f1e823-9384-1f9f-0d70-e6ccbe8e9075@prodsyse.com>
 <CAPPM_gQ6Ef0+FYz0NrywwiPyW9O2Wwcms8sbmQATp-jcgyYhBA@mail.gmail.com>
Message-ID: <CAPPM_gQm4JEDZnqg1xPN8U7j2y76=bBNsmxB0dAm0Z7ujmrXzQ@mail.gmail.com>

On Sat, Jun 29, 2019 at 9:46 PM Joshua Ulrich <josh.m.ulrich at gmail.com> wrote:
>
> On Sat, Jun 29, 2019 at 6:06 PM Spencer Graves
> <spencer.graves at prodsyse.com> wrote:
> >
> > Hi, Henrik et al.:
> >
> >
> >        What's your favorite documentation on how to make two GitHub
> > projects from one containing two packages?
> >
> >
> >        Currently, "github.com/sbgraves237/Ecdat" consists primarily of a
> > directory "pkg" with subdirectories "Ecdat" and "Ecfun" containing the
> > two packages.  I need to know how to do the following:
> >
> >
> >              1.  Extract "github.com/sbgraves237/Ecdat/pkg/Ecfun" to
> > create  "github.com/sbgraves237/Ecfun".
> >
> >
> >               2.  Elevate "github.com/sbgraves237/Ecdat/pkg/Ecdat" to
> > "github.com/sbgraves237/Ecdat", discarding the other files in the
> > original "github.com/sbgraves237/Ecdat/".
> >
> >
> >        This sounds like it could be accomplished relatively easily by
> > someone with sufficient understanding of "git" and GitHub.  I could use
> > suggestions on how to do this -- or at least on how to find
> > documentation on how to do this.
> >
> This is straightforward if the two packages have always been in the
> same directory structure.  But it doesn't look like that's the case
> for your repository, since Ecfun was added around r125.  So Ecdat's
> history is split and would need to be grafted together.  I've done
> this for other packages.  So it's possible, but it took me some trial
> and error.
>
> I'm giving that a go right now.  I'll report back tomorrow morning, at
> the latest.
>
I imported both packages into separate repositories:
https://github.com/joshuaulrich/tmp-ecdat
https://github.com/joshuaulrich/tmp-ecfun

I changed your email address on your R-Forge commits to match your
GitHub email address, so R-Forge commits would be associated with your
GitHub account.  I also omitted the "move" commit from Ecdat, and the
"obsolete > GitHub" commits from both packages.  I've attached a file
with the commands I used, if anyone is interested.

You can use my repos by cloning them to your local machine, adding
your repos as new remotes, and pushing to them.  You would need to run
these commands (untested):

### clone my GitHub repo to your machine
git clone git at github.com:joshuaulrich/tmp-ecfun.git Ecdat
cd Ecdat
### rename my GitHub repo remote from 'origin' to 'tmp'
git remote rename origin tmp
### add your GitHub repo remote as 'origin'
### NOTE: this should be a new, clean repo.
###    Rename your existing 'Ecdat' so you don't overwrite it
git remote add origin https://github.com/sbgraves237/Ecdat
### push to your GitHub repo
git push -u origin master

Then you need to run similar commands for Ecfun.

Best,
Josh

> >
> >        Thanks,
> >        Spencer
> >
> >
> > On 2019-06-29 14:09, Henrik Bengtsson wrote:
> > > On Sat, Jun 29, 2019 at 9:43 AM Spencer Graves
> > > <spencer.graves at prodsyse.com> wrote:
> > >> Hi, Ott et al.:
> > >>
> > >>
> > >>         What's the best way to get "Travis CI" to build and test the two
> > >> packages, Ecdat and Ecfun, that have long been combined in the Ecdat
> > >> project?
> > >>
> > >>
> > >>         Following Ott's advice and studying studying Wickham's "R
> > >> Packages" (http://r-pkgs.had.co.nz/), I was able to configure RStudio so
> > >> it would sync using git with "GitHub.com/sbgraves237/Ecdat".  However,
> > >> when I tried to configure "Travis CI", it said, "No DESCRIPTION file
> > >> found, user must supply their own install and script steps".
> > >>
> > >>
> > >>         Earlier in this thread, I think someone suggested I make the
> > >> Ecdat and Ecfun packages separate projects on GitHub (though I can't
> > >> find that suggestion now).  This would not be an issue if it were all
> > >> local without version control.  With RStudio managing my interface with
> > >> GitHub, it now seems quite tricky.
> > > I'm 99.999% confident that your life will be much much easier if you
> > > keep one R package per repository.  If you don't, you'll probably be
> > > very lonely when it comes to tools etc.  There are built-in 'git'
> > > commands, but also git utility tools, for extracting a subset of
> > > folders/files from git repository into new git repositories.  You'll
> > > still preserve the commit history.  I would deal with this in the
> > > terminal, using the 'git' client and possible some extraction tool.
> > >
> > > Also, while you spend time on this, have a look at the commit
> > > authorship that I mentioned previously.  It's nice to have that in
> > > place later.
> > >
> > > After you got the above in place, then .travis.yml and appveyor.yml is
> > > pretty straightforward (might even be a copy'n'paste).
> > >
> > > Finally, I saw you put your credentials in the URL when you cloned.  I
> > > don't think that's safe, your GitHub credentials will be stored in the
> > > ./.git/config file.  Instead, just clone with:
> > >
> > > git clone https://github.com/sbgraves237/Ecdat.git
> > >
> > > You can then configure git to cache your HTTPS credentials for a
> > > certain time, e.g. 120 minutes, so you don't have to enter them each
> > > time you pull/push.  See https://git-scm.com/docs/git-credential-cache
> > > for details.  That's what I tell new-comers to Git(Hub|Lab|...) to
> > > use.  Personally, I add my public SSH key to GitHub and then clone
> > > with the ssh protocol:
> > >
> > > git clone git at github.com:sbgraves237/Ecdat.git
> > >
> > > That way my I never have to worry entering my credentials.
> > >
> > > /Henrik
> > >
> > >>
> > >>         Suggestions?
> > >>         Thanks again to all who have offered suggestions so far.  This
> > >> migration from R-Forge to GitHub seems complete except for the automatic
> > >> tests provided via "Travis CI".
> > >>
> > >>
> > >>         Spencer
> > >>
> > >>
> > >> On 2019-06-28 22:25, Ott Toomet wrote:
> > >>> Apparently your username/password are wrong.  Can you clone/push from
> > >>> other repos?
> > >>>
> > >>> You do not need authorization when cloning a public repo, so even
> > >>> incorrect credentials may work (haven't tested this though).  But for
> > >>> push you have to have that in order.
> > >>>
> > >>> I suggest you create ssh keys, upload those to GH, and use ssh
> > >>> authorization instead of https.
> > >>>
> > >>> Cheers,
> > >>> Ott
> > >>>
> > >>> On Fri, Jun 28, 2019 at 8:18 PM Spencer Graves
> > >>> <spencer.graves at prodsyse.com <mailto:spencer.graves at prodsyse.com>> wrote:
> > >>>
> > >>>      Thanks to Duncan, Henrik and Henrik, Brian, and G?bor:
> > >>>
> > >>>
> > >>>             I created a local copy of the new GitHub version using the
> > >>>      following:
> > >>>
> > >>>      git clone
> > >>>      https://sbgraves237:mypassword at github.com/sbgraves237/Ecdat.git
> > >>>
> > >>>
> > >>>
> > >>>             That worked in the sense that I got a local copy. However,
> > >>>      after
> > >>>      I rolled the version number and did "git commit" on the DESCRIPTION
> > >>>      files, my "git push" command generated the following:
> > >>>
> > >>>
> > >>>      remote: Invalid username or password.
> > >>>      fatal: Authentication failed for
> > >>>      'https://sbgraves237:mypassword at github.com/sbgraves237/Ecdat.git/'
> > >>>
> > >>>
> > >>>             What am I missing?  [Note:  I used my actual GitHub
> > >>>      password in
> > >>>      place of "mypassword" here, and this "Authentication failed" message
> > >>>      reported the GitHub password I used here.]
> > >>>
> > >>>
> > >>>             Thanks,
> > >>>             Spencer
> > >>>
> > >>>
> > >>>      p.s.  I'm doing this under macOS Mojave 10.14.5.  Also,  I added
> > >>>      ".onAttach" functions to the R-Forge versions as Brian G. Peterson
> > >>>      suggested.  That seemed to work fine.
> > >>>
> > >>>
> > >>>      On 2019-06-28 07:13, Duncan Murdoch wrote:
> > >>>      > On 28/06/2019 6:26 a.m., G?bor Cs?rdi wrote:
> > >>>      >
> > >>>      >> Instead, you can do as Duncan suggested, and put a README in your
> > >>>      >> R-Forge
> > >>>      >> repository, that points to *your* GitHub repositor(y/ies). Then the
> > >>>      >> https://github.com/rforge/ecdat read only mirror will pick this up
> > >>>      >> and will
> > >>>      >> point there as well.
> > >>>      >
> > >>>      > Just for the record:  that was Henrik Singmann's suggestion, I just
> > >>>      > agreed with it.
> > >>>      >
> > >>>      > Duncan Murdoch
> > >>>      >
> > >>>
> > >>>
> > >>>              [[alternative HTML version deleted]]
> > >>>
> > >>>      ______________________________________________
> > >>>      R-devel at r-project.org <mailto:R-devel at r-project.org> mailing list
> > >>>      https://stat.ethz.ch/mailman/listinfo/r-devel
> > >>>
> > >>
> > >>          [[alternative HTML version deleted]]
> > >>
> > >> ______________________________________________
> > >> R-devel at r-project.org mailing list
> > >> https://stat.ethz.ch/mailman/listinfo/r-devel
> >
> > ______________________________________________
> > R-devel at r-project.org mailing list
> > https://stat.ethz.ch/mailman/listinfo/r-devel
>
>
>
> --
> Joshua Ulrich  |  about.me/joshuaulrich
> FOSS Trading  |  www.fosstrading.com



-- 
Joshua Ulrich  |  about.me/joshuaulrich
FOSS Trading  |  www.fosstrading.com

-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: ecdat_ecfun_migration.txt
URL: <https://stat.ethz.ch/pipermail/r-devel/attachments/20190630/702d1c4d/attachment.txt>

