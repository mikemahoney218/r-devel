From h.wickham at gmail.com  Thu May  1 00:33:04 2014
From: h.wickham at gmail.com (Hadley Wickham)
Date: Wed, 30 Apr 2014 17:33:04 -0500
Subject: [Rd] "Name partially matched in data frame"
In-Reply-To: <53614FC0.30408@gmail.com>
References: <3781BDEC-E7D2-482A-A7A7-63B61B021754@plessthan.com>
	<53614FC0.30408@gmail.com>
Message-ID: <CABdHhvHNdy-XJWFWWr6YWN9smEZpJvq3nwcPH=qC5cSnWvN0Hg@mail.gmail.com>

>> I realize that the new message is only a warning but it is a minor
>> nuisance.  Would it be possible to add an
>>         option(partialMatch=TRUE)       ## default is FALSE
>> or something similar to suppress that behavior?  That should keep both
>> camps happy.
>
>
> I'd be much happier with a general mechanism to suppress particular
> warnings.  Then you could choose to suppress this one.
>
> We might be able to do that with options("warning.expression"), but I don't
> see how...

One approach would be to take advantage of the fact that warnings
conditions are S3 objects and can have a class hierarchy.

Hadley

-- 
http://had.co.nz/


From hpages at fhcrc.org  Thu May  1 00:34:24 2014
From: hpages at fhcrc.org (=?windows-1252?Q?Herv=E9_Pag=E8s?=)
Date: Wed, 30 Apr 2014 15:34:24 -0700
Subject: [Rd] "Name partially matched in data frame"
In-Reply-To: <53614FC0.30408@gmail.com>
References: <3781BDEC-E7D2-482A-A7A7-63B61B021754@plessthan.com>
	<53614FC0.30408@gmail.com>
Message-ID: <53617A70.80308@fhcrc.org>

Hi,

Would be good to have the man page updated about this. It still
says:

  'x$name' is equivalent to 'x[["name", exact=FALSE]]'

which doesn't seem to be completely true anymore (the former emits
a warning in case of partial matching, not the latter).

It looks like for a data.frame, ?x$name? is now equivalent to
'x[["name", exact=NA]]':

   > data.frame(aa=1:3)$a
   [1] 1 2 3
   Warning message:
   In `$.data.frame`(data.frame(aa = 1:3), a) :
     Name partially matched in data frame

   > data.frame(aa=1:3)[["a", exact=NA]]
   [1] 1 2 3
   Warning message:
   In .subset2(x, i, exact = exact) : partial match of 'a' to 'aa'

except that, instead of just calling 'x[["name", exact=NA]]' internally,
the former comes up with its own (and less informative) error message.

Cheers,
H.

 > sessionInfo()
R version 3.1.0 (2014-04-10)
Platform: x86_64-unknown-linux-gnu (64-bit)

locale:
  [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C
  [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8
  [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8
  [7] LC_PAPER=en_US.UTF-8       LC_NAME=C
  [9] LC_ADDRESS=C               LC_TELEPHONE=C
[11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C

attached base packages:
[1] stats     graphics  grDevices utils     datasets  methods   base


On 04/30/2014 12:32 PM, Duncan Murdoch wrote:
> On 30/04/2014 3:03 PM, Fisher Dennis wrote:
>> R 3.1.0
>> OS X
>>
>> Colleagues,
>>
>> I recently updated to 3.1.0 and I have encountered
>>     Warning messages: ...  Name partially matched in data frame
>> when I do something like:
>>     DATAFRAME$colname
>> where colname is actually something longer than that (but unambiguous).
>>
>> I have much appreciated the partial matching capabilities because it
>> fits with my workflow.  I often receive updated data months after the
>> initial code is written.  In order to keep track of what I did in the
>> past, I provide lengthy (unambiguous) names for columns, then
>> abbreviate the names as I call them.  This behavior has been termed
>> ?lazy? in various correspondence on this mailing list but it works for
>> me and probably works for others.
>>
>> I realize that the new message is only a warning but it is a minor
>> nuisance.  Would it be possible to add an
>>     option(partialMatch=TRUE)    ## default is FALSE
>> or something similar to suppress that behavior?  That should keep both
>> camps happy.
>
> I'd be much happier with a general mechanism to suppress particular
> warnings.  Then you could choose to suppress this one.
>
> We might be able to do that with options("warning.expression"), but I
> don't see how...
>
> Duncan Murdohc
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel

-- 
Herv? Pag?s

Program in Computational Biology
Division of Public Health Sciences
Fred Hutchinson Cancer Research Center
1100 Fairview Ave. N, M1-B514
P.O. Box 19024
Seattle, WA 98109-1024

E-mail: hpages at fhcrc.org
Phone:  (206) 667-5791
Fax:    (206) 667-1319


From hpages at fhcrc.org  Thu May  1 00:43:58 2014
From: hpages at fhcrc.org (=?windows-1252?Q?Herv=E9_Pag=E8s?=)
Date: Wed, 30 Apr 2014 15:43:58 -0700
Subject: [Rd] "Name partially matched in data frame"
In-Reply-To: <53617A70.80308@fhcrc.org>
References: <3781BDEC-E7D2-482A-A7A7-63B61B021754@plessthan.com>	<53614FC0.30408@gmail.com>
	<53617A70.80308@fhcrc.org>
Message-ID: <53617CAE.2070005@fhcrc.org>

Also the real agenda behind this warning is not clear. Looks like
just a normal warning, providing some potentially useful/important
information to the user.

However, in the NEWS file, this entry is in the DEPRECATED AND DEFUNCT
section:

       \item Partial matching when using the \code{$} operator \emph{on
         data frames} now throws a warning and may become defunct in the
       future. If partial matching is intended, replace \code{foo$bar}
       by \code{foo[["bar", exact = FALSE]]}.

Even though it's not deprecated yet...

H.

On 04/30/2014 03:34 PM, Herv? Pag?s wrote:
> Hi,
>
> Would be good to have the man page updated about this. It still
> says:
>
>   'x$name' is equivalent to 'x[["name", exact=FALSE]]'
>
> which doesn't seem to be completely true anymore (the former emits
> a warning in case of partial matching, not the latter).
>
> It looks like for a data.frame, ?x$name? is now equivalent to
> 'x[["name", exact=NA]]':
>
>    > data.frame(aa=1:3)$a
>    [1] 1 2 3
>    Warning message:
>    In `$.data.frame`(data.frame(aa = 1:3), a) :
>      Name partially matched in data frame
>
>    > data.frame(aa=1:3)[["a", exact=NA]]
>    [1] 1 2 3
>    Warning message:
>    In .subset2(x, i, exact = exact) : partial match of 'a' to 'aa'
>
> except that, instead of just calling 'x[["name", exact=NA]]' internally,
> the former comes up with its own (and less informative) error message.
>
> Cheers,
> H.
>
>  > sessionInfo()
> R version 3.1.0 (2014-04-10)
> Platform: x86_64-unknown-linux-gnu (64-bit)
>
> locale:
>   [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C
>   [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8
>   [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8
>   [7] LC_PAPER=en_US.UTF-8       LC_NAME=C
>   [9] LC_ADDRESS=C               LC_TELEPHONE=C
> [11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C
>
> attached base packages:
> [1] stats     graphics  grDevices utils     datasets  methods   base
>
>
> On 04/30/2014 12:32 PM, Duncan Murdoch wrote:
>> On 30/04/2014 3:03 PM, Fisher Dennis wrote:
>>> R 3.1.0
>>> OS X
>>>
>>> Colleagues,
>>>
>>> I recently updated to 3.1.0 and I have encountered
>>>     Warning messages: ...  Name partially matched in data frame
>>> when I do something like:
>>>     DATAFRAME$colname
>>> where colname is actually something longer than that (but unambiguous).
>>>
>>> I have much appreciated the partial matching capabilities because it
>>> fits with my workflow.  I often receive updated data months after the
>>> initial code is written.  In order to keep track of what I did in the
>>> past, I provide lengthy (unambiguous) names for columns, then
>>> abbreviate the names as I call them.  This behavior has been termed
>>> ?lazy? in various correspondence on this mailing list but it works for
>>> me and probably works for others.
>>>
>>> I realize that the new message is only a warning but it is a minor
>>> nuisance.  Would it be possible to add an
>>>     option(partialMatch=TRUE)    ## default is FALSE
>>> or something similar to suppress that behavior?  That should keep both
>>> camps happy.
>>
>> I'd be much happier with a general mechanism to suppress particular
>> warnings.  Then you could choose to suppress this one.
>>
>> We might be able to do that with options("warning.expression"), but I
>> don't see how...
>>
>> Duncan Murdohc
>>
>> ______________________________________________
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel
>

-- 
Herv? Pag?s

Program in Computational Biology
Division of Public Health Sciences
Fred Hutchinson Cancer Research Center
1100 Fairview Ave. N, M1-B514
P.O. Box 19024
Seattle, WA 98109-1024

E-mail: hpages at fhcrc.org
Phone:  (206) 667-5791
Fax:    (206) 667-1319


From mike1947 at gmail.com  Thu May  1 20:58:58 2014
From: mike1947 at gmail.com (Michael Cohen)
Date: Thu, 1 May 2014 14:58:58 -0400
Subject: [Rd] Request to Replace Recordplot ,, replayplot
Message-ID: <CAD8yWB8RxLmQRhHejh1wMcTpdLDYT4EC+tSC6k+Yy2pMrK4XaA@mail.gmail.com>

An embedded and charset-unspecified text was scrubbed...
Name: not available
URL: <https://stat.ethz.ch/pipermail/r-devel/attachments/20140501/b036c4b5/attachment.pl>

From jeroen.ooms at stat.ucla.edu  Thu May  1 21:57:12 2014
From: jeroen.ooms at stat.ucla.edu (Jeroen Ooms)
Date: Thu, 1 May 2014 12:57:12 -0700
Subject: [Rd] Request to Replace Recordplot ,, replayplot
In-Reply-To: <CAD8yWB8RxLmQRhHejh1wMcTpdLDYT4EC+tSC6k+Yy2pMrK4XaA@mail.gmail.com>
References: <CAD8yWB8RxLmQRhHejh1wMcTpdLDYT4EC+tSC6k+Yy2pMrK4XaA@mail.gmail.com>
Message-ID: <CABFfbXuoO6G0cR7kx4NAPWAiXBCZXye7Cnz-4MMYBL7AENZBkw@mail.gmail.com>

Hi Michael,

It is not needed to post this two days in a row on the same mailing
list. Also if you search the archives, you find several previous
discussions on this topic that might be helpful to develop a more
informed opinion on the topic.

In short: the problem is well known. Several people have argued for
the benefits of supporting (serializable) plot objects similar to
matlab figs, however apparently this is not trivial to implement. As
with most software, the challenging aspect is to maintain backward
compatibility so that it doesn't break everything that currently
relies on it.

Perhaps if you study the source code of the R graphics device to gain
better understanding of the problem, you can develop a proposal or
implement a proof of concept of how you think this could be realized.
That might provide a more constructive basis for discussion.




On Thu, May 1, 2014 at 11:58 AM, Michael Cohen <mike1947 at gmail.com> wrote:
>
> Record plot which stores a plot to an internal R data structure and Replay
> Plot which
> replays the plot enables one to keep plots around and use them accross
> sessions at least until version 3.  If you cannot restore old plots and
> treat them as data and save accross sessions, there is little reason for
> recordPlot.  Either R needs to dispense with internal formats entirelly, a
> bad move in my opinion or revise the structure so that it can be read from
> a file and then replayed and augmented.  This internal facility, in some
> ways equivalent to the matlab fig is good to have around.  It would not be
> needed if one of the data formats already stored i.e. pdf ... etc. could be
> read in and used then as internal plot.  Your thoughts
>             --mike
>
> --
> Michael Cohen
> Work: 808 Commonwealth Avenue, Actuarial Sciences, Boston Mass
> Home: 25 Stearns Road #3 Brookline, MA
>  Ph:  1-857-389-3432(c) 1-617-758-5509(w) 617-734-8828(h) Fax: 617-353-7755
>
>         [[alternative HTML version deleted]]
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From maechler at stat.math.ethz.ch  Thu May  1 22:20:56 2014
From: maechler at stat.math.ethz.ch (Martin Maechler)
Date: Thu, 1 May 2014 22:20:56 +0200
Subject: [Rd] Quantile issue
In-Reply-To: <3dfcdc$gjrdrk@ironport9.mayo.edu>
References: <3dfcdc$gjrdrk@ironport9.mayo.edu>
Message-ID: <21346.44200.315704.656293@stat.math.ethz.ch>

>>>>> Therneau, Terry M , Ph D <therneau at mayo.edu>
>>>>>     on Wed, 30 Apr 2014 12:00:33 -0500 writes:

    > This is likely yet another instance of round off error,
    > but it caught me by surprise.  tmt% R --vanilla (headers
    > skipped, version 3.0.2 on Linux)

    >> load('qtest.rda') length(temp)
    > [1] 3622
    >> max(temp) >= quantile(temp, .98)
    >    98% FALSE

    > I can send the file to anyone who would like to understand
    > this more deeply.  The top 3% of the vector is a single
    > repeated value.

Hmm... this may be the same as PR#15746 :

   https://bugs.r-project.org/bugzilla3/show_bug.cgi?id=15746

on which I commented that it was an example of  FAQ 7.31 :

  > Martin Maechler 2014-04-10 07:10:41 UTC

  > What really happens is simply

  > > x0 <- 0.000384478262997113
  > > h <- (1:9)/10
  > > diff(range((1-h)*x0 + h*x0))
  > [1] 1.084202e-19
  > > 

  > and that of course *is* just  R FAQ 7.31

  > I'm not sure this is something we want to amend;  we *could*
  > ensure

  > 	   min(x) <= quantile(x, *) <= max(x)

  > with a bit of extra code that makes *all* calls of quantile
  > slower than
  > now... just for the sake of this one very very rare exception ?

  > Alternatively we just document it .. 
  > Maybe this needs public discussion on R-devel 

and so I did bring it to R-devel.
If look at the fuller report, you also see that I claim that
this seems to happen only for very rare numbers...,
I had a loop running, searching for such numbers as the above x0
and it did not find one in many hours...,
OTOH, you now found a second example (of the same phenomenon I think).

So, yes, please, send me the qtest.rda...
or to all of us a dput(.) of the top 5% of the data which may
suffice for a reproducible example.

Also, it seems that for these rare examples we may need to rewrite
the code of quantile.default() ... making it less nice, less
transparent, not something I think we should commit lightly.

Martin


    > Terry Therneau

    > ______________________________________________
    > R-devel at r-project.org mailing list
    > https://stat.ethz.ch/mailman/listinfo/r-devel


From hb at biostat.ucsf.edu  Thu May  1 22:39:30 2014
From: hb at biostat.ucsf.edu (Henrik Bengtsson)
Date: Thu, 1 May 2014 13:39:30 -0700
Subject: [Rd] How to test if an object/argument is "parse tree" - without
 evaluating it?
Message-ID: <CAFDcVCRpqqPkhFhaNpqe3ye-jo-8sWOODShKHneonTSB7m5Uvg@mail.gmail.com>

This may have been asked before, but is there an elegant way to check
whether an variable/argument passed to a function is a "parse tree"
for an (unevaluated) expression or not, *without* evaluating it if
not?

Currently, I do various rather ad hoc eval()+substitute() tricks for
this that most likely only work under certain circumstances. Ideally,
I'm looking for a isParseTree() function such that I can call:

expr0 <- foo({ x <- 1 })
expr1 <- foo(expr0)
stopifnot(identical(expr1, expr0))

where foo() is:

foo <- function(expr) {
  if (!isParseTree(expr))
    expr <- substitute(expr)
  expr
}

I also want to be able to do:

expr2 <- foo(foo(foo(foo(expr0))))
stopifnot(identical(expr2, expr0))

and calling foo() from within other functions that may use the same
"tricks".  The alternative is of course to do:

foo <- function(expr, substitute=TRUE) {
  if (substitute) expr <- substitute(expr)
  expr
}

but it would be neat to do this without passing an extra argument.  If
this is not possible to implement in plain R, can this be done
internally inspecting SEXP:s and so on?  Even better would be if
substitute() could do this for me, e.g.

expr <- substitute(expr, unlessAlreadyDone=TRUE)

Any suggestions?

Thanks,

Henrik


From murdoch.duncan at gmail.com  Thu May  1 22:54:22 2014
From: murdoch.duncan at gmail.com (Duncan Murdoch)
Date: Thu, 01 May 2014 16:54:22 -0400
Subject: [Rd] How to test if an object/argument is "parse tree" -
 without evaluating it?
In-Reply-To: <CAFDcVCRpqqPkhFhaNpqe3ye-jo-8sWOODShKHneonTSB7m5Uvg@mail.gmail.com>
References: <CAFDcVCRpqqPkhFhaNpqe3ye-jo-8sWOODShKHneonTSB7m5Uvg@mail.gmail.com>
Message-ID: <5362B47E.8010801@gmail.com>

On 01/05/2014, 4:39 PM, Henrik Bengtsson wrote:
> This may have been asked before, but is there an elegant way to check
> whether an variable/argument passed to a function is a "parse tree"
> for an (unevaluated) expression or not, *without* evaluating it if
> not?

"Parse tree" isn't R terminology.  Could you give an example of one call 
that passes a parse tree, and one that doesn't?

Duncan Murdoch

>
> Currently, I do various rather ad hoc eval()+substitute() tricks for
> this that most likely only work under certain circumstances. Ideally,
> I'm looking for a isParseTree() function such that I can call:
>
> expr0 <- foo({ x <- 1 })
> expr1 <- foo(expr0)
> stopifnot(identical(expr1, expr0))
>
> where foo() is:
>
> foo <- function(expr) {
>    if (!isParseTree(expr))
>      expr <- substitute(expr)
>    expr
> }
>
> I also want to be able to do:
>
> expr2 <- foo(foo(foo(foo(expr0))))
> stopifnot(identical(expr2, expr0))
>
> and calling foo() from within other functions that may use the same
> "tricks".  The alternative is of course to do:
>
> foo <- function(expr, substitute=TRUE) {
>    if (substitute) expr <- substitute(expr)
>    expr
> }
>
> but it would be neat to do this without passing an extra argument.  If
> this is not possible to implement in plain R, can this be done
> internally inspecting SEXP:s and so on?  Even better would be if
> substitute() could do this for me, e.g.
>
> expr <- substitute(expr, unlessAlreadyDone=TRUE)
>
> Any suggestions?
>
> Thanks,
>
> Henrik
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>


From maechler at stat.math.ethz.ch  Thu May  1 22:55:01 2014
From: maechler at stat.math.ethz.ch (Martin Maechler)
Date: Thu, 1 May 2014 22:55:01 +0200
Subject: [Rd] Quantile issue
In-Reply-To: <3dfcdc$gjrdrk@ironport9.mayo.edu>
References: <3dfcdc$gjrdrk@ironport9.mayo.edu>
Message-ID: <21346.46245.568551.947529@stat.math.ethz.ch>

[this was meant as "reply to all" to R-devel :]

>>>>> Therneau, Terry M , Ph D <therneau at mayo.edu>
>>>>>     on Wed, 30 Apr 2014 12:00:33 -0500 writes:

    > This is likely yet another instance of round off error,
    > but it caught me by surprise.  tmt% R --vanilla (headers
    > skipped, version 3.0.2 on Linux)

    >> load('qtest.rda') length(temp)
    > [1] 3622
    >> max(temp) >= quantile(temp, .98)
    >    98% FALSE

    > I can send the file to anyone who would like to understand
    > this more deeply.  The top 3% of the vector is a single
    > repeated value.

Hmm... this may be the same as PR#15746 :

   https://bugs.r-project.org/bugzilla3/show_bug.cgi?id=15746

on which I commented that it was an example of  FAQ 7.31 :

  > Martin Maechler 2014-04-10 07:10:41 UTC

  > What really happens is simply

  > > x0 <- 0.000384478262997113
  > > h <- (1:9)/10
  > > diff(range((1-h)*x0 + h*x0))
  > [1] 1.084202e-19
  > > 

  > and that of course *is* just  R FAQ 7.31

  > I'm not sure this is something we want to amend;  we *could*
  > ensure

  > 	   min(x) <= quantile(x, *) <= max(x)

  > with a bit of extra code that makes *all* calls of quantile
  > slower than
  > now... just for the sake of this one very very rare exception ?

  > Alternatively we just document it .. 
  > Maybe this needs public discussion on R-devel 

and so I did bring it to R-devel.
If look at the fuller report, you also see that I claim that
this seems to happen only for very rare numbers...,
I had a loop running, searching for such numbers as the above x0
and it did not find one in many hours...,
OTOH, you now found a second example (of the same phenomenon I think).

So, yes, please, send me the qtest.rda...
or to all of us a dput(.) of the top 5% of the data which may
suffice for a reproducible example.

Also, it seems that for these rare examples we may need to rewrite
the code of quantile.default() ... making it less nice, less
transparent, not something I think we should commit lightly.

Martin


    > Terry Therneau

    > ______________________________________________
    > R-devel at r-project.org mailing list
    > https://stat.ethz.ch/mailman/listinfo/r-devel


From hb at biostat.ucsf.edu  Thu May  1 23:03:06 2014
From: hb at biostat.ucsf.edu (Henrik Bengtsson)
Date: Thu, 1 May 2014 14:03:06 -0700
Subject: [Rd] Request to Replace Recordplot ,, replayplot
In-Reply-To: <CAD8yWB8RxLmQRhHejh1wMcTpdLDYT4EC+tSC6k+Yy2pMrK4XaA@mail.gmail.com>
References: <CAD8yWB8RxLmQRhHejh1wMcTpdLDYT4EC+tSC6k+Yy2pMrK4XaA@mail.gmail.com>
Message-ID: <CAFDcVCRPQ6_14pCQ_T3OEHS74TRDwDDpu3XCwmVts0pn00ry9Q@mail.gmail.com>

Hi,

no need to repost and start yet another thread on the same topic as
you posted yesterday (R-devel thread ''ReplayPlot, limited to single
session for RecordPlot()", 2014-04-30).  It just makes it hard to keep
a constructive conversation in one place and it clutters up the
archives.

Replaying plots within the current session is still useful. I'm sure
others would love to be able to replay saved R plots across sessions.
However, there was (most likely) a very good reason for not using it
across session, which is why R added the assertion that it's not done
- it's to avoid harm/misuse.

If you search the R-devel archives [http://www.rseek.org/], you'll
find some discussion on this topic, e.g. R-devel threads
"inconsistency/bug in recordPlot/replayPlot", 2014-09-23
[https://stat.ethz.ch/pipermail/r-devel/2013-September/067471.html].
You'll find that Paul Murrell and others have though about this a lot.

Hopefully, this gives you enough to research to appreciate the problem.

/Henrik

On Thu, May 1, 2014 at 11:58 AM, Michael Cohen <mike1947 at gmail.com> wrote:
> Record plot which stores a plot to an internal R data structure and Replay
> Plot which
> replays the plot enables one to keep plots around and use them accross
> sessions at least until version 3.  If you cannot restore old plots and
> treat them as data and save accross sessions, there is little reason for
> recordPlot.  Either R needs to dispense with internal formats entirelly, a
> bad move in my opinion or revise the structure so that it can be read from
> a file and then replayed and augmented.  This internal facility, in some
> ways equivalent to the matlab fig is good to have around.  It would not be
> needed if one of the data formats already stored i.e. pdf ... etc. could be
> read in and used then as internal plot.  Your thoughts
>             --mike
>
> --
> Michael Cohen
> Work: 808 Commonwealth Avenue, Actuarial Sciences, Boston Mass
> Home: 25 Stearns Road #3 Brookline, MA
>  Ph:  1-857-389-3432(c) 1-617-758-5509(w) 617-734-8828(h) Fax: 617-353-7755
>
>         [[alternative HTML version deleted]]
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From kevinushey at gmail.com  Thu May  1 23:08:57 2014
From: kevinushey at gmail.com (Kevin Ushey)
Date: Thu, 1 May 2014 14:08:57 -0700
Subject: [Rd] How to test if an object/argument is "parse tree" -
 without evaluating it?
In-Reply-To: <5362B47E.8010801@gmail.com>
References: <CAFDcVCRpqqPkhFhaNpqe3ye-jo-8sWOODShKHneonTSB7m5Uvg@mail.gmail.com>
	<5362B47E.8010801@gmail.com>
Message-ID: <CAJXgQP0Ze2sAMbNRtVKYBNSBQmN4cXZMPPPnUOnnyvtBRnSH+A@mail.gmail.com>

Henrik,

If I understand correctly, you want something along the lines of
(following your example):

    foo <- function(expr) {
      if (!is.language(expr)) substitute(expr)
      else expr
    }

    ## first example
    expr0 <- foo({ x <- 1 })
    expr1 <- foo(expr0)
    stopifnot(identical(expr1, expr0))

    ## second
    expr2 <- foo(foo(foo(foo(expr0))))
    stopifnot(identical(expr2, expr0))

Hadley's guide on NSE + language elements in R
(http://adv-r.had.co.nz/Computing-on-the-language.html,
http://adv-r.had.co.nz/Expressions.html) may be helpful here.

Cheers,
Kevin

On Thu, May 1, 2014 at 1:54 PM, Duncan Murdoch <murdoch.duncan at gmail.com> wrote:
> On 01/05/2014, 4:39 PM, Henrik Bengtsson wrote:
>>
>> This may have been asked before, but is there an elegant way to check
>> whether an variable/argument passed to a function is a "parse tree"
>> for an (unevaluated) expression or not, *without* evaluating it if
>> not?
>
>
> "Parse tree" isn't R terminology.  Could you give an example of one call
> that passes a parse tree, and one that doesn't?
>
> Duncan Murdoch
>
>
>>
>> Currently, I do various rather ad hoc eval()+substitute() tricks for
>> this that most likely only work under certain circumstances. Ideally,
>> I'm looking for a isParseTree() function such that I can call:
>>
>> expr0 <- foo({ x <- 1 })
>> expr1 <- foo(expr0)
>> stopifnot(identical(expr1, expr0))
>>
>> where foo() is:
>>
>> foo <- function(expr) {
>>    if (!isParseTree(expr))
>>      expr <- substitute(expr)
>>    expr
>> }
>>
>> I also want to be able to do:
>>
>> expr2 <- foo(foo(foo(foo(expr0))))
>> stopifnot(identical(expr2, expr0))
>>
>> and calling foo() from within other functions that may use the same
>> "tricks".  The alternative is of course to do:
>>
>> foo <- function(expr, substitute=TRUE) {
>>    if (substitute) expr <- substitute(expr)
>>    expr
>> }
>>
>> but it would be neat to do this without passing an extra argument.  If
>> this is not possible to implement in plain R, can this be done
>> internally inspecting SEXP:s and so on?  Even better would be if
>> substitute() could do this for me, e.g.
>>
>> expr <- substitute(expr, unlessAlreadyDone=TRUE)
>>
>> Any suggestions?
>>
>> Thanks,
>>
>> Henrik
>>
>> ______________________________________________
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From wdunlap at tibco.com  Thu May  1 23:13:53 2014
From: wdunlap at tibco.com (William Dunlap)
Date: Thu, 1 May 2014 14:13:53 -0700
Subject: [Rd] How to test if an object/argument is "parse tree" -
 without evaluating it?
In-Reply-To: <CAFDcVCRpqqPkhFhaNpqe3ye-jo-8sWOODShKHneonTSB7m5Uvg@mail.gmail.com>
References: <CAFDcVCRpqqPkhFhaNpqe3ye-jo-8sWOODShKHneonTSB7m5Uvg@mail.gmail.com>
Message-ID: <CAF8bMcZU+9hab-TPHPYC_mweNvBOyitR26uxf5gso79oBV6z=A@mail.gmail.com>

> This may have been asked before, but is there an elegant way to check
> whether an variable/argument passed to a function is a "parse tree"
> for an (unevaluated) expression or not, *without* evaluating it if
> not?

I doubt it.

Some packages say that if the argument is a formula then its right
hand side will be used, unevaluated.  (You could issue a warning if
the formula had a left side.)  This offloads the logic to the ~ or
formula function.  It also has the advantage that environment(formula)
tells you where the symbols in the expression should be looked up.

Bill Dunlap
TIBCO Software
wdunlap tibco.com


On Thu, May 1, 2014 at 1:39 PM, Henrik Bengtsson <hb at biostat.ucsf.edu> wrote:
> This may have been asked before, but is there an elegant way to check
> whether an variable/argument passed to a function is a "parse tree"
> for an (unevaluated) expression or not, *without* evaluating it if
> not?
>
> Currently, I do various rather ad hoc eval()+substitute() tricks for
> this that most likely only work under certain circumstances. Ideally,
> I'm looking for a isParseTree() function such that I can call:
>
> expr0 <- foo({ x <- 1 })
> expr1 <- foo(expr0)
> stopifnot(identical(expr1, expr0))
>
> where foo() is:
>
> foo <- function(expr) {
>   if (!isParseTree(expr))
>     expr <- substitute(expr)
>   expr
> }
>
> I also want to be able to do:
>
> expr2 <- foo(foo(foo(foo(expr0))))
> stopifnot(identical(expr2, expr0))
>
> and calling foo() from within other functions that may use the same
> "tricks".  The alternative is of course to do:
>
> foo <- function(expr, substitute=TRUE) {
>   if (substitute) expr <- substitute(expr)
>   expr
> }
>
> but it would be neat to do this without passing an extra argument.  If
> this is not possible to implement in plain R, can this be done
> internally inspecting SEXP:s and so on?  Even better would be if
> substitute() could do this for me, e.g.
>
> expr <- substitute(expr, unlessAlreadyDone=TRUE)
>
> Any suggestions?
>
> Thanks,
>
> Henrik
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From h.wickham at gmail.com  Thu May  1 23:39:43 2014
From: h.wickham at gmail.com (Hadley Wickham)
Date: Thu, 1 May 2014 16:39:43 -0500
Subject: [Rd] How to test if an object/argument is "parse tree" -
 without evaluating it?
In-Reply-To: <CAJXgQP0Ze2sAMbNRtVKYBNSBQmN4cXZMPPPnUOnnyvtBRnSH+A@mail.gmail.com>
References: <CAFDcVCRpqqPkhFhaNpqe3ye-jo-8sWOODShKHneonTSB7m5Uvg@mail.gmail.com>
	<5362B47E.8010801@gmail.com>
	<CAJXgQP0Ze2sAMbNRtVKYBNSBQmN4cXZMPPPnUOnnyvtBRnSH+A@mail.gmail.com>
Message-ID: <CABdHhvFsgFDm45-uYWtYAg_rS4XGekQMdrUgWJs_K7CO+AC7Kw@mail.gmail.com>

On Thu, May 1, 2014 at 4:08 PM, Kevin Ushey <kevinushey at gmail.com> wrote:
> Henrik,
>
> If I understand correctly, you want something along the lines of
> (following your example):
>
>     foo <- function(expr) {
>       if (!is.language(expr)) substitute(expr)
>       else expr
>     }
>
>     ## first example
>     expr0 <- foo({ x <- 1 })
>     expr1 <- foo(expr0)
>     stopifnot(identical(expr1, expr0))
>
>     ## second
>     expr2 <- foo(foo(foo(foo(expr0))))
>     stopifnot(identical(expr2, expr0))

Unfortunately this won't work in general because is.language evaluates expr:

foo(stop("Uh oh!"))


In general, I'm with Bill Dunlap - you're better off being explicit
with formulas.

Hadley

-- 
http://had.co.nz/


From pdalgd at gmail.com  Thu May  1 23:44:27 2014
From: pdalgd at gmail.com (peter dalgaard)
Date: Thu, 1 May 2014 23:44:27 +0200
Subject: [Rd] How to test if an object/argument is "parse tree" -
	without evaluating it?
In-Reply-To: <CAFDcVCRpqqPkhFhaNpqe3ye-jo-8sWOODShKHneonTSB7m5Uvg@mail.gmail.com>
References: <CAFDcVCRpqqPkhFhaNpqe3ye-jo-8sWOODShKHneonTSB7m5Uvg@mail.gmail.com>
Message-ID: <7DB406E2-F74E-4BE2-9E4D-4EA82EC865FD@gmail.com>

My take would be that this is barking up the wrong tree. If you want to pass expressions in a way that a function can recognize, use formulas or expression objects. 

One problem is that pretty much every unevaluated argument is a "parse tree". The only other thing it can be is a constant object, but that is really just the simplest possible parse tree.  

In what situation exactly were you expecting isParseTree to return FALSE?

-pd


On 01 May 2014, at 22:39 , Henrik Bengtsson <hb at biostat.ucsf.edu> wrote:

> This may have been asked before, but is there an elegant way to check
> whether an variable/argument passed to a function is a "parse tree"
> for an (unevaluated) expression or not, *without* evaluating it if
> not?
> 
> Currently, I do various rather ad hoc eval()+substitute() tricks for
> this that most likely only work under certain circumstances. Ideally,
> I'm looking for a isParseTree() function such that I can call:
> 
> expr0 <- foo({ x <- 1 })
> expr1 <- foo(expr0)
> stopifnot(identical(expr1, expr0))
> 
> where foo() is:
> 
> foo <- function(expr) {
> if (!isParseTree(expr))
>   expr <- substitute(expr)
> expr
> }
> 
> I also want to be able to do:
> 
> expr2 <- foo(foo(foo(foo(expr0))))
> stopifnot(identical(expr2, expr0))
> 
> and calling foo() from within other functions that may use the same
> "tricks".  The alternative is of course to do:
> 
> foo <- function(expr, substitute=TRUE) {
> if (substitute) expr <- substitute(expr)
> expr
> }
> 
> but it would be neat to do this without passing an extra argument.  If
> this is not possible to implement in plain R, can this be done
> internally inspecting SEXP:s and so on?  Even better would be if
> substitute() could do this for me, e.g.
> 
> expr <- substitute(expr, unlessAlreadyDone=TRUE)
> 
> Any suggestions?
> 
> Thanks,
> 
> Henrik
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel

-- 
Peter Dalgaard, Professor,
Center for Statistics, Copenhagen Business School
Solbjerg Plads 3, 2000 Frederiksberg, Denmark
Phone: (+45)38153501
Email: pd.mes at cbs.dk  Priv: PDalgd at gmail.com


From rh at knut-krueger.de  Fri May  2 09:55:48 2014
From: rh at knut-krueger.de (Knut Krueger)
Date: Fri, 02 May 2014 09:55:48 +0200
Subject: [Rd] Authors@R: and Author  field
Message-ID: <53634F84.7000207@knut-krueger.de>

An embedded and charset-unspecified text was scrubbed...
Name: not available
URL: <https://stat.ethz.ch/pipermail/r-devel/attachments/20140502/b7d73efb/attachment.pl>

From florian.burkart at gmail.com  Fri May  2 14:14:27 2014
From: florian.burkart at gmail.com (Florian Burkart)
Date: Fri, 2 May 2014 14:14:27 +0200
Subject: [Rd] Questions on extending Rcpp wrap and as with templates
Message-ID: <CAPSN_LURc4U=qPBEZ0otw=Gv-VG_WgPOdAeYtxGeLT2p=MZX=g@mail.gmail.com>

An embedded and charset-unspecified text was scrubbed...
Name: not available
URL: <https://stat.ethz.ch/pipermail/r-devel/attachments/20140502/9e0c8ca4/attachment.pl>

From edd at debian.org  Fri May  2 14:31:13 2014
From: edd at debian.org (Dirk Eddelbuettel)
Date: Fri, 2 May 2014 07:31:13 -0500
Subject: [Rd] Questions on extending Rcpp wrap and as with templates
In-Reply-To: <CAPSN_LURc4U=qPBEZ0otw=Gv-VG_WgPOdAeYtxGeLT2p=MZX=g@mail.gmail.com>
References: <CAPSN_LURc4U=qPBEZ0otw=Gv-VG_WgPOdAeYtxGeLT2p=MZX=g@mail.gmail.com>
Message-ID: <21347.36881.771938.687540@max.nulle.part>


On 2 May 2014 at 14:14, Florian Burkart wrote:
| Hi everyone,
| 
| I have been trying to extend Rcpp with my own wrap and as templates.

Good post, wrong list.  Can you please try again on rcpp-devel?  

You may need to subscribe first in order to post (ie pay the "trying to stop
spammers tax").

Dirk

| 
| Two issues:
| 
| 1) I need to explicitly call wrap. Is that expected?
| 
| So for example I wrote this specialization:
| 
| template<> SEXP Rcpp::wrap(std::vector<TimedOptDouble> const& entries) {
| std::vector<double> sec_times;
| std::vector<double> doubles;
| for(auto const& entry : entries)
| {
| sec_times.push_back(entry.GetTime().Seconds());
| TimedOptDouble::OptDouble opt_double(entry.GetOptDouble());
| if(opt_double)
| doubles.push_back(*opt_double);
| else
| doubles.push_back(R_NaReal);
| }
| return List::create(
| Named( "Time" ) = sec_times,
| Named( "Value" ) = doubles);
| }
| 
| First of all, this returns what I believe to be a Rcpp::List object, which
| seems to be converted implicitly to a SEXP. This is the typical behaviour I
| know.
| 
| Unfortunately, when making use of this template, it doesn't work
| implicitly, but I need to explicitly call it.
| 
| So for example
| 
| SEXP GetSunPositions(SEXP a) {
| std::vector<TimedOptDouble> sun_positions;
| ...
| return wrap(sun_positions);
| }
| 
| works, where as
| 
| return sun_positions;
| 
| as last line doesn't. Am I doing something wrong here? I did do the
| declaration before including <Rcpp.h>.
| 
| 2) How to make as work for own types in containers
| 
| The other way around, one can return a std::vector<double> implicitly, but
| how do I return std::vector<MyType>? I tried to define
| 
| template<> MyType as(SEXP);
| 
| But that didn't help, e.g. I had to write my own
| 
| template<> std::vector<MyType> as(SEXP);
| 
| Thanks for help
| Florian
| 
| 	[[alternative HTML version deleted]]
| 
| ______________________________________________
| R-devel at r-project.org mailing list
| https://stat.ethz.ch/mailman/listinfo/r-devel

-- 
Dirk Eddelbuettel | edd at debian.org | http://dirk.eddelbuettel.com


From hb at biostat.ucsf.edu  Fri May  2 18:54:33 2014
From: hb at biostat.ucsf.edu (Henrik Bengtsson)
Date: Fri, 2 May 2014 09:54:33 -0700
Subject: [Rd] How to test if an object/argument is "parse tree" -
 without evaluating it?
In-Reply-To: <7DB406E2-F74E-4BE2-9E4D-4EA82EC865FD@gmail.com>
References: <CAFDcVCRpqqPkhFhaNpqe3ye-jo-8sWOODShKHneonTSB7m5Uvg@mail.gmail.com>
	<7DB406E2-F74E-4BE2-9E4D-4EA82EC865FD@gmail.com>
Message-ID: <CAFDcVCQxhdQTxUt57Z09JtN-JvSDn2Vdk2O9rYk8gX25u64E4w@mail.gmail.com>

Thank you all for great feedback - very helpful.

They view was great half way up the tree, but I'll add this one to "It
may be possible, but don't do it. Rethink what you're doing".

Hadley touches on this in his write up
[http://adv-r.had.co.nz/Computing-on-the-language.html#calling-from-another-function].


On Thu, May 1, 2014 at 2:44 PM, peter dalgaard <pdalgd at gmail.com> wrote:
> My take would be that this is barking up the wrong tree. If you want to pass expressions in a way that a function can recognize, use formulas or expression objects.
>
> One problem is that pretty much every unevaluated argument is a "parse tree". The only other thing it can be is a constant object, but that is really just the simplest possible parse tree.
>
> In what situation exactly were you expecting isParseTree to return FALSE?

I guess this (and Duncan's) question is more of a rhetorical kind,
which is also what I hoped for, but specifically I wanted to test it
on the 'expr0' object as in my example.

Thanks,

Henrik

PS. Duncan, I was trying find a good name for it and got "parse tree"
from ?substitute.

>
> -pd
>
>
> On 01 May 2014, at 22:39 , Henrik Bengtsson <hb at biostat.ucsf.edu> wrote:
>
>> This may have been asked before, but is there an elegant way to check
>> whether an variable/argument passed to a function is a "parse tree"
>> for an (unevaluated) expression or not, *without* evaluating it if
>> not?
>>
>> Currently, I do various rather ad hoc eval()+substitute() tricks for
>> this that most likely only work under certain circumstances. Ideally,
>> I'm looking for a isParseTree() function such that I can call:
>>
>> expr0 <- foo({ x <- 1 })
>> expr1 <- foo(expr0)
>> stopifnot(identical(expr1, expr0))
>>
>> where foo() is:
>>
>> foo <- function(expr) {
>> if (!isParseTree(expr))
>>   expr <- substitute(expr)
>> expr
>> }
>>
>> I also want to be able to do:
>>
>> expr2 <- foo(foo(foo(foo(expr0))))
>> stopifnot(identical(expr2, expr0))
>>
>> and calling foo() from within other functions that may use the same
>> "tricks".  The alternative is of course to do:
>>
>> foo <- function(expr, substitute=TRUE) {
>> if (substitute) expr <- substitute(expr)
>> expr
>> }
>>
>> but it would be neat to do this without passing an extra argument.  If
>> this is not possible to implement in plain R, can this be done
>> internally inspecting SEXP:s and so on?  Even better would be if
>> substitute() could do this for me, e.g.
>>
>> expr <- substitute(expr, unlessAlreadyDone=TRUE)
>>
>> Any suggestions?
>>
>> Thanks,
>>
>> Henrik
>>
>> ______________________________________________
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel
>
> --
> Peter Dalgaard, Professor,
> Center for Statistics, Copenhagen Business School
> Solbjerg Plads 3, 2000 Frederiksberg, Denmark
> Phone: (+45)38153501
> Email: pd.mes at cbs.dk  Priv: PDalgd at gmail.com
>
>
>
>
>
>
>
>


From hb at biostat.ucsf.edu  Fri May  2 19:07:14 2014
From: hb at biostat.ucsf.edu (Henrik Bengtsson)
Date: Fri, 2 May 2014 10:07:14 -0700
Subject: [Rd] Authors@R: and Author field
In-Reply-To: <53634F84.7000207@knut-krueger.de>
References: <53634F84.7000207@knut-krueger.de>
Message-ID: <CAFDcVCSAc2f+YoOH7LQRMWU07H49opUZWfbDfeAmpxoMSQUfCA@mail.gmail.com>

On Fri, May 2, 2014 at 12:55 AM, Knut Krueger <rh at knut-krueger.de> wrote:
> Hi to all
>
>
> Authors at R: c(person("fooa","foob", role = c("aut","cre"),
>                       email = "fooa.foob at fooc.de"),
>          person("foo1","foo2", role = c("ctb"),
>                  email = "foo1.foo2 at foo3.de"))
> Author: fooa foob, with contributions from foo1 foo2
> using r CMD check --as-cran ..   (R 3.1 and Windows) I get an error
>
> Author field differs from that derived from Authors at R
>    Author:    'fooa foob, with contributions from foo1 foo2
>    Authors at R: 'fooa foob [aut, cre], foo1 foo2 [ctb]'
>
> as I can see it is the same as in
> http://cran.r-project.org/doc/manuals/R-exts.html#The-DESCRIPTION-file
>
> and additionally
>  > Both 'Author' and 'Maintainer' fields can be omitted if a suitable
> 'Authors at R' field is given.

Yes, that passage in WRE is confusing/misleading, because it will give
a NOTE with 'R CMD check --as-cran'
[https://bugs.r-project.org/bugzilla3/show_bug.cgi?id=15470].   In
order not to get that NOTE, you need to use:

Authors at R: c(person("fooa","foob", role = c("aut","cre"), email =
"fooa.foob at fooc.de"),
                     person("foo1","foo2", role = c("ctb"), email =
"foo1.foo2 at foo3.de"))
Author: fooa foob [aut, cre], foo1 foo2 [ctb]

The 'Author' field *must be the same* as the string generated by R
from 'Authors at R'.

>
> is not working if the Author field is empty  or missing it will give an
> error

Actually, you can drop the 'Author' field unless you need build your
package on legacy versions of R.  I think in R (>= 2.14.0), you can
use the 'Authors at R' field by itself.  Many package do that.

Hope this helps,

Henrik

>
> Kind regards Knut
>
>         [[alternative HTML version deleted]]
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From ligges at statistik.tu-dortmund.de  Fri May  2 20:41:21 2014
From: ligges at statistik.tu-dortmund.de (Uwe Ligges)
Date: Fri, 02 May 2014 20:41:21 +0200
Subject: [Rd] Authors@R: and Author field
In-Reply-To: <CAFDcVCSAc2f+YoOH7LQRMWU07H49opUZWfbDfeAmpxoMSQUfCA@mail.gmail.com>
References: <53634F84.7000207@knut-krueger.de>
	<CAFDcVCSAc2f+YoOH7LQRMWU07H49opUZWfbDfeAmpxoMSQUfCA@mail.gmail.com>
Message-ID: <5363E6D1.7080707@statistik.tu-dortmund.de>



On 02.05.2014 19:07, Henrik Bengtsson wrote:
> On Fri, May 2, 2014 at 12:55 AM, Knut Krueger <rh at knut-krueger.de> wrote:
>> Hi to all
>>
>>
>> Authors at R: c(person("fooa","foob", role = c("aut","cre"),
>>                        email = "fooa.foob at fooc.de"),
>>           person("foo1","foo2", role = c("ctb"),
>>                   email = "foo1.foo2 at foo3.de"))
>> Author: fooa foob, with contributions from foo1 foo2
>> using r CMD check --as-cran ..   (R 3.1 and Windows) I get an error
>>
>> Author field differs from that derived from Authors at R
>>     Author:    'fooa foob, with contributions from foo1 foo2
>>     Authors at R: 'fooa foob [aut, cre], foo1 foo2 [ctb]'
>>
>> as I can see it is the same as in
>> http://cran.r-project.org/doc/manuals/R-exts.html#The-DESCRIPTION-file
>>
>> and additionally
>>   > Both 'Author' and 'Maintainer' fields can be omitted if a suitable
>> 'Authors at R' field is given.
>
> Yes, that passage in WRE is confusing/misleading, because it will give
> a NOTE with 'R CMD check --as-cran'
> [https://bugs.r-project.org/bugzilla3/show_bug.cgi?id=15470].   In
> order not to get that NOTE, you need to use:
>
> Authors at R: c(person("fooa","foob", role = c("aut","cre"), email =
> "fooa.foob at fooc.de"),
>                       person("foo1","foo2", role = c("ctb"), email =
> "foo1.foo2 at foo3.de"))
> Author: fooa foob [aut, cre], foo1 foo2 [ctb]
>
> The 'Author' field *must be the same* as the string generated by R
> from 'Authors at R'.
>
>>
>> is not working if the Author field is empty  or missing it will give an
>> error
>
> Actually, you can drop the 'Author' field

.. which is generated from Authors at R by R CMD build automatically ...

Best,
Uwe Ligges


  unless you need build your
> package on legacy versions of R.  I think in R (>= 2.14.0), you can
> use the 'Authors at R' field by itself.  Many package do that.
>
> Hope this helps,
>
> Henrik
>
>>
>> Kind regards Knut
>>
>>          [[alternative HTML version deleted]]
>>
>> ______________________________________________
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>


From sannandi at umail.iu.edu  Sat May  3 01:49:55 2014
From: sannandi at umail.iu.edu (Sandip Nandi)
Date: Fri, 2 May 2014 16:49:55 -0700
Subject: [Rd] backtrace while trying to clear workspace
Message-ID: <CAGSjAUBdt4KEcBTxG5qAsQw8sdagA5hLKTF0sD4+ZA-hAqsg2g@mail.gmail.com>

An embedded and charset-unspecified text was scrubbed...
Name: not available
URL: <https://stat.ethz.ch/pipermail/r-devel/attachments/20140502/e0c2f656/attachment.pl>

From murdoch.duncan at gmail.com  Sat May  3 01:54:58 2014
From: murdoch.duncan at gmail.com (Duncan Murdoch)
Date: Fri, 02 May 2014 19:54:58 -0400
Subject: [Rd] backtrace while trying to clear workspace
In-Reply-To: <CAGSjAUBdt4KEcBTxG5qAsQw8sdagA5hLKTF0sD4+ZA-hAqsg2g@mail.gmail.com>
References: <CAGSjAUBdt4KEcBTxG5qAsQw8sdagA5hLKTF0sD4+ZA-hAqsg2g@mail.gmail.com>
Message-ID: <53643052.7000001@gmail.com>

On 02/05/2014, 7:49 PM, Sandip Nandi wrote:
> Hi ,
>
> I tried to do the following . Before I execute the R script , i tried to
> clear the work space using
> rm(list = ls(all = TRUE)); . I get the following back trace . Its a huge
> backtrace , attached a part of it . Can anyone help why I get this ?

Looks like something has a "finalizer", but it doesn't work.

To be more specific, I'd have to see it, i.e. you'd have to give us 
instructions to reproduce.

Duncan Murdoch

>
>
> #13 0x00002aaaaafd612f in Rf_eval (e=0x1448d68, rho=0x16c6780) at eval.c:399
> #14 0x00002aaaaafdabf6 in Rf_applyClosure (call=0x1447108, op=0x1448f60,
>      arglist=0x16c6860, rho=0x16c6a20, suppliedenv=0x53ddc8) at eval.c:861
> #15 0x00002aaaaafd621b in Rf_eval (e=0x1447108, rho=0x16c6a20) at eval.c:512
> ---Type <return> to continue, or q <return> to quit---
> #16 0x00002aaaaafd787f in Rf_DispatchOrEval (call=0x1447178, op=0x5154a0,
>      generic=0x2aaaab17b54b "$", args=0x16c6908, rho=0x16c6a20,
>      ans=0x7fffffffd2c0, dropmissing=0, argsevald=0) at eval.c:2311
> #17 0x00002aaaab095937 in do_subset3 (call=0x1447178, op=0x5154a0,
>      args=0x16c6908, env=0x16c6a20) at subset.c:1068
> #18 0x00002aaaaafcd946 in bcEval (body=<value optimized out>,
> rho=0x16c6a20,
>      useCache=2873058336) at eval.c:4482
> #19 0x00002aaaaafd612f in Rf_eval (e=0x14463d0, rho=0x16c6a20) at eval.c:399
> #20 0x00002aaaaafdabf6 in Rf_applyClosure (call=0x16c6c50, op=0x1446638,
>      arglist=0x16c6b70, rho=0x53dd90, suppliedenv=0x53ddc8) at eval.c:861
> #21 0x00002aaaaafd621b in Rf_eval (e=0x16c6c50, rho=0x53dd90) at eval.c:512
> #22 0x00002aaaaaf8738e in protectedEval (d=<value optimized out>)
>      at context.c:747
> #23 0x00002aaaaaf87cfe in R_ToplevelExec (fun=0x2aaaaaf87370
> <protectedEval>,
>      data=0x7fffffffde00) at context.c:702
> #24 0x00002aaaaaf87d89 in R_tryEval (e=<value optimized out>,
>      env=<value optimized out>, ErrorOccurred=0x61) at context.c:761
> #25 0x00002aaaaadeb109 in executeText (
>      prog=0x7fffffffe0a0 "*rm(list = ls(all = TRUE));*",
>
>
> Thanks
>
> 	[[alternative HTML version deleted]]
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>


From h.wickham at gmail.com  Sat May  3 18:39:44 2014
From: h.wickham at gmail.com (Hadley Wickham)
Date: Sat, 3 May 2014 11:39:44 -0500
Subject: [Rd] Historical NA question
Message-ID: <CABdHhvFt2n6=ORLBSTYxkA_G+t_d_H=0B1+vhhM_ZFL_Z-RT3g@mail.gmail.com>

Can anyone tell me what the significance of 1954 is in R's NA?

Thanks!

Hadley

-- 
http://had.co.nz/


From luke-tierney at uiowa.edu  Sat May  3 18:48:18 2014
From: luke-tierney at uiowa.edu (luke-tierney at uiowa.edu)
Date: Sat, 3 May 2014 11:48:18 -0500
Subject: [Rd] Historical NA question
In-Reply-To: <CABdHhvFt2n6=ORLBSTYxkA_G+t_d_H=0B1+vhhM_ZFL_Z-RT3g@mail.gmail.com>
References: <CABdHhvFt2n6=ORLBSTYxkA_G+t_d_H=0B1+vhhM_ZFL_Z-RT3g@mail.gmail.com>
Message-ID: <alpine.DEB.2.02.1405031148030.2430@luke-Latitude>

Hint: Ross will be 60 this year.

luke

On Sat, 3 May 2014, Hadley Wickham wrote:

> Can anyone tell me what the significance of 1954 is in R's NA?
>
> Thanks!
>
> Hadley
>
>

-- 
Luke Tierney
Chair, Statistics and Actuarial Science
Ralph E. Wareham Professor of Mathematical Sciences
University of Iowa                  Phone:             319-335-3386
Department of Statistics and        Fax:               319-335-3017
    Actuarial Science
241 Schaeffer Hall                  email:   luke-tierney at uiowa.edu
Iowa City, IA 52242                 WWW:  http://www.stat.uiowa.edu


From h.wickham at gmail.com  Sun May  4 15:00:54 2014
From: h.wickham at gmail.com (Hadley Wickham)
Date: Sun, 4 May 2014 08:00:54 -0500
Subject: [Rd] Historical NA question
In-Reply-To: <alpine.DEB.2.02.1405031148030.2430@luke-Latitude>
References: <CABdHhvFt2n6=ORLBSTYxkA_G+t_d_H=0B1+vhhM_ZFL_Z-RT3g@mail.gmail.com>
	<alpine.DEB.2.02.1405031148030.2430@luke-Latitude>
Message-ID: <CABdHhvHvPmSCq_fQcKpJC7GRoJMn384Lq=9Q==2T=0MbvGT5pw@mail.gmail.com>

Thanks Luke!
Hadley

On Sat, May 3, 2014 at 11:48 AM,  <luke-tierney at uiowa.edu> wrote:
> Hint: Ross will be 60 this year.
>
> luke
>
>
> On Sat, 3 May 2014, Hadley Wickham wrote:
>
>> Can anyone tell me what the significance of 1954 is in R's NA?
>>
>> Thanks!
>>
>> Hadley
>>
>>
>
> --
> Luke Tierney
> Chair, Statistics and Actuarial Science
> Ralph E. Wareham Professor of Mathematical Sciences
> University of Iowa                  Phone:             319-335-3386
> Department of Statistics and        Fax:               319-335-3017
>    Actuarial Science
> 241 Schaeffer Hall                  email:   luke-tierney at uiowa.edu
> Iowa City, IA 52242                 WWW:  http://www.stat.uiowa.edu



-- 
http://had.co.nz/


From spencer.graves at structuremonitoring.com  Sun May  4 16:48:21 2014
From: spencer.graves at structuremonitoring.com (Spencer Graves)
Date: Sun, 04 May 2014 07:48:21 -0700
Subject: [Rd] Historical NA question
In-Reply-To: <CABdHhvHvPmSCq_fQcKpJC7GRoJMn384Lq=9Q==2T=0MbvGT5pw@mail.gmail.com>
References: <CABdHhvFt2n6=ORLBSTYxkA_G+t_d_H=0B1+vhhM_ZFL_Z-RT3g@mail.gmail.com>	<alpine.DEB.2.02.1405031148030.2430@luke-Latitude>
	<CABdHhvHvPmSCq_fQcKpJC7GRoJMn384Lq=9Q==2T=0MbvGT5pw@mail.gmail.com>
Message-ID: <53665335.6030707@structuremonitoring.com>

A fortune?  Spencer


On 5/4/2014 6:00 AM, Hadley Wickham wrote:
> Thanks Luke!
> Hadley
>
> On Sat, May 3, 2014 at 11:48 AM,  <luke-tierney at uiowa.edu> wrote:
>> Hint: Ross will be 60 this year.
>>
>> luke
>>
>>
>> On Sat, 3 May 2014, Hadley Wickham wrote:
>>
>>> Can anyone tell me what the significance of 1954 is in R's NA?
>>>
>>> Thanks!
>>>
>>> Hadley
>>>
>>>
>> --
>> Luke Tierney
>> Chair, Statistics and Actuarial Science
>> Ralph E. Wareham Professor of Mathematical Sciences
>> University of Iowa                  Phone:             319-335-3386
>> Department of Statistics and        Fax:               319-335-3017
>>     Actuarial Science
>> 241 Schaeffer Hall                  email:   luke-tierney at uiowa.edu
>> Iowa City, IA 52242                 WWW:  http://www.stat.uiowa.edu
>>


From friendly at yorku.ca  Mon May  5 03:35:02 2014
From: friendly at yorku.ca (Michael Friendly)
Date: Sun, 04 May 2014 21:35:02 -0400
Subject: [Rd] Historical NA question
In-Reply-To: <CABdHhvFt2n6=ORLBSTYxkA_G+t_d_H=0B1+vhhM_ZFL_Z-RT3g@mail.gmail.com>
References: <CABdHhvFt2n6=ORLBSTYxkA_G+t_d_H=0B1+vhhM_ZFL_Z-RT3g@mail.gmail.com>
Message-ID: <5366EAC6.9030109@yorku.ca>

On 03/05/2014 12:39 PM, Hadley Wickham wrote:
> Can anyone tell me what the significance of 1954 is in R's NA?
>

Just ask R:

 > 2*(1-pnorm(1954))
[1] 0
 > 2*(1-pnorm(1954)) %in% NA
[1] 0
 >


From hpages at fhcrc.org  Tue May  6 01:05:40 2014
From: hpages at fhcrc.org (=?ISO-8859-1?Q?Herv=E9_Pag=E8s?=)
Date: Mon, 05 May 2014 16:05:40 -0700
Subject: [Rd] Historical NA question
In-Reply-To: <5366EAC6.9030109@yorku.ca>
References: <CABdHhvFt2n6=ORLBSTYxkA_G+t_d_H=0B1+vhhM_ZFL_Z-RT3g@mail.gmail.com>
	<5366EAC6.9030109@yorku.ca>
Message-ID: <53681944.9020606@fhcrc.org>

On 05/04/2014 06:35 PM, Michael Friendly wrote:
> On 03/05/2014 12:39 PM, Hadley Wickham wrote:
>> Can anyone tell me what the significance of 1954 is in R's NA?
>>
>
> Just ask R:
>
>  > 2*(1-pnorm(1954))
> [1] 0
>  > 2*(1-pnorm(1954)) %in% NA
> [1] 0

Not sure that would make the "joke" better, but you need parentheses 
around the product because it seems %in% has precedence over * (the
fact that you got a number instead of a logical gives you a hint):

   > (2*(1-pnorm(1954))) %in% NA
   [1] FALSE

BTW, that %in% has precedence over arithmetic operations is surprising,
error-prone, and doesn't cover any reasonable use case (who needs to
multiply the logical vector returned by %in% by some value?) but that's
another story:

   > 3 + 2 %in% 1:6
   [1] 4
   > 3 - 2 %in% 1:6
   [1] 2
   > 3 * 2 %in% 1:6
   [1] 3
   > 3 / 2 %in% 1:6
   [1] 3

Weird!

H.

>  >
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel

-- 
Herv? Pag?s

Program in Computational Biology
Division of Public Health Sciences
Fred Hutchinson Cancer Research Center
1100 Fairview Ave. N, M1-B514
P.O. Box 19024
Seattle, WA 98109-1024

E-mail: hpages at fhcrc.org
Phone:  (206) 667-5791
Fax:    (206) 667-1319


From pdalgd at gmail.com  Tue May  6 07:35:01 2014
From: pdalgd at gmail.com (peter dalgaard)
Date: Tue, 6 May 2014 07:35:01 +0200
Subject: [Rd] Historical NA question
In-Reply-To: <53681944.9020606@fhcrc.org>
References: <CABdHhvFt2n6=ORLBSTYxkA_G+t_d_H=0B1+vhhM_ZFL_Z-RT3g@mail.gmail.com>
	<5366EAC6.9030109@yorku.ca> <53681944.9020606@fhcrc.org>
Message-ID: <4BBA43DC-39CB-4CCC-9172-E2318459FD77@gmail.com>


On 06 May 2014, at 01:05 , Herv? Pag?s <hpages at fhcrc.org> wrote:

> 
> BTW, that %in% has precedence over arithmetic operations is surprising,
> error-prone, and doesn't cover any reasonable use case (who needs to
> multiply the logical vector returned by %in% by some value?) but that's
> another story:

The point here is that the %foo% operators all have the _same_ precedence. In principle, they can be user-coded, and there is no way to express what precedence is desirable. It may turn out slightly weird for %in%, but think of what would happen if %*% had lower precedence than addition. 

-- 
Peter Dalgaard, Professor,
Center for Statistics, Copenhagen Business School
Solbjerg Plads 3, 2000 Frederiksberg, Denmark
Phone: (+45)38153501
Email: pd.mes at cbs.dk  Priv: PDalgd at gmail.com


From wdunlap at tibco.com  Tue May  6 17:54:17 2014
From: wdunlap at tibco.com (William Dunlap)
Date: Tue, 6 May 2014 08:54:17 -0700
Subject: [Rd] Historical NA question
In-Reply-To: <4BBA43DC-39CB-4CCC-9172-E2318459FD77@gmail.com>
References: <CABdHhvFt2n6=ORLBSTYxkA_G+t_d_H=0B1+vhhM_ZFL_Z-RT3g@mail.gmail.com>
	<5366EAC6.9030109@yorku.ca> <53681944.9020606@fhcrc.org>
	<4BBA43DC-39CB-4CCC-9172-E2318459FD77@gmail.com>
Message-ID: <CAF8bMcbt5j70eLj_ijMTvX5wFmXW_ZCrMTYzZO6MovASADnhuA@mail.gmail.com>

You can also use is.element(els,set) instead of the equivalent
els%in%set and leave your precedence problems behind.
Bill Dunlap
TIBCO Software
wdunlap tibco.com


On Mon, May 5, 2014 at 10:35 PM, peter dalgaard <pdalgd at gmail.com> wrote:
>
> On 06 May 2014, at 01:05 , Herv? Pag?s <hpages at fhcrc.org> wrote:
>
>>
>> BTW, that %in% has precedence over arithmetic operations is surprising,
>> error-prone, and doesn't cover any reasonable use case (who needs to
>> multiply the logical vector returned by %in% by some value?) but that's
>> another story:
>
> The point here is that the %foo% operators all have the _same_ precedence. In principle, they can be user-coded, and there is no way to express what precedence is desirable. It may turn out slightly weird for %in%, but think of what would happen if %*% had lower precedence than addition.
>
> --
> Peter Dalgaard, Professor,
> Center for Statistics, Copenhagen Business School
> Solbjerg Plads 3, 2000 Frederiksberg, Denmark
> Phone: (+45)38153501
> Email: pd.mes at cbs.dk  Priv: PDalgd at gmail.com
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From h.wickham at gmail.com  Tue May  6 18:20:07 2014
From: h.wickham at gmail.com (Hadley Wickham)
Date: Tue, 6 May 2014 11:20:07 -0500
Subject: [Rd] Historical NA question
In-Reply-To: <4BBA43DC-39CB-4CCC-9172-E2318459FD77@gmail.com>
References: <CABdHhvFt2n6=ORLBSTYxkA_G+t_d_H=0B1+vhhM_ZFL_Z-RT3g@mail.gmail.com>
	<5366EAC6.9030109@yorku.ca> <53681944.9020606@fhcrc.org>
	<4BBA43DC-39CB-4CCC-9172-E2318459FD77@gmail.com>
Message-ID: <CABdHhvG+20Cx1ZKqNrK7HHMkiusChJFLiSW+Y_tFWrZMPr8umA@mail.gmail.com>

>> BTW, that %in% has precedence over arithmetic operations is surprising,
>> error-prone, and doesn't cover any reasonable use case (who needs to
>> multiply the logical vector returned by %in% by some value?) but that's
>> another story:
>
> The point here is that the %foo% operators all have the _same_ precedence. In principle, they can be user-coded, and there is no way to express what precedence is desirable. It may turn out slightly weird for %in%, but think of what would happen if %*% had lower precedence than addition.

This is getting way off topic, but I find the precedence of ! to be
more surprising:

> !F + !F
[1] FALSE

i.e. that's interpreted as !(F + !F) not (!F) + (!F).

Hadley

-- 
http://had.co.nz/


From pdalgd at gmail.com  Tue May  6 19:01:36 2014
From: pdalgd at gmail.com (peter dalgaard)
Date: Tue, 6 May 2014 19:01:36 +0200
Subject: [Rd] Historical NA question
In-Reply-To: <CABdHhvG+20Cx1ZKqNrK7HHMkiusChJFLiSW+Y_tFWrZMPr8umA@mail.gmail.com>
References: <CABdHhvFt2n6=ORLBSTYxkA_G+t_d_H=0B1+vhhM_ZFL_Z-RT3g@mail.gmail.com>
	<5366EAC6.9030109@yorku.ca> <53681944.9020606@fhcrc.org>
	<4BBA43DC-39CB-4CCC-9172-E2318459FD77@gmail.com>
	<CABdHhvG+20Cx1ZKqNrK7HHMkiusChJFLiSW+Y_tFWrZMPr8umA@mail.gmail.com>
Message-ID: <A6D731E4-840D-461A-B6CE-D44730ED46BB@gmail.com>


On 06 May 2014, at 18:20 , Hadley Wickham <h.wickham at gmail.com> wrote:

>>> BTW, that %in% has precedence over arithmetic operations is surprising,
>>> error-prone, and doesn't cover any reasonable use case (who needs to
>>> multiply the logical vector returned by %in% by some value?) but that's
>>> another story:
>> 
>> The point here is that the %foo% operators all have the _same_ precedence. In principle, they can be user-coded, and there is no way to express what precedence is desirable. It may turn out slightly weird for %in%, but think of what would happen if %*% had lower precedence than addition.
> 
> This is getting way off topic, but I find the precedence of ! to be
> more surprising:
> 
>> !F + !F
> [1] FALSE
> 
> i.e. that's interpreted as !(F + !F) not (!F) + (!F).

Yes, UNOT has lower precedence than arithmetic and comparison ops in gram.y. So 

> !2<3
[1] FALSE
> !2+2==4
[1] FALSE

I suspect that that is as old as original sin (i.e., inherited from S). Anyone have the Blue Book to hand to verify? It's easy enough to change, but the sky would likely fall down on our heads if we tried...

Also surprising:

> quote(!2+!2)
!2 + (!2)

where it is somewhat perplexing what the parentheses are supposed to be good for.  


> 
> Hadley
> 
> -- 
> http://had.co.nz/

-- 
Peter Dalgaard, Professor
Center for Statistics, Copenhagen Business School
Solbjerg Plads 3, 2000 Frederiksberg, Denmark
Phone: (+45)38153501
Email: pd.mes at cbs.dk  Priv: PDalgd at gmail.com


From murdoch.duncan at gmail.com  Tue May  6 19:14:55 2014
From: murdoch.duncan at gmail.com (Duncan Murdoch)
Date: Tue, 06 May 2014 13:14:55 -0400
Subject: [Rd] Historical NA question
In-Reply-To: <A6D731E4-840D-461A-B6CE-D44730ED46BB@gmail.com>
References: <CABdHhvFt2n6=ORLBSTYxkA_G+t_d_H=0B1+vhhM_ZFL_Z-RT3g@mail.gmail.com>	<5366EAC6.9030109@yorku.ca>
	<53681944.9020606@fhcrc.org>	<4BBA43DC-39CB-4CCC-9172-E2318459FD77@gmail.com>	<CABdHhvG+20Cx1ZKqNrK7HHMkiusChJFLiSW+Y_tFWrZMPr8umA@mail.gmail.com>
	<A6D731E4-840D-461A-B6CE-D44730ED46BB@gmail.com>
Message-ID: <5369188F.3090104@gmail.com>

On 06/05/2014 1:01 PM, peter dalgaard wrote:
> On 06 May 2014, at 18:20 , Hadley Wickham <h.wickham at gmail.com> wrote:
>
> >>> BTW, that %in% has precedence over arithmetic operations is surprising,
> >>> error-prone, and doesn't cover any reasonable use case (who needs to
> >>> multiply the logical vector returned by %in% by some value?) but that's
> >>> another story:
> >>
> >> The point here is that the %foo% operators all have the _same_ precedence. In principle, they can be user-coded, and there is no way to express what precedence is desirable. It may turn out slightly weird for %in%, but think of what would happen if %*% had lower precedence than addition.
> >
> > This is getting way off topic, but I find the precedence of ! to be
> > more surprising:
> >
> >> !F + !F
> > [1] FALSE
> >
> > i.e. that's interpreted as !(F + !F) not (!F) + (!F).
>
> Yes, UNOT has lower precedence than arithmetic and comparison ops in gram.y. So
>
> > !2<3
> [1] FALSE
> > !2+2==4
> [1] FALSE
>
> I suspect that that is as old as original sin (i.e., inherited from S). Anyone have the Blue Book to hand to verify? It's easy enough to change, but the sky would likely fall down on our heads if we tried...

These are the differences between what ?Syntax says and the blue book:

::, :::, @, unary +, ~, ->>, =, ? are not mentioned in the blue book.

& && | and || all have the same precedence in the blue book, but & and 
&& are higher precedence in R.

The other assignment operators are ordered as <<-, ->, (<-, _) in the 
blue book (where parens indicate equal precedence), but in R they are 
(->, ->>),  (<-, <<-), =.
>
> Also surprising:
>
> > quote(!2+!2)
> !2 + (!2)
>
> where it is somewhat perplexing what the parentheses are supposed to be good for.

That looks like a deparsing bug.

Duncan Murdoch


From tobias.verbeke at openanalytics.eu  Tue May  6 20:28:54 2014
From: tobias.verbeke at openanalytics.eu (Tobias Verbeke)
Date: Tue, 6 May 2014 20:28:54 +0200 (CEST)
Subject: [Rd] R crash using Sys.which on Windows
In-Reply-To: <213012131.42938.1399393900085.JavaMail.zimbra@openanalytics.eu>
Message-ID: <2090370034.43069.1399400934031.JavaMail.zimbra@openanalytics.eu>

Dear list, 

When installing the latest version of Rtools (3.1.0.1942) into a path that contains more than 96 characters on Windows 7 64-bit,
e.g. into

C:\TheLatestRtoolsInAPathWithMoreThanNinetySixCharactersWillCrashTheRSessionUponCallingTheSysWhichFunctionInRToGetTheGccPath

and assuming that the Rtools bin paths have been appropriately added to the PATH environment variable as in 

c:\TheLatestRtoolsInAPathWithMoreThanNinetySixCharactersWillCrashTheRSessionUponCallingTheSysWhichFunctionInRToGetTheGccPath\bin;c:\TheLatestRtoolsInAPathWithMoreThanNinetySixCharactersWillCrashTheRSessionUponCallingTheSysWhichFunctionInRToGetTheGccPath\gcc-4.6.3\bin

the following call from RGui 64-bit (version 3.1.0) reproducibly causes R to crash:

Sys.which("ls")

Sys.which seems to use an internal function on Windows. Is this a known issue? 

Please let me know if I can provide any more relevant information.

Best, 
Tobias


From wdunlap at tibco.com  Tue May  6 20:39:37 2014
From: wdunlap at tibco.com (William Dunlap)
Date: Tue, 6 May 2014 11:39:37 -0700
Subject: [Rd] Historical NA question
In-Reply-To: <A6D731E4-840D-461A-B6CE-D44730ED46BB@gmail.com>
References: <CABdHhvFt2n6=ORLBSTYxkA_G+t_d_H=0B1+vhhM_ZFL_Z-RT3g@mail.gmail.com>
	<5366EAC6.9030109@yorku.ca> <53681944.9020606@fhcrc.org>
	<4BBA43DC-39CB-4CCC-9172-E2318459FD77@gmail.com>
	<CABdHhvG+20Cx1ZKqNrK7HHMkiusChJFLiSW+Y_tFWrZMPr8umA@mail.gmail.com>
	<A6D731E4-840D-461A-B6CE-D44730ED46BB@gmail.com>
Message-ID: <CAF8bMcY6qaP=dvz3imur9807XoKT+r2A4=Bcq=8n6QnU=uHjXg@mail.gmail.com>

Here is source code for help(Syntax) from S+, which I think follows
closely the original S help file:
.Ix precedence
The following \f6infix\fP operators are recognized by the parser.
They are listed in decreasing precedence.
In the event of ties, evaluation is from left to right.
.sp
.in +.5i
.nf
.ta 1.5i,3.5iR
`$'     component selection     \fBHIGH\fP
`@'     slot selection
`[ [['  subscripts, elements
`^'     exponentiation
`-'     unary minus
`:'     sequence operator
`%'\f2anything\fP`%'    special operator
`*   /' multiply, divide
`+  - ?'        add, subtract, documentation
`<  >  <=  >='
`  ==  !='      comparison
`!'     not
`&   |  &&  ||' and, or
`\~'    formulas
`<<-'   permanent assignment to working data
`<-' `->' `='   assignment      \fBLOW\fP
.sp
.in -.5i
.fi

All logical operators have lower precedence than any comparison
operator and all comparison operators are lower than any arithmetic
operators.  The former means that '! a >= b' is parsed as !(a>=b) and
not the (!a)>=b that C would make it.  Perhaps the difference arose
because didn't have real boolean variables and S did.

(Also, contrary to the original assertion, '%anything%' is in the
middle of the arithmetic operators, above '*' and below ':'.)
Bill Dunlap
TIBCO Software
wdunlap tibco.com


On Tue, May 6, 2014 at 10:01 AM, peter dalgaard <pdalgd at gmail.com> wrote:
>
> On 06 May 2014, at 18:20 , Hadley Wickham <h.wickham at gmail.com> wrote:
>
>>>> BTW, that %in% has precedence over arithmetic operations is surprising,
>>>> error-prone, and doesn't cover any reasonable use case (who needs to
>>>> multiply the logical vector returned by %in% by some value?) but that's
>>>> another story:
>>>
>>> The point here is that the %foo% operators all have the _same_ precedence. In principle, they can be user-coded, and there is no way to express what precedence is desirable. It may turn out slightly weird for %in%, but think of what would happen if %*% had lower precedence than addition.
>>
>> This is getting way off topic, but I find the precedence of ! to be
>> more surprising:
>>
>>> !F + !F
>> [1] FALSE
>>
>> i.e. that's interpreted as !(F + !F) not (!F) + (!F).
>
> Yes, UNOT has lower precedence than arithmetic and comparison ops in gram.y. So
>
>> !2<3
> [1] FALSE
>> !2+2==4
> [1] FALSE
>
> I suspect that that is as old as original sin (i.e., inherited from S). Anyone have the Blue Book to hand to verify? It's easy enough to change, but the sky would likely fall down on our heads if we tried...
>
> Also surprising:
>
>> quote(!2+!2)
> !2 + (!2)
>
> where it is somewhat perplexing what the parentheses are supposed to be good for.
>
>
>>
>> Hadley
>>
>> --
>> http://had.co.nz/
>
> --
> Peter Dalgaard, Professor
> Center for Statistics, Copenhagen Business School
> Solbjerg Plads 3, 2000 Frederiksberg, Denmark
> Phone: (+45)38153501
> Email: pd.mes at cbs.dk  Priv: PDalgd at gmail.com
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From hpages at fhcrc.org  Tue May  6 21:23:05 2014
From: hpages at fhcrc.org (=?UTF-8?B?SGVydsOpIFBhZ8Oocw==?=)
Date: Tue, 06 May 2014 12:23:05 -0700
Subject: [Rd] Historical NA question
In-Reply-To: <CAF8bMcbt5j70eLj_ijMTvX5wFmXW_ZCrMTYzZO6MovASADnhuA@mail.gmail.com>
References: <CABdHhvFt2n6=ORLBSTYxkA_G+t_d_H=0B1+vhhM_ZFL_Z-RT3g@mail.gmail.com>
	<5366EAC6.9030109@yorku.ca> <53681944.9020606@fhcrc.org>
	<4BBA43DC-39CB-4CCC-9172-E2318459FD77@gmail.com>
	<CAF8bMcbt5j70eLj_ijMTvX5wFmXW_ZCrMTYzZO6MovASADnhuA@mail.gmail.com>
Message-ID: <53693699.9080502@fhcrc.org>

On 05/06/2014 08:54 AM, William Dunlap wrote:
> You can also use is.element(els,set) instead of the equivalent
> els%in%set

No they are not *equivalent*. Equivalent means you could substitute
one by the other in your code without changing its behavior.

H.

> and leave your precedence problems behind.
> Bill Dunlap
> TIBCO Software
> wdunlap tibco.com
>
>
> On Mon, May 5, 2014 at 10:35 PM, peter dalgaard <pdalgd at gmail.com> wrote:
>>
>> On 06 May 2014, at 01:05 , Herv? Pag?s <hpages at fhcrc.org> wrote:
>>
>>>
>>> BTW, that %in% has precedence over arithmetic operations is surprising,
>>> error-prone, and doesn't cover any reasonable use case (who needs to
>>> multiply the logical vector returned by %in% by some value?) but that's
>>> another story:
>>
>> The point here is that the %foo% operators all have the _same_ precedence. In principle, they can be user-coded, and there is no way to express what precedence is desirable. It may turn out slightly weird for %in%, but think of what would happen if %*% had lower precedence than addition.
>>
>> --
>> Peter Dalgaard, Professor,
>> Center for Statistics, Copenhagen Business School
>> Solbjerg Plads 3, 2000 Frederiksberg, Denmark
>> Phone: (+45)38153501
>> Email: pd.mes at cbs.dk  Priv: PDalgd at gmail.com
>>
>> ______________________________________________
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel

-- 
Herv? Pag?s

Program in Computational Biology
Division of Public Health Sciences
Fred Hutchinson Cancer Research Center
1100 Fairview Ave. N, M1-B514
P.O. Box 19024
Seattle, WA 98109-1024

E-mail: hpages at fhcrc.org
Phone:  (206) 667-5791
Fax:    (206) 667-1319


From wdunlap at tibco.com  Tue May  6 21:36:52 2014
From: wdunlap at tibco.com (William Dunlap)
Date: Tue, 6 May 2014 12:36:52 -0700
Subject: [Rd] Historical NA question
In-Reply-To: <53693699.9080502@fhcrc.org>
References: <CABdHhvFt2n6=ORLBSTYxkA_G+t_d_H=0B1+vhhM_ZFL_Z-RT3g@mail.gmail.com>
	<5366EAC6.9030109@yorku.ca> <53681944.9020606@fhcrc.org>
	<4BBA43DC-39CB-4CCC-9172-E2318459FD77@gmail.com>
	<CAF8bMcbt5j70eLj_ijMTvX5wFmXW_ZCrMTYzZO6MovASADnhuA@mail.gmail.com>
	<53693699.9080502@fhcrc.org>
Message-ID: <CAF8bMcaWp9Wa91uPncwR7EF+UdSkRVUNa1DnppkGPVwo-iV25Q@mail.gmail.com>

When does els%in%set give a different result than is.element(els,set)?
 I assumed they were copied form S+, where they are the same except
for argument names, but I may be wrong.
Bill Dunlap
TIBCO Software
wdunlap tibco.com


On Tue, May 6, 2014 at 12:23 PM, Herv? Pag?s <hpages at fhcrc.org> wrote:
> On 05/06/2014 08:54 AM, William Dunlap wrote:
>>
>> You can also use is.element(els,set) instead of the equivalent
>> els%in%set
>
>
> No they are not *equivalent*. Equivalent means you could substitute
> one by the other in your code without changing its behavior.
>
> H.
>
>> and leave your precedence problems behind.
>> Bill Dunlap
>> TIBCO Software
>> wdunlap tibco.com
>>
>>
>> On Mon, May 5, 2014 at 10:35 PM, peter dalgaard <pdalgd at gmail.com> wrote:
>>>
>>>
>>> On 06 May 2014, at 01:05 , Herv? Pag?s <hpages at fhcrc.org> wrote:
>>>
>>>>
>>>> BTW, that %in% has precedence over arithmetic operations is surprising,
>>>> error-prone, and doesn't cover any reasonable use case (who needs to
>>>> multiply the logical vector returned by %in% by some value?) but that's
>>>> another story:
>>>
>>>
>>> The point here is that the %foo% operators all have the _same_
>>> precedence. In principle, they can be user-coded, and there is no way to
>>> express what precedence is desirable. It may turn out slightly weird for
>>> %in%, but think of what would happen if %*% had lower precedence than
>>> addition.
>>>
>>> --
>>> Peter Dalgaard, Professor,
>>> Center for Statistics, Copenhagen Business School
>>> Solbjerg Plads 3, 2000 Frederiksberg, Denmark
>>> Phone: (+45)38153501
>>> Email: pd.mes at cbs.dk  Priv: PDalgd at gmail.com
>>>
>>> ______________________________________________
>>> R-devel at r-project.org mailing list
>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>
>
> --
> Herv? Pag?s
>
> Program in Computational Biology
> Division of Public Health Sciences
> Fred Hutchinson Cancer Research Center
> 1100 Fairview Ave. N, M1-B514
> P.O. Box 19024
> Seattle, WA 98109-1024
>
> E-mail: hpages at fhcrc.org
> Phone:  (206) 667-5791
> Fax:    (206) 667-1319


From hpages at fhcrc.org  Tue May  6 22:06:43 2014
From: hpages at fhcrc.org (=?UTF-8?B?SGVydsOpIFBhZ8Oocw==?=)
Date: Tue, 06 May 2014 13:06:43 -0700
Subject: [Rd] Historical NA question
In-Reply-To: <CAF8bMcaWp9Wa91uPncwR7EF+UdSkRVUNa1DnppkGPVwo-iV25Q@mail.gmail.com>
References: <CABdHhvFt2n6=ORLBSTYxkA_G+t_d_H=0B1+vhhM_ZFL_Z-RT3g@mail.gmail.com>
	<5366EAC6.9030109@yorku.ca> <53681944.9020606@fhcrc.org>
	<4BBA43DC-39CB-4CCC-9172-E2318459FD77@gmail.com>
	<CAF8bMcbt5j70eLj_ijMTvX5wFmXW_ZCrMTYzZO6MovASADnhuA@mail.gmail.com>
	<53693699.9080502@fhcrc.org>
	<CAF8bMcaWp9Wa91uPncwR7EF+UdSkRVUNa1DnppkGPVwo-iV25Q@mail.gmail.com>
Message-ID: <536940D3.7060008@fhcrc.org>

On 05/06/2014 12:36 PM, William Dunlap wrote:
> When does els%in%set give a different result than is.element(els,set)?
>   I assumed they were copied form S+, where they are the same except
> for argument names, but I may be wrong.

   > els <- 2:1
   > set <- 1:6
   > - els%in%set
   [1] FALSE FALSE
   > - is.element(els,set)
   [1] -1 -1

So following your advice doesn't really help me leave my precedence
problems behind.

H.

> Bill Dunlap
> TIBCO Software
> wdunlap tibco.com
>
>
> On Tue, May 6, 2014 at 12:23 PM, Herv? Pag?s <hpages at fhcrc.org> wrote:
>> On 05/06/2014 08:54 AM, William Dunlap wrote:
>>>
>>> You can also use is.element(els,set) instead of the equivalent
>>> els%in%set
>>
>>
>> No they are not *equivalent*. Equivalent means you could substitute
>> one by the other in your code without changing its behavior.
>>
>> H.
>>
>>> and leave your precedence problems behind.
>>> Bill Dunlap
>>> TIBCO Software
>>> wdunlap tibco.com
>>>
>>>
>>> On Mon, May 5, 2014 at 10:35 PM, peter dalgaard <pdalgd at gmail.com> wrote:
>>>>
>>>>
>>>> On 06 May 2014, at 01:05 , Herv? Pag?s <hpages at fhcrc.org> wrote:
>>>>
>>>>>
>>>>> BTW, that %in% has precedence over arithmetic operations is surprising,
>>>>> error-prone, and doesn't cover any reasonable use case (who needs to
>>>>> multiply the logical vector returned by %in% by some value?) but that's
>>>>> another story:
>>>>
>>>>
>>>> The point here is that the %foo% operators all have the _same_
>>>> precedence. In principle, they can be user-coded, and there is no way to
>>>> express what precedence is desirable. It may turn out slightly weird for
>>>> %in%, but think of what would happen if %*% had lower precedence than
>>>> addition.
>>>>
>>>> --
>>>> Peter Dalgaard, Professor,
>>>> Center for Statistics, Copenhagen Business School
>>>> Solbjerg Plads 3, 2000 Frederiksberg, Denmark
>>>> Phone: (+45)38153501
>>>> Email: pd.mes at cbs.dk  Priv: PDalgd at gmail.com
>>>>
>>>> ______________________________________________
>>>> R-devel at r-project.org mailing list
>>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>
>>
>> --
>> Herv? Pag?s
>>
>> Program in Computational Biology
>> Division of Public Health Sciences
>> Fred Hutchinson Cancer Research Center
>> 1100 Fairview Ave. N, M1-B514
>> P.O. Box 19024
>> Seattle, WA 98109-1024
>>
>> E-mail: hpages at fhcrc.org
>> Phone:  (206) 667-5791
>> Fax:    (206) 667-1319

-- 
Herv? Pag?s

Program in Computational Biology
Division of Public Health Sciences
Fred Hutchinson Cancer Research Center
1100 Fairview Ave. N, M1-B514
P.O. Box 19024
Seattle, WA 98109-1024

E-mail: hpages at fhcrc.org
Phone:  (206) 667-5791
Fax:    (206) 667-1319


From wdunlap at tibco.com  Tue May  6 22:15:09 2014
From: wdunlap at tibco.com (William Dunlap)
Date: Tue, 6 May 2014 13:15:09 -0700
Subject: [Rd] Historical NA question
In-Reply-To: <536940D3.7060008@fhcrc.org>
References: <CABdHhvFt2n6=ORLBSTYxkA_G+t_d_H=0B1+vhhM_ZFL_Z-RT3g@mail.gmail.com>
	<5366EAC6.9030109@yorku.ca> <53681944.9020606@fhcrc.org>
	<4BBA43DC-39CB-4CCC-9172-E2318459FD77@gmail.com>
	<CAF8bMcbt5j70eLj_ijMTvX5wFmXW_ZCrMTYzZO6MovASADnhuA@mail.gmail.com>
	<53693699.9080502@fhcrc.org>
	<CAF8bMcaWp9Wa91uPncwR7EF+UdSkRVUNa1DnppkGPVwo-iV25Q@mail.gmail.com>
	<536940D3.7060008@fhcrc.org>
Message-ID: <CAF8bMcYFP-hPPLG-z26+_=1K5T0EzE0-4_aCbq7jhpHLc7bqCw@mail.gmail.com>

In your example els%in%set gave the same result as
is.element(els,set), but because of precedence issues putting a unary
minus in front caused them to be given different inputs - one got -els
and the other got just els for the first argument.  To change one to
the other you have to edit the parsed expression, not the text.  If
you used is.element in the first place you would avoid precedence
issues.  (I avoid creating %xxx% functions  because the precedence is
not often what I want.)
Bill Dunlap
TIBCO Software
wdunlap tibco.com


On Tue, May 6, 2014 at 1:06 PM, Herv? Pag?s <hpages at fhcrc.org> wrote:
> On 05/06/2014 12:36 PM, William Dunlap wrote:
>>
>> When does els%in%set give a different result than is.element(els,set)?
>>   I assumed they were copied form S+, where they are the same except
>> for argument names, but I may be wrong.
>
>
>   > els <- 2:1
>   > set <- 1:6
>   > - els%in%set
>   [1] FALSE FALSE
>   > - is.element(els,set)
>   [1] -1 -1
>
> So following your advice doesn't really help me leave my precedence
> problems behind.
>
>
> H.
>
>> Bill Dunlap
>> TIBCO Software
>> wdunlap tibco.com
>>
>>
>> On Tue, May 6, 2014 at 12:23 PM, Herv? Pag?s <hpages at fhcrc.org> wrote:
>>>
>>> On 05/06/2014 08:54 AM, William Dunlap wrote:
>>>>
>>>>
>>>> You can also use is.element(els,set) instead of the equivalent
>>>> els%in%set
>>>
>>>
>>>
>>> No they are not *equivalent*. Equivalent means you could substitute
>>> one by the other in your code without changing its behavior.
>>>
>>> H.
>>>
>>>> and leave your precedence problems behind.
>>>> Bill Dunlap
>>>> TIBCO Software
>>>> wdunlap tibco.com
>>>>
>>>>
>>>> On Mon, May 5, 2014 at 10:35 PM, peter dalgaard <pdalgd at gmail.com>
>>>> wrote:
>>>>>
>>>>>
>>>>>
>>>>> On 06 May 2014, at 01:05 , Herv? Pag?s <hpages at fhcrc.org> wrote:
>>>>>
>>>>>>
>>>>>> BTW, that %in% has precedence over arithmetic operations is
>>>>>> surprising,
>>>>>> error-prone, and doesn't cover any reasonable use case (who needs to
>>>>>> multiply the logical vector returned by %in% by some value?) but
>>>>>> that's
>>>>>> another story:
>>>>>
>>>>>
>>>>>
>>>>> The point here is that the %foo% operators all have the _same_
>>>>> precedence. In principle, they can be user-coded, and there is no way
>>>>> to
>>>>> express what precedence is desirable. It may turn out slightly weird
>>>>> for
>>>>> %in%, but think of what would happen if %*% had lower precedence than
>>>>> addition.
>>>>>
>>>>> --
>>>>> Peter Dalgaard, Professor,
>>>>> Center for Statistics, Copenhagen Business School
>>>>> Solbjerg Plads 3, 2000 Frederiksberg, Denmark
>>>>> Phone: (+45)38153501
>>>>> Email: pd.mes at cbs.dk  Priv: PDalgd at gmail.com
>>>>>
>>>>> ______________________________________________
>>>>> R-devel at r-project.org mailing list
>>>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>>
>>>
>>>
>>> --
>>> Herv? Pag?s
>>>
>>> Program in Computational Biology
>>> Division of Public Health Sciences
>>> Fred Hutchinson Cancer Research Center
>>> 1100 Fairview Ave. N, M1-B514
>>> P.O. Box 19024
>>> Seattle, WA 98109-1024
>>>
>>> E-mail: hpages at fhcrc.org
>>> Phone:  (206) 667-5791
>>> Fax:    (206) 667-1319
>
>
> --
> Herv? Pag?s
>
> Program in Computational Biology
> Division of Public Health Sciences
> Fred Hutchinson Cancer Research Center
> 1100 Fairview Ave. N, M1-B514
> P.O. Box 19024
> Seattle, WA 98109-1024
>
> E-mail: hpages at fhcrc.org
> Phone:  (206) 667-5791
> Fax:    (206) 667-1319


From hpages at fhcrc.org  Tue May  6 22:28:59 2014
From: hpages at fhcrc.org (=?UTF-8?B?SGVydsOpIFBhZ8Oocw==?=)
Date: Tue, 06 May 2014 13:28:59 -0700
Subject: [Rd] Historical NA question
In-Reply-To: <CAF8bMcYFP-hPPLG-z26+_=1K5T0EzE0-4_aCbq7jhpHLc7bqCw@mail.gmail.com>
References: <CABdHhvFt2n6=ORLBSTYxkA_G+t_d_H=0B1+vhhM_ZFL_Z-RT3g@mail.gmail.com>
	<5366EAC6.9030109@yorku.ca> <53681944.9020606@fhcrc.org>
	<4BBA43DC-39CB-4CCC-9172-E2318459FD77@gmail.com>
	<CAF8bMcbt5j70eLj_ijMTvX5wFmXW_ZCrMTYzZO6MovASADnhuA@mail.gmail.com>
	<53693699.9080502@fhcrc.org>
	<CAF8bMcaWp9Wa91uPncwR7EF+UdSkRVUNa1DnppkGPVwo-iV25Q@mail.gmail.com>
	<536940D3.7060008@fhcrc.org>
	<CAF8bMcYFP-hPPLG-z26+_=1K5T0EzE0-4_aCbq7jhpHLc7bqCw@mail.gmail.com>
Message-ID: <5369460B.8000607@fhcrc.org>

On 05/06/2014 01:15 PM, William Dunlap wrote:
> In your example els%in%set gave the same result as
> is.element(els,set), but because of precedence issues putting a unary
> minus in front caused them to be given different inputs - one got -els
> and the other got just els for the first argument.

So you confirm that to use your solution (i.e. replace my use of
'els%in%set' with 'is.element(els,set)') I need to think about
precedence?

> To change one to
> the other you have to edit the parsed expression, not the text.  If
> you used is.element in the first place you would avoid precedence
> issues.

"If you ... in the first place". Ahhhh, but that's not what I did. So
that doesn't help me.

H.

>  (I avoid creating %xxx% functions  because the precedence is
> not often what I want.)
> Bill Dunlap
> TIBCO Software
> wdunlap tibco.com
>
>
> On Tue, May 6, 2014 at 1:06 PM, Herv? Pag?s <hpages at fhcrc.org> wrote:
>> On 05/06/2014 12:36 PM, William Dunlap wrote:
>>>
>>> When does els%in%set give a different result than is.element(els,set)?
>>>    I assumed they were copied form S+, where they are the same except
>>> for argument names, but I may be wrong.
>>
>>
>>    > els <- 2:1
>>    > set <- 1:6
>>    > - els%in%set
>>    [1] FALSE FALSE
>>    > - is.element(els,set)
>>    [1] -1 -1
>>
>> So following your advice doesn't really help me leave my precedence
>> problems behind.
>>
>>
>> H.
>>
>>> Bill Dunlap
>>> TIBCO Software
>>> wdunlap tibco.com
>>>
>>>
>>> On Tue, May 6, 2014 at 12:23 PM, Herv? Pag?s <hpages at fhcrc.org> wrote:
>>>>
>>>> On 05/06/2014 08:54 AM, William Dunlap wrote:
>>>>>
>>>>>
>>>>> You can also use is.element(els,set) instead of the equivalent
>>>>> els%in%set
>>>>
>>>>
>>>>
>>>> No they are not *equivalent*. Equivalent means you could substitute
>>>> one by the other in your code without changing its behavior.
>>>>
>>>> H.
>>>>
>>>>> and leave your precedence problems behind.
>>>>> Bill Dunlap
>>>>> TIBCO Software
>>>>> wdunlap tibco.com
>>>>>
>>>>>
>>>>> On Mon, May 5, 2014 at 10:35 PM, peter dalgaard <pdalgd at gmail.com>
>>>>> wrote:
>>>>>>
>>>>>>
>>>>>>
>>>>>> On 06 May 2014, at 01:05 , Herv? Pag?s <hpages at fhcrc.org> wrote:
>>>>>>
>>>>>>>
>>>>>>> BTW, that %in% has precedence over arithmetic operations is
>>>>>>> surprising,
>>>>>>> error-prone, and doesn't cover any reasonable use case (who needs to
>>>>>>> multiply the logical vector returned by %in% by some value?) but
>>>>>>> that's
>>>>>>> another story:
>>>>>>
>>>>>>
>>>>>>
>>>>>> The point here is that the %foo% operators all have the _same_
>>>>>> precedence. In principle, they can be user-coded, and there is no way
>>>>>> to
>>>>>> express what precedence is desirable. It may turn out slightly weird
>>>>>> for
>>>>>> %in%, but think of what would happen if %*% had lower precedence than
>>>>>> addition.
>>>>>>
>>>>>> --
>>>>>> Peter Dalgaard, Professor,
>>>>>> Center for Statistics, Copenhagen Business School
>>>>>> Solbjerg Plads 3, 2000 Frederiksberg, Denmark
>>>>>> Phone: (+45)38153501
>>>>>> Email: pd.mes at cbs.dk  Priv: PDalgd at gmail.com
>>>>>>
>>>>>> ______________________________________________
>>>>>> R-devel at r-project.org mailing list
>>>>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>>>
>>>>
>>>>
>>>> --
>>>> Herv? Pag?s
>>>>
>>>> Program in Computational Biology
>>>> Division of Public Health Sciences
>>>> Fred Hutchinson Cancer Research Center
>>>> 1100 Fairview Ave. N, M1-B514
>>>> P.O. Box 19024
>>>> Seattle, WA 98109-1024
>>>>
>>>> E-mail: hpages at fhcrc.org
>>>> Phone:  (206) 667-5791
>>>> Fax:    (206) 667-1319
>>
>>
>> --
>> Herv? Pag?s
>>
>> Program in Computational Biology
>> Division of Public Health Sciences
>> Fred Hutchinson Cancer Research Center
>> 1100 Fairview Ave. N, M1-B514
>> P.O. Box 19024
>> Seattle, WA 98109-1024
>>
>> E-mail: hpages at fhcrc.org
>> Phone:  (206) 667-5791
>> Fax:    (206) 667-1319

-- 
Herv? Pag?s

Program in Computational Biology
Division of Public Health Sciences
Fred Hutchinson Cancer Research Center
1100 Fairview Ave. N, M1-B514
P.O. Box 19024
Seattle, WA 98109-1024

E-mail: hpages at fhcrc.org
Phone:  (206) 667-5791
Fax:    (206) 667-1319


From dwinsemius at comcast.net  Tue May  6 22:31:17 2014
From: dwinsemius at comcast.net (David Winsemius)
Date: Tue, 6 May 2014 13:31:17 -0700
Subject: [Rd] Historical NA question
In-Reply-To: <536940D3.7060008@fhcrc.org>
References: <CABdHhvFt2n6=ORLBSTYxkA_G+t_d_H=0B1+vhhM_ZFL_Z-RT3g@mail.gmail.com>
	<5366EAC6.9030109@yorku.ca> <53681944.9020606@fhcrc.org>
	<4BBA43DC-39CB-4CCC-9172-E2318459FD77@gmail.com>
	<CAF8bMcbt5j70eLj_ijMTvX5wFmXW_ZCrMTYzZO6MovASADnhuA@mail.gmail.com>
	<53693699.9080502@fhcrc.org>
	<CAF8bMcaWp9Wa91uPncwR7EF+UdSkRVUNa1DnppkGPVwo-iV25Q@mail.gmail.com>
	<536940D3.7060008@fhcrc.org>
Message-ID: <C8962619-5A9C-40E5-BFD6-9FCFE13C96AC@comcast.net>


On May 6, 2014, at 1:06 PM, Herv? Pag?s wrote:

> On 05/06/2014 12:36 PM, William Dunlap wrote:
>> When does els%in%set give a different result than is.element(els,set)?
>>  I assumed they were copied form S+, where they are the same except
>> for argument names, but I may be wrong.
> 
>  > els <- 2:1
>  > set <- 1:6
>  > - els%in%set
>  [1] FALSE FALSE
>  > - is.element(els,set)
>  [1] -1 -1
> 

That is not demonstrating that " els%in%set gives a different result than is.element(els,set) ". It is again demonstrating that "-" has a higher precedence than '%in%'.

>  -(els%in%set)
[1] -1 -1
> 
>   - is.element(els,set)
[1] -1 -1

-- 
David.
> So following your advice doesn't really help me leave my precedence
> problems behind.
> 
> H.
> 
>> Bill Dunlap
>> TIBCO Software
>> wdunlap tibco.com
>> 
>> 
>> On Tue, May 6, 2014 at 12:23 PM, Herv? Pag?s <hpages at fhcrc.org> wrote:
>>> On 05/06/2014 08:54 AM, William Dunlap wrote:
>>>> 
>>>> You can also use is.element(els,set) instead of the equivalent
>>>> els%in%set
>>> 
>>> 
>>> No they are not *equivalent*. Equivalent means you could substitute
>>> one by the other in your code without changing its behavior.
>>> 
>>> H.
>>> 
>>>> and leave your precedence problems behind.
>>>> Bill Dunlap
>>>> TIBCO Software
>>>> wdunlap tibco.com
>>>> 
>>>> 
>>>> On Mon, May 5, 2014 at 10:35 PM, peter dalgaard <pdalgd at gmail.com> wrote:
>>>>> 
>>>>> 
>>>>> On 06 May 2014, at 01:05 , Herv? Pag?s <hpages at fhcrc.org> wrote:
>>>>> 
>>>>>> 
>>>>>> BTW, that %in% has precedence over arithmetic operations is surprising,
>>>>>> error-prone, and doesn't cover any reasonable use case (who needs to
>>>>>> multiply the logical vector returned by %in% by some value?) but that's
>>>>>> another story:
>>>>> 
>>>>> 
>>>>> The point here is that the %foo% operators all have the _same_
>>>>> precedence. In principle, they can be user-coded, and there is no way to
>>>>> express what precedence is desirable. It may turn out slightly weird for
>>>>> %in%, but think of what would happen if %*% had lower precedence than
>>>>> addition.
>>>>> 
>>>>> --
>>>>> Peter Dalgaard, Professor,
>>>>> Center for Statistics, Copenhagen Business School
>>>>> Solbjerg Plads 3, 2000 Frederiksberg, Denmark
>>>>> Phone: (+45)38153501
>>>>> Email: pd.mes at cbs.dk  Priv: PDalgd at gmail.com
>>>>> 
>>>>> ______________________________________________
>>>>> R-devel at r-project.org mailing list
>>>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>> 
>>> 
>>> --
>>> Herv? Pag?s
>>> 
>>> Program in Computational Biology
>>> Division of Public Health Sciences
>>> Fred Hutchinson Cancer Research Center
>>> 1100 Fairview Ave. N, M1-B514
>>> P.O. Box 19024
>>> Seattle, WA 98109-1024
>>> 
>>> E-mail: hpages at fhcrc.org
>>> Phone:  (206) 667-5791
>>> Fax:    (206) 667-1319
> 
> -- 
> Herv? Pag?s
> 
> Program in Computational Biology
> Division of Public Health Sciences
> Fred Hutchinson Cancer Research Center
> 1100 Fairview Ave. N, M1-B514
> P.O. Box 19024
> Seattle, WA 98109-1024
> 
> E-mail: hpages at fhcrc.org
> Phone:  (206) 667-5791
> Fax:    (206) 667-1319
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel

David Winsemius
Alameda, CA, USA


From wdunlap at tibco.com  Tue May  6 22:44:56 2014
From: wdunlap at tibco.com (William Dunlap)
Date: Tue, 6 May 2014 13:44:56 -0700
Subject: [Rd] Historical NA question
In-Reply-To: <5369460B.8000607@fhcrc.org>
References: <CABdHhvFt2n6=ORLBSTYxkA_G+t_d_H=0B1+vhhM_ZFL_Z-RT3g@mail.gmail.com>
	<5366EAC6.9030109@yorku.ca> <53681944.9020606@fhcrc.org>
	<4BBA43DC-39CB-4CCC-9172-E2318459FD77@gmail.com>
	<CAF8bMcbt5j70eLj_ijMTvX5wFmXW_ZCrMTYzZO6MovASADnhuA@mail.gmail.com>
	<53693699.9080502@fhcrc.org>
	<CAF8bMcaWp9Wa91uPncwR7EF+UdSkRVUNa1DnppkGPVwo-iV25Q@mail.gmail.com>
	<536940D3.7060008@fhcrc.org>
	<CAF8bMcYFP-hPPLG-z26+_=1K5T0EzE0-4_aCbq7jhpHLc7bqCw@mail.gmail.com>
	<5369460B.8000607@fhcrc.org>
Message-ID: <CAF8bMcb=3jrccyPjr34oFcwE7hpOt_CG=q4sW870DRbtaTX2Mw@mail.gmail.com>

Run the following function over the output of
parse("yourSourceCode.R") to edit the parse tree:

inToIsElement <- function (expr)
{
    # expr should be an expression or a call, not a function.
    # The output of parse(keep.source=FALSE) or quote() is good.
    if (is.call(expr) && identical(expr[[1]], as.name("%in%"))) {
        expr[[1]] <- as.name("is.element")
    }
    if (is.recursive(expr)) {
        for(i in seq_along(expr)) {
            expr[[i]] <- Recall(expr[[i]])
        }
   }
   expr
}

E.g.,
> txt <- "function(els, negSet, posSet){
+     -els %in% negSet & # commentary
+      els %in% posSet
+ }"
> inToIsElement(parse(text=txt, keep.source=FALSE))[[1]]
function(els, negSet, posSet) {
    is.element(-els, negSet) & is.element(els, posSet)
}

It assumes that you didn't make any precedence errors with %in%.

Bill Dunlap
TIBCO Software
wdunlap tibco.com


On Tue, May 6, 2014 at 1:28 PM, Herv? Pag?s <hpages at fhcrc.org> wrote:
> On 05/06/2014 01:15 PM, William Dunlap wrote:
>>
>> In your example els%in%set gave the same result as
>> is.element(els,set), but because of precedence issues putting a unary
>> minus in front caused them to be given different inputs - one got -els
>> and the other got just els for the first argument.
>
>
> So you confirm that to use your solution (i.e. replace my use of
> 'els%in%set' with 'is.element(els,set)') I need to think about
> precedence?
>
>
>> To change one to
>> the other you have to edit the parsed expression, not the text.  If
>> you used is.element in the first place you would avoid precedence
>> issues.
>
>
> "If you ... in the first place". Ahhhh, but that's not what I did. So
> that doesn't help me.
>
> H.
>
>
>>  (I avoid creating %xxx% functions  because the precedence is
>> not often what I want.)
>> Bill Dunlap
>> TIBCO Software
>> wdunlap tibco.com
>>
>>
>> On Tue, May 6, 2014 at 1:06 PM, Herv? Pag?s <hpages at fhcrc.org> wrote:
>>>
>>> On 05/06/2014 12:36 PM, William Dunlap wrote:
>>>>
>>>>
>>>> When does els%in%set give a different result than is.element(els,set)?
>>>>    I assumed they were copied form S+, where they are the same except
>>>> for argument names, but I may be wrong.
>>>
>>>
>>>
>>>    > els <- 2:1
>>>    > set <- 1:6
>>>    > - els%in%set
>>>    [1] FALSE FALSE
>>>    > - is.element(els,set)
>>>    [1] -1 -1
>>>
>>> So following your advice doesn't really help me leave my precedence
>>> problems behind.
>>>
>>>
>>> H.
>>>
>>>> Bill Dunlap
>>>> TIBCO Software
>>>> wdunlap tibco.com
>>>>
>>>>
>>>> On Tue, May 6, 2014 at 12:23 PM, Herv? Pag?s <hpages at fhcrc.org> wrote:
>>>>>
>>>>>
>>>>> On 05/06/2014 08:54 AM, William Dunlap wrote:
>>>>>>
>>>>>>
>>>>>>
>>>>>> You can also use is.element(els,set) instead of the equivalent
>>>>>> els%in%set
>>>>>
>>>>>
>>>>>
>>>>>
>>>>> No they are not *equivalent*. Equivalent means you could substitute
>>>>> one by the other in your code without changing its behavior.
>>>>>
>>>>> H.
>>>>>
>>>>>> and leave your precedence problems behind.
>>>>>> Bill Dunlap
>>>>>> TIBCO Software
>>>>>> wdunlap tibco.com
>>>>>>
>>>>>>
>>>>>> On Mon, May 5, 2014 at 10:35 PM, peter dalgaard <pdalgd at gmail.com>
>>>>>> wrote:
>>>>>>>
>>>>>>>
>>>>>>>
>>>>>>>
>>>>>>> On 06 May 2014, at 01:05 , Herv? Pag?s <hpages at fhcrc.org> wrote:
>>>>>>>
>>>>>>>>
>>>>>>>> BTW, that %in% has precedence over arithmetic operations is
>>>>>>>> surprising,
>>>>>>>> error-prone, and doesn't cover any reasonable use case (who needs to
>>>>>>>> multiply the logical vector returned by %in% by some value?) but
>>>>>>>> that's
>>>>>>>> another story:
>>>>>>>
>>>>>>>
>>>>>>>
>>>>>>>
>>>>>>> The point here is that the %foo% operators all have the _same_
>>>>>>> precedence. In principle, they can be user-coded, and there is no way
>>>>>>> to
>>>>>>> express what precedence is desirable. It may turn out slightly weird
>>>>>>> for
>>>>>>> %in%, but think of what would happen if %*% had lower precedence than
>>>>>>> addition.
>>>>>>>
>>>>>>> --
>>>>>>> Peter Dalgaard, Professor,
>>>>>>> Center for Statistics, Copenhagen Business School
>>>>>>> Solbjerg Plads 3, 2000 Frederiksberg, Denmark
>>>>>>> Phone: (+45)38153501
>>>>>>> Email: pd.mes at cbs.dk  Priv: PDalgd at gmail.com
>>>>>>>
>>>>>>> ______________________________________________
>>>>>>> R-devel at r-project.org mailing list
>>>>>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>>>>
>>>>>
>>>>>
>>>>>
>>>>> --
>>>>> Herv? Pag?s
>>>>>
>>>>> Program in Computational Biology
>>>>> Division of Public Health Sciences
>>>>> Fred Hutchinson Cancer Research Center
>>>>> 1100 Fairview Ave. N, M1-B514
>>>>> P.O. Box 19024
>>>>> Seattle, WA 98109-1024
>>>>>
>>>>> E-mail: hpages at fhcrc.org
>>>>> Phone:  (206) 667-5791
>>>>> Fax:    (206) 667-1319
>>>
>>>
>>>
>>> --
>>> Herv? Pag?s
>>>
>>> Program in Computational Biology
>>> Division of Public Health Sciences
>>> Fred Hutchinson Cancer Research Center
>>> 1100 Fairview Ave. N, M1-B514
>>> P.O. Box 19024
>>> Seattle, WA 98109-1024
>>>
>>> E-mail: hpages at fhcrc.org
>>> Phone:  (206) 667-5791
>>> Fax:    (206) 667-1319
>
>
> --
> Herv? Pag?s
>
> Program in Computational Biology
> Division of Public Health Sciences
> Fred Hutchinson Cancer Research Center
> 1100 Fairview Ave. N, M1-B514
> P.O. Box 19024
> Seattle, WA 98109-1024
>
> E-mail: hpages at fhcrc.org
> Phone:  (206) 667-5791
> Fax:    (206) 667-1319


From hpages at fhcrc.org  Tue May  6 22:57:14 2014
From: hpages at fhcrc.org (=?UTF-8?B?SGVydsOpIFBhZ8Oocw==?=)
Date: Tue, 06 May 2014 13:57:14 -0700
Subject: [Rd] Historical NA question
In-Reply-To: <CAF8bMcb=3jrccyPjr34oFcwE7hpOt_CG=q4sW870DRbtaTX2Mw@mail.gmail.com>
References: <CABdHhvFt2n6=ORLBSTYxkA_G+t_d_H=0B1+vhhM_ZFL_Z-RT3g@mail.gmail.com>
	<5366EAC6.9030109@yorku.ca> <53681944.9020606@fhcrc.org>
	<4BBA43DC-39CB-4CCC-9172-E2318459FD77@gmail.com>
	<CAF8bMcbt5j70eLj_ijMTvX5wFmXW_ZCrMTYzZO6MovASADnhuA@mail.gmail.com>
	<53693699.9080502@fhcrc.org>
	<CAF8bMcaWp9Wa91uPncwR7EF+UdSkRVUNa1DnppkGPVwo-iV25Q@mail.gmail.com>
	<536940D3.7060008@fhcrc.org>
	<CAF8bMcYFP-hPPLG-z26+_=1K5T0EzE0-4_aCbq7jhpHLc7bqCw@mail.gmail.com>
	<5369460B.8000607@fhcrc.org>
	<CAF8bMcb=3jrccyPjr34oFcwE7hpOt_CG=q4sW870DRbtaTX2Mw@mail.gmail.com>
Message-ID: <53694CAA.3080808@fhcrc.org>

On 05/06/2014 01:44 PM, William Dunlap wrote:
> Run the following function over the output of
> parse("yourSourceCode.R") to edit the parse tree:
>
> inToIsElement <- function (expr)
> {
>      # expr should be an expression or a call, not a function.
>      # The output of parse(keep.source=FALSE) or quote() is good.
>      if (is.call(expr) && identical(expr[[1]], as.name("%in%"))) {
>          expr[[1]] <- as.name("is.element")
>      }
>      if (is.recursive(expr)) {
>          for(i in seq_along(expr)) {
>              expr[[i]] <- Recall(expr[[i]])
>          }
>     }
>     expr
> }
>
> E.g.,
>> txt <- "function(els, negSet, posSet){
> +     -els %in% negSet & # commentary
> +      els %in% posSet
> + }"
>> inToIsElement(parse(text=txt, keep.source=FALSE))[[1]]
> function(els, negSet, posSet) {
>      is.element(-els, negSet) & is.element(els, posSet)
> }
>
> It assumes that you didn't make any precedence errors with %in%.

Thanks Bill. I appreciate that you are really trying to help me with my
"precedence problem". Maybe I should clarify that I can live with it
though. Anyway, it's always good to know how to make substitutions in
the parse tree.

Cheers,
H.

>
> Bill Dunlap
> TIBCO Software
> wdunlap tibco.com
>
>
> On Tue, May 6, 2014 at 1:28 PM, Herv? Pag?s <hpages at fhcrc.org> wrote:
>> On 05/06/2014 01:15 PM, William Dunlap wrote:
>>>
>>> In your example els%in%set gave the same result as
>>> is.element(els,set), but because of precedence issues putting a unary
>>> minus in front caused them to be given different inputs - one got -els
>>> and the other got just els for the first argument.
>>
>>
>> So you confirm that to use your solution (i.e. replace my use of
>> 'els%in%set' with 'is.element(els,set)') I need to think about
>> precedence?
>>
>>
>>> To change one to
>>> the other you have to edit the parsed expression, not the text.  If
>>> you used is.element in the first place you would avoid precedence
>>> issues.
>>
>>
>> "If you ... in the first place". Ahhhh, but that's not what I did. So
>> that doesn't help me.
>>
>> H.
>>
>>
>>>   (I avoid creating %xxx% functions  because the precedence is
>>> not often what I want.)
>>> Bill Dunlap
>>> TIBCO Software
>>> wdunlap tibco.com
>>>
>>>
>>> On Tue, May 6, 2014 at 1:06 PM, Herv? Pag?s <hpages at fhcrc.org> wrote:
>>>>
>>>> On 05/06/2014 12:36 PM, William Dunlap wrote:
>>>>>
>>>>>
>>>>> When does els%in%set give a different result than is.element(els,set)?
>>>>>     I assumed they were copied form S+, where they are the same except
>>>>> for argument names, but I may be wrong.
>>>>
>>>>
>>>>
>>>>     > els <- 2:1
>>>>     > set <- 1:6
>>>>     > - els%in%set
>>>>     [1] FALSE FALSE
>>>>     > - is.element(els,set)
>>>>     [1] -1 -1
>>>>
>>>> So following your advice doesn't really help me leave my precedence
>>>> problems behind.
>>>>
>>>>
>>>> H.
>>>>
>>>>> Bill Dunlap
>>>>> TIBCO Software
>>>>> wdunlap tibco.com
>>>>>
>>>>>
>>>>> On Tue, May 6, 2014 at 12:23 PM, Herv? Pag?s <hpages at fhcrc.org> wrote:
>>>>>>
>>>>>>
>>>>>> On 05/06/2014 08:54 AM, William Dunlap wrote:
>>>>>>>
>>>>>>>
>>>>>>>
>>>>>>> You can also use is.element(els,set) instead of the equivalent
>>>>>>> els%in%set
>>>>>>
>>>>>>
>>>>>>
>>>>>>
>>>>>> No they are not *equivalent*. Equivalent means you could substitute
>>>>>> one by the other in your code without changing its behavior.
>>>>>>
>>>>>> H.
>>>>>>
>>>>>>> and leave your precedence problems behind.
>>>>>>> Bill Dunlap
>>>>>>> TIBCO Software
>>>>>>> wdunlap tibco.com
>>>>>>>
>>>>>>>
>>>>>>> On Mon, May 5, 2014 at 10:35 PM, peter dalgaard <pdalgd at gmail.com>
>>>>>>> wrote:
>>>>>>>>
>>>>>>>>
>>>>>>>>
>>>>>>>>
>>>>>>>> On 06 May 2014, at 01:05 , Herv? Pag?s <hpages at fhcrc.org> wrote:
>>>>>>>>
>>>>>>>>>
>>>>>>>>> BTW, that %in% has precedence over arithmetic operations is
>>>>>>>>> surprising,
>>>>>>>>> error-prone, and doesn't cover any reasonable use case (who needs to
>>>>>>>>> multiply the logical vector returned by %in% by some value?) but
>>>>>>>>> that's
>>>>>>>>> another story:
>>>>>>>>
>>>>>>>>
>>>>>>>>
>>>>>>>>
>>>>>>>> The point here is that the %foo% operators all have the _same_
>>>>>>>> precedence. In principle, they can be user-coded, and there is no way
>>>>>>>> to
>>>>>>>> express what precedence is desirable. It may turn out slightly weird
>>>>>>>> for
>>>>>>>> %in%, but think of what would happen if %*% had lower precedence than
>>>>>>>> addition.
>>>>>>>>
>>>>>>>> --
>>>>>>>> Peter Dalgaard, Professor,
>>>>>>>> Center for Statistics, Copenhagen Business School
>>>>>>>> Solbjerg Plads 3, 2000 Frederiksberg, Denmark
>>>>>>>> Phone: (+45)38153501
>>>>>>>> Email: pd.mes at cbs.dk  Priv: PDalgd at gmail.com
>>>>>>>>
>>>>>>>> ______________________________________________
>>>>>>>> R-devel at r-project.org mailing list
>>>>>>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>>>>>
>>>>>>
>>>>>>
>>>>>>
>>>>>> --
>>>>>> Herv? Pag?s
>>>>>>
>>>>>> Program in Computational Biology
>>>>>> Division of Public Health Sciences
>>>>>> Fred Hutchinson Cancer Research Center
>>>>>> 1100 Fairview Ave. N, M1-B514
>>>>>> P.O. Box 19024
>>>>>> Seattle, WA 98109-1024
>>>>>>
>>>>>> E-mail: hpages at fhcrc.org
>>>>>> Phone:  (206) 667-5791
>>>>>> Fax:    (206) 667-1319
>>>>
>>>>
>>>>
>>>> --
>>>> Herv? Pag?s
>>>>
>>>> Program in Computational Biology
>>>> Division of Public Health Sciences
>>>> Fred Hutchinson Cancer Research Center
>>>> 1100 Fairview Ave. N, M1-B514
>>>> P.O. Box 19024
>>>> Seattle, WA 98109-1024
>>>>
>>>> E-mail: hpages at fhcrc.org
>>>> Phone:  (206) 667-5791
>>>> Fax:    (206) 667-1319
>>
>>
>> --
>> Herv? Pag?s
>>
>> Program in Computational Biology
>> Division of Public Health Sciences
>> Fred Hutchinson Cancer Research Center
>> 1100 Fairview Ave. N, M1-B514
>> P.O. Box 19024
>> Seattle, WA 98109-1024
>>
>> E-mail: hpages at fhcrc.org
>> Phone:  (206) 667-5791
>> Fax:    (206) 667-1319

-- 
Herv? Pag?s

Program in Computational Biology
Division of Public Health Sciences
Fred Hutchinson Cancer Research Center
1100 Fairview Ave. N, M1-B514
P.O. Box 19024
Seattle, WA 98109-1024

E-mail: hpages at fhcrc.org
Phone:  (206) 667-5791
Fax:    (206) 667-1319


From bhh at xs4all.nl  Wed May  7 09:24:46 2014
From: bhh at xs4all.nl (Berend Hasselman)
Date: Wed, 7 May 2014 09:24:46 +0200
Subject: [Rd] Problem running checks after building R-patched
Message-ID: <6DBFB305-73DE-47E7-9632-BFD4AF6E4849@xs4all.nl>



I am compiling the latest R-patched (Revision: 65533) Ubuntu Lucid (10.04).

Building succeeds but make check stops with an error.
The output in the terminal from make check:

Testing examples for package ?base?
Testing examples for package ?tools?
Error: testing 'tools' failed
Execution halted
make[3]: *** [test-Examples-Base] Error 1
make[2]: *** [test-Examples] Error 2
make[1]: *** [test-all-basics] Error 1
make: *** [check] Error 2

The last lines in  the output of tests/Examples/tools-Ex.Rout.fail are

> ### ** Examples
> 
> gVigns <- pkgVignettes("grid")
> ## Don't show: 
>  `%=f=%` <- function(a, b) normalizePath(a) == normalizePath(b)
>  with(gVigns,
+       stopifnot(engines == "utils::Sweave",
+                 pkgdir %=f=% system.file(package="grid"),
+                 dir    %=f=% system.file(package="grid", "doc"),
+                 (n. <- length(docs)) >= 12, # have 13 
+                 n. == length(names), n. == length(engines),
+                 length(msg) == 0) ) # as it is a 'base' package
Error: (n. <- length(docs)) >= 12 is not TRUE
Execution halted

How do I fix this, if possible?

Berend


From maechler at stat.math.ethz.ch  Wed May  7 11:23:05 2014
From: maechler at stat.math.ethz.ch (Martin Maechler)
Date: Wed, 7 May 2014 11:23:05 +0200
Subject: [Rd] Problem running checks after building R-patched
In-Reply-To: <6DBFB305-73DE-47E7-9632-BFD4AF6E4849@xs4all.nl>
References: <6DBFB305-73DE-47E7-9632-BFD4AF6E4849@xs4all.nl>
Message-ID: <21353.64377.853858.865080@stat.math.ethz.ch>

>>>>> Berend Hasselman <bhh at xs4all.nl>
>>>>>     on Wed, 7 May 2014 09:24:46 +0200 writes:

    > I am compiling the latest R-patched (Revision: 65533) Ubuntu Lucid (10.04).

    > Building succeeds but make check stops with an error.
    > The output in the terminal from make check:

    > Testing examples for package ?base?
    > Testing examples for package ?tools?
    > Error: testing 'tools' failed
    > Execution halted
    > make[3]: *** [test-Examples-Base] Error 1
    > make[2]: *** [test-Examples] Error 2
    > make[1]: *** [test-all-basics] Error 1
    > make: *** [check] Error 2

    > The last lines in  the output of tests/Examples/tools-Ex.Rout.fail are

    >> ### ** Examples
    >> 
    >> gVigns <- pkgVignettes("grid")
    >> ## Don't show: 
    >> `%=f=%` <- function(a, b) normalizePath(a) == normalizePath(b)
    >> with(gVigns,
    > +       stopifnot(engines == "utils::Sweave",
    > +                 pkgdir %=f=% system.file(package="grid"),
    > +                 dir    %=f=% system.file(package="grid", "doc"),
    > +                 (n. <- length(docs)) >= 12, # have 13 
    > +                 n. == length(names), n. == length(engines),
    > +                 length(msg) == 0) ) # as it is a 'base' package
    > Error: (n. <- length(docs)) >= 12 is not TRUE
    > Execution halted

    > How do I fix this, if possible?
    > Berend

Well, as it works correctly for others,
why don't you execute the above code in your (self installed ?) version
of R, and find out why -- I think -- the vignettes of grid were
not built / installed correctly ?

Martin


From bhh at xs4all.nl  Wed May  7 13:20:51 2014
From: bhh at xs4all.nl (Berend Hasselman)
Date: Wed, 7 May 2014 13:20:51 +0200
Subject: [Rd] Problem running checks after building R-patched
In-Reply-To: <21353.64377.853858.865080@stat.math.ethz.ch>
References: <6DBFB305-73DE-47E7-9632-BFD4AF6E4849@xs4all.nl>
	<21353.64377.853858.865080@stat.math.ethz.ch>
Message-ID: <B5092345-6B22-458C-B428-6D413DE640D0@xs4all.nl>


On 07-05-2014, at 11:23, Martin Maechler <maechler at stat.math.ethz.ch> wrote:

>>>>>> Berend Hasselman <bhh at xs4all.nl>
>>>>>>    on Wed, 7 May 2014 09:24:46 +0200 writes:
> 
>> I am compiling the latest R-patched (Revision: 65533) Ubuntu Lucid (10.04).
> 
>> Building succeeds but make check stops with an error.
>> The output in the terminal from make check:
> 
>> Testing examples for package ?base?
>> Testing examples for package ?tools?
>> Error: testing 'tools' failed
>> Execution halted
>> make[3]: *** [test-Examples-Base] Error 1
>> make[2]: *** [test-Examples] Error 2
>> make[1]: *** [test-all-basics] Error 1
>> make: *** [check] Error 2
> 
>> The last lines in  the output of tests/Examples/tools-Ex.Rout.fail are
> 
>>> ### ** Examples
>>> 
>>> gVigns <- pkgVignettes("grid")
>>> ## Don't show: 
>>> `%=f=%` <- function(a, b) normalizePath(a) == normalizePath(b)
>>> with(gVigns,
>> +       stopifnot(engines == "utils::Sweave",
>> +                 pkgdir %=f=% system.file(package="grid"),
>> +                 dir    %=f=% system.file(package="grid", "doc"),
>> +                 (n. <- length(docs)) >= 12, # have 13 
>> +                 n. == length(names), n. == length(engines),
>> +                 length(msg) == 0) ) # as it is a 'base' package
>> Error: (n. <- length(docs)) >= 12 is not TRUE
>> Execution halted
> 
>> How do I fix this, if possible?
>> Berend
> 
> Well, as it works correctly for others,
> why don't you execute the above code in your (self installed ?) version
> of R, and find out why -- I think -- the vignettes of grid were
> not built / installed correctly ?
> 
> Martin


I have the release version R-3.1.0 installed (built and checked with NO error messages).

I don't have pdflatex installed; that is detected by configure.

I have found a difference between ??/tests/Examples/tools-Ex.R in R-3.1.0 and R-patched.
After running this command

 diff R-3.1.0-build/tests/Examples/tools-Ex.R R-patched-build/tests/Examples/tools-Ex.R > diff-3.1.0-3.1.0patched-tools-Ex.R.txt

the file with the differences contains this:

155a156,184
> nameEx("buildVignettes")
> ### * buildVignettes
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: buildVignettes
> ### Title: List and Build Package Vignettes
> ### Aliases: buildVignettes pkgVignettes
> ### Keywords: utilities documentation
> 
> ### ** Examples
> 
> gVigns <- pkgVignettes("grid")
> ## Don't show: 
>  `%=f=%` <- function(a, b) normalizePath(a) == normalizePath(b)
>  with(gVigns,
>       stopifnot(engines == "utils::Sweave",
>                 pkgdir %=f=% system.file(package="grid"),
>                 dir    %=f=% system.file(package="grid", "doc"),
>                 (n. <- length(docs)) >= 12, # have 13 
>                 n. == length(names), n. == length(engines),
>                 length(msg) == 0) ) # as it is a 'base' package
> ## End Don't show
> stopifnot("grid" %in% gVigns$names,
>           inherits(gVigns, "pkgVignettes"))
> 
> 
> 
> cleanEx()

which would indicate that tool-Ex.R contains an additional test.

Berend

From therneau at mayo.edu  Wed May  7 14:21:20 2014
From: therneau at mayo.edu (Therneau, Terry M., Ph.D.)
Date: Wed, 07 May 2014 07:21:20 -0500
Subject: [Rd] precedence (was 'historical NA question')
Message-ID: <3dfcdc$gnkvcv@ironport9.mayo.edu>

Hadley asked about the Blue book; my shelf still has the earlier brown book
    Becker and Chambers, 1984, S: An interactive environment for data analysis and graphics.

The manual page for precedence is

$               component select
%x              special operator
-               unary minus
:               sequence operator
^ **            exponentiation
* /             mult/div
+ -             add/sub
< > <= >= == != logical
!               not
& |             and/or
<- ->           assignment

Terry Therneau


From friendly at yorku.ca  Wed May  7 16:02:16 2014
From: friendly at yorku.ca (Michael Friendly)
Date: Wed, 07 May 2014 10:02:16 -0400
Subject: [Rd] historical significance of Pr(>Chisq) < 2.2e-16
Message-ID: <536A3CE8.2010909@yorku.ca>

Where does the value 2.2e-16 come from in p-values for chisq tests such 
as those
reported below?

 > Anova(cm.mod2)
Analysis of Deviance Table (Type II tests)

Response: Freq
LR Chisq Df Pr(>Chisq)
B 11026.2 1 < 2.2e-16 ***
W 7037.5 1 < 2.2e-16 ***
Age 886.6 8 < 2.2e-16 ***
B:W 3025.2 1 < 2.2e-16 ***
B:Age 1130.4 8 < 2.2e-16 ***
W:Age 332.9 8 < 2.2e-16 ***
---
Signif. codes: 0 ?***? 0.001 ?**? 0.01 ?*? 0.05 ?.? 0.1 ? ? 1
 >

-- 
Michael Friendly     Email: friendly AT yorku DOT ca
Professor, Psychology Dept. & Chair, Quantitative Methods
York University      Voice: 416 736-2100 x66249 Fax: 416 736-5814
4700 Keele Street    Web:   http://www.datavis.ca
Toronto, ONT  M3J 1P3 CANADA


From jpnolan at american.edu  Wed May  7 16:11:05 2014
From: jpnolan at american.edu (John Nolan)
Date: Wed, 7 May 2014 10:11:05 -0400
Subject: [Rd] historical significance of Pr(>Chisq) < 2.2e-16
In-Reply-To: <536A3CE8.2010909@yorku.ca>
References: <536A3CE8.2010909@yorku.ca>
Message-ID: <OF66F27136.0095C443-ON85257CD1.004DEB75-85257CD1.004DEB76@american.edu>

Presumably from

> .Machine$double.eps
[1] 2.220446e-16

Whether this means the tail probability is actually that
small, or that the routine that computes it can't get
any more accuracy than that, you'll have to dig deeper.

John
 ..............................................................
 John P. Nolan
 Math/Stat Department
 227 Gray Hall,   American University
 4400 Massachusetts Avenue, NW
 Washington, DC 20016-8050

 jpnolan at american.edu       voice: 202.885.3140          
 web: academic2.american.edu/~jpnolan
 ..............................................................


-----r-devel-bounces at r-project.org wrote: ----- 
To: r-devel <r-devel at r-project.org>
From: Michael Friendly 
Sent by: r-devel-bounces at r-project.org
Date: 05/07/2014 10:02AM
Subject: [Rd] historical significance of Pr(>Chisq) < 2.2e-16

Where does the value 2.2e-16 come from in p-values for chisq tests such 
as those
reported below?

 > Anova(cm.mod2)
Analysis of Deviance Table (Type II tests)

Response: Freq
LR Chisq Df Pr(>Chisq)
B 11026.2 1 < 2.2e-16 ***
W 7037.5 1 < 2.2e-16 ***
Age 886.6 8 < 2.2e-16 ***
B:W 3025.2 1 < 2.2e-16 ***
B:Age 1130.4 8 < 2.2e-16 ***
W:Age 332.9 8 < 2.2e-16 ***
---
Signif. codes: 0 ?***? 0.001 ?**? 0.01 ?*? 0.05 ?.? 0.1 ? ? 1
 >

-- 
Michael Friendly     Email: friendly AT yorku DOT ca
Professor, Psychology Dept. & Chair, Quantitative Methods
York University      Voice: 416 736-2100 x66249 Fax: 416 736-5814
4700 Keele Street    Web:   http://www.datavis.ca
Toronto, ONT  M3J 1P3 CANADA

______________________________________________
R-devel at r-project.org mailing list
https://stat.ethz.ch/mailman/listinfo/r-devel


From jari.oksanen at oulu.fi  Wed May  7 16:17:00 2014
From: jari.oksanen at oulu.fi (Jari Oksanen)
Date: Wed, 7 May 2014 14:17:00 +0000
Subject: [Rd] historical significance of Pr(>Chisq) < 2.2e-16
In-Reply-To: <536A3CE8.2010909@yorku.ca>
References: <536A3CE8.2010909@yorku.ca>
Message-ID: <66C03CD1145C95448A4D73676DD9C2ED010E73BE@nippu1.univ.yo.oulu.fi>

See ?format.pval

cheers, jari oksanen
________________________________________
From: r-devel-bounces at r-project.org [r-devel-bounces at r-project.org] on behalf of Michael Friendly [friendly at yorku.ca]
Sent: 07 May 2014 17:02
To: r-devel
Subject: [Rd] historical significance of Pr(>Chisq) < 2.2e-16

Where does the value 2.2e-16 come from in p-values for chisq tests such
as those
reported below?

 > Anova(cm.mod2)
Analysis of Deviance Table (Type II tests)

Response: Freq
LR Chisq Df Pr(>Chisq)
B 11026.2 1 < 2.2e-16 ***
W 7037.5 1 < 2.2e-16 ***
Age 886.6 8 < 2.2e-16 ***
B:W 3025.2 1 < 2.2e-16 ***
B:Age 1130.4 8 < 2.2e-16 ***
W:Age 332.9 8 < 2.2e-16 ***
---
Signif. codes: 0 ?***? 0.001 ?**? 0.01 ?*? 0.05 ?.? 0.1 ? ? 1
 >

--
Michael Friendly     Email: friendly AT yorku DOT ca
Professor, Psychology Dept. & Chair, Quantitative Methods
York University      Voice: 416 736-2100 x66249 Fax: 416 736-5814
4700 Keele Street    Web:   http://www.datavis.ca
Toronto, ONT  M3J 1P3 CANADA

______________________________________________
R-devel at r-project.org mailing list
https://stat.ethz.ch/mailman/listinfo/r-devel


From luke-tierney at uiowa.edu  Wed May  7 16:40:19 2014
From: luke-tierney at uiowa.edu (luke-tierney at uiowa.edu)
Date: Wed, 7 May 2014 09:40:19 -0500
Subject: [Rd] precedence (was 'historical NA question')
In-Reply-To: <3dfcdc$gnkvcv@ironport9.mayo.edu>
References: <3dfcdc$gnkvcv@ironport9.mayo.edu>
Message-ID: <alpine.LFD.2.10.1405070939280.25673@nokomis.stat.uiowa.edu>

On Wed, 7 May 2014, Therneau, Terry M., Ph.D. wrote:

> Hadley asked about the Blue book; my shelf still has the earlier brown book
>   Becker and Chambers, 1984, S: An interactive environment for data analysis 
> and graphics.
>
> The manual page for precedence is
>
> $               component select
> %x              special operator
> -               unary minus
> :               sequence operator
> ^ **            exponentiation
> * /             mult/div
> + -             add/sub
> < > <= >= == != logical
> !               not
> & |             and/or
> <- ->           assignment
>

which did lead to some head scratching after plotting exp(-x^2) :-)

luke

> Terry Therneau
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>

-- 
Luke Tierney
Chair, Statistics and Actuarial Science
Ralph E. Wareham Professor of Mathematical Sciences
University of Iowa                  Phone:             319-335-3386
Department of Statistics and        Fax:               319-335-3017
    Actuarial Science
241 Schaeffer Hall                  email:   luke-tierney at uiowa.edu
Iowa City, IA 52242                 WWW:  http://www.stat.uiowa.edu


From jmc at r-project.org  Wed May  7 18:16:18 2014
From: jmc at r-project.org (John Chambers)
Date: Wed, 07 May 2014 09:16:18 -0700
Subject: [Rd] precedence (was 'historical NA question')
In-Reply-To: <3dfcdc$gnkvcv@ironport9.mayo.edu>
References: <3dfcdc$gnkvcv@ironport9.mayo.edu>
Message-ID: <536A5C52.4030907@r-project.org>

On 5/7/14, 5:21 AM, Therneau, Terry M., Ph.D. wrote:
> Hadley asked about the Blue book; my shelf still has the earlier brown book
>     Becker and Chambers, 1984, S: An interactive environment for data
> analysis and graphics.

Historically interesting, but there was never a guarantee that Version 3 
of S (the "blue book") was back-compatible with earlier versions.  We 
gave users some help in "getting on the road" to converting, that was 
all (see Appendix 4 to the blue book).

For that one brief moment, we felt free to innovate.

John

>
> The manual page for precedence is
>
> $               component select
> %x              special operator
> -               unary minus
> :               sequence operator
> ^ **            exponentiation
> * /             mult/div
> + -             add/sub
> < > <= >= == != logical
> !               not
> & |             and/or
> <- ->           assignment
>
> Terry Therneau
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From spencer.graves at structuremonitoring.com  Wed May  7 19:25:10 2014
From: spencer.graves at structuremonitoring.com (Spencer Graves)
Date: Wed, 07 May 2014 10:25:10 -0700
Subject: [Rd] yinch() is NOT nonsense with log='y'
Message-ID: <536A6C76.8020208@structuremonitoring.com>

       May I request a modest change in the documentation and warning 
for "xinch", "yinch", and "xyinch"?


       Consider the following example:


 > plot(1:2, log='y')
 > yinch(1)
[1] 0.1961134
Warning message:
In yinch(1) : y log scale:  yinch() is nonsense


       In fact, in this environment, "yinch(y)" translates a vertical 
displacement of "y" inches into the corresponding change in the log10 
scale.  For a realistic example of such a use, see the first example of 
the current R-Forge version of the new "animate" function in the "Ecfun" 
package:  This places the Rlogo on a plot(..., log='y') without distortion.


       Thanks,
       Spencer Graves


From georgi.boshnakov at manchester.ac.uk  Wed May  7 21:37:07 2014
From: georgi.boshnakov at manchester.ac.uk (Georgi Boshnakov)
Date: Wed, 7 May 2014 19:37:07 +0000
Subject: [Rd] Historical NA question (Herv? Pag?s)
Message-ID: <438D2EC9EAFE5946B2D5864670EA468E0145BA7AA3@MBXP01.ds.man.ac.uk>

"Equivalence" certainly does not mean that literally replacing some text will not change the result. 

>From "R language definition", p. 11:

> Except for the syntax, there is no difference between applying an operator and calling a
function. In fact, x + y can equivalently be written ?+?(x, y). Notice that since ?+? is a nonstandard
function name, it needs to be quoted.

A doubt that anybody would interpret the above as implying that the following expressions should be equivalent:
> 2 * 2 + 2

> 2  *  "+"(2,2)

I believe that S's %xxx% notation predates Mathematica's generic infix, ~XXX~, notation, which also has high priority, independent of the meaning of the symbol XXX. 


--
Dr Georgi Boshnakov               tel: (+44) (0)161 306 3684
School of Mathematics             fax: (+44) (0)161 306 3669
Alan Turing Building 1.125
The University of Manchester      email: Georgi.Boshnakov at manchester.ac.uk
Oxford Road
Manchester M13 9PL
UK

________________________________________
Date: Tue, 06 May 2014 13:57:14 -0700
From: Herv? Pag?s <hpages at fhcrc.org>
To: William Dunlap <wdunlap at tibco.com>
Cc: Michael Friendly <friendly at yorku.ca>,       "r-devel at r-project.org"
        <r-devel at r-project.org>
Subject: Re: [Rd] Historical NA question
Message-ID: <53694CAA.3080808 at fhcrc.org>
Content-Type: text/plain; charset=UTF-8; format=flowed

On 05/06/2014 01:44 PM, William Dunlap wrote:
> Run the following function over the output of
> parse("yourSourceCode.R") to edit the parse tree:
>
> inToIsElement <- function (expr)
> {
>      # expr should be an expression or a call, not a function.
>      # The output of parse(keep.source=FALSE) or quote() is good.
>      if (is.call(expr) && identical(expr[[1]], as.name("%in%"))) {
>          expr[[1]] <- as.name("is.element")
>      }
>      if (is.recursive(expr)) {
>          for(i in seq_along(expr)) {
>              expr[[i]] <- Recall(expr[[i]])
>          }
>     }
>     expr
> }
>
> E.g.,
>> txt <- "function(els, negSet, posSet){
> +     -els %in% negSet & # commentary
> +      els %in% posSet
> + }"
>> inToIsElement(parse(text=txt, keep.source=FALSE))[[1]]
> function(els, negSet, posSet) {
>      is.element(-els, negSet) & is.element(els, posSet)
> }
>
> It assumes that you didn't make any precedence errors with %in%.

Thanks Bill. I appreciate that you are really trying to help me with my
"precedence problem". Maybe I should clarify that I can live with it
though. Anyway, it's always good to know how to make substitutions in
the parse tree.

Cheers,
H.

>
> Bill Dunlap
> TIBCO Software
> wdunlap tibco.com
>
>
> On Tue, May 6, 2014 at 1:28 PM, Herv? Pag?s <hpages at fhcrc.org> wrote:
>> On 05/06/2014 01:15 PM, William Dunlap wrote:
>>>
>>> In your example els%in%set gave the same result as
>>> is.element(els,set), but because of precedence issues putting a unary
>>> minus in front caused them to be given different inputs - one got -els
>>> and the other got just els for the first argument.
>>
>>
>> So you confirm that to use your solution (i.e. replace my use of
>> 'els%in%set' with 'is.element(els,set)') I need to think about
>> precedence?
>>
>>
>>> To change one to
>>> the other you have to edit the parsed expression, not the text.  If
>>> you used is.element in the first place you would avoid precedence
>>> issues.
>>
>>
>> "If you ... in the first place". Ahhhh, but that's not what I did. So
>> that doesn't help me.
>>
>> H.
>>
>>
>>>   (I avoid creating %xxx% functions  because the precedence is
>>> not often what I want.)
>>> Bill Dunlap
>>> TIBCO Software
>>> wdunlap tibco.com
>>>
>>>
>>> On Tue, May 6, 2014 at 1:06 PM, Herv? Pag?s <hpages at fhcrc.org> wrote:
>>>>
>>>> On 05/06/2014 12:36 PM, William Dunlap wrote:
>>>>>
>>>>>
>>>>> When does els%in%set give a different result than is.element(els,set)?
>>>>>     I assumed they were copied form S+, where they are the same except
>>>>> for argument names, but I may be wrong.
>>>>
>>>>
>>>>
>>>>     > els <- 2:1
>>>>     > set <- 1:6
>>>>     > - els%in%set
>>>>     [1] FALSE FALSE
>>>>     > - is.element(els,set)
>>>>     [1] -1 -1
>>>>
>>>> So following your advice doesn't really help me leave my precedence
>>>> problems behind.
>>>>
>>>>
>>>> H.
>>>>
>>>>> Bill Dunlap
>>>>> TIBCO Software
>>>>> wdunlap tibco.com
>>>>>
>>>>>
>>>>> On Tue, May 6, 2014 at 12:23 PM, Herv? Pag?s <hpages at fhcrc.org> wrote:
>>>>>>
>>>>>>
>>>>>> On 05/06/2014 08:54 AM, William Dunlap wrote:
>>>>>>>
>>>>>>>
>>>>>>>
>>>>>>> You can also use is.element(els,set) instead of the equivalent
>>>>>>> els%in%set
>>>>>>
>>>>>>
>>>>>>
>>>>>>
>>>>>> No they are not *equivalent*. Equivalent means you could substitute
>>>>>> one by the other in your code without changing its behavior.
>>>>>>
>>>>>> H.
>>>>>>
>>>>>>> and leave your precedence problems behind.
>>>>>>> Bill Dunlap
>>>>>>> TIBCO Software
>>>>>>> wdunlap tibco.com
>>>>>>>
>>>>>>>
>>>>>>> On Mon, May 5, 2014 at 10:35 PM, peter dalgaard <pdalgd at gmail.com>
>>>>>>> wrote:
>>>>>>>>
>>>>>>>>
>>>>>>>>
>>>>>>>>
>>>>>>>> On 06 May 2014, at 01:05 , Herv? Pag?s <hpages at fhcrc.org> wrote:
>>>>>>>>
>>>>>>>>>
>>>>>>>>> BTW, that %in% has precedence over arithmetic operations is
>>>>>>>>> surprising,
>>>>>>>>> error-prone, and doesn't cover any reasonable use case (who needs to
>>>>>>>>> multiply the logical vector returned by %in% by some value?) but
>>>>>>>>> that's
>>>>>>>>> another story:
>>>>>>>>
>>>>>>>>
>>>>>>>>
>>>>>>>>
>>>>>>>> The point here is that the %foo% operators all have the _same_
>>>>>>>> precedence. In principle, they can be user-coded, and there is no way
>>>>>>>> to
>>>>>>>> express what precedence is desirable. It may turn out slightly weird
>>>>>>>> for
>>>>>>>> %in%, but think of what would happen if %*% had lower precedence than
>>>>>>>> addition.
>>>>>>>>
>>>>>>>> --
>>>>>>>> Peter Dalgaard, Professor,
>>>>>>>> Center for Statistics, Copenhagen Business School
>>>>>>>> Solbjerg Plads 3, 2000 Frederiksberg, Denmark
>>>>>>>> Phone: (+45)38153501
>>>>>>>> Email: pd.mes at cbs.dk  Priv: PDalgd at gmail.com
>>>>>>>>
>>>>>>>> ______________________________________________
>>>>>>>> R-devel at r-project.org mailing list
>>>>>>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>>>>>
>>>>>>
>>>>>>
>>>>>>
>>>>>> --
>>>>>> Herv? Pag?s
>>>>>>
>>>>>> Program in Computational Biology
>>>>>> Division of Public Health Sciences
>>>>>> Fred Hutchinson Cancer Research Center
>>>>>> 1100 Fairview Ave. N, M1-B514
>>>>>> P.O. Box 19024
>>>>>> Seattle, WA 98109-1024
>>>>>>
>>>>>> E-mail: hpages at fhcrc.org
>>>>>> Phone:  (206) 667-5791
>>>>>> Fax:    (206) 667-1319
>>>>
>>>>
>>>>
>>>> --
>>>> Herv? Pag?s
>>>>
>>>> Program in Computational Biology
>>>> Division of Public Health Sciences
>>>> Fred Hutchinson Cancer Research Center
>>>> 1100 Fairview Ave. N, M1-B514
>>>> P.O. Box 19024
>>>> Seattle, WA 98109-1024
>>>>
>>>> E-mail: hpages at fhcrc.org
>>>> Phone:  (206) 667-5791
>>>> Fax:    (206) 667-1319
>>
>>
>> --
>> Herv? Pag?s
>>
>> Program in Computational Biology
>> Division of Public Health Sciences
>> Fred Hutchinson Cancer Research Center
>> 1100 Fairview Ave. N, M1-B514
>> P.O. Box 19024
>> Seattle, WA 98109-1024
>>
>> E-mail: hpages at fhcrc.org
>> Phone:  (206) 667-5791
>> Fax:    (206) 667-1319

--
Herv? Pag?s

Program in Computational Biology
Division of Public Health Sciences
Fred Hutchinson Cancer Research Center
1100 Fairview Ave. N, M1-B514
P.O. Box 19024
Seattle, WA 98109-1024

E-mail: hpages at fhcrc.org
Phone:  (206) 667-5791
Fax:    (206) 667-1319




From hpages at fhcrc.org  Wed May  7 21:37:22 2014
From: hpages at fhcrc.org (=?ISO-8859-1?Q?Herv=E9_Pag=E8s?=)
Date: Wed, 07 May 2014 12:37:22 -0700
Subject: [Rd] precedence (was 'historical NA question')
In-Reply-To: <536A5C52.4030907@r-project.org>
References: <3dfcdc$gnkvcv@ironport9.mayo.edu> <536A5C52.4030907@r-project.org>
Message-ID: <536A8B72.802@fhcrc.org>

No big deal. These things can be tricky:

  https://stat.ethz.ch/pipermail/r-devel/2006-January/036022.html

Sorry I couldn't resist ;-)

H.

On 05/07/2014 09:16 AM, John Chambers wrote:
> On 5/7/14, 5:21 AM, Therneau, Terry M., Ph.D. wrote:
>> Hadley asked about the Blue book; my shelf still has the earlier brown
>> book
>>     Becker and Chambers, 1984, S: An interactive environment for data
>> analysis and graphics.
>
> Historically interesting, but there was never a guarantee that Version 3
> of S (the "blue book") was back-compatible with earlier versions.  We
> gave users some help in "getting on the road" to converting, that was
> all (see Appendix 4 to the blue book).
>
> For that one brief moment, we felt free to innovate.
>
> John
>
>>
>> The manual page for precedence is
>>
>> $               component select
>> %x              special operator
>> -               unary minus
>> :               sequence operator
>> ^ **            exponentiation
>> * /             mult/div
>> + -             add/sub
>> < > <= >= == != logical
>> !               not
>> & |             and/or
>> <- ->           assignment
>>
>> Terry Therneau
>>
>> ______________________________________________
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel

-- 
Herv? Pag?s

Program in Computational Biology
Division of Public Health Sciences
Fred Hutchinson Cancer Research Center
1100 Fairview Ave. N, M1-B514
P.O. Box 19024
Seattle, WA 98109-1024

E-mail: hpages at fhcrc.org
Phone:  (206) 667-5791
Fax:    (206) 667-1319


From simon.urbanek at r-project.org  Wed May  7 21:52:26 2014
From: simon.urbanek at r-project.org (Simon Urbanek)
Date: Wed, 7 May 2014 15:52:26 -0400
Subject: [Rd] precedence (was 'historical NA question')
In-Reply-To: <536A8B72.802@fhcrc.org>
References: <3dfcdc$gnkvcv@ironport9.mayo.edu>
	<536A5C52.4030907@r-project.org> <536A8B72.802@fhcrc.org>
Message-ID: <7CC02BBE-3F5D-4A11-87A1-F8B013BD081F@r-project.org>

On May 7, 2014, at 3:37 PM, Herv? Pag?s <hpages at fhcrc.org> wrote:

> No big deal. These things can be tricky:
> 
> https://stat.ethz.ch/pipermail/r-devel/2006-January/036022.html
> 
> Sorry I couldn't resist ;-)
> 

Yeah, but that's just yet another trip down the rabbit hole - why is -2 parsed as `-`(2) and not a single constant? Is there a way to express a negative constant in R? Hmm? 


> On 05/07/2014 09:16 AM, John Chambers wrote:
>> On 5/7/14, 5:21 AM, Therneau, Terry M., Ph.D. wrote:
>>> Hadley asked about the Blue book; my shelf still has the earlier brown
>>> book
>>>    Becker and Chambers, 1984, S: An interactive environment for data
>>> analysis and graphics.
>> 
>> Historically interesting, but there was never a guarantee that Version 3
>> of S (the "blue book") was back-compatible with earlier versions.  We
>> gave users some help in "getting on the road" to converting, that was
>> all (see Appendix 4 to the blue book).
>> 
>> For that one brief moment, we felt free to innovate.
>> 
>> John
>> 
>>> 
>>> The manual page for precedence is
>>> 
>>> $               component select
>>> %x              special operator
>>> -               unary minus
>>> :               sequence operator
>>> ^ **            exponentiation
>>> * /             mult/div
>>> + -             add/sub
>>> < > <= >= == != logical
>>> !               not
>>> & |             and/or
>>> <- ->           assignment
>>> 
>>> Terry Therneau
>>> 
>>> ______________________________________________
>>> R-devel at r-project.org mailing list
>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>> 
>> ______________________________________________
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel
> 
> -- 
> Herv? Pag?s
> 
> Program in Computational Biology
> Division of Public Health Sciences
> Fred Hutchinson Cancer Research Center
> 1100 Fairview Ave. N, M1-B514
> P.O. Box 19024
> Seattle, WA 98109-1024
> 
> E-mail: hpages at fhcrc.org
> Phone:  (206) 667-5791
> Fax:    (206) 667-1319
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
> 


From wdunlap at tibco.com  Wed May  7 22:41:09 2014
From: wdunlap at tibco.com (William Dunlap)
Date: Wed, 7 May 2014 13:41:09 -0700
Subject: [Rd] historical significance of Pr(>Chisq) < 2.2e-16
In-Reply-To: <536A3CE8.2010909@yorku.ca>
References: <536A3CE8.2010909@yorku.ca>
Message-ID: <CAF8bMcZRA=Jo+ozuWBzWLN165GXY93ycXLSYO4ABEAvqaGs_Cw@mail.gmail.com>

It may come a time before the pchisq() function had the lower.tail
argument.  In those days you had the compute the upper tail as
1-pchisq(x2, df).  For any eps<2.2e-16 (.Machine$double.eps), 1-eps==1
so 1-(1-eps)==0 so you would get, e.g.,
  > 1-pchisq(100,2)
  [1] 0
and people would say 'but the p-value is not 0: it may be very small
but not zero' so anova's printing functions would say "<2.2e-16" to
mollify them.

Now we have the lower.tail=FALSE argument
  > pchisq(100,2,lower.tail=FALSE)
  [1] 1.92875e-22
and don't need the "<2.2e-16" but no one has seen fit to change things.
Bill Dunlap
TIBCO Software
wdunlap tibco.com


On Wed, May 7, 2014 at 7:02 AM, Michael Friendly <friendly at yorku.ca> wrote:
> Where does the value 2.2e-16 come from in p-values for chisq tests such as
> those
> reported below?
>
>> Anova(cm.mod2)
> Analysis of Deviance Table (Type II tests)
>
> Response: Freq
> LR Chisq Df Pr(>Chisq)
> B 11026.2 1 < 2.2e-16 ***
> W 7037.5 1 < 2.2e-16 ***
> Age 886.6 8 < 2.2e-16 ***
> B:W 3025.2 1 < 2.2e-16 ***
> B:Age 1130.4 8 < 2.2e-16 ***
> W:Age 332.9 8 < 2.2e-16 ***
> ---
> Signif. codes: 0 ?***? 0.001 ?**? 0.01 ?*? 0.05 ?.? 0.1 ? ? 1
>>
>
> --
> Michael Friendly     Email: friendly AT yorku DOT ca
> Professor, Psychology Dept. & Chair, Quantitative Methods
> York University      Voice: 416 736-2100 x66249 Fax: 416 736-5814
> 4700 Keele Street    Web:   http://www.datavis.ca
> Toronto, ONT  M3J 1P3 CANADA
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From pdalgd at gmail.com  Wed May  7 23:01:38 2014
From: pdalgd at gmail.com (peter dalgaard)
Date: Wed, 7 May 2014 23:01:38 +0200
Subject: [Rd] precedence (was 'historical NA question')
In-Reply-To: <7CC02BBE-3F5D-4A11-87A1-F8B013BD081F@r-project.org>
References: <3dfcdc$gnkvcv@ironport9.mayo.edu>
	<536A5C52.4030907@r-project.org> <536A8B72.802@fhcrc.org>
	<7CC02BBE-3F5D-4A11-87A1-F8B013BD081F@r-project.org>
Message-ID: <AD68281E-B44C-4DB3-9CE5-D513550C84A6@gmail.com>


On 07 May 2014, at 21:52 , Simon Urbanek <simon.urbanek at r-project.org> wrote:

> On May 7, 2014, at 3:37 PM, Herv? Pag?s <hpages at fhcrc.org> wrote:
> 
>> No big deal. These things can be tricky:
>> 
>> https://stat.ethz.ch/pipermail/r-devel/2006-January/036022.html
>> 
>> Sorry I couldn't resist ;-)
>> 
> 
> Yeah, but that's just yet another trip down the rabbit hole - why is -2 parsed as `-`(2) and not a single constant? Is there a way to express a negative constant in R? Hmm? 
> 

It's painful, but

> bquote(.(-2)^2)
-2^2
> eval(bquote(.(-2)^2))
[1] 4
> bquote(.(-2)^2)[[2]]
[1] -2
> mode(bquote(.(-2)^2)[[2]])
[1] "numeric"

The difficulty is that the tokenizer, which recognizes language elements before the parser goes to work on the grammatical structure, is unable to distinguish the -2 in "-2 + 2" from the one in "-2 ^ y". And since constants are generated by the tokenizer, negative ones are not generated. I don't think it is completely out of reach for the parser to recognize the pattern "unary minus a numeric constant" and fold it into a constant of the opposite sign, but I'm not volunteering... (and anyways, it is part of the bigger issue of general constant folding --- I suppose that Luke has a handle on that.)


> 
>> On 05/07/2014 09:16 AM, John Chambers wrote:
>>> On 5/7/14, 5:21 AM, Therneau, Terry M., Ph.D. wrote:
>>>> Hadley asked about the Blue book; my shelf still has the earlier brown
>>>> book
>>>>   Becker and Chambers, 1984, S: An interactive environment for data
>>>> analysis and graphics.
>>> 
>>> Historically interesting, but there was never a guarantee that Version 3
>>> of S (the "blue book") was back-compatible with earlier versions.  We
>>> gave users some help in "getting on the road" to converting, that was
>>> all (see Appendix 4 to the blue book).
>>> 
>>> For that one brief moment, we felt free to innovate.
>>> 
>>> John
>>> 
>>>> 
>>>> The manual page for precedence is
>>>> 
>>>> $               component select
>>>> %x              special operator
>>>> -               unary minus
>>>> :               sequence operator
>>>> ^ **            exponentiation
>>>> * /             mult/div
>>>> + -             add/sub
>>>> < > <= >= == != logical
>>>> !               not
>>>> & |             and/or
>>>> <- ->           assignment
>>>> 
>>>> Terry Therneau
>>>> 
>>>> ______________________________________________
>>>> R-devel at r-project.org mailing list
>>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>> 
>>> ______________________________________________
>>> R-devel at r-project.org mailing list
>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>> 
>> -- 
>> Herv? Pag?s
>> 
>> Program in Computational Biology
>> Division of Public Health Sciences
>> Fred Hutchinson Cancer Research Center
>> 1100 Fairview Ave. N, M1-B514
>> P.O. Box 19024
>> Seattle, WA 98109-1024
>> 
>> E-mail: hpages at fhcrc.org
>> Phone:  (206) 667-5791
>> Fax:    (206) 667-1319
>> 
>> ______________________________________________
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel
>> 
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel

-- 
Peter Dalgaard, Professor,
Center for Statistics, Copenhagen Business School
Solbjerg Plads 3, 2000 Frederiksberg, Denmark
Phone: (+45)38153501
Email: pd.mes at cbs.dk  Priv: PDalgd at gmail.com


From hpages at fhcrc.org  Wed May  7 23:17:35 2014
From: hpages at fhcrc.org (=?windows-1252?Q?Herv=E9_Pag=E8s?=)
Date: Wed, 07 May 2014 14:17:35 -0700
Subject: [Rd] precedence (was 'historical NA question')
In-Reply-To: <7CC02BBE-3F5D-4A11-87A1-F8B013BD081F@r-project.org>
References: <3dfcdc$gnkvcv@ironport9.mayo.edu>
	<536A5C52.4030907@r-project.org> <536A8B72.802@fhcrc.org>
	<7CC02BBE-3F5D-4A11-87A1-F8B013BD081F@r-project.org>
Message-ID: <536AA2EF.9060301@fhcrc.org>

On 05/07/2014 12:52 PM, Simon Urbanek wrote:
> On May 7, 2014, at 3:37 PM, Herv? Pag?s <hpages at fhcrc.org> wrote:
>
>> No big deal. These things can be tricky:
>>
>> https://stat.ethz.ch/pipermail/r-devel/2006-January/036022.html
>>
>> Sorry I couldn't resist ;-)
>>
>
> Yeah, but that's just yet another trip down the rabbit hole - why is -2 parsed as `-`(2) and not a single constant?

You wouldn't want -2 to be parsed as a single constant exactly for
the reason that you wouldn't want -2^2 to return 4. Having -2^2 treated
the same way as -x^2 is a sane feature.

> Is there a way to express a negative constant in R? Hmm?

Maybe some people have some use cases for this (speed ?).
Personally I don't. Of course it would require a special syntax,
something that would probably be as ugly and confusing as the
L suffix used for integer constants (L means long int in C).

H.

>
>
>> On 05/07/2014 09:16 AM, John Chambers wrote:
>>> On 5/7/14, 5:21 AM, Therneau, Terry M., Ph.D. wrote:
>>>> Hadley asked about the Blue book; my shelf still has the earlier brown
>>>> book
>>>>     Becker and Chambers, 1984, S: An interactive environment for data
>>>> analysis and graphics.
>>>
>>> Historically interesting, but there was never a guarantee that Version 3
>>> of S (the "blue book") was back-compatible with earlier versions.  We
>>> gave users some help in "getting on the road" to converting, that was
>>> all (see Appendix 4 to the blue book).
>>>
>>> For that one brief moment, we felt free to innovate.
>>>
>>> John
>>>
>>>>
>>>> The manual page for precedence is
>>>>
>>>> $               component select
>>>> %x              special operator
>>>> -               unary minus
>>>> :               sequence operator
>>>> ^ **            exponentiation
>>>> * /             mult/div
>>>> + -             add/sub
>>>> < > <= >= == != logical
>>>> !               not
>>>> & |             and/or
>>>> <- ->           assignment
>>>>
>>>> Terry Therneau
>>>>
>>>> ______________________________________________
>>>> R-devel at r-project.org mailing list
>>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>>
>>> ______________________________________________
>>> R-devel at r-project.org mailing list
>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>
>> --
>> Herv? Pag?s
>>
>> Program in Computational Biology
>> Division of Public Health Sciences
>> Fred Hutchinson Cancer Research Center
>> 1100 Fairview Ave. N, M1-B514
>> P.O. Box 19024
>> Seattle, WA 98109-1024
>>
>> E-mail: hpages at fhcrc.org
>> Phone:  (206) 667-5791
>> Fax:    (206) 667-1319
>>
>> ______________________________________________
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>
>

-- 
Herv? Pag?s

Program in Computational Biology
Division of Public Health Sciences
Fred Hutchinson Cancer Research Center
1100 Fairview Ave. N, M1-B514
P.O. Box 19024
Seattle, WA 98109-1024

E-mail: hpages at fhcrc.org
Phone:  (206) 667-5791
Fax:    (206) 667-1319


From hpages at fhcrc.org  Wed May  7 23:41:11 2014
From: hpages at fhcrc.org (=?windows-1252?Q?Herv=E9_Pag=E8s?=)
Date: Wed, 07 May 2014 14:41:11 -0700
Subject: [Rd] precedence (was 'historical NA question')
In-Reply-To: <AD68281E-B44C-4DB3-9CE5-D513550C84A6@gmail.com>
References: <3dfcdc$gnkvcv@ironport9.mayo.edu>
	<536A5C52.4030907@r-project.org> <536A8B72.802@fhcrc.org>
	<7CC02BBE-3F5D-4A11-87A1-F8B013BD081F@r-project.org>
	<AD68281E-B44C-4DB3-9CE5-D513550C84A6@gmail.com>
Message-ID: <536AA877.4010301@fhcrc.org>

On 05/07/2014 02:01 PM, peter dalgaard wrote:
>
> On 07 May 2014, at 21:52 , Simon Urbanek <simon.urbanek at r-project.org> wrote:
>
>> On May 7, 2014, at 3:37 PM, Herv? Pag?s <hpages at fhcrc.org> wrote:
>>
>>> No big deal. These things can be tricky:
>>>
>>> https://stat.ethz.ch/pipermail/r-devel/2006-January/036022.html
>>>
>>> Sorry I couldn't resist ;-)
>>>
>>
>> Yeah, but that's just yet another trip down the rabbit hole - why is -2 parsed as `-`(2) and not a single constant? Is there a way to express a negative constant in R? Hmm?
>>
>
> It's painful, but
>
>> bquote(.(-2)^2)
> -2^2
>> eval(bquote(.(-2)^2))
> [1] 4
>> bquote(.(-2)^2)[[2]]
> [1] -2
>> mode(bquote(.(-2)^2)[[2]])
> [1] "numeric"
>
> The difficulty is that the tokenizer, which recognizes language elements before the parser goes to work on the grammatical structure, is unable to distinguish the -2 in "-2 + 2" from the one in "-2 ^ y".

Are you saying that the tokenizer could be made smarter and recognize
"-2" as a token in "-2 ^ y", just because you didn't put a space between
"-" and "2"? So in "-2 ^ y" it would be token, but not in "- 2^y".
An therefore precedence would now depend on whether there is a space
after the minus or not, or something like that? I'm confused.

H.

> And since constants are generated by the tokenizer, negative ones are not generated. I don't think it is completely out of reach for the parser to recognize the pattern "unary minus a numeric constant" and fold it into a constant of the opposite sign, but I'm not volunteering... (and anyways, it is part of the bigger issue of general constant folding --- I suppose that Luke has a handle on that.)
>
>
>>
>>> On 05/07/2014 09:16 AM, John Chambers wrote:
>>>> On 5/7/14, 5:21 AM, Therneau, Terry M., Ph.D. wrote:
>>>>> Hadley asked about the Blue book; my shelf still has the earlier brown
>>>>> book
>>>>>    Becker and Chambers, 1984, S: An interactive environment for data
>>>>> analysis and graphics.
>>>>
>>>> Historically interesting, but there was never a guarantee that Version 3
>>>> of S (the "blue book") was back-compatible with earlier versions.  We
>>>> gave users some help in "getting on the road" to converting, that was
>>>> all (see Appendix 4 to the blue book).
>>>>
>>>> For that one brief moment, we felt free to innovate.
>>>>
>>>> John
>>>>
>>>>>
>>>>> The manual page for precedence is
>>>>>
>>>>> $               component select
>>>>> %x              special operator
>>>>> -               unary minus
>>>>> :               sequence operator
>>>>> ^ **            exponentiation
>>>>> * /             mult/div
>>>>> + -             add/sub
>>>>> < > <= >= == != logical
>>>>> !               not
>>>>> & |             and/or
>>>>> <- ->           assignment
>>>>>
>>>>> Terry Therneau
>>>>>
>>>>> ______________________________________________
>>>>> R-devel at r-project.org mailing list
>>>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>>>
>>>> ______________________________________________
>>>> R-devel at r-project.org mailing list
>>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>>
>>> --
>>> Herv? Pag?s
>>>
>>> Program in Computational Biology
>>> Division of Public Health Sciences
>>> Fred Hutchinson Cancer Research Center
>>> 1100 Fairview Ave. N, M1-B514
>>> P.O. Box 19024
>>> Seattle, WA 98109-1024
>>>
>>> E-mail: hpages at fhcrc.org
>>> Phone:  (206) 667-5791
>>> Fax:    (206) 667-1319
>>>
>>> ______________________________________________
>>> R-devel at r-project.org mailing list
>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>>
>>
>> ______________________________________________
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel
>

-- 
Herv? Pag?s

Program in Computational Biology
Division of Public Health Sciences
Fred Hutchinson Cancer Research Center
1100 Fairview Ave. N, M1-B514
P.O. Box 19024
Seattle, WA 98109-1024

E-mail: hpages at fhcrc.org
Phone:  (206) 667-5791
Fax:    (206) 667-1319


From simon.urbanek at r-project.org  Wed May  7 23:45:23 2014
From: simon.urbanek at r-project.org (Simon Urbanek)
Date: Wed, 7 May 2014 17:45:23 -0400
Subject: [Rd] precedence (was 'historical NA question')
In-Reply-To: <536AA2EF.9060301@fhcrc.org>
References: <3dfcdc$gnkvcv@ironport9.mayo.edu>
	<536A5C52.4030907@r-project.org> <536A8B72.802@fhcrc.org>
	<7CC02BBE-3F5D-4A11-87A1-F8B013BD081F@r-project.org>
	<536AA2EF.9060301@fhcrc.org>
Message-ID: <3FA45660-61A7-498D-B344-69BB2168BA46@r-project.org>


On May 7, 2014, at 5:17 PM, Herv? Pag?s <hpages at fhcrc.org> wrote:

> On 05/07/2014 12:52 PM, Simon Urbanek wrote:
>> On May 7, 2014, at 3:37 PM, Herv? Pag?s <hpages at fhcrc.org> wrote:
>> 
>>> No big deal. These things can be tricky:
>>> 
>>> https://stat.ethz.ch/pipermail/r-devel/2006-January/036022.html
>>> 
>>> Sorry I couldn't resist ;-)
>>> 
>> 
>> Yeah, but that's just yet another trip down the rabbit hole - why is -2 parsed as `-`(2) and not a single constant?
> 
> You wouldn't want -2 to be parsed as a single constant exactly for
> the reason that you wouldn't want -2^2 to return 4. Having -2^2 treated
> the same way as -x^2 is a sane feature.
> 

On what grounds? -2 is one value - negative two - and if you square it, you get four - so that's not even a question of precedence. It's just a matter of interpretation: do you see the constant -2 or do you see the constant 2 with unary minus? When you print -2 you get -2 - and that's not a positive constant with an unary minus - or is it? ;) - aaah, will we ever know ? R is good at hiding that subtlety from us:

> a = quote(-2^2)
> b = bquote(.(-2)^2)
> a
-2^2
> b
-2^2
> eval(a)
[1] -4
> eval(b)
[1] 4


>> Is there a way to express a negative constant in R? Hmm?
> 
> Maybe some people have some use cases for this (speed ?).

Wrong tree ;). You kick-started the trip but failed to follow the path it takes into the depths of the human mind ? :P (or was that computer mind? ;))

Cheers,
Simon



> Personally I don't. Of course it would require a special syntax,
> something that would probably be as ugly and confusing as the
> L suffix used for integer constants (L means long int in C).
> 
> H.
> 
>> 
>> 
>>> On 05/07/2014 09:16 AM, John Chambers wrote:
>>>> On 5/7/14, 5:21 AM, Therneau, Terry M., Ph.D. wrote:
>>>>> Hadley asked about the Blue book; my shelf still has the earlier brown
>>>>> book
>>>>>    Becker and Chambers, 1984, S: An interactive environment for data
>>>>> analysis and graphics.
>>>> 
>>>> Historically interesting, but there was never a guarantee that Version 3
>>>> of S (the "blue book") was back-compatible with earlier versions.  We
>>>> gave users some help in "getting on the road" to converting, that was
>>>> all (see Appendix 4 to the blue book).
>>>> 
>>>> For that one brief moment, we felt free to innovate.
>>>> 
>>>> John
>>>> 
>>>>> 
>>>>> The manual page for precedence is
>>>>> 
>>>>> $               component select
>>>>> %x              special operator
>>>>> -               unary minus
>>>>> :               sequence operator
>>>>> ^ **            exponentiation
>>>>> * /             mult/div
>>>>> + -             add/sub
>>>>> < > <= >= == != logical
>>>>> !               not
>>>>> & |             and/or
>>>>> <- ->           assignment
>>>>> 
>>>>> Terry Therneau
>>>>> 
>>>>> ______________________________________________
>>>>> R-devel at r-project.org mailing list
>>>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>>> 
>>>> ______________________________________________
>>>> R-devel at r-project.org mailing list
>>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>> 
>>> --
>>> Herv? Pag?s
>>> 
>>> Program in Computational Biology
>>> Division of Public Health Sciences
>>> Fred Hutchinson Cancer Research Center
>>> 1100 Fairview Ave. N, M1-B514
>>> P.O. Box 19024
>>> Seattle, WA 98109-1024
>>> 
>>> E-mail: hpages at fhcrc.org
>>> Phone:  (206) 667-5791
>>> Fax:    (206) 667-1319
>>> 
>>> ______________________________________________
>>> R-devel at r-project.org mailing list
>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>> 
>> 
> 
> -- 
> Herv? Pag?s
> 
> Program in Computational Biology
> Division of Public Health Sciences
> Fred Hutchinson Cancer Research Center
> 1100 Fairview Ave. N, M1-B514
> P.O. Box 19024
> Seattle, WA 98109-1024
> 
> E-mail: hpages at fhcrc.org
> Phone:  (206) 667-5791
> Fax:    (206) 667-1319
> 


From simon.urbanek at r-project.org  Wed May  7 23:55:14 2014
From: simon.urbanek at r-project.org (Simon Urbanek)
Date: Wed, 7 May 2014 17:55:14 -0400
Subject: [Rd] precedence (was 'historical NA question')
In-Reply-To: <536AA877.4010301@fhcrc.org>
References: <3dfcdc$gnkvcv@ironport9.mayo.edu>
	<536A5C52.4030907@r-project.org> <536A8B72.802@fhcrc.org>
	<7CC02BBE-3F5D-4A11-87A1-F8B013BD081F@r-project.org>
	<AD68281E-B44C-4DB3-9CE5-D513550C84A6@gmail.com>
	<536AA877.4010301@fhcrc.org>
Message-ID: <8D2277DD-434F-4FD4-B866-4EC8F1441902@r-project.org>


On May 7, 2014, at 5:41 PM, Herv? Pag?s <hpages at fhcrc.org> wrote:

> On 05/07/2014 02:01 PM, peter dalgaard wrote:
>> 
>> On 07 May 2014, at 21:52 , Simon Urbanek <simon.urbanek at r-project.org> wrote:
>> 
>>> On May 7, 2014, at 3:37 PM, Herv? Pag?s <hpages at fhcrc.org> wrote:
>>> 
>>>> No big deal. These things can be tricky:
>>>> 
>>>> https://stat.ethz.ch/pipermail/r-devel/2006-January/036022.html
>>>> 
>>>> Sorry I couldn't resist ;-)
>>>> 
>>> 
>>> Yeah, but that's just yet another trip down the rabbit hole - why is -2 parsed as `-`(2) and not a single constant? Is there a way to express a negative constant in R? Hmm?
>>> 
>> 
>> It's painful, but
>> 
>>> bquote(.(-2)^2)
>> -2^2
>>> eval(bquote(.(-2)^2))
>> [1] 4
>>> bquote(.(-2)^2)[[2]]
>> [1] -2
>>> mode(bquote(.(-2)^2)[[2]])
>> [1] "numeric"
>> 
>> The difficulty is that the tokenizer, which recognizes language elements before the parser goes to work on the grammatical structure, is unable to distinguish the -2 in "-2 + 2" from the one in "-2 ^ y".
> 
> Are you saying that the tokenizer could be made smarter and recognize
> "-2" as a token in "-2 ^ y", just because you didn't put a space between
> "-" and "2"? So in "-2 ^ y" it would be token, but not in "- 2^y".
> An therefore precedence would now depend on whether there is a space
> after the minus or not, or something like that? I'm confused.
> 

Nope, precedence would not change at all. "-2" and "- 2" are two different things - in case you didn't realize that spaces are important, try "a<-2" vs "a< -2". So, again, if -2 is a value then there is no precedence issue, since you have only operator in  "-2 ^ y" namely "^". In "- 2 ^ y" you have two operators, so precedence matters.

Cheers,
Simon



> H.
> 
>> And since constants are generated by the tokenizer, negative ones are not generated. I don't think it is completely out of reach for the parser to recognize the pattern "unary minus a numeric constant" and fold it into a constant of the opposite sign, but I'm not volunteering... (and anyways, it is part of the bigger issue of general constant folding --- I suppose that Luke has a handle on that.)
>> 
>> 
>>> 
>>>> On 05/07/2014 09:16 AM, John Chambers wrote:
>>>>> On 5/7/14, 5:21 AM, Therneau, Terry M., Ph.D. wrote:
>>>>>> Hadley asked about the Blue book; my shelf still has the earlier brown
>>>>>> book
>>>>>>   Becker and Chambers, 1984, S: An interactive environment for data
>>>>>> analysis and graphics.
>>>>> 
>>>>> Historically interesting, but there was never a guarantee that Version 3
>>>>> of S (the "blue book") was back-compatible with earlier versions.  We
>>>>> gave users some help in "getting on the road" to converting, that was
>>>>> all (see Appendix 4 to the blue book).
>>>>> 
>>>>> For that one brief moment, we felt free to innovate.
>>>>> 
>>>>> John
>>>>> 
>>>>>> 
>>>>>> The manual page for precedence is
>>>>>> 
>>>>>> $               component select
>>>>>> %x              special operator
>>>>>> -               unary minus
>>>>>> :               sequence operator
>>>>>> ^ **            exponentiation
>>>>>> * /             mult/div
>>>>>> + -             add/sub
>>>>>> < > <= >= == != logical
>>>>>> !               not
>>>>>> & |             and/or
>>>>>> <- ->           assignment
>>>>>> 
>>>>>> Terry Therneau
>>>>>> 
>>>>>> ______________________________________________
>>>>>> R-devel at r-project.org mailing list
>>>>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>>>> 
>>>>> ______________________________________________
>>>>> R-devel at r-project.org mailing list
>>>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>>> 
>>>> --
>>>> Herv? Pag?s
>>>> 
>>>> Program in Computational Biology
>>>> Division of Public Health Sciences
>>>> Fred Hutchinson Cancer Research Center
>>>> 1100 Fairview Ave. N, M1-B514
>>>> P.O. Box 19024
>>>> Seattle, WA 98109-1024
>>>> 
>>>> E-mail: hpages at fhcrc.org
>>>> Phone:  (206) 667-5791
>>>> Fax:    (206) 667-1319
>>>> 
>>>> ______________________________________________
>>>> R-devel at r-project.org mailing list
>>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>>> 
>>> 
>>> ______________________________________________
>>> R-devel at r-project.org mailing list
>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>> 
> 
> -- 
> Herv? Pag?s
> 
> Program in Computational Biology
> Division of Public Health Sciences
> Fred Hutchinson Cancer Research Center
> 1100 Fairview Ave. N, M1-B514
> P.O. Box 19024
> Seattle, WA 98109-1024
> 
> E-mail: hpages at fhcrc.org
> Phone:  (206) 667-5791
> Fax:    (206) 667-1319
> 


From murdoch.duncan at gmail.com  Thu May  8 00:00:54 2014
From: murdoch.duncan at gmail.com (Duncan Murdoch)
Date: Wed, 07 May 2014 18:00:54 -0400
Subject: [Rd] precedence (was 'historical NA question')
In-Reply-To: <8D2277DD-434F-4FD4-B866-4EC8F1441902@r-project.org>
References: <3dfcdc$gnkvcv@ironport9.mayo.edu>	<536A5C52.4030907@r-project.org>
	<536A8B72.802@fhcrc.org>	<7CC02BBE-3F5D-4A11-87A1-F8B013BD081F@r-project.org>	<AD68281E-B44C-4DB3-9CE5-D513550C84A6@gmail.com>	<536AA877.4010301@fhcrc.org>
	<8D2277DD-434F-4FD4-B866-4EC8F1441902@r-project.org>
Message-ID: <536AAD16.4090608@gmail.com>

On 07/05/2014, 5:55 PM, Simon Urbanek wrote:
>
> On May 7, 2014, at 5:41 PM, Herv? Pag?s <hpages at fhcrc.org> wrote:
>
>> On 05/07/2014 02:01 PM, peter dalgaard wrote:
>>>
>>> On 07 May 2014, at 21:52 , Simon Urbanek <simon.urbanek at r-project.org> wrote:
>>>
>>>> On May 7, 2014, at 3:37 PM, Herv? Pag?s <hpages at fhcrc.org> wrote:
>>>>
>>>>> No big deal. These things can be tricky:
>>>>>
>>>>> https://stat.ethz.ch/pipermail/r-devel/2006-January/036022.html
>>>>>
>>>>> Sorry I couldn't resist ;-)
>>>>>
>>>>
>>>> Yeah, but that's just yet another trip down the rabbit hole - why is -2 parsed as `-`(2) and not a single constant? Is there a way to express a negative constant in R? Hmm?
>>>>
>>>
>>> It's painful, but
>>>
>>>> bquote(.(-2)^2)
>>> -2^2
>>>> eval(bquote(.(-2)^2))
>>> [1] 4
>>>> bquote(.(-2)^2)[[2]]
>>> [1] -2
>>>> mode(bquote(.(-2)^2)[[2]])
>>> [1] "numeric"
>>>
>>> The difficulty is that the tokenizer, which recognizes language elements before the parser goes to work on the grammatical structure, is unable to distinguish the -2 in "-2 + 2" from the one in "-2 ^ y".
>>
>> Are you saying that the tokenizer could be made smarter and recognize
>> "-2" as a token in "-2 ^ y", just because you didn't put a space between
>> "-" and "2"? So in "-2 ^ y" it would be token, but not in "- 2^y".
>> An therefore precedence would now depend on whether there is a space
>> after the minus or not, or something like that? I'm confused.
>>
>
> Nope, precedence would not change at all. "-2" and "- 2" are two different things - in case you didn't realize that spaces are important, try "a<-2" vs "a< -2". So, again, if -2 is a value then there is no precedence issue, since you have only operator in  "-2 ^ y" namely "^". In "- 2 ^ y" you have two operators, so precedence matters.

Is there a language where "- 2^2" gives a different answer than "-2^2"? 
  (Substitute ** or any other exponentiation operator for ^ if you 
like.)  This is important, because I'd like to avoid ever attempting any 
important calculation in that language.

Duncan Murdoch

> Cheers,
> Simon
>
>
>
>> H.
>>
>>> And since constants are generated by the tokenizer, negative ones are not generated. I don't think it is completely out of reach for the parser to recognize the pattern "unary minus a numeric constant" and fold it into a constant of the opposite sign, but I'm not volunteering... (and anyways, it is part of the bigger issue of general constant folding --- I suppose that Luke has a handle on that.)
>>>
>>>
>>>>
>>>>> On 05/07/2014 09:16 AM, John Chambers wrote:
>>>>>> On 5/7/14, 5:21 AM, Therneau, Terry M., Ph.D. wrote:
>>>>>>> Hadley asked about the Blue book; my shelf still has the earlier brown
>>>>>>> book
>>>>>>>    Becker and Chambers, 1984, S: An interactive environment for data
>>>>>>> analysis and graphics.
>>>>>>
>>>>>> Historically interesting, but there was never a guarantee that Version 3
>>>>>> of S (the "blue book") was back-compatible with earlier versions.  We
>>>>>> gave users some help in "getting on the road" to converting, that was
>>>>>> all (see Appendix 4 to the blue book).
>>>>>>
>>>>>> For that one brief moment, we felt free to innovate.
>>>>>>
>>>>>> John
>>>>>>
>>>>>>>
>>>>>>> The manual page for precedence is
>>>>>>>
>>>>>>> $               component select
>>>>>>> %x              special operator
>>>>>>> -               unary minus
>>>>>>> :               sequence operator
>>>>>>> ^ **            exponentiation
>>>>>>> * /             mult/div
>>>>>>> + -             add/sub
>>>>>>> < > <= >= == != logical
>>>>>>> !               not
>>>>>>> & |             and/or
>>>>>>> <- ->           assignment
>>>>>>>
>>>>>>> Terry Therneau
>>>>>>>
>>>>>>> ______________________________________________
>>>>>>> R-devel at r-project.org mailing list
>>>>>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>>>>>
>>>>>> ______________________________________________
>>>>>> R-devel at r-project.org mailing list
>>>>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>>>>
>>>>> --
>>>>> Herv? Pag?s
>>>>>
>>>>> Program in Computational Biology
>>>>> Division of Public Health Sciences
>>>>> Fred Hutchinson Cancer Research Center
>>>>> 1100 Fairview Ave. N, M1-B514
>>>>> P.O. Box 19024
>>>>> Seattle, WA 98109-1024
>>>>>
>>>>> E-mail: hpages at fhcrc.org
>>>>> Phone:  (206) 667-5791
>>>>> Fax:    (206) 667-1319
>>>>>
>>>>> ______________________________________________
>>>>> R-devel at r-project.org mailing list
>>>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>>>>
>>>>
>>>> ______________________________________________
>>>> R-devel at r-project.org mailing list
>>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>>
>>
>> --
>> Herv? Pag?s
>>
>> Program in Computational Biology
>> Division of Public Health Sciences
>> Fred Hutchinson Cancer Research Center
>> 1100 Fairview Ave. N, M1-B514
>> P.O. Box 19024
>> Seattle, WA 98109-1024
>>
>> E-mail: hpages at fhcrc.org
>> Phone:  (206) 667-5791
>> Fax:    (206) 667-1319
>>
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>


From hpages at fhcrc.org  Thu May  8 00:47:45 2014
From: hpages at fhcrc.org (=?windows-1252?Q?Herv=E9_Pag=E8s?=)
Date: Wed, 07 May 2014 15:47:45 -0700
Subject: [Rd] precedence (was 'historical NA question')
In-Reply-To: <8D2277DD-434F-4FD4-B866-4EC8F1441902@r-project.org>
References: <3dfcdc$gnkvcv@ironport9.mayo.edu>
	<536A5C52.4030907@r-project.org> <536A8B72.802@fhcrc.org>
	<7CC02BBE-3F5D-4A11-87A1-F8B013BD081F@r-project.org>
	<AD68281E-B44C-4DB3-9CE5-D513550C84A6@gmail.com>
	<536AA877.4010301@fhcrc.org>
	<8D2277DD-434F-4FD4-B866-4EC8F1441902@r-project.org>
Message-ID: <536AB811.90500@fhcrc.org>



On 05/07/2014 02:55 PM, Simon Urbanek wrote:
>
> On May 7, 2014, at 5:41 PM, Herv? Pag?s <hpages at fhcrc.org> wrote:
>
>> On 05/07/2014 02:01 PM, peter dalgaard wrote:
>>>
>>> On 07 May 2014, at 21:52 , Simon Urbanek <simon.urbanek at r-project.org> wrote:
>>>
>>>> On May 7, 2014, at 3:37 PM, Herv? Pag?s <hpages at fhcrc.org> wrote:
>>>>
>>>>> No big deal. These things can be tricky:
>>>>>
>>>>> https://stat.ethz.ch/pipermail/r-devel/2006-January/036022.html
>>>>>
>>>>> Sorry I couldn't resist ;-)
>>>>>
>>>>
>>>> Yeah, but that's just yet another trip down the rabbit hole - why is -2 parsed as `-`(2) and not a single constant? Is there a way to express a negative constant in R? Hmm?
>>>>
>>>
>>> It's painful, but
>>>
>>>> bquote(.(-2)^2)
>>> -2^2
>>>> eval(bquote(.(-2)^2))
>>> [1] 4
>>>> bquote(.(-2)^2)[[2]]
>>> [1] -2
>>>> mode(bquote(.(-2)^2)[[2]])
>>> [1] "numeric"
>>>
>>> The difficulty is that the tokenizer, which recognizes language elements before the parser goes to work on the grammatical structure, is unable to distinguish the -2 in "-2 + 2" from the one in "-2 ^ y".
>>
>> Are you saying that the tokenizer could be made smarter and recognize
>> "-2" as a token in "-2 ^ y", just because you didn't put a space between
>> "-" and "2"? So in "-2 ^ y" it would be token, but not in "- 2^y".
>> An therefore precedence would now depend on whether there is a space
>> after the minus or not, or something like that? I'm confused.
>>
>
> Nope, precedence would not change at all. "-2" and "- 2" are two different things - in case you didn't realize that spaces are important, try "a<-2" vs "a< -2".

Yes, there is an precedent where space matters. I just hope you're not
saying you'd like to see that repeated for "-2" vs "- 2".

> So, again, if -2 is a value then there is no precedence issue, since you have only operator in  "-2 ^ y" namely "^".

If you make -2 a value, then yes you *effectively* change precedence
from a user point of view. You can be picky about terminology and argue
that it's not an "operator precedence" issue because there is no
operator involved but that doesn't change the fact that now it's a very
bad idea. I can't believe serious programmers are discussing ways to
make -2^2 return 4.

H.

> In "- 2 ^ y" you have two operators, so precedence matters.
>
> Cheers,
> Simon
>
>
>
>> H.
>>
>>> And since constants are generated by the tokenizer, negative ones are not generated. I don't think it is completely out of reach for the parser to recognize the pattern "unary minus a numeric constant" and fold it into a constant of the opposite sign, but I'm not volunteering... (and anyways, it is part of the bigger issue of general constant folding --- I suppose that Luke has a handle on that.)
>>>
>>>
>>>>
>>>>> On 05/07/2014 09:16 AM, John Chambers wrote:
>>>>>> On 5/7/14, 5:21 AM, Therneau, Terry M., Ph.D. wrote:
>>>>>>> Hadley asked about the Blue book; my shelf still has the earlier brown
>>>>>>> book
>>>>>>>    Becker and Chambers, 1984, S: An interactive environment for data
>>>>>>> analysis and graphics.
>>>>>>
>>>>>> Historically interesting, but there was never a guarantee that Version 3
>>>>>> of S (the "blue book") was back-compatible with earlier versions.  We
>>>>>> gave users some help in "getting on the road" to converting, that was
>>>>>> all (see Appendix 4 to the blue book).
>>>>>>
>>>>>> For that one brief moment, we felt free to innovate.
>>>>>>
>>>>>> John
>>>>>>
>>>>>>>
>>>>>>> The manual page for precedence is
>>>>>>>
>>>>>>> $               component select
>>>>>>> %x              special operator
>>>>>>> -               unary minus
>>>>>>> :               sequence operator
>>>>>>> ^ **            exponentiation
>>>>>>> * /             mult/div
>>>>>>> + -             add/sub
>>>>>>> < > <= >= == != logical
>>>>>>> !               not
>>>>>>> & |             and/or
>>>>>>> <- ->           assignment
>>>>>>>
>>>>>>> Terry Therneau
>>>>>>>
>>>>>>> ______________________________________________
>>>>>>> R-devel at r-project.org mailing list
>>>>>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>>>>>
>>>>>> ______________________________________________
>>>>>> R-devel at r-project.org mailing list
>>>>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>>>>
>>>>> --
>>>>> Herv? Pag?s
>>>>>
>>>>> Program in Computational Biology
>>>>> Division of Public Health Sciences
>>>>> Fred Hutchinson Cancer Research Center
>>>>> 1100 Fairview Ave. N, M1-B514
>>>>> P.O. Box 19024
>>>>> Seattle, WA 98109-1024
>>>>>
>>>>> E-mail: hpages at fhcrc.org
>>>>> Phone:  (206) 667-5791
>>>>> Fax:    (206) 667-1319
>>>>>
>>>>> ______________________________________________
>>>>> R-devel at r-project.org mailing list
>>>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>>>>
>>>>
>>>> ______________________________________________
>>>> R-devel at r-project.org mailing list
>>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>>
>>
>> --
>> Herv? Pag?s
>>
>> Program in Computational Biology
>> Division of Public Health Sciences
>> Fred Hutchinson Cancer Research Center
>> 1100 Fairview Ave. N, M1-B514
>> P.O. Box 19024
>> Seattle, WA 98109-1024
>>
>> E-mail: hpages at fhcrc.org
>> Phone:  (206) 667-5791
>> Fax:    (206) 667-1319
>>
>

-- 
Herv? Pag?s

Program in Computational Biology
Division of Public Health Sciences
Fred Hutchinson Cancer Research Center
1100 Fairview Ave. N, M1-B514
P.O. Box 19024
Seattle, WA 98109-1024

E-mail: hpages at fhcrc.org
Phone:  (206) 667-5791
Fax:    (206) 667-1319


From hpages at fhcrc.org  Thu May  8 01:10:47 2014
From: hpages at fhcrc.org (=?windows-1252?Q?Herv=E9_Pag=E8s?=)
Date: Wed, 07 May 2014 16:10:47 -0700
Subject: [Rd] precedence (was 'historical NA question')
In-Reply-To: <3FA45660-61A7-498D-B344-69BB2168BA46@r-project.org>
References: <3dfcdc$gnkvcv@ironport9.mayo.edu>
	<536A5C52.4030907@r-project.org> <536A8B72.802@fhcrc.org>
	<7CC02BBE-3F5D-4A11-87A1-F8B013BD081F@r-project.org>
	<536AA2EF.9060301@fhcrc.org>
	<3FA45660-61A7-498D-B344-69BB2168BA46@r-project.org>
Message-ID: <536ABD77.3000506@fhcrc.org>

On 05/07/2014 02:45 PM, Simon Urbanek wrote:
>
> On May 7, 2014, at 5:17 PM, Herv? Pag?s <hpages at fhcrc.org> wrote:
>
>> On 05/07/2014 12:52 PM, Simon Urbanek wrote:
>>> On May 7, 2014, at 3:37 PM, Herv? Pag?s <hpages at fhcrc.org> wrote:
>>>
>>>> No big deal. These things can be tricky:
>>>>
>>>> https://stat.ethz.ch/pipermail/r-devel/2006-January/036022.html
>>>>
>>>> Sorry I couldn't resist ;-)
>>>>
>>>
>>> Yeah, but that's just yet another trip down the rabbit hole - why is -2 parsed as `-`(2) and not a single constant?
>>
>> You wouldn't want -2 to be parsed as a single constant exactly for
>> the reason that you wouldn't want -2^2 to return 4. Having -2^2 treated
>> the same way as -x^2 is a sane feature.
>>
>
> On what grounds?

The last few centuries of mathematics. Some clever people have been
thinking about defining the rules for writing concise algebraic
expressions that do not leave room for interpretation/ambiguities.

> -2 is one value - negative two - and if you square it, you get four - so that's not even a question of precedence. It's just a matter of interpretation: do you see the constant -2 or do you see the constant 2 with unary minus?

In -2^2, there is no question I see the latter. I'm a little biased
though, because, you know, I have some respect and admiration for the
tradition.

H.

> When you print -2 you get -2 - and that's not a positive constant with an unary minus - or is it? ;) - aaah, will we ever know ? R is good at hiding that subtlety from us:
>
>> a = quote(-2^2)
>> b = bquote(.(-2)^2)
>> a
> -2^2
>> b
> -2^2
>> eval(a)
> [1] -4
>> eval(b)
> [1] 4
>
>
>>> Is there a way to express a negative constant in R? Hmm?
>>
>> Maybe some people have some use cases for this (speed ?).
>
> Wrong tree ;). You kick-started the trip but failed to follow the path it takes into the depths of the human mind ? :P (or was that computer mind? ;))
>
> Cheers,
> Simon
>
>
>
>> Personally I don't. Of course it would require a special syntax,
>> something that would probably be as ugly and confusing as the
>> L suffix used for integer constants (L means long int in C).
>>
>> H.
>>
>>>
>>>
>>>> On 05/07/2014 09:16 AM, John Chambers wrote:
>>>>> On 5/7/14, 5:21 AM, Therneau, Terry M., Ph.D. wrote:
>>>>>> Hadley asked about the Blue book; my shelf still has the earlier brown
>>>>>> book
>>>>>>     Becker and Chambers, 1984, S: An interactive environment for data
>>>>>> analysis and graphics.
>>>>>
>>>>> Historically interesting, but there was never a guarantee that Version 3
>>>>> of S (the "blue book") was back-compatible with earlier versions.  We
>>>>> gave users some help in "getting on the road" to converting, that was
>>>>> all (see Appendix 4 to the blue book).
>>>>>
>>>>> For that one brief moment, we felt free to innovate.
>>>>>
>>>>> John
>>>>>
>>>>>>
>>>>>> The manual page for precedence is
>>>>>>
>>>>>> $               component select
>>>>>> %x              special operator
>>>>>> -               unary minus
>>>>>> :               sequence operator
>>>>>> ^ **            exponentiation
>>>>>> * /             mult/div
>>>>>> + -             add/sub
>>>>>> < > <= >= == != logical
>>>>>> !               not
>>>>>> & |             and/or
>>>>>> <- ->           assignment
>>>>>>
>>>>>> Terry Therneau
>>>>>>
>>>>>> ______________________________________________
>>>>>> R-devel at r-project.org mailing list
>>>>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>>>>
>>>>> ______________________________________________
>>>>> R-devel at r-project.org mailing list
>>>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>>>
>>>> --
>>>> Herv? Pag?s
>>>>
>>>> Program in Computational Biology
>>>> Division of Public Health Sciences
>>>> Fred Hutchinson Cancer Research Center
>>>> 1100 Fairview Ave. N, M1-B514
>>>> P.O. Box 19024
>>>> Seattle, WA 98109-1024
>>>>
>>>> E-mail: hpages at fhcrc.org
>>>> Phone:  (206) 667-5791
>>>> Fax:    (206) 667-1319
>>>>
>>>> ______________________________________________
>>>> R-devel at r-project.org mailing list
>>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>>>
>>>
>>
>> --
>> Herv? Pag?s
>>
>> Program in Computational Biology
>> Division of Public Health Sciences
>> Fred Hutchinson Cancer Research Center
>> 1100 Fairview Ave. N, M1-B514
>> P.O. Box 19024
>> Seattle, WA 98109-1024
>>
>> E-mail: hpages at fhcrc.org
>> Phone:  (206) 667-5791
>> Fax:    (206) 667-1319
>>
>

-- 
Herv? Pag?s

Program in Computational Biology
Division of Public Health Sciences
Fred Hutchinson Cancer Research Center
1100 Fairview Ave. N, M1-B514
P.O. Box 19024
Seattle, WA 98109-1024

E-mail: hpages at fhcrc.org
Phone:  (206) 667-5791
Fax:    (206) 667-1319


From hpages at fhcrc.org  Thu May  8 01:54:55 2014
From: hpages at fhcrc.org (=?windows-1252?Q?Herv=E9_Pag=E8s?=)
Date: Wed, 07 May 2014 16:54:55 -0700
Subject: [Rd] precedence (was 'historical NA question')
In-Reply-To: <3FA45660-61A7-498D-B344-69BB2168BA46@r-project.org>
References: <3dfcdc$gnkvcv@ironport9.mayo.edu>
	<536A5C52.4030907@r-project.org> <536A8B72.802@fhcrc.org>
	<7CC02BBE-3F5D-4A11-87A1-F8B013BD081F@r-project.org>
	<536AA2EF.9060301@fhcrc.org>
	<3FA45660-61A7-498D-B344-69BB2168BA46@r-project.org>
Message-ID: <536AC7CF.40603@fhcrc.org>



On 05/07/2014 02:45 PM, Simon Urbanek wrote:
>
> On May 7, 2014, at 5:17 PM, Herv? Pag?s <hpages at fhcrc.org> wrote:
>
>> On 05/07/2014 12:52 PM, Simon Urbanek wrote:
>>> On May 7, 2014, at 3:37 PM, Herv? Pag?s <hpages at fhcrc.org> wrote:
>>>
>>>> No big deal. These things can be tricky:
>>>>
>>>> https://stat.ethz.ch/pipermail/r-devel/2006-January/036022.html
>>>>
>>>> Sorry I couldn't resist ;-)
>>>>
>>>
>>> Yeah, but that's just yet another trip down the rabbit hole - why is -2 parsed as `-`(2) and not a single constant?
>>
>> You wouldn't want -2 to be parsed as a single constant exactly for
>> the reason that you wouldn't want -2^2 to return 4. Having -2^2 treated
>> the same way as -x^2 is a sane feature.
>>
>
> On what grounds? -2 is one value - negative two - and if you square it, you get four - so that's not even a question of precedence. It's just a matter of interpretation: do you see the constant -2 or do you see the constant 2 with unary minus? When you print -2 you get -2 - and that's not a positive constant with an unary minus - or is it? ;) - aaah, will we ever know ? R is good at hiding that subtlety from us:
>
>> a = quote(-2^2)
>> b = bquote(.(-2)^2)
>> a
> -2^2
>> b
> -2^2
>> eval(a)
> [1] -4
>> eval(b)
> [1] 4
>
>
>>> Is there a way to express a negative constant in R? Hmm?
>>
>> Maybe some people have some use cases for this (speed ?).
>
> Wrong tree ;). You kick-started the trip but failed to follow the path it takes into the depths of the human mind ? :P (or was that computer mind? ;))

BTW I don't see anything deep here, except maybe for the rabbit hole
you've put yourself in. Just sayin'...

H.

>
> Cheers,
> Simon
>
>
>
>> Personally I don't. Of course it would require a special syntax,
>> something that would probably be as ugly and confusing as the
>> L suffix used for integer constants (L means long int in C).
>>
>> H.
>>
>>>
>>>
>>>> On 05/07/2014 09:16 AM, John Chambers wrote:
>>>>> On 5/7/14, 5:21 AM, Therneau, Terry M., Ph.D. wrote:
>>>>>> Hadley asked about the Blue book; my shelf still has the earlier brown
>>>>>> book
>>>>>>     Becker and Chambers, 1984, S: An interactive environment for data
>>>>>> analysis and graphics.
>>>>>
>>>>> Historically interesting, but there was never a guarantee that Version 3
>>>>> of S (the "blue book") was back-compatible with earlier versions.  We
>>>>> gave users some help in "getting on the road" to converting, that was
>>>>> all (see Appendix 4 to the blue book).
>>>>>
>>>>> For that one brief moment, we felt free to innovate.
>>>>>
>>>>> John
>>>>>
>>>>>>
>>>>>> The manual page for precedence is
>>>>>>
>>>>>> $               component select
>>>>>> %x              special operator
>>>>>> -               unary minus
>>>>>> :               sequence operator
>>>>>> ^ **            exponentiation
>>>>>> * /             mult/div
>>>>>> + -             add/sub
>>>>>> < > <= >= == != logical
>>>>>> !               not
>>>>>> & |             and/or
>>>>>> <- ->           assignment
>>>>>>
>>>>>> Terry Therneau
>>>>>>
>>>>>> ______________________________________________
>>>>>> R-devel at r-project.org mailing list
>>>>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>>>>
>>>>> ______________________________________________
>>>>> R-devel at r-project.org mailing list
>>>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>>>
>>>> --
>>>> Herv? Pag?s
>>>>
>>>> Program in Computational Biology
>>>> Division of Public Health Sciences
>>>> Fred Hutchinson Cancer Research Center
>>>> 1100 Fairview Ave. N, M1-B514
>>>> P.O. Box 19024
>>>> Seattle, WA 98109-1024
>>>>
>>>> E-mail: hpages at fhcrc.org
>>>> Phone:  (206) 667-5791
>>>> Fax:    (206) 667-1319
>>>>
>>>> ______________________________________________
>>>> R-devel at r-project.org mailing list
>>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>>>
>>>
>>
>> --
>> Herv? Pag?s
>>
>> Program in Computational Biology
>> Division of Public Health Sciences
>> Fred Hutchinson Cancer Research Center
>> 1100 Fairview Ave. N, M1-B514
>> P.O. Box 19024
>> Seattle, WA 98109-1024
>>
>> E-mail: hpages at fhcrc.org
>> Phone:  (206) 667-5791
>> Fax:    (206) 667-1319
>>
>

-- 
Herv? Pag?s

Program in Computational Biology
Division of Public Health Sciences
Fred Hutchinson Cancer Research Center
1100 Fairview Ave. N, M1-B514
P.O. Box 19024
Seattle, WA 98109-1024

E-mail: hpages at fhcrc.org
Phone:  (206) 667-5791
Fax:    (206) 667-1319


From rh at knut-krueger.de  Thu May  8 08:15:03 2014
From: rh at knut-krueger.de (Knut Krueger)
Date: Thu, 08 May 2014 08:15:03 +0200
Subject: [Rd] checking dependencies in R code ... WARNING
Message-ID: <536B20E7.3080103@knut-krueger.de>

I am trying to update an unsupported package and got the warning:

* checking dependencies in R code ... WARNING
'library' or 'require' calls not declared from: 'Hmisc' 'R2HTML' 'tcltk'
Missing or unexported object: 'utils::.win32consoleCompletion'
See the information on DESCRIPTION files in the chapter 'Creating R
packages' of the 'Writing R Extensions' manual.


Is it only an error in the description file or in the code?

Regards Knut


From tobias.verbeke at openanalytics.eu  Thu May  8 08:35:49 2014
From: tobias.verbeke at openanalytics.eu (Tobias Verbeke)
Date: Thu, 8 May 2014 08:35:49 +0200 (CEST)
Subject: [Rd] checking dependencies in R code ... WARNING
In-Reply-To: <536B20E7.3080103@knut-krueger.de>
References: <536B20E7.3080103@knut-krueger.de>
Message-ID: <1877523548.47233.1399530949612.JavaMail.zimbra@openanalytics.eu>

Hi Knut, 

The code will contain library or require statements, which
do not belong there, but need to replaced by specifying the
dependencies on these packages in the DESCRIPTION file 
(Depends / Imports field). For imports you also need to 
make sure the NAMESPACE file contains the intended statements.

See

http://cran.r-project.org/doc/manuals/R-exts.html#Package-Dependencies

Best,
Tobias

----- Original Message -----
> From: "Knut Krueger" <rh at knut-krueger.de>
> To: "R Devel List" <r-devel at r-project.org>
> Sent: Thursday, May 8, 2014 8:15:03 AM
> Subject: [Rd] checking dependencies in R code ... WARNING
> 
> I am trying to update an unsupported package and got the warning:
> 
> * checking dependencies in R code ... WARNING
> 'library' or 'require' calls not declared from: 'Hmisc' 'R2HTML' 'tcltk'
> Missing or unexported object: 'utils::.win32consoleCompletion'
> See the information on DESCRIPTION files in the chapter 'Creating R
> packages' of the 'Writing R Extensions' manual.
> 
> 
> Is it only an error in the description file or in the code?
> 
> Regards Knut
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>


From ripley at stats.ox.ac.uk  Thu May  8 08:38:57 2014
From: ripley at stats.ox.ac.uk (Prof Brian Ripley)
Date: Thu, 08 May 2014 07:38:57 +0100
Subject: [Rd] historical significance of Pr(>Chisq) < 2.2e-16
In-Reply-To: <CAF8bMcZRA=Jo+ozuWBzWLN165GXY93ycXLSYO4ABEAvqaGs_Cw@mail.gmail.com>
References: <536A3CE8.2010909@yorku.ca>
	<CAF8bMcZRA=Jo+ozuWBzWLN165GXY93ycXLSYO4ABEAvqaGs_Cw@mail.gmail.com>
Message-ID: <536B2681.6020609@stats.ox.ac.uk>

On 07/05/2014 21:41, William Dunlap wrote:
> It may come a time before the pchisq() function had the lower.tail
> argument.  In those days you had the compute the upper tail as
> 1-pchisq(x2, df).  For any eps<2.2e-16 (.Machine$double.eps), 1-eps==1
> so 1-(1-eps)==0 so you would get, e.g.,
>    > 1-pchisq(100,2)
>    [1] 0
> and people would say 'but the p-value is not 0: it may be very small
> but not zero' so anova's printing functions would say "<2.2e-16" to
> mollify them.
>
> Now we have the lower.tail=FALSE argument
>    > pchisq(100,2,lower.tail=FALSE)
>    [1] 1.92875e-22
> and don't need the "<2.2e-16" but no one has seen fit to change things.

Because although pchisq has that argument, not all pxxx functions 
guarantee accuracy in the upper tail (and might compute 1-p internally). 
  And the print() method for class "anova" has no idea how the p values 
supplied were computed (as below, they could have been done by 
third-party code).

Only in very unusual circumstances does it matter how small a p-value 
less than, say, 1e-6 is.  For many cases (including anova) the computed 
value depends on fine details of the null hypothesis which are 
implausible, so a secondary effect is to avoid drawing attention to 
numbers which should be taken only as a very rough guide.


> Bill Dunlap
> TIBCO Software
> wdunlap tibco.com
>
>
> On Wed, May 7, 2014 at 7:02 AM, Michael Friendly <friendly at yorku.ca> wrote:
>> Where does the value 2.2e-16 come from in p-values for chisq tests such as
>> those
>> reported below?
>>
>>> Anova(cm.mod2)
>> Analysis of Deviance Table (Type II tests)
>>
>> Response: Freq
>> LR Chisq Df Pr(>Chisq)
>> B 11026.2 1 < 2.2e-16 ***
>> W 7037.5 1 < 2.2e-16 ***
>> Age 886.6 8 < 2.2e-16 ***
>> B:W 3025.2 1 < 2.2e-16 ***
>> B:Age 1130.4 8 < 2.2e-16 ***
>> W:Age 332.9 8 < 2.2e-16 ***
>> ---
>> Signif. codes: 0 ?***? 0.001 ?**? 0.01 ?*? 0.05 ?.? 0.1 ? ? 1
>>>

-- 
Brian D. Ripley,                  ripley at stats.ox.ac.uk
Professor of Applied Statistics,  http://www.stats.ox.ac.uk/~ripley/
University of Oxford,             Tel:  +44 1865 272861 (self)
1 South Parks Road,                     +44 1865 272866 (PA)
Oxford OX1 3TG, UK                Fax:  +44 1865 272595


From rh at knut-krueger.de  Thu May  8 08:59:43 2014
From: rh at knut-krueger.de (Knut Krueger)
Date: Thu, 08 May 2014 08:59:43 +0200
Subject: [Rd] checking dependencies in R code ... WARNING
In-Reply-To: <1877523548.47233.1399530949612.JavaMail.zimbra@openanalytics.eu>
References: <536B20E7.3080103@knut-krueger.de>
	<1877523548.47233.1399530949612.JavaMail.zimbra@openanalytics.eu>
Message-ID: <536B2B5F.40809@knut-krueger.de>

Am 08.05.2014 08:35, schrieb Tobias Verbeke:
> Hi Knut,
>
> The code will contain library or require statements, which
> do not belong there, but need to replaced by specifying the
> dependencies on these packages in the DESCRIPTION file
> (Depends / Imports field). For imports you also need to
> make sure the NAMESPACE file contains the intended statements.
>
> See
>
> http://cran.r-project.org/doc/manuals/R-exts.html#Package-Dependencies
>
> Best,
> Tobias

Hi Tobias,

if I am right it should be a code from the utils package

# Use the internal win32consoleCompletion function in utils package
     res <- utils:::.win32consoleCompletion(code, nchar(code))

IMPORT field ... Namespaces accessed by the ?::? and ?:::? operators 
must be listed here,

DESCRIPTION
Imports: utils, foo, ...

it is included

NAMESAPCE:
import(utils, foo, ....)


could it be another problem? I found:
Using foo:::f instead of foo::f allows access to unexported objects. 
This is generally not recommended, as the semantics of unexported 
objects may be changed by the package author in routine maintenance.


Best
Knut


From tobias.verbeke at openanalytics.eu  Thu May  8 09:34:57 2014
From: tobias.verbeke at openanalytics.eu (Tobias Verbeke)
Date: Thu, 8 May 2014 09:34:57 +0200 (CEST)
Subject: [Rd] checking dependencies in R code ... WARNING
In-Reply-To: <536B2B5F.40809@knut-krueger.de>
References: <536B20E7.3080103@knut-krueger.de>
	<1877523548.47233.1399530949612.JavaMail.zimbra@openanalytics.eu>
	<536B2B5F.40809@knut-krueger.de>
Message-ID: <554145006.47417.1399534497006.JavaMail.zimbra@openanalytics.eu>

Hi Knut, 

I was primarily referring to the issues reported on the line

'library' or 'require' calls not declared from: 'Hmisc' 'R2HTML' 'tcltk'

but what you say for .win32consoleCompletion does not seem wrong,
esp. that it is not recommended to make use of ::: operators inside
a package.

Best,
Tobias

----- Original Message -----
> From: "Knut Krueger" <rh at knut-krueger.de>
> To: r-devel at r-project.org
> Sent: Thursday, May 8, 2014 8:59:43 AM
> Subject: Re: [Rd] checking dependencies in R code ... WARNING
> 
> Am 08.05.2014 08:35, schrieb Tobias Verbeke:
> > Hi Knut,
> >
> > The code will contain library or require statements, which
> > do not belong there, but need to replaced by specifying the
> > dependencies on these packages in the DESCRIPTION file
> > (Depends / Imports field). For imports you also need to
> > make sure the NAMESPACE file contains the intended statements.
> >
> > See
> >
> > http://cran.r-project.org/doc/manuals/R-exts.html#Package-Dependencies
> >
> > Best,
> > Tobias
> 
> Hi Tobias,
> 
> if I am right it should be a code from the utils package
> 
> # Use the internal win32consoleCompletion function in utils package
>      res <- utils:::.win32consoleCompletion(code, nchar(code))
> 
> IMPORT field ... Namespaces accessed by the ?::? and ?:::? operators
> must be listed here,
> 
> DESCRIPTION
> Imports: utils, foo, ...
> 
> it is included
> 
> NAMESAPCE:
> import(utils, foo, ....)
> 
> 
> could it be another problem? I found:
> Using foo:::f instead of foo::f allows access to unexported objects.
> This is generally not recommended, as the semantics of unexported
> objects may be changed by the package author in routine maintenance.
> 
> 
> Best
> Knut
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
> 


From pdalgd at gmail.com  Thu May  8 09:35:27 2014
From: pdalgd at gmail.com (peter dalgaard)
Date: Thu, 8 May 2014 09:35:27 +0200
Subject: [Rd] historical significance of Pr(>Chisq) < 2.2e-16
In-Reply-To: <536B2681.6020609@stats.ox.ac.uk>
References: <536A3CE8.2010909@yorku.ca>
	<CAF8bMcZRA=Jo+ozuWBzWLN165GXY93ycXLSYO4ABEAvqaGs_Cw@mail.gmail.com>
	<536B2681.6020609@stats.ox.ac.uk>
Message-ID: <B67A4FA3-BDBE-4316-B361-A70326FE0C88@gmail.com>


On 08 May 2014, at 08:38 , Prof Brian Ripley <ripley at stats.ox.ac.uk> wrote:

> Only in very unusual circumstances does it matter how small a p-value less than, say, 1e-6 is.

Slight disagreement: It does matter when there are multiple comparisons in the order of several thousands, which is not so unusual in bioinformatics at least. The better scientists in the field seems to know better than to trust extreme-tail behaviour of test statistics, though. 

(In the case I'm thinking of, they had a two-group comparison for several thousand DNA markers. One might Bonferroni-correct and multiply the individual p-values by the number of comparisons, but they got the rather better idea of calculating an overall test statistic as the maximum over all marker points and then finding its permutation distribution.)

-- 
Peter Dalgaard, Professor,
Center for Statistics, Copenhagen Business School
Solbjerg Plads 3, 2000 Frederiksberg, Denmark
Phone: (+45)38153501
Email: pd.mes at cbs.dk  Priv: PDalgd at gmail.com


From b.rowlingson at lancaster.ac.uk  Thu May  8 09:35:50 2014
From: b.rowlingson at lancaster.ac.uk (Barry Rowlingson)
Date: Thu, 8 May 2014 08:35:50 +0100
Subject: [Rd] precedence (was 'historical NA question')
In-Reply-To: <bdd4090e97ac4d7eab36c01d6dafd758@EX-1-HT0.lancs.local>
References: <3dfcdc$gnkvcv@ironport9.mayo.edu> <536A5C52.4030907@r-project.org>
	<536A8B72.802@fhcrc.org>
	<7CC02BBE-3F5D-4A11-87A1-F8B013BD081F@r-project.org>
	<AD68281E-B44C-4DB3-9CE5-D513550C84A6@gmail.com>
	<536AA877.4010301@fhcrc.org>
	<8D2277DD-434F-4FD4-B866-4EC8F1441902@r-project.org>
	<bdd4090e97ac4d7eab36c01d6dafd758@EX-1-HT0.lancs.local>
Message-ID: <CANVKczMrqLtZFaOTns-f6XDRKp4CDS_5XH9MORfgYemxnUoAtA@mail.gmail.com>

On Wed, May 7, 2014 at 11:00 PM, Duncan Murdoch
<murdoch.duncan at gmail.com> wrote:
>
>
> Is there a language where "- 2^2" gives a different answer than "-2^2"?
>   (Substitute ** or any other exponentiation operator for ^ if you
> like.)  This is important, because I'd like to avoid ever attempting any
> important calculation in that language.
>

I just checked that with javascript, and it gives the same answer so
that's okay. I tried JS because it has some fun things to do with
numbers (especially if you let it coerce strings):

 > "2" - "1"
1
 > "2" + "1"
"21"

The Javascript Best Practices Document[1] says you should never use
the plus sign for arithmetic addition, instead use a double negative
and rely on "subtract" converting to numeric:

 > "2"- -"1"
 3

Given that web pages written with JS get all their data from web
content as strings, this can happen more often than you think.

This is an example to show to everyone who says "Can we use + to
concatenate strings in R please!?".

Barry

[1] A completely fictional publication I invented just now, but hey,
I've seen worse than this.


From rh at knut-krueger.de  Thu May  8 10:50:42 2014
From: rh at knut-krueger.de (Knut Krueger)
Date: Thu, 08 May 2014 10:50:42 +0200
Subject: [Rd] checking dependencies in R code ... WARNING
In-Reply-To: <554145006.47417.1399534497006.JavaMail.zimbra@openanalytics.eu>
References: <536B20E7.3080103@knut-krueger.de>	<1877523548.47233.1399530949612.JavaMail.zimbra@openanalytics.eu>	<536B2B5F.40809@knut-krueger.de>
	<554145006.47417.1399534497006.JavaMail.zimbra@openanalytics.eu>
Message-ID: <536B4562.6070904@knut-krueger.de>

Am 08.05.2014 09:34, schrieb Tobias Verbeke:
> Hi Knut,
>
> I was primarily referring to the issues reported on the line
Hi Tobias,
ok the warning is a little bit misleading, it was an additional use of 
require(foo) of the import packages in NAMESPACE and DESCRIPTION

do you have a hint for this to change the line
res <- utils:::.win32consoleCompletion(code, nchar(code)) so that the 
issue of the warning will be solved?

* checking dependencies in R code ...
WARNING
Unexported object imported by a ':::' call: 
'utils:::.win32consoleCompletion'
   See the note in ?`:::` about the use of this operator.
   Including base/recommended package(s):
   'utils'

Best Knut


From csardi.gabor at gmail.com  Thu May  8 12:59:31 2014
From: csardi.gabor at gmail.com (=?UTF-8?B?R8OhYm9yIENzw6FyZGk=?=)
Date: Thu, 8 May 2014 06:59:31 -0400
Subject: [Rd] precedence (was 'historical NA question')
In-Reply-To: <CANVKczMrqLtZFaOTns-f6XDRKp4CDS_5XH9MORfgYemxnUoAtA@mail.gmail.com>
References: <3dfcdc$gnkvcv@ironport9.mayo.edu> <536A5C52.4030907@r-project.org>
	<536A8B72.802@fhcrc.org>
	<7CC02BBE-3F5D-4A11-87A1-F8B013BD081F@r-project.org>
	<AD68281E-B44C-4DB3-9CE5-D513550C84A6@gmail.com>
	<536AA877.4010301@fhcrc.org>
	<8D2277DD-434F-4FD4-B866-4EC8F1441902@r-project.org>
	<bdd4090e97ac4d7eab36c01d6dafd758@EX-1-HT0.lancs.local>
	<CANVKczMrqLtZFaOTns-f6XDRKp4CDS_5XH9MORfgYemxnUoAtA@mail.gmail.com>
Message-ID: <CABtg=KnojP35XztX2MRQoYuHN1gYFGU5khhVs5ShmouWcX8iLA@mail.gmail.com>

An embedded and charset-unspecified text was scrubbed...
Name: not available
URL: <https://stat.ethz.ch/pipermail/r-devel/attachments/20140508/9665979e/attachment.pl>

From tobias.verbeke at openanalytics.eu  Thu May  8 14:59:54 2014
From: tobias.verbeke at openanalytics.eu (Tobias Verbeke)
Date: Thu, 8 May 2014 14:59:54 +0200 (CEST)
Subject: [Rd] trivial patch solve.Rd (typo)
In-Reply-To: <1894983858.48743.1399553877277.JavaMail.zimbra@openanalytics.eu>
Message-ID: <1263547960.48748.1399553994693.JavaMail.zimbra@openanalytics.eu>

L.S.

Please find below a trivial patch which corrects a typo in solve.Rd from base.

Best,
Tobias

Index: solve.Rd
===================================================================
--- .architect/workspace/R_svn/src/library/base/man/solve.Rd	(revision 65545)
+++ .architect/workspace/R_svn/src/library/base/man/solve.Rd	(working copy)
@@ -44,7 +44,7 @@
   \code{\link{qr.solve}} can handle non-square systems.
 }
 \source{
-  The defult method is an interface to the LAPACK routines \code{DGESV}
+  The default method is an interface to the LAPACK routines \code{DGESV}
   and \code{ZGESV}.
 
   LAPACK is from \url{http://www.netlib.org/lapack}.


From winstonchang1 at gmail.com  Fri May  9 06:34:24 2014
From: winstonchang1 at gmail.com (Winston Chang)
Date: Thu, 8 May 2014 23:34:24 -0500
Subject: [Rd] access environment in which an error occurred
In-Reply-To: <535F5607.1000601@yahoo.de>
References: <535F5607.1000601@yahoo.de>
Message-ID: <CAFOpNVEZyOTnTaw3LL0Mjz8vUh_mn1vEz-C7=eRVPH9OHKxidg@mail.gmail.com>

An embedded and charset-unspecified text was scrubbed...
Name: not available
URL: <https://stat.ethz.ch/pipermail/r-devel/attachments/20140508/14d2c2f2/attachment.pl>

From Rainer at krugs.de  Fri May  9 12:54:06 2014
From: Rainer at krugs.de (Rainer M Krug)
Date: Fri, 09 May 2014 12:54:06 +0200
Subject: [Rd] Access variable in attached but removed object
Message-ID: <m28uqbw7ch.fsf@krugs.de>


How can I access an object in an attached but deleted environment, when
the object also exists in the .GolbalEnv?

I hope the example below makes the question clear:

--8<---------------cut here---------------start------------->8---
tmp <- attach(what=NULL, name="org:variables")
tmp$test = 13
rm(tmp)
test
# > 13
test <- 24
test
# > 24
ls(all=TRUE)
# > character(0)
# 
# how can I access the variable test in the object org:variables in the
# search path?
#
rm(test)
test
# > 13
--8<---------------cut here---------------end--------------->8---

Any suggestions?

Thanks,

Rainer

-- 
Rainer M. Krug, PhD (Conservation Ecology, SUN), MSc (Conservation Biology, UCT), Dipl. Phys. (Germany)

Centre of Excellence for Invasion Biology
Stellenbosch University
South Africa

Tel :       +33 - (0)9 53 10 27 44
Cell:       +33 - (0)6 85 62 59 98
Fax :       +33 - (0)9 58 10 27 44

Fax (D):    +49 - (0)3 21 21 25 22 44

email:      Rainer at krugs.de

Skype:      RMkrug

PGP: 0x0F52F982
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 494 bytes
Desc: not available
URL: <https://stat.ethz.ch/pipermail/r-devel/attachments/20140509/20def203/attachment.bin>

From murdoch.duncan at gmail.com  Fri May  9 13:45:25 2014
From: murdoch.duncan at gmail.com (Duncan Murdoch)
Date: Fri, 09 May 2014 07:45:25 -0400
Subject: [Rd] Access variable in attached but removed object
In-Reply-To: <m28uqbw7ch.fsf@krugs.de>
References: <m28uqbw7ch.fsf@krugs.de>
Message-ID: <536CBFD5.4070204@gmail.com>

On 09/05/2014, 6:54 AM, Rainer M Krug wrote:
>
> How can I access an object in an attached but deleted environment, when
> the object also exists in the .GolbalEnv?

Attaching a variable to the search list generally makes a copy of it, so 
it can't be "attached but deleted".  However, "making a copy" of an 
environment just copies the reference to it, so your environment still 
exists on the search list, it just doesn't have a name in the global 
environment.

>
> I hope the example below makes the question clear:
>
> --8<---------------cut here---------------start------------->8---
> tmp <- attach(what=NULL, name="org:variables")
> tmp$test = 13
> rm(tmp)
> test
> # > 13
> test <- 24
> test
> # > 24
> ls(all=TRUE)
> # > character(0)

I don't know why you would have seen character(0) here.  You should have 
seen "test" in the list, because you created it a couple of lines earlier.

> #
> # how can I access the variable test in the object org:variables in the
> # search path?
> #
> rm(test)
> test
> # > 13
> --8<---------------cut here---------------end--------------->8---
>
> Any suggestions?

You can use assign, or get a reference to the environment using 
as.environment("org:variables"), and access it within that.  For example,

assign("test", 24, pos="org:variables")

or

e <- as.environment("org:variables")
e$test <- 24

Duncan Murdoch


From Rainer at krugs.de  Fri May  9 14:07:38 2014
From: Rainer at krugs.de (Rainer M Krug)
Date: Fri, 09 May 2014 14:07:38 +0200
Subject: [Rd] Access variable in attached but removed object
In-Reply-To: <536CBFD5.4070204@gmail.com> (Duncan Murdoch's message of "Fri,
	09 May 2014 07:45:25 -0400")
References: <m28uqbw7ch.fsf@krugs.de> <536CBFD5.4070204@gmail.com>
Message-ID: <m2wqdvupdh.fsf@krugs.de>

Duncan Murdoch <murdoch.duncan at gmail.com> writes:

> On 09/05/2014, 6:54 AM, Rainer M Krug wrote:
>>
>> How can I access an object in an attached but deleted environment, when
>> the object also exists in the .GolbalEnv?
>
> Attaching a variable to the search list generally makes a copy of it,
> so it can't be "attached but deleted".  However, "making a copy" of an
> environment just copies the reference to it, so your environment still
> exists on the search list, it just doesn't have a name in the global
> environment.

I was aware that my wording was not the best - your explanation makes
the whole process much clearer - thanks.

>
>>
>> I hope the example below makes the question clear:
>>
>> --8<---------------cut here---------------start------------->8---
>> tmp <- attach(what=NULL, name="org:variables")
>> tmp$test = 13
>> rm(tmp)
>> test
>> # > 13
>> test <- 24
>> test
>> # > 24
>> ls(all=TRUE)
>> # > character(0)
>
> I don't know why you would have seen character(0) here.  You should
> have seen "test" in the list, because you created it a couple of lines
> earlier.

You are right. Wrong copy - paste. My fault.

>
>> #
>> # how can I access the variable test in the object org:variables in the
>> # search path?
>> #
>> rm(test)
>> test
>> # > 13
>> --8<---------------cut here---------------end--------------->8---
>>
>> Any suggestions?
>
> You can use assign, or get a reference to the environment using
> as.environment("org:variables"), and access it within that.  For
> example,
>
> assign("test", 24, pos="org:variables")
>
> or
>
> e <- as.environment("org:variables")
> e$test <- 24

Perfect - that is what I was looking for.
Both will work perfectly in my case.

Thanks  lot,

Rainer

>
> Duncan Murdoch

-- 
Rainer M. Krug, PhD (Conservation Ecology, SUN), MSc (Conservation Biology, UCT), Dipl. Phys. (Germany)

Centre of Excellence for Invasion Biology
Stellenbosch University
South Africa

Tel :       +33 - (0)9 53 10 27 44
Cell:       +33 - (0)6 85 62 59 98
Fax :       +33 - (0)9 58 10 27 44

Fax (D):    +49 - (0)3 21 21 25 22 44

email:      Rainer at krugs.de

Skype:      RMkrug

PGP: 0x0F52F982
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 494 bytes
Desc: not available
URL: <https://stat.ethz.ch/pipermail/r-devel/attachments/20140509/3a122185/attachment.bin>

From tobias.verbeke at openanalytics.eu  Fri May  9 20:41:25 2014
From: tobias.verbeke at openanalytics.eu (Tobias Verbeke)
Date: Fri, 9 May 2014 20:41:25 +0200 (CEST)
Subject: [Rd] R crash using Sys.which on Windows
In-Reply-To: <2090370034.43069.1399400934031.JavaMail.zimbra@openanalytics.eu>
References: <2090370034.43069.1399400934031.JavaMail.zimbra@openanalytics.eu>
Message-ID: <721446084.52005.1399660885913.JavaMail.zimbra@openanalytics.eu>

Some clarifications and additional data on this bug:

- this has nothing to do with Rtools as such, but applies to finding
  any executable with 'Sys.which' that happens to live in a path with
  more than 96 characters;

- the issue also occurs when using the 32-bit version of RGui
  on Windows 7 64-bit (and also with R.exe at the command line);

- the issue also occurs when using the 32-bit version of RGui
  on Windows 7 32-bit (and also with R.exe at the command line).

By means of example, the 'problem details' as given by Windows
when R crashes is pasted below:

Problem signature:
  Problem Event Name:	APPCRASH
  Application Name:	Rterm.exe
  Application Version:	3.10.65387.0
  Application Timestamp:	5347f09a
  Fault Module Name:	ntdll.dll
  Fault Module Version:	6.1.7601.17514
  Fault Module Timestamp:	4ce7b96e
  Exception Code:	c0000005
  Exception Offset:	000558d4
  OS Version:	6.1.7601.2.1.0.256.48
  Locale ID:	1033
  Additional Information 1:	0a9e
  Additional Information 2:	0a9e372d3b4ad19135b953a78882e789
  Additional Information 3:	0a9e
  Additional Information 4:	0a9e372d3b4ad19135b953a78882e789

Best,
Tobias

----- Original Message -----
> From: "Tobias Verbeke" <tobias.verbeke at openanalytics.eu>
> To: r-devel at r-project.org
> Sent: Tuesday, May 6, 2014 8:28:54 PM
> Subject: [Rd] R crash using Sys.which on Windows
> 
> Dear list,
> 
> When installing the latest version of Rtools (3.1.0.1942) into a path that
> contains more than 96 characters on Windows 7 64-bit,
> e.g. into
> 
> C:\TheLatestRtoolsInAPathWithMoreThanNinetySixCharactersWillCrashTheRSessionUponCallingTheSysWhichFunctionInRToGetTheGccPath
> 
> and assuming that the Rtools bin paths have been appropriately added to the
> PATH environment variable as in
> 
> c:\TheLatestRtoolsInAPathWithMoreThanNinetySixCharactersWillCrashTheRSessionUponCallingTheSysWhichFunctionInRToGetTheGccPath\bin;c:\TheLatestRtoolsInAPathWithMoreThanNinetySixCharactersWillCrashTheRSessionUponCallingTheSysWhichFunctionInRToGetTheGccPath\gcc-4.6.3\bin
> 
> the following call from RGui 64-bit (version 3.1.0) reproducibly causes R to
> crash:
> 
> Sys.which("ls")
> 
> Sys.which seems to use an internal function on Windows. Is this a known
> issue?
> 
> Please let me know if I can provide any more relevant information.
> 
> Best,
> Tobias
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>


From mike1947 at gmail.com  Sun May 11 01:12:04 2014
From: mike1947 at gmail.com (Michael Cohen)
Date: Sat, 10 May 2014 19:12:04 -0400
Subject: [Rd] Replay plot not allowed across sessions.
Message-ID: <CAD8yWB-kOciBVS+XrRQ5Xeox=vrLHr9e7vhLaU9NG1eys9gF1g@mail.gmail.com>

An embedded and charset-unspecified text was scrubbed...
Name: not available
URL: <https://stat.ethz.ch/pipermail/r-devel/attachments/20140510/22e88925/attachment.pl>

From murdoch.duncan at gmail.com  Sun May 11 13:00:40 2014
From: murdoch.duncan at gmail.com (Duncan Murdoch)
Date: Sun, 11 May 2014 07:00:40 -0400
Subject: [Rd] Replay plot not allowed across sessions.
In-Reply-To: <CAD8yWB-kOciBVS+XrRQ5Xeox=vrLHr9e7vhLaU9NG1eys9gF1g@mail.gmail.com>
References: <CAD8yWB-kOciBVS+XrRQ5Xeox=vrLHr9e7vhLaU9NG1eys9gF1g@mail.gmail.com>
Message-ID: <536F5858.4010503@gmail.com>

On 10/05/2014, 7:12 PM, Michael Cohen wrote:
> I wrote about this some time back  as this new "feature" has made R less
> convenient for me
> since I story many, say 1000 to 1500 diagnostic plots per session.
>   Georgely Daroczi has a nice
> hack in  Rapporter//pander which it makes it possible to replay a single
> bad plot by hacking the data
> structure so as to change an offending part.  Not surprisingl.doing this to
> all my saved recordedplot objects
> produces a corrupt R state online, after all this is why this was removed
> i.e. it causes problems.   Does somebody know exactly what the
> problem is with the current Data Structure so that using it after a load
> from the disk can lead to corruption of
> R.  I would like to work on fixing this if it a fix is possible.  Are there
> any posts about this?  Who would know
> about this who might respond?

The saved structure is essentially a list of functions and arguments to 
be called in sequence.  Some of the functions take different arguments 
in different R versions.  There are likely also different behaviours for 
the same arguments in other cases.

The only real documentation on this is in the source code.

A safer strategy to achieve what you want to do is to save the code and 
data that produced each plot.  Then at least if functions change you can 
edit your saved copy and still get a plot.

Duncan Murdoch


From renaud at mancala.cbio.uct.ac.za  Mon May 12 09:51:44 2014
From: renaud at mancala.cbio.uct.ac.za (Renaud Gaujoux)
Date: Mon, 12 May 2014 09:51:44 +0200
Subject: [Rd] traceback does not show source line number of long calls when
 truncating output
Message-ID: <CAHavPHEtQyOdbiVvtRpxM4xy3gCs8eoK9AsKdYYH6cwgy7E9SA@mail.gmail.com>

Hi,

in R-3.1.0 (Linux), traceback() does not show the source file line
number for the truncated calls, when limiting the number of lines
output for each call with argument max.lines. See sample code, output
and session info below (in particular, output for call number 5).
I guess this is not intended.

Thank you.

Bests,
Renaud

####################
## File: traceback.R
a <- function(...){ stop('this is an error') }

# code to generate the long call
# set.seed(123)
# v <- unique(replicate(10, { paste0(sample(letters[1:26]), collapse = "") }))
# sprintf("a(%s)", paste0(v, '=', 1, collapse = ", "))

a(htjuwakqxzpgrsbncvyofdmeli=1, ozgdvsnpaimweybtkulrhcfjxq=1,
udnecprhlbgwtfjisyzoxaqmvk=1, jcfpzqyirwotbsehdngauxlkvm=1,
mwvojdsfbqlchznegyirpkautx=1, qwzxlnyorhegackmvubfsjtipd=1,
ofkylhmugjvdwzscirnexptbqa=1, sgolfwzrevpjnythbqxmdckuai=1,
ezlfyoangrspdmihtuxkvwcbqj=1, gjetdqkmvwxufslhcbpirnazoy=1)
####################

####################
## In R
source('traceback.R', keep.source = TRUE)
traceback()
traceback(max.lines = 2)
sessionInfo()
####################

####################
## Output
> source('traceback.R', keep.source = TRUE)
Error in a(htjuwakqxzpgrsbncvyofdmeli = 1, ozgdvsnpaimweybtkulrhcfjxq = 1,  :
  this is an error
> traceback()
6: stop("this is an error") at traceback.R#1
5: a(htjuwakqxzpgrsbncvyofdmeli = 1, ozgdvsnpaimweybtkulrhcfjxq = 1,
       udnecprhlbgwtfjisyzoxaqmvk = 1, jcfpzqyirwotbsehdngauxlkvm = 1,
       mwvojdsfbqlchznegyirpkautx = 1, qwzxlnyorhegackmvubfsjtipd = 1,
       ofkylhmugjvdwzscirnexptbqa = 1, sgolfwzrevpjnythbqxmdckuai = 1,
       ezlfyoangrspdmihtuxkvwcbqj = 1, gjetdqkmvwxufslhcbpirnazoy = 1)
at traceback.R#8
4: eval(expr, envir, enclos)
3: eval(ei, envir)
2: withVisible(eval(ei, envir))
1: source("traceback.R", keep.source = TRUE)
> traceback(max.lines = 2)
6: stop("this is an error") at traceback.R#1
5: a(htjuwakqxzpgrsbncvyofdmeli = 1, ozgdvsnpaimweybtkulrhcfjxq = 1,
       udnecprhlbgwtfjisyzoxaqmvk = 1, jcfpzqyirwotbsehdngauxlkvm = 1,
     ...
4: eval(expr, envir, enclos)
3: eval(ei, envir)
2: withVisible(eval(ei, envir))
1: source("traceback.R", keep.source = TRUE)
> sessionInfo()
R version 3.1.0 (2014-04-10)
Platform: x86_64-pc-linux-gnu (64-bit)

locale:
 [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C
LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8
LC_MONETARY=en_US.UTF-8
 [6] LC_MESSAGES=en_US.UTF-8    LC_PAPER=en_US.UTF-8       LC_NAME=C
               LC_ADDRESS=C               LC_TELEPHONE=C
[11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C

attached base packages:
[1] stats     graphics  grDevices utils     datasets  methods   base
>


From ripley at stats.ox.ac.uk  Mon May 12 12:40:17 2014
From: ripley at stats.ox.ac.uk (Prof Brian Ripley)
Date: Mon, 12 May 2014 11:40:17 +0100
Subject: [Rd] R crash using Sys.which on Windows
In-Reply-To: <2090370034.43069.1399400934031.JavaMail.zimbra@openanalytics.eu>
References: <2090370034.43069.1399400934031.JavaMail.zimbra@openanalytics.eu>
Message-ID: <5370A511.4040905@stats.ox.ac.uk>

This is a change in behaviour of the Windows API function since the code 
was written (years ago).  It will be changed in R 3.1.1: meanwhile you 
can always use the shortPathName to abbreviate the name.


On 06/05/2014 19:28, Tobias Verbeke wrote:
> Dear list,
>
> When installing the latest version of Rtools (3.1.0.1942) into a path that contains more than 96 characters on Windows 7 64-bit,
> e.g. into
>
> C:\TheLatestRtoolsInAPathWithMoreThanNinetySixCharactersWillCrashTheRSessionUponCallingTheSysWhichFunctionInRToGetTheGccPath
>
> and assuming that the Rtools bin paths have been appropriately added to the PATH environment variable as in
>
> c:\TheLatestRtoolsInAPathWithMoreThanNinetySixCharactersWillCrashTheRSessionUponCallingTheSysWhichFunctionInRToGetTheGccPath\bin;c:\TheLatestRtoolsInAPathWithMoreThanNinetySixCharactersWillCrashTheRSessionUponCallingTheSysWhichFunctionInRToGetTheGccPath\gcc-4.6.3\bin
>
> the following call from RGui 64-bit (version 3.1.0) reproducibly causes R to crash:
>
> Sys.which("ls")
>
> Sys.which seems to use an internal function on Windows. Is this a known issue?
>
> Please let me know if I can provide any more relevant information.
>
> Best,
> Tobias
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>


-- 
Brian D. Ripley,                  ripley at stats.ox.ac.uk
Professor of Applied Statistics,  http://www.stats.ox.ac.uk/~ripley/
University of Oxford,             Tel:  +44 1865 272861 (self)
1 South Parks Road,                     +44 1865 272866 (PA)
Oxford OX1 3TG, UK                Fax:  +44 1865 272595


From tobias.verbeke at openanalytics.eu  Mon May 12 13:47:17 2014
From: tobias.verbeke at openanalytics.eu (Tobias Verbeke)
Date: Mon, 12 May 2014 13:47:17 +0200 (CEST)
Subject: [Rd] R crash using Sys.which on Windows
In-Reply-To: <5370A511.4040905@stats.ox.ac.uk>
References: <2090370034.43069.1399400934031.JavaMail.zimbra@openanalytics.eu>
	<5370A511.4040905@stats.ox.ac.uk>
Message-ID: <705176494.54888.1399895237320.JavaMail.zimbra@openanalytics.eu>

Dear Prof. Ripley, 

Many thanks for the change in R 3.1.1 to be as well as for the description of the workaround for R 3.1.0.

Best regards,
Tobias Verbeke

----- Original Message -----
> From: "Prof Brian Ripley" <ripley at stats.ox.ac.uk>
> To: r-devel at r-project.org
> Sent: Monday, May 12, 2014 12:40:17 PM
> Subject: Re: [Rd] R crash using Sys.which on Windows
> 
> This is a change in behaviour of the Windows API function since the code
> was written (years ago).  It will be changed in R 3.1.1: meanwhile you
> can always use the shortPathName to abbreviate the name.
> 
> 
> On 06/05/2014 19:28, Tobias Verbeke wrote:
> > Dear list,
> >
> > When installing the latest version of Rtools (3.1.0.1942) into a path that
> > contains more than 96 characters on Windows 7 64-bit,
> > e.g. into
> >
> > C:\TheLatestRtoolsInAPathWithMoreThanNinetySixCharactersWillCrashTheRSessionUponCallingTheSysWhichFunctionInRToGetTheGccPath
> >
> > and assuming that the Rtools bin paths have been appropriately added to the
> > PATH environment variable as in
> >
> > c:\TheLatestRtoolsInAPathWithMoreThanNinetySixCharactersWillCrashTheRSessionUponCallingTheSysWhichFunctionInRToGetTheGccPath\bin;c:\TheLatestRtoolsInAPathWithMoreThanNinetySixCharactersWillCrashTheRSessionUponCallingTheSysWhichFunctionInRToGetTheGccPath\gcc-4.6.3\bin
> >
> > the following call from RGui 64-bit (version 3.1.0) reproducibly causes R
> > to crash:
> >
> > Sys.which("ls")
> >
> > Sys.which seems to use an internal function on Windows. Is this a known
> > issue?
> >
> > Please let me know if I can provide any more relevant information.
> >
> > Best,
> > Tobias
> >
> > ______________________________________________
> > R-devel at r-project.org mailing list
> > https://stat.ethz.ch/mailman/listinfo/r-devel
> >
> 
> 
> --
> Brian D. Ripley,                  ripley at stats.ox.ac.uk
> Professor of Applied Statistics,  http://www.stats.ox.ac.uk/~ripley/
> University of Oxford,             Tel:  +44 1865 272861 (self)
> 1 South Parks Road,                     +44 1865 272866 (PA)
> Oxford OX1 3TG, UK                Fax:  +44 1865 272595
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>


From richierocks at gmail.com  Tue May 13 15:00:08 2014
From: richierocks at gmail.com (Richard Cotton)
Date: Tue, 13 May 2014 16:00:08 +0300
Subject: [Rd] --vanilla option for creating cluster nodes
Message-ID: <CAPp_+=e9WEpFbniZJd5CBN526o9ANa1RqA1yrFyJm+HkiqtZ7g@mail.gmail.com>

When a PSOCK cluster (maybe other cluster types too) is created by the
parallel package, an Rscript process is spawned for each node.  At
least by default, the Rprofile.site file is read for each node that is
created, which can constitute the majority of the time to create a
cluster.  See:

http://stackoverflow.com/q/23540129/134830

Is there a way to create nodes using the --vanilla argument, so that
Rprofile doesn't get read?

Alternatively, is there a way to persuade R to only read the file
once?  It seems inefficient to do the same thing four times.


From rh at knut-krueger.de  Tue May 13 18:14:16 2014
From: rh at knut-krueger.de (Knut Krueger)
Date: Tue, 13 May 2014 18:14:16 +0200
Subject: [Rd] legitimate use of :::
In-Reply-To: <52165F15.1090500@yorku.ca>
References: <CANROs4dyoRyjoVHZLs7wDrFrjVX-1zvTTv2i4tBzF3f6Rx-XTA@mail.gmail.com>	<5215F9BD.5030009@statistik.tu-dortmund.de>
	<52165F15.1090500@yorku.ca>
Message-ID: <537244D8.7020707@knut-krueger.de>

Is there another new solution for this issue?
especially I would like to use:

utils:::.win32consoleCompletion
the use of this is suggested in the completion.r file of utils:

## test some typical completion attempts
     library(utils)
testLine <- function(line, cursor = nchar(line))
{
     str(utils:::.win32consoleCompletion(line, cursor))
}

testLine("")


(full quote because of the age of the tread)


Kind regards Knut
Am 22.08.2013 20:57, schrieb Michael Friendly:
> On 8/22/2013 7:45 AM, Uwe Ligges wrote:
>>
>>
>> On 22.08.2013 07:45, Yihui Xie wrote:
>>> Hi,
>>>
>>> So now R CMD check starts to warn against :::, but I believe sometimes
>>> it is legitimate to use it when developing R packages. For example, I
>>> have some utils functions that are not exported but I want to share
>>> them across the packages that I maintain. I do not need to coordinate
>>> with other authors about these internal functions since I'm the only
>>> author and I know clearly what I'm doing, and I want to avoid copying
>>> and pasting the code across packages just to avoid the NOTE in R CMD
>>> check. What should I do in this case?
>>
>> Nothing. The way you describe above seems to be a reasonable usage, iff
>> you are the same maintainer who knows what is going on. Other
>> maintainers should not use one of your not exported (hence non API)
>> functions, of course.
>>
>> Uwe Ligges
>>
>>
>
> Related to this is the use of other-package unexported utility functions
> that don't pass Uwe's iff test, but I, as maintainer,
> want to use in my package.
>
> Cases in point:  in heplots, I had used stats:::Pillai, stats:::Wilks,
> stats:::Roy and stats:::LH for calculation in one of my functions.
> Similarly, I had a need to use car:::df.terms, also unexported, but
> don't want to ask John Fox to export it just for my use.  Uwe's
> reply suggests that I should not be using car:::df.terms, however.
>
> To avoid the NOTEs (which often triggers a 'pls fix' upon submission to
> CRAN), I simply copied/pasted these functions to my package, but this
> seems wasteful.
>
> -Michael
>
>


From trevor.l.davis at gmail.com  Tue May 13 20:17:03 2014
From: trevor.l.davis at gmail.com (Trevor Davis)
Date: Tue, 13 May 2014 11:17:03 -0700
Subject: [Rd] legitimate use of :::
In-Reply-To: <537244D8.7020707@knut-krueger.de>
References: <CANROs4dyoRyjoVHZLs7wDrFrjVX-1zvTTv2i4tBzF3f6Rx-XTA@mail.gmail.com>
	<5215F9BD.5030009@statistik.tu-dortmund.de>
	<52165F15.1090500@yorku.ca> <537244D8.7020707@knut-krueger.de>
Message-ID: <CAMigB8FunDsKrbObq16GSkmoi+PSDQNNBhBw6m9y84ntPKoQQA@mail.gmail.com>

On Tue, May 13, 2014 at 9:14 AM, Knut Krueger <rh at knut-krueger.de> wrote:
> Is there another new solution for this issue?
> especially I would like to use:
>
> utils:::.win32consoleCompletion
> the use of this is suggested in the completion.r file of utils:
>
Besides forking the function (i.e. "copy-and-paste" it) if you think
the function provides useful functionality you can try to persuade the
maintainer to export it (and hence agree to support the function API
for the foreseeable future) or even contribute the function to another
more appropriate package (maybe even creating a new package in the
process).

- Trevor


From murdoch.duncan at gmail.com  Tue May 13 20:59:26 2014
From: murdoch.duncan at gmail.com (Duncan Murdoch)
Date: Tue, 13 May 2014 14:59:26 -0400
Subject: [Rd] legitimate use of :::
In-Reply-To: <537244D8.7020707@knut-krueger.de>
References: <CANROs4dyoRyjoVHZLs7wDrFrjVX-1zvTTv2i4tBzF3f6Rx-XTA@mail.gmail.com>	<5215F9BD.5030009@statistik.tu-dortmund.de>	<52165F15.1090500@yorku.ca>
	<537244D8.7020707@knut-krueger.de>
Message-ID: <53726B8E.8080902@gmail.com>

On 13/05/2014 12:14 PM, Knut Krueger wrote:
> Is there another new solution for this issue?
> especially I would like to use:
>
> utils:::.win32consoleCompletion
> the use of this is suggested in the completion.r file of utils:
>
> ## test some typical completion attempts
>       library(utils)
> testLine <- function(line, cursor = nchar(line))
> {
>       str(utils:::.win32consoleCompletion(line, cursor))
> }
>
> testLine("")
>

I think you are misunderstanding the comments in that file.  It's an 
internal set of tests for the package, so "test some typical completion 
attempts" is a description of the tests that follow, it's not a 
suggestion that you should be able to run those lines
from your package.

If you do want access to the completion mechanism from a package, you 
should write to its author (Deepayan Sarkar) and explain the kinds of 
things you need to do.  If you can convince him that giving you access 
is worth the trouble of exposing some of it to user-level code, then 
he'll export a function for you.  (I think it's unlikely to be 
.win32consoleCompletion, but who knows.)

Duncan Murdoch

> (full quote because of the age of the tread)
>
>
> Kind regards Knut
> Am 22.08.2013 20:57, schrieb Michael Friendly:
> > On 8/22/2013 7:45 AM, Uwe Ligges wrote:
> >>
> >>
> >> On 22.08.2013 07:45, Yihui Xie wrote:
> >>> Hi,
> >>>
> >>> So now R CMD check starts to warn against :::, but I believe sometimes
> >>> it is legitimate to use it when developing R packages. For example, I
> >>> have some utils functions that are not exported but I want to share
> >>> them across the packages that I maintain. I do not need to coordinate
> >>> with other authors about these internal functions since I'm the only
> >>> author and I know clearly what I'm doing, and I want to avoid copying
> >>> and pasting the code across packages just to avoid the NOTE in R CMD
> >>> check. What should I do in this case?
> >>
> >> Nothing. The way you describe above seems to be a reasonable usage, iff
> >> you are the same maintainer who knows what is going on. Other
> >> maintainers should not use one of your not exported (hence non API)
> >> functions, of course.
> >>
> >> Uwe Ligges
> >>
> >>
> >
> > Related to this is the use of other-package unexported utility functions
> > that don't pass Uwe's iff test, but I, as maintainer,
> > want to use in my package.
> >
> > Cases in point:  in heplots, I had used stats:::Pillai, stats:::Wilks,
> > stats:::Roy and stats:::LH for calculation in one of my functions.
> > Similarly, I had a need to use car:::df.terms, also unexported, but
> > don't want to ask John Fox to export it just for my use.  Uwe's
> > reply suggests that I should not be using car:::df.terms, however.
> >
> > To avoid the NOTEs (which often triggers a 'pls fix' upon submission to
> > CRAN), I simply copied/pasted these functions to my package, but this
> > seems wasteful.
> >
> > -Michael
> >
> >
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From pauljohn32 at gmail.com  Tue May 13 22:32:58 2014
From: pauljohn32 at gmail.com (Paul Johnson)
Date: Tue, 13 May 2014 15:32:58 -0500
Subject: [Rd] package compositions removed CRAN. Explain please the output?
Message-ID: <CAErODj8auErO9ZbouxdTKGRJQq2brVBPmzxuuWYYfUFscyNYFw@mail.gmail.com>

I notice  compositions was removed on CRAN, that's one I want to try out.

I downloaded the last tarball, the build output doesn't look that bad.
A warning, no errors.


$ R CMD build compositions
* checking for file ?compositions/DESCRIPTION? ... OK
* preparing ?compositions?:
* checking DESCRIPTION meta-information ... OK
* cleaning src
* checking for LF line-endings in source and make files
* checking for empty or unneeded directories
* looking to see if a ?data/datalist? file should be added
* building ?compositions_1.40-0.tar.gz?

$ R CMD check --as-cran compositions_1.40-0.tar.gz
* using log directory ?/tmp/compositions.Rcheck?
* using R version 3.1.0 (2014-04-10)
* using platform: x86_64-pc-linux-gnu (64-bit)
* using session charset: UTF-8
* checking for file ?compositions/DESCRIPTION? ... OK
* this is package ?compositions? version ?1.40-0?
* checking CRAN incoming feasibility ... WARNING
Maintainer: ?K. Gerald van den Boogaart <support at boogaart.de>?
New submission
Package was archived on CRAN
Insufficient package version (submitted: 1.40.0, existing: 1.40.0)
CRAN repository db overrides:
  X-CRAN-Comment: Archived on 2014-05-01 as undefined-behaviour errors
    were not corrected (and previouslu archived on 2014-03-07).
* checking package namespace information ... OK
* checking package dependencies ... NOTE
  No repository set, so cyclic dependency check skipped
* checking if this is a source package ... OK
* checking if there is a namespace ... OK
* checking for executable files ... OK
* checking for hidden files and directories ... OK
* checking for portable file names ... OK
* checking for sufficient/correct file permissions ... OK
* checking whether package ?compositions? can be installed ... OK
* checking installed package size ... OK
* checking package directory ... OK
* checking DESCRIPTION meta-information ... OK
* checking top-level files ... OK
* checking for left-over files ... OK
* checking index information ... OK
* checking package subdirectories ... OK
* checking R files for non-ASCII characters ... OK
* checking R files for syntax errors ... OK
* checking whether the package can be loaded ... OK
* checking whether the package can be loaded with stated dependencies ... OK
* checking whether the package can be unloaded cleanly ... OK
* checking whether the namespace can be loaded with stated dependencies ... OK
* checking whether the namespace can be unloaded cleanly ... OK
* checking loading without being on the library search path ... OK
* checking dependencies in R code ... OK
* checking S3 generic/method consistency ... OK
* checking replacement functions ... OK
* checking foreign function calls ... OK
* checking R code for possible problems ... OK
* checking Rd files ... OK
* checking Rd metadata ... OK
* checking Rd line widths ... OK
* checking Rd cross-references ... OK
* checking for missing documentation entries ... OK
* checking for code/documentation mismatches ... OK
* checking Rd \usage sections ... OK
* checking Rd contents ... OK
* checking for unstated dependencies in examples ... OK
* checking contents of ?data? directory ... OK
* checking data for non-ASCII characters ... OK
* checking data for ASCII and uncompressed saves ... OK
* checking line endings in C/C++/Fortran sources/headers ... OK
* checking line endings in Makefiles ... OK
* checking compilation flags in Makevars ... OK
* checking for portable use of $(BLAS_LIBS) and $(LAPACK_LIBS) ... OK
* checking compiled code ... OK
* checking sizes of PDF files under ?inst/doc? ... OK
* checking installed files from ?inst/doc? ... OK
* checking files in ?vignettes? ... OK
* checking examples ... OK
Examples with CPU or elapsed time > 5s
                   user system elapsed
SimulatedAmounts 18.810  0.188  19.064
rmahalanobis      8.573  0.016   8.619
replot            7.078  0.012   7.113
* checking for unstated dependencies in tests ... OK
* checking tests ...
  Running ?AitchisonTest.R?
  Running ?CheckGeometry.R? [38s/38s]
  Running ?RobustTest.R?
  Running ?TestMissing.R? [39s/40s]
  Running ?TestSimp.R? [12s/12s]
  Running ?acheck.R?
  Running ?geostat.R?
  Running ?missings.R?
  Running ?quickcheck.R?
 OK
* checking PDF version of manual ... OK

WARNING: There was 1 warning.
NOTE: There was 1 note.
See
  ?/tmp/compositions.Rcheck/00check.log?
for details.






-- 
Paul E. Johnson
Professor, Political Science      Assoc. Director
1541 Lilac Lane, Room 504      Center for Research Methods
University of Kansas                 University of Kansas
http://pj.freefaculty.org               http://quant.ku.edu


From deepayan.sarkar at gmail.com  Wed May 14 08:56:09 2014
From: deepayan.sarkar at gmail.com (Deepayan Sarkar)
Date: Wed, 14 May 2014 12:26:09 +0530
Subject: [Rd] legitimate use of :::
In-Reply-To: <53726B8E.8080902@gmail.com>
References: <CANROs4dyoRyjoVHZLs7wDrFrjVX-1zvTTv2i4tBzF3f6Rx-XTA@mail.gmail.com>
	<5215F9BD.5030009@statistik.tu-dortmund.de>
	<52165F15.1090500@yorku.ca> <537244D8.7020707@knut-krueger.de>
	<53726B8E.8080902@gmail.com>
Message-ID: <CADfFDC7LRnDW9gGpCTVtMmOWjuUZx5AxHkRa6x3eL8Q++7uc=Q@mail.gmail.com>

On Wed, May 14, 2014 at 12:29 AM, Duncan Murdoch
<murdoch.duncan at gmail.com> wrote:
> On 13/05/2014 12:14 PM, Knut Krueger wrote:
>>
>> Is there another new solution for this issue?
>> especially I would like to use:
>>
>> utils:::.win32consoleCompletion
>> the use of this is suggested in the completion.r file of utils:
>>
>> ## test some typical completion attempts
>>       library(utils)
>> testLine <- function(line, cursor = nchar(line))
>> {
>>       str(utils:::.win32consoleCompletion(line, cursor))
>> }
>>
>> testLine("")
>>
>
> I think you are misunderstanding the comments in that file.  It's an
> internal set of tests for the package, so "test some typical completion
> attempts" is a description of the tests that follow, it's not a suggestion
> that you should be able to run those lines
> from your package.
>
> If you do want access to the completion mechanism from a package, you should
> write to its author (Deepayan Sarkar) and explain the kinds of things you
> need to do.  If you can convince him that giving you access is worth the
> trouble of exposing some of it to user-level code, then he'll export a
> function for you.  (I think it's unlikely to be .win32consoleCompletion, but
> who knows.)

Yes, .win32consoleCompletion() was meant for use by the Windows GUI,
but I can see a use-case for something similar elsewhere (for example,
ESS defines something analogous).

But I don't immediately see why another R package should need this. If
you have a legitimate use, we can discuss off-list and come up with a
solution.

-Deepayan

>
> Duncan Murdoch
>
>
>> (full quote because of the age of the tread)
>>
>>
>> Kind regards Knut
>> Am 22.08.2013 20:57, schrieb Michael Friendly:
>> > On 8/22/2013 7:45 AM, Uwe Ligges wrote:
>> >>
>> >>
>> >> On 22.08.2013 07:45, Yihui Xie wrote:
>> >>> Hi,
>> >>>
>> >>> So now R CMD check starts to warn against :::, but I believe sometimes
>> >>> it is legitimate to use it when developing R packages. For example, I
>> >>> have some utils functions that are not exported but I want to share
>> >>> them across the packages that I maintain. I do not need to coordinate
>> >>> with other authors about these internal functions since I'm the only
>> >>> author and I know clearly what I'm doing, and I want to avoid copying
>> >>> and pasting the code across packages just to avoid the NOTE in R CMD
>> >>> check. What should I do in this case?
>> >>
>> >> Nothing. The way you describe above seems to be a reasonable usage, iff
>> >> you are the same maintainer who knows what is going on. Other
>> >> maintainers should not use one of your not exported (hence non API)
>> >> functions, of course.
>> >>
>> >> Uwe Ligges
>> >>
>> >>
>> >
>> > Related to this is the use of other-package unexported utility functions
>> > that don't pass Uwe's iff test, but I, as maintainer,
>> > want to use in my package.
>> >
>> > Cases in point:  in heplots, I had used stats:::Pillai, stats:::Wilks,
>> > stats:::Roy and stats:::LH for calculation in one of my functions.
>> > Similarly, I had a need to use car:::df.terms, also unexported, but
>> > don't want to ask John Fox to export it just for my use.  Uwe's
>> > reply suggests that I should not be using car:::df.terms, however.
>> >
>> > To avoid the NOTEs (which often triggers a 'pls fix' upon submission to
>> > CRAN), I simply copied/pasted these functions to my package, but this
>> > seems wasteful.
>> >
>> > -Michael
>> >
>> >
>>
>> ______________________________________________
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel
>
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From wewolski at gmail.com  Wed May 14 10:57:09 2014
From: wewolski at gmail.com (Witold E Wolski)
Date: Wed, 14 May 2014 10:57:09 +0200
Subject: [Rd] S3 - how to implement "colnames<-"
Message-ID: <CAAjnpdhA5zQD=Zjr1UL8ofTc6iBbCW3w1VWuidLdQHPsQ3PhBw@mail.gmail.com>

An embedded and charset-unspecified text was scrubbed...
Name: not available
URL: <https://stat.ethz.ch/pipermail/r-devel/attachments/20140514/f7332c0e/attachment.pl>

From rh at knut-krueger.de  Wed May 14 11:25:10 2014
From: rh at knut-krueger.de (Knut Krueger)
Date: Wed, 14 May 2014 11:25:10 +0200
Subject: [Rd] legitimate use of :::
In-Reply-To: <CADfFDC7LRnDW9gGpCTVtMmOWjuUZx5AxHkRa6x3eL8Q++7uc=Q@mail.gmail.com>
References: <CANROs4dyoRyjoVHZLs7wDrFrjVX-1zvTTv2i4tBzF3f6Rx-XTA@mail.gmail.com>	<5215F9BD.5030009@statistik.tu-dortmund.de>	<52165F15.1090500@yorku.ca>
	<537244D8.7020707@knut-krueger.de>	<53726B8E.8080902@gmail.com>
	<CADfFDC7LRnDW9gGpCTVtMmOWjuUZx5AxHkRa6x3eL8Q++7uc=Q@mail.gmail.com>
Message-ID: <53733676.2040706@knut-krueger.de>

Am 14.05.2014 08:56, schrieb Deepayan Sarkar:
> On Wed, May 14, 2014 at 12:29 AM, Duncan Murdoch
> <murdoch.duncan at gmail.com> wrote:
>> I think you are misunderstanding the comments in that file.  It's an
>> internal set of tests for the package, so "test some typical completion
>> attempts" is a description of the tests that follow, it's not a suggestion
>> that you should be able to run those lines
>> from your package.
>>
>> If you do want access to the completion mechanism from a package, you should
>> write to its author (Deepayan Sarkar) and explain the kinds of things you
>> need to do.  If you can convince him that giving you access is worth the
>> trouble of exposing some of it to user-level code, then he'll export a
>> function for you.  (I think it's unlikely to be .win32consoleCompletion, but
>> who knows.)
>
> Yes, .win32consoleCompletion() was meant for use by the Windows GUI,
> but I can see a use-case for something similar elsewhere (for example,
> ESS defines something analogous).
>
> But I don't immediately see why another R package should need this. If
> you have a legitimate use, we can discuss off-list and come up with a
> solution.
>
As TinnR was used at the University I tried to update the TinnR package 
because it was removed from cran
http://cran.rstudio.com/web/packages/TinnR/index.html

I think they used the win32consoleCompletion to connect Tinnr (Windows) 
with R - I do not really know the reason.

Actually I found that R-Studio is much better for R-beginner and 
available for all platforms.

Thanks for your hints - but I will not solve this problem anymore


Knut


From dusa.adrian at unibuc.ro  Wed May 14 11:37:52 2014
From: dusa.adrian at unibuc.ro (=?UTF-8?B?QWRyaWFuIER1yJlh?=)
Date: Wed, 14 May 2014 12:37:52 +0300
Subject: [Rd] large integer values
Message-ID: <CAJ=0CtBbsqpx54p---oGxziiSLum4_k449z+hjtSjuQDdSk0Mw@mail.gmail.com>

An embedded and charset-unspecified text was scrubbed...
Name: not available
URL: <https://stat.ethz.ch/pipermail/r-devel/attachments/20140514/c5aa4816/attachment.pl>

From luca.cerone at gmail.com  Wed May 14 11:42:02 2014
From: luca.cerone at gmail.com (Luca Cerone)
Date: Wed, 14 May 2014 11:42:02 +0200
Subject: [Rd] [R] S3 - how to implement "colnames<-"
In-Reply-To: <CAAjnpdhA5zQD=Zjr1UL8ofTc6iBbCW3w1VWuidLdQHPsQ3PhBw@mail.gmail.com>
References: <CAAjnpdhA5zQD=Zjr1UL8ofTc6iBbCW3w1VWuidLdQHPsQ3PhBw@mail.gmail.com>
Message-ID: <CAFnz2-_ug2cFf1N_SV+JfQDsSjcu1bCCADHB2QerSipsUbyZbg@mail.gmail.com>

Hi Witold,
you should first of all redefine colnames to use UseMethod.
Then you have to write a colnames.default that uses base::colnames
(so that it does not interfere with existing code and other functions)
and the you can define the method for your class.

I would suggest, though, to use attributes for your object, rather
than risking to mess up the default R function.

Hope it helps,
Cheers,
Luca

2014-05-14 10:57 GMT+02:00 Witold E Wolski <wewolski at gmail.com>:
> Have a class for which I would like to provide a "colnames<-.myclass"
> function so that
>
> colnames(myintsance) <- c("a","b","c")
> can be called.
>
> Witold
>
>
> --
> Witold Eryk Wolski
>
>         [[alternative HTML version deleted]]
>
> ______________________________________________
> R-help at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-help
> PLEASE do read the posting guide http://www.R-project.org/posting-guide.html
> and provide commented, minimal, self-contained, reproducible code.



-- 
Luca Cerone

Tel: +34 692 06 71 28
Skype: luca.cerone


From ripley at stats.ox.ac.uk  Wed May 14 13:45:34 2014
From: ripley at stats.ox.ac.uk (Prof Brian Ripley)
Date: Wed, 14 May 2014 12:45:34 +0100
Subject: [Rd] large integer values
In-Reply-To: <CAJ=0CtBbsqpx54p---oGxziiSLum4_k449z+hjtSjuQDdSk0Mw@mail.gmail.com>
References: <CAJ=0CtBbsqpx54p---oGxziiSLum4_k449z+hjtSjuQDdSk0Mw@mail.gmail.com>
Message-ID: <5373575E.4030906@stats.ox.ac.uk>

On 14/05/2014 10:37, Adrian Du?a wrote:
> Dear devels,
>
> I need to create a (short) vector in C, which contains potentially very
> large numbers, exponentially to the powers of 2.

This isn't an R question, except in so far that R mandates the usual 
convention of C <int> being 32-bit.  However

1) You should use an unsigned integer type.
2) Most compilers have uint64_t but C99/C11 do not require it.  They 
require uint_fast64_t and uintmax_t (which is the widest unsigned int) 
types.
3) double will hold much larger powers, and functions like pow_di (where 
supported) or pow will compute them efficiently for you.  And R has 
R_pow_di in Rmath.h.

>
> This is my test example:
>
> lgth = 35;
> int power[lgth];
> power[lgth - 1] = 1;
> for (j = 1; j < lgth; j++) {
>      power[lgth - j - 1] = 2*power[lgth - j];
> }
>
> Everything works ok until it reaches the limit of 2^32:
>
> power: 1, 2, 4, 8, 16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192,
> 16384, 32768, 65536, 131072, 262144, 524288, 1048576, 2097152, 4194304,
> 8388608, 16777216, 33554432, 67108864, 134217728, 268435456, 536870912,
> 1073741824, -2147483648, 0, 0, 0
>
> How should I declare the "power" vector, in order to accept integer values
> larger then 2^32?
>
> Thanks very much in advance,
> Adrian
>
>


-- 
Brian D. Ripley,                  ripley at stats.ox.ac.uk
Professor of Applied Statistics,  http://www.stats.ox.ac.uk/~ripley/
University of Oxford,             Tel:  +44 1865 272861 (self)
1 South Parks Road,                     +44 1865 272866 (PA)
Oxford OX1 3TG, UK                Fax:  +44 1865 272595


From dusa.adrian at unibuc.ro  Wed May 14 14:41:39 2014
From: dusa.adrian at unibuc.ro (=?UTF-8?B?QWRyaWFuIER1yJlh?=)
Date: Wed, 14 May 2014 15:41:39 +0300
Subject: [Rd] large integer values
In-Reply-To: <5373575E.4030906@stats.ox.ac.uk>
References: <CAJ=0CtBbsqpx54p---oGxziiSLum4_k449z+hjtSjuQDdSk0Mw@mail.gmail.com>
	<5373575E.4030906@stats.ox.ac.uk>
Message-ID: <CAJ=0CtA2yt28cT-j5mP5M0a3_s_XZ8f3iJ4kQPm6NzmZS7a6iw@mail.gmail.com>

An embedded and charset-unspecified text was scrubbed...
Name: not available
URL: <https://stat.ethz.ch/pipermail/r-devel/attachments/20140514/4f67abbe/attachment.pl>

From simon.urbanek at r-project.org  Wed May 14 16:35:24 2014
From: simon.urbanek at r-project.org (Simon Urbanek)
Date: Wed, 14 May 2014 10:35:24 -0400
Subject: [Rd] large integer values
In-Reply-To: <CAJ=0CtA2yt28cT-j5mP5M0a3_s_XZ8f3iJ4kQPm6NzmZS7a6iw@mail.gmail.com>
References: <CAJ=0CtBbsqpx54p---oGxziiSLum4_k449z+hjtSjuQDdSk0Mw@mail.gmail.com>
	<5373575E.4030906@stats.ox.ac.uk>
	<CAJ=0CtA2yt28cT-j5mP5M0a3_s_XZ8f3iJ4kQPm6NzmZS7a6iw@mail.gmail.com>
Message-ID: <A4FBBBFD-7E66-444A-BEF0-7F2B40613D5F@r-project.org>

On May 14, 2014, at 8:41 AM, Adrian Du?a <dusa.adrian at unibuc.ro> wrote:

> Dear Prof. Ripley,
> 
> Once again, thank you for your replies.
> I must confess not being a genuine C programmer, having learned how to use
> C only in connection to R (and the macros provided are almost a separate
> language to learn).
> 
> I'll try to read more about the types you've indicated, and will keep
> trying. So far, most certainly I am not doing it right, because all of them
> have the same result. Tried declaring:
> 
> uint64_t power[lgth];
> and
> uint_fast64_t power[lgth];
> and
> uintmax_t power[lgth];
> 
> but still the top threshold appears at the limit of 32-bit in all cases.
> 

How do you print them? It seems like you're printing 32-bit value instead ... (powers of 2 are simply shifts of 1). 

Cheers,
S


> Will keep reading about these...
> Best wishes,
> Adrian
> 
> 
> 
> On Wed, May 14, 2014 at 2:45 PM, Prof Brian Ripley <ripley at stats.ox.ac.uk>wrote:
> 
>> On 14/05/2014 10:37, Adrian Du?a wrote:
>> 
>>> Dear devels,
>>> 
>>> I need to create a (short) vector in C, which contains potentially very
>>> large numbers, exponentially to the powers of 2.
>>> 
>> 
>> This isn't an R question, except in so far that R mandates the usual
>> convention of C <int> being 32-bit.  However
>> 
>> 1) You should use an unsigned integer type.
>> 2) Most compilers have uint64_t but C99/C11 do not require it.  They
>> require uint_fast64_t and uintmax_t (which is the widest unsigned int)
>> types.
>> 3) double will hold much larger powers, and functions like pow_di (where
>> supported) or pow will compute them efficiently for you.  And R has
>> R_pow_di in Rmath.h.
>> 
>> 
>> 
>>> This is my test example:
>>> 
>>> lgth = 35;
>>> int power[lgth];
>>> power[lgth - 1] = 1;
>>> for (j = 1; j < lgth; j++) {
>>>     power[lgth - j - 1] = 2*power[lgth - j];
>>> }
>>> 
>>> Everything works ok until it reaches the limit of 2^32:
>>> 
>>> power: 1, 2, 4, 8, 16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192,
>>> 16384, 32768, 65536, 131072, 262144, 524288, 1048576, 2097152, 4194304,
>>> 8388608, 16777216, 33554432, 67108864, 134217728, 268435456, 536870912,
>>> 1073741824, -2147483648, 0, 0, 0
>>> 
>>> How should I declare the "power" vector, in order to accept integer values
>>> larger then 2^32?
>>> 
>>> Thanks very much in advance,
>>> Adrian
>>> 
>>> 
>>> 
>> 
>> --
>> Brian D. Ripley,                  ripley at stats.ox.ac.uk
>> Professor of Applied Statistics,  http://www.stats.ox.ac.uk/~ripley/
>> University of Oxford,             Tel:  +44 1865 272861 (self)
>> 1 South Parks Road,                     +44 1865 272866 (PA)
>> Oxford OX1 3TG, UK                Fax:  +44 1865 272595
>> 
> 
> 
> 
> -- 
> Adrian Dusa
> University of Bucharest
> Romanian Social Data Archive
> 1, Schitu Magureanu Bd.
> 050025 Bucharest sector 5
> Romania
> Tel.:+40 21 3126618 \
>        +40 21 3120210 / int.101
> Fax: +40 21 3158391
> 
> 	[[alternative HTML version deleted]]
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From dusa.adrian at unibuc.ro  Wed May 14 17:17:01 2014
From: dusa.adrian at unibuc.ro (=?UTF-8?B?QWRyaWFuIER1yJlh?=)
Date: Wed, 14 May 2014 18:17:01 +0300
Subject: [Rd] large integer values
In-Reply-To: <A4FBBBFD-7E66-444A-BEF0-7F2B40613D5F@r-project.org>
References: <CAJ=0CtBbsqpx54p---oGxziiSLum4_k449z+hjtSjuQDdSk0Mw@mail.gmail.com>
	<5373575E.4030906@stats.ox.ac.uk>
	<CAJ=0CtA2yt28cT-j5mP5M0a3_s_XZ8f3iJ4kQPm6NzmZS7a6iw@mail.gmail.com>
	<A4FBBBFD-7E66-444A-BEF0-7F2B40613D5F@r-project.org>
Message-ID: <CAJ=0CtDJpK+9HBVsMB=LxtbKQR8tW=bzfbeDjZtRosKdi945GQ@mail.gmail.com>

An embedded and charset-unspecified text was scrubbed...
Name: not available
URL: <https://stat.ethz.ch/pipermail/r-devel/attachments/20140514/dc728899/attachment.pl>

From plummerm at iarc.fr  Wed May 14 17:24:12 2014
From: plummerm at iarc.fr (Martyn Plummer)
Date: Wed, 14 May 2014 15:24:12 +0000
Subject: [Rd] large integer values
In-Reply-To: <CAJ=0CtDJpK+9HBVsMB=LxtbKQR8tW=bzfbeDjZtRosKdi945GQ@mail.gmail.com>
References: <CAJ=0CtBbsqpx54p---oGxziiSLum4_k449z+hjtSjuQDdSk0Mw@mail.gmail.com>
	<5373575E.4030906@stats.ox.ac.uk>
	<CAJ=0CtA2yt28cT-j5mP5M0a3_s_XZ8f3iJ4kQPm6NzmZS7a6iw@mail.gmail.com>
	<A4FBBBFD-7E66-444A-BEF0-7F2B40613D5F@r-project.org>
	<CAJ=0CtDJpK+9HBVsMB=LxtbKQR8tW=bzfbeDjZtRosKdi945GQ@mail.gmail.com>
Message-ID: <1400081052.3610.1.camel@braque.iarc.fr>

On Wed, 2014-05-14 at 18:17 +0300, Adrian Du?a wrote:
> On Wed, May 14, 2014 at 5:35 PM, Simon Urbanek
> <simon.urbanek at r-project.org>wrote:
> 
> > [...]
> >
> > How do you print them? It seems like you're printing 32-bit value instead
> > ... (powers of 2 are simply shifts of 1).
> >
> >
> I am simply using Rprintf():
> 
>     long long int power[lgth];
>     power[lgth - 1] = 1;
>     Rprintf("power: %d", power[lgth - 1]);
>     for (j = 1; j < lgth; j++) {
>         power[lgth - j - 1] = 2*power[lgth - j];
>         Rprintf(", %d", power[lgth - j - 1]);
>     }
> 
> 
> Basically, I need them in reversed order (hence the inverse indexing), but
> the values are nonetheless the same.
> Adrian
> 
> PS: also tried long long int, same result...

Your numbers are being coerced to int when you print them. Try the
format ", %lld" instead.

Martyn



From ccberry at ucsd.edu  Wed May 14 17:42:31 2014
From: ccberry at ucsd.edu (Charles Berry)
Date: Wed, 14 May 2014 15:42:31 +0000
Subject: [Rd] S3 - how to implement "colnames<-"
References: <CAAjnpdhA5zQD=Zjr1UL8ofTc6iBbCW3w1VWuidLdQHPsQ3PhBw@mail.gmail.com>
Message-ID: <loom.20140514T172447-280@post.gmane.org>

Witold E Wolski <wewolski <at> gmail.com> writes:

> 
> Have a class for which I would like to provide a "colnames<-.myclass"
> function so that
> 
> colnames(myintsance) <- c("a","b","c")
> can be called.


`colnames<-` is not generic as Luca noted.

But `dimnames<-` is.

If you write a suitable `dimnames<-.myinstance`, then `colnames<-` will 
find it.

`dimnames<-.data.frame` gives an example.

I think you will want to either call NextMethod() or replace
attr(x,"dimnames") and return x. That is, you probably do not want to
use `dimnames<-`inside `dimnames<-.myinstance`. 

HTH,

Chuck


From xie at yihui.name  Wed May 14 23:34:27 2014
From: xie at yihui.name (Yihui Xie)
Date: Wed, 14 May 2014 16:34:27 -0500
Subject: [Rd] Bug in read.dcf(all = TRUE)?
Message-ID: <CANROs4fMB6ReAcZOcXZDTxc_ELP3ju7rNWi7vdy0ZkROqqbvxQ@mail.gmail.com>

Hi,

read.dcf() can modify the locale variable LC_CTYPE, and here is a
minimal example:

> Sys.getlocale('LC_CTYPE')
[1] "en_US.UTF-8"
> read.dcf(textConnection('a: b'), all = TRUE)
  a
1 b
> Sys.getlocale('LC_CTYPE')
[1] "C"

After diagnosing the problem, it seems the on.exit() call in
read.dcf() is the culprit:

    on.exit(Sys.setlocale("LC_CTYPE", Sys.getlocale("LC_CTYPE")), add = TRUE)
    Sys.setlocale("LC_CTYPE", "C")

https://github.com/wch/r-source/blob/96a2cc920/src/library/base/R/dcf.R#L68-L69

> sessionInfo()
R version 3.1.0 (2014-04-10)
Platform: x86_64-pc-linux-gnu (64-bit)

locale:
 [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C
LC_TIME=en_US.UTF-8
 [4] LC_COLLATE=en_US.UTF-8     LC_MONETARY=en_US.UTF-8
LC_MESSAGES=en_US.UTF-8
 [7] LC_PAPER=en_US.UTF-8       LC_NAME=C
LC_ADDRESS=C
[10] LC_TELEPHONE=C             LC_MEASUREMENT=en_US.UTF-8
LC_IDENTIFICATION=C

attached base packages:
[1] stats     graphics  grDevices utils     datasets  methods   base

loaded via a namespace (and not attached):
[1] tools_3.1.0


Regards,
Yihui
--
Yihui Xie <xieyihui at gmail.com>
Web: http://yihui.name


From dusa.adrian at unibuc.ro  Wed May 14 23:37:11 2014
From: dusa.adrian at unibuc.ro (=?UTF-8?B?QWRyaWFuIER1yJlh?=)
Date: Thu, 15 May 2014 00:37:11 +0300
Subject: [Rd] large integer values
In-Reply-To: <1400081052.3610.1.camel@braque.iarc.fr>
References: <CAJ=0CtBbsqpx54p---oGxziiSLum4_k449z+hjtSjuQDdSk0Mw@mail.gmail.com>
	<5373575E.4030906@stats.ox.ac.uk>
	<CAJ=0CtA2yt28cT-j5mP5M0a3_s_XZ8f3iJ4kQPm6NzmZS7a6iw@mail.gmail.com>
	<A4FBBBFD-7E66-444A-BEF0-7F2B40613D5F@r-project.org>
	<CAJ=0CtDJpK+9HBVsMB=LxtbKQR8tW=bzfbeDjZtRosKdi945GQ@mail.gmail.com>
	<1400081052.3610.1.camel@braque.iarc.fr>
Message-ID: <CAJ=0CtC4Qp5ysTVZt_qskS1ubdh8guk5eW-BTyXTxec=ixXVyA@mail.gmail.com>

An embedded and charset-unspecified text was scrubbed...
Name: not available
URL: <https://stat.ethz.ch/pipermail/r-devel/attachments/20140515/e653df12/attachment.pl>

From dusa.adrian at unibuc.ro  Fri May 16 10:16:23 2014
From: dusa.adrian at unibuc.ro (=?UTF-8?B?QWRyaWFuIER1yJlh?=)
Date: Fri, 16 May 2014 11:16:23 +0300
Subject: [Rd] SEXPTYPEs
Message-ID: <CAJ=0CtBEqPzDQcCkRPat1d51DprFPjZpQR3BiooSiFWfPE-EPA@mail.gmail.com>

An embedded and charset-unspecified text was scrubbed...
Name: not available
URL: <https://stat.ethz.ch/pipermail/r-devel/attachments/20140516/4af05ae0/attachment.pl>

From murdoch.duncan at gmail.com  Fri May 16 12:06:24 2014
From: murdoch.duncan at gmail.com (Duncan Murdoch)
Date: Fri, 16 May 2014 06:06:24 -0400
Subject: [Rd] SEXPTYPEs
In-Reply-To: <CAJ=0CtBEqPzDQcCkRPat1d51DprFPjZpQR3BiooSiFWfPE-EPA@mail.gmail.com>
References: <CAJ=0CtBEqPzDQcCkRPat1d51DprFPjZpQR3BiooSiFWfPE-EPA@mail.gmail.com>
Message-ID: <5375E320.8080007@gmail.com>

On 16/05/2014, 4:16 AM, Adrian Du?a wrote:
> Dear list,
>
> On a follow up from my previous email, I am now trying to allocate vectors
> of length larger than 32-bit in C.
>
>>From the R internals documentation, I read that:
> "The sxpinfo header is defined as a 32-bit C structure..."
> and
> "A SEXPREC is a C structure containing the 32-bit header..."
>
> The question is: does the INTSXP allow vectors larger than 32-bit?
>
>
> A test example:
>
> //###
> int *p_temp;
>
> SEXP root = PROTECT(allocVector(VECSXP, 5));
>
> long long int verylargeinteger;
> // something to compute verylargeinteger, > 32-bit
>
> SEXP temp = SET_VECTOR_ELT(root, 0, allocVector(INTSXP, verylargeinteger));
> p_temp = INTEGER(temp);
> //###
>
> "temp" should be a vector of length > 32-bit, and "p_temp" should be the
> pointer to that vector.
>
> If declaring:
> long long int *p_temp;
> (but the compiler throws a warning with an incompatible pointer type,
> because pointers should be integers of course).
>
> I've looked at all SEXPTYPEs in the R internals, and the only one specific
> to integer vectors is INTSXP. Can this be used for vectors of length larger
> than 32-bit?

Yes, see the section on "Long Vectors" in chapter 12.

Duncan Murdoch

>
> Thank you again, in advance,
> Adrian
>
>


From ripley at stats.ox.ac.uk  Fri May 16 13:15:10 2014
From: ripley at stats.ox.ac.uk (Prof Brian Ripley)
Date: Fri, 16 May 2014 12:15:10 +0100
Subject: [Rd] SEXPTYPEs
In-Reply-To: <5375E320.8080007@gmail.com>
References: <CAJ=0CtBEqPzDQcCkRPat1d51DprFPjZpQR3BiooSiFWfPE-EPA@mail.gmail.com>
	<5375E320.8080007@gmail.com>
Message-ID: <5375F33E.5090702@stats.ox.ac.uk>

On 16/05/2014 11:06, Duncan Murdoch wrote:
> On 16/05/2014, 4:16 AM, Adrian Du?a wrote:
>> Dear list,
>>
>> On a follow up from my previous email, I am now trying to allocate
>> vectors
>> of length larger than 32-bit in C.
>>
>>> From the R internals documentation, I read that:
>> "The sxpinfo header is defined as a 32-bit C structure..."
>> and
>> "A SEXPREC is a C structure containing the 32-bit header..."
>>
>> The question is: does the INTSXP allow vectors larger than 32-bit?
>>
>>
>> A test example:
>>
>> //###
>> int *p_temp;
>>
>> SEXP root = PROTECT(allocVector(VECSXP, 5));
>>
>> long long int verylargeinteger;
>> // something to compute verylargeinteger, > 32-bit
>>
>> SEXP temp = SET_VECTOR_ELT(root, 0, allocVector(INTSXP,
>> verylargeinteger));
>> p_temp = INTEGER(temp);
>> //###
>>
>> "temp" should be a vector of length > 32-bit, and "p_temp" should be the
>> pointer to that vector.
>>
>> If declaring:
>> long long int *p_temp;
>> (but the compiler throws a warning with an incompatible pointer type,
>> because pointers should be integers of course).
>>
>> I've looked at all SEXPTYPEs in the R internals, and the only one
>> specific
>> to integer vectors is INTSXP. Can this be used for vectors of length
>> larger
>> than 32-bit?
>
> Yes, see the section on "Long Vectors" in chapter 12.

('Yes on a 64-bit platform.')  The type for a vector length is R_xlen_t, 
e.g. allocVector is declared as

SEXP     Rf_allocVector(SEXPTYPE, R_xlen_t);

That is never 'long long int' ....

>
> Duncan Murdoch
>
>>
>> Thank you again, in advance,
>> Adrian
>>
>>
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


-- 
Brian D. Ripley,                  ripley at stats.ox.ac.uk
Professor of Applied Statistics,  http://www.stats.ox.ac.uk/~ripley/
University of Oxford,             Tel:  +44 1865 272861 (self)
1 South Parks Road,                     +44 1865 272866 (PA)
Oxford OX1 3TG, UK                Fax:  +44 1865 272595


From xie at yihui.name  Fri May 16 21:52:58 2014
From: xie at yihui.name (Yihui Xie)
Date: Fri, 16 May 2014 14:52:58 -0500
Subject: [Rd] Bug in read.dcf(all = TRUE)?
In-Reply-To: <CANROs4fMB6ReAcZOcXZDTxc_ELP3ju7rNWi7vdy0ZkROqqbvxQ@mail.gmail.com>
References: <CANROs4fMB6ReAcZOcXZDTxc_ELP3ju7rNWi7vdy0ZkROqqbvxQ@mail.gmail.com>
Message-ID: <CANROs4dhbLs-yQUfm-eWXph_odtGQLcZ8mG0oOZhrC=jtH4F_g@mail.gmail.com>

Cc'ing Kurt since the version control history shows he brought it in a
few years ago: https://github.com/wch/r-source/commit/53d4b432f7

The fix can be fairly simple if someone has one minute:

    lc_ctype <- Sys.getlocale("LC_CTYPE")
    on.exit(Sys.setlocale("LC_CTYPE", lc_ctype), add = TRUE)
    Sys.setlocale("LC_CTYPE", "C")

although I do not really understand why LC_CTYPE has to be changed to "C".

Regards,
Yihui
--
Yihui Xie <xieyihui at gmail.com>
Web: http://yihui.name


On Wed, May 14, 2014 at 4:34 PM, Yihui Xie <xie at yihui.name> wrote:
> Hi,
>
> read.dcf() can modify the locale variable LC_CTYPE, and here is a
> minimal example:
>
>> Sys.getlocale('LC_CTYPE')
> [1] "en_US.UTF-8"
>> read.dcf(textConnection('a: b'), all = TRUE)
>   a
> 1 b
>> Sys.getlocale('LC_CTYPE')
> [1] "C"
>
> After diagnosing the problem, it seems the on.exit() call in
> read.dcf() is the culprit:
>
>     on.exit(Sys.setlocale("LC_CTYPE", Sys.getlocale("LC_CTYPE")), add = TRUE)
>     Sys.setlocale("LC_CTYPE", "C")
>
> https://github.com/wch/r-source/blob/96a2cc920/src/library/base/R/dcf.R#L68-L69
>
>> sessionInfo()
> R version 3.1.0 (2014-04-10)
> Platform: x86_64-pc-linux-gnu (64-bit)
>
> locale:
>  [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C
> LC_TIME=en_US.UTF-8
>  [4] LC_COLLATE=en_US.UTF-8     LC_MONETARY=en_US.UTF-8
> LC_MESSAGES=en_US.UTF-8
>  [7] LC_PAPER=en_US.UTF-8       LC_NAME=C
> LC_ADDRESS=C
> [10] LC_TELEPHONE=C             LC_MEASUREMENT=en_US.UTF-8
> LC_IDENTIFICATION=C
>
> attached base packages:
> [1] stats     graphics  grDevices utils     datasets  methods   base
>
> loaded via a namespace (and not attached):
> [1] tools_3.1.0
>
>
> Regards,
> Yihui
> --
> Yihui Xie <xieyihui at gmail.com>
> Web: http://yihui.name


From dominic.comtois at gmail.com  Fri May 16 22:41:13 2014
From: dominic.comtois at gmail.com (Dominic Comtois)
Date: Fri, 16 May 2014 16:41:13 -0400
Subject: [Rd] Inconsistency in vector printing depending on length
Message-ID: <CAEfsz7rv3K-synBwHLxkBc3b9sbcQ5=JJMi-Jw18GCN4v4OcRQ@mail.gmail.com>

An embedded and charset-unspecified text was scrubbed...
Name: not available
URL: <https://stat.ethz.ch/pipermail/r-devel/attachments/20140516/54890cf3/attachment.pl>

From wdunlap at tibco.com  Fri May 16 22:58:41 2014
From: wdunlap at tibco.com (William Dunlap)
Date: Fri, 16 May 2014 13:58:41 -0700
Subject: [Rd] Inconsistency in vector printing depending on length
In-Reply-To: <CAEfsz7rv3K-synBwHLxkBc3b9sbcQ5=JJMi-Jw18GCN4v4OcRQ@mail.gmail.com>
References: <CAEfsz7rv3K-synBwHLxkBc3b9sbcQ5=JJMi-Jw18GCN4v4OcRQ@mail.gmail.com>
Message-ID: <CAF8bMcbG8P2YiKmWkXhBoOuAaGddHzcX3LPVOaR61BEdhXXr+g@mail.gmail.com>

> It seems that when a vector has 10 elements, it prints out differently than
> one with 9 (extra space before the opening bracket). I can't see why this
> is happening.

It is happening because the print routine wants to be ready to print
all the line-beginning [index] tags aligned with each other.  With
every power of ten in length it will need an extra space.  I guess that
when it does this it doesn't check whether it will need to make an [index]
tag for the tail end of the vector.

Bill Dunlap
TIBCO Software
wdunlap tibco.com


On Fri, May 16, 2014 at 1:41 PM, Dominic Comtois
<dominic.comtois at gmail.com> wrote:
> Consider the following:
>
>> 20:28[1] 20 21 22 23 24 25 26 27 28> 20:29 [1] 20 21 22 23 24 25 26 27 28 29
>
>
> It seems that when a vector has 10 elements, it prints out differently than
> one with 9 (extra space before the opening bracket). I can't see why this
> is happening. I am writing a manual containing many examples and the
> misalignment of the [1]'s is visually problematic.
>
> For additional considerations, please see my stackoverflow post:
> http://stackoverflow.com/questions/23703126/fixing-inconsistent-spacing-after-in-output-of-knitted-document/
>
> R version: 3.1.0
>
> Regards,
>
> Dominic Comtois
>
>         [[alternative HTML version deleted]]
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From lorenz at usgs.gov  Fri May 16 23:05:57 2014
From: lorenz at usgs.gov (Lorenz, David)
Date: Fri, 16 May 2014 16:05:57 -0500
Subject: [Rd] Inconsistency in vector printing depending on length
In-Reply-To: <CAEfsz7rv3K-synBwHLxkBc3b9sbcQ5=JJMi-Jw18GCN4v4OcRQ@mail.gmail.com>
References: <CAEfsz7rv3K-synBwHLxkBc3b9sbcQ5=JJMi-Jw18GCN4v4OcRQ@mail.gmail.com>
Message-ID: <CALxY2Ldh7pRj06FyCxLGyeCLTTiqYgrhTOZmKD3F0sZr5xV5rw@mail.gmail.com>

An embedded and charset-unspecified text was scrubbed...
Name: not available
URL: <https://stat.ethz.ch/pipermail/r-devel/attachments/20140516/c2a6ef70/attachment.pl>

From dominic.comtois at gmail.com  Fri May 16 23:16:05 2014
From: dominic.comtois at gmail.com (Dominic Comtois)
Date: Fri, 16 May 2014 17:16:05 -0400
Subject: [Rd] Inconsistency in vector printing depending on length
In-Reply-To: <CAF8bMcbG8P2YiKmWkXhBoOuAaGddHzcX3LPVOaR61BEdhXXr+g@mail.gmail.com>
References: <CAEfsz7rv3K-synBwHLxkBc3b9sbcQ5=JJMi-Jw18GCN4v4OcRQ@mail.gmail.com>
	<CAF8bMcbG8P2YiKmWkXhBoOuAaGddHzcX3LPVOaR61BEdhXXr+g@mail.gmail.com>
Message-ID: <CAEfsz7qgn_sUXNLygOSH84PCXB6s_sf7ThA8gtZdFAhD64VCqg@mail.gmail.com>

An embedded and charset-unspecified text was scrubbed...
Name: not available
URL: <https://stat.ethz.ch/pipermail/r-devel/attachments/20140516/80bc06c3/attachment.pl>

From dusa.adrian at unibuc.ro  Sat May 17 11:47:47 2014
From: dusa.adrian at unibuc.ro (=?UTF-8?B?QWRyaWFuIER1yJlh?=)
Date: Sat, 17 May 2014 12:47:47 +0300
Subject: [Rd] SEXPTYPEs
In-Reply-To: <5375F33E.5090702@stats.ox.ac.uk>
References: <CAJ=0CtBEqPzDQcCkRPat1d51DprFPjZpQR3BiooSiFWfPE-EPA@mail.gmail.com>
	<5375E320.8080007@gmail.com> <5375F33E.5090702@stats.ox.ac.uk>
Message-ID: <CAJ=0CtDa-+MeaOugLMexbAY4TgeihsEmtf_ywuL0P+Aep+BWWg@mail.gmail.com>

An embedded and charset-unspecified text was scrubbed...
Name: not available
URL: <https://stat.ethz.ch/pipermail/r-devel/attachments/20140517/0e94c6ad/attachment.pl>

From mick.jordan at oracle.com  Sat May 17 19:42:50 2014
From: mick.jordan at oracle.com (Mick Jordan)
Date: Sat, 17 May 2014 10:42:50 -0700
Subject: [Rd] environment question
Message-ID: <53779F9A.1040809@oracle.com>

An embedded and charset-unspecified text was scrubbed...
Name: not available
URL: <https://stat.ethz.ch/pipermail/r-devel/attachments/20140517/e08350c3/attachment.pl>

From pdalgd at gmail.com  Sun May 18 01:00:21 2014
From: pdalgd at gmail.com (peter dalgaard)
Date: Sun, 18 May 2014 01:00:21 +0200
Subject: [Rd] environment question
In-Reply-To: <53779F9A.1040809@oracle.com>
References: <53779F9A.1040809@oracle.com>
Message-ID: <414982A9-728F-4018-9D96-C3005B57BC05@gmail.com>


On 17 May 2014, at 19:42 , Mick Jordan <mick.jordan at oracle.com> wrote:

> According to 
> :https://stat.ethz.ch/R-manual/R-devel/library/base/html/environment.html
> 
> "If |fun| is a function or a formula then |environment(fun)| returns the 
> environment associated with that function or formula. If |fun| is |NULL| 
> then the current evaluation environment is returned."
> 
>> environment()
> <environment: R_GlobalEnv>
>> environment(environment)
> <environment: namespace:base>
> 
> This makes sense, however I have two questions on things that don't seem 
> to make sense:
> 
> 1.
> 
>> .Internal(environment(NULL))
> <environment: base>
> 
> Since we are calling from R_GlobalEnv, how can the calling environment 
> be base?

Read the Description section in ?.Internal carefully....

Basically, you are calling .Internal from the command line. It is not designed to be called from there and only wizards know what happens if it is. (The set of wizards who might know whether it makes any sense at all does not include me!)


> 
> 2.
> 
> In eval.R in library/base/R:
> 
> .GlobalEnv <- environment()
> parent.frame <- function(n = 1) .Internal(parent.frame(n))
> etc.
> 
> Since the functions being defined are in base, how can the calling 
> environment be R_GlobalEnv. Or does this just set .GlobalEnv temporarily 
> to base?

.GlobalEnv is a variable in base alright. The assignment happens when base is being loaded and _at that point_ the environment is R_GlobalEnv.

> 
> Thanks
> Mick Jordan
> 
> 
> 	[[alternative HTML version deleted]]
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel

-- 
Peter Dalgaard, Professor,
Center for Statistics, Copenhagen Business School
Solbjerg Plads 3, 2000 Frederiksberg, Denmark
Phone: (+45)38153501
Email: pd.mes at cbs.dk  Priv: PDalgd at gmail.com


From mick.jordan at oracle.com  Sun May 18 01:26:54 2014
From: mick.jordan at oracle.com (Mick Jordan)
Date: Sat, 17 May 2014 16:26:54 -0700
Subject: [Rd] environment question
In-Reply-To: <414982A9-728F-4018-9D96-C3005B57BC05@gmail.com>
References: <53779F9A.1040809@oracle.com>
	<414982A9-728F-4018-9D96-C3005B57BC05@gmail.com>
Message-ID: <5377F03E.2020702@oracle.com>

On 5/17/14, 4:00 PM, peter dalgaard wrote:
> On 17 May 2014, at 19:42 , Mick Jordan <mick.jordan at oracle.com> wrote:
>
>> According to
>> :https://stat.ethz.ch/R-manual/R-devel/library/base/html/environment.html
>>
>> "If |fun| is a function or a formula then |environment(fun)| returns the
>> environment associated with that function or formula. If |fun| is |NULL|
>> then the current evaluation environment is returned."
>>
>>> environment()
>> <environment: R_GlobalEnv>
>>> environment(environment)
>> <environment: namespace:base>
>>
>> This makes sense, however I have two questions on things that don't seem
>> to make sense:
>>
>> 1.
>>
>>> .Internal(environment(NULL))
>> <environment: base>
>>
>> Since we are calling from R_GlobalEnv, how can the calling environment
>> be base?
> Read the Description section in ?.Internal carefully....
>
> Basically, you are calling .Internal from the command line. It is not designed to be called from there and only wizards know what happens if it is. (The set of wizards who might know whether it makes any sense at all does not include me!)
>
Well, calling from the shell. Anyway, I was just surprised by the result 
as, notwithstanding the fact that .Internal is "special", the calling 
environment is definitely .globalEnv. The enclosing environment might 
well be different, but that's not what environment(NULL) returns. My 
curiosity relates to the fact that the two calls have different stack 
depths, so that the .Internal(environment(NULL)) call has to detect 
whether it was called via environment() or .Internal(environment(NULL)) 
in order to return the right answer.
>> 2.
>>
>> In eval.R in library/base/R:
>>
>> .GlobalEnv <- environment()
>> parent.frame <- function(n = 1) .Internal(parent.frame(n))
>> etc.
>>
>> Since the functions being defined are in base, how can the calling
>> environment be R_GlobalEnv. Or does this just set .GlobalEnv temporarily
>> to base?
> .GlobalEnv is a variable in base alright. The assignment happens when base is being loaded and _at that point_ the environment is R_GlobalEnv.
>
>
Sorry, I don't understand how that can be. The function definitions in, 
say, eval.R, and all the others in library/base/R, end up in base, as 
made clear by ls(baseenv()). So if these files are evaluated in the 
"usual way", and the environment() call in eval.R returns globalenv(), 
then they would, in fact, be defined there and not in baseenv. Now, I 
realise that this is startup code, so perhaps the implementation does 
something special and these files really aren't evaluated in the "usual" 
way.

Mick


From simon.urbanek at r-project.org  Sun May 18 06:02:37 2014
From: simon.urbanek at r-project.org (Simon Urbanek)
Date: Sun, 18 May 2014 00:02:37 -0400
Subject: [Rd] environment question
In-Reply-To: <5377F03E.2020702@oracle.com>
References: <53779F9A.1040809@oracle.com>
	<414982A9-728F-4018-9D96-C3005B57BC05@gmail.com>
	<5377F03E.2020702@oracle.com>
Message-ID: <0164B619-1165-4CF2-B779-560B25C47087@r-project.org>

On May 17, 2014, at 7:26 PM, Mick Jordan <mick.jordan at oracle.com> wrote:

> On 5/17/14, 4:00 PM, peter dalgaard wrote:
>> On 17 May 2014, at 19:42 , Mick Jordan <mick.jordan at oracle.com> wrote:
>> 
>>> According to
>>> :https://stat.ethz.ch/R-manual/R-devel/library/base/html/environment.html
>>> 
>>> "If |fun| is a function or a formula then |environment(fun)| returns the
>>> environment associated with that function or formula. If |fun| is |NULL|
>>> then the current evaluation environment is returned."
>>> 
>>>> environment()
>>> <environment: R_GlobalEnv>
>>>> environment(environment)
>>> <environment: namespace:base>
>>> 
>>> This makes sense, however I have two questions on things that don't seem
>>> to make sense:
>>> 
>>> 1.
>>> 
>>>> .Internal(environment(NULL))
>>> <environment: base>
>>> 
>>> Since we are calling from R_GlobalEnv, how can the calling environment
>>> be base?
>> Read the Description section in ?.Internal carefully....
>> 
>> Basically, you are calling .Internal from the command line. It is not designed to be called from there and only wizards know what happens if it is. (The set of wizards who might know whether it makes any sense at all does not include me!)
>> 
> Well, calling from the shell. Anyway, I was just surprised by the result as, notwithstanding the fact that .Internal is "special", the calling environment is definitely .globalEnv. The enclosing environment might well be different, but that's not what environment(NULL) returns. My curiosity relates to the fact that the two calls have different stack depths, so that the .Internal(environment(NULL)) call has to detect whether it was called via environment() or .Internal(environment(NULL)) in order to return the right answer.


.Internal() doesn't setup a context for the evaluation environment so sysparent doesn't reflect the evaluation environment. That's why environment() only works when used as a closure, compare:

> environment()
<environment: R_GlobalEnv>
> .Internal(environment(NULL))
<environment: base>
> (function() .Internal(environment(NULL)))()
<environment: R_GlobalEnv>

Again, you have been warned not to call .Internal() unless you know what you're doing so you should know what is actually happening if you call it ;).


>>> 2.
>>> 
>>> In eval.R in library/base/R:
>>> 
>>> .GlobalEnv <- environment()
>>> parent.frame <- function(n = 1) .Internal(parent.frame(n))
>>> etc.
>>> 
>>> Since the functions being defined are in base, how can the calling
>>> environment be R_GlobalEnv. Or does this just set .GlobalEnv temporarily
>>> to base?
>> .GlobalEnv is a variable in base alright. The assignment happens when base is being loaded and _at that point_ the environment is R_GlobalEnv.
>> 
>> 
> Sorry, I don't understand how that can be. The function definitions in, say, eval.R, and all the others in library/base/R, end up in base, as made clear by ls(baseenv()). So if these files are evaluated in the "usual way", and the environment() call in eval.R returns globalenv(), then they would, in fact, be defined there and not in baseenv. Now, I realise that this is startup code, so perhaps the implementation does something special and these files really aren't evaluated in the "usual" way.
> 

More importantly that's not the value forever - note that later there is

.GlobalEnv <- globalenv()

in base/R/Rprofile which is loaded *after* base/R/*.R which is the value you see when you check after base is locked.

Cheers,
Simon


From mick.jordan at oracle.com  Sun May 18 06:08:37 2014
From: mick.jordan at oracle.com (Mick Jordan)
Date: Sat, 17 May 2014 21:08:37 -0700
Subject: [Rd] environment question
In-Reply-To: <0164B619-1165-4CF2-B779-560B25C47087@r-project.org>
References: <53779F9A.1040809@oracle.com>
	<414982A9-728F-4018-9D96-C3005B57BC05@gmail.com>
	<5377F03E.2020702@oracle.com>
	<0164B619-1165-4CF2-B779-560B25C47087@r-project.org>
Message-ID: <53783245.7070100@oracle.com>

On 5/17/14, 9:02 PM, Simon Urbanek wrote:

Thanks, those were exactly the kind of answers that I wanted.
> More importantly that's not the value forever - note that later there is
>
> .GlobalEnv <- globalenv()
>
> in base/R/Rprofile which is loaded *after* base/R/*.R which is the value you see when you check after base is locked.
>
>
That's what I thought might be happening - should have checked the site 
profile. Now I'm just curious why it's important to have a value for 
.GlobalEnv during the loading of the base .R files.

Mkick


From info at aghmed.fsnet.co.uk  Sun May 18 14:33:31 2014
From: info at aghmed.fsnet.co.uk (Michael Dewey)
Date: Sun, 18 May 2014 13:33:31 +0100
Subject: [Rd] Writing my first CRAN vignette
Message-ID: <Zen-1Wm0HW-000Brs-Uv@smarthost01b.mail.zen.net.uk>

In fact my first vignette full stop.

I am intending to use Sweave. I have read the Sweave documentation 
and section 1.4 of the extensions manual and apart from (a) do not 
use split = TRUE (b) and include all the source components, there 
does not seem to be anything CRAN specific.

1 - Am I missing some other documentation?
2 - If I use a package from CTAN would that be considered within the 
spirit if not the letter of open source? I am not asking for trained 
legal advice here, it is the spirit of the rules.
3 - I assume including the .bbl file would be fine rather than making 
a separate .bib file?

I am not envisaging doing anything complex: text, formulae, some 
tables and one figure plus a few references.


Michael Dewey
info at aghmed.fsnet.co.uk
http://www.aghmed.fsnet.co.uk/home.html


From ripley at stats.ox.ac.uk  Sun May 18 15:57:08 2014
From: ripley at stats.ox.ac.uk (Prof Brian Ripley)
Date: Sun, 18 May 2014 14:57:08 +0100
Subject: [Rd] Writing my first CRAN vignette
In-Reply-To: <Zen-1Wm0HW-000Brs-Uv@smarthost01b.mail.zen.net.uk>
References: <Zen-1Wm0HW-000Brs-Uv@smarthost01b.mail.zen.net.uk>
Message-ID: <5378BC34.10403@stats.ox.ac.uk>

On 18/05/2014 13:33, Michael Dewey wrote:
> In fact my first vignette full stop.
>
> I am intending to use Sweave. I have read the Sweave documentation and
> section 1.4 of the extensions manual and apart from (a) do not use split
> = TRUE (b) and include all the source components, there does not seem to
> be anything CRAN specific.
>
> 1 - Am I missing some other documentation?

There is no such thing as a 'CRAN vignette'.  These days all 
(non-internal-to-CRAN) CRAN-specific documentation is in the CRAN policies.

> 2 - If I use a package from CTAN would that be considered within the
> spirit if not the letter of open source? I am not asking for trained
> legal advice here, it is the spirit of the rules.

Provided it is available to people to reproduce things if the package 
uses a FOSS licence.

> 3 - I assume including the .bbl file would be fine rather than making a
> separate .bib file?

No.  We have seen .bbl files which no longer worked after a TeXLive 
update, and with a FOSS licence you need to supply the sources (and 
normally the .bib file is the source).

>
> I am not envisaging doing anything complex: text, formulae, some tables
> and one figure plus a few references.
>
>
> Michael Dewey
> info at aghmed.fsnet.co.uk
> http://www.aghmed.fsnet.co.uk/home.html


-- 
Brian D. Ripley,                  ripley at stats.ox.ac.uk
Professor of Applied Statistics,  http://www.stats.ox.ac.uk/~ripley/
University of Oxford,             Tel:  +44 1865 272861 (self)
1 South Parks Road,                     +44 1865 272866 (PA)
Oxford OX1 3TG, UK                Fax:  +44 1865 272595


From h.wickham at gmail.com  Sun May 18 18:34:27 2014
From: h.wickham at gmail.com (Hadley Wickham)
Date: Sun, 18 May 2014 11:34:27 -0500
Subject: [Rd] Writing my first CRAN vignette
In-Reply-To: <Zen-1Wm0HW-000Brs-Uv@smarthost01b.mail.zen.net.uk>
References: <Zen-1Wm0HW-000Brs-Uv@smarthost01b.mail.zen.net.uk>
Message-ID: <CABdHhvEE7HdTpLCsG8rqkNhArxWu5hyEUrKoweahacC=LQX1=g@mail.gmail.com>

> I am intending to use Sweave. I have read the Sweave documentation and
> section 1.4 of the extensions manual and apart from (a) do not use split =
> TRUE (b) and include all the source components, there does not seem to be
> anything CRAN specific.

I'd strongly recommend using knitr instead - the biggest advantage is
that you can use markdown, which is substantially easier to use than
latex (and doesn't require such a massive toolchain)

Hadley


-- 
http://had.co.nz/


From edd at debian.org  Sun May 18 19:19:50 2014
From: edd at debian.org (Dirk Eddelbuettel)
Date: Sun, 18 May 2014 12:19:50 -0500
Subject: [Rd] Writing my first CRAN vignette
In-Reply-To: <CABdHhvEE7HdTpLCsG8rqkNhArxWu5hyEUrKoweahacC=LQX1=g@mail.gmail.com>
References: <Zen-1Wm0HW-000Brs-Uv@smarthost01b.mail.zen.net.uk>
	<CABdHhvEE7HdTpLCsG8rqkNhArxWu5hyEUrKoweahacC=LQX1=g@mail.gmail.com>
Message-ID: <21368.60342.628577.866831@max.nulle.part>


On 18 May 2014 at 11:34, Hadley Wickham wrote:
| > I am intending to use Sweave. I have read the Sweave documentation and
| > section 1.4 of the extensions manual and apart from (a) do not use split =
| > TRUE (b) and include all the source components, there does not seem to be
| > anything CRAN specific.
| 
| I'd strongly recommend using knitr instead - the biggest advantage is
| that you can use markdown, which is substantially easier to use than
| latex (and doesn't require such a massive toolchain)

Markdown is very useful. And it keeps getting better -- shiny-within-markdow
is / will rock very, very hard.

But there are also some things that I still much prefer to be in pdf form,
rather than (in however well-styled) html and browser content.  And some
paths in the toolchain that leads content from markdown to pdf are via latex,
so you end up using latex anyway. Which isn't really that hard to install on
any of the three main platforms as texlive bundles it pretty well.

And more generally, a vignette is (at least to me, but also some others)
still a 'paper' -- something that strives to be something like an academic
article (and occassionally even manages to get there).  

And for that form of written communication, I fear you will have to pry latex
from my cold dead hands.  

Dirk

-- 
Dirk Eddelbuettel | edd at debian.org | http://dirk.eddelbuettel.com


From info at aghmed.fsnet.co.uk  Mon May 19 10:09:39 2014
From: info at aghmed.fsnet.co.uk (Michael Dewey)
Date: Mon, 19 May 2014 09:09:39 +0100
Subject: [Rd] Writing my first CRAN vignette
In-Reply-To: <5378BC34.10403@stats.ox.ac.uk>
References: <Zen-1Wm0HW-000Brs-Uv@smarthost01b.mail.zen.net.uk>
	<5378BC34.10403@stats.ox.ac.uk>
Message-ID: <Zen-1WmIdm-0002nQ-7m@smarthost01d.mail.zen.net.uk>

At 14:57 18/05/2014, Prof Brian Ripley wrote:
>On 18/05/2014 13:33, Michael Dewey wrote:
>>In fact my first vignette full stop.
>>
>>I am intending to use Sweave. I have read the Sweave documentation and
>>section 1.4 of the extensions manual and apart from (a) do not use split
>>= TRUE (b) and include all the source components, there does not seem to
>>be anything CRAN specific.
>>
>>1 - Am I missing some other documentation?
>
>There is no such thing as a 'CRAN vignette'.  These days all 
>(non-internal-to-CRAN) CRAN-specific documentation is in the CRAN policies.
>
>>2 - If I use a package from CTAN would that be considered within the
>>spirit if not the letter of open source? I am not asking for trained
>>legal advice here, it is the spirit of the rules.
>
>Provided it is available to people to reproduce things if the 
>package uses a FOSS licence.
>
>>3 - I assume including the .bbl file would be fine rather than making a
>>separate .bib file?
>
>No.  We have seen .bbl files which no longer worked after a TeXLive 
>update, and with a FOSS licence you need to supply the sources (and 
>normally the .bib file is the source).

Thanks, that (and the other answers) will be very helpful.


>>I am not envisaging doing anything complex: text, formulae, some tables
>>and one figure plus a few references.
>>
>>
>>Michael Dewey
>>info at aghmed.fsnet.co.uk
>>http://www.aghmed.fsnet.co.uk/home.html
>
>
>--
>Brian D. Ripley,                  ripley at stats.ox.ac.uk
>Professor of Applied Statistics,  http://www.stats.ox.ac.uk/~ripley/
>University of Oxford,             Tel:  +44 1865 272861 (self)
>1 South Parks Road,                     +44 1865 272866 (PA)
>Oxford OX1 3TG, UK                Fax:  +44 1865 272595

Michael Dewey
info at aghmed.fsnet.co.uk
http://www.aghmed.fsnet.co.uk/home.html


From rdiaz02 at gmail.com  Tue May 20 01:58:48 2014
From: rdiaz02 at gmail.com (Ramon Diaz-Uriarte)
Date: Tue, 20 May 2014 01:58:48 +0200
Subject: [Rd] Writing my first CRAN vignette
In-Reply-To: <21368.60342.628577.866831@max.nulle.part>
References: <Zen-1Wm0HW-000Brs-Uv@smarthost01b.mail.zen.net.uk>
	<CABdHhvEE7HdTpLCsG8rqkNhArxWu5hyEUrKoweahacC=LQX1=g@mail.gmail.com>
	<21368.60342.628577.866831@max.nulle.part>
Message-ID: <87ha4ltj5z.fsf@gmail.com>



On Sun, 18-05-2014, at 19:19, Dirk Eddelbuettel <edd at debian.org> wrote:
> On 18 May 2014 at 11:34, Hadley Wickham wrote:
> | > I am intending to use Sweave. I have read the Sweave documentation and
> | > section 1.4 of the extensions manual and apart from (a) do not use split =
> | > TRUE (b) and include all the source components, there does not seem to be
> | > anything CRAN specific.
> | 
> | I'd strongly recommend using knitr instead - the biggest advantage is
> | that you can use markdown, which is substantially easier to use than
> | latex (and doesn't require such a massive toolchain)
>
> Markdown is very useful. And it keeps getting better -- shiny-within-markdow
> is / will rock very, very hard.
>
> But there are also some things that I still much prefer to be in pdf form,
> rather than (in however well-styled) html and browser content.  And some
> paths in the toolchain that leads content from markdown to pdf are via latex,
> so you end up using latex anyway. Which isn't really that hard to install on
> any of the three main platforms as texlive bundles it pretty well.
>
> And more generally, a vignette is (at least to me, but also some others)

To me too. But still, with knitr he can use as much latex as with Sweave.


> still a 'paper' -- something that strives to be something like an academic
> article (and occassionally even manages to get there).  
>
> And for that form of written communication, I fear you will have to pry latex
> from my cold dead hands.

:-). 


R.


>
> Dirk


-- 
Ramon Diaz-Uriarte
Department of Biochemistry, Lab B-25
Facultad de Medicina 
Universidad Aut?noma de Madrid 
Arzobispo Morcillo, 4
28029 Madrid
Spain

Phone: +34-91-497-2412

Email: rdiaz02 at gmail.com
       ramon.diaz at iib.uam.es

http://ligarto.org/rdiaz


From ucfagls at gmail.com  Tue May 20 06:33:29 2014
From: ucfagls at gmail.com (Gavin Simpson)
Date: Mon, 19 May 2014 22:33:29 -0600
Subject: [Rd] Bug in tools:::.check_package_depends ?
Message-ID: <CAAHES9wD4Ki+wOf-3P7mSiBQSfrr-nfzVAxMAGiKmiHKqi9BcA@mail.gmail.com>

An embedded and charset-unspecified text was scrubbed...
Name: not available
URL: <https://stat.ethz.ch/pipermail/r-devel/attachments/20140519/8eb54479/attachment.pl>

From skostysh at princeton.edu  Tue May 20 11:55:53 2014
From: skostysh at princeton.edu (Scott Kostyshak)
Date: Tue, 20 May 2014 05:55:53 -0400
Subject: [Rd] [patch] Add support for editor function in edit.default
Message-ID: <CAE3=dmfOvQQPcWu8=5+_Nd-EXE8HAnywrT9g67pYfxBx0exWxQ@mail.gmail.com>

Regarding the following extract of ?options:
     ?editor?: a non-empty string, or a function that is called with a
          file path as argument.

edit.default currently calls the function with three arguments: name,
file, and title. For example, running the following

vimCmd <- 'vim -c "set ft=r"'
vimEdit <- function(file_) system(paste(vimCmd, file_))
options(editor = vimEdit)
myls <- edit(ls)

gives "Error in editor(name, file, title) : unused arguments (file, title)".

The attached patch changes edit.default to call the editor function
with just the file path. There is at least one inconsistent behavior
that this patch causes in its current form. It does not obey the
following (from ?edit):
     Calling ?edit()?, with no arguments, will result in the temporary
file being reopened for further editing.

I see two ways to address this: (1) add a getEdFile() function to
utils/edit.R that calls a function getEd() defined in edit.c that
returns DefaultFileName; or (2) this patch could be rewritten in C in
a new function in edit.c.

Is there any interest in this patch?
If not, would there be interest in an update of the docs, either
?options (stating the possibility that if 'editor' is a function, it
might be called with 'name', 'file', and 'title' arguments) or ?edit
 ?

Scott


> sessionInfo()
R Under development (unstable) (2014-05-20 r65677)
Platform: x86_64-unknown-linux-gnu (64-bit)

locale:
 [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C
 [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8
 [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8
 [7] LC_PAPER=en_US.UTF-8       LC_NAME=C
 [9] LC_ADDRESS=C               LC_TELEPHONE=C
[11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C

attached base packages:
[1] stats     graphics  grDevices utils     datasets  methods   base


--
Scott Kostyshak
Economics PhD Candidate
Princeton University
-------------- next part --------------
A non-text attachment was scrubbed...
Name: edit.default.patch
Type: text/x-patch
Size: 687 bytes
Desc: not available
URL: <https://stat.ethz.ch/pipermail/r-devel/attachments/20140520/af3d773c/attachment.bin>

From jsmith at harmonia.com  Tue May 20 17:02:11 2014
From: jsmith at harmonia.com (James Smith)
Date: Tue, 20 May 2014 15:02:11 +0000
Subject: [Rd] Question about fifo behavior on Linux between versions 3.0.3
 and 3.1.0
Message-ID: <e6d2f60d8be44752bfc7b0e2ee0e8e78@BY2PR01MB089.prod.exchangelabs.com>

Version 3.1.0 of R has imposed a very small data limit on writing to fifos on Linux. Consider the following R code (Assumes that "ff" is a fifo in the R process's current directory):

con <- fifo("ff", "a+b")
writeBin(raw(12501), con)

In R 3.0.3, this returns without error and the data is available on the fifo. In R 3.1.0, however, this returns the following error:

Error in writeBin(raw(12501), con) : too large a block specified

In investigating R's source, the difference seems to be in src/main/connections.c, in the function fifo_write() (around line 932). In R 3.0.3, fifo_write() has these lines:

    if ((double) size * (double) nitems > SSIZE_MAX)
	error(_("too large a block specified"));

R 3.1.0 has these lines changed to this:

    if ((size * sizeof(wchar_t) * nitems) > 50000) {
      error(_("too large a block specified"));
    }

The change effectively places a limit of 12500 bytes on writes (since sizeof(wchar_t) == 4). Does anyone know why this change was made? I understand that fifos on Windows were implemented for R 3.1.0, but the code for fifos on Windows is in a separate part of connections.c that doesn't get compiled on Linux (i.e., the code given is Unix only). I also couldn't find any references to fifo behavior changes under Linux in any of R's documentation.

My platform is Fedora 20 (64-bit) and I have built and installed R from source.

Thank you for your time and consideration.

James O Smith
Harmonia Holdings Group, LLC


From ripley at stats.ox.ac.uk  Tue May 20 21:03:01 2014
From: ripley at stats.ox.ac.uk (Prof Brian Ripley)
Date: Tue, 20 May 2014 20:03:01 +0100
Subject: [Rd] Question about fifo behavior on Linux between versions
 3.0.3 and 3.1.0
In-Reply-To: <e6d2f60d8be44752bfc7b0e2ee0e8e78@BY2PR01MB089.prod.exchangelabs.com>
References: <e6d2f60d8be44752bfc7b0e2ee0e8e78@BY2PR01MB089.prod.exchangelabs.com>
Message-ID: <537BA6E5.4040301@stats.ox.ac.uk>

It _was_ part of the fifo for Windows patch.  As if does not seem to be 
needed for Windows, it has been reverted.


On 20/05/2014 16:02, James Smith wrote:
> Version 3.1.0 of R has imposed a very small data limit on writing to fifos on Linux. Consider the following R code (Assumes that "ff" is a fifo in the R process's current directory):
>
> con <- fifo("ff", "a+b")
> writeBin(raw(12501), con)
>
> In R 3.0.3, this returns without error and the data is available on the fifo. In R 3.1.0, however, this returns the following error:
>
> Error in writeBin(raw(12501), con) : too large a block specified
>
> In investigating R's source, the difference seems to be in src/main/connections.c, in the function fifo_write() (around line 932). In R 3.0.3, fifo_write() has these lines:
>
>      if ((double) size * (double) nitems > SSIZE_MAX)
> 	error(_("too large a block specified"));
>
> R 3.1.0 has these lines changed to this:
>
>      if ((size * sizeof(wchar_t) * nitems) > 50000) {
>        error(_("too large a block specified"));
>      }
>
> The change effectively places a limit of 12500 bytes on writes (since sizeof(wchar_t) == 4). Does anyone know why this change was made? I understand that fifos on Windows were implemented for R 3.1.0, but the code for fifos on Windows is in a separate part of connections.c that doesn't get compiled on Linux (i.e., the code given is Unix only). I also couldn't find any references to fifo behavior changes under Linux in any of R's documentation.
>
> My platform is Fedora 20 (64-bit) and I have built and installed R from source.
>
> Thank you for your time and consideration.
>
> James O Smith
> Harmonia Holdings Group, LLC
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>


-- 
Brian D. Ripley,                  ripley at stats.ox.ac.uk
Professor of Applied Statistics,  http://www.stats.ox.ac.uk/~ripley/
University of Oxford,             Tel:  +44 1865 272861 (self)
1 South Parks Road,                     +44 1865 272866 (PA)
Oxford OX1 3TG, UK                Fax:  +44 1865 272595


From josef.leydold at wu.ac.at  Wed May 21 19:17:29 2014
From: josef.leydold at wu.ac.at (Josef Leydold)
Date: Wed, 21 May 2014 19:17:29 +0200
Subject: [Rd] issue with parallel package
In-Reply-To: <mailman.25.1400666408.17616.r-devel@r-project.org>
References: <mailman.25.1400666408.17616.r-devel@r-project.org>
Message-ID: <20140521171729.GA14219@leim.stat-math.wu.ac.at>

Dear maintainers of the parallel package,

I ran into an issue with the parallel package in R-3.1.0.

The following code prints the message "NULL!" quite a lot.

library(parallel)
for (n in 1:1000) {
       p <- mcparallel(sqrt(n))
       res <- mccollect(p, wait=FALSE, timeout=1000)
       mccollect(p)
       if (is.null(res)) cat(n,"  NULL!\n")
}


It does not happen in R-3.0.3.
(To be exact, I have checked out R-devel revision r65130
 for my current tests.)

I found that this behavior is introduced in revision r65143.

When I insert
   Sys.sleep(0.1)
in the loop then this behavior disappears in R-3.1.0.

There is also another difference between R-3.1.0 and R-3.0.3:
When the line
   mccollect(p)
is replaced by
   mccollect(p, wait=FALSE, timeout=1000)
then in R-3.1.0 some child processes are not terminated and some
pipes remain open. This does not happen in R-3.0.3.

Remark:
If the line
   mccollect(p)
is omitted at all then "NULL!" is never printed but
R aborts after 510 iterations of the loop with the message
"Error in mcfork(detached) : unable to create a pipe".
Then none of the child processes is terminated and
number of possible open pipes is exhausted.

Is this behavior intended or a bug?


> version
               _                           
platform       x86_64-pc-linux-gnu         
arch           x86_64                      
os             linux-gnu                   
system         x86_64, linux-gnu           
status                                     
major          3                           
minor          1.0                         
year           2014                        
month          04                          
day            10                          
svn rev        65387                       
language       R                           
version.string R version 3.1.0 (2014-04-10)
nickname       Spring Dance                


best whishes
Josef

-- 


-----------------------------------------------------------------------------

Josef Leydold

Institute for Statistics and Mathematics
WU (Vienna University of Economics and Business)

Welthandelsplatz 1, Building D4, 1020 Vienna, Austria

Phone +43 1 31336 4695  FAX +43 1 31336 904695  email josef.leydold at wu.ac.at

-----------------------------------------------------------------------------
Alles Unglueck kam daher, dass die Denkenden nicht mehr handeln konnten,
und die Handelnden keine Zeit mehr fanden zu denken.       (Marlen Haushofer)


From jeroen.ooms at stat.ucla.edu  Wed May 21 19:47:35 2014
From: jeroen.ooms at stat.ucla.edu (Jeroen Ooms)
Date: Wed, 21 May 2014 10:47:35 -0700
Subject: [Rd] issue with parallel package
In-Reply-To: <20140521171729.GA14219@leim.stat-math.wu.ac.at>
References: <mailman.25.1400666408.17616.r-devel@r-project.org>
	<20140521171729.GA14219@leim.stat-math.wu.ac.at>
Message-ID: <CABFfbXua6VU0AaEyZL2NCdNWnFLJyUpQrfxdUQkK4ZnLHyjFtA@mail.gmail.com>

An embedded and charset-unspecified text was scrubbed...
Name: not available
URL: <https://stat.ethz.ch/pipermail/r-devel/attachments/20140521/35301a7a/attachment.pl>

From simon.urbanek at r-project.org  Thu May 22 06:05:07 2014
From: simon.urbanek at r-project.org (Simon Urbanek)
Date: Thu, 22 May 2014 00:05:07 -0400
Subject: [Rd] issue with parallel package
In-Reply-To: <CABFfbXua6VU0AaEyZL2NCdNWnFLJyUpQrfxdUQkK4ZnLHyjFtA@mail.gmail.com>
References: <mailman.25.1400666408.17616.r-devel@r-project.org>
	<20140521171729.GA14219@leim.stat-math.wu.ac.at>
	<CABFfbXua6VU0AaEyZL2NCdNWnFLJyUpQrfxdUQkK4ZnLHyjFtA@mail.gmail.com>
Message-ID: <ABE91EA9-421E-4A0F-A2C9-96FB78FB3BF4@r-project.org>


On May 21, 2014, at 1:47 PM, Jeroen Ooms <jeroen.ooms at stat.ucla.edu> wrote:

> On Wed, May 21, 2014 at 10:17 AM, Josef Leydold <josef.leydold at wu.ac.at> wrote:
> I ran into an issue with the parallel package in R-3.1.0.
> 
> I have been experiencing a very similar issue within the RAppArmor package. Here is a smaller example:
> 
> library(parallel)
> for (n in 1:5) {
>   p <- mcparallel(sqrt(n))
>   #Sys.sleep(0.01)
>   res <- mccollect(p, wait=FALSE, timeout=1000)
>   mccollect(p)
>   if (is.null(res)) cat(n,"  NULL!\n")
> }
> 
> If we run this, mccollect returns a lot of NULL values. However, after uncommenting the sys.sleep, the problem disappears. Seems like some sort of race condition.
> 

It's not a race condition - it behaves as expected - the mccollect with wait=FALSE will return NULL since there is no reason to expect the result to be available at that point. If you add the delay, then it's more likely that the result will be available by then.

Cheers,
Simon


From simon.urbanek at r-project.org  Thu May 22 06:18:36 2014
From: simon.urbanek at r-project.org (Simon Urbanek)
Date: Thu, 22 May 2014 00:18:36 -0400
Subject: [Rd] issue with parallel package
In-Reply-To: <20140521171729.GA14219@leim.stat-math.wu.ac.at>
References: <mailman.25.1400666408.17616.r-devel@r-project.org>
	<20140521171729.GA14219@leim.stat-math.wu.ac.at>
Message-ID: <41943519-EBEC-4F02-8FE1-C968D35922E3@r-project.org>


On May 21, 2014, at 1:17 PM, Josef Leydold <josef.leydold at wu.ac.at> wrote:

> Dear maintainers of the parallel package,
> 
> I ran into an issue with the parallel package in R-3.1.0.
> 
> The following code prints the message "NULL!" quite a lot.
> 
> library(parallel)
> for (n in 1:1000) {
>       p <- mcparallel(sqrt(n))
>       res <- mccollect(p, wait=FALSE, timeout=1000)
>       mccollect(p)
>       if (is.null(res)) cat(n,"  NULL!\n")
> }
> 
> 
> It does not happen in R-3.0.3.
> (To be exact, I have checked out R-devel revision r65130
> for my current tests.)
> 
> I found that this behavior is introduced in revision r65143.
> 
> When I insert
>   Sys.sleep(0.1)
> in the loop then this behavior disappears in R-3.1.0.
> 
> There is also another difference between R-3.1.0 and R-3.0.3:
> When the line
>   mccollect(p)
> is replaced by
>   mccollect(p, wait=FALSE, timeout=1000)
> then in R-3.1.0 some child processes are not terminated and some
> pipes remain open. This does not happen in R-3.0.3.
> 
> Remark:
> If the line
>   mccollect(p)
> is omitted at all then "NULL!" is never printed but
> R aborts after 510 iterations of the loop with the message
> "Error in mcfork(detached) : unable to create a pipe".
> Then none of the child processes is terminated and
> number of possible open pipes is exhausted.
> 
> Is this behavior intended or a bug?
> 

As noted in the follow-up this is absolutely expected. wait=FALSE merely checks if the result is available - if it's not at that point then NULL is returned - that's what you see and is exactly what one would expect. Analogously, if you don't collect the results then the child processes will be still hanging around waiting for you to collect the results and therefore you'll run out of descriptors. The fact that it worked in 3.0.3 is just a coincidence that it used more time managing the children and checking their status before you got to your attempted collect so the result was more likely to be already available. Because 3.1.0 is more efficient (it no longer manages children manually but rather uses signal-based cleanup), it comes faster to the collect point and the results may not be available yet.

Cheers,
Simon



> 
>> version
>               _                           
> platform       x86_64-pc-linux-gnu         
> arch           x86_64                      
> os             linux-gnu                   
> system         x86_64, linux-gnu           
> status                                     
> major          3                           
> minor          1.0                         
> year           2014                        
> month          04                          
> day            10                          
> svn rev        65387                       
> language       R                           
> version.string R version 3.1.0 (2014-04-10)
> nickname       Spring Dance                
> 
> 
> best whishes
> Josef
> 
> -- 
> 
> 
> -----------------------------------------------------------------------------
> 
> Josef Leydold
> 
> Institute for Statistics and Mathematics
> WU (Vienna University of Economics and Business)
> 
> Welthandelsplatz 1, Building D4, 1020 Vienna, Austria
> 
> Phone +43 1 31336 4695  FAX +43 1 31336 904695  email josef.leydold at wu.ac.at
> 
> -----------------------------------------------------------------------------
> Alles Unglueck kam daher, dass die Denkenden nicht mehr handeln konnten,
> und die Handelnden keine Zeit mehr fanden zu denken.       (Marlen Haushofer)
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
> 


From tkeitt at utexas.edu  Thu May 22 03:54:50 2014
From: tkeitt at utexas.edu (Tim Keitt)
Date: Wed, 21 May 2014 20:54:50 -0500
Subject: [Rd] Excluding objects from save.image
Message-ID: <CANnL8gpMfE9HAQSDsbfS8WcMdBC0n0Vwt8beQXN9ZDQXxjLB0Q@mail.gmail.com>

An embedded and charset-unspecified text was scrubbed...
Name: not available
URL: <https://stat.ethz.ch/pipermail/r-devel/attachments/20140521/7cc983e0/attachment.pl>

From simon.urbanek at r-project.org  Thu May 22 16:19:26 2014
From: simon.urbanek at r-project.org (Simon Urbanek)
Date: Thu, 22 May 2014 10:19:26 -0400
Subject: [Rd] Excluding objects from save.image
In-Reply-To: <CANnL8gpMfE9HAQSDsbfS8WcMdBC0n0Vwt8beQXN9ZDQXxjLB0Q@mail.gmail.com>
References: <CANnL8gpMfE9HAQSDsbfS8WcMdBC0n0Vwt8beQXN9ZDQXxjLB0Q@mail.gmail.com>
Message-ID: <B3971030-EFAD-4B23-B4D1-8806DBB695BC@r-project.org>

Tim,

On May 21, 2014, at 9:54 PM, Tim Keitt <tkeitt at utexas.edu> wrote:

> When dealing with object holding pointers that are only valid during a single session, it would be convenient to exclude them from being saved with the session image. (I am assuming that `quit` calls `save.image` before quitting or is it internal?) Currently they are saved with the pointer converted to NULL. Its a bit surprising for users not realizing the object is no longer valid.
> 

than's not surprising - it's actually very useful, because it tells you that the object has been restored. Typically, packages using external pointers use this to re-inilitialize the object from serialized data or other sources if possible.


> My thought is to designate a class name (perhaps "no.save") and exclude anything that inherits from that.

Why would you want to not save it? It exists, so saving it makes it possible to decide on the behavior as needed - as opposed to not saving it and thus losing the information.

Cheers,
Simon



> I've hacked a quick implementation below.
> I did not issue a warning, but it would be a simple fix.
> 
> Does anyone else see this as useful?
> 
> THK
> 
> -- 
> http://www.keittlab.org/
> 
> .new.save.image = function (file = ".RData", version = NULL, ascii = FALSE,
> compress = !ascii,
>                            safe = TRUE, omit.no.save = TRUE)   # added
> "omit.no.save" argument
> {
>  if (!is.character(file) || file == "")
>    stop("'file' must be non-empty string")
>  opts <- getOption("save.image.defaults")
>  if (is.null(opts))
>    opts <- getOption("save.defaults")
>  if (missing(safe) && !is.null(opts$safe))
>    safe <- opts$safe
>  if (missing(ascii) && !is.null(opts$ascii))
>    ascii <- opts$ascii
>  if (missing(compress) && !is.null(opts$compress))
>    compress <- opts$compress
>  if (missing(version))
>    version <- opts$version
>  if (safe) {
>    outfile <- paste0(file, "Tmp")
>    i <- 0
>    while (file.exists(outfile)) {
>      i <- i + 1
>      outfile <- paste0(file, "Tmp", i)
>    }
>  }
>  else outfile <- file
>  on.exit(file.remove(outfile))
> 
>  ### Omit objects inheriting from "no.save" ###
> 
>  objns <- ls(envir = .GlobalEnv, all.names = TRUE)
> 
>  if ( omit.no.save )  ### make part of options?
>    objns <- subset(objns, sapply(objns, function(x)
>    {
>      ! inherits(get(x, envir = .GlobalEnv), "no.save")
>    }))
> 
>  save(list = objns, file = outfile,
>       version = version, ascii = ascii, compress = compress,
>       envir = .GlobalEnv, precheck = FALSE)
> 
>  ### End code changes ###
> 
>  if (safe)
>    if (!file.rename(outfile, file)) {
>      on.exit()
>      stop(gettextf("image could not be renamed and is left in %s",
>                    outfile), domain = NA)
>    }
>  on.exit()
> }
> 
> setClass("no.save")
> setClass("test.class", slots = c(s1 = "externalptr"))
> setIs("test.class", "no.save")
> reg.obj = "regular object"
> no.save.obj = new("test.class")
> .image.file = tempfile()
> save.image(.image.file)
> rm(reg.obj, no.save.obj)
> load(.image.file)
> print(ls())
> unlink(.image.file)
> .new.save.image(.image.file)
> rm(reg.obj, no.save.obj)
> load(.image.file)
> print(ls())
> unlink(.image.file)
> 
> 	[[alternative HTML version deleted]]
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
> 


From simon.urbanek at r-project.org  Thu May 22 17:47:14 2014
From: simon.urbanek at r-project.org (Simon Urbanek)
Date: Thu, 22 May 2014 11:47:14 -0400
Subject: [Rd] Excluding objects from save.image
In-Reply-To: <CANnL8goz9KRpC_pCLPb2N8onETy3rQWvQ23y1ngGfcyfT+5CnQ@mail.gmail.com>
References: <CANnL8gpMfE9HAQSDsbfS8WcMdBC0n0Vwt8beQXN9ZDQXxjLB0Q@mail.gmail.com>
	<B3971030-EFAD-4B23-B4D1-8806DBB695BC@r-project.org>
	<CANnL8goz9KRpC_pCLPb2N8onETy3rQWvQ23y1ngGfcyfT+5CnQ@mail.gmail.com>
Message-ID: <61FD377B-B95A-4ECF-BDEA-BA4E4E8216F6@r-project.org>

On May 22, 2014, at 11:33 AM, Tim Keitt <tkeitt at utexas.edu> wrote:

> On Thu, May 22, 2014 at 9:19 AM, Simon Urbanek <simon.urbanek at r-project.org> wrote:
> Tim,
> 
> On May 21, 2014, at 9:54 PM, Tim Keitt <tkeitt at utexas.edu> wrote:
> 
> > When dealing with object holding pointers that are only valid during a single session, it would be convenient to exclude them from being saved with the session image. (I am assuming that `quit` calls `save.image` before quitting or is it internal?) Currently they are saved with the pointer converted to NULL. Its a bit surprising for users not realizing the object is no longer valid.
> >
> 
> than's not surprising - it's actually very useful, because it tells you that the object has been restored. Typically, packages using external pointers use this to re-inilitialize the object from serialized data or other sources if possible.
> 
> Automatically or with user intervention?


Automatically - that is the point :).


> > My thought is to designate a class name (perhaps "no.save") and exclude anything that inherits from that.
> 
> Why would you want to not save it? It exists, so saving it makes it possible to decide on the behavior as needed - as opposed to not saving it and thus losing the information.
> 
> That's a valid argument. I don't necessarily disagree, but it does depend on the situation and the author's intentions.
> 
> My question was not about enforcing policy on authors, rather it was about whether this would add value for those that would like to use it for cases where they deem it a benefit. I see those as separate issues.
> 
> Incidentally, I suggested many years ago hooks in load to make reinitialization possible. Is there some infrastructure for that in R? (And actually hooks on save would be quite useful as well eg one could substitute an object designed to reinitialize the original object on load.)
> 

Load time is typically not an issue, since you can just do it lazily. (Incidentally, doing that eagerly at load time is the hard part since you'd have to load the packages necessary in the right order which is not always possible to determine from the serialization alone. It's a full can of worms, because R doesn't know anything about sharing and dependencies on the native side etc.).

However, having a proper save hook for ext ptrs would be very useful. When I was asking for it few years ago, Luke mentioned there were issues - maybe it's something that could be re-visited.

Cheers,
Simon



> Cheers,
> THK
>  
> 
> Cheers,
> Simon
> 
> 
> 
> > I've hacked a quick implementation below.
> > I did not issue a warning, but it would be a simple fix.
> >
> > Does anyone else see this as useful?
> >
> > THK
> >
> > --
> > http://www.keittlab.org/
> >
> > .new.save.image = function (file = ".RData", version = NULL, ascii = FALSE,
> > compress = !ascii,
> >                            safe = TRUE, omit.no.save = TRUE)   # added
> > "omit.no.save" argument
> > {
> >  if (!is.character(file) || file == "")
> >    stop("'file' must be non-empty string")
> >  opts <- getOption("save.image.defaults")
> >  if (is.null(opts))
> >    opts <- getOption("save.defaults")
> >  if (missing(safe) && !is.null(opts$safe))
> >    safe <- opts$safe
> >  if (missing(ascii) && !is.null(opts$ascii))
> >    ascii <- opts$ascii
> >  if (missing(compress) && !is.null(opts$compress))
> >    compress <- opts$compress
> >  if (missing(version))
> >    version <- opts$version
> >  if (safe) {
> >    outfile <- paste0(file, "Tmp")
> >    i <- 0
> >    while (file.exists(outfile)) {
> >      i <- i + 1
> >      outfile <- paste0(file, "Tmp", i)
> >    }
> >  }
> >  else outfile <- file
> >  on.exit(file.remove(outfile))
> >
> >  ### Omit objects inheriting from "no.save" ###
> >
> >  objns <- ls(envir = .GlobalEnv, all.names = TRUE)
> >
> >  if ( omit.no.save )  ### make part of options?
> >    objns <- subset(objns, sapply(objns, function(x)
> >    {
> >      ! inherits(get(x, envir = .GlobalEnv), "no.save")
> >    }))
> >
> >  save(list = objns, file = outfile,
> >       version = version, ascii = ascii, compress = compress,
> >       envir = .GlobalEnv, precheck = FALSE)
> >
> >  ### End code changes ###
> >
> >  if (safe)
> >    if (!file.rename(outfile, file)) {
> >      on.exit()
> >      stop(gettextf("image could not be renamed and is left in %s",
> >                    outfile), domain = NA)
> >    }
> >  on.exit()
> > }
> >
> > setClass("no.save")
> > setClass("test.class", slots = c(s1 = "externalptr"))
> > setIs("test.class", "no.save")
> > reg.obj = "regular object"
> > no.save.obj = new("test.class")
> > .image.file = tempfile()
> > save.image(.image.file)
> > rm(reg.obj, no.save.obj)
> > load(.image.file)
> > print(ls())
> > unlink(.image.file)
> > .new.save.image(.image.file)
> > rm(reg.obj, no.save.obj)
> > load(.image.file)
> > print(ls())
> > unlink(.image.file)
> >
> >       [[alternative HTML version deleted]]
> >
> > ______________________________________________
> > R-devel at r-project.org mailing list
> > https://stat.ethz.ch/mailman/listinfo/r-devel
> >
> 
> 
> 
> 
> -- 
> http://www.keittlab.org/


From tkeitt at utexas.edu  Thu May 22 17:33:42 2014
From: tkeitt at utexas.edu (Tim Keitt)
Date: Thu, 22 May 2014 10:33:42 -0500
Subject: [Rd] Excluding objects from save.image
In-Reply-To: <B3971030-EFAD-4B23-B4D1-8806DBB695BC@r-project.org>
References: <CANnL8gpMfE9HAQSDsbfS8WcMdBC0n0Vwt8beQXN9ZDQXxjLB0Q@mail.gmail.com>
	<B3971030-EFAD-4B23-B4D1-8806DBB695BC@r-project.org>
Message-ID: <CANnL8goz9KRpC_pCLPb2N8onETy3rQWvQ23y1ngGfcyfT+5CnQ@mail.gmail.com>

An embedded and charset-unspecified text was scrubbed...
Name: not available
URL: <https://stat.ethz.ch/pipermail/r-devel/attachments/20140522/8915340c/attachment.pl>

From tkeitt at utexas.edu  Thu May 22 18:30:36 2014
From: tkeitt at utexas.edu (Tim Keitt)
Date: Thu, 22 May 2014 11:30:36 -0500
Subject: [Rd] Excluding objects from save.image
In-Reply-To: <61FD377B-B95A-4ECF-BDEA-BA4E4E8216F6@r-project.org>
References: <CANnL8gpMfE9HAQSDsbfS8WcMdBC0n0Vwt8beQXN9ZDQXxjLB0Q@mail.gmail.com>
	<B3971030-EFAD-4B23-B4D1-8806DBB695BC@r-project.org>
	<CANnL8goz9KRpC_pCLPb2N8onETy3rQWvQ23y1ngGfcyfT+5CnQ@mail.gmail.com>
	<61FD377B-B95A-4ECF-BDEA-BA4E4E8216F6@r-project.org>
Message-ID: <CANnL8gpXqmcHeRjaLSuE5=XFf8WHnfandLwdPWbU0Xgz-9ChFQ@mail.gmail.com>

An embedded and charset-unspecified text was scrubbed...
Name: not available
URL: <https://stat.ethz.ch/pipermail/r-devel/attachments/20140522/cd3cd5f2/attachment.pl>

From mtmorgan at fhcrc.org  Fri May 23 00:52:57 2014
From: mtmorgan at fhcrc.org (Martin Morgan)
Date: Thu, 22 May 2014 15:52:57 -0700
Subject: [Rd] citEntry handling of encoded URLs
Message-ID: <537E7FC9.7030408@fhcrc.org>

The following citEntry includes a url with %3A and other encodings

citEntry(entry="article",
          title = "Software for Computing and Annotating Genomic Ranges",
          author = personList( as.person("Michael Lawrence" )),
          year = 2013,
          journal = "{PLoS} Computational Biology",
          volume = "9",
          issue = "8",
          doi = "10.1371/journal.pcbi.1003118",
          url = 
"http://www.ploscompbiol.org/article/info%3Adoi%2F10.1371%2Fjournal.pcbi.1003118",
          textVersion = "Lawrence M..." )

Evaluating this as R code doesn't parse correctly and generates a warning

Lawrence M (2013). ?Software for Computing and Annotating Genomic
Ranges.? _PLoS Computational Biology_, *9*. <URL:
http://dx.doi.org/10.1371/journal.pcbi.1003118>, <URL:
http://www.ploscompbiol.org/article/info%3Adoi%2F10.1371%2Fjournal.pcbi.1003118}.>
Warning message:
In parse_Rd(Rd, encoding = encoding, fragment = fragment, ...) :
   <connection>:5: unexpected END_OF_INPUT '
'

A work-around is, apparently, to quote the %, \\%3A etc., but is this the 
intention?

Also, citEntry points to bibentry points to *Entry Fields*, but the 'url' tag is 
not mentioned there, even though url appears in the examples; if the list of 
supported tags is not easy to enumerate, perhaps some insight can be provided at 
this point as to how the supported tags are determined?

Thanks

Martin Morgan
-- 
Computational Biology / Fred Hutchinson Cancer Research Center
1100 Fairview Ave. N.
PO Box 19024 Seattle, WA 98109

Location: Arnold Building M1 B861
Phone: (206) 667-2793


From manoj.g at isim.net.in  Fri May 23 10:42:34 2014
From: manoj.g at isim.net.in (Manoj G)
Date: Fri, 23 May 2014 14:12:34 +0530
Subject: [Rd] RPostgreSQL installation Error - RPostgreSQL.so: undefined
	symbol: PQpass
Message-ID: <CAG5xmxax1A9n6zZ0o1U+Xxn74vY=xw2PY5xCs4bLYTEEsdBVgg@mail.gmail.com>

An embedded and charset-unspecified text was scrubbed...
Name: not available
URL: <https://stat.ethz.ch/pipermail/r-devel/attachments/20140523/30008d90/attachment.pl>

From manoj.g at isim.net.in  Fri May 23 10:44:15 2014
From: manoj.g at isim.net.in (Manoj G)
Date: Fri, 23 May 2014 14:14:15 +0530
Subject: [Rd] RPostgreSQL installation Error - RPostgreSQL.so: undefined
	symbol: PQpass
Message-ID: <CAG5xmxaL1o1Kho1mTb73oBy37nKmbUALez3bVhGKFfToS5TXFg@mail.gmail.com>

An embedded and charset-unspecified text was scrubbed...
Name: not available
URL: <https://stat.ethz.ch/pipermail/r-devel/attachments/20140523/46abede3/attachment.pl>

From khl0798 at 163.com  Fri May 23 13:57:08 2014
From: khl0798 at 163.com (khl0798)
Date: Fri, 23 May 2014 04:57:08 -0700 (PDT)
Subject: [Rd] Latex errors (build on windows)
Message-ID: <1400846228443-4691118.post@n4.nabble.com>

I build a R package, however,when I run the"
check("/home/conan/R/chinaWeather") ",
it show me that :
* checking PDF version of manual ... WARNING
LaTeX errors when creating PDF version.
This typically indicates Rd problems.
LaTeX errors found:
! LaTeX Error: File `inconsolata.sty' not found.

Type X to quit or <RETURN> to proceed,
or enter new name. (Default extension: sty)

! Emergency stop.
<read *> 
         
l.281 
       
!  ==> Fatal error occurred, no output PDF file produced!
* checking PDF version of manual without hyperrefs or index ... ERROR

and I don't how to solve this PDF version.by the way ,I am not familiar with
Latex,so could anyone tell me how to solve these problem?More thanks!



--
View this message in context: http://r.789695.n4.nabble.com/Latex-errors-build-on-windows-tp4691118.html
Sent from the R devel mailing list archive at Nabble.com.


From Achim.Zeileis at uibk.ac.at  Fri May 23 14:35:17 2014
From: Achim.Zeileis at uibk.ac.at (Achim Zeileis)
Date: Fri, 23 May 2014 14:35:17 +0200 (CEST)
Subject: [Rd] citEntry handling of encoded URLs
In-Reply-To: <537E7FC9.7030408@fhcrc.org>
References: <537E7FC9.7030408@fhcrc.org>
Message-ID: <alpine.DEB.2.10.1405231410130.30578@paninaro.uibk.ac.at>

On Thu, 22 May 2014, Martin Morgan wrote:

> The following citEntry includes a url with %3A and other encodings
>
> citEntry(entry="article",
>         title = "Software for Computing and Annotating Genomic Ranges",
>         author = personList( as.person("Michael Lawrence" )),
>         year = 2013,
>         journal = "{PLoS} Computational Biology",
>         volume = "9",
>         issue = "8",
>         doi = "10.1371/journal.pcbi.1003118",
>         url = 
> "http://www.ploscompbiol.org/article/info%3Adoi%2F10.1371%2Fjournal.pcbi.1003118",
>         textVersion = "Lawrence M..." )
>
> Evaluating this as R code doesn't parse correctly and generates a warning

The citEntry (or bibentry) itself is parsed without problem. Some printing 
styles cause the warning, specifically when the Rd parser is used for 
formatting. Depending on how you want to print it, the warning doesn't 
occur though. Using bibentry() directly, we can do:

b <- bibentry("Article",
   title = "Software for Computing and Annotating Genomic Ranges",
   author = "Michael Lawrence and others",
   year = "2013",
   journal = "PLoS Comptuational Biology",
   volume = "9",
   number = "8",
   doi = "10.1371/journal.pcbi.1003118",
   url = "http://www.ploscompbiol.org/article/info%3Adoi%2F10.1371%2Fjournal.pcbi.1003118",
   textVersion = "Lawrence M et al. (2013) ..."
)

Then the default

print(b)

issues a warning because the Rd parser thinks that the % are comments. 
However,

print(b, style = "BibTeX")
print(b, style = "citation")

don't issue warnings and also produce output that one might expect.

> A work-around is, apparently, to quote the %, \\%3A etc., but is this the 
> intention?

In that case the default print(b) yields the desired output without 
warning but print(b, style = "BibTeX") or print(b, style = "citation") are 
possibly not in the desired format. I'm not sure though how the different 
BibTeX style files actually handle the URLs. I think some .bst files 
handle the "url" field verbatim (i.e., don't need escaping) while others 
treat it as text (i.e., need escaping). Personally, I would hence avoid 
the problem and only use the DOI URL here as this will be robust across 
BibTeX styles.

Nevertheless it is not ideal that there is a discrepancy between the 
different printing styles. I think currently this can only be avoided if 
custom macros are employed. But Duncan might be able to say more about 
this. A similar situation occurs if you use commands that are not part of 
the Rd markup, e.g.

n01 <- bibentry("Misc", title = "The $\\mathcal{N}(0, 1)$ Distribution",
   author = "Foo Bar", year = "2014")
print(n01) # warning
print(n01, style = "BibTeX") # ok

> Also, citEntry points to bibentry points to *Entry Fields*, but the 
> 'url' tag is not mentioned there, even though url appears in the 
> examples; if the list of supported tags is not easy to enumerate, 
> perhaps some insight can be provided at this point as to how the 
> supported tags are determined?

This follows the BibTeX conventions. Thus, you can use any tag that you 
wish to use and it will depend on the style whether it is displayed or 
not. The only restriction is that certain bibtypes require certain 
fields, e.g., an "Article" has to specify: author, title, journal, year. 
But beyond that you can add any additional field. For example, in your 
bibentry above you used the "issue" field which is ignored by most BibTeX 
styles. My adaptation uses the "number" field instead which is processed 
by most standard BibTeX styles.

The default print(..., style = "text") uses a bibstyle that is modeled 
after jss.bst, the BibTeX style employed by the Journal of Statistical 
Software. But you could plug in other .bibstyle arguments, e.g. one that 
processes the "issue" field etc.

Hope that helps,
Z

> Thanks
>
> Martin Morgan
> -- 
> Computational Biology / Fred Hutchinson Cancer Research Center
> 1100 Fairview Ave. N.
> PO Box 19024 Seattle, WA 98109
>
> Location: Arnold Building M1 B861
> Phone: (206) 667-2793
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>


From ripley at stats.ox.ac.uk  Fri May 23 15:06:00 2014
From: ripley at stats.ox.ac.uk (Prof Brian Ripley)
Date: Fri, 23 May 2014 14:06:00 +0100
Subject: [Rd] Latex errors (build on windows)
In-Reply-To: <1400846228443-4691118.post@n4.nabble.com>
References: <1400846228443-4691118.post@n4.nabble.com>
Message-ID: <537F47B8.9070707@stats.ox.ac.uk>

On 23/05/2014 12:57, khl0798 wrote:
> I build a R package, however,when I run the"
> check("/home/conan/R/chinaWeather") ",
> it show me that :
> * checking PDF version of manual ... WARNING
> LaTeX errors when creating PDF version.
> This typically indicates Rd problems.
> LaTeX errors found:
> ! LaTeX Error: File `inconsolata.sty' not found.
...
> and I don't how to solve this PDF version.by the way ,I am not familiar with
> Latex,so could anyone tell me how to solve these problem?More thanks!

Yes, there are people who *could* tell you ... however

*We* write manuals, specifically for Windows 
http://cran.r-project.org/doc/manuals/r-release/R-admin.html#LaTeX .

*You* read them. See fortunes::fortune(14)

The posting guide is at http://www.r-project.org/posting-guide.html: you 
have not given the 'at a minimum' information required, and we would 
also need to know your LaTeX distribution to offer help (although there 
are more appropriate LaTeX lists).

Please use your real name when requesting consultancy, as here.  R may 
be 'free', but advice is costly to those giving it.

-- 
Brian D. Ripley,                  ripley at stats.ox.ac.uk
Professor of Applied Statistics,  http://www.stats.ox.ac.uk/~ripley/
University of Oxford,             Tel:  +44 1865 272861 (self)
1 South Parks Road,                     +44 1865 272866 (PA)
Oxford OX1 3TG, UK                Fax:  +44 1865 272595


From mtmorgan at fhcrc.org  Fri May 23 15:42:43 2014
From: mtmorgan at fhcrc.org (Martin Morgan)
Date: Fri, 23 May 2014 06:42:43 -0700
Subject: [Rd] citEntry handling of encoded URLs
In-Reply-To: <alpine.DEB.2.10.1405231410130.30578@paninaro.uibk.ac.at>
References: <537E7FC9.7030408@fhcrc.org>
	<alpine.DEB.2.10.1405231410130.30578@paninaro.uibk.ac.at>
Message-ID: <537F5053.8090003@fhcrc.org>

On 05/23/2014 05:35 AM, Achim Zeileis wrote:
> On Thu, 22 May 2014, Martin Morgan wrote:
>
>> The following citEntry includes a url with %3A and other encodings
>>
>> citEntry(entry="article",
>>         title = "Software for Computing and Annotating Genomic Ranges",
>>         author = personList( as.person("Michael Lawrence" )),
>>         year = 2013,
>>         journal = "{PLoS} Computational Biology",
>>         volume = "9",
>>         issue = "8",
>>         doi = "10.1371/journal.pcbi.1003118",
>>         url =
>> "http://www.ploscompbiol.org/article/info%3Adoi%2F10.1371%2Fjournal.pcbi.1003118",
>>
>>         textVersion = "Lawrence M..." )
>>
>> Evaluating this as R code doesn't parse correctly and generates a warning
>
> The citEntry (or bibentry) itself is parsed without problem. Some printing
> styles cause the warning, specifically when the Rd parser is used for
> formatting. Depending on how you want to print it, the warning doesn't occur
> though. Using bibentry() directly, we can do:
>
> b <- bibentry("Article",
>    title = "Software for Computing and Annotating Genomic Ranges",
>    author = "Michael Lawrence and others",
>    year = "2013",
>    journal = "PLoS Comptuational Biology",
>    volume = "9",
>    number = "8",
>    doi = "10.1371/journal.pcbi.1003118",
>    url =
> "http://www.ploscompbiol.org/article/info%3Adoi%2F10.1371%2Fjournal.pcbi.1003118",
>    textVersion = "Lawrence M et al. (2013) ..."
> )
>
> Then the default
>
> print(b)
>
> issues a warning because the Rd parser thinks that the % are comments. However,
>
> print(b, style = "BibTeX")
> print(b, style = "citation")
>
> don't issue warnings and also produce output that one might expect.

Thanks for clarifying. For what it's worth, I was aiming for

     print(b, style="html")

>> A work-around is, apparently, to quote the %, \\%3A etc., but is this the
>> intention?
>
> In that case the default print(b) yields the desired output without warning but
> print(b, style = "BibTeX") or print(b, style = "citation") are possibly not in
> the desired format. I'm not sure though how the different BibTeX style files
> actually handle the URLs. I think some .bst files handle the "url" field
> verbatim (i.e., don't need escaping) while others treat it as text (i.e., need
> escaping). Personally, I would hence avoid the problem and only use the DOI URL
> here as this will be robust across BibTeX styles.
>
> Nevertheless it is not ideal that there is a discrepancy between the different
> printing styles. I think currently this can only be avoided if custom macros are
> employed. But Duncan might be able to say more about this. A similar situation
> occurs if you use commands that are not part of the Rd markup, e.g.
>
> n01 <- bibentry("Misc", title = "The $\\mathcal{N}(0, 1)$ Distribution",
>    author = "Foo Bar", year = "2014")
> print(n01) # warning
> print(n01, style = "BibTeX") # ok
>
>> Also, citEntry points to bibentry points to *Entry Fields*, but the 'url' tag
>> is not mentioned there, even though url appears in the examples; if the list
>> of supported tags is not easy to enumerate, perhaps some insight can be
>> provided at this point as to how the supported tags are determined?
>
> This follows the BibTeX conventions. Thus, you can use any tag that you wish to
> use and it will depend on the style whether it is displayed or not. The only
> restriction is that certain bibtypes require certain fields, e.g., an "Article"
> has to specify: author, title, journal, year. But beyond that you can add any
> additional field. For example, in your bibentry above you used the "issue" field
> which is ignored by most BibTeX styles. My adaptation uses the "number" field
> instead which is processed by most standard BibTeX styles.
>
> The default print(..., style = "text") uses a bibstyle that is modeled after
> jss.bst, the BibTeX style employed by the Journal of Statistical Software. But
> you could plug in other .bibstyle arguments, e.g. one that processes the "issue"
> field etc.
>
> Hope that helps,

Yes, that helps a lot, thanks,

Martin

> Z
>
>> Thanks
>>
>> Martin Morgan
>> --
>> Computational Biology / Fred Hutchinson Cancer Research Center
>> 1100 Fairview Ave. N.
>> PO Box 19024 Seattle, WA 98109
>>
>> Location: Arnold Building M1 B861
>> Phone: (206) 667-2793
>>
>> ______________________________________________
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>


-- 
Computational Biology / Fred Hutchinson Cancer Research Center
1100 Fairview Ave. N.
PO Box 19024 Seattle, WA 98109

Location: Arnold Building M1 B861
Phone: (206) 667-2793


From murdoch.duncan at gmail.com  Fri May 23 17:38:12 2014
From: murdoch.duncan at gmail.com (Duncan Murdoch)
Date: Fri, 23 May 2014 11:38:12 -0400
Subject: [Rd] citEntry handling of encoded URLs
In-Reply-To: <alpine.DEB.2.10.1405231410130.30578@paninaro.uibk.ac.at>
References: <537E7FC9.7030408@fhcrc.org>
	<alpine.DEB.2.10.1405231410130.30578@paninaro.uibk.ac.at>
Message-ID: <537F6B64.8020303@gmail.com>

On 23/05/2014 8:35 AM, Achim Zeileis wrote:
> On Thu, 22 May 2014, Martin Morgan wrote:
>
> > The following citEntry includes a url with %3A and other encodings
> >
> > citEntry(entry="article",
> >         title = "Software for Computing and Annotating Genomic Ranges",
> >         author = personList( as.person("Michael Lawrence" )),
> >         year = 2013,
> >         journal = "{PLoS} Computational Biology",
> >         volume = "9",
> >         issue = "8",
> >         doi = "10.1371/journal.pcbi.1003118",
> >         url =
> > "http://www.ploscompbiol.org/article/info%3Adoi%2F10.1371%2Fjournal.pcbi.1003118",
> >         textVersion = "Lawrence M..." )
> >
> > Evaluating this as R code doesn't parse correctly and generates a warning
>
> The citEntry (or bibentry) itself is parsed without problem. Some printing
> styles cause the warning, specifically when the Rd parser is used for
> formatting. Depending on how you want to print it, the warning doesn't
> occur though. Using bibentry() directly, we can do:
>
> b <- bibentry("Article",
>     title = "Software for Computing and Annotating Genomic Ranges",
>     author = "Michael Lawrence and others",
>     year = "2013",
>     journal = "PLoS Comptuational Biology",
>     volume = "9",
>     number = "8",
>     doi = "10.1371/journal.pcbi.1003118",
>     url = "http://www.ploscompbiol.org/article/info%3Adoi%2F10.1371%2Fjournal.pcbi.1003118",
>     textVersion = "Lawrence M et al. (2013) ..."
> )
>
> Then the default
>
> print(b)
>
> issues a warning because the Rd parser thinks that the % are comments.
> However,
>
> print(b, style = "BibTeX")
> print(b, style = "citation")
>
> don't issue warnings and also produce output that one might expect.
>
> > A work-around is, apparently, to quote the %, \\%3A etc., but is this the
> > intention?
>
> In that case the default print(b) yields the desired output without
> warning but print(b, style = "BibTeX") or print(b, style = "citation") are
> possibly not in the desired format. I'm not sure though how the different
> BibTeX style files actually handle the URLs. I think some .bst files
> handle the "url" field verbatim (i.e., don't need escaping) while others
> treat it as text (i.e., need escaping). Personally, I would hence avoid
> the problem and only use the DOI URL here as this will be robust across
> BibTeX styles.
>
> Nevertheless it is not ideal that there is a discrepancy between the
> different printing styles. I think currently this can only be avoided if
> custom macros are employed. But Duncan might be able to say more about
> this. A similar situation occurs if you use commands that are not part of
> the Rd markup, e.g.

I'd go further than "not ideal", I think we need to define what kind of 
markup is permissible in this context.  If it needs to be Rd markup, 
then the default print method should be fixed to hide it (and \mathcal 
should not be allowed); if it needs to be plain text, then some escaping 
should be done.

>
> n01 <- bibentry("Misc", title = "The $\\mathcal{N}(0, 1)$ Distribution",
>     author = "Foo Bar", year = "2014")
> print(n01) # warning
> print(n01, style = "BibTeX") # ok
>
> > Also, citEntry points to bibentry points to *Entry Fields*, but the
> > 'url' tag is not mentioned there, even though url appears in the
> > examples; if the list of supported tags is not easy to enumerate,
> > perhaps some insight can be provided at this point as to how the
> > supported tags are determined?
>
> This follows the BibTeX conventions. Thus, you can use any tag that you
> wish to use and it will depend on the style whether it is displayed or
> not. The only restriction is that certain bibtypes require certain
> fields, e.g., an "Article" has to specify: author, title, journal, year.
> But beyond that you can add any additional field. For example, in your
> bibentry above you used the "issue" field which is ignored by most BibTeX
> styles. My adaptation uses the "number" field instead which is processed
> by most standard BibTeX styles.
>
> The default print(..., style = "text") uses a bibstyle that is modeled
> after jss.bst, the BibTeX style employed by the Journal of Statistical
> Software. But you could plug in other .bibstyle arguments, e.g. one that
> processes the "issue" field etc.
>
> Hope that helps,
> Z
>
> > Thanks
> >
> > Martin Morgan
> > --
> > Computational Biology / Fred Hutchinson Cancer Research Center
> > 1100 Fairview Ave. N.
> > PO Box 19024 Seattle, WA 98109
> >
> > Location: Arnold Building M1 B861
> > Phone: (206) 667-2793
> >
> > ______________________________________________
> > R-devel at r-project.org mailing list
> > https://stat.ethz.ch/mailman/listinfo/r-devel
> >
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From Achim.Zeileis at uibk.ac.at  Sat May 24 10:30:59 2014
From: Achim.Zeileis at uibk.ac.at (Achim Zeileis)
Date: Sat, 24 May 2014 10:30:59 +0200 (CEST)
Subject: [Rd] citEntry handling of encoded URLs
In-Reply-To: <537F6B64.8020303@gmail.com>
References: <537E7FC9.7030408@fhcrc.org>
	<alpine.DEB.2.10.1405231410130.30578@paninaro.uibk.ac.at>
	<537F6B64.8020303@gmail.com>
Message-ID: <alpine.DEB.2.10.1405241019240.30134@paninaro.uibk.ac.at>

On Fri, 23 May 2014, Duncan Murdoch wrote:

> On 23/05/2014 8:35 AM, Achim Zeileis wrote:
>> On Thu, 22 May 2014, Martin Morgan wrote:
>> 
>> > The following citEntry includes a url with %3A and other encodings
>> >
>> > citEntry(entry="article",
>> >         title = "Software for Computing and Annotating Genomic Ranges",
>> >         author = personList( as.person("Michael Lawrence" )),
>> >         year = 2013,
>> >         journal = "{PLoS} Computational Biology",
>> >         volume = "9",
>> >         issue = "8",
>> >         doi = "10.1371/journal.pcbi.1003118",
>> >         url =
>> > 
>> "http://www.ploscompbiol.org/article/info%3Adoi%2F10.1371%2Fjournal.pcbi.1003118",
>> >         textVersion = "Lawrence M..." )
>> >
>> > Evaluating this as R code doesn't parse correctly and generates a warning
>> 
>> The citEntry (or bibentry) itself is parsed without problem. Some printing
>> styles cause the warning, specifically when the Rd parser is used for
>> formatting. Depending on how you want to print it, the warning doesn't
>> occur though. Using bibentry() directly, we can do:
>> 
>> b <- bibentry("Article",
>>     title = "Software for Computing and Annotating Genomic Ranges",
>>     author = "Michael Lawrence and others",
>>     year = "2013",
>>     journal = "PLoS Comptuational Biology",
>>     volume = "9",
>>     number = "8",
>>     doi = "10.1371/journal.pcbi.1003118",
>>     url = 
>> "http://www.ploscompbiol.org/article/info%3Adoi%2F10.1371%2Fjournal.pcbi.1003118",
>>     textVersion = "Lawrence M et al. (2013) ..."
>> )
>> 
>> Then the default
>> 
>> print(b)
>> 
>> issues a warning because the Rd parser thinks that the % are comments.
>> However,
>> 
>> print(b, style = "BibTeX")
>> print(b, style = "citation")
>> 
>> don't issue warnings and also produce output that one might expect.
>> 
>> > A work-around is, apparently, to quote the %, \\%3A etc., but is this the
>> > intention?
>> 
>> In that case the default print(b) yields the desired output without
>> warning but print(b, style = "BibTeX") or print(b, style = "citation") are
>> possibly not in the desired format. I'm not sure though how the different
>> BibTeX style files actually handle the URLs. I think some .bst files
>> handle the "url" field verbatim (i.e., don't need escaping) while others
>> treat it as text (i.e., need escaping). Personally, I would hence avoid
>> the problem and only use the DOI URL here as this will be robust across
>> BibTeX styles.
>> 
>> Nevertheless it is not ideal that there is a discrepancy between the
>> different printing styles. I think currently this can only be avoided if
>> custom macros are employed. But Duncan might be able to say more about
>> this. A similar situation occurs if you use commands that are not part of
>> the Rd markup, e.g.
>
> I'd go further than "not ideal", I think we need to define what kind of 
> markup is permissible in this context.  If it needs to be Rd markup, 
> then the default print method should be fixed to hide it (and \mathcal 
> should not be allowed); if it needs to be plain text, then some escaping 
> should be done.

I would argue that any LaTeX-style markup should be permitted in the 
bibentry objects so that you can work with your BibTeX files in R. For the 
"text" and "html" print output, I would be happy if these used some 
approximation for unknown markup, e.g., omitting \mathcal and $ or 
something like that. Then only a small subset of LaTeX-style Rd markup 
commands would be properly processed.

>> n01 <- bibentry("Misc", title = "The $\\mathcal{N}(0, 1)$ Distribution",
>>     author = "Foo Bar", year = "2014")
>> print(n01) # warning
>> print(n01, style = "BibTeX") # ok
>> 
>> > Also, citEntry points to bibentry points to *Entry Fields*, but the
>> > 'url' tag is not mentioned there, even though url appears in the
>> > examples; if the list of supported tags is not easy to enumerate,
>> > perhaps some insight can be provided at this point as to how the
>> > supported tags are determined?
>> 
>> This follows the BibTeX conventions. Thus, you can use any tag that you
>> wish to use and it will depend on the style whether it is displayed or
>> not. The only restriction is that certain bibtypes require certain
>> fields, e.g., an "Article" has to specify: author, title, journal, year.
>> But beyond that you can add any additional field. For example, in your
>> bibentry above you used the "issue" field which is ignored by most BibTeX
>> styles. My adaptation uses the "number" field instead which is processed
>> by most standard BibTeX styles.
>> 
>> The default print(..., style = "text") uses a bibstyle that is modeled
>> after jss.bst, the BibTeX style employed by the Journal of Statistical
>> Software. But you could plug in other .bibstyle arguments, e.g. one that
>> processes the "issue" field etc.
>> 
>> Hope that helps,
>> Z
>> 
>> > Thanks
>> >
>> > Martin Morgan
>> > --
>> > Computational Biology / Fred Hutchinson Cancer Research Center
>> > 1100 Fairview Ave. N.
>> > PO Box 19024 Seattle, WA 98109
>> >
>> > Location: Arnold Building M1 B861
>> > Phone: (206) 667-2793
>> >
>> > ______________________________________________
>> > R-devel at r-project.org mailing list
>> > https://stat.ethz.ch/mailman/listinfo/r-devel
>> >
>> 
>> ______________________________________________
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel
>
>


From khl0798 at 163.com  Sat May 24 09:16:50 2014
From: khl0798 at 163.com (khl0798)
Date: Sat, 24 May 2014 00:16:50 -0700 (PDT)
Subject: [Rd] iRe: Latex errors (build on windows)
In-Reply-To: <1400846228443-4691118.post@n4.nabble.com>
References: <1400846228443-4691118.post@n4.nabble.com>
Message-ID: <1400915810459-4691163.post@n4.nabble.com>

An embedded and charset-unspecified text was scrubbed...
Name: not available
URL: <https://stat.ethz.ch/pipermail/r-devel/attachments/20140524/2bce79f4/attachment.pl>

From khl0798 at 163.com  Sat May 24 09:40:29 2014
From: khl0798 at 163.com (Hualei Kong)
Date: Sat, 24 May 2014 00:40:29 -0700 (PDT)
Subject: [Rd] Latex errors (build on windows)
In-Reply-To: <537F47B8.9070707@stats.ox.ac.uk>
References: <1400846228443-4691118.post@n4.nabble.com>
	<537F47B8.9070707@stats.ox.ac.uk>
Message-ID: <5594630a.f270.1462d2c4127.Coremail.khl0798@163.com>

An embedded and charset-unspecified text was scrubbed...
Name: not available
URL: <https://stat.ethz.ch/pipermail/r-devel/attachments/20140524/87d4ca51/attachment.pl>

From khl0798 at 163.com  Sat May 24 14:11:24 2014
From: khl0798 at 163.com (Hualei Kong)
Date: Sat, 24 May 2014 05:11:24 -0700 (PDT)
Subject: [Rd] My sincere apology
Message-ID: <3690a8d6.1076d.1462e241371.Coremail.khl0798@163.com>

An embedded and charset-unspecified text was scrubbed...
Name: not available
URL: <https://stat.ethz.ch/pipermail/r-devel/attachments/20140524/f25d407a/attachment.pl>

From khl0798 at 163.com  Sat May 24 14:19:27 2014
From: khl0798 at 163.com (Hualei Kong)
Date: Sat, 24 May 2014 05:19:27 -0700 (PDT)
Subject: [Rd] Latex errors (build on windows)
In-Reply-To: <537F47B8.9070707@stats.ox.ac.uk>
References: <1400846228443-4691118.post@n4.nabble.com>
	<537F47B8.9070707@stats.ox.ac.uk>
Message-ID: <1400933967183-4691167.post@n4.nabble.com>

Dear Prof Brian Ripley:
     I am very sorry for that I use the unappropriate words "It's my great
pleasure" when I read this mail again! I give my apology sincerely to you
,unreservedly and with my heart!
     You are such a warm-hearted man.And you help me to solve my
problems.But owing to  my poor English, I found I had made such a foolish
mistake. My brain must have been stupid at that time . I hope you can
forgive my carelessness and this will not affect your work.
     I feel ashamed of myself.And this may be brought bad influences on my
university as well as my country.I hope you won't have a bad impression on
my country's students. From now on,aparting from learning R language,I will
strengthen my English learning.And this will be a lesson for me.
     Hope you could  forgive me! And I hope I can continue to learn from
you.I request you can give me a chance,I will never make such a mistake !
     Best wishes! I am looking forword to you reply!
    


    Hualei Kong



-----
Department of System biomedical in Shanghaijiaotong University,China!
--
View this message in context: http://r.789695.n4.nabble.com/Latex-errors-build-on-windows-tp4691118p4691167.html
Sent from the R devel mailing list archive at Nabble.com.


From xie at yihui.name  Sat May 24 21:13:03 2014
From: xie at yihui.name (Yihui Xie)
Date: Sat, 24 May 2014 14:13:03 -0500
Subject: [Rd] Latex errors (build on windows)
In-Reply-To: <1400933967183-4691167.post@n4.nabble.com>
References: <1400846228443-4691118.post@n4.nabble.com>
	<537F47B8.9070707@stats.ox.ac.uk>
	<1400933967183-4691167.post@n4.nabble.com>
Message-ID: <CANROs4dm=EiAMBwDO8h8h1MZu0eC_4NvABePPyuGd=GLY8DbjA@mail.gmail.com>

You do not need to feel so bad. No one was born an expert (even an
expert may not be able to find the relevant information in a
subsection of an appendix in a certain manual among numerous
hyperlinks). The sky is not going to falling down, and the earth is
not going to explode just because you do not know how to install a
LaTeX package. I'm pretty sure you are not the only one who was
puzzled by inconsolata.sty, and I believe this will continue to
confuse more in the future.

Unless one has LaTeX vignettes, the Rd PDF manual is normally the only
place where LaTeX is required in an R Package. Personally I do not
think this LaTeX dependency is worth it, comparing the relatively
small gain and the great effort to learn LaTeX as well as the
toolchain. It will be nice if the PDF manual can be optional for CRAN
and R CMD check. Biologists, doctors, and other scientists may spend
their time on more valuable things than learning LaTeX. Just my 2
cents.

P.S. Just in case this should be misunderstood: 1. I do appreciate the
value of LaTeX; 2. I'm grateful to the effort that R core made in the
manuals; 3. There are people who are busy with test tubes and
bacteria, and they also need sleep.

Regards,
Yihui
--
Yihui Xie <xieyihui at gmail.com>
Web: http://yihui.name


On Sat, May 24, 2014 at 7:19 AM, Hualei Kong <khl0798 at 163.com> wrote:
> Dear Prof Brian Ripley:
>      I am very sorry for that I use the unappropriate words "It's my great
> pleasure" when I read this mail again! I give my apology sincerely to you
> ,unreservedly and with my heart!
>      You are such a warm-hearted man.And you help me to solve my
> problems.But owing to  my poor English, I found I had made such a foolish
> mistake. My brain must have been stupid at that time . I hope you can
> forgive my carelessness and this will not affect your work.
>      I feel ashamed of myself.And this may be brought bad influences on my
> university as well as my country.I hope you won't have a bad impression on
> my country's students. From now on,aparting from learning R language,I will
> strengthen my English learning.And this will be a lesson for me.
>      Hope you could  forgive me! And I hope I can continue to learn from
> you.I request you can give me a chance,I will never make such a mistake !
>      Best wishes! I am looking forword to you reply!
>
>
>
>     Hualei Kong


From khl0798 at 163.com  Sun May 25 06:31:29 2014
From: khl0798 at 163.com (Hualei Kong)
Date: Sat, 24 May 2014 21:31:29 -0700 (PDT)
Subject: [Rd] Latex errors (build on windows)
In-Reply-To: <CANROs4dm=EiAMBwDO8h8h1MZu0eC_4NvABePPyuGd=GLY8DbjA@mail.gmail.com>
References: <1400846228443-4691118.post@n4.nabble.com>
	<537F47B8.9070707@stats.ox.ac.uk>
	<1400933967183-4691167.post@n4.nabble.com>
	<CANROs4dm=EiAMBwDO8h8h1MZu0eC_4NvABePPyuGd=GLY8DbjA@mail.gmail.com>
Message-ID: <31b9745e.1b72.14631a56ad6.Coremail.khl0798@163.com>

An embedded and charset-unspecified text was scrubbed...
Name: not available
URL: <https://stat.ethz.ch/pipermail/r-devel/attachments/20140524/bdc89d17/attachment.pl>

From macrakis at alum.mit.edu  Tue May 27 17:15:20 2014
From: macrakis at alum.mit.edu (=?UTF-8?B?U3RhdnJvcyBNYWNyYWtpcyAozqPPhM6x4b+mz4HOv8+CIM6czrHOus+BzqzOus63z4Ip?=)
Date: Tue, 27 May 2014 11:15:20 -0400
Subject: [Rd] dput line width
Message-ID: <CACLVabUdJrSddfx1XQvAuVSPCtb6Rrayd9kHnTQtEkYi-OWLBw@mail.gmail.com>

An embedded and charset-unspecified text was scrubbed...
Name: not available
URL: <https://stat.ethz.ch/pipermail/r-devel/attachments/20140527/9dd63c39/attachment.pl>

From 538280 at gmail.com  Tue May 27 17:57:41 2014
From: 538280 at gmail.com (Greg Snow)
Date: Tue, 27 May 2014 09:57:41 -0600
Subject: [Rd] dput line width
In-Reply-To: <CACLVabUdJrSddfx1XQvAuVSPCtb6Rrayd9kHnTQtEkYi-OWLBw@mail.gmail.com>
References: <CACLVabUdJrSddfx1XQvAuVSPCtb6Rrayd9kHnTQtEkYi-OWLBw@mail.gmail.com>
Message-ID: <CAFEqCdzZ-av7xMMG8twaLT6SpN8NGN605tdY9nkWMKXWDYoESA@mail.gmail.com>

Looking at the help file and code for dput does not show any simple
way to do what you want.  But the help page makes reference to the
deparse function and deparse does have a width.cutoff argument.  So
you could use deparse instead of dput (the use cat or other functions
to display the results similar to dput).  A quick example (though
going the opposite direction):

> cat(deparse(1:30*2, width.cutoff=20),'\n\n',sep='\n')
c(2, 4, 6, 8, 10, 12,
14, 16, 18, 20, 22, 24,
26, 28, 30, 32, 34, 36,
38, 40, 42, 44, 46, 48,
50, 52, 54, 56, 58, 60
)



On Tue, May 27, 2014 at 9:15 AM, Stavros Macrakis (??????? ????????)
<macrakis at alum.mit.edu> wrote:
> Is there some way to control the line width that dput uses?
> options(width=...) does not affect dput.
>
> For example, currently
>
>> dput(1:30*2)
> c(2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32, *line break
> here*
> 34, 36, 38, 40, 42, 44, 46, 48, 50, 52, 54, 56, 58, 60)
>
> but on a wider display, I'd like to have no line break.
>
>
> Tested on R version 3.1.0 (2014-04-10) x86_64-apple-darwin13.1.0 (64-bit)
>
>         [[alternative HTML version deleted]]
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel



-- 
Gregory (Greg) L. Snow Ph.D.
538280 at gmail.com


From macrakis at alum.mit.edu  Tue May 27 19:10:42 2014
From: macrakis at alum.mit.edu (=?UTF-8?B?U3RhdnJvcyBNYWNyYWtpcyAozqPPhM6x4b+mz4HOv8+CIM6czrHOus+BzqzOus63z4Ip?=)
Date: Tue, 27 May 2014 13:10:42 -0400
Subject: [Rd] Pretty-printer for R data
Message-ID: <CACLVabWAAiTj6muOq8Fh7i3pQz8fV02zEeo1N1XEFqy2yBkvRg@mail.gmail.com>

An embedded and charset-unspecified text was scrubbed...
Name: not available
URL: <https://stat.ethz.ch/pipermail/r-devel/attachments/20140527/74eb73ec/attachment.pl>

From 538280 at gmail.com  Tue May 27 19:24:06 2014
From: 538280 at gmail.com (Greg Snow)
Date: Tue, 27 May 2014 11:24:06 -0600
Subject: [Rd] Pretty-printer for R data
In-Reply-To: <CACLVabWAAiTj6muOq8Fh7i3pQz8fV02zEeo1N1XEFqy2yBkvRg@mail.gmail.com>
References: <CACLVabWAAiTj6muOq8Fh7i3pQz8fV02zEeo1N1XEFqy2yBkvRg@mail.gmail.com>
Message-ID: <CAFEqCdwgV88KLM8OtswjdbfQQZBnr-KnBMzX-FqdYBWii0XWpg@mail.gmail.com>

There are editors that are R aware and have some functionality along
these lines (though I don't know of any command line type).  Some to
look at are the Emacs/ESS combination or Rstudio.

On Tue, May 27, 2014 at 11:10 AM, Stavros Macrakis (??????? ????????)
<macrakis at alum.mit.edu> wrote:
> Is there a pretty-printer for R data (and code for that matter), similar to
> Lisp's prettyprint/grind? I've looked in CRAN, and couldn't find anything.
>
> For example, I'd like to have:
>
> prettyprint(list(a=1:20*2, b=list(data.frame(q = c(2,1,3),
>   r = c(3,1,2), s = c(1,3,2)), as.POSIXct("2014-02-03")))
>
> *      =>*
>
> list(a = c(2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22,
>            24, 26, 28, 30, 32, 34, 36, 38, 40),
>      b = list(data.frame(q = c(2, 1, 3),
>                          r = c(3, 1, 2),
>                          s = c(1, 3, 2))
>               as.POSIXct("2014-02-03")))
>
> That is, something like dput, but with operators, structural indentation,
> and line breaks chosen intelligently. (Whether to use as.POSIXct or
> structure(...) etc. presumably could be under control of parameters.)
>
>              -s
>
>         [[alternative HTML version deleted]]
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel



-- 
Gregory (Greg) L. Snow Ph.D.
538280 at gmail.com


From dstr7320 at uni.sydney.edu.au  Wed May 28 08:00:16 2014
From: dstr7320 at uni.sydney.edu.au (Dario Strbenac)
Date: Wed, 28 May 2014 06:00:16 +0000
Subject: [Rd] Ellipsis to Two Functions When One Has Nested Functions
Message-ID: <1401256816354.86462@uni.sydney.edu.au>

Hello

If I have a function

aFunction <- function(data, alpha, ...)
{
    transform(alpha, ...)
    rowMeans(data) > alpha
}

f <- function(data, selection, ...)
{
    selected <- selection(data, ...)
    plot(data[selected, ], ...)
}

f(aDataset, aFunction, alpha = 10, pch = 19, transform = sqrt)

and selection calls another function, which has ... and that function calls other functions, is there an easier way than getting the formals of all the functions called internally by selection, and all of the formals of functions called by plot ? Is there any option to change the error into a warning message ?

--------------------------------------
Dario Strbenac
PhD Student
University of Sydney
Camperdown NSW 2050
Australia


From murdoch.duncan at gmail.com  Wed May 28 13:34:40 2014
From: murdoch.duncan at gmail.com (Duncan Murdoch)
Date: Wed, 28 May 2014 07:34:40 -0400
Subject: [Rd] Ellipsis to Two Functions When One Has Nested Functions
In-Reply-To: <1401256816354.86462@uni.sydney.edu.au>
References: <1401256816354.86462@uni.sydney.edu.au>
Message-ID: <5385C9D0.5090909@gmail.com>

On 28/05/2014, 2:00 AM, Dario Strbenac wrote:
> Hello
>
> If I have a function
>
> aFunction <- function(data, alpha, ...)
> {
>      transform(alpha, ...)
>      rowMeans(data) > alpha
> }
>
> f <- function(data, selection, ...)
> {
>      selected <- selection(data, ...)
>      plot(data[selected, ], ...)
> }
>
> f(aDataset, aFunction, alpha = 10, pch = 19, transform = sqrt)
>
> and selection calls another function, which has ... and that function calls other functions, is there an easier way than getting the formals of all the functions called internally by selection, and all of the formals of functions called by plot ? Is there any option to change the error into a warning message ?

You can use try() to catch an error, but you can't ignore it.  The code 
that triggered the error will still exit at that point.

There are at least two common ways of handling the situation where you 
want to pass optional args to two different functions.  One is to use

args <- list(...)

to get all the arguments in a list, and then manually split up the list, 
and use do.call() to pass some of them on.  Generally you would do this 
only if you knew in advance how to split the args, you wouldn't try to 
call formals() to work it out at run-time.

Another way is to have an argument like "control" in optim(), and ask 
the user to pass one set of options via that, and the other via ... . 
You'd use do.call() again to construct that call.

Duncan Murdoch


From mestre.frederico at gmail.com  Wed May 28 15:07:18 2014
From: mestre.frederico at gmail.com (Frederico Mestre)
Date: Wed, 28 May 2014 14:07:18 +0100
Subject: [Rd] error in the examples of a package
Message-ID: <CAPfBvqycdPpeP9zhok1756w+Y4C23Eg2HKCJYMwr7AgKpJvC4Q@mail.gmail.com>

An embedded and charset-unspecified text was scrubbed...
Name: not available
URL: <https://stat.ethz.ch/pipermail/r-devel/attachments/20140528/9a4885c2/attachment.pl>

From lbraglia at gmail.com  Wed May 28 15:27:43 2014
From: lbraglia at gmail.com (Luca Braglia)
Date: Wed, 28 May 2014 15:27:43 +0200
Subject: [Rd] error in the examples of a package
In-Reply-To: <CAPfBvqycdPpeP9zhok1756w+Y4C23Eg2HKCJYMwr7AgKpJvC4Q@mail.gmail.com>
References: <CAPfBvqycdPpeP9zhok1756w+Y4C23Eg2HKCJYMwr7AgKpJvC4Q@mail.gmail.com>
Message-ID: <CAFOm_+4xbWFLTOXJyndW7a8x5EO+vMYbqdW6SXf9GrPz4DPkDg@mail.gmail.com>

An embedded and charset-unspecified text was scrubbed...
Name: not available
URL: <https://stat.ethz.ch/pipermail/r-devel/attachments/20140528/7cca1954/attachment.pl>

From rowe at muxspace.com  Wed May 28 22:03:22 2014
From: rowe at muxspace.com (Brian Lee Yung Rowe)
Date: Wed, 28 May 2014 16:03:22 -0400
Subject: [Rd] Ellipsis to Two Functions When One Has Nested Functions
References: <6255CDD5-99AD-4EE9-8B9D-E30CD1C7EBC2@muxspace.com>
Message-ID: <9C79AEDF-D71B-411A-9F19-F2E87FC606AC@muxspace.com>

An embedded and charset-unspecified text was scrubbed...
Name: not available
URL: <https://stat.ethz.ch/pipermail/r-devel/attachments/20140528/692c2739/attachment.pl>

From brian at muxspace.com  Wed May 28 22:01:25 2014
From: brian at muxspace.com (Brian Lee Yung Rowe)
Date: Wed, 28 May 2014 16:01:25 -0400
Subject: [Rd] Ellipsis to Two Functions When One Has Nested Functions
In-Reply-To: <5385C9D0.5090909@gmail.com>
References: <1401256816354.86462@uni.sydney.edu.au>
	<5385C9D0.5090909@gmail.com>
Message-ID: <6255CDD5-99AD-4EE9-8B9D-E30CD1C7EBC2@muxspace.com>

An embedded and charset-unspecified text was scrubbed...
Name: not available
URL: <https://stat.ethz.ch/pipermail/r-devel/attachments/20140528/57e69516/attachment.pl>

From rpbarry at alaska.edu  Wed May 28 22:46:46 2014
From: rpbarry at alaska.edu (Ronald Barry)
Date: Wed, 28 May 2014 12:46:46 -0800
Subject: [Rd] Style question
Message-ID: <CAOVYLHcgBqBmFMhSnx3hRELV4D9ijdHRoG=SmnRx8g=6f90F3A@mail.gmail.com>

An embedded and charset-unspecified text was scrubbed...
Name: not available
URL: <https://stat.ethz.ch/pipermail/r-devel/attachments/20140528/8af5ffde/attachment.pl>

From hpages at fhcrc.org  Wed May 28 23:27:00 2014
From: hpages at fhcrc.org (=?ISO-8859-1?Q?Herv=E9_Pag=E8s?=)
Date: Wed, 28 May 2014 14:27:00 -0700
Subject: [Rd] Style question
In-Reply-To: <CAOVYLHcgBqBmFMhSnx3hRELV4D9ijdHRoG=SmnRx8g=6f90F3A@mail.gmail.com>
References: <CAOVYLHcgBqBmFMhSnx3hRELV4D9ijdHRoG=SmnRx8g=6f90F3A@mail.gmail.com>
Message-ID: <538654A4.60402@fhcrc.org>

Hi Ronald,

On 05/28/2014 01:46 PM, Ronald Barry wrote:
> Greetings,
>    When using a 'foreign' function (from another package, say function
> 'whatever' from package 'foo'), you can of course just require the package
> and then just have
>
> whatever(...)
>
> in your code.  However, I would like to use the
>
> foo::whatever(...)
>
> form instead, just for documentation purposes (easier to see what function
> comes from what package).  Is there a cost to doing this?  Is it considered
> good or bad style?  Thanks.

Even more important than choosing between whatever(...)
or foo::whatever(...), you should import that function
from the foo package by putting

   importFrom(foo, whatever)

or

   import(foo)

in your NAMESPACE file.

The 1st form also kind of document what function comes from what
package.

Note that you'll also need to have foo in the Depends or Imports field
of your DESCRIPTION file. Which field is appropriate depends on whether
or not you want foo to show up in the user's search path when s/he loads
your package with 'library(yourpackage)'.

Cheers,
H.

>
> Ron Barry
>
> 	[[alternative HTML version deleted]]
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>

-- 
Herv? Pag?s

Program in Computational Biology
Division of Public Health Sciences
Fred Hutchinson Cancer Research Center
1100 Fairview Ave. N, M1-B514
P.O. Box 19024
Seattle, WA 98109-1024

E-mail: hpages at fhcrc.org
Phone:  (206) 667-5791
Fax:    (206) 667-1319


From dstr7320 at uni.sydney.edu.au  Thu May 29 08:00:15 2014
From: dstr7320 at uni.sydney.edu.au (Dario Strbenac)
Date: Thu, 29 May 2014 06:00:15 +0000
Subject: [Rd] mcmapply Core Usage
Message-ID: <1401346839076.36443@uni.sydney.edu.au>

Hello,

I have a minimal example that shows a problem I'm having with parallel processing.

library(parallel)
mcmapply(function(x, y)
{
  print("Running")
  Sys.sleep(10)
}, as.list(1:10), as.list(10:1), mc.cores = 16, SIMPLIFY = FALSE)

I see "Running" printed once every ten seconds. I read the documentation for mcmapply, but I don't understand why it wouldn't print all ten output statements almost at once, then wait for about ten seconds, then return to the prompt. Is it documented in another location ?

My problem is that I have a section of code that takes a long time, which I have replaced with Sys.sleep in the above example, but when I look at the output of top, I only see 1 CPU being used. The computer has 16 processors.

> sessionInfo()
R version 3.1.0 (2014-04-10)
Platform: x86_64-pc-linux-gnu (64-bit)

locale:
 [1] LC_CTYPE=en_AU.UTF-8       LC_NUMERIC=C              
 [3] LC_TIME=en_AU.UTF-8        LC_COLLATE=en_AU.UTF-8    
 [5] LC_MONETARY=en_AU.UTF-8    LC_MESSAGES=en_AU.UTF-8   
 [7] LC_PAPER=en_AU.UTF-8       LC_NAME=C                 
 [9] LC_ADDRESS=C               LC_TELEPHONE=C            
[11] LC_MEASUREMENT=en_AU.UTF-8 LC_IDENTIFICATION=C       

attached base packages:
[1] parallel  stats     graphics  grDevices utils     datasets  methods  
[8] base     

loaded via a namespace (and not attached):
[1] tools_3.1.0

--------------------------------------
Dario Strbenac
PhD Student
University of Sydney
Camperdown NSW 2050
Australia


From simon.urbanek at r-project.org  Thu May 29 15:06:35 2014
From: simon.urbanek at r-project.org (Simon Urbanek)
Date: Thu, 29 May 2014 09:06:35 -0400
Subject: [Rd] mcmapply Core Usage
In-Reply-To: <1401346839076.36443@uni.sydney.edu.au>
References: <1401346839076.36443@uni.sydney.edu.au>
Message-ID: <2786FF94-F1AB-4F72-B83B-49070C175F05@r-project.org>

Dario,

yes, that is a bug, now fixed.

Cheers,
Simon


On May 29, 2014, at 2:00 AM, Dario Strbenac <dstr7320 at uni.sydney.edu.au> wrote:

> Hello,
> 
> I have a minimal example that shows a problem I'm having with parallel processing.
> 
> library(parallel)
> mcmapply(function(x, y)
> {
>  print("Running")
>  Sys.sleep(10)
> }, as.list(1:10), as.list(10:1), mc.cores = 16, SIMPLIFY = FALSE)
> 
> I see "Running" printed once every ten seconds. I read the documentation for mcmapply, but I don't understand why it wouldn't print all ten output statements almost at once, then wait for about ten seconds, then return to the prompt. Is it documented in another location ?
> 
> My problem is that I have a section of code that takes a long time, which I have replaced with Sys.sleep in the above example, but when I look at the output of top, I only see 1 CPU being used. The computer has 16 processors.
> 
>> sessionInfo()
> R version 3.1.0 (2014-04-10)
> Platform: x86_64-pc-linux-gnu (64-bit)
> 
> locale:
> [1] LC_CTYPE=en_AU.UTF-8       LC_NUMERIC=C              
> [3] LC_TIME=en_AU.UTF-8        LC_COLLATE=en_AU.UTF-8    
> [5] LC_MONETARY=en_AU.UTF-8    LC_MESSAGES=en_AU.UTF-8   
> [7] LC_PAPER=en_AU.UTF-8       LC_NAME=C                 
> [9] LC_ADDRESS=C               LC_TELEPHONE=C            
> [11] LC_MEASUREMENT=en_AU.UTF-8 LC_IDENTIFICATION=C       
> 
> attached base packages:
> [1] parallel  stats     graphics  grDevices utils     datasets  methods  
> [8] base     
> 
> loaded via a namespace (and not attached):
> [1] tools_3.1.0
> 
> --------------------------------------
> Dario Strbenac
> PhD Student
> University of Sydney
> Camperdown NSW 2050
> Australia
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
> 


From ravi.varadhan at jhu.edu  Thu May 29 22:10:23 2014
From: ravi.varadhan at jhu.edu (Ravi Varadhan)
Date: Thu, 29 May 2014 20:10:23 +0000
Subject: [Rd] A bug in princomp(), perhaps?
Message-ID: <2F9EA67EF9AE1C48A147CB41BE2E15C30E2D6CDC@DOM-EB-MAIL2.win.ad.jhu.edu>

An embedded and charset-unspecified text was scrubbed...
Name: not available
URL: <https://stat.ethz.ch/pipermail/r-devel/attachments/20140529/6f820b01/attachment.pl>

From nilsson.henric at gmail.com  Fri May 30 02:04:15 2014
From: nilsson.henric at gmail.com (Henric Winell)
Date: Fri, 30 May 2014 02:04:15 +0200
Subject: [Rd] mcmapply Core Usage
In-Reply-To: <2786FF94-F1AB-4F72-B83B-49070C175F05@r-project.org>
References: <1401346839076.36443@uni.sydney.edu.au>
	<2786FF94-F1AB-4F72-B83B-49070C175F05@r-project.org>
Message-ID: <5387CAFF.9050305@gmail.com>

Simon Urbanek skrev 2014-05-29 15:06:
> Dario,
>
> yes, that is a bug, now fixed.

Thanks for fixing it.

This problem was independently reported some time ago 
(https://bugs.r-project.org/bugzilla/show_bug.cgi?id=15016) and I 
believe that it can now be closed.

Henric


>
> Cheers,
> Simon
>
>
> On May 29, 2014, at 2:00 AM, Dario Strbenac <dstr7320 at uni.sydney.edu.au> wrote:
>
>> Hello,
>>
>> I have a minimal example that shows a problem I'm having with parallel processing.
>>
>> library(parallel)
>> mcmapply(function(x, y)
>> {
>>   print("Running")
>>   Sys.sleep(10)
>> }, as.list(1:10), as.list(10:1), mc.cores = 16, SIMPLIFY = FALSE)
>>
>> I see "Running" printed once every ten seconds. I read the documentation for mcmapply, but I don't understand why it wouldn't print all ten output statements almost at once, then wait for about ten seconds, then return to the prompt. Is it documented in another location ?
>>
>> My problem is that I have a section of code that takes a long time, which I have replaced with Sys.sleep in the above example, but when I look at the output of top, I only see 1 CPU being used. The computer has 16 processors.
>>
>>> sessionInfo()
>> R version 3.1.0 (2014-04-10)
>> Platform: x86_64-pc-linux-gnu (64-bit)
>>
>> locale:
>> [1] LC_CTYPE=en_AU.UTF-8       LC_NUMERIC=C
>> [3] LC_TIME=en_AU.UTF-8        LC_COLLATE=en_AU.UTF-8
>> [5] LC_MONETARY=en_AU.UTF-8    LC_MESSAGES=en_AU.UTF-8
>> [7] LC_PAPER=en_AU.UTF-8       LC_NAME=C
>> [9] LC_ADDRESS=C               LC_TELEPHONE=C
>> [11] LC_MEASUREMENT=en_AU.UTF-8 LC_IDENTIFICATION=C
>>
>> attached base packages:
>> [1] parallel  stats     graphics  grDevices utils     datasets  methods
>> [8] base
>>
>> loaded via a namespace (and not attached):
>> [1] tools_3.1.0
>>
>> --------------------------------------
>> Dario Strbenac
>> PhD Student
>> University of Sydney
>> Camperdown NSW 2050
>> Australia
>>
>> ______________________________________________
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>


From simon.urbanek at r-project.org  Fri May 30 03:29:31 2014
From: simon.urbanek at r-project.org (Simon Urbanek)
Date: Thu, 29 May 2014 21:29:31 -0400
Subject: [Rd] mcmapply Core Usage
In-Reply-To: <5387CAFF.9050305@gmail.com>
References: <1401346839076.36443@uni.sydney.edu.au>
	<2786FF94-F1AB-4F72-B83B-49070C175F05@r-project.org>
	<5387CAFF.9050305@gmail.com>
Message-ID: <235FF4EA-FBF9-4273-886E-D67FC10408BB@r-project.org>

On May 29, 2014, at 8:04 PM, Henric Winell <nilsson.henric at gmail.com> wrote:

> Simon Urbanek skrev 2014-05-29 15:06:
>> Dario,
>> 
>> yes, that is a bug, now fixed.
> 
> Thanks for fixing it.
> 
> This problem was independently reported some time ago (https://bugs.r-project.org/bugzilla/show_bug.cgi?id=15016) and I believe that it can now be closed.
> 

Ah, thanks, done,
Simon


> 
>> 
>> Cheers,
>> Simon
>> 
>> 
>> On May 29, 2014, at 2:00 AM, Dario Strbenac <dstr7320 at uni.sydney.edu.au> wrote:
>> 
>>> Hello,
>>> 
>>> I have a minimal example that shows a problem I'm having with parallel processing.
>>> 
>>> library(parallel)
>>> mcmapply(function(x, y)
>>> {
>>>  print("Running")
>>>  Sys.sleep(10)
>>> }, as.list(1:10), as.list(10:1), mc.cores = 16, SIMPLIFY = FALSE)
>>> 
>>> I see "Running" printed once every ten seconds. I read the documentation for mcmapply, but I don't understand why it wouldn't print all ten output statements almost at once, then wait for about ten seconds, then return to the prompt. Is it documented in another location ?
>>> 
>>> My problem is that I have a section of code that takes a long time, which I have replaced with Sys.sleep in the above example, but when I look at the output of top, I only see 1 CPU being used. The computer has 16 processors.
>>> 
>>>> sessionInfo()
>>> R version 3.1.0 (2014-04-10)
>>> Platform: x86_64-pc-linux-gnu (64-bit)
>>> 
>>> locale:
>>> [1] LC_CTYPE=en_AU.UTF-8       LC_NUMERIC=C
>>> [3] LC_TIME=en_AU.UTF-8        LC_COLLATE=en_AU.UTF-8
>>> [5] LC_MONETARY=en_AU.UTF-8    LC_MESSAGES=en_AU.UTF-8
>>> [7] LC_PAPER=en_AU.UTF-8       LC_NAME=C
>>> [9] LC_ADDRESS=C               LC_TELEPHONE=C
>>> [11] LC_MEASUREMENT=en_AU.UTF-8 LC_IDENTIFICATION=C
>>> 
>>> attached base packages:
>>> [1] parallel  stats     graphics  grDevices utils     datasets  methods
>>> [8] base
>>> 
>>> loaded via a namespace (and not attached):
>>> [1] tools_3.1.0
>>> 
>>> --------------------------------------
>>> Dario Strbenac
>>> PhD Student
>>> University of Sydney
>>> Camperdown NSW 2050
>>> Australia
>>> 
>>> ______________________________________________
>>> R-devel at r-project.org mailing list
>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>> 
>> 
>> ______________________________________________
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel
>> 
> 


From xie at yihui.name  Fri May 30 07:04:58 2014
From: xie at yihui.name (Yihui Xie)
Date: Fri, 30 May 2014 00:04:58 -0500
Subject: [Rd] R CMD check for the R code from vignettes
Message-ID: <CANROs4dyoXEUEzouGTsL9sHCMM8RcjYWw9584SUAEYfGntPrFg@mail.gmail.com>

Hi,

Recently I saw a couple of cases in which the package vignettes were
somewhat complicated so that Stangle() (or knitr::purl() or other
tangling functions) can fail to produce the exact R code that is
executed by the weaving function Sweave() (or knitr::knit(), ...). For
example, this is a valid document that can pass the weaving process
but cannot generate a valid R script to be source()d:

\documentclass{article}
\begin{document}
Assign 1 to x: \Sexpr{x <- 1}
<<>>=
x + 1
@
\end{document}

That is because the inline R code is not written to the R script
during the tangling process. When an R package vignette contains
inline R code expressions that have significant side effects, R CMD
check can fail because the tangled output is not correct. What I
showed here is only a trivial example, and I have seen two packages
that have more complicated scenarios than this. Anyway, the key thing
that I want to discuss here is, since the R code in the vignette has
been executed once during the weaving process, does it make much sense
to execute the code generated from the tangle function? In other
words, if the weaving process has succeeded, is it necessary to
source() the R script again?

The two options here are:

1. Do not check the R code from vignettes;
2. Or fix the tangle function so that it produces exactly what was
executed in the weaving process. If this is done, I'm back to my
previous question: does it make sense to run the code twice?

To push this a little further, personally I do not quite appreciate
literate programming in R as two separate steps, namely weave and
tangle. In particular, I do not see the value of tangle, considering
Sweave() (or knitr::knit()) as the new "source()". Therefore
eventually I tend to just drop tangle, but perhaps I missed something
here, and I'd like to hear what other people think about it.

Regards,
Yihui
--
Yihui Xie <xieyihui at gmail.com>
Web: http://yihui.name


From pdalgd at gmail.com  Fri May 30 11:14:34 2014
From: pdalgd at gmail.com (peter dalgaard)
Date: Fri, 30 May 2014 11:14:34 +0200
Subject: [Rd] A bug in princomp(), perhaps?
In-Reply-To: <2F9EA67EF9AE1C48A147CB41BE2E15C30E2D6CDC@DOM-EB-MAIL2.win.ad.jhu.edu>
References: <2F9EA67EF9AE1C48A147CB41BE2E15C30E2D6CDC@DOM-EB-MAIL2.win.ad.jhu.edu>
Message-ID: <5213E16E-54FC-46D2-A92E-BC2D44A338BD@gmail.com>

It's only documented to work for princomp.formula; other methods do not know about na.action.

-pd

On 29 May 2014, at 22:10 , Ravi Varadhan <ravi.varadhan at jhu.edu> wrote:

> Hi,
> It may be my misunderstanding, but it seems that the "na.action" in the princomp() function for principal components analysis does not work.  Please see this simple example:
> 
> u <- matrix(rnorm(75), ncol=1)
> v <- matrix(rnorm(20), ncol=1)
> x <- u%*%t(v) + matrix(rnorm(20*75),ncol=20)
> x[1,1] <- NA
> pc.out <- princomp(x, na.action=na.exclude)
> Error in cov.wt(z) : 'x' must contain finite values only
>> 
> 
> Note, I have:
>> options("na.action")
> $na.action
> [1] "na.omit"
> 
> Thanks,
> Ravi
> 
> 	[[alternative HTML version deleted]]
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel

-- 
Peter Dalgaard, Professor,
Center for Statistics, Copenhagen Business School
Solbjerg Plads 3, 2000 Frederiksberg, Denmark
Phone: (+45)38153501
Email: pd.mes at cbs.dk  Priv: PDalgd at gmail.com


From ravi.varadhan at jhu.edu  Fri May 30 14:33:25 2014
From: ravi.varadhan at jhu.edu (Ravi Varadhan)
Date: Fri, 30 May 2014 12:33:25 +0000
Subject: [Rd] A bug in princomp(), perhaps?
In-Reply-To: <5213E16E-54FC-46D2-A92E-BC2D44A338BD@gmail.com>
References: <2F9EA67EF9AE1C48A147CB41BE2E15C30E2D6CDC@DOM-EB-MAIL2.win.ad.jhu.edu>
	<5213E16E-54FC-46D2-A92E-BC2D44A338BD@gmail.com>
Message-ID: <2F9EA67EF9AE1C48A147CB41BE2E15C30E2D7237@DOM-EB-MAIL2.win.ad.jhu.edu>

Thank you, Peter.  Now I see that.  

I still think the documentation of `na.action' can be made more explicit to state that this option is only used for princomp.formula.

Best regards,
Ravi

-----Original Message-----
From: peter dalgaard [mailto:pdalgd at gmail.com] 
Sent: Friday, May 30, 2014 5:15 AM
To: Ravi Varadhan
Cc: r-devel at r-project.org
Subject: Re: [Rd] A bug in princomp(), perhaps?

It's only documented to work for princomp.formula; other methods do not know about na.action.

-pd

On 29 May 2014, at 22:10 , Ravi Varadhan <ravi.varadhan at jhu.edu> wrote:

> Hi,
> It may be my misunderstanding, but it seems that the "na.action" in the princomp() function for principal components analysis does not work.  Please see this simple example:
> 
> u <- matrix(rnorm(75), ncol=1)
> v <- matrix(rnorm(20), ncol=1)
> x <- u%*%t(v) + matrix(rnorm(20*75),ncol=20) x[1,1] <- NA pc.out <- 
> princomp(x, na.action=na.exclude) Error in cov.wt(z) : 'x' must 
> contain finite values only
>> 
> 
> Note, I have:
>> options("na.action")
> $na.action
> [1] "na.omit"
> 
> Thanks,
> Ravi
> 
> 	[[alternative HTML version deleted]]
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel

--
Peter Dalgaard, Professor,
Center for Statistics, Copenhagen Business School Solbjerg Plads 3, 2000 Frederiksberg, Denmark
Phone: (+45)38153501
Email: pd.mes at cbs.dk  Priv: PDalgd at gmail.com


From kevin.r.coombes at gmail.com  Fri May 30 15:21:55 2014
From: kevin.r.coombes at gmail.com (Kevin Coombes)
Date: Fri, 30 May 2014 09:21:55 -0400
Subject: [Rd] R CMD check for the R code from vignettes
In-Reply-To: <CANROs4dyoXEUEzouGTsL9sHCMM8RcjYWw9584SUAEYfGntPrFg@mail.gmail.com>
References: <CANROs4dyoXEUEzouGTsL9sHCMM8RcjYWw9584SUAEYfGntPrFg@mail.gmail.com>
Message-ID: <538885F3.8020807@gmail.com>

Hi,

Unless someone is planning to change Stangle to include inline 
expressions (which I am *not* advocating), I think that relying on 
side-effects within an \Sexpr construction is a bad idea. So, my own 
coding style is to restrict my use of \Sexpr to calls of the form 
\Sexpr{show.the.value.of.this.variable}. As a result, I more-or-less 
believe that having R CMD check use Stangle and report an error is 
probably a good thing.

There is a completely separate questions about the relationship between 
Sweave/Stangle or knit/purl and literate programming that is linked to 
your question about whether to use Stangle on vignettes. The underlying 
model(s) in R have drifted away from Knuth's original conception, for 
some good reasons.

The original goal of literate programming was to be able to explain the 
algorithms and data structures in the code to humans.  For that purpose, 
it was important to have named code chunks that you could move around, 
which would allow you to describe the algorithm starting from a high 
level overview and then drilling down into the details. From this 
perspective, "tangle" was critical to being able to reconstruct a 
program that would compile and run correctly.

The vast majority of applications of Sweave/Stangle or knit/purl in 
modern R have a completely different goal: to produce some sort of 
document that describes the results of an analysis to a non-programmer 
or non-statistician.  For this goal, "weave" is much more important than 
"tangle", because the most important aspect is the ability to integrate 
the results (figures, tables, etc) of running the code into the document 
that get passed off to the person for whom the analysis was prepared. As 
a result, the number of times in my daily work that I need to explicitly 
invoke Stangle (or purl) explicitly is many orders of magnitude smaller 
than  the number of times that I invoke Sweave (or knitr).

   -- Kevin


On 5/30/2014 1:04 AM, Yihui Xie wrote:
> Hi,
>
> Recently I saw a couple of cases in which the package vignettes were
> somewhat complicated so that Stangle() (or knitr::purl() or other
> tangling functions) can fail to produce the exact R code that is
> executed by the weaving function Sweave() (or knitr::knit(), ...). For
> example, this is a valid document that can pass the weaving process
> but cannot generate a valid R script to be source()d:
>
> \documentclass{article}
> \begin{document}
> Assign 1 to x: \Sexpr{x <- 1}
> <<>>=
> x + 1
> @
> \end{document}
>
> That is because the inline R code is not written to the R script
> during the tangling process. When an R package vignette contains
> inline R code expressions that have significant side effects, R CMD
> check can fail because the tangled output is not correct. What I
> showed here is only a trivial example, and I have seen two packages
> that have more complicated scenarios than this. Anyway, the key thing
> that I want to discuss here is, since the R code in the vignette has
> been executed once during the weaving process, does it make much sense
> to execute the code generated from the tangle function? In other
> words, if the weaving process has succeeded, is it necessary to
> source() the R script again?
>
> The two options here are:
>
> 1. Do not check the R code from vignettes;
> 2. Or fix the tangle function so that it produces exactly what was
> executed in the weaving process. If this is done, I'm back to my
> previous question: does it make sense to run the code twice?
>
> To push this a little further, personally I do not quite appreciate
> literate programming in R as two separate steps, namely weave and
> tangle. In particular, I do not see the value of tangle, considering
> Sweave() (or knitr::knit()) as the new "source()". Therefore
> eventually I tend to just drop tangle, but perhaps I missed something
> here, and I'd like to hear what other people think about it.
>
> Regards,
> Yihui
> --
> Yihui Xie <xieyihui at gmail.com>
> Web: http://yihui.name
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From h.wickham at gmail.com  Fri May 30 16:06:35 2014
From: h.wickham at gmail.com (Hadley Wickham)
Date: Fri, 30 May 2014 09:06:35 -0500
Subject: [Rd] Style question
In-Reply-To: <538654A4.60402@fhcrc.org>
References: <CAOVYLHcgBqBmFMhSnx3hRELV4D9ijdHRoG=SmnRx8g=6f90F3A@mail.gmail.com>
	<538654A4.60402@fhcrc.org>
Message-ID: <CABdHhvHP7VRmU6Z68EDieEPOsyqUkFRrkuG=ohO0f8V5J0tWUw@mail.gmail.com>

> Even more important than choosing between whatever(...)
> or foo::whatever(...), you should import that function
> from the foo package by putting
>
>   importFrom(foo, whatever)
>
> or
>
>   import(foo)
>
> in your NAMESPACE file.
>
> The 1st form also kind of document what function comes from what
> package.
>
> Note that you'll also need to have foo in the Depends or Imports field
> of your DESCRIPTION file. Which field is appropriate depends on whether
> or not you want foo to show up in the user's search path when s/he loads
> your package with 'library(yourpackage)'.

Except that if you do foo::whatever() you don't need to explicitly
import the function.

Hadley


-- 
http://had.co.nz/


From ucfagls at gmail.com  Fri May 30 16:46:20 2014
From: ucfagls at gmail.com (Gavin Simpson)
Date: Fri, 30 May 2014 08:46:20 -0600
Subject: [Rd] A bug in princomp(), perhaps?
In-Reply-To: <2F9EA67EF9AE1C48A147CB41BE2E15C30E2D7237@DOM-EB-MAIL2.win.ad.jhu.edu>
References: <2F9EA67EF9AE1C48A147CB41BE2E15C30E2D6CDC@DOM-EB-MAIL2.win.ad.jhu.edu>
	<5213E16E-54FC-46D2-A92E-BC2D44A338BD@gmail.com>
	<2F9EA67EF9AE1C48A147CB41BE2E15C30E2D7237@DOM-EB-MAIL2.win.ad.jhu.edu>
Message-ID: <CAAHES9zWN3c4pdK8XcKLuKbq4kNV3Ohs6NCb0yo9dGM0+3sP4w@mail.gmail.com>

An embedded and charset-unspecified text was scrubbed...
Name: not available
URL: <https://stat.ethz.ch/pipermail/r-devel/attachments/20140530/6dc7c725/attachment.pl>

From ravi.varadhan at jhu.edu  Fri May 30 16:57:25 2014
From: ravi.varadhan at jhu.edu (Ravi Varadhan)
Date: Fri, 30 May 2014 14:57:25 +0000
Subject: [Rd] A bug in princomp(), perhaps?
In-Reply-To: <CAAHES9zWN3c4pdK8XcKLuKbq4kNV3Ohs6NCb0yo9dGM0+3sP4w@mail.gmail.com>
References: <2F9EA67EF9AE1C48A147CB41BE2E15C30E2D6CDC@DOM-EB-MAIL2.win.ad.jhu.edu>
	<5213E16E-54FC-46D2-A92E-BC2D44A338BD@gmail.com>
	<2F9EA67EF9AE1C48A147CB41BE2E15C30E2D7237@DOM-EB-MAIL2.win.ad.jhu.edu>
	<CAAHES9zWN3c4pdK8XcKLuKbq4kNV3Ohs6NCb0yo9dGM0+3sP4w@mail.gmail.com>
Message-ID: <2F9EA67EF9AE1C48A147CB41BE2E15C30E2D734D@DOM-EB-MAIL2.win.ad.jhu.edu>

An embedded and charset-unspecified text was scrubbed...
Name: not available
URL: <https://stat.ethz.ch/pipermail/r-devel/attachments/20140530/1868e1eb/attachment.pl>

From ucfagls at gmail.com  Fri May 30 17:12:27 2014
From: ucfagls at gmail.com (Gavin Simpson)
Date: Fri, 30 May 2014 09:12:27 -0600
Subject: [Rd] A bug in princomp(), perhaps?
In-Reply-To: <2F9EA67EF9AE1C48A147CB41BE2E15C30E2D734D@DOM-EB-MAIL2.win.ad.jhu.edu>
References: <2F9EA67EF9AE1C48A147CB41BE2E15C30E2D6CDC@DOM-EB-MAIL2.win.ad.jhu.edu>
	<5213E16E-54FC-46D2-A92E-BC2D44A338BD@gmail.com>
	<2F9EA67EF9AE1C48A147CB41BE2E15C30E2D7237@DOM-EB-MAIL2.win.ad.jhu.edu>
	<CAAHES9zWN3c4pdK8XcKLuKbq4kNV3Ohs6NCb0yo9dGM0+3sP4w@mail.gmail.com>
	<2F9EA67EF9AE1C48A147CB41BE2E15C30E2D734D@DOM-EB-MAIL2.win.ad.jhu.edu>
Message-ID: <CAAHES9xiwaSv3FQ1HYY3NPfCsdqGN+fvqDzvp6vxtArERXA4Jw@mail.gmail.com>

An embedded and charset-unspecified text was scrubbed...
Name: not available
URL: <https://stat.ethz.ch/pipermail/r-devel/attachments/20140530/b9d5bb98/attachment.pl>

From cboettig at gmail.com  Fri May 30 18:29:29 2014
From: cboettig at gmail.com (Carl Boettiger)
Date: Fri, 30 May 2014 09:29:29 -0700
Subject: [Rd] R CMD check for the R code from vignettes
In-Reply-To: <538885F3.8020807@gmail.com>
References: <CANROs4dyoXEUEzouGTsL9sHCMM8RcjYWw9584SUAEYfGntPrFg@mail.gmail.com>
	<538885F3.8020807@gmail.com>
Message-ID: <CAN_1p9z9i5e54B=U063kKK3cF=XjzSBZ-dKDJ5U8uRK9k1Hg6w@mail.gmail.com>

An embedded and charset-unspecified text was scrubbed...
Name: not available
URL: <https://stat.ethz.ch/pipermail/r-devel/attachments/20140530/8e4b84ee/attachment.pl>

From hpages at fhcrc.org  Fri May 30 18:55:31 2014
From: hpages at fhcrc.org (=?UTF-8?B?SGVydsOpIFBhZ8Oocw==?=)
Date: Fri, 30 May 2014 09:55:31 -0700
Subject: [Rd] Style question
In-Reply-To: <CABdHhvHP7VRmU6Z68EDieEPOsyqUkFRrkuG=ohO0f8V5J0tWUw@mail.gmail.com>
References: <CAOVYLHcgBqBmFMhSnx3hRELV4D9ijdHRoG=SmnRx8g=6f90F3A@mail.gmail.com>
	<538654A4.60402@fhcrc.org>
	<CABdHhvHP7VRmU6Z68EDieEPOsyqUkFRrkuG=ohO0f8V5J0tWUw@mail.gmail.com>
Message-ID: <5388B803.8030506@fhcrc.org>

Hi Hadley,

On 05/30/2014 07:06 AM, Hadley Wickham wrote:
>> Even more important than choosing between whatever(...)
>> or foo::whatever(...), you should import that function
>> from the foo package by putting
>>
>>    importFrom(foo, whatever)
>>
>> or
>>
>>    import(foo)
>>
>> in your NAMESPACE file.
>>
>> The 1st form also kind of document what function comes from what
>> package.
>>
>> Note that you'll also need to have foo in the Depends or Imports field
>> of your DESCRIPTION file. Which field is appropriate depends on whether
>> or not you want foo to show up in the user's search path when s/he loads
>> your package with 'library(yourpackage)'.
>
> Except that if you do foo::whatever() you don't need to explicitly
> import the function.

There is at least one subtle consequence to keep in mind when doing
this. Of course, whatever choice you make, if the whatever() function
moves to a different package, this breaks your package.
However, if you explicitly import the function, your package will
break at load-time (which is good) and you'll only have to modify
1 line in the NAMESPACE file to fix it. But if you do foo::whatever(),
your package won't break at load-time, only at run-time. Also you'll
have to edit all the calls to foo::whatever() to fix the package.

Probably not a big deal, but in an environment like Bioconductor where
infrastructure classes and functions can be shared by hundreds of
packages, having people use foo::whatever() in a systematic way would
probably make maintenance a little bit more painful than it needs to
be when the need arises to reorganize/refactor parts of the
infrastructure. Also, the ability to quickly grep the NAMESPACE
files of all BioC packages to see who imports what is very convenient
in this situation.

Cheers,
H.

>
> Hadley
>
>

-- 
Herv? Pag?s

Program in Computational Biology
Division of Public Health Sciences
Fred Hutchinson Cancer Research Center
1100 Fairview Ave. N, M1-B514
P.O. Box 19024
Seattle, WA 98109-1024

E-mail: hpages at fhcrc.org
Phone:  (206) 667-5791
Fax:    (206) 667-1319


From h.wickham at gmail.com  Fri May 30 19:00:01 2014
From: h.wickham at gmail.com (Hadley Wickham)
Date: Fri, 30 May 2014 12:00:01 -0500
Subject: [Rd] Style question
In-Reply-To: <5388B803.8030506@fhcrc.org>
References: <CAOVYLHcgBqBmFMhSnx3hRELV4D9ijdHRoG=SmnRx8g=6f90F3A@mail.gmail.com>
	<538654A4.60402@fhcrc.org>
	<CABdHhvHP7VRmU6Z68EDieEPOsyqUkFRrkuG=ohO0f8V5J0tWUw@mail.gmail.com>
	<5388B803.8030506@fhcrc.org>
Message-ID: <CABdHhvE41f+cpngPjvXtCpbDiy68zBK-Qq-rQXt7c4ueW9FF=Q@mail.gmail.com>

> There is at least one subtle consequence to keep in mind when doing
> this. Of course, whatever choice you make, if the whatever() function
> moves to a different package, this breaks your package.
> However, if you explicitly import the function, your package will
> break at load-time (which is good) and you'll only have to modify
> 1 line in the NAMESPACE file to fix it. But if you do foo::whatever(),
> your package won't break at load-time, only at run-time. Also you'll
> have to edit all the calls to foo::whatever() to fix the package.
>
> Probably not a big deal, but in an environment like Bioconductor where
> infrastructure classes and functions can be shared by hundreds of
> packages, having people use foo::whatever() in a systematic way would
> probably make maintenance a little bit more painful than it needs to
> be when the need arises to reorganize/refactor parts of the
> infrastructure. Also, the ability to quickly grep the NAMESPACE
> files of all BioC packages to see who imports what is very convenient
> in this situation.

OTOH, I think there's a big benefit to being able to read package code
and instantly know where a function comes from.

Personally, I found this outweighs the benefits that you outline:

* functions rarely move between packages, and gsubbing for pkga:foo to
pkgb:foo isn't hard
* it's not that much hard to grep for pkg::foo in R/* than it is to
grep NAMESPACE

Hadley

-- 
http://had.co.nz/


From hb at biostat.ucsf.edu  Fri May 30 19:15:46 2014
From: hb at biostat.ucsf.edu (Henrik Bengtsson)
Date: Fri, 30 May 2014 10:15:46 -0700
Subject: [Rd] R CMD check for the R code from vignettes
In-Reply-To: <CAN_1p9z9i5e54B=U063kKK3cF=XjzSBZ-dKDJ5U8uRK9k1Hg6w@mail.gmail.com>
References: <CANROs4dyoXEUEzouGTsL9sHCMM8RcjYWw9584SUAEYfGntPrFg@mail.gmail.com>
	<538885F3.8020807@gmail.com>
	<CAN_1p9z9i5e54B=U063kKK3cF=XjzSBZ-dKDJ5U8uRK9k1Hg6w@mail.gmail.com>
Message-ID: <CAFDcVCTheF7uOos-Yyiik0z=ngwBAzhMA7P18mvf0675KD_Wuw@mail.gmail.com>

I think there are several aspects to Yihue's post and some simple
workarounds/long solutions to the issues:

1. For the reasons argued, I would agree that 'R CMD check'
incorrectly assumes that tangled code script should be able to run
without errors.  Instead I think it should only check the syntax, i.e.
that it can be parsed without errors.  If not, then Sweave may have to
be redfined to clarify that \Sexpr{}/"inline" expressions must not
have "side effects".

2. For other (=non-Sweave) vignette builder packages, you can already
today define engines that do not tangle, think
%\VignetteEngine{knitr::knitr_no_tangle}.

3. Extending on this, I'd like to propose %\VignetteTangle{no} (and/or
false, FALSE, ...), which would tell the engine to not generate the
"tangle" script file.  Then it is up to the vignette engine to
acknowledge this or not, but at least we will have a standard across
engines rather that each of us come up with their own markup for this.
 You can also imagine that one support other types of settings, e.g.
%\VignetteTangle{all} to include also \Sexpr{} in the tangled output.

/Henrik

On Fri, May 30, 2014 at 9:29 AM, Carl Boettiger <cboettig at gmail.com> wrote:
> Hi Yihui,
>
> I agree with you (and your comments in [knitr issue 784]) that it seems
> wrong for R CMD check to be using tangle (purl, etc) as a way to check R
> code in a vignette, when the standard and expected way to check the
> vignette is already to knit / Sweave the vignette.
>
> I also agree with the perspective that the tangle function no longer plays
> the crucial role it did when we were using noweb and C programs that
> couldn't be compiled without tangle.
>
> However, I would be hesitant to see tangle removed entirely, as it is
> occasionally a convenient way to create an R script from a dynamic
> document.  Pure R scripts are still much more widely recognized than
> dynamic documents, and I sometimes will just tangle out the R code because
> a collaborator would have no idea what to do with a .Rmd file (Though
> RStudio is certainly improving this situation).  Tangle-like functions also
> provides a nice compliment to the "stitch" and friends that make dynamic
> documents from the ubiquitous R scripts.
>
> [knitr issue 784]: https://github.com/yihui/knitr/issues/784
>
>
> - Carl
>
>
>
> On Fri, May 30, 2014 at 6:21 AM, Kevin Coombes <kevin.r.coombes at gmail.com>
> wrote:
>
>> Hi,
>>
>> Unless someone is planning to change Stangle to include inline expressions
>> (which I am *not* advocating), I think that relying on side-effects within
>> an \Sexpr construction is a bad idea. So, my own coding style is to
>> restrict my use of \Sexpr to calls of the form
>> \Sexpr{show.the.value.of.this.variable}. As a result, I more-or-less
>> believe that having R CMD check use Stangle and report an error is probably
>> a good thing.
>>
>> There is a completely separate questions about the relationship between
>> Sweave/Stangle or knit/purl and literate programming that is linked to your
>> question about whether to use Stangle on vignettes. The underlying model(s)
>> in R have drifted away from Knuth's original conception, for some good
>> reasons.
>>
>> The original goal of literate programming was to be able to explain the
>> algorithms and data structures in the code to humans.  For that purpose, it
>> was important to have named code chunks that you could move around, which
>> would allow you to describe the algorithm starting from a high level
>> overview and then drilling down into the details. From this perspective,
>> "tangle" was critical to being able to reconstruct a program that would
>> compile and run correctly.
>>
>> The vast majority of applications of Sweave/Stangle or knit/purl in modern
>> R have a completely different goal: to produce some sort of document that
>> describes the results of an analysis to a non-programmer or
>> non-statistician.  For this goal, "weave" is much more important than
>> "tangle", because the most important aspect is the ability to integrate the
>> results (figures, tables, etc) of running the code into the document that
>> get passed off to the person for whom the analysis was prepared. As a
>> result, the number of times in my daily work that I need to explicitly
>> invoke Stangle (or purl) explicitly is many orders of magnitude smaller
>> than  the number of times that I invoke Sweave (or knitr).
>>
>>   -- Kevin
>>
>>
>>
>> On 5/30/2014 1:04 AM, Yihui Xie wrote:
>>
>>> Hi,
>>>
>>> Recently I saw a couple of cases in which the package vignettes were
>>> somewhat complicated so that Stangle() (or knitr::purl() or other
>>> tangling functions) can fail to produce the exact R code that is
>>> executed by the weaving function Sweave() (or knitr::knit(), ...). For
>>> example, this is a valid document that can pass the weaving process
>>> but cannot generate a valid R script to be source()d:
>>>
>>> \documentclass{article}
>>> \begin{document}
>>> Assign 1 to x: \Sexpr{x <- 1}
>>> <<>>=
>>> x + 1
>>> @
>>> \end{document}
>>>
>>> That is because the inline R code is not written to the R script
>>> during the tangling process. When an R package vignette contains
>>> inline R code expressions that have significant side effects, R CMD
>>> check can fail because the tangled output is not correct. What I
>>> showed here is only a trivial example, and I have seen two packages
>>> that have more complicated scenarios than this. Anyway, the key thing
>>> that I want to discuss here is, since the R code in the vignette has
>>> been executed once during the weaving process, does it make much sense
>>> to execute the code generated from the tangle function? In other
>>> words, if the weaving process has succeeded, is it necessary to
>>> source() the R script again?
>>>
>>> The two options here are:
>>>
>>> 1. Do not check the R code from vignettes;
>>> 2. Or fix the tangle function so that it produces exactly what was
>>> executed in the weaving process. If this is done, I'm back to my
>>> previous question: does it make sense to run the code twice?
>>>
>>> To push this a little further, personally I do not quite appreciate
>>> literate programming in R as two separate steps, namely weave and
>>> tangle. In particular, I do not see the value of tangle, considering
>>> Sweave() (or knitr::knit()) as the new "source()". Therefore
>>> eventually I tend to just drop tangle, but perhaps I missed something
>>> here, and I'd like to hear what other people think about it.
>>>
>>> Regards,
>>> Yihui
>>> --
>>> Yihui Xie <xieyihui at gmail.com>
>>> Web: http://yihui.name
>>>
>>> ______________________________________________
>>> R-devel at r-project.org mailing list
>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>>
>>
>> ______________________________________________
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>
>
>
>
> --
> Carl Boettiger
> UC Santa Cruz
> http://carlboettiger.info/
>
>         [[alternative HTML version deleted]]
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From hb at biostat.ucsf.edu  Fri May 30 19:34:07 2014
From: hb at biostat.ucsf.edu (Henrik Bengtsson)
Date: Fri, 30 May 2014 10:34:07 -0700
Subject: [Rd] R CMD check for the R code from vignettes
In-Reply-To: <CAFDcVCTheF7uOos-Yyiik0z=ngwBAzhMA7P18mvf0675KD_Wuw@mail.gmail.com>
References: <CANROs4dyoXEUEzouGTsL9sHCMM8RcjYWw9584SUAEYfGntPrFg@mail.gmail.com>
	<538885F3.8020807@gmail.com>
	<CAN_1p9z9i5e54B=U063kKK3cF=XjzSBZ-dKDJ5U8uRK9k1Hg6w@mail.gmail.com>
	<CAFDcVCTheF7uOos-Yyiik0z=ngwBAzhMA7P18mvf0675KD_Wuw@mail.gmail.com>
Message-ID: <CAFDcVCT=aFV4VJNCD=hHVrBBY7tDgas4JRMhBpnArRQqec0xKg@mail.gmail.com>

Sorry, it should be Yihui and nothing else. /Henrik

On Fri, May 30, 2014 at 10:15 AM, Henrik Bengtsson <hb at biostat.ucsf.edu> wrote:
> I think there are several aspects to Yihue's post and some simple
> workarounds/long solutions to the issues:
>
> 1. For the reasons argued, I would agree that 'R CMD check'
> incorrectly assumes that tangled code script should be able to run
> without errors.  Instead I think it should only check the syntax, i.e.
> that it can be parsed without errors.  If not, then Sweave may have to
> be redfined to clarify that \Sexpr{}/"inline" expressions must not
> have "side effects".
>
> 2. For other (=non-Sweave) vignette builder packages, you can already
> today define engines that do not tangle, think
> %\VignetteEngine{knitr::knitr_no_tangle}.
>
> 3. Extending on this, I'd like to propose %\VignetteTangle{no} (and/or
> false, FALSE, ...), which would tell the engine to not generate the
> "tangle" script file.  Then it is up to the vignette engine to
> acknowledge this or not, but at least we will have a standard across
> engines rather that each of us come up with their own markup for this.
>  You can also imagine that one support other types of settings, e.g.
> %\VignetteTangle{all} to include also \Sexpr{} in the tangled output.
>
> /Henrik
>
> On Fri, May 30, 2014 at 9:29 AM, Carl Boettiger <cboettig at gmail.com> wrote:
>> Hi Yihui,
>>
>> I agree with you (and your comments in [knitr issue 784]) that it seems
>> wrong for R CMD check to be using tangle (purl, etc) as a way to check R
>> code in a vignette, when the standard and expected way to check the
>> vignette is already to knit / Sweave the vignette.
>>
>> I also agree with the perspective that the tangle function no longer plays
>> the crucial role it did when we were using noweb and C programs that
>> couldn't be compiled without tangle.
>>
>> However, I would be hesitant to see tangle removed entirely, as it is
>> occasionally a convenient way to create an R script from a dynamic
>> document.  Pure R scripts are still much more widely recognized than
>> dynamic documents, and I sometimes will just tangle out the R code because
>> a collaborator would have no idea what to do with a .Rmd file (Though
>> RStudio is certainly improving this situation).  Tangle-like functions also
>> provides a nice compliment to the "stitch" and friends that make dynamic
>> documents from the ubiquitous R scripts.
>>
>> [knitr issue 784]: https://github.com/yihui/knitr/issues/784
>>
>>
>> - Carl
>>
>>
>>
>> On Fri, May 30, 2014 at 6:21 AM, Kevin Coombes <kevin.r.coombes at gmail.com>
>> wrote:
>>
>>> Hi,
>>>
>>> Unless someone is planning to change Stangle to include inline expressions
>>> (which I am *not* advocating), I think that relying on side-effects within
>>> an \Sexpr construction is a bad idea. So, my own coding style is to
>>> restrict my use of \Sexpr to calls of the form
>>> \Sexpr{show.the.value.of.this.variable}. As a result, I more-or-less
>>> believe that having R CMD check use Stangle and report an error is probably
>>> a good thing.
>>>
>>> There is a completely separate questions about the relationship between
>>> Sweave/Stangle or knit/purl and literate programming that is linked to your
>>> question about whether to use Stangle on vignettes. The underlying model(s)
>>> in R have drifted away from Knuth's original conception, for some good
>>> reasons.
>>>
>>> The original goal of literate programming was to be able to explain the
>>> algorithms and data structures in the code to humans.  For that purpose, it
>>> was important to have named code chunks that you could move around, which
>>> would allow you to describe the algorithm starting from a high level
>>> overview and then drilling down into the details. From this perspective,
>>> "tangle" was critical to being able to reconstruct a program that would
>>> compile and run correctly.
>>>
>>> The vast majority of applications of Sweave/Stangle or knit/purl in modern
>>> R have a completely different goal: to produce some sort of document that
>>> describes the results of an analysis to a non-programmer or
>>> non-statistician.  For this goal, "weave" is much more important than
>>> "tangle", because the most important aspect is the ability to integrate the
>>> results (figures, tables, etc) of running the code into the document that
>>> get passed off to the person for whom the analysis was prepared. As a
>>> result, the number of times in my daily work that I need to explicitly
>>> invoke Stangle (or purl) explicitly is many orders of magnitude smaller
>>> than  the number of times that I invoke Sweave (or knitr).
>>>
>>>   -- Kevin
>>>
>>>
>>>
>>> On 5/30/2014 1:04 AM, Yihui Xie wrote:
>>>
>>>> Hi,
>>>>
>>>> Recently I saw a couple of cases in which the package vignettes were
>>>> somewhat complicated so that Stangle() (or knitr::purl() or other
>>>> tangling functions) can fail to produce the exact R code that is
>>>> executed by the weaving function Sweave() (or knitr::knit(), ...). For
>>>> example, this is a valid document that can pass the weaving process
>>>> but cannot generate a valid R script to be source()d:
>>>>
>>>> \documentclass{article}
>>>> \begin{document}
>>>> Assign 1 to x: \Sexpr{x <- 1}
>>>> <<>>=
>>>> x + 1
>>>> @
>>>> \end{document}
>>>>
>>>> That is because the inline R code is not written to the R script
>>>> during the tangling process. When an R package vignette contains
>>>> inline R code expressions that have significant side effects, R CMD
>>>> check can fail because the tangled output is not correct. What I
>>>> showed here is only a trivial example, and I have seen two packages
>>>> that have more complicated scenarios than this. Anyway, the key thing
>>>> that I want to discuss here is, since the R code in the vignette has
>>>> been executed once during the weaving process, does it make much sense
>>>> to execute the code generated from the tangle function? In other
>>>> words, if the weaving process has succeeded, is it necessary to
>>>> source() the R script again?
>>>>
>>>> The two options here are:
>>>>
>>>> 1. Do not check the R code from vignettes;
>>>> 2. Or fix the tangle function so that it produces exactly what was
>>>> executed in the weaving process. If this is done, I'm back to my
>>>> previous question: does it make sense to run the code twice?
>>>>
>>>> To push this a little further, personally I do not quite appreciate
>>>> literate programming in R as two separate steps, namely weave and
>>>> tangle. In particular, I do not see the value of tangle, considering
>>>> Sweave() (or knitr::knit()) as the new "source()". Therefore
>>>> eventually I tend to just drop tangle, but perhaps I missed something
>>>> here, and I'd like to hear what other people think about it.
>>>>
>>>> Regards,
>>>> Yihui
>>>> --
>>>> Yihui Xie <xieyihui at gmail.com>
>>>> Web: http://yihui.name
>>>>
>>>> ______________________________________________
>>>> R-devel at r-project.org mailing list
>>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>>>
>>>
>>> ______________________________________________
>>> R-devel at r-project.org mailing list
>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>>
>>
>>
>>
>> --
>> Carl Boettiger
>> UC Santa Cruz
>> http://carlboettiger.info/
>>
>>         [[alternative HTML version deleted]]
>>
>> ______________________________________________
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel


From gmbecker at ucdavis.edu  Fri May 30 20:34:44 2014
From: gmbecker at ucdavis.edu (Gabriel Becker)
Date: Fri, 30 May 2014 11:34:44 -0700
Subject: [Rd] Style question
In-Reply-To: <CABdHhvE41f+cpngPjvXtCpbDiy68zBK-Qq-rQXt7c4ueW9FF=Q@mail.gmail.com>
References: <CAOVYLHcgBqBmFMhSnx3hRELV4D9ijdHRoG=SmnRx8g=6f90F3A@mail.gmail.com>
	<538654A4.60402@fhcrc.org>
	<CABdHhvHP7VRmU6Z68EDieEPOsyqUkFRrkuG=ohO0f8V5J0tWUw@mail.gmail.com>
	<5388B803.8030506@fhcrc.org>
	<CABdHhvE41f+cpngPjvXtCpbDiy68zBK-Qq-rQXt7c4ueW9FF=Q@mail.gmail.com>
Message-ID: <CADwqtCO1GRU+k6G+iYTzx1khZWKZTL0uxDwbezKX-ReHoi+DFA@mail.gmail.com>

An embedded and charset-unspecified text was scrubbed...
Name: not available
URL: <https://stat.ethz.ch/pipermail/r-devel/attachments/20140530/771622b4/attachment.pl>

From csardi.gabor at gmail.com  Fri May 30 21:04:44 2014
From: csardi.gabor at gmail.com (=?UTF-8?B?R8OhYm9yIENzw6FyZGk=?=)
Date: Fri, 30 May 2014 21:04:44 +0200
Subject: [Rd] Style question
In-Reply-To: <5388B803.8030506@fhcrc.org>
References: <CAOVYLHcgBqBmFMhSnx3hRELV4D9ijdHRoG=SmnRx8g=6f90F3A@mail.gmail.com>
	<538654A4.60402@fhcrc.org>
	<CABdHhvHP7VRmU6Z68EDieEPOsyqUkFRrkuG=ohO0f8V5J0tWUw@mail.gmail.com>
	<5388B803.8030506@fhcrc.org>
Message-ID: <CABtg=Kmr_swM0kzf8E1xRdTPzsrW3US-pifwQvdvEv-_yxWnZQ@mail.gmail.com>

An embedded and charset-unspecified text was scrubbed...
Name: not available
URL: <https://stat.ethz.ch/pipermail/r-devel/attachments/20140530/f5444bef/attachment.pl>

From hpages at fhcrc.org  Fri May 30 21:05:32 2014
From: hpages at fhcrc.org (=?UTF-8?B?SGVydsOpIFBhZ8Oocw==?=)
Date: Fri, 30 May 2014 12:05:32 -0700
Subject: [Rd] Style question
In-Reply-To: <CABdHhvE41f+cpngPjvXtCpbDiy68zBK-Qq-rQXt7c4ueW9FF=Q@mail.gmail.com>
References: <CAOVYLHcgBqBmFMhSnx3hRELV4D9ijdHRoG=SmnRx8g=6f90F3A@mail.gmail.com>
	<538654A4.60402@fhcrc.org>
	<CABdHhvHP7VRmU6Z68EDieEPOsyqUkFRrkuG=ohO0f8V5J0tWUw@mail.gmail.com>
	<5388B803.8030506@fhcrc.org>
	<CABdHhvE41f+cpngPjvXtCpbDiy68zBK-Qq-rQXt7c4ueW9FF=Q@mail.gmail.com>
Message-ID: <5388D67C.7010807@fhcrc.org>

On 05/30/2014 10:00 AM, Hadley Wickham wrote:
>> There is at least one subtle consequence to keep in mind when doing
>> this. Of course, whatever choice you make, if the whatever() function
>> moves to a different package, this breaks your package.
>> However, if you explicitly import the function, your package will
>> break at load-time (which is good) and you'll only have to modify
>> 1 line in the NAMESPACE file to fix it. But if you do foo::whatever(),
>> your package won't break at load-time, only at run-time. Also you'll
>> have to edit all the calls to foo::whatever() to fix the package.
>>
>> Probably not a big deal, but in an environment like Bioconductor where
>> infrastructure classes and functions can be shared by hundreds of
>> packages, having people use foo::whatever() in a systematic way would
>> probably make maintenance a little bit more painful than it needs to
>> be when the need arises to reorganize/refactor parts of the
>> infrastructure. Also, the ability to quickly grep the NAMESPACE
>> files of all BioC packages to see who imports what is very convenient
>> in this situation.
>
> OTOH, I think there's a big benefit to being able to read package code
> and instantly know where a function comes from.

To me this is way more readable:

   setClass("A", representation(...))
   setMethod("head", "A", function(x, ...) {...})

than this:

   methods::setClass("A", methods::representation(...))
   methods::setMethod(utils::head, "A", function(x, ...) {...})

All the :: clutter adds very little value and hurts readability.
Just a matter of taste I guess.

Also it almost never matters to me *where* a function comes from.
The only thing I find relevant when I read code is *what* a function
does and I can find out by doing ?whatever (I generally don't need
to do ?foo::whatever). If I need to try it (interactively), I do
whatever(...), not foo::whatever(...). Sometimes, ?whatever will
fail because foo's NAMESPACE is loaded but foo is not attached to my
search path. In that case, and in that case only, I need to know
*where* the function comes from so I can library() the package where
it's defined and documented, and then I can do ?whatever. But this is
a rare situation and doesn't justify systematic use of foo::whatever().

So I only reserve the use of foo::whatever() to disambiguate in case
of name collision or to call a function defined in a *suggested*
package.

Finally, now that the use of a NAMESPACE became mandatory (well, this
happened a few years ago), advocating systematic use of foo::whatever()
without explicitly importing the function sounds a little bit like an
heroic act of resistance ;-)

H.

>
> Personally, I found this outweighs the benefits that you outline:
>
> * functions rarely move between packages, and gsubbing for pkga:foo to
> pkgb:foo isn't hard
> * it's not that much hard to grep for pkg::foo in R/* than it is to
> grep NAMESPACE
>
> Hadley
>

-- 
Herv? Pag?s

Program in Computational Biology
Division of Public Health Sciences
Fred Hutchinson Cancer Research Center
1100 Fairview Ave. N, M1-B514
P.O. Box 19024
Seattle, WA 98109-1024

E-mail: hpages at fhcrc.org
Phone:  (206) 667-5791
Fax:    (206) 667-1319


From h.wickham at gmail.com  Fri May 30 21:08:45 2014
From: h.wickham at gmail.com (Hadley Wickham)
Date: Fri, 30 May 2014 14:08:45 -0500
Subject: [Rd] Style question
In-Reply-To: <5388D67C.7010807@fhcrc.org>
References: <CAOVYLHcgBqBmFMhSnx3hRELV4D9ijdHRoG=SmnRx8g=6f90F3A@mail.gmail.com>
	<538654A4.60402@fhcrc.org>
	<CABdHhvHP7VRmU6Z68EDieEPOsyqUkFRrkuG=ohO0f8V5J0tWUw@mail.gmail.com>
	<5388B803.8030506@fhcrc.org>
	<CABdHhvE41f+cpngPjvXtCpbDiy68zBK-Qq-rQXt7c4ueW9FF=Q@mail.gmail.com>
	<5388D67C.7010807@fhcrc.org>
Message-ID: <CABdHhvG1hvLxWR81Q+PbKkJv20=cx1Gbnhy+KfMyNYQ9AS7Kyw@mail.gmail.com>

> Finally, now that the use of a NAMESPACE became mandatory (well, this
> happened a few years ago), advocating systematic use of foo::whatever()
> without explicitly importing the function sounds a little bit like an
> heroic act of resistance ;-)

I don't think that's at all true - for most other programming
languages, the preferred style is to explicitly refer to functions,
including their namespace/package etc.

Hadley

-- 
http://had.co.nz/


From csardi.gabor at gmail.com  Fri May 30 21:17:55 2014
From: csardi.gabor at gmail.com (=?UTF-8?B?R8OhYm9yIENzw6FyZGk=?=)
Date: Fri, 30 May 2014 21:17:55 +0200
Subject: [Rd] Style question
In-Reply-To: <CABdHhvG1hvLxWR81Q+PbKkJv20=cx1Gbnhy+KfMyNYQ9AS7Kyw@mail.gmail.com>
References: <CAOVYLHcgBqBmFMhSnx3hRELV4D9ijdHRoG=SmnRx8g=6f90F3A@mail.gmail.com>
	<538654A4.60402@fhcrc.org>
	<CABdHhvHP7VRmU6Z68EDieEPOsyqUkFRrkuG=ohO0f8V5J0tWUw@mail.gmail.com>
	<5388B803.8030506@fhcrc.org>
	<CABdHhvE41f+cpngPjvXtCpbDiy68zBK-Qq-rQXt7c4ueW9FF=Q@mail.gmail.com>
	<5388D67C.7010807@fhcrc.org>
	<CABdHhvG1hvLxWR81Q+PbKkJv20=cx1Gbnhy+KfMyNYQ9AS7Kyw@mail.gmail.com>
Message-ID: <CABtg=K=jAOYDpzTu22GOXNjUhikX+6aMeznXmaohPAnwACvMcg@mail.gmail.com>

An embedded and charset-unspecified text was scrubbed...
Name: not available
URL: <https://stat.ethz.ch/pipermail/r-devel/attachments/20140530/29c63278/attachment.pl>

From csardi.gabor at gmail.com  Fri May 30 21:31:53 2014
From: csardi.gabor at gmail.com (=?UTF-8?B?R8OhYm9yIENzw6FyZGk=?=)
Date: Fri, 30 May 2014 21:31:53 +0200
Subject: [Rd] Style question
In-Reply-To: <CABtg=K=jAOYDpzTu22GOXNjUhikX+6aMeznXmaohPAnwACvMcg@mail.gmail.com>
References: <CAOVYLHcgBqBmFMhSnx3hRELV4D9ijdHRoG=SmnRx8g=6f90F3A@mail.gmail.com>
	<538654A4.60402@fhcrc.org>
	<CABdHhvHP7VRmU6Z68EDieEPOsyqUkFRrkuG=ohO0f8V5J0tWUw@mail.gmail.com>
	<5388B803.8030506@fhcrc.org>
	<CABdHhvE41f+cpngPjvXtCpbDiy68zBK-Qq-rQXt7c4ueW9FF=Q@mail.gmail.com>
	<5388D67C.7010807@fhcrc.org>
	<CABdHhvG1hvLxWR81Q+PbKkJv20=cx1Gbnhy+KfMyNYQ9AS7Kyw@mail.gmail.com>
	<CABtg=K=jAOYDpzTu22GOXNjUhikX+6aMeznXmaohPAnwACvMcg@mail.gmail.com>
Message-ID: <CABtg=Kk+einx071tBEP6aujsMBSqnuEZYzTn_igGcvvxbXgyDA@mail.gmail.com>

An embedded and charset-unspecified text was scrubbed...
Name: not available
URL: <https://stat.ethz.ch/pipermail/r-devel/attachments/20140530/cd5e5efa/attachment.pl>

From hpages at fhcrc.org  Fri May 30 21:53:57 2014
From: hpages at fhcrc.org (=?UTF-8?B?SGVydsOpIFBhZ8Oocw==?=)
Date: Fri, 30 May 2014 12:53:57 -0700
Subject: [Rd] Style question
In-Reply-To: <CADwqtCO1GRU+k6G+iYTzx1khZWKZTL0uxDwbezKX-ReHoi+DFA@mail.gmail.com>
References: <CAOVYLHcgBqBmFMhSnx3hRELV4D9ijdHRoG=SmnRx8g=6f90F3A@mail.gmail.com>	<538654A4.60402@fhcrc.org>	<CABdHhvHP7VRmU6Z68EDieEPOsyqUkFRrkuG=ohO0f8V5J0tWUw@mail.gmail.com>	<5388B803.8030506@fhcrc.org>	<CABdHhvE41f+cpngPjvXtCpbDiy68zBK-Qq-rQXt7c4ueW9FF=Q@mail.gmail.com>
	<CADwqtCO1GRU+k6G+iYTzx1khZWKZTL0uxDwbezKX-ReHoi+DFA@mail.gmail.com>
Message-ID: <5388E1D5.7030902@fhcrc.org>

Hi Gabe,

On 05/30/2014 11:34 AM, Gabriel Becker wrote:
> This isn't likely to make much difference in most cases, but calling a
> function via :: can incur up to about twice the overhead on average
> compared to calling an imported function
>
>  > fun1
> function ()
> file_ext("text.txt")
> <environment: namespace:imptest>
>  > fun2
> function ()
> tools::file_ext("text.txt")
> <environment: namespace:imptest>
>  > microbenchmark(fun1(), times=10000)
> Unit: microseconds
>     expr    min     lq median      uq     max neval
>   fun1() 24.506 25.654 26.324 27.8795 154.001 10000
>  > microbenchmark(fun2(), times=10000)
> Unit: microseconds
>     expr    min      lq  median      uq     max neval
>   fun2() 42.723 46.6945 48.8685 52.0595 2021.91 10000

Interesting. Or with a void function so the timing more closely
reflects the time it takes to look up the symbol:

   > void
   function ()
   NULL
   <environment: namespace:S4Vectors>

   > fun1
   function ()
   void()
   <environment: namespace:IRanges>

   > fun2
   function ()
   S4Vectors::void()
   <environment: namespace:IRanges>

   > microbenchmark(fun1(), times=10000)
   Unit: nanoseconds
      expr min  lq median  uq   max neval
    fun1() 261 268    270 301 11960 10000
   > microbenchmark(fun2(), times=10000)
   Unit: microseconds
      expr    min     lq median     uq      max neval
    fun2() 13.486 14.918 15.782 16.753 60542.19 10000

S4Vectors::void() is about 60x slower than void()!

Cheers,
H.

>
> Also, if one uses roxygen2 (or even if one doesn't) ##'@importFrom above
> the function doing the calling documents this.
>
> And of course if you need to know where a function lives environment
> will tell you.
>
> ~G
>
>
> On Fri, May 30, 2014 at 10:00 AM, Hadley Wickham <h.wickham at gmail.com
> <mailto:h.wickham at gmail.com>> wrote:
>
>      > There is at least one subtle consequence to keep in mind when doing
>      > this. Of course, whatever choice you make, if the whatever() function
>      > moves to a different package, this breaks your package.
>      > However, if you explicitly import the function, your package will
>      > break at load-time (which is good) and you'll only have to modify
>      > 1 line in the NAMESPACE file to fix it. But if you do
>     foo::whatever(),
>      > your package won't break at load-time, only at run-time. Also you'll
>      > have to edit all the calls to foo::whatever() to fix the package.
>      >
>      > Probably not a big deal, but in an environment like Bioconductor
>     where
>      > infrastructure classes and functions can be shared by hundreds of
>      > packages, having people use foo::whatever() in a systematic way would
>      > probably make maintenance a little bit more painful than it needs to
>      > be when the need arises to reorganize/refactor parts of the
>      > infrastructure. Also, the ability to quickly grep the NAMESPACE
>      > files of all BioC packages to see who imports what is very convenient
>      > in this situation.
>
>     OTOH, I think there's a big benefit to being able to read package code
>     and instantly know where a function comes from.
>
>     Personally, I found this outweighs the benefits that you outline:
>
>     * functions rarely move between packages, and gsubbing for pkga:foo to
>     pkgb:foo isn't hard
>     * it's not that much hard to grep for pkg::foo in R/* than it is to
>     grep NAMESPACE
>
>     Hadley
>
>     --
>     http://had.co.nz/
>
>     ______________________________________________
>     R-devel at r-project.org <mailto:R-devel at r-project.org> mailing list
>     https://stat.ethz.ch/mailman/listinfo/r-devel
>
>
>
>
> --
> Gabriel Becker
> Graduate Student
> Statistics Department
> University of California, Davis

-- 
Herv? Pag?s

Program in Computational Biology
Division of Public Health Sciences
Fred Hutchinson Cancer Research Center
1100 Fairview Ave. N, M1-B514
P.O. Box 19024
Seattle, WA 98109-1024

E-mail: hpages at fhcrc.org
Phone:  (206) 667-5791
Fax:    (206) 667-1319


From winstonchang1 at gmail.com  Fri May 30 23:40:05 2014
From: winstonchang1 at gmail.com (Winston Chang)
Date: Fri, 30 May 2014 16:40:05 -0500
Subject: [Rd] Style question
In-Reply-To: <5388E1D5.7030902@fhcrc.org>
References: <CAOVYLHcgBqBmFMhSnx3hRELV4D9ijdHRoG=SmnRx8g=6f90F3A@mail.gmail.com>
	<538654A4.60402@fhcrc.org>
	<CABdHhvHP7VRmU6Z68EDieEPOsyqUkFRrkuG=ohO0f8V5J0tWUw@mail.gmail.com>
	<5388B803.8030506@fhcrc.org>
	<CABdHhvE41f+cpngPjvXtCpbDiy68zBK-Qq-rQXt7c4ueW9FF=Q@mail.gmail.com>
	<CADwqtCO1GRU+k6G+iYTzx1khZWKZTL0uxDwbezKX-ReHoi+DFA@mail.gmail.com>
	<5388E1D5.7030902@fhcrc.org>
Message-ID: <CAFOpNVGe1xe+Uurh4AsYF6jZrePOn6iq8qyZEPSFJnygufc_pg@mail.gmail.com>

Using `::` does add some overhead - on the order of 5-10 microseconds
on my computer. Still, it would take 100,000 calls to add 0.5-1 second
of delay.

microbenchmark(
  base::identity(1),
  identity(1),
  unit = "us"
)
# Unit: microseconds
#               expr   min     lq median     uq    max neval
#  base::identity(1) 5.677 6.2180 6.6695 7.3655 60.104   100
#        identity(1) 0.262 0.2965 0.3210 0.4035  1.034   100

This test isn't exactly like putting identity in imports, since in
this case, the number environments to search is greater -- but it's
reasonably close.

If you're in a situation where you want to be explicit about where a
function came from, but the slowness of `::` is an issue, you could
create a variable that points to the environment and access the
function using $:

base <- as.environment('package:base')
microbenchmark(
  base::identity(1),
  base$identity(1),
  identity(1),
  unit = "us"
)
# Unit: microseconds
#               expr   min     lq median     uq    max neval
#  base::identity(1) 5.520 6.0795 6.4485 7.0020 32.232   100
#   base$identity(1) 0.504 0.5940 0.6635 0.8105  7.701   100
#        identity(1) 0.248 0.2815 0.3100 0.3885  7.925   100


-Winston

On Fri, May 30, 2014 at 2:53 PM, Herv? Pag?s <hpages at fhcrc.org> wrote:
> Hi Gabe,
>
>
> On 05/30/2014 11:34 AM, Gabriel Becker wrote:
>>
>> This isn't likely to make much difference in most cases, but calling a
>> function via :: can incur up to about twice the overhead on average
>> compared to calling an imported function
>>
>>  > fun1
>> function ()
>> file_ext("text.txt")
>> <environment: namespace:imptest>
>>  > fun2
>> function ()
>> tools::file_ext("text.txt")
>> <environment: namespace:imptest>
>>  > microbenchmark(fun1(), times=10000)
>> Unit: microseconds
>>     expr    min     lq median      uq     max neval
>>   fun1() 24.506 25.654 26.324 27.8795 154.001 10000
>>  > microbenchmark(fun2(), times=10000)
>> Unit: microseconds
>>     expr    min      lq  median      uq     max neval
>>   fun2() 42.723 46.6945 48.8685 52.0595 2021.91 10000
>
>
> Interesting. Or with a void function so the timing more closely
> reflects the time it takes to look up the symbol:
>
>   > void
>   function ()
>   NULL
>   <environment: namespace:S4Vectors>
>
>   > fun1
>   function ()
>   void()
>   <environment: namespace:IRanges>
>
>   > fun2
>   function ()
>   S4Vectors::void()
>   <environment: namespace:IRanges>
>
>   > microbenchmark(fun1(), times=10000)
>   Unit: nanoseconds
>
>      expr min  lq median  uq   max neval
>    fun1() 261 268    270 301 11960 10000
>
>   > microbenchmark(fun2(), times=10000)
>   Unit: microseconds
>      expr    min     lq median     uq      max neval
>    fun2() 13.486 14.918 15.782 16.753 60542.19 10000
>
> S4Vectors::void() is about 60x slower than void()!
>
> Cheers,
> H.
>
>>
>> Also, if one uses roxygen2 (or even if one doesn't) ##'@importFrom above
>> the function doing the calling documents this.
>>
>> And of course if you need to know where a function lives environment
>> will tell you.
>>
>> ~G
>>
>>
>> On Fri, May 30, 2014 at 10:00 AM, Hadley Wickham <h.wickham at gmail.com
>> <mailto:h.wickham at gmail.com>> wrote:
>>
>>      > There is at least one subtle consequence to keep in mind when doing
>>      > this. Of course, whatever choice you make, if the whatever()
>> function
>>      > moves to a different package, this breaks your package.
>>      > However, if you explicitly import the function, your package will
>>      > break at load-time (which is good) and you'll only have to modify
>>      > 1 line in the NAMESPACE file to fix it. But if you do
>>     foo::whatever(),
>>      > your package won't break at load-time, only at run-time. Also
>> you'll
>>      > have to edit all the calls to foo::whatever() to fix the package.
>>      >
>>      > Probably not a big deal, but in an environment like Bioconductor
>>     where
>>      > infrastructure classes and functions can be shared by hundreds of
>>      > packages, having people use foo::whatever() in a systematic way
>> would
>>      > probably make maintenance a little bit more painful than it needs
>> to
>>      > be when the need arises to reorganize/refactor parts of the
>>      > infrastructure. Also, the ability to quickly grep the NAMESPACE
>>      > files of all BioC packages to see who imports what is very
>> convenient
>>      > in this situation.
>>
>>     OTOH, I think there's a big benefit to being able to read package code
>>     and instantly know where a function comes from.
>>
>>     Personally, I found this outweighs the benefits that you outline:
>>
>>     * functions rarely move between packages, and gsubbing for pkga:foo to
>>     pkgb:foo isn't hard
>>     * it's not that much hard to grep for pkg::foo in R/* than it is to
>>     grep NAMESPACE
>>
>>     Hadley
>>
>>     --
>>     http://had.co.nz/
>>
>>     ______________________________________________
>>     R-devel at r-project.org <mailto:R-devel at r-project.org> mailing list
>>
>>     https://stat.ethz.ch/mailman/listinfo/r-devel
>>
>>
>>
>>
>> --
>> Gabriel Becker
>> Graduate Student
>> Statistics Department
>> University of California, Davis
>
>
> --
> Herv? Pag?s
>
> Program in Computational Biology
> Division of Public Health Sciences
> Fred Hutchinson Cancer Research Center
> 1100 Fairview Ave. N, M1-B514
> P.O. Box 19024
> Seattle, WA 98109-1024
>
> E-mail: hpages at fhcrc.org
> Phone:  (206) 667-5791
> Fax:    (206) 667-1319
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From xie at yihui.name  Sat May 31 06:22:03 2014
From: xie at yihui.name (Yihui Xie)
Date: Fri, 30 May 2014 23:22:03 -0500
Subject: [Rd] R CMD check for the R code from vignettes
In-Reply-To: <538885F3.8020807@gmail.com>
References: <CANROs4dyoXEUEzouGTsL9sHCMM8RcjYWw9584SUAEYfGntPrFg@mail.gmail.com>
	<538885F3.8020807@gmail.com>
Message-ID: <CANROs4eect+qAvXTLEzPhM=X2Eg5R0T-DCUBO6=VDfBFVJNCuQ@mail.gmail.com>

Hi Kevin,

Personally I also avoid code that have side effects in the inline
expressions, but I think there are legitimate use cases in which
inline expressions have side effects. This discussion was motivated by
Carl's knitcitations package, as well as another question on
StackOverflow (http://stackoverflow.com/q/23927325/559676).

I'm aware of the distinction between the original literate programming
paradigm and the one in R (that is why I said "literate programming in
R" instead of "literate programming in general"). In R, weave actually
does what both weave and tangle do in the original paradigm -- there
is no need to tangle the document to get the computer code so that we
can execute it.

To Carl: I agree that it is a little extreme to drop tangle entirely,
so I think at least knitr::purl() will stay there in the foreseeable
future. I tend to adopt Henrik's idea, i.e., to provide vignette
engines that just ignore tangle. At the moment, it seems R CMD check
is comfortable with vignettes that do not have corresponding R
scripts, and I hope these R scripts will not become mandatory in the
future.

Thanks everyone for your comments!

Regards,
Yihui
--
Yihui Xie <xieyihui at gmail.com>
Web: http://yihui.name


On Fri, May 30, 2014 at 8:21 AM, Kevin Coombes
<kevin.r.coombes at gmail.com> wrote:
> Hi,
>
> Unless someone is planning to change Stangle to include inline expressions
> (which I am *not* advocating), I think that relying on side-effects within
> an \Sexpr construction is a bad idea. So, my own coding style is to restrict
> my use of \Sexpr to calls of the form
> \Sexpr{show.the.value.of.this.variable}. As a result, I more-or-less believe
> that having R CMD check use Stangle and report an error is probably a good
> thing.
>
> There is a completely separate questions about the relationship between
> Sweave/Stangle or knit/purl and literate programming that is linked to your
> question about whether to use Stangle on vignettes. The underlying model(s)
> in R have drifted away from Knuth's original conception, for some good
> reasons.
>
> The original goal of literate programming was to be able to explain the
> algorithms and data structures in the code to humans.  For that purpose, it
> was important to have named code chunks that you could move around, which
> would allow you to describe the algorithm starting from a high level
> overview and then drilling down into the details. From this perspective,
> "tangle" was critical to being able to reconstruct a program that would
> compile and run correctly.
>
> The vast majority of applications of Sweave/Stangle or knit/purl in modern R
> have a completely different goal: to produce some sort of document that
> describes the results of an analysis to a non-programmer or
> non-statistician.  For this goal, "weave" is much more important than
> "tangle", because the most important aspect is the ability to integrate the
> results (figures, tables, etc) of running the code into the document that
> get passed off to the person for whom the analysis was prepared. As a
> result, the number of times in my daily work that I need to explicitly
> invoke Stangle (or purl) explicitly is many orders of magnitude smaller than
> the number of times that I invoke Sweave (or knitr).
>
>   -- Kevin
>
>
>
> On 5/30/2014 1:04 AM, Yihui Xie wrote:
>>
>> Hi,
>>
>> Recently I saw a couple of cases in which the package vignettes were
>> somewhat complicated so that Stangle() (or knitr::purl() or other
>> tangling functions) can fail to produce the exact R code that is
>> executed by the weaving function Sweave() (or knitr::knit(), ...). For
>> example, this is a valid document that can pass the weaving process
>> but cannot generate a valid R script to be source()d:
>>
>> \documentclass{article}
>> \begin{document}
>> Assign 1 to x: \Sexpr{x <- 1}
>> <<>>=
>> x + 1
>> @
>> \end{document}
>>
>> That is because the inline R code is not written to the R script
>> during the tangling process. When an R package vignette contains
>> inline R code expressions that have significant side effects, R CMD
>> check can fail because the tangled output is not correct. What I
>> showed here is only a trivial example, and I have seen two packages
>> that have more complicated scenarios than this. Anyway, the key thing
>> that I want to discuss here is, since the R code in the vignette has
>> been executed once during the weaving process, does it make much sense
>> to execute the code generated from the tangle function? In other
>> words, if the weaving process has succeeded, is it necessary to
>> source() the R script again?
>>
>> The two options here are:
>>
>> 1. Do not check the R code from vignettes;
>> 2. Or fix the tangle function so that it produces exactly what was
>> executed in the weaving process. If this is done, I'm back to my
>> previous question: does it make sense to run the code twice?
>>
>> To push this a little further, personally I do not quite appreciate
>> literate programming in R as two separate steps, namely weave and
>> tangle. In particular, I do not see the value of tangle, considering
>> Sweave() (or knitr::knit()) as the new "source()". Therefore
>> eventually I tend to just drop tangle, but perhaps I missed something
>> here, and I'd like to hear what other people think about it.
>>
>> Regards,
>> Yihui
>> --
>> Yihui Xie <xieyihui at gmail.com>
>> Web: http://yihui.name


From bbolker at gmail.com  Sat May 31 21:47:48 2014
From: bbolker at gmail.com (Ben Bolker)
Date: Sat, 31 May 2014 19:47:48 +0000
Subject: [Rd] A bug in princomp(), perhaps?
References: <2F9EA67EF9AE1C48A147CB41BE2E15C30E2D6CDC@DOM-EB-MAIL2.win.ad.jhu.edu>
	<5213E16E-54FC-46D2-A92E-BC2D44A338BD@gmail.com>
	<2F9EA67EF9AE1C48A147CB41BE2E15C30E2D7237@DOM-EB-MAIL2.win.ad.jhu.edu>
	<CAAHES9zWN3c4pdK8XcKLuKbq4kNV3Ohs6NCb0yo9dGM0+3sP4w@mail.gmail.com>
	<2F9EA67EF9AE1C48A147CB41BE2E15C30E2D734D@DOM-EB-MAIL2.win.ad.jhu.edu>
	<CAAHES9xiwaSv3FQ1HYY3NPfCsdqGN+fvqDzvp6vxtArERXA4Jw@mail.gmail.com>
Message-ID: <loom.20140531T202439-171@post.gmane.org>

> 

FWIW this seems to be a FAQ:


https://stat.ethz.ch/pipermail/r-devel/2003-July/027018.html

http://thr3ads.net/r-devel/2013/01/
   2171832-Re-na.omit-option-in-prcomp-formula-interface-only

http://r.789695.n4.nabble.com/
  na-omit-option-in-prcomp-formula-interface-only-td4373533.html

And two StackOverflow questions (the latter's a bit tangential):

http://stackoverflow.com/questions/12078291/
   r-function-prcomp-fails-with-nas-values-even-though-nas-are-allowed

http://stackoverflow.com/questions/23421438/what-was-wrong-with-running-princomp-in-r/23446938#23446938

  (Sorry for broken URLs and random assortment of mailing list
aggregators.)

  I appreciate Gavin's points that implementing this stuff for
princomp.default is difficult/problematic, but I second Ravi's
request for a little  more clarification in the help  text; it's
quite easy to miss the fact that 'na.action' is defined for
princomp.formula but not for princomp.default.  Perhaps just
"Note that setting na.action works for princomp.formula, but
not for princomp.default" (under the "na.action" argument description).

Gavin Simpson <ucfagls <at> gmail.com> writes:



> > On 30 May 2014 06:33, Ravi Varadhan <ravi.varadhan <at> jhu.edu> wrote:
> >
> > Thank you, Peter.  Now I see that.
> >
> > I still think the documentation of `na.action' 
> > can be made more explicit
> > to state that this option is only used for princomp.formula.
> >
> > Best regards,
> > Ravi
> >
> >
> > -----Original Message-----
> > From: peter dalgaard [mailto:pdalgd <at> gmail.com]
> > Sent: Friday, May 30, 2014 5:15 AM
> > To: Ravi Varadhan
> > Cc: r-devel <at> r-project.org
> > Subject: Re: [Rd] A bug in princomp(), perhaps?
> >
> > It's only documented to work for princomp.formula; 
> > other methods do not
> > know about na.action.
> >
> > -pd
> >


From gmbecker at ucdavis.edu  Sat May 31 23:54:20 2014
From: gmbecker at ucdavis.edu (Gabriel Becker)
Date: Sat, 31 May 2014 14:54:20 -0700
Subject: [Rd] R CMD check for the R code from vignettes
In-Reply-To: <CANROs4eect+qAvXTLEzPhM=X2Eg5R0T-DCUBO6=VDfBFVJNCuQ@mail.gmail.com>
References: <CANROs4dyoXEUEzouGTsL9sHCMM8RcjYWw9584SUAEYfGntPrFg@mail.gmail.com>
	<538885F3.8020807@gmail.com>
	<CANROs4eect+qAvXTLEzPhM=X2Eg5R0T-DCUBO6=VDfBFVJNCuQ@mail.gmail.com>
Message-ID: <CADwqtCN2XixFy0H43BeFMU7R_p+sQCaOHBU5W6tXn7Ng7pP1pA@mail.gmail.com>

An embedded and charset-unspecified text was scrubbed...
Name: not available
URL: <https://stat.ethz.ch/pipermail/r-devel/attachments/20140531/2be40605/attachment.pl>

