From tom@@@k@||ber@ @end|ng |rom gm@||@com  Thu Aug  1 12:49:57 2024
From: tom@@@k@||ber@ @end|ng |rom gm@||@com (Tomas Kalibera)
Date: Thu, 1 Aug 2024 12:49:57 +0200
Subject: [Rd] Question about regexp edge case
In-Reply-To: <20240729103757.11201601@Tarkus>
References: <497933d4-d8f5-4242-99aa-3c335d694ebd@gmail.com>
 <20240729103757.11201601@Tarkus>
Message-ID: <48ccdd83-47b0-4f06-b652-3e1e91117abf@gmail.com>


On 7/29/24 09:37, Ivan Krylov via R-devel wrote:
> ? Sun, 28 Jul 2024 20:02:21 -0400
> Duncan Murdoch <murdoch.duncan at gmail.com> ?????:
>
>> gsub("^([0-9]{,5}).*","\\1","123456789")
>> [1] "123456"
> This is in TRE itself: for "^([0-9]{,1})" tre_regexecb returns {.rm_so
> = 0, .rm_eo = 1}, matching "1", but for "^([0-9]{,2})" and above it
> returns an off-by-one result, {.rm_so = 0, .rm_eo = 3}.
>
> Compiling with TRE_DEBUG, I see it parsed correctly:
>
> catenation, sub 0, 0 tags
>    assertions: bol
>    iteration {-1, 2}, sub -1, 0 tags, greedy
>      literal (0, 9) (48, 57), pos 0, sub -1, 0 tags
>
> ...but after tre_expand_ast I see
>
> catenation, sub 0, 1 tags
>    assertions: bol
>    catenation, sub -1, 1 tags
>      tag 0
>      union, sub -1, 0 tags
>        literal empty
>        catenation, sub -1, 0 tags
>          literal (0, 9) (48, 57), pos 2, sub -1, 0 tags
>          union, sub -1, 0 tags
>            literal empty
>            catenation, sub -1, 0 tags
>              literal (0, 9) (48, 57), pos 1, sub -1, 0 tags
>              union, sub -1, 0 tags
>                literal empty
>                literal (0, 9) (48, 57), pos 0, sub -1, 0 tags
>
> ...which has one too many copies of "literal (0,9)". I think it's due
> to the expansion loop on line 942 of src/extra/tre/tre-compile.c being
>
> for (j = iter->min; j < iter->max; j++)
>
> ...where 'min' is -1 to denote no minimum. This is further confirmed by
> "{0,3}", "{1,3}", "{2,3}", "{3,3}" all working correctly.
>
> Neither TRE documentation [1] nor POSIX [2] specify the {,n} syntax:
> from my reading, it looks like if the upper boundary is specified, the
> lower boundary must be specified too. But if we do want to fix this, it
> will have to be a special case for iter->min == -1.

Thanks. It seems that TRE is now maintained again upstream, so it would 
be best to discuss this with TRE maintainers directly (if not already 
solved by https://github.com/laurikari/tre/pull/98).

The same applies to any other open TRE issues.

Best Tomas


From murdoch@dunc@n @end|ng |rom gm@||@com  Thu Aug  1 20:55:36 2024
From: murdoch@dunc@n @end|ng |rom gm@||@com (Duncan Murdoch)
Date: Thu, 1 Aug 2024 14:55:36 -0400
Subject: [Rd] Question about regexp edge case
In-Reply-To: <48ccdd83-47b0-4f06-b652-3e1e91117abf@gmail.com>
References: <497933d4-d8f5-4242-99aa-3c335d694ebd@gmail.com>
 <20240729103757.11201601@Tarkus>
 <48ccdd83-47b0-4f06-b652-3e1e91117abf@gmail.com>
Message-ID: <8cfbc0a2-661a-40db-91e4-84af793c52e1@gmail.com>

Thanks Tomas.  Do note that my original post also mentioned a bug or doc 
error in the PCRE docs for this regexp:

>   - perl = TRUE does *not* give the documented result on at least one 
> system (which is "123456789", because "{,5}" is documented to not be a 
> quantifier, so it should only match the literal string "{,5}").

Duncan

On 2024-08-01 6:49 a.m., Tomas Kalibera wrote:
> 
> On 7/29/24 09:37, Ivan Krylov via R-devel wrote:
>> ? Sun, 28 Jul 2024 20:02:21 -0400
>> Duncan Murdoch <murdoch.duncan at gmail.com> ?????:
>>
>>> gsub("^([0-9]{,5}).*","\\1","123456789")
>>> [1] "123456"
>> This is in TRE itself: for "^([0-9]{,1})" tre_regexecb returns {.rm_so
>> = 0, .rm_eo = 1}, matching "1", but for "^([0-9]{,2})" and above it
>> returns an off-by-one result, {.rm_so = 0, .rm_eo = 3}.
>>
>> Compiling with TRE_DEBUG, I see it parsed correctly:
>>
>> catenation, sub 0, 0 tags
>>     assertions: bol
>>     iteration {-1, 2}, sub -1, 0 tags, greedy
>>       literal (0, 9) (48, 57), pos 0, sub -1, 0 tags
>>
>> ...but after tre_expand_ast I see
>>
>> catenation, sub 0, 1 tags
>>     assertions: bol
>>     catenation, sub -1, 1 tags
>>       tag 0
>>       union, sub -1, 0 tags
>>         literal empty
>>         catenation, sub -1, 0 tags
>>           literal (0, 9) (48, 57), pos 2, sub -1, 0 tags
>>           union, sub -1, 0 tags
>>             literal empty
>>             catenation, sub -1, 0 tags
>>               literal (0, 9) (48, 57), pos 1, sub -1, 0 tags
>>               union, sub -1, 0 tags
>>                 literal empty
>>                 literal (0, 9) (48, 57), pos 0, sub -1, 0 tags
>>
>> ...which has one too many copies of "literal (0,9)". I think it's due
>> to the expansion loop on line 942 of src/extra/tre/tre-compile.c being
>>
>> for (j = iter->min; j < iter->max; j++)
>>
>> ...where 'min' is -1 to denote no minimum. This is further confirmed by
>> "{0,3}", "{1,3}", "{2,3}", "{3,3}" all working correctly.
>>
>> Neither TRE documentation [1] nor POSIX [2] specify the {,n} syntax:
>> from my reading, it looks like if the upper boundary is specified, the
>> lower boundary must be specified too. But if we do want to fix this, it
>> will have to be a special case for iter->min == -1.
> 
> Thanks. It seems that TRE is now maintained again upstream, so it would
> be best to discuss this with TRE maintainers directly (if not already
> solved by https://github.com/laurikari/tre/pull/98).
> 
> The same applies to any other open TRE issues.
> 
> Best Tomas
>


From pd@|gd @end|ng |rom gm@||@com  Fri Aug  2 12:21:20 2024
From: pd@|gd @end|ng |rom gm@||@com (peter dalgaard)
Date: Fri, 2 Aug 2024 12:21:20 +0200
Subject: [Rd] R-patched on CRAN is R-4.3.3
In-Reply-To: <f50fcfef-86df-4ca8-9d83-20d472ed8aaf@gmail.com>
References: <CA+hbrhWeSLh+RhrC5FgRhbG396SNrCVbdsY0CfL4Ut387t896Q@mail.gmail.com>
 <f50fcfef-86df-4ca8-9d83-20d472ed8aaf@gmail.com>
Message-ID: <E09E33E1-D146-41FB-B7DF-6B9C96E631B1@gmail.com>

Apologies for not seeing this until now. The files on CRAN https://cran.r-project.org/src/base-prerelease/ contain R-patched versions that should be up to date. The Zurich R-patched seems to be 4.4.1 patched too now. 

The text in R-admin is a bit out of date (it predates nightly builds of tarballs on the machine that does the final releases), and so is the text on CRAN. We might change them to point to the CRAN directory as the primary source.

(Martin: Are there changes in the situation at Zurich that are relevant to this?) 

- Peter D.

> On 15 Jul 2024, at 09:56 , Tomas Kalibera <tomas.kalibera at gmail.com> wrote:
> 
> 
> On 7/15/24 07:08, Peter Langfelder wrote:
>> Hi all,
>> 
>> apologies if I missed something here. Just downloaded and compiled
>> R-patched from https://stat.ethz.ch/R/daily/ but it reports as R-4.3.3
>> (2024-04-09 r86895) -- "Angel Food Cake". The last dated R-patched is
>> from 2024-04-09, about 3 months old. Are R-patched not updated
>> anymore, am I looking at a wrong directory or even a wrong server? The
>> current R Installation and Administration manual
>> (https://cran.r-project.org/doc/manuals/r-patched/R-admin.html#Getting-patched-and-development-versions)
>> suggests that the current R-patched should be where I looked for it:
>> 
>> A patched version of the current release, ?r-patched?, and the current
>> development version, ?r-devel?, are available as daily tarballs and
>> via access to the R Subversion repository. (For the two weeks prior to
>> the release of a minor (4.x.0) version, ?r-patched? tarballs may refer
>> to beta/release candidates of the upcoming release, the patched
>> version of the current release being available via Subversion.)
>> 
>> The tarballs are available from https://stat.ethz.ch/R/daily/.
>> Download R-patched.tar.gz or R-devel.tar.gz (or the .tar.bz2 versions)
>> and unpack as described in the previous section. They are built in
>> exactly the same way as distributions of R releases.
> 
> Before this gets resolved, you can get the latest version of R-patched from svn:
> 
> https://svn.r-project.org/R/branches/R-4-4-branch
> 
> (and the current R release from https://cran.r-project.org/src/base/R-4/R-4.4.1.tar.gz)
> 
> Tomas
> 
>> 
>> Thanks,
>> 
>> Peter
>> 
>> ______________________________________________
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel

-- 
Peter Dalgaard, Professor,
Center for Statistics, Copenhagen Business School
Solbjerg Plads 3, 2000 Frederiksberg, Denmark
Phone: (+45)38153501
Office: A 4.23
Email: pd.mes at cbs.dk  Priv: PDalgd at gmail.com


