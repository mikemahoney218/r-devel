From maechler at stat.math.ethz.ch  Mon Feb  1 10:16:53 2016
From: maechler at stat.math.ethz.ch (Martin Maechler)
Date: Mon, 1 Feb 2016 10:16:53 +0100
Subject: [Rd] Wrong config check for __libc_stack_end
In-Reply-To: <CAJDAfTAC1U92DXWvxkx7U9ORtJXtY+_e8i3MT85B3o6MsaEkKA@mail.gmail.com>
References: <CAJDAfTBZ5FNAsPuoRyk6CLEOPKG-JpY4OoQ3On-brcHS6UnafA@mail.gmail.com>
	<CAJDAfTAC1U92DXWvxkx7U9ORtJXtY+_e8i3MT85B3o6MsaEkKA@mail.gmail.com>
Message-ID: <22191.8837.813670.863210@stat.math.ethz.ch>

>>>>> Alba Pompeo <albapompeo at gmail.com>
>>>>>     on Fri, 29 Jan 2016 08:23:26 -0200 writes:

    > Here is my log from 'make check' using an Intel i5 64-bit
    > processor - http://pastebin.com/raw/N6SYAuFX Here is
    > Isaac's log from 'make check' using an Intel Atom 32-bit
    > processor - http://pastebin.com/raw/sey6DEk9

    > We are both on Alpine Linux, which uses the musl
    > libc. http://www.musl-libc.org/

    > Thank you very much.

It probably would have helped to choose a different subject
which I now do.

    > On Thu, Jan 28, 2016 at 9:54 AM, Alba Pompeo
    > <albapompeo at gmail.com> wrote:
    >> Hello, developers of R.
    >> 
    >> I have been unsuccessfully trying to build R on a musl
    >> libc system for the last days.  ./configure works, but
    >> make fails. The command that errors out is here -
    >> http://pastebin.com/raw/UwFRsiqT
    >> 
    >> It was brought to my attention that this is a (very
    >> longstanding) abuse of a private glibc symbol in R.
    >> 
    >> In R 3.2.3, it seems that configure is trying to test for
    >> it on Linux.  It apparently fails to accurately test (as
    >> demonstrated by the link error), perhaps because the test
    >> program does not actually *use* __libc_stack_end so it
    >> gets optimized out. (See line 35500 or so in
    >> R-3.2.3/configure.)  Ideally, the test program would
    >> check that a pointer to __libc_stack_end is non-null, but
    >> that's an autoconf bug.

So, ideally someone who knows autoconf much better than I do
should submit a bug report to the autoconf maintainers.

Back to R: I'm not familiar with that part of the code, neither
the configuration, nor the usage (in  R/src/unix/system.c ).
However, that code seems to be using a a glibc "feature" widely
available which does help making R startup (a very tiny bit ??)
faster.

    >> A work around was to 'export r_cv_libc_stack_end=no'
    >> before configuring R.  

which *does* solve that problem, right?

    >> However, there are a couple little issues with non-ASCII
    >> text and a *lot* of math differences, many of which say
    >> "*no* convergence: NOTIFY R-core!".

Hmm, I may be off, but these would look like entirely unrelated
with the libc_stack_end availibility, wouldn't they ?

Maybe you / the musl developers should try to make those C
libraries more "standard", notably because I would see math
differences as something pretty grave for R, and indeed, I would
not want to use a platform where R's math functions work
incompatibly with all other platforms ... but maybe I
misunderstand completely.

Hmm... I've found this,

http://wiki.musl-libc.org/wiki/Functional_differences_from_glibc#Floating-point_and_mathematical_library

which make what you say above more relevant/interesting.

Still, from this thread I get that the C source code of R needs
considerable configuration patches before R can work with musl.
But that needs another thread, something like  'Building R with musl'.

    >> Until these are resolved, R can't be packaged for
    >> distributions that use musl, such as Alpine Linux.

which I agree would not be ideal.
Martin

--
Martin <Maechler at stat.math.ethz.ch>  http://stat.ethz.ch/people/maechler
Seminar f?r Statistik, ETH Z?rich


From maechler at stat.math.ethz.ch  Mon Feb  1 10:26:06 2016
From: maechler at stat.math.ethz.ch (Martin Maechler)
Date: Mon, 1 Feb 2016 10:26:06 +0100
Subject: [Rd] Best way for rgl's .onLoad to fail?
In-Reply-To: <8D38DD51-6E89-410C-AA46-107BB4762B91@depauw.edu>
References: <56AD26EF.5000107@gmail.com>
	<8D38DD51-6E89-410C-AA46-107BB4762B91@depauw.edu>
Message-ID: <22191.9390.120204.712356@stat.math.ethz.ch>

>>>>> "BH" == Bryan Hanson <hanson at depauw.edu>
>>>>>     on Sun, 31 Jan 2016 09:50:46 -0500 writes:

    BH> I think the 2nd option will be more palatable to
    BH> inexperienced users, but both do state the important
    BH> detail.  Bryan

    >> On Jan 30, 2016, at 4:11 PM, Duncan Murdoch <murdoch.duncan at gmail.com> wrote:
    >> 
    >> On OSX and Linux, the rgl package currently requires X11
    >> libs to be available for linking.  Recent versions of OSX
    >> don't include them by default, so I'd like rgl to fail
    >> nicely.
    >> 
    >> Ideally, it will load a library that doesn't need to link
    >> to the X11 libs but will still allow WebGL code to work,
    >> but that's complicated, so I'd like a stopgap.
    >> 
    >> I can detect that the failure is about to happen, and
    >> call stop() in the .onLoad hook, but that gives an ugly
    >> message:
    >> 
    >> > library(rgl)
    >> Error : .onLoad failed in loadNamespace() for 'rgl', details:
    >> call: NULL
    >> error: X11 not found; XQuartz (from www.xquartz.org) is required to run rgl.
    >> Error: package or namespace load failed for ?rgl?

I agree that the error message is a bit messy or even ugly,
however, other than Bryan, I would want  library(.)  to signal
an error when it cannot provide a working package, loaded and
attached to search().

Other functions, such as  require(.)  do rely on this behavior of library(.),
e.g., the much used idiom
  
  if(require(<some package>)) {
      ....
      ....
      ....
  }

needs library() to signal an error on  non-success.

Martin

    >> Alternatively, I can just give a warning and not attempt to load the rgl lib:
    >> 
    >> > library(rgl)
    >> Warning message:
    >> X11 not found; XQuartz (from www.xquartz.org) is required to run rgl.
    >> 
    >> rgl is now loaded, but it doesn't work; just about any function call will give an error, e.g.
    >> 
    >> > plot3d(1,2,3)
    >> Error in rgl.cur() : object 'rgl_dev_getcurrent' not found
    >> 
    >> Do people have opinions about this?
    >> 
    >> One comparable package is RGtk2:  if Gtk2 isn't install, it offers to install it.  I could probably do that for XQuartz.  If the user says no, RGtk2 gives really ugly error messages.  rgl can work without XQuartz, but as I already mentioned, making this work is complicated, so I'd like something simple for now.
    >> 
    >> Duncan Murdoch
    >> 
    >> ______________________________________________
    >> R-devel at r-project.org mailing list
    >> https://stat.ethz.ch/mailman/listinfo/r-devel

    > ______________________________________________
    > R-devel at r-project.org mailing list
    > https://stat.ethz.ch/mailman/listinfo/r-devel


From murdoch.duncan at gmail.com  Mon Feb  1 10:44:59 2016
From: murdoch.duncan at gmail.com (Duncan Murdoch)
Date: Mon, 1 Feb 2016 04:44:59 -0500
Subject: [Rd] Best way for rgl's .onLoad to fail?
In-Reply-To: <22191.9390.120204.712356@stat.math.ethz.ch>
References: <56AD26EF.5000107@gmail.com>
	<8D38DD51-6E89-410C-AA46-107BB4762B91@depauw.edu>
	<22191.9390.120204.712356@stat.math.ethz.ch>
Message-ID: <56AF291B.6050607@gmail.com>

On 01/02/2016 4:26 AM, Martin Maechler wrote:
>>>>>> "BH" == Bryan Hanson <hanson at depauw.edu>
>>>>>>      on Sun, 31 Jan 2016 09:50:46 -0500 writes:
>
>      BH> I think the 2nd option will be more palatable to
>      BH> inexperienced users, but both do state the important
>      BH> detail.  Bryan
>
>      >> On Jan 30, 2016, at 4:11 PM, Duncan Murdoch <murdoch.duncan at gmail.com> wrote:
>      >>
>      >> On OSX and Linux, the rgl package currently requires X11
>      >> libs to be available for linking.  Recent versions of OSX
>      >> don't include them by default, so I'd like rgl to fail
>      >> nicely.
>      >>
>      >> Ideally, it will load a library that doesn't need to link
>      >> to the X11 libs but will still allow WebGL code to work,
>      >> but that's complicated, so I'd like a stopgap.
>      >>
>      >> I can detect that the failure is about to happen, and
>      >> call stop() in the .onLoad hook, but that gives an ugly
>      >> message:
>      >>
>      >> > library(rgl)
>      >> Error : .onLoad failed in loadNamespace() for 'rgl', details:
>      >> call: NULL
>      >> error: X11 not found; XQuartz (from www.xquartz.org) is required to run rgl.
>      >> Error: package or namespace load failed for ?rgl?
>
> I agree that the error message is a bit messy or even ugly,
> however, other than Bryan, I would want  library(.)  to signal
> an error when it cannot provide a working package, loaded and
> attached to search().
>
> Other functions, such as  require(.)  do rely on this behavior of library(.),
> e.g., the much used idiom
>
>    if(require(<some package>)) {
>        ....
>        ....
>        ....
>    }
>
> needs library() to signal an error on  non-success.

Yes, that's a good point.  That's what the version on R-forge currently 
does.

Duncan Murdoch

>
> Martin
>
>      >> Alternatively, I can just give a warning and not attempt to load the rgl lib:
>      >>
>      >> > library(rgl)
>      >> Warning message:
>      >> X11 not found; XQuartz (from www.xquartz.org) is required to run rgl.
>      >>
>      >> rgl is now loaded, but it doesn't work; just about any function call will give an error, e.g.
>      >>
>      >> > plot3d(1,2,3)
>      >> Error in rgl.cur() : object 'rgl_dev_getcurrent' not found
>      >>
>      >> Do people have opinions about this?
>      >>
>      >> One comparable package is RGtk2:  if Gtk2 isn't install, it offers to install it.  I could probably do that for XQuartz.  If the user says no, RGtk2 gives really ugly error messages.  rgl can work without XQuartz, but as I already mentioned, making this work is complicated, so I'd like something simple for now.
>      >>
>      >> Duncan Murdoch
>      >>
>      >> ______________________________________________
>      >> R-devel at r-project.org mailing list
>      >> https://stat.ethz.ch/mailman/listinfo/r-devel
>
>      > ______________________________________________
>      > R-devel at r-project.org mailing list
>      > https://stat.ethz.ch/mailman/listinfo/r-devel
>


From maechler at stat.math.ethz.ch  Mon Feb  1 11:55:41 2016
From: maechler at stat.math.ethz.ch (Martin Maechler)
Date: Mon, 1 Feb 2016 11:55:41 +0100
Subject: [Rd] In plot.ts,
 las=1 applies to ylab with multiple series and not to axis labels
In-Reply-To: <56AD2C6C.8090804@prodsyse.com>
References: <56AD2C6C.8090804@prodsyse.com>
Message-ID: <22191.14765.67073.41290@stat.math.ethz.ch>

>>>>> Spencer Graves <spencer.graves at prodsyse.com>
>>>>>     on Sat, 30 Jan 2016 15:34:36 -0600 writes:

    > Hello:
    > In plot.ts, las=1 applies to ylab and not axis labels with 
    > multiple series.  The documented behavior is to have las=1 apply to axis 
    > labels and not ylab.

    > To see this, please try the following:

    > plot.ts(1:4, las=1)

    > plot.ts(matrix(1:8, 4), las=1)

    > On my Mac, the second displays behavior I did not expect.  If 
    > I've done something stupid here, please advise;  it won't be the first 
    > time ;-)

Nothing stupid; indeed your expectations are correct and there's
a small lapsus in R there, the '...' not being passed to the axis(..)
calls in the matrix case.

I'm currently checking the obvious patch and will commit it to
R-devel and R-patched (unless I see problems in our checks).

    > Thanks to all the developers who have made R such a great 
    > contribution to humanity.

Thank you for the flowers!
Martin Maechler


    > Best Wishes,
    > Spencer Graves

    > sessionInfo()
    > R version 3.2.3 (2015-12-10)
    > Platform: x86_64-apple-darwin13.4.0 (64-bit)
    > Running under: OS X 10.11.2 (El Capitan)

    ....


From simon.urbanek at r-project.org  Mon Feb  1 14:36:56 2016
From: simon.urbanek at r-project.org (Simon Urbanek)
Date: Mon, 1 Feb 2016 08:36:56 -0500
Subject: [Rd] Wrong config check for __libc_stack_end
In-Reply-To: <22191.8837.813670.863210@stat.math.ethz.ch>
References: <CAJDAfTBZ5FNAsPuoRyk6CLEOPKG-JpY4OoQ3On-brcHS6UnafA@mail.gmail.com>
	<CAJDAfTAC1U92DXWvxkx7U9ORtJXtY+_e8i3MT85B3o6MsaEkKA@mail.gmail.com>
	<22191.8837.813670.863210@stat.math.ethz.ch>
Message-ID: <AB464163-D2A0-41EA-A4B1-74412D55AD47@r-project.org>


On Feb 1, 2016, at 4:16 AM, Martin Maechler <maechler at stat.math.ethz.ch> wrote:

>>>>>> Alba Pompeo <albapompeo at gmail.com>
>>>>>>    on Fri, 29 Jan 2016 08:23:26 -0200 writes:
> 
>> Here is my log from 'make check' using an Intel i5 64-bit
>> processor - http://pastebin.com/raw/N6SYAuFX Here is
>> Isaac's log from 'make check' using an Intel Atom 32-bit
>> processor - http://pastebin.com/raw/sey6DEk9
> 
>> We are both on Alpine Linux, which uses the musl
>> libc. http://www.musl-libc.org/
> 
>> Thank you very much.
> 
> It probably would have helped to choose a different subject
> which I now do.
> 

Agreed, since there is actually no abuse, case was easily dismissed as bogus given the subject.


>> On Thu, Jan 28, 2016 at 9:54 AM, Alba Pompeo
>> <albapompeo at gmail.com> wrote:
>>> Hello, developers of R.
>>> 
>>> I have been unsuccessfully trying to build R on a musl
>>> libc system for the last days.  ./configure works, but
>>> make fails. The command that errors out is here -
>>> http://pastebin.com/raw/UwFRsiqT
>>> 
>>> It was brought to my attention that this is a (very
>>> longstanding) abuse of a private glibc symbol in R.
>>> 
>>> In R 3.2.3, it seems that configure is trying to test for
>>> it on Linux.  It apparently fails to accurately test (as
>>> demonstrated by the link error), perhaps because the test
>>> program does not actually *use* __libc_stack_end so it
>>> gets optimized out. (See line 35500 or so in
>>> R-3.2.3/configure.)  Ideally, the test program would
>>> check that a pointer to __libc_stack_end is non-null, but
>>> that's an autoconf bug.
> 
> So, ideally someone who knows autoconf much better than I do
> should submit a bug report to the autoconf maintainers.
> 

@Alba, can you, please, check that your hypothesis actually holds true and the latest R from trunk fixes the check for you?


> Back to R: I'm not familiar with that part of the code, neither
> the configuration, nor the usage (in  R/src/unix/system.c ).
> However, that code seems to be using a a glibc "feature" widely
> available which does help making R startup (a very tiny bit ??)
> faster.
> 

No, it's actually very crucial as it is used to detect stack overflows.

Cheers,
Simon



>>> A work around was to 'export r_cv_libc_stack_end=no'
>>> before configuring R.  
> 
> which *does* solve that problem, right?
> 
>>> However, there are a couple little issues with non-ASCII
>>> text and a *lot* of math differences, many of which say
>>> "*no* convergence: NOTIFY R-core!".
> 
> Hmm, I may be off, but these would look like entirely unrelated
> with the libc_stack_end availibility, wouldn't they ?
> 
> Maybe you / the musl developers should try to make those C
> libraries more "standard", notably because I would see math
> differences as something pretty grave for R, and indeed, I would
> not want to use a platform where R's math functions work
> incompatibly with all other platforms ... but maybe I
> misunderstand completely.
> 
> Hmm... I've found this,
> 
> http://wiki.musl-libc.org/wiki/Functional_differences_from_glibc#Floating-point_and_mathematical_library
> 
> which make what you say above more relevant/interesting.
> 
> Still, from this thread I get that the C source code of R needs
> considerable configuration patches before R can work with musl.
> But that needs another thread, something like  'Building R with musl'.
> 
>>> Until these are resolved, R can't be packaged for
>>> distributions that use musl, such as Alpine Linux.
> 
> which I agree would not be ideal.
> Martin
> 
> --
> Martin <Maechler at stat.math.ethz.ch>  http://stat.ethz.ch/people/maechler
> Seminar f?r Statistik, ETH Z?rich
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
> 


From albapompeo at gmail.com  Mon Feb  1 15:56:00 2016
From: albapompeo at gmail.com (Alba Pompeo)
Date: Mon, 1 Feb 2016 12:56:00 -0200
Subject: [Rd] Wrong config check for __libc_stack_end
In-Reply-To: <AB464163-D2A0-41EA-A4B1-74412D55AD47@r-project.org>
References: <CAJDAfTBZ5FNAsPuoRyk6CLEOPKG-JpY4OoQ3On-brcHS6UnafA@mail.gmail.com>
	<CAJDAfTAC1U92DXWvxkx7U9ORtJXtY+_e8i3MT85B3o6MsaEkKA@mail.gmail.com>
	<22191.8837.813670.863210@stat.math.ethz.ch>
	<AB464163-D2A0-41EA-A4B1-74412D55AD47@r-project.org>
Message-ID: <CAJDAfTBqWuG53=a8ei63ZFmCjXzTFJ6kQmKG7c20f5zqiHoRyw@mail.gmail.com>

@Simon. Here's what I did.
I checked out R revision 70059.
Ran export r_cv_libc_stack_end=no. (otherwise it would give that error
we talked about before)
Ran ./configure --without-recommended-packages. (otherwise it would
complain of not finding ./src/library/Recommended/MASS_*.tar.gz)
Ran make.
Ran make check. Log is here - http://pastebin.com/raw/cGJgqB8p

What do you think? Is there anything else I can do to help solve this issue?



On Mon, Feb 1, 2016 at 11:36 AM, Simon Urbanek
<simon.urbanek at r-project.org> wrote:
>
> On Feb 1, 2016, at 4:16 AM, Martin Maechler <maechler at stat.math.ethz.ch> wrote:
>
>>>>>>> Alba Pompeo <albapompeo at gmail.com>
>>>>>>>    on Fri, 29 Jan 2016 08:23:26 -0200 writes:
>>
>>> Here is my log from 'make check' using an Intel i5 64-bit
>>> processor - http://pastebin.com/raw/N6SYAuFX Here is
>>> Isaac's log from 'make check' using an Intel Atom 32-bit
>>> processor - http://pastebin.com/raw/sey6DEk9
>>
>>> We are both on Alpine Linux, which uses the musl
>>> libc. http://www.musl-libc.org/
>>
>>> Thank you very much.
>>
>> It probably would have helped to choose a different subject
>> which I now do.
>>
>
> Agreed, since there is actually no abuse, case was easily dismissed as bogus given the subject.
>
>
>>> On Thu, Jan 28, 2016 at 9:54 AM, Alba Pompeo
>>> <albapompeo at gmail.com> wrote:
>>>> Hello, developers of R.
>>>>
>>>> I have been unsuccessfully trying to build R on a musl
>>>> libc system for the last days.  ./configure works, but
>>>> make fails. The command that errors out is here -
>>>> http://pastebin.com/raw/UwFRsiqT
>>>>
>>>> It was brought to my attention that this is a (very
>>>> longstanding) abuse of a private glibc symbol in R.
>>>>
>>>> In R 3.2.3, it seems that configure is trying to test for
>>>> it on Linux.  It apparently fails to accurately test (as
>>>> demonstrated by the link error), perhaps because the test
>>>> program does not actually *use* __libc_stack_end so it
>>>> gets optimized out. (See line 35500 or so in
>>>> R-3.2.3/configure.)  Ideally, the test program would
>>>> check that a pointer to __libc_stack_end is non-null, but
>>>> that's an autoconf bug.
>>
>> So, ideally someone who knows autoconf much better than I do
>> should submit a bug report to the autoconf maintainers.
>>
>
> @Alba, can you, please, check that your hypothesis actually holds true and the latest R from trunk fixes the check for you?
>
>
>> Back to R: I'm not familiar with that part of the code, neither
>> the configuration, nor the usage (in  R/src/unix/system.c ).
>> However, that code seems to be using a a glibc "feature" widely
>> available which does help making R startup (a very tiny bit ??)
>> faster.
>>
>
> No, it's actually very crucial as it is used to detect stack overflows.
>
> Cheers,
> Simon
>
>
>
>>>> A work around was to 'export r_cv_libc_stack_end=no'
>>>> before configuring R.
>>
>> which *does* solve that problem, right?
>>
>>>> However, there are a couple little issues with non-ASCII
>>>> text and a *lot* of math differences, many of which say
>>>> "*no* convergence: NOTIFY R-core!".
>>
>> Hmm, I may be off, but these would look like entirely unrelated
>> with the libc_stack_end availibility, wouldn't they ?
>>
>> Maybe you / the musl developers should try to make those C
>> libraries more "standard", notably because I would see math
>> differences as something pretty grave for R, and indeed, I would
>> not want to use a platform where R's math functions work
>> incompatibly with all other platforms ... but maybe I
>> misunderstand completely.
>>
>> Hmm... I've found this,
>>
>> http://wiki.musl-libc.org/wiki/Functional_differences_from_glibc#Floating-point_and_mathematical_library
>>
>> which make what you say above more relevant/interesting.
>>
>> Still, from this thread I get that the C source code of R needs
>> considerable configuration patches before R can work with musl.
>> But that needs another thread, something like  'Building R with musl'.
>>
>>>> Until these are resolved, R can't be packaged for
>>>> distributions that use musl, such as Alpine Linux.
>>
>> which I agree would not be ideal.
>> Martin
>>
>> --
>> Martin <Maechler at stat.math.ethz.ch>  http://stat.ethz.ch/people/maechler
>> Seminar f?r Statistik, ETH Z?rich
>>
>> ______________________________________________
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>
>


From simon.urbanek at r-project.org  Mon Feb  1 16:45:09 2016
From: simon.urbanek at r-project.org (Simon Urbanek)
Date: Mon, 1 Feb 2016 10:45:09 -0500
Subject: [Rd] Wrong config check for __libc_stack_end
In-Reply-To: <CAJDAfTBqWuG53=a8ei63ZFmCjXzTFJ6kQmKG7c20f5zqiHoRyw@mail.gmail.com>
References: <CAJDAfTBZ5FNAsPuoRyk6CLEOPKG-JpY4OoQ3On-brcHS6UnafA@mail.gmail.com>
	<CAJDAfTAC1U92DXWvxkx7U9ORtJXtY+_e8i3MT85B3o6MsaEkKA@mail.gmail.com>
	<22191.8837.813670.863210@stat.math.ethz.ch>
	<AB464163-D2A0-41EA-A4B1-74412D55AD47@r-project.org>
	<CAJDAfTBqWuG53=a8ei63ZFmCjXzTFJ6kQmKG7c20f5zqiHoRyw@mail.gmail.com>
Message-ID: <8B548E62-9105-4D2F-A7C0-DC215ECB2DE9@r-project.org>


On Feb 1, 2016, at 9:56 AM, Alba Pompeo <albapompeo at gmail.com> wrote:

> @Simon. Here's what I did.
> I checked out R revision 70059.
> Ran export r_cv_libc_stack_end=no. (otherwise it would give that error
> we talked about before)

No, the point was that you use a clean checkout (do NOT build in the sources) and don't override anything ..



> Ran ./configure --without-recommended-packages. (otherwise it would
> complain of not finding ./src/library/Recommended/MASS_*.tar.gz)
> Ran make.
> Ran make check. Log is here - http://pastebin.com/raw/cGJgqB8p
> 
> What do you think? Is there anything else I can do to help solve this issue?
> 
> 
> 
> On Mon, Feb 1, 2016 at 11:36 AM, Simon Urbanek
> <simon.urbanek at r-project.org> wrote:
>> 
>> On Feb 1, 2016, at 4:16 AM, Martin Maechler <maechler at stat.math.ethz.ch> wrote:
>> 
>>>>>>>> Alba Pompeo <albapompeo at gmail.com>
>>>>>>>>   on Fri, 29 Jan 2016 08:23:26 -0200 writes:
>>> 
>>>> Here is my log from 'make check' using an Intel i5 64-bit
>>>> processor - http://pastebin.com/raw/N6SYAuFX Here is
>>>> Isaac's log from 'make check' using an Intel Atom 32-bit
>>>> processor - http://pastebin.com/raw/sey6DEk9
>>> 
>>>> We are both on Alpine Linux, which uses the musl
>>>> libc. http://www.musl-libc.org/
>>> 
>>>> Thank you very much.
>>> 
>>> It probably would have helped to choose a different subject
>>> which I now do.
>>> 
>> 
>> Agreed, since there is actually no abuse, case was easily dismissed as bogus given the subject.
>> 
>> 
>>>> On Thu, Jan 28, 2016 at 9:54 AM, Alba Pompeo
>>>> <albapompeo at gmail.com> wrote:
>>>>> Hello, developers of R.
>>>>> 
>>>>> I have been unsuccessfully trying to build R on a musl
>>>>> libc system for the last days.  ./configure works, but
>>>>> make fails. The command that errors out is here -
>>>>> http://pastebin.com/raw/UwFRsiqT
>>>>> 
>>>>> It was brought to my attention that this is a (very
>>>>> longstanding) abuse of a private glibc symbol in R.
>>>>> 
>>>>> In R 3.2.3, it seems that configure is trying to test for
>>>>> it on Linux.  It apparently fails to accurately test (as
>>>>> demonstrated by the link error), perhaps because the test
>>>>> program does not actually *use* __libc_stack_end so it
>>>>> gets optimized out. (See line 35500 or so in
>>>>> R-3.2.3/configure.)  Ideally, the test program would
>>>>> check that a pointer to __libc_stack_end is non-null, but
>>>>> that's an autoconf bug.
>>> 
>>> So, ideally someone who knows autoconf much better than I do
>>> should submit a bug report to the autoconf maintainers.
>>> 
>> 
>> @Alba, can you, please, check that your hypothesis actually holds true and the latest R from trunk fixes the check for you?
>> 
>> 
>>> Back to R: I'm not familiar with that part of the code, neither
>>> the configuration, nor the usage (in  R/src/unix/system.c ).
>>> However, that code seems to be using a a glibc "feature" widely
>>> available which does help making R startup (a very tiny bit ??)
>>> faster.
>>> 
>> 
>> No, it's actually very crucial as it is used to detect stack overflows.
>> 
>> Cheers,
>> Simon
>> 
>> 
>> 
>>>>> A work around was to 'export r_cv_libc_stack_end=no'
>>>>> before configuring R.
>>> 
>>> which *does* solve that problem, right?
>>> 
>>>>> However, there are a couple little issues with non-ASCII
>>>>> text and a *lot* of math differences, many of which say
>>>>> "*no* convergence: NOTIFY R-core!".
>>> 
>>> Hmm, I may be off, but these would look like entirely unrelated
>>> with the libc_stack_end availibility, wouldn't they ?
>>> 
>>> Maybe you / the musl developers should try to make those C
>>> libraries more "standard", notably because I would see math
>>> differences as something pretty grave for R, and indeed, I would
>>> not want to use a platform where R's math functions work
>>> incompatibly with all other platforms ... but maybe I
>>> misunderstand completely.
>>> 
>>> Hmm... I've found this,
>>> 
>>> http://wiki.musl-libc.org/wiki/Functional_differences_from_glibc#Floating-point_and_mathematical_library
>>> 
>>> which make what you say above more relevant/interesting.
>>> 
>>> Still, from this thread I get that the C source code of R needs
>>> considerable configuration patches before R can work with musl.
>>> But that needs another thread, something like  'Building R with musl'.
>>> 
>>>>> Until these are resolved, R can't be packaged for
>>>>> distributions that use musl, such as Alpine Linux.
>>> 
>>> which I agree would not be ideal.
>>> Martin
>>> 
>>> --
>>> Martin <Maechler at stat.math.ethz.ch>  http://stat.ethz.ch/people/maechler
>>> Seminar f?r Statistik, ETH Z?rich
>>> 
>>> ______________________________________________
>>> R-devel at r-project.org mailing list
>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>> 
>> 
> 


From simon.urbanek at r-project.org  Mon Feb  1 16:45:09 2016
From: simon.urbanek at r-project.org (Simon Urbanek)
Date: Mon, 1 Feb 2016 10:45:09 -0500
Subject: [Rd] Wrong config check for __libc_stack_end
In-Reply-To: <CAJDAfTBqWuG53=a8ei63ZFmCjXzTFJ6kQmKG7c20f5zqiHoRyw@mail.gmail.com>
References: <CAJDAfTBZ5FNAsPuoRyk6CLEOPKG-JpY4OoQ3On-brcHS6UnafA@mail.gmail.com>
	<CAJDAfTAC1U92DXWvxkx7U9ORtJXtY+_e8i3MT85B3o6MsaEkKA@mail.gmail.com>
	<22191.8837.813670.863210@stat.math.ethz.ch>
	<AB464163-D2A0-41EA-A4B1-74412D55AD47@r-project.org>
	<CAJDAfTBqWuG53=a8ei63ZFmCjXzTFJ6kQmKG7c20f5zqiHoRyw@mail.gmail.com>
Message-ID: <8B548E62-9105-4D2F-A7C0-DC215ECB2DE9@r-project.org>


On Feb 1, 2016, at 9:56 AM, Alba Pompeo <albapompeo at gmail.com> wrote:

> @Simon. Here's what I did.
> I checked out R revision 70059.
> Ran export r_cv_libc_stack_end=no. (otherwise it would give that error
> we talked about before)

No, the point was that you use a clean checkout (do NOT build in the sources) and don't override anything ..



> Ran ./configure --without-recommended-packages. (otherwise it would
> complain of not finding ./src/library/Recommended/MASS_*.tar.gz)
> Ran make.
> Ran make check. Log is here - http://pastebin.com/raw/cGJgqB8p
> 
> What do you think? Is there anything else I can do to help solve this issue?
> 
> 
> 
> On Mon, Feb 1, 2016 at 11:36 AM, Simon Urbanek
> <simon.urbanek at r-project.org> wrote:
>> 
>> On Feb 1, 2016, at 4:16 AM, Martin Maechler <maechler at stat.math.ethz.ch> wrote:
>> 
>>>>>>>> Alba Pompeo <albapompeo at gmail.com>
>>>>>>>>   on Fri, 29 Jan 2016 08:23:26 -0200 writes:
>>> 
>>>> Here is my log from 'make check' using an Intel i5 64-bit
>>>> processor - http://pastebin.com/raw/N6SYAuFX Here is
>>>> Isaac's log from 'make check' using an Intel Atom 32-bit
>>>> processor - http://pastebin.com/raw/sey6DEk9
>>> 
>>>> We are both on Alpine Linux, which uses the musl
>>>> libc. http://www.musl-libc.org/
>>> 
>>>> Thank you very much.
>>> 
>>> It probably would have helped to choose a different subject
>>> which I now do.
>>> 
>> 
>> Agreed, since there is actually no abuse, case was easily dismissed as bogus given the subject.
>> 
>> 
>>>> On Thu, Jan 28, 2016 at 9:54 AM, Alba Pompeo
>>>> <albapompeo at gmail.com> wrote:
>>>>> Hello, developers of R.
>>>>> 
>>>>> I have been unsuccessfully trying to build R on a musl
>>>>> libc system for the last days.  ./configure works, but
>>>>> make fails. The command that errors out is here -
>>>>> http://pastebin.com/raw/UwFRsiqT
>>>>> 
>>>>> It was brought to my attention that this is a (very
>>>>> longstanding) abuse of a private glibc symbol in R.
>>>>> 
>>>>> In R 3.2.3, it seems that configure is trying to test for
>>>>> it on Linux.  It apparently fails to accurately test (as
>>>>> demonstrated by the link error), perhaps because the test
>>>>> program does not actually *use* __libc_stack_end so it
>>>>> gets optimized out. (See line 35500 or so in
>>>>> R-3.2.3/configure.)  Ideally, the test program would
>>>>> check that a pointer to __libc_stack_end is non-null, but
>>>>> that's an autoconf bug.
>>> 
>>> So, ideally someone who knows autoconf much better than I do
>>> should submit a bug report to the autoconf maintainers.
>>> 
>> 
>> @Alba, can you, please, check that your hypothesis actually holds true and the latest R from trunk fixes the check for you?
>> 
>> 
>>> Back to R: I'm not familiar with that part of the code, neither
>>> the configuration, nor the usage (in  R/src/unix/system.c ).
>>> However, that code seems to be using a a glibc "feature" widely
>>> available which does help making R startup (a very tiny bit ??)
>>> faster.
>>> 
>> 
>> No, it's actually very crucial as it is used to detect stack overflows.
>> 
>> Cheers,
>> Simon
>> 
>> 
>> 
>>>>> A work around was to 'export r_cv_libc_stack_end=no'
>>>>> before configuring R.
>>> 
>>> which *does* solve that problem, right?
>>> 
>>>>> However, there are a couple little issues with non-ASCII
>>>>> text and a *lot* of math differences, many of which say
>>>>> "*no* convergence: NOTIFY R-core!".
>>> 
>>> Hmm, I may be off, but these would look like entirely unrelated
>>> with the libc_stack_end availibility, wouldn't they ?
>>> 
>>> Maybe you / the musl developers should try to make those C
>>> libraries more "standard", notably because I would see math
>>> differences as something pretty grave for R, and indeed, I would
>>> not want to use a platform where R's math functions work
>>> incompatibly with all other platforms ... but maybe I
>>> misunderstand completely.
>>> 
>>> Hmm... I've found this,
>>> 
>>> http://wiki.musl-libc.org/wiki/Functional_differences_from_glibc#Floating-point_and_mathematical_library
>>> 
>>> which make what you say above more relevant/interesting.
>>> 
>>> Still, from this thread I get that the C source code of R needs
>>> considerable configuration patches before R can work with musl.
>>> But that needs another thread, something like  'Building R with musl'.
>>> 
>>>>> Until these are resolved, R can't be packaged for
>>>>> distributions that use musl, such as Alpine Linux.
>>> 
>>> which I agree would not be ideal.
>>> Martin
>>> 
>>> --
>>> Martin <Maechler at stat.math.ethz.ch>  http://stat.ethz.ch/people/maechler
>>> Seminar f?r Statistik, ETH Z?rich
>>> 
>>> ______________________________________________
>>> R-devel at r-project.org mailing list
>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>> 
>> 
> 


From simon.urbanek at r-project.org  Mon Feb  1 16:53:29 2016
From: simon.urbanek at r-project.org (Simon Urbanek)
Date: Mon, 1 Feb 2016 10:53:29 -0500
Subject: [Rd] Wrong config check for __libc_stack_end
In-Reply-To: <CAJDAfTBqWuG53=a8ei63ZFmCjXzTFJ6kQmKG7c20f5zqiHoRyw@mail.gmail.com>
References: <CAJDAfTBZ5FNAsPuoRyk6CLEOPKG-JpY4OoQ3On-brcHS6UnafA@mail.gmail.com>
	<CAJDAfTAC1U92DXWvxkx7U9ORtJXtY+_e8i3MT85B3o6MsaEkKA@mail.gmail.com>
	<22191.8837.813670.863210@stat.math.ethz.ch>
	<AB464163-D2A0-41EA-A4B1-74412D55AD47@r-project.org>
	<CAJDAfTBqWuG53=a8ei63ZFmCjXzTFJ6kQmKG7c20f5zqiHoRyw@mail.gmail.com>
Message-ID: <5A694E77-F32F-41C4-8D6D-1E1119ABFCB1@r-project.org>


On Feb 1, 2016, at 9:56 AM, Alba Pompeo <albapompeo at gmail.com> wrote:

> @Simon. Here's what I did.
> I checked out R revision 70059.
> Ran export r_cv_libc_stack_end=no. (otherwise it would give that error
> we talked about before)

No, the whole point was to test this behavior. I see that the fix is in configure.ac but not configure so you'll need to run something like
aclocal -I m4 && autoconf
to update it.

Also please don't build in the sources - you'll have trouble making sure they are clean. It is recommended to build in a separate directory (see the docs).


> Ran ./configure --without-recommended-packages. (otherwise it would
> complain of not finding ./src/library/Recommended/MASS_*.tar.gz)

I guess you forgot to run
tools/rsync-recommended 
perhaps? It doesn't matter either way for the above issues, but it's probably better to build with recommended packages.

Cheers,
Simon


> Ran make.
> Ran make check. Log is here - http://pastebin.com/raw/cGJgqB8p
> 
> What do you think? Is there anything else I can do to help solve this issue?
> 
> 
> 
> On Mon, Feb 1, 2016 at 11:36 AM, Simon Urbanek
> <simon.urbanek at r-project.org> wrote:
>> 
>> On Feb 1, 2016, at 4:16 AM, Martin Maechler <maechler at stat.math.ethz.ch> wrote:
>> 
>>>>>>>> Alba Pompeo <albapompeo at gmail.com>
>>>>>>>>   on Fri, 29 Jan 2016 08:23:26 -0200 writes:
>>> 
>>>> Here is my log from 'make check' using an Intel i5 64-bit
>>>> processor - http://pastebin.com/raw/N6SYAuFX Here is
>>>> Isaac's log from 'make check' using an Intel Atom 32-bit
>>>> processor - http://pastebin.com/raw/sey6DEk9
>>> 
>>>> We are both on Alpine Linux, which uses the musl
>>>> libc. http://www.musl-libc.org/
>>> 
>>>> Thank you very much.
>>> 
>>> It probably would have helped to choose a different subject
>>> which I now do.
>>> 
>> 
>> Agreed, since there is actually no abuse, case was easily dismissed as bogus given the subject.
>> 
>> 
>>>> On Thu, Jan 28, 2016 at 9:54 AM, Alba Pompeo
>>>> <albapompeo at gmail.com> wrote:
>>>>> Hello, developers of R.
>>>>> 
>>>>> I have been unsuccessfully trying to build R on a musl
>>>>> libc system for the last days.  ./configure works, but
>>>>> make fails. The command that errors out is here -
>>>>> http://pastebin.com/raw/UwFRsiqT
>>>>> 
>>>>> It was brought to my attention that this is a (very
>>>>> longstanding) abuse of a private glibc symbol in R.
>>>>> 
>>>>> In R 3.2.3, it seems that configure is trying to test for
>>>>> it on Linux.  It apparently fails to accurately test (as
>>>>> demonstrated by the link error), perhaps because the test
>>>>> program does not actually *use* __libc_stack_end so it
>>>>> gets optimized out. (See line 35500 or so in
>>>>> R-3.2.3/configure.)  Ideally, the test program would
>>>>> check that a pointer to __libc_stack_end is non-null, but
>>>>> that's an autoconf bug.
>>> 
>>> So, ideally someone who knows autoconf much better than I do
>>> should submit a bug report to the autoconf maintainers.
>>> 
>> 
>> @Alba, can you, please, check that your hypothesis actually holds true and the latest R from trunk fixes the check for you?
>> 
>> 
>>> Back to R: I'm not familiar with that part of the code, neither
>>> the configuration, nor the usage (in  R/src/unix/system.c ).
>>> However, that code seems to be using a a glibc "feature" widely
>>> available which does help making R startup (a very tiny bit ??)
>>> faster.
>>> 
>> 
>> No, it's actually very crucial as it is used to detect stack overflows.
>> 
>> Cheers,
>> Simon
>> 
>> 
>> 
>>>>> A work around was to 'export r_cv_libc_stack_end=no'
>>>>> before configuring R.
>>> 
>>> which *does* solve that problem, right?
>>> 
>>>>> However, there are a couple little issues with non-ASCII
>>>>> text and a *lot* of math differences, many of which say
>>>>> "*no* convergence: NOTIFY R-core!".
>>> 
>>> Hmm, I may be off, but these would look like entirely unrelated
>>> with the libc_stack_end availibility, wouldn't they ?
>>> 
>>> Maybe you / the musl developers should try to make those C
>>> libraries more "standard", notably because I would see math
>>> differences as something pretty grave for R, and indeed, I would
>>> not want to use a platform where R's math functions work
>>> incompatibly with all other platforms ... but maybe I
>>> misunderstand completely.
>>> 
>>> Hmm... I've found this,
>>> 
>>> http://wiki.musl-libc.org/wiki/Functional_differences_from_glibc#Floating-point_and_mathematical_library
>>> 
>>> which make what you say above more relevant/interesting.
>>> 
>>> Still, from this thread I get that the C source code of R needs
>>> considerable configuration patches before R can work with musl.
>>> But that needs another thread, something like  'Building R with musl'.
>>> 
>>>>> Until these are resolved, R can't be packaged for
>>>>> distributions that use musl, such as Alpine Linux.
>>> 
>>> which I agree would not be ideal.
>>> Martin
>>> 
>>> --
>>> Martin <Maechler at stat.math.ethz.ch>  http://stat.ethz.ch/people/maechler
>>> Seminar f?r Statistik, ETH Z?rich
>>> 
>>> ______________________________________________
>>> R-devel at r-project.org mailing list
>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>> 
>> 
> 


From henrik.bengtsson at gmail.com  Mon Feb  1 17:46:31 2016
From: henrik.bengtsson at gmail.com (Henrik Bengtsson)
Date: Mon, 1 Feb 2016 08:46:31 -0800
Subject: [Rd] Best way for rgl's .onLoad to fail?
In-Reply-To: <56AF291B.6050607@gmail.com>
References: <56AD26EF.5000107@gmail.com>
	<8D38DD51-6E89-410C-AA46-107BB4762B91@depauw.edu>
	<22191.9390.120204.712356@stat.math.ethz.ch>
	<56AF291B.6050607@gmail.com>
Message-ID: <CAFDcVCTh4D+krUBR5KZfet3Z_4mWfBPmOZijodSSuC087Sbruw@mail.gmail.com>

If I recall it correctly, at least on Linux, rgl only needs X11 when
rgl.useNULL(FALSE).  Is that correct?  If so, I would say dependency
on X11 is optional and therefore you should be able to load the
package even without X11.  Or is it that it still requires X11 libs
but not an X11 server?

My $.02

/Henrik

On Mon, Feb 1, 2016 at 1:44 AM, Duncan Murdoch <murdoch.duncan at gmail.com> wrote:
> On 01/02/2016 4:26 AM, Martin Maechler wrote:
>>>>>>>
>>>>>>> "BH" == Bryan Hanson <hanson at depauw.edu>
>>>>>>>      on Sun, 31 Jan 2016 09:50:46 -0500 writes:
>>
>>
>>      BH> I think the 2nd option will be more palatable to
>>      BH> inexperienced users, but both do state the important
>>      BH> detail.  Bryan
>>
>>      >> On Jan 30, 2016, at 4:11 PM, Duncan Murdoch
>> <murdoch.duncan at gmail.com> wrote:
>>      >>
>>      >> On OSX and Linux, the rgl package currently requires X11
>>      >> libs to be available for linking.  Recent versions of OSX
>>      >> don't include them by default, so I'd like rgl to fail
>>      >> nicely.
>>      >>
>>      >> Ideally, it will load a library that doesn't need to link
>>      >> to the X11 libs but will still allow WebGL code to work,
>>      >> but that's complicated, so I'd like a stopgap.
>>      >>
>>      >> I can detect that the failure is about to happen, and
>>      >> call stop() in the .onLoad hook, but that gives an ugly
>>      >> message:
>>      >>
>>      >> > library(rgl)
>>      >> Error : .onLoad failed in loadNamespace() for 'rgl', details:
>>      >> call: NULL
>>      >> error: X11 not found; XQuartz (from www.xquartz.org) is required
>> to run rgl.
>>      >> Error: package or namespace load failed for ?rgl?
>>
>> I agree that the error message is a bit messy or even ugly,
>> however, other than Bryan, I would want  library(.)  to signal
>> an error when it cannot provide a working package, loaded and
>> attached to search().
>>
>> Other functions, such as  require(.)  do rely on this behavior of
>> library(.),
>> e.g., the much used idiom
>>
>>    if(require(<some package>)) {
>>        ....
>>        ....
>>        ....
>>    }
>>
>> needs library() to signal an error on  non-success.
>
>
> Yes, that's a good point.  That's what the version on R-forge currently
> does.
>
> Duncan Murdoch
>
>
>>
>> Martin
>>
>>      >> Alternatively, I can just give a warning and not attempt to load
>> the rgl lib:
>>      >>
>>      >> > library(rgl)
>>      >> Warning message:
>>      >> X11 not found; XQuartz (from www.xquartz.org) is required to run
>> rgl.
>>      >>
>>      >> rgl is now loaded, but it doesn't work; just about any function
>> call will give an error, e.g.
>>      >>
>>      >> > plot3d(1,2,3)
>>      >> Error in rgl.cur() : object 'rgl_dev_getcurrent' not found
>>      >>
>>      >> Do people have opinions about this?
>>      >>
>>      >> One comparable package is RGtk2:  if Gtk2 isn't install, it offers
>> to install it.  I could probably do that for XQuartz.  If the user says no,
>> RGtk2 gives really ugly error messages.  rgl can work without XQuartz, but
>> as I already mentioned, making this work is complicated, so I'd like
>> something simple for now.
>>      >>
>>      >> Duncan Murdoch
>>      >>
>>      >> ______________________________________________
>>      >> R-devel at r-project.org mailing list
>>      >> https://stat.ethz.ch/mailman/listinfo/r-devel
>>
>>      > ______________________________________________
>>      > R-devel at r-project.org mailing list
>>      > https://stat.ethz.ch/mailman/listinfo/r-devel
>>
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From maechler at stat.math.ethz.ch  Mon Feb  1 18:32:23 2016
From: maechler at stat.math.ethz.ch (Martin Maechler)
Date: Mon, 1 Feb 2016 18:32:23 +0100
Subject: [Rd] Wrong config check for __libc_stack_end
In-Reply-To: <AB464163-D2A0-41EA-A4B1-74412D55AD47@r-project.org>
References: <CAJDAfTBZ5FNAsPuoRyk6CLEOPKG-JpY4OoQ3On-brcHS6UnafA@mail.gmail.com>
	<CAJDAfTAC1U92DXWvxkx7U9ORtJXtY+_e8i3MT85B3o6MsaEkKA@mail.gmail.com>
	<22191.8837.813670.863210@stat.math.ethz.ch>
	<AB464163-D2A0-41EA-A4B1-74412D55AD47@r-project.org>
Message-ID: <22191.38567.679990.212017@stat.math.ethz.ch>

>>>>> Simon Urbanek <simon.urbanek at r-project.org>
>>>>>     on Mon, 1 Feb 2016 08:36:56 -0500 writes:

    > On Feb 1, 2016, at 4:16 AM, Martin Maechler <maechler at stat.math.ethz.ch> wrote:

 [..............]   

    >> Back to R: I'm not familiar with that part of the code, neither
    >> the configuration, nor the usage (in  R/src/unix/system.c ).
    >> However, that code seems to be using a a glibc "feature" widely
    >> available which does help making R startup (a very tiny bit ??)
    >> faster.
    >> 

    > No, it's actually very crucial as it is used to detect stack overflows.

    > Cheers,
    > Simon


Well, I think you misunderstood what I meant to say (or then I'm
happy for clarification if I misunderstood you) :

The #ifdef ... #elseif ... #else ... # endif
branch which *uses* the __libc_stack_end "variable" would
hopefully be a speedup in comparison with the alternatives; from
system.c  mentioned above:


#if defined(HAVE_LIBC_STACK_END)
    R_CStackStart = (uintptr_t) __libc_stack_end;
#elif defined(HAVE_KERN_USRSTACK)
    {
	/* Borrowed from mzscheme/gc/os_dep.c */
	int nm[2] = {CTL_KERN, KERN_USRSTACK};
	void * base;
	size_t len = sizeof(void *);
	(void) sysctl(nm, 2, &base, &len, NULL, 0);
	R_CStackStart = (uintptr_t) base;
    }
#else
    if(R_running_as_main_program) {
	/* This is not the main program, but unless embedded it is
	   near the top, 5540 bytes away when checked. */
	R_CStackStart = (uintptr_t) &i + (6000 * R_CStackDir);
    }
#endif
    if(R_CStackStart == -1) R_CStackLimit = -1; /* never set */

    /* printf("stack limit %ld, start %lx dir %d \n", R_CStackLimit,
	      R_CStackStart, R_CStackDir); */
}
#endif

so I'd hope that typically  R_CStackStart  would be set usefully
also when the  __libc_stack_end  is not available.

If not, that would mean that for the 'musl' lovers, R would not
be able to detect stack overflows.... which would probably be
quite undesirable.


From albapompeo at gmail.com  Mon Feb  1 18:33:11 2016
From: albapompeo at gmail.com (Alba Pompeo)
Date: Mon, 1 Feb 2016 15:33:11 -0200
Subject: [Rd] Wrong config check for __libc_stack_end
In-Reply-To: <5A694E77-F32F-41C4-8D6D-1E1119ABFCB1@r-project.org>
References: <CAJDAfTBZ5FNAsPuoRyk6CLEOPKG-JpY4OoQ3On-brcHS6UnafA@mail.gmail.com>
	<CAJDAfTAC1U92DXWvxkx7U9ORtJXtY+_e8i3MT85B3o6MsaEkKA@mail.gmail.com>
	<22191.8837.813670.863210@stat.math.ethz.ch>
	<AB464163-D2A0-41EA-A4B1-74412D55AD47@r-project.org>
	<CAJDAfTBqWuG53=a8ei63ZFmCjXzTFJ6kQmKG7c20f5zqiHoRyw@mail.gmail.com>
	<5A694E77-F32F-41C4-8D6D-1E1119ABFCB1@r-project.org>
Message-ID: <CAJDAfTAS4EtNqNaaFGUm2f+0mGzsZuVAWyjd1j5P0LPP2f92pQ@mail.gmail.com>

Here's what I did.

svn checkout https://svn.r-project.org/R/trunk/
cd ./trunk
aclocal -I m4 && autoconf
tools/rsync-recommended
cd ..
mkdir build
cd build
../trunk/configure
make
make check

On make check it gives an error.
Here's the log.
http://pastebin.com/raw/1qfjqQY2


On Mon, Feb 1, 2016 at 1:53 PM, Simon Urbanek
<simon.urbanek at r-project.org> wrote:
>
> On Feb 1, 2016, at 9:56 AM, Alba Pompeo <albapompeo at gmail.com> wrote:
>
>> @Simon. Here's what I did.
>> I checked out R revision 70059.
>> Ran export r_cv_libc_stack_end=no. (otherwise it would give that error
>> we talked about before)
>
> No, the whole point was to test this behavior. I see that the fix is in configure.ac but not configure so you'll need to run something like
> aclocal -I m4 && autoconf
> to update it.
>
> Also please don't build in the sources - you'll have trouble making sure they are clean. It is recommended to build in a separate directory (see the docs).
>
>
>> Ran ./configure --without-recommended-packages. (otherwise it would
>> complain of not finding ./src/library/Recommended/MASS_*.tar.gz)
>
> I guess you forgot to run
> tools/rsync-recommended
> perhaps? It doesn't matter either way for the above issues, but it's probably better to build with recommended packages.
>
> Cheers,
> Simon
>
>
>> Ran make.
>> Ran make check. Log is here - http://pastebin.com/raw/cGJgqB8p
>>
>> What do you think? Is there anything else I can do to help solve this issue?
>>
>>
>>
>> On Mon, Feb 1, 2016 at 11:36 AM, Simon Urbanek
>> <simon.urbanek at r-project.org> wrote:
>>>
>>> On Feb 1, 2016, at 4:16 AM, Martin Maechler <maechler at stat.math.ethz.ch> wrote:
>>>
>>>>>>>>> Alba Pompeo <albapompeo at gmail.com>
>>>>>>>>>   on Fri, 29 Jan 2016 08:23:26 -0200 writes:
>>>>
>>>>> Here is my log from 'make check' using an Intel i5 64-bit
>>>>> processor - http://pastebin.com/raw/N6SYAuFX Here is
>>>>> Isaac's log from 'make check' using an Intel Atom 32-bit
>>>>> processor - http://pastebin.com/raw/sey6DEk9
>>>>
>>>>> We are both on Alpine Linux, which uses the musl
>>>>> libc. http://www.musl-libc.org/
>>>>
>>>>> Thank you very much.
>>>>
>>>> It probably would have helped to choose a different subject
>>>> which I now do.
>>>>
>>>
>>> Agreed, since there is actually no abuse, case was easily dismissed as bogus given the subject.
>>>
>>>
>>>>> On Thu, Jan 28, 2016 at 9:54 AM, Alba Pompeo
>>>>> <albapompeo at gmail.com> wrote:
>>>>>> Hello, developers of R.
>>>>>>
>>>>>> I have been unsuccessfully trying to build R on a musl
>>>>>> libc system for the last days.  ./configure works, but
>>>>>> make fails. The command that errors out is here -
>>>>>> http://pastebin.com/raw/UwFRsiqT
>>>>>>
>>>>>> It was brought to my attention that this is a (very
>>>>>> longstanding) abuse of a private glibc symbol in R.
>>>>>>
>>>>>> In R 3.2.3, it seems that configure is trying to test for
>>>>>> it on Linux.  It apparently fails to accurately test (as
>>>>>> demonstrated by the link error), perhaps because the test
>>>>>> program does not actually *use* __libc_stack_end so it
>>>>>> gets optimized out. (See line 35500 or so in
>>>>>> R-3.2.3/configure.)  Ideally, the test program would
>>>>>> check that a pointer to __libc_stack_end is non-null, but
>>>>>> that's an autoconf bug.
>>>>
>>>> So, ideally someone who knows autoconf much better than I do
>>>> should submit a bug report to the autoconf maintainers.
>>>>
>>>
>>> @Alba, can you, please, check that your hypothesis actually holds true and the latest R from trunk fixes the check for you?
>>>
>>>
>>>> Back to R: I'm not familiar with that part of the code, neither
>>>> the configuration, nor the usage (in  R/src/unix/system.c ).
>>>> However, that code seems to be using a a glibc "feature" widely
>>>> available which does help making R startup (a very tiny bit ??)
>>>> faster.
>>>>
>>>
>>> No, it's actually very crucial as it is used to detect stack overflows.
>>>
>>> Cheers,
>>> Simon
>>>
>>>
>>>
>>>>>> A work around was to 'export r_cv_libc_stack_end=no'
>>>>>> before configuring R.
>>>>
>>>> which *does* solve that problem, right?
>>>>
>>>>>> However, there are a couple little issues with non-ASCII
>>>>>> text and a *lot* of math differences, many of which say
>>>>>> "*no* convergence: NOTIFY R-core!".
>>>>
>>>> Hmm, I may be off, but these would look like entirely unrelated
>>>> with the libc_stack_end availibility, wouldn't they ?
>>>>
>>>> Maybe you / the musl developers should try to make those C
>>>> libraries more "standard", notably because I would see math
>>>> differences as something pretty grave for R, and indeed, I would
>>>> not want to use a platform where R's math functions work
>>>> incompatibly with all other platforms ... but maybe I
>>>> misunderstand completely.
>>>>
>>>> Hmm... I've found this,
>>>>
>>>> http://wiki.musl-libc.org/wiki/Functional_differences_from_glibc#Floating-point_and_mathematical_library
>>>>
>>>> which make what you say above more relevant/interesting.
>>>>
>>>> Still, from this thread I get that the C source code of R needs
>>>> considerable configuration patches before R can work with musl.
>>>> But that needs another thread, something like  'Building R with musl'.
>>>>
>>>>>> Until these are resolved, R can't be packaged for
>>>>>> distributions that use musl, such as Alpine Linux.
>>>>
>>>> which I agree would not be ideal.
>>>> Martin
>>>>
>>>> --
>>>> Martin <Maechler at stat.math.ethz.ch>  http://stat.ethz.ch/people/maechler
>>>> Seminar f?r Statistik, ETH Z?rich
>>>>
>>>> ______________________________________________
>>>> R-devel at r-project.org mailing list
>>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>>>
>>>
>>
>


From murdoch.duncan at gmail.com  Mon Feb  1 18:34:25 2016
From: murdoch.duncan at gmail.com (Duncan Murdoch)
Date: Mon, 1 Feb 2016 12:34:25 -0500
Subject: [Rd] Best way for rgl's .onLoad to fail?
In-Reply-To: <CAFDcVCTh4D+krUBR5KZfet3Z_4mWfBPmOZijodSSuC087Sbruw@mail.gmail.com>
References: <56AD26EF.5000107@gmail.com>
	<8D38DD51-6E89-410C-AA46-107BB4762B91@depauw.edu>
	<22191.9390.120204.712356@stat.math.ethz.ch>
	<56AF291B.6050607@gmail.com>
	<CAFDcVCTh4D+krUBR5KZfet3Z_4mWfBPmOZijodSSuC087Sbruw@mail.gmail.com>
Message-ID: <56AF9721.9000307@gmail.com>

On 01/02/2016 11:46 AM, Henrik Bengtsson wrote:
> If I recall it correctly, at least on Linux, rgl only needs X11 when
> rgl.useNULL(FALSE).  Is that correct?  If so, I would say dependency
> on X11 is optional and therefore you should be able to load the
> package even without X11.  Or is it that it still requires X11 libs
> but not an X11 server?

The latter.  It links to lots of OpenGL and X11 entry points, it just 
never calls them.

The good but "complicated" solution is to build a library without those 
links, but that's not going to happen soon.

Duncan Murdoch
>
> My $.02
>
> /Henrik
>
> On Mon, Feb 1, 2016 at 1:44 AM, Duncan Murdoch <murdoch.duncan at gmail.com> wrote:
> > On 01/02/2016 4:26 AM, Martin Maechler wrote:
> >>>>>>>
> >>>>>>> "BH" == Bryan Hanson <hanson at depauw.edu>
> >>>>>>>      on Sun, 31 Jan 2016 09:50:46 -0500 writes:
> >>
> >>
> >>      BH> I think the 2nd option will be more palatable to
> >>      BH> inexperienced users, but both do state the important
> >>      BH> detail.  Bryan
> >>
> >>      >> On Jan 30, 2016, at 4:11 PM, Duncan Murdoch
> >> <murdoch.duncan at gmail.com> wrote:
> >>      >>
> >>      >> On OSX and Linux, the rgl package currently requires X11
> >>      >> libs to be available for linking.  Recent versions of OSX
> >>      >> don't include them by default, so I'd like rgl to fail
> >>      >> nicely.
> >>      >>
> >>      >> Ideally, it will load a library that doesn't need to link
> >>      >> to the X11 libs but will still allow WebGL code to work,
> >>      >> but that's complicated, so I'd like a stopgap.
> >>      >>
> >>      >> I can detect that the failure is about to happen, and
> >>      >> call stop() in the .onLoad hook, but that gives an ugly
> >>      >> message:
> >>      >>
> >>      >> > library(rgl)
> >>      >> Error : .onLoad failed in loadNamespace() for 'rgl', details:
> >>      >> call: NULL
> >>      >> error: X11 not found; XQuartz (from www.xquartz.org) is required
> >> to run rgl.
> >>      >> Error: package or namespace load failed for ?rgl?
> >>
> >> I agree that the error message is a bit messy or even ugly,
> >> however, other than Bryan, I would want  library(.)  to signal
> >> an error when it cannot provide a working package, loaded and
> >> attached to search().
> >>
> >> Other functions, such as  require(.)  do rely on this behavior of
> >> library(.),
> >> e.g., the much used idiom
> >>
> >>    if(require(<some package>)) {
> >>        ....
> >>        ....
> >>        ....
> >>    }
> >>
> >> needs library() to signal an error on  non-success.
> >
> >
> > Yes, that's a good point.  That's what the version on R-forge currently
> > does.
> >
> > Duncan Murdoch
> >
> >
> >>
> >> Martin
> >>
> >>      >> Alternatively, I can just give a warning and not attempt to load
> >> the rgl lib:
> >>      >>
> >>      >> > library(rgl)
> >>      >> Warning message:
> >>      >> X11 not found; XQuartz (from www.xquartz.org) is required to run
> >> rgl.
> >>      >>
> >>      >> rgl is now loaded, but it doesn't work; just about any function
> >> call will give an error, e.g.
> >>      >>
> >>      >> > plot3d(1,2,3)
> >>      >> Error in rgl.cur() : object 'rgl_dev_getcurrent' not found
> >>      >>
> >>      >> Do people have opinions about this?
> >>      >>
> >>      >> One comparable package is RGtk2:  if Gtk2 isn't install, it offers
> >> to install it.  I could probably do that for XQuartz.  If the user says no,
> >> RGtk2 gives really ugly error messages.  rgl can work without XQuartz, but
> >> as I already mentioned, making this work is complicated, so I'd like
> >> something simple for now.
> >>      >>
> >>      >> Duncan Murdoch
> >>      >>
> >>      >> ______________________________________________
> >>      >> R-devel at r-project.org mailing list
> >>      >> https://stat.ethz.ch/mailman/listinfo/r-devel
> >>
> >>      > ______________________________________________
> >>      > R-devel at r-project.org mailing list
> >>      > https://stat.ethz.ch/mailman/listinfo/r-devel
> >>
> >
> > ______________________________________________
> > R-devel at r-project.org mailing list
> > https://stat.ethz.ch/mailman/listinfo/r-devel


From albapompeo at gmail.com  Mon Feb  1 18:38:27 2016
From: albapompeo at gmail.com (Alba Pompeo)
Date: Mon, 1 Feb 2016 15:38:27 -0200
Subject: [Rd] Wrong config check for __libc_stack_end
In-Reply-To: <CAJDAfTAS4EtNqNaaFGUm2f+0mGzsZuVAWyjd1j5P0LPP2f92pQ@mail.gmail.com>
References: <CAJDAfTBZ5FNAsPuoRyk6CLEOPKG-JpY4OoQ3On-brcHS6UnafA@mail.gmail.com>
	<CAJDAfTAC1U92DXWvxkx7U9ORtJXtY+_e8i3MT85B3o6MsaEkKA@mail.gmail.com>
	<22191.8837.813670.863210@stat.math.ethz.ch>
	<AB464163-D2A0-41EA-A4B1-74412D55AD47@r-project.org>
	<CAJDAfTBqWuG53=a8ei63ZFmCjXzTFJ6kQmKG7c20f5zqiHoRyw@mail.gmail.com>
	<5A694E77-F32F-41C4-8D6D-1E1119ABFCB1@r-project.org>
	<CAJDAfTAS4EtNqNaaFGUm2f+0mGzsZuVAWyjd1j5P0LPP2f92pQ@mail.gmail.com>
Message-ID: <CAJDAfTDnnLbi-iViCMdr5CkkZ8AeitVjdiEO0odDQm47sWj8uA@mail.gmail.com>

But it looks like R is working. I found the R binary on build/bin/R
I ran it and it works.
Should I be worried about the make check log?

@Isaac Dunham
Can you please test this on your system too?
Maybe R can be packaged soon?

Ciao.


On Mon, Feb 1, 2016 at 3:33 PM, Alba Pompeo <albapompeo at gmail.com> wrote:
> Here's what I did.
>
> svn checkout https://svn.r-project.org/R/trunk/
> cd ./trunk
> aclocal -I m4 && autoconf
> tools/rsync-recommended
> cd ..
> mkdir build
> cd build
> ../trunk/configure
> make
> make check
>
> On make check it gives an error.
> Here's the log.
> http://pastebin.com/raw/1qfjqQY2
>
>
> On Mon, Feb 1, 2016 at 1:53 PM, Simon Urbanek
> <simon.urbanek at r-project.org> wrote:
>>
>> On Feb 1, 2016, at 9:56 AM, Alba Pompeo <albapompeo at gmail.com> wrote:
>>
>>> @Simon. Here's what I did.
>>> I checked out R revision 70059.
>>> Ran export r_cv_libc_stack_end=no. (otherwise it would give that error
>>> we talked about before)
>>
>> No, the whole point was to test this behavior. I see that the fix is in configure.ac but not configure so you'll need to run something like
>> aclocal -I m4 && autoconf
>> to update it.
>>
>> Also please don't build in the sources - you'll have trouble making sure they are clean. It is recommended to build in a separate directory (see the docs).
>>
>>
>>> Ran ./configure --without-recommended-packages. (otherwise it would
>>> complain of not finding ./src/library/Recommended/MASS_*.tar.gz)
>>
>> I guess you forgot to run
>> tools/rsync-recommended
>> perhaps? It doesn't matter either way for the above issues, but it's probably better to build with recommended packages.
>>
>> Cheers,
>> Simon
>>
>>
>>> Ran make.
>>> Ran make check. Log is here - http://pastebin.com/raw/cGJgqB8p
>>>
>>> What do you think? Is there anything else I can do to help solve this issue?
>>>
>>>
>>>
>>> On Mon, Feb 1, 2016 at 11:36 AM, Simon Urbanek
>>> <simon.urbanek at r-project.org> wrote:
>>>>
>>>> On Feb 1, 2016, at 4:16 AM, Martin Maechler <maechler at stat.math.ethz.ch> wrote:
>>>>
>>>>>>>>>> Alba Pompeo <albapompeo at gmail.com>
>>>>>>>>>>   on Fri, 29 Jan 2016 08:23:26 -0200 writes:
>>>>>
>>>>>> Here is my log from 'make check' using an Intel i5 64-bit
>>>>>> processor - http://pastebin.com/raw/N6SYAuFX Here is
>>>>>> Isaac's log from 'make check' using an Intel Atom 32-bit
>>>>>> processor - http://pastebin.com/raw/sey6DEk9
>>>>>
>>>>>> We are both on Alpine Linux, which uses the musl
>>>>>> libc. http://www.musl-libc.org/
>>>>>
>>>>>> Thank you very much.
>>>>>
>>>>> It probably would have helped to choose a different subject
>>>>> which I now do.
>>>>>
>>>>
>>>> Agreed, since there is actually no abuse, case was easily dismissed as bogus given the subject.
>>>>
>>>>
>>>>>> On Thu, Jan 28, 2016 at 9:54 AM, Alba Pompeo
>>>>>> <albapompeo at gmail.com> wrote:
>>>>>>> Hello, developers of R.
>>>>>>>
>>>>>>> I have been unsuccessfully trying to build R on a musl
>>>>>>> libc system for the last days.  ./configure works, but
>>>>>>> make fails. The command that errors out is here -
>>>>>>> http://pastebin.com/raw/UwFRsiqT
>>>>>>>
>>>>>>> It was brought to my attention that this is a (very
>>>>>>> longstanding) abuse of a private glibc symbol in R.
>>>>>>>
>>>>>>> In R 3.2.3, it seems that configure is trying to test for
>>>>>>> it on Linux.  It apparently fails to accurately test (as
>>>>>>> demonstrated by the link error), perhaps because the test
>>>>>>> program does not actually *use* __libc_stack_end so it
>>>>>>> gets optimized out. (See line 35500 or so in
>>>>>>> R-3.2.3/configure.)  Ideally, the test program would
>>>>>>> check that a pointer to __libc_stack_end is non-null, but
>>>>>>> that's an autoconf bug.
>>>>>
>>>>> So, ideally someone who knows autoconf much better than I do
>>>>> should submit a bug report to the autoconf maintainers.
>>>>>
>>>>
>>>> @Alba, can you, please, check that your hypothesis actually holds true and the latest R from trunk fixes the check for you?
>>>>
>>>>
>>>>> Back to R: I'm not familiar with that part of the code, neither
>>>>> the configuration, nor the usage (in  R/src/unix/system.c ).
>>>>> However, that code seems to be using a a glibc "feature" widely
>>>>> available which does help making R startup (a very tiny bit ??)
>>>>> faster.
>>>>>
>>>>
>>>> No, it's actually very crucial as it is used to detect stack overflows.
>>>>
>>>> Cheers,
>>>> Simon
>>>>
>>>>
>>>>
>>>>>>> A work around was to 'export r_cv_libc_stack_end=no'
>>>>>>> before configuring R.
>>>>>
>>>>> which *does* solve that problem, right?
>>>>>
>>>>>>> However, there are a couple little issues with non-ASCII
>>>>>>> text and a *lot* of math differences, many of which say
>>>>>>> "*no* convergence: NOTIFY R-core!".
>>>>>
>>>>> Hmm, I may be off, but these would look like entirely unrelated
>>>>> with the libc_stack_end availibility, wouldn't they ?
>>>>>
>>>>> Maybe you / the musl developers should try to make those C
>>>>> libraries more "standard", notably because I would see math
>>>>> differences as something pretty grave for R, and indeed, I would
>>>>> not want to use a platform where R's math functions work
>>>>> incompatibly with all other platforms ... but maybe I
>>>>> misunderstand completely.
>>>>>
>>>>> Hmm... I've found this,
>>>>>
>>>>> http://wiki.musl-libc.org/wiki/Functional_differences_from_glibc#Floating-point_and_mathematical_library
>>>>>
>>>>> which make what you say above more relevant/interesting.
>>>>>
>>>>> Still, from this thread I get that the C source code of R needs
>>>>> considerable configuration patches before R can work with musl.
>>>>> But that needs another thread, something like  'Building R with musl'.
>>>>>
>>>>>>> Until these are resolved, R can't be packaged for
>>>>>>> distributions that use musl, such as Alpine Linux.
>>>>>
>>>>> which I agree would not be ideal.
>>>>> Martin
>>>>>
>>>>> --
>>>>> Martin <Maechler at stat.math.ethz.ch>  http://stat.ethz.ch/people/maechler
>>>>> Seminar f?r Statistik, ETH Z?rich
>>>>>
>>>>> ______________________________________________
>>>>> R-devel at r-project.org mailing list
>>>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>>>>
>>>>
>>>
>>


From maechler at stat.math.ethz.ch  Mon Feb  1 18:49:24 2016
From: maechler at stat.math.ethz.ch (Martin Maechler)
Date: Mon, 1 Feb 2016 18:49:24 +0100
Subject: [Rd] More problems with building R on a musl platform
In-Reply-To: <CAJDAfTAS4EtNqNaaFGUm2f+0mGzsZuVAWyjd1j5P0LPP2f92pQ@mail.gmail.com>
References: <CAJDAfTBZ5FNAsPuoRyk6CLEOPKG-JpY4OoQ3On-brcHS6UnafA@mail.gmail.com>
	<CAJDAfTAC1U92DXWvxkx7U9ORtJXtY+_e8i3MT85B3o6MsaEkKA@mail.gmail.com>
	<22191.8837.813670.863210@stat.math.ethz.ch>
	<AB464163-D2A0-41EA-A4B1-74412D55AD47@r-project.org>
	<CAJDAfTBqWuG53=a8ei63ZFmCjXzTFJ6kQmKG7c20f5zqiHoRyw@mail.gmail.com>
	<5A694E77-F32F-41C4-8D6D-1E1119ABFCB1@r-project.org>
	<CAJDAfTAS4EtNqNaaFGUm2f+0mGzsZuVAWyjd1j5P0LPP2f92pQ@mail.gmail.com>
Message-ID: <22191.39588.184490.95069@stat.math.ethz.ch>

>>>>> Alba Pompeo <albapompeo at gmail.com>
>>>>>     on Mon, 1 Feb 2016 15:33:11 -0200 writes:

    > Here's what I did.
    > svn checkout https://svn.r-project.org/R/trunk/
    > cd ./trunk
    > aclocal -I m4 && autoconf
    > tools/rsync-recommended
    > cd ..
    > mkdir build
    > cd build
    > ../trunk/configure
    > make
    > make check

    > On make check it gives an error.
    > Here's the log.
    > http://pastebin.com/raw/1qfjqQY2

Thank you.  It shows some output differences for complex
arithmetic, which *may* be a bad sign for the  musl routines, or
the (also alternative ??)  math lib  you have on your platform.
But these differences where not leading to the failure, 
rather is the reason close to the end of the log:
------------------------------------------------
make[3]: *** [reg-tests-1c.Rout] Error 1
------------------------------------------------

and these are the very latest regression checks, so they should not fail.
If you want, you can also make the
   tests/reg-tests-1c.Rout.fail

file available via a link above,
but to me, it currently looks there needs to be a bit more work
on your system libraries (or possibly on our configuration) side
before you should bundle R with your Alpine Linux.

I'd call it "unsafe" for now.
Martin

--
Martin Maechler, ETH Zurich and R Core Team.

    >>>> On Feb 1, 2016, at 4:16 AM, Martin Maechler <maechler at stat.math.ethz.ch> wrote:
    >>>> 
    >>>>>>>>>> Alba Pompeo <albapompeo at gmail.com>
    >>>>>>>>>> on Fri, 29 Jan 2016 08:23:26 -0200 writes:

  [.........]

    >>>>>>> However, there are a couple little issues with non-ASCII
    >>>>>>> text and a *lot* of math differences, many of which say
    >>>>>>> "*no* convergence: NOTIFY R-core!".
    >>>>> 
    >>>>> Hmm, I may be off, but these would look like entirely unrelated
    >>>>> with the libc_stack_end availibility, wouldn't they ?
    >>>>> 
    >>>>> Maybe you / the musl developers should try to make those C
    >>>>> libraries more "standard", notably because I would see math
    >>>>> differences as something pretty grave for R, and indeed, I would
    >>>>> not want to use a platform where R's math functions work
    >>>>> incompatibly with all other platforms ... but maybe I
    >>>>> misunderstand completely.
    >>>>> 
    >>>>> Hmm... I've found this,
    >>>>> 
    >>>>> http://wiki.musl-libc.org/wiki/Functional_differences_from_glibc#Floating-point_and_mathematical_library
    >>>>> 
    >>>>> which make what you say above more relevant/interesting.
    >>>>> 
    >>>>> Still, from this thread I get that the C source code of R needs
    >>>>> considerable configuration patches before R can work with musl.
    >>>>> But that needs another thread, something like  'Building R with musl'.
    >>>>> 
    >>>>>>> Until these are resolved, R can't be packaged for
    >>>>>>> distributions that use musl, such as Alpine Linux.
    >>>>> 
    >>>>> which I agree would not be ideal.
    >>>>> Martin
    >>>>> 
    >>>>> --
    >>>>> Martin <Maechler at stat.math.ethz.ch>  http://stat.ethz.ch/people/maechler
    >>>>> Seminar f?r Statistik, ETH Z?rich


From albapompeo at gmail.com  Mon Feb  1 18:54:21 2016
From: albapompeo at gmail.com (Alba Pompeo)
Date: Mon, 1 Feb 2016 15:54:21 -0200
Subject: [Rd] More problems with building R on a musl platform
In-Reply-To: <22191.39588.184490.95069@stat.math.ethz.ch>
References: <CAJDAfTBZ5FNAsPuoRyk6CLEOPKG-JpY4OoQ3On-brcHS6UnafA@mail.gmail.com>
	<CAJDAfTAC1U92DXWvxkx7U9ORtJXtY+_e8i3MT85B3o6MsaEkKA@mail.gmail.com>
	<22191.8837.813670.863210@stat.math.ethz.ch>
	<AB464163-D2A0-41EA-A4B1-74412D55AD47@r-project.org>
	<CAJDAfTBqWuG53=a8ei63ZFmCjXzTFJ6kQmKG7c20f5zqiHoRyw@mail.gmail.com>
	<5A694E77-F32F-41C4-8D6D-1E1119ABFCB1@r-project.org>
	<CAJDAfTAS4EtNqNaaFGUm2f+0mGzsZuVAWyjd1j5P0LPP2f92pQ@mail.gmail.com>
	<22191.39588.184490.95069@stat.math.ethz.ch>
Message-ID: <CAJDAfTAmq9oO4ZKrUZO3J6bXQbY0He5BV=O7QrSgPPrn7Xe5_w@mail.gmail.com>

Here is tests/reg-tests-1c.Rout.fail -
http://pastebin.com/raw/3QVDUBwT

About the libm, I don't know which one R uses.
musl has its on libm. http://git.musl-libc.org/cgit/musl/tree/src/math
I think I also have openlibm installed, but I don't think that's used.

Any more information I can give to help debug this?

Thanks.


On Mon, Feb 1, 2016 at 3:49 PM, Martin Maechler
<maechler at stat.math.ethz.ch> wrote:
>>>>>> Alba Pompeo <albapompeo at gmail.com>
>>>>>>     on Mon, 1 Feb 2016 15:33:11 -0200 writes:
>
>     > Here's what I did.
>     > svn checkout https://svn.r-project.org/R/trunk/
>     > cd ./trunk
>     > aclocal -I m4 && autoconf
>     > tools/rsync-recommended
>     > cd ..
>     > mkdir build
>     > cd build
>     > ../trunk/configure
>     > make
>     > make check
>
>     > On make check it gives an error.
>     > Here's the log.
>     > http://pastebin.com/raw/1qfjqQY2
>
> Thank you.  It shows some output differences for complex
> arithmetic, which *may* be a bad sign for the  musl routines, or
> the (also alternative ??)  math lib  you have on your platform.
> But these differences where not leading to the failure,
> rather is the reason close to the end of the log:
> ------------------------------------------------
> make[3]: *** [reg-tests-1c.Rout] Error 1
> ------------------------------------------------
>
> and these are the very latest regression checks, so they should not fail.
> If you want, you can also make the
>    tests/reg-tests-1c.Rout.fail
>
> file available via a link above,
> but to me, it currently looks there needs to be a bit more work
> on your system libraries (or possibly on our configuration) side
> before you should bundle R with your Alpine Linux.
>
> I'd call it "unsafe" for now.
> Martin
>
> --
> Martin Maechler, ETH Zurich and R Core Team.
>
>     >>>> On Feb 1, 2016, at 4:16 AM, Martin Maechler <maechler at stat.math.ethz.ch> wrote:
>     >>>>
>     >>>>>>>>>> Alba Pompeo <albapompeo at gmail.com>
>     >>>>>>>>>> on Fri, 29 Jan 2016 08:23:26 -0200 writes:
>
>   [.........]
>
>     >>>>>>> However, there are a couple little issues with non-ASCII
>     >>>>>>> text and a *lot* of math differences, many of which say
>     >>>>>>> "*no* convergence: NOTIFY R-core!".
>     >>>>>
>     >>>>> Hmm, I may be off, but these would look like entirely unrelated
>     >>>>> with the libc_stack_end availibility, wouldn't they ?
>     >>>>>
>     >>>>> Maybe you / the musl developers should try to make those C
>     >>>>> libraries more "standard", notably because I would see math
>     >>>>> differences as something pretty grave for R, and indeed, I would
>     >>>>> not want to use a platform where R's math functions work
>     >>>>> incompatibly with all other platforms ... but maybe I
>     >>>>> misunderstand completely.
>     >>>>>
>     >>>>> Hmm... I've found this,
>     >>>>>
>     >>>>> http://wiki.musl-libc.org/wiki/Functional_differences_from_glibc#Floating-point_and_mathematical_library
>     >>>>>
>     >>>>> which make what you say above more relevant/interesting.
>     >>>>>
>     >>>>> Still, from this thread I get that the C source code of R needs
>     >>>>> considerable configuration patches before R can work with musl.
>     >>>>> But that needs another thread, something like  'Building R with musl'.
>     >>>>>
>     >>>>>>> Until these are resolved, R can't be packaged for
>     >>>>>>> distributions that use musl, such as Alpine Linux.
>     >>>>>
>     >>>>> which I agree would not be ideal.
>     >>>>> Martin
>     >>>>>
>     >>>>> --
>     >>>>> Martin <Maechler at stat.math.ethz.ch>  http://stat.ethz.ch/people/maechler
>     >>>>> Seminar f?r Statistik, ETH Z?rich


From dwinsemius at comcast.net  Mon Feb  1 19:42:30 2016
From: dwinsemius at comcast.net (David Winsemius)
Date: Mon, 1 Feb 2016 10:42:30 -0800
Subject: [Rd] In plot.ts,
	las=1 applies to ylab with multiple series and not to axis labels
In-Reply-To: <22191.14765.67073.41290@stat.math.ethz.ch>
References: <56AD2C6C.8090804@prodsyse.com>
	<22191.14765.67073.41290@stat.math.ethz.ch>
Message-ID: <96483F17-A3AA-46CD-8C11-6B289C849DBB@comcast.net>


> On Feb 1, 2016, at 2:55 AM, Martin Maechler <maechler at stat.math.ethz.ch> wrote:
> 
>>>>>> Spencer Graves <spencer.graves at prodsyse.com>
>>>>>>    on Sat, 30 Jan 2016 15:34:36 -0600 writes:
> 
>> Hello:
>> In plot.ts, las=1 applies to ylab and not axis labels with 
>> multiple series.  The documented behavior is to have las=1 apply to axis 
>> labels and not ylab.
> 
>> To see this, please try the following:
> 
>> plot.ts(1:4, las=1)
> 
>> plot.ts(matrix(1:8, 4), las=1)
> 
>> On my Mac, the second displays behavior I did not expect.  If 
>> I've done something stupid here, please advise;  it won't be the first 
>> time ;-)
> 
> Nothing stupid; indeed your expectations are correct and there's
> a small lapsus in R there, the '...' not being passed to the axis(..)
> calls in the matrix case.
> 

I'm hoping you can at the same time look at the unexpected behavior I noted in a simple `plot` call that I observed over the weekend, also on a Mac, but it's hard to believe this is related to the OS..

plot(1:10,1:10, pch=20, lwd=c(1,1,1,3,1) ,type='b')

What I'm seeing is the size of the points are accepting the 'lwd' argument when my reading of the docs is that it should be the intervening segments that accept it.

And I echo Duncan's thanks.


> I'm currently checking the obvious patch and will commit it to
> R-devel and R-patched (unless I see problems in our checks).
> 
>> Thanks to all the developers who have made R such a great 
>> contribution to humanity.
> 
> Thank you for the flowers!
> Martin Maechler
> 
> 
>> Best Wishes,
>> Spencer Graves
> 
>> sessionInfo()
>> R version 3.2.3 (2015-12-10)
>> Platform: x86_64-apple-darwin13.4.0 (64-bit)
>> Running under: OS X 10.11.2 (El Capitan)
> 
>    ....
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel

David Winsemius
Alameda, CA, USA


From simon.urbanek at r-project.org  Mon Feb  1 21:11:59 2016
From: simon.urbanek at r-project.org (Simon Urbanek)
Date: Mon, 1 Feb 2016 15:11:59 -0500
Subject: [Rd] Wrong config check for __libc_stack_end
In-Reply-To: <22191.38567.679990.212017@stat.math.ethz.ch>
References: <CAJDAfTBZ5FNAsPuoRyk6CLEOPKG-JpY4OoQ3On-brcHS6UnafA@mail.gmail.com>
	<CAJDAfTAC1U92DXWvxkx7U9ORtJXtY+_e8i3MT85B3o6MsaEkKA@mail.gmail.com>
	<22191.8837.813670.863210@stat.math.ethz.ch>
	<AB464163-D2A0-41EA-A4B1-74412D55AD47@r-project.org>
	<22191.38567.679990.212017@stat.math.ethz.ch>
Message-ID: <F7A05E58-8D4A-4C35-9FE9-5D2279C5B305@r-project.org>


On Feb 1, 2016, at 12:32 PM, Martin Maechler <maechler at stat.math.ethz.ch> wrote:

>>>>>> Simon Urbanek <simon.urbanek at r-project.org>
>>>>>>    on Mon, 1 Feb 2016 08:36:56 -0500 writes:
> 
>> On Feb 1, 2016, at 4:16 AM, Martin Maechler <maechler at stat.math.ethz.ch> wrote:
> 
> [..............]   
> 
>>> Back to R: I'm not familiar with that part of the code, neither
>>> the configuration, nor the usage (in  R/src/unix/system.c ).
>>> However, that code seems to be using a a glibc "feature" widely
>>> available which does help making R startup (a very tiny bit ??)
>>> faster.
>>> 
> 
>> No, it's actually very crucial as it is used to detect stack overflows.
> 
>> Cheers,
>> Simon
> 
> 
> Well, I think you misunderstood what I meant to say (or then I'm
> happy for clarification if I misunderstood you) :
> 
> The #ifdef ... #elseif ... #else ... # endif
> branch which *uses* the __libc_stack_end "variable" would
> hopefully be a speedup in comparison with the alternatives; from
> system.c  mentioned above:
> 
> 
> #if defined(HAVE_LIBC_STACK_END)
>    R_CStackStart = (uintptr_t) __libc_stack_end;
> #elif defined(HAVE_KERN_USRSTACK)
>    {
> 	/* Borrowed from mzscheme/gc/os_dep.c */
> 	int nm[2] = {CTL_KERN, KERN_USRSTACK};
> 	void * base;
> 	size_t len = sizeof(void *);
> 	(void) sysctl(nm, 2, &base, &len, NULL, 0);
> 	R_CStackStart = (uintptr_t) base;
>    }
> #else
>    if(R_running_as_main_program) {
> 	/* This is not the main program, but unless embedded it is
> 	   near the top, 5540 bytes away when checked. */
> 	R_CStackStart = (uintptr_t) &i + (6000 * R_CStackDir);
>    }
> #endif
>    if(R_CStackStart == -1) R_CStackLimit = -1; /* never set */
> 
>    /* printf("stack limit %ld, start %lx dir %d \n", R_CStackLimit,
> 	      R_CStackStart, R_CStackDir); */
> }
> #endif
> 
> so I'd hope that typically  R_CStackStart  would be set usefully
> also when the  __libc_stack_end  is not available.
> 
> If not, that would mean that for the 'musl' lovers, R would not
> be able to detect stack overflows.... which would probably be
> quite undesirable.
> 

But how do you know that the kernel method will work there? What I meant is that the facility it provides is important - it's unclear under what circumstances it is necessary or not - that depends on the kernel, OS, hardware etc. Hence __libc_stack_end is not just a speed hack (which your comment seemed to imply) - when available it is reliable and thus preferred, wheres are fallback methods may or may not work and to varying degree of reliability.

Cheers,
Simon


From maechler at stat.math.ethz.ch  Tue Feb  2 12:05:21 2016
From: maechler at stat.math.ethz.ch (Martin Maechler)
Date: Tue, 2 Feb 2016 12:05:21 +0100
Subject: [Rd] More problems with building R on a musl platform
In-Reply-To: <CAJDAfTAmq9oO4ZKrUZO3J6bXQbY0He5BV=O7QrSgPPrn7Xe5_w@mail.gmail.com>
References: <CAJDAfTBZ5FNAsPuoRyk6CLEOPKG-JpY4OoQ3On-brcHS6UnafA@mail.gmail.com>
	<CAJDAfTAC1U92DXWvxkx7U9ORtJXtY+_e8i3MT85B3o6MsaEkKA@mail.gmail.com>
	<22191.8837.813670.863210@stat.math.ethz.ch>
	<AB464163-D2A0-41EA-A4B1-74412D55AD47@r-project.org>
	<CAJDAfTBqWuG53=a8ei63ZFmCjXzTFJ6kQmKG7c20f5zqiHoRyw@mail.gmail.com>
	<5A694E77-F32F-41C4-8D6D-1E1119ABFCB1@r-project.org>
	<CAJDAfTAS4EtNqNaaFGUm2f+0mGzsZuVAWyjd1j5P0LPP2f92pQ@mail.gmail.com>
	<22191.39588.184490.95069@stat.math.ethz.ch>
	<CAJDAfTAmq9oO4ZKrUZO3J6bXQbY0He5BV=O7QrSgPPrn7Xe5_w@mail.gmail.com>
Message-ID: <22192.36209.688943.979554@stat.math.ethz.ch>

>>>>> "AP" == Alba Pompeo <albapompeo at gmail.com>
>>>>>     on Mon, 1 Feb 2016 15:54:21 -0200 writes:

    AP> Here is tests/reg-tests-1c.Rout.fail -
    AP> http://pastebin.com/raw/3QVDUBwT


Thank you .... so it fails only at the very very end,
where I had added regression checks for a very recent bug
fix... but when I see your result ... embarassingly ... I guess
that that *check* may have been wrong..

Otherwise inspecting that file:

- shows some possible printf
  differences between musl and glibc  but they don't look problematic.

- considerably more problematic seems to me that the random
  numbers differ in some places *AFTER* a set.seed() call.  That
  should not happen {unless we call a randomized algorithm
  somewhere before that, and the algorithm does not converge in
  the same number of steps ... that's possible... e.g., kmeans()
  is "famous" for that}
  

    AP> About the libm, I don't know which one R uses.  musl has
    AP> its on
    AP> libm. http://git.musl-libc.org/cgit/musl/tree/src/math
    AP> I think I also have openlibm installed, but I don't think
    AP> that's used.

    AP> Any more information I can give to help debug this?

Maybe just privately, to confirm my suspicion above:
Send me privately the result of 'f1' from that R script.

Martin





    AP> On Mon, Feb 1, 2016 at 3:49 PM, Martin Maechler
    AP> <maechler at stat.math.ethz.ch> wrote:
    >>>>>>> Alba Pompeo <albapompeo at gmail.com> on Mon, 1 Feb
    >>>>>>> 2016 15:33:11 -0200 writes:
    >> 
    >> > Here's what I did.  > svn checkout
    >> https://svn.r-project.org/R/trunk/ > cd ./trunk > aclocal
    >> -I m4 && autoconf > tools/rsync-recommended > cd ..  >
    >> mkdir build > cd build > ../trunk/configure > make > make
    >> check
    >> 
    >> > On make check it gives an error.  > Here's the log.  >
    >> http://pastebin.com/raw/1qfjqQY2
    >> 
    >> Thank you.  It shows some output differences for complex
    >> arithmetic, which *may* be a bad sign for the musl
    >> routines, or the (also alternative ??)  math lib you have
    >> on your platform.  But these differences where not
    >> leading to the failure, rather is the reason close to the
    >> end of the log:
    >> ------------------------------------------------
    >> make[3]: *** [reg-tests-1c.Rout] Error 1
    >> ------------------------------------------------
    >> 
    >> and these are the very latest regression checks, so they
    >> should not fail.  If you want, you can also make the
    >> tests/reg-tests-1c.Rout.fail
    >> 
    >> file available via a link above, but to me, it currently
    >> looks there needs to be a bit more work on your system
    >> libraries (or possibly on our configuration) side before
    >> you should bundle R with your Alpine Linux.
    >> 
    >> I'd call it "unsafe" for now.  Martin
    >> 
    >> --
    >> Martin Maechler, ETH Zurich and R Core Team.
    >> 
    >> >>>> On Feb 1, 2016, at 4:16 AM, Martin Maechler
    >> <maechler at stat.math.ethz.ch> wrote:
    >> >>>>
    >> >>>>>>>>>> Alba Pompeo <albapompeo at gmail.com> >>>>>>>>>>
    >> on Fri, 29 Jan 2016 08:23:26 -0200 writes:
    >> 
    >> [.........]
    >> 
    >> >>>>>>> However, there are a couple little issues with
    >> non-ASCII >>>>>>> text and a *lot* of math differences,
    >> many of which say >>>>>>> "*no* convergence: NOTIFY
    >> R-core!".
    >> >>>>>
    >> >>>>> Hmm, I may be off, but these would look like
    >> entirely unrelated >>>>> with the libc_stack_end
    >> availibility, wouldn't they ?
    >> >>>>>
    >> >>>>> Maybe you / the musl developers should try to make
    >> those C >>>>> libraries more "standard", notably because
    >> I would see math >>>>> differences as something pretty
    >> grave for R, and indeed, I would >>>>> not want to use a
    >> platform where R's math functions work >>>>> incompatibly
    >> with all other platforms ... but maybe I >>>>>
    >> misunderstand completely.
    >> >>>>>
    >> >>>>> Hmm... I've found this,
    >> >>>>>
    >> >>>>>
    >> http://wiki.musl-libc.org/wiki/Functional_differences_from_glibc#Floating-point_and_mathematical_library
    >> >>>>>
    >> >>>>> which make what you say above more
    >> relevant/interesting.
    >> >>>>>
    >> >>>>> Still, from this thread I get that the C source
    >> code of R needs >>>>> considerable configuration patches
    >> before R can work with musl.  >>>>> But that needs
    >> another thread, something like 'Building R with musl'.
    >> >>>>>
    >> >>>>>>> Until these are resolved, R can't be packaged for
    >> >>>>>>> distributions that use musl, such as Alpine
    >> Linux.
    >> >>>>>
    >> >>>>> which I agree would not be ideal.  >>>>> Martin
    >> >>>>>
    >> >>>>> --
    >> >>>>> Martin <Maechler at stat.math.ethz.ch>
    >> http://stat.ethz.ch/people/maechler >>>>> Seminar f?r
    >> Statistik, ETH Z?rich


From albapompeo at gmail.com  Thu Feb  4 17:20:42 2016
From: albapompeo at gmail.com (Alba Pompeo)
Date: Thu, 4 Feb 2016 14:20:42 -0200
Subject: [Rd] Fwd: [musl] strptime() question
In-Reply-To: <20160204160708.GP9349@brightrain.aerifal.cx>
References: <CAJDAfTDpBrooMDDJ=p1xf5c_j6Rn9nAuAnBCvdotzUcgBkQRzA@mail.gmail.com>
	<20160204160708.GP9349@brightrain.aerifal.cx>
Message-ID: <CAJDAfTCENy0dyAYP5612OSMnNBc5U-AGjEoOgVgF1VisjDs8=g@mail.gmail.com>

There is incompatibility between R strptime and musl libc. I posted
about it on their mailing list, but they need more information I can't
provide, so I'm forwarding the message here in hope R developers can
help. Thanks.


---------- Forwarded message ----------
From: Rich Felker <dalias at libc.org>
Date: Thu, Feb 4, 2016 at 2:07 PM
Subject: Re: [musl] strptime() question
To: Alba Pompeo <albapompeo at gmail.com>
Cc: musl at lists.openwall.com, Martin Maechler <maechler at stat.math.ethz.ch>


On Thu, Feb 04, 2016 at 01:27:40PM -0200, Alba Pompeo wrote:
> Hello musl.
>
> I've built R on a musl system and "make check-all" fails because R
> does not get correct timezone information from the system.
>
> Here's the error -
> http://pastebin.com/raw/32D3ngNZ
>
> This would be correct,
>
> > difftime(
> +     as.POSIXct(c("1970-01-01 00:00:00", "1970-01-01 12:00:00"), tz="EST5EDT"),
> +     as.POSIXct(c("1970-01-01 00:00:00", "1970-01-01 00:00:00"), tz="UTC"))
> Time differences in hours
> [1]  5 17
>
> but my system gives   4 16  which would suggest that it thinks that
> there is only 4 hours time difference between  UTC  and  EST5EDT and
> that is just wrong.
>
> The above can be translated to this (slightly more low-level) R code which
> is already somewhat close to the internal C code of R :
>
>   > t0 <- strptime("1970-01-01 00:00:00", "%Y-%m-%d %H:%M:%OS", tz="UTC")
>   > as.numeric(t0)
>   [1] 0
>
>   > t1 <- strptime("1970-01-01 00:00:00", "%Y-%m-%d %H:%M:%OS", tz="EST5EDT")
>   > as.numeric(t1)
>   [1] 18000
>   > 18000 / 3600
>   [1] 5
>   >
>
> That's why its 5 hours.
> R's  strptime()  is close to the C library  strptime(), so think musl
> specialists should have it easy to do the above from C and find out
> why you get 4 hour instead of 5 hour difference.
>
> I'm certain this isn't a problem with R and I think it's up to me to
> ensure that your system's  C library strptime() function returns the
> correct numbers for the above example, but I can't understand why it
> doesn't.
>
> Can anyone help here?
> Thanks a lot.

I think we need to understand how R's strptime function implements its
tz argument, since this is not part of the POSIX strptime API. It's
possible that there's a bug in musl here, but it seems equally
possible that R is doing some dubious hacks with switching timezones.

I'm also wondering what you're expecting from the timezone name
EST5EDT, which is not generally usable; it's in POSIX TZ form rather
than zoneinfo, but it lacks any information about when the switch to
daylight time happens, and the defaults are not correct with respect
to modern policy.

Rich


From simon.urbanek at r-project.org  Thu Feb  4 18:01:47 2016
From: simon.urbanek at r-project.org (Simon Urbanek)
Date: Thu, 4 Feb 2016 12:01:47 -0500
Subject: [Rd] [musl] strptime() question
In-Reply-To: <CAJDAfTCENy0dyAYP5612OSMnNBc5U-AGjEoOgVgF1VisjDs8=g@mail.gmail.com>
References: <CAJDAfTDpBrooMDDJ=p1xf5c_j6Rn9nAuAnBCvdotzUcgBkQRzA@mail.gmail.com>
	<20160204160708.GP9349@brightrain.aerifal.cx>
	<CAJDAfTCENy0dyAYP5612OSMnNBc5U-AGjEoOgVgF1VisjDs8=g@mail.gmail.com>
Message-ID: <E98A2A10-27B5-48EF-988E-506F69E84BA6@r-project.org>


On Feb 4, 2016, at 11:20 AM, Alba Pompeo <albapompeo at gmail.com> wrote:

> There is incompatibility between R strptime and musl libc. I posted
> about it on their mailing list, but they need more information I can't
> provide, so I'm forwarding the message here in hope R developers can
> help. Thanks.
> 

Generally, it's using the standard tzset() call to set the time zone
http://pubs.opengroup.org/onlinepubs/009695399/functions/tzset.html

But you may want to post the full config.log and config.h somewhere since parts of the code depend on system capabilities which we don't know for musl.

Cheers,
Simon


> 
> ---------- Forwarded message ----------
> From: Rich Felker <dalias at libc.org>
> Date: Thu, Feb 4, 2016 at 2:07 PM
> Subject: Re: [musl] strptime() question
> To: Alba Pompeo <albapompeo at gmail.com>
> Cc: musl at lists.openwall.com, Martin Maechler <maechler at stat.math.ethz.ch>
> 
> 
> On Thu, Feb 04, 2016 at 01:27:40PM -0200, Alba Pompeo wrote:
>> Hello musl.
>> 
>> I've built R on a musl system and "make check-all" fails because R
>> does not get correct timezone information from the system.
>> 
>> Here's the error -
>> http://pastebin.com/raw/32D3ngNZ
>> 
>> This would be correct,
>> 
>>> difftime(
>> +     as.POSIXct(c("1970-01-01 00:00:00", "1970-01-01 12:00:00"), tz="EST5EDT"),
>> +     as.POSIXct(c("1970-01-01 00:00:00", "1970-01-01 00:00:00"), tz="UTC"))
>> Time differences in hours
>> [1]  5 17
>> 
>> but my system gives   4 16  which would suggest that it thinks that
>> there is only 4 hours time difference between  UTC  and  EST5EDT and
>> that is just wrong.
>> 
>> The above can be translated to this (slightly more low-level) R code which
>> is already somewhat close to the internal C code of R :
>> 
>>> t0 <- strptime("1970-01-01 00:00:00", "%Y-%m-%d %H:%M:%OS", tz="UTC")
>>> as.numeric(t0)
>>  [1] 0
>> 
>>> t1 <- strptime("1970-01-01 00:00:00", "%Y-%m-%d %H:%M:%OS", tz="EST5EDT")
>>> as.numeric(t1)
>>  [1] 18000
>>> 18000 / 3600
>>  [1] 5
>>> 
>> 
>> That's why its 5 hours.
>> R's  strptime()  is close to the C library  strptime(), so think musl
>> specialists should have it easy to do the above from C and find out
>> why you get 4 hour instead of 5 hour difference.
>> 
>> I'm certain this isn't a problem with R and I think it's up to me to
>> ensure that your system's  C library strptime() function returns the
>> correct numbers for the above example, but I can't understand why it
>> doesn't.
>> 
>> Can anyone help here?
>> Thanks a lot.
> 
> I think we need to understand how R's strptime function implements its
> tz argument, since this is not part of the POSIX strptime API. It's
> possible that there's a bug in musl here, but it seems equally
> possible that R is doing some dubious hacks with switching timezones.
> 
> I'm also wondering what you're expecting from the timezone name
> EST5EDT, which is not generally usable; it's in POSIX TZ form rather
> than zoneinfo, but it lacks any information about when the switch to
> daylight time happens, and the defaults are not correct with respect
> to modern policy.
> 
> Rich
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
> 


From dalias at libc.org  Thu Feb  4 22:32:49 2016
From: dalias at libc.org (Rich Felker)
Date: Thu, 4 Feb 2016 16:32:49 -0500
Subject: [Rd] Fwd:  [musl] strptime() question
In-Reply-To: <CAJDAfTBwMx5eb5L+A2fbCpMB1ez-N+KdNViu69HkxAqfZs6RCg@mail.gmail.com>
References: <CAJDAfTDpBrooMDDJ=p1xf5c_j6Rn9nAuAnBCvdotzUcgBkQRzA@mail.gmail.com>
	<20160204160708.GP9349@brightrain.aerifal.cx>
	<CAJDAfTCENy0dyAYP5612OSMnNBc5U-AGjEoOgVgF1VisjDs8=g@mail.gmail.com>
	<E98A2A10-27B5-48EF-988E-506F69E84BA6@r-project.org>
	<CAJDAfTBwMx5eb5L+A2fbCpMB1ez-N+KdNViu69HkxAqfZs6RCg@mail.gmail.com>
Message-ID: <20160204213249.GT9349@brightrain.aerifal.cx>

On Thu, Feb 04, 2016 at 04:35:22PM -0200, Alba Pompeo wrote:
> I forwarded our talk on musl mailing list to R mailing list.
> I got this response.
> Does it help?
> Also, what do you think about making a new email that's sent to both
> musl and R mailing list, that way devs from both projects can
> communicate? It's a tad inefficient for me to keep forwarding messages
> like this back and forth.

I'm cc'ing both lists now.

> ---------- Forwarded message ----------
> From: Simon Urbanek <simon.urbanek at r-project.org>
> Date: Thu, Feb 4, 2016 at 3:01 PM
> Subject: Re: [Rd] [musl] strptime() question
> To: Alba Pompeo <albapompeo at gmail.com>
> Cc: r-devel <r-devel at r-project.org>
> 
> 
> 
> On Feb 4, 2016, at 11:20 AM, Alba Pompeo <albapompeo at gmail.com> wrote:
> 
> > There is incompatibility between R strptime and musl libc. I posted
> > about it on their mailing list, but they need more information I can't
> > provide, so I'm forwarding the message here in hope R developers can
> > help. Thanks.
> 
> Generally, it's using the standard tzset() call to set the time zone
> http://pubs.opengroup.org/onlinepubs/009695399/functions/tzset.html

The tzset function doesn't really do much interesting; it just updates
some global state to match the current value of the TZ environment
variable, but most time.h functions do this already anyway. Anyway
this doesn't really answer the question of what R's strptime function
is doing to add timezone functionality onto the underlying system's
strptime. Is R changing the environment (this is highly unsafe in any
potentially-multithreaded process, BTW)? Is it using the globals set
by tzset to compute adjustments to the result?

Rich


From wdunlap at tibco.com  Fri Feb  5 18:49:13 2016
From: wdunlap at tibco.com (William Dunlap)
Date: Fri, 5 Feb 2016 09:49:13 -0800
Subject: [Rd] smooth()'s output attribute 'endrule'?
Message-ID: <CAF8bMcbwQC=K9Ph8k4xcRnETW=N897rRA70YKOnuq8ZMdUmK_A@mail.gmail.com>

What is the point of the 'endrule' attribute of smooth()'s return value?

For the simpler smooths (not involving 'S'?) it is value of the endrule
argument, for more complicated smooths it is the endrule not asked for (the
choices are 'Tukey' and 'copy').  For kind="S", it is not in the return
value, no matter what the input is.

kinds <- c("3RS3R", "3RSS", "3RSR", "3R", "3")
sapply(kinds, function(k)attr(smooth(sin(1:10),kind=k), "endrule"))
#  3RS3R    3RSS    3RSR      3R       3
# "copy"  "copy"  "copy" "Tukey" "Tukey"
sapply(kinds, function(k)attr(smooth(sin(1:10),kind=k, endrule="Tukey"),
"endrule"))
#  3RS3R    3RSS    3RSR      3R       3
# "copy"  "copy"  "copy" "Tukey" "Tukey"
sapply(kinds, function(k)attr(smooth(sin(1:10),kind=k, endrule="copy"),
"endrule"))
#  3RS3R    3RSS    3RSR      3R       3
#"Tukey" "Tukey" "Tukey"  "copy"  "copy"


Bill Dunlap
TIBCO Software
wdunlap tibco.com

	[[alternative HTML version deleted]]


From murdoch.duncan at gmail.com  Sat Feb  6 02:04:47 2016
From: murdoch.duncan at gmail.com (Duncan Murdoch)
Date: Fri, 5 Feb 2016 20:04:47 -0500
Subject: [Rd] problem submitting R bug;
	bug plotting in tiling window manager
In-Reply-To: <20160206002635.GA27075@ofb.net>
References: <20160206002635.GA27075@ofb.net>
Message-ID: <56B546AF.6010807@stats.uwo.ca>

You posted a bug report, but it had no content other than "til".  That's 
what many abusers of the system have done, so you were blocked.

I have read the first line of your bug report, and it says " I'm not 
sure if this is a bug with i3 or R ".  If you're not sure if it's a bug 
or not, then please post to R-devel.  That's a moderated list so if this 
is your first post, it may take a while to appear.

This probably seems unreasonable to you, but a lot of abuse is sent to 
the bug list, so we block it quite early.  I'll unblock you now, but 
please don't post there again unless your discussion on R-devel 
indicates this is a problem with R rather than i3.

Duncan Murdoch

On 05/02/2016 7:26 PM, frederik at ofb.net wrote:
> Dear Dirk Eddelbuettel and Duncan Murdoch,
>
> Thank you for your work on the wonderful R project!
>
> I recently attempted to submit a bug with your Bugzilla interface:
>
> https://bugs.r-project.org/bugzilla/enter_bug.cgi
>
> I created an account, typed in all my information, first checking
> details with another project. Then I clicked submit, and was taken to
> a web page with a big red banner, it said
>
>      Spammer
>      If you believe your account should be restored, please send email to explaining why.
>
> What a hostile thing to say to your users! I tried resubmitting my
> bug, but removing any links, and I still get the message - so it looks
> like my account has really been blocked. Please do something to warn
> your users about this so they can avoid the upset.
>
> Well, I don't know what it means to "email to explaining why", so I
> tried to subscribe to R-devel. However, it's been ten minutes and no
> confirmation email. So I tracked down your email addresses from the R
> website. I'm still cc'ing r-devel.
>
> I hope it is OK to send the bug by email. I really want to get back to
> what I was doing, but I don't want to lose the work I put into writing
> this bug report, so I'm attaching it to this message.
>
> Thank you,
>
> Frederick Eaton
>
>


From murdoch.duncan at gmail.com  Sat Feb  6 02:19:40 2016
From: murdoch.duncan at gmail.com (Duncan Murdoch)
Date: Fri, 5 Feb 2016 20:19:40 -0500
Subject: [Rd] problem submitting R bug;
	bug plotting in tiling window manager
In-Reply-To: <20160206002635.GA27075@ofb.net>
References: <20160206002635.GA27075@ofb.net>
Message-ID: <56B54A2C.10807@stats.uwo.ca>

On 05/02/2016 7:26 PM, frederik at ofb.net wrote:
> Dear Dirk Eddelbuettel and Duncan Murdoch,
>
> Thank you for your work on the wonderful R project!
>
> I recently attempted to submit a bug with your Bugzilla interface:
>
> https://bugs.r-project.org/bugzilla/enter_bug.cgi
>
> I created an account, typed in all my information, first checking
> details with another project. Then I clicked submit, and was taken to
> a web page with a big red banner, it said
>
>      Spammer
>      If you believe your account should be restored, please send email to explaining why.
>
> What a hostile thing to say to your users! I tried resubmitting my
> bug, but removing any links, and I still get the message - so it looks
> like my account has really been blocked. Please do something to warn
> your users about this so they can avoid the upset.

Your account isn't blocked now, but it wasn't easy to unblock it: you 
used a different email address in the submission, not the same one you 
used in this email.  At least one of the people who can deal with this 
kind of thing would now demand an apology from you before ever reading 
your email again.  I won't do that, but I have to admit, I don't like 
the fact that you wasted 10 minutes of my time. I'm Bcc'ing a couple of 
people who are working on putting together a better interface to the bug 
reporting system, so they know to deal with this kind of issue as well 
as all the others.

I'm not hostile, I just sound that way, because I've wasted a lot of 
time this week on issues like this.

Duncan Murdoch

(Here's my previous email to you, for the benefit of those who are Bcc'd:
> You posted a bug report, but it had no content other than "til".  That's
> what many abusers of the system have done, so you were blocked.
>
> I have read the first line of your bug report, and it says " I'm not
> sure if this is a bug with i3 or R ".  If you're not sure if it's a bug
> or not, then please post to R-devel.  That's a moderated list so if this
> is your first post, it may take a while to appear.
>
> This probably seems unreasonable to you, but a lot of abuse is sent to
> the bug list, so we block it quite early.  I'll unblock you now, but
> please don't post there again unless your discussion on R-devel
> indicates this is a problem with R rather than i3.
Duncan Murdoch
>
> Well, I don't know what it means to "email to explaining why", so I
> tried to subscribe to R-devel. However, it's been ten minutes and no
> confirmation email. So I tracked down your email addresses from the R
> website. I'm still cc'ing r-devel.
>
> I hope it is OK to send the bug by email. I really want to get back to
> what I was doing, but I don't want to lose the work I put into writing
> this bug report, so I'm attaching it to this message.
>
> Thank you,
>
> Frederick Eaton
>
>


From albapompeo at gmail.com  Sat Feb  6 13:35:28 2016
From: albapompeo at gmail.com (Alba Pompeo)
Date: Sat, 6 Feb 2016 10:35:28 -0200
Subject: [Rd] Fwd:  [musl] strptime() question
In-Reply-To: <20160204213249.GT9349@brightrain.aerifal.cx>
References: <CAJDAfTDpBrooMDDJ=p1xf5c_j6Rn9nAuAnBCvdotzUcgBkQRzA@mail.gmail.com>
	<20160204160708.GP9349@brightrain.aerifal.cx>
	<CAJDAfTCENy0dyAYP5612OSMnNBc5U-AGjEoOgVgF1VisjDs8=g@mail.gmail.com>
	<E98A2A10-27B5-48EF-988E-506F69E84BA6@r-project.org>
	<CAJDAfTBwMx5eb5L+A2fbCpMB1ez-N+KdNViu69HkxAqfZs6RCg@mail.gmail.com>
	<20160204213249.GT9349@brightrain.aerifal.cx>
Message-ID: <CAJDAfTDftYEGsHOyqadm-V360xh2-sL2s8qDNHfAm0Ryu=+-bg@mail.gmail.com>

It is setting TZ and using tzset(). R is not multi-threaded so it is safe.

Simon figure out the important settings from the config.log and
config.h files on a musl system:

/* #undef USE_INTERNAL_MKTIME */
#define HAVE_TM_GMTOFF 1
#define HAVE_TM_ZONE 1

Does this help anyone debug the issue? Simon just went on vacation.



On Thu, Feb 4, 2016 at 7:32 PM, Rich Felker <dalias at libc.org> wrote:
> On Thu, Feb 04, 2016 at 04:35:22PM -0200, Alba Pompeo wrote:
>> I forwarded our talk on musl mailing list to R mailing list.
>> I got this response.
>> Does it help?
>> Also, what do you think about making a new email that's sent to both
>> musl and R mailing list, that way devs from both projects can
>> communicate? It's a tad inefficient for me to keep forwarding messages
>> like this back and forth.
>
> I'm cc'ing both lists now.
>
>> ---------- Forwarded message ----------
>> From: Simon Urbanek <simon.urbanek at r-project.org>
>> Date: Thu, Feb 4, 2016 at 3:01 PM
>> Subject: Re: [Rd] [musl] strptime() question
>> To: Alba Pompeo <albapompeo at gmail.com>
>> Cc: r-devel <r-devel at r-project.org>
>>
>>
>>
>> On Feb 4, 2016, at 11:20 AM, Alba Pompeo <albapompeo at gmail.com> wrote:
>>
>> > There is incompatibility between R strptime and musl libc. I posted
>> > about it on their mailing list, but they need more information I can't
>> > provide, so I'm forwarding the message here in hope R developers can
>> > help. Thanks.
>>
>> Generally, it's using the standard tzset() call to set the time zone
>> http://pubs.opengroup.org/onlinepubs/009695399/functions/tzset.html
>
> The tzset function doesn't really do much interesting; it just updates
> some global state to match the current value of the TZ environment
> variable, but most time.h functions do this already anyway. Anyway
> this doesn't really answer the question of what R's strptime function
> is doing to add timezone functionality onto the underlying system's
> strptime. Is R changing the environment (this is highly unsafe in any
> potentially-multithreaded process, BTW)? Is it using the globals set
> by tzset to compute adjustments to the result?
>
> Rich


From dalias at libc.org  Sat Feb  6 23:55:23 2016
From: dalias at libc.org (Rich Felker)
Date: Sat, 6 Feb 2016 17:55:23 -0500
Subject: [Rd] [musl] Re: Fwd:  [musl] strptime() question
In-Reply-To: <CAJDAfTDftYEGsHOyqadm-V360xh2-sL2s8qDNHfAm0Ryu=+-bg@mail.gmail.com>
References: <CAJDAfTDpBrooMDDJ=p1xf5c_j6Rn9nAuAnBCvdotzUcgBkQRzA@mail.gmail.com>
	<20160204160708.GP9349@brightrain.aerifal.cx>
	<CAJDAfTCENy0dyAYP5612OSMnNBc5U-AGjEoOgVgF1VisjDs8=g@mail.gmail.com>
	<E98A2A10-27B5-48EF-988E-506F69E84BA6@r-project.org>
	<CAJDAfTBwMx5eb5L+A2fbCpMB1ez-N+KdNViu69HkxAqfZs6RCg@mail.gmail.com>
	<20160204213249.GT9349@brightrain.aerifal.cx>
	<CAJDAfTDftYEGsHOyqadm-V360xh2-sL2s8qDNHfAm0Ryu=+-bg@mail.gmail.com>
Message-ID: <20160206225522.GX9349@brightrain.aerifal.cx>

On Sat, Feb 06, 2016 at 10:35:28AM -0200, Alba Pompeo wrote:
> It is setting TZ and using tzset(). R is not multi-threaded so it is safe.
> 
> Simon figure out the important settings from the config.log and
> config.h files on a musl system:
> 
> /* #undef USE_INTERNAL_MKTIME */
> #define HAVE_TM_GMTOFF 1
> #define HAVE_TM_ZONE 1
> 
> Does this help anyone debug the issue? Simon just went on vacation.

R's src/main/datetime.c does A LOT of munging to the output of
strptime and I wouldn't be surprised if they're making nonportable
assumptions about it. Note that the underlying C strptime function has
nothing to do with timezones or time conversion; it's basically just a
time-tailored sscanf that reads integers and strings from the input
string and converts them into values in the fields of struct tm.

It also looks like R isn't even calling the system strptime but
instead using its own R_strptime. I think that supports my theory that
the problem is in the munging being done after the string is parsed.

Rich


From frederik at ofb.net  Sun Feb  7 00:25:44 2016
From: frederik at ofb.net (frederik at ofb.net)
Date: Sat, 6 Feb 2016 15:25:44 -0800
Subject: [Rd] problem submitting R bug;
	bug plotting in tiling window manager
In-Reply-To: <56B5A815.4050908@gmail.com>
References: <20160206002635.GA27075@ofb.net> <56B54A2C.10807@stats.uwo.ca>
	<20160206030756.GB27075@ofb.net> <56B5A815.4050908@gmail.com>
Message-ID: <20160206232544.GA23008@ofb.net>

No problem.

Another suggestion would be to simply validate user input like most
websites, and reject invalid submissions immediately, rather than
blocking the user's account. I don't know what kind of spambots you
are up against, but unless they are very intelligent I doubt they'll
be able to understand a message like "You submitted a bug with no body
text, please enter something and try again." There may also be the
option of using Captchas.

Not sure how hard it is to get Bugzilla to do these things.

Thanks,

Frederick

P.S. (I now see that all errors on the bug tracker are displayed with
a red background)

On Sat, Feb 06, 2016 at 03:00:21AM -0500, Duncan Murdoch wrote:
> Thanks for the suggestions.
> 
> Duncan Murdoch
> 
> On 05/02/2016 10:07 PM, frederik at ofb.net wrote:
> >Hi Duncan Murdoch,
> >
> >Thanks for your time. I apologize for not telling you that my email
> >address on the bug tracker is slightly different -
> >"frederik-rproject at ofb.net" vs "frederik at ofb.net". I was going to
> >follow up with this information, but then I thought, he probably knows
> >how to find a tagged email address.
> >
> >I do hope that you are able to fix the bug tracker. In particular,
> >people should be made aware that their account is blocked before being
> >invited to submit a bug. The error they get should be less rude - no
> >need to make it red - and the email address in the error should be
> >filled in. You complained about wasting time having to look for my
> >email address - well, I wasted time looking for yours. The error
> >message could even hint at what triggered the ban. I don't think that
> >you're going to get very far by trying to scare off actual spammers
> >with a big red accusation - I imagine they all have pretty thick skin.
> >
> >Reading the first line of my bug report was generous of you, but if
> >you read the rest, you'll see that, indeed, after checking with the
> >knowledgeable i3 guys, it appears to be an R bug. So I would like to
> >submit it. What appears at the top of my bug report is a copy of the
> >original bug I posted to i3, at the linked URL (are links OK or will I
> >get banned again?).
> >
> >The reason a bug appeared with the subject "til" is because I noticed
> >that when typing into the subject field, some "related bugs" come up.
> >However, this "suggestion" process appeared to be stalled when I typed
> >"til" (for "tiling" or "tilable"). I tried hitting "enter" and it
> >ended up opening a bug with that subject, which I never submitted,
> >because I clicked "back" and figured out that *four* characters are
> >actually necesary to start getting suggestions. The whole point of
> >doing this was to see if another bug had been submitted with the same
> >topic, and thereby save you time! I'm not going to try to reproduce
> >this error, because you said it will get me banned again, but I think
> >somebody should try to fix the site so that people don't get banned
> >for any content which is not submitted. Especially people with
> >months-old accounts, like me.
> >
> >I definitely sympathize with the spam problem, and thank you for your
> >hard work. Best wishes,
> >
> >Frederick
> >
> >On Fri, Feb 05, 2016 at 08:19:40PM -0500, Duncan Murdoch wrote:
> >>On 05/02/2016 7:26 PM, frederik at ofb.net wrote:
> >>>Dear Dirk Eddelbuettel and Duncan Murdoch,
> >>>
> >>>Thank you for your work on the wonderful R project!
> >>>
> >>>I recently attempted to submit a bug with your Bugzilla interface:
> >>>
> >>>https://bugs.r-project.org/bugzilla/enter_bug.cgi
> >>>
> >>>I created an account, typed in all my information, first checking
> >>>details with another project. Then I clicked submit, and was taken to
> >>>a web page with a big red banner, it said
> >>>
> >>>     Spammer
> >>>     If you believe your account should be restored, please send email to explaining why.
> >>>
> >>>What a hostile thing to say to your users! I tried resubmitting my
> >>>bug, but removing any links, and I still get the message - so it looks
> >>>like my account has really been blocked. Please do something to warn
> >>>your users about this so they can avoid the upset.
> >>
> >>Your account isn't blocked now, but it wasn't easy to unblock it: you used a
> >>different email address in the submission, not the same one you used in this
> >>email.  At least one of the people who can deal with this kind of thing
> >>would now demand an apology from you before ever reading your email again.
> >>I won't do that, but I have to admit, I don't like the fact that you wasted
> >>10 minutes of my time. I'm Bcc'ing a couple of people who are working on
> >>putting together a better interface to the bug reporting system, so they
> >>know to deal with this kind of issue as well as all the others.
> >>
> >>I'm not hostile, I just sound that way, because I've wasted a lot of time
> >>this week on issues like this.
> >>
> >>Duncan Murdoch
> >>
> >>(Here's my previous email to you, for the benefit of those who are Bcc'd:
> >>>You posted a bug report, but it had no content other than "til".  That's
> >>>what many abusers of the system have done, so you were blocked.
> >>>
> >>>I have read the first line of your bug report, and it says " I'm not
> >>>sure if this is a bug with i3 or R ".  If you're not sure if it's a bug
> >>>or not, then please post to R-devel.  That's a moderated list so if this
> >>>is your first post, it may take a while to appear.
> >>>
> >>>This probably seems unreasonable to you, but a lot of abuse is sent to
> >>>the bug list, so we block it quite early.  I'll unblock you now, but
> >>>please don't post there again unless your discussion on R-devel
> >>>indicates this is a problem with R rather than i3.
> >>Duncan Murdoch
> >>>
> >>>Well, I don't know what it means to "email to explaining why", so I
> >>>tried to subscribe to R-devel. However, it's been ten minutes and no
> >>>confirmation email. So I tracked down your email addresses from the R
> >>>website. I'm still cc'ing r-devel.
> >>>
> >>>I hope it is OK to send the bug by email. I really want to get back to
> >>>what I was doing, but I don't want to lose the work I put into writing
> >>>this bug report, so I'm attaching it to this message.
> >>>
> >>>Thank you,
> >>>
> >>>Frederick Eaton
> >>>
> >>>
> >>
>


From pdalgd at gmail.com  Sun Feb  7 11:54:11 2016
From: pdalgd at gmail.com (peter dalgaard)
Date: Sun, 7 Feb 2016 11:54:11 +0100
Subject: [Rd] problem submitting R bug;
	bug plotting in tiling window manager
In-Reply-To: <20160206232544.GA23008@ofb.net>
References: <20160206002635.GA27075@ofb.net> <56B54A2C.10807@stats.uwo.ca>
	<20160206030756.GB27075@ofb.net> <56B5A815.4050908@gmail.com>
	<20160206232544.GA23008@ofb.net>
Message-ID: <7043972C-6962-45C3-B8D6-EB2C1912857A@gmail.com>

Unfortunately, the spammers in question appear to be human (of sorts). 

We're not sure what they're up to, but a common pattern is to post random text, or something copied from a generic bug report (like "able to add 6 item"), later followed by a comment containing a link or a file attachment. 

Presumably, it is some sort of click-bait scheme, but it could also be a covert channel for contrabande files. At any rate, it is very hard to distinguish by mechanical means. So it is done by eye, with some risk of Type-I error. Thus, the Bugzilla maintainers are pretty vigilant to stamp out spammers, sometimes edging on being ham-fisted (er, -footed?).

-pd


> On 07 Feb 2016, at 00:25 , frederik at ofb.net wrote:
> 
> No problem.
> 
> Another suggestion would be to simply validate user input like most
> websites, and reject invalid submissions immediately, rather than
> blocking the user's account. I don't know what kind of spambots you
> are up against, but unless they are very intelligent I doubt they'll
> be able to understand a message like "You submitted a bug with no body
> text, please enter something and try again." There may also be the
> option of using Captchas.
> 
> Not sure how hard it is to get Bugzilla to do these things.
> 
> Thanks,
> 
> Frederick
> 
> P.S. (I now see that all errors on the bug tracker are displayed with
> a red background)
> 
> On Sat, Feb 06, 2016 at 03:00:21AM -0500, Duncan Murdoch wrote:
>> Thanks for the suggestions.
>> 
>> Duncan Murdoch
>> 
>> On 05/02/2016 10:07 PM, frederik at ofb.net wrote:
>>> Hi Duncan Murdoch,
>>> 
>>> Thanks for your time. I apologize for not telling you that my email
>>> address on the bug tracker is slightly different -
>>> "frederik-rproject at ofb.net" vs "frederik at ofb.net". I was going to
>>> follow up with this information, but then I thought, he probably knows
>>> how to find a tagged email address.
>>> 
>>> I do hope that you are able to fix the bug tracker. In particular,
>>> people should be made aware that their account is blocked before being
>>> invited to submit a bug. The error they get should be less rude - no
>>> need to make it red - and the email address in the error should be
>>> filled in. You complained about wasting time having to look for my
>>> email address - well, I wasted time looking for yours. The error
>>> message could even hint at what triggered the ban. I don't think that
>>> you're going to get very far by trying to scare off actual spammers
>>> with a big red accusation - I imagine they all have pretty thick skin.
>>> 
>>> Reading the first line of my bug report was generous of you, but if
>>> you read the rest, you'll see that, indeed, after checking with the
>>> knowledgeable i3 guys, it appears to be an R bug. So I would like to
>>> submit it. What appears at the top of my bug report is a copy of the
>>> original bug I posted to i3, at the linked URL (are links OK or will I
>>> get banned again?).
>>> 
>>> The reason a bug appeared with the subject "til" is because I noticed
>>> that when typing into the subject field, some "related bugs" come up.
>>> However, this "suggestion" process appeared to be stalled when I typed
>>> "til" (for "tiling" or "tilable"). I tried hitting "enter" and it
>>> ended up opening a bug with that subject, which I never submitted,
>>> because I clicked "back" and figured out that *four* characters are
>>> actually necesary to start getting suggestions. The whole point of
>>> doing this was to see if another bug had been submitted with the same
>>> topic, and thereby save you time! I'm not going to try to reproduce
>>> this error, because you said it will get me banned again, but I think
>>> somebody should try to fix the site so that people don't get banned
>>> for any content which is not submitted. Especially people with
>>> months-old accounts, like me.
>>> 
>>> I definitely sympathize with the spam problem, and thank you for your
>>> hard work. Best wishes,
>>> 
>>> Frederick
>>> 
>>> On Fri, Feb 05, 2016 at 08:19:40PM -0500, Duncan Murdoch wrote:
>>>> On 05/02/2016 7:26 PM, frederik at ofb.net wrote:
>>>>> Dear Dirk Eddelbuettel and Duncan Murdoch,
>>>>> 
>>>>> Thank you for your work on the wonderful R project!
>>>>> 
>>>>> I recently attempted to submit a bug with your Bugzilla interface:
>>>>> 
>>>>> https://bugs.r-project.org/bugzilla/enter_bug.cgi
>>>>> 
>>>>> I created an account, typed in all my information, first checking
>>>>> details with another project. Then I clicked submit, and was taken to
>>>>> a web page with a big red banner, it said
>>>>> 
>>>>>   Spammer
>>>>>   If you believe your account should be restored, please send email to explaining why.
>>>>> 
>>>>> What a hostile thing to say to your users! I tried resubmitting my
>>>>> bug, but removing any links, and I still get the message - so it looks
>>>>> like my account has really been blocked. Please do something to warn
>>>>> your users about this so they can avoid the upset.
>>>> 
>>>> Your account isn't blocked now, but it wasn't easy to unblock it: you used a
>>>> different email address in the submission, not the same one you used in this
>>>> email.  At least one of the people who can deal with this kind of thing
>>>> would now demand an apology from you before ever reading your email again.
>>>> I won't do that, but I have to admit, I don't like the fact that you wasted
>>>> 10 minutes of my time. I'm Bcc'ing a couple of people who are working on
>>>> putting together a better interface to the bug reporting system, so they
>>>> know to deal with this kind of issue as well as all the others.
>>>> 
>>>> I'm not hostile, I just sound that way, because I've wasted a lot of time
>>>> this week on issues like this.
>>>> 
>>>> Duncan Murdoch
>>>> 
>>>> (Here's my previous email to you, for the benefit of those who are Bcc'd:
>>>>> You posted a bug report, but it had no content other than "til".  That's
>>>>> what many abusers of the system have done, so you were blocked.
>>>>> 
>>>>> I have read the first line of your bug report, and it says " I'm not
>>>>> sure if this is a bug with i3 or R ".  If you're not sure if it's a bug
>>>>> or not, then please post to R-devel.  That's a moderated list so if this
>>>>> is your first post, it may take a while to appear.
>>>>> 
>>>>> This probably seems unreasonable to you, but a lot of abuse is sent to
>>>>> the bug list, so we block it quite early.  I'll unblock you now, but
>>>>> please don't post there again unless your discussion on R-devel
>>>>> indicates this is a problem with R rather than i3.
>>>> Duncan Murdoch
>>>>> 
>>>>> Well, I don't know what it means to "email to explaining why", so I
>>>>> tried to subscribe to R-devel. However, it's been ten minutes and no
>>>>> confirmation email. So I tracked down your email addresses from the R
>>>>> website. I'm still cc'ing r-devel.
>>>>> 
>>>>> I hope it is OK to send the bug by email. I really want to get back to
>>>>> what I was doing, but I don't want to lose the work I put into writing
>>>>> this bug report, so I'm attaching it to this message.
>>>>> 
>>>>> Thank you,
>>>>> 
>>>>> Frederick Eaton
>>>>> 
>>>>> 
>>>> 
>> 
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel

-- 
Peter Dalgaard, Professor,
Center for Statistics, Copenhagen Business School
Solbjerg Plads 3, 2000 Frederiksberg, Denmark
Phone: (+45)38153501
Office: A 4.23
Email: pd.mes at cbs.dk  Priv: PDalgd at gmail.com


From daniel.kaschek at physik.uni-freiburg.de  Sun Feb  7 14:08:09 2016
From: daniel.kaschek at physik.uni-freiburg.de (Daniel Kaschek)
Date: Sun, 07 Feb 2016 14:08:09 +0100
Subject: [Rd] Assignment in environment
Message-ID: <1454850489.16166.0@physik.uni-freiburg.de>

Dear all,

I have a function "fn" with its own environment, i.e.

env <- environment(fn)

and env is not .GlobalEnv. And another function

getValue <- function(x) environment(x)$mylist

which returns the list object "mylist" which is in "env". If I want to 
modify "mylist", I could write

'getValue<-' <- function(x, value) { environment(x)$mylist <- value}

which gives not the desired result, e.g.

getValue(fn)[[1]] <- 3

will set the first list entry of "mylist" to 3. But then "fn" will also 
be 3!

environment(fn)$mylist[[1]] <- 3

does set the list entry correctly while keeping "fn". What's the 
difference?

Cheers,
Daniel


From murdoch.duncan at gmail.com  Sun Feb  7 14:46:47 2016
From: murdoch.duncan at gmail.com (Duncan Murdoch)
Date: Sun, 7 Feb 2016 08:46:47 -0500
Subject: [Rd] Assignment in environment
In-Reply-To: <1454850489.16166.0@physik.uni-freiburg.de>
References: <1454850489.16166.0@physik.uni-freiburg.de>
Message-ID: <56B74AC7.4010901@gmail.com>

On 07/02/2016 8:08 AM, Daniel Kaschek wrote:
> Dear all,
>
> I have a function "fn" with its own environment, i.e.
>
> env <- environment(fn)
>
> and env is not .GlobalEnv. And another function
>
> getValue <- function(x) environment(x)$mylist
>
> which returns the list object "mylist" which is in "env". If I want to
> modify "mylist", I could write
>
> 'getValue<-' <- function(x, value) { environment(x)$mylist <- value}
>
> which gives not the desired result, e.g.
>
> getValue(fn)[[1]] <- 3
>
> will set the first list entry of "mylist" to 3. But then "fn" will also
> be 3!
>
> environment(fn)$mylist[[1]] <- 3
>
> does set the list entry correctly while keeping "fn". What's the
> difference?

An assignment function should return the modified value.  So it looks 
like you would need


'getValue<-' <- function(x, value) {
    environment(x)$mylist <- value
    x
  }

but in fact, this doesn't work:

getValue(fn)[[1]] <- 3
Error in getValue(fn)[[1]] <- 3 : could not find function "getValue"

I suspect this is a parser problem.  However, it does suggest a simple 
workaround for you:

Just define

getValue <- function(x) environment(x)$mylist

and then your expression works as expected.

Duncan Murdoch


From pdalgd at gmail.com  Sun Feb  7 15:15:38 2016
From: pdalgd at gmail.com (peter dalgaard)
Date: Sun, 7 Feb 2016 15:15:38 +0100
Subject: [Rd] Assignment in environment
In-Reply-To: <56B74AC7.4010901@gmail.com>
References: <1454850489.16166.0@physik.uni-freiburg.de>
	<56B74AC7.4010901@gmail.com>
Message-ID: <1CDE0F5D-35D3-4315-AC08-7953DAD81914@gmail.com>


> On 07 Feb 2016, at 14:46 , Duncan Murdoch <murdoch.duncan at gmail.com> wrot8[e:
> 
[snippage]
> 
> but in fact, this doesn't work:
> 
> getValue(fn)[[1]] <- 3
> Error in getValue(fn)[[1]] <- 3 : could not find function "getValue"
> 
> I suspect this is a parser problem.

Umm, no...

The canonical semantics are that 

foo(x)[[....]] <- bar

is internally converted to

*tmp* <- foo(x)
*tmp*[[....]] <- bar
x <- `foo<-`(x, *tmp*)

so both foo() and `foo<-` are required.

-- 
Peter Dalgaard, Professor,
Center for Statistics, Copenhagen Business School
Solbjerg Plads 3, 2000 Frederiksberg, Denmark
Phone: (+45)38153501
Office: A 4.23
Email: pd.mes at cbs.dk  Priv: PDalgd at gmail.com


From daniel.kaschek at physik.uni-freiburg.de  Sun Feb  7 17:44:27 2016
From: daniel.kaschek at physik.uni-freiburg.de (Daniel Kaschek)
Date: Sun, 07 Feb 2016 17:44:27 +0100
Subject: [Rd] Assignment in environment
In-Reply-To: <56B74AC7.4010901@gmail.com>
References: <1454850489.16166.0@physik.uni-freiburg.de>
	<56B74AC7.4010901@gmail.com>
Message-ID: <1454863467.16166.1@physik.uni-freiburg.de>

On So, Feb 7, 2016 at 2:46 , Duncan Murdoch <murdoch.duncan at gmail.com> 
wrote:

> An assignment function should return the modified value.  So it looks 
> like you would need
> 
> 
> 'getValue<-' <- function(x, value) {
>    environment(x)$mylist <- value
>    x
>  }

Thanks. I have not thought of a return value. That makes the difference.


> 
> but in fact, this doesn't work:
> 
> getValue(fn)[[1]] <- 3
> Error in getValue(fn)[[1]] <- 3 : could not find function "getValue"


I have a "getValue" function anyway. It was even the other way round. I 
wanted to assign values without a function "getValue<-" and was rebuked 
by R that this function was missing.

Thanks to both of you, Peter and Duncan.

Best regards,
Daniel


From murdoch.duncan at gmail.com  Sun Feb  7 22:22:32 2016
From: murdoch.duncan at gmail.com (Duncan Murdoch)
Date: Sun, 7 Feb 2016 16:22:32 -0500
Subject: [Rd] Assignment in environment
In-Reply-To: <1CDE0F5D-35D3-4315-AC08-7953DAD81914@gmail.com>
References: <1454850489.16166.0@physik.uni-freiburg.de>
	<56B74AC7.4010901@gmail.com>
	<1CDE0F5D-35D3-4315-AC08-7953DAD81914@gmail.com>
Message-ID: <56B7B598.4030409@gmail.com>

On 07/02/2016 9:15 AM, peter dalgaard wrote:
>
>> On 07 Feb 2016, at 14:46 , Duncan Murdoch <murdoch.duncan at gmail.com> wrot8[e:
>>
> [snippage]
>>
>> but in fact, this doesn't work:
>>
>> getValue(fn)[[1]] <- 3
>> Error in getValue(fn)[[1]] <- 3 : could not find function "getValue"
>>
>> I suspect this is a parser problem.
>
> Umm, no...
>
> The canonical semantics are that
>
> foo(x)[[....]] <- bar
>
> is internally converted to
>
> *tmp* <- foo(x)
> *tmp*[[....]] <- bar
> x <- `foo<-`(x, *tmp*)
>
> so both foo() and `foo<-` are required.
>

Yes, you're right.  I need more sleep.

Duncan Murdoch


From pauljohn32 at gmail.com  Mon Feb  8 16:10:01 2016
From: pauljohn32 at gmail.com (Paul Johnson)
Date: Mon, 8 Feb 2016 09:10:01 -0600
Subject: [Rd] something wrong in package submission procedure/website
Message-ID: <CAErODj_W=V5CWYt-GpVQtzqjK=sxg6RyWV+Fbf-7_JX1NxEO7Q@mail.gmail.com>

Yesterday I uploaded new rockchalk_1.8.97.  Then I received email
saying that I needed to confirm the submission.  Here's the message.

Dear Paul E. Johnson
Someone has submitted the package rockchalk to CRAN.
You are receiving this email to confirm the submission as the maintainer of
this package.
To confirm the submission to CRAN, follow or copy & paste the following
link into your browser:

http://xmpalantir.wu.ac.at/cransubmit/conf_mail.php?code=b95e95eb5317901449ed7d311053bad8

If you did not submit the package or do not wish for it to be submitted to
CRAN, simply ignore this email

Submission Information:
Submitter: Paul Johnson <pauljohn at ku.edu>
Package: rockchalk
Version: 1.8.97

Note the email has the correct package version 1.8.97, what I uploaded
yesterday.

The email points to a webpage where I confirm submission.  The 3rd box
there requires me to agree to "I have fixed all probelms shown on the
package check page(which links to
http://cran.r-project.org/web/checks/check_results_rockchalk.html).

The problem is that the package check has a report on the PREVIOUS
rockchalk 1.8.92, not the one I uploaded yesterday.

So none of the beautiful repairs I implemented show up :(

pj

-- 
Paul E. Johnson
Professor, Political Science        Director
1541 Lilac Lane, Room 504      Center for Research Methods
University of Kansas                 University of Kansas
http://pj.freefaculty.org              http://crmda.ku.edu


From pdalgd at gmail.com  Mon Feb  8 16:19:55 2016
From: pdalgd at gmail.com (peter dalgaard)
Date: Mon, 8 Feb 2016 16:19:55 +0100
Subject: [Rd] something wrong in package submission procedure/website
In-Reply-To: <CAErODj_W=V5CWYt-GpVQtzqjK=sxg6RyWV+Fbf-7_JX1NxEO7Q@mail.gmail.com>
References: <CAErODj_W=V5CWYt-GpVQtzqjK=sxg6RyWV+Fbf-7_JX1NxEO7Q@mail.gmail.com>
Message-ID: <5F2D0051-7AED-40ED-989C-972945C70442@gmail.com>

Quite possibly, I should keep my big mouth shut and let the CRAN'ers answer this, but at face value, you submit a new version and are asked to confirm that problems with the previous version are fixed; isn't that as it should be?

-pd 

On 08 Feb 2016, at 16:10 , Paul Johnson <pauljohn32 at gmail.com> wrote:

> Yesterday I uploaded new rockchalk_1.8.97.  Then I received email
> saying that I needed to confirm the submission.  Here's the message.
> 
> Dear Paul E. Johnson
> Someone has submitted the package rockchalk to CRAN.
> You are receiving this email to confirm the submission as the maintainer of
> this package.
> To confirm the submission to CRAN, follow or copy & paste the following
> link into your browser:
> 
> http://xmpalantir.wu.ac.at/cransubmit/conf_mail.php?code=b95e95eb5317901449ed7d311053bad8
> 
> If you did not submit the package or do not wish for it to be submitted to
> CRAN, simply ignore this email
> 
> Submission Information:
> Submitter: Paul Johnson <pauljohn at ku.edu>
> Package: rockchalk
> Version: 1.8.97
> 
> Note the email has the correct package version 1.8.97, what I uploaded
> yesterday.
> 
> The email points to a webpage where I confirm submission.  The 3rd box
> there requires me to agree to "I have fixed all probelms shown on the
> package check page(which links to
> http://cran.r-project.org/web/checks/check_results_rockchalk.html).
> 
> The problem is that the package check has a report on the PREVIOUS
> rockchalk 1.8.92, not the one I uploaded yesterday.
> 
> So none of the beautiful repairs I implemented show up :(
> 
> pj
> 
> -- 
> Paul E. Johnson
> Professor, Political Science        Director
> 1541 Lilac Lane, Room 504      Center for Research Methods
> University of Kansas                 University of Kansas
> http://pj.freefaculty.org              http://crmda.ku.edu
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel

-- 
Peter Dalgaard, Professor,
Center for Statistics, Copenhagen Business School
Solbjerg Plads 3, 2000 Frederiksberg, Denmark
Phone: (+45)38153501
Office: A 4.23
Email: pd.mes at cbs.dk  Priv: PDalgd at gmail.com


From hanson at depauw.edu  Mon Feb  8 16:21:12 2016
From: hanson at depauw.edu (Bryan Hanson)
Date: Mon, 8 Feb 2016 10:21:12 -0500
Subject: [Rd] something wrong in package submission procedure/website
In-Reply-To: <CAErODj_W=V5CWYt-GpVQtzqjK=sxg6RyWV+Fbf-7_JX1NxEO7Q@mail.gmail.com>
References: <CAErODj_W=V5CWYt-GpVQtzqjK=sxg6RyWV+Fbf-7_JX1NxEO7Q@mail.gmail.com>
Message-ID: <80524672-4AF8-4F04-898C-478ABCFB9907@depauw.edu>

Paul, I think it is working as intended / you are seeing correct i nfo.  They are just trying to make sure you have fixed any problems in your previous package (that is now be being built with a newer R, so problems show up that weren?t there when you originallly submitted the previous version). So if you fixed those (beautifully) and didn?t introduce any new problems (we always pray, and test), you should be good to go.

Bryan

> On Feb 8, 2016, at 10:10 AM, Paul Johnson <pauljohn32 at gmail.com> wrote:
> 
> Yesterday I uploaded new rockchalk_1.8.97.  Then I received email
> saying that I needed to confirm the submission.  Here's the message.
> 
> Dear Paul E. Johnson
> Someone has submitted the package rockchalk to CRAN.
> You are receiving this email to confirm the submission as the maintainer of
> this package.
> To confirm the submission to CRAN, follow or copy & paste the following
> link into your browser:
> 
> http://xmpalantir.wu.ac.at/cransubmit/conf_mail.php?code=b95e95eb5317901449ed7d311053bad8
> 
> If you did not submit the package or do not wish for it to be submitted to
> CRAN, simply ignore this email
> 
> Submission Information:
> Submitter: Paul Johnson <pauljohn at ku.edu>
> Package: rockchalk
> Version: 1.8.97
> 
> Note the email has the correct package version 1.8.97, what I uploaded
> yesterday.
> 
> The email points to a webpage where I confirm submission.  The 3rd box
> there requires me to agree to "I have fixed all probelms shown on the
> package check page(which links to
> http://cran.r-project.org/web/checks/check_results_rockchalk.html).
> 
> The problem is that the package check has a report on the PREVIOUS
> rockchalk 1.8.92, not the one I uploaded yesterday.
> 
> So none of the beautiful repairs I implemented show up :(
> 
> pj
> 
> -- 
> Paul E. Johnson
> Professor, Political Science        Director
> 1541 Lilac Lane, Room 504      Center for Research Methods
> University of Kansas                 University of Kansas
> http://pj.freefaculty.org              http://crmda.ku.edu
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From ligges at statistik.tu-dortmund.de  Mon Feb  8 17:10:17 2016
From: ligges at statistik.tu-dortmund.de (Uwe Ligges)
Date: Mon, 8 Feb 2016 17:10:17 +0100
Subject: [Rd] something wrong in package submission procedure/website
In-Reply-To: <5F2D0051-7AED-40ED-989C-972945C70442@gmail.com>
References: <CAErODj_W=V5CWYt-GpVQtzqjK=sxg6RyWV+Fbf-7_JX1NxEO7Q@mail.gmail.com>
	<5F2D0051-7AED-40ED-989C-972945C70442@gmail.com>
Message-ID: <56B8BDE9.2060902@statistik.tu-dortmund.de>



On 08.02.2016 16:19, peter dalgaard wrote:
> Quite possibly, I should keep my big mouth shut and let the CRAN'ers answer this, but at face value, you submit a new version and are asked to confirm that problems with the previous version are fixed; isn't that as it should be?

 From a CRAN'ers point of view: Well explained, thanks Peter.

Best,
Uwe


> -pd
>
> On 08 Feb 2016, at 16:10 , Paul Johnson <pauljohn32 at gmail.com> wrote:
>
>> Yesterday I uploaded new rockchalk_1.8.97.  Then I received email
>> saying that I needed to confirm the submission.  Here's the message.
>>
>> Dear Paul E. Johnson
>> Someone has submitted the package rockchalk to CRAN.
>> You are receiving this email to confirm the submission as the maintainer of
>> this package.
>> To confirm the submission to CRAN, follow or copy & paste the following
>> link into your browser:
>>
>> http://xmpalantir.wu.ac.at/cransubmit/conf_mail.php?code=b95e95eb5317901449ed7d311053bad8
>>
>> If you did not submit the package or do not wish for it to be submitted to
>> CRAN, simply ignore this email
>>
>> Submission Information:
>> Submitter: Paul Johnson <pauljohn at ku.edu>
>> Package: rockchalk
>> Version: 1.8.97
>>
>> Note the email has the correct package version 1.8.97, what I uploaded
>> yesterday.
>>
>> The email points to a webpage where I confirm submission.  The 3rd box
>> there requires me to agree to "I have fixed all probelms shown on the
>> package check page(which links to
>> http://cran.r-project.org/web/checks/check_results_rockchalk.html).
>>
>> The problem is that the package check has a report on the PREVIOUS
>> rockchalk 1.8.92, not the one I uploaded yesterday.
>>
>> So none of the beautiful repairs I implemented show up :(
>>
>> pj
>>
>> --
>> Paul E. Johnson
>> Professor, Political Science        Director
>> 1541 Lilac Lane, Room 504      Center for Research Methods
>> University of Kansas                 University of Kansas
>> http://pj.freefaculty.org              http://crmda.ku.edu
>>
>> ______________________________________________
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel
>


From frederik at ofb.net  Mon Feb  8 18:34:16 2016
From: frederik at ofb.net (frederik at ofb.net)
Date: Mon, 8 Feb 2016 09:34:16 -0800
Subject: [Rd] problem submitting R bug;
 bug plotting in tiling window manager
In-Reply-To: <7043972C-6962-45C3-B8D6-EB2C1912857A@gmail.com>
References: <20160206002635.GA27075@ofb.net> <56B54A2C.10807@stats.uwo.ca>
	<20160206030756.GB27075@ofb.net> <56B5A815.4050908@gmail.com>
	<20160206232544.GA23008@ofb.net>
	<7043972C-6962-45C3-B8D6-EB2C1912857A@gmail.com>
Message-ID: <20160208173416.GA23786@ofb.net>

Ah, thank you for that explanation. I somehow didn't catch that my
Bugzilla account had been disabled by a human.

"Common pattern is to post ... something copied from a generic bug
report" - that sounds very annoying.

Frederick

On Sun, Feb 07, 2016 at 11:54:11AM +0100, peter dalgaard wrote:
> Unfortunately, the spammers in question appear to be human (of sorts). 
> 
> We're not sure what they're up to, but a common pattern is to post random text, or something copied from a generic bug report (like "able to add 6 item"), later followed by a comment containing a link or a file attachment. 
> 
> Presumably, it is some sort of click-bait scheme, but it could also be a covert channel for contrabande files. At any rate, it is very hard to distinguish by mechanical means. So it is done by eye, with some risk of Type-I error. Thus, the Bugzilla maintainers are pretty vigilant to stamp out spammers, sometimes edging on being ham-fisted (er, -footed?).
> 
> -pd
> 
> 
> > On 07 Feb 2016, at 00:25 , frederik at ofb.net wrote:
> > 
> > No problem.
> > 
> > Another suggestion would be to simply validate user input like most
> > websites, and reject invalid submissions immediately, rather than
> > blocking the user's account. I don't know what kind of spambots you
> > are up against, but unless they are very intelligent I doubt they'll
> > be able to understand a message like "You submitted a bug with no body
> > text, please enter something and try again." There may also be the
> > option of using Captchas.
> > 
> > Not sure how hard it is to get Bugzilla to do these things.
> > 
> > Thanks,
> > 
> > Frederick
> > 
> > P.S. (I now see that all errors on the bug tracker are displayed with
> > a red background)
> > 
> > On Sat, Feb 06, 2016 at 03:00:21AM -0500, Duncan Murdoch wrote:
> >> Thanks for the suggestions.
> >> 
> >> Duncan Murdoch
> >> 
> >> On 05/02/2016 10:07 PM, frederik at ofb.net wrote:
> >>> Hi Duncan Murdoch,
> >>> 
> >>> Thanks for your time. I apologize for not telling you that my email
> >>> address on the bug tracker is slightly different -
> >>> "frederik-rproject at ofb.net" vs "frederik at ofb.net". I was going to
> >>> follow up with this information, but then I thought, he probably knows
> >>> how to find a tagged email address.
> >>> 
> >>> I do hope that you are able to fix the bug tracker. In particular,
> >>> people should be made aware that their account is blocked before being
> >>> invited to submit a bug. The error they get should be less rude - no
> >>> need to make it red - and the email address in the error should be
> >>> filled in. You complained about wasting time having to look for my
> >>> email address - well, I wasted time looking for yours. The error
> >>> message could even hint at what triggered the ban. I don't think that
> >>> you're going to get very far by trying to scare off actual spammers
> >>> with a big red accusation - I imagine they all have pretty thick skin.
> >>> 
> >>> Reading the first line of my bug report was generous of you, but if
> >>> you read the rest, you'll see that, indeed, after checking with the
> >>> knowledgeable i3 guys, it appears to be an R bug. So I would like to
> >>> submit it. What appears at the top of my bug report is a copy of the
> >>> original bug I posted to i3, at the linked URL (are links OK or will I
> >>> get banned again?).
> >>> 
> >>> The reason a bug appeared with the subject "til" is because I noticed
> >>> that when typing into the subject field, some "related bugs" come up.
> >>> However, this "suggestion" process appeared to be stalled when I typed
> >>> "til" (for "tiling" or "tilable"). I tried hitting "enter" and it
> >>> ended up opening a bug with that subject, which I never submitted,
> >>> because I clicked "back" and figured out that *four* characters are
> >>> actually necesary to start getting suggestions. The whole point of
> >>> doing this was to see if another bug had been submitted with the same
> >>> topic, and thereby save you time! I'm not going to try to reproduce
> >>> this error, because you said it will get me banned again, but I think
> >>> somebody should try to fix the site so that people don't get banned
> >>> for any content which is not submitted. Especially people with
> >>> months-old accounts, like me.
> >>> 
> >>> I definitely sympathize with the spam problem, and thank you for your
> >>> hard work. Best wishes,
> >>> 
> >>> Frederick
> >>> 
> >>> On Fri, Feb 05, 2016 at 08:19:40PM -0500, Duncan Murdoch wrote:
> >>>> On 05/02/2016 7:26 PM, frederik at ofb.net wrote:
> >>>>> Dear Dirk Eddelbuettel and Duncan Murdoch,
> >>>>> 
> >>>>> Thank you for your work on the wonderful R project!
> >>>>> 
> >>>>> I recently attempted to submit a bug with your Bugzilla interface:
> >>>>> 
> >>>>> https://bugs.r-project.org/bugzilla/enter_bug.cgi
> >>>>> 
> >>>>> I created an account, typed in all my information, first checking
> >>>>> details with another project. Then I clicked submit, and was taken to
> >>>>> a web page with a big red banner, it said
> >>>>> 
> >>>>>   Spammer
> >>>>>   If you believe your account should be restored, please send email to explaining why.
> >>>>> 
> >>>>> What a hostile thing to say to your users! I tried resubmitting my
> >>>>> bug, but removing any links, and I still get the message - so it looks
> >>>>> like my account has really been blocked. Please do something to warn
> >>>>> your users about this so they can avoid the upset.
> >>>> 
> >>>> Your account isn't blocked now, but it wasn't easy to unblock it: you used a
> >>>> different email address in the submission, not the same one you used in this
> >>>> email.  At least one of the people who can deal with this kind of thing
> >>>> would now demand an apology from you before ever reading your email again.
> >>>> I won't do that, but I have to admit, I don't like the fact that you wasted
> >>>> 10 minutes of my time. I'm Bcc'ing a couple of people who are working on
> >>>> putting together a better interface to the bug reporting system, so they
> >>>> know to deal with this kind of issue as well as all the others.
> >>>> 
> >>>> I'm not hostile, I just sound that way, because I've wasted a lot of time
> >>>> this week on issues like this.
> >>>> 
> >>>> Duncan Murdoch
> >>>> 
> >>>> (Here's my previous email to you, for the benefit of those who are Bcc'd:
> >>>>> You posted a bug report, but it had no content other than "til".  That's
> >>>>> what many abusers of the system have done, so you were blocked.
> >>>>> 
> >>>>> I have read the first line of your bug report, and it says " I'm not
> >>>>> sure if this is a bug with i3 or R ".  If you're not sure if it's a bug
> >>>>> or not, then please post to R-devel.  That's a moderated list so if this
> >>>>> is your first post, it may take a while to appear.
> >>>>> 
> >>>>> This probably seems unreasonable to you, but a lot of abuse is sent to
> >>>>> the bug list, so we block it quite early.  I'll unblock you now, but
> >>>>> please don't post there again unless your discussion on R-devel
> >>>>> indicates this is a problem with R rather than i3.
> >>>> Duncan Murdoch
> >>>>> 
> >>>>> Well, I don't know what it means to "email to explaining why", so I
> >>>>> tried to subscribe to R-devel. However, it's been ten minutes and no
> >>>>> confirmation email. So I tracked down your email addresses from the R
> >>>>> website. I'm still cc'ing r-devel.
> >>>>> 
> >>>>> I hope it is OK to send the bug by email. I really want to get back to
> >>>>> what I was doing, but I don't want to lose the work I put into writing
> >>>>> this bug report, so I'm attaching it to this message.
> >>>>> 
> >>>>> Thank you,
> >>>>> 
> >>>>> Frederick Eaton
> >>>>> 
> >>>>> 
> >>>> 
> >> 
> > 
> > ______________________________________________
> > R-devel at r-project.org mailing list
> > https://stat.ethz.ch/mailman/listinfo/r-devel
> 
> -- 
> Peter Dalgaard, Professor,
> Center for Statistics, Copenhagen Business School
> Solbjerg Plads 3, 2000 Frederiksberg, Denmark
> Phone: (+45)38153501
> Office: A 4.23
> Email: pd.mes at cbs.dk  Priv: PDalgd at gmail.com
> 
> 
> 
> 
> 
> 
> 
> 
>


From pdalgd at gmail.com  Mon Feb  8 18:52:31 2016
From: pdalgd at gmail.com (peter dalgaard)
Date: Mon, 8 Feb 2016 18:52:31 +0100
Subject: [Rd] problem submitting R bug;
	bug plotting in tiling window manager
In-Reply-To: <20160208173416.GA23786@ofb.net>
References: <20160206002635.GA27075@ofb.net> <56B54A2C.10807@stats.uwo.ca>
	<20160206030756.GB27075@ofb.net> <56B5A815.4050908@gmail.com>
	<20160206232544.GA23008@ofb.net>
	<7043972C-6962-45C3-B8D6-EB2C1912857A@gmail.com>
	<20160208173416.GA23786@ofb.net>
Message-ID: <FC19CD71-BA5D-4A34-93E7-2A463180C0F4@gmail.com>


On 08 Feb 2016, at 18:34 , frederik at ofb.net wrote:

> Ah, thank you for that explanation. I somehow didn't catch that my
> Bugzilla account had been disabled by a human.

I like the notion that a somewhat rude message is ameliorated by the knowledge that it was put there by a chronically annoyed human... ;-) We might still consider rephrasing it though.

-pd


> 
> "Common pattern is to post ... something copied from a generic bug
> report" - that sounds very annoying.
> 
> Frederick
> 
> On Sun, Feb 07, 2016 at 11:54:11AM +0100, peter dalgaard wrote:
>> Unfortunately, the spammers in question appear to be human (of sorts). 
>> 
>> We're not sure what they're up to, but a common pattern is to post random text, or something copied from a generic bug report (like "able to add 6 item"), later followed by a comment containing a link or a file attachment. 
>> 
>> Presumably, it is some sort of click-bait scheme, but it could also be a covert channel for contrabande files. At any rate, it is very hard to distinguish by mechanical means. So it is done by eye, with some risk of Type-I error. Thus, the Bugzilla maintainers are pretty vigilant to stamp out spammers, sometimes edging on being ham-fisted (er, -footed?).
>> 
>> -pd
>> 
>> 
>>> On 07 Feb 2016, at 00:25 , frederik at ofb.net wrote:
>>> 
>>> No problem.
>>> 
>>> Another suggestion would be to simply validate user input like most
>>> websites, and reject invalid submissions immediately, rather than
>>> blocking the user's account. I don't know what kind of spambots you
>>> are up against, but unless they are very intelligent I doubt they'll
>>> be able to understand a message like "You submitted a bug with no body
>>> text, please enter something and try again." There may also be the
>>> option of using Captchas.
>>> 
>>> Not sure how hard it is to get Bugzilla to do these things.
>>> 
>>> Thanks,
>>> 
>>> Frederick
>>> 
>>> P.S. (I now see that all errors on the bug tracker are displayed with
>>> a red background)
>>> 
>>> On Sat, Feb 06, 2016 at 03:00:21AM -0500, Duncan Murdoch wrote:
>>>> Thanks for the suggestions.
>>>> 
>>>> Duncan Murdoch
>>>> 
>>>> On 05/02/2016 10:07 PM, frederik at ofb.net wrote:
>>>>> Hi Duncan Murdoch,
>>>>> 
>>>>> Thanks for your time. I apologize for not telling you that my email
>>>>> address on the bug tracker is slightly different -
>>>>> "frederik-rproject at ofb.net" vs "frederik at ofb.net". I was going to
>>>>> follow up with this information, but then I thought, he probably knows
>>>>> how to find a tagged email address.
>>>>> 
>>>>> I do hope that you are able to fix the bug tracker. In particular,
>>>>> people should be made aware that their account is blocked before being
>>>>> invited to submit a bug. The error they get should be less rude - no
>>>>> need to make it red - and the email address in the error should be
>>>>> filled in. You complained about wasting time having to look for my
>>>>> email address - well, I wasted time looking for yours. The error
>>>>> message could even hint at what triggered the ban. I don't think that
>>>>> you're going to get very far by trying to scare off actual spammers
>>>>> with a big red accusation - I imagine they all have pretty thick skin.
>>>>> 
>>>>> Reading the first line of my bug report was generous of you, but if
>>>>> you read the rest, you'll see that, indeed, after checking with the
>>>>> knowledgeable i3 guys, it appears to be an R bug. So I would like to
>>>>> submit it. What appears at the top of my bug report is a copy of the
>>>>> original bug I posted to i3, at the linked URL (are links OK or will I
>>>>> get banned again?).
>>>>> 
>>>>> The reason a bug appeared with the subject "til" is because I noticed
>>>>> that when typing into the subject field, some "related bugs" come up.
>>>>> However, this "suggestion" process appeared to be stalled when I typed
>>>>> "til" (for "tiling" or "tilable"). I tried hitting "enter" and it
>>>>> ended up opening a bug with that subject, which I never submitted,
>>>>> because I clicked "back" and figured out that *four* characters are
>>>>> actually necesary to start getting suggestions. The whole point of
>>>>> doing this was to see if another bug had been submitted with the same
>>>>> topic, and thereby save you time! I'm not going to try to reproduce
>>>>> this error, because you said it will get me banned again, but I think
>>>>> somebody should try to fix the site so that people don't get banned
>>>>> for any content which is not submitted. Especially people with
>>>>> months-old accounts, like me.
>>>>> 
>>>>> I definitely sympathize with the spam problem, and thank you for your
>>>>> hard work. Best wishes,
>>>>> 
>>>>> Frederick
>>>>> 
>>>>> On Fri, Feb 05, 2016 at 08:19:40PM -0500, Duncan Murdoch wrote:
>>>>>> On 05/02/2016 7:26 PM, frederik at ofb.net wrote:
>>>>>>> Dear Dirk Eddelbuettel and Duncan Murdoch,
>>>>>>> 
>>>>>>> Thank you for your work on the wonderful R project!
>>>>>>> 
>>>>>>> I recently attempted to submit a bug with your Bugzilla interface:
>>>>>>> 
>>>>>>> https://bugs.r-project.org/bugzilla/enter_bug.cgi
>>>>>>> 
>>>>>>> I created an account, typed in all my information, first checking
>>>>>>> details with another project. Then I clicked submit, and was taken to
>>>>>>> a web page with a big red banner, it said
>>>>>>> 
>>>>>>>  Spammer
>>>>>>>  If you believe your account should be restored, please send email to explaining why.
>>>>>>> 
>>>>>>> What a hostile thing to say to your users! I tried resubmitting my
>>>>>>> bug, but removing any links, and I still get the message - so it looks
>>>>>>> like my account has really been blocked. Please do something to warn
>>>>>>> your users about this so they can avoid the upset.
>>>>>> 
>>>>>> Your account isn't blocked now, but it wasn't easy to unblock it: you used a
>>>>>> different email address in the submission, not the same one you used in this
>>>>>> email.  At least one of the people who can deal with this kind of thing
>>>>>> would now demand an apology from you before ever reading your email again.
>>>>>> I won't do that, but I have to admit, I don't like the fact that you wasted
>>>>>> 10 minutes of my time. I'm Bcc'ing a couple of people who are working on
>>>>>> putting together a better interface to the bug reporting system, so they
>>>>>> know to deal with this kind of issue as well as all the others.
>>>>>> 
>>>>>> I'm not hostile, I just sound that way, because I've wasted a lot of time
>>>>>> this week on issues like this.
>>>>>> 
>>>>>> Duncan Murdoch
>>>>>> 
>>>>>> (Here's my previous email to you, for the benefit of those who are Bcc'd:
>>>>>>> You posted a bug report, but it had no content other than "til".  That's
>>>>>>> what many abusers of the system have done, so you were blocked.
>>>>>>> 
>>>>>>> I have read the first line of your bug report, and it says " I'm not
>>>>>>> sure if this is a bug with i3 or R ".  If you're not sure if it's a bug
>>>>>>> or not, then please post to R-devel.  That's a moderated list so if this
>>>>>>> is your first post, it may take a while to appear.
>>>>>>> 
>>>>>>> This probably seems unreasonable to you, but a lot of abuse is sent to
>>>>>>> the bug list, so we block it quite early.  I'll unblock you now, but
>>>>>>> please don't post there again unless your discussion on R-devel
>>>>>>> indicates this is a problem with R rather than i3.
>>>>>> Duncan Murdoch
>>>>>>> 
>>>>>>> Well, I don't know what it means to "email to explaining why", so I
>>>>>>> tried to subscribe to R-devel. However, it's been ten minutes and no
>>>>>>> confirmation email. So I tracked down your email addresses from the R
>>>>>>> website. I'm still cc'ing r-devel.
>>>>>>> 
>>>>>>> I hope it is OK to send the bug by email. I really want to get back to
>>>>>>> what I was doing, but I don't want to lose the work I put into writing
>>>>>>> this bug report, so I'm attaching it to this message.
>>>>>>> 
>>>>>>> Thank you,
>>>>>>> 
>>>>>>> Frederick Eaton
>>>>>>> 
>>>>>>> 
>>>>>> 
>>>> 
>>> 
>>> ______________________________________________
>>> R-devel at r-project.org mailing list
>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>> 
>> -- 
>> Peter Dalgaard, Professor,
>> Center for Statistics, Copenhagen Business School
>> Solbjerg Plads 3, 2000 Frederiksberg, Denmark
>> Phone: (+45)38153501
>> Office: A 4.23
>> Email: pd.mes at cbs.dk  Priv: PDalgd at gmail.com
>> 
>> 
>> 
>> 
>> 
>> 
>> 
>> 
>> 

-- 
Peter Dalgaard, Professor,
Center for Statistics, Copenhagen Business School
Solbjerg Plads 3, 2000 Frederiksberg, Denmark
Phone: (+45)38153501
Office: A 4.23
Email: pd.mes at cbs.dk  Priv: PDalgd at gmail.com


From hpages at fredhutch.org  Mon Feb  8 19:48:50 2016
From: hpages at fredhutch.org (=?UTF-8?B?SGVydsOpIFBhZ8Oocw==?=)
Date: Mon, 8 Feb 2016 10:48:50 -0800
Subject: [Rd] inconsistency in treatment of USE.NAMES argument
Message-ID: <56B8E312.1060707@fredhutch.org>

Hi,

Both vapply() and sapply() support the 'USE.NAMES' argument. According
to the man page:

   USE.NAMES: logical; if ?TRUE? and if ?X? is character, use ?X? as
             ?names? for the result unless it had names already.

But if 'X' has names already and 'USE.NAMES' is FALSE, it's not clear
what will happen to the names. Are they going to propagate to the
result or not? Unfortunately, vapply() and sapply() give a different
answer:

   > vapply(list(A="a", B=1:2), is.integer, logical(1), USE.NAMES=FALSE)
   [1] FALSE  TRUE

   > sapply(list(A="a", B=1:2), is.integer, USE.NAMES=FALSE)
       A     B
   FALSE  TRUE

Wouldn't it make sense to have vapply() and sapply() treat the
'USE.NAMES' argument consistently? The behavior of vapply() seems
to make more sense to me. Note that it's consistent with what mapply()
does:

   > mapply(is.integer, list(A="a", B=1:2), USE.NAMES=FALSE)
   [1] FALSE  TRUE

If the behavior of sapply() cannot be changed, at least the man page
could clarify what happens when 'USE.NAMES' is FALSE, which is
different for each function.

Thanks,
H.

-- 
Herv? Pag?s

Program in Computational Biology
Division of Public Health Sciences
Fred Hutchinson Cancer Research Center
1100 Fairview Ave. N, M1-B514
P.O. Box 19024
Seattle, WA 98109-1024

E-mail: hpages at fredhutch.org
Phone:  (206) 667-5791
Fax:    (206) 667-1319


From marc_schwartz at me.com  Mon Feb  8 23:03:24 2016
From: marc_schwartz at me.com (Marc Schwartz)
Date: Mon, 08 Feb 2016 16:03:24 -0600
Subject: [Rd] Apparent bug in summary.data.frame() with columns of Date
 class and NA's present
Message-ID: <BDE8DA12-3882-42C6-817A-B8772DC4A9EA@me.com>

Hi all,

Based upon an exchange with G?ran Brostr?m on R-Help today:

  https://stat.ethz.ch/pipermail/r-help/2016-February/435992.html

there appears to be a bug in summary.data.frame() in the case where a data frame contains Date class columns that contain NA's and other columns, if present, do not.

Example, modified from R-Help:

x <- c(18000000, 18810924, 19091227, 19027233, 19310526, 19691228, NA)
x.Date <- as.Date(as.character(x), format = "%Y%m%d")

DF.Dates <- data.frame(Col1 = x.Date)

> summary(x.Date)
        Min.      1st Qu.       Median         Mean      3rd Qu. 
"1881-09-24" "1902-12-04" "1920-09-10" "1923-04-12" "1941-01-17" 
        Max.         NA's 
"1969-12-28"          "3" 


# NA's missing from output
> summary(DF.Dates)
      Col1           
 Min.   :1881-09-24  
 1st Qu.:1902-12-04  
 Median :1920-09-10  
 Mean   :1923-04-12  
 3rd Qu.:1941-01-17  
 Max.   :1969-12-28  


DF.Dates$x1 <- 1:7

> DF.Dates
        Col1 x1
1       <NA>  1
2 1881-09-24  2
3 1909-12-27  3
4       <NA>  4
5 1931-05-26  5
6 1969-12-28  6
7       <NA>  7

# NA's still missing
> summary(DF.Dates)
      Col1                  x1     
 Min.   :1881-09-24   Min.   :1.0  
 1st Qu.:1902-12-04   1st Qu.:2.5  
 Median :1920-09-10   Median :4.0  
 Mean   :1923-04-12   Mean   :4.0  
 3rd Qu.:1941-01-17   3rd Qu.:5.5  
 Max.   :1969-12-28   Max.   :7.0  


DF.Dates$x2 <- c(1:6, NA)

# NA's show if another column has any
> summary(DF.Dates)
      Col1                  x1            x2      
 Min.   :1881-09-24   Min.   :1.0   Min.   :1.00  
 1st Qu.:1902-12-04   1st Qu.:2.5   1st Qu.:2.25  
 Median :1920-09-10   Median :4.0   Median :3.50  
 Mean   :1923-04-12   Mean   :4.0   Mean   :3.50  
 3rd Qu.:1941-01-17   3rd Qu.:5.5   3rd Qu.:4.75  
 Max.   :1969-12-28   Max.   :7.0   Max.   :6.00  
 NA's   :3                          NA's   :1     


The behavior appears to occur because summary.Date() assigns an "NAs" attribute internally that contains the count of NA's in the source Date vector:

 x <- summary.default(unclass(object), digits = digits, ...)
 if (m <- match("NA's", names(x), 0)) {
       NAs <- as.integer(x[m])
       x <- x[-m]
       attr(x, "NAs") <- NAs
   }

rather than the count being retained as an actual element in the result vector, as in summary.default():

       nas <- is.na(object)
       object <- object[!nas]
       qq <- stats::quantile(object)
       qq <- signif(c(qq[1L:3L], mean(object), qq[4L:5L]), digits)
       names(qq) <- c("Min.", "1st Qu.", "Median", "Mean", "3rd Qu.", 
           "Max.")
       if (any(nas)) 
           c(qq, `NA's` = sum(nas))
       else qq


This results in an apparent (but not real) error in the value of the variable 'nr' within summary.date.frame(), which is used to set the length of the result created within that function:

   nr <- if (nv) 
       max(unlist(lapply(z, NROW)))
   else 0

'nr' is used later in the function to set the length of the initial result vector 'sms', which in turn is assigned back to the result list 'z'.

In the case of my example above, where the NA's are not printed, 'nr' is 6, rather than 7. 6 is correct, since that is the actual length of the result vector from summary.Date(), even though the printed output of the result, would appear to contain 7 elements, including the NA count, because of the behavior of print.summaryDefault().

This results in an apparent truncation of the result, with a loss of the "NAs" attribute from summary.Date(), when the result is returned by summary.data.frame().

If the source vector is numeric, as per my example above, then 'nr' is set to 7 when NA's are present and the result is correctly printed along with the other columns.

The history of the difference in the manner in which the NA counts are stored in the different summary() methods is not clear and so I am not clear on how to consider a resolution.

At least three options seem possible and I have not fully thought through the implications of each yet:

1. Modify the code that creates and uses 'nr' in summary.data.frame(), to account for the NAs attribute from summary.Date().
2. Restore the NAs attribute later in the code, if present in the vector that results from summary.Date().
3. Modify the code in summary.Date() so that it mimics the approach in summary.default() relative to storing the NA count.

It is important to note that summary.POSIXct() has code similar to summary.Date() relative to the handling of NA's.

In addition, print.summaryDefault() contains checks for both Date and POSIXct classes and outputs accordingly. So the inter-dependencies of the handling of NA's across the methods are notable.

Thus, since there are likely to be other implications for the choice of resolution that I am not considering here and I am likely to  be missing some nuances here, I defer to others for comments/corrections.

Thanks and regards,

Marc Schwartz


From pdalgd at gmail.com  Tue Feb  9 00:15:47 2016
From: pdalgd at gmail.com (peter dalgaard)
Date: Tue, 9 Feb 2016 00:15:47 +0100
Subject: [Rd] Apparent bug in summary.data.frame() with columns of Date
	class and NA's present
In-Reply-To: <BDE8DA12-3882-42C6-817A-B8772DC4A9EA@me.com>
References: <BDE8DA12-3882-42C6-817A-B8772DC4A9EA@me.com>
Message-ID: <4D8757E4-3AD5-44FB-A46C-CB09CA8FA9B2@gmail.com>

Thanks Marc,

It used to be the case that the NA count was stored as a 7th element of the Fivenum+mean summary. This had the side effect that the NAs were displayed using the same format as the other numbers, which was sort of OK for numerics (3.00) but not for class Date (1970-01-04 for three missings???), so Date objects didn't display the NA count at all. This got straightened out at some point, but apparently there's a residual. It could well be that the reason is that we still have

> length(summary(as.Date(0, origin="1970-1-1")))
[1] 6
> length(summary(as.Date(NA, origin="1970-1-1")))
[1] 6

whereas other numerics get one element longer in case of NAs

> length(summary(as.integer(0)))
[1] 6
> length(summary(as.integer(NA)))
[1] 7

but probably the person who fixed it the last time (can't figure out who that was at the moment) need to have a look.
  
-pd

> On 08 Feb 2016, at 23:03 , Marc Schwartz <marc_schwartz at me.com> wrote:
> 
> Hi all,
> 
> Based upon an exchange with G?ran Brostr?m on R-Help today:
> 
>  https://stat.ethz.ch/pipermail/r-help/2016-February/435992.html
> 
> there appears to be a bug in summary.data.frame() in the case where a data frame contains Date class columns that contain NA's and other columns, if present, do not.
> 
> Example, modified from R-Help:
> 
> x <- c(18000000, 18810924, 19091227, 19027233, 19310526, 19691228, NA)
> x.Date <- as.Date(as.character(x), format = "%Y%m%d")
> 
> DF.Dates <- data.frame(Col1 = x.Date)
> 
>> summary(x.Date)
>        Min.      1st Qu.       Median         Mean      3rd Qu. 
> "1881-09-24" "1902-12-04" "1920-09-10" "1923-04-12" "1941-01-17" 
>        Max.         NA's 
> "1969-12-28"          "3" 
> 
> 
> # NA's missing from output
>> summary(DF.Dates)
>      Col1           
> Min.   :1881-09-24  
> 1st Qu.:1902-12-04  
> Median :1920-09-10  
> Mean   :1923-04-12  
> 3rd Qu.:1941-01-17  
> Max.   :1969-12-28  
> 
> 
> DF.Dates$x1 <- 1:7
> 
>> DF.Dates
>        Col1 x1
> 1       <NA>  1
> 2 1881-09-24  2
> 3 1909-12-27  3
> 4       <NA>  4
> 5 1931-05-26  5
> 6 1969-12-28  6
> 7       <NA>  7
> 
> # NA's still missing
>> summary(DF.Dates)
>      Col1                  x1     
> Min.   :1881-09-24   Min.   :1.0  
> 1st Qu.:1902-12-04   1st Qu.:2.5  
> Median :1920-09-10   Median :4.0  
> Mean   :1923-04-12   Mean   :4.0  
> 3rd Qu.:1941-01-17   3rd Qu.:5.5  
> Max.   :1969-12-28   Max.   :7.0  
> 
> 
> DF.Dates$x2 <- c(1:6, NA)
> 
> # NA's show if another column has any
>> summary(DF.Dates)
>      Col1                  x1            x2      
> Min.   :1881-09-24   Min.   :1.0   Min.   :1.00  
> 1st Qu.:1902-12-04   1st Qu.:2.5   1st Qu.:2.25  
> Median :1920-09-10   Median :4.0   Median :3.50  
> Mean   :1923-04-12   Mean   :4.0   Mean   :3.50  
> 3rd Qu.:1941-01-17   3rd Qu.:5.5   3rd Qu.:4.75  
> Max.   :1969-12-28   Max.   :7.0   Max.   :6.00  
> NA's   :3                          NA's   :1     
> 
> 
> The behavior appears to occur because summary.Date() assigns an "NAs" attribute internally that contains the count of NA's in the source Date vector:
> 
> x <- summary.default(unclass(object), digits = digits, ...)
> if (m <- match("NA's", names(x), 0)) {
>       NAs <- as.integer(x[m])
>       x <- x[-m]
>       attr(x, "NAs") <- NAs
>   }
> 
> rather than the count being retained as an actual element in the result vector, as in summary.default():
> 
>       nas <- is.na(object)
>       object <- object[!nas]
>       qq <- stats::quantile(object)
>       qq <- signif(c(qq[1L:3L], mean(object), qq[4L:5L]), digits)
>       names(qq) <- c("Min.", "1st Qu.", "Median", "Mean", "3rd Qu.", 
>           "Max.")
>       if (any(nas)) 
>           c(qq, `NA's` = sum(nas))
>       else qq
> 
> 
> This results in an apparent (but not real) error in the value of the variable 'nr' within summary.date.frame(), which is used to set the length of the result created within that function:
> 
>   nr <- if (nv) 
>       max(unlist(lapply(z, NROW)))
>   else 0
> 
> 'nr' is used later in the function to set the length of the initial result vector 'sms', which in turn is assigned back to the result list 'z'.
> 
> In the case of my example above, where the NA's are not printed, 'nr' is 6, rather than 7. 6 is correct, since that is the actual length of the result vector from summary.Date(), even though the printed output of the result, would appear to contain 7 elements, including the NA count, because of the behavior of print.summaryDefault().
> 
> This results in an apparent truncation of the result, with a loss of the "NAs" attribute from summary.Date(), when the result is returned by summary.data.frame().
> 
> If the source vector is numeric, as per my example above, then 'nr' is set to 7 when NA's are present and the result is correctly printed along with the other columns.
> 
> The history of the difference in the manner in which the NA counts are stored in the different summary() methods is not clear and so I am not clear on how to consider a resolution.
> 
> At least three options seem possible and I have not fully thought through the implications of each yet:
> 
> 1. Modify the code that creates and uses 'nr' in summary.data.frame(), to account for the NAs attribute from summary.Date().
> 2. Restore the NAs attribute later in the code, if present in the vector that results from summary.Date().
> 3. Modify the code in summary.Date() so that it mimics the approach in summary.default() relative to storing the NA count.
> 
> It is important to note that summary.POSIXct() has code similar to summary.Date() relative to the handling of NA's.
> 
> In addition, print.summaryDefault() contains checks for both Date and POSIXct classes and outputs accordingly. So the inter-dependencies of the handling of NA's across the methods are notable.
> 
> Thus, since there are likely to be other implications for the choice of resolution that I am not considering here and I am likely to  be missing some nuances here, I defer to others for comments/corrections.
> 
> Thanks and regards,
> 
> Marc Schwartz
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel

-- 
Peter Dalgaard, Professor,
Center for Statistics, Copenhagen Business School
Solbjerg Plads 3, 2000 Frederiksberg, Denmark
Phone: (+45)38153501
Office: A 4.23
Email: pd.mes at cbs.dk  Priv: PDalgd at gmail.com


From maechler at stat.math.ethz.ch  Tue Feb  9 12:37:56 2016
From: maechler at stat.math.ethz.ch (Martin Maechler)
Date: Tue, 9 Feb 2016 12:37:56 +0100
Subject: [Rd] inconsistency in treatment of USE.NAMES argument
In-Reply-To: <56B8E312.1060707@fredhutch.org>
References: <56B8E312.1060707@fredhutch.org>
Message-ID: <22201.53140.811577.447542@stat.math.ethz.ch>

>>>>> Herv? Pag?s <hpages at fredhutch.org>
>>>>>     on Mon, 8 Feb 2016 10:48:50 -0800 writes:

    > Hi,
    > Both vapply() and sapply() support the 'USE.NAMES' argument. According
    > to the man page:

    > USE.NAMES: logical; if ?TRUE? and if ?X? is character, use ?X? as
    >    ?names? for the result unless it had names already.

    > But if 'X' has names already and 'USE.NAMES' is FALSE, it's not clear
    > what will happen to the names. Are they going to propagate to the
    > result or not? Unfortunately, vapply() and sapply() give a different
    > answer:

    >> vapply(list(A="a", B=1:2), is.integer, logical(1), USE.NAMES=FALSE)
    > [1] FALSE  TRUE

    >> sapply(list(A="a", B=1:2), is.integer, USE.NAMES=FALSE)
    > A     B
    > FALSE  TRUE

This is very unfortunate, and I was not aware of this.

You know that sapply()  is an order of magnitude older than vapply()
and you probably don't know that lapply() is also somewhat older
than sapply() [but that part is pre-R (but S-) history ...]
which explains part:

1) lapply() does *not* have a  USE.NAMES  argument and it
   always keeps names when they are there in X.

2) sapply() has been designed as "s"implified l"apply" where
   in this case "simplified" also was to mean "user-friendly" /
   "simple to use".
   For that reason,
   a) sapply() also keeps names when they are there (as lapply).
   b) If USE.NAMES=TRUE (as by default) is also constructs names
      in cases where lapply() does not contain, i.e., in case of
      character X.

3) IIRC, the goals for vapply() had been  "like sapply", with two advantages:
   a. faster
   b. "error-checking" in the sense of ensuring consistent
       results of the single function calls.

    > Wouldn't it make sense to have vapply() and sapply() treat the
    > 'USE.NAMES' argument consistently? 

Yes, but from what I wrote above, I believe  vapply() would have
to change.

Martin


    > The behavior of vapply() seems
    > to make more sense to me. Note that it's consistent with what mapply()
    > does:

    >> mapply(is.integer, list(A="a", B=1:2), USE.NAMES=FALSE)
    > [1] FALSE  TRUE

    > If the behavior of sapply() cannot be changed, at least the man page
    > could clarify what happens when 'USE.NAMES' is FALSE, which is
    > different for each function.

    > Thanks,
    > H.

    > -- 
    > Herv? Pag?s

    > Program in Computational Biology
    > Division of Public Health Sciences
    > Fred Hutchinson Cancer Research Center
    > 1100 Fairview Ave. N, M1-B514
    > P.O. Box 19024
    > Seattle, WA 98109-1024

    > E-mail: hpages at fredhutch.org
    > Phone:  (206) 667-5791
    > Fax:    (206) 667-1319

    > ______________________________________________
    > R-devel at r-project.org mailing list
    > https://stat.ethz.ch/mailman/listinfo/r-devel


From coypu at sdf.org  Tue Feb  9 06:41:16 2016
From: coypu at sdf.org (coypu at sdf.org)
Date: Tue, 9 Feb 2016 05:41:16 +0000
Subject: [Rd] Minor portability patch
Message-ID: <20160209054116.GA2181@SDF.ORG>

Hi, I've used the following patch

First because re-defining strtoi is a problem, and it's named Strtoi
elsewhere.
Second because that is the sole use of strtoi that isn't Strtoi.
Third, use = instead of ==, which is bash-specific.

Additionally I must note there are a number of tests in configure.ac which
do not append x to the beginning of the string.
I have been told that it may result in undefined behaviour in some shells when
the string is empty.

If you wish, I will provide a patch for this as well.


--- src/main/character.c.orig	2016-02-03 01:59:38.000000000 +0000
+++ src/main/character.c
@@ -1561,7 +1561,7 @@ SEXP attribute_hidden do_strtrim(SEXP ca
     return s;
 }
 
-static int strtoi(SEXP s, int base)
+static int Strtoi(SEXP s, int base)
 {
     long int res;
     char *endp;
@@ -1595,7 +1595,7 @@ SEXP attribute_hidden do_strtoi(SEXP cal
 
     PROTECT(ans = allocVector(INTSXP, n = LENGTH(x)));
     for(i = 0; i < n; i++)
-	INTEGER(ans)[i] = strtoi(STRING_ELT(x, i), base);
+	INTEGER(ans)[i] = Strtoi(STRING_ELT(x, i), base);
     UNPROTECT(1);
 
     return ans;

--- configure.ac.orig	2016-02-05 17:07:44.000000000 +0000
+++ configure.ac
@@ -327,7 +327,7 @@ AC_ARG_ENABLE([lto],
 if test "x${want_lto}" != xno; then
   LTO=-flto
 fi
-if test "x${want_lto}" == xyes; then
+if test "x${want_lto}" = xyes; then
   LTOALL=-flto
 fi
 AC_SUBST(LTO)


From jlisic at gmail.com  Tue Feb  9 20:31:33 2016
From: jlisic at gmail.com (Jonathan Lisic)
Date: Tue, 9 Feb 2016 14:31:33 -0500
Subject: [Rd] Typo in C++11 Section of Writing R Extensions
Message-ID: <918B1F1D-BDB0-47E2-8CCB-70CFDB4B3981@gmail.com>

Hi, I was reading through the R extensions website and noticed that the example code at the end of the section makes references to CXX11XSTD and CXX11XFLAGS, shouldn?t these be CXX1XSTD and CXX1XFLAGS respectfully? (on the second and fourth line)
CXX1X=`"${R_HOME}/bin/R" CMD config CXX11X`
CXX1XSTD=`"${R_HOME}/bin/R" CMD config CXX11XSTD`
CXX="$(CXX1X) $(CXX1XSTD)"
CXXFLAGS=`"${R_HOME}/bin/R" CMD config CXX11XFLAGS`
AC_LANG(C++)
Sorry if this has been reported before,
Jonathan Lisic


From plummerm at iarc.fr  Tue Feb  9 21:04:17 2016
From: plummerm at iarc.fr (Martyn Plummer)
Date: Tue, 9 Feb 2016 20:04:17 +0000
Subject: [Rd] Typo in C++11 Section of Writing R Extensions
In-Reply-To: <918B1F1D-BDB0-47E2-8CCB-70CFDB4B3981@gmail.com>
References: <918B1F1D-BDB0-47E2-8CCB-70CFDB4B3981@gmail.com>
Message-ID: <1455048257540.40333@iarc.fr>

Yes you are quite correct and this is the right place for reporting errors in the manuals. I have fixed it.
Martyn
________________________________________
From: R-devel <r-devel-bounces at r-project.org> on behalf of Jonathan Lisic <jlisic at gmail.com>
Sent: 09 February 2016 20:31
To: r-devel at r-project.org
Subject: [Rd] Typo in C++11 Section of Writing R Extensions

Hi, I was reading through the R extensions website and noticed that the example code at the end of the section makes references to CXX11XSTD and CXX11XFLAGS, shouldn?t these be CXX1XSTD and CXX1XFLAGS respectfully? (on the second and fourth line)
CXX1X=`"${R_HOME}/bin/R" CMD config CXX11X`
CXX1XSTD=`"${R_HOME}/bin/R" CMD config CXX11XSTD`
CXX="$(CXX1X) $(CXX1XSTD)"
CXXFLAGS=`"${R_HOME}/bin/R" CMD config CXX11XFLAGS`
AC_LANG(C++)
Sorry if this has been reported before,
Jonathan Lisic

______________________________________________
R-devel at r-project.org mailing list
https://stat.ethz.ch/mailman/listinfo/r-devel
-----------------------------------------------------------------------
This message and its attachments are strictly confidenti...{{dropped:8}}


From spluque at gmail.com  Tue Feb  9 21:04:49 2016
From: spluque at gmail.com (Sebastian P. Luque)
Date: Tue, 9 Feb 2016 14:04:49 -0600
Subject: [Rd] build fails with --enable-strict-barrier
Message-ID: <87a8n9myzi.fsf@gmail.com>

Hello,

Until last weekend, I used to build R Devel smoothly with this switch
(--enable-strict-barrier) on, but now it fails on my Debian system
(found the culprit after posting on r-sig-debian).  Configuring and
building with:

---<--------------------cut here---------------start------------------->---
tools/rsync-recommended
R_PAPERSIZE=letter \
R_BATCHSAVE="--no-save --no-restore" \
R_BROWSER=xdg-open \
LIBnn=lib \
./configure \
    --enable-R-shlib \
    --enable-strict-barrier \
    --with-blas \
    --with-lapack \
    --with-readline \
    --with-tcl-config=/usr/lib/tcl8.6/tclConfig.sh \
    --with-tk-config=/usr/lib/tk8.6/tkConfig.sh
make
---<--------------------cut here---------------end--------------------->---

the build shows several warnings about function dataptr:

---<--------------------cut here---------------start------------------->---
radixsort.c:1643:10: warning: implicit declaration of function ?DATAPTR? [-Wimplicit-function-declaration]
     xd = DATAPTR(x);
          ^
radixsort.c:1643:8: warning: assignment makes pointer from integer without a cast [-Wint-conversion]
     xd = DATAPTR(x);
        ^
radixsort.c:1735:5: warning: assignment makes pointer from integer without a cast [-Wint-conversion]
  xd = DATAPTR(x);
---<--------------------cut here---------------end--------------------->---

leading to complete build failure:

---<--------------------cut here---------------start------------------->---
../../lib/libR.so: undefined reference to `DATAPTR'
collect2: error: ld returned 1 exit status
Makefile:144: recipe for target 'R.bin' failed
make[3]: *** [R.bin] Error 1
make[3]: Leaving directory '/usr/local/src/R/Devel/src/main'
Makefile:134: recipe for target 'R' failed
make[2]: *** [R] Error 2
make[2]: Leaving directory '/usr/local/src/R/Devel/src/main'
Makefile:28: recipe for target 'R' failed
make[1]: *** [R] Error 1
make[1]: Leaving directory '/usr/local/src/R/Devel/src'
Makefile:60: recipe for target 'R' failed
make: *** [R] Error 1
---<--------------------cut here---------------end--------------------->---

No problems occur without the switch.

I'm attaching the config log.

-- 
Seb
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: config.log
URL: <https://stat.ethz.ch/pipermail/r-devel/attachments/20160209/068134dc/attachment.pl>

From coypu at sdf.org  Tue Feb  9 21:58:59 2016
From: coypu at sdf.org (coypu at sdf.org)
Date: Tue, 9 Feb 2016 20:58:59 +0000
Subject: [Rd] build fails with --enable-strict-barrier
In-Reply-To: <87a8n9myzi.fsf@gmail.com>
References: <87a8n9myzi.fsf@gmail.com>
Message-ID: <20160209205859.GA24385@SDF.ORG>

Hi, I'm very new here and unfamiliar with R.
However, I feel like I can still provide some input.

This is a bug, it must not use DATAPTR.
Perhaps this is a suitable replacement for these instances:
xd = x[1];

A safer temporary option is to drop this flag.

I am unsure whether that is acceptable though.


From spencer.graves at prodsyse.com  Tue Feb  9 23:56:42 2016
From: spencer.graves at prodsyse.com (Spencer Graves)
Date: Tue, 9 Feb 2016 16:56:42 -0600
Subject: [Rd] problem plotting "ts" in a data.frame
Message-ID: <56BA6EAA.7080003@prodsyse.com>

Hello:


       I'm having trouble plotting an object of class "ts" that is in a 
data.frame.  I can do it with(data.frame, plot(...)) but not with 
plot(..., data.frame);  see the example below.


       This work around gets me past this problem.  However, I thought 
the R Core team might want to know about this if they don't already.


       Thanks for all your work in making R and CRAN the great tools 
that they are -- and I apologize for wasting your time if you are 
already familiar with this.


       Spencer Graves


 > y.ts <- ts(2:4, 5)
 > XY <- data.frame(x1=6:8, y1=y.ts)
 > plot(y1~x1, XY)
Error in plot.window(...) : need finite 'xlim' values
In addition: Warning messages:
1: In .cbind.ts(list(...), .makeNamesTs(...), dframe = dframe, union = 
FALSE) :
   non-intersecting series
2: In min(x) : no non-missing arguments to min; returning Inf
3: In max(x) : no non-missing arguments to max; returning -Inf
4: In min(x) : no non-missing arguments to min; returning Inf
5: In max(x) : no non-missing arguments to max; returning -Inf
 > plot(y1, XY)
Error in plot(y1, XY) : object 'y1' not found
 > with(XY, plot(y1))
 > sessionInfo()
R version 3.2.3 (2015-12-10)
Platform: x86_64-apple-darwin13.4.0 (64-bit)
Running under: OS X 10.11.2 (El Capitan)

locale:
[1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8

attached base packages:
[1] stats     graphics  grDevices utils     datasets  methods base

loaded via a namespace (and not attached):
[1] tools_3.2.3


From renaud at techunix.technion.ac.il  Wed Feb 10 11:40:46 2016
From: renaud at techunix.technion.ac.il (Renaud Gaujoux)
Date: Wed, 10 Feb 2016 12:40:46 +0200
Subject: [Rd] Method from package dependency is not updated due to lazy load?
Message-ID: <CAHavPHGhFXfvi8FLMn_+kZ9DBMRUjo1SxRd7ghUNxVTznKTjBA@mail.gmail.com>

Hi,

not sure this is a bug or just an unavoidable undesirable side-effect -- or
just me that does not do the right thing.

Consider the code and output below. It creates 2 packages:
  * pkgA
  * pkgB that creates a method for a generic defined in pkgA

Changes in a method for the generic in pkgA (after re-installing pkgA) are
not reflected in pkgB, unless pkgB is re-installed against the new version
of pkgA.
I understand this may be linked to lazy-loading, which somehow keeps the
old method version.
More worrying is the fact that calling pkgA::genericA() in  .GlobalEnv
still calls the old version.

I guess this is due to lazy-load caching the method definition, but is this
normal/known behaviour?

This means that all the packages that depend on pkgA must be re-installed,
even after small internal changes that do not affect the interface or
behavior of the exported generic, e.g., internal functions with new
required arguments used in the imported generic (which is the error that
got me looking into this).

Updating reverse-dependencies when installing pkgA could solve the issue
(default with message, and optionally disabled). At minimum, a warning when
loading pkgB could notify the user that there could be issues due to
version discrepancy.

Thank you.

Bests,
Renaud

## Code

library(devtools)
unlink('test', recursive = TRUE)
dir.create('test/lib', recursive = TRUE)
# create packages
createA <- function(version){
  dir.create(file.path('test', version), recursive = TRUE)
  pdir <- file.path('test', version, 'pkgA')
  create(pdir, list(Depends = 'methods'), rstudio = FALSE)
  cat(sprintf("
  setGeneric('genericA', function(x) standardGeneric('genericA'))
  setMethod('genericA', 'missing', function(x) 'A-%s')", version), file =
file.path(pdir, 'R/function.R'))
}
createA('v1')
createA('v2')
# package B imports A
create('test/pkgB', list(Imports = 'pkgA', Depends = 'methods'), rstudio =
FALSE)
cat('import(pkgA)', file = 'test/pkgB/NAMESPACE', append = TRUE)
cat("
callA <- function() genericA()
setGeneric('genericA', package = 'pkgA')
setMethod('genericA', 'character', function(x) genericA())
", file = 'test/pkgB/R/function.R')

# install packages
install.packages('test/v1/pkgA', lib = 'test/lib', repos = NULL, quiet =
TRUE)
install.packages('test/pkgB', lib = 'test/lib', repos = NULL, quiet = TRUE)
# this returns A-v1
system("Rscript -e \"library(pkgA, lib = 'test/lib'); genericA()\"")
system("Rscript -e \"library(pkgB, lib = 'test/lib'); callA();
pkgA::genericA()\"")

# install pkgA version 2
install.packages('test/v2/pkgA', lib = 'test/lib', repos = NULL, quiet =
TRUE)
# this returns A-v2
system("Rscript -e \"library(pkgA, lib = 'test/lib'); genericA()\"")
# this still returns A-v1
system("Rscript -e \"library(pkgB, lib = 'test/lib'); callA();
pkgA::genericA()\"")

# re-install pkgB
install.packages('test/pkgB', lib = 'test/lib', repos = NULL, quiet = TRUE)
# this now returns A-v2
system("Rscript -e \"library(pkgB, lib = 'test/lib'); callA();
pkgA::genericA()\"")


### Output

> library(devtools)> unlink('test', recursive = TRUE)> dir.create('test/lib', recursive = TRUE)> # create packages> createA <- function(version){+   dir.create(file.path('test', version), recursive = TRUE)+   pdir <- file.path('test', version, 'pkgA')+   create(pdir, list(Depends = 'methods'), rstudio = FALSE)+   cat(sprintf("+   setGeneric('genericA', function(x) standardGeneric('genericA'))+   setMethod('genericA', 'missing', function(x) 'A-%s')", version), file = file.path(pdir, 'R/function.R'))+ }> createA('v1')Creating package 'pkgA' in '/home/renaud/tmp/r-devel/test/v1'
No DESCRIPTION found. Creating with values:


Package: pkgA
Title: What the Package Does (one line, title case)
Version: 0.0.0.9000
Authors at R: person("First", "Last", email = "first.last at example.com",
role = c("aut", "cre"))
Description: What the package does (one paragraph).
Depends: methods
License: What license is it under?
LazyData: true> createA('v2')Creating package 'pkgA' in
'/home/renaud/tmp/r-devel/test/v2'
No DESCRIPTION found. Creating with values:


Package: pkgA
Title: What the Package Does (one line, title case)
Version: 0.0.0.9000
Authors at R: person("First", "Last", email = "first.last at example.com",
role = c("aut", "cre"))
Description: What the package does (one paragraph).
Depends: methods
License: What license is it under?
LazyData: true> # package B imports A> create('test/pkgB',
list(Imports = 'pkgA', Depends = 'methods'), rstudio = FALSE)Creating
package 'pkgB' in '/home/renaud/tmp/r-devel/test'
No DESCRIPTION found. Creating with values:


Package: pkgB
Title: What the Package Does (one line, title case)
Version: 0.0.0.9000
Authors at R: person("First", "Last", email = "first.last at example.com",
role = c("aut", "cre"))
Description: What the package does (one paragraph).
Depends: methods
License: What license is it under?
LazyData: true
Imports: pkgA> cat('import(pkgA)', file = 'test/pkgB/NAMESPACE',
append = TRUE)> cat("+ callA <- function() genericA()+
setGeneric('genericA', package = 'pkgA')+ setMethod('genericA',
'character', function(x) genericA())+ ", file =
'test/pkgB/R/function.R')> > # install packages>
install.packages('test/v1/pkgA', lib = 'test/lib', repos = NULL, quiet
= TRUE)> install.packages('test/pkgB', lib = 'test/lib', repos = NULL,
quiet = TRUE)> # this returns A-v1> system("Rscript -e \"library(pkgA,
lib = 'test/lib'); genericA()\"")Loading required package: methods
[1] "A-v1"> system("Rscript -e \"library(pkgB, lib = 'test/lib');
callA(); pkgA::genericA()\"")Loading required package: methods
[1] "A-v1"
[1] "A-v1"> > # install pkgA version 2>
install.packages('test/v2/pkgA', lib = 'test/lib', repos = NULL, quiet
= TRUE)> # this returns A-v2> system("Rscript -e \"library(pkgA, lib =
'test/lib'); genericA()\"")Loading required package: methods
[1] "A-v2"> # this still returns A-v1> system("Rscript -e
\"library(pkgB, lib = 'test/lib'); callA();
pkgA::genericA()\"")Loading required package: methods
[1] "A-v1"
[1] "A-v1"> > # re-install pkgB> install.packages('test/pkgB', lib =
'test/lib', repos = NULL, quiet = TRUE)> # this now returns A-v2>
system("Rscript -e \"library(pkgB, lib = 'test/lib'); callA();
pkgA::genericA()\"")Loading required package: methods
[1] "A-v2"
[1] "A-v2"


-- 
Renaud Gaujoux, PhD
Systems Immunology - Technion, Haifa, Israel

	[[alternative HTML version deleted]]


From plummerm at iarc.fr  Wed Feb 10 16:43:00 2016
From: plummerm at iarc.fr (Martyn Plummer)
Date: Wed, 10 Feb 2016 15:43:00 +0000
Subject: [Rd] problem plotting "ts" in a data.frame
In-Reply-To: <56BA6EAA.7080003@prodsyse.com>
References: <56BA6EAA.7080003@prodsyse.com>
Message-ID: <1455118980.4644.50.camel@iarc.fr>

On Tue, 2016-02-09 at 16:56 -0600, Spencer Graves wrote:
> Hello:
> 
> 
>        I'm having trouble plotting an object of class "ts" that is in a 
> data.frame.  I can do it with(data.frame, plot(...)) but not with 
> plot(..., data.frame);  see the example below.

The plot function is generic so the actual function call depends on what
arguments you give it: plot(y.ts) calls the plot.ts method from the
stats package, whereas plot(y.ts ~ x) calls the plot.formula method from
the graphics package. Only the plot.formula method has a data argument.

What happens when you call plot(y1~x1, data=XY) is that first
plot.formula is called and then this calls plot.ts with two arguments
(XY$x1 and XY$y1) that are expected to be compatible time series.
However, they are not. In fact x1 is numeric and when coerced to a time
series it has no time points in common with y1 (which starts at time
t=5). Hence the warning about non-intersecting series.

Since non-overlapping series seems to be fatal in this context it might
be a good idea to give an error at this point. Otherwise I think the
function is behaving correctly.

Martyn

>        This work around gets me past this problem.  However, I thought 
> the R Core team might want to know about this if they don't already.
> 
> 
>        Thanks for all your work in making R and CRAN the great tools 
> that they are -- and I apologize for wasting your time if you are 
> already familiar with this.
> 
> 
>        Spencer Graves
> 
> 
>  > y.ts <- ts(2:4, 5)
>  > XY <- data.frame(x1=6:8, y1=y.ts)
>  > plot(y1~x1, XY)
> Error in plot.window(...) : need finite 'xlim' values
> In addition: Warning messages:
> 1: In .cbind.ts(list(...), .makeNamesTs(...), dframe = dframe, union = 
> FALSE) :
>    non-intersecting series
> 2: In min(x) : no non-missing arguments to min; returning Inf
> 3: In max(x) : no non-missing arguments to max; returning -Inf
> 4: In min(x) : no non-missing arguments to min; returning Inf
> 5: In max(x) : no non-missing arguments to max; returning -Inf
>  > plot(y1, XY)
> Error in plot(y1, XY) : object 'y1' not found
>  > with(XY, plot(y1))
>  > sessionInfo()
> R version 3.2.3 (2015-12-10)
> Platform: x86_64-apple-darwin13.4.0 (64-bit)
> Running under: OS X 10.11.2 (El Capitan)
> 
> locale:
> [1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8
> 
> attached base packages:
> [1] stats     graphics  grDevices utils     datasets  methods base
> 
> loaded via a namespace (and not attached):
> [1] tools_3.2.3
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel

-----------------------------------------------------------------------
This message and its attachments are strictly confidenti...{{dropped:8}}


From spencer.graves at prodsyse.com  Wed Feb 10 18:02:05 2016
From: spencer.graves at prodsyse.com (Spencer Graves)
Date: Wed, 10 Feb 2016 11:02:05 -0600
Subject: [Rd] problem plotting "ts" in a data.frame
In-Reply-To: <1455118980.4644.50.camel@iarc.fr>
References: <56BA6EAA.7080003@prodsyse.com> <1455118980.4644.50.camel@iarc.fr>
Message-ID: <56BB6D0D.5000307@prodsyse.com>



On 2/10/2016 9:43 AM, Martyn Plummer wrote:
> On Tue, 2016-02-09 at 16:56 -0600, Spencer Graves wrote:
>> Hello:
>>
>>
>>         I'm having trouble plotting an object of class "ts" that is in a
>> data.frame.  I can do it with(data.frame, plot(...)) but not with
>> plot(..., data.frame);  see the example below.
> The plot function is generic so the actual function call depends on what
> arguments you give it: plot(y.ts) calls the plot.ts method from the
> stats package, whereas plot(y.ts ~ x) calls the plot.formula method from
> the graphics package. Only the plot.formula method has a data argument.
>
> What happens when you call plot(y1~x1, data=XY) is that first
> plot.formula is called and then this calls plot.ts with two arguments
> (XY$x1 and XY$y1) that are expected to be compatible time series.
> However, they are not. In fact x1 is numeric and when coerced to a time
> series it has no time points in common with y1 (which starts at time
> t=5). Hence the warning about non-intersecting series.
>
> Since non-overlapping series seems to be fatal in this context it might
> be a good idea to give an error at this point. Otherwise I think the
> function is behaving correctly.
>
> Martyn

Hi, Martyn:


       Thanks for the reply.  I think it's interesting that "plot(x1~y1, 
XY)" works roughly as I would have expected, as does 
"plot(as.numeric(y1)~x1, XY)".  However, "plot(y1~x1, XY)" stops with 
"need finite 'xlim' values" after arriving at "plot.window".  I found 
that quite cryptic.


       In any case, that's for your contributions to R and for 
responding to my question.


       Spencer

>>         This work around gets me past this problem.  However, I thought
>> the R Core team might want to know about this if they don't already.
>>
>>
>>         Thanks for all your work in making R and CRAN the great tools
>> that they are -- and I apologize for wasting your time if you are
>> already familiar with this.
>>
>>
>>         Spencer Graves
>>
>>
>>   > y.ts <- ts(2:4, 5)
>>   > XY <- data.frame(x1=6:8, y1=y.ts)
>>   > plot(y1~x1, XY)
>> Error in plot.window(...) : need finite 'xlim' values
>> In addition: Warning messages:
>> 1: In .cbind.ts(list(...), .makeNamesTs(...), dframe = dframe, union =
>> FALSE) :
>>     non-intersecting series
>> 2: In min(x) : no non-missing arguments to min; returning Inf
>> 3: In max(x) : no non-missing arguments to max; returning -Inf
>> 4: In min(x) : no non-missing arguments to min; returning Inf
>> 5: In max(x) : no non-missing arguments to max; returning -Inf
>>   > plot(y1, XY)
>> Error in plot(y1, XY) : object 'y1' not found
>>   > with(XY, plot(y1))
>>   > sessionInfo()
>> R version 3.2.3 (2015-12-10)
>> Platform: x86_64-apple-darwin13.4.0 (64-bit)
>> Running under: OS X 10.11.2 (El Capitan)
>>
>> locale:
>> [1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8
>>
>> attached base packages:
>> [1] stats     graphics  grDevices utils     datasets  methods base
>>
>> loaded via a namespace (and not attached):
>> [1] tools_3.2.3
>>
>> ______________________________________________
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel
> -----------------------------------------------------------------------
> This message and its attachments are strictly confiden...{{dropped:9}}


From lawrence.michael at gene.com  Thu Feb 11 16:02:12 2016
From: lawrence.michael at gene.com (Michael Lawrence)
Date: Thu, 11 Feb 2016 07:02:12 -0800
Subject: [Rd] inconsistency in treatment of USE.NAMES argument
In-Reply-To: <22201.53140.811577.447542@stat.math.ethz.ch>
References: <56B8E312.1060707@fredhutch.org>
	<22201.53140.811577.447542@stat.math.ethz.ch>
Message-ID: <CAOQ5Nydc506OsZ27vg0yJHywjbRM090E5v5iAC4pyi+Oeg-rRQ@mail.gmail.com>

Changing the vapply() behavior makes sense in principle. I analyzed
the CRAN code base using the R parser and found 143 instances of
calling vapply with USE.NAMES=FALSE. These would need to be inspected
to understand the consequences of the change.

For reference:
/AzureML/R/datasets.R:226
/BBmisc/R/toRangeStr.R:33
/DBI/R/DBDriver.R:205
/Kmisc/R/str_rev.R:37
/Matrix/R/diagMatrix.R:98
/MuMIn/R/utils-models.R:110
/OpenMx/R/MxNamespace.R:702
/OrthoPanels/R/opm.R:167
/XML2R/R/utils.R:16
/assertive.base/tests/testthat/test-utils.R:14
/bigrquery/R/utils.r:13
/bold/R/zzz.R:29
/checkmate/R/checkList.r:56
/coin/R/ExactDistributions.R:80
/coin/R/ExactDistributions.R:97
/coin/R/ExactDistributions.R:234
/coin/R/SymmetryTests.R:217
/copula/R/aux-acopula.R:950
/covr/R/data_frame.R:13
/covr/R/display_name.R:40
/cplm/R/lme4_lmer.R:423
/crunch/R/batches.R:71
/crunch/R/batches.R:102
/crunch/R/categorical-array.R:87
/crunch/R/hide-variables.R:78
/crunch/R/misc.R:68
/crunch/R/share.R:11
/crunch/R/shoji-catalog.R:39
/crunch/R/show.R:88
/crunch/R/subvariables.R:76
/crunch/R/subvariables.R:95
/dplR/R/common.interval.R:8
/dplR/R/fill.internal.NA.R:47
/dplR/R/helpers.R:3
/dplyr/R/dataframe.R:49
/dplyr/R/glimpse.R:38
/dplyr/R/id.r:36
/dplyr/R/tbl-cube.r:98
/dplyr/R/utils.r:15
/fulltext/R/chunks.R:352
/fulltext/R/chunks.R:356
/ggvis/R/transform.R:56
/httr/R/oauth-token-utils.R:23
/igraph/R/lazyeval.R:219
/jsonlite/R/asJSON.data.frame.R:74
/jsonlite/R/deparse_vector.R:26
/jsonlite/R/simplifyDataFrame.R:14
/jsonlite/R/unescape_unicode.R:10
/knitr/R/utils.R:207
/knitrBootstrap/R/knit_bootstrap.R:303
/lazyeval/R/names.R:27
/learningr/R/buggy_count.R:67
/lintr/R/absolute_paths_linter.R:35
/lintr/R/absolute_paths_linter.R:71
/loo/R/helpers.R:13
/loo/R/helpers.R:20
/matconv/R/convEasySyntax.R:71
/matconv/R/convFunctionCalls.R:11
/matconv/R/utils.R:113
/micropan/R/biostrings.R:80
/micropan/R/biostrings.R:106
/mime/R/mime.R:129
/packrat/R/bundle.R:137
/packrat/R/hooks.R:45
/packrat/R/lockfile.R:56
/pixiedust/R/sprinkle_colnames.R:66
/plyr/R/id.r:38
/polyCub/R/polyCub.SV.R:110
/polyCub/R/polyCub.exact.Gauss.R:99
/polyCub/R/polyCub.iso.R:130
/polyCub/R/polyCub.iso.R:166
/polyCub/R/polyCub.iso.R:168
/pryr/R/dots.r:25
/rappdirs/R/utils.r:39
/rbison/R/bison.R:181
/rcrossref/R/cr_ft_text.R:191
/rcrossref/R/get_styles.R:16
/rebus.base/R/internal.R:29
/rerddap/R/info.R:73
/rerddap/R/info.R:80
/rerddap/R/search.R:37
/rerddap/R/search_adv.R:64
/reutils/R/ecitmatch.R:33
/reutils/R/parse-docsum.R:53
/reutils/R/utils.R:44
/reutils/R/utils.R:51
/reutils/R/utils.R:55
/rgbif/R/occ_search.r:230
/rgbif/R/zzz.r:120
/rjstat/R/rjstat.R:75
/rlist/R/internal.R:155
/rnoaa/R/homr.R:140
/rnoaa/R/storm_shp.R:42
/roxygen2/R/template.R:27
/rplos/R/fulltext.R:29
/rplos/R/fulltext.R:82
/shiny/inst/tests/test-bootstrap.r:12
/shinyjs/inst/examples/demo/helpers.R:49
/simcausal/R/network.R:319
/sisal/R/sisalTable.R:806
/sisal/R/sisalTable.R:829
/sisal/R/sisalTable.R:853
/sisal/R/sisalTable.R:915
/sisal/R/sisalTable.R:924
/sisal/R/sisalTable.R:933
/stringdist/R/seqdist.R:130
/stringdist/R/stringdist.R:286
/surveillance/R/calibration_null.R:25
/surveillance/R/calibration_null.R:185
/surveillance/R/epidata.R:356
/surveillance/R/epidata.R:362
/surveillance/R/hhh4.R:311
/surveillance/R/hhh4_methods.R:403
/surveillance/R/hhh4_oneStepAhead.R:126
/surveillance/R/hhh4_plot.R:419
/surveillance/R/hhh4_plot.R:691
/surveillance/R/hhh4_plot.R:744
/surveillance/R/pit.R:29
/surveillance/R/pit.R:45
/surveillance/R/spatial_tools.R:261
/surveillance/R/spatial_tools.R:264
/surveillance/R/twinSIR_profile.R:229
/surveillance/R/twinSIR_simulation.R:284
/surveillance/R/twinSIR_simulation.R:288
/surveillance/R/twinstim.R:212
/surveillance/R/twinstim.R:553
/surveillance/R/twinstim_epitest.R:188
/surveillance/R/twinstim_helper.R:139
/surveillance/R/twinstim_siaf.R:176
/surveydata/R/questions.R:164
/sweidnumbr/R/luhn_algo.R:75
/sweidnumbr/R/oin.R:104
/sweidnumbr/R/oin.R:134
/sweidnumbr/R/pin.R:202
/sweidnumbr/R/pin.R:440
/taxize/R/gni_parse.R:29
/taxize/inst/ignore/taxonclass.R:117
/taxize/inst/ignore/taxonclass2.R:157
/testthat/R/utils.r:13
/textreuse/R/TextReuseCorpus.R:137
/textreuse/R/minhash.R:46
/textreuse/R/similarity.R:111
/tidyr/R/id.R:17

On Tue, Feb 9, 2016 at 3:37 AM, Martin Maechler
<maechler at stat.math.ethz.ch> wrote:
>>>>>> Herv? Pag?s <hpages at fredhutch.org>
>>>>>>     on Mon, 8 Feb 2016 10:48:50 -0800 writes:
>
>     > Hi,
>     > Both vapply() and sapply() support the 'USE.NAMES' argument. According
>     > to the man page:
>
>     > USE.NAMES: logical; if ?TRUE? and if ?X? is character, use ?X? as
>     >    ?names? for the result unless it had names already.
>
>     > But if 'X' has names already and 'USE.NAMES' is FALSE, it's not clear
>     > what will happen to the names. Are they going to propagate to the
>     > result or not? Unfortunately, vapply() and sapply() give a different
>     > answer:
>
>     >> vapply(list(A="a", B=1:2), is.integer, logical(1), USE.NAMES=FALSE)
>     > [1] FALSE  TRUE
>
>     >> sapply(list(A="a", B=1:2), is.integer, USE.NAMES=FALSE)
>     > A     B
>     > FALSE  TRUE
>
> This is very unfortunate, and I was not aware of this.
>
> You know that sapply()  is an order of magnitude older than vapply()
> and you probably don't know that lapply() is also somewhat older
> than sapply() [but that part is pre-R (but S-) history ...]
> which explains part:
>
> 1) lapply() does *not* have a  USE.NAMES  argument and it
>    always keeps names when they are there in X.
>
> 2) sapply() has been designed as "s"implified l"apply" where
>    in this case "simplified" also was to mean "user-friendly" /
>    "simple to use".
>    For that reason,
>    a) sapply() also keeps names when they are there (as lapply).
>    b) If USE.NAMES=TRUE (as by default) is also constructs names
>       in cases where lapply() does not contain, i.e., in case of
>       character X.
>
> 3) IIRC, the goals for vapply() had been  "like sapply", with two advantages:
>    a. faster
>    b. "error-checking" in the sense of ensuring consistent
>        results of the single function calls.
>
>     > Wouldn't it make sense to have vapply() and sapply() treat the
>     > 'USE.NAMES' argument consistently?
>
> Yes, but from what I wrote above, I believe  vapply() would have
> to change.
>
> Martin
>
>
>     > The behavior of vapply() seems
>     > to make more sense to me. Note that it's consistent with what mapply()
>     > does:
>
>     >> mapply(is.integer, list(A="a", B=1:2), USE.NAMES=FALSE)
>     > [1] FALSE  TRUE
>
>     > If the behavior of sapply() cannot be changed, at least the man page
>     > could clarify what happens when 'USE.NAMES' is FALSE, which is
>     > different for each function.
>
>     > Thanks,
>     > H.
>
>     > --
>     > Herv? Pag?s
>
>     > Program in Computational Biology
>     > Division of Public Health Sciences
>     > Fred Hutchinson Cancer Research Center
>     > 1100 Fairview Ave. N, M1-B514
>     > P.O. Box 19024
>     > Seattle, WA 98109-1024
>
>     > E-mail: hpages at fredhutch.org
>     > Phone:  (206) 667-5791
>     > Fax:    (206) 667-1319
>
>     > ______________________________________________
>     > R-devel at r-project.org mailing list
>     > https://stat.ethz.ch/mailman/listinfo/r-devel
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From pauljohn32 at gmail.com  Fri Feb 12 18:13:47 2016
From: pauljohn32 at gmail.com (Paul Johnson)
Date: Fri, 12 Feb 2016 11:13:47 -0600
Subject: [Rd] configure statement for R-devel with updated zlib in user
	account
Message-ID: <CAErODj8FJ==42bQRiso5ajH95bkZG8Zc9rPcFJczdFgYLxxX1Q@mail.gmail.com>

I'm aware R-devel no longer includes zlib. This works find on
up-to-date Linux systems.

On the older Centos 6 cluster at KU, they have zlib tool old for
R-devel. The R-devel configure fails thus:

checking if zlib version >= 1.2.5... no
checking whether zlib support suffices... configure: error: zlib
library and headers are required

In other software, I've seen this kind of thing, so I installed zlib
1.2.8 into $HOME/packages and I can verify that the right pieces are
installed there.

Now I need you to tell me how to tell R to use that. Guesses so far:

$ export PATH=$HOME/packages/bin:$PATH
$ export LD_LIBRARY_PATH=$HOME/packages/lib:$LD_LIBRARY_PATH

What R's configure statement needs to find zlib in my user account?

In R-devel, the ./configure --help doesn't give me a simple-enough
explanation of what I'm supposed to do. I thought I had a solution by
adding this

--with-libpth-prefix=$HOME/packages

but still rejection, new zlib not found.

-- 
Paul E. Johnson
Professor, Political Science        Director
1541 Lilac Lane, Room 504      Center for Research Methods
University of Kansas                 University of Kansas
http://pj.freefaculty.org              http://crmda.ku.edu


From maechler at stat.math.ethz.ch  Sat Feb 13 10:07:43 2016
From: maechler at stat.math.ethz.ch (Martin Maechler)
Date: Sat, 13 Feb 2016 10:07:43 +0100
Subject: [Rd] Deprecating old pkgDepends(), package.dependencies() in tools
In-Reply-To: <22049.4345.168617.473371@stat.math.ethz.ch>
References: <22046.12287.965149.589140@stat.math.ethz.ch>
	<22046.16898.529609.257504@fangorn.hornik.net>
	<22047.53009.873072.626455@stat.math.ethz.ch>
	<5620E2C9.7010202@stats.ox.ac.uk>
	<DF23DAC5A53912408040FF04D8B780AAE13263@EXMB3RSC.roswellpark.org>
	<22049.4345.168617.473371@stat.math.ethz.ch>
Message-ID: <22206.62047.198794.303875@stat.math.ethz.ch>

We will deprecate the functions pkgDepends(), package.dependencies() 
and 2-3 less prominent ones from package tools, 
in R's development version (short "R-devel"), i.e., the one that
will probably become R 3.3.0 sometime in April. 
Instead,  package_dependencies() should be used, possibly after
non-default use of available.packages() to be used as argument
'db', i.e., conceptually
   package_dependencies(pkg, db = available.packages(.....), .....)

The reason for deprecation is that some of these functions only
work with "Depends", but never with "Imports", etc, i.e., that
code has really been written with 'Depends' only in mind and
hence has not been really useful anymore for a while.  OTOH,
package.dependencies() similarly only uses *one* of "Depends",
"Imports", "Suggests", ....  as opposed to the newer and much
better designed alternative package_dependencies()

To our knowledge there are only four (of > 7600) CRAN packages
affected (("FSA", "Zelig", "checkpoint", "packdep") whose
maintainers are addressed via BCC of this e-mail) and the one or
two Bioconductor packages should have been updated since we
talked about this issue R-core internally.

The "R version dependency" that package.dependencies() have
provided seems to be sufficiently available when creating the
package list via  available.packages(*,  filters = ..).

If you are using one of the deprecated functions and hence will
get a warning, and find it hard to replace that use by
a combination of  available.packages()  and
package_dependencies() {note the "_"}, please ask here, as
we may have overlooked edge cases.

This should make this part of tools-package functionality easier
to maintain (and teach etc).

Martin Maechler


From hhoeflin at gmail.com  Sat Feb 13 17:15:14 2016
From: hhoeflin at gmail.com (Holger Hoefling)
Date: Sat, 13 Feb 2016 17:15:14 +0100
Subject: [Rd] Question about CHARSXP and garbage collection
Message-ID: <CAFDswJvbmKTo9Ua3cwPTGVRcn04Wb6FhLKhuui2fxVvCMHh+vw@mail.gmail.com>

Hi,

I had a technical question about CHARSXP and garbage collection and
couldn't find the answer in the R manual.

The question is this. Are CHARSXP garbage collected like any other object,
despite being part of the CHARSXP cache? i.e. is the cache being cleaned by
garbage collection regularly and therefore, when I am in C code, do I need
to protect a CHARSXP?

Thanks!

Holger

	[[alternative HTML version deleted]]


From luke-tierney at uiowa.edu  Sat Feb 13 17:25:13 2016
From: luke-tierney at uiowa.edu (luke-tierney at uiowa.edu)
Date: Sat, 13 Feb 2016 10:25:13 -0600
Subject: [Rd] Question about CHARSXP and garbage collection
In-Reply-To: <CAFDswJvbmKTo9Ua3cwPTGVRcn04Wb6FhLKhuui2fxVvCMHh+vw@mail.gmail.com>
References: <CAFDswJvbmKTo9Ua3cwPTGVRcn04Wb6FhLKhuui2fxVvCMHh+vw@mail.gmail.com>
Message-ID: <alpine.DEB.2.10.1602131024420.2681@luke-Latitude>

They are garbage collected so you do need to protect them in C code.

Best,

luke

On Sat, 13 Feb 2016, Holger Hoefling wrote:

> Hi,
>
> I had a technical question about CHARSXP and garbage collection and
> couldn't find the answer in the R manual.
>
> The question is this. Are CHARSXP garbage collected like any other object,
> despite being part of the CHARSXP cache? i.e. is the cache being cleaned by
> garbage collection regularly and therefore, when I am in C code, do I need
> to protect a CHARSXP?
>
> Thanks!
>
> Holger
>
> 	[[alternative HTML version deleted]]
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>

-- 
Luke Tierney
Ralph E. Wareham Professor of Mathematical Sciences
University of Iowa                  Phone:             319-335-3386
Department of Statistics and        Fax:               319-335-3017
    Actuarial Science
241 Schaeffer Hall                  email:   luke-tierney at uiowa.edu
Iowa City, IA 52242                 WWW:  http://www.stat.uiowa.edu


From suharto_anggono at yahoo.com  Sat Feb 13 17:31:55 2016
From: suharto_anggono at yahoo.com (Suharto Anggono Suharto Anggono)
Date: Sat, 13 Feb 2016 16:31:55 +0000 (UTC)
Subject: [Rd] Show rapply(how="replace") as alternative to 'dendrapply' to
 change leaves?
References: <537067577.2937161.1455381115574.JavaMail.yahoo.ref@mail.yahoo.com>
Message-ID: <537067577.2937161.1455381115574.JavaMail.yahoo@mail.yahoo.com>

A non-leaf dendrogram object in R is a list, possibly nested. In R-devel, rapply() preserves attributes on the list when how = "replace". So, the result of applying rapply(how = "replace") to such a dendrogram object is a dendrogram object. Usually, non-list components of such a dendrogram object are the leaves. So, rapply(how = "replace") can be used to change leaves only of such a dendrogram object. For such case, it is an alternative to 'dendrapply'.

How about showing it in the documentation? In particular, in examples for 'dendrapply', creation of 'dL' can alternatively use something like the following.
     local({
       colLabLeaf <<- function(n) {
           a <- attributes(n)
           i <<- i+1
           attr(n, "nodePar") <-
               c(a$nodePar, list(lab.col = mycols[i], lab.font = i%%3))
           n
       }
       mycols <- grDevices::rainbow(attr(dhc21,"members"))
       i <- 0
      })
     dL <- rapply(dhc21, colLabLeaf, how = "replace")


From jesper.gadin at gmail.com  Mon Feb 15 10:28:59 2016
From: jesper.gadin at gmail.com (=?UTF-8?Q?Jesper_G=C3=A5din?=)
Date: Mon, 15 Feb 2016 10:28:59 +0100
Subject: [Rd] configure statement for R-devel with updated zlib in user
	account
In-Reply-To: <CAErODj8FJ==42bQRiso5ajH95bkZG8Zc9rPcFJczdFgYLxxX1Q@mail.gmail.com>
References: <CAErODj8FJ==42bQRiso5ajH95bkZG8Zc9rPcFJczdFgYLxxX1Q@mail.gmail.com>
Message-ID: <CAPmAPXMaOhVMEJAKfRD6X61VWwpKNVhtbG_95-M_yZ0XGqPhCg@mail.gmail.com>

Hi Paul,

This might be what you are looking for.
https://stat.ethz.ch/pipermail/r-devel/2015-April/070951.html

Jesper

On Fri, Feb 12, 2016 at 6:13 PM, Paul Johnson <pauljohn32 at gmail.com> wrote:

> I'm aware R-devel no longer includes zlib. This works find on
> up-to-date Linux systems.
>
> On the older Centos 6 cluster at KU, they have zlib tool old for
> R-devel. The R-devel configure fails thus:
>
> checking if zlib version >= 1.2.5... no
> checking whether zlib support suffices... configure: error: zlib
> library and headers are required
>
> In other software, I've seen this kind of thing, so I installed zlib
> 1.2.8 into $HOME/packages and I can verify that the right pieces are
> installed there.
>
> Now I need you to tell me how to tell R to use that. Guesses so far:
>
> $ export PATH=$HOME/packages/bin:$PATH
> $ export LD_LIBRARY_PATH=$HOME/packages/lib:$LD_LIBRARY_PATH
>
> What R's configure statement needs to find zlib in my user account?
>
> In R-devel, the ./configure --help doesn't give me a simple-enough
> explanation of what I'm supposed to do. I thought I had a solution by
> adding this
>
> --with-libpth-prefix=$HOME/packages
>
> but still rejection, new zlib not found.
>
> --
> Paul E. Johnson
> Professor, Political Science        Director
> 1541 Lilac Lane, Room 504      Center for Research Methods
> University of Kansas                 University of Kansas
> http://pj.freefaculty.org              http://crmda.ku.edu
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>

	[[alternative HTML version deleted]]


From mikko.korpela at aalto.fi  Mon Feb 15 11:31:51 2016
From: mikko.korpela at aalto.fi (Mikko Korpela)
Date: Mon, 15 Feb 2016 12:31:51 +0200
Subject: [Rd] inconsistency in treatment of USE.NAMES argument
In-Reply-To: <CAOQ5Nydc506OsZ27vg0yJHywjbRM090E5v5iAC4pyi+Oeg-rRQ@mail.gmail.com>
References: <56B8E312.1060707@fredhutch.org>
	<22201.53140.811577.447542@stat.math.ethz.ch>
	<CAOQ5Nydc506OsZ27vg0yJHywjbRM090E5v5iAC4pyi+Oeg-rRQ@mail.gmail.com>
Message-ID: <56C1A917.7030609@aalto.fi>

The two CRAN packages I'm (co)authoring, dplR and sisal, would both be
OK with the change. (Cc'ing to the Maintainer of dplR and my other email
address)

- Mikko

On 11.02.2016 17:02, Michael Lawrence wrote:
> Changing the vapply() behavior makes sense in principle. I analyzed
> the CRAN code base using the R parser and found 143 instances of
> calling vapply with USE.NAMES=FALSE. These would need to be inspected
> to understand the consequences of the change.
> 
> For reference:
> /AzureML/R/datasets.R:226
> /BBmisc/R/toRangeStr.R:33
> /DBI/R/DBDriver.R:205
> /Kmisc/R/str_rev.R:37
> /Matrix/R/diagMatrix.R:98
> /MuMIn/R/utils-models.R:110
> /OpenMx/R/MxNamespace.R:702
> /OrthoPanels/R/opm.R:167
> /XML2R/R/utils.R:16
> /assertive.base/tests/testthat/test-utils.R:14
> /bigrquery/R/utils.r:13
> /bold/R/zzz.R:29
> /checkmate/R/checkList.r:56
> /coin/R/ExactDistributions.R:80
> /coin/R/ExactDistributions.R:97
> /coin/R/ExactDistributions.R:234
> /coin/R/SymmetryTests.R:217
> /copula/R/aux-acopula.R:950
> /covr/R/data_frame.R:13
> /covr/R/display_name.R:40
> /cplm/R/lme4_lmer.R:423
> /crunch/R/batches.R:71
> /crunch/R/batches.R:102
> /crunch/R/categorical-array.R:87
> /crunch/R/hide-variables.R:78
> /crunch/R/misc.R:68
> /crunch/R/share.R:11
> /crunch/R/shoji-catalog.R:39
> /crunch/R/show.R:88
> /crunch/R/subvariables.R:76
> /crunch/R/subvariables.R:95
> /dplR/R/common.interval.R:8
> /dplR/R/fill.internal.NA.R:47
> /dplR/R/helpers.R:3
> /dplyr/R/dataframe.R:49
> /dplyr/R/glimpse.R:38
> /dplyr/R/id.r:36
> /dplyr/R/tbl-cube.r:98
> /dplyr/R/utils.r:15
> /fulltext/R/chunks.R:352
> /fulltext/R/chunks.R:356
> /ggvis/R/transform.R:56
> /httr/R/oauth-token-utils.R:23
> /igraph/R/lazyeval.R:219
> /jsonlite/R/asJSON.data.frame.R:74
> /jsonlite/R/deparse_vector.R:26
> /jsonlite/R/simplifyDataFrame.R:14
> /jsonlite/R/unescape_unicode.R:10
> /knitr/R/utils.R:207
> /knitrBootstrap/R/knit_bootstrap.R:303
> /lazyeval/R/names.R:27
> /learningr/R/buggy_count.R:67
> /lintr/R/absolute_paths_linter.R:35
> /lintr/R/absolute_paths_linter.R:71
> /loo/R/helpers.R:13
> /loo/R/helpers.R:20
> /matconv/R/convEasySyntax.R:71
> /matconv/R/convFunctionCalls.R:11
> /matconv/R/utils.R:113
> /micropan/R/biostrings.R:80
> /micropan/R/biostrings.R:106
> /mime/R/mime.R:129
> /packrat/R/bundle.R:137
> /packrat/R/hooks.R:45
> /packrat/R/lockfile.R:56
> /pixiedust/R/sprinkle_colnames.R:66
> /plyr/R/id.r:38
> /polyCub/R/polyCub.SV.R:110
> /polyCub/R/polyCub.exact.Gauss.R:99
> /polyCub/R/polyCub.iso.R:130
> /polyCub/R/polyCub.iso.R:166
> /polyCub/R/polyCub.iso.R:168
> /pryr/R/dots.r:25
> /rappdirs/R/utils.r:39
> /rbison/R/bison.R:181
> /rcrossref/R/cr_ft_text.R:191
> /rcrossref/R/get_styles.R:16
> /rebus.base/R/internal.R:29
> /rerddap/R/info.R:73
> /rerddap/R/info.R:80
> /rerddap/R/search.R:37
> /rerddap/R/search_adv.R:64
> /reutils/R/ecitmatch.R:33
> /reutils/R/parse-docsum.R:53
> /reutils/R/utils.R:44
> /reutils/R/utils.R:51
> /reutils/R/utils.R:55
> /rgbif/R/occ_search.r:230
> /rgbif/R/zzz.r:120
> /rjstat/R/rjstat.R:75
> /rlist/R/internal.R:155
> /rnoaa/R/homr.R:140
> /rnoaa/R/storm_shp.R:42
> /roxygen2/R/template.R:27
> /rplos/R/fulltext.R:29
> /rplos/R/fulltext.R:82
> /shiny/inst/tests/test-bootstrap.r:12
> /shinyjs/inst/examples/demo/helpers.R:49
> /simcausal/R/network.R:319
> /sisal/R/sisalTable.R:806
> /sisal/R/sisalTable.R:829
> /sisal/R/sisalTable.R:853
> /sisal/R/sisalTable.R:915
> /sisal/R/sisalTable.R:924
> /sisal/R/sisalTable.R:933
> /stringdist/R/seqdist.R:130
> /stringdist/R/stringdist.R:286
> /surveillance/R/calibration_null.R:25
> /surveillance/R/calibration_null.R:185
> /surveillance/R/epidata.R:356
> /surveillance/R/epidata.R:362
> /surveillance/R/hhh4.R:311
> /surveillance/R/hhh4_methods.R:403
> /surveillance/R/hhh4_oneStepAhead.R:126
> /surveillance/R/hhh4_plot.R:419
> /surveillance/R/hhh4_plot.R:691
> /surveillance/R/hhh4_plot.R:744
> /surveillance/R/pit.R:29
> /surveillance/R/pit.R:45
> /surveillance/R/spatial_tools.R:261
> /surveillance/R/spatial_tools.R:264
> /surveillance/R/twinSIR_profile.R:229
> /surveillance/R/twinSIR_simulation.R:284
> /surveillance/R/twinSIR_simulation.R:288
> /surveillance/R/twinstim.R:212
> /surveillance/R/twinstim.R:553
> /surveillance/R/twinstim_epitest.R:188
> /surveillance/R/twinstim_helper.R:139
> /surveillance/R/twinstim_siaf.R:176
> /surveydata/R/questions.R:164
> /sweidnumbr/R/luhn_algo.R:75
> /sweidnumbr/R/oin.R:104
> /sweidnumbr/R/oin.R:134
> /sweidnumbr/R/pin.R:202
> /sweidnumbr/R/pin.R:440
> /taxize/R/gni_parse.R:29
> /taxize/inst/ignore/taxonclass.R:117
> /taxize/inst/ignore/taxonclass2.R:157
> /testthat/R/utils.r:13
> /textreuse/R/TextReuseCorpus.R:137
> /textreuse/R/minhash.R:46
> /textreuse/R/similarity.R:111
> /tidyr/R/id.R:17
> 
> On Tue, Feb 9, 2016 at 3:37 AM, Martin Maechler
> <maechler at stat.math.ethz.ch> wrote:
>>>>>>> Herv? Pag?s <hpages at fredhutch.org>
>>>>>>>     on Mon, 8 Feb 2016 10:48:50 -0800 writes:
>>
>>     > Hi,
>>     > Both vapply() and sapply() support the 'USE.NAMES' argument. According
>>     > to the man page:
>>
>>     > USE.NAMES: logical; if ?TRUE? and if ?X? is character, use ?X? as
>>     >    ?names? for the result unless it had names already.
>>
>>     > But if 'X' has names already and 'USE.NAMES' is FALSE, it's not clear
>>     > what will happen to the names. Are they going to propagate to the
>>     > result or not? Unfortunately, vapply() and sapply() give a different
>>     > answer:
>>
>>     >> vapply(list(A="a", B=1:2), is.integer, logical(1), USE.NAMES=FALSE)
>>     > [1] FALSE  TRUE
>>
>>     >> sapply(list(A="a", B=1:2), is.integer, USE.NAMES=FALSE)
>>     > A     B
>>     > FALSE  TRUE
>>
>> This is very unfortunate, and I was not aware of this.
>>
>> You know that sapply()  is an order of magnitude older than vapply()
>> and you probably don't know that lapply() is also somewhat older
>> than sapply() [but that part is pre-R (but S-) history ...]
>> which explains part:
>>
>> 1) lapply() does *not* have a  USE.NAMES  argument and it
>>    always keeps names when they are there in X.
>>
>> 2) sapply() has been designed as "s"implified l"apply" where
>>    in this case "simplified" also was to mean "user-friendly" /
>>    "simple to use".
>>    For that reason,
>>    a) sapply() also keeps names when they are there (as lapply).
>>    b) If USE.NAMES=TRUE (as by default) is also constructs names
>>       in cases where lapply() does not contain, i.e., in case of
>>       character X.
>>
>> 3) IIRC, the goals for vapply() had been  "like sapply", with two advantages:
>>    a. faster
>>    b. "error-checking" in the sense of ensuring consistent
>>        results of the single function calls.
>>
>>     > Wouldn't it make sense to have vapply() and sapply() treat the
>>     > 'USE.NAMES' argument consistently?
>>
>> Yes, but from what I wrote above, I believe  vapply() would have
>> to change.
>>
>> Martin
>>
>>
>>     > The behavior of vapply() seems
>>     > to make more sense to me. Note that it's consistent with what mapply()
>>     > does:
>>
>>     >> mapply(is.integer, list(A="a", B=1:2), USE.NAMES=FALSE)
>>     > [1] FALSE  TRUE
>>
>>     > If the behavior of sapply() cannot be changed, at least the man page
>>     > could clarify what happens when 'USE.NAMES' is FALSE, which is
>>     > different for each function.
>>
>>     > Thanks,
>>     > H.
>>
>>     > --
>>     > Herv? Pag?s
>>
>>     > Program in Computational Biology
>>     > Division of Public Health Sciences
>>     > Fred Hutchinson Cancer Research Center
>>     > 1100 Fairview Ave. N, M1-B514
>>     > P.O. Box 19024
>>     > Seattle, WA 98109-1024
>>
>>     > E-mail: hpages at fredhutch.org
>>     > Phone:  (206) 667-5791
>>     > Fax:    (206) 667-1319
>>
>>     > ______________________________________________
>>     > R-devel at r-project.org mailing list
>>     > https://stat.ethz.ch/mailman/listinfo/r-devel
>>
>> ______________________________________________
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>


From dusa.adrian at unibuc.ro  Mon Feb 15 20:53:08 2016
From: dusa.adrian at unibuc.ro (=?UTF-8?B?QWRyaWFuIER1yJlh?=)
Date: Mon, 15 Feb 2016 21:53:08 +0200
Subject: [Rd] author field in Rd documentation
Message-ID: <CAJ=0CtDoJydgDs+wKRBfMtaAiknd4SAj+mXGpM95OpfrNK3gyw@mail.gmail.com>

Apologies if this is a non question, but I am trying to document some
functions, where the author of the function itself is different from the
author of the Rd file (one person did the programming, the other dealt with
the documentation).

In the Writing R Extensions document, section 2.1.1 Documenting functions,
it is written:

\author{...} Information about the author(s) of the Rd file.

Is there another field for the author of the function? Usually, they are
one and the same, but (as in this case) they might be different.

Any suggestion is welcome,
Adrian


-- 
Adrian Dusa
University of Bucharest
Romanian Social Data Archive
Soseaua Panduri nr.90
050663 Bucharest sector 5
Romania

	[[alternative HTML version deleted]]


From nospam at altfeld-im.de  Tue Feb 16 18:25:14 2016
From: nospam at altfeld-im.de (nospam at altfeld-im.de)
Date: Tue, 16 Feb 2016 18:25:14 +0100
Subject: [Rd] iconv to UTF-16 encoding produces error due to embedded nulls
 (write.table with fileEncoding param)
Message-ID: <1455643514.15123.0.camel@i3770>




If I execute the code from the "?write.table" examples section

  x <- data.frame(a = I("a \" quote"), b = pi)
  # (ommited code)
  write.csv(x, file = "foo.csv", fileEncoding = "UTF-16LE")

the resulting CSV file has a size of 6 bytes which is too short
(truncated):

  """,3

The problem seems to be the iconv function:

  iconv("foo", to="UTF-16")

produces

  Error in iconv("foo", to = "UTF-16"):
  embedded nul in string: '\xff\xfef\0o\0o\0'

In 2010 a (partial) patch for this problem was submitted:

http://tolstoy.newcastle.edu.au/R/e10/devel/10/06/0648.html

Are there chances to fix this problem since it prevents writing Windows
UTF-16LE text files?



PS: This problem can be reproduced on Windows and Linux.

---------------

> sessionInfo()
R version 3.2.3 (2015-12-10)
Platform: x86_64-pc-linux-gnu (64-bit)
Running under: Ubuntu 14.04.3 LTS

locale:
 [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C
LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8    
 [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8
LC_PAPER=en_US.UTF-8       LC_NAME=C                 
 [9] LC_ADDRESS=C               LC_TELEPHONE=C
LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C       

attached base packages:
[1] stats     graphics  grDevices utils     datasets  methods
base     

loaded via a namespace (and not attached):
[1] tools_3.2.3
>


From dstr7320 at uni.sydney.edu.au  Thu Feb 18 08:00:05 2016
From: dstr7320 at uni.sydney.edu.au (Dario Strbenac)
Date: Thu, 18 Feb 2016 07:00:05 +0000
Subject: [Rd] R Package Installation Ignores libPaths Setting
Message-ID: <SN1PR0101MB14390FF9CD858614E238134BCDAE0@SN1PR0101MB1439.prod.exchangelabs.com>

Good day,

If the library path is changed with .libPaths, the command

install.packages("/nb/dario/Biostrings_2.39.9.tar.gz", repos=NULL)

fails with

** testing if installed package can be loaded
Error : package ?S4Vectors? required by ?Biostrings? could not be found

However,

running library(S4Vectors) followed by sessionInfo() after the error shows that the package can indeed be found by R

R version 3.2.3 Patched (2016-02-14 r70170)
Platform: x86_64-pc-linux-gnu (64-bit)
Running under: Debian GNU/Linux 8 (jessie)
    ...        ...
other attached packages:
[1] S4Vectors_0.9.34    BiocGenerics_0.17.3

The new library path is being ignored when the package is attempted to be loaded at the end of the installation process. How can the installation be successful ?

--------------------------------------
Dario Strbenac
PhD Student
University of Sydney
Camperdown NSW 2050
Australia

From ripley at stats.ox.ac.uk  Thu Feb 18 09:02:40 2016
From: ripley at stats.ox.ac.uk (Prof Brian Ripley)
Date: Thu, 18 Feb 2016 08:02:40 +0000
Subject: [Rd] R Package Installation Ignores libPaths Setting
In-Reply-To: <SN1PR0101MB14390FF9CD858614E238134BCDAE0@SN1PR0101MB1439.prod.exchangelabs.com>
References: <SN1PR0101MB14390FF9CD858614E238134BCDAE0@SN1PR0101MB1439.prod.exchangelabs.com>
Message-ID: <56C57AA0.2020503@stats.ox.ac.uk>

You misunderstand what .libPaths does: it changes the path in the 
current session only.  Installation uses a different R process.

Set R_LIBS to change the library path for new sessions: see ?.libPath .


On 18/02/2016 07:00, Dario Strbenac wrote:
> Good day,
>
> If the library path is changed with .libPaths, the command
>
> install.packages("/nb/dario/Biostrings_2.39.9.tar.gz", repos=NULL)
>
> fails with
>
> ** testing if installed package can be loaded
> Error : package ?S4Vectors? required by ?Biostrings? could not be found
>
> However,
>
> running library(S4Vectors) followed by sessionInfo() after the error shows that the package can indeed be found by R
>
> R version 3.2.3 Patched (2016-02-14 r70170)
> Platform: x86_64-pc-linux-gnu (64-bit)
> Running under: Debian GNU/Linux 8 (jessie)
>      ...        ...
> other attached packages:
> [1] S4Vectors_0.9.34    BiocGenerics_0.17.3
>
> The new library path is being ignored when the package is attempted to be loaded at the end of the installation process. How can the installation be successful ?
>
> --------------------------------------
> Dario Strbenac
> PhD Student
> University of Sydney
> Camperdown NSW 2050
> Australia


-- 
Brian D. Ripley,                  ripley at stats.ox.ac.uk
Emeritus Professor of Applied Statistics, University of Oxford


From jeroen.ooms at stat.ucla.edu  Thu Feb 18 12:01:18 2016
From: jeroen.ooms at stat.ucla.edu (Jeroen Ooms)
Date: Thu, 18 Feb 2016 12:01:18 +0100
Subject: [Rd] default destfile in download.file()
Message-ID: <CABFfbXuJz9Y-E2unZ+U9-bSjYVYWJdKW1a68ogqMXe6P9Ciuig@mail.gmail.com>

A nice default value for the `destfile` argument in download.file() would
be `basename(url)` i.e. the name of the downloaded file. This would
correspond to default behavior in many other web/ftp clients and makes code
slightly more concise:

  download.file("https://svn.r-project.org/R/trunk/doc/CRAN_mirrors.csv")
  mirrors <- read.csv("CRAN_mirrors.csv")

	[[alternative HTML version deleted]]


From MEC at stowers.org  Thu Feb 18 21:25:34 2016
From: MEC at stowers.org (Cook, Malcolm)
Date: Thu, 18 Feb 2016 20:25:34 +0000
Subject: [Rd] should `data` respect default.stringsAsFactors()?
Message-ID: <39490c6c6e9b48ff8032837df07baf9b@exchsrv2.sgc.loc>

Hiya,

Probably been debated elsewhere....

I note that R's `data` function does not respect default.stringsAsFactors 

By my lights, it should, especially as it is documented to call read.table, which DOES respect.

Oh, but:  http://r.789695.n4.nabble.com/stringsAsFactors-FALSE-tp921891p921893.html  

Compelling.  I have to agree.

So, I change my mind.  

By my lights, `data` should then be documented to NOT respect default.stringsAsFactors.

Else?

~Malcolm Cook


From pauljohn32 at gmail.com  Thu Feb 18 21:48:16 2016
From: pauljohn32 at gmail.com (Paul Johnson)
Date: Thu, 18 Feb 2016 14:48:16 -0600
Subject: [Rd] configure statement for R-devel with updated zlib in user
	account
In-Reply-To: <CAPmAPXMaOhVMEJAKfRD6X61VWwpKNVhtbG_95-M_yZ0XGqPhCg@mail.gmail.com>
References: <CAErODj8FJ==42bQRiso5ajH95bkZG8Zc9rPcFJczdFgYLxxX1Q@mail.gmail.com>
	<CAPmAPXMaOhVMEJAKfRD6X61VWwpKNVhtbG_95-M_yZ0XGqPhCg@mail.gmail.com>
Message-ID: <CAErODj9nkA7vPs8fED3h4L8qf8yRnjf1-4ZDy-f1x35Dq7JUaQ@mail.gmail.com>

On Mon, Feb 15, 2016 at 3:28 AM, Jesper G?din <jesper.gadin at gmail.com> wrote:
> Hi Paul,
>
> This might be what you are looking for.
> https://stat.ethz.ch/pipermail/r-devel/2015-April/070951.html
>
> Jesper
>

Thanks to help form Wes Mason at KU and Jesper Gadin in r-devel, I
compiled R-devel on RHEL 6.

R-devel requires install of newer gzip, bzip2, xz, pcre, and curl.
Compiles of bzip2 and pcre require a slightly greater-than-usual
amount of attention to detail.  I wrote it all out:

http://pj.freefaculty.org/blog/?p=315 "Building R-devel on RedHat Linux 6"

Regards

pj
-- 
Paul E. Johnson
Professor, Political Science        Director
1541 Lilac Lane, Room 504      Center for Research Methods
University of Kansas                 University of Kansas
http://pj.freefaculty.org              http://crmda.ku.edu


From pdalgd at gmail.com  Thu Feb 18 22:31:54 2016
From: pdalgd at gmail.com (peter dalgaard)
Date: Thu, 18 Feb 2016 22:31:54 +0100
Subject: [Rd] should `data` respect default.stringsAsFactors()?
In-Reply-To: <39490c6c6e9b48ff8032837df07baf9b@exchsrv2.sgc.loc>
References: <39490c6c6e9b48ff8032837df07baf9b@exchsrv2.sgc.loc>
Message-ID: <766463AE-5379-445B-A17D-9AAD806DA5E3@gmail.com>

What the <bleep> are you on about? data() does many things, only some of which call read.table() et al., and the ones that do have no special treatment of stringsAsFactors.

-pd

> On 18 Feb 2016, at 21:25 , Cook, Malcolm <MEC at stowers.org> wrote:
> 
> Hiya,
> 
> Probably been debated elsewhere....
> 
> I note that R's `data` function does not respect default.stringsAsFactors 
> 
> By my lights, it should, especially as it is documented to call read.table, which DOES respect.
> 
> Oh, but:  http://r.789695.n4.nabble.com/stringsAsFactors-FALSE-tp921891p921893.html  
> 
> Compelling.  I have to agree.
> 
> So, I change my mind.  
> 
> By my lights, `data` should then be documented to NOT respect default.stringsAsFactors.
> 
> Else?
> 
> ~Malcolm Cook
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel

-- 
Peter Dalgaard, Professor,
Center for Statistics, Copenhagen Business School
Solbjerg Plads 3, 2000 Frederiksberg, Denmark
Phone: (+45)38153501
Office: A 4.23
Email: pd.mes at cbs.dk  Priv: PDalgd at gmail.com


From hpages at fredhutch.org  Thu Feb 18 23:22:22 2016
From: hpages at fredhutch.org (=?UTF-8?B?SGVydsOpIFBhZ8Oocw==?=)
Date: Thu, 18 Feb 2016 14:22:22 -0800
Subject: [Rd] inconsistency in treatment of USE.NAMES argument
In-Reply-To: <CAOQ5Nydc506OsZ27vg0yJHywjbRM090E5v5iAC4pyi+Oeg-rRQ@mail.gmail.com>
References: <56B8E312.1060707@fredhutch.org>
	<22201.53140.811577.447542@stat.math.ethz.ch>
	<CAOQ5Nydc506OsZ27vg0yJHywjbRM090E5v5iAC4pyi+Oeg-rRQ@mail.gmail.com>
Message-ID: <56C6441E.4060004@fredhutch.org>

On 02/11/2016 07:02 AM, Michael Lawrence wrote:
> Changing the vapply() behavior makes sense in principle.

Sorry to disagree, Changing the behavior of sapply() so we end up
with consistent treatment of USE.NAMES across sapply(), vapply(),
and mapply() sounds much better *in principle*.

I understand sapply() predates vapply() but the real question is:
how much code around use sapply(..., USE.NAMES=FALSE) on a object
with names() and expect the names to be preserved?

H.

> I analyzed
> the CRAN code base using the R parser and found 143 instances of
> calling vapply with USE.NAMES=FALSE. These would need to be inspected
> to understand the consequences of the change.
>
> For reference:
> /AzureML/R/datasets.R:226
> /BBmisc/R/toRangeStr.R:33
> /DBI/R/DBDriver.R:205
> /Kmisc/R/str_rev.R:37
> /Matrix/R/diagMatrix.R:98
> /MuMIn/R/utils-models.R:110
> /OpenMx/R/MxNamespace.R:702
> /OrthoPanels/R/opm.R:167
> /XML2R/R/utils.R:16
> /assertive.base/tests/testthat/test-utils.R:14
> /bigrquery/R/utils.r:13
> /bold/R/zzz.R:29
> /checkmate/R/checkList.r:56
> /coin/R/ExactDistributions.R:80
> /coin/R/ExactDistributions.R:97
> /coin/R/ExactDistributions.R:234
> /coin/R/SymmetryTests.R:217
> /copula/R/aux-acopula.R:950
> /covr/R/data_frame.R:13
> /covr/R/display_name.R:40
> /cplm/R/lme4_lmer.R:423
> /crunch/R/batches.R:71
> /crunch/R/batches.R:102
> /crunch/R/categorical-array.R:87
> /crunch/R/hide-variables.R:78
> /crunch/R/misc.R:68
> /crunch/R/share.R:11
> /crunch/R/shoji-catalog.R:39
> /crunch/R/show.R:88
> /crunch/R/subvariables.R:76
> /crunch/R/subvariables.R:95
> /dplR/R/common.interval.R:8
> /dplR/R/fill.internal.NA.R:47
> /dplR/R/helpers.R:3
> /dplyr/R/dataframe.R:49
> /dplyr/R/glimpse.R:38
> /dplyr/R/id.r:36
> /dplyr/R/tbl-cube.r:98
> /dplyr/R/utils.r:15
> /fulltext/R/chunks.R:352
> /fulltext/R/chunks.R:356
> /ggvis/R/transform.R:56
> /httr/R/oauth-token-utils.R:23
> /igraph/R/lazyeval.R:219
> /jsonlite/R/asJSON.data.frame.R:74
> /jsonlite/R/deparse_vector.R:26
> /jsonlite/R/simplifyDataFrame.R:14
> /jsonlite/R/unescape_unicode.R:10
> /knitr/R/utils.R:207
> /knitrBootstrap/R/knit_bootstrap.R:303
> /lazyeval/R/names.R:27
> /learningr/R/buggy_count.R:67
> /lintr/R/absolute_paths_linter.R:35
> /lintr/R/absolute_paths_linter.R:71
> /loo/R/helpers.R:13
> /loo/R/helpers.R:20
> /matconv/R/convEasySyntax.R:71
> /matconv/R/convFunctionCalls.R:11
> /matconv/R/utils.R:113
> /micropan/R/biostrings.R:80
> /micropan/R/biostrings.R:106
> /mime/R/mime.R:129
> /packrat/R/bundle.R:137
> /packrat/R/hooks.R:45
> /packrat/R/lockfile.R:56
> /pixiedust/R/sprinkle_colnames.R:66
> /plyr/R/id.r:38
> /polyCub/R/polyCub.SV.R:110
> /polyCub/R/polyCub.exact.Gauss.R:99
> /polyCub/R/polyCub.iso.R:130
> /polyCub/R/polyCub.iso.R:166
> /polyCub/R/polyCub.iso.R:168
> /pryr/R/dots.r:25
> /rappdirs/R/utils.r:39
> /rbison/R/bison.R:181
> /rcrossref/R/cr_ft_text.R:191
> /rcrossref/R/get_styles.R:16
> /rebus.base/R/internal.R:29
> /rerddap/R/info.R:73
> /rerddap/R/info.R:80
> /rerddap/R/search.R:37
> /rerddap/R/search_adv.R:64
> /reutils/R/ecitmatch.R:33
> /reutils/R/parse-docsum.R:53
> /reutils/R/utils.R:44
> /reutils/R/utils.R:51
> /reutils/R/utils.R:55
> /rgbif/R/occ_search.r:230
> /rgbif/R/zzz.r:120
> /rjstat/R/rjstat.R:75
> /rlist/R/internal.R:155
> /rnoaa/R/homr.R:140
> /rnoaa/R/storm_shp.R:42
> /roxygen2/R/template.R:27
> /rplos/R/fulltext.R:29
> /rplos/R/fulltext.R:82
> /shiny/inst/tests/test-bootstrap.r:12
> /shinyjs/inst/examples/demo/helpers.R:49
> /simcausal/R/network.R:319
> /sisal/R/sisalTable.R:806
> /sisal/R/sisalTable.R:829
> /sisal/R/sisalTable.R:853
> /sisal/R/sisalTable.R:915
> /sisal/R/sisalTable.R:924
> /sisal/R/sisalTable.R:933
> /stringdist/R/seqdist.R:130
> /stringdist/R/stringdist.R:286
> /surveillance/R/calibration_null.R:25
> /surveillance/R/calibration_null.R:185
> /surveillance/R/epidata.R:356
> /surveillance/R/epidata.R:362
> /surveillance/R/hhh4.R:311
> /surveillance/R/hhh4_methods.R:403
> /surveillance/R/hhh4_oneStepAhead.R:126
> /surveillance/R/hhh4_plot.R:419
> /surveillance/R/hhh4_plot.R:691
> /surveillance/R/hhh4_plot.R:744
> /surveillance/R/pit.R:29
> /surveillance/R/pit.R:45
> /surveillance/R/spatial_tools.R:261
> /surveillance/R/spatial_tools.R:264
> /surveillance/R/twinSIR_profile.R:229
> /surveillance/R/twinSIR_simulation.R:284
> /surveillance/R/twinSIR_simulation.R:288
> /surveillance/R/twinstim.R:212
> /surveillance/R/twinstim.R:553
> /surveillance/R/twinstim_epitest.R:188
> /surveillance/R/twinstim_helper.R:139
> /surveillance/R/twinstim_siaf.R:176
> /surveydata/R/questions.R:164
> /sweidnumbr/R/luhn_algo.R:75
> /sweidnumbr/R/oin.R:104
> /sweidnumbr/R/oin.R:134
> /sweidnumbr/R/pin.R:202
> /sweidnumbr/R/pin.R:440
> /taxize/R/gni_parse.R:29
> /taxize/inst/ignore/taxonclass.R:117
> /taxize/inst/ignore/taxonclass2.R:157
> /testthat/R/utils.r:13
> /textreuse/R/TextReuseCorpus.R:137
> /textreuse/R/minhash.R:46
> /textreuse/R/similarity.R:111
> /tidyr/R/id.R:17
>
> On Tue, Feb 9, 2016 at 3:37 AM, Martin Maechler
> <maechler at stat.math.ethz.ch> wrote:
>>>>>>> Herv? Pag?s <hpages at fredhutch.org>
>>>>>>>      on Mon, 8 Feb 2016 10:48:50 -0800 writes:
>>
>>      > Hi,
>>      > Both vapply() and sapply() support the 'USE.NAMES' argument. According
>>      > to the man page:
>>
>>      > USE.NAMES: logical; if ?TRUE? and if ?X? is character, use ?X? as
>>      >    ?names? for the result unless it had names already.
>>
>>      > But if 'X' has names already and 'USE.NAMES' is FALSE, it's not clear
>>      > what will happen to the names. Are they going to propagate to the
>>      > result or not? Unfortunately, vapply() and sapply() give a different
>>      > answer:
>>
>>      >> vapply(list(A="a", B=1:2), is.integer, logical(1), USE.NAMES=FALSE)
>>      > [1] FALSE  TRUE
>>
>>      >> sapply(list(A="a", B=1:2), is.integer, USE.NAMES=FALSE)
>>      > A     B
>>      > FALSE  TRUE
>>
>> This is very unfortunate, and I was not aware of this.
>>
>> You know that sapply()  is an order of magnitude older than vapply()
>> and you probably don't know that lapply() is also somewhat older
>> than sapply() [but that part is pre-R (but S-) history ...]
>> which explains part:
>>
>> 1) lapply() does *not* have a  USE.NAMES  argument and it
>>     always keeps names when they are there in X.
>>
>> 2) sapply() has been designed as "s"implified l"apply" where
>>     in this case "simplified" also was to mean "user-friendly" /
>>     "simple to use".
>>     For that reason,
>>     a) sapply() also keeps names when they are there (as lapply).
>>     b) If USE.NAMES=TRUE (as by default) is also constructs names
>>        in cases where lapply() does not contain, i.e., in case of
>>        character X.
>>
>> 3) IIRC, the goals for vapply() had been  "like sapply", with two advantages:
>>     a. faster
>>     b. "error-checking" in the sense of ensuring consistent
>>         results of the single function calls.
>>
>>      > Wouldn't it make sense to have vapply() and sapply() treat the
>>      > 'USE.NAMES' argument consistently?
>>
>> Yes, but from what I wrote above, I believe  vapply() would have
>> to change.
>>
>> Martin
>>
>>
>>      > The behavior of vapply() seems
>>      > to make more sense to me. Note that it's consistent with what mapply()
>>      > does:
>>
>>      >> mapply(is.integer, list(A="a", B=1:2), USE.NAMES=FALSE)
>>      > [1] FALSE  TRUE
>>
>>      > If the behavior of sapply() cannot be changed, at least the man page
>>      > could clarify what happens when 'USE.NAMES' is FALSE, which is
>>      > different for each function.
>>
>>      > Thanks,
>>      > H.
>>
>>      > --
>>      > Herv? Pag?s
>>
>>      > Program in Computational Biology
>>      > Division of Public Health Sciences
>>      > Fred Hutchinson Cancer Research Center
>>      > 1100 Fairview Ave. N, M1-B514
>>      > P.O. Box 19024
>>      > Seattle, WA 98109-1024
>>
>>      > E-mail: hpages at fredhutch.org
>>      > Phone:  (206) 667-5791
>>      > Fax:    (206) 667-1319
>>
>>      > ______________________________________________
>>      > R-devel at r-project.org mailing list
>>      > https://stat.ethz.ch/mailman/listinfo/r-devel
>>
>> ______________________________________________
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel

-- 
Herv? Pag?s

Program in Computational Biology
Division of Public Health Sciences
Fred Hutchinson Cancer Research Center
1100 Fairview Ave. N, M1-B514
P.O. Box 19024
Seattle, WA 98109-1024

E-mail: hpages at fredhutch.org
Phone:  (206) 667-5791
Fax:    (206) 667-1319


From MEC at stowers.org  Fri Feb 19 01:03:03 2016
From: MEC at stowers.org (Cook, Malcolm)
Date: Fri, 19 Feb 2016 00:03:03 +0000
Subject: [Rd] should `data` respect default.stringsAsFactors()?
In-Reply-To: <766463AE-5379-445B-A17D-9AAD806DA5E3@gmail.com>
References: <39490c6c6e9b48ff8032837df07baf9b@exchsrv2.sgc.loc>
	<766463AE-5379-445B-A17D-9AAD806DA5E3@gmail.com>
Message-ID: <332c18142e464d688071992b54884e35@exchsrv2.sgc.loc>

Hi Peter,

Sorry if I was not clear.  Perhaps an example will make my point:

> data(iris)
> class(iris$Species)
[1] "factor"
> write.table(iris,'data/myiris.tab')
> data(myiris)
> class(myiris$Species)
[1] "factor"
> rm(myiris)
> options(stringsAsFactors = FALSE)
> data(myiris)
> class(myiris$Species)
[1] "factor"
> myiris<-read.table("data/myiris.tab",header=TRUE)
> class(myiris$Species)
[1] "character"

I am surprised to find that in the above
	  setting the global option stringsAsFactors = FALSE does NOT effect how Species is being read in by the `data` function
whereas
	setting the global option stringsAsFactors = FALSE DOES effect how Species is being read in by read.table

especially since data is documented as calling read.table.

In my opinion, one or the other should change (the behavior of data, or the documentation).

<bleep> <bleep>,

~ Malcolm


 > -----Original Message-----
 > From: peter dalgaard [mailto:pdalgd at gmail.com]
 > Sent: Thursday, February 18, 2016 3:32 PM
 > To: Cook, Malcolm <MEC at stowers.org>
 > Cc: r-devel at stat.math.ethz.ch
 > Subject: Re: [Rd] should `data` respect default.stringsAsFactors()?
 > 
 > What the <bleep> are you on about? data() does many things, only some of
 > which call read.table() et al., and the ones that do have no special treatment
 > of stringsAsFactors.
 > 
 > -pd
 > 
 > > On 18 Feb 2016, at 21:25 , Cook, Malcolm <MEC at stowers.org> wrote:
 > >
 > > Hiya,
 > >
 > > Probably been debated elsewhere....
 > >
 > > I note that R's `data` function does not respect default.stringsAsFactors
 > >
 > > By my lights, it should, especially as it is documented to call read.table,
 > which DOES respect.
 > >
 > > Oh, but:  http://r.789695.n4.nabble.com/stringsAsFactors-FALSE-
 > tp921891p921893.html
 > >
 > > Compelling.  I have to agree.
 > >
 > > So, I change my mind.
 > >
 > > By my lights, `data` should then be documented to NOT respect
 > default.stringsAsFactors.
 > >
 > > Else?
 > >
 > > ~Malcolm Cook
 > >
 > > ______________________________________________
 > > R-devel at r-project.org mailing list
 > > https://stat.ethz.ch/mailman/listinfo/r-devel
 > 
 > --
 > Peter Dalgaard, Professor,
 > Center for Statistics, Copenhagen Business School
 > Solbjerg Plads 3, 2000 Frederiksberg, Denmark
 > Phone: (+45)38153501
 > Office: A 4.23
 > Email: pd.mes at cbs.dk  Priv: PDalgd at gmail.com
 > 
 > 
 > 
 > 
 > 
 > 
 > 
 > 


From josh.m.ulrich at gmail.com  Fri Feb 19 01:39:32 2016
From: josh.m.ulrich at gmail.com (Joshua Ulrich)
Date: Thu, 18 Feb 2016 18:39:32 -0600
Subject: [Rd] should `data` respect default.stringsAsFactors()?
In-Reply-To: <332c18142e464d688071992b54884e35@exchsrv2.sgc.loc>
References: <39490c6c6e9b48ff8032837df07baf9b@exchsrv2.sgc.loc>
	<766463AE-5379-445B-A17D-9AAD806DA5E3@gmail.com>
	<332c18142e464d688071992b54884e35@exchsrv2.sgc.loc>
Message-ID: <CAPPM_gSX8KYC8sT2Eq3819dJZJWcQOVnEDrr_HwP2-1qJj6cSg@mail.gmail.com>

On Thu, Feb 18, 2016 at 6:03 PM, Cook, Malcolm <MEC at stowers.org> wrote:
> Hi Peter,
>
> Sorry if I was not clear.  Perhaps an example will make my point:
>
>> data(iris)
>> class(iris$Species)
> [1] "factor"
>> write.table(iris,'data/myiris.tab')
>> data(myiris)
>> class(myiris$Species)
> [1] "factor"
>> rm(myiris)
>> options(stringsAsFactors = FALSE)
>> data(myiris)
>> class(myiris$Species)
> [1] "factor"
>> myiris<-read.table("data/myiris.tab",header=TRUE)
>> class(myiris$Species)
> [1] "character"
>
> I am surprised to find that in the above
>           setting the global option stringsAsFactors = FALSE does NOT effect how Species is being read in by the `data` function
> whereas
>         setting the global option stringsAsFactors = FALSE DOES effect how Species is being read in by read.table
>
> especially since data is documented as calling read.table.
>
To be explicit, it's documented as calling read.table(..., header =
TRUE) in this case, but it actually calls read.table(..., header =
TRUE, as.is = FALSE), which results in class(myiris$Species) of
"factor".

R> myiris<-read.table("data/myiris.tab",header=TRUE,as.is=FALSE)
R> class(myiris$Species)
[1] "factor"

So it seems like adding as.is = FALSE to the call in the documentation
would clear this up.

> In my opinion, one or the other should change (the behavior of data, or the documentation).
>
> <bleep> <bleep>,
>
> ~ Malcolm
>
>
>  > -----Original Message-----
>  > From: peter dalgaard [mailto:pdalgd at gmail.com]
>  > Sent: Thursday, February 18, 2016 3:32 PM
>  > To: Cook, Malcolm <MEC at stowers.org>
>  > Cc: r-devel at stat.math.ethz.ch
>  > Subject: Re: [Rd] should `data` respect default.stringsAsFactors()?
>  >
>  > What the <bleep> are you on about? data() does many things, only some of
>  > which call read.table() et al., and the ones that do have no special treatment
>  > of stringsAsFactors.
>  >
>  > -pd
>  >
>  > > On 18 Feb 2016, at 21:25 , Cook, Malcolm <MEC at stowers.org> wrote:
>  > >
>  > > Hiya,
>  > >
>  > > Probably been debated elsewhere....
>  > >
>  > > I note that R's `data` function does not respect default.stringsAsFactors
>  > >
>  > > By my lights, it should, especially as it is documented to call read.table,
>  > which DOES respect.
>  > >
>  > > Oh, but:  http://r.789695.n4.nabble.com/stringsAsFactors-FALSE-
>  > tp921891p921893.html
>  > >
>  > > Compelling.  I have to agree.
>  > >
>  > > So, I change my mind.
>  > >
>  > > By my lights, `data` should then be documented to NOT respect
>  > default.stringsAsFactors.
>  > >
>  > > Else?
>  > >
>  > > ~Malcolm Cook
>  > >
>  > > ______________________________________________
>  > > R-devel at r-project.org mailing list
>  > > https://stat.ethz.ch/mailman/listinfo/r-devel
>  >
>  > --
>  > Peter Dalgaard, Professor,
>  > Center for Statistics, Copenhagen Business School
>  > Solbjerg Plads 3, 2000 Frederiksberg, Denmark
>  > Phone: (+45)38153501
>  > Office: A 4.23
>  > Email: pd.mes at cbs.dk  Priv: PDalgd at gmail.com
>  >
>  >
>  >
>  >
>  >
>  >
>  >
>  >
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel



-- 
Joshua Ulrich  |  about.me/joshuaulrich
FOSS Trading  |  www.fosstrading.com
R/Finance 2016 | www.rinfinance.com


From michael.nelson at sydney.edu.au  Fri Feb 19 05:58:56 2016
From: michael.nelson at sydney.edu.au (Michael Nelson)
Date: Fri, 19 Feb 2016 04:58:56 +0000
Subject: [Rd] should `data` respect default.stringsAsFactors()?
In-Reply-To: <332c18142e464d688071992b54884e35@exchsrv2.sgc.loc>
References: <39490c6c6e9b48ff8032837df07baf9b@exchsrv2.sgc.loc>
	<766463AE-5379-445B-A17D-9AAD806DA5E3@gmail.com>,
	<332c18142e464d688071992b54884e35@exchsrv2.sgc.loc>
Message-ID: <6FB5193A6CDCDF499486A833B7AFBDCD01252D221B@ex-mbx-pro-03>

As Peter pointed out.


data loads data from packages. Various formats are supported. The package author(s) will decide how best to ship (and load) any such data. 


When you call `data(iris)`, it loads iris as it is defined in the datasets package

The definition can be seen here:

https://github.com/wch/r-source/blob/trunk/src/library/datasets/data/iris.R

You will note that Species is explicitly a factor and it won't have been read in by read.table, but by being "source()d" because it is a .R file.


Michael 




________________________________________
From: R-devel [r-devel-bounces at r-project.org] on behalf of Cook, Malcolm [MEC at stowers.org]
Sent: Friday, 19 February 2016 11:03 AM
To: 'peter dalgaard'
Cc: r-devel at stat.math.ethz.ch
Subject: Re: [Rd] should `data` respect default.stringsAsFactors()?

Hi Peter,

Sorry if I was not clear.  Perhaps an example will make my point:

> data(iris)
> class(iris$Species)
[1] "factor"
> write.table(iris,'data/myiris.tab')
> data(myiris)
> class(myiris$Species)
[1] "factor"
> rm(myiris)
> options(stringsAsFactors = FALSE)
> data(myiris)
> class(myiris$Species)
[1] "factor"
> myiris<-read.table("data/myiris.tab",header=TRUE)
> class(myiris$Species)
[1] "character"

I am surprised to find that in the above
          setting the global option stringsAsFactors = FALSE does NOT effect how Species is being read in by the `data` function
whereas
        setting the global option stringsAsFactors = FALSE DOES effect how Species is being read in by read.table

especially since data is documented as calling read.table.

In my opinion, one or the other should change (the behavior of data, or the documentation).

<bleep> <bleep>,

~ Malcolm


 > -----Original Message-----
 > From: peter dalgaard [mailto:pdalgd at gmail.com]
 > Sent: Thursday, February 18, 2016 3:32 PM
 > To: Cook, Malcolm <MEC at stowers.org>
 > Cc: r-devel at stat.math.ethz.ch
 > Subject: Re: [Rd] should `data` respect default.stringsAsFactors()?
 >
 > What the <bleep> are you on about? data() does many things, only some of
 > which call read.table() et al., and the ones that do have no special treatment
 > of stringsAsFactors.
 >
 > -pd
 >
 > > On 18 Feb 2016, at 21:25 , Cook, Malcolm <MEC at stowers.org> wrote:
 > >
 > > Hiya,
 > >
 > > Probably been debated elsewhere....
 > >
 > > I note that R's `data` function does not respect default.stringsAsFactors
 > >
 > > By my lights, it should, especially as it is documented to call read.table,
 > which DOES respect.
 > >
 > > Oh, but:  http://r.789695.n4.nabble.com/stringsAsFactors-FALSE-
 > tp921891p921893.html
 > >
 > > Compelling.  I have to agree.
 > >
 > > So, I change my mind.
 > >
 > > By my lights, `data` should then be documented to NOT respect
 > default.stringsAsFactors.
 > >
 > > Else?
 > >
 > > ~Malcolm Cook
 > >
 > > ______________________________________________
 > > R-devel at r-project.org mailing list
 > > https://stat.ethz.ch/mailman/listinfo/r-devel
 >
 > --
 > Peter Dalgaard, Professor,
 > Center for Statistics, Copenhagen Business School
 > Solbjerg Plads 3, 2000 Frederiksberg, Denmark
 > Phone: (+45)38153501
 > Office: A 4.23
 > Email: pd.mes at cbs.dk  Priv: PDalgd at gmail.com
 >
 >
 >
 >
 >
 >
 >
 >

______________________________________________
R-devel at r-project.org mailing list
https://stat.ethz.ch/mailman/listinfo/r-devel


From pdalgd at gmail.com  Fri Feb 19 10:02:11 2016
From: pdalgd at gmail.com (peter dalgaard)
Date: Fri, 19 Feb 2016 10:02:11 +0100
Subject: [Rd] should `data` respect default.stringsAsFactors()?
In-Reply-To: <CAPPM_gSX8KYC8sT2Eq3819dJZJWcQOVnEDrr_HwP2-1qJj6cSg@mail.gmail.com>
References: <39490c6c6e9b48ff8032837df07baf9b@exchsrv2.sgc.loc>
	<766463AE-5379-445B-A17D-9AAD806DA5E3@gmail.com>
	<332c18142e464d688071992b54884e35@exchsrv2.sgc.loc>
	<CAPPM_gSX8KYC8sT2Eq3819dJZJWcQOVnEDrr_HwP2-1qJj6cSg@mail.gmail.com>
Message-ID: <4DA5BAED-D119-45DA-BAFC-E54B11733302@gmail.com>

Aha... Hadn't noticed that stringsAsFactors only works via as.is in read.table. 

Yes, the doc should probably be fixed. The code probably not -- packages loading different data sets depending on user options is an even worse idea than hav?ng the option in the first place... (I don't mean having the possibility, I mean the default.stringsAsFactor thing). 

In general, read.table() gets many things wrong, if you don't set switches and/or postprocess. E.g., even when you do intend to read factors, the alphabetical level order is often not desired. My favourite workaround for data() is to drop a corresponding foo.R file in the ./data directory. This will be run in preference to loading foo.txt (or foo.csv, etc) and can contain, like, 

dd <- read.table(foo.txt,.....) 
dd$cook <- factor(dd$cook, levels=c("rare","medium","well-done"))

etc.

-pd



> On 19 Feb 2016, at 01:39 , Joshua Ulrich <josh.m.ulrich at gmail.com> wrote:
> 
> On Thu, Feb 18, 2016 at 6:03 PM, Cook, Malcolm <MEC at stowers.org> wrote:
>> Hi Peter,
>> 
>> Sorry if I was not clear.  Perhaps an example will make my point:
>> 
>>> data(iris)
>>> class(iris$Species)
>> [1] "factor"
>>> write.table(iris,'data/myiris.tab')
>>> data(myiris)
>>> class(myiris$Species)
>> [1] "factor"
>>> rm(myiris)
>>> options(stringsAsFactors = FALSE)
>>> data(myiris)
>>> class(myiris$Species)
>> [1] "factor"
>>> myiris<-read.table("data/myiris.tab",header=TRUE)
>>> class(myiris$Species)
>> [1] "character"
>> 
>> I am surprised to find that in the above
>>          setting the global option stringsAsFactors = FALSE does NOT effect how Species is being read in by the `data` function
>> whereas
>>        setting the global option stringsAsFactors = FALSE DOES effect how Species is being read in by read.table
>> 
>> especially since data is documented as calling read.table.
>> 
> To be explicit, it's documented as calling read.table(..., header =
> TRUE) in this case, but it actually calls read.table(..., header =
> TRUE, as.is = FALSE), which results in class(myiris$Species) of
> "factor".
> 
> R> myiris<-read.table("data/myiris.tab",header=TRUE,as.is=FALSE)
> R> class(myiris$Species)
> [1] "factor"
> 
> So it seems like adding as.is = FALSE to the call in the documentation
> would clear this up.
> 
>> In my opinion, one or the other should change (the behavior of data, or the documentation).
>> 
>> <bleep> <bleep>,
>> 
>> ~ Malcolm
>> 
>> 
>>> -----Original Message-----
>>> From: peter dalgaard [mailto:pdalgd at gmail.com]
>>> Sent: Thursday, February 18, 2016 3:32 PM
>>> To: Cook, Malcolm <MEC at stowers.org>
>>> Cc: r-devel at stat.math.ethz.ch
>>> Subject: Re: [Rd] should `data` respect default.stringsAsFactors()?
>>> 
>>> What the <bleep> are you on about? data() does many things, only some of
>>> which call read.table() et al., and the ones that do have no special treatment
>>> of stringsAsFactors.
>>> 
>>> -pd
>>> 
>>>> On 18 Feb 2016, at 21:25 , Cook, Malcolm <MEC at stowers.org> wrote:
>>>> 
>>>> Hiya,
>>>> 
>>>> Probably been debated elsewhere....
>>>> 
>>>> I note that R's `data` function does not respect default.stringsAsFactors
>>>> 
>>>> By my lights, it should, especially as it is documented to call read.table,
>>> which DOES respect.
>>>> 
>>>> Oh, but:  http://r.789695.n4.nabble.com/stringsAsFactors-FALSE-
>>> tp921891p921893.html
>>>> 
>>>> Compelling.  I have to agree.
>>>> 
>>>> So, I change my mind.
>>>> 
>>>> By my lights, `data` should then be documented to NOT respect
>>> default.stringsAsFactors.
>>>> 
>>>> Else?
>>>> 
>>>> ~Malcolm Cook
>>>> 
>>>> ______________________________________________
>>>> R-devel at r-project.org mailing list
>>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>> 
>>> --
>>> Peter Dalgaard, Professor,
>>> Center for Statistics, Copenhagen Business School
>>> Solbjerg Plads 3, 2000 Frederiksberg, Denmark
>>> Phone: (+45)38153501
>>> Office: A 4.23
>>> Email: pd.mes at cbs.dk  Priv: PDalgd at gmail.com
>>> 
>>> 
>>> 
>>> 
>>> 
>>> 
>>> 
>>> 
>> 
>> ______________________________________________
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel
> 
> 
> 
> -- 
> Joshua Ulrich  |  about.me/joshuaulrich
> FOSS Trading  |  www.fosstrading.com
> R/Finance 2016 | www.rinfinance.com

-- 
Peter Dalgaard, Professor,
Center for Statistics, Copenhagen Business School
Solbjerg Plads 3, 2000 Frederiksberg, Denmark
Phone: (+45)38153501
Office: A 4.23
Email: pd.mes at cbs.dk  Priv: PDalgd at gmail.com


From aixtools at gmail.com  Fri Feb 19 11:06:35 2016
From: aixtools at gmail.com (Michael Felt)
Date: Fri, 19 Feb 2016 11:06:35 +0100
Subject: [Rd] R,
 AIX 64-bit builds - trying to understand root cause for message:
 "Error: Line starting 'Package: tools ...' is malformed!"
In-Reply-To: <11C4A052-1585-41A9-BFBD-1756E6DC8B96@r-project.org>
References: <56825A4B.7010508@gmail.com> <56839C9E.2010401@gmail.com>
	<5685466E.7000804@gmail.com>
	<4BED4A65-8EE9-49B8-8AFB-4E6CC3BB5BBF@r-project.org>
	<F92F30A1-4E5C-4312-B151-692F27013F8B@r-project.org>
	<F68557F2-67ED-4EF3-8BDF-F7981D8F38C0@gmail.com>
	<56894556.3020902@gmail.com>
	<5138BF7E-44C2-4ABE-9D3F-0730BCF90BC9@r-project.org>
	<568A1285.5000709@gmail.com>
	<11C4A052-1585-41A9-BFBD-1756E6DC8B96@r-project.org>
Message-ID: <56C6E92B.1080809@gmail.com>

Hi Simon,

I have been busy with work, but I finally got around to repackaging 
libiconv for AIX - in a way that both adds GNU libiconv support 
(libiconv.so.2 member) and is both 32 and 64 bit without breaking 
support for IBM iconv applications.

I concur that iconv is a pain as IBM and GNU made different decesions 
about an 'implementor' choice to call a translation to an error or not - 
when the output map(?) does not include a character. IBM choose to 
output ASCII 32 (space) and GNU calls it an error. The standard states 
it is an error when a char (or code) is used in the input, but is not in 
the input table. Enough said imho - IBM and GNU differ in their approach 
and autotools test for this difference.

So, I have a way to have both approaches available via /usr/lib. For a 
bit more detail please see: http://www.aixtools.net/index.php/libiconv - 
I do hope this 'fixes' the libiconv issues! for OSS.

Using this library you should be able to replace: (what you sent in an 
earlier e-mail as your configure statement)

On 2016-01-04 15:52, Simon Urbanek wrote:
>> >  I would be "pleased" if you would try packages - i.e., none of "Toolbox" or Perzl rpm's.
>> >  
> R requires iconv, so you have to get that somehow. I tried to bypass the check and build it anyway against the system one, but that fails as there is a iconv conversion further down the line that is not supported. Building iconv is a PITA because it conflicts with the system one so other tools break when you modify the load path. Perzl's iconv fixes that by incorporating both the system objects and the GNU ones into the same binary and that seems to work reliably so far. That is the only dependency I was using (his iconv doesn't have any dependencies itself).
>
>
configure CC=xlc_r CXX=xlc++_r F77=xlf_r FC=xlf95_r LIBS='-L/opt/freeware/lib /opt/freeware/lib/libiconv.a -lpthread' --prefix=/opt/freeware CPPFLAGS=-I/opt/freeware/include

with export OBJECT_MODE=64 in the env (and libiconv from perzl.org RPMs - iconv is a serious pain).


with

export OBJECT_MODE=64
configure CC=xlc_r CXX=xlc++_r F77=xlf_r FC=xlf95_r LIBS='-lpthread' --prefix=/opt/freeware


You may even be able to replace --prefix=/opt/freeware to --prefix=/opt (I use the latter to not step on anything in /opt/freeware)


From jon.clayden at gmail.com  Fri Feb 19 15:21:21 2016
From: jon.clayden at gmail.com (Jon Clayden)
Date: Fri, 19 Feb 2016 14:21:21 +0000
Subject: [Rd] Reading from an existing connection in compiled code
Message-ID: <CAM9CR=3mEWU-d4eOieo7OXoadHpCPgLWnFsAiFd_kM81C0CgQA@mail.gmail.com>

Dear all,

I'd like to be able to read from an arbitrary R connection (in the
sense of ?connections), which would be passed to an R function by the
user and then down into some C code via .Call.

The R API, in file R_ext/Connections.h, specifies a function,
R_ReadConnection, which takes a pointer to an Rconn struct as its
first argument, and does what I want. The struct itself is also
defined in that header, but I see no way of retrieving a struct of
that type, aside from getConnection (the C function), which is not
part of the API. As far as I can tell, the external pointer associated
with the connection also does not point to the struct directly.

So, could anyone please tell me whether there is a supported way to
convert a suitable SEXP to a pointer to the associated Rconn struct?

Thanks in advance.

Jon

(This question was also posted yesterday to StackOverflow
<http://stackoverflow.com/questions/35483523/r-reading-from-an-existing-connection-in-compiled-code>,
but no definitive answer has been posted.)


From MEC at stowers.org  Fri Feb 19 15:54:36 2016
From: MEC at stowers.org (Cook, Malcolm)
Date: Fri, 19 Feb 2016 14:54:36 +0000
Subject: [Rd] should `data` respect default.stringsAsFactors()?
In-Reply-To: <CAPPM_gSX8KYC8sT2Eq3819dJZJWcQOVnEDrr_HwP2-1qJj6cSg@mail.gmail.com>
References: <39490c6c6e9b48ff8032837df07baf9b@exchsrv2.sgc.loc>
	<766463AE-5379-445B-A17D-9AAD806DA5E3@gmail.com>
	<332c18142e464d688071992b54884e35@exchsrv2.sgc.loc>
	<CAPPM_gSX8KYC8sT2Eq3819dJZJWcQOVnEDrr_HwP2-1qJj6cSg@mail.gmail.com>
Message-ID: <8eec3c7216654736919706281f597c92@exchsrv2.sgc.loc>

Joshua,

> On Thu, Feb 18, 2016 at 6:03 PM, Cook, Malcolm <MEC at stowers.org> wrote:
 > > Hi Peter,
 > >
 > > Sorry if I was not clear.  Perhaps an example will make my point:
 > >
 > >> data(iris)
 > >> class(iris$Species)
 > > [1] "factor"
 > >> write.table(iris,'data/myiris.tab')
 > >> data(myiris)
 > >> class(myiris$Species)
 > > [1] "factor"
 > >> rm(myiris)
 > >> options(stringsAsFactors = FALSE)
 > >> data(myiris)
 > >> class(myiris$Species)
 > > [1] "factor"
 > >> myiris<-read.table("data/myiris.tab",header=TRUE)
 > >> class(myiris$Species)
 > > [1] "character"
 > >
 > > I am surprised to find that in the above
 > >           setting the global option stringsAsFactors = FALSE does NOT effect
 > how Species is being read in by the `data` function
 > > whereas
 > >         setting the global option stringsAsFactors = FALSE DOES effect how
 > Species is being read in by read.table
 > >
 > > especially since data is documented as calling read.table.
 > >
 > To be explicit, it's documented as calling read.table(..., header =
 > TRUE) in this case, but it actually calls read.table(..., header =
 > TRUE, as.is = FALSE), which results in class(myiris$Species) of
 > "factor".

Aha - makes sense.

 > 
 > R> myiris<-read.table("data/myiris.tab",header=TRUE,as.is=FALSE)
 > R> class(myiris$Species)
 > [1] "factor"
 > 
 > So it seems like adding as.is = FALSE to the call in the documentation
 > would clear this up.

I agree - thanks for digging into the source - you have unearthed the root cause.

~Malcolm

 > > In my opinion, one or the other should change (the behavior of data, or the
 > documentation).
 > >
 > > <bleep> <bleep>,
 > >
 > > ~ Malcolm
 > >
 > >
 > >  > -----Original Message-----
 > >  > From: peter dalgaard [mailto:pdalgd at gmail.com]
 > >  > Sent: Thursday, February 18, 2016 3:32 PM
 > >  > To: Cook, Malcolm <MEC at stowers.org>
 > >  > Cc: r-devel at stat.math.ethz.ch
 > >  > Subject: Re: [Rd] should `data` respect default.stringsAsFactors()?
 > >  >
 > >  > What the <bleep> are you on about? data() does many things, only some
 > of
 > >  > which call read.table() et al., and the ones that do have no special
 > treatment
 > >  > of stringsAsFactors.
 > >  >
 > >  > -pd
 > >  >
 > >  > > On 18 Feb 2016, at 21:25 , Cook, Malcolm <MEC at stowers.org> wrote:
 > >  > >
 > >  > > Hiya,
 > >  > >
 > >  > > Probably been debated elsewhere....
 > >  > >
 > >  > > I note that R's `data` function does not respect default.stringsAsFactors
 > >  > >
 > >  > > By my lights, it should, especially as it is documented to call read.table,
 > >  > which DOES respect.
 > >  > >
 > >  > > Oh, but:  http://r.789695.n4.nabble.com/stringsAsFactors-FALSE-
 > >  > tp921891p921893.html
 > >  > >
 > >  > > Compelling.  I have to agree.
 > >  > >
 > >  > > So, I change my mind.
 > >  > >
 > >  > > By my lights, `data` should then be documented to NOT respect
 > >  > default.stringsAsFactors.
 > >  > >
 > >  > > Else?
 > >  > >
 > >  > > ~Malcolm Cook
 > >  > >
 > >  > > ______________________________________________
 > >  > > R-devel at r-project.org mailing list
 > >  > > https://stat.ethz.ch/mailman/listinfo/r-devel
 > >  >
 > >  > --
 > >  > Peter Dalgaard, Professor,
 > >  > Center for Statistics, Copenhagen Business School
 > >  > Solbjerg Plads 3, 2000 Frederiksberg, Denmark
 > >  > Phone: (+45)38153501
 > >  > Office: A 4.23
 > >  > Email: pd.mes at cbs.dk  Priv: PDalgd at gmail.com
 > >  >
 > >  >
 > >  >
 > >  >
 > >  >
 > >  >
 > >  >
 > >  >
 > >
 > > ______________________________________________
 > > R-devel at r-project.org mailing list
 > > https://stat.ethz.ch/mailman/listinfo/r-devel
 > 
 > 
 > 
 > --
 > Joshua Ulrich  |  about.me/joshuaulrich
 > FOSS Trading  |  www.fosstrading.com
 > R/Finance 2016 | www.rinfinance.com

From MEC at stowers.org  Fri Feb 19 16:02:36 2016
From: MEC at stowers.org (Cook, Malcolm)
Date: Fri, 19 Feb 2016 15:02:36 +0000
Subject: [Rd] should `data` respect default.stringsAsFactors()?
In-Reply-To: <4DA5BAED-D119-45DA-BAFC-E54B11733302@gmail.com>
References: <39490c6c6e9b48ff8032837df07baf9b@exchsrv2.sgc.loc>
	<766463AE-5379-445B-A17D-9AAD806DA5E3@gmail.com>
	<332c18142e464d688071992b54884e35@exchsrv2.sgc.loc>
	<CAPPM_gSX8KYC8sT2Eq3819dJZJWcQOVnEDrr_HwP2-1qJj6cSg@mail.gmail.com>
	<4DA5BAED-D119-45DA-BAFC-E54B11733302@gmail.com>
Message-ID: <309da72be0a546eb8eac9e178876be2d@exchsrv2.sgc.loc>

Hi,

 > Aha... Hadn't noticed that stringsAsFactors only works via as.is in read.table.
 > 
 > Yes, the doc should probably be fixed. The code probably not 

Agreed.  

Is someone on-list authorized and willing to make the documentation change?  I suppose I could learn what it takes to be a "player", but for such a trivial fix, it probably is overkill.  Dissenting opinions?

> -- packages
 > loading different data sets depending on user options is an even worse idea
 > than hav?ng the option in the first place... (I don't mean having the possibility, I
 > mean the default.stringsAsFactor thing).
 > 
 > In general, read.table() gets many things wrong

I agree with you that "read.table() gets many things wrong" and I too have my favorite workarounds - but that was not my concern.  My concern is that data() does not work as documented.

~Malcolm

> , if you don't set switches
 > and/or postprocess. E.g., even when you do intend to read factors, the
 > alphabetical level order is often not desired. My favourite workaround for
 > data() is to drop a corresponding foo.R file in the ./data directory. This will be
 > run in preference to loading foo.txt (or foo.csv, etc) and can contain, like,
 > 
 > dd <- read.table(foo.txt,.....)
 > dd$cook <- factor(dd$cook, levels=c("rare","medium","well-done"))
 > 
 > etc.
 > 
 > -pd
 > 
 > 
 > 
 > > On 19 Feb 2016, at 01:39 , Joshua Ulrich <josh.m.ulrich at gmail.com> wrote:
 > >
 > > On Thu, Feb 18, 2016 at 6:03 PM, Cook, Malcolm <MEC at stowers.org>
 > wrote:
 > >> Hi Peter,
 > >>
 > >> Sorry if I was not clear.  Perhaps an example will make my point:
 > >>
 > >>> data(iris)
 > >>> class(iris$Species)
 > >> [1] "factor"
 > >>> write.table(iris,'data/myiris.tab')
 > >>> data(myiris)
 > >>> class(myiris$Species)
 > >> [1] "factor"
 > >>> rm(myiris)
 > >>> options(stringsAsFactors = FALSE)
 > >>> data(myiris)
 > >>> class(myiris$Species)
 > >> [1] "factor"
 > >>> myiris<-read.table("data/myiris.tab",header=TRUE)
 > >>> class(myiris$Species)
 > >> [1] "character"
 > >>
 > >> I am surprised to find that in the above
 > >>          setting the global option stringsAsFactors = FALSE does NOT effect
 > how Species is being read in by the `data` function
 > >> whereas
 > >>        setting the global option stringsAsFactors = FALSE DOES effect how
 > Species is being read in by read.table
 > >>
 > >> especially since data is documented as calling read.table.
 > >>
 > > To be explicit, it's documented as calling read.table(..., header =
 > > TRUE) in this case, but it actually calls read.table(..., header =
 > > TRUE, as.is = FALSE), which results in class(myiris$Species) of
 > > "factor".
 > >
 > > R> myiris<-read.table("data/myiris.tab",header=TRUE,as.is=FALSE)
 > > R> class(myiris$Species)
 > > [1] "factor"
 > >
 > > So it seems like adding as.is = FALSE to the call in the documentation
 > > would clear this up.
 > >
 > >> In my opinion, one or the other should change (the behavior of data, or the
 > documentation).
 > >>
 > >> <bleep> <bleep>,
 > >>
 > >> ~ Malcolm
 > >>
 > >>
 > >>> -----Original Message-----
 > >>> From: peter dalgaard [mailto:pdalgd at gmail.com]
 > >>> Sent: Thursday, February 18, 2016 3:32 PM
 > >>> To: Cook, Malcolm <MEC at stowers.org>
 > >>> Cc: r-devel at stat.math.ethz.ch
 > >>> Subject: Re: [Rd] should `data` respect default.stringsAsFactors()?
 > >>>
 > >>> What the <bleep> are you on about? data() does many things, only some
 > of
 > >>> which call read.table() et al., and the ones that do have no special
 > treatment
 > >>> of stringsAsFactors.
 > >>>
 > >>> -pd
 > >>>
 > >>>> On 18 Feb 2016, at 21:25 , Cook, Malcolm <MEC at stowers.org> wrote:
 > >>>>
 > >>>> Hiya,
 > >>>>
 > >>>> Probably been debated elsewhere....
 > >>>>
 > >>>> I note that R's `data` function does not respect default.stringsAsFactors
 > >>>>
 > >>>> By my lights, it should, especially as it is documented to call read.table,
 > >>> which DOES respect.
 > >>>>
 > >>>> Oh, but:  http://r.789695.n4.nabble.com/stringsAsFactors-FALSE-
 > >>> tp921891p921893.html
 > >>>>
 > >>>> Compelling.  I have to agree.
 > >>>>
 > >>>> So, I change my mind.
 > >>>>
 > >>>> By my lights, `data` should then be documented to NOT respect
 > >>> default.stringsAsFactors.
 > >>>>
 > >>>> Else?
 > >>>>
 > >>>> ~Malcolm Cook
 > >>>>
 > >>>> ______________________________________________
 > >>>> R-devel at r-project.org mailing list
 > >>>> https://stat.ethz.ch/mailman/listinfo/r-devel
 > >>>
 > >>> --
 > >>> Peter Dalgaard, Professor,
 > >>> Center for Statistics, Copenhagen Business School
 > >>> Solbjerg Plads 3, 2000 Frederiksberg, Denmark
 > >>> Phone: (+45)38153501
 > >>> Office: A 4.23
 > >>> Email: pd.mes at cbs.dk  Priv: PDalgd at gmail.com
 > >>>
 > >>>
 > >>>
 > >>>
 > >>>
 > >>>
 > >>>
 > >>>
 > >>
 > >> ______________________________________________
 > >> R-devel at r-project.org mailing list
 > >> https://stat.ethz.ch/mailman/listinfo/r-devel
 > >
 > >
 > >
 > > --
 > > Joshua Ulrich  |  about.me/joshuaulrich
 > > FOSS Trading  |  www.fosstrading.com
 > > R/Finance 2016 | www.rinfinance.com
 > 
 > --
 > Peter Dalgaard, Professor,
 > Center for Statistics, Copenhagen Business School
 > Solbjerg Plads 3, 2000 Frederiksberg, Denmark
 > Phone: (+45)38153501
 > Office: A 4.23
 > Email: pd.mes at cbs.dk  Priv: PDalgd at gmail.com
 > 
 > 
 > 
 > 
 > 
 > 
 > 
 > 


From pdalgd at gmail.com  Fri Feb 19 16:23:19 2016
From: pdalgd at gmail.com (peter dalgaard)
Date: Fri, 19 Feb 2016 16:23:19 +0100
Subject: [Rd] should `data` respect default.stringsAsFactors()?
In-Reply-To: <309da72be0a546eb8eac9e178876be2d@exchsrv2.sgc.loc>
References: <39490c6c6e9b48ff8032837df07baf9b@exchsrv2.sgc.loc>
	<766463AE-5379-445B-A17D-9AAD806DA5E3@gmail.com>
	<332c18142e464d688071992b54884e35@exchsrv2.sgc.loc>
	<CAPPM_gSX8KYC8sT2Eq3819dJZJWcQOVnEDrr_HwP2-1qJj6cSg@mail.gmail.com>
	<4DA5BAED-D119-45DA-BAFC-E54B11733302@gmail.com>
	<309da72be0a546eb8eac9e178876be2d@exchsrv2.sgc.loc>
Message-ID: <AAA51D5B-A133-4A7D-A1BC-B7615B45B8CC@gmail.com>


On 19 Feb 2016, at 16:02 , Cook, Malcolm <MEC at stowers.org> wrote:

> Hi,
> 
>> Aha... Hadn't noticed that stringsAsFactors only works via as.is in read.table.
>> 
>> Yes, the doc should probably be fixed. The code probably not 
> 
> Agreed.  
> 
> Is someone on-list authorized and willing to make the documentation change?  I suppose I could learn what it takes to be a "player", but for such a trivial fix, it probably is overkill.  Dissenting opinions?

I have fixed it for r-devel.

-pd

> 
>> -- packages
>> loading different data sets depending on user options is an even worse idea
>> than hav?ng the option in the first place... (I don't mean having the possibility, I
>> mean the default.stringsAsFactor thing).
>> 
>> In general, read.table() gets many things wrong
> 
> I agree with you that "read.table() gets many things wrong" and I too have my favorite workarounds - but that was not my concern.  My concern is that data() does not work as documented.
> 
> ~Malcolm
> 
>> , if you don't set switches
>> and/or postprocess. E.g., even when you do intend to read factors, the
>> alphabetical level order is often not desired. My favourite workaround for
>> data() is to drop a corresponding foo.R file in the ./data directory. This will be
>> run in preference to loading foo.txt (or foo.csv, etc) and can contain, like,
>> 
>> dd <- read.table(foo.txt,.....)
>> dd$cook <- factor(dd$cook, levels=c("rare","medium","well-done"))
>> 
>> etc.
>> 
>> -pd
>> 
>> 
>> 
>>> On 19 Feb 2016, at 01:39 , Joshua Ulrich <josh.m.ulrich at gmail.com> wrote:
>>> 
>>> On Thu, Feb 18, 2016 at 6:03 PM, Cook, Malcolm <MEC at stowers.org>
>> wrote:
>>>> Hi Peter,
>>>> 
>>>> Sorry if I was not clear.  Perhaps an example will make my point:
>>>> 
>>>>> data(iris)
>>>>> class(iris$Species)
>>>> [1] "factor"
>>>>> write.table(iris,'data/myiris.tab')
>>>>> data(myiris)
>>>>> class(myiris$Species)
>>>> [1] "factor"
>>>>> rm(myiris)
>>>>> options(stringsAsFactors = FALSE)
>>>>> data(myiris)
>>>>> class(myiris$Species)
>>>> [1] "factor"
>>>>> myiris<-read.table("data/myiris.tab",header=TRUE)
>>>>> class(myiris$Species)
>>>> [1] "character"
>>>> 
>>>> I am surprised to find that in the above
>>>>         setting the global option stringsAsFactors = FALSE does NOT effect
>> how Species is being read in by the `data` function
>>>> whereas
>>>>       setting the global option stringsAsFactors = FALSE DOES effect how
>> Species is being read in by read.table
>>>> 
>>>> especially since data is documented as calling read.table.
>>>> 
>>> To be explicit, it's documented as calling read.table(..., header =
>>> TRUE) in this case, but it actually calls read.table(..., header =
>>> TRUE, as.is = FALSE), which results in class(myiris$Species) of
>>> "factor".
>>> 
>>> R> myiris<-read.table("data/myiris.tab",header=TRUE,as.is=FALSE)
>>> R> class(myiris$Species)
>>> [1] "factor"
>>> 
>>> So it seems like adding as.is = FALSE to the call in the documentation
>>> would clear this up.
>>> 
>>>> In my opinion, one or the other should change (the behavior of data, or the
>> documentation).
>>>> 
>>>> <bleep> <bleep>,
>>>> 
>>>> ~ Malcolm
>>>> 
>>>> 
>>>>> -----Original Message-----
>>>>> From: peter dalgaard [mailto:pdalgd at gmail.com]
>>>>> Sent: Thursday, February 18, 2016 3:32 PM
>>>>> To: Cook, Malcolm <MEC at stowers.org>
>>>>> Cc: r-devel at stat.math.ethz.ch
>>>>> Subject: Re: [Rd] should `data` respect default.stringsAsFactors()?
>>>>> 
>>>>> What the <bleep> are you on about? data() does many things, only some
>> of
>>>>> which call read.table() et al., and the ones that do have no special
>> treatment
>>>>> of stringsAsFactors.
>>>>> 
>>>>> -pd
>>>>> 
>>>>>> On 18 Feb 2016, at 21:25 , Cook, Malcolm <MEC at stowers.org> wrote:
>>>>>> 
>>>>>> Hiya,
>>>>>> 
>>>>>> Probably been debated elsewhere....
>>>>>> 
>>>>>> I note that R's `data` function does not respect default.stringsAsFactors
>>>>>> 
>>>>>> By my lights, it should, especially as it is documented to call read.table,
>>>>> which DOES respect.
>>>>>> 
>>>>>> Oh, but:  http://r.789695.n4.nabble.com/stringsAsFactors-FALSE-
>>>>> tp921891p921893.html
>>>>>> 
>>>>>> Compelling.  I have to agree.
>>>>>> 
>>>>>> So, I change my mind.
>>>>>> 
>>>>>> By my lights, `data` should then be documented to NOT respect
>>>>> default.stringsAsFactors.
>>>>>> 
>>>>>> Else?
>>>>>> 
>>>>>> ~Malcolm Cook
>>>>>> 
>>>>>> ______________________________________________
>>>>>> R-devel at r-project.org mailing list
>>>>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>>>> 
>>>>> --
>>>>> Peter Dalgaard, Professor,
>>>>> Center for Statistics, Copenhagen Business School
>>>>> Solbjerg Plads 3, 2000 Frederiksberg, Denmark
>>>>> Phone: (+45)38153501
>>>>> Office: A 4.23
>>>>> Email: pd.mes at cbs.dk  Priv: PDalgd at gmail.com
>>>>> 
>>>>> 
>>>>> 
>>>>> 
>>>>> 
>>>>> 
>>>>> 
>>>>> 
>>>> 
>>>> ______________________________________________
>>>> R-devel at r-project.org mailing list
>>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>> 
>>> 
>>> 
>>> --
>>> Joshua Ulrich  |  about.me/joshuaulrich
>>> FOSS Trading  |  www.fosstrading.com
>>> R/Finance 2016 | www.rinfinance.com
>> 
>> --
>> Peter Dalgaard, Professor,
>> Center for Statistics, Copenhagen Business School
>> Solbjerg Plads 3, 2000 Frederiksberg, Denmark
>> Phone: (+45)38153501
>> Office: A 4.23
>> Email: pd.mes at cbs.dk  Priv: PDalgd at gmail.com
>> 
>> 
>> 
>> 
>> 
>> 
>> 
>> 
> 

-- 
Peter Dalgaard, Professor,
Center for Statistics, Copenhagen Business School
Solbjerg Plads 3, 2000 Frederiksberg, Denmark
Phone: (+45)38153501
Office: A 4.23
Email: pd.mes at cbs.dk  Priv: PDalgd at gmail.com


From ligges at statistik.tu-dortmund.de  Fri Feb 19 17:49:45 2016
From: ligges at statistik.tu-dortmund.de (Uwe Ligges)
Date: Fri, 19 Feb 2016 17:49:45 +0100
Subject: [Rd] default destfile in download.file()
In-Reply-To: <CABFfbXuJz9Y-E2unZ+U9-bSjYVYWJdKW1a68ogqMXe6P9Ciuig@mail.gmail.com>
References: <CABFfbXuJz9Y-E2unZ+U9-bSjYVYWJdKW1a68ogqMXe6P9Ciuig@mail.gmail.com>
Message-ID: <56C747A9.3030406@statistik.tu-dortmund.de>



On 18.02.2016 12:01, Jeroen Ooms wrote:
> A nice default value for the `destfile` argument in download.file() would
> be `basename(url)` i.e. the name of the downloaded file. This would
> correspond to default behavior in many other web/ftp clients and makes code
> slightly more concise:
>
>    download.file("https://svn.r-project.org/R/trunk/doc/CRAN_mirrors.csv")
>    mirrors <- read.csv("CRAN_mirrors.csv")

This contradicts our approach not to overwrite files in the user 
filespace that are not explicitly mentioned as an argument.

Best,
Uwe Ligges


>
> 	[[alternative HTML version deleted]]
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>


From dstr7320 at uni.sydney.edu.au  Sat Feb 20 10:00:09 2016
From: dstr7320 at uni.sydney.edu.au (Dario Strbenac)
Date: Sat, 20 Feb 2016 09:00:09 +0000
Subject: [Rd] R Package Installation Ignores libPaths Setting
In-Reply-To: <56C57AA0.2020503@stats.ox.ac.uk>
References: <SN1PR0101MB14390FF9CD858614E238134BCDAE0@SN1PR0101MB1439.prod.exchangelabs.com>,
	<56C57AA0.2020503@stats.ox.ac.uk>
Message-ID: <SN1PR0101MB143937FB6A94AA54C672A003CDA00@SN1PR0101MB1439.prod.exchangelabs.com>

Good day,

I believe from the documentation that folders in R_LIBS should appear in the output of .libPaths, but they do not. The documentation contains "The library search path is initialized at startup from the environment variable R_LIBS ..."

However,

$ export R_LIBS=/users/stgrad/dario/tmp/
$ Rscript -e ".libPaths()"
[1] "/dskh/nobackup/biostat/Bioconductor" "/usr/local/lib/R/site-library"      
[3] "/usr/lib/R/site-library"             "/usr/lib/R/library"

Is there some other crucial information which I have missed ?

--------------------------------------
Dario Strbenac
PhD Student
University of Sydney
Camperdown NSW 2050
Australia

From pdalgd at gmail.com  Sat Feb 20 13:28:42 2016
From: pdalgd at gmail.com (peter dalgaard)
Date: Sat, 20 Feb 2016 13:28:42 +0100
Subject: [Rd] R Package Installation Ignores libPaths Setting
In-Reply-To: <SN1PR0101MB143937FB6A94AA54C672A003CDA00@SN1PR0101MB1439.prod.exchangelabs.com>
References: <SN1PR0101MB14390FF9CD858614E238134BCDAE0@SN1PR0101MB1439.prod.exchangelabs.com>
	<56C57AA0.2020503@stats.ox.ac.uk>
	<SN1PR0101MB143937FB6A94AA54C672A003CDA00@SN1PR0101MB1439.prod.exchangelabs.com>
Message-ID: <C8D32168-D8AA-468C-B783-C276A5451C2C@gmail.com>

Works for me. Which shell are you using? Are you setting .libPaths elsewhere?

Peter-Dalgaards-MacBook-Air:F pd$ R_LIBS=~/tmp Rscript -e '.libPaths()'
[1] "/Users/pd/tmp"                                                 
[2] "/Library/Frameworks/R.framework/Versions/3.2/Resources/library"

Peter-Dalgaards-MacBook-Air:F pd$ export R_LIBS=~/tmp 
Peter-Dalgaards-MacBook-Air:F pd$ Rscript -e '.libPaths()'
[1] "/Users/pd/tmp"                                                 
[2] "/Library/Frameworks/R.framework/Versions/3.2/Resources/library"

-pd

> On 20 Feb 2016, at 10:00 , Dario Strbenac <dstr7320 at uni.sydney.edu.au> wrote:
> 
> Good day,
> 
> I believe from the documentation that folders in R_LIBS should appear in the output of .libPaths, but they do not. The documentation contains "The library search path is initialized at startup from the environment variable R_LIBS ..."
> 
> However,
> 
> $ export R_LIBS=/users/stgrad/dario/tmp/
> $ Rscript -e ".libPaths()"
> [1] "/dskh/nobackup/biostat/Bioconductor" "/usr/local/lib/R/site-library"      
> [3] "/usr/lib/R/site-library"             "/usr/lib/R/library"
> 
> Is there some other crucial information which I have missed ?
> 
> --------------------------------------
> Dario Strbenac
> PhD Student
> University of Sydney
> Camperdown NSW 2050
> Australia
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel

-- 
Peter Dalgaard, Professor,
Center for Statistics, Copenhagen Business School
Solbjerg Plads 3, 2000 Frederiksberg, Denmark
Phone: (+45)38153501
Office: A 4.23
Email: pd.mes at cbs.dk  Priv: PDalgd at gmail.com


From dstr7320 at uni.sydney.edu.au  Mon Feb 22 08:00:04 2016
From: dstr7320 at uni.sydney.edu.au (Dario Strbenac)
Date: Mon, 22 Feb 2016 07:00:04 +0000
Subject: [Rd] R Package Installation Ignores libPaths Setting
In-Reply-To: <C8D32168-D8AA-468C-B783-C276A5451C2C@gmail.com>
References: <SN1PR0101MB14390FF9CD858614E238134BCDAE0@SN1PR0101MB1439.prod.exchangelabs.com>
	<56C57AA0.2020503@stats.ox.ac.uk>
	<SN1PR0101MB143937FB6A94AA54C672A003CDA00@SN1PR0101MB1439.prod.exchangelabs.com>,
	<C8D32168-D8AA-468C-B783-C276A5451C2C@gmail.com>
Message-ID: <SN1PR0101MB143997E8F366A63F8D0EFAA5CDA20@SN1PR0101MB1439.prod.exchangelabs.com>

Good day,

Thank you for the suggestions. I had a .libPaths command in my .Rprofile file. I have now removed it and specified R_LIBS in .Renviron.

--------------------------------------
Dario Strbenac
PhD Student
University of Sydney
Camperdown NSW 2050
Australia

From ripley at stats.ox.ac.uk  Mon Feb 22 10:57:32 2016
From: ripley at stats.ox.ac.uk (Prof Brian Ripley)
Date: Mon, 22 Feb 2016 09:57:32 +0000
Subject: [Rd] Avoid texinfo 6.1
Message-ID: <56CADB8C.8050307@stats.ox.ac.uk>

There are problems with the texi2dvi in the recently released texinfo 
6.1.  (The bug has been reported.)  Avoid 6.1 if you can, but if not 
setting the environment variable

R_TEXI2DVICMD=emulation

will enable R to build, including NEWS.pdf and all the vignettes.

We are working on a more complete workaround for R-devel and 3.2.4.

-- 
Brian D. Ripley,                  ripley at stats.ox.ac.uk
Emeritus Professor of Applied Statistics, University of Oxford


From edd at debian.org  Mon Feb 22 13:40:16 2016
From: edd at debian.org (Dirk Eddelbuettel)
Date: Mon, 22 Feb 2016 06:40:16 -0600
Subject: [Rd] Avoid texinfo 6.1
In-Reply-To: <56CADB8C.8050307@stats.ox.ac.uk>
References: <56CADB8C.8050307@stats.ox.ac.uk>
Message-ID: <22219.432.222163.374283@max.nulle.part>


On 22 February 2016 at 09:57, Prof Brian Ripley wrote:
| There are problems with the texi2dvi in the recently released texinfo 
| 6.1.  (The bug has been reported.)  Avoid 6.1 if you can, but if not 
| setting the environment variable
| 
| R_TEXI2DVICMD=emulation
| 
| will enable R to build, including NEWS.pdf and all the vignettes.
| 
| We are working on a more complete workaround for R-devel and 3.2.4.

Confirming that there are issues.  I had to rebuild 3.2.3 for Debian (as
the default JDK switched from OpenJDK 7 to 8) and had it just fail on
NEWS.pdf for no clear reason. I was a bit short on time last week because of
travel; I should have reported back here.

Dirk

-- 
http://dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org


From nospam at altfeld-im.de  Mon Feb 22 18:45:59 2016
From: nospam at altfeld-im.de (nospam at altfeld-im.de)
Date: Mon, 22 Feb 2016 18:45:59 +0100
Subject: [Rd] iconv to UTF-16 encoding produces error due to embedded
 nulls (write.table with fileEncoding param)
In-Reply-To: <1455643514.15123.0.camel@i3770>
References: <1455643514.15123.0.camel@i3770>
Message-ID: <1456163159.3028.6.camel@i3770>

Dear R developers

I think I have found a bug that can be reproduced with two lines of code
and I am very thankful to get your first assessment or feed-back on my
report.

If this is the wrong mailing list or I did something wrong
(e. g. semi "anonymous" email address to protect my privacy and defend
unwanted spam) please let me know since I am new here.

Thank you very much :-)

J. Altfeld

On Tue, 2016-02-16 at 18:25 +0100, nospam at altfeld-im.de wrote:
> 
> 
> If I execute the code from the "?write.table" examples section
> 
>   x <- data.frame(a = I("a \" quote"), b = pi)
>   # (ommited code)
>   write.csv(x, file = "foo.csv", fileEncoding = "UTF-16LE")
> 
> the resulting CSV file has a size of 6 bytes which is too short
> (truncated):
> 
>   """,3
> 
> The problem seems to be the iconv function:
> 
>   iconv("foo", to="UTF-16")
> 
> produces
> 
>   Error in iconv("foo", to = "UTF-16"):
>   embedded nul in string: '\xff\xfef\0o\0o\0'
> 
> In 2010 a (partial) patch for this problem was submitted:
> 
> http://tolstoy.newcastle.edu.au/R/e10/devel/10/06/0648.html
> 
> Are there chances to fix this problem since it prevents writing Windows
> UTF-16LE text files?
> 
> 
> 
> PS: This problem can be reproduced on Windows and Linux.
> 
> ---------------
> 
> > sessionInfo()
> R version 3.2.3 (2015-12-10)
> Platform: x86_64-pc-linux-gnu (64-bit)
> Running under: Ubuntu 14.04.3 LTS
> 
> locale:
>  [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C
> LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8    
>  [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8
> LC_PAPER=en_US.UTF-8       LC_NAME=C                 
>  [9] LC_ADDRESS=C               LC_TELEPHONE=C
> LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C       
> 
> attached base packages:
> [1] stats     graphics  grDevices utils     datasets  methods
> base     
> 
> loaded via a namespace (and not attached):
> [1] tools_3.2.3
> >
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From maechler at stat.math.ethz.ch  Tue Feb 23 10:37:38 2016
From: maechler at stat.math.ethz.ch (Martin Maechler)
Date: Tue, 23 Feb 2016 10:37:38 +0100
Subject: [Rd] iconv to UTF-16 encoding produces error due to embedded
 nulls (write.table with fileEncoding param)
In-Reply-To: <1456163159.3028.6.camel@i3770>
References: <1455643514.15123.0.camel@i3770>
	<1456163159.3028.6.camel@i3770>
Message-ID: <22220.10338.593628.170771@stat.math.ethz.ch>

>>>>> nospam at altfeld-im de <nospam at altfeld-im.de>
>>>>>     on Mon, 22 Feb 2016 18:45:59 +0100 writes:

    > Dear R developers
    > I think I have found a bug that can be reproduced with two lines of code
    > and I am very thankful to get your first assessment or feed-back on my
    > report.

    > If this is the wrong mailing list or I did something wrong
    > (e. g. semi "anonymous" email address to protect my privacy and defend
    > unwanted spam) please let me know since I am new here.

    > Thank you very much :-)

    > J. Altfeld

Dear J.,
(yes, a bit less anonymity would be very welcomed here!),

You are right, this is a bug, at least in the documentation, but
probably "all real", indeed,

but read on.

    > On Tue, 2016-02-16 at 18:25 +0100, nospam at altfeld-im.de wrote:
    >> 
    >> 
    >> If I execute the code from the "?write.table" examples section
    >> 
    >> x <- data.frame(a = I("a \" quote"), b = pi)
    >> # (ommited code)
    >> write.csv(x, file = "foo.csv", fileEncoding = "UTF-16LE")
    >> 
    >> the resulting CSV file has a size of 6 bytes which is too short
    >> (truncated):
    >> 
    >> """,3

reproducibly, yes.
If you look at what write.csv does
and then simplify, you can get a similar wrong result by

  write.table(x, file = "foo.tab", fileEncoding = "UTF-16LE")

which results in a file with one line

""" 3

and if you debug  write.table() you see that its building blocks
here are
	 file <- file(........, encoding = fileEncoding)

a 	 writeLines(*, file=file)  for the column headers,

and then "deeper down" C code which I did not investigate.

But just looking a bit at such a file() object with writeLines()
seems slightly revealing, as e.g., 'eol' does not seem to
"work" for this encoding:

    > fn <- tempfile("ffoo"); ff <- file(fn, open="w", encoding = "UTF-16LE")
    > writeLines(LETTERS[3:1], ff); writeLines("|", ff); writeLines(">a", ff)
    > close(ff)
    > file.show(fn)
    CBA|>
    > file.size(fn)
    [1] 5
    > 

    >> The problem seems to be the iconv function:
    >> 
    >> iconv("foo", to="UTF-16")
    >> 
    >> produces
    >> 
    >> Error in iconv("foo", to = "UTF-16"):
    >> embedded nul in string: '\xff\xfef\0o\0o\0'

but this works

    > iconv("foo", to="UTF-16", toRaw=TRUE)
    [[1]]
    [1] ff fe 66 00 6f 00 6f 00

(indeed showing the embedded '\0's)

    >> In 2010 a (partial) patch for this problem was submitted:
    >> http://tolstoy.newcastle.edu.au/R/e10/devel/10/06/0648.html

the patch only related to the iconv() problem not allowing 'raw'
(instead of character) argument x.

... and it is > 5.5 years old, for an iconv() version that was less
featureful than today.
Rather, current iconv(x) allows x to be a list of raw entries.


    >> Are there chances to fix this problem since it prevents writing Windows
    >> UTF-16LE text files?

    >> 
    >> PS: This problem can be reproduced on Windows and Linux.

indeed.... also on "R devel of today".

I agree it should be fixed... but as I said not by the patch you
mentioned.

Tested patches to fix this are welcome, indeed.

Martin Maechler



    >> ---------------
    >> 
    >> > sessionInfo()
    >> R version 3.2.3 (2015-12-10)
    >> Platform: x86_64-pc-linux-gnu (64-bit)
    >> Running under: Ubuntu 14.04.3 LTS
    >> 
    >> locale:
    >> [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C
    >> LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8    
    >> [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8
    >> LC_PAPER=en_US.UTF-8       LC_NAME=C                 
    >> [9] LC_ADDRESS=C               LC_TELEPHONE=C
    >> LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C       
    >> 
    >> attached base packages:
    >> [1] stats     graphics  grDevices utils     datasets  methods
    >> base     
    >> 
    >> loaded via a namespace (and not attached):
    >> [1] tools_3.2.3
    >> >
    >> 
    >> ______________________________________________
    >> R-devel at r-project.org mailing list
    >> https://stat.ethz.ch/mailman/listinfo/r-devel

    > ______________________________________________
    > R-devel at r-project.org mailing list
    > https://stat.ethz.ch/mailman/listinfo/r-devel


From mikko.korpela at aalto.fi  Tue Feb 23 13:06:17 2016
From: mikko.korpela at aalto.fi (Mikko Korpela)
Date: Tue, 23 Feb 2016 14:06:17 +0200
Subject: [Rd] iconv to UTF-16 encoding produces error due to embedded
 nulls (write.table with fileEncoding param)
In-Reply-To: <22220.10338.593628.170771@stat.math.ethz.ch>
References: <1455643514.15123.0.camel@i3770> <1456163159.3028.6.camel@i3770>
	<22220.10338.593628.170771@stat.math.ethz.ch>
Message-ID: <56CC4B39.6010702@aalto.fi>

On 23.02.2016 11:37, Martin Maechler wrote:
>>>>>> nospam at altfeld-im de <nospam at altfeld-im.de>
>>>>>>     on Mon, 22 Feb 2016 18:45:59 +0100 writes:
> 
>     > Dear R developers
>     > I think I have found a bug that can be reproduced with two lines of code
>     > and I am very thankful to get your first assessment or feed-back on my
>     > report.
> 
>     > If this is the wrong mailing list or I did something wrong
>     > (e. g. semi "anonymous" email address to protect my privacy and defend
>     > unwanted spam) please let me know since I am new here.
> 
>     > Thank you very much :-)
> 
>     > J. Altfeld
> 
> Dear J.,
> (yes, a bit less anonymity would be very welcomed here!),
> 
> You are right, this is a bug, at least in the documentation, but
> probably "all real", indeed,
> 
> but read on.
> 
>     > On Tue, 2016-02-16 at 18:25 +0100, nospam at altfeld-im.de wrote:
>     >> 
>     >> 
>     >> If I execute the code from the "?write.table" examples section
>     >> 
>     >> x <- data.frame(a = I("a \" quote"), b = pi)
>     >> # (ommited code)
>     >> write.csv(x, file = "foo.csv", fileEncoding = "UTF-16LE")
>     >> 
>     >> the resulting CSV file has a size of 6 bytes which is too short
>     >> (truncated):
>     >> 
>     >> """,3
> 
> reproducibly, yes.
> If you look at what write.csv does
> and then simplify, you can get a similar wrong result by
> 
>   write.table(x, file = "foo.tab", fileEncoding = "UTF-16LE")
> 
> which results in a file with one line
> 
> """ 3
> 
> and if you debug  write.table() you see that its building blocks
> here are
> 	 file <- file(........, encoding = fileEncoding)
> 
> a 	 writeLines(*, file=file)  for the column headers,
> 
> and then "deeper down" C code which I did not investigate.

I took a look at connections.c. There is a call to strlen() that gets
confused by null characters. I think the obvious fix is to avoid the
call to strlen() as the size is already known:

Index: src/main/connections.c
===================================================================
--- src/main/connections.c	(revision 70213)
+++ src/main/connections.c	(working copy)
@@ -369,7 +369,7 @@
 		/* is this safe? */
 		warning(_("invalid char string in output conversion"));
 	    *ob = '\0';
-	    con->write(outbuf, 1, strlen(outbuf), con);
+	    con->write(outbuf, 1, ob - outbuf, con);
 	} while(again && inb > 0);  /* it seems some iconv signal -1 on
 				       zero-length input */
     } else


> 
> But just looking a bit at such a file() object with writeLines()
> seems slightly revealing, as e.g., 'eol' does not seem to
> "work" for this encoding:
> 
>     > fn <- tempfile("ffoo"); ff <- file(fn, open="w", encoding = "UTF-16LE")
>     > writeLines(LETTERS[3:1], ff); writeLines("|", ff); writeLines(">a", ff)
>     > close(ff)
>     > file.show(fn)
>     CBA|>
>     > file.size(fn)
>     [1] 5
>     > 

With the patch applied:

    > readLines(fn, encoding="UTF-16LE", skipNul=TRUE)
    [1] "C"  "B"  "A"  "|"  ">a"
    > file.size(fn)
    [1] 22

- Mikko Korpela

>     >> The problem seems to be the iconv function:
>     >> 
>     >> iconv("foo", to="UTF-16")
>     >> 
>     >> produces
>     >> 
>     >> Error in iconv("foo", to = "UTF-16"):
>     >> embedded nul in string: '\xff\xfef\0o\0o\0'
> 
> but this works
> 
>     > iconv("foo", to="UTF-16", toRaw=TRUE)
>     [[1]]
>     [1] ff fe 66 00 6f 00 6f 00
> 
> (indeed showing the embedded '\0's)
> 
>     >> In 2010 a (partial) patch for this problem was submitted:
>     >> http://tolstoy.newcastle.edu.au/R/e10/devel/10/06/0648.html
> 
> the patch only related to the iconv() problem not allowing 'raw'
> (instead of character) argument x.
> 
> ... and it is > 5.5 years old, for an iconv() version that was less
> featureful than today.
> Rather, current iconv(x) allows x to be a list of raw entries.
> 
> 
>     >> Are there chances to fix this problem since it prevents writing Windows
>     >> UTF-16LE text files?
> 
>     >> 
>     >> PS: This problem can be reproduced on Windows and Linux.
> 
> indeed.... also on "R devel of today".
> 
> I agree it should be fixed... but as I said not by the patch you
> mentioned.
> 
> Tested patches to fix this are welcome, indeed.


From nospam at altfeld-im.de  Tue Feb 23 22:53:53 2016
From: nospam at altfeld-im.de (nospam at altfeld-im.de)
Date: Tue, 23 Feb 2016 22:53:53 +0100
Subject: [Rd] iconv to UTF-16 encoding produces error due to embedded
 nulls (write.table with fileEncoding param)
In-Reply-To: <56CC4B39.6010702@aalto.fi>
References: <1455643514.15123.0.camel@i3770> <1456163159.3028.6.camel@i3770>
	<22220.10338.593628.170771@stat.math.ethz.ch>
	<56CC4B39.6010702@aalto.fi>
Message-ID: <1456264433.3028.11.camel@i3770>

Excellent analysis, thank you both for the quick reply!

Is there anything I can do to get the bug fixed in the next version of R
(e. g. filing a bug report at https://bugs.r-project.org/bugzilla3/)?


On Tue, 2016-02-23 at 14:06 +0200, Mikko Korpela wrote:
> On 23.02.2016 11:37, Martin Maechler wrote:
> >>>>>> nospam at altfeld-im de <nospam at altfeld-im.de>
> >>>>>>     on Mon, 22 Feb 2016 18:45:59 +0100 writes:
> > 
> >     > Dear R developers
> >     > I think I have found a bug that can be reproduced with two lines of code
> >     > and I am very thankful to get your first assessment or feed-back on my
> >     > report.
> > 
> >     > If this is the wrong mailing list or I did something wrong
> >     > (e. g. semi "anonymous" email address to protect my privacy and defend
> >     > unwanted spam) please let me know since I am new here.
> > 
> >     > Thank you very much :-)
> > 
> >     > J. Altfeld
> > 
> > Dear J.,
> > (yes, a bit less anonymity would be very welcomed here!),
> > 
> > You are right, this is a bug, at least in the documentation, but
> > probably "all real", indeed,
> > 
> > but read on.
> > 
> >     > On Tue, 2016-02-16 at 18:25 +0100, nospam at altfeld-im.de wrote:
> >     >> 
> >     >> 
> >     >> If I execute the code from the "?write.table" examples section
> >     >> 
> >     >> x <- data.frame(a = I("a \" quote"), b = pi)
> >     >> # (ommited code)
> >     >> write.csv(x, file = "foo.csv", fileEncoding = "UTF-16LE")
> >     >> 
> >     >> the resulting CSV file has a size of 6 bytes which is too short
> >     >> (truncated):
> >     >> 
> >     >> """,3
> > 
> > reproducibly, yes.
> > If you look at what write.csv does
> > and then simplify, you can get a similar wrong result by
> > 
> >   write.table(x, file = "foo.tab", fileEncoding = "UTF-16LE")
> > 
> > which results in a file with one line
> > 
> > """ 3
> > 
> > and if you debug  write.table() you see that its building blocks
> > here are
> > 	 file <- file(........, encoding = fileEncoding)
> > 
> > a 	 writeLines(*, file=file)  for the column headers,
> > 
> > and then "deeper down" C code which I did not investigate.
> 
> I took a look at connections.c. There is a call to strlen() that gets
> confused by null characters. I think the obvious fix is to avoid the
> call to strlen() as the size is already known:
> 
> Index: src/main/connections.c
> ===================================================================
> --- src/main/connections.c	(revision 70213)
> +++ src/main/connections.c	(working copy)
> @@ -369,7 +369,7 @@
>  		/* is this safe? */
>  		warning(_("invalid char string in output conversion"));
>  	    *ob = '\0';
> -	    con->write(outbuf, 1, strlen(outbuf), con);
> +	    con->write(outbuf, 1, ob - outbuf, con);
>  	} while(again && inb > 0);  /* it seems some iconv signal -1 on
>  				       zero-length input */
>      } else
> 
> 
> > 
> > But just looking a bit at such a file() object with writeLines()
> > seems slightly revealing, as e.g., 'eol' does not seem to
> > "work" for this encoding:
> > 
> >     > fn <- tempfile("ffoo"); ff <- file(fn, open="w", encoding = "UTF-16LE")
> >     > writeLines(LETTERS[3:1], ff); writeLines("|", ff); writeLines(">a", ff)
> >     > close(ff)
> >     > file.show(fn)
> >     CBA|>
> >     > file.size(fn)
> >     [1] 5
> >     > 
> 
> With the patch applied:
> 
>     > readLines(fn, encoding="UTF-16LE", skipNul=TRUE)
>     [1] "C"  "B"  "A"  "|"  ">a"
>     > file.size(fn)
>     [1] 22
> 
> - Mikko Korpela
> 
> >     >> The problem seems to be the iconv function:
> >     >> 
> >     >> iconv("foo", to="UTF-16")
> >     >> 
> >     >> produces
> >     >> 
> >     >> Error in iconv("foo", to = "UTF-16"):
> >     >> embedded nul in string: '\xff\xfef\0o\0o\0'
> > 
> > but this works
> > 
> >     > iconv("foo", to="UTF-16", toRaw=TRUE)
> >     [[1]]
> >     [1] ff fe 66 00 6f 00 6f 00
> > 
> > (indeed showing the embedded '\0's)
> > 
> >     >> In 2010 a (partial) patch for this problem was submitted:
> >     >> http://tolstoy.newcastle.edu.au/R/e10/devel/10/06/0648.html
> > 
> > the patch only related to the iconv() problem not allowing 'raw'
> > (instead of character) argument x.
> > 
> > ... and it is > 5.5 years old, for an iconv() version that was less
> > featureful than today.
> > Rather, current iconv(x) allows x to be a list of raw entries.
> > 
> > 
> >     >> Are there chances to fix this problem since it prevents writing Windows
> >     >> UTF-16LE text files?
> > 
> >     >> 
> >     >> PS: This problem can be reproduced on Windows and Linux.
> > 
> > indeed.... also on "R devel of today".
> > 
> > I agree it should be fixed... but as I said not by the patch you
> > mentioned.
> > 
> > Tested patches to fix this are welcome, indeed.
>


From murdoch.duncan at gmail.com  Wed Feb 24 00:25:09 2016
From: murdoch.duncan at gmail.com (Duncan Murdoch)
Date: Tue, 23 Feb 2016 18:25:09 -0500
Subject: [Rd] iconv to UTF-16 encoding produces error due to embedded
 nulls (write.table with fileEncoding param)
In-Reply-To: <1456264433.3028.11.camel@i3770>
References: <1455643514.15123.0.camel@i3770> <1456163159.3028.6.camel@i3770>
	<22220.10338.593628.170771@stat.math.ethz.ch>
	<56CC4B39.6010702@aalto.fi> <1456264433.3028.11.camel@i3770>
Message-ID: <56CCEA55.4020706@gmail.com>

On 23/02/2016 4:53 PM, nospam at altfeld-im.de wrote:
> Excellent analysis, thank you both for the quick reply!
>
> Is there anything I can do to get the bug fixed in the next version of R
> (e. g. filing a bug report at https://bugs.r-project.org/bugzilla3/)?

Wait a few days, and file a bug report if nothing has happened.

Duncan Murdoch

>
>
> On Tue, 2016-02-23 at 14:06 +0200, Mikko Korpela wrote:
>> On 23.02.2016 11:37, Martin Maechler wrote:
>>>>>>>> nospam at altfeld-im de <nospam at altfeld-im.de>
>>>>>>>>      on Mon, 22 Feb 2016 18:45:59 +0100 writes:
>>>
>>>      > Dear R developers
>>>      > I think I have found a bug that can be reproduced with two lines of code
>>>      > and I am very thankful to get your first assessment or feed-back on my
>>>      > report.
>>>
>>>      > If this is the wrong mailing list or I did something wrong
>>>      > (e. g. semi "anonymous" email address to protect my privacy and defend
>>>      > unwanted spam) please let me know since I am new here.
>>>
>>>      > Thank you very much :-)
>>>
>>>      > J. Altfeld
>>>
>>> Dear J.,
>>> (yes, a bit less anonymity would be very welcomed here!),
>>>
>>> You are right, this is a bug, at least in the documentation, but
>>> probably "all real", indeed,
>>>
>>> but read on.
>>>
>>>      > On Tue, 2016-02-16 at 18:25 +0100, nospam at altfeld-im.de wrote:
>>>      >>
>>>      >>
>>>      >> If I execute the code from the "?write.table" examples section
>>>      >>
>>>      >> x <- data.frame(a = I("a \" quote"), b = pi)
>>>      >> # (ommited code)
>>>      >> write.csv(x, file = "foo.csv", fileEncoding = "UTF-16LE")
>>>      >>
>>>      >> the resulting CSV file has a size of 6 bytes which is too short
>>>      >> (truncated):
>>>      >>
>>>      >> """,3
>>>
>>> reproducibly, yes.
>>> If you look at what write.csv does
>>> and then simplify, you can get a similar wrong result by
>>>
>>>    write.table(x, file = "foo.tab", fileEncoding = "UTF-16LE")
>>>
>>> which results in a file with one line
>>>
>>> """ 3
>>>
>>> and if you debug  write.table() you see that its building blocks
>>> here are
>>> 	 file <- file(........, encoding = fileEncoding)
>>>
>>> a 	 writeLines(*, file=file)  for the column headers,
>>>
>>> and then "deeper down" C code which I did not investigate.
>>
>> I took a look at connections.c. There is a call to strlen() that gets
>> confused by null characters. I think the obvious fix is to avoid the
>> call to strlen() as the size is already known:
>>
>> Index: src/main/connections.c
>> ===================================================================
>> --- src/main/connections.c	(revision 70213)
>> +++ src/main/connections.c	(working copy)
>> @@ -369,7 +369,7 @@
>>   		/* is this safe? */
>>   		warning(_("invalid char string in output conversion"));
>>   	    *ob = '\0';
>> -	    con->write(outbuf, 1, strlen(outbuf), con);
>> +	    con->write(outbuf, 1, ob - outbuf, con);
>>   	} while(again && inb > 0);  /* it seems some iconv signal -1 on
>>   				       zero-length input */
>>       } else
>>
>>
>>>
>>> But just looking a bit at such a file() object with writeLines()
>>> seems slightly revealing, as e.g., 'eol' does not seem to
>>> "work" for this encoding:
>>>
>>>      > fn <- tempfile("ffoo"); ff <- file(fn, open="w", encoding = "UTF-16LE")
>>>      > writeLines(LETTERS[3:1], ff); writeLines("|", ff); writeLines(">a", ff)
>>>      > close(ff)
>>>      > file.show(fn)
>>>      CBA|>
>>>      > file.size(fn)
>>>      [1] 5
>>>      >
>>
>> With the patch applied:
>>
>>      > readLines(fn, encoding="UTF-16LE", skipNul=TRUE)
>>      [1] "C"  "B"  "A"  "|"  ">a"
>>      > file.size(fn)
>>      [1] 22
>>
>> - Mikko Korpela
>>
>>>      >> The problem seems to be the iconv function:
>>>      >>
>>>      >> iconv("foo", to="UTF-16")
>>>      >>
>>>      >> produces
>>>      >>
>>>      >> Error in iconv("foo", to = "UTF-16"):
>>>      >> embedded nul in string: '\xff\xfef\0o\0o\0'
>>>
>>> but this works
>>>
>>>      > iconv("foo", to="UTF-16", toRaw=TRUE)
>>>      [[1]]
>>>      [1] ff fe 66 00 6f 00 6f 00
>>>
>>> (indeed showing the embedded '\0's)
>>>
>>>      >> In 2010 a (partial) patch for this problem was submitted:
>>>      >> http://tolstoy.newcastle.edu.au/R/e10/devel/10/06/0648.html
>>>
>>> the patch only related to the iconv() problem not allowing 'raw'
>>> (instead of character) argument x.
>>>
>>> ... and it is > 5.5 years old, for an iconv() version that was less
>>> featureful than today.
>>> Rather, current iconv(x) allows x to be a list of raw entries.
>>>
>>>
>>>      >> Are there chances to fix this problem since it prevents writing Windows
>>>      >> UTF-16LE text files?
>>>
>>>      >>
>>>      >> PS: This problem can be reproduced on Windows and Linux.
>>>
>>> indeed.... also on "R devel of today".
>>>
>>> I agree it should be fixed... but as I said not by the patch you
>>> mentioned.
>>>
>>> Tested patches to fix this are welcome, indeed.
>>
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>


From murdoch.duncan at gmail.com  Wed Feb 24 14:47:09 2016
From: murdoch.duncan at gmail.com (Duncan Murdoch)
Date: Wed, 24 Feb 2016 08:47:09 -0500
Subject: [Rd] iconv to UTF-16 encoding produces error due to embedded
 nulls (write.table with fileEncoding param)
In-Reply-To: <56CC4B39.6010702@aalto.fi>
References: <1455643514.15123.0.camel@i3770> <1456163159.3028.6.camel@i3770>
	<22220.10338.593628.170771@stat.math.ethz.ch>
	<56CC4B39.6010702@aalto.fi>
Message-ID: <56CDB45D.2090007@gmail.com>

On 23/02/2016 7:06 AM, Mikko Korpela wrote:
> On 23.02.2016 11:37, Martin Maechler wrote:
>>>>>>> nospam at altfeld-im de <nospam at altfeld-im.de>
>>>>>>>      on Mon, 22 Feb 2016 18:45:59 +0100 writes:
>>
>>      > Dear R developers
>>      > I think I have found a bug that can be reproduced with two lines of code
>>      > and I am very thankful to get your first assessment or feed-back on my
>>      > report.
>>
>>      > If this is the wrong mailing list or I did something wrong
>>      > (e. g. semi "anonymous" email address to protect my privacy and defend
>>      > unwanted spam) please let me know since I am new here.
>>
>>      > Thank you very much :-)
>>
>>      > J. Altfeld
>>
>> Dear J.,
>> (yes, a bit less anonymity would be very welcomed here!),
>>
>> You are right, this is a bug, at least in the documentation, but
>> probably "all real", indeed,
>>
>> but read on.
>>
>>      > On Tue, 2016-02-16 at 18:25 +0100, nospam at altfeld-im.de wrote:
>>      >>
>>      >>
>>      >> If I execute the code from the "?write.table" examples section
>>      >>
>>      >> x <- data.frame(a = I("a \" quote"), b = pi)
>>      >> # (ommited code)
>>      >> write.csv(x, file = "foo.csv", fileEncoding = "UTF-16LE")
>>      >>
>>      >> the resulting CSV file has a size of 6 bytes which is too short
>>      >> (truncated):
>>      >>
>>      >> """,3
>>
>> reproducibly, yes.
>> If you look at what write.csv does
>> and then simplify, you can get a similar wrong result by
>>
>>    write.table(x, file = "foo.tab", fileEncoding = "UTF-16LE")
>>
>> which results in a file with one line
>>
>> """ 3
>>
>> and if you debug  write.table() you see that its building blocks
>> here are
>> 	 file <- file(........, encoding = fileEncoding)
>>
>> a 	 writeLines(*, file=file)  for the column headers,
>>
>> and then "deeper down" C code which I did not investigate.
>
> I took a look at connections.c. There is a call to strlen() that gets
> confused by null characters. I think the obvious fix is to avoid the
> call to strlen() as the size is already known:
>
> Index: src/main/connections.c
> ===================================================================
> --- src/main/connections.c	(revision 70213)
> +++ src/main/connections.c	(working copy)
> @@ -369,7 +369,7 @@
>   		/* is this safe? */
>   		warning(_("invalid char string in output conversion"));
>   	    *ob = '\0';
> -	    con->write(outbuf, 1, strlen(outbuf), con);
> +	    con->write(outbuf, 1, ob - outbuf, con);
>   	} while(again && inb > 0);  /* it seems some iconv signal -1 on
>   				       zero-length input */
>       } else
>
>
>>
>> But just looking a bit at such a file() object with writeLines()
>> seems slightly revealing, as e.g., 'eol' does not seem to
>> "work" for this encoding:
>>
>>      > fn <- tempfile("ffoo"); ff <- file(fn, open="w", encoding = "UTF-16LE")
>>      > writeLines(LETTERS[3:1], ff); writeLines("|", ff); writeLines(">a", ff)
>>      > close(ff)
>>      > file.show(fn)
>>      CBA|>
>>      > file.size(fn)
>>      [1] 5
>>      >
>
> With the patch applied:
>
>      > readLines(fn, encoding="UTF-16LE", skipNul=TRUE)
>      [1] "C"  "B"  "A"  "|"  ">a"
>      > file.size(fn)
>      [1] 22

That may be okay on Unix, but it's not enough on Windows.  There the \n 
that writeLines adds at the end of each line isn't translated to 
UTF-16LE properly, so things get messed up.  (I think the \n is 
translated, but the \r that Windows wants is not, so you get a mix of 8 
bit and 16 bit characters.)

Duncan Murdoch

> - Mikko Korpela
>
>>      >> The problem seems to be the iconv function:
>>      >>
>>      >> iconv("foo", to="UTF-16")
>>      >>
>>      >> produces
>>      >>
>>      >> Error in iconv("foo", to = "UTF-16"):
>>      >> embedded nul in string: '\xff\xfef\0o\0o\0'
>>
>> but this works
>>
>>      > iconv("foo", to="UTF-16", toRaw=TRUE)
>>      [[1]]
>>      [1] ff fe 66 00 6f 00 6f 00
>>
>> (indeed showing the embedded '\0's)
>>
>>      >> In 2010 a (partial) patch for this problem was submitted:
>>      >> http://tolstoy.newcastle.edu.au/R/e10/devel/10/06/0648.html
>>
>> the patch only related to the iconv() problem not allowing 'raw'
>> (instead of character) argument x.
>>
>> ... and it is > 5.5 years old, for an iconv() version that was less
>> featureful than today.
>> Rather, current iconv(x) allows x to be a list of raw entries.
>>
>>
>>      >> Are there chances to fix this problem since it prevents writing Windows
>>      >> UTF-16LE text files?
>>
>>      >>
>>      >> PS: This problem can be reproduced on Windows and Linux.
>>
>> indeed.... also on "R devel of today".
>>
>> I agree it should be fixed... but as I said not by the patch you
>> mentioned.
>>
>> Tested patches to fix this are welcome, indeed.
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>


From mikko.korpela at aalto.fi  Wed Feb 24 15:55:32 2016
From: mikko.korpela at aalto.fi (Mikko Korpela)
Date: Wed, 24 Feb 2016 16:55:32 +0200
Subject: [Rd] iconv to UTF-16 encoding produces error due to embedded
 nulls (write.table with fileEncoding param)
In-Reply-To: <56CDB45D.2090007@gmail.com>
References: <1455643514.15123.0.camel@i3770> <1456163159.3028.6.camel@i3770>
	<22220.10338.593628.170771@stat.math.ethz.ch>
	<56CC4B39.6010702@aalto.fi> <56CDB45D.2090007@gmail.com>
Message-ID: <56CDC464.6090209@aalto.fi>

On 24.02.2016 15:47, Duncan Murdoch wrote:
> On 23/02/2016 7:06 AM, Mikko Korpela wrote:
>> On 23.02.2016 11:37, Martin Maechler wrote:
>>>>>>>> nospam at altfeld-im de <nospam at altfeld-im.de>
>>>>>>>>      on Mon, 22 Feb 2016 18:45:59 +0100 writes:
>>>
>>>      > Dear R developers
>>>      > I think I have found a bug that can be reproduced with two
>>> lines of code
>>>      > and I am very thankful to get your first assessment or
>>> feed-back on my
>>>      > report.
>>>
>>>      > If this is the wrong mailing list or I did something wrong
>>>      > (e. g. semi "anonymous" email address to protect my privacy
>>> and defend
>>>      > unwanted spam) please let me know since I am new here.
>>>
>>>      > Thank you very much :-)
>>>
>>>      > J. Altfeld
>>>
>>> Dear J.,
>>> (yes, a bit less anonymity would be very welcomed here!),
>>>
>>> You are right, this is a bug, at least in the documentation, but
>>> probably "all real", indeed,
>>>
>>> but read on.
>>>
>>>      > On Tue, 2016-02-16 at 18:25 +0100, nospam at altfeld-im.de wrote:
>>>      >>
>>>      >>
>>>      >> If I execute the code from the "?write.table" examples section
>>>      >>
>>>      >> x <- data.frame(a = I("a \" quote"), b = pi)
>>>      >> # (ommited code)
>>>      >> write.csv(x, file = "foo.csv", fileEncoding = "UTF-16LE")
>>>      >>
>>>      >> the resulting CSV file has a size of 6 bytes which is too short
>>>      >> (truncated):
>>>      >>
>>>      >> """,3
>>>
>>> reproducibly, yes.
>>> If you look at what write.csv does
>>> and then simplify, you can get a similar wrong result by
>>>
>>>    write.table(x, file = "foo.tab", fileEncoding = "UTF-16LE")
>>>
>>> which results in a file with one line
>>>
>>> """ 3
>>>
>>> and if you debug  write.table() you see that its building blocks
>>> here are
>>>      file <- file(........, encoding = fileEncoding)
>>>
>>> a      writeLines(*, file=file)  for the column headers,
>>>
>>> and then "deeper down" C code which I did not investigate.
>>
>> I took a look at connections.c. There is a call to strlen() that gets
>> confused by null characters. I think the obvious fix is to avoid the
>> call to strlen() as the size is already known:
>>
>> Index: src/main/connections.c
>> ===================================================================
>> --- src/main/connections.c    (revision 70213)
>> +++ src/main/connections.c    (working copy)
>> @@ -369,7 +369,7 @@
>>           /* is this safe? */
>>           warning(_("invalid char string in output conversion"));
>>           *ob = '\0';
>> -        con->write(outbuf, 1, strlen(outbuf), con);
>> +        con->write(outbuf, 1, ob - outbuf, con);
>>       } while(again && inb > 0);  /* it seems some iconv signal -1 on
>>                          zero-length input */
>>       } else
>>
>>
>>>
>>> But just looking a bit at such a file() object with writeLines()
>>> seems slightly revealing, as e.g., 'eol' does not seem to
>>> "work" for this encoding:
>>>
>>>      > fn <- tempfile("ffoo"); ff <- file(fn, open="w", encoding =
>>> "UTF-16LE")
>>>      > writeLines(LETTERS[3:1], ff); writeLines("|", ff);
>>> writeLines(">a", ff)
>>>      > close(ff)
>>>      > file.show(fn)
>>>      CBA|>
>>>      > file.size(fn)
>>>      [1] 5
>>>      >
>>
>> With the patch applied:
>>
>>      > readLines(fn, encoding="UTF-16LE", skipNul=TRUE)
>>      [1] "C"  "B"  "A"  "|"  ">a"
>>      > file.size(fn)
>>      [1] 22
> 
> That may be okay on Unix, but it's not enough on Windows.  There the \n
> that writeLines adds at the end of each line isn't translated to
> UTF-16LE properly, so things get messed up.  (I think the \n is
> translated, but the \r that Windows wants is not, so you get a mix of 8
> bit and 16 bit characters.)

That's unfortunate. I tested my tiny patch on Linux. I don't know what
kind of additional changes would be needed to make this work on Windows.

-- 
Mikko Korpela
Aalto University School of Science
Department of Computer Science


From suharto_anggono at yahoo.com  Wed Feb 24 17:14:24 2016
From: suharto_anggono at yahoo.com (Suharto Anggono Suharto Anggono)
Date: Wed, 24 Feb 2016 16:14:24 +0000 (UTC)
Subject: [Rd] On recent change to 'prettyDate'
References: <1998406394.1859870.1456330464398.JavaMail.yahoo.ref@mail.yahoo.com>
Message-ID: <1998406394.1859870.1456330464398.JavaMail.yahoo@mail.yahoo.com>

A news entry for R 3.2.3 patched:
pretty(D) for date-time objects D now also works well if range(D) is (much) smaller than a second. In the case of only one unique value in D, the pretty range now is more symmetric around that value than previously. 
Similarly, pretty(dt) no longer returns a length 5 vector with duplicated entries for Date objects dt which span only a few days.

Looking at function 'prettyDate' in https://svn.r-project.org/R/trunk/src/library/grDevices/R/prettyDate.R, the early return part (if(isDate && D <= n * 24*3600)) is not quite right:
- The result doesn't have attribute "labels".
Help on 'pretty.Date', "Value":
A vector (of the suitable class) of locations, with attribute ?"labels"? giving corresponding formatted character labels.
- Argument 'min.n' is not respected.

Regarding 'min.n', I think min.n > n should be an error, as in 'pretty.default'.


From murdoch.duncan at gmail.com  Wed Feb 24 17:16:12 2016
From: murdoch.duncan at gmail.com (Duncan Murdoch)
Date: Wed, 24 Feb 2016 11:16:12 -0500
Subject: [Rd] iconv to UTF-16 encoding produces error due to embedded
 nulls (write.table with fileEncoding param)
In-Reply-To: <56CDC464.6090209@aalto.fi>
References: <1455643514.15123.0.camel@i3770> <1456163159.3028.6.camel@i3770>
	<22220.10338.593628.170771@stat.math.ethz.ch>
	<56CC4B39.6010702@aalto.fi>
	<56CDB45D.2090007@gmail.com> <56CDC464.6090209@aalto.fi>
Message-ID: <56CDD74C.30608@gmail.com>

On 24/02/2016 9:55 AM, Mikko Korpela wrote:
> On 24.02.2016 15:47, Duncan Murdoch wrote:
>> On 23/02/2016 7:06 AM, Mikko Korpela wrote:
>>> On 23.02.2016 11:37, Martin Maechler wrote:
>>>>>>>>> nospam at altfeld-im de <nospam at altfeld-im.de>
>>>>>>>>>       on Mon, 22 Feb 2016 18:45:59 +0100 writes:
>>>>
>>>>       > Dear R developers
>>>>       > I think I have found a bug that can be reproduced with two
>>>> lines of code
>>>>       > and I am very thankful to get your first assessment or
>>>> feed-back on my
>>>>       > report.
>>>>
>>>>       > If this is the wrong mailing list or I did something wrong
>>>>       > (e. g. semi "anonymous" email address to protect my privacy
>>>> and defend
>>>>       > unwanted spam) please let me know since I am new here.
>>>>
>>>>       > Thank you very much :-)
>>>>
>>>>       > J. Altfeld
>>>>
>>>> Dear J.,
>>>> (yes, a bit less anonymity would be very welcomed here!),
>>>>
>>>> You are right, this is a bug, at least in the documentation, but
>>>> probably "all real", indeed,
>>>>
>>>> but read on.
>>>>
>>>>       > On Tue, 2016-02-16 at 18:25 +0100, nospam at altfeld-im.de wrote:
>>>>       >>
>>>>       >>
>>>>       >> If I execute the code from the "?write.table" examples section
>>>>       >>
>>>>       >> x <- data.frame(a = I("a \" quote"), b = pi)
>>>>       >> # (ommited code)
>>>>       >> write.csv(x, file = "foo.csv", fileEncoding = "UTF-16LE")
>>>>       >>
>>>>       >> the resulting CSV file has a size of 6 bytes which is too short
>>>>       >> (truncated):
>>>>       >>
>>>>       >> """,3
>>>>
>>>> reproducibly, yes.
>>>> If you look at what write.csv does
>>>> and then simplify, you can get a similar wrong result by
>>>>
>>>>     write.table(x, file = "foo.tab", fileEncoding = "UTF-16LE")
>>>>
>>>> which results in a file with one line
>>>>
>>>> """ 3
>>>>
>>>> and if you debug  write.table() you see that its building blocks
>>>> here are
>>>>       file <- file(........, encoding = fileEncoding)
>>>>
>>>> a      writeLines(*, file=file)  for the column headers,
>>>>
>>>> and then "deeper down" C code which I did not investigate.
>>>
>>> I took a look at connections.c. There is a call to strlen() that gets
>>> confused by null characters. I think the obvious fix is to avoid the
>>> call to strlen() as the size is already known:
>>>
>>> Index: src/main/connections.c
>>> ===================================================================
>>> --- src/main/connections.c    (revision 70213)
>>> +++ src/main/connections.c    (working copy)
>>> @@ -369,7 +369,7 @@
>>>            /* is this safe? */
>>>            warning(_("invalid char string in output conversion"));
>>>            *ob = '\0';
>>> -        con->write(outbuf, 1, strlen(outbuf), con);
>>> +        con->write(outbuf, 1, ob - outbuf, con);
>>>        } while(again && inb > 0);  /* it seems some iconv signal -1 on
>>>                           zero-length input */
>>>        } else
>>>
>>>
>>>>
>>>> But just looking a bit at such a file() object with writeLines()
>>>> seems slightly revealing, as e.g., 'eol' does not seem to
>>>> "work" for this encoding:
>>>>
>>>>       > fn <- tempfile("ffoo"); ff <- file(fn, open="w", encoding =
>>>> "UTF-16LE")
>>>>       > writeLines(LETTERS[3:1], ff); writeLines("|", ff);
>>>> writeLines(">a", ff)
>>>>       > close(ff)
>>>>       > file.show(fn)
>>>>       CBA|>
>>>>       > file.size(fn)
>>>>       [1] 5
>>>>       >
>>>
>>> With the patch applied:
>>>
>>>       > readLines(fn, encoding="UTF-16LE", skipNul=TRUE)
>>>       [1] "C"  "B"  "A"  "|"  ">a"
>>>       > file.size(fn)
>>>       [1] 22
>>
>> That may be okay on Unix, but it's not enough on Windows.  There the \n
>> that writeLines adds at the end of each line isn't translated to
>> UTF-16LE properly, so things get messed up.  (I think the \n is
>> translated, but the \r that Windows wants is not, so you get a mix of 8
>> bit and 16 bit characters.)
>
> That's unfortunate. I tested my tiny patch on Linux. I don't know what
> kind of additional changes would be needed to make this work on Windows.
>

It looks like a big change is needed for a perfect solution:

  - Windows does the translation of \n to \r\n.  In the R code, Windows 
is never told that the output is UTF-16LE, so it does an 8 bit translation.

  - Telling Windows that output is UTF-16LE looks hard:  we'd need to
convert the string to wide chars in R, then write it in wide chars. 
This seems like a lot of work for a rare case.

  - It might be easier to do a hack:  if the user asks for "UTF-16LE", 
then treat it internally as a text file but tell Windows it's a binary 
file.  This means no \n to \r\n translation will be done by Windows.  If 
the desired output file needs Windows line endings, the user would have 
to specify sep="\r\n" in writeLines.

Duncan Murdoch


From suharto_anggono at yahoo.com  Wed Feb 24 17:40:53 2016
From: suharto_anggono at yahoo.com (Suharto Anggono Suharto Anggono)
Date: Wed, 24 Feb 2016 16:40:53 +0000 (UTC)
Subject: [Rd] %OS on output
References: <2092113649.1876381.1456332053631.JavaMail.yahoo.ref@mail.yahoo.com>
Message-ID: <2092113649.1876381.1456332053631.JavaMail.yahoo@mail.yahoo.com>

R help on 'strptime' has the following in "Details" section.
Specific to R is ?%OSn?, which for output gives the seconds truncated to ?0 <= n <= 6? decimal places (and if ?%OS? is not followed by a digit, it uses the setting of ?getOption("digits.secs")?, or if that is unset, ?n = 3?).

In reality, for output, if '%OS' is not followed by a digit and getOption("digits.secs") is unset, the output has no fractional part, as if n = 0 is used.

> getOption("digits.secs")
NULL
> z <- strptime("20/2/06 11:16:16.683", "%d/%m/%y %H:%M:%OS")
> format(z, "%OS")
[1] "16"


From josh.m.ulrich at gmail.com  Wed Feb 24 18:02:29 2016
From: josh.m.ulrich at gmail.com (Joshua Ulrich)
Date: Wed, 24 Feb 2016 11:02:29 -0600
Subject: [Rd] %OS on output
In-Reply-To: <2092113649.1876381.1456332053631.JavaMail.yahoo@mail.yahoo.com>
References: <2092113649.1876381.1456332053631.JavaMail.yahoo.ref@mail.yahoo.com>
	<2092113649.1876381.1456332053631.JavaMail.yahoo@mail.yahoo.com>
Message-ID: <CAPPM_gTU-6D2nEc0AkU0Q_hCyhMqofz5sNEH0ngf0GXAx9NvNQ@mail.gmail.com>

On Wed, Feb 24, 2016 at 10:40 AM, Suharto Anggono Suharto Anggono via
R-devel <r-devel at r-project.org> wrote:
> R help on 'strptime' has the following in "Details" section.
> Specific to R is ?%OSn?, which for output gives the seconds truncated to ?0 <= n <= 6? decimal places (and if ?%OS? is not followed by a digit, it uses the setting of ?getOption("digits.secs")?, or if that is unset, ?n = 3?).
>
> In reality, for output, if '%OS' is not followed by a digit and getOption("digits.secs") is unset, the output has no fractional part, as if n = 0 is used.
>
That's because n = 0 _is_ used, and appears to have always been the
default (since the logic was added in r37395).  So this appears to be
a typo in the documentation (the comment about "n=3" when digits.secs
is unset was added in r37439).

>> getOption("digits.secs")
> NULL
>> z <- strptime("20/2/06 11:16:16.683", "%d/%m/%y %H:%M:%OS")
>> format(z, "%OS")
> [1] "16"
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel



-- 
Joshua Ulrich  |  about.me/joshuaulrich
FOSS Trading  |  www.fosstrading.com
R/Finance 2016 | www.rinfinance.com


From murdoch.duncan at gmail.com  Wed Feb 24 21:49:58 2016
From: murdoch.duncan at gmail.com (Duncan Murdoch)
Date: Wed, 24 Feb 2016 15:49:58 -0500
Subject: [Rd] iconv to UTF-16 encoding produces error due to embedded
 nulls (write.table with fileEncoding param)
In-Reply-To: <56CDD74C.30608@gmail.com>
References: <1455643514.15123.0.camel@i3770> <1456163159.3028.6.camel@i3770>
	<22220.10338.593628.170771@stat.math.ethz.ch>
	<56CC4B39.6010702@aalto.fi>
	<56CDB45D.2090007@gmail.com> <56CDC464.6090209@aalto.fi>
	<56CDD74C.30608@gmail.com>
Message-ID: <56CE1776.6000200@gmail.com>

On 24/02/2016 11:16 AM, Duncan Murdoch wrote:
> On 24/02/2016 9:55 AM, Mikko Korpela wrote:
>> On 24.02.2016 15:47, Duncan Murdoch wrote:
>>> On 23/02/2016 7:06 AM, Mikko Korpela wrote:
>>>> On 23.02.2016 11:37, Martin Maechler wrote:
>>>>>>>>>> nospam at altfeld-im de <nospam at altfeld-im.de>
>>>>>>>>>>        on Mon, 22 Feb 2016 18:45:59 +0100 writes:
>>>>>
>>>>>        > Dear R developers
>>>>>        > I think I have found a bug that can be reproduced with two
>>>>> lines of code
>>>>>        > and I am very thankful to get your first assessment or
>>>>> feed-back on my
>>>>>        > report.
>>>>>
>>>>>        > If this is the wrong mailing list or I did something wrong
>>>>>        > (e. g. semi "anonymous" email address to protect my privacy
>>>>> and defend
>>>>>        > unwanted spam) please let me know since I am new here.
>>>>>
>>>>>        > Thank you very much :-)
>>>>>
>>>>>        > J. Altfeld
>>>>>
>>>>> Dear J.,
>>>>> (yes, a bit less anonymity would be very welcomed here!),
>>>>>
>>>>> You are right, this is a bug, at least in the documentation, but
>>>>> probably "all real", indeed,
>>>>>
>>>>> but read on.
>>>>>
>>>>>        > On Tue, 2016-02-16 at 18:25 +0100, nospam at altfeld-im.de wrote:
>>>>>        >>
>>>>>        >>
>>>>>        >> If I execute the code from the "?write.table" examples section
>>>>>        >>
>>>>>        >> x <- data.frame(a = I("a \" quote"), b = pi)
>>>>>        >> # (ommited code)
>>>>>        >> write.csv(x, file = "foo.csv", fileEncoding = "UTF-16LE")
>>>>>        >>
>>>>>        >> the resulting CSV file has a size of 6 bytes which is too short
>>>>>        >> (truncated):
>>>>>        >>
>>>>>        >> """,3
>>>>>
>>>>> reproducibly, yes.
>>>>> If you look at what write.csv does
>>>>> and then simplify, you can get a similar wrong result by
>>>>>
>>>>>      write.table(x, file = "foo.tab", fileEncoding = "UTF-16LE")
>>>>>
>>>>> which results in a file with one line
>>>>>
>>>>> """ 3
>>>>>
>>>>> and if you debug  write.table() you see that its building blocks
>>>>> here are
>>>>>        file <- file(........, encoding = fileEncoding)
>>>>>
>>>>> a      writeLines(*, file=file)  for the column headers,
>>>>>
>>>>> and then "deeper down" C code which I did not investigate.
>>>>
>>>> I took a look at connections.c. There is a call to strlen() that gets
>>>> confused by null characters. I think the obvious fix is to avoid the
>>>> call to strlen() as the size is already known:
>>>>
>>>> Index: src/main/connections.c
>>>> ===================================================================
>>>> --- src/main/connections.c    (revision 70213)
>>>> +++ src/main/connections.c    (working copy)
>>>> @@ -369,7 +369,7 @@
>>>>             /* is this safe? */
>>>>             warning(_("invalid char string in output conversion"));
>>>>             *ob = '\0';
>>>> -        con->write(outbuf, 1, strlen(outbuf), con);
>>>> +        con->write(outbuf, 1, ob - outbuf, con);
>>>>         } while(again && inb > 0);  /* it seems some iconv signal -1 on
>>>>                            zero-length input */
>>>>         } else
>>>>
>>>>
>>>>>
>>>>> But just looking a bit at such a file() object with writeLines()
>>>>> seems slightly revealing, as e.g., 'eol' does not seem to
>>>>> "work" for this encoding:
>>>>>
>>>>>        > fn <- tempfile("ffoo"); ff <- file(fn, open="w", encoding =
>>>>> "UTF-16LE")
>>>>>        > writeLines(LETTERS[3:1], ff); writeLines("|", ff);
>>>>> writeLines(">a", ff)
>>>>>        > close(ff)
>>>>>        > file.show(fn)
>>>>>        CBA|>
>>>>>        > file.size(fn)
>>>>>        [1] 5
>>>>>        >
>>>>
>>>> With the patch applied:
>>>>
>>>>        > readLines(fn, encoding="UTF-16LE", skipNul=TRUE)
>>>>        [1] "C"  "B"  "A"  "|"  ">a"
>>>>        > file.size(fn)
>>>>        [1] 22
>>>
>>> That may be okay on Unix, but it's not enough on Windows.  There the \n
>>> that writeLines adds at the end of each line isn't translated to
>>> UTF-16LE properly, so things get messed up.  (I think the \n is
>>> translated, but the \r that Windows wants is not, so you get a mix of 8
>>> bit and 16 bit characters.)
>>
>> That's unfortunate. I tested my tiny patch on Linux. I don't know what
>> kind of additional changes would be needed to make this work on Windows.
>>
>
> It looks like a big change is needed for a perfect solution:
>
>    - Windows does the translation of \n to \r\n.  In the R code, Windows
> is never told that the output is UTF-16LE, so it does an 8 bit translation.
>
>    - Telling Windows that output is UTF-16LE looks hard:  we'd need to
> convert the string to wide chars in R, then write it in wide chars.
> This seems like a lot of work for a rare case.
>
>    - It might be easier to do a hack:  if the user asks for "UTF-16LE",
> then treat it internally as a text file but tell Windows it's a binary
> file.  This means no \n to \r\n translation will be done by Windows.  If
> the desired output file needs Windows line endings, the user would have
> to specify sep="\r\n" in writeLines.

A third possibility is to handle the insertion of the \r completely 
within R.  This will have the advantage of making it optional, so it 
would be a lot easier to write a Unix-style file on Windows.

I think either the first or third possibilities will take too much time 
for me to attempt them before 3.3.0.  I'm not sure about the second one yet.

Duncan Murdoch


From mikko.korpela at aalto.fi  Thu Feb 25 10:31:50 2016
From: mikko.korpela at aalto.fi (Mikko Korpela)
Date: Thu, 25 Feb 2016 11:31:50 +0200
Subject: [Rd] iconv to UTF-16 encoding produces error due to embedded
 nulls (write.table with fileEncoding param)
In-Reply-To: <56CC4B39.6010702@aalto.fi>
References: <1455643514.15123.0.camel@i3770> <1456163159.3028.6.camel@i3770>
	<22220.10338.593628.170771@stat.math.ethz.ch>
	<56CC4B39.6010702@aalto.fi>
Message-ID: <56CECA06.1060803@aalto.fi>

On 23.02.2016 14:06, Mikko Korpela wrote:
> On 23.02.2016 11:37, Martin Maechler wrote:
>>>>>>> nospam at altfeld-im de <nospam at altfeld-im.de>
>>>>>>>     on Mon, 22 Feb 2016 18:45:59 +0100 writes:
>>
>>     > Dear R developers
>>     > I think I have found a bug that can be reproduced with two lines of code
>>     > and I am very thankful to get your first assessment or feed-back on my
>>     > report.
>>
>>     > If this is the wrong mailing list or I did something wrong
>>     > (e. g. semi "anonymous" email address to protect my privacy and defend
>>     > unwanted spam) please let me know since I am new here.
>>
>>     > Thank you very much :-)
>>
>>     > J. Altfeld
>>
>> Dear J.,
>> (yes, a bit less anonymity would be very welcomed here!),
>>
>> You are right, this is a bug, at least in the documentation, but
>> probably "all real", indeed,
>>
>> but read on.
>>
>>     > On Tue, 2016-02-16 at 18:25 +0100, nospam at altfeld-im.de wrote:
>>     >> 
>>     >> 
>>     >> If I execute the code from the "?write.table" examples section
>>     >> 
>>     >> x <- data.frame(a = I("a \" quote"), b = pi)
>>     >> # (ommited code)
>>     >> write.csv(x, file = "foo.csv", fileEncoding = "UTF-16LE")
>>     >> 
>>     >> the resulting CSV file has a size of 6 bytes which is too short
>>     >> (truncated):
>>     >> 
>>     >> """,3
>>
>> reproducibly, yes.
>> If you look at what write.csv does
>> and then simplify, you can get a similar wrong result by
>>
>>   write.table(x, file = "foo.tab", fileEncoding = "UTF-16LE")
>>
>> which results in a file with one line
>>
>> """ 3
>>
>> and if you debug  write.table() you see that its building blocks
>> here are
>> 	 file <- file(........, encoding = fileEncoding)
>>
>> a 	 writeLines(*, file=file)  for the column headers,
>>
>> and then "deeper down" C code which I did not investigate.
> 
> I took a look at connections.c. There is a call to strlen() that gets
> confused by null characters. I think the obvious fix is to avoid the
> call to strlen() as the size is already known:
> 
> Index: src/main/connections.c
> ===================================================================
> --- src/main/connections.c	(revision 70213)
> +++ src/main/connections.c	(working copy)
> @@ -369,7 +369,7 @@
>  		/* is this safe? */
>  		warning(_("invalid char string in output conversion"));
>  	    *ob = '\0';
> -	    con->write(outbuf, 1, strlen(outbuf), con);
> +	    con->write(outbuf, 1, ob - outbuf, con);
>  	} while(again && inb > 0);  /* it seems some iconv signal -1 on
>  				       zero-length input */
>      } else
> 
> 
>>
>> But just looking a bit at such a file() object with writeLines()
>> seems slightly revealing, as e.g., 'eol' does not seem to
>> "work" for this encoding:
>>
>>     > fn <- tempfile("ffoo"); ff <- file(fn, open="w", encoding = "UTF-16LE")
>>     > writeLines(LETTERS[3:1], ff); writeLines("|", ff); writeLines(">a", ff)
>>     > close(ff)
>>     > file.show(fn)
>>     CBA|>
>>     > file.size(fn)
>>     [1] 5
>>     > 
> 
> With the patch applied:
> 
>     > readLines(fn, encoding="UTF-16LE", skipNul=TRUE)
>     [1] "C"  "B"  "A"  "|"  ">a"
>     > file.size(fn)
>     [1] 22
I just realized that I was misusing the encoding argument of
readLines(). The code above works by accident, but the following would
be more appropriate:

    > ff <- file(fn, open="r", encoding="UTF-16LE")
    > readLines(ff)
    [1] "C"  "B"  "A"  "|"  ">a"
    > close(ff)

Testing on Linux, with the patch applied. (As noted by Duncan Murdoch,
the patch is incomplete on Windows.)

- Mikko


From pdalgd at gmail.com  Thu Feb 25 10:49:35 2016
From: pdalgd at gmail.com (peter dalgaard)
Date: Thu, 25 Feb 2016 10:49:35 +0100
Subject: [Rd] iconv to UTF-16 encoding produces error due to embedded
	nulls (write.table with fileEncoding param)
In-Reply-To: <56CE1776.6000200@gmail.com>
References: <1455643514.15123.0.camel@i3770> <1456163159.3028.6.camel@i3770>
	<22220.10338.593628.170771@stat.math.ethz.ch>
	<56CC4B39.6010702@aalto.fi> <56CDB45D.2090007@gmail.com>
	<56CDC464.6090209@aalto.fi> <56CDD74C.30608@gmail.com>
	<56CE1776.6000200@gmail.com>
Message-ID: <B4F317EC-FC5C-43BE-9821-D4543206BEE5@gmail.com>

Aim for 3.3.1 then? It's not like we have hordes of people demanding to have this fixed right here and now, or do we? 

(A practical problem is that the version control dynamics dictate that at this stage, commits to r-devel _will_ end up in 3.3.0 on April 14, unless backed out and then inserted in the new r-devel branch to be created on March 17.) 

- Peter


On 24 Feb 2016, at 21:49 , Duncan Murdoch <murdoch.duncan at gmail.com> wrote:

> On 24/02/2016 11:16 AM, Duncan Murdoch wrote:
>> On 24/02/2016 9:55 AM, Mikko Korpela wrote:
>>>> 
[...]
>>> 
>>> That's unfortunate. I tested my tiny patch on Linux. I don't know what
>>> kind of additional changes would be needed to make this work on Windows.
>>> 
>> 
>> It looks like a big change is needed for a perfect solution:
>> 
>>   - Windows does the translation of \n to \r\n.  In the R code, Windows
>> is never told that the output is UTF-16LE, so it does an 8 bit translation.
>> 
>>   - Telling Windows that output is UTF-16LE looks hard:  we'd need to
>> convert the string to wide chars in R, then write it in wide chars.
>> This seems like a lot of work for a rare case.
>> 
>>   - It might be easier to do a hack:  if the user asks for "UTF-16LE",
>> then treat it internally as a text file but tell Windows it's a binary
>> file.  This means no \n to \r\n translation will be done by Windows.  If
>> the desired output file needs Windows line endings, the user would have
>> to specify sep="\r\n" in writeLines.
> 
> A third possibility is to handle the insertion of the \r completely within R.  This will have the advantage of making it optional, so it would be a lot easier to write a Unix-style file on Windows.
> 
> I think either the first or third possibilities will take too much time for me to attempt them before 3.3.0.  I'm not sure about the second one yet.
> 
> Duncan Murdoch
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel

-- 
Peter Dalgaard, Professor,
Center for Statistics, Copenhagen Business School
Solbjerg Plads 3, 2000 Frederiksberg, Denmark
Phone: (+45)38153501
Office: A 4.23
Email: pd.mes at cbs.dk  Priv: PDalgd at gmail.com


From mikko.korpela at aalto.fi  Thu Feb 25 11:54:56 2016
From: mikko.korpela at aalto.fi (Mikko Korpela)
Date: Thu, 25 Feb 2016 12:54:56 +0200
Subject: [Rd] iconv to UTF-16 encoding produces error due to embedded
 nulls (write.table with fileEncoding param)
In-Reply-To: <56CECA06.1060803@aalto.fi>
References: <1455643514.15123.0.camel@i3770> <1456163159.3028.6.camel@i3770>
	<22220.10338.593628.170771@stat.math.ethz.ch>
	<56CC4B39.6010702@aalto.fi> <56CECA06.1060803@aalto.fi>
Message-ID: <56CEDD80.6080705@aalto.fi>

On 25.02.2016 11:31, Mikko Korpela wrote:
> On 23.02.2016 14:06, Mikko Korpela wrote:
>> On 23.02.2016 11:37, Martin Maechler wrote:
>>>>>>>> nospam at altfeld-im de <nospam at altfeld-im.de>
>>>>>>>>     on Mon, 22 Feb 2016 18:45:59 +0100 writes:
>>>
>>>     > Dear R developers
>>>     > I think I have found a bug that can be reproduced with two lines of code
>>>     > and I am very thankful to get your first assessment or feed-back on my
>>>     > report.
>>>
>>>     > If this is the wrong mailing list or I did something wrong
>>>     > (e. g. semi "anonymous" email address to protect my privacy and defend
>>>     > unwanted spam) please let me know since I am new here.
>>>
>>>     > Thank you very much :-)
>>>
>>>     > J. Altfeld
>>>
>>> Dear J.,
>>> (yes, a bit less anonymity would be very welcomed here!),
>>>
>>> You are right, this is a bug, at least in the documentation, but
>>> probably "all real", indeed,
>>>
>>> but read on.
>>>
>>>     > On Tue, 2016-02-16 at 18:25 +0100, nospam at altfeld-im.de wrote:
>>>     >> 
>>>     >> 
>>>     >> If I execute the code from the "?write.table" examples section
>>>     >> 
>>>     >> x <- data.frame(a = I("a \" quote"), b = pi)
>>>     >> # (ommited code)
>>>     >> write.csv(x, file = "foo.csv", fileEncoding = "UTF-16LE")
>>>     >> 
>>>     >> the resulting CSV file has a size of 6 bytes which is too short
>>>     >> (truncated):
>>>     >> 
>>>     >> """,3
>>>
>>> reproducibly, yes.
>>> If you look at what write.csv does
>>> and then simplify, you can get a similar wrong result by
>>>
>>>   write.table(x, file = "foo.tab", fileEncoding = "UTF-16LE")
>>>
>>> which results in a file with one line
>>>
>>> """ 3
>>>
>>> and if you debug  write.table() you see that its building blocks
>>> here are
>>> 	 file <- file(........, encoding = fileEncoding)
>>>
>>> a 	 writeLines(*, file=file)  for the column headers,
>>>
>>> and then "deeper down" C code which I did not investigate.
>>
>> I took a look at connections.c. There is a call to strlen() that gets
>> confused by null characters. I think the obvious fix is to avoid the
>> call to strlen() as the size is already known:
>>
>> Index: src/main/connections.c
>> ===================================================================
>> --- src/main/connections.c	(revision 70213)
>> +++ src/main/connections.c	(working copy)
>> @@ -369,7 +369,7 @@
>>  		/* is this safe? */
>>  		warning(_("invalid char string in output conversion"));
>>  	    *ob = '\0';
>> -	    con->write(outbuf, 1, strlen(outbuf), con);
>> +	    con->write(outbuf, 1, ob - outbuf, con);
>>  	} while(again && inb > 0);  /* it seems some iconv signal -1 on
>>  				       zero-length input */
>>      } else
>>
>>
>>>
>>> But just looking a bit at such a file() object with writeLines()
>>> seems slightly revealing, as e.g., 'eol' does not seem to
>>> "work" for this encoding:
>>>
>>>     > fn <- tempfile("ffoo"); ff <- file(fn, open="w", encoding = "UTF-16LE")
>>>     > writeLines(LETTERS[3:1], ff); writeLines("|", ff); writeLines(">a", ff)
>>>     > close(ff)
>>>     > file.show(fn)
>>>     CBA|>
>>>     > file.size(fn)
>>>     [1] 5
>>>     > 
>>
>> With the patch applied:
>>
>>     > readLines(fn, encoding="UTF-16LE", skipNul=TRUE)
>>     [1] "C"  "B"  "A"  "|"  ">a"
>>     > file.size(fn)
>>     [1] 22
> I just realized that I was misusing the encoding argument of
> readLines(). The code above works by accident, but the following would
> be more appropriate:
> 
>     > ff <- file(fn, open="r", encoding="UTF-16LE")
>     > readLines(ff)
>     [1] "C"  "B"  "A"  "|"  ">a"
>     > close(ff)
> 
> Testing on Linux, with the patch applied. (As noted by Duncan Murdoch,
> the patch is incomplete on Windows.)
Before inspecting the file with readLines() I tried file.show() but it
did not work as expected. On Linux using a UTF-8 locale, the result of
trying to show the truly UTF-16LE encoded file with

    > file.show(fn, encoding="UTF-16LE")

was a pager showing "<43>" (quotes not included) followed by several
empty lines.

With the following patch, the command works correctly (in this case, on
this platform, not tested comprehensively). The idea is to read the
input file "raw" in order to avoid problems with null characters. The
input then needs to be split into lines after iconv(), or it could be
written to the output file with cat() if the style of line termination
characters does not matter. The 'perl = TRUE' is for assumed performance
advantage only. It can be removed, or one might want to test if there is
a significant difference one way or the other.

- Mikko

Index: src/library/base/R/files.R
===================================================================
--- src/library/base/R/files.R	(revision 70217)
+++ src/library/base/R/files.R	(working copy)
@@ -50,10 +50,13 @@
         for(i in seq_along(files)) {
             f <- files[i]
             tf <- tempfile()
-            tmp <- readLines(f, warn = FALSE)
+            tmp <- list(readBin(f, "raw", file.size(f)))
             tmp2 <- try(iconv(tmp, encoding, "", "byte"))
             if(inherits(tmp2, "try-error")) file.copy(f, tf)
-            else writeLines(tmp2, tf)
+            else {
+                tmp2 <- strsplit(tmp2, "\r\n?|\n", perl = TRUE)[[1L]]
+                writeLines(tmp2, tf)
+            }
             files[i] <- tf
             if(delete.file) unlink(f)
         }


From csardi.gabor at gmail.com  Thu Feb 25 11:40:04 2016
From: csardi.gabor at gmail.com (=?UTF-8?B?R8OhYm9yIENzw6FyZGk=?=)
Date: Thu, 25 Feb 2016 10:40:04 +0000
Subject: [Rd] Two ideas / feature requests for R CMD check
Message-ID: <CABtg=Kk0gUswZ6+p0Bm-=B1CNKeLDBaUZPavyC5uEZ1wvygM4g@mail.gmail.com>

We all love R CMD check. :) In my opinion it would be even better if
it had options to

- Run all checks, even if one fails with an error. I realize this
sometimes might not make sense (e.g. if there is no DESCRIPTION file),
but often does.

- Run all examples even if an example fails. I think it would be great
to get all failing examples at once, so that a package author can
estimate the amount of breakage.

Thank you for considering there,
Gabor


From ken.sensei at gmail.com  Thu Feb 25 17:14:46 2016
From: ken.sensei at gmail.com (Mohit Dayal)
Date: Thu, 25 Feb 2016 11:14:46 -0500
Subject: [Rd] Fwd:  Two ideas / feature requests for R CMD check
In-Reply-To: <CABtg=Kk0gUswZ6+p0Bm-=B1CNKeLDBaUZPavyC5uEZ1wvygM4g@mail.gmail.com>
References: <CABtg=Kk0gUswZ6+p0Bm-=B1CNKeLDBaUZPavyC5uEZ1wvygM4g@mail.gmail.com>
Message-ID: <CAJ1ju9uc5ZPSpDo6G9fp-8=C4h4eCPZEMV4x7zehBahLr-qc_w@mail.gmail.com>

Hi All,

One thing that I've encountered with R CMD check is that if your package
uses some functions from a base package, then the corresponding NAMESPACE
imports do not seem to be automatically suggested. It might possibly an
issue with how one's system is configured, but say, with the --as-cran
switch this thing should be picked up on.

Like I felt this was something else that could be looked into :)

Thanks!
Mohit
------
mohitdayal.strikingly.com


---------- Forwarded message ----------
From: G?bor Cs?rdi <csardi.gabor at gmail.com>
Date: 25 February 2016 at 05:40
Subject: [Rd] Two ideas / feature requests for R CMD check
To: "r-devel at r-project.org" <r-devel at r-project.org>


We all love R CMD check. :) In my opinion it would be even better if
it had options to

- Run all checks, even if one fails with an error. I realize this
sometimes might not make sense (e.g. if there is no DESCRIPTION file),
but often does.

- Run all examples even if an example fails. I think it would be great
to get all failing examples at once, so that a package author can
estimate the amount of breakage.

Thank you for considering there,
Gabor

______________________________________________
R-devel at r-project.org mailing list
https://stat.ethz.ch/mailman/listinfo/r-devel

	[[alternative HTML version deleted]]


From pdalgd at gmail.com  Thu Feb 25 20:04:40 2016
From: pdalgd at gmail.com (peter dalgaard)
Date: Thu, 25 Feb 2016 20:04:40 +0100
Subject: [Rd] problem submitting R bug;
	bug plotting in tiling window manager
In-Reply-To: <20160208173416.GA23786@ofb.net>
References: <20160206002635.GA27075@ofb.net> <56B54A2C.10807@stats.uwo.ca>
	<20160206030756.GB27075@ofb.net> <56B5A815.4050908@gmail.com>
	<20160206232544.GA23008@ofb.net>
	<7043972C-6962-45C3-B8D6-EB2C1912857A@gmail.com>
	<20160208173416.GA23786@ofb.net>
Message-ID: <7E6770ED-7841-484F-9063-00020DA89B18@gmail.com>

In case you still care, see 

https://bugs.r-project.org/bugzilla/show_bug.cgi?id=16726

which even our very human spam detector hasn't decided to label as spam (yet).

-pd

> On 08 Feb 2016, at 18:34 , frederik at ofb.net wrote:
> 
> Ah, thank you for that explanation. I somehow didn't catch that my
> Bugzilla account had been disabled by a human.
> 
> "Common pattern is to post ... something copied from a generic bug
> report" - that sounds very annoying.
> 
> Frederick
> 
> On Sun, Feb 07, 2016 at 11:54:11AM +0100, peter dalgaard wrote:
>> Unfortunately, the spammers in question appear to be human (of sorts). 
>> 
>> We're not sure what they're up to, but a common pattern is to post random text, or something copied from a generic bug report (like "able to add 6 item"), later followed by a comment containing a link or a file attachment. 
>> 
>> Presumably, it is some sort of click-bait scheme, but it could also be a covert channel for contrabande files. At any rate, it is very hard to distinguish by mechanical means. So it is done by eye, with some risk of Type-I error. Thus, the Bugzilla maintainers are pretty vigilant to stamp out spammers, sometimes edging on being ham-fisted (er, -footed?).
>> 
>> -pd
>> 
>> 
>>> On 07 Feb 2016, at 00:25 , frederik at ofb.net wrote:
>>> 
>>> No problem.
>>> 
>>> Another suggestion would be to simply validate user input like most
>>> websites, and reject invalid submissions immediately, rather than
>>> blocking the user's account. I don't know what kind of spambots you
>>> are up against, but unless they are very intelligent I doubt they'll
>>> be able to understand a message like "You submitted a bug with no body
>>> text, please enter something and try again." There may also be the
>>> option of using Captchas.
>>> 
>>> Not sure how hard it is to get Bugzilla to do these things.
>>> 
>>> Thanks,
>>> 
>>> Frederick
>>> 
>>> P.S. (I now see that all errors on the bug tracker are displayed with
>>> a red background)
>>> 
>>> On Sat, Feb 06, 2016 at 03:00:21AM -0500, Duncan Murdoch wrote:
>>>> Thanks for the suggestions.
>>>> 
>>>> Duncan Murdoch
>>>> 
>>>> On 05/02/2016 10:07 PM, frederik at ofb.net wrote:
>>>>> Hi Duncan Murdoch,
>>>>> 
>>>>> Thanks for your time. I apologize for not telling you that my email
>>>>> address on the bug tracker is slightly different -
>>>>> "frederik-rproject at ofb.net" vs "frederik at ofb.net". I was going to
>>>>> follow up with this information, but then I thought, he probably knows
>>>>> how to find a tagged email address.
>>>>> 
>>>>> I do hope that you are able to fix the bug tracker. In particular,
>>>>> people should be made aware that their account is blocked before being
>>>>> invited to submit a bug. The error they get should be less rude - no
>>>>> need to make it red - and the email address in the error should be
>>>>> filled in. You complained about wasting time having to look for my
>>>>> email address - well, I wasted time looking for yours. The error
>>>>> message could even hint at what triggered the ban. I don't think that
>>>>> you're going to get very far by trying to scare off actual spammers
>>>>> with a big red accusation - I imagine they all have pretty thick skin.
>>>>> 
>>>>> Reading the first line of my bug report was generous of you, but if
>>>>> you read the rest, you'll see that, indeed, after checking with the
>>>>> knowledgeable i3 guys, it appears to be an R bug. So I would like to
>>>>> submit it. What appears at the top of my bug report is a copy of the
>>>>> original bug I posted to i3, at the linked URL (are links OK or will I
>>>>> get banned again?).
>>>>> 
>>>>> The reason a bug appeared with the subject "til" is because I noticed
>>>>> that when typing into the subject field, some "related bugs" come up.
>>>>> However, this "suggestion" process appeared to be stalled when I typed
>>>>> "til" (for "tiling" or "tilable"). I tried hitting "enter" and it
>>>>> ended up opening a bug with that subject, which I never submitted,
>>>>> because I clicked "back" and figured out that *four* characters are
>>>>> actually necesary to start getting suggestions. The whole point of
>>>>> doing this was to see if another bug had been submitted with the same
>>>>> topic, and thereby save you time! I'm not going to try to reproduce
>>>>> this error, because you said it will get me banned again, but I think
>>>>> somebody should try to fix the site so that people don't get banned
>>>>> for any content which is not submitted. Especially people with
>>>>> months-old accounts, like me.
>>>>> 
>>>>> I definitely sympathize with the spam problem, and thank you for your
>>>>> hard work. Best wishes,
>>>>> 
>>>>> Frederick
>>>>> 
>>>>> On Fri, Feb 05, 2016 at 08:19:40PM -0500, Duncan Murdoch wrote:
>>>>>> On 05/02/2016 7:26 PM, frederik at ofb.net wrote:
>>>>>>> Dear Dirk Eddelbuettel and Duncan Murdoch,
>>>>>>> 
>>>>>>> Thank you for your work on the wonderful R project!
>>>>>>> 
>>>>>>> I recently attempted to submit a bug with your Bugzilla interface:
>>>>>>> 
>>>>>>> https://bugs.r-project.org/bugzilla/enter_bug.cgi
>>>>>>> 
>>>>>>> I created an account, typed in all my information, first checking
>>>>>>> details with another project. Then I clicked submit, and was taken to
>>>>>>> a web page with a big red banner, it said
>>>>>>> 
>>>>>>>  Spammer
>>>>>>>  If you believe your account should be restored, please send email to explaining why.
>>>>>>> 
>>>>>>> What a hostile thing to say to your users! I tried resubmitting my
>>>>>>> bug, but removing any links, and I still get the message - so it looks
>>>>>>> like my account has really been blocked. Please do something to warn
>>>>>>> your users about this so they can avoid the upset.
>>>>>> 
>>>>>> Your account isn't blocked now, but it wasn't easy to unblock it: you used a
>>>>>> different email address in the submission, not the same one you used in this
>>>>>> email.  At least one of the people who can deal with this kind of thing
>>>>>> would now demand an apology from you before ever reading your email again.
>>>>>> I won't do that, but I have to admit, I don't like the fact that you wasted
>>>>>> 10 minutes of my time. I'm Bcc'ing a couple of people who are working on
>>>>>> putting together a better interface to the bug reporting system, so they
>>>>>> know to deal with this kind of issue as well as all the others.
>>>>>> 
>>>>>> I'm not hostile, I just sound that way, because I've wasted a lot of time
>>>>>> this week on issues like this.
>>>>>> 
>>>>>> Duncan Murdoch
>>>>>> 
>>>>>> (Here's my previous email to you, for the benefit of those who are Bcc'd:
>>>>>>> You posted a bug report, but it had no content other than "til".  That's
>>>>>>> what many abusers of the system have done, so you were blocked.
>>>>>>> 
>>>>>>> I have read the first line of your bug report, and it says " I'm not
>>>>>>> sure if this is a bug with i3 or R ".  If you're not sure if it's a bug
>>>>>>> or not, then please post to R-devel.  That's a moderated list so if this
>>>>>>> is your first post, it may take a while to appear.
>>>>>>> 
>>>>>>> This probably seems unreasonable to you, but a lot of abuse is sent to
>>>>>>> the bug list, so we block it quite early.  I'll unblock you now, but
>>>>>>> please don't post there again unless your discussion on R-devel
>>>>>>> indicates this is a problem with R rather than i3.
>>>>>> Duncan Murdoch
>>>>>>> 
>>>>>>> Well, I don't know what it means to "email to explaining why", so I
>>>>>>> tried to subscribe to R-devel. However, it's been ten minutes and no
>>>>>>> confirmation email. So I tracked down your email addresses from the R
>>>>>>> website. I'm still cc'ing r-devel.
>>>>>>> 
>>>>>>> I hope it is OK to send the bug by email. I really want to get back to
>>>>>>> what I was doing, but I don't want to lose the work I put into writing
>>>>>>> this bug report, so I'm attaching it to this message.
>>>>>>> 
>>>>>>> Thank you,
>>>>>>> 
>>>>>>> Frederick Eaton
>>>>>>> 
>>>>>>> 
>>>>>> 
>>>> 
>>> 
>>> ______________________________________________
>>> R-devel at r-project.org mailing list
>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>> 
>> -- 
>> Peter Dalgaard, Professor,
>> Center for Statistics, Copenhagen Business School
>> Solbjerg Plads 3, 2000 Frederiksberg, Denmark
>> Phone: (+45)38153501
>> Office: A 4.23
>> Email: pd.mes at cbs.dk  Priv: PDalgd at gmail.com
>> 
>> 
>> 
>> 
>> 
>> 
>> 
>> 
>> 

-- 
Peter Dalgaard, Professor,
Center for Statistics, Copenhagen Business School
Solbjerg Plads 3, 2000 Frederiksberg, Denmark
Phone: (+45)38153501
Office: A 4.23
Email: pd.mes at cbs.dk  Priv: PDalgd at gmail.com


From kmillar at google.com  Sat Feb 27 00:58:20 2016
From: kmillar at google.com (Karl Millar)
Date: Fri, 26 Feb 2016 15:58:20 -0800
Subject: [Rd] [patch] Support many columns in model.matrix
Message-ID: <CABz6aZdZvLr=3_8yOqPr+_HYu-Vi=XQD5vKc8zATt0pFMUtypQ@mail.gmail.com>

Generating a model matrix with very large numbers of columns overflows
the stack and/or runs very slowly, due to the implementation of
TrimRepeats().

This patch modifies it to use Rf_duplicated() to find the duplicates.
This makes the running time linear in the number of columns and
eliminates the recursive function calls.

Thanks
-------------- next part --------------
A non-text attachment was scrubbed...
Name: stats_model.patch
Type: text/x-patch
Size: 2182 bytes
Desc: not available
URL: <https://stat.ethz.ch/pipermail/r-devel/attachments/20160226/b54f1cc2/attachment.bin>

From frederik at ofb.net  Sat Feb 27 07:26:30 2016
From: frederik at ofb.net (frederik at ofb.net)
Date: Fri, 26 Feb 2016 22:26:30 -0800
Subject: [Rd] problem submitting R bug;
 bug plotting in tiling window manager
In-Reply-To: <7E6770ED-7841-484F-9063-00020DA89B18@gmail.com>
References: <20160206002635.GA27075@ofb.net> <56B54A2C.10807@stats.uwo.ca>
	<20160206030756.GB27075@ofb.net> <56B5A815.4050908@gmail.com>
	<20160206232544.GA23008@ofb.net>
	<7043972C-6962-45C3-B8D6-EB2C1912857A@gmail.com>
	<20160208173416.GA23786@ofb.net>
	<7E6770ED-7841-484F-9063-00020DA89B18@gmail.com>
Message-ID: <20160227062630.GC11102@ofb.net>

That was an amusing bug.

I wish I had time to help more directly with this project, which has
been very helpful to me.

Frederick

On Thu, Feb 25, 2016 at 08:04:40PM +0100, peter dalgaard wrote:
> In case you still care, see 
> 
> https://bugs.r-project.org/bugzilla/show_bug.cgi?id=16726
> 
> which even our very human spam detector hasn't decided to label as spam (yet).
> 
> -pd
> 
> > On 08 Feb 2016, at 18:34 , frederik at ofb.net wrote:
> > 
> > Ah, thank you for that explanation. I somehow didn't catch that my
> > Bugzilla account had been disabled by a human.
> > 
> > "Common pattern is to post ... something copied from a generic bug
> > report" - that sounds very annoying.
> > 
> > Frederick
> > 
> > On Sun, Feb 07, 2016 at 11:54:11AM +0100, peter dalgaard wrote:
> >> Unfortunately, the spammers in question appear to be human (of sorts). 
> >> 
> >> We're not sure what they're up to, but a common pattern is to post random text, or something copied from a generic bug report (like "able to add 6 item"), later followed by a comment containing a link or a file attachment. 
> >> 
> >> Presumably, it is some sort of click-bait scheme, but it could also be a covert channel for contrabande files. At any rate, it is very hard to distinguish by mechanical means. So it is done by eye, with some risk of Type-I error. Thus, the Bugzilla maintainers are pretty vigilant to stamp out spammers, sometimes edging on being ham-fisted (er, -footed?).
> >> 
> >> -pd
> >> 
> >> 
> >>> On 07 Feb 2016, at 00:25 , frederik at ofb.net wrote:
> >>> 
> >>> No problem.
> >>> 
> >>> Another suggestion would be to simply validate user input like most
> >>> websites, and reject invalid submissions immediately, rather than
> >>> blocking the user's account. I don't know what kind of spambots you
> >>> are up against, but unless they are very intelligent I doubt they'll
> >>> be able to understand a message like "You submitted a bug with no body
> >>> text, please enter something and try again." There may also be the
> >>> option of using Captchas.
> >>> 
> >>> Not sure how hard it is to get Bugzilla to do these things.
> >>> 
> >>> Thanks,
> >>> 
> >>> Frederick
> >>> 
> >>> P.S. (I now see that all errors on the bug tracker are displayed with
> >>> a red background)
> >>> 
> >>> On Sat, Feb 06, 2016 at 03:00:21AM -0500, Duncan Murdoch wrote:
> >>>> Thanks for the suggestions.
> >>>> 
> >>>> Duncan Murdoch
> >>>> 
> >>>> On 05/02/2016 10:07 PM, frederik at ofb.net wrote:
> >>>>> Hi Duncan Murdoch,
> >>>>> 
> >>>>> Thanks for your time. I apologize for not telling you that my email
> >>>>> address on the bug tracker is slightly different -
> >>>>> "frederik-rproject at ofb.net" vs "frederik at ofb.net". I was going to
> >>>>> follow up with this information, but then I thought, he probably knows
> >>>>> how to find a tagged email address.
> >>>>> 
> >>>>> I do hope that you are able to fix the bug tracker. In particular,
> >>>>> people should be made aware that their account is blocked before being
> >>>>> invited to submit a bug. The error they get should be less rude - no
> >>>>> need to make it red - and the email address in the error should be
> >>>>> filled in. You complained about wasting time having to look for my
> >>>>> email address - well, I wasted time looking for yours. The error
> >>>>> message could even hint at what triggered the ban. I don't think that
> >>>>> you're going to get very far by trying to scare off actual spammers
> >>>>> with a big red accusation - I imagine they all have pretty thick skin.
> >>>>> 
> >>>>> Reading the first line of my bug report was generous of you, but if
> >>>>> you read the rest, you'll see that, indeed, after checking with the
> >>>>> knowledgeable i3 guys, it appears to be an R bug. So I would like to
> >>>>> submit it. What appears at the top of my bug report is a copy of the
> >>>>> original bug I posted to i3, at the linked URL (are links OK or will I
> >>>>> get banned again?).
> >>>>> 
> >>>>> The reason a bug appeared with the subject "til" is because I noticed
> >>>>> that when typing into the subject field, some "related bugs" come up.
> >>>>> However, this "suggestion" process appeared to be stalled when I typed
> >>>>> "til" (for "tiling" or "tilable"). I tried hitting "enter" and it
> >>>>> ended up opening a bug with that subject, which I never submitted,
> >>>>> because I clicked "back" and figured out that *four* characters are
> >>>>> actually necesary to start getting suggestions. The whole point of
> >>>>> doing this was to see if another bug had been submitted with the same
> >>>>> topic, and thereby save you time! I'm not going to try to reproduce
> >>>>> this error, because you said it will get me banned again, but I think
> >>>>> somebody should try to fix the site so that people don't get banned
> >>>>> for any content which is not submitted. Especially people with
> >>>>> months-old accounts, like me.
> >>>>> 
> >>>>> I definitely sympathize with the spam problem, and thank you for your
> >>>>> hard work. Best wishes,
> >>>>> 
> >>>>> Frederick
> >>>>> 
> >>>>> On Fri, Feb 05, 2016 at 08:19:40PM -0500, Duncan Murdoch wrote:
> >>>>>> On 05/02/2016 7:26 PM, frederik at ofb.net wrote:
> >>>>>>> Dear Dirk Eddelbuettel and Duncan Murdoch,
> >>>>>>> 
> >>>>>>> Thank you for your work on the wonderful R project!
> >>>>>>> 
> >>>>>>> I recently attempted to submit a bug with your Bugzilla interface:
> >>>>>>> 
> >>>>>>> https://bugs.r-project.org/bugzilla/enter_bug.cgi
> >>>>>>> 
> >>>>>>> I created an account, typed in all my information, first checking
> >>>>>>> details with another project. Then I clicked submit, and was taken to
> >>>>>>> a web page with a big red banner, it said
> >>>>>>> 
> >>>>>>>  Spammer
> >>>>>>>  If you believe your account should be restored, please send email to explaining why.
> >>>>>>> 
> >>>>>>> What a hostile thing to say to your users! I tried resubmitting my
> >>>>>>> bug, but removing any links, and I still get the message - so it looks
> >>>>>>> like my account has really been blocked. Please do something to warn
> >>>>>>> your users about this so they can avoid the upset.
> >>>>>> 
> >>>>>> Your account isn't blocked now, but it wasn't easy to unblock it: you used a
> >>>>>> different email address in the submission, not the same one you used in this
> >>>>>> email.  At least one of the people who can deal with this kind of thing
> >>>>>> would now demand an apology from you before ever reading your email again.
> >>>>>> I won't do that, but I have to admit, I don't like the fact that you wasted
> >>>>>> 10 minutes of my time. I'm Bcc'ing a couple of people who are working on
> >>>>>> putting together a better interface to the bug reporting system, so they
> >>>>>> know to deal with this kind of issue as well as all the others.
> >>>>>> 
> >>>>>> I'm not hostile, I just sound that way, because I've wasted a lot of time
> >>>>>> this week on issues like this.
> >>>>>> 
> >>>>>> Duncan Murdoch
> >>>>>> 
> >>>>>> (Here's my previous email to you, for the benefit of those who are Bcc'd:
> >>>>>>> You posted a bug report, but it had no content other than "til".  That's
> >>>>>>> what many abusers of the system have done, so you were blocked.
> >>>>>>> 
> >>>>>>> I have read the first line of your bug report, and it says " I'm not
> >>>>>>> sure if this is a bug with i3 or R ".  If you're not sure if it's a bug
> >>>>>>> or not, then please post to R-devel.  That's a moderated list so if this
> >>>>>>> is your first post, it may take a while to appear.
> >>>>>>> 
> >>>>>>> This probably seems unreasonable to you, but a lot of abuse is sent to
> >>>>>>> the bug list, so we block it quite early.  I'll unblock you now, but
> >>>>>>> please don't post there again unless your discussion on R-devel
> >>>>>>> indicates this is a problem with R rather than i3.
> >>>>>> Duncan Murdoch
> >>>>>>> 
> >>>>>>> Well, I don't know what it means to "email to explaining why", so I
> >>>>>>> tried to subscribe to R-devel. However, it's been ten minutes and no
> >>>>>>> confirmation email. So I tracked down your email addresses from the R
> >>>>>>> website. I'm still cc'ing r-devel.
> >>>>>>> 
> >>>>>>> I hope it is OK to send the bug by email. I really want to get back to
> >>>>>>> what I was doing, but I don't want to lose the work I put into writing
> >>>>>>> this bug report, so I'm attaching it to this message.
> >>>>>>> 
> >>>>>>> Thank you,
> >>>>>>> 
> >>>>>>> Frederick Eaton
> >>>>>>> 
> >>>>>>> 
> >>>>>> 
> >>>> 
> >>> 
> >>> ______________________________________________
> >>> R-devel at r-project.org mailing list
> >>> https://stat.ethz.ch/mailman/listinfo/r-devel
> >> 
> >> -- 
> >> Peter Dalgaard, Professor,
> >> Center for Statistics, Copenhagen Business School
> >> Solbjerg Plads 3, 2000 Frederiksberg, Denmark
> >> Phone: (+45)38153501
> >> Office: A 4.23
> >> Email: pd.mes at cbs.dk  Priv: PDalgd at gmail.com
> >> 
> >> 
> >> 
> >> 
> >> 
> >> 
> >> 
> >> 
> >> 
> 
> -- 
> Peter Dalgaard, Professor,
> Center for Statistics, Copenhagen Business School
> Solbjerg Plads 3, 2000 Frederiksberg, Denmark
> Phone: (+45)38153501
> Office: A 4.23
> Email: pd.mes at cbs.dk  Priv: PDalgd at gmail.com
> 
> 
> 
> 
> 
> 
> 
> 
>


From ramnath.vaidya at gmail.com  Sat Feb 27 05:22:54 2016
From: ramnath.vaidya at gmail.com (Ramnath Vaidyanathan)
Date: Fri, 26 Feb 2016 20:22:54 -0800
Subject: [Rd] Unable to Install Packages from Binaries on Windows for R 3.2.3
Message-ID: <CAKO5CYXp7YFhhprZW1k0Pyi3GtN9WQo3JHc1ZsrsYr03CdsmOw@mail.gmail.com>

Installing packages from binaries on Windows seems broken, when using
mirrors that are up to date with CRAN

install.packages(
  'httr',
  type = 'binary',
  repos = "https://cran.rstudio.com/"
)

Changing repos to the Kansas CRAN mirror installs the package as expected,
but that could be because the KS mirror has not yet synced.

Someone pointed out that the PACKAGES.gz file at
https://cran.r-project.org/bin/windows/contrib/3.2/ seems to be corrupted
(0 KB), and this could be the issue.

	[[alternative HTML version deleted]]


From pdalgd at gmail.com  Sat Feb 27 17:33:15 2016
From: pdalgd at gmail.com (peter dalgaard)
Date: Sat, 27 Feb 2016 17:33:15 +0100
Subject: [Rd] Unable to Install Packages from Binaries on Windows for R
	3.2.3
In-Reply-To: <CAKO5CYXp7YFhhprZW1k0Pyi3GtN9WQo3JHc1ZsrsYr03CdsmOw@mail.gmail.com>
References: <CAKO5CYXp7YFhhprZW1k0Pyi3GtN9WQo3JHc1ZsrsYr03CdsmOw@mail.gmail.com>
Message-ID: <B7FB759A-6501-44AC-A03C-CA4642E2C93A@gmail.com>


> On 27 Feb 2016, at 05:22 , Ramnath Vaidyanathan <ramnath.vaidya at gmail.com> wrote:
> 
> Installing packages from binaries on Windows seems broken, when using
> mirrors that are up to date with CRAN
> 
> install.packages(
>  'httr',
>  type = 'binary',
>  repos = "https://cran.rstudio.com/"
> )
> 
> Changing repos to the Kansas CRAN mirror installs the package as expected,
> but that could be because the KS mirror has not yet synced.
> 
> Someone pointed out that the PACKAGES.gz file at
> https://cran.r-project.org/bin/windows/contrib/3.2/ seems to be corrupted
> (0 KB), and this could be the issue.


It's at 202K now in both places. Perhaps just retry?

-pd

> 
> 	[[alternative HTML version deleted]]
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel

-- 
Peter Dalgaard, Professor,
Center for Statistics, Copenhagen Business School
Solbjerg Plads 3, 2000 Frederiksberg, Denmark
Phone: (+45)38153501
Office: A 4.23
Email: pd.mes at cbs.dk  Priv: PDalgd at gmail.com


From sbronder at stevebronder.com  Sat Feb 27 18:30:50 2016
From: sbronder at stevebronder.com (Steve Bronder)
Date: Sat, 27 Feb 2016 12:30:50 -0500
Subject: [Rd] Unable to Install Packages from Binaries on Windows for R
	3.2.3
In-Reply-To: <B7FB759A-6501-44AC-A03C-CA4642E2C93A@gmail.com>
References: <CAKO5CYXp7YFhhprZW1k0Pyi3GtN9WQo3JHc1ZsrsYr03CdsmOw@mail.gmail.com>
	<B7FB759A-6501-44AC-A03C-CA4642E2C93A@gmail.com>
Message-ID: <CAAVP=a=iX5Gby7Xm-t+7kdEsjj9F_1KLT5VqaON+H2SHG7z8=Q@mail.gmail.com>

Removing 'type=binary' worked for me.

install.packages(
   'httr',
    repos = "https://cran.rstudio.com/"
)

But I get an error when I select binary as type
---
 install.packages(
     'httr',
     type = 'binary',
     repos = "https://cran.rstudio.com/"
 )
Error in install.packages : type 'binary' is not supported on this platform.
---

Same error for another package
---
install.packages(
    'lme4',
    type = 'binary',
    repos = "https://cran.rstudio.com/")

Error in install.packages : type 'binary' is not supported on this platform
---

 Platform session info below:

sessionInfo()
R version 3.2.3 (2015-12-10)
Platform: x86_64-pc-linux-gnu (64-bit)
Running under: Ubuntu 14.04.4 LTS




Regards,

Steve Bronder
Website: stevebronder.com
Phone: 412-719-1282
Email: sbronder at stevebronder.com


On Sat, Feb 27, 2016 at 11:33 AM, peter dalgaard <pdalgd at gmail.com> wrote:

>
> > On 27 Feb 2016, at 05:22 , Ramnath Vaidyanathan <
> ramnath.vaidya at gmail.com> wrote:
> >
> > Installing packages from binaries on Windows seems broken, when using
> > mirrors that are up to date with CRAN
> >
> > install.packages(
> >  'httr',
> >  type = 'binary',
> >  repos = "https://cran.rstudio.com/"
> > )
> >
> > Changing repos to the Kansas CRAN mirror installs the package as
> expected,
> > but that could be because the KS mirror has not yet synced.
> >
> > Someone pointed out that the PACKAGES.gz file at
> > https://cran.r-project.org/bin/windows/contrib/3.2/ seems to be
> corrupted
> > (0 KB), and this could be the issue.
>
>
> It's at 202K now in both places. Perhaps just retry?
>
> -pd
>
> >
> >       [[alternative HTML version deleted]]
> >
> > ______________________________________________
> > R-devel at r-project.org mailing list
> > https://stat.ethz.ch/mailman/listinfo/r-devel
>
> --
> Peter Dalgaard, Professor,
> Center for Statistics, Copenhagen Business School
> Solbjerg Plads 3, 2000 Frederiksberg, Denmark
> Phone: (+45)38153501
> Office: A 4.23
> Email: pd.mes at cbs.dk  Priv: PDalgd at gmail.com
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>

	[[alternative HTML version deleted]]


From ramnath.vaidya at gmail.com  Sat Feb 27 21:09:44 2016
From: ramnath.vaidya at gmail.com (Ramnath Vaidyanathan)
Date: Sat, 27 Feb 2016 12:09:44 -0800
Subject: [Rd] Unable to Install Packages from Binaries on Windows for R
	3.2.3
In-Reply-To: <B7FB759A-6501-44AC-A03C-CA4642E2C93A@gmail.com>
References: <CAKO5CYXp7YFhhprZW1k0Pyi3GtN9WQo3JHc1ZsrsYr03CdsmOw@mail.gmail.com>
	<B7FB759A-6501-44AC-A03C-CA4642E2C93A@gmail.com>
Message-ID: <CAKO5CYXHTOT3N1sqGqwn1UExh=SXTw=ZroL20eizpEFQ90N4-A@mail.gmail.com>

It works for me now. Thanks.

Ramnath

On Sat, Feb 27, 2016 at 8:33 AM, peter dalgaard <pdalgd at gmail.com> wrote:

>
> > On 27 Feb 2016, at 05:22 , Ramnath Vaidyanathan <
> ramnath.vaidya at gmail.com> wrote:
> >
> > Installing packages from binaries on Windows seems broken, when using
> > mirrors that are up to date with CRAN
> >
> > install.packages(
> >  'httr',
> >  type = 'binary',
> >  repos = "https://cran.rstudio.com/"
> > )
> >
> > Changing repos to the Kansas CRAN mirror installs the package as
> expected,
> > but that could be because the KS mirror has not yet synced.
> >
> > Someone pointed out that the PACKAGES.gz file at
> > https://cran.r-project.org/bin/windows/contrib/3.2/ seems to be
> corrupted
> > (0 KB), and this could be the issue.
>
>
> It's at 202K now in both places. Perhaps just retry?
>
> -pd
>
> >
> >       [[alternative HTML version deleted]]
> >
> > ______________________________________________
> > R-devel at r-project.org mailing list
> > https://stat.ethz.ch/mailman/listinfo/r-devel
>
> --
> Peter Dalgaard, Professor,
> Center for Statistics, Copenhagen Business School
> Solbjerg Plads 3, 2000 Frederiksberg, Denmark
> Phone: (+45)38153501
> Office: A 4.23
> Email: pd.mes at cbs.dk  Priv: PDalgd at gmail.com
>
>
>
>
>
>
>
>
>
>

	[[alternative HTML version deleted]]


From istazahn at gmail.com  Sat Feb 27 22:44:18 2016
From: istazahn at gmail.com (Ista Zahn)
Date: Sat, 27 Feb 2016 16:44:18 -0500
Subject: [Rd] Unable to Install Packages from Binaries on Windows for R
	3.2.3
In-Reply-To: <CAAVP=a=iX5Gby7Xm-t+7kdEsjj9F_1KLT5VqaON+H2SHG7z8=Q@mail.gmail.com>
References: <CAKO5CYXp7YFhhprZW1k0Pyi3GtN9WQo3JHc1ZsrsYr03CdsmOw@mail.gmail.com>
	<B7FB759A-6501-44AC-A03C-CA4642E2C93A@gmail.com>
	<CAAVP=a=iX5Gby7Xm-t+7kdEsjj9F_1KLT5VqaON+H2SHG7z8=Q@mail.gmail.com>
Message-ID: <CA+vqiLHVnvGEHK+Go9k6Nm1YHC9M-Wks7L8zLgk7DhAO1UjMvQ@mail.gmail.com>

Hi Steve,

CRAN only compiles packages for Windows and OS X, so this is a) completely
expected and b) completely unrelated to the issue being discussed in this
thread.

Best,
Ista
On Feb 27, 2016 12:32 PM, "Steve Bronder" <sbronder at stevebronder.com> wrote:

> Removing 'type=binary' worked for me.
>
> install.packages(
>    'httr',
>     repos = "https://cran.rstudio.com/"
> )
>
> But I get an error when I select binary as type
> ---
>  install.packages(
>      'httr',
>      type = 'binary',
>      repos = "https://cran.rstudio.com/"
>  )
> Error in install.packages : type 'binary' is not supported on this
> platform.
> ---
>
> Same error for another package
> ---
> install.packages(
>     'lme4',
>     type = 'binary',
>     repos = "https://cran.rstudio.com/")
>
> Error in install.packages : type 'binary' is not supported on this platform
> ---
>
>  Platform session info below:
>
> sessionInfo()
> R version 3.2.3 (2015-12-10)
> Platform: x86_64-pc-linux-gnu (64-bit)
> Running under: Ubuntu 14.04.4 LTS
>
>
>
>
> Regards,
>
> Steve Bronder
> Website: stevebronder.com
> Phone: 412-719-1282
> Email: sbronder at stevebronder.com
>
>
> On Sat, Feb 27, 2016 at 11:33 AM, peter dalgaard <pdalgd at gmail.com> wrote:
>
> >
> > > On 27 Feb 2016, at 05:22 , Ramnath Vaidyanathan <
> > ramnath.vaidya at gmail.com> wrote:
> > >
> > > Installing packages from binaries on Windows seems broken, when using
> > > mirrors that are up to date with CRAN
> > >
> > > install.packages(
> > >  'httr',
> > >  type = 'binary',
> > >  repos = "https://cran.rstudio.com/"
> > > )
> > >
> > > Changing repos to the Kansas CRAN mirror installs the package as
> > expected,
> > > but that could be because the KS mirror has not yet synced.
> > >
> > > Someone pointed out that the PACKAGES.gz file at
> > > https://cran.r-project.org/bin/windows/contrib/3.2/ seems to be
> > corrupted
> > > (0 KB), and this could be the issue.
> >
> >
> > It's at 202K now in both places. Perhaps just retry?
> >
> > -pd
> >
> > >
> > >       [[alternative HTML version deleted]]
> > >
> > > ______________________________________________
> > > R-devel at r-project.org mailing list
> > > https://stat.ethz.ch/mailman/listinfo/r-devel
> >
> > --
> > Peter Dalgaard, Professor,
> > Center for Statistics, Copenhagen Business School
> > Solbjerg Plads 3, 2000 Frederiksberg, Denmark
> > Phone: (+45)38153501
> > Office: A 4.23
> > Email: pd.mes at cbs.dk  Priv: PDalgd at gmail.com
> >
> > ______________________________________________
> > R-devel at r-project.org mailing list
> > https://stat.ethz.ch/mailman/listinfo/r-devel
> >
>
>         [[alternative HTML version deleted]]
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>

	[[alternative HTML version deleted]]


From HodgessE at uhd.edu  Sat Feb 27 23:13:56 2016
From: HodgessE at uhd.edu (Hodgess, Erin)
Date: Sat, 27 Feb 2016 22:13:56 +0000
Subject: [Rd] a quick question before I proceed
Message-ID: <FF9DB805FC41CC4E95825A50F6806302B49B4F98@columbia.uhd.campus>

Is this the proper forum for questions on Fortran, MPI, RInside, and Rcpp, please?

Thanks,
Erin


	[[alternative HTML version deleted]]


From edd at debian.org  Sun Feb 28 00:10:49 2016
From: edd at debian.org (Dirk Eddelbuettel)
Date: Sat, 27 Feb 2016 17:10:49 -0600
Subject: [Rd] a quick question before I proceed
In-Reply-To: <FF9DB805FC41CC4E95825A50F6806302B49B4F98@columbia.uhd.campus>
References: <FF9DB805FC41CC4E95825A50F6806302B49B4F98@columbia.uhd.campus>
Message-ID: <22226.11513.56612.113453@max.nulle.part>


On 27 February 2016 at 22:13, Hodgess, Erin wrote:
| Is this the proper forum for questions on Fortran, MPI, RInside, and Rcpp, please?

I saw your earlier question on r-help by chance (still subscribed, but don't
real anything but fractions on it) and mostly shook my head in amusement.
Hardly the right venue.

Rcpp and RInside are about C++.  They have their own mailing list. We pointed
to it for all those years.

MPI is an HPC topic so I would ask on r-sig-hpc. Note that RInside /does/
have an examples subdirectory with worked MPI code.  Which has been there
sinc 2010 too.

For Fortran you may be on your own, or ask here. Why you think anybody would
combine Fortran and C++ at the same time with R is beyond my pay grade. Also
note the warning in 'Writing R Extensions' (which I am sure you read
carefully too):

  There is no guarantee that C++11 can be used in a package in combination
  with any other compiled language (even C), as the C++11 compiler may be
  incompatible with the native compilers for the platform.  (There are known
  problems mixing C++11 with Fortran.)

So if you want Fortran and C++, make sure you use plain C++.

For the intersection of all topics, no dedicated forum exists as far as I know.

Dirk

-- 
http://dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org


From sven.templer at gmail.com  Mon Feb 29 09:34:00 2016
From: sven.templer at gmail.com (Sven E. Templer)
Date: Mon, 29 Feb 2016 09:34:00 +0100
Subject: [Rd] Sys.readlink (on BSD vs Linux)
Message-ID: <10D14BD3-2646-4A1C-BA2A-5B93414D2436@icloud.com>

Hello together,

the function `Sys.readlink` uses the system's readlink command to resolve symlink paths. On OSX/BSD the command has a different meaning than on Linux [1].

There exists the tool 'realpath', which seems suitable for the task, at least applied at the command line level [2]. It is used in `normalizePath`.

I suggest (at least the latter) to
* use realpath instead readlink within Sys.readlink (do_readlink -> do_normalizepath)
* link to `normalizePath` in the Rd document, eventually mentioning the difference

Many thanks,
Sven

[1] see
https://www.freebsd.org/cgi/man.cgi?query=readlink
vs
http://linux.die.net/man/1/readlink

[2]
https://www.freebsd.org/cgi/man.cgi?query=realpath
http://linux.die.net/man/1/realpath


---------------------------

Sven E. Templer
Bioinformatics Core Group

Max Planck Institute for Biology of Ageing
Joseph-Stelzmann-Strasse 9b
50931 Cologne, Germany

Phone: 0049 (0)221 37970 325
templer at age.mpg.de
http://www.age.mpg.de/the-science/core-facilities/bioinformatics/


From mikko.korpela at aalto.fi  Mon Feb 29 11:44:42 2016
From: mikko.korpela at aalto.fi (Mikko Korpela)
Date: Mon, 29 Feb 2016 12:44:42 +0200
Subject: [Rd] Sys.readlink (on BSD vs Linux)
In-Reply-To: <10D14BD3-2646-4A1C-BA2A-5B93414D2436@icloud.com>
References: <10D14BD3-2646-4A1C-BA2A-5B93414D2436@icloud.com>
Message-ID: <56D4211A.8060306@aalto.fi>

On 29.02.2016 10:34, Sven E. Templer wrote:
> Hello together,
> 
> the function `Sys.readlink` uses the system's readlink command to resolve symlink paths. On OSX/BSD the command has a different meaning than on Linux [1].
> 
> There exists the tool 'realpath', which seems suitable for the task, at least applied at the command line level [2]. It is used in `normalizePath`.
> 
> I suggest (at least the latter) to
> * use realpath instead readlink within Sys.readlink (do_readlink -> do_normalizepath)
> * link to `normalizePath` in the Rd document, eventually mentioning the difference
> 
> Many thanks,
> Sven
> 
> [1] see
> https://www.freebsd.org/cgi/man.cgi?query=readlink
> vs
> http://linux.die.net/man/1/readlink
> 
> [2]
> https://www.freebsd.org/cgi/man.cgi?query=realpath
> http://linux.die.net/man/1/realpath

What do you mean by "different meaning"? How are the command line tools
[1] relevant when R is using the C function 'readlink'?

http://pubs.opengroup.org/onlinepubs/9699919799/functions/readlink.html
https://www.freebsd.org/cgi/man.cgi?query=readlink&sektion=2
http://man7.org/linux/man-pages/man2/readlink.2.html

-- 
Mikko Korpela
Aalto University School of Science
Department of Computer Science


From sven.templer at gmail.com  Mon Feb 29 11:59:41 2016
From: sven.templer at gmail.com (Sven Templer)
Date: Mon, 29 Feb 2016 11:59:41 +0100
Subject: [Rd] Sys.readlink (on BSD vs Linux)
In-Reply-To: <56D4211A.8060306@aalto.fi>
References: <10D14BD3-2646-4A1C-BA2A-5B93414D2436@icloud.com>
	<56D4211A.8060306@aalto.fi>
Message-ID: <37EB35B6-22B9-4072-B874-C67365B89F57@icloud.com>

Hello,

sorry for not being clear enough.

My problem is represented with the following code, running on OSX:

mkdir ~/test
ln -s ~/test ~/testlink
touch ~/test/foo
Rscript -e 'Sys.readlink(c("~/test/foo", "~/testlink/foo")); normalizePath(c("~/test/foo","~/testlink/foo"))'

I expected `Sys.readlink` to show the same output as `normalizePath`.
Also, I think the readlink.h imported to R to be the same as from the system's `readlink` command, thus mimicking the command line difference.

Am I wrong with the latter? Anyway, the behaviour is irritating, thus the request to at least mention `normalizePath` in the Rd of `Sys.readlink`.

Best,
Sven


> On 29 Feb 2016, at 11:44, Mikko Korpela <mikko.korpela at aalto.fi> wrote:
> 
> On 29.02.2016 10:34, Sven E. Templer wrote:
>> Hello together,
>> 
>> the function `Sys.readlink` uses the system's readlink command to resolve symlink paths. On OSX/BSD the command has a different meaning than on Linux [1].
>> 
>> There exists the tool 'realpath', which seems suitable for the task, at least applied at the command line level [2]. It is used in `normalizePath`.
>> 
>> I suggest (at least the latter) to
>> * use realpath instead readlink within Sys.readlink (do_readlink -> do_normalizepath)
>> * link to `normalizePath` in the Rd document, eventually mentioning the difference
>> 
>> Many thanks,
>> Sven
>> 
>> [1] see
>> https://www.freebsd.org/cgi/man.cgi?query=readlink
>> vs
>> http://linux.die.net/man/1/readlink
>> 
>> [2]
>> https://www.freebsd.org/cgi/man.cgi?query=realpath
>> http://linux.die.net/man/1/realpath
> 
> What do you mean by "different meaning"? How are the command line tools
> [1] relevant when R is using the C function 'readlink'?
> 
> http://pubs.opengroup.org/onlinepubs/9699919799/functions/readlink.html
> https://www.freebsd.org/cgi/man.cgi?query=readlink&sektion=2
> http://man7.org/linux/man-pages/man2/readlink.2.html
> 
> -- 
> Mikko Korpela
> Aalto University School of Science
> Department of Computer Science


From sven.templer at gmail.com  Mon Feb 29 12:04:40 2016
From: sven.templer at gmail.com (Sven Templer)
Date: Mon, 29 Feb 2016 12:04:40 +0100
Subject: [Rd] Sys.readlink (on BSD vs Linux)
In-Reply-To: <37EB35B6-22B9-4072-B874-C67365B89F57@icloud.com>
References: <10D14BD3-2646-4A1C-BA2A-5B93414D2436@icloud.com>
	<56D4211A.8060306@aalto.fi>
	<37EB35B6-22B9-4072-B874-C67365B89F57@icloud.com>
Message-ID: <8369CE53-C908-480C-AC71-AB80BC205847@icloud.com>


> On 29 Feb 2016, at 11:59, Sven Templer <sven.templer at gmail.com> wrote:
> 
> Also, I think the readlink.h imported to R to be the same as from the system's `readlink` command, thus mimicking the command line difference.

Please ignore this statement, sorry.

From simon.urbanek at r-project.org  Mon Feb 29 16:02:01 2016
From: simon.urbanek at r-project.org (Simon Urbanek)
Date: Mon, 29 Feb 2016 10:02:01 -0500
Subject: [Rd] Sys.readlink (on BSD vs Linux)
In-Reply-To: <37EB35B6-22B9-4072-B874-C67365B89F57@icloud.com>
References: <10D14BD3-2646-4A1C-BA2A-5B93414D2436@icloud.com>
	<56D4211A.8060306@aalto.fi>
	<37EB35B6-22B9-4072-B874-C67365B89F57@icloud.com>
Message-ID: <E6C8E0BD-6BA1-4C18-8264-8FA4B052DDDA@r-project.org>


> On Feb 29, 2016, at 5:59 AM, Sven Templer <sven.templer at gmail.com> wrote:
> 
> Hello,
> 
> sorry for not being clear enough.
> 
> My problem is represented with the following code, running on OSX:
> 
> mkdir ~/test
> ln -s ~/test ~/testlink
> touch ~/test/foo
> Rscript -e 'Sys.readlink(c("~/test/foo", "~/testlink/foo")); normalizePath(c("~/test/foo","~/testlink/foo"))'
> 
> I expected `Sys.readlink` to show the same output as `normalizePath`.


Why? To quote from the Sys.readlink() docs:

Value:

     A character vector of the same length as ?paths?.  The entries are
     the path of the file linked to, ?""? if the path is not a symbolic
     link.

since you are referring to a file and not a link the result is as expected "" - both on OS X and Linux.


> Also, I think the readlink.h imported to R to be the same as from the system's `readlink` command, thus mimicking the command line difference.
> 
> Am I wrong with the latter? Anyway, the behaviour is irritating, thus the request to at least mention `normalizePath` in the Rd of `Sys.readlink`.
> 
> Best,
> Sven
> 
> 
>> On 29 Feb 2016, at 11:44, Mikko Korpela <mikko.korpela at aalto.fi> wrote:
>> 
>> On 29.02.2016 10:34, Sven E. Templer wrote:
>>> Hello together,
>>> 
>>> the function `Sys.readlink` uses the system's readlink command to resolve symlink paths. On OSX/BSD the command has a different meaning than on Linux [1].
>>> 
>>> There exists the tool 'realpath', which seems suitable for the task, at least applied at the command line level [2]. It is used in `normalizePath`.
>>> 
>>> I suggest (at least the latter) to
>>> * use realpath instead readlink within Sys.readlink (do_readlink -> do_normalizepath)
>>> * link to `normalizePath` in the Rd document, eventually mentioning the difference
>>> 
>>> Many thanks,
>>> Sven
>>> 
>>> [1] see
>>> https://www.freebsd.org/cgi/man.cgi?query=readlink
>>> vs
>>> http://linux.die.net/man/1/readlink
>>> 
>>> [2]
>>> https://www.freebsd.org/cgi/man.cgi?query=realpath
>>> http://linux.die.net/man/1/realpath
>> 
>> What do you mean by "different meaning"? How are the command line tools
>> [1] relevant when R is using the C function 'readlink'?
>> 
>> http://pubs.opengroup.org/onlinepubs/9699919799/functions/readlink.html
>> https://www.freebsd.org/cgi/man.cgi?query=readlink&sektion=2
>> http://man7.org/linux/man-pages/man2/readlink.2.html
>> 
>> -- 
>> Mikko Korpela
>> Aalto University School of Science
>> Department of Computer Science
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
> 


From sven.templer at gmail.com  Mon Feb 29 16:10:25 2016
From: sven.templer at gmail.com (Sven Templer)
Date: Mon, 29 Feb 2016 16:10:25 +0100
Subject: [Rd] Sys.readlink (on BSD vs Linux)
In-Reply-To: <E6C8E0BD-6BA1-4C18-8264-8FA4B052DDDA@r-project.org>
References: <10D14BD3-2646-4A1C-BA2A-5B93414D2436@icloud.com>
	<56D4211A.8060306@aalto.fi>
	<37EB35B6-22B9-4072-B874-C67365B89F57@icloud.com>
	<E6C8E0BD-6BA1-4C18-8264-8FA4B052DDDA@r-project.org>
Message-ID: <D71A1323-7E0F-48C7-B4D3-23DDDC23F181@icloud.com>

Yes,

`Sys.readlink` is returning values as explained/expected.
I was very confused by mixing C library functions with coreutils and not reading careful enough, please excuse me for that.
A link to `normalizePath` would be of help in the 'See Also' section, in my opinion.

Regards,
Sven

> On 29 Feb 2016, at 16:02, Simon Urbanek <simon.urbanek at r-project.org> wrote:
> 
> 
>> On Feb 29, 2016, at 5:59 AM, Sven Templer <sven.templer at gmail.com> wrote:
>> 
>> Hello,
>> 
>> sorry for not being clear enough.
>> 
>> My problem is represented with the following code, running on OSX:
>> 
>> mkdir ~/test
>> ln -s ~/test ~/testlink
>> touch ~/test/foo
>> Rscript -e 'Sys.readlink(c("~/test/foo", "~/testlink/foo")); normalizePath(c("~/test/foo","~/testlink/foo"))'
>> 
>> I expected `Sys.readlink` to show the same output as `normalizePath`.
> 
> 
> Why? To quote from the Sys.readlink() docs:
> 
> Value:
> 
>     A character vector of the same length as ?paths?.  The entries are
>     the path of the file linked to, ?""? if the path is not a symbolic
>     link.
> 
> since you are referring to a file and not a link the result is as expected "" - both on OS X and Linux.
> 
> 
>> Also, I think the readlink.h imported to R to be the same as from the system's `readlink` command, thus mimicking the command line difference.
>> 
>> Am I wrong with the latter? Anyway, the behaviour is irritating, thus the request to at least mention `normalizePath` in the Rd of `Sys.readlink`.
>> 
>> Best,
>> Sven
>> 
>> 
>>> On 29 Feb 2016, at 11:44, Mikko Korpela <mikko.korpela at aalto.fi> wrote:
>>> 
>>> On 29.02.2016 10:34, Sven E. Templer wrote:
>>>> Hello together,
>>>> 
>>>> the function `Sys.readlink` uses the system's readlink command to resolve symlink paths. On OSX/BSD the command has a different meaning than on Linux [1].
>>>> 
>>>> There exists the tool 'realpath', which seems suitable for the task, at least applied at the command line level [2]. It is used in `normalizePath`.
>>>> 
>>>> I suggest (at least the latter) to
>>>> * use realpath instead readlink within Sys.readlink (do_readlink -> do_normalizepath)
>>>> * link to `normalizePath` in the Rd document, eventually mentioning the difference
>>>> 
>>>> Many thanks,
>>>> Sven
>>>> 
>>>> [1] see
>>>> https://www.freebsd.org/cgi/man.cgi?query=readlink
>>>> vs
>>>> http://linux.die.net/man/1/readlink
>>>> 
>>>> [2]
>>>> https://www.freebsd.org/cgi/man.cgi?query=realpath
>>>> http://linux.die.net/man/1/realpath
>>> 
>>> What do you mean by "different meaning"? How are the command line tools
>>> [1] relevant when R is using the C function 'readlink'?
>>> 
>>> http://pubs.opengroup.org/onlinepubs/9699919799/functions/readlink.html
>>> https://www.freebsd.org/cgi/man.cgi?query=readlink&sektion=2
>>> http://man7.org/linux/man-pages/man2/readlink.2.html
>>> 
>>> -- 
>>> Mikko Korpela
>>> Aalto University School of Science
>>> Department of Computer Science
>> 
>> ______________________________________________
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel
>> 
> 


From b.rowlingson at lancaster.ac.uk  Mon Feb 29 17:40:45 2016
From: b.rowlingson at lancaster.ac.uk (Barry Rowlingson)
Date: Mon, 29 Feb 2016 16:40:45 +0000
Subject: [Rd] Source code of early S versions
Message-ID: <CANVKczMqo7qC1OU-a2sq3LHTP9T5k+xCuLXZUvpNmd323aWaWg@mail.gmail.com>

According to Wikipedia:

"In 1980 the first version of S was distributed outside Bell
Laboratories and in 1981 source versions were made available."

but I've been unable to locate any version of S online. Does anyone
have a copy, somewhere, rusting away on an old hard disk or slowly
flaking off a tape? I've had a rummage round the CMU Statlib on
archive.org but no sign of it, and its hard to search for "S"
generally.

 Obviously this would be for archaeological purposes, but there's
bound to be someone out there who'd like to try and compile it on a
modern system. It might at least be nice to see it in a nice format on
Gitlab, for example. But maybe there's licensing problems.

 Anyone interested in the history of S should read Richard Becker's
article from the mid 90s:

http://sas.uwaterloo.ca/~rwoldfor/software/R-code/historyOfS.pdf

Barry

[apologies if S talk is off-topic. Surprisingly I've just discovered
the S-news mailing list still runs, but looking at the recent archive
I don't think I'd get much success there]


From maechler at stat.math.ethz.ch  Mon Feb 29 19:01:58 2016
From: maechler at stat.math.ethz.ch (Martin Maechler)
Date: Mon, 29 Feb 2016 19:01:58 +0100
Subject: [Rd] [patch] Support many columns in model.matrix
In-Reply-To: <CABz6aZdZvLr=3_8yOqPr+_HYu-Vi=XQD5vKc8zATt0pFMUtypQ@mail.gmail.com>
References: <CABz6aZdZvLr=3_8yOqPr+_HYu-Vi=XQD5vKc8zATt0pFMUtypQ@mail.gmail.com>
Message-ID: <22228.34710.467047.134759@stat.math.ethz.ch>

>>>>> Karl Millar via R-devel <r-devel at r-project.org>
>>>>>     on Fri, 26 Feb 2016 15:58:20 -0800 writes:

    > Generating a model matrix with very large numbers of
    > columns overflows the stack and/or runs very slowly, due
    > to the implementation of TrimRepeats().

    > This patch modifies it to use Rf_duplicated() to find the
    > duplicates.  This makes the running time linear in the
    > number of columns and eliminates the recursive function
    > calls.

Thank you, Karl.
I've committed this (very slightly modified) to R-devel,

(also after looking for a an example that runs on a non-huge
 computer and shows the difference) :

nF <- 11 ; set.seed(1)
lff <- setNames(replicate(nF, as.factor(rpois(128, 1/4)), simplify=FALSE), letters[1:nF])
str(dd <- as.data.frame(lff)); prod(sapply(dd, nlevels))
## 'data.frame':	128 obs. of  11 variables:
##  $ a: Factor w/ 3 levels "0","1","2": 1 1 1 2 1 2 2 1 1 1 ...
##  $ b: Factor w/ 3 levels "0","1","2": 1 1 1 1 1 1 2 1 1 1 ...
##  $ c: Factor w/ 3 levels "0","1","2": 1 1 1 2 1 1 1 2 1 1 ...
##  $ d: Factor w/ 3 levels "0","1","2": 1 1 2 2 1 2 1 1 2 1 ...
##  $ e: Factor w/ 3 levels "0","1","2": 1 1 1 1 1 1 1 1 2 1 ...
##  $ f: Factor w/ 2 levels "0","1": 2 1 2 1 2 1 1 2 1 2 ...
##  $ g: Factor w/ 4 levels "0","1","2","3": 2 1 1 2 1 3 1 1 1 1 ...
##  $ h: Factor w/ 4 levels "0","1","2","4": 1 1 1 1 2 1 1 1 1 1 ...
##  $ i: Factor w/ 2 levels "0","1": 1 1 1 1 1 1 1 1 1 2 ...
##  $ j: Factor w/ 3 levels "0","1","2": 1 2 3 1 1 1 1 1 1 1 ...
##  $ k: Factor w/ 3 levels "0","1","2": 1 1 1 1 1 1 1 1 1 1 ...
## 
## [1] 139968

system.time(mff <- model.matrix(~ . ^ 11, dd, contrasts = list(a = "contr.helmert")))
##  user  system elapsed 
## 0.255   0.033   0.287  --- *with* the patch on my desktop (16 GB)
## 1.489   0.031   1.522  --- for R-patched (i.e. w/o the patch)

> dim(mff)
[1]    128 139968
> object.size(mff)
154791504 bytes

---

BTW: These example would gain tremendously if I finally got
     around to provide

   model.matrix(........, sparse = TRUE)

which would then produce a Matrix-package sparse matrix.

Even for this somewhat small case, a sparse matrix is a factor
of 13.5 x smaller :

> s1 <- object.size(mff); s2 <- object.size(M <- Matrix::Matrix(mff)); as.vector( s1/s2 )
[1] 13.47043

I'm happy to collaborate with you on adding such a (C level)
interface to sparse matrices for this case.

Martin Maechler


From Michael.Stravs at eawag.ch  Mon Feb 29 19:00:45 2016
From: Michael.Stravs at eawag.ch (Stravs, Michael)
Date: Mon, 29 Feb 2016 18:00:45 +0000
Subject: [Rd] Function name exported incorrectly in DLL,
 strange entries in tmp.def
Message-ID: <9DD73F68AC266D4AA329E07B678177B18917FAB0@EE-MBX1.ee.emp-eaw.ch>

Hi,

I originally posted this on the Rcpp github tracker, but it was suggested I post it here.

I tried to compile the package https://github.com/khabbazian/sparseAHC/ under Windows. The package requires C++11 so I had to install the R devel build with gcc 4.9.3, and the latest Rtools.

I got compilation and installation to work using Rcpp (0.12.3, from CRAN source). Package loads fine. However, when I tried to use the functions:
* the Rcpp exported function ```sparseAHC_dgCIsSymmetric``` works correctly
* the Rcpp exported function ```sparseAHC_run_sparseAHC``` doesn't work.

I could not see anything wrong with the source files and therefore looked at the DLL with DependencyWalker. Interestingly:
* ```sparseAHC_dgCIsSymmetric``` is named correctly
* ```sparseAHC_run_sparseAHC``` is named
```sparseAHC_run_sparseAHC.weak._ZNSt4listIiSaIiEE7emplaceIJiEEESt14_List_iteratorIiESt20_List_const_iteratorIiEDpOT_._ZNK4Rcpp14not_compatible4whatEv.weak._ZNSt6vectorIdSaIdEE19_M_emplace_back_auxIJdEEEvDpOT_._ZNK4Rcpp14not_compatible4whatEv.weak._ZNSt6vectorIiSaIiEE19_M_emplace_back_auxIJRKiEEEvDpOT_._ZNK4Rcpp14not_compatible4whatEv.weak._ZNSt6vectorISt4pairIS0_IiiEdESaIS2_EE12emplace_backIJS2_EEEvDpOT_._ZNK4Rcpp14not_compatible4whatEv.weak._ZNSt6vectorISt4pairIS0_IiiEdESaIS2_EE19_M_emplace_back_auxIJS2_EEEvDpOT_._ZNK4Rcpp14not_compatible4whatEv.weak._ZNSt8_Rb_treeIiSt4pairIKiSt14_List_iteratorI7EdgeObjEESt10_Select1stIS5_ESt4lessIiESaIS5_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS1_EESG_IJEEEEESt17_Rb_tree_iteratorIS5_ESt23_Rb_tree_const_iteratorIS5_EDpOT_._ZNK4Rcpp14not_compatible4whatEv.weak._ZNSt8_Rb_treeIiSt4pairIKiSt14_List_iteratorIiEESt10_Select1stIS4_ESt4lessIiESaIS4_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOiEESF_IJEEEEESt17_Rb_tree_iteratorIS4_ESt23_Rb_tree_const_iteratorIS4_EDpOT_._ZNK4Rcpp14not_compatible4whatEv```` instead!

To find out what is going on, I compiled again and captured the ```tmp.def``` which is generated during compilation. As one can see, directly behind the problematic function name there are a lot of entries starting with ```.weak``` that are apparently incorrectly picked up upon by the linker:
```
[...]
ZZN4Rcpp8internal12exitRNGScopeEvE3fun
_ZZN4Rcpp8internal13enterRNGScopeEvE3fun
sparseAHC_dgCIsSymmetric
sparseAHC_run_sparseAHC
.weak._ZNSt4listIiSaIiEE7emplaceIJiEEESt14_List_iteratorIiESt20_List_const_iteratorIiEDpOT_._ZNK4Rcpp14not_compatible4whatEv
.weak._ZNSt6vectorIdSaIdEE19_M_emplace_back_auxIJdEEEvDpOT_._ZNK4Rcpp14not_compatible4whatEv
.weak._ZNSt6vectorIiSaIiEE19_M_emplace_back_auxIJRKiEEEvDpOT_._ZNK4Rcpp14not_compatible4whatEv
.weak._ZNSt6vectorISt4pairIS0_IiiEdESaIS2_EE12emplace_backIJS2_EEEvDpOT_._ZNK4Rcpp14not_compatible4whatEv
.weak._ZNSt6vectorISt4pairIS0_IiiEdESaIS2_EE19_M_emplace_back_auxIJS2_EEEvDpOT_._ZNK4Rcpp14not_compatible4whatEv
.weak._ZNSt8_Rb_treeIiSt4pairIKiSt14_List_iteratorI7EdgeObjEESt10_Select1stIS5_ESt4lessIiESaIS5_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS1_EESG_IJEEEEESt17_Rb_tree_iteratorIS5_ESt23_Rb_tree_const_iteratorIS5_EDpOT_._ZNK4Rcpp14not_compatible4whatEv
.weak._ZNSt8_Rb_treeIiSt4pairIKiSt14_List_iteratorIiEESt10_Select1stIS4_ESt4lessIiESaIS4_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOiEESF_IJEEEEESt17_Rb_tree_iteratorIS4_ESt23_Rb_tree_const_iteratorIS4_EDpOT_._ZNK4Rcpp14not_compatible4whatEv
_Z12order_leavesRN5Eigen6MatrixIdLin1ELin1ELi0ELin1ELin1EEEi
_Z13run_sparseAHCN5Eigen12SparseMatrixIdLi0EiEEN4Rcpp6VectorILi16ENS2_15PreserveStorageEEE
_Z14dgCIsSymmetricN5Eigen12SparseMatrixIdLi0EiEEd
[...]
```

I cannot find this problem documented anywhere. But it seems that somehow additional exports are generated that start with ```.weak```, and the linker mangles all of them into one function name.

Help?

Michael Stravs
Eawag
Umweltchemie
BU E 23
?berlandstrasse 133
8600 D?bendorf
+41 58 765 6742


	[[alternative HTML version deleted]]


From jmc at r-project.org  Mon Feb 29 19:17:33 2016
From: jmc at r-project.org (John Chambers)
Date: Mon, 29 Feb 2016 10:17:33 -0800
Subject: [Rd] Source code of early S versions
In-Reply-To: <CANVKczMqo7qC1OU-a2sq3LHTP9T5k+xCuLXZUvpNmd323aWaWg@mail.gmail.com>
References: <CANVKczMqo7qC1OU-a2sq3LHTP9T5k+xCuLXZUvpNmd323aWaWg@mail.gmail.com>
Message-ID: <584E2E0F-EBCF-440B-85DD-8DE30BCEE8A4@r-project.org>

The Wikipedia statement may be a bit misleading.

S was never open source.  Source versions would only have been available with a nondisclosure agreement, and relatively few copies would have been distributed in source.  There was a small but valuable "beta test" network, mainly university statistics departments.

And two shameless plugs:

1.  there is a chapter on the history of all this in my forthcoming book on "Extending R"

2. Rick Becker will give a keynote talk on the history of S at the useR! 2016 conference (user2016.org); 2016 is the 40th anniversary of the first work on S.

John

PS:  somehow "historical" would be less unnerving than "archeological"


On Feb 29, 2016, at 8:40 AM, Barry Rowlingson <b.rowlingson at lancaster.ac.uk> wrote:

> According to Wikipedia:
> 
> "In 1980 the first version of S was distributed outside Bell
> Laboratories and in 1981 source versions were made available."
> 
> but I've been unable to locate any version of S online. Does anyone
> have a copy, somewhere, rusting away on an old hard disk or slowly
> flaking off a tape? I've had a rummage round the CMU Statlib on
> archive.org but no sign of it, and its hard to search for "S"
> generally.
> 
> Obviously this would be for archaeological purposes, but there's
> bound to be someone out there who'd like to try and compile it on a
> modern system. It might at least be nice to see it in a nice format on
> Gitlab, for example. But maybe there's licensing problems.
> 
> Anyone interested in the history of S should read Richard Becker's
> article from the mid 90s:
> 
> http://sas.uwaterloo.ca/~rwoldfor/software/R-code/historyOfS.pdf
> 
> Barry
> 
> [apologies if S talk is off-topic. Surprisingly I've just discovered
> the S-news mailing list still runs, but looking at the recent archive
> I don't think I'd get much success there]
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From kmillar at google.com  Mon Feb 29 19:22:51 2016
From: kmillar at google.com (Karl Millar)
Date: Mon, 29 Feb 2016 10:22:51 -0800
Subject: [Rd] [patch] Support many columns in model.matrix
In-Reply-To: <22228.34710.467047.134759@stat.math.ethz.ch>
References: <CABz6aZdZvLr=3_8yOqPr+_HYu-Vi=XQD5vKc8zATt0pFMUtypQ@mail.gmail.com>
	<22228.34710.467047.134759@stat.math.ethz.ch>
Message-ID: <CABz6aZd4cMhiSu7jb6oFzMULAuHEhhout12_B0Ld=0zBE8iZEQ@mail.gmail.com>

Thanks.

Couldn't you implement model.matrix(..., sparse = TRUE)  with a small
amount of R code similar to MatrixModels::model.Matrix ?

On Mon, Feb 29, 2016 at 10:01 AM, Martin Maechler
<maechler at stat.math.ethz.ch> wrote:
>>>>>> Karl Millar via R-devel <r-devel at r-project.org>
>>>>>>     on Fri, 26 Feb 2016 15:58:20 -0800 writes:
>
>     > Generating a model matrix with very large numbers of
>     > columns overflows the stack and/or runs very slowly, due
>     > to the implementation of TrimRepeats().
>
>     > This patch modifies it to use Rf_duplicated() to find the
>     > duplicates.  This makes the running time linear in the
>     > number of columns and eliminates the recursive function
>     > calls.
>
> Thank you, Karl.
> I've committed this (very slightly modified) to R-devel,
>
> (also after looking for a an example that runs on a non-huge
>  computer and shows the difference) :
>
> nF <- 11 ; set.seed(1)
> lff <- setNames(replicate(nF, as.factor(rpois(128, 1/4)), simplify=FALSE), letters[1:nF])
> str(dd <- as.data.frame(lff)); prod(sapply(dd, nlevels))
> ## 'data.frame':        128 obs. of  11 variables:
> ##  $ a: Factor w/ 3 levels "0","1","2": 1 1 1 2 1 2 2 1 1 1 ...
> ##  $ b: Factor w/ 3 levels "0","1","2": 1 1 1 1 1 1 2 1 1 1 ...
> ##  $ c: Factor w/ 3 levels "0","1","2": 1 1 1 2 1 1 1 2 1 1 ...
> ##  $ d: Factor w/ 3 levels "0","1","2": 1 1 2 2 1 2 1 1 2 1 ...
> ##  $ e: Factor w/ 3 levels "0","1","2": 1 1 1 1 1 1 1 1 2 1 ...
> ##  $ f: Factor w/ 2 levels "0","1": 2 1 2 1 2 1 1 2 1 2 ...
> ##  $ g: Factor w/ 4 levels "0","1","2","3": 2 1 1 2 1 3 1 1 1 1 ...
> ##  $ h: Factor w/ 4 levels "0","1","2","4": 1 1 1 1 2 1 1 1 1 1 ...
> ##  $ i: Factor w/ 2 levels "0","1": 1 1 1 1 1 1 1 1 1 2 ...
> ##  $ j: Factor w/ 3 levels "0","1","2": 1 2 3 1 1 1 1 1 1 1 ...
> ##  $ k: Factor w/ 3 levels "0","1","2": 1 1 1 1 1 1 1 1 1 1 ...
> ##
> ## [1] 139968
>
> system.time(mff <- model.matrix(~ . ^ 11, dd, contrasts = list(a = "contr.helmert")))
> ##  user  system elapsed
> ## 0.255   0.033   0.287  --- *with* the patch on my desktop (16 GB)
> ## 1.489   0.031   1.522  --- for R-patched (i.e. w/o the patch)
>
>> dim(mff)
> [1]    128 139968
>> object.size(mff)
> 154791504 bytes
>
> ---
>
> BTW: These example would gain tremendously if I finally got
>      around to provide
>
>    model.matrix(........, sparse = TRUE)
>
> which would then produce a Matrix-package sparse matrix.
>
> Even for this somewhat small case, a sparse matrix is a factor
> of 13.5 x smaller :
>
>> s1 <- object.size(mff); s2 <- object.size(M <- Matrix::Matrix(mff)); as.vector( s1/s2 )
> [1] 13.47043
>
> I'm happy to collaborate with you on adding such a (C level)
> interface to sparse matrices for this case.
>
> Martin Maechler


From murdoch.duncan at gmail.com  Mon Feb 29 19:30:13 2016
From: murdoch.duncan at gmail.com (Duncan Murdoch)
Date: Mon, 29 Feb 2016 13:30:13 -0500
Subject: [Rd] iconv to UTF-16 encoding produces error due to embedded
 nulls (write.table with fileEncoding param)
In-Reply-To: <56CEDD80.6080705@aalto.fi>
References: <1455643514.15123.0.camel@i3770> <1456163159.3028.6.camel@i3770>
	<22220.10338.593628.170771@stat.math.ethz.ch>
	<56CC4B39.6010702@aalto.fi>
	<56CECA06.1060803@aalto.fi> <56CEDD80.6080705@aalto.fi>
Message-ID: <56D48E35.5040903@gmail.com>

I have just committed your first patch (the strlen() replacement) to 
R-devel, and will soon put it in R-patched as well.  I wont have time to 
look at this again before the 3.2.4 release, so your file.show() patch 
isn't going to make it unless someone else gets to it.

There's still a faint chance that I'll do more in R-devel before 3.3.0, 
but I think it's best if there were bug reports about both of these 
problems so they don't get forgotten.  Since the first one is mainly a 
Windows problem, I'll write that one up; I'd appreciate it if you could 
write up the file.show() issue, after checking against R-devel rev 70247 
or higher.

Duncan Murdoch

On 25/02/2016 5:54 AM, Mikko Korpela wrote:
> On 25.02.2016 11:31, Mikko Korpela wrote:
>> On 23.02.2016 14:06, Mikko Korpela wrote:
>>> On 23.02.2016 11:37, Martin Maechler wrote:
>>>>>>>>> nospam at altfeld-im de <nospam at altfeld-im.de>
>>>>>>>>>      on Mon, 22 Feb 2016 18:45:59 +0100 writes:
>>>>
>>>>      > Dear R developers
>>>>      > I think I have found a bug that can be reproduced with two lines of code
>>>>      > and I am very thankful to get your first assessment or feed-back on my
>>>>      > report.
>>>>
>>>>      > If this is the wrong mailing list or I did something wrong
>>>>      > (e. g. semi "anonymous" email address to protect my privacy and defend
>>>>      > unwanted spam) please let me know since I am new here.
>>>>
>>>>      > Thank you very much :-)
>>>>
>>>>      > J. Altfeld
>>>>
>>>> Dear J.,
>>>> (yes, a bit less anonymity would be very welcomed here!),
>>>>
>>>> You are right, this is a bug, at least in the documentation, but
>>>> probably "all real", indeed,
>>>>
>>>> but read on.
>>>>
>>>>      > On Tue, 2016-02-16 at 18:25 +0100, nospam at altfeld-im.de wrote:
>>>>      >>
>>>>      >>
>>>>      >> If I execute the code from the "?write.table" examples section
>>>>      >>
>>>>      >> x <- data.frame(a = I("a \" quote"), b = pi)
>>>>      >> # (ommited code)
>>>>      >> write.csv(x, file = "foo.csv", fileEncoding = "UTF-16LE")
>>>>      >>
>>>>      >> the resulting CSV file has a size of 6 bytes which is too short
>>>>      >> (truncated):
>>>>      >>
>>>>      >> """,3
>>>>
>>>> reproducibly, yes.
>>>> If you look at what write.csv does
>>>> and then simplify, you can get a similar wrong result by
>>>>
>>>>    write.table(x, file = "foo.tab", fileEncoding = "UTF-16LE")
>>>>
>>>> which results in a file with one line
>>>>
>>>> """ 3
>>>>
>>>> and if you debug  write.table() you see that its building blocks
>>>> here are
>>>> 	 file <- file(........, encoding = fileEncoding)
>>>>
>>>> a 	 writeLines(*, file=file)  for the column headers,
>>>>
>>>> and then "deeper down" C code which I did not investigate.
>>>
>>> I took a look at connections.c. There is a call to strlen() that gets
>>> confused by null characters. I think the obvious fix is to avoid the
>>> call to strlen() as the size is already known:
>>>
>>> Index: src/main/connections.c
>>> ===================================================================
>>> --- src/main/connections.c	(revision 70213)
>>> +++ src/main/connections.c	(working copy)
>>> @@ -369,7 +369,7 @@
>>>   		/* is this safe? */
>>>   		warning(_("invalid char string in output conversion"));
>>>   	    *ob = '\0';
>>> -	    con->write(outbuf, 1, strlen(outbuf), con);
>>> +	    con->write(outbuf, 1, ob - outbuf, con);
>>>   	} while(again && inb > 0);  /* it seems some iconv signal -1 on
>>>   				       zero-length input */
>>>       } else
>>>
>>>
>>>>
>>>> But just looking a bit at such a file() object with writeLines()
>>>> seems slightly revealing, as e.g., 'eol' does not seem to
>>>> "work" for this encoding:
>>>>
>>>>      > fn <- tempfile("ffoo"); ff <- file(fn, open="w", encoding = "UTF-16LE")
>>>>      > writeLines(LETTERS[3:1], ff); writeLines("|", ff); writeLines(">a", ff)
>>>>      > close(ff)
>>>>      > file.show(fn)
>>>>      CBA|>
>>>>      > file.size(fn)
>>>>      [1] 5
>>>>      >
>>>
>>> With the patch applied:
>>>
>>>      > readLines(fn, encoding="UTF-16LE", skipNul=TRUE)
>>>      [1] "C"  "B"  "A"  "|"  ">a"
>>>      > file.size(fn)
>>>      [1] 22
>> I just realized that I was misusing the encoding argument of
>> readLines(). The code above works by accident, but the following would
>> be more appropriate:
>>
>>      > ff <- file(fn, open="r", encoding="UTF-16LE")
>>      > readLines(ff)
>>      [1] "C"  "B"  "A"  "|"  ">a"
>>      > close(ff)
>>
>> Testing on Linux, with the patch applied. (As noted by Duncan Murdoch,
>> the patch is incomplete on Windows.)
> Before inspecting the file with readLines() I tried file.show() but it
> did not work as expected. On Linux using a UTF-8 locale, the result of
> trying to show the truly UTF-16LE encoded file with
>
>      > file.show(fn, encoding="UTF-16LE")
>
> was a pager showing "<43>" (quotes not included) followed by several
> empty lines.
>
> With the following patch, the command works correctly (in this case, on
> this platform, not tested comprehensively). The idea is to read the
> input file "raw" in order to avoid problems with null characters. The
> input then needs to be split into lines after iconv(), or it could be
> written to the output file with cat() if the style of line termination
> characters does not matter. The 'perl = TRUE' is for assumed performance
> advantage only. It can be removed, or one might want to test if there is
> a significant difference one way or the other.
>
> - Mikko
>
> Index: src/library/base/R/files.R
> ===================================================================
> --- src/library/base/R/files.R	(revision 70217)
> +++ src/library/base/R/files.R	(working copy)
> @@ -50,10 +50,13 @@
>           for(i in seq_along(files)) {
>               f <- files[i]
>               tf <- tempfile()
> -            tmp <- readLines(f, warn = FALSE)
> +            tmp <- list(readBin(f, "raw", file.size(f)))
>               tmp2 <- try(iconv(tmp, encoding, "", "byte"))
>               if(inherits(tmp2, "try-error")) file.copy(f, tf)
> -            else writeLines(tmp2, tf)
> +            else {
> +                tmp2 <- strsplit(tmp2, "\r\n?|\n", perl = TRUE)[[1L]]
> +                writeLines(tmp2, tf)
> +            }
>               files[i] <- tf
>               if(delete.file) unlink(f)
>           }
>


From b.rowlingson at lancaster.ac.uk  Mon Feb 29 19:54:40 2016
From: b.rowlingson at lancaster.ac.uk (Barry Rowlingson)
Date: Mon, 29 Feb 2016 18:54:40 +0000
Subject: [Rd] Source code of early S versions
In-Reply-To: <cd82998773964e899c6cd4a1a947a8b8@EX-0-HT0.lancs.local>
References: <CANVKczMqo7qC1OU-a2sq3LHTP9T5k+xCuLXZUvpNmd323aWaWg@mail.gmail.com>
	<cd82998773964e899c6cd4a1a947a8b8@EX-0-HT0.lancs.local>
Message-ID: <CANVKczNSrz-imi01Rxsph3p4y_N2OMEFHcKAdH+W4E-qMCJh1w@mail.gmail.com>

On Mon, Feb 29, 2016 at 6:17 PM, John Chambers <jmc at r-project.org> wrote:
> The Wikipedia statement may be a bit misleading.
>
> S was never open source.  Source versions would only have been available with a nondisclosure agreement, and relatively few copies would have been distributed in source.  There was a small but valuable "beta test" network, mainly university statistics departments.

So it was free (or at least distribution cost only), but with a
nondisclosure agreement? Did binaries circulate freely, legally or
otherwise? Okay, guess I'll read the book.

 I'm sure I saw S source early in my career (1990 or so), possibly on
an early Sun 3/60 system or even the on-the-way-out Whitechapel MG-1
workstations.

> And two shameless plugs:
>
> 1.  there is a chapter on the history of all this in my forthcoming book on "Extending R"

 That will sit nicely on the shelf next to "Extending The S System"
that Allan Wilks gave me :)

> PS:  somehow "historical" would be less unnerving than "archeological"

 At least I didn't say palaeontological.

Thanks for the response.

Barry


From jari.oksanen at oulu.fi  Mon Feb 29 20:32:10 2016
From: jari.oksanen at oulu.fi (Jari Oksanen)
Date: Mon, 29 Feb 2016 19:32:10 +0000
Subject: [Rd] Source code of early S versions
In-Reply-To: <CANVKczNSrz-imi01Rxsph3p4y_N2OMEFHcKAdH+W4E-qMCJh1w@mail.gmail.com>
References: <CANVKczMqo7qC1OU-a2sq3LHTP9T5k+xCuLXZUvpNmd323aWaWg@mail.gmail.com>
	<cd82998773964e899c6cd4a1a947a8b8@EX-0-HT0.lancs.local>
	<CANVKczNSrz-imi01Rxsph3p4y_N2OMEFHcKAdH+W4E-qMCJh1w@mail.gmail.com>
Message-ID: <F2A150C3-EA59-40B5-B05D-225A740008C4@oulu.fi>


> On 29 Feb 2016, at 20:54 pm, Barry Rowlingson <b.rowlingson at lancaster.ac.uk> wrote:
> 
> On Mon, Feb 29, 2016 at 6:17 PM, John Chambers <jmc at r-project.org> wrote:
>> The Wikipedia statement may be a bit misleading.
>> 
>> S was never open source.  Source versions would only have been available with a nondisclosure agreement, and relatively few copies would have been distributed in source.  There was a small but valuable "beta test" network, mainly university statistics departments.
> 
> So it was free (or at least distribution cost only), but with a
> nondisclosure agreement? Did binaries circulate freely, legally or
> otherwise? Okay, guess I'll read the book.
> 
I don?t think I have seen S source, but some other Bell software has license of this type:

C THIS INFORMATION IS PROPRIETARY AND IS THE                                     
C PROPERTY OF BELL TELEPHONE LABORATORIES,                                       
C INCORPORATED.  ITS REPRODUCTION OR DISCLOSURE                                  
C TO OTHERS, EITHER ORALLY OR IN WRITING, IS                                     
C PROHIBITED WITHOUT WRITTEN PRERMISSION OF                                      
C BELL LABORATORIES. 

C IT IS UNDERSTOOD THAT THESE MATERIALS WILL BE USED FOR                         
C EDUCATIONAL AND INSTRUCTIONAL PURPOSES ONLY.    

(Obviously in FORTRAN)

So the code was ?open? in the sense that you could see the code, and it had to be ?open", because source code  was the only way to distribute software before the era of widespread platforms allowing binary distributions (such as VAX/VMS or Intel/MS-DOS). However, the license in effect says that although you can see the code, you are not even allowed to tell anybody that you have seen it. I don?t know how this is interpreted currently, but you may ask the current owner, Nokia.

Cheers, Jari Oksanen

From mikko.korpela at aalto.fi  Mon Feb 29 21:30:41 2016
From: mikko.korpela at aalto.fi (Mikko Korpela)
Date: Mon, 29 Feb 2016 22:30:41 +0200
Subject: [Rd] iconv to UTF-16 encoding produces error due to embedded
 nulls (write.table with fileEncoding param)
In-Reply-To: <56D48E35.5040903@gmail.com>
References: <1455643514.15123.0.camel@i3770> <1456163159.3028.6.camel@i3770>
	<22220.10338.593628.170771@stat.math.ethz.ch>
	<56CC4B39.6010702@aalto.fi>
	<56CECA06.1060803@aalto.fi> <56CEDD80.6080705@aalto.fi>
	<56D48E35.5040903@gmail.com>
Message-ID: <56D4AA71.9030508@aalto.fi>

The file.show() issue is now in the bug tracker. I used a slightly
different example to demonstrate the problem.

https://bugs.r-project.org/bugzilla3/show_bug.cgi?id=16738

- Mikko

On 29.02.2016 20:30, Duncan Murdoch wrote:
> I have just committed your first patch (the strlen() replacement) to
> R-devel, and will soon put it in R-patched as well.  I wont have time to
> look at this again before the 3.2.4 release, so your file.show() patch
> isn't going to make it unless someone else gets to it.
> 
> There's still a faint chance that I'll do more in R-devel before 3.3.0,
> but I think it's best if there were bug reports about both of these
> problems so they don't get forgotten.  Since the first one is mainly a
> Windows problem, I'll write that one up; I'd appreciate it if you could
> write up the file.show() issue, after checking against R-devel rev 70247
> or higher.
> 
> Duncan Murdoch
> 
> On 25/02/2016 5:54 AM, Mikko Korpela wrote:
>> On 25.02.2016 11:31, Mikko Korpela wrote:
>>> On 23.02.2016 14:06, Mikko Korpela wrote:
>>>> On 23.02.2016 11:37, Martin Maechler wrote:
>>>>>>>>>> nospam at altfeld-im de <nospam at altfeld-im.de>
>>>>>>>>>>      on Mon, 22 Feb 2016 18:45:59 +0100 writes:
>>>>>
>>>>>      > Dear R developers
>>>>>      > I think I have found a bug that can be reproduced with two
>>>>> lines of code
>>>>>      > and I am very thankful to get your first assessment or
>>>>> feed-back on my
>>>>>      > report.
>>>>>
>>>>>      > If this is the wrong mailing list or I did something wrong
>>>>>      > (e. g. semi "anonymous" email address to protect my privacy
>>>>> and defend
>>>>>      > unwanted spam) please let me know since I am new here.
>>>>>
>>>>>      > Thank you very much :-)
>>>>>
>>>>>      > J. Altfeld
>>>>>
>>>>> Dear J.,
>>>>> (yes, a bit less anonymity would be very welcomed here!),
>>>>>
>>>>> You are right, this is a bug, at least in the documentation, but
>>>>> probably "all real", indeed,
>>>>>
>>>>> but read on.
>>>>>
>>>>>      > On Tue, 2016-02-16 at 18:25 +0100, nospam at altfeld-im.de wrote:
>>>>>      >>
>>>>>      >>
>>>>>      >> If I execute the code from the "?write.table" examples section
>>>>>      >>
>>>>>      >> x <- data.frame(a = I("a \" quote"), b = pi)
>>>>>      >> # (ommited code)
>>>>>      >> write.csv(x, file = "foo.csv", fileEncoding = "UTF-16LE")
>>>>>      >>
>>>>>      >> the resulting CSV file has a size of 6 bytes which is too
>>>>> short
>>>>>      >> (truncated):
>>>>>      >>
>>>>>      >> """,3
>>>>>
>>>>> reproducibly, yes.
>>>>> If you look at what write.csv does
>>>>> and then simplify, you can get a similar wrong result by
>>>>>
>>>>>    write.table(x, file = "foo.tab", fileEncoding = "UTF-16LE")
>>>>>
>>>>> which results in a file with one line
>>>>>
>>>>> """ 3
>>>>>
>>>>> and if you debug  write.table() you see that its building blocks
>>>>> here are
>>>>>      file <- file(........, encoding = fileEncoding)
>>>>>
>>>>> a      writeLines(*, file=file)  for the column headers,
>>>>>
>>>>> and then "deeper down" C code which I did not investigate.
>>>>
>>>> I took a look at connections.c. There is a call to strlen() that gets
>>>> confused by null characters. I think the obvious fix is to avoid the
>>>> call to strlen() as the size is already known:
>>>>
>>>> Index: src/main/connections.c
>>>> ===================================================================
>>>> --- src/main/connections.c    (revision 70213)
>>>> +++ src/main/connections.c    (working copy)
>>>> @@ -369,7 +369,7 @@
>>>>           /* is this safe? */
>>>>           warning(_("invalid char string in output conversion"));
>>>>           *ob = '\0';
>>>> -        con->write(outbuf, 1, strlen(outbuf), con);
>>>> +        con->write(outbuf, 1, ob - outbuf, con);
>>>>       } while(again && inb > 0);  /* it seems some iconv signal -1 on
>>>>                          zero-length input */
>>>>       } else
>>>>
>>>>
>>>>>
>>>>> But just looking a bit at such a file() object with writeLines()
>>>>> seems slightly revealing, as e.g., 'eol' does not seem to
>>>>> "work" for this encoding:
>>>>>
>>>>>      > fn <- tempfile("ffoo"); ff <- file(fn, open="w", encoding =
>>>>> "UTF-16LE")
>>>>>      > writeLines(LETTERS[3:1], ff); writeLines("|", ff);
>>>>> writeLines(">a", ff)
>>>>>      > close(ff)
>>>>>      > file.show(fn)
>>>>>      CBA|>
>>>>>      > file.size(fn)
>>>>>      [1] 5
>>>>>      >
>>>>
>>>> With the patch applied:
>>>>
>>>>      > readLines(fn, encoding="UTF-16LE", skipNul=TRUE)
>>>>      [1] "C"  "B"  "A"  "|"  ">a"
>>>>      > file.size(fn)
>>>>      [1] 22
>>> I just realized that I was misusing the encoding argument of
>>> readLines(). The code above works by accident, but the following would
>>> be more appropriate:
>>>
>>>      > ff <- file(fn, open="r", encoding="UTF-16LE")
>>>      > readLines(ff)
>>>      [1] "C"  "B"  "A"  "|"  ">a"
>>>      > close(ff)
>>>
>>> Testing on Linux, with the patch applied. (As noted by Duncan Murdoch,
>>> the patch is incomplete on Windows.)
>> Before inspecting the file with readLines() I tried file.show() but it
>> did not work as expected. On Linux using a UTF-8 locale, the result of
>> trying to show the truly UTF-16LE encoded file with
>>
>>      > file.show(fn, encoding="UTF-16LE")
>>
>> was a pager showing "<43>" (quotes not included) followed by several
>> empty lines.
>>
>> With the following patch, the command works correctly (in this case, on
>> this platform, not tested comprehensively). The idea is to read the
>> input file "raw" in order to avoid problems with null characters. The
>> input then needs to be split into lines after iconv(), or it could be
>> written to the output file with cat() if the style of line termination
>> characters does not matter. The 'perl = TRUE' is for assumed performance
>> advantage only. It can be removed, or one might want to test if there is
>> a significant difference one way or the other.
>>
>> - Mikko
>>
>> Index: src/library/base/R/files.R
>> ===================================================================
>> --- src/library/base/R/files.R    (revision 70217)
>> +++ src/library/base/R/files.R    (working copy)
>> @@ -50,10 +50,13 @@
>>           for(i in seq_along(files)) {
>>               f <- files[i]
>>               tf <- tempfile()
>> -            tmp <- readLines(f, warn = FALSE)
>> +            tmp <- list(readBin(f, "raw", file.size(f)))
>>               tmp2 <- try(iconv(tmp, encoding, "", "byte"))
>>               if(inherits(tmp2, "try-error")) file.copy(f, tf)
>> -            else writeLines(tmp2, tf)
>> +            else {
>> +                tmp2 <- strsplit(tmp2, "\r\n?|\n", perl = TRUE)[[1L]]
>> +                writeLines(tmp2, tf)
>> +            }
>>               files[i] <- tf
>>               if(delete.file) unlink(f)
>>           }


From henrik.bengtsson at gmail.com  Mon Feb 29 21:54:18 2016
From: henrik.bengtsson at gmail.com (Henrik Bengtsson)
Date: Mon, 29 Feb 2016 12:54:18 -0800
Subject: [Rd] Milestone: 8000 packages on CRAN
Message-ID: <CAFDcVCSwKGzHEgVytUBeJ3k4QE_fPFTk0njk-9TBpH4_o5f4Vg@mail.gmail.com>

Another 1000 packages were added to CRAN, which took less than 7
months. Today (February 29, 2017), the Comprehensive R Archive Network
(CRAN) [1] reports:

?Currently, the CRAN package repository features 8002 available packages.?

The rate with which new packages are added to CRAN is increasing.  In
2014-2015 we had 1000 packages added to CRAN in 355 days (2.8 per
day), the following 1000 packages took 287 days (3.5 per day) and now
the most recent 1000 packages clocked in at an impressive 201 days
(5.0 per day).  Since the start of CRAN 18.9 years ago on April 23,
1997 [2], there has been on average one new package appearing on CRAN
every 20.6 hours - it is actually more frequent than that because
dropped/archived packages are not accounted for. The 8000 packages on
CRAN are maintained by ~4279 people [3].

Thanks to the CRAN team and to all package developers. You can give
back by carefully reporting bugs to the maintainers, properly citing
any packages you use in your publications, cf. citation("pkg name")
and help out helping others using the R.

Milestones:

2016-02-29: 8000 packages [this post]
2015-08-12: 7000 packages [11]
2014-10-29: 6000 packages [10]
2013-11-08: 5000 packages [9]
2012-08-23: 4000 packages [8]
2011-05-12: 3000 packages [7]
2009-10-04: 2000 packages [6]
2007-04-12: 1000 packages [5]
2004-10-01: 500 packages [4]
2003-04-01: 250 packages [4]

These data are for CRAN only. There are many more packages elsewhere,
e.g. R-Forge, Bioconductor, Github etc.

[1] http://cran.r-project.org/web/packages/
[2] https://en.wikipedia.org/wiki/R_(programming_language)#Milestones
[3] http://www.r-pkg.org/
[4] Private data
[5] https://stat.ethz.ch/pipermail/r-devel/2007-April/045359.html
[6] https://stat.ethz.ch/pipermail/r-devel/2009-October/055049.html
[7] https://stat.ethz.ch/pipermail/r-devel/2011-May/061002.html
[8] https://stat.ethz.ch/pipermail/r-devel/2012-August/064675.html
[9] https://stat.ethz.ch/pipermail/r-devel/2013-November/067935.html
[10] https://stat.ethz.ch/pipermail/r-devel/2014-October/069997.html
[11] https://stat.ethz.ch/pipermail/r-package-devel/2015q3/000393.html

Thanks

Henrik
(a long-term fan)


