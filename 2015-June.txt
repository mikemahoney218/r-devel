From henrik.bengtsson at ucsf.edu  Mon Jun  1 02:02:22 2015
From: henrik.bengtsson at ucsf.edu (Henrik Bengtsson)
Date: Sun, 31 May 2015 17:02:22 -0700
Subject: [Rd] sum(...,
 na.rm=FALSE): Summing over NA_real_ values much more expensive than
 non-NAs for na.rm=FALSE? Hmm...
Message-ID: <CAFDcVCTOXSd2FHkTPSkJd0FYrTdUnKK_3943WSgY_A3cg9ziQw@mail.gmail.com>

I'm observing that base::sum(x, na.rm=FALSE) for typeof(x) == "double"
is much more time consuming when there are missing values versus when
there are not.  I'm observing this on both Window and Linux, but it's
quite surprising to me.  Currently, my main suspect is settings in on
how R was built.  The second suspect is my brain.  I hope that someone
can clarify the below results and confirm or not whether they see the
same.  Note, this is for "doubles", so I'm not expecting
early-stopping as for "integers" (where testing for NA is cheap).

On R 3.2.0, on Windows (using the official CRAN builds), on Linux
(local built), and on OS X (official AT&T builds), I get:

> x <- rep(0, 1e8)
> stopifnot(typeof(x) == "double")
> system.time(sum(x, na.rm=FALSE))
   user  system elapsed
   0.19    0.01    0.20

> y <- rep(NA_real_, 1e8)
> stopifnot(typeof(y) == "double")
> system.time(sum(y, na.rm=FALSE))
   user  system elapsed
   9.54    0.00    9.55

> z <- x; z[length(z)/2] <- NA_real_
> stopifnot(typeof(z) == "double")
> system.time(sum(z, na.rm=FALSE))
   user  system elapsed
   4.49    0.00    4.51

Following the source code, I'm pretty sure the code
(https://github.com/wch/r-source/blob/trunk/src/main/summary.c#L112-L128)
performing the calculation is:

static Rboolean rsum(double *x, R_xlen_t n, double *value, Rboolean narm)
{
  LDOUBLE s = 0.0;
  Rboolean updated = FALSE;
  for (R_xlen_t i = 0; i < n; i++) {
    if (!narm || !ISNAN(x[i])) {
      if(!updated) updated = TRUE;
        s += x[i];
    }
  }
  if(s > DBL_MAX) *value = R_PosInf;
  else if (s < -DBL_MAX) *value = R_NegInf;
  else *value = (double) s;
  return updated;
}

In other words, when na.rm=FALSE, that inner for loop:

  for (R_xlen_t i = 0; i < n; i++) {
    if (!narm || !ISNAN(x[i])) {
      if(!updated) updated = TRUE;
        s += x[i];
    }
  }

should effectively become (because !ISNAN(x[i]) "does not make a difference"):

  for (R_xlen_t i = 0; i < n; i++) {
    if (!narm) {
      if(!updated) updated = TRUE;
        s += x[i];
    }
  }

That is, sum(x, na.rm=FALSE) basically spends time on `s += x[i]`.
Now, I have always been under impression that summing with NA:s is
*not* more expensive that summing over regular (double) values, which
is confirmed by the below example, but the above benchmarking
disagree.  It looks like there is a big overhead keeping track of the
sum `s` being NA, which is supported by the fact that summing over 'z'
is costs half of 'y'.

Now, I *cannot* reproduce the above using the following 'inline' example:

> sum2 <- inline::cfunction(sig=c(x="double", narm="logical"), body='
 double *x_ = REAL(x);
 int narm_ = asLogical(narm);
 int n = length(x);
 double sum = 0;
 for (R_xlen_t i = 0; i < n; i++) {
   if (!narm_ || !ISNAN(x_[i])) sum += x_[i];
 }
 return ScalarReal(sum);
')

> x <- rep(0, 1e8)
> stopifnot(typeof(x) == "double")
> system.time(sum2(x, narm=FALSE))
   user  system elapsed
   0.16    0.00    0.16

> y <- rep(NA_real_, 1e8)
> stopifnot(typeof(y) == "double")
> system.time(sum2(y, narm=FALSE))
   user  system elapsed
   0.16    0.00    0.15

> z <- x; z[length(z)/2] <- NA_real_
> stopifnot(typeof(z) == "double")
> system.time(sum2(z, narm=FALSE))
   user  system elapsed
   0.16    0.00    0.15

This is why I suspect it's related to how R was configured when it was
built. What's going on? Can someone please bring some light on this?

Thanks

Henrik


From henrik.bengtsson at ucsf.edu  Mon Jun  1 03:08:50 2015
From: henrik.bengtsson at ucsf.edu (Henrik Bengtsson)
Date: Sun, 31 May 2015 18:08:50 -0700
Subject: [Rd] sum(...,
 na.rm=FALSE): Summing over NA_real_ values much more expensive than
 non-NAs for na.rm=FALSE? Hmm...
In-Reply-To: <CAFDcVCTOXSd2FHkTPSkJd0FYrTdUnKK_3943WSgY_A3cg9ziQw@mail.gmail.com>
References: <CAFDcVCTOXSd2FHkTPSkJd0FYrTdUnKK_3943WSgY_A3cg9ziQw@mail.gmail.com>
Message-ID: <CAFDcVCSs1OyiTHkC=XQ89mrNRDwvnCN-nh_z75F2xOiTmaEqTQ@mail.gmail.com>

This is a great example how you cannot figure it out after spending
two hours troubleshooting, but a few minutes after you post to
R-devel, it's just jumps to you (is there a word for this other than
"impatient"?);

Let me answer my own question.  The discrepancy between my sum2() code
and the internal code for base::sum() is that the latter uses LDOUBLE
= long double (on some system it's only double, cf.
https://github.com/wch/r-source/blob/trunk/src/nmath/nmath.h#L28-L33),
whereas my sum2() code uses double.  So using long double, I can
reproduce the penalty of having NA_real_ with na.rm=FALSE;

> sum3 <- inline::cfunction(sig=c(x="double", narm="logical"), body='
#define LDOUBLE long double
 double *x_ = REAL(x);
 int narm_ = asLogical(narm);
 int n = length(x);
 LDOUBLE sum = 0.0;
 for (R_xlen_t i = 0; i < n; i++) {
   if (!narm_ || !ISNAN(x_[i])) sum += x_[i];
 }
 return ScalarReal((double)sum);
')

> x <- rep(0, 1e8)
> stopifnot(typeof(x) == "double")
> system.time(sum3(x, narm=FALSE))
   user  system elapsed
   0.40    0.00    0.44
> y <- rep(NA_real_, 1e8)
> stopifnot(typeof(y) == "double")
> system.time(sum3(y, narm=FALSE))
   user  system elapsed
   9.80    0.00    9.84
> z <- x; z[length(z)/2] <- NA_real_
> stopifnot(typeof(z) == "double")
> system.time(sum3(z, narm=FALSE))
   user  system elapsed
   4.49    0.00    4.50

This might even be what the following comment refers to:

/* Required by C99 but might be slow */
#ifdef HAVE_LONG_DOUBLE
# define LDOUBLE long double
#else
# define LDOUBLE double
#endif

So now I should rephrase my question: Is there away to avoid this
penalty when using 'long double'?  Is this something the compiler can
be clever about, or is the only solution to not use 'long double'?

/Henrik

On Sun, May 31, 2015 at 5:02 PM, Henrik Bengtsson
<henrik.bengtsson at ucsf.edu> wrote:
> I'm observing that base::sum(x, na.rm=FALSE) for typeof(x) == "double"
> is much more time consuming when there are missing values versus when
> there are not.  I'm observing this on both Window and Linux, but it's
> quite surprising to me.  Currently, my main suspect is settings in on
> how R was built.  The second suspect is my brain.  I hope that someone
> can clarify the below results and confirm or not whether they see the
> same.  Note, this is for "doubles", so I'm not expecting
> early-stopping as for "integers" (where testing for NA is cheap).
>
> On R 3.2.0, on Windows (using the official CRAN builds), on Linux
> (local built), and on OS X (official AT&T builds), I get:
>
>> x <- rep(0, 1e8)
>> stopifnot(typeof(x) == "double")
>> system.time(sum(x, na.rm=FALSE))
>    user  system elapsed
>    0.19    0.01    0.20
>
>> y <- rep(NA_real_, 1e8)
>> stopifnot(typeof(y) == "double")
>> system.time(sum(y, na.rm=FALSE))
>    user  system elapsed
>    9.54    0.00    9.55
>
>> z <- x; z[length(z)/2] <- NA_real_
>> stopifnot(typeof(z) == "double")
>> system.time(sum(z, na.rm=FALSE))
>    user  system elapsed
>    4.49    0.00    4.51
>
> Following the source code, I'm pretty sure the code
> (https://github.com/wch/r-source/blob/trunk/src/main/summary.c#L112-L128)
> performing the calculation is:
>
> static Rboolean rsum(double *x, R_xlen_t n, double *value, Rboolean narm)
> {
>   LDOUBLE s = 0.0;
>   Rboolean updated = FALSE;
>   for (R_xlen_t i = 0; i < n; i++) {
>     if (!narm || !ISNAN(x[i])) {
>       if(!updated) updated = TRUE;
>         s += x[i];
>     }
>   }
>   if(s > DBL_MAX) *value = R_PosInf;
>   else if (s < -DBL_MAX) *value = R_NegInf;
>   else *value = (double) s;
>   return updated;
> }
>
> In other words, when na.rm=FALSE, that inner for loop:
>
>   for (R_xlen_t i = 0; i < n; i++) {
>     if (!narm || !ISNAN(x[i])) {
>       if(!updated) updated = TRUE;
>         s += x[i];
>     }
>   }
>
> should effectively become (because !ISNAN(x[i]) "does not make a difference"):
>
>   for (R_xlen_t i = 0; i < n; i++) {
>     if (!narm) {
>       if(!updated) updated = TRUE;
>         s += x[i];
>     }
>   }
>
> That is, sum(x, na.rm=FALSE) basically spends time on `s += x[i]`.
> Now, I have always been under impression that summing with NA:s is
> *not* more expensive that summing over regular (double) values, which
> is confirmed by the below example, but the above benchmarking
> disagree.  It looks like there is a big overhead keeping track of the
> sum `s` being NA, which is supported by the fact that summing over 'z'
> is costs half of 'y'.
>
> Now, I *cannot* reproduce the above using the following 'inline' example:
>
>> sum2 <- inline::cfunction(sig=c(x="double", narm="logical"), body='
>  double *x_ = REAL(x);
>  int narm_ = asLogical(narm);
>  int n = length(x);
>  double sum = 0;
>  for (R_xlen_t i = 0; i < n; i++) {
>    if (!narm_ || !ISNAN(x_[i])) sum += x_[i];
>  }
>  return ScalarReal(sum);
> ')
>
>> x <- rep(0, 1e8)
>> stopifnot(typeof(x) == "double")
>> system.time(sum2(x, narm=FALSE))
>    user  system elapsed
>    0.16    0.00    0.16
>
>> y <- rep(NA_real_, 1e8)
>> stopifnot(typeof(y) == "double")
>> system.time(sum2(y, narm=FALSE))
>    user  system elapsed
>    0.16    0.00    0.15
>
>> z <- x; z[length(z)/2] <- NA_real_
>> stopifnot(typeof(z) == "double")
>> system.time(sum2(z, narm=FALSE))
>    user  system elapsed
>    0.16    0.00    0.15
>
> This is why I suspect it's related to how R was configured when it was
> built. What's going on? Can someone please bring some light on this?
>
> Thanks
>
> Henrik


From Kurt.Hornik at wu.ac.at  Mon Jun  1 14:02:05 2015
From: Kurt.Hornik at wu.ac.at (Kurt Hornik)
Date: Mon, 1 Jun 2015 14:02:05 +0200
Subject: [Rd] NEWS.md support on CRAN
In-Reply-To: <581D2C19-ED47-4D1D-8FC7-C4B4F368E637@gmail.com>
References: <4819669E-8260-47B0-96BF-DC2B29E6BE21@me.com>
	<555FD2FE.8050600@gmail.com>
	<21856.13500.513608.759602@fangorn.hornik.net>
	<B98D36A9-901A-4413-88C0-22D7E923612E@me.com>
	<581D2C19-ED47-4D1D-8FC7-C4B4F368E637@gmail.com>
Message-ID: <21868.18877.410651.592015@fangorn.hornik.net>

>>>>> peter dalgaard writes:

>> On 30 May 2015, at 01:20 , Imanuel Costigan <i.costigan at me.com> wrote:
>> 
>> So I assume this commit means NEWS.md is now no longer on blacklist? 
>> 

> ....in the development version. Not true of released versions.

Now also in r-patched.

-k

> -pd


>> https://github.com/wch/r-source/commit/9ffe87264a1cd59a31a829f72d57af0f1bfa327a
>> 
>> Sent from my iPad
>> 
>> On 23 May 2015, at 6:05 pm, Kurt Hornik <Kurt.Hornik at wu.ac.at> wrote:
>> 
>>>>>>>> Duncan Murdoch writes:
>>> 
>>>>> On 22/05/2015 8:49 PM, Imanuel Costigan wrote:
>>>>> Are there any plans for CRAN to support NEWS files in markdown? Bit of a hassle to go the the package?s Github (or other like) site to read NEWS.
>>> 
>>>> Not as far as I know.  There have been discussions about increasing the
>>>> support of Markdown, but so far the conclusion has been that it's too
>>>> hard to do -- the support is not stable enough on all the platforms
>>>> where R runs.
>>> 
>>> There are actually two issues here.
>>> 
>>> For CRAN, we could in principle take inst/NEWS.md files, convert these
>>> to HTML using pandoc, and use the HTML for the package web page.  (Would
>>> need the CRAN incoming checks to be taught about inst/NEWS.md.)
>>> 
>>> However, we cannot use such files for utils::news() because we do not
>>> (yet?) know how to reliably parse such files and extract the news items
>>> (and hence cannot really compute on the news information).
>>> 
>>> Btw, currently only one package on CRAN has inst/NEWS.md (another one
>>> has NEWS.md at top level).
>>> 
>>> Best
>>> -k
>>> 
>>>> Markdown is allowed for vignettes (because the package author processes
>>>> those), so I'd suggest putting your news into a vignette instead of a
>>>> news file.  Put in a token news file that points to the vignette so
>>>> users can find it.
>>> 
>>>> Duncan Murdoch
>>> 
>>>> ______________________________________________
>>>> R-devel at r-project.org mailing list
>>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>> 
>> [[alternative HTML version deleted]]
>> 
>> ______________________________________________
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel

> -- 
> Peter Dalgaard, Professor,
> Center for Statistics, Copenhagen Business School
> Solbjerg Plads 3, 2000 Frederiksberg, Denmark
> Phone: (+45)38153501
> Email: pd.mes at cbs.dk  Priv: PDalgd at gmail.com

> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From sudomeme at gmail.com  Tue Jun  2 00:49:29 2015
From: sudomeme at gmail.com (Sue McDonald)
Date: Mon, 1 Jun 2015 17:49:29 -0500
Subject: [Rd] Compiling 64bit static library for Windows (Rtools33, MSYS2,
 cross-compile on linux)
In-Reply-To: <556A0A25.5050001@stats.ox.ac.uk>
References: <CAOkNWZUga3MvKMn0K2i01U2dWZ+3LuLDp-v4u0WXjtTV_7y3Ew@mail.gmail.com>
	<5569A990.7020004@gmail.com> <556A0A25.5050001@stats.ox.ac.uk>
Message-ID: <CAOkNWZXcePX=ErLj3SVSrKj5P95S1MvsrQ-YB-moxBRoVhvRLw@mail.gmail.com>

Thank you all for the suggestions.

I was finally able to get everything to work using msys + Rtools-gcc-4.6.3.
I could be wrong, but it seems that a complete 32+64 bit R-must be
installed to get a 64bit static library compiled.

MSYS while not as complete as MSYS2 does provide a shell that is identical
to linux.  The structure of Rtools-gcc with 'multilib'  is somewhat
confusing as compared to other current "mingw64" downloads, including
MSYS2.  It must be a Herculean task to ensure that 'things-just-work' for
all 4000+ packages -  with every new version!  I understand that Rtools
must control the entire process. I am grateful for all the work that goes
into it. That said, it would be nice, if Rtools could be packaged more like
MSYS2 - which after-all has very similar goals that apply to any linux
package.

Thanks again, SM

On Sat, May 30, 2015 at 2:06 PM, Prof Brian Ripley <ripley at stats.ox.ac.uk>
wrote:

> On 30/05/2015 13:14, Duncan Murdoch wrote:
>
>> On 29/05/2015 4:16 PM, Sue McDonald wrote:
>>
>>> My apologies for cross-posting. I found this site, after I had posted on
>>> stack-overflow.
>>>
>>> I need to compile several static libraries (C & Fortran) which will later
>>> be linked with an R package. Rtools33 directory includes
>>> /i686-w64-mingw32
>>> directory which I understand creates 32 bit binaries. Yet, there are
>>> other
>>> 64 bit directories as well.
>>>
>>
>> The current Rtools is set up for multilib operation.  You only need to
>> use the binaries in Rtools/gcc-4.6.3/bin.  The executables there will
>> choose files from the other directories depending on the -m32 or -m64
>> flag, for 32 bit or 64 bit operation.
>>
>>
>>> I have three related questions:
>>>
>>>     1.
>>>
>>>     Can Rtools33 be used to compile static libraries as a separate step
>>>     using -m64 flag?
>>>
>>
>> Yes, I believe so.  They would be 64 bit static libraries.
>>
>>      2.
>>>
>>>     MSYS2 is very convenient for compiling many of these libraries. Can a
>>>     static library compiled with x86_64-w64-mingw32 (gcc 4.9.2) be used
>>> with
>>>     Rtools33 (v 4.6.2)?
>>>
>>
>> Rtools uses 4.6.3, not 4.6.2.  I would assume the runtime libraries are
>> different between 4.6.3 and 4.9.2, so you won't be able to mix versions
>> like that.
>>
>> However, you should be able to use your MSYS2 system for all
>> compilation, if you create a MkRules.local file with the right settings.
>>   You will need to compile R and all packages and libraries using that
>> system, don't expect to be able to mix binaries from different versions
>> of gcc.
>>
>>
>>      3.
>>>
>>>     Can a static library compiled using x86_64-w64-mingw32-gcc
>>>     cross-compiler (v 4.6.2) on linux be used with Rtools33?
>>>
>>
>> Some libraries used by packages are compiled by Brian Ripley using a
>> cross-compiler on linux.  I'd assume he's using 4.6.3 as with the Rtools
>> build, but I'm not sure about that.
>>
>
> Correct, I used the cross-compiler that was used to compile the native
> compilers in Rtools.
>
> My experience (this had to work for thousands of packages for CRAN) is
> that only an exact match for the cross-compiler to the compiler used to
> compile R works reliably.  Even very slightly different builds can cause
> segfaults.
>
> --
> Brian D. Ripley,                  ripley at stats.ox.ac.uk
> Emeritus Professor of Applied Statistics, University of Oxford
> 1 South Parks Road, Oxford OX1 3TG, UK
>

	[[alternative HTML version deleted]]


From edd at debian.org  Tue Jun  2 17:05:23 2015
From: edd at debian.org (Dirk Eddelbuettel)
Date: Tue, 2 Jun 2015 10:05:23 -0500
Subject: [Rd] NEWS.md support on CRAN
In-Reply-To: <21868.18877.410651.592015@fangorn.hornik.net>
References: <4819669E-8260-47B0-96BF-DC2B29E6BE21@me.com>
	<555FD2FE.8050600@gmail.com>
	<21856.13500.513608.759602@fangorn.hornik.net>
	<B98D36A9-901A-4413-88C0-22D7E923612E@me.com>
	<581D2C19-ED47-4D1D-8FC7-C4B4F368E637@gmail.com>
	<21868.18877.410651.592015@fangorn.hornik.net>
Message-ID: <21869.50739.349239.728644@max.nulle.part>


Hi Kurt,

On 1 June 2015 at 14:02, Kurt Hornik wrote:
| >>>>> peter dalgaard writes:
| 
| >> On 30 May 2015, at 01:20 , Imanuel Costigan <i.costigan at me.com> wrote:
| >> 
| >> So I assume this commit means NEWS.md is now no longer on blacklist? 
| >> 
| 
| > ....in the development version. Not true of released versions.
| 
| Now also in r-patched.

Nice.

Now, is there a way for package authors to preview how a .md would be
rendered?  I wrote mine with GitHub in mind, and they render fine. I looked a
recently-uploaded README.md of mine on CRAN, and it got some of the pandoc-y
parts wrong --- and looks unprofessional.

I would like to avoid that.  How can I?

Dirk

 
| -k
| 
| > -pd
| 
| 
| >> https://github.com/wch/r-source/commit/9ffe87264a1cd59a31a829f72d57af0f1bfa327a
| >> 
| >> Sent from my iPad
| >> 
| >> On 23 May 2015, at 6:05 pm, Kurt Hornik <Kurt.Hornik at wu.ac.at> wrote:
| >> 
| >>>>>>>> Duncan Murdoch writes:
| >>> 
| >>>>> On 22/05/2015 8:49 PM, Imanuel Costigan wrote:
| >>>>> Are there any plans for CRAN to support NEWS files in markdown? Bit of a hassle to go the the package?s Github (or other like) site to read NEWS.
| >>> 
| >>>> Not as far as I know.  There have been discussions about increasing the
| >>>> support of Markdown, but so far the conclusion has been that it's too
| >>>> hard to do -- the support is not stable enough on all the platforms
| >>>> where R runs.
| >>> 
| >>> There are actually two issues here.
| >>> 
| >>> For CRAN, we could in principle take inst/NEWS.md files, convert these
| >>> to HTML using pandoc, and use the HTML for the package web page.  (Would
| >>> need the CRAN incoming checks to be taught about inst/NEWS.md.)
| >>> 
| >>> However, we cannot use such files for utils::news() because we do not
| >>> (yet?) know how to reliably parse such files and extract the news items
| >>> (and hence cannot really compute on the news information).
| >>> 
| >>> Btw, currently only one package on CRAN has inst/NEWS.md (another one
| >>> has NEWS.md at top level).
| >>> 
| >>> Best
| >>> -k
| >>> 
| >>>> Markdown is allowed for vignettes (because the package author processes
| >>>> those), so I'd suggest putting your news into a vignette instead of a
| >>>> news file.  Put in a token news file that points to the vignette so
| >>>> users can find it.
| >>> 
| >>>> Duncan Murdoch
| >>> 
| >>>> ______________________________________________
| >>>> R-devel at r-project.org mailing list
| >>>> https://stat.ethz.ch/mailman/listinfo/r-devel
| >> 
| >> [[alternative HTML version deleted]]
| >> 
| >> ______________________________________________
| >> R-devel at r-project.org mailing list
| >> https://stat.ethz.ch/mailman/listinfo/r-devel
| 
| > -- 
| > Peter Dalgaard, Professor,
| > Center for Statistics, Copenhagen Business School
| > Solbjerg Plads 3, 2000 Frederiksberg, Denmark
| > Phone: (+45)38153501
| > Email: pd.mes at cbs.dk  Priv: PDalgd at gmail.com
| 
| > ______________________________________________
| > R-devel at r-project.org mailing list
| > https://stat.ethz.ch/mailman/listinfo/r-devel
| 
| ______________________________________________
| R-devel at r-project.org mailing list
| https://stat.ethz.ch/mailman/listinfo/r-devel

-- 
http://dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org


From murdoch.duncan at gmail.com  Tue Jun  2 17:25:14 2015
From: murdoch.duncan at gmail.com (Duncan Murdoch)
Date: Tue, 02 Jun 2015 11:25:14 -0400
Subject: [Rd] NEWS.md support on CRAN
In-Reply-To: <21869.50739.349239.728644@max.nulle.part>
References: <4819669E-8260-47B0-96BF-DC2B29E6BE21@me.com>	<555FD2FE.8050600@gmail.com>	<21856.13500.513608.759602@fangorn.hornik.net>	<B98D36A9-901A-4413-88C0-22D7E923612E@me.com>	<581D2C19-ED47-4D1D-8FC7-C4B4F368E637@gmail.com>	<21868.18877.410651.592015@fangorn.hornik.net>
	<21869.50739.349239.728644@max.nulle.part>
Message-ID: <556DCADA.7060109@gmail.com>

On 02/06/2015 11:05 AM, Dirk Eddelbuettel wrote:
> Hi Kurt,
>
> On 1 June 2015 at 14:02, Kurt Hornik wrote:
> | >>>>> peter dalgaard writes:
> |
> | >> On 30 May 2015, at 01:20 , Imanuel Costigan <i.costigan at me.com> wrote:
> | >>
> | >> So I assume this commit means NEWS.md is now no longer on blacklist?
> | >>
> |
> | > ....in the development version. Not true of released versions.
> |
> | Now also in r-patched.
>
> Nice.
>
> Now, is there a way for package authors to preview how a .md would be
> rendered?  I wrote mine with GitHub in mind, and they render fine. I looked a
> recently-uploaded README.md of mine on CRAN, and it got some of the pandoc-y
> parts wrong --- and looks unprofessional.
>
> I would like to avoid that.  How can I?

In the short term, you should probably try to run pandoc with the same 
version and options as CRAN.  Kurt, can you say what these are?  If you 
(Dirk) know pandoc options that emulate Github, it would probably make 
sense for CRAN to use those.

In the longer term, the plan is to include our own parser and renderer.  
At that point this would be easy.

Duncan Murdoch
>
> Dirk
>
>   
> | -k
> |
> | > -pd
> |
> |
> | >> https://github.com/wch/r-source/commit/9ffe87264a1cd59a31a829f72d57af0f1bfa327a
> | >>
> | >> Sent from my iPad
> | >>
> | >> On 23 May 2015, at 6:05 pm, Kurt Hornik <Kurt.Hornik at wu.ac.at> wrote:
> | >>
> | >>>>>>>> Duncan Murdoch writes:
> | >>>
> | >>>>> On 22/05/2015 8:49 PM, Imanuel Costigan wrote:
> | >>>>> Are there any plans for CRAN to support NEWS files in markdown? Bit of a hassle to go the the package?s Github (or other like) site to read NEWS.
> | >>>
> | >>>> Not as far as I know.  There have been discussions about increasing the
> | >>>> support of Markdown, but so far the conclusion has been that it's too
> | >>>> hard to do -- the support is not stable enough on all the platforms
> | >>>> where R runs.
> | >>>
> | >>> There are actually two issues here.
> | >>>
> | >>> For CRAN, we could in principle take inst/NEWS.md files, convert these
> | >>> to HTML using pandoc, and use the HTML for the package web page.  (Would
> | >>> need the CRAN incoming checks to be taught about inst/NEWS.md.)
> | >>>
> | >>> However, we cannot use such files for utils::news() because we do not
> | >>> (yet?) know how to reliably parse such files and extract the news items
> | >>> (and hence cannot really compute on the news information).
> | >>>
> | >>> Btw, currently only one package on CRAN has inst/NEWS.md (another one
> | >>> has NEWS.md at top level).
> | >>>
> | >>> Best
> | >>> -k
> | >>>
> | >>>> Markdown is allowed for vignettes (because the package author processes
> | >>>> those), so I'd suggest putting your news into a vignette instead of a
> | >>>> news file.  Put in a token news file that points to the vignette so
> | >>>> users can find it.
> | >>>
> | >>>> Duncan Murdoch
> | >>>
> | >>>> ______________________________________________
> | >>>> R-devel at r-project.org mailing list
> | >>>> https://stat.ethz.ch/mailman/listinfo/r-devel
> | >>
> | >> [[alternative HTML version deleted]]
> | >>
> | >> ______________________________________________
> | >> R-devel at r-project.org mailing list
> | >> https://stat.ethz.ch/mailman/listinfo/r-devel
> |
> | > --
> | > Peter Dalgaard, Professor,
> | > Center for Statistics, Copenhagen Business School
> | > Solbjerg Plads 3, 2000 Frederiksberg, Denmark
> | > Phone: (+45)38153501
> | > Email: pd.mes at cbs.dk  Priv: PDalgd at gmail.com
> |
> | > ______________________________________________
> | > R-devel at r-project.org mailing list
> | > https://stat.ethz.ch/mailman/listinfo/r-devel
> |
> | ______________________________________________
> | R-devel at r-project.org mailing list
> | https://stat.ethz.ch/mailman/listinfo/r-devel
>


From lists at dewey.myzen.co.uk  Tue Jun  2 17:42:19 2015
From: lists at dewey.myzen.co.uk (Michael Dewey)
Date: Tue, 02 Jun 2015 16:42:19 +0100
Subject: [Rd] NEWS.md support on CRAN
In-Reply-To: <556DCADA.7060109@gmail.com>
References: <4819669E-8260-47B0-96BF-DC2B29E6BE21@me.com>	<555FD2FE.8050600@gmail.com>	<21856.13500.513608.759602@fangorn.hornik.net>	<B98D36A9-901A-4413-88C0-22D7E923612E@me.com>	<581D2C19-ED47-4D1D-8FC7-C4B4F368E637@gmail.com>	<21868.18877.410651.592015@fangorn.hornik.net>	<21869.50739.349239.728644@max.nulle.part>
	<556DCADA.7060109@gmail.com>
Message-ID: <556DCEDB.8080505@dewey.myzen.co.uk>

I realise this is not directly related to the topic but if changes are 
afoot would it be possible to make the use of any sort of news or 
changelog more prominent in the documentation? I maintain one of the 
CRAN task views and when someone updates his/her package it is much, 
much easier for me to see what has happened and if I need to update the 
text if they supply a news or changelog.

On 02/06/2015 16:25, Duncan Murdoch wrote:
> On 02/06/2015 11:05 AM, Dirk Eddelbuettel wrote:
>> Hi Kurt,
>>
>> On 1 June 2015 at 14:02, Kurt Hornik wrote:
>> | >>>>> peter dalgaard writes:
>> |
>> | >> On 30 May 2015, at 01:20 , Imanuel Costigan <i.costigan at me.com>
>> wrote:
>> | >>
>> | >> So I assume this commit means NEWS.md is now no longer on blacklist?
>> | >>
>> |
>> | > ....in the development version. Not true of released versions.
>> |
>> | Now also in r-patched.
>>
>> Nice.
>>
>> Now, is there a way for package authors to preview how a .md would be
>> rendered?  I wrote mine with GitHub in mind, and they render fine. I
>> looked a
>> recently-uploaded README.md of mine on CRAN, and it got some of the
>> pandoc-y
>> parts wrong --- and looks unprofessional.
>>
>> I would like to avoid that.  How can I?
>
> In the short term, you should probably try to run pandoc with the same
> version and options as CRAN.  Kurt, can you say what these are?  If you
> (Dirk) know pandoc options that emulate Github, it would probably make
> sense for CRAN to use those.
>
> In the longer term, the plan is to include our own parser and renderer.
> At that point this would be easy.
>
> Duncan Murdoch
>>
>> Dirk
>>
>> | -k
>> |
>> | > -pd
>> |
>> |
>> | >>
>> https://github.com/wch/r-source/commit/9ffe87264a1cd59a31a829f72d57af0f1bfa327a
>>
>> | >>
>> | >> Sent from my iPad
>> | >>
>> | >> On 23 May 2015, at 6:05 pm, Kurt Hornik <Kurt.Hornik at wu.ac.at>
>> wrote:
>> | >>
>> | >>>>>>>> Duncan Murdoch writes:
>> | >>>
>> | >>>>> On 22/05/2015 8:49 PM, Imanuel Costigan wrote:
>> | >>>>> Are there any plans for CRAN to support NEWS files in
>> markdown? Bit of a hassle to go the the package?s Github (or other
>> like) site to read NEWS.
>> | >>>
>> | >>>> Not as far as I know.  There have been discussions about
>> increasing the
>> | >>>> support of Markdown, but so far the conclusion has been that
>> it's too
>> | >>>> hard to do -- the support is not stable enough on all the
>> platforms
>> | >>>> where R runs.
>> | >>>
>> | >>> There are actually two issues here.
>> | >>>
>> | >>> For CRAN, we could in principle take inst/NEWS.md files, convert
>> these
>> | >>> to HTML using pandoc, and use the HTML for the package web
>> page.  (Would
>> | >>> need the CRAN incoming checks to be taught about inst/NEWS.md.)
>> | >>>
>> | >>> However, we cannot use such files for utils::news() because we
>> do not
>> | >>> (yet?) know how to reliably parse such files and extract the
>> news items
>> | >>> (and hence cannot really compute on the news information).
>> | >>>
>> | >>> Btw, currently only one package on CRAN has inst/NEWS.md
>> (another one
>> | >>> has NEWS.md at top level).
>> | >>>
>> | >>> Best
>> | >>> -k
>> | >>>
>> | >>>> Markdown is allowed for vignettes (because the package author
>> processes
>> | >>>> those), so I'd suggest putting your news into a vignette
>> instead of a
>> | >>>> news file.  Put in a token news file that points to the
>> vignette so
>> | >>>> users can find it.
>> | >>>
>> | >>>> Duncan Murdoch
>> | >>>
>> | >>>> ______________________________________________
>> | >>>> R-devel at r-project.org mailing list
>> | >>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>> | >>
>> | >> [[alternative HTML version deleted]]
>> | >>
>> | >> ______________________________________________
>> | >> R-devel at r-project.org mailing list
>> | >> https://stat.ethz.ch/mailman/listinfo/r-devel
>> |
>> | > --
>> | > Peter Dalgaard, Professor,
>> | > Center for Statistics, Copenhagen Business School
>> | > Solbjerg Plads 3, 2000 Frederiksberg, Denmark
>> | > Phone: (+45)38153501
>> | > Email: pd.mes at cbs.dk  Priv: PDalgd at gmail.com
>> |
>> | > ______________________________________________
>> | > R-devel at r-project.org mailing list
>> | > https://stat.ethz.ch/mailman/listinfo/r-devel
>> |
>> | ______________________________________________
>> | R-devel at r-project.org mailing list
>> | https://stat.ethz.ch/mailman/listinfo/r-devel
>>
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel

-- 
Michael
http://www.dewey.myzen.co.uk/home.html


From edd at debian.org  Tue Jun  2 17:42:26 2015
From: edd at debian.org (Dirk Eddelbuettel)
Date: Tue, 2 Jun 2015 10:42:26 -0500
Subject: [Rd] NEWS.md support on CRAN
In-Reply-To: <556DCADA.7060109@gmail.com>
References: <4819669E-8260-47B0-96BF-DC2B29E6BE21@me.com>
	<555FD2FE.8050600@gmail.com>
	<21856.13500.513608.759602@fangorn.hornik.net>
	<B98D36A9-901A-4413-88C0-22D7E923612E@me.com>
	<581D2C19-ED47-4D1D-8FC7-C4B4F368E637@gmail.com>
	<21868.18877.410651.592015@fangorn.hornik.net>
	<21869.50739.349239.728644@max.nulle.part>
	<556DCADA.7060109@gmail.com>
Message-ID: <21869.52962.920249.392569@max.nulle.part>


On 2 June 2015 at 11:25, Duncan Murdoch wrote:
| On 02/06/2015 11:05 AM, Dirk Eddelbuettel wrote:
| > Hi Kurt,
| >
| > On 1 June 2015 at 14:02, Kurt Hornik wrote:
| > | >>>>> peter dalgaard writes:
| > |
| > | >> On 30 May 2015, at 01:20 , Imanuel Costigan <i.costigan at me.com> wrote:
| > | >>
| > | >> So I assume this commit means NEWS.md is now no longer on blacklist?
| > | >>
| > |
| > | > ....in the development version. Not true of released versions.
| > |
| > | Now also in r-patched.
| >
| > Nice.
| >
| > Now, is there a way for package authors to preview how a .md would be
| > rendered?  I wrote mine with GitHub in mind, and they render fine. I looked a
| > recently-uploaded README.md of mine on CRAN, and it got some of the pandoc-y
| > parts wrong --- and looks unprofessional.
| >
| > I would like to avoid that.  How can I?
| 
| In the short term, you should probably try to run pandoc with the same 
| version and options as CRAN.  Kurt, can you say what these are?  If you 
| (Dirk) know pandoc options that emulate Github, it would probably make 
| sense for CRAN to use those.
| 
| In the longer term, the plan is to include our own parser and renderer.  
| At that point this would be easy.

Thumbs up -- the 'rmarkdown' package by JJ et al basically already does just
this, and I have now authored a few (beamer) presentations that way.  And
quite like it.  It is all fully scriptable -- and of course available
interactive in whatever R shell you prefer -- and only requires pandoc
besides what is on CRAN.   Maybe medium-term Jeroen's commonmark can replace
pandoc and then we'd fully based on CRAN packages.

Dirk


-- 
http://dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org


From kasperdanielhansen at gmail.com  Tue Jun  2 18:48:20 2015
From: kasperdanielhansen at gmail.com (Kasper Daniel Hansen)
Date: Tue, 2 Jun 2015 12:48:20 -0400
Subject: [Rd] NEWS.md support on CRAN
In-Reply-To: <556DCEDB.8080505@dewey.myzen.co.uk>
References: <4819669E-8260-47B0-96BF-DC2B29E6BE21@me.com>
	<555FD2FE.8050600@gmail.com>
	<21856.13500.513608.759602@fangorn.hornik.net>
	<B98D36A9-901A-4413-88C0-22D7E923612E@me.com>
	<581D2C19-ED47-4D1D-8FC7-C4B4F368E637@gmail.com>
	<21868.18877.410651.592015@fangorn.hornik.net>
	<21869.50739.349239.728644@max.nulle.part> <556DCADA.7060109@gmail.com>
	<556DCEDB.8080505@dewey.myzen.co.uk>
Message-ID: <CAC2h7usyok7Nn6+Tfv65+7fTgf-iPQ1qO6k=LZ1u_BKh3p5YGA@mail.gmail.com>

This is supported by the NEWS.Rd mechanism, but many authors don't use it.
I agree; it would be wonderful if everyone used it and I think the main
(potential) advantage of this thread is to make it used (both by developers
and users) more broadly.

Kasper

On Tue, Jun 2, 2015 at 11:42 AM, Michael Dewey <lists at dewey.myzen.co.uk>
wrote:

> I realise this is not directly related to the topic but if changes are
> afoot would it be possible to make the use of any sort of news or changelog
> more prominent in the documentation? I maintain one of the CRAN task views
> and when someone updates his/her package it is much, much easier for me to
> see what has happened and if I need to update the text if they supply a
> news or changelog.
>
>
> On 02/06/2015 16:25, Duncan Murdoch wrote:
>
>> On 02/06/2015 11:05 AM, Dirk Eddelbuettel wrote:
>>
>>> Hi Kurt,
>>>
>>> On 1 June 2015 at 14:02, Kurt Hornik wrote:
>>> | >>>>> peter dalgaard writes:
>>> |
>>> | >> On 30 May 2015, at 01:20 , Imanuel Costigan <i.costigan at me.com>
>>> wrote:
>>> | >>
>>> | >> So I assume this commit means NEWS.md is now no longer on blacklist?
>>> | >>
>>> |
>>> | > ....in the development version. Not true of released versions.
>>> |
>>> | Now also in r-patched.
>>>
>>> Nice.
>>>
>>> Now, is there a way for package authors to preview how a .md would be
>>> rendered?  I wrote mine with GitHub in mind, and they render fine. I
>>> looked a
>>> recently-uploaded README.md of mine on CRAN, and it got some of the
>>> pandoc-y
>>> parts wrong --- and looks unprofessional.
>>>
>>> I would like to avoid that.  How can I?
>>>
>>
>> In the short term, you should probably try to run pandoc with the same
>> version and options as CRAN.  Kurt, can you say what these are?  If you
>> (Dirk) know pandoc options that emulate Github, it would probably make
>> sense for CRAN to use those.
>>
>> In the longer term, the plan is to include our own parser and renderer.
>> At that point this would be easy.
>>
>> Duncan Murdoch
>>
>>>
>>> Dirk
>>>
>>> | -k
>>> |
>>> | > -pd
>>> |
>>> |
>>> | >>
>>>
>>> https://github.com/wch/r-source/commit/9ffe87264a1cd59a31a829f72d57af0f1bfa327a
>>>
>>> | >>
>>> | >> Sent from my iPad
>>> | >>
>>> | >> On 23 May 2015, at 6:05 pm, Kurt Hornik <Kurt.Hornik at wu.ac.at>
>>> wrote:
>>> | >>
>>> | >>>>>>>> Duncan Murdoch writes:
>>> | >>>
>>> | >>>>> On 22/05/2015 8:49 PM, Imanuel Costigan wrote:
>>> | >>>>> Are there any plans for CRAN to support NEWS files in
>>> markdown? Bit of a hassle to go the the package?s Github (or other
>>> like) site to read NEWS.
>>> | >>>
>>> | >>>> Not as far as I know.  There have been discussions about
>>> increasing the
>>> | >>>> support of Markdown, but so far the conclusion has been that
>>> it's too
>>> | >>>> hard to do -- the support is not stable enough on all the
>>> platforms
>>> | >>>> where R runs.
>>> | >>>
>>> | >>> There are actually two issues here.
>>> | >>>
>>> | >>> For CRAN, we could in principle take inst/NEWS.md files, convert
>>> these
>>> | >>> to HTML using pandoc, and use the HTML for the package web
>>> page.  (Would
>>> | >>> need the CRAN incoming checks to be taught about inst/NEWS.md.)
>>> | >>>
>>> | >>> However, we cannot use such files for utils::news() because we
>>> do not
>>> | >>> (yet?) know how to reliably parse such files and extract the
>>> news items
>>> | >>> (and hence cannot really compute on the news information).
>>> | >>>
>>> | >>> Btw, currently only one package on CRAN has inst/NEWS.md
>>> (another one
>>> | >>> has NEWS.md at top level).
>>> | >>>
>>> | >>> Best
>>> | >>> -k
>>> | >>>
>>> | >>>> Markdown is allowed for vignettes (because the package author
>>> processes
>>> | >>>> those), so I'd suggest putting your news into a vignette
>>> instead of a
>>> | >>>> news file.  Put in a token news file that points to the
>>> vignette so
>>> | >>>> users can find it.
>>> | >>>
>>> | >>>> Duncan Murdoch
>>> | >>>
>>> | >>>> ______________________________________________
>>> | >>>> R-devel at r-project.org mailing list
>>> | >>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>> | >>
>>> | >> [[alternative HTML version deleted]]
>>> | >>
>>> | >> ______________________________________________
>>> | >> R-devel at r-project.org mailing list
>>> | >> https://stat.ethz.ch/mailman/listinfo/r-devel
>>> |
>>> | > --
>>> | > Peter Dalgaard, Professor,
>>> | > Center for Statistics, Copenhagen Business School
>>> | > Solbjerg Plads 3, 2000 Frederiksberg, Denmark
>>> | > Phone: (+45)38153501
>>> | > Email: pd.mes at cbs.dk  Priv: PDalgd at gmail.com
>>> |
>>> | > ______________________________________________
>>> | > R-devel at r-project.org mailing list
>>> | > https://stat.ethz.ch/mailman/listinfo/r-devel
>>> |
>>> | ______________________________________________
>>> | R-devel at r-project.org mailing list
>>> | https://stat.ethz.ch/mailman/listinfo/r-devel
>>>
>>>
>> ______________________________________________
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>
>
> --
> Michael
> http://www.dewey.myzen.co.uk/home.html
>
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>

	[[alternative HTML version deleted]]


From murdoch.duncan at gmail.com  Tue Jun  2 20:42:30 2015
From: murdoch.duncan at gmail.com (Duncan Murdoch)
Date: Tue, 02 Jun 2015 14:42:30 -0400
Subject: [Rd] NEWS.md support on CRAN
In-Reply-To: <21869.52962.920249.392569@max.nulle.part>
References: <4819669E-8260-47B0-96BF-DC2B29E6BE21@me.com>	<555FD2FE.8050600@gmail.com>	<21856.13500.513608.759602@fangorn.hornik.net>	<B98D36A9-901A-4413-88C0-22D7E923612E@me.com>	<581D2C19-ED47-4D1D-8FC7-C4B4F368E637@gmail.com>	<21868.18877.410651.592015@fangorn.hornik.net>	<21869.50739.349239.728644@max.nulle.part>	<556DCADA.7060109@gmail.com>
	<21869.52962.920249.392569@max.nulle.part>
Message-ID: <556DF916.60703@gmail.com>

On 02/06/2015 11:42 AM, Dirk Eddelbuettel wrote:
> On 2 June 2015 at 11:25, Duncan Murdoch wrote:
> | On 02/06/2015 11:05 AM, Dirk Eddelbuettel wrote:
> | > Hi Kurt,
> | >
> | > On 1 June 2015 at 14:02, Kurt Hornik wrote:
> | > | >>>>> peter dalgaard writes:
> | > |
> | > | >> On 30 May 2015, at 01:20 , Imanuel Costigan <i.costigan at me.com> wrote:
> | > | >>
> | > | >> So I assume this commit means NEWS.md is now no longer on blacklist?
> | > | >>
> | > |
> | > | > ....in the development version. Not true of released versions.
> | > |
> | > | Now also in r-patched.
> | >
> | > Nice.
> | >
> | > Now, is there a way for package authors to preview how a .md would be
> | > rendered?  I wrote mine with GitHub in mind, and they render fine. I looked a
> | > recently-uploaded README.md of mine on CRAN, and it got some of the pandoc-y
> | > parts wrong --- and looks unprofessional.
> | >
> | > I would like to avoid that.  How can I?
> |
> | In the short term, you should probably try to run pandoc with the same
> | version and options as CRAN.  Kurt, can you say what these are?  If you
> | (Dirk) know pandoc options that emulate Github, it would probably make
> | sense for CRAN to use those.
> |
> | In the longer term, the plan is to include our own parser and renderer.
> | At that point this would be easy.
>
> Thumbs up -- the 'rmarkdown' package by JJ et al basically already does just
> this, and I have now authored a few (beamer) presentations that way.  And
> quite like it.  It is all fully scriptable -- and of course available
> interactive in whatever R shell you prefer -- and only requires pandoc
> besides what is on CRAN.   Maybe medium-term Jeroen's commonmark can replace
> pandoc and then we'd fully based on CRAN packages.

Several of us have been talking about this, and have more or less 
decided against pandoc for the within-R version.  It is too hard to 
build, or to include with R, on weird platforms.   Something like 
commonmark is more likely.  We'd also like to separate the parse and 
render steps.

Duncan Murdoch


From jeroenooms at gmail.com  Tue Jun  2 21:40:02 2015
From: jeroenooms at gmail.com (Jeroen Ooms)
Date: Tue, 2 Jun 2015 21:40:02 +0200
Subject: [Rd] NEWS.md support on CRAN
In-Reply-To: <556DF916.60703@gmail.com>
References: <4819669E-8260-47B0-96BF-DC2B29E6BE21@me.com>
	<555FD2FE.8050600@gmail.com>
	<21856.13500.513608.759602@fangorn.hornik.net>
	<B98D36A9-901A-4413-88C0-22D7E923612E@me.com>
	<581D2C19-ED47-4D1D-8FC7-C4B4F368E637@gmail.com>
	<21868.18877.410651.592015@fangorn.hornik.net>
	<21869.50739.349239.728644@max.nulle.part> <556DCADA.7060109@gmail.com>
	<21869.52962.920249.392569@max.nulle.part> <556DF916.60703@gmail.com>
Message-ID: <CABFfbXvzjp64N9AcbaTsQXBqJwxyahf_dapb=NDuUBkefW3yGA@mail.gmail.com>

On Tue, Jun 2, 2015 at 8:42 PM, Duncan Murdoch <murdoch.duncan at gmail.com> wrote:
> Several of us have been talking about this, and have more or less decided against pandoc for the within-R version.  It is too hard to build, or to include with R, on weird platforms. Something like commonmark is more likely. We'd also like to separate the parse and render steps.

The commonmark::markdown_xml function gives the parse tree in xml
format. From there we could use something like xpath to query the
content for individual news items and such. I think this is a more
practical way of exposing the syntax tree than deeply nested lists or
an external pointer to the internal C handle.


From murdoch.duncan at gmail.com  Tue Jun  2 22:30:57 2015
From: murdoch.duncan at gmail.com (Duncan Murdoch)
Date: Tue, 02 Jun 2015 16:30:57 -0400
Subject: [Rd] NEWS.md support on CRAN
In-Reply-To: <CABFfbXvzjp64N9AcbaTsQXBqJwxyahf_dapb=NDuUBkefW3yGA@mail.gmail.com>
References: <4819669E-8260-47B0-96BF-DC2B29E6BE21@me.com>
	<555FD2FE.8050600@gmail.com>
	<21856.13500.513608.759602@fangorn.hornik.net>
	<B98D36A9-901A-4413-88C0-22D7E923612E@me.com>
	<581D2C19-ED47-4D1D-8FC7-C4B4F368E637@gmail.com>
	<21868.18877.410651.592015@fangorn.hornik.net>
	<21869.50739.349239.728644@max.nulle.part>
	<556DCADA.7060109@gmail.com>
	<21869.52962.920249.392569@max.nulle.part>
	<556DF916.60703@gmail.com>
	<CABFfbXvzjp64N9AcbaTsQXBqJwxyahf_dapb=NDuUBkefW3yGA@mail.gmail.com>
Message-ID: <556E1281.3010003@gmail.com>

On 02/06/2015 3:40 PM, Jeroen Ooms wrote:
> On Tue, Jun 2, 2015 at 8:42 PM, Duncan Murdoch <murdoch.duncan at gmail.com> wrote:
>> Several of us have been talking about this, and have more or less decided against pandoc for the within-R version.  It is too hard to build, or to include with R, on weird platforms. Something like commonmark is more likely. We'd also like to separate the parse and render steps.
> 
> The commonmark::markdown_xml function gives the parse tree in xml
> format. From there we could use something like xpath to query the
> content for individual news items and such. I think this is a more
> practical way of exposing the syntax tree than deeply nested lists or
> an external pointer to the internal C handle.
> 

I'd rather avoid adding a dependence on the XML package; it's not a base
or recommended package, so most people don't have it.  Base R doesn't
have any XML processing built in.

One nice thing about the commonmark library is that it is
self-contained, so we can add it to R without pulling in a lot of other
stuff.  Using it to translate Markdown to XML loses that.

Duncan Murdoch


From gmbecker at ucdavis.edu  Tue Jun  2 22:31:55 2015
From: gmbecker at ucdavis.edu (Gabriel Becker)
Date: Tue, 2 Jun 2015 13:31:55 -0700
Subject: [Rd] NEWS.md support on CRAN
In-Reply-To: <CABFfbXvzjp64N9AcbaTsQXBqJwxyahf_dapb=NDuUBkefW3yGA@mail.gmail.com>
References: <4819669E-8260-47B0-96BF-DC2B29E6BE21@me.com>
	<555FD2FE.8050600@gmail.com>
	<21856.13500.513608.759602@fangorn.hornik.net>
	<B98D36A9-901A-4413-88C0-22D7E923612E@me.com>
	<581D2C19-ED47-4D1D-8FC7-C4B4F368E637@gmail.com>
	<21868.18877.410651.592015@fangorn.hornik.net>
	<21869.50739.349239.728644@max.nulle.part>
	<556DCADA.7060109@gmail.com>
	<21869.52962.920249.392569@max.nulle.part>
	<556DF916.60703@gmail.com>
	<CABFfbXvzjp64N9AcbaTsQXBqJwxyahf_dapb=NDuUBkefW3yGA@mail.gmail.com>
Message-ID: <CADwqtCOJ07xgiCTTzdK0Rng7Lbi=_de0Dzu5yshCkUP13kuvzQ@mail.gmail.com>

On Tue, Jun 2, 2015 at 12:40 PM, Jeroen Ooms <jeroenooms at gmail.com> wrote:

> On Tue, Jun 2, 2015 at 8:42 PM, Duncan Murdoch <murdoch.duncan at gmail.com>
> wrote:
> > Several of us have been talking about this, and have more or less
> decided against pandoc for the within-R version.  It is too hard to build,
> or to include with R, on weird platforms. Something like commonmark is more
> likely. We'd also like to separate the parse and render steps.
>
> The commonmark::markdown_xml function gives the parse tree in xml
> format. From there we could use something like xpath to query the
> content for individual news items and such. I think this is a more
> practical way of exposing the syntax tree than deeply nested lists or
> an external pointer to the internal C handle.
>

I don't think it should matter what the internal representation is here. So
long as there is proper tooling (query methods, [ and [[, names, etc)
around whatever class is returned, the user won't ever even know.

XPath is certainly a good way to implement those things, but I don't know
if we'd want it to be the actual abstraction users/developers use to
interact with the tree. Thinking about the right way to consume ASTs
represented by R objects (and how those objects should be
structured/implemented) could have applications well beyond markdown as
well, some of which may not have a canonical/direct XML representation.

~G



>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>



-- 
Gabriel Becker, PhD
Computational Biologist
Bioinformatics and Computational Biology
Genentech, Inc.

	[[alternative HTML version deleted]]


From Kurt.Hornik at wu.ac.at  Wed Jun  3 08:30:50 2015
From: Kurt.Hornik at wu.ac.at (Kurt Hornik)
Date: Wed, 3 Jun 2015 08:30:50 +0200
Subject: [Rd] NEWS.md support on CRAN
In-Reply-To: <556DCADA.7060109@gmail.com>
References: <4819669E-8260-47B0-96BF-DC2B29E6BE21@me.com>
	<555FD2FE.8050600@gmail.com>
	<21856.13500.513608.759602@fangorn.hornik.net>
	<B98D36A9-901A-4413-88C0-22D7E923612E@me.com>
	<581D2C19-ED47-4D1D-8FC7-C4B4F368E637@gmail.com>
	<21868.18877.410651.592015@fangorn.hornik.net>
	<21869.50739.349239.728644@max.nulle.part>
	<556DCADA.7060109@gmail.com>
Message-ID: <21870.40730.965705.219861@fangorn.hornik.net>

>>>>> Duncan Murdoch writes:

> On 02/06/2015 11:05 AM, Dirk Eddelbuettel wrote:
>> Hi Kurt,
>> 
>> On 1 June 2015 at 14:02, Kurt Hornik wrote:
>> | >>>>> peter dalgaard writes:
>> |
>> | >> On 30 May 2015, at 01:20 , Imanuel Costigan <i.costigan at me.com> wrote:
>> | >>
>> | >> So I assume this commit means NEWS.md is now no longer on blacklist?
>> | >>
>> |
>> | > ....in the development version. Not true of released versions.
>> |
>> | Now also in r-patched.
>> 
>> Nice.
>> 
>> Now, is there a way for package authors to preview how a .md would be
>> rendered?  I wrote mine with GitHub in mind, and they render fine. I looked a
>> recently-uploaded README.md of mine on CRAN, and it got some of the pandoc-y
>> parts wrong --- and looks unprofessional.
>> 
>> I would like to avoid that.  How can I?

> In the short term, you should probably try to run pandoc with the same 
> version and options as CRAN.  Kurt, can you say what these are?  If you 
> (Dirk) know pandoc options that emulate Github, it would probably make 
> sense for CRAN to use those.

Sure.  We currently have

pandoc 1.12.4.2
Compiled with texmath 0.6.6.1, highlighting-kate 0.5.8.5.

which we use with --email-obfuscation=references.

Best
-k

> In the longer term, the plan is to include our own parser and renderer.  
> At that point this would be easy.

> Duncan Murdoch
>> 
>> Dirk
>> 
>> 
>> | -k
>> |
>> | > -pd
>> |
>> |
>> | >> https://github.com/wch/r-source/commit/9ffe87264a1cd59a31a829f72d57af0f1bfa327a
>> | >>
>> | >> Sent from my iPad
>> | >>
>> | >> On 23 May 2015, at 6:05 pm, Kurt Hornik <Kurt.Hornik at wu.ac.at> wrote:
>> | >>
>> | >>>>>>>> Duncan Murdoch writes:
>> | >>>
>> | >>>>> On 22/05/2015 8:49 PM, Imanuel Costigan wrote:
>> | >>>>> Are there any plans for CRAN to support NEWS files in markdown? Bit of a hassle to go the the package?s Github (or other like) site to read NEWS.
>> | >>>
>> | >>>> Not as far as I know.  There have been discussions about increasing the
>> | >>>> support of Markdown, but so far the conclusion has been that it's too
>> | >>>> hard to do -- the support is not stable enough on all the platforms
>> | >>>> where R runs.
>> | >>>
>> | >>> There are actually two issues here.
>> | >>>
>> | >>> For CRAN, we could in principle take inst/NEWS.md files, convert these
>> | >>> to HTML using pandoc, and use the HTML for the package web page.  (Would
>> | >>> need the CRAN incoming checks to be taught about inst/NEWS.md.)
>> | >>>
>> | >>> However, we cannot use such files for utils::news() because we do not
>> | >>> (yet?) know how to reliably parse such files and extract the news items
>> | >>> (and hence cannot really compute on the news information).
>> | >>>
>> | >>> Btw, currently only one package on CRAN has inst/NEWS.md (another one
>> | >>> has NEWS.md at top level).
>> | >>>
>> | >>> Best
>> | >>> -k
>> | >>>
>> | >>>> Markdown is allowed for vignettes (because the package author processes
>> | >>>> those), so I'd suggest putting your news into a vignette instead of a
>> | >>>> news file.  Put in a token news file that points to the vignette so
>> | >>>> users can find it.
>> | >>>
>> | >>>> Duncan Murdoch
>> | >>>
>> | >>>> ______________________________________________
>> | >>>> R-devel at r-project.org mailing list
>> | >>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>> | >>
>> | >> [[alternative HTML version deleted]]
>> | >>
>> | >> ______________________________________________
>> | >> R-devel at r-project.org mailing list
>> | >> https://stat.ethz.ch/mailman/listinfo/r-devel
>> |
>> | > --
>> | > Peter Dalgaard, Professor,
>> | > Center for Statistics, Copenhagen Business School
>> | > Solbjerg Plads 3, 2000 Frederiksberg, Denmark
>> | > Phone: (+45)38153501
>> | > Email: pd.mes at cbs.dk  Priv: PDalgd at gmail.com
>> |
>> | > ______________________________________________
>> | > R-devel at r-project.org mailing list
>> | > https://stat.ethz.ch/mailman/listinfo/r-devel
>> |
>> | ______________________________________________
>> | R-devel at r-project.org mailing list
>> | https://stat.ethz.ch/mailman/listinfo/r-devel
>> 

> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From nicola.lunardon at hotmail.it  Wed Jun  3 09:48:05 2015
From: nicola.lunardon at hotmail.it (bstr)
Date: Wed, 3 Jun 2015 00:48:05 -0700 (PDT)
Subject: [Rd] Problem with shared library and lapack under windows
Message-ID: <1433317685951-4708092.post@n4.nabble.com>

Hi all,

I have a C function, say Cfun, that calls Lapack's DGEMM routine and I need
to create a shared library to use Cfun inside R. The C file is the following

#include<stdio.h>
#include<R.h>
#include<R_ext/Lapack.h>


void Cfun(double *res, double *X, int *n, int *q)
{
	char *ptr_TRANSA, TRANSA='T', *ptr_TRANSB, TRANSB='N';
	ptr_TRANSA=&TRANSA;
	ptr_TRANSB=&TRANSB;
	double *ptr_ALPHA, ALPHA=1.0, *ptr_BETA, BETA=0.0;
	ptr_ALPHA=&ALPHA;
	ptr_BETA=&BETA;

	dgemm_(ptr_TRANSA, ptr_TRANSB, q, q, n, ptr_ALPHA, X, n, X, n, ptr_BETA,
res, q);
}

In Ubuntu I have no problem in compiling:  R CMD SHLIB -llapack myfile.c.
However, under Windows the -llapack flag is not recognised and I am able to
get the code compiled only if I build an R package with the suitable
Makevars file options: PKG_LIBS=$(LAPACK_LIBS) $(FLIBS). Is there a way to
get the .dll without resorting to build a package?

Thanks in advance,

N. Lunardon





--
View this message in context: http://r.789695.n4.nabble.com/Problem-with-shared-library-and-lapack-under-windows-tp4708092.html
Sent from the R devel mailing list archive at Nabble.com.


From bhh at xs4all.nl  Wed Jun  3 11:03:27 2015
From: bhh at xs4all.nl (Berend Hasselman)
Date: Wed, 3 Jun 2015 11:03:27 +0200
Subject: [Rd] Problem with shared library and lapack under windows
In-Reply-To: <1433317685951-4708092.post@n4.nabble.com>
References: <1433317685951-4708092.post@n4.nabble.com>
Message-ID: <98E2EF98-5D40-4F04-94F1-030745A0DF23@xs4all.nl>


> On 03-06-2015, at 09:48, bstr <nicola.lunardon at hotmail.it> wrote:
> 
> Hi all,
> 
> I have a C function, say Cfun, that calls Lapack's DGEMM routine and I need
> to create a shared library to use Cfun inside R. The C file is the following
> 
> #include<stdio.h>
> #include<R.h>
> #include<R_ext/Lapack.h>
> 
> 
> void Cfun(double *res, double *X, int *n, int *q)
> {
> 	char *ptr_TRANSA, TRANSA='T', *ptr_TRANSB, TRANSB='N';
> 	ptr_TRANSA=&TRANSA;
> 	ptr_TRANSB=&TRANSB;
> 	double *ptr_ALPHA, ALPHA=1.0, *ptr_BETA, BETA=0.0;
> 	ptr_ALPHA=&ALPHA;
> 	ptr_BETA=&BETA;
> 
> 	dgemm_(ptr_TRANSA, ptr_TRANSB, q, q, n, ptr_ALPHA, X, n, X, n, ptr_BETA,
> res, q);
> }
> 
> In Ubuntu I have no problem in compiling:  R CMD SHLIB -llapack myfile.c.
> However, under Windows the -llapack flag is not recognised and I am able to
> get the code compiled only if I build an R package with the suitable
> Makevars file options: PKG_LIBS=$(LAPACK_LIBS) $(FLIBS). Is there a way to
> get the .dll without resorting to build a package?
> 

I wouldn?t exactly know since I?m not using Windows.

Try this:

R CMD config LAPACK_LIBS

to see the command line options needed.

And why are you using dgemm_?
Use the F77_CALL macro provided by R; you?ll be less system dependent that way.

Berend


From derjones at us.ibm.com  Wed Jun  3 20:37:34 2015
From: derjones at us.ibm.com (derjones)
Date: Wed, 3 Jun 2015 11:37:34 -0700 (PDT)
Subject: [Rd] Matrix loading hangs on AIX 5.3 with 3.1.2
Message-ID: <1433356654505-4708136.post@n4.nabble.com>

Hi all,

Yes, I know 5.3 is old, but it's a system I have to work with at present.

I have the latest supported xlC + friends. gcc building is not an option on
this system for other reasons.

I have read the install instructions and set the env vars according to those
and also am using the freeware iconv and other GNU tools where needed. 

Problem - the Matrix package hangs on installing.

Gets to:

  Loading required package: Matrix

and then nothing. Left overnight even.

My env vars look like this:


export OBJECT_MODE=64
export LIBICONV=/opt/freeware
export CC="xlc_r -q64" 
export CFLAGS="-O -qstrict"
export CXX="xlC_r -q64"
export CXXFLAGS="-O -qstrict"
export F77="xlf_r -q64"
export AR="ar -X64"
export CPPFLAGS="-I$LIBICONV/include -I/usr/lpp/X11/include/X11"
export LDFLAGS="-L$LIBICONV/lib -L/usr/lib -L/usr/X11R6/lib"


xlc -qversion
IBM XL C/C++ for AIX, V12.1 (5765-J02, 5725-C72)
Version: 12.01.0000.0011

xlC -qversion
IBM XL C/C++ for AIX, V12.1 (5765-J02, 5725-C72)
Version: 12.01.0000.0011

xlf -qversion
IBM XL Fortran for AIX, V12.1
Version: 12.01.0000.0000


I have tried with R_SHELL set to bash and ksh. My login shell is bash.

I have tried with enable static and disable shared.

I have subsequently built without recommended packages. R build and
installs. (Minor issue with the location of libRblas but I solved that. 

I have then tried doing a install.packages("Matrix") from R.

Same thing. Hangs. 

Any ideas? 

I can supply more information as needed. Please let me know what you would
like to know.

Kind regards

Derek Jones
Senior Software Engineer, CTG at IBM.




--
View this message in context: http://r.789695.n4.nabble.com/Matrix-loading-hangs-on-AIX-5-3-with-3-1-2-tp4708136.html
Sent from the R devel mailing list archive at Nabble.com.


From edson.bastos at ig.com.br  Thu Jun  4 14:13:55 2015
From: edson.bastos at ig.com.br (edson.bastos)
Date: Thu, 4 Jun 2015 05:13:55 -0700 (PDT)
Subject: [Rd] S3 internal and group generics
In-Reply-To: <CABdHhvF9m1Qjqz1ifSaWQNcXYSHmPYQwO4rkNXgYA8Y069fa1g@mail.gmail.com>
References: <CABdHhvF9m1Qjqz1ifSaWQNcXYSHmPYQwO4rkNXgYA8Y069fa1g@mail.gmail.com>
Message-ID: <1433420035822-4708174.post@n4.nabble.com>

I have found the following generics which your function did not inlcude.1]
"as.character.default"  "as.expression.default" "as.list.default"      
"as.name"              [5] "as.pairlist"           "as.single.default"    
"as.symbol"             "body<-"               [9] "kronecker" I used the
following code:base_objs              <-
objects("package:base")base_function        <-
mapply(function(x)ftype(get(x)), base_objs)base_objs_generic <-
base_objs[grep("generic",base_function)]



--
View this message in context: http://r.789695.n4.nabble.com/S3-internal-and-group-generics-tp4672746p4708174.html
Sent from the R devel mailing list archive at Nabble.com.
	[[alternative HTML version deleted]]


From maechler at stat.math.ethz.ch  Thu Jun  4 15:01:52 2015
From: maechler at stat.math.ethz.ch (Martin Maechler)
Date: Thu, 4 Jun 2015 15:01:52 +0200
Subject: [Rd] Nabble gibberish on R-devel: please stop it (Re: S3 internal
	...)
In-Reply-To: <1433420035822-4708174.post@n4.nabble.com>
References: <CABdHhvF9m1Qjqz1ifSaWQNcXYSHmPYQwO4rkNXgYA8Y069fa1g@mail.gmail.com>
	<1433420035822-4708174.post@n4.nabble.com>
Message-ID: <21872.19520.46039.730992@stat.math.ethz.ch>

This is completely out of context,
(and mailman needs to "munge" your sender e-mail because of
 unpleasant DMARC stuff),

>>>>> edson bastos via R-devel <r-devel at r-project.org>
>>>>>     on Thu, 4 Jun 2015 05:13:55 -0700 writes:

    > I have found the following generics which your function did not inlcude.1]
    > "as.character.default"  "as.expression.default" "as.list.default"      
    > "as.name"              [5] "as.pairlist"           "as.single.default"    
    > "as.symbol"             "body<-"               [9] "kronecker" I used the
    > following code:base_objs              <-
    > objects("package:base")base_function        <-
    > mapply(function(x)ftype(get(x)), base_objs)base_objs_generic <-
    > base_objs[grep("generic",base_function)]

and is mangled because you've post via Nabble which may always
use HTML.

I'd really us to consider **banning** the use of Nabble for
R-devel, completely.  People on this list should be able to
subscribe to a mailing list and deal with mail filtering etc...

Martin Maechler,
ETH Zurich


From mark.vanderloo at gmail.com  Thu Jun  4 17:05:18 2015
From: mark.vanderloo at gmail.com (Mark van der Loo)
Date: Thu, 04 Jun 2015 15:05:18 +0000
Subject: [Rd] NEWS.md support on CRAN
In-Reply-To: <21870.40730.965705.219861@fangorn.hornik.net>
References: <4819669E-8260-47B0-96BF-DC2B29E6BE21@me.com>
	<555FD2FE.8050600@gmail.com>
	<21856.13500.513608.759602@fangorn.hornik.net>
	<B98D36A9-901A-4413-88C0-22D7E923612E@me.com>
	<581D2C19-ED47-4D1D-8FC7-C4B4F368E637@gmail.com>
	<21868.18877.410651.592015@fangorn.hornik.net>
	<21869.50739.349239.728644@max.nulle.part> <556DCADA.7060109@gmail.com>
	<21870.40730.965705.219861@fangorn.hornik.net>
Message-ID: <CAOKDuOhy=P8hYktkXJ2dtRexihc5vzsC44TUqn80j+Nz7oAoxg@mail.gmail.com>

FWIW (and a bit late in the discussion, I know), I for one do not care
about having NEWS in md format at all.

The solution the Yihui uses (linking to GH from NEWS.Rd) is really annoying
for people with no direct Internet access. For example, I work at an
institute that handles a lot of private data and most VM's with R on it
have no direct internet access for that reason (of course internet is
accessible but through an application running on a separate VM).

Moreover, I as a user also do not care at all about links to GH #issues and
which @user did what for each issue. These are details that are useful for
people developing the package or for people who reported a bug. As a user I
just want to read a short description like "bugfix: function f crashed on
input y", or "function g is deprecated" without having to first navigate to
another website.

The most important thing about the NEWS is that it is easy to find (so in a
fixed place), and aimed at users, not developers. It should come with the
software, so it is also available when GH is offline or replaced with
something new (since hey, didn't we all have a sourceforge or google code
account in our younger days?).

In short, I think that added value of NEWS.md is fairly limited but it does
increase the risk of dispersing the NEWS all over the web.

Best,
Mark










Op wo 3 jun. 2015 om 08:32 schreef Kurt Hornik <Kurt.Hornik at wu.ac.at>:

> >>>>> Duncan Murdoch writes:
>
> > On 02/06/2015 11:05 AM, Dirk Eddelbuettel wrote:
> >> Hi Kurt,
> >>
> >> On 1 June 2015 at 14:02, Kurt Hornik wrote:
> >> | >>>>> peter dalgaard writes:
> >> |
> >> | >> On 30 May 2015, at 01:20 , Imanuel Costigan <i.costigan at me.com>
> wrote:
> >> | >>
> >> | >> So I assume this commit means NEWS.md is now no longer on
> blacklist?
> >> | >>
> >> |
> >> | > ....in the development version. Not true of released versions.
> >> |
> >> | Now also in r-patched.
> >>
> >> Nice.
> >>
> >> Now, is there a way for package authors to preview how a .md would be
> >> rendered?  I wrote mine with GitHub in mind, and they render fine. I
> looked a
> >> recently-uploaded README.md of mine on CRAN, and it got some of the
> pandoc-y
> >> parts wrong --- and looks unprofessional.
> >>
> >> I would like to avoid that.  How can I?
>
> > In the short term, you should probably try to run pandoc with the same
> > version and options as CRAN.  Kurt, can you say what these are?  If you
> > (Dirk) know pandoc options that emulate Github, it would probably make
> > sense for CRAN to use those.
>
> Sure.  We currently have
>
> pandoc 1.12.4.2
> Compiled with texmath 0.6.6.1, highlighting-kate 0.5.8.5.
>
> which we use with --email-obfuscation=references.
>
> Best
> -k
>
> > In the longer term, the plan is to include our own parser and renderer.
> > At that point this would be easy.
>
> > Duncan Murdoch
> >>
> >> Dirk
> >>
> >>
> >> | -k
> >> |
> >> | > -pd
> >> |
> >> |
> >> | >>
> https://github.com/wch/r-source/commit/9ffe87264a1cd59a31a829f72d57af0f1bfa327a
> >> | >>
> >> | >> Sent from my iPad
> >> | >>
> >> | >> On 23 May 2015, at 6:05 pm, Kurt Hornik <Kurt.Hornik at wu.ac.at>
> wrote:
> >> | >>
> >> | >>>>>>>> Duncan Murdoch writes:
> >> | >>>
> >> | >>>>> On 22/05/2015 8:49 PM, Imanuel Costigan wrote:
> >> | >>>>> Are there any plans for CRAN to support NEWS files in markdown?
> Bit of a hassle to go the the package?s Github (or other like) site to read
> NEWS.
> >> | >>>
> >> | >>>> Not as far as I know.  There have been discussions about
> increasing the
> >> | >>>> support of Markdown, but so far the conclusion has been that
> it's too
> >> | >>>> hard to do -- the support is not stable enough on all the
> platforms
> >> | >>>> where R runs.
> >> | >>>
> >> | >>> There are actually two issues here.
> >> | >>>
> >> | >>> For CRAN, we could in principle take inst/NEWS.md files, convert
> these
> >> | >>> to HTML using pandoc, and use the HTML for the package web page.
> (Would
> >> | >>> need the CRAN incoming checks to be taught about inst/NEWS.md.)
> >> | >>>
> >> | >>> However, we cannot use such files for utils::news() because we do
> not
> >> | >>> (yet?) know how to reliably parse such files and extract the news
> items
> >> | >>> (and hence cannot really compute on the news information).
> >> | >>>
> >> | >>> Btw, currently only one package on CRAN has inst/NEWS.md (another
> one
> >> | >>> has NEWS.md at top level).
> >> | >>>
> >> | >>> Best
> >> | >>> -k
> >> | >>>
> >> | >>>> Markdown is allowed for vignettes (because the package author
> processes
> >> | >>>> those), so I'd suggest putting your news into a vignette instead
> of a
> >> | >>>> news file.  Put in a token news file that points to the vignette
> so
> >> | >>>> users can find it.
> >> | >>>
> >> | >>>> Duncan Murdoch
> >> | >>>
> >> | >>>> ______________________________________________
> >> | >>>> R-devel at r-project.org mailing list
> >> | >>>> https://stat.ethz.ch/mailman/listinfo/r-devel
> >> | >>
> >> | >> [[alternative HTML version deleted]]
> >> | >>
> >> | >> ______________________________________________
> >> | >> R-devel at r-project.org mailing list
> >> | >> https://stat.ethz.ch/mailman/listinfo/r-devel
> >> |
> >> | > --
> >> | > Peter Dalgaard, Professor,
> >> | > Center for Statistics, Copenhagen Business School
> >> | > Solbjerg Plads 3, 2000 Frederiksberg, Denmark
> >> | > Phone: (+45)38153501
> >> | > Email: pd.mes at cbs.dk  Priv: PDalgd at gmail.com
> >> |
> >> | > ______________________________________________
> >> | > R-devel at r-project.org mailing list
> >> | > https://stat.ethz.ch/mailman/listinfo/r-devel
> >> |
> >> | ______________________________________________
> >> | R-devel at r-project.org mailing list
> >> | https://stat.ethz.ch/mailman/listinfo/r-devel
> >>
>
> > ______________________________________________
> > R-devel at r-project.org mailing list
> > https://stat.ethz.ch/mailman/listinfo/r-devel
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>

	[[alternative HTML version deleted]]


From gmbecker at ucdavis.edu  Thu Jun  4 17:32:02 2015
From: gmbecker at ucdavis.edu (Gabriel Becker)
Date: Thu, 4 Jun 2015 08:32:02 -0700
Subject: [Rd] NEWS.md support on CRAN
In-Reply-To: <CAOKDuOhy=P8hYktkXJ2dtRexihc5vzsC44TUqn80j+Nz7oAoxg@mail.gmail.com>
References: <4819669E-8260-47B0-96BF-DC2B29E6BE21@me.com>
	<555FD2FE.8050600@gmail.com>
	<21856.13500.513608.759602@fangorn.hornik.net>
	<B98D36A9-901A-4413-88C0-22D7E923612E@me.com>
	<581D2C19-ED47-4D1D-8FC7-C4B4F368E637@gmail.com>
	<21868.18877.410651.592015@fangorn.hornik.net>
	<21869.50739.349239.728644@max.nulle.part>
	<556DCADA.7060109@gmail.com>
	<21870.40730.965705.219861@fangorn.hornik.net>
	<CAOKDuOhy=P8hYktkXJ2dtRexihc5vzsC44TUqn80j+Nz7oAoxg@mail.gmail.com>
Message-ID: <CADwqtCOF92XcibBt+UMWzPxAcR_x-ixt-X5x0-AAfctAs-75WA@mail.gmail.com>

Mark,

With respect I think you're conflating two different things here.

I completely agree with you that the workflow Yihui uses where the NEWS
file doesn't actually have the NEWS in it in a form that R can understand
is quite bad for users. It also makes the NEWS difficult to compute on,
which has caused me problems.

That is entirely separate from what formats R allows and understands the
NEWS within the package to be declared in, though. I think most people are
talking about supporting the shipping of NEWS in markdown *within the
package*, largely because people just don't like writing Rd files. It's
painful, so many people don't do it. It's easy to say they should do it
anyway, and you wouldn't be wrong, but unfortunately that isn't likely to
sway many people who are busy and have other things they want to do with
their time. Allowing package authors to write a NEWS.md file - and, again,
ship it with the package - eases that pain. With the type of support Duncan
and others are talking about, the end user (you) wouldn't even know if the
package had a NEWS.md or NEWS.Rd file, the result would be the same from
within R.

Best,
~G

On Thu, Jun 4, 2015 at 8:05 AM, Mark van der Loo <mark.vanderloo at gmail.com>
wrote:

> FWIW (and a bit late in the discussion, I know), I for one do not care
> about having NEWS in md format at all.
>
> The solution the Yihui uses (linking to GH from NEWS.Rd) is really annoying
> for people with no direct Internet access. For example, I work at an
> institute that handles a lot of private data and most VM's with R on it
> have no direct internet access for that reason (of course internet is
> accessible but through an application running on a separate VM).
>
> Moreover, I as a user also do not care at all about links to GH #issues and
> which @user did what for each issue. These are details that are useful for
> people developing the package or for people who reported a bug. As a user I
> just want to read a short description like "bugfix: function f crashed on
> input y", or "function g is deprecated" without having to first navigate to
> another website.
>
> The most important thing about the NEWS is that it is easy to find (so in a
> fixed place), and aimed at users, not developers. It should come with the
> software, so it is also available when GH is offline or replaced with
> something new (since hey, didn't we all have a sourceforge or google code
> account in our younger days?).
>
> In short, I think that added value of NEWS.md is fairly limited but it does
> increase the risk of dispersing the NEWS all over the web.
>
> Best,
> Mark
>
>
>
>
>
>
>
>
>
>
> Op wo 3 jun. 2015 om 08:32 schreef Kurt Hornik <Kurt.Hornik at wu.ac.at>:
>
> > >>>>> Duncan Murdoch writes:
> >
> > > On 02/06/2015 11:05 AM, Dirk Eddelbuettel wrote:
> > >> Hi Kurt,
> > >>
> > >> On 1 June 2015 at 14:02, Kurt Hornik wrote:
> > >> | >>>>> peter dalgaard writes:
> > >> |
> > >> | >> On 30 May 2015, at 01:20 , Imanuel Costigan <i.costigan at me.com>
> > wrote:
> > >> | >>
> > >> | >> So I assume this commit means NEWS.md is now no longer on
> > blacklist?
> > >> | >>
> > >> |
> > >> | > ....in the development version. Not true of released versions.
> > >> |
> > >> | Now also in r-patched.
> > >>
> > >> Nice.
> > >>
> > >> Now, is there a way for package authors to preview how a .md would be
> > >> rendered?  I wrote mine with GitHub in mind, and they render fine. I
> > looked a
> > >> recently-uploaded README.md of mine on CRAN, and it got some of the
> > pandoc-y
> > >> parts wrong --- and looks unprofessional.
> > >>
> > >> I would like to avoid that.  How can I?
> >
> > > In the short term, you should probably try to run pandoc with the same
> > > version and options as CRAN.  Kurt, can you say what these are?  If you
> > > (Dirk) know pandoc options that emulate Github, it would probably make
> > > sense for CRAN to use those.
> >
> > Sure.  We currently have
> >
> > pandoc 1.12.4.2
> > Compiled with texmath 0.6.6.1, highlighting-kate 0.5.8.5.
> >
> > which we use with --email-obfuscation=references.
> >
> > Best
> > -k
> >
> > > In the longer term, the plan is to include our own parser and renderer.
> > > At that point this would be easy.
> >
> > > Duncan Murdoch
> > >>
> > >> Dirk
> > >>
> > >>
> > >> | -k
> > >> |
> > >> | > -pd
> > >> |
> > >> |
> > >> | >>
> >
> https://github.com/wch/r-source/commit/9ffe87264a1cd59a31a829f72d57af0f1bfa327a
> > >> | >>
> > >> | >> Sent from my iPad
> > >> | >>
> > >> | >> On 23 May 2015, at 6:05 pm, Kurt Hornik <Kurt.Hornik at wu.ac.at>
> > wrote:
> > >> | >>
> > >> | >>>>>>>> Duncan Murdoch writes:
> > >> | >>>
> > >> | >>>>> On 22/05/2015 8:49 PM, Imanuel Costigan wrote:
> > >> | >>>>> Are there any plans for CRAN to support NEWS files in
> markdown?
> > Bit of a hassle to go the the package?s Github (or other like) site to
> read
> > NEWS.
> > >> | >>>
> > >> | >>>> Not as far as I know.  There have been discussions about
> > increasing the
> > >> | >>>> support of Markdown, but so far the conclusion has been that
> > it's too
> > >> | >>>> hard to do -- the support is not stable enough on all the
> > platforms
> > >> | >>>> where R runs.
> > >> | >>>
> > >> | >>> There are actually two issues here.
> > >> | >>>
> > >> | >>> For CRAN, we could in principle take inst/NEWS.md files, convert
> > these
> > >> | >>> to HTML using pandoc, and use the HTML for the package web page.
> > (Would
> > >> | >>> need the CRAN incoming checks to be taught about inst/NEWS.md.)
> > >> | >>>
> > >> | >>> However, we cannot use such files for utils::news() because we
> do
> > not
> > >> | >>> (yet?) know how to reliably parse such files and extract the
> news
> > items
> > >> | >>> (and hence cannot really compute on the news information).
> > >> | >>>
> > >> | >>> Btw, currently only one package on CRAN has inst/NEWS.md
> (another
> > one
> > >> | >>> has NEWS.md at top level).
> > >> | >>>
> > >> | >>> Best
> > >> | >>> -k
> > >> | >>>
> > >> | >>>> Markdown is allowed for vignettes (because the package author
> > processes
> > >> | >>>> those), so I'd suggest putting your news into a vignette
> instead
> > of a
> > >> | >>>> news file.  Put in a token news file that points to the
> vignette
> > so
> > >> | >>>> users can find it.
> > >> | >>>
> > >> | >>>> Duncan Murdoch
> > >> | >>>
> > >> | >>>> ______________________________________________
> > >> | >>>> R-devel at r-project.org mailing list
> > >> | >>>> https://stat.ethz.ch/mailman/listinfo/r-devel
> > >> | >>
> > >> | >> [[alternative HTML version deleted]]
> > >> | >>
> > >> | >> ______________________________________________
> > >> | >> R-devel at r-project.org mailing list
> > >> | >> https://stat.ethz.ch/mailman/listinfo/r-devel
> > >> |
> > >> | > --
> > >> | > Peter Dalgaard, Professor,
> > >> | > Center for Statistics, Copenhagen Business School
> > >> | > Solbjerg Plads 3, 2000 Frederiksberg, Denmark
> > >> | > Phone: (+45)38153501
> > >> | > Email: pd.mes at cbs.dk  Priv: PDalgd at gmail.com
> > >> |
> > >> | > ______________________________________________
> > >> | > R-devel at r-project.org mailing list
> > >> | > https://stat.ethz.ch/mailman/listinfo/r-devel
> > >> |
> > >> | ______________________________________________
> > >> | R-devel at r-project.org mailing list
> > >> | https://stat.ethz.ch/mailman/listinfo/r-devel
> > >>
> >
> > > ______________________________________________
> > > R-devel at r-project.org mailing list
> > > https://stat.ethz.ch/mailman/listinfo/r-devel
> >
> > ______________________________________________
> > R-devel at r-project.org mailing list
> > https://stat.ethz.ch/mailman/listinfo/r-devel
> >
>
>         [[alternative HTML version deleted]]
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>



-- 
Gabriel Becker, PhD
Computational Biologist
Bioinformatics and Computational Biology
Genentech, Inc.

	[[alternative HTML version deleted]]


From ucfagls at gmail.com  Thu Jun  4 18:00:13 2015
From: ucfagls at gmail.com (Gavin Simpson)
Date: Thu, 4 Jun 2015 10:00:13 -0600
Subject: [Rd] NEWS.md support on CRAN
In-Reply-To: <CAOKDuOhy=P8hYktkXJ2dtRexihc5vzsC44TUqn80j+Nz7oAoxg@mail.gmail.com>
References: <4819669E-8260-47B0-96BF-DC2B29E6BE21@me.com>
	<555FD2FE.8050600@gmail.com>
	<21856.13500.513608.759602@fangorn.hornik.net>
	<B98D36A9-901A-4413-88C0-22D7E923612E@me.com>
	<581D2C19-ED47-4D1D-8FC7-C4B4F368E637@gmail.com>
	<21868.18877.410651.592015@fangorn.hornik.net>
	<21869.50739.349239.728644@max.nulle.part>
	<556DCADA.7060109@gmail.com>
	<21870.40730.965705.219861@fangorn.hornik.net>
	<CAOKDuOhy=P8hYktkXJ2dtRexihc5vzsC44TUqn80j+Nz7oAoxg@mail.gmail.com>
Message-ID: <CAAHES9y-ztcaK8uqbkR8vuYq4P3kmmJh3TS=Pp+81vSU2_22Xw@mail.gmail.com>

Mark,

You're conflating issues here andTwo things I think you are missing:

1. Markdown was designed to be as readable as possible in plain text format
(i.e. the sources, not the rendered file). There's nothing stopping you
reading and parsing a NEWS.md in your head trivially.

2. The proposal here is to have R render the NEWS.md natively, and display
it in your browser using it's own webserver (which it already has).

Rd markup is verbose, like LaTeX, and not really needed for a NEWS file.
But you need *something* if R is going to do something with it, it's just
that that thing need not be Rd markup.

Your point about NEWS actually containing something useful for the user is
an important one.

G

On 4 June 2015 at 09:05, Mark van der Loo <mark.vanderloo at gmail.com> wrote:

> FWIW (and a bit late in the discussion, I know), I for one do not care
> about having NEWS in md format at all.
>
> The solution the Yihui uses (linking to GH from NEWS.Rd) is really annoying
> for people with no direct Internet access. For example, I work at an
> institute that handles a lot of private data and most VM's with R on it
> have no direct internet access for that reason (of course internet is
> accessible but through an application running on a separate VM).
>
> Moreover, I as a user also do not care at all about links to GH #issues and
> which @user did what for each issue. These are details that are useful for
> people developing the package or for people who reported a bug. As a user I
> just want to read a short description like "bugfix: function f crashed on
> input y", or "function g is deprecated" without having to first navigate to
> another website.
>
> The most important thing about the NEWS is that it is easy to find (so in a
> fixed place), and aimed at users, not developers. It should come with the
> software, so it is also available when GH is offline or replaced with
> something new (since hey, didn't we all have a sourceforge or google code
> account in our younger days?).
>
> In short, I think that added value of NEWS.md is fairly limited but it does
> increase the risk of dispersing the NEWS all over the web.
>
> Best,
> Mark
>
>
>
>
>
>
>
>
>
>
> Op wo 3 jun. 2015 om 08:32 schreef Kurt Hornik <Kurt.Hornik at wu.ac.at>:
>
> > >>>>> Duncan Murdoch writes:
> >
> > > On 02/06/2015 11:05 AM, Dirk Eddelbuettel wrote:
> > >> Hi Kurt,
> > >>
> > >> On 1 June 2015 at 14:02, Kurt Hornik wrote:
> > >> | >>>>> peter dalgaard writes:
> > >> |
> > >> | >> On 30 May 2015, at 01:20 , Imanuel Costigan <i.costigan at me.com>
> > wrote:
> > >> | >>
> > >> | >> So I assume this commit means NEWS.md is now no longer on
> > blacklist?
> > >> | >>
> > >> |
> > >> | > ....in the development version. Not true of released versions.
> > >> |
> > >> | Now also in r-patched.
> > >>
> > >> Nice.
> > >>
> > >> Now, is there a way for package authors to preview how a .md would be
> > >> rendered?  I wrote mine with GitHub in mind, and they render fine. I
> > looked a
> > >> recently-uploaded README.md of mine on CRAN, and it got some of the
> > pandoc-y
> > >> parts wrong --- and looks unprofessional.
> > >>
> > >> I would like to avoid that.  How can I?
> >
> > > In the short term, you should probably try to run pandoc with the same
> > > version and options as CRAN.  Kurt, can you say what these are?  If you
> > > (Dirk) know pandoc options that emulate Github, it would probably make
> > > sense for CRAN to use those.
> >
> > Sure.  We currently have
> >
> > pandoc 1.12.4.2
> > Compiled with texmath 0.6.6.1, highlighting-kate 0.5.8.5.
> >
> > which we use with --email-obfuscation=references.
> >
> > Best
> > -k
> >
> > > In the longer term, the plan is to include our own parser and renderer.
> > > At that point this would be easy.
> >
> > > Duncan Murdoch
> > >>
> > >> Dirk
> > >>
> > >>
> > >> | -k
> > >> |
> > >> | > -pd
> > >> |
> > >> |
> > >> | >>
> >
> https://github.com/wch/r-source/commit/9ffe87264a1cd59a31a829f72d57af0f1bfa327a
> > >> | >>
> > >> | >> Sent from my iPad
> > >> | >>
> > >> | >> On 23 May 2015, at 6:05 pm, Kurt Hornik <Kurt.Hornik at wu.ac.at>
> > wrote:
> > >> | >>
> > >> | >>>>>>>> Duncan Murdoch writes:
> > >> | >>>
> > >> | >>>>> On 22/05/2015 8:49 PM, Imanuel Costigan wrote:
> > >> | >>>>> Are there any plans for CRAN to support NEWS files in
> markdown?
> > Bit of a hassle to go the the package?s Github (or other like) site to
> read
> > NEWS.
> > >> | >>>
> > >> | >>>> Not as far as I know.  There have been discussions about
> > increasing the
> > >> | >>>> support of Markdown, but so far the conclusion has been that
> > it's too
> > >> | >>>> hard to do -- the support is not stable enough on all the
> > platforms
> > >> | >>>> where R runs.
> > >> | >>>
> > >> | >>> There are actually two issues here.
> > >> | >>>
> > >> | >>> For CRAN, we could in principle take inst/NEWS.md files, convert
> > these
> > >> | >>> to HTML using pandoc, and use the HTML for the package web page.
> > (Would
> > >> | >>> need the CRAN incoming checks to be taught about inst/NEWS.md.)
> > >> | >>>
> > >> | >>> However, we cannot use such files for utils::news() because we
> do
> > not
> > >> | >>> (yet?) know how to reliably parse such files and extract the
> news
> > items
> > >> | >>> (and hence cannot really compute on the news information).
> > >> | >>>
> > >> | >>> Btw, currently only one package on CRAN has inst/NEWS.md
> (another
> > one
> > >> | >>> has NEWS.md at top level).
> > >> | >>>
> > >> | >>> Best
> > >> | >>> -k
> > >> | >>>
> > >> | >>>> Markdown is allowed for vignettes (because the package author
> > processes
> > >> | >>>> those), so I'd suggest putting your news into a vignette
> instead
> > of a
> > >> | >>>> news file.  Put in a token news file that points to the
> vignette
> > so
> > >> | >>>> users can find it.
> > >> | >>>
> > >> | >>>> Duncan Murdoch
> > >> | >>>
> > >> | >>>> ______________________________________________
> > >> | >>>> R-devel at r-project.org mailing list
> > >> | >>>> https://stat.ethz.ch/mailman/listinfo/r-devel
> > >> | >>
> > >> | >> [[alternative HTML version deleted]]
> > >> | >>
> > >> | >> ______________________________________________
> > >> | >> R-devel at r-project.org mailing list
> > >> | >> https://stat.ethz.ch/mailman/listinfo/r-devel
> > >> |
> > >> | > --
> > >> | > Peter Dalgaard, Professor,
> > >> | > Center for Statistics, Copenhagen Business School
> > >> | > Solbjerg Plads 3, 2000 Frederiksberg, Denmark
> > >> | > Phone: (+45)38153501
> > >> | > Email: pd.mes at cbs.dk  Priv: PDalgd at gmail.com
> > >> |
> > >> | > ______________________________________________
> > >> | > R-devel at r-project.org mailing list
> > >> | > https://stat.ethz.ch/mailman/listinfo/r-devel
> > >> |
> > >> | ______________________________________________
> > >> | R-devel at r-project.org mailing list
> > >> | https://stat.ethz.ch/mailman/listinfo/r-devel
> > >>
> >
> > > ______________________________________________
> > > R-devel at r-project.org mailing list
> > > https://stat.ethz.ch/mailman/listinfo/r-devel
> >
> > ______________________________________________
> > R-devel at r-project.org mailing list
> > https://stat.ethz.ch/mailman/listinfo/r-devel
> >
>
>         [[alternative HTML version deleted]]
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>



-- 
Gavin Simpson, PhD

	[[alternative HTML version deleted]]


From murdoch.duncan at gmail.com  Thu Jun  4 18:39:34 2015
From: murdoch.duncan at gmail.com (Duncan Murdoch)
Date: Thu, 04 Jun 2015 12:39:34 -0400
Subject: [Rd] NEWS.md support on CRAN
In-Reply-To: <CAOKDuOhy=P8hYktkXJ2dtRexihc5vzsC44TUqn80j+Nz7oAoxg@mail.gmail.com>
References: <4819669E-8260-47B0-96BF-DC2B29E6BE21@me.com>
	<555FD2FE.8050600@gmail.com>
	<21856.13500.513608.759602@fangorn.hornik.net>
	<B98D36A9-901A-4413-88C0-22D7E923612E@me.com>
	<581D2C19-ED47-4D1D-8FC7-C4B4F368E637@gmail.com>
	<21868.18877.410651.592015@fangorn.hornik.net>
	<21869.50739.349239.728644@max.nulle.part>
	<556DCADA.7060109@gmail.com>
	<21870.40730.965705.219861@fangorn.hornik.net>
	<CAOKDuOhy=P8hYktkXJ2dtRexihc5vzsC44TUqn80j+Nz7oAoxg@mail.gmail.com>
Message-ID: <55707F46.5010108@gmail.com>

On 04/06/2015 11:05 AM, Mark van der Loo wrote:
> FWIW (and a bit late in the discussion, I know), I for one do not care
> about having NEWS in md format at all.
>
> The solution the Yihui uses (linking to GH from NEWS.Rd) is really annoying
> for people with no direct Internet access. For example, I work at an
> institute that handles a lot of private data and most VM's with R on it
> have no direct internet access for that reason (of course internet is
> accessible but through an application running on a separate VM).
>
> Moreover, I as a user also do not care at all about links to GH #issues and
> which @user did what for each issue. These are details that are useful for
> people developing the package or for people who reported a bug. As a user I
> just want to read a short description like "bugfix: function f crashed on
> input y", or "function g is deprecated" without having to first navigate to
> another website.
>
> The most important thing about the NEWS is that it is easy to find (so in a
> fixed place), and aimed at users, not developers. It should come with the
> software, so it is also available when GH is offline or replaced with
> something new (since hey, didn't we all have a sourceforge or google code
> account in our younger days?).
>
> In short, I think that added value of NEWS.md is fairly limited but it does
> increase the risk of dispersing the NEWS all over the web.

I'd disagree a little bit:  NEWS should be both for users and 
developers.  The advantage I see to NEWS.md support is that it will 
encourage people who are more comfortable writing in Markdown to include 
the news in the package, rather than having a link to external news (as 
Yihui did), or no news at all (as many packages do).

It's pretty easy to have plain text news, but links in the news are 
helpful.  Links to bug reports are of most use to developers, but other 
links are useful to users.  For example, though I don't think anyone is 
making use of this, it should be possible to have links from NEWS.Rd (or 
NEWS.md when it is fully supported) directly into R's help system.  That 
would be especially useful for users.  It would probably even work on 
isolated systems, as long as they don't block access to the local http 
server.

Duncan Murdoch
>
> Best,
> Mark
>
>
>
>
>
>
>
>
>
>
> Op wo 3 jun. 2015 om 08:32 schreef Kurt Hornik <Kurt.Hornik at wu.ac.at>:
>
> > >>>>> Duncan Murdoch writes:
> >
> > > On 02/06/2015 11:05 AM, Dirk Eddelbuettel wrote:
> > >> Hi Kurt,
> > >>
> > >> On 1 June 2015 at 14:02, Kurt Hornik wrote:
> > >> | >>>>> peter dalgaard writes:
> > >> |
> > >> | >> On 30 May 2015, at 01:20 , Imanuel Costigan <i.costigan at me.com>
> > wrote:
> > >> | >>
> > >> | >> So I assume this commit means NEWS.md is now no longer on
> > blacklist?
> > >> | >>
> > >> |
> > >> | > ....in the development version. Not true of released versions.
> > >> |
> > >> | Now also in r-patched.
> > >>
> > >> Nice.
> > >>
> > >> Now, is there a way for package authors to preview how a .md would be
> > >> rendered?  I wrote mine with GitHub in mind, and they render fine. I
> > looked a
> > >> recently-uploaded README.md of mine on CRAN, and it got some of the
> > pandoc-y
> > >> parts wrong --- and looks unprofessional.
> > >>
> > >> I would like to avoid that.  How can I?
> >
> > > In the short term, you should probably try to run pandoc with the same
> > > version and options as CRAN.  Kurt, can you say what these are?  If you
> > > (Dirk) know pandoc options that emulate Github, it would probably make
> > > sense for CRAN to use those.
> >
> > Sure.  We currently have
> >
> > pandoc 1.12.4.2
> > Compiled with texmath 0.6.6.1, highlighting-kate 0.5.8.5.
> >
> > which we use with --email-obfuscation=references.
> >
> > Best
> > -k
> >
> > > In the longer term, the plan is to include our own parser and renderer.
> > > At that point this would be easy.
> >
> > > Duncan Murdoch
> > >>
> > >> Dirk
> > >>
> > >>
> > >> | -k
> > >> |
> > >> | > -pd
> > >> |
> > >> |
> > >> | >>
> > https://github.com/wch/r-source/commit/9ffe87264a1cd59a31a829f72d57af0f1bfa327a
> > >> | >>
> > >> | >> Sent from my iPad
> > >> | >>
> > >> | >> On 23 May 2015, at 6:05 pm, Kurt Hornik <Kurt.Hornik at wu.ac.at>
> > wrote:
> > >> | >>
> > >> | >>>>>>>> Duncan Murdoch writes:
> > >> | >>>
> > >> | >>>>> On 22/05/2015 8:49 PM, Imanuel Costigan wrote:
> > >> | >>>>> Are there any plans for CRAN to support NEWS files in markdown?
> > Bit of a hassle to go the the package?s Github (or other like) site to read
> > NEWS.
> > >> | >>>
> > >> | >>>> Not as far as I know.  There have been discussions about
> > increasing the
> > >> | >>>> support of Markdown, but so far the conclusion has been that
> > it's too
> > >> | >>>> hard to do -- the support is not stable enough on all the
> > platforms
> > >> | >>>> where R runs.
> > >> | >>>
> > >> | >>> There are actually two issues here.
> > >> | >>>
> > >> | >>> For CRAN, we could in principle take inst/NEWS.md files, convert
> > these
> > >> | >>> to HTML using pandoc, and use the HTML for the package web page.
> > (Would
> > >> | >>> need the CRAN incoming checks to be taught about inst/NEWS.md.)
> > >> | >>>
> > >> | >>> However, we cannot use such files for utils::news() because we do
> > not
> > >> | >>> (yet?) know how to reliably parse such files and extract the news
> > items
> > >> | >>> (and hence cannot really compute on the news information).
> > >> | >>>
> > >> | >>> Btw, currently only one package on CRAN has inst/NEWS.md (another
> > one
> > >> | >>> has NEWS.md at top level).
> > >> | >>>
> > >> | >>> Best
> > >> | >>> -k
> > >> | >>>
> > >> | >>>> Markdown is allowed for vignettes (because the package author
> > processes
> > >> | >>>> those), so I'd suggest putting your news into a vignette instead
> > of a
> > >> | >>>> news file.  Put in a token news file that points to the vignette
> > so
> > >> | >>>> users can find it.
> > >> | >>>
> > >> | >>>> Duncan Murdoch
> > >> | >>>
> > >> | >>>> ______________________________________________
> > >> | >>>> R-devel at r-project.org mailing list
> > >> | >>>> https://stat.ethz.ch/mailman/listinfo/r-devel
> > >> | >>
> > >> | >> [[alternative HTML version deleted]]
> > >> | >>
> > >> | >> ______________________________________________
> > >> | >> R-devel at r-project.org mailing list
> > >> | >> https://stat.ethz.ch/mailman/listinfo/r-devel
> > >> |
> > >> | > --
> > >> | > Peter Dalgaard, Professor,
> > >> | > Center for Statistics, Copenhagen Business School
> > >> | > Solbjerg Plads 3, 2000 Frederiksberg, Denmark
> > >> | > Phone: (+45)38153501
> > >> | > Email: pd.mes at cbs.dk  Priv: PDalgd at gmail.com
> > >> |
> > >> | > ______________________________________________
> > >> | > R-devel at r-project.org mailing list
> > >> | > https://stat.ethz.ch/mailman/listinfo/r-devel
> > >> |
> > >> | ______________________________________________
> > >> | R-devel at r-project.org mailing list
> > >> | https://stat.ethz.ch/mailman/listinfo/r-devel
> > >>
> >
> > > ______________________________________________
> > > R-devel at r-project.org mailing list
> > > https://stat.ethz.ch/mailman/listinfo/r-devel
> >
> > ______________________________________________
> > R-devel at r-project.org mailing list
> > https://stat.ethz.ch/mailman/listinfo/r-devel
> >
>


From ripley at stats.ox.ac.uk  Thu Jun  4 19:09:23 2015
From: ripley at stats.ox.ac.uk (Prof Brian Ripley)
Date: Thu, 04 Jun 2015 18:09:23 +0100
Subject: [Rd] NEWS.md support on CRAN
In-Reply-To: <CAAHES9y-ztcaK8uqbkR8vuYq4P3kmmJh3TS=Pp+81vSU2_22Xw@mail.gmail.com>
References: <4819669E-8260-47B0-96BF-DC2B29E6BE21@me.com>	<555FD2FE.8050600@gmail.com>	<21856.13500.513608.759602@fangorn.hornik.net>	<B98D36A9-901A-4413-88C0-22D7E923612E@me.com>	<581D2C19-ED47-4D1D-8FC7-C4B4F368E637@gmail.com>	<21868.18877.410651.592015@fangorn.hornik.net>	<21869.50739.349239.728644@max.nulle.part>	<556DCADA.7060109@gmail.com>	<21870.40730.965705.219861@fangorn.hornik.net>	<CAOKDuOhy=P8hYktkXJ2dtRexihc5vzsC44TUqn80j+Nz7oAoxg@mail.gmail.com>
	<CAAHES9y-ztcaK8uqbkR8vuYq4P3kmmJh3TS=Pp+81vSU2_22Xw@mail.gmail.com>
Message-ID: <55708643.8020703@stats.ox.ac.uk>

On 04/06/2015 17:00, Gavin Simpson wrote:
...
> 1. Markdown was designed to be as readable as possible in plain text format
> (i.e. the sources, not the rendered file). There's nothing stopping you
> reading and parsing a NEWS.md in your head trivially.
...

That claim is made frequently, but it is not my experience.  That you 
can filter out markup in your head does not mean others can -- it is 
very distracting to some visually impaired people (including when using 
a text-to-speech reader).

-- 
Brian D. Ripley,                  ripley at stats.ox.ac.uk
Emeritus Professor of Applied Statistics, University of Oxford
1 South Parks Road, Oxford OX1 3TG, UK


From murdoch.duncan at gmail.com  Thu Jun  4 19:16:28 2015
From: murdoch.duncan at gmail.com (Duncan Murdoch)
Date: Thu, 04 Jun 2015 13:16:28 -0400
Subject: [Rd] NEWS.md support on CRAN
In-Reply-To: <55708643.8020703@stats.ox.ac.uk>
References: <4819669E-8260-47B0-96BF-DC2B29E6BE21@me.com>	<555FD2FE.8050600@gmail.com>	<21856.13500.513608.759602@fangorn.hornik.net>	<B98D36A9-901A-4413-88C0-22D7E923612E@me.com>	<581D2C19-ED47-4D1D-8FC7-C4B4F368E637@gmail.com>	<21868.18877.410651.592015@fangorn.hornik.net>	<21869.50739.349239.728644@max.nulle.part>	<556DCADA.7060109@gmail.com>	<21870.40730.965705.219861@fangorn.hornik.net>	<CAOKDuOhy=P8hYktkXJ2dtRexihc5vzsC44TUqn80j+Nz7oAoxg@mail.gmail.com>	<CAAHES9y-ztcaK8uqbkR8vuYq4P3kmmJh3TS=Pp+81vSU2_22Xw@mail.gmail.com>
	<55708643.8020703@stats.ox.ac.uk>
Message-ID: <557087EC.5020100@gmail.com>

On 04/06/2015 1:09 PM, Prof Brian Ripley wrote:
> On 04/06/2015 17:00, Gavin Simpson wrote:
> ...
> > 1. Markdown was designed to be as readable as possible in plain text format
> > (i.e. the sources, not the rendered file). There's nothing stopping you
> > reading and parsing a NEWS.md in your head trivially.
> ...
>
> That claim is made frequently, but it is not my experience.  That you
> can filter out markup in your head does not mean others can -- it is
> very distracting to some visually impaired people (including when using
> a text-to-speech reader).
>
I agree.  I think we shouldn't be displaying raw Markdown, except 
possibly as a temporary measure, while we get the parsing and rendering 
in place.

Duncan Murdoch


From ucfagls at gmail.com  Thu Jun  4 19:18:15 2015
From: ucfagls at gmail.com (Gavin Simpson)
Date: Thu, 4 Jun 2015 11:18:15 -0600
Subject: [Rd] NEWS.md support on CRAN
In-Reply-To: <55708643.8020703@stats.ox.ac.uk>
References: <4819669E-8260-47B0-96BF-DC2B29E6BE21@me.com>
	<555FD2FE.8050600@gmail.com>
	<21856.13500.513608.759602@fangorn.hornik.net>
	<B98D36A9-901A-4413-88C0-22D7E923612E@me.com>
	<581D2C19-ED47-4D1D-8FC7-C4B4F368E637@gmail.com>
	<21868.18877.410651.592015@fangorn.hornik.net>
	<21869.50739.349239.728644@max.nulle.part>
	<556DCADA.7060109@gmail.com>
	<21870.40730.965705.219861@fangorn.hornik.net>
	<CAOKDuOhy=P8hYktkXJ2dtRexihc5vzsC44TUqn80j+Nz7oAoxg@mail.gmail.com>
	<CAAHES9y-ztcaK8uqbkR8vuYq4P3kmmJh3TS=Pp+81vSU2_22Xw@mail.gmail.com>
	<55708643.8020703@stats.ox.ac.uk>
Message-ID: <CAAHES9wf-UQY1FJHy0MTURh4HGtFS4dJb=YO6NGcXJ3jiiSwzg@mail.gmail.com>

Agreed, and "There's nothing stopping you reading and parsing a NEWS.md in
your head trivially." was very poorly phrased on my part. Just because I
can filter this out doesn't mean it is easy for others to do so.

Clearly anything with markup, even as light as markdown can be, is not as
simple as plain text.

G

On 4 June 2015 at 11:09, Prof Brian Ripley <ripley at stats.ox.ac.uk> wrote:

> On 04/06/2015 17:00, Gavin Simpson wrote:
> ...
>
>> 1. Markdown was designed to be as readable as possible in plain text
>> format
>> (i.e. the sources, not the rendered file). There's nothing stopping you
>> reading and parsing a NEWS.md in your head trivially.
>>
> ...
>
> That claim is made frequently, but it is not my experience.  That you can
> filter out markup in your head does not mean others can -- it is very
> distracting to some visually impaired people (including when using a
> text-to-speech reader).
>
>
> --
> Brian D. Ripley,                  ripley at stats.ox.ac.uk
> Emeritus Professor of Applied Statistics, University of Oxford
> 1 South Parks Road, Oxford OX1 3TG, UK
>



-- 
Gavin Simpson, PhD

	[[alternative HTML version deleted]]


From ripley at stats.ox.ac.uk  Thu Jun  4 19:33:44 2015
From: ripley at stats.ox.ac.uk (Prof Brian Ripley)
Date: Thu, 04 Jun 2015 18:33:44 +0100
Subject: [Rd] Problem with shared library and lapack under windows
In-Reply-To: <1433317685951-4708092.post@n4.nabble.com>
References: <1433317685951-4708092.post@n4.nabble.com>
Message-ID: <55708BF8.1070808@stats.ox.ac.uk>

On 03/06/2015 08:48, bstr wrote:
> Hi all,
>
> I have a C function, say Cfun, that calls Lapack's DGEMM routine and I need
> to create a shared library to use Cfun inside R. The C file is the following
>
> #include<stdio.h>
> #include<R.h>
> #include<R_ext/Lapack.h>
>
>
> void Cfun(double *res, double *X, int *n, int *q)
> {
> 	char *ptr_TRANSA, TRANSA='T', *ptr_TRANSB, TRANSB='N';
> 	ptr_TRANSA=&TRANSA;
> 	ptr_TRANSB=&TRANSB;
> 	double *ptr_ALPHA, ALPHA=1.0, *ptr_BETA, BETA=0.0;
> 	ptr_ALPHA=&ALPHA;
> 	ptr_BETA=&BETA;
>
> 	dgemm_(ptr_TRANSA, ptr_TRANSB, q, q, n, ptr_ALPHA, X, n, X, n, ptr_BETA,
> res, q);
> }
>
> In Ubuntu I have no problem in compiling:  R CMD SHLIB -llapack myfile.c.
> However, under Windows the -llapack flag is not recognised and I am able to
> get the code compiled only if I build an R package with the suitable
> Makevars file options: PKG_LIBS=$(LAPACK_LIBS) $(FLIBS). Is there a way to
> get the .dll without resorting to build a package?

SHLIB reads a Makevars file ....  The manual says so right at the top of 
the section 
http://cran.r-project.org/doc/manuals/r-release/R-exts.html#Using-Makevars .

>
> Thanks in advance,
>
> N. Lunardon


-- 
Brian D. Ripley,                  ripley at stats.ox.ac.uk
Emeritus Professor of Applied Statistics, University of Oxford
1 South Parks Road, Oxford OX1 3TG, UK


From ucfagls at gmail.com  Thu Jun  4 19:35:31 2015
From: ucfagls at gmail.com (Gavin Simpson)
Date: Thu, 4 Jun 2015 11:35:31 -0600
Subject: [Rd] NEWS.md support on CRAN
In-Reply-To: <557087EC.5020100@gmail.com>
References: <4819669E-8260-47B0-96BF-DC2B29E6BE21@me.com>
	<555FD2FE.8050600@gmail.com>
	<21856.13500.513608.759602@fangorn.hornik.net>
	<B98D36A9-901A-4413-88C0-22D7E923612E@me.com>
	<581D2C19-ED47-4D1D-8FC7-C4B4F368E637@gmail.com>
	<21868.18877.410651.592015@fangorn.hornik.net>
	<21869.50739.349239.728644@max.nulle.part>
	<556DCADA.7060109@gmail.com>
	<21870.40730.965705.219861@fangorn.hornik.net>
	<CAOKDuOhy=P8hYktkXJ2dtRexihc5vzsC44TUqn80j+Nz7oAoxg@mail.gmail.com>
	<CAAHES9y-ztcaK8uqbkR8vuYq4P3kmmJh3TS=Pp+81vSU2_22Xw@mail.gmail.com>
	<55708643.8020703@stats.ox.ac.uk> <557087EC.5020100@gmail.com>
Message-ID: <CAAHES9zb76pGAG-1SrUS=Myqix7TPrMr0rMoMn-3r06qCj7=Ng@mail.gmail.com>

On 4 June 2015 at 11:16, Duncan Murdoch <murdoch.duncan at gmail.com> wrote:

> On 04/06/2015 1:09 PM, Prof Brian Ripley wrote:
>
>> On 04/06/2015 17:00, Gavin Simpson wrote:
>> ...
>> > 1. Markdown was designed to be as readable as possible in plain text
>> format
>> > (i.e. the sources, not the rendered file). There's nothing stopping you
>> > reading and parsing a NEWS.md in your head trivially.
>> ...
>>
>> That claim is made frequently, but it is not my experience.  That you
>> can filter out markup in your head does not mean others can -- it is
>> very distracting to some visually impaired people (including when using
>> a text-to-speech reader).
>>
>>  I agree.  I think we shouldn't be displaying raw Markdown, except
> possibly as a temporary measure, while we get the parsing and rendering in
> place.


Just to be clear; I wasn't suggesting that R should be displaying raw
Markdown. What I was getting at was even if your local setup stops you
seeing a rendered version of the file (for whatever reason) reading the
Markdown source is a lot easier than reading a similar file marked up using
Rd. Yet for those with less restrictive setups Markdown maintains many of
the benefits that the Rd markup allows.

I just failed miserably, and insensitively(!), to convey that point.

G


>
>
Duncan Murdoch
>



-- 
Gavin Simpson, PhD

	[[alternative HTML version deleted]]


From mark.vanderloo at gmail.com  Fri Jun  5 08:53:36 2015
From: mark.vanderloo at gmail.com (Mark van der Loo)
Date: Fri, 5 Jun 2015 08:53:36 +0200
Subject: [Rd] NEWS.md support on CRAN
In-Reply-To: <CAAHES9zb76pGAG-1SrUS=Myqix7TPrMr0rMoMn-3r06qCj7=Ng@mail.gmail.com>
References: <4819669E-8260-47B0-96BF-DC2B29E6BE21@me.com>
	<555FD2FE.8050600@gmail.com>
	<21856.13500.513608.759602@fangorn.hornik.net>
	<B98D36A9-901A-4413-88C0-22D7E923612E@me.com>
	<581D2C19-ED47-4D1D-8FC7-C4B4F368E637@gmail.com>
	<21868.18877.410651.592015@fangorn.hornik.net>
	<21869.50739.349239.728644@max.nulle.part>
	<556DCADA.7060109@gmail.com>
	<21870.40730.965705.219861@fangorn.hornik.net>
	<CAOKDuOhy=P8hYktkXJ2dtRexihc5vzsC44TUqn80j+Nz7oAoxg@mail.gmail.com>
	<CAAHES9y-ztcaK8uqbkR8vuYq4P3kmmJh3TS=Pp+81vSU2_22Xw@mail.gmail.com>
	<55708643.8020703@stats.ox.ac.uk> <557087EC.5020100@gmail.com>
	<CAAHES9zb76pGAG-1SrUS=Myqix7TPrMr0rMoMn-3r06qCj7=Ng@mail.gmail.com>
Message-ID: <CAOKDuOjWOBh-6z9ucdNQnN+mBKMb6DAcSsoGka1GcMJ=k4kExQ@mail.gmail.com>

@Gavin: My aim was to point out that the ability to mix developer-facing
documentation with user-facing documentation is not a good reason to want
to support md.

I agree with Duncan that links to within a package would be useful (not
sure if NEWS.Rd supports this).

I'm not so convinced that package authors that do not even add a plain text
NEWS file will create a NEWS.md file.

Adding NEWS.md means we now have three ways to specify the NEWS:

- a plain text NEWS file; following the GNU recommendations
- NEWS.Rd
- NEWS.md

Would it not be more elegant to have e.g. roxygen2 generate NEWS.Rd?
(perhaps it is already possible, I'm not sure of that). I don't maintain
CRAN, but I know what I would prefer..

Cheers,
Mark



?

	[[alternative HTML version deleted]]


From thosjleeper at gmail.com  Fri Jun  5 14:16:57 2015
From: thosjleeper at gmail.com (Thomas J. Leeper)
Date: Fri, 5 Jun 2015 14:16:57 +0200
Subject: [Rd] R-devel Digest, Vol 148, Issue 5
In-Reply-To: <mailman.19.1433498404.25411.r-devel@r-project.org>
References: <mailman.19.1433498404.25411.r-devel@r-project.org>
Message-ID: <CAOC91MRAGr7xQnxKiY89N_qKqd=FbBifjmLSSy_c_6PpjMz6pg@mail.gmail.com>

It's disappointing that many packages do not have a NEWS file. Perhaps
CRAN should require NEWS or CHANGELOG, as long as the system is being
reformed to potentially accommodate markdown anyway.

-Thomas

Thomas J. Leeper
http://www.thomasleeper.com


On Fri, Jun 5, 2015 at 12:00 PM,  <r-devel-request at r-project.org> wrote:
> Date: Thu, 04 Jun 2015 12:39:34 -0400
> From: Duncan Murdoch <murdoch.duncan at gmail.com>
> To: Mark van der Loo <mark.vanderloo at gmail.com>, Kurt.Hornik at wu.ac.at
> Cc: R Devel Mailing List <r-devel at r-project.org>,       Dirk Eddelbuettel
>         <edd at debian.org>, Imanuel Costigan <i.costigan at me.com>
> Subject: Re: [Rd] NEWS.md support on CRAN
> Message-ID: <55707F46.5010108 at gmail.com>
> Content-Type: text/plain; charset=utf-8; format=flowed
>
> On 04/06/2015 11:05 AM, Mark van der Loo wrote:
>> FWIW (and a bit late in the discussion, I know), I for one do not care
>> about having NEWS in md format at all.
>>
>> The solution the Yihui uses (linking to GH from NEWS.Rd) is really annoying
>> for people with no direct Internet access. For example, I work at an
>> institute that handles a lot of private data and most VM's with R on it
>> have no direct internet access for that reason (of course internet is
>> accessible but through an application running on a separate VM).
>>
>> Moreover, I as a user also do not care at all about links to GH #issues and
>> which @user did what for each issue. These are details that are useful for
>> people developing the package or for people who reported a bug. As a user I
>> just want to read a short description like "bugfix: function f crashed on
>> input y", or "function g is deprecated" without having to first navigate to
>> another website.
>>
>> The most important thing about the NEWS is that it is easy to find (so in a
>> fixed place), and aimed at users, not developers. It should come with the
>> software, so it is also available when GH is offline or replaced with
>> something new (since hey, didn't we all have a sourceforge or google code
>> account in our younger days?).
>>
>> In short, I think that added value of NEWS.md is fairly limited but it does
>> increase the risk of dispersing the NEWS all over the web.
>
> I'd disagree a little bit:  NEWS should be both for users and
> developers.  The advantage I see to NEWS.md support is that it will
> encourage people who are more comfortable writing in Markdown to include
> the news in the package, rather than having a link to external news (as
> Yihui did), or no news at all (as many packages do).
>
> It's pretty easy to have plain text news, but links in the news are
> helpful.  Links to bug reports are of most use to developers, but other
> links are useful to users.  For example, though I don't think anyone is
> making use of this, it should be possible to have links from NEWS.Rd (or
> NEWS.md when it is fully supported) directly into R's help system.  That
> would be especially useful for users.  It would probably even work on
> isolated systems, as long as they don't block access to the local http
> server.
>
> Duncan Murdoch
>>
>> Best,
>> Mark
>>
>>
>>
>>
>>
>>
>>
>>
>>
>>
>> Op wo 3 jun. 2015 om 08:32 schreef Kurt Hornik <Kurt.Hornik at wu.ac.at>:
>>
>> > >>>>> Duncan Murdoch writes:
>> >
>> > > On 02/06/2015 11:05 AM, Dirk Eddelbuettel wrote:
>> > >> Hi Kurt,
>> > >>
>> > >> On 1 June 2015 at 14:02, Kurt Hornik wrote:
>> > >> | >>>>> peter dalgaard writes:
>> > >> |
>> > >> | >> On 30 May 2015, at 01:20 , Imanuel Costigan <i.costigan at me.com>
>> > wrote:
>> > >> | >>
>> > >> | >> So I assume this commit means NEWS.md is now no longer on
>> > blacklist?
>> > >> | >>
>> > >> |
>> > >> | > ....in the development version. Not true of released versions.
>> > >> |
>> > >> | Now also in r-patched.
>> > >>
>> > >> Nice.
>> > >>
>> > >> Now, is there a way for package authors to preview how a .md would be
>> > >> rendered?  I wrote mine with GitHub in mind, and they render fine. I
>> > looked a
>> > >> recently-uploaded README.md of mine on CRAN, and it got some of the
>> > pandoc-y
>> > >> parts wrong --- and looks unprofessional.
>> > >>
>> > >> I would like to avoid that.  How can I?
>> >
>> > > In the short term, you should probably try to run pandoc with the same
>> > > version and options as CRAN.  Kurt, can you say what these are?  If you
>> > > (Dirk) know pandoc options that emulate Github, it would probably make
>> > > sense for CRAN to use those.
>> >
>> > Sure.  We currently have
>> >
>> > pandoc 1.12.4.2
>> > Compiled with texmath 0.6.6.1, highlighting-kate 0.5.8.5.
>> >
>> > which we use with --email-obfuscation=references.
>> >
>> > Best
>> > -k
>> >
>> > > In the longer term, the plan is to include our own parser and renderer.
>> > > At that point this would be easy.
>> >
>> > > Duncan Murdoch
>> > >>
>> > >> Dirk
>> > >>
>> > >>
>> > >> | -k
>> > >> |
>> > >> | > -pd
>> > >> |
>> > >> |
>> > >> | >>
>> > https://github.com/wch/r-source/commit/9ffe87264a1cd59a31a829f72d57af0f1bfa327a
>> > >> | >>
>> > >> | >> Sent from my iPad
>> > >> | >>
>> > >> | >> On 23 May 2015, at 6:05 pm, Kurt Hornik <Kurt.Hornik at wu.ac.at>
>> > wrote:
>> > >> | >>
>> > >> | >>>>>>>> Duncan Murdoch writes:
>> > >> | >>>
>> > >> | >>>>> On 22/05/2015 8:49 PM, Imanuel Costigan wrote:
>> > >> | >>>>> Are there any plans for CRAN to support NEWS files in markdown?
>> > Bit of a hassle to go the the package?s Github (or other like) site to read
>> > NEWS.
>> > >> | >>>
>> > >> | >>>> Not as far as I know.  There have been discussions about
>> > increasing the
>> > >> | >>>> support of Markdown, but so far the conclusion has been that
>> > it's too
>> > >> | >>>> hard to do -- the support is not stable enough on all the
>> > platforms
>> > >> | >>>> where R runs.
>> > >> | >>>
>> > >> | >>> There are actually two issues here.
>> > >> | >>>
>> > >> | >>> For CRAN, we could in principle take inst/NEWS.md files, convert
>> > these
>> > >> | >>> to HTML using pandoc, and use the HTML for the package web page.
>> > (Would
>> > >> | >>> need the CRAN incoming checks to be taught about inst/NEWS.md.)
>> > >> | >>>
>> > >> | >>> However, we cannot use such files for utils::news() because we do
>> > not
>> > >> | >>> (yet?) know how to reliably parse such files and extract the news
>> > items
>> > >> | >>> (and hence cannot really compute on the news information).
>> > >> | >>>
>> > >> | >>> Btw, currently only one package on CRAN has inst/NEWS.md (another
>> > one
>> > >> | >>> has NEWS.md at top level).
>> > >> | >>>
>> > >> | >>> Best
>> > >> | >>> -k
>> > >> | >>>
>> > >> | >>>> Markdown is allowed for vignettes (because the package author
>> > processes
>> > >> | >>>> those), so I'd suggest putting your news into a vignette instead
>> > of a
>> > >> | >>>> news file.  Put in a token news file that points to the vignette
>> > so
>> > >> | >>>> users can find it.
>> > >> | >>>
>> > >> | >>>> Duncan Murdoch
>> > >> | >>>
>> > >> | >>>> ______________________________________________
>> > >> | >>>> R-devel at r-project.org mailing list
>> > >> | >>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>> > >> | >>
>> > >> | >> [[alternative HTML version deleted]]
>> > >> | >>
>> > >> | >> ______________________________________________
>> > >> | >> R-devel at r-project.org mailing list
>> > >> | >> https://stat.ethz.ch/mailman/listinfo/r-devel
>> > >> |
>> > >> | > --
>> > >> | > Peter Dalgaard, Professor,
>> > >> | > Center for Statistics, Copenhagen Business School
>> > >> | > Solbjerg Plads 3, 2000 Frederiksberg, Denmark
>> > >> | > Phone: (+45)38153501
>> > >> | > Email: pd.mes at cbs.dk  Priv: PDalgd at gmail.com
>> > >> |
>> > >> | > ______________________________________________
>> > >> | > R-devel at r-project.org mailing list
>> > >> | > https://stat.ethz.ch/mailman/listinfo/r-devel
>> > >> |
>> > >> | ______________________________________________
>> > >> | R-devel at r-project.org mailing list
>> > >> | https://stat.ethz.ch/mailman/listinfo/r-devel
>> > >>
>> >
>> > > ______________________________________________
>> > > R-devel at r-project.org mailing list
>> > > https://stat.ethz.ch/mailman/listinfo/r-devel
>> >
>> > ______________________________________________
>> > R-devel at r-project.org mailing list
>> > https://stat.ethz.ch/mailman/listinfo/r-devel
>> >
>>


From bhh at xs4all.nl  Fri Jun  5 15:56:17 2015
From: bhh at xs4all.nl (Berend Hasselman)
Date: Fri, 5 Jun 2015 15:56:17 +0200
Subject: [Rd] R-devel Digest, Vol 148, Issue 5
In-Reply-To: <CAOC91MRAGr7xQnxKiY89N_qKqd=FbBifjmLSSy_c_6PpjMz6pg@mail.gmail.com>
References: <mailman.19.1433498404.25411.r-devel@r-project.org>
	<CAOC91MRAGr7xQnxKiY89N_qKqd=FbBifjmLSSy_c_6PpjMz6pg@mail.gmail.com>
Message-ID: <DB04C493-E384-4B4E-BC5A-23199250023E@xs4all.nl>


> On 05-06-2015, at 14:16, Thomas J. Leeper <thosjleeper at gmail.com> wrote:
> 
> It's disappointing that many packages do not have a NEWS file. Perhaps
> CRAN should require NEWS or CHANGELOG, as long as the system is being
> reformed to potentially accommodate markdown anyway.
> 

I don?t really care about markdown.
But I agree with the lack of a NEWS file in (many) packages.
It would certainly be a good idea to require a NEWS or CHANGELOG file.
With the latest version as first in the file!

Berend


From murdoch.duncan at gmail.com  Fri Jun  5 18:32:49 2015
From: murdoch.duncan at gmail.com (Duncan Murdoch)
Date: Fri, 05 Jun 2015 12:32:49 -0400
Subject: [Rd] NEWS.md support on CRAN
In-Reply-To: <CAOC91MRAGr7xQnxKiY89N_qKqd=FbBifjmLSSy_c_6PpjMz6pg@mail.gmail.com>
References: <mailman.19.1433498404.25411.r-devel@r-project.org>
	<CAOC91MRAGr7xQnxKiY89N_qKqd=FbBifjmLSSy_c_6PpjMz6pg@mail.gmail.com>
Message-ID: <5571CF31.6070007@gmail.com>

On 05/06/2015 8:16 AM, Thomas J. Leeper wrote:
> It's disappointing that many packages do not have a NEWS file. Perhaps
> CRAN should require NEWS or CHANGELOG, as long as the system is being
> reformed to potentially accommodate markdown anyway.

I think we should all be careful about suggesting work for other 
people.  This would be a huge amount of work, probably hundreds of hours 
in aggregate, for all those package authors and the CRAN maintainers.

On the other hand, we can gently nudge package authors to better 
practices.  When we talk in public about R packages, we should point out 
that we use a certain list of characteristics to judge their quality.  
My list includes:

  - Is it on CRAN?
  - Does it have an overview vignette?
  - Is it updated fairly regularly?
  - Do most of the help pages include examples?
  - Will it install on my OS without much trouble?

Your list could include

  - Does it have a readable NEWS file?

I do use packages which have negative answers to some of those 
questions, but they definitely influence my choice when I'm looking at a 
package for the first time.

Duncan Murdoch

>
> -Thomas
>
> Thomas J. Leeper
> http://www.thomasleeper.com
>
>
> On Fri, Jun 5, 2015 at 12:00 PM,  <r-devel-request at r-project.org> wrote:
> > Date: Thu, 04 Jun 2015 12:39:34 -0400
> > From: Duncan Murdoch <murdoch.duncan at gmail.com>
> > To: Mark van der Loo <mark.vanderloo at gmail.com>, Kurt.Hornik at wu.ac.at
> > Cc: R Devel Mailing List <r-devel at r-project.org>,       Dirk Eddelbuettel
> >         <edd at debian.org>, Imanuel Costigan <i.costigan at me.com>
> > Subject: Re: [Rd] NEWS.md support on CRAN
> > Message-ID: <55707F46.5010108 at gmail.com>
> > Content-Type: text/plain; charset=utf-8; format=flowed
> >
> > On 04/06/2015 11:05 AM, Mark van der Loo wrote:
> >> FWIW (and a bit late in the discussion, I know), I for one do not care
> >> about having NEWS in md format at all.
> >>
> >> The solution the Yihui uses (linking to GH from NEWS.Rd) is really annoying
> >> for people with no direct Internet access. For example, I work at an
> >> institute that handles a lot of private data and most VM's with R on it
> >> have no direct internet access for that reason (of course internet is
> >> accessible but through an application running on a separate VM).
> >>
> >> Moreover, I as a user also do not care at all about links to GH #issues and
> >> which @user did what for each issue. These are details that are useful for
> >> people developing the package or for people who reported a bug. As a user I
> >> just want to read a short description like "bugfix: function f crashed on
> >> input y", or "function g is deprecated" without having to first navigate to
> >> another website.
> >>
> >> The most important thing about the NEWS is that it is easy to find (so in a
> >> fixed place), and aimed at users, not developers. It should come with the
> >> software, so it is also available when GH is offline or replaced with
> >> something new (since hey, didn't we all have a sourceforge or google code
> >> account in our younger days?).
> >>
> >> In short, I think that added value of NEWS.md is fairly limited but it does
> >> increase the risk of dispersing the NEWS all over the web.
> >
> > I'd disagree a little bit:  NEWS should be both for users and
> > developers.  The advantage I see to NEWS.md support is that it will
> > encourage people who are more comfortable writing in Markdown to include
> > the news in the package, rather than having a link to external news (as
> > Yihui did), or no news at all (as many packages do).
> >
> > It's pretty easy to have plain text news, but links in the news are
> > helpful.  Links to bug reports are of most use to developers, but other
> > links are useful to users.  For example, though I don't think anyone is
> > making use of this, it should be possible to have links from NEWS.Rd (or
> > NEWS.md when it is fully supported) directly into R's help system.  That
> > would be especially useful for users.  It would probably even work on
> > isolated systems, as long as they don't block access to the local http
> > server.
> >
> > Duncan Murdoch
> >>
> >> Best,
> >> Mark
> >>
> >>
> >>
> >>
> >>
> >>
> >>
> >>
> >>
> >>
> >> Op wo 3 jun. 2015 om 08:32 schreef Kurt Hornik <Kurt.Hornik at wu.ac.at>:
> >>
> >> > >>>>> Duncan Murdoch writes:
> >> >
> >> > > On 02/06/2015 11:05 AM, Dirk Eddelbuettel wrote:
> >> > >> Hi Kurt,
> >> > >>
> >> > >> On 1 June 2015 at 14:02, Kurt Hornik wrote:
> >> > >> | >>>>> peter dalgaard writes:
> >> > >> |
> >> > >> | >> On 30 May 2015, at 01:20 , Imanuel Costigan <i.costigan at me.com>
> >> > wrote:
> >> > >> | >>
> >> > >> | >> So I assume this commit means NEWS.md is now no longer on
> >> > blacklist?
> >> > >> | >>
> >> > >> |
> >> > >> | > ....in the development version. Not true of released versions.
> >> > >> |
> >> > >> | Now also in r-patched.
> >> > >>
> >> > >> Nice.
> >> > >>
> >> > >> Now, is there a way for package authors to preview how a .md would be
> >> > >> rendered?  I wrote mine with GitHub in mind, and they render fine. I
> >> > looked a
> >> > >> recently-uploaded README.md of mine on CRAN, and it got some of the
> >> > pandoc-y
> >> > >> parts wrong --- and looks unprofessional.
> >> > >>
> >> > >> I would like to avoid that.  How can I?
> >> >
> >> > > In the short term, you should probably try to run pandoc with the same
> >> > > version and options as CRAN.  Kurt, can you say what these are?  If you
> >> > > (Dirk) know pandoc options that emulate Github, it would probably make
> >> > > sense for CRAN to use those.
> >> >
> >> > Sure.  We currently have
> >> >
> >> > pandoc 1.12.4.2
> >> > Compiled with texmath 0.6.6.1, highlighting-kate 0.5.8.5.
> >> >
> >> > which we use with --email-obfuscation=references.
> >> >
> >> > Best
> >> > -k
> >> >
> >> > > In the longer term, the plan is to include our own parser and renderer.
> >> > > At that point this would be easy.
> >> >
> >> > > Duncan Murdoch
> >> > >>
> >> > >> Dirk
> >> > >>
> >> > >>
> >> > >> | -k
> >> > >> |
> >> > >> | > -pd
> >> > >> |
> >> > >> |
> >> > >> | >>
> >> > https://github.com/wch/r-source/commit/9ffe87264a1cd59a31a829f72d57af0f1bfa327a
> >> > >> | >>
> >> > >> | >> Sent from my iPad
> >> > >> | >>
> >> > >> | >> On 23 May 2015, at 6:05 pm, Kurt Hornik <Kurt.Hornik at wu.ac.at>
> >> > wrote:
> >> > >> | >>
> >> > >> | >>>>>>>> Duncan Murdoch writes:
> >> > >> | >>>
> >> > >> | >>>>> On 22/05/2015 8:49 PM, Imanuel Costigan wrote:
> >> > >> | >>>>> Are there any plans for CRAN to support NEWS files in markdown?
> >> > Bit of a hassle to go the the package?s Github (or other like) site to read
> >> > NEWS.
> >> > >> | >>>
> >> > >> | >>>> Not as far as I know.  There have been discussions about
> >> > increasing the
> >> > >> | >>>> support of Markdown, but so far the conclusion has been that
> >> > it's too
> >> > >> | >>>> hard to do -- the support is not stable enough on all the
> >> > platforms
> >> > >> | >>>> where R runs.
> >> > >> | >>>
> >> > >> | >>> There are actually two issues here.
> >> > >> | >>>
> >> > >> | >>> For CRAN, we could in principle take inst/NEWS.md files, convert
> >> > these
> >> > >> | >>> to HTML using pandoc, and use the HTML for the package web page.
> >> > (Would
> >> > >> | >>> need the CRAN incoming checks to be taught about inst/NEWS.md.)
> >> > >> | >>>
> >> > >> | >>> However, we cannot use such files for utils::news() because we do
> >> > not
> >> > >> | >>> (yet?) know how to reliably parse such files and extract the news
> >> > items
> >> > >> | >>> (and hence cannot really compute on the news information).
> >> > >> | >>>
> >> > >> | >>> Btw, currently only one package on CRAN has inst/NEWS.md (another
> >> > one
> >> > >> | >>> has NEWS.md at top level).
> >> > >> | >>>
> >> > >> | >>> Best
> >> > >> | >>> -k
> >> > >> | >>>
> >> > >> | >>>> Markdown is allowed for vignettes (because the package author
> >> > processes
> >> > >> | >>>> those), so I'd suggest putting your news into a vignette instead
> >> > of a
> >> > >> | >>>> news file.  Put in a token news file that points to the vignette
> >> > so
> >> > >> | >>>> users can find it.
> >> > >> | >>>
> >> > >> | >>>> Duncan Murdoch
> >> > >> | >>>
> >> > >> | >>>> ______________________________________________
> >> > >> | >>>> R-devel at r-project.org mailing list
> >> > >> | >>>> https://stat.ethz.ch/mailman/listinfo/r-devel
> >> > >> | >>
> >> > >> | >> [[alternative HTML version deleted]]
> >> > >> | >>
> >> > >> | >> ______________________________________________
> >> > >> | >> R-devel at r-project.org mailing list
> >> > >> | >> https://stat.ethz.ch/mailman/listinfo/r-devel
> >> > >> |
> >> > >> | > --
> >> > >> | > Peter Dalgaard, Professor,
> >> > >> | > Center for Statistics, Copenhagen Business School
> >> > >> | > Solbjerg Plads 3, 2000 Frederiksberg, Denmark
> >> > >> | > Phone: (+45)38153501
> >> > >> | > Email: pd.mes at cbs.dk  Priv: PDalgd at gmail.com
> >> > >> |
> >> > >> | > ______________________________________________
> >> > >> | > R-devel at r-project.org mailing list
> >> > >> | > https://stat.ethz.ch/mailman/listinfo/r-devel
> >> > >> |
> >> > >> | ______________________________________________
> >> > >> | R-devel at r-project.org mailing list
> >> > >> | https://stat.ethz.ch/mailman/listinfo/r-devel
> >> > >>
> >> >
> >> > > ______________________________________________
> >> > > R-devel at r-project.org mailing list
> >> > > https://stat.ethz.ch/mailman/listinfo/r-devel
> >> >
> >> > ______________________________________________
> >> > R-devel at r-project.org mailing list
> >> > https://stat.ethz.ch/mailman/listinfo/r-devel
> >> >
> >>
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From ucfagls at gmail.com  Fri Jun  5 18:39:23 2015
From: ucfagls at gmail.com (Gavin Simpson)
Date: Fri, 5 Jun 2015 10:39:23 -0600
Subject: [Rd] NEWS.md support on CRAN
In-Reply-To: <CAOKDuOjWOBh-6z9ucdNQnN+mBKMb6DAcSsoGka1GcMJ=k4kExQ@mail.gmail.com>
References: <4819669E-8260-47B0-96BF-DC2B29E6BE21@me.com>
	<555FD2FE.8050600@gmail.com>
	<21856.13500.513608.759602@fangorn.hornik.net>
	<B98D36A9-901A-4413-88C0-22D7E923612E@me.com>
	<581D2C19-ED47-4D1D-8FC7-C4B4F368E637@gmail.com>
	<21868.18877.410651.592015@fangorn.hornik.net>
	<21869.50739.349239.728644@max.nulle.part>
	<556DCADA.7060109@gmail.com>
	<21870.40730.965705.219861@fangorn.hornik.net>
	<CAOKDuOhy=P8hYktkXJ2dtRexihc5vzsC44TUqn80j+Nz7oAoxg@mail.gmail.com>
	<CAAHES9y-ztcaK8uqbkR8vuYq4P3kmmJh3TS=Pp+81vSU2_22Xw@mail.gmail.com>
	<55708643.8020703@stats.ox.ac.uk> <557087EC.5020100@gmail.com>
	<CAAHES9zb76pGAG-1SrUS=Myqix7TPrMr0rMoMn-3r06qCj7=Ng@mail.gmail.com>
	<CAOKDuOjWOBh-6z9ucdNQnN+mBKMb6DAcSsoGka1GcMJ=k4kExQ@mail.gmail.com>
Message-ID: <CAAHES9xZRovyx1xqyaGC9V_c68mq8QBLDaDyN5sqAjvQsiAF2g@mail.gmail.com>

Mark,

As NEWS is not (yet) a required file for an R package on CRAN, we might do
well to encourage developers to provide that information. If moving with
the times means that more R package authors do that then I'll all for
allowing markdown. Many package authors do include markdown material
because github renders this nicely and those package authors are using
github because that suits them. If R can accommodate those developers and
at the same time encourage others to add this information, that's better
than having those developers deciding it's not worth their time to write a
NEWS file when they already include this information in github-specific
forms (release notes/messages), Issues, etc.

roxygen2 doesn't generate Rd markup, it just inserts the values of roxygen
tags into a pre-exising template (it may actually inject some Rd
boilerplate). You still need to write Rd markup in the values however.

Cheers

G

On 5 June 2015 at 00:53, Mark van der Loo <mark.vanderloo at gmail.com> wrote:

> @Gavin: My aim was to point out that the ability to mix developer-facing
> documentation with user-facing documentation is not a good reason to want
> to support md.
>
> I agree with Duncan that links to within a package would be useful (not
> sure if NEWS.Rd supports this).
>
> I'm not so convinced that package authors that do not even add a plain
> text NEWS file will create a NEWS.md file.
>
> Adding NEWS.md means we now have three ways to specify the NEWS:
>
> - a plain text NEWS file; following the GNU recommendations
> - NEWS.Rd
> - NEWS.md
>
> Would it not be more elegant to have e.g. roxygen2 generate NEWS.Rd?
> (perhaps it is already possible, I'm not sure of that). I don't maintain
> CRAN, but I know what I would prefer..
>
> Cheers,
> Mark
>
>
>
> ?
>
>
>


-- 
Gavin Simpson, PhD

	[[alternative HTML version deleted]]


From thosjleeper at gmail.com  Fri Jun  5 19:25:23 2015
From: thosjleeper at gmail.com (Thomas J. Leeper)
Date: Fri, 5 Jun 2015 19:25:23 +0200
Subject: [Rd] NEWS.md support on CRAN
In-Reply-To: <5571CF31.6070007@gmail.com>
References: <mailman.19.1433498404.25411.r-devel@r-project.org>
	<CAOC91MRAGr7xQnxKiY89N_qKqd=FbBifjmLSSy_c_6PpjMz6pg@mail.gmail.com>
	<5571CF31.6070007@gmail.com>
Message-ID: <CAOC91MSj==YGktsi6oAnfnqgXZCF8iTbKr_HBPuc6tBCQ4=1eg@mail.gmail.com>

Sorry, "require" was the wrong word - "suggest" is better. I actually
didn't realize when I first wrote a package that I should create a
NEWS file because I was following the `package.skeleton()` route and
that wasn't something that was generated automatically. I suspect
other new package authors might be in the same place (i.e., just not
aware that such a file is helpful for end users).

Thomas J. Leeper
http://www.thomasleeper.com


On Fri, Jun 5, 2015 at 6:32 PM, Duncan Murdoch <murdoch.duncan at gmail.com> wrote:
> On 05/06/2015 8:16 AM, Thomas J. Leeper wrote:
>>
>> It's disappointing that many packages do not have a NEWS file. Perhaps
>> CRAN should require NEWS or CHANGELOG, as long as the system is being
>> reformed to potentially accommodate markdown anyway.
>
>
> I think we should all be careful about suggesting work for other people.
> This would be a huge amount of work, probably hundreds of hours in
> aggregate, for all those package authors and the CRAN maintainers.
>
> On the other hand, we can gently nudge package authors to better practices.
> When we talk in public about R packages, we should point out that we use a
> certain list of characteristics to judge their quality.  My list includes:
>
>  - Is it on CRAN?
>  - Does it have an overview vignette?
>  - Is it updated fairly regularly?
>  - Do most of the help pages include examples?
>  - Will it install on my OS without much trouble?
>
> Your list could include
>
>  - Does it have a readable NEWS file?
>
> I do use packages which have negative answers to some of those questions,
> but they definitely influence my choice when I'm looking at a package for
> the first time.
>
> Duncan Murdoch
>
>>
>> -Thomas
>>
>> Thomas J. Leeper
>> http://www.thomasleeper.com
>>
>>
>> On Fri, Jun 5, 2015 at 12:00 PM,  <r-devel-request at r-project.org> wrote:
>> > Date: Thu, 04 Jun 2015 12:39:34 -0400
>> > From: Duncan Murdoch <murdoch.duncan at gmail.com>
>> > To: Mark van der Loo <mark.vanderloo at gmail.com>, Kurt.Hornik at wu.ac.at
>> > Cc: R Devel Mailing List <r-devel at r-project.org>,       Dirk
>> > Eddelbuettel
>> >         <edd at debian.org>, Imanuel Costigan <i.costigan at me.com>
>> > Subject: Re: [Rd] NEWS.md support on CRAN
>> > Message-ID: <55707F46.5010108 at gmail.com>
>> > Content-Type: text/plain; charset=utf-8; format=flowed
>> >
>> > On 04/06/2015 11:05 AM, Mark van der Loo wrote:
>> >> FWIW (and a bit late in the discussion, I know), I for one do not care
>> >> about having NEWS in md format at all.
>> >>
>> >> The solution the Yihui uses (linking to GH from NEWS.Rd) is really
>> >> annoying
>> >> for people with no direct Internet access. For example, I work at an
>> >> institute that handles a lot of private data and most VM's with R on it
>> >> have no direct internet access for that reason (of course internet is
>> >> accessible but through an application running on a separate VM).
>> >>
>> >> Moreover, I as a user also do not care at all about links to GH #issues
>> >> and
>> >> which @user did what for each issue. These are details that are useful
>> >> for
>> >> people developing the package or for people who reported a bug. As a
>> >> user I
>> >> just want to read a short description like "bugfix: function f crashed
>> >> on
>> >> input y", or "function g is deprecated" without having to first
>> >> navigate to
>> >> another website.
>> >>
>> >> The most important thing about the NEWS is that it is easy to find (so
>> >> in a
>> >> fixed place), and aimed at users, not developers. It should come with
>> >> the
>> >> software, so it is also available when GH is offline or replaced with
>> >> something new (since hey, didn't we all have a sourceforge or google
>> >> code
>> >> account in our younger days?).
>> >>
>> >> In short, I think that added value of NEWS.md is fairly limited but it
>> >> does
>> >> increase the risk of dispersing the NEWS all over the web.
>> >
>> > I'd disagree a little bit:  NEWS should be both for users and
>> > developers.  The advantage I see to NEWS.md support is that it will
>> > encourage people who are more comfortable writing in Markdown to include
>> > the news in the package, rather than having a link to external news (as
>> > Yihui did), or no news at all (as many packages do).
>> >
>> > It's pretty easy to have plain text news, but links in the news are
>> > helpful.  Links to bug reports are of most use to developers, but other
>> > links are useful to users.  For example, though I don't think anyone is
>> > making use of this, it should be possible to have links from NEWS.Rd (or
>> > NEWS.md when it is fully supported) directly into R's help system.  That
>> > would be especially useful for users.  It would probably even work on
>> > isolated systems, as long as they don't block access to the local http
>> > server.
>> >
>> > Duncan Murdoch
>> >>
>> >> Best,
>> >> Mark
>> >>
>> >>
>> >>
>> >>
>> >>
>> >>
>> >>
>> >>
>> >>
>> >>
>> >> Op wo 3 jun. 2015 om 08:32 schreef Kurt Hornik <Kurt.Hornik at wu.ac.at>:
>> >>
>> >> > >>>>> Duncan Murdoch writes:
>> >> >
>> >> > > On 02/06/2015 11:05 AM, Dirk Eddelbuettel wrote:
>> >> > >> Hi Kurt,
>> >> > >>
>> >> > >> On 1 June 2015 at 14:02, Kurt Hornik wrote:
>> >> > >> | >>>>> peter dalgaard writes:
>> >> > >> |
>> >> > >> | >> On 30 May 2015, at 01:20 , Imanuel Costigan
>> >> > >> <i.costigan at me.com>
>> >> > wrote:
>> >> > >> | >>
>> >> > >> | >> So I assume this commit means NEWS.md is now no longer on
>> >> > blacklist?
>> >> > >> | >>
>> >> > >> |
>> >> > >> | > ....in the development version. Not true of released versions.
>> >> > >> |
>> >> > >> | Now also in r-patched.
>> >> > >>
>> >> > >> Nice.
>> >> > >>
>> >> > >> Now, is there a way for package authors to preview how a .md would
>> >> > >> be
>> >> > >> rendered?  I wrote mine with GitHub in mind, and they render fine.
>> >> > >> I
>> >> > looked a
>> >> > >> recently-uploaded README.md of mine on CRAN, and it got some of
>> >> > >> the
>> >> > pandoc-y
>> >> > >> parts wrong --- and looks unprofessional.
>> >> > >>
>> >> > >> I would like to avoid that.  How can I?
>> >> >
>> >> > > In the short term, you should probably try to run pandoc with the
>> >> > > same
>> >> > > version and options as CRAN.  Kurt, can you say what these are?  If
>> >> > > you
>> >> > > (Dirk) know pandoc options that emulate Github, it would probably
>> >> > > make
>> >> > > sense for CRAN to use those.
>> >> >
>> >> > Sure.  We currently have
>> >> >
>> >> > pandoc 1.12.4.2
>> >> > Compiled with texmath 0.6.6.1, highlighting-kate 0.5.8.5.
>> >> >
>> >> > which we use with --email-obfuscation=references.
>> >> >
>> >> > Best
>> >> > -k
>> >> >
>> >> > > In the longer term, the plan is to include our own parser and
>> >> > > renderer.
>> >> > > At that point this would be easy.
>> >> >
>> >> > > Duncan Murdoch
>> >> > >>
>> >> > >> Dirk
>> >> > >>
>> >> > >>
>> >> > >> | -k
>> >> > >> |
>> >> > >> | > -pd
>> >> > >> |
>> >> > >> |
>> >> > >> | >>
>> >> >
>> >> > https://github.com/wch/r-source/commit/9ffe87264a1cd59a31a829f72d57af0f1bfa327a
>> >> > >> | >>
>> >> > >> | >> Sent from my iPad
>> >> > >> | >>
>> >> > >> | >> On 23 May 2015, at 6:05 pm, Kurt Hornik
>> >> > >> <Kurt.Hornik at wu.ac.at>
>> >> > wrote:
>> >> > >> | >>
>> >> > >> | >>>>>>>> Duncan Murdoch writes:
>> >> > >> | >>>
>> >> > >> | >>>>> On 22/05/2015 8:49 PM, Imanuel Costigan wrote:
>> >> > >> | >>>>> Are there any plans for CRAN to support NEWS files in
>> >> > >> markdown?
>> >> > Bit of a hassle to go the the package?s Github (or other like) site
>> >> > to read
>> >> > NEWS.
>> >> > >> | >>>
>> >> > >> | >>>> Not as far as I know.  There have been discussions about
>> >> > increasing the
>> >> > >> | >>>> support of Markdown, but so far the conclusion has been
>> >> > >> that
>> >> > it's too
>> >> > >> | >>>> hard to do -- the support is not stable enough on all the
>> >> > platforms
>> >> > >> | >>>> where R runs.
>> >> > >> | >>>
>> >> > >> | >>> There are actually two issues here.
>> >> > >> | >>>
>> >> > >> | >>> For CRAN, we could in principle take inst/NEWS.md files,
>> >> > >> convert
>> >> > these
>> >> > >> | >>> to HTML using pandoc, and use the HTML for the package web
>> >> > >> page.
>> >> > (Would
>> >> > >> | >>> need the CRAN incoming checks to be taught about
>> >> > >> inst/NEWS.md.)
>> >> > >> | >>>
>> >> > >> | >>> However, we cannot use such files for utils::news() because
>> >> > >> we do
>> >> > not
>> >> > >> | >>> (yet?) know how to reliably parse such files and extract the
>> >> > >> news
>> >> > items
>> >> > >> | >>> (and hence cannot really compute on the news information).
>> >> > >> | >>>
>> >> > >> | >>> Btw, currently only one package on CRAN has inst/NEWS.md
>> >> > >> (another
>> >> > one
>> >> > >> | >>> has NEWS.md at top level).
>> >> > >> | >>>
>> >> > >> | >>> Best
>> >> > >> | >>> -k
>> >> > >> | >>>
>> >> > >> | >>>> Markdown is allowed for vignettes (because the package
>> >> > >> author
>> >> > processes
>> >> > >> | >>>> those), so I'd suggest putting your news into a vignette
>> >> > >> instead
>> >> > of a
>> >> > >> | >>>> news file.  Put in a token news file that points to the
>> >> > >> vignette
>> >> > so
>> >> > >> | >>>> users can find it.
>> >> > >> | >>>
>> >> > >> | >>>> Duncan Murdoch
>> >> > >> | >>>
>> >> > >> | >>>> ______________________________________________
>> >> > >> | >>>> R-devel at r-project.org mailing list
>> >> > >> | >>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>> >> > >> | >>
>> >> > >> | >> [[alternative HTML version deleted]]
>> >> > >> | >>
>> >> > >> | >> ______________________________________________
>> >> > >> | >> R-devel at r-project.org mailing list
>> >> > >> | >> https://stat.ethz.ch/mailman/listinfo/r-devel
>> >> > >> |
>> >> > >> | > --
>> >> > >> | > Peter Dalgaard, Professor,
>> >> > >> | > Center for Statistics, Copenhagen Business School
>> >> > >> | > Solbjerg Plads 3, 2000 Frederiksberg, Denmark
>> >> > >> | > Phone: (+45)38153501
>> >> > >> | > Email: pd.mes at cbs.dk  Priv: PDalgd at gmail.com
>> >> > >> |
>> >> > >> | > ______________________________________________
>> >> > >> | > R-devel at r-project.org mailing list
>> >> > >> | > https://stat.ethz.ch/mailman/listinfo/r-devel
>> >> > >> |
>> >> > >> | ______________________________________________
>> >> > >> | R-devel at r-project.org mailing list
>> >> > >> | https://stat.ethz.ch/mailman/listinfo/r-devel
>> >> > >>
>> >> >
>> >> > > ______________________________________________
>> >> > > R-devel at r-project.org mailing list
>> >> > > https://stat.ethz.ch/mailman/listinfo/r-devel
>> >> >
>> >> > ______________________________________________
>> >> > R-devel at r-project.org mailing list
>> >> > https://stat.ethz.ch/mailman/listinfo/r-devel
>> >> >
>> >>
>>
>> ______________________________________________
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel
>
>


From henrik.bengtsson at ucsf.edu  Sat Jun  6 06:28:48 2015
From: henrik.bengtsson at ucsf.edu (Henrik Bengtsson)
Date: Fri, 5 Jun 2015 21:28:48 -0700
Subject: [Rd] sum(...,
 na.rm=FALSE): Summing over NA_real_ values much more expensive than
 non-NAs for na.rm=FALSE? Hmm...
In-Reply-To: <CAFDcVCSs1OyiTHkC=XQ89mrNRDwvnCN-nh_z75F2xOiTmaEqTQ@mail.gmail.com>
References: <CAFDcVCTOXSd2FHkTPSkJd0FYrTdUnKK_3943WSgY_A3cg9ziQw@mail.gmail.com>
	<CAFDcVCSs1OyiTHkC=XQ89mrNRDwvnCN-nh_z75F2xOiTmaEqTQ@mail.gmail.com>
Message-ID: <CAFDcVCTEaXd5dUhL_5bx8B7Pm-wBQC4vPBKSo397gZ=qob6ZLw@mail.gmail.com>

I should summarize what I've learned after my more recent post on this:

With 'long double', it is extremely expensive to keep "track of"
non-finites (NA, NaN and Inf) when doing basic arithmetics.  The most
extreme cost is seen when the first value is non-finite, because there
is penalty added in all of the following iterations.

EXAMPLE:

## All finite values
> x <- rep(0.1, 1e8)
> system.time(sum(x, narm=FALSE))
   user  system elapsed
   0.28    0.00    0.28

## First value is NA (maximum penalty)
> y <- x; x[1] <- NA
> system.time(sum(y, narm=FALSE))
   user  system elapsed
  23.47    0.00   23.93   (sic!)

## Last value is NA (minimum penalty)
> z <- x; x[length(z)] <- NA
> system.time(sum(z, narm=FALSE))
   user  system elapsed
   0.35    0.00    0.34

## Silly, but proof of concept by summing rev(y)
## such that NA ends up last
> system.time(sum(rev(y), narm=FALSE))
   user  system elapsed
   2.40    0.85    3.31


This penalty of having non-finite values is only observed with 'long
double', but not with 'double' (see previous message).


WORKAROUND:
To workaround this penalty, one can test the running result for being
non-finite and return early, e.g. if na.rm=FALSE then as soon as the
running sum is NA_REAL, return NA_REAL.  Unfortunately, the cost for
testing for NA_REAL is expensive, so the penality of doing every
iteration would be too expensive.  A better approach is to test for
early stopping at some interval.  For example:

> sum4 <- inline::cfunction(sig=c(x="double", narm="logical"), body='
#define LDOUBLE long double
 double *x_ = REAL(x);
 int narm_ = asLogical(narm);
 int n = length(x);
 LDOUBLE sum = 0.0;
 for (R_xlen_t i = 0; i < n; i++) {
   /* If narm=FALSE, always sum */
   if (!narm_ || !ISNAN(x_[i])) sum += x_[i];
   /* Early stopping check when sum non-finite */
   if (!R_FINITE(sum)) break;
 }
 return ScalarReal((double)sum);
')

## See previous email for non-early stopping version
> system.time(sum3(x, narm=FALSE))
   user  system elapsed
   1.05    0.00    1.05

## Early stopping every iteration adds quite a bit
## of overhead if never used
> system.time(sum4(x, narm=FALSE))
   user  system elapsed
   1.79    0.00    1.86


## Early stopping once in a while
> sum5 <- inline::cfunction(sig=c(x="double", narm="logical"), body='
#define LDOUBLE long double
 double *x_ = REAL(x);
 int narm_ = asLogical(narm);
 int n = length(x);
 LDOUBLE sum = 0.0;
 for (R_xlen_t i = 0; i < n; i++) {
   /* If narm=FALSE, always sum */
   if (!narm_ || !ISNAN(x_[i])) sum += x_[i];
   /* Early stopping check when sum non-finite */
   if (i % 1048576 == 0 && !R_FINITE(sum)) break;
 }
 return ScalarReal((double)sum);
')

## Low extra cost even without non-finites
> system.time(sum5(x, narm=FALSE))
   user  system elapsed
   1.05    0.00    1.06

## ...and can still do early stopping
> system.time(sum5(y, narm=FALSE))
   user  system elapsed
      0       0       0


/Henrik


On Sun, May 31, 2015 at 6:08 PM, Henrik Bengtsson
<henrik.bengtsson at ucsf.edu> wrote:
> This is a great example how you cannot figure it out after spending
> two hours troubleshooting, but a few minutes after you post to
> R-devel, it's just jumps to you (is there a word for this other than
> "impatient"?);
>
> Let me answer my own question.  The discrepancy between my sum2() code
> and the internal code for base::sum() is that the latter uses LDOUBLE
> = long double (on some system it's only double, cf.
> https://github.com/wch/r-source/blob/trunk/src/nmath/nmath.h#L28-L33),
> whereas my sum2() code uses double.  So using long double, I can
> reproduce the penalty of having NA_real_ with na.rm=FALSE;
>
>> sum3 <- inline::cfunction(sig=c(x="double", narm="logical"), body='
> #define LDOUBLE long double
>  double *x_ = REAL(x);
>  int narm_ = asLogical(narm);
>  int n = length(x);
>  LDOUBLE sum = 0.0;
>  for (R_xlen_t i = 0; i < n; i++) {
>    if (!narm_ || !ISNAN(x_[i])) sum += x_[i];
>  }
>  return ScalarReal((double)sum);
> ')
>
>> x <- rep(0, 1e8)
>> stopifnot(typeof(x) == "double")
>> system.time(sum3(x, narm=FALSE))
>    user  system elapsed
>    0.40    0.00    0.44
>> y <- rep(NA_real_, 1e8)
>> stopifnot(typeof(y) == "double")
>> system.time(sum3(y, narm=FALSE))
>    user  system elapsed
>    9.80    0.00    9.84
>> z <- x; z[length(z)/2] <- NA_real_
>> stopifnot(typeof(z) == "double")
>> system.time(sum3(z, narm=FALSE))
>    user  system elapsed
>    4.49    0.00    4.50
>
> This might even be what the following comment refers to:
>
> /* Required by C99 but might be slow */
> #ifdef HAVE_LONG_DOUBLE
> # define LDOUBLE long double
> #else
> # define LDOUBLE double
> #endif
>
> So now I should rephrase my question: Is there away to avoid this
> penalty when using 'long double'?  Is this something the compiler can
> be clever about, or is the only solution to not use 'long double'?
>
> /Henrik
>
> On Sun, May 31, 2015 at 5:02 PM, Henrik Bengtsson
> <henrik.bengtsson at ucsf.edu> wrote:
>> I'm observing that base::sum(x, na.rm=FALSE) for typeof(x) == "double"
>> is much more time consuming when there are missing values versus when
>> there are not.  I'm observing this on both Window and Linux, but it's
>> quite surprising to me.  Currently, my main suspect is settings in on
>> how R was built.  The second suspect is my brain.  I hope that someone
>> can clarify the below results and confirm or not whether they see the
>> same.  Note, this is for "doubles", so I'm not expecting
>> early-stopping as for "integers" (where testing for NA is cheap).
>>
>> On R 3.2.0, on Windows (using the official CRAN builds), on Linux
>> (local built), and on OS X (official AT&T builds), I get:
>>
>>> x <- rep(0, 1e8)
>>> stopifnot(typeof(x) == "double")
>>> system.time(sum(x, na.rm=FALSE))
>>    user  system elapsed
>>    0.19    0.01    0.20
>>
>>> y <- rep(NA_real_, 1e8)
>>> stopifnot(typeof(y) == "double")
>>> system.time(sum(y, na.rm=FALSE))
>>    user  system elapsed
>>    9.54    0.00    9.55
>>
>>> z <- x; z[length(z)/2] <- NA_real_
>>> stopifnot(typeof(z) == "double")
>>> system.time(sum(z, na.rm=FALSE))
>>    user  system elapsed
>>    4.49    0.00    4.51
>>
>> Following the source code, I'm pretty sure the code
>> (https://github.com/wch/r-source/blob/trunk/src/main/summary.c#L112-L128)
>> performing the calculation is:
>>
>> static Rboolean rsum(double *x, R_xlen_t n, double *value, Rboolean narm)
>> {
>>   LDOUBLE s = 0.0;
>>   Rboolean updated = FALSE;
>>   for (R_xlen_t i = 0; i < n; i++) {
>>     if (!narm || !ISNAN(x[i])) {
>>       if(!updated) updated = TRUE;
>>         s += x[i];
>>     }
>>   }
>>   if(s > DBL_MAX) *value = R_PosInf;
>>   else if (s < -DBL_MAX) *value = R_NegInf;
>>   else *value = (double) s;
>>   return updated;
>> }
>>
>> In other words, when na.rm=FALSE, that inner for loop:
>>
>>   for (R_xlen_t i = 0; i < n; i++) {
>>     if (!narm || !ISNAN(x[i])) {
>>       if(!updated) updated = TRUE;
>>         s += x[i];
>>     }
>>   }
>>
>> should effectively become (because !ISNAN(x[i]) "does not make a difference"):
>>
>>   for (R_xlen_t i = 0; i < n; i++) {
>>     if (!narm) {
>>       if(!updated) updated = TRUE;
>>         s += x[i];
>>     }
>>   }
>>
>> That is, sum(x, na.rm=FALSE) basically spends time on `s += x[i]`.
>> Now, I have always been under impression that summing with NA:s is
>> *not* more expensive that summing over regular (double) values, which
>> is confirmed by the below example, but the above benchmarking
>> disagree.  It looks like there is a big overhead keeping track of the
>> sum `s` being NA, which is supported by the fact that summing over 'z'
>> is costs half of 'y'.
>>
>> Now, I *cannot* reproduce the above using the following 'inline' example:
>>
>>> sum2 <- inline::cfunction(sig=c(x="double", narm="logical"), body='
>>  double *x_ = REAL(x);
>>  int narm_ = asLogical(narm);
>>  int n = length(x);
>>  double sum = 0;
>>  for (R_xlen_t i = 0; i < n; i++) {
>>    if (!narm_ || !ISNAN(x_[i])) sum += x_[i];
>>  }
>>  return ScalarReal(sum);
>> ')
>>
>>> x <- rep(0, 1e8)
>>> stopifnot(typeof(x) == "double")
>>> system.time(sum2(x, narm=FALSE))
>>    user  system elapsed
>>    0.16    0.00    0.16
>>
>>> y <- rep(NA_real_, 1e8)
>>> stopifnot(typeof(y) == "double")
>>> system.time(sum2(y, narm=FALSE))
>>    user  system elapsed
>>    0.16    0.00    0.15
>>
>>> z <- x; z[length(z)/2] <- NA_real_
>>> stopifnot(typeof(z) == "double")
>>> system.time(sum2(z, narm=FALSE))
>>    user  system elapsed
>>    0.16    0.00    0.15
>>
>> This is why I suspect it's related to how R was configured when it was
>> built. What's going on? Can someone please bring some light on this?
>>
>> Thanks
>>
>> Henrik


From tal.galili at gmail.com  Sat Jun  6 12:44:23 2015
From: tal.galili at gmail.com (Tal Galili)
Date: Sat, 6 Jun 2015 13:44:23 +0300
Subject: [Rd] Request: making cutree S3 in R?
Message-ID: <CANdJ3dWW3xd4-oWgN4AAdKe_q6RyqVhM=-B40Avc=F3FdcSevQ@mail.gmail.com>

Hello all,

A question/suggestion:

I was wondering if there is a chance of changing stats::cutree to be S3 and
use cutree.hclust?

For example:

cutree <- function(tree, k = NULL, h = NULL,...)
{
  UseMethod("cutree")
}

cutree.hclust <- stats::cutree
# This will obviously need the actual content of stats::cutree


This would be nicer for people like me to add new methods to cutree. For
example the cutree.dendrogram function
<https://github.com/talgalili/dendextend/blob/master/R/cutree.dendrogram.R> I
implemented in dendextend,



With regards,
Tal

	[[alternative HTML version deleted]]


From tobias.verbeke at openanalytics.eu  Sat Jun  6 14:18:25 2015
From: tobias.verbeke at openanalytics.eu (Tobias Verbeke)
Date: Sat, 6 Jun 2015 14:18:25 +0200 (CEST)
Subject: [Rd] NEWS file inconsistency
Message-ID: <1140973825.1963255.1433593105159.JavaMail.zimbra@openanalytics.eu>

L.S.

I noticed the NEWS file as made available at http://cran.r-project.org/src/base/NEWS became inconsistent in describing CHANGES for a new R version:

$ wget http://cran.r-project.org/src/base/NEWS
$ cat NEWS | grep 'CHANGES IN '
CHANGES IN 3.2.0:
CHANGES IN R 3.1.3:
CHANGES IN R 3.1.2:
CHANGES IN R 3.1.1:
CHANGES IN R 3.1.0:
CHANGES IN R 3.0.3:
CHANGES IN R 3.0.2:
CHANGES IN R 3.0.1:
CHANGES IN R 3.0.0:

Not a big issue, obviously, but we were parsing the file as part of a build procedure.

Best,
Tobias


From murdoch.duncan at gmail.com  Sat Jun  6 14:37:04 2015
From: murdoch.duncan at gmail.com (Duncan Murdoch)
Date: Sat, 06 Jun 2015 08:37:04 -0400
Subject: [Rd] NEWS file inconsistency
In-Reply-To: <1140973825.1963255.1433593105159.JavaMail.zimbra@openanalytics.eu>
References: <1140973825.1963255.1433593105159.JavaMail.zimbra@openanalytics.eu>
Message-ID: <5572E970.80601@gmail.com>

On 06/06/2015 8:18 AM, Tobias Verbeke wrote:
> L.S.
> 
> I noticed the NEWS file as made available at http://cran.r-project.org/src/base/NEWS became inconsistent in describing CHANGES for a new R version:
> 
> $ wget http://cran.r-project.org/src/base/NEWS
> $ cat NEWS | grep 'CHANGES IN '
> CHANGES IN 3.2.0:
> CHANGES IN R 3.1.3:
> CHANGES IN R 3.1.2:
> CHANGES IN R 3.1.1:
> CHANGES IN R 3.1.0:
> CHANGES IN R 3.0.3:
> CHANGES IN R 3.0.2:
> CHANGES IN R 3.0.1:
> CHANGES IN R 3.0.0:
> 
> Not a big issue, obviously, but we were parsing the file as part of a build procedure.

That's already been fixed, and hopefully it won't happen again in 3.2.1,
due in a couple of weeks.  I thought it had been fixed before release,
but apparently not.

Please do check the 3.2.1 pre-release versions (starting Monday) and
make sure they work with your tools.

Duncan


From tobias.verbeke at openanalytics.eu  Sat Jun  6 18:11:39 2015
From: tobias.verbeke at openanalytics.eu (Tobias Verbeke)
Date: Sat, 6 Jun 2015 18:11:39 +0200 (CEST)
Subject: [Rd] NEWS file inconsistency
In-Reply-To: <5572E970.80601@gmail.com>
References: <1140973825.1963255.1433593105159.JavaMail.zimbra@openanalytics.eu>
	<5572E970.80601@gmail.com>
Message-ID: <499051914.1963508.1433607099634.JavaMail.zimbra@openanalytics.eu>

Many thanks, Duncan.

We will check the prerelease versions of R 3.2.1.

Best regards,
Tobias

----- Original Message -----
> From: "Duncan Murdoch" <murdoch.duncan at gmail.com>
> To: "Tobias Verbeke" <tobias.verbeke at openanalytics.eu>, "r-devel at r-project.org" <r-devel at r-project.org>
> Sent: Saturday, June 6, 2015 2:37:04 PM
> Subject: Re: [Rd] NEWS file inconsistency

> On 06/06/2015 8:18 AM, Tobias Verbeke wrote:
>> L.S.
>> 
>> I noticed the NEWS file as made available at
>> http://cran.r-project.org/src/base/NEWS became inconsistent in describing
>> CHANGES for a new R version:
>> 
>> $ wget http://cran.r-project.org/src/base/NEWS
>> $ cat NEWS | grep 'CHANGES IN '
>> CHANGES IN 3.2.0:
>> CHANGES IN R 3.1.3:
>> CHANGES IN R 3.1.2:
>> CHANGES IN R 3.1.1:
>> CHANGES IN R 3.1.0:
>> CHANGES IN R 3.0.3:
>> CHANGES IN R 3.0.2:
>> CHANGES IN R 3.0.1:
>> CHANGES IN R 3.0.0:
>> 
>> Not a big issue, obviously, but we were parsing the file as part of a build
>> procedure.
> 
> That's already been fixed, and hopefully it won't happen again in 3.2.1,
> due in a couple of weeks.  I thought it had been fixed before release,
> but apparently not.
> 
> Please do check the 3.2.1 pre-release versions (starting Monday) and
> make sure they work with your tools.
> 
> Duncan


From murdoch.duncan at gmail.com  Mon Jun  8 02:46:00 2015
From: murdoch.duncan at gmail.com (Duncan Murdoch)
Date: Sun, 07 Jun 2015 20:46:00 -0400
Subject: [Rd] Bug in loadNamespace?
Message-ID: <5574E5C8.1010902@gmail.com>

I am seeing very strange behaviour in R 3.2.0 patched (r68272) and a new
build of R-devel.  The sessioninfo() from the former is below.

Here's what I see:  If I set the locale, and trigger a namespace load, a
version comparison gives NA, and I get an error.  For example, in a new
session started with R --vanilla from the terminal:

> Sys.setlocale(locale='en_US.UTF-8');grid::gpar()
[1] "en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_CA.UTF-8"
Error in if (R_version_built_under < "3.0.0") stop(gettextf("package %s
was built before R 3.0.0: please re-install it",  :
  missing value where TRUE/FALSE needed

I've tried debugging this, and the bad lines are these, in loadNamespace:

R_version_built_under <- as.numeric_version(built$R)
if (R_version_built_under < "3.0.0") stop(gettextf("package %s was built
before R 3.0.0: please re-install it",
    sQuote(basename(pkgpath))), call. = FALSE, domain = NA)

These are in the src/library/base/R/namespace.R file, around line 379.

If I stop it before the if and evaluate R_version_built_under, it looks
fine.  If I stop it there and evaluate

R_version_built_under < "3.0.0"

I get NA.  If I evaluate it again without changing anything, I get FALSE.

Does anyone else see this?  Any ideas on what might be the cause?


> sessionInfo()
R version 3.2.0 Patched (2015-04-28 r68272)
Platform: x86_64-apple-darwin13.4.0 (64-bit)
Running under: OS X 10.9.5 (Mavericks)

locale:
[1] en_CA.UTF-8/en_CA.UTF-8/en_CA.UTF-8/C/en_CA.UTF-8/en_CA.UTF-8

attached base packages:
[1] stats     graphics  grDevices utils     datasets  methods   base


Duncan Murdoch


From edd at debian.org  Mon Jun  8 03:14:27 2015
From: edd at debian.org (Dirk Eddelbuettel)
Date: Sun, 7 Jun 2015 20:14:27 -0500
Subject: [Rd] Bug in loadNamespace?
In-Reply-To: <5574E5C8.1010902@gmail.com>
References: <5574E5C8.1010902@gmail.com>
Message-ID: <21876.60531.689839.424259@max.nulle.part>


On 7 June 2015 at 20:46, Duncan Murdoch wrote:
| I am seeing very strange behaviour in R 3.2.0 patched (r68272) and a new
| build of R-devel.  The sessioninfo() from the former is below.
| 
| Here's what I see:  If I set the locale, and trigger a namespace load, a
| version comparison gives NA, and I get an error.  For example, in a new
| session started with R --vanilla from the terminal:
| 
| > Sys.setlocale(locale='en_US.UTF-8');grid::gpar()
| [1] "en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_CA.UTF-8"
| Error in if (R_version_built_under < "3.0.0") stop(gettextf("package %s
| was built before R 3.0.0: please re-install it",  :
|   missing value where TRUE/FALSE needed
| 
| I've tried debugging this, and the bad lines are these, in loadNamespace:
| 
| R_version_built_under <- as.numeric_version(built$R)
| if (R_version_built_under < "3.0.0") stop(gettextf("package %s was built
| before R 3.0.0: please re-install it",
|     sQuote(basename(pkgpath))), call. = FALSE, domain = NA)
| 
| These are in the src/library/base/R/namespace.R file, around line 379.
| 
| If I stop it before the if and evaluate R_version_built_under, it looks
| fine.  If I stop it there and evaluate
| 
| R_version_built_under < "3.0.0"
| 
| I get NA.  If I evaluate it again without changing anything, I get FALSE.
| 
| Does anyone else see this?  Any ideas on what might be the cause?

I don't see it on Ubuntu with a fresh R-devel:

edd at max:~/svn/r-devel$ RD

R Under development (unstable) (2015-06-06 r68485) -- "Unsuffered Consequences"
Copyright (C) 2015 The R Foundation for Statistical Computing
Platform: x86_64-unknown-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

R> Sys.setlocale(locale='en_US.UTF-8');grid::gpar()
[1] "LC_CTYPE=en_US.UTF-8;LC_NUMERIC=C;LC_TIME=en_US.UTF-8;LC_COLLATE=en_US.UTF-8;LC_MONETARY=en_US.UTF-8;LC_MESSAGES=en_US.UTF-8;LC_PAPER=en_US.UTF-8;LC_NAME=C;LC_ADDRESS=C;LC_TELEPHONE=C;LC_MEASUREMENT=en_US.UTF-8;LC_IDENTIFICATION=C"
list()
R> 

I don't have r-patched handy or I'd try that too.

Dirk
 
| 
| > sessionInfo()
| R version 3.2.0 Patched (2015-04-28 r68272)
| Platform: x86_64-apple-darwin13.4.0 (64-bit)
| Running under: OS X 10.9.5 (Mavericks)
| 
| locale:
| [1] en_CA.UTF-8/en_CA.UTF-8/en_CA.UTF-8/C/en_CA.UTF-8/en_CA.UTF-8
| 
| attached base packages:
| [1] stats     graphics  grDevices utils     datasets  methods   base
| 
| 
| Duncan Murdoch
| 
| ______________________________________________
| R-devel at r-project.org mailing list
| https://stat.ethz.ch/mailman/listinfo/r-devel

-- 
http://dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org


From murdoch.duncan at gmail.com  Mon Jun  8 03:42:27 2015
From: murdoch.duncan at gmail.com (Duncan Murdoch)
Date: Sun, 07 Jun 2015 21:42:27 -0400
Subject: [Rd] Bug in loadNamespace?
In-Reply-To: <21876.60531.689839.424259@max.nulle.part>
References: <5574E5C8.1010902@gmail.com>
	<21876.60531.689839.424259@max.nulle.part>
Message-ID: <5574F303.4080903@gmail.com>

On 07/06/2015 9:14 PM, Dirk Eddelbuettel wrote:
> 
> On 7 June 2015 at 20:46, Duncan Murdoch wrote:
> | I am seeing very strange behaviour in R 3.2.0 patched (r68272) and a new
> | build of R-devel.  The sessioninfo() from the former is below.
> | 
> | Here's what I see:  If I set the locale, and trigger a namespace load, a
> | version comparison gives NA, and I get an error.  For example, in a new
> | session started with R --vanilla from the terminal:
> | 
> | > Sys.setlocale(locale='en_US.UTF-8');grid::gpar()
> | [1] "en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_CA.UTF-8"
> | Error in if (R_version_built_under < "3.0.0") stop(gettextf("package %s
> | was built before R 3.0.0: please re-install it",  :
> |   missing value where TRUE/FALSE needed
> | 
> | I've tried debugging this, and the bad lines are these, in loadNamespace:
> | 
> | R_version_built_under <- as.numeric_version(built$R)
> | if (R_version_built_under < "3.0.0") stop(gettextf("package %s was built
> | before R 3.0.0: please re-install it",
> |     sQuote(basename(pkgpath))), call. = FALSE, domain = NA)
> | 
> | These are in the src/library/base/R/namespace.R file, around line 379.
> | 
> | If I stop it before the if and evaluate R_version_built_under, it looks
> | fine.  If I stop it there and evaluate
> | 
> | R_version_built_under < "3.0.0"
> | 
> | I get NA.  If I evaluate it again without changing anything, I get FALSE.
> | 
> | Does anyone else see this?  Any ideas on what might be the cause?
> 
> I don't see it on Ubuntu with a fresh R-devel:
> 
> edd at max:~/svn/r-devel$ RD
> 
> R Under development (unstable) (2015-06-06 r68485) -- "Unsuffered Consequences"
> Copyright (C) 2015 The R Foundation for Statistical Computing
> Platform: x86_64-unknown-linux-gnu (64-bit)
> 
> R is free software and comes with ABSOLUTELY NO WARRANTY.
> You are welcome to redistribute it under certain conditions.
> Type 'license()' or 'licence()' for distribution details.
> 
>   Natural language support but running in an English locale
> 
> R is a collaborative project with many contributors.
> Type 'contributors()' for more information and
> 'citation()' on how to cite R or R packages in publications.
> 
> Type 'demo()' for some demos, 'help()' for on-line help, or
> 'help.start()' for an HTML browser interface to help.
> Type 'q()' to quit R.
> 
> R> Sys.setlocale(locale='en_US.UTF-8');grid::gpar()
> [1] "LC_CTYPE=en_US.UTF-8;LC_NUMERIC=C;LC_TIME=en_US.UTF-8;LC_COLLATE=en_US.UTF-8;LC_MONETARY=en_US.UTF-8;LC_MESSAGES=en_US.UTF-8;LC_PAPER=en_US.UTF-8;LC_NAME=C;LC_ADDRESS=C;LC_TELEPHONE=C;LC_MEASUREMENT=en_US.UTF-8;LC_IDENTIFICATION=C"
> list()
> R> 
> 
> I don't have r-patched handy or I'd try that too.

Thanks.  It doesn't actually need loadNamespace, it's string comparisons
that fail.  For example,

$ R --vanilla

R version 3.2.0 Patched (2015-04-28 r68272) -- "Full of Ingredients"
Copyright (C) 2015 The R Foundation for Statistical Computing
Platform: x86_64-apple-darwin13.4.0 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> Sys.setlocale(locale='en_US.UTF-8')
[1] "en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_CA.UTF-8"
> "320" > "300"
[1] NA
> "320" > "300"
[1] TRUE

I don't see it in R-devel on Windows.

Duncan Murdoch


From pdalgd at gmail.com  Mon Jun  8 10:14:04 2015
From: pdalgd at gmail.com (peter dalgaard)
Date: Mon, 8 Jun 2015 10:14:04 +0200
Subject: [Rd] Bug in loadNamespace?
In-Reply-To: <5574F303.4080903@gmail.com>
References: <5574E5C8.1010902@gmail.com>
	<21876.60531.689839.424259@max.nulle.part>
	<5574F303.4080903@gmail.com>
Message-ID: <F35FE433-FCF9-49DC-A4D1-8ECA2985D7DB@gmail.com>

Not happening for me with

R version 3.2.0 Patched (2015-06-05 r68479) -- "Full of Ingredients"
...

> Sys.setlocale(locale='en_US.UTF-8')
[1] "en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8"
>  "320"> "300"
[1] TRUE
>  "320"> "300"
[1] TRUE
>

-pd

> On 08 Jun 2015, at 03:42 , Duncan Murdoch <murdoch.duncan at gmail.com> wrote:
> 
> On 07/06/2015 9:14 PM, Dirk Eddelbuettel wrote:
>> 
>> On 7 June 2015 at 20:46, Duncan Murdoch wrote:
>> | I am seeing very strange behaviour in R 3.2.0 patched (r68272) and a new
>> | build of R-devel.  The sessioninfo() from the former is below.
>> | 
>> | Here's what I see:  If I set the locale, and trigger a namespace load, a
>> | version comparison gives NA, and I get an error.  For example, in a new
>> | session started with R --vanilla from the terminal:
>> | 
>> | > Sys.setlocale(locale='en_US.UTF-8');grid::gpar()
>> | [1] "en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_CA.UTF-8"
>> | Error in if (R_version_built_under < "3.0.0") stop(gettextf("package %s
>> | was built before R 3.0.0: please re-install it",  :
>> |   missing value where TRUE/FALSE needed
>> | 
>> | I've tried debugging this, and the bad lines are these, in loadNamespace:
>> | 
>> | R_version_built_under <- as.numeric_version(built$R)
>> | if (R_version_built_under < "3.0.0") stop(gettextf("package %s was built
>> | before R 3.0.0: please re-install it",
>> |     sQuote(basename(pkgpath))), call. = FALSE, domain = NA)
>> | 
>> | These are in the src/library/base/R/namespace.R file, around line 379.
>> | 
>> | If I stop it before the if and evaluate R_version_built_under, it looks
>> | fine.  If I stop it there and evaluate
>> | 
>> | R_version_built_under < "3.0.0"
>> | 
>> | I get NA.  If I evaluate it again without changing anything, I get FALSE.
>> | 
>> | Does anyone else see this?  Any ideas on what might be the cause?
>> 
>> I don't see it on Ubuntu with a fresh R-devel:
>> 
>> edd at max:~/svn/r-devel$ RD
>> 
>> R Under development (unstable) (2015-06-06 r68485) -- "Unsuffered Consequences"
>> Copyright (C) 2015 The R Foundation for Statistical Computing
>> Platform: x86_64-unknown-linux-gnu (64-bit)
>> 
>> R is free software and comes with ABSOLUTELY NO WARRANTY.
>> You are welcome to redistribute it under certain conditions.
>> Type 'license()' or 'licence()' for distribution details.
>> 
>>  Natural language support but running in an English locale
>> 
>> R is a collaborative project with many contributors.
>> Type 'contributors()' for more information and
>> 'citation()' on how to cite R or R packages in publications.
>> 
>> Type 'demo()' for some demos, 'help()' for on-line help, or
>> 'help.start()' for an HTML browser interface to help.
>> Type 'q()' to quit R.
>> 
>> R> Sys.setlocale(locale='en_US.UTF-8');grid::gpar()
>> [1] "LC_CTYPE=en_US.UTF-8;LC_NUMERIC=C;LC_TIME=en_US.UTF-8;LC_COLLATE=en_US.UTF-8;LC_MONETARY=en_US.UTF-8;LC_MESSAGES=en_US.UTF-8;LC_PAPER=en_US.UTF-8;LC_NAME=C;LC_ADDRESS=C;LC_TELEPHONE=C;LC_MEASUREMENT=en_US.UTF-8;LC_IDENTIFICATION=C"
>> list()
>> R> 
>> 
>> I don't have r-patched handy or I'd try that too.
> 
> Thanks.  It doesn't actually need loadNamespace, it's string comparisons
> that fail.  For example,
> 
> $ R --vanilla
> 
> R version 3.2.0 Patched (2015-04-28 r68272) -- "Full of Ingredients"
> Copyright (C) 2015 The R Foundation for Statistical Computing
> Platform: x86_64-apple-darwin13.4.0 (64-bit)
> 
> R is free software and comes with ABSOLUTELY NO WARRANTY.
> You are welcome to redistribute it under certain conditions.
> Type 'license()' or 'licence()' for distribution details.
> 
>  Natural language support but running in an English locale
> 
> R is a collaborative project with many contributors.
> Type 'contributors()' for more information and
> 'citation()' on how to cite R or R packages in publications.
> 
> Type 'demo()' for some demos, 'help()' for on-line help, or
> 'help.start()' for an HTML browser interface to help.
> Type 'q()' to quit R.
> 
>> Sys.setlocale(locale='en_US.UTF-8')
> [1] "en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_CA.UTF-8"
>> "320" > "300"
> [1] NA
>> "320" > "300"
> [1] TRUE
> 
> I don't see it in R-devel on Windows.
> 
> Duncan Murdoch
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel

-- 
Peter Dalgaard, Professor,
Center for Statistics, Copenhagen Business School
Solbjerg Plads 3, 2000 Frederiksberg, Denmark
Phone: (+45)38153501
Email: pd.mes at cbs.dk  Priv: PDalgd at gmail.com


From pdalgd at gmail.com  Mon Jun  8 13:20:09 2015
From: pdalgd at gmail.com (peter dalgaard)
Date: Mon, 8 Jun 2015 13:20:09 +0200
Subject: [Rd] Bug in loadNamespace?
In-Reply-To: <22894BD8-977F-4F5F-9CE2-1EF5B40268E9@helsinki.fi>
References: <5574E5C8.1010902@gmail.com>
	<21876.60531.689839.424259@max.nulle.part>
	<5574F303.4080903@gmail.com>
	<F35FE433-FCF9-49DC-A4D1-8ECA2985D7DB@gmail.com>
	<22894BD8-977F-4F5F-9CE2-1EF5B40268E9@helsinki.fi>
Message-ID: <6F995B2F-B182-4523-B995-D3A1A513A308@gmail.com>

Looks like this could be locale related. Both of you are using non-US locales, and Sys.setlocale is not changing the last entry (LC_MESSAGES), which is as documented, but maybe somehow related. 

I can reproduce with

Peters-iMac:r-release-branch pd$ LC_ALL=da_DK.UTF-8 BUILD-dist/bin/R --vanilla

R version 3.2.1 beta (2015-06-07 r68485) -- "World-Famous Astronaut"
Copyright (C) 2015 The R Foundation for Statistical Computing
Platform: x86_64-apple-darwin13.4.0/x86_64 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> Sys.setlocale(locale='en_US.UTF-8')
[1] "en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/da_DK.UTF-8"
> "320" > "300"
[1] NA


On 08 Jun 2015, at 11:10 , Reijo Sund <reijo.sund at helsinki.fi> wrote:

> Hi!
> 
> Yes, I can repeat the problem. Happens at least with Mavericks build of R 3.1.3 (2015-03-09) as well as with Mavericks as well as Snowleopard builds of R 3.2.1 beta (2015-06-07 r68485).
> 
> Best wishes,
> Reijo
> 
> - - -
> 
> R version 3.1.3 (2015-03-09) -- "Smooth Sidewalk"
> Copyright (C) 2015 The R Foundation for Statistical Computing
> Platform: x86_64-apple-darwin13.4.0 (64-bit)
> 
>> Sys.setlocale(locale='en_US.UTF-8')
> [1] "en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/fi_FI.UTF-8"
>> "320" > "300"
> [1] NA
>> "320" > "300"
> [1] TRUE
> 
> - - -
> 
> R version 3.2.1 beta (2015-06-07 r68485) -- "World-Famous Astronaut"
> Copyright (C) 2015 The R Foundation for Statistical Computing
> Platform: x86_64-apple-darwin13.4.0 (64-bit)
> 
>> Sys.setlocale(locale='en_US.UTF-8')
> [1] "en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/fi_FI.UTF-8"
>> "320" > "300"
> [1] NA
>> "320" > "300"
> [1] TRUE
> 
> - - -
> 
> R version 3.2.1 beta (2015-06-07 r68485) -- "World-Famous Astronaut"
> Copyright (C) 2015 The R Foundation for Statistical Computing
> Platform: x86_64-apple-darwin10.8.0 (64-bit)
> 
>> Sys.setlocale(locale='en_US.UTF-8')
> [1] "en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/fi_FI.UTF-8"
>> "320" > "300"
> [1] NA
>> "320" > "300"
> [1] TRUE
> 
> 
> 
> 
>> peter dalgaard <pdalgd at gmail.com> kirjoitti 8.6.2015 kello 11.14:
>> 
>> Not happening for me with
>> 
>> R version 3.2.0 Patched (2015-06-05 r68479) -- "Full of Ingredients"
>> ...
>> 
>>> Sys.setlocale(locale='en_US.UTF-8')
>> [1] "en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8"
>>> "320"> "300"
>> [1] TRUE
>>> "320"> "300"
>> [1] TRUE
>>> 
>> 
>> -pd
>> 
>>> On 08 Jun 2015, at 03:42 , Duncan Murdoch <murdoch.duncan at gmail.com> wrote:
>>> 
>>> On 07/06/2015 9:14 PM, Dirk Eddelbuettel wrote:
>>>> 
>>>> On 7 June 2015 at 20:46, Duncan Murdoch wrote:
>>>> | I am seeing very strange behaviour in R 3.2.0 patched (r68272) and a new
>>>> | build of R-devel.  The sessioninfo() from the former is below.
>>>> | 
>>>> | Here's what I see:  If I set the locale, and trigger a namespace load, a
>>>> | version comparison gives NA, and I get an error.  For example, in a new
>>>> | session started with R --vanilla from the terminal:
>>>> | 
>>>> | > Sys.setlocale(locale='en_US.UTF-8');grid::gpar()
>>>> | [1] "en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_CA.UTF-8"
>>>> | Error in if (R_version_built_under < "3.0.0") stop(gettextf("package %s
>>>> | was built before R 3.0.0: please re-install it",  :
>>>> |   missing value where TRUE/FALSE needed
>>>> | 
>>>> | I've tried debugging this, and the bad lines are these, in loadNamespace:
>>>> | 
>>>> | R_version_built_under <- as.numeric_version(built$R)
>>>> | if (R_version_built_under < "3.0.0") stop(gettextf("package %s was built
>>>> | before R 3.0.0: please re-install it",
>>>> |     sQuote(basename(pkgpath))), call. = FALSE, domain = NA)
>>>> | 
>>>> | These are in the src/library/base/R/namespace.R file, around line 379.
>>>> | 
>>>> | If I stop it before the if and evaluate R_version_built_under, it looks
>>>> | fine.  If I stop it there and evaluate
>>>> | 
>>>> | R_version_built_under < "3.0.0"
>>>> | 
>>>> | I get NA.  If I evaluate it again without changing anything, I get FALSE.
>>>> | 
>>>> | Does anyone else see this?  Any ideas on what might be the cause?
>>>> 
>>>> I don't see it on Ubuntu with a fresh R-devel:
>>>> 
>>>> edd at max:~/svn/r-devel$ RD
>>>> 
>>>> R Under development (unstable) (2015-06-06 r68485) -- "Unsuffered Consequences"
>>>> Copyright (C) 2015 The R Foundation for Statistical Computing
>>>> Platform: x86_64-unknown-linux-gnu (64-bit)
>>>> 
>>>> R is free software and comes with ABSOLUTELY NO WARRANTY.
>>>> You are welcome to redistribute it under certain conditions.
>>>> Type 'license()' or 'licence()' for distribution details.
>>>> 
>>>> Natural language support but running in an English locale
>>>> 
>>>> R is a collaborative project with many contributors.
>>>> Type 'contributors()' for more information and
>>>> 'citation()' on how to cite R or R packages in publications.
>>>> 
>>>> Type 'demo()' for some demos, 'help()' for on-line help, or
>>>> 'help.start()' for an HTML browser interface to help.
>>>> Type 'q()' to quit R.
>>>> 
>>>> R> Sys.setlocale(locale='en_US.UTF-8');grid::gpar()
>>>> [1] "LC_CTYPE=en_US.UTF-8;LC_NUMERIC=C;LC_TIME=en_US.UTF-8;LC_COLLATE=en_US.UTF-8;LC_MONETARY=en_US.UTF-8;LC_MESSAGES=en_US.UTF-8;LC_PAPER=en_US.UTF-8;LC_NAME=C;LC_ADDRESS=C;LC_TELEPHONE=C;LC_MEASUREMENT=en_US.UTF-8;LC_IDENTIFICATION=C"
>>>> list()
>>>> R> 
>>>> 
>>>> I don't have r-patched handy or I'd try that too.
>>> 
>>> Thanks.  It doesn't actually need loadNamespace, it's string comparisons
>>> that fail.  For example,
>>> 
>>> $ R --vanilla
>>> 
>>> R version 3.2.0 Patched (2015-04-28 r68272) -- "Full of Ingredients"
>>> Copyright (C) 2015 The R Foundation for Statistical Computing
>>> Platform: x86_64-apple-darwin13.4.0 (64-bit)
>>> 
>>> R is free software and comes with ABSOLUTELY NO WARRANTY.
>>> You are welcome to redistribute it under certain conditions.
>>> Type 'license()' or 'licence()' for distribution details.
>>> 
>>> Natural language support but running in an English locale
>>> 
>>> R is a collaborative project with many contributors.
>>> Type 'contributors()' for more information and
>>> 'citation()' on how to cite R or R packages in publications.
>>> 
>>> Type 'demo()' for some demos, 'help()' for on-line help, or
>>> 'help.start()' for an HTML browser interface to help.
>>> Type 'q()' to quit R.
>>> 
>>>> Sys.setlocale(locale='en_US.UTF-8')
>>> [1] "en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_CA.UTF-8"
>>>> "320" > "300"
>>> [1] NA
>>>> "320" > "300"
>>> [1] TRUE
>>> 
>>> I don't see it in R-devel on Windows.
>>> 
>>> Duncan Murdoch
>>> 
>>> ______________________________________________
>>> R-devel at r-project.org mailing list
>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>> 
>> -- 
>> Peter Dalgaard, Professor,
>> Center for Statistics, Copenhagen Business School
>> Solbjerg Plads 3, 2000 Frederiksberg, Denmark
>> Phone: (+45)38153501
>> Email: pd.mes at cbs.dk  Priv: PDalgd at gmail.com
>> 
>> ______________________________________________
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel
> 

-- 
Peter Dalgaard, Professor,
Center for Statistics, Copenhagen Business School
Solbjerg Plads 3, 2000 Frederiksberg, Denmark
Phone: (+45)38153501
Office: A 4.23
Email: pd.mes at cbs.dk  Priv: PDalgd at gmail.com


From murdoch.duncan at gmail.com  Mon Jun  8 17:17:42 2015
From: murdoch.duncan at gmail.com (Duncan Murdoch)
Date: Mon, 08 Jun 2015 11:17:42 -0400
Subject: [Rd] Bug in loadNamespace?
In-Reply-To: <6F995B2F-B182-4523-B995-D3A1A513A308@gmail.com>
References: <5574E5C8.1010902@gmail.com>
	<21876.60531.689839.424259@max.nulle.part>
	<5574F303.4080903@gmail.com>
	<F35FE433-FCF9-49DC-A4D1-8ECA2985D7DB@gmail.com>
	<22894BD8-977F-4F5F-9CE2-1EF5B40268E9@helsinki.fi>
	<6F995B2F-B182-4523-B995-D3A1A513A308@gmail.com>
Message-ID: <5575B216.3020105@gmail.com>

I believe this is now fixed in R-devel and R-3.2.1-beta as of revision
68489.

Duncan Murdoch

On 08/06/2015 7:20 AM, peter dalgaard wrote:
> Looks like this could be locale related. Both of you are using non-US locales, and Sys.setlocale is not changing the last entry (LC_MESSAGES), which is as documented, but maybe somehow related. 
> 
> I can reproduce with
> 
> Peters-iMac:r-release-branch pd$ LC_ALL=da_DK.UTF-8 BUILD-dist/bin/R --vanilla
> 
> R version 3.2.1 beta (2015-06-07 r68485) -- "World-Famous Astronaut"
> Copyright (C) 2015 The R Foundation for Statistical Computing
> Platform: x86_64-apple-darwin13.4.0/x86_64 (64-bit)
> 
> R is free software and comes with ABSOLUTELY NO WARRANTY.
> You are welcome to redistribute it under certain conditions.
> Type 'license()' or 'licence()' for distribution details.
> 
> R is a collaborative project with many contributors.
> Type 'contributors()' for more information and
> 'citation()' on how to cite R or R packages in publications.
> 
> Type 'demo()' for some demos, 'help()' for on-line help, or
> 'help.start()' for an HTML browser interface to help.
> Type 'q()' to quit R.
> 
>> Sys.setlocale(locale='en_US.UTF-8')
> [1] "en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/da_DK.UTF-8"
>> "320" > "300"
> [1] NA
> 
> 
> On 08 Jun 2015, at 11:10 , Reijo Sund <reijo.sund at helsinki.fi> wrote:
> 
>> Hi!
>>
>> Yes, I can repeat the problem. Happens at least with Mavericks build of R 3.1.3 (2015-03-09) as well as with Mavericks as well as Snowleopard builds of R 3.2.1 beta (2015-06-07 r68485).
>>
>> Best wishes,
>> Reijo
>>
>> - - -
>>
>> R version 3.1.3 (2015-03-09) -- "Smooth Sidewalk"
>> Copyright (C) 2015 The R Foundation for Statistical Computing
>> Platform: x86_64-apple-darwin13.4.0 (64-bit)
>>
>>> Sys.setlocale(locale='en_US.UTF-8')
>> [1] "en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/fi_FI.UTF-8"
>>> "320" > "300"
>> [1] NA
>>> "320" > "300"
>> [1] TRUE
>>
>> - - -
>>
>> R version 3.2.1 beta (2015-06-07 r68485) -- "World-Famous Astronaut"
>> Copyright (C) 2015 The R Foundation for Statistical Computing
>> Platform: x86_64-apple-darwin13.4.0 (64-bit)
>>
>>> Sys.setlocale(locale='en_US.UTF-8')
>> [1] "en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/fi_FI.UTF-8"
>>> "320" > "300"
>> [1] NA
>>> "320" > "300"
>> [1] TRUE
>>
>> - - -
>>
>> R version 3.2.1 beta (2015-06-07 r68485) -- "World-Famous Astronaut"
>> Copyright (C) 2015 The R Foundation for Statistical Computing
>> Platform: x86_64-apple-darwin10.8.0 (64-bit)
>>
>>> Sys.setlocale(locale='en_US.UTF-8')
>> [1] "en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/fi_FI.UTF-8"
>>> "320" > "300"
>> [1] NA
>>> "320" > "300"
>> [1] TRUE
>>
>>
>>
>>
>>> peter dalgaard <pdalgd at gmail.com> kirjoitti 8.6.2015 kello 11.14:
>>>
>>> Not happening for me with
>>>
>>> R version 3.2.0 Patched (2015-06-05 r68479) -- "Full of Ingredients"
>>> ...
>>>
>>>> Sys.setlocale(locale='en_US.UTF-8')
>>> [1] "en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8"
>>>> "320"> "300"
>>> [1] TRUE
>>>> "320"> "300"
>>> [1] TRUE
>>>>
>>>
>>> -pd
>>>
>>>> On 08 Jun 2015, at 03:42 , Duncan Murdoch <murdoch.duncan at gmail.com> wrote:
>>>>
>>>> On 07/06/2015 9:14 PM, Dirk Eddelbuettel wrote:
>>>>>
>>>>> On 7 June 2015 at 20:46, Duncan Murdoch wrote:
>>>>> | I am seeing very strange behaviour in R 3.2.0 patched (r68272) and a new
>>>>> | build of R-devel.  The sessioninfo() from the former is below.
>>>>> | 
>>>>> | Here's what I see:  If I set the locale, and trigger a namespace load, a
>>>>> | version comparison gives NA, and I get an error.  For example, in a new
>>>>> | session started with R --vanilla from the terminal:
>>>>> | 
>>>>> | > Sys.setlocale(locale='en_US.UTF-8');grid::gpar()
>>>>> | [1] "en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_CA.UTF-8"
>>>>> | Error in if (R_version_built_under < "3.0.0") stop(gettextf("package %s
>>>>> | was built before R 3.0.0: please re-install it",  :
>>>>> |   missing value where TRUE/FALSE needed
>>>>> | 
>>>>> | I've tried debugging this, and the bad lines are these, in loadNamespace:
>>>>> | 
>>>>> | R_version_built_under <- as.numeric_version(built$R)
>>>>> | if (R_version_built_under < "3.0.0") stop(gettextf("package %s was built
>>>>> | before R 3.0.0: please re-install it",
>>>>> |     sQuote(basename(pkgpath))), call. = FALSE, domain = NA)
>>>>> | 
>>>>> | These are in the src/library/base/R/namespace.R file, around line 379.
>>>>> | 
>>>>> | If I stop it before the if and evaluate R_version_built_under, it looks
>>>>> | fine.  If I stop it there and evaluate
>>>>> | 
>>>>> | R_version_built_under < "3.0.0"
>>>>> | 
>>>>> | I get NA.  If I evaluate it again without changing anything, I get FALSE.
>>>>> | 
>>>>> | Does anyone else see this?  Any ideas on what might be the cause?
>>>>>
>>>>> I don't see it on Ubuntu with a fresh R-devel:
>>>>>
>>>>> edd at max:~/svn/r-devel$ RD
>>>>>
>>>>> R Under development (unstable) (2015-06-06 r68485) -- "Unsuffered Consequences"
>>>>> Copyright (C) 2015 The R Foundation for Statistical Computing
>>>>> Platform: x86_64-unknown-linux-gnu (64-bit)
>>>>>
>>>>> R is free software and comes with ABSOLUTELY NO WARRANTY.
>>>>> You are welcome to redistribute it under certain conditions.
>>>>> Type 'license()' or 'licence()' for distribution details.
>>>>>
>>>>> Natural language support but running in an English locale
>>>>>
>>>>> R is a collaborative project with many contributors.
>>>>> Type 'contributors()' for more information and
>>>>> 'citation()' on how to cite R or R packages in publications.
>>>>>
>>>>> Type 'demo()' for some demos, 'help()' for on-line help, or
>>>>> 'help.start()' for an HTML browser interface to help.
>>>>> Type 'q()' to quit R.
>>>>>
>>>>> R> Sys.setlocale(locale='en_US.UTF-8');grid::gpar()
>>>>> [1] "LC_CTYPE=en_US.UTF-8;LC_NUMERIC=C;LC_TIME=en_US.UTF-8;LC_COLLATE=en_US.UTF-8;LC_MONETARY=en_US.UTF-8;LC_MESSAGES=en_US.UTF-8;LC_PAPER=en_US.UTF-8;LC_NAME=C;LC_ADDRESS=C;LC_TELEPHONE=C;LC_MEASUREMENT=en_US.UTF-8;LC_IDENTIFICATION=C"
>>>>> list()
>>>>> R> 
>>>>>
>>>>> I don't have r-patched handy or I'd try that too.
>>>>
>>>> Thanks.  It doesn't actually need loadNamespace, it's string comparisons
>>>> that fail.  For example,
>>>>
>>>> $ R --vanilla
>>>>
>>>> R version 3.2.0 Patched (2015-04-28 r68272) -- "Full of Ingredients"
>>>> Copyright (C) 2015 The R Foundation for Statistical Computing
>>>> Platform: x86_64-apple-darwin13.4.0 (64-bit)
>>>>
>>>> R is free software and comes with ABSOLUTELY NO WARRANTY.
>>>> You are welcome to redistribute it under certain conditions.
>>>> Type 'license()' or 'licence()' for distribution details.
>>>>
>>>> Natural language support but running in an English locale
>>>>
>>>> R is a collaborative project with many contributors.
>>>> Type 'contributors()' for more information and
>>>> 'citation()' on how to cite R or R packages in publications.
>>>>
>>>> Type 'demo()' for some demos, 'help()' for on-line help, or
>>>> 'help.start()' for an HTML browser interface to help.
>>>> Type 'q()' to quit R.
>>>>
>>>>> Sys.setlocale(locale='en_US.UTF-8')
>>>> [1] "en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_CA.UTF-8"
>>>>> "320" > "300"
>>>> [1] NA
>>>>> "320" > "300"
>>>> [1] TRUE
>>>>
>>>> I don't see it in R-devel on Windows.
>>>>
>>>> Duncan Murdoch
>>>>
>>>> ______________________________________________
>>>> R-devel at r-project.org mailing list
>>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>>
>>> -- 
>>> Peter Dalgaard, Professor,
>>> Center for Statistics, Copenhagen Business School
>>> Solbjerg Plads 3, 2000 Frederiksberg, Denmark
>>> Phone: (+45)38153501
>>> Email: pd.mes at cbs.dk  Priv: PDalgd at gmail.com
>>>
>>> ______________________________________________
>>> R-devel at r-project.org mailing list
>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>
>


From ucfagls at gmail.com  Mon Jun  8 18:24:25 2015
From: ucfagls at gmail.com (Gavin Simpson)
Date: Mon, 8 Jun 2015 10:24:25 -0600
Subject: [Rd] Request: making cutree S3 in R?
In-Reply-To: <CANdJ3dWW3xd4-oWgN4AAdKe_q6RyqVhM=-B40Avc=F3FdcSevQ@mail.gmail.com>
References: <CANdJ3dWW3xd4-oWgN4AAdKe_q6RyqVhM=-B40Avc=F3FdcSevQ@mail.gmail.com>
Message-ID: <CAAHES9z9VmgF8K6e1Ls1PnKhJ4fw1ph2pvdTv0GHcGDiBsPNKw@mail.gmail.com>

In lieu of that Tal, why not do as Writing R Extensions illustrates and add
the following to your package


On 6 June 2015 at 04:44, Tal Galili <tal.galili at gmail.com> wrote:

> Hello all,
>
> A question/suggestion:
>
> I was wondering if there is a chance of changing stats::cutree to be S3 and
> use cutree.hclust?
>
> For example:
>
> cutree <- function(tree, k = NULL, h = NULL,...)
> {
>   UseMethod("cutree")
> }
>
> cutree.hclust <- stats::cutree
> # This will obviously need the actual content of stats::cutree
>
>
> This would be nicer for people like me to add new methods to cutree. For
> example the cutree.dendrogram function
> <https://github.com/talgalili/dendextend/blob/master/R/cutree.dendrogram.R>
> I
> implemented in dendextend,
>
>
>
> With regards,
> Tal
>
>         [[alternative HTML version deleted]]
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>



-- 
Gavin Simpson, PhD

	[[alternative HTML version deleted]]


From murdoch.duncan at gmail.com  Mon Jun  8 18:43:54 2015
From: murdoch.duncan at gmail.com (Duncan Murdoch)
Date: Mon, 08 Jun 2015 12:43:54 -0400
Subject: [Rd] NEWS file inconsistency
In-Reply-To: <499051914.1963508.1433607099634.JavaMail.zimbra@openanalytics.eu>
References: <1140973825.1963255.1433593105159.JavaMail.zimbra@openanalytics.eu>
	<5572E970.80601@gmail.com>
	<499051914.1963508.1433607099634.JavaMail.zimbra@openanalytics.eu>
Message-ID: <5575C64A.9020107@gmail.com>

On 06/06/2015 12:11 PM, Tobias Verbeke wrote:
> Many thanks, Duncan.
>
> We will check the prerelease versions of R 3.2.1.

The first one is now online, at 
<http://cran.r-project.org/bin/windows/base/rtest.html>.  The link to 
this from the main Windows binary page will appear soon, but you can go 
directly right now.  Mirrors may be a little behind.

Duncan Murdoch

>
> Best regards,
> Tobias
>
> ----- Original Message -----
> > From: "Duncan Murdoch" <murdoch.duncan at gmail.com>
> > To: "Tobias Verbeke" <tobias.verbeke at openanalytics.eu>, "r-devel at r-project.org" <r-devel at r-project.org>
> > Sent: Saturday, June 6, 2015 2:37:04 PM
> > Subject: Re: [Rd] NEWS file inconsistency
>
> > On 06/06/2015 8:18 AM, Tobias Verbeke wrote:
> >> L.S.
> >>
> >> I noticed the NEWS file as made available at
> >> http://cran.r-project.org/src/base/NEWS became inconsistent in describing
> >> CHANGES for a new R version:
> >>
> >> $ wget http://cran.r-project.org/src/base/NEWS
> >> $ cat NEWS | grep 'CHANGES IN '
> >> CHANGES IN 3.2.0:
> >> CHANGES IN R 3.1.3:
> >> CHANGES IN R 3.1.2:
> >> CHANGES IN R 3.1.1:
> >> CHANGES IN R 3.1.0:
> >> CHANGES IN R 3.0.3:
> >> CHANGES IN R 3.0.2:
> >> CHANGES IN R 3.0.1:
> >> CHANGES IN R 3.0.0:
> >>
> >> Not a big issue, obviously, but we were parsing the file as part of a build
> >> procedure.
> >
> > That's already been fixed, and hopefully it won't happen again in 3.2.1,
> > due in a couple of weeks.  I thought it had been fixed before release,
> > but apparently not.
> >
> > Please do check the 3.2.1 pre-release versions (starting Monday) and
> > make sure they work with your tools.
> >
> > Duncan


From tal.galili at gmail.com  Mon Jun  8 20:55:17 2015
From: tal.galili at gmail.com (Tal Galili)
Date: Mon, 8 Jun 2015 21:55:17 +0300
Subject: [Rd] Request: making cutree S3 in R?
In-Reply-To: <CAAHES9z9VmgF8K6e1Ls1PnKhJ4fw1ph2pvdTv0GHcGDiBsPNKw@mail.gmail.com>
References: <CANdJ3dWW3xd4-oWgN4AAdKe_q6RyqVhM=-B40Avc=F3FdcSevQ@mail.gmail.com>
	<CAAHES9z9VmgF8K6e1Ls1PnKhJ4fw1ph2pvdTv0GHcGDiBsPNKw@mail.gmail.com>
Message-ID: <CANdJ3dVa5QJMkF8Vg8USwnfoa0MyfCNPA=MQv7UqsOd400EpeQ@mail.gmail.com>

Hi Gavin,
Thank you for the e-mail, I have already done so in:
https://github.com/talgalili/dendextend/blob/master/R/cutree.dendrogram.R

I wrote this e-mail since I understand that long term we would like to
avoid having packages override functions from base R packages. So since I
am extending cutree for dendrogram, it would have been nice if the current
function would have been S3, so that I wouldn't need to override it the way
I do.

Best,
Tal



----------------Contact
Details:-------------------------------------------------------
Contact me: Tal.Galili at gmail.com |
Read me: www.talgalili.com (Hebrew) | www.biostatistics.co.il (Hebrew) |
www.r-statistics.com (English)
----------------------------------------------------------------------------------------------


On Mon, Jun 8, 2015 at 7:24 PM, Gavin Simpson <ucfagls at gmail.com> wrote:

> In lieu of that Tal, why not do as Writing R Extensions illustrates and
> add the following to your package
>
>
> On 6 June 2015 at 04:44, Tal Galili <tal.galili at gmail.com> wrote:
>
>> Hello all,
>>
>> A question/suggestion:
>>
>> I was wondering if there is a chance of changing stats::cutree to be S3
>> and
>> use cutree.hclust?
>>
>> For example:
>>
>> cutree <- function(tree, k = NULL, h = NULL,...)
>> {
>>   UseMethod("cutree")
>> }
>>
>> cutree.hclust <- stats::cutree
>> # This will obviously need the actual content of stats::cutree
>>
>>
>> This would be nicer for people like me to add new methods to cutree. For
>> example the cutree.dendrogram function
>> <
>> https://github.com/talgalili/dendextend/blob/master/R/cutree.dendrogram.R>
>> I
>> implemented in dendextend,
>>
>>
>>
>> With regards,
>> Tal
>>
>>         [[alternative HTML version deleted]]
>>
>> ______________________________________________
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>
>
>
>
> --
> Gavin Simpson, PhD
>

	[[alternative HTML version deleted]]


From Will.Landau at gmail.com  Thu Jun 11 00:10:42 2015
From: Will.Landau at gmail.com (landau)
Date: Wed, 10 Jun 2015 15:10:42 -0700 (PDT)
Subject: [Rd] cuda-memcheck to debug CUDA-enabled R packages
In-Reply-To: <1402001176976-4691766.post@n4.nabble.com>
References: <1401824622278-4691668.post@n4.nabble.com>
	<1402001176976-4691766.post@n4.nabble.com>
Message-ID: <1433974242125-4708479.post@n4.nabble.com>

Counter-edit: it turns out that that kind of hack doesn't work. See  this
post
<http://stackoverflow.com/questions/30768379/cuda-memcheck-fails-to-detect-memory-leak-in-an-r-package> 
. 



--
View this message in context: http://r.789695.n4.nabble.com/cuda-memcheck-to-debug-CUDA-enabled-R-packages-tp4691668p4708479.html
Sent from the R devel mailing list archive at Nabble.com.


From therneau at mayo.edu  Thu Jun 11 18:52:02 2015
From: therneau at mayo.edu (Therneau, Terry M., Ph.D.)
Date: Thu, 11 Jun 2015 11:52:02 -0500
Subject: [Rd] Odd behavior of plot function
Message-ID: <2f3a88$qmoqc@ironport10.mayo.edu>

The following code snippet taken from plot.survfit now gives me a surprising result:

tempx <- c(0, 400, 0, 0)
ytemp <- c(.0657, .98, 1, 0)
plot(range(xtemp), range(ytemp), log='y', type='n')

In that the max value for the x axis is now 10.  The 0 on the end of ytemp was actually a 
mistake and shouldn't be there, if you remove it then the upper limit is sensible.

plot(range(xtemp), range(ytemp[1:3]), log='y', type='n')

I've now fixed this in the survival package.  I can't say when the odd behavior crept in, 
but am sure it was not always there.  I draw log scale plots only a few times a year.

Terry T.


From therneau at mayo.edu  Thu Jun 11 22:25:25 2015
From: therneau at mayo.edu (Therneau, Terry M., Ph.D.)
Date: Thu, 11 Jun 2015 15:25:25 -0500
Subject: [Rd] Odd behavior of plot function
In-Reply-To: <OF5EB8132B.6312409B-ON85257E61.0062DDC7-85257E61.0062DDCB@american.edu>
References: <2f3a88$qmoqc@ironport10.mayo.edu>
	<OF5EB8132B.6312409B-ON85257E61.0062DDC7-85257E61.0062DDCB@american.edu>
Message-ID: <2f3a88$qpc88@ironport10.mayo.edu>

     Sorry, that's a cut and paste error.  It should be either tempx or xtemp throughout.
Terry T

On 06/11/2015 12:59 PM, John Nolan wrote:
> Is there a misprint in your example?  The first line of code uses tempx, but the rest uses a different variable xtemp?
>
> John
>
> -----"R-devel" <r-devel-bounces at r-project.org> wrote: -----
> To: "r-devel at r-project.org" <r-devel at r-project.org>
> From: "Therneau, Terry M., Ph.D."
> Sent by: "R-devel"
> Date: 06/11/2015 12:50PM
> Subject: [Rd] Odd behavior of plot function
>
> The following code snippet taken from plot.survfit now gives me a surprising result:
>
> tempx <- c(0, 400, 0, 0)
> ytemp <- c(.0657, .98, 1, 0)
> plot(range(xtemp), range(ytemp), log='y', type='n')
>
> In that the max value for the x axis is now 10.  The 0 on the end of ytemp was actually a
> mistake and shouldn't be there, if you remove it then the upper limit is sensible.
>
> plot(range(xtemp), range(ytemp[1:3]), log='y', type='n')
>
> I've now fixed this in the survival package.  I can't say when the odd behavior crept in,
> but am sure it was not always there.  I draw log scale plots only a few times a year.
>
> Terry T.
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From mick.jordan at oracle.com  Fri Jun 12 07:24:56 2015
From: mick.jordan at oracle.com (Mick Jordan)
Date: Thu, 11 Jun 2015 22:24:56 -0700
Subject: [Rd] CRAN testing
Message-ID: <557A6D28.7070309@oracle.com>

Is the mechanism by which packages are tested on CRAN described 
anywhere? Is it by any chance written in R? The FastR 
<https://bitbucket.org/allr/fastr/wiki/Home> team is interested in 
running a virtual CRAN where we can test all the CRAN packages on FastR.

Thanks
Mick Jordan


	[[alternative HTML version deleted]]


From maechler at stat.math.ethz.ch  Fri Jun 12 10:12:07 2015
From: maechler at stat.math.ethz.ch (Martin Maechler)
Date: Fri, 12 Jun 2015 10:12:07 +0200
Subject: [Rd] RFC: Declaring "foo.bar" as nonS3method() ?!
In-Reply-To: <21882.36966.429889.227076@stat.math.ethz.ch>
References: <000e01d0a387$885ad130$99107390$@mcmaster.ca>
	<21882.36966.429889.227076@stat.math.ethz.ch>
Message-ID: <21882.37975.726216.982364@stat.math.ethz.ch>

This is a topic ' "apparent S3 methods" note in R CMD check '
from R-package-devel  
     https://stat.ethz.ch/pipermail/r-package-devel/2015q2/000126.html

which is relevant to here because some of us have been thinking
about extending R  because of the issue.

John Fox, maintainer of the 'effects' package has enquired about
the following  output from  'R CMD check effects' 

    >> * checking S3 generic/method consistency ... NOTE
    >> Found the following apparent S3 methods exported but not registered:
    >> all.effects

and added

    >> The offending function, all.effects(), is deprecated in favour of
    >> allEffects(), but I'd rather not get rid of it for backwards compatibility.
    >> Is there any way to suppress the note without removing all.effects()? 

and I had agreed that this was a "False Positive" in this case.

    [.......]

and then

    > Now I agree .. and have e-talked about this with another R core
    > member .. that it would be desirable for the package author to
    > effectively declare the fact that such a function is not an S3
    > method even though it "looks like it" at least if looked from far.

    > So, ideally, you could have something like

    > nonS3method("all.effects")

    > somewhere in your package source ( in NAMESPACE or R/*.R )
    > which would tell the package-checking code -- but *ALSO* all the other S3
    > method code that  all.effects should be treated as a regular R
    > function.

    > I would very much like such a feature in R, and for that reason,
    > I'm cross posting this (as one of the famous exceptions that
    > accompany real-life rules!!) to R-devel.

and actually I did *not* cross post, but have now moved the
relevant part of the thread to  R-devel.

Martin Maechler,
ETH Zurich


From jfox at mcmaster.ca  Fri Jun 12 12:41:10 2015
From: jfox at mcmaster.ca (John Fox)
Date: Fri, 12 Jun 2015 06:41:10 -0400
Subject: [Rd] RFC: Declaring "foo.bar" as nonS3method() ?!
In-Reply-To: <21882.37975.726216.982364@stat.math.ethz.ch>
References: <000e01d0a387$885ad130$99107390$@mcmaster.ca>
	<21882.36966.429889.227076@stat.math.ethz.ch>
	<21882.37975.726216.982364@stat.math.ethz.ch>
Message-ID: <web-562839593@cgpsrv2.cis.mcmaster.ca>

And my non-cross-posted cross-posting:

"Dear Martin,

Thank you for addressing this issue. Introducing a nonS3method() directive in NAMESPACE seems a reasonable solution. It could replace export() for functions with "."s in their names.

Best,
 John"

On Fri, 12 Jun 2015 10:12:07 +0200
 Martin Maechler <maechler at stat.math.ethz.ch> wrote:
> This is a topic ' "apparent S3 methods" note in R CMD check '
> from R-package-devel  
>      https://stat.ethz.ch/pipermail/r-package-devel/2015q2/000126.html
> 
> which is relevant to here because some of us have been thinking
> about extending R  because of the issue.
> 
> John Fox, maintainer of the 'effects' package has enquired about
> the following  output from  'R CMD check effects' 
> 
>     >> * checking S3 generic/method consistency ... NOTE
>     >> Found the following apparent S3 methods exported but not registered:
>     >> all.effects
> 
> and added
> 
>     >> The offending function, all.effects(), is deprecated in favour of
>     >> allEffects(), but I'd rather not get rid of it for backwards compatibility.
>     >> Is there any way to suppress the note without removing all.effects()? 
> 
> and I had agreed that this was a "False Positive" in this case.
> 
>     [.......]
> 
> and then
> 
>     > Now I agree .. and have e-talked about this with another R core
>     > member .. that it would be desirable for the package author to
>     > effectively declare the fact that such a function is not an S3
>     > method even though it "looks like it" at least if looked from far.
> 
>     > So, ideally, you could have something like
> 
>     > nonS3method("all.effects")
> 
>     > somewhere in your package source ( in NAMESPACE or R/*.R )
>     > which would tell the package-checking code -- but *ALSO* all the other S3
>     > method code that  all.effects should be treated as a regular R
>     > function.
> 
>     > I would very much like such a feature in R, and for that reason,
>     > I'm cross posting this (as one of the famous exceptions that
>     > accompany real-life rules!!) to R-devel.
> 
> and actually I did *not* cross post, but have now moved the
> relevant part of the thread to  R-devel.
> 
> Martin Maechler,
> ETH Zurich
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel

------------------------------------------------
John Fox, Professor
McMaster University
Hamilton, Ontario, Canada
http://socserv.mcmaster.ca/jfox/


From murdoch.duncan at gmail.com  Fri Jun 12 13:05:40 2015
From: murdoch.duncan at gmail.com (Duncan Murdoch)
Date: Fri, 12 Jun 2015 07:05:40 -0400
Subject: [Rd] RFC: Declaring "foo.bar" as nonS3method() ?!
In-Reply-To: <21882.37975.726216.982364@stat.math.ethz.ch>
References: <000e01d0a387$885ad130$99107390$@mcmaster.ca>	<21882.36966.429889.227076@stat.math.ethz.ch>
	<21882.37975.726216.982364@stat.math.ethz.ch>
Message-ID: <557ABD04.1040205@gmail.com>

On 12/06/2015 4:12 AM, Martin Maechler wrote:
> This is a topic ' "apparent S3 methods" note in R CMD check '
> from R-package-devel  
>      https://stat.ethz.ch/pipermail/r-package-devel/2015q2/000126.html
> 
> which is relevant to here because some of us have been thinking
> about extending R  because of the issue.
> 
> John Fox, maintainer of the 'effects' package has enquired about
> the following  output from  'R CMD check effects' 
> 
>     >> * checking S3 generic/method consistency ... NOTE
>     >> Found the following apparent S3 methods exported but not registered:
>     >> all.effects
> 
> and added
> 
>     >> The offending function, all.effects(), is deprecated in favour of
>     >> allEffects(), but I'd rather not get rid of it for backwards compatibility.
>     >> Is there any way to suppress the note without removing all.effects()? 
> 
> and I had agreed that this was a "False Positive" in this case.
> 
>     [.......]
> 
> and then
> 
>     > Now I agree .. and have e-talked about this with another R core
>     > member .. that it would be desirable for the package author to
>     > effectively declare the fact that such a function is not an S3
>     > method even though it "looks like it" at least if looked from far.
> 
>     > So, ideally, you could have something like
> 
>     > nonS3method("all.effects")
> 
>     > somewhere in your package source ( in NAMESPACE or R/*.R )
>     > which would tell the package-checking code -- but *ALSO* all the other S3
>     > method code that  all.effects should be treated as a regular R
>     > function.
> 
>     > I would very much like such a feature in R, and for that reason,
>     > I'm cross posting this (as one of the famous exceptions that
>     > accompany real-life rules!!) to R-devel.
> 
> and actually I did *not* cross post, but have now moved the
> relevant part of the thread to  R-devel.
> 

It sounds like a good idea.  It's a nontrivial amount of work, because
of the "all the other S3 method code" part.  There's the question of
functions defined outside of packages:  presumably they are still S3
methods, with no way to suppress that.

Duncan


From murdoch.duncan at gmail.com  Fri Jun 12 13:12:41 2015
From: murdoch.duncan at gmail.com (Duncan Murdoch)
Date: Fri, 12 Jun 2015 07:12:41 -0400
Subject: [Rd] RFC: Declaring "foo.bar" as nonS3method() ?!
In-Reply-To: <web-562839593@cgpsrv2.cis.mcmaster.ca>
References: <000e01d0a387$885ad130$99107390$@mcmaster.ca>	<21882.36966.429889.227076@stat.math.ethz.ch>	<21882.37975.726216.982364@stat.math.ethz.ch>
	<web-562839593@cgpsrv2.cis.mcmaster.ca>
Message-ID: <557ABEA9.2050809@gmail.com>

On 12/06/2015 6:41 AM, John Fox wrote:
> And my non-cross-posted cross-posting:
> 
> "Dear Martin,
> 
> Thank you for addressing this issue. Introducing a nonS3method() directive in NAMESPACE seems a reasonable solution. It could replace export() for functions with "."s in their names.

I think these are separate questions:  all.effects() could be exported
or not, and independently could be an S3 method or not.

Duncan Murdoch

> Best,
>  John"
> 
> On Fri, 12 Jun 2015 10:12:07 +0200
>  Martin Maechler <maechler at stat.math.ethz.ch> wrote:
>> This is a topic ' "apparent S3 methods" note in R CMD check '
>> from R-package-devel  
>>      https://stat.ethz.ch/pipermail/r-package-devel/2015q2/000126.html
>>
>> which is relevant to here because some of us have been thinking
>> about extending R  because of the issue.
>>
>> John Fox, maintainer of the 'effects' package has enquired about
>> the following  output from  'R CMD check effects' 
>>
>>     >> * checking S3 generic/method consistency ... NOTE
>>     >> Found the following apparent S3 methods exported but not registered:
>>     >> all.effects
>>
>> and added
>>
>>     >> The offending function, all.effects(), is deprecated in favour of
>>     >> allEffects(), but I'd rather not get rid of it for backwards compatibility.
>>     >> Is there any way to suppress the note without removing all.effects()? 
>>
>> and I had agreed that this was a "False Positive" in this case.
>>
>>     [.......]
>>
>> and then
>>
>>     > Now I agree .. and have e-talked about this with another R core
>>     > member .. that it would be desirable for the package author to
>>     > effectively declare the fact that such a function is not an S3
>>     > method even though it "looks like it" at least if looked from far.
>>
>>     > So, ideally, you could have something like
>>
>>     > nonS3method("all.effects")
>>
>>     > somewhere in your package source ( in NAMESPACE or R/*.R )
>>     > which would tell the package-checking code -- but *ALSO* all the other S3
>>     > method code that  all.effects should be treated as a regular R
>>     > function.
>>
>>     > I would very much like such a feature in R, and for that reason,
>>     > I'm cross posting this (as one of the famous exceptions that
>>     > accompany real-life rules!!) to R-devel.
>>
>> and actually I did *not* cross post, but have now moved the
>> relevant part of the thread to  R-devel.
>>
>> Martin Maechler,
>> ETH Zurich
>>
>> ______________________________________________
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel
> 
> ------------------------------------------------
> John Fox, Professor
> McMaster University
> Hamilton, Ontario, Canada
> http://socserv.mcmaster.ca/jfox/
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>


From Kurt.Hornik at wu.ac.at  Fri Jun 12 13:16:23 2015
From: Kurt.Hornik at wu.ac.at (Kurt Hornik)
Date: Fri, 12 Jun 2015 13:16:23 +0200
Subject: [Rd] RFC: Declaring "foo.bar" as nonS3method() ?!
In-Reply-To: <557ABD04.1040205@gmail.com>
References: <000e01d0a387$885ad130$99107390$@mcmaster.ca>
	<21882.36966.429889.227076@stat.math.ethz.ch>
	<21882.37975.726216.982364@stat.math.ethz.ch>
	<557ABD04.1040205@gmail.com>
Message-ID: <21882.49031.599800.412740@fangorn.hornik.net>

>>>>> Duncan Murdoch writes:

> On 12/06/2015 4:12 AM, Martin Maechler wrote:
>> This is a topic ' "apparent S3 methods" note in R CMD check '
>> from R-package-devel  
>> https://stat.ethz.ch/pipermail/r-package-devel/2015q2/000126.html
>> 
>> which is relevant to here because some of us have been thinking
>> about extending R  because of the issue.
>> 
>> John Fox, maintainer of the 'effects' package has enquired about
>> the following  output from  'R CMD check effects' 
>> 
>> >> * checking S3 generic/method consistency ... NOTE
>> >> Found the following apparent S3 methods exported but not registered:
>> >> all.effects
>> 
>> and added
>> 
>> >> The offending function, all.effects(), is deprecated in favour of
>> >> allEffects(), but I'd rather not get rid of it for backwards compatibility.
>> >> Is there any way to suppress the note without removing all.effects()? 
>> 
>> and I had agreed that this was a "False Positive" in this case.
>> 
>> [.......]
>> 
>> and then
>> 
>> > Now I agree .. and have e-talked about this with another R core
>> > member .. that it would be desirable for the package author to
>> > effectively declare the fact that such a function is not an S3
>> > method even though it "looks like it" at least if looked from far.
>> 
>> > So, ideally, you could have something like
>> 
>> > nonS3method("all.effects")
>> 
>> > somewhere in your package source ( in NAMESPACE or R/*.R )
>> > which would tell the package-checking code -- but *ALSO* all the other S3
>> > method code that  all.effects should be treated as a regular R
>> > function.
>> 
>> > I would very much like such a feature in R, and for that reason,
>> > I'm cross posting this (as one of the famous exceptions that
>> > accompany real-life rules!!) to R-devel.
>> 
>> and actually I did *not* cross post, but have now moved the
>> relevant part of the thread to  R-devel.
>> 

> It sounds like a good idea.  It's a nontrivial amount of work, because
> of the "all the other S3 method code" part.  There's the question of
> functions defined outside of packages:  presumably they are still S3
> methods, with no way to suppress that.

I am not sure this is the right solution: S3 dispatch will still occur
because we first look at foo.bar exports and then in the S3 registry,
afaicr (the "all the other S3 method code" part).

If we could move to only looking at the registry for dispatch, there
would be no need to declare situations where we should not dispatch on
foo.bar exports.

-k


From murdoch.duncan at gmail.com  Fri Jun 12 13:48:12 2015
From: murdoch.duncan at gmail.com (Duncan Murdoch)
Date: Fri, 12 Jun 2015 07:48:12 -0400
Subject: [Rd] RFC: Declaring "foo.bar" as nonS3method() ?!
In-Reply-To: <21882.49031.599800.412740@fangorn.hornik.net>
References: <000e01d0a387$885ad130$99107390$@mcmaster.ca>	<21882.36966.429889.227076@stat.math.ethz.ch>	<21882.37975.726216.982364@stat.math.ethz.ch>	<557ABD04.1040205@gmail.com>
	<21882.49031.599800.412740@fangorn.hornik.net>
Message-ID: <557AC6FC.8060206@gmail.com>

On 12/06/2015 7:16 AM, Kurt Hornik wrote:
>>>>>> Duncan Murdoch writes:
> 
>> On 12/06/2015 4:12 AM, Martin Maechler wrote:
>>> This is a topic ' "apparent S3 methods" note in R CMD check '
>>> from R-package-devel  
>>> https://stat.ethz.ch/pipermail/r-package-devel/2015q2/000126.html
>>>
>>> which is relevant to here because some of us have been thinking
>>> about extending R  because of the issue.
>>>
>>> John Fox, maintainer of the 'effects' package has enquired about
>>> the following  output from  'R CMD check effects' 
>>>
>>>>> * checking S3 generic/method consistency ... NOTE
>>>>> Found the following apparent S3 methods exported but not registered:
>>>>> all.effects
>>>
>>> and added
>>>
>>>>> The offending function, all.effects(), is deprecated in favour of
>>>>> allEffects(), but I'd rather not get rid of it for backwards compatibility.
>>>>> Is there any way to suppress the note without removing all.effects()? 
>>>
>>> and I had agreed that this was a "False Positive" in this case.
>>>
>>> [.......]
>>>
>>> and then
>>>
>>>> Now I agree .. and have e-talked about this with another R core
>>>> member .. that it would be desirable for the package author to
>>>> effectively declare the fact that such a function is not an S3
>>>> method even though it "looks like it" at least if looked from far.
>>>
>>>> So, ideally, you could have something like
>>>
>>>> nonS3method("all.effects")
>>>
>>>> somewhere in your package source ( in NAMESPACE or R/*.R )
>>>> which would tell the package-checking code -- but *ALSO* all the other S3
>>>> method code that  all.effects should be treated as a regular R
>>>> function.
>>>
>>>> I would very much like such a feature in R, and for that reason,
>>>> I'm cross posting this (as one of the famous exceptions that
>>>> accompany real-life rules!!) to R-devel.
>>>
>>> and actually I did *not* cross post, but have now moved the
>>> relevant part of the thread to  R-devel.
>>>
> 
>> It sounds like a good idea.  It's a nontrivial amount of work, because
>> of the "all the other S3 method code" part.  There's the question of
>> functions defined outside of packages:  presumably they are still S3
>> methods, with no way to suppress that.
> 
> I am not sure this is the right solution: S3 dispatch will still occur
> because we first look at foo.bar exports and then in the S3 registry,
> afaicr (the "all the other S3 method code" part).
> 
> If we could move to only looking at the registry for dispatch, there
> would be no need to declare situations where we should not dispatch on
> foo.bar exports.
> 

I think that would break a lot of existing scripts.  I think the logic
should be something like this.

For each class in the class list:

Search backwards through the environment chain.  If the current location
is a package environment or namespace, look only in the registry.  If
not, look at all functions.

If that search failed, try the next class.

A variation on the test is:  If there's a registry in the current
location, look there.  But I think the registry is not on the search
list, so I'm not sure that would work.

This assumes that we keep separate registries in each package; if we
merge them into one big registry, it gets harder.  I'm not familiar
enough with the code to know which way we do it.

Duncan Murdoch


From Kurt.Hornik at wu.ac.at  Fri Jun 12 13:52:55 2015
From: Kurt.Hornik at wu.ac.at (Kurt Hornik)
Date: Fri, 12 Jun 2015 13:52:55 +0200
Subject: [Rd] RFC: Declaring "foo.bar" as nonS3method() ?!
In-Reply-To: <557AC6FC.8060206@gmail.com>
References: <000e01d0a387$885ad130$99107390$@mcmaster.ca>
	<21882.36966.429889.227076@stat.math.ethz.ch>
	<21882.37975.726216.982364@stat.math.ethz.ch>
	<557ABD04.1040205@gmail.com>
	<21882.49031.599800.412740@fangorn.hornik.net>
	<557AC6FC.8060206@gmail.com>
Message-ID: <21882.51223.144401.149543@fangorn.hornik.net>

>>>>> Duncan Murdoch writes:

> On 12/06/2015 7:16 AM, Kurt Hornik wrote:
>>>>>>> Duncan Murdoch writes:
>> 
>>> On 12/06/2015 4:12 AM, Martin Maechler wrote:
>>>> This is a topic ' "apparent S3 methods" note in R CMD check '
>>>> from R-package-devel  
>>>> https://stat.ethz.ch/pipermail/r-package-devel/2015q2/000126.html
>>>> 
>>>> which is relevant to here because some of us have been thinking
>>>> about extending R  because of the issue.
>>>> 
>>>> John Fox, maintainer of the 'effects' package has enquired about
>>>> the following  output from  'R CMD check effects' 
>>>> 
>>>>> * checking S3 generic/method consistency ... NOTE
>>>>> Found the following apparent S3 methods exported but not registered:
>>>>> all.effects
>>>> 
>>>> and added
>>>> 
>>>>> The offending function, all.effects(), is deprecated in favour of
>>>>> allEffects(), but I'd rather not get rid of it for backwards compatibility.
>>>>> Is there any way to suppress the note without removing all.effects()? 
>>>> 
>>>> and I had agreed that this was a "False Positive" in this case.
>>>> 
>>>> [.......]
>>>> 
>>>> and then
>>>> 
>>>>> Now I agree .. and have e-talked about this with another R core
>>>>> member .. that it would be desirable for the package author to
>>>>> effectively declare the fact that such a function is not an S3
>>>>> method even though it "looks like it" at least if looked from far.
>>>> 
>>>>> So, ideally, you could have something like
>>>> 
>>>>> nonS3method("all.effects")
>>>> 
>>>>> somewhere in your package source ( in NAMESPACE or R/*.R )
>>>>> which would tell the package-checking code -- but *ALSO* all the other S3
>>>>> method code that  all.effects should be treated as a regular R
>>>>> function.
>>>> 
>>>>> I would very much like such a feature in R, and for that reason,
>>>>> I'm cross posting this (as one of the famous exceptions that
>>>>> accompany real-life rules!!) to R-devel.
>>>> 
>>>> and actually I did *not* cross post, but have now moved the
>>>> relevant part of the thread to  R-devel.
>>>> 
>> 
>>> It sounds like a good idea.  It's a nontrivial amount of work, because
>>> of the "all the other S3 method code" part.  There's the question of
>>> functions defined outside of packages:  presumably they are still S3
>>> methods, with no way to suppress that.
>> 
>> I am not sure this is the right solution: S3 dispatch will still occur
>> because we first look at foo.bar exports and then in the S3 registry,
>> afaicr (the "all the other S3 method code" part).
>> 
>> If we could move to only looking at the registry for dispatch, there
>> would be no need to declare situations where we should not dispatch on
>> foo.bar exports.
>> 

> I think that would break a lot of existing scripts.  I think the logic
> should be something like this.

> For each class in the class list:

> Search backwards through the environment chain.  If the current location
> is a package environment or namespace, look only in the registry.  If
> not, look at all functions.

> If that search failed, try the next class.

Yep---that's what I meant.  I forgot to write the "if namespace
semantics applies" part :-)

Best
-k

> A variation on the test is:  If there's a registry in the current
> location, look there.  But I think the registry is not on the search
> list, so I'm not sure that would work.

> This assumes that we keep separate registries in each package; if we
> merge them into one big registry, it gets harder.  I'm not familiar
> enough with the code to know which way we do it.

> Duncan Murdoch


From h.wickham at gmail.com  Fri Jun 12 16:53:20 2015
From: h.wickham at gmail.com (Hadley Wickham)
Date: Fri, 12 Jun 2015 09:53:20 -0500
Subject: [Rd] RFC: Declaring "foo.bar" as nonS3method() ?!
In-Reply-To: <21882.51223.144401.149543@fangorn.hornik.net>
References: <000e01d0a387$885ad130$99107390$@mcmaster.ca>
	<21882.36966.429889.227076@stat.math.ethz.ch>
	<21882.37975.726216.982364@stat.math.ethz.ch>
	<557ABD04.1040205@gmail.com>
	<21882.49031.599800.412740@fangorn.hornik.net>
	<557AC6FC.8060206@gmail.com>
	<21882.51223.144401.149543@fangorn.hornik.net>
Message-ID: <CABdHhvFTb=erfo6T+83pBqG5b0y0hQLgO3u=Ywh6F2WoZu8crw@mail.gmail.com>

To me, it seems like there's actually two problems here:

1) Preventing all() from dispatching to all.effects() for objects of
class effects
2) Eliminating the NOTE in R CMD check

My impression is that 1) actually causes few problems, particularly
since people are mostly now aware of the problem and avoid using `.`
in function names unless they're S3 methods. Fixing this issue seems
like it would be a lot of work for relatively little gain.

However, I think we want to prevent people from writing new functions
with this confusing naming scheme, but equally we want to grandfather
in existing functions, because renaming them all would be a lot of
work (I'm looking at you t.test()!).

Could we have a system similar to globalVariables() where you could
flag a function as definitely not being an S3 method? I'm not sure
what R CMD check should do - ideally you wouldn't be allow to use
method.class for new functions, but still be able suppress the note
for old functions that can't easily be changed.

Hadley

On Fri, Jun 12, 2015 at 6:52 AM, Kurt Hornik <Kurt.Hornik at wu.ac.at> wrote:
>>>>>> Duncan Murdoch writes:
>
>> On 12/06/2015 7:16 AM, Kurt Hornik wrote:
>>>>>>>> Duncan Murdoch writes:
>>>
>>>> On 12/06/2015 4:12 AM, Martin Maechler wrote:
>>>>> This is a topic ' "apparent S3 methods" note in R CMD check '
>>>>> from R-package-devel
>>>>> https://stat.ethz.ch/pipermail/r-package-devel/2015q2/000126.html
>>>>>
>>>>> which is relevant to here because some of us have been thinking
>>>>> about extending R  because of the issue.
>>>>>
>>>>> John Fox, maintainer of the 'effects' package has enquired about
>>>>> the following  output from  'R CMD check effects'
>>>>>
>>>>>> * checking S3 generic/method consistency ... NOTE
>>>>>> Found the following apparent S3 methods exported but not registered:
>>>>>> all.effects
>>>>>
>>>>> and added
>>>>>
>>>>>> The offending function, all.effects(), is deprecated in favour of
>>>>>> allEffects(), but I'd rather not get rid of it for backwards compatibility.
>>>>>> Is there any way to suppress the note without removing all.effects()?
>>>>>
>>>>> and I had agreed that this was a "False Positive" in this case.
>>>>>
>>>>> [.......]
>>>>>
>>>>> and then
>>>>>
>>>>>> Now I agree .. and have e-talked about this with another R core
>>>>>> member .. that it would be desirable for the package author to
>>>>>> effectively declare the fact that such a function is not an S3
>>>>>> method even though it "looks like it" at least if looked from far.
>>>>>
>>>>>> So, ideally, you could have something like
>>>>>
>>>>>> nonS3method("all.effects")
>>>>>
>>>>>> somewhere in your package source ( in NAMESPACE or R/*.R )
>>>>>> which would tell the package-checking code -- but *ALSO* all the other S3
>>>>>> method code that  all.effects should be treated as a regular R
>>>>>> function.
>>>>>
>>>>>> I would very much like such a feature in R, and for that reason,
>>>>>> I'm cross posting this (as one of the famous exceptions that
>>>>>> accompany real-life rules!!) to R-devel.
>>>>>
>>>>> and actually I did *not* cross post, but have now moved the
>>>>> relevant part of the thread to  R-devel.
>>>>>
>>>
>>>> It sounds like a good idea.  It's a nontrivial amount of work, because
>>>> of the "all the other S3 method code" part.  There's the question of
>>>> functions defined outside of packages:  presumably they are still S3
>>>> methods, with no way to suppress that.
>>>
>>> I am not sure this is the right solution: S3 dispatch will still occur
>>> because we first look at foo.bar exports and then in the S3 registry,
>>> afaicr (the "all the other S3 method code" part).
>>>
>>> If we could move to only looking at the registry for dispatch, there
>>> would be no need to declare situations where we should not dispatch on
>>> foo.bar exports.
>>>
>
>> I think that would break a lot of existing scripts.  I think the logic
>> should be something like this.
>
>> For each class in the class list:
>
>> Search backwards through the environment chain.  If the current location
>> is a package environment or namespace, look only in the registry.  If
>> not, look at all functions.
>
>> If that search failed, try the next class.
>
> Yep---that's what I meant.  I forgot to write the "if namespace
> semantics applies" part :-)
>
> Best
> -k
>
>> A variation on the test is:  If there's a registry in the current
>> location, look there.  But I think the registry is not on the search
>> list, so I'm not sure that would work.
>
>> This assumes that we keep separate registries in each package; if we
>> merge them into one big registry, it gets harder.  I'm not familiar
>> enough with the code to know which way we do it.
>
>> Duncan Murdoch
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel



-- 
http://had.co.nz/


From maechler at stat.math.ethz.ch  Fri Jun 12 17:09:32 2015
From: maechler at stat.math.ethz.ch (Martin Maechler)
Date: Fri, 12 Jun 2015 17:09:32 +0200
Subject: [Rd] RFC: Declaring "foo.bar" as nonS3method() ?!
In-Reply-To: <CABdHhvFTb=erfo6T+83pBqG5b0y0hQLgO3u=Ywh6F2WoZu8crw@mail.gmail.com>
References: <000e01d0a387$885ad130$99107390$@mcmaster.ca>
	<21882.36966.429889.227076@stat.math.ethz.ch>
	<21882.37975.726216.982364@stat.math.ethz.ch>
	<557ABD04.1040205@gmail.com>
	<21882.49031.599800.412740@fangorn.hornik.net>
	<557AC6FC.8060206@gmail.com>
	<21882.51223.144401.149543@fangorn.hornik.net>
	<CABdHhvFTb=erfo6T+83pBqG5b0y0hQLgO3u=Ywh6F2WoZu8crw@mail.gmail.com>
Message-ID: <21882.63020.988582.597510@stat.math.ethz.ch>

>>>>> Hadley Wickham <h.wickham at gmail.com>
>>>>>     on Fri, 12 Jun 2015 09:53:20 -0500 writes:

    > To me, it seems like there's actually two problems here:
    > 1) Preventing all() from dispatching to all.effects() for objects of
    > class effects
    > 2) Eliminating the NOTE in R CMD check

Sure.  ... and that what I said in my OP

    > My impression is that 1) actually causes few problems, particularly
    > since people are mostly now aware of the problem and avoid using `.`
    > in function names unless they're S3 methods. Fixing this issue seems
    > like it would be a lot of work for relatively little gain.

Well, we may disagree here.  I did mean to improve the system
"deep down", and Kurt and Duncan where basically also blowing
the same trumpet.

We are not re-inventing all the wheels on all the cars that have
been racing around - sometimes for decennia... and so some names
have been there for a long time and will remain.

    > However, I think we want to prevent people from writing new functions
    > with this confusing naming scheme, but equally we want to grandfather
    > in existing functions, because renaming them all would be a lot of
    > work (I'm looking at you t.test()!).

exactly.

    > Could we have a system similar to globalVariables() where you could
    > flag a function as definitely not being an S3 method? 

did you read what I wrote originally?  
Exactly that - with a working-proposition   
	nonS3method("<name>")

And BTW  ---- I'm diverting and I  seem to "preach" in vain
here, but in my view 

    globalVariables("xy") 

is really a very very poor "solution" and far from what one would desire: 
If you use it in your package, say because one function uses
non-standard evaluation and hence 'xy',
*all* erronous global uses of 'xy in all other functions in your
package will *not* be flagged by the nice codetools package
functionality which is behind that part of R CMD check.

Martin

    > I'm not sure what R CMD check should do - ideally you
    > wouldn't be allow to use method.class for new functions,
    > but still be able suppress the note for old functions that
    > can't easily be changed.


    > Hadley

    > On Fri, Jun 12, 2015 at 6:52 AM, Kurt Hornik <Kurt.Hornik at wu.ac.at> wrote:
    >>>>>>> Duncan Murdoch writes:
    >> 
    >>> On 12/06/2015 7:16 AM, Kurt Hornik wrote:
    >>>>>>>>> Duncan Murdoch writes:
    >>>> 
    >>>>> On 12/06/2015 4:12 AM, Martin Maechler wrote:
>>>>> This is a topic ' "apparent S3 methods" note in R CMD check '
>>>>> from R-package-devel
>>>>> https://stat.ethz.ch/pipermail/r-package-devel/2015q2/000126.html
    >>>>>> 
>>>>> which is relevant to here because some of us have been thinking
>>>>> about extending R  because of the issue.
    >>>>>> 
>>>>> John Fox, maintainer of the 'effects' package has enquired about
>>>>> the following  output from  'R CMD check effects'
    >>>>>> 
    >>>>>>> * checking S3 generic/method consistency ... NOTE
    >>>>>>> Found the following apparent S3 methods exported but not registered:
    >>>>>>> all.effects
    >>>>>> 
>>>>> and added
    >>>>>> 
    >>>>>>> The offending function, all.effects(), is deprecated in favour of
    >>>>>>> allEffects(), but I'd rather not get rid of it for backwards compatibility.
    >>>>>>> Is there any way to suppress the note without removing all.effects()?
    >>>>>> 
>>>>> and I had agreed that this was a "False Positive" in this case.
    >>>>>> 
>>>>> [.......]
    >>>>>> 
>>>>> and then
    >>>>>> 
    >>>>>>> Now I agree .. and have e-talked about this with another R core
    >>>>>>> member .. that it would be desirable for the package author to
    >>>>>>> effectively declare the fact that such a function is not an S3
    >>>>>>> method even though it "looks like it" at least if looked from far.
    >>>>>> 
    >>>>>>> So, ideally, you could have something like
    >>>>>> 
    >>>>>>> nonS3method("all.effects")
    >>>>>> 
    >>>>>>> somewhere in your package source ( in NAMESPACE or R/*.R )
    >>>>>>> which would tell the package-checking code -- but *ALSO* all the other S3
    >>>>>>> method code that  all.effects should be treated as a regular R
    >>>>>>> function.
    >>>>>> 
    >>>>>>> I would very much like such a feature in R, and for that reason,
    >>>>>>> I'm cross posting this (as one of the famous exceptions that
    >>>>>>> accompany real-life rules!!) to R-devel.
    >>>>>> 
>>>>> and actually I did *not* cross post, but have now moved the
>>>>> relevant part of the thread to  R-devel.
    >>>>>> 
    >>>> 
    >>>>> It sounds like a good idea.  It's a nontrivial amount of work, because
    >>>>> of the "all the other S3 method code" part.  There's the question of
    >>>>> functions defined outside of packages:  presumably they are still S3
    >>>>> methods, with no way to suppress that.
    >>>> 
    >>>> I am not sure this is the right solution: S3 dispatch will still occur
    >>>> because we first look at foo.bar exports and then in the S3 registry,
    >>>> afaicr (the "all the other S3 method code" part).
    >>>> 
    >>>> If we could move to only looking at the registry for dispatch, there
    >>>> would be no need to declare situations where we should not dispatch on
    >>>> foo.bar exports.
    >>>> 
    >> 
    >>> I think that would break a lot of existing scripts.  I think the logic
    >>> should be something like this.
    >> 
    >>> For each class in the class list:
    >> 
    >>> Search backwards through the environment chain.  If the current location
    >>> is a package environment or namespace, look only in the registry.  If
    >>> not, look at all functions.
    >> 
    >>> If that search failed, try the next class.
    >> 
    >> Yep---that's what I meant.  I forgot to write the "if namespace
    >> semantics applies" part :-)
    >> 
    >> Best
    >> -k
    >> 
    >>> A variation on the test is:  If there's a registry in the current
    >>> location, look there.  But I think the registry is not on the search
    >>> list, so I'm not sure that would work.
    >> 
    >>> This assumes that we keep separate registries in each package; if we
    >>> merge them into one big registry, it gets harder.  I'm not familiar
    >>> enough with the code to know which way we do it.
    >> 
    >>> Duncan Murdoch
    >> 
    >> ______________________________________________
    >> R-devel at r-project.org mailing list
    >> https://stat.ethz.ch/mailman/listinfo/r-devel



    > -- 
    > http://had.co.nz/


From murdoch.duncan at gmail.com  Fri Jun 12 17:12:39 2015
From: murdoch.duncan at gmail.com (Duncan Murdoch)
Date: Fri, 12 Jun 2015 11:12:39 -0400
Subject: [Rd] RFC: Declaring "foo.bar" as nonS3method() ?!
In-Reply-To: <CABdHhvFTb=erfo6T+83pBqG5b0y0hQLgO3u=Ywh6F2WoZu8crw@mail.gmail.com>
References: <000e01d0a387$885ad130$99107390$@mcmaster.ca>
	<21882.36966.429889.227076@stat.math.ethz.ch>
	<21882.37975.726216.982364@stat.math.ethz.ch>
	<557ABD04.1040205@gmail.com>
	<21882.49031.599800.412740@fangorn.hornik.net>
	<557AC6FC.8060206@gmail.com>
	<21882.51223.144401.149543@fangorn.hornik.net>
	<CABdHhvFTb=erfo6T+83pBqG5b0y0hQLgO3u=Ywh6F2WoZu8crw@mail.gmail.com>
Message-ID: <557AF6E7.2040805@gmail.com>

On 12/06/2015 10:53 AM, Hadley Wickham wrote:
> To me, it seems like there's actually two problems here:
> 
> 1) Preventing all() from dispatching to all.effects() for objects of
> class effects
> 2) Eliminating the NOTE in R CMD check
> 
> My impression is that 1) actually causes few problems, particularly
> since people are mostly now aware of the problem and avoid using `.`
> in function names unless they're S3 methods. Fixing this issue seems
> like it would be a lot of work for relatively little gain.
> 
> However, I think we want to prevent people from writing new functions
> with this confusing naming scheme, but equally we want to grandfather
> in existing functions, because renaming them all would be a lot of
> work (I'm looking at you t.test()!).
> 
> Could we have a system similar to globalVariables() where you could
> flag a function as definitely not being an S3 method? I'm not sure
> what R CMD check should do - ideally you wouldn't be allow to use
> method.class for new functions, but still be able suppress the note
> for old functions that can't easily be changed.

We have a mechanism for suppressing the warning for existing functions,
it's just not available to users to modify.  So it would be possible to
add effects::all.effects to the stop list, and this might be the easiest
action here.

This isn't perfect because all.effects() would still act as a method.
However,  it does give the deprecated message if you ever call it, so
nobody would do this unknowingly.  The only real risk is that if anyone
ever wrote an all.effects function that *was* supposed to be an S3
method, it might be masked by the one in effects.

Duncan Murdoch

> 
> Hadley
> 
> On Fri, Jun 12, 2015 at 6:52 AM, Kurt Hornik <Kurt.Hornik at wu.ac.at> wrote:
>>>>>>> Duncan Murdoch writes:
>>
>>> On 12/06/2015 7:16 AM, Kurt Hornik wrote:
>>>>>>>>> Duncan Murdoch writes:
>>>>
>>>>> On 12/06/2015 4:12 AM, Martin Maechler wrote:
>>>>>> This is a topic ' "apparent S3 methods" note in R CMD check '
>>>>>> from R-package-devel
>>>>>> https://stat.ethz.ch/pipermail/r-package-devel/2015q2/000126.html
>>>>>>
>>>>>> which is relevant to here because some of us have been thinking
>>>>>> about extending R  because of the issue.
>>>>>>
>>>>>> John Fox, maintainer of the 'effects' package has enquired about
>>>>>> the following  output from  'R CMD check effects'
>>>>>>
>>>>>>> * checking S3 generic/method consistency ... NOTE
>>>>>>> Found the following apparent S3 methods exported but not registered:
>>>>>>> all.effects
>>>>>>
>>>>>> and added
>>>>>>
>>>>>>> The offending function, all.effects(), is deprecated in favour of
>>>>>>> allEffects(), but I'd rather not get rid of it for backwards compatibility.
>>>>>>> Is there any way to suppress the note without removing all.effects()?
>>>>>>
>>>>>> and I had agreed that this was a "False Positive" in this case.
>>>>>>
>>>>>> [.......]
>>>>>>
>>>>>> and then
>>>>>>
>>>>>>> Now I agree .. and have e-talked about this with another R core
>>>>>>> member .. that it would be desirable for the package author to
>>>>>>> effectively declare the fact that such a function is not an S3
>>>>>>> method even though it "looks like it" at least if looked from far.
>>>>>>
>>>>>>> So, ideally, you could have something like
>>>>>>
>>>>>>> nonS3method("all.effects")
>>>>>>
>>>>>>> somewhere in your package source ( in NAMESPACE or R/*.R )
>>>>>>> which would tell the package-checking code -- but *ALSO* all the other S3
>>>>>>> method code that  all.effects should be treated as a regular R
>>>>>>> function.
>>>>>>
>>>>>>> I would very much like such a feature in R, and for that reason,
>>>>>>> I'm cross posting this (as one of the famous exceptions that
>>>>>>> accompany real-life rules!!) to R-devel.
>>>>>>
>>>>>> and actually I did *not* cross post, but have now moved the
>>>>>> relevant part of the thread to  R-devel.
>>>>>>
>>>>
>>>>> It sounds like a good idea.  It's a nontrivial amount of work, because
>>>>> of the "all the other S3 method code" part.  There's the question of
>>>>> functions defined outside of packages:  presumably they are still S3
>>>>> methods, with no way to suppress that.
>>>>
>>>> I am not sure this is the right solution: S3 dispatch will still occur
>>>> because we first look at foo.bar exports and then in the S3 registry,
>>>> afaicr (the "all the other S3 method code" part).
>>>>
>>>> If we could move to only looking at the registry for dispatch, there
>>>> would be no need to declare situations where we should not dispatch on
>>>> foo.bar exports.
>>>>
>>
>>> I think that would break a lot of existing scripts.  I think the logic
>>> should be something like this.
>>
>>> For each class in the class list:
>>
>>> Search backwards through the environment chain.  If the current location
>>> is a package environment or namespace, look only in the registry.  If
>>> not, look at all functions.
>>
>>> If that search failed, try the next class.
>>
>> Yep---that's what I meant.  I forgot to write the "if namespace
>> semantics applies" part :-)
>>
>> Best
>> -k
>>
>>> A variation on the test is:  If there's a registry in the current
>>> location, look there.  But I think the registry is not on the search
>>> list, so I'm not sure that would work.
>>
>>> This assumes that we keep separate registries in each package; if we
>>> merge them into one big registry, it gets harder.  I'm not familiar
>>> enough with the code to know which way we do it.
>>
>>> Duncan Murdoch
>>
>> ______________________________________________
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel
> 
> 
>


From luke-tierney at uiowa.edu  Fri Jun 12 17:30:29 2015
From: luke-tierney at uiowa.edu (luke-tierney at uiowa.edu)
Date: Fri, 12 Jun 2015 10:30:29 -0500
Subject: [Rd] RFC: Declaring "foo.bar" as nonS3method() ?!
In-Reply-To: <557AF6E7.2040805@gmail.com>
References: <000e01d0a387$885ad130$99107390$@mcmaster.ca>
	<21882.36966.429889.227076@stat.math.ethz.ch>
	<21882.37975.726216.982364@stat.math.ethz.ch>
	<557ABD04.1040205@gmail.com>
	<21882.49031.599800.412740@fangorn.hornik.net>
	<557AC6FC.8060206@gmail.com>
	<21882.51223.144401.149543@fangorn.hornik.net>
	<CABdHhvFTb=erfo6T+83pBqG5b0y0hQLgO3u=Ywh6F2WoZu8crw@mail.gmail.com>
	<557AF6E7.2040805@gmail.com>
Message-ID: <alpine.LFD.2.11.1506121023390.1461@itasca.stat.uiowa.edu>

The notes available off the devloper page
https://developer.r-project.org/ describe some of the rationale for
the S3 method search design. One thing that has changed since then is
that all packages now have name spaces. We could change the search
algorithm to skip attached package exports (and package imports and
base), which would require methods defined in packages that are to be
accessible outside the package to be declared.  Methods defined inside
a package for internal use or methods defined in scripts not in
packages would still be found. Packages not currently registering
their methods would have to do so -- not sure how many that would
affect. Testing on CRAN/Bioc should show how much of an effect this
would have and whether there are any other issues.

Best,

luke

On Fri, 12 Jun 2015, Duncan Murdoch wrote:

> On 12/06/2015 10:53 AM, Hadley Wickham wrote:
>> To me, it seems like there's actually two problems here:
>>
>> 1) Preventing all() from dispatching to all.effects() for objects of
>> class effects
>> 2) Eliminating the NOTE in R CMD check
>>
>> My impression is that 1) actually causes few problems, particularly
>> since people are mostly now aware of the problem and avoid using `.`
>> in function names unless they're S3 methods. Fixing this issue seems
>> like it would be a lot of work for relatively little gain.
>>
>> However, I think we want to prevent people from writing new functions
>> with this confusing naming scheme, but equally we want to grandfather
>> in existing functions, because renaming them all would be a lot of
>> work (I'm looking at you t.test()!).
>>
>> Could we have a system similar to globalVariables() where you could
>> flag a function as definitely not being an S3 method? I'm not sure
>> what R CMD check should do - ideally you wouldn't be allow to use
>> method.class for new functions, but still be able suppress the note
>> for old functions that can't easily be changed.
>
> We have a mechanism for suppressing the warning for existing functions,
> it's just not available to users to modify.  So it would be possible to
> add effects::all.effects to the stop list, and this might be the easiest
> action here.
>
> This isn't perfect because all.effects() would still act as a method.
> However,  it does give the deprecated message if you ever call it, so
> nobody would do this unknowingly.  The only real risk is that if anyone
> ever wrote an all.effects function that *was* supposed to be an S3
> method, it might be masked by the one in effects.
>
> Duncan Murdoch
>
>>
>> Hadley
>>
>> On Fri, Jun 12, 2015 at 6:52 AM, Kurt Hornik <Kurt.Hornik at wu.ac.at> wrote:
>>>>>>>> Duncan Murdoch writes:
>>>
>>>> On 12/06/2015 7:16 AM, Kurt Hornik wrote:
>>>>>>>>>> Duncan Murdoch writes:
>>>>>
>>>>>> On 12/06/2015 4:12 AM, Martin Maechler wrote:
>>>>>>> This is a topic ' "apparent S3 methods" note in R CMD check '
>>>>>>> from R-package-devel
>>>>>>> https://stat.ethz.ch/pipermail/r-package-devel/2015q2/000126.html
>>>>>>>
>>>>>>> which is relevant to here because some of us have been thinking
>>>>>>> about extending R  because of the issue.
>>>>>>>
>>>>>>> John Fox, maintainer of the 'effects' package has enquired about
>>>>>>> the following  output from  'R CMD check effects'
>>>>>>>
>>>>>>>> * checking S3 generic/method consistency ... NOTE
>>>>>>>> Found the following apparent S3 methods exported but not registered:
>>>>>>>> all.effects
>>>>>>>
>>>>>>> and added
>>>>>>>
>>>>>>>> The offending function, all.effects(), is deprecated in favour of
>>>>>>>> allEffects(), but I'd rather not get rid of it for backwards compatibility.
>>>>>>>> Is there any way to suppress the note without removing all.effects()?
>>>>>>>
>>>>>>> and I had agreed that this was a "False Positive" in this case.
>>>>>>>
>>>>>>> [.......]
>>>>>>>
>>>>>>> and then
>>>>>>>
>>>>>>>> Now I agree .. and have e-talked about this with another R core
>>>>>>>> member .. that it would be desirable for the package author to
>>>>>>>> effectively declare the fact that such a function is not an S3
>>>>>>>> method even though it "looks like it" at least if looked from far.
>>>>>>>
>>>>>>>> So, ideally, you could have something like
>>>>>>>
>>>>>>>> nonS3method("all.effects")
>>>>>>>
>>>>>>>> somewhere in your package source ( in NAMESPACE or R/*.R )
>>>>>>>> which would tell the package-checking code -- but *ALSO* all the other S3
>>>>>>>> method code that  all.effects should be treated as a regular R
>>>>>>>> function.
>>>>>>>
>>>>>>>> I would very much like such a feature in R, and for that reason,
>>>>>>>> I'm cross posting this (as one of the famous exceptions that
>>>>>>>> accompany real-life rules!!) to R-devel.
>>>>>>>
>>>>>>> and actually I did *not* cross post, but have now moved the
>>>>>>> relevant part of the thread to  R-devel.
>>>>>>>
>>>>>
>>>>>> It sounds like a good idea.  It's a nontrivial amount of work, because
>>>>>> of the "all the other S3 method code" part.  There's the question of
>>>>>> functions defined outside of packages:  presumably they are still S3
>>>>>> methods, with no way to suppress that.
>>>>>
>>>>> I am not sure this is the right solution: S3 dispatch will still occur
>>>>> because we first look at foo.bar exports and then in the S3 registry,
>>>>> afaicr (the "all the other S3 method code" part).
>>>>>
>>>>> If we could move to only looking at the registry for dispatch, there
>>>>> would be no need to declare situations where we should not dispatch on
>>>>> foo.bar exports.
>>>>>
>>>
>>>> I think that would break a lot of existing scripts.  I think the logic
>>>> should be something like this.
>>>
>>>> For each class in the class list:
>>>
>>>> Search backwards through the environment chain.  If the current location
>>>> is a package environment or namespace, look only in the registry.  If
>>>> not, look at all functions.
>>>
>>>> If that search failed, try the next class.
>>>
>>> Yep---that's what I meant.  I forgot to write the "if namespace
>>> semantics applies" part :-)
>>>
>>> Best
>>> -k
>>>
>>>> A variation on the test is:  If there's a registry in the current
>>>> location, look there.  But I think the registry is not on the search
>>>> list, so I'm not sure that would work.
>>>
>>>> This assumes that we keep separate registries in each package; if we
>>>> merge them into one big registry, it gets harder.  I'm not familiar
>>>> enough with the code to know which way we do it.
>>>
>>>> Duncan Murdoch
>>>
>>> ______________________________________________
>>> R-devel at r-project.org mailing list
>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>
>>
>>
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>

-- 
Luke Tierney
Ralph E. Wareham Professor of Mathematical Sciences
University of Iowa                  Phone:             319-335-3386
Department of Statistics and        Fax:               319-335-3017
    Actuarial Science
241 Schaeffer Hall                  email:   luke-tierney at uiowa.edu
Iowa City, IA 52242                 WWW:  http://www.stat.uiowa.edu


From skyebend at skyeome.net  Fri Jun 12 18:35:19 2015
From: skyebend at skyeome.net (Skye Bender-deMoll)
Date: Fri, 12 Jun 2015 09:35:19 -0700
Subject: [Rd] declaring nonS3method
Message-ID: <557B0A47.1070402@skyeome.net>

If Martin's proposal for declaring non-S3 methods in NAMESPACE is
feasible, it would be very helpful.  The packages we support have
multiple examples of unfortunately named functions non-S3 functions, so
creating a route for migrating them into compliance would be great.

best,
   -skye

On 06/12/2015 03:00 AM, r-package-devel-request at r-project.org wrote:
 > Message: 11
 > Date: Fri, 12 Jun 2015 09:55:18 +0200
 > From: Martin Maechler<maechler at stat.math.ethz.ch>
 > To: John Fox<jfox at mcmaster.ca>
 > Cc: Michael Friendly<friendly at yorku.ca>, Sandy Weisberg
 > 	<sandy at umn.edu>,	r-package-devel at r-project.org
 > Subject: Re: [R-pkg-devel] "apparent S3 methods" note in R CMD check
 > Message-ID:<21882.36966.429889.227076 at stat.math.ethz.ch>
 > Content-Type: text/plain; charset="us-ascii"

<snip>

 >  that it would be desirable for the package author to
 > effectively declare the fact that such a function is not an S3
 > method even though it "looks like it" at least if looked from far.
 >
 > So, ideally, you could have something like
 >
 >   nonS3method("all.effects")
 >
 > somewhere in your package source ( in NAMESPACE or R/*.R )
 > which would tell the package-checking code -- but*ALSO*  all the other S3
 > method code that  all.effects should be treated as a regular R
 > function.


From simon.urbanek at r-project.org  Fri Jun 12 21:16:09 2015
From: simon.urbanek at r-project.org (Simon Urbanek)
Date: Fri, 12 Jun 2015 15:16:09 -0400
Subject: [Rd] CRAN testing
In-Reply-To: <557A6D28.7070309@oracle.com>
References: <557A6D28.7070309@oracle.com>
Message-ID: <9FDF7D4D-6266-44D0-8047-870AF5F748A6@r-project.org>


> On Jun 12, 2015, at 1:24 AM, Mick Jordan <mick.jordan at oracle.com> wrote:
> 
> Is the mechanism by which packages are tested on CRAN described 
> anywhere? Is it by any chance written in R? The FastR 
> <https://bitbucket.org/allr/fastr/wiki/Home> team is interested in 
> running a virtual CRAN where we can test all the CRAN packages on FastR.
> 


Well, that?s what R CMD check is for - since it?s just R code (all the check shell script does is to call tools:::.check_packages()) your FastR should be able to run it as long as it?s compatible with R ?

Cheers,
Simon


From henrik.bengtsson at ucsf.edu  Fri Jun 12 21:18:59 2015
From: henrik.bengtsson at ucsf.edu (Henrik Bengtsson)
Date: Fri, 12 Jun 2015 12:18:59 -0700
Subject: [Rd] RFC: Declaring "foo.bar" as nonS3method() ?!
In-Reply-To: <alpine.LFD.2.11.1506121023390.1461@itasca.stat.uiowa.edu>
References: <000e01d0a387$885ad130$99107390$@mcmaster.ca>
	<21882.36966.429889.227076@stat.math.ethz.ch>
	<21882.37975.726216.982364@stat.math.ethz.ch>
	<557ABD04.1040205@gmail.com>
	<21882.49031.599800.412740@fangorn.hornik.net>
	<557AC6FC.8060206@gmail.com>
	<21882.51223.144401.149543@fangorn.hornik.net>
	<CABdHhvFTb=erfo6T+83pBqG5b0y0hQLgO3u=Ywh6F2WoZu8crw@mail.gmail.com>
	<557AF6E7.2040805@gmail.com>
	<alpine.LFD.2.11.1506121023390.1461@itasca.stat.uiowa.edu>
Message-ID: <CAFDcVCR=UE_-q4ARR-5GnTR54TWWQV6H93i8d_37B4NpowPs4A@mail.gmail.com>

Analogously to how S4 methods are declared in the code, cf.
methods::setMethod(), I'd find it more natural to also declare S3
methods in the code and note in the NAMESPACE.  For example:

# S3 method summary() for class 'aov':

summary.aov <- function(x, ...) {
  # something
}
S3class(summary.aov) <- "aov"

with

`S3class<-` <- function(x, value) {
  attr(x, "S3class") <- value
  x
}

For backward compatibility, if 'S3class' is not set, the default
could/should be to infer it using the current strategy, i.e. the part
after the last period/dot plus other bells'n'whistles discussed.  If
all S3 methods had attribute 'S3class' set, there would be no need to
declare the non-S3 case.

Finally, to explicitly declare a function _not_ to be a S3 method, one
could allow for

S3class(all.effects) <- FALSE


At this point, I need  to bring up the wish of have a core R function,
again cf. setMethod(), doing the above for us, e.g.

setMethodS3("summary", "aov", function(x, ...) {
  # something
})

It can be extremely light weight and would resemble what setMethod()
does for S4 methods.

Also, with the 'S3class' attribute set, one could imagine not having
to declare them as S3method("summary", "aov") in the NAMESPACE.  This
could be fully automatic (and backward compatible for migration).
Absolutely not a rant, but from a developers point of view I always
found it a bit ad hoc to have to declare S3 methods in the NAMESPACE
rather than in the code.  We're not doing it for S4 methods, so why
for S3 ones? (BTW, I think I understand why).  For the same reason,
I'd would think adding NAMESPACE declaration nonS3method() would just
add another workaround.

The above would be backward compatible, allow for a long-term
migration, while allowing folks to use periods/dots however they wish.
It would also allow code inspections such as 'R CMD check --as-cran'
to avoid false positives.

/Henrik


On Fri, Jun 12, 2015 at 8:30 AM,  <luke-tierney at uiowa.edu> wrote:
> The notes available off the devloper page
> https://developer.r-project.org/ describe some of the rationale for
> the S3 method search design. One thing that has changed since then is
> that all packages now have name spaces. We could change the search
> algorithm to skip attached package exports (and package imports and
> base), which would require methods defined in packages that are to be
> accessible outside the package to be declared.  Methods defined inside
> a package for internal use or methods defined in scripts not in
> packages would still be found. Packages not currently registering
> their methods would have to do so -- not sure how many that would
> affect. Testing on CRAN/Bioc should show how much of an effect this
> would have and whether there are any other issues.
>
> Best,
>
> luke
>
>
> On Fri, 12 Jun 2015, Duncan Murdoch wrote:
>
>> On 12/06/2015 10:53 AM, Hadley Wickham wrote:
>>>
>>> To me, it seems like there's actually two problems here:
>>>
>>> 1) Preventing all() from dispatching to all.effects() for objects of
>>> class effects
>>> 2) Eliminating the NOTE in R CMD check
>>>
>>> My impression is that 1) actually causes few problems, particularly
>>> since people are mostly now aware of the problem and avoid using `.`
>>> in function names unless they're S3 methods. Fixing this issue seems
>>> like it would be a lot of work for relatively little gain.
>>>
>>> However, I think we want to prevent people from writing new functions
>>> with this confusing naming scheme, but equally we want to grandfather
>>> in existing functions, because renaming them all would be a lot of
>>> work (I'm looking at you t.test()!).
>>>
>>> Could we have a system similar to globalVariables() where you could
>>> flag a function as definitely not being an S3 method? I'm not sure
>>> what R CMD check should do - ideally you wouldn't be allow to use
>>> method.class for new functions, but still be able suppress the note
>>> for old functions that can't easily be changed.
>>
>>
>> We have a mechanism for suppressing the warning for existing functions,
>> it's just not available to users to modify.  So it would be possible to
>> add effects::all.effects to the stop list, and this might be the easiest
>> action here.
>>
>> This isn't perfect because all.effects() would still act as a method.
>> However,  it does give the deprecated message if you ever call it, so
>> nobody would do this unknowingly.  The only real risk is that if anyone
>> ever wrote an all.effects function that *was* supposed to be an S3
>> method, it might be masked by the one in effects.
>>
>> Duncan Murdoch
>>
>>>
>>> Hadley
>>>
>>> On Fri, Jun 12, 2015 at 6:52 AM, Kurt Hornik <Kurt.Hornik at wu.ac.at>
>>> wrote:
>>>>>>>>>
>>>>>>>>> Duncan Murdoch writes:
>>>>
>>>>
>>>>> On 12/06/2015 7:16 AM, Kurt Hornik wrote:
>>>>>>>>>>>
>>>>>>>>>>> Duncan Murdoch writes:
>>>>>>
>>>>>>
>>>>>>> On 12/06/2015 4:12 AM, Martin Maechler wrote:
>>>>>>>>
>>>>>>>> This is a topic ' "apparent S3 methods" note in R CMD check '
>>>>>>>> from R-package-devel
>>>>>>>> https://stat.ethz.ch/pipermail/r-package-devel/2015q2/000126.html
>>>>>>>>
>>>>>>>> which is relevant to here because some of us have been thinking
>>>>>>>> about extending R  because of the issue.
>>>>>>>>
>>>>>>>> John Fox, maintainer of the 'effects' package has enquired about
>>>>>>>> the following  output from  'R CMD check effects'
>>>>>>>>
>>>>>>>>> * checking S3 generic/method consistency ... NOTE
>>>>>>>>> Found the following apparent S3 methods exported but not
>>>>>>>>> registered:
>>>>>>>>> all.effects
>>>>>>>>
>>>>>>>>
>>>>>>>> and added
>>>>>>>>
>>>>>>>>> The offending function, all.effects(), is deprecated in favour of
>>>>>>>>> allEffects(), but I'd rather not get rid of it for backwards
>>>>>>>>> compatibility.
>>>>>>>>> Is there any way to suppress the note without removing
>>>>>>>>> all.effects()?
>>>>>>>>
>>>>>>>>
>>>>>>>> and I had agreed that this was a "False Positive" in this case.
>>>>>>>>
>>>>>>>> [.......]
>>>>>>>>
>>>>>>>> and then
>>>>>>>>
>>>>>>>>> Now I agree .. and have e-talked about this with another R core
>>>>>>>>> member .. that it would be desirable for the package author to
>>>>>>>>> effectively declare the fact that such a function is not an S3
>>>>>>>>> method even though it "looks like it" at least if looked from far.
>>>>>>>>
>>>>>>>>
>>>>>>>>> So, ideally, you could have something like
>>>>>>>>
>>>>>>>>
>>>>>>>>> nonS3method("all.effects")
>>>>>>>>
>>>>>>>>
>>>>>>>>> somewhere in your package source ( in NAMESPACE or R/*.R )
>>>>>>>>> which would tell the package-checking code -- but *ALSO* all the
>>>>>>>>> other S3
>>>>>>>>> method code that  all.effects should be treated as a regular R
>>>>>>>>> function.
>>>>>>>>
>>>>>>>>
>>>>>>>>> I would very much like such a feature in R, and for that reason,
>>>>>>>>> I'm cross posting this (as one of the famous exceptions that
>>>>>>>>> accompany real-life rules!!) to R-devel.
>>>>>>>>
>>>>>>>>
>>>>>>>> and actually I did *not* cross post, but have now moved the
>>>>>>>> relevant part of the thread to  R-devel.
>>>>>>>>
>>>>>>
>>>>>>> It sounds like a good idea.  It's a nontrivial amount of work,
>>>>>>> because
>>>>>>> of the "all the other S3 method code" part.  There's the question of
>>>>>>> functions defined outside of packages:  presumably they are still S3
>>>>>>> methods, with no way to suppress that.
>>>>>>
>>>>>>
>>>>>> I am not sure this is the right solution: S3 dispatch will still occur
>>>>>> because we first look at foo.bar exports and then in the S3 registry,
>>>>>> afaicr (the "all the other S3 method code" part).
>>>>>>
>>>>>> If we could move to only looking at the registry for dispatch, there
>>>>>> would be no need to declare situations where we should not dispatch on
>>>>>> foo.bar exports.
>>>>>>
>>>>
>>>>> I think that would break a lot of existing scripts.  I think the logic
>>>>> should be something like this.
>>>>
>>>>
>>>>> For each class in the class list:
>>>>
>>>>
>>>>> Search backwards through the environment chain.  If the current
>>>>> location
>>>>> is a package environment or namespace, look only in the registry.  If
>>>>> not, look at all functions.
>>>>
>>>>
>>>>> If that search failed, try the next class.
>>>>
>>>>
>>>> Yep---that's what I meant.  I forgot to write the "if namespace
>>>> semantics applies" part :-)
>>>>
>>>> Best
>>>> -k
>>>>
>>>>> A variation on the test is:  If there's a registry in the current
>>>>> location, look there.  But I think the registry is not on the search
>>>>> list, so I'm not sure that would work.
>>>>
>>>>
>>>>> This assumes that we keep separate registries in each package; if we
>>>>> merge them into one big registry, it gets harder.  I'm not familiar
>>>>> enough with the code to know which way we do it.
>>>>
>>>>
>>>>> Duncan Murdoch
>>>>
>>>>
>>>> ______________________________________________
>>>> R-devel at r-project.org mailing list
>>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>>
>>>
>>>
>>>
>>
>> ______________________________________________
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>
>
> --
> Luke Tierney
> Ralph E. Wareham Professor of Mathematical Sciences
> University of Iowa                  Phone:             319-335-3386
> Department of Statistics and        Fax:               319-335-3017
>    Actuarial Science
> 241 Schaeffer Hall                  email:   luke-tierney at uiowa.edu
> Iowa City, IA 52242                 WWW:  http://www.stat.uiowa.edu
>
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From csardi.gabor at gmail.com  Fri Jun 12 21:33:59 2015
From: csardi.gabor at gmail.com (=?UTF-8?B?R8OhYm9yIENzw6FyZGk=?=)
Date: Fri, 12 Jun 2015 15:33:59 -0400
Subject: [Rd] CRAN testing
In-Reply-To: <557A6D28.7070309@oracle.com>
References: <557A6D28.7070309@oracle.com>
Message-ID: <CABtg=KkYhY5iV1gsQ4FCgE35q0VYWdUaORjiWqRfyOCMASUHDA@mail.gmail.com>

Some (unofficial) tips.

Some of the hardware and software they use is listed here:
http://cran.r-project.org/web/checks/check_flavors.html#r-devel-linux-x86_64-debian-clang

You can get the current R-release and R-oldrel versions from here:
http://rversions.r-pkg.org/r-release
http://rversions.r-pkg.org/r-oldrel

The environment variables they use for the checks are listed here:
http://cran.r-project.org/doc/manuals/r-release/R-ints.html#Tools

The win-builder page also has some hints about what is installed on
the windows test machines:
http://win-builder.r-project.org/

I hope this is useful. I would interested to hear about the progress
of this project, if you don't mind. So if you have an open repo or web
page, please let me know. Thanks.

Gabor

On Fri, Jun 12, 2015 at 1:24 AM, Mick Jordan <mick.jordan at oracle.com> wrote:
> Is the mechanism by which packages are tested on CRAN described
> anywhere? Is it by any chance written in R? The FastR
> <https://bitbucket.org/allr/fastr/wiki/Home> team is interested in
> running a virtual CRAN where we can test all the CRAN packages on FastR.
>
> Thanks
> Mick Jordan
>
>
>         [[alternative HTML version deleted]]
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From jeroenooms at gmail.com  Fri Jun 12 22:16:55 2015
From: jeroenooms at gmail.com (Jeroen Ooms)
Date: Fri, 12 Jun 2015 22:16:55 +0200
Subject: [Rd] CRAN testing
In-Reply-To: <557A6D28.7070309@oracle.com>
References: <557A6D28.7070309@oracle.com>
Message-ID: <CABFfbXvWsCZK3fdq0nxMtwTobh_HGWAMv+O2kggCCBPjPurQxQ@mail.gmail.com>

In addition to what has been said already, you should check C code for
-pedantic compiler warnings (in particular GNU extensions) and verify
that the package builds with parallel make (e.g. MAKE=make -j8).




On Fri, Jun 12, 2015 at 7:24 AM, Mick Jordan <mick.jordan at oracle.com> wrote:
>
> Is the mechanism by which packages are tested on CRAN described
> anywhere? Is it by any chance written in R? The FastR
> <https://bitbucket.org/allr/fastr/wiki/Home> team is interested in
> running a virtual CRAN where we can test all the CRAN packages on FastR.
>
> Thanks
> Mick Jordan
>
>
>         [[alternative HTML version deleted]]
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From maechler at stat.math.ethz.ch  Sat Jun 13 13:35:41 2015
From: maechler at stat.math.ethz.ch (Martin Maechler)
Date: Sat, 13 Jun 2015 13:35:41 +0200
Subject: [Rd] RFC: Declaring "foo.bar" as nonS3method() ?!
In-Reply-To: <alpine.LFD.2.11.1506121023390.1461@itasca.stat.uiowa.edu>
References: <000e01d0a387$885ad130$99107390$@mcmaster.ca>
	<21882.36966.429889.227076@stat.math.ethz.ch>
	<21882.37975.726216.982364@stat.math.ethz.ch>
	<557ABD04.1040205@gmail.com>
	<21882.49031.599800.412740@fangorn.hornik.net>
	<557AC6FC.8060206@gmail.com>
	<21882.51223.144401.149543@fangorn.hornik.net>
	<CABdHhvFTb=erfo6T+83pBqG5b0y0hQLgO3u=Ywh6F2WoZu8crw@mail.gmail.com>
	<557AF6E7.2040805@gmail.com>
	<alpine.LFD.2.11.1506121023390.1461@itasca.stat.uiowa.edu>
Message-ID: <21884.5517.93162.167363@stat.math.ethz.ch>

>>>>> Luke Tierney <luke-tierney at uiowa.edu>
>>>>>     on Fri, 12 Jun 2015 10:30:29 -0500 writes:

    > The notes available off the devloper page
    > https://developer.r-project.org/ describe some of the rationale for
    > the S3 method search design. One thing that has changed since then is
    > that all packages now have name spaces. We could change the search
    > algorithm to skip attached package exports (and package imports and
    > base), which would require methods defined in packages that are to be
    > accessible outside the package to be declared.  Methods defined inside
    > a package for internal use or methods defined in scripts not in
    > packages would still be found. Packages not currently registering
    > their methods would have to do so -- not sure how many that would
    > affect. Testing on CRAN/Bioc should show how much of an effect this
    > would have and whether there are any other issues.

    > Best,
    > luke

Thanks a lot Luke, for the extra perspective.  
I think the four R core commenters here (Duncan, Kurt, Luke and
me) agree that this is not trivial to implement, but hopefully
not too hard either, and I think we also +- agree that it seems
desirable to try adding a bit more flexibility in how functions
are "made into" S3 methods. 

I had not envisaged to change the S3 method search
algorithm but rather to tweak part of it "database" but am aware
that I don't know enough of the details.
Also, I did not find which notes (from developer.r-project.org)
you were refering to.

Given the broad agreement that we want to start working /
investigating this,  we can well close the thread here for now
(and deal with ideas, issues, details within R-core).

Martin

    > On Fri, 12 Jun 2015, Duncan Murdoch wrote:

    >> On 12/06/2015 10:53 AM, Hadley Wickham wrote:
    >>> To me, it seems like there's actually two problems here:
    >>> 
    >>> 1) Preventing all() from dispatching to all.effects() for objects of
    >>> class effects
    >>> 2) Eliminating the NOTE in R CMD check
    >>> 
    >>> My impression is that 1) actually causes few problems, particularly
    >>> since people are mostly now aware of the problem and avoid using `.`
    >>> in function names unless they're S3 methods. Fixing this issue seems
    >>> like it would be a lot of work for relatively little gain.
    >>> 
    >>> However, I think we want to prevent people from writing new functions
    >>> with this confusing naming scheme, but equally we want to grandfather
    >>> in existing functions, because renaming them all would be a lot of
    >>> work (I'm looking at you t.test()!).
    >>> 
    >>> Could we have a system similar to globalVariables() where you could
    >>> flag a function as definitely not being an S3 method? I'm not sure
    >>> what R CMD check should do - ideally you wouldn't be allow to use
    >>> method.class for new functions, but still be able suppress the note
    >>> for old functions that can't easily be changed.
    >> 
    >> We have a mechanism for suppressing the warning for existing functions,
    >> it's just not available to users to modify.  So it would be possible to
    >> add effects::all.effects to the stop list, and this might be the easiest
    >> action here.
    >> 
    >> This isn't perfect because all.effects() would still act as a method.
    >> However,  it does give the deprecated message if you ever call it, so
    >> nobody would do this unknowingly.  The only real risk is that if anyone
    >> ever wrote an all.effects function that *was* supposed to be an S3
    >> method, it might be masked by the one in effects.
    >> 
    >> Duncan Murdoch
    >> 
    >>> 
    >>> Hadley
    >>> 
    >>> On Fri, Jun 12, 2015 at 6:52 AM, Kurt Hornik <Kurt.Hornik at wu.ac.at> wrote:
    >>>>>>>>> Duncan Murdoch writes:
    >>>> 
    >>>>> On 12/06/2015 7:16 AM, Kurt Hornik wrote:
    >>>>>>>>>>> Duncan Murdoch writes:
    >>>>>> 
    >>>>>>> On 12/06/2015 4:12 AM, Martin Maechler wrote:
    >>>>>>>> This is a topic ' "apparent S3 methods" note in R CMD check '
    >>>>>>>> from R-package-devel
    >>>>>>>> https://stat.ethz.ch/pipermail/r-package-devel/2015q2/000126.html
    >>>>>>>> 
    >>>>>>>> which is relevant to here because some of us have been thinking
    >>>>>>>> about extending R  because of the issue.
    >>>>>>>> 
    >>>>>>>> John Fox, maintainer of the 'effects' package has enquired about
    >>>>>>>> the following  output from  'R CMD check effects'
    >>>>>>>> 
    >>>>>>>>> * checking S3 generic/method consistency ... NOTE
    >>>>>>>>> Found the following apparent S3 methods exported but not registered:
    >>>>>>>>> all.effects
    >>>>>>>> 
    >>>>>>>> and added
    >>>>>>>> 
    >>>>>>>>> The offending function, all.effects(), is deprecated in favour of
    >>>>>>>>> allEffects(), but I'd rather not get rid of it for backwards compatibility.
    >>>>>>>>> Is there any way to suppress the note without removing all.effects()?
    >>>>>>>> 
    >>>>>>>> and I had agreed that this was a "False Positive" in this case.
    >>>>>>>> 
    >>>>>>>> [.......]
    >>>>>>>> 
    >>>>>>>> and then
    >>>>>>>> 
    >>>>>>>>> Now I agree .. and have e-talked about this with another R core
    >>>>>>>>> member .. that it would be desirable for the package author to
    >>>>>>>>> effectively declare the fact that such a function is not an S3
    >>>>>>>>> method even though it "looks like it" at least if looked from far.
    >>>>>>>> 
    >>>>>>>>> So, ideally, you could have something like
    >>>>>>>> 
    >>>>>>>>> nonS3method("all.effects")
    >>>>>>>> 
    >>>>>>>>> somewhere in your package source ( in NAMESPACE or R/*.R )
    >>>>>>>>> which would tell the package-checking code -- but *ALSO* all the other S3
    >>>>>>>>> method code that  all.effects should be treated as a regular R
    >>>>>>>>> function.
    >>>>>>>> 
    >>>>>>>>> I would very much like such a feature in R, and for that reason,
    >>>>>>>>> I'm cross posting this (as one of the famous exceptions that
    >>>>>>>>> accompany real-life rules!!) to R-devel.
    >>>>>>>> 
    >>>>>>>> and actually I did *not* cross post, but have now moved the
    >>>>>>>> relevant part of the thread to  R-devel.
    >>>>>>>> 
    >>>>>> 
    >>>>>>> It sounds like a good idea.  It's a nontrivial amount of work, because
    >>>>>>> of the "all the other S3 method code" part.  There's the question of
    >>>>>>> functions defined outside of packages:  presumably they are still S3
    >>>>>>> methods, with no way to suppress that.
    >>>>>> 
>>>>> I am not sure this is the right solution: S3 dispatch will still occur
>>>>> because we first look at foo.bar exports and then in the S3 registry,
>>>>> afaicr (the "all the other S3 method code" part).
    >>>>>> 
>>>>> If we could move to only looking at the registry for dispatch, there
>>>>> would be no need to declare situations where we should not dispatch on
>>>>> foo.bar exports.
    >>>>>> 
    >>>> 
    >>>>> I think that would break a lot of existing scripts.  I think the logic
    >>>>> should be something like this.
    >>>> 
    >>>>> For each class in the class list:
    >>>> 
    >>>>> Search backwards through the environment chain.  If the current location
    >>>>> is a package environment or namespace, look only in the registry.  If
    >>>>> not, look at all functions.
    >>>> 
    >>>>> If that search failed, try the next class.
    >>>> 
    >>>> Yep---that's what I meant.  I forgot to write the "if namespace
    >>>> semantics applies" part :-)
    >>>> 
    >>>> Best
    >>>> -k
    >>>> 
    >>>>> A variation on the test is:  If there's a registry in the current
    >>>>> location, look there.  But I think the registry is not on the search
    >>>>> list, so I'm not sure that would work.
    >>>> 
    >>>>> This assumes that we keep separate registries in each package; if we
    >>>>> merge them into one big registry, it gets harder.  I'm not familiar
    >>>>> enough with the code to know which way we do it.
    >>>> 
    >>>>> Duncan Murdoch
    >>>> 
    >>>> ______________________________________________
    >>>> R-devel at r-project.org mailing list
    >>>> https://stat.ethz.ch/mailman/listinfo/r-devel
    >>> 
    >>> 
    >>> 
    >> 
    >> ______________________________________________
    >> R-devel at r-project.org mailing list
    >> https://stat.ethz.ch/mailman/listinfo/r-devel
    >> 

    > -- 
    > Luke Tierney
    > Ralph E. Wareham Professor of Mathematical Sciences
    > University of Iowa                  Phone:             319-335-3386
    > Department of Statistics and        Fax:               319-335-3017
    > Actuarial Science
    > 241 Schaeffer Hall                  email:   luke-tierney at uiowa.edu
    > Iowa City, IA 52242                 WWW:  http://www.stat.uiowa.edu


From jfox at mcmaster.ca  Sat Jun 13 14:52:14 2015
From: jfox at mcmaster.ca (John Fox)
Date: Sat, 13 Jun 2015 08:52:14 -0400
Subject: [Rd] RFC: Declaring "foo.bar" as nonS3method() ?!
In-Reply-To: <21884.5517.93162.167363@stat.math.ethz.ch>
References: <000e01d0a387$885ad130$99107390$@mcmaster.ca>
	<21882.36966.429889.227076@stat.math.ethz.ch>
	<21882.37975.726216.982364@stat.math.ethz.ch>
	<557ABD04.1040205@gmail.com>
	<21882.49031.599800.412740@fangorn.hornik.net>
	<557AC6FC.8060206@gmail.com>
	<21882.51223.144401.149543@fangorn.hornik.net>
	<CABdHhvFTb=erfo6T+83pBqG5b0y0hQLgO3u=Ywh6F2WoZu8crw@mail.gmail.com>
	<557AF6E7.2040805@gmail.com>
	<alpine.LFD.2.11.1506121023390.1461@itasca.stat.uiowa.edu>
	<21884.5517.93162.167363@stat.math.ethz.ch>
Message-ID: <web-562948601@cgpsrv2.cis.mcmaster.ca>

Dear Martin et al.,

Thank you for considering so thoroughly the issue that I raised.

Best,
 John

On Sat, 13 Jun 2015 13:35:41 +0200
 Martin Maechler <maechler at stat.math.ethz.ch> wrote:
> >>>>> Luke Tierney <luke-tierney at uiowa.edu>
> >>>>>     on Fri, 12 Jun 2015 10:30:29 -0500 writes:
> 
>     > The notes available off the devloper page
>     > https://developer.r-project.org/ describe some of the rationale for
>     > the S3 method search design. One thing that has changed since then is
>     > that all packages now have name spaces. We could change the search
>     > algorithm to skip attached package exports (and package imports and
>     > base), which would require methods defined in packages that are to be
>     > accessible outside the package to be declared.  Methods defined inside
>     > a package for internal use or methods defined in scripts not in
>     > packages would still be found. Packages not currently registering
>     > their methods would have to do so -- not sure how many that would
>     > affect. Testing on CRAN/Bioc should show how much of an effect this
>     > would have and whether there are any other issues.
> 
>     > Best,
>     > luke
> 
> Thanks a lot Luke, for the extra perspective.  
> I think the four R core commenters here (Duncan, Kurt, Luke and
> me) agree that this is not trivial to implement, but hopefully
> not too hard either, and I think we also +- agree that it seems
> desirable to try adding a bit more flexibility in how functions
> are "made into" S3 methods. 
> 
> I had not envisaged to change the S3 method search
> algorithm but rather to tweak part of it "database" but am aware
> that I don't know enough of the details.
> Also, I did not find which notes (from developer.r-project.org)
> you were refering to.
> 
> Given the broad agreement that we want to start working /
> investigating this,  we can well close the thread here for now
> (and deal with ideas, issues, details within R-core).
> 
> Martin
> 
>     > On Fri, 12 Jun 2015, Duncan Murdoch wrote:
> 
>     >> On 12/06/2015 10:53 AM, Hadley Wickham wrote:
>     >>> To me, it seems like there's actually two problems here:
>     >>> 
>     >>> 1) Preventing all() from dispatching to all.effects() for objects of
>     >>> class effects
>     >>> 2) Eliminating the NOTE in R CMD check
>     >>> 
>     >>> My impression is that 1) actually causes few problems, particularly
>     >>> since people are mostly now aware of the problem and avoid using `.`
>     >>> in function names unless they're S3 methods. Fixing this issue seems
>     >>> like it would be a lot of work for relatively little gain.
>     >>> 
>     >>> However, I think we want to prevent people from writing new functions
>     >>> with this confusing naming scheme, but equally we want to grandfather
>     >>> in existing functions, because renaming them all would be a lot of
>     >>> work (I'm looking at you t.test()!).
>     >>> 
>     >>> Could we have a system similar to globalVariables() where you could
>     >>> flag a function as definitely not being an S3 method? I'm not sure
>     >>> what R CMD check should do - ideally you wouldn't be allow to use
>     >>> method.class for new functions, but still be able suppress the note
>     >>> for old functions that can't easily be changed.
>     >> 
>     >> We have a mechanism for suppressing the warning for existing functions,
>     >> it's just not available to users to modify.  So it would be possible to
>     >> add effects::all.effects to the stop list, and this might be the easiest
>     >> action here.
>     >> 
>     >> This isn't perfect because all.effects() would still act as a method.
>     >> However,  it does give the deprecated message if you ever call it, so
>     >> nobody would do this unknowingly.  The only real risk is that if anyone
>     >> ever wrote an all.effects function that *was* supposed to be an S3
>     >> method, it might be masked by the one in effects.
>     >> 
>     >> Duncan Murdoch
>     >> 
>     >>> 
>     >>> Hadley
>     >>> 
>     >>> On Fri, Jun 12, 2015 at 6:52 AM, Kurt Hornik <Kurt.Hornik at wu.ac.at> wrote:
>     >>>>>>>>> Duncan Murdoch writes:
>     >>>> 
>     >>>>> On 12/06/2015 7:16 AM, Kurt Hornik wrote:
>     >>>>>>>>>>> Duncan Murdoch writes:
>     >>>>>> 
>     >>>>>>> On 12/06/2015 4:12 AM, Martin Maechler wrote:
>     >>>>>>>> This is a topic ' "apparent S3 methods" note in R CMD check '
>     >>>>>>>> from R-package-devel
>     >>>>>>>> https://stat.ethz.ch/pipermail/r-package-devel/2015q2/000126.html
>     >>>>>>>> 
>     >>>>>>>> which is relevant to here because some of us have been thinking
>     >>>>>>>> about extending R  because of the issue.
>     >>>>>>>> 
>     >>>>>>>> John Fox, maintainer of the 'effects' package has enquired about
>     >>>>>>>> the following  output from  'R CMD check effects'
>     >>>>>>>> 
>     >>>>>>>>> * checking S3 generic/method consistency ... NOTE
>     >>>>>>>>> Found the following apparent S3 methods exported but not registered:
>     >>>>>>>>> all.effects
>     >>>>>>>> 
>     >>>>>>>> and added
>     >>>>>>>> 
>     >>>>>>>>> The offending function, all.effects(), is deprecated in favour of
>     >>>>>>>>> allEffects(), but I'd rather not get rid of it for backwards compatibility.
>     >>>>>>>>> Is there any way to suppress the note without removing all.effects()?
>     >>>>>>>> 
>     >>>>>>>> and I had agreed that this was a "False Positive" in this case.
>     >>>>>>>> 
>     >>>>>>>> [.......]
>     >>>>>>>> 
>     >>>>>>>> and then
>     >>>>>>>> 
>     >>>>>>>>> Now I agree .. and have e-talked about this with another R core
>     >>>>>>>>> member .. that it would be desirable for the package author to
>     >>>>>>>>> effectively declare the fact that such a function is not an S3
>     >>>>>>>>> method even though it "looks like it" at least if looked from far.
>     >>>>>>>> 
>     >>>>>>>>> So, ideally, you could have something like
>     >>>>>>>> 
>     >>>>>>>>> nonS3method("all.effects")
>     >>>>>>>> 
>     >>>>>>>>> somewhere in your package source ( in NAMESPACE or R/*.R )
>     >>>>>>>>> which would tell the package-checking code -- but *ALSO* all the other S3
>     >>>>>>>>> method code that  all.effects should be treated as a regular R
>     >>>>>>>>> function.
>     >>>>>>>> 
>     >>>>>>>>> I would very much like such a feature in R, and for that reason,
>     >>>>>>>>> I'm cross posting this (as one of the famous exceptions that
>     >>>>>>>>> accompany real-life rules!!) to R-devel.
>     >>>>>>>> 
>     >>>>>>>> and actually I did *not* cross post, but have now moved the
>     >>>>>>>> relevant part of the thread to  R-devel.
>     >>>>>>>> 
>     >>>>>> 
>     >>>>>>> It sounds like a good idea.  It's a nontrivial amount of work, because
>     >>>>>>> of the "all the other S3 method code" part.  There's the question of
>     >>>>>>> functions defined outside of packages:  presumably they are still S3
>     >>>>>>> methods, with no way to suppress that.
>     >>>>>> 
> >>>>> I am not sure this is the right solution: S3 dispatch will still occur
> >>>>> because we first look at foo.bar exports and then in the S3 registry,
> >>>>> afaicr (the "all the other S3 method code" part).
>     >>>>>> 
> >>>>> If we could move to only looking at the registry for dispatch, there
> >>>>> would be no need to declare situations where we should not dispatch on
> >>>>> foo.bar exports.
>     >>>>>> 
>     >>>> 
>     >>>>> I think that would break a lot of existing scripts.  I think the logic
>     >>>>> should be something like this.
>     >>>> 
>     >>>>> For each class in the class list:
>     >>>> 
>     >>>>> Search backwards through the environment chain.  If the current location
>     >>>>> is a package environment or namespace, look only in the registry.  If
>     >>>>> not, look at all functions.
>     >>>> 
>     >>>>> If that search failed, try the next class.
>     >>>> 
>     >>>> Yep---that's what I meant.  I forgot to write the "if namespace
>     >>>> semantics applies" part :-)
>     >>>> 
>     >>>> Best
>     >>>> -k
>     >>>> 
>     >>>>> A variation on the test is:  If there's a registry in the current
>     >>>>> location, look there.  But I think the registry is not on the search
>     >>>>> list, so I'm not sure that would work.
>     >>>> 
>     >>>>> This assumes that we keep separate registries in each package; if we
>     >>>>> merge them into one big registry, it gets harder.  I'm not familiar
>     >>>>> enough with the code to know which way we do it.
>     >>>> 
>     >>>>> Duncan Murdoch
>     >>>> 
>     >>>> ______________________________________________
>     >>>> R-devel at r-project.org mailing list
>     >>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>     >>> 
>     >>> 
>     >>> 
>     >> 
>     >> ______________________________________________
>     >> R-devel at r-project.org mailing list
>     >> https://stat.ethz.ch/mailman/listinfo/r-devel
>     >> 
> 
>     > -- 
>     > Luke Tierney
>     > Ralph E. Wareham Professor of Mathematical Sciences
>     > University of Iowa                  Phone:             319-335-3386
>     > Department of Statistics and        Fax:               319-335-3017
>     > Actuarial Science
>     > 241 Schaeffer Hall                  email:   luke-tierney at uiowa.edu
>     > Iowa City, IA 52242                 WWW:  http://www.stat.uiowa.edu


From radford at cs.toronto.edu  Sat Jun 13 23:24:04 2015
From: radford at cs.toronto.edu (Radford Neal)
Date: Sat, 13 Jun 2015 17:24:04 -0400
Subject: [Rd] Lack of protection bug in current R release candidate
Message-ID: <20150613212404.GA15347@cs.toronto.edu>

The current R release candidate has a lack of protect bug (of very
long standing) with respect to the R_print.na_string and
R_print.na_string_noquote fields of the static R_print structure
declared in Print.h.  This shows up very occassionally as incorrect
output from the following lines in reg-tests-2.R:

  x <- c("a", NA, "b")
  factor(x)
  factor(x, exclude="")

The solution (kludgy, but the whole concept is kludgy) is to forward
R_print.na_string and R_print.na_string_noquote with the other "roots"
in RunGenCollect (after the comment /* forward all roots */).

   Radford Neal


From dwinsemius at comcast.net  Sun Jun 14 06:47:03 2015
From: dwinsemius at comcast.net (David Winsemius)
Date: Sat, 13 Jun 2015 21:47:03 -0700
Subject: [Rd] Expected error with help.search in R 3.2.0
Message-ID: <A04D379E-DE68-47A6-A301-12D0F7526291@comcast.net>

Using the Mavericks/Yosemite version of R 3.2.0, I see this:

> utils::help.search("linear models")
Error in help(db[i, "topic"], package = db[i, "Package"], lib.loc = lib,  :
 'topic' should be a name, length-one character vector or reserved word

Using R 3.1.2 on a SnowLeapard branch does not produce the same result. I do get the expected large number of hits where those words are in the help pages. It's an error message from the `help` function, so seems less likely to be restricted to Macs. I do see that the help() code near the stop() call is the same in both versions. I do not see where `help.search` calls `help`.

Tracing help is unrevealing. The first call to `help` throws the error and the call looks exactly like the calls in R 3.1.2

-- 
David Winsemius
Alameda, CA, USA


From bhh at xs4all.nl  Sun Jun 14 07:59:23 2015
From: bhh at xs4all.nl (Berend Hasselman)
Date: Sun, 14 Jun 2015 07:59:23 +0200
Subject: [Rd] Expected error with help.search in R 3.2.0
In-Reply-To: <A04D379E-DE68-47A6-A301-12D0F7526291@comcast.net>
References: <A04D379E-DE68-47A6-A301-12D0F7526291@comcast.net>
Message-ID: <81B48C11-A980-4D40-B839-B4C738B1F716@xs4all.nl>


> On 14-06-2015, at 06:47, David Winsemius <dwinsemius at comcast.net> wrote:
> 
> Using the Mavericks/Yosemite version of R 3.2.0, I see this:
> 
>> utils::help.search("linear models")
> Error in help(db[i, "topic"], package = db[i, "Package"], lib.loc = lib,  :
> 'topic' should be a name, length-one character vector or reserved word
> 
> Using R 3.1.2 on a SnowLeapard branch does not produce the same result. I do get the expected large number of hits where those words are in the help pages. It's an error message from the `help` function, so seems less likely to be restricted to Macs. I do see that the help() code near the stop() call is the same in both versions. I do not see where `help.search` calls `help`.
> 
> Tracing help is unrevealing. The first call to `help` throws the error and the call looks exactly like the calls in R 3.1.2
> 

See this thread on R-SIG-Mac

https://stat.ethz.ch/pipermail/r-sig-mac/2015-April/011420.html

This may help.
Get R 3.2.0-patched or even the release candidate for R 3.2.1

Berend

> -- 
> David Winsemius
> Alameda, CA, USA
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From dwinsemius at comcast.net  Sun Jun 14 16:41:51 2015
From: dwinsemius at comcast.net (David Winsemius)
Date: Sun, 14 Jun 2015 07:41:51 -0700
Subject: [Rd] Expected error with help.search in R 3.2.0
In-Reply-To: <81B48C11-A980-4D40-B839-B4C738B1F716@xs4all.nl>
References: <A04D379E-DE68-47A6-A301-12D0F7526291@comcast.net>
	<81B48C11-A980-4D40-B839-B4C738B1F716@xs4all.nl>
Message-ID: <959C3F70-D2B1-450D-B8AE-9297CC3A273A@comcast.net>


On Jun 13, 2015, at 10:59 PM, Berend Hasselman wrote:

> 
>> On 14-06-2015, at 06:47, David Winsemius <dwinsemius at comcast.net> wrote:
>> 
>> Using the Mavericks/Yosemite version of R 3.2.0, I see this:
>> 
>>> utils::help.search("linear models")
>> Error in help(db[i, "topic"], package = db[i, "Package"], lib.loc = lib,  :
>> 'topic' should be a name, length-one character vector or reserved word
>> 
>> Using R 3.1.2 on a SnowLeapard branch does not produce the same result. I do get the expected large number of hits where those words are in the help pages. It's an error message from the `help` function, so seems less likely to be restricted to Macs. I do see that the help() code near the stop() call is the same in both versions. I do not see where `help.search` calls `help`.
>> 
>> Tracing help is unrevealing. The first call to `help` throws the error and the call looks exactly like the calls in R 3.1.2
>> 
> 
> See this thread on R-SIG-Mac
> 
> https://stat.ethz.ch/pipermail/r-sig-mac/2015-April/011420.html

Yes, I see that thread. It reports a problem with the MacGUI package manager. That was not the problem reported and in fact both help() and the package manager open correctly. The problem reported was with `help.search()`


> 
> This may help.
> Get R 3.2.0-patched or even the release candidate for R 3.2.1
> 

There is no R 3.2.0-patched for Mavericks/Yosemite machines. There was a "3.1.3 Patched" for the Snow Leopard platform. I had used the most recent version of R 3.2.0 from the ATT Research site. I  then updated to the release candidate as suggested and R GUI now fails to load with this crash report. Note the error in naming the location of the R target as to be found in 

 /Library/Frameworks/R.framework/Versions/3.3/...

I also see that there was a note: x86_64: make FAILED

Starting R from the a Terminal window succeeds and the error with help.search() does not occur. R 3.2.1 also loads with RStudio with an error reported on startup that I'm pretty sure has already been reported elsewhere.


==== Mac GUI launch failure report ============

Process:               R [2518]
Path:                  /Applications/R.app/Contents/MacOS/R
Identifier:            org.R-project.R
Version:               ???
Code Type:             X86-64 (Native)
Parent Process:        ??? [1]
Responsible:           R [2518]
User ID:               502

Date/Time:             2015-06-14 07:18:29.359 -0700
OS Version:            Mac OS X 10.10.3 (14D136)
Report Version:        11
Anonymous UUID:        6729BDD8-0426-3F7E-CCFF-434A7BC2CF3E

Sleep/Wake UUID:       E4F8B4E6-0F96-4939-A687-D912AD7B215E

Time Awake Since Boot: 14000 seconds
Time Since Wake:       660 seconds

Crashed Thread:        0

Exception Type:        EXC_BREAKPOINT (SIGTRAP)
Exception Codes:       0x0000000000000002, 0x0000000000000000

Application Specific Information:
dyld: launch, loading dependent libraries

Dyld Error Message:
 Library not loaded: /Library/Frameworks/R.framework/Versions/3.3/Resources/lib/libR.dylib
 Referenced from: /Applications/R.app/Contents/MacOS/R
 Reason: image not found

Binary Images:
   0x7fff66097000 -     0x7fff660cd837  dyld (353.2.1) <65DCCB06-339C-3E25-9702-600A28291D0E> /usr/lib/dyld

Model: MacBookPro5,3, BootROM MBP53.00AC.B03, 2 processors, Intel Core 2 Duo, 2.8 GHz, 8 GB, SMC 1.48f2
Graphics: NVIDIA GeForce 9600M GT, NVIDIA GeForce 9600M GT, PCIe, 512 MB
Graphics: NVIDIA GeForce 9400M, NVIDIA GeForce 9400M, PCI, 256 MB
Memory Module: BANK 0/DIMM0, 4 GB, DDR3, 1067 MHz, 0x80AD, 0x484D5434353153364D4D5238432D47372020
Memory Module: BANK 1/DIMM0, 4 GB, DDR3, 1067 MHz, 0x80AD, 0x484D5434353153364D4D5238432D47372020
AirPort: spairport_wireless_card_type_airport_extreme (0x14E4, 0x8D), Broadcom BCM43xx 1.0 (5.106.98.100.24)
Bluetooth: Version 4.3.4f4 15601, 3 services, 19 devices, 1 incoming serial ports
Network Service: AirPort, AirPort, en1
Serial ATA Device: Hitachi HTS545050B9SA02, 500.11 GB
Serial ATA Device: MATSHITADVD-R   UJ-868, 122.5 MB
USB Device: Internal Memory Card Reader
USB Device: Built-in iSight
USB Device: BRCM2046 Hub
USB Device: Bluetooth USB Host Controller
USB Device: Apple Internal Keyboard / Trackpad
USB Device: IR Receiver
Thunderbolt Bus: 


> Berend
> 
>> -- 
>> David Winsemius
>> Alameda, CA, USA
>> 
>> ______________________________________________
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel
> 

David Winsemius
Alameda, CA, USA


From maechler at stat.math.ethz.ch  Mon Jun 15 14:38:56 2015
From: maechler at stat.math.ethz.ch (Martin Maechler)
Date: Mon, 15 Jun 2015 14:38:56 +0200
Subject: [Rd] Lack of protection bug in current R release candidate
In-Reply-To: <20150613212404.GA15347@cs.toronto.edu>
References: <20150613212404.GA15347@cs.toronto.edu>
Message-ID: <21886.51040.375672.149849@stat.math.ethz.ch>

>>>>> Radford Neal <radford at cs.toronto.edu>
>>>>>     on Sat, 13 Jun 2015 17:24:04 -0400 writes:

    > The current R release candidate has a lack of protect bug
    > (of very long standing) 

[ but not really reported,  right ? ]

    > with respect to the
    > R_print.na_string and R_print.na_string_noquote fields of
    > the static R_print structure declared in Print.h.  This
    > shows up very occassionally as incorrect output from the
    > following lines in reg-tests-2.R:

    > x <- c("a", NA, "b")
    > factor(x)
    > factor(x, exclude="")

    > The solution (kludgy, but the whole concept is kludgy) is
    > to forward R_print.na_string and R_print.na_string_noquote
    > with the other "roots" in RunGenCollect (after the comment
    > /* forward all roots */).

    >    Radford Neal

"Interesting" ... .. more serioulsy:  Thank you, Radford!

As  this about garbage collection, I found 
I can pretty well reproduce the problem via
something like

   x <- c("a", NA, "b")
  fx <- factor(x, exclude="")
  gctorture2(2, 5)
  r <- replicate(30, capture.output(print(fx)))
  stopifnot(r[,1] == r) 
  # ^^^ fails because of bug

but the R 3.2.1 release candidate probably really cannot be
touched now, with something non-trivial like this.

We'd be *very* happy to get such problems during alpha or beta
testing phase (or even before).

Martin Maechler


From Gael.Millot at curie.fr  Mon Jun 15 14:55:17 2015
From: Gael.Millot at curie.fr (Millot Gael)
Date: Mon, 15 Jun 2015 12:55:17 +0000
Subject: [Rd] Add-on argument in sample()
Message-ID: <D62EEDC839E38446B9F9378AFA4408E983EEA95E@mbxparis01.recherche.curie.fr>

Hi.

I have a problem with the default behavior of sample(), which performs sample(1:x) when x is a single value.
This behavior is well explained in ?sample.
However, this behavior is annoying when the number of value is not predictable. Would it be possible to add an argument
that desactivates this and perform the sampling on a single value ? Examples:
> sample(10, size = 1, replace = FALSE)
10

> sample(10, size = 3, replace = TRUE)
10 10 10

> sample(10, size = 3, replace = FALSE)
Error

Many thanks for your help.

Best wishes,

Gael Millot.


Gael Millot
UMR 3244 (IC-CNRS-UPMC) et Universite Pierre et Marie Curie
Equipe Recombinaison et instabilite genetique
Pav Trouillet Rossignol 5eme etage
Institut Curie
26 rue d'Ulm
75248 Paris Cedex 05
FRANCE
tel : 33 1 56 24 66 34
fax : 33 1 56 24 66 44
Email : gael.millot at curie.fr
http://perso.curie.fr/Gael.Millot/index.html


	[[alternative HTML version deleted]]


From Gael.Millot at curie.fr  Mon Jun 15 15:04:11 2015
From: Gael.Millot at curie.fr (Millot Gael)
Date: Mon, 15 Jun 2015 13:04:11 +0000
Subject: [Rd] Add on argument in seq()
Message-ID: <D62EEDC839E38446B9F9378AFA4408E983EEA97B@mbxparis01.recherche.curie.fr>

Hi.

I have a problem with the default behavior of seq(), which gives the argument "from" when the argument length.out = 1.
This behavior is annoying when the number of value determine in length.out is not predictable.
Would it be possible to add an argument that propose the median/mean, i.e. (from + to) / 2 when  length.out = 1 ? Examples:
> seq(from = 1, to =  11, length.out=1) # current method gives "from"
1

> seq(from = 1, to =  11, length.out=1) # alternative method gives the intermediate value of "from" and "to"
6

Many thanks for your help.

Best wishes,

Gael Millot.


Gael Millot
UMR 3244 (IC-CNRS-UPMC) et Universite Pierre et Marie Curie
Equipe Recombinaison et instabilite genetique
Pav Trouillet Rossignol 5eme etage
Institut Curie
26 rue d'Ulm
75248 Paris Cedex 05
FRANCE
tel : 33 1 56 24 66 34
fax : 33 1 56 24 66 44
Email : gael.millot at curie.fr
http://perso.curie.fr/Gael.Millot/index.html


	[[alternative HTML version deleted]]


From radford at cs.toronto.edu  Mon Jun 15 16:11:33 2015
From: radford at cs.toronto.edu (Radford Neal)
Date: Mon, 15 Jun 2015 10:11:33 -0400
Subject: [Rd] Lack of protection bug in current R release candidate
In-Reply-To: <21886.51040.375672.149849@stat.math.ethz.ch>
References: <20150613212404.GA15347@cs.toronto.edu>
	<21886.51040.375672.149849@stat.math.ethz.ch>
Message-ID: <20150615141133.GA4112@cs.toronto.edu>

>     > The current R release candidate has a lack of protect bug
>     > (of very long standing) 
> 
> [ but not really reported,  right ? ]

It's "long standing" because it exists in versions of R going
back many years.  

> but the R 3.2.1 release candidate probably really cannot be
> touched now, with something non-trivial like this.
> 
> We'd be *very* happy to get such problems during alpha or beta
> testing phase (or even before).

I'm not sure what you mean to imply here, but for your information,
I reported the bug to r-devel within about an hour of finding 
what caused it.  (I'd noticed the symptoms a few days before, but
hadn't isolated the cause.)

   Radford Neal


From maechler at stat.math.ethz.ch  Mon Jun 15 16:24:00 2015
From: maechler at stat.math.ethz.ch (Martin Maechler)
Date: Mon, 15 Jun 2015 16:24:00 +0200
Subject: [Rd] Lack of protection bug in current R release candidate
In-Reply-To: <20150615141133.GA4112@cs.toronto.edu>
References: <20150613212404.GA15347@cs.toronto.edu>
	<21886.51040.375672.149849@stat.math.ethz.ch>
	<20150615141133.GA4112@cs.toronto.edu>
Message-ID: <21886.57344.456502.211201@stat.math.ethz.ch>

>>>>> Radford Neal <radford at cs.toronto.edu>
>>>>>     on Mon, 15 Jun 2015 10:11:33 -0400 writes:

    >> > The current R release candidate has a lack of protect bug
    >> > (of very long standing) 
    >> 
    >> [ but not really reported,  right ? ]

    > It's "long standing" because it exists in versions of R going
    > back many years.  

    >> but the R 3.2.1 release candidate probably really cannot be
    >> touched now, with something non-trivial like this.
    >> 
    >> We'd be *very* happy to get such problems during alpha or beta
    >> testing phase (or even before).

    > I'm not sure what you mean to imply here, but for your information,
    > I reported the bug to r-devel within about an hour of finding 
    > what caused it.  (I'd noticed the symptoms a few days before, but
    > hadn't isolated the cause.)

    > Radford Neal

Thank you, now I understand.
I really  completely misinterpreted your "very long standing"
above.

Hence I do apologize for the negative connotation of the
above... and thank you again -- in the name of all involved --
for reporting the bug here!

BTW: I've committed  svn rev 68519  
about ten minutes ago which does fix the bug (simply applying your good advice)
and contains a regression test.

Thank you once more, Radford!
Martin Maechler


From gmbecker at ucdavis.edu  Mon Jun 15 16:24:56 2015
From: gmbecker at ucdavis.edu (Gabriel Becker)
Date: Mon, 15 Jun 2015 07:24:56 -0700
Subject: [Rd] Add on argument in seq()
In-Reply-To: <D62EEDC839E38446B9F9378AFA4408E983EEA97B@mbxparis01.recherche.curie.fr>
References: <D62EEDC839E38446B9F9378AFA4408E983EEA97B@mbxparis01.recherche.curie.fr>
Message-ID: <CADwqtCMYWzG+yhuE2YVJXtHdO9-g1_SaLfCp7n8iXNmgT3yAUw@mail.gmail.com>

Millot,

I think the problem with that is that what you propose isn't a sequence
starting  at from in any meaningful way, and thus does not satisfy the
contract of the seq function.

Best,
~G
On Jun 15, 2015 7:12 AM, "Millot Gael" <Gael.Millot at curie.fr> wrote:

> Hi.
>
> I have a problem with the default behavior of seq(), which gives the
> argument "from" when the argument length.out = 1.
> This behavior is annoying when the number of value determine in length.out
> is not predictable.
> Would it be possible to add an argument that propose the median/mean, i.e.
> (from + to) / 2 when  length.out = 1 ? Examples:
> > seq(from = 1, to =  11, length.out=1) # current method gives "from"
> 1
>
> > seq(from = 1, to =  11, length.out=1) # alternative method gives the
> intermediate value of "from" and "to"
> 6
>
> Many thanks for your help.
>
> Best wishes,
>
> Gael Millot.
>
>
> Gael Millot
> UMR 3244 (IC-CNRS-UPMC) et Universite Pierre et Marie Curie
> Equipe Recombinaison et instabilite genetique
> Pav Trouillet Rossignol 5eme etage
> Institut Curie
> 26 rue d'Ulm
> 75248 Paris Cedex 05
> FRANCE
> tel : 33 1 56 24 66 34
> fax : 33 1 56 24 66 44
> Email : gael.millot at curie.fr
> http://perso.curie.fr/Gael.Millot/index.html
>
>
>         [[alternative HTML version deleted]]
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>

	[[alternative HTML version deleted]]


From Gael.Millot at curie.fr  Mon Jun 15 16:56:39 2015
From: Gael.Millot at curie.fr (Millot Gael)
Date: Mon, 15 Jun 2015 14:56:39 +0000
Subject: [Rd] Add on argument in seq()
In-Reply-To: <CADwqtCMYWzG+yhuE2YVJXtHdO9-g1_SaLfCp7n8iXNmgT3yAUw@mail.gmail.com>
References: <D62EEDC839E38446B9F9378AFA4408E983EEA97B@mbxparis01.recherche.curie.fr>
	<CADwqtCMYWzG+yhuE2YVJXtHdO9-g1_SaLfCp7n8iXNmgT3yAUw@mail.gmail.com>
Message-ID: <D62EEDC839E38446B9F9378AFA4408E983EEA9DE@mbxparis01.recherche.curie.fr>

Thanks for your answer.

The rational behind my proposal is why taking "from" when length.out=1, more than "to" or "NA", or " integer(0) " ?

This question seems basic. But is is not in certain situations, like when length.out =  unpredictable positive integer.
And I haven't found in ?seq() the particular behavior of this function when length.out = 1.

Thanks for your help !

Best,

Gael.


De : Gabriel Becker [mailto:gmbecker at ucdavis.edu]
Envoy? : lundi 15 juin 2015 16:25
? : Millot Gael
Cc : r-devel
Objet : Re: [Rd] Add on argument in seq()


Millot,

I think the problem with that is that what you propose isn't a sequence starting  at from in any meaningful way, and thus does not satisfy the contract of the seq function.

Best,
~G
On Jun 15, 2015 7:12 AM, "Millot Gael" <Gael.Millot at curie.fr<mailto:Gael.Millot at curie.fr>> wrote:
Hi.

I have a problem with the default behavior of seq(), which gives the argument "from" when the argument length.out = 1.
This behavior is annoying when the number of value determine in length.out is not predictable.
Would it be possible to add an argument that propose the median/mean, i.e. (from + to) / 2 when  length.out = 1 ? Examples:
> seq(from = 1, to =  11, length.out=1) # current method gives "from"
1

> seq(from = 1, to =  11, length.out=1) # alternative method gives the intermediate value of "from" and "to"
6

Many thanks for your help.

Best wishes,

Gael Millot.


Gael Millot
UMR 3244 (IC-CNRS-UPMC) et Universite Pierre et Marie Curie
Equipe Recombinaison et instabilite genetique
Pav Trouillet Rossignol 5eme etage
Institut Curie
26 rue d'Ulm
75248 Paris Cedex 05
FRANCE
tel : 33 1 56 24 66 34
fax : 33 1 56 24 66 44
Email : gael.millot at curie.fr<mailto:gael.millot at curie.fr>
http://perso.curie.fr/Gael.Millot/index.html


        [[alternative HTML version deleted]]

______________________________________________
R-devel at r-project.org<mailto:R-devel at r-project.org> mailing list
https://stat.ethz.ch/mailman/listinfo/r-devel

	[[alternative HTML version deleted]]


From h.wickham at gmail.com  Mon Jun 15 18:19:50 2015
From: h.wickham at gmail.com (Hadley Wickham)
Date: Mon, 15 Jun 2015 11:19:50 -0500
Subject: [Rd] Add on argument in seq()
In-Reply-To: <D62EEDC839E38446B9F9378AFA4408E983EEA9DE@mbxparis01.recherche.curie.fr>
References: <D62EEDC839E38446B9F9378AFA4408E983EEA97B@mbxparis01.recherche.curie.fr>
	<CADwqtCMYWzG+yhuE2YVJXtHdO9-g1_SaLfCp7n8iXNmgT3yAUw@mail.gmail.com>
	<D62EEDC839E38446B9F9378AFA4408E983EEA9DE@mbxparis01.recherche.curie.fr>
Message-ID: <CABdHhvFqEQQbmmX2ZwdaF4xaCpSeo64URQztpybG8Ar5RSz54Q@mail.gmail.com>

Regardless of the value of the other arguments, the first element in
the output of seq() is _always_ `from`.

Hadley

On Mon, Jun 15, 2015 at 9:56 AM, Millot Gael <Gael.Millot at curie.fr> wrote:
> Thanks for your answer.
>
> The rational behind my proposal is why taking "from" when length.out=1, more than "to" or "NA", or " integer(0) " ?
>
> This question seems basic. But is is not in certain situations, like when length.out =  unpredictable positive integer.
> And I haven't found in ?seq() the particular behavior of this function when length.out = 1.
>
> Thanks for your help !
>
> Best,
>
> Gael.
>
>
> De : Gabriel Becker [mailto:gmbecker at ucdavis.edu]
> Envoy? : lundi 15 juin 2015 16:25
> ? : Millot Gael
> Cc : r-devel
> Objet : Re: [Rd] Add on argument in seq()
>
>
> Millot,
>
> I think the problem with that is that what you propose isn't a sequence starting  at from in any meaningful way, and thus does not satisfy the contract of the seq function.
>
> Best,
> ~G
> On Jun 15, 2015 7:12 AM, "Millot Gael" <Gael.Millot at curie.fr<mailto:Gael.Millot at curie.fr>> wrote:
> Hi.
>
> I have a problem with the default behavior of seq(), which gives the argument "from" when the argument length.out = 1.
> This behavior is annoying when the number of value determine in length.out is not predictable.
> Would it be possible to add an argument that propose the median/mean, i.e. (from + to) / 2 when  length.out = 1 ? Examples:
>> seq(from = 1, to =  11, length.out=1) # current method gives "from"
> 1
>
>> seq(from = 1, to =  11, length.out=1) # alternative method gives the intermediate value of "from" and "to"
> 6
>
> Many thanks for your help.
>
> Best wishes,
>
> Gael Millot.
>
>
> Gael Millot
> UMR 3244 (IC-CNRS-UPMC) et Universite Pierre et Marie Curie
> Equipe Recombinaison et instabilite genetique
> Pav Trouillet Rossignol 5eme etage
> Institut Curie
> 26 rue d'Ulm
> 75248 Paris Cedex 05
> FRANCE
> tel : 33 1 56 24 66 34
> fax : 33 1 56 24 66 44
> Email : gael.millot at curie.fr<mailto:gael.millot at curie.fr>
> http://perso.curie.fr/Gael.Millot/index.html
>
>
>         [[alternative HTML version deleted]]
>
> ______________________________________________
> R-devel at r-project.org<mailto:R-devel at r-project.org> mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>
>         [[alternative HTML version deleted]]
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel



-- 
http://had.co.nz/


From hb at biostat.ucsf.edu  Mon Jun 15 20:31:13 2015
From: hb at biostat.ucsf.edu (Henrik Bengtsson)
Date: Mon, 15 Jun 2015 11:31:13 -0700
Subject: [Rd] Add-on argument in sample()
In-Reply-To: <D62EEDC839E38446B9F9378AFA4408E983EEA95E@mbxparis01.recherche.curie.fr>
References: <D62EEDC839E38446B9F9378AFA4408E983EEA95E@mbxparis01.recherche.curie.fr>
Message-ID: <CAFDcVCQEGU8SCXgmA93LO1LaxsCKdk5edj=d8CD8yafGYJKeYA@mail.gmail.com>

You're not the first one, e.g.

https://stat.ethz.ch/pipermail/r-devel/2010-March/057029.html
https://stat.ethz.ch/pipermail/r-devel/2010-November/058981.html

(I was bitten by this in a resampling scheme where the set sampled
from was data driven).

Here's a simple solution - taken from R.utils::resample();

> resample <- function (x, ...) x[sample.int(length(x), ...)]

> resample(10, size = 1, replace = FALSE)
[1] 10
> resample(10, size = 3, replace = TRUE)
[1] 10 10 10
> resample(10, size = 3, replace = FALSE)
Error in sample.int(length(x), ...) :
  cannot take a sample larger than the population when 'replace = FALSE'

/Henrik

On Mon, Jun 15, 2015 at 5:55 AM, Millot Gael <Gael.Millot at curie.fr> wrote:
> Hi.
>
> I have a problem with the default behavior of sample(), which performs sample(1:x) when x is a single value.
> This behavior is well explained in ?sample.
> However, this behavior is annoying when the number of value is not predictable. Would it be possible to add an argument
> that desactivates this and perform the sampling on a single value ? Examples:
>> sample(10, size = 1, replace = FALSE)
> 10
>
>> sample(10, size = 3, replace = TRUE)
> 10 10 10
>
>> sample(10, size = 3, replace = FALSE)
> Error
>
> Many thanks for your help.
>
> Best wishes,
>
> Gael Millot.
>
>
> Gael Millot
> UMR 3244 (IC-CNRS-UPMC) et Universite Pierre et Marie Curie
> Equipe Recombinaison et instabilite genetique
> Pav Trouillet Rossignol 5eme etage
> Institut Curie
> 26 rue d'Ulm
> 75248 Paris Cedex 05
> FRANCE
> tel : 33 1 56 24 66 34
> fax : 33 1 56 24 66 44
> Email : gael.millot at curie.fr
> http://perso.curie.fr/Gael.Millot/index.html
>
>
>         [[alternative HTML version deleted]]
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From gmbecker at ucdavis.edu  Mon Jun 15 23:54:06 2015
From: gmbecker at ucdavis.edu (Gabriel Becker)
Date: Mon, 15 Jun 2015 14:54:06 -0700
Subject: [Rd] Add on argument in seq()
In-Reply-To: <CABdHhvFqEQQbmmX2ZwdaF4xaCpSeo64URQztpybG8Ar5RSz54Q@mail.gmail.com>
References: <D62EEDC839E38446B9F9378AFA4408E983EEA97B@mbxparis01.recherche.curie.fr>
	<CADwqtCMYWzG+yhuE2YVJXtHdO9-g1_SaLfCp7n8iXNmgT3yAUw@mail.gmail.com>
	<D62EEDC839E38446B9F9378AFA4408E983EEA9DE@mbxparis01.recherche.curie.fr>
	<CABdHhvFqEQQbmmX2ZwdaF4xaCpSeo64URQztpybG8Ar5RSz54Q@mail.gmail.com>
Message-ID: <CADwqtCN4aGpOShgFVXN1ZLsDabSi50bxHbfN9E8jaefpa0vptw@mail.gmail.com>

Millot,

On Mon, Jun 15, 2015 at 9:19 AM, Hadley Wickham <h.wickham at gmail.com> wrote:

> Regardless of the value of the other arguments, the first element in
> the output of seq() is _always_ `from`.
>


Indeed, as Hadley says, the output of seq must always start with* from*. It
is a sequence starting at *from* and ending wherever the other arguments
cause it to end. A sequence starting at* from *of length one is simply that
single value. That is the contract I was referring to in my previous email.
Apologies if that was not clear.

If that isn't the behavior you want when length.out  ends up being 1, your
code will need to protect against that scenario.

I could see the argument for it being a warning/error if from and to are
both specified and length.out is one, as a (lesser) part of the contract is
that the last element of seq should be to, but even though it might make
sense I really don't see that change going in. If I were you I'd just add
an if statement in my function to check if length.out is 1 and move on.

Best,
~G


>
> Hadley
>
> On Mon, Jun 15, 2015 at 9:56 AM, Millot Gael <Gael.Millot at curie.fr> wrote:
> > Thanks for your answer.
> >
> > The rational behind my proposal is why taking "from" when length.out=1,
> more than "to" or "NA", or " integer(0) " ?
> >
> > This question seems basic. But is is not in certain situations, like
> when length.out =  unpredictable positive integer.
> > And I haven't found in ?seq() the particular behavior of this function
> when length.out = 1.
> >
> > Thanks for your help !
> >
> > Best,
> >
> > Gael.
> >
> >
> > De : Gabriel Becker [mailto:gmbecker at ucdavis.edu]
> > Envoy? : lundi 15 juin 2015 16:25
> > ? : Millot Gael
> > Cc : r-devel
> > Objet : Re: [Rd] Add on argument in seq()
> >
> >
> > Millot,
> >
> > I think the problem with that is that what you propose isn't a sequence
> starting  at from in any meaningful way, and thus does not satisfy the
> contract of the seq function.
> >
> > Best,
> > ~G
> > On Jun 15, 2015 7:12 AM, "Millot Gael" <Gael.Millot at curie.fr<mailto:
> Gael.Millot at curie.fr>> wrote:
> > Hi.
> >
> > I have a problem with the default behavior of seq(), which gives the
> argument "from" when the argument length.out = 1.
> > This behavior is annoying when the number of value determine in
> length.out is not predictable.
> > Would it be possible to add an argument that propose the median/mean,
> i.e. (from + to) / 2 when  length.out = 1 ? Examples:
> >> seq(from = 1, to =  11, length.out=1) # current method gives "from"
> > 1
> >
> >> seq(from = 1, to =  11, length.out=1) # alternative method gives the
> intermediate value of "from" and "to"
> > 6
> >
> > Many thanks for your help.
> >
> > Best wishes,
> >
> > Gael Millot.
> >
> >
> > Gael Millot
> > UMR 3244 (IC-CNRS-UPMC) et Universite Pierre et Marie Curie
> > Equipe Recombinaison et instabilite genetique
> > Pav Trouillet Rossignol 5eme etage
> > Institut Curie
> > 26 rue d'Ulm
> > 75248 Paris Cedex 05
> > FRANCE
> > tel : 33 1 56 24 66 34
> > fax : 33 1 56 24 66 44
> > Email : gael.millot at curie.fr<mailto:gael.millot at curie.fr>
> > http://perso.curie.fr/Gael.Millot/index.html
> >
> >
> >         [[alternative HTML version deleted]]
> >
> > ______________________________________________
> > R-devel at r-project.org<mailto:R-devel at r-project.org> mailing list
> > https://stat.ethz.ch/mailman/listinfo/r-devel
> >
> >         [[alternative HTML version deleted]]
> >
> > ______________________________________________
> > R-devel at r-project.org mailing list
> > https://stat.ethz.ch/mailman/listinfo/r-devel
>
>
>
> --
> http://had.co.nz/
>



-- 
Gabriel Becker, PhD
Computational Biologist
Bioinformatics and Computational Biology
Genentech, Inc.

	[[alternative HTML version deleted]]


From howarth.mailing.lists at gmail.com  Tue Jun 16 04:03:59 2015
From: howarth.mailing.lists at gmail.com (Jack Howarth)
Date: Mon, 15 Jun 2015 22:03:59 -0400
Subject: [Rd] back port of Bug 15899 fix missing from R 3.2.1 RC release!!!
Message-ID: <CADtEn-36oKTN5vu0a2U19dVj9KpKCwqvOsjZJhQFHvoqHcm4TQ@mail.gmail.com>

    Is there a reason why the fix for Bug 15899 - Omitted 'extern' on
'R_running_as_main_program' after refactor can cause linker errors for
applications embedding R...

https://bugs.r-project.org/bugzilla3/show_bug.cgi?id=15899

was never back ported for R 3.3 for the R 3.2.1 release? Restoring
that omitted 'extern' to the declaration of 'int
R_running_as_main_program;' in src/Rinterface.h is essential for being
able to build Rstudio.
           Jack


From maechler at stat.math.ethz.ch  Tue Jun 16 12:18:29 2015
From: maechler at stat.math.ethz.ch (Martin Maechler)
Date: Tue, 16 Jun 2015 12:18:29 +0200
Subject: [Rd] back port of Bug 15899 fix missing from R 3.2.1 RC
	release!!!
In-Reply-To: <CADtEn-36oKTN5vu0a2U19dVj9KpKCwqvOsjZJhQFHvoqHcm4TQ@mail.gmail.com>
References: <CADtEn-36oKTN5vu0a2U19dVj9KpKCwqvOsjZJhQFHvoqHcm4TQ@mail.gmail.com>
Message-ID: <21887.63477.24335.41397@stat.math.ethz.ch>

>>>>> Jack Howarth <howarth.mailing.lists at gmail.com>
>>>>>     on Mon, 15 Jun 2015 22:03:59 -0400 writes:

    > Is there a reason why the fix for Bug 15899 - Omitted 'extern' on
    > 'R_running_as_main_program' after refactor can cause linker errors for
    > applications embedding R...

    > https://bugs.r-project.org/bugzilla3/show_bug.cgi?id=15899

    > was never back ported for R 3.3 for the R 3.2.1 release? Restoring
    > that omitted 'extern' to the declaration of 'int
    > R_running_as_main_program;' in src/Rinterface.h is essential for being
    > able to build Rstudio.

from the sources ...(which is unusual, but  I agree that that is
          	 an important exercise .. if only to implicitly "prove" that
     	       	 Rstudio is truly open source...) 

    > Jack

I had not ported that change to R-patched because I had not been
100% sure that there were no "bad" implications -- so wanted to wait a
couple of days -- and then forgot... I am sorry.

Still your "reminder" comes very very late in the release
process for R 3.2.1. ... but as an exception, and because it
*is* so minimal (and has not caused any negative effects)
I have ported the change now to the 3.2.1 RC.

Martin


From Gael.Millot at curie.fr  Tue Jun 16 12:36:37 2015
From: Gael.Millot at curie.fr (Millot Gael)
Date: Tue, 16 Jun 2015 10:36:37 +0000
Subject: [Rd] Add on argument in seq()
In-Reply-To: <CADwqtCN4aGpOShgFVXN1ZLsDabSi50bxHbfN9E8jaefpa0vptw@mail.gmail.com>
References: <D62EEDC839E38446B9F9378AFA4408E983EEA97B@mbxparis01.recherche.curie.fr>
	<CADwqtCMYWzG+yhuE2YVJXtHdO9-g1_SaLfCp7n8iXNmgT3yAUw@mail.gmail.com>
	<D62EEDC839E38446B9F9378AFA4408E983EEA9DE@mbxparis01.recherche.curie.fr>
	<CABdHhvFqEQQbmmX2ZwdaF4xaCpSeo64URQztpybG8Ar5RSz54Q@mail.gmail.com>
	<CADwqtCN4aGpOShgFVXN1ZLsDabSi50bxHbfN9E8jaefpa0vptw@mail.gmail.com>
Message-ID: <D62EEDC839E38446B9F9378AFA4408E983EEAB7F@mbxparis01.recherche.curie.fr>

ok.

Many thanks for your help !

Best,

Gael.


De : Gabriel Becker [mailto:gmbecker at ucdavis.edu]
Envoy? : lundi 15 juin 2015 23:54
? : Hadley Wickham
Cc : Millot Gael; r-devel
Objet : Re: [Rd] Add on argument in seq()

Millot,

On Mon, Jun 15, 2015 at 9:19 AM, Hadley Wickham <h.wickham at gmail.com<mailto:h.wickham at gmail.com>> wrote:
Regardless of the value of the other arguments, the first element in
the output of seq() is _always_ `from`.

Indeed, as Hadley says, the output of seq must always start with from. It is a sequence starting at from and ending wherever the other arguments cause it to end. A sequence starting at from of length one is simply that single value. That is the contract I was referring to in my previous email. Apologies if that was not clear.
If that isn't the behavior you want when length.out  ends up being 1, your code will need to protect against that scenario.
I could see the argument for it being a warning/error if from and to are both specified and length.out is one, as a (lesser) part of the contract is that the last element of seq should be to, but even though it might make sense I really don't see that change going in. If I were you I'd just add an if statement in my function to check if length.out is 1 and move on.
Best,
~G


Hadley

On Mon, Jun 15, 2015 at 9:56 AM, Millot Gael <Gael.Millot at curie.fr<mailto:Gael.Millot at curie.fr>> wrote:
> Thanks for your answer.
>
> The rational behind my proposal is why taking "from" when length.out=1, more than "to" or "NA", or " integer(0) " ?
>
> This question seems basic. But is is not in certain situations, like when length.out =  unpredictable positive integer.
> And I haven't found in ?seq() the particular behavior of this function when length.out = 1.
>
> Thanks for your help !
>
> Best,
>
> Gael.
>
>
> De : Gabriel Becker [mailto:gmbecker at ucdavis.edu<mailto:gmbecker at ucdavis.edu>]
> Envoy? : lundi 15 juin 2015 16:25
> ? : Millot Gael
> Cc : r-devel
> Objet : Re: [Rd] Add on argument in seq()
>
>
> Millot,
>
> I think the problem with that is that what you propose isn't a sequence starting  at from in any meaningful way, and thus does not satisfy the contract of the seq function.
>
> Best,
> ~G
> On Jun 15, 2015 7:12 AM, "Millot Gael" <Gael.Millot at curie.fr<mailto:Gael.Millot at curie.fr><mailto:Gael.Millot at curie.fr<mailto:Gael.Millot at curie.fr>>> wrote:
> Hi.
>
> I have a problem with the default behavior of seq(), which gives the argument "from" when the argument length.out = 1.
> This behavior is annoying when the number of value determine in length.out is not predictable.
> Would it be possible to add an argument that propose the median/mean, i.e. (from + to) / 2 when  length.out = 1 ? Examples:
>> seq(from = 1, to =  11, length.out=1) # current method gives "from"
> 1
>
>> seq(from = 1, to =  11, length.out=1) # alternative method gives the intermediate value of "from" and "to"
> 6
>
> Many thanks for your help.
>
> Best wishes,
>
> Gael Millot.
>
>
> Gael Millot
> UMR 3244 (IC-CNRS-UPMC) et Universite Pierre et Marie Curie
> Equipe Recombinaison et instabilite genetique
> Pav Trouillet Rossignol 5eme etage
> Institut Curie
> 26 rue d'Ulm
> 75248 Paris Cedex 05
> FRANCE
> tel : 33 1 56 24 66 34
> fax : 33 1 56 24 66 44
> Email : gael.millot at curie.fr<mailto:gael.millot at curie.fr><mailto:gael.millot at curie.fr<mailto:gael.millot at curie.fr>>
> http://perso.curie.fr/Gael.Millot/index.html
>
>
>         [[alternative HTML version deleted]]
>
> ______________________________________________
> R-devel at r-project.org<mailto:R-devel at r-project.org><mailto:R-devel at r-project.org<mailto:R-devel at r-project.org>> mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>
>         [[alternative HTML version deleted]]
>
> ______________________________________________
> R-devel at r-project.org<mailto:R-devel at r-project.org> mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


--
http://had.co.nz/



--
Gabriel Becker, PhD
Computational Biologist
Bioinformatics and Computational Biology
Genentech, Inc.

	[[alternative HTML version deleted]]


From retep.meissner at gmail.com  Tue Jun 16 13:32:18 2015
From: retep.meissner at gmail.com (Peter Meissner)
Date: Tue, 16 Jun 2015 13:32:18 +0200
Subject: [Rd] Add-on argument in sample()
In-Reply-To: <D62EEDC839E38446B9F9378AFA4408E983EEA95E@mbxparis01.recherche.curie.fr>
References: <D62EEDC839E38446B9F9378AFA4408E983EEA95E@mbxparis01.recherche.curie.fr>
Message-ID: <op.x0bmb4ju3euttn@zukd208>

Am .06.2015, 14:55 Uhr, schrieb Millot Gael <Gael.Millot at curie.fr>:

> Hi.
>
> I have a problem with the default behavior of sample(), which performs  
> sample(1:x) when x is a single value.
> This behavior is well explained in ?sample.
> However, this behavior is annoying when the number of value is not  
> predictable. Would it be possible to add an argument
> that desactivates this and perform the sampling on a single value ?  
> Examples:
>> sample(10, size = 1, replace = FALSE)
> 10
>
>> sample(10, size = 3, replace = TRUE)
> 10 10 10
>
>> sample(10, size = 3, replace = FALSE)
> Error

I think the problem here is that the function actually does what you would  
expect it to do given a statistic perspective. A sample of size three from  
a population of one without allowing to draw elements again that were  
drawn already is simply not defined. What shall the function give back?

... You can always wrap your code in a try() like this to prevent errors  
to break loops or functions:

try(sample(...))

... or you might check your arguments before execution:


if ( !replace & length(population) >= size ){
   sample(population, size = size , replace = replace)
}else{
   ...
}


>
> Many thanks for your help.
>
> Best wishes,
>
> Gael Millot.
>
>
> Gael Millot
> UMR 3244 (IC-CNRS-UPMC) et Universite Pierre et Marie Curie
> Equipe Recombinaison et instabilite genetique
> Pav Trouillet Rossignol 5eme etage
> Institut Curie
> 26 rue d'Ulm
> 75248 Paris Cedex 05
> FRANCE
> tel : 33 1 56 24 66 34
> fax : 33 1 56 24 66 44
> Email : gael.millot at curie.fr
> http://perso.curie.fr/Gael.Millot/index.html
>
>
> 	[[alternative HTML version deleted]]
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


Best, Peter

--


From nalimilan at club.fr  Tue Jun 16 21:18:14 2015
From: nalimilan at club.fr (Milan Bouchet-Valat)
Date: Tue, 16 Jun 2015 21:18:14 +0200
Subject: [Rd] Bugzilla activity?
Message-ID: <1434482294.16367.9.camel@club.fr>

Hi!

I was wondering whether anybody was looking at the bugs on Bugzilla. I'm
asking because I've seen bugs tackled on the mailing list quite quickly,
but two fully reproducible reports I've filed on Bugzilla haven't
triggered any reaction in several weeks (for the older one).

FWIW, these are:
- Line goes beyond plot region
https://bugs.r-project.org/bugzilla3/show_bug.cgi?id=16299
- format() does not respect decimal.mark="." when options(OutDec=",")
https://bugs.r-project.org/bugzilla3/show_bug.cgi?id=16411


Regards


From henrik.bengtsson at ucsf.edu  Tue Jun 16 21:20:52 2015
From: henrik.bengtsson at ucsf.edu (Henrik Bengtsson)
Date: Tue, 16 Jun 2015 12:20:52 -0700
Subject: [Rd] Code demos via HTML help gives an error
Message-ID: <CAFDcVCT0dAFip4SLyjk9_B1_z98CQuMQDcn+CV0Cxb2JE3+haA@mail.gmail.com>

PROBLEM:
I'm getting error:

Error in order(matches$Position) : argument 1 is not a vector

Whenever I try to access a package's "Code demos" page via the link on
the package HTML index page.


SOME TROUBLESHOOTING:
Looking at for instance the 'stats' package.  The "Code demos" URL
takes the form

 http://127.0.0.1:30200/library/stats/demo

Click on this, takes me to

 http://127.0.0.1:30200/doc/html/Search?package=stats&agrep=FALSE&types=demo


WHERE:
I see this on R devel (2015-06-15 r68521) and R 3.2.1 RC (2015-06-14
r68516) - both on Platform: x86_64-w64-mingw32/x64 (64-bit).  Haven't
checked other platforms.


Regarding the imminent release of R 3.2.1; Sorry, I rarely use demos,
so it's only in this very moment I noticed.

/Henrik


From jorismeys at gmail.com  Tue Jun 16 22:02:20 2015
From: jorismeys at gmail.com (Joris Meys)
Date: Tue, 16 Jun 2015 22:02:20 +0200
Subject: [Rd] Bugzilla activity?
In-Reply-To: <1434482294.16367.9.camel@club.fr>
References: <1434482294.16367.9.camel@club.fr>
Message-ID: <CAO1zAVaLdnfwHuPpvxwb8Ru_1GvM7P2aGkVes2HRHGsk+r3p9g@mail.gmail.com>

Hi Milan,

I can't reproduce your first bug in R 3.2 on Windows 8.1, and I fail to
reproduce that one in R 3.1.2 as well. So that might explain why that one
isn't tackled.

The second bug you reported I can reproduce.

Cheers
Joris

On Tue, Jun 16, 2015 at 9:18 PM, Milan Bouchet-Valat <nalimilan at club.fr>
wrote:

> Hi!
>
> I was wondering whether anybody was looking at the bugs on Bugzilla. I'm
> asking because I've seen bugs tackled on the mailing list quite quickly,
> but two fully reproducible reports I've filed on Bugzilla haven't
> triggered any reaction in several weeks (for the older one).
>
> FWIW, these are:
> - Line goes beyond plot region
> https://bugs.r-project.org/bugzilla3/show_bug.cgi?id=16299
> - format() does not respect decimal.mark="." when options(OutDec=",")
> https://bugs.r-project.org/bugzilla3/show_bug.cgi?id=16411
>
>
> Regards
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>



-- 
Joris Meys
Statistical consultant

Ghent University
Faculty of Bioscience Engineering
Department of Mathematical Modelling, Statistics and Bio-Informatics

tel :  +32 (0)9 264 61 79
Joris.Meys at Ugent.be
-------------------------------
Disclaimer : http://helpdesk.ugent.be/e-maildisclaimer.php

	[[alternative HTML version deleted]]


From jgbradley1 at gmail.com  Wed Jun 17 00:32:55 2015
From: jgbradley1 at gmail.com (Joshua Bradley)
Date: Tue, 16 Jun 2015 18:32:55 -0400
Subject: [Rd] Improving string concatenation
Message-ID: <CAKShX4A5bVtxVAG+01QjNH0=LaVr6MH48xXs-OtbQQ2247cc_g@mail.gmail.com>

Hi, first time poster here. During my time using R, I have always found
string concatenation to be (what I feel is) unnecessarily complicated by
requiring the use of the paste() or similar commands.


When searching for how to concatenate strings in R, several top search
results show answers that say to write your own function or override the
'+' operator.

Sample code like the following from this
<http://stackoverflow.com/questions/4730551/making-a-string-concatenation-operator-in-r>
page

"+" = function(x,y) {
    if(is.character(x) & is.character(y)) {
        return(paste(x , y, sep=""))
    } else {
        .Primitive("+")(x,y)
    }}



An old (2005) post
<https://stat.ethz.ch/pipermail/r-help/2005-February/066709.html> on r-help
mentioned possible performance reasons as to why this type of string
concatenation is not supported out of the box but did not go into detail.
Can someone explain why such a basic task as this must be handled by
paste() instead of just using the '+' operator directly? Would performance
degrade much today if the '+' form of string concatenation were added into
R by default?



Josh Bradley

	[[alternative HTML version deleted]]


From f.harrell at Vanderbilt.Edu  Wed Jun 17 01:10:03 2015
From: f.harrell at Vanderbilt.Edu (Frank Harrell)
Date: Tue, 16 Jun 2015 18:10:03 -0500
Subject: [Rd] Different behavior of model.matrix between R 3.2 and  R3.1.1
In-Reply-To: <557E36CF.6010302@vanderbilt.edu>
References: <557E36CF.6010302@vanderbilt.edu>
Message-ID: <5580ACCB.7060802@vanderbilt.edu>

Terry Therneau has been very helpful on r-help but we can't figure out 
what change in R in the past months made extra columns appear in 
model.matrix when the terms object is subsetted to remove stratification 
factors in a Cox model.  Terry has changed his logic in the survival 
package to avoid this issue but he requires generating a larger design 
matrix then dropping columns.

A simple example is below.


strat <- function(x) x
d <- expand.grid(a=c('a1','a2'), b=c('b1','b2'))
d$y <- c(1,3,2,4)
f <- y ~ a * strat(b)
m <- model.frame(f, data=d)
Terms <- drop.terms(terms(f, data=d), 2)
model.matrix(Terms, m)

   (Intercept) aa2 aa1:strat(b)b2 aa2:strat(b)b2
1           1   0              0              0
2           1   1              0              0
3           1   0              1              0
4           1   1              0              1
. . .

The column corresponding to a='a1' b='b2' should not be there
(aa1:strat(b)b2).

This does seem to be a change in R.  Any help appreciated.


Terms attributes factor and term.labels are:

attr(,"factors")
          a a:strat(b)
y        0          0
a        1          2
strat(b) 0          1
attr(,"term.labels")
[1] "a"          "a:strat(b)"


Frank


From csardi.gabor at gmail.com  Wed Jun 17 02:13:24 2015
From: csardi.gabor at gmail.com (=?UTF-8?B?R8OhYm9yIENzw6FyZGk=?=)
Date: Tue, 16 Jun 2015 20:13:24 -0400
Subject: [Rd] Improving string concatenation
In-Reply-To: <CAKShX4A5bVtxVAG+01QjNH0=LaVr6MH48xXs-OtbQQ2247cc_g@mail.gmail.com>
References: <CAKShX4A5bVtxVAG+01QjNH0=LaVr6MH48xXs-OtbQQ2247cc_g@mail.gmail.com>
Message-ID: <CABtg=Km2kx3vGQiUXDksYB867WZZa9Q70Om0Hkk4ZYU9xhxc-w@mail.gmail.com>

On Tue, Jun 16, 2015 at 6:32 PM, Joshua Bradley <jgbradley1 at gmail.com> wrote:
[...]
> An old (2005) post
> <https://stat.ethz.ch/pipermail/r-help/2005-February/066709.html> on r-help
> mentioned possible performance reasons as to why this type of string
> concatenation is not supported out of the box but did not go into detail.
> Can someone explain why such a basic task as this must be handled by
> paste() instead of just using the '+' operator directly?

Well, R-core's reason was in that email thread, quoting:

"The issue is that only coercion between numeric
(broad sense, including complex) types is supported for the arithmetical
operators, presumably to avoid the ambiguity of things like

x <- 123.45
y <- as.character(1)
x + y

Should that be 124.45 or "123.451"?  One of the difficulties of any
dispatch on two arguments is how to do the best matching on two classes,
especially with symmetric operators like "+".  Internally R favours simple
fast rules."

Personally, I am not really convinced by this, because what currently
happens is this:

1 + "1"
#> Error in 1 + "1" : non-numeric argument to binary operator
"1" + 1
#> Error in "1" + 1 : non-numeric argument to binary operator

which is perfectly fine behavior, and it could stay the same with a
'+' string concatenation operator, i.e.:
- if both arguments are characters, call paste(),
- otherwise go on and do whatever is being done right now.
In other words, coercion to string is not important in the '+' operator.

> Would performance
> degrade much today if the '+' form of string concatenation were added into
> R by default?

Personally, I highly doubt it, but I don't have a benchmark to back this up.

Gabor

[...]


From hpages at fredhutch.org  Wed Jun 17 02:24:47 2015
From: hpages at fredhutch.org (=?windows-1252?Q?Herv=E9_Pag=E8s?=)
Date: Tue, 16 Jun 2015 17:24:47 -0700
Subject: [Rd] Improving string concatenation
In-Reply-To: <CAKShX4A5bVtxVAG+01QjNH0=LaVr6MH48xXs-OtbQQ2247cc_g@mail.gmail.com>
References: <CAKShX4A5bVtxVAG+01QjNH0=LaVr6MH48xXs-OtbQQ2247cc_g@mail.gmail.com>
Message-ID: <5580BE4F.8060401@fredhutch.org>

Hi Joshua,

On 06/16/2015 03:32 PM, Joshua Bradley wrote:
> Hi, first time poster here. During my time using R, I have always found
> string concatenation to be (what I feel is) unnecessarily complicated by
> requiring the use of the paste() or similar commands.
>
>
> When searching for how to concatenate strings in R, several top search
> results show answers that say to write your own function or override the
> '+' operator.
>
> Sample code like the following from this
> <http://stackoverflow.com/questions/4730551/making-a-string-concatenation-operator-in-r>
> page
>
> "+" = function(x,y) {
>      if(is.character(x) & is.character(y)) {
>          return(paste(x , y, sep=""))
>      } else {
>          .Primitive("+")(x,y)
>      }}

Note that paste0() is a more convenient and more efficient way to
concatenate strings:

   paste0(x, y)  # no need to specify 'sep', no separator is inserted

Related to this, one thing that has always bothered me is the
different/inconsistent recycling schemes used by different binary
operations in R:

 > 1:3 + integer(0)
integer(0)

 > c("a", "b", "c") >= character(0)
logical(0)

 > paste0(c("a", "b", "c"), character(0))
[1] "a" "b" "c"

 > mapply(paste0, c("a", "b", "c"), character(0))
Error in mapply(paste0, c("a", "b", "c"), character(0)) :
   zero-length inputs cannot be mixed with those of non-zero length

If I was to override `+` to concatenate strings, I would make it stick
to the recycling scheme used by arithmetic and comparison operators
(which is the most sensible of all IMO).

H.

>
>
>
> An old (2005) post
> <https://stat.ethz.ch/pipermail/r-help/2005-February/066709.html> on r-help
> mentioned possible performance reasons as to why this type of string
> concatenation is not supported out of the box but did not go into detail.
> Can someone explain why such a basic task as this must be handled by
> paste() instead of just using the '+' operator directly? Would performance
> degrade much today if the '+' form of string concatenation were added into
> R by default?
>
>
>
> Josh Bradley
>
> 	[[alternative HTML version deleted]]
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>

-- 
Herv? Pag?s

Program in Computational Biology
Division of Public Health Sciences
Fred Hutchinson Cancer Research Center
1100 Fairview Ave. N, M1-B514
P.O. Box 19024
Seattle, WA 98109-1024

E-mail: hpages at fredhutch.org
Phone:  (206) 667-5791
Fax:    (206) 667-1319


From csardi.gabor at gmail.com  Wed Jun 17 02:35:34 2015
From: csardi.gabor at gmail.com (=?UTF-8?B?R8OhYm9yIENzw6FyZGk=?=)
Date: Tue, 16 Jun 2015 20:35:34 -0400
Subject: [Rd] Improving string concatenation
In-Reply-To: <5580BE4F.8060401@fredhutch.org>
References: <CAKShX4A5bVtxVAG+01QjNH0=LaVr6MH48xXs-OtbQQ2247cc_g@mail.gmail.com>
	<5580BE4F.8060401@fredhutch.org>
Message-ID: <CABtg=KmfPxZsW7Bfn8EALQb5aT03cMXt0sDzam=ECmhUydb=Sw@mail.gmail.com>

On Tue, Jun 16, 2015 at 8:24 PM, Herv? Pag?s <hpages at fredhutch.org> wrote:
[...]
>
> If I was to override `+` to concatenate strings, I would make it stick
> to the recycling scheme used by arithmetic and comparison operators
> (which is the most sensible of all IMO).

Yeah, I agree, paste's recycling rules are sometimes painful. This
could be "fixed" with a nice new '+' concatenation operator, too. :)

Gabor

> H.

[...]


From ccberry at ucsd.edu  Wed Jun 17 04:26:42 2015
From: ccberry at ucsd.edu (Charles C. Berry)
Date: Tue, 16 Jun 2015 19:26:42 -0700
Subject: [Rd] Different behavior of model.matrix between R 3.2 and R3.1.1
In-Reply-To: <5580ACCB.7060802@vanderbilt.edu>
References: <557E36CF.6010302@vanderbilt.edu> <5580ACCB.7060802@vanderbilt.edu>
Message-ID: <alpine.OSX.2.11.1506161921440.1171@charles-berrys-macbook.local>

On Tue, 16 Jun 2015, Frank Harrell wrote:

> Terry Therneau has been very helpful on r-help but we can't figure out what 
> change in R in the past months made extra columns appear in model.matrix when 
> the terms object is subsetted to remove stratification factors in a Cox 
> model.  Terry has changed his logic in the survival package to avoid this 
> issue but he requires generating a larger design matrix then dropping 
> columns.
>
> A simple example is below.
>
>
> strat <- function(x) x
> d <- expand.grid(a=c('a1','a2'), b=c('b1','b2'))
> d$y <- c(1,3,2,4)
> f <- y ~ a * strat(b)
> m <- model.frame(f, data=d)
> Terms <- drop.terms(terms(f, data=d), 2)
> model.matrix(Terms, m)
>
>  (Intercept) aa2 aa1:strat(b)b2 aa2:strat(b)b2
> 1           1   0              0              0
> 2           1   1              0              0
> 3           1   0              1              0
> 4           1   1              0              1
> . . .
>
> The column corresponding to a='a1' b='b2' should not be there
> (aa1:strat(b)b2).
>
> This does seem to be a change in R.  Any help appreciated.

I get the same results with "Trick or Treat" == R 2.15.2, so the change 
must be before late 2012.

HTH,

Chuck


From jgbradley1 at gmail.com  Wed Jun 17 04:30:04 2015
From: jgbradley1 at gmail.com (Joshua Bradley)
Date: Tue, 16 Jun 2015 22:30:04 -0400
Subject: [Rd] Improving string concatenation
In-Reply-To: <CABtg=KmfPxZsW7Bfn8EALQb5aT03cMXt0sDzam=ECmhUydb=Sw@mail.gmail.com>
References: <CAKShX4A5bVtxVAG+01QjNH0=LaVr6MH48xXs-OtbQQ2247cc_g@mail.gmail.com>
	<5580BE4F.8060401@fredhutch.org>
	<CABtg=KmfPxZsW7Bfn8EALQb5aT03cMXt0sDzam=ECmhUydb=Sw@mail.gmail.com>
Message-ID: <CAKShX4DCwKwuq7Q7hBFkMebPAkc=4SU=LWq+gEEHeFT35XuhFQ@mail.gmail.com>

One of the poster's on the SO post I linked to previously suggested this
but if '+' were made to be S4 compliant, then adding the ability to concat
strings with '+' would be a relatively simple addition (no pun intended) to
the code base I believe. With a lot of other languages supporting this kind
of concatenation, this is what surprised me most when first learning R.

This is where my (lack of) experience in R starts to show and why I brought
up the question about performance. I'm wondering how bad performance would
be effected by making '+' (or all arithmetic operators in general) S4
compliant.

Josh Bradley

On Tue, Jun 16, 2015 at 8:35 PM, G?bor Cs?rdi <csardi.gabor at gmail.com>
wrote:

> On Tue, Jun 16, 2015 at 8:24 PM, Herv? Pag?s <hpages at fredhutch.org> wrote:
> [...]
> >
> > If I was to override `+` to concatenate strings, I would make it stick
> > to the recycling scheme used by arithmetic and comparison operators
> > (which is the most sensible of all IMO).
>
> Yeah, I agree, paste's recycling rules are sometimes painful. This
> could be "fixed" with a nice new '+' concatenation operator, too. :)
>
> Gabor
>
> > H.
>
> [...]
>

	[[alternative HTML version deleted]]


From csardi.gabor at gmail.com  Wed Jun 17 04:40:13 2015
From: csardi.gabor at gmail.com (=?UTF-8?B?R8OhYm9yIENzw6FyZGk=?=)
Date: Tue, 16 Jun 2015 22:40:13 -0400
Subject: [Rd] Improving string concatenation
In-Reply-To: <CAKShX4DCwKwuq7Q7hBFkMebPAkc=4SU=LWq+gEEHeFT35XuhFQ@mail.gmail.com>
References: <CAKShX4A5bVtxVAG+01QjNH0=LaVr6MH48xXs-OtbQQ2247cc_g@mail.gmail.com>
	<5580BE4F.8060401@fredhutch.org>
	<CABtg=KmfPxZsW7Bfn8EALQb5aT03cMXt0sDzam=ECmhUydb=Sw@mail.gmail.com>
	<CAKShX4DCwKwuq7Q7hBFkMebPAkc=4SU=LWq+gEEHeFT35XuhFQ@mail.gmail.com>
Message-ID: <CABtg=Kn=mVdajrjFwqt7B1GYLX4ERGY_ccBNWurQJKtMhTgM_w@mail.gmail.com>

On Tue, Jun 16, 2015 at 10:30 PM, Joshua Bradley <jgbradley1 at gmail.com> wrote:
> One of the poster's on the SO post I linked to previously suggested this but
> if '+' were made to be S4 compliant, then adding the ability to concat
> strings with '+' would be a relatively simple addition (no pun intended) to
> the code base I believe. With a lot of other languages supporting this kind
> of concatenation, this is what surprised me most when first learning R.
>
> This is where my (lack of) experience in R starts to show and why I brought
> up the question about performance. I'm wondering how bad performance would
> be effected by making '+' (or all arithmetic operators in general) S4
> compliant.

I don't know much about S4, but '+' is already generic, so
implementation would be
easy I guess. Also, since it is already generic, I don't think this
would affect performance at all. (But FIXME please.)

The reason why it is not implemented is not because it is difficult.

Gabor

> Josh Bradley


From gmbecker at ucdavis.edu  Wed Jun 17 05:00:06 2015
From: gmbecker at ucdavis.edu (Gabriel Becker)
Date: Tue, 16 Jun 2015 20:00:06 -0700
Subject: [Rd] Improving string concatenation
In-Reply-To: <CAKShX4A5bVtxVAG+01QjNH0=LaVr6MH48xXs-OtbQQ2247cc_g@mail.gmail.com>
References: <CAKShX4A5bVtxVAG+01QjNH0=LaVr6MH48xXs-OtbQQ2247cc_g@mail.gmail.com>
Message-ID: <CADwqtCMPAbayj7TENRPtPSXjyFi7wjWfdW9qke7n+PExdwkpbw@mail.gmail.com>

On Jun 16, 2015 3:44 PM, "Joshua Bradley" <jgbradley1 at gmail.com> wrote:
>
> Hi, first time poster here. During my time using R, I have always found
> string concatenation to be (what I feel is) unnecessarily complicated by
> requiring the use of the paste() or similar commands.

I don't follow. In what sense is paste complicated to use? Not in the sense
of it's actual behavior, since what you propose below has identical
behavior. So is your objection simply the number of characters one must
type?

I would argue that having a separate verb makes code much more readable,
particularly at a quick glance. I know a character will come out of paste
no matter what goes in. That is not without value from a code maintenance
perspective. IMHO.

~G

>
>
> When searching for how to concatenate strings in R, several top search
> results show answers that say to write your own function or override the
> '+' operator.
>
> Sample code like the following from this
> <
http://stackoverflow.com/questions/4730551/making-a-string-concatenation-operator-in-r
>
> page
>
> "+" = function(x,y) {
>     if(is.character(x) & is.character(y)) {
>         return(paste(x , y, sep=""))
>     } else {
>         .Primitive("+")(x,y)
>     }}
>
>
>
> An old (2005) post
> <https://stat.ethz.ch/pipermail/r-help/2005-February/066709.html> on
r-help
> mentioned possible performance reasons as to why this type of string
> concatenation is not supported out of the box but did not go into detail.
> Can someone explain why such a basic task as this must be handled by
> paste() instead of just using the '+' operator directly? Would performance
> degrade much today if the '+' form of string concatenation were added into
> R by default?
>
>
>
> Josh Bradley
>
>         [[alternative HTML version deleted]]
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel

	[[alternative HTML version deleted]]


From jgbradley1 at gmail.com  Wed Jun 17 07:25:21 2015
From: jgbradley1 at gmail.com (Joshua Bradley)
Date: Wed, 17 Jun 2015 01:25:21 -0400
Subject: [Rd] Improving string concatenation
In-Reply-To: <CADwqtCMPAbayj7TENRPtPSXjyFi7wjWfdW9qke7n+PExdwkpbw@mail.gmail.com>
References: <CAKShX4A5bVtxVAG+01QjNH0=LaVr6MH48xXs-OtbQQ2247cc_g@mail.gmail.com>
	<CADwqtCMPAbayj7TENRPtPSXjyFi7wjWfdW9qke7n+PExdwkpbw@mail.gmail.com>
Message-ID: <CAKShX4D-LHgmh5cO2xxnLypzSgCWLDEnHopfE00MwbRFpRvmLg@mail.gmail.com>

Bad choice of words I'm afraid. What I'm ultimately pushing for is a
feature request. To allow string concatenation with '+' by default. Sure I
can write my own string addition function (like the example I posted
previously) but I use it so often that I end up putting it in every script
I write.

It is ultimately a matter of readability and syntactic sugar I guess. As an
example, I work in the bioinformatics domain and write R scripts for
pipelines with calls to various programs that require a lot of parameters
to be set/varied. Seeing "paste" everywhere detracts from reading the code
(in my opinion).

This may not be a very strong argument, but to give a bit more objective
reason, I claim its more readable/intuitive because other big languages
have also picked up this convention (C++, java, javascript, python, etc.).


Josh Bradley
Graduate Student
University of Maryland

On Tue, Jun 16, 2015 at 11:00 PM, Gabriel Becker <gmbecker at ucdavis.edu>
wrote:

>
> On Jun 16, 2015 3:44 PM, "Joshua Bradley" <jgbradley1 at gmail.com> wrote:
> >
> > Hi, first time poster here. During my time using R, I have always found
> > string concatenation to be (what I feel is) unnecessarily complicated by
> > requiring the use of the paste() or similar commands.
>
> I don't follow. In what sense is paste complicated to use? Not in the
> sense of it's actual behavior, since what you propose below has identical
> behavior. So is your objection simply the number of characters one must
> type?
>
> I would argue that having a separate verb makes code much more readable,
> particularly at a quick glance. I know a character will come out of paste
> no matter what goes in. That is not without value from a code maintenance
> perspective. IMHO.
>
> ~G
>
> >
> >
> > When searching for how to concatenate strings in R, several top search
> > results show answers that say to write your own function or override the
> > '+' operator.
> >
> > Sample code like the following from this
> > <
> http://stackoverflow.com/questions/4730551/making-a-string-concatenation-operator-in-r
> >
> > page
> >
> > "+" = function(x,y) {
> >     if(is.character(x) & is.character(y)) {
> >         return(paste(x , y, sep=""))
> >     } else {
> >         .Primitive("+")(x,y)
> >     }}
> >
> >
> >
> > An old (2005) post
> > <https://stat.ethz.ch/pipermail/r-help/2005-February/066709.html> on
> r-help
> > mentioned possible performance reasons as to why this type of string
> > concatenation is not supported out of the box but did not go into detail.
> > Can someone explain why such a basic task as this must be handled by
> > paste() instead of just using the '+' operator directly? Would
> performance
> > degrade much today if the '+' form of string concatenation were added
> into
> > R by default?
> >
> >
> >
> > Josh Bradley
> >
> >         [[alternative HTML version deleted]]
> >
> > ______________________________________________
> > R-devel at r-project.org mailing list
> > https://stat.ethz.ch/mailman/listinfo/r-devel
>

	[[alternative HTML version deleted]]


From jon.skoien at jrc.ec.europa.eu  Wed Jun 17 10:27:10 2015
From: jon.skoien at jrc.ec.europa.eu (Jon Skoien)
Date: Wed, 17 Jun 2015 10:27:10 +0200
Subject: [Rd] Add-on argument in sample()
In-Reply-To: <op.x0bmb4ju3euttn@zukd208>
References: <D62EEDC839E38446B9F9378AFA4408E983EEA95E@mbxparis01.recherche.curie.fr>
	<op.x0bmb4ju3euttn@zukd208>
Message-ID: <55812F5E.6020700@jrc.ec.europa.eu>



On 6/16/2015 1:32 PM, Peter Meissner wrote:
> Am .06.2015, 14:55 Uhr, schrieb Millot Gael <Gael.Millot at curie.fr>:
>
>> Hi.
>>
>> I have a problem with the default behavior of sample(), which performs
>> sample(1:x) when x is a single value.
>> This behavior is well explained in ?sample.
>> However, this behavior is annoying when the number of value is not
>> predictable. Would it be possible to add an argument
>> that desactivates this and perform the sampling on a single value ?
>> Examples:
>>> sample(10, size = 1, replace = FALSE)
>> 10
>>
>>> sample(10, size = 3, replace = TRUE)
>> 10 10 10
>>
>>> sample(10, size = 3, replace = FALSE)
>> Error
>
> I think the problem here is that the function actually does what you
> would expect it to do given a statistic perspective. A sample of size
> three from a population of one without allowing to draw elements again
> that were drawn already is simply not defined. What shall the function
> give back?


If I understand right, this error is exactly what the poster would like 
to see, but which you dont get currently. If length(population) == 1, 
you will now sample from 1:population, not the population itself. So:

 > sample(8:10, 3, replace = FALSE)
[1] 10  8  9
 > sample(9:10, 3, replace = FALSE)
Error in sample.int(length(x), size, replace, prob) :
   cannot take a sample larger than the population when 'replace = FALSE'
 > sample(10:10, 3, replace = FALSE)
[1]  8 10  2

I have to admit that I also find this behaviour inconsistent, even if it 
is well described already on the first line of the details in the 
documentation. It is definitely a feature which can cause some trouble, 
and where the tests might end up more complicated than you would first 
think.


>
> ... You can always wrap your code in a try() like this to prevent errors
> to break loops or functions:
>
> try(sample(...))

No error is given when length(population) == 1, and the result might be 
perfectly valid if population is variable. So this will easily stay in 
the script as an undetected bug.

>
> ... or you might check your arguments before execution:
>
>
> if ( !replace & length(population) >= size ){
>    sample(population, size = size , replace = replace)
> }else{
>    ...
> }

This test is not sufficient if length(population) == size == 1, so you 
will also need to check for this special case:

if (length(population) == 1 & size == 1) {
   population
} else if (!replace & length(population) >= size) {
   sample(population, size = size, replace = replace)
} else {
   ...
}

Then the question would be if this test could be replaced with a new 
argument to sample, e.g. expandSingle, which has TRUE as default for 
backward compatibility, but FALSE if you dont want population to be 
expanded to 1:population. It could certainly be useful in some cases, 
but you still need to know about the expansion to use it. I think most 
of these bugs occur because users did not think about the expansion in 
the first place or did not realize that their population could be of 
length 1 in some situations. These users would therefore not think about 
changing the argument either.

Cheers,
Jon

>
>
>>
>> Many thanks for your help.
>>
>> Best wishes,
>>
>> Gael Millot.
>>
>>
>> Gael Millot
>> UMR 3244 (IC-CNRS-UPMC) et Universite Pierre et Marie Curie
>> Equipe Recombinaison et instabilite genetique
>> Pav Trouillet Rossignol 5eme etage
>> Institut Curie
>> 26 rue d'Ulm
>> 75248 Paris Cedex 05
>> FRANCE
>> tel : 33 1 56 24 66 34
>> fax : 33 1 56 24 66 44
>> Email : gael.millot at curie.fr
>> http://perso.curie.fr/Gael.Millot/index.html
>>
>>
>>     [[alternative HTML version deleted]]
>>
>> ______________________________________________
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel
>
>
> Best, Peter
>
> --
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel

-- 
Jon Olav Sk?ien
Joint Research Centre - European Commission
Institute for Environment and Sustainability (IES)
Climate Risk Management Unit

Via Fermi 2749, TP 100-01,  I-21027 Ispra (VA), ITALY

jon.skoien at jrc.ec.europa.eu
Tel:  +39 0332 789205

Disclaimer: Views expressed in this email are those of the individual 
and do not necessarily represent official views of the European Commission.


From murdoch.duncan at gmail.com  Wed Jun 17 12:58:04 2015
From: murdoch.duncan at gmail.com (Duncan Murdoch)
Date: Wed, 17 Jun 2015 07:58:04 -0300
Subject: [Rd] Bugzilla activity?
In-Reply-To: <1434482294.16367.9.camel@club.fr>
References: <1434482294.16367.9.camel@club.fr>
Message-ID: <558152BC.5090207@gmail.com>

On 16/06/2015 4:18 PM, Milan Bouchet-Valat wrote:
> Hi!
> 
> I was wondering whether anybody was looking at the bugs on Bugzilla. I'm
> asking because I've seen bugs tackled on the mailing list quite quickly,
> but two fully reproducible reports I've filed on Bugzilla haven't
> triggered any reaction in several weeks (for the older one).
> 
> FWIW, these are:
> - Line goes beyond plot region
> https://bugs.r-project.org/bugzilla3/show_bug.cgi?id=16299
> - format() does not respect decimal.mark="." when options(OutDec=",")
> https://bugs.r-project.org/bugzilla3/show_bug.cgi?id=16411

Bugzilla bugs are read, but they aren't necessarily dealt with
instantly.  You can see actions occurring if you do a search for "all"
bugs, not just open ones.

The reason that your bugs haven't been dealt with is the simple
tautology that nobody has dealt with them.  It might be faster if you
find the patch and submit that, but even then there's no guarantee that
a volunteer will step forward to check it.

Duncan Murdoch


From murdoch.duncan at gmail.com  Wed Jun 17 13:02:54 2015
From: murdoch.duncan at gmail.com (Duncan Murdoch)
Date: Wed, 17 Jun 2015 08:02:54 -0300
Subject: [Rd] Code demos via HTML help gives an error
In-Reply-To: <CAFDcVCT0dAFip4SLyjk9_B1_z98CQuMQDcn+CV0Cxb2JE3+haA@mail.gmail.com>
References: <CAFDcVCT0dAFip4SLyjk9_B1_z98CQuMQDcn+CV0Cxb2JE3+haA@mail.gmail.com>
Message-ID: <558153DE.8090202@gmail.com>

On 16/06/2015 4:20 PM, Henrik Bengtsson wrote:
> PROBLEM:
> I'm getting error:
> 
> Error in order(matches$Position) : argument 1 is not a vector
> 
> Whenever I try to access a package's "Code demos" page via the link on
> the package HTML index page.
> 
> 
> SOME TROUBLESHOOTING:
> Looking at for instance the 'stats' package.  The "Code demos" URL
> takes the form
> 
>  http://127.0.0.1:30200/library/stats/demo
> 
> Click on this, takes me to
> 
>  http://127.0.0.1:30200/doc/html/Search?package=stats&agrep=FALSE&types=demo
> 
> 
> WHERE:
> I see this on R devel (2015-06-15 r68521) and R 3.2.1 RC (2015-06-14
> r68516) - both on Platform: x86_64-w64-mingw32/x64 (64-bit).  Haven't
> checked other platforms.
> 
> 
> Regarding the imminent release of R 3.2.1; Sorry, I rarely use demos,
> so it's only in this very moment I noticed.
> 

A fix won't make it into 3.2.1, but I will try to fix it in
3.2.1-patched, which will become 3.2.2 eventually, unless I forget.
Could I ask you to post a bug report about it if you don't hear that
it's fixed in a few days?

Duncan Murdoch


From henrik.bengtsson at ucsf.edu  Wed Jun 17 14:30:06 2015
From: henrik.bengtsson at ucsf.edu (Henrik Bengtsson)
Date: Wed, 17 Jun 2015 05:30:06 -0700
Subject: [Rd] Code demos via HTML help gives an error
In-Reply-To: <558153DE.8090202@gmail.com>
References: <CAFDcVCT0dAFip4SLyjk9_B1_z98CQuMQDcn+CV0Cxb2JE3+haA@mail.gmail.com>
	<558153DE.8090202@gmail.com>
Message-ID: <CAFDcVCSyONj3vzoYN3zzOJ2a3FUgXc7CEPVfraSC+aPDO1=WMQ@mail.gmail.com>

Went ahead and did it directly, cf. PR #16432
(https://bugs.r-project.org/bugzilla3/show_bug.cgi?id=16432).  /H

On Wed, Jun 17, 2015 at 4:02 AM, Duncan Murdoch
<murdoch.duncan at gmail.com> wrote:
> On 16/06/2015 4:20 PM, Henrik Bengtsson wrote:
>> PROBLEM:
>> I'm getting error:
>>
>> Error in order(matches$Position) : argument 1 is not a vector
>>
>> Whenever I try to access a package's "Code demos" page via the link on
>> the package HTML index page.
>>
>>
>> SOME TROUBLESHOOTING:
>> Looking at for instance the 'stats' package.  The "Code demos" URL
>> takes the form
>>
>>  http://127.0.0.1:30200/library/stats/demo
>>
>> Click on this, takes me to
>>
>>  http://127.0.0.1:30200/doc/html/Search?package=stats&agrep=FALSE&types=demo
>>
>>
>> WHERE:
>> I see this on R devel (2015-06-15 r68521) and R 3.2.1 RC (2015-06-14
>> r68516) - both on Platform: x86_64-w64-mingw32/x64 (64-bit).  Haven't
>> checked other platforms.
>>
>>
>> Regarding the imminent release of R 3.2.1; Sorry, I rarely use demos,
>> so it's only in this very moment I noticed.
>>
>
> A fix won't make it into 3.2.1, but I will try to fix it in
> 3.2.1-patched, which will become 3.2.2 eventually, unless I forget.
> Could I ask you to post a bug report about it if you don't hear that
> it's fixed in a few days?
>
> Duncan Murdoch
>


From lawrence.michael at gene.com  Wed Jun 17 15:04:07 2015
From: lawrence.michael at gene.com (Michael Lawrence)
Date: Wed, 17 Jun 2015 06:04:07 -0700
Subject: [Rd] Improving string concatenation
In-Reply-To: <CAKShX4DCwKwuq7Q7hBFkMebPAkc=4SU=LWq+gEEHeFT35XuhFQ@mail.gmail.com>
References: <CAKShX4A5bVtxVAG+01QjNH0=LaVr6MH48xXs-OtbQQ2247cc_g@mail.gmail.com>
	<5580BE4F.8060401@fredhutch.org>
	<CABtg=KmfPxZsW7Bfn8EALQb5aT03cMXt0sDzam=ECmhUydb=Sw@mail.gmail.com>
	<CAKShX4DCwKwuq7Q7hBFkMebPAkc=4SU=LWq+gEEHeFT35XuhFQ@mail.gmail.com>
Message-ID: <CAOQ5Nyf+cLHEtRzC-ZJ=bdL7GKgznzhQ2-pb4BjyfAJafdVzbg@mail.gmail.com>

Just to clarify, primitive (C-level) generics do not support dispatch
on basic classes (like character). This is for performance (no need to
consider dispatch on non-objects) and for sanity (in general,
redefining fundamental behaviors is dangerous). It is of course
possible to define a "+" method with a signature containing a class
not in the set of basic classes.

On Tue, Jun 16, 2015 at 7:30 PM, Joshua Bradley <jgbradley1 at gmail.com> wrote:
> One of the poster's on the SO post I linked to previously suggested this
> but if '+' were made to be S4 compliant, then adding the ability to concat
> strings with '+' would be a relatively simple addition (no pun intended) to
> the code base I believe. With a lot of other languages supporting this kind
> of concatenation, this is what surprised me most when first learning R.
>
> This is where my (lack of) experience in R starts to show and why I brought
> up the question about performance. I'm wondering how bad performance would
> be effected by making '+' (or all arithmetic operators in general) S4
> compliant.
>
> Josh Bradley
>
> On Tue, Jun 16, 2015 at 8:35 PM, G?bor Cs?rdi <csardi.gabor at gmail.com>
> wrote:
>
>> On Tue, Jun 16, 2015 at 8:24 PM, Herv? Pag?s <hpages at fredhutch.org> wrote:
>> [...]
>> >
>> > If I was to override `+` to concatenate strings, I would make it stick
>> > to the recycling scheme used by arithmetic and comparison operators
>> > (which is the most sensible of all IMO).
>>
>> Yeah, I agree, paste's recycling rules are sometimes painful. This
>> could be "fixed" with a nice new '+' concatenation operator, too. :)
>>
>> Gabor
>>
>> > H.
>>
>> [...]
>>
>
>         [[alternative HTML version deleted]]
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From csardi.gabor at gmail.com  Wed Jun 17 15:19:42 2015
From: csardi.gabor at gmail.com (=?UTF-8?B?R8OhYm9yIENzw6FyZGk=?=)
Date: Wed, 17 Jun 2015 09:19:42 -0400
Subject: [Rd] Improving string concatenation
In-Reply-To: <CAOQ5Nyf+cLHEtRzC-ZJ=bdL7GKgznzhQ2-pb4BjyfAJafdVzbg@mail.gmail.com>
References: <CAKShX4A5bVtxVAG+01QjNH0=LaVr6MH48xXs-OtbQQ2247cc_g@mail.gmail.com>
	<5580BE4F.8060401@fredhutch.org>
	<CABtg=KmfPxZsW7Bfn8EALQb5aT03cMXt0sDzam=ECmhUydb=Sw@mail.gmail.com>
	<CAKShX4DCwKwuq7Q7hBFkMebPAkc=4SU=LWq+gEEHeFT35XuhFQ@mail.gmail.com>
	<CAOQ5Nyf+cLHEtRzC-ZJ=bdL7GKgznzhQ2-pb4BjyfAJafdVzbg@mail.gmail.com>
Message-ID: <CABtg=KkYPtwV4PvET=dnGRdsppc6DU+GzcgL5fPtapok8u9YTA@mail.gmail.com>

On Wed, Jun 17, 2015 at 9:04 AM, Michael Lawrence
<lawrence.michael at gene.com> wrote:
> Just to clarify, primitive (C-level) generics do not support dispatch
> on basic classes (like character). This is for performance (no need to
> consider dispatch on non-objects) and for sanity (in general,
> redefining fundamental behaviors is dangerous). It is of course
> possible to define a "+" method with a signature containing a class
> not in the set of basic classes.

I see, thanks for pointing this out.

Still, I see this as a technicality. The current "+" clearly detects
if it gets a non-numeric argument, because it gives an error message
for it. So in this case it could just check if both sides are
characters, and if that's true, concatenate them. So there is no
performance loss at all.

This is obviously not as clean as a dispatch, but I think it is still
better than requiring people to add classes to their strings,
especially if the strings are literals.

Btw. for some motivation, here is a (surely incomplete) list of
languages with '+' as the string concatenation operator:

ALGOL 68, BASIC, C++, C#, Cobra, Pascal, Object Pascal, Eiffel, Go,
JavaScript, Java, Python, Turing, Ruby, Windows PowerShell,
Objective-C, F#, Scala, Ya.

and there are a lot of others that have a different operator for it:

Haskell, Erlang, Ada, AppleScript, COBOL (for literals only), Curl,
Seed7, VHDL, Visual Basic, Excel, FreeBASIC, Perl, PHP, Maple, Icon,
Standard SQL, PL/I, Rexx, Mathematica, Lua, Smalltalk, OCaml, Standard
ML, F#, rc, Fortran.

Source: https://en.wikipedia.org/wiki/Comparison_of_programming_languages_(strings)

Yes, even Fortran has one, and in C, I can simply write "literal1"
"literal2" and they'll be concatenated. It is only for literals, but
still very useful.

Best,
Gabor


From radford at cs.toronto.edu  Wed Jun 17 16:18:03 2015
From: radford at cs.toronto.edu (Radford Neal)
Date: Wed, 17 Jun 2015 10:18:03 -0400
Subject: [Rd] Add-on argument in sample()
In-Reply-To: <mailman.19.1434535203.8532.r-devel@r-project.org>
References: <mailman.19.1434535203.8532.r-devel@r-project.org>
Message-ID: <20150617141803.GA1849@cs.toronto.edu>

> Then the question would be if this test could be replaced with a new 
> argument to sample, e.g. expandSingle, which has TRUE as default for 
> backward compatibility, but FALSE if you dont want population to be 
> expanded to 1:population. It could certainly be useful in some cases, 
> but you still need to know about the expansion to use it. I think most 
> of these bugs occur because users did not think about the expansion in 
> the first place or did not realize that their population could be of 
> length 1 in some situations. These users would therefore not think about 
> changing the argument either.

I think the solution might be to make sample always treat the first
argument as the vector to sample from if it has a "dim" attribute that
explicitly specifies that it is a one-dimensional array.  The effect
of this would be that sample(10,1) would sample from 1:10, as at
present, but sample(array(10),1) would sample from the length-one
vector with element 10 (and hence always return 10).

With this change, you can easily ensure that sample(v,1) always samples
from v even when it has length one by rewriting it to sample(array(v),1).

It's of course possible that some existing code relies on the current
behaviour, but probably not much existing code, since one-dimensional
arrays are (I think) not very common at present.

A bigger gain would come if one also introduced a new sequence operator
that creates a sequence that is marked as a one-dimensional array, which
would be part of a solution to several other problems as well, as I
propose at http://www.cs.utoronto.ca/~radford/ftp/R-lang-ext.pdf

   Radford Neal


From wdunlap at tibco.com  Wed Jun 17 18:19:48 2015
From: wdunlap at tibco.com (William Dunlap)
Date: Wed, 17 Jun 2015 09:19:48 -0700
Subject: [Rd] Add-on argument in sample()
In-Reply-To: <20150617141803.GA1849@cs.toronto.edu>
References: <mailman.19.1434535203.8532.r-devel@r-project.org>
	<20150617141803.GA1849@cs.toronto.edu>
Message-ID: <CAF8bMcZLpmMtPzDQmw4T4api57c0u7gvSGpTNGaxzcTcH51qPg@mail.gmail.com>

I don't like the idea of having a length-1 dim attribute trigger some
behavior of sample.  (Should a length-2 dim cause it to sample
rows of a matrix, as unique() and duplicated() do?).

S+'s sample() had another argument, 'n', that could be used to
specify the size of the population to sample from.  It had to be a single
nonnegative integral number and only one of the 'x' and 'n'
arguments could be supplied.  This was not optimal, but the help
file discouraged the use of the 'x' argument and encouraged the use
of subscripting with sample()'s output instead of having sample()
do the subscripting.

S+'s rsample() (called by sample())  only had the 'n' argument,
you could not input the population to sample from.  It also separated
sampling from shuffling, which is handy when taking large samples
from huge populations - shuffling the output often took most of
the time.

The S+ argument lists are:
sample(x, size = n, replace = F, prob = NULL, n = NULL, ...)
rsample(n, size = n, replace = F, prob = NULL,
        bigdata = F, minimal = NULL, ..., order = T)




Bill Dunlap
TIBCO Software
wdunlap tibco.com

On Wed, Jun 17, 2015 at 7:18 AM, Radford Neal <radford at cs.toronto.edu>
wrote:

> > Then the question would be if this test could be replaced with a new
> > argument to sample, e.g. expandSingle, which has TRUE as default for
> > backward compatibility, but FALSE if you dont want population to be
> > expanded to 1:population. It could certainly be useful in some cases,
> > but you still need to know about the expansion to use it. I think most
> > of these bugs occur because users did not think about the expansion in
> > the first place or did not realize that their population could be of
> > length 1 in some situations. These users would therefore not think about
> > changing the argument either.
>
> I think the solution might be to make sample always treat the first
> argument as the vector to sample from if it has a "dim" attribute that
> explicitly specifies that it is a one-dimensional array.  The effect
> of this would be that sample(10,1) would sample from 1:10, as at
> present, but sample(array(10),1) would sample from the length-one
> vector with element 10 (and hence always return 10).
>
> With this change, you can easily ensure that sample(v,1) always samples
> from v even when it has length one by rewriting it to sample(array(v),1).
>
> It's of course possible that some existing code relies on the current
> behaviour, but probably not much existing code, since one-dimensional
> arrays are (I think) not very common at present.
>
> A bigger gain would come if one also introduced a new sequence operator
> that creates a sequence that is marked as a one-dimensional array, which
> would be part of a solution to several other problems as well, as I
> propose at http://www.cs.utoronto.ca/~radford/ftp/R-lang-ext.pdf
>
>    Radford Neal
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>

	[[alternative HTML version deleted]]


From wdunlap at tibco.com  Wed Jun 17 18:45:51 2015
From: wdunlap at tibco.com (William Dunlap)
Date: Wed, 17 Jun 2015 09:45:51 -0700
Subject: [Rd] Improving string concatenation
In-Reply-To: <CAKShX4D-LHgmh5cO2xxnLypzSgCWLDEnHopfE00MwbRFpRvmLg@mail.gmail.com>
References: <CAKShX4A5bVtxVAG+01QjNH0=LaVr6MH48xXs-OtbQQ2247cc_g@mail.gmail.com>
	<CADwqtCMPAbayj7TENRPtPSXjyFi7wjWfdW9qke7n+PExdwkpbw@mail.gmail.com>
	<CAKShX4D-LHgmh5cO2xxnLypzSgCWLDEnHopfE00MwbRFpRvmLg@mail.gmail.com>
Message-ID: <CAF8bMcZ1pRVVN2ZhDZ1EEq_vMN_1WzNvyw1e24cE=TDa=m+mmQ@mail.gmail.com>

> ... adding the ability to concat
> strings with '+' would be a relatively simple addition (no pun intended)
to
> the code base I believe. With a lot of other languages supporting this
kind
> of concatenation, this is what surprised me most when first learning R.

Wow!  R has a lot of surprising features and I would have thought
this would be quite a way down the list.

How would this new '+' deal with factors, as paste does or as the current
'+'
does?  Would number+string and string+number cause errors (as in current
'+' in R and python) or coerce both to strings (as in current R:paste and
in perl's '+').

Having '+' work on all types of data can let improperly imported data
get further into the system before triggering an error.  I see lots of
errors
reported on this list that are due to read.table interpreting text as
character
strings instead of the numbers that the user expected.  Detecting that
error as early as possible is good.



Bill Dunlap
TIBCO Software
wdunlap tibco.com

On Tue, Jun 16, 2015 at 10:25 PM, Joshua Bradley <jgbradley1 at gmail.com>
wrote:

> Bad choice of words I'm afraid. What I'm ultimately pushing for is a
> feature request. To allow string concatenation with '+' by default. Sure I
> can write my own string addition function (like the example I posted
> previously) but I use it so often that I end up putting it in every script
> I write.
>
> It is ultimately a matter of readability and syntactic sugar I guess. As an
> example, I work in the bioinformatics domain and write R scripts for
> pipelines with calls to various programs that require a lot of parameters
> to be set/varied. Seeing "paste" everywhere detracts from reading the code
> (in my opinion).
>
> This may not be a very strong argument, but to give a bit more objective
> reason, I claim its more readable/intuitive because other big languages
> have also picked up this convention (C++, java, javascript, python, etc.).
>
>
> Josh Bradley
> Graduate Student
> University of Maryland
>
> On Tue, Jun 16, 2015 at 11:00 PM, Gabriel Becker <gmbecker at ucdavis.edu>
> wrote:
>
> >
> > On Jun 16, 2015 3:44 PM, "Joshua Bradley" <jgbradley1 at gmail.com> wrote:
> > >
> > > Hi, first time poster here. During my time using R, I have always found
> > > string concatenation to be (what I feel is) unnecessarily complicated
> by
> > > requiring the use of the paste() or similar commands.
> >
> > I don't follow. In what sense is paste complicated to use? Not in the
> > sense of it's actual behavior, since what you propose below has identical
> > behavior. So is your objection simply the number of characters one must
> > type?
> >
> > I would argue that having a separate verb makes code much more readable,
> > particularly at a quick glance. I know a character will come out of paste
> > no matter what goes in. That is not without value from a code maintenance
> > perspective. IMHO.
> >
> > ~G
> >
> > >
> > >
> > > When searching for how to concatenate strings in R, several top search
> > > results show answers that say to write your own function or override
> the
> > > '+' operator.
> > >
> > > Sample code like the following from this
> > > <
> >
> http://stackoverflow.com/questions/4730551/making-a-string-concatenation-operator-in-r
> > >
> > > page
> > >
> > > "+" = function(x,y) {
> > >     if(is.character(x) & is.character(y)) {
> > >         return(paste(x , y, sep=""))
> > >     } else {
> > >         .Primitive("+")(x,y)
> > >     }}
> > >
> > >
> > >
> > > An old (2005) post
> > > <https://stat.ethz.ch/pipermail/r-help/2005-February/066709.html> on
> > r-help
> > > mentioned possible performance reasons as to why this type of string
> > > concatenation is not supported out of the box but did not go into
> detail.
> > > Can someone explain why such a basic task as this must be handled by
> > > paste() instead of just using the '+' operator directly? Would
> > performance
> > > degrade much today if the '+' form of string concatenation were added
> > into
> > > R by default?
> > >
> > >
> > >
> > > Josh Bradley
> > >
> > >         [[alternative HTML version deleted]]
> > >
> > > ______________________________________________
> > > R-devel at r-project.org mailing list
> > > https://stat.ethz.ch/mailman/listinfo/r-devel
> >
>
>         [[alternative HTML version deleted]]
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>

	[[alternative HTML version deleted]]


From csardi.gabor at gmail.com  Wed Jun 17 18:56:54 2015
From: csardi.gabor at gmail.com (=?UTF-8?B?R8OhYm9yIENzw6FyZGk=?=)
Date: Wed, 17 Jun 2015 12:56:54 -0400
Subject: [Rd] Improving string concatenation
In-Reply-To: <CAF8bMcZ1pRVVN2ZhDZ1EEq_vMN_1WzNvyw1e24cE=TDa=m+mmQ@mail.gmail.com>
References: <CAKShX4A5bVtxVAG+01QjNH0=LaVr6MH48xXs-OtbQQ2247cc_g@mail.gmail.com>
	<CADwqtCMPAbayj7TENRPtPSXjyFi7wjWfdW9qke7n+PExdwkpbw@mail.gmail.com>
	<CAKShX4D-LHgmh5cO2xxnLypzSgCWLDEnHopfE00MwbRFpRvmLg@mail.gmail.com>
	<CAF8bMcZ1pRVVN2ZhDZ1EEq_vMN_1WzNvyw1e24cE=TDa=m+mmQ@mail.gmail.com>
Message-ID: <CABtg=KnxaG+7ysX4=fWWzkfCvUkG408YvEwNxT0W1WLEHOJZ4A@mail.gmail.com>

On Wed, Jun 17, 2015 at 12:45 PM, William Dunlap <wdunlap at tibco.com> wrote:
>> ... adding the ability to concat
>> strings with '+' would be a relatively simple addition (no pun intended)
> to
>> the code base I believe. With a lot of other languages supporting this
> kind
>> of concatenation, this is what surprised me most when first learning R.
>
> Wow!  R has a lot of surprising features and I would have thought
> this would be quite a way down the list.

Well, it is hard to guess what users and people in general find
surprising. As '+' is used for string concatenation in essentially all
major scripting (and many other) languages, personally I am not
surprised that this is surprising for people. :)

> How would this new '+' deal with factors, as paste does or as the current
> '+'
> does?

The same as before. It would not change the behavior for other
classes, only basic characters.

> Would number+string and string+number cause errors (as in current
> '+' in R and python) or coerce both to strings (as in current R:paste and
> in perl's '+').

Would cause errors, exactly as it does right now.

> Having '+' work on all types of data can let improperly imported data
> get further into the system before triggering an error.

Nobody is asking for this. Only characters, not all types of data.

> I see lots of
> errors
> reported on this list that are due to read.table interpreting text as
> character
> strings instead of the numbers that the user expected.  Detecting that
> error as early as possible is good.

Isn't that a problem with read.table then? Detecting it there would be
the earliest possible, no?

Gabor

[...]


From avraham.adler at gmail.com  Wed Jun 17 19:27:48 2015
From: avraham.adler at gmail.com (Avraham Adler)
Date: Wed, 17 Jun 2015 13:27:48 -0400
Subject: [Rd] Improving string concatenation
In-Reply-To: <CAKShX4D-LHgmh5cO2xxnLypzSgCWLDEnHopfE00MwbRFpRvmLg@mail.gmail.com>
References: <CAKShX4A5bVtxVAG+01QjNH0=LaVr6MH48xXs-OtbQQ2247cc_g@mail.gmail.com>
	<CADwqtCMPAbayj7TENRPtPSXjyFi7wjWfdW9qke7n+PExdwkpbw@mail.gmail.com>
	<CAKShX4D-LHgmh5cO2xxnLypzSgCWLDEnHopfE00MwbRFpRvmLg@mail.gmail.com>
Message-ID: <CAL6gwnLOg_Keu5vvz5cMMJWu-oJ5rGpmR1CvZ0sWv5xkCODc4w@mail.gmail.com>

On Wed, Jun 17, 2015 at 1:25 AM, Joshua Bradley <jgbradley1 at gmail.com> wrote:
> ?I work in the bioinformatics domain and write R scripts for
> pipelines with calls to various programs that require a lot of parameters
> to be set/varied. Seeing "paste" everywhere detracts from reading the code
> (in my opinion).

In that case, why don't you just write a personal package with that
functionality and automatically load it?

Avi


From jgbradley1 at gmail.com  Wed Jun 17 20:24:08 2015
From: jgbradley1 at gmail.com (Joshua Bradley)
Date: Wed, 17 Jun 2015 14:24:08 -0400
Subject: [Rd] Improving string concatenation
In-Reply-To: <CAF8bMcZ1pRVVN2ZhDZ1EEq_vMN_1WzNvyw1e24cE=TDa=m+mmQ@mail.gmail.com>
References: <CAKShX4A5bVtxVAG+01QjNH0=LaVr6MH48xXs-OtbQQ2247cc_g@mail.gmail.com>
	<CADwqtCMPAbayj7TENRPtPSXjyFi7wjWfdW9qke7n+PExdwkpbw@mail.gmail.com>
	<CAKShX4D-LHgmh5cO2xxnLypzSgCWLDEnHopfE00MwbRFpRvmLg@mail.gmail.com>
	<CAF8bMcZ1pRVVN2ZhDZ1EEq_vMN_1WzNvyw1e24cE=TDa=m+mmQ@mail.gmail.com>
Message-ID: <CAKShX4ACOn7Hnzo_pC+Ar9-r-8Gh3w4R77s7inNLyYto7Qoytg@mail.gmail.com>

> How would this new '+' deal with factors, as paste does or as the current
'+'
> does?  Would number+string and string+number cause errors (as in current
> '+' in R and python) or coerce both to strings (as in current R:paste and
in perl's '+').


I had posted this sample code previously to demonstrate how string
concatenation could be implemented

"+" = function(x,y) {
    if(is.character(x) & is.character(y)) {
        return(paste0(x , y))
    } else {
        .Primitive("+")(x,y)
    }}


so it would only happen if both objects were characters, otherwise you
should expect the same behavior as before with all other classes. This
would be backwards compatible as well since string+string was never
supported before and therefore no one would have previously working code
that could break.

Josh Bradley

	[[alternative HTML version deleted]]


From wdunlap at tibco.com  Wed Jun 17 21:36:59 2015
From: wdunlap at tibco.com (William Dunlap)
Date: Wed, 17 Jun 2015 12:36:59 -0700
Subject: [Rd] Improving string concatenation
In-Reply-To: <CABtg=KnxaG+7ysX4=fWWzkfCvUkG408YvEwNxT0W1WLEHOJZ4A@mail.gmail.com>
References: <CAKShX4A5bVtxVAG+01QjNH0=LaVr6MH48xXs-OtbQQ2247cc_g@mail.gmail.com>
	<CADwqtCMPAbayj7TENRPtPSXjyFi7wjWfdW9qke7n+PExdwkpbw@mail.gmail.com>
	<CAKShX4D-LHgmh5cO2xxnLypzSgCWLDEnHopfE00MwbRFpRvmLg@mail.gmail.com>
	<CAF8bMcZ1pRVVN2ZhDZ1EEq_vMN_1WzNvyw1e24cE=TDa=m+mmQ@mail.gmail.com>
	<CABtg=KnxaG+7ysX4=fWWzkfCvUkG408YvEwNxT0W1WLEHOJZ4A@mail.gmail.com>
Message-ID: <CAF8bMca3jbP9uDMjc35SBbtmpPp87YrNdPsYRepCONJ3Sa115A@mail.gmail.com>

if '+' and paste don't change their behavior with respect to
factors but you encourage people to use '+' instead of paste
then you will run into problems with data.frame columns because
many people don't notice whether a character-like column is
character or factor.  With paste() this is not a problem but with '+'
it is.  I think it is good not to make people worry about this much.

As for the recycling issue, consider calls involving NULL arguments,
  > f <- function(n)paste0(n, " test", if(n!=1)"s", " failed")
  > f(1)
  [1] "1 test failed"
  > f(0)
  [1] "0 tests failed"
If paste0 followed the same recycling rules as "+" then f(1) would return
character(0).  There is a fair bit of code like that on CRAN.

Consider using sprintf() to get the sort of recycling rules that "+" uses
  > sprintf("%s is %d", c("One","Two"), numeric(0))
  character(0)
  > sprintf("%s is %d", c("One","Two"), 17)
  [1] "One is 17" "Two is 17"
  > sprintf("%s is %d", c("One","Two"), 26:27)
  [1] "One is 26" "Two is 27"



Bill Dunlap
TIBCO Software
wdunlap tibco.com

On Wed, Jun 17, 2015 at 9:56 AM, G?bor Cs?rdi <csardi.gabor at gmail.com>
wrote:

> On Wed, Jun 17, 2015 at 12:45 PM, William Dunlap <wdunlap at tibco.com>
> wrote:
> >> ... adding the ability to concat
> >> strings with '+' would be a relatively simple addition (no pun intended)
> > to
> >> the code base I believe. With a lot of other languages supporting this
> > kind
> >> of concatenation, this is what surprised me most when first learning R.
> >
> > Wow!  R has a lot of surprising features and I would have thought
> > this would be quite a way down the list.
>
> Well, it is hard to guess what users and people in general find
> surprising. As '+' is used for string concatenation in essentially all
> major scripting (and many other) languages, personally I am not
> surprised that this is surprising for people. :)
>
> > How would this new '+' deal with factors, as paste does or as the current
> > '+'
> > does?
>
> The same as before. It would not change the behavior for other
> classes, only basic characters.
>
> > Would number+string and string+number cause errors (as in current
> > '+' in R and python) or coerce both to strings (as in current R:paste and
> > in perl's '+').
>
> Would cause errors, exactly as it does right now.
>
> > Having '+' work on all types of data can let improperly imported data
> > get further into the system before triggering an error.
>
> Nobody is asking for this. Only characters, not all types of data.
>
> > I see lots of
> > errors
> > reported on this list that are due to read.table interpreting text as
> > character
> > strings instead of the numbers that the user expected.  Detecting that
> > error as early as possible is good.
>
> Isn't that a problem with read.table then? Detecting it there would be
> the earliest possible, no?
>
> Gabor
>
> [...]
>

	[[alternative HTML version deleted]]


From hpages at fredhutch.org  Thu Jun 18 00:25:25 2015
From: hpages at fredhutch.org (=?windows-1252?Q?Herv=E9_Pag=E8s?=)
Date: Wed, 17 Jun 2015 15:25:25 -0700
Subject: [Rd] Add-on argument in sample()
In-Reply-To: <55812F5E.6020700@jrc.ec.europa.eu>
References: <D62EEDC839E38446B9F9378AFA4408E983EEA95E@mbxparis01.recherche.curie.fr>	<op.x0bmb4ju3euttn@zukd208>
	<55812F5E.6020700@jrc.ec.europa.eu>
Message-ID: <5581F3D5.4090204@fredhutch.org>

Hi,

Special behavior of sample(x, ...) when length(x) is 1 is of course
a bad feature. I think it pre-dates sample.int() which is what people
should use these days if they want the behavior of sample(x, ...) when
length(x) is 1. And because we now have sample.int(), this feature
could in theory be removed from sample(). Unfortunately this would
break a lot of existing code so a warning or some kind of notification
would need to be implemented.

Even if the cost is high, that still sounds better/cleaner to me than
adding an extra argument to sample() to control this (which is only
going to be used by people aware of the problem but people aware of
the problem already know how to workaround it).

Cheers,
H.

On 06/17/2015 01:27 AM, Jon Skoien wrote:
>
>
> On 6/16/2015 1:32 PM, Peter Meissner wrote:
>> Am .06.2015, 14:55 Uhr, schrieb Millot Gael <Gael.Millot at curie.fr>:
>>
>>> Hi.
>>>
>>> I have a problem with the default behavior of sample(), which performs
>>> sample(1:x) when x is a single value.
>>> This behavior is well explained in ?sample.
>>> However, this behavior is annoying when the number of value is not
>>> predictable. Would it be possible to add an argument
>>> that desactivates this and perform the sampling on a single value ?
>>> Examples:
>>>> sample(10, size = 1, replace = FALSE)
>>> 10
>>>
>>>> sample(10, size = 3, replace = TRUE)
>>> 10 10 10
>>>
>>>> sample(10, size = 3, replace = FALSE)
>>> Error
>>
>> I think the problem here is that the function actually does what you
>> would expect it to do given a statistic perspective. A sample of size
>> three from a population of one without allowing to draw elements again
>> that were drawn already is simply not defined. What shall the function
>> give back?
>
>
> If I understand right, this error is exactly what the poster would like
> to see, but which you dont get currently. If length(population) == 1,
> you will now sample from 1:population, not the population itself. So:
>
>  > sample(8:10, 3, replace = FALSE)
> [1] 10  8  9
>  > sample(9:10, 3, replace = FALSE)
> Error in sample.int(length(x), size, replace, prob) :
>    cannot take a sample larger than the population when 'replace = FALSE'
>  > sample(10:10, 3, replace = FALSE)
> [1]  8 10  2
>
> I have to admit that I also find this behaviour inconsistent, even if it
> is well described already on the first line of the details in the
> documentation. It is definitely a feature which can cause some trouble,
> and where the tests might end up more complicated than you would first
> think.
>
>
>>
>> ... You can always wrap your code in a try() like this to prevent errors
>> to break loops or functions:
>>
>> try(sample(...))
>
> No error is given when length(population) == 1, and the result might be
> perfectly valid if population is variable. So this will easily stay in
> the script as an undetected bug.
>
>>
>> ... or you might check your arguments before execution:
>>
>>
>> if ( !replace & length(population) >= size ){
>>    sample(population, size = size , replace = replace)
>> }else{
>>    ...
>> }
>
> This test is not sufficient if length(population) == size == 1, so you
> will also need to check for this special case:
>
> if (length(population) == 1 & size == 1) {
>    population
> } else if (!replace & length(population) >= size) {
>    sample(population, size = size, replace = replace)
> } else {
>    ...
> }
>
> Then the question would be if this test could be replaced with a new
> argument to sample, e.g. expandSingle, which has TRUE as default for
> backward compatibility, but FALSE if you dont want population to be
> expanded to 1:population. It could certainly be useful in some cases,
> but you still need to know about the expansion to use it. I think most
> of these bugs occur because users did not think about the expansion in
> the first place or did not realize that their population could be of
> length 1 in some situations. These users would therefore not think about
> changing the argument either.
>
> Cheers,
> Jon
>
>>
>>
>>>
>>> Many thanks for your help.
>>>
>>> Best wishes,
>>>
>>> Gael Millot.
>>>
>>>
>>> Gael Millot
>>> UMR 3244 (IC-CNRS-UPMC) et Universite Pierre et Marie Curie
>>> Equipe Recombinaison et instabilite genetique
>>> Pav Trouillet Rossignol 5eme etage
>>> Institut Curie
>>> 26 rue d'Ulm
>>> 75248 Paris Cedex 05
>>> FRANCE
>>> tel : 33 1 56 24 66 34
>>> fax : 33 1 56 24 66 44
>>> Email : gael.millot at curie.fr
>>> http://perso.curie.fr/Gael.Millot/index.html
>>>
>>>
>>>     [[alternative HTML version deleted]]
>>>
>>> ______________________________________________
>>> R-devel at r-project.org mailing list
>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>
>>
>> Best, Peter
>>
>> --
>>
>> ______________________________________________
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel
>

-- 
Herv? Pag?s

Program in Computational Biology
Division of Public Health Sciences
Fred Hutchinson Cancer Research Center
1100 Fairview Ave. N, M1-B514
P.O. Box 19024
Seattle, WA 98109-1024

E-mail: hpages at fredhutch.org
Phone:  (206) 667-5791
Fax:    (206) 667-1319


From hpages at fredhutch.org  Thu Jun 18 00:55:21 2015
From: hpages at fredhutch.org (=?UTF-8?B?SGVydsOpIFBhZ8Oocw==?=)
Date: Wed, 17 Jun 2015 15:55:21 -0700
Subject: [Rd] Improving string concatenation
In-Reply-To: <CAF8bMca3jbP9uDMjc35SBbtmpPp87YrNdPsYRepCONJ3Sa115A@mail.gmail.com>
References: <CAKShX4A5bVtxVAG+01QjNH0=LaVr6MH48xXs-OtbQQ2247cc_g@mail.gmail.com>	<CADwqtCMPAbayj7TENRPtPSXjyFi7wjWfdW9qke7n+PExdwkpbw@mail.gmail.com>	<CAKShX4D-LHgmh5cO2xxnLypzSgCWLDEnHopfE00MwbRFpRvmLg@mail.gmail.com>	<CAF8bMcZ1pRVVN2ZhDZ1EEq_vMN_1WzNvyw1e24cE=TDa=m+mmQ@mail.gmail.com>	<CABtg=KnxaG+7ysX4=fWWzkfCvUkG408YvEwNxT0W1WLEHOJZ4A@mail.gmail.com>
	<CAF8bMca3jbP9uDMjc35SBbtmpPp87YrNdPsYRepCONJ3Sa115A@mail.gmail.com>
Message-ID: <5581FAD9.1090302@fredhutch.org>

Hi Bill,

On 06/17/2015 12:36 PM, William Dunlap wrote:
> if '+' and paste don't change their behavior with respect to
> factors but you encourage people to use '+' instead of paste
> then you will run into problems with data.frame columns because
> many people don't notice whether a character-like column is
> character or factor.  With paste() this is not a problem but with '+'
> it is.  I think it is good not to make people worry about this much.
>
> As for the recycling issue, consider calls involving NULL arguments,
>    > f <- function(n)paste0(n, " test", if(n!=1)"s", " failed")
>    > f(1)
>    [1] "1 test failed"
>    > f(0)
>    [1] "0 tests failed"
> If paste0 followed the same recycling rules as "+" then f(1) would return
> character(0).  There is a fair bit of code like that on CRAN.

OTOH a very common use case is to use paste (or paste0) to add a given
prefix (or suffix) to a bunch of strings:

   paste0("ID", x)  # buggy! (won't do the right thing if length(x) is 0)

This is like "adding" something to 'x' so it's conceptually no different
from doing:

   x + 5

which does the right thing when 'x' is a numeric(0).

Anyway, I don't think anybody suggested to change the recycling rules
of paste() or paste0() (which would of course break some existing code
that relies on it, but that's a very generic statement right?), only
to adopt the recycling rules of `+` and other binary arithmetic and
comparison operators if `+` was used to concatenate strings.

Cheers,
H.

>
> Consider using sprintf() to get the sort of recycling rules that "+" uses
>    > sprintf("%s is %d", c("One","Two"), numeric(0))
>    character(0)
>    > sprintf("%s is %d", c("One","Two"), 17)
>    [1] "One is 17" "Two is 17"
>    > sprintf("%s is %d", c("One","Two"), 26:27)
>    [1] "One is 26" "Two is 27"
>
>
>
> Bill Dunlap
> TIBCO Software
> wdunlap tibco.com
>
> On Wed, Jun 17, 2015 at 9:56 AM, G?bor Cs?rdi <csardi.gabor at gmail.com>
> wrote:
>
>> On Wed, Jun 17, 2015 at 12:45 PM, William Dunlap <wdunlap at tibco.com>
>> wrote:
>>>> ... adding the ability to concat
>>>> strings with '+' would be a relatively simple addition (no pun intended)
>>> to
>>>> the code base I believe. With a lot of other languages supporting this
>>> kind
>>>> of concatenation, this is what surprised me most when first learning R.
>>>
>>> Wow!  R has a lot of surprising features and I would have thought
>>> this would be quite a way down the list.
>>
>> Well, it is hard to guess what users and people in general find
>> surprising. As '+' is used for string concatenation in essentially all
>> major scripting (and many other) languages, personally I am not
>> surprised that this is surprising for people. :)
>>
>>> How would this new '+' deal with factors, as paste does or as the current
>>> '+'
>>> does?
>>
>> The same as before. It would not change the behavior for other
>> classes, only basic characters.
>>
>>> Would number+string and string+number cause errors (as in current
>>> '+' in R and python) or coerce both to strings (as in current R:paste and
>>> in perl's '+').
>>
>> Would cause errors, exactly as it does right now.
>>
>>> Having '+' work on all types of data can let improperly imported data
>>> get further into the system before triggering an error.
>>
>> Nobody is asking for this. Only characters, not all types of data.
>>
>>> I see lots of
>>> errors
>>> reported on this list that are due to read.table interpreting text as
>>> character
>>> strings instead of the numbers that the user expected.  Detecting that
>>> error as early as possible is good.
>>
>> Isn't that a problem with read.table then? Detecting it there would be
>> the earliest possible, no?
>>
>> Gabor
>>
>> [...]
>>
>
> 	[[alternative HTML version deleted]]
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>

-- 
Herv? Pag?s

Program in Computational Biology
Division of Public Health Sciences
Fred Hutchinson Cancer Research Center
1100 Fairview Ave. N, M1-B514
P.O. Box 19024
Seattle, WA 98109-1024

E-mail: hpages at fredhutch.org
Phone:  (206) 667-5791
Fax:    (206) 667-1319


From nalimilan at club.fr  Thu Jun 18 12:10:23 2015
From: nalimilan at club.fr (Milan Bouchet-Valat)
Date: Thu, 18 Jun 2015 12:10:23 +0200
Subject: [Rd] Bugzilla activity?
In-Reply-To: <CAO1zAVaLdnfwHuPpvxwb8Ru_1GvM7P2aGkVes2HRHGsk+r3p9g@mail.gmail.com>
References: <1434482294.16367.9.camel@club.fr>
	<CAO1zAVaLdnfwHuPpvxwb8Ru_1GvM7P2aGkVes2HRHGsk+r3p9g@mail.gmail.com>
Message-ID: <1434622223.16367.20.camel@club.fr>

Le mardi 16 juin 2015 ? 22:02 +0200, Joris Meys a ?crit :
> Hi Milan,
> 
> 
> 
> I can't reproduce your first bug in R 3.2 on Windows 8.1, and I fail
> to reproduce that one in R 3.1.2 as well. So that might explain why
> that one isn't tackled. 
Actually, I'm not able to reproduce the two first issues reported in
that bug on Windows either now. Not sure, maybe I got confused. But the
third one can certainly be reproduced on Windows, as well as all the
others on Linux.

(But I guess people would have commented on the bug if they had tried
and not been able to reproduce it.)

Regards

> 
> The second bug you reported I can reproduce.
> 
> 
> Cheers
> 
> Joris
> 
> 
> On Tue, Jun 16, 2015 at 9:18 PM, Milan Bouchet-Valat
> <nalimilan at club.fr> wrote:
>         Hi!
>         
>         I was wondering whether anybody was looking at the bugs on
>         Bugzilla. I'm
>         asking because I've seen bugs tackled on the mailing list
>         quite quickly,
>         but two fully reproducible reports I've filed on Bugzilla
>         haven't
>         triggered any reaction in several weeks (for the older one).
>         
>         FWIW, these are:
>         - Line goes beyond plot region
>         https://bugs.r-project.org/bugzilla3/show_bug.cgi?id=16299
>         - format() does not respect decimal.mark="." when
>         options(OutDec=",")
>         https://bugs.r-project.org/bugzilla3/show_bug.cgi?id=16411
>         
>         
>         Regards
>         
>         ______________________________________________
>         R-devel at r-project.org mailing list
>         https://stat.ethz.ch/mailman/listinfo/r-devel
> 
> 
> 
> -- 
> Joris Meys
> Statistical consultant
> 
> Ghent University
> Faculty of Bioscience Engineering
> Department of Mathematical Modelling, Statistics and Bio-Informatics
> 
> tel :  +32 (0)9 264 61 79
> Joris.Meys at Ugent.be
> -------------------------------
> Disclaimer : http://helpdesk.ugent.be/e-maildisclaimer.php


From nalimilan at club.fr  Thu Jun 18 12:11:33 2015
From: nalimilan at club.fr (Milan Bouchet-Valat)
Date: Thu, 18 Jun 2015 12:11:33 +0200
Subject: [Rd] Bugzilla activity?
In-Reply-To: <558152BC.5090207@gmail.com>
References: <1434482294.16367.9.camel@club.fr> <558152BC.5090207@gmail.com>
Message-ID: <1434622293.16367.21.camel@club.fr>

Le mercredi 17 juin 2015 ? 07:58 -0300, Duncan Murdoch a ?crit :
> On 16/06/2015 4:18 PM, Milan Bouchet-Valat wrote:
> > Hi!
> > 
> > I was wondering whether anybody was looking at the bugs on Bugzilla. I'm
> > asking because I've seen bugs tackled on the mailing list quite quickly,
> > but two fully reproducible reports I've filed on Bugzilla haven't
> > triggered any reaction in several weeks (for the older one).
> >
> > FWIW, these are:
> > - Line goes beyond plot region
> > https://bugs.r-project.org/bugzilla3/show_bug.cgi?id=16299
> > - format() does not respect decimal.mark="." when options(OutDec=",")
> > https://bugs.r-project.org/bugzilla3/show_bug.cgi?id=16411
> 
> Bugzilla bugs are read, but they aren't necessarily dealt with
> instantly.  You can see actions occurring if you do a search for "all"
> bugs, not just open ones.
> 
> The reason that your bugs haven't been dealt with is the simple
> tautology that nobody has dealt with them.  It might be faster if you
> find the patch and submit that, but even then there's no guarantee that
> a volunteer will step forward to check it.
OK, I wanted to make sure that Bugzilla was still the preferred way of
reporting this kind of thing.


Regards


From jon.skoien at jrc.ec.europa.eu  Thu Jun 18 12:10:47 2015
From: jon.skoien at jrc.ec.europa.eu (Jon Skoien)
Date: Thu, 18 Jun 2015 12:10:47 +0200
Subject: [Rd] Add-on argument in sample()
In-Reply-To: <5581F3D5.4090204@fredhutch.org>
References: <D62EEDC839E38446B9F9378AFA4408E983EEA95E@mbxparis01.recherche.curie.fr>
	<op.x0bmb4ju3euttn@zukd208> <55812F5E.6020700@jrc.ec.europa.eu>
	<5581F3D5.4090204@fredhutch.org>
Message-ID: <55829927.7080406@jrc.ec.europa.eu>



On 6/18/2015 12:25 AM, Herv? Pag?s wrote:
> Hi,
>
> Special behavior of sample(x, ...) when length(x) is 1 is of course
> a bad feature. I think it pre-dates sample.int() which is what people
> should use these days if they want the behavior of sample(x, ...) when
> length(x) is 1. And because we now have sample.int(), this feature
> could in theory be removed from sample(). Unfortunately this would
> break a lot of existing code so a warning or some kind of notification
> would need to be implemented.
>
> Even if the cost is high, that still sounds better/cleaner to me than
> adding an extra argument to sample() to control this (which is only
> going to be used by people aware of the problem but people aware of
> the problem already know how to workaround it).

I am generally skeptical to backward-incompatible changes, particularly 
when no error will be thrown. On the other hand this might be one of the 
few cases where quite a lot of existing code will suddenly work 
correctly after a change... But unfortunately it is the ones who 
actually read the documentation who will get their code broken.

Cheers,
Jon

>
> Cheers,
> H.
>
> On 06/17/2015 01:27 AM, Jon Skoien wrote:
>>
>>
>> On 6/16/2015 1:32 PM, Peter Meissner wrote:
>>> Am .06.2015, 14:55 Uhr, schrieb Millot Gael <Gael.Millot at curie.fr>:
>>>
>>>> Hi.
>>>>
>>>> I have a problem with the default behavior of sample(), which performs
>>>> sample(1:x) when x is a single value.
>>>> This behavior is well explained in ?sample.
>>>> However, this behavior is annoying when the number of value is not
>>>> predictable. Would it be possible to add an argument
>>>> that desactivates this and perform the sampling on a single value ?
>>>> Examples:
>>>>> sample(10, size = 1, replace = FALSE)
>>>> 10
>>>>
>>>>> sample(10, size = 3, replace = TRUE)
>>>> 10 10 10
>>>>
>>>>> sample(10, size = 3, replace = FALSE)
>>>> Error
>>>
>>> I think the problem here is that the function actually does what you
>>> would expect it to do given a statistic perspective. A sample of size
>>> three from a population of one without allowing to draw elements again
>>> that were drawn already is simply not defined. What shall the function
>>> give back?
>>
>>
>> If I understand right, this error is exactly what the poster would like
>> to see, but which you dont get currently. If length(population) == 1,
>> you will now sample from 1:population, not the population itself. So:
>>
>>  > sample(8:10, 3, replace = FALSE)
>> [1] 10  8  9
>>  > sample(9:10, 3, replace = FALSE)
>> Error in sample.int(length(x), size, replace, prob) :
>>    cannot take a sample larger than the population when 'replace = FALSE'
>>  > sample(10:10, 3, replace = FALSE)
>> [1]  8 10  2
>>
>> I have to admit that I also find this behaviour inconsistent, even if it
>> is well described already on the first line of the details in the
>> documentation. It is definitely a feature which can cause some trouble,
>> and where the tests might end up more complicated than you would first
>> think.
>>
>>
>>>
>>> ... You can always wrap your code in a try() like this to prevent errors
>>> to break loops or functions:
>>>
>>> try(sample(...))
>>
>> No error is given when length(population) == 1, and the result might be
>> perfectly valid if population is variable. So this will easily stay in
>> the script as an undetected bug.
>>
>>>
>>> ... or you might check your arguments before execution:
>>>
>>>
>>> if ( !replace & length(population) >= size ){
>>>    sample(population, size = size , replace = replace)
>>> }else{
>>>    ...
>>> }
>>
>> This test is not sufficient if length(population) == size == 1, so you
>> will also need to check for this special case:
>>
>> if (length(population) == 1 & size == 1) {
>>    population
>> } else if (!replace & length(population) >= size) {
>>    sample(population, size = size, replace = replace)
>> } else {
>>    ...
>> }
>>
>> Then the question would be if this test could be replaced with a new
>> argument to sample, e.g. expandSingle, which has TRUE as default for
>> backward compatibility, but FALSE if you dont want population to be
>> expanded to 1:population. It could certainly be useful in some cases,
>> but you still need to know about the expansion to use it. I think most
>> of these bugs occur because users did not think about the expansion in
>> the first place or did not realize that their population could be of
>> length 1 in some situations. These users would therefore not think about
>> changing the argument either.
>>
>> Cheers,
>> Jon
>>
>>>
>>>
>>>>
>>>> Many thanks for your help.
>>>>
>>>> Best wishes,
>>>>
>>>> Gael Millot.
>>>>
>>>>
>>>> Gael Millot
>>>> UMR 3244 (IC-CNRS-UPMC) et Universite Pierre et Marie Curie
>>>> Equipe Recombinaison et instabilite genetique
>>>> Pav Trouillet Rossignol 5eme etage
>>>> Institut Curie
>>>> 26 rue d'Ulm
>>>> 75248 Paris Cedex 05
>>>> FRANCE
>>>> tel : 33 1 56 24 66 34
>>>> fax : 33 1 56 24 66 44
>>>> Email : gael.millot at curie.fr
>>>> http://perso.curie.fr/Gael.Millot/index.html
>>>>
>>>>
>>>>     [[alternative HTML version deleted]]
>>>>
>>>> ______________________________________________
>>>> R-devel at r-project.org mailing list
>>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>>
>>>
>>> Best, Peter
>>>
>>> --
>>>
>>> ______________________________________________
>>> R-devel at r-project.org mailing list
>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>
>

-- 
Jon Olav Sk?ien
Joint Research Centre - European Commission
Institute for Environment and Sustainability (IES)
Climate Risk Management Unit

Via Fermi 2749, TP 100-01,  I-21027 Ispra (VA), ITALY

jon.skoien at jrc.ec.europa.eu
Tel:  +39 0332 789205

Disclaimer: Views expressed in this email are those of the individual 
and do not necessarily represent official views of the European Commission.


From macqueen1 at llnl.gov  Thu Jun 18 19:34:50 2015
From: macqueen1 at llnl.gov (MacQueen, Don)
Date: Thu, 18 Jun 2015 17:34:50 +0000
Subject: [Rd] Improving string concatenation
In-Reply-To: <CAF8bMca3jbP9uDMjc35SBbtmpPp87YrNdPsYRepCONJ3Sa115A@mail.gmail.com>
References: <CAKShX4A5bVtxVAG+01QjNH0=LaVr6MH48xXs-OtbQQ2247cc_g@mail.gmail.com>
	<CADwqtCMPAbayj7TENRPtPSXjyFi7wjWfdW9qke7n+PExdwkpbw@mail.gmail.com>
	<CAKShX4D-LHgmh5cO2xxnLypzSgCWLDEnHopfE00MwbRFpRvmLg@mail.gmail.com>
	<CAF8bMcZ1pRVVN2ZhDZ1EEq_vMN_1WzNvyw1e24cE=TDa=m+mmQ@mail.gmail.com>
	<CABtg=KnxaG+7ysX4=fWWzkfCvUkG408YvEwNxT0W1WLEHOJZ4A@mail.gmail.com>
	<CAF8bMca3jbP9uDMjc35SBbtmpPp87YrNdPsYRepCONJ3Sa115A@mail.gmail.com>
Message-ID: <D1A8414B.12EACE%macqueen1@llnl.gov>

At the risk of unnecessarily (annoyingly?) prolonging a conversation that
has died down...

I don't think I've seen the sep or collapse arguments to paste mentioned
as aspects to consider. I don't see any way in which this version of '+'
could offer those arguments. Hence I would consider this version of '+' to
be a just convenience function, i.e., a function that, for convenience,
implements a special case of a more general function. It would not be a
different type of concatenation, nor would it improve the current methods
of string concatenation.

There is precedent in R for convenience functions. Indeed, I consider
paste0 to be a convenience function for paste with sep=''. read.csv and
several others are convenience functions that implement special cases of
read.table. 

Viewed that way, I see no intrinsic conceptual impediment to introducing a
version of '+' that does string concatenation. Of course, those who did
the work would have to decide how it would handle recycling and other
issues that have been raised.

However, whether or not it would be a good idea to do so, or worth the
effort, is not clear.

I've never felt that ... it would be nice if R did something the same way
as language X ... is by itself a strong argument for introducing a new
function or capability. Speaking as a long-time user, I wouldn't ask R
core to spend time on it. Would I use it if it were available? Possibly
over time I might migrate toward using it in simple situations.

-Don

-- 
Don MacQueen

Lawrence Livermore National Laboratory
7000 East Ave., L-627
Livermore, CA 94550
925-423-1062





On 6/17/15, 12:36 PM, "R-devel on behalf of William Dunlap"
<r-devel-bounces at r-project.org on behalf of wdunlap at tibco.com> wrote:

>if '+' and paste don't change their behavior with respect to
>factors but you encourage people to use '+' instead of paste
>then you will run into problems with data.frame columns because
>many people don't notice whether a character-like column is
>character or factor.  With paste() this is not a problem but with '+'
>it is.  I think it is good not to make people worry about this much.
>
>As for the recycling issue, consider calls involving NULL arguments,
>  > f <- function(n)paste0(n, " test", if(n!=1)"s", " failed")
>  > f(1)
>  [1] "1 test failed"
>  > f(0)
>  [1] "0 tests failed"
>If paste0 followed the same recycling rules as "+" then f(1) would return
>character(0).  There is a fair bit of code like that on CRAN.
>
>Consider using sprintf() to get the sort of recycling rules that "+" uses
>  > sprintf("%s is %d", c("One","Two"), numeric(0))
>  character(0)
>  > sprintf("%s is %d", c("One","Two"), 17)
>  [1] "One is 17" "Two is 17"
>  > sprintf("%s is %d", c("One","Two"), 26:27)
>  [1] "One is 26" "Two is 27"
>
>
>
>Bill Dunlap
>TIBCO Software
>wdunlap tibco.com
>
>On Wed, Jun 17, 2015 at 9:56 AM, G?bor Cs?rdi <csardi.gabor at gmail.com>
>wrote:
>
>> On Wed, Jun 17, 2015 at 12:45 PM, William Dunlap <wdunlap at tibco.com>
>> wrote:
>> >> ... adding the ability to concat
>> >> strings with '+' would be a relatively simple addition (no pun
>>intended)
>> > to
>> >> the code base I believe. With a lot of other languages supporting
>>this
>> > kind
>> >> of concatenation, this is what surprised me most when first learning
>>R.
>> >
>> > Wow!  R has a lot of surprising features and I would have thought
>> > this would be quite a way down the list.
>>
>> Well, it is hard to guess what users and people in general find
>> surprising. As '+' is used for string concatenation in essentially all
>> major scripting (and many other) languages, personally I am not
>> surprised that this is surprising for people. :)
>>
>> > How would this new '+' deal with factors, as paste does or as the
>>current
>> > '+'
>> > does?
>>
>> The same as before. It would not change the behavior for other
>> classes, only basic characters.
>>
>> > Would number+string and string+number cause errors (as in current
>> > '+' in R and python) or coerce both to strings (as in current R:paste
>>and
>> > in perl's '+').
>>
>> Would cause errors, exactly as it does right now.
>>
>> > Having '+' work on all types of data can let improperly imported data
>> > get further into the system before triggering an error.
>>
>> Nobody is asking for this. Only characters, not all types of data.
>>
>> > I see lots of
>> > errors
>> > reported on this list that are due to read.table interpreting text as
>> > character
>> > strings instead of the numbers that the user expected.  Detecting that
>> > error as early as possible is good.
>>
>> Isn't that a problem with read.table then? Detecting it there would be
>> the earliest possible, no?
>>
>> Gabor
>>
>> [...]
>>
>
>	[[alternative HTML version deleted]]
>
>______________________________________________
>R-devel at r-project.org mailing list
>https://stat.ethz.ch/mailman/listinfo/r-devel


From hpages at fredhutch.org  Thu Jun 18 20:15:45 2015
From: hpages at fredhutch.org (=?windows-1252?Q?Herv=E9_Pag=E8s?=)
Date: Thu, 18 Jun 2015 11:15:45 -0700
Subject: [Rd] Improving string concatenation
In-Reply-To: <CAKShX4ACOn7Hnzo_pC+Ar9-r-8Gh3w4R77s7inNLyYto7Qoytg@mail.gmail.com>
References: <CAKShX4A5bVtxVAG+01QjNH0=LaVr6MH48xXs-OtbQQ2247cc_g@mail.gmail.com>	<CADwqtCMPAbayj7TENRPtPSXjyFi7wjWfdW9qke7n+PExdwkpbw@mail.gmail.com>	<CAKShX4D-LHgmh5cO2xxnLypzSgCWLDEnHopfE00MwbRFpRvmLg@mail.gmail.com>	<CAF8bMcZ1pRVVN2ZhDZ1EEq_vMN_1WzNvyw1e24cE=TDa=m+mmQ@mail.gmail.com>
	<CAKShX4ACOn7Hnzo_pC+Ar9-r-8Gh3w4R77s7inNLyYto7Qoytg@mail.gmail.com>
Message-ID: <55830AD1.4080300@fredhutch.org>

Hi Joshua,

On 06/17/2015 11:24 AM, Joshua Bradley wrote:
>> How would this new '+' deal with factors, as paste does or as the current
> '+'
>> does?  Would number+string and string+number cause errors (as in current
>> '+' in R and python) or coerce both to strings (as in current R:paste and
> in perl's '+').
>
>
> I had posted this sample code previously to demonstrate how string
> concatenation could be implemented
>
> "+" = function(x,y) {
>      if(is.character(x) & is.character(y)) {
>          return(paste0(x , y))
>      } else {
>          .Primitive("+")(x,y)
>      }}
>
>
> so it would only happen if both objects were characters,

Problem with this is that it's inconsistent with other binary operators
that will first coerce the non-character operand to character if the
other operand is a character.

H.

> otherwise you
> should expect the same behavior as before with all other classes. This
> would be backwards compatible as well since string+string was never
> supported before and therefore no one would have previously working code
> that could break.
>
> Josh Bradley
>
> 	[[alternative HTML version deleted]]
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>

-- 
Herv? Pag?s

Program in Computational Biology
Division of Public Health Sciences
Fred Hutchinson Cancer Research Center
1100 Fairview Ave. N, M1-B514
P.O. Box 19024
Seattle, WA 98109-1024

E-mail: hpages at fredhutch.org
Phone:  (206) 667-5791
Fax:    (206) 667-1319


From radford at cs.toronto.edu  Thu Jun 18 20:32:18 2015
From: radford at cs.toronto.edu (Radford Neal)
Date: Thu, 18 Jun 2015 14:32:18 -0400
Subject: [Rd] Improving string concatenation
In-Reply-To: <mailman.19.1434621604.11302.r-devel@r-project.org>
References: <mailman.19.1434621604.11302.r-devel@r-project.org>
Message-ID: <20150618183218.GA4656@cs.toronto.edu>

Gabor Csardi writes:

> Btw. for some motivation, here is a (surely incomplete) list of
> languages with '+' as the string concatenation operator:
> 
> ALGOL 68, BASIC, C++, C#, Cobra, Pascal, Object Pascal, Eiffel, Go,
> JavaScript, Java, Python, Turing, Ruby, Windows Powers hell,
> Objective-C, F#, Sc-ala, Ya.


The situation for R is rather different from that of a language (as
many of the above) in which variables are declared to be of a specific
type.

In such a statically typed language, when you see the expression
"a+b", it is easy to figure out whether the "+" will be numeric
addition or string concatenation, by looking at the declarations of
"a" and "b".

But in a language such as R in which values have types, but variables
don't, someone seeing "a+b" in code wouldn't be able to tell easily
what it does.  This is OK, in fact desirable, in the case of operator
dispatch according to class when the different methods implement
versions of the operator that have analogous properties.  But numeric
addition and string concatenation have just about nothing in common,
so cases where functions are meant to have "+" be either addition OR
concatenation are going to be rare.

Furthermore, making "+" concatenate strings would preclude ever making
"+" convert strings to numbers (signalling an error if they aren't in
some numerical format) and then add them.  I'm not sure whether that
would be a good idea or not, but it might be unwise to eliminate the
possibility.

And of course, as someone else mentioned, it may instead be desirable
for attempts to add strings to signal an error, as at present, which
one also gives up by making "+" do concatenation.


> Yes, even Fortran has one, and in C, I can simply write "literal1"
> "literal2" and they'll be concatenated. It is only for literals, but
> still very useful.

Concatenation of literal strings could easily be added to the R parser
without changing anything else.  (Getting them to deparse as the same
two pieces would be tricky, but is maybe not necessary.)

   Radford Neal


From radford at cs.toronto.edu  Thu Jun 18 20:45:01 2015
From: radford at cs.toronto.edu (Radford Neal)
Date: Thu, 18 Jun 2015 14:45:01 -0400
Subject: [Rd] Add-on argument in sample()
In-Reply-To: <mailman.19.1434621604.11302.r-devel@r-project.org>
References: <mailman.19.1434621604.11302.r-devel@r-project.org>
Message-ID: <20150618184501.GB4656@cs.toronto.edu>

William Dunlap writes:

> I don't like the idea of having a length-1 dim attribute trigger some
> behavior of sample.  (Should a length-2 dim cause it to sample
> rows of a matrix, as unique() and duplicated() do?).

I wasn't too clear.  I would want any dim attribute on its first
argument to cause sample to treat it as the vector of values to sample
from, rather than as the upper limit for the set of integers to sample
from.  This is consistent with how higher-dimensional arrays can be
treated as vectors in some other contexts.  But I'd expect the 1D case
to be the common case.

The basic problem, here and in other places, is that R (and S) don't
distinguish a scalar from a vector of length one.  I think this was a
mistake, which one can try to unwind now by at least not treating a
vector of length one as a scalar if it is explicitly marked as a
vector by a dim attribute.

Allowing a dim attribute of length zero (presently disallowed) might
also be a good idea, because it could be used to explicitly mark a
single number as a scalar, not a vector of length one.

   Radford Neal


From maechler at stat.math.ethz.ch  Fri Jun 19 12:31:28 2015
From: maechler at stat.math.ethz.ch (Martin Maechler)
Date: Fri, 19 Jun 2015 12:31:28 +0200
Subject: [Rd] Improving string concatenation
In-Reply-To: <20150618183218.GA4656@cs.toronto.edu>
References: <mailman.19.1434621604.11302.r-devel@r-project.org>
	<20150618183218.GA4656@cs.toronto.edu>
Message-ID: <21891.61312.873647.957738@stat.math.ethz.ch>

>>>>> Radford Neal <radford at cs.toronto.edu>
>>>>>     on Thu, 18 Jun 2015 14:32:18 -0400 writes:

    > Gabor Csardi writes:
    >> Btw. for some motivation, here is a (surely incomplete)
    >> list of languages with '+' as the string concatenation
    >> operator:
    >> 
    >> ALGOL 68, BASIC, C++, C#, Cobra, Pascal, Object Pascal,
    >> Eiffel, Go, JavaScript, Java, Python, Turing, Ruby,
    >> Windows Powers hell, Objective-C, F#, Sc-ala, Ya.


    > The situation for R is rather different from that of a
    > language (as many of the above) in which variables are
    > declared to be of a specific type.

    > In such a statically typed language, when you see the
    > expression "a+b", it is easy to figure out whether the "+"
    > will be numeric addition or string concatenation, by
    > looking at the declarations of "a" and "b".

    > But in a language such as R in which values have types,
    > but variables don't, someone seeing "a+b" in code wouldn't
    > be able to tell easily what it does.  This is OK, in fact
    > desirable, in the case of operator dispatch according to
    > class when the different methods implement versions of the
    > operator that have analogous properties.  But numeric
    > addition and string concatenation have just about nothing
    > in common, so cases where functions are meant to have "+"
    > be either addition OR concatenation are going to be rare.

    > Furthermore, making "+" concatenate strings would preclude
    > ever making "+" convert strings to numbers (signalling an
    > error if they aren't in some numerical format) and then
    > add them.  I'm not sure whether that would be a good idea
    > or not, but it might be unwise to eliminate the
    > possibility.

    > And of course, as someone else mentioned, it may instead
    > be desirable for attempts to add strings to signal an
    > error, as at present, which one also gives up by making
    > "+" do concatenation.


    >> Yes, even Fortran has one, and in C, I can simply write
    >> "literal1" "literal2" and they'll be concatenated. It is
    >> only for literals, but still very useful.

    > Concatenation of literal strings could easily be added to
    > the R parser without changing anything else.  (Getting
    > them to deparse as the same two pieces would be tricky,
    > but is maybe not necessary.)

    >    Radford Neal

Thank you,  Bill Dunlap, Radford, Herv'e,  

and others who have explained indirectly that the subject of this thread
is overall rather incomplete or just not true:

Such "improvemnet" -- making something more convenient in many
cases -- would lead to (backward) incompatibilities -- breaking
current functionality -- and inconsistencies in R.

As this thread hopefully comes to a conclusion for now,
let me try mention that this is not the first time the topic has
come up ... and those of us who may still stick around in 5
years, please try to remember :  It will come up every few
years.

Nine years ago was one such occasion --- on this same place,
R-devel ---

Here, I've started it (as Friday afternoon "event", diverting
from the more relevant topic of  S4 methods for "+"),
  https://stat.ethz.ch/pipermail/r-devel/2006-August/038991.html
see also here
  https://stat.ethz.ch/pipermail/r-devel/2006-August/threads.html

or the Gmane archive version of it, e.g. with John Chambers (citing Bill Dunlap)
   http://thread.gmane.org/gmane.comp.lang.r.devel/9331/focus=9347

Also, the arguments (against "+" for string concatenation)
of Thomas Lumley were *not* repeated this time (I think)
   https://stat.ethz.ch/pipermail/r-devel/2006-August/039012.html

---------
Historical note: At the time, there was only 'paste()' in base R.
Gabor did mention  paste0()  as a possible compromise,  
and indeed, we did add paste0() to R eventually.

Maybe we should make this into a new  R-FAQ entry -- so next
time, we can point there instead of re-hashing things ever so often.

I'm volunteering to collect "patches" -- ideally texinfo format,
the latest source of the R FAQ list being
 https://svn.r-project.org/R/trunk/doc/manual/R-FAQ.texi 


Martin Maechler


From rdevelmail at 163.com  Fri Jun 19 18:37:13 2015
From: rdevelmail at 163.com (PO SU)
Date: Sat, 20 Jun 2015 00:37:13 +0800 (CST)
Subject: [Rd] QT + RInside problem complement
Message-ID: <46719cb9.fd78.14e0cae693d.Coremail.rdevelmail@163.com>


The solution post is here:
http://lists.r-forge.r-project.org/pipermail/rcpp-devel/2012-November/004771.html 


In the paragraph:

I did need however to install Rcpp and RInside from source, and with the same 
compiler used to compile qtdensity (otherwise I would get additional linker 
errors). As I had trouble getting the (Cygwin-based) g++ shipped with Rtools 
to work with Qt, I used instead the g++ shipped with Qt SDK to compile Rcpp 
and RInside. To do that, I adjusted the PATH environment variable to point to 
QtSDK\mingw\bin instead of Rtools\gcc-4.6.3\bin.


With the sentence:
I used instead the g++ shipped with Qt SDK to compile Rcpp 

and RInside.   


I failed to do that, anyone know why? can MingW compile the Rcpp and Rinside ?  I don't know if i explain my question clearly.


--

PO SU
mail: desolator88 at 163.com
Majored in Statistics from SJTU

From murdoch.duncan at gmail.com  Fri Jun 19 19:11:05 2015
From: murdoch.duncan at gmail.com (Duncan Murdoch)
Date: Fri, 19 Jun 2015 13:11:05 -0400
Subject: [Rd] QT + RInside problem complement
In-Reply-To: <46719cb9.fd78.14e0cae693d.Coremail.rdevelmail@163.com>
References: <46719cb9.fd78.14e0cae693d.Coremail.rdevelmail@163.com>
Message-ID: <55844D29.4020405@gmail.com>

On 19/06/2015 12:37 PM, PO SU wrote:
> 
> The solution post is here:
> http://lists.r-forge.r-project.org/pipermail/rcpp-devel/2012-November/004771.html 
> 
> 
> In the paragraph:
> 
> I did need however to install Rcpp and RInside from source, and with the same 
> compiler used to compile qtdensity (otherwise I would get additional linker 
> errors). As I had trouble getting the (Cygwin-based) g++ shipped with Rtools 
> to work with Qt, I used instead the g++ shipped with Qt SDK to compile Rcpp 
> and RInside. To do that, I adjusted the PATH environment variable to point to 
> QtSDK\mingw\bin instead of Rtools\gcc-4.6.3\bin.
> 
> 
> With the sentence:
> I used instead the g++ shipped with Qt SDK to compile Rcpp 
> 
> and RInside.   
> 
> 
> I failed to do that, anyone know why? can MingW compile the Rcpp and Rinside ?  I don't know if i explain my question clearly.

Part of that quoted paragraph is wrong:  the g++ shipped with Rtools is
*not* Cygwin-based, though some of the other tools in Rtools are.

More to the point:  it's likely that you need to use the same compiler
for everything, especially once you start using C++.  There are many
assumptions (e.g. about name mangling, exceptions, etc.) that need to
match, and it's very hard to do that with two different compilers.

So if you are unable to compile what you need with the gcc 4.6.3 that's
in Rtools and want to use a different compiler, you might need to
recompile R and all packages and libraries that are involved with the
alternate compiler as well.

Duncan Murdoch


From henrik.bengtsson at ucsf.edu  Sat Jun 20 23:21:20 2015
From: henrik.bengtsson at ucsf.edu (Henrik Bengtsson)
Date: Sat, 20 Jun 2015 14:21:20 -0700
Subject: [Rd] Listing all spawned jobs/processed after
	parallel::mcparallel()?
Message-ID: <CAFDcVCR0KBxf8YTct-=WvnLssnUBAOj4pV2U40p8Z2mtS=ktOA@mail.gmail.com>

QUESTION:
Is it possible to query number of active jobs running after launching
them with parallel::mcparallel()?

For example, if I launch 3 jobs using:

> library(parallel)
> f <- lapply(1:3, FUN=mcparallel)

then I can inspect them as:

> str(f)
List of 3
 $ :List of 2
  ..$ pid: int 142225
  ..$ fd : int [1:2] 8 13
  ..- attr(*, "class")= chr [1:3] "parallelJob" "childProcess" "process"
 $ :List of 2
  ..$ pid: int 142226
  ..$ fd : int [1:2] 10 15
  ..- attr(*, "class")= chr [1:3] "parallelJob" "childProcess" "process"
 $ :List of 2
  ..$ pid: int 142227
  ..$ fd : int [1:2] 12 17
  ..- attr(*, "class")= chr [1:3] "parallelJob" "childProcess" "process"

However, if I launch them without "recording" them, or equivalently if I do:

> f <- lapply(1:3, FUN=mcparallel)
> rm(list="f")

is there a function/mechanism in R/the parallel package allowing me to
find the currently active/running processes?  ... or at least query
how many they are?  I'd like to use this to prevent spawning of more
than a maximum number of parallel processes.  (Yes, I'm away of
mclapply() and friends, but I'm looking at using more low-level
mcparallel()/mccollect()). I'm trying to decide whether I should
implement my own mechanism for keeping track of "jobs" or not.

Thanks,

Henrik


From ripley at stats.ox.ac.uk  Sun Jun 21 18:59:30 2015
From: ripley at stats.ox.ac.uk (Prof Brian Ripley)
Date: Sun, 21 Jun 2015 17:59:30 +0100
Subject: [Rd] Listing all spawned jobs/processed after
 parallel::mcparallel()?
In-Reply-To: <CAFDcVCR0KBxf8YTct-=WvnLssnUBAOj4pV2U40p8Z2mtS=ktOA@mail.gmail.com>
References: <CAFDcVCR0KBxf8YTct-=WvnLssnUBAOj4pV2U40p8Z2mtS=ktOA@mail.gmail.com>
Message-ID: <5586ED72.3090902@stats.ox.ac.uk>

On 20/06/2015 22:21, Henrik Bengtsson wrote:
> QUESTION:
> Is it possible to query number of active jobs running after launching
> them with parallel::mcparallel()?
>
> For example, if I launch 3 jobs using:
>
>> library(parallel)
>> f <- lapply(1:3, FUN=mcparallel)
>
> then I can inspect them as:
>
>> str(f)
> List of 3
>   $ :List of 2
>    ..$ pid: int 142225
>    ..$ fd : int [1:2] 8 13
>    ..- attr(*, "class")= chr [1:3] "parallelJob" "childProcess" "process"
>   $ :List of 2
>    ..$ pid: int 142226
>    ..$ fd : int [1:2] 10 15
>    ..- attr(*, "class")= chr [1:3] "parallelJob" "childProcess" "process"
>   $ :List of 2
>    ..$ pid: int 142227
>    ..$ fd : int [1:2] 12 17
>    ..- attr(*, "class")= chr [1:3] "parallelJob" "childProcess" "process"
>
> However, if I launch them without "recording" them, or equivalently if I do:
>
>> f <- lapply(1:3, FUN=mcparallel)
>> rm(list="f")
>
> is there a function/mechanism in R/the parallel package allowing me to
> find the currently active/running processes?  ... or at least query
> how many they are?  I'd like to use this to prevent spawning of more
> than a maximum number of parallel processes.  (Yes, I'm away of
> mclapply() and friends, but I'm looking at using more low-level
> mcparallel()/mccollect()). I'm trying to decide whether I should
> implement my own mechanism for keeping track of "jobs" or not.

Note that 'currently active/running' is a slippery concept and is not 
what the results above show.  But see ?children, which seems to be what 
you are looking for.  It is not exported and there is no more detailed 
explanation save the source code.  Also note that tells you about 
children and not grandchildren ....

You can find out about child processes (and their children) at OS level, 
for example via the 'ps' command, but doing so portably is not easy.

-- 
Brian D. Ripley,                  ripley at stats.ox.ac.uk
Emeritus Professor of Applied Statistics, University of Oxford
1 South Parks Road, Oxford OX1 3TG, UK


From rkoenker at illinois.edu  Mon Jun 22 12:56:17 2015
From: rkoenker at illinois.edu (Roger Koenker)
Date: Mon, 22 Jun 2015 11:56:17 +0100
Subject: [Rd] NAMESPACE imports
Message-ID: <2CC34A93-C798-46EC-9922-B99AECD6798C@illinois.edu>

I need some advice on how to resolve a warning in a revision of my REBayes package.

At the moment the package Depends on SparseM and Matrix and does some mildly exotic
coercion like this:

A <- as(as.matrix.csc(A),"dgCMatrix")

that converts a SparseM csr matrix A into a SparseM csc matrix and then into a dgC Matrix. I suppose
that I could try to convert all of this sort of thing into pkg::fname calls, but I don?t relish the prospect.  Is
there some other strategy?  Actually, to be honest, I?m not entirely sure how to do this conversion for the
above expression, so if this is the way to go, could someone explain the right way to deal with the first as()?

At the moment I?m stuck with the following warning that I can?t seem to find a way around:


* checking whether package 'REBayes' can be installed ... WARNING
Found the following significant warnings:
  Warning: replacing previous import by 'SparseM::coerce' when loading ?REBayes'



	[[alternative HTML version deleted]]


From lawrence.michael at gene.com  Mon Jun 22 15:49:41 2015
From: lawrence.michael at gene.com (Michael Lawrence)
Date: Mon, 22 Jun 2015 06:49:41 -0700
Subject: [Rd] Plans to improve reference classes?
In-Reply-To: <da993e9e95c744a18958291ae25b898d@CRIUS2013.keygene.local>
References: <da993e9e95c744a18958291ae25b898d@CRIUS2013.keygene.local>
Message-ID: <CAOQ5NycbBMTRQrtoXU=UrX0J4HLX-CONTDndSB=gKn7gV9pJ5w@mail.gmail.com>

(Moved to R-devel)

Niek,

Would you please provide the details on this test case, including your
benchmarks, and what you are trying to achieve at the high-level?

Thanks,
Michael




On Wed, Jun 17, 2015 at 4:55 AM, Niek Bouman <niek.bouman at keygene.com> wrote:
> Dear R-core team,
>
> I was wondering whether you have any plans to improve the current implementation of reference classes.
>
> Background:
> For a new project we will have many mutable objects, and we therefore want to use a construction like reference classes in this project. However, we observed that the speed performance of our implementation (using reference classes) for a simple test case is rather poor compared to a non-OOP implementation. Further, turning the reference classes into R6classes (using the R6 package) gave the best performance. As speed is an issue in our project, this would for us be an important reason  to use R6 classes instead of reference classes. The drawback, of course, is that the R6 package is developed by a single developer and that further development is therefore less certain than if we would use reference classes, which are in the core. Ideally we would like a system like R6 in the core of R. Are you planning to support R6, or improve reference classes to be on par with (or better than) R6 in terms of speed, in the core?
>
> Best regards,
> Niek
>
> Keygene N.V. | P.O. Box 216 | 6700 AE Wageningen | The Netherlands
> T (+31) 317 46 68 66 | F (+31) 317 42 49 39 | CoC. 09066631 | http://www.keygene.com<http://www.keygene.com/>
>
>
> [http://www.keygene.com/images/keygenegeneral.jpg]<http://www.keygene.com>
>
> Stay up-to-date! Subscribe to our bimonthly newsletter here<http://www.keygene.com/newsletter>
>
> [http://www.keygene.com/images/linkedin-grey.png]<https://www.linkedin.com/company/63753?trk=tyah&trkInfo=tarId%3A1422354182032%2Ctas%3Akeygene%2Cidx%3A3-1-3>   [http://www.keygene.com/images/twitter-grey.png] <https://twitter.com/KeyGeneInfo>     [http://www.keygene.com/images/facebook-grey.png] <https://www.facebook.com/KeyGeneWageningen>
>
> The information contained in this message, and attachments if any, may be privileged and/or confidential and is intended to be received only by persons
> entitled to receive such information. Use of any part of this message and/or its attachments if any, in any other way than as explicitly stated by the sender is strictly prohibited. Should you receive this
> message unintentionally please notify the sender immediately, and delete it together with all attachments, if any. Thank you. The transmission of messages and/or information via the Internet is not
> secured and may be intercepted by third parties. KeyGene assumes no liability for any damage caused by any unintentional disclosure and/or use of the content of this message and attachments if any.
>
>
>         [[alternative HTML version deleted]]
>
> _______________________________________________
> R-core list: https://stat.ethz.ch/mailman/listinfo/r-core


From csardi.gabor at gmail.com  Mon Jun 22 15:56:26 2015
From: csardi.gabor at gmail.com (=?UTF-8?B?R8OhYm9yIENzw6FyZGk=?=)
Date: Mon, 22 Jun 2015 09:56:26 -0400
Subject: [Rd] Plans to improve reference classes?
In-Reply-To: <CAOQ5NycbBMTRQrtoXU=UrX0J4HLX-CONTDndSB=gKn7gV9pJ5w@mail.gmail.com>
References: <da993e9e95c744a18958291ae25b898d@CRIUS2013.keygene.local>
	<CAOQ5NycbBMTRQrtoXU=UrX0J4HLX-CONTDndSB=gKn7gV9pJ5w@mail.gmail.com>
Message-ID: <CABtg=KnNycpAck+FhJRXbfdkKLsDM54V6YUDKrNHSZDtGr1dBw@mail.gmail.com>

On Mon, Jun 22, 2015 at 9:49 AM, Michael Lawrence
<lawrence.michael at gene.com> wrote:
[...]
> Would you please provide the details on this test case, including your
> benchmarks, and what you are trying to achieve at the high-level?

You can also see http://rpubs.com/wch/17459
Linked from https://github.com/wch/R6/ and also from CRAN, actually:
http://cran.rstudio.com/web/packages/R6/README.html

> On Wed, Jun 17, 2015 at 4:55 AM, Niek Bouman <niek.bouman at keygene.com> wrote:
[...]
>> Background:
>> For a new project we will have many mutable objects, and we therefore want to use a construction like reference classes in this project. However, we observed that the speed performance of our implementation (using reference classes) for a simple test case is rather poor compared to a non-OOP implementation. Further, turning the reference classes into R6classes (using the R6 package) gave the best performance. As speed is an issue in our project, this would for us be an important reason  to use R6 classes instead of reference classes. The drawback, of course, is that the R6 package is developed by a single developer and that further development is therefore less certain than if we would use reference classes, which are in the core. Ideally we would like a system like R6 in the core of R. Are you planning to support R6, or improve reference classes to be on par with (or better than) R6 in terms of speed, in the core?

R6 is backed by RStudio, for example their Shiny framework uses R6
classes, so I would not be too worried about this.

Gabor

[...]


From h.wickham at gmail.com  Mon Jun 22 16:06:31 2015
From: h.wickham at gmail.com (Hadley Wickham)
Date: Mon, 22 Jun 2015 09:06:31 -0500
Subject: [Rd] Plans to improve reference classes?
In-Reply-To: <CAOQ5NycbBMTRQrtoXU=UrX0J4HLX-CONTDndSB=gKn7gV9pJ5w@mail.gmail.com>
References: <da993e9e95c744a18958291ae25b898d@CRIUS2013.keygene.local>
	<CAOQ5NycbBMTRQrtoXU=UrX0J4HLX-CONTDndSB=gKn7gV9pJ5w@mail.gmail.com>
Message-ID: <CABdHhvGQX+6U21P4kKh1XesNa9ivB3xXVPkno0vNtJNr3eQajg@mail.gmail.com>

Apart from speed, the most important advantage of R6 over ref classes
is that's it easy to subclass a class defined in package A in package
B. This is currently difficult with ref classes because of the way it
does scoping. (And I think it's difficult to fix without fundamentally
changing how ref classes work)

Hadley

On Mon, Jun 22, 2015 at 8:49 AM, Michael Lawrence
<lawrence.michael at gene.com> wrote:
> (Moved to R-devel)
>
> Niek,
>
> Would you please provide the details on this test case, including your
> benchmarks, and what you are trying to achieve at the high-level?
>
> Thanks,
> Michael
>
>
>
>
> On Wed, Jun 17, 2015 at 4:55 AM, Niek Bouman <niek.bouman at keygene.com> wrote:
>> Dear R-core team,
>>
>> I was wondering whether you have any plans to improve the current implementation of reference classes.
>>
>> Background:
>> For a new project we will have many mutable objects, and we therefore want to use a construction like reference classes in this project. However, we observed that the speed performance of our implementation (using reference classes) for a simple test case is rather poor compared to a non-OOP implementation. Further, turning the reference classes into R6classes (using the R6 package) gave the best performance. As speed is an issue in our project, this would for us be an important reason  to use R6 classes instead of reference classes. The drawback, of course, is that the R6 package is developed by a single developer and that further development is therefore less certain than if we would use reference classes, which are in the core. Ideally we would like a system like R6 in the core of R. Are you planning to support R6, or improve reference classes to be on par with (or better than) R6 in terms of speed, in the core?
>>
>> Best regards,
>> Niek
>>
>> Keygene N.V. | P.O. Box 216 | 6700 AE Wageningen | The Netherlands
>> T (+31) 317 46 68 66 | F (+31) 317 42 49 39 | CoC. 09066631 | http://www.keygene.com<http://www.keygene.com/>
>>
>>
>> [http://www.keygene.com/images/keygenegeneral.jpg]<http://www.keygene.com>
>>
>> Stay up-to-date! Subscribe to our bimonthly newsletter here<http://www.keygene.com/newsletter>
>>
>> [http://www.keygene.com/images/linkedin-grey.png]<https://www.linkedin.com/company/63753?trk=tyah&trkInfo=tarId%3A1422354182032%2Ctas%3Akeygene%2Cidx%3A3-1-3>   [http://www.keygene.com/images/twitter-grey.png] <https://twitter.com/KeyGeneInfo>     [http://www.keygene.com/images/facebook-grey.png] <https://www.facebook.com/KeyGeneWageningen>
>>
>> The information contained in this message, and attachments if any, may be privileged and/or confidential and is intended to be received only by persons
>> entitled to receive such information. Use of any part of this message and/or its attachments if any, in any other way than as explicitly stated by the sender is strictly prohibited. Should you receive this
>> message unintentionally please notify the sender immediately, and delete it together with all attachments, if any. Thank you. The transmission of messages and/or information via the Internet is not
>> secured and may be intercepted by third parties. KeyGene assumes no liability for any damage caused by any unintentional disclosure and/or use of the content of this message and attachments if any.
>>
>>
>>         [[alternative HTML version deleted]]
>>
>> _______________________________________________
>> R-core list: https://stat.ethz.ch/mailman/listinfo/r-core
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel



-- 
http://had.co.nz/


From csardi.gabor at gmail.com  Mon Jun 22 16:32:43 2015
From: csardi.gabor at gmail.com (=?UTF-8?B?R8OhYm9yIENzw6FyZGk=?=)
Date: Mon, 22 Jun 2015 10:32:43 -0400
Subject: [Rd] R-devel is broken
Message-ID: <CABtg=KmFpDpP=roJLPvz1vi_jRDXEe0cSZ0qBmAcAL7pCMYKrA@mail.gmail.com>

At least on Ubuntu 12.4. and 14.4. FYI.

https://travis-ci.org/metacran/r-builder#L7003

Gabor


From pdalgd at gmail.com  Mon Jun 22 17:09:03 2015
From: pdalgd at gmail.com (peter dalgaard)
Date: Mon, 22 Jun 2015 17:09:03 +0200
Subject: [Rd] R-devel is broken
In-Reply-To: <CABtg=KmFpDpP=roJLPvz1vi_jRDXEe0cSZ0qBmAcAL7pCMYKrA@mail.gmail.com>
References: <CABtg=KmFpDpP=roJLPvz1vi_jRDXEe0cSZ0qBmAcAL7pCMYKrA@mail.gmail.com>
Message-ID: <5CBC9C3B-D3D0-4CCC-8D9D-AD6EB184CC5D@gmail.com>

Some maintainer-mode changes to the configure script went AWOL. Rerunning the nightly build script seems to have cleared it up.

-pd

On 22 Jun 2015, at 16:32 , G?bor Cs?rdi <csardi.gabor at gmail.com> wrote:

> At least on Ubuntu 12.4. and 14.4. FYI.
> 
> https://travis-ci.org/metacran/r-builder#L7003
> 
> Gabor
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel

-- 
Peter Dalgaard, Professor,
Center for Statistics, Copenhagen Business School
Solbjerg Plads 3, 2000 Frederiksberg, Denmark
Phone: (+45)38153501
Office: A 4.23
Email: pd.mes at cbs.dk  Priv: PDalgd at gmail.com


From lawrence.michael at gene.com  Tue Jun 23 14:56:34 2015
From: lawrence.michael at gene.com (Michael Lawrence)
Date: Tue, 23 Jun 2015 05:56:34 -0700
Subject: [Rd] Plans to improve reference classes?
In-Reply-To: <CABdHhvGQX+6U21P4kKh1XesNa9ivB3xXVPkno0vNtJNr3eQajg@mail.gmail.com>
References: <da993e9e95c744a18958291ae25b898d@CRIUS2013.keygene.local>
	<CAOQ5NycbBMTRQrtoXU=UrX0J4HLX-CONTDndSB=gKn7gV9pJ5w@mail.gmail.com>
	<CABdHhvGQX+6U21P4kKh1XesNa9ivB3xXVPkno0vNtJNr3eQajg@mail.gmail.com>
Message-ID: <CAOQ5Nyf_6QPNy0nzhrzmgq7Pi14WcksqGB3Oe=21Qv-sPToX+w@mail.gmail.com>

Could of requests:

1) Is there any example or writeup on the difficulties of extending
reference classes across packages? Just so I can fully understand the
issues.

2) In what sorts of situations does the performance of reference
classes cause problems? Sure, it's an order of magnitude slower than
constructing a simple environment, but those timings are in
microseconds, so one would need a thousand objects before it started
to be noticeable. Some motivating use cases would help.

Thanks,
Michael




On Mon, Jun 22, 2015 at 7:06 AM, Hadley Wickham <h.wickham at gmail.com> wrote:
> Apart from speed, the most important advantage of R6 over ref classes
> is that's it easy to subclass a class defined in package A in package
> B. This is currently difficult with ref classes because of the way it
> does scoping. (And I think it's difficult to fix without fundamentally
> changing how ref classes work)
>
> Hadley
>
> On Mon, Jun 22, 2015 at 8:49 AM, Michael Lawrence
> <lawrence.michael at gene.com> wrote:
>> (Moved to R-devel)
>>
>> Niek,
>>
>> Would you please provide the details on this test case, including your
>> benchmarks, and what you are trying to achieve at the high-level?
>>
>> Thanks,
>> Michael
>>
>>
>>
>>
>> On Wed, Jun 17, 2015 at 4:55 AM, Niek Bouman <niek.bouman at keygene.com> wrote:
>>> Dear R-core team,
>>>
>>> I was wondering whether you have any plans to improve the current implementation of reference classes.
>>>
>>> Background:
>>> For a new project we will have many mutable objects, and we therefore want to use a construction like reference classes in this project. However, we observed that the speed performance of our implementation (using reference classes) for a simple test case is rather poor compared to a non-OOP implementation. Further, turning the reference classes into R6classes (using the R6 package) gave the best performance. As speed is an issue in our project, this would for us be an important reason  to use R6 classes instead of reference classes. The drawback, of course, is that the R6 package is developed by a single developer and that further development is therefore less certain than if we would use reference classes, which are in the core. Ideally we would like a system like R6 in the core of R. Are you planning to support R6, or improve reference classes to be on par with (or better than) R6 in terms of speed, in the core?
>>>
>>> Best regards,
>>> Niek
>>>
>>> Keygene N.V. | P.O. Box 216 | 6700 AE Wageningen | The Netherlands
>>> T (+31) 317 46 68 66 | F (+31) 317 42 49 39 | CoC. 09066631 | http://www.keygene.com<http://www.keygene.com/>
>>>
>>>
>>> [http://www.keygene.com/images/keygenegeneral.jpg]<http://www.keygene.com>
>>>
>>> Stay up-to-date! Subscribe to our bimonthly newsletter here<http://www.keygene.com/newsletter>
>>>
>>> [http://www.keygene.com/images/linkedin-grey.png]<https://www.linkedin.com/company/63753?trk=tyah&trkInfo=tarId%3A1422354182032%2Ctas%3Akeygene%2Cidx%3A3-1-3>   [http://www.keygene.com/images/twitter-grey.png] <https://twitter.com/KeyGeneInfo>     [http://www.keygene.com/images/facebook-grey.png] <https://www.facebook.com/KeyGeneWageningen>
>>>
>>> The information contained in this message, and attachments if any, may be privileged and/or confidential and is intended to be received only by persons
>>> entitled to receive such information. Use of any part of this message and/or its attachments if any, in any other way than as explicitly stated by the sender is strictly prohibited. Should you receive this
>>> message unintentionally please notify the sender immediately, and delete it together with all attachments, if any. Thank you. The transmission of messages and/or information via the Internet is not
>>> secured and may be intercepted by third parties. KeyGene assumes no liability for any damage caused by any unintentional disclosure and/or use of the content of this message and attachments if any.
>>>
>>>
>>>         [[alternative HTML version deleted]]
>>>
>>> _______________________________________________
>>> R-core list: https://stat.ethz.ch/mailman/listinfo/r-core
>>
>> ______________________________________________
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel
>
>
>
> --
> http://had.co.nz/


From avraham.adler at gmail.com  Tue Jun 23 16:36:34 2015
From: avraham.adler at gmail.com (Avraham Adler)
Date: Tue, 23 Jun 2015 10:36:34 -0400
Subject: [Rd] GCC update in Rtools?
Message-ID: <CAL6gwn+HBTJ0q5DPMbs52=SQOVCjSRy48-CVP5P=PFo05DvHAg@mail.gmail.com>

Hello.

There was a lot of discussion in March about the difficulties in
having Rtools use a more recent version of GCC than 4.6.3. May we know
if there has been any progress since then, or has dveleopment/testing
been put on hold for the time being?

Thank you,

Avi


From h.wickham at gmail.com  Tue Jun 23 17:06:17 2015
From: h.wickham at gmail.com (Hadley Wickham)
Date: Tue, 23 Jun 2015 10:06:17 -0500
Subject: [Rd] Plans to improve reference classes?
In-Reply-To: <CAOQ5Nyf_6QPNy0nzhrzmgq7Pi14WcksqGB3Oe=21Qv-sPToX+w@mail.gmail.com>
References: <da993e9e95c744a18958291ae25b898d@CRIUS2013.keygene.local>
	<CAOQ5NycbBMTRQrtoXU=UrX0J4HLX-CONTDndSB=gKn7gV9pJ5w@mail.gmail.com>
	<CABdHhvGQX+6U21P4kKh1XesNa9ivB3xXVPkno0vNtJNr3eQajg@mail.gmail.com>
	<CAOQ5Nyf_6QPNy0nzhrzmgq7Pi14WcksqGB3Oe=21Qv-sPToX+w@mail.gmail.com>
Message-ID: <CABdHhvEu9tb-3p7apMdx2orhsKQZiAbxX+DwhC44E5Xa3rD0Vg@mail.gmail.com>

> 1) Is there any example or writeup on the difficulties of extending
> reference classes across packages? Just so I can fully understand the
> issues.

Here's a simple example:

library(scales)
library(methods)

MyRange <- setRefClass("MyRange", contains = "DiscreteRange")
a_range <- MyRange()
a_range$train(1:10)
# Error in a_range$train(1:10) : could not find function "train_discrete"

where train_discrete() is an non-exported function of the scales
package called by the train() method of DiscreteRange.

There are also some notes about portable vs. non-portable R6 classes
at http://cran.r-project.org/web/packages/R6/vignettes/Portable.html

> 2) In what sorts of situations does the performance of reference
> classes cause problems? Sure, it's an order of magnitude slower than
> constructing a simple environment, but those timings are in
> microseconds, so one would need a thousand objects before it started
> to be noticeable. Some motivating use cases would help.

It's a bit of a pathological case, but the switch from RefClasses to
R6 made a noticeable performance improvement in shiny. It's hard to
quantify the impact on an app, but the impact on the underlying
reactive implementation was quite profound: http://rpubs.com/wch/27260
vs  http://rpubs.com/wch/27264

R6 also includes a vignette with detailed benchmarking:
http://cran.r-project.org/web/packages/R6/vignettes/Performance.html

I've added Winston to the thread since he's the expert.

Hadley

-- 
http://had.co.nz/


From jmc at r-project.org  Tue Jun 23 17:11:08 2015
From: jmc at r-project.org (John Chambers)
Date: Tue, 23 Jun 2015 08:11:08 -0700
Subject: [Rd] Plans to improve reference classes?
In-Reply-To: <CABdHhvEu9tb-3p7apMdx2orhsKQZiAbxX+DwhC44E5Xa3rD0Vg@mail.gmail.com>
References: <da993e9e95c744a18958291ae25b898d@CRIUS2013.keygene.local>
	<CAOQ5NycbBMTRQrtoXU=UrX0J4HLX-CONTDndSB=gKn7gV9pJ5w@mail.gmail.com>
	<CABdHhvGQX+6U21P4kKh1XesNa9ivB3xXVPkno0vNtJNr3eQajg@mail.gmail.com>
	<CAOQ5Nyf_6QPNy0nzhrzmgq7Pi14WcksqGB3Oe=21Qv-sPToX+w@mail.gmail.com>
	<CABdHhvEu9tb-3p7apMdx2orhsKQZiAbxX+DwhC44E5Xa3rD0Vg@mail.gmail.com>
Message-ID: <554C587E-FF8E-49A3-81B7-7B3FAEFF8480@r-project.org>

I understand Hadley's point; it's a consequence of the modification of the environment of the ref. class methods.

Good point, but it seems we can make that an option (there are advantages to it of code quality and ease of writing, when it works);

Let's discuss possibilities, off-list until things are a bit clearer.

John

On Jun 23, 2015, at 8:06 AM, Hadley Wickham <h.wickham at gmail.com> wrote:

>> 1) Is there any example or writeup on the difficulties of extending
>> reference classes across packages? Just so I can fully understand the
>> issues.
> 
> Here's a simple example:
> 
> library(scales)
> library(methods)
> 
> MyRange <- setRefClass("MyRange", contains = "DiscreteRange")
> a_range <- MyRange()
> a_range$train(1:10)
> # Error in a_range$train(1:10) : could not find function "train_discrete"
> 
> where train_discrete() is an non-exported function of the scales
> package called by the train() method of DiscreteRange.
> 
> There are also some notes about portable vs. non-portable R6 classes
> at http://cran.r-project.org/web/packages/R6/vignettes/Portable.html
> 
>> 2) In what sorts of situations does the performance of reference
>> classes cause problems? Sure, it's an order of magnitude slower than
>> constructing a simple environment, but those timings are in
>> microseconds, so one would need a thousand objects before it started
>> to be noticeable. Some motivating use cases would help.
> 
> It's a bit of a pathological case, but the switch from RefClasses to
> R6 made a noticeable performance improvement in shiny. It's hard to
> quantify the impact on an app, but the impact on the underlying
> reactive implementation was quite profound: http://rpubs.com/wch/27260
> vs  http://rpubs.com/wch/27264
> 
> R6 also includes a vignette with detailed benchmarking:
> http://cran.r-project.org/web/packages/R6/vignettes/Performance.html
> 
> I've added Winston to the thread since he's the expert.
> 
> Hadley
> 
> -- 
> http://had.co.nz/
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From winston at rstudio.com  Tue Jun 23 18:08:08 2015
From: winston at rstudio.com (Winston Chang)
Date: Tue, 23 Jun 2015 11:08:08 -0500
Subject: [Rd] Plans to improve reference classes?
In-Reply-To: <CABdHhvEu9tb-3p7apMdx2orhsKQZiAbxX+DwhC44E5Xa3rD0Vg@mail.gmail.com>
References: <da993e9e95c744a18958291ae25b898d@CRIUS2013.keygene.local>
	<CAOQ5NycbBMTRQrtoXU=UrX0J4HLX-CONTDndSB=gKn7gV9pJ5w@mail.gmail.com>
	<CABdHhvGQX+6U21P4kKh1XesNa9ivB3xXVPkno0vNtJNr3eQajg@mail.gmail.com>
	<CAOQ5Nyf_6QPNy0nzhrzmgq7Pi14WcksqGB3Oe=21Qv-sPToX+w@mail.gmail.com>
	<CABdHhvEu9tb-3p7apMdx2orhsKQZiAbxX+DwhC44E5Xa3rD0Vg@mail.gmail.com>
Message-ID: <CAFOpNVEE+rzQ26Tzf0ZYs5x6Jv1d_9+S2QrtVxDK02FMdTCPnw@mail.gmail.com>

I can provide a little background on why particular choices were made for
R6. Generally speaking, speed is a primary consideration in making
decisions about the design of R6. The basic structure of R6 classes is
actually not so different from reference classes: an R6 object is an
environment. But many aspects of R6 objects are simpler.

R6 does support clean cross-package inheritance. The key design feature
that allows this is that methods have one environment that they are bound
in (this is where they can be found), and another environment that they are
enclosed in (roughly, this is where they run). The enclosing environment
points back to the binding environment with a binding named `self`. Methods
must access other members with `self$`, as in `self$foo`. I've found that
this requirement results in clearer code, because it's always clear when
you're accessing something that's part of the object.

When a class inherits from another class, the enclosing environment also
contains a binding named `super`, which points to an environment containing
methods from the superclass. These methods also have their own enclosing
environment, with a `self` that points back to the object's binding
environment.

I know this might be hard to picture from the description; I have some
diagrams drawn up which might help. See pages 1 and 4 from this document:
  https://github.com/wch/R6/blob/master/doc_extra/R6.pdf
(The other pages show other features, like private members, and
non-portable R6 objects, which don't support clean cross-package
inheritance, and have a different structure.)


Regarding performance, R6 is fast relative to ref classes because it
doesn't do type checking for fields, and doesn't make use of S4. (There may
be other reasons as well, but I don't know the internals of ref classes
well enough to say much about it.) Accessing a member of an R6 object is
literally just accessing a binding in an environment, and that's a very
fast operation in R.

-Winston



On Tue, Jun 23, 2015 at 10:06 AM, Hadley Wickham <h.wickham at gmail.com>
wrote:

> > 1) Is there any example or writeup on the difficulties of extending
> > reference classes across packages? Just so I can fully understand the
> > issues.
>
> Here's a simple example:
>
> library(scales)
> library(methods)
>
> MyRange <- setRefClass("MyRange", contains = "DiscreteRange")
> a_range <- MyRange()
> a_range$train(1:10)
> # Error in a_range$train(1:10) : could not find function "train_discrete"
>
> where train_discrete() is an non-exported function of the scales
> package called by the train() method of DiscreteRange.
>
> There are also some notes about portable vs. non-portable R6 classes
> at http://cran.r-project.org/web/packages/R6/vignettes/Portable.html
>
> > 2) In what sorts of situations does the performance of reference
> > classes cause problems? Sure, it's an order of magnitude slower than
> > constructing a simple environment, but those timings are in
> > microseconds, so one would need a thousand objects before it started
> > to be noticeable. Some motivating use cases would help.
>
> It's a bit of a pathological case, but the switch from RefClasses to
> R6 made a noticeable performance improvement in shiny. It's hard to
> quantify the impact on an app, but the impact on the underlying
> reactive implementation was quite profound: http://rpubs.com/wch/27260
> vs  http://rpubs.com/wch/27264
>
> R6 also includes a vignette with detailed benchmarking:
> http://cran.r-project.org/web/packages/R6/vignettes/Performance.html
>
> I've added Winston to the thread since he's the expert.
>
> Hadley
>
> --
> http://had.co.nz/
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>

	[[alternative HTML version deleted]]


From murdoch.duncan at gmail.com  Tue Jun 23 19:23:35 2015
From: murdoch.duncan at gmail.com (Duncan Murdoch)
Date: Tue, 23 Jun 2015 13:23:35 -0400
Subject: [Rd] GCC update in Rtools?
In-Reply-To: <CAL6gwn+HBTJ0q5DPMbs52=SQOVCjSRy48-CVP5P=PFo05DvHAg@mail.gmail.com>
References: <CAL6gwn+HBTJ0q5DPMbs52=SQOVCjSRy48-CVP5P=PFo05DvHAg@mail.gmail.com>
Message-ID: <55899617.50906@gmail.com>

On 23/06/2015 10:36 AM, Avraham Adler wrote:
> Hello.
>
> There was a lot of discussion in March about the difficulties in
> having Rtools use a more recent version of GCC than 4.6.3. May we know
> if there has been any progress since then, or has dveleopment/testing
> been put on hold for the time being?

A volunteer has come forward to try to solve the outstanding issues 
(which were listed at 
https://rawgit.com/kevinushey/RToolsToolchainUpdate/master/mingwnotes.html). 
I haven't heard if any progress has been made.

Duncan Murdoch


From henrik.bengtsson at ucsf.edu  Wed Jun 24 05:47:23 2015
From: henrik.bengtsson at ucsf.edu (Henrik Bengtsson)
Date: Tue, 23 Jun 2015 20:47:23 -0700
Subject: [Rd] Listing all spawned jobs/processed after
	parallel::mcparallel()?
In-Reply-To: <5586ED72.3090902@stats.ox.ac.uk>
References: <CAFDcVCR0KBxf8YTct-=WvnLssnUBAOj4pV2U40p8Z2mtS=ktOA@mail.gmail.com>
	<5586ED72.3090902@stats.ox.ac.uk>
Message-ID: <CAFDcVCQetuDxsmfZa8YBMx7KiJoZxM7S1RGpURi5bXP861gv=Q@mail.gmail.com>

On Sun, Jun 21, 2015 at 9:59 AM, Prof Brian Ripley
<ripley at stats.ox.ac.uk> wrote:
> On 20/06/2015 22:21, Henrik Bengtsson wrote:
>>
>> QUESTION:
>> Is it possible to query number of active jobs running after launching
>> them with parallel::mcparallel()?
>>
>> For example, if I launch 3 jobs using:
>>
>>> library(parallel)
>>> f <- lapply(1:3, FUN=mcparallel)
>>
>>
>> then I can inspect them as:
>>
>>> str(f)
>>
>> List of 3
>>   $ :List of 2
>>    ..$ pid: int 142225
>>    ..$ fd : int [1:2] 8 13
>>    ..- attr(*, "class")= chr [1:3] "parallelJob" "childProcess" "process"
>>   $ :List of 2
>>    ..$ pid: int 142226
>>    ..$ fd : int [1:2] 10 15
>>    ..- attr(*, "class")= chr [1:3] "parallelJob" "childProcess" "process"
>>   $ :List of 2
>>    ..$ pid: int 142227
>>    ..$ fd : int [1:2] 12 17
>>    ..- attr(*, "class")= chr [1:3] "parallelJob" "childProcess" "process"
>>
>> However, if I launch them without "recording" them, or equivalently if I
>> do:
>>
>>> f <- lapply(1:3, FUN=mcparallel)
>>> rm(list="f")
>>
>>
>> is there a function/mechanism in R/the parallel package allowing me to
>> find the currently active/running processes?  ... or at least query
>> how many they are?  I'd like to use this to prevent spawning of more
>> than a maximum number of parallel processes.  (Yes, I'm away of
>> mclapply() and friends, but I'm looking at using more low-level
>> mcparallel()/mccollect()). I'm trying to decide whether I should
>> implement my own mechanism for keeping track of "jobs" or not.
>
>
> Note that 'currently active/running' is a slippery concept and is not what
> the results above show.  But see ?children, which seems to be what you are
> looking for.  It is not exported and there is no more detailed explanation
> save the source code.  Also note that tells you about children and not
> grandchildren ....
>
> You can find out about child processes (and their children) at OS level, for
> example via the 'ps' command, but doing so portably is not easy.

Thank you very much.  This was exactly what I was looking for.  I
appreciate the problem of identifying grandchildren, but with
children() I know at least have chance to get to a lower bound of the
number of "active children" (?children).

After some initial testing on Linux and OSX, I'm glad to see that
parallel:::children() seem to reflect what are actually active
processes, e.g. if I SIGTERM one of them externally, it is immediately
dropped from parallel:::children().  I also noticed that the process
remains active until it has been parallel:::mccollect():ed.

/Henrik

>
> --
> Brian D. Ripley,                  ripley at stats.ox.ac.uk
> Emeritus Professor of Applied Statistics, University of Oxford
> 1 South Parks Road, Oxford OX1 3TG, UK


From gokcen.eraslan at gmail.com  Wed Jun 24 10:34:13 2015
From: gokcen.eraslan at gmail.com (=?UTF-8?Q?G=c3=b6k=c3=a7en_Eraslan?=)
Date: Wed, 24 Jun 2015 10:34:13 +0200
Subject: [Rd] Improving string concatenation
In-Reply-To: <CAKShX4ACOn7Hnzo_pC+Ar9-r-8Gh3w4R77s7inNLyYto7Qoytg@mail.gmail.com>
References: <CAKShX4A5bVtxVAG+01QjNH0=LaVr6MH48xXs-OtbQQ2247cc_g@mail.gmail.com>
	<CADwqtCMPAbayj7TENRPtPSXjyFi7wjWfdW9qke7n+PExdwkpbw@mail.gmail.com>
	<CAKShX4D-LHgmh5cO2xxnLypzSgCWLDEnHopfE00MwbRFpRvmLg@mail.gmail.com>
	<CAF8bMcZ1pRVVN2ZhDZ1EEq_vMN_1WzNvyw1e24cE=TDa=m+mmQ@mail.gmail.com>
	<CAKShX4ACOn7Hnzo_pC+Ar9-r-8Gh3w4R77s7inNLyYto7Qoytg@mail.gmail.com>
Message-ID: <558A6B85.3050309@gmail.com>


On 2015-06-17 20:24, Joshua Bradley wrote:
>> How would this new '+' deal with factors, as paste does or as the current
> '+'
>> does?  Would number+string and string+number cause errors (as in current
>> '+' in R and python) or coerce both to strings (as in current R:paste and
> in perl's '+').
>
>
> I had posted this sample code previously to demonstrate how string
> concatenation could be implemented
>
> "+" = function(x,y) {
>      if(is.character(x) & is.character(y)) {
>          return(paste0(x , y))
>      } else {
>          .Primitive("+")(x,y)
>      }}
>

%+% might have been another option, possibly a more backward-compatible 
one. "paste0 - %+%" pair also resembles "outer - %o%" and "match - %in%" 
pairs.

My 2 cents.

PS: I don't agree that the subject is rather incomplete or just not true.

>
> so it would only happen if both objects were characters, otherwise you
> should expect the same behavior as before with all other classes. This
> would be backwards compatible as well since string+string was never
> supported before and therefore no one would have previously working code
> that could break.
>
> Josh Bradley

Goekcen.


From dtenenba at fredhutch.org  Wed Jun 24 22:31:01 2015
From: dtenenba at fredhutch.org (Dan Tenenbaum)
Date: Wed, 24 Jun 2015 13:31:01 -0700 (PDT)
Subject: [Rd] system2() shortens R.home() to 8.3 form on windows
In-Reply-To: <1157978315.3551777.1435177328866.JavaMail.root@fredhutch.org>
Message-ID: <1278054367.3552095.1435177861527.JavaMail.root@fredhutch.org>

Hi,

So in an interactive R session, R.home() returns the following:

> R.home()
[1] "D:/biocbld/bbs-3.2-bioc/R"

However, if I call it from system2(), I get different results:

> system2("R", "-q -e R.home()")
> R.home()
[1] "D:/biocbld/BBS-3~1.2-B/R"

Similarly:

> system2("R", "-q -e Sys.getenv('R_HOME')")
> Sys.getenv('R_HOME')
[1] "D:/biocbld/BBS-3~1.2-B/R"

?R.home says:

"On Windows the values of 'R.home()' and 'R_HOME' are guaranteed
     not to contain spaces, switching to the 8.3 short form of path
     elements if required."

Not sure if this is relevant, but there are no spaces in my path to begin with, so not sure why the conversion to 8.3 form was thought to be required.

It's a problem because we are running R CMD check on a package that generates a tex file which ends up containing a ~ in the path to Sweave.sty, and MikTex ends up interpreting the ~ literally, so the unit test fails. 

If we run the unit tests manually they pass. But in the context of R CMD check they fail, apparently because system2() is invoked at some point.

R version 3.2.1 (2015-06-18)
Platform: x86_64-w64-mingw32/x64 (64-bit)
Running under: Windows Server 2008 R2 x64 (build 7601) Service Pack 1

locale:
[1] LC_COLLATE=C
[2] LC_CTYPE=English_United States.1252
[3] LC_MONETARY=English_United States.1252
[4] LC_NUMERIC=C
[5] LC_TIME=English_United States.1252

attached base packages:
[1] stats     graphics  grDevices utils     datasets  methods   base

Thanks,
Dan


From dfletcher at maths.otago.ac.nz  Thu Jun 25 05:30:17 2015
From: dfletcher at maths.otago.ac.nz (David Fletcher)
Date: Thu, 25 Jun 2015 15:30:17 +1200
Subject: [Rd] Estimating overdispersion when using glm for count and
	binomial data
Message-ID: <124680c8e766db6e1fc34a92cab86079@maths.otago.ac.nz>

Dear All

I recently proposed a simple modification to Wedderburn's 1974 estimate 
of overdispersion for count and binomial data, which is used in glm for 
the quasipoisson and quasibinomial families (see the reference below).

Although my motivation for the modification arose from considering 
sparse data, it will be almost identical to Wedderburn's estimate when 
the data are not sparse. It should therefore work uniformly better than 
the current estimate in glm.

As I am not a regular to R mailing lists, I wasn't sure of the best 
means of proposing this modification. I therefore asked Paul Murrell, 
and he suggested I post it here.

The modification is very simple and would take at most a couple of 
lines of code. The reference below gives details regarding its 
asymptotic properties, as well as simulation results that illustrate the 
benefits of using it for sparse data.

I am happy to give more details if needed.

David Fletcher
Department of Mathematics and Statistics
University of Otago
Dunedin
New Zealand

D.J. Fletcher (2012) Estimating overdispersion when fitting a 
generalized linear model to sparse data. Biometrika 99:230?237 
(http://biomet.oxfordjournals.org/content/99/1/230.abstract?etoc)


From Krustev at hotmail.com  Thu Jun 25 15:49:34 2015
From: Krustev at hotmail.com (Teodor Krastev)
Date: Thu, 25 Jun 2015 06:49:34 -0700 (PDT)
Subject: [Rd] catch a windows user message from within R
Message-ID: <1435240174326-4709052.post@n4.nabble.com>

Hello everybody,

before I go play with C, creating dll which catches the windows message and
calls back function in R, let me ask you:
Does anybody know a pure R way to listen to windows messages and do
something when certain message is broadcast?

thank you
Teodor




--
View this message in context: http://r.789695.n4.nabble.com/catch-a-windows-user-message-from-within-R-tp4709052.html
Sent from the R devel mailing list archive at Nabble.com.


From bbolker at gmail.com  Thu Jun 25 17:25:37 2015
From: bbolker at gmail.com (Ben Bolker)
Date: Thu, 25 Jun 2015 15:25:37 +0000
Subject: [Rd]
	=?utf-8?q?Estimating_overdispersion_when_using_glm_for_count?=
	=?utf-8?q?_and=09binomial_data?=
References: <124680c8e766db6e1fc34a92cab86079@maths.otago.ac.nz>
Message-ID: <loom.20150625T172018-212@post.gmane.org>

David Fletcher <dfletcher <at> maths.otago.ac.nz> writes:

> 
> Dear All
> 
> I recently proposed a simple modification to Wedderburn's 1974 estimate 
> of overdispersion for count and binomial data, which is used in glm for 
> the quasipoisson and quasibinomial families (see the reference below).
> 

 [snip]

> 
> The modification is very simple and would take at most a couple of 
> lines of code. The reference below gives details regarding its 
> asymptotic properties, as well as simulation results that illustrate the 
> benefits of using it for sparse data.
> 
  [snip]

> 
> D.J. Fletcher (2012) Estimating overdispersion when fitting a 
> generalized linear model to sparse data. Biometrika 99:230?237 
> (http://biomet.oxfordjournals.org/content/99/1/230.abstract?etoc)

  This looks really useful.  Base R is very conservative; despite the
fact that it would be much more easily adopted in base R, I think it
is much more likely to find a home in an add-on package such as aods3
or glm2 than in base R ...

  cheers
    Ben Bolker

  

From Achim.Zeileis at R-project.org  Fri Jun 26 16:41:39 2015
From: Achim.Zeileis at R-project.org (Achim Zeileis)
Date: Fri, 26 Jun 2015 16:41:39 +0200 (CEST)
Subject: [Rd] [R-pkg-devel] Guidelines for S3 regression models
In-Reply-To: <3EDDF9DD076A4DFAA7355BEF21FE8B9C@M6800>
References: <3EDDF9DD076A4DFAA7355BEF21FE8B9C@M6800>
Message-ID: <alpine.DEB.2.11.1506261610280.4250@paninaro.uibk.ac.at>

Stephen,

thanks for your effort. The more appropriate list for this discussion is 
probably R-devel (as far as I understand it) so I've moved the discussion 
there.

Related topics have already been discussed in the past. Specifically, I 
remember contributions by Paul Johnson ("rockchalk" package) and John Fox 
("effects" and "car" package) as their packages also provide generic 
infrastructure for visualizing models and carrying out inference. I have 
also some related packages such as "lmtest", "sandwich", "strucchange", or 
"multcomp". Exporting tables of regression coefficients in a modular way 
via "texreg" or "memisc" could also be added.

> Once we have built a regression model, we typically want to use the 
> model for further processing, such as making predictions from the model 
> or plotting the residuals.  Unfortunately, for many packages on CRAN 
> this can be difficult.
>
> For example, some models don't have a residuals method and don't save 
> the call or data --- so you can't tell how to generate the residuals 
> from the model object itself.
>
> A common snag is that for some models the new data for predict() has to 
> be a matrix; for others it has to be a data.frame.  This places an 
> unnecessary burden on the user when both data.frames and matrices can 
> easily be supported by predict.
>
> To mitigate such issues, I'm going out on a limb and presenting some 
> guidelines for writers of S3 regression model functions (this document 
> is currently part of the plotmo package):

I think this is a nice and useful starting point. It's probably not 
comprehensive (yet) but will surely help.

You could add something more about writing the formula interface and the 
correct processing of model.frame, terms, model.response, model.matrix, 
model.weights, model.offset. Especially for models with linear predictors 
the latter two can be very useful and are often not hard to implement. In 
case the model has multiple parts or multiple responses, the "Formula" 
package (and its vignette) might also be helpful.

As for the S3 methods, I would omit coefficients, fitted.values, and resid 
from the list. These dispatch to coef, fitted, and residuals anyway. For 
inference it would also be very useful to add nobs(), df.residual(), 
vcov(), and logLik() and/or deviance() where applicable. An overview which 
lists some (but not all) useful methods is in Table 1 of 
vignette("betareg", package = "betareg").

For coef() and vcov() it is useful/important that the names and dimension 
match. Then Wald tests can be easily computed in functions like 
car::linearHypothesis(), car::deltaMethod(), lmtest::waldtest(), or 
lmtest::coeftest().

Thanks & best wishes,
Achim

> http://www.milbo.org/doc/modguide.pdf
>
> Your comments would be appreciated.
>
> Stephen Milborrow
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>
>


From dfletcher at maths.otago.ac.nz  Fri Jun 26 17:29:07 2015
From: dfletcher at maths.otago.ac.nz (David Fletcher)
Date: Sat, 27 Jun 2015 03:29:07 +1200
Subject: [Rd] Estimating overdispersion when using glm for count and
 binomial data
In-Reply-To: <mailman.19.1435312804.31456.r-devel@r-project.org>
References: <mailman.19.1435312804.31456.r-devel@r-project.org>
Message-ID: <653b211f5cd8ae703b6c710ce9051711@maths.otago.ac.nz>

Ben Bolker writes:

> This looks really useful. Base R is very conservative; despite the
> fact that it would be much more easily adopted in base R, I think it
> is much more likely to find a home in an add-on package such as aods3
> or glm2 than in base R ...

Thanks for these suggestions Ben - Simon Wood has also been in touch, 
and plans to put it into mgcv

David Fletcher

Original post:

I recently proposed a simple modification to Wedderburn's 1974 estimate 
of overdispersion for count and binomial data, which is used in glm for 
the quasipoisson and quasibinomial families (see the reference below). 
The modification is very simple and would take at most a couple of lines 
of code. The reference below gives details regarding its asymptotic 
properties, as well as simulation results that illustrate the benefits 
of using it for sparse data.

D.J. Fletcher (2012) Estimating overdispersion when fitting a 
generalized linear model to sparse data. Biometrika 99:230?237 
(http://biomet.oxfordjournals.org/content/99/1/230.abstract?etoc)


From Tom.Wenseleers at bio.kuleuven.be  Mon Jun 29 12:55:52 2015
From: Tom.Wenseleers at bio.kuleuven.be (Tom Wenseleers)
Date: Mon, 29 Jun 2015 10:55:52 +0000
Subject: [Rd] Support for transparency in metafile export & support for
 export to Powerpoint
Message-ID: <37EFC97028F3E44082ACC5CBEC00563011543534@ICTS-S-MBX13.luna.kuleuven.be>

Dear all,
For vector-based output, PDF export of R graphs works well, but unfortunately Office on Windows provide poor support for PDF and importing & exporting to other formats using Inkscape can be buggy.
Enhanced metafile export in turn does not support transparency (also not in package devEMF - are there any plans to support this perhaps in the future?). And rasterising graphs to a PNG I often find dissatisfactory, as vector-based graphs should ideally stay in vector format, especially when it comes to axes and axes labels etc.
So this means that by default, there are rather few good options left to export all those beautiful R graphs in high-quality vector format.

I recently discovered that package ReporteRs provides near-perfect export of R graphs in fully editable vector format to Powerpoint or Word using the Office native DrawingML format, with full upport for transparency, in a much better quality than what is provided by default in grDevices. This made me wonder if exporting a graph to Powerpoint could perhaps also be supported in grDevices?

In ReporteRs the code e.g. to export a ggplot would be

library( ReporteRs )
require( ggplot2 )
mydoc = pptx(  )
mydoc = addSlide( mydoc, slide.layout = "Title and Content" )
mydoc = addTitle( mydoc, "Plot examples" )
myplot = qplot(Sepal.Length, Petal.Length
               , data = iris, color = Species
               , size = Petal.Width, alpha = I(0.7)
)
mydoc = addPlot( mydoc, function( ) print( myplot ), vector.graphic=TRUE)
writeDoc( mydoc, file = "test plot.pptx" )


I was thinking it could be nice though to provide this capability also in base R - so that e.g.
windows()
plot(...)
File...Save as...would also provide an option to save as Powerpoint, with options for the width, height, font and font size used for export, or that there would be an extra command dev.copy2ppt or a combination of ppt ( ) and dev.off() to export to Powerpoint, using the code available in ReporteRs.

Especially for use in the classroom this would be super handy, as windows users are now pretty much tied to using bitmap-based PNG, thereby limiting the ease with which the final layout of R graphs can be edited !

best regards,
Tom Wenseleers

Prof Tom Wenseleers
University of Leuven
Naamsestraat 59
3000 Leuven, Belgium
https://bio.kuleuven.be/ento/wenseleers/twenseleers.htm

	[[alternative HTML version deleted]]


From by.hook.or at gmail.com  Mon Jun 29 19:03:52 2015
From: by.hook.or at gmail.com (franknarf)
Date: Mon, 29 Jun 2015 10:03:52 -0700 (PDT)
Subject: [Rd] shouldn't seq(my_int_vector,
	length.out=y) be an integer vector?
Message-ID: <1435597432466-4709180.post@n4.nabble.com>

The class of seq(1L,length.out=6L) is numeric, which is not what I expect.
seq(1L,6L) gives an integer vector; and even seq(1,6) does, so the
departure/inconsistency when length.out is used doesn't seem desirable.

In the code for seq.default, I see

length.out <- ceiling(length.out) 

and I'd suggest wrapping this in as.integer, since apparently ceiling
doesn't return an integer. (I'm sure there's some reason for that.)

--Frank



--
View this message in context: http://r.789695.n4.nabble.com/shouldn-t-seq-my-int-vector-length-out-y-be-an-integer-vector-tp4709180.html
Sent from the R devel mailing list archive at Nabble.com.


From daattali at gmail.com  Tue Jun 30 09:02:34 2015
From: daattali at gmail.com (Dean Attali)
Date: Tue, 30 Jun 2015 00:02:34 -0700
Subject: [Rd] Defining a `show` function breaks the print-ing of S4 object
 -- bug or expected?
Message-ID: <CA+j8Z+=233OjOe00qV+5MdF9kkkVrWh4wfmUeAzwb4Q12DSxew@mail.gmail.com>

Hi r-devel

If you define a function named `show` or attach a package with an exported
`show` function, then printing/vieweing S4 objects breaks. This is probably
because the `print` function calls `show`, which is now masked.

Example:

show <- function() {}
> setClass("Person", slots = list(name = "character"))
> tom <- new("Person", name = "Tom")
> tom # error
> methods::show(tom) # works


The error was a surprise to me because  I was under the assumption that
`show` would be namespaced and therefore should not break.
I'm wondering if this is intended behaviour, or if this is a problem.  My
intuition, and Hadley agreed on Twitter, is that defining a `show` method
should not have such a grave effect on printing S4 objects.

Thanks

---
http://deanattali.com

	[[alternative HTML version deleted]]


From milbo at sonic.net  Tue Jun 30 13:36:53 2015
From: milbo at sonic.net (Stephen Milborrow)
Date: Tue, 30 Jun 2015 13:36:53 +0200
Subject: [Rd] Guidelines for S3 regression models
In-Reply-To: <alpine.DEB.2.11.1506261610280.4250@paninaro.uibk.ac.at>
References: <3EDDF9DD076A4DFAA7355BEF21FE8B9C@M6800>
	<alpine.DEB.2.11.1506261610280.4250@paninaro.uibk.ac.at>
Message-ID: <2D1503B868434E8588E8F4BE47975FAF@M6800>

Given how much documentation is available on R coding in general, it is
surprising how little is available specifically on writing model code.
Researchers who come up with a new method of regression, and who want to
write an S3 model for that method, must currently go all the way back to the 
Venables and Ripley S programming book.

> On 26.06.2015 14:09, Stephen Milborrow wrote:
> > Once we have built a regression model, we typically want to use the
> > model for further processing, such as making predictions from the model
> > or plotting the residuals.  Unfortunately, for many packages on CRAN
> > this can be difficult.
> >
> > For example, some models don't have a residuals method and don't save
> > the call or data --- so you can't tell how to generate the residuals
> > from the model object itself.
> >
> > A common snag is that for some models the new data for predict() has to
> > be a matrix; for others it has to be a data.frame.  This places an
> > unnecessary burden on the user when both data.frames and matrices can
> > easily be supported by predict.
> >
> > To mitigate such issues, I'm going out on a limb and presenting some
> > guidelines for writers of S3 regression model functions (this document
> > is currently part of the plotmo package):
> > http://www.milbo.org/doc/modguide.pdf
>
> On 26.06.2015 16:41, Achim Zeileis wrote:
> I think this is a nice and useful starting point. It's probably not
> comprehensive (yet) but will surely help.
>
> You could add something more about writing the formula interface and the
> correct processing of model.frame, terms, model.response, model.matrix,
> model.weights, model.offset. Especially for models with linear predictors
> the latter two can be very useful and are often not hard to implement. In
> case the model has multiple parts or multiple responses, the "Formula"
> package (and its vignette) might also be helpful.
>
> As for the S3 methods, I would omit coefficients, fitted.values, and resid
> from the list. These dispatch to coef, fitted, and residuals anyway. For
> inference it would also be very useful to add nobs(), df.residual(),
> vcov(), and logLik() and/or deviance() where applicable. An overview which
> lists some (but not all) useful methods is in Table 1 of
> vignette("betareg", package = "betareg").
>
> For coef() and vcov() it is useful/important that the names and dimension
> match. Then Wald tests can be easily computed in functions like
> car::linearHypothesis(), car::deltaMethod(), lmtest::waldtest(), or
> lmtest::coeftest().

Thanks for these, I'll update the document.

Stephen Milborrow


From h.wickham at gmail.com  Tue Jun 30 13:57:23 2015
From: h.wickham at gmail.com (Hadley Wickham)
Date: Tue, 30 Jun 2015 13:57:23 +0200
Subject: [Rd] Defining a `show` function breaks the print-ing of S4
 object -- bug or expected?
In-Reply-To: <CA+j8Z+=233OjOe00qV+5MdF9kkkVrWh4wfmUeAzwb4Q12DSxew@mail.gmail.com>
References: <CA+j8Z+=233OjOe00qV+5MdF9kkkVrWh4wfmUeAzwb4Q12DSxew@mail.gmail.com>
Message-ID: <CABdHhvEVbdbNKUswtqENgfy1L4yQDOEEKyO--ft+x7f2M+ALPg@mail.gmail.com>

A slightly simpler formulation of the problem is:

show <- function(...) stop("My show!")
methods::setClass("Person", slots = list(name = "character"))
methods::new("Person", name = "Tom")
#> Error in (function (...)  : My show!

Hadley

On Tue, Jun 30, 2015 at 9:02 AM, Dean Attali <daattali at gmail.com> wrote:
> Hi r-devel
>
> If you define a function named `show` or attach a package with an exported
> `show` function, then printing/vieweing S4 objects breaks. This is probably
> because the `print` function calls `show`, which is now masked.
>
> Example:
>
> show <- function() {}
>> setClass("Person", slots = list(name = "character"))
>> tom <- new("Person", name = "Tom")
>> tom # error
>> methods::show(tom) # works
>
>
> The error was a surprise to me because  I was under the assumption that
> `show` would be namespaced and therefore should not break.
> I'm wondering if this is intended behaviour, or if this is a problem.  My
> intuition, and Hadley agreed on Twitter, is that defining a `show` method
> should not have such a grave effect on printing S4 objects.
>
> Thanks
>
> ---
> http://deanattali.com
>
>         [[alternative HTML version deleted]]
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel



-- 
http://had.co.nz/


From murdoch.duncan at gmail.com  Tue Jun 30 14:20:27 2015
From: murdoch.duncan at gmail.com (Duncan Murdoch)
Date: Tue, 30 Jun 2015 14:20:27 +0200
Subject: [Rd] Defining a `show` function breaks the print-ing of S4
 object -- bug or expected?
In-Reply-To: <CABdHhvEVbdbNKUswtqENgfy1L4yQDOEEKyO--ft+x7f2M+ALPg@mail.gmail.com>
References: <CA+j8Z+=233OjOe00qV+5MdF9kkkVrWh4wfmUeAzwb4Q12DSxew@mail.gmail.com>
	<CABdHhvEVbdbNKUswtqENgfy1L4yQDOEEKyO--ft+x7f2M+ALPg@mail.gmail.com>
Message-ID: <5592898B.5000103@gmail.com>

On 30/06/2015 1:57 PM, Hadley Wickham wrote:
> A slightly simpler formulation of the problem is:
> 
> show <- function(...) stop("My show!")
> methods::setClass("Person", slots = list(name = "character"))
> methods::new("Person", name = "Tom")
> #> Error in (function (...)  : My show!

Just to be clear:  the complaint is that the auto-called show() is not
methods::show?  I.e. after

x <- methods::new("Person", name = "Tom")

you would expect

show(x)

to give the error, but not

x

??

Duncan Murdoch

> 
> Hadley
> 
> On Tue, Jun 30, 2015 at 9:02 AM, Dean Attali <daattali at gmail.com> wrote:
>> Hi r-devel
>>
>> If you define a function named `show` or attach a package with an exported
>> `show` function, then printing/vieweing S4 objects breaks. This is probably
>> because the `print` function calls `show`, which is now masked.
>>
>> Example:
>>
>> show <- function() {}
>>> setClass("Person", slots = list(name = "character"))
>>> tom <- new("Person", name = "Tom")
>>> tom # error
>>> methods::show(tom) # works
>>
>>
>> The error was a surprise to me because  I was under the assumption that
>> `show` would be namespaced and therefore should not break.
>> I'm wondering if this is intended behaviour, or if this is a problem.  My
>> intuition, and Hadley agreed on Twitter, is that defining a `show` method
>> should not have such a grave effect on printing S4 objects.
>>
>> Thanks
>>
>> ---
>> http://deanattali.com
>>
>>         [[alternative HTML version deleted]]
>>
>> ______________________________________________
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel
> 
> 
>


From h.wickham at gmail.com  Tue Jun 30 14:38:15 2015
From: h.wickham at gmail.com (Hadley Wickham)
Date: Tue, 30 Jun 2015 14:38:15 +0200
Subject: [Rd] Defining a `show` function breaks the print-ing of S4
 object -- bug or expected?
In-Reply-To: <5592898B.5000103@gmail.com>
References: <CA+j8Z+=233OjOe00qV+5MdF9kkkVrWh4wfmUeAzwb4Q12DSxew@mail.gmail.com>
	<CABdHhvEVbdbNKUswtqENgfy1L4yQDOEEKyO--ft+x7f2M+ALPg@mail.gmail.com>
	<5592898B.5000103@gmail.com>
Message-ID: <CABdHhvG7XJS6td4CxYYPBjgtwXqShGcRuDHvJ=HaKPT7jdb6VA@mail.gmail.com>

On Tue, Jun 30, 2015 at 2:20 PM, Duncan Murdoch
<murdoch.duncan at gmail.com> wrote:
> On 30/06/2015 1:57 PM, Hadley Wickham wrote:
>> A slightly simpler formulation of the problem is:
>>
>> show <- function(...) stop("My show!")
>> methods::setClass("Person", slots = list(name = "character"))
>> methods::new("Person", name = "Tom")
>> #> Error in (function (...)  : My show!
>
> Just to be clear:  the complaint is that the auto-called show() is not
> methods::show?  I.e. after
>
> x <- methods::new("Person", name = "Tom")
>
> you would expect
>
> show(x)
>
> to give the error, but not
>
> x
>
> ??

Correct - I'd expect print() to always call methods::show(), not
whatever show() is first on the search path.

Hadley

-- 
http://had.co.nz/


From luke-tierney at uiowa.edu  Tue Jun 30 17:11:10 2015
From: luke-tierney at uiowa.edu (luke-tierney at uiowa.edu)
Date: Tue, 30 Jun 2015 10:11:10 -0500
Subject: [Rd] Defining a `show` function breaks the print-ing of S4
 object -- bug or expected?
In-Reply-To: <CABdHhvG7XJS6td4CxYYPBjgtwXqShGcRuDHvJ=HaKPT7jdb6VA@mail.gmail.com>
References: <CA+j8Z+=233OjOe00qV+5MdF9kkkVrWh4wfmUeAzwb4Q12DSxew@mail.gmail.com>
	<CABdHhvEVbdbNKUswtqENgfy1L4yQDOEEKyO--ft+x7f2M+ALPg@mail.gmail.com>
	<5592898B.5000103@gmail.com>
	<CABdHhvG7XJS6td4CxYYPBjgtwXqShGcRuDHvJ=HaKPT7jdb6VA@mail.gmail.com>
Message-ID: <alpine.OSX.2.02.1506301009280.7711@lukes-macbook-air.local>

Same thing happens with S3 if you redefine print(). I thought that
code was actually calculating the function to call rather than the
symbol to use, but apparently not. Shouldn't be too hard to fix.

luke

On Tue, 30 Jun 2015, Hadley Wickham wrote:

> On Tue, Jun 30, 2015 at 2:20 PM, Duncan Murdoch
> <murdoch.duncan at gmail.com> wrote:
>> On 30/06/2015 1:57 PM, Hadley Wickham wrote:
>>> A slightly simpler formulation of the problem is:
>>>
>>> show <- function(...) stop("My show!")
>>> methods::setClass("Person", slots = list(name = "character"))
>>> methods::new("Person", name = "Tom")
>>> #> Error in (function (...)  : My show!
>>
>> Just to be clear:  the complaint is that the auto-called show() is not
>> methods::show?  I.e. after
>>
>> x <- methods::new("Person", name = "Tom")
>>
>> you would expect
>>
>> show(x)
>>
>> to give the error, but not
>>
>> x
>>
>> ??
>
> Correct - I'd expect print() to always call methods::show(), not
> whatever show() is first on the search path.
>
> Hadley
>
>

-- 
Luke Tierney
Ralph E. Wareham Professor of Mathematical Sciences
University of Iowa                  Phone:             319-335-3386
Department of Statistics and        Fax:               319-335-3017
    Actuarial Science
241 Schaeffer Hall                  email:   luke-tierney at uiowa.edu
Iowa City, IA 52242                 WWW:  http://www.stat.uiowa.edu


From lorenz at usgs.gov  Tue Jun 30 17:27:14 2015
From: lorenz at usgs.gov (Lorenz, David)
Date: Tue, 30 Jun 2015 10:27:14 -0500
Subject: [Rd] Defining a `show` function breaks the print-ing of S4
 object -- bug or expected?
In-Reply-To: <alpine.OSX.2.02.1506301009280.7711@lukes-macbook-air.local>
References: <CA+j8Z+=233OjOe00qV+5MdF9kkkVrWh4wfmUeAzwb4Q12DSxew@mail.gmail.com>
	<CABdHhvEVbdbNKUswtqENgfy1L4yQDOEEKyO--ft+x7f2M+ALPg@mail.gmail.com>
	<5592898B.5000103@gmail.com>
	<CABdHhvG7XJS6td4CxYYPBjgtwXqShGcRuDHvJ=HaKPT7jdb6VA@mail.gmail.com>
	<alpine.OSX.2.02.1506301009280.7711@lukes-macbook-air.local>
Message-ID: <CALxY2LfF-vP5GdN174sy_V-290VVeUJUWVBUVriepGg2qzCKcw@mail.gmail.com>

There is something I'm really missing here. The function show is a
standardGeneric function, so the correct way to write it as method like
this:

setMethod("show",  "Person", function(object) {

for an object of class "Person" for example.
Dave

On Tue, Jun 30, 2015 at 10:11 AM, <luke-tierney at uiowa.edu> wrote:

> Same thing happens with S3 if you redefine print(). I thought that
> code was actually calculating the function to call rather than the
> symbol to use, but apparently not. Shouldn't be too hard to fix.
>
> luke
>
> On Tue, 30 Jun 2015, Hadley Wickham wrote:
>
>  On Tue, Jun 30, 2015 at 2:20 PM, Duncan Murdoch
>> <murdoch.duncan at gmail.com> wrote:
>>
>>> On 30/06/2015 1:57 PM, Hadley Wickham wrote:
>>>
>>>> A slightly simpler formulation of the problem is:
>>>>
>>>> show <- function(...) stop("My show!")
>>>> methods::setClass("Person", slots = list(name = "character"))
>>>> methods::new("Person", name = "Tom")
>>>> #> Error in (function (...)  : My show!
>>>>
>>>
>>> Just to be clear:  the complaint is that the auto-called show() is not
>>> methods::show?  I.e. after
>>>
>>> x <- methods::new("Person", name = "Tom")
>>>
>>> you would expect
>>>
>>> show(x)
>>>
>>> to give the error, but not
>>>
>>> x
>>>
>>> ??
>>>
>>
>> Correct - I'd expect print() to always call methods::show(), not
>> whatever show() is first on the search path.
>>
>> Hadley
>>
>>
>>
> --
> Luke Tierney
> Ralph E. Wareham Professor of Mathematical Sciences
> University of Iowa                  Phone:             319-335-3386
> Department of Statistics and        Fax:               319-335-3017
>    Actuarial Science
> 241 Schaeffer Hall                  email:   luke-tierney at uiowa.edu
> Iowa City, IA 52242                 WWW:  http://www.stat.uiowa.edu
>
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>

	[[alternative HTML version deleted]]


From murdoch.duncan at gmail.com  Tue Jun 30 17:33:52 2015
From: murdoch.duncan at gmail.com (Duncan Murdoch)
Date: Tue, 30 Jun 2015 17:33:52 +0200
Subject: [Rd] Defining a `show` function breaks the print-ing of S4
 object -- bug or expected?
In-Reply-To: <CALxY2LfF-vP5GdN174sy_V-290VVeUJUWVBUVriepGg2qzCKcw@mail.gmail.com>
References: <CA+j8Z+=233OjOe00qV+5MdF9kkkVrWh4wfmUeAzwb4Q12DSxew@mail.gmail.com>	<CABdHhvEVbdbNKUswtqENgfy1L4yQDOEEKyO--ft+x7f2M+ALPg@mail.gmail.com>	<5592898B.5000103@gmail.com>	<CABdHhvG7XJS6td4CxYYPBjgtwXqShGcRuDHvJ=HaKPT7jdb6VA@mail.gmail.com>	<alpine.OSX.2.02.1506301009280.7711@lukes-macbook-air.local>
	<CALxY2LfF-vP5GdN174sy_V-290VVeUJUWVBUVriepGg2qzCKcw@mail.gmail.com>
Message-ID: <5592B6E0.30009@gmail.com>

On 30/06/2015 5:27 PM, Lorenz, David wrote:
> There is something I'm really missing here. The function show is a
> standardGeneric function, so the correct way to write it as method like
> this:

That describes methods::show.  The problem is that the default print
mechanism isn't calling methods::show() (or base::print() as Luke says),
it's calling show() or print() in the global environment, so the user's
function overrides the generic, and you get the error.

Luke, are you going to look at this, or should I?

Duncan Murdoch

> 
> setMethod("show",  "Person", function(object) {
> 
> for an object of class "Person" for example.


> Dave
> 
> On Tue, Jun 30, 2015 at 10:11 AM, <luke-tierney at uiowa.edu> wrote:
> 
>> Same thing happens with S3 if you redefine print(). I thought that
>> code was actually calculating the function to call rather than the
>> symbol to use, but apparently not. Shouldn't be too hard to fix.
>>
>> luke
>>
>> On Tue, 30 Jun 2015, Hadley Wickham wrote:
>>
>>  On Tue, Jun 30, 2015 at 2:20 PM, Duncan Murdoch
>>> <murdoch.duncan at gmail.com> wrote:
>>>
>>>> On 30/06/2015 1:57 PM, Hadley Wickham wrote:
>>>>
>>>>> A slightly simpler formulation of the problem is:
>>>>>
>>>>> show <- function(...) stop("My show!")
>>>>> methods::setClass("Person", slots = list(name = "character"))
>>>>> methods::new("Person", name = "Tom")
>>>>> #> Error in (function (...)  : My show!
>>>>>
>>>>
>>>> Just to be clear:  the complaint is that the auto-called show() is not
>>>> methods::show?  I.e. after
>>>>
>>>> x <- methods::new("Person", name = "Tom")
>>>>
>>>> you would expect
>>>>
>>>> show(x)
>>>>
>>>> to give the error, but not
>>>>
>>>> x
>>>>
>>>> ??
>>>>
>>>
>>> Correct - I'd expect print() to always call methods::show(), not
>>> whatever show() is first on the search path.
>>>
>>> Hadley
>>>
>>>
>>>
>> --
>> Luke Tierney
>> Ralph E. Wareham Professor of Mathematical Sciences
>> University of Iowa                  Phone:             319-335-3386
>> Department of Statistics and        Fax:               319-335-3017
>>    Actuarial Science
>> 241 Schaeffer Hall                  email:   luke-tierney at uiowa.edu
>> Iowa City, IA 52242                 WWW:  http://www.stat.uiowa.edu
>>
>>
>> ______________________________________________
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>
> 
> 	[[alternative HTML version deleted]]
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>


From cdetermanjr at gmail.com  Tue Jun 30 18:42:27 2015
From: cdetermanjr at gmail.com (Charles Determan)
Date: Tue, 30 Jun 2015 11:42:27 -0500
Subject: [Rd] Why doesn't R have a float data type?
Message-ID: <CAKxd1KM9Ktmh3Aa_bYpbA1w3xAY=ZWpStLmzGhduYfzFZf_OeA@mail.gmail.com>

This is strictly a curiosity question.  I am aware the R doesn't possess a
float data type.  I also don't mean to request that such functionality be
implemented as I'm sure it would require a large amount of work with
potential back compatibility conflicts.  But I wanted to know why R has
never had a float data type available?

Regards,
Charles

	[[alternative HTML version deleted]]


From pgilbert902 at gmail.com  Tue Jun 30 19:04:52 2015
From: pgilbert902 at gmail.com (Paul Gilbert)
Date: Tue, 30 Jun 2015 13:04:52 -0400
Subject: [Rd] Defining a `show` function breaks the print-ing of S4
 object -- bug or expected?
In-Reply-To: <5592B6E0.30009@gmail.com>
References: <CA+j8Z+=233OjOe00qV+5MdF9kkkVrWh4wfmUeAzwb4Q12DSxew@mail.gmail.com>	<CABdHhvEVbdbNKUswtqENgfy1L4yQDOEEKyO--ft+x7f2M+ALPg@mail.gmail.com>	<5592898B.5000103@gmail.com>	<CABdHhvG7XJS6td4CxYYPBjgtwXqShGcRuDHvJ=HaKPT7jdb6VA@mail.gmail.com>	<alpine.OSX.2.02.1506301009280.7711@lukes-macbook-air.local>	<CALxY2LfF-vP5GdN174sy_V-290VVeUJUWVBUVriepGg2qzCKcw@mail.gmail.com>
	<5592B6E0.30009@gmail.com>
Message-ID: <5592CC34.20309@gmail.com>



On 06/30/2015 11:33 AM, Duncan Murdoch wrote:
> On 30/06/2015 5:27 PM, Lorenz, David wrote:
>> There is something I'm really missing here. The function show is a
>> standardGeneric function, so the correct way to write it as method like
>> this:
>
> That describes methods::show.  The problem is that the default print
> mechanism isn't calling methods::show() (or base::print() as Luke says),
> it's calling show() or print() in the global environment, so the user's
> function overrides the generic, and you get the error.

These are two different problems aren't they? I can see that you might 
want to ensure that base::print() calls methods::show(), but forcing the 
default print to go to base::print(), rather than whatever print() is 
first on the search path, would seem like a real change of philosophy. 
What about all the other base functions that can be overridden by 
something in the global environment?

Paul
>
> Luke, are you going to look at this, or should I?
>
> Duncan Murdoch
>
>>
>> setMethod("show",  "Person", function(object) {
>>
>> for an object of class "Person" for example.
>
>
>> Dave
>>
>> On Tue, Jun 30, 2015 at 10:11 AM, <luke-tierney at uiowa.edu> wrote:
>>
>>> Same thing happens with S3 if you redefine print(). I thought that
>>> code was actually calculating the function to call rather than the
>>> symbol to use, but apparently not. Shouldn't be too hard to fix.
>>>
>>> luke
>>>
>>> On Tue, 30 Jun 2015, Hadley Wickham wrote:
>>>
>>>   On Tue, Jun 30, 2015 at 2:20 PM, Duncan Murdoch
>>>> <murdoch.duncan at gmail.com> wrote:
>>>>
>>>>> On 30/06/2015 1:57 PM, Hadley Wickham wrote:
>>>>>
>>>>>> A slightly simpler formulation of the problem is:
>>>>>>
>>>>>> show <- function(...) stop("My show!")
>>>>>> methods::setClass("Person", slots = list(name = "character"))
>>>>>> methods::new("Person", name = "Tom")
>>>>>> #> Error in (function (...)  : My show!
>>>>>>
>>>>>
>>>>> Just to be clear:  the complaint is that the auto-called show() is not
>>>>> methods::show?  I.e. after
>>>>>
>>>>> x <- methods::new("Person", name = "Tom")
>>>>>
>>>>> you would expect
>>>>>
>>>>> show(x)
>>>>>
>>>>> to give the error, but not
>>>>>
>>>>> x
>>>>>
>>>>> ??
>>>>>
>>>>
>>>> Correct - I'd expect print() to always call methods::show(), not
>>>> whatever show() is first on the search path.
>>>>
>>>> Hadley
>>>>
>>>>
>>>>
>>> --
>>> Luke Tierney
>>> Ralph E. Wareham Professor of Mathematical Sciences
>>> University of Iowa                  Phone:             319-335-3386
>>> Department of Statistics and        Fax:               319-335-3017
>>>     Actuarial Science
>>> 241 Schaeffer Hall                  email:   luke-tierney at uiowa.edu
>>> Iowa City, IA 52242                 WWW:  http://www.stat.uiowa.edu
>>>
>>>
>>> ______________________________________________
>>> R-devel at r-project.org mailing list
>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>>
>>
>> 	[[alternative HTML version deleted]]
>>
>> ______________________________________________
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>


From 538280 at gmail.com  Tue Jun 30 19:29:18 2015
From: 538280 at gmail.com (Greg Snow)
Date: Tue, 30 Jun 2015 11:29:18 -0600
Subject: [Rd] Why doesn't R have a float data type?
In-Reply-To: <CAKxd1KM9Ktmh3Aa_bYpbA1w3xAY=ZWpStLmzGhduYfzFZf_OeA@mail.gmail.com>
References: <CAKxd1KM9Ktmh3Aa_bYpbA1w3xAY=ZWpStLmzGhduYfzFZf_OeA@mail.gmail.com>
Message-ID: <CAFEqCdyWCA2QXCW89fpRNibCZP8y716ODgt28tTpJ=LRwq47zg@mail.gmail.com>

My understanding is that R does have a float type, it is just called
"double" instead of "float".

If you are referring to a single precision floating point type, then R
does have the "as.single" function, but that does not really change
the way the number is stored, just sets a flag so that the proper
conversion is done when passing to the ".C" or ".fortran" functions.
The original S language and S+ would store things in single precision
if needed, but for computations these values were almost always
converted to doubles for precision.  By the time R was developed the
memory saving of using single precision instead of double precision
was not as big an issue, so I expect that nobody ever considered it
worth the effort to fully implement the single precision storage.

If you mean something else other than the above by "float data type"
then please give us more details so that we can better answer the
question.

On Tue, Jun 30, 2015 at 10:42 AM, Charles Determan
<cdetermanjr at gmail.com> wrote:
> This is strictly a curiosity question.  I am aware the R doesn't possess a
> float data type.  I also don't mean to request that such functionality be
> implemented as I'm sure it would require a large amount of work with
> potential back compatibility conflicts.  But I wanted to know why R has
> never had a float data type available?
>
> Regards,
> Charles
>
>         [[alternative HTML version deleted]]
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel



-- 
Gregory (Greg) L. Snow Ph.D.
538280 at gmail.com


From cdetermanjr at gmail.com  Tue Jun 30 19:32:01 2015
From: cdetermanjr at gmail.com (Charles Determan)
Date: Tue, 30 Jun 2015 12:32:01 -0500
Subject: [Rd] Why doesn't R have a float data type?
In-Reply-To: <CAFEqCdyWCA2QXCW89fpRNibCZP8y716ODgt28tTpJ=LRwq47zg@mail.gmail.com>
References: <CAKxd1KM9Ktmh3Aa_bYpbA1w3xAY=ZWpStLmzGhduYfzFZf_OeA@mail.gmail.com>
	<CAFEqCdyWCA2QXCW89fpRNibCZP8y716ODgt28tTpJ=LRwq47zg@mail.gmail.com>
Message-ID: <CAKxd1KPZ3b_XL-1K10Ls22=TecJVxt=0mEYStxGX=eAZ17+e0g@mail.gmail.com>

Hi Greg, I was referring to the single precision type.  Your points were
what I expected.  I just wanted to ask the R community if there was any
other reason than 'there wasn't any reason to implement it'.

Thanks,
Charles

On Tue, Jun 30, 2015 at 12:29 PM, Greg Snow <538280 at gmail.com> wrote:

> My understanding is that R does have a float type, it is just called
> "double" instead of "float".
>
> If you are referring to a single precision floating point type, then R
> does have the "as.single" function, but that does not really change
> the way the number is stored, just sets a flag so that the proper
> conversion is done when passing to the ".C" or ".fortran" functions.
> The original S language and S+ would store things in single precision
> if needed, but for computations these values were almost always
> converted to doubles for precision.  By the time R was developed the
> memory saving of using single precision instead of double precision
> was not as big an issue, so I expect that nobody ever considered it
> worth the effort to fully implement the single precision storage.
>
> If you mean something else other than the above by "float data type"
> then please give us more details so that we can better answer the
> question.
>
> On Tue, Jun 30, 2015 at 10:42 AM, Charles Determan
> <cdetermanjr at gmail.com> wrote:
> > This is strictly a curiosity question.  I am aware the R doesn't possess
> a
> > float data type.  I also don't mean to request that such functionality be
> > implemented as I'm sure it would require a large amount of work with
> > potential back compatibility conflicts.  But I wanted to know why R has
> > never had a float data type available?
> >
> > Regards,
> > Charles
> >
> >         [[alternative HTML version deleted]]
> >
> > ______________________________________________
> > R-devel at r-project.org mailing list
> > https://stat.ethz.ch/mailman/listinfo/r-devel
>
>
>
> --
> Gregory (Greg) L. Snow Ph.D.
> 538280 at gmail.com
>

	[[alternative HTML version deleted]]


From ripley at stats.ox.ac.uk  Tue Jun 30 19:35:20 2015
From: ripley at stats.ox.ac.uk (Prof Brian Ripley)
Date: Tue, 30 Jun 2015 18:35:20 +0100
Subject: [Rd] Why doesn't R have a float data type?
In-Reply-To: <CAKxd1KM9Ktmh3Aa_bYpbA1w3xAY=ZWpStLmzGhduYfzFZf_OeA@mail.gmail.com>
References: <CAKxd1KM9Ktmh3Aa_bYpbA1w3xAY=ZWpStLmzGhduYfzFZf_OeA@mail.gmail.com>
Message-ID: <5592D358.1000506@stats.ox.ac.uk>

On 30/06/2015 17:42, Charles Determan wrote:
> This is strictly a curiosity question.  I am aware the R doesn't possess a
> float data type.  I also don't mean to request that such functionality be
> implemented as I'm sure it would require a large amount of work with
> potential back compatibility conflicts.  But I wanted to know why R has
> never had a float data type available?

You said it:

'it would require a large amount of work'

and not just for R but also for many packages that users would expect to 
support data in that format.

By the time R started to spread (late 90s), most FPUs were primarily 
double/extended precision and there was little or no speed advantage to 
single-precision calculations.  And although S[-PLUS] had a 'single' 
type, we knew it was little used by then.

For a few people the storage size may matter (and for others the 32-bit 
logicals are wasteful): although for most people RAM is cheap enough, 
there are packages such as 'ff' which address this.

>
> Regards,
> Charles


-- 
Brian D. Ripley,                  ripley at stats.ox.ac.uk
Emeritus Professor of Applied Statistics, University of Oxford
1 South Parks Road, Oxford OX1 3TG, UK


From hpages at fredhutch.org  Tue Jun 30 19:51:17 2015
From: hpages at fredhutch.org (=?windows-1252?Q?Herv=E9_Pag=E8s?=)
Date: Tue, 30 Jun 2015 10:51:17 -0700
Subject: [Rd] Why doesn't R have a float data type?
In-Reply-To: <CAKxd1KM9Ktmh3Aa_bYpbA1w3xAY=ZWpStLmzGhduYfzFZf_OeA@mail.gmail.com>
References: <CAKxd1KM9Ktmh3Aa_bYpbA1w3xAY=ZWpStLmzGhduYfzFZf_OeA@mail.gmail.com>
Message-ID: <5592D715.8090007@fredhutch.org>

Hi Charles,

Probably for the same reason it doesn't have short int, short unsigned
int, long int, long unsigned int, long long int, long long unsigned int,
long double etc... There are many built-in types in C and, in order
to keep things simple, I guess the line had to be drew somewhere.
Said otherwise, I don't think the atomic types in R were ever meant to
reflect exactly what's available in C.

Note that some CRAN packages (e.g. bit64) try to remedy this by
providing support for atomic-like types that are not natively supported
by R. I don't know if there is one for float though.

Cheers,
H.

On 06/30/2015 09:42 AM, Charles Determan wrote:
> This is strictly a curiosity question.  I am aware the R doesn't possess a
> float data type.  I also don't mean to request that such functionality be
> implemented as I'm sure it would require a large amount of work with
> potential back compatibility conflicts.  But I wanted to know why R has
> never had a float data type available?
>
> Regards,
> Charles
>
> 	[[alternative HTML version deleted]]
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>

-- 
Herv? Pag?s

Program in Computational Biology
Division of Public Health Sciences
Fred Hutchinson Cancer Research Center
1100 Fairview Ave. N, M1-B514
P.O. Box 19024
Seattle, WA 98109-1024

E-mail: hpages at fredhutch.org
Phone:  (206) 667-5791
Fax:    (206) 667-1319


From murdoch.duncan at gmail.com  Tue Jun 30 22:15:19 2015
From: murdoch.duncan at gmail.com (Duncan Murdoch)
Date: Tue, 30 Jun 2015 22:15:19 +0200
Subject: [Rd] Defining a `show` function breaks the print-ing of S4
 object -- bug or expected?
In-Reply-To: <5592CC34.20309@gmail.com>
References: <CA+j8Z+=233OjOe00qV+5MdF9kkkVrWh4wfmUeAzwb4Q12DSxew@mail.gmail.com>	<CABdHhvEVbdbNKUswtqENgfy1L4yQDOEEKyO--ft+x7f2M+ALPg@mail.gmail.com>	<5592898B.5000103@gmail.com>	<CABdHhvG7XJS6td4CxYYPBjgtwXqShGcRuDHvJ=HaKPT7jdb6VA@mail.gmail.com>	<alpine.OSX.2.02.1506301009280.7711@lukes-macbook-air.local>	<CALxY2LfF-vP5GdN174sy_V-290VVeUJUWVBUVriepGg2qzCKcw@mail.gmail.com>
	<5592B6E0.30009@gmail.com> <5592CC34.20309@gmail.com>
Message-ID: <5592F8D7.5020200@gmail.com>

On 30/06/2015 7:04 PM, Paul Gilbert wrote:
> 
> 
> On 06/30/2015 11:33 AM, Duncan Murdoch wrote:
>> On 30/06/2015 5:27 PM, Lorenz, David wrote:
>>> There is something I'm really missing here. The function show is a
>>> standardGeneric function, so the correct way to write it as method like
>>> this:
>>
>> That describes methods::show.  The problem is that the default print
>> mechanism isn't calling methods::show() (or base::print() as Luke says),
>> it's calling show() or print() in the global environment, so the user's
>> function overrides the generic, and you get the error.
> 
> These are two different problems aren't they? I can see that you might 
> want to ensure that base::print() calls methods::show(), but forcing the 
> default print to go to base::print(), rather than whatever print() is 
> first on the search path, would seem like a real change of philosophy. 
> What about all the other base functions that can be overridden by 
> something in the global environment?

I'd guess it's a minority of R users who know that print() or show() is
being called when you just evaluate an expression.  Most would think R
just shows you the value of the expression.  That's why they'd be
surprised when their local function suddenly stops the display of
variables from working.

On the other hand, if someone defined a print or show *method* in the
global environment, I think that one should override one defined in a
package namespace.  It does now, and I wouldn't change that.  The
difference is that I'd expect someone defining a method to know what
they're doing, but just defining a function doesn't imply that.

Duncan Murdoch

> 
> Paul
>>
>> Luke, are you going to look at this, or should I?
>>
>> Duncan Murdoch
>>
>>>
>>> setMethod("show",  "Person", function(object) {
>>>
>>> for an object of class "Person" for example.
>>
>>
>>> Dave
>>>
>>> On Tue, Jun 30, 2015 at 10:11 AM, <luke-tierney at uiowa.edu> wrote:
>>>
>>>> Same thing happens with S3 if you redefine print(). I thought that
>>>> code was actually calculating the function to call rather than the
>>>> symbol to use, but apparently not. Shouldn't be too hard to fix.
>>>>
>>>> luke
>>>>
>>>> On Tue, 30 Jun 2015, Hadley Wickham wrote:
>>>>
>>>>   On Tue, Jun 30, 2015 at 2:20 PM, Duncan Murdoch
>>>>> <murdoch.duncan at gmail.com> wrote:
>>>>>
>>>>>> On 30/06/2015 1:57 PM, Hadley Wickham wrote:
>>>>>>
>>>>>>> A slightly simpler formulation of the problem is:
>>>>>>>
>>>>>>> show <- function(...) stop("My show!")
>>>>>>> methods::setClass("Person", slots = list(name = "character"))
>>>>>>> methods::new("Person", name = "Tom")
>>>>>>> #> Error in (function (...)  : My show!
>>>>>>>
>>>>>>
>>>>>> Just to be clear:  the complaint is that the auto-called show() is not
>>>>>> methods::show?  I.e. after
>>>>>>
>>>>>> x <- methods::new("Person", name = "Tom")
>>>>>>
>>>>>> you would expect
>>>>>>
>>>>>> show(x)
>>>>>>
>>>>>> to give the error, but not
>>>>>>
>>>>>> x
>>>>>>
>>>>>> ??
>>>>>>
>>>>>
>>>>> Correct - I'd expect print() to always call methods::show(), not
>>>>> whatever show() is first on the search path.
>>>>>
>>>>> Hadley
>>>>>
>>>>>
>>>>>
>>>> --
>>>> Luke Tierney
>>>> Ralph E. Wareham Professor of Mathematical Sciences
>>>> University of Iowa                  Phone:             319-335-3386
>>>> Department of Statistics and        Fax:               319-335-3017
>>>>     Actuarial Science
>>>> 241 Schaeffer Hall                  email:   luke-tierney at uiowa.edu
>>>> Iowa City, IA 52242                 WWW:  http://www.stat.uiowa.edu
>>>>
>>>>
>>>> ______________________________________________
>>>> R-devel at r-project.org mailing list
>>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>>>
>>>
>>> 	[[alternative HTML version deleted]]
>>>
>>> ______________________________________________
>>> R-devel at r-project.org mailing list
>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>>
>>
>> ______________________________________________
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>


