From henrik.bengtsson at gmail.com  Sat Apr  1 05:50:58 2017
From: henrik.bengtsson at gmail.com (Henrik Bengtsson)
Date: Fri, 31 Mar 2017 20:50:58 -0700
Subject: [Rd] mean(x) != mean(rev(x)) different with x <- c(NA,
	NaN) for some builds
Message-ID: <CAFDcVCST6wRDGeMyzruL4Bq5JsTy2XH5HxwKMba-k=NqWAdewQ@mail.gmail.com>

In R 3.3.3, I observe the following on Ubuntu 16.04 (when building
from source as well as for the sudo apt r-base build):

> x <- c(NA, NaN)
> mean(x)
[1] NA
> mean(rev(x))
[1] NaN

> rowMeans(matrix(x, nrow = 1, ncol = 2))
[1] NA
> rowMeans(matrix(rev(x), nrow = 1, ncol = 2))
[1] NaN

> .rowMeans(x, m = 1, n = 2)
[1] NA
> .rowMeans(rev(x), m = 1, n = 2)
[1] NaN

> .rowSums(x, m = 1, n = 2)
[1] NA
> .rowSums(rev(x), m = 1, n = 2)
[1] NaN

> rowSums(matrix(x, nrow = 1, ncol = 2))
[1] NA
> rowSums(matrix(rev(x), nrow = 1, ncol = 2))
[1] NaN

I'd expect NA to trump NaN in all cases (with na.rm = FALSE).  sum()
does not have this problem and returns NA in both cases (*).

For the same R version build from source on RHEL 6.6 system
(completely different architecture), I get the expected result (= NA)
for all of the above cases, e.g.

> x <- c(NA, NaN)
> mean(x)
[1] NA
> mean(rev(x))
[1] NA
[...]

Before going insane trying to troubleshoot this, I have a vague memory
that this, or something related to this, has been discussed
previously, but I cannot locate it.

Is the above a bug in R, a FAQ, a build error, overzealous compiler
optimization, and / or ...?

Thanks,

Henrik


From ripley at stats.ox.ac.uk  Sat Apr  1 07:14:37 2017
From: ripley at stats.ox.ac.uk (Prof Brian Ripley)
Date: Sat, 1 Apr 2017 06:14:37 +0100
Subject: [Rd] mean(x) != mean(rev(x)) different with x <- c(NA,
 NaN) for some builds
In-Reply-To: <CAFDcVCST6wRDGeMyzruL4Bq5JsTy2XH5HxwKMba-k=NqWAdewQ@mail.gmail.com>
References: <CAFDcVCST6wRDGeMyzruL4Bq5JsTy2XH5HxwKMba-k=NqWAdewQ@mail.gmail.com>
Message-ID: <8b7a61f1-536f-4646-90b7-fde714ad6116@stats.ox.ac.uk>

 From ?NA

      Numerical computations using ?NA? will normally result in ?NA?: a
      possible exception is where ?NaN? is also involved, in which case
      either might result.

and ?NaN

      Computations involving ?NaN? will return ?NaN? or perhaps ?NA?:
      which of those two is not guaranteed and may depend on the R
      platform (since compilers may re-order computations).

fortunes::fortune(14) applies (yet again).

On 01/04/2017 04:50, Henrik Bengtsson wrote:
> In R 3.3.3, I observe the following on Ubuntu 16.04 (when building
> from source as well as for the sudo apt r-base build):
>
>> x <- c(NA, NaN)
>> mean(x)
> [1] NA
>> mean(rev(x))
> [1] NaN
>
>> rowMeans(matrix(x, nrow = 1, ncol = 2))
> [1] NA
>> rowMeans(matrix(rev(x), nrow = 1, ncol = 2))
> [1] NaN
>
>> .rowMeans(x, m = 1, n = 2)
> [1] NA
>> .rowMeans(rev(x), m = 1, n = 2)
> [1] NaN
>
>> .rowSums(x, m = 1, n = 2)
> [1] NA
>> .rowSums(rev(x), m = 1, n = 2)
> [1] NaN
>
>> rowSums(matrix(x, nrow = 1, ncol = 2))
> [1] NA
>> rowSums(matrix(rev(x), nrow = 1, ncol = 2))
> [1] NaN
>
> I'd expect NA to trump NaN in all cases (with na.rm = FALSE).  sum()
> does not have this problem and returns NA in both cases (*).
>
> For the same R version build from source on RHEL 6.6 system
> (completely different architecture), I get the expected result (= NA)
> for all of the above cases, e.g.
>
>> x <- c(NA, NaN)
>> mean(x)
> [1] NA
>> mean(rev(x))
> [1] NA
> [...]
>
> Before going insane trying to troubleshoot this, I have a vague memory
> that this, or something related to this, has been discussed
> previously, but I cannot locate it.
>
> Is the above a bug in R, a FAQ, a build error, overzealous compiler
> optimization, and / or ...?
>
> Thanks,
>
> Henrik


-- 
Brian D. Ripley,                  ripley at stats.ox.ac.uk
Emeritus Professor of Applied Statistics, University of Oxford


From henrik.bengtsson at gmail.com  Sat Apr  1 07:51:24 2017
From: henrik.bengtsson at gmail.com (Henrik Bengtsson)
Date: Fri, 31 Mar 2017 22:51:24 -0700
Subject: [Rd] mean(x) != mean(rev(x)) different with x <- c(NA,
 NaN) for some builds
In-Reply-To: <8b7a61f1-536f-4646-90b7-fde714ad6116@stats.ox.ac.uk>
References: <CAFDcVCST6wRDGeMyzruL4Bq5JsTy2XH5HxwKMba-k=NqWAdewQ@mail.gmail.com>
	<8b7a61f1-536f-4646-90b7-fde714ad6116@stats.ox.ac.uk>
Message-ID: <CAFDcVCQ_q=uDEKeFRYPtRHn_ea4nJ_y4PdtnksE4598e2RACvA@mail.gmail.com>

On Fri, Mar 31, 2017 at 10:14 PM, Prof Brian Ripley
<ripley at stats.ox.ac.uk> wrote:
> From ?NA
>
>      Numerical computations using ?NA? will normally result in ?NA?: a
>      possible exception is where ?NaN? is also involved, in which case
>      either might result.
>
> and ?NaN
>
>      Computations involving ?NaN? will return ?NaN? or perhaps ?NA?:
>      which of those two is not guaranteed and may depend on the R
>      platform (since compilers may re-order computations).
>
> fortunes::fortune(14) applies (yet again).

Thanks; I'm often happy to have contributed to some of the fortune
counters, but not so sure about this one.   What's even worse is that
one of my own matrixStats NEWS has an entry go a few years back which
mentions "... incorrectly assumed that the value of prod(c(NaN, NA))
is uniquely defined.  However, as documented in help("is.nan"), it may
be NA or NaN depending on R system/platform."  I guess the joke is on
me - it's April 1st after all.

But, technically one could test for ISNA(x) for each element before
calculating the intermediate sum, but since that is a quite expensive
test it is not done and sum += x is performed "as is" on NA and NaN
(and -Inf and +Inf).  Is that correct?

/Henrik

>
>
> On 01/04/2017 04:50, Henrik Bengtsson wrote:
>>
>> In R 3.3.3, I observe the following on Ubuntu 16.04 (when building
>> from source as well as for the sudo apt r-base build):
>>
>>> x <- c(NA, NaN)
>>> mean(x)
>>
>> [1] NA
>>>
>>> mean(rev(x))
>>
>> [1] NaN
>>
>>> rowMeans(matrix(x, nrow = 1, ncol = 2))
>>
>> [1] NA
>>>
>>> rowMeans(matrix(rev(x), nrow = 1, ncol = 2))
>>
>> [1] NaN
>>
>>> .rowMeans(x, m = 1, n = 2)
>>
>> [1] NA
>>>
>>> .rowMeans(rev(x), m = 1, n = 2)
>>
>> [1] NaN
>>
>>> .rowSums(x, m = 1, n = 2)
>>
>> [1] NA
>>>
>>> .rowSums(rev(x), m = 1, n = 2)
>>
>> [1] NaN
>>
>>> rowSums(matrix(x, nrow = 1, ncol = 2))
>>
>> [1] NA
>>>
>>> rowSums(matrix(rev(x), nrow = 1, ncol = 2))
>>
>> [1] NaN
>>
>> I'd expect NA to trump NaN in all cases (with na.rm = FALSE).  sum()
>> does not have this problem and returns NA in both cases (*).
>>
>> For the same R version build from source on RHEL 6.6 system
>> (completely different architecture), I get the expected result (= NA)
>> for all of the above cases, e.g.
>>
>>> x <- c(NA, NaN)
>>> mean(x)
>>
>> [1] NA
>>>
>>> mean(rev(x))
>>
>> [1] NA
>> [...]
>>
>> Before going insane trying to troubleshoot this, I have a vague memory
>> that this, or something related to this, has been discussed
>> previously, but I cannot locate it.
>>
>> Is the above a bug in R, a FAQ, a build error, overzealous compiler
>> optimization, and / or ...?
>>
>> Thanks,
>>
>> Henrik
>
>
>
> --
> Brian D. Ripley,                  ripley at stats.ox.ac.uk
> Emeritus Professor of Applied Statistics, University of Oxford
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From henrik.bengtsson at gmail.com  Sat Apr  1 08:52:19 2017
From: henrik.bengtsson at gmail.com (Henrik Bengtsson)
Date: Fri, 31 Mar 2017 23:52:19 -0700
Subject: [Rd] mean(x) != mean(rev(x)) different with x <- c(NA,
 NaN) for some builds
In-Reply-To: <CAFDcVCQ_q=uDEKeFRYPtRHn_ea4nJ_y4PdtnksE4598e2RACvA@mail.gmail.com>
References: <CAFDcVCST6wRDGeMyzruL4Bq5JsTy2XH5HxwKMba-k=NqWAdewQ@mail.gmail.com>
	<8b7a61f1-536f-4646-90b7-fde714ad6116@stats.ox.ac.uk>
	<CAFDcVCQ_q=uDEKeFRYPtRHn_ea4nJ_y4PdtnksE4598e2RACvA@mail.gmail.com>
Message-ID: <CAFDcVCS1p4z_VuwiBdsxTKDCTmt+hk=e5Z4pUroYuxLjOWnNBA@mail.gmail.com>

Although help("is.nan") says:

   "Computations involving NaN will return NaN or perhaps NA: ..."

it might not be obvious that this is also why one may get:

> mean(c(-Inf, +Inf, NA))
[1] NaN

> mean(c(-Inf, NA, +Inf))
[1] NA

This is because internally the intermediate sum +Inf + -Inf is NaN in
the first case.

May I propose the following patch to that help paragraph:

Index: src/library/base/man/is.finite.Rd
===================================================================
--- src/library/base/man/is.finite.Rd (revision 72462)
+++ src/library/base/man/is.finite.Rd (working copy)
@@ -78,6 +78,8 @@
   Computations involving \code{NaN} will return \code{NaN} or perhaps
   \code{\link{NA}}: which of those two is not guaranteed and may depend
   on the \R platform (since compilers may re-order computations).
+  This may also apply to computations involving both \code{-Inf} and
+  \code{+Inf} in cases where they produce an intermediate \code{NaN}.
 }
 \value{
   A logical vector of the same length as \code{x}: \code{dim},

/Henrik


On Fri, Mar 31, 2017 at 10:51 PM, Henrik Bengtsson
<henrik.bengtsson at gmail.com> wrote:
> On Fri, Mar 31, 2017 at 10:14 PM, Prof Brian Ripley
> <ripley at stats.ox.ac.uk> wrote:
>> From ?NA
>>
>>      Numerical computations using ?NA? will normally result in ?NA?: a
>>      possible exception is where ?NaN? is also involved, in which case
>>      either might result.
>>
>> and ?NaN
>>
>>      Computations involving ?NaN? will return ?NaN? or perhaps ?NA?:
>>      which of those two is not guaranteed and may depend on the R
>>      platform (since compilers may re-order computations).
>>
>> fortunes::fortune(14) applies (yet again).
>
> Thanks; I'm often happy to have contributed to some of the fortune
> counters, but not so sure about this one.   What's even worse is that
> one of my own matrixStats NEWS has an entry go a few years back which
> mentions "... incorrectly assumed that the value of prod(c(NaN, NA))
> is uniquely defined.  However, as documented in help("is.nan"), it may
> be NA or NaN depending on R system/platform."  I guess the joke is on
> me - it's April 1st after all.
>
> But, technically one could test for ISNA(x) for each element before
> calculating the intermediate sum, but since that is a quite expensive
> test it is not done and sum += x is performed "as is" on NA and NaN
> (and -Inf and +Inf).  Is that correct?
>
> /Henrik
>
>>
>>
>> On 01/04/2017 04:50, Henrik Bengtsson wrote:
>>>
>>> In R 3.3.3, I observe the following on Ubuntu 16.04 (when building
>>> from source as well as for the sudo apt r-base build):
>>>
>>>> x <- c(NA, NaN)
>>>> mean(x)
>>>
>>> [1] NA
>>>>
>>>> mean(rev(x))
>>>
>>> [1] NaN
>>>
>>>> rowMeans(matrix(x, nrow = 1, ncol = 2))
>>>
>>> [1] NA
>>>>
>>>> rowMeans(matrix(rev(x), nrow = 1, ncol = 2))
>>>
>>> [1] NaN
>>>
>>>> .rowMeans(x, m = 1, n = 2)
>>>
>>> [1] NA
>>>>
>>>> .rowMeans(rev(x), m = 1, n = 2)
>>>
>>> [1] NaN
>>>
>>>> .rowSums(x, m = 1, n = 2)
>>>
>>> [1] NA
>>>>
>>>> .rowSums(rev(x), m = 1, n = 2)
>>>
>>> [1] NaN
>>>
>>>> rowSums(matrix(x, nrow = 1, ncol = 2))
>>>
>>> [1] NA
>>>>
>>>> rowSums(matrix(rev(x), nrow = 1, ncol = 2))
>>>
>>> [1] NaN
>>>
>>> I'd expect NA to trump NaN in all cases (with na.rm = FALSE).  sum()
>>> does not have this problem and returns NA in both cases (*).
>>>
>>> For the same R version build from source on RHEL 6.6 system
>>> (completely different architecture), I get the expected result (= NA)
>>> for all of the above cases, e.g.
>>>
>>>> x <- c(NA, NaN)
>>>> mean(x)
>>>
>>> [1] NA
>>>>
>>>> mean(rev(x))
>>>
>>> [1] NA
>>> [...]
>>>
>>> Before going insane trying to troubleshoot this, I have a vague memory
>>> that this, or something related to this, has been discussed
>>> previously, but I cannot locate it.
>>>
>>> Is the above a bug in R, a FAQ, a build error, overzealous compiler
>>> optimization, and / or ...?
>>>
>>> Thanks,
>>>
>>> Henrik
>>
>>
>>
>> --
>> Brian D. Ripley,                  ripley at stats.ox.ac.uk
>> Emeritus Professor of Applied Statistics, University of Oxford
>>
>> ______________________________________________
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel


From suharto_anggono at yahoo.com  Sat Apr  1 16:10:06 2017
From: suharto_anggono at yahoo.com (Suharto Anggono Suharto Anggono)
Date: Sat, 1 Apr 2017 14:10:06 +0000 (UTC)
Subject: [Rd] complex NA's match(),
	etc: not back-compatible change proposal
References: <205144061.8603357.1491055806899.ref@mail.yahoo.com>
Message-ID: <205144061.8603357.1491055806899@mail.yahoo.com>

I am raising this again.

With
z <- complex(real = c(0,NaN,NaN), imaginary = c(NA,NA,0)) ,
results of
sapply(z, match, table = z)
and
match(z, z)
are different in R 3.4.0 alpha. I think they should be the same.

I suggest changing 'cequal' in unique.c such that a complex number that has both NA and NaN matches NA and doesn't match NaN, as such complex number is printed as NA.


From suharto_anggono at yahoo.com  Sat Apr  1 16:10:06 2017
From: suharto_anggono at yahoo.com (Suharto Anggono Suharto Anggono)
Date: Sat, 1 Apr 2017 14:10:06 +0000 (UTC)
Subject: [Rd] complex NA's match(),
	etc: not back-compatible change proposal
References: <205144061.8603357.1491055806899.ref@mail.yahoo.com>
Message-ID: <205144061.8603357.1491055806899@mail.yahoo.com>

I am raising this again.

With
z <- complex(real = c(0,NaN,NaN), imaginary = c(NA,NA,0)) ,
results of
sapply(z, match, table = z)
and
match(z, z)
are different in R 3.4.0 alpha. I think they should be the same.

I suggest changing 'cequal' in unique.c such that a complex number that has both NA and NaN matches NA and doesn't match NaN, as such complex number is printed as NA.


From hpages at fredhutch.org  Sun Apr  2 01:59:29 2017
From: hpages at fredhutch.org (=?UTF-8?B?SGVydsOpIFBhZ8Oocw==?=)
Date: Sat, 1 Apr 2017 16:59:29 -0700
Subject: [Rd] mean(x) != mean(rev(x)) different with x <- c(NA,
 NaN) for some builds
In-Reply-To: <8b7a61f1-536f-4646-90b7-fde714ad6116@stats.ox.ac.uk>
References: <CAFDcVCST6wRDGeMyzruL4Bq5JsTy2XH5HxwKMba-k=NqWAdewQ@mail.gmail.com>
	<8b7a61f1-536f-4646-90b7-fde714ad6116@stats.ox.ac.uk>
Message-ID: <18dd04df-4a10-ffcf-f69b-2d47193dfa59@fredhutch.org>

On 03/31/2017 10:14 PM, Prof Brian Ripley wrote:
> From ?NA
>
>      Numerical computations using ?NA? will normally result in ?NA?: a
>      possible exception is where ?NaN? is also involved, in which case
>      either might result.
>
> and ?NaN
>
>      Computations involving ?NaN? will return ?NaN? or perhaps ?NA?:
>      which of those two is not guaranteed and may depend on the R
>      platform (since compilers may re-order computations).
>
> fortunes::fortune(14) applies (yet again).

The problem is that TFM often contradicts itself e.g. in ?prod:

      If ?na.rm? is ?FALSE? an ?NA? value in any of the arguments will
      cause a value of ?NA? to be returned, otherwise ?NA? values are
      ignored.

which is clearly not the case (at least for me):

   > x <- c(NaN, NA)
   > prod(x)
   [1] NaN

H.

>
> On 01/04/2017 04:50, Henrik Bengtsson wrote:
>> In R 3.3.3, I observe the following on Ubuntu 16.04 (when building
>> from source as well as for the sudo apt r-base build):
>>
>>> x <- c(NA, NaN)
>>> mean(x)
>> [1] NA
>>> mean(rev(x))
>> [1] NaN
>>
>>> rowMeans(matrix(x, nrow = 1, ncol = 2))
>> [1] NA
>>> rowMeans(matrix(rev(x), nrow = 1, ncol = 2))
>> [1] NaN
>>
>>> .rowMeans(x, m = 1, n = 2)
>> [1] NA
>>> .rowMeans(rev(x), m = 1, n = 2)
>> [1] NaN
>>
>>> .rowSums(x, m = 1, n = 2)
>> [1] NA
>>> .rowSums(rev(x), m = 1, n = 2)
>> [1] NaN
>>
>>> rowSums(matrix(x, nrow = 1, ncol = 2))
>> [1] NA
>>> rowSums(matrix(rev(x), nrow = 1, ncol = 2))
>> [1] NaN
>>
>> I'd expect NA to trump NaN in all cases (with na.rm = FALSE).  sum()
>> does not have this problem and returns NA in both cases (*).
>>
>> For the same R version build from source on RHEL 6.6 system
>> (completely different architecture), I get the expected result (= NA)
>> for all of the above cases, e.g.
>>
>>> x <- c(NA, NaN)
>>> mean(x)
>> [1] NA
>>> mean(rev(x))
>> [1] NA
>> [...]
>>
>> Before going insane trying to troubleshoot this, I have a vague memory
>> that this, or something related to this, has been discussed
>> previously, but I cannot locate it.
>>
>> Is the above a bug in R, a FAQ, a build error, overzealous compiler
>> optimization, and / or ...?
>>
>> Thanks,
>>
>> Henrik
>
>

-- 
Herv? Pag?s

Program in Computational Biology
Division of Public Health Sciences
Fred Hutchinson Cancer Research Center
1100 Fairview Ave. N, M1-B514
P.O. Box 19024
Seattle, WA 98109-1024

E-mail: hpages at fredhutch.org
Phone:  (206) 667-5791
Fax:    (206) 667-1319


From rinni at inventati.org  Sun Apr  2 12:32:43 2017
From: rinni at inventati.org (Philip Rinn)
Date: Sun, 2 Apr 2017 12:32:43 +0200
Subject: [Rd] rdb and rds files include abolute file paths / help
 understanding how lazy-load dbs are created
Message-ID: <e58a879b-a6e3-8c70-f928-e8856f2ffbe2@inventati.org>

Hi,

I'm trying to understand why/how absolute file paths are stored in .rdb[1] and
.rds[2] files during package installation. As a consequence building the same r
package in different directories does not produce  identical .rdb and .rds files.

The background is that I work on reproducible builds[3] of R packages. I think
this is important from an engineering point of view but also from a scientists
perspective (that's actually my point). I want to be sure that my research results
are reproducible and therefore I need software that builds reproducible.

To investigate further I'd like to ask for some help. From what I understand so
far the lazy-load databases are built by code in
src/library/tools/R/makeLazyLoad.R. The code path is not very clear to me but the
main problem I have now is that it's hard to follow the code path used to install
a package. Could someone enlighten me by pointing me to some docs or by briefly
describing the path?

Any help/comments are very welcome.

Best,
Philip

PS: could you CC me, I'm not on the list. Thanks.


[1] at least in <PKG>/R/<PKG>.rdb and <PKG>/help/<PKG>.rdb
[2] at least in <PKG>/help/paths.rds
[3] https://reproducible-builds.org

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 833 bytes
Desc: OpenPGP digital signature
URL: <https://stat.ethz.ch/pipermail/r-devel/attachments/20170402/c51fb68e/attachment.bin>

From zkamvar at gmail.com  Sun Apr  2 23:26:37 2017
From: zkamvar at gmail.com (Zhian Kamvar)
Date: Sun, 2 Apr 2017 16:26:37 -0500
Subject: [Rd] Potential bug in utils::citation()
Message-ID: <D0AF09F5-D482-4269-A8E8-693E09C1289F@gmail.com>

Hi,

I believe the function utils::citation() will fail if the package specified has two or more citation entries in the current R-devel. The following error is issued:

'missing' can only be used for arguments 

I have created a working example on github [0] that is build using R-devel on travis-ci [1]. Jim Hester has potentially identified [2] the source of the problem as being from a commit on the 27th [3, 4]. I do not have R-devel built on my machine, but I believe this error can be reproduced on the current R-devel with:

if (require("boot") & require("utils")) utils::citation("boot")

Background:

My package poppr suddenly started failing check on R-devel during a weekly travis-ci job [5] due to the error above. Another package of mine, ezec, passed [6]. Both contain calls to utils::citation() within the vignettes, but  poppr has two citations and ezec only has one (called from another package).

Thanks,
Zhian

[0]: https://github.com/zkamvar/citest
[1]: https://travis-ci.org/zkamvar/citest/jobs/217874351
[2]: https://github.com/wch/r-source/commit/7890e9e87d44f85ab76c0e786036a191eacd71d1
[3]: https://svn.r-project.org/R/trunk at 72419
[4]: https://github.com/wch/r-source/commit/7890e9e87d44f85ab76c0e786036a191eacd71d1
[5]: https://travis-ci.org/grunwaldlab/poppr/jobs/216452458
[6]: https://travis-ci.org/grunwaldlab/ezec/jobs/216452916

-----
Zhian N. Kamvar, Ph. D.
Postdoctoral Researcher (Everhart Lab)
Department of Plant Pathology
University of Nebraska-Lincoln


From maechler at stat.math.ethz.ch  Mon Apr  3 10:22:52 2017
From: maechler at stat.math.ethz.ch (Martin Maechler)
Date: Mon, 3 Apr 2017 10:22:52 +0200
Subject: [Rd] Potential bug in utils::citation()
In-Reply-To: <D0AF09F5-D482-4269-A8E8-693E09C1289F@gmail.com>
References: <D0AF09F5-D482-4269-A8E8-693E09C1289F@gmail.com>
Message-ID: <22754.1628.575992.701240@stat.math.ethz.ch>

>>>>> Zhian Kamvar <zkamvar at gmail.com>
>>>>>     on Sun, 2 Apr 2017 16:26:37 -0500 writes:

    > Hi, I believe the function utils::citation() will fail if
    > the package specified has two or more citation entries in
    > the current R-devel. The following error is issued:

    > 'missing' can only be used for arguments

    > I have created a working example on github [0] that is
    > build using R-devel on travis-ci [1]. Jim Hester has
    > potentially identified [2] the source of the problem as
    > being from a commit on the 27th [3, 4]. I do not have
    > R-devel built on my machine, but I believe this error can
    > be reproduced on the current R-devel with:

    > if (require("boot") & require("utils"))
    >    utils::citation("boot")

Correct: it does reproduce the new bug.... 
and that is due to a change by me, and I had started investigation
on Friday (but not with your package and not having seen a
straighforward example yet).

This will be fixed ASAP, i.e., within hours.
Martin Maechler

    > Background:

    > My package poppr suddenly started failing check on R-devel
    > during a weekly travis-ci job [5] due to the error
    > above. Another package of mine, ezec, passed [6]. Both
    > contain calls to utils::citation() within the vignettes,
    > but poppr has two citations and ezec only has one (called
    > from another package).

    > Thanks, Zhian

    > [0]: https://github.com/zkamvar/citest [1]:
    > https://travis-ci.org/zkamvar/citest/jobs/217874351 [2]:
    > https://github.com/wch/r-source/commit/7890e9e87d44f85ab76c0e786036a191eacd71d1
    > [3]: https://svn.r-project.org/R/trunk at 72419 [4]:
    > https://github.com/wch/r-source/commit/7890e9e87d44f85ab76c0e786036a191eacd71d1
    > [5]:
    > https://travis-ci.org/grunwaldlab/poppr/jobs/216452458
    > [6]: https://travis-ci.org/grunwaldlab/ezec/jobs/216452916

    > -----
    > Zhian N. Kamvar, Ph. D.  Postdoctoral Researcher (Everhart
    > Lab) Department of Plant Pathology University of
    > Nebraska-Lincoln

    > ______________________________________________
    > R-devel at r-project.org mailing list
    > https://stat.ethz.ch/mailman/listinfo/r-devel


From maechler at stat.math.ethz.ch  Mon Apr  3 13:05:41 2017
From: maechler at stat.math.ethz.ch (Martin Maechler)
Date: Mon, 3 Apr 2017 13:05:41 +0200
Subject: [Rd] complex NA's match(),
	etc: not back-compatible change proposal
In-Reply-To: <205144061.8603357.1491055806899@mail.yahoo.com>
References: <205144061.8603357.1491055806899.ref@mail.yahoo.com>
	<205144061.8603357.1491055806899@mail.yahoo.com>
Message-ID: <22754.11397.392583.836493@stat.math.ethz.ch>

>>>>> Suharto Anggono Suharto Anggono via R-devel <r-devel at r-project.org>
>>>>>     on Sat, 1 Apr 2017 14:10:06 +0000 writes:

    > I am raising this again.

    > With
    > z <- complex(real = c(0,NaN,NaN), imaginary = c(NA,NA,0)) ,
    > results of
    > 	      sapply(z, match, table = z)
    > and
    >	      match(z, z)
    > are different in R 3.4.0 alpha. I think they should be the same.

    > I suggest changing 'cequal' in unique.c such that a
    > complex number that has both NA and NaN matches NA and
    > doesn't match NaN, as such complex number is printed as NA.

Thank you very much, Suharto, for the reminder.

I have committed a change to R-devel yesterday, though
your suggestion above had not been 100% clear to me.

What I think we want and I decided to commit
  r72473 | maechler | 2017-04-02 22:23:56 +0200 (Sun, 02 Apr 2017)

was to entirely mimic how R format()s and prints() complex numbers:

1) If a complex number has a real or imaginary which is NA then
   it is formatted / printed as "NA"
   ==>  All such complex numbers should match()
   i.e. match(), unique(), duplicated() treat such complex
   numbers as "the same".

2) The picture is very different with (non-NA)  NaN:
   There, R formats and prints  NaN+1i  or NaN+99i  or 0+1i*NaN
   differently, and [in R-devel only, planned in R 3.4.0 alpha
   in a day or two!]
   match(), unique(), duplicated() now treat them as different.

The change is more consistent notably does give the same result

for   match(z,z)
and   sapply(z, match, table = z)  

for a variety of z (permutations).


From winstonchang1 at gmail.com  Mon Apr  3 17:34:48 2017
From: winstonchang1 at gmail.com (Winston Chang)
Date: Mon, 3 Apr 2017 10:34:48 -0500
Subject: [Rd] Very hard to reproduce bug (?) in R-devel
Message-ID: <CAFOpNVFQyz_UtDkuZFxa9ttCcQc6wvN7bDb5AbfsfTT_HuHeog@mail.gmail.com>

When running R CMD check on a package, we are encountering an error on
R-devel (as of 72457) on Linux. Unfortunately, it is very hard to
reproduce, and almost any change to the code makes the error go away.
I believe that this is due to a bug in R-devel, which has been present
since at least commit 72128 (on 2017-02-06).

The test error occurs when R CMD check is run on Travis CI (on Ubuntu
12.04.05), and locally on R-devel (on Debian testing). If we make any
of the following changes, the error does not occur, and the test
passes:
- Run the test scripts from an interactive R session
- Run on a Mac instead of Linux
- Use R 3.3.3 or 3.2.5
- Add code right before the tests. For example, just running gc() or
format(1) right before the test causes it to not fail. However, adding
very simple code like 1+1 does not affect the test (it still fails).
- Run R CMD check with -d gdb or -d valgrind

Because the test is so sensitive to any changes, we've been unable to
track down the source of the problem. We can't be sure, but the error
message suggests that a promise is getting evaluated with the wrong
environment.

Here's the relevant output from the tests:
1. Error: pool scheduler: schedules things in the right order
(@test-scheduling.R#13)
could not find function "task"
1: naiveScheduler$protect({
       scheduleTask(1000, function() {
           results <<- c(results, 3L)
       })
       scheduleTask(100, function() {
           results <<- c(results, 2L)
       })
       scheduleTask(10, function() {
           results <<- c(results, 1L)
       })
   }) at testthat/test-scheduling.R:13
2: private$refCount$release() at testthat/test-scheduling.R:13
3: private$callback()
4: self$protect({
       task()
   })
5: private$refCount$release()
6: private$callback()
7: self$protect({
       task()
   })
8: force(expr)

You can see complete logs on Travis here:
  https://travis-ci.org/rstudio/pool/jobs/217301804#L747-L771

In the test, a re-entrant function is called (self$protect, at levels
4 and 7 on the call stack), and in the inner call (7), a variable,
`task`, does not have the correct value. It should be a function, but
it isn't; it's either NULL or some other non-function value.

That code is here:
  https://github.com/rstudio/pool/blob/f7e52a3/R/scheduler.R#L79-L81
Note that there's a `force(task)` a couple lines above, which is
commented out. If that is uncommented, the test passes, even though
calling force() there shouldn't make a difference. Also, calling
`format(1)` at that location also causes the test to pass.


I've written instructions to reproduce the problem in a Docker container here:
  https://gist.github.com/wch/4cd0c56757886c63522049a32b3c294f

If you want to try reproducing the error without using Docker, I
believe if you download pool_0.1.0.tar.gz file from the
gist.github.com URL above, and run R CMD check on it, that will do it.
Some upstream dependencies will likely need to be installed; they are
listed in the code in the gist.


We also used git bisect to try to find the first commit in R where the
test would fail. The instructions for doing this are also in the gist
linked to above. It found that the first commit where the test failed
was 72128:
  https://github.com/wch/r-source/commit/7c950ac11202cabc25b276c2f4da82226644953d

Taking a look at the changes in that commit, however, it seems very
unlikely that it caused the error. Instead, it probably just made a
change which allowed an already-existing bug to manifest.


We'd appreciate any help finding the cause of this bug!
-Winston


From winstonchang1 at gmail.com  Mon Apr  3 18:36:21 2017
From: winstonchang1 at gmail.com (Winston Chang)
Date: Mon, 3 Apr 2017 11:36:21 -0500
Subject: [Rd] Very hard to reproduce bug (?) in R-devel
In-Reply-To: <CAFOpNVFQyz_UtDkuZFxa9ttCcQc6wvN7bDb5AbfsfTT_HuHeog@mail.gmail.com>
References: <CAFOpNVFQyz_UtDkuZFxa9ttCcQc6wvN7bDb5AbfsfTT_HuHeog@mail.gmail.com>
Message-ID: <CAFOpNVG6RtN47SVvg_L1HKYSOPccnXgWjMX3ouLGxjCKXovc=Q@mail.gmail.com>

Small correction to my previous email: the error can also be
replicated by installing the package and then sourcing the tests. This
is slightly faster than running R CMD check. It is also how we ran the
tests with gdb. This will run the tests in a Docker container and
raise the same error. (To run outside of a Docker container, simply
leave out the first line).

  docker run --rm -ti pooltest /bin/bash
  RD CMD INSTALL pool_0.1.0.tar.gz  --install-tests
  cd /usr/local/lib/R/site-library/pool/tests
  RD -e 'source("testthat.R")'


At the suggestion of Tomas Kalibera, I ran the tests with
gctorture(TRUE). When I do this, I get three errors instead of just
one:

======================
# RD -e 'gctorture(TRUE); source("testthat.R")'

R Under development (unstable) (2017-03-23 r72389) -- "Unsuffered Consequences"
Copyright (C) 2017 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> gctorture(TRUE); source("testthat.R")
1. Failure: pool: checks for leaks (named) (@test-leak-detection.R#21) ---------
gc() showed 0 warnings


2. Failure: pool scheduler: schedules things in the right order
(@test-scheduling.R#24)
`results` not identical to 1:3.
2/3 mismatches (average diff: 1)
[1] 2 - 1 ==  1
[2] 1 - 2 == -1


3. Failure: pool scheduler: works with pool (@test-scheduling.R#31) ------------
pool$counters$free not identical to 1.
1/1 mismatches
[1] 0 - 1 == -1


testthat results
================================================================
OK: 199 SKIPPED: 0 FAILED: 3
1. Failure: pool: checks for leaks (named) (@test-leak-detection.R#21)
2. Failure: pool scheduler: schedules things in the right order
(@test-scheduling.R#24)
3. Failure: pool scheduler: works with pool (@test-scheduling.R#31)

Error: testthat unit tests failed
Execution halted

======================




On Mon, Apr 3, 2017 at 10:34 AM, Winston Chang <winstonchang1 at gmail.com> wrote:
> When running R CMD check on a package, we are encountering an error on
> R-devel (as of 72457) on Linux. Unfortunately, it is very hard to
> reproduce, and almost any change to the code makes the error go away.
> I believe that this is due to a bug in R-devel, which has been present
> since at least commit 72128 (on 2017-02-06).
>
> The test error occurs when R CMD check is run on Travis CI (on Ubuntu
> 12.04.05), and locally on R-devel (on Debian testing). If we make any
> of the following changes, the error does not occur, and the test
> passes:
> - Run the test scripts from an interactive R session
> - Run on a Mac instead of Linux
> - Use R 3.3.3 or 3.2.5
> - Add code right before the tests. For example, just running gc() or
> format(1) right before the test causes it to not fail. However, adding
> very simple code like 1+1 does not affect the test (it still fails).
> - Run R CMD check with -d gdb or -d valgrind
>
> Because the test is so sensitive to any changes, we've been unable to
> track down the source of the problem. We can't be sure, but the error
> message suggests that a promise is getting evaluated with the wrong
> environment.
>
> Here's the relevant output from the tests:
> 1. Error: pool scheduler: schedules things in the right order
> (@test-scheduling.R#13)
> could not find function "task"
> 1: naiveScheduler$protect({
>        scheduleTask(1000, function() {
>            results <<- c(results, 3L)
>        })
>        scheduleTask(100, function() {
>            results <<- c(results, 2L)
>        })
>        scheduleTask(10, function() {
>            results <<- c(results, 1L)
>        })
>    }) at testthat/test-scheduling.R:13
> 2: private$refCount$release() at testthat/test-scheduling.R:13
> 3: private$callback()
> 4: self$protect({
>        task()
>    })
> 5: private$refCount$release()
> 6: private$callback()
> 7: self$protect({
>        task()
>    })
> 8: force(expr)
>
> You can see complete logs on Travis here:
>   https://travis-ci.org/rstudio/pool/jobs/217301804#L747-L771
>
> In the test, a re-entrant function is called (self$protect, at levels
> 4 and 7 on the call stack), and in the inner call (7), a variable,
> `task`, does not have the correct value. It should be a function, but
> it isn't; it's either NULL or some other non-function value.
>
> That code is here:
>   https://github.com/rstudio/pool/blob/f7e52a3/R/scheduler.R#L79-L81
> Note that there's a `force(task)` a couple lines above, which is
> commented out. If that is uncommented, the test passes, even though
> calling force() there shouldn't make a difference. Also, calling
> `format(1)` at that location also causes the test to pass.
>
>
> I've written instructions to reproduce the problem in a Docker container here:
>   https://gist.github.com/wch/4cd0c56757886c63522049a32b3c294f
>
> If you want to try reproducing the error without using Docker, I
> believe if you download pool_0.1.0.tar.gz file from the
> gist.github.com URL above, and run R CMD check on it, that will do it.
> Some upstream dependencies will likely need to be installed; they are
> listed in the code in the gist.
>
>
> We also used git bisect to try to find the first commit in R where the
> test would fail. The instructions for doing this are also in the gist
> linked to above. It found that the first commit where the test failed
> was 72128:
>   https://github.com/wch/r-source/commit/7c950ac11202cabc25b276c2f4da82226644953d
>
> Taking a look at the changes in that commit, however, it seems very
> unlikely that it caused the error. Instead, it probably just made a
> change which allowed an already-existing bug to manifest.
>
>
> We'd appreciate any help finding the cause of this bug!
> -Winston


From jari.oksanen at oulu.fi  Tue Apr  4 10:24:18 2017
From: jari.oksanen at oulu.fi (Jari Oksanen)
Date: Tue, 4 Apr 2017 08:24:18 +0000
Subject: [Rd] Some "lm" methods give wrong results when applied to "mlm"
	objects
Message-ID: <1491294258439.84160@oulu.fi>

I had a look at some influence measures, and it seems to me that currently several methods handle multiple lm (mlm) objects wrongly in R. In some cases there are separate "mlm" methods, but usually "mlm" objects are handled by the same methods as univariate "lm" methods, and in some cases this fails.

There are two general patterns of problems in influence measures:

1) The univariate methods assume that overall standard deviation (sd) is of length one, but for "mlm" models we have a multivariate response with a multicolumn residual matrix. The functions also get correctly the sd vector corresponding to the columns, but it is not applied to these, but recycled for rows. This influences rstandard.lm and cooks.distance.lm. For instance, in cooks.distance.lm we have ((res/(sd * (1 - hat)))^2 * hat)/p, where res is a n x m matrix, sd is a m-vector and hat is a n-vector).  Both of these functions are very easily fixed.

2) Another problem is that several functions are based on lm.influence function, and it seems that it returns elements sigma and coefficients that are only based on the first variable (first column of the residual matrix wt.res) and give wrong results for other variables. This will influence functions dfbeta.lm (coefficients), dfbetas.lm (coefficients, sigma), dffits (sigma), rstudent.lm (sigma) and covratio (sigma). lm.influence finds these elements in compiled code and this is harder to fix. MASS (the book & the package) avoid using compiled code in their (univariate) studentized residuals, and instead use a clever short-cut.

In addition to these, there are a couple of other cases which seem to fail with "mlm" models: 

confint.lm gives empty result, because the length of the results is defined by names(coef(object)) which is NULL because "mlm" objects return a matrix of coefficients instead of a vector with names.

dummy.coef fails because "mlm" objects do not have xlevels item.

extractAIC.lm returns only one value instead of a vector, and edf is misleading. Separate deviance.mlm returns a vector of deviances, and logLik.lm returns "'logLik.lm' does not support multiple responses". Probably extractAIC.lm should work like logLik.lm.

Several methods already handle "mlm" methods by returning message "xxxx  is not yet implemented for multivariate lm()" which of course is a natural and correct solution to the problems.

Cheers, Jari Oksanen

From jari.oksanen at oulu.fi  Tue Apr  4 10:24:18 2017
From: jari.oksanen at oulu.fi (Jari Oksanen)
Date: Tue, 4 Apr 2017 08:24:18 +0000
Subject: [Rd] Some "lm" methods give wrong results when applied to "mlm"
	objects
Message-ID: <1491294258439.84160@oulu.fi>

I had a look at some influence measures, and it seems to me that currently several methods handle multiple lm (mlm) objects wrongly in R. In some cases there are separate "mlm" methods, but usually "mlm" objects are handled by the same methods as univariate "lm" methods, and in some cases this fails.

There are two general patterns of problems in influence measures:

1) The univariate methods assume that overall standard deviation (sd) is of length one, but for "mlm" models we have a multivariate response with a multicolumn residual matrix. The functions also get correctly the sd vector corresponding to the columns, but it is not applied to these, but recycled for rows. This influences rstandard.lm and cooks.distance.lm. For instance, in cooks.distance.lm we have ((res/(sd * (1 - hat)))^2 * hat)/p, where res is a n x m matrix, sd is a m-vector and hat is a n-vector).  Both of these functions are very easily fixed.

2) Another problem is that several functions are based on lm.influence function, and it seems that it returns elements sigma and coefficients that are only based on the first variable (first column of the residual matrix wt.res) and give wrong results for other variables. This will influence functions dfbeta.lm (coefficients), dfbetas.lm (coefficients, sigma), dffits (sigma), rstudent.lm (sigma) and covratio (sigma). lm.influence finds these elements in compiled code and this is harder to fix. MASS (the book & the package) avoid using compiled code in their (univariate) studentized residuals, and instead use a clever short-cut.

In addition to these, there are a couple of other cases which seem to fail with "mlm" models: 

confint.lm gives empty result, because the length of the results is defined by names(coef(object)) which is NULL because "mlm" objects return a matrix of coefficients instead of a vector with names.

dummy.coef fails because "mlm" objects do not have xlevels item.

extractAIC.lm returns only one value instead of a vector, and edf is misleading. Separate deviance.mlm returns a vector of deviances, and logLik.lm returns "'logLik.lm' does not support multiple responses". Probably extractAIC.lm should work like logLik.lm.

Several methods already handle "mlm" methods by returning message "xxxx  is not yet implemented for multivariate lm()" which of course is a natural and correct solution to the problems.

Cheers, Jari Oksanen

From dietmar.schindler at manroland-web.com  Tue Apr  4 10:45:30 2017
From: dietmar.schindler at manroland-web.com (dietmar.schindler at manroland-web.com)
Date: Tue, 4 Apr 2017 08:45:30 +0000
Subject: [Rd] Bug report: POSIX regular expression doesn't match for
 somewhat higher values of upper bound
Message-ID: <2c87513c247b4e13b22f278e15a034d1@AUSMXMBX03.mrws.biz>

Dear Sirs,

while

> regexpr('(.{1,2})\\1', 'foo')
[1] 2
attr(,"match.length")
[1] 2
attr(,"useBytes")
[1] TRUE

yields the correct match, an incremented upper bound in

> regexpr('(.{1,3})\\1', 'foo')
[1] -1
attr(,"match.length")
[1] -1
attr(,"useBytes")
[1] TRUE

incorrectly yields no match.

R versions tested:
2.11.1 on i486-pc-linux-gnu
2.15.1 on x86_64-pc-linux-gnu
3.2.1 on i386-w64-mingw32
3.2.1 on x86_64-w64-mingw32
3.3.3 on x86_64-w64-mingw32
--
Best regards,
Dietmar Schindler
________________________________
manroland web systems GmbH -- Managing Director: Alexander Wassermann
Registered Office: Augsburg -- Trade Register: AG Augsburg -- HRB-No.: 26816 -- VAT: DE281389840

Confidentiality note:
This eMail and any files transmitted with it are confidential and intended solely for the use of the individual or entity to whom they are addressed. If you are not the intended recipient, you are hereby notified that any use or dissemination of this communication is strictly prohibited. If you have received this eMail in error, then please delete this eMail.


From dietmar.schindler at manroland-web.com  Tue Apr  4 10:45:30 2017
From: dietmar.schindler at manroland-web.com (dietmar.schindler at manroland-web.com)
Date: Tue, 4 Apr 2017 08:45:30 +0000
Subject: [Rd] Bug report: POSIX regular expression doesn't match for
 somewhat higher values of upper bound
Message-ID: <2c87513c247b4e13b22f278e15a034d1@AUSMXMBX03.mrws.biz>

Dear Sirs,

while

> regexpr('(.{1,2})\\1', 'foo')
[1] 2
attr(,"match.length")
[1] 2
attr(,"useBytes")
[1] TRUE

yields the correct match, an incremented upper bound in

> regexpr('(.{1,3})\\1', 'foo')
[1] -1
attr(,"match.length")
[1] -1
attr(,"useBytes")
[1] TRUE

incorrectly yields no match.

R versions tested:
2.11.1 on i486-pc-linux-gnu
2.15.1 on x86_64-pc-linux-gnu
3.2.1 on i386-w64-mingw32
3.2.1 on x86_64-w64-mingw32
3.3.3 on x86_64-w64-mingw32
--
Best regards,
Dietmar Schindler
________________________________
manroland web systems GmbH -- Managing Director: Alexander Wassermann
Registered Office: Augsburg -- Trade Register: AG Augsburg -- HRB-No.: 26816 -- VAT: DE281389840

Confidentiality note:
This eMail and any files transmitted with it are confidential and intended solely for the use of the individual or entity to whom they are addressed. If you are not the intended recipient, you are hereby notified that any use or dissemination of this communication is strictly prohibited. If you have received this eMail in error, then please delete this eMail.


From maechler at stat.math.ethz.ch  Tue Apr  4 12:30:10 2017
From: maechler at stat.math.ethz.ch (Martin Maechler)
Date: Tue, 4 Apr 2017 12:30:10 +0200
Subject: [Rd] Potential bug in utils::citation()
In-Reply-To: <22754.1628.575992.701240@stat.math.ethz.ch>
References: <D0AF09F5-D482-4269-A8E8-693E09C1289F@gmail.com>
 <22754.1628.575992.701240@stat.math.ethz.ch>
Message-ID: <22755.30130.518545.547548@stat.math.ethz.ch>

>>>>> Martin Maechler <maechler at stat.math.ethz.ch>
>>>>>     on Mon, 3 Apr 2017 10:22:52 +0200 writes:

>>>>> Zhian Kamvar <zkamvar at gmail.com>
>>>>>     on Sun, 2 Apr 2017 16:26:37 -0500 writes:

    >> Hi, I believe the function utils::citation() will fail if
    >> the package specified has two or more citation entries in
    >> the current R-devel. The following error is issued:

    >> 'missing' can only be used for arguments

    >> I have created a working example on github [0] that is
    >> build using R-devel on travis-ci [1]. Jim Hester has
    >> potentially identified [2] the source of the problem as
    >> being from a commit on the 27th [3, 4]. I do not have
    >> R-devel built on my machine, but I believe this error can
    >> be reproduced on the current R-devel with:

    >> if (require("boot") & require("utils"))
    >> utils::citation("boot")

    > Correct: it does reproduce the new bug.... 
    > and that is due to a change by me, and I had started investigation
    > on Friday (but not with your package and not having seen a
    > straighforward example yet).

    > This will be fixed ASAP, i.e., within hours.

In the end, it took two dozens of hours. The change is
    r72478 | maechler | 2017-04-04 11:41:51 +0200 

Martin


    >> Background:

    >> My package poppr suddenly started failing check on R-devel
    >> during a weekly travis-ci job [5] due to the error
    >> above. Another package of mine, ezec, passed [6]. Both
    >> contain calls to utils::citation() within the vignettes,
    >> but poppr has two citations and ezec only has one (called
    >> from another package).

    >> Thanks, Zhian

    >> [0]: https://github.com/zkamvar/citest [1]:
    >> https://travis-ci.org/zkamvar/citest/jobs/217874351 [2]:
    >> https://github.com/wch/r-source/commit/7890e9e87d44f85ab76c0e786036a191eacd71d1
    >> [3]: https://svn.r-project.org/R/trunk at 72419 [4]:
    >> https://github.com/wch/r-source/commit/7890e9e87d44f85ab76c0e786036a191eacd71d1
    >> [5]:
    >> https://travis-ci.org/grunwaldlab/poppr/jobs/216452458
    >> [6]: https://travis-ci.org/grunwaldlab/ezec/jobs/216452916

    >> -----
    >> Zhian N. Kamvar, Ph. D.  Postdoctoral Researcher (Everhart
    >> Lab) Department of Plant Pathology University of
    >> Nebraska-Lincoln

    >> ______________________________________________
    >> R-devel at r-project.org mailing list
    >> https://stat.ethz.ch/mailman/listinfo/r-devel

    > ______________________________________________
    > R-devel at r-project.org mailing list
    > https://stat.ethz.ch/mailman/listinfo/r-devel


From maechler at stat.math.ethz.ch  Tue Apr  4 12:30:10 2017
From: maechler at stat.math.ethz.ch (Martin Maechler)
Date: Tue, 4 Apr 2017 12:30:10 +0200
Subject: [Rd] Potential bug in utils::citation()
In-Reply-To: <22754.1628.575992.701240@stat.math.ethz.ch>
References: <D0AF09F5-D482-4269-A8E8-693E09C1289F@gmail.com>
 <22754.1628.575992.701240@stat.math.ethz.ch>
Message-ID: <22755.30130.518545.547548@stat.math.ethz.ch>

>>>>> Martin Maechler <maechler at stat.math.ethz.ch>
>>>>>     on Mon, 3 Apr 2017 10:22:52 +0200 writes:

>>>>> Zhian Kamvar <zkamvar at gmail.com>
>>>>>     on Sun, 2 Apr 2017 16:26:37 -0500 writes:

    >> Hi, I believe the function utils::citation() will fail if
    >> the package specified has two or more citation entries in
    >> the current R-devel. The following error is issued:

    >> 'missing' can only be used for arguments

    >> I have created a working example on github [0] that is
    >> build using R-devel on travis-ci [1]. Jim Hester has
    >> potentially identified [2] the source of the problem as
    >> being from a commit on the 27th [3, 4]. I do not have
    >> R-devel built on my machine, but I believe this error can
    >> be reproduced on the current R-devel with:

    >> if (require("boot") & require("utils"))
    >> utils::citation("boot")

    > Correct: it does reproduce the new bug.... 
    > and that is due to a change by me, and I had started investigation
    > on Friday (but not with your package and not having seen a
    > straighforward example yet).

    > This will be fixed ASAP, i.e., within hours.

In the end, it took two dozens of hours. The change is
    r72478 | maechler | 2017-04-04 11:41:51 +0200 

Martin


    >> Background:

    >> My package poppr suddenly started failing check on R-devel
    >> during a weekly travis-ci job [5] due to the error
    >> above. Another package of mine, ezec, passed [6]. Both
    >> contain calls to utils::citation() within the vignettes,
    >> but poppr has two citations and ezec only has one (called
    >> from another package).

    >> Thanks, Zhian

    >> [0]: https://github.com/zkamvar/citest [1]:
    >> https://travis-ci.org/zkamvar/citest/jobs/217874351 [2]:
    >> https://github.com/wch/r-source/commit/7890e9e87d44f85ab76c0e786036a191eacd71d1
    >> [3]: https://svn.r-project.org/R/trunk at 72419 [4]:
    >> https://github.com/wch/r-source/commit/7890e9e87d44f85ab76c0e786036a191eacd71d1
    >> [5]:
    >> https://travis-ci.org/grunwaldlab/poppr/jobs/216452458
    >> [6]: https://travis-ci.org/grunwaldlab/ezec/jobs/216452916

    >> -----
    >> Zhian N. Kamvar, Ph. D.  Postdoctoral Researcher (Everhart
    >> Lab) Department of Plant Pathology University of
    >> Nebraska-Lincoln

    >> ______________________________________________
    >> R-devel at r-project.org mailing list
    >> https://stat.ethz.ch/mailman/listinfo/r-devel

    > ______________________________________________
    > R-devel at r-project.org mailing list
    > https://stat.ethz.ch/mailman/listinfo/r-devel


From winstonchang1 at gmail.com  Tue Apr  4 22:29:40 2017
From: winstonchang1 at gmail.com (Winston Chang)
Date: Tue, 4 Apr 2017 15:29:40 -0500
Subject: [Rd] Very hard to reproduce bug (?) in R-devel
In-Reply-To: <CAFOpNVG6RtN47SVvg_L1HKYSOPccnXgWjMX3ouLGxjCKXovc=Q@mail.gmail.com>
References: <CAFOpNVFQyz_UtDkuZFxa9ttCcQc6wvN7bDb5AbfsfTT_HuHeog@mail.gmail.com>
 <CAFOpNVG6RtN47SVvg_L1HKYSOPccnXgWjMX3ouLGxjCKXovc=Q@mail.gmail.com>
Message-ID: <CAFOpNVGO4DEVE+=0Ujysb+zPksyJGA8t1mkB9929wSndJTS0gA@mail.gmail.com>

>
>
>>
I've done some more investigation into the problem, and it is very
difficult to pin down. What it looks like is happening is roughly like this:
- `p` is an environment and `p$e` is also an environment.
- There is a loop. In each iteration, it looks for one item in `p$e`, saves
it in a variable `x`, then removes that item from `p$e`. Then it invokes
`x()`. The loop runs again, until there are no more items in `p$e`.

The problem is that `ls(p$e)` sometimes returns the wrong values -- it
returns the values that it had in previous iterations of the loop. The
behavior is very touchy. Almost any change to the code will slightly change
the behavior; sometimes the `ls()` returns values from a different
iteration of the loop, and sometimes the problem doesn't happen at all.

I've put a  Dockerfile and instructions for reproducing the problem here:
  https://gist.github.com/wch/2596a1c9f1bcdee91bb210c782141c88

I think that I've gotten about as far with this as I can, though I'd be
happy to provide more information if anyone wants to take look at the
problem.

-Winston

	[[alternative HTML version deleted]]


From maechler at stat.math.ethz.ch  Wed Apr  5 09:59:41 2017
From: maechler at stat.math.ethz.ch (Martin Maechler)
Date: Wed, 5 Apr 2017 09:59:41 +0200
Subject: [Rd] Very hard to reproduce bug (?) in R-devel
In-Reply-To: <CAFOpNVGO4DEVE+=0Ujysb+zPksyJGA8t1mkB9929wSndJTS0gA@mail.gmail.com>
References: <CAFOpNVFQyz_UtDkuZFxa9ttCcQc6wvN7bDb5AbfsfTT_HuHeog@mail.gmail.com>
 <CAFOpNVG6RtN47SVvg_L1HKYSOPccnXgWjMX3ouLGxjCKXovc=Q@mail.gmail.com>
 <CAFOpNVGO4DEVE+=0Ujysb+zPksyJGA8t1mkB9929wSndJTS0gA@mail.gmail.com>
Message-ID: <22756.41965.160956.187187@stat.math.ethz.ch>

>>>>> Winston Chang <winstonchang1 at gmail.com>
>>>>>     on Tue, 4 Apr 2017 15:29:40 -0500 writes:

    > I've done some more investigation into the problem, and it is very
    > difficult to pin down. What it looks like is happening is roughly like this:
    > - `p` is an environment and `p$e` is also an environment.
    > - There is a loop. In each iteration, it looks for one item in `p$e`, saves
    > it in a variable `x`, then removes that item from `p$e`. Then it invokes
    > `x()`. The loop runs again, until there are no more items in `p$e`.

    > The problem is that `ls(p$e)` sometimes returns the wrong values -- it
    > returns the values that it had in previous iterations of the loop. The
    > behavior is very touchy. Almost any change to the code will slightly change
    > the behavior; sometimes the `ls()` returns values from a different
    > iteration of the loop, and sometimes the problem doesn't happen at all.

    > I've put a  Dockerfile and instructions for reproducing the problem here:
    > https://gist.github.com/wch/2596a1c9f1bcdee91bb210c782141c88

    > I think that I've gotten about as far with this as I can, though I'd be
    > happy to provide more information if anyone wants to take look at the
    > problem.

Dear Winston,

While I agree this may very well be a bug in R(-devel), and hence
also R in 3.4.0 alpha and hence quite important to be dealt with,

your code still involves 3 non-trivial  packages (DBI, R6,
testthat) some of which have their own C code and notably load
a couple of other package's namespaces.
We've always made a point
      https://www.r-project.org/bugs.html
that bugs in R should be reproducible without extra
packages... and I think it would definitely help to pinpoint the
issue to be seen outside of your extra packages' world. 

Or have you been aware of that and are just asking for help
finding a bug in one of the extra packages involved, a bug that might only be triggered by recent changes in R ?

OTOH, what you describe above  (p ; p$e ; p$e$x ...)
should be reproducible in pure "base" R code, right?

I'm sorry not to be of more help
Martin

    > -Winston


From maechler at stat.math.ethz.ch  Wed Apr  5 11:15:20 2017
From: maechler at stat.math.ethz.ch (Martin Maechler)
Date: Wed, 5 Apr 2017 11:15:20 +0200
Subject: [Rd] Bug report: POSIX regular expression doesn't match for
 somewhat higher values of upper bound
In-Reply-To: <2c87513c247b4e13b22f278e15a034d1@AUSMXMBX03.mrws.biz>
References: <2c87513c247b4e13b22f278e15a034d1@AUSMXMBX03.mrws.biz>
Message-ID: <22756.46504.29335.469599@stat.math.ethz.ch>

>>>>>   <dietmar.schindler at manroland-web.com>
>>>>>     on Tue, 4 Apr 2017 08:45:30 +0000 writes:

    > Dear Sirs,
    > while

    >> regexpr('(.{1,2})\\1', 'foo')
    > [1] 2
    > attr(,"match.length")
    > [1] 2
    > attr(,"useBytes")
    > [1] TRUE

    > yields the correct match, an incremented upper bound in

    >> regexpr('(.{1,3})\\1', 'foo')
    > [1] -1
    > attr(,"match.length")
    > [1] -1
    > attr(,"useBytes")
    > [1] TRUE

    > incorrectly yields no match.

Hmm, yes, I would also say that this is incorrect
(though I'm always cautious: The  ?regex  help page explicitly
 mentions greedy repetitions, and these can "bite you" ..)

The behavior is also different from the  perl=TRUE one which is
correct (according to the above understanding).

Using  grep() instead of regexpr() makes the behavior easier to parse.
The following code 
----------------------------------------------------------------------

tx <- c("ab","abc", paste0("foo", c("", "b", "o", "bar", "oofy")))
setNames(nchar(tx), tx)
## ab     abc     foo    foob    fooo  foobar foooofy
##  2       3       3       4       4       6       7

grep1r <- function(n, txt, ...) {
    pattern <- paste0('(.{1,',n,'})\\1', collapse="") ## can have empty n
    ans <- grep(pattern, txt, value=TRUE, ...)
    cat(sprintf("pattern '%s' : ", pattern)); print(ans, quote=FALSE)
    invisible(ans)
}

grep1r({}, tx)# '.{1,}' : because of _greedy_ matching there is __no__ repetiion!
grep1r(100,tx)# i.e., these both give an empty match :  character(0)

## matching at most once:
grep1r(1, tx)# matches all 5 starting with "foo"
grep1r(2, tx)# ditto    : all have more than 2 chars
grep1r(3, tx)# not "foo": those with more than 3 chars
grep1r(4, tx)# .. those with more than 4 characters
grep1r(5, tx)# .. those with more than 5 characters
grep1r(6, tx)# .. those with more than 6 characters
grep1r(7, tx)# NONE (= those with more than 7 characters)

for(p in c(FALSE,TRUE)) {
    cat("\ngrep(*, perl =", p, ") :\n")
    for(n in c(list(NULL), 1:7))
        grep1r(n, tx, perl = p)
}

----------------------------------------------------------------------

ends with

> for(p in c(FALSE,TRUE)) {
+     cat("\ngrep(*, perl =", p, ") :\n")
+     for(n in c(list(NULL), 1:7))
+         grep1r(n, tx, perl = p)
+ }

grep(*, perl = FALSE ) :
pattern '(.{1,})\1' : character(0)
pattern '(.{1,1})\1' : [1] foo     foob    fooo    foobar  foooofy
pattern '(.{1,2})\1' : [1] foo     foob    fooo    foobar  foooofy
pattern '(.{1,3})\1' : [1] foob    fooo    foobar  foooofy
pattern '(.{1,4})\1' : [1] foobar  foooofy
pattern '(.{1,5})\1' : [1] foobar  foooofy
pattern '(.{1,6})\1' : [1] foooofy
pattern '(.{1,7})\1' : character(0)

grep(*, perl = TRUE ) :
pattern '(.{1,})\1' : [1] foo     foob    fooo    foobar  foooofy
pattern '(.{1,1})\1' : [1] foo     foob    fooo    foobar  foooofy
pattern '(.{1,2})\1' : [1] foo     foob    fooo    foobar  foooofy
pattern '(.{1,3})\1' : [1] foo     foob    fooo    foobar  foooofy
pattern '(.{1,4})\1' : [1] foo     foob    fooo    foobar  foooofy
pattern '(.{1,5})\1' : [1] foo     foob    fooo    foobar  foooofy
pattern '(.{1,6})\1' : [1] foo     foob    fooo    foobar  foooofy
pattern '(.{1,7})\1' : [1] foo     foob    fooo    foobar  foooofy
>


From winstonchang1 at gmail.com  Wed Apr  5 20:40:59 2017
From: winstonchang1 at gmail.com (Winston Chang)
Date: Wed, 5 Apr 2017 13:40:59 -0500
Subject: [Rd] Very hard to reproduce bug (?) in R-devel
In-Reply-To: <22756.41965.160956.187187@stat.math.ethz.ch>
References: <CAFOpNVFQyz_UtDkuZFxa9ttCcQc6wvN7bDb5AbfsfTT_HuHeog@mail.gmail.com>
 <CAFOpNVG6RtN47SVvg_L1HKYSOPccnXgWjMX3ouLGxjCKXovc=Q@mail.gmail.com>
 <CAFOpNVGO4DEVE+=0Ujysb+zPksyJGA8t1mkB9929wSndJTS0gA@mail.gmail.com>
 <22756.41965.160956.187187@stat.math.ethz.ch>
Message-ID: <CAFOpNVE95J2Jb3bmTMD1t1vXWYEiGzM1iw-_CV134W=8B_z9LQ@mail.gmail.com>

)

On Wed, Apr 5, 2017 at 2:59 AM, Martin Maechler
<maechler at stat.math.ethz.ch> wrote:
>
> >>>>> Winston Chang <winstonchang1 at gmail.com>
> >>>>>     on Tue, 4 Apr 2017 15:29:40 -0500 writes:
>
>     > I've done some more investigation into the problem, and it is very
>     > difficult to pin down. What it looks like is happening is roughly like this:
>     > - `p` is an environment and `p$e` is also an environment.
>     > - There is a loop. In each iteration, it looks for one item in `p$e`, saves
>     > it in a variable `x`, then removes that item from `p$e`. Then it invokes
>     > `x()`. The loop runs again, until there are no more items in `p$e`.
>
>     > The problem is that `ls(p$e)` sometimes returns the wrong values -- it
>     > returns the values that it had in previous iterations of the loop. The
>     > behavior is very touchy. Almost any change to the code will slightly change
>     > the behavior; sometimes the `ls()` returns values from a different
>     > iteration of the loop, and sometimes the problem doesn't happen at all.
>
>     > I've put a  Dockerfile and instructions for reproducing the problem here:
>     > https://gist.github.com/wch/2596a1c9f1bcdee91bb210c782141c88
>
>     > I think that I've gotten about as far with this as I can, though I'd be
>     > happy to provide more information if anyone wants to take look at the
>     > problem.
>
> Dear Winston,
>
> While I agree this may very well be a bug in R(-devel), and hence
> also R in 3.4.0 alpha and hence quite important to be dealt with,
>
> your code still involves 3 non-trivial  packages (DBI, R6,
> testthat) some of which have their own C code and notably load
> a couple of other package's namespaces.
> We've always made a point
>       https://www.r-project.org/bugs.html
> that bugs in R should be reproducible without extra
> packages... and I think it would definitely help to pinpoint the
> issue to be seen outside of your extra packages' world.
>
> Or have you been aware of that and are just asking for help
> finding a bug in one of the extra packages involved, a bug that might only be triggered by recent changes in R ?
>
> OTOH, what you describe above  (p ; p$e ; p$e$x ...)
> should be reproducible in pure "base" R code, right?
>
> I'm sorry not to be of more help
> Martin


Of the four packages that are loaded when running the tests (pool,
DBI, R6, testthat, magrittr, crayon), only testthat contains compiled
code, and it is pretty minimal. The only compiled code in testthat
that should be executed is a function that finds a label -- but that
happens only after an error occurs.

This is the sessionInfo():
R Under development (unstable) (2017-03-23 r72389)
Platform: x86_64-pc-linux-gnu (64-bit)
Running under: Debian GNU/Linux 9 (stretch)

Matrix products: default
BLAS: /usr/local/lib/R/lib/libRblas.so
LAPACK: /usr/local/lib/R/lib/libRlapack.so

locale:
 [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C
 [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8
 [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8
 [7] LC_PAPER=en_US.UTF-8       LC_NAME=C
 [9] LC_ADDRESS=C               LC_TELEPHONE=C
[11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C

attached base packages:
[1] stats     graphics  grDevices utils     datasets  methods   base

other attached packages:
[1] pool_0.1.0     DBI_0.6-1      testthat_1.0.2

loaded via a namespace (and not attached):
[1] compiler_3.5.0 magrittr_1.5   R6_2.2.0       crayon_1.3.2


I have spent days trying to make a minimal example, and that is the
best that I have been able to do so far. I would not involve all this
complexity if I could avoid it. The problem is that the behavior is
extremely sensitive to any changes. Seemingly-innocuous things like
removing other tests, or adding a cat() statement can make the error
disappear, or in some cases it makes ls() return values from a
different (previous) iteration of the loop.


In my testing, I have also seen a case where calls to `cat( ... ,
file=stderr())` result in output that has the wrong order. I don't
know if that's due to the cat() calls being executed in the wrong
order, or if it's simply being printed or buffered in the wrong order.

This is the code in question that cat()s to stderr:
https://github.com/rstudio/pool/blob/0724ad9/R/scheduler.R#L74-L90
      while (TRUE) {
        tasks <- sort(ls(private$scheduledTasks))
        if (length(tasks) == 0) break
        t <- tasks[[1]]

        s <- stderr()
        cat(tasks, "--1--\n", file = s)
        cat(ls(private$scheduledTasks), "--2--\n", file = s)
        cat(t, "--3--\n", file = s)

        task <- private$scheduledTasks[[t]]
        rm(list = t, envir = private$scheduledTasks)

        task()
      }

Without going into too much detail, it should print lines of text that
end with --1--, --2--, --3--, and repeat. Here's what it prints
instead when running the tests:

20170405-182549.466875-18 20170405-182559.456628-17
20170405-182729.456318-16 --1--
20170405-182549.466875-18 20170405-182559.456628-17
20170405-182729.456318-16 --1--
20170405-182549.466875-18 20170405-182559.456628-17
20170405-182729.456318-16 --2--
20170405-182549.466875-18 --3--
20170405-182559.456628-17 20170405-182729.456318-16 --1--
20170405-182559.456628-17 20170405-182729.456318-16 --2--
20170405-182559.456628-17 --3--
20170405-182729.456318-16 --1--
20170405-182729.456318-16 --2--
20170405-182729.456318-16 --3--
 --2--
20170405-182549.466875-18 --3--
1. Error: pool scheduler: schedules things in the right order
(@test-scheduling.R#13)
could not find function "task"
1: naiveScheduler$protect({
       scheduleTask(1e+05, function() {
           results <<- c(results, 3L)
       })
       scheduleTask(10000, function() {
           results <<- c(results, 2L)
       })
       scheduleTask(10, function() {
           results <<- c(results, 1L)
       })
   }) at testthat/test-scheduling.R:13
2: private$refCount$release() at testthat/test-scheduling.R:13
3: private$callback()

It's almost as though, in the middle of the first iteration of the
while loop, R jumps to the next iteration of the loop, runs the loop a
couple of times to completion, and then returns to the first iteration
of the loop at the place that it left.

This can be reproduced by following the instructions in this gist:
  https://gist.github.com/wch/2596a1c9f1bcdee91bb210c782141c88

Almost any change to the code will make the error disappear, or change
to a different one.


With regard to reproducing it in "base" R: I made a simple example
using just R (no other packages) that does something similar to what
happens in the tests, but even when I run it for 100,000 iterations,
the error doesn't occur.

I think there's a good chance that this is due to a bug in R. I have
been trying to track down the cause of the problem but haven't been
able find it.

-Winston


From rmcgehee at walleyetrading.net  Wed Apr  5 21:24:14 2017
From: rmcgehee at walleyetrading.net (Robert McGehee)
Date: Wed, 5 Apr 2017 19:24:14 +0000
Subject: [Rd] Very hard to reproduce bug (?) in R-devel
In-Reply-To: <CAFOpNVE95J2Jb3bmTMD1t1vXWYEiGzM1iw-_CV134W=8B_z9LQ@mail.gmail.com>
References: <CAFOpNVFQyz_UtDkuZFxa9ttCcQc6wvN7bDb5AbfsfTT_HuHeog@mail.gmail.com>
 <CAFOpNVG6RtN47SVvg_L1HKYSOPccnXgWjMX3ouLGxjCKXovc=Q@mail.gmail.com>
 <CAFOpNVGO4DEVE+=0Ujysb+zPksyJGA8t1mkB9929wSndJTS0gA@mail.gmail.com>
 <22756.41965.160956.187187@stat.math.ethz.ch>
 <CAFOpNVE95J2Jb3bmTMD1t1vXWYEiGzM1iw-_CV134W=8B_z9LQ@mail.gmail.com>
Message-ID: <30D28A63376088428E8318DD67FD407F72F8AD@ny-mailstore1.walleyetrading.net>

Winston,
I had a similar experience to you tracking down an insanely difficult bug in my R code that "disappeared" whenever slight changes were made to the script (e.g. like adding cat() statements). In my case, it coincided with my over-eager compilation of R and its library stack, as I was also experimenting with a cutting edge version of the gcc compiler as well as what I thought were innocuous performance enhancing CFLAGS like -O3/-Ofast -march=native. After downgrading gcc and recompiling everything (R and BLAS) without the extra flags, the problem went away. Not saying this is your problem, just sharing my similar experience.

<TANGENT> And for anyone interested, I did extensive benchmarking on the effects of the added CFLAGS and cutting edge gcc compilers, and I never saw any significant performance enhancement, and frequently saw a big performance penalty with extra flags, particularly as matrix algebra problems sometimes slowed down enormously when using a custom BLAS (ATLAS) compiled with anything fancy. Though nowadays, the out-of-the-box R BLAS seems much faster than it used to be, so I don't even bother fiddling with a custom BLAS. </TANGENT>

--Robert
 

-----Original Message-----
From: R-devel [mailto:r-devel-bounces at r-project.org] On Behalf Of Winston Chang
Sent: Wednesday, April 05, 2017 2:41 PM
To: Martin Maechler <maechler at stat.math.ethz.ch>
Cc: R Development <R-devel at r-project.org>
Subject: Re: [Rd] Very hard to reproduce bug (?) in R-devel

)

On Wed, Apr 5, 2017 at 2:59 AM, Martin Maechler
<maechler at stat.math.ethz.ch> wrote:
>
> >>>>> Winston Chang <winstonchang1 at gmail.com>
> >>>>>     on Tue, 4 Apr 2017 15:29:40 -0500 writes:
>
>     > I've done some more investigation into the problem, and it is very
>     > difficult to pin down. What it looks like is happening is roughly like this:
>     > - `p` is an environment and `p$e` is also an environment.
>     > - There is a loop. In each iteration, it looks for one item in `p$e`, saves
>     > it in a variable `x`, then removes that item from `p$e`. Then it invokes
>     > `x()`. The loop runs again, until there are no more items in `p$e`.
>
>     > The problem is that `ls(p$e)` sometimes returns the wrong values -- it
>     > returns the values that it had in previous iterations of the loop. The
>     > behavior is very touchy. Almost any change to the code will slightly change
>     > the behavior; sometimes the `ls()` returns values from a different
>     > iteration of the loop, and sometimes the problem doesn't happen at all.
>
>     > I've put a  Dockerfile and instructions for reproducing the problem here:
>     > https://gist.github.com/wch/2596a1c9f1bcdee91bb210c782141c88
>
>     > I think that I've gotten about as far with this as I can, though I'd be
>     > happy to provide more information if anyone wants to take look at the
>     > problem.
>
> Dear Winston,
>
> While I agree this may very well be a bug in R(-devel), and hence
> also R in 3.4.0 alpha and hence quite important to be dealt with,
>
> your code still involves 3 non-trivial  packages (DBI, R6,
> testthat) some of which have their own C code and notably load
> a couple of other package's namespaces.
> We've always made a point
>       https://www.r-project.org/bugs.html
> that bugs in R should be reproducible without extra
> packages... and I think it would definitely help to pinpoint the
> issue to be seen outside of your extra packages' world.
>
> Or have you been aware of that and are just asking for help
> finding a bug in one of the extra packages involved, a bug that might only be triggered by recent changes in R ?
>
> OTOH, what you describe above  (p ; p$e ; p$e$x ...)
> should be reproducible in pure "base" R code, right?
>
> I'm sorry not to be of more help
> Martin


Of the four packages that are loaded when running the tests (pool,
DBI, R6, testthat, magrittr, crayon), only testthat contains compiled
code, and it is pretty minimal. The only compiled code in testthat
that should be executed is a function that finds a label -- but that
happens only after an error occurs.

This is the sessionInfo():
R Under development (unstable) (2017-03-23 r72389)
Platform: x86_64-pc-linux-gnu (64-bit)
Running under: Debian GNU/Linux 9 (stretch)

Matrix products: default
BLAS: /usr/local/lib/R/lib/libRblas.so
LAPACK: /usr/local/lib/R/lib/libRlapack.so

locale:
 [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C
 [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8
 [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8
 [7] LC_PAPER=en_US.UTF-8       LC_NAME=C
 [9] LC_ADDRESS=C               LC_TELEPHONE=C
[11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C

attached base packages:
[1] stats     graphics  grDevices utils     datasets  methods   base

other attached packages:
[1] pool_0.1.0     DBI_0.6-1      testthat_1.0.2

loaded via a namespace (and not attached):
[1] compiler_3.5.0 magrittr_1.5   R6_2.2.0       crayon_1.3.2


I have spent days trying to make a minimal example, and that is the
best that I have been able to do so far. I would not involve all this
complexity if I could avoid it. The problem is that the behavior is
extremely sensitive to any changes. Seemingly-innocuous things like
removing other tests, or adding a cat() statement can make the error
disappear, or in some cases it makes ls() return values from a
different (previous) iteration of the loop.


In my testing, I have also seen a case where calls to `cat( ... ,
file=stderr())` result in output that has the wrong order. I don't
know if that's due to the cat() calls being executed in the wrong
order, or if it's simply being printed or buffered in the wrong order.

This is the code in question that cat()s to stderr:
https://github.com/rstudio/pool/blob/0724ad9/R/scheduler.R#L74-L90
      while (TRUE) {
        tasks <- sort(ls(private$scheduledTasks))
        if (length(tasks) == 0) break
        t <- tasks[[1]]

        s <- stderr()
        cat(tasks, "--1--\n", file = s)
        cat(ls(private$scheduledTasks), "--2--\n", file = s)
        cat(t, "--3--\n", file = s)

        task <- private$scheduledTasks[[t]]
        rm(list = t, envir = private$scheduledTasks)

        task()
      }

Without going into too much detail, it should print lines of text that
end with --1--, --2--, --3--, and repeat. Here's what it prints
instead when running the tests:

20170405-182549.466875-18 20170405-182559.456628-17
20170405-182729.456318-16 --1--
20170405-182549.466875-18 20170405-182559.456628-17
20170405-182729.456318-16 --1--
20170405-182549.466875-18 20170405-182559.456628-17
20170405-182729.456318-16 --2--
20170405-182549.466875-18 --3--
20170405-182559.456628-17 20170405-182729.456318-16 --1--
20170405-182559.456628-17 20170405-182729.456318-16 --2--
20170405-182559.456628-17 --3--
20170405-182729.456318-16 --1--
20170405-182729.456318-16 --2--
20170405-182729.456318-16 --3--
 --2--
20170405-182549.466875-18 --3--
1. Error: pool scheduler: schedules things in the right order
(@test-scheduling.R#13)
could not find function "task"
1: naiveScheduler$protect({
       scheduleTask(1e+05, function() {
           results <<- c(results, 3L)
       })
       scheduleTask(10000, function() {
           results <<- c(results, 2L)
       })
       scheduleTask(10, function() {
           results <<- c(results, 1L)
       })
   }) at testthat/test-scheduling.R:13
2: private$refCount$release() at testthat/test-scheduling.R:13
3: private$callback()

It's almost as though, in the middle of the first iteration of the
while loop, R jumps to the next iteration of the loop, runs the loop a
couple of times to completion, and then returns to the first iteration
of the loop at the place that it left.

This can be reproduced by following the instructions in this gist:
  https://gist.github.com/wch/2596a1c9f1bcdee91bb210c782141c88

Almost any change to the code will make the error disappear, or change
to a different one.


With regard to reproducing it in "base" R: I made a simple example
using just R (no other packages) that does something similar to what
happens in the tests, but even when I run it for 100,000 iterations,
the error doesn't occur.

I think there's a good chance that this is due to a bug in R. I have
been trying to track down the cause of the problem but haven't been
able find it.

-Winston

______________________________________________
R-devel at r-project.org mailing list
https://stat.ethz.ch/mailman/listinfo/r-devel


From winstonchang1 at gmail.com  Wed Apr  5 22:46:29 2017
From: winstonchang1 at gmail.com (Winston Chang)
Date: Wed, 5 Apr 2017 15:46:29 -0500
Subject: [Rd] Very hard to reproduce bug (?) in R-devel
In-Reply-To: <30D28A63376088428E8318DD67FD407F72F8AD@ny-mailstore1.walleyetrading.net>
References: <CAFOpNVFQyz_UtDkuZFxa9ttCcQc6wvN7bDb5AbfsfTT_HuHeog@mail.gmail.com>
 <CAFOpNVG6RtN47SVvg_L1HKYSOPccnXgWjMX3ouLGxjCKXovc=Q@mail.gmail.com>
 <CAFOpNVGO4DEVE+=0Ujysb+zPksyJGA8t1mkB9929wSndJTS0gA@mail.gmail.com>
 <22756.41965.160956.187187@stat.math.ethz.ch>
 <CAFOpNVE95J2Jb3bmTMD1t1vXWYEiGzM1iw-_CV134W=8B_z9LQ@mail.gmail.com>
 <30D28A63376088428E8318DD67FD407F72F8AD@ny-mailstore1.walleyetrading.net>
Message-ID: <CAFOpNVFtpafP95j5_OJYjDz=5EDee8ymC4zsrNfas2rsZ3LbYw@mail.gmail.com>

On Wed, Apr 5, 2017 at 2:24 PM, Robert McGehee <rmcgehee at walleyetrading.net>
wrote:

> Winston,
> I had a similar experience to you tracking down an insanely difficult bug
> in my R code that "disappeared" whenever slight changes were made to the
> script (e.g. like adding cat() statements). In my case, it coincided with
> my over-eager compilation of R and its library stack, as I was also
> experimenting with a cutting edge version of the gcc compiler as well as
> what I thought were innocuous performance enhancing CFLAGS like -O3/-Ofast
> -march=native. After downgrading gcc and recompiling everything (R and
> BLAS) without the extra flags, the problem went away. Not saying this is
> your problem, just sharing my similar experience.
>
>
Thanks Robert. I'm glad that I'm not the only one who's encountered an
issue like this. "Insanely difficult" is an apt description. :)

I've been using the rocker/r-devel for testing. It compiles R with the
following CFLAGS:
  -g -O2 -fdebug-prefix-map=/build/r-base-3.3.3=. -fstack-protector-strong
-Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g
It looks like it gets those settings from running R CMD config CFLAGS with
the already-installed version of R (3.3.3) which comes from a .deb package.
  https://github.com/rocker-org/rocker/blob/master/r-devel/Dockerfile#L76


I've also compiled R (again, in Docker) and tested with that, and gotten
the same results. It basically uses just `./configure
--without-recommended-packages`
and then `make`.

	[[alternative HTML version deleted]]


From winstonchang1 at gmail.com  Wed Apr  5 23:30:34 2017
From: winstonchang1 at gmail.com (Winston Chang)
Date: Wed, 5 Apr 2017 16:30:34 -0500
Subject: [Rd] Very hard to reproduce bug (?) in R-devel
In-Reply-To: <30D28A63376088428E8318DD67FD407F72F8AD@ny-mailstore1.walleyetrading.net>
References: <CAFOpNVFQyz_UtDkuZFxa9ttCcQc6wvN7bDb5AbfsfTT_HuHeog@mail.gmail.com>
 <CAFOpNVG6RtN47SVvg_L1HKYSOPccnXgWjMX3ouLGxjCKXovc=Q@mail.gmail.com>
 <CAFOpNVGO4DEVE+=0Ujysb+zPksyJGA8t1mkB9929wSndJTS0gA@mail.gmail.com>
 <22756.41965.160956.187187@stat.math.ethz.ch>
 <CAFOpNVE95J2Jb3bmTMD1t1vXWYEiGzM1iw-_CV134W=8B_z9LQ@mail.gmail.com>
 <30D28A63376088428E8318DD67FD407F72F8AD@ny-mailstore1.walleyetrading.net>
Message-ID: <CAFOpNVFXdQ+QAx--WWFSnNZyk092csD1-SB6crakNrYi0Q5sgQ@mail.gmail.com>

I just tried recompiling R with no -O flag, and I still get the same error.
Here are the CFLAGS (the RD program runs R-devel instead of R 3.3.3):

# RD CMD config CFLAGS
-g -fdebug-prefix-map=/build/r-base-3.3.3=. -fstack-protector-strong
-Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g

-Winston


On Wed, Apr 5, 2017 at 2:24 PM, Robert McGehee <rmcgehee at walleyetrading.net>
wrote:

> Winston,
> I had a similar experience to you tracking down an insanely difficult bug
> in my R code that "disappeared" whenever slight changes were made to the
> script (e.g. like adding cat() statements). In my case, it coincided with
> my over-eager compilation of R and its library stack, as I was also
> experimenting with a cutting edge version of the gcc compiler as well as
> what I thought were innocuous performance enhancing CFLAGS like -O3/-Ofast
> -march=native. After downgrading gcc and recompiling everything (R and
> BLAS) without the extra flags, the problem went away. Not saying this is
> your problem, just sharing my similar experience.
>
> <TANGENT> And for anyone interested, I did extensive benchmarking on the
> effects of the added CFLAGS and cutting edge gcc compilers, and I never saw
> any significant performance enhancement, and frequently saw a big
> performance penalty with extra flags, particularly as matrix algebra
> problems sometimes slowed down enormously when using a custom BLAS (ATLAS)
> compiled with anything fancy. Though nowadays, the out-of-the-box R BLAS
> seems much faster than it used to be, so I don't even bother fiddling with
> a custom BLAS. </TANGENT>
>
> --Robert
>
>
> -----Original Message-----
> From: R-devel [mailto:r-devel-bounces at r-project.org] On Behalf Of Winston
> Chang
> Sent: Wednesday, April 05, 2017 2:41 PM
> To: Martin Maechler <maechler at stat.math.ethz.ch>
> Cc: R Development <R-devel at r-project.org>
> Subject: Re: [Rd] Very hard to reproduce bug (?) in R-devel
>
> )
>
> On Wed, Apr 5, 2017 at 2:59 AM, Martin Maechler
> <maechler at stat.math.ethz.ch> wrote:
> >
> > >>>>> Winston Chang <winstonchang1 at gmail.com>
> > >>>>>     on Tue, 4 Apr 2017 15:29:40 -0500 writes:
> >
> >     > I've done some more investigation into the problem, and it is very
> >     > difficult to pin down. What it looks like is happening is roughly
> like this:
> >     > - `p` is an environment and `p$e` is also an environment.
> >     > - There is a loop. In each iteration, it looks for one item in
> `p$e`, saves
> >     > it in a variable `x`, then removes that item from `p$e`. Then it
> invokes
> >     > `x()`. The loop runs again, until there are no more items in `p$e`.
> >
> >     > The problem is that `ls(p$e)` sometimes returns the wrong values
> -- it
> >     > returns the values that it had in previous iterations of the loop.
> The
> >     > behavior is very touchy. Almost any change to the code will
> slightly change
> >     > the behavior; sometimes the `ls()` returns values from a different
> >     > iteration of the loop, and sometimes the problem doesn't happen at
> all.
> >
> >     > I've put a  Dockerfile and instructions for reproducing the
> problem here:
> >     > https://gist.github.com/wch/2596a1c9f1bcdee91bb210c782141c88
> >
> >     > I think that I've gotten about as far with this as I can, though
> I'd be
> >     > happy to provide more information if anyone wants to take look at
> the
> >     > problem.
> >
> > Dear Winston,
> >
> > While I agree this may very well be a bug in R(-devel), and hence
> > also R in 3.4.0 alpha and hence quite important to be dealt with,
> >
> > your code still involves 3 non-trivial  packages (DBI, R6,
> > testthat) some of which have their own C code and notably load
> > a couple of other package's namespaces.
> > We've always made a point
> >       https://www.r-project.org/bugs.html
> > that bugs in R should be reproducible without extra
> > packages... and I think it would definitely help to pinpoint the
> > issue to be seen outside of your extra packages' world.
> >
> > Or have you been aware of that and are just asking for help
> > finding a bug in one of the extra packages involved, a bug that might
> only be triggered by recent changes in R ?
> >
> > OTOH, what you describe above  (p ; p$e ; p$e$x ...)
> > should be reproducible in pure "base" R code, right?
> >
> > I'm sorry not to be of more help
> > Martin
>
>
> Of the four packages that are loaded when running the tests (pool,
> DBI, R6, testthat, magrittr, crayon), only testthat contains compiled
> code, and it is pretty minimal. The only compiled code in testthat
> that should be executed is a function that finds a label -- but that
> happens only after an error occurs.
>
> This is the sessionInfo():
> R Under development (unstable) (2017-03-23 r72389)
> Platform: x86_64-pc-linux-gnu (64-bit)
> Running under: Debian GNU/Linux 9 (stretch)
>
> Matrix products: default
> BLAS: /usr/local/lib/R/lib/libRblas.so
> LAPACK: /usr/local/lib/R/lib/libRlapack.so
>
> locale:
>  [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C
>  [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8
>  [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8
>  [7] LC_PAPER=en_US.UTF-8       LC_NAME=C
>  [9] LC_ADDRESS=C               LC_TELEPHONE=C
> [11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C
>
> attached base packages:
> [1] stats     graphics  grDevices utils     datasets  methods   base
>
> other attached packages:
> [1] pool_0.1.0     DBI_0.6-1      testthat_1.0.2
>
> loaded via a namespace (and not attached):
> [1] compiler_3.5.0 magrittr_1.5   R6_2.2.0       crayon_1.3.2
>
>
> I have spent days trying to make a minimal example, and that is the
> best that I have been able to do so far. I would not involve all this
> complexity if I could avoid it. The problem is that the behavior is
> extremely sensitive to any changes. Seemingly-innocuous things like
> removing other tests, or adding a cat() statement can make the error
> disappear, or in some cases it makes ls() return values from a
> different (previous) iteration of the loop.
>
>
> In my testing, I have also seen a case where calls to `cat( ... ,
> file=stderr())` result in output that has the wrong order. I don't
> know if that's due to the cat() calls being executed in the wrong
> order, or if it's simply being printed or buffered in the wrong order.
>
> This is the code in question that cat()s to stderr:
> https://github.com/rstudio/pool/blob/0724ad9/R/scheduler.R#L74-L90
>       while (TRUE) {
>         tasks <- sort(ls(private$scheduledTasks))
>         if (length(tasks) == 0) break
>         t <- tasks[[1]]
>
>         s <- stderr()
>         cat(tasks, "--1--\n", file = s)
>         cat(ls(private$scheduledTasks), "--2--\n", file = s)
>         cat(t, "--3--\n", file = s)
>
>         task <- private$scheduledTasks[[t]]
>         rm(list = t, envir = private$scheduledTasks)
>
>         task()
>       }
>
> Without going into too much detail, it should print lines of text that
> end with --1--, --2--, --3--, and repeat. Here's what it prints
> instead when running the tests:
>
> 20170405-182549.466875-18 20170405-182559.456628-17
> 20170405-182729.456318-16 --1--
> 20170405-182549.466875-18 20170405-182559.456628-17
> 20170405-182729.456318-16 --1--
> 20170405-182549.466875-18 20170405-182559.456628-17
> 20170405-182729.456318-16 --2--
> 20170405-182549.466875-18 --3--
> 20170405-182559.456628-17 20170405-182729.456318-16 --1--
> 20170405-182559.456628-17 20170405-182729.456318-16 --2--
> 20170405-182559.456628-17 --3--
> 20170405-182729.456318-16 --1--
> 20170405-182729.456318-16 --2--
> 20170405-182729.456318-16 --3--
>  --2--
> 20170405-182549.466875-18 --3--
> 1. Error: pool scheduler: schedules things in the right order
> (@test-scheduling.R#13)
> could not find function "task"
> 1: naiveScheduler$protect({
>        scheduleTask(1e+05, function() {
>            results <<- c(results, 3L)
>        })
>        scheduleTask(10000, function() {
>            results <<- c(results, 2L)
>        })
>        scheduleTask(10, function() {
>            results <<- c(results, 1L)
>        })
>    }) at testthat/test-scheduling.R:13
> 2: private$refCount$release() at testthat/test-scheduling.R:13
> 3: private$callback()
>
> It's almost as though, in the middle of the first iteration of the
> while loop, R jumps to the next iteration of the loop, runs the loop a
> couple of times to completion, and then returns to the first iteration
> of the loop at the place that it left.
>
> This can be reproduced by following the instructions in this gist:
>   https://gist.github.com/wch/2596a1c9f1bcdee91bb210c782141c88
>
> Almost any change to the code will make the error disappear, or change
> to a different one.
>
>
> With regard to reproducing it in "base" R: I made a simple example
> using just R (no other packages) that does something similar to what
> happens in the tests, but even when I run it for 100,000 iterations,
> the error doesn't occur.
>
> I think there's a good chance that this is due to a bug in R. I have
> been trying to track down the cause of the problem but haven't been
> able find it.
>
> -Winston
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>

	[[alternative HTML version deleted]]


From edd at debian.org  Wed Apr  5 23:32:04 2017
From: edd at debian.org (Dirk Eddelbuettel)
Date: Wed, 5 Apr 2017 16:32:04 -0500
Subject: [Rd] Very hard to reproduce bug (?) in R-devel
In-Reply-To: <CAFOpNVFtpafP95j5_OJYjDz=5EDee8ymC4zsrNfas2rsZ3LbYw@mail.gmail.com>
References: <CAFOpNVFQyz_UtDkuZFxa9ttCcQc6wvN7bDb5AbfsfTT_HuHeog@mail.gmail.com>
 <CAFOpNVG6RtN47SVvg_L1HKYSOPccnXgWjMX3ouLGxjCKXovc=Q@mail.gmail.com>
 <CAFOpNVGO4DEVE+=0Ujysb+zPksyJGA8t1mkB9929wSndJTS0gA@mail.gmail.com>
 <22756.41965.160956.187187@stat.math.ethz.ch>
 <CAFOpNVE95J2Jb3bmTMD1t1vXWYEiGzM1iw-_CV134W=8B_z9LQ@mail.gmail.com>
 <30D28A63376088428E8318DD67FD407F72F8AD@ny-mailstore1.walleyetrading.net>
 <CAFOpNVFtpafP95j5_OJYjDz=5EDee8ymC4zsrNfas2rsZ3LbYw@mail.gmail.com>
Message-ID: <22757.25172.649683.95618@max.eddelbuettel.com>


On 5 April 2017 at 15:46, Winston Chang wrote:
| On Wed, Apr 5, 2017 at 2:24 PM, Robert McGehee <rmcgehee at walleyetrading.net>
| wrote:
| 
| > Winston,
| > I had a similar experience to you tracking down an insanely difficult bug
| > in my R code that "disappeared" whenever slight changes were made to the
| > script (e.g. like adding cat() statements). In my case, it coincided with
| > my over-eager compilation of R and its library stack, as I was also
| > experimenting with a cutting edge version of the gcc compiler as well as
| > what I thought were innocuous performance enhancing CFLAGS like -O3/-Ofast
| > -march=native. After downgrading gcc and recompiling everything (R and
| > BLAS) without the extra flags, the problem went away. Not saying this is
| > your problem, just sharing my similar experience.
| >
| >
| Thanks Robert. I'm glad that I'm not the only one who's encountered an
| issue like this. "Insanely difficult" is an apt description. :)
| 
| I've been using the rocker/r-devel for testing. It compiles R with the
| following CFLAGS:
|   -g -O2 -fdebug-prefix-map=/build/r-base-3.3.3=. -fstack-protector-strong
| -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g
| It looks like it gets those settings from running R CMD config CFLAGS with
| the already-installed version of R (3.3.3) which comes from a .deb package.
|   https://github.com/rocker-org/rocker/blob/master/r-devel/Dockerfile#L76

That's a Debian default a Policy-conforming offical package must use.

For Docker you get these from the (prebuild) .deb package, you get it when
you do r-devel by hand as they come back in via R CMD CONFIG:

  https://github.com/rocker-org/rocker/blob/master/r-devel/Dockerfile#L76-L77

You could undo those two lines / set CFLAGS and CXXFLAGS by hand.
 
| I've also compiled R (again, in Docker) and tested with that, and gotten
| the same results. It basically uses just `./configure
| --without-recommended-packages`
| and then `make`.

Then these options should not come in.  But are you saying that the Heisenbug
behaviour happens irrespective of the compilation flags?

Dirk

-- 
http://dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org


From winstonchang1 at gmail.com  Wed Apr  5 23:49:52 2017
From: winstonchang1 at gmail.com (Winston Chang)
Date: Wed, 5 Apr 2017 16:49:52 -0500
Subject: [Rd] Very hard to reproduce bug (?) in R-devel
In-Reply-To: <22757.25172.649683.95618@max.eddelbuettel.com>
References: <CAFOpNVFQyz_UtDkuZFxa9ttCcQc6wvN7bDb5AbfsfTT_HuHeog@mail.gmail.com>
 <CAFOpNVG6RtN47SVvg_L1HKYSOPccnXgWjMX3ouLGxjCKXovc=Q@mail.gmail.com>
 <CAFOpNVGO4DEVE+=0Ujysb+zPksyJGA8t1mkB9929wSndJTS0gA@mail.gmail.com>
 <22756.41965.160956.187187@stat.math.ethz.ch>
 <CAFOpNVE95J2Jb3bmTMD1t1vXWYEiGzM1iw-_CV134W=8B_z9LQ@mail.gmail.com>
 <30D28A63376088428E8318DD67FD407F72F8AD@ny-mailstore1.walleyetrading.net>
 <CAFOpNVFtpafP95j5_OJYjDz=5EDee8ymC4zsrNfas2rsZ3LbYw@mail.gmail.com>
 <22757.25172.649683.95618@max.eddelbuettel.com>
Message-ID: <CAFOpNVEGX4g69k0t+HiQ=oWTy75znOp8sUsWhcwSOCTqyfWveA@mail.gmail.com>

Hi Dirk, I sent another message just before yours, so you may not have seen
it:

===========

I just tried recompiling R with no -O flag, and I still get the same error.
Here are the CFLAGS (the RD program runs R-devel instead of R 3.3.3):

# RD CMD config CFLAGS
-g -fdebug-prefix-map=/build/r-base-3.3.3=. -fstack-protector-strong
-Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g

===========

Additionally, I tried again with the rocker/r-devel-san image, and got the
same error. There was no other output from the sanitizers. In this
container:

# RD CMD config CFLAGS
-pipe -Wall -pedantic -O2 -mtune=native -fsanitize=address

The output looks like this (it should be in order --1--, --2--, --3--,
repeat):
20170405-213410.095858-18 20170405-213420.085451-17
20170405-213550.084947-16 --1--
20170405-213410.095858-18 20170405-213420.085451-17
20170405-213550.084947-16 --1--
20170405-213410.095858-18 20170405-213420.085451-17
20170405-213550.084947-16 --2--
20170405-213410.095858-18 --3--
20170405-213420.085451-17 20170405-213550.084947-16 --1--
20170405-213420.085451-17 20170405-213550.084947-16 --2--
20170405-213420.085451-17 --3--
20170405-213550.084947-16 --1--
20170405-213550.084947-16 --2--
20170405-213550.084947-16 --3--
 --2--
20170405-213410.095858-18 --3--
1. Error: pool scheduler: schedules things in the right order
(@test-scheduling.R#13)
could not find function "task"
1: naiveScheduler$protect({
       scheduleTask(1e+05, function() {
           results <<- c(results, 3L)
       })
       scheduleTask(10000, function() {
           results <<- c(results, 2L)
       })
       scheduleTask(10, function() {
           results <<- c(results, 1L)
       })
   }) at testthat/test-scheduling.R:13
2: private$refCount$release() at testthat/test-scheduling.R:13
3: private$callback()

-Winston


On Wed, Apr 5, 2017 at 4:32 PM, Dirk Eddelbuettel <edd at debian.org> wrote:

>
> On 5 April 2017 at 15:46, Winston Chang wrote:
> | On Wed, Apr 5, 2017 at 2:24 PM, Robert McGehee <
> rmcgehee at walleyetrading.net>
> | wrote:
> |
> | > Winston,
> | > I had a similar experience to you tracking down an insanely difficult
> bug
> | > in my R code that "disappeared" whenever slight changes were made to
> the
> | > script (e.g. like adding cat() statements). In my case, it coincided
> with
> | > my over-eager compilation of R and its library stack, as I was also
> | > experimenting with a cutting edge version of the gcc compiler as well
> as
> | > what I thought were innocuous performance enhancing CFLAGS like
> -O3/-Ofast
> | > -march=native. After downgrading gcc and recompiling everything (R and
> | > BLAS) without the extra flags, the problem went away. Not saying this
> is
> | > your problem, just sharing my similar experience.
> | >
> | >
> | Thanks Robert. I'm glad that I'm not the only one who's encountered an
> | issue like this. "Insanely difficult" is an apt description. :)
> |
> | I've been using the rocker/r-devel for testing. It compiles R with the
> | following CFLAGS:
> |   -g -O2 -fdebug-prefix-map=/build/r-base-3.3.3=.
> -fstack-protector-strong
> | -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g
> | It looks like it gets those settings from running R CMD config CFLAGS
> with
> | the already-installed version of R (3.3.3) which comes from a .deb
> package.
> |   https://github.com/rocker-org/rocker/blob/master/r-devel/
> Dockerfile#L76
>
> That's a Debian default a Policy-conforming offical package must use.
>
> For Docker you get these from the (prebuild) .deb package, you get it when
> you do r-devel by hand as they come back in via R CMD CONFIG:
>
>   https://github.com/rocker-org/rocker/blob/master/r-devel/
> Dockerfile#L76-L77
>
> You could undo those two lines / set CFLAGS and CXXFLAGS by hand.
>
> | I've also compiled R (again, in Docker) and tested with that, and gotten
> | the same results. It basically uses just `./configure
> | --without-recommended-packages`
> | and then `make`.
>
> Then these options should not come in.  But are you saying that the
> Heisenbug
> behaviour happens irrespective of the compilation flags?
>
> Dirk
>
> --
> http://dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org
>

	[[alternative HTML version deleted]]


From pdalgd at gmail.com  Wed Apr  5 23:54:02 2017
From: pdalgd at gmail.com (peter dalgaard)
Date: Wed, 5 Apr 2017 23:54:02 +0200
Subject: [Rd] Very hard to reproduce bug (?) in R-devel
In-Reply-To: <CAFOpNVE95J2Jb3bmTMD1t1vXWYEiGzM1iw-_CV134W=8B_z9LQ@mail.gmail.com>
References: <CAFOpNVFQyz_UtDkuZFxa9ttCcQc6wvN7bDb5AbfsfTT_HuHeog@mail.gmail.com>
 <CAFOpNVG6RtN47SVvg_L1HKYSOPccnXgWjMX3ouLGxjCKXovc=Q@mail.gmail.com>
 <CAFOpNVGO4DEVE+=0Ujysb+zPksyJGA8t1mkB9929wSndJTS0gA@mail.gmail.com>
 <22756.41965.160956.187187@stat.math.ethz.ch>
 <CAFOpNVE95J2Jb3bmTMD1t1vXWYEiGzM1iw-_CV134W=8B_z9LQ@mail.gmail.com>
Message-ID: <B2D3B8AB-6274-49DA-ABAD-7A88DD7A0638@gmail.com>


> On 05 Apr 2017, at 20:40 , Winston Chang <winstonchang1 at gmail.com> wrote:
> 
> I think there's a good chance that this is due to a bug in R. I have
> been trying to track down the cause of the problem but haven't been
> able find it.
> 
> -Winston

Apologies in advance if this is just stating the obvious, but let me try and put some general ideas  on the table.

- is anything non-deterministic involved? (Doesn't sound so, but...)
- could it be something with the bytecompiler?
- can you get something (_anything_) to trigger the bug (in any variant) when running R under gdb? I'm thinking gctorture() etc.
- it is odd that you cannot immediately get the same behaviour with R -d gdb or valgrind. Are you sure you are actually running the same script in the same way?
- if you can get a hold of something inside gdb, then there should be some potential for backtracking using hardware watchpoints and such. As in: This memory location doesn't contain the value I expected; what changed it?

-pd


-- 
Peter Dalgaard, Professor,
Center for Statistics, Copenhagen Business School
Solbjerg Plads 3, 2000 Frederiksberg, Denmark
Phone: (+45)38153501
Office: A 4.23
Email: pd.mes at cbs.dk  Priv: PDalgd at gmail.com


From ligges at statistik.tu-dortmund.de  Thu Apr  6 00:36:35 2017
From: ligges at statistik.tu-dortmund.de (Uwe Ligges)
Date: Thu, 6 Apr 2017 00:36:35 +0200
Subject: [Rd] Very hard to reproduce bug (?) in R-devel
In-Reply-To: <B2D3B8AB-6274-49DA-ABAD-7A88DD7A0638@gmail.com>
References: <CAFOpNVFQyz_UtDkuZFxa9ttCcQc6wvN7bDb5AbfsfTT_HuHeog@mail.gmail.com>
 <CAFOpNVG6RtN47SVvg_L1HKYSOPccnXgWjMX3ouLGxjCKXovc=Q@mail.gmail.com>
 <CAFOpNVGO4DEVE+=0Ujysb+zPksyJGA8t1mkB9929wSndJTS0gA@mail.gmail.com>
 <22756.41965.160956.187187@stat.math.ethz.ch>
 <CAFOpNVE95J2Jb3bmTMD1t1vXWYEiGzM1iw-_CV134W=8B_z9LQ@mail.gmail.com>
 <B2D3B8AB-6274-49DA-ABAD-7A88DD7A0638@gmail.com>
Message-ID: <8929327b-9a56-61f3-7267-d15da9fcf462@statistik.tu-dortmund.de>



On 05.04.2017 23:54, peter dalgaard wrote:
>
>> On 05 Apr 2017, at 20:40 , Winston Chang <winstonchang1 at gmail.com> wrote:
>>
>> I think there's a good chance that this is due to a bug in R. I have
>> been trying to track down the cause of the problem but haven't been
>> able find it.
>>
>> -Winston
>
> Apologies in advance if this is just stating the obvious, but let me try and put some general ideas  on the table.
>
> - is anything non-deterministic involved? (Doesn't sound so, but...)
> - could it be something with the bytecompiler?

Also my suspicion, can you try without having JIT enabled?

Best,
Uwe Ligges



> - can you get something (_anything_) to trigger the bug (in any variant) when running R under gdb? I'm thinking gctorture() etc.
> - it is odd that you cannot immediately get the same behaviour with R -d gdb or valgrind. Are you sure you are actually running the same script in the same way?
> - if you can get a hold of something inside gdb, then there should be some potential for backtracking using hardware watchpoints and such. As in: This memory location doesn't contain the value I expected; what changed it?
>
> -pd
>
>


From winstonchang1 at gmail.com  Thu Apr  6 02:34:37 2017
From: winstonchang1 at gmail.com (Winston Chang)
Date: Wed, 5 Apr 2017 19:34:37 -0500
Subject: [Rd] Very hard to reproduce bug (?) in R-devel
In-Reply-To: <B2D3B8AB-6274-49DA-ABAD-7A88DD7A0638@gmail.com>
References: <CAFOpNVFQyz_UtDkuZFxa9ttCcQc6wvN7bDb5AbfsfTT_HuHeog@mail.gmail.com>
 <CAFOpNVG6RtN47SVvg_L1HKYSOPccnXgWjMX3ouLGxjCKXovc=Q@mail.gmail.com>
 <CAFOpNVGO4DEVE+=0Ujysb+zPksyJGA8t1mkB9929wSndJTS0gA@mail.gmail.com>
 <22756.41965.160956.187187@stat.math.ethz.ch>
 <CAFOpNVE95J2Jb3bmTMD1t1vXWYEiGzM1iw-_CV134W=8B_z9LQ@mail.gmail.com>
 <B2D3B8AB-6274-49DA-ABAD-7A88DD7A0638@gmail.com>
Message-ID: <CAFOpNVHAuN3eA_h1D-H8X=3OxLdc2v4r98+SJ7sWijr-Dh1Okg@mail.gmail.com>

>
> Apologies in advance if this is just stating the obvious, but let me try
> and put some general ideas  on the table.


These are great ideas, thanks.



> - is anything non-deterministic involved? (Doesn't sound so, but...)
>

There was an environment where items were added, and the names of the items
had timestamps. However, I just modified that code to use deterministic
names and the error still happened.


- could it be something with the bytecompiler?
>

I've tried two things. The first was to install the pool package with
--no-byte-compile. In this case the error still happens.

The second was to compile R with `./configure
--enable-byte-compiled-packages=no`.
When I do this, the error does NOT happen. I've tried varying the pool code
in a few different ways to try to provoke the error, but I have not been
able to get it to happen. So it is possible that the compiled base R
packages play some part here.



> - can you get something (_anything_) to trigger the bug (in any variant)
> when running R under gdb? I'm thinking gctorture() etc.
>

Some variations of the code will error without gdb, but will not error with
gdb. I twiddled with the code a bit and now the current version of the code
(f97cfdf) will error under gdb.

I've also run it with gctorture(T) and have not seen this error with that
enabled, but I haven't tested it extensively in this mode. (In a previous
email I mentioned that with gctorture on, I got three different errors in
the tests. I later found that these errors were due to tests having
incorrect assumptions. For example, one test called gc() and expected a
warning, but it incorrectly assumed that a GC event would not have occurred
slightly earlier.)



> - it is odd that you cannot immediately get the same behaviour with R -d
> gdb or valgrind. Are you sure you are actually running the same script in
> the same way?
>

Some versions of the code, but not all, will give the same error under gdb
and valgrind. See above.



> - if you can get a hold of something inside gdb, then there should be some
> potential for backtracking using hardware watchpoints and such. As in: This
> memory location doesn't contain the value I expected; what changed it?
>

I probably don't know enough about R internals or gdb to be useful here.
But if someone wants to try it out, reproducing it as simple as copying and
pasting the first two blocks of code from the README here (assuming you
have Docker installed):
  https://gist.github.com/wch/2596a1c9f1bcdee91bb210c782141c88
It will build a Docker image with the appropriate software installed, and
then run the tests. The README also shows how to run it with gdb.

-Winston

	[[alternative HTML version deleted]]


From winstonchang1 at gmail.com  Thu Apr  6 02:40:25 2017
From: winstonchang1 at gmail.com (Winston Chang)
Date: Wed, 5 Apr 2017 19:40:25 -0500
Subject: [Rd] Very hard to reproduce bug (?) in R-devel
In-Reply-To: <8929327b-9a56-61f3-7267-d15da9fcf462@statistik.tu-dortmund.de>
References: <CAFOpNVFQyz_UtDkuZFxa9ttCcQc6wvN7bDb5AbfsfTT_HuHeog@mail.gmail.com>
 <CAFOpNVG6RtN47SVvg_L1HKYSOPccnXgWjMX3ouLGxjCKXovc=Q@mail.gmail.com>
 <CAFOpNVGO4DEVE+=0Ujysb+zPksyJGA8t1mkB9929wSndJTS0gA@mail.gmail.com>
 <22756.41965.160956.187187@stat.math.ethz.ch>
 <CAFOpNVE95J2Jb3bmTMD1t1vXWYEiGzM1iw-_CV134W=8B_z9LQ@mail.gmail.com>
 <B2D3B8AB-6274-49DA-ABAD-7A88DD7A0638@gmail.com>
 <8929327b-9a56-61f3-7267-d15da9fcf462@statistik.tu-dortmund.de>
Message-ID: <CAFOpNVG-bORUbHTFNqREHyYiCWLDREWR3v_fnmb8cUuw3oBPUQ@mail.gmail.com>

>
> Also my suspicion, can you try without having JIT enabled?
>

The results for different JIT levels. I ran compiler::enableJIT() before
sourcing the test file:
3: error
2: error
1: OK
0: OK

-Winston

	[[alternative HTML version deleted]]


From therneau at mayo.edu  Thu Apr  6 14:43:24 2017
From: therneau at mayo.edu (Therneau, Terry M., Ph.D.)
Date: Thu, 06 Apr 2017 07:43:24 -0500
Subject: [Rd] failure of make check-all
Message-ID: <47cabe$662clt@ironport10.mayo.edu>

This run was done this AM on my linux box, and older 32 bit Dell optiplex (core 2 duo).  
The failure message is at the very end. (It's due to be replaced in a couple of weeks.)  
The sequence of steps was

svn up
tools/rsync-recommended
./configure
make
make check-all |& tee zzz


Terry T.


Result of ./config
R is now configured for i686-pc-linux-gnu

   Source directory:          .
   Installation directory:    /usr/local

   C compiler:                gcc  -g -O2
   Fortran 77 compiler:       f95  -g -O2

   Default C++ compiler:      g++
   C++98 compiler:            g++
   C++11 compiler:            g++ -std=gnu++11
   C++14 compiler:            g++ -std=gnu++14
   C++17 compiler:
   Fortran 90/95 compiler:    gfortran -g -O2
   Obj-C compiler:

   Interfaces supported:      X11, tcltk
   External libraries:        readline, curl
   Additional capabilities:   PNG, JPEG, NLS, cairo, ICU
   Options enabled:           shared BLAS, R profiling

   Capabilities skipped:      TIFF
   Options not enabled:       memory profiling

   Recommended packages:      yes

----
sessionInfo() after invoking R --vanilla

R Under development (unstable) (2017-04-06 r72489)
Platform: i686-pc-linux-gnu (32-bit)
Running under: Ubuntu 16.04.2 LTS

Matrix products: default
BLAS: /usr/local/src/R-devel/lib/libRblas.so
LAPACK: /usr/local/src/R-devel/lib/libRlapack.so

locale:
  [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C
  [3] LC_TIME=en_US.UTF-8        LC_COLLATE=C
  [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8
  [7] LC_PAPER=en_US.UTF-8       LC_NAME=C
  [9] LC_ADDRESS=C               LC_TELEPHONE=C
[11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C

attached base packages:
[1] stats     graphics  grDevices utils     datasets  methods base

loaded via a namespace (and not attached):
[1] compiler_3.5.0

----------------------
The results of "make" showed nothing remarkable.

Here is make test-all

make[1]: Entering directory '/usr/local/src/R-devel/tests'
make[2]: Entering directory '/usr/local/src/R-devel/tests'
make[3]: Entering directory '/usr/local/src/R-devel/tests/Examples'
Testing examples for package ?base?
   comparing ?base-Ex.Rout? to ?base-Ex.Rout.prev? ... NOTE
   1573,1607c1573,1608
   <  [35] "MANDATORY_PATH" "MFLAGS"
   <  [37] "PAGER" "PATH"
   <  [39] "PWD" "QT4_IM_MODULE"
   <  [41] "QT_ACCESSIBILITY" "QT_IM_MODULE"
   <  [43] "QT_LINUX_ACCESSIBILITY_ALWAYS_ON" "R_ARCH"
   <  [45] "R_BROWSER" "R_BZIPCMD"
   <  [47] "R_CMD" "R_DOC_DIR"
   <  [49] "R_ENVIRON" "R_ENVIRON_USER"
   <  [51] "R_GZIPCMD" "R_HOME"
   <  [53] "R_INCLUDE_DIR" "R_LIBS"
   <  [55] "R_LIBS_SITE" "R_LIBS_USER"
   <  [57] "R_OSTYPE" "R_PAPERSIZE"
   <  [59] "R_PAPERSIZE_USER" "R_PDFVIEWER"
   <  [61] "R_PLATFORM" "R_PRINTCMD"
   <  [63] "R_PROFILE" "R_PROFILE_USER"
   <  [65] "R_RD4PDF" "R_SESSION_TMPDIR"
   <  [67] "R_SHARE_DIR" "R_SYSTEM_ABI"
   <  [69] "R_TEXI2DVICMD" "R_UNZIPCMD"
   <  [71] "R_VERSION" "R_ZIPCMD"
   <  [73] "SED" "SESSION"
   <  [77] "SHELL" "SHLVL"
   <  [79] "SSH_AGENT_PID" "SSH_AUTH_SOCK"
   <  [81] "TAR" "TERM"
   <  [83] "TEXINPUTS" "UPSTART_EVENTS"
   <  [85] "UPSTART_INSTANCE" "UPSTART_JOB"
   <  [87] "UPSTART_SESSION" "USER"
   <  [89] "WINDOWID" "XAUTHORITY"
   <  [91] "XDG_CONFIG_DIRS" "XDG_CURRENT_DESKTOP"
   <  [93] "XDG_DATA_DIRS" "XDG_GREETER_DATA_DIR"
   <  [95] "XDG_MENU_PREFIX" "XDG_RUNTIME_DIR"
   <  [97] "XDG_SEAT" "XDG_SEAT_PATH"
   <  [99] "XDG_SESSION_DESKTOP" "XDG_SESSION_ID"
   < [101] "XDG_SESSION_PATH" "XDG_SESSION_TYPE"
   < [103] "XDG_VTNR" "XMODIFIERS"
   ---
   >  [35] "MAKE_TERMERR" "MAKE_TERMOUT"
   >  [37] "MANDATORY_PATH" "MFLAGS"
   >  [39] "PAGER" "PATH"
   >  [41] "PWD" "QT4_IM_MODULE"
   >  [43] "QT_ACCESSIBILITY" "QT_IM_MODULE"
   >  [45] "QT_LINUX_ACCESSIBILITY_ALWAYS_ON" "R_ARCH"
   >  [47] "R_BROWSER" "R_BZIPCMD"
   >  [49] "R_CMD" "R_DOC_DIR"
   >  [51] "R_ENVIRON" "R_ENVIRON_USER"
   >  [53] "R_GZIPCMD" "R_HOME"
   >  [55] "R_INCLUDE_DIR" "R_LIBS"
   >  [57] "R_LIBS_SITE" "R_LIBS_USER"
   >  [59] "R_OSTYPE" "R_PAPERSIZE"
   >  [61] "R_PAPERSIZE_USER" "R_PDFVIEWER"
   >  [63] "R_PLATFORM" "R_PRINTCMD"
   >  [65] "R_PROFILE" "R_PROFILE_USER"
   >  [67] "R_RD4PDF" "R_SESSION_TMPDIR"
   >  [69] "R_SHARE_DIR" "R_SYSTEM_ABI"
   >  [71] "R_TEXI2DVICMD" "R_UNZIPCMD"
   >  [73] "R_VERSION" "R_ZIPCMD"
   >  [75] "SED" "SESSION"
   >  [77] "SESSIONTYPE" "SESSION_MANAGER"
   >  [79] "SHELL" "SHLVL"
   >  [81] "SSH_AGENT_PID" "SSH_AUTH_SOCK"
   >  [83] "TAR" "TERM"
   >  [85] "TEXINPUTS" "UPSTART_EVENTS"
   >  [87] "UPSTART_INSTANCE" "UPSTART_JOB"
   >  [89] "UPSTART_SESSION" "USER"
   >  [91] "WINDOWID" "XAUTHORITY"
   >  [93] "XDG_CONFIG_DIRS" "XDG_CURRENT_DESKTOP"
   >  [95] "XDG_DATA_DIRS" "XDG_GREETER_DATA_DIR"
   >  [97] "XDG_MENU_PREFIX" "XDG_RUNTIME_DIR"
   >  [99] "XDG_SEAT" "XDG_SEAT_PATH"
   > [101] "XDG_SESSION_DESKTOP" "XDG_SESSION_ID"
   > [103] "XDG_SESSION_PATH" "XDG_SESSION_TYPE"
   > [105] "XDG_VTNR" "XMODIFIERS"
   7903a7905,7906
   > MAKE_TERMERR: /dev/pts/10
   > MAKE_TERMOUT: /dev/pts/10
   7936c7939
   < R_SESSION_TMPDIR: /tmp/RtmpSrm93R
   ---
   > R_SESSION_TMPDIR: /tmp/RtmpFkpTbp
   11007c11010
   < [37] "tests"          "tools"          "zzz"
   ---
   > [37] "tests"          "tools"
Testing examples for package ?tools?
   comparing ?tools-Ex.Rout? to ?tools-Ex.Rout.save? ... OK
Testing examples for package ?utils?
   comparing ?utils-Ex.Rout? to ?utils-Ex.Rout.prev? ... OK
Testing examples for package ?grDevices?
   comparing ?grDevices-Ex.Rout? to ?grDevices-Ex.Rout.save? ... OK
Testing examples for package ?graphics?
   comparing ?graphics-Ex.Rout? to ?graphics-Ex.Rout.save? ... OK
Testing examples for package ?stats?
   comparing ?stats-Ex.Rout? to ?stats-Ex.Rout.save? ... OK
Testing examples for package ?datasets?
   comparing ?datasets-Ex.Rout? to ?datasets-Ex.Rout.save? ... OK
  Testing examples for package ?methods?
   comparing ?methods-Ex.Rout? to ?methods-Ex.Rout.prev? ... OK
Testing examples for package ?grid?
   comparing ?grid-Ex.Rout? to ?grid-Ex.Rout.save? ... OK
Testing examples for package ?splines?
   comparing ?splines-Ex.Rout? to ?splines-Ex.Rout.save? ... OK
Testing examples for package ?stats4?
   comparing ?stats4-Ex.Rout? to ?stats4-Ex.Rout.save? ... OK
Testing examples for package ?tcltk?
   comparing ?tcltk-Ex.Rout? to ?tcltk-Ex.Rout.prev? ... OK
Testing examples for package ?compiler?
   comparing ?compiler-Ex.Rout? to ?compiler-Ex.Rout.prev? ... OK
Testing examples for package ?parallel?
   comparing ?parallel-Ex.Rout? to ?parallel-Ex.Rout.prev? ... OK
make[3]: Leaving directory '/usr/local/src/R-devel/tests/Examples'
make[2]: Leaving directory '/usr/local/src/R-devel/tests'
make[2]: Entering directory '/usr/local/src/R-devel/tests'
running strict specific tests
make[3]: Entering directory '/usr/local/src/R-devel/tests'
running code in 'eval-etc.R' ... OK
   comparing 'eval-etc.Rout' to './eval-etc.Rout.save' ... OK
running code in 'simple-true.R' ... OK
   comparing 'simple-true.Rout' to './simple-true.Rout.save' ... OK
running code in 'arith-true.R' ... OK
   comparing 'arith-true.Rout' to './arith-true.Rout.save' ... OK
running code in 'arith.R' ... OK
   comparing 'arith.Rout' to './arith.Rout.save' ... OK
running code in 'lm-tests.R' ... OK
   comparing 'lm-tests.Rout' to './lm-tests.Rout.save' ... OK
running code in 'ok-errors.R' ... OK
   comparing 'ok-errors.Rout' to './ok-errors.Rout.save' ... OK
running code in 'method-dispatch.R' ... OK
   comparing 'method-dispatch.Rout' to './method-dispatch.Rout.save' ... OK
running code in 'any-all.R' ... OK
    comparing 'any-all.Rout' to './any-all.Rout.save' ... OK
running code in 'd-p-q-r-tests.R' ... OK
   comparing 'd-p-q-r-tests.Rout' to './d-p-q-r-tests.Rout.save' ... OK
make[3]: Leaving directory '/usr/local/src/R-devel/tests'
running sloppy specific tests
make[3]: Entering directory '/usr/local/src/R-devel/tests'
running code in 'complex.R' ... OK
   comparing 'complex.Rout' to './complex.Rout.save' ... OK
running code in 'print-tests.R' ... OK
   comparing 'print-tests.Rout' to './print-tests.Rout.save' ... OK
running code in 'lapack.R' ... OK
   comparing 'lapack.Rout' to './lapack.Rout.save' ... OK
running code in 'datasets.R' ... OK
   comparing 'datasets.Rout' to './datasets.Rout.save' ... OK
running code in 'datetime.R' ... OK
   comparing 'datetime.Rout' to './datetime.Rout.save' ... OK
running code in 'iec60559.R' ... OK
   comparing 'iec60559.Rout' to './iec60559.Rout.save' ... OK
make[3]: Leaving directory '/usr/local/src/R-devel/tests'
make[2]: Leaving directory '/usr/local/src/R-devel/tests'
make[2]: Entering directory '/usr/local/src/R-devel/tests'
running regression tests ...
make[3]: Entering directory '/usr/local/src/R-devel/tests'
running code in 'array-subset.R' ... OK
running code in 'reg-tests-1a.R' ... OK
running code in 'reg-tests-1b.R' ... OK
running code in 'reg-tests-1c.R' ... OK
  running code in 'reg-tests-1d.R' ... OK
running code in 'reg-tests-2.R' ... OK
   comparing 'reg-tests-2.Rout' to './reg-tests-2.Rout.save' ... OK
running code in 'reg-examples1.R' ... OK
running code in 'reg-examples2.R' ... OK
running code in 'reg-packages.R' ... OK
running code in 'p-qbeta-strict-tst.R' ... OK
running code in 'r-strict-tst.R' ... OK
running code in 'reg-IO.R' ... OK
   comparing 'reg-IO.Rout' to './reg-IO.Rout.save' ... OK
running code in 'reg-IO2.R' ... OK
   comparing 'reg-IO2.Rout' to './reg-IO2.Rout.save' ... OK
running code in 'reg-plot.R' ... OK
   comparing 'reg-plot.pdf' to './reg-plot.pdf.save' ... OK
running code in 'reg-S4-examples.R' ... OK
running code in 'reg-BLAS.R' ... OK
make[3]: Leaving directory '/usr/local/src/R-devel/tests'
make[3]: Entering directory '/usr/local/src/R-devel/tests'
running code in 'reg-tests-3.R' ... OK
   comparing 'reg-tests-3.Rout' to './reg-tests-3.Rout.save' ... OK
running code in 'reg-examples3.R' ...Makefile.common:98: recipe for target 'reg-
examples3.Rout' failed
make[3]: *** [reg-examples3.Rout] Error 1
make[3]: Leaving directory '/usr/local/src/R-devel/tests'
Makefile.common:273: recipe for target 'test-Reg' failed
make[2]: *** [test-Reg] Error 2
make[2]: Leaving directory '/usr/local/src/R-devel/tests'
  Makefile.common:165: recipe for target 'test-all-basics' failed
make[1]: *** [test-all-basics] Error 1
make[1]: Leaving directory '/usr/local/src/R-devel/tests'
Makefile:239: recipe for target 'check-all' failed
make: *** [check-all] Error 2


From pdalgd at gmail.com  Thu Apr  6 14:52:23 2017
From: pdalgd at gmail.com (peter dalgaard)
Date: Thu, 6 Apr 2017 14:52:23 +0200
Subject: [Rd] failure of make check-all
In-Reply-To: <47cabe$662clt@ironport10.mayo.edu>
References: <47cabe$662clt@ironport10.mayo.edu>
Message-ID: <E86596A7-C098-411A-AB0B-2A37EF64D9BF@gmail.com>

You may want to retry that after a make distclean, in case anything changed in the toolchain.

-pd 

> On 6 Apr 2017, at 14:43 , Therneau, Terry M., Ph.D. <therneau at mayo.edu> wrote:
> 
> This run was done this AM on my linux box, and older 32 bit Dell optiplex (core 2 duo).  The failure message is at the very end. (It's due to be replaced in a couple of weeks.)  The sequence of steps was
> 
> svn up
> tools/rsync-recommended
> ./configure
> make
> make check-all |& tee zzz
> 
> 
> Terry T.
> 
> 
> Result of ./config
> R is now configured for i686-pc-linux-gnu
> 
>  Source directory:          .
>  Installation directory:    /usr/local
> 
>  C compiler:                gcc  -g -O2
>  Fortran 77 compiler:       f95  -g -O2
> 
>  Default C++ compiler:      g++
>  C++98 compiler:            g++
>  C++11 compiler:            g++ -std=gnu++11
>  C++14 compiler:            g++ -std=gnu++14
>  C++17 compiler:
>  Fortran 90/95 compiler:    gfortran -g -O2
>  Obj-C compiler:
> 
>  Interfaces supported:      X11, tcltk
>  External libraries:        readline, curl
>  Additional capabilities:   PNG, JPEG, NLS, cairo, ICU
>  Options enabled:           shared BLAS, R profiling
> 
>  Capabilities skipped:      TIFF
>  Options not enabled:       memory profiling
> 
>  Recommended packages:      yes
> 
> ----
> sessionInfo() after invoking R --vanilla
> 
> R Under development (unstable) (2017-04-06 r72489)
> Platform: i686-pc-linux-gnu (32-bit)
> Running under: Ubuntu 16.04.2 LTS
> 
> Matrix products: default
> BLAS: /usr/local/src/R-devel/lib/libRblas.so
> LAPACK: /usr/local/src/R-devel/lib/libRlapack.so
> 
> locale:
> [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C
> [3] LC_TIME=en_US.UTF-8        LC_COLLATE=C
> [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8
> [7] LC_PAPER=en_US.UTF-8       LC_NAME=C
> [9] LC_ADDRESS=C               LC_TELEPHONE=C
> [11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C
> 
> attached base packages:
> [1] stats     graphics  grDevices utils     datasets  methods base
> 
> loaded via a namespace (and not attached):
> [1] compiler_3.5.0
> 
> ----------------------
> The results of "make" showed nothing remarkable.
> 
> Here is make test-all
> 
> make[1]: Entering directory '/usr/local/src/R-devel/tests'
> make[2]: Entering directory '/usr/local/src/R-devel/tests'
> make[3]: Entering directory '/usr/local/src/R-devel/tests/Examples'
> Testing examples for package ?base?
>  comparing ?base-Ex.Rout? to ?base-Ex.Rout.prev? ... NOTE
>  1573,1607c1573,1608
>  <  [35] "MANDATORY_PATH" "MFLAGS"
>  <  [37] "PAGER" "PATH"
>  <  [39] "PWD" "QT4_IM_MODULE"
>  <  [41] "QT_ACCESSIBILITY" "QT_IM_MODULE"
>  <  [43] "QT_LINUX_ACCESSIBILITY_ALWAYS_ON" "R_ARCH"
>  <  [45] "R_BROWSER" "R_BZIPCMD"
>  <  [47] "R_CMD" "R_DOC_DIR"
>  <  [49] "R_ENVIRON" "R_ENVIRON_USER"
>  <  [51] "R_GZIPCMD" "R_HOME"
>  <  [53] "R_INCLUDE_DIR" "R_LIBS"
>  <  [55] "R_LIBS_SITE" "R_LIBS_USER"
>  <  [57] "R_OSTYPE" "R_PAPERSIZE"
>  <  [59] "R_PAPERSIZE_USER" "R_PDFVIEWER"
>  <  [61] "R_PLATFORM" "R_PRINTCMD"
>  <  [63] "R_PROFILE" "R_PROFILE_USER"
>  <  [65] "R_RD4PDF" "R_SESSION_TMPDIR"
>  <  [67] "R_SHARE_DIR" "R_SYSTEM_ABI"
>  <  [69] "R_TEXI2DVICMD" "R_UNZIPCMD"
>  <  [71] "R_VERSION" "R_ZIPCMD"
>  <  [73] "SED" "SESSION"
>  <  [77] "SHELL" "SHLVL"
>  <  [79] "SSH_AGENT_PID" "SSH_AUTH_SOCK"
>  <  [81] "TAR" "TERM"
>  <  [83] "TEXINPUTS" "UPSTART_EVENTS"
>  <  [85] "UPSTART_INSTANCE" "UPSTART_JOB"
>  <  [87] "UPSTART_SESSION" "USER"
>  <  [89] "WINDOWID" "XAUTHORITY"
>  <  [91] "XDG_CONFIG_DIRS" "XDG_CURRENT_DESKTOP"
>  <  [93] "XDG_DATA_DIRS" "XDG_GREETER_DATA_DIR"
>  <  [95] "XDG_MENU_PREFIX" "XDG_RUNTIME_DIR"
>  <  [97] "XDG_SEAT" "XDG_SEAT_PATH"
>  <  [99] "XDG_SESSION_DESKTOP" "XDG_SESSION_ID"
>  < [101] "XDG_SESSION_PATH" "XDG_SESSION_TYPE"
>  < [103] "XDG_VTNR" "XMODIFIERS"
>  ---
>  >  [35] "MAKE_TERMERR" "MAKE_TERMOUT"
>  >  [37] "MANDATORY_PATH" "MFLAGS"
>  >  [39] "PAGER" "PATH"
>  >  [41] "PWD" "QT4_IM_MODULE"
>  >  [43] "QT_ACCESSIBILITY" "QT_IM_MODULE"
>  >  [45] "QT_LINUX_ACCESSIBILITY_ALWAYS_ON" "R_ARCH"
>  >  [47] "R_BROWSER" "R_BZIPCMD"
>  >  [49] "R_CMD" "R_DOC_DIR"
>  >  [51] "R_ENVIRON" "R_ENVIRON_USER"
>  >  [53] "R_GZIPCMD" "R_HOME"
>  >  [55] "R_INCLUDE_DIR" "R_LIBS"
>  >  [57] "R_LIBS_SITE" "R_LIBS_USER"
>  >  [59] "R_OSTYPE" "R_PAPERSIZE"
>  >  [61] "R_PAPERSIZE_USER" "R_PDFVIEWER"
>  >  [63] "R_PLATFORM" "R_PRINTCMD"
>  >  [65] "R_PROFILE" "R_PROFILE_USER"
>  >  [67] "R_RD4PDF" "R_SESSION_TMPDIR"
>  >  [69] "R_SHARE_DIR" "R_SYSTEM_ABI"
>  >  [71] "R_TEXI2DVICMD" "R_UNZIPCMD"
>  >  [73] "R_VERSION" "R_ZIPCMD"
>  >  [75] "SED" "SESSION"
>  >  [77] "SESSIONTYPE" "SESSION_MANAGER"
>  >  [79] "SHELL" "SHLVL"
>  >  [81] "SSH_AGENT_PID" "SSH_AUTH_SOCK"
>  >  [83] "TAR" "TERM"
>  >  [85] "TEXINPUTS" "UPSTART_EVENTS"
>  >  [87] "UPSTART_INSTANCE" "UPSTART_JOB"
>  >  [89] "UPSTART_SESSION" "USER"
>  >  [91] "WINDOWID" "XAUTHORITY"
>  >  [93] "XDG_CONFIG_DIRS" "XDG_CURRENT_DESKTOP"
>  >  [95] "XDG_DATA_DIRS" "XDG_GREETER_DATA_DIR"
>  >  [97] "XDG_MENU_PREFIX" "XDG_RUNTIME_DIR"
>  >  [99] "XDG_SEAT" "XDG_SEAT_PATH"
>  > [101] "XDG_SESSION_DESKTOP" "XDG_SESSION_ID"
>  > [103] "XDG_SESSION_PATH" "XDG_SESSION_TYPE"
>  > [105] "XDG_VTNR" "XMODIFIERS"
>  7903a7905,7906
>  > MAKE_TERMERR: /dev/pts/10
>  > MAKE_TERMOUT: /dev/pts/10
>  7936c7939
>  < R_SESSION_TMPDIR: /tmp/RtmpSrm93R
>  ---
>  > R_SESSION_TMPDIR: /tmp/RtmpFkpTbp
>  11007c11010
>  < [37] "tests"          "tools"          "zzz"
>  ---
>  > [37] "tests"          "tools"
> Testing examples for package ?tools?
>  comparing ?tools-Ex.Rout? to ?tools-Ex.Rout.save? ... OK
> Testing examples for package ?utils?
>  comparing ?utils-Ex.Rout? to ?utils-Ex.Rout.prev? ... OK
> Testing examples for package ?grDevices?
>  comparing ?grDevices-Ex.Rout? to ?grDevices-Ex.Rout.save? ... OK
> Testing examples for package ?graphics?
>  comparing ?graphics-Ex.Rout? to ?graphics-Ex.Rout.save? ... OK
> Testing examples for package ?stats?
>  comparing ?stats-Ex.Rout? to ?stats-Ex.Rout.save? ... OK
> Testing examples for package ?datasets?
>  comparing ?datasets-Ex.Rout? to ?datasets-Ex.Rout.save? ... OK
> Testing examples for package ?methods?
>  comparing ?methods-Ex.Rout? to ?methods-Ex.Rout.prev? ... OK
> Testing examples for package ?grid?
>  comparing ?grid-Ex.Rout? to ?grid-Ex.Rout.save? ... OK
> Testing examples for package ?splines?
>  comparing ?splines-Ex.Rout? to ?splines-Ex.Rout.save? ... OK
> Testing examples for package ?stats4?
>  comparing ?stats4-Ex.Rout? to ?stats4-Ex.Rout.save? ... OK
> Testing examples for package ?tcltk?
>  comparing ?tcltk-Ex.Rout? to ?tcltk-Ex.Rout.prev? ... OK
> Testing examples for package ?compiler?
>  comparing ?compiler-Ex.Rout? to ?compiler-Ex.Rout.prev? ... OK
> Testing examples for package ?parallel?
>  comparing ?parallel-Ex.Rout? to ?parallel-Ex.Rout.prev? ... OK
> make[3]: Leaving directory '/usr/local/src/R-devel/tests/Examples'
> make[2]: Leaving directory '/usr/local/src/R-devel/tests'
> make[2]: Entering directory '/usr/local/src/R-devel/tests'
> running strict specific tests
> make[3]: Entering directory '/usr/local/src/R-devel/tests'
> running code in 'eval-etc.R' ... OK
>  comparing 'eval-etc.Rout' to './eval-etc.Rout.save' ... OK
> running code in 'simple-true.R' ... OK
>  comparing 'simple-true.Rout' to './simple-true.Rout.save' ... OK
> running code in 'arith-true.R' ... OK
>  comparing 'arith-true.Rout' to './arith-true.Rout.save' ... OK
> running code in 'arith.R' ... OK
>  comparing 'arith.Rout' to './arith.Rout.save' ... OK
> running code in 'lm-tests.R' ... OK
>  comparing 'lm-tests.Rout' to './lm-tests.Rout.save' ... OK
> running code in 'ok-errors.R' ... OK
>  comparing 'ok-errors.Rout' to './ok-errors.Rout.save' ... OK
> running code in 'method-dispatch.R' ... OK
>  comparing 'method-dispatch.Rout' to './method-dispatch.Rout.save' ... OK
> running code in 'any-all.R' ... OK
>   comparing 'any-all.Rout' to './any-all.Rout.save' ... OK
> running code in 'd-p-q-r-tests.R' ... OK
>  comparing 'd-p-q-r-tests.Rout' to './d-p-q-r-tests.Rout.save' ... OK
> make[3]: Leaving directory '/usr/local/src/R-devel/tests'
> running sloppy specific tests
> make[3]: Entering directory '/usr/local/src/R-devel/tests'
> running code in 'complex.R' ... OK
>  comparing 'complex.Rout' to './complex.Rout.save' ... OK
> running code in 'print-tests.R' ... OK
>  comparing 'print-tests.Rout' to './print-tests.Rout.save' ... OK
> running code in 'lapack.R' ... OK
>  comparing 'lapack.Rout' to './lapack.Rout.save' ... OK
> running code in 'datasets.R' ... OK
>  comparing 'datasets.Rout' to './datasets.Rout.save' ... OK
> running code in 'datetime.R' ... OK
>  comparing 'datetime.Rout' to './datetime.Rout.save' ... OK
> running code in 'iec60559.R' ... OK
>  comparing 'iec60559.Rout' to './iec60559.Rout.save' ... OK
> make[3]: Leaving directory '/usr/local/src/R-devel/tests'
> make[2]: Leaving directory '/usr/local/src/R-devel/tests'
> make[2]: Entering directory '/usr/local/src/R-devel/tests'
> running regression tests ...
> make[3]: Entering directory '/usr/local/src/R-devel/tests'
> running code in 'array-subset.R' ... OK
> running code in 'reg-tests-1a.R' ... OK
> running code in 'reg-tests-1b.R' ... OK
> running code in 'reg-tests-1c.R' ... OK
> running code in 'reg-tests-1d.R' ... OK
> running code in 'reg-tests-2.R' ... OK
>  comparing 'reg-tests-2.Rout' to './reg-tests-2.Rout.save' ... OK
> running code in 'reg-examples1.R' ... OK
> running code in 'reg-examples2.R' ... OK
> running code in 'reg-packages.R' ... OK
> running code in 'p-qbeta-strict-tst.R' ... OK
> running code in 'r-strict-tst.R' ... OK
> running code in 'reg-IO.R' ... OK
>  comparing 'reg-IO.Rout' to './reg-IO.Rout.save' ... OK
> running code in 'reg-IO2.R' ... OK
>  comparing 'reg-IO2.Rout' to './reg-IO2.Rout.save' ... OK
> running code in 'reg-plot.R' ... OK
>  comparing 'reg-plot.pdf' to './reg-plot.pdf.save' ... OK
> running code in 'reg-S4-examples.R' ... OK
> running code in 'reg-BLAS.R' ... OK
> make[3]: Leaving directory '/usr/local/src/R-devel/tests'
> make[3]: Entering directory '/usr/local/src/R-devel/tests'
> running code in 'reg-tests-3.R' ... OK
>  comparing 'reg-tests-3.Rout' to './reg-tests-3.Rout.save' ... OK
> running code in 'reg-examples3.R' ...Makefile.common:98: recipe for target 'reg-
> examples3.Rout' failed
> make[3]: *** [reg-examples3.Rout] Error 1
> make[3]: Leaving directory '/usr/local/src/R-devel/tests'
> Makefile.common:273: recipe for target 'test-Reg' failed
> make[2]: *** [test-Reg] Error 2
> make[2]: Leaving directory '/usr/local/src/R-devel/tests'
> Makefile.common:165: recipe for target 'test-all-basics' failed
> make[1]: *** [test-all-basics] Error 1
> make[1]: Leaving directory '/usr/local/src/R-devel/tests'
> Makefile:239: recipe for target 'check-all' failed
> make: *** [check-all] Error 2
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel

-- 
Peter Dalgaard, Professor,
Center for Statistics, Copenhagen Business School
Solbjerg Plads 3, 2000 Frederiksberg, Denmark
Phone: (+45)38153501
Office: A 4.23
Email: pd.mes at cbs.dk  Priv: PDalgd at gmail.com


From therneau at mayo.edu  Thu Apr  6 15:51:31 2017
From: therneau at mayo.edu (Therneau, Terry M., Ph.D.)
Date: Thu, 06 Apr 2017 08:51:31 -0500
Subject: [Rd] failure of make check-all
In-Reply-To: <E86596A7-C098-411A-AB0B-2A37EF64D9BF@gmail.com>
References: <47cabe$662clt@ironport10.mayo.edu>
 <E86596A7-C098-411A-AB0B-2A37EF64D9BF@gmail.com>
Message-ID: <47cabe$6636cc@ironport10.mayo.edu>

Peter,
   Retry how much of it?  That is, where does it go in the sequence from svn up to make 
check?  I'll update my notes so as to do it correctly.

In any case, I put it first and reran the whole command chain.  I had recently upgraded 
linux from 14.xx LTS to 16.04 LTS so it makes sense to start over.  This removed the large 
diff in base-Ex.Rout from the first part of the log, but the terminal error still remains:

make[3]: Leaving directory '/usr/local/src/R-devel/tests'
make[3]: Entering directory '/usr/local/src/R-devel/tests'
running code in 'reg-tests-3.R' ... OK
   comparing 'reg-tests-3.Rout' to './reg-tests-3.Rout.save' ... OK
running code in 'reg-examples3.R' ...Makefile.common:98: recipe for target 
'reg-examples3.Rout' failed
make[3]: *** [reg-examples3.Rout] Error 1
make[3]: Leaving directory '/usr/local/src/R-devel/tests'
Makefile.common:273: recipe for target 'test-Reg' failed

Here are lines 97-100 of tests/Makefile.common:

.R.Rout:
     @rm -f $@ $@.fail $@.log
     @$(ECHO) $(ECHO_N) "running code in '$<' ...$(ECHO_C)" > $@.log
     @$(R) < $< > $@.fail 2>&1 || (cat $@.log && rm $@.log && exit 1)


There is one complier warning message, it prints in pink so as not to miss it!

main.c: In function ?dummy_ii?:
main.c:1669:12: warning: function returns address of local variable [-Wreturn-local-addr]
      return (uintptr_t) &ii;

-------------

So as to be more complete I did "cd tests; R" and source("reg-examples3.R"), and lo and 
behold the error is

> source('reg-examples3.R')
Loading required package: MASS
Loading required package: survival
Error in fitter(X, Y, strats, offset, init, control, weights = weights,  :
   object 'Ccoxmart2' not found

Looking at src/coxmart2.c and src/init.c I don't see anything different than the other 
dozen .C routines in my survival package.  The file tests/book7.R in the package exercises 
this routine, and CMD check passes.

Hints?

Terry T.






On 04/06/2017 07:52 AM, peter dalgaard wrote:
> You may want to retry that after a make distclean, in case anything changed in the toolchain.
>
> -pd
>


From pdalgd at gmail.com  Thu Apr  6 16:57:25 2017
From: pdalgd at gmail.com (peter dalgaard)
Date: Thu, 6 Apr 2017 16:57:25 +0200
Subject: [Rd] failure of make check-all
In-Reply-To: <47cabe$6636cb@ironport10.mayo.edu>
References: <47cabe$662clt@ironport10.mayo.edu>
 <E86596A7-C098-411A-AB0B-2A37EF64D9BF@gmail.com>
 <47cabe$6636cb@ironport10.mayo.edu>
Message-ID: <6F88072C-1F93-4BD0-8982-FF99B542451F@gmail.com>


> On 6 Apr 2017, at 15:51 , Therneau, Terry M., Ph.D. <therneau at mayo.edu> wrote:
> 
> Peter,
>  Retry how much of it?  That is, where does it go in the sequence from svn up to make check?  I'll update my notes so as to do it correctly.


From the configure step, I'd expect.

Actually, now that I look at your output again, you seem to be compiling in the source directory, which is generally a bad idea, because you end up with derived files intermixed with source code all over the place. If you compile in a parallel directory, then you can in the worst case just wipe it and start over. Also, compiling in the source dir has confused "make" on previous occasions (ideally, it should work, but most of us don't check and so are poorly motivated to track down issues). So

svn up
# mkdir ../BUILD if not there already
cd ../BUILD
../R/configure
make
...


Also, for checking the tests, I think the canonical way is 

path/to/R --vanilla < reg-examples3.R

which may be subtly different from using source().

I'd surmise that your issue is something with the C-level routine registration, but I haven't followed the technicalities of that in full detail. Did your build rebuild the survival package?

-pd

> 
> In any case, I put it first and reran the whole command chain.  I had recently upgraded linux from 14.xx LTS to 16.04 LTS so it makes sense to start over.  This removed the large diff in base-Ex.Rout from the first part of the log, but the terminal error still remains:
> 
> make[3]: Leaving directory '/usr/local/src/R-devel/tests'
> make[3]: Entering directory '/usr/local/src/R-devel/tests'
> running code in 'reg-tests-3.R' ... OK
>  comparing 'reg-tests-3.Rout' to './reg-tests-3.Rout.save' ... OK
> running code in 'reg-examples3.R' ...Makefile.common:98: recipe for target 'reg-examples3.Rout' failed
> make[3]: *** [reg-examples3.Rout] Error 1
> make[3]: Leaving directory '/usr/local/src/R-devel/tests'
> Makefile.common:273: recipe for target 'test-Reg' failed
> 
> Here are lines 97-100 of tests/Makefile.common:
> 
> .R.Rout:
>    @rm -f $@ $@.fail $@.log
>    @$(ECHO) $(ECHO_N) "running code in '$<' ...$(ECHO_C)" > $@.log
>    @$(R) < $< > $@.fail 2>&1 || (cat $@.log && rm $@.log && exit 1)
> 
> 
> There is one complier warning message, it prints in pink so as not to miss it!
> 
> main.c: In function ?dummy_ii?:
> main.c:1669:12: warning: function returns address of local variable [-Wreturn-local-addr]
>     return (uintptr_t) &ii;
> 
> -------------
> 
> So as to be more complete I did "cd tests; R" and source("reg-examples3.R"), and lo and behold the error is
> 
>> source('reg-examples3.R')
> Loading required package: MASS
> Loading required package: survival
> Error in fitter(X, Y, strats, offset, init, control, weights = weights,  :
>  object 'Ccoxmart2' not found
> 
> Looking at src/coxmart2.c and src/init.c I don't see anything different than the other dozen .C routines in my survival package.  The file tests/book7.R in the package exercises this routine, and CMD check passes.
> 
> Hints?
> 
> Terry T.
> 
> 
> 
> 
> 
> 
> On 04/06/2017 07:52 AM, peter dalgaard wrote:
>> You may want to retry that after a make distclean, in case anything changed in the toolchain.
>> 
>> -pd
>> 
> 

-- 
Peter Dalgaard, Professor,
Center for Statistics, Copenhagen Business School
Solbjerg Plads 3, 2000 Frederiksberg, Denmark
Phone: (+45)38153501
Office: A 4.23
Email: pd.mes at cbs.dk  Priv: PDalgd at gmail.com


From xhdong at umd.edu  Thu Apr  6 21:37:16 2017
From: xhdong at umd.edu (Xianghui Dong)
Date: Thu, 6 Apr 2017 15:37:16 -0400
Subject: [Rd] [bug] in cut.POSIXt(..., breaks = <numeric>)
Message-ID: <CABGHsj2ZvVop7w0qLV4t3SHqpaGbgffG0oRaY7TVAfaQ7zXQaw@mail.gmail.com>

The exact error was reported before in *Bug 14288*
<https://bugs.r-project.org/bugzilla3/show_bug.cgi?id=14288> *- **bug in
cut.POSIXt(..., breaks = <numeric>) and cut.Date. *But the fix in that bug
report only covered the simplest case.

This is the error I met
-----------------------------

x <- structure(c(1057067700, 1057215720, 1060597800, 1061470800,
1061911680,
1062048000, 1062137880, 1064479440, 1064926380, 1064995140, 1066822800,
          1068033720, 1070869740, 1070939820, 1071030540, 1074244560,
1077545880,
          1078449720, 1084955460, 1129020000, 1130324280, 1130404800,
1131519420,
          1132640100, 1133772000, 1137567960, 1138952640, 1141810380,
1147444200,
          1161643440, 1164086160), class = c("POSIXct", "POSIXt"), tzone =
"UTC")

> cut(x, 20)
Error in `levels<-.factor`(`*tmp*`, value = as.character(if
(is.numeric(breaks)) x[!duplicated(res)] else breaks[-length(breaks)])) :
  number of levels differs
-----------------------------

The cause of the bug is that the input have spread out date-time values,
only 10 breaks in the total 20 breaks have value.
-------------------

cut_n <- cut(as.numeric(x), 20)

> unique(cut_n)
 [1] (1.057e+09,1.062e+09] (1.062e+09,1.068e+09] (1.068e+09,1.073e+09]
(1.073e+09,1.078e+09]
 [5] (1.084e+09,1.089e+09] (1.127e+09,1.132e+09] (1.132e+09,1.137e+09]
(1.137e+09,1.143e+09]
 [9] (1.143e+09,1.148e+09] (1.159e+09,1.164e+09]
20 Levels: (1.057e+09,1.062e+09] (1.062e+09,1.068e+09]
(1.068e+09,1.073e+09] ... (1.159e+09,1.164e+09]
------------------------
To get proper 20 labels of each break, the break need to be formatted from
number to date-time string. Current code didn't really convert the breaks
However the code just used the original date-time values from input data.
This will not work if the interval value doesn't happen to equal to
original input. For a even simpler example from the original bug report:
-----------------------
x <- seq(as.POSIXct("2000-01-01"), by = "days", length = 20)
> cut(x, breaks = 30)
Error in `levels<-.factor`(`*tmp*`, value = as.character(if
(is.numeric(breaks)) x[!duplicated(res)] else breaks[-length(breaks)])) :
  number of levels differs
---------------------

I think to fix the bug will need either
- get the actual numeric value of the breaks from "cut", modify "cut" if
needed. Then convert the numeric value back to date-time
- or use regex to extract the break value then convert to date-time

Best,
Xianghui Dong

	[[alternative HTML version deleted]]


From winstonchang1 at gmail.com  Fri Apr  7 06:49:15 2017
From: winstonchang1 at gmail.com (Winston Chang)
Date: Thu, 6 Apr 2017 23:49:15 -0500
Subject: [Rd] Very hard to reproduce bug (?) in R-devel
In-Reply-To: <CAFOpNVFQyz_UtDkuZFxa9ttCcQc6wvN7bDb5AbfsfTT_HuHeog@mail.gmail.com>
References: <CAFOpNVFQyz_UtDkuZFxa9ttCcQc6wvN7bDb5AbfsfTT_HuHeog@mail.gmail.com>
Message-ID: <CAFOpNVH9vLYaL8k8KZJT-K7dBLVZajTohE6=VdLa3NbWBiO_ew@mail.gmail.com>

With Luke Tierney's assistance, we found that the root cause of the problem
was not R, but a race condition in the pool package that occurred when a
finalizer ran.

Below is a very contrived and simplified example to illustrate:

gc()
n <- 1

increment_n <- function() {
  cat(n, "-", sep = "")
  # Do some stuff that allocates memory. Sometimes this triggers a GC.
  lapply(rnorm(2e4), mean)
  cat(n, "\n")
  n <<- n + 1
}

# Create an object, and add a finalizer that simply calls increment_n
e <- new.env()
reg.finalizer(e, function(e) { increment_n() })
rm(e)

for (i in 1:5) {
  increment_n()
}

On the surface, it looks like this should print out "1-1", "2-2", and so
on, on separate lines. But when I run it (on my Mac), it outputs this:
1-1
2-2
3-3-3
4
5-5
6-6


On the positive side, there are some lessons that can be taken from this.
If you encounter a seemingly random and hard-to-diagnose problem, it could
be due to a finalizer. Most of us think about our R code as straight line
code that runs on a single thread. We don't even consider things like race
conditions, since they are problems usually encountered in multithreaded
environments. But finalizers violate this mental model. Because they can
unexpectedly interrupt your code and execute other code, you can end up
with some of the same problems that you would face in a multithreaded
environment.

Thanks to everyone who spent time helping to diagnose the problem!
-Winston


On Mon, Apr 3, 2017 at 10:34 AM, Winston Chang <winstonchang1 at gmail.com>
wrote:

> When running R CMD check on a package, we are encountering an error on
> R-devel (as of 72457) on Linux. Unfortunately, it is very hard to
> reproduce, and almost any change to the code makes the error go away.
> I believe that this is due to a bug in R-devel, which has been present
> since at least commit 72128 (on 2017-02-06).
>
> The test error occurs when R CMD check is run on Travis CI (on Ubuntu
> 12.04.05), and locally on R-devel (on Debian testing). If we make any
> of the following changes, the error does not occur, and the test
> passes:
> - Run the test scripts from an interactive R session
> - Run on a Mac instead of Linux
> - Use R 3.3.3 or 3.2.5
> - Add code right before the tests. For example, just running gc() or
> format(1) right before the test causes it to not fail. However, adding
> very simple code like 1+1 does not affect the test (it still fails).
> - Run R CMD check with -d gdb or -d valgrind
>
> Because the test is so sensitive to any changes, we've been unable to
> track down the source of the problem. We can't be sure, but the error
> message suggests that a promise is getting evaluated with the wrong
> environment.
>
> Here's the relevant output from the tests:
> 1. Error: pool scheduler: schedules things in the right order
> (@test-scheduling.R#13)
> could not find function "task"
> 1: naiveScheduler$protect({
>        scheduleTask(1000, function() {
>            results <<- c(results, 3L)
>        })
>        scheduleTask(100, function() {
>            results <<- c(results, 2L)
>        })
>        scheduleTask(10, function() {
>            results <<- c(results, 1L)
>        })
>    }) at testthat/test-scheduling.R:13
> 2: private$refCount$release() at testthat/test-scheduling.R:13
> 3: private$callback()
> 4: self$protect({
>        task()
>    })
> 5: private$refCount$release()
> 6: private$callback()
> 7: self$protect({
>        task()
>    })
> 8: force(expr)
>
> You can see complete logs on Travis here:
>   https://travis-ci.org/rstudio/pool/jobs/217301804#L747-L771
>
> In the test, a re-entrant function is called (self$protect, at levels
> 4 and 7 on the call stack), and in the inner call (7), a variable,
> `task`, does not have the correct value. It should be a function, but
> it isn't; it's either NULL or some other non-function value.
>
> That code is here:
>   https://github.com/rstudio/pool/blob/f7e52a3/R/scheduler.R#L79-L81
> Note that there's a `force(task)` a couple lines above, which is
> commented out. If that is uncommented, the test passes, even though
> calling force() there shouldn't make a difference. Also, calling
> `format(1)` at that location also causes the test to pass.
>
>
> I've written instructions to reproduce the problem in a Docker container
> here:
>   https://gist.github.com/wch/4cd0c56757886c63522049a32b3c294f
>
> If you want to try reproducing the error without using Docker, I
> believe if you download pool_0.1.0.tar.gz file from the
> gist.github.com URL above, and run R CMD check on it, that will do it.
> Some upstream dependencies will likely need to be installed; they are
> listed in the code in the gist.
>
>
> We also used git bisect to try to find the first commit in R where the
> test would fail. The instructions for doing this are also in the gist
> linked to above. It found that the first commit where the test failed
> was 72128:
>   https://github.com/wch/r-source/commit/7c950ac11202cabc25b276c2f4da82
> 226644953d
>
> Taking a look at the changes in that commit, however, it seems very
> unlikely that it caused the error. Instead, it probably just made a
> change which allowed an already-existing bug to manifest.
>
>
> We'd appreciate any help finding the cause of this bug!
> -Winston
>

	[[alternative HTML version deleted]]


From rdonnelly at continuum.io  Fri Apr  7 11:53:08 2017
From: rdonnelly at continuum.io (Ray Donnelly)
Date: Fri, 7 Apr 2017 10:53:08 +0100
Subject: [Rd] Hyperbolic tangent different results on Windows and Mac
In-Reply-To: <CABFfbXvudeA1Gb8LCD+a=3QNTtTDQr=038TyTxbwN7Zzo5PRog@mail.gmail.com>
References: <CACtWsWMW8VJdzC8ZSG0a+3dGP29kVESOFFwOO3hMRpAuUQxnAw@mail.gmail.com>
 <CABFfbXu4hWq7JT14u2PYG-b6LCA7btPg2o=iOD2tgUaK48F9ew@mail.gmail.com>
 <CABFfbXvudeA1Gb8LCD+a=3QNTtTDQr=038TyTxbwN7Zzo5PRog@mail.gmail.com>
Message-ID: <CAF5kcVX9gk3dsSTKZMFSAAzLB7pNhUOqSwjTpu5Mj0H8sV5TJg@mail.gmail.com>

On Mon, Mar 27, 2017 at 12:33 PM, Jeroen Ooms <jeroenooms at gmail.com> wrote:

> For future reference:
> https://sourceforge.net/p/mingw-w64/mailman/message/35747206/
>
> On Wed, Mar 22, 2017 at 2:12 PM, Jeroen Ooms <jeroenooms at gmail.com> wrote:
> > This looks like a bug in mingw-w64 CRT. The problem can be produced
> > with C++ without R:
> >
> >   #include <iostream>
> >   #include <cmath>
> >   #include <complex>
> >
> >   int main(){
> >     std::cout << std::fixed;
> >     std::complex<double> z(356, 0);
> >     std::cout << "tanh" << z << " = " << std::tanh(z)
> >          << " (tanh(356) = " << std::tanh(356) << ")\n";
> >   }
> >
> > On OS-X we get:
> >
> >   tanh(356.000000,0.000000) = (1.000000,-0.000000) (tanh(356) = 1.000000)
> >
> > But on Windows we get:
> >
> >   tanh(356.000000,0.000000) = (nan,0.000000) (tanh(356) = 1.000000)
> >
> > I was also able to reproduce the problem with gcc 6.3 in msys2 so it
> > has not been fixed upstream. You should file a bug report for
> > mingw-w64.
> >
> > FWIF, we have run into NaN edge-case bugs before with mingw-w64.
> >
> >  - https://sourceforge.net/p/mingw-w64/mingw-w64/ci/
> 6617ebd5fc6b790c80071d5b1d950e737fc670e1/
> >  - https://github.com/wch/r-source/commit/e9aaf8fdeddf27c2a9078cd214a414
> 75c8ff6f40
> >
> > I am cc'ing Ray Donnelly who is an expert on mingw-w64.
>

Thanks for reporting this Jeroen. Hopefully Doug will take a look sometime
soon.

	[[alternative HTML version deleted]]


From tomas.kalibera at gmail.com  Fri Apr  7 12:40:01 2017
From: tomas.kalibera at gmail.com (Tomas Kalibera)
Date: Fri, 7 Apr 2017 12:40:01 +0200
Subject: [Rd] failure of make check-all
In-Reply-To: <47cabe$6636cc@ironport10.mayo.edu>
References: <47cabe$662clt@ironport10.mayo.edu>
 <E86596A7-C098-411A-AB0B-2A37EF64D9BF@gmail.com>
 <47cabe$6636cc@ironport10.mayo.edu>
Message-ID: <d349f137-44bd-e206-6ec5-9c0a2aac75b1@gmail.com>


The warning that dummy_ii returns address of local variable is benign, 
this function is intended to do so.
I've silenced it in R-devel.

Tomas


On 04/06/2017 03:51 PM, Therneau, Terry M., Ph.D. wrote:
> Peter,
>   Retry how much of it?  That is, where does it go in the sequence 
> from svn up to make check?  I'll update my notes so as to do it 
> correctly.
>
> In any case, I put it first and reran the whole command chain.  I had 
> recently upgraded linux from 14.xx LTS to 16.04 LTS so it makes sense 
> to start over.  This removed the large diff in base-Ex.Rout from the 
> first part of the log, but the terminal error still remains:
>
> make[3]: Leaving directory '/usr/local/src/R-devel/tests'
> make[3]: Entering directory '/usr/local/src/R-devel/tests'
> running code in 'reg-tests-3.R' ... OK
>   comparing 'reg-tests-3.Rout' to './reg-tests-3.Rout.save' ... OK
> running code in 'reg-examples3.R' ...Makefile.common:98: recipe for 
> target 'reg-examples3.Rout' failed
> make[3]: *** [reg-examples3.Rout] Error 1
> make[3]: Leaving directory '/usr/local/src/R-devel/tests'
> Makefile.common:273: recipe for target 'test-Reg' failed
>
> Here are lines 97-100 of tests/Makefile.common:
>
> .R.Rout:
>     @rm -f $@ $@.fail $@.log
>     @$(ECHO) $(ECHO_N) "running code in '$<' ...$(ECHO_C)" > $@.log
>     @$(R) < $< > $@.fail 2>&1 || (cat $@.log && rm $@.log && exit 1)
>
>
> There is one complier warning message, it prints in pink so as not to 
> miss it!
>
> main.c: In function ?dummy_ii?:
> main.c:1669:12: warning: function returns address of local variable 
> [-Wreturn-local-addr]
>      return (uintptr_t) &ii;
>
> -------------
>
> So as to be more complete I did "cd tests; R" and 
> source("reg-examples3.R"), and lo and behold the error is
>
>> source('reg-examples3.R')
> Loading required package: MASS
> Loading required package: survival
> Error in fitter(X, Y, strats, offset, init, control, weights = 
> weights,  :
>   object 'Ccoxmart2' not found
>
> Looking at src/coxmart2.c and src/init.c I don't see anything 
> different than the other dozen .C routines in my survival package.  
> The file tests/book7.R in the package exercises this routine, and CMD 
> check passes.
>
> Hints?
>
> Terry T.
>
>
>
>
>
>
> On 04/06/2017 07:52 AM, peter dalgaard wrote:
>> You may want to retry that after a make distclean, in case anything 
>> changed in the toolchain.
>>
>> -pd
>>
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From xhdong at umd.edu  Fri Apr  7 15:39:10 2017
From: xhdong at umd.edu (Xianghui Dong)
Date: Fri, 7 Apr 2017 09:39:10 -0400
Subject: [Rd] [bug] in cut.POSIXt(..., breaks = <numeric>)
In-Reply-To: <CABGHsj2ZvVop7w0qLV4t3SHqpaGbgffG0oRaY7TVAfaQ7zXQaw@mail.gmail.com>
References: <CABGHsj2ZvVop7w0qLV4t3SHqpaGbgffG0oRaY7TVAfaQ7zXQaw@mail.gmail.com>
Message-ID: <CABGHsj2JbOezRoB_i60oe4jLczUkEGR-jFm0=z6EDxyTVHxZ=g@mail.gmail.com>

This is a simple fix. I just extract the part of cut.R that calculated
breaks by a number, then convert the breaks format, provide the breaks
manually to cut again. I used lubridate as_datetime because it's simpler.
Of course it can be replaced with as.POSIXct.

The breaks are always formatted in one way, but user can format it anyway
he/she want by just use divide. I felt the return result of divide is often
very useful, so it's worth to be extracted as an individual function.

------------------------------------
# focused on one case: cut x into intervals given a number of interval count

# divide x into interval_count intervals. Taken from
https://github.com/wch/r-source/blob/trunk/src/library/base/R/cut.R
divide <-
  function (x, interval_count)
  {
      if (is.na(interval_count) || interval_count < 2L)
        stop("invalid number of intervals")
      nb <- as.integer(interval_count + 1) # one more than #{intervals}
      dx <- diff(rx <- range(x, na.rm = TRUE))
      if(dx == 0) {
        dx <- abs(rx[1L])
        breaks <- seq.int(rx[1L] - dx/1000, rx[2L] + dx/1000,
                          length.out = nb)
      } else {
        breaks <- seq.int(rx[1L], rx[2L], length.out = nb)
        breaks[c(1L, nb)] <- c(rx[1L] - dx/1000, rx[2L] + dx/1000)
      }
    return(breaks)
  }

cut_date_time <- function(x, interval_count) {
  brks <- divide(as.numeric(x), interval_count)
  return(cut(x, as_datetime(brks)))
}

divide_date_time <- function(x, interval_count) {
  return(as_datetime(divide(as.numeric(x), interval_count)))
}
--------------------

Best,
Xianghui Dong

On Thu, Apr 6, 2017 at 3:37 PM, Xianghui Dong <xhdong at umd.edu> wrote:

> The exact error was reported before in *Bug 14288*
> <https://bugs.r-project.org/bugzilla3/show_bug.cgi?id=14288> *- **bug in
> cut.POSIXt(..., breaks = <numeric>) and cut.Date. *But the fix in that
> bug report only covered the simplest case.
>
> This is the error I met
> -----------------------------
>
> x <- structure(c(1057067700, 1057215720, 1060597800, 1061470800,
> 1061911680,
> 1062048000, 1062137880, 1064479440, 1064926380, 1064995140, 1066822800,
>           1068033720, 1070869740, 1070939820, 1071030540, 1074244560,
> 1077545880,
>           1078449720, 1084955460, 1129020000, 1130324280, 1130404800,
> 1131519420,
>           1132640100, 1133772000, 1137567960, 1138952640, 1141810380,
> 1147444200,
>           1161643440, 1164086160), class = c("POSIXct", "POSIXt"), tzone =
> "UTC")
>
> > cut(x, 20)
> Error in `levels<-.factor`(`*tmp*`, value = as.character(if
> (is.numeric(breaks)) x[!duplicated(res)] else breaks[-length(breaks)])) :
>   number of levels differs
> -----------------------------
>
> The cause of the bug is that the input have spread out date-time values,
> only 10 breaks in the total 20 breaks have value.
> -------------------
>
> cut_n <- cut(as.numeric(x), 20)
>
> > unique(cut_n)
>  [1] (1.057e+09,1.062e+09] (1.062e+09,1.068e+09] (1.068e+09,1.073e+09]
> (1.073e+09,1.078e+09]
>  [5] (1.084e+09,1.089e+09] (1.127e+09,1.132e+09] (1.132e+09,1.137e+09]
> (1.137e+09,1.143e+09]
>  [9] (1.143e+09,1.148e+09] (1.159e+09,1.164e+09]
> 20 Levels: (1.057e+09,1.062e+09] (1.062e+09,1.068e+09]
> (1.068e+09,1.073e+09] ... (1.159e+09,1.164e+09]
> ------------------------
> To get proper 20 labels of each break, the break need to be formatted from
> number to date-time string. Current code didn't really convert the breaks
> However the code just used the original date-time values from input data.
> This will not work if the interval value doesn't happen to equal to
> original input. For a even simpler example from the original bug report:
> -----------------------
> x <- seq(as.POSIXct("2000-01-01"), by = "days", length = 20)
> > cut(x, breaks = 30)
> Error in `levels<-.factor`(`*tmp*`, value = as.character(if
> (is.numeric(breaks)) x[!duplicated(res)] else breaks[-length(breaks)])) :
>   number of levels differs
> ---------------------
>
> I think to fix the bug will need either
> - get the actual numeric value of the breaks from "cut", modify "cut" if
> needed. Then convert the numeric value back to date-time
> - or use regex to extract the break value then convert to date-time
>
> Best,
> Xianghui Dong
>

	[[alternative HTML version deleted]]


From realitix at gmail.com  Mon Apr 10 18:05:38 2017
From: realitix at gmail.com (realitix)
Date: Mon, 10 Apr 2017 18:05:38 +0200
Subject: [Rd] Review
Message-ID: <CAPXDfFkYkq46Uua0XgeB=1X35LBB9iv7xK0Oz_FqYVwZfai=rw@mail.gmail.com>

Hello,
Can you review my bug when you have time.

https://bugs.r-project.org/bugzilla3/show_bug.cgi?id=17243

Thank you.

	[[alternative HTML version deleted]]


From jeff.laake at noaa.gov  Mon Apr 10 20:26:38 2017
From: jeff.laake at noaa.gov (Jeff Laake - NOAA Federal)
Date: Mon, 10 Apr 2017 11:26:38 -0700
Subject: [Rd] Author email addresses
Message-ID: <CA+_rFBJbpjkHb8q=b0yndEjmy07msBdsWdGOpDUmbaAHa7a3cw@mail.gmail.com>

I have 3 packages on CRAN that I developed with my govt email address.
I'll be retiring in a month and that email address will no longer work at
some point.  I realize that I need to change the maintainer address and
I've already done that with one package but my question is do I need to
remove all references to my govt email address listed as author in various
files and replace with my new address for the package to pass checks?  I've
run into problems with outdated url values before and just wondering
whether the bad email address will cause a check failure. I read through
CRAN repository policy and did a search but couldn't find any guidance on
this.

regards --jeff

	[[alternative HTML version deleted]]


From ligges at statistik.tu-dortmund.de  Mon Apr 10 22:49:00 2017
From: ligges at statistik.tu-dortmund.de (Uwe Ligges)
Date: Mon, 10 Apr 2017 22:49:00 +0200
Subject: [Rd] Author email addresses
In-Reply-To: <CA+_rFBJbpjkHb8q=b0yndEjmy07msBdsWdGOpDUmbaAHa7a3cw@mail.gmail.com>
References: <CA+_rFBJbpjkHb8q=b0yndEjmy07msBdsWdGOpDUmbaAHa7a3cw@mail.gmail.com>
Message-ID: <a04ece9f-cf91-2bbd-40df-2a2edf0ea425@statistik.tu-dortmund.de>

The old mail addresses will not result in check errors ( but perhaps 
should?). Please try to keep them current.

Most important: Please updates all packages' maintaoiner address early 
enough and submit new versions to CRAN before the old address expires.

Best,
Uwe Ligges



On 10.04.2017 20:26, Jeff Laake - NOAA Federal wrote:
> I have 3 packages on CRAN that I developed with my govt email address.
> I'll be retiring in a month and that email address will no longer work at
> some point.  I realize that I need to change the maintainer address and
> I've already done that with one package but my question is do I need to
> remove all references to my govt email address listed as author in various
> files and replace with my new address for the package to pass checks?  I've
> run into problems with outdated url values before and just wondering
> whether the bad email address will cause a check failure. I read through
> CRAN repository policy and did a search but couldn't find any guidance on
> this.
>
> regards --jeff
>
> 	[[alternative HTML version deleted]]
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>


From dietmar.schindler at manroland-web.com  Tue Apr 11 08:16:45 2017
From: dietmar.schindler at manroland-web.com (dietmar.schindler at manroland-web.com)
Date: Tue, 11 Apr 2017 06:16:45 +0000
Subject: [Rd] Bug report: POSIX regular expression doesn't match for
 somewhat higher values of upper bound
In-Reply-To: <22756.46504.29335.469599@stat.math.ethz.ch>
References: <2c87513c247b4e13b22f278e15a034d1@AUSMXMBX03.mrws.biz>
 <22756.46504.29335.469599@stat.math.ethz.ch>
Message-ID: <055edddea21747bab63200785953b819@AUSMXMBX04.mrws.biz>

> Von: Martin Maechler [mailto:maechler at stat.math.ethz.ch]
> Gesendet: Mittwoch, 5. April 2017 11:15
>
> >>>>>   <dietmar.schindler at manroland-web.com>
> >>>>>     on Tue, 4 Apr 2017 08:45:30 +0000 writes:
>
>     > Dear Sirs,
>     > while
>
>     >> regexpr('(.{1,2})\\1', 'foo')
>     > [1] 2
>     > attr(,"match.length")
>     > [1] 2
>     > attr(,"useBytes")
>     > [1] TRUE
>
>     > yields the correct match, an incremented upper bound in
>
>     >> regexpr('(.{1,3})\\1', 'foo')
>     > [1] -1
>     > attr(,"match.length")
>     > [1] -1
>     > attr(,"useBytes")
>     > [1] TRUE
>
>     > incorrectly yields no match.
>
> Hmm, yes, I would also say that this is incorrect
> (though I'm always cautious: The  ?regex  help page explicitly
>  mentions greedy repetitions, and these can "bite you" ..)
>
> The behavior is also different from the  perl=TRUE one which is
> correct (according to the above understanding).
>
> ...

Shouldn't this be submitted on R's Bugzilla then (which I as a non-member can't)?
--
Best regards,
Dietmar Schindler
________________________________
manroland web systems GmbH -- Managing Director: Alexander Wassermann
Registered Office: Augsburg -- Trade Register: AG Augsburg -- HRB-No.: 26816 -- VAT: DE281389840

Confidentiality note:
This eMail and any files transmitted with it are confidential and intended solely for the use of the individual or entity to whom they are addressed. If you are not the intended recipient, you are hereby notified that any use or dissemination of this communication is strictly prohibited. If you have received this eMail in error, then please delete this eMail.


From Ulrich.Windl at rz.uni-regensburg.de  Tue Apr 11 09:23:50 2017
From: Ulrich.Windl at rz.uni-regensburg.de (Ulrich Windl)
Date: Tue, 11 Apr 2017 09:23:50 +0200
Subject: [Rd] Poor documentation for "adj" and text()
References: <58EC8486020000A1000258ED@gwsmtp1.uni-regensburg.de>
Message-ID: <58EC8486020000A1000258ED@gwsmtp1.uni-regensburg.de>

Hi!

(I'd like to be able to access your bugzilla, BTW)
The documentation for parameter "adj" of text() in R 3.3.3 is hard to understand (unless you know what it does already):

"adj 
one or two values in [0, 1] which specify the x (and optionally y) adjustment of the labels. On most devices values outside that interval will also work."

What is the meaning of the values? I think the description ("adj allows adjustment of the text with respect to (x, y). Values of 0, 0.5, and 1 specify left/bottom, middle and right/top alignment, respectively. The default is for centered text, i.e., adj = c(0.5, NA). Accurate vertical centering needs character metric information on individual characters which is only available on some devices. Vertical alignment is done slightly differently for character strings and for expressions: adj = c(0,0) means to left-justify and to align on the baseline for strings but on the bottom of the bounding box for expressions. This also affects vertical centering: for strings the centering excludes any descenders whereas for expressions it includes them. Using NA for strings centers them, including descenders.") should be moved to the parameter.

In general I'd suggest to describe the range, meaning and default of every parameter where the parameter is listed. "Details" should only give an overview of the functions.

Likewise "offset": Will the direction be influenced by "pos"? The description is quite silent on that.

Documentation should be structured to help the user to find the facts easily without having to read the whole page.

Regards,
Ulrich Windl


From Ulrich.Windl at rz.uni-regensburg.de  Tue Apr 11 13:01:12 2017
From: Ulrich.Windl at rz.uni-regensburg.de (Ulrich Windl)
Date: Tue, 11 Apr 2017 13:01:12 +0200
Subject: [Rd] Downloader that Resolves library dependencies
References: <58ECB778020000A100025904@gwsmtp1.uni-regensburg.de>
Message-ID: <58ECB778020000A100025904@gwsmtp1.uni-regensburg.de>

Hi!

If you want to install an extra library like "car", there is a long list of dependencies. If you just download "car", you cannot use it.
Unfortunately the download links offer no solution to select all dependent libraries for download also. It would be nice, however.
(This is interesting for people that want to use R in an Intranet that does not have Internet access)

Regards,
Ulrich


From ruipbarradas at sapo.pt  Tue Apr 11 13:11:05 2017
From: ruipbarradas at sapo.pt (Rui Barradas)
Date: Tue, 11 Apr 2017 12:11:05 +0100
Subject: [Rd] Downloader that Resolves library dependencies
In-Reply-To: <58ECB778020000A100025904@gwsmtp1.uni-regensburg.de>
References: <58ECB778020000A100025904@gwsmtp1.uni-regensburg.de>
 <58ECB778020000A100025904@gwsmtp1.uni-regensburg.de>
Message-ID: <58ECB9C9.600@sapo.pt>

Hello,

Try ?install.packages from within R.

install.packages("car", dependencies = TRUE)

Hope this helps,

Rui Barradas

Em 11-04-2017 12:01, Ulrich Windl escreveu:
> Hi!
>
> If you want to install an extra library like "car", there is a long list of dependencies. If you just download "car", you cannot use it.
> Unfortunately the download links offer no solution to select all dependent libraries for download also. It would be nice, however.
> (This is interesting for people that want to use R in an Intranet that does not have Internet access)
>
> Regards,
> Ulrich
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>


From edd at debian.org  Tue Apr 11 13:30:16 2017
From: edd at debian.org (Dirk Eddelbuettel)
Date: Tue, 11 Apr 2017 06:30:16 -0500
Subject: [Rd] Downloader that Resolves library dependencies
In-Reply-To: <58ECB778020000A100025904@gwsmtp1.uni-regensburg.de>
References: <58ECB778020000A100025904@gwsmtp1.uni-regensburg.de>
Message-ID: <22764.48712.139573.311643@max.eddelbuettel.com>


On 11 April 2017 at 13:01, Ulrich Windl wrote:
| If you want to install an extra library like "car", there is a long list of dependencies. If you just download "car", you cannot use it.
| Unfortunately the download links offer no solution to select all dependent libraries for download also. It would be nice, however.
| (This is interesting for people that want to use R in an Intranet that does not have Internet access)

The package system mechanism is really good, and has its kinked worked
out. He describe an additional constraint from your side ("no internet")
which makes downloading challenging in the first place.

But that question has been answered too, and many times over by now. Eg
http://stackoverflow.com/a/6281417/143305

Dirk

-- 
http://dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org


From frederik at ofb.net  Tue Apr 11 21:01:05 2017
From: frederik at ofb.net (frederik at ofb.net)
Date: Tue, 11 Apr 2017 12:01:05 -0700
Subject: [Rd] Poor documentation for "adj" and text()
In-Reply-To: <58EC8486020000A1000258ED@gwsmtp1.uni-regensburg.de>
References: <58EC8486020000A1000258ED@gwsmtp1.uni-regensburg.de>
 <58EC8486020000A1000258ED@gwsmtp1.uni-regensburg.de>
Message-ID: <20170411190105.GV3858@ofb.net>

Thanks Ulrich for sharing your experience.

I'm attaching a patch which tries to address the issues you raised.

I agree with you in principle, but I think it makes sense to leave
some details under "Details". However, the descriptions in "Arguments"
should give enough information that a user can get the function to do
something predictable in at least one situation, and I feel this is
not the case at present.

I tried to fix the wording so that 'adj' and 'offset' are no longer
confusing to new users (or to me, every time I forget what they mean).

I also fixed the paragraph on rotated text; it is more correct now, at
least for X11-cairo.

I hope that someone in the Core Team can look this over and apply it.

Thank you,

Frederick

On Tue, Apr 11, 2017 at 09:23:50AM +0200, Ulrich Windl wrote:
> Hi!
> 
> (I'd like to be able to access your bugzilla, BTW)
> The documentation for parameter "adj" of text() in R 3.3.3 is hard to understand (unless you know what it does already):
> 
> "adj 
> one or two values in [0, 1] which specify the x (and optionally y) adjustment of the labels. On most devices values outside that interval will also work."
> 
> What is the meaning of the values? I think the description ("adj allows adjustment of the text with respect to (x, y). Values of 0, 0.5, and 1 specify left/bottom, middle and right/top alignment, respectively. The default is for centered text, i.e., adj = c(0.5, NA). Accurate vertical centering needs character metric information on individual characters which is only available on some devices. Vertical alignment is done slightly differently for character strings and for expressions: adj = c(0,0) means to left-justify and to align on the baseline for strings but on the bottom of the bounding box for expressions. This also affects vertical centering: for strings the centering excludes any descenders whereas for expressions it includes them. Using NA for strings centers them, including descenders.") should be moved to the parameter.
> 
> In general I'd suggest to describe the range, meaning and default of every parameter where the parameter is listed. "Details" should only give an overview of the functions.
> 
> Likewise "offset": Will the direction be influenced by "pos"? The description is quite silent on that.
> 
> Documentation should be structured to help the user to find the facts easily without having to read the whole page.
> 
> Regards,
> Ulrich Windl
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
> 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: text.Rd.patch
Type: text/x-diff
Size: 3381 bytes
Desc: not available
URL: <https://stat.ethz.ch/pipermail/r-devel/attachments/20170411/23c8f0e0/attachment.bin>

From Ulrich.Windl at rz.uni-regensburg.de  Wed Apr 12 14:40:10 2017
From: Ulrich.Windl at rz.uni-regensburg.de (Ulrich Windl)
Date: Wed, 12 Apr 2017 14:40:10 +0200
Subject: [Rd] "table(droplevels(aq)$Month)" in manual page of droplevels
References: <58EE202A020000A10002595B@gwsmtp1.uni-regensburg.de>
Message-ID: <58EE202A020000A10002595B@gwsmtp1.uni-regensburg.de>

The last line of the example in droplevels' manual page seems to be incorrect to me. I think it should read: "table(droplevels(aq$Month))". Amazingly (I don't understand) both variants seem to produce the same result (R 3.3.3):
---
> aq <- transform(airquality, Month = factor(Month, labels = month.abb[5:9]))
> aq <- subset(aq, Month != "Jul")
> table(aq$Month)

May Jun Jul Aug Sep 
 31  30   0  31  30 
> table(droplevels(aq)$Month)

May Jun Aug Sep 
 31  30  31  30 
> table(droplevels(aq$Month))

May Jun Aug Sep 
 31  30  31  30 
>
---
For the sake of learners, try to keep the examples simple and useful, even though you experts want to impress the newbees...

Ulrich


From nilsson.henric at gmail.com  Wed Apr 12 15:35:43 2017
From: nilsson.henric at gmail.com (Henric Winell)
Date: Wed, 12 Apr 2017 15:35:43 +0200
Subject: [Rd] "table(droplevels(aq)$Month)" in manual page of droplevels
In-Reply-To: <58EE202A020000A10002595B@gwsmtp1.uni-regensburg.de>
References: <58EE202A020000A10002595B@gwsmtp1.uni-regensburg.de>
 <58EE202A020000A10002595B@gwsmtp1.uni-regensburg.de>
Message-ID: <b66fe849-bb8d-f00d-87e5-553f866d57e0@gmail.com>

On 2017-04-12 14:40, Ulrich Windl wrote:

> The last line of the example in droplevels' manual page seems to be
> incorrect to me. I think it should read:
> "table(droplevels(aq$Month))". Amazingly (I don't understand) both
> variants seem to produce the same result (R 3.3.3): ---

The manual says that "The function 'droplevels' is used to drop unused 
levels from a 'factor' or, more commonly, from factors in a data frame." 
and, as documented, the 'droplevels' generic has methods for objects of 
class "data.frame" and "factor".  So, your being amazed is a bit 
surprising given that 'aq' is a data frame.


Henric Winell



>> aq <- transform(airquality, Month = factor(Month, labels =
>> month.abb[5:9])) aq <- subset(aq, Month != "Jul") table(aq$Month)
> 
> May Jun Jul Aug Sep 31  30   0  31  30
>> table(droplevels(aq)$Month)
> 
> May Jun Aug Sep 31  30  31  30
>> table(droplevels(aq$Month))
> 
> May Jun Aug Sep 31  30  31  30
>> 
> --- For the sake of learners, try to keep the examples simple and
> useful, even though you experts want to impress the newbees...
> 
> Ulrich
> 
> ______________________________________________ R-devel at r-project.org
> mailing list https://stat.ethz.ch/mailman/listinfo/r-devel
>


From nilsson.henric at gmail.com  Wed Apr 12 17:40:40 2017
From: nilsson.henric at gmail.com (Henric Winell)
Date: Wed, 12 Apr 2017 17:40:40 +0200
Subject: [Rd] "table(droplevels(aq)$Month)" in manual page of droplevels
In-Reply-To: <58EE3C2F020000A10002595F@gwsmtp1.uni-regensburg.de>
References: <58EE202A020000A10002595B@gwsmtp1.uni-regensburg.de>
 <58EE202A020000A10002595B@gwsmtp1.uni-regensburg.de>
 <b66fe849-bb8d-f00d-87e5-553f866d57e0@gmail.com>
 <58EE3C2F020000A10002595F@gwsmtp1.uni-regensburg.de>
Message-ID: <5d3bcfef-ff20-7d65-e882-7234a87441c7@gmail.com>

(Let's keep the discussion on-list -- I've added back R-devel.)

On 2017-04-12 16:39, Ulrich Windl wrote:

>>>> Henric Winell <nilsson.henric at gmail.com> schrieb am 12.04.2017
>>>> um 15:35 in
> Nachricht <b66fe849-bb8d-f00d-87e5-553f866d57e0 at gmail.com>:
>> On 2017-04-12 14:40, Ulrich Windl wrote:
>> 
>>> The last line of the example in droplevels' manual page seems to
>>> be incorrect to me. I think it should read: 
>>> "table(droplevels(aq$Month))". Amazingly (I don't understand)
>>> both variants seem to produce the same result (R 3.3.3): ---
>> 
>> The manual says that "The function 'droplevels' is used to drop
>> unused levels from a 'factor' or, more commonly, from factors in a
>> data frame." and, as documented, the 'droplevels' generic has
>> methods for objects of class "data.frame" and "factor".  So, your
>> being amazed is a bit surprising given that 'aq' is a data frame.
> 
> The "surprising" thing is the syntax: I was unaware that '$' is a
> generic operator that can be applied to the result of a function
> (i.e.: droplevels); I thought it's kind of a special variable syntax.

Then your surprise is unrelated to the use of 'droplevels'.

Since the 'droplevels' method for objects of class "data.frame" returns 
a data frame, the extraction operator '$' works directly on the 
resulting object.  So, 'droplevels(aq)$Month' is essentially the same as

aq <- droplevels(aq)
aq$Month

 > Isn't there also the syntax ``droplevels(aq)["Month"]''?

Sure, and there are even more ways to do subsetting.  But this is basic 
stuff and therefore off-topic for R-devel.  Please see the manual 
(?Extract) or, e.g., Chapter 3 of Hadley Wickham's "Advanced R".


Henric Winell



> 
> Regards, Ulrich
> 
>> 
>> 
>> Henric Winell
>> 
>> 
>> 
>>>> aq <- transform(airquality, Month = factor(Month, labels = 
>>>> month.abb[5:9])) aq <- subset(aq, Month != "Jul")
>>>> table(aq$Month)
>>> 
>>> May Jun Jul Aug Sep 31  30   0  31  30
>>>> table(droplevels(aq)$Month)
>>> 
>>> May Jun Aug Sep 31  30  31  30
>>>> table(droplevels(aq$Month))
>>> 
>>> May Jun Aug Sep 31  30  31  30
>>>> 
>>> --- For the sake of learners, try to keep the examples simple
>>> and useful, even though you experts want to impress the
>>> newbees...
>>> 
>>> Ulrich
>>> 
>>> ______________________________________________
>>> R-devel at r-project.org mailing list
>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>> 
> 
> 
> 
> 
>


From ruipbarradas at sapo.pt  Wed Apr 12 18:07:45 2017
From: ruipbarradas at sapo.pt (Rui Barradas)
Date: Wed, 12 Apr 2017 17:07:45 +0100
Subject: [Rd] "table(droplevels(aq)$Month)" in manual page of droplevels
In-Reply-To: <5d3bcfef-ff20-7d65-e882-7234a87441c7@gmail.com>
References: <58EE202A020000A10002595B@gwsmtp1.uni-regensburg.de>
 <58EE202A020000A10002595B@gwsmtp1.uni-regensburg.de>
 <b66fe849-bb8d-f00d-87e5-553f866d57e0@gmail.com>
 <58EE3C2F020000A10002595F@gwsmtp1.uni-regensburg.de>
 <5d3bcfef-ff20-7d65-e882-7234a87441c7@gmail.com>
Message-ID: <58EE50D1.8060609@sapo.pt>

Hello,

Inline.

Em 12-04-2017 16:40, Henric Winell escreveu:
> (Let's keep the discussion on-list -- I've added back R-devel.)
>
> On 2017-04-12 16:39, Ulrich Windl wrote:
>
>>>>> Henric Winell <nilsson.henric at gmail.com> schrieb am 12.04.2017
>>>>> um 15:35 in
>> Nachricht <b66fe849-bb8d-f00d-87e5-553f866d57e0 at gmail.com>:
>>> On 2017-04-12 14:40, Ulrich Windl wrote:
>>>
>>>> The last line of the example in droplevels' manual page seems to
>>>> be incorrect to me. I think it should read:
>>>> "table(droplevels(aq$Month))". Amazingly (I don't understand)
>>>> both variants seem to produce the same result (R 3.3.3): ---
>>>
>>> The manual says that "The function 'droplevels' is used to drop
>>> unused levels from a 'factor' or, more commonly, from factors in a
>>> data frame." and, as documented, the 'droplevels' generic has
>>> methods for objects of class "data.frame" and "factor".  So, your
>>> being amazed is a bit surprising given that 'aq' is a data frame.
>>
>> The "surprising" thing is the syntax: I was unaware that '$' is a
>> generic operator that can be applied to the result of a function
>> (i.e.: droplevels); I thought it's kind of a special variable syntax.
>
> Then your surprise is unrelated to the use of 'droplevels'.
>
> Since the 'droplevels' method for objects of class "data.frame" returns
> a data frame, the extraction operator '$' works directly on the
> resulting object.  So, 'droplevels(aq)$Month' is essentially the same as
>
> aq <- droplevels(aq)
> aq$Month
>
>  > Isn't there also the syntax ``droplevels(aq)["Month"]''?
>
> Sure, and there are even more ways to do subsetting.  But this is basic
> stuff and therefore off-topic for R-devel.  Please see the manual
> (?Extract) or, e.g., Chapter 3 of Hadley Wickham's "Advanced R".

But note that droplevels(aq)["Month"] and droplevels(aq)$Month are _not_ 
the same. The first returns a data.frame (with just one vector), the 
latter returns a vector. To return just a vector you could also use

droplevels(aq)[["Month"]]

which is preferable for programming, by the way. The '$' operator should 
be reserved for interactive use only.

Hope this helps,

Rui Barradas
>
>
> Henric Winell
>
>
>
>>
>> Regards, Ulrich
>>
>>>
>>>
>>> Henric Winell
>>>
>>>
>>>
>>>>> aq <- transform(airquality, Month = factor(Month, labels =
>>>>> month.abb[5:9])) aq <- subset(aq, Month != "Jul")
>>>>> table(aq$Month)
>>>>
>>>> May Jun Jul Aug Sep 31  30   0  31  30
>>>>> table(droplevels(aq)$Month)
>>>>
>>>> May Jun Aug Sep 31  30  31  30
>>>>> table(droplevels(aq$Month))
>>>>
>>>> May Jun Aug Sep 31  30  31  30
>>>>>
>>>> --- For the sake of learners, try to keep the examples simple
>>>> and useful, even though you experts want to impress the
>>>> newbees...
>>>>
>>>> Ulrich
>>>>
>>>> ______________________________________________
>>>> R-devel at r-project.org mailing list
>>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>>>
>>
>>
>>
>>
>>
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From Ulrich.Windl at rz.uni-regensburg.de  Thu Apr 13 08:23:07 2017
From: Ulrich.Windl at rz.uni-regensburg.de (Ulrich Windl)
Date: Thu, 13 Apr 2017 08:23:07 +0200
Subject: [Rd] Q: Windows/readline: missing history search
References: <58EF194B020000A10002597F@gwsmtp1.uni-regensburg.de>
Message-ID: <58EF194B020000A10002597F@gwsmtp1.uni-regensburg.de>

Hello!

Ever since I used R on Windows (RGui) I am missing the ability to search the command history (Cntrl+R (reverse-search-history) in BASH, for example). Is there a particular reason for having this function disabled? Another feature would be word-wise delete (kill-word, backward-kill-word).

Probably being able to use the Alt-key as Meta key for readline (instead of activating menu entries) would be helpful. At least of the console window has the input focus.

Another nice feature would be PuTTY-like copying of selected text: It's sufficient to mark text in the console to have it put into the clipboard. In Rgui I need an explicit copy.

Finally I'd like if Rgui would remember the state of the MDI main window (maximized or not, maybe position and size also): Currently it always starts maximized.

Regards,
Ulrich


From maechler at stat.math.ethz.ch  Thu Apr 13 16:16:27 2017
From: maechler at stat.math.ethz.ch (Martin Maechler)
Date: Thu, 13 Apr 2017 16:16:27 +0200
Subject: [Rd] "table(droplevels(aq)$Month)" in manual page of droplevels
In-Reply-To: <58EE50D1.8060609@sapo.pt>
References: <58EE202A020000A10002595B@gwsmtp1.uni-regensburg.de>
 <b66fe849-bb8d-f00d-87e5-553f866d57e0@gmail.com>
 <58EE3C2F020000A10002595F@gwsmtp1.uni-regensburg.de>
 <5d3bcfef-ff20-7d65-e882-7234a87441c7@gmail.com>
 <58EE50D1.8060609@sapo.pt>
Message-ID: <22767.34875.318482.421150@stat.math.ethz.ch>

>>>>> Rui Barradas <ruipbarradas at sapo.pt>
>>>>>     on Wed, 12 Apr 2017 17:07:45 +0100 writes:

    > Hello, Inline.

    > Em 12-04-2017 16:40, Henric Winell escreveu:
    >> (Let's keep the discussion on-list -- I've added back
    >> R-devel.)
    >> 
    >> On 2017-04-12 16:39, Ulrich Windl wrote:
    >> 
>>>>> Henric Winell <nilsson.henric at gmail.com> schrieb am
    >> 12.04.2017
>>>>> um 15:35 in
    >>> Nachricht
    >>> <b66fe849-bb8d-f00d-87e5-553f866d57e0 at gmail.com>:
    >>>> On 2017-04-12 14:40, Ulrich Windl wrote:
    >>>> 
    >>>>> The last line of the example in droplevels' manual
    >>>>> page seems to be incorrect to me. I think it should
    >>>>> read: "table(droplevels(aq$Month))". Amazingly (I
    >>>>> don't understand) both variants seem to produce the
    >>>>> same result (R 3.3.3): ---
    >>>> 
    >>>> The manual says that "The function 'droplevels' is used
    >>>> to drop unused levels from a 'factor' or, more
    >>>> commonly, from factors in a data frame." and, as
    >>>> documented, the 'droplevels' generic has methods for
    >>>> objects of class "data.frame" and "factor".  So, your
    >>>> being amazed is a bit surprising given that 'aq' is a
    >>>> data frame.
    >>> 
    >>> The "surprising" thing is the syntax: I was unaware that
    >>> '$' is a generic operator that can be applied to the
    >>> result of a function (i.e.: droplevels); I thought it's
    >>> kind of a special variable syntax.
    >> 
    >> Then your surprise is unrelated to the use of
    >> 'droplevels'.
    >> 
    >> Since the 'droplevels' method for objects of class
    >> "data.frame" returns a data frame, the extraction
    >> operator '$' works directly on the resulting object.  So,
    >> 'droplevels(aq)$Month' is essentially the same as
    >> 
    >> aq <- droplevels(aq) aq$Month
    >> 
    >> > Isn't there also the syntax
    >> ``droplevels(aq)["Month"]''?
    >> 
    >> Sure, and there are even more ways to do subsetting.  But
    >> this is basic stuff and therefore off-topic for R-devel.
    >> Please see the manual (?Extract) or, e.g., Chapter 3 of
    >> Hadley Wickham's "Advanced R".

    > But note that droplevels(aq)["Month"] and
    > droplevels(aq)$Month are _not_ the same. The first returns
    > a data.frame (with just one vector), the latter returns a
    > vector. To return just a vector you could also use

    > droplevels(aq)[["Month"]]

    > which is preferable for programming, by the way. The '$'
    > operator should be reserved for interactive use only.

    > Hope this helps,

Indeed, we hope..  Thanks to the helpers!

Ulrich, please note that in the end this was all  because you're
still learning to understand R (e.g., data frames !) better.

As such this was completely inappropriate for R-devel and should
have gotten to the R help list  R-help.

With regards,
Martin Maechler, ETH Zurich

    > Rui Barradas
    >> 
    >> 
    >> Henric Winell
    >>> 
    >>> Regards, Ulrich
    >>> 
    >>>> 
    >>>> 
    >>>> Henric Winell
    >>>> 
    >>>> 
    >>>> 
>>>>> aq <- transform(airquality, Month = factor(Month, labels =
>>>>> month.abb[5:9])) aq <- subset(aq, Month != "Jul")
>>>>> table(aq$Month)
    >>>>> 
    >>>>> May Jun Jul Aug Sep 31 30 0 31 30
>>>>> table(droplevels(aq)$Month)
    >>>>> 
    >>>>> May Jun Aug Sep 31 30 31 30
>>>>> table(droplevels(aq$Month))
    >>>>> 
    >>>>> May Jun Aug Sep 31 30 31 30
    >>>>>> 
    >>>>> --- For the sake of learners, try to keep the examples
    >>>>> simple and useful, even though you experts want to
    >>>>> impress the newbees...
    >>>>> 
    >>>>> Ulrich
    >>>>> 
    >>>>> ______________________________________________
    >>>>> R-devel at r-project.org mailing list
    >>>>> https://stat.ethz.ch/mailman/listinfo/r-devel
    >>>>> 
    >>> 
    >>> 
    >>> 
    >>> 
    >>> 
    >> 
    >> ______________________________________________
    >> R-devel at r-project.org mailing list
    >> https://stat.ethz.ch/mailman/listinfo/r-devel

    > ______________________________________________
    > R-devel at r-project.org mailing list
    > https://stat.ethz.ch/mailman/listinfo/r-devel


From pperry at stern.nyu.edu  Fri Apr 14 23:27:42 2017
From: pperry at stern.nyu.edu (Patrick Perry)
Date: Fri, 14 Apr 2017 17:27:42 -0400
Subject: [Rd] potential bug in attribute handling for externalptr
Message-ID: <58F13ECE.8040009@stern.nyu.edu>

Is the following expected behavior?

 > mkext <- inline::cfunction(language="C", body='return 
R_MakeExternalPtr(NULL, install("tag"), R_NilValue);')
 > x <- mkext()
 > y <- x
 > attr(y, "foo") <- "bar"
 > attributes(x)
$foo
[1] "bar"

I would expect that modifying y's attributes should not affect x.

[Tested on R version 3.3.3 x86_64-apple-darwin16.4.0 (64-bit)]

Thanks,


Patrick


From lionel at rstudio.com  Sat Apr 15 15:33:10 2017
From: lionel at rstudio.com (Lionel Henry)
Date: Sat, 15 Apr 2017 15:33:10 +0200
Subject: [Rd] potential bug in attribute handling for externalptr
In-Reply-To: <58F13ECE.8040009@stern.nyu.edu>
References: <58F13ECE.8040009@stern.nyu.edu>
Message-ID: <CAJf4E3rHfGuOfDBEwD6A-eMiF2wg7OaKB1-S=Tt=cytXGGnayw@mail.gmail.com>

This is expected behaviour, pointers are an uncopyable type, just like
environments:

env <- new.env()
env
#> <environment: 0x7fb6d4822e30>

structure(env, foo = "bar")
env
#> <environment: 0x7fb6d4822e30>
#> attr(,"foo")
#> [1] "bar"


On Fri, Apr 14, 2017 at 11:27 PM, Patrick Perry <pperry at stern.nyu.edu>
wrote:

> Is the following expected behavior?
>
> > mkext <- inline::cfunction(language="C", body='return
> R_MakeExternalPtr(NULL, install("tag"), R_NilValue);')
> > x <- mkext()
> > y <- x
> > attr(y, "foo") <- "bar"
> > attributes(x)
> $foo
> [1] "bar"
>
> I would expect that modifying y's attributes should not affect x.
>
> [Tested on R version 3.3.3 x86_64-apple-darwin16.4.0 (64-bit)]
>
> Thanks,
>
>
> Patrick
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>

	[[alternative HTML version deleted]]


From jeroen at berkeley.edu  Sat Apr 15 14:57:34 2017
From: jeroen at berkeley.edu (Jeroen Ooms)
Date: Sat, 15 Apr 2017 14:57:34 +0200
Subject: [Rd] potential bug in attribute handling for externalptr
In-Reply-To: <58F13ECE.8040009@stern.nyu.edu>
References: <58F13ECE.8040009@stern.nyu.edu>
Message-ID: <CABFfbXtYLEgSyLLPjc_bTbGs41Fcxagnpcf0UBUpKMxnnXhyUw@mail.gmail.com>

On Fri, Apr 14, 2017 at 11:27 PM, Patrick Perry <pperry at stern.nyu.edu> wrote:
> Is the following expected behavior? I would expect that modifying y's attributes should not affect x.

Yes this is expected. Environments and external-ptr objects are never
copied on assignment, hence in your example 'x' and 'y' are the same
object. See e.g. ?reg.finalizer or section 5.13 of "writing r
extensions" on external pointers and weak references.


From sheldon.maze at gmail.com  Sun Apr 16 13:30:58 2017
From: sheldon.maze at gmail.com (Sheldon Maze)
Date: Sun, 16 Apr 2017 13:30:58 +0200
Subject: [Rd] Getting high precision values from qnorm in the tail
Message-ID: <CACESm+xan6L2ov_sq+BdS3Li4XMpgy6x1dV_0_g0YweGRENYGg@mail.gmail.com>

Hello All

I am looking for high precision values for the normal distribution in the
tail,(1e-10 and 1 - 1e-10) as the R package that I am using sets any number
which is out of this range to these values and then calls the qnorm and qt
function.

What I have noticed is that the qnorm implementation in R is not symmetric
when looking at the tails. This is quite surprising to me, as it is well
known that this distribution is symmetric, and I have seen implementations
in other languages that are symmetric. I have checked the qt function and
it is also not symmetric in the tails.

Here are the results from the qnorm function:

x       qnorm(x)                qnorm(1-x)              qnorm(1-x) +
qnorm(x)
1e-2    -2.3263478740408408     2.3263478740408408      0.0 (i.e < machine
epsilon)
1e-3    -3.0902323061678132     3.0902323061678132      0.0 (i.e < machine
epsilon)
1e-4    -3.71901648545568       3.7190164854557084
 2.8421709430404007e-14
1e-5    -4.2648907939228256     4.2648907939238399
 1.014299755297543e-12
1e-10   -6.3613409024040557     6.3613408896974208
 -1.2706634855419452e-08

It is quite clear that at a value of x close to 0 or 1, this function
breaks down. Yes, in "normal" use this isn't a problem, but I am looking at
fringe cases and multiplying small probabilities by very large values, in
which case the error (1e-08) becomes a large value.

Note: I have tried this with 1-x and with entering the actual number
0.00001 and 0.99999 and the accuracy issue is still there.

The questions

Firstly, is this a known problem with the qnorm and qt implementations? I
could not find anything in the documentation, the algorithm is supposed to
be accurate 16 digits for p values from 10^-314 as described in the
Algorithm AS 241 paper.

Quote from R doc for qnorm:

"Wichura, M. J. (1988) Algorithm AS 241: The percentage points of the
normal distribution. Applied Statistics, 37, 477?484.

which provides precise results up to about 16 digits."

If the R code implements the 7 digit version, why does it claim 16 digits?
Or is it "accurate" but the original algorithm is not symmetric and wrong?

If R does implement both versions of Algorithm AS 241 can I turn the 16
digit version on?

Or, is there a more accurate version of qnorm in R? Or, another solution to
my problem where I need high precision in the tails for quantile functions.

On a side note, I also have this issue with the qt distribution, at a
similar level of precision, it is not symmetric, nor precise, but I have
not investigated it yet. Also, I've posted this question on stack overflow:
http://stackoverflow.com/questions/43362644/getting-high-precision-values-from-qnorm-in-the-tail


R version:
>version
platform       x86_64-w64-mingw32
arch           x86_64
os             mingw32
system         x86_64, mingw32
status
major          3
minor          3.2
year           2016
month          10
day            31
svn rev        71607
language       R
version.string R version 3.3.2 (2016-10-31)
nickname       Sincere Pumpkin Patch


Kind regards

Sheldon Maze

	[[alternative HTML version deleted]]


From spencer.graves at prodsyse.com  Sun Apr 16 14:44:59 2017
From: spencer.graves at prodsyse.com (Spencer Graves)
Date: Sun, 16 Apr 2017 07:44:59 -0500
Subject: [Rd] Getting high precision values from qnorm in the tail
In-Reply-To: <CACESm+xan6L2ov_sq+BdS3Li4XMpgy6x1dV_0_g0YweGRENYGg@mail.gmail.com>
References: <CACESm+xan6L2ov_sq+BdS3Li4XMpgy6x1dV_0_g0YweGRENYGg@mail.gmail.com>
Message-ID: <2d25624f-a86d-0b30-6325-f05506aa6fc9@prodsyse.com>

rtfm:  help('qnorm') identifies arguments you overlooked.  1-x generates 
roundoff error.  Try the following:


x <- 10^(-(1:10))
qx <- qnorm(x)
q1x <- qnorm(1-x)
qlx <- qnorm(x, lower=FALSE)

 > cbind(x, qx, q1x, qlx, qx.1x=qx+q1x, qx.lx=qx+qlx)
           x        qx      q1x      qlx         qx.1x qx.lx
  [1,] 1e-01 -1.281552 1.281552 1.281552  0.000000e+00     0
  [2,] 1e-02 -2.326348 2.326348 2.326348  0.000000e+00     0
  [3,] 1e-03 -3.090232 3.090232 3.090232  0.000000e+00     0
  [4,] 1e-04 -3.719016 3.719016 3.719016  2.842171e-14     0
  [5,] 1e-05 -4.264891 4.264891 4.264891  1.014300e-12     0
  [6,] 1e-06 -4.753424 4.753424 4.753424 -5.809575e-12     0
  [7,] 1e-07 -5.199338 5.199338 5.199338  9.784440e-11     0
  [8,] 1e-08 -5.612001 5.612001 5.612001 -8.692842e-10     0
  [9,] 1e-09 -5.997807 5.997807 5.997807  4.593952e-09     0
[10,] 1e-10 -6.361341 6.361341 6.361341 -1.270663e-08     0


hope this helps.  Spencer Graves


On 2017-04-16 6:30 AM, Sheldon Maze wrote:
> Hello All
>
> I am looking for high precision values for the normal distribution in the
> tail,(1e-10 and 1 - 1e-10) as the R package that I am using sets any number
> which is out of this range to these values and then calls the qnorm and qt
> function.
>
> What I have noticed is that the qnorm implementation in R is not symmetric
> when looking at the tails. This is quite surprising to me, as it is well
> known that this distribution is symmetric, and I have seen implementations
> in other languages that are symmetric. I have checked the qt function and
> it is also not symmetric in the tails.
>
> Here are the results from the qnorm function:
>
> x       qnorm(x)                qnorm(1-x)              qnorm(1-x) +
> qnorm(x)
> 1e-2    -2.3263478740408408     2.3263478740408408      0.0 (i.e < machine
> epsilon)
> 1e-3    -3.0902323061678132     3.0902323061678132      0.0 (i.e < machine
> epsilon)
> 1e-4    -3.71901648545568       3.7190164854557084
>   2.8421709430404007e-14
> 1e-5    -4.2648907939228256     4.2648907939238399
>   1.014299755297543e-12
> 1e-10   -6.3613409024040557     6.3613408896974208
>   -1.2706634855419452e-08
>
> It is quite clear that at a value of x close to 0 or 1, this function
> breaks down. Yes, in "normal" use this isn't a problem, but I am looking at
> fringe cases and multiplying small probabilities by very large values, in
> which case the error (1e-08) becomes a large value.
>
> Note: I have tried this with 1-x and with entering the actual number
> 0.00001 and 0.99999 and the accuracy issue is still there.
>
> The questions
>
> Firstly, is this a known problem with the qnorm and qt implementations? I
> could not find anything in the documentation, the algorithm is supposed to
> be accurate 16 digits for p values from 10^-314 as described in the
> Algorithm AS 241 paper.
>
> Quote from R doc for qnorm:
>
> "Wichura, M. J. (1988) Algorithm AS 241: The percentage points of the
> normal distribution. Applied Statistics, 37, 477?484.
>
> which provides precise results up to about 16 digits."
>
> If the R code implements the 7 digit version, why does it claim 16 digits?
> Or is it "accurate" but the original algorithm is not symmetric and wrong?
>
> If R does implement both versions of Algorithm AS 241 can I turn the 16
> digit version on?
>
> Or, is there a more accurate version of qnorm in R? Or, another solution to
> my problem where I need high precision in the tails for quantile functions.
>
> On a side note, I also have this issue with the qt distribution, at a
> similar level of precision, it is not symmetric, nor precise, but I have
> not investigated it yet. Also, I've posted this question on stack overflow:
> http://stackoverflow.com/questions/43362644/getting-high-precision-values-from-qnorm-in-the-tail
>
>
> R version:
>> version
> platform       x86_64-w64-mingw32
> arch           x86_64
> os             mingw32
> system         x86_64, mingw32
> status
> major          3
> minor          3.2
> year           2016
> month          10
> day            31
> svn rev        71607
> language       R
> version.string R version 3.3.2 (2016-10-31)
> nickname       Sincere Pumpkin Patch
>
>
> Kind regards
>
> Sheldon Maze
>
> 	[[alternative HTML version deleted]]
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From Ulrich.Windl at rz.uni-regensburg.de  Tue Apr 18 08:24:37 2017
From: Ulrich.Windl at rz.uni-regensburg.de (Ulrich Windl)
Date: Tue, 18 Apr 2017 08:24:37 +0200
Subject: [Rd] Antw: Re: "table(droplevels(aq)$Month)" in manual page of
 droplevels
In-Reply-To: <22767.34875.318482.421150@stat.math.ethz.ch>
References: <58EE202A020000A10002595B@gwsmtp1.uni-regensburg.de>
 <b66fe849-bb8d-f00d-87e5-553f866d57e0@gmail.com>
 <58EE3C2F020000A10002595F@gwsmtp1.uni-regensburg.de>
 <5d3bcfef-ff20-7d65-e882-7234a87441c7@gmail.com>
 <58EE50D1.8060609@sapo.pt> <22767.34875.318482.421150@stat.math.ethz.ch>
Message-ID: <58F5B125020000A100025A1C@gwsmtp1.uni-regensburg.de>

>>> Martin Maechler <maechler at stat.math.ethz.ch> schrieb am 13.04.2017 um 16:16 in
Nachricht <22767.34875.318482.421150 at stat.math.ethz.ch>:
[...]
> Ulrich, please note that in the end this was all  because you're
> still learning to understand R (e.g., data frames !) better.

Hi!

I understood that I did not understand the example due to my lack of R knowledge. That is the point you made.
However I read a book on R, the introduction on R, and several tutorials on R, and I still never saw the use pattern presented in the example.
Thus I think my proposal to present more comprehensible examples is a valid one. Alternatively the introduction to R could be extended to a level that allows the user to understand the example presented.
Honestly there are many example I don't understand (plus descriptions that I hope to understand from the examples).
While I understand that R developers prefer to be left alone, not hearing about such issues, I think even R developers could benefit from hearing of beginner's problems.
Anyway R developers are free to forward messages to R-help if they think more appropriate for R-help.

> 
> As such this was completely inappropriate for R-devel and should
> have gotten to the R help list  R-help.

Regards,
Ulrich


> 
> With regards,
> Martin Maechler, ETH Zurich
[...]


From ripley at stats.ox.ac.uk  Tue Apr 18 09:33:05 2017
From: ripley at stats.ox.ac.uk (Prof Brian Ripley)
Date: Tue, 18 Apr 2017 08:33:05 +0100
Subject: [Rd] Q: Windows/readline: missing history search
In-Reply-To: <58EF194B020000A10002597F@gwsmtp1.uni-regensburg.de>
References: <58EF194B020000A10002597F@gwsmtp1.uni-regensburg.de>
 <58EF194B020000A10002597F@gwsmtp1.uni-regensburg.de>
Message-ID: <34afcf1f-3899-c9b4-fd48-26dd6a131f32@stats.ox.ac.uk>

Your error is in your subject line: getline rather than readline is used 
on Windows.  (readline was not written for Windows and depends on a 
'curses' library not available for Windows terminals let alone RGui.  A 
considerable amount of time was spent trying to use it, unsuccessfully.)


On 13/04/2017 07:23, Ulrich Windl wrote:
> Hello!
>
> Ever since I used R on Windows (RGui) I am missing the ability to search the command history (Cntrl+R (reverse-search-history) in BASH, for example). Is there a particular reason for having this function disabled? Another feature would be word-wise delete (kill-word, backward-kill-word).
>
> Probably being able to use the Alt-key as Meta key for readline (instead of activating menu entries) would be helpful. At least of the console window has the input focus.

That's the Windows way.  And users of e.g. Emacs on macOS know how this 
can cause awkward conflicts.

> Another nice feature would be PuTTY-like copying of selected text: It's sufficient to mark text in the console to have it put into the clipboard. In Rgui I need an explicit copy.

That's the Windows way: PuTTY is using an older Unix/X11 standard (not 
so much used on Unix nowadays).

> Finally I'd like if Rgui would remember the state of the MDI main window (maximized or not, maybe position and size also): Currently it always starts maximized.

AFAIR that is part of the configuration you can save.

> Regards,
> Ulrich



-- 
Brian D. Ripley,                  ripley at stats.ox.ac.uk
Emeritus Professor of Applied Statistics, University of Oxford


From philipp.angerer at helmholtz-muenchen.de  Tue Apr 18 15:11:52 2017
From: philipp.angerer at helmholtz-muenchen.de (Angerer, Philipp)
Date: Tue, 18 Apr 2017 15:11:52 +0200 (CEST)
Subject: [Rd] R 3.4 has broken C++11 support
Message-ID: <1893707771.15504454.1492521112411.JavaMail.zimbra@helmholtz-muenchen.de>



Hi, 

This commit (I?m using the mirror to have a working link) broke C++11 compilation. 

Before (and still now, according to the comments in the configure script), it?s sufficient to just have ?SystemRequirements: C++11? in the DESCRIPTION file. 


But now ?R CMD install? fails with ?C++11 standard requested but CXX11 is not defined?, which is, according to the documentation , a lie. 

I can?t even circumvent this, as setting ?CXX11=$(CXX)? in the src/Makevars file fails with ?CXX definition recursive?, and hardcoding ?CXX11=g++? is a bad idea. 

Did I do sth. wrong or is the C++11 support in R just broken atm.? 


Best, Philipp 

PS: After addressing all points in the submission of my popular package ?IRkernel?, I didn?t get any feedback, and the file just vanished from the incoming directory in CRAN. I asked about it multiple times but got no answer. What can I do now? 

 


Helmholtz Zentrum Muenchen

Deutsches Forschungszentrum fuer Gesundheit und Umwelt (GmbH)

Ingolstaedter Landstr. 1

85764 Neuherberg

www.helmholtz-muenchen.de

Aufsichtsratsvorsitzende: MinDir'in Baerbel Brumme-Bothe

Geschaeftsfuehrer: Prof. Dr. Guenther Wess, Heinrich Bassler, Dr. Alfons Enhsen

Registergericht: Amtsgericht Muenchen HRB 6466

USt-IdNr: DE 129521671


	[[alternative HTML version deleted]]


From plummerm at iarc.fr  Tue Apr 18 18:08:02 2017
From: plummerm at iarc.fr (Martyn Plummer)
Date: Tue, 18 Apr 2017 16:08:02 +0000
Subject: [Rd] R 3.4 has broken C++11 support
In-Reply-To: <1893707771.15504454.1492521112411.JavaMail.zimbra@helmholtz-muenchen.de>
References: <1893707771.15504454.1492521112411.JavaMail.zimbra@helmholtz-muenchen.de>
Message-ID: <1492531681.12031.7.camel@iarc.fr>

A user with the email address flying-sheep at web.de has submitted a bug
report on this topic.?

https://bugs.r-project.org/bugzilla/show_bug.cgi?id=17260

Assuming that you are the same person, I will address the issue here
first.

If you get the message ?C++11 standard requested but CXX11 is not
defined? then this means that there is no available C++11 compiler on
your computer. The presence or absence of a working C++11 compiler is
determined at configure time when R is built.

The tests used by R's configure script to determine C++11 support are
more stringent in R 3.4.0 than in previous versions. However, if you
are using gcc you should be protected against this change. For versions
of gcc prior to 4.8 (which have only partial C++11 support) the same
tests as in R 3.3.x are used. This maintains the current behaviour on
long-term service Linux distributions that are stuck with old gcc
versions.

It would be help if you could share more information about your
platform - i.e. the output of sessionInfo() - and specify the compiler
version you are using.

Martyn

On Tue, 2017-04-18 at 15:11 +0200, Angerer, Philipp via R-devel wrote:
> 
> Hi,?
> 
> This commit (I?m using the mirror to have a working link) broke C++11
> compilation.?
> 
> Before (and still now, according to the comments in the configure
> script), it?s sufficient to just have ?SystemRequirements: C++11? in
> the DESCRIPTION file.?
> 
> 
> But now ?R CMD install? fails with ?C++11 standard requested but
> CXX11 is not defined?, which is, according to the documentation , a
> lie.?
> 
> I can?t even circumvent this, as setting ?CXX11=$(CXX)? in the
> src/Makevars file fails with ?CXX definition recursive?, and
> hardcoding ?CXX11=g++? is a bad idea.?
> 
> Did I do sth. wrong or is the C++11 support in R just broken atm.??
> 
> 
> Best, Philipp?
> 
> PS: After addressing all points in the submission of my popular
> package ?IRkernel?, I didn?t get any feedback, and the file just
> vanished from the incoming directory in CRAN. I asked about it
> multiple times but got no answer. What can I do now??
> 
> ?
> 
> 
> Helmholtz Zentrum Muenchen
> 
> Deutsches Forschungszentrum fuer Gesundheit und Umwelt (GmbH)
> 
> Ingolstaedter Landstr. 1
> 
> 85764 Neuherberg
> 
> www.helmholtz-muenchen.de
> 
> Aufsichtsratsvorsitzende: MinDir'in Baerbel Brumme-Bothe
> 
> Geschaeftsfuehrer: Prof. Dr. Guenther Wess, Heinrich Bassler, Dr.
> Alfons Enhsen
> 
> Registergericht: Amtsgericht Muenchen HRB 6466
> 
> USt-IdNr: DE 129521671
> 
> 
> 	[[alternative HTML version deleted]]
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel

From philipp.angerer at helmholtz-muenchen.de  Tue Apr 18 16:18:20 2017
From: philipp.angerer at helmholtz-muenchen.de (Angerer, Philipp)
Date: Tue, 18 Apr 2017 16:18:20 +0200 (CEST)
Subject: [Rd] R 3.4 has broken C++11 support
In-Reply-To: <1893707771.15504454.1492521112411.JavaMail.zimbra@helmholtz-muenchen.de>
References: <1893707771.15504454.1492521112411.JavaMail.zimbra@helmholtz-muenchen.de>
Message-ID: <1786053992.15560723.1492525100128.JavaMail.zimbra@helmholtz-muenchen.de>

Whoops, sorry. The links are supposed to be:

[This commit]: https://github.com/wch/r-source/commit/45899dba734cbd80a77432af9a3a7829a9ad48da
[the documentation]: https://github.com/wch/r-source/blob/45899dba734cbd80a77432af9a3a7829a9ad48da/config.site#L264

----- Urspr?ngliche Mail -----
Von: "Angerer, Philipp" <philipp.angerer at helmholtz-muenchen.de>
An: "r-devel" <r-devel at r-project.org>
Gesendet: Dienstag, 18. April 2017 15:11:52
Betreff: R 3.4 has broken C++11 support



Hi, 

[This commit] (I?m using the mirror to have a working link) broke C++11 compilation. 

Before (and still now, according to the comments in the configure script), it?s sufficient to just have ?SystemRequirements: C++11? in the DESCRIPTION file. 


But now ?R CMD install? fails with ?C++11 standard requested but CXX11 is not defined?, which is, according to [the documentation], a lie. 

I can?t even circumvent this, as setting ?CXX11=$(CXX)? in the src/Makevars file fails with ?CXX definition recursive?, and hardcoding ?CXX11=g++? is a bad idea. 

Did I do sth. wrong or is the C++11 support in R just broken atm.? 


Best, Philipp 

PS: After addressing all points in the submission of my popular package ?IRkernel?, I didn?t get any feedback, and the file just vanished from the incoming directory in CRAN. I asked about it multiple times but got no answer. What can I do now? 

 

Helmholtz Zentrum Muenchen
Deutsches Forschungszentrum fuer Gesundheit und Umwelt (GmbH)
Ingolstaedter Landstr. 1
85764 Neuherberg
www.helmholtz-muenchen.de
Aufsichtsratsvorsitzende: MinDir'in Baerbel Brumme-Bothe
Geschaeftsfuehrer: Prof. Dr. Guenther Wess, Heinrich Bassler, Dr. Alfons Enhsen
Registergericht: Amtsgericht Muenchen HRB 6466
USt-IdNr: DE 129521671


From berger at mpiib-berlin.mpg.de  Tue Apr 18 18:57:08 2017
From: berger at mpiib-berlin.mpg.de (Hilmar Berger)
Date: Tue, 18 Apr 2017 18:57:08 +0200
Subject: [Rd] Crash after (wrongly) applying product operator on object from
 LIMMA package
Message-ID: <e3a03266-b7f3-d5df-6940-906f9bd41104@mpiib-berlin.mpg.de>

Hi,

this is a problem that occurs in the presence of two libraries (limma, 
xlsx) and leads to a crash of R. The problematic code is the wrong 
application of sweep or the product ("*") function on an LIMMA MAList 
object. To my knowledge, limma does not define a "*" method for MAList 
objects.

If only LIMMA is loaded but not package xlsx, the code does not crash 
but rather produces an error ("Error: C stack usage  7970512 is too 
close to the limit"). Loading only package rJava instead of xlsx does 
also not produce the crash but the error message instead. Note that xlsx 
functions are not explicitly used.

It could be reproduced on two different Linux machines running R-3.2.5, 
R-3.3.0 and R-3.3.2.

Code to reproduce the problem:
---------------------------------
library(limma)
library(xlsx)

# a MAList
ma = new("MAList", list(A=matrix(rnorm(300), 30,10), 
M=matrix(rnorm(300), 30,10)))

# This should actually be sweep(ma$M, ...) for functional code, but I 
omitted the $M...
#sweep(ma, 2, c(1:10), "*")
# sweep will crash when doing the final operation of applying the 
function over the input matrix, which in this case is function "*"

f = match.fun("*")
# This is not exactly the same as in sweep but it also tries to multiply 
the MAList object with a matrix of same size and leads to the crash
f(ma, ma$M)
# ma * ma$M has the same effect
---------------------------------

My output:

R version 3.3.0 (2016-05-03) -- "Supposedly Educational"
Copyright (C) 2016 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

   Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

 > library(limma)
 > library(xlsx)
Loading required package: rJava
Loading required package: xlsxjars
 >
 > sessionInfo()
R version 3.3.0 (2016-05-03)
Platform: x86_64-pc-linux-gnu (64-bit)
Running under: Ubuntu 14.04.5 LTS

locale:
  [1] LC_CTYPE=en_US.UTF-8          LC_NUMERIC=C LC_TIME=en_US.UTF-8
  [4] LC_COLLATE=en_US.UTF-8        LC_MONETARY=en_US.UTF-8 
LC_MESSAGES=en_US.UTF-8
  [7] LC_PAPER=en_US.UTF-8          LC_NAME=en_US.UTF-8 
LC_ADDRESS=en_US.UTF-8
[10] LC_TELEPHONE=en_US.UTF-8      LC_MEASUREMENT=en_US.UTF-8 
LC_IDENTIFICATION=en_US.UTF-8

attached base packages:
[1] stats     graphics  grDevices utils     datasets  methods base

other attached packages:
[1] xlsx_0.5.7     xlsxjars_0.6.1 rJava_0.9-8    limma_3.30.7

loaded via a namespace (and not attached):
[1] tools_3.3.0
 >
 > ma = new("MAList", list(A=matrix(rnorm(300), 30,10), 
M=matrix(rnorm(300), 30,10)))
 > #sweep(ma, 2, c(1:10), "*")
 >
 > f = match.fun("*")
 > f
function (e1, e2)  .Primitive("*")

 > f(ma, ma$M)

----> crash to command line with segfault.

Best regards,
Hilmar

-- 
Dr. Hilmar Berger, MD
Max Planck Institute for Infection Biology
Charit?platz 1
D-10117 Berlin
GERMANY

Phone:  + 49 30 28460 430
Fax:    + 49 30 28460 401
  
E-Mail: berger at mpiib-berlin.mpg.de
Web   : www.mpiib-berlin.mpg.de


From winstonchang1 at gmail.com  Tue Apr 18 22:20:42 2017
From: winstonchang1 at gmail.com (Winston Chang)
Date: Tue, 18 Apr 2017 15:20:42 -0500
Subject: [Rd] system/system2 and open file descriptors
Message-ID: <CAFOpNVHtSTypK8sXF+XbtDOmyOFQsTrRRasG2-yH5YBnhRVXww@mail.gmail.com>

It seems that the system() and system2() functions don't close file
descriptors between the fork() and exec() (on Unix platforms, of course).
This means that the child processes inherit open files and socket
connections.

Running this (from a terminal) will result in the child process writing to
a file that was opened by R:

R
f <- file('foo.txt', 'w')
system('echo "abc" >&3')



You can also see the open files if you run the following:
  f <- file('foo.txt', 'w')
  system2('sleep', '100', wait=F)

And then in another terminal:
  lsof -c R -c sleep
it will show that both the R and sleep processes have the file open:
  ...
  R       324 root    3w   REG   0,48        0   4259 /foo.txt
  ...
  sleep   327 root    3w   REG   0,48        0   4259 /foo.txt


This behavior can cause problems if R spawns a child process that outlives
the R process, but keeps open some resources.

Would it be possible to add an option to close file descriptors for child
processes? It would be nice if that were the default, but I suspect that
making that change would break a lot of existing code.

To take an example from the Python world, subprocess.Popen() has an option,
close_fds, which closes all file descriptors except 0, 1, and 2.
  https://docs.python.org/2/library/subprocess.html#popen-constructor


-Winston

	[[alternative HTML version deleted]]


From rbarnes at umn.edu  Tue Apr 18 22:26:31 2017
From: rbarnes at umn.edu (Richard Barnes)
Date: Tue, 18 Apr 2017 13:26:31 -0700
Subject: [Rd] Package Version Checking
Message-ID: <faaba057-ac73-a7d3-ec07-fd41494bc86f@umn.edu>

This is a feature suggestion.

My apologies if it's already been raised.

I recently noticed that dplyr's behaviour has changed:
> *dplyr 0.4.0*
> df <- data_frame(x = c(1, 1, 1, 2, 2), y = 1:5)
> result <- df %>% dplyr::distinct(x) %>% sum
> *# result == 8*
>
> *dplyr 0.5.0*
> df <- data_frame(x = c(1, 1, 1, 2, 2), y = 1:5)
> result <- df %>% dplyr::distinct(x) %>% sum
> *# result == 3*
That's fine. It's nice to see package maintainers fixing bugs and
improving functionality.

What's not fine is that for most users, myself included, this change was
essentially silent.

I would suggest amending the `library` and `require` functions as
follows, e.g.:
> library(dplyr, version='0.4.0', versioning='semantic')
> library(dplyr, version='0.4.0', versioning='exact')
If the version check indicates the package has been updated in a way
which doesn't maintain backwards compatibility, a warning message would
be generated or, possibly, the code would halt.

This would provide R users a way of specifying the conditions under
which their scripts produced the results they obtain.

Best regards,
Richard

	[[alternative HTML version deleted]]


From berger at mpiib-berlin.mpg.de  Wed Apr 19 10:01:37 2017
From: berger at mpiib-berlin.mpg.de (Hilmar Berger)
Date: Wed, 19 Apr 2017 10:01:37 +0200
Subject: [Rd] Crash after (wrongly) applying product operator on object
 from LIMMA package
In-Reply-To: <e3a03266-b7f3-d5df-6940-906f9bd41104@mpiib-berlin.mpg.de>
References: <e3a03266-b7f3-d5df-6940-906f9bd41104@mpiib-berlin.mpg.de>
Message-ID: <9c987df5-1852-56b6-3de5-89358aaffb0a@mpiib-berlin.mpg.de>

Hi,

following up on my own question, I found smaller example that does not 
require LIMMA:

setClass("FOOCLASS",
          representation("list")
)
ma = new("FOOCLASS", list(M=matrix(rnorm(300), 30,10)))

 > ma * ma$M
Error: C stack usage  7970512 is too close to the limit

 > library(xlsx)
Loading required package: rJava
Loading required package: xlsxjars
 > ma * ma$M
---> Crash

xlsx seems to act like a catalyst here, with the product operator 
running in a deep nested iteration, exhausting the stack. Valgrind shows 
thousands of invalid stack accesses when loading xslx, which might 
contribute to the problem. Package xlsx has not been updated since 2014, 
so it might fail with more current versions of R or Java (I'm using 
Oracle Java 8).

Still, even if xlsx was the package to be blamed for the crash, I fail 
to understand what exactly the product operator is trying to do in the 
multiplication of the matrix with the object.

Best regards,
Hilmar

On 18/04/17 18:57, Hilmar Berger wrote:
> Hi,
>
> this is a problem that occurs in the presence of two libraries (limma, 
> xlsx) and leads to a crash of R. The problematic code is the wrong 
> application of sweep or the product ("*") function on an LIMMA MAList 
> object. To my knowledge, limma does not define a "*" method for MAList 
> objects.
>
> If only LIMMA is loaded but not package xlsx, the code does not crash 
> but rather produces an error ("Error: C stack usage  7970512 is too 
> close to the limit"). Loading only package rJava instead of xlsx does 
> also not produce the crash but the error message instead. Note that 
> xlsx functions are not explicitly used.
>
> It could be reproduced on two different Linux machines running 
> R-3.2.5, R-3.3.0 and R-3.3.2.
>
> Code to reproduce the problem:
> ---------------------------------
> library(limma)
> library(xlsx)
>
> # a MAList
> ma = new("MAList", list(A=matrix(rnorm(300), 30,10), 
> M=matrix(rnorm(300), 30,10)))
>
> # This should actually be sweep(ma$M, ...) for functional code, but I 
> omitted the $M...
> #sweep(ma, 2, c(1:10), "*")
> # sweep will crash when doing the final operation of applying the 
> function over the input matrix, which in this case is function "*"
>
> f = match.fun("*")
> # This is not exactly the same as in sweep but it also tries to 
> multiply the MAList object with a matrix of same size and leads to the 
> crash
> f(ma, ma$M)
> # ma * ma$M has the same effect
> ---------------------------------
>
> My output:
>
> R version 3.3.0 (2016-05-03) -- "Supposedly Educational"
> Copyright (C) 2016 The R Foundation for Statistical Computing
> Platform: x86_64-pc-linux-gnu (64-bit)
>
> R is free software and comes with ABSOLUTELY NO WARRANTY.
> You are welcome to redistribute it under certain conditions.
> Type 'license()' or 'licence()' for distribution details.
>
>   Natural language support but running in an English locale
>
> R is a collaborative project with many contributors.
> Type 'contributors()' for more information and
> 'citation()' on how to cite R or R packages in publications.
>
> Type 'demo()' for some demos, 'help()' for on-line help, or
> 'help.start()' for an HTML browser interface to help.
> Type 'q()' to quit R.
>
> > library(limma)
> > library(xlsx)
> Loading required package: rJava
> Loading required package: xlsxjars
> >
> > sessionInfo()
> R version 3.3.0 (2016-05-03)
> Platform: x86_64-pc-linux-gnu (64-bit)
> Running under: Ubuntu 14.04.5 LTS
>
> locale:
>  [1] LC_CTYPE=en_US.UTF-8          LC_NUMERIC=C LC_TIME=en_US.UTF-8
>  [4] LC_COLLATE=en_US.UTF-8        LC_MONETARY=en_US.UTF-8 
> LC_MESSAGES=en_US.UTF-8
>  [7] LC_PAPER=en_US.UTF-8          LC_NAME=en_US.UTF-8 
> LC_ADDRESS=en_US.UTF-8
> [10] LC_TELEPHONE=en_US.UTF-8      LC_MEASUREMENT=en_US.UTF-8 
> LC_IDENTIFICATION=en_US.UTF-8
>
> attached base packages:
> [1] stats     graphics  grDevices utils     datasets  methods base
>
> other attached packages:
> [1] xlsx_0.5.7     xlsxjars_0.6.1 rJava_0.9-8    limma_3.30.7
>
> loaded via a namespace (and not attached):
> [1] tools_3.3.0
> >
> > ma = new("MAList", list(A=matrix(rnorm(300), 30,10), 
> M=matrix(rnorm(300), 30,10)))
> > #sweep(ma, 2, c(1:10), "*")
> >
> > f = match.fun("*")
> > f
> function (e1, e2)  .Primitive("*")
>
> > f(ma, ma$M)
>
> ----> crash to command line with segfault.
>
> Best regards,
> Hilmar
>

-- 
Dr. Hilmar Berger, MD
Max Planck Institute for Infection Biology
Charit?platz 1
D-10117 Berlin
GERMANY

Phone:  + 49 30 28460 430
Fax:    + 49 30 28460 401
  
E-Mail: berger at mpiib-berlin.mpg.de
Web   : www.mpiib-berlin.mpg.de


From wolfgang.huber at embl.de  Wed Apr 19 10:12:02 2017
From: wolfgang.huber at embl.de (Wolfgang Huber)
Date: Wed, 19 Apr 2017 10:12:02 +0200
Subject: [Rd] Crash after (wrongly) applying product operator on S4
 object that derives from list
In-Reply-To: <9c987df5-1852-56b6-3de5-89358aaffb0a@mpiib-berlin.mpg.de>
References: <e3a03266-b7f3-d5df-6940-906f9bd41104@mpiib-berlin.mpg.de>
 <9c987df5-1852-56b6-3de5-89358aaffb0a@mpiib-berlin.mpg.de>
Message-ID: <24e4a410-b5c2-c25a-f31f-3637de4d5b88@embl.de>

Dear Hilmar

Perhaps this gives an indication of why the infinite recursion happens:

## after calling `*` on ma and a matrix:

> showMethods(classes=class(ma), includeDefs=TRUE, inherited = TRUE)

Function: * (package base)
e1="FOOCLASS", e2="matrix"
     (inherited from: e1="vector", e2="structure")
     (definition from function "Ops")
function (e1, e2)
{
     value <- callGeneric(e1, e2 at .Data)
     if (length(value) == length(e2)) {
         e2 at .Data <- value
         e2
     }
     else value
}



> is(ma, "vector")
[1] TRUE

I got that in a fresh session of
> sessionInfo()
R Under development (unstable) (2017-04-18 r72542)
Platform: x86_64-apple-darwin16.5.0 (64-bit)
Running under: macOS Sierra 10.12.4

Best wishes
Wolfgang

19.4.17 10:01, Hilmar Berger scripsit:
> Hi,
>
> following up on my own question, I found smaller example that does not
> require LIMMA:
>
> setClass("FOOCLASS",
>          representation("list")
> )
> ma = new("FOOCLASS", list(M=matrix(rnorm(300), 30,10)))
>
>> ma * ma$M
> Error: C stack usage  7970512 is too close to the limit
>
>> library(xlsx)
> Loading required package: rJava
> Loading required package: xlsxjars
>> ma * ma$M
> ---> Crash
>
> xlsx seems to act like a catalyst here, with the product operator
> running in a deep nested iteration, exhausting the stack. Valgrind shows
> thousands of invalid stack accesses when loading xslx, which might
> contribute to the problem. Package xlsx has not been updated since 2014,
> so it might fail with more current versions of R or Java (I'm using
> Oracle Java 8).
>
> Still, even if xlsx was the package to be blamed for the crash, I fail
> to understand what exactly the product operator is trying to do in the
> multiplication of the matrix with the object.
>
> Best regards,
> Hilmar
>
> On 18/04/17 18:57, Hilmar Berger wrote:
>> Hi,
>>
>> this is a problem that occurs in the presence of two libraries (limma,
>> xlsx) and leads to a crash of R. The problematic code is the wrong
>> application of sweep or the product ("*") function on an LIMMA MAList
>> object. To my knowledge, limma does not define a "*" method for MAList
>> objects.
>>
>> If only LIMMA is loaded but not package xlsx, the code does not crash
>> but rather produces an error ("Error: C stack usage  7970512 is too
>> close to the limit"). Loading only package rJava instead of xlsx does
>> also not produce the crash but the error message instead. Note that
>> xlsx functions are not explicitly used.
>>
>> It could be reproduced on two different Linux machines running
>> R-3.2.5, R-3.3.0 and R-3.3.2.
>>
>> Code to reproduce the problem:
>> ---------------------------------
>> library(limma)
>> library(xlsx)
>>
>> # a MAList
>> ma = new("MAList", list(A=matrix(rnorm(300), 30,10),
>> M=matrix(rnorm(300), 30,10)))
>>
>> # This should actually be sweep(ma$M, ...) for functional code, but I
>> omitted the $M...
>> #sweep(ma, 2, c(1:10), "*")
>> # sweep will crash when doing the final operation of applying the
>> function over the input matrix, which in this case is function "*"
>>
>> f = match.fun("*")
>> # This is not exactly the same as in sweep but it also tries to
>> multiply the MAList object with a matrix of same size and leads to the
>> crash
>> f(ma, ma$M)
>> # ma * ma$M has the same effect
>> ---------------------------------
>>
>> My output:
>>
>> R version 3.3.0 (2016-05-03) -- "Supposedly Educational"
>> Copyright (C) 2016 The R Foundation for Statistical Computing
>> Platform: x86_64-pc-linux-gnu (64-bit)
>>
>> R is free software and comes with ABSOLUTELY NO WARRANTY.
>> You are welcome to redistribute it under certain conditions.
>> Type 'license()' or 'licence()' for distribution details.
>>
>>   Natural language support but running in an English locale
>>
>> R is a collaborative project with many contributors.
>> Type 'contributors()' for more information and
>> 'citation()' on how to cite R or R packages in publications.
>>
>> Type 'demo()' for some demos, 'help()' for on-line help, or
>> 'help.start()' for an HTML browser interface to help.
>> Type 'q()' to quit R.
>>
>> > library(limma)
>> > library(xlsx)
>> Loading required package: rJava
>> Loading required package: xlsxjars
>> >
>> > sessionInfo()
>> R version 3.3.0 (2016-05-03)
>> Platform: x86_64-pc-linux-gnu (64-bit)
>> Running under: Ubuntu 14.04.5 LTS
>>
>> locale:
>>  [1] LC_CTYPE=en_US.UTF-8          LC_NUMERIC=C LC_TIME=en_US.UTF-8
>>  [4] LC_COLLATE=en_US.UTF-8        LC_MONETARY=en_US.UTF-8
>> LC_MESSAGES=en_US.UTF-8
>>  [7] LC_PAPER=en_US.UTF-8          LC_NAME=en_US.UTF-8
>> LC_ADDRESS=en_US.UTF-8
>> [10] LC_TELEPHONE=en_US.UTF-8      LC_MEASUREMENT=en_US.UTF-8
>> LC_IDENTIFICATION=en_US.UTF-8
>>
>> attached base packages:
>> [1] stats     graphics  grDevices utils     datasets  methods base
>>
>> other attached packages:
>> [1] xlsx_0.5.7     xlsxjars_0.6.1 rJava_0.9-8    limma_3.30.7
>>
>> loaded via a namespace (and not attached):
>> [1] tools_3.3.0
>> >
>> > ma = new("MAList", list(A=matrix(rnorm(300), 30,10),
>> M=matrix(rnorm(300), 30,10)))
>> > #sweep(ma, 2, c(1:10), "*")
>> >
>> > f = match.fun("*")
>> > f
>> function (e1, e2)  .Primitive("*")
>>
>> > f(ma, ma$M)
>>
>> ----> crash to command line with segfault.
>>
>> Best regards,
>> Hilmar
>>
>


From philipp.angerer at helmholtz-muenchen.de  Wed Apr 19 12:42:33 2017
From: philipp.angerer at helmholtz-muenchen.de (Angerer, Philipp)
Date: Wed, 19 Apr 2017 12:42:33 +0200 (CEST)
Subject: [Rd] R 3.4 has broken C++11 support
In-Reply-To: <1492531681.12031.7.camel@iarc.fr>
References: <1893707771.15504454.1492521112411.JavaMail.zimbra@helmholtz-muenchen.de>
 <1492531681.12031.7.camel@iarc.fr>
Message-ID: <642977090.16502618.1492598553592.JavaMail.zimbra@helmholtz-muenchen.de>

Hi!

Well, my linux distribution has very recent versions
of everything, so a working C++11 compiler exists:

$ gcc --version | head -n1
gcc (GCC) 6.3.1 20170306

Could wrong ./configure options be at fault here? See:

https://aur.archlinux.org/cgit/aur.git/tree/PKGBUILD?h=r-devel#n40

My sessionInfo():

$ R-devel --slave -e 'sessionInfo()' | head -n3
R Under development (unstable) (2017-04-18 r72542)
Platform: x86_64-pc-linux-gnu (64-bit)
Running under: Arch Linux

Thanks, Philipp
 

Helmholtz Zentrum Muenchen
Deutsches Forschungszentrum fuer Gesundheit und Umwelt (GmbH)
Ingolstaedter Landstr. 1
85764 Neuherberg
www.helmholtz-muenchen.de
Aufsichtsratsvorsitzende: MinDir'in Baerbel Brumme-Bothe
Geschaeftsfuehrer: Prof. Dr. Guenther Wess, Heinrich Bassler, Dr. Alfons Enhsen
Registergericht: Amtsgericht Muenchen HRB 6466
USt-IdNr: DE 129521671


From plummerm at iarc.fr  Wed Apr 19 13:18:46 2017
From: plummerm at iarc.fr (Martyn Plummer)
Date: Wed, 19 Apr 2017 11:18:46 +0000
Subject: [Rd] R 3.4 has broken C++11 support
In-Reply-To: <642977090.16502618.1492598553592.JavaMail.zimbra@helmholtz-muenchen.de>
References: <1893707771.15504454.1492521112411.JavaMail.zimbra@helmholtz-muenchen.de>
 <1492531681.12031.7.camel@iarc.fr>
 <642977090.16502618.1492598553592.JavaMail.zimbra@helmholtz-muenchen.de>
Message-ID: <1492600726.12031.11.camel@iarc.fr>

On Wed, 2017-04-19 at 12:42 +0200, Angerer, Philipp wrote:
> Hi!
> 
> Well, my linux distribution has very recent versions
> of everything, so a working C++11 compiler exists:
> 
> $ gcc --version | head -n1
> gcc (GCC) 6.3.1 20170306

I am on Fedora 25 which also uses gcc 6.3.1. The default standard for
6.3.1 is C++14. The output from configure should contain these lines:

? Default C++ compiler:??????g++???
? C++98 compiler:????????????g++ -std=gnu++98?
? C++11 compiler:????????????g++ -std=gnu++11?
? C++14 compiler:????????????g++??
? C++17 compiler:??????????????

Please check.

Martyn

> Could wrong ./configure options be at fault here? See:
> 
> https://aur.archlinux.org/cgit/aur.git/tree/PKGBUILD?h=r-devel#n40
> 
> My sessionInfo():
> 
> $ R-devel --slave -e 'sessionInfo()' | head -n3
> R Under development (unstable) (2017-04-18 r72542)
> Platform: x86_64-pc-linux-gnu (64-bit)
> Running under: Arch Linux
> 
> Thanks, Philipp
> ?
> 
> Helmholtz Zentrum Muenchen
> Deutsches Forschungszentrum fuer Gesundheit und Umwelt (GmbH)
> Ingolstaedter Landstr. 1
> 85764 Neuherberg
> www.helmholtz-muenchen.de
> Aufsichtsratsvorsitzende: MinDir'in Baerbel Brumme-Bothe
> Geschaeftsfuehrer: Prof. Dr. Guenther Wess, Heinrich Bassler, Dr.
> Alfons Enhsen
> Registergericht: Amtsgericht Muenchen HRB 6466
> USt-IdNr: DE 129521671
> 

From plummerm at iarc.fr  Wed Apr 19 13:21:30 2017
From: plummerm at iarc.fr (Martyn Plummer)
Date: Wed, 19 Apr 2017 11:21:30 +0000
Subject: [Rd] R 3.4 has broken C++11 support
In-Reply-To: <1251499467.16534396.1492600673669.JavaMail.zimbra@helmholtz-muenchen.de>
References: <1893707771.15504454.1492521112411.JavaMail.zimbra@helmholtz-muenchen.de>
 <1492531681.12031.7.camel@iarc.fr>
 <642977090.16502618.1492598553592.JavaMail.zimbra@helmholtz-muenchen.de>
 <1251499467.16534396.1492600673669.JavaMail.zimbra@helmholtz-muenchen.de>
Message-ID: <1492600889.12031.13.camel@iarc.fr>

On Wed, 2017-04-19 at 13:17 +0200, Angerer, Philipp wrote:
> Hmm, doesn?t look like my R was configured incorrectly:

That looks fine. Can you please give a reproducible example of a
package that compiles correctly on R 3.3.3 but not with R 3.4.0 or R-
devel.

Martyn

> 
> 
> R is now configured for x86_64-pc-linux-gnu
> 
> ? Source directory:??????????.
> ? Installation directory:????/opt/r-devel
> 
> ? C compiler:????????????????gcc??-march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong --param=ssp-buffer-size=4
> ? Fortran 77 compiler:???????gfortran??-g -O2
> 
> ? Default C++ compiler:??????g++???-march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong --param=ssp-buffer-size=4
> ? C++98 compiler:????????????g++ -std=gnu++98 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong --param=ssp-buffer-size=4
> ? C++11 compiler:????????????g++ -std=gnu++11 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong --param=ssp-buffer-size=4
> ? C++14 compiler:????????????g++??-march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong --param=ssp-buffer-size=4
> ? C++17 compiler:??????????????
> ? Fortran 90/95 compiler:????gfortran -g -O2
> ? Obj-C compiler:?????????????
> 
> ? Interfaces supported:??????X11, tcltk
> ? External libraries:????????readline, BLAS(generic), LAPACK(generic), curl
> ? Additional capabilities:???PNG, JPEG, TIFF, NLS, cairo, ICU
> ? Options enabled:???????????shared R library, R profiling
> 
> ? Capabilities skipped:??????
> ? Options not enabled:???????shared BLAS, memory profiling
> 
> ? Recommended packages:??????yes
> 
> ----- Urspr?ngliche Mail -----
> Von: "Angerer, Philipp" <philipp.angerer at helmholtz-muenchen.de>
> An: "Martyn Plummer" <plummerm at iarc.fr>
> CC: "r-devel" <r-devel at r-project.org>
> Gesendet: Mittwoch, 19. April 2017 12:42:33
> Betreff: Re: [Rd] R 3.4 has broken C++11 support
> 
> Hi!?
> 
> Well, my linux distribution has very recent versions?
> of everything, so a working C++11 compiler exists:?
> 
> $ gcc --version | head -n1?
> gcc (GCC) 6.3.1 20170306?
> 
> Could wrong ./configure options be at fault here? See:?
> 
> https://aur.archlinux.org/cgit/aur.git/tree/PKGBUILD?h=r-devel#n40?
> 
> My sessionInfo():?
> 
> $ R-devel --slave -e 'sessionInfo()' | head -n3?
> R Under development (unstable) (2017-04-18 r72542)?
> Platform: x86_64-pc-linux-gnu (64-bit)?
> Running under: Arch Linux?
> 
> Thanks, Philipp?
> 
> ?
> 
> Helmholtz Zentrum Muenchen
> Deutsches Forschungszentrum fuer Gesundheit und Umwelt (GmbH)
> Ingolstaedter Landstr. 1
> 85764 Neuherberg
> www.helmholtz-muenchen.de
> Aufsichtsratsvorsitzende: MinDir'in Baerbel Brumme-Bothe
> Geschaeftsfuehrer: Prof. Dr. Guenther Wess, Heinrich Bassler, Dr.
> Alfons Enhsen
> Registergericht: Amtsgericht Muenchen HRB 6466
> USt-IdNr: DE 129521671
> 

From edd at debian.org  Wed Apr 19 13:22:10 2017
From: edd at debian.org (Dirk Eddelbuettel)
Date: Wed, 19 Apr 2017 06:22:10 -0500
Subject: [Rd] R 3.4 has broken C++11 support
In-Reply-To: <642977090.16502618.1492598553592.JavaMail.zimbra@helmholtz-muenchen.de>
References: <1893707771.15504454.1492521112411.JavaMail.zimbra@helmholtz-muenchen.de>
 <1492531681.12031.7.camel@iarc.fr>
 <642977090.16502618.1492598553592.JavaMail.zimbra@helmholtz-muenchen.de>
Message-ID: <22775.18530.735196.500981@max.eddelbuettel.com>


On 19 April 2017 at 12:42, Angerer, Philipp via R-devel wrote:
| Well, my linux distribution has very recent versions
| of everything, so a working C++11 compiler exists:
| 
| $ gcc --version | head -n1
| gcc (GCC) 6.3.1 20170306
| 
| Could wrong ./configure options be at fault here? See:
| 
| https://aur.archlinux.org/cgit/aur.git/tree/PKGBUILD?h=r-devel#n40
| 
| My sessionInfo():
| 
| $ R-devel --slave -e 'sessionInfo()' | head -n3
| R Under development (unstable) (2017-04-18 r72542)
| Platform: x86_64-pc-linux-gnu (64-bit)
| Running under: Arch Linux

Maybe you can share with us how you configure the build of R-devel?  I tend
to locally build every week or so and I have the following on Ubuntu 16.10:

  CXX = ccache g++ 
  CXXCPP = $(CXX) -E
  CXXFLAGS = -ggdb -pipe -Wall -pedantic $(LTO)
  CXXPICFLAGS = -fpic
  CXX98 = ccache g++
  CXX98FLAGS = -ggdb -pipe -Wall -pedantic
  CXX98PICFLAGS = -fpic
  CXX98STD = -std=gnu++98
  CXX11 = ccache g++
  CXX11FLAGS = -ggdb -pipe -Wall -pedantic
  CXX11PICFLAGS = -fpic
  CXX11STD = -std=gnu++11
  CXX14 = ccache g++
  CXX14FLAGS = -ggdb -pipe -Wall -pedantic
  CXX14PICFLAGS = -fpic
  CXX14STD = 
  CXX17 = 
  CXX17FLAGS = 
  CXX17PICFLAGS = 
  CXX17STD = 

I call configure in build shell script (which has not changed in years) with 

  R_PAPERSIZE=letter				\
  R_BATCHSAVE="--no-save --no-restore" 		\
  R_BROWSER=xdg-open				\
  PAGER=/usr/bin/pager				\
  PERL=/usr/bin/perl				\
  R_UNZIPCMD=/usr/bin/unzip			\
  R_ZIPCMD=/usr/bin/zip				\
  R_PRINTCMD=/usr/bin/lpr			\
  LIBnn=lib					\
  AWK=/usr/bin/awk                              \
  CC="ccache gcc"				\
  CFLAGS="-ggdb -pipe -std=gnu99 -Wall -pedantic" \
  CXX="ccache g++"				\
  CXXFLAGS="-ggdb -pipe -Wall -pedantic" 	\
  FC="ccache gfortran"	 	  		\
  F77="ccache gfortran"				\
  MAKE="make -j4"				\
  ./configure 					\
      --prefix=/usr/local/lib/R-devel 		\
      --enable-R-shlib 				\
      --without-blas 				\
      --without-lapack 				\
      --without-recommended-packages

Works here ...

Dirk

-- 
http://dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org


From murdoch.duncan at gmail.com  Wed Apr 19 13:55:05 2017
From: murdoch.duncan at gmail.com (Duncan Murdoch)
Date: Wed, 19 Apr 2017 07:55:05 -0400
Subject: [Rd] ask.yes.no() function
Message-ID: <135e266b-1f00-e305-74f2-8fe310ea8e55@gmail.com>

As described in 
<https://bugs.r-project.org/bugzilla3/show_bug.cgi?id=17242>, R base 
functions are currently inconsistent in asking interactive "yes/no" type 
questions.  One solution to this is to have a function to do it, and to 
use it consistently.

Rather than just writing such a function and possibly missing some 
desirable feature, I'd like to ask if anyone can point to an existing 
one that is perfect (or nearly perfect, and point out what changes would 
be desirable)?

Duncan Murdoch


From philipp.angerer at helmholtz-muenchen.de  Wed Apr 19 13:17:53 2017
From: philipp.angerer at helmholtz-muenchen.de (Angerer, Philipp)
Date: Wed, 19 Apr 2017 13:17:53 +0200 (CEST)
Subject: [Rd] R 3.4 has broken C++11 support
In-Reply-To: <642977090.16502618.1492598553592.JavaMail.zimbra@helmholtz-muenchen.de>
References: <1893707771.15504454.1492521112411.JavaMail.zimbra@helmholtz-muenchen.de>
 <1492531681.12031.7.camel@iarc.fr>
 <642977090.16502618.1492598553592.JavaMail.zimbra@helmholtz-muenchen.de>
Message-ID: <1251499467.16534396.1492600673669.JavaMail.zimbra@helmholtz-muenchen.de>

Hmm, doesn?t look like my R was configured incorrectly:



R is now configured for x86_64-pc-linux-gnu

  Source directory:          .
  Installation directory:    /opt/r-devel

  C compiler:                gcc  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong --param=ssp-buffer-size=4
  Fortran 77 compiler:       gfortran  -g -O2

  Default C++ compiler:      g++   -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong --param=ssp-buffer-size=4
  C++98 compiler:            g++ -std=gnu++98 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong --param=ssp-buffer-size=4
  C++11 compiler:            g++ -std=gnu++11 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong --param=ssp-buffer-size=4
  C++14 compiler:            g++  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong --param=ssp-buffer-size=4
  C++17 compiler:              
  Fortran 90/95 compiler:    gfortran -g -O2
  Obj-C compiler:             

  Interfaces supported:      X11, tcltk
  External libraries:        readline, BLAS(generic), LAPACK(generic), curl
  Additional capabilities:   PNG, JPEG, TIFF, NLS, cairo, ICU
  Options enabled:           shared R library, R profiling

  Capabilities skipped:      
  Options not enabled:       shared BLAS, memory profiling

  Recommended packages:      yes

----- Urspr?ngliche Mail -----
Von: "Angerer, Philipp" <philipp.angerer at helmholtz-muenchen.de>
An: "Martyn Plummer" <plummerm at iarc.fr>
CC: "r-devel" <r-devel at r-project.org>
Gesendet: Mittwoch, 19. April 2017 12:42:33
Betreff: Re: [Rd] R 3.4 has broken C++11 support

Hi! 

Well, my linux distribution has very recent versions 
of everything, so a working C++11 compiler exists: 

$ gcc --version | head -n1 
gcc (GCC) 6.3.1 20170306 

Could wrong ./configure options be at fault here? See: 

https://aur.archlinux.org/cgit/aur.git/tree/PKGBUILD?h=r-devel#n40 

My sessionInfo(): 

$ R-devel --slave -e 'sessionInfo()' | head -n3 
R Under development (unstable) (2017-04-18 r72542) 
Platform: x86_64-pc-linux-gnu (64-bit) 
Running under: Arch Linux 

Thanks, Philipp 

 

Helmholtz Zentrum Muenchen
Deutsches Forschungszentrum fuer Gesundheit und Umwelt (GmbH)
Ingolstaedter Landstr. 1
85764 Neuherberg
www.helmholtz-muenchen.de
Aufsichtsratsvorsitzende: MinDir'in Baerbel Brumme-Bothe
Geschaeftsfuehrer: Prof. Dr. Guenther Wess, Heinrich Bassler, Dr. Alfons Enhsen
Registergericht: Amtsgericht Muenchen HRB 6466
USt-IdNr: DE 129521671


From sneumann at ipb-halle.de  Wed Apr 19 14:19:40 2017
From: sneumann at ipb-halle.de (Neumann, Steffen)
Date: Wed, 19 Apr 2017 12:19:40 +0000
Subject: [Rd] Default R-3.4.0 RC CXXFLAGS without -O2 on x86_64-linux-gnu
 with g++-5.4.0 causes WARNING from stl_list.h
Message-ID: <assp.1282c13225.1492604380.3239.81.camel@ipb-halle.de>

Hi r-devel,

a recent install of R-3.4.0 RC (2017-04-13 r72510)?
on Linux (Ubuntu 16.04.1 LTS) x86_64-linux-gnu?
with?g++ (Ubuntu 5.4.0-6ubuntu1~16.04.4) 5.4.0 20160609
(see?http://bioconductor.org/checkResults/devel/bioc-LATEST/malbec2-NodeInfo.html?for more)?
results in CXXFLAGS not containing "-O2" as optimisation flag,
there is only "	-Wall", while?CFLAGS are happy with "-g -O2
-Wall"

This has an influence in at least one place
https://stat.ethz.ch/pipermail/bioc-devel/2017-April/010733.html
where we have WARNINGS in R CMD check from "Found ?abort?,?
possibly from ?abort? (C)" in packages xcms/mzR.
The abort() call is not coming from XCMS, but rather?
from the C++ code in the STL:

	[...]
	# 1770 "/usr/include/c++/5/bits/stl_list.h"
	void _M_check_equal_allocators(list& __x) {
	?if (_M_get_Node_allocator())
	???__builtin_abort();
	}

If we compile with -O2 optimisation, this getting rid of?
the abort() symbol, as shown?
in https://github.com/sneumann/xcms/issues/150#issuecomment-293545521

Martin Morgan created a minimum example that shows that?
the symbol is indeed deep down in the STL (see below and in:
https://stat.ethz.ch/pipermail/bioc-devel/2017-April/010837.html?)

This raises several questions:

1) is there any way to avoid the WARNING / abort() inside?
? ?the STL list implementation ? Or just live with it ?

2) If not, is there a reason why the Bioconductor build farm?
? ?Ubuntu machine is not using -O2 as default CXXFLAG ?
? ?BioC admins are trying to have a vanilla R installation with defaults.?
? ?According to Herve Pages, CXXFLAGS without -O2 is default?
? ?since R-3.4 beta, but I don't know enough about the package?
? ?build logic to point to a particular R commit.?

3) I thought about cheating the system and add -O2?
? ?in the package CXXFLAGS, but Martin Morgan?
? ?recommends packages shouldn't mess and override system build defaults
? ?to mask and paper over the actual issue having a nasty abort()?
? ?lurking somewhere.
? ?But I couldn't add PKG_CXXFLAGS=-O2 in first place, since that?
? ?triggers the different WARNING that -O2 is not portable.?

=> Any help and input would be highly appreciated.?

Thanks in advance,?
yours,
Steffen


tmp.cpp by Martin Morgan (also in above linked mail thread)
-------
#include <list>

int foo(int argc, const char *argv[]) {
?????std::list<int> l1, l2;
?????std::list<int>::iterator it;

?????it = l1.begin();
?????l1.splice (it, l2); // mylist1: 1 10 20 30 2 3 4

?????return 0;
}
-------

Test with

???rm -f tmp.o && R CMD SHLIB tmp.cpp && nm tmp.o | grep abort

with compiler settings in ~/.R/Makevars with/without -O2 
-------------
CXXFLAGS = -g -O0
-------------





--
IPB Halle????????????????????AG Massenspektrometrie &
Bioinformatik
Dr. Steffen Neumann??????????http://www.IPB-Halle.DE
Weinberg 3 ? ? ? ? ? ? ? ? ? Tel. +49 (0) 345 5582 - 1470
06120 Halle ? ? ? ? ? ? ? ? ? ? ? +49 (0) 345 5582 - 0 ? ? ? ? ??
sneumann(at)IPB-Halle.DE?????Fax. +49 (0) 345 5582 - 1409


From lawrence.michael at gene.com  Wed Apr 19 14:56:25 2017
From: lawrence.michael at gene.com (Michael Lawrence)
Date: Wed, 19 Apr 2017 05:56:25 -0700
Subject: [Rd] Crash after (wrongly) applying product operator on S4
 object that derives from list
In-Reply-To: <24e4a410-b5c2-c25a-f31f-3637de4d5b88@embl.de>
References: <e3a03266-b7f3-d5df-6940-906f9bd41104@mpiib-berlin.mpg.de>
 <9c987df5-1852-56b6-3de5-89358aaffb0a@mpiib-berlin.mpg.de>
 <24e4a410-b5c2-c25a-f31f-3637de4d5b88@embl.de>
Message-ID: <CAOQ5NyeLwEU3vD1W-+615cXzFsY-S3yn4ccyV3BaDSUMOLT9og@mail.gmail.com>

I think this is a known issue with Java messing with the stack, see
e.g. http://r.789695.n4.nabble.com/Error-memory-exhausted-limit-reached-td4729708.html.

I'll fix the infinite recursion caused by the methods package.

Michael

On Wed, Apr 19, 2017 at 1:12 AM, Wolfgang Huber <wolfgang.huber at embl.de> wrote:
> Dear Hilmar
>
> Perhaps this gives an indication of why the infinite recursion happens:
>
> ## after calling `*` on ma and a matrix:
>
>> showMethods(classes=class(ma), includeDefs=TRUE, inherited = TRUE)
>
>
> Function: * (package base)
> e1="FOOCLASS", e2="matrix"
>     (inherited from: e1="vector", e2="structure")
>     (definition from function "Ops")
> function (e1, e2)
> {
>     value <- callGeneric(e1, e2 at .Data)
>     if (length(value) == length(e2)) {
>         e2 at .Data <- value
>         e2
>     }
>     else value
> }
>
>
>
>> is(ma, "vector")
>
> [1] TRUE
>
> I got that in a fresh session of
>>
>> sessionInfo()
>
> R Under development (unstable) (2017-04-18 r72542)
> Platform: x86_64-apple-darwin16.5.0 (64-bit)
> Running under: macOS Sierra 10.12.4
>
> Best wishes
> Wolfgang
>
> 19.4.17 10:01, Hilmar Berger scripsit:
>>
>> Hi,
>>
>> following up on my own question, I found smaller example that does not
>> require LIMMA:
>>
>> setClass("FOOCLASS",
>>          representation("list")
>> )
>> ma = new("FOOCLASS", list(M=matrix(rnorm(300), 30,10)))
>>
>>> ma * ma$M
>>
>> Error: C stack usage  7970512 is too close to the limit
>>
>>> library(xlsx)
>>
>> Loading required package: rJava
>> Loading required package: xlsxjars
>>>
>>> ma * ma$M
>>
>> ---> Crash
>>
>> xlsx seems to act like a catalyst here, with the product operator
>> running in a deep nested iteration, exhausting the stack. Valgrind shows
>> thousands of invalid stack accesses when loading xslx, which might
>> contribute to the problem. Package xlsx has not been updated since 2014,
>> so it might fail with more current versions of R or Java (I'm using
>> Oracle Java 8).
>>
>> Still, even if xlsx was the package to be blamed for the crash, I fail
>> to understand what exactly the product operator is trying to do in the
>> multiplication of the matrix with the object.
>>
>> Best regards,
>> Hilmar
>>
>> On 18/04/17 18:57, Hilmar Berger wrote:
>>>
>>> Hi,
>>>
>>> this is a problem that occurs in the presence of two libraries (limma,
>>> xlsx) and leads to a crash of R. The problematic code is the wrong
>>> application of sweep or the product ("*") function on an LIMMA MAList
>>> object. To my knowledge, limma does not define a "*" method for MAList
>>> objects.
>>>
>>> If only LIMMA is loaded but not package xlsx, the code does not crash
>>> but rather produces an error ("Error: C stack usage  7970512 is too
>>> close to the limit"). Loading only package rJava instead of xlsx does
>>> also not produce the crash but the error message instead. Note that
>>> xlsx functions are not explicitly used.
>>>
>>> It could be reproduced on two different Linux machines running
>>> R-3.2.5, R-3.3.0 and R-3.3.2.
>>>
>>> Code to reproduce the problem:
>>> ---------------------------------
>>> library(limma)
>>> library(xlsx)
>>>
>>> # a MAList
>>> ma = new("MAList", list(A=matrix(rnorm(300), 30,10),
>>> M=matrix(rnorm(300), 30,10)))
>>>
>>> # This should actually be sweep(ma$M, ...) for functional code, but I
>>> omitted the $M...
>>> #sweep(ma, 2, c(1:10), "*")
>>> # sweep will crash when doing the final operation of applying the
>>> function over the input matrix, which in this case is function "*"
>>>
>>> f = match.fun("*")
>>> # This is not exactly the same as in sweep but it also tries to
>>> multiply the MAList object with a matrix of same size and leads to the
>>> crash
>>> f(ma, ma$M)
>>> # ma * ma$M has the same effect
>>> ---------------------------------
>>>
>>> My output:
>>>
>>> R version 3.3.0 (2016-05-03) -- "Supposedly Educational"
>>> Copyright (C) 2016 The R Foundation for Statistical Computing
>>> Platform: x86_64-pc-linux-gnu (64-bit)
>>>
>>> R is free software and comes with ABSOLUTELY NO WARRANTY.
>>> You are welcome to redistribute it under certain conditions.
>>> Type 'license()' or 'licence()' for distribution details.
>>>
>>>   Natural language support but running in an English locale
>>>
>>> R is a collaborative project with many contributors.
>>> Type 'contributors()' for more information and
>>> 'citation()' on how to cite R or R packages in publications.
>>>
>>> Type 'demo()' for some demos, 'help()' for on-line help, or
>>> 'help.start()' for an HTML browser interface to help.
>>> Type 'q()' to quit R.
>>>
>>> > library(limma)
>>> > library(xlsx)
>>> Loading required package: rJava
>>> Loading required package: xlsxjars
>>> >
>>> > sessionInfo()
>>> R version 3.3.0 (2016-05-03)
>>> Platform: x86_64-pc-linux-gnu (64-bit)
>>> Running under: Ubuntu 14.04.5 LTS
>>>
>>> locale:
>>>  [1] LC_CTYPE=en_US.UTF-8          LC_NUMERIC=C LC_TIME=en_US.UTF-8
>>>  [4] LC_COLLATE=en_US.UTF-8        LC_MONETARY=en_US.UTF-8
>>> LC_MESSAGES=en_US.UTF-8
>>>  [7] LC_PAPER=en_US.UTF-8          LC_NAME=en_US.UTF-8
>>> LC_ADDRESS=en_US.UTF-8
>>> [10] LC_TELEPHONE=en_US.UTF-8      LC_MEASUREMENT=en_US.UTF-8
>>> LC_IDENTIFICATION=en_US.UTF-8
>>>
>>> attached base packages:
>>> [1] stats     graphics  grDevices utils     datasets  methods base
>>>
>>> other attached packages:
>>> [1] xlsx_0.5.7     xlsxjars_0.6.1 rJava_0.9-8    limma_3.30.7
>>>
>>> loaded via a namespace (and not attached):
>>> [1] tools_3.3.0
>>> >
>>> > ma = new("MAList", list(A=matrix(rnorm(300), 30,10),
>>> M=matrix(rnorm(300), 30,10)))
>>> > #sweep(ma, 2, c(1:10), "*")
>>> >
>>> > f = match.fun("*")
>>> > f
>>> function (e1, e2)  .Primitive("*")
>>>
>>> > f(ma, ma$M)
>>>
>>> ----> crash to command line with segfault.
>>>
>>> Best regards,
>>> Hilmar
>>>
>>
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From tomas.kalibera at gmail.com  Wed Apr 19 15:51:24 2017
From: tomas.kalibera at gmail.com (Tomas Kalibera)
Date: Wed, 19 Apr 2017 15:51:24 +0200
Subject: [Rd] Crash after (wrongly) applying product operator on S4
 object that derives from list
In-Reply-To: <CAOQ5NyeLwEU3vD1W-+615cXzFsY-S3yn4ccyV3BaDSUMOLT9og@mail.gmail.com>
References: <e3a03266-b7f3-d5df-6940-906f9bd41104@mpiib-berlin.mpg.de>
 <9c987df5-1852-56b6-3de5-89358aaffb0a@mpiib-berlin.mpg.de>
 <24e4a410-b5c2-c25a-f31f-3637de4d5b88@embl.de>
 <CAOQ5NyeLwEU3vD1W-+615cXzFsY-S3yn4ccyV3BaDSUMOLT9og@mail.gmail.com>
Message-ID: <bda4738f-92e8-6d30-b3d1-eaa151d0c861@gmail.com>


We're working on a workaround for the JVM issue, it should be available 
in rJava soon.
(the JVM issue is only on Linux and it turns infinite/deep recursion 
into a crash of R; it also effectively reduces the R stack size)

Best
Tomas

On 04/19/2017 02:56 PM, Michael Lawrence wrote:
> I think this is a known issue with Java messing with the stack, see
> e.g. http://r.789695.n4.nabble.com/Error-memory-exhausted-limit-reached-td4729708.html.
>
> I'll fix the infinite recursion caused by the methods package.
>
> Michael
>
> On Wed, Apr 19, 2017 at 1:12 AM, Wolfgang Huber <wolfgang.huber at embl.de> wrote:
>> Dear Hilmar
>>
>> Perhaps this gives an indication of why the infinite recursion happens:
>>
>> ## after calling `*` on ma and a matrix:
>>
>>> showMethods(classes=class(ma), includeDefs=TRUE, inherited = TRUE)
>>
>> Function: * (package base)
>> e1="FOOCLASS", e2="matrix"
>>      (inherited from: e1="vector", e2="structure")
>>      (definition from function "Ops")
>> function (e1, e2)
>> {
>>      value <- callGeneric(e1, e2 at .Data)
>>      if (length(value) == length(e2)) {
>>          e2 at .Data <- value
>>          e2
>>      }
>>      else value
>> }
>>
>>
>>
>>> is(ma, "vector")
>> [1] TRUE
>>
>> I got that in a fresh session of
>>> sessionInfo()
>> R Under development (unstable) (2017-04-18 r72542)
>> Platform: x86_64-apple-darwin16.5.0 (64-bit)
>> Running under: macOS Sierra 10.12.4
>>
>> Best wishes
>> Wolfgang
>>
>> 19.4.17 10:01, Hilmar Berger scripsit:
>>> Hi,
>>>
>>> following up on my own question, I found smaller example that does not
>>> require LIMMA:
>>>
>>> setClass("FOOCLASS",
>>>           representation("list")
>>> )
>>> ma = new("FOOCLASS", list(M=matrix(rnorm(300), 30,10)))
>>>
>>>> ma * ma$M
>>> Error: C stack usage  7970512 is too close to the limit
>>>
>>>> library(xlsx)
>>> Loading required package: rJava
>>> Loading required package: xlsxjars
>>>> ma * ma$M
>>> ---> Crash
>>>
>>> xlsx seems to act like a catalyst here, with the product operator
>>> running in a deep nested iteration, exhausting the stack. Valgrind shows
>>> thousands of invalid stack accesses when loading xslx, which might
>>> contribute to the problem. Package xlsx has not been updated since 2014,
>>> so it might fail with more current versions of R or Java (I'm using
>>> Oracle Java 8).
>>>
>>> Still, even if xlsx was the package to be blamed for the crash, I fail
>>> to understand what exactly the product operator is trying to do in the
>>> multiplication of the matrix with the object.
>>>
>>> Best regards,
>>> Hilmar
>>>
>>> On 18/04/17 18:57, Hilmar Berger wrote:
>>>> Hi,
>>>>
>>>> this is a problem that occurs in the presence of two libraries (limma,
>>>> xlsx) and leads to a crash of R. The problematic code is the wrong
>>>> application of sweep or the product ("*") function on an LIMMA MAList
>>>> object. To my knowledge, limma does not define a "*" method for MAList
>>>> objects.
>>>>
>>>> If only LIMMA is loaded but not package xlsx, the code does not crash
>>>> but rather produces an error ("Error: C stack usage  7970512 is too
>>>> close to the limit"). Loading only package rJava instead of xlsx does
>>>> also not produce the crash but the error message instead. Note that
>>>> xlsx functions are not explicitly used.
>>>>
>>>> It could be reproduced on two different Linux machines running
>>>> R-3.2.5, R-3.3.0 and R-3.3.2.
>>>>
>>>> Code to reproduce the problem:
>>>> ---------------------------------
>>>> library(limma)
>>>> library(xlsx)
>>>>
>>>> # a MAList
>>>> ma = new("MAList", list(A=matrix(rnorm(300), 30,10),
>>>> M=matrix(rnorm(300), 30,10)))
>>>>
>>>> # This should actually be sweep(ma$M, ...) for functional code, but I
>>>> omitted the $M...
>>>> #sweep(ma, 2, c(1:10), "*")
>>>> # sweep will crash when doing the final operation of applying the
>>>> function over the input matrix, which in this case is function "*"
>>>>
>>>> f = match.fun("*")
>>>> # This is not exactly the same as in sweep but it also tries to
>>>> multiply the MAList object with a matrix of same size and leads to the
>>>> crash
>>>> f(ma, ma$M)
>>>> # ma * ma$M has the same effect
>>>> ---------------------------------
>>>>
>>>> My output:
>>>>
>>>> R version 3.3.0 (2016-05-03) -- "Supposedly Educational"
>>>> Copyright (C) 2016 The R Foundation for Statistical Computing
>>>> Platform: x86_64-pc-linux-gnu (64-bit)
>>>>
>>>> R is free software and comes with ABSOLUTELY NO WARRANTY.
>>>> You are welcome to redistribute it under certain conditions.
>>>> Type 'license()' or 'licence()' for distribution details.
>>>>
>>>>    Natural language support but running in an English locale
>>>>
>>>> R is a collaborative project with many contributors.
>>>> Type 'contributors()' for more information and
>>>> 'citation()' on how to cite R or R packages in publications.
>>>>
>>>> Type 'demo()' for some demos, 'help()' for on-line help, or
>>>> 'help.start()' for an HTML browser interface to help.
>>>> Type 'q()' to quit R.
>>>>
>>>>> library(limma)
>>>>> library(xlsx)
>>>> Loading required package: rJava
>>>> Loading required package: xlsxjars
>>>>> sessionInfo()
>>>> R version 3.3.0 (2016-05-03)
>>>> Platform: x86_64-pc-linux-gnu (64-bit)
>>>> Running under: Ubuntu 14.04.5 LTS
>>>>
>>>> locale:
>>>>   [1] LC_CTYPE=en_US.UTF-8          LC_NUMERIC=C LC_TIME=en_US.UTF-8
>>>>   [4] LC_COLLATE=en_US.UTF-8        LC_MONETARY=en_US.UTF-8
>>>> LC_MESSAGES=en_US.UTF-8
>>>>   [7] LC_PAPER=en_US.UTF-8          LC_NAME=en_US.UTF-8
>>>> LC_ADDRESS=en_US.UTF-8
>>>> [10] LC_TELEPHONE=en_US.UTF-8      LC_MEASUREMENT=en_US.UTF-8
>>>> LC_IDENTIFICATION=en_US.UTF-8
>>>>
>>>> attached base packages:
>>>> [1] stats     graphics  grDevices utils     datasets  methods base
>>>>
>>>> other attached packages:
>>>> [1] xlsx_0.5.7     xlsxjars_0.6.1 rJava_0.9-8    limma_3.30.7
>>>>
>>>> loaded via a namespace (and not attached):
>>>> [1] tools_3.3.0
>>>>> ma = new("MAList", list(A=matrix(rnorm(300), 30,10),
>>>> M=matrix(rnorm(300), 30,10)))
>>>>> #sweep(ma, 2, c(1:10), "*")
>>>>>
>>>>> f = match.fun("*")
>>>>> f
>>>> function (e1, e2)  .Primitive("*")
>>>>
>>>>> f(ma, ma$M)
>>>> ----> crash to command line with segfault.
>>>>
>>>> Best regards,
>>>> Hilmar
>>>>
>> ______________________________________________
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From philipp.angerer at helmholtz-muenchen.de  Wed Apr 19 16:32:10 2017
From: philipp.angerer at helmholtz-muenchen.de (Angerer, Philipp)
Date: Wed, 19 Apr 2017 16:32:10 +0200 (CEST)
Subject: [Rd] R 3.4 has broken C++11 support
In-Reply-To: <22775.18530.735196.500981@max.eddelbuettel.com>
References: <1893707771.15504454.1492521112411.JavaMail.zimbra@helmholtz-muenchen.de>
 <1492531681.12031.7.camel@iarc.fr>
 <642977090.16502618.1492598553592.JavaMail.zimbra@helmholtz-muenchen.de>
 <22775.18530.735196.500981@max.eddelbuettel.com>
Message-ID: <1850432340.16760624.1492612330199.JavaMail.zimbra@helmholtz-muenchen.de>

Hi Dirk and Martyn,

> That looks fine. Can you please give a reproducible example of a package
> that compiles correctly on R 3.3.3 but not with R 3.4.0 or R-devel.

here you go, it?s pretty much the simplest package possible that needs C++11:

https://github.com/flying-sheep/cxx11test

> Maybe you can share with us how you configure the build of R-devel?

Sure, in the mail you quoted, I already linked exactly that:

https://aur.archlinux.org/cgit/aur.git/tree/PKGBUILD?h=r-devel#n40

> ./configure --prefix=/opt/r-devel \
>	--libdir=/opt/r-devel/lib \
>	--sysconfdir=/etc/R-devel \
>	--datarootdir=/opt/r-devel/share \
>	  rsharedir=/opt/r-devel/share/R/ \
>	  rincludedir=/opt/r-devel/include/R/ \
>	  rdocdir=/opt/r-devel/share/doc/R/ \
>	--with-x \
>	--enable-R-shlib \
>	--with-lapack \
>	--with-blas \
>	F77=gfortran \
>	LIBnn=lib


Thanks and cheers,
Philipp
 

Helmholtz Zentrum Muenchen
Deutsches Forschungszentrum fuer Gesundheit und Umwelt (GmbH)
Ingolstaedter Landstr. 1
85764 Neuherberg
www.helmholtz-muenchen.de
Aufsichtsratsvorsitzende: MinDir'in Baerbel Brumme-Bothe
Geschaeftsfuehrer: Prof. Dr. Guenther Wess, Heinrich Bassler, Dr. Alfons Enhsen
Registergericht: Amtsgericht Muenchen HRB 6466
USt-IdNr: DE 129521671


From plummerm at iarc.fr  Wed Apr 19 17:35:09 2017
From: plummerm at iarc.fr (Martyn Plummer)
Date: Wed, 19 Apr 2017 15:35:09 +0000
Subject: [Rd] R 3.4 has broken C++11 support
In-Reply-To: <1850432340.16760624.1492612330199.JavaMail.zimbra@helmholtz-muenchen.de>
References: <1893707771.15504454.1492521112411.JavaMail.zimbra@helmholtz-muenchen.de>
 <1492531681.12031.7.camel@iarc.fr>
 <642977090.16502618.1492598553592.JavaMail.zimbra@helmholtz-muenchen.de>
 <22775.18530.735196.500981@max.eddelbuettel.com>
 <1850432340.16760624.1492612330199.JavaMail.zimbra@helmholtz-muenchen.de>
Message-ID: <1492616108.12031.22.camel@iarc.fr>

On Wed, 2017-04-19 at 16:32 +0200, Angerer, Philipp wrote:
> Hi Dirk and Martyn,
> 
> > That looks fine. Can you please give a reproducible example of a
> > package
> > that compiles correctly on R 3.3.3 but not with R 3.4.0 or R-devel.
> 
> here you go, it?s pretty much the simplest package possible that
> needs C++11:
> 
> https://github.com/flying-sheep/cxx11test

This works for me (See below). Make sure you are not overwriting some
key variables in a personal Makevars file or a site-wide Makevars.site
file.

[plummerm at D-160182 temp]$ ~/R-devel/r-devel/build/bin/R CMD INSTALL cxx11test_1.0.tar.gz?
* installing to library ?/home/plummerm/R-devel/r-devel/build/library?
* installing *source* package ?cxx11test? ...
** libs
g++ -std=gnu++11 -I/home/plummerm/R-devel/r-devel/build/include -DNDEBUG??-I"/home/plummerm/R-devel/r-devel/build/library/Rcpp/include" -I/usr/local/include???-fpic??-g -O2 -c RcppExports.cpp -o RcppExports.o
g++ -std=gnu++11 -I/home/plummerm/R-devel/r-devel/build/include -DNDEBUG??-I"/home/plummerm/R-devel/r-devel/build/library/Rcpp/include" -I/usr/local/include???-fpic??-g -O2 -c test.cpp -o test.o
g++ -std=gnu++11 -shared -L/usr/local/lib64 -o cxx11test.so RcppExports.o test.o
installing to /home/plummerm/R-devel/r-devel/build/library/cxx11test/libs
** R
** preparing package for lazy loading
** help
No man pages found in package???cxx11test??
*** installing help indices
** building package indices
** testing if installed package can be loaded
* DONE (cxx11test)

Martyn

> > Maybe you can share with us how you configure the build of R-devel?
> 
> Sure, in the mail you quoted, I already linked exactly that:
> 
> https://aur.archlinux.org/cgit/aur.git/tree/PKGBUILD?h=r-devel#n40
> 
> > ./configure --prefix=/opt/r-devel \
> > 	--libdir=/opt/r-devel/lib \
> > 	--sysconfdir=/etc/R-devel \
> > 	--datarootdir=/opt/r-devel/share \
> > 	??rsharedir=/opt/r-devel/share/R/ \
> > 	??rincludedir=/opt/r-devel/include/R/ \
> > 	??rdocdir=/opt/r-devel/share/doc/R/ \
> > 	--with-x \
> > 	--enable-R-shlib \
> > 	--with-lapack \
> > 	--with-blas \
> > 	F77=gfortran \
> > 	LIBnn=lib
> 
> 
> Thanks and cheers,
> Philipp
> ?
> 
> Helmholtz Zentrum Muenchen
> Deutsches Forschungszentrum fuer Gesundheit und Umwelt (GmbH)
> Ingolstaedter Landstr. 1
> 85764 Neuherberg
> www.helmholtz-muenchen.de
> Aufsichtsratsvorsitzende: MinDir'in Baerbel Brumme-Bothe
> Geschaeftsfuehrer: Prof. Dr. Guenther Wess, Heinrich Bassler, Dr.
> Alfons Enhsen
> Registergericht: Amtsgericht Muenchen HRB 6466
> USt-IdNr: DE 129521671
> 

From edd at debian.org  Wed Apr 19 18:08:20 2017
From: edd at debian.org (Dirk Eddelbuettel)
Date: Wed, 19 Apr 2017 11:08:20 -0500
Subject: [Rd] R 3.4 has broken C++11 support
In-Reply-To: <1492616108.12031.22.camel@iarc.fr>
References: <1893707771.15504454.1492521112411.JavaMail.zimbra@helmholtz-muenchen.de>
 <1492531681.12031.7.camel@iarc.fr>
 <642977090.16502618.1492598553592.JavaMail.zimbra@helmholtz-muenchen.de>
 <22775.18530.735196.500981@max.eddelbuettel.com>
 <1850432340.16760624.1492612330199.JavaMail.zimbra@helmholtz-muenchen.de>
 <1492616108.12031.22.camel@iarc.fr>
Message-ID: <22775.35700.656489.719005@max.eddelbuettel.com>


FWIW works for me too, with or without my ~/.R/Makevars

edd at max:~/git$ git clone https://github.com/flying-sheep/cxx11test
Cloning into 'cxx11test'...
remote: Counting objects: 13, done.
remote: Compressing objects: 100% (10/10), done.
remote: Total 13 (delta 0), reused 13 (delta 0), pack-reused 0
Unpacking objects: 100% (13/13), done.
Checking connectivity... done.
edd at max:~/git$ cd cxx11test/
edd at max:~/git/cxx11test(master)$ RD CMD INSTALL .
* installing to library ?/usr/local/lib/R/site-library?
* installing *source* package ?cxx11test? ...
** libs
ccache g++ -std=gnu++11 -I/usr/local/lib/R-devel/lib/R/include -DNDEBUG
-I"/usr/local/lib/R/site-library/Rcpp/include" -I/usr/local/include   -fpic
-ggdb -pipe -Wall -pedantic -c RcppExports.cpp -o RcppExports.o
ccache g++ -std=gnu++11 -I/usr/local/lib/R-devel/lib/R/include -DNDEBUG
-I"/usr/local/lib/R/site-library/Rcpp/include" -I/usr/local/include   -fpic
-ggdb -pipe -Wall -pedantic -c test.cpp -o test.o
ccache g++ -std=gnu++11 -shared -L/usr/local/lib/R-devel/lib/R/lib
-L/usr/local/lib -o cxx11test.so RcppExports.o test.o
-L/usr/local/lib/R-devel/lib/R/lib -lR
installing to /usr/local/lib/R/site-library/cxx11test/libs
** R
** preparing package for lazy loading
** help
No man pages found in package  ?cxx11test?
*** installing help indices
** building package indices
** testing if installed package can be loaded
* DONE (cxx11test)
edd at max:~/git/cxx11test(master)$

Dirk

-- 
http://dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org


From istazahn at gmail.com  Wed Apr 19 19:10:20 2017
From: istazahn at gmail.com (Ista Zahn)
Date: Wed, 19 Apr 2017 13:10:20 -0400
Subject: [Rd] R 3.4 has broken C++11 support
In-Reply-To: <1850432340.16760624.1492612330199.JavaMail.zimbra@helmholtz-muenchen.de>
References: <1893707771.15504454.1492521112411.JavaMail.zimbra@helmholtz-muenchen.de>
 <1492531681.12031.7.camel@iarc.fr>
 <642977090.16502618.1492598553592.JavaMail.zimbra@helmholtz-muenchen.de>
 <22775.18530.735196.500981@max.eddelbuettel.com>
 <1850432340.16760624.1492612330199.JavaMail.zimbra@helmholtz-muenchen.de>
Message-ID: <CA+vqiLETnTgPgJij3KmychuJWrrnpXdjiHyt6OS3=Dmf388qwQ@mail.gmail.com>

Hi Philipp,

Fellow Archlinux user here. I think the problem is with the r-devel
PKGBUILD file, rather than anything wrong in R itself. The PKGBUILD
file does this:

ln -s /etc/R/${i} ${i}

when it should do

ln -s /etc/R-devel/${i} ${i}

You can fix your installed version with

cd /opt/r-devel/lib/R/etc/
sudo rm ./*
sudo ln -s /etc/R-devel/javaconf
sudo ln -s /etc/R-devel/ldpaths
sudo ln -s /etc/R-devel/Makeconf
sudo ln -s /etc/R-devel/Renviron
sudo ln -s /etc/R-devel/repositories

Or (better) fix the PKGBUILD and makepkg/pacman -U

Best,
Ista



On Wed, Apr 19, 2017 at 10:32 AM, Angerer, Philipp via R-devel
<r-devel at r-project.org> wrote:
> Hi Dirk and Martyn,
>
>> That looks fine. Can you please give a reproducible example of a package
>> that compiles correctly on R 3.3.3 but not with R 3.4.0 or R-devel.
>
> here you go, it?s pretty much the simplest package possible that needs C++11:
>
> https://github.com/flying-sheep/cxx11test
>
>> Maybe you can share with us how you configure the build of R-devel?
>
> Sure, in the mail you quoted, I already linked exactly that:
>
> https://aur.archlinux.org/cgit/aur.git/tree/PKGBUILD?h=r-devel#n40
>
>> ./configure --prefix=/opt/r-devel \
>>       --libdir=/opt/r-devel/lib \
>>       --sysconfdir=/etc/R-devel \
>>       --datarootdir=/opt/r-devel/share \
>>         rsharedir=/opt/r-devel/share/R/ \
>>         rincludedir=/opt/r-devel/include/R/ \
>>         rdocdir=/opt/r-devel/share/doc/R/ \
>>       --with-x \
>>       --enable-R-shlib \
>>       --with-lapack \
>>       --with-blas \
>>       F77=gfortran \
>>       LIBnn=lib
>
>
> Thanks and cheers,
> Philipp
>
>
> Helmholtz Zentrum Muenchen
> Deutsches Forschungszentrum fuer Gesundheit und Umwelt (GmbH)
> Ingolstaedter Landstr. 1
> 85764 Neuherberg
> www.helmholtz-muenchen.de
> Aufsichtsratsvorsitzende: MinDir'in Baerbel Brumme-Bothe
> Geschaeftsfuehrer: Prof. Dr. Guenther Wess, Heinrich Bassler, Dr. Alfons Enhsen
> Registergericht: Amtsgericht Muenchen HRB 6466
> USt-IdNr: DE 129521671
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From suharto_anggono at yahoo.com  Thu Apr 20 00:50:41 2017
From: suharto_anggono at yahoo.com (Suharto Anggono Suharto Anggono)
Date: Wed, 19 Apr 2017 22:50:41 +0000 (UTC)
Subject: [Rd] c documentation after change
References: <1068353864.4394079.1492642241512.ref@mail.yahoo.com>
Message-ID: <1068353864.4394079.1492642241512@mail.yahoo.com>

In R 3.4.0 RC, argument list of 'c' as S4 generic function has become
(x, ...) .
However, "S4 methods" section in documentation of 'c' (c.Rd) is not updated yet.

Also, in R 3.4.0 RC, 'c' method of class "Date" ('c.Date') is still not explicitly documented.


From winstonchang1 at gmail.com  Thu Apr 20 05:40:41 2017
From: winstonchang1 at gmail.com (Winston Chang)
Date: Wed, 19 Apr 2017 22:40:41 -0500
Subject: [Rd] system/system2 and open file descriptors
In-Reply-To: <CAFOpNVHtSTypK8sXF+XbtDOmyOFQsTrRRasG2-yH5YBnhRVXww@mail.gmail.com>
References: <CAFOpNVHtSTypK8sXF+XbtDOmyOFQsTrRRasG2-yH5YBnhRVXww@mail.gmail.com>
Message-ID: <CAFOpNVE-9zjCeytGMK9Enq7kjKLSFvbpKb+tnd=Zekqx5+VAJQ@mail.gmail.com>

In addition to the issue of a child process holding onto open files, the
child process can also manipulate a file descriptor in a way that affects
the parent process. For example, calling lseek() in the child process will
move the file offset in the parent process.

Here is a set of commands that demonstrates it. They can be copied and
pasted in a terminal. What it does:
- Creates C program that seeks to the beginning of a file descriptor, and
compiles it to a program named "lseek".
- Creates a file with some text in it.
- Starts R. In R:
    - Opens the text file and reads the first line.
    - Runs lseek in a child process.
    - Reads the rest of the lines.


echo "#include <unistd.h>
int main(void) {
  lseek(3, 0, SEEK_SET);
}" > lseek.c

gcc lseek.c -o lseek

echo "line 1
line 2
line 3" > lines.txt

R
f <- file('lines.txt', 'r')
cat(readLines(f, n = 1), sep = "\n")
system('./lseek')
cat(readLines(f), sep = "\n")


Here's what it outputs:
> f <- file('lines.txt', 'r')
> cat(readLines(f, n = 1), sep = "\n")
line 1
> system('./lseek')
> cat(readLines(f), sep = "\n")
line 2
line 3
line 1
line 2
line 3

The child process has changed what the parent process reads from the file.
(I'm guessing that the reason readLines() prints out "line 2" and "line 3"
before starting over is because it has already buffered the whole file
before lseek is executed.)

This is obviously a highly contrived case, but it illustrates what's
possible. The other issue I mentioned, with child processes holding open
files after the R process exits, is more likely to cause problems in the
real world. That's actually how I encountered this issue in the first
place: when restarting R inside of RStudio on a Mac, if there are any
extant child processes started by system(), they keep some files open, and
this causes RStudio to hang. (There's a fix in progress for RStudio for
this particular issue.)

-Winston



On Tue, Apr 18, 2017 at 3:20 PM, Winston Chang <winstonchang1 at gmail.com>
wrote:

> It seems that the system() and system2() functions don't close file
> descriptors between the fork() and exec() (on Unix platforms, of course).
> This means that the child processes inherit open files and socket
> connections.
>
> Running this (from a terminal) will result in the child process writing to
> a file that was opened by R:
>
> R
> f <- file('foo.txt', 'w')
> system('echo "abc" >&3')
>
>
>
> You can also see the open files if you run the following:
>   f <- file('foo.txt', 'w')
>   system2('sleep', '100', wait=F)
>
> And then in another terminal:
>   lsof -c R -c sleep
> it will show that both the R and sleep processes have the file open:
>   ...
>   R       324 root    3w   REG   0,48        0   4259 /foo.txt
>   ...
>   sleep   327 root    3w   REG   0,48        0   4259 /foo.txt
>
>
> This behavior can cause problems if R spawns a child process that outlives
> the R process, but keeps open some resources.
>
> Would it be possible to add an option to close file descriptors for child
> processes? It would be nice if that were the default, but I suspect that
> making that change would break a lot of existing code.
>
> To take an example from the Python world, subprocess.Popen() has an
> option, close_fds, which closes all file descriptors except 0, 1, and 2.
>   https://docs.python.org/2/library/subprocess.html#popen-constructor
>
>
> -Winston
>

	[[alternative HTML version deleted]]


From plummerm at iarc.fr  Thu Apr 20 10:21:47 2017
From: plummerm at iarc.fr (Martyn Plummer)
Date: Thu, 20 Apr 2017 08:21:47 +0000
Subject: [Rd] Default R-3.4.0 RC CXXFLAGS without -O2 on
 x86_64-linux-gnu with g++-5.4.0 causes WARNING from stl_list.h
In-Reply-To: <assp.1282c13225.1492604380.3239.81.camel@ipb-halle.de>
References: <assp.1282c13225.1492604380.3239.81.camel@ipb-halle.de>
Message-ID: <1492676507.12031.32.camel@iarc.fr>

This is fixed in R-rc_2017-04-19_r72555.tar.gz

If you are affected by this issue then please test the RC tarball. This
is the last chance to detect problems (including those created by the
last-minute patch) before the release of R 3.4.0.

Martyn

On Wed, 2017-04-19 at 12:19 +0000, Neumann, Steffen wrote:
> Hi r-devel,
> 
> a recent install of R-3.4.0 RC (2017-04-13 r72510)?
> on Linux (Ubuntu 16.04.1 LTS) x86_64-linux-gnu?
> with?g++ (Ubuntu 5.4.0-6ubuntu1~16.04.4) 5.4.0 20160609
> (see?http://bioconductor.org/checkResults/devel/bioc-LATEST/malbec2-N
> odeInfo.html?for more)?
> results in CXXFLAGS not containing "-O2" as optimisation flag,
> there is only "	-Wall", while?CFLAGS are happy with "-g -O2
> -Wall"
> 
> This has an influence in at least one place
> https://stat.ethz.ch/pipermail/bioc-devel/2017-April/010733.html
> where we have WARNINGS in R CMD check from "Found ?abort?,?
> possibly from ?abort? (C)" in packages xcms/mzR.
> The abort() call is not coming from XCMS, but rather?
> from the C++ code in the STL:
> 
> 	[...]
> 	# 1770 "/usr/include/c++/5/bits/stl_list.h"
> 	void _M_check_equal_allocators(list& __x) {
> 	?if (_M_get_Node_allocator())
> 	???__builtin_abort();
> 	}
> 
> If we compile with -O2 optimisation, this getting rid of?
> the abort() symbol, as shown?
> in https://github.com/sneumann/xcms/issues/150#issuecomment-293545521
> 
> Martin Morgan created a minimum example that shows that?
> the symbol is indeed deep down in the STL (see below and in:
> https://stat.ethz.ch/pipermail/bioc-devel/2017-April/010837.html?)
> 
> This raises several questions:
> 
> 1) is there any way to avoid the WARNING / abort() inside?
> ? ?the STL list implementation ? Or just live with it ?
> 
> 2) If not, is there a reason why the Bioconductor build farm?
> ? ?Ubuntu machine is not using -O2 as default CXXFLAG ?
> ? ?BioC admins are trying to have a vanilla R installation with
> defaults.?
> ? ?According to Herve Pages, CXXFLAGS without -O2 is default?
> ? ?since R-3.4 beta, but I don't know enough about the package?
> ? ?build logic to point to a particular R commit.?
> 
> 3) I thought about cheating the system and add -O2?
> ? ?in the package CXXFLAGS, but Martin Morgan?
> ? ?recommends packages shouldn't mess and override system build
> defaults
> ? ?to mask and paper over the actual issue having a nasty abort()?
> ? ?lurking somewhere.
> ? ?But I couldn't add PKG_CXXFLAGS=-O2 in first place, since that?
> ? ?triggers the different WARNING that -O2 is not portable.?
> 
> => Any help and input would be highly appreciated.?
> 
> Thanks in advance,?
> yours,
> Steffen
> 
> 
> tmp.cpp by Martin Morgan (also in above linked mail thread)
> -------
> #include <list>
> 
> int foo(int argc, const char *argv[]) {
> ?????std::list<int> l1, l2;
> ?????std::list<int>::iterator it;
> 
> ?????it = l1.begin();
> ?????l1.splice (it, l2); // mylist1: 1 10 20 30 2 3 4
> 
> ?????return 0;
> }
> -------
> 
> Test with
> 
> ???rm -f tmp.o && R CMD SHLIB tmp.cpp && nm tmp.o | grep abort
> 
> with compiler settings in ~/.R/Makevars with/without -O2?
> -------------
> CXXFLAGS = -g -O0
> -------------
> 
> 
> 
> 
> 
> --
> IPB Halle????????????????????AG Massenspektrometrie &
> Bioinformatik
> Dr. Steffen Neumann??????????http://www.IPB-Halle.DE
> Weinberg 3 ? ? ? ? ? ? ? ? ? Tel. +49 (0) 345 5582 - 1470
> 06120 Halle ? ? ? ? ? ? ? ? ? ? ? +49 (0) 345 5582 - 0 ? ? ? ? ??
> sneumann(at)IPB-Halle.DE?????Fax. +49 (0) 345 5582 - 1409
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel

From mdsumner at gmail.com  Thu Apr 20 11:33:52 2017
From: mdsumner at gmail.com (Michael Sumner)
Date: Thu, 20 Apr 2017 09:33:52 +0000
Subject: [Rd] ask.yes.no() function
In-Reply-To: <135e266b-1f00-e305-74f2-8fe310ea8e55@gmail.com>
References: <135e266b-1f00-e305-74f2-8fe310ea8e55@gmail.com>
Message-ID: <CAAcGz9-qtJR7vJu9m=mq70=owr7+Yo-hpFhOTQOpdq6c2_R3hg@mail.gmail.com>

Perhaps worth pointing out "yesno" as a candidate:


https://CRAN.R-project.org/package=yesno
<https://cran.r-project.org/package=yesno>

Cheers, Mike



On Wed, 19 Apr 2017 at 21:55 Duncan Murdoch <murdoch.duncan at gmail.com>
wrote:

As described in
<https://bugs.r-project.org/bugzilla3/show_bug.cgi?id=17242>, R base
functions are currently inconsistent in asking interactive "yes/no" type
questions. One solution to this is to have a function to do it, and to
use it consistently.




Rather than just writing such a function and possibly missing some
desirable feature, I'd like to ask if anyone can point to an existing
one that is perfect (or nearly perfect, and point out what changes would
be desirable)?

Duncan Murdoch

______________________________________________
R-devel at r-project.org mailing list
https://stat.ethz.ch/mailman/listinfo/r-devel
-- 
Dr. Michael Sumner
Software and Database Engineer
Australian Antarctic Division
203 Channel Highway
Kingston Tasmania 7050 Australia

	[[alternative HTML version deleted]]


From jinghuazhao at hotmail.com  Thu Apr 20 11:39:43 2017
From: jinghuazhao at hotmail.com (jing hua zhao)
Date: Thu, 20 Apr 2017 09:39:43 +0000
Subject: [Rd] Intel MKL compiling issue
In-Reply-To: <1492676507.12031.32.camel@iarc.fr>
References: <assp.1282c13225.1492604380.3239.81.camel@ipb-halle.de>,
 <1492676507.12031.32.camel@iarc.fr>
Message-ID: <LOXP123MB115888589BCC98C692154A1CA51B0@LOXP123MB1158.GBRP123.PROD.OUTLOOK.COM>

Dear R-developers,


I would appreciate any insights over compiling R 3.4 with Intel MKL -- I have been successful until R 3.3.3 but now it stops complaining about pcre though it worked without Intel MKL as follows,


./configure LDFLAGS=-L/genetics/data/software/lib CFLAGS=-fPIC -I/genetics/data/software/include --enable-R-shlib


I have used,


export MKL_NUM_THREADS=15
export MKLROOT=/genetics/data/software/intel/composer_xe_2013.4.183/mkl
export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$MKLROOT/lib/intel64
/genetics/data/software/intel/composer_xe_2013.4.183/mkl/bin/mklvars.sh intel64
CPPFLAGS="-I/genetics/data/software/include -L/genetics/data/software/lib" \
./configure --prefix=/genetics/data/software --enable-R-shlib --enable-threads=posix --with-lapack \
 --with-blas="-fopenmp -m64 -I$MKLROOT/include -L$MKLROOT/lib/intel64 -lmkl_gf_lp64 -lmkl_gnu_thread -lmkl_core -lpthread -lm"


Many thanks,



Jing Hua

	[[alternative HTML version deleted]]


From philipp.angerer at helmholtz-muenchen.de  Thu Apr 20 11:17:11 2017
From: philipp.angerer at helmholtz-muenchen.de (Angerer, Philipp)
Date: Thu, 20 Apr 2017 11:17:11 +0200 (CEST)
Subject: [Rd] R 3.4 has broken C++11 support
In-Reply-To: <CA+vqiLETnTgPgJij3KmychuJWrrnpXdjiHyt6OS3=Dmf388qwQ@mail.gmail.com>
References: <1893707771.15504454.1492521112411.JavaMail.zimbra@helmholtz-muenchen.de>
 <1492531681.12031.7.camel@iarc.fr>
 <642977090.16502618.1492598553592.JavaMail.zimbra@helmholtz-muenchen.de>
 <22775.18530.735196.500981@max.eddelbuettel.com>
 <1850432340.16760624.1492612330199.JavaMail.zimbra@helmholtz-muenchen.de>
 <CA+vqiLETnTgPgJij3KmychuJWrrnpXdjiHyt6OS3=Dmf388qwQ@mail.gmail.com>
Message-ID: <2031523708.17629360.1492679831425.JavaMail.zimbra@helmholtz-muenchen.de>

indeed. Makeconf isn?t in the right spot, so the correct vars aren?t set. 

thank you all and sorry for the noise! 


Von: "Ista Zahn" <istazahn at gmail.com> 
An: "Angerer, Philipp" <philipp.angerer at helmholtz-muenchen.de> 
CC: "Dirk Eddelbuettel" <edd at debian.org>, "Martyn Plummer" <plummerm at iarc.fr>, "r-devel" <r-devel at r-project.org> 
Gesendet: Mittwoch, 19. April 2017 19:10:20 
Betreff: Re: [Rd] R 3.4 has broken C++11 support 

Hi Philipp, 

Fellow Archlinux user here. I think the problem is with the r-devel 
PKGBUILD file, rather than anything wrong in R itself. The PKGBUILD 
file does this: 

ln -s /etc/R/${i} ${i} 

when it should do 

ln -s /etc/R-devel/${i} ${i} 

You can fix your installed version with 

cd /opt/r-devel/lib/R/etc/ 
sudo rm ./* 
sudo ln -s /etc/R-devel/javaconf 
sudo ln -s /etc/R-devel/ldpaths 
sudo ln -s /etc/R-devel/Makeconf 
sudo ln -s /etc/R-devel/Renviron 
sudo ln -s /etc/R-devel/repositories 

Or (better) fix the PKGBUILD and makepkg/pacman -U 

Best, 
Ista 



On Wed, Apr 19, 2017 at 10:32 AM, Angerer, Philipp via R-devel 
<r-devel at r-project.org> wrote: 
> Hi Dirk and Martyn, 
> 
>> That looks fine. Can you please give a reproducible example of a package 
>> that compiles correctly on R 3.3.3 but not with R 3.4.0 or R-devel. 
> 
> here you go, it?s pretty much the simplest package possible that needs C++11: 
> 
> https://github.com/flying-sheep/cxx11test 
> 
>> Maybe you can share with us how you configure the build of R-devel? 
> 
> Sure, in the mail you quoted, I already linked exactly that: 
> 
> https://aur.archlinux.org/cgit/aur.git/tree/PKGBUILD?h=r-devel#n40 
> 
>> ./configure --prefix=/opt/r-devel \ 
>> --libdir=/opt/r-devel/lib \ 
>> --sysconfdir=/etc/R-devel \ 
>> --datarootdir=/opt/r-devel/share \ 
>> rsharedir=/opt/r-devel/share/R/ \ 
>> rincludedir=/opt/r-devel/include/R/ \ 
>> rdocdir=/opt/r-devel/share/doc/R/ \ 
>> --with-x \ 
>> --enable-R-shlib \ 
>> --with-lapack \ 
>> --with-blas \ 
>> F77=gfortran \ 
>> LIBnn=lib 
> 
> 
> Thanks and cheers, 
> Philipp 
> 
> 
> Helmholtz Zentrum Muenchen 
> Deutsches Forschungszentrum fuer Gesundheit und Umwelt (GmbH) 
> Ingolstaedter Landstr. 1 
> 85764 Neuherberg 
> www.helmholtz-muenchen.de 
> Aufsichtsratsvorsitzende: MinDir'in Baerbel Brumme-Bothe 
> Geschaeftsfuehrer: Prof. Dr. Guenther Wess, Heinrich Bassler, Dr. Alfons Enhsen 
> Registergericht: Amtsgericht Muenchen HRB 6466 
> USt-IdNr: DE 129521671 
> 
> ______________________________________________ 
> R-devel at r-project.org mailing list 
> https://stat.ethz.ch/mailman/listinfo/r-devel 

 


Helmholtz Zentrum Muenchen

Deutsches Forschungszentrum fuer Gesundheit und Umwelt (GmbH)

Ingolstaedter Landstr. 1

85764 Neuherberg

www.helmholtz-muenchen.de

Aufsichtsratsvorsitzende: MinDir'in Baerbel Brumme-Bothe

Geschaeftsfuehrer: Prof. Dr. Guenther Wess, Heinrich Bassler, Dr. Alfons Enhsen

Registergericht: Amtsgericht Muenchen HRB 6466

USt-IdNr: DE 129521671


	[[alternative HTML version deleted]]


From maechler at stat.math.ethz.ch  Thu Apr 20 15:11:02 2017
From: maechler at stat.math.ethz.ch (Martin Maechler)
Date: Thu, 20 Apr 2017 15:11:02 +0200
Subject: [Rd] c() documentation after change;
	'recursive' in "base" methods
In-Reply-To: <1068353864.4394079.1492642241512@mail.yahoo.com>
References: <1068353864.4394079.1492642241512.ref@mail.yahoo.com>
 <1068353864.4394079.1492642241512@mail.yahoo.com>
Message-ID: <22776.45926.576518.20850@stat.math.ethz.ch>

>>>>> Suharto Anggono Suharto Anggono via R-devel <r-devel at r-project.org>
>>>>>     on Wed, 19 Apr 2017 22:50:41 +0000 writes:

    > In R 3.4.0 RC, argument list of 'c' as S4 generic function has become
    > (x, ...) .
    > However, "S4 methods" section in documentation of 'c' (c.Rd) is not updated yet.

Thank you, I've committed a change (72564 & 72565).

    > Also, in R 3.4.0 RC, 'c' method of class "Date" ('c.Date') is still not explicitly documented.

yes, but that's true for other S3 methods, see below.

This is a bigger issue.  Thank you for raising it!  Look at

-------------------------------- R code --------------------------------------

(mc <- methods("c"))
## [1] c.bibentry*       c.Date            c.difftime        c.noquote         c.numeric_version
## [6] c.person*         c.POSIXct         c.POSIXlt         c.warnings
## and from `lcNSnm` below, you can see that these are from 'base',
## apart from {bibentry, person} which are from 'utils'
lc <- lapply(mc, function(nm) { f <- getAnywhere(nm) })
names(lc) <- sapply(lc, `[[`, "name")
str(lcwh <- lapply(lc, `[[`, "where"))
lcNSnm <- sub("^namespace:", '', sapply(lcwh, function(v) v[length(v)]))
lcNS <- lapply(lcNSnm, asNamespace)
str(lcMeths <-
        sapply(names(lcNS), function(n) get(n, envir=lcNS[[n]], inherits=FALSE),
            simplify = FALSE))
## $ c.bibentry       :function (..., recursive = FALSE)
## $ c.Date           :function (..., recursive = FALSE)
## $ c.difftime       :function (..., recursive = FALSE)
## $ c.noquote        :function (..., recursive = FALSE)
## $ c.numeric_version:function (..., recursive = FALSE)
## $ c.person         :function (..., recursive = FALSE)
## $ c.POSIXct        :function (..., recursive = FALSE)
## $ c.POSIXlt        :function (..., recursive = FALSE)
## $ c.warnings       :function (..., recursive = FALSE)

-------------------------------- ...... --------------------------------------

and from these, only the 'noquote' method has a "\usage{ . }"
documentation.

The reason actually is that I had *wanted* to consider
__removing__ the 'recursive' argument from most of these S3 methods,
since all but  c.numeric_version()  completely disregard it and
it would be nicer if they did not have it.

HOWEVER, if it is removed and a user / code has

    val <- c(...., recursive = r)

then 'recursive' will become part of 'val' which is not desirable.

I had never thought more about this and if we should try or not to
remove it from the S3 methods in all those cases it is unused
... hoping that callers would also *not* set it.

As _one_ consequence I had decided rather *not* documenting it
for the S3 methods where it is (still ?!) part.

Martin


From edd at debian.org  Thu Apr 20 15:13:16 2017
From: edd at debian.org (Dirk Eddelbuettel)
Date: Thu, 20 Apr 2017 08:13:16 -0500
Subject: [Rd] ask.yes.no() function
In-Reply-To: <CAAcGz9-qtJR7vJu9m=mq70=owr7+Yo-hpFhOTQOpdq6c2_R3hg@mail.gmail.com>
References: <135e266b-1f00-e305-74f2-8fe310ea8e55@gmail.com>
 <CAAcGz9-qtJR7vJu9m=mq70=owr7+Yo-hpFhOTQOpdq6c2_R3hg@mail.gmail.com>
Message-ID: <22776.46060.227031.523201@max.eddelbuettel.com>


On 20 April 2017 at 09:33, Michael Sumner wrote:
| Perhaps worth pointing out "yesno" as a candidate:
| 
| https://CRAN.R-project.org/package=yesno
| <https://cran.r-project.org/package=yesno>

Not really as

 i)  base R will not have dependencies outside of it

 ii) more importantly, Duncan asked for a good example of a "consistent" (as
     in: predictable) question function yet you submit one which by design
     *varies* answers to be less predictable.

Dirk
 
| Cheers, Mike
| 
| 
| 
| On Wed, 19 Apr 2017 at 21:55 Duncan Murdoch <murdoch.duncan at gmail.com>
| wrote:
| 
| As described in
| <https://bugs.r-project.org/bugzilla3/show_bug.cgi?id=17242>, R base
| functions are currently inconsistent in asking interactive "yes/no" type
| questions. One solution to this is to have a function to do it, and to
| use it consistently.
| 
| 
| 
| 
| Rather than just writing such a function and possibly missing some
| desirable feature, I'd like to ask if anyone can point to an existing
| one that is perfect (or nearly perfect, and point out what changes would
| be desirable)?
| 
| Duncan Murdoch
| 
| ______________________________________________
| R-devel at r-project.org mailing list
| https://stat.ethz.ch/mailman/listinfo/r-devel
| -- 
| Dr. Michael Sumner
| Software and Database Engineer
| Australian Antarctic Division
| 203 Channel Highway
| Kingston Tasmania 7050 Australia
| 
| 	[[alternative HTML version deleted]]
| 
| ______________________________________________
| R-devel at r-project.org mailing list
| https://stat.ethz.ch/mailman/listinfo/r-devel

-- 
http://dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org


From murdoch.duncan at gmail.com  Thu Apr 20 15:31:01 2017
From: murdoch.duncan at gmail.com (Duncan Murdoch)
Date: Thu, 20 Apr 2017 09:31:01 -0400
Subject: [Rd] ask.yes.no() function
In-Reply-To: <22776.46060.227031.523201@max.eddelbuettel.com>
References: <135e266b-1f00-e305-74f2-8fe310ea8e55@gmail.com>
 <CAAcGz9-qtJR7vJu9m=mq70=owr7+Yo-hpFhOTQOpdq6c2_R3hg@mail.gmail.com>
 <22776.46060.227031.523201@max.eddelbuettel.com>
Message-ID: <2332caab-8155-10f4-389d-9a7c55d0427b@gmail.com>

On 20/04/2017 9:13 AM, Dirk Eddelbuettel wrote:
>
> On 20 April 2017 at 09:33, Michael Sumner wrote:
> | Perhaps worth pointing out "yesno" as a candidate:
> |
> | https://CRAN.R-project.org/package=yesno
> | <https://cran.r-project.org/package=yesno>
>
> Not really as
>
>  i)  base R will not have dependencies outside of it

Indeed, I'm looking for one that can be copied into base R.  The author 
can retain copyright, but we need to be able to offer it under our GPL 
license.

>
>  ii) more importantly, Duncan asked for a good example of a "consistent" (as
>      in: predictable) question function yet you submit one which by design
>      *varies* answers to be less predictable.

Yes, there are reasons to have questions that vary randomly, but I think 
they don't apply to the situations where I want to use this.

Duncan Murdoch

>
> Dirk
>
> | Cheers, Mike
> |
> |
> |
> | On Wed, 19 Apr 2017 at 21:55 Duncan Murdoch <murdoch.duncan at gmail.com>
> | wrote:
> |
> | As described in
> | <https://bugs.r-project.org/bugzilla3/show_bug.cgi?id=17242>, R base
> | functions are currently inconsistent in asking interactive "yes/no" type
> | questions. One solution to this is to have a function to do it, and to
> | use it consistently.
> |
> |
> |
> |
> | Rather than just writing such a function and possibly missing some
> | desirable feature, I'd like to ask if anyone can point to an existing
> | one that is perfect (or nearly perfect, and point out what changes would
> | be desirable)?
> |
> | Duncan Murdoch
> |
> | ______________________________________________
> | R-devel at r-project.org mailing list
> | https://stat.ethz.ch/mailman/listinfo/r-devel
> | --
> | Dr. Michael Sumner
> | Software and Database Engineer
> | Australian Antarctic Division
> | 203 Channel Highway
> | Kingston Tasmania 7050 Australia
> |
> | 	[[alternative HTML version deleted]]
> |
> | ______________________________________________
> | R-devel at r-project.org mailing list
> | https://stat.ethz.ch/mailman/listinfo/r-devel
>


From wdunlap at tibco.com  Thu Apr 20 16:30:07 2017
From: wdunlap at tibco.com (William Dunlap)
Date: Thu, 20 Apr 2017 07:30:07 -0700
Subject: [Rd] system/system2 and open file descriptors
In-Reply-To: <CAFOpNVE-9zjCeytGMK9Enq7kjKLSFvbpKb+tnd=Zekqx5+VAJQ@mail.gmail.com>
References: <CAFOpNVHtSTypK8sXF+XbtDOmyOFQsTrRRasG2-yH5YBnhRVXww@mail.gmail.com>
 <CAFOpNVE-9zjCeytGMK9Enq7kjKLSFvbpKb+tnd=Zekqx5+VAJQ@mail.gmail.com>
Message-ID: <CAF8bMcb-5GMxcM0GU50YR1RufawS6Ynh64YSFwxO_1S7mjrWBQ@mail.gmail.com>

In S+ on Unix-alikes we dealt with this issue by using fcntl(fd,
F_SETFD, 1) to set the close-on-exec flag on a file descriptor as soon
as we opened it.
Bill Dunlap
TIBCO Software
wdunlap tibco.com


On Wed, Apr 19, 2017 at 8:40 PM, Winston Chang <winstonchang1 at gmail.com> wrote:
> In addition to the issue of a child process holding onto open files, the
> child process can also manipulate a file descriptor in a way that affects
> the parent process. For example, calling lseek() in the child process will
> move the file offset in the parent process.
>
> Here is a set of commands that demonstrates it. They can be copied and
> pasted in a terminal. What it does:
> - Creates C program that seeks to the beginning of a file descriptor, and
> compiles it to a program named "lseek".
> - Creates a file with some text in it.
> - Starts R. In R:
>     - Opens the text file and reads the first line.
>     - Runs lseek in a child process.
>     - Reads the rest of the lines.
>
>
> echo "#include <unistd.h>
> int main(void) {
>   lseek(3, 0, SEEK_SET);
> }" > lseek.c
>
> gcc lseek.c -o lseek
>
> echo "line 1
> line 2
> line 3" > lines.txt
>
> R
> f <- file('lines.txt', 'r')
> cat(readLines(f, n = 1), sep = "\n")
> system('./lseek')
> cat(readLines(f), sep = "\n")
>
>
> Here's what it outputs:
>> f <- file('lines.txt', 'r')
>> cat(readLines(f, n = 1), sep = "\n")
> line 1
>> system('./lseek')
>> cat(readLines(f), sep = "\n")
> line 2
> line 3
> line 1
> line 2
> line 3
>
> The child process has changed what the parent process reads from the file.
> (I'm guessing that the reason readLines() prints out "line 2" and "line 3"
> before starting over is because it has already buffered the whole file
> before lseek is executed.)
>
> This is obviously a highly contrived case, but it illustrates what's
> possible. The other issue I mentioned, with child processes holding open
> files after the R process exits, is more likely to cause problems in the
> real world. That's actually how I encountered this issue in the first
> place: when restarting R inside of RStudio on a Mac, if there are any
> extant child processes started by system(), they keep some files open, and
> this causes RStudio to hang. (There's a fix in progress for RStudio for
> this particular issue.)
>
> -Winston
>
>
>
> On Tue, Apr 18, 2017 at 3:20 PM, Winston Chang <winstonchang1 at gmail.com>
> wrote:
>
>> It seems that the system() and system2() functions don't close file
>> descriptors between the fork() and exec() (on Unix platforms, of course).
>> This means that the child processes inherit open files and socket
>> connections.
>>
>> Running this (from a terminal) will result in the child process writing to
>> a file that was opened by R:
>>
>> R
>> f <- file('foo.txt', 'w')
>> system('echo "abc" >&3')
>>
>>
>>
>> You can also see the open files if you run the following:
>>   f <- file('foo.txt', 'w')
>>   system2('sleep', '100', wait=F)
>>
>> And then in another terminal:
>>   lsof -c R -c sleep
>> it will show that both the R and sleep processes have the file open:
>>   ...
>>   R       324 root    3w   REG   0,48        0   4259 /foo.txt
>>   ...
>>   sleep   327 root    3w   REG   0,48        0   4259 /foo.txt
>>
>>
>> This behavior can cause problems if R spawns a child process that outlives
>> the R process, but keeps open some resources.
>>
>> Would it be possible to add an option to close file descriptors for child
>> processes? It would be nice if that were the default, but I suspect that
>> making that change would break a lot of existing code.
>>
>> To take an example from the Python world, subprocess.Popen() has an
>> option, close_fds, which closes all file descriptors except 0, 1, and 2.
>>   https://docs.python.org/2/library/subprocess.html#popen-constructor
>>
>>
>> -Winston
>>
>
>         [[alternative HTML version deleted]]
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From andrzej.oles at gmail.com  Thu Apr 20 17:30:19 2017
From: andrzej.oles at gmail.com (=?UTF-8?Q?Andrzej_Ole=C5=9B?=)
Date: Thu, 20 Apr 2017 17:30:19 +0200
Subject: [Rd] Problems with S4 methods dispatching on `...` (aka dotsMethods)
Message-ID: <CAH7mKkiZNJ_W8EsbEvobHmj1wHDcE2NmYVTuPq8Uxc+aGC6YOw@mail.gmail.com>

Hi all,

I recently encountered some unexpected behavior with S4 generics
dispatching on `...`, which I described in
http://stackoverflow.com/questions/43499203/use-callnextmethod-with-dotsmethods

TL;DR: `callNextMethod()` doesn't work in methods dispatching on `...`, and
arguments of such methods are resolved differently than the arguments of
methods dispatching on formal arguments.

Could this indicate a potential problem with the implementation of the
`...` dispatch?

Cheers,
Andrzej

	[[alternative HTML version deleted]]


From ripley at stats.ox.ac.uk  Thu Apr 20 18:48:41 2017
From: ripley at stats.ox.ac.uk (Prof Brian Ripley)
Date: Thu, 20 Apr 2017 17:48:41 +0100
Subject: [Rd] Intel MKL compiling issue
In-Reply-To: <LOXP123MB115888589BCC98C692154A1CA51B0@LOXP123MB1158.GBRP123.PROD.OUTLOOK.COM>
References: <assp.1282c13225.1492604380.3239.81.camel@ipb-halle.de>
 <1492676507.12031.32.camel@iarc.fr>
 <LOXP123MB115888589BCC98C692154A1CA51B0@LOXP123MB1158.GBRP123.PROD.OUTLOOK.COM>
Message-ID: <f3ba35fa-9409-23b3-a9db-3c7165a060b4@stats.ox.ac.uk>

There is nothing here indicating any kind of error, so no way to give 
any insights ....

And please do follow the posting guide, including not posting HTML.

FWIW, I have tested R 3.4.0 RC (sic) with MKL 11.3, which is later than 
your 2013 ... (on x86_64 Fedora 24).


On 20/04/2017 10:39, jing hua zhao wrote:
> Dear R-developers,
>
>
> I would appreciate any insights over compiling R 3.4 with Intel MKL -- I have been successful until R 3.3.3 but now it stops complaining about pcre though it worked without Intel MKL as follows,
>
>
> ./configure LDFLAGS=-L/genetics/data/software/lib CFLAGS=-fPIC -I/genetics/data/software/include --enable-R-shlib
>
>
> I have used,
>
>
> export MKL_NUM_THREADS=15
> export MKLROOT=/genetics/data/software/intel/composer_xe_2013.4.183/mkl
> export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$MKLROOT/lib/intel64
> /genetics/data/software/intel/composer_xe_2013.4.183/mkl/bin/mklvars.sh intel64
> CPPFLAGS="-I/genetics/data/software/include -L/genetics/data/software/lib" \
> ./configure --prefix=/genetics/data/software --enable-R-shlib --enable-threads=posix --with-lapack \
>  --with-blas="-fopenmp -m64 -I$MKLROOT/include -L$MKLROOT/lib/intel64 -lmkl_gf_lp64 -lmkl_gnu_thread -lmkl_core -lpthread -lm"
>
>
> Many thanks,
>
>
>
> Jing Hua
>
> 	[[alternative HTML version deleted]]
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>


-- 
Brian D. Ripley,                  ripley at stats.ox.ac.uk
Emeritus Professor of Applied Statistics, University of Oxford


From jinghuazhao at hotmail.com  Thu Apr 20 21:27:03 2017
From: jinghuazhao at hotmail.com (jing hua zhao)
Date: Thu, 20 Apr 2017 19:27:03 +0000
Subject: [Rd] Intel MKL compiling issue
In-Reply-To: <f3ba35fa-9409-23b3-a9db-3c7165a060b4@stats.ox.ac.uk>
References: <assp.1282c13225.1492604380.3239.81.camel@ipb-halle.de>
 <1492676507.12031.32.camel@iarc.fr>
 <LOXP123MB115888589BCC98C692154A1CA51B0@LOXP123MB1158.GBRP123.PROD.OUTLOOK.COM>,
 <f3ba35fa-9409-23b3-a9db-3c7165a060b4@stats.ox.ac.uk>
Message-ID: <LOXP123MB1158FC13DA78230C318B01EBA51B0@LOXP123MB1158.GBRP123.PROD.OUTLOOK.COM>

On our Scientific Linux 6, there is


gcc --version
gcc (GCC) 4.4.7 20120313 (Red Hat 4.4.7-17)


and later version (a symbolic at HOME to the system directory),

export MKL=/home/jhz22/11.3.3.210/mkl
export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$MKLROOT/lib/intel64
./configure --prefix=/home/jhz22 LDFLAGS=-L/home/jhz22/lib CPPFLAGS=-I/home/jhz22/include  \
--enable-R-shlib --with-lapack \
--with-blas="-fopenmp -m64 -I$MKL/include -L$MKL/lib/intel64 -lmkl_gf_lp64 -lmkl_gnu_thread -lmkl_core -lpthread -lm"


The errors are as follows,


/usr/bin/ld: warning: libpcre.so.1, needed by ../../lib/libR.so, not found (try using -rpath or -rpath-link)
/usr/bin/ld: warning: liblzma.so.5, needed by ../../lib/libR.so, not found (try using -rpath or -rpath-link)
../../lib/libR.so: undefined reference to `pcre_exec'
../../lib/libR.so: undefined reference to `pcre_study'
../../lib/libR.so: undefined reference to `lzma_alone_decoder at XZ_5.0'
../../lib/libR.so: undefined reference to `pcre_fullinfo'
../../lib/libR.so: undefined reference to `lzma_stream_decoder at XZ_5.0'
../../lib/libR.so: undefined reference to `pcre_version'
../../lib/libR.so: undefined reference to `pcre_maketables'
../../lib/libR.so: undefined reference to `lzma_stream_encoder at XZ_5.0'
../../lib/libR.so: undefined reference to `pcre_free'
../../lib/libR.so: undefined reference to `lzma_raw_decoder at XZ_5.0'
../../lib/libR.so: undefined reference to `lzma_lzma_preset at XZ_5.0'
../../lib/libR.so: undefined reference to `lzma_version_string at XZ_5.0'
../../lib/libR.so: undefined reference to `pcre_jit_stack_alloc'
../../lib/libR.so: undefined reference to `pcre_free_study'
../../lib/libR.so: undefined reference to `lzma_crc64 at XZ_5.0'
../../lib/libR.so: undefined reference to `pcre_assign_jit_stack'
../../lib/libR.so: undefined reference to `lzma_end at XZ_5.0'
../../lib/libR.so: undefined reference to `lzma_raw_encoder at XZ_5.0'
../../lib/libR.so: undefined reference to `pcre_config'
../../lib/libR.so: undefined reference to `pcre_compile'
../../lib/libR.so: undefined reference to `lzma_code at XZ_5.0'
collect2: ld returned 1 exit status
make[3]: *** [R.bin] Error 1
make[3]: Leaving directory `/home/jhz22/R-devel/src/main'
make[2]: *** [R] Error 2
make[2]: Leaving directory `/home/jhz22/R-devel/src/main'
make[1]: *** [R] Error 1
make[1]: Leaving directory `/home/jhz22/R-devel/src'
make: *** [R] Error 1


However, once --enable-R-shlib is dropped, the compile is successful. I suppose I can live with this though the option is required by RStudio. For the MKL version I reported earlier, I have on our RHEL6,


gcc --version

gcc (GCC) 4.4.7 20120313 (Red Hat 4.4.7-17)


The error is as follows -- I did try various versions of pcre and gcc 4.8.2 as well with similar error messages.


ranlib libR.a
gcc -std=gnu99 -Wl,--export-dynamic -fopenmp    -L/usr/local/lib64 -o R.bin Rmain.o CommandLineArgs.o Rdynload.o Renviron.o RNG.o agrep.o apply.o arithmetic.o array.o attrib.o bind.o builtin.o character.o coerce.o colors.o complex.o connections.o context.o cum.o dcf.o datetime.o debug.o deparse.o devices.o dotcode.o dounzip.o dstruct.o duplicate.o edit.o engine.o envir.o errors.o eval.o format.o gevents.o gram.o gram-ex.o graphics.o grep.o identical.o inlined.o inspect.o internet.o iosupport.o lapack.o list.o localecharset.o logic.o main.o mapply.o match.o memory.o names.o objects.o options.o paste.o platform.o plot.o plot3d.o plotmath.o print.o printarray.o printvector.o printutils.o qsort.o radixsort.o random.o raw.o registration.o relop.o rlocale.o saveload.o scan.o seq.o serialize.o sort.o source.o split.o sprintf.o startup.o subassign.o subscript.o subset.o summary.o sysutils.o times.o unique.o util.o version.o g_alab_her.o g_cntrlify.o g_fontdb.o g_her_glyph.o xxxpr.o   `ls ../unix/*.o ../appl/*.o ../nmath/*.o` ../extra/tre/libtre.a    -fopenmp -m64 -I/genetics/data/software/intel/composer_xe_2013.4.183/mkl/include -L/genetics/data/software/intel/composer_xe_2013.4.183/mkl/lib/intel64 -lmkl_gf_lp64 -lmkl_gnu_thread -lmkl_core -lpthread -lm -lgfortran -lm   -lreadline  -lpcre -llzma -lbz2 -lz -lrt -ldl -lm
grep.o: In function `setup_jit':
/genetics/data/software/R-devel/src/main/grep.c:109: undefined reference to `pcre_assign_jit_stack'
/genetics/data/software/R-devel/src/main/grep.c:106: undefined reference to `pcre_jit_stack_alloc'
grep.o: In function `do_regexpr':
/genetics/data/software/R-devel/src/main/grep.c:2832: undefined reference to `pcre_free_study'
grep.o: In function `do_gsub':
/genetics/data/software/R-devel/src/main/grep.c:2116: undefined reference to `pcre_free_study'
grep.o: In function `do_grep':
/genetics/data/software/R-devel/src/main/grep.c:1109: undefined reference to `pcre_free_study'
grep.o: In function `do_strsplit':
/genetics/data/software/R-devel/src/main/grep.c:629: undefined reference to `pcre_free_study'
collect2: ld returned 1 exit status
make[3]: *** [R.bin] Error 1
make[3]: Leaving directory `/genetics/data/software/R-devel/src/main'
make[2]: *** [R] Error 2
make[2]: Leaving directory `/genetics/data/software/R-devel/src/main'
make[1]: *** [R] Error 1
make[1]: Leaving directory `/genetics/data/software/R-devel/src'
make: *** [R] Error 1


________________________________
From: Prof Brian Ripley <ripley at stats.ox.ac.uk>
Sent: 20 April 2017 16:48
To: jing hua zhao; r-devel at r-project.org
Subject: Re: [Rd] Intel MKL compiling issue

There is nothing here indicating any kind of error, so no way to give
any insights ....

And please do follow the posting guide, including not posting HTML.

FWIW, I have tested R 3.4.0 RC (sic) with MKL 11.3, which is later than
your 2013 ... (on x86_64 Fedora 24).


On 20/04/2017 10:39, jing hua zhao wrote:
> Dear R-developers,
>
>
> I would appreciate any insights over compiling R 3.4 with Intel MKL -- I have been successful until R 3.3.3 but now it stops complaining about pcre though it worked without Intel MKL as follows,
>
>
> ./configure LDFLAGS=-L/genetics/data/software/lib CFLAGS=-fPIC -I/genetics/data/software/include --enable-R-shlib
>
>
> I have used,
>
>
> export MKL_NUM_THREADS=15
> export MKLROOT=/genetics/data/software/intel/composer_xe_2013.4.183/mkl
> export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$MKLROOT/lib/intel64
> /genetics/data/software/intel/composer_xe_2013.4.183/mkl/bin/mklvars.sh intel64
> CPPFLAGS="-I/genetics/data/software/include -L/genetics/data/software/lib" \
> ./configure --prefix=/genetics/data/software --enable-R-shlib --enable-threads=posix --with-lapack \
>  --with-blas="-fopenmp -m64 -I$MKLROOT/include -L$MKLROOT/lib/intel64 -lmkl_gf_lp64 -lmkl_gnu_thread -lmkl_core -lpthread -lm"
>
>
> Many thanks,
>
>
>
> Jing Hua
>
>        [[alternative HTML version deleted]]
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>


--
Brian D. Ripley,                  ripley at stats.ox.ac.uk
Emeritus Professor of Applied Statistics, University of Oxford

	[[alternative HTML version deleted]]


From lawrence.michael at gene.com  Thu Apr 20 22:28:02 2017
From: lawrence.michael at gene.com (Michael Lawrence)
Date: Thu, 20 Apr 2017 13:28:02 -0700
Subject: [Rd] Problems with S4 methods dispatching on `...` (aka
	dotsMethods)
In-Reply-To: <CAH7mKkiZNJ_W8EsbEvobHmj1wHDcE2NmYVTuPq8Uxc+aGC6YOw@mail.gmail.com>
References: <CAH7mKkiZNJ_W8EsbEvobHmj1wHDcE2NmYVTuPq8Uxc+aGC6YOw@mail.gmail.com>
Message-ID: <CAOQ5Nye8nD0FK5vuuz83i+5nEOomezMZx0iDjJ6ZKWK9M4Xk_w@mail.gmail.com>

Thanks for pointing out these issues. I have a fix that I will commit soon.

Btw, I would never have seen the post on Stack Overflow. It's best to
report bugs on the bugzilla.

Michael

On Thu, Apr 20, 2017 at 8:30 AM, Andrzej Ole? <andrzej.oles at gmail.com> wrote:
> Hi all,
>
> I recently encountered some unexpected behavior with S4 generics
> dispatching on `...`, which I described in
> http://stackoverflow.com/questions/43499203/use-callnextmethod-with-dotsmethods
>
> TL;DR: `callNextMethod()` doesn't work in methods dispatching on `...`, and
> arguments of such methods are resolved differently than the arguments of
> methods dispatching on formal arguments.
>
> Could this indicate a potential problem with the implementation of the
> `...` dispatch?
>
> Cheers,
> Andrzej
>
>         [[alternative HTML version deleted]]
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From jinghuazhao at hotmail.com  Fri Apr 21 10:44:19 2017
From: jinghuazhao at hotmail.com (jing hua zhao)
Date: Fri, 21 Apr 2017 08:44:19 +0000
Subject: [Rd] Intel MKL compiling issue
In-Reply-To: <LOXP123MB1158FC13DA78230C318B01EBA51B0@LOXP123MB1158.GBRP123.PROD.OUTLOOK.COM>
References: <assp.1282c13225.1492604380.3239.81.camel@ipb-halle.de>
 <1492676507.12031.32.camel@iarc.fr>
 <LOXP123MB115888589BCC98C692154A1CA51B0@LOXP123MB1158.GBRP123.PROD.OUTLOOK.COM>,
 <f3ba35fa-9409-23b3-a9db-3c7165a060b4@stats.ox.ac.uk>,
 <LOXP123MB1158FC13DA78230C318B01EBA51B0@LOXP123MB1158.GBRP123.PROD.OUTLOOK.COM>
Message-ID: <LOXP123MB115842745807A7A216070DE8A51A0@LOXP123MB1158.GBRP123.PROD.OUTLOOK.COM>

Dear Prof Ripley,


This must be confusing as I am able to compile on our RHEL6:


$ uname -a
Linux b08.mrc-epid.private.cam.ac.uk 2.6.32-642.3.1.el6.x86_64 #1 SMP Sun Jun 26 18:16:44 EDT 2016 x86_64 x86_64 x86_64 GNU/Linux
$ gcc --version
gcc (GCC) 4.4.7 20120313 (Red Hat 4.4.7-17)
Copyright (C) 2010 Free Software Foundation, Inc.

The script now mirrors those on the Scientific Linux 6

# 21-4-2017 MRC-Epid JHZ

export MKL_NUM_THREAD=15
export MKL=/genetics/data/software/intel/composer_xe_2013.4.183/mkl
export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$MKLROOT/lib/intel64
./configure LDFLAGS=-L/genetics/data/software/lib CPPFLAGS=-I/genetics/data/software/include --enable-R-shlib \
--with-lapack \
--with-blas="-fopenmp -m64 -I$MKL/include -L$MKL/lib/intel64 -lmkl_gf_lp64 -lmkl_gnu_thread -lmkl_core -lpthread -lm"
make


> sessionInfo()
R Under development (unstable) (2017-04-20 r72569)
Platform: x86_64-pc-linux-gnu (64-bit)
Running under: Red Hat Enterprise Linux Server release 6.8 (Santiago)

Matrix products: default
BLAS/LAPACK: /genetics/data/software/intel/composer_xe_2013.4.183/composer_xe_2013.4.183/mkl/lib/intel64/libmkl_gf_lp64.so

locale:
 [1] LC_CTYPE=en_US.utf8       LC_NUMERIC=C
 [3] LC_TIME=en_US.utf8        LC_COLLATE=en_US.utf8
 [5] LC_MONETARY=en_US.utf8    LC_MESSAGES=en_US.utf8
 [7] LC_PAPER=en_US.utf8       LC_NAME=C
 [9] LC_ADDRESS=C              LC_TELEPHONE=C
[11] LC_MEASUREMENT=en_US.utf8 LC_IDENTIFICATION=C

attached base packages:
[1] stats     graphics  grDevices utils     datasets  methods   base

loaded via a namespace (and not attached):
[1] compiler_3.5.0


Thanks for looking into these; I should have been more patient.


Best regards,



Jing Hua

________________________________
From: jing hua zhao <jinghuazhao at hotmail.com>
Sent: 20 April 2017 19:27
To: Prof Brian Ripley; r-devel at r-project.org
Subject: Re: [Rd] Intel MKL compiling issue


On our Scientific Linux 6, there is


gcc --version
gcc (GCC) 4.4.7 20120313 (Red Hat 4.4.7-17)


and later version (a symbolic at HOME to the system directory),

export MKL=/home/jhz22/11.3.3.210/mkl
export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$MKLROOT/lib/intel64
./configure --prefix=/home/jhz22 LDFLAGS=-L/home/jhz22/lib CPPFLAGS=-I/home/jhz22/include  \
--enable-R-shlib --with-lapack \
--with-blas="-fopenmp -m64 -I$MKL/include -L$MKL/lib/intel64 -lmkl_gf_lp64 -lmkl_gnu_thread -lmkl_core -lpthread -lm"


The errors are as follows,


/usr/bin/ld: warning: libpcre.so.1, needed by ../../lib/libR.so, not found (try using -rpath or -rpath-link)
/usr/bin/ld: warning: liblzma.so.5, needed by ../../lib/libR.so, not found (try using -rpath or -rpath-link)
../../lib/libR.so: undefined reference to `pcre_exec'
../../lib/libR.so: undefined reference to `pcre_study'
../../lib/libR.so: undefined reference to `lzma_alone_decoder at XZ_5.0'
../../lib/libR.so: undefined reference to `pcre_fullinfo'
../../lib/libR.so: undefined reference to `lzma_stream_decoder at XZ_5.0'
../../lib/libR.so: undefined reference to `pcre_version'
../../lib/libR.so: undefined reference to `pcre_maketables'
../../lib/libR.so: undefined reference to `lzma_stream_encoder at XZ_5.0'
../../lib/libR.so: undefined reference to `pcre_free'
../../lib/libR.so: undefined reference to `lzma_raw_decoder at XZ_5.0'
../../lib/libR.so: undefined reference to `lzma_lzma_preset at XZ_5.0'
../../lib/libR.so: undefined reference to `lzma_version_string at XZ_5.0'
../../lib/libR.so: undefined reference to `pcre_jit_stack_alloc'
../../lib/libR.so: undefined reference to `pcre_free_study'
../../lib/libR.so: undefined reference to `lzma_crc64 at XZ_5.0'
../../lib/libR.so: undefined reference to `pcre_assign_jit_stack'
../../lib/libR.so: undefined reference to `lzma_end at XZ_5.0'
../../lib/libR.so: undefined reference to `lzma_raw_encoder at XZ_5.0'
../../lib/libR.so: undefined reference to `pcre_config'
../../lib/libR.so: undefined reference to `pcre_compile'
../../lib/libR.so: undefined reference to `lzma_code at XZ_5.0'
collect2: ld returned 1 exit status
make[3]: *** [R.bin] Error 1
make[3]: Leaving directory `/home/jhz22/R-devel/src/main'
make[2]: *** [R] Error 2
make[2]: Leaving directory `/home/jhz22/R-devel/src/main'
make[1]: *** [R] Error 1
make[1]: Leaving directory `/home/jhz22/R-devel/src'
make: *** [R] Error 1


However, once --enable-R-shlib is dropped, the compile is successful. I suppose I can live with this though the option is required by RStudio. For the MKL version I reported earlier, I have on our RHEL6,


gcc --version

gcc (GCC) 4.4.7 20120313 (Red Hat 4.4.7-17)


The error is as follows -- I did try various versions of pcre and gcc 4.8.2 as well with similar error messages.


ranlib libR.a
gcc -std=gnu99 -Wl,--export-dynamic -fopenmp    -L/usr/local/lib64 -o R.bin Rmain.o CommandLineArgs.o Rdynload.o Renviron.o RNG.o agrep.o apply.o arithmetic.o array.o attrib.o bind.o builtin.o character.o coerce.o colors.o complex.o connections.o context.o cum.o dcf.o datetime.o debug.o deparse.o devices.o dotcode.o dounzip.o dstruct.o duplicate.o edit.o engine.o envir.o errors.o eval.o format.o gevents.o gram.o gram-ex.o graphics.o grep.o identical.o inlined.o inspect.o internet.o iosupport.o lapack.o list.o localecharset.o logic.o main.o mapply.o match.o memory.o names.o objects.o options.o paste.o platform.o plot.o plot3d.o plotmath.o print.o printarray.o printvector.o printutils.o qsort.o radixsort.o random.o raw.o registration.o relop.o rlocale.o saveload.o scan.o seq.o serialize.o sort.o source.o split.o sprintf.o startup.o subassign.o subscript.o subset.o summary.o sysutils.o times.o unique.o util.o version.o g_alab_her.o g_cntrlify.o g_fontdb.o g_her_glyph.o xxxpr.o   `ls ../unix/*.o ../appl/*.o ../nmath/*.o` ../extra/tre/libtre.a    -fopenmp -m64 -I/genetics/data/software/intel/composer_xe_2013.4.183/mkl/include -L/genetics/data/software/intel/composer_xe_2013.4.183/mkl/lib/intel64 -lmkl_gf_lp64 -lmkl_gnu_thread -lmkl_core -lpthread -lm -lgfortran -lm   -lreadline  -lpcre -llzma -lbz2 -lz -lrt -ldl -lm
grep.o: In function `setup_jit':
/genetics/data/software/R-devel/src/main/grep.c:109: undefined reference to `pcre_assign_jit_stack'
/genetics/data/software/R-devel/src/main/grep.c:106: undefined reference to `pcre_jit_stack_alloc'
grep.o: In function `do_regexpr':
/genetics/data/software/R-devel/src/main/grep.c:2832: undefined reference to `pcre_free_study'
grep.o: In function `do_gsub':
/genetics/data/software/R-devel/src/main/grep.c:2116: undefined reference to `pcre_free_study'
grep.o: In function `do_grep':
/genetics/data/software/R-devel/src/main/grep.c:1109: undefined reference to `pcre_free_study'
grep.o: In function `do_strsplit':
/genetics/data/software/R-devel/src/main/grep.c:629: undefined reference to `pcre_free_study'
collect2: ld returned 1 exit status
make[3]: *** [R.bin] Error 1
make[3]: Leaving directory `/genetics/data/software/R-devel/src/main'
make[2]: *** [R] Error 2
make[2]: Leaving directory `/genetics/data/software/R-devel/src/main'
make[1]: *** [R] Error 1
make[1]: Leaving directory `/genetics/data/software/R-devel/src'
make: *** [R] Error 1


________________________________
From: Prof Brian Ripley <ripley at stats.ox.ac.uk>
Sent: 20 April 2017 16:48
To: jing hua zhao; r-devel at r-project.org
Subject: Re: [Rd] Intel MKL compiling issue

There is nothing here indicating any kind of error, so no way to give
any insights ....

And please do follow the posting guide, including not posting HTML.

FWIW, I have tested R 3.4.0 RC (sic) with MKL 11.3, which is later than
your 2013 ... (on x86_64 Fedora 24).


On 20/04/2017 10:39, jing hua zhao wrote:
> Dear R-developers,
>
>
> I would appreciate any insights over compiling R 3.4 with Intel MKL -- I have been successful until R 3.3.3 but now it stops complaining about pcre though it worked without Intel MKL as follows,
>
>
> ./configure LDFLAGS=-L/genetics/data/software/lib CFLAGS=-fPIC -I/genetics/data/software/include --enable-R-shlib
>
>
> I have used,
>
>
> export MKL_NUM_THREADS=15
> export MKLROOT=/genetics/data/software/intel/composer_xe_2013.4.183/mkl
> export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$MKLROOT/lib/intel64
> /genetics/data/software/intel/composer_xe_2013.4.183/mkl/bin/mklvars.sh intel64
> CPPFLAGS="-I/genetics/data/software/include -L/genetics/data/software/lib" \
> ./configure --prefix=/genetics/data/software --enable-R-shlib --enable-threads=posix --with-lapack \
>  --with-blas="-fopenmp -m64 -I$MKLROOT/include -L$MKLROOT/lib/intel64 -lmkl_gf_lp64 -lmkl_gnu_thread -lmkl_core -lpthread -lm"
>
>
> Many thanks,
>
>
>
> Jing Hua
>
>        [[alternative HTML version deleted]]
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>


--
Brian D. Ripley,                  ripley at stats.ox.ac.uk
Emeritus Professor of Applied Statistics, University of Oxford

	[[alternative HTML version deleted]]


From andrzej.oles at gmail.com  Fri Apr 21 11:40:22 2017
From: andrzej.oles at gmail.com (=?UTF-8?Q?Andrzej_Ole=C5=9B?=)
Date: Fri, 21 Apr 2017 11:40:22 +0200
Subject: [Rd] Problems with S4 methods dispatching on `...` (aka
	dotsMethods)
In-Reply-To: <CAOQ5Nye8nD0FK5vuuz83i+5nEOomezMZx0iDjJ6ZKWK9M4Xk_w@mail.gmail.com>
References: <CAH7mKkiZNJ_W8EsbEvobHmj1wHDcE2NmYVTuPq8Uxc+aGC6YOw@mail.gmail.com>
 <CAOQ5Nye8nD0FK5vuuz83i+5nEOomezMZx0iDjJ6ZKWK9M4Xk_w@mail.gmail.com>
Message-ID: <CAH7mKkgwa_7FRChyrxmKf8Ub_mDtX-WfREq-A4FbCvanQt8zpg@mail.gmail.com>

Great, thanks Michael for you quick response!

I started off with a question on SO because I was not sure whether this was
an actual bug or I was just missing something obvious. I'm looking forward
to the patch.

Cheers,
Andrzej


On Thu, Apr 20, 2017 at 10:28 PM, Michael Lawrence <
lawrence.michael at gene.com> wrote:

> Thanks for pointing out these issues. I have a fix that I will commit soon.
>
> Btw, I would never have seen the post on Stack Overflow. It's best to
> report bugs on the bugzilla.
>
> Michael
>
> On Thu, Apr 20, 2017 at 8:30 AM, Andrzej Ole? <andrzej.oles at gmail.com>
> wrote:
> > Hi all,
> >
> > I recently encountered some unexpected behavior with S4 generics
> > dispatching on `...`, which I described in
> > http://stackoverflow.com/questions/43499203/use-callnextmethod-with-
> dotsmethods
> >
> > TL;DR: `callNextMethod()` doesn't work in methods dispatching on `...`,
> and
> > arguments of such methods are resolved differently than the arguments of
> > methods dispatching on formal arguments.
> >
> > Could this indicate a potential problem with the implementation of the
> > `...` dispatch?
> >
> > Cheers,
> > Andrzej
> >
> >         [[alternative HTML version deleted]]
> >
> > ______________________________________________
> > R-devel at r-project.org mailing list
> > https://stat.ethz.ch/mailman/listinfo/r-devel
>

	[[alternative HTML version deleted]]


From mikko.korpela at helsinki.fi  Fri Apr 21 12:49:33 2017
From: mikko.korpela at helsinki.fi (Mikko Korpela)
Date: Fri, 21 Apr 2017 13:49:33 +0300
Subject: [Rd] tempdir() may be deleted during long-running R session
Message-ID: <c78e9022-04c2-3cda-5898-dceec8bc5e94@helsinki.fi>

Temporary files not accessed for a long time are automatically removed 
in some Linux distributions and probably other operating systems too, 
depending on system configuration. This may affect the per-session 
temporary directory, the path of which is returned by tempdir(). I think 
it would be nice if R automatically tried to recreate a missing 
tempdir() but this could have some performance implications.

I ran the same test (below) on R 3.3.3 patched, R 3.4.0 beta, and 
R-devel, all at r72499 (2017-04-09) and compiled by myself. The results 
from the test were practically identical on all of those versions, the 
test platform being Ubuntu 14.04.5 LTS. This system is configured for a 
/tmp cleanup threshold of 7 days of inactivity (which is the default). 
After a wait of roughly 10 days, the R temporary directory had been 
deleted by an automatic cleanup procedure, and a call to `?` failed. 
This StackExchange question has some answers about the Ubuntu /tmp 
cleanup practice: https://askubuntu.com/q/20783

a <- print(tempdir())
# [1] "/tmp/user/1069138/RtmpGc9M5z"
dir.exists(a) # TRUE
# [1] TRUE
Sys.time()
# [1] "2017-04-10 16:00:30 EEST"
## Wait for one week (Ubuntu 14.04.5 LTS)
print(Sys.time()); ?regex
# [1] "2017-04-20 14:17:29 EEST"
# Error in file(out, "wt") : cannot open the connection
# In addition: Warning message:
# In file(out, "wt") :
#   cannot open file '/tmp/user/1069138/RtmpGc9M5z/Rtxt3dbb65870ad4': No 
such file or directory
b <- print(tempdir())
# [1] "/tmp/user/1069138/RtmpGc9M5z"
identical(a, b)
# [1] TRUE
dir.exists(b)
# [1] FALSE

-- 
Mikko Korpela
Department of Geosciences and Geography
University of Helsinki


From ripley at stats.ox.ac.uk  Fri Apr 21 13:03:32 2017
From: ripley at stats.ox.ac.uk (Prof Brian Ripley)
Date: Fri, 21 Apr 2017 12:03:32 +0100
Subject: [Rd] tempdir() may be deleted during long-running R session
In-Reply-To: <c78e9022-04c2-3cda-5898-dceec8bc5e94@helsinki.fi>
References: <c78e9022-04c2-3cda-5898-dceec8bc5e94@helsinki.fi>
Message-ID: <15e3b0a3-e0a8-2da8-27c4-9268a5751986@stats.ox.ac.uk>

 From the R-admin manual ?5:

'Various environment variables can be set to determine where R creates 
its per-session temporary directory. The environment variables TMPDIR, 
TMP and TEMP are searched in turn and the first one which is set and 
points to a writable area is used. If none do, the final default is /tmp 
on Unix-alikes and the value of R_USER on Windows. The path should be an 
absolute path not containing spaces (and it is best to avoid 
non-alphanumeric characters such as +).

Some Unix-alike systems are set up to remove files and directories 
periodically from /tmp, for example by a cron job running tmpwatch. Set 
TMPDIR to another directory before starting long-running jobs on such a 
system.'


On 21/04/2017 11:49, Mikko Korpela wrote:
> Temporary files not accessed for a long time are automatically removed
> in some Linux distributions and probably other operating systems too,
> depending on system configuration. This may affect the per-session
> temporary directory, the path of which is returned by tempdir(). I think

Not for those who follow the manual and know that sysadmnins have 
enabled such a script.

> it would be nice if R automatically tried to recreate a missing
> tempdir() but this could have some performance implications.
>
> I ran the same test (below) on R 3.3.3 patched, R 3.4.0 beta, and
> R-devel, all at r72499 (2017-04-09) and compiled by myself. The results
> from the test were practically identical on all of those versions, the
> test platform being Ubuntu 14.04.5 LTS. This system is configured for a
> /tmp cleanup threshold of 7 days of inactivity (which is the default).
> After a wait of roughly 10 days, the R temporary directory had been
> deleted by an automatic cleanup procedure, and a call to `?` failed.
> This StackExchange question has some answers about the Ubuntu /tmp
> cleanup practice: https://askubuntu.com/q/20783
>
> a <- print(tempdir())
> # [1] "/tmp/user/1069138/RtmpGc9M5z"
> dir.exists(a) # TRUE
> # [1] TRUE
> Sys.time()
> # [1] "2017-04-10 16:00:30 EEST"
> ## Wait for one week (Ubuntu 14.04.5 LTS)
> print(Sys.time()); ?regex
> # [1] "2017-04-20 14:17:29 EEST"
> # Error in file(out, "wt") : cannot open the connection
> # In addition: Warning message:
> # In file(out, "wt") :
> #   cannot open file '/tmp/user/1069138/RtmpGc9M5z/Rtxt3dbb65870ad4': No
> such file or directory
> b <- print(tempdir())
> # [1] "/tmp/user/1069138/RtmpGc9M5z"
> identical(a, b)
> # [1] TRUE
> dir.exists(b)
> # [1] FALSE
>


-- 
Brian D. Ripley,                  ripley at stats.ox.ac.uk
Emeritus Professor of Applied Statistics, University of Oxford


From jorismeys at gmail.com  Fri Apr 21 13:42:13 2017
From: jorismeys at gmail.com (Joris Meys)
Date: Fri, 21 Apr 2017 13:42:13 +0200
Subject: [Rd] tempdir() may be deleted during long-running R session
In-Reply-To: <15e3b0a3-e0a8-2da8-27c4-9268a5751986@stats.ox.ac.uk>
References: <c78e9022-04c2-3cda-5898-dceec8bc5e94@helsinki.fi>
 <15e3b0a3-e0a8-2da8-27c4-9268a5751986@stats.ox.ac.uk>
Message-ID: <CAO1zAVYBkmiL_eJcNV0AVEGh5=bFoXkZSvXa7ZjDC1x6Z_DRgw@mail.gmail.com>

In defense of the OP: I would have checked ?tmpdir and missed the
information in the manual as well. On the help page there's ample
information on the underlying processes that create the dir on multiple
platforms. I think adding the last two sentences of prof. Ripley's quote as
a warning to the help page, would be worth the effort.

I do wonder though why you would run something that lasts 10 days and still
rely on something that is called a "temporary" directory.

Best regards
Joris

On Fri, Apr 21, 2017 at 1:03 PM, Prof Brian Ripley <ripley at stats.ox.ac.uk>
wrote:

> From the R-admin manual ?5:
>
> 'Various environment variables can be set to determine where R creates its
> per-session temporary directory. The environment variables TMPDIR, TMP and
> TEMP are searched in turn and the first one which is set and points to a
> writable area is used. If none do, the final default is /tmp on Unix-alikes
> and the value of R_USER on Windows. The path should be an absolute path not
> containing spaces (and it is best to avoid non-alphanumeric characters such
> as +).
>
> Some Unix-alike systems are set up to remove files and directories
> periodically from /tmp, for example by a cron job running tmpwatch. Set
> TMPDIR to another directory before starting long-running jobs on such a
> system.'
>
>
> On 21/04/2017 11:49, Mikko Korpela wrote:
>
>> Temporary files not accessed for a long time are automatically removed
>> in some Linux distributions and probably other operating systems too,
>> depending on system configuration. This may affect the per-session
>> temporary directory, the path of which is returned by tempdir(). I think
>>
>
> Not for those who follow the manual and know that sysadmnins have enabled
> such a script.
>
>
> it would be nice if R automatically tried to recreate a missing
>> tempdir() but this could have some performance implications.
>>
>> I ran the same test (below) on R 3.3.3 patched, R 3.4.0 beta, and
>> R-devel, all at r72499 (2017-04-09) and compiled by myself. The results
>> from the test were practically identical on all of those versions, the
>> test platform being Ubuntu 14.04.5 LTS. This system is configured for a
>> /tmp cleanup threshold of 7 days of inactivity (which is the default).
>> After a wait of roughly 10 days, the R temporary directory had been
>> deleted by an automatic cleanup procedure, and a call to `?` failed.
>> This StackExchange question has some answers about the Ubuntu /tmp
>> cleanup practice: https://askubuntu.com/q/20783
>>
>> a <- print(tempdir())
>> # [1] "/tmp/user/1069138/RtmpGc9M5z"
>> dir.exists(a) # TRUE
>> # [1] TRUE
>> Sys.time()
>> # [1] "2017-04-10 16:00:30 EEST"
>> ## Wait for one week (Ubuntu 14.04.5 LTS)
>> print(Sys.time()); ?regex
>> # [1] "2017-04-20 14:17:29 EEST"
>> # Error in file(out, "wt") : cannot open the connection
>> # In addition: Warning message:
>> # In file(out, "wt") :
>> #   cannot open file '/tmp/user/1069138/RtmpGc9M5z/Rtxt3dbb65870ad4': No
>> such file or directory
>> b <- print(tempdir())
>> # [1] "/tmp/user/1069138/RtmpGc9M5z"
>> identical(a, b)
>> # [1] TRUE
>> dir.exists(b)
>> # [1] FALSE
>>
>>
>
> --
> Brian D. Ripley,                  ripley at stats.ox.ac.uk
> Emeritus Professor of Applied Statistics, University of Oxford
>
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>



-- 
Joris Meys
Statistical consultant

Ghent University
Faculty of Bioscience Engineering
Department of Mathematical Modelling, Statistics and Bio-Informatics

tel :  +32 (0)9 264 61 79
Joris.Meys at Ugent.be
-------------------------------
Disclaimer : http://helpdesk.ugent.be/e-maildisclaimer.php

	[[alternative HTML version deleted]]


From mikko.korpela at helsinki.fi  Fri Apr 21 14:13:26 2017
From: mikko.korpela at helsinki.fi (Mikko Korpela)
Date: Fri, 21 Apr 2017 15:13:26 +0300
Subject: [Rd] tempdir() may be deleted during long-running R session
In-Reply-To: <15e3b0a3-e0a8-2da8-27c4-9268a5751986@stats.ox.ac.uk>
References: <c78e9022-04c2-3cda-5898-dceec8bc5e94@helsinki.fi>
 <15e3b0a3-e0a8-2da8-27c4-9268a5751986@stats.ox.ac.uk>
Message-ID: <4f0797c5-a078-67ae-3992-cd66a82b454a@helsinki.fi>

On 21/04/17 14:03, Prof Brian Ripley wrote:
> From the R-admin manual ?5:
>
> 'Various environment variables can be set to determine where R creates
> its per-session temporary directory. The environment variables TMPDIR,
> TMP and TEMP are searched in turn and the first one which is set and
> points to a writable area is used. If none do, the final default is /tmp
> on Unix-alikes and the value of R_USER on Windows. The path should be an
> absolute path not containing spaces (and it is best to avoid
> non-alphanumeric characters such as +).
>
> Some Unix-alike systems are set up to remove files and directories
> periodically from /tmp, for example by a cron job running tmpwatch. Set
> TMPDIR to another directory before starting long-running jobs on such a
> system.'

I am sorry for having missed this part of the manual, where the issue 
indeed is clearly documented.
>
>
> On 21/04/2017 11:49, Mikko Korpela wrote:
>> Temporary files not accessed for a long time are automatically removed
>> in some Linux distributions and probably other operating systems too,
>> depending on system configuration. This may affect the per-session
>> temporary directory, the path of which is returned by tempdir(). I think
>
> Not for those who follow the manual and know that sysadmnins have
> enabled such a script.
>
>> it would be nice if R automatically tried to recreate a missing
>> tempdir() but this could have some performance implications.

Despite my obvious failure to read the manual and report this properly, 
I will try to make a case. I understand that data stored in a temporary 
file may disappear, and for that reason using an alternative TMPDIR 
might be advisable. However, I think that creating a new temporary file 
is a different case, and it would be nice if `?` and `help` continued to 
work, for example. I understand if this will not be put on the R core 
list of things to do.

>>
>> I ran the same test (below) on R 3.3.3 patched, R 3.4.0 beta, and
>> R-devel, all at r72499 (2017-04-09) and compiled by myself. The results
>> from the test were practically identical on all of those versions, the
>> test platform being Ubuntu 14.04.5 LTS. This system is configured for a
>> /tmp cleanup threshold of 7 days of inactivity (which is the default).
>> After a wait of roughly 10 days, the R temporary directory had been
>> deleted by an automatic cleanup procedure, and a call to `?` failed.
>> This StackExchange question has some answers about the Ubuntu /tmp
>> cleanup practice: https://askubuntu.com/q/20783
>>
>> a <- print(tempdir())
>> # [1] "/tmp/user/1069138/RtmpGc9M5z"
>> dir.exists(a) # TRUE
>> # [1] TRUE
>> Sys.time()
>> # [1] "2017-04-10 16:00:30 EEST"
>> ## Wait for one week (Ubuntu 14.04.5 LTS)
>> print(Sys.time()); ?regex
>> # [1] "2017-04-20 14:17:29 EEST"
>> # Error in file(out, "wt") : cannot open the connection
>> # In addition: Warning message:
>> # In file(out, "wt") :
>> #   cannot open file '/tmp/user/1069138/RtmpGc9M5z/Rtxt3dbb65870ad4': No
>> such file or directory
>> b <- print(tempdir())
>> # [1] "/tmp/user/1069138/RtmpGc9M5z"
>> identical(a, b)
>> # [1] TRUE
>> dir.exists(b)
>> # [1] FALSE
>>

-- 
Mikko Korpela
Department of Geosciences and Geography
University of Helsinki


From mikko.korpela at helsinki.fi  Fri Apr 21 14:31:35 2017
From: mikko.korpela at helsinki.fi (Mikko Korpela)
Date: Fri, 21 Apr 2017 15:31:35 +0300
Subject: [Rd] tempdir() may be deleted during long-running R session
In-Reply-To: <CAO1zAVYBkmiL_eJcNV0AVEGh5=bFoXkZSvXa7ZjDC1x6Z_DRgw@mail.gmail.com>
References: <c78e9022-04c2-3cda-5898-dceec8bc5e94@helsinki.fi>
 <15e3b0a3-e0a8-2da8-27c4-9268a5751986@stats.ox.ac.uk>
 <CAO1zAVYBkmiL_eJcNV0AVEGh5=bFoXkZSvXa7ZjDC1x6Z_DRgw@mail.gmail.com>
Message-ID: <6237dc30-309b-8fe7-388b-84a101139bec@helsinki.fi>

On 21/04/17 14:42, Joris Meys wrote:
> In defense of the OP: I would have checked ?tmpdir and missed the
> information in the manual as well. On the help page there's ample
> information on the underlying processes that create the dir on multiple
> platforms. I think adding the last two sentences of prof. Ripley's quote as
> a warning to the help page, would be worth the effort.
>
> I do wonder though why you would run something that lasts 10 days and still
> rely on something that is called a "temporary" directory.

For me, intuitively, the temporary directory is a place for temporary 
files. I mean, the directory itself does not seem as temporary as the 
files in it. I think this is not entirely unsupported by the wording in 
?tempdir: "per-session temporary directory". I now understand that 
"per-session" rather means that tempdir() returns a constant value 
during a single R session, but the directory itself may disappear due to 
things not controlled by R (documented elsewhere as pointed out by Prof 
Ripley).

- Mikko

> Best regards
> Joris
>
> On Fri, Apr 21, 2017 at 1:03 PM, Prof Brian Ripley <ripley at stats.ox.ac.uk>
> wrote:
>
>> From the R-admin manual ?5:
>>
>> 'Various environment variables can be set to determine where R creates its
>> per-session temporary directory. The environment variables TMPDIR, TMP and
>> TEMP are searched in turn and the first one which is set and points to a
>> writable area is used. If none do, the final default is /tmp on Unix-alikes
>> and the value of R_USER on Windows. The path should be an absolute path not
>> containing spaces (and it is best to avoid non-alphanumeric characters such
>> as +).
>>
>> Some Unix-alike systems are set up to remove files and directories
>> periodically from /tmp, for example by a cron job running tmpwatch. Set
>> TMPDIR to another directory before starting long-running jobs on such a
>> system.'
>>
>>
>> On 21/04/2017 11:49, Mikko Korpela wrote:
>>
>>> Temporary files not accessed for a long time are automatically removed
>>> in some Linux distributions and probably other operating systems too,
>>> depending on system configuration. This may affect the per-session
>>> temporary directory, the path of which is returned by tempdir(). I think
>>>
>>
>> Not for those who follow the manual and know that sysadmnins have enabled
>> such a script.
>>
>>
>> it would be nice if R automatically tried to recreate a missing
>>> tempdir() but this could have some performance implications.
>>>
>>> I ran the same test (below) on R 3.3.3 patched, R 3.4.0 beta, and
>>> R-devel, all at r72499 (2017-04-09) and compiled by myself. The results
>>> from the test were practically identical on all of those versions, the
>>> test platform being Ubuntu 14.04.5 LTS. This system is configured for a
>>> /tmp cleanup threshold of 7 days of inactivity (which is the default).
>>> After a wait of roughly 10 days, the R temporary directory had been
>>> deleted by an automatic cleanup procedure, and a call to `?` failed.
>>> This StackExchange question has some answers about the Ubuntu /tmp
>>> cleanup practice: https://askubuntu.com/q/20783
>>>
>>> a <- print(tempdir())
>>> # [1] "/tmp/user/1069138/RtmpGc9M5z"
>>> dir.exists(a) # TRUE
>>> # [1] TRUE
>>> Sys.time()
>>> # [1] "2017-04-10 16:00:30 EEST"
>>> ## Wait for one week (Ubuntu 14.04.5 LTS)
>>> print(Sys.time()); ?regex
>>> # [1] "2017-04-20 14:17:29 EEST"
>>> # Error in file(out, "wt") : cannot open the connection
>>> # In addition: Warning message:
>>> # In file(out, "wt") :
>>> #   cannot open file '/tmp/user/1069138/RtmpGc9M5z/Rtxt3dbb65870ad4': No
>>> such file or directory
>>> b <- print(tempdir())
>>> # [1] "/tmp/user/1069138/RtmpGc9M5z"
>>> identical(a, b)
>>> # [1] TRUE
>>> dir.exists(b)
>>> # [1] FALSE
>>>
>>>
>>
>> --
>> Brian D. Ripley,                  ripley at stats.ox.ac.uk
>> Emeritus Professor of Applied Statistics, University of Oxford
>>
>>
>> ______________________________________________
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>


From edd at debian.org  Fri Apr 21 14:42:12 2017
From: edd at debian.org (Dirk Eddelbuettel)
Date: Fri, 21 Apr 2017 07:42:12 -0500
Subject: [Rd] tempdir() may be deleted during long-running R session
In-Reply-To: <4f0797c5-a078-67ae-3992-cd66a82b454a@helsinki.fi>
References: <c78e9022-04c2-3cda-5898-dceec8bc5e94@helsinki.fi>
 <15e3b0a3-e0a8-2da8-27c4-9268a5751986@stats.ox.ac.uk>
 <4f0797c5-a078-67ae-3992-cd66a82b454a@helsinki.fi>
Message-ID: <22777.65060.465733.160015@max.eddelbuettel.com>


On 21 April 2017 at 15:13, Mikko Korpela wrote:
| Despite my obvious failure to read the manual and report this properly, 
| I will try to make a case. I understand that data stored in a temporary 
| file may disappear, and for that reason using an alternative TMPDIR 
| might be advisable. However, I think that creating a new temporary file 
| is a different case, and it would be nice if `?` and `help` continued to 
| work, for example. I understand if this will not be put on the R core 
| list of things to do.

It's complicated as it is clearly an interaction between the hosting OS and
the R application running.  "R cannot know" what policy the host OS may be
having.

You could also talk to your sys.admins and have the service configured. Eg on
my system the description for the tmpreaper package reads

 This package provides a program that can be used to clean out temporary-file
 directories.  It recursively searches the directory, refusing to chdir()
 across symlinks, and removes files that haven't been accessed in a
 user-specified amount of time.  You can specify a set of files to protect
 from deletion with a shell pattern.  It will not remove files owned by the
 process EUID that have the `w' bit clear, unless you ask it to, much like
 `rm -f'.  `tmpreaper' will not remove symlinks, sockets, fifos, or special
 files unless given a command line option enabling it to.
 .
 WARNING:  Please do not run `tmpreaper' on `/'.  There are no protections
 against this written into the program, as that would prevent it from
 functioning the way you'd expect it to in a `chroot(8)' environment.
 .
 The daily tmpreaper run can be configured through /etc/tmpreaper.conf .

which makes it clear that you can configure local behaviour.

Lastly, as the manual referenced in the initial reply says, you are in fact
in full control of this as you can set the environment variables for your R
sessions.

Dirk

-- 
http://dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org


From robert.s.cohn at intel.com  Fri Apr 21 15:26:35 2017
From: robert.s.cohn at intel.com (Cohn, Robert S)
Date: Fri, 21 Apr 2017 13:26:35 +0000
Subject: [Rd] Intel MKL compiling issue
Message-ID: <017981773BBEDE44A0F34FBEE7EAF2DA4AD30EFC@ORSMSX113.amr.corp.intel.com>

> I would appreciate any insights over compiling R 3.4 with Intel MKL -- I have been successful until R 3.3.3 but now it stops complaining about pcre though it worked without Intel MKL as follows,

I successfully built R-rc_2017-04-19_r72555.tar.gz with icc & MKL on centos 7 with this:

# https://software.intel.com/en-us/articles/build-r-301-with-intel-c-compiler-and-intel-mkl-on-linux#                                              
export ICC_OPT="-mkl -xHOST -fp-model strict"
export CC="icc $ICC_OPT"
export CXX="icpc $ICC_OPT"
export FC="ifort -mkl -xHOST"
export F77="ifort -mkl -xHOST"
export FPICFLAGS=" -fPIC"
export AR=xiar
export LD=xild
export MKL="-lmkl_gf_lp64 -lmkl_intel_thread  -lmkl_core -liomp5 -lpthread"
./configure --with-x=no --with-blas=-lmkl


From frederik at ofb.net  Fri Apr 21 19:34:46 2017
From: frederik at ofb.net (frederik at ofb.net)
Date: Fri, 21 Apr 2017 10:34:46 -0700
Subject: [Rd] tempdir() may be deleted during long-running R session
In-Reply-To: <22777.65060.465733.160015@max.eddelbuettel.com>
References: <c78e9022-04c2-3cda-5898-dceec8bc5e94@helsinki.fi>
 <15e3b0a3-e0a8-2da8-27c4-9268a5751986@stats.ox.ac.uk>
 <4f0797c5-a078-67ae-3992-cd66a82b454a@helsinki.fi>
 <22777.65060.465733.160015@max.eddelbuettel.com>
Message-ID: <20170421173446.GB20737@ofb.net>

Hi Mikko,

I was bitten by this recently and I think some of the replies are
missing the point. As I understand it, the problem consists of these
elements:

1. When R starts, it creates a directory like /tmp/RtmpVIeFj4

2. Right after R starts I can create files in this directory with no
   error

3. After some hours or days I can no longer create files in this
   directory, because it has been deleted

If R expected the directory to be deleted at random, and if we expect
users to call dir.create every time they access tempdir, then why did
R create the directory for us at the beginning of the session? That's
just setting people up to get weird bugs, which only appear in
difficult-to-reproduce situations (i.e. after the session has been
open for a long time).

I think before we dismiss this we should think about possible in-R
solutions and why they are not feasible. Are there any packages which
would break if a call to 'tempdir' automatically recreated this
directory? (Or would it be too much of a performance hit to have
'tempdir' check and even just issue a warning when the directory is
found not to exist?) Should we have a timer which periodically updates
the modification time of tempdir()? What do other long-running
programs do (e.g. screen, emacs)?

Thank you,

Frederick

P.S. I noticed that dir.create does not seem to update the access or
modification time of the file. So there is also a remote possibility
that the directory could be "cleaned up" in between calling
'dir.create()' and putting a file in it. Maybe this is nitpicky, but
if we accept that the *really* correct practice is more complicated
than just calling 'dir.create()', this also argues for putting the
proper invocations into some kind of standard function - either
'tempdir()' or something else.


From jinghuazhao at hotmail.com  Sun Apr 23 15:47:24 2017
From: jinghuazhao at hotmail.com (jing hua zhao)
Date: Sun, 23 Apr 2017 13:47:24 +0000
Subject: [Rd] Intel MKL compiling issue
In-Reply-To: <017981773BBEDE44A0F34FBEE7EAF2DA4AD30EFC@ORSMSX113.amr.corp.intel.com>
References: <017981773BBEDE44A0F34FBEE7EAF2DA4AD30EFC@ORSMSX113.amr.corp.intel.com>
Message-ID: <LOXP123MB11584DE365ED7D21C3D850EBA51C0@LOXP123MB1158.GBRP123.PROD.OUTLOOK.COM>

HI Robert,


This helps -- would you be able to do with --enable-R-shlib? I also got complaints with it.


Jing Hua

________________________________
From: R-devel <r-devel-bounces at r-project.org> on behalf of Cohn, Robert S <robert.s.cohn at intel.com>
Sent: 21 April 2017 13:26
To: r-devel at r-project.org
Subject: Re: [Rd] Intel MKL compiling issue

> I would appreciate any insights over compiling R 3.4 with Intel MKL -- I have been successful until R 3.3.3 but now it stops complaining about pcre though it worked without Intel MKL as follows,

I successfully built R-rc_2017-04-19_r72555.tar.gz with icc & MKL on centos 7 with this:

# https://software.intel.com/en-us/articles/build-r-301-with-intel-c-compiler-and-intel-mkl-on-linux#
Build R-3.3.1 with Intel? C++ and Fortran Compilers and ...<https://software.intel.com/en-us/articles/build-r-301-with-intel-c-compiler-and-intel-mkl-on-linux#>
software.intel.com
R is a freely available language and environment for statistical computing and graphics which provides a wide variety of statistical and graphical techniques: linear ...


export ICC_OPT="-mkl -xHOST -fp-model strict"
export CC="icc $ICC_OPT"
export CXX="icpc $ICC_OPT"
export FC="ifort -mkl -xHOST"
export F77="ifort -mkl -xHOST"
export FPICFLAGS=" -fPIC"
export AR=xiar
export LD=xild
export MKL="-lmkl_gf_lp64 -lmkl_intel_thread  -lmkl_core -liomp5 -lpthread"
./configure --with-x=no --with-blas=-lmkl

______________________________________________
R-devel at r-project.org mailing list
https://stat.ethz.ch/mailman/listinfo/r-devel

	[[alternative HTML version deleted]]


From edd at debian.org  Sun Apr 23 16:15:18 2017
From: edd at debian.org (Dirk Eddelbuettel)
Date: Sun, 23 Apr 2017 09:15:18 -0500
Subject: [Rd] tempdir() may be deleted during long-running R session
In-Reply-To: <20170421173446.GB20737@ofb.net>
References: <c78e9022-04c2-3cda-5898-dceec8bc5e94@helsinki.fi>
 <15e3b0a3-e0a8-2da8-27c4-9268a5751986@stats.ox.ac.uk>
 <4f0797c5-a078-67ae-3992-cd66a82b454a@helsinki.fi>
 <22777.65060.465733.160015@max.eddelbuettel.com>
 <20170421173446.GB20737@ofb.net>
Message-ID: <22780.46838.39255.710673@max.eddelbuettel.com>


On 21 April 2017 at 10:34, frederik at ofb.net wrote:
| Hi Mikko,
| 
| I was bitten by this recently and I think some of the replies are
| missing the point. As I understand it, the problem consists of these
| elements:
| 
| 1. When R starts, it creates a directory like /tmp/RtmpVIeFj4
| 
| 2. Right after R starts I can create files in this directory with no
|    error
| 
| 3. After some hours or days I can no longer create files in this
|    directory, because it has been deleted

Nope. That is local to your system. Witness eg at my workstation:

/tmp$ ls -ltGd Rtmp* 
drwx------ 3 edd 4096 Apr 21 16:12 Rtmp9K6bSN
drwx------ 3 edd 4096 Apr 21 11:48 RtmpRRbaMP
drwx------ 3 edd 4096 Apr 21 11:28 RtmpFlguFy
drwx------ 3 edd 4096 Apr 20 13:06 RtmpWJDF3U
drwx------ 3 edd 4096 Apr 18 15:58 RtmpY7ZIS1
drwx------ 3 edd 4096 Apr 18 12:12 Rtmpzr9W0v
drwx------ 2 edd 4096 Apr 16 16:02 RtmpeD27El
drwx------ 2 edd 4096 Apr 16 15:57 Rtmp572FHk
drwx------ 3 edd 4096 Apr 13 11:08 RtmpqP0JSf
drwx------ 3 edd 4096 Apr 10 18:47 RtmpzRzyFb
drwx------ 3 edd 4096 Apr  6 15:21 RtmpQhvAUb
drwx------ 3 edd 4096 Apr  6 11:24 Rtmp2lFKPz
drwx------ 3 edd 4096 Apr  5 20:57 RtmprCeWUS
drwx------ 2 edd 4096 Apr  3 15:12 Rtmp8xviDl
drwx------ 3 edd 4096 Mar 30 16:50 Rtmp8w9n5h
drwx------ 3 edd 4096 Mar 28 11:33 RtmpjAg6iY
drwx------ 2 edd 4096 Mar 28 09:26 RtmpYHSgZG
drwx------ 2 edd 4096 Mar 27 11:21 Rtmp0gSV4e
drwx------ 2 edd 4096 Mar 27 11:21 RtmpOnneiY
drwx------ 2 edd 4096 Mar 27 11:17 RtmpIWeiTJ
drwx------ 3 edd 4096 Mar 22 08:51 RtmpJkVsSJ
drwx------ 3 edd 4096 Mar 21 10:33 Rtmp9a5KxL
/tmp$ 

Clearly still there after a month. I tend to have some longer-running R
sessions in either Emacs/ESS or RStudio.

So what I wrote in my last message here *clearly* applies to you: a local
issue for which you have to take local action as R cannot know.  You also
have a choice of setting variables to affect this.
 
| If R expected the directory to be deleted at random, and if we expect
| users to call dir.create every time they access tempdir, then why did
| R create the directory for us at the beginning of the session? That's
| just setting people up to get weird bugs, which only appear in
| difficult-to-reproduce situations (i.e. after the session has been
| open for a long time).

I disagree. R has been doing this many years, possibly two decades.
 
| I think before we dismiss this we should think about possible in-R
| solutions and why they are not feasible. Are there any packages which
| would break if a call to 'tempdir' automatically recreated this
| directory? (Or would it be too much of a performance hit to have
| 'tempdir' check and even just issue a warning when the directory is
| found not to exist?) Should we have a timer which periodically updates
| the modification time of tempdir()? What do other long-running
| programs do (e.g. screen, emacs)?

There are options you have right now.

Dirk

-- 
http://dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org


From robert.s.cohn at intel.com  Sun Apr 23 19:58:38 2017
From: robert.s.cohn at intel.com (Cohn, Robert S)
Date: Sun, 23 Apr 2017 17:58:38 +0000
Subject: [Rd] Intel MKL compiling issue
Message-ID: <017981773BBEDE44A0F34FBEE7EAF2DA4AD32BE2@ORSMSX113.amr.corp.intel.com>

?  This helps -- would you be able to do with --enable-R-shlib? I also got complaints with it.

It works when I do this:
./configure --with-x=no --with-blas=-lmkl --enable-R-shlib




	[[alternative HTML version deleted]]


From mdsumner at gmail.com  Mon Apr 24 03:37:06 2017
From: mdsumner at gmail.com (Michael Sumner)
Date: Mon, 24 Apr 2017 01:37:06 +0000
Subject: [Rd] polypath winding rule with transparency
In-Reply-To: <CAAcGz9-1VEYUF=YsaxKkKDw4-NRRUXCQ_6WUeR0G16VNsfvGFg@mail.gmail.com>
References: <CAAcGz99g-zD9AHSg-6=fgBPMtCOzwykO0YRXa+Yqm4x5QePSJg@mail.gmail.com>
 <CAAcGz9-oEfbiRmKnUtYRa7p42A539G_DRSSYq2ZbB=wAvFJcpg@mail.gmail.com>
 <8992e9d3-e0ca-95c1-5a32-85e2bbde0d63@stat.auckland.ac.nz>
 <CAAcGz9-1VEYUF=YsaxKkKDw4-NRRUXCQ_6WUeR0G16VNsfvGFg@mail.gmail.com>
Message-ID: <CAAcGz98ErWen+_BFYseBgKWxrfkrqDER_C63shToby0X+n+JZg@mail.gmail.com>

On Thu, 4 Aug 2016 at 17:53 Michael Sumner <mdsumner at gmail.com> wrote:

> On Thu, 4 Aug 2016 at 11:17 Paul Murrell <paul at stat.auckland.ac.nz> wrote:
>
>> Hi
>>
>> Just to clarify, I think this IS a problem with grid.path() as well as
>> polypath().
>>
>>
> Hi, oh dear - sorry about that
>
> I appreciate the deeper explanation, I knew about the id aspect in grid,
> but just forgot in my haste.
>
> I'll be more careful with examples if I find any more clues.
>
>
I've found a possibly related issue, again only on Windows as far as I can
see.

These two plots give different results, the second is completely
transparent rather than the expected light blue region on the left.
Whether it works or not seems to depend on the specific geometry of the
device and *not on the specific xlim interval chosen*. I can get the
problem to come and by interactively resizing the window resulting from the
first plot. Somehow it's related to the intersection-detection of the
filled polygon with the plot region (?).

pp <- matrix(c(0, 0,
               0, 1,
               1, 1,
               1, 0,
               0, 0), ncol = 2, byrow = TRUE)

xlim <- c(0.24, 1.5)  ## ok at xlim[1] = 0.24
## first plot, ok (but also try resizing the window by dragging the left
side out)
plot(pp, main = "winding/transparent", xlim = xlim)
polypath(pp, col = "#ADD8E6E6", rule = "winding")


xlim <- c(0.25, 1.5)
## second plot, not ok
plot(pp, main = "winding/transparent", xlim = xlim)
polypath(pp, col = "#ADD8E6E6", rule = "winding")


Cheers, Mike.



> Cheers, Mike.
>
>
>> For the example you give, grid.path() diverts to drawing a polygon
>> (because there is no 'id' specified), and the NAs in 'x' generate two
>> separate polygons, which get drawn one on top of the other.
>>
>> The correct analogy to the polypath() example is ...
>>
>> x2 <- matrix(x[!is.na(x)], ncol=2)
>> grid.path(x2[,1], x2[,2], id=rep(1:2, each=4),
>>            rule="winding", gp=gpar(="#BEBEBE80"))
>>
>> ... which produces the same (wrong) result as polypath() on Windows.
>>
>> Also, the grid.path() result for your example is NOT the same as the
>> correct result;  we do NOT want a separate shade for the intersecting
>> region when the "winding" fill rule is working correctly.  The fill
>> should be the same across the union of the square regions (this is what
>> Cairo and PDF on Linux produce).
>>
>> Another data point:  the problem is NOT just a matter of getting the
>> rules round the wrong way in the devWindows.c;  using rule="evenodd"
>> produces the SAME result as using rule="winding".
>>
>> One more data point:  this is not JUST a problem with polypath().
>> Creating a self-intersecting polygon and then drawing it, using
>> polygon(), in windows(fillEvenOdd=FALSE) and windows(filleEvenOdd=TRUE)
>> produces exactly the same result.
>>
>> Sadly, none of that helps to explain why the "winding" rule is not
>> working on Windows :(
>>
>> Thanks for reporting the problem - needs more study to find out what is
>> going wrong.
>>
>> Paul
>>
>> On 03/08/16 18:47, Michael Sumner wrote:
>> > Hello,
>> >
>> > it's probably worth adding that this is not a problem with pathGrob,
>> only
>> > polypath.
>> >
>> > This code is sufficient to demonstrate the problem in Windows.
>> >
>> > ## overlapping, both clock-wise
>> > x <- cbind(c(.1, .1, .6, .6, NA, .4, .4, .9, .9),
>> >           c(.1, .6, .6, .1, NA, .4, .9, .9, .4))
>> > ## only a problem on Windows windows() and png()
>> > plot(x);polypath(x, rule = "winding", col = "#BEBEBE80")
>> >
>> > This code shows the same behaviour on different systems/devices.
>> >
>> > ## no problem on Windows/Linux/PNG/PDF ...
>> > library(grid)
>> > grid.newpage()
>> > pushViewport(viewport(0.5, 0.5, width = 1, height = 1))
>> > grid.draw(pathGrob(x[,1], x[,2], rule = "winding", gp = gpar(fill =
>> > "#BEBEBE80")))
>> >
>> > Cheers, Mike.
>> >
>> > On Wed, 3 Aug 2016 at 16:24 Michael Sumner <mdsumner at gmail.com> wrote:
>> >
>> >> Hi, I see different results in png() and pdf() for polypath() on
>> Windows
>> >> when using the "winding" rule
>> >>
>> >> ## overlapping, both clock-wise
>> >> x <- cbind(c(.1, .1, .6, .6, NA, .4, .4, .9, .9),
>> >>           c(.1, .6, .6, .1, NA, .4, .9, .9, .4))
>> >>
>> >> pfun <- function() {
>> >>   plot(x)
>> >>   polypath(x * 0.8 + 0.2,  rule = "winding", col = "#BEBEBE80")
>> >>   polypath(x,  rule = "winding", col = "#BEBEBE80")
>> >> }
>> >>
>> >> ## output  "windows.png/pdf" or "unix.png/pdf"
>> >> label <- .Platform$OS.type
>> >> png(sprintf("%s.png", label))
>> >> pfun()
>> >> dev.off()
>> >> pdf(sprintf("%s.pdf", label))
>> >> pfun()
>> >> dev.off()
>> >>
>> >>
>> >> Visually, the result in the "windows.png" file is as if the "evenodd"
>> rule
>> >> was specified. All other examples unix.pdf, unix.png, windows.pdf give
>> me
>> >> the expected result - which is "all bounded regions shaded grey, with
>> two
>> >> tones for the different regions of overlap". The unexpected result is
>> the
>> >> completely transparent region.
>> >>
>> >> Is this a known/expected difference on Windows?  I see the unexpected
>> >> result in 3.3.1 and in R version 3.3.1 Patched (2016-07-27 r70991) on
>> >> Windows.
>> >>
>> >> Cheers, Mike.
>> >> --
>> >> Dr. Michael Sumner
>> >> Software and Database Engineer
>> >> Australian Antarctic Division
>> >> 203 Channel Highway
>> >> Kingston Tasmania 7050 Australia
>> >>
>> >> --
>> > Dr. Michael Sumner
>> > Software and Database Engineer
>> > Australian Antarctic Division
>> > 203 Channel Highway
>> > Kingston Tasmania 7050 Australia
>> >
>> >       [[alternative HTML version deleted]]
>> >
>> > ______________________________________________
>> > R-devel at r-project.org mailing list
>> > https://stat.ethz.ch/mailman/listinfo/r-devel
>> >
>>
>> --
>> Dr Paul Murrell
>> Department of Statistics
>> The University of Auckland
>> Private Bag 92019
>> Auckland
>> New Zealand
>> 64 9 3737599 x85392
>> paul at stat.auckland.ac.nz
>> http://www.stat.auckland.ac.nz/~paul/
>>
> --
> Dr. Michael Sumner
> Software and Database Engineer
> Australian Antarctic Division
> 203 Channel Highway
> Kingston Tasmania 7050 Australia
>
> --
Dr. Michael Sumner
Software and Database Engineer
Australian Antarctic Division
203 Channel Highway
Kingston Tasmania 7050 Australia

	[[alternative HTML version deleted]]


From paul at stat.auckland.ac.nz  Mon Apr 24 05:10:34 2017
From: paul at stat.auckland.ac.nz (Paul Murrell)
Date: Mon, 24 Apr 2017 15:10:34 +1200
Subject: [Rd] polypath winding rule with transparency
In-Reply-To: <CAAcGz98ErWen+_BFYseBgKWxrfkrqDER_C63shToby0X+n+JZg@mail.gmail.com>
References: <CAAcGz99g-zD9AHSg-6=fgBPMtCOzwykO0YRXa+Yqm4x5QePSJg@mail.gmail.com>
 <CAAcGz9-oEfbiRmKnUtYRa7p42A539G_DRSSYq2ZbB=wAvFJcpg@mail.gmail.com>
 <8992e9d3-e0ca-95c1-5a32-85e2bbde0d63@stat.auckland.ac.nz>
 <CAAcGz9-1VEYUF=YsaxKkKDw4-NRRUXCQ_6WUeR0G16VNsfvGFg@mail.gmail.com>
 <CAAcGz98ErWen+_BFYseBgKWxrfkrqDER_C63shToby0X+n+JZg@mail.gmail.com>
Message-ID: <2f75ae4a-2596-196a-6f9d-5d16c4fa5c6f@stat.auckland.ac.nz>


Thanks for the additional information.  I see the behaviour that you are 
reporting (on Windows), which is pretty weird behaviour!
Hopefully this will shed some light on the other problem that you 
reported, rather than being another unrelated problem.

Paul

On 24/04/2017 1:37 p.m., Michael Sumner wrote:
>
>
> On Thu, 4 Aug 2016 at 17:53 Michael Sumner <mdsumner at gmail.com
> <mailto:mdsumner at gmail.com>> wrote:
>
>     On Thu, 4 Aug 2016 at 11:17 Paul Murrell <paul at stat.auckland.ac.nz
>     <mailto:paul at stat.auckland.ac.nz>> wrote:
>
>         Hi
>
>         Just to clarify, I think this IS a problem with grid.path() as
>         well as
>         polypath().
>
>
>     Hi, oh dear - sorry about that
>
>     I appreciate the deeper explanation, I knew about the id aspect in
>     grid, but just forgot in my haste.
>
>     I'll be more careful with examples if I find any more clues.
>
>
> I've found a possibly related issue, again only on Windows as far as I
> can see.
>
> These two plots give different results, the second is completely
> transparent rather than the expected light blue region on the left.
> Whether it works or not seems to depend on the specific geometry of the
> device and *not on the specific xlim interval chosen*. I can get the
> problem to come and by interactively resizing the window resulting from
> the first plot. Somehow it's related to the intersection-detection of
> the filled polygon with the plot region (?).
>
> pp <- matrix(c(0, 0,
>                0, 1,
>                1, 1,
>                1, 0,
>                0, 0), ncol = 2, byrow = TRUE)
>
> xlim <- c(0.24, 1.5)  ## ok at xlim[1] = 0.24
> ## first plot, ok (but also try resizing the window by dragging the left
> side out)
> plot(pp, main = "winding/transparent", xlim = xlim)
> polypath(pp, col = "#ADD8E6E6", rule = "winding")
>
>
> xlim <- c(0.25, 1.5)
> ## second plot, not ok
> plot(pp, main = "winding/transparent", xlim = xlim)
> polypath(pp, col = "#ADD8E6E6", rule = "winding")
>
>
> Cheers, Mike.
>
>
>
>     Cheers, Mike.
>
>
>         For the example you give, grid.path() diverts to drawing a polygon
>         (because there is no 'id' specified), and the NAs in 'x'
>         generate two
>         separate polygons, which get drawn one on top of the other.
>
>         The correct analogy to the polypath() example is ...
>
>         x2 <- matrix(x[!is.na <http://is.na>(x)], ncol=2)
>         grid.path(x2[,1], x2[,2], id=rep(1:2, each=4),
>                    rule="winding", gp=gpar(="#BEBEBE80"))
>
>         ... which produces the same (wrong) result as polypath() on Windows.
>
>         Also, the grid.path() result for your example is NOT the same as the
>         correct result;  we do NOT want a separate shade for the
>         intersecting
>         region when the "winding" fill rule is working correctly.  The fill
>         should be the same across the union of the square regions (this
>         is what
>         Cairo and PDF on Linux produce).
>
>         Another data point:  the problem is NOT just a matter of getting the
>         rules round the wrong way in the devWindows.c;  using rule="evenodd"
>         produces the SAME result as using rule="winding".
>
>         One more data point:  this is not JUST a problem with polypath().
>         Creating a self-intersecting polygon and then drawing it, using
>         polygon(), in windows(fillEvenOdd=FALSE) and
>         windows(filleEvenOdd=TRUE)
>         produces exactly the same result.
>
>         Sadly, none of that helps to explain why the "winding" rule is not
>         working on Windows :(
>
>         Thanks for reporting the problem - needs more study to find out
>         what is
>         going wrong.
>
>         Paul
>
>         On 03/08/16 18:47, Michael Sumner wrote:
>         > Hello,
>         >
>         > it's probably worth adding that this is not a problem with
>         pathGrob, only
>         > polypath.
>         >
>         > This code is sufficient to demonstrate the problem in Windows.
>         >
>         > ## overlapping, both clock-wise
>         > x <- cbind(c(.1, .1, .6, .6, NA, .4, .4, .9, .9),
>         >           c(.1, .6, .6, .1, NA, .4, .9, .9, .4))
>         > ## only a problem on Windows windows() and png()
>         > plot(x);polypath(x, rule = "winding", col = "#BEBEBE80")
>         >
>         > This code shows the same behaviour on different systems/devices.
>         >
>         > ## no problem on Windows/Linux/PNG/PDF ...
>         > library(grid)
>         > grid.newpage()
>         > pushViewport(viewport(0.5, 0.5, width = 1, height = 1))
>         > grid.draw(pathGrob(x[,1], x[,2], rule = "winding", gp =
>         gpar(fill =
>         > "#BEBEBE80")))
>         >
>         > Cheers, Mike.
>         >
>         > On Wed, 3 Aug 2016 at 16:24 Michael Sumner <mdsumner at gmail.com
>         <mailto:mdsumner at gmail.com>> wrote:
>         >
>         >> Hi, I see different results in png() and pdf() for polypath()
>         on Windows
>         >> when using the "winding" rule
>         >>
>         >> ## overlapping, both clock-wise
>         >> x <- cbind(c(.1, .1, .6, .6, NA, .4, .4, .9, .9),
>         >>           c(.1, .6, .6, .1, NA, .4, .9, .9, .4))
>         >>
>         >> pfun <- function() {
>         >>   plot(x)
>         >>   polypath(x * 0.8 + 0.2,  rule = "winding", col = "#BEBEBE80")
>         >>   polypath(x,  rule = "winding", col = "#BEBEBE80")
>         >> }
>         >>
>         >> ## output  "windows.png/pdf" or "unix.png/pdf"
>         >> label <- .Platform$OS.type
>         >> png(sprintf("%s.png", label))
>         >> pfun()
>         >> dev.off()
>         >> pdf(sprintf("%s.pdf", label))
>         >> pfun()
>         >> dev.off()
>         >>
>         >>
>         >> Visually, the result in the "windows.png" file is as if the
>         "evenodd" rule
>         >> was specified. All other examples unix.pdf, unix.png,
>         windows.pdf give me
>         >> the expected result - which is "all bounded regions shaded
>         grey, with two
>         >> tones for the different regions of overlap". The unexpected
>         result is the
>         >> completely transparent region.
>         >>
>         >> Is this a known/expected difference on Windows?  I see the
>         unexpected
>         >> result in 3.3.1 and in R version 3.3.1 Patched (2016-07-27
>         r70991) on
>         >> Windows.
>         >>
>         >> Cheers, Mike.
>         >> --
>         >> Dr. Michael Sumner
>         >> Software and Database Engineer
>         >> Australian Antarctic Division
>         >> 203 Channel Highway
>         >> Kingston Tasmania 7050 Australia
>         >>
>         >> --
>         > Dr. Michael Sumner
>         > Software and Database Engineer
>         > Australian Antarctic Division
>         > 203 Channel Highway
>         > Kingston Tasmania 7050 Australia
>         >
>         >       [[alternative HTML version deleted]]
>         >
>         > ______________________________________________
>         > R-devel at r-project.org <mailto:R-devel at r-project.org> mailing list
>         > https://stat.ethz.ch/mailman/listinfo/r-devel
>         >
>
>         --
>         Dr Paul Murrell
>         Department of Statistics
>         The University of Auckland
>         Private Bag 92019
>         Auckland
>         New Zealand
>         64 9 3737599 x85392
>         paul at stat.auckland.ac.nz <mailto:paul at stat.auckland.ac.nz>
>         http://www.stat.auckland.ac.nz/~paul/
>
>     --
>     Dr. Michael Sumner
>     Software and Database Engineer
>     Australian Antarctic Division
>     203 Channel Highway
>     Kingston Tasmania 7050 Australia
>
> --
> Dr. Michael Sumner
> Software and Database Engineer
> Australian Antarctic Division
> 203 Channel Highway
> Kingston Tasmania 7050 Australia
>

-- 
Dr Paul Murrell
Department of Statistics
The University of Auckland
Private Bag 92019
Auckland
New Zealand
64 9 3737599 x85392
paul at stat.auckland.ac.nz
http://www.stat.auckland.ac.nz/~paul/


From january.weiner at gmail.com  Mon Apr 24 11:46:35 2017
From: january.weiner at gmail.com (January W.)
Date: Mon, 24 Apr 2017 11:46:35 +0200
Subject: [Rd] Crash after (wrongly) applying product operator on object
 from LIMMA package
In-Reply-To: <9c987df5-1852-56b6-3de5-89358aaffb0a@mpiib-berlin.mpg.de>
References: <e3a03266-b7f3-d5df-6940-906f9bd41104@mpiib-berlin.mpg.de>
 <9c987df5-1852-56b6-3de5-89358aaffb0a@mpiib-berlin.mpg.de>
Message-ID: <CA+A1kV6sNGsNW1-ULZ7-uDOq_M91zr7aJKX4aRaeogfGe_SSPw@mail.gmail.com>

Hi Hilmar,

weird. The memory problem seems be due to recursion (my R, version 3.3.3,
says: Error: evaluation nested too deeply: infinite recursion /
options(expressions=)?, just write traceback() to see how it happens), but
why does it segfault with xlsx? Nb xlsx is the culprit: neither rJava nor
xlsxjars cause the problem.

On the other hand, quick googling for r+xlsx+segfault returns tons of
reports of how xlsx crashes in dozens of situations. See for example
http://r.789695.n4.nabble.com/segfault-in-gplots-heatmap-2-td4641808.html.
Also, the problem might be platform-specific. It would be interesting to
see whether anyone with a Mac can reproduce it.

kind regards,

j.





On 19 April 2017 at 10:01, Hilmar Berger <berger at mpiib-berlin.mpg.de> wrote:

> Hi,
>
> following up on my own question, I found smaller example that does not
> require LIMMA:
>
> setClass("FOOCLASS",
>          representation("list")
> )
> ma = new("FOOCLASS", list(M=matrix(rnorm(300), 30,10)))
>
> > ma * ma$M
> Error: C stack usage  7970512 is too close to the limit
>
> > library(xlsx)
> Loading required package: rJava
> Loading required package: xlsxjars
> > ma * ma$M
> ---> Crash
>
> xlsx seems to act like a catalyst here, with the product operator running
> in a deep nested iteration, exhausting the stack. Valgrind shows thousands
> of invalid stack accesses when loading xslx, which might contribute to the
> problem. Package xlsx has not been updated since 2014, so it might fail
> with more current versions of R or Java (I'm using Oracle Java 8).
>
> Still, even if xlsx was the package to be blamed for the crash, I fail to
> understand what exactly the product operator is trying to do in the
> multiplication of the matrix with the object.
>
> Best regards,
> Hilmar
>
>
> On 18/04/17 18:57, Hilmar Berger wrote:
>
>> Hi,
>>
>> this is a problem that occurs in the presence of two libraries (limma,
>> xlsx) and leads to a crash of R. The problematic code is the wrong
>> application of sweep or the product ("*") function on an LIMMA MAList
>> object. To my knowledge, limma does not define a "*" method for MAList
>> objects.
>>
>> If only LIMMA is loaded but not package xlsx, the code does not crash but
>> rather produces an error ("Error: C stack usage  7970512 is too close to
>> the limit"). Loading only package rJava instead of xlsx does also not
>> produce the crash but the error message instead. Note that xlsx functions
>> are not explicitly used.
>>
>> It could be reproduced on two different Linux machines running R-3.2.5,
>> R-3.3.0 and R-3.3.2.
>>
>> Code to reproduce the problem:
>> ---------------------------------
>> library(limma)
>> library(xlsx)
>>
>> # a MAList
>> ma = new("MAList", list(A=matrix(rnorm(300), 30,10), M=matrix(rnorm(300),
>> 30,10)))
>>
>> # This should actually be sweep(ma$M, ...) for functional code, but I
>> omitted the $M...
>> #sweep(ma, 2, c(1:10), "*")
>> # sweep will crash when doing the final operation of applying the
>> function over the input matrix, which in this case is function "*"
>>
>> f = match.fun("*")
>> # This is not exactly the same as in sweep but it also tries to multiply
>> the MAList object with a matrix of same size and leads to the crash
>> f(ma, ma$M)
>> # ma * ma$M has the same effect
>> ---------------------------------
>>
>> My output:
>>
>> R version 3.3.0 (2016-05-03) -- "Supposedly Educational"
>> Copyright (C) 2016 The R Foundation for Statistical Computing
>> Platform: x86_64-pc-linux-gnu (64-bit)
>>
>> R is free software and comes with ABSOLUTELY NO WARRANTY.
>> You are welcome to redistribute it under certain conditions.
>> Type 'license()' or 'licence()' for distribution details.
>>
>>   Natural language support but running in an English locale
>>
>> R is a collaborative project with many contributors.
>> Type 'contributors()' for more information and
>> 'citation()' on how to cite R or R packages in publications.
>>
>> Type 'demo()' for some demos, 'help()' for on-line help, or
>> 'help.start()' for an HTML browser interface to help.
>> Type 'q()' to quit R.
>>
>> > library(limma)
>> > library(xlsx)
>> Loading required package: rJava
>> Loading required package: xlsxjars
>> >
>> > sessionInfo()
>> R version 3.3.0 (2016-05-03)
>> Platform: x86_64-pc-linux-gnu (64-bit)
>> Running under: Ubuntu 14.04.5 LTS
>>
>> locale:
>>  [1] LC_CTYPE=en_US.UTF-8          LC_NUMERIC=C LC_TIME=en_US.UTF-8
>>  [4] LC_COLLATE=en_US.UTF-8        LC_MONETARY=en_US.UTF-8
>> LC_MESSAGES=en_US.UTF-8
>>  [7] LC_PAPER=en_US.UTF-8          LC_NAME=en_US.UTF-8
>> LC_ADDRESS=en_US.UTF-8
>> [10] LC_TELEPHONE=en_US.UTF-8      LC_MEASUREMENT=en_US.UTF-8
>> LC_IDENTIFICATION=en_US.UTF-8
>>
>> attached base packages:
>> [1] stats     graphics  grDevices utils     datasets  methods base
>>
>> other attached packages:
>> [1] xlsx_0.5.7     xlsxjars_0.6.1 rJava_0.9-8    limma_3.30.7
>>
>> loaded via a namespace (and not attached):
>> [1] tools_3.3.0
>> >
>> > ma = new("MAList", list(A=matrix(rnorm(300), 30,10),
>> M=matrix(rnorm(300), 30,10)))
>> > #sweep(ma, 2, c(1:10), "*")
>> >
>> > f = match.fun("*")
>> > f
>> function (e1, e2)  .Primitive("*")
>>
>> > f(ma, ma$M)
>>
>> ----> crash to command line with segfault.
>>
>> Best regards,
>> Hilmar
>>
>>
> --
> Dr. Hilmar Berger, MD
> Max Planck Institute for Infection Biology
> Charit?platz 1
> D-10117 Berlin
> GERMANY
>
> Phone:  + 49 30 28460 430
> Fax:    + 49 30 28460 401
>  E-Mail: berger at mpiib-berlin.mpg.de
> Web   : www.mpiib-berlin.mpg.de
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>



-- 
-------- January Weiner --------------------------------------

	[[alternative HTML version deleted]]


From berger at mpiib-berlin.mpg.de  Mon Apr 24 11:58:30 2017
From: berger at mpiib-berlin.mpg.de (Hilmar Berger)
Date: Mon, 24 Apr 2017 11:58:30 +0200
Subject: [Rd] Crash after (wrongly) applying product operator on object
 from LIMMA package
In-Reply-To: <CA+A1kV6sNGsNW1-ULZ7-uDOq_M91zr7aJKX4aRaeogfGe_SSPw@mail.gmail.com>
References: <e3a03266-b7f3-d5df-6940-906f9bd41104@mpiib-berlin.mpg.de>
 <9c987df5-1852-56b6-3de5-89358aaffb0a@mpiib-berlin.mpg.de>
 <CA+A1kV6sNGsNW1-ULZ7-uDOq_M91zr7aJKX4aRaeogfGe_SSPw@mail.gmail.com>
Message-ID: <aa174a90-0d30-4442-8787-0d1f6814ca4a@mpiib-berlin.mpg.de>

Hi January,

I believe the root of the xlsx issue has been identified and a fix 
suggested by Tomas Kalibera (see https://github.com/s-u/rJava/pull/102). 
In a nutshell, Oracle Java on Linux modifies the stack in a way that 
makes it smaller and and the same time makes it impossible for R to 
detect this change, leading to segfaults. It is not clear to me that the 
same problem would occur on Mac, since the behavior of Oracle seems to 
be Linux specific. Possibly even Linux users on OpenJDK might not 
encounter any problems (not tested).

So possibly the next release of rJava should also fix the xlsx problems 
with other packages.

Best regards,
Hilmar


On 24/04/17 11:46, January W. wrote:
> Hi Hilmar,
>
> weird. The memory problem seems be due to recursion (my R, version 
> 3.3.3, says: Error: evaluation nested too deeply: infinite recursion / 
> options(expressions=)?, just write traceback() to see how it happens), 
> but why does it segfault with xlsx? Nb xlsx is the culprit: neither 
> rJava nor xlsxjars cause the problem.
>
> On the other hand, quick googling for r+xlsx+segfault returns tons of 
> reports of how xlsx crashes in dozens of situations. See for example 
> http://r.789695.n4.nabble.com/segfault-in-gplots-heatmap-2-td4641808.html. 
> Also, the problem might be platform-specific. It would be interesting 
> to see whether anyone with a Mac can reproduce it.
>
> kind regards,
>
> j.
>
>
>
>
>
> On 19 April 2017 at 10:01, Hilmar Berger <berger at mpiib-berlin.mpg.de 
> <mailto:berger at mpiib-berlin.mpg.de>> wrote:
>
>     Hi,
>
>     following up on my own question, I found smaller example that does
>     not require LIMMA:
>
>     setClass("FOOCLASS",
>              representation("list")
>     )
>     ma = new("FOOCLASS", list(M=matrix(rnorm(300), 30,10)))
>
>     > ma * ma$M
>     Error: C stack usage  7970512 is too close to the limit
>
>     > library(xlsx)
>     Loading required package: rJava
>     Loading required package: xlsxjars
>     > ma * ma$M
>     ---> Crash
>
>     xlsx seems to act like a catalyst here, with the product operator
>     running in a deep nested iteration, exhausting the stack. Valgrind
>     shows thousands of invalid stack accesses when loading xslx, which
>     might contribute to the problem. Package xlsx has not been updated
>     since 2014, so it might fail with more current versions of R or
>     Java (I'm using Oracle Java 8).
>
>     Still, even if xlsx was the package to be blamed for the crash, I
>     fail to understand what exactly the product operator is trying to
>     do in the multiplication of the matrix with the object.
>
>     Best regards,
>     Hilmar
>
>
>     On 18/04/17 18:57, Hilmar Berger wrote:
>
>         Hi,
>
>         this is a problem that occurs in the presence of two libraries
>         (limma, xlsx) and leads to a crash of R. The problematic code
>         is the wrong application of sweep or the product ("*")
>         function on an LIMMA MAList object. To my knowledge, limma
>         does not define a "*" method for MAList objects.
>
>         If only LIMMA is loaded but not package xlsx, the code does
>         not crash but rather produces an error ("Error: C stack usage 
>         7970512 is too close to the limit"). Loading only package
>         rJava instead of xlsx does also not produce the crash but the
>         error message instead. Note that xlsx functions are not
>         explicitly used.
>
>         It could be reproduced on two different Linux machines running
>         R-3.2.5, R-3.3.0 and R-3.3.2.
>
>         Code to reproduce the problem:
>         ---------------------------------
>         library(limma)
>         library(xlsx)
>
>         # a MAList
>         ma = new("MAList", list(A=matrix(rnorm(300), 30,10),
>         M=matrix(rnorm(300), 30,10)))
>
>         # This should actually be sweep(ma$M, ...) for functional
>         code, but I omitted the $M...
>         #sweep(ma, 2, c(1:10), "*")
>         # sweep will crash when doing the final operation of applying
>         the function over the input matrix, which in this case is
>         function "*"
>
>         f = match.fun("*")
>         # This is not exactly the same as in sweep but it also tries
>         to multiply the MAList object with a matrix of same size and
>         leads to the crash
>         f(ma, ma$M)
>         # ma * ma$M has the same effect
>         ---------------------------------
>
>         My output:
>
>         R version 3.3.0 (2016-05-03) -- "Supposedly Educational"
>         Copyright (C) 2016 The R Foundation for Statistical Computing
>         Platform: x86_64-pc-linux-gnu (64-bit)
>
>         R is free software and comes with ABSOLUTELY NO WARRANTY.
>         You are welcome to redistribute it under certain conditions.
>         Type 'license()' or 'licence()' for distribution details.
>
>           Natural language support but running in an English locale
>
>         R is a collaborative project with many contributors.
>         Type 'contributors()' for more information and
>         'citation()' on how to cite R or R packages in publications.
>
>         Type 'demo()' for some demos, 'help()' for on-line help, or
>         'help.start()' for an HTML browser interface to help.
>         Type 'q()' to quit R.
>
>         > library(limma)
>         > library(xlsx)
>         Loading required package: rJava
>         Loading required package: xlsxjars
>         >
>         > sessionInfo()
>         R version 3.3.0 (2016-05-03)
>         Platform: x86_64-pc-linux-gnu (64-bit)
>         Running under: Ubuntu 14.04.5 LTS
>
>         locale:
>          [1] LC_CTYPE=en_US.UTF-8          LC_NUMERIC=C
>         LC_TIME=en_US.UTF-8
>          [4] LC_COLLATE=en_US.UTF-8 LC_MONETARY=en_US.UTF-8
>         LC_MESSAGES=en_US.UTF-8
>          [7] LC_PAPER=en_US.UTF-8          LC_NAME=en_US.UTF-8
>         LC_ADDRESS=en_US.UTF-8
>         [10] LC_TELEPHONE=en_US.UTF-8 LC_MEASUREMENT=en_US.UTF-8
>         LC_IDENTIFICATION=en_US.UTF-8
>
>         attached base packages:
>         [1] stats     graphics  grDevices utils     datasets methods base
>
>         other attached packages:
>         [1] xlsx_0.5.7     xlsxjars_0.6.1 rJava_0.9-8 limma_3.30.7
>
>         loaded via a namespace (and not attached):
>         [1] tools_3.3.0
>         >
>         > ma = new("MAList", list(A=matrix(rnorm(300), 30,10),
>         M=matrix(rnorm(300), 30,10)))
>         > #sweep(ma, 2, c(1:10), "*")
>         >
>         > f = match.fun("*")
>         > f
>         function (e1, e2)  .Primitive("*")
>
>         > f(ma, ma$M)
>
>         ----> crash to command line with segfault.
>
>         Best regards,
>         Hilmar
>
>
>     -- 
>     Dr. Hilmar Berger, MD
>     Max Planck Institute for Infection Biology
>     Charit?platz 1
>     D-10117 Berlin
>     GERMANY
>
>     Phone: + 49 30 28460 430 <tel:%2B%2049%2030%2028460%20430>
>     Fax: + 49 30 28460 401 <tel:%2B%2049%2030%2028460%20401>
>      E-Mail: berger at mpiib-berlin.mpg.de
>     <mailto:berger at mpiib-berlin.mpg.de>
>     Web   : www.mpiib-berlin.mpg.de <http://www.mpiib-berlin.mpg.de>
>
>     ______________________________________________
>     R-devel at r-project.org <mailto:R-devel at r-project.org> mailing list
>     https://stat.ethz.ch/mailman/listinfo/r-devel
>     <https://stat.ethz.ch/mailman/listinfo/r-devel>
>
>
>
>
> -- 
> -------- January Weiner --------------------------------------

-- 
Dr. Hilmar Berger, MD
Max Planck Institute for Infection Biology
Charit?platz 1
D-10117 Berlin
GERMANY

Phone:  + 49 30 28460 430
Fax:    + 49 30 28460 401
  
E-Mail: berger at mpiib-berlin.mpg.de
Web   : www.mpiib-berlin.mpg.de


	[[alternative HTML version deleted]]


From tomas.kalibera at gmail.com  Mon Apr 24 12:24:04 2017
From: tomas.kalibera at gmail.com (Tomas Kalibera)
Date: Mon, 24 Apr 2017 12:24:04 +0200
Subject: [Rd] Crash after (wrongly) applying product operator on object
 from LIMMA package
In-Reply-To: <aa174a90-0d30-4442-8787-0d1f6814ca4a@mpiib-berlin.mpg.de>
References: <e3a03266-b7f3-d5df-6940-906f9bd41104@mpiib-berlin.mpg.de>
 <9c987df5-1852-56b6-3de5-89358aaffb0a@mpiib-berlin.mpg.de>
 <CA+A1kV6sNGsNW1-ULZ7-uDOq_M91zr7aJKX4aRaeogfGe_SSPw@mail.gmail.com>
 <aa174a90-0d30-4442-8787-0d1f6814ca4a@mpiib-berlin.mpg.de>
Message-ID: <067f5b53-8786-c9ef-64c5-769cf47e7a27@gmail.com>


Yes, the mentioned pull request for rJava is to workaround a JVM problem 
that is Linux-only.
I am not aware of any related problem on OSX.

In general, you can currently get two kinds of messages with infinite 
recursion:

Error: evaluation nested too deeply: infinite recursion / 
options(expressions=)?
Error: C stack usage XXX is too close to the limit

but in some situations you could get a segfault, an obvious one is 
infinite recursion in native code of a package.

If you're getting a segfault it is probably best to check with a 
debugger - infinite recursion would be easily identified in the stacktrace.

Best
Tomas


On 04/24/2017 11:58 AM, Hilmar Berger wrote:
> Hi January,
>
> I believe the root of the xlsx issue has been identified and a fix
> suggested by Tomas Kalibera (see https://github.com/s-u/rJava/pull/102).
> In a nutshell, Oracle Java on Linux modifies the stack in a way that
> makes it smaller and and the same time makes it impossible for R to
> detect this change, leading to segfaults. It is not clear to me that the
> same problem would occur on Mac, since the behavior of Oracle seems to
> be Linux specific. Possibly even Linux users on OpenJDK might not
> encounter any problems (not tested).
>
> So possibly the next release of rJava should also fix the xlsx problems
> with other packages.
>
> Best regards,
> Hilmar
>
>
> On 24/04/17 11:46, January W. wrote:
>> Hi Hilmar,
>>
>> weird. The memory problem seems be due to recursion (my R, version
>> 3.3.3, says: Error: evaluation nested too deeply: infinite recursion /
>> options(expressions=)?, just write traceback() to see how it happens),
>> but why does it segfault with xlsx? Nb xlsx is the culprit: neither
>> rJava nor xlsxjars cause the problem.
>>
>> On the other hand, quick googling for r+xlsx+segfault returns tons of
>> reports of how xlsx crashes in dozens of situations. See for example
>> http://r.789695.n4.nabble.com/segfault-in-gplots-heatmap-2-td4641808.html.
>> Also, the problem might be platform-specific. It would be interesting
>> to see whether anyone with a Mac can reproduce it.
>>
>> kind regards,
>>
>> j.
>>
>>
>>
>>
>>
>> On 19 April 2017 at 10:01, Hilmar Berger <berger at mpiib-berlin.mpg.de
>> <mailto:berger at mpiib-berlin.mpg.de>> wrote:
>>
>>      Hi,
>>
>>      following up on my own question, I found smaller example that does
>>      not require LIMMA:
>>
>>      setClass("FOOCLASS",
>>               representation("list")
>>      )
>>      ma = new("FOOCLASS", list(M=matrix(rnorm(300), 30,10)))
>>
>>      > ma * ma$M
>>      Error: C stack usage  7970512 is too close to the limit
>>
>>      > library(xlsx)
>>      Loading required package: rJava
>>      Loading required package: xlsxjars
>>      > ma * ma$M
>>      ---> Crash
>>
>>      xlsx seems to act like a catalyst here, with the product operator
>>      running in a deep nested iteration, exhausting the stack. Valgrind
>>      shows thousands of invalid stack accesses when loading xslx, which
>>      might contribute to the problem. Package xlsx has not been updated
>>      since 2014, so it might fail with more current versions of R or
>>      Java (I'm using Oracle Java 8).
>>
>>      Still, even if xlsx was the package to be blamed for the crash, I
>>      fail to understand what exactly the product operator is trying to
>>      do in the multiplication of the matrix with the object.
>>
>>      Best regards,
>>      Hilmar
>>
>>
>>      On 18/04/17 18:57, Hilmar Berger wrote:
>>
>>          Hi,
>>
>>          this is a problem that occurs in the presence of two libraries
>>          (limma, xlsx) and leads to a crash of R. The problematic code
>>          is the wrong application of sweep or the product ("*")
>>          function on an LIMMA MAList object. To my knowledge, limma
>>          does not define a "*" method for MAList objects.
>>
>>          If only LIMMA is loaded but not package xlsx, the code does
>>          not crash but rather produces an error ("Error: C stack usage
>>          7970512 is too close to the limit"). Loading only package
>>          rJava instead of xlsx does also not produce the crash but the
>>          error message instead. Note that xlsx functions are not
>>          explicitly used.
>>
>>          It could be reproduced on two different Linux machines running
>>          R-3.2.5, R-3.3.0 and R-3.3.2.
>>
>>          Code to reproduce the problem:
>>          ---------------------------------
>>          library(limma)
>>          library(xlsx)
>>
>>          # a MAList
>>          ma = new("MAList", list(A=matrix(rnorm(300), 30,10),
>>          M=matrix(rnorm(300), 30,10)))
>>
>>          # This should actually be sweep(ma$M, ...) for functional
>>          code, but I omitted the $M...
>>          #sweep(ma, 2, c(1:10), "*")
>>          # sweep will crash when doing the final operation of applying
>>          the function over the input matrix, which in this case is
>>          function "*"
>>
>>          f = match.fun("*")
>>          # This is not exactly the same as in sweep but it also tries
>>          to multiply the MAList object with a matrix of same size and
>>          leads to the crash
>>          f(ma, ma$M)
>>          # ma * ma$M has the same effect
>>          ---------------------------------
>>
>>          My output:
>>
>>          R version 3.3.0 (2016-05-03) -- "Supposedly Educational"
>>          Copyright (C) 2016 The R Foundation for Statistical Computing
>>          Platform: x86_64-pc-linux-gnu (64-bit)
>>
>>          R is free software and comes with ABSOLUTELY NO WARRANTY.
>>          You are welcome to redistribute it under certain conditions.
>>          Type 'license()' or 'licence()' for distribution details.
>>
>>            Natural language support but running in an English locale
>>
>>          R is a collaborative project with many contributors.
>>          Type 'contributors()' for more information and
>>          'citation()' on how to cite R or R packages in publications.
>>
>>          Type 'demo()' for some demos, 'help()' for on-line help, or
>>          'help.start()' for an HTML browser interface to help.
>>          Type 'q()' to quit R.
>>
>>          > library(limma)
>>          > library(xlsx)
>>          Loading required package: rJava
>>          Loading required package: xlsxjars
>>          >
>>          > sessionInfo()
>>          R version 3.3.0 (2016-05-03)
>>          Platform: x86_64-pc-linux-gnu (64-bit)
>>          Running under: Ubuntu 14.04.5 LTS
>>
>>          locale:
>>           [1] LC_CTYPE=en_US.UTF-8          LC_NUMERIC=C
>>          LC_TIME=en_US.UTF-8
>>           [4] LC_COLLATE=en_US.UTF-8 LC_MONETARY=en_US.UTF-8
>>          LC_MESSAGES=en_US.UTF-8
>>           [7] LC_PAPER=en_US.UTF-8          LC_NAME=en_US.UTF-8
>>          LC_ADDRESS=en_US.UTF-8
>>          [10] LC_TELEPHONE=en_US.UTF-8 LC_MEASUREMENT=en_US.UTF-8
>>          LC_IDENTIFICATION=en_US.UTF-8
>>
>>          attached base packages:
>>          [1] stats     graphics  grDevices utils     datasets methods base
>>
>>          other attached packages:
>>          [1] xlsx_0.5.7     xlsxjars_0.6.1 rJava_0.9-8 limma_3.30.7
>>
>>          loaded via a namespace (and not attached):
>>          [1] tools_3.3.0
>>          >
>>          > ma = new("MAList", list(A=matrix(rnorm(300), 30,10),
>>          M=matrix(rnorm(300), 30,10)))
>>          > #sweep(ma, 2, c(1:10), "*")
>>          >
>>          > f = match.fun("*")
>>          > f
>>          function (e1, e2)  .Primitive("*")
>>
>>          > f(ma, ma$M)
>>
>>          ----> crash to command line with segfault.
>>
>>          Best regards,
>>          Hilmar
>>
>>
>>      --
>>      Dr. Hilmar Berger, MD
>>      Max Planck Institute for Infection Biology
>>      Charit?platz 1
>>      D-10117 Berlin
>>      GERMANY
>>
>>      Phone: + 49 30 28460 430 <tel:%2B%2049%2030%2028460%20430>
>>      Fax: + 49 30 28460 401 <tel:%2B%2049%2030%2028460%20401>
>>       E-Mail: berger at mpiib-berlin.mpg.de
>>      <mailto:berger at mpiib-berlin.mpg.de>
>>      Web   : www.mpiib-berlin.mpg.de <http://www.mpiib-berlin.mpg.de>
>>
>>      ______________________________________________
>>      R-devel at r-project.org <mailto:R-devel at r-project.org> mailing list
>>      https://stat.ethz.ch/mailman/listinfo/r-devel
>>      <https://stat.ethz.ch/mailman/listinfo/r-devel>
>>
>>
>>
>>
>> -- 
>> -------- January Weiner --------------------------------------


From avraham.adler at gmail.com  Mon Apr 24 17:42:22 2017
From: avraham.adler at gmail.com (Avraham Adler)
Date: Mon, 24 Apr 2017 11:42:22 -0400
Subject: [Rd] TEXINFO error when building R-3.4.0
Message-ID: <CAL6gwn+8j5O+8K4ZWv9Y9V3mLoo67dhmr4OhS=mMLAXjgjLPYg@mail.gmail.com>

Hello.

I am trying to build 64 bit R-3.4.0 (specifically
R-patched_2017-04-23) on Windows 64 and have run into an issue with
building the html files. I am using Rtools34 version 1962, the texinfo
zip from <http://www.stats.ox.ac.uk/pub/Rtools/> unzipped into
C:\R\texinfo, and Strawberry perl 5.24.1.1-64bit. In my MkRules.local
I have the following, which worked for building R in 3.3.x:

# set this to YES to build static HTML help
BUILD_HTML = YES

# unset this if you are *not* using MiKTeX
MIKTEX = TRUE
# Recent MiKTEX does not provide texi2dvi and needs something like
TEXI2DVI = TEXINDEX=C:/Rtools/bin/texindex.exe texify

# for texinfo >= 5.1. If the texinfo files are installed at /packages/texinfo,
TEXI2ANY = C:/Strawberry/perl/bin/perl.exe -I/C:/R/texinfo C:/R/texinfo/texi2any
# if you do not have texinfo (default),
# TEXI2ANY = missing

Nevertheless, while building R-3.4 I get the following error:


------ Making HTML documentation ------
creating doc/manual/version.texi
creating doc/manual/R-FAQ.html
Can't locate Texinfo/Convert/Texinfo.pm in @INC (you may need to install the Tex
info::Convert::Texinfo module) (@INC contains: \usr\local\share\texinfo\lib\Text
-Unidecode\lib \usr\local\share\texinfo\lib\Unicode-EastAsianWidth\lib \usr\loca
l\share\texinfo\lib\libintl-perl\lib \usr\local\share\texinfo /C:/R/texinfo C:/S
trawberry/perl/site/lib C:/Strawberry/perl/vendor/lib C:/Strawberry/perl/lib .)
at C:/R/texinfo/texi2any line 100.
BEGIN failed--compilation aborted at C:/R/texinfo/texi2any line 100.
sed: can't read R-FAQ.html.tmp: No such file or directory
make[3]: *** [R-FAQ.html] Error 2
make[2]: *** [htmldocs] Error 2
make[1]: *** [all] Error 2
make: *** [distribution] Error 2

If it helps, Convert seems to be found in C:\R\texinfo\Texinfo\Convert
which is not in the list of @INC. Any and all help would be
appreciated.

Thank you,

Avi


From avraham.adler at gmail.com  Mon Apr 24 18:04:24 2017
From: avraham.adler at gmail.com (Avraham Adler)
Date: Mon, 24 Apr 2017 12:04:24 -0400
Subject: [Rd] TEXINFO error when building R-3.4.0
In-Reply-To: <CAL6gwn+8j5O+8K4ZWv9Y9V3mLoo67dhmr4OhS=mMLAXjgjLPYg@mail.gmail.com>
References: <CAL6gwn+8j5O+8K4ZWv9Y9V3mLoo67dhmr4OhS=mMLAXjgjLPYg@mail.gmail.com>
Message-ID: <CAL6gwnLFG_svU0-PWERXVm98NjkgKWMMdHR39gWsVLyR_r5E-Q@mail.gmail.com>

The fault was mine.

-I/C:/R/texinfo should have been -IC:/R/texinfo

Thank you,

Avi


From frederik at ofb.net  Mon Apr 24 21:34:27 2017
From: frederik at ofb.net (frederik at ofb.net)
Date: Mon, 24 Apr 2017 12:34:27 -0700
Subject: [Rd] tempdir() may be deleted during long-running R session
In-Reply-To: <22780.46838.39255.710673@max.eddelbuettel.com>
References: <c78e9022-04c2-3cda-5898-dceec8bc5e94@helsinki.fi>
 <15e3b0a3-e0a8-2da8-27c4-9268a5751986@stats.ox.ac.uk>
 <4f0797c5-a078-67ae-3992-cd66a82b454a@helsinki.fi>
 <22777.65060.465733.160015@max.eddelbuettel.com>
 <20170421173446.GB20737@ofb.net>
 <22780.46838.39255.710673@max.eddelbuettel.com>
Message-ID: <20170424193427.GC20737@ofb.net>

Dirk,

Your message felt a bit antagonistic to me, or maybe I'm not
understanding what you're trying to say. We all seem to agree that
different configurations exist, and that some Linux distributions are
configured to delete files in /tmp/ after a certain amount of time
(seems to be 10 days for Arch Linux, not sure about Ubuntu or Debian).

The question of how users of such distributions can individually work
around the problem Mikko identified has already been answered. The
question that remains is what we expect new users to do. It's not
really helpful to pretend that they will be reading the mailing list,
as exciting as it is, or that they'll read the "R Installation and
Administration" manual to make sure that their distribution did a good
job of packaging R. There are plenty more visible places where this
"gotcha" could be documented, than a manual I've never heard of until
now.

Even if a particular solution has to be implemented by the package
maintainers of various distributions, I think it is fitting to discuss
and solicit such solutions here on this mailing list. But it felt like
you were trying to stifle such discussion.

As it is, I don't even know what distributions are affected. I'm not
sure how to look up the contents of a "default" configuration on other
distributions.

Frederick


On Sun, Apr 23, 2017 at 09:15:18AM -0500, Dirk Eddelbuettel wrote:
> 
> On 21 April 2017 at 10:34, frederik at ofb.net wrote:
> | Hi Mikko,
> | 
> | I was bitten by this recently and I think some of the replies are
> | missing the point. As I understand it, the problem consists of these
> | elements:
> | 
> | 1. When R starts, it creates a directory like /tmp/RtmpVIeFj4
> | 
> | 2. Right after R starts I can create files in this directory with no
> |    error
> | 
> | 3. After some hours or days I can no longer create files in this
> |    directory, because it has been deleted
> 
> Nope. That is local to your system. Witness eg at my workstation:
> 
> /tmp$ ls -ltGd Rtmp* 
> drwx------ 3 edd 4096 Apr 21 16:12 Rtmp9K6bSN
> drwx------ 3 edd 4096 Apr 21 11:48 RtmpRRbaMP
> drwx------ 3 edd 4096 Apr 21 11:28 RtmpFlguFy
> drwx------ 3 edd 4096 Apr 20 13:06 RtmpWJDF3U
> drwx------ 3 edd 4096 Apr 18 15:58 RtmpY7ZIS1
> drwx------ 3 edd 4096 Apr 18 12:12 Rtmpzr9W0v
> drwx------ 2 edd 4096 Apr 16 16:02 RtmpeD27El
> drwx------ 2 edd 4096 Apr 16 15:57 Rtmp572FHk
> drwx------ 3 edd 4096 Apr 13 11:08 RtmpqP0JSf
> drwx------ 3 edd 4096 Apr 10 18:47 RtmpzRzyFb
> drwx------ 3 edd 4096 Apr  6 15:21 RtmpQhvAUb
> drwx------ 3 edd 4096 Apr  6 11:24 Rtmp2lFKPz
> drwx------ 3 edd 4096 Apr  5 20:57 RtmprCeWUS
> drwx------ 2 edd 4096 Apr  3 15:12 Rtmp8xviDl
> drwx------ 3 edd 4096 Mar 30 16:50 Rtmp8w9n5h
> drwx------ 3 edd 4096 Mar 28 11:33 RtmpjAg6iY
> drwx------ 2 edd 4096 Mar 28 09:26 RtmpYHSgZG
> drwx------ 2 edd 4096 Mar 27 11:21 Rtmp0gSV4e
> drwx------ 2 edd 4096 Mar 27 11:21 RtmpOnneiY
> drwx------ 2 edd 4096 Mar 27 11:17 RtmpIWeiTJ
> drwx------ 3 edd 4096 Mar 22 08:51 RtmpJkVsSJ
> drwx------ 3 edd 4096 Mar 21 10:33 Rtmp9a5KxL
> /tmp$ 
> 
> Clearly still there after a month. I tend to have some longer-running R
> sessions in either Emacs/ESS or RStudio.
> 
> So what I wrote in my last message here *clearly* applies to you: a local
> issue for which you have to take local action as R cannot know.  You also
> have a choice of setting variables to affect this.
>  
> | If R expected the directory to be deleted at random, and if we expect
> | users to call dir.create every time they access tempdir, then why did
> | R create the directory for us at the beginning of the session? That's
> | just setting people up to get weird bugs, which only appear in
> | difficult-to-reproduce situations (i.e. after the session has been
> | open for a long time).
> 
> I disagree. R has been doing this many years, possibly two decades.
>  
> | I think before we dismiss this we should think about possible in-R
> | solutions and why they are not feasible. Are there any packages which
> | would break if a call to 'tempdir' automatically recreated this
> | directory? (Or would it be too much of a performance hit to have
> | 'tempdir' check and even just issue a warning when the directory is
> | found not to exist?) Should we have a timer which periodically updates
> | the modification time of tempdir()? What do other long-running
> | programs do (e.g. screen, emacs)?
> 
> There are options you have right now.
> 
> Dirk
> 
> -- 
> http://dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org
>


From edd at debian.org  Mon Apr 24 22:09:28 2017
From: edd at debian.org (Dirk Eddelbuettel)
Date: Mon, 24 Apr 2017 15:09:28 -0500
Subject: [Rd] tempdir() may be deleted during long-running R session
In-Reply-To: <20170424193427.GC20737@ofb.net>
References: <c78e9022-04c2-3cda-5898-dceec8bc5e94@helsinki.fi>
 <15e3b0a3-e0a8-2da8-27c4-9268a5751986@stats.ox.ac.uk>
 <4f0797c5-a078-67ae-3992-cd66a82b454a@helsinki.fi>
 <22777.65060.465733.160015@max.eddelbuettel.com>
 <20170421173446.GB20737@ofb.net>
 <22780.46838.39255.710673@max.eddelbuettel.com>
 <20170424193427.GC20737@ofb.net>
Message-ID: <22782.23416.357607.28036@max.eddelbuettel.com>


On 24 April 2017 at 12:34, frederik at ofb.net wrote:
| As it is, I don't even know what distributions are affected. I'm not
| sure how to look up the contents of a "default" configuration on other
| distributions.

So how do you think R can automate that?  Hint: It can't.

Dirk

-- 
http://dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org


From andrzej.oles at gmail.com  Tue Apr 25 11:34:39 2017
From: andrzej.oles at gmail.com (=?UTF-8?Q?Andrzej_Ole=C5=9B?=)
Date: Tue, 25 Apr 2017 11:34:39 +0200
Subject: [Rd] Problems with S4 methods dispatching on `...` (aka
	dotsMethods)
In-Reply-To: <CAH7mKkgwa_7FRChyrxmKf8Ub_mDtX-WfREq-A4FbCvanQt8zpg@mail.gmail.com>
References: <CAH7mKkiZNJ_W8EsbEvobHmj1wHDcE2NmYVTuPq8Uxc+aGC6YOw@mail.gmail.com>
 <CAOQ5Nye8nD0FK5vuuz83i+5nEOomezMZx0iDjJ6ZKWK9M4Xk_w@mail.gmail.com>
 <CAH7mKkgwa_7FRChyrxmKf8Ub_mDtX-WfREq-A4FbCvanQt8zpg@mail.gmail.com>
Message-ID: <CAH7mKkgSFg8ki8sS4NXwrnv0m6hL4f_gePAK0SQnnhtGrvu88A@mail.gmail.com>

Hi Michael,

thanks again for your patch! I've tested it and I'm happy to confirm that
`callNextMethod()` works with methods dispatching on `...`.

However, the second issue I reported still seems to be unresolved. Consider
the following toy example, where the `f()` calls differ in result depending
on whether the dispatch happens on a formal argument or the `...` argument.


    f = function(x, ..., a = b) {
      b = "missing 'a'"
      print(a)
    }

    f()
    ## [1] missing 'a'

    f(a = 1)
    ## [1] 1

    setGeneric("f", signature = "x")

    # works as the non-generic version
    f()
    ## [1] missing 'a'

    setGeneric("f", signature = "...")

    # unexpectedly fails to find 'b'
    f()
    ## Error in print(a) : object 'b' not found


Any chances of fixing this?

Cheers,
Andrzej


On Fri, Apr 21, 2017 at 11:40 AM, Andrzej Ole? <andrzej.oles at gmail.com>
wrote:

> Great, thanks Michael for you quick response!
>
> I started off with a question on SO because I was not sure whether this
> was an actual bug or I was just missing something obvious. I'm looking
> forward to the patch.
>
> Cheers,
> Andrzej
>
>
> On Thu, Apr 20, 2017 at 10:28 PM, Michael Lawrence <
> lawrence.michael at gene.com> wrote:
>
>> Thanks for pointing out these issues. I have a fix that I will commit
>> soon.
>>
>> Btw, I would never have seen the post on Stack Overflow. It's best to
>> report bugs on the bugzilla.
>>
>> Michael
>>
>> On Thu, Apr 20, 2017 at 8:30 AM, Andrzej Ole? <andrzej.oles at gmail.com>
>> wrote:
>> > Hi all,
>> >
>> > I recently encountered some unexpected behavior with S4 generics
>> > dispatching on `...`, which I described in
>> > http://stackoverflow.com/questions/43499203/use-callnextmeth
>> od-with-dotsmethods
>> >
>> > TL;DR: `callNextMethod()` doesn't work in methods dispatching on `...`,
>> and
>> > arguments of such methods are resolved differently than the arguments of
>> > methods dispatching on formal arguments.
>> >
>> > Could this indicate a potential problem with the implementation of the
>> > `...` dispatch?
>> >
>> > Cheers,
>> > Andrzej
>> >
>> >         [[alternative HTML version deleted]]
>> >
>> > ______________________________________________
>> > R-devel at r-project.org mailing list
>> > https://stat.ethz.ch/mailman/listinfo/r-devel
>>
>
>

	[[alternative HTML version deleted]]


From maechler at stat.math.ethz.ch  Tue Apr 25 13:00:43 2017
From: maechler at stat.math.ethz.ch (Martin Maechler)
Date: Tue, 25 Apr 2017 13:00:43 +0200
Subject: [Rd] tempdir() may be deleted during long-running R session
In-Reply-To: <22780.46838.39255.710673@max.eddelbuettel.com>
References: <c78e9022-04c2-3cda-5898-dceec8bc5e94@helsinki.fi>
 <15e3b0a3-e0a8-2da8-27c4-9268a5751986@stats.ox.ac.uk>
 <4f0797c5-a078-67ae-3992-cd66a82b454a@helsinki.fi>
 <22777.65060.465733.160015@max.eddelbuettel.com>
 <20170421173446.GB20737@ofb.net>
 <22780.46838.39255.710673@max.eddelbuettel.com>
Message-ID: <22783.11355.51121.660887@stat.math.ethz.ch>

>>>>> Dirk Eddelbuettel <edd at debian.org>
>>>>>     on Sun, 23 Apr 2017 09:15:18 -0500 writes:

    > On 21 April 2017 at 10:34, frederik at ofb.net wrote:
    > | Hi Mikko,
    > | 
    > | I was bitten by this recently and I think some of the replies are
    > | missing the point. As I understand it, the problem consists of these
    > | elements:
    > | 
    > | 1. When R starts, it creates a directory like /tmp/RtmpVIeFj4
    > | 
    > | 2. Right after R starts I can create files in this directory with no
    > |    error
    > | 
    > | 3. After some hours or days I can no longer create files in this
    > |    directory, because it has been deleted

    > Nope. That is local to your system. 

Correct.  OTOH, Mikko and Frederik have a point in my view (below).

    > Witness eg at my workstation:

    > /tmp$ ls -ltGd Rtmp* 
    > drwx------ 3 edd 4096 Apr 21 16:12 Rtmp9K6bSN
    > drwx------ 3 edd 4096 Apr 21 11:48 RtmpRRbaMP
    > drwx------ 3 edd 4096 Apr 21 11:28 RtmpFlguFy
    > drwx------ 3 edd 4096 Apr 20 13:06 RtmpWJDF3U
    > drwx------ 3 edd 4096 Apr 18 15:58 RtmpY7ZIS1
    > drwx------ 3 edd 4096 Apr 18 12:12 Rtmpzr9W0v
    > drwx------ 2 edd 4096 Apr 16 16:02 RtmpeD27El
    > drwx------ 2 edd 4096 Apr 16 15:57 Rtmp572FHk
    > drwx------ 3 edd 4096 Apr 13 11:08 RtmpqP0JSf
    > drwx------ 3 edd 4096 Apr 10 18:47 RtmpzRzyFb
    > drwx------ 3 edd 4096 Apr  6 15:21 RtmpQhvAUb
    > drwx------ 3 edd 4096 Apr  6 11:24 Rtmp2lFKPz
    > drwx------ 3 edd 4096 Apr  5 20:57 RtmprCeWUS
    > drwx------ 2 edd 4096 Apr  3 15:12 Rtmp8xviDl
    > drwx------ 3 edd 4096 Mar 30 16:50 Rtmp8w9n5h
    > drwx------ 3 edd 4096 Mar 28 11:33 RtmpjAg6iY
    > drwx------ 2 edd 4096 Mar 28 09:26 RtmpYHSgZG
    > drwx------ 2 edd 4096 Mar 27 11:21 Rtmp0gSV4e
    > drwx------ 2 edd 4096 Mar 27 11:21 RtmpOnneiY
    > drwx------ 2 edd 4096 Mar 27 11:17 RtmpIWeiTJ
    > drwx------ 3 edd 4096 Mar 22 08:51 RtmpJkVsSJ
    > drwx------ 3 edd 4096 Mar 21 10:33 Rtmp9a5KxL
    > /tmp$ 

    > Clearly still there after a month. I tend to have some longer-running R
    > sessions in either Emacs/ESS or RStudio.

    > So what I wrote in my last message here *clearly* applies to you: a local
    > issue for which you have to take local action as R cannot know.  You also
    > have a choice of setting variables to affect this.

Thank you Dirk (and Brian).  That is all true, and of course I
have known about this myself "forever" as well.
 
    > | If R expected the directory to be deleted at random, and if we expect
    > | users to call dir.create every time they access tempdir, then why did
    > | R create the directory for us at the beginning of the session? That's
    > | just setting people up to get weird bugs, which only appear in
    > | difficult-to-reproduce situations (i.e. after the session has been
    > | open for a long time).

    > I disagree. R has been doing this many years, possibly two decades.

Yes, R has been doing this for a long time, including all the
configuration options with environment variables, and yes this
is sufficient "in principle".
 
    > | I think before we dismiss this we should think about possible in-R
    > | solutions and why they are not feasible. 

Here Mikko and Frederik do have a point I think.

    > | Are there any packages which
    > | would break if a call to 'tempdir' automatically recreated this
    > | directory? (Or would it be too much of a performance hit to have
    > | 'tempdir' check and even just issue a warning when the directory is
    > | found not to exist?)

    > | Should we have a timer which periodically updates
    > | the modification time of tempdir()? What do other long-running
    > | programs do (e.g. screen, emacs)?

Valid questions, in my view.  Before answering, let's try to see
how hard it would be to make the tempdir() function in R more versatile.

As I've found it is not at all hard to add an option which
checks the existence and if the directory is no longer "valid",
tries to recreate it (and if it fails doing that it calls the
famous R_Suicide(), as it does when R starts up and tempdir()
cannot be initialized correctly).

The proposed entry in NEWS is

   ? tempdir(check=TRUE) recreates the tmpdir() if it is no longer valid.

and of course the default would be status quo, i.e.,  check = FALSE,
and once this is in R-devel, we (those who install R-devel) can
experiment with it.

Martin


From jeroenooms at gmail.com  Tue Apr 25 15:05:51 2017
From: jeroenooms at gmail.com (Jeroen Ooms)
Date: Tue, 25 Apr 2017 15:05:51 +0200
Subject: [Rd] tempdir() may be deleted during long-running R session
In-Reply-To: <22783.11355.51121.660887@stat.math.ethz.ch>
References: <c78e9022-04c2-3cda-5898-dceec8bc5e94@helsinki.fi>
 <15e3b0a3-e0a8-2da8-27c4-9268a5751986@stats.ox.ac.uk>
 <4f0797c5-a078-67ae-3992-cd66a82b454a@helsinki.fi>
 <22777.65060.465733.160015@max.eddelbuettel.com>
 <20170421173446.GB20737@ofb.net>
 <22780.46838.39255.710673@max.eddelbuettel.com>
 <22783.11355.51121.660887@stat.math.ethz.ch>
Message-ID: <CABFfbXsXXxvF7qAA0F5ERd9rvZMAOce3RRTzd9zquHVeSFDn2g@mail.gmail.com>

On Tue, Apr 25, 2017 at 1:00 PM, Martin Maechler
<maechler at stat.math.ethz.ch> wrote:
> As I've found it is not at all hard to add an option which
> checks the existence and if the directory is no longer "valid",
> tries to recreate it (and if it fails doing that it calls the
> famous R_Suicide(), as it does when R starts up and tempdir()
> cannot be initialized correctly).

Perhaps this can also fix the problem with mcparallel deleting the
tempdir() when one of its children dies:

  file.exists(tempdir()) #TRUE
  parallel::mcparallel(q('no'))
  file.exists(tempdir()) # FALSE


From lawrence.michael at gene.com  Tue Apr 25 15:55:49 2017
From: lawrence.michael at gene.com (Michael Lawrence)
Date: Tue, 25 Apr 2017 06:55:49 -0700
Subject: [Rd] Problems with S4 methods dispatching on `...` (aka
	dotsMethods)
In-Reply-To: <CAH7mKkgSFg8ki8sS4NXwrnv0m6hL4f_gePAK0SQnnhtGrvu88A@mail.gmail.com>
References: <CAH7mKkiZNJ_W8EsbEvobHmj1wHDcE2NmYVTuPq8Uxc+aGC6YOw@mail.gmail.com>
 <CAOQ5Nye8nD0FK5vuuz83i+5nEOomezMZx0iDjJ6ZKWK9M4Xk_w@mail.gmail.com>
 <CAH7mKkgwa_7FRChyrxmKf8Ub_mDtX-WfREq-A4FbCvanQt8zpg@mail.gmail.com>
 <CAH7mKkgSFg8ki8sS4NXwrnv0m6hL4f_gePAK0SQnnhtGrvu88A@mail.gmail.com>
Message-ID: <CAOQ5Nyf0C3AQ3HJhyqY-ZW8fPxFVU6eJ6vvyysS5a9DPR408iQ@mail.gmail.com>

I attempted to fix it, and that example seems to work for me. It's
also a (passing) regression test in R. Are you sure you're using a new
enough R-devel?


On Tue, Apr 25, 2017 at 2:34 AM, Andrzej Ole? <andrzej.oles at gmail.com> wrote:
> Hi Michael,
>
> thanks again for your patch! I've tested it and I'm happy to confirm that
> `callNextMethod()` works with methods dispatching on `...`.
>
> However, the second issue I reported still seems to be unresolved. Consider
> the following toy example, where the `f()` calls differ in result depending
> on whether the dispatch happens on a formal argument or the `...` argument.
>
>
>     f = function(x, ..., a = b) {
>       b = "missing 'a'"
>       print(a)
>     }
>
>     f()
>     ## [1] missing 'a'
>
>     f(a = 1)
>     ## [1] 1
>
>     setGeneric("f", signature = "x")
>
>     # works as the non-generic version
>     f()
>     ## [1] missing 'a'
>
>     setGeneric("f", signature = "...")
>
>     # unexpectedly fails to find 'b'
>     f()
>     ## Error in print(a) : object 'b' not found
>
>
> Any chances of fixing this?
>
> Cheers,
> Andrzej
>
>
>
> On Fri, Apr 21, 2017 at 11:40 AM, Andrzej Ole? <andrzej.oles at gmail.com>
> wrote:
>>
>> Great, thanks Michael for you quick response!
>>
>> I started off with a question on SO because I was not sure whether this
>> was an actual bug or I was just missing something obvious. I'm looking
>> forward to the patch.
>>
>> Cheers,
>> Andrzej
>>
>>
>> On Thu, Apr 20, 2017 at 10:28 PM, Michael Lawrence
>> <lawrence.michael at gene.com> wrote:
>>>
>>> Thanks for pointing out these issues. I have a fix that I will commit
>>> soon.
>>>
>>> Btw, I would never have seen the post on Stack Overflow. It's best to
>>> report bugs on the bugzilla.
>>>
>>> Michael
>>>
>>> On Thu, Apr 20, 2017 at 8:30 AM, Andrzej Ole? <andrzej.oles at gmail.com>
>>> wrote:
>>> > Hi all,
>>> >
>>> > I recently encountered some unexpected behavior with S4 generics
>>> > dispatching on `...`, which I described in
>>> >
>>> > http://stackoverflow.com/questions/43499203/use-callnextmethod-with-dotsmethods
>>> >
>>> > TL;DR: `callNextMethod()` doesn't work in methods dispatching on `...`,
>>> > and
>>> > arguments of such methods are resolved differently than the arguments
>>> > of
>>> > methods dispatching on formal arguments.
>>> >
>>> > Could this indicate a potential problem with the implementation of the
>>> > `...` dispatch?
>>> >
>>> > Cheers,
>>> > Andrzej
>>> >
>>> >         [[alternative HTML version deleted]]
>>> >
>>> > ______________________________________________
>>> > R-devel at r-project.org mailing list
>>> > https://stat.ethz.ch/mailman/listinfo/r-devel
>>
>>
>


From andrzej.oles at gmail.com  Tue Apr 25 16:15:08 2017
From: andrzej.oles at gmail.com (=?UTF-8?Q?Andrzej_Ole=C5=9B?=)
Date: Tue, 25 Apr 2017 16:15:08 +0200
Subject: [Rd] Problems with S4 methods dispatching on `...` (aka
	dotsMethods)
In-Reply-To: <CAOQ5Nyf0C3AQ3HJhyqY-ZW8fPxFVU6eJ6vvyysS5a9DPR408iQ@mail.gmail.com>
References: <CAH7mKkiZNJ_W8EsbEvobHmj1wHDcE2NmYVTuPq8Uxc+aGC6YOw@mail.gmail.com>
 <CAOQ5Nye8nD0FK5vuuz83i+5nEOomezMZx0iDjJ6ZKWK9M4Xk_w@mail.gmail.com>
 <CAH7mKkgwa_7FRChyrxmKf8Ub_mDtX-WfREq-A4FbCvanQt8zpg@mail.gmail.com>
 <CAH7mKkgSFg8ki8sS4NXwrnv0m6hL4f_gePAK0SQnnhtGrvu88A@mail.gmail.com>
 <CAOQ5Nyf0C3AQ3HJhyqY-ZW8fPxFVU6eJ6vvyysS5a9DPR408iQ@mail.gmail.com>
Message-ID: <CAH7mKkgTbdxpuiZz+V+zL-xCk6hQtSkj9UrmseDxzANqGEBkfQ@mail.gmail.com>

You're right, I must have mixed up my R versions when running the example,
as the problem seems to be resolved in R-devel.

Sorry for the noise and thanks again for fixing this.

Andrzej

On Tue, Apr 25, 2017 at 3:55 PM, Michael Lawrence <lawrence.michael at gene.com
> wrote:

> I attempted to fix it, and that example seems to work for me. It's
> also a (passing) regression test in R. Are you sure you're using a new
> enough R-devel?
>
>
> On Tue, Apr 25, 2017 at 2:34 AM, Andrzej Ole? <andrzej.oles at gmail.com>
> wrote:
> > Hi Michael,
> >
> > thanks again for your patch! I've tested it and I'm happy to confirm that
> > `callNextMethod()` works with methods dispatching on `...`.
> >
> > However, the second issue I reported still seems to be unresolved.
> Consider
> > the following toy example, where the `f()` calls differ in result
> depending
> > on whether the dispatch happens on a formal argument or the `...`
> argument.
> >
> >
> >     f = function(x, ..., a = b) {
> >       b = "missing 'a'"
> >       print(a)
> >     }
> >
> >     f()
> >     ## [1] missing 'a'
> >
> >     f(a = 1)
> >     ## [1] 1
> >
> >     setGeneric("f", signature = "x")
> >
> >     # works as the non-generic version
> >     f()
> >     ## [1] missing 'a'
> >
> >     setGeneric("f", signature = "...")
> >
> >     # unexpectedly fails to find 'b'
> >     f()
> >     ## Error in print(a) : object 'b' not found
> >
> >
> > Any chances of fixing this?
> >
> > Cheers,
> > Andrzej
> >
> >
> >
> > On Fri, Apr 21, 2017 at 11:40 AM, Andrzej Ole? <andrzej.oles at gmail.com>
> > wrote:
> >>
> >> Great, thanks Michael for you quick response!
> >>
> >> I started off with a question on SO because I was not sure whether this
> >> was an actual bug or I was just missing something obvious. I'm looking
> >> forward to the patch.
> >>
> >> Cheers,
> >> Andrzej
> >>
> >>
> >> On Thu, Apr 20, 2017 at 10:28 PM, Michael Lawrence
> >> <lawrence.michael at gene.com> wrote:
> >>>
> >>> Thanks for pointing out these issues. I have a fix that I will commit
> >>> soon.
> >>>
> >>> Btw, I would never have seen the post on Stack Overflow. It's best to
> >>> report bugs on the bugzilla.
> >>>
> >>> Michael
> >>>
> >>> On Thu, Apr 20, 2017 at 8:30 AM, Andrzej Ole? <andrzej.oles at gmail.com>
> >>> wrote:
> >>> > Hi all,
> >>> >
> >>> > I recently encountered some unexpected behavior with S4 generics
> >>> > dispatching on `...`, which I described in
> >>> >
> >>> > http://stackoverflow.com/questions/43499203/use-callnextmethod-with-
> dotsmethods
> >>> >
> >>> > TL;DR: `callNextMethod()` doesn't work in methods dispatching on
> `...`,
> >>> > and
> >>> > arguments of such methods are resolved differently than the arguments
> >>> > of
> >>> > methods dispatching on formal arguments.
> >>> >
> >>> > Could this indicate a potential problem with the implementation of
> the
> >>> > `...` dispatch?
> >>> >
> >>> > Cheers,
> >>> > Andrzej
> >>> >
> >>> >         [[alternative HTML version deleted]]
> >>> >
> >>> > ______________________________________________
> >>> > R-devel at r-project.org mailing list
> >>> > https://stat.ethz.ch/mailman/listinfo/r-devel
> >>
> >>
> >
>

	[[alternative HTML version deleted]]


From MEC at stowers.org  Tue Apr 25 16:41:58 2017
From: MEC at stowers.org (Cook, Malcolm)
Date: Tue, 25 Apr 2017 14:41:58 +0000
Subject: [Rd] tempdir() may be deleted during long-running R session
In-Reply-To: <22783.11355.51121.660887@stat.math.ethz.ch>
References: <c78e9022-04c2-3cda-5898-dceec8bc5e94@helsinki.fi>
 <15e3b0a3-e0a8-2da8-27c4-9268a5751986@stats.ox.ac.uk>
 <4f0797c5-a078-67ae-3992-cd66a82b454a@helsinki.fi>
 <22777.65060.465733.160015@max.eddelbuettel.com>
 <20170421173446.GB20737@ofb.net>
 <22780.46838.39255.710673@max.eddelbuettel.com>
 <22783.11355.51121.660887@stat.math.ethz.ch>
Message-ID: <ea6a1fb2067a4c98b113c878789faf9f@exchsrv2.sgc.loc>

Chiming in late on this thread...

>     > | Are there any packages which
 >     > | would break if a call to 'tempdir' automatically recreated this
 >     > | directory? (Or would it be too much of a performance hit to have
 >     > | 'tempdir' check and even just issue a warning when the directory is
 >     > | found not to exist?)
 > 
 >     > | Should we have a timer which periodically updates
 >     > | the modification time of tempdir()? What do other long-running
 >     > | programs do (e.g. screen, emacs)?
 > 
 > Valid questions, in my view.  Before answering, let's try to see
 > how hard it would be to make the tempdir() function in R more versatile.

Might this combination serve the purpose: 
	* R session keeps an open handle on the tempdir it creates, 
	* whatever tempdir harvesting cron job the user has be made sensitive enough not to delete open files (including open directories)

 > 
 > As I've found it is not at all hard to add an option which
 > checks the existence and if the directory is no longer "valid",
 > tries to recreate it (and if it fails doing that it calls the
 > famous R_Suicide(), as it does when R starts up and tempdir()
 > cannot be initialized correctly).
 > 
 > The proposed entry in NEWS is
 > 
 >    ? tempdir(check=TRUE) recreates the tmpdir() if it is no longer valid.
 > 
 > and of course the default would be status quo, i.e.,  check = FALSE,
 > and once this is in R-devel, we (those who install R-devel) can
 > experiment with it.
 > 
 > Martin
 


From maechler at stat.math.ethz.ch  Tue Apr 25 17:53:47 2017
From: maechler at stat.math.ethz.ch (Martin Maechler)
Date: Tue, 25 Apr 2017 17:53:47 +0200
Subject: [Rd] tempdir() may be deleted during long-running R session
In-Reply-To: <CABFfbXsXXxvF7qAA0F5ERd9rvZMAOce3RRTzd9zquHVeSFDn2g@mail.gmail.com>
References: <c78e9022-04c2-3cda-5898-dceec8bc5e94@helsinki.fi>
 <15e3b0a3-e0a8-2da8-27c4-9268a5751986@stats.ox.ac.uk>
 <4f0797c5-a078-67ae-3992-cd66a82b454a@helsinki.fi>
 <22777.65060.465733.160015@max.eddelbuettel.com>
 <20170421173446.GB20737@ofb.net>
 <22780.46838.39255.710673@max.eddelbuettel.com>
 <22783.11355.51121.660887@stat.math.ethz.ch>
 <CABFfbXsXXxvF7qAA0F5ERd9rvZMAOce3RRTzd9zquHVeSFDn2g@mail.gmail.com>
Message-ID: <22783.28939.482139.354035@stat.math.ethz.ch>

>>>>> Jeroen Ooms <jeroenooms at gmail.com>
>>>>>     on Tue, 25 Apr 2017 15:05:51 +0200 writes:

    > On Tue, Apr 25, 2017 at 1:00 PM, Martin Maechler
    > <maechler at stat.math.ethz.ch> wrote:
    >> As I've found it is not at all hard to add an option
    >> which checks the existence and if the directory is no
    >> longer "valid", tries to recreate it (and if it fails
    >> doing that it calls the famous R_Suicide(), as it does
    >> when R starts up and tempdir() cannot be initialized
    >> correctly).

    > Perhaps this can also fix the problem with mcparallel
    > deleting the tempdir() when one of its children dies:

   >   file.exists(tempdir()) #TRUE
   >   parallel::mcparallel(q('no'))
   >   file.exists(tempdir()) # FALSE

Thank you, Jeroen, for the extra example.

I now have comitted the new feature... (completely back
compatible: in R's code tempdir() is not yet called with an
argument and the default is  check = FALSE ),
actually in a "suicide-free" way ...  which needed only slightly
more code.

In the worst case, one could save the R session by
   Sys.setenv(TEMPDIR = "<something writable>")
if for instance /tmp/ suddenly became unwritable for the user.

What we could consider is making the default of 'check' settable
by an option, and experiment with setting the option to TRUE, so
all such problems would be auto-solved (says the incurable optimist ...).

Martin


From gmbecker at ucdavis.edu  Tue Apr 25 18:03:01 2017
From: gmbecker at ucdavis.edu (Gabriel Becker)
Date: Tue, 25 Apr 2017 09:03:01 -0700
Subject: [Rd] tempdir() may be deleted during long-running R session
In-Reply-To: <22783.28939.482139.354035@stat.math.ethz.ch>
References: <c78e9022-04c2-3cda-5898-dceec8bc5e94@helsinki.fi>
 <15e3b0a3-e0a8-2da8-27c4-9268a5751986@stats.ox.ac.uk>
 <4f0797c5-a078-67ae-3992-cd66a82b454a@helsinki.fi>
 <22777.65060.465733.160015@max.eddelbuettel.com>
 <20170421173446.GB20737@ofb.net>
 <22780.46838.39255.710673@max.eddelbuettel.com>
 <22783.11355.51121.660887@stat.math.ethz.ch>
 <CABFfbXsXXxvF7qAA0F5ERd9rvZMAOce3RRTzd9zquHVeSFDn2g@mail.gmail.com>
 <22783.28939.482139.354035@stat.math.ethz.ch>
Message-ID: <CADwqtCMdcpBARji0j=qjxVvCzAn71UA5tHQG3FgE3rOHbofUtQ@mail.gmail.com>

Martin,

Thanks for your work on this.

One thing that seems to be missing from the conversation is that recreating
the temp directory will prevent future failures when R wants to write a
temp file, but the files will, of course, not be there. Any code written
assuming the contract is that the temporary directory, and thus temporary
files, will not be cleaned up before the R process exits (which was my
naive assumption before this thread, and is the behavior AFAICT on all the
systems I regularly use) will still break.

I'm not saying that's necessarily fixable (though the R keeping a permanent
pointer to a file in the dir suggested by Malcom might? fix it.), but I
would argue if it IS fixable, a fix that includes that would be preferable.

Best,
~G

On Tue, Apr 25, 2017 at 8:53 AM, Martin Maechler <maechler at stat.math.ethz.ch
> wrote:

> >>>>> Jeroen Ooms <jeroenooms at gmail.com>
> >>>>>     on Tue, 25 Apr 2017 15:05:51 +0200 writes:
>
>     > On Tue, Apr 25, 2017 at 1:00 PM, Martin Maechler
>     > <maechler at stat.math.ethz.ch> wrote:
>     >> As I've found it is not at all hard to add an option
>     >> which checks the existence and if the directory is no
>     >> longer "valid", tries to recreate it (and if it fails
>     >> doing that it calls the famous R_Suicide(), as it does
>     >> when R starts up and tempdir() cannot be initialized
>     >> correctly).
>
>     > Perhaps this can also fix the problem with mcparallel
>     > deleting the tempdir() when one of its children dies:
>
>    >   file.exists(tempdir()) #TRUE
>    >   parallel::mcparallel(q('no'))
>    >   file.exists(tempdir()) # FALSE
>
> Thank you, Jeroen, for the extra example.
>
> I now have comitted the new feature... (completely back
> compatible: in R's code tempdir() is not yet called with an
> argument and the default is  check = FALSE ),
> actually in a "suicide-free" way ...  which needed only slightly
> more code.
>
> In the worst case, one could save the R session by
>    Sys.setenv(TEMPDIR = "<something writable>")
> if for instance /tmp/ suddenly became unwritable for the user.
>
> What we could consider is making the default of 'check' settable
> by an option, and experiment with setting the option to TRUE, so
> all such problems would be auto-solved (says the incurable optimist ...).
>
> Martin
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>



-- 
Gabriel Becker, PhD
Associate Scientist (Bioinformatics)
Genentech Research

	[[alternative HTML version deleted]]


From MEC at stowers.org  Tue Apr 25 18:12:43 2017
From: MEC at stowers.org (Cook, Malcolm)
Date: Tue, 25 Apr 2017 16:12:43 +0000
Subject: [Rd] tempdir() may be deleted during long-running R session
In-Reply-To: <CADwqtCMdcpBARji0j=qjxVvCzAn71UA5tHQG3FgE3rOHbofUtQ@mail.gmail.com>
References: <c78e9022-04c2-3cda-5898-dceec8bc5e94@helsinki.fi>
 <15e3b0a3-e0a8-2da8-27c4-9268a5751986@stats.ox.ac.uk>
 <4f0797c5-a078-67ae-3992-cd66a82b454a@helsinki.fi>
 <22777.65060.465733.160015@max.eddelbuettel.com>
 <20170421173446.GB20737@ofb.net>
 <22780.46838.39255.710673@max.eddelbuettel.com>
 <22783.11355.51121.660887@stat.math.ethz.ch>
 <CABFfbXsXXxvF7qAA0F5ERd9rvZMAOce3RRTzd9zquHVeSFDn2g@mail.gmail.com>
 <22783.28939.482139.354035@stat.math.ethz.ch>
 <CADwqtCMdcpBARji0j=qjxVvCzAn71UA5tHQG3FgE3rOHbofUtQ@mail.gmail.com>
Message-ID: <5b9bdc4afa1a48569934571a4b8b87c7@exchsrv2.sgc.loc>

> Martin,
 > 
 > Thanks for your work on this.
 > 
 > One thing that seems to be missing from the conversation is that recreating
 > the temp directory will prevent future failures when R wants to write a
 > temp file, but the files will, of course, not be there. Any code written
 > assuming the contract is that the temporary directory, and thus temporary
 > files, will not be cleaned up before the R process exits (which was my
 > naive assumption before this thread, and is the behavior AFAICT on all the
 > systems I regularly use) will still break.
 > 

That is the kind of scenario I was hoping to obviate with my suggestion...

 > I'm not saying that's necessarily fixable (though the R keeping a permanent
 > pointer to a file in the dir suggested by Malcom might? fix it.), 

(and, FWIW, that's "Malcolm" with two "l"s.  I think all those missing "l"s are flattened out versions of all the extra close parens I typed in the 80s that somehow got lost on the nets...)))

> but I
 > would argue if it IS fixable, a fix that includes that would be preferable.

Agreed!

 > 
 > Best,
 > ~G
 > 
 > On Tue, Apr 25, 2017 at 8:53 AM, Martin Maechler
 > <maechler at stat.math.ethz.ch
 > > wrote:
 > 
 > > >>>>> Jeroen Ooms <jeroenooms at gmail.com>
 > > >>>>>     on Tue, 25 Apr 2017 15:05:51 +0200 writes:
 > >
 > >     > On Tue, Apr 25, 2017 at 1:00 PM, Martin Maechler
 > >     > <maechler at stat.math.ethz.ch> wrote:
 > >     >> As I've found it is not at all hard to add an option
 > >     >> which checks the existence and if the directory is no
 > >     >> longer "valid", tries to recreate it (and if it fails
 > >     >> doing that it calls the famous R_Suicide(), as it does
 > >     >> when R starts up and tempdir() cannot be initialized
 > >     >> correctly).
 > >
 > >     > Perhaps this can also fix the problem with mcparallel
 > >     > deleting the tempdir() when one of its children dies:
 > >
 > >    >   file.exists(tempdir()) #TRUE
 > >    >   parallel::mcparallel(q('no'))
 > >    >   file.exists(tempdir()) # FALSE
 > >
 > > Thank you, Jeroen, for the extra example.
 > >
 > > I now have comitted the new feature... (completely back
 > > compatible: in R's code tempdir() is not yet called with an
 > > argument and the default is  check = FALSE ),
 > > actually in a "suicide-free" way ...  which needed only slightly
 > > more code.
 > >
 > > In the worst case, one could save the R session by
 > >    Sys.setenv(TEMPDIR = "<something writable>")
 > > if for instance /tmp/ suddenly became unwritable for the user.
 > >
 > > What we could consider is making the default of 'check' settable
 > > by an option, and experiment with setting the option to TRUE, so
 > > all such problems would be auto-solved (says the incurable optimist ...).
 > >
 > > Martin
 > >
 > > ______________________________________________
 > > R-devel at r-project.org mailing list
 > > https://stat.ethz.ch/mailman/listinfo/r-devel
 > >
 > 
 > 
 > 
 > --
 > Gabriel Becker, PhD
 > Associate Scientist (Bioinformatics)
 > Genentech Research
 > 
 > 	[[alternative HTML version deleted]]
 > 
 > ______________________________________________
 > R-devel at r-project.org mailing list
 > https://stat.ethz.ch/mailman/listinfo/r-devel


From infinity0 at pwned.gg  Tue Apr 25 18:34:00 2017
From: infinity0 at pwned.gg (Ximin Luo)
Date: Tue, 25 Apr 2017 16:34:00 +0000
Subject: [Rd] Generate reproducible output independently of the build path
Message-ID: <c71a9aa3-7eef-a75e-550b-8447e8bfba61@pwned.gg>

(please keep me CCd, I am not subscribed)

Dear R developers,

At the Reproducible Builds project we've been trying to get build tools and packages generate bit-for-bit identical output, even under different build paths. This is beneficial for users because they can more easily compare their builds with others, as well as other reasons.

At the moment about 400 out of 26000 Debian packages are unreproducible due to how R writes paths.rds files as well as RDB files. An example diff is here:

https://tests.reproducible-builds.org/debian/rb-pkg/unstable/amd64/diffoscope-results/r-cran-tensor.html

I've attached a patch (applies to both 3.3.3 and 3.4) that fixes this issue; however I know it's not perfect and would welcome feedback on how to make it acceptable to the R project.

For example, I've tried to limit the effects of the patch only to the RDB loading/saving code, but I'm not familiar with the codebase so it would be good if someone could verify that I did this correctly. Then, ideally we would also add some tests to ensure that unreproduciblity does not crop back in "by accident". R code heavily relies on absolute paths, and I went down several dead-ends chasing and editing variables containing absolute paths, before I finally managed to get this working patch, so I suspect that without specific reproducibility tests, this issue might recur in the future.

I've checked that the existing tests still pass, with this patch applied to the Debian package. I have some errors like:

-  Warning message:
-  In utils::packageDescription(basename(dir), dirname(dir)) :
-    no package 'cluster' was found
-* checking R files for non-ASCII characters ... OK
-* checking R files for syntax errors ... OK
:* checking whether the package can be loaded ... ERROR

but I also get the same errors when I build the unpatched Debian package. And if I run e.g. `Rscript -e 'library(cluster)'` with a patched Rscript, there is no error and the exit code is 0.

Ximin

-- 
GPG: ed25519/56034877E1F87C35
GPG: rsa4096/1318EFAC5FBBDBCE
https://github.com/infinity0/pubkeys.git
-------------- next part --------------
A non-text attachment was scrubbed...
Name: r-base_reproducible-build-paths.patch
Type: text/x-diff
Size: 2618 bytes
Desc: not available
URL: <https://stat.ethz.ch/pipermail/r-devel/attachments/20170425/c7aff61d/attachment.bin>

From wdunlap at tibco.com  Tue Apr 25 22:28:24 2017
From: wdunlap at tibco.com (William Dunlap)
Date: Tue, 25 Apr 2017 13:28:24 -0700
Subject: [Rd] R_CMethodDef incompatibility (affects R_registerRoutines)
Message-ID: <CAF8bMcap-2VMkKr99hfa7io-N6aLcZODsW1_91ZewwzhRmbouw@mail.gmail.com>

I recently noticed a change between R-3.3.3 and R-3.4.0 in the definition
of the R_CMethodDef struct.
  typedef struct {
      const char *name;
      DL_FUNC     fun;
      int         numArgs;
-
      R_NativePrimitiveArgType *types;
-     R_NativeArgStyle         *styles;
-
  } R_CMethodDef;

I suspect this is the reason that packages installed by R-3.4.0 and loaded
into R-3.3.3 will crash the latter if the package registers routines to be
called from .C or .Fortran:
% R-3.3.3 --quiet
> library(sp, lib.loc=c("/home/R/R-3.4.0/lib64/R/site-library"))

 *** caught segfault ***
address 0x7, cause 'memory not mapped'

Traceback:
 1: dyn.load(file, DLLpath = DLLpath, ...)
 2: library.dynam(lib, package, package.lib)
 3: loadNamespace(package, lib.loc)
 4: doTryCatch(return(expr), name, parentenv, handler)
 5: tryCatchOne(expr, names, parentenv, handlers[[1L]])
 6: tryCatchList(expr, classes, parentenv, handlers)
 7: tryCatch(expr, error = function(e) {    call <- conditionCall(e)    if
(!is.null(call)) {        if (identical(call[[1L]], quote(doTryCatch)))
        call <- sys.call(-4L)        dcall <- deparse(call)[1L]
 prefix <- paste("Error in", dcall, ": ")        LONG <- 75L        msg <-
conditionMessage(e)        sm <- strsplit(msg, "\n")[[1L]]        w <- 14L
+ nchar(dcall, type = "w") + nchar(sm[1L], type = "w")        if (is.na(w))
            w <- 14L + nchar(dcall, type = "b") + nchar(sm[1L],
    type = "b")        if (w > LONG)             prefix <- paste0(prefix,
"\n  ")    }    else prefix <- "Error : "    msg <- paste0(prefix,
conditionMessage(e), "\n")    .Internal(seterrmessage(msg[1L]))    if
(!silent && identical(getOption("show.error.messages"),         TRUE)) {
     cat(msg, file = stderr())        .Internal(printDeferredWarnings())
 }    invisible(structure(msg, class = "try-error", condition = e))})
 8: try({    attr(package, "LibPath") <- which.lib.loc    ns <-
loadNamespace(package, lib.loc)    env <- attachNamespace(ns, pos = pos,
deps)})
 9: library(sp, lib.loc = c("/home/R/R-3.4.0/lib64/R/site-library"))

Possible actions:
1: abort (with core dump, if enabled)
2: normal R exit
3: exit R without saving workspace
4: exit R saving workspace
Selection:

Was removing the R_NativeArgStyle field intended?

Bill Dunlap
TIBCO Software
wdunlap tibco.com

	[[alternative HTML version deleted]]


From b.rowlingson at lancaster.ac.uk  Tue Apr 25 23:28:22 2017
From: b.rowlingson at lancaster.ac.uk (Barry Rowlingson)
Date: Tue, 25 Apr 2017 22:28:22 +0100
Subject: [Rd] R on OpenHub
Message-ID: <CANVKczP_0HuMXyCJJt73uzpkeqwrkqtUmukyDSM3rBvfzZvYfw@mail.gmail.com>

Does anyone want to manage the record for R on OpenHub?

OpenHub is a site that records metrics for open source projects. At
some point a record for R was created:

https://www.openhub.net/p/r_project

but there's no manager listed.

 OpenHub says:

"""
 * Only someone who works on the project and has a close connection to
it should apply. Ideally the owner, founder, lead developer, or
release manager.
"""

So not me. Sounds more like it needs to be someone in R-core or an R
Foundation luminary.

OpenHub is used by the OSGeo Live DVD to generate metrics for all the
projects on the DVD, and I've just been asked by the OSGeo Live team
to inquire about this.

If nobody wants to do it, no biggie, I think it just means the project
information will be less accurate.

Barry


From frederik at ofb.net  Wed Apr 26 06:13:59 2017
From: frederik at ofb.net (frederik at ofb.net)
Date: Tue, 25 Apr 2017 21:13:59 -0700
Subject: [Rd] tempdir() may be deleted during long-running R session
In-Reply-To: <ea6a1fb2067a4c98b113c878789faf9f@exchsrv2.sgc.loc>
References: <c78e9022-04c2-3cda-5898-dceec8bc5e94@helsinki.fi>
 <15e3b0a3-e0a8-2da8-27c4-9268a5751986@stats.ox.ac.uk>
 <4f0797c5-a078-67ae-3992-cd66a82b454a@helsinki.fi>
 <22777.65060.465733.160015@max.eddelbuettel.com>
 <20170421173446.GB20737@ofb.net>
 <22780.46838.39255.710673@max.eddelbuettel.com>
 <22783.11355.51121.660887@stat.math.ethz.ch>
 <ea6a1fb2067a4c98b113c878789faf9f@exchsrv2.sgc.loc>
Message-ID: <20170426041358.GD20737@ofb.net>

On Tue, Apr 25, 2017 at 02:41:58PM +0000, Cook, Malcolm wrote:
> Might this combination serve the purpose: 
> 	* R session keeps an open handle on the tempdir it creates, 
> 	* whatever tempdir harvesting cron job the user has be made sensitive enough not to delete open files (including open directories)

Good suggestion but doesn't work with the (increasingly popular)
"Systemd":

    $ mkdir /tmp/somedir
    $ touch -d "12 days ago" /tmp/somedir/
    $ cd /tmp/somedir/
    $ sudo systemd-tmpfiles --clean
    $ ls /tmp/somedir/
    ls: cannot access '/tmp/somedir/': No such file or directory

I would advocate just changing 'tempfile()' so that it recreates the
directory where the file is (the "dirname") before returning the file
path. This would have fixed the issue I ran into. Changing 'tempdir()'
to recreate the directory is another option.

Thanks,

Frederick


From frederik at ofb.net  Wed Apr 26 06:51:40 2017
From: frederik at ofb.net (frederik at ofb.net)
Date: Tue, 25 Apr 2017 21:51:40 -0700
Subject: [Rd] tempdir() may be deleted during long-running R session
In-Reply-To: <CADwqtCMdcpBARji0j=qjxVvCzAn71UA5tHQG3FgE3rOHbofUtQ@mail.gmail.com>
References: <c78e9022-04c2-3cda-5898-dceec8bc5e94@helsinki.fi>
 <15e3b0a3-e0a8-2da8-27c4-9268a5751986@stats.ox.ac.uk>
 <4f0797c5-a078-67ae-3992-cd66a82b454a@helsinki.fi>
 <22777.65060.465733.160015@max.eddelbuettel.com>
 <20170421173446.GB20737@ofb.net>
 <22780.46838.39255.710673@max.eddelbuettel.com>
 <22783.11355.51121.660887@stat.math.ethz.ch>
 <CABFfbXsXXxvF7qAA0F5ERd9rvZMAOce3RRTzd9zquHVeSFDn2g@mail.gmail.com>
 <22783.28939.482139.354035@stat.math.ethz.ch>
 <CADwqtCMdcpBARji0j=qjxVvCzAn71UA5tHQG3FgE3rOHbofUtQ@mail.gmail.com>
Message-ID: <20170426045140.GE20737@ofb.net>

Hi Gabriel,

Thanks for asking for a better solution, as far as actually preventing
temporary files from getting deleted in the first place.

I still don't know very much about other peoples' distributions, but
Arch uses Systemd which is the culprit on my system. Systemd's
'tmpfiles.d(5)' man page says we can create configuration files in
locations like

    /usr/lib/tmpfiles.d/*.conf
    /etc/tmpfiles.d/*.conf

which control when temporary files are deleted. There is an 'x'
specifier which accepts glob paths and can protect everything in
/tmp/Rtmp* ...:

    $ mkdir /tmp/Rtmpaoeu
    $ touch -d "12 days ago" /tmp/Rtmpaoeu
    $ sudo systemd-tmpfiles --clean
    $ ls /tmp/Rtmpaoeu
    ls: cannot access '/tmp/Rtmpaoeu': No such file or directory

    $ sudo sh -c "echo 'x /tmp/Rtmp*' > /etc/tmpfiles.d/R.conf"
    $ mkdir /tmp/Rtmpaoeu
    $ touch -d "12 days ago" /tmp/Rtmpaoeu
    $ sudo systemd-tmpfiles --clean
    $ ls /tmp/Rtmpaoeu
    (still there)

I guess installing such a file is something that would be done by the
various distribution-specific R packages. Even though I run R from a
home-directory compiled version, I have my distribution's binary
package installed globally, and so I would get the benefit of this
protection from the distribution package. If this sounds like it makes
sense then I can ask the Arch package maintainer to do it. Of course I
don't need permission but it would be good to hear if I'm missing or
forgetting something.

Based on what other packages are doing the file should probably be
named:

    /usr/lib/tmpfiles.d/R.conf

and contain:

    x /tmp/Rtmp*

(For example on my system I have stuff like this owned by various
packages:

    $ pacman -Qo /usr/lib/tmpfiles.d/*
    /usr/lib/tmpfiles.d/apache.conf is owned by apache 2.4.25-1
    /usr/lib/tmpfiles.d/bind.conf is owned by bind 9.11.0.P3-3
    /usr/lib/tmpfiles.d/colord.conf is owned by colord 1.3.4-1
    /usr/lib/tmpfiles.d/etc.conf is owned by systemd 232-8
    /usr/lib/tmpfiles.d/gvfsd-fuse-tmpfiles.conf is owned by gvfs 1.30.3-1
    ...

)

Thanks!

Frederick

On Tue, Apr 25, 2017 at 09:03:01AM -0700, Gabriel Becker wrote:
> Martin,
> 
> Thanks for your work on this.
> 
> One thing that seems to be missing from the conversation is that recreating
> the temp directory will prevent future failures when R wants to write a
> temp file, but the files will, of course, not be there. Any code written
> assuming the contract is that the temporary directory, and thus temporary
> files, will not be cleaned up before the R process exits (which was my
> naive assumption before this thread, and is the behavior AFAICT on all the
> systems I regularly use) will still break.
> 
> I'm not saying that's necessarily fixable (though the R keeping a permanent
> pointer to a file in the dir suggested by Malcom might? fix it.), but I
> would argue if it IS fixable, a fix that includes that would be preferable.
> 
> Best,
> ~G
> 
> On Tue, Apr 25, 2017 at 8:53 AM, Martin Maechler <maechler at stat.math.ethz.ch
> > wrote:
> 
> > >>>>> Jeroen Ooms <jeroenooms at gmail.com>
> > >>>>>     on Tue, 25 Apr 2017 15:05:51 +0200 writes:
> >
> >     > On Tue, Apr 25, 2017 at 1:00 PM, Martin Maechler
> >     > <maechler at stat.math.ethz.ch> wrote:
> >     >> As I've found it is not at all hard to add an option
> >     >> which checks the existence and if the directory is no
> >     >> longer "valid", tries to recreate it (and if it fails
> >     >> doing that it calls the famous R_Suicide(), as it does
> >     >> when R starts up and tempdir() cannot be initialized
> >     >> correctly).
> >
> >     > Perhaps this can also fix the problem with mcparallel
> >     > deleting the tempdir() when one of its children dies:
> >
> >    >   file.exists(tempdir()) #TRUE
> >    >   parallel::mcparallel(q('no'))
> >    >   file.exists(tempdir()) # FALSE
> >
> > Thank you, Jeroen, for the extra example.
> >
> > I now have comitted the new feature... (completely back
> > compatible: in R's code tempdir() is not yet called with an
> > argument and the default is  check = FALSE ),
> > actually in a "suicide-free" way ...  which needed only slightly
> > more code.
> >
> > In the worst case, one could save the R session by
> >    Sys.setenv(TEMPDIR = "<something writable>")
> > if for instance /tmp/ suddenly became unwritable for the user.
> >
> > What we could consider is making the default of 'check' settable
> > by an option, and experiment with setting the option to TRUE, so
> > all such problems would be auto-solved (says the incurable optimist ...).
> >
> > Martin
> >
> > ______________________________________________
> > R-devel at r-project.org mailing list
> > https://stat.ethz.ch/mailman/listinfo/r-devel
> >
> 
> 
> 
> -- 
> Gabriel Becker, PhD
> Associate Scientist (Bioinformatics)
> Genentech Research
> 
> 	[[alternative HTML version deleted]]
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>


From maechler at stat.math.ethz.ch  Wed Apr 26 10:21:39 2017
From: maechler at stat.math.ethz.ch (Martin Maechler)
Date: Wed, 26 Apr 2017 10:21:39 +0200
Subject: [Rd] tempdir() may be deleted during long-running R session
In-Reply-To: <20170426041358.GD20737@ofb.net>
References: <c78e9022-04c2-3cda-5898-dceec8bc5e94@helsinki.fi>
 <15e3b0a3-e0a8-2da8-27c4-9268a5751986@stats.ox.ac.uk>
 <4f0797c5-a078-67ae-3992-cd66a82b454a@helsinki.fi>
 <22777.65060.465733.160015@max.eddelbuettel.com>
 <20170421173446.GB20737@ofb.net>
 <22780.46838.39255.710673@max.eddelbuettel.com>
 <22783.11355.51121.660887@stat.math.ethz.ch>
 <ea6a1fb2067a4c98b113c878789faf9f@exchsrv2.sgc.loc>
 <20170426041358.GD20737@ofb.net>
Message-ID: <22784.22675.947702.198651@stat.math.ethz.ch>

>>>>>   <frederik at ofb.net>
>>>>>     on Tue, 25 Apr 2017 21:13:59 -0700 writes:

    > On Tue, Apr 25, 2017 at 02:41:58PM +0000, Cook, Malcolm wrote:
    >> Might this combination serve the purpose: 
    >> * R session keeps an open handle on the tempdir it creates, 
    >> * whatever tempdir harvesting cron job the user has be made sensitive enough not to delete open files (including open directories)

I also agree that the above would be ideal - if possible.

    > Good suggestion but doesn't work with the (increasingly popular)
    > "Systemd":

    > $ mkdir /tmp/somedir
    > $ touch -d "12 days ago" /tmp/somedir/
    > $ cd /tmp/somedir/
    > $ sudo systemd-tmpfiles --clean
    > $ ls /tmp/somedir/
    > ls: cannot access '/tmp/somedir/': No such file or directory

Some thing like your example is what I'd expect is always a
possibility on some platforms, all of course depending on low
things such as  root/syadmin/...  "permission" to clean up etc.

Jeroeen mentioned the fact that tempdir()s also can disappear
for other reasons {his was multicore child processes
.. bugously(?) implemented}.
Further reasons may be race conditions / user code bugs / user
errors, etc.
Note that the R process which created the tempdir on startup
always has the permission to remove it again.  But you can also
think a full file system, etc.

Current  R-devel's    tempdir(check = TRUE)   would create a new
one or give an error (and then the user should be able to use
    Sys.setenv("TEMPDIR" ...)
    to a directory she has write-permission )

Gabe's point of course is important too: If you have a long
running process that uses a tempfile,
and if  "big brother"  has removed the full tempdir() you will
be "unhappy" in any case.
Trying to prevent big brother from doing that in all cases seems
"not easy" in any case.

I did want to provide an easy solution to the OP situation:
Suddenly tmpdir() is gone, and quite a few things stop working
in the current R process {he mentioned  help(), e.g.}.
With new   tmpdir(check=TRUE)  facility, code could be changed
to replace

   tempfile("foo")

either by
   tempfile("foo", tmpdir=tempdir(check=TRUE))

or by something like

   tryCatch(tempfile("foo"),
             error = function(e)
	        tempfile("foo", tmpdir=tempdir(check=TRUE)))

or be even more sophisticated.

We could also consider allowing   check =  TRUE | NA | FALSE

and make  NA  the default and have that correspond to
check =TRUE  but additionally do the equivalent of
   warning("tempdir() has become invalid and been recreated")
in case the tempdir() had been invalid.

    > I would advocate just changing 'tempfile()' so that it recreates the
    > directory where the file is (the "dirname") before returning the file
    > path. This would have fixed the issue I ran into. Changing 'tempdir()'
    > to recreate the directory is another option.

In the end I had decided that

      tempfile("foo", tmpdir = tempdir(check = TRUE))

is actually better self-documenting than

      tempfile("foo", checkDir = TRUE)

which was my first inclination.

Note again that currently, the checking is _off_ by default.
I've just provided a tool -- which was relatively easy and
platform independent! --- to do more (real and thought)
experiments.

Martin


From murdoch.duncan at gmail.com  Wed Apr 26 14:29:34 2017
From: murdoch.duncan at gmail.com (Duncan Murdoch)
Date: Wed, 26 Apr 2017 08:29:34 -0400
Subject: [Rd] tempdir() may be deleted during long-running R session
In-Reply-To: <22784.22675.947702.198651@stat.math.ethz.ch>
References: <c78e9022-04c2-3cda-5898-dceec8bc5e94@helsinki.fi>
 <15e3b0a3-e0a8-2da8-27c4-9268a5751986@stats.ox.ac.uk>
 <4f0797c5-a078-67ae-3992-cd66a82b454a@helsinki.fi>
 <22777.65060.465733.160015@max.eddelbuettel.com>
 <20170421173446.GB20737@ofb.net>
 <22780.46838.39255.710673@max.eddelbuettel.com>
 <22783.11355.51121.660887@stat.math.ethz.ch>
 <ea6a1fb2067a4c98b113c878789faf9f@exchsrv2.sgc.loc>
 <20170426041358.GD20737@ofb.net>
 <22784.22675.947702.198651@stat.math.ethz.ch>
Message-ID: <70f538a9-e9de-1282-455e-f6fda02ef778@gmail.com>

On 26/04/2017 4:21 AM, Martin Maechler wrote:
>>>>>>   <frederik at ofb.net>
>>>>>>     on Tue, 25 Apr 2017 21:13:59 -0700 writes:
>
>     > On Tue, Apr 25, 2017 at 02:41:58PM +0000, Cook, Malcolm wrote:
>     >> Might this combination serve the purpose:
>     >> * R session keeps an open handle on the tempdir it creates,
>     >> * whatever tempdir harvesting cron job the user has be made sensitive enough not to delete open files (including open directories)
>
> I also agree that the above would be ideal - if possible.
>
>     > Good suggestion but doesn't work with the (increasingly popular)
>     > "Systemd":
>
>     > $ mkdir /tmp/somedir
>     > $ touch -d "12 days ago" /tmp/somedir/
>     > $ cd /tmp/somedir/
>     > $ sudo systemd-tmpfiles --clean
>     > $ ls /tmp/somedir/
>     > ls: cannot access '/tmp/somedir/': No such file or directory
>
> Some thing like your example is what I'd expect is always a
> possibility on some platforms, all of course depending on low
> things such as  root/syadmin/...  "permission" to clean up etc.
>
> Jeroeen mentioned the fact that tempdir()s also can disappear
> for other reasons {his was multicore child processes
> .. bugously(?) implemented}.
> Further reasons may be race conditions / user code bugs / user
> errors, etc.
> Note that the R process which created the tempdir on startup
> always has the permission to remove it again.  But you can also
> think a full file system, etc.
>
> Current  R-devel's    tempdir(check = TRUE)   would create a new
> one or give an error (and then the user should be able to use
>     Sys.setenv("TEMPDIR" ...)
>     to a directory she has write-permission )
>
> Gabe's point of course is important too: If you have a long
> running process that uses a tempfile,
> and if  "big brother"  has removed the full tempdir() you will
> be "unhappy" in any case.
> Trying to prevent big brother from doing that in all cases seems
> "not easy" in any case.
>
> I did want to provide an easy solution to the OP situation:
> Suddenly tmpdir() is gone, and quite a few things stop working
> in the current R process {he mentioned  help(), e.g.}.
> With new   tmpdir(check=TRUE)  facility, code could be changed
> to replace
>
>    tempfile("foo")
>
> either by
>    tempfile("foo", tmpdir=tempdir(check=TRUE))
>
> or by something like
>
>    tryCatch(tempfile("foo"),
>              error = function(e)
> 	        tempfile("foo", tmpdir=tempdir(check=TRUE)))
>
> or be even more sophisticated.
>
> We could also consider allowing   check =  TRUE | NA | FALSE
>
> and make  NA  the default and have that correspond to
> check =TRUE  but additionally do the equivalent of
>    warning("tempdir() has become invalid and been recreated")
> in case the tempdir() had been invalid.
>
>     > I would advocate just changing 'tempfile()' so that it recreates the
>     > directory where the file is (the "dirname") before returning the file
>     > path. This would have fixed the issue I ran into. Changing 'tempdir()'
>     > to recreate the directory is another option.
>
> In the end I had decided that
>
>       tempfile("foo", tmpdir = tempdir(check = TRUE))
>
> is actually better self-documenting than
>
>       tempfile("foo", checkDir = TRUE)
>
> which was my first inclination.
>
> Note again that currently, the checking is _off_ by default.
> I've just provided a tool -- which was relatively easy and
> platform independent! --- to do more (real and thought)
> experiments.

This seems like the wrong approach.  The problem occurs as soon as the 
tempdir() gets cleaned up:  there could be information in temp files 
that gets lost at that point.  So the solution should be to prevent the 
cleanup, not to continue on after it has occurred (as "check = TRUE" 
does).  This follows the principle that it's better for the process to 
always die than to sometimes silently produce incorrect results.

Frederick posted the way to do this in systems using systemd.  We should 
be putting that in place, or the equivalent on systems using other 
tempfile cleanups.  This looks to me like something that "make install" 
should do, or perhaps it should be done by people putting together 
packages for specific systems.

Duncan Murdoch


From edd at debian.org  Wed Apr 26 15:40:38 2017
From: edd at debian.org (Dirk Eddelbuettel)
Date: Wed, 26 Apr 2017 08:40:38 -0500
Subject: [Rd] tempdir() may be deleted during long-running R session
In-Reply-To: <70f538a9-e9de-1282-455e-f6fda02ef778@gmail.com>
References: <c78e9022-04c2-3cda-5898-dceec8bc5e94@helsinki.fi>
 <15e3b0a3-e0a8-2da8-27c4-9268a5751986@stats.ox.ac.uk>
 <4f0797c5-a078-67ae-3992-cd66a82b454a@helsinki.fi>
 <22777.65060.465733.160015@max.eddelbuettel.com>
 <20170421173446.GB20737@ofb.net>
 <22780.46838.39255.710673@max.eddelbuettel.com>
 <22783.11355.51121.660887@stat.math.ethz.ch>
 <ea6a1fb2067a4c98b113c878789faf9f@exchsrv2.sgc.loc>
 <20170426041358.GD20737@ofb.net>
 <22784.22675.947702.198651@stat.math.ethz.ch>
 <70f538a9-e9de-1282-455e-f6fda02ef778@gmail.com>
Message-ID: <22784.41815.145.736132@max.eddelbuettel.com>


On 26 April 2017 at 08:29, Duncan Murdoch wrote:
| This seems like the wrong approach.  The problem occurs as soon as the 
| tempdir() gets cleaned up:  there could be information in temp files 
| that gets lost at that point.  So the solution should be to prevent the 
| cleanup, not to continue on after it has occurred (as "check = TRUE" 
| does).  This follows the principle that it's better for the process to 
| always die than to sometimes silently produce incorrect results.

That is generally true, but also "hard" as we don't have a handle on the OS.

| Frederick posted the way to do this in systems using systemd.  We should

While that was a very helpful post yet it may only apply to Arch Linux as
stated.  My Ubuntu systems at home and work all run systemd too, but do _not_
automatically remove tempfiles. 

Yet what he suggested is quite right: we should define a proper config file
for this facility and then possibly also use the /run directory as many other
services now and (of course) also either TEMPDIR or later the code to have
/run be another fallback if TMP, TEMP, TMPDIR, ... are unset.

Distribution maintainers such as yours truly could then include this
configuration.

| be putting that in place, or the equivalent on systems using other 
| tempfile cleanups.  This looks to me like something that "make install" 
| should do, or perhaps it should be done by people putting together 
| packages for specific systems.

Doesn't 'make install' only write to $RHOME/ and below, plus $PREFIX/bin ?

Dirk

-- 
http://dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org


From tomas.kalibera at gmail.com  Wed Apr 26 16:39:52 2017
From: tomas.kalibera at gmail.com (Tomas Kalibera)
Date: Wed, 26 Apr 2017 16:39:52 +0200
Subject: [Rd] tempdir() may be deleted during long-running R session
In-Reply-To: <70f538a9-e9de-1282-455e-f6fda02ef778@gmail.com>
References: <c78e9022-04c2-3cda-5898-dceec8bc5e94@helsinki.fi>
 <15e3b0a3-e0a8-2da8-27c4-9268a5751986@stats.ox.ac.uk>
 <4f0797c5-a078-67ae-3992-cd66a82b454a@helsinki.fi>
 <22777.65060.465733.160015@max.eddelbuettel.com>
 <20170421173446.GB20737@ofb.net>
 <22780.46838.39255.710673@max.eddelbuettel.com>
 <22783.11355.51121.660887@stat.math.ethz.ch>
 <ea6a1fb2067a4c98b113c878789faf9f@exchsrv2.sgc.loc>
 <20170426041358.GD20737@ofb.net>
 <22784.22675.947702.198651@stat.math.ethz.ch>
 <70f538a9-e9de-1282-455e-f6fda02ef778@gmail.com>
Message-ID: <f537ab49-dd45-70f5-1795-1834fecd3b41@gmail.com>


I agree this should be solved in configuration of 
systemd/tmpreaper/whatever tmp cleaner - the cleanup must be prevented 
in configuration files of these tools. Moving session directories under 
/var/run (XDG_RUNTIME_DIR) does not seem like a good solution to me, 
sooner or later someone might come with auto-cleaning that directory too.

It might still be useful if R could sometimes detect when automated 
cleanup happened and warn the user. Perhaps a simple way could be to 
always create an empty file inside session directory, like 
".tmp_cleaner_trap". R would never touch this file, but check its 
existence time-to-time. If it gets deleted, R would issue a warning and 
ask the user to check tmp cleaner configuration. The idea is that this 
file will be the oldest one in the session directory, so would get 
cleaned up first.

Tomas


On 04/26/2017 02:29 PM, Duncan Murdoch wrote:
> On 26/04/2017 4:21 AM, Martin Maechler wrote:
>>>>>>>   <frederik at ofb.net>
>>>>>>>     on Tue, 25 Apr 2017 21:13:59 -0700 writes:
>>
>>     > On Tue, Apr 25, 2017 at 02:41:58PM +0000, Cook, Malcolm wrote:
>>     >> Might this combination serve the purpose:
>>     >> * R session keeps an open handle on the tempdir it creates,
>>     >> * whatever tempdir harvesting cron job the user has be made 
>> sensitive enough not to delete open files (including open directories)
>>
>> I also agree that the above would be ideal - if possible.
>>
>>     > Good suggestion but doesn't work with the (increasingly popular)
>>     > "Systemd":
>>
>>     > $ mkdir /tmp/somedir
>>     > $ touch -d "12 days ago" /tmp/somedir/
>>     > $ cd /tmp/somedir/
>>     > $ sudo systemd-tmpfiles --clean
>>     > $ ls /tmp/somedir/
>>     > ls: cannot access '/tmp/somedir/': No such file or directory
>>
>> Some thing like your example is what I'd expect is always a
>> possibility on some platforms, all of course depending on low
>> things such as  root/syadmin/...  "permission" to clean up etc.
>>
>> Jeroeen mentioned the fact that tempdir()s also can disappear
>> for other reasons {his was multicore child processes
>> .. bugously(?) implemented}.
>> Further reasons may be race conditions / user code bugs / user
>> errors, etc.
>> Note that the R process which created the tempdir on startup
>> always has the permission to remove it again.  But you can also
>> think a full file system, etc.
>>
>> Current  R-devel's    tempdir(check = TRUE)   would create a new
>> one or give an error (and then the user should be able to use
>>     Sys.setenv("TEMPDIR" ...)
>>     to a directory she has write-permission )
>>
>> Gabe's point of course is important too: If you have a long
>> running process that uses a tempfile,
>> and if  "big brother"  has removed the full tempdir() you will
>> be "unhappy" in any case.
>> Trying to prevent big brother from doing that in all cases seems
>> "not easy" in any case.
>>
>> I did want to provide an easy solution to the OP situation:
>> Suddenly tmpdir() is gone, and quite a few things stop working
>> in the current R process {he mentioned  help(), e.g.}.
>> With new   tmpdir(check=TRUE)  facility, code could be changed
>> to replace
>>
>>    tempfile("foo")
>>
>> either by
>>    tempfile("foo", tmpdir=tempdir(check=TRUE))
>>
>> or by something like
>>
>>    tryCatch(tempfile("foo"),
>>              error = function(e)
>>             tempfile("foo", tmpdir=tempdir(check=TRUE)))
>>
>> or be even more sophisticated.
>>
>> We could also consider allowing   check =  TRUE | NA | FALSE
>>
>> and make  NA  the default and have that correspond to
>> check =TRUE  but additionally do the equivalent of
>>    warning("tempdir() has become invalid and been recreated")
>> in case the tempdir() had been invalid.
>>
>>     > I would advocate just changing 'tempfile()' so that it 
>> recreates the
>>     > directory where the file is (the "dirname") before returning 
>> the file
>>     > path. This would have fixed the issue I ran into. Changing 
>> 'tempdir()'
>>     > to recreate the directory is another option.
>>
>> In the end I had decided that
>>
>>       tempfile("foo", tmpdir = tempdir(check = TRUE))
>>
>> is actually better self-documenting than
>>
>>       tempfile("foo", checkDir = TRUE)
>>
>> which was my first inclination.
>>
>> Note again that currently, the checking is _off_ by default.
>> I've just provided a tool -- which was relatively easy and
>> platform independent! --- to do more (real and thought)
>> experiments.
>
> This seems like the wrong approach.  The problem occurs as soon as the 
> tempdir() gets cleaned up:  there could be information in temp files 
> that gets lost at that point.  So the solution should be to prevent 
> the cleanup, not to continue on after it has occurred (as "check = 
> TRUE" does).  This follows the principle that it's better for the 
> process to always die than to sometimes silently produce incorrect 
> results.
>
> Frederick posted the way to do this in systems using systemd.  We 
> should be putting that in place, or the equivalent on systems using 
> other tempfile cleanups.  This looks to me like something that "make 
> install" should do, or perhaps it should be done by people putting 
> together packages for specific systems.
>
> Duncan Murdoch
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From maechler at stat.math.ethz.ch  Wed Apr 26 17:09:07 2017
From: maechler at stat.math.ethz.ch (Martin Maechler)
Date: Wed, 26 Apr 2017 17:09:07 +0200
Subject: [Rd] tempdir() may be deleted during long-running R session
In-Reply-To: <22784.41815.145.736132@max.eddelbuettel.com>
References: <c78e9022-04c2-3cda-5898-dceec8bc5e94@helsinki.fi>
 <15e3b0a3-e0a8-2da8-27c4-9268a5751986@stats.ox.ac.uk>
 <4f0797c5-a078-67ae-3992-cd66a82b454a@helsinki.fi>
 <22777.65060.465733.160015@max.eddelbuettel.com>
 <20170421173446.GB20737@ofb.net>
 <22780.46838.39255.710673@max.eddelbuettel.com>
 <22783.11355.51121.660887@stat.math.ethz.ch>
 <ea6a1fb2067a4c98b113c878789faf9f@exchsrv2.sgc.loc>
 <20170426041358.GD20737@ofb.net>
 <22784.22675.947702.198651@stat.math.ethz.ch>
 <70f538a9-e9de-1282-455e-f6fda02ef778@gmail.com>
 <22784.41815.145.736132@max.eddelbuettel.com>
Message-ID: <22784.47123.409282.27866@stat.math.ethz.ch>

>>>>> Dirk Eddelbuettel <edd at debian.org>
>>>>>     on Wed, 26 Apr 2017 08:40:38 -0500 writes:

    > On 26 April 2017 at 08:29, Duncan Murdoch wrote:
    > | This seems like the wrong approach.  The problem occurs as soon as the 
    > | tempdir() gets cleaned up:  there could be information in temp files 
    > | that gets lost at that point.  So the solution should be to prevent the 
    > | cleanup, not to continue on after it has occurred (as "check = TRUE" 
    > | does).  This follows the principle that it's better for the process to 
    > | always die than to sometimes silently produce incorrect results.

    > That is generally true, but also "hard" as we don't have a handle on the OS
.

Indeed...
and that was the reason I've proposed the simple platform
agnostic tool which does not entirely solve the problem (in this sense I
agree with "wrong approach") but allows to mitigate it and (by
followup changes) to work around many use case problems.

    > | Frederick posted the way to do this in systems using systemd.  We should

    > While that was a very helpful post yet it may only apply to Arch Linux as
    > stated.  My Ubuntu systems at home and work all run systemd too, but do _not_
    > automatically remove tempfiles. 

    > Yet what he suggested is quite right: we should define a proper config file
    > for this facility and then possibly also use the /run directory as many other
    > services now and (of course) also either TEMPDIR or later the code to have
    > /run be another fallback if TMP, TEMP, TMPDIR, ... are unset.

    > Distribution maintainers such as yours truly could then include this
    > configuration.

    > | be putting that in place, or the equivalent on systems using other 
    > | tempfile cleanups.  This looks to me like something that "make install" 
    > | should do, or perhaps it should be done by people putting together 
    > | packages for specific systems.

    > Doesn't 'make install' only write to $RHOME/ and below, plus $PREFIX/bin ?

Also, 'make install' is optional for good reasons.
E.g., I never ever run 'make install': I typically always have many R
versions, all available in the shell and ESS (Emacs Speaks
Statistics) via symbolic links into a directory on PATH.

Dirk mentioned (as well) that this is all very platform specific
which I do think is important. From my typical OS point of view:
  Why should the user who runs R not have the right to delete the
  tempdir which was created by the process that she runs and hence owns ?

I agree it would be an improvement if we made such deletion much
harder than it is now, and yes, there may be great (almost)
cross-platform tools available to manage this much better than
we do now, e.g., via open files.

Before we are there, I would find it useful to have a new
'tempdir' (i.e. folder/directory for R's temporary files) to be
re-created manually or automagically in those cases it has
disappeared, and that is within easy reach via the proposed
tempdir() functionality.

OTOH, I typically live very well by quickly killing
and restarting R (from inside ESS).  

The OP issue was to help newbies and computer-non-experts, the
latter nowadays comprising more than 90% of R users (I'd guess ~
98% looking at our otherwise smart students).

These are typically "slightly" confused when they ask for help and
get a pretty severe error message:

  > ?lm
  Error in file(out, "wt") : cannot open the connection
  In addition: Warning message:
  In file(out, "wt") :
    cannot open file '/tmp/RtmpztK6f7/Rtxt36972b91938': No such file or directory


Martin


From edd at debian.org  Wed Apr 26 17:14:13 2017
From: edd at debian.org (Dirk Eddelbuettel)
Date: Wed, 26 Apr 2017 10:14:13 -0500
Subject: [Rd] tempdir() may be deleted during long-running R session
In-Reply-To: <f537ab49-dd45-70f5-1795-1834fecd3b41@gmail.com>
References: <c78e9022-04c2-3cda-5898-dceec8bc5e94@helsinki.fi>
 <15e3b0a3-e0a8-2da8-27c4-9268a5751986@stats.ox.ac.uk>
 <4f0797c5-a078-67ae-3992-cd66a82b454a@helsinki.fi>
 <22777.65060.465733.160015@max.eddelbuettel.com>
 <20170421173446.GB20737@ofb.net>
 <22780.46838.39255.710673@max.eddelbuettel.com>
 <22783.11355.51121.660887@stat.math.ethz.ch>
 <ea6a1fb2067a4c98b113c878789faf9f@exchsrv2.sgc.loc>
 <20170426041358.GD20737@ofb.net>
 <22784.22675.947702.198651@stat.math.ethz.ch>
 <70f538a9-e9de-1282-455e-f6fda02ef778@gmail.com>
 <f537ab49-dd45-70f5-1795-1834fecd3b41@gmail.com>
Message-ID: <22784.47429.833820.612654@max.eddelbuettel.com>


On 26 April 2017 at 16:39, Tomas Kalibera wrote:
| I agree this should be solved in configuration of 
| systemd/tmpreaper/whatever tmp cleaner - the cleanup must be prevented 

Yep.

| in configuration files of these tools. Moving session directories under 
| /var/run (XDG_RUNTIME_DIR) does not seem like a good solution to me, 
| sooner or later someone might come with auto-cleaning that directory too.

(These days it seems /run is used too. I seem to have a screenful of things
in there.)
 
| It might still be useful if R could sometimes detect when automated 
| cleanup happened and warn the user. Perhaps a simple way could be to 
| always create an empty file inside session directory, like 
| ".tmp_cleaner_trap". R would never touch this file, but check its 
| existence time-to-time. If it gets deleted, R would issue a warning and 
| ask the user to check tmp cleaner configuration. The idea is that this 
| file will be the oldest one in the session directory, so would get 
| cleaned up first.

That's a very good third idea.

Dirk 

-- 
http://dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org


From wdunlap at tibco.com  Wed Apr 26 17:25:01 2017
From: wdunlap at tibco.com (William Dunlap)
Date: Wed, 26 Apr 2017 08:25:01 -0700
Subject: [Rd] tempdir() may be deleted during long-running R session
In-Reply-To: <22784.47123.409282.27866@stat.math.ethz.ch>
References: <c78e9022-04c2-3cda-5898-dceec8bc5e94@helsinki.fi>
 <15e3b0a3-e0a8-2da8-27c4-9268a5751986@stats.ox.ac.uk>
 <4f0797c5-a078-67ae-3992-cd66a82b454a@helsinki.fi>
 <22777.65060.465733.160015@max.eddelbuettel.com>
 <20170421173446.GB20737@ofb.net>
 <22780.46838.39255.710673@max.eddelbuettel.com>
 <22783.11355.51121.660887@stat.math.ethz.ch>
 <ea6a1fb2067a4c98b113c878789faf9f@exchsrv2.sgc.loc>
 <20170426041358.GD20737@ofb.net>
 <22784.22675.947702.198651@stat.math.ethz.ch>
 <70f538a9-e9de-1282-455e-f6fda02ef778@gmail.com>
 <22784.41815.145.736132@max.eddelbuettel.com>
 <22784.47123.409282.27866@stat.math.ethz.ch>
Message-ID: <CAF8bMcbbgXQ0Qm7j63Tw5xaAwoHap62rx90TLRhR=4kkee-BuQ@mail.gmail.com>

The Ubuntu machine I use a lot (along with others) must not be cleaning
/tmp as it has a fair number of Rtmp* directories in /tmp, even when there
are no R sessions running on the machine.  I would like to automate their
removal but there is no obvious way to see if the R process that created
the tempdir is still around.   If there were a way to associate R tempdir's
with R processes then one could make an R-specific tool to get rid of the
unused tempdirs.


Bill Dunlap
TIBCO Software
wdunlap tibco.com

On Wed, Apr 26, 2017 at 8:09 AM, Martin Maechler <maechler at stat.math.ethz.ch
> wrote:

> >>>>> Dirk Eddelbuettel <edd at debian.org>
> >>>>>     on Wed, 26 Apr 2017 08:40:38 -0500 writes:
>
>     > On 26 April 2017 at 08:29, Duncan Murdoch wrote:
>     > | This seems like the wrong approach.  The problem occurs as soon as
> the
>     > | tempdir() gets cleaned up:  there could be information in temp
> files
>     > | that gets lost at that point.  So the solution should be to
> prevent the
>     > | cleanup, not to continue on after it has occurred (as "check =
> TRUE"
>     > | does).  This follows the principle that it's better for the
> process to
>     > | always die than to sometimes silently produce incorrect results.
>
>     > That is generally true, but also "hard" as we don't have a handle on
> the OS
> .
>
> Indeed...
> and that was the reason I've proposed the simple platform
> agnostic tool which does not entirely solve the problem (in this sense I
> agree with "wrong approach") but allows to mitigate it and (by
> followup changes) to work around many use case problems.
>
>     > | Frederick posted the way to do this in systems using systemd.  We
> should
>
>     > While that was a very helpful post yet it may only apply to Arch
> Linux as
>     > stated.  My Ubuntu systems at home and work all run systemd too, but
> do _not_
>     > automatically remove tempfiles.
>
>     > Yet what he suggested is quite right: we should define a proper
> config file
>     > for this facility and then possibly also use the /run directory as
> many other
>     > services now and (of course) also either TEMPDIR or later the code
> to have
>     > /run be another fallback if TMP, TEMP, TMPDIR, ... are unset.
>
>     > Distribution maintainers such as yours truly could then include this
>     > configuration.
>
>     > | be putting that in place, or the equivalent on systems using other
>     > | tempfile cleanups.  This looks to me like something that "make
> install"
>     > | should do, or perhaps it should be done by people putting together
>     > | packages for specific systems.
>
>     > Doesn't 'make install' only write to $RHOME/ and below, plus
> $PREFIX/bin ?
>
> Also, 'make install' is optional for good reasons.
> E.g., I never ever run 'make install': I typically always have many R
> versions, all available in the shell and ESS (Emacs Speaks
> Statistics) via symbolic links into a directory on PATH.
>
> Dirk mentioned (as well) that this is all very platform specific
> which I do think is important. From my typical OS point of view:
>   Why should the user who runs R not have the right to delete the
>   tempdir which was created by the process that she runs and hence owns ?
>
> I agree it would be an improvement if we made such deletion much
> harder than it is now, and yes, there may be great (almost)
> cross-platform tools available to manage this much better than
> we do now, e.g., via open files.
>
> Before we are there, I would find it useful to have a new
> 'tempdir' (i.e. folder/directory for R's temporary files) to be
> re-created manually or automagically in those cases it has
> disappeared, and that is within easy reach via the proposed
> tempdir() functionality.
>
> OTOH, I typically live very well by quickly killing
> and restarting R (from inside ESS).
>
> The OP issue was to help newbies and computer-non-experts, the
> latter nowadays comprising more than 90% of R users (I'd guess ~
> 98% looking at our otherwise smart students).
>
> These are typically "slightly" confused when they ask for help and
> get a pretty severe error message:
>
>   > ?lm
>   Error in file(out, "wt") : cannot open the connection
>   In addition: Warning message:
>   In file(out, "wt") :
>     cannot open file '/tmp/RtmpztK6f7/Rtxt36972b91938': No such file or
> directory
>
>
> Martin
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>

	[[alternative HTML version deleted]]


From wdunlap at tibco.com  Wed Apr 26 17:56:12 2017
From: wdunlap at tibco.com (William Dunlap)
Date: Wed, 26 Apr 2017 08:56:12 -0700
Subject: [Rd] tempdir() may be deleted during long-running R session
In-Reply-To: <1493221596.8260.2.camel@braverock.com>
References: <c78e9022-04c2-3cda-5898-dceec8bc5e94@helsinki.fi>
 <15e3b0a3-e0a8-2da8-27c4-9268a5751986@stats.ox.ac.uk>
 <4f0797c5-a078-67ae-3992-cd66a82b454a@helsinki.fi>
 <22777.65060.465733.160015@max.eddelbuettel.com>
 <20170421173446.GB20737@ofb.net>
 <22780.46838.39255.710673@max.eddelbuettel.com>
 <22783.11355.51121.660887@stat.math.ethz.ch>
 <ea6a1fb2067a4c98b113c878789faf9f@exchsrv2.sgc.loc>
 <20170426041358.GD20737@ofb.net>
 <22784.22675.947702.198651@stat.math.ethz.ch>
 <70f538a9-e9de-1282-455e-f6fda02ef778@gmail.com>
 <22784.41815.145.736132@max.eddelbuettel.com>
 <22784.47123.409282.27866@stat.math.ethz.ch>
 <CAF8bMcbbgXQ0Qm7j63Tw5xaAwoHap62rx90TLRhR=4kkee-BuQ@mail.gmail.com>
 <1493221596.8260.2.camel@braverock.com>
Message-ID: <CAF8bMcY_r2r18krHuwqoCn72xdrukoA_KZt0wngmjsPR6UoK5Q@mail.gmail.com>

The main point of this discussion has been that deleting the tempdir() a
fixed number of days after its creation is a problem.  It should be deleted
when the process that created it is done.  R attempts to do this, but there
are cases in which it does not so a backup is needed.

Bill Dunlap
TIBCO Software
wdunlap tibco.com

On Wed, Apr 26, 2017 at 8:46 AM, Brian G. Peterson <brian at braverock.com>
wrote:

> Bill,
>
> It seems that tmpreaper, tmpwatch, or systemd-tmpfiles should be able
> to handle this for you.
>
> set the atime to some number of days rather than a short duration.
>
> I think I set mine to three days, and I can';t recall ever having a
> problem that was more than a minor annoyance (help breaking) on old R
> processes.
>
> Cheers,
>
> Brian
>
> --
> Brian G. Peterson
> http://braverock.com/brian/
> Ph: 773-459-4973
> IM: bgpbraverock
>
> On Wed, 2017-04-26 at 08:25 -0700, William Dunlap via R-devel wrote:
> > The Ubuntu machine I use a lot (along with others) must not be
> > cleaning
> > /tmp as it has a fair number of Rtmp* directories in /tmp, even when
> > there
> > are no R sessions running on the machine.  I would like to automate
> > their
> > removal but there is no obvious way to see if the R process that
> > created
> > the tempdir is still around.   If there were a way to associate R
> > tempdir's
> > with R processes then one could make an R-specific tool to get rid of
> > the
> > unused tempdirs.
> >
> >
> > Bill Dunlap
> > TIBCO Software
> > wdunlap tibco.com
> >
> > On Wed, Apr 26, 2017 at 8:09 AM, Martin Maechler <maechler at stat.math.
> > ethz.ch
> > > wrote:
> > > > > > > > Dirk Eddelbuettel <edd at debian.org>
> > > > > > > >     on Wed, 26 Apr 2017 08:40:38 -0500 writes:
> > >
> > >     > On 26 April 2017 at 08:29, Duncan Murdoch wrote:
> > >     > | This seems like the wrong approach.  The problem occurs as
> > > soon as
> > > the
> > >     > | tempdir() gets cleaned up:  there could be information in
> > > temp
> > > files
> > >     > | that gets lost at that point.  So the solution should be to
> > > prevent the
> > >     > | cleanup, not to continue on after it has occurred (as
> > > "check =
> > > TRUE"
> > >     > | does).  This follows the principle that it's better for the
> > > process to
> > >     > | always die than to sometimes silently produce incorrect
> > > results.
> > >
> > >     > That is generally true, but also "hard" as we don't have a
> > > handle on
> > > the OS
> > > .
> > >
> > > Indeed...
> > > and that was the reason I've proposed the simple platform
> > > agnostic tool which does not entirely solve the problem (in this
> > > sense I
> > > agree with "wrong approach") but allows to mitigate it and (by
> > > followup changes) to work around many use case problems.
> > >
> > >     > | Frederick posted the way to do this in systems using
> > > systemd.  We
> > > should
> > >
> > >     > While that was a very helpful post yet it may only apply to
> > > Arch
> > > Linux as
> > >     > stated.  My Ubuntu systems at home and work all run systemd
> > > too, but
> > > do _not_
> > >     > automatically remove tempfiles.
> > >
> > >     > Yet what he suggested is quite right: we should define a
> > > proper
> > > config file
> > >     > for this facility and then possibly also use the /run
> > > directory as
> > > many other
> > >     > services now and (of course) also either TEMPDIR or later the
> > > code
> > > to have
> > >     > /run be another fallback if TMP, TEMP, TMPDIR, ... are unset.
> > >
> > >     > Distribution maintainers such as yours truly could then
> > > include this
> > >     > configuration.
> > >
> > >     > | be putting that in place, or the equivalent on systems
> > > using other
> > >     > | tempfile cleanups.  This looks to me like something that
> > > "make
> > > install"
> > >     > | should do, or perhaps it should be done by people putting
> > > together
> > >     > | packages for specific systems.
> > >
> > >     > Doesn't 'make install' only write to $RHOME/ and below, plus
> > > $PREFIX/bin ?
> > >
> > > Also, 'make install' is optional for good reasons.
> > > E.g., I never ever run 'make install': I typically always have many
> > > R
> > > versions, all available in the shell and ESS (Emacs Speaks
> > > Statistics) via symbolic links into a directory on PATH.
> > >
> > > Dirk mentioned (as well) that this is all very platform specific
> > > which I do think is important. From my typical OS point of view:
> > >   Why should the user who runs R not have the right to delete the
> > >   tempdir which was created by the process that she runs and hence
> > > owns ?
> > >
> > > I agree it would be an improvement if we made such deletion much
> > > harder than it is now, and yes, there may be great (almost)
> > > cross-platform tools available to manage this much better than
> > > we do now, e.g., via open files.
> > >
> > > Before we are there, I would find it useful to have a new
> > > 'tempdir' (i.e. folder/directory for R's temporary files) to be
> > > re-created manually or automagically in those cases it has
> > > disappeared, and that is within easy reach via the proposed
> > > tempdir() functionality.
> > >
> > > OTOH, I typically live very well by quickly killing
> > > and restarting R (from inside ESS).
> > >
> > > The OP issue was to help newbies and computer-non-experts, the
> > > latter nowadays comprising more than 90% of R users (I'd guess ~
> > > 98% looking at our otherwise smart students).
> > >
> > > These are typically "slightly" confused when they ask for help and
> > > get a pretty severe error message:
> > >
> > >   > ?lm
> > >   Error in file(out, "wt") : cannot open the connection
> > >   In addition: Warning message:
> > >   In file(out, "wt") :
> > >     cannot open file '/tmp/RtmpztK6f7/Rtxt36972b91938': No such
> > > file or
> > > directory
> > >
> > >
> > > Martin
> > >
> > > ______________________________________________
> > > R-devel at r-project.org mailing list
> > > https://stat.ethz.ch/mailman/listinfo/r-devel
> > >
> >
> >       [[alternative HTML version deleted]]
> >
> > ______________________________________________
> > R-devel at r-project.org mailing list
> > https://stat.ethz.ch/mailman/listinfo/r-devel
>

	[[alternative HTML version deleted]]


From murdoch.duncan at gmail.com  Wed Apr 26 19:47:16 2017
From: murdoch.duncan at gmail.com (Duncan Murdoch)
Date: Wed, 26 Apr 2017 13:47:16 -0400
Subject: [Rd] tempdir() may be deleted during long-running R session
In-Reply-To: <f537ab49-dd45-70f5-1795-1834fecd3b41@gmail.com>
References: <c78e9022-04c2-3cda-5898-dceec8bc5e94@helsinki.fi>
 <15e3b0a3-e0a8-2da8-27c4-9268a5751986@stats.ox.ac.uk>
 <4f0797c5-a078-67ae-3992-cd66a82b454a@helsinki.fi>
 <22777.65060.465733.160015@max.eddelbuettel.com>
 <20170421173446.GB20737@ofb.net>
 <22780.46838.39255.710673@max.eddelbuettel.com>
 <22783.11355.51121.660887@stat.math.ethz.ch>
 <ea6a1fb2067a4c98b113c878789faf9f@exchsrv2.sgc.loc>
 <20170426041358.GD20737@ofb.net>
 <22784.22675.947702.198651@stat.math.ethz.ch>
 <70f538a9-e9de-1282-455e-f6fda02ef778@gmail.com>
 <f537ab49-dd45-70f5-1795-1834fecd3b41@gmail.com>
Message-ID: <d053ca3a-781d-4ea9-be10-2f17b47d7cee@gmail.com>

On 26/04/2017 10:39 AM, Tomas Kalibera wrote:
>
> I agree this should be solved in configuration of
> systemd/tmpreaper/whatever tmp cleaner - the cleanup must be prevented
> in configuration files of these tools. Moving session directories under
> /var/run (XDG_RUNTIME_DIR) does not seem like a good solution to me,
> sooner or later someone might come with auto-cleaning that directory too.
>
> It might still be useful if R could sometimes detect when automated
> cleanup happened and warn the user. Perhaps a simple way could be to
> always create an empty file inside session directory, like
> ".tmp_cleaner_trap". R would never touch this file, but check its
> existence time-to-time. If it gets deleted, R would issue a warning and
> ask the user to check tmp cleaner configuration. The idea is that this
> file will be the oldest one in the session directory, so would get
> cleaned up first.

Yes, I like that idea, as long as checking for its existence doesn't 
make some system think it is in use and therefore protected from deletion.

Duncan Murdoch

>
> Tomas
>
>
> On 04/26/2017 02:29 PM, Duncan Murdoch wrote:
>> On 26/04/2017 4:21 AM, Martin Maechler wrote:
>>>>>>>>   <frederik at ofb.net>
>>>>>>>>     on Tue, 25 Apr 2017 21:13:59 -0700 writes:
>>>
>>>     > On Tue, Apr 25, 2017 at 02:41:58PM +0000, Cook, Malcolm wrote:
>>>     >> Might this combination serve the purpose:
>>>     >> * R session keeps an open handle on the tempdir it creates,
>>>     >> * whatever tempdir harvesting cron job the user has be made
>>> sensitive enough not to delete open files (including open directories)
>>>
>>> I also agree that the above would be ideal - if possible.
>>>
>>>     > Good suggestion but doesn't work with the (increasingly popular)
>>>     > "Systemd":
>>>
>>>     > $ mkdir /tmp/somedir
>>>     > $ touch -d "12 days ago" /tmp/somedir/
>>>     > $ cd /tmp/somedir/
>>>     > $ sudo systemd-tmpfiles --clean
>>>     > $ ls /tmp/somedir/
>>>     > ls: cannot access '/tmp/somedir/': No such file or directory
>>>
>>> Some thing like your example is what I'd expect is always a
>>> possibility on some platforms, all of course depending on low
>>> things such as  root/syadmin/...  "permission" to clean up etc.
>>>
>>> Jeroeen mentioned the fact that tempdir()s also can disappear
>>> for other reasons {his was multicore child processes
>>> .. bugously(?) implemented}.
>>> Further reasons may be race conditions / user code bugs / user
>>> errors, etc.
>>> Note that the R process which created the tempdir on startup
>>> always has the permission to remove it again.  But you can also
>>> think a full file system, etc.
>>>
>>> Current  R-devel's    tempdir(check = TRUE)   would create a new
>>> one or give an error (and then the user should be able to use
>>>     Sys.setenv("TEMPDIR" ...)
>>>     to a directory she has write-permission )
>>>
>>> Gabe's point of course is important too: If you have a long
>>> running process that uses a tempfile,
>>> and if  "big brother"  has removed the full tempdir() you will
>>> be "unhappy" in any case.
>>> Trying to prevent big brother from doing that in all cases seems
>>> "not easy" in any case.
>>>
>>> I did want to provide an easy solution to the OP situation:
>>> Suddenly tmpdir() is gone, and quite a few things stop working
>>> in the current R process {he mentioned  help(), e.g.}.
>>> With new   tmpdir(check=TRUE)  facility, code could be changed
>>> to replace
>>>
>>>    tempfile("foo")
>>>
>>> either by
>>>    tempfile("foo", tmpdir=tempdir(check=TRUE))
>>>
>>> or by something like
>>>
>>>    tryCatch(tempfile("foo"),
>>>              error = function(e)
>>>             tempfile("foo", tmpdir=tempdir(check=TRUE)))
>>>
>>> or be even more sophisticated.
>>>
>>> We could also consider allowing   check =  TRUE | NA | FALSE
>>>
>>> and make  NA  the default and have that correspond to
>>> check =TRUE  but additionally do the equivalent of
>>>    warning("tempdir() has become invalid and been recreated")
>>> in case the tempdir() had been invalid.
>>>
>>>     > I would advocate just changing 'tempfile()' so that it
>>> recreates the
>>>     > directory where the file is (the "dirname") before returning
>>> the file
>>>     > path. This would have fixed the issue I ran into. Changing
>>> 'tempdir()'
>>>     > to recreate the directory is another option.
>>>
>>> In the end I had decided that
>>>
>>>       tempfile("foo", tmpdir = tempdir(check = TRUE))
>>>
>>> is actually better self-documenting than
>>>
>>>       tempfile("foo", checkDir = TRUE)
>>>
>>> which was my first inclination.
>>>
>>> Note again that currently, the checking is _off_ by default.
>>> I've just provided a tool -- which was relatively easy and
>>> platform independent! --- to do more (real and thought)
>>> experiments.
>>
>> This seems like the wrong approach.  The problem occurs as soon as the
>> tempdir() gets cleaned up:  there could be information in temp files
>> that gets lost at that point.  So the solution should be to prevent
>> the cleanup, not to continue on after it has occurred (as "check =
>> TRUE" does).  This follows the principle that it's better for the
>> process to always die than to sometimes silently produce incorrect
>> results.
>>
>> Frederick posted the way to do this in systems using systemd.  We
>> should be putting that in place, or the equivalent on systems using
>> other tempfile cleanups.  This looks to me like something that "make
>> install" should do, or perhaps it should be done by people putting
>> together packages for specific systems.
>>
>> Duncan Murdoch
>>
>> ______________________________________________
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel
>
>


From hpages at fredhutch.org  Wed Apr 26 22:36:30 2017
From: hpages at fredhutch.org (=?UTF-8?B?SGVydsOpIFBhZ8Oocw==?=)
Date: Wed, 26 Apr 2017 13:36:30 -0700
Subject: [Rd] byte-compiler bug
Message-ID: <3d1e32d7-1498-3fcc-6b46-1c5c20fe1f8b@fredhutch.org>

Hi,

I'm running into a case where byte-compilation changes
the semantic of a function. This is with R 3.4.0:

   foo <- function(x) { TRUE && x }

   foo(c(a=FALSE))
   # [1] FALSE          # OK

   foo(c(a=TRUE))
   # [1] TRUE           # OK

   foo(c(a=FALSE))
   #     a              # ????
   # FALSE

The 3rd call returned a result that it different from the 1st
call!

After scratching my head for a while, I found out that there
is a lot going on:

   1) When calling foo the first 2 times, the function is not
      byte-compiled so is behaving as expected.

   2) However after the 2nd call, the function gets automatically
      compiled. This seems to be a new feature in R 3.4.0 but
      you'll have to grep the NEWS file to find out (search for
      JIT). The man page for cmpfun/enableJIT nicely explains
      the JIT levels but I couldn't find anywhere that the level
      is set to 3 by default. I don't even know how one is
      supposed to get the current level. Calling enableJIT() to
      change the level returns a value, and this value might
      look like the previous level, but this is undocumented and
      it returns 0 instead of 3 the 1st time I call it anyway.

   3) There is some bug in the byte-compiler that seems to make it
      treat `&&` like if it were `&` when compiling foo.

Cheers,
H.

 > sessionInfo()
R version 3.4.0 (2017-04-21)
Platform: x86_64-pc-linux-gnu (64-bit)
Running under: Ubuntu 16.04.2 LTS

Matrix products: default
BLAS: /home/biocbuild/bbs-3.5-bioc/R/lib/libRblas.so
LAPACK: /home/biocbuild/bbs-3.5-bioc/R/lib/libRlapack.so

locale:
  [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C
  [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8
  [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8
  [7] LC_PAPER=en_US.UTF-8       LC_NAME=C
  [9] LC_ADDRESS=C               LC_TELEPHONE=C
[11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C

attached base packages:
[1] stats     graphics  grDevices utils     datasets  methods   base

loaded via a namespace (and not attached):
[1] compiler_3.4.0

-- 
Herv? Pag?s

Program in Computational Biology
Division of Public Health Sciences
Fred Hutchinson Cancer Research Center
1100 Fairview Ave. N, M1-B514
P.O. Box 19024
Seattle, WA 98109-1024

E-mail: hpages at fredhutch.org
Phone:  (206) 667-5791
Fax:    (206) 667-1319


From murdoch.duncan at gmail.com  Wed Apr 26 22:51:58 2017
From: murdoch.duncan at gmail.com (Duncan Murdoch)
Date: Wed, 26 Apr 2017 16:51:58 -0400
Subject: [Rd] byte-compiler bug
In-Reply-To: <3d1e32d7-1498-3fcc-6b46-1c5c20fe1f8b@fredhutch.org>
References: <3d1e32d7-1498-3fcc-6b46-1c5c20fe1f8b@fredhutch.org>
Message-ID: <7e22fc9d-6a51-bc24-b27b-1e0de300da0e@gmail.com>

On 26/04/2017 4:36 PM, Herv? Pag?s wrote:
> Hi,
>
> I'm running into a case where byte-compilation changes
> the semantic of a function. This is with R 3.4.0:
>
>    foo <- function(x) { TRUE && x }
>
>    foo(c(a=FALSE))
>    # [1] FALSE          # OK
>
>    foo(c(a=TRUE))
>    # [1] TRUE           # OK
>
>    foo(c(a=FALSE))
>    #     a              # ????
>    # FALSE
>
> The 3rd call returned a result that it different from the 1st
> call!

That does look like a bug.  Please file a bug report.

>
> After scratching my head for a while, I found out that there
> is a lot going on:
>
>    1) When calling foo the first 2 times, the function is not
>       byte-compiled so is behaving as expected.
>
>    2) However after the 2nd call, the function gets automatically
>       compiled. This seems to be a new feature in R 3.4.0 but
>       you'll have to grep the NEWS file to find out (search for
>       JIT).

The NEWS file is where we usually report news, so this isn't really that 
much of a surprise.  If you don't want to read it all at once, you can 
see it as it changes on the RSS feed at

http://developer.r-project.org/RSSfeeds.html


  The man page for cmpfun/enableJIT nicely explains
>       the JIT levels but I couldn't find anywhere that the level
>       is set to 3 by default. I don't even know how one is
>       supposed to get the current level. Calling enableJIT() to
>       change the level returns a value, and this value might
>       look like the previous level, but this is undocumented and
>       it returns 0 instead of 3 the 1st time I call it anyway.
>
>    3) There is some bug in the byte-compiler that seems to make it
>       treat `&&` like if it were `&` when compiling foo.

It's a bug, but that doesn't describe it completely.  TRUE & c(a=TRUE, 
b=FALSE) doesn't give the same thing as foo(c(a=TRUE, b=FALSE)).

Duncan Murdoch

>
> Cheers,
> H.
>
>  > sessionInfo()
> R version 3.4.0 (2017-04-21)
> Platform: x86_64-pc-linux-gnu (64-bit)
> Running under: Ubuntu 16.04.2 LTS
>
> Matrix products: default
> BLAS: /home/biocbuild/bbs-3.5-bioc/R/lib/libRblas.so
> LAPACK: /home/biocbuild/bbs-3.5-bioc/R/lib/libRlapack.so
>
> locale:
>   [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C
>   [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8
>   [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8
>   [7] LC_PAPER=en_US.UTF-8       LC_NAME=C
>   [9] LC_ADDRESS=C               LC_TELEPHONE=C
> [11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C
>
> attached base packages:
> [1] stats     graphics  grDevices utils     datasets  methods   base
>
> loaded via a namespace (and not attached):
> [1] compiler_3.4.0
>


From hpages at fredhutch.org  Wed Apr 26 23:08:40 2017
From: hpages at fredhutch.org (=?UTF-8?B?SGVydsOpIFBhZ8Oocw==?=)
Date: Wed, 26 Apr 2017 14:08:40 -0700
Subject: [Rd] byte-compiler bug
In-Reply-To: <7e22fc9d-6a51-bc24-b27b-1e0de300da0e@gmail.com>
References: <3d1e32d7-1498-3fcc-6b46-1c5c20fe1f8b@fredhutch.org>
 <7e22fc9d-6a51-bc24-b27b-1e0de300da0e@gmail.com>
Message-ID: <102b83b5-c049-9574-fb77-4207f7aec76d@fredhutch.org>

On 04/26/2017 01:51 PM, Duncan Murdoch wrote:
> On 26/04/2017 4:36 PM, Herv? Pag?s wrote:
>> Hi,
>>
>> I'm running into a case where byte-compilation changes
>> the semantic of a function. This is with R 3.4.0:
>>
>>    foo <- function(x) { TRUE && x }
>>
>>    foo(c(a=FALSE))
>>    # [1] FALSE          # OK
>>
>>    foo(c(a=TRUE))
>>    # [1] TRUE           # OK
>>
>>    foo(c(a=FALSE))
>>    #     a              # ????
>>    # FALSE
>>
>> The 3rd call returned a result that it different from the 1st
>> call!
>
> That does look like a bug.  Please file a bug report.
>
>>
>> After scratching my head for a while, I found out that there
>> is a lot going on:
>>
>>    1) When calling foo the first 2 times, the function is not
>>       byte-compiled so is behaving as expected.
>>
>>    2) However after the 2nd call, the function gets automatically
>>       compiled. This seems to be a new feature in R 3.4.0 but
>>       you'll have to grep the NEWS file to find out (search for
>>       JIT).
>
> The NEWS file is where we usually report news, so this isn't really that
> much of a surprise.  If you don't want to read it all at once, you can
> see it as it changes on the RSS feed at
>
> https://urldefense.proofpoint.com/v2/url?u=http-3A__developer.r-2Dproject.org_RSSfeeds.html&d=DwIGaQ&c=eRAMFD45gAfqt84VtBcfhQ&r=BK7q3XeAvimeWdGbWY_wJYbW0WYiZvSXAJJKaaPhzWA&m=2Qn1jcR4dORPq3qVhYNnz_O64UneKth6ebbeC4CEtRI&s=O1JVjaNkaGIrMcR0qo58R2OrzIk0nOMoL89tskLXeK0&e=
>

The surprise here is that this feature is not documented in TFM.
If you're trying to understand a feature and you don't know it's a
new feature, NEWS is not necessarily the 1st place you go.

NEWS is not TFM. 'svn log' in not TFM.

H.

>
>  The man page for cmpfun/enableJIT nicely explains
>>       the JIT levels but I couldn't find anywhere that the level
>>       is set to 3 by default. I don't even know how one is
>>       supposed to get the current level. Calling enableJIT() to
>>       change the level returns a value, and this value might
>>       look like the previous level, but this is undocumented and
>>       it returns 0 instead of 3 the 1st time I call it anyway.
>>
>>    3) There is some bug in the byte-compiler that seems to make it
>>       treat `&&` like if it were `&` when compiling foo.
>
> It's a bug, but that doesn't describe it completely.  TRUE & c(a=TRUE,
> b=FALSE) doesn't give the same thing as foo(c(a=TRUE, b=FALSE)).
>
> Duncan Murdoch
>
>>
>> Cheers,
>> H.
>>
>>  > sessionInfo()
>> R version 3.4.0 (2017-04-21)
>> Platform: x86_64-pc-linux-gnu (64-bit)
>> Running under: Ubuntu 16.04.2 LTS
>>
>> Matrix products: default
>> BLAS: /home/biocbuild/bbs-3.5-bioc/R/lib/libRblas.so
>> LAPACK: /home/biocbuild/bbs-3.5-bioc/R/lib/libRlapack.so
>>
>> locale:
>>   [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C
>>   [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8
>>   [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8
>>   [7] LC_PAPER=en_US.UTF-8       LC_NAME=C
>>   [9] LC_ADDRESS=C               LC_TELEPHONE=C
>> [11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C
>>
>> attached base packages:
>> [1] stats     graphics  grDevices utils     datasets  methods   base
>>
>> loaded via a namespace (and not attached):
>> [1] compiler_3.4.0
>>
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://urldefense.proofpoint.com/v2/url?u=https-3A__stat.ethz.ch_mailman_listinfo_r-2Ddevel&d=DwIGaQ&c=eRAMFD45gAfqt84VtBcfhQ&r=BK7q3XeAvimeWdGbWY_wJYbW0WYiZvSXAJJKaaPhzWA&m=2Qn1jcR4dORPq3qVhYNnz_O64UneKth6ebbeC4CEtRI&s=pXXxO1dFT00kYhhUuO35VRCEYFiw6n2Sz4nSMb6OdxQ&e=
>

-- 
Herv? Pag?s

Program in Computational Biology
Division of Public Health Sciences
Fred Hutchinson Cancer Research Center
1100 Fairview Ave. N, M1-B514
P.O. Box 19024
Seattle, WA 98109-1024

E-mail: hpages at fredhutch.org
Phone:  (206) 667-5791
Fax:    (206) 667-1319


From luke-tierney at uiowa.edu  Thu Apr 27 01:46:07 2017
From: luke-tierney at uiowa.edu (luke-tierney at uiowa.edu)
Date: Wed, 26 Apr 2017 18:46:07 -0500 (CDT)
Subject: [Rd] byte-compiler bug
In-Reply-To: <3d1e32d7-1498-3fcc-6b46-1c5c20fe1f8b@fredhutch.org>
References: <3d1e32d7-1498-3fcc-6b46-1c5c20fe1f8b@fredhutch.org>
Message-ID: <alpine.DEB.2.20.1704261842210.4550@luke-Latitude>

Thanks for the report. Fixed in R_devel with r72631; I'll port to
R-patched later today or tomorrow.

The default setting and how to get the current settings are documented
in the Details section of the enableJIT help page at the end of the
paragraph for enableJIT.

Best,

luke

On Wed, 26 Apr 2017, Herv? Pag?s wrote:

> Hi,
>
> I'm running into a case where byte-compilation changes
> the semantic of a function. This is with R 3.4.0:
>
>   foo <- function(x) { TRUE && x }
>
>   foo(c(a=FALSE))
>   # [1] FALSE          # OK
>
>   foo(c(a=TRUE))
>   # [1] TRUE           # OK
>
>   foo(c(a=FALSE))
>   #     a              # ????
>   # FALSE
>
> The 3rd call returned a result that it different from the 1st
> call!
>
> After scratching my head for a while, I found out that there
> is a lot going on:
>
>   1) When calling foo the first 2 times, the function is not
>      byte-compiled so is behaving as expected.
>
>   2) However after the 2nd call, the function gets automatically
>      compiled. This seems to be a new feature in R 3.4.0 but
>      you'll have to grep the NEWS file to find out (search for
>      JIT). The man page for cmpfun/enableJIT nicely explains
>      the JIT levels but I couldn't find anywhere that the level
>      is set to 3 by default. I don't even know how one is
>      supposed to get the current level. Calling enableJIT() to
>      change the level returns a value, and this value might
>      look like the previous level, but this is undocumented and
>      it returns 0 instead of 3 the 1st time I call it anyway.
>
>   3) There is some bug in the byte-compiler that seems to make it
>      treat `&&` like if it were `&` when compiling foo.
>
> Cheers,
> H.
>
> > sessionInfo()
> R version 3.4.0 (2017-04-21)
> Platform: x86_64-pc-linux-gnu (64-bit)
> Running under: Ubuntu 16.04.2 LTS
>
> Matrix products: default
> BLAS: /home/biocbuild/bbs-3.5-bioc/R/lib/libRblas.so
> LAPACK: /home/biocbuild/bbs-3.5-bioc/R/lib/libRlapack.so
>
> locale:
>  [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C
>  [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8
>  [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8
>  [7] LC_PAPER=en_US.UTF-8       LC_NAME=C
>  [9] LC_ADDRESS=C               LC_TELEPHONE=C
> [11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C
>
> attached base packages:
> [1] stats     graphics  grDevices utils     datasets  methods   base
>
> loaded via a namespace (and not attached):
> [1] compiler_3.4.0
>
>

-- 
Luke Tierney
Ralph E. Wareham Professor of Mathematical Sciences
University of Iowa                  Phone:             319-335-3386
Department of Statistics and        Fax:               319-335-3017
    Actuarial Science
241 Schaeffer Hall                  email:   luke-tierney at uiowa.edu
Iowa City, IA 52242                 WWW:  http://www.stat.uiowa.edu

From hpages at fredhutch.org  Thu Apr 27 02:14:18 2017
From: hpages at fredhutch.org (=?UTF-8?B?SGVydsOpIFBhZ8Oocw==?=)
Date: Wed, 26 Apr 2017 17:14:18 -0700
Subject: [Rd] byte-compiler bug
In-Reply-To: <alpine.DEB.2.20.1704261842210.4550@luke-Latitude>
References: <3d1e32d7-1498-3fcc-6b46-1c5c20fe1f8b@fredhutch.org>
 <alpine.DEB.2.20.1704261842210.4550@luke-Latitude>
Message-ID: <85615b4b-7319-1695-ad48-5bd8bc0a3604@fredhutch.org>

On 04/26/2017 04:46 PM, luke-tierney at uiowa.edu wrote:
> Thanks for the report. Fixed in R_devel with r72631; I'll port to
> R-patched later today or tomorrow.

Thanks!

>
> The default setting and how to get the current settings are documented
> in the Details section of the enableJIT help page at the end of the
> paragraph for enableJIT.

Indeed. Sorry for missing that (I was playing with several versions
of R and probably looked at the enableJIT man page in the wrong R).

H.

>
> Best,
>
> luke
>
> On Wed, 26 Apr 2017, Herv? Pag?s wrote:
>
>> Hi,
>>
>> I'm running into a case where byte-compilation changes
>> the semantic of a function. This is with R 3.4.0:
>>
>>   foo <- function(x) { TRUE && x }
>>
>>   foo(c(a=FALSE))
>>   # [1] FALSE          # OK
>>
>>   foo(c(a=TRUE))
>>   # [1] TRUE           # OK
>>
>>   foo(c(a=FALSE))
>>   #     a              # ????
>>   # FALSE
>>
>> The 3rd call returned a result that it different from the 1st
>> call!
>>
>> After scratching my head for a while, I found out that there
>> is a lot going on:
>>
>>   1) When calling foo the first 2 times, the function is not
>>      byte-compiled so is behaving as expected.
>>
>>   2) However after the 2nd call, the function gets automatically
>>      compiled. This seems to be a new feature in R 3.4.0 but
>>      you'll have to grep the NEWS file to find out (search for
>>      JIT). The man page for cmpfun/enableJIT nicely explains
>>      the JIT levels but I couldn't find anywhere that the level
>>      is set to 3 by default. I don't even know how one is
>>      supposed to get the current level. Calling enableJIT() to
>>      change the level returns a value, and this value might
>>      look like the previous level, but this is undocumented and
>>      it returns 0 instead of 3 the 1st time I call it anyway.
>>
>>   3) There is some bug in the byte-compiler that seems to make it
>>      treat `&&` like if it were `&` when compiling foo.
>>
>> Cheers,
>> H.
>>
>> > sessionInfo()
>> R version 3.4.0 (2017-04-21)
>> Platform: x86_64-pc-linux-gnu (64-bit)
>> Running under: Ubuntu 16.04.2 LTS
>>
>> Matrix products: default
>> BLAS: /home/biocbuild/bbs-3.5-bioc/R/lib/libRblas.so
>> LAPACK: /home/biocbuild/bbs-3.5-bioc/R/lib/libRlapack.so
>>
>> locale:
>>  [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C
>>  [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8
>>  [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8
>>  [7] LC_PAPER=en_US.UTF-8       LC_NAME=C
>>  [9] LC_ADDRESS=C               LC_TELEPHONE=C
>> [11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C
>>
>> attached base packages:
>> [1] stats     graphics  grDevices utils     datasets  methods   base
>>
>> loaded via a namespace (and not attached):
>> [1] compiler_3.4.0
>>
>>
>

-- 
Herv? Pag?s

Program in Computational Biology
Division of Public Health Sciences
Fred Hutchinson Cancer Research Center
1100 Fairview Ave. N, M1-B514
P.O. Box 19024
Seattle, WA 98109-1024

E-mail: hpages at fredhutch.org
Phone:  (206) 667-5791
Fax:    (206) 667-1319


From itguy at chevron.com  Thu Apr 27 16:41:21 2017
From: itguy at chevron.com (Jones, Michael)
Date: Thu, 27 Apr 2017 14:41:21 +0000
Subject: [Rd] prefixed zlib and bzip2 headers
Message-ID: <E17B518FE3DB9346BBA1D023AD104AEA2BF00AE9@hou150w8xmbx08.hou150.chevrontexaco.net>

Hello,

I'm trying to compile R-3.3.3 or R-3.4.0 on a RHEL6 system that I've prefixed the latest headers down a shared utility path, I've sourced this path in LD_LIBRARY_LATH, R_LD_LIBRARY_PATH,  and dropping the headers down /src/include which appears to be the default R_include_dir but it will not accept these any other place than /usr/include.  Is there a way to properly define a prefixed includedir and libdir for R that I'm missing?  I was able to do this in 3.2.4-revised successfully.  I see the comments that -with-system-zlib is now default, but I see no options to override that.  Can you please point me in the correct direction?


Many thanks!


	[[alternative HTML version deleted]]


From frederik at ofb.net  Thu Apr 27 22:44:56 2017
From: frederik at ofb.net (frederik at ofb.net)
Date: Thu, 27 Apr 2017 13:44:56 -0700
Subject: [Rd] tempdir() may be deleted during long-running R session
In-Reply-To: <70f538a9-e9de-1282-455e-f6fda02ef778@gmail.com>
References: <15e3b0a3-e0a8-2da8-27c4-9268a5751986@stats.ox.ac.uk>
 <4f0797c5-a078-67ae-3992-cd66a82b454a@helsinki.fi>
 <22777.65060.465733.160015@max.eddelbuettel.com>
 <20170421173446.GB20737@ofb.net>
 <22780.46838.39255.710673@max.eddelbuettel.com>
 <22783.11355.51121.660887@stat.math.ethz.ch>
 <ea6a1fb2067a4c98b113c878789faf9f@exchsrv2.sgc.loc>
 <20170426041358.GD20737@ofb.net>
 <22784.22675.947702.198651@stat.math.ethz.ch>
 <70f538a9-e9de-1282-455e-f6fda02ef778@gmail.com>
Message-ID: <20170427204456.GF17713@ofb.net>

> Frederick posted the way to do this in systems using systemd.  We should be
> putting that in place, or the equivalent on systems using other tempfile
> cleanups.  This looks to me like something that "make install" should do, or
> perhaps it should be done by people putting together packages for specific
> systems.

For Arch's 'apache' package it is just a file in the package directory
that gets installed by the PKGBUILD script:

    install -D -m644 "${srcdir}/apache.tmpfiles.conf" "${pkgdir}/usr/lib/tmpfiles.d/apache.conf"

Similarly for the 'screen' package.

I added a task in the Arch bug tracker to do this for R:

https://bugs.archlinux.org/task/53848

I don't get the sense that it is customary to put examples of such
files into the source distribution, so I think nothing more needs to
be done on your side (aside from alerting package maintainers for
other distributions).

Thanks,

Frederick


From frederik at ofb.net  Thu Apr 27 22:53:39 2017
From: frederik at ofb.net (frederik at ofb.net)
Date: Thu, 27 Apr 2017 13:53:39 -0700
Subject: [Rd] tempdir() may be deleted during long-running R session
In-Reply-To: <d053ca3a-781d-4ea9-be10-2f17b47d7cee@gmail.com>
References: <22777.65060.465733.160015@max.eddelbuettel.com>
 <20170421173446.GB20737@ofb.net>
 <22780.46838.39255.710673@max.eddelbuettel.com>
 <22783.11355.51121.660887@stat.math.ethz.ch>
 <ea6a1fb2067a4c98b113c878789faf9f@exchsrv2.sgc.loc>
 <20170426041358.GD20737@ofb.net>
 <22784.22675.947702.198651@stat.math.ethz.ch>
 <70f538a9-e9de-1282-455e-f6fda02ef778@gmail.com>
 <f537ab49-dd45-70f5-1795-1834fecd3b41@gmail.com>
 <d053ca3a-781d-4ea9-be10-2f17b47d7cee@gmail.com>
Message-ID: <20170427205339.GG17713@ofb.net>

> > It might still be useful if R could sometimes detect when automated
> > cleanup happened and warn the user. Perhaps a simple way could be to
> > always create an empty file inside session directory, like
> > ".tmp_cleaner_trap". R would never touch this file, but check its
> > existence time-to-time. If it gets deleted, R would issue a warning and
> > ask the user to check tmp cleaner configuration. The idea is that this
> > file will be the oldest one in the session directory, so would get
> > cleaned up first.

It may kill two birds with one stone if we put the PID into such a
file. Then it could be used to automate the cleanup of /tmp/RtmpXXXX
directories left around from crashed R sessions (since we're about to
tell Systemd not to touch them).

I'm not sure what is meant by "R would ... check its existence
time-to-time". It doesn't sound to me like an important enough task to
go into the main event loop of the interpreter. Maybe a warning/error
in 'tempdir()' to tell us that either the directory has been deleted
or that the PID file no longer exists.

Thank you,

Frederick


From dstr7320 at uni.sydney.edu.au  Fri Apr 28 08:00:11 2017
From: dstr7320 at uni.sydney.edu.au (Dario Strbenac)
Date: Fri, 28 Apr 2017 06:00:11 +0000
Subject: [Rd] pairwiseAlignment Improvements
Message-ID: <MWHPR01MB27013A1FCDBC21696EDCA473CD130@MWHPR01MB2701.prod.exchangelabs.com>

Good day,

The location of indels can be retrieved from a PairwiseAlignmentsSingleSubject object by using indel. Determining any difference between the two sequences, including substitutions, is not quick nor easy. I suppose that summary displays details of the mismatches, but the variable is of class PairwiseAlignmentsSingleSubjectSummary which has no documented accessors. So, the code to access the information looks bad.

summaryAlign at mismatchSummary[["subject"]]

    SubjectPosition Subject Pattern Count Probability
1               2       T       A     1           1
2               3       T       A     1           1

This could be improved with accessors for end users.

Also, instead of being a data.frame, this would be better stored as IRanges with associated metadata columns, accessible with mcols, so that methods like reduce could easily be used to look for contiguous blocks of differences.

Is there a reason why the show method for the summary only shows mismatches, even if there are indels contained in it? This seems arbitrary and also misleading, because it always gives a false impression that there are no indels.

Could the return data types consistently be made to be IRanges ? Sometimes it's IntegerList, sometimes it's IRanges. For example,

> A
  11-letter "DNAString" instance
seq: GAACGAGGACC
> B
  8-letter "DNAString" instance
seq: GGACGAGC
> alignment <- pairwiseAlignment(A, B, gapOpening = 0, gapExtension = 1, substitutionMatrix = substitutions)
> alignment at subject@mismatch
IntegerList of length 1
[[1]] 2
> alignment at subject@indel
IRangesList of length 1
[[1]]
IRanges of length 1
    start end width
[1]     8   9     2

Lastly, why are functions like insertion, deletion, and indel documented in Numeric Summary Methods? Unlike nchar and score, they are not numerical summaries of the data.

It'd be nice to see this part of Biostrings thoroughly refactored with more focus on UX.

--------------------------------------
Dario Strbenac
University of Sydney
Camperdown NSW 2050
Australia


From dstr7320 at uni.sydney.edu.au  Fri Apr 28 08:05:18 2017
From: dstr7320 at uni.sydney.edu.au (Dario Strbenac)
Date: Fri, 28 Apr 2017 06:05:18 +0000
Subject: [Rd] pairwiseAlignment Improvements
In-Reply-To: <MWHPR01MB27013A1FCDBC21696EDCA473CD130@MWHPR01MB2701.prod.exchangelabs.com>
References: <MWHPR01MB27013A1FCDBC21696EDCA473CD130@MWHPR01MB2701.prod.exchangelabs.com>
Message-ID: <MWHPR01MB2701FFAFE84FB14F3E4E8D18CD130@MWHPR01MB2701.prod.exchangelabs.com>

This has been re-sent to the Bioconductor Development mailing list and may be deleted from the archive if it is possible.

From plummerm at iarc.fr  Fri Apr 28 12:58:05 2017
From: plummerm at iarc.fr (Martyn Plummer)
Date: Fri, 28 Apr 2017 10:58:05 +0000
Subject: [Rd] prefixed zlib and bzip2 headers
In-Reply-To: <E17B518FE3DB9346BBA1D023AD104AEA2BF00AE9@hou150w8xmbx08.hou150.chevrontexaco.net>
References: <E17B518FE3DB9346BBA1D023AD104AEA2BF00AE9@hou150w8xmbx08.hou150.chevrontexaco.net>
Message-ID: <1493377086.12031.84.camel@iarc.fr>

If you are having any trouble compiling R on RHEL or its derivatives,
it is worth recalling that a binary distribution of R is provided
through the EPEL (Extra Packages for Enterprise Linux) repository:

https://fedoraproject.org/wiki/EPEL

Install the appropriate epel-release RPM to enable the repository. Then
you can install R via dnf as you would any other software package.

Tom Callaway from Red Hat maintains the R rpms and he ensures that they
still build and install on RHEL 5 and 6. Specifically, for zlib and
other system libraries that are too old on these platforms, up-to-date
versions are built and statically linked into R during the RPM build
process.

Having said that, if you need to install R from source on RHEL 5 or 6
then you need to specify the locations of the locally-installed
libraries and headers. This is done at configure time via CFLAGS and
LDFLAGS (See the R-admin manual, section B3.3), e.g.

CFLAGS="-g -O2 -I/path/to/my/headers" \
LDFLAGS="-L/path/to/my/libs" \
./configure

If you do this then you do not need to set LD_LIBRARY_PATH at runtime.
Library locations specified via LDFLAGS are collated and automatically
added to LD_LIBRARY_PATH (See R-admin, section B7).

Martyn


On Thu, 2017-04-27 at 14:41 +0000, Jones, Michael wrote:
> Hello,
> 
> I'm trying to compile R-3.3.3 or R-3.4.0 on a RHEL6 system that I've
> prefixed the latest headers down a shared utility path, I've sourced
> this path in LD_LIBRARY_LATH, R_LD_LIBRARY_PATH,??and dropping the
> headers down /src/include which appears to be the default
> R_include_dir but it will not accept these any other place than
> /usr/include.??Is there a way to properly define a prefixed
> includedir and libdir for R that I'm missing???I was able to do this
> in 3.2.4-revised successfully.??I see the comments that -with-system-
> zlib is now default, but I see no options to override that.??Can you
> please point me in the correct direction?
> 
> 
> Many thanks!
> 
> 
> 	[[alternative HTML version deleted]]
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel

From itguy at chevron.com  Fri Apr 28 15:20:30 2017
From: itguy at chevron.com (Jones, Michael)
Date: Fri, 28 Apr 2017 13:20:30 +0000
Subject: [Rd] prefixed zlib and bzip2 headers
In-Reply-To: <1493377086.12031.84.camel@iarc.fr>
References: <E17B518FE3DB9346BBA1D023AD104AEA2BF00AE9@hou150w8xmbx08.hou150.chevrontexaco.net>
 <1493377086.12031.84.camel@iarc.fr>
Message-ID: <E17B518FE3DB9346BBA1D023AD104AEA2BF037BC@hou150w8xmbx08.hou150.chevrontexaco.net>

Thank you Martyn!  I'm happy to say I finally did read that section and did just that with the CFLAGS and LDFLAGS so that things built correctly.   One thing that was a bit interesting, for the curl lib I tried to use the latest we had built which was 7.50.3 and it would complain about the version until I stepped down to 7.32.0.  I'm not sure if this is something in the way we built that library or something in the check itself, but nevertheless I was able to get a successful build yesterday! :)

Unfortunately, the environment I'm in resides heavily on an isofs like environment for machines, so epel packages are not as easily usable for multi-use machines I work on, but for opportunities where that is not the case I will certainly keep that in mind!  I appreciate that information.


Thanks very much

-----Original Message-----
From: Martyn Plummer [mailto:plummerm at iarc.fr] 
Sent: Friday, April 28, 2017 5:58 AM
To: r-devel at r-project.org; Jones, Michael <itguy at chevron.com>
Subject: [**EXTERNAL**] Re: [Rd] prefixed zlib and bzip2 headers

If you are having any trouble compiling R on RHEL or its derivatives,
it is worth recalling that a binary distribution of R is provided
through the EPEL (Extra Packages for Enterprise Linux) repository:

https://fedoraproject.org/wiki/EPEL

Install the appropriate epel-release RPM to enable the repository. Then
you can install R via dnf as you would any other software package.

Tom Callaway from Red Hat maintains the R rpms and he ensures that they
still build and install on RHEL 5 and 6. Specifically, for zlib and
other system libraries that are too old on these platforms, up-to-date
versions are built and statically linked into R during the RPM build
process.

Having said that, if you need to install R from source on RHEL 5 or 6
then you need to specify the locations of the locally-installed
libraries and headers. This is done at configure time via CFLAGS and
LDFLAGS (See the R-admin manual, section B3.3), e.g.

CFLAGS="-g -O2 -I/path/to/my/headers" \
LDFLAGS="-L/path/to/my/libs" \
./configure

If you do this then you do not need to set LD_LIBRARY_PATH at runtime.
Library locations specified via LDFLAGS are collated and automatically
added to LD_LIBRARY_PATH (See R-admin, section B7).

Martyn


On Thu, 2017-04-27 at 14:41 +0000, Jones, Michael wrote:
> Hello,
> 
> I'm trying to compile R-3.3.3 or R-3.4.0 on a RHEL6 system that I've
> prefixed the latest headers down a shared utility path, I've sourced
> this path in LD_LIBRARY_LATH, R_LD_LIBRARY_PATH,??and dropping the
> headers down /src/include which appears to be the default
> R_include_dir but it will not accept these any other place than
> /usr/include.??Is there a way to properly define a prefixed
> includedir and libdir for R that I'm missing???I was able to do this
> in 3.2.4-revised successfully.??I see the comments that -with-system-
> zlib is now default, but I see no options to override that.??Can you
> please point me in the correct direction?
> 
> 
> Many thanks!
> 
> 
> 	[[alternative HTML version deleted]]
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel

From Jack.Kelley at bigpond.com  Sun Apr 30 01:53:02 2017
From: Jack.Kelley at bigpond.com (Jack Kelley)
Date: Sun, 30 Apr 2017 09:53:02 +1000
Subject: [Rd] Any progress on write.csv fileEncoding for UTF-16 and UTF-32 ?
Message-ID: <000101d2c143$bd644380$382cca80$@bigpond.com>

"R version 3.4.0 (2017-04-21)"  on "x86_64-w64-mingw32" platform

I am using CSVs and other text tables, and text in general (including
regular expressions), on Windows 10.
For me, that means dealing with Windows-1252 and UTF-8 encoding, with UTF-16
and UTF-32 as helpful curiosities.

Something as simple as iconv ("\n", to = "UTF-16") causes an error, due to
an embedded nul.

Then there is write.csv (or write.table) with its fileEncoding parameter:
not working correctly for UTF-16 and UTF-32.

Of course, developers are aware of this, for example 


[Rd] iconv to UTF-16 encoding produces error due to embedded nulls
(write.table with fileEncoding param)
https://stat.ethz.ch/pipermail/r-devel/2016-February/072323.html

iconv to UTF-16 encoding produces error due to embedded nulls (write.table
with fileEncoding param)
http://r.789695.n4.nabble.com/iconv-to-UTF-16-encoding-produces-error-due-to
-embedded-nulls-write-table-with-fileEncoding-param-td4717481.html

----------------------------------------------------------------------------
------------------------

Focussing on write.csv and UTF-16LE and UTF-16BE, it seems that a nul
character is omitted in each <CarriageReturn><LineFeed> pair.

TEST SCRIPT
----------------------------------------------------------------------------
------------------------
remove (list = objects())

print (sessionInfo())
cat ("---------------------------------\n\n")

LE <- data.frame (
  want = c ("0d,00", "0a,00"),
  got  = c ("0d   ", "0a,00")
)

BE <- data.frame (
  want = c ("00,0d", "00,0a"),
  got  = c ("00,0d", "   0a")
)

write.csv (LE, "R_LE.csv", fileEncoding = "UTF-16LE", row.names = FALSE)
write.csv (BE, "R_BE.csv", fileEncoding = "UTF-16BE", row.names = FALSE)

print (readBin ("R_LE.csv", "raw", 1000))
print (LE)
cat ("\n")

print (readBin ("R_BE.csv", "raw", 1000))
print (BE)
cat ("\n")

try (iconv ("\n", to = "UTF-8"))

try (iconv ("\n", to = "UTF-16LE"))
try (iconv ("\n", to = "UTF-16BE"))
try (iconv ("\n", to = "UTF-16"))

try (iconv ("\n", to = "UTF-32LE"))
try (iconv ("\n", to = "UTF-32BE"))
try (iconv ("\n", to = "UTF-32"))
----------------------------------------------------------------------------
------------------------

TEST SCRIPT OUTPUT

> source ("bug_encoding.R")
R version 3.4.0 (2017-04-21)
Platform: x86_64-w64-mingw32/x64 (64-bit)
Running under: Windows 10 x64 (build 14393)

Matrix products: default

locale:
[1] LC_COLLATE=English_Australia.1252  LC_CTYPE=English_Australia.1252
[3] LC_MONETARY=English_Australia.1252 LC_NUMERIC=C
[5] LC_TIME=English_Australia.1252

attached base packages:
[1] stats     graphics  grDevices utils     datasets  methods   base

loaded via a namespace (and not attached):
[1] compiler_3.4.0
---------------------------------

 [1] 22 00 77 00 61 00 6e 00 74 00 22 00 2c 00 22 00 67 00 6f 00 74 00 22 00
0d
[26] 0a 00 22 00 30 00 64 00 2c 00 30 00 30 00 22 00 2c 00 22 00 30 00 64 00
20
[51] 00 20 00 20 00 22 00 0d 0a 00 22 00 30 00 61 00 2c 00 30 00 30 00 22 00
2c
[76] 00 22 00 30 00 61 00 2c 00 30 00 30 00 22 00 0d 0a 00
   want   got
1 0d,00 0d
2 0a,00 0a,00

 [1] 00 22 00 77 00 61 00 6e 00 74 00 22 00 2c 00 22 00 67 00 6f 00 74 00 22
00
[26] 0d 0a 00 22 00 30 00 30 00 2c 00 30 00 64 00 22 00 2c 00 22 00 30 00 30
00
[51] 2c 00 30 00 64 00 22 00 0d 0a 00 22 00 30 00 30 00 2c 00 30 00 61 00 22
00
[76] 2c 00 22 00 20 00 20 00 20 00 30 00 61 00 22 00 0d 0a
   want   got
1 00,0d 00,0d
2 00,0a    0a

Error in iconv("\n", to = "UTF-16LE") : embedded nul in string: '\n\0'
Error in iconv("\n", to = "UTF-16BE") : embedded nul in string: '\0\n'
Error in iconv("\n", to = "UTF-16") : embedded nul in string: '??\0\n'
Error in iconv("\n", to = "UTF-32LE") :
  embedded nul in string: '\n\0\0\0'
Error in iconv("\n", to = "UTF-32BE") :
  embedded nul in string: '\0\0\0\n'
Error in iconv("\n", to = "UTF-32") :
  embedded nul in string: '\0\0??\0\0\0\n'
>
----------------------------------------------------------------------------
------------------------
Cheers -- Jack Kelley


From bwiedemann at suse.de  Sun Apr 30 08:28:26 2017
From: bwiedemann at suse.de (Bernhard M. Wiedemann)
Date: Sun, 30 Apr 2017 06:28:26 +0000
Subject: [Rd] R patch
Message-ID: <64f59439-ba52-7bda-03b5-b3a59eb88432@suse.de>

Hi,

please find attached a tiny patch
that improves the reproducibility of R
as built in openSUSE

There are other sources of non-reproducibility as can be seen in
the diffs on
http://rb.zq1.de/compare.factory-20170428/R-base-compare.out

e.g. there are timestamps in /usr/lib64/R/library/boot/Meta/package.rds
and /usr/lib64/R/library/cluster/DESCRIPTION

and many rds, rdb and rdx files have binary diffs
-------------- next part --------------
A non-text attachment was scrubbed...
Name: reproducible.patch
Type: text/x-patch
Size: 594 bytes
Desc: not available
URL: <https://stat.ethz.ch/pipermail/r-devel/attachments/20170430/6d4ceca9/attachment.bin>

From brodie.gaslam at yahoo.com  Sun Apr 30 17:30:31 2017
From: brodie.gaslam at yahoo.com (brodie gaslam)
Date: Sun, 30 Apr 2017 15:30:31 +0000 (UTC)
Subject: [Rd] `match.call` and dots substitution
References: <1700008543.889818.1493566231415.ref@mail.yahoo.com>
Message-ID: <1700008543.889818.1493566231415@mail.yahoo.com>

I'm noticing some interesting behavior in `match.call` in some corner-ish cases that arise when you try to use `match.call` to match a "grandparent" function and there are dots involved:


    fun0 <- function(a, ...) fun1(...)
       fun1 <- function(b, ...) fun2()
    fun2 <- function()
      match.call(
              fun1, sys.call(sys.parent()), expand.dots=FALSE, 

        envir=parent.frame(2)
      )
    fun0(1, 2, 3)
    
    ## fun1(b = 2, ... = pairlist(3))
    
    fun0((1), (2), (3))   # the parens make the substituted args language

    ## fun1(b = ..1, ... = pairlist(..2))


When the values in dots that need to be substituted are language, they get substituted by `..n` where `n` is the position in dots.  When they are scalars they are substituted with the scalar.  It appears this is done in 'R-3.4.0:src/main/unique.c at 1319' in `subDots`:

    while (TYPEOF(t) == PROMSXP)
     	    t = PREXPR(t);
   	if( isSymbol(t) || isLanguage(t) )
      SETCAR(b, installDDVAL(i));
    else
      SETCAR(b, t);


I'm not sure why it is necessary to use `installDDVAL`, which creates the `..n` symbols, instead of duplicating the language object and attaching that to the matched call.  Certainly from a user perspective I would prefer to see:

    ## fun1(b = (2), ... = pairlist((3)))

instead of:

       ## fun1(b = ..1, ... = pairlist(..2))


Do others agree?  Is there a structural reason why this cannot be done?  Note this behavior has been this way since at least R3.0 and probably earlier.


Best regards,

B.

PS: sessionInfo():

R version 3.4.0 (2017-04-21)
Platform: x86_64-apple-darwin15.6.0 (64-bit)
Running under: macOS Sierra 10.12.3

Matrix products: default
BLAS: /Library/Frameworks/R.framework/Versions/3.4/Resources/lib/libRblas.0.dylib
LAPACK: /Library/Frameworks/R.framework/Versions/3.4/Resources/lib/libRlapack.dylib

locale:
[1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8

attached base packages:
[1] stats     graphics  grDevices utils     datasets  methods   base 

loaded via a namespace (and not attached):
[1] compiler_3.4.0


From murdoch.duncan at gmail.com  Sun Apr 30 18:23:58 2017
From: murdoch.duncan at gmail.com (Duncan Murdoch)
Date: Sun, 30 Apr 2017 12:23:58 -0400
Subject: [Rd] Any progress on write.csv fileEncoding for UTF-16 and
 UTF-32 ?
In-Reply-To: <000101d2c143$bd644380$382cca80$@bigpond.com>
References: <000101d2c143$bd644380$382cca80$@bigpond.com>
Message-ID: <6dee41ed-b1c1-4d4d-0eb1-03f3e7e0d759@gmail.com>

No, I don't think anyone is working on this.

There's a fairly simple workaround for the UTF-16 and UTF-32 iconv 
issues:  don't attempt to produce character vectors, produce raw vectors 
instead. (The "toRaw" argument to iconv() asks for this.) Raw vectors 
can contain embedded nulls.  Character vectors can't, because 
internally, R is using 8 bit C strings, and the nulls are string 
terminators.

I don't know how difficult it would be to fix the write.table problems.

Duncan Murdoch

On 29/04/2017 7:53 PM, Jack Kelley wrote:
> "R version 3.4.0 (2017-04-21)"  on "x86_64-w64-mingw32" platform
>
> I am using CSVs and other text tables, and text in general (including
> regular expressions), on Windows 10.
> For me, that means dealing with Windows-1252 and UTF-8 encoding, with UTF-16
> and UTF-32 as helpful curiosities.
>
> Something as simple as iconv ("\n", to = "UTF-16") causes an error, due to
> an embedded nul.
>
> Then there is write.csv (or write.table) with its fileEncoding parameter:
> not working correctly for UTF-16 and UTF-32.
>
> Of course, developers are aware of this, for example ?
>
> [Rd] iconv to UTF-16 encoding produces error due to embedded nulls
> (write.table with fileEncoding param)
> https://stat.ethz.ch/pipermail/r-devel/2016-February/072323.html
>
> iconv to UTF-16 encoding produces error due to embedded nulls (write.table
> with fileEncoding param)
> http://r.789695.n4.nabble.com/iconv-to-UTF-16-encoding-produces-error-due-to
> -embedded-nulls-write-table-with-fileEncoding-param-td4717481.html
>
> ----------------------------------------------------------------------------
> ------------------------
>
> Focussing on write.csv and UTF-16LE and UTF-16BE, it seems that a nul
> character is omitted in each <CarriageReturn><LineFeed> pair.
>
> TEST SCRIPT
> ----------------------------------------------------------------------------
> ------------------------
> remove (list = objects())
>
> print (sessionInfo())
> cat ("---------------------------------\n\n")
>
> LE <- data.frame (
>   want = c ("0d,00", "0a,00"),
>   got  = c ("0d   ", "0a,00")
> )
>
> BE <- data.frame (
>   want = c ("00,0d", "00,0a"),
>   got  = c ("00,0d", "   0a")
> )
>
> write.csv (LE, "R_LE.csv", fileEncoding = "UTF-16LE", row.names = FALSE)
> write.csv (BE, "R_BE.csv", fileEncoding = "UTF-16BE", row.names = FALSE)
>
> print (readBin ("R_LE.csv", "raw", 1000))
> print (LE)
> cat ("\n")
>
> print (readBin ("R_BE.csv", "raw", 1000))
> print (BE)
> cat ("\n")
>
> try (iconv ("\n", to = "UTF-8"))
>
> try (iconv ("\n", to = "UTF-16LE"))
> try (iconv ("\n", to = "UTF-16BE"))
> try (iconv ("\n", to = "UTF-16"))
>
> try (iconv ("\n", to = "UTF-32LE"))
> try (iconv ("\n", to = "UTF-32BE"))
> try (iconv ("\n", to = "UTF-32"))
> ----------------------------------------------------------------------------
> ------------------------
>
> TEST SCRIPT OUTPUT
>
>> source ("bug_encoding.R")
> R version 3.4.0 (2017-04-21)
> Platform: x86_64-w64-mingw32/x64 (64-bit)
> Running under: Windows 10 x64 (build 14393)
>
> Matrix products: default
>
> locale:
> [1] LC_COLLATE=English_Australia.1252  LC_CTYPE=English_Australia.1252
> [3] LC_MONETARY=English_Australia.1252 LC_NUMERIC=C
> [5] LC_TIME=English_Australia.1252
>
> attached base packages:
> [1] stats     graphics  grDevices utils     datasets  methods   base
>
> loaded via a namespace (and not attached):
> [1] compiler_3.4.0
> ---------------------------------
>
>  [1] 22 00 77 00 61 00 6e 00 74 00 22 00 2c 00 22 00 67 00 6f 00 74 00 22 00
> 0d
> [26] 0a 00 22 00 30 00 64 00 2c 00 30 00 30 00 22 00 2c 00 22 00 30 00 64 00
> 20
> [51] 00 20 00 20 00 22 00 0d 0a 00 22 00 30 00 61 00 2c 00 30 00 30 00 22 00
> 2c
> [76] 00 22 00 30 00 61 00 2c 00 30 00 30 00 22 00 0d 0a 00
>    want   got
> 1 0d,00 0d
> 2 0a,00 0a,00
>
>  [1] 00 22 00 77 00 61 00 6e 00 74 00 22 00 2c 00 22 00 67 00 6f 00 74 00 22
> 00
> [26] 0d 0a 00 22 00 30 00 30 00 2c 00 30 00 64 00 22 00 2c 00 22 00 30 00 30
> 00
> [51] 2c 00 30 00 64 00 22 00 0d 0a 00 22 00 30 00 30 00 2c 00 30 00 61 00 22
> 00
> [76] 2c 00 22 00 20 00 20 00 20 00 30 00 61 00 22 00 0d 0a
>    want   got
> 1 00,0d 00,0d
> 2 00,0a    0a
>
> Error in iconv("\n", to = "UTF-16LE") : embedded nul in string: '\n\0'
> Error in iconv("\n", to = "UTF-16BE") : embedded nul in string: '\0\n'
> Error in iconv("\n", to = "UTF-16") : embedded nul in string: '??\0\n'
> Error in iconv("\n", to = "UTF-32LE") :
>   embedded nul in string: '\n\0\0\0'
> Error in iconv("\n", to = "UTF-32BE") :
>   embedded nul in string: '\0\0\0\n'
> Error in iconv("\n", to = "UTF-32") :
>   embedded nul in string: '\0\0??\0\0\0\n'
>>
> ----------------------------------------------------------------------------
> ------------------------
> Cheers -- Jack Kelley
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>


From lawrence.michael at gene.com  Sun Apr 30 19:46:59 2017
From: lawrence.michael at gene.com (Michael Lawrence)
Date: Sun, 30 Apr 2017 10:46:59 -0700
Subject: [Rd] `match.call` and dots substitution
In-Reply-To: <1700008543.889818.1493566231415@mail.yahoo.com>
References: <1700008543.889818.1493566231415.ref@mail.yahoo.com>
 <1700008543.889818.1493566231415@mail.yahoo.com>
Message-ID: <CAOQ5Nyd-nj-jC1R8vZ+MqQYtpZrux+FCcbBHo5HrXkytWKbgDA@mail.gmail.com>

The result of match.call() should be something that would evaluate
correctly in the frame of the fun0() call. While wrapping things in
parentheses is unlikely to cause any problems, arbitrary calls and
symbols would.

Consider the following:

fun0 <- function(a, ...) {
    x <- 2L
    fun1(...)
}
fun1 <- function(b, ...) fun2()
fun2 <- function() {
    mc <- match.call(
        fun1, sys.call(sys.parent()), expand.dots=FALSE,
        envir=parent.frame(2)
    )
    c(correct = eval(mc$b, parent.frame(2)),
      incorrect = evalq(1 + x, parent.frame(2)))
}

x <- 1
fun0(1, 1 + x, 3)
  correct incorrect
        2         3



On Sun, Apr 30, 2017 at 8:30 AM, brodie gaslam via R-devel
<r-devel at r-project.org> wrote:
> I'm noticing some interesting behavior in `match.call` in some corner-ish cases that arise when you try to use `match.call` to match a "grandparent" function and there are dots involved:
>
>
>     fun0 <- function(a, ...) fun1(...)
>        fun1 <- function(b, ...) fun2()
>     fun2 <- function()
>       match.call(
>               fun1, sys.call(sys.parent()), expand.dots=FALSE,
>
>         envir=parent.frame(2)
>       )
>     fun0(1, 2, 3)
>
>     ## fun1(b = 2, ... = pairlist(3))
>
>     fun0((1), (2), (3))   # the parens make the substituted args language
>
>     ## fun1(b = ..1, ... = pairlist(..2))
>
>
> When the values in dots that need to be substituted are language, they get substituted by `..n` where `n` is the position in dots.  When they are scalars they are substituted with the scalar.  It appears this is done in 'R-3.4.0:src/main/unique.c at 1319' in `subDots`:
>
>     while (TYPEOF(t) == PROMSXP)
>             t = PREXPR(t);
>         if( isSymbol(t) || isLanguage(t) )
>       SETCAR(b, installDDVAL(i));
>     else
>       SETCAR(b, t);
>
>
> I'm not sure why it is necessary to use `installDDVAL`, which creates the `..n` symbols, instead of duplicating the language object and attaching that to the matched call.  Certainly from a user perspective I would prefer to see:
>
>     ## fun1(b = (2), ... = pairlist((3)))
>
> instead of:
>
>        ## fun1(b = ..1, ... = pairlist(..2))
>
>
> Do others agree?  Is there a structural reason why this cannot be done?  Note this behavior has been this way since at least R3.0 and probably earlier.
>
>
> Best regards,
>
> B.
>
> PS: sessionInfo():
>
> R version 3.4.0 (2017-04-21)
> Platform: x86_64-apple-darwin15.6.0 (64-bit)
> Running under: macOS Sierra 10.12.3
>
> Matrix products: default
> BLAS: /Library/Frameworks/R.framework/Versions/3.4/Resources/lib/libRblas.0.dylib
> LAPACK: /Library/Frameworks/R.framework/Versions/3.4/Resources/lib/libRlapack.dylib
>
> locale:
> [1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8
>
> attached base packages:
> [1] stats     graphics  grDevices utils     datasets  methods   base
>
> loaded via a namespace (and not attached):
> [1] compiler_3.4.0
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From christoph.sax at gmail.com  Sun Apr 30 22:48:23 2017
From: christoph.sax at gmail.com (Christoph Sax)
Date: Sun, 30 Apr 2017 22:48:23 +0200
Subject: [Rd] Byte compilation with window<- in R3.4.0
Message-ID: <590BAC44-18AD-46D8-847D-B328E51DC84D@gmail.com>

Hi,

I am running into a problem when I use the window<- replacement function in R
3.4.0. It will lead to an error when it is called inside a loop, probably 
the result of the byte compiler now enabled by default.

When I turn it off, it works again, as in older versions of R. I tested on Win,
Linux and Mac, and the problem occurs everywhere. 

Here is a reproducible example:

z <- AirPassengers

# this works
window(z, start =  c(1955, 1), end =  c(1955, 1)) <- NA

# but this does not
for (i in 1) {
 window(z, start =  c(1955, 1), end =  c(1955, 1)) <- NA
}
# Error in stats::window(x = `*tmp*`, start = c(1955, 1), end = c(1955,  : 
#   object '*tmp*' not found

# turning off the byte compiler makes it working again (as in older R versions)
compiler::enableJIT(0)
for (i in 1) {
 window(z, start =  c(1955, 1), end =  c(1955, 1)) <- NA
}

Any help is very much appreciated.

Thanks,
Christoph


