From suharto_anggono at yahoo.com  Sun Oct  1 18:39:04 2017
From: suharto_anggono at yahoo.com (Suharto Anggono Suharto Anggono)
Date: Sun, 1 Oct 2017 16:39:04 +0000 (UTC)
Subject: [Rd] Revert to R 3.2.x code of logicalSubscript in subscript.c?
References: <1301791425.1605521.1506875944516.ref@mail.yahoo.com>
Message-ID: <1301791425.1605521.1506875944516@mail.yahoo.com>

Currently, in function 'logicalSubscript' in subscript.c, the case of no recycling is handled like the implentation of R function 'which'. It passes through the data only once, but uses more memory. It is since R 3.3.0. For the case of recycling, two passes are done, first to get number of elements in the result.

Also since R 3.3.0, function 'makeSubscript' in subscript.c doesn't call 'duplicate' on logical index vector.

A side note: I guess that it is safe not to call 'duplicate' on logical index vector, even if it is the one being modified in subassignment, because it is converted to positive indices before use in extraction or replacement. If so, isn't it true for character index vector as well?

Here are examples of subsetting a numeric vector of length 10^8 with logical index vector, inspired by Hong Ooi's answer in https://stackoverflow.com/questions/17510778/why-is-subsetting-on-a-logical-type-slower-than-subsetting-on-numeric-type . I presents two extreme cases, each with no-recycling and recycling versions that convert to the same positive indices. Difference between the two versions can be attributed to function 'logicalSubscript'.

Example 1: select none
x <- numeric(1e8)
i <- rep(FALSE, length(x))# no reycling
system.time(x[i])
system.time(x[i])
i <- FALSE# recycling
system.time(x[i])
system.time(x[i])

Output:
?? user? system elapsed 
? 0.083?? 0.000?? 0.083 
?? user? system elapsed 
? 0.085?? 0.000?? 0.085 
?? user? system elapsed 
? 0.144?? 0.000?? 0.144 
?? user? system elapsed 
? 0.143?? 0.000?? 0.144 

Example 2: select all
x <- numeric(1e8)
i <- rep(TRUE, length(x))# no reycling
system.time(x[i])
system.time(x[i])
i <- TRUE# recycling
system.time(x[i])
system.time(x[i])

Output:
?? user? system elapsed 
? 0.538?? 0.741?? 1.292 
?? user? system elapsed 
? 0.506?? 0.668?? 1.175 
?? user? system elapsed 
? 0.448?? 0.534?? 0.986 
?? user? system elapsed 
? 0.431?? 0.528?? 0.960 

The results were from R 3.3.2 on http://rextester.com/l/r_online_compiler . The no-recycling version took longer time than the recycling version for example 2, where more time was taken in both versions.

Function 'logicalSubscript' in subscript.c in R 3.2.x also use a faster code for the case of no recycling, but does two passes in all cases. Treatment for the case of recycling is identical with current code.

Function 'logicalSubscript' in subscript.c affects subsetting with negative indices, because negative indices are converted first to a logical index vector with the same length as the vector (no recycling).

Example, comparing times of x[-1] and its equivalent, x[2:length(x)] :
x <- numeric(1e8)
system.time(x[-1])
system.time(x[-1])
system.time(x[2:length(x)])
system.time(x[2:length(x)])

Output from R 3.3.2 on http://rextester.com/l/r_online_compiler :
?? user? system elapsed 
? 0.591?? 0.903?? 1.515 
?? user? system elapsed 
? 0.558?? 0.822?? 1.384 
?? user? system elapsed 
? 0.620?? 0.659?? 1.285 
?? user? system elapsed 
? 0.607?? 0.663?? 1.274 

Output from R 3.2.2 in Zenppelin Notebook, https://my.datascientistworkbench.com/tools/zeppelin-notebook/ :
user? system elapsed 
? 1.156?? 1.636?? 2.794 
?? user? system elapsed 
? 0.884?? 1.528?? 2.413 
?? user? system elapsed 
? 0.932?? 1.544?? 2.476 
?? user? system elapsed 
? 0.932?? 1.584?? 2.519

>From above, apparently, x[-1] consistently took longer time than x[2:length(x)] with R 3.3.2, but not with R 3.2.2.

So, how about reverting to R 3.2.x code of function 'logicalSubscript' in subscript.c?


From lukas.stadler at oracle.com  Mon Oct  2 14:22:49 2017
From: lukas.stadler at oracle.com (Lukas Stadler)
Date: Mon, 2 Oct 2017 14:22:49 +0200
Subject: [Rd] calling R API functions after engine shutdown
In-Reply-To: <c642f7e8-58c3-212f-1a7f-ebc031d65108@gmail.com>
References: <D76B3D36-9D77-4B93-8988-BCB21D927046@oracle.com>
 <c642f7e8-58c3-212f-1a7f-ebc031d65108@gmail.com>
Message-ID: <245EF343-C577-4902-9F95-1B0B0D04221E@oracle.com>

If this is not considered to be safe, then I guess my message can be seen as a heads-up:
If R_ReleaseObject ever does something that is not safe after the R engine has shut down, you will start to see crashes from packages like ?minqa?.
In FastR, we ended up adding a global flag that disables parts of the native API because of this.

- Lukas

> On 21 Sep 2017, at 17:53, Tomas Kalibera <tomas.kalibera at gmail.com> wrote:
> 
> 
> Calling R_ReleaseObject in a C++ destructor is not reliable - it can be bypassed by a non-local return, such as an error. Generally in R one cannot use C++ destructors reliably for anything that the R runtime wouldn't do on its own in case of a non-local return.
> 
> A destructor that calls just UNPROTECT, in a way that balances out the protection stack (e.g. Rcpp Shield), is safe because R runtime balances the protection stack on non-local return. Destructors used in code that will never call into any R API (such as in a third party library) are safe, because the R runtime could not do non-local return. All other destructors are a problem.
> 
> UNPROTECT will work even during R shutdown.
> 
> In some cases cleanup code that would be put in C++ destructors, if they were safe with R, can instead be put into R finalizers.
> 
> Tomas
> 
> 
> 
> On 09/21/2017 04:41 PM, Lukas Stadler wrote:
>> Hi!
>> 
>> We?ve recently come across an example where a package (minqa) creates an Rcpp Function object in a static variable.
>> This causes R_ReleaseObject to be called by the destructor at a very late point in time - as part of the system exit function:
>> 
>> static Function cf("c");
>> 
>> I?m wondering if that is considered to be ?safe??
>> Is the R engine supposed to stay in a state where calls to API functions are valid, even after it has shut down?
>> It probably only ever happens with the ReleaseObject function, but even that could cause problems, e.g., with more elaborate refcounting schemes.
>> 
>> - Lukas
>> ______________________________________________
>> R-devel at r-project.org mailing list
>> https://urldefense.proofpoint.com/v2/url?u=https-3A__stat.ethz.ch_mailman_listinfo_r-2Ddevel&d=DwIDaQ&c=RoP1YumCXCgaWHvlZYR8PQcxBKCX5YTpkKY057SbK10&r=6DzVcyWX6yyD2r4eAolUQDWVUN_xc9UW6UdTto2_bao&m=YltTQ4tUmVFt23AnHzDGTPVCXmlUiOq1ayKJzhavePU&s=qibOCsqERij4Ymssp_hIfB78JDOA8v0jSYJ7ZTnCNO4&e= 
> 
> 


From radford at cs.toronto.edu  Tue Oct  3 02:00:25 2017
From: radford at cs.toronto.edu (Radford Neal)
Date: Mon, 2 Oct 2017 20:00:25 -0400
Subject: [Rd] Revert to R 3.2.x code of logicalSubscript in subscript.c?
In-Reply-To: <mailman.7.1506938402.2421.r-devel@r-project.org>
References: <mailman.7.1506938402.2421.r-devel@r-project.org>
Message-ID: <20171003000025.GA31333@mail.cs.toronto.edu>

Suharto,

If you're interested in performance with subscripting, you might want
to look at pqR (pqR-project.org).  It has some substantial performance
improvements for subscripting over R Core versions.  This is
especially true for the current development version of pqR (probably
leading to a new release in about a month).

You can look at a somewhat-stable snapshot of recent pqR development at

  https://github.com/radfordneal/pqR/tree/05e32fa6

In particular, src/main/subscript.c might be of interest.

Note that you should read mods-dir/README if you want to build this,
and in particular, you need to run create-configure in the top-level
source directory first.

I modified your tests a bit, including producing versions using both
vectors of length 1e8 like you did (which will not fit in cache) and
vectors of length 1e5 (which will fit in at least the L3 cache).  I
ran tests on an Intel Skylake processor (E3-1270v5 @ 3.6GHz), using
gcc 7.2 with -O3 -march=native -mtune=native.

I got the following results with R-3.4.2 (with R_ENABLE_JIT=0, which
is slightly faster than using the JIT compiler):

R-3.4.2, LARGE VECTORS: 

  > N <- 1e8; R <- 5
  > #N <- 1e5; R <- 1000
  > 
  > x <- numeric(N)
  > i <- rep(FALSE, length(x))# no reycling
  > system.time(for (r in 1:R) a <- x[i])
     user  system elapsed 
    0.296   0.000   0.297 
  > i <- FALSE# recycling
  > system.time(for (r in 1:R) a <- x[i])
     user  system elapsed 
    0.416   0.000   0.418 
  > 
  > x <- numeric(N)
  > i <- rep(TRUE, length(x))# no reycling
  > system.time(for (r in 1:R) a <- x[i])
     user  system elapsed 
    1.416   0.352   1.773 
  > i <- TRUE# recycling
  > system.time(for (r in 1:R) a <- x[i])
     user  system elapsed 
    1.348   0.264   1.613 
  > 
  > x <- numeric(N)
  > system.time(for (r in 1:R) a <- x[-1])
     user  system elapsed 
    1.516   0.376   1.895 
  > system.time(for (r in 1:R) a <- x[2:length(x)])
     user  system elapsed 
    1.516   0.308   1.827 
  > 
  > v <- 2:length(x)
  > system.time(for (r in 1:R) a <- x[v])
     user  system elapsed 
    1.416   0.268   1.689 

R-3.4.2, SMALL VECTORS: 

  > #N <- 1e8; R <- 5
  > N <- 1e5; R <- 1000
  > 
  > x <- numeric(N)
  > i <- rep(FALSE, length(x))# no reycling
  > system.time(for (r in 1:R) a <- x[i])
     user  system elapsed 
    0.088   0.000   0.089 
  > i <- FALSE# recycling
  > system.time(for (r in 1:R) a <- x[i])
     user  system elapsed 
    0.084   0.000   0.084 
  > 
  > x <- numeric(N)
  > i <- rep(TRUE, length(x))# no reycling
  > system.time(for (r in 1:R) a <- x[i])
     user  system elapsed 
    0.492   0.020   0.515 
  > i <- TRUE# recycling
  > system.time(for (r in 1:R) a <- x[i])
     user  system elapsed 
    0.408   0.008   0.420 
  > 
  > x <- numeric(N)
  > system.time(for (r in 1:R) a <- x[-1])
     user  system elapsed 
    0.508   0.004   0.516 
  > system.time(for (r in 1:R) a <- x[2:length(x)])
     user  system elapsed 
    0.464   0.008   0.473 
  > 
  > v <- 2:length(x)
  > system.time(for (r in 1:R) a <- x[v])
     user  system elapsed 
    0.428   0.000   0.428 

Here are the results with the development version of pqR (uncompressed
pointers, no byte compilation):

pqR (devel), LARGE VECTORS:

  > N <- 1e8; R <- 5
  > #N <- 1e5; R <- 1000
  > 
  > x <- numeric(N)
  > i <- rep(FALSE, length(x))# no reycling
  > system.time(for (r in 1:R) a <- x[i])
     user  system elapsed 
    0.192   0.000   0.193 
  > i <- FALSE# recycling
  > system.time(for (r in 1:R) a <- x[i])
     user  system elapsed 
    0.436   0.000   0.434 
  > 
  > x <- numeric(N)
  > i <- rep(TRUE, length(x))# no reycling
  > system.time(for (r in 1:R) a <- x[i])
     user  system elapsed 
    0.768   0.216   0.988 
  > i <- TRUE# recycling
  > system.time(for (r in 1:R) a <- x[i])
     user  system elapsed 
    0.832   0.272   1.105 
  > 
  > x <- numeric(N)
  > system.time(for (r in 1:R) a <- x[-1])
     user  system elapsed 
    0.280   0.156   0.435 
  > system.time(for (r in 1:R) a <- x[2:length(x)])
     user  system elapsed 
    0.252   0.184   0.436 
  > 
  > v <- 2:length(x)
  > system.time(for (r in 1:R) a <- x[v])
     user  system elapsed 
    0.828   0.168   0.998 

pqR (devel), SMALL VECTORS:

  > #N <- 1e8; R <- 5
  > N <- 1e5; R <- 1000
  > 
  > x <- numeric(N)
  > i <- rep(FALSE, length(x))# no reycling
  > system.time(for (r in 1:R) a <- x[i])
     user  system elapsed 
    0.040   0.000   0.038 
  > i <- FALSE# recycling
  > system.time(for (r in 1:R) a <- x[i])
     user  system elapsed 
    0.084   0.000   0.087 
  > 
  > x <- numeric(N)
  > i <- rep(TRUE, length(x))# no reycling
  > system.time(for (r in 1:R) a <- x[i])
     user  system elapsed 
    0.156   0.036   0.192 
  > i <- TRUE# recycling
  > system.time(for (r in 1:R) a <- x[i])
     user  system elapsed 
    0.184   0.012   0.195 
  > 
  > x <- numeric(N)
  > system.time(for (r in 1:R) a <- x[-1])
     user  system elapsed 
    0.060   0.012   0.075 
  > system.time(for (r in 1:R) a <- x[2:length(x)])
     user  system elapsed 
    0.052   0.024   0.075 
  > 
  > v <- 2:length(x)
  > system.time(for (r in 1:R) a <- x[v])
     user  system elapsed 
    0.180   0.004   0.182 

Summarizing elapsed times:

  LARGE VECTORS   T1     T2     T3     T4     T5     T6     T7   

  R-3.4.2:      0.297  0.418  1.773  1.613  1.895  1.827  1.689
  pqR dev:      0.193  0.434  0.988  1.105  0.435  0.436  0.998

  SMALL VECTORS   T1     T2     T3     T4     T5     T6     T7   

  R-3.4.2:      0.089  0.084  0.515  0.420  0.516  0.473  0.428
  pqR dev:      0.038  0.087  0.192  0.195  0.075  0.075  0.182

As one can see, pqR is substantially faster for all except T2 (where
it's about the same).  The very large advantage of pqR on T5 and T6 is
partly because pqR has special code for efficiently handling things
like x[-1] and x[2:length(x)], so I added the x[v] test to see what
performance is like when this special handling isn't invoked.

There's no particular reason pqR's code for these operations couldn't
be adapted for use in the R Core implementaton, though there are
probably a few issues involving large vectors, and the special
handling of x[2:length(x)] would require implementing pqR's internal
"variant result" mechanism.  pqR also has much faster code for some
other subset and subset assignment operations.

   Radford Neal


From kasperdanielhansen at gmail.com  Tue Oct  3 14:59:11 2017
From: kasperdanielhansen at gmail.com (Kasper Daniel Hansen)
Date: Tue, 3 Oct 2017 08:59:11 -0400
Subject: [Rd] R CMD Rd2pdf and macros
Message-ID: <CAC2h7ut5otC6KS8tMmjdetm9D+VbpOY+7HaKMxrwsSFO_LoDiw@mail.gmail.com>

When I run R CMD Rd2pdf on the man pages of a package, ie
  R CMD Rd2pdf man

I get

Converting Rd files to LaTeX Warning in parse_Rd("man/mpra-package.Rd",
encoding = "unknown", fragment = FALSE,  :
  man/mpra-package.Rd:6: unknown macro '\packageTitle'
Warning in parse_Rd("man/mpra-package.Rd", encoding = "unknown", fragment =
FALSE,  :
  man/mpra-package.Rd:9: unknown macro '\packageDescription'
Warning in parse_Rd("man/mpra-package.Rd", encoding = "unknown", fragment =
FALSE,  :
  man/mpra-package.Rd:15: unknown macro '\packageAuthor'
Warning in parse_Rd("man/mpra-package.Rd", encoding = "unknown", fragment =
FALSE,  :
  man/mpra-package.Rd:17: unknown macro '\packageMaintainer'
Warning in parse_Rd("man/mpra-package.Rd", encoding = "unknown", fragment =
FALSE,  :
  man/mpra-package.Rd:24: unknown macro '\doi'

It would appear that installed, system level macros are not read and used?

Best,
Kasper

	[[alternative HTML version deleted]]


From Kurt.Hornik at wu.ac.at  Wed Oct  4 09:56:06 2017
From: Kurt.Hornik at wu.ac.at (Kurt Hornik)
Date: Wed, 4 Oct 2017 09:56:06 +0200
Subject: [Rd] R CMD Rd2pdf and macros
In-Reply-To: <CAC2h7ut5otC6KS8tMmjdetm9D+VbpOY+7HaKMxrwsSFO_LoDiw@mail.gmail.com>
References: <CAC2h7ut5otC6KS8tMmjdetm9D+VbpOY+7HaKMxrwsSFO_LoDiw@mail.gmail.com>
Message-ID: <22996.37910.840727.672617@hornik.net>

>>>>> Kasper Daniel Hansen writes:

Interesting.  When I take e.g. zTree as the last CRAN package using the
\packageTitle macro,

   R CMD Rd2pdf zTree

seems to work fine, but

   R CMD Rd2pdf zTree/man

gives

Converting Rd files to LaTeX Warning in parse_Rd("zTree/man/zTree-package.Rd", encoding = "unknown",  :
  zTree/man/zTree-package.Rd:6: unknown macro '\packageTitle'
Warning in parse_Rd("zTree/man/zTree-package.Rd", encoding = "unknown",  :
  zTree/man/zTree-package.Rd:9: unknown macro '\packageDescription'
Warning in parse_Rd("zTree/man/zTree-package.Rd", encoding = "unknown",  :
  zTree/man/zTree-package.Rd:13: unknown macro '\packageDESCRIPTION'
Warning in parse_Rd("zTree/man/zTree-package.Rd", encoding = "unknown",  :
  zTree/man/zTree-package.Rd:14: unknown macro '\packageIndices'
Warning in parse_Rd("zTree/man/zTree-package.Rd", encoding = "unknown",  :
  zTree/man/zTree-package.Rd:17: unknown macro '\packageAuthor'
Warning in parse_Rd("zTree/man/zTree-package.Rd", encoding = "unknown",  :
  zTree/man/zTree-package.Rd:18: unknown macro '\packageMaintainer'

Same in your case?

Best
-k


> When I run R CMD Rd2pdf on the man pages of a package, ie
>   R CMD Rd2pdf man

> I get

> Converting Rd files to LaTeX Warning in parse_Rd("man/mpra-package.Rd",
> encoding = "unknown", fragment = FALSE,  :
>   man/mpra-package.Rd:6: unknown macro '\packageTitle'
> Warning in parse_Rd("man/mpra-package.Rd", encoding = "unknown", fragment =
> FALSE,  :
>   man/mpra-package.Rd:9: unknown macro '\packageDescription'
> Warning in parse_Rd("man/mpra-package.Rd", encoding = "unknown", fragment =
> FALSE,  :
>   man/mpra-package.Rd:15: unknown macro '\packageAuthor'
> Warning in parse_Rd("man/mpra-package.Rd", encoding = "unknown", fragment =
> FALSE,  :
>   man/mpra-package.Rd:17: unknown macro '\packageMaintainer'
> Warning in parse_Rd("man/mpra-package.Rd", encoding = "unknown", fragment =
> FALSE,  :
>   man/mpra-package.Rd:24: unknown macro '\doi'

> It would appear that installed, system level macros are not read and used?

> Best,
> Kasper

> 	[[alternative HTML version deleted]]

> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From kasperdanielhansen at gmail.com  Wed Oct  4 16:12:56 2017
From: kasperdanielhansen at gmail.com (Kasper Daniel Hansen)
Date: Wed, 4 Oct 2017 10:12:56 -0400
Subject: [Rd] R CMD Rd2pdf and macros
In-Reply-To: <22996.37910.840727.672617@hornik.net>
References: <CAC2h7ut5otC6KS8tMmjdetm9D+VbpOY+7HaKMxrwsSFO_LoDiw@mail.gmail.com>
 <22996.37910.840727.672617@hornik.net>
Message-ID: <CAC2h7usY_ofXKrrHFKJqmFhDTs4R4YixcQy=wkK-zUrHJUjPwA@mail.gmail.com>

No, I do not get the same as you.

I have tested with R-devel and R-patched compiled today.  When I do

R CMD Rd2pdf mpra

I get (as reported a few days ago)
  Hmm ... looks like a package
  Converting Rd files to LaTeX Error : mpra/man/mpra-package.Rd:6: file
'./DESCRIPTION' does not exist
whereas you (Kurt) reports that this works on zTree.

When I do
R CMD Rd2pdf mpra/man

I get
  - a pdf produced
  - warnings about missing macros

This is for a package with a
  PKGNAME-package.Rd
man page containing \packageDescription, \packageAuthor, \packageTitle,
\packageMaintainer, \doi

R-versions:

R version 3.4.2 Patched (2017-10-04 r73462) -- "Short Summer"
Copyright (C) 2017 The R Foundation for Statistical Computing
Platform: x86_64-apple-darwin16.7.0 (64-bit)

R Under development (unstable) (2017-10-04 r73461) -- "Unsuffered
Consequences"
Copyright (C) 2017 The R Foundation for Statistical Computing
Platform: x86_64-apple-darwin16.7.0 (64-bit)


On Wed, Oct 4, 2017 at 3:56 AM, Kurt Hornik <Kurt.Hornik at wu.ac.at> wrote:

> >>>>> Kasper Daniel Hansen writes:
>
> Interesting.  When I take e.g. zTree as the last CRAN package using the
> \packageTitle macro,
>
>    R CMD Rd2pdf zTree
>
> seems to work fine, but
>
>    R CMD Rd2pdf zTree/man
>
> gives
>
> Converting Rd files to LaTeX Warning in parse_Rd("zTree/man/zTree-package.Rd",
> encoding = "unknown",  :
>   zTree/man/zTree-package.Rd:6: unknown macro '\packageTitle'
> Warning in parse_Rd("zTree/man/zTree-package.Rd", encoding = "unknown",  :
>   zTree/man/zTree-package.Rd:9: unknown macro '\packageDescription'
> Warning in parse_Rd("zTree/man/zTree-package.Rd", encoding = "unknown",  :
>   zTree/man/zTree-package.Rd:13: unknown macro '\packageDESCRIPTION'
> Warning in parse_Rd("zTree/man/zTree-package.Rd", encoding = "unknown",  :
>   zTree/man/zTree-package.Rd:14: unknown macro '\packageIndices'
> Warning in parse_Rd("zTree/man/zTree-package.Rd", encoding = "unknown",  :
>   zTree/man/zTree-package.Rd:17: unknown macro '\packageAuthor'
> Warning in parse_Rd("zTree/man/zTree-package.Rd", encoding = "unknown",  :
>   zTree/man/zTree-package.Rd:18: unknown macro '\packageMaintainer'
>
> Same in your case?
>
> Best
> -k
>
>
> > When I run R CMD Rd2pdf on the man pages of a package, ie
> >   R CMD Rd2pdf man
>
> > I get
>
> > Converting Rd files to LaTeX Warning in parse_Rd("man/mpra-package.Rd",
> > encoding = "unknown", fragment = FALSE,  :
> >   man/mpra-package.Rd:6: unknown macro '\packageTitle'
> > Warning in parse_Rd("man/mpra-package.Rd", encoding = "unknown",
> fragment =
> > FALSE,  :
> >   man/mpra-package.Rd:9: unknown macro '\packageDescription'
> > Warning in parse_Rd("man/mpra-package.Rd", encoding = "unknown",
> fragment =
> > FALSE,  :
> >   man/mpra-package.Rd:15: unknown macro '\packageAuthor'
> > Warning in parse_Rd("man/mpra-package.Rd", encoding = "unknown",
> fragment =
> > FALSE,  :
> >   man/mpra-package.Rd:17: unknown macro '\packageMaintainer'
> > Warning in parse_Rd("man/mpra-package.Rd", encoding = "unknown",
> fragment =
> > FALSE,  :
> >   man/mpra-package.Rd:24: unknown macro '\doi'
>
> > It would appear that installed, system level macros are not read and
> used?
>
> > Best,
> > Kasper
>
> >       [[alternative HTML version deleted]]
>
> > ______________________________________________
> > R-devel at r-project.org mailing list
> > https://stat.ethz.ch/mailman/listinfo/r-devel
>

	[[alternative HTML version deleted]]


From friendly at yorku.ca  Wed Oct  4 17:57:32 2017
From: friendly at yorku.ca (Michael Friendly)
Date: Wed, 4 Oct 2017 11:57:32 -0400
Subject: [Rd] packages: Examples with CPU or elapsed time > 10s
Message-ID: <65f35737-e79d-3d65-ed72-a0ac624fc6a0@yorku.ca>

I am perplexed about NOTEs I get from Win Builder on my genridge 
package, https://github.com/friendly/genridge.

It shows, e.g.,

Examples with CPU or elapsed time > 10s
              user system elapsed
plot3d.ridge 12.4   0.05   12.45

However, if I run *exactly the same code* in my console with 
system.time(), I get

user system elapsed
0.95 0.16 1.17

What could be the explanation for this?

Second, the .log file from Win Builder shows only the *first example* 
with > 10s time.
I have been able to reduce the time by wrapping part of the example in 
\donttest{}.
I run Win Builder again, and the NOTE appears for another file. Very 
annoying.

It would be far more helpful to see these all together, rather than 
having to do this incrementally.
-Michael

-- Michael Friendly Email: friendly AT yorku DOT ca Professor, 
Psychology Dept. & Chair, Quantitative Methods York University Voice: 
416 736-2100 x66249 Fax: 416 736-5814 4700 Keele Street 
Web:http://www.datavis.ca Toronto, ONT M3J 1P3 CANADA

	[[alternative HTML version deleted]]


From henrik.bengtsson at gmail.com  Thu Oct  5 06:11:20 2017
From: henrik.bengtsson at gmail.com (Henrik Bengtsson)
Date: Wed, 4 Oct 2017 21:11:20 -0700
Subject: [Rd] socketSelect(..., timeout): non-integer timeouts in (0,
 2) (?) equal infinite timeout on Linux - weird
In-Reply-To: <CAFDcVCSfd_nx8vKLLn5oNz+JXgyn9TMEFVMxjCd2X=x2UcO+VA@mail.gmail.com>
References: <CAFDcVCSfd_nx8vKLLn5oNz+JXgyn9TMEFVMxjCd2X=x2UcO+VA@mail.gmail.com>
Message-ID: <CAFDcVCQC_nhyx8CtEbraSbJA+iyBGx1Fc=rFAFnBTj1BWRcd1Q@mail.gmail.com>

I'd like to follow up/bump the attention to this bug causing the
timeout to fail for socketSelect() on Unix.  It is still there in R
3.4.2 and R-devel.  I've identified the bug in the R source code - the
bug is due to floating-point precisions and comparison using >=.  See
PR17203 (https://bugs.r-project.org/bugzilla3/show_bug.cgi?id=17203)
for details and a patch.  I've just reverified that the patch still
solves the problem on trunk (SVN r73463).

Thanks,

/Henrik

On Sat, Oct 1, 2016 at 1:11 PM, Henrik Bengtsson
<henrik.bengtsson at gmail.com> wrote:
> There's something weird going on for certain non-integer values of
> argument 'timeout' to base::socketSelect().  For such values, there is
> no timeout and you effectively end up with an infinite timeout.   I
> can reproduce this on R 3.3.1 on Ubuntu 16.04 and RedHat 6.6, but not
> on Windows (via Linux Wine).
>
> # 1. In R master session
>> con <- socketConnection('localhost', port = 11001, server = TRUE, blocking = TRUE, open = 'a+b')
>
> # 2. In R servant session (connect to the above master socket)
>> con <- socketConnection('localhost', port = 11001, server = FALSE, blocking = TRUE, open = 'a+b')
>
> # 3. In R master session (check if there's something available on connection)
> # Wait at most 0 seconds
>> t <- system.time(r <- socketSelect(list(con), write = FALSE, timeout = 0)); print(t); print(r)
>    user  system elapsed
>       0       0       0
> [1] FALSE
>
> # Wait at most 1 seconds
>> t <- system.time(r <- socketSelect(list(con), write = FALSE, timeout = 1)); print(t); print(r)
>    user  system elapsed
>   0.000   0.000   1.002
> [1] FALSE
>
> # Wait at most 2 seconds
>> t <- system.time(r <- socketSelect(list(con), write = FALSE, timeout = 2)); print(t); print(r)
>    user  system elapsed
>   0.000   0.000   2.002
> [1] FALSE
>
> # Wait at most 2.5 seconds
>> t <- system.time(r <- socketSelect(list(con), write = FALSE, timeout = 2.5)); print(t); print(r)
>    user  system elapsed
>   0.000   0.000   2.502
> [1] FALSE
>
> # Wait at most 2.1 seconds
>> t <- system.time(r <- socketSelect(list(con), write = FALSE, timeout = 2.1)); print(t); print(r)
>    user  system elapsed
>   0.000   0.000   2.101
> [1] FALSE
>
> However, here are some weird cases where the value of the 'timeout'
> argument is ignored:
>
> # Wait at most 1.9 seconds
>> t <- system.time(r <- socketSelect(list(con), write = FALSE, timeout = 1.9)); print(t); print(r)
> ^C   user  system elapsed
>   3.780  14.888  20.594
>
>> t <- system.time(r <- socketSelect(list(con), write = FALSE, timeout = 0.1)); print(t); print(r)
> ^C   user  system elapsed
>   2.596  11.208  13.907
> [1] FALSE
>
> Note how I had to signal a user interrupt (Ctrl-C) to exit
> socketSelect().  Also, not that it still works with the timeout values
> chosen above, e.g.
>
>> t <- system.time(r <- socketSelect(list(con), write = FALSE, timeout = 0)); print(t); print(r)
>    user  system elapsed
>       0       0       0
> [1] FALSE
>> t <- system.time(r <- socketSelect(list(con), write = FALSE, timeout = 1)); print(t); print(r)
>    user  system elapsed
>   0.000   0.000   1.001
> [1] FALSE
>
>> t <- system.time(r <- socketSelect(list(con), write = FALSE, timeout = 2.1)); print(t); print(r)
>    user  system elapsed
>   0.000   0.000   2.103
> [1] FALSE
>
> It's almost as if there is something special with non-integer values
> in (0,2).  Not saying these are the only cases, but that's what I've
> observed by trial and error.  Weird.  The fact that it works on
> Windows, may suggest it is a Unix specific.  Anyway with macOS that
> wanna confirm?
>
> /Henrik
>
> Session information details:
>
> # Ubuntu 16.04
>> sessionInfo()
> R version 3.3.1 (2016-06-21)
> Platform: x86_64-pc-linux-gnu (64-bit)
> Running under: Ubuntu 16.04.1 LTS
>
> locale:
>  [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C
>  [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8
>  [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8
>  [7] LC_PAPER=en_US.UTF-8       LC_NAME=C
>  [9] LC_ADDRESS=C               LC_TELEPHONE=C
> [11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C
>
> attached base packages:
> [1] stats     graphics  grDevices utils     datasets  methods   base
>
> loaded via a namespace (and not attached):
> [1] tools_3.3.1
>
> # RedHat 6.6:
>> sessionInfo()
> R version 3.3.1 (2016-06-21)
> Platform: x86_64-pc-linux-gnu (64-bit)
>
> locale:
> [1] C
>
> attached base packages:
> [1] stats     graphics  grDevices utils     datasets  methods   base
>
> loaded via a namespace (and not attached):
> [1] tools_3.3.1
>
> # Windows via Wine on Linux
>> sessionInfo()
> R version 3.3.1 (2016-06-21)
> Platform: x86_64-w64-mingw32/x64 (64-bit)
> Running under: Windows XP x64 (build 2600) Service Pack 3
>
> locale:
> [1] LC_COLLATE=English_United States.1252 LC_CTYPE=English_United States.1252
> [3] LC_MONETARY=C                         LC_NUMERIC=C
> [5] LC_TIME=C
>
> attached base packages:
> [1] stats     graphics  grDevices utils     datasets  methods   base
>
> loaded via a namespace (and not attached):
> [1] tools_3.3.1


From tomas.kalibera at gmail.com  Thu Oct  5 15:13:36 2017
From: tomas.kalibera at gmail.com (Tomas Kalibera)
Date: Thu, 5 Oct 2017 15:13:36 +0200
Subject: [Rd] socketSelect(..., timeout): non-integer timeouts in (0,
 2) (?) equal infinite timeout on Linux - weird
In-Reply-To: <CAFDcVCQC_nhyx8CtEbraSbJA+iyBGx1Fc=rFAFnBTj1BWRcd1Q@mail.gmail.com>
References: <CAFDcVCSfd_nx8vKLLn5oNz+JXgyn9TMEFVMxjCd2X=x2UcO+VA@mail.gmail.com>
 <CAFDcVCQC_nhyx8CtEbraSbJA+iyBGx1Fc=rFAFnBTj1BWRcd1Q@mail.gmail.com>
Message-ID: <5bcd339d-408b-744c-40eb-bc0035556913@gmail.com>

Fixed in 73470

Best,
Tomas

On 10/05/2017 06:11 AM, Henrik Bengtsson wrote:
> I'd like to follow up/bump the attention to this bug causing the
> timeout to fail for socketSelect() on Unix.  It is still there in R
> 3.4.2 and R-devel.  I've identified the bug in the R source code - the
> bug is due to floating-point precisions and comparison using >=.  See
> PR17203 (https://bugs.r-project.org/bugzilla3/show_bug.cgi?id=17203)
> for details and a patch.  I've just reverified that the patch still
> solves the problem on trunk (SVN r73463).
>
> Thanks,
>
> /Henrik
>
> On Sat, Oct 1, 2016 at 1:11 PM, Henrik Bengtsson
> <henrik.bengtsson at gmail.com> wrote:
>> There's something weird going on for certain non-integer values of
>> argument 'timeout' to base::socketSelect().  For such values, there is
>> no timeout and you effectively end up with an infinite timeout.   I
>> can reproduce this on R 3.3.1 on Ubuntu 16.04 and RedHat 6.6, but not
>> on Windows (via Linux Wine).
>>
>> # 1. In R master session
>>> con <- socketConnection('localhost', port = 11001, server = TRUE, blocking = TRUE, open = 'a+b')
>> # 2. In R servant session (connect to the above master socket)
>>> con <- socketConnection('localhost', port = 11001, server = FALSE, blocking = TRUE, open = 'a+b')
>> # 3. In R master session (check if there's something available on connection)
>> # Wait at most 0 seconds
>>> t <- system.time(r <- socketSelect(list(con), write = FALSE, timeout = 0)); print(t); print(r)
>>     user  system elapsed
>>        0       0       0
>> [1] FALSE
>>
>> # Wait at most 1 seconds
>>> t <- system.time(r <- socketSelect(list(con), write = FALSE, timeout = 1)); print(t); print(r)
>>     user  system elapsed
>>    0.000   0.000   1.002
>> [1] FALSE
>>
>> # Wait at most 2 seconds
>>> t <- system.time(r <- socketSelect(list(con), write = FALSE, timeout = 2)); print(t); print(r)
>>     user  system elapsed
>>    0.000   0.000   2.002
>> [1] FALSE
>>
>> # Wait at most 2.5 seconds
>>> t <- system.time(r <- socketSelect(list(con), write = FALSE, timeout = 2.5)); print(t); print(r)
>>     user  system elapsed
>>    0.000   0.000   2.502
>> [1] FALSE
>>
>> # Wait at most 2.1 seconds
>>> t <- system.time(r <- socketSelect(list(con), write = FALSE, timeout = 2.1)); print(t); print(r)
>>     user  system elapsed
>>    0.000   0.000   2.101
>> [1] FALSE
>>
>> However, here are some weird cases where the value of the 'timeout'
>> argument is ignored:
>>
>> # Wait at most 1.9 seconds
>>> t <- system.time(r <- socketSelect(list(con), write = FALSE, timeout = 1.9)); print(t); print(r)
>> ^C   user  system elapsed
>>    3.780  14.888  20.594
>>
>>> t <- system.time(r <- socketSelect(list(con), write = FALSE, timeout = 0.1)); print(t); print(r)
>> ^C   user  system elapsed
>>    2.596  11.208  13.907
>> [1] FALSE
>>
>> Note how I had to signal a user interrupt (Ctrl-C) to exit
>> socketSelect().  Also, not that it still works with the timeout values
>> chosen above, e.g.
>>
>>> t <- system.time(r <- socketSelect(list(con), write = FALSE, timeout = 0)); print(t); print(r)
>>     user  system elapsed
>>        0       0       0
>> [1] FALSE
>>> t <- system.time(r <- socketSelect(list(con), write = FALSE, timeout = 1)); print(t); print(r)
>>     user  system elapsed
>>    0.000   0.000   1.001
>> [1] FALSE
>>
>>> t <- system.time(r <- socketSelect(list(con), write = FALSE, timeout = 2.1)); print(t); print(r)
>>     user  system elapsed
>>    0.000   0.000   2.103
>> [1] FALSE
>>
>> It's almost as if there is something special with non-integer values
>> in (0,2).  Not saying these are the only cases, but that's what I've
>> observed by trial and error.  Weird.  The fact that it works on
>> Windows, may suggest it is a Unix specific.  Anyway with macOS that
>> wanna confirm?
>>
>> /Henrik
>>
>> Session information details:
>>
>> # Ubuntu 16.04
>>> sessionInfo()
>> R version 3.3.1 (2016-06-21)
>> Platform: x86_64-pc-linux-gnu (64-bit)
>> Running under: Ubuntu 16.04.1 LTS
>>
>> locale:
>>   [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C
>>   [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8
>>   [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8
>>   [7] LC_PAPER=en_US.UTF-8       LC_NAME=C
>>   [9] LC_ADDRESS=C               LC_TELEPHONE=C
>> [11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C
>>
>> attached base packages:
>> [1] stats     graphics  grDevices utils     datasets  methods   base
>>
>> loaded via a namespace (and not attached):
>> [1] tools_3.3.1
>>
>> # RedHat 6.6:
>>> sessionInfo()
>> R version 3.3.1 (2016-06-21)
>> Platform: x86_64-pc-linux-gnu (64-bit)
>>
>> locale:
>> [1] C
>>
>> attached base packages:
>> [1] stats     graphics  grDevices utils     datasets  methods   base
>>
>> loaded via a namespace (and not attached):
>> [1] tools_3.3.1
>>
>> # Windows via Wine on Linux
>>> sessionInfo()
>> R version 3.3.1 (2016-06-21)
>> Platform: x86_64-w64-mingw32/x64 (64-bit)
>> Running under: Windows XP x64 (build 2600) Service Pack 3
>>
>> locale:
>> [1] LC_COLLATE=English_United States.1252 LC_CTYPE=English_United States.1252
>> [3] LC_MONETARY=C                         LC_NUMERIC=C
>> [5] LC_TIME=C
>>
>> attached base packages:
>> [1] stats     graphics  grDevices utils     datasets  methods   base
>>
>> loaded via a namespace (and not attached):
>> [1] tools_3.3.1
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From kasperdanielhansen at gmail.com  Thu Oct  5 15:20:00 2017
From: kasperdanielhansen at gmail.com (Kasper Daniel Hansen)
Date: Thu, 5 Oct 2017 09:20:00 -0400
Subject: [Rd] R CMD Rd2pdf and macros
In-Reply-To: <CAC2h7usY_ofXKrrHFKJqmFhDTs4R4YixcQy=wkK-zUrHJUjPwA@mail.gmail.com>
References: <CAC2h7ut5otC6KS8tMmjdetm9D+VbpOY+7HaKMxrwsSFO_LoDiw@mail.gmail.com>
 <22996.37910.840727.672617@hornik.net>
 <CAC2h7usY_ofXKrrHFKJqmFhDTs4R4YixcQy=wkK-zUrHJUjPwA@mail.gmail.com>
Message-ID: <CAC2h7usOe6jfvYV6ZuvVThkOJP5fuXMxJMrVUNece-eDpx_YQA@mail.gmail.com>

If anyone else (besides Kurt, thanks) is following this, I want to note
that this behaviour depends on whether you run
  R CMD Rd2pdf pkgname
on the output of R CMD build, ie. if pkgname was made by untarring a source
tarball or if it is on a "pure" development directory.  The differences is
the existence (or not) of pkgname/build/partial.rdb

Best,
Kasper

On Wed, Oct 4, 2017 at 10:12 AM, Kasper Daniel Hansen <
kasperdanielhansen at gmail.com> wrote:

> No, I do not get the same as you.
>
> I have tested with R-devel and R-patched compiled today.  When I do
>
> R CMD Rd2pdf mpra
>
> I get (as reported a few days ago)
>   Hmm ... looks like a package
>   Converting Rd files to LaTeX Error : mpra/man/mpra-package.Rd:6: file
> './DESCRIPTION' does not exist
> whereas you (Kurt) reports that this works on zTree.
>
> When I do
> R CMD Rd2pdf mpra/man
>
> I get
>   - a pdf produced
>   - warnings about missing macros
>
> This is for a package with a
>   PKGNAME-package.Rd
> man page containing \packageDescription, \packageAuthor, \packageTitle,
> \packageMaintainer, \doi
>
> R-versions:
>
> R version 3.4.2 Patched (2017-10-04 r73462) -- "Short Summer"
> Copyright (C) 2017 The R Foundation for Statistical Computing
> Platform: x86_64-apple-darwin16.7.0 (64-bit)
>
> R Under development (unstable) (2017-10-04 r73461) -- "Unsuffered
> Consequences"
> Copyright (C) 2017 The R Foundation for Statistical Computing
> Platform: x86_64-apple-darwin16.7.0 (64-bit)
>
>
> On Wed, Oct 4, 2017 at 3:56 AM, Kurt Hornik <Kurt.Hornik at wu.ac.at> wrote:
>
>> >>>>> Kasper Daniel Hansen writes:
>>
>> Interesting.  When I take e.g. zTree as the last CRAN package using the
>> \packageTitle macro,
>>
>>    R CMD Rd2pdf zTree
>>
>> seems to work fine, but
>>
>>    R CMD Rd2pdf zTree/man
>>
>> gives
>>
>> Converting Rd files to LaTeX Warning in parse_Rd("zTree/man/zTree-package.Rd",
>> encoding = "unknown",  :
>>   zTree/man/zTree-package.Rd:6: unknown macro '\packageTitle'
>> Warning in parse_Rd("zTree/man/zTree-package.Rd", encoding = "unknown",
>> :
>>   zTree/man/zTree-package.Rd:9: unknown macro '\packageDescription'
>> Warning in parse_Rd("zTree/man/zTree-package.Rd", encoding = "unknown",
>> :
>>   zTree/man/zTree-package.Rd:13: unknown macro '\packageDESCRIPTION'
>> Warning in parse_Rd("zTree/man/zTree-package.Rd", encoding = "unknown",
>> :
>>   zTree/man/zTree-package.Rd:14: unknown macro '\packageIndices'
>> Warning in parse_Rd("zTree/man/zTree-package.Rd", encoding = "unknown",
>> :
>>   zTree/man/zTree-package.Rd:17: unknown macro '\packageAuthor'
>> Warning in parse_Rd("zTree/man/zTree-package.Rd", encoding = "unknown",
>> :
>>   zTree/man/zTree-package.Rd:18: unknown macro '\packageMaintainer'
>>
>> Same in your case?
>>
>> Best
>> -k
>>
>>
>> > When I run R CMD Rd2pdf on the man pages of a package, ie
>> >   R CMD Rd2pdf man
>>
>> > I get
>>
>> > Converting Rd files to LaTeX Warning in parse_Rd("man/mpra-package.Rd",
>> > encoding = "unknown", fragment = FALSE,  :
>> >   man/mpra-package.Rd:6: unknown macro '\packageTitle'
>> > Warning in parse_Rd("man/mpra-package.Rd", encoding = "unknown",
>> fragment =
>> > FALSE,  :
>> >   man/mpra-package.Rd:9: unknown macro '\packageDescription'
>> > Warning in parse_Rd("man/mpra-package.Rd", encoding = "unknown",
>> fragment =
>> > FALSE,  :
>> >   man/mpra-package.Rd:15: unknown macro '\packageAuthor'
>> > Warning in parse_Rd("man/mpra-package.Rd", encoding = "unknown",
>> fragment =
>> > FALSE,  :
>> >   man/mpra-package.Rd:17: unknown macro '\packageMaintainer'
>> > Warning in parse_Rd("man/mpra-package.Rd", encoding = "unknown",
>> fragment =
>> > FALSE,  :
>> >   man/mpra-package.Rd:24: unknown macro '\doi'
>>
>> > It would appear that installed, system level macros are not read and
>> used?
>>
>> > Best,
>> > Kasper
>>
>> >       [[alternative HTML version deleted]]
>>
>> > ______________________________________________
>> > R-devel at r-project.org mailing list
>> > https://stat.ethz.ch/mailman/listinfo/r-devel
>>
>
>

	[[alternative HTML version deleted]]


From henrik.bengtsson at gmail.com  Thu Oct  5 20:00:33 2017
From: henrik.bengtsson at gmail.com (Henrik Bengtsson)
Date: Thu, 5 Oct 2017 11:00:33 -0700
Subject: [Rd] socketSelect(..., timeout): non-integer timeouts in (0,
 2) (?) equal infinite timeout on Linux - weird
In-Reply-To: <5bcd339d-408b-744c-40eb-bc0035556913@gmail.com>
References: <CAFDcVCSfd_nx8vKLLn5oNz+JXgyn9TMEFVMxjCd2X=x2UcO+VA@mail.gmail.com>
 <CAFDcVCQC_nhyx8CtEbraSbJA+iyBGx1Fc=rFAFnBTj1BWRcd1Q@mail.gmail.com>
 <5bcd339d-408b-744c-40eb-bc0035556913@gmail.com>
Message-ID: <CAFDcVCR9nBM_SExELJ7=od8FZjLP8WDHNG_4GX7irOrjERpyOA@mail.gmail.com>

Thanks Tomas.  I can confirm that this bug is gone in / it works with:

> sessionInfo()
R Under development (unstable) (2017-10-05 r73472)
Platform: x86_64-pc-linux-gnu (64-bit)
Running under: Ubuntu 16.04.3 LTS

/Henrik


On Thu, Oct 5, 2017 at 6:13 AM, Tomas Kalibera <tomas.kalibera at gmail.com> wrote:
> Fixed in 73470
>
> Best,
> Tomas
>
>
> On 10/05/2017 06:11 AM, Henrik Bengtsson wrote:
>>
>> I'd like to follow up/bump the attention to this bug causing the
>> timeout to fail for socketSelect() on Unix.  It is still there in R
>> 3.4.2 and R-devel.  I've identified the bug in the R source code - the
>> bug is due to floating-point precisions and comparison using >=.  See
>> PR17203 (https://bugs.r-project.org/bugzilla3/show_bug.cgi?id=17203)
>> for details and a patch.  I've just reverified that the patch still
>> solves the problem on trunk (SVN r73463).
>>
>> Thanks,
>>
>> /Henrik
>>
>> On Sat, Oct 1, 2016 at 1:11 PM, Henrik Bengtsson
>> <henrik.bengtsson at gmail.com> wrote:
>>>
>>> There's something weird going on for certain non-integer values of
>>> argument 'timeout' to base::socketSelect().  For such values, there is
>>> no timeout and you effectively end up with an infinite timeout.   I
>>> can reproduce this on R 3.3.1 on Ubuntu 16.04 and RedHat 6.6, but not
>>> on Windows (via Linux Wine).
>>>
>>> # 1. In R master session
>>>>
>>>> con <- socketConnection('localhost', port = 11001, server = TRUE,
>>>> blocking = TRUE, open = 'a+b')
>>>
>>> # 2. In R servant session (connect to the above master socket)
>>>>
>>>> con <- socketConnection('localhost', port = 11001, server = FALSE,
>>>> blocking = TRUE, open = 'a+b')
>>>
>>> # 3. In R master session (check if there's something available on
>>> connection)
>>> # Wait at most 0 seconds
>>>>
>>>> t <- system.time(r <- socketSelect(list(con), write = FALSE, timeout =
>>>> 0)); print(t); print(r)
>>>
>>>     user  system elapsed
>>>        0       0       0
>>> [1] FALSE
>>>
>>> # Wait at most 1 seconds
>>>>
>>>> t <- system.time(r <- socketSelect(list(con), write = FALSE, timeout =
>>>> 1)); print(t); print(r)
>>>
>>>     user  system elapsed
>>>    0.000   0.000   1.002
>>> [1] FALSE
>>>
>>> # Wait at most 2 seconds
>>>>
>>>> t <- system.time(r <- socketSelect(list(con), write = FALSE, timeout =
>>>> 2)); print(t); print(r)
>>>
>>>     user  system elapsed
>>>    0.000   0.000   2.002
>>> [1] FALSE
>>>
>>> # Wait at most 2.5 seconds
>>>>
>>>> t <- system.time(r <- socketSelect(list(con), write = FALSE, timeout =
>>>> 2.5)); print(t); print(r)
>>>
>>>     user  system elapsed
>>>    0.000   0.000   2.502
>>> [1] FALSE
>>>
>>> # Wait at most 2.1 seconds
>>>>
>>>> t <- system.time(r <- socketSelect(list(con), write = FALSE, timeout =
>>>> 2.1)); print(t); print(r)
>>>
>>>     user  system elapsed
>>>    0.000   0.000   2.101
>>> [1] FALSE
>>>
>>> However, here are some weird cases where the value of the 'timeout'
>>> argument is ignored:
>>>
>>> # Wait at most 1.9 seconds
>>>>
>>>> t <- system.time(r <- socketSelect(list(con), write = FALSE, timeout =
>>>> 1.9)); print(t); print(r)
>>>
>>> ^C   user  system elapsed
>>>    3.780  14.888  20.594
>>>
>>>> t <- system.time(r <- socketSelect(list(con), write = FALSE, timeout =
>>>> 0.1)); print(t); print(r)
>>>
>>> ^C   user  system elapsed
>>>    2.596  11.208  13.907
>>> [1] FALSE
>>>
>>> Note how I had to signal a user interrupt (Ctrl-C) to exit
>>> socketSelect().  Also, not that it still works with the timeout values
>>> chosen above, e.g.
>>>
>>>> t <- system.time(r <- socketSelect(list(con), write = FALSE, timeout =
>>>> 0)); print(t); print(r)
>>>
>>>     user  system elapsed
>>>        0       0       0
>>> [1] FALSE
>>>>
>>>> t <- system.time(r <- socketSelect(list(con), write = FALSE, timeout =
>>>> 1)); print(t); print(r)
>>>
>>>     user  system elapsed
>>>    0.000   0.000   1.001
>>> [1] FALSE
>>>
>>>> t <- system.time(r <- socketSelect(list(con), write = FALSE, timeout =
>>>> 2.1)); print(t); print(r)
>>>
>>>     user  system elapsed
>>>    0.000   0.000   2.103
>>> [1] FALSE
>>>
>>> It's almost as if there is something special with non-integer values
>>> in (0,2).  Not saying these are the only cases, but that's what I've
>>> observed by trial and error.  Weird.  The fact that it works on
>>> Windows, may suggest it is a Unix specific.  Anyway with macOS that
>>> wanna confirm?
>>>
>>> /Henrik
>>>
>>> Session information details:
>>>
>>> # Ubuntu 16.04
>>>>
>>>> sessionInfo()
>>>
>>> R version 3.3.1 (2016-06-21)
>>> Platform: x86_64-pc-linux-gnu (64-bit)
>>> Running under: Ubuntu 16.04.1 LTS
>>>
>>> locale:
>>>   [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C
>>>   [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8
>>>   [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8
>>>   [7] LC_PAPER=en_US.UTF-8       LC_NAME=C
>>>   [9] LC_ADDRESS=C               LC_TELEPHONE=C
>>> [11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C
>>>
>>> attached base packages:
>>> [1] stats     graphics  grDevices utils     datasets  methods   base
>>>
>>> loaded via a namespace (and not attached):
>>> [1] tools_3.3.1
>>>
>>> # RedHat 6.6:
>>>>
>>>> sessionInfo()
>>>
>>> R version 3.3.1 (2016-06-21)
>>> Platform: x86_64-pc-linux-gnu (64-bit)
>>>
>>> locale:
>>> [1] C
>>>
>>> attached base packages:
>>> [1] stats     graphics  grDevices utils     datasets  methods   base
>>>
>>> loaded via a namespace (and not attached):
>>> [1] tools_3.3.1
>>>
>>> # Windows via Wine on Linux
>>>>
>>>> sessionInfo()
>>>
>>> R version 3.3.1 (2016-06-21)
>>> Platform: x86_64-w64-mingw32/x64 (64-bit)
>>> Running under: Windows XP x64 (build 2600) Service Pack 3
>>>
>>> locale:
>>> [1] LC_COLLATE=English_United States.1252 LC_CTYPE=English_United
>>> States.1252
>>> [3] LC_MONETARY=C                         LC_NUMERIC=C
>>> [5] LC_TIME=C
>>>
>>> attached base packages:
>>> [1] stats     graphics  grDevices utils     datasets  methods   base
>>>
>>> loaded via a namespace (and not attached):
>>> [1] tools_3.3.1
>>
>> ______________________________________________
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel
>
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From rhelp at eoos.dds.nl  Fri Oct  6 12:08:19 2017
From: rhelp at eoos.dds.nl (Jan van der Laan)
Date: Fri, 6 Oct 2017 12:08:19 +0200
Subject: [Rd] Using response variable in interaction as explanatory variable
 in glm crashes R
Message-ID: <465314b6-1c01-7c41-9ccd-554e8ca63c9f@eoos.dds.nl>


The following code crashes R (I know I shouldn't try to estimate such a 
model; this was a bug in some code of mine). I also tried with R-devel; 
same result.


tab <- structure(list(dob_day = c(FALSE, FALSE, FALSE, FALSE, TRUE,
TRUE, TRUE, TRUE), dob_mon = c(FALSE, FALSE, TRUE, TRUE, FALSE,
FALSE, TRUE, TRUE), dob_year = c(FALSE, TRUE, FALSE, TRUE, FALSE,
TRUE, FALSE, TRUE), n = c(1489634L, 17491L, 134985L, 1639L, 47892L,
611L, 4365L, 750L), pred1 = c(1488301, 18187, 135605, 1657, 48547,
593, 4423, 54)), .Names = c("dob_day", "dob_mon", "dob_year",
"n", "pred1"), row.names = c(NA, -8L), class = "data.frame")

m <- glm(dob_mon ~ dob_day*dob_mon, data = tab, family = binomial())


The crash doesn't when the variables are added just as main effects 
(dob_day+dob_mon): this results in a warning and the removal of dob_mon 
from the formula.

--

Jan



 > R.version
 ?????????????? _
platform?????? x86_64-pc-linux-gnu
arch?????????? x86_64
os???????????? linux-gnu
system???????? x86_64, linux-gnu
status
major????????? 3
minor????????? 4.1
year?????????? 2017
month????????? 06
day??????????? 30
svn rev??????? 72865
language?????? R
version.string R version 3.4.1 (2017-06-30)
nickname?????? Single Candle


From rhelp at eoos.dds.nl  Fri Oct  6 12:13:39 2017
From: rhelp at eoos.dds.nl (Jan van der Laan)
Date: Fri, 6 Oct 2017 12:13:39 +0200
Subject: [Rd] Using response variable in interaction as explanatory
 variable in glm crashes R
In-Reply-To: <465314b6-1c01-7c41-9ccd-554e8ca63c9f@eoos.dds.nl>
References: <465314b6-1c01-7c41-9ccd-554e8ca63c9f@eoos.dds.nl>
Message-ID: <1824a6cb-7a70-924d-cd84-9b5d85a70ab2@eoos.dds.nl>

It is actually model.matrix that crashes, not glm. Same crash occurs 
with e.g. lm.

model.matrix(dob_mon ~ dob_day*dob_mon, data = tab)

also crashes R.

Jan



On 06-10-17 12:08, Jan van der Laan wrote:
>
> The following code crashes R (I know I shouldn't try to estimate such 
> a model; this was a bug in some code of mine). I also tried with 
> R-devel; same result.
>
>
> tab <- structure(list(dob_day = c(FALSE, FALSE, FALSE, FALSE, TRUE,
> TRUE, TRUE, TRUE), dob_mon = c(FALSE, FALSE, TRUE, TRUE, FALSE,
> FALSE, TRUE, TRUE), dob_year = c(FALSE, TRUE, FALSE, TRUE, FALSE,
> TRUE, FALSE, TRUE), n = c(1489634L, 17491L, 134985L, 1639L, 47892L,
> 611L, 4365L, 750L), pred1 = c(1488301, 18187, 135605, 1657, 48547,
> 593, 4423, 54)), .Names = c("dob_day", "dob_mon", "dob_year",
> "n", "pred1"), row.names = c(NA, -8L), class = "data.frame")
>
> m <- glm(dob_mon ~ dob_day*dob_mon, data = tab, family = binomial())
>
>
> The crash doesn't when the variables are added just as main effects 
> (dob_day+dob_mon): this results in a warning and the removal of 
> dob_mon from the formula.
>
> -- 
>
> Jan
>
>
>
> > R.version
> ?????????????? _
> platform?????? x86_64-pc-linux-gnu
> arch?????????? x86_64
> os???????????? linux-gnu
> system???????? x86_64, linux-gnu
> status
> major????????? 3
> minor????????? 4.1
> year?????????? 2017
> month????????? 06
> day??????????? 30
> svn rev??????? 72865
> language?????? R
> version.string R version 3.4.1 (2017-06-30)
> nickname?????? Single Candle
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From josh.m.ulrich at gmail.com  Fri Oct  6 15:48:24 2017
From: josh.m.ulrich at gmail.com (Joshua Ulrich)
Date: Fri, 6 Oct 2017 08:48:24 -0500
Subject: [Rd] SIGSEGV during startup
Message-ID: <CAPPM_gSv7cvneEbnummWvwPCnf69__xcNSn6OsRG+SmXjBmTvA@mail.gmail.com>

Hi,

This problem started as of r73472 ("Merged in the rest of the basic
ALTREP framework."); I tested r73471 and it did not exist.

I'm building R devel on Ubuntu 16.04.3 LTS (64-bit), with the following flags:
  CC="gcc -std=gnu99 -fsanitize=address -fno-omit-frame-pointer"
  CFLAGS="-fno-omit-frame-pointer -g -O2 -Wall -pedantic -mtune=native"
and using
  configure --with-valgrind-instrumentation=2

Running 'make' builds the R binary, but R fails to start.  So 'make'
ultimately fails when trying to install sysdata.rda during the tools
package build.  Here is the traceback:

make[5]: Leaving directory '/home/josh/R/R-build/src/library/tools/src'
make[4]: Leaving directory '/home/josh/R/R-build/src/library/tools'
make[4]: Entering directory '/home/josh/R/R-build/src/library/tools'
installing 'sysdata.rda'
ASAN:SIGSEGV
=================================================================
==3543==ERROR: AddressSanitizer: SEGV on unknown address
0x000000000000 (pc 0x00000043b2f2 bp 0x7ffeb5fdc670 sp 0x7ffeb5fdc660
T0)
    #0 0x43b2f1 in ALTVEC_DATAPTR ../../../R-svn/src/main/altrep.c:305
    #1 0x6b1068 in DATAPTR ../../../R-svn/src/include/Rinlinedfuns.h:105
    #2 0x6b1068 in GetNewPage ../../../R-svn/src/main/memory.c:908
    #3 0x6b5284 in Rf_allocVector3 ../../../R-svn/src/main/memory.c:2514
    #4 0x654a49 in Rf_allocVector ../../../R-svn/src/include/Rinlinedfuns.h:514
    #5 0x654a49 in Rf_mkTrue ../../../R-svn/src/main/gram.c:4164
    #6 0x6b616c in Rf_InitMemory ../../../R-svn/src/main/memory.c:2137
    #7 0x69186a in setup_Rmainloop ../../../R-svn/src/main/main.c:842
    #8 0x694488 in Rf_mainloop ../../../R-svn/src/main/main.c:1088
    #9 0x41e398 in main ../../../R-svn/src/main/Rmain.c:29
    #10 0x7f9d71f4182f in __libc_start_main
(/lib/x86_64-linux-gnu/libc.so.6+0x2082f)
    #11 0x41fbe8 in _start (/home/josh/R/R-build/bin/exec/R+0x41fbe8)

AddressSanitizer can not provide additional info.
SUMMARY: AddressSanitizer: SEGV ../../../R-svn/src/main/altrep.c:305
ALTVEC_DATAPTR
==3543==ABORTING
../../../../R-svn/share/make/basepkg.mk:150: recipe for target 'sysdata' failed
make[4]: *** [sysdata] Error 1
make[4]: Leaving directory '/home/josh/R/R-build/src/library/tools'
Makefile:30: recipe for target 'all' failed
make[3]: *** [all] Error 2
make[3]: Leaving directory '/home/josh/R/R-build/src/library/tools'
Makefile:36: recipe for target 'R' failed
make[2]: *** [R] Error 1
make[2]: Leaving directory '/home/josh/R/R-build/src/library'
Makefile:28: recipe for target 'R' failed
make[1]: *** [R] Error 1
make[1]: Leaving directory '/home/josh/R/R-build/src'
Makefile:60: recipe for target 'R' failed
make: *** [R] Error 1

The context around memory.c:908 is below, and suggests the issue
manifests with the combination of the ALTREP framework and valgrind
instrumentation level >1.

#if  VALGRIND_LEVEL > 1
if (NodeClassSize[node_class] > 0)
    VALGRIND_MAKE_MEM_NOACCESS(DATAPTR(s),
NodeClassSize[node_class]*sizeof(VECREC));
#endif


-- 
Joshua Ulrich  |  about.me/joshuaulrich
FOSS Trading  |  www.fosstrading.com
R/Finance 2017 | www.rinfinance.com


From luke-tierney at uiowa.edu  Fri Oct  6 19:11:38 2017
From: luke-tierney at uiowa.edu (luke-tierney at uiowa.edu)
Date: Fri, 6 Oct 2017 12:11:38 -0500 (CDT)
Subject: [Rd] SIGSEGV during startup
In-Reply-To: <CAPPM_gSv7cvneEbnummWvwPCnf69__xcNSn6OsRG+SmXjBmTvA@mail.gmail.com>
References: <CAPPM_gSv7cvneEbnummWvwPCnf69__xcNSn6OsRG+SmXjBmTvA@mail.gmail.com>
Message-ID: <alpine.DEB.2.20.1710061211210.2594@luke-Latitude>

Thanks -- should be resolved now.

Best,

luke

On Fri, 6 Oct 2017, Joshua Ulrich wrote:

> Hi,
>
> This problem started as of r73472 ("Merged in the rest of the basic
> ALTREP framework."); I tested r73471 and it did not exist.
>
> I'm building R devel on Ubuntu 16.04.3 LTS (64-bit), with the following flags:
>  CC="gcc -std=gnu99 -fsanitize=address -fno-omit-frame-pointer"
>  CFLAGS="-fno-omit-frame-pointer -g -O2 -Wall -pedantic -mtune=native"
> and using
>  configure --with-valgrind-instrumentation=2
>
> Running 'make' builds the R binary, but R fails to start.  So 'make'
> ultimately fails when trying to install sysdata.rda during the tools
> package build.  Here is the traceback:
>
> make[5]: Leaving directory '/home/josh/R/R-build/src/library/tools/src'
> make[4]: Leaving directory '/home/josh/R/R-build/src/library/tools'
> make[4]: Entering directory '/home/josh/R/R-build/src/library/tools'
> installing 'sysdata.rda'
> ASAN:SIGSEGV
> =================================================================
> ==3543==ERROR: AddressSanitizer: SEGV on unknown address
> 0x000000000000 (pc 0x00000043b2f2 bp 0x7ffeb5fdc670 sp 0x7ffeb5fdc660
> T0)
>    #0 0x43b2f1 in ALTVEC_DATAPTR ../../../R-svn/src/main/altrep.c:305
>    #1 0x6b1068 in DATAPTR ../../../R-svn/src/include/Rinlinedfuns.h:105
>    #2 0x6b1068 in GetNewPage ../../../R-svn/src/main/memory.c:908
>    #3 0x6b5284 in Rf_allocVector3 ../../../R-svn/src/main/memory.c:2514
>    #4 0x654a49 in Rf_allocVector ../../../R-svn/src/include/Rinlinedfuns.h:514
>    #5 0x654a49 in Rf_mkTrue ../../../R-svn/src/main/gram.c:4164
>    #6 0x6b616c in Rf_InitMemory ../../../R-svn/src/main/memory.c:2137
>    #7 0x69186a in setup_Rmainloop ../../../R-svn/src/main/main.c:842
>    #8 0x694488 in Rf_mainloop ../../../R-svn/src/main/main.c:1088
>    #9 0x41e398 in main ../../../R-svn/src/main/Rmain.c:29
>    #10 0x7f9d71f4182f in __libc_start_main
> (/lib/x86_64-linux-gnu/libc.so.6+0x2082f)
>    #11 0x41fbe8 in _start (/home/josh/R/R-build/bin/exec/R+0x41fbe8)
>
> AddressSanitizer can not provide additional info.
> SUMMARY: AddressSanitizer: SEGV ../../../R-svn/src/main/altrep.c:305
> ALTVEC_DATAPTR
> ==3543==ABORTING
> ../../../../R-svn/share/make/basepkg.mk:150: recipe for target 'sysdata' failed
> make[4]: *** [sysdata] Error 1
> make[4]: Leaving directory '/home/josh/R/R-build/src/library/tools'
> Makefile:30: recipe for target 'all' failed
> make[3]: *** [all] Error 2
> make[3]: Leaving directory '/home/josh/R/R-build/src/library/tools'
> Makefile:36: recipe for target 'R' failed
> make[2]: *** [R] Error 1
> make[2]: Leaving directory '/home/josh/R/R-build/src/library'
> Makefile:28: recipe for target 'R' failed
> make[1]: *** [R] Error 1
> make[1]: Leaving directory '/home/josh/R/R-build/src'
> Makefile:60: recipe for target 'R' failed
> make: *** [R] Error 1
>
> The context around memory.c:908 is below, and suggests the issue
> manifests with the combination of the ALTREP framework and valgrind
> instrumentation level >1.
>
> #if  VALGRIND_LEVEL > 1
> if (NodeClassSize[node_class] > 0)
>    VALGRIND_MAKE_MEM_NOACCESS(DATAPTR(s),
> NodeClassSize[node_class]*sizeof(VECREC));
> #endif
>
>
>

-- 
Luke Tierney
Ralph E. Wareham Professor of Mathematical Sciences
University of Iowa                  Phone:             319-335-3386
Department of Statistics and        Fax:               319-335-3017
    Actuarial Science
241 Schaeffer Hall                  email:   luke-tierney at uiowa.edu
Iowa City, IA 52242                 WWW:  http://www.stat.uiowa.edu


From arietencate at gmail.com  Sat Oct  7 09:35:34 2017
From: arietencate at gmail.com (Arie ten Cate)
Date: Sat, 7 Oct 2017 09:35:34 +0200
Subject: [Rd] Discourage the weights= option of lm with summarized data
Message-ID: <CACg-3ubLbUFN=9wA5w_9XtWu1WFUHdGYH1fU9_9_S33vc3vVFQ@mail.gmail.com>

In the Details section of lm (linear models) in the Reference manual,
it is suggested to use the weights= option for summarized data. This
must be discouraged rather than encouraged. The motivation for this is
as follows.

With summarized data the standard errors get smaller with increasing
numbers of observations. However, the standard errors in lm do not get
smaller when for instance all weights are multiplied with the same
constant larger than one, since the inverse weights are merely
proportional to the error variances.

Here is an example of the estimated standard errors being too large
with the weights= option. The p value and the number of degrees of
freedom are also wrong. The parameter estimates are correct.

  n <- 10
  x <- c(1,2,3,4)
  y <- c(1,2,5,4)
  w <- c(1,1,1,n)
  xb <- c(x,rep(x[4],n-1))  # restore the original data
  yb <- c(y,rep(y[4],n-1))
  print(summary(lm(yb ~ xb)))
  print(summary(lm(y ~ x, weights=w)))

Compare with PROC REG in SAS, with a WEIGHT statement (like R) and a
FREQ statement (for summarized data).

    Arie


From wolfgang.viechtbauer at maastrichtuniversity.nl  Sat Oct  7 15:34:07 2017
From: wolfgang.viechtbauer at maastrichtuniversity.nl (Viechtbauer Wolfgang (SP))
Date: Sat, 7 Oct 2017 13:34:07 +0000
Subject: [Rd] Discourage the weights= option of lm with summarized data
In-Reply-To: <CACg-3ubLbUFN=9wA5w_9XtWu1WFUHdGYH1fU9_9_S33vc3vVFQ@mail.gmail.com>
References: <CACg-3ubLbUFN=9wA5w_9XtWu1WFUHdGYH1fU9_9_S33vc3vVFQ@mail.gmail.com>
Message-ID: <eb947735ca154a94aa0f18a0ea750312@UM-MAIL3216.unimaas.nl>

Using 'weights' is not meant to indicate that the same observation is repeated 'n' times. It is meant to indicate different variances (or to be precise, that the variance of the last observation in 'x' is sigma^2 / n, while the first three observations have variance sigma^2).

Best,
Wolfgang

-----Original Message-----
From: R-devel [mailto:r-devel-bounces at r-project.org] On Behalf Of Arie ten Cate
Sent: Saturday, 07 October, 2017 9:36
To: r-devel at r-project.org
Subject: [Rd] Discourage the weights= option of lm with summarized data

In the Details section of lm (linear models) in the Reference manual,
it is suggested to use the weights= option for summarized data. This
must be discouraged rather than encouraged. The motivation for this is
as follows.

With summarized data the standard errors get smaller with increasing
numbers of observations. However, the standard errors in lm do not get
smaller when for instance all weights are multiplied with the same
constant larger than one, since the inverse weights are merely
proportional to the error variances.

Here is an example of the estimated standard errors being too large
with the weights= option. The p value and the number of degrees of
freedom are also wrong. The parameter estimates are correct.

  n <- 10
  x <- c(1,2,3,4)
  y <- c(1,2,5,4)
  w <- c(1,1,1,n)
  xb <- c(x,rep(x[4],n-1))  # restore the original data
  yb <- c(y,rep(y[4],n-1))
  print(summary(lm(yb ~ xb)))
  print(summary(lm(y ~ x, weights=w)))

Compare with PROC REG in SAS, with a WEIGHT statement (like R) and a
FREQ statement (for summarized data).

    Arie


From arietencate at gmail.com  Sun Oct  8 14:55:30 2017
From: arietencate at gmail.com (Arie ten Cate)
Date: Sun, 8 Oct 2017 14:55:30 +0200
Subject: [Rd]  Discourage the weights= option of lm with summarized data
Message-ID: <CACg-3uaGhq_RX5S7YQVz0KEx6G-MoVaFVXx_MWuP75qaWqw3mQ@mail.gmail.com>

Indeed: Using 'weights' is not meant to indicate that the same
observation is repeated 'n' times.  As I showed, this gives erroneous
results. Hence I suggested that it is discouraged rather than
encouraged in the Details section of lm in the Reference manual.

   Arie

---Original Message-----
On Sat, 7 Oct 2017, wolfgang.viechtbauer at maastrichtuniversity.nl wrote:

Using 'weights' is not meant to indicate that the same observation is
repeated 'n' times. It is meant to indicate different variances (or to
be precise, that the variance of the last observation in 'x' is
sigma^2 / n, while the first three observations have variance
sigma^2).

Best,
Wolfgang

-----Original Message-----
From: R-devel [mailto:r-devel-bounces at r-project.org] On Behalf Of Arie ten Cate
Sent: Saturday, 07 October, 2017 9:36
To: r-devel at r-project.org
Subject: [Rd] Discourage the weights= option of lm with summarized data

In the Details section of lm (linear models) in the Reference manual,
it is suggested to use the weights= option for summarized data. This
must be discouraged rather than encouraged. The motivation for this is
as follows.

With summarized data the standard errors get smaller with increasing
numbers of observations. However, the standard errors in lm do not get
smaller when for instance all weights are multiplied with the same
constant larger than one, since the inverse weights are merely
proportional to the error variances.

Here is an example of the estimated standard errors being too large
with the weights= option. The p value and the number of degrees of
freedom are also wrong. The parameter estimates are correct.

  n <- 10
  x <- c(1,2,3,4)
  y <- c(1,2,5,4)
  w <- c(1,1,1,n)
  xb <- c(x,rep(x[4],n-1))  # restore the original data
  yb <- c(y,rep(y[4],n-1))
  print(summary(lm(yb ~ xb)))
  print(summary(lm(y ~ x, weights=w)))

Compare with PROC REG in SAS, with a WEIGHT statement (like R) and a
FREQ statement (for summarized data).

    Arie


From wolfgang.viechtbauer at maastrichtuniversity.nl  Sun Oct  8 16:38:17 2017
From: wolfgang.viechtbauer at maastrichtuniversity.nl (Viechtbauer Wolfgang (SP))
Date: Sun, 8 Oct 2017 14:38:17 +0000
Subject: [Rd] Discourage the weights= option of lm with summarized data
In-Reply-To: <CACg-3uaGhq_RX5S7YQVz0KEx6G-MoVaFVXx_MWuP75qaWqw3mQ@mail.gmail.com>
References: <CACg-3uaGhq_RX5S7YQVz0KEx6G-MoVaFVXx_MWuP75qaWqw3mQ@mail.gmail.com>
Message-ID: <3350d9cc415940f39ba36bd65e104ee0@UM-MAIL3216.unimaas.nl>

Ah, I think you are referring to this part from ?lm:

"(including the case that there are w_i observations equal to y_i and the data have been summarized)"

I see; indeed, I don't think this is what 'weights' should be used for (the other part before that is correct). Sorry, I misunderstood the point you were trying to make.

Best,
Wolfgang

-----Original Message-----
From: R-devel [mailto:r-devel-bounces at r-project.org] On Behalf Of Arie ten Cate
Sent: Sunday, 08 October, 2017 14:55
To: r-devel at r-project.org
Subject: [Rd] Discourage the weights= option of lm with summarized data

Indeed: Using 'weights' is not meant to indicate that the same
observation is repeated 'n' times.  As I showed, this gives erroneous
results. Hence I suggested that it is discouraged rather than
encouraged in the Details section of lm in the Reference manual.

   Arie

---Original Message-----
On Sat, 7 Oct 2017, wolfgang.viechtbauer at maastrichtuniversity.nl wrote:

Using 'weights' is not meant to indicate that the same observation is
repeated 'n' times. It is meant to indicate different variances (or to
be precise, that the variance of the last observation in 'x' is
sigma^2 / n, while the first three observations have variance
sigma^2).

Best,
Wolfgang

-----Original Message-----
From: R-devel [mailto:r-devel-bounces at r-project.org] On Behalf Of Arie ten Cate
Sent: Saturday, 07 October, 2017 9:36
To: r-devel at r-project.org
Subject: [Rd] Discourage the weights= option of lm with summarized data

In the Details section of lm (linear models) in the Reference manual,
it is suggested to use the weights= option for summarized data. This
must be discouraged rather than encouraged. The motivation for this is
as follows.

With summarized data the standard errors get smaller with increasing
numbers of observations. However, the standard errors in lm do not get
smaller when for instance all weights are multiplied with the same
constant larger than one, since the inverse weights are merely
proportional to the error variances.

Here is an example of the estimated standard errors being too large
with the weights= option. The p value and the number of degrees of
freedom are also wrong. The parameter estimates are correct.

  n <- 10
  x <- c(1,2,3,4)
  y <- c(1,2,5,4)
  w <- c(1,1,1,n)
  xb <- c(x,rep(x[4],n-1))  # restore the original data
  yb <- c(y,rep(y[4],n-1))
  print(summary(lm(yb ~ xb)))
  print(summary(lm(y ~ x, weights=w)))

Compare with PROC REG in SAS, with a WEIGHT statement (like R) and a
FREQ statement (for summarized data).

    Arie


From arietencate at gmail.com  Mon Oct  9 07:58:13 2017
From: arietencate at gmail.com (Arie ten Cate)
Date: Mon, 9 Oct 2017 07:58:13 +0200
Subject: [Rd] Discourage the weights= option of lm with summarized data
In-Reply-To: <3350d9cc415940f39ba36bd65e104ee0@UM-MAIL3216.unimaas.nl>
References: <CACg-3uaGhq_RX5S7YQVz0KEx6G-MoVaFVXx_MWuP75qaWqw3mQ@mail.gmail.com>
 <3350d9cc415940f39ba36bd65e104ee0@UM-MAIL3216.unimaas.nl>
Message-ID: <CACg-3uZMSoj5RBkREqzM6Dc-AiqMahHbQPMzP34KgoeQ7UmVHg@mail.gmail.com>

Yes.  Thank you; I should have quoted it.
I suggest to remove this text or to add the word "not" at the beginning.

   Arie

On Sun, Oct 8, 2017 at 4:38 PM, Viechtbauer Wolfgang (SP)
<wolfgang.viechtbauer at maastrichtuniversity.nl> wrote:
> Ah, I think you are referring to this part from ?lm:
>
> "(including the case that there are w_i observations equal to y_i and the data have been summarized)"
>
> I see; indeed, I don't think this is what 'weights' should be used for (the other part before that is correct). Sorry, I misunderstood the point you were trying to make.
>
> Best,
> Wolfgang
>
> -----Original Message-----
> From: R-devel [mailto:r-devel-bounces at r-project.org] On Behalf Of Arie ten Cate
> Sent: Sunday, 08 October, 2017 14:55
> To: r-devel at r-project.org
> Subject: [Rd] Discourage the weights= option of lm with summarized data
>
> Indeed: Using 'weights' is not meant to indicate that the same
> observation is repeated 'n' times.  As I showed, this gives erroneous
> results. Hence I suggested that it is discouraged rather than
> encouraged in the Details section of lm in the Reference manual.
>
>    Arie
>
> ---Original Message-----
> On Sat, 7 Oct 2017, wolfgang.viechtbauer at maastrichtuniversity.nl wrote:
>
> Using 'weights' is not meant to indicate that the same observation is
> repeated 'n' times. It is meant to indicate different variances (or to
> be precise, that the variance of the last observation in 'x' is
> sigma^2 / n, while the first three observations have variance
> sigma^2).
>
> Best,
> Wolfgang
>
> -----Original Message-----
> From: R-devel [mailto:r-devel-bounces at r-project.org] On Behalf Of Arie ten Cate
> Sent: Saturday, 07 October, 2017 9:36
> To: r-devel at r-project.org
> Subject: [Rd] Discourage the weights= option of lm with summarized data
>
> In the Details section of lm (linear models) in the Reference manual,
> it is suggested to use the weights= option for summarized data. This
> must be discouraged rather than encouraged. The motivation for this is
> as follows.
>
> With summarized data the standard errors get smaller with increasing
> numbers of observations. However, the standard errors in lm do not get
> smaller when for instance all weights are multiplied with the same
> constant larger than one, since the inverse weights are merely
> proportional to the error variances.
>
> Here is an example of the estimated standard errors being too large
> with the weights= option. The p value and the number of degrees of
> freedom are also wrong. The parameter estimates are correct.
>
>   n <- 10
>   x <- c(1,2,3,4)
>   y <- c(1,2,5,4)
>   w <- c(1,1,1,n)
>   xb <- c(x,rep(x[4],n-1))  # restore the original data
>   yb <- c(y,rep(y[4],n-1))
>   print(summary(lm(yb ~ xb)))
>   print(summary(lm(y ~ x, weights=w)))
>
> Compare with PROC REG in SAS, with a WEIGHT statement (like R) and a
> FREQ statement (for summarized data).
>
>     Arie
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From pdalgd at gmail.com  Mon Oct  9 17:22:46 2017
From: pdalgd at gmail.com (peter dalgaard)
Date: Mon, 9 Oct 2017 17:22:46 +0200
Subject: [Rd] Discourage the weights= option of lm with summarized data
In-Reply-To: <CACg-3uZMSoj5RBkREqzM6Dc-AiqMahHbQPMzP34KgoeQ7UmVHg@mail.gmail.com>
References: <CACg-3uaGhq_RX5S7YQVz0KEx6G-MoVaFVXx_MWuP75qaWqw3mQ@mail.gmail.com>
 <3350d9cc415940f39ba36bd65e104ee0@UM-MAIL3216.unimaas.nl>
 <CACg-3uZMSoj5RBkREqzM6Dc-AiqMahHbQPMzP34KgoeQ7UmVHg@mail.gmail.com>
Message-ID: <E784F4E0-01CE-4A09-8DD8-4F85FAC293AF@gmail.com>

AFAIR, it is a little more subtle than that. 

If you have replication weights, then the estimates are right, it is "just" that the SE from summary.lm() are wrong. Somehow, the text should reflect this.

It is of some importance when you put glm() into the mix, because you can in fact get correct results from things like

y <- c(0,1)
w <- c(49,51)
glm(y~1, weights=w, family=binomial)

-pd
 


> On 9 Oct 2017, at 07:58 , Arie ten Cate <arietencate at gmail.com> wrote:
> 
> Yes.  Thank you; I should have quoted it.
> I suggest to remove this text or to add the word "not" at the beginning.
> 
>   Arie
> 
> On Sun, Oct 8, 2017 at 4:38 PM, Viechtbauer Wolfgang (SP)
> <wolfgang.viechtbauer at maastrichtuniversity.nl> wrote:
>> Ah, I think you are referring to this part from ?lm:
>> 
>> "(including the case that there are w_i observations equal to y_i and the data have been summarized)"
>> 
>> I see; indeed, I don't think this is what 'weights' should be used for (the other part before that is correct). Sorry, I misunderstood the point you were trying to make.
>> 
>> Best,
>> Wolfgang
>> 
>> -----Original Message-----
>> From: R-devel [mailto:r-devel-bounces at r-project.org] On Behalf Of Arie ten Cate
>> Sent: Sunday, 08 October, 2017 14:55
>> To: r-devel at r-project.org
>> Subject: [Rd] Discourage the weights= option of lm with summarized data
>> 
>> Indeed: Using 'weights' is not meant to indicate that the same
>> observation is repeated 'n' times.  As I showed, this gives erroneous
>> results. Hence I suggested that it is discouraged rather than
>> encouraged in the Details section of lm in the Reference manual.
>> 
>>   Arie
>> 
>> ---Original Message-----
>> On Sat, 7 Oct 2017, wolfgang.viechtbauer at maastrichtuniversity.nl wrote:
>> 
>> Using 'weights' is not meant to indicate that the same observation is
>> repeated 'n' times. It is meant to indicate different variances (or to
>> be precise, that the variance of the last observation in 'x' is
>> sigma^2 / n, while the first three observations have variance
>> sigma^2).
>> 
>> Best,
>> Wolfgang
>> 
>> -----Original Message-----
>> From: R-devel [mailto:r-devel-bounces at r-project.org] On Behalf Of Arie ten Cate
>> Sent: Saturday, 07 October, 2017 9:36
>> To: r-devel at r-project.org
>> Subject: [Rd] Discourage the weights= option of lm with summarized data
>> 
>> In the Details section of lm (linear models) in the Reference manual,
>> it is suggested to use the weights= option for summarized data. This
>> must be discouraged rather than encouraged. The motivation for this is
>> as follows.
>> 
>> With summarized data the standard errors get smaller with increasing
>> numbers of observations. However, the standard errors in lm do not get
>> smaller when for instance all weights are multiplied with the same
>> constant larger than one, since the inverse weights are merely
>> proportional to the error variances.
>> 
>> Here is an example of the estimated standard errors being too large
>> with the weights= option. The p value and the number of degrees of
>> freedom are also wrong. The parameter estimates are correct.
>> 
>>  n <- 10
>>  x <- c(1,2,3,4)
>>  y <- c(1,2,5,4)
>>  w <- c(1,1,1,n)
>>  xb <- c(x,rep(x[4],n-1))  # restore the original data
>>  yb <- c(y,rep(y[4],n-1))
>>  print(summary(lm(yb ~ xb)))
>>  print(summary(lm(y ~ x, weights=w)))
>> 
>> Compare with PROC REG in SAS, with a WEIGHT statement (like R) and a
>> FREQ statement (for summarized data).
>> 
>>    Arie
>> 
>> ______________________________________________
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel

-- 
Peter Dalgaard, Professor,
Center for Statistics, Copenhagen Business School
Solbjerg Plads 3, 2000 Frederiksberg, Denmark
Phone: (+45)38153501
Office: A 4.23
Email: pd.mes at cbs.dk  Priv: PDalgd at gmail.com


From maechler at stat.math.ethz.ch  Mon Oct  9 17:52:43 2017
From: maechler at stat.math.ethz.ch (Martin Maechler)
Date: Mon, 9 Oct 2017 17:52:43 +0200
Subject: [Rd] Using response variable in interaction as explanatory
 variable in glm crashes R
In-Reply-To: <1824a6cb-7a70-924d-cd84-9b5d85a70ab2@eoos.dds.nl>
References: <465314b6-1c01-7c41-9ccd-554e8ca63c9f@eoos.dds.nl>
 <1824a6cb-7a70-924d-cd84-9b5d85a70ab2@eoos.dds.nl>
Message-ID: <23003.39755.511712.902067@stat.math.ethz.ch>

>>>>> Jan van der Laan <rhelp at eoos.dds.nl>
>>>>>     on Fri, 6 Oct 2017 12:13:39 +0200 writes:

    > It is actually model.matrix that crashes, not glm. Same
    > crash occurs with e.g. lm.

    > model.matrix(dob_mon ~ dob_day*dob_mon, data = tab)

    > also crashes R.

Yes, segmentation fault.

It only happens when these are *logical* variables, not, e.g., when
transformed to integer.

The C code in src/library/stats/src/model.c  tries to eliminate
occurances of the LHS of the formula from the RHS when building
the model matrix and it does work fine in the integer case.

Part of the culprit code may be this (from line 717),
with the  isLogical(.) which in our case, shifts the pointer by
1  in the call to firstfactor() :

			int adj = isLogical(var_i)?1:0;
			// avoid overflow of jstart * nn PR#15578
			firstfactor(&rx[jstart * nn], n, jnext - jstart,
				    REAL(contrast), nrows(contrast),
				    ncols(contrast), INTEGER(var_i)+adj);

then in firstfactor(), we see the segfault (when running R with
'-d gdb') :

    > model.matrix(dob_mon ~ dob_day*dob_mon, data = tab)

  Program received signal SIGSEGV, Segmentation fault.
  0x00007fffeafa76b5 in firstfactor (ncx=0, v=0x5c3b37c, ncc=1, nrc=2, c=0x5c90008, 
   nrx=8, x=0x5cbf150) at ../../../../../R/src/library/stats/src/model.c:252
    252		    else xj[i] = cj[v[i]-1];
    Missing separate debuginfos, .................
    (gdb) list
    247	    for (int j = 0; j < ncc; j++) {
    248		xj = &x[j * (R_xlen_t)nrx];
    249		cj = &c[j * (R_xlen_t)nrc];
    250		for (int i = 0; i < nrx; i++)
    251		    if(v[i] == NA_INTEGER) xj[i] = NA_REAL;
    252		    else xj[i] = cj[v[i]-1];
    253	    }
    254	}
    255	

and indeed in the debugger,  i=7  and  v[i] is "outside", v[]
being of length 7, hence indexed 0:6.


    > Jan



    > On 06-10-17 12:08, Jan van der Laan wrote:
    >> 
    >> The following code crashes R (I know I shouldn't try to
    >> estimate such a model; this was a bug in some code of
    >> mine). I also tried with R-devel; same result.
    >> 
    >> 
    >> tab <- structure(list(dob_day = c(FALSE, FALSE, FALSE,
    >> FALSE, TRUE, TRUE, TRUE, TRUE), dob_mon = c(FALSE, FALSE,
    >> TRUE, TRUE, FALSE, FALSE, TRUE, TRUE), dob_year =
    >> c(FALSE, TRUE, FALSE, TRUE, FALSE, TRUE, FALSE, TRUE), n
    >> = c(1489634L, 17491L, 134985L, 1639L, 47892L, 611L,
    >> 4365L, 750L), pred1 = c(1488301, 18187, 135605, 1657,
    >> 48547, 593, 4423, 54)), .Names = c("dob_day", "dob_mon",
    >> "dob_year", "n", "pred1"), row.names = c(NA, -8L), class
    >> = "data.frame")
    >> 
    >> m <- glm(dob_mon ~ dob_day*dob_mon, data = tab, family =
    >> binomial())
    >> 
    >> 
    >> The crash doesn't when the variables are added just as
    >> main effects (dob_day+dob_mon): this results in a warning
    >> and the removal of dob_mon from the formula.
    >> 
    >> -- 
    >> 
    >> Jan
    >> 
    >> 
    >> 
    >> > R.version ?????????????? _ platform??????
    >> x86_64-pc-linux-gnu arch?????????? x86_64 os????????????
    >> linux-gnu system???????? x86_64, linux-gnu status
    >> major????????? 3 minor????????? 4.1 year?????????? 2017
    >> month????????? 06 day??????????? 30 svn rev??????? 72865
    >> language?????? R version.string R version 3.4.1
    >> (2017-06-30) nickname?????? Single Candle
    >> 
    >> ______________________________________________
    >> R-devel at r-project.org mailing list
    >> https://stat.ethz.ch/mailman/listinfo/r-devel

    > ______________________________________________
    > R-devel at r-project.org mailing list
    > https://stat.ethz.ch/mailman/listinfo/r-devel


From skostyshak at ufl.edu  Tue Oct 10 19:24:56 2017
From: skostyshak at ufl.edu (Scott Kostyshak)
Date: Tue, 10 Oct 2017 13:24:56 -0400
Subject: [Rd] Using response variable in interaction as explanatory
 variable in glm crashes R
In-Reply-To: <23003.39755.511712.902067@stat.math.ethz.ch>
References: <465314b6-1c01-7c41-9ccd-554e8ca63c9f@eoos.dds.nl>
 <1824a6cb-7a70-924d-cd84-9b5d85a70ab2@eoos.dds.nl>
 <23003.39755.511712.902067@stat.math.ethz.ch>
Message-ID: <20171010172456.3qcbhro4kuhyr7ni@steph>

On Mon, Oct 09, 2017 at 03:52:43PM +0000, Martin Maechler wrote:
> >>>>> Jan van der Laan <rhelp at eoos.dds.nl>
> >>>>>     on Fri, 6 Oct 2017 12:13:39 +0200 writes:
> 
>     > It is actually model.matrix that crashes, not glm. Same
>     > crash occurs with e.g. lm.
> 
>     > model.matrix(dob_mon ~ dob_day*dob_mon, data = tab)
> 
>     > also crashes R.
> 
> Yes, segmentation fault.
> 
> It only happens when these are *logical* variables, not, e.g., when
> transformed to integer.
> 
> The C code in src/library/stats/src/model.c  tries to eliminate
> occurances of the LHS of the formula from the RHS when building
> the model matrix and it does work fine in the integer case.
> 
> Part of the culprit code may be this (from line 717),
> with the  isLogical(.) which in our case, shifts the pointer by
> 1  in the call to firstfactor() :
> 
> 			int adj = isLogical(var_i)?1:0;
> 			// avoid overflow of jstart * nn PR#15578
> 			firstfactor(&rx[jstart * nn], n, jnext - jstart,
> 				    REAL(contrast), nrows(contrast),
> 				    ncols(contrast), INTEGER(var_i)+adj);
> 
> then in firstfactor(), we see the segfault (when running R with
> '-d gdb') :
> 
>     > model.matrix(dob_mon ~ dob_day*dob_mon, data = tab)
> 
>   Program received signal SIGSEGV, Segmentation fault.
>   0x00007fffeafa76b5 in firstfactor (ncx=0, v=0x5c3b37c, ncc=1, nrc=2, c=0x5c90008, 
>    nrx=8, x=0x5cbf150) at ../../../../../R/src/library/stats/src/model.c:252
>     252		    else xj[i] = cj[v[i]-1];
>     Missing separate debuginfos, .................
>     (gdb) list
>     247	    for (int j = 0; j < ncc; j++) {
>     248		xj = &x[j * (R_xlen_t)nrx];
>     249		cj = &c[j * (R_xlen_t)nrc];
>     250		for (int i = 0; i < nrx; i++)
>     251		    if(v[i] == NA_INTEGER) xj[i] = NA_REAL;
>     252		    else xj[i] = cj[v[i]-1];
>     253	    }
>     254	}
>     255	
> 
> and indeed in the debugger,  i=7  and  v[i] is "outside", v[]
> being of length 7, hence indexed 0:6.

Dear Martin,

I just wanted to thank you for providing details on your approach to
debugging. Often I see bug fixes and I wonder "how the heck did they
figure that out?" so I am very excited when I see details like these on
the process (and not just the end result), so that I can learn.

Best,

Scott


-- 
Scott Kostyshak
Assistant Professor of Economics
University of Florida
https://people.clas.ufl.edu/skostyshak/


From arietencate at gmail.com  Thu Oct 12 13:48:40 2017
From: arietencate at gmail.com (Arie ten Cate)
Date: Thu, 12 Oct 2017 13:48:40 +0200
Subject: [Rd] Discourage the weights= option of lm with summarized data
In-Reply-To: <E784F4E0-01CE-4A09-8DD8-4F85FAC293AF@gmail.com>
References: <CACg-3uaGhq_RX5S7YQVz0KEx6G-MoVaFVXx_MWuP75qaWqw3mQ@mail.gmail.com>
 <3350d9cc415940f39ba36bd65e104ee0@UM-MAIL3216.unimaas.nl>
 <CACg-3uZMSoj5RBkREqzM6Dc-AiqMahHbQPMzP34KgoeQ7UmVHg@mail.gmail.com>
 <E784F4E0-01CE-4A09-8DD8-4F85FAC293AF@gmail.com>
Message-ID: <CACg-3uYd66Wbua3q71Hau4w6gHhJdENrnHVzNU_yd3z4XLa5gw@mail.gmail.com>

 OK. We have now three suggestions to repair the text:
 - remove the text
 - add "not" at the beginning of the text
 - add at the end of the text a warning; something like:

  "Note that in this case the standard estimates of the parameters are
in general not correct, and hence also the t values and the p value.
Also the number of degrees of freedom is not correct. (The parameter
values are correct.)"

A remark about the glm example: the Reference manual says: "For a
binomial GLM prior weights are used to give the number of trials when
the response is the proportion of successes ....".  Hence in the
binomial case the weights are frequencies.
With y <- 0.51 and w <- 100 you get the same result.

   Arie

On Mon, Oct 9, 2017 at 5:22 PM, peter dalgaard <pdalgd at gmail.com> wrote:
> AFAIR, it is a little more subtle than that.
>
> If you have replication weights, then the estimates are right, it is "just" that the SE from summary.lm() are wrong. Somehow, the text should reflect this.
>
> It is of some importance when you put glm() into the mix, because you can in fact get correct results from things like
>
> y <- c(0,1)
> w <- c(49,51)
> glm(y~1, weights=w, family=binomial)
>
> -pd
>
>> On 9 Oct 2017, at 07:58 , Arie ten Cate <arietencate at gmail.com> wrote:
>>
>> Yes.  Thank you; I should have quoted it.
>> I suggest to remove this text or to add the word "not" at the beginning.
>>
>>   Arie
>>
>> On Sun, Oct 8, 2017 at 4:38 PM, Viechtbauer Wolfgang (SP)
>> <wolfgang.viechtbauer at maastrichtuniversity.nl> wrote:
>>> Ah, I think you are referring to this part from ?lm:
>>>
>>> "(including the case that there are w_i observations equal to y_i and the data have been summarized)"
>>>
>>> I see; indeed, I don't think this is what 'weights' should be used for (the other part before that is correct). Sorry, I misunderstood the point you were trying to make.
>>>
>>> Best,
>>> Wolfgang
>>>
>>> -----Original Message-----
>>> From: R-devel [mailto:r-devel-bounces at r-project.org] On Behalf Of Arie ten Cate
>>> Sent: Sunday, 08 October, 2017 14:55
>>> To: r-devel at r-project.org
>>> Subject: [Rd] Discourage the weights= option of lm with summarized data
>>>
>>> Indeed: Using 'weights' is not meant to indicate that the same
>>> observation is repeated 'n' times.  As I showed, this gives erroneous
>>> results. Hence I suggested that it is discouraged rather than
>>> encouraged in the Details section of lm in the Reference manual.
>>>
>>>   Arie
>>>
>>> ---Original Message-----
>>> On Sat, 7 Oct 2017, wolfgang.viechtbauer at maastrichtuniversity.nl wrote:
>>>
>>> Using 'weights' is not meant to indicate that the same observation is
>>> repeated 'n' times. It is meant to indicate different variances (or to
>>> be precise, that the variance of the last observation in 'x' is
>>> sigma^2 / n, while the first three observations have variance
>>> sigma^2).
>>>
>>> Best,
>>> Wolfgang
>>>
>>> -----Original Message-----
>>> From: R-devel [mailto:r-devel-bounces at r-project.org] On Behalf Of Arie ten Cate
>>> Sent: Saturday, 07 October, 2017 9:36
>>> To: r-devel at r-project.org
>>> Subject: [Rd] Discourage the weights= option of lm with summarized data
>>>
>>> In the Details section of lm (linear models) in the Reference manual,
>>> it is suggested to use the weights= option for summarized data. This
>>> must be discouraged rather than encouraged. The motivation for this is
>>> as follows.
>>>
>>> With summarized data the standard errors get smaller with increasing
>>> numbers of observations. However, the standard errors in lm do not get
>>> smaller when for instance all weights are multiplied with the same
>>> constant larger than one, since the inverse weights are merely
>>> proportional to the error variances.
>>>
>>> Here is an example of the estimated standard errors being too large
>>> with the weights= option. The p value and the number of degrees of
>>> freedom are also wrong. The parameter estimates are correct.
>>>
>>>  n <- 10
>>>  x <- c(1,2,3,4)
>>>  y <- c(1,2,5,4)
>>>  w <- c(1,1,1,n)
>>>  xb <- c(x,rep(x[4],n-1))  # restore the original data
>>>  yb <- c(y,rep(y[4],n-1))
>>>  print(summary(lm(yb ~ xb)))
>>>  print(summary(lm(y ~ x, weights=w)))
>>>
>>> Compare with PROC REG in SAS, with a WEIGHT statement (like R) and a
>>> FREQ statement (for summarized data).
>>>
>>>    Arie
>>>
>>> ______________________________________________
>>> R-devel at r-project.org mailing list
>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>
>> ______________________________________________
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel
>
> --
> Peter Dalgaard, Professor,
> Center for Statistics, Copenhagen Business School
> Solbjerg Plads 3, 2000 Frederiksberg, Denmark
> Phone: (+45)38153501
> Office: A 4.23
> Email: pd.mes at cbs.dk  Priv: PDalgd at gmail.com
>
>
>
>
>
>
>
>
>


From tylermw at gmail.com  Thu Oct 12 19:12:23 2017
From: tylermw at gmail.com (Tyler)
Date: Thu, 12 Oct 2017 13:12:23 -0400
Subject: [Rd] Bug in model.matrix.default for higher-order interaction
 encoding when specific model terms are missing
Message-ID: <CAJhwqzSednCeya2JYMCr=TzC1WqiVjKCErmgYtKHESrpjJ=iKw@mail.gmail.com>

Hi,

I recently ran into an inconsistency in the way model.matrix.default
handles factor encoding for higher level interactions with categorical
variables when the full hierarchy of effects is not present. Depending on
which lower level interactions are specified, the factor encoding changes
for a higher level interaction. Consider the following minimal reproducible
example:

--------------

> runmatrix = expand.grid(X1=c(1,-1),X2=c(1,-1),X3=c("A","B","C"))> model.matrix(~(X1+X2+X3)^3,data=runmatrix)   (Intercept) X1 X2 X3B X3C X1:X2 X1:X3B X1:X3C X2:X3B X2:X3C X1:X2:X3B X1:X2:X3C
1            1  1  1   0   0     1      0      0      0      0
0         0
2            1 -1  1   0   0    -1      0      0      0      0
0         0
3            1  1 -1   0   0    -1      0      0      0      0
0         0
4            1 -1 -1   0   0     1      0      0      0      0
0         0
5            1  1  1   1   0     1      1      0      1      0
1         0
6            1 -1  1   1   0    -1     -1      0      1      0
-1         0
7            1  1 -1   1   0    -1      1      0     -1      0
-1         0
8            1 -1 -1   1   0     1     -1      0     -1      0
1         0
9            1  1  1   0   1     1      0      1      0      1
0         1
10           1 -1  1   0   1    -1      0     -1      0      1
0        -1
11           1  1 -1   0   1    -1      0      1      0     -1
0        -1
12           1 -1 -1   0   1     1      0     -1      0     -1
0         1
attr(,"assign")
 [1] 0 1 2 3 3 4 5 5 6 6 7 7
attr(,"contrasts")
attr(,"contrasts")$X3
[1] "contr.treatment"

--------------

Specifying the full hierarchy gives us what we expect: the interaction
columns are simply calculated from the product of the main effect columns.
The interaction term X1:X2:X3 gives us two columns in the model matrix,
X1:X2:X3B and X1:X2:X3C, matching the products of the main effects.

If we remove either the X2:X3 interaction or the X1:X3 interaction, we get
what we would expect for the X1:X2:X3 interaction, but when we remove the
X1:X2 interaction the encoding for X1:X2:X3 changes completely:

--------------

> model.matrix(~(X1+X2+X3)^3-X1:X3,data=runmatrix)   (Intercept) X1 X2 X3B X3C X1:X2 X2:X3B X2:X3C X1:X2:X3B X1:X2:X3C
1            1  1  1   0   0     1      0      0         0         0
2            1 -1  1   0   0    -1      0      0         0         0
3            1  1 -1   0   0    -1      0      0         0         0
4            1 -1 -1   0   0     1      0      0         0         0
5            1  1  1   1   0     1      1      0         1         0
6            1 -1  1   1   0    -1      1      0        -1         0
7            1  1 -1   1   0    -1     -1      0        -1         0
8            1 -1 -1   1   0     1     -1      0         1         0
9            1  1  1   0   1     1      0      1         0         1
10           1 -1  1   0   1    -1      0      1         0        -1
11           1  1 -1   0   1    -1      0     -1         0        -1
12           1 -1 -1   0   1     1      0     -1         0         1
attr(,"assign")
 [1] 0 1 2 3 3 4 5 5 6 6
attr(,"contrasts")
attr(,"contrasts")$X3
[1] "contr.treatment"



> model.matrix(~(X1+X2+X3)^3-X2:X3,data=runmatrix)   (Intercept) X1 X2 X3B X3C X1:X2 X1:X3B X1:X3C X1:X2:X3B X1:X2:X3C
1            1  1  1   0   0     1      0      0         0         0
2            1 -1  1   0   0    -1      0      0         0         0
3            1  1 -1   0   0    -1      0      0         0         0
4            1 -1 -1   0   0     1      0      0         0         0
5            1  1  1   1   0     1      1      0         1         0
6            1 -1  1   1   0    -1     -1      0        -1         0
7            1  1 -1   1   0    -1      1      0        -1         0
8            1 -1 -1   1   0     1     -1      0         1         0
9            1  1  1   0   1     1      0      1         0         1
10           1 -1  1   0   1    -1      0     -1         0        -1
11           1  1 -1   0   1    -1      0      1         0        -1
12           1 -1 -1   0   1     1      0     -1         0         1
attr(,"assign")
 [1] 0 1 2 3 3 4 5 5 6 6
attr(,"contrasts")
attr(,"contrasts")$X3
[1] "contr.treatment"


> model.matrix(~(X1+X2+X3)^3-X1:X2,data=runmatrix)   (Intercept) X1 X2 X3B X3C X1:X3B X1:X3C X2:X3B X2:X3C X1:X2:X3A X1:X2:X3B X1:X2:X3C
1            1  1  1   0   0      0      0      0      0         1
    0         0
2            1 -1  1   0   0      0      0      0      0        -1
    0         0
3            1  1 -1   0   0      0      0      0      0        -1
    0         0
4            1 -1 -1   0   0      0      0      0      0         1
    0         0
5            1  1  1   1   0      1      0      1      0         0
    1         0
6            1 -1  1   1   0     -1      0      1      0         0
   -1         0
7            1  1 -1   1   0      1      0     -1      0         0
   -1         0
8            1 -1 -1   1   0     -1      0     -1      0         0
    1         0
9            1  1  1   0   1      0      1      0      1         0
    0         1
10           1 -1  1   0   1      0     -1      0      1         0
    0        -1
11           1  1 -1   0   1      0      1      0     -1         0
    0        -1
12           1 -1 -1   0   1      0     -1      0     -1         0
    0         1
attr(,"assign")
 [1] 0 1 2 3 3 4 4 5 5 6 6 6
attr(,"contrasts")
attr(,"contrasts")$X3
[1] "contr.treatment"

--------------

Here, we now see the encoding for the interaction X1:X2:X3 is now the
interaction of X1 and X2 with a new encoding for X3 where each factor level
is represented by its own column. I would expect, given the two column
dummy variable encoding for X3, that the X1:X2:X3 column would also be two
columns regardless of what two-factor interactions we also specified, but
in this case it switches to three. If other two factor interactions are
missing in addition to X1:X2, this issue still occurs. This also happens
regardless of the contrast specified in contrasts.arg for X3. I don't see
any reasoning for this behavior given in the documentation, so I suspect it
is a bug.

Best regards,
Tyler Morgan-Wall

	[[alternative HTML version deleted]]


From stephen.berman at gmx.net  Sun Oct 15 01:53:12 2017
From: stephen.berman at gmx.net (Stephen Berman)
Date: Sun, 15 Oct 2017 01:53:12 +0200
Subject: [Rd] Another issue with Sys.timezone
Message-ID: <871sm570d3.fsf@gmx.net>

(I reported the test failure mentioned below to R-help but was advised
that this list is the right one to address the issue; in the meantime I
investigated the matter somewhat more closely, including searching
recent R-devel postings, since I haven't been following this list.)

Last May there were two reports here of problems with Sys.timezone, one
where the zoneinfo directory is in a nonstandard location
(https://stat.ethz.ch/pipermail/r-devel/2017-May/074267.html) and the
other where the system lacks the file /etc/localtime
(https://stat.ethz.ch/pipermail/r-devel/2017-May/074275.html).  My
system exhibits a third case: it lacks /etc/timezone and does not set TZ
systemwide, but it does have /etc/localtime, which is a copy of, rather
than a symlink to, a file under zoneinfo.  On this system Sys.timezone()
returns NA and the Sys.timezone test in reg-tests-1d fails.  However, on
my system I can get the (abbreviated) timezone in R by using as.POSIXlt,
e.g. as.POSIXlt(Sys.time())$zone.  If Sys.timezone took advantage of
this, e.g. as below, it would be useful on such systems as mine and the
regression test would pass.

my.Sys.timezone <- 
    function (location = TRUE) 
{
    tz <- Sys.getenv("TZ", names = FALSE)
    if (!location || nzchar(tz)) 
        return(Sys.getenv("TZ", unset = NA_character_))
    lt <- normalizePath("/etc/localtime")
    if (grepl(pat <- "^/usr/share/zoneinfo/", lt) ||
        grepl(pat <- "^/usr/share/zoneinfo.default/", lt)) 
        sub(pat, "", lt)
    else if (lt == "/etc/localtime")
        if (!file.exists("/etc/timezone"))
            return(as.POSIXlt(Sys.time())$zone)
        else if (dir.exists("/usr/share/zoneinfo") && {
            info <- file.info(normalizePath("/etc/timezone"), extra_cols = FALSE)
            (!info$isdir && info$size <= 200L)
        } && {
            tz1 <- tryCatch(readBin("/etc/timezone", "raw", 200L), 
                            error = function(e) raw(0L))
            length(tz1) > 0L && all(tz1 %in% as.raw(c(9:10, 13L, 32:126)))
        } && {
            tz2 <- gsub("^[[:space:]]+|[[:space:]]+$", "", rawToChar(tz1))
            tzp <- file.path("/usr/share/zoneinfo", tz2)
            file.exists(tzp) && !dir.exists(tzp) &&
                identical(file.size(normalizePath(tzp)), file.size(lt))
        }) 
            tz2
        else NA_character_
}

One problem with this is that the zone component of as.POSIXlt only
holds the abbreviated timezone, not the Olson name.  I don't know how to
get the Olson name using only R functions, but maybe it would be good
enough to return the abbreviated timezone where possible, e.g. as above.
(On my system I can get the Olson name of the timezone in R with a shell
pipeline, e.g.: system("find /usr/share/zoneinfo/ -type f | xargs md5sum
| grep $(md5sum /etc/localtime | cut -d ' ' -f 1) | head -n 1 | cut -d
'/' -f 5,6"), but the last part of this is tailored to my configuration
and the whole thing is not OS-neutral, so it isn't suitable for
Sys.timezone.)

Steve Berman


From arietencate at gmail.com  Sun Oct 15 07:49:59 2017
From: arietencate at gmail.com (Arie ten Cate)
Date: Sun, 15 Oct 2017 07:49:59 +0200
Subject: [Rd] Bug in model.matrix.default for higher-order interaction
 encoding when specific model terms are missing
In-Reply-To: <CAJhwqzSednCeya2JYMCr=TzC1WqiVjKCErmgYtKHESrpjJ=iKw@mail.gmail.com>
References: <CAJhwqzSednCeya2JYMCr=TzC1WqiVjKCErmgYtKHESrpjJ=iKw@mail.gmail.com>
Message-ID: <CACg-3uYnG8o+oeyvEebgy=ceZ2obbhvsByi-AUvDw=hBSfw9xA@mail.gmail.com>

I think it is not a bug. It is a general property of interactions.
This property is best observed if all variables are factors
(qualitative).

For example, you have three variables (factors). You ask for as many
interactions as possible, except an interaction term between two
particular variables. When this interaction is not a constant, it is
different for different values of the remaining variable. More
precisely: for all values of that variable. In other words: you have a
three-way interaction, with all values of that variable.

An even smaller example is the following script with only two
variables, each being a factor:

 df <- expand.grid(X1=c("p","q"), X2=c("A","B","C"))
 print(model.matrix(~(X1+X2)^2    ,data=df))
 print(model.matrix(~(X1+X2)^2 -X1,data=df))
 print(model.matrix(~(X1+X2)^2 -X2,data=df))

The result is:

  (Intercept) X1q X2B X2C X1q:X2B X1q:X2C
1           1   0   0   0       0       0
2           1   1   0   0       0       0
3           1   0   1   0       0       0
4           1   1   1   0       1       0
5           1   0   0   1       0       0
6           1   1   0   1       0       1

  (Intercept) X2B X2C X1q:X2A X1q:X2B X1q:X2C
1           1   0   0       0       0       0
2           1   0   0       1       0       0
3           1   1   0       0       0       0
4           1   1   0       0       1       0
5           1   0   1       0       0       0
6           1   0   1       0       0       1

  (Intercept) X1q X1p:X2B X1q:X2B X1p:X2C X1q:X2C
1           1   0       0       0       0       0
2           1   1       0       0       0       0
3           1   0       1       0       0       0
4           1   1       0       1       0       0
5           1   0       0       0       1       0
6           1   1       0       0       0       1

Thus, in the second result, we have no main effect of X1. Instead, the
effect of X1 depends on the value of X2; either A or B or C. In fact,
this is a two-way interaction, including all three values of X2. In
the third result, we have no main effect of X2, The effect of X2
depends on the value of X1; either p or q.

A complicating element with your example seems to be that your X1 and
X2 are not factors.

   Arie

On Thu, Oct 12, 2017 at 7:12 PM, Tyler <tylermw at gmail.com> wrote:
> Hi,
>
> I recently ran into an inconsistency in the way model.matrix.default
> handles factor encoding for higher level interactions with categorical
> variables when the full hierarchy of effects is not present. Depending on
> which lower level interactions are specified, the factor encoding changes
> for a higher level interaction. Consider the following minimal reproducible
> example:
>
> --------------
>
>> runmatrix = expand.grid(X1=c(1,-1),X2=c(1,-1),X3=c("A","B","C"))> model.matrix(~(X1+X2+X3)^3,data=runmatrix)   (Intercept) X1 X2 X3B X3C X1:X2 X1:X3B X1:X3C X2:X3B X2:X3C X1:X2:X3B X1:X2:X3C
> 1            1  1  1   0   0     1      0      0      0      0
> 0         0
> 2            1 -1  1   0   0    -1      0      0      0      0
> 0         0
> 3            1  1 -1   0   0    -1      0      0      0      0
> 0         0
> 4            1 -1 -1   0   0     1      0      0      0      0
> 0         0
> 5            1  1  1   1   0     1      1      0      1      0
> 1         0
> 6            1 -1  1   1   0    -1     -1      0      1      0
> -1         0
> 7            1  1 -1   1   0    -1      1      0     -1      0
> -1         0
> 8            1 -1 -1   1   0     1     -1      0     -1      0
> 1         0
> 9            1  1  1   0   1     1      0      1      0      1
> 0         1
> 10           1 -1  1   0   1    -1      0     -1      0      1
> 0        -1
> 11           1  1 -1   0   1    -1      0      1      0     -1
> 0        -1
> 12           1 -1 -1   0   1     1      0     -1      0     -1
> 0         1
> attr(,"assign")
>  [1] 0 1 2 3 3 4 5 5 6 6 7 7
> attr(,"contrasts")
> attr(,"contrasts")$X3
> [1] "contr.treatment"
>
> --------------
>
> Specifying the full hierarchy gives us what we expect: the interaction
> columns are simply calculated from the product of the main effect columns.
> The interaction term X1:X2:X3 gives us two columns in the model matrix,
> X1:X2:X3B and X1:X2:X3C, matching the products of the main effects.
>
> If we remove either the X2:X3 interaction or the X1:X3 interaction, we get
> what we would expect for the X1:X2:X3 interaction, but when we remove the
> X1:X2 interaction the encoding for X1:X2:X3 changes completely:
>
> --------------
>
>> model.matrix(~(X1+X2+X3)^3-X1:X3,data=runmatrix)   (Intercept) X1 X2 X3B X3C X1:X2 X2:X3B X2:X3C X1:X2:X3B X1:X2:X3C
> 1            1  1  1   0   0     1      0      0         0         0
> 2            1 -1  1   0   0    -1      0      0         0         0
> 3            1  1 -1   0   0    -1      0      0         0         0
> 4            1 -1 -1   0   0     1      0      0         0         0
> 5            1  1  1   1   0     1      1      0         1         0
> 6            1 -1  1   1   0    -1      1      0        -1         0
> 7            1  1 -1   1   0    -1     -1      0        -1         0
> 8            1 -1 -1   1   0     1     -1      0         1         0
> 9            1  1  1   0   1     1      0      1         0         1
> 10           1 -1  1   0   1    -1      0      1         0        -1
> 11           1  1 -1   0   1    -1      0     -1         0        -1
> 12           1 -1 -1   0   1     1      0     -1         0         1
> attr(,"assign")
>  [1] 0 1 2 3 3 4 5 5 6 6
> attr(,"contrasts")
> attr(,"contrasts")$X3
> [1] "contr.treatment"
>
>
>
>> model.matrix(~(X1+X2+X3)^3-X2:X3,data=runmatrix)   (Intercept) X1 X2 X3B X3C X1:X2 X1:X3B X1:X3C X1:X2:X3B X1:X2:X3C
> 1            1  1  1   0   0     1      0      0         0         0
> 2            1 -1  1   0   0    -1      0      0         0         0
> 3            1  1 -1   0   0    -1      0      0         0         0
> 4            1 -1 -1   0   0     1      0      0         0         0
> 5            1  1  1   1   0     1      1      0         1         0
> 6            1 -1  1   1   0    -1     -1      0        -1         0
> 7            1  1 -1   1   0    -1      1      0        -1         0
> 8            1 -1 -1   1   0     1     -1      0         1         0
> 9            1  1  1   0   1     1      0      1         0         1
> 10           1 -1  1   0   1    -1      0     -1         0        -1
> 11           1  1 -1   0   1    -1      0      1         0        -1
> 12           1 -1 -1   0   1     1      0     -1         0         1
> attr(,"assign")
>  [1] 0 1 2 3 3 4 5 5 6 6
> attr(,"contrasts")
> attr(,"contrasts")$X3
> [1] "contr.treatment"
>
>
>> model.matrix(~(X1+X2+X3)^3-X1:X2,data=runmatrix)   (Intercept) X1 X2 X3B X3C X1:X3B X1:X3C X2:X3B X2:X3C X1:X2:X3A X1:X2:X3B X1:X2:X3C
> 1            1  1  1   0   0      0      0      0      0         1
>     0         0
> 2            1 -1  1   0   0      0      0      0      0        -1
>     0         0
> 3            1  1 -1   0   0      0      0      0      0        -1
>     0         0
> 4            1 -1 -1   0   0      0      0      0      0         1
>     0         0
> 5            1  1  1   1   0      1      0      1      0         0
>     1         0
> 6            1 -1  1   1   0     -1      0      1      0         0
>    -1         0
> 7            1  1 -1   1   0      1      0     -1      0         0
>    -1         0
> 8            1 -1 -1   1   0     -1      0     -1      0         0
>     1         0
> 9            1  1  1   0   1      0      1      0      1         0
>     0         1
> 10           1 -1  1   0   1      0     -1      0      1         0
>     0        -1
> 11           1  1 -1   0   1      0      1      0     -1         0
>     0        -1
> 12           1 -1 -1   0   1      0     -1      0     -1         0
>     0         1
> attr(,"assign")
>  [1] 0 1 2 3 3 4 4 5 5 6 6 6
> attr(,"contrasts")
> attr(,"contrasts")$X3
> [1] "contr.treatment"
>
> --------------
>
> Here, we now see the encoding for the interaction X1:X2:X3 is now the
> interaction of X1 and X2 with a new encoding for X3 where each factor level
> is represented by its own column. I would expect, given the two column
> dummy variable encoding for X3, that the X1:X2:X3 column would also be two
> columns regardless of what two-factor interactions we also specified, but
> in this case it switches to three. If other two factor interactions are
> missing in addition to X1:X2, this issue still occurs. This also happens
> regardless of the contrast specified in contrasts.arg for X3. I don't see
> any reasoning for this behavior given in the documentation, so I suspect it
> is a bug.
>
> Best regards,
> Tyler Morgan-Wall
>
>         [[alternative HTML version deleted]]
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From suharto_anggono at yahoo.com  Sun Oct 15 18:03:48 2017
From: suharto_anggono at yahoo.com (Suharto Anggono Suharto Anggono)
Date: Sun, 15 Oct 2017 16:03:48 +0000 (UTC)
Subject: [Rd] Function 'factor' issues
References: <1556284175.229014.1508083428562.ref@mail.yahoo.com>
Message-ID: <1556284175.229014.1508083428562@mail.yahoo.com>

In R devel, function 'factor' has been changed, allowing and merging duplicated 'labels'.

Issue 1: Handling of specified 'labels' without duplicates is slower than before.
Example:
x <- rep(1:26, 40000)
system.time(factor(x, levels=1:26, labels=letters))

Function 'factor' is already rather slow because of conversion to character. Please don't add slowdown.

Issue 2: While default 'labels' is 'levels', not specifying 'labels' may be different from specifying 'labels' to be the same as 'levels'.

Example 1:
as.integer(factor(c(NA,2,3), levels = c(2, NA), exclude = NULL))
is different from
as.integer(factor(c(NA,2,3), levels = c(2, NA), labels = c(2, NA), exclude = NULL))

File reg-tests-1d.R indicates that 'factor' behavior with NA is slightly changed, for the better. NA entry (because it is unmatched to 'levels' argument or is in 'exclude') is absorbed into NA in "levels" attribute (comes from 'labels' argument), if any. The issue is that it happens only when 'labels' is specified.

Function 'factor' could use match(xlevs, nlevs)[f]. It doesn't match NA to NA level. When 'f' is long enough, longer than 'xlevs', it is faster than match(xlevs[f], nlevs).

Example 2:
With
levs <- c("A","A")? ,
factor(levs, levels=levs)
gives error, but
factor(levs, levels=levs, labels=levs)
doesn't.

Note: In theory, if function 'factor' merged duplicated 'labels' in all cases, at least in
factor(c(sqrt(2)^2, 2))? ,
function 'factor' could do matching on original 'x' (without conversion to character), as in R before version 2.10.0. If function 'factor' did it,
factor(c(sqrt(2)^2, 2), levels = c(sqrt(2)^2, 2), labels = c("sqrt(2)^2", "2"))
could take sqrt(2)^2 and 2 as distinct.


Another thing: Function 'factor' in R devel uses 'order' instead of 'sort.list'.

The case of as.factor(x) for
x <- as.data.frame(character(0))
in tests/isas-tests.Rout.save reveals that 'order' on data frame is strange.

x <- as.data.frame(character(0))
y <- unique(x)
length(y)? # 1
length(order(y))? # 0
length(as.character(y))? # 1

order(y) is not as long as as.character(y).

Another example:
length(mtcars)? # 11
length(order(mtcars))? # 352


From tylermw at gmail.com  Sun Oct 15 19:05:28 2017
From: tylermw at gmail.com (Tyler)
Date: Sun, 15 Oct 2017 13:05:28 -0400
Subject: [Rd] Bug in model.matrix.default for higher-order interaction
 encoding when specific model terms are missing
In-Reply-To: <CACg-3uYnG8o+oeyvEebgy=ceZ2obbhvsByi-AUvDw=hBSfw9xA@mail.gmail.com>
References: <CAJhwqzSednCeya2JYMCr=TzC1WqiVjKCErmgYtKHESrpjJ=iKw@mail.gmail.com>
 <CACg-3uYnG8o+oeyvEebgy=ceZ2obbhvsByi-AUvDw=hBSfw9xA@mail.gmail.com>
Message-ID: <CAJhwqzSSONKWu+qGDyVOWN4Mc1RNVcJALjuUxfhnrPaOdBFAQg@mail.gmail.com>

You could possibly try to explain away the behavior for a missing main
effects term, since without the main effects term we don't have main effect
columns in the model matrix used to compute the interaction columns (At
best this is undocumented behavior--I still think it's a bug, as we know
how we would encode the categorical factors if they were in fact present.
It's either specified in contrasts.arg or using the default set in
options). However, when all the main effects are present, why would the
three-factor interaction column not simply be the product of the main
effect columns? In my example: we know X1, we know X2, and we know X3. Why
does the encoding of X1:X2:X3 depend on whether we specified a two-factor
interaction, AND only changes for specific missing interactions?

In addition, I can use a two-term example similar to yours to show how this
behavior results in a singular covariance matrix when, given the desired
factor encoding, it should not be singular.

We start with a full factorial design for a two-level continuous factor and
a three-level categorical factor, and remove a single row. This design
matrix does not leave enough degrees of freedom to determine
goodness-of-fit, but should allow us to obtain parameter estimates.

> design = expand.grid(X1=c(1,-1),X2=c("A","B","C"))
> design = design[-1,]
> design
  X1 X2
2 -1  A
3  1  B
4 -1  B
5  1  C
6 -1  C

Here, we first calculate the model matrix for the full model, and then
manually remove the X1 column from the model matrix. This gives us the
model matrix one would expect if X1 were removed from the model. We then
successfully calculate the covariance matrix.

> mm = model.matrix(~(X1+X2)^2,data=design)
> mm
  (Intercept) X1 X2B X2C X1:X2B X1:X2C
2           1 -1   0   0      0      0
3           1  1   1   0      1      0
4           1 -1   1   0     -1      0
5           1  1   0   1      0      1
6           1 -1   0   1      0     -1

> mm = mm[,-2]
> solve(t(mm) %*% mm)
            (Intercept)  X2B  X2C X1:X2B X1:X2C
(Intercept)           1 -1.0 -1.0    0.0    0.0
X2B                  -1  1.5  1.0    0.0    0.0
X2C                  -1  1.0  1.5    0.0    0.0
X1:X2B                0  0.0  0.0    0.5    0.0
X1:X2C                0  0.0  0.0    0.0    0.5

Here, we see the actual behavior for model.matrix. The undesired re-coding
of the model matrix interaction term makes the information matrix singular.

> mm = model.matrix(~(X1+X2)^2-X1,data=design)
> mm
  (Intercept) X2B X2C X1:X2A X1:X2B X1:X2C
2           1   0   0     -1      0      0
3           1   1   0      0      1      0
4           1   1   0      0     -1      0
5           1   0   1      0      0      1
6           1   0   1      0      0     -1

> solve(t(mm) %*% mm)
Error in solve.default(t(mm) %*% mm) : system is computationally singular:
reciprocal condition number = 5.55112e-18

I still believe this is a bug.

Best regards,
Tyler Morgan-Wall

On Sun, Oct 15, 2017 at 1:49 AM, Arie ten Cate <arietencate at gmail.com>
wrote:

> I think it is not a bug. It is a general property of interactions.
> This property is best observed if all variables are factors
> (qualitative).
>
> For example, you have three variables (factors). You ask for as many
> interactions as possible, except an interaction term between two
> particular variables. When this interaction is not a constant, it is
> different for different values of the remaining variable. More
> precisely: for all values of that variable. In other words: you have a
> three-way interaction, with all values of that variable.
>
> An even smaller example is the following script with only two
> variables, each being a factor:
>
>  df <- expand.grid(X1=c("p","q"), X2=c("A","B","C"))
>  print(model.matrix(~(X1+X2)^2    ,data=df))
>  print(model.matrix(~(X1+X2)^2 -X1,data=df))
>  print(model.matrix(~(X1+X2)^2 -X2,data=df))
>
> The result is:
>
>   (Intercept) X1q X2B X2C X1q:X2B X1q:X2C
> 1           1   0   0   0       0       0
> 2           1   1   0   0       0       0
> 3           1   0   1   0       0       0
> 4           1   1   1   0       1       0
> 5           1   0   0   1       0       0
> 6           1   1   0   1       0       1
>
>   (Intercept) X2B X2C X1q:X2A X1q:X2B X1q:X2C
> 1           1   0   0       0       0       0
> 2           1   0   0       1       0       0
> 3           1   1   0       0       0       0
> 4           1   1   0       0       1       0
> 5           1   0   1       0       0       0
> 6           1   0   1       0       0       1
>
>   (Intercept) X1q X1p:X2B X1q:X2B X1p:X2C X1q:X2C
> 1           1   0       0       0       0       0
> 2           1   1       0       0       0       0
> 3           1   0       1       0       0       0
> 4           1   1       0       1       0       0
> 5           1   0       0       0       1       0
> 6           1   1       0       0       0       1
>
> Thus, in the second result, we have no main effect of X1. Instead, the
> effect of X1 depends on the value of X2; either A or B or C. In fact,
> this is a two-way interaction, including all three values of X2. In
> the third result, we have no main effect of X2, The effect of X2
> depends on the value of X1; either p or q.
>
> A complicating element with your example seems to be that your X1 and
> X2 are not factors.
>
>    Arie
>
> On Thu, Oct 12, 2017 at 7:12 PM, Tyler <tylermw at gmail.com> wrote:
> > Hi,
> >
> > I recently ran into an inconsistency in the way model.matrix.default
> > handles factor encoding for higher level interactions with categorical
> > variables when the full hierarchy of effects is not present. Depending on
> > which lower level interactions are specified, the factor encoding changes
> > for a higher level interaction. Consider the following minimal
> reproducible
> > example:
> >
> > --------------
> >
> >> runmatrix = expand.grid(X1=c(1,-1),X2=c(1,-1),X3=c("A","B","C"))>
> model.matrix(~(X1+X2+X3)^3,data=runmatrix)   (Intercept) X1 X2 X3B X3C
> X1:X2 X1:X3B X1:X3C X2:X3B X2:X3C X1:X2:X3B X1:X2:X3C
> > 1            1  1  1   0   0     1      0      0      0      0
> > 0         0
> > 2            1 -1  1   0   0    -1      0      0      0      0
> > 0         0
> > 3            1  1 -1   0   0    -1      0      0      0      0
> > 0         0
> > 4            1 -1 -1   0   0     1      0      0      0      0
> > 0         0
> > 5            1  1  1   1   0     1      1      0      1      0
> > 1         0
> > 6            1 -1  1   1   0    -1     -1      0      1      0
> > -1         0
> > 7            1  1 -1   1   0    -1      1      0     -1      0
> > -1         0
> > 8            1 -1 -1   1   0     1     -1      0     -1      0
> > 1         0
> > 9            1  1  1   0   1     1      0      1      0      1
> > 0         1
> > 10           1 -1  1   0   1    -1      0     -1      0      1
> > 0        -1
> > 11           1  1 -1   0   1    -1      0      1      0     -1
> > 0        -1
> > 12           1 -1 -1   0   1     1      0     -1      0     -1
> > 0         1
> > attr(,"assign")
> >  [1] 0 1 2 3 3 4 5 5 6 6 7 7
> > attr(,"contrasts")
> > attr(,"contrasts")$X3
> > [1] "contr.treatment"
> >
> > --------------
> >
> > Specifying the full hierarchy gives us what we expect: the interaction
> > columns are simply calculated from the product of the main effect
> columns.
> > The interaction term X1:X2:X3 gives us two columns in the model matrix,
> > X1:X2:X3B and X1:X2:X3C, matching the products of the main effects.
> >
> > If we remove either the X2:X3 interaction or the X1:X3 interaction, we
> get
> > what we would expect for the X1:X2:X3 interaction, but when we remove the
> > X1:X2 interaction the encoding for X1:X2:X3 changes completely:
> >
> > --------------
> >
> >> model.matrix(~(X1+X2+X3)^3-X1:X3,data=runmatrix)   (Intercept) X1 X2
> X3B X3C X1:X2 X2:X3B X2:X3C X1:X2:X3B X1:X2:X3C
> > 1            1  1  1   0   0     1      0      0         0         0
> > 2            1 -1  1   0   0    -1      0      0         0         0
> > 3            1  1 -1   0   0    -1      0      0         0         0
> > 4            1 -1 -1   0   0     1      0      0         0         0
> > 5            1  1  1   1   0     1      1      0         1         0
> > 6            1 -1  1   1   0    -1      1      0        -1         0
> > 7            1  1 -1   1   0    -1     -1      0        -1         0
> > 8            1 -1 -1   1   0     1     -1      0         1         0
> > 9            1  1  1   0   1     1      0      1         0         1
> > 10           1 -1  1   0   1    -1      0      1         0        -1
> > 11           1  1 -1   0   1    -1      0     -1         0        -1
> > 12           1 -1 -1   0   1     1      0     -1         0         1
> > attr(,"assign")
> >  [1] 0 1 2 3 3 4 5 5 6 6
> > attr(,"contrasts")
> > attr(,"contrasts")$X3
> > [1] "contr.treatment"
> >
> >
> >
> >> model.matrix(~(X1+X2+X3)^3-X2:X3,data=runmatrix)   (Intercept) X1 X2
> X3B X3C X1:X2 X1:X3B X1:X3C X1:X2:X3B X1:X2:X3C
> > 1            1  1  1   0   0     1      0      0         0         0
> > 2            1 -1  1   0   0    -1      0      0         0         0
> > 3            1  1 -1   0   0    -1      0      0         0         0
> > 4            1 -1 -1   0   0     1      0      0         0         0
> > 5            1  1  1   1   0     1      1      0         1         0
> > 6            1 -1  1   1   0    -1     -1      0        -1         0
> > 7            1  1 -1   1   0    -1      1      0        -1         0
> > 8            1 -1 -1   1   0     1     -1      0         1         0
> > 9            1  1  1   0   1     1      0      1         0         1
> > 10           1 -1  1   0   1    -1      0     -1         0        -1
> > 11           1  1 -1   0   1    -1      0      1         0        -1
> > 12           1 -1 -1   0   1     1      0     -1         0         1
> > attr(,"assign")
> >  [1] 0 1 2 3 3 4 5 5 6 6
> > attr(,"contrasts")
> > attr(,"contrasts")$X3
> > [1] "contr.treatment"
> >
> >
> >> model.matrix(~(X1+X2+X3)^3-X1:X2,data=runmatrix)   (Intercept) X1 X2
> X3B X3C X1:X3B X1:X3C X2:X3B X2:X3C X1:X2:X3A X1:X2:X3B X1:X2:X3C
> > 1            1  1  1   0   0      0      0      0      0         1
> >     0         0
> > 2            1 -1  1   0   0      0      0      0      0        -1
> >     0         0
> > 3            1  1 -1   0   0      0      0      0      0        -1
> >     0         0
> > 4            1 -1 -1   0   0      0      0      0      0         1
> >     0         0
> > 5            1  1  1   1   0      1      0      1      0         0
> >     1         0
> > 6            1 -1  1   1   0     -1      0      1      0         0
> >    -1         0
> > 7            1  1 -1   1   0      1      0     -1      0         0
> >    -1         0
> > 8            1 -1 -1   1   0     -1      0     -1      0         0
> >     1         0
> > 9            1  1  1   0   1      0      1      0      1         0
> >     0         1
> > 10           1 -1  1   0   1      0     -1      0      1         0
> >     0        -1
> > 11           1  1 -1   0   1      0      1      0     -1         0
> >     0        -1
> > 12           1 -1 -1   0   1      0     -1      0     -1         0
> >     0         1
> > attr(,"assign")
> >  [1] 0 1 2 3 3 4 4 5 5 6 6 6
> > attr(,"contrasts")
> > attr(,"contrasts")$X3
> > [1] "contr.treatment"
> >
> > --------------
> >
> > Here, we now see the encoding for the interaction X1:X2:X3 is now the
> > interaction of X1 and X2 with a new encoding for X3 where each factor
> level
> > is represented by its own column. I would expect, given the two column
> > dummy variable encoding for X3, that the X1:X2:X3 column would also be
> two
> > columns regardless of what two-factor interactions we also specified, but
> > in this case it switches to three. If other two factor interactions are
> > missing in addition to X1:X2, this issue still occurs. This also happens
> > regardless of the contrast specified in contrasts.arg for X3. I don't see
> > any reasoning for this behavior given in the documentation, so I suspect
> it
> > is a bug.
> >
> > Best regards,
> > Tyler Morgan-Wall
> >
> >         [[alternative HTML version deleted]]
> >
> > ______________________________________________
> > R-devel at r-project.org mailing list
> > https://stat.ethz.ch/mailman/listinfo/r-devel
>

	[[alternative HTML version deleted]]


From maechler at stat.math.ethz.ch  Mon Oct 16 19:13:31 2017
From: maechler at stat.math.ethz.ch (Martin Maechler)
Date: Mon, 16 Oct 2017 19:13:31 +0200
Subject: [Rd] Another issue with Sys.timezone
In-Reply-To: <871sm570d3.fsf@gmx.net>
References: <871sm570d3.fsf@gmx.net>
Message-ID: <23012.59579.35802.920274@stat.math.ethz.ch>

>>>>> Stephen Berman <stephen.berman at gmx.net>
>>>>>     on Sun, 15 Oct 2017 01:53:12 +0200 writes:

    > (I reported the test failure mentioned below to R-help but was advised
    > that this list is the right one to address the issue; in the meantime I
    > investigated the matter somewhat more closely, including searching
    > recent R-devel postings, since I haven't been following this list.)

    > Last May there were two reports here of problems with Sys.timezone, one
    > where the zoneinfo directory is in a nonstandard location
    > (https://stat.ethz.ch/pipermail/r-devel/2017-May/074267.html) and the
    > other where the system lacks the file /etc/localtime
    > (https://stat.ethz.ch/pipermail/r-devel/2017-May/074275.html).  My
    > system exhibits a third case: it lacks /etc/timezone and does not set TZ
    > systemwide, but it does have /etc/localtime, which is a copy of, rather
    > than a symlink to, a file under zoneinfo.  On this system Sys.timezone()
    > returns NA and the Sys.timezone test in reg-tests-1d fails.  However, on
    > my system I can get the (abbreviated) timezone in R by using as.POSIXlt,
    > e.g. as.POSIXlt(Sys.time())$zone.  If Sys.timezone took advantage of
    > this, e.g. as below, it would be useful on such systems as mine and the
    > regression test would pass.

    > my.Sys.timezone <- 
    > 	function (location = TRUE) 
    > {
    > 	tz <- Sys.getenv("TZ", names = FALSE)
    > 	if (!location || nzchar(tz)) 
    > 	    return(Sys.getenv("TZ", unset = NA_character_))
    > 	lt <- normalizePath("/etc/localtime")
    > 	if (grepl(pat <- "^/usr/share/zoneinfo/", lt) ||
    > 	    grepl(pat <- "^/usr/share/zoneinfo.default/", lt)) 
    > 	    sub(pat, "", lt)
    > 	else if (lt == "/etc/localtime")
    > 	    if (!file.exists("/etc/timezone"))
    > 		return(as.POSIXlt(Sys.time())$zone)
    > 	    else if (dir.exists("/usr/share/zoneinfo") && {
    > 		info <- file.info(normalizePath("/etc/timezone"), extra_cols = FALSE)
    > 		(!info$isdir && info$size <= 200L)
    > 	    } && {
    > 		tz1 <- tryCatch(readBin("/etc/timezone", "raw", 200L), 
    > 				error = function(e) raw(0L))
    > 		length(tz1) > 0L && all(tz1 %in% as.raw(c(9:10, 13L, 32:126)))
    > 	    } && {
    > 		tz2 <- gsub("^[[:space:]]+|[[:space:]]+$", "", rawToChar(tz1))
    > 		tzp <- file.path("/usr/share/zoneinfo", tz2)
    > 		file.exists(tzp) && !dir.exists(tzp) &&
    > 		    identical(file.size(normalizePath(tzp)), file.size(lt))
    > 	    }) 
    > 		tz2
    > 	    else NA_character_
    > }

    > One problem with this is that the zone component of as.POSIXlt only
    > holds the abbreviated timezone, not the Olson name.  

Yes, indeed.  So, really only for  Sys.timezone(location = FALSE)  this
should be given, for the default  location = TRUE   it should
still give NA (i.e. NA_character_)  in your setup.

Interestingly, the Windows versions of Sys.timezone(location =
FALSE) uses something like your proposal,  and I tend to think that
-- again only for location=FALSE -- this should be used on
on-Windows as well, at least instead of returning  NA  then.

Also for me on 3 different Linuxen (Fedora 24, F. 26, and ubuntu
14.04 LTS), I get

  > Sys.timezone()
  [1] "Europe/Zurich"
  > Sys.timezone(FALSE)
  [1] NA
  > 

whereas on Windows I get Europe/Berlin for the first (why on
earth - I'm really in Zurich) and get  "CEST" ("Central European Summer Time") 
for the 2nd one instead of NA ... simply using a smarter version
of your proposal.   The windows source is
in R's source at  src/library/base/R/windows/system.R :

Sys.timezone <- function(location = TRUE)
{
    tz <- Sys.getenv("TZ", names = FALSE)
    if(nzchar(tz)) return(tz)
    if(location) return(.Internal(tzone_name()))
    z <- as.POSIXlt(Sys.time())
    zz <- attr(z, "tzone")
    if(length(zz) == 3L) zz[2L + z$isdst] else zz[1L]
}

>From what I read, the last three lines also work in your setup
where it seems zz would be of length 1, right ?

I'd really propose to use these 3 lines in the non-Windows
version of Sys.timezone .. at the end *instead* of NA_character_
(or a slightly safer version which gives  NA_character_ if zz is
of length 0 {e.g. if there is no "tzone" attribute}.

    > i don't know how to
    > get the Olson name using only R functions, but maybe it would be good
    > enough to return the abbreviated timezone where possible, e.g. as above.
    > (On my system I can get the Olson name of the timezone in R with a shell
    > pipeline, e.g.: system("find /usr/share/zoneinfo/ -type f | xargs md5sum
    > | grep $(md5sum /etc/localtime | cut -d ' ' -f 1) | head -n 1 | cut -d
    > '/' -f 5,6"), but the last part of this is tailored to my configuration
    > and the whole thing is not OS-neutral, so it isn't suitable for
    > Sys.timezone.)

    > Steve Berman

Definitely not.  I still recommend you think of a more portable
solution for the   `location = TRUE` (default) case in Sys.timezone().
Returning the non-location form (e.g "CEST") when something like
"Europe/Zurich" is expected is really not a good idea,
and you are lucky that the regression test passes "accidentally" ...

Martin

--
Martin <Maechler at stat.math.ethz.ch>   http://stat.ethz.ch/~maechler
Seminar f?r Statistik, ETH Z?rich
and R Core Team


From tomas.kalibera at gmail.com  Tue Oct 17 10:37:28 2017
From: tomas.kalibera at gmail.com (Tomas Kalibera)
Date: Tue, 17 Oct 2017 10:37:28 +0200
Subject: [Rd] Bug: Issues on Windows with SFN disabled
In-Reply-To: <CAD7tZLXB=73wY9tqLmYhTXyBB9DMO1WZXGz3U9pHz9KgEX4K=Q@mail.gmail.com>
References: <CAD7tZLXB=73wY9tqLmYhTXyBB9DMO1WZXGz3U9pHz9KgEX4K=Q@mail.gmail.com>
Message-ID: <34ec506d-bec1-544f-9067-2109bd0db1e5@gmail.com>

Hi Zach,

thanks for the report, I can reproduce the problem and confirm it is a 
bug in R and will be fixed.

Hopefully it only impacts few users now. The workaround is to create the 
short name for the directory where R is installed, using "fsutil file 
setshortname" (for all elements of the path that contain space in their 
name). One can revert this by setting the shortname to an empty string 
(""). At least for the latter one may need to boot in safe mode.

Best
Tomas


On 09/17/2017 08:23 PM, Zach Bjornson wrote:
> Hello,
>
> R appears to assume that Windows drives have short file names (SFN, 8.3)
> enabled; for example, that "C:/Program Files/..." is addressable as
> "C:/Progra~1/...". Newer versions of Windows have SFN disabled on non-OS
> drives, however.
>
> This means that if you install R on a non-OS drive, you
> - can't start R.exe from the command line.
> - consequently, anything that attempts to spawn a new R process also fails.
> This includes a lot of the commands from the popular devtools package. More
> discussion and background: https://github.com/hadley/devtools/issues/1514
>
> I don't have access to bugzilla to file this there.
>
> Thanks and best,
> Zach
>
> 	[[alternative HTML version deleted]]
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From ruzankin at math.nsc.ru  Tue Oct 17 19:55:01 2017
From: ruzankin at math.nsc.ru (Pavel S. Ruzankin)
Date: Tue, 17 Oct 2017 17:55:01 +0000
Subject: [Rd] uniform sampling without replacement algorithm
Message-ID: <2209d0a9-3e02-00ec-b0e8-c36120b31f70@math.nsc.ru>

Let us consider the current uniform sampling without replacement 
algorithm. It resides in function do_sample in
https://svn.r-project.org/R/trunk/src/main/random.c
Its complexity is obviously O(n), where the sample is selected from 
1...n, since the algorithm has to create a vector of length n. So when 
the sample size is much lesser than n, the algorithm is not effective. 
Algorithms with average complexity O(s log s), were s is the sample 
size, were described long ago. E.g. see
https://www.degruyter.com/view/j/mcma.1999.5.issue-1/mcma.1999.5.1.39/mcma.1999.5.1.39.xml
Here the Tree algorithm has complexity O(s log s). I suppose that there 
may be algorithms with complexity close to s. Is somebody planning to 
implement some more effective algorithm?


From ruzankin at math.nsc.ru  Wed Oct 18 10:08:14 2017
From: ruzankin at math.nsc.ru (Pavel S. Ruzankin)
Date: Wed, 18 Oct 2017 15:08:14 +0700
Subject: [Rd] uniform sampling without replacement algorithm
In-Reply-To: <2209d0a9-3e02-00ec-b0e8-c36120b31f70@math.nsc.ru>
References: <2209d0a9-3e02-00ec-b0e8-c36120b31f70@math.nsc.ru>
Message-ID: <926b3e0b-0129-b03a-ae94-701e2fdb69f1@math.nsc.ru>

If somebody is interested I can write the code. But somebody else has to 
add the code for handling int / long int / double cases, since I do not 
have enough experience in that.


From earo.wang at gmail.com  Wed Oct 18 10:34:14 2017
From: earo.wang at gmail.com (Earo Wang)
Date: Wed, 18 Oct 2017 08:34:14 +0000
Subject: [Rd] A wrapper of seq.Date() encounters an issue
Message-ID: <CALRQZVmweHhkb56FrnrwMLx29SZjBf9XTk1JN+a_+ASLP2s++Q@mail.gmail.com>

Hello,

I?ve tried to have a wrapper function of seq.Date(), saying seq_date(). The
seq_date() function takes exactly the same arguments and the defaults as
seq.Date(). The seq_date() is expected to return the same results as
seq.Date(), but it triggers an error in seq.Date(). The little reproducible
example shows below:

seq_date <- function(from, to, by, length.out = NULL, along.with = NULL) {
  seq.Date(
    from = from, to = to, by = by,
    length.out = length.out, along.with = along.with
  )
}
start <- as.Date("2017-10-01")
end <- as.Date("2017-10-18")
seq_date(from = start, to = end, by = 1)#> Error in seq.Date(from =
from, to = to, by = by, length.out = length.out, : exactly two of
'to', 'by' and 'length.out' / 'along.with' must be specified
seq.Date(from = start, to = end, by = 1)#>  [1] "2017-10-01"
"2017-10-02" "2017-10-03" "2017-10-04" "2017-10-05"#>  [6]
"2017-10-06" "2017-10-07" "2017-10-08" "2017-10-09" "2017-10-10"#>
[11] "2017-10-11" "2017-10-12" "2017-10-13" "2017-10-14"
"2017-10-15"#> [16] "2017-10-16" "2017-10-17" "2017-10-18"

I think that the unexpected issue arises from missing(along.with) inside
the seq.Date() function. The documentation of missing() explains that it
can only be used in the immediate body of the function, not in the body of
a nested function. This is probably the reason that the wrapper seq_date()
fails. It would fix the issue by using is.null(along.with) instead of
missing(along.with). I?ve also attached the associated patch. Below shows
the R version.

R.version#>                _                           #> platform
  x86_64-apple-darwin15.6.0   #> arch           x86_64
     #> os             darwin15.6.0                #> system
x86_64, darwin15.6.0        #> status
   #> major          3                           #> minor          4.2
                        #> year           2017
#> month          09                          #> day            28
                     #> svn rev        73368                       #>
language       R                           #> version.string R version
3.4.2 (2017-09-28)#> nickname       Short Summer

Thanks for your time.

Kind regards,
Earo
?
-- 
https://earo.me

From ruzankin at math.nsc.ru  Wed Oct 18 15:49:07 2017
From: ruzankin at math.nsc.ru (Pavel S. Ruzankin)
Date: Wed, 18 Oct 2017 13:49:07 +0000
Subject: [Rd] uniform sampling without replacement algorithm
In-Reply-To: <2209d0a9-3e02-00ec-b0e8-c36120b31f70@math.nsc.ru>
References: <2209d0a9-3e02-00ec-b0e8-c36120b31f70@math.nsc.ru>
Message-ID: <de9ea0aa-387a-e108-eaea-6684443d3e14@math.nsc.ru>

See also:
P. Gupta, G. P. Bhattacharjee. (1984) An efficient algorithm for random 
sampling without replacement. International Journal of Computer 
Mathematics 16:4, pages 201-209.
http://dx.doi.org/10.1080/00207168408803438

Teuhola, J. and Nevalainen, O. 1982. Two efficient algorithms for random 
sampling without replacement. /IJCM/, 11(2): 127?140.
http://dx.doi.org/10.1080/00207168208803304

In the latter paper the authors claim that their algorithms have O(s) 
complexity. I doubt that this statement is correct. Is it?


	[[alternative HTML version deleted]]


From radford at cs.toronto.edu  Wed Oct 18 16:04:47 2017
From: radford at cs.toronto.edu (Radford Neal)
Date: Wed, 18 Oct 2017 10:04:47 -0400
Subject: [Rd] uniform sampling without replacement algorithm
In-Reply-To: <mailman.9.1508320801.6530.r-devel@r-project.org>
References: <mailman.9.1508320801.6530.r-devel@r-project.org>
Message-ID: <20171018140447.GA23267@mail.cs.toronto.edu>

> From: "Pavel S. Ruzankin" <ruzankin at math.nsc.ru>

> Let us consider the current uniform sampling without replacement 
> algorithm. It resides in function do_sample in
> https://svn.r-project.org/R/trunk/src/main/random.c
> Its complexity is obviously O(n), where the sample is selected from 
> 1...n, since the algorithm has to create a vector of length n. So when 
> the sample size is much lesser than n, the algorithm is not effective. 


Recent R Core implementations have a faster hashing scheme, but it is
enabled by default only for very large n, since it produces a
different result from the old, simple algorithm, and so (for example)
re-running an old analysis might give different results if it were
enabled.

The development version of pqR (at https://github.com/radfordneal/pqR
with the latest development branch being "73") implements a fast
hashing scheme that produces the same result as the old method, and so
is always enabled (when it would seem advantageous).  Here is the core
part of the code used (which calls a few pqR internal routines not in
R Core versions):


    /******  Copyright 2017 by Radford M. Neal, GPL 2 or later  ******/

/* Equal probability sampling; without-replacement case.

   This version is written to produce the same result as earlier versions,
   in which the algorithm was as follows (with x being temporary storage,
   and y being the result):

        for (i = 0; i < n; i++)
            x[i] = i;
        for (i = 0; i < k; i++) {
            j = n * unif_rand();
            y[i] = x[j] + 1;
            x[j] = x[--n];
        }

   When k <= 2, special code is used, for speed.

   When n is small or k is not much smaller than n, a modification of the
   above algorithm is used, which avoids the need for temporary storage - the
   result is allocated as of length n, and then has its length reduced to k
   (usually with no copy being done).

   When k is much smaller than n, and n is not small, a hashing scheme is
   used, in which hash entries record which elements of x in the above
   algorithm would have been modified from their original setting in which
   x[i] == i.
 */

static SEXP SampleNoReplace (int k, int n)
{
    SEXP r;

    if (k <= 2) {

        /* Special code for k = 0, 1, or 2, mimicing effect of previous code. */

        if (k == 0)
            return allocVector(INTSXP,0);

        int i1 = 1 + (int) (n * unif_rand());
        if (k == 1)
            return ScalarInteger (i1);

        int i2 = 1 + (int) ((n-1) * unif_rand());
        if (i2 == i1) i2 = n;
        r = allocVector(INTSXP,2);
        INTEGER(r)[0] = i1;
        INTEGER(r)[1] = i2;
    }
    else if (n < 100 || k > 0.6*n) {

        /* Code similar to previous method, but with temporary storage avoided.
           This reqires storing the initial sequence in decreasing rather than
           increasing order, and picking elements from the tail rather than the
           head, so that the space no longer used after each choice can hold the
           result, at the front of the vector.  Note:  Unlike the previous
           code, the indexes in the sequences are from 1 to n, not 0 to n-1. */

        r = allocVector(INTSXP,n);
        int *y = INTEGER(r);
        int i;
        for (i = 0; i < n; i++)
            y[i] = n-i;
        for (i = 0; i < k; i++) {
            int j = n - 1 - (int) ((n-i) * unif_rand());
            int t = y[j];
            y[j] = y[i];
            y[i] = t;
        }
        if (k < n)
            r = reallocVector(r,k,1);
    }

    else {

        /* Hash table implementation, producing same result as previous code.
           Mimics previous code by using a hash table to record how 'x' would
           have been changed.  At each iteration, it looks up x[j] in the
           hash table (j from 1 up), taking its value to be j if it is not in
           the table, and using this value as the next sampled value.  Also
           lookups up x[n-i], which is taken to be n-i if not present, and
           replaces/creates the entry for x[j] as having value x[n-i].  The
           hash table is non-chaining, with linear search. */

        /* Decide on the size of the hash table. */

        unsigned tblsize, mintblsize;
        mintblsize = 1.5 * k;
        tblsize = 32;
        while (tblsize < 0x80000000U && tblsize < mintblsize)
            tblsize <<= 1;
        unsigned tblmask = tblsize - 1;

        /* Allocate hash table, as auto variable if small, else with R_alloc. */

        struct tblentry { int pos, val; } *tbl;
        struct tblentry local [ tblsize < 1000 ? tblsize : 1 ];
        void *vmax = VMAXGET();
        tbl = tblsize < 1000 ? local
                             : (struct tblentry *) R_alloc(tblsize,sizeof *tbl);

        /* Clear all entries to zero.  Non-empty pos values start at 1. */

        memset (tbl, 0, tblsize * sizeof *tbl);

        /* Allocate vector to hold result. */

        r = allocVector(INTSXP,k);
        int *y = INTEGER(r);

        /* Do the sampling as described above. */

        int i;
        for (i = 0; i < k; i++) {
            int j = 1 + (int) ((n-i) * unif_rand());
            unsigned h;
            for (h = j & tblmask; ; h = (h+1) & tblmask) {
                if (tbl[h].pos == 0) {
                    y[i] = j;
                    break;
                }
                if (tbl[h].pos == j) {
                    y[i] = tbl[h].val;
                    break;
                }
            }
            unsigned h2;
            for (h2 = (n-i) & tblmask; ; h2 = (h2+1) & tblmask) {
                if (tbl[h2].pos == 0) {
                    tbl[h].val = n-i;
                    break;
                }
                if (tbl[h2].pos == n-i) {
                    tbl[h].val = tbl[h2].val;
                    break;
                }
            }
            tbl[h].pos = j;  /* don't set until after search for entry n-i */
        }

        VMAXSET(vmax);
    }

    return r;
}


This will be in a new version of pqR that will have many other performance
improvements as well, which I expect to release in a few weeks.

   Radford Neal


From wdunlap at tibco.com  Wed Oct 18 16:38:55 2017
From: wdunlap at tibco.com (William Dunlap)
Date: Wed, 18 Oct 2017 07:38:55 -0700
Subject: [Rd] uniform sampling without replacement algorithm
In-Reply-To: <2209d0a9-3e02-00ec-b0e8-c36120b31f70@math.nsc.ru>
References: <2209d0a9-3e02-00ec-b0e8-c36120b31f70@math.nsc.ru>
Message-ID: <CAF8bMcbQzEQC368x4esGR+9MHvuuR-7dTgfsgiYkR+HkbtWFfg@mail.gmail.com>

Splus used a similar method for sampling from "bigdata" objects.  One
problem was that sample() is used both for creating a sample and for
scrambling the order of a vector.  Scrambling the order of a big vector
wastes time.  It would be nice to be able to tell sample() that we don't
care about the order.


Bill Dunlap
TIBCO Software
wdunlap tibco.com

On Tue, Oct 17, 2017 at 10:55 AM, Pavel S. Ruzankin <ruzankin at math.nsc.ru>
wrote:

> Let us consider the current uniform sampling without replacement
> algorithm. It resides in function do_sample in
> https://svn.r-project.org/R/trunk/src/main/random.c
> Its complexity is obviously O(n), where the sample is selected from 1...n,
> since the algorithm has to create a vector of length n. So when the sample
> size is much lesser than n, the algorithm is not effective. Algorithms with
> average complexity O(s log s), were s is the sample size, were described
> long ago. E.g. see
> https://www.degruyter.com/view/j/mcma.1999.5.issue-1/mcma.
> 1999.5.1.39/mcma.1999.5.1.39.xml
> Here the Tree algorithm has complexity O(s log s). I suppose that there
> may be algorithms with complexity close to s. Is somebody planning to
> implement some more effective algorithm?
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>

	[[alternative HTML version deleted]]


From ruzankin at math.nsc.ru  Wed Oct 18 16:43:02 2017
From: ruzankin at math.nsc.ru (Pavel S. Ruzankin)
Date: Wed, 18 Oct 2017 14:43:02 +0000
Subject: [Rd] uniform sampling without replacement algorithm
In-Reply-To: <20171018140447.GA23267@mail.cs.toronto.edu>
References: <20171018140447.GA23267@mail.cs.toronto.edu>
Message-ID: <21e282be-6e0a-4d2a-c01e-bc2d4f1e949d@math.nsc.ru>

Thank you for your answer. Certainly, hash table must be faster than 
binary tree.


From ruzankin at math.nsc.ru  Wed Oct 18 16:54:54 2017
From: ruzankin at math.nsc.ru (Pavel S. Ruzankin)
Date: Wed, 18 Oct 2017 21:54:54 +0700
Subject: [Rd] uniform sampling without replacement algorithm
In-Reply-To: <CAF8bMcbQzEQC368x4esGR+9MHvuuR-7dTgfsgiYkR+HkbtWFfg@mail.gmail.com>
References: <CAF8bMcbQzEQC368x4esGR+9MHvuuR-7dTgfsgiYkR+HkbtWFfg@mail.gmail.com>
Message-ID: <0256e96b-3610-0b05-0336-f7b103ebde40@math.nsc.ru>

The binary tree algorithm does not need additional scrambling. I have 
written the R code for the algorithm in the last answer at:
https://stackoverflow.com/questions/311703/algorithm-for-sampling-without-replacement/46807110#46807110

However, the algorithm will probably be outperformed by hash table 
algorithms for relatively large sample sizes.


From maechler at stat.math.ethz.ch  Wed Oct 18 18:09:41 2017
From: maechler at stat.math.ethz.ch (Martin Maechler)
Date: Wed, 18 Oct 2017 18:09:41 +0200
Subject: [Rd] Another issue with Sys.timezone
In-Reply-To: <23012.59579.35802.920274@stat.math.ethz.ch>
References: <871sm570d3.fsf@gmx.net>
 <23012.59579.35802.920274@stat.math.ethz.ch>
Message-ID: <23015.31941.397029.272777@stat.math.ethz.ch>

>>>>> Martin Maechler <maechler at stat.math.ethz.ch>
>>>>>     on Mon, 16 Oct 2017 19:13:31 +0200 writes:

>>>>> Stephen Berman <stephen.berman at gmx.net>
>>>>>     on Sun, 15 Oct 2017 01:53:12 +0200 writes:

>     > (I reported the test failure mentioned below to R-help but was advised
>     > that this list is the right one to address the issue; in the meantime I
>     > investigated the matter somewhat more closely, including searching
>     > recent R-devel postings, since I haven't been following this list.)
> 
>     > Last May there were two reports here of problems with Sys.timezone, one
>     > where the zoneinfo directory is in a nonstandard location
>     > (https://stat.ethz.ch/pipermail/r-devel/2017-May/074267.html) and the
>     > other where the system lacks the file /etc/localtime
>     > (https://stat.ethz.ch/pipermail/r-devel/2017-May/074275.html).  My
>     > system exhibits a third case: it lacks /etc/timezone and does not set TZ
>     > systemwide, but it does have /etc/localtime, which is a copy of, rather
>     > than a symlink to, a file under zoneinfo.  On this system Sys.timezone()
>     > returns NA and the Sys.timezone test in reg-tests-1d fails.  However, on
>     > my system I can get the (abbreviated) timezone in R by using as.POSIXlt,
>     > e.g. as.POSIXlt(Sys.time())$zone.  If Sys.timezone took advantage of
>     > this, e.g. as below, it would be useful on such systems as mine and the
>     > regression test would pass.
> 
>     > my.Sys.timezone <- 
>     > 	function (location = TRUE) 
>     > {
>     > 	tz <- Sys.getenv("TZ", names = FALSE)
>     > 	if (!location || nzchar(tz)) 
>     > 	    return(Sys.getenv("TZ", unset = NA_character_))
>     > 	lt <- normalizePath("/etc/localtime")
>     > 	if (grepl(pat <- "^/usr/share/zoneinfo/", lt) ||
>     > 	    grepl(pat <- "^/usr/share/zoneinfo.default/", lt)) 
>     > 	    sub(pat, "", lt)
>     > 	else if (lt == "/etc/localtime")
>     > 	    if (!file.exists("/etc/timezone"))
>     > 		return(as.POSIXlt(Sys.time())$zone)
>     > 	    else if (dir.exists("/usr/share/zoneinfo") && {
>     > 		info <- file.info(normalizePath("/etc/timezone"), extra_cols = FALSE)
>     > 		(!info$isdir && info$size <= 200L)
>     > 	    } && {
>     > 		tz1 <- tryCatch(readBin("/etc/timezone", "raw", 200L), 
>     > 				error = function(e) raw(0L))
>     > 		length(tz1) > 0L && all(tz1 %in% as.raw(c(9:10, 13L, 32:126)))
>     > 	    } && {
>     > 		tz2 <- gsub("^[[:space:]]+|[[:space:]]+$", "", rawToChar(tz1))
>     > 		tzp <- file.path("/usr/share/zoneinfo", tz2)
>     > 		file.exists(tzp) && !dir.exists(tzp) &&
>     > 		    identical(file.size(normalizePath(tzp)), file.size(lt))
>     > 	    }) 
>     > 		tz2
>     > 	    else NA_character_
>     > }
> 
>     > One problem with this is that the zone component of as.POSIXlt only
>     > holds the abbreviated timezone, not the Olson name.  
> 
> Yes, indeed.  So, really only for  Sys.timezone(location = FALSE)  this
> should be given, for the default  location = TRUE   it should
> still give NA (i.e. NA_character_)  in your setup.
> 
> Interestingly, the Windows versions of Sys.timezone(location =
> FALSE) uses something like your proposal,  and I tend to think that
> -- again only for location=FALSE -- this should be used on
> on-Windows as well, at least instead of returning  NA  then.
> 
> Also for me on 3 different Linuxen (Fedora 24, F. 26, and ubuntu
> 14.04 LTS), I get
> 
>   > Sys.timezone()
>   [1] "Europe/Zurich"
>   > Sys.timezone(FALSE)
>   [1] NA
>   > 
> 
> whereas on Windows I get Europe/Berlin for the first (why on
> earth - I'm really in Zurich) and get  "CEST" ("Central European Summer Time") 
> for the 2nd one instead of NA ... simply using a smarter version
> of your proposal.   The windows source is
> in R's source at  src/library/base/R/windows/system.R :
> 
> Sys.timezone <- function(location = TRUE)
> {
>     tz <- Sys.getenv("TZ", names = FALSE)
>     if(nzchar(tz)) return(tz)
>     if(location) return(.Internal(tzone_name()))
>     z <- as.POSIXlt(Sys.time())
>     zz <- attr(z, "tzone")
>     if(length(zz) == 3L) zz[2L + z$isdst] else zz[1L]
> }
> 
> >From what I read, the last three lines also work in your setup
> where it seems zz would be of length 1, right ?
> 
> I'd really propose to use these 3 lines in the non-Windows
> version of Sys.timezone .. at the end *instead* of NA_character_
> (or a slightly safer version which gives  NA_character_ if zz is
> of length 0 {e.g. if there is no "tzone" attribute}.
> 
>     > i don't know how to
>     > get the Olson name using only R functions, but maybe it would be good
>     > enough to return the abbreviated timezone where possible, e.g. as above.
>     > (On my system I can get the Olson name of the timezone in R with a shell
>     > pipeline, e.g.: system("find /usr/share/zoneinfo/ -type f | xargs md5sum
>     > | grep $(md5sum /etc/localtime | cut -d ' ' -f 1) | head -n 1 | cut -d
>     > '/' -f 5,6"), but the last part of this is tailored to my configuration
>     > and the whole thing is not OS-neutral, so it isn't suitable for
>     > Sys.timezone.)
> 
>     > Steve Berman
> 
> Definitely not.  I still recommend you think of a more portable
> solution for the   `location = TRUE` (default) case in Sys.timezone().
> Returning the non-location form (e.g "CEST") when something like
> "Europe/Zurich" is expected is really not a good idea,
> and you are lucky that the regression test passes "accidentally" ...
> 
> Martin

In the mean time, I have committed a common version (Windows and
non-Windows) of  Sys.timezone()  to the R development sources
(aka "R-devel").

That now uses  as.POSIXlt(Sys.time())  very similarly to the
above "Windows only" case,  but __only__ for  'location=FALSE'
which is not the default.

The most current development source is always available (via
'svn' or alternatively for browsing via your web browser) from

   https://svn.r-project.org/R/trunk/src/library/base/R/datetime.R

As you say yourself, the above system("... xargs md5sum ...")
using workaround is really too platform specific  but I'd guess
there should be a less error prone way to get the long timezone
name on your system ...
If that remains "contained" (i.e. small) and works with files
and R's files tools -- e.g. file.*() ones [but not system()],
I'd consider a patch to the above source file
(sent by you to the R-devel mailing list --- or after having
 gotten an account there by asking, via bug report & patch
 attachment at https://bugs.r-project.org/ )

Best,
Martin

> 
> --
> Martin <Maechler at stat.math.ethz.ch>   http://stat.ethz.ch/~maechler
> Seminar f?r Statistik, ETH Z?rich
> and R Core Team


From maechler at stat.math.ethz.ch  Wed Oct 18 18:54:02 2017
From: maechler at stat.math.ethz.ch (Martin Maechler)
Date: Wed, 18 Oct 2017 18:54:02 +0200
Subject: [Rd] Function 'factor' issues
In-Reply-To: <1556284175.229014.1508083428562@mail.yahoo.com>
References: <1556284175.229014.1508083428562.ref@mail.yahoo.com>
 <1556284175.229014.1508083428562@mail.yahoo.com>
Message-ID: <23015.34602.436197.254549@stat.math.ethz.ch>

>>>>> Suharto Anggono Suharto Anggono via R-devel <r-devel at r-project.org>
>>>>>     on Sun, 15 Oct 2017 16:03:48 +0000 writes:

    > In R devel, function 'factor' has been changed, allowing and merging duplicated 'labels'.

Indeed.  That had been asked for and discussed a bit on this
list from June 14 to June 23, starting at
   https://stat.ethz.ch/pipermail/r-devel/2017-June/074451.html

    > Issue 1: Handling of specified 'labels' without duplicates is slower than before.
    > Example:
    > x <- rep(1:26, 40000)
    > system.time(factor(x, levels=1:26, labels=letters))

    > Function 'factor' is already rather slow because of conversion to character. Please don't add slowdown.

Indeed, I doo see a ~ 20%  performance loss for the example
above, and I may get to look into this.
However, in R-devel there have been important internal
changes (ALTREP additions) some of which are currently giving
some performance losses in some cases (but they have the
potential to give big performance _gains_ e.g. for simple
indexing into large vectors which may apply here !).
For factor(), these C level "ALTREP" changes may not be the reason at
all for the slow down;
I may find time to investigate further.

{{ For the ALTREP-change slowdowns I've noticed in some
   indexing/subset operations, we'll definitely have time to look into
   before R-devel is going to be released next spring... and as mentioned,
   these operations may even become considerably faster *thanks*
   to ALTREP ... }}

    > Issue 2: While default 'labels' is 'levels', not specifying 'labels' may be different from specifying 'labels' to be the same as 'levels'.

    > Example 1:
    > as.integer(factor(c(NA,2,3), levels = c(2, NA), exclude = NULL))
    > is different from
    > as.integer(factor(c(NA,2,3), levels = c(2, NA), labels = c(2, NA), exclude = NULL))

You are right.  But this is not so exceptional and part of the new feature of
'labels' allowing to "fix up" things in such cases.  While it
would be nice if this was not the case the same phenomenon
happens in other functions as well because of lazy evaluation.
I think I had noticed that already and at the time found
"not easy" to work around.
(There are many aspects about changing such important base functions:
 1. not breaking back compatibility ((unless in rare
    border cases, where we are sure it's worth))
 2. Keeping code relatively transparent
 3. Keep the semantics "simple" to document and as intuitive as possible
)

    > File reg-tests-1d.R indicates that 'factor' behavior with NA is slightly changed, for the better. NA entry (because it is unmatched to 'levels' argument or is in 'exclude') is absorbed into NA in "levels" attribute (comes from 'labels' argument), if any. The issue is that it happens only when 'labels' is specified.

I'm not sure anymore, but I think I had noticed that also in
June, considered to change it and found that such a changed
factor() would be too different from what it has "always been".
So, yes, IIRC, this current behavior is on purpose, if only for back compatibility.


    > Function 'factor' could use match(xlevs, nlevs)[f]. It doesn't match NA to NA level. When 'f' is long enough, longer than 'xlevs', it is faster than match(xlevs[f], nlevs).

    > Example 2:
    > With
    > levs <- c("A","A")? ,
    > factor(levs, levels=levs)
    > gives error, but
    > factor(levs, levels=levs, labels=levs)
    > doesn't.

yes, again that is a consequence of what you said above (before
'Example 1')

    > Note: In theory, if function 'factor' merged duplicated 'labels' in all cases, at least in
    > factor(c(sqrt(2)^2, 2))? ,
    > function 'factor' could do matching on original 'x' (without conversion to character), as in R before version 2.10.0. If function 'factor' did it,
    > factor(c(sqrt(2)^2, 2), levels = c(sqrt(2)^2, 2), labels = c("sqrt(2)^2", "2"))
    > could take sqrt(2)^2 and 2 as distinct.

Well, that may be interesting.. but I doubt if that's somewhere
we should go, easily, because  factor() has been documented to do
what it does now (with very slightly rounding such numbers via as.character(.))
and hence such a change would typically lead to much work for
too many people.

I do see that indeed the  as.character(.) inside factor() takes
most of the CPU time used in largish factor() examples [as your
first], and indeed, for the case of integer 'x', we really could
be much faster in factor construction.   

    > Another thing: Function 'factor' in R devel uses 'order' instead of 'sort.list'.

This has been by a change on purpose --- well documented as new
feature in NEWS --- to allow using *methods* for order(),
i.e. for the workhorse of order, xtfrm()  so that factor(OB)
works for more general objects OB.


    > The case of as.factor(x) for
    > x <- as.data.frame(character(0))
    > in tests/isas-tests.Rout.save reveals that 'order' on data frame is strange.

    > x <- as.data.frame(character(0))
    > y <- unique(x)
    > length(y)? # 1
    > length(order(y))? # 0
    > length(as.character(y))? # 1

    > order(y) is not as long as as.character(y).

    > Another example:
    > length(mtcars)? # 11
    > length(order(mtcars))? # 352

I agree that  order(<data.frame>) may look a bit strange;
I've spent more than an hour into looking into it, and making it
[actually,  rank(<data.frame>,..) ] 
an error, but ended up finding much evidence that there's too
much related code, sometimes even in base R which assumes that a
numeric data frame behaves the same as a numeric matrix.

And also, if you carefully read the help files, of
  order(),
  xtfrm(),
  rank()

there's always mentioned that these work for R object 'x'
basically as long as   x[!is.na(x)]   returns a "nice"
(typically atomic) vector .. which is the case for such data frames.

The consequence, that  in R-devel, currently

    factor(mtcars)

just "works",  is indeed unexpected or even "shocking", and I
still don't know what the most elegant and reasonable way would
be to make this an error -- as it used to be when  sort.list()
was used instead of order().  I'd find it ugly (and even more
time consuming!) if factor() itself would have to check its
argument and signal an error for a data.frame.

The relevant call tree is

  factor() -> order() -> xtfrm() -> xtfrm.default() -> rank()

and as I said, rank(x,*) works when  x[!is.na(x)]  is an atomic
"numeric-like" vector  which is the case for a numeric data
frame such as 'mtcars'.

Martin Maechler
ETH Zurich


From gmbecker at ucdavis.edu  Wed Oct 18 19:59:59 2017
From: gmbecker at ucdavis.edu (Gabriel Becker)
Date: Wed, 18 Oct 2017 10:59:59 -0700
Subject: [Rd] Function 'factor' issues
In-Reply-To: <23015.34602.436197.254549@stat.math.ethz.ch>
References: <1556284175.229014.1508083428562.ref@mail.yahoo.com>
 <1556284175.229014.1508083428562@mail.yahoo.com>
 <23015.34602.436197.254549@stat.math.ethz.ch>
Message-ID: <CADwqtCMfF++1cRge5vJha0xUiLM_fmpEOU5piZfT8R4On7pV4g@mail.gmail.com>

Martin, Suharto, et al.,


On Wed, Oct 18, 2017 at 9:54 AM, Martin Maechler <maechler at stat.math.ethz.ch
> wrote:

> *<snip>*
>
>     > Note: In theory, if function 'factor' merged duplicated 'labels' in
> all cases, at least in
>     > factor(c(sqrt(2)^2, 2))  ,
>     > function 'factor' could do matching on original 'x' (without
> conversion to character), as in R before version 2.10.0. If function
> 'factor' did it,
>     > factor(c(sqrt(2)^2, 2), levels = c(sqrt(2)^2, 2), labels =
> c("sqrt(2)^2", "2"))
>     > could take sqrt(2)^2 and 2 as distinct.
>
> Well, that may be interesting.. but I doubt if that's somewhere
> we should go, easily, because  factor() has been documented to do
> what it does now (with very slightly rounding such numbers via
> as.character(.))
> and hence such a change would typically lead to much work for
> too many people.
>
> I do see that indeed the  as.character(.) inside factor() takes
> most of the CPU time used in largish factor() examples [as your
> first], and indeed, for the case of integer 'x', we really could
> be much faster in factor construction.
>

Indeed; the ALTREP framework already has an alternative string (character
vector) implementation which defers conversion from another vector type.
Luke implemented it to drastically speed up the creation of default row
labels (1:n, I believe) on design matrices within lm/glm, under the
assumption that no one is ever going to look at the design matrix row
labels most of the time, and there's no reason to pay the cost of creating
them until they do.

In principle, we could look at doing the same for levels of a factor.

Furthermore, while I haven't put in the hooks yet to utilize them yet, even
in my local copy, ALTREP classes are allowed to include a custom unique
method, so in cases where

unique(as.character(x)) == as.character(unique(x))

we could avoid the conversion even when calling unique() (at the R level)
on such a deferred vector.

This would include, I think, the case where inferring levels from the
vector. I believe the point Martin made earlier about as.character
potentially doing some rounding means that the required identity would hold
when factors are being generated from integer vectors but would not be
guaranteed when factors are generated from (non-integer) numeric vectors.

Best,
~G


>
>     > Another thing: Function 'factor' in R devel uses 'order' instead of
> 'sort.list'.
>
> This has been by a change on purpose --- well documented as new
> feature in NEWS --- to allow using *methods* for order(),
> i.e. for the workhorse of order, xtfrm()  so that factor(OB)
> works for more general objects OB.
>
>
>     > The case of as.factor(x) for
>     > x <- as.data.frame(character(0))
>     > in tests/isas-tests.Rout.save reveals that 'order' on data frame is
> strange.
>
>     > x <- as.data.frame(character(0))
>     > y <- unique(x)
>     > length(y)  # 1
>     > length(order(y))  # 0
>     > length(as.character(y))  # 1
>
>     > order(y) is not as long as as.character(y).
>
>     > Another example:
>     > length(mtcars)  # 11
>     > length(order(mtcars))  # 352
>
> I agree that  order(<data.frame>) may look a bit strange;
> I've spent more than an hour into looking into it, and making it
> [actually,  rank(<data.frame>,..) ]
> an error, but ended up finding much evidence that there's too
> much related code, sometimes even in base R which assumes that a
> numeric data frame behaves the same as a numeric matrix.
>
> And also, if you carefully read the help files, of
>   order(),
>   xtfrm(),
>   rank()
>
> there's always mentioned that these work for R object 'x'
> basically as long as   x[!is.na(x)]   returns a "nice"
> (typically atomic) vector .. which is the case for such data frames.
>
> The consequence, that  in R-devel, currently
>
>     factor(mtcars)
>
> just "works",  is indeed unexpected or even "shocking", and I
> still don't know what the most elegant and reasonable way would
> be to make this an error -- as it used to be when  sort.list()
> was used instead of order().  I'd find it ugly (and even more
> time consuming!) if factor() itself would have to check its
> argument and signal an error for a data.frame.
>
> The relevant call tree is
>
>   factor() -> order() -> xtfrm() -> xtfrm.default() -> rank()
>
> and as I said, rank(x,*) works when  x[!is.na(x)]  is an atomic
> "numeric-like" vector  which is the case for a numeric data
> frame such as 'mtcars'.
>
> Martin Maechler
> ETH Zurich
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>



-- 
Gabriel Becker, PhD
Scientist (Bioinformatics)
Genentech Research

	[[alternative HTML version deleted]]


From jtelleriar at gmail.com  Thu Oct 19 10:09:16 2017
From: jtelleriar at gmail.com (Juan Telleria)
Date: Thu, 19 Oct 2017 10:09:16 +0200
Subject: [Rd] source() + dbSendQuery() Returns Incorrect Results - Solved
	with: dbExecute()
Message-ID: <CANNd7==2UWqP5q2eYzYifhpqfYUVPga2Hkewf2K9-WovKxDUwg@mail.gmail.com>

Issue Description and Expected Result

When used source() with dbSendQuery(), wrong results are obtained from the
Database, probably due to a precision loose at some point.
Database

MariaDB
Solution

It was solved by means of using source() + dbExecute(), instead of
dbSendQuery().
Question

Although not Standard, ?Shall dbSendQuery() default behavior be modified to
avoid this issue?.

	[[alternative HTML version deleted]]


From stephen.berman at gmx.net  Thu Oct 19 17:12:50 2017
From: stephen.berman at gmx.net (Stephen Berman)
Date: Thu, 19 Oct 2017 17:12:50 +0200
Subject: [Rd] Another issue with Sys.timezone
In-Reply-To: <23015.31941.397029.272777@stat.math.ethz.ch> (Martin Maechler's
 message of "Wed, 18 Oct 2017 18:09:41 +0200")
References: <871sm570d3.fsf@gmx.net>
 <23012.59579.35802.920274@stat.math.ethz.ch>
 <23015.31941.397029.272777@stat.math.ethz.ch>
Message-ID: <87r2tzmarx.fsf@gmx.net>

On Wed, 18 Oct 2017 18:09:41 +0200 Martin Maechler <maechler at stat.math.ethz.ch> wrote:

>>>>>> Martin Maechler <maechler at stat.math.ethz.ch>
>>>>>>     on Mon, 16 Oct 2017 19:13:31 +0200 writes:

(I also included a reply to part of this response of yours below.)

>>>>>> Stephen Berman <stephen.berman at gmx.net>
>>>>>>     on Sun, 15 Oct 2017 01:53:12 +0200 writes:
>
>>     > (I reported the test failure mentioned below to R-help but was advised
>>     > that this list is the right one to address the issue; in the meantime I
>>     > investigated the matter somewhat more closely, including searching
>>     > recent R-devel postings, since I haven't been following this list.)
>> 
>>     > Last May there were two reports here of problems with Sys.timezone, one
>>     > where the zoneinfo directory is in a nonstandard location
>>     > (https://stat.ethz.ch/pipermail/r-devel/2017-May/074267.html) and the
>>     > other where the system lacks the file /etc/localtime
>>     > (https://stat.ethz.ch/pipermail/r-devel/2017-May/074275.html).  My
>>     > system exhibits a third case: it lacks /etc/timezone and does not set TZ
>>     > systemwide, but it does have /etc/localtime, which is a copy of, rather
>>     > than a symlink to, a file under zoneinfo.  On this system Sys.timezone()
>>     > returns NA and the Sys.timezone test in reg-tests-1d fails.  However, on
>>     > my system I can get the (abbreviated) timezone in R by using as.POSIXlt,
>>     > e.g. as.POSIXlt(Sys.time())$zone.  If Sys.timezone took advantage of
>>     > this, e.g. as below, it would be useful on such systems as mine and the
>>     > regression test would pass.
>> 
>>     > my.Sys.timezone <- 
>>     > 	function (location = TRUE) 
>>     > {
>>     > 	tz <- Sys.getenv("TZ", names = FALSE)
>>     > 	if (!location || nzchar(tz)) 
>>     > 	    return(Sys.getenv("TZ", unset = NA_character_))
>>     > 	lt <- normalizePath("/etc/localtime")
>>     > 	if (grepl(pat <- "^/usr/share/zoneinfo/", lt) ||
>>     > 	    grepl(pat <- "^/usr/share/zoneinfo.default/", lt)) 
>>     > 	    sub(pat, "", lt)
>>     > 	else if (lt == "/etc/localtime")
>>     > 	    if (!file.exists("/etc/timezone"))
>>     > 		return(as.POSIXlt(Sys.time())$zone)
>>     > 	    else if (dir.exists("/usr/share/zoneinfo") && {
>>     > 		info <- file.info(normalizePath("/etc/timezone"), extra_cols = FALSE)
>>     > 		(!info$isdir && info$size <= 200L)
>>     > 	    } && {
>>     > 		tz1 <- tryCatch(readBin("/etc/timezone", "raw", 200L), 
>>     > 				error = function(e) raw(0L))
>>     > 		length(tz1) > 0L && all(tz1 %in% as.raw(c(9:10, 13L, 32:126)))
>>     > 	    } && {
>>     > 		tz2 <- gsub("^[[:space:]]+|[[:space:]]+$", "", rawToChar(tz1))
>>     > 		tzp <- file.path("/usr/share/zoneinfo", tz2)
>>     > 		file.exists(tzp) && !dir.exists(tzp) &&
>>     > 		    identical(file.size(normalizePath(tzp)), file.size(lt))
>>     > 	    }) 
>>     > 		tz2
>>     > 	    else NA_character_
>>     > }
>> 
>>     > One problem with this is that the zone component of as.POSIXlt only
>>     > holds the abbreviated timezone, not the Olson name.  
>> 
>> Yes, indeed.  So, really only for  Sys.timezone(location = FALSE)  this
>> should be given, for the default  location = TRUE   it should
>> still give NA (i.e. NA_character_)  in your setup.
>> 
>> Interestingly, the Windows versions of Sys.timezone(location =
>> FALSE) uses something like your proposal,  and I tend to think that
>> -- again only for location=FALSE -- this should be used on
>> on-Windows as well, at least instead of returning  NA  then.
>> 
>> Also for me on 3 different Linuxen (Fedora 24, F. 26, and ubuntu
>> 14.04 LTS), I get
>> 
>>   > Sys.timezone()
>>   [1] "Europe/Zurich"
>>   > Sys.timezone(FALSE)
>>   [1] NA
>>   > 
>> 
>> whereas on Windows I get Europe/Berlin for the first (why on
>> earth - I'm really in Zurich) and get  "CEST" ("Central European Summer Time") 
>> for the 2nd one instead of NA ... simply using a smarter version
>> of your proposal.   The windows source is
>> in R's source at  src/library/base/R/windows/system.R :
>> 
>> Sys.timezone <- function(location = TRUE)
>> {
>>     tz <- Sys.getenv("TZ", names = FALSE)
>>     if(nzchar(tz)) return(tz)
>>     if(location) return(.Internal(tzone_name()))
>>     z <- as.POSIXlt(Sys.time())
>>     zz <- attr(z, "tzone")
>>     if(length(zz) == 3L) zz[2L + z$isdst] else zz[1L]
>> }
>> 
>> >From what I read, the last three lines also work in your setup
>> where it seems zz would be of length 1, right ?

Those line do indeed work here, but zz has three elements:

> attributes(as.POSIXlt(Sys.time()))$tzone
[1] ""     "CET"  "CEST"

>> I'd really propose to use these 3 lines in the non-Windows
>> version of Sys.timezone .. at the end *instead* of NA_character_
>> (or a slightly safer version which gives  NA_character_ if zz is
>> of length 0 {e.g. if there is no "tzone" attribute}.
>> 
>>     > i don't know how to
>>     > get the Olson name using only R functions, but maybe it would be good
>>     > enough to return the abbreviated timezone where possible, e.g. as above.
>>     > (On my system I can get the Olson name of the timezone in R with a shell
>>     > pipeline, e.g.: system("find /usr/share/zoneinfo/ -type f | xargs md5sum
>>     > | grep $(md5sum /etc/localtime | cut -d ' ' -f 1) | head -n 1 | cut -d
>>     > '/' -f 5,6"), but the last part of this is tailored to my configuration
>>     > and the whole thing is not OS-neutral, so it isn't suitable for
>>     > Sys.timezone.)
>> 
>>     > Steve Berman
>> 
>> Definitely not.  I still recommend you think of a more portable
>> solution for the   `location = TRUE` (default) case in Sys.timezone().
>> Returning the non-location form (e.g "CEST") when something like
>> "Europe/Zurich" is expected is really not a good idea,
>> and you are lucky that the regression test passes "accidentally" ...
>> 
>> Martin
>
> In the mean time, I have committed a common version (Windows and
> non-Windows) of  Sys.timezone()  to the R development sources
> (aka "R-devel").
>
> That now uses  as.POSIXlt(Sys.time())  very similarly to the
> above "Windows only" case,  but __only__ for  'location=FALSE'
> which is not the default.

Thanks, I think that's definitely better than returning NA when
`location' is false...

> The most current development source is always available (via
> 'svn' or alternatively for browsing via your web browser) from
>
>    https://svn.r-project.org/R/trunk/src/library/base/R/datetime.R

...however, I tried the test that failed for me during `make check' now
with this new definition of Sys.timezone() by pasting the definition (as
new.Sys.timezone()) and the two lines of the test code into the R console,
and this is what happened:

   > new.Sys.timezone()
   > new.Sys.timezone(FALSE)
   [1] "CEST"
   > (S.t <- new.Sys.timezone())
   NULL
   > if(is.na(S.t) || !nzchar(S.t)) stop("could not get timezone")
   Error in if (is.na(S.t) || !nzchar(S.t)) stop("could not get timezone") : 
     missing value where TRUE/FALSE needed
   In addition: Warning message:
   In is.na(S.t) : is.na() applied to non-(list or vector) of type 'NULL'

This is because `location' is true but all the if-clauses in the body
following `if(location)' are false, so it returns NULL.  If you add the
line `else NA_character_' below the line `tz2', then NA is returned and
the test fails as before instead of as above.

> As you say yourself, the above system("... xargs md5sum ...")
> using workaround is really too platform specific  but I'd guess
> there should be a less error prone way to get the long timezone
> name on your system ...

If I understand the zic(8) man page, the files in /usr/share/zoneinfo
should contain this information, but I don't know how to extract it,
since these are compiled files.  And since on my system /etc/localtime
is a copy of one of these compiled files, I don't know of any other way
to recover the location name without comparing it to those files.

> If that remains "contained" (i.e. small) and works with files
> and R's files tools -- e.g. file.*() ones [but not system()],
> I'd consider a patch to the above source file
> (sent by you to the R-devel mailing list --- or after having
>  gotten an account there by asking, via bug report & patch
>  attachment at https://bugs.r-project.org/ )

If comparing file size sufficed, that would be easy to do in R;
unfortunately, it is not sufficient, since some files designating
different time zones in /usr/share/zoneinfo do have the same size.  So
the only alternative I can think of is to compare bytes, e.g. with
md5sum or with cmp.  Is there some way to do this in R without using
system()?

Steve Berman


From maechler at stat.math.ethz.ch  Fri Oct 20 09:15:42 2017
From: maechler at stat.math.ethz.ch (Martin Maechler)
Date: Fri, 20 Oct 2017 09:15:42 +0200
Subject: [Rd] Another issue with Sys.timezone
In-Reply-To: <87r2tzmarx.fsf@gmx.net>
References: <871sm570d3.fsf@gmx.net>
 <23012.59579.35802.920274@stat.math.ethz.ch>
 <23015.31941.397029.272777@stat.math.ethz.ch>
 <87r2tzmarx.fsf@gmx.net>
Message-ID: <23017.41630.884512.113683@stat.math.ethz.ch>

>>>>> Stephen Berman <stephen.berman at gmx.net>
>>>>>     on Thu, 19 Oct 2017 17:12:50 +0200 writes:

    > On Wed, 18 Oct 2017 18:09:41 +0200 Martin Maechler <maechler at stat.math.ethz.ch> wrote:
    >>>>>>> Martin Maechler <maechler at stat.math.ethz.ch>
    >>>>>>> on Mon, 16 Oct 2017 19:13:31 +0200 writes:

    > (I also included a reply to part of this response of yours below.)

    >>>>>>> Stephen Berman <stephen.berman at gmx.net>
    >>>>>>> on Sun, 15 Oct 2017 01:53:12 +0200 writes:
    >> 
    >>> > (I reported the test failure mentioned below to R-help but was advised
    >>> > that this list is the right one to address the issue; in the meantime I
    >>> > investigated the matter somewhat more closely, including searching
    >>> > recent R-devel postings, since I haven't been following this list.)
    >>> 
    >>> > Last May there were two reports here of problems with Sys.timezone, one
    >>> > where the zoneinfo directory is in a nonstandard location
    >>> > (https://stat.ethz.ch/pipermail/r-devel/2017-May/074267.html) and the
    >>> > other where the system lacks the file /etc/localtime
    >>> > (https://stat.ethz.ch/pipermail/r-devel/2017-May/074275.html).  My
    >>> > system exhibits a third case: it lacks /etc/timezone and does not set TZ
    >>> > systemwide, but it does have /etc/localtime, which is a copy of, rather
    >>> > than a symlink to, a file under zoneinfo.  On this system Sys.timezone()
    >>> > returns NA and the Sys.timezone test in reg-tests-1d fails.  However, on
    >>> > my system I can get the (abbreviated) timezone in R by using as.POSIXlt,
    >>> > e.g. as.POSIXlt(Sys.time())$zone.  If Sys.timezone took advantage of
    >>> > this, e.g. as below, it would be useful on such systems as mine and the
    >>> > regression test would pass.
    >>> 
    >>> > my.Sys.timezone <- 
    >>> > 	function (location = TRUE) 
    >>> > {
    >>> > 	tz <- Sys.getenv("TZ", names = FALSE)
    >>> > 	if (!location || nzchar(tz)) 
    >>> > 	    return(Sys.getenv("TZ", unset = NA_character_))
    >>> > 	lt <- normalizePath("/etc/localtime")
    >>> > 	if (grepl(pat <- "^/usr/share/zoneinfo/", lt) ||
    >>> > 	    grepl(pat <- "^/usr/share/zoneinfo.default/", lt)) 
    >>> > 	    sub(pat, "", lt)
    >>> > 	else if (lt == "/etc/localtime")
    >>> > 	    if (!file.exists("/etc/timezone"))
    >>> > 		return(as.POSIXlt(Sys.time())$zone)
    >>> > 	    else if (dir.exists("/usr/share/zoneinfo") && {
    >>> > 		info <- file.info(normalizePath("/etc/timezone"), extra_cols = FALSE)
    >>> > 		(!info$isdir && info$size <= 200L)
    >>> > 	    } && {
    >>> > 		tz1 <- tryCatch(readBin("/etc/timezone", "raw", 200L), 
    >>> > 				error = function(e) raw(0L))
    >>> > 		length(tz1) > 0L && all(tz1 %in% as.raw(c(9:10, 13L, 32:126)))
    >>> > 	    } && {
    >>> > 		tz2 <- gsub("^[[:space:]]+|[[:space:]]+$", "", rawToChar(tz1))
    >>> > 		tzp <- file.path("/usr/share/zoneinfo", tz2)
    >>> > 		file.exists(tzp) && !dir.exists(tzp) &&
    >>> > 		    identical(file.size(normalizePath(tzp)), file.size(lt))
    >>> > 	    }) 
    >>> > 		tz2
    >>> > 	    else NA_character_
    >>> > }
    >>> 
    >>> > One problem with this is that the zone component of as.POSIXlt only
    >>> > holds the abbreviated timezone, not the Olson name.  
    >>> 
    >>> Yes, indeed.  So, really only for  Sys.timezone(location = FALSE)  this
    >>> should be given, for the default  location = TRUE   it should
    >>> still give NA (i.e. NA_character_)  in your setup.
    >>> 
    >>> Interestingly, the Windows versions of Sys.timezone(location =
    >>> FALSE) uses something like your proposal,  and I tend to think that
    >>> -- again only for location=FALSE -- this should be used on
    >>> on-Windows as well, at least instead of returning  NA  then.
    >>> 
    >>> Also for me on 3 different Linuxen (Fedora 24, F. 26, and ubuntu
    >>> 14.04 LTS), I get
    >>> 
    >>> > Sys.timezone()
    >>> [1] "Europe/Zurich"
    >>> > Sys.timezone(FALSE)
    >>> [1] NA
    >>> > 
    >>> 
    >>> whereas on Windows I get Europe/Berlin for the first (why on
    >>> earth - I'm really in Zurich) and get  "CEST" ("Central European Summer Time") 
    >>> for the 2nd one instead of NA ... simply using a smarter version
    >>> of your proposal.   The windows source is
    >>> in R's source at  src/library/base/R/windows/system.R :
    >>> 
    >>> Sys.timezone <- function(location = TRUE)
    >>> {
    >>> tz <- Sys.getenv("TZ", names = FALSE)
    >>> if(nzchar(tz)) return(tz)
    >>> if(location) return(.Internal(tzone_name()))
    >>> z <- as.POSIXlt(Sys.time())
    >>> zz <- attr(z, "tzone")
    >>> if(length(zz) == 3L) zz[2L + z$isdst] else zz[1L]
    >>> }
    >>> 
    >>> >From what I read, the last three lines also work in your setup
    >>> where it seems zz would be of length 1, right ?

    > Those line do indeed work here, but zz has three elements:

    >> attributes(as.POSIXlt(Sys.time()))$tzone
    > [1] ""     "CET"  "CEST"

{ "but" ??   yes, three elements is what I see too, but for that
  reason there's the  if(length(zz) == 3L) ... }

    >>> I'd really propose to use these 3 lines in the non-Windows
    >>> version of Sys.timezone .. at the end *instead* of NA_character_
    >>> (or a slightly safer version which gives  NA_character_ if zz is
    >>> of length 0 {e.g. if there is no "tzone" attribute}.
    >>> 
    >>> > i don't know how to
    >>> > get the Olson name using only R functions, but maybe it would be good
    >>> > enough to return the abbreviated timezone where possible, e.g. as above.
    >>> > (On my system I can get the Olson name of the timezone in R with a shell
    >>> > pipeline, e.g.: system("find /usr/share/zoneinfo/ -type f | xargs md5sum
    >>> > | grep $(md5sum /etc/localtime | cut -d ' ' -f 1) | head -n 1 | cut -d
    >>> > '/' -f 5,6"), but the last part of this is tailored to my configuration
    >>> > and the whole thing is not OS-neutral, so it isn't suitable for
    >>> > Sys.timezone.)
    >>> 
    >>> > Steve Berman
    >>> 
    >>> Definitely not.  I still recommend you think of a more portable
    >>> solution for the   `location = TRUE` (default) case in Sys.timezone().
    >>> Returning the non-location form (e.g "CEST") when something like
    >>> "Europe/Zurich" is expected is really not a good idea,
    >>> and you are lucky that the regression test passes "accidentally" ...
    >>> 
    >>> Martin
    >> 
    >> In the mean time, I have committed a common version (Windows and
    >> non-Windows) of  Sys.timezone()  to the R development sources
    >> (aka "R-devel").
    >> 
    >> That now uses  as.POSIXlt(Sys.time())  very similarly to the
    >> above "Windows only" case,  but __only__ for  'location=FALSE'
    >> which is not the default.

    > Thanks, I think that's definitely better than returning NA when
    > `location' is false...

    >> The most current development source is always available (via
    >> 'svn' or alternatively for browsing via your web browser) from
    >> 
    >> https://svn.r-project.org/R/trunk/src/library/base/R/datetime.R

    > ...however, I tried the test that failed for me during `make check' now
    > with this new definition of Sys.timezone() by pasting the definition (as
    > new.Sys.timezone()) and the two lines of the test code into the R console,
    > and this is what happened:

    >> new.Sys.timezone()
    >> new.Sys.timezone(FALSE)
    > [1] "CEST"
    >> (S.t <- new.Sys.timezone())
    > NULL
    >> if(is.na(S.t) || !nzchar(S.t)) stop("could not get timezone")
    > Error in if (is.na(S.t) || !nzchar(S.t)) stop("could not get timezone") : 
    > missing value where TRUE/FALSE needed
    > In addition: Warning message:
    > In is.na(S.t) : is.na() applied to non-(list or vector) of type 'NULL'

    > This is because `location' is true but all the if-clauses in the body
    > following `if(location)' are false, so it returns NULL.  If you add the
    > line `else NA_character_' below the line `tz2', then NA is returned and
    > the test fails as before instead of as above.

Thank you,  for the perfect diagnosis.  Embarrassingly I had
dropped this else-clause accidentally.

    >> As you say yourself, the above system("... xargs md5sum ...")
    >> using workaround is really too platform specific  but I'd guess
    >> there should be a less error prone way to get the long timezone
    >> name on your system ...

    > If I understand the zic(8) man page, the files in /usr/share/zoneinfo
    > should contain this information, but I don't know how to extract it,
    > since these are compiled files.  And since on my system /etc/localtime
    > is a copy of one of these compiled files, I don't know of any other way
    > to recover the location name without comparing it to those files.

    >> If that remains "contained" (i.e. small) and works with files
    >> and R's files tools -- e.g. file.*() ones [but not system()],
    >> I'd consider a patch to the above source file
    >> (sent by you to the R-devel mailing list --- or after having
    >> gotten an account there by asking, via bug report & patch
    >> attachment at https://bugs.r-project.org/ )

    > If comparing file size sufficed, that would be easy to do in R;
    > unfortunately, it is not sufficient, since some files designating
    > different time zones in /usr/share/zoneinfo do have the same size.  So
    > the only alternative I can think of is to compare bytes, e.g. with
    > md5sum or with cmp.  Is there some way to do this in R without using
    > system()?

Can't you use
      tz1 <- readBin("/etc/localtime", "raw", 200L)
plus later
      tz2 <- gsub(.......,  rawToChar(tz1))

on your  /etc/localtime file 
almost identically as the current code does for "/etc/timezone" ?

Martin


From brodie.gaslam at yahoo.com  Fri Oct 20 16:01:16 2017
From: brodie.gaslam at yahoo.com (brodie gaslam)
Date: Fri, 20 Oct 2017 14:01:16 +0000 (UTC)
Subject: [Rd] Illegal Logical Values
References: <619239410.977475.1508508076632.ref@mail.yahoo.com>
Message-ID: <619239410.977475.1508508076632@mail.yahoo.com>

I'm wondering if WRE Section 5.2 should be a little more explicit about misuse of integer values other than NA, 0, and 1 in LGLSXPs.? I'm thinking of this passage:

> Logical values are sent as 0 (FALSE), 1 (TRUE) or INT_MIN = -2147483648 (NA, but only if NAOK is true), and the compiled code should return one of these three values. (Non-zero values other than INT_MIN are mapped to TRUE.) 

The parenthetical seems to suggest that something like 'LOGICAL(x)[0] = 2;' will be treated as TRUE, which it sometimes is, and sometimes isn't:

not.true <- inline::cfunction(body='
? SEXP res = allocVector(LGLSXP, 1);
? LOGICAL(res)[0] = 2;
? return res;'
)()
not.true
## [1] TRUE
not.true == TRUE
## [1] FALSE
not.true[1] == TRUE? # due to scalar subset handling
## [1] TRUE
not.true == 2L
## [1] TRUE


Perhaps a more explicit warning that using anything other than 0, 1, or NA is undefined behavior is warranted?? Obviously people should know better than to expect correct behavior, but the fact that the behavior is correct in some cases (e.g. printing, scalar subsetting) might be confusing.

This is based off of Drew Schmidt's accidental discovery yesterday: <https://gist.github.com/wrathematics/c3e5225cf56596b31e01f717e8675640>.
Best,
Brodie.

	[[alternative HTML version deleted]]


From tomas.kalibera at gmail.com  Fri Oct 20 16:29:00 2017
From: tomas.kalibera at gmail.com (Tomas Kalibera)
Date: Fri, 20 Oct 2017 16:29:00 +0200
Subject: [Rd] Bug: Issues on Windows with SFN disabled
In-Reply-To: <34ec506d-bec1-544f-9067-2109bd0db1e5@gmail.com>
References: <CAD7tZLXB=73wY9tqLmYhTXyBB9DMO1WZXGz3U9pHz9KgEX4K=Q@mail.gmail.com>
 <34ec506d-bec1-544f-9067-2109bd0db1e5@gmail.com>
Message-ID: <93be1744-51e7-7d97-ee08-cb16857b79a2@gmail.com>


This has now been mostly fixed in R-devel. What remains to be resolved 
is that some packages with custom make files cannot be installed from 
source (when R is installed into a directory with space in its name and 
short file names are not available)

Tomas



On 10/17/2017 10:37 AM, Tomas Kalibera wrote:
> Hi Zach,
>
> thanks for the report, I can reproduce the problem and confirm it is a 
> bug in R and will be fixed.
>
> Hopefully it only impacts few users now. The workaround is to create 
> the short name for the directory where R is installed, using "fsutil 
> file setshortname" (for all elements of the path that contain space in 
> their name). One can revert this by setting the shortname to an empty 
> string (""). At least for the latter one may need to boot in safe mode.
>
> Best
> Tomas
>
>
> On 09/17/2017 08:23 PM, Zach Bjornson wrote:
>> Hello,
>>
>> R appears to assume that Windows drives have short file names (SFN, 8.3)
>> enabled; for example, that "C:/Program Files/..." is addressable as
>> "C:/Progra~1/...". Newer versions of Windows have SFN disabled on non-OS
>> drives, however.
>>
>> This means that if you install R on a non-OS drive, you
>> - can't start R.exe from the command line.
>> - consequently, anything that attempts to spawn a new R process also 
>> fails.
>> This includes a lot of the commands from the popular devtools 
>> package. More
>> discussion and background: 
>> https://github.com/hadley/devtools/issues/1514
>>
>> I don't have access to bugzilla to file this there.
>>
>> Thanks and best,
>> Zach
>>
>> ????[[alternative HTML version deleted]]
>>
>> ______________________________________________
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel
>
>


From plummerm at iarc.fr  Fri Oct 20 18:02:20 2017
From: plummerm at iarc.fr (Martyn Plummer)
Date: Fri, 20 Oct 2017 16:02:20 +0000
Subject: [Rd] Illegal Logical Values
In-Reply-To: <619239410.977475.1508508076632@mail.yahoo.com>
References: <619239410.977475.1508508076632.ref@mail.yahoo.com>
 <619239410.977475.1508508076632@mail.yahoo.com>
Message-ID: <1508515339.8328.305.camel@iarc.fr>

On Fri, 2017-10-20 at 14:01 +0000, brodie gaslam via R-devel wrote:
> I'm wondering if WRE Section 5.2 should be a little more explicit
> about misuse of integer values other than NA, 0, and 1 in LGLSXPs. 
> I'm thinking of this passage:
> 
> > Logical values are sent as 0 (FALSE), 1 (TRUE) or INT_MIN =
> > -2147483648 (NA, but only if NAOK is true), and the compiled code
> > should return one of these three values. (Non-zero values other
> > than INT_MIN are mapped to TRUE.) 
> 
> The parenthetical seems to suggest that something like 'LOGICAL(x)[0]
> = 2;' will be treated as TRUE, which it sometimes is, and sometimes
> isn't:

The title of Section 5.2 is "Interface functions .C and .Fortran" and
the text above refers to those interfaces. It explains how logical
vectors are mapped to C integer arrays on entry and back again on exit.

This does work as advertised. Here is a simple example. File
"nottrue.c" contains the text

void nottrue(int *x)
{
   x[0] = 2;
}

This is compiled with "R CMD SHLIB nottrue.c" to created the shared
object "nottrue.so"

> dyn.load("nottrue.so")
> a <- .C("nottrue", x=integer(1))
> a
$x
[1] 2

> a <- .C("nottrue", x=logical(1))
> a
$x
[1] TRUE

> isTRUE(a$x)
[1] TRUE
> as.integer(a)
[1] 1

So for a logical argument, the integer value 2 is mapped back to a
valid value on return.

> not.true <- inline::cfunction(body='
>   SEXP res = allocVector(LGLSXP, 1);
>   LOGICAL(res)[0] = 2;
>   return res;'
> )()
> not.true
> ## [1] TRUE
> not.true == TRUE
> ## [1] FALSE
> not.true[1] == TRUE  # due to scalar subset handling
> ## [1] TRUE
> not.true == 2L
> ## [1] TRUE

In your last example, not.true is coerced to integer (as explain in the
help for ("==") and its integer value of 2 is recovered.

> Perhaps a more explicit warning that using anything other than 0, 1,
> or NA is undefined behavior is warranted?  Obviously people should
> know better than to expect correct behavior, but the fact that the
> behavior is correct in some cases (e.g. printing, scalar subsetting)
> might be confusing.

Yes if people are tripping up on this then we could clarify that the
.Call interface does not remap logical vectors on exit. Hence 
assignment of any value other than 0, 1 or INT_MIN to the elements of a
logical vector may cause unexpected behaviour when this vector is
returned to R.

Martyn

> >
> Best,
> B.rodie.
> 
> 	[[alternative HTML version deleted]]
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel

From stephen.berman at gmx.net  Fri Oct 20 18:27:33 2017
From: stephen.berman at gmx.net (Stephen Berman)
Date: Fri, 20 Oct 2017 18:27:33 +0200
Subject: [Rd] Another issue with Sys.timezone
In-Reply-To: <23017.41630.884512.113683@stat.math.ethz.ch> (Martin Maechler's
 message of "Fri, 20 Oct 2017 09:15:42 +0200")
References: <871sm570d3.fsf@gmx.net>
 <23012.59579.35802.920274@stat.math.ethz.ch>
 <23015.31941.397029.272777@stat.math.ethz.ch> <87r2tzmarx.fsf@gmx.net>
 <23017.41630.884512.113683@stat.math.ethz.ch>
Message-ID: <87lgk5ss22.fsf@gmx.net>

On Fri, 20 Oct 2017 09:15:42 +0200 Martin Maechler <maechler at stat.math.ethz.ch> wrote:

>>>>>> Stephen Berman <stephen.berman at gmx.net>
>>>>>>     on Thu, 19 Oct 2017 17:12:50 +0200 writes:
>
>     > On Wed, 18 Oct 2017 18:09:41 +0200 Martin Maechler
>     > <maechler at stat.math.ethz.ch> wrote:
>     >>>>>>> Martin Maechler <maechler at stat.math.ethz.ch>
>     >>>>>>> on Mon, 16 Oct 2017 19:13:31 +0200 writes:
>
[...]
>     >>> whereas on Windows I get Europe/Berlin for the first (why on
>     >>> earth - I'm really in Zurich) and get "CEST" ("Central European Summer
>     >>> Time")
>     >>> for the 2nd one instead of NA ... simply using a smarter version
>     >>> of your proposal.   The windows source is
>     >>> in R's source at  src/library/base/R/windows/system.R :
>     >>> 
>     >>> Sys.timezone <- function(location = TRUE)
>     >>> {
>     >>> tz <- Sys.getenv("TZ", names = FALSE)
>     >>> if(nzchar(tz)) return(tz)
>     >>> if(location) return(.Internal(tzone_name()))
>     >>> z <- as.POSIXlt(Sys.time())
>     >>> zz <- attr(z, "tzone")
>     >>> if(length(zz) == 3L) zz[2L + z$isdst] else zz[1L]
>     >>> }
>     >>> 
>     >>> >From what I read, the last three lines also work in your setup
>     >>> where it seems zz would be of length 1, right ?
>
>     > Those line do indeed work here, but zz has three elements:
>
>     >> attributes(as.POSIXlt(Sys.time()))$tzone
>     > [1] ""     "CET"  "CEST"
>
> { "but" ??   yes, three elements is what I see too, but for that
>   reason there's the  if(length(zz) == 3L) ... }

The "but" was in response to "it seems zz would be of length 1", but
perhaps I misunderstood you.

[...]
>     >> As you say yourself, the above system("... xargs md5sum ...")
>     >> using workaround is really too platform specific  but I'd guess
>     >> there should be a less error prone way to get the long timezone
>     >> name on your system ...
>
>     > If I understand the zic(8) man page, the files in /usr/share/zoneinfo
>     > should contain this information, but I don't know how to extract it,
>     > since these are compiled files.  And since on my system /etc/localtime
>     > is a copy of one of these compiled files, I don't know of any other way
>     > to recover the location name without comparing it to those files.
>
>     >> If that remains "contained" (i.e. small) and works with files
>     >> and R's files tools -- e.g. file.*() ones [but not system()],
>     >> I'd consider a patch to the above source file
>     >> (sent by you to the R-devel mailing list --- or after having
>     >> gotten an account there by asking, via bug report & patch
>     >> attachment at https://bugs.r-project.org/ )
>
>     > If comparing file size sufficed, that would be easy to do in R;
>     > unfortunately, it is not sufficient, since some files designating
>     > different time zones in /usr/share/zoneinfo do have the same size.  So
>     > the only alternative I can think of is to compare bytes, e.g. with
>     > md5sum or with cmp.  Is there some way to do this in R without using
>     > system()?
>
> Can't you use
>       tz1 <- readBin("/etc/localtime", "raw", 200L)
> plus later
>       tz2 <- gsub(.......,  rawToChar(tz1))
>
> on your  /etc/localtime file 
> almost identically as the current code does for "/etc/timezone" ?

Oh, thanks.  I've looked at this code over and over again in the last
few days and somehow still didn't see its usefulness (maybe because I
haven't had occasion to deal with binary data in R till now).  Anyway,
just substituting "/etc/localtime" for "/etc/timezone" doesn't work,
since my /etc/localtime file seems not to hold the timezone location
name in a form recoverable with rawToChar() (all I see are the
abbreviated timezones CEST, CEMT and CET-1CEST); but I can use the raw
bytes to make the comparison with files in /usr/share/zoneinfo.  With
the attached patch, I get both the timezone location name (with
location=TRUE) and the abbreviated timezone (with location=FALSE).  One
thing I wonder about: is looking at just the first 200 bytes guaranteed
to be sufficient, or would it be better to use n=file.size() to examine
the whole file?

Steve Berman

-------------- next part --------------
A non-text attachment was scrubbed...
Name: datetime.R.diff
Type: text/x-patch
Size: 3890 bytes
Desc: not available
URL: <https://stat.ethz.ch/pipermail/r-devel/attachments/20171020/a393193c/attachment.bin>

From trevor.l.davis at gmail.com  Fri Oct 20 20:09:16 2017
From: trevor.l.davis at gmail.com (Trevor Davis)
Date: Fri, 20 Oct 2017 11:09:16 -0700
Subject: [Rd] Rscript Bug Report (improper parsing of [args])
Message-ID: <CAMigB8HscaN4sNHagnBZRF-ZMPCvEDZqM2tDX_6HywF3wr-P1w@mail.gmail.com>

Hi,

A user of my `optparse` package discovered a bug in Rscript's parsing of
[args]. (https://github.com/trevorld/optparse/issues/24)

I've reproduced the bug on my machine including compiling and checking the
development version of R.  I couldn't find a mention of it in the Bug
Tracker or New Features.

Can be minimally reproduced on the UNIX command line with following
commands:

    bash$ touch test.R
    bash$ Rscript test.R -g 5

    WARNING: unknown gui '5', using X11

This is a bug because according to the documentation in ?Rscript besides
`-e` the only [options] Rscript should attempt to parse should

1) Come before the file i.e. `Rscript -g X11 test.R` and not `Rscript
test.R -g X11`
2) Begin with two dashes and not one i.e. `--` and not `-' i.e. `Rscript
--gui=X11 test.R` and not `Rscript -g X11 test.R` (although I'm not sure if
the command-line Rscript even needs to be supporting the gui option).

Thanks,

Trevor

	[[alternative HTML version deleted]]


From retep.meissner at gmail.com  Fri Oct 20 21:33:18 2017
From: retep.meissner at gmail.com (Peter Meissner)
Date: Fri, 20 Oct 2017 21:33:18 +0200
Subject: [Rd] split() - unexpected sorting of results
Message-ID: <CAB-BFRp=_kmi5UaGESvzJzh6dxKz891LkFWY+nJ2uya=fQpZ7A@mail.gmail.com>

Hey,

I found this - for me - quite surprising and puzzling behaviour of split().


split(1:11, as.character(1:11))
split(1:11, 1:11)


When splitting by numerics everything works as expected - sorting of input
== sorting of output -- but when using a character vector everything gets
re-sorted alphabetical.


Although, there are some references in the help files to what happens when
using split, I did not find any note on this - for me - rather unexpected
behaviour.


I would like it best when the sorting of split results stays the same no
matter the input (sorting of input == sorting of output)

If that is not possibly a note of caution in the help pages and maybe an
example might be valuable.


Best, Peter

	[[alternative HTML version deleted]]


From i.ucar86 at gmail.com  Fri Oct 20 21:49:58 2017
From: i.ucar86 at gmail.com (=?UTF-8?B?ScOxYWtpIMOaY2Fy?=)
Date: Fri, 20 Oct 2017 21:49:58 +0200
Subject: [Rd] split() - unexpected sorting of results
In-Reply-To: <CAB-BFRp=_kmi5UaGESvzJzh6dxKz891LkFWY+nJ2uya=fQpZ7A@mail.gmail.com>
References: <CAB-BFRp=_kmi5UaGESvzJzh6dxKz891LkFWY+nJ2uya=fQpZ7A@mail.gmail.com>
Message-ID: <CALEXWq2Ycj2-Ko1jBoUPG7TsV7EAi2+2nsUcNJ6gwAqPKqXySg@mail.gmail.com>

Hi Peter,

2017-10-20 21:33 GMT+02:00 Peter Meissner <retep.meissner at gmail.com>:
> Hey,
>
> I found this - for me - quite surprising and puzzling behaviour of split().
>
>
> split(1:11, as.character(1:11))
> split(1:11, 1:11)
>
>
> When splitting by numerics everything works as expected - sorting of input
> == sorting of output -- but when using a character vector everything gets
> re-sorted alphabetical.
>
>
> Although, there are some references in the help files to what happens when
> using split, I did not find any note on this - for me - rather unexpected
> behaviour.

As the documentation states,

       f: a ?factor? in the sense that ?as.factor(f)? defines the
          grouping, or a list of such factors in which case their
          interaction is used for the grouping.

And, in fact,

> as.factor(1:11)
 [1] 1  2  3  4  5  6  7  8  9  10 11
Levels: 1 2 3 4 5 6 7 8 9 10 11

> as.factor(as.character(1:11))
 [1] 1  2  3  4  5  6  7  8  9  10 11
Levels: 1 10 11 2 3 4 5 6 7 8 9

Regards,
I?aki

> I would like it best when the sorting of split results stays the same no
> matter the input (sorting of input == sorting of output)
>
> If that is not possibly a note of caution in the help pages and maybe an
> example might be valuable.
>
>
> Best, Peter
>
>         [[alternative HTML version deleted]]
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From retep.meissner at gmail.com  Fri Oct 20 21:53:02 2017
From: retep.meissner at gmail.com (Peter Meissner)
Date: Fri, 20 Oct 2017 21:53:02 +0200
Subject: [Rd] split() - unexpected sorting of results
In-Reply-To: <CALEXWq2Ycj2-Ko1jBoUPG7TsV7EAi2+2nsUcNJ6gwAqPKqXySg@mail.gmail.com>
References: <CAB-BFRp=_kmi5UaGESvzJzh6dxKz891LkFWY+nJ2uya=fQpZ7A@mail.gmail.com>
 <CALEXWq2Ycj2-Ko1jBoUPG7TsV7EAi2+2nsUcNJ6gwAqPKqXySg@mail.gmail.com>
Message-ID: <CAB-BFRrAUMChGk8A+9JKCY6xummLZsSP07j7baJhSPqF_fzY-g@mail.gmail.com>

Thanks, for the explanation.

Still, I think this is surprising bahaviour which might be handled better.

Best, Peter

Am 20.10.2017 9:49 nachm. schrieb "I?aki ?car" <i.ucar86 at gmail.com>:

> Hi Peter,
>
> 2017-10-20 21:33 GMT+02:00 Peter Meissner <retep.meissner at gmail.com>:
> > Hey,
> >
> > I found this - for me - quite surprising and puzzling behaviour of
> split().
> >
> >
> > split(1:11, as.character(1:11))
> > split(1:11, 1:11)
> >
> >
> > When splitting by numerics everything works as expected - sorting of
> input
> > == sorting of output -- but when using a character vector everything gets
> > re-sorted alphabetical.
> >
> >
> > Although, there are some references in the help files to what happens
> when
> > using split, I did not find any note on this - for me - rather unexpected
> > behaviour.
>
> As the documentation states,
>
>        f: a ?factor? in the sense that ?as.factor(f)? defines the
>           grouping, or a list of such factors in which case their
>           interaction is used for the grouping.
>
> And, in fact,
>
> > as.factor(1:11)
>  [1] 1  2  3  4  5  6  7  8  9  10 11
> Levels: 1 2 3 4 5 6 7 8 9 10 11
>
> > as.factor(as.character(1:11))
>  [1] 1  2  3  4  5  6  7  8  9  10 11
> Levels: 1 10 11 2 3 4 5 6 7 8 9
>
> Regards,
> I?aki
>
> > I would like it best when the sorting of split results stays the same no
> > matter the input (sorting of input == sorting of output)
> >
> > If that is not possibly a note of caution in the help pages and maybe an
> > example might be valuable.
> >
> >
> > Best, Peter
> >
> >         [[alternative HTML version deleted]]
> >
> > ______________________________________________
> > R-devel at r-project.org mailing list
> > https://stat.ethz.ch/mailman/listinfo/r-devel
>

	[[alternative HTML version deleted]]


From hpages at fredhutch.org  Sat Oct 21 01:32:44 2017
From: hpages at fredhutch.org (=?UTF-8?B?SGVydsOpIFBhZ8Oocw==?=)
Date: Fri, 20 Oct 2017 16:32:44 -0700
Subject: [Rd] split() - unexpected sorting of results
In-Reply-To: <CAB-BFRrAUMChGk8A+9JKCY6xummLZsSP07j7baJhSPqF_fzY-g@mail.gmail.com>
References: <CAB-BFRp=_kmi5UaGESvzJzh6dxKz891LkFWY+nJ2uya=fQpZ7A@mail.gmail.com>
 <CALEXWq2Ycj2-Ko1jBoUPG7TsV7EAi2+2nsUcNJ6gwAqPKqXySg@mail.gmail.com>
 <CAB-BFRrAUMChGk8A+9JKCY6xummLZsSP07j7baJhSPqF_fzY-g@mail.gmail.com>
Message-ID: <59EA879C.2060606@fredhutch.org>

Hi,

On 10/20/2017 12:53 PM, Peter Meissner wrote:
> Thanks, for the explanation.
>
> Still, I think this is surprising bahaviour which might be handled better.

Maybe a little surprising, but no more than:

 > x <- sample(11L)

 > sort(x)
  [1]  1  2  3  4  5  6  7  8  9 10 11

 > sort(as.character(x))
  [1] "1"  "10" "11" "2"  "3"  "4"  "5"  "6"  "7"  "8"  "9"

The fact that sort(), as.factor(), split() and many other things behave
consistently with respect to the underlying order of character vectors
avoids other even bigger surprises.

Also note that the underlying order of character vectors actually
depends on your locale. One way to guarantee consistent results across
platforms/locales is by explicitly specifying the levels when making
a factor e.g.

   f <- factor(x, levels=unique(x))
   split(1:11, f)

This is particularly sensible when writing unit tests.

Cheers,
H.

>
> Best, Peter
>
> Am 20.10.2017 9:49 nachm. schrieb "I?aki ?car" <i.ucar86 at gmail.com>:
>
>> Hi Peter,
>>
>> 2017-10-20 21:33 GMT+02:00 Peter Meissner <retep.meissner at gmail.com>:
>>> Hey,
>>>
>>> I found this - for me - quite surprising and puzzling behaviour of
>> split().
>>>
>>>
>>> split(1:11, as.character(1:11))
>>> split(1:11, 1:11)
>>>
>>>
>>> When splitting by numerics everything works as expected - sorting of
>> input
>>> == sorting of output -- but when using a character vector everything gets
>>> re-sorted alphabetical.
>>>
>>>
>>> Although, there are some references in the help files to what happens
>> when
>>> using split, I did not find any note on this - for me - rather unexpected
>>> behaviour.
>>
>> As the documentation states,
>>
>>         f: a ?factor? in the sense that ?as.factor(f)? defines the
>>            grouping, or a list of such factors in which case their
>>            interaction is used for the grouping.
>>
>> And, in fact,
>>
>>> as.factor(1:11)
>>   [1] 1  2  3  4  5  6  7  8  9  10 11
>> Levels: 1 2 3 4 5 6 7 8 9 10 11
>>
>>> as.factor(as.character(1:11))
>>   [1] 1  2  3  4  5  6  7  8  9  10 11
>> Levels: 1 10 11 2 3 4 5 6 7 8 9
>>
>> Regards,
>> I?aki
>>
>>> I would like it best when the sorting of split results stays the same no
>>> matter the input (sorting of input == sorting of output)
>>>
>>> If that is not possibly a note of caution in the help pages and maybe an
>>> example might be valuable.
>>>
>>>
>>> Best, Peter
>>>
>>>          [[alternative HTML version deleted]]
>>>
>>> ______________________________________________
>>> R-devel at r-project.org mailing list
>>> https://urldefense.proofpoint.com/v2/url?u=https-3A__stat.ethz.ch_mailman_listinfo_r-2Ddevel&d=DwIGaQ&c=eRAMFD45gAfqt84VtBcfhQ&r=BK7q3XeAvimeWdGbWY_wJYbW0WYiZvSXAJJKaaPhzWA&m=o5-lZT7zAjFNU8C0Z9D7XaQO_2NGmhKF-IbGZFhSvO0&s=4cZ9rSLJAVnnjULGMCDPAclXHoc9_le3Z1DrZg0nQqg&e=
>>
>
> 	[[alternative HTML version deleted]]
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://urldefense.proofpoint.com/v2/url?u=https-3A__stat.ethz.ch_mailman_listinfo_r-2Ddevel&d=DwIGaQ&c=eRAMFD45gAfqt84VtBcfhQ&r=BK7q3XeAvimeWdGbWY_wJYbW0WYiZvSXAJJKaaPhzWA&m=o5-lZT7zAjFNU8C0Z9D7XaQO_2NGmhKF-IbGZFhSvO0&s=4cZ9rSLJAVnnjULGMCDPAclXHoc9_le3Z1DrZg0nQqg&e=
>

-- 
Herv? Pag?s

Program in Computational Biology
Division of Public Health Sciences
Fred Hutchinson Cancer Research Center
1100 Fairview Ave. N, M1-B514
P.O. Box 19024
Seattle, WA 98109-1024

E-mail: hpages at fredhutch.org
Phone:  (206) 667-5791
Fax:    (206) 667-1319


From ruipbarradas at sapo.pt  Sat Oct 21 06:35:29 2017
From: ruipbarradas at sapo.pt (Rui Barradas)
Date: Sat, 21 Oct 2017 05:35:29 +0100
Subject: [Rd] split() - unexpected sorting of results
In-Reply-To: <59EA879C.2060606@fredhutch.org>
References: <CAB-BFRp=_kmi5UaGESvzJzh6dxKz891LkFWY+nJ2uya=fQpZ7A@mail.gmail.com>
 <CALEXWq2Ycj2-Ko1jBoUPG7TsV7EAi2+2nsUcNJ6gwAqPKqXySg@mail.gmail.com>
 <CAB-BFRrAUMChGk8A+9JKCY6xummLZsSP07j7baJhSPqF_fzY-g@mail.gmail.com>
 <59EA879C.2060606@fredhutch.org>
Message-ID: <59EACE91.5040402@sapo.pt>

Hello,

In order to solve that problem of sorting numerics made characters there 
is package stringr, functions str_sort and str_order.

library(stringr)

set.seed(2447)

x <- sample(11L)
sort(as.character(x))
[1] "1"  "10" "11" "2"  "3"  "4"  "5"  "6"  "7"  "8"  "9"

str_sort(as.character(x), numeric = TRUE)
[1] "1"  "2"  "3"  "4"  "5"  "6"  "7"  "8"  "9"  "10" "11"

str_order(as.character(x), numeric = TRUE)
#[1]  1  4 11  8  6  5  3 10  9  7  2

i <- str_order(as.character(x), numeric = TRUE)
as.character(x)[i]
#[1] "1"  "2"  "3"  "4"  "5"  "6"  "7"  "8"  "9"  "10" "11"


Unfortunately this does not solve the OP's question, factor(), 
as.factor(), split() and others use the base R sorter and this can only 
be changed by changing their sources.

Hope this helps,

Rui Barradas

Em 21-10-2017 00:32, Herv? Pag?s escreveu:
> Hi,
>
> On 10/20/2017 12:53 PM, Peter Meissner wrote:
>> Thanks, for the explanation.
>>
>> Still, I think this is surprising bahaviour which might be handled
>> better.
>
> Maybe a little surprising, but no more than:
>
>  > x <- sample(11L)
>
>  > sort(x)
>   [1]  1  2  3  4  5  6  7  8  9 10 11
>
>  > sort(as.character(x))
>   [1] "1"  "10" "11" "2"  "3"  "4"  "5"  "6"  "7"  "8"  "9"
>
> The fact that sort(), as.factor(), split() and many other things behave
> consistently with respect to the underlying order of character vectors
> avoids other even bigger surprises.
>
> Also note that the underlying order of character vectors actually
> depends on your locale. One way to guarantee consistent results across
> platforms/locales is by explicitly specifying the levels when making
> a factor e.g.
>
>    f <- factor(x, levels=unique(x))
>    split(1:11, f)
>
> This is particularly sensible when writing unit tests.
>
> Cheers,
> H.
>
>>
>> Best, Peter
>>
>> Am 20.10.2017 9:49 nachm. schrieb "I?aki ?car" <i.ucar86 at gmail.com>:
>>
>>> Hi Peter,
>>>
>>> 2017-10-20 21:33 GMT+02:00 Peter Meissner <retep.meissner at gmail.com>:
>>>> Hey,
>>>>
>>>> I found this - for me - quite surprising and puzzling behaviour of
>>> split().
>>>>
>>>>
>>>> split(1:11, as.character(1:11))
>>>> split(1:11, 1:11)
>>>>
>>>>
>>>> When splitting by numerics everything works as expected - sorting of
>>> input
>>>> == sorting of output -- but when using a character vector everything
>>>> gets
>>>> re-sorted alphabetical.
>>>>
>>>>
>>>> Although, there are some references in the help files to what happens
>>> when
>>>> using split, I did not find any note on this - for me - rather
>>>> unexpected
>>>> behaviour.
>>>
>>> As the documentation states,
>>>
>>>         f: a ?factor? in the sense that ?as.factor(f)? defines the
>>>            grouping, or a list of such factors in which case their
>>>            interaction is used for the grouping.
>>>
>>> And, in fact,
>>>
>>>> as.factor(1:11)
>>>   [1] 1  2  3  4  5  6  7  8  9  10 11
>>> Levels: 1 2 3 4 5 6 7 8 9 10 11
>>>
>>>> as.factor(as.character(1:11))
>>>   [1] 1  2  3  4  5  6  7  8  9  10 11
>>> Levels: 1 10 11 2 3 4 5 6 7 8 9
>>>
>>> Regards,
>>> I?aki
>>>
>>>> I would like it best when the sorting of split results stays the
>>>> same no
>>>> matter the input (sorting of input == sorting of output)
>>>>
>>>> If that is not possibly a note of caution in the help pages and
>>>> maybe an
>>>> example might be valuable.
>>>>
>>>>
>>>> Best, Peter
>>>>
>>>>          [[alternative HTML version deleted]]
>>>>
>>>> ______________________________________________
>>>> R-devel at r-project.org mailing list
>>>> https://urldefense.proofpoint.com/v2/url?u=https-3A__stat.ethz.ch_mailman_listinfo_r-2Ddevel&d=DwIGaQ&c=eRAMFD45gAfqt84VtBcfhQ&r=BK7q3XeAvimeWdGbWY_wJYbW0WYiZvSXAJJKaaPhzWA&m=o5-lZT7zAjFNU8C0Z9D7XaQO_2NGmhKF-IbGZFhSvO0&s=4cZ9rSLJAVnnjULGMCDPAclXHoc9_le3Z1DrZg0nQqg&e=
>>>>
>>>
>>
>>     [[alternative HTML version deleted]]
>>
>> ______________________________________________
>> R-devel at r-project.org mailing list
>> https://urldefense.proofpoint.com/v2/url?u=https-3A__stat.ethz.ch_mailman_listinfo_r-2Ddevel&d=DwIGaQ&c=eRAMFD45gAfqt84VtBcfhQ&r=BK7q3XeAvimeWdGbWY_wJYbW0WYiZvSXAJJKaaPhzWA&m=o5-lZT7zAjFNU8C0Z9D7XaQO_2NGmhKF-IbGZFhSvO0&s=4cZ9rSLJAVnnjULGMCDPAclXHoc9_le3Z1DrZg0nQqg&e=
>>
>>
>


From radford at cs.toronto.edu  Sat Oct 21 16:14:27 2017
From: radford at cs.toronto.edu (Radford Neal)
Date: Sat, 21 Oct 2017 10:14:27 -0400
Subject: [Rd] Illegal Logical Values
In-Reply-To: <mailman.9.1508580002.48586.r-devel@r-project.org>
References: <mailman.9.1508580002.48586.r-devel@r-project.org>
Message-ID: <20171021141427.GA6941@mail.cs.toronto.edu>

> On Fri, 2017-10-20 at 14:01 +0000, brodie gaslam via R-devel wrote:

> > I'm thinking of this passage:
> > 
> > > Logical values are sent as 0 (FALSE), 1 (TRUE) or INT_MIN =
> > > -2147483648 (NA, but only if NAOK is true), and the compiled code
> > > should return one of these three values. (Non-zero values other
> > > than INT_MIN are mapped to TRUE.) 
> > 
> > The parenthetical seems to suggest that something like 'LOGICAL(x)[0]
> > = 2;' will be treated as TRUE, which it sometimes is, and sometimes
> > isn't:
> 
> From: Martyn Plummer <plummerm at iarc.fr>

> The title of Section 5.2 is "Interface functions .C and .Fortran" and
> the text above refers to those interfaces. It explains how logical
> vectors are mapped to C integer arrays on entry and back again on exit.
> 
> This does work as advertised. 


Not always.  As I reported on bugzilla three years ago (PR#15878), it
only works if the logical argument does not have to be copied.  The
bug has been fixed in pqR since pqR-2014-09-30.

   Radford Neal


From suharto_anggono at yahoo.com  Sun Oct 22 01:43:54 2017
From: suharto_anggono at yahoo.com (Suharto Anggono Suharto Anggono)
Date: Sat, 21 Oct 2017 23:43:54 +0000 (UTC)
Subject: [Rd] Function 'factor' issues
References: <1966539778.1930085.1508629434507.ref@mail.yahoo.com>
Message-ID: <1966539778.1930085.1508629434507@mail.yahoo.com>

My idea (like in https://bugs.r-project.org/bugzilla/attachment.cgi?id=1540 ):
- For remapping, use
f <- match(xlevs, nlevs)[f]
instead of
f <- match(xlevs[f], nlevs)
(I have mentioned it).
- Remap only if length(nlevs) differs from length(xlevs) .


On use of 'order' in function 'factor' in R devel, factor.Rd still says 'sort.list' in "Details" section.

My comments on the part of "Details" section:
- Sortable 'x' is needed only when 'levels' is not specified.
- Complete requirements for properly working factor(x) in R devel: 'as.character', 'order', 'unique' corresponding to '['. Take data frame and "Surv" object (package survival) as examples.

--------------------------------------------
On Wed, 18/10/17, Martin Maechler <maechler at stat.math.ethz.ch> wrote:

 Subject: Re: [Rd] Function 'factor' issues

 Cc: r-devel at r-project.org
 Date: Wednesday, 18 October, 2017, 11:54 PM

>>>>> Suharto Anggono Suharto Anggono via R-devel <r-devel at r-project.org>
>>>>>? ?  on Sun, 15 Oct 2017 16:03:48 +0000 writes:

 ?
? ? > In R devel, function 'factor' has been changed, allowing and merging duplicated 'labels'.

Indeed.? That had been asked for and discussed a bit on this
list from June 14 to June 23, starting at
?? https://stat.ethz.ch/pipermail/r-devel/2017-June/074451.html

? ? > Issue 1: Handling of specified 'labels' without duplicates is slower than before.
? ? > Example:
? ? > x <- rep(1:26, 40000)
? ? > system.time(factor(x, levels=1:26, labels=letters))

? ? > Function 'factor' is already rather slow because of conversion to character. Please don't add slowdown.

Indeed, I doo see a ~ 20%? performance loss for the example
above, and I may get to look into this.
However, in R-devel there have been important internal
changes (ALTREP additions) some of which are currently giving
some performance losses in some cases (but they have the
potential to give big performance _gains_ e.g. for simple
indexing into large vectors which may apply here !).
For factor(), these C level "ALTREP" changes may not be the reason at
all for the slow down;
I may find time to investigate further.

{{ For the ALTREP-change slowdowns I've noticed in some
?? indexing/subset operations, we'll definitely have time to look into
?? before R-devel is going to be released next spring... and as mentioned,
?? these operations may even become considerably faster *thanks*
?? to ALTREP ... }}

? ? > Issue 2: While default 'labels' is 'levels', not specifying 'labels' may be different from specifying 'labels' to be the same as 'levels'.

? ? > Example 1:
? ? > as.integer(factor(c(NA,2,3), levels = c(2, NA), exclude = NULL))
? ? > is different from
? ? > as.integer(factor(c(NA,2,3), levels = c(2, NA), labels = c(2, NA), exclude = NULL))

You are right.? But this is not so exceptional and part of the new feature of
'labels' allowing to "fix up" things in such cases.? While it
would be nice if this was not the case the same phenomenon
happens in other functions as well because of lazy evaluation.
I think I had noticed that already and at the time found
"not easy" to work around.
(There are many aspects about changing such important base functions:
 1. not breaking back compatibility ((unless in rare
? ? border cases, where we are sure it's worth))
 2. Keeping code relatively transparent
 3. Keep the semantics "simple" to document and as intuitive as possible
)

? ? > File reg-tests-1d.R indicates that 'factor' behavior with NA is slightly changed, for the better. NA entry (because it is unmatched to 'levels' argument or is in 'exclude') is absorbed into NA in "levels" attribute (comes from 'labels' argument), if any. The issue is that it happens only when 'labels' is specified.

I'm not sure anymore, but I think I had noticed that also in
June, considered to change it and found that such a changed
factor() would be too different from what it has "always been".
So, yes, IIRC, this current behavior is on purpose, if only for back compatibility.


? ? > Function 'factor' could use match(xlevs, nlevs)[f]. It doesn't match NA to NA level. When 'f' is long enough, longer than 'xlevs', it is faster than match(xlevs[f], nlevs).

? ? > Example 2:
? ? > With
? ? > levs <- c("A","A")? ,
? ? > factor(levs, levels=levs)
? ? > gives error, but
? ? > factor(levs, levels=levs, labels=levs)
? ? > doesn't.

yes, again that is a consequence of what you said above (before
'Example 1')

? ? > Note: In theory, if function 'factor' merged duplicated 'labels' in all cases, at least in
? ? > factor(c(sqrt(2)^2, 2))? ,
? ? > function 'factor' could do matching on original 'x' (without conversion to character), as in R before version 2.10.0. If function 'factor' did it,
? ? > factor(c(sqrt(2)^2, 2), levels = c(sqrt(2)^2, 2), labels = c("sqrt(2)^2", "2"))
? ? > could take sqrt(2)^2 and 2 as distinct.

Well, that may be interesting.. but I doubt if that's somewhere
we should go, easily, because? factor() has been documented to do
what it does now (with very slightly rounding such numbers via as.character(.))
and hence such a change would typically lead to much work for
too many people.

I do see that indeed the? as.character(.) inside factor() takes
most of the CPU time used in largish factor() examples [as your
first], and indeed, for the case of integer 'x', we really could
be much faster in factor construction.?? 

? ? > Another thing: Function 'factor' in R devel uses 'order' instead of 'sort.list'.

This has been by a change on purpose --- well documented as new
feature in NEWS --- to allow using *methods* for order(),
i.e. for the workhorse of order, xtfrm()? so that factor(OB)
works for more general objects OB.


? ? > The case of as.factor(x) for
? ? > x <- as.data.frame(character(0))
? ? > in tests/isas-tests.Rout.save reveals that 'order' on data frame is strange.

? ? > x <- as.data.frame(character(0))
? ? > y <- unique(x)
? ? > length(y)? # 1
? ? > length(order(y))? # 0
? ? > length(as.character(y))? # 1

? ? > order(y) is not as long as as.character(y).

? ? > Another example:
? ? > length(mtcars)? # 11
? ? > length(order(mtcars))? # 352

I agree that? order(<data.frame>) may look a bit strange;
I've spent more than an hour into looking into it, and making it
[actually,? rank(<data.frame>,..) ] 
an error, but ended up finding much evidence that there's too
much related code, sometimes even in base R which assumes that a
numeric data frame behaves the same as a numeric matrix.

And also, if you carefully read the help files, of
? order(),
? xtfrm(),
? rank()

there's always mentioned that these work for R object 'x'
basically as long as?? x[!is.na(x)]?? returns a "nice"
(typically atomic) vector .. which is the case for such data frames.

The consequence, that? in R-devel, currently

? ? factor(mtcars)

just "works",? is indeed unexpected or even "shocking", and I
still don't know what the most elegant and reasonable way would
be to make this an error -- as it used to be when? sort.list()
was used instead of order().? I'd find it ugly (and even more
time consuming!) if factor() itself would have to check its
argument and signal an error for a data.frame.

The relevant call tree is

? factor() -> order() -> xtfrm() -> xtfrm.default() -> rank()

and as I said, rank(x,*) works when? x[!is.na(x)]? is an atomic
"numeric-like" vector? which is the case for a numeric data
frame such as 'mtcars'.

Martin Maechler
ETH Zurich


From retep.meissner at gmail.com  Sun Oct 22 14:01:48 2017
From: retep.meissner at gmail.com (Peter Meissner)
Date: Sun, 22 Oct 2017 14:01:48 +0200
Subject: [Rd] split() - unexpected sorting of results
In-Reply-To: <59EACE91.5040402@sapo.pt>
References: <CAB-BFRp=_kmi5UaGESvzJzh6dxKz891LkFWY+nJ2uya=fQpZ7A@mail.gmail.com>
 <CALEXWq2Ycj2-Ko1jBoUPG7TsV7EAi2+2nsUcNJ6gwAqPKqXySg@mail.gmail.com>
 <CAB-BFRrAUMChGk8A+9JKCY6xummLZsSP07j7baJhSPqF_fzY-g@mail.gmail.com>
 <59EA879C.2060606@fredhutch.org> <59EACE91.5040402@sapo.pt>
Message-ID: <CAB-BFRpJX4_tfXa6nZR2DEfBfLVsbvzEFe7yP5AumCbof6faiA@mail.gmail.com>

Thank you all for your input - most appreciated.

Best, Peter

Am 21.10.2017 07:35 schrieb "Rui Barradas" <ruipbarradas at sapo.pt>:

> Hello,
>
> In order to solve that problem of sorting numerics made characters there
> is package stringr, functions str_sort and str_order.
>
> library(stringr)
>
> set.seed(2447)
>
> x <- sample(11L)
> sort(as.character(x))
> [1] "1"  "10" "11" "2"  "3"  "4"  "5"  "6"  "7"  "8"  "9"
>
> str_sort(as.character(x), numeric = TRUE)
> [1] "1"  "2"  "3"  "4"  "5"  "6"  "7"  "8"  "9"  "10" "11"
>
> str_order(as.character(x), numeric = TRUE)
> #[1]  1  4 11  8  6  5  3 10  9  7  2
>
> i <- str_order(as.character(x), numeric = TRUE)
> as.character(x)[i]
> #[1] "1"  "2"  "3"  "4"  "5"  "6"  "7"  "8"  "9"  "10" "11"
>
>
> Unfortunately this does not solve the OP's question, factor(),
> as.factor(), split() and others use the base R sorter and this can only be
> changed by changing their sources.
>
> Hope this helps,
>
> Rui Barradas
>
> Em 21-10-2017 00:32, Herv? Pag?s escreveu:
>
>> Hi,
>>
>> On 10/20/2017 12:53 PM, Peter Meissner wrote:
>>
>>> Thanks, for the explanation.
>>>
>>> Still, I think this is surprising bahaviour which might be handled
>>> better.
>>>
>>
>> Maybe a little surprising, but no more than:
>>
>>  > x <- sample(11L)
>>
>>  > sort(x)
>>   [1]  1  2  3  4  5  6  7  8  9 10 11
>>
>>  > sort(as.character(x))
>>   [1] "1"  "10" "11" "2"  "3"  "4"  "5"  "6"  "7"  "8"  "9"
>>
>> The fact that sort(), as.factor(), split() and many other things behave
>> consistently with respect to the underlying order of character vectors
>> avoids other even bigger surprises.
>>
>> Also note that the underlying order of character vectors actually
>> depends on your locale. One way to guarantee consistent results across
>> platforms/locales is by explicitly specifying the levels when making
>> a factor e.g.
>>
>>    f <- factor(x, levels=unique(x))
>>    split(1:11, f)
>>
>> This is particularly sensible when writing unit tests.
>>
>> Cheers,
>> H.
>>
>>
>>> Best, Peter
>>>
>>> Am 20.10.2017 9:49 nachm. schrieb "I?aki ?car" <i.ucar86 at gmail.com>:
>>>
>>> Hi Peter,
>>>>
>>>> 2017-10-20 21:33 GMT+02:00 Peter Meissner <retep.meissner at gmail.com>:
>>>>
>>>>> Hey,
>>>>>
>>>>> I found this - for me - quite surprising and puzzling behaviour of
>>>>>
>>>> split().
>>>>
>>>>>
>>>>>
>>>>> split(1:11, as.character(1:11))
>>>>> split(1:11, 1:11)
>>>>>
>>>>>
>>>>> When splitting by numerics everything works as expected - sorting of
>>>>>
>>>> input
>>>>
>>>>> == sorting of output -- but when using a character vector everything
>>>>> gets
>>>>> re-sorted alphabetical.
>>>>>
>>>>>
>>>>> Although, there are some references in the help files to what happens
>>>>>
>>>> when
>>>>
>>>>> using split, I did not find any note on this - for me - rather
>>>>> unexpected
>>>>> behaviour.
>>>>>
>>>>
>>>> As the documentation states,
>>>>
>>>>         f: a ?factor? in the sense that ?as.factor(f)? defines the
>>>>            grouping, or a list of such factors in which case their
>>>>            interaction is used for the grouping.
>>>>
>>>> And, in fact,
>>>>
>>>> as.factor(1:11)
>>>>>
>>>>   [1] 1  2  3  4  5  6  7  8  9  10 11
>>>> Levels: 1 2 3 4 5 6 7 8 9 10 11
>>>>
>>>> as.factor(as.character(1:11))
>>>>>
>>>>   [1] 1  2  3  4  5  6  7  8  9  10 11
>>>> Levels: 1 10 11 2 3 4 5 6 7 8 9
>>>>
>>>> Regards,
>>>> I?aki
>>>>
>>>> I would like it best when the sorting of split results stays the
>>>>> same no
>>>>> matter the input (sorting of input == sorting of output)
>>>>>
>>>>> If that is not possibly a note of caution in the help pages and
>>>>> maybe an
>>>>> example might be valuable.
>>>>>
>>>>>
>>>>> Best, Peter
>>>>>
>>>>>          [[alternative HTML version deleted]]
>>>>>
>>>>> ______________________________________________
>>>>> R-devel at r-project.org mailing list
>>>>> https://urldefense.proofpoint.com/v2/url?u=https-3A__stat.et
>>>>> hz.ch_mailman_listinfo_r-2Ddevel&d=DwIGaQ&c=eRAMFD45gAfqt84V
>>>>> tBcfhQ&r=BK7q3XeAvimeWdGbWY_wJYbW0WYiZvSXAJJKaaPhzWA&m=o5-lZ
>>>>> T7zAjFNU8C0Z9D7XaQO_2NGmhKF-IbGZFhSvO0&s=4cZ9rSLJAVnnjULGMCD
>>>>> PAclXHoc9_le3Z1DrZg0nQqg&e=
>>>>>
>>>>>
>>>>
>>>     [[alternative HTML version deleted]]
>>>
>>> ______________________________________________
>>> R-devel at r-project.org mailing list
>>> https://urldefense.proofpoint.com/v2/url?u=https-3A__stat.et
>>> hz.ch_mailman_listinfo_r-2Ddevel&d=DwIGaQ&c=eRAMFD45gAfqt84V
>>> tBcfhQ&r=BK7q3XeAvimeWdGbWY_wJYbW0WYiZvSXAJJKaaPhzWA&m=o5-lZ
>>> T7zAjFNU8C0Z9D7XaQO_2NGmhKF-IbGZFhSvO0&s=4cZ9rSLJAVnnjULGMCD
>>> PAclXHoc9_le3Z1DrZg0nQqg&e=
>>>
>>>
>>>
>>

	[[alternative HTML version deleted]]


From wolfgang.viechtbauer at maastrichtuniversity.nl  Sun Oct 22 18:56:12 2017
From: wolfgang.viechtbauer at maastrichtuniversity.nl (Viechtbauer Wolfgang (SP))
Date: Sun, 22 Oct 2017 16:56:12 +0000
Subject: [Rd] Font Size for View() under Linux
Message-ID: <797573475daf4a1688b60b3d8708ea87@UM-MAIL3216.unimaas.nl>

Hello,

I am using Ubuntu 16.04, using the default (Unity) window manager. The font size using View() is way too small on a high dpi monitor. I already use scaling, but View() doesn't seem affected by that. 

On Windows, the font size for View() appears to be controlled by the font size specified under the Rgui preferences / Rconsole. I thought that under Linux, it might be controlled by some .Xresources/.Xdefaults setting. Any suggestions for how I could tweak the font size here?

Best,
Wolfgang

-- 
Wolfgang Viechtbauer, Ph.D., Statistician | Department of Psychiatry and 
Neuropsychology | Maastricht University | P.O. Box 616 (VIJV1) | 6200 MD 
Maastricht, The Netherlands | +31 (43) 388-4170 | http://www.wvbauer.com 


From tomas.kalibera at gmail.com  Mon Oct 23 12:52:50 2017
From: tomas.kalibera at gmail.com (Tomas Kalibera)
Date: Mon, 23 Oct 2017 12:52:50 +0200
Subject: [Rd] Illegal Logical Values
In-Reply-To: <20171021141427.GA6941@mail.cs.toronto.edu>
References: <mailman.9.1508580002.48586.r-devel@r-project.org>
 <20171021141427.GA6941@mail.cs.toronto.edu>
Message-ID: <7de2b1c6-c529-b6a2-3ae7-acbccec91aa9@gmail.com>

On 10/21/2017 04:14 PM, Radford Neal wrote:
>> On Fri, 2017-10-20 at 14:01 +0000, brodie gaslam via R-devel wrote:
>>> I'm thinking of this passage:
>>>
>>>> Logical values are sent as 0 (FALSE), 1 (TRUE) or INT_MIN =
>>>> -2147483648 (NA, but only if NAOK is true), and the compiled code
>>>> should return one of these three values. (Non-zero values other
>>>> than INT_MIN are mapped to TRUE.)
>>> The parenthetical seems to suggest that something like 'LOGICAL(x)[0]
>>> = 2;' will be treated as TRUE, which it sometimes is, and sometimes
>>> isn't:
>> From: Martyn Plummer <plummerm at iarc.fr>
>> The title of Section 5.2 is "Interface functions .C and .Fortran" and
>> the text above refers to those interfaces. It explains how logical
>> vectors are mapped to C integer arrays on entry and back again on exit.
>>
>> This does work as advertised.
>
> Not always.  As I reported on bugzilla three years ago (PR#15878), it
> only works if the logical argument does not have to be copied.  The
> bug has been fixed in pqR since pqR-2014-09-30.
>
>     Radford Neal
Thanks, that's indeed a bug - now fixed in 73583.
Tomas

>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From lukas.stadler at oracle.com  Mon Oct 23 15:56:55 2017
From: lukas.stadler at oracle.com (Lukas Stadler)
Date: Mon, 23 Oct 2017 15:56:55 +0200
Subject: [Rd] range function with finite=T and logical parameters
Message-ID: <A7D1EB89-0A3C-456D-A73C-6E3B2B11DF3E@oracle.com>

Hi!

I was wondering about the behavior of the range function wrt. logical NAs:

> range(c(0L, 1L, NA), finite=T)
[1] 0 1
> range(c(F, T, NA), finite=T)
[1] NA NA

The documentation is quite clear that "finite = TRUE includes na.rm = TRUE?, so that I would have assumed that these two snippets would produce the same result.

- Lukas

From maechler at stat.math.ethz.ch  Mon Oct 23 18:36:05 2017
From: maechler at stat.math.ethz.ch (Martin Maechler)
Date: Mon, 23 Oct 2017 18:36:05 +0200
Subject: [Rd] range function with finite=T and logical parameters
In-Reply-To: <A7D1EB89-0A3C-456D-A73C-6E3B2B11DF3E@oracle.com>
References: <A7D1EB89-0A3C-456D-A73C-6E3B2B11DF3E@oracle.com>
Message-ID: <23022.6773.353931.80946@stat.math.ethz.ch>

>>>>> Lukas Stadler <lukas.stadler at oracle.com>
>>>>>     on Mon, 23 Oct 2017 15:56:55 +0200 writes:

    > Hi!
    > I was wondering about the behavior of the range function wrt. logical NAs:

    >> range(c(0L, 1L, NA), finite=T)
    > [1] 0 1
    >> range(c(F, T, NA), finite=T)
    > [1] NA NA

    > The documentation is quite clear that "finite = TRUE includes na.rm = TRUE?, so that I would have assumed that these two snippets would produce the same result.

    > - Lukas


I agree.  Further, another informal "rule" would require that the two calls

     range(L, *)  
     range(as.numeric(L), *)

are equivalent for logical vectors L without attributes.
I'll look into fixing this by an obvious change to (R-level)
range.default().

------

Note for the more advanced ones -- i.e. typical R-devel readers :

T and F are variables in R.  For that reason, using the language
keywords TRUE and FALSE is much preferred in such cases.  For
some tests we'd even use

    T <- FALSE

or even

    delayedAssign("F", stop("do not use 'F'  when programming with R"))

before running the tests -- just do ensure that the code to be
tested does not use these short forms.


Thank you, Lukas,  for the report!

Best,
Martin


From morkus at protonmail.com  Wed Oct 25 12:50:41 2017
From: morkus at protonmail.com (Morkus)
Date: Wed, 25 Oct 2017 06:50:41 -0400
Subject: [Rd] How to create a table structure in Java code?
Message-ID: <TNxOU9bI1Nh3erxhoQT01mOAwutGoyscR-w7sumoj2hZY0fkKbVCK1Vl-Fwd_Vs-2NQjDQyRLNixrYz-8HA6X-tZZ-ltlk0mpWWp4QD6Q90=@protonmail.com>

Hi all,

Using RConsole, it's easy to get data from the database that you can use in an R Command. Like this:

(Reference case)

irisQuery <- dbGetQuery(conn, "select * from iris")
boxM(irisQuery [,-5], irisQuery[,5])

----

(Actual case this posting is about)

Yet, if I'm getting that same (sample IRIS) data, say, in a web service possibly POSTED from a SQL command, that same data might look like this (portion of the included iris data set below). I'm thus not sure how to package the data so R likes it.

Example R-included IRIS data from SQL output:

5.1,3.5,1.4,0.2,setosa,
4.9,3,1.4,0.2,setosa,
4.7,3.2,1.3,0.2,setosa,
4.6,3.1,1.5,0.2,setosa,
5,3.6,1.4,0.2,setosa,

I've tried various combinations in code to achieve what's simple in RConsole, but I can't get R to accept my structure.

- I've tried just including the data in a string.
- I've tried wrapping the data with "data"
- I've tried wrapping the data with "data.frame" (as below).

Here's my latest attempt:

String tableRead = "data.frame(5.1,3.5,1.4,0.2,setosa\n" +
"4.9,3,1.4,0.2,setosa\n" +
"4.7,3.2,1.3,0.2,setosa\n" +
"4.6,3.1,1.5,0.2,setosa\n" +
"5,3.6,1.4,0.2,setosa)" ;

// using parseAndEval below to give me actual error R is sending...
REXP rResponseObject = rConnection.parseAndEval("try(eval("+tableRead+"),silent=TRUE)");
if (rResponseObject.inherits("try-error"))
{
     System.out.println("R Serve Eval Exception : "+rResponseObject.asString());
}
REXP boxMResult = rConnection.eval("boxM("+ tableRead+ "[,-5]," + tableRead + "[, 5])");  // FAILS <<

----

Error in the above case is:

Disconnected from the target VM, address: '127.0.0.1:51356', transport: 'socket'
org.rosuda.REngine.REngineException: eval failed, request status: R parser: syntax error
at org.rosuda.REngine.Rserve.RConnection.parseAndEval(RConnection.java:454)
at org.rosuda.REngine.REngine.parseAndEval(REngine.java:108)
at net.example.start_r_fromjava.RStatisticsExample.main(RStatisticsExample.java:151)

Does the POSTed data need to be in a different format or am I just not framing it correctly?

Would appreciate any tips on how to package table data that might come from a SQL Query passed to Java code.

Thanks very much in advance,

- M

Sent from [ProtonMail](https://protonmail.com), Swiss-based encrypted email.
	[[alternative HTML version deleted]]


From morkus at protonmail.com  Thu Oct 26 11:52:19 2017
From: morkus at protonmail.com (Morkus)
Date: Thu, 26 Oct 2017 05:52:19 -0400
Subject: [Rd] How to represent two-dimensonal data in R?
Message-ID: <deD96DVueis9mwZEMT2qDO1l1WwUscE8r5ZK8d0AeVArkcdKUIHhzvGbnRA6roac61izpebO6_4KuV_4-Pf-2tPRKdaadbnOVLEJ2ASn7tI=@protonmail.com>

I asked this question yesterday, but since I didn't receive any responses, I thought I would simply the question a bit and try again.

Basically, I'm getting a query result sent to a program. That data is just the rows and columns of a database table. Simple 2-D.

My (hopefully simple) question is how do I take that variable and put that two-dimensional data in a form I can then send to R?

Can R represent two-dimensional data when passed like that to a variable? I cannot find a single example, anywhere, that describes how to do it. :(

I've tried: "data", "data.frame", "table", the data by itself, etc.

Nothing works. I only get "eval" syntax errors.

Please advise with any suggestions.

Thanks again.

- M

Sent from [ProtonMail](https://protonmail.com), Swiss-based encrypted email.
	[[alternative HTML version deleted]]


From rhelp at eoos.dds.nl  Thu Oct 26 13:45:06 2017
From: rhelp at eoos.dds.nl (Jan van der Laan)
Date: Thu, 26 Oct 2017 13:45:06 +0200
Subject: [Rd] How to create a table structure in Java code?
In-Reply-To: <TNxOU9bI1Nh3erxhoQT01mOAwutGoyscR-w7sumoj2hZY0fkKbVCK1Vl-Fwd_Vs-2NQjDQyRLNixrYz-8HA6X-tZZ-ltlk0mpWWp4QD6Q90=@protonmail.com>
References: <TNxOU9bI1Nh3erxhoQT01mOAwutGoyscR-w7sumoj2hZY0fkKbVCK1Vl-Fwd_Vs-2NQjDQyRLNixrYz-8HA6X-tZZ-ltlk0mpWWp4QD6Q90=@protonmail.com>
Message-ID: <7f1e36fe-f2c4-dce7-bb20-5c8a74f3f630@eoos.dds.nl>


I suspect that you are looking for something like:

read.csv(textConnection(
"5.1,3.5,1.4,0.2,setosa
4.9,3,1.4,0.2,setosa
4.7,3.2,1.3,0.2,setosa
4.6,3.1,1.5,0.2,setosa
5,3.6,1.4,0.2,setosa"
), header = FALSE)

HTH,
Jan



On 25-10-17 12:50, Morkus via R-devel wrote:
> Hi all,
> 
> Using RConsole, it's easy to get data from the database that you can use in an R Command. Like this:
> 
> (Reference case)
> 
> irisQuery <- dbGetQuery(conn, "select * from iris")
> boxM(irisQuery [,-5], irisQuery[,5])
> 
> ----
> 
> (Actual case this posting is about)
> 
> Yet, if I'm getting that same (sample IRIS) data, say, in a web service possibly POSTED from a SQL command, that same data might look like this (portion of the included iris data set below). I'm thus not sure how to package the data so R likes it.
> 
> Example R-included IRIS data from SQL output:
> 
> 5.1,3.5,1.4,0.2,setosa,
> 4.9,3,1.4,0.2,setosa,
> 4.7,3.2,1.3,0.2,setosa,
> 4.6,3.1,1.5,0.2,setosa,
> 5,3.6,1.4,0.2,setosa,
> 
> I've tried various combinations in code to achieve what's simple in RConsole, but I can't get R to accept my structure.
> 
> - I've tried just including the data in a string.
> - I've tried wrapping the data with "data"
> - I've tried wrapping the data with "data.frame" (as below).
> 
> Here's my latest attempt:
> 
> String tableRead = "data.frame(5.1,3.5,1.4,0.2,setosa\n" +
> "4.9,3,1.4,0.2,setosa\n" +
> "4.7,3.2,1.3,0.2,setosa\n" +
> "4.6,3.1,1.5,0.2,setosa\n" +
> "5,3.6,1.4,0.2,setosa)" ;
> 
> // using parseAndEval below to give me actual error R is sending...
> REXP rResponseObject = rConnection.parseAndEval("try(eval("+tableRead+"),silent=TRUE)");
> if (rResponseObject.inherits("try-error"))
> {
>       System.out.println("R Serve Eval Exception : "+rResponseObject.asString());
> }
> REXP boxMResult = rConnection.eval("boxM("+ tableRead+ "[,-5]," + tableRead + "[, 5])");  // FAILS <<
> 
> ----
> 
> Error in the above case is:
> 
> Disconnected from the target VM, address: '127.0.0.1:51356', transport: 'socket'
> org.rosuda.REngine.REngineException: eval failed, request status: R parser: syntax error
> at org.rosuda.REngine.Rserve.RConnection.parseAndEval(RConnection.java:454)
> at org.rosuda.REngine.REngine.parseAndEval(REngine.java:108)
> at net.example.start_r_fromjava.RStatisticsExample.main(RStatisticsExample.java:151)
> 
> Does the POSTed data need to be in a different format or am I just not framing it correctly?
> 
> Would appreciate any tips on how to package table data that might come from a SQL Query passed to Java code.
> 
> Thanks very much in advance,
> 
> - M
> 
> Sent from [ProtonMail](https://protonmail.com), Swiss-based encrypted email.
> 	[[alternative HTML version deleted]]
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>


From jorismeys at gmail.com  Thu Oct 26 14:27:15 2017
From: jorismeys at gmail.com (Joris Meys)
Date: Thu, 26 Oct 2017 14:27:15 +0200
Subject: [Rd] How to represent two-dimensonal data in R?
In-Reply-To: <deD96DVueis9mwZEMT2qDO1l1WwUscE8r5ZK8d0AeVArkcdKUIHhzvGbnRA6roac61izpebO6_4KuV_4-Pf-2tPRKdaadbnOVLEJ2ASn7tI=@protonmail.com>
References: <deD96DVueis9mwZEMT2qDO1l1WwUscE8r5ZK8d0AeVArkcdKUIHhzvGbnRA6roac61izpebO6_4KuV_4-Pf-2tPRKdaadbnOVLEJ2ASn7tI=@protonmail.com>
Message-ID: <CAO1zAVabpwpduHjWk_sNx8o4oUGJf_+NZodsUxbfepNQBT2rcQ@mail.gmail.com>

You are on the R devel list. Please use R help and provide people with more
detail, like the code you tried and the actual file format.

Kind regards
Joris

On 26 Oct 2017 11:52, "Morkus via R-devel" <r-devel at r-project.org> wrote:

> I asked this question yesterday, but since I didn't receive any responses,
> I thought I would simply the question a bit and try again.
>
> Basically, I'm getting a query result sent to a program. That data is just
> the rows and columns of a database table. Simple 2-D.
>
> My (hopefully simple) question is how do I take that variable and put that
> two-dimensional data in a form I can then send to R?
>
> Can R represent two-dimensional data when passed like that to a variable?
> I cannot find a single example, anywhere, that describes how to do it. :(
>
> I've tried: "data", "data.frame", "table", the data by itself, etc.
>
> Nothing works. I only get "eval" syntax errors.
>
> Please advise with any suggestions.
>
> Thanks again.
>
> - M
>
> Sent from [ProtonMail](https://protonmail.com), Swiss-based encrypted
> email.
>         [[alternative HTML version deleted]]
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>

	[[alternative HTML version deleted]]


From morkus at protonmail.com  Thu Oct 26 15:59:35 2017
From: morkus at protonmail.com (Morkus)
Date: Thu, 26 Oct 2017 09:59:35 -0400
Subject: [Rd] How to create a table structure in Java code?
In-Reply-To: <7f1e36fe-f2c4-dce7-bb20-5c8a74f3f630@eoos.dds.nl>
References: <TNxOU9bI1Nh3erxhoQT01mOAwutGoyscR-w7sumoj2hZY0fkKbVCK1Vl-Fwd_Vs-2NQjDQyRLNixrYz-8HA6X-tZZ-ltlk0mpWWp4QD6Q90=@protonmail.com>
 <7f1e36fe-f2c4-dce7-bb20-5c8a74f3f630@eoos.dds.nl>
Message-ID: <qsAgsMs7JEnlkk9L-qi3GdtzAHk_Pom_FEfjfV2xGOm4iQxPYvapzPzUBAPyc5paAADkx0-sv16KwxJC-djTdd_MPvUCJcIbnh2yeljlB_8=@protonmail.com>

That's amazing! Thank you!!!

One follow up question, if that's OK?

If, instead of using hard-coded CSV, I read the CSV into a variable first, then it fails again with a parse error.

Code below.

So, if I read the CSV into a variable, do I need an additional wrapper method?

Seems like it should still work.

Thanks in advance for your reply.

 -M

String inputIris = "5.1,3.5,1.4,0.2,setosa\n" +
"4.9,3,1.4,0.2,setosa\n" +
"4.7,3.2,1.3,0.2,setosa\n" +
"4.6,3.1,1.5,0.2,setosa\n" +
"5,3.6,1.4,0.2,setosa\n" +
"5.4,3.9,1.7,0.4,setosa\n" +
"4.6,3.4,1.4,0.3,setosa";

REXP irisData =rConnection.eval(
"read.csv(textConnection(" + inputIris + "), header = FALSE)");

Sent from [ProtonMail](https://protonmail.com), Swiss-based encrypted email.

> -------- Original Message --------
> Subject: Re: [Rd] How to create a table structure in Java code?
> Local Time: October 26, 2017 7:45 AM
> UTC Time: October 26, 2017 11:45 AM
> From: rhelp at eoos.dds.nl
> To: r-devel at r-project.org
>
> I suspect that you are looking for something like:
>
> read.csv(textConnection(
> "5.1,3.5,1.4,0.2,setosa
> 4.9,3,1.4,0.2,setosa
> 4.7,3.2,1.3,0.2,setosa
> 4.6,3.1,1.5,0.2,setosa
> 5,3.6,1.4,0.2,setosa"
> ), header = FALSE)
>
> HTH,
> Jan
>
> On 25-10-17 12:50, Morkus via R-devel wrote:
>
>> Hi all,
>> Using RConsole, it's easy to get data from the database that you can use in an R Command. Like this:
>> (Reference case)
>> irisQuery <- dbGetQuery(conn, "select * from iris")
>> boxM(irisQuery [,-5], irisQuery[,5])
>> ---------------------------------------------------------------
>>
>> (Actual case this posting is about)
>> Yet, if I'm getting that same (sample IRIS) data, say, in a web service possibly POSTED from a SQL command, that same data might look like this (portion of the included iris data set below). I'm thus not sure how to package the data so R likes it.
>> Example R-included IRIS data from SQL output:
>> 5.1,3.5,1.4,0.2,setosa,
>> 4.9,3,1.4,0.2,setosa,
>> 4.7,3.2,1.3,0.2,setosa,
>> 4.6,3.1,1.5,0.2,setosa,
>> 5,3.6,1.4,0.2,setosa,
>> I've tried various combinations in code to achieve what's simple in RConsole, but I can't get R to accept my structure.
>>
>> - I've tried just including the data in a string.
>> - I've tried wrapping the data with "data"
>> - I've tried wrapping the data with "data.frame" (as below).
>>
>> Here's my latest attempt:
>> String tableRead = "data.frame(5.1,3.5,1.4,0.2,setosa\n" +
>> "4.9,3,1.4,0.2,setosa\n" +
>> "4.7,3.2,1.3,0.2,setosa\n" +
>> "4.6,3.1,1.5,0.2,setosa\n" +
>> "5,3.6,1.4,0.2,setosa)" ;
>> // using parseAndEval below to give me actual error R is sending...
>> REXP rResponseObject = rConnection.parseAndEval("try(eval("+tableRead+"),silent=TRUE)");
>> if (rResponseObject.inherits("try-error"))
>> {
>> System.out.println("R Serve Eval Exception : "+rResponseObject.asString());
>> }
>> REXP boxMResult = rConnection.eval("boxM("+ tableRead+ "[,-5]," + tableRead + "[, 5])"); // FAILS <<
>> ---------------------------------------------------------------
>>
>> Error in the above case is:
>> Disconnected from the target VM, address: '127.0.0.1:51356', transport: 'socket'
>> org.rosuda.REngine.REngineException: eval failed, request status: R parser: syntax error
>> at org.rosuda.REngine.Rserve.RConnection.parseAndEval(RConnection.java:454)
>> at org.rosuda.REngine.REngine.parseAndEval(REngine.java:108)
>> at net.example.start_r_fromjava.RStatisticsExample.main(RStatisticsExample.java:151)
>> Does the POSTed data need to be in a different format or am I just not framing it correctly?
>> Would appreciate any tips on how to package table data that might come from a SQL Query passed to Java code.
>> Thanks very much in advance,
>>
>> - M
>>
>> Sent from [ProtonMail](https://protonmail.com), Swiss-based encrypted email.
>> [[alternative HTML version deleted]]
>> ---------------------------------------------------------------
>>
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel
>
> ---------------------------------------------------------------
>
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
	[[alternative HTML version deleted]]


From simon.urbanek at R-project.org  Thu Oct 26 16:13:32 2017
From: simon.urbanek at R-project.org (Simon Urbanek)
Date: Thu, 26 Oct 2017 10:13:32 -0400
Subject: [Rd] How to create a table structure in Java code?
In-Reply-To: <qsAgsMs7JEnlkk9L-qi3GdtzAHk_Pom_FEfjfV2xGOm4iQxPYvapzPzUBAPyc5paAADkx0-sv16KwxJC-djTdd_MPvUCJcIbnh2yeljlB_8=@protonmail.com>
References: <TNxOU9bI1Nh3erxhoQT01mOAwutGoyscR-w7sumoj2hZY0fkKbVCK1Vl-Fwd_Vs-2NQjDQyRLNixrYz-8HA6X-tZZ-ltlk0mpWWp4QD6Q90=@protonmail.com>
 <7f1e36fe-f2c4-dce7-bb20-5c8a74f3f630@eoos.dds.nl>
 <qsAgsMs7JEnlkk9L-qi3GdtzAHk_Pom_FEfjfV2xGOm4iQxPYvapzPzUBAPyc5paAADkx0-sv16KwxJC-djTdd_MPvUCJcIbnh2yeljlB_8=@protonmail.com>
Message-ID: <F66F7C74-DFB6-4986-A240-12255D0C7B44@R-project.org>

You are entering the quoting hell - you are missing quotes and escapes for \n. it would be much more reasonable to use the rConnection.assign method instead of pasting any content through the parser.

Cheers,
Simon


> On Oct 26, 2017, at 9:59 AM, Morkus via R-devel <r-devel at r-project.org> wrote:
> 
> That's amazing! Thank you!!!
> 
> One follow up question, if that's OK?
> 
> If, instead of using hard-coded CSV, I read the CSV into a variable first, then it fails again with a parse error.
> 
> Code below.
> 
> So, if I read the CSV into a variable, do I need an additional wrapper method?
> 
> Seems like it should still work.
> 
> Thanks in advance for your reply.
> 
> -M
> 
> String inputIris = "5.1,3.5,1.4,0.2,setosa\n" +
> "4.9,3,1.4,0.2,setosa\n" +
> "4.7,3.2,1.3,0.2,setosa\n" +
> "4.6,3.1,1.5,0.2,setosa\n" +
> "5,3.6,1.4,0.2,setosa\n" +
> "5.4,3.9,1.7,0.4,setosa\n" +
> "4.6,3.4,1.4,0.3,setosa";
> 
> REXP irisData =rConnection.eval(
> "read.csv(textConnection(" + inputIris + "), header = FALSE)");
> 
> Sent from [ProtonMail](https://protonmail.com), Swiss-based encrypted email.
> 
>> -------- Original Message --------
>> Subject: Re: [Rd] How to create a table structure in Java code?
>> Local Time: October 26, 2017 7:45 AM
>> UTC Time: October 26, 2017 11:45 AM
>> From: rhelp at eoos.dds.nl
>> To: r-devel at r-project.org
>> 
>> I suspect that you are looking for something like:
>> 
>> read.csv(textConnection(
>> "5.1,3.5,1.4,0.2,setosa
>> 4.9,3,1.4,0.2,setosa
>> 4.7,3.2,1.3,0.2,setosa
>> 4.6,3.1,1.5,0.2,setosa
>> 5,3.6,1.4,0.2,setosa"
>> ), header = FALSE)
>> 
>> HTH,
>> Jan
>> 
>> On 25-10-17 12:50, Morkus via R-devel wrote:
>> 
>>> Hi all,
>>> Using RConsole, it's easy to get data from the database that you can use in an R Command. Like this:
>>> (Reference case)
>>> irisQuery <- dbGetQuery(conn, "select * from iris")
>>> boxM(irisQuery [,-5], irisQuery[,5])
>>> ---------------------------------------------------------------
>>> 
>>> (Actual case this posting is about)
>>> Yet, if I'm getting that same (sample IRIS) data, say, in a web service possibly POSTED from a SQL command, that same data might look like this (portion of the included iris data set below). I'm thus not sure how to package the data so R likes it.
>>> Example R-included IRIS data from SQL output:
>>> 5.1,3.5,1.4,0.2,setosa,
>>> 4.9,3,1.4,0.2,setosa,
>>> 4.7,3.2,1.3,0.2,setosa,
>>> 4.6,3.1,1.5,0.2,setosa,
>>> 5,3.6,1.4,0.2,setosa,
>>> I've tried various combinations in code to achieve what's simple in RConsole, but I can't get R to accept my structure.
>>> 
>>> - I've tried just including the data in a string.
>>> - I've tried wrapping the data with "data"
>>> - I've tried wrapping the data with "data.frame" (as below).
>>> 
>>> Here's my latest attempt:
>>> String tableRead = "data.frame(5.1,3.5,1.4,0.2,setosa\n" +
>>> "4.9,3,1.4,0.2,setosa\n" +
>>> "4.7,3.2,1.3,0.2,setosa\n" +
>>> "4.6,3.1,1.5,0.2,setosa\n" +
>>> "5,3.6,1.4,0.2,setosa)" ;
>>> // using parseAndEval below to give me actual error R is sending...
>>> REXP rResponseObject = rConnection.parseAndEval("try(eval("+tableRead+"),silent=TRUE)");
>>> if (rResponseObject.inherits("try-error"))
>>> {
>>> System.out.println("R Serve Eval Exception : "+rResponseObject.asString());
>>> }
>>> REXP boxMResult = rConnection.eval("boxM("+ tableRead+ "[,-5]," + tableRead + "[, 5])"); // FAILS <<
>>> ---------------------------------------------------------------
>>> 
>>> Error in the above case is:
>>> Disconnected from the target VM, address: '127.0.0.1:51356', transport: 'socket'
>>> org.rosuda.REngine.REngineException: eval failed, request status: R parser: syntax error
>>> at org.rosuda.REngine.Rserve.RConnection.parseAndEval(RConnection.java:454)
>>> at org.rosuda.REngine.REngine.parseAndEval(REngine.java:108)
>>> at net.example.start_r_fromjava.RStatisticsExample.main(RStatisticsExample.java:151)
>>> Does the POSTed data need to be in a different format or am I just not framing it correctly?
>>> Would appreciate any tips on how to package table data that might come from a SQL Query passed to Java code.
>>> Thanks very much in advance,
>>> 
>>> - M
>>> 
>>> Sent from [ProtonMail](https://protonmail.com), Swiss-based encrypted email.
>>> [[alternative HTML version deleted]]
>>> ---------------------------------------------------------------
>>> 
>>> R-devel at r-project.org mailing list
>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>> 
>> ---------------------------------------------------------------
>> 
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel
> 	[[alternative HTML version deleted]]
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
> 


From rhelp at eoos.dds.nl  Thu Oct 26 16:14:04 2017
From: rhelp at eoos.dds.nl (Jan van der Laan)
Date: Thu, 26 Oct 2017 16:14:04 +0200
Subject: [Rd] How to create a table structure in Java code?
In-Reply-To: <qsAgsMs7JEnlkk9L-qi3GdtzAHk_Pom_FEfjfV2xGOm4iQxPYvapzPzUBAPyc5paAADkx0-sv16KwxJC-djTdd_MPvUCJcIbnh2yeljlB_8=@protonmail.com>
References: <TNxOU9bI1Nh3erxhoQT01mOAwutGoyscR-w7sumoj2hZY0fkKbVCK1Vl-Fwd_Vs-2NQjDQyRLNixrYz-8HA6X-tZZ-ltlk0mpWWp4QD6Q90=@protonmail.com>
 <7f1e36fe-f2c4-dce7-bb20-5c8a74f3f630@eoos.dds.nl>
 <qsAgsMs7JEnlkk9L-qi3GdtzAHk_Pom_FEfjfV2xGOm4iQxPYvapzPzUBAPyc5paAADkx0-sv16KwxJC-djTdd_MPvUCJcIbnh2yeljlB_8=@protonmail.com>
Message-ID: <8f5274f8-86f6-fb46-2a03-4b9fccc254a3@eoos.dds.nl>

As Joris mentioned this question does not belong on R-devel, but on R-help.

When replying to your earlier question I missed that I was replying to 
R-devel and not R-help. R-devel: sorry for that.

So, please post any follow up questions to R-help.

--
Jan


On 26-10-17 15:59, Morkus wrote:
> *_That's amazing! Thank you!!!_*
> 
> One follow up question, if that's OK?
> 
> If, instead of using hard-coded CSV, I read the CSV into a variable 
> _first_, then it fails again with a parse error.
> 
> Code below.
> 
> So, if I read the CSV into a variable, do I need an additional wrapper 
> method?
> 
> Seems like it should still work.
> 
> Thanks in advance for your reply.
> 
>  ?-M
> 
> *String inputIris *= *"5.1,3.5,1.4,0.2,setosa**\n**" *+
> *"4.9,3,1.4,0.2,setosa**\n**" *+
> *"4.7,3.2,1.3,0.2,setosa**\n**" *+
> *"4.6,3.1,1.5,0.2,setosa**\n**" *+
> *"5,3.6,1.4,0.2,setosa**\n**" *+
> *"5.4,3.9,1.7,0.4,setosa**\n**" *+
> *"4.6,3.4,1.4,0.3,setosa"*;
> 
> *REXP irisData *=*rConnection*.*eval*(
> *"read.csv(textConnection(" *+ *inputIris *+ *"), header = FALSE)"*);
> 
> Sent from ProtonMail <https://protonmail.com>, Swiss-based encrypted email.
> 
> 
>> -------- Original Message --------
>> Subject: Re: [Rd] How to create a table structure in Java code?
>> Local Time: October 26, 2017 7:45 AM
>> UTC Time: October 26, 2017 11:45 AM
>> From: rhelp at eoos.dds.nl
>> To: r-devel at r-project.org
>>
>>
>> I suspect that you are looking for something like:
>>
>> read.csv(textConnection(
>> "5.1,3.5,1.4,0.2,setosa
>> 4.9,3,1.4,0.2,setosa
>> 4.7,3.2,1.3,0.2,setosa
>> 4.6,3.1,1.5,0.2,setosa
>> 5,3.6,1.4,0.2,setosa"
>> ), header = FALSE)
>>
>> HTH,
>> Jan
>>
>>
>>
>> On 25-10-17 12:50, Morkus via R-devel wrote:
>>
>>     Hi all,
>>     Using RConsole, it's easy to get data from the database that you
>>     can use in an R Command. Like this:
>>     (Reference case)
>>     irisQuery <- dbGetQuery(conn, "select * from iris")
>>     boxM(irisQuery [,-5], irisQuery[,5])
>>     ------------------------------------------------------------------------
>>
>>     (Actual case this posting is about)
>>     Yet, if I'm getting that same (sample IRIS) data, say, in a web
>>     service possibly POSTED from a SQL command, that same data might
>>     look like this (portion of the included iris data set below). I'm
>>     thus not sure how to package the data so R likes it.
>>     Example R-included IRIS data from SQL output:
>>     5.1,3.5,1.4,0.2,setosa,
>>     4.9,3,1.4,0.2,setosa,
>>     4.7,3.2,1.3,0.2,setosa,
>>     4.6,3.1,1.5,0.2,setosa,
>>     5,3.6,1.4,0.2,setosa,
>>     I've tried various combinations in code to achieve what's simple
>>     in RConsole, but I can't get R to accept my structure.
>>
>>       * I've tried just including the data in a string.
>>       * I've tried wrapping the data with "data"
>>       * I've tried wrapping the data with "data.frame" (as below).
>>
>>     Here's my latest attempt:
>>     String tableRead = "data.frame(5.1,3.5,1.4,0.2,setosa\n" +
>>     "4.9,3,1.4,0.2,setosa\n" +
>>     "4.7,3.2,1.3,0.2,setosa\n" +
>>     "4.6,3.1,1.5,0.2,setosa\n" +
>>     "5,3.6,1.4,0.2,setosa)" ;
>>     // using parseAndEval below to give me actual error R is sending...
>>     REXP rResponseObject =
>>     rConnection.parseAndEval("try(eval("+tableRead+"),silent=TRUE)");
>>     if (rResponseObject.inherits("try-error"))
>>     {
>>     System.out.println("R Serve Eval Exception :
>>     "+rResponseObject.asString());
>>     }
>>     REXP boxMResult = rConnection.eval("boxM("+ tableRead+ "[,-5]," +
>>     tableRead + "[, 5])"); // FAILS <<
>>     ------------------------------------------------------------------------
>>
>>     Error in the above case is:
>>     Disconnected from the target VM, address: '127.0.0.1:51356',
>>     transport: 'socket'
>>     org.rosuda.REngine.REngineException: eval failed, request status:
>>     R parser: syntax error
>>     at
>>     org.rosuda.REngine.Rserve.RConnection.parseAndEval(RConnection.java:454)
>>     at org.rosuda.REngine.REngine.parseAndEval(REngine.java:108)
>>     at
>>     net.example.start_r_fromjava.RStatisticsExample.main(RStatisticsExample.java:151)
>>     Does the POSTed data need to be in a different format or am I just
>>     not framing it correctly?
>>     Would appreciate any tips on how to package table data that might
>>     come from a SQL Query passed to Java code.
>>     Thanks very much in advance,
>>
>>       * M
>>
>>     Sent from ProtonMail <https://protonmail.com>, Swiss-based
>>     encrypted email.
>>     [[alternative HTML version deleted]]
>>     ------------------------------------------------------------------------
>>
>>     R-devel at r-project.org <mailto:R-devel at r-project.org> mailing list
>>     https://stat.ethz.ch/mailman/listinfo/r-devel
>>
>>
>> ------------------------------------------------------------------------
>>
>> R-devel at r-project.org <mailto:R-devel at r-project.org> mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel
>


From morkus at protonmail.com  Thu Oct 26 17:00:22 2017
From: morkus at protonmail.com (Morkus)
Date: Thu, 26 Oct 2017 11:00:22 -0400
Subject: [Rd] How to create a table structure in Java code?
In-Reply-To: <F66F7C74-DFB6-4986-A240-12255D0C7B44@R-project.org>
References: <TNxOU9bI1Nh3erxhoQT01mOAwutGoyscR-w7sumoj2hZY0fkKbVCK1Vl-Fwd_Vs-2NQjDQyRLNixrYz-8HA6X-tZZ-ltlk0mpWWp4QD6Q90=@protonmail.com>
 <7f1e36fe-f2c4-dce7-bb20-5c8a74f3f630@eoos.dds.nl>
 <qsAgsMs7JEnlkk9L-qi3GdtzAHk_Pom_FEfjfV2xGOm4iQxPYvapzPzUBAPyc5paAADkx0-sv16KwxJC-djTdd_MPvUCJcIbnh2yeljlB_8=@protonmail.com>
 <F66F7C74-DFB6-4986-A240-12255D0C7B44@R-project.org>
Message-ID: <Ksi_rtmM5hkCpUFlhDo4eXzs-MvAN4wMgz9ZLGPoV4dituINMXOa_E-0_wJVthIx0-x8vqfJNEk7Z2pRfz3BgvfRtmog47mcuWUnTcCp_YE=@protonmail.com>

Thanks! I just figured it out (thanks to "Beyond Compare") and was coming here to post back.

The boxM test doesn't work with that (now, finally working) REXP structure, but I probably now need to create a table or something and parse that structure.

So much fun! :)

Thanks again.

- M

Sent from [ProtonMail](https://protonmail.com), Swiss-based encrypted email.

> -------- Original Message --------
> Subject: Re: [Rd] How to create a table structure in Java code?
> Local Time: October 26, 2017 10:13 AM
> UTC Time: October 26, 2017 2:13 PM
> From: simon.urbanek at R-project.org
> To: Morkus <morkus at protonmail.com>
> Jan van der Laan <rhelp at eoos.dds.nl>, r-devel at r-project.org <r-devel at r-project.org>
>
> You are entering the quoting hell - you are missing quotes and escapes for \n. it would be much more reasonable to use the rConnection.assign method instead of pasting any content through the parser.
>
> Cheers,
> Simon
>
>> On Oct 26, 2017, at 9:59 AM, Morkus via R-devel r-devel at r-project.org wrote:
>> That's amazing! Thank you!!!
>> One follow up question, if that's OK?
>> If, instead of using hard-coded CSV, I read the CSV into a variable first, then it fails again with a parse error.
>> Code below.
>> So, if I read the CSV into a variable, do I need an additional wrapper method?
>> Seems like it should still work.
>> Thanks in advance for your reply.
>> -M
>> String inputIris = "5.1,3.5,1.4,0.2,setosa\n" +
>> "4.9,3,1.4,0.2,setosa\n" +
>> "4.7,3.2,1.3,0.2,setosa\n" +
>> "4.6,3.1,1.5,0.2,setosa\n" +
>> "5,3.6,1.4,0.2,setosa\n" +
>> "5.4,3.9,1.7,0.4,setosa\n" +
>> "4.6,3.4,1.4,0.3,setosa";
>> REXP irisData =rConnection.eval(
>> "read.csv(textConnection(" + inputIris + "), header = FALSE)");
>> Sent from [ProtonMail](https://protonmail.com), Swiss-based encrypted email.
>>
>>> -------- Original Message --------
>>> Subject: Re: [Rd] How to create a table structure in Java code?
>>> Local Time: October 26, 2017 7:45 AM
>>> UTC Time: October 26, 2017 11:45 AM
>>> From: rhelp at eoos.dds.nl
>>> To: r-devel at r-project.org
>>> I suspect that you are looking for something like:
>>> read.csv(textConnection(
>>> "5.1,3.5,1.4,0.2,setosa
>>> 4.9,3,1.4,0.2,setosa
>>> 4.7,3.2,1.3,0.2,setosa
>>> 4.6,3.1,1.5,0.2,setosa
>>> 5,3.6,1.4,0.2,setosa"
>>> ), header = FALSE)
>>> HTH,
>>> Jan
>>> On 25-10-17 12:50, Morkus via R-devel wrote:
>>>
>>>> Hi all,
>>>> Using RConsole, it's easy to get data from the database that you can use in an R Command. Like this:
>>>> (Reference case)
>>>> irisQuery <- dbGetQuery(conn, "select * from iris")
>>>> boxM(irisQuery [,-5], irisQuery[,5])
>>>>
>>>> (Actual case this posting is about)
>>>> Yet, if I'm getting that same (sample IRIS) data, say, in a web service possibly POSTED from a SQL command, that same data might look like this (portion of the included iris data set below). I'm thus not sure how to package the data so R likes it.
>>>> Example R-included IRIS data from SQL output:
>>>> 5.1,3.5,1.4,0.2,setosa,
>>>> 4.9,3,1.4,0.2,setosa,
>>>> 4.7,3.2,1.3,0.2,setosa,
>>>> 4.6,3.1,1.5,0.2,setosa,
>>>> 5,3.6,1.4,0.2,setosa,
>>>> I've tried various combinations in code to achieve what's simple in RConsole, but I can't get R to accept my structure.
>>>>
>>>> - I've tried just including the data in a string.
>>>> - I've tried wrapping the data with "data"
>>>> - I've tried wrapping the data with "data.frame" (as below).
>>>>
>>>> Here's my latest attempt:
>>>> String tableRead = "data.frame(5.1,3.5,1.4,0.2,setosa\n" +
>>>> "4.9,3,1.4,0.2,setosa\n" +
>>>> "4.7,3.2,1.3,0.2,setosa\n" +
>>>> "4.6,3.1,1.5,0.2,setosa\n" +
>>>> "5,3.6,1.4,0.2,setosa)" ;
>>>> // using parseAndEval below to give me actual error R is sending...
>>>> REXP rResponseObject = rConnection.parseAndEval("try(eval("+tableRead+"),silent=TRUE)");
>>>> if (rResponseObject.inherits("try-error"))
>>>> {
>>>> System.out.println("R Serve Eval Exception : "+rResponseObject.asString());
>>>> }
>>>> REXP boxMResult = rConnection.eval("boxM("+ tableRead+ "[,-5]," + tableRead + "[, 5])"); // FAILS <<
>>>>
>>>> Error in the above case is:
>>>> Disconnected from the target VM, address: '127.0.0.1:51356', transport: 'socket'
>>>> org.rosuda.REngine.REngineException: eval failed, request status: R parser: syntax error
>>>> at org.rosuda.REngine.Rserve.RConnection.parseAndEval(RConnection.java:454)
>>>> at org.rosuda.REngine.REngine.parseAndEval(REngine.java:108)
>>>> at net.example.start_r_fromjava.RStatisticsExample.main(RStatisticsExample.java:151)
>>>> Does the POSTed data need to be in a different format or am I just not framing it correctly?
>>>> Would appreciate any tips on how to package table data that might come from a SQL Query passed to Java code.
>>>> Thanks very much in advance,
>>>>
>>>> - M
>>>>
>>>> Sent from [ProtonMail](https://protonmail.com), Swiss-based encrypted email.
>>>> [[alternative HTML version deleted]]
>>>>
>>>> R-devel at r-project.org mailing list
>>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>>
>>> ---------------------------------------------------------------
>>>
>>> R-devel at r-project.org mailing list
>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>> [[alternative HTML version deleted]]
>>
>> ---------------------------------------------------------------
>>
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel
	[[alternative HTML version deleted]]


From morkus at protonmail.com  Thu Oct 26 19:23:29 2017
From: morkus at protonmail.com (Morkus)
Date: Thu, 26 Oct 2017 13:23:29 -0400
Subject: [Rd] How to create a table structure in Java code?
In-Reply-To: <Ksi_rtmM5hkCpUFlhDo4eXzs-MvAN4wMgz9ZLGPoV4dituINMXOa_E-0_wJVthIx0-x8vqfJNEk7Z2pRfz3BgvfRtmog47mcuWUnTcCp_YE=@protonmail.com>
References: <TNxOU9bI1Nh3erxhoQT01mOAwutGoyscR-w7sumoj2hZY0fkKbVCK1Vl-Fwd_Vs-2NQjDQyRLNixrYz-8HA6X-tZZ-ltlk0mpWWp4QD6Q90=@protonmail.com>
 <7f1e36fe-f2c4-dce7-bb20-5c8a74f3f630@eoos.dds.nl>
 <qsAgsMs7JEnlkk9L-qi3GdtzAHk_Pom_FEfjfV2xGOm4iQxPYvapzPzUBAPyc5paAADkx0-sv16KwxJC-djTdd_MPvUCJcIbnh2yeljlB_8=@protonmail.com>
 <F66F7C74-DFB6-4986-A240-12255D0C7B44@R-project.org>
 <Ksi_rtmM5hkCpUFlhDo4eXzs-MvAN4wMgz9ZLGPoV4dituINMXOa_E-0_wJVthIx0-x8vqfJNEk7Z2pRfz3BgvfRtmog47mcuWUnTcCp_YE=@protonmail.com>
Message-ID: <OnDwVp2Xn_f57tNAza2EdA7KaxcMcDBge4UsMgZVnn0rme5rsMeKUfT5DnmXZ2VHq440UJzt0Y62vKe1QZEoOD_Yc_Hx8F2zJi4SPvQgc54=@protonmail.com>

ALMOST THERE!!!!

I have one small remaining problem.

Now that I can read in the CSV data, thanks again for that help, I create a data frame from all the REXPDouble and the one REXPString object and I'm then trying to do a boxM (Box's M) test.

The documentation says that a data frame should work with boxM so maybe I'm back in "quote hell"?

I've tried the "problem command" (two lines below) both with putting the entire boxM command inside the quotes and having the "myDf" be outside the quotes.

The line of code below that still throws a parse error is:

REXP boxMResult = rConnection.parseAndEval( "boxM(" + myDf+ "[,-5], " + myDf + " [, 5])");

Thanks again to all...this is an incredible forum!!!

I offer a virtual beer to whomever helps! :)

----

ENTIRE CODE SNIPPET:

rConnection.eval("library('biotools')");

String inputIris = "5.1,3.5,1.4,0.2,setosa\n" +
"4.9,3,1.4,0.2,setosa\n" +
"5.5,2.4,3.7,1,versicolor\n" +
"5.8,2.7,3.9,1.2,versicolor\n" +
"6,2.7,5.1,1.6,versicolor\n" +
"7.9,3.8,6.4,2,virginica\n" +
"6.4,2.8,5.6,2.2,virginica\n" +
"6.3,2.8,5.1,1.5,virginica\n" +
"6.1,2.6,5.6,1.4,virginica";

(some IRIS data removed above for brevity.)

List tableRead = rConnection.eval(
"read.csv(textConnection(\"" + inputIris + "\"), header = FALSE)").asList();    // Yes works!!!

double[] d1 = ((REXPVector) ((RList) tableRead).get(0)).asDoubles();
double[] d2 = ((REXPVector) ((RList) tableRead).get(1)).asDoubles();
double[] d3 = ((REXPVector) ((RList) tableRead).get(2)).asDoubles();
double[] d4 = ((REXPVector) ((RList) tableRead).get(3)).asDoubles();
int[] d5 = ((REXPFactor) ((RList) tableRead).get(4)).asIntegers() ;

// create data frame with data extracted from tableRead List object.REXP myDf = REXP.createDataFrame(new RList(
new REXP[]
{
new REXPDouble(d1),
new REXPDouble(d2),
new REXPDouble(d3),
new REXPDouble(d4),
new REXPInteger(d5)
}));

>>>> ERROR HERE >>>> REXP boxMResult = rConnection.parseAndEval( "boxM(" + myDf+ "[,-5], " + myDf + " [, 5])");

eval failed, request status: R parser: syntax error
org.rosuda.REngine.REngineException: eval failed, request status: R parser: syntax error
	[[alternative HTML version deleted]]


From rosseireland at gmail.com  Fri Oct 27 05:13:13 2017
From: rosseireland at gmail.com (rosseji)
Date: Fri, 27 Oct 2017 03:13:13 +0000
Subject: [Rd] javareconf issue
Message-ID: <CAHpUa1Kotb15Qdhbkhbf1kSwM=TTGp89E=apzRhyj-6xrgpkbg@mail.gmail.com>

Hi,

Wasn't able to see a bug report on this issue yet... Hope I'm not doublng
up.

There seems to be little info around for what "R CMD javareconf" does but
it has some deprecation errors seemingly.

On running cmd in terminal:

Java interpreter : /usr/bin/java

Java version     : 9

Java home path   : /Library/Java/JavaVirtualMachines/jdk-9.jdk/Contents/Home

Java compiler    : /usr/bin/javac

Java headers gen.: /usr/bin/javah

Java archive tool: /usr/bin/jar

System Java on macOS


*trying to compile and link a JNI program *

*detected JNI cpp flags    :
-I/System/Library/Frameworks/JavaVM.framework/Headers*

*detected JNI linker flags : -framework JavaVM*

*clang -I/Library/Frameworks/R.framework/Resources/include -DNDEBUG
-I/System/Library/Frameworks/JavaVM.framework/Headers  -I/usr/local/include
  -fPIC  -Wall -g -O2  -c conftest.c -o conftest.o*

*conftest.c:4:5: warning: 'JNI_CreateJavaVM' is deprecated
[-Wdeprecated-declarations]*

*    JNI_CreateJavaVM(0, 0, 0);*

*    ^*

*/System/Library/Frameworks/JavaVM.framework/Headers/jni.h:1936:39: note:
'JNI_CreateJavaVM' has*

*      been explicitly marked deprecated here*

*_JNI_IMPORT_OR_EXPORT_ __attribute__((deprecated)) jint JNICALL*

*                                      ^*

*1 warning generated.*

*clang -dynamiclib -Wl,-headerpad_max_install_names -undefined
dynamic_lookup -single_module -multiply_defined suppress
-L/Library/Frameworks/R.framework/Resources/lib -L/usr/local/lib -o
conftest.so conftest.o -framework JavaVM
-F/Library/Frameworks/R.framework/.. -framework R -Wl,-framework
-Wl,CoreFoundation*



*JAVA_HOME        :
/Library/Java/JavaVirtualMachines/jdk-9.jdk/Contents/Home*

*Java library path: *

*JNI cpp flags    : -I/System/Library/Frameworks/JavaVM.framework/Headers*

*JNI linker flags : -framework JavaVM*

*Updating Java configuration in /Library/Frameworks/R.framework/Resources*

*Done.*

	[[alternative HTML version deleted]]


From ripley at stats.ox.ac.uk  Fri Oct 27 10:36:30 2017
From: ripley at stats.ox.ac.uk (Prof Brian Ripley)
Date: Fri, 27 Oct 2017 09:36:30 +0100
Subject: [Rd] javareconf issue
In-Reply-To: <CAHpUa1Kotb15Qdhbkhbf1kSwM=TTGp89E=apzRhyj-6xrgpkbg@mail.gmail.com>
References: <CAHpUa1Kotb15Qdhbkhbf1kSwM=TTGp89E=apzRhyj-6xrgpkbg@mail.gmail.com>
Message-ID: <e6d17493-fa4d-54f7-62cd-fe009147ce0f@stats.ox.ac.uk>

On 27/10/2017 04:13, rosseji wrote:

Using a real name and a signature are regarded as polite here.

> Hi,
> 
> Wasn't able to see a bug report on this issue yet... Hope I'm not doublng
> up.

This is a problem on your system.  Also, macOS issues should be reported 
to R-sig-mac ... and you should give the 'at a minimum' information 
requested by the posting guide.

> There seems to be little info around for what "R CMD javareconf" does but
> it has some deprecation errors seemingly.

See R CMD javareconf --help , and the R-admin manual.

> 
> On running cmd in terminal:
> 
> Java interpreter : /usr/bin/java
> 
> Java version     : 9
> 
> Java home path   : /Library/Java/JavaVirtualMachines/jdk-9.jdk/Contents/Home
> 
> Java compiler    : /usr/bin/javac
> 
> Java headers gen.: /usr/bin/javah
> 
> Java archive tool: /usr/bin/jar
> 
> System Java on macOS

Try updating your R (as suggested by the posting guide): javareconf did 
not detect Java 9 on macOS until the it was released recently.  You are 
trying to use an obsolete system installation of Java (not Oracle Java).

 From the NEWS for R 3.4.2.patched (and R-devel)

     ? R CMD javareconf has been updated to recognize the use of a Java
       9 SDK on macOS.


> 
> 
> *trying to compile and link a JNI program *
> 
> *detected JNI cpp flags    :
> -I/System/Library/Frameworks/JavaVM.framework/Headers*
> 
> *detected JNI linker flags : -framework JavaVM*
> 
> *clang -I/Library/Frameworks/R.framework/Resources/include -DNDEBUG
> -I/System/Library/Frameworks/JavaVM.framework/Headers  -I/usr/local/include
>    -fPIC  -Wall -g -O2  -c conftest.c -o conftest.o*
> 
> *conftest.c:4:5: warning: 'JNI_CreateJavaVM' is deprecated
> [-Wdeprecated-declarations]*
> 
> *    JNI_CreateJavaVM(0, 0, 0);*
> 
> *    ^*
> 
> */System/Library/Frameworks/JavaVM.framework/Headers/jni.h:1936:39: note:
> 'JNI_CreateJavaVM' has*
> 
> *      been explicitly marked deprecated here*
> 
> *_JNI_IMPORT_OR_EXPORT_ __attribute__((deprecated)) jint JNICALL*
> 
> *                                      ^*
> 
> *1 warning generated.*
> 
> *clang -dynamiclib -Wl,-headerpad_max_install_names -undefined
> dynamic_lookup -single_module -multiply_defined suppress
> -L/Library/Frameworks/R.framework/Resources/lib -L/usr/local/lib -o
> conftest.so conftest.o -framework JavaVM
> -F/Library/Frameworks/R.framework/.. -framework R -Wl,-framework
> -Wl,CoreFoundation*
> 
> 
> 
> *JAVA_HOME        :
> /Library/Java/JavaVirtualMachines/jdk-9.jdk/Contents/Home*
> 
> *Java library path: *
> 
> *JNI cpp flags    : -I/System/Library/Frameworks/JavaVM.framework/Headers*
> 
> *JNI linker flags : -framework JavaVM*
> 
> *Updating Java configuration in /Library/Frameworks/R.framework/Resources*
> 
> *Done.*
> 
> 	[[alternative HTML version deleted]]
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
> 


-- 
Brian D. Ripley,                  ripley at stats.ox.ac.uk
Emeritus Professor of Applied Statistics, University of Oxford


From morkus at protonmail.com  Fri Oct 27 14:10:02 2017
From: morkus at protonmail.com (Morkus)
Date: Fri, 27 Oct 2017 08:10:02 -0400
Subject: [Rd] How to do a "Box's M" Test with
Message-ID: <0gfmi0-qChmzBTHTekAMzkG0n4sXaP6kQm70JHcOMVcd1GxX22gb8OYHXJKEUpti2UR4gwCyyITdGXJouMEPfYhKyhb0fQn6rElCOPY8Vvg=@protonmail.com>

Trying to get past a frustrating error to do a "simple" Box's M test using Java.

The Box's M test says it will work with a data.frame.

Here's the setup code:

REXP myDf = REXP.createDataFrame(new RList(
new REXP[]
{
new REXPDouble(d1),
new REXPDouble(d2),
new REXPDouble(d3),
new REXPDouble(d4),
new REXPInteger(d5)
}));

Here's the call:

REXP boxMResult = rConnection.eval( "boxM(" + myDf+ "[,-5], " + myDf + " [, 5])");

But, I keep getting syntax errors.

If this code isn't right, how do you build a data.frame R will like?  No examples I can find, anywhere.

Not sure what to try next. I've tried just sending a string with everything commented, but nothing I've tried works.

Can anyone please suggest something to try?

Thanks in advance.

- M

Sent from [ProtonMail](https://protonmail.com), Swiss-based encrypted email.
	[[alternative HTML version deleted]]


From murdoch.duncan at gmail.com  Fri Oct 27 14:50:04 2017
From: murdoch.duncan at gmail.com (Duncan Murdoch)
Date: Fri, 27 Oct 2017 08:50:04 -0400
Subject: [Rd] How to do a "Box's M" Test with
In-Reply-To: <0gfmi0-qChmzBTHTekAMzkG0n4sXaP6kQm70JHcOMVcd1GxX22gb8OYHXJKEUpti2UR4gwCyyITdGXJouMEPfYhKyhb0fQn6rElCOPY8Vvg=@protonmail.com>
References: <0gfmi0-qChmzBTHTekAMzkG0n4sXaP6kQm70JHcOMVcd1GxX22gb8OYHXJKEUpti2UR4gwCyyITdGXJouMEPfYhKyhb0fQn6rElCOPY8Vvg=@protonmail.com>
Message-ID: <1c7c7b5f-abd4-f8ef-dd20-65278923120b@gmail.com>

On 27/10/2017 8:10 AM, Morkus via R-devel wrote:
> Trying to get past a frustrating error to do a "simple" Box's M test using Java.
> 
> The Box's M test says it will work with a data.frame.
> 
> Here's the setup code:
> 
> REXP myDf = REXP.createDataFrame(new RList(
> new REXP[]
> {
> new REXPDouble(d1),
> new REXPDouble(d2),
> new REXPDouble(d3),
> new REXPDouble(d4),
> new REXPInteger(d5)
> }));
> 
> Here's the call:
> 
> REXP boxMResult = rConnection.eval( "boxM(" + myDf+ "[,-5], " + myDf + " [, 5])");

I don't really know the R Java interface, but this doesn't make sense. 
You are pasting an REXP object myDf into a string to evaluate.  It would 
make sense to assign that dataframe object to an R variable, and paste 
the name of that variable into your expression, or to construct a 
language object containing the dataframe object, but I don't know how to 
do those things.

Duncan Murdoch

> 
> But, I keep getting syntax errors.
> 
> If this code isn't right, how do you build a data.frame R will like?  No examples I can find, anywhere.
> 
> Not sure what to try next. I've tried just sending a string with everything commented, but nothing I've tried works.
> 
> Can anyone please suggest something to try?
> 
> Thanks in advance.
> 
> - M
> 
> Sent from [ProtonMail](https://protonmail.com), Swiss-based encrypted email.
> 	[[alternative HTML version deleted]]
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>


From csgillespie at gmail.com  Fri Oct 27 15:22:24 2017
From: csgillespie at gmail.com (Colin Gillespie)
Date: Fri, 27 Oct 2017 13:22:24 +0000
Subject: [Rd] Slow down using the compiler
Message-ID: <CADbDLZkobKZsCX2YC_jD=yTzWO6ZOs8MoV2DTdGinXsudm7-ug@mail.gmail.com>

Dear All,

In R 3.4.2 (Linux), the compiler seems to have regressed:

$ R --vanilla
g = function() {
  N = 1e7; ans = numeric(N)
  system.time({for (j in 1:N) ans[j] = 1})
}
g()
#   user  system elapsed
 # 4.272   0.000   4.272

g1 = compiler::cmpfun(g)
g1()
#   user  system elapsed
# 4.232   0.004   4.235

Running the above code in Windows 3.3.1, g() takes the same time, but g1()
takes around 0.5 seconds.

Removing the function wrapper we have

N = 1e7; ans = numeric(N)
system.time({for (j in 1:N) ans[j] = 1})
#   user  system elapsed
 # 0.304   0.000   0.304
compiler::enableJIT(0)
#[1] 3
N = 1e7; ans = numeric(N)
system.time({for (j in 1:N) ans[j] = 1})
#   user  system elapsed
 # 5.448   0.000   5.446

Best wishes

Colin

------------------

> sessionInfo()
R version 3.4.2 (2017-09-28)
Platform: x86_64-pc-linux-gnu (64-bit)
Running under: Ubuntu 16.04.3 LTS

Matrix products: default
BLAS: /usr/lib/atlas-base/atlas/libblas.so.3.0
LAPACK: /usr/lib/atlas-base/atlas/liblapack.so.3.0

locale:
 [1] LC_CTYPE=en_GB.UTF-8       LC_NUMERIC=C
 [3] LC_TIME=en_GB.UTF-8        LC_COLLATE=en_GB.UTF-8
 [5] LC_MONETARY=en_GB.UTF-8    LC_MESSAGES=en_GB.UTF-8
 [7] LC_PAPER=en_GB.UTF-8       LC_NAME=C
 [9] LC_ADDRESS=C               LC_TELEPHONE=C
[11] LC_MEASUREMENT=en_GB.UTF-8 LC_IDENTIFICATION=C

attached base packages:
[1] stats     graphics  grDevices utils     datasets  methods   base

loaded via a namespace (and not attached):
[1] compiler_3.4.2

	[[alternative HTML version deleted]]


From morkus at protonmail.com  Fri Oct 27 17:38:30 2017
From: morkus at protonmail.com (Morkus)
Date: Fri, 27 Oct 2017 11:38:30 -0400
Subject: [Rd] How to do a "Box's M" Test with
In-Reply-To: <1c7c7b5f-abd4-f8ef-dd20-65278923120b@gmail.com>
References: <0gfmi0-qChmzBTHTekAMzkG0n4sXaP6kQm70JHcOMVcd1GxX22gb8OYHXJKEUpti2UR4gwCyyITdGXJouMEPfYhKyhb0fQn6rElCOPY8Vvg=@protonmail.com>
 <1c7c7b5f-abd4-f8ef-dd20-65278923120b@gmail.com>
Message-ID: <7iUa8d46JjZDJy8_vd95OZDwf6LunBMKeO1uR4-anEF-Xx6Va5uH4wFP0SI5atZqyvgrY3gMoluCD0cLNlEOgFQR1x-v0iqgbyyb4leQIxk=@protonmail.com>

Thanks for the ideas. I'll keep trying...

Sent from [ProtonMail](https://protonmail.com), Swiss-based encrypted email.

> -------- Original Message --------
> Subject: Re: [Rd] How to do a "Box's M" Test with
> Local Time: October 27, 2017 8:50 AM
> UTC Time: October 27, 2017 12:50 PM
> From: murdoch.duncan at gmail.com
> To: Morkus <morkus at protonmail.com>, r-devel at r-project.org <r-devel at r-project.org>
>
> On 27/10/2017 8:10 AM, Morkus via R-devel wrote:
>
>> Trying to get past a frustrating error to do a "simple" Box's M test using Java.
>> The Box's M test says it will work with a data.frame.
>> Here's the setup code:
>> REXP myDf = REXP.createDataFrame(new RList(
>> new REXP[]
>> {
>> new REXPDouble(d1),
>> new REXPDouble(d2),
>> new REXPDouble(d3),
>> new REXPDouble(d4),
>> new REXPInteger(d5)
>> }));
>> Here's the call:
>> REXP boxMResult = rConnection.eval( "boxM(" + myDf+ "[,-5], " + myDf + " [, 5])");
>>
>> I don't really know the R Java interface, but this doesn't make sense.
>> You are pasting an REXP object myDf into a string to evaluate. It would
>> make sense to assign that dataframe object to an R variable, and paste
>> the name of that variable into your expression, or to construct a
>> language object containing the dataframe object, but I don't know how to
>> do those things.
>>
>> Duncan Murdoch
>> But, I keep getting syntax errors.
>> If this code isn't right, how do you build a data.frame R will like? No examples I can find, anywhere.
>> Not sure what to try next. I've tried just sending a string with everything commented, but nothing I've tried works.
>> Can anyone please suggest something to try?
>> Thanks in advance.
>>
>> - M
>>
>> Sent from [ProtonMail](https://protonmail.com), Swiss-based encrypted email.
>> [[alternative HTML version deleted]]
>> ---------------------------------------------------------------
>>
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel
	[[alternative HTML version deleted]]


From arietencate at gmail.com  Fri Oct 27 20:18:41 2017
From: arietencate at gmail.com (Arie ten Cate)
Date: Fri, 27 Oct 2017 20:18:41 +0200
Subject: [Rd] Bug in model.matrix.default for higher-order interaction
 encoding when specific model terms are missing
Message-ID: <CACg-3uZiwGNQUF3ZsoE7w7fwQ8xEXWfs9L=vpJskgOuf=QiTPw@mail.gmail.com>

Hello Tyler,

I want to bring to your attention the following document: "What
happens if you omit the main effect in a regression model with an
interaction?" (https://stats.idre.ucla.edu/stata/faq/what-happens-if-you-omit-the-main-effect-in-a-regression-model-with-an-interaction).
This gives a useful review of the problem. Your example is Case 2: a
continuous and a categorical regressor.

The numerical examples are coded in Stata, and they give the same
result as in R. Hence, if this is a bug in R then it is also a bug in
Stata. That seems very unlikely.

Here is a simulation in R of the above mentioned Case 2 in Stata:

df <- expand.grid(socst=c(-1:1),grp=c("1","2","3","4"))
print("Full model")
print(model.matrix(~(socst+grp)^2 ,data=df))
print("Example 2.1: drop socst")
print(model.matrix(~(socst+grp)^2 -socst ,data=df))
print("Example 2.2: drop grp")
print(model.matrix(~(socst+grp)^2 -grp ,data=df))

This gives indeed the following regressors:

"Full model"
(Intercept) socst grp2 grp3 grp4 socst:grp2 socst:grp3 socst:grp4
"Example 2.1: drop socst"
(Intercept) grp2 grp3 grp4 socst:grp1 socst:grp2 socst:grp3 socst:grp4
"Example 2.2: drop grp"
(Intercept) socst socst:grp2 socst:grp3 socst:grp4

There is a little bit of R documentation about this, based on the
concept of marginality, which typically forbids a model having an
interaction but not the corresponding main effects. (You might see the
references in https://en.wikipedia.org/wiki/Principle_of_marginality )
    See "An Introduction to R", by Venables and Smith and the R Core
Team. At the bottom of page 52 (PDF: 57) it says: "Although the
details are complicated, model formulae in R will normally generate
the models that an expert statistician would expect, provided that
marginality is preserved. Fitting, for [a contrary] example, a model
with an interaction but not the corresponding main effects will in
general lead to surprising results ....".
    The Reference Manual states that the R functions dropterm() and
addterm() resp. drop or add only terms such that marginality is
preserved.

Finally, about your singular matrix t(mm)%*%mm. This is in fact
Example 2.1 in Case 2 discussed above. As discussed there, in Stata
and in R the drop of the continuous variable has no effect on the
degrees of freedom here: it is just a reparameterisation of the full
model, protecting you against losing marginality... Hence the
model.matrix 'mm' is still square and nonsingular after the drop of
X1, unless of course when a row is removed from the matrix 'design'
when before creating 'mm'.

    Arie

On Sun, Oct 15, 2017 at 7:05 PM, Tyler <tylermw at gmail.com> wrote:
> You could possibly try to explain away the behavior for a missing main
> effects term, since without the main effects term we don't have main effect
> columns in the model matrix used to compute the interaction columns (At
> best this is undocumented behavior--I still think it's a bug, as we know
> how we would encode the categorical factors if they were in fact present.
> It's either specified in contrasts.arg or using the default set in
> options). However, when all the main effects are present, why would the
> three-factor interaction column not simply be the product of the main
> effect columns? In my example: we know X1, we know X2, and we know X3. Why
> does the encoding of X1:X2:X3 depend on whether we specified a two-factor
> interaction, AND only changes for specific missing interactions?
>
> In addition, I can use a two-term example similar to yours to show how this
> behavior results in a singular covariance matrix when, given the desired
> factor encoding, it should not be singular.
>
> We start with a full factorial design for a two-level continuous factor and
> a three-level categorical factor, and remove a single row. This design
> matrix does not leave enough degrees of freedom to determine
> goodness-of-fit, but should allow us to obtain parameter estimates.
>
>> design = expand.grid(X1=c(1,-1),X2=c("A","B","C"))
>> design = design[-1,]
>> design
>   X1 X2
> 2 -1  A
> 3  1  B
> 4 -1  B
> 5  1  C
> 6 -1  C
>
> Here, we first calculate the model matrix for the full model, and then
> manually remove the X1 column from the model matrix. This gives us the
> model matrix one would expect if X1 were removed from the model. We then
> successfully calculate the covariance matrix.
>
>> mm = model.matrix(~(X1+X2)^2,data=design)
>> mm
>   (Intercept) X1 X2B X2C X1:X2B X1:X2C
> 2           1 -1   0   0      0      0
> 3           1  1   1   0      1      0
> 4           1 -1   1   0     -1      0
> 5           1  1   0   1      0      1
> 6           1 -1   0   1      0     -1
>
>> mm = mm[,-2]
>> solve(t(mm) %*% mm)
>             (Intercept)  X2B  X2C X1:X2B X1:X2C
> (Intercept)           1 -1.0 -1.0    0.0    0.0
> X2B                  -1  1.5  1.0    0.0    0.0
> X2C                  -1  1.0  1.5    0.0    0.0
> X1:X2B                0  0.0  0.0    0.5    0.0
> X1:X2C                0  0.0  0.0    0.0    0.5
>
> Here, we see the actual behavior for model.matrix. The undesired re-coding
> of the model matrix interaction term makes the information matrix singular.
>
>> mm = model.matrix(~(X1+X2)^2-X1,data=design)
>> mm
>   (Intercept) X2B X2C X1:X2A X1:X2B X1:X2C
> 2           1   0   0     -1      0      0
> 3           1   1   0      0      1      0
> 4           1   1   0      0     -1      0
> 5           1   0   1      0      0      1
> 6           1   0   1      0      0     -1
>
>> solve(t(mm) %*% mm)
> Error in solve.default(t(mm) %*% mm) : system is computationally singular:
> reciprocal condition number = 5.55112e-18
>
> I still believe this is a bug.
>
> Best regards,
> Tyler Morgan-Wall
>
> On Sun, Oct 15, 2017 at 1:49 AM, Arie ten Cate <arietencate at gmail.com>
> wrote:
>
>> I think it is not a bug. It is a general property of interactions.
>> This property is best observed if all variables are factors
>> (qualitative).
>>
>> For example, you have three variables (factors). You ask for as many
>> interactions as possible, except an interaction term between two
>> particular variables. When this interaction is not a constant, it is
>> different for different values of the remaining variable. More
>> precisely: for all values of that variable. In other words: you have a
>> three-way interaction, with all values of that variable.
>>
>> An even smaller example is the following script with only two
>> variables, each being a factor:
>>
>>  df <- expand.grid(X1=c("p","q"), X2=c("A","B","C"))
>>  print(model.matrix(~(X1+X2)^2    ,data=df))
>>  print(model.matrix(~(X1+X2)^2 -X1,data=df))
>>  print(model.matrix(~(X1+X2)^2 -X2,data=df))
>>
>> The result is:
>>
>>   (Intercept) X1q X2B X2C X1q:X2B X1q:X2C
>> 1           1   0   0   0       0       0
>> 2           1   1   0   0       0       0
>> 3           1   0   1   0       0       0
>> 4           1   1   1   0       1       0
>> 5           1   0   0   1       0       0
>> 6           1   1   0   1       0       1
>>
>>   (Intercept) X2B X2C X1q:X2A X1q:X2B X1q:X2C
>> 1           1   0   0       0       0       0
>> 2           1   0   0       1       0       0
>> 3           1   1   0       0       0       0
>> 4           1   1   0       0       1       0
>> 5           1   0   1       0       0       0
>> 6           1   0   1       0       0       1
>>
>>   (Intercept) X1q X1p:X2B X1q:X2B X1p:X2C X1q:X2C
>> 1           1   0       0       0       0       0
>> 2           1   1       0       0       0       0
>> 3           1   0       1       0       0       0
>> 4           1   1       0       1       0       0
>> 5           1   0       0       0       1       0
>> 6           1   1       0       0       0       1
>>
>> Thus, in the second result, we have no main effect of X1. Instead, the
>> effect of X1 depends on the value of X2; either A or B or C. In fact,
>> this is a two-way interaction, including all three values of X2. In
>> the third result, we have no main effect of X2, The effect of X2
>> depends on the value of X1; either p or q.
>>
>> A complicating element with your example seems to be that your X1 and
>> X2 are not factors.
>>
>>    Arie
>>
>> On Thu, Oct 12, 2017 at 7:12 PM, Tyler <tylermw at gmail.com> wrote:
>> > Hi,
>> >
>> > I recently ran into an inconsistency in the way model.matrix.default
>> > handles factor encoding for higher level interactions with categorical
>> > variables when the full hierarchy of effects is not present. Depending on
>> > which lower level interactions are specified, the factor encoding changes
>> > for a higher level interaction. Consider the following minimal
>> reproducible
>> > example:
>> >
>> > --------------
>> >
>> >> runmatrix = expand.grid(X1=c(1,-1),X2=c(1,-1),X3=c("A","B","C"))>
>> model.matrix(~(X1+X2+X3)^3,data=runmatrix)   (Intercept) X1 X2 X3B X3C
>> X1:X2 X1:X3B X1:X3C X2:X3B X2:X3C X1:X2:X3B X1:X2:X3C
>> > 1            1  1  1   0   0     1      0      0      0      0
>> > 0         0
>> > 2            1 -1  1   0   0    -1      0      0      0      0
>> > 0         0
>> > 3            1  1 -1   0   0    -1      0      0      0      0
>> > 0         0
>> > 4            1 -1 -1   0   0     1      0      0      0      0
>> > 0         0
>> > 5            1  1  1   1   0     1      1      0      1      0
>> > 1         0
>> > 6            1 -1  1   1   0    -1     -1      0      1      0
>> > -1         0
>> > 7            1  1 -1   1   0    -1      1      0     -1      0
>> > -1         0
>> > 8            1 -1 -1   1   0     1     -1      0     -1      0
>> > 1         0
>> > 9            1  1  1   0   1     1      0      1      0      1
>> > 0         1
>> > 10           1 -1  1   0   1    -1      0     -1      0      1
>> > 0        -1
>> > 11           1  1 -1   0   1    -1      0      1      0     -1
>> > 0        -1
>> > 12           1 -1 -1   0   1     1      0     -1      0     -1
>> > 0         1
>> > attr(,"assign")
>> >  [1] 0 1 2 3 3 4 5 5 6 6 7 7
>> > attr(,"contrasts")
>> > attr(,"contrasts")$X3
>> > [1] "contr.treatment"
>> >
>> > --------------
>> >
>> > Specifying the full hierarchy gives us what we expect: the interaction
>> > columns are simply calculated from the product of the main effect
>> columns.
>> > The interaction term X1:X2:X3 gives us two columns in the model matrix,
>> > X1:X2:X3B and X1:X2:X3C, matching the products of the main effects.
>> >
>> > If we remove either the X2:X3 interaction or the X1:X3 interaction, we
>> get
>> > what we would expect for the X1:X2:X3 interaction, but when we remove the
>> > X1:X2 interaction the encoding for X1:X2:X3 changes completely:
>> >
>> > --------------
>> >
>> >> model.matrix(~(X1+X2+X3)^3-X1:X3,data=runmatrix)   (Intercept) X1 X2
>> X3B X3C X1:X2 X2:X3B X2:X3C X1:X2:X3B X1:X2:X3C
>> > 1            1  1  1   0   0     1      0      0         0         0
>> > 2            1 -1  1   0   0    -1      0      0         0         0
>> > 3            1  1 -1   0   0    -1      0      0         0         0
>> > 4            1 -1 -1   0   0     1      0      0         0         0
>> > 5            1  1  1   1   0     1      1      0         1         0
>> > 6            1 -1  1   1   0    -1      1      0        -1         0
>> > 7            1  1 -1   1   0    -1     -1      0        -1         0
>> > 8            1 -1 -1   1   0     1     -1      0         1         0
>> > 9            1  1  1   0   1     1      0      1         0         1
>> > 10           1 -1  1   0   1    -1      0      1         0        -1
>> > 11           1  1 -1   0   1    -1      0     -1         0        -1
>> > 12           1 -1 -1   0   1     1      0     -1         0         1
>> > attr(,"assign")
>> >  [1] 0 1 2 3 3 4 5 5 6 6
>> > attr(,"contrasts")
>> > attr(,"contrasts")$X3
>> > [1] "contr.treatment"
>> >
>> >
>> >
>> >> model.matrix(~(X1+X2+X3)^3-X2:X3,data=runmatrix)   (Intercept) X1 X2
>> X3B X3C X1:X2 X1:X3B X1:X3C X1:X2:X3B X1:X2:X3C
>> > 1            1  1  1   0   0     1      0      0         0         0
>> > 2            1 -1  1   0   0    -1      0      0         0         0
>> > 3            1  1 -1   0   0    -1      0      0         0         0
>> > 4            1 -1 -1   0   0     1      0      0         0         0
>> > 5            1  1  1   1   0     1      1      0         1         0
>> > 6            1 -1  1   1   0    -1     -1      0        -1         0
>> > 7            1  1 -1   1   0    -1      1      0        -1         0
>> > 8            1 -1 -1   1   0     1     -1      0         1         0
>> > 9            1  1  1   0   1     1      0      1         0         1
>> > 10           1 -1  1   0   1    -1      0     -1         0        -1
>> > 11           1  1 -1   0   1    -1      0      1         0        -1
>> > 12           1 -1 -1   0   1     1      0     -1         0         1
>> > attr(,"assign")
>> >  [1] 0 1 2 3 3 4 5 5 6 6
>> > attr(,"contrasts")
>> > attr(,"contrasts")$X3
>> > [1] "contr.treatment"
>> >
>> >
>> >> model.matrix(~(X1+X2+X3)^3-X1:X2,data=runmatrix)   (Intercept) X1 X2
>> X3B X3C X1:X3B X1:X3C X2:X3B X2:X3C X1:X2:X3A X1:X2:X3B X1:X2:X3C
>> > 1            1  1  1   0   0      0      0      0      0         1
>> >     0         0
>> > 2            1 -1  1   0   0      0      0      0      0        -1
>> >     0         0
>> > 3            1  1 -1   0   0      0      0      0      0        -1
>> >     0         0
>> > 4            1 -1 -1   0   0      0      0      0      0         1
>> >     0         0
>> > 5            1  1  1   1   0      1      0      1      0         0
>> >     1         0
>> > 6            1 -1  1   1   0     -1      0      1      0         0
>> >    -1         0
>> > 7            1  1 -1   1   0      1      0     -1      0         0
>> >    -1         0
>> > 8            1 -1 -1   1   0     -1      0     -1      0         0
>> >     1         0
>> > 9            1  1  1   0   1      0      1      0      1         0
>> >     0         1
>> > 10           1 -1  1   0   1      0     -1      0      1         0
>> >     0        -1
>> > 11           1  1 -1   0   1      0      1      0     -1         0
>> >     0        -1
>> > 12           1 -1 -1   0   1      0     -1      0     -1         0
>> >     0         1
>> > attr(,"assign")
>> >  [1] 0 1 2 3 3 4 4 5 5 6 6 6
>> > attr(,"contrasts")
>> > attr(,"contrasts")$X3
>> > [1] "contr.treatment"
>> >
>> > --------------
>> >
>> > Here, we now see the encoding for the interaction X1:X2:X3 is now the
>> > interaction of X1 and X2 with a new encoding for X3 where each factor
>> level
>> > is represented by its own column. I would expect, given the two column
>> > dummy variable encoding for X3, that the X1:X2:X3 column would also be
>> two
>> > columns regardless of what two-factor interactions we also specified, but
>> > in this case it switches to three. If other two factor interactions are
>> > missing in addition to X1:X2, this issue still occurs. This also happens
>> > regardless of the contrast specified in contrasts.arg for X3. I don't see
>> > any reasoning for this behavior given in the documentation, so I suspect
>> it
>> > is a bug.
>> >
>> > Best regards,
>> > Tyler Morgan-Wall
>> >
>> >         [[alternative HTML version deleted]]
>> >
>> > ______________________________________________
>> > R-devel at r-project.org mailing list
>> > https://stat.ethz.ch/mailman/listinfo/r-devel
>>
>
>         [[alternative HTML version deleted]]
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From luke-tierney at uiowa.edu  Fri Oct 27 20:41:23 2017
From: luke-tierney at uiowa.edu (luke-tierney at uiowa.edu)
Date: Fri, 27 Oct 2017 13:41:23 -0500 (CDT)
Subject: [Rd] Slow down using the compiler
In-Reply-To: <CADbDLZkobKZsCX2YC_jD=yTzWO6ZOs8MoV2DTdGinXsudm7-ug@mail.gmail.com>
References: <CADbDLZkobKZsCX2YC_jD=yTzWO6ZOs8MoV2DTdGinXsudm7-ug@mail.gmail.com>
Message-ID: <alpine.DEB.2.20.1710271338210.2635@luke-Latitude>

This is due to a temporary change to not compile assignments, like
your loop body, that appear within an argument. This is to work around
a bug elsewhere in R that will take some time to fix. Once that fix is
available these assignments will again be compiled.

Best,

On Fri, 27 Oct 2017, Colin Gillespie wrote:

> Dear All,
>
> In R 3.4.2 (Linux), the compiler seems to have regressed:
>
> $ R --vanilla
> g = function() {
>  N = 1e7; ans = numeric(N)
>  system.time({for (j in 1:N) ans[j] = 1})
> }
> g()
> #   user  system elapsed
> # 4.272   0.000   4.272
>
> g1 = compiler::cmpfun(g)
> g1()
> #   user  system elapsed
> # 4.232   0.004   4.235
>
> Running the above code in Windows 3.3.1, g() takes the same time, but g1()
> takes around 0.5 seconds.
>
> Removing the function wrapper we have
>
> N = 1e7; ans = numeric(N)
> system.time({for (j in 1:N) ans[j] = 1})
> #   user  system elapsed
> # 0.304   0.000   0.304
> compiler::enableJIT(0)
> #[1] 3
> N = 1e7; ans = numeric(N)
> system.time({for (j in 1:N) ans[j] = 1})
> #   user  system elapsed
> # 5.448   0.000   5.446
>
> Best wishes
>
> Colin
>
> ------------------
>
>> sessionInfo()
> R version 3.4.2 (2017-09-28)
> Platform: x86_64-pc-linux-gnu (64-bit)
> Running under: Ubuntu 16.04.3 LTS
>
> Matrix products: default
> BLAS: /usr/lib/atlas-base/atlas/libblas.so.3.0
> LAPACK: /usr/lib/atlas-base/atlas/liblapack.so.3.0
>
> locale:
> [1] LC_CTYPE=en_GB.UTF-8       LC_NUMERIC=C
> [3] LC_TIME=en_GB.UTF-8        LC_COLLATE=en_GB.UTF-8
> [5] LC_MONETARY=en_GB.UTF-8    LC_MESSAGES=en_GB.UTF-8
> [7] LC_PAPER=en_GB.UTF-8       LC_NAME=C
> [9] LC_ADDRESS=C               LC_TELEPHONE=C
> [11] LC_MEASUREMENT=en_GB.UTF-8 LC_IDENTIFICATION=C
>
> attached base packages:
> [1] stats     graphics  grDevices utils     datasets  methods   base
>
> loaded via a namespace (and not attached):
> [1] compiler_3.4.2
>
> 	[[alternative HTML version deleted]]
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>

-- 
Luke Tierney
Ralph E. Wareham Professor of Mathematical Sciences
University of Iowa                  Phone:             319-335-3386
Department of Statistics and        Fax:               319-335-3017
    Actuarial Science
241 Schaeffer Hall                  email:   luke-tierney at uiowa.edu
Iowa City, IA 52242                 WWW:  http://www.stat.uiowa.edu


From morkus at protonmail.com  Fri Oct 27 21:41:27 2017
From: morkus at protonmail.com (Morkus)
Date: Fri, 27 Oct 2017 15:41:27 -0400
Subject: [Rd] Cannot Compute Box's M (Three Days Trying...)
Message-ID: <yNSrSEBSEthk1cJc2W6y3M50LXPWIRpFNyUtLE8yIZMb4guTLWuQi9XjWd4MHnt5vxOZAK1bO32QWqqM26bRU_XpiYnip5jDiyjKWUKIH7w=@protonmail.com>

It can't be this hard, right? I really need a shove in the right direction here. Been spinning wheels for three days. Cannot get past the errors.

I'm doing something wrong, obviously, since I can easily compute the Box's M right there in RStudio

But I don't see what is wrong below with the coding equivalent.

The entire code snippet is below. The code fails below on the call to the boxM statistic call.

PLEASE HELP!!!

Thanks in advance,

-------------------------

rConnection.eval("library('biotools')");

String inputIris = "5.1,3.5,1.4,0.2,setosa\n" +
"4.9,3,1.4,0.2,setosa\n" +
"4.7,3.2,1.3,0.2,setosa\n" +
"4.6,3.1,1.5,0.2,setosa\n" +
"5,3.6,1.4,0.2,setosa\n" +
"5.4,3.9,1.7,0.4,setosa\n" +
"4.6,3.4,1.4,0.3,setosa\n" +
"5,3.4,1.5,0.2,setosa\n" +
"4.4,2.9,1.4,0.2,setosa\n" +
"4.9,3.1,1.5,0.1,setosa\n" +
"5.4,3.7,1.5,0.2,setosa\n" +
"4.8,3.4,1.6,0.2,setosa\n" +
"4.8,3,1.4,0.1,setosa\n" +
"4.3,3,1.1,0.1,setosa\n" +
"5.8,4,1.2,0.2,setosa\n" +
"5.7,4.4,1.5,0.4,setosa\n" +
"5.4,3.9,1.3,0.4,setosa\n" +
"5.1,3.5,1.4,0.3,setosa\n" +
"5.7,3.8,1.7,0.3,setosa\n" +
"5.1,3.8,1.5,0.3,setosa\n" +
"5.4,3.4,1.7,0.2,setosa\n" +
"5.1,3.7,1.5,0.4,setosa\n" +
"4.6,3.6,1,0.2,setosa\n" +
"5.1,3.3,1.7,0.5,setosa\n" +
"4.8,3.4,1.9,0.2,setosa\n" +
"5,3,1.6,0.2,setosa\n" +
"5,3.4,1.6,0.4,setosa\n" +
"5.2,3.5,1.5,0.2,setosa\n" +
"5.2,3.4,1.4,0.2,setosa\n" +
"4.7,3.2,1.6,0.2,setosa\n" +
"4.8,3.1,1.6,0.2,setosa\n" +
"5.4,3.4,1.5,0.4,setosa\n" +
"5.2,4.1,1.5,0.1,setosa\n" +
"5.5,4.2,1.4,0.2,setosa\n" +
"4.9,3.1,1.5,0.2,setosa\n" +
"5,3.2,1.2,0.2,setosa\n" +
"5.5,3.5,1.3,0.2,setosa\n" +
"4.9,3.6,1.4,0.1,setosa\n" +
"4.4,3,1.3,0.2,setosa\n" +
"5.1,3.4,1.5,0.2,setosa\n" +
"5,3.5,1.3,0.3,setosa\n" +
"4.5,2.3,1.3,0.3,setosa\n" +
"4.4,3.2,1.3,0.2,setosa\n" +
"5,3.5,1.6,0.6,setosa\n" +
"5.1,3.8,1.9,0.4,setosa\n" +
"4.8,3,1.4,0.3,setosa\n" +
"5.1,3.8,1.6,0.2,setosa\n" +
"4.6,3.2,1.4,0.2,setosa\n" +
"5.3,3.7,1.5,0.2,setosa\n" +
"5,3.3,1.4,0.2,setosa\n" +
"7,3.2,4.7,1.4,versicolor\n" +
"6.4,3.2,4.5,1.5,versicolor\n" +
"6.9,3.1,4.9,1.5,versicolor\n" +
"5.5,2.3,4,1.3,versicolor\n" +
"6.5,2.8,4.6,1.5,versicolor\n" +
"5.7,2.8,4.5,1.3,versicolor\n" +
"6.3,3.3,4.7,1.6,versicolor\n" +
"4.9,2.4,3.3,1,versicolor\n" +
"6.6,2.9,4.6,1.3,versicolor\n" +
"5.2,2.7,3.9,1.4,versicolor\n" +
"5,2,3.5,1,versicolor\n" +
"5.9,3,4.2,1.5,versicolor\n" +
"6,2.2,4,1,versicolor\n" +
"6.1,2.9,4.7,1.4,versicolor\n" +
"5.6,2.9,3.6,1.3,versicolor\n" +
"6.7,3.1,4.4,1.4,versicolor\n" +
"5.6,3,4.5,1.5,versicolor\n" +
"5.8,2.7,4.1,1,versicolor\n" +
"6.2,2.2,4.5,1.5,versicolor\n" +
"5.6,2.5,3.9,1.1,versicolor\n" +
"5.9,3.2,4.8,1.8,versicolor\n" +
"6.1,2.8,4,1.3,versicolor\n" +
"6.3,2.5,4.9,1.5,versicolor\n" +
"6.1,2.8,4.7,1.2,versicolor\n" +
"6.4,2.9,4.3,1.3,versicolor\n" +
"6.6,3,4.4,1.4,versicolor\n" +
"6.8,2.8,4.8,1.4,versicolor\n" +
"6.7,3,5,1.7,versicolor\n" +
"6,2.9,4.5,1.5,versicolor\n" +
"5.7,2.6,3.5,1,versicolor\n" +
"5.5,2.4,3.8,1.1,versicolor\n" +
"5.5,2.4,3.7,1,versicolor\n" +
"5.8,2.7,3.9,1.2,versicolor\n" +
"6,2.7,5.1,1.6,versicolor\n" +
"5.4,3,4.5,1.5,versicolor\n" +
"6,3.4,4.5,1.6,versicolor\n" +
"6.7,3.1,4.7,1.5,versicolor\n" +
"6.3,2.3,4.4,1.3,versicolor\n" +
"5.6,3,4.1,1.3,versicolor\n" +
"5.5,2.5,4,1.3,versicolor\n" +
"5.5,2.6,4.4,1.2,versicolor\n" +
"6.1,3,4.6,1.4,versicolor\n" +
"5.8,2.6,4,1.2,versicolor\n" +
"5,2.3,3.3,1,versicolor\n" +
"5.6,2.7,4.2,1.3,versicolor\n" +
"5.7,3,4.2,1.2,versicolor\n" +
"5.7,2.9,4.2,1.3,versicolor\n" +
"6.2,2.9,4.3,1.3,versicolor\n" +
"5.1,2.5,3,1.1,versicolor\n" +
"5.7,2.8,4.1,1.3,versicolor\n" +
"6.3,3.3,6,2.5,virginica\n" +
"5.8,2.7,5.1,1.9,virginica\n" +
"7.1,3,5.9,2.1,virginica\n" +
"6.3,2.9,5.6,1.8,virginica\n" +
"6.5,3,5.8,2.2,virginica\n" +
"7.6,3,6.6,2.1,virginica\n" +
"4.9,2.5,4.5,1.7,virginica\n" +
"7.3,2.9,6.3,1.8,virginica\n" +
"6.7,2.5,5.8,1.8,virginica\n" +
"7.2,3.6,6.1,2.5,virginica\n" +
"6.5,3.2,5.1,2,virginica\n" +
"6.4,2.7,5.3,1.9,virginica\n" +
"6.8,3,5.5,2.1,virginica\n" +
"5.7,2.5,5,2,virginica\n" +
"5.8,2.8,5.1,2.4,virginica\n" +
"6.4,3.2,5.3,2.3,virginica\n" +
"6.5,3,5.5,1.8,virginica\n" +
"7.7,3.8,6.7,2.2,virginica\n" +
"7.7,2.6,6.9,2.3,virginica\n" +
"6,2.2,5,1.5,virginica\n" +
"6.9,3.2,5.7,2.3,virginica\n" +
"5.6,2.8,4.9,2,virginica\n" +
"7.7,2.8,6.7,2,virginica\n" +
"6.3,2.7,4.9,1.8,virginica\n" +
"6.7,3.3,5.7,2.1,virginica\n" +
"7.2,3.2,6,1.8,virginica\n" +
"6.2,2.8,4.8,1.8,virginica\n" +
"6.1,3,4.9,1.8,virginica\n" +
"6.4,2.8,5.6,2.1,virginica\n" +
"7.2,3,5.8,1.6,virginica\n" +
"7.4,2.8,6.1,1.9,virginica\n" +
"7.9,3.8,6.4,2,virginica\n" +
"6.4,2.8,5.6,2.2,virginica\n" +
"6.3,2.8,5.1,1.5,virginica\n" +
"6.1,2.6,5.6,1.4,virginica\n" +
"7.7,3,6.1,2.3,virginica\n" +
"6.3,3.4,5.6,2.4,virginica\n" +
"6.4,3.1,5.5,1.8,virginica\n" +
"6,3,4.8,1.8,virginica\n" +
"6.9,3.1,5.4,2.1,virginica\n" +
"6.7,3.1,5.6,2.4,virginica\n" +
"6.9,3.1,5.1,2.3,virginica\n" +
"5.8,2.7,5.1,1.9,virginica\n" +
"6.8,3.2,5.9,2.3,virginica\n" +
"6.7,3.3,5.7,2.5,virginica\n" +
"6.7,3,5.2,2.3,virginica\n" +
"6.3,2.5,5,1.9,virginica\n" +
"6.5,3,5.2,2,virginica\n" +
"6.2,3.4,5.4,2.3,virginica\n" +
"5.9,3,5.1,1.8,virginica\n";

List tableRead = rConnection.eval(
"read.csv(textConnection(\"" + inputIris + "\"), header = FALSE)").asList();  // works!

double[] d1 = ((REXPVector) ((RList) tableRead).get(0)).asDoubles();
double[] d2 = ((REXPVector) ((RList) tableRead).get(1)).asDoubles();
double[] d3 = ((REXPVector) ((RList) tableRead).get(2)).asDoubles();
double[] d4 = ((REXPVector) ((RList) tableRead).get(3)).asDoubles();
String[] d5 = ((REXPVector) ((RList) tableRead).get(4)).asStrings();

// create data frame with data.REXP myDf = REXP.createDataFrame(new RList(
new REXP[]
{
new REXPDouble(d1),
new REXPDouble(d2),
new REXPDouble(d3),
new REXPDouble(d4),
new REXPString(d5)
}));

// assign the data to a variable as was suggested.rConnection.assign("boxMVariable", myDf);

// create a string command with that variable name.String boxVariable = "boxM(boxMVariable [,-5], boxMVariable[,5]";

// try to execute the command...
// FAILS with org.rosuda.REngine.Rserve.RserveException: eval failed, request status: R parser: input incomplete>>>> FAILS ! >>>>  REXP theBoxMResult = rConnection.eval(boxVariable);    <<<< FAILS <<<<<

sent from [ProtonMail](https://protonmail.com), Swiss-based encrypted email.
	[[alternative HTML version deleted]]


From wdunlap at tibco.com  Fri Oct 27 22:00:26 2017
From: wdunlap at tibco.com (William Dunlap)
Date: Fri, 27 Oct 2017 13:00:26 -0700
Subject: [Rd] Cannot Compute Box's M (Three Days Trying...)
In-Reply-To: <yNSrSEBSEthk1cJc2W6y3M50LXPWIRpFNyUtLE8yIZMb4guTLWuQi9XjWd4MHnt5vxOZAK1bO32QWqqM26bRU_XpiYnip5jDiyjKWUKIH7w=@protonmail.com>
References: <yNSrSEBSEthk1cJc2W6y3M50LXPWIRpFNyUtLE8yIZMb4guTLWuQi9XjWd4MHnt5vxOZAK1bO32QWqqM26bRU_XpiYnip5jDiyjKWUKIH7w=@protonmail.com>
Message-ID: <CAF8bMcZhpaiybY_wgh_7Gx76t1M=8c=4Dt4EP_VJYuG7EwqK5g@mail.gmail.com>

Does it work if you supply the closing parenthesis on the call to boxM?
The parser says the input is incomplete and a missing closing parenthesis
would cause that error..

// create a string command with that variable name.String boxVariable =
"boxM(boxMVariable [,-5], boxMVariable[,5]";

// try to execute the command...
// FAILS with org.rosuda.REngine.Rserve.RserveException: eval failed,
request status: R parser: input incomplete>>>> FAILS ! >>>>  REXP
theBoxMResult = rConnection.eval(boxVariable);    <<<< FAILS <<<<<

Bill Dunlap
TIBCO Software
wdunlap tibco.com

On Fri, Oct 27, 2017 at 12:41 PM, Morkus via R-devel <r-devel at r-project.org>
wrote:

> It can't be this hard, right? I really need a shove in the right direction
> here. Been spinning wheels for three days. Cannot get past the errors.
>
> I'm doing something wrong, obviously, since I can easily compute the Box's
> M right there in RStudio
>
> But I don't see what is wrong below with the coding equivalent.
>
> The entire code snippet is below. The code fails below on the call to the
> boxM statistic call.
>
> PLEASE HELP!!!
>
> Thanks in advance,
>
> -------------------------
>
> rConnection.eval("library('biotools')");
>
> String inputIris = "5.1,3.5,1.4,0.2,setosa\n" +
> "4.9,3,1.4,0.2,setosa\n" +
> "4.7,3.2,1.3,0.2,setosa\n" +
> "4.6,3.1,1.5,0.2,setosa\n" +
> "5,3.6,1.4,0.2,setosa\n" +
> "5.4,3.9,1.7,0.4,setosa\n" +
> "4.6,3.4,1.4,0.3,setosa\n" +
> "5,3.4,1.5,0.2,setosa\n" +
> "4.4,2.9,1.4,0.2,setosa\n" +
> "4.9,3.1,1.5,0.1,setosa\n" +
> "5.4,3.7,1.5,0.2,setosa\n" +
> "4.8,3.4,1.6,0.2,setosa\n" +
> "4.8,3,1.4,0.1,setosa\n" +
> "4.3,3,1.1,0.1,setosa\n" +
> "5.8,4,1.2,0.2,setosa\n" +
> "5.7,4.4,1.5,0.4,setosa\n" +
> "5.4,3.9,1.3,0.4,setosa\n" +
> "5.1,3.5,1.4,0.3,setosa\n" +
> "5.7,3.8,1.7,0.3,setosa\n" +
> "5.1,3.8,1.5,0.3,setosa\n" +
> "5.4,3.4,1.7,0.2,setosa\n" +
> "5.1,3.7,1.5,0.4,setosa\n" +
> "4.6,3.6,1,0.2,setosa\n" +
> "5.1,3.3,1.7,0.5,setosa\n" +
> "4.8,3.4,1.9,0.2,setosa\n" +
> "5,3,1.6,0.2,setosa\n" +
> "5,3.4,1.6,0.4,setosa\n" +
> "5.2,3.5,1.5,0.2,setosa\n" +
> "5.2,3.4,1.4,0.2,setosa\n" +
> "4.7,3.2,1.6,0.2,setosa\n" +
> "4.8,3.1,1.6,0.2,setosa\n" +
> "5.4,3.4,1.5,0.4,setosa\n" +
> "5.2,4.1,1.5,0.1,setosa\n" +
> "5.5,4.2,1.4,0.2,setosa\n" +
> "4.9,3.1,1.5,0.2,setosa\n" +
> "5,3.2,1.2,0.2,setosa\n" +
> "5.5,3.5,1.3,0.2,setosa\n" +
> "4.9,3.6,1.4,0.1,setosa\n" +
> "4.4,3,1.3,0.2,setosa\n" +
> "5.1,3.4,1.5,0.2,setosa\n" +
> "5,3.5,1.3,0.3,setosa\n" +
> "4.5,2.3,1.3,0.3,setosa\n" +
> "4.4,3.2,1.3,0.2,setosa\n" +
> "5,3.5,1.6,0.6,setosa\n" +
> "5.1,3.8,1.9,0.4,setosa\n" +
> "4.8,3,1.4,0.3,setosa\n" +
> "5.1,3.8,1.6,0.2,setosa\n" +
> "4.6,3.2,1.4,0.2,setosa\n" +
> "5.3,3.7,1.5,0.2,setosa\n" +
> "5,3.3,1.4,0.2,setosa\n" +
> "7,3.2,4.7,1.4,versicolor\n" +
> "6.4,3.2,4.5,1.5,versicolor\n" +
> "6.9,3.1,4.9,1.5,versicolor\n" +
> "5.5,2.3,4,1.3,versicolor\n" +
> "6.5,2.8,4.6,1.5,versicolor\n" +
> "5.7,2.8,4.5,1.3,versicolor\n" +
> "6.3,3.3,4.7,1.6,versicolor\n" +
> "4.9,2.4,3.3,1,versicolor\n" +
> "6.6,2.9,4.6,1.3,versicolor\n" +
> "5.2,2.7,3.9,1.4,versicolor\n" +
> "5,2,3.5,1,versicolor\n" +
> "5.9,3,4.2,1.5,versicolor\n" +
> "6,2.2,4,1,versicolor\n" +
> "6.1,2.9,4.7,1.4,versicolor\n" +
> "5.6,2.9,3.6,1.3,versicolor\n" +
> "6.7,3.1,4.4,1.4,versicolor\n" +
> "5.6,3,4.5,1.5,versicolor\n" +
> "5.8,2.7,4.1,1,versicolor\n" +
> "6.2,2.2,4.5,1.5,versicolor\n" +
> "5.6,2.5,3.9,1.1,versicolor\n" +
> "5.9,3.2,4.8,1.8,versicolor\n" +
> "6.1,2.8,4,1.3,versicolor\n" +
> "6.3,2.5,4.9,1.5,versicolor\n" +
> "6.1,2.8,4.7,1.2,versicolor\n" +
> "6.4,2.9,4.3,1.3,versicolor\n" +
> "6.6,3,4.4,1.4,versicolor\n" +
> "6.8,2.8,4.8,1.4,versicolor\n" +
> "6.7,3,5,1.7,versicolor\n" +
> "6,2.9,4.5,1.5,versicolor\n" +
> "5.7,2.6,3.5,1,versicolor\n" +
> "5.5,2.4,3.8,1.1,versicolor\n" +
> "5.5,2.4,3.7,1,versicolor\n" +
> "5.8,2.7,3.9,1.2,versicolor\n" +
> "6,2.7,5.1,1.6,versicolor\n" +
> "5.4,3,4.5,1.5,versicolor\n" +
> "6,3.4,4.5,1.6,versicolor\n" +
> "6.7,3.1,4.7,1.5,versicolor\n" +
> "6.3,2.3,4.4,1.3,versicolor\n" +
> "5.6,3,4.1,1.3,versicolor\n" +
> "5.5,2.5,4,1.3,versicolor\n" +
> "5.5,2.6,4.4,1.2,versicolor\n" +
> "6.1,3,4.6,1.4,versicolor\n" +
> "5.8,2.6,4,1.2,versicolor\n" +
> "5,2.3,3.3,1,versicolor\n" +
> "5.6,2.7,4.2,1.3,versicolor\n" +
> "5.7,3,4.2,1.2,versicolor\n" +
> "5.7,2.9,4.2,1.3,versicolor\n" +
> "6.2,2.9,4.3,1.3,versicolor\n" +
> "5.1,2.5,3,1.1,versicolor\n" +
> "5.7,2.8,4.1,1.3,versicolor\n" +
> "6.3,3.3,6,2.5,virginica\n" +
> "5.8,2.7,5.1,1.9,virginica\n" +
> "7.1,3,5.9,2.1,virginica\n" +
> "6.3,2.9,5.6,1.8,virginica\n" +
> "6.5,3,5.8,2.2,virginica\n" +
> "7.6,3,6.6,2.1,virginica\n" +
> "4.9,2.5,4.5,1.7,virginica\n" +
> "7.3,2.9,6.3,1.8,virginica\n" +
> "6.7,2.5,5.8,1.8,virginica\n" +
> "7.2,3.6,6.1,2.5,virginica\n" +
> "6.5,3.2,5.1,2,virginica\n" +
> "6.4,2.7,5.3,1.9,virginica\n" +
> "6.8,3,5.5,2.1,virginica\n" +
> "5.7,2.5,5,2,virginica\n" +
> "5.8,2.8,5.1,2.4,virginica\n" +
> "6.4,3.2,5.3,2.3,virginica\n" +
> "6.5,3,5.5,1.8,virginica\n" +
> "7.7,3.8,6.7,2.2,virginica\n" +
> "7.7,2.6,6.9,2.3,virginica\n" +
> "6,2.2,5,1.5,virginica\n" +
> "6.9,3.2,5.7,2.3,virginica\n" +
> "5.6,2.8,4.9,2,virginica\n" +
> "7.7,2.8,6.7,2,virginica\n" +
> "6.3,2.7,4.9,1.8,virginica\n" +
> "6.7,3.3,5.7,2.1,virginica\n" +
> "7.2,3.2,6,1.8,virginica\n" +
> "6.2,2.8,4.8,1.8,virginica\n" +
> "6.1,3,4.9,1.8,virginica\n" +
> "6.4,2.8,5.6,2.1,virginica\n" +
> "7.2,3,5.8,1.6,virginica\n" +
> "7.4,2.8,6.1,1.9,virginica\n" +
> "7.9,3.8,6.4,2,virginica\n" +
> "6.4,2.8,5.6,2.2,virginica\n" +
> "6.3,2.8,5.1,1.5,virginica\n" +
> "6.1,2.6,5.6,1.4,virginica\n" +
> "7.7,3,6.1,2.3,virginica\n" +
> "6.3,3.4,5.6,2.4,virginica\n" +
> "6.4,3.1,5.5,1.8,virginica\n" +
> "6,3,4.8,1.8,virginica\n" +
> "6.9,3.1,5.4,2.1,virginica\n" +
> "6.7,3.1,5.6,2.4,virginica\n" +
> "6.9,3.1,5.1,2.3,virginica\n" +
> "5.8,2.7,5.1,1.9,virginica\n" +
> "6.8,3.2,5.9,2.3,virginica\n" +
> "6.7,3.3,5.7,2.5,virginica\n" +
> "6.7,3,5.2,2.3,virginica\n" +
> "6.3,2.5,5,1.9,virginica\n" +
> "6.5,3,5.2,2,virginica\n" +
> "6.2,3.4,5.4,2.3,virginica\n" +
> "5.9,3,5.1,1.8,virginica\n";
>
> List tableRead = rConnection.eval(
> "read.csv(textConnection(\"" + inputIris + "\"), header =
> FALSE)").asList();  // works!
>
> double[] d1 = ((REXPVector) ((RList) tableRead).get(0)).asDoubles();
> double[] d2 = ((REXPVector) ((RList) tableRead).get(1)).asDoubles();
> double[] d3 = ((REXPVector) ((RList) tableRead).get(2)).asDoubles();
> double[] d4 = ((REXPVector) ((RList) tableRead).get(3)).asDoubles();
> String[] d5 = ((REXPVector) ((RList) tableRead).get(4)).asStrings();
>
> // create data frame with data.REXP myDf = REXP.createDataFrame(new RList(
> new REXP[]
> {
> new REXPDouble(d1),
> new REXPDouble(d2),
> new REXPDouble(d3),
> new REXPDouble(d4),
> new REXPString(d5)
> }));
>
> // assign the data to a variable as was suggested.rConnection.assign("boxMVariable",
> myDf);
>
> // create a string command with that variable name.String boxVariable =
> "boxM(boxMVariable [,-5], boxMVariable[,5]";
>
> // try to execute the command...
> // FAILS with org.rosuda.REngine.Rserve.RserveException: eval failed,
> request status: R parser: input incomplete>>>> FAILS ! >>>>  REXP
> theBoxMResult = rConnection.eval(boxVariable);    <<<< FAILS <<<<<
>
> sent from [ProtonMail](https://protonmail.com), Swiss-based encrypted
> email.
>         [[alternative HTML version deleted]]
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>

	[[alternative HTML version deleted]]


From murdoch.duncan at gmail.com  Sat Oct 28 00:09:04 2017
From: murdoch.duncan at gmail.com (Duncan Murdoch)
Date: Fri, 27 Oct 2017 18:09:04 -0400
Subject: [Rd] Cannot Compute Box's M (Three Days Trying...)
In-Reply-To: <yNSrSEBSEthk1cJc2W6y3M50LXPWIRpFNyUtLE8yIZMb4guTLWuQi9XjWd4MHnt5vxOZAK1bO32QWqqM26bRU_XpiYnip5jDiyjKWUKIH7w=@protonmail.com>
References: <yNSrSEBSEthk1cJc2W6y3M50LXPWIRpFNyUtLE8yIZMb4guTLWuQi9XjWd4MHnt5vxOZAK1bO32QWqqM26bRU_XpiYnip5jDiyjKWUKIH7w=@protonmail.com>
Message-ID: <3e5b4dc9-1b9a-4c63-a929-82a127856dbe@gmail.com>

Just print the string you are asking to R to evaluate.  It doesn't make 
any sense as an R expression.  Fix that, and things will work.

Duncan Murdoch

On 27/10/2017 3:41 PM, Morkus via R-devel wrote:
> It can't be this hard, right? I really need a shove in the right direction here. Been spinning wheels for three days. Cannot get past the errors.
> 
> I'm doing something wrong, obviously, since I can easily compute the Box's M right there in RStudio
> 
> But I don't see what is wrong below with the coding equivalent.
> 
> The entire code snippet is below. The code fails below on the call to the boxM statistic call.
> 
> PLEASE HELP!!!
> 
> Thanks in advance,
> 
> -------------------------
> 
> rConnection.eval("library('biotools')");
> 
> String inputIris = "5.1,3.5,1.4,0.2,setosa\n" +
> "4.9,3,1.4,0.2,setosa\n" +
> "4.7,3.2,1.3,0.2,setosa\n" +
> "4.6,3.1,1.5,0.2,setosa\n" +
> "5,3.6,1.4,0.2,setosa\n" +
> "5.4,3.9,1.7,0.4,setosa\n" +
> "4.6,3.4,1.4,0.3,setosa\n" +
> "5,3.4,1.5,0.2,setosa\n" +
> "4.4,2.9,1.4,0.2,setosa\n" +
> "4.9,3.1,1.5,0.1,setosa\n" +
> "5.4,3.7,1.5,0.2,setosa\n" +
> "4.8,3.4,1.6,0.2,setosa\n" +
> "4.8,3,1.4,0.1,setosa\n" +
> "4.3,3,1.1,0.1,setosa\n" +
> "5.8,4,1.2,0.2,setosa\n" +
> "5.7,4.4,1.5,0.4,setosa\n" +
> "5.4,3.9,1.3,0.4,setosa\n" +
> "5.1,3.5,1.4,0.3,setosa\n" +
> "5.7,3.8,1.7,0.3,setosa\n" +
> "5.1,3.8,1.5,0.3,setosa\n" +
> "5.4,3.4,1.7,0.2,setosa\n" +
> "5.1,3.7,1.5,0.4,setosa\n" +
> "4.6,3.6,1,0.2,setosa\n" +
> "5.1,3.3,1.7,0.5,setosa\n" +
> "4.8,3.4,1.9,0.2,setosa\n" +
> "5,3,1.6,0.2,setosa\n" +
> "5,3.4,1.6,0.4,setosa\n" +
> "5.2,3.5,1.5,0.2,setosa\n" +
> "5.2,3.4,1.4,0.2,setosa\n" +
> "4.7,3.2,1.6,0.2,setosa\n" +
> "4.8,3.1,1.6,0.2,setosa\n" +
> "5.4,3.4,1.5,0.4,setosa\n" +
> "5.2,4.1,1.5,0.1,setosa\n" +
> "5.5,4.2,1.4,0.2,setosa\n" +
> "4.9,3.1,1.5,0.2,setosa\n" +
> "5,3.2,1.2,0.2,setosa\n" +
> "5.5,3.5,1.3,0.2,setosa\n" +
> "4.9,3.6,1.4,0.1,setosa\n" +
> "4.4,3,1.3,0.2,setosa\n" +
> "5.1,3.4,1.5,0.2,setosa\n" +
> "5,3.5,1.3,0.3,setosa\n" +
> "4.5,2.3,1.3,0.3,setosa\n" +
> "4.4,3.2,1.3,0.2,setosa\n" +
> "5,3.5,1.6,0.6,setosa\n" +
> "5.1,3.8,1.9,0.4,setosa\n" +
> "4.8,3,1.4,0.3,setosa\n" +
> "5.1,3.8,1.6,0.2,setosa\n" +
> "4.6,3.2,1.4,0.2,setosa\n" +
> "5.3,3.7,1.5,0.2,setosa\n" +
> "5,3.3,1.4,0.2,setosa\n" +
> "7,3.2,4.7,1.4,versicolor\n" +
> "6.4,3.2,4.5,1.5,versicolor\n" +
> "6.9,3.1,4.9,1.5,versicolor\n" +
> "5.5,2.3,4,1.3,versicolor\n" +
> "6.5,2.8,4.6,1.5,versicolor\n" +
> "5.7,2.8,4.5,1.3,versicolor\n" +
> "6.3,3.3,4.7,1.6,versicolor\n" +
> "4.9,2.4,3.3,1,versicolor\n" +
> "6.6,2.9,4.6,1.3,versicolor\n" +
> "5.2,2.7,3.9,1.4,versicolor\n" +
> "5,2,3.5,1,versicolor\n" +
> "5.9,3,4.2,1.5,versicolor\n" +
> "6,2.2,4,1,versicolor\n" +
> "6.1,2.9,4.7,1.4,versicolor\n" +
> "5.6,2.9,3.6,1.3,versicolor\n" +
> "6.7,3.1,4.4,1.4,versicolor\n" +
> "5.6,3,4.5,1.5,versicolor\n" +
> "5.8,2.7,4.1,1,versicolor\n" +
> "6.2,2.2,4.5,1.5,versicolor\n" +
> "5.6,2.5,3.9,1.1,versicolor\n" +
> "5.9,3.2,4.8,1.8,versicolor\n" +
> "6.1,2.8,4,1.3,versicolor\n" +
> "6.3,2.5,4.9,1.5,versicolor\n" +
> "6.1,2.8,4.7,1.2,versicolor\n" +
> "6.4,2.9,4.3,1.3,versicolor\n" +
> "6.6,3,4.4,1.4,versicolor\n" +
> "6.8,2.8,4.8,1.4,versicolor\n" +
> "6.7,3,5,1.7,versicolor\n" +
> "6,2.9,4.5,1.5,versicolor\n" +
> "5.7,2.6,3.5,1,versicolor\n" +
> "5.5,2.4,3.8,1.1,versicolor\n" +
> "5.5,2.4,3.7,1,versicolor\n" +
> "5.8,2.7,3.9,1.2,versicolor\n" +
> "6,2.7,5.1,1.6,versicolor\n" +
> "5.4,3,4.5,1.5,versicolor\n" +
> "6,3.4,4.5,1.6,versicolor\n" +
> "6.7,3.1,4.7,1.5,versicolor\n" +
> "6.3,2.3,4.4,1.3,versicolor\n" +
> "5.6,3,4.1,1.3,versicolor\n" +
> "5.5,2.5,4,1.3,versicolor\n" +
> "5.5,2.6,4.4,1.2,versicolor\n" +
> "6.1,3,4.6,1.4,versicolor\n" +
> "5.8,2.6,4,1.2,versicolor\n" +
> "5,2.3,3.3,1,versicolor\n" +
> "5.6,2.7,4.2,1.3,versicolor\n" +
> "5.7,3,4.2,1.2,versicolor\n" +
> "5.7,2.9,4.2,1.3,versicolor\n" +
> "6.2,2.9,4.3,1.3,versicolor\n" +
> "5.1,2.5,3,1.1,versicolor\n" +
> "5.7,2.8,4.1,1.3,versicolor\n" +
> "6.3,3.3,6,2.5,virginica\n" +
> "5.8,2.7,5.1,1.9,virginica\n" +
> "7.1,3,5.9,2.1,virginica\n" +
> "6.3,2.9,5.6,1.8,virginica\n" +
> "6.5,3,5.8,2.2,virginica\n" +
> "7.6,3,6.6,2.1,virginica\n" +
> "4.9,2.5,4.5,1.7,virginica\n" +
> "7.3,2.9,6.3,1.8,virginica\n" +
> "6.7,2.5,5.8,1.8,virginica\n" +
> "7.2,3.6,6.1,2.5,virginica\n" +
> "6.5,3.2,5.1,2,virginica\n" +
> "6.4,2.7,5.3,1.9,virginica\n" +
> "6.8,3,5.5,2.1,virginica\n" +
> "5.7,2.5,5,2,virginica\n" +
> "5.8,2.8,5.1,2.4,virginica\n" +
> "6.4,3.2,5.3,2.3,virginica\n" +
> "6.5,3,5.5,1.8,virginica\n" +
> "7.7,3.8,6.7,2.2,virginica\n" +
> "7.7,2.6,6.9,2.3,virginica\n" +
> "6,2.2,5,1.5,virginica\n" +
> "6.9,3.2,5.7,2.3,virginica\n" +
> "5.6,2.8,4.9,2,virginica\n" +
> "7.7,2.8,6.7,2,virginica\n" +
> "6.3,2.7,4.9,1.8,virginica\n" +
> "6.7,3.3,5.7,2.1,virginica\n" +
> "7.2,3.2,6,1.8,virginica\n" +
> "6.2,2.8,4.8,1.8,virginica\n" +
> "6.1,3,4.9,1.8,virginica\n" +
> "6.4,2.8,5.6,2.1,virginica\n" +
> "7.2,3,5.8,1.6,virginica\n" +
> "7.4,2.8,6.1,1.9,virginica\n" +
> "7.9,3.8,6.4,2,virginica\n" +
> "6.4,2.8,5.6,2.2,virginica\n" +
> "6.3,2.8,5.1,1.5,virginica\n" +
> "6.1,2.6,5.6,1.4,virginica\n" +
> "7.7,3,6.1,2.3,virginica\n" +
> "6.3,3.4,5.6,2.4,virginica\n" +
> "6.4,3.1,5.5,1.8,virginica\n" +
> "6,3,4.8,1.8,virginica\n" +
> "6.9,3.1,5.4,2.1,virginica\n" +
> "6.7,3.1,5.6,2.4,virginica\n" +
> "6.9,3.1,5.1,2.3,virginica\n" +
> "5.8,2.7,5.1,1.9,virginica\n" +
> "6.8,3.2,5.9,2.3,virginica\n" +
> "6.7,3.3,5.7,2.5,virginica\n" +
> "6.7,3,5.2,2.3,virginica\n" +
> "6.3,2.5,5,1.9,virginica\n" +
> "6.5,3,5.2,2,virginica\n" +
> "6.2,3.4,5.4,2.3,virginica\n" +
> "5.9,3,5.1,1.8,virginica\n";
> 
> List tableRead = rConnection.eval(
> "read.csv(textConnection(\"" + inputIris + "\"), header = FALSE)").asList();  // works!
> 
> double[] d1 = ((REXPVector) ((RList) tableRead).get(0)).asDoubles();
> double[] d2 = ((REXPVector) ((RList) tableRead).get(1)).asDoubles();
> double[] d3 = ((REXPVector) ((RList) tableRead).get(2)).asDoubles();
> double[] d4 = ((REXPVector) ((RList) tableRead).get(3)).asDoubles();
> String[] d5 = ((REXPVector) ((RList) tableRead).get(4)).asStrings();
> 
> // create data frame with data.REXP myDf = REXP.createDataFrame(new RList(
> new REXP[]
> {
> new REXPDouble(d1),
> new REXPDouble(d2),
> new REXPDouble(d3),
> new REXPDouble(d4),
> new REXPString(d5)
> }));
> 
> // assign the data to a variable as was suggested.rConnection.assign("boxMVariable", myDf);
> 
> // create a string command with that variable name.String boxVariable = "boxM(boxMVariable [,-5], boxMVariable[,5]";
> 
> // try to execute the command...
> // FAILS with org.rosuda.REngine.Rserve.RserveException: eval failed, request status: R parser: input incomplete>>>> FAILS ! >>>>  REXP theBoxMResult = rConnection.eval(boxVariable);    <<<< FAILS <<<<<
> 
> sent from [ProtonMail](https://protonmail.com), Swiss-based encrypted email.
> 	[[alternative HTML version deleted]]
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>


From morkus at protonmail.com  Sat Oct 28 12:22:18 2017
From: morkus at protonmail.com (Morkus)
Date: Sat, 28 Oct 2017 06:22:18 -0400
Subject: [Rd] Cannot Compute Box's M (Three Days Trying...)
In-Reply-To: <CAF8bMcZhpaiybY_wgh_7Gx76t1M=8c=4Dt4EP_VJYuG7EwqK5g@mail.gmail.com>
References: <yNSrSEBSEthk1cJc2W6y3M50LXPWIRpFNyUtLE8yIZMb4guTLWuQi9XjWd4MHnt5vxOZAK1bO32QWqqM26bRU_XpiYnip5jDiyjKWUKIH7w=@protonmail.com>
 <CAF8bMcZhpaiybY_wgh_7Gx76t1M=8c=4Dt4EP_VJYuG7EwqK5g@mail.gmail.com>
Message-ID: <dpHJqU1V654ZL2__5E_U_s-e58Z6BE4WNs7aLK00rfn-5JAVKhVaCDxuObj-IzSDpLIV78dglE20l0NFkabmimXxsYewxWl3i4BIkIw7o9c=@protonmail.com>

Hi Bill,

Thanks for catching that. However, the problem remains.

If I use R debugging code with the rResponseObject below, I get a maybe better error, but it still doesn't make sense.

This is the actual error R is throwing:

Error in `[.data.frame`(boxMVariable, , -5) : undefined columns selected

Does this error make sense?

Please reply. :)

Thanks in advance.

---------------

<R Debugging code, one line substituted from earlier posting>

REXP rResponseObject = rConnection.parseAndEval("try(eval(" + boxVariable+ "),silent=TRUE)");
if (rResponseObject.inherits("try-error"))
{
System.out.println("R Serve Eval Exception : " + rResponseObject.asString());
}

Sent from [ProtonMail](https://protonmail.com), Swiss-based encrypted email.

> -------- Original Message --------
> Subject: Re: [Rd] Cannot Compute Box's M (Three Days Trying...)
> Local Time: October 27, 2017 4:00 PM
> UTC Time: October 27, 2017 8:00 PM
> From: wdunlap at tibco.com
> To: Morkus <morkus at protonmail.com>
> r-devel at r-project.org <r-devel at r-project.org>
>
> Does it work if you supply the closing parenthesis on the call to boxM?  The parser says the input is incomplete and a missing closing parenthesis would cause that error..
>
> // create a string command with that variable name.String boxVariable = "boxM(boxMVariable [,-5], boxMVariable[,5]";
>
> // try to execute the command...
> // FAILS with org.rosuda.REngine.Rserve.RserveException: eval failed, request status: R parser: input incomplete>>>> FAILS ! >>>>  REXP theBoxMResult = rConnection.eval(boxVariable);    <<<< FAILS <<<<<
>
> Bill Dunlap
> TIBCO Software
> wdunlap tibco.com
>
> On Fri, Oct 27, 2017 at 12:41 PM, Morkus via R-devel <r-devel at r-project.org> wrote:
>
>> It can't be this hard, right? I really need a shove in the right direction here. Been spinning wheels for three days. Cannot get past the errors.
>>
>> I'm doing something wrong, obviously, since I can easily compute the Box's M right there in RStudio
>>
>> But I don't see what is wrong below with the coding equivalent.
>>
>> The entire code snippet is below. The code fails below on the call to the boxM statistic call.
>>
>> PLEASE HELP!!!
>>
>> Thanks in advance,
>>
>> -------------------------
>>
>> rConnection.eval("library('biotools')");
>>
>> String inputIris = "5.1,3.5,1.4,0.2,setosa\n" +
>> "4.9,3,1.4,0.2,setosa\n" +
>> "4.7,3.2,1.3,0.2,setosa\n" +
>> "4.6,3.1,1.5,0.2,setosa\n" +
>> "5,3.6,1.4,0.2,setosa\n" +
>> "5.4,3.9,1.7,0.4,setosa\n" +
>> "4.6,3.4,1.4,0.3,setosa\n" +
>> "5,3.4,1.5,0.2,setosa\n" +
>> "4.4,2.9,1.4,0.2,setosa\n" +
>> "4.9,3.1,1.5,0.1,setosa\n" +
>> "5.4,3.7,1.5,0.2,setosa\n" +
>> "4.8,3.4,1.6,0.2,setosa\n" +
>> "4.8,3,1.4,0.1,setosa\n" +
>> "4.3,3,1.1,0.1,setosa\n" +
>> "5.8,4,1.2,0.2,setosa\n" +
>> "5.7,4.4,1.5,0.4,setosa\n" +
>> "5.4,3.9,1.3,0.4,setosa\n" +
>> "5.1,3.5,1.4,0.3,setosa\n" +
>> "5.7,3.8,1.7,0.3,setosa\n" +
>> "5.1,3.8,1.5,0.3,setosa\n" +
>> "5.4,3.4,1.7,0.2,setosa\n" +
>> "5.1,3.7,1.5,0.4,setosa\n" +
>> "4.6,3.6,1,0.2,setosa\n" +
>> "5.1,3.3,1.7,0.5,setosa\n" +
>> "4.8,3.4,1.9,0.2,setosa\n" +
>> "5,3,1.6,0.2,setosa\n" +
>> "5,3.4,1.6,0.4,setosa\n" +
>> "5.2,3.5,1.5,0.2,setosa\n" +
>> "5.2,3.4,1.4,0.2,setosa\n" +
>> "4.7,3.2,1.6,0.2,setosa\n" +
>> "4.8,3.1,1.6,0.2,setosa\n" +
>> "5.4,3.4,1.5,0.4,setosa\n" +
>> "5.2,4.1,1.5,0.1,setosa\n" +
>> "5.5,4.2,1.4,0.2,setosa\n" +
>> "4.9,3.1,1.5,0.2,setosa\n" +
>> "5,3.2,1.2,0.2,setosa\n" +
>> "5.5,3.5,1.3,0.2,setosa\n" +
>> "4.9,3.6,1.4,0.1,setosa\n" +
>> "4.4,3,1.3,0.2,setosa\n" +
>> "5.1,3.4,1.5,0.2,setosa\n" +
>> "5,3.5,1.3,0.3,setosa\n" +
>> "4.5,2.3,1.3,0.3,setosa\n" +
>> "4.4,3.2,1.3,0.2,setosa\n" +
>> "5,3.5,1.6,0.6,setosa\n" +
>> "5.1,3.8,1.9,0.4,setosa\n" +
>> "4.8,3,1.4,0.3,setosa\n" +
>> "5.1,3.8,1.6,0.2,setosa\n" +
>> "4.6,3.2,1.4,0.2,setosa\n" +
>> "5.3,3.7,1.5,0.2,setosa\n" +
>> "5,3.3,1.4,0.2,setosa\n" +
>> "7,3.2,4.7,1.4,versicolor\n" +
>> "6.4,3.2,4.5,1.5,versicolor\n" +
>> "6.9,3.1,4.9,1.5,versicolor\n" +
>> "5.5,2.3,4,1.3,versicolor\n" +
>> "6.5,2.8,4.6,1.5,versicolor\n" +
>> "5.7,2.8,4.5,1.3,versicolor\n" +
>> "6.3,3.3,4.7,1.6,versicolor\n" +
>> "4.9,2.4,3.3,1,versicolor\n" +
>> "6.6,2.9,4.6,1.3,versicolor\n" +
>> "5.2,2.7,3.9,1.4,versicolor\n" +
>> "5,2,3.5,1,versicolor\n" +
>> "5.9,3,4.2,1.5,versicolor\n" +
>> "6,2.2,4,1,versicolor\n" +
>> "6.1,2.9,4.7,1.4,versicolor\n" +
>> "5.6,2.9,3.6,1.3,versicolor\n" +
>> "6.7,3.1,4.4,1.4,versicolor\n" +
>> "5.6,3,4.5,1.5,versicolor\n" +
>> "5.8,2.7,4.1,1,versicolor\n" +
>> "6.2,2.2,4.5,1.5,versicolor\n" +
>> "5.6,2.5,3.9,1.1,versicolor\n" +
>> "5.9,3.2,4.8,1.8,versicolor\n" +
>> "6.1,2.8,4,1.3,versicolor\n" +
>> "6.3,2.5,4.9,1.5,versicolor\n" +
>> "6.1,2.8,4.7,1.2,versicolor\n" +
>> "6.4,2.9,4.3,1.3,versicolor\n" +
>> "6.6,3,4.4,1.4,versicolor\n" +
>> "6.8,2.8,4.8,1.4,versicolor\n" +
>> "6.7,3,5,1.7,versicolor\n" +
>> "6,2.9,4.5,1.5,versicolor\n" +
>> "5.7,2.6,3.5,1,versicolor\n" +
>> "5.5,2.4,3.8,1.1,versicolor\n" +
>> "5.5,2.4,3.7,1,versicolor\n" +
>> "5.8,2.7,3.9,1.2,versicolor\n" +
>> "6,2.7,5.1,1.6,versicolor\n" +
>> "5.4,3,4.5,1.5,versicolor\n" +
>> "6,3.4,4.5,1.6,versicolor\n" +
>> "6.7,3.1,4.7,1.5,versicolor\n" +
>> "6.3,2.3,4.4,1.3,versicolor\n" +
>> "5.6,3,4.1,1.3,versicolor\n" +
>> "5.5,2.5,4,1.3,versicolor\n" +
>> "5.5,2.6,4.4,1.2,versicolor\n" +
>> "6.1,3,4.6,1.4,versicolor\n" +
>> "5.8,2.6,4,1.2,versicolor\n" +
>> "5,2.3,3.3,1,versicolor\n" +
>> "5.6,2.7,4.2,1.3,versicolor\n" +
>> "5.7,3,4.2,1.2,versicolor\n" +
>> "5.7,2.9,4.2,1.3,versicolor\n" +
>> "6.2,2.9,4.3,1.3,versicolor\n" +
>> "5.1,2.5,3,1.1,versicolor\n" +
>> "5.7,2.8,4.1,1.3,versicolor\n" +
>> "6.3,3.3,6,2.5,virginica\n" +
>> "5.8,2.7,5.1,1.9,virginica\n" +
>> "7.1,3,5.9,2.1,virginica\n" +
>> "6.3,2.9,5.6,1.8,virginica\n" +
>> "6.5,3,5.8,2.2,virginica\n" +
>> "7.6,3,6.6,2.1,virginica\n" +
>> "4.9,2.5,4.5,1.7,virginica\n" +
>> "7.3,2.9,6.3,1.8,virginica\n" +
>> "6.7,2.5,5.8,1.8,virginica\n" +
>> "7.2,3.6,6.1,2.5,virginica\n" +
>> "6.5,3.2,5.1,2,virginica\n" +
>> "6.4,2.7,5.3,1.9,virginica\n" +
>> "6.8,3,5.5,2.1,virginica\n" +
>> "5.7,2.5,5,2,virginica\n" +
>> "5.8,2.8,5.1,2.4,virginica\n" +
>> "6.4,3.2,5.3,2.3,virginica\n" +
>> "6.5,3,5.5,1.8,virginica\n" +
>> "7.7,3.8,6.7,2.2,virginica\n" +
>> "7.7,2.6,6.9,2.3,virginica\n" +
>> "6,2.2,5,1.5,virginica\n" +
>> "6.9,3.2,5.7,2.3,virginica\n" +
>> "5.6,2.8,4.9,2,virginica\n" +
>> "7.7,2.8,6.7,2,virginica\n" +
>> "6.3,2.7,4.9,1.8,virginica\n" +
>> "6.7,3.3,5.7,2.1,virginica\n" +
>> "7.2,3.2,6,1.8,virginica\n" +
>> "6.2,2.8,4.8,1.8,virginica\n" +
>> "6.1,3,4.9,1.8,virginica\n" +
>> "6.4,2.8,5.6,2.1,virginica\n" +
>> "7.2,3,5.8,1.6,virginica\n" +
>> "7.4,2.8,6.1,1.9,virginica\n" +
>> "7.9,3.8,6.4,2,virginica\n" +
>> "6.4,2.8,5.6,2.2,virginica\n" +
>> "6.3,2.8,5.1,1.5,virginica\n" +
>> "6.1,2.6,5.6,1.4,virginica\n" +
>> "7.7,3,6.1,2.3,virginica\n" +
>> "6.3,3.4,5.6,2.4,virginica\n" +
>> "6.4,3.1,5.5,1.8,virginica\n" +
>> "6,3,4.8,1.8,virginica\n" +
>> "6.9,3.1,5.4,2.1,virginica\n" +
>> "6.7,3.1,5.6,2.4,virginica\n" +
>> "6.9,3.1,5.1,2.3,virginica\n" +
>> "5.8,2.7,5.1,1.9,virginica\n" +
>> "6.8,3.2,5.9,2.3,virginica\n" +
>> "6.7,3.3,5.7,2.5,virginica\n" +
>> "6.7,3,5.2,2.3,virginica\n" +
>> "6.3,2.5,5,1.9,virginica\n" +
>> "6.5,3,5.2,2,virginica\n" +
>> "6.2,3.4,5.4,2.3,virginica\n" +
>> "5.9,3,5.1,1.8,virginica\n";
>>
>> List tableRead = rConnection.eval(
>> "read.csv(textConnection(\"" + inputIris + "\"), header = FALSE)").asList();  // works!
>>
>> double[] d1 = ((REXPVector) ((RList) tableRead).get(0)).asDoubles();
>> double[] d2 = ((REXPVector) ((RList) tableRead).get(1)).asDoubles();
>> double[] d3 = ((REXPVector) ((RList) tableRead).get(2)).asDoubles();
>> double[] d4 = ((REXPVector) ((RList) tableRead).get(3)).asDoubles();
>> String[] d5 = ((REXPVector) ((RList) tableRead).get(4)).asStrings();
>>
>> // create data frame with data.REXP myDf = REXP.createDataFrame(new RList(
>> new REXP[]
>> {
>> new REXPDouble(d1),
>> new REXPDouble(d2),
>> new REXPDouble(d3),
>> new REXPDouble(d4),
>> new REXPString(d5)
>> }));
>>
>> // assign the data to a variable as was suggested.rConnection.assign("boxMVariable", myDf);
>>
>> // create a string command with that variable name.String boxVariable = "boxM(boxMVariable [,-5], boxMVariable[,5]";
>>
>> // try to execute the command...
>> // FAILS with org.rosuda.REngine.Rserve.RserveException: eval failed, request status: R parser: input incomplete>>>> FAILS ! >>>>  REXP theBoxMResult = rConnection.eval(boxVariable);    <<<< FAILS <<<<<
>>
>> sent from [ProtonMail](https://protonmail.com), Swiss-based encrypted email.
>>         [[alternative HTML version deleted]]
>>
>> ______________________________________________
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel
	[[alternative HTML version deleted]]


From morkus at protonmail.com  Sat Oct 28 12:26:35 2017
From: morkus at protonmail.com (Morkus)
Date: Sat, 28 Oct 2017 06:26:35 -0400
Subject: [Rd] Cannot Compute Box's M (Three Days Trying...)
In-Reply-To: <3e5b4dc9-1b9a-4c63-a929-82a127856dbe@gmail.com>
References: <yNSrSEBSEthk1cJc2W6y3M50LXPWIRpFNyUtLE8yIZMb4guTLWuQi9XjWd4MHnt5vxOZAK1bO32QWqqM26bRU_XpiYnip5jDiyjKWUKIH7w=@protonmail.com>
 <3e5b4dc9-1b9a-4c63-a929-82a127856dbe@gmail.com>
Message-ID: <P6V3IIqCfJ4SUFtNl9ML3Wmo2cvnL50vlzlUJdvRaAj106MjIojw5ITRt5ZQdkeOa9rnyS6HTxRgg7SUwmPY4CqGPbQFWqYEKCTr_yDVZdM=@protonmail.com>

I'm not sure what you mean. Could you please be more specific?

If I print the string, I get:  boxM(boxMVariable[, -5], boxMVariable[, 5])

From this code:
.
.
.
// assign the data to a variable.rConnection.assign("boxMVariable", myDf);

// create a string command with that variable name.String boxVariable = "boxM(boxMVariable[, -5], boxMVariable[, 5])";

System.out.println(boxVariable);  // print the string? Not sure what is meant.

Sorry if I didn't understand your suggestion.

Look forward to hearing back from you.

Thanks,

Sent from [ProtonMail](https://protonmail.com), Swiss-based encrypted email.

> -------- Original Message --------
> Subject: Re: [Rd] Cannot Compute Box's M (Three Days Trying...)
> Local Time: October 27, 2017 6:09 PM
> UTC Time: October 27, 2017 10:09 PM
> From: murdoch.duncan at gmail.com
> To: Morkus <morkus at protonmail.com>, r-devel at r-project.org <r-devel at r-project.org>
>
> Just print the string you are asking to R to evaluate. It doesn't make
> any sense as an R expression. Fix that, and things will work.
>
> Duncan Murdoch
>
> On 27/10/2017 3:41 PM, Morkus via R-devel wrote:
>
>> It can't be this hard, right? I really need a shove in the right direction here. Been spinning wheels for three days. Cannot get past the errors.
>> I'm doing something wrong, obviously, since I can easily compute the Box's M right there in RStudio
>> But I don't see what is wrong below with the coding equivalent.
>> The entire code snippet is below. The code fails below on the call to the boxM statistic call.
>> PLEASE HELP!!!
>> Thanks in advance,
>> ---------------------------------------------------------------
>>
>> rConnection.eval("library('biotools')");
>> String inputIris = "5.1,3.5,1.4,0.2,setosa\n" +
>> "4.9,3,1.4,0.2,setosa\n" +
>> "4.7,3.2,1.3,0.2,setosa\n" +
>> "4.6,3.1,1.5,0.2,setosa\n" +
>> "5,3.6,1.4,0.2,setosa\n" +
>> "5.4,3.9,1.7,0.4,setosa\n" +
>> "4.6,3.4,1.4,0.3,setosa\n" +
>> "5,3.4,1.5,0.2,setosa\n" +
>> "4.4,2.9,1.4,0.2,setosa\n" +
>> "4.9,3.1,1.5,0.1,setosa\n" +
>> "5.4,3.7,1.5,0.2,setosa\n" +
>> "4.8,3.4,1.6,0.2,setosa\n" +
>> "4.8,3,1.4,0.1,setosa\n" +
>> "4.3,3,1.1,0.1,setosa\n" +
>> "5.8,4,1.2,0.2,setosa\n" +
>> "5.7,4.4,1.5,0.4,setosa\n" +
>> "5.4,3.9,1.3,0.4,setosa\n" +
>> "5.1,3.5,1.4,0.3,setosa\n" +
>> "5.7,3.8,1.7,0.3,setosa\n" +
>> "5.1,3.8,1.5,0.3,setosa\n" +
>> "5.4,3.4,1.7,0.2,setosa\n" +
>> "5.1,3.7,1.5,0.4,setosa\n" +
>> "4.6,3.6,1,0.2,setosa\n" +
>> "5.1,3.3,1.7,0.5,setosa\n" +
>> "4.8,3.4,1.9,0.2,setosa\n" +
>> "5,3,1.6,0.2,setosa\n" +
>> "5,3.4,1.6,0.4,setosa\n" +
>> "5.2,3.5,1.5,0.2,setosa\n" +
>> "5.2,3.4,1.4,0.2,setosa\n" +
>> "4.7,3.2,1.6,0.2,setosa\n" +
>> "4.8,3.1,1.6,0.2,setosa\n" +
>> "5.4,3.4,1.5,0.4,setosa\n" +
>> "5.2,4.1,1.5,0.1,setosa\n" +
>> "5.5,4.2,1.4,0.2,setosa\n" +
>> "4.9,3.1,1.5,0.2,setosa\n" +
>> "5,3.2,1.2,0.2,setosa\n" +
>> "5.5,3.5,1.3,0.2,setosa\n" +
>> "4.9,3.6,1.4,0.1,setosa\n" +
>> "4.4,3,1.3,0.2,setosa\n" +
>> "5.1,3.4,1.5,0.2,setosa\n" +
>> "5,3.5,1.3,0.3,setosa\n" +
>> "4.5,2.3,1.3,0.3,setosa\n" +
>> "4.4,3.2,1.3,0.2,setosa\n" +
>> "5,3.5,1.6,0.6,setosa\n" +
>> "5.1,3.8,1.9,0.4,setosa\n" +
>> "4.8,3,1.4,0.3,setosa\n" +
>> "5.1,3.8,1.6,0.2,setosa\n" +
>> "4.6,3.2,1.4,0.2,setosa\n" +
>> "5.3,3.7,1.5,0.2,setosa\n" +
>> "5,3.3,1.4,0.2,setosa\n" +
>> "7,3.2,4.7,1.4,versicolor\n" +
>> "6.4,3.2,4.5,1.5,versicolor\n" +
>> "6.9,3.1,4.9,1.5,versicolor\n" +
>> "5.5,2.3,4,1.3,versicolor\n" +
>> "6.5,2.8,4.6,1.5,versicolor\n" +
>> "5.7,2.8,4.5,1.3,versicolor\n" +
>> "6.3,3.3,4.7,1.6,versicolor\n" +
>> "4.9,2.4,3.3,1,versicolor\n" +
>> "6.6,2.9,4.6,1.3,versicolor\n" +
>> "5.2,2.7,3.9,1.4,versicolor\n" +
>> "5,2,3.5,1,versicolor\n" +
>> "5.9,3,4.2,1.5,versicolor\n" +
>> "6,2.2,4,1,versicolor\n" +
>> "6.1,2.9,4.7,1.4,versicolor\n" +
>> "5.6,2.9,3.6,1.3,versicolor\n" +
>> "6.7,3.1,4.4,1.4,versicolor\n" +
>> "5.6,3,4.5,1.5,versicolor\n" +
>> "5.8,2.7,4.1,1,versicolor\n" +
>> "6.2,2.2,4.5,1.5,versicolor\n" +
>> "5.6,2.5,3.9,1.1,versicolor\n" +
>> "5.9,3.2,4.8,1.8,versicolor\n" +
>> "6.1,2.8,4,1.3,versicolor\n" +
>> "6.3,2.5,4.9,1.5,versicolor\n" +
>> "6.1,2.8,4.7,1.2,versicolor\n" +
>> "6.4,2.9,4.3,1.3,versicolor\n" +
>> "6.6,3,4.4,1.4,versicolor\n" +
>> "6.8,2.8,4.8,1.4,versicolor\n" +
>> "6.7,3,5,1.7,versicolor\n" +
>> "6,2.9,4.5,1.5,versicolor\n" +
>> "5.7,2.6,3.5,1,versicolor\n" +
>> "5.5,2.4,3.8,1.1,versicolor\n" +
>> "5.5,2.4,3.7,1,versicolor\n" +
>> "5.8,2.7,3.9,1.2,versicolor\n" +
>> "6,2.7,5.1,1.6,versicolor\n" +
>> "5.4,3,4.5,1.5,versicolor\n" +
>> "6,3.4,4.5,1.6,versicolor\n" +
>> "6.7,3.1,4.7,1.5,versicolor\n" +
>> "6.3,2.3,4.4,1.3,versicolor\n" +
>> "5.6,3,4.1,1.3,versicolor\n" +
>> "5.5,2.5,4,1.3,versicolor\n" +
>> "5.5,2.6,4.4,1.2,versicolor\n" +
>> "6.1,3,4.6,1.4,versicolor\n" +
>> "5.8,2.6,4,1.2,versicolor\n" +
>> "5,2.3,3.3,1,versicolor\n" +
>> "5.6,2.7,4.2,1.3,versicolor\n" +
>> "5.7,3,4.2,1.2,versicolor\n" +
>> "5.7,2.9,4.2,1.3,versicolor\n" +
>> "6.2,2.9,4.3,1.3,versicolor\n" +
>> "5.1,2.5,3,1.1,versicolor\n" +
>> "5.7,2.8,4.1,1.3,versicolor\n" +
>> "6.3,3.3,6,2.5,virginica\n" +
>> "5.8,2.7,5.1,1.9,virginica\n" +
>> "7.1,3,5.9,2.1,virginica\n" +
>> "6.3,2.9,5.6,1.8,virginica\n" +
>> "6.5,3,5.8,2.2,virginica\n" +
>> "7.6,3,6.6,2.1,virginica\n" +
>> "4.9,2.5,4.5,1.7,virginica\n" +
>> "7.3,2.9,6.3,1.8,virginica\n" +
>> "6.7,2.5,5.8,1.8,virginica\n" +
>> "7.2,3.6,6.1,2.5,virginica\n" +
>> "6.5,3.2,5.1,2,virginica\n" +
>> "6.4,2.7,5.3,1.9,virginica\n" +
>> "6.8,3,5.5,2.1,virginica\n" +
>> "5.7,2.5,5,2,virginica\n" +
>> "5.8,2.8,5.1,2.4,virginica\n" +
>> "6.4,3.2,5.3,2.3,virginica\n" +
>> "6.5,3,5.5,1.8,virginica\n" +
>> "7.7,3.8,6.7,2.2,virginica\n" +
>> "7.7,2.6,6.9,2.3,virginica\n" +
>> "6,2.2,5,1.5,virginica\n" +
>> "6.9,3.2,5.7,2.3,virginica\n" +
>> "5.6,2.8,4.9,2,virginica\n" +
>> "7.7,2.8,6.7,2,virginica\n" +
>> "6.3,2.7,4.9,1.8,virginica\n" +
>> "6.7,3.3,5.7,2.1,virginica\n" +
>> "7.2,3.2,6,1.8,virginica\n" +
>> "6.2,2.8,4.8,1.8,virginica\n" +
>> "6.1,3,4.9,1.8,virginica\n" +
>> "6.4,2.8,5.6,2.1,virginica\n" +
>> "7.2,3,5.8,1.6,virginica\n" +
>> "7.4,2.8,6.1,1.9,virginica\n" +
>> "7.9,3.8,6.4,2,virginica\n" +
>> "6.4,2.8,5.6,2.2,virginica\n" +
>> "6.3,2.8,5.1,1.5,virginica\n" +
>> "6.1,2.6,5.6,1.4,virginica\n" +
>> "7.7,3,6.1,2.3,virginica\n" +
>> "6.3,3.4,5.6,2.4,virginica\n" +
>> "6.4,3.1,5.5,1.8,virginica\n" +
>> "6,3,4.8,1.8,virginica\n" +
>> "6.9,3.1,5.4,2.1,virginica\n" +
>> "6.7,3.1,5.6,2.4,virginica\n" +
>> "6.9,3.1,5.1,2.3,virginica\n" +
>> "5.8,2.7,5.1,1.9,virginica\n" +
>> "6.8,3.2,5.9,2.3,virginica\n" +
>> "6.7,3.3,5.7,2.5,virginica\n" +
>> "6.7,3,5.2,2.3,virginica\n" +
>> "6.3,2.5,5,1.9,virginica\n" +
>> "6.5,3,5.2,2,virginica\n" +
>> "6.2,3.4,5.4,2.3,virginica\n" +
>> "5.9,3,5.1,1.8,virginica\n";
>> List tableRead = rConnection.eval(
>> "read.csv(textConnection("" + inputIris + ""), header = FALSE)").asList(); // works!
>> double[] d1 = ((REXPVector) ((RList) tableRead).get(0)).asDoubles();
>> double[] d2 = ((REXPVector) ((RList) tableRead).get(1)).asDoubles();
>> double[] d3 = ((REXPVector) ((RList) tableRead).get(2)).asDoubles();
>> double[] d4 = ((REXPVector) ((RList) tableRead).get(3)).asDoubles();
>> String[] d5 = ((REXPVector) ((RList) tableRead).get(4)).asStrings();
>> // create data frame with data.REXP myDf = REXP.createDataFrame(new RList(
>> new REXP[]
>> {
>> new REXPDouble(d1),
>> new REXPDouble(d2),
>> new REXPDouble(d3),
>> new REXPDouble(d4),
>> new REXPString(d5)
>> }));
>> // assign the data to a variable as was suggested.rConnection.assign("boxMVariable", myDf);
>> // create a string command with that variable name.String boxVariable = "boxM(boxMVariable [,-5], boxMVariable[,5]";
>> // try to execute the command...
>> // FAILS with org.rosuda.REngine.Rserve.RserveException: eval failed, request status: R parser: input incomplete>>>> FAILS ! >>>> REXP theBoxMResult = rConnection.eval(boxVariable); <<<< FAILS <<<<<
>> sent from [ProtonMail](https://protonmail.com), Swiss-based encrypted email.
>> [[alternative HTML version deleted]]
>> ---------------------------------------------------------------
>>
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel
	[[alternative HTML version deleted]]


From murdoch.duncan at gmail.com  Sat Oct 28 12:48:58 2017
From: murdoch.duncan at gmail.com (Duncan Murdoch)
Date: Sat, 28 Oct 2017 06:48:58 -0400
Subject: [Rd] Cannot Compute Box's M (Three Days Trying...)
In-Reply-To: <P6V3IIqCfJ4SUFtNl9ML3Wmo2cvnL50vlzlUJdvRaAj106MjIojw5ITRt5ZQdkeOa9rnyS6HTxRgg7SUwmPY4CqGPbQFWqYEKCTr_yDVZdM=@protonmail.com>
References: <yNSrSEBSEthk1cJc2W6y3M50LXPWIRpFNyUtLE8yIZMb4guTLWuQi9XjWd4MHnt5vxOZAK1bO32QWqqM26bRU_XpiYnip5jDiyjKWUKIH7w=@protonmail.com>
 <3e5b4dc9-1b9a-4c63-a929-82a127856dbe@gmail.com>
 <P6V3IIqCfJ4SUFtNl9ML3Wmo2cvnL50vlzlUJdvRaAj106MjIojw5ITRt5ZQdkeOa9rnyS6HTxRgg7SUwmPY4CqGPbQFWqYEKCTr_yDVZdM=@protonmail.com>
Message-ID: <abfb1feb-1da9-8c88-ceb5-98cef28ef406@gmail.com>

On 28/10/2017 6:26 AM, Morkus wrote:
> I'm not sure what you mean. Could you please be more specific?

You were trying to eval an expression that you constructed in Java.  I 
was suggesting that before you eval it, you print it.
> 
> If I print the string, I get: *boxM(boxMVariable[, -5], boxMVariable[, 5])*

Right, that's what I was suggesting you do. Now you've fixed the syntax 
error, that looks okay.

If I'm reading these messages in the right order, your latest error is

   Error in `[.data.frame`(boxMVariable, , -5) : undefined columns selected

The expression there is a funny way of printing boxMVariable[,-5].  So 
now you need to figure out why it thinks you've selected undefined 
columns.  This is a little perplexing, because you're asking for all 
columns except column 5, and that works whether or not you have a column 
5.

So I'd guess there's something weird about boxMVariable.  You should ask 
R to print it, and to print str(boxMVariable), to make sure it's a 
regular dataframe containing 4 numeric columns and one factor or 
character column.

Duncan Murdoch

> 
>  From this code:
> .
> .
> .
> /// assign the data to a variable.
> /rConnection.assign("boxMVariable", myDf);
> 
> /// create a string command with that variable name.
> /String boxVariable = "boxM(boxMVariable[, -5], boxMVariable[, 5])";
> 
> *System*./out/.*println*(*boxVariable*);? // print the string? Not sure 
> what is meant.
> 
> Sorry if I didn't understand your suggestion.
> 
> Look forward to hearing back from you.
> 
> Thanks,
> 
> Sent from ProtonMail <https://protonmail.com>, Swiss-based encrypted email.
> 
> 
>> -------- Original Message --------
>> Subject: Re: [Rd] Cannot Compute Box's M (Three Days Trying...)
>> Local Time: October 27, 2017 6:09 PM
>> UTC Time: October 27, 2017 10:09 PM
>> From: murdoch.duncan at gmail.com
>> To: Morkus <morkus at protonmail.com>, r-devel at r-project.org 
>> <r-devel at r-project.org>
>>
>> Just print the string you are asking to R to evaluate. It doesn't make
>> any sense as an R expression. Fix that, and things will work.
>>
>> Duncan Murdoch
>>
>> On 27/10/2017 3:41 PM, Morkus via R-devel wrote:
>>
>>     It can't be this hard, right? I really need a shove in the right
>>     direction here. Been spinning wheels for three days. Cannot get
>>     past the errors.
>>     I'm doing something wrong, obviously, since I can easily compute
>>     the Box's M right there in RStudio
>>     But I don't see what is wrong below with the coding equivalent.
>>     The entire code snippet is below. The code fails below on the call
>>     to the boxM statistic call.
>>     PLEASE HELP!!!
>>     Thanks in advance,
>>     ------------------------------------------------------------------------
>>
>>     rConnection.eval("library('biotools')");
>>     String inputIris = "5.1,3.5,1.4,0.2,setosa\n" +
>>     "4.9,3,1.4,0.2,setosa\n" +
>>     "4.7,3.2,1.3,0.2,setosa\n" +
>>     "4.6,3.1,1.5,0.2,setosa\n" +
>>     "5,3.6,1.4,0.2,setosa\n" +
>>     "5.4,3.9,1.7,0.4,setosa\n" +
>>     "4.6,3.4,1.4,0.3,setosa\n" +
>>     "5,3.4,1.5,0.2,setosa\n" +
>>     "4.4,2.9,1.4,0.2,setosa\n" +
>>     "4.9,3.1,1.5,0.1,setosa\n" +
>>     "5.4,3.7,1.5,0.2,setosa\n" +
>>     "4.8,3.4,1.6,0.2,setosa\n" +
>>     "4.8,3,1.4,0.1,setosa\n" +
>>     "4.3,3,1.1,0.1,setosa\n" +
>>     "5.8,4,1.2,0.2,setosa\n" +
>>     "5.7,4.4,1.5,0.4,setosa\n" +
>>     "5.4,3.9,1.3,0.4,setosa\n" +
>>     "5.1,3.5,1.4,0.3,setosa\n" +
>>     "5.7,3.8,1.7,0.3,setosa\n" +
>>     "5.1,3.8,1.5,0.3,setosa\n" +
>>     "5.4,3.4,1.7,0.2,setosa\n" +
>>     "5.1,3.7,1.5,0.4,setosa\n" +
>>     "4.6,3.6,1,0.2,setosa\n" +
>>     "5.1,3.3,1.7,0.5,setosa\n" +
>>     "4.8,3.4,1.9,0.2,setosa\n" +
>>     "5,3,1.6,0.2,setosa\n" +
>>     "5,3.4,1.6,0.4,setosa\n" +
>>     "5.2,3.5,1.5,0.2,setosa\n" +
>>     "5.2,3.4,1.4,0.2,setosa\n" +
>>     "4.7,3.2,1.6,0.2,setosa\n" +
>>     "4.8,3.1,1.6,0.2,setosa\n" +
>>     "5.4,3.4,1.5,0.4,setosa\n" +
>>     "5.2,4.1,1.5,0.1,setosa\n" +
>>     "5.5,4.2,1.4,0.2,setosa\n" +
>>     "4.9,3.1,1.5,0.2,setosa\n" +
>>     "5,3.2,1.2,0.2,setosa\n" +
>>     "5.5,3.5,1.3,0.2,setosa\n" +
>>     "4.9,3.6,1.4,0.1,setosa\n" +
>>     "4.4,3,1.3,0.2,setosa\n" +
>>     "5.1,3.4,1.5,0.2,setosa\n" +
>>     "5,3.5,1.3,0.3,setosa\n" +
>>     "4.5,2.3,1.3,0.3,setosa\n" +
>>     "4.4,3.2,1.3,0.2,setosa\n" +
>>     "5,3.5,1.6,0.6,setosa\n" +
>>     "5.1,3.8,1.9,0.4,setosa\n" +
>>     "4.8,3,1.4,0.3,setosa\n" +
>>     "5.1,3.8,1.6,0.2,setosa\n" +
>>     "4.6,3.2,1.4,0.2,setosa\n" +
>>     "5.3,3.7,1.5,0.2,setosa\n" +
>>     "5,3.3,1.4,0.2,setosa\n" +
>>     "7,3.2,4.7,1.4,versicolor\n" +
>>     "6.4,3.2,4.5,1.5,versicolor\n" +
>>     "6.9,3.1,4.9,1.5,versicolor\n" +
>>     "5.5,2.3,4,1.3,versicolor\n" +
>>     "6.5,2.8,4.6,1.5,versicolor\n" +
>>     "5.7,2.8,4.5,1.3,versicolor\n" +
>>     "6.3,3.3,4.7,1.6,versicolor\n" +
>>     "4.9,2.4,3.3,1,versicolor\n" +
>>     "6.6,2.9,4.6,1.3,versicolor\n" +
>>     "5.2,2.7,3.9,1.4,versicolor\n" +
>>     "5,2,3.5,1,versicolor\n" +
>>     "5.9,3,4.2,1.5,versicolor\n" +
>>     "6,2.2,4,1,versicolor\n" +
>>     "6.1,2.9,4.7,1.4,versicolor\n" +
>>     "5.6,2.9,3.6,1.3,versicolor\n" +
>>     "6.7,3.1,4.4,1.4,versicolor\n" +
>>     "5.6,3,4.5,1.5,versicolor\n" +
>>     "5.8,2.7,4.1,1,versicolor\n" +
>>     "6.2,2.2,4.5,1.5,versicolor\n" +
>>     "5.6,2.5,3.9,1.1,versicolor\n" +
>>     "5.9,3.2,4.8,1.8,versicolor\n" +
>>     "6.1,2.8,4,1.3,versicolor\n" +
>>     "6.3,2.5,4.9,1.5,versicolor\n" +
>>     "6.1,2.8,4.7,1.2,versicolor\n" +
>>     "6.4,2.9,4.3,1.3,versicolor\n" +
>>     "6.6,3,4.4,1.4,versicolor\n" +
>>     "6.8,2.8,4.8,1.4,versicolor\n" +
>>     "6.7,3,5,1.7,versicolor\n" +
>>     "6,2.9,4.5,1.5,versicolor\n" +
>>     "5.7,2.6,3.5,1,versicolor\n" +
>>     "5.5,2.4,3.8,1.1,versicolor\n" +
>>     "5.5,2.4,3.7,1,versicolor\n" +
>>     "5.8,2.7,3.9,1.2,versicolor\n" +
>>     "6,2.7,5.1,1.6,versicolor\n" +
>>     "5.4,3,4.5,1.5,versicolor\n" +
>>     "6,3.4,4.5,1.6,versicolor\n" +
>>     "6.7,3.1,4.7,1.5,versicolor\n" +
>>     "6.3,2.3,4.4,1.3,versicolor\n" +
>>     "5.6,3,4.1,1.3,versicolor\n" +
>>     "5.5,2.5,4,1.3,versicolor\n" +
>>     "5.5,2.6,4.4,1.2,versicolor\n" +
>>     "6.1,3,4.6,1.4,versicolor\n" +
>>     "5.8,2.6,4,1.2,versicolor\n" +
>>     "5,2.3,3.3,1,versicolor\n" +
>>     "5.6,2.7,4.2,1.3,versicolor\n" +
>>     "5.7,3,4.2,1.2,versicolor\n" +
>>     "5.7,2.9,4.2,1.3,versicolor\n" +
>>     "6.2,2.9,4.3,1.3,versicolor\n" +
>>     "5.1,2.5,3,1.1,versicolor\n" +
>>     "5.7,2.8,4.1,1.3,versicolor\n" +
>>     "6.3,3.3,6,2.5,virginica\n" +
>>     "5.8,2.7,5.1,1.9,virginica\n" +
>>     "7.1,3,5.9,2.1,virginica\n" +
>>     "6.3,2.9,5.6,1.8,virginica\n" +
>>     "6.5,3,5.8,2.2,virginica\n" +
>>     "7.6,3,6.6,2.1,virginica\n" +
>>     "4.9,2.5,4.5,1.7,virginica\n" +
>>     "7.3,2.9,6.3,1.8,virginica\n" +
>>     "6.7,2.5,5.8,1.8,virginica\n" +
>>     "7.2,3.6,6.1,2.5,virginica\n" +
>>     "6.5,3.2,5.1,2,virginica\n" +
>>     "6.4,2.7,5.3,1.9,virginica\n" +
>>     "6.8,3,5.5,2.1,virginica\n" +
>>     "5.7,2.5,5,2,virginica\n" +
>>     "5.8,2.8,5.1,2.4,virginica\n" +
>>     "6.4,3.2,5.3,2.3,virginica\n" +
>>     "6.5,3,5.5,1.8,virginica\n" +
>>     "7.7,3.8,6.7,2.2,virginica\n" +
>>     "7.7,2.6,6.9,2.3,virginica\n" +
>>     "6,2.2,5,1.5,virginica\n" +
>>     "6.9,3.2,5.7,2.3,virginica\n" +
>>     "5.6,2.8,4.9,2,virginica\n" +
>>     "7.7,2.8,6.7,2,virginica\n" +
>>     "6.3,2.7,4.9,1.8,virginica\n" +
>>     "6.7,3.3,5.7,2.1,virginica\n" +
>>     "7.2,3.2,6,1.8,virginica\n" +
>>     "6.2,2.8,4.8,1.8,virginica\n" +
>>     "6.1,3,4.9,1.8,virginica\n" +
>>     "6.4,2.8,5.6,2.1,virginica\n" +
>>     "7.2,3,5.8,1.6,virginica\n" +
>>     "7.4,2.8,6.1,1.9,virginica\n" +
>>     "7.9,3.8,6.4,2,virginica\n" +
>>     "6.4,2.8,5.6,2.2,virginica\n" +
>>     "6.3,2.8,5.1,1.5,virginica\n" +
>>     "6.1,2.6,5.6,1.4,virginica\n" +
>>     "7.7,3,6.1,2.3,virginica\n" +
>>     "6.3,3.4,5.6,2.4,virginica\n" +
>>     "6.4,3.1,5.5,1.8,virginica\n" +
>>     "6,3,4.8,1.8,virginica\n" +
>>     "6.9,3.1,5.4,2.1,virginica\n" +
>>     "6.7,3.1,5.6,2.4,virginica\n" +
>>     "6.9,3.1,5.1,2.3,virginica\n" +
>>     "5.8,2.7,5.1,1.9,virginica\n" +
>>     "6.8,3.2,5.9,2.3,virginica\n" +
>>     "6.7,3.3,5.7,2.5,virginica\n" +
>>     "6.7,3,5.2,2.3,virginica\n" +
>>     "6.3,2.5,5,1.9,virginica\n" +
>>     "6.5,3,5.2,2,virginica\n" +
>>     "6.2,3.4,5.4,2.3,virginica\n" +
>>     "5.9,3,5.1,1.8,virginica\n";
>>     List tableRead = rConnection.eval(
>>     "read.csv(textConnection("" + inputIris + ""), header =
>>     FALSE)").asList(); // works!
>>     double[] d1 = ((REXPVector) ((RList) tableRead).get(0)).asDoubles();
>>     double[] d2 = ((REXPVector) ((RList) tableRead).get(1)).asDoubles();
>>     double[] d3 = ((REXPVector) ((RList) tableRead).get(2)).asDoubles();
>>     double[] d4 = ((REXPVector) ((RList) tableRead).get(3)).asDoubles();
>>     String[] d5 = ((REXPVector) ((RList) tableRead).get(4)).asStrings();
>>     // create data frame with data.REXP myDf =
>>     REXP.createDataFrame(new RList(
>>     new REXP[]
>>     {
>>     new REXPDouble(d1),
>>     new REXPDouble(d2),
>>     new REXPDouble(d3),
>>     new REXPDouble(d4),
>>     new REXPString(d5)
>>     }));
>>     // assign the data to a variable as was
>>     suggested.rConnection.assign("boxMVariable", myDf);
>>     // create a string command with that variable name.String
>>     boxVariable = "boxM(boxMVariable [,-5], boxMVariable[,5]";
>>     // try to execute the command...
>>     // FAILS with org.rosuda.REngine.Rserve.RserveException: eval
>>     failed, request status: R parser: input incomplete>>>> FAILS !
>>     >>>> REXP theBoxMResult = rConnection.eval(boxVariable); <<<<
>>     FAILS <<<<<
>>     sent from ProtonMail <https://protonmail.com>, Swiss-based
>>     encrypted email.
>>     [[alternative HTML version deleted]]
>>     ------------------------------------------------------------------------
>>
>>     R-devel at r-project.org <mailto:R-devel at r-project.org> mailing list
>>     https://stat.ethz.ch/mailman/listinfo/r-devel
>>
>>
>


From morkus at protonmail.com  Sat Oct 28 13:12:54 2017
From: morkus at protonmail.com (Morkus)
Date: Sat, 28 Oct 2017 07:12:54 -0400
Subject: [Rd] Cannot Compute Box's M (Three Days Trying...)
In-Reply-To: <abfb1feb-1da9-8c88-ceb5-98cef28ef406@gmail.com>
References: <yNSrSEBSEthk1cJc2W6y3M50LXPWIRpFNyUtLE8yIZMb4guTLWuQi9XjWd4MHnt5vxOZAK1bO32QWqqM26bRU_XpiYnip5jDiyjKWUKIH7w=@protonmail.com>
 <3e5b4dc9-1b9a-4c63-a929-82a127856dbe@gmail.com>
 <P6V3IIqCfJ4SUFtNl9ML3Wmo2cvnL50vlzlUJdvRaAj106MjIojw5ITRt5ZQdkeOa9rnyS6HTxRgg7SUwmPY4CqGPbQFWqYEKCTr_yDVZdM=@protonmail.com>
 <abfb1feb-1da9-8c88-ceb5-98cef28ef406@gmail.com>
Message-ID: <rl0BFmHLQl4yweaOtoWaJJEScu0VetftcUuusTtgU1qjAdU-8pgrnohMfnzvJQZTY2jPjjraq6xgDDAlxfHHZunKbfGydZILJQ8xk4g0IWc=@protonmail.com>

Thanks Duncan. Awesome ideas!

I think we're getting closer!

I tried what you suggested and got a possibly better error...
.
.
.
rConnection.assign("boxMVariable", myDf);

String resultBV = "str(boxMVariable)";   // your suggestion.

RESULTING ERROR:

Error in format.default(nam.ob, width = max(ncn), justify = "left") :  invalid 'width' argument

(No idea what this means).

For testing, I'm using the same standard IRIS dataset as the Box's M documentation shows in biotools:

Examples

data(iris)

boxM(iris[, -5], iris[, 5])

-------

Now, in the debugger, the built values of myDf are these:

myDf = {org.rosuda.REngine.REXPGenericVector at 562} "org.rosuda.REngine.REXPGenericVector at 17d99928+[5]?


? payload = {org.rosuda.REngine.RList at 566} size = 5
? 0 = {org.rosuda.REngine.REXPDouble at 570} "org.rosuda.REngine.REXPDouble at 6fffcba5[150]"
? 1 = {org.rosuda.REngine.REXPDouble at 571} "org.rosuda.REngine.REXPDouble at 34340fab[150]?
? 2 = {org.rosuda.REngine.REXPDouble at 572} "org.rosuda.REngine.REXPDouble at 2aafb23c[150]"
? 3 = {org.rosuda.REngine.REXPDouble at 573} "org.rosuda.REngine.REXPDouble at 2b80d80f[150]?
? 4 = {org.rosuda.REngine.REXPString at 574} "org.rosuda.REngine.REXPString at 3ab39c39[150]?

Does this help?

Please let me know what else I can try.

Thanks,

Sent from [ProtonMail](https://protonmail.com), Swiss-based encrypted email.

> -------- Original Message --------
> Subject: Re: [Rd] Cannot Compute Box's M (Three Days Trying...)
> Local Time: October 28, 2017 6:48 AM
> UTC Time: October 28, 2017 10:48 AM
> From: murdoch.duncan at gmail.com
> To: Morkus <morkus at protonmail.com>
> r-devel at r-project.org <r-devel at r-project.org>
>
> On 28/10/2017 6:26 AM, Morkus wrote:
>
>> I'm not sure what you mean. Could you please be more specific?
>>
>> You were trying to eval an expression that you constructed in Java. I
>> was suggesting that before you eval it, you print it.
>> If I print the string, I get: boxM(boxMVariable[, -5], boxMVariable[, 5])
>>
>> Right, that's what I was suggesting you do. Now you've fixed the syntax
>> error, that looks okay.
>>
>> If I'm reading these messages in the right order, your latest error is
>>
>> Error in [.data.frame(boxMVariable, , -5) : undefined columns selected
>>
>> The expression there is a funny way of printing boxMVariable[,-5]. So
>> now you need to figure out why it thinks you've selected undefined
>> columns. This is a little perplexing, because you're asking for all
>> columns except column 5, and that works whether or not you have a column
>
> -
>
> So I'd guess there's something weird about boxMVariable. You should ask
> R to print it, and to print str(boxMVariable), to make sure it's a
> regular dataframe containing 4 numeric columns and one factor or
> character column.
>
> Duncan Murdoch
>
>> From this code:
>> .
>> .
>> .
>> /// assign the data to a variable.
>> /rConnection.assign("boxMVariable", myDf);
>> /// create a string command with that variable name.
>> /String boxVariable = "boxM(boxMVariable[, -5], boxMVariable[, 5])";
>> System./out/.println(boxVariable);  // print the string? Not sure
>> what is meant.
>> Sorry if I didn't understand your suggestion.
>> Look forward to hearing back from you.
>> Thanks,
>> Sent from ProtonMail https://protonmail.com, Swiss-based encrypted email.
>>
>>> -------- Original Message --------
>>> Subject: Re: [Rd] Cannot Compute Box's M (Three Days Trying...)
>>> Local Time: October 27, 2017 6:09 PM
>>> UTC Time: October 27, 2017 10:09 PM
>>> From: murdoch.duncan at gmail.com
>>> To: Morkus morkus at protonmail.com, r-devel at r-project.org
>>> r-devel at r-project.org
>>> Just print the string you are asking to R to evaluate. It doesn't make
>>> any sense as an R expression. Fix that, and things will work.
>>> Duncan Murdoch
>>> On 27/10/2017 3:41 PM, Morkus via R-devel wrote:
>>>
>>> It can't be this hard, right? I really need a shove in the right
>>> direction here. Been spinning wheels for three days. Cannot get
>>> past the errors.
>>> I'm doing something wrong, obviously, since I can easily compute
>>> the Box's M right there in RStudio
>>> But I don't see what is wrong below with the coding equivalent.
>>> The entire code snippet is below. The code fails below on the call
>>> to the boxM statistic call.
>>> PLEASE HELP!!!
>>> Thanks in advance,
>>> ------------------------------------------------------------------------
>>>
>>> rConnection.eval("library('biotools')");
>>> String inputIris = "5.1,3.5,1.4,0.2,setosa\n" +
>>> "4.9,3,1.4,0.2,setosa\n" +
>>> "4.7,3.2,1.3,0.2,setosa\n" +
>>> "4.6,3.1,1.5,0.2,setosa\n" +
>>> "5,3.6,1.4,0.2,setosa\n" +
>>> "5.4,3.9,1.7,0.4,setosa\n" +
>>> "4.6,3.4,1.4,0.3,setosa\n" +
>>> "5,3.4,1.5,0.2,setosa\n" +
>>> "4.4,2.9,1.4,0.2,setosa\n" +
>>> "4.9,3.1,1.5,0.1,setosa\n" +
>>> "5.4,3.7,1.5,0.2,setosa\n" +
>>> "4.8,3.4,1.6,0.2,setosa\n" +
>>> "4.8,3,1.4,0.1,setosa\n" +
>>> "4.3,3,1.1,0.1,setosa\n" +
>>> "5.8,4,1.2,0.2,setosa\n" +
>>> "5.7,4.4,1.5,0.4,setosa\n" +
>>> "5.4,3.9,1.3,0.4,setosa\n" +
>>> "5.1,3.5,1.4,0.3,setosa\n" +
>>> "5.7,3.8,1.7,0.3,setosa\n" +
>>> "5.1,3.8,1.5,0.3,setosa\n" +
>>> "5.4,3.4,1.7,0.2,setosa\n" +
>>> "5.1,3.7,1.5,0.4,setosa\n" +
>>> "4.6,3.6,1,0.2,setosa\n" +
>>> "5.1,3.3,1.7,0.5,setosa\n" +
>>> "4.8,3.4,1.9,0.2,setosa\n" +
>>> "5,3,1.6,0.2,setosa\n" +
>>> "5,3.4,1.6,0.4,setosa\n" +
>>> "5.2,3.5,1.5,0.2,setosa\n" +
>>> "5.2,3.4,1.4,0.2,setosa\n" +
>>> "4.7,3.2,1.6,0.2,setosa\n" +
>>> "4.8,3.1,1.6,0.2,setosa\n" +
>>> "5.4,3.4,1.5,0.4,setosa\n" +
>>> "5.2,4.1,1.5,0.1,setosa\n" +
>>> "5.5,4.2,1.4,0.2,setosa\n" +
>>> "4.9,3.1,1.5,0.2,setosa\n" +
>>> "5,3.2,1.2,0.2,setosa\n" +
>>> "5.5,3.5,1.3,0.2,setosa\n" +
>>> "4.9,3.6,1.4,0.1,setosa\n" +
>>> "4.4,3,1.3,0.2,setosa\n" +
>>> "5.1,3.4,1.5,0.2,setosa\n" +
>>> "5,3.5,1.3,0.3,setosa\n" +
>>> "4.5,2.3,1.3,0.3,setosa\n" +
>>> "4.4,3.2,1.3,0.2,setosa\n" +
>>> "5,3.5,1.6,0.6,setosa\n" +
>>> "5.1,3.8,1.9,0.4,setosa\n" +
>>> "4.8,3,1.4,0.3,setosa\n" +
>>> "5.1,3.8,1.6,0.2,setosa\n" +
>>> "4.6,3.2,1.4,0.2,setosa\n" +
>>> "5.3,3.7,1.5,0.2,setosa\n" +
>>> "5,3.3,1.4,0.2,setosa\n" +
>>> "7,3.2,4.7,1.4,versicolor\n" +
>>> "6.4,3.2,4.5,1.5,versicolor\n" +
>>> "6.9,3.1,4.9,1.5,versicolor\n" +
>>> "5.5,2.3,4,1.3,versicolor\n" +
>>> "6.5,2.8,4.6,1.5,versicolor\n" +
>>> "5.7,2.8,4.5,1.3,versicolor\n" +
>>> "6.3,3.3,4.7,1.6,versicolor\n" +
>>> "4.9,2.4,3.3,1,versicolor\n" +
>>> "6.6,2.9,4.6,1.3,versicolor\n" +
>>> "5.2,2.7,3.9,1.4,versicolor\n" +
>>> "5,2,3.5,1,versicolor\n" +
>>> "5.9,3,4.2,1.5,versicolor\n" +
>>> "6,2.2,4,1,versicolor\n" +
>>> "6.1,2.9,4.7,1.4,versicolor\n" +
>>> "5.6,2.9,3.6,1.3,versicolor\n" +
>>> "6.7,3.1,4.4,1.4,versicolor\n" +
>>> "5.6,3,4.5,1.5,versicolor\n" +
>>> "5.8,2.7,4.1,1,versicolor\n" +
>>> "6.2,2.2,4.5,1.5,versicolor\n" +
>>> "5.6,2.5,3.9,1.1,versicolor\n" +
>>> "5.9,3.2,4.8,1.8,versicolor\n" +
>>> "6.1,2.8,4,1.3,versicolor\n" +
>>> "6.3,2.5,4.9,1.5,versicolor\n" +
>>> "6.1,2.8,4.7,1.2,versicolor\n" +
>>> "6.4,2.9,4.3,1.3,versicolor\n" +
>>> "6.6,3,4.4,1.4,versicolor\n" +
>>> "6.8,2.8,4.8,1.4,versicolor\n" +
>>> "6.7,3,5,1.7,versicolor\n" +
>>> "6,2.9,4.5,1.5,versicolor\n" +
>>> "5.7,2.6,3.5,1,versicolor\n" +
>>> "5.5,2.4,3.8,1.1,versicolor\n" +
>>> "5.5,2.4,3.7,1,versicolor\n" +
>>> "5.8,2.7,3.9,1.2,versicolor\n" +
>>> "6,2.7,5.1,1.6,versicolor\n" +
>>> "5.4,3,4.5,1.5,versicolor\n" +
>>> "6,3.4,4.5,1.6,versicolor\n" +
>>> "6.7,3.1,4.7,1.5,versicolor\n" +
>>> "6.3,2.3,4.4,1.3,versicolor\n" +
>>> "5.6,3,4.1,1.3,versicolor\n" +
>>> "5.5,2.5,4,1.3,versicolor\n" +
>>> "5.5,2.6,4.4,1.2,versicolor\n" +
>>> "6.1,3,4.6,1.4,versicolor\n" +
>>> "5.8,2.6,4,1.2,versicolor\n" +
>>> "5,2.3,3.3,1,versicolor\n" +
>>> "5.6,2.7,4.2,1.3,versicolor\n" +
>>> "5.7,3,4.2,1.2,versicolor\n" +
>>> "5.7,2.9,4.2,1.3,versicolor\n" +
>>> "6.2,2.9,4.3,1.3,versicolor\n" +
>>> "5.1,2.5,3,1.1,versicolor\n" +
>>> "5.7,2.8,4.1,1.3,versicolor\n" +
>>> "6.3,3.3,6,2.5,virginica\n" +
>>> "5.8,2.7,5.1,1.9,virginica\n" +
>>> "7.1,3,5.9,2.1,virginica\n" +
>>> "6.3,2.9,5.6,1.8,virginica\n" +
>>> "6.5,3,5.8,2.2,virginica\n" +
>>> "7.6,3,6.6,2.1,virginica\n" +
>>> "4.9,2.5,4.5,1.7,virginica\n" +
>>> "7.3,2.9,6.3,1.8,virginica\n" +
>>> "6.7,2.5,5.8,1.8,virginica\n" +
>>> "7.2,3.6,6.1,2.5,virginica\n" +
>>> "6.5,3.2,5.1,2,virginica\n" +
>>> "6.4,2.7,5.3,1.9,virginica\n" +
>>> "6.8,3,5.5,2.1,virginica\n" +
>>> "5.7,2.5,5,2,virginica\n" +
>>> "5.8,2.8,5.1,2.4,virginica\n" +
>>> "6.4,3.2,5.3,2.3,virginica\n" +
>>> "6.5,3,5.5,1.8,virginica\n" +
>>> "7.7,3.8,6.7,2.2,virginica\n" +
>>> "7.7,2.6,6.9,2.3,virginica\n" +
>>> "6,2.2,5,1.5,virginica\n" +
>>> "6.9,3.2,5.7,2.3,virginica\n" +
>>> "5.6,2.8,4.9,2,virginica\n" +
>>> "7.7,2.8,6.7,2,virginica\n" +
>>> "6.3,2.7,4.9,1.8,virginica\n" +
>>> "6.7,3.3,5.7,2.1,virginica\n" +
>>> "7.2,3.2,6,1.8,virginica\n" +
>>> "6.2,2.8,4.8,1.8,virginica\n" +
>>> "6.1,3,4.9,1.8,virginica\n" +
>>> "6.4,2.8,5.6,2.1,virginica\n" +
>>> "7.2,3,5.8,1.6,virginica\n" +
>>> "7.4,2.8,6.1,1.9,virginica\n" +
>>> "7.9,3.8,6.4,2,virginica\n" +
>>> "6.4,2.8,5.6,2.2,virginica\n" +
>>> "6.3,2.8,5.1,1.5,virginica\n" +
>>> "6.1,2.6,5.6,1.4,virginica\n" +
>>> "7.7,3,6.1,2.3,virginica\n" +
>>> "6.3,3.4,5.6,2.4,virginica\n" +
>>> "6.4,3.1,5.5,1.8,virginica\n" +
>>> "6,3,4.8,1.8,virginica\n" +
>>> "6.9,3.1,5.4,2.1,virginica\n" +
>>> "6.7,3.1,5.6,2.4,virginica\n" +
>>> "6.9,3.1,5.1,2.3,virginica\n" +
>>> "5.8,2.7,5.1,1.9,virginica\n" +
>>> "6.8,3.2,5.9,2.3,virginica\n" +
>>> "6.7,3.3,5.7,2.5,virginica\n" +
>>> "6.7,3,5.2,2.3,virginica\n" +
>>> "6.3,2.5,5,1.9,virginica\n" +
>>> "6.5,3,5.2,2,virginica\n" +
>>> "6.2,3.4,5.4,2.3,virginica\n" +
>>> "5.9,3,5.1,1.8,virginica\n";
>>> List tableRead = rConnection.eval(
>>> "read.csv(textConnection("" + inputIris + ""), header =
>>> FALSE)").asList(); // works!
>>> double[] d1 = ((REXPVector) ((RList) tableRead).get(0)).asDoubles();
>>> double[] d2 = ((REXPVector) ((RList) tableRead).get(1)).asDoubles();
>>> double[] d3 = ((REXPVector) ((RList) tableRead).get(2)).asDoubles();
>>> double[] d4 = ((REXPVector) ((RList) tableRead).get(3)).asDoubles();
>>> String[] d5 = ((REXPVector) ((RList) tableRead).get(4)).asStrings();
>>> // create data frame with data.REXP myDf =
>>> REXP.createDataFrame(new RList(
>>> new REXP[]
>>> {
>>> new REXPDouble(d1),
>>> new REXPDouble(d2),
>>> new REXPDouble(d3),
>>> new REXPDouble(d4),
>>> new REXPString(d5)
>>> }));
>>> // assign the data to a variable as was
>>> suggested.rConnection.assign("boxMVariable", myDf);
>>> // create a string command with that variable name.String
>>> boxVariable = "boxM(boxMVariable [,-5], boxMVariable[,5]";
>>> // try to execute the command...
>>> // FAILS with org.rosuda.REngine.Rserve.RserveException: eval
>>> failed, request status: R parser: input incomplete>>>> FAILS !
>>>>>>> REXP theBoxMResult = rConnection.eval(boxVariable); <<<<
>>> FAILS <<<<<
>>> sent from ProtonMail <https://protonmail.com>, Swiss-based
>>> encrypted email.
>>> [[alternative HTML version deleted]]
>>> ------------------------------------------------------------------------
>>>
>>> R-devel at r-project.org <mailto:R-devel at r-project.org> mailing list
>>> https://stat.ethz.ch/mailman/listinfo/r-devel
	[[alternative HTML version deleted]]


From murdoch.duncan at gmail.com  Sat Oct 28 13:31:41 2017
From: murdoch.duncan at gmail.com (Duncan Murdoch)
Date: Sat, 28 Oct 2017 07:31:41 -0400
Subject: [Rd] Cannot Compute Box's M (Three Days Trying...)
In-Reply-To: <rl0BFmHLQl4yweaOtoWaJJEScu0VetftcUuusTtgU1qjAdU-8pgrnohMfnzvJQZTY2jPjjraq6xgDDAlxfHHZunKbfGydZILJQ8xk4g0IWc=@protonmail.com>
References: <yNSrSEBSEthk1cJc2W6y3M50LXPWIRpFNyUtLE8yIZMb4guTLWuQi9XjWd4MHnt5vxOZAK1bO32QWqqM26bRU_XpiYnip5jDiyjKWUKIH7w=@protonmail.com>
 <3e5b4dc9-1b9a-4c63-a929-82a127856dbe@gmail.com>
 <P6V3IIqCfJ4SUFtNl9ML3Wmo2cvnL50vlzlUJdvRaAj106MjIojw5ITRt5ZQdkeOa9rnyS6HTxRgg7SUwmPY4CqGPbQFWqYEKCTr_yDVZdM=@protonmail.com>
 <abfb1feb-1da9-8c88-ceb5-98cef28ef406@gmail.com>
 <rl0BFmHLQl4yweaOtoWaJJEScu0VetftcUuusTtgU1qjAdU-8pgrnohMfnzvJQZTY2jPjjraq6xgDDAlxfHHZunKbfGydZILJQ8xk4g0IWc=@protonmail.com>
Message-ID: <ee03e49f-9c97-5e34-d12e-7623effcf062@gmail.com>

On 28/10/2017 7:12 AM, Morkus wrote:
> Thanks Duncan. Awesome ideas!
> 
> I think we're getting closer!
> 
> I tried what you suggested and got a possibly better error...
> .
> .
> .
> rConnection.assign("boxMVariable", myDf);
> 
> *String resultBV *= *"str(boxMVariable)"*; *// your suggestion.*
> 
> *RESULTING ERROR:*
> 
> *Error in format.default(nam.ob, width = max(ncn), justify = "left") :  
> invalid 'width' argument*
> 
> (No idea what this means).

That looks like an error occurring in the str() function.  I've never 
seen such a think in a regular R session, so I would guess that either 
your boxMVariable object is set up in a weird way that is confusing 
str(), or your R session in Java is messed up.

This is likely to be pretty hard to debug.  As a general strategy, I'd 
try to find out exactly what is in boxMVariable first.  Since str() 
doesn't work, try printing things like

head(boxMVariable)
class(boxMVariable)
names(boxMVariable)
ncol(boxMVariable)
nrow(boxMVariable)
typeof(boxMVariable)
for (i in 1:5)
   print(typeof(boxMVariable[[i]]))

etc.

Make sure the values match what you see in a regular R session:

 > boxMVariable <- iris
 >
 > head(boxMVariable)
   Sepal.Length Sepal.Width Petal.Length Petal.Width Species
1          5.1         3.5          1.4         0.2  setosa
2          4.9         3.0          1.4         0.2  setosa
3          4.7         3.2          1.3         0.2  setosa
4          4.6         3.1          1.5         0.2  setosa
5          5.0         3.6          1.4         0.2  setosa
6          5.4         3.9          1.7         0.4  setosa
 > class(boxMVariable)
[1] "data.frame"
 > names(boxMVariable)
[1] "Sepal.Length" "Sepal.Width"  "Petal.Length" "Petal.Width" 
"Species"
 > ncol(boxMVariable)
[1] 5
 > nrow(boxMVariable)
[1] 150
 > typeof(boxMVariable)
[1] "list"
 > for (i in 1:5)
+   print(typeof(boxMVariable[[i]]))
[1] "double"
[1] "double"
[1] "double"
[1] "double"
[1] "integer"

> 
> For testing, I'm using the same standard IRIS dataset as the Box's M 
> documentation shows in biotools:
> 
> Examples
> 
> data(iris)
> *boxM(iris[, -5], iris[, 5])*
> 
> *-------*
> **
> Now, in the debugger, the built values of myDf are these:
> 
> *myDf* = {org.rosuda.REngine.REXPGenericVector at 562} 
> "org.rosuda.REngine.*REXPGenericVector*@17d99928+[5]?

> 
> ? payload = {org.rosuda.REngine.*RList*@566} size = 5
> ? 0 = {org.rosuda.REngine.REXPDouble at 570} 
> "org.rosuda.REngine.*REXPDouble*@6fffcba5[150]"
> ? 1 = {org.rosuda.REngine.REXPDouble at 571} 
> "org.rosuda.REngine.*REXPDouble*@34340fab[150]?
> ? 2 = {org.rosuda.REngine.REXPDouble at 572} 
> "org.rosuda.REngine.*REXPDouble*@2aafb23c[150]"
> ? 3 = {org.rosuda.REngine.REXPDouble at 573} 
> "org.rosuda.REngine.*REXPDouble*@2b80d80f[150]?
> ? 4 = {org.rosuda.REngine.REXPString at 574} 
> "org.rosuda.REngine.*REXPString*@3ab39c39[150]?
> 
> Does this help?
> 
> Please let me know what else I can try.
> 
> Thanks,
> 
> 
> Sent from ProtonMail <https://protonmail.com>, Swiss-based encrypted email.
> 
> 
>> -------- Original Message --------
>> Subject: Re: [Rd] Cannot Compute Box's M (Three Days Trying...)
>> Local Time: October 28, 2017 6:48 AM
>> UTC Time: October 28, 2017 10:48 AM
>> From: murdoch.duncan at gmail.com
>> To: Morkus <morkus at protonmail.com>
>> r-devel at r-project.org <r-devel at r-project.org>
>>
>> On 28/10/2017 6:26 AM, Morkus wrote:
>>
>>     I'm not sure what you mean. Could you please be more specific?
>>
>>     You were trying to eval an expression that you constructed in Java. I
>>     was suggesting that before you eval it, you print it.
>>     If I print the string, I get: /boxM(boxMVariable[, -5],
>>     boxMVariable[, 5])/
>>
>>     Right, that's what I was suggesting you do. Now you've fixed the
>>     syntax
>>     error, that looks okay.
>>
>>     If I'm reading these messages in the right order, your latest error is
>>
>>     Error in |[.data.frame|(boxMVariable, , -5) : undefined columns
>>     selected
>>
>>     The expression there is a funny way of printing boxMVariable[,-5]. So
>>     now you need to figure out why it thinks you've selected undefined
>>     columns. This is a little perplexing, because you're asking for all
>>     columns except column 5, and that works whether or not you have a
>>     column
>>
>> 5.
>>
>>
>>
>> So I'd guess there's something weird about boxMVariable. You should ask
>> R to print it, and to print str(boxMVariable), to make sure it's a
>> regular dataframe containing 4 numeric columns and one factor or
>> character column.
>>
>> Duncan Murdoch
>>
>>     From this code:
>>     .
>>     .
>>     .
>>     /// assign the data to a variable.
>>     /rConnection.assign("boxMVariable", myDf);
>>     /// create a string command with that variable name.
>>     /String boxVariable = "boxM(boxMVariable[, -5], boxMVariable[, 5])";
>>     /System/./out/./println/(/boxVariable/);? // print the string? Not
>>     sure
>>     what is meant.
>>     Sorry if I didn't understand your suggestion.
>>     Look forward to hearing back from you.
>>     Thanks,
>>     Sent from ProtonMail https://protonmail.com, Swiss-based encrypted
>>     email.
>>
>>         -------- Original Message --------
>>         Subject: Re: [Rd] Cannot Compute Box's M (Three Days Trying...)
>>         Local Time: October 27, 2017 6:09 PM
>>         UTC Time: October 27, 2017 10:09 PM
>>         From: murdoch.duncan at gmail.com <mailto:murdoch.duncan at gmail.com>
>>         To: Morkus morkus at protonmail.com
>>         <mailto:morkus at protonmail.com>, r-devel at r-project.org
>>         <mailto:r-devel at r-project.org>
>>         r-devel at r-project.org <mailto:r-devel at r-project.org>
>>         Just print the string you are asking to R to evaluate. It
>>         doesn't make
>>         any sense as an R expression. Fix that, and things will work.
>>         Duncan Murdoch
>>         On 27/10/2017 3:41 PM, Morkus via R-devel wrote:
>>
>>         |It can't be this hard, right? I really need a shove in the
>>         right direction here. Been spinning wheels for three days.
>>         Cannot get past the errors. I'm doing something wrong,
>>         obviously, since I can easily compute the Box's M right there
>>         in RStudio But I don't see what is wrong below with the coding
>>         equivalent. The entire code snippet is below. The code fails
>>         below on the call to the boxM statistic call. PLEASE HELP!!!
>>         Thanks in advance,
>>         ------------------------------------------------------------------------
>>         rConnection.eval("library('biotools')"); String inputIris =
>>         "5.1,3.5,1.4,0.2,setosa\n" + "4.9,3,1.4,0.2,setosa\n" +
>>         "4.7,3.2,1.3,0.2,setosa\n" + "4.6,3.1,1.5,0.2,setosa\n" +
>>         "5,3.6,1.4,0.2,setosa\n" + "5.4,3.9,1.7,0.4,setosa\n" +
>>         "4.6,3.4,1.4,0.3,setosa\n" + "5,3.4,1.5,0.2,setosa\n" +
>>         "4.4,2.9,1.4,0.2,setosa\n" + "4.9,3.1,1.5,0.1,setosa\n" +
>>         "5.4,3.7,1.5,0.2,setosa\n" + "4.8,3.4,1.6,0.2,setosa\n" +
>>         "4.8,3,1.4,0.1,setosa\n" + "4.3,3,1.1,0.1,setosa\n" +
>>         "5.8,4,1.2,0.2,setosa\n" + "5.7,4.4,1.5,0.4,setosa\n" +
>>         "5.4,3.9,1.3,0.4,setosa\n" + "5.1,3.5,1.4,0.3,setosa\n" +
>>         "5.7,3.8,1.7,0.3,setosa\n" + "5.1,3.8,1.5,0.3,setosa\n" +
>>         "5.4,3.4,1.7,0.2,setosa\n" + "5.1,3.7,1.5,0.4,setosa\n" +
>>         "4.6,3.6,1,0.2,setosa\n" + "5.1,3.3,1.7,0.5,setosa\n" +
>>         "4.8,3.4,1.9,0.2,setosa\n" + "5,3,1.6,0.2,setosa\n" +
>>         "5,3.4,1.6,0.4,setosa\n" + "5.2,3.5,1.5,0.2,setosa\n" +
>>         "5.2,3.4,1.4,0.2,setosa\n" + "4.7,3.2,1.6,0.2,setosa\n" +
>>         "4.8,3.1,1.6,0.2,setosa\n" + "5.4,3.4,1.5,0.4,setosa\n" +
>>         "5.2,4.1,1.5,0.1,setosa\n" + "5.5,4.2,1.4,0.2,setosa\n" +
>>         "4.9,3.1,1.5,0.2,setosa\n" + "5,3.2,1.2,0.2,setosa\n" +
>>         "5.5,3.5,1.3,0.2,setosa\n" + "4.9,3.6,1.4,0.1,setosa\n" +
>>         "4.4,3,1.3,0.2,setosa\n" + "5.1,3.4,1.5,0.2,setosa\n" +
>>         "5,3.5,1.3,0.3,setosa\n" + "4.5,2.3,1.3,0.3,setosa\n" +
>>         "4.4,3.2,1.3,0.2,setosa\n" + "5,3.5,1.6,0.6,setosa\n" +
>>         "5.1,3.8,1.9,0.4,setosa\n" + "4.8,3,1.4,0.3,setosa\n" +
>>         "5.1,3.8,1.6,0.2,setosa\n" + "4.6,3.2,1.4,0.2,setosa\n" +
>>         "5.3,3.7,1.5,0.2,setosa\n" + "5,3.3,1.4,0.2,setosa\n" +
>>         "7,3.2,4.7,1.4,versicolor\n" + "6.4,3.2,4.5,1.5,versicolor\n"
>>         + "6.9,3.1,4.9,1.5,versicolor\n" +
>>         "5.5,2.3,4,1.3,versicolor\n" + "6.5,2.8,4.6,1.5,versicolor\n"
>>         + "5.7,2.8,4.5,1.3,versicolor\n" +
>>         "6.3,3.3,4.7,1.6,versicolor\n" + "4.9,2.4,3.3,1,versicolor\n"
>>         + "6.6,2.9,4.6,1.3,versicolor\n" +
>>         "5.2,2.7,3.9,1.4,versicolor\n" + "5,2,3.5,1,versicolor\n" +
>>         "5.9,3,4.2,1.5,versicolor\n" + "6,2.2,4,1,versicolor\n" +
>>         "6.1,2.9,4.7,1.4,versicolor\n" +
>>         "5.6,2.9,3.6,1.3,versicolor\n" +
>>         "6.7,3.1,4.4,1.4,versicolor\n" + "5.6,3,4.5,1.5,versicolor\n"
>>         + "5.8,2.7,4.1,1,versicolor\n" +
>>         "6.2,2.2,4.5,1.5,versicolor\n" +
>>         "5.6,2.5,3.9,1.1,versicolor\n" +
>>         "5.9,3.2,4.8,1.8,versicolor\n" + "6.1,2.8,4,1.3,versicolor\n"
>>         + "6.3,2.5,4.9,1.5,versicolor\n" +
>>         "6.1,2.8,4.7,1.2,versicolor\n" +
>>         "6.4,2.9,4.3,1.3,versicolor\n" + "6.6,3,4.4,1.4,versicolor\n"
>>         + "6.8,2.8,4.8,1.4,versicolor\n" + "6.7,3,5,1.7,versicolor\n"
>>         + "6,2.9,4.5,1.5,versicolor\n" + "5.7,2.6,3.5,1,versicolor\n"
>>         + "5.5,2.4,3.8,1.1,versicolor\n" +
>>         "5.5,2.4,3.7,1,versicolor\n" + "5.8,2.7,3.9,1.2,versicolor\n"
>>         + "6,2.7,5.1,1.6,versicolor\n" + "5.4,3,4.5,1.5,versicolor\n"
>>         + "6,3.4,4.5,1.6,versicolor\n" +
>>         "6.7,3.1,4.7,1.5,versicolor\n" +
>>         "6.3,2.3,4.4,1.3,versicolor\n" + "5.6,3,4.1,1.3,versicolor\n"
>>         + "5.5,2.5,4,1.3,versicolor\n" +
>>         "5.5,2.6,4.4,1.2,versicolor\n" + "6.1,3,4.6,1.4,versicolor\n"
>>         + "5.8,2.6,4,1.2,versicolor\n" + "5,2.3,3.3,1,versicolor\n" +
>>         "5.6,2.7,4.2,1.3,versicolor\n" + "5.7,3,4.2,1.2,versicolor\n"
>>         + "5.7,2.9,4.2,1.3,versicolor\n" +
>>         "6.2,2.9,4.3,1.3,versicolor\n" + "5.1,2.5,3,1.1,versicolor\n"
>>         + "5.7,2.8,4.1,1.3,versicolor\n" + "6.3,3.3,6,2.5,virginica\n"
>>         + "5.8,2.7,5.1,1.9,virginica\n" + "7.1,3,5.9,2.1,virginica\n"
>>         + "6.3,2.9,5.6,1.8,virginica\n" + "6.5,3,5.8,2.2,virginica\n"
>>         + "7.6,3,6.6,2.1,virginica\n" + "4.9,2.5,4.5,1.7,virginica\n"
>>         + "7.3,2.9,6.3,1.8,virginica\n" +
>>         "6.7,2.5,5.8,1.8,virginica\n" + "7.2,3.6,6.1,2.5,virginica\n"
>>         + "6.5,3.2,5.1,2,virginica\n" + "6.4,2.7,5.3,1.9,virginica\n"
>>         + "6.8,3,5.5,2.1,virginica\n" + "5.7,2.5,5,2,virginica\n" +
>>         "5.8,2.8,5.1,2.4,virginica\n" + "6.4,3.2,5.3,2.3,virginica\n"
>>         + "6.5,3,5.5,1.8,virginica\n" + "7.7,3.8,6.7,2.2,virginica\n"
>>         + "7.7,2.6,6.9,2.3,virginica\n" + "6,2.2,5,1.5,virginica\n" +
>>         "6.9,3.2,5.7,2.3,virginica\n" + "5.6,2.8,4.9,2,virginica\n" +
>>         "7.7,2.8,6.7,2,virginica\n" + "6.3,2.7,4.9,1.8,virginica\n" +
>>         "6.7,3.3,5.7,2.1,virginica\n" + "7.2,3.2,6,1.8,virginica\n" +
>>         "6.2,2.8,4.8,1.8,virginica\n" + "6.1,3,4.9,1.8,virginica\n" +
>>         "6.4,2.8,5.6,2.1,virginica\n" + "7.2,3,5.8,1.6,virginica\n" +
>>         "7.4,2.8,6.1,1.9,virginica\n" + "7.9,3.8,6.4,2,virginica\n" +
>>         "6.4,2.8,5.6,2.2,virginica\n" + "6.3,2.8,5.1,1.5,virginica\n"
>>         + "6.1,2.6,5.6,1.4,virginica\n" + "7.7,3,6.1,2.3,virginica\n"
>>         + "6.3,3.4,5.6,2.4,virginica\n" +
>>         "6.4,3.1,5.5,1.8,virginica\n" + "6,3,4.8,1.8,virginica\n" +
>>         "6.9,3.1,5.4,2.1,virginica\n" + "6.7,3.1,5.6,2.4,virginica\n"
>>         + "6.9,3.1,5.1,2.3,virginica\n" +
>>         "5.8,2.7,5.1,1.9,virginica\n" + "6.8,3.2,5.9,2.3,virginica\n"
>>         + "6.7,3.3,5.7,2.5,virginica\n" + "6.7,3,5.2,2.3,virginica\n"
>>         + "6.3,2.5,5,1.9,virginica\n" + "6.5,3,5.2,2,virginica\n" +
>>         "6.2,3.4,5.4,2.3,virginica\n" + "5.9,3,5.1,1.8,virginica\n";
>>         List tableRead = rConnection.eval( "read.csv(textConnection(""
>>         + inputIris + ""), header = FALSE)").asList(); // works!
>>         double[] d1 = ((REXPVector) ((RList)
>>         tableRead).get(0)).asDoubles(); double[] d2 = ((REXPVector)
>>         ((RList) tableRead).get(1)).asDoubles(); double[] d3 =
>>         ((REXPVector) ((RList) tableRead).get(2)).asDoubles();
>>         double[] d4 = ((REXPVector) ((RList)
>>         tableRead).get(3)).asDoubles(); String[] d5 = ((REXPVector)
>>         ((RList) tableRead).get(4)).asStrings(); // create data frame
>>         with data.REXP myDf = REXP.createDataFrame(new RList( new
>>         REXP[] { new REXPDouble(d1), new REXPDouble(d2), new
>>         REXPDouble(d3), new REXPDouble(d4), new REXPString(d5) })); //
>>         assign the data to a variable as was
>>         suggested.rConnection.assign("boxMVariable", myDf); // create
>>         a string command with that variable name.String boxVariable =
>>         "boxM(boxMVariable [,-5], boxMVariable[,5]"; // try to execute
>>         the command... // FAILS with
>>         org.rosuda.REngine.Rserve.RserveException: eval failed,
>>         request status: R parser: input incomplete>>>> FAILS ! >>>>
>>         REXP theBoxMResult = rConnection.eval(boxVariable); <<<< FAILS
>>         <<<<< sent from ProtonMail <https://protonmail.com>,
>>         Swiss-based encrypted email. [[alternative HTML version
>>         deleted]]
>>         ------------------------------------------------------------------------
>>         R-devel at r-project.org <mailto:R-devel at r-project.org> mailing
>>         list https://stat.ethz.ch/mailman/listinfo/r-devel |
>>
>>
>


From morkus at protonmail.com  Sat Oct 28 14:59:51 2017
From: morkus at protonmail.com (Morkus)
Date: Sat, 28 Oct 2017 08:59:51 -0400
Subject: [Rd] Cannot Compute Box's M (Three Days Trying...)
In-Reply-To: <ee03e49f-9c97-5e34-d12e-7623effcf062@gmail.com>
References: <yNSrSEBSEthk1cJc2W6y3M50LXPWIRpFNyUtLE8yIZMb4guTLWuQi9XjWd4MHnt5vxOZAK1bO32QWqqM26bRU_XpiYnip5jDiyjKWUKIH7w=@protonmail.com>
 <3e5b4dc9-1b9a-4c63-a929-82a127856dbe@gmail.com>
 <P6V3IIqCfJ4SUFtNl9ML3Wmo2cvnL50vlzlUJdvRaAj106MjIojw5ITRt5ZQdkeOa9rnyS6HTxRgg7SUwmPY4CqGPbQFWqYEKCTr_yDVZdM=@protonmail.com>
 <abfb1feb-1da9-8c88-ceb5-98cef28ef406@gmail.com>
 <rl0BFmHLQl4yweaOtoWaJJEScu0VetftcUuusTtgU1qjAdU-8pgrnohMfnzvJQZTY2jPjjraq6xgDDAlxfHHZunKbfGydZILJQ8xk4g0IWc=@protonmail.com>
 <ee03e49f-9c97-5e34-d12e-7623effcf062@gmail.com>
Message-ID: <9BD27QZMzsNhYUSXQNpmzB6M1_eswp75Vyk6vgZ67jKV3Mf8H3ji_fE_YVPRSOl9Pb7XZDy1nfJCHyqt5J8hzVCzg9JxsJ-piLcIeu_7JZ4=@protonmail.com>

Hey Duncan,

Hard to debug? That's an understatement. Eyes bleeding....

In any case, I tried all your suggestions. To get "integer" for the final column, I had to change the code to get integers instead of strings.

double[] d1 = ((REXPVector) ((RList) tableRead).get(0)).asDoubles();
double[] d2 = ((REXPVector) ((RList) tableRead).get(1)).asDoubles();
double[] d3 = ((REXPVector) ((RList) tableRead).get(2)).asDoubles();
double[] d4 = ((REXPVector) ((RList) tableRead).get(3)).asDoubles();
int[] d5 = ((REXPVector) ((RList) tableRead).get(4)).asIntegers();

// create data frame with data.REXP myDf = REXP.createDataFrame(new RList(
new REXP[]
{
new REXPDouble(d1),
new REXPDouble(d2),
new REXPDouble(d3),
new REXPDouble(d4),
new REXPInteger(d5)
}));

Here are the results from the eval debug code.

head(boxMVariable)  ? Gives the high level 5 objects.

typeof(boxMVariable): ?list?

class(boxMVariable) : ?data.frame?

names(boxMVariable)  ? String object returned (couldn't evaluate it)

ncol(boxMVariable)  - 5

nrow(boxMVariable)   - 150

typeof(boxMVariable)

for (i in 1:5) print(typeof(boxMVariable[[i]]))
I get:
1 ?> double
2 ?> double
3  ?> double
4 ?> double
5 ->  integer

Is this problem "debug-proof"?

Does anyone out there actually use Java and R?

Sigh...

Sent from [ProtonMail](https://protonmail.com), Swiss-based encrypted email.

> -------- Original Message --------
> Subject: Re: [Rd] Cannot Compute Box's M (Three Days Trying...)
> Local Time: October 28, 2017 7:31 AM
> UTC Time: October 28, 2017 11:31 AM
> From: murdoch.duncan at gmail.com
> To: Morkus <morkus at protonmail.com>
> r-devel at r-project.org <r-devel at r-project.org>
>
> On 28/10/2017 7:12 AM, Morkus wrote:
>
>> Thanks Duncan. Awesome ideas!
>> I think we're getting closer!
>> I tried what you suggested and got a possibly better error...
>> .
>> .
>> .
>> rConnection.assign("boxMVariable", myDf);
>> *String resultBV *= "str(boxMVariable)"; // your suggestion.
>> RESULTING ERROR:
>> Error in format.default(nam.ob, width = max(ncn), justify = "left") :
>> invalid 'width' argument
>> (No idea what this means).
>>
>> That looks like an error occurring in the str() function. I've never
>> seen such a think in a regular R session, so I would guess that either
>> your boxMVariable object is set up in a weird way that is confusing
>> str(), or your R session in Java is messed up.
>>
>> This is likely to be pretty hard to debug. As a general strategy, I'd
>> try to find out exactly what is in boxMVariable first. Since str()
>> doesn't work, try printing things like
>>
>> head(boxMVariable)
>> class(boxMVariable)
>> names(boxMVariable)
>> ncol(boxMVariable)
>> nrow(boxMVariable)
>> typeof(boxMVariable)
>> for (i in 1:5)
>> print(typeof(boxMVariable[[i]]))
>>
>> etc.
>>
>> Make sure the values match what you see in a regular R session:
>>
>> boxMVariable <- iris
>> head(boxMVariable)
>> Sepal.Length Sepal.Width Petal.Length Petal.Width Species
>> 1 5.1 3.5 1.4 0.2 setosa
>> 2 4.9 3.0 1.4 0.2 setosa
>> 3 4.7 3.2 1.3 0.2 setosa
>> 4 4.6 3.1 1.5 0.2 setosa
>> 5 5.0 3.6 1.4 0.2 setosa
>> 6 5.4 3.9 1.7 0.4 setosa
>> class(boxMVariable)
>> [1] "data.frame"
>> names(boxMVariable)
>> [1] "Sepal.Length" "Sepal.Width" "Petal.Length" "Petal.Width"
>> "Species"
>> ncol(boxMVariable)
>> [1] 5
>> nrow(boxMVariable)
>> [1] 150
>> typeof(boxMVariable)
>> [1] "list"
>> for (i in 1:5)
>
> - print(typeof(boxMVariable[[i]]))
> [1] "double"
> [1] "double"
> [1] "double"
> [1] "double"
> [1] "integer"
>
>> For testing, I'm using the same standard IRIS dataset as the Box's M
>> documentation shows in biotools:
>> Examples
>> data(iris)
>> boxM(iris[, -5], iris[, 5])
>> -------
>> **
>> Now, in the debugger, the built values of myDf are these:
>> myDf = {org.rosuda.REngine.REXPGenericVector at 562}
>> "org.rosuda.REngine.REXPGenericVector at 17d99928+[5]?
>
>> ? payload = {org.rosuda.REngine.RList at 566} size = 5
>> ? 0 = {org.rosuda.REngine.REXPDouble at 570}
>> "org.rosuda.REngine.REXPDouble at 6fffcba5[150]"
>> ? 1 = {org.rosuda.REngine.REXPDouble at 571}
>> "org.rosuda.REngine.REXPDouble at 34340fab[150]?
>> ? 2 = {org.rosuda.REngine.REXPDouble at 572}
>> "org.rosuda.REngine.REXPDouble at 2aafb23c[150]"
>> ? 3 = {org.rosuda.REngine.REXPDouble at 573}
>> "org.rosuda.REngine.REXPDouble at 2b80d80f[150]?
>> ? 4 = {org.rosuda.REngine.REXPString at 574}
>> "org.rosuda.REngine.REXPString at 3ab39c39[150]?
>> Does this help?
>> Please let me know what else I can try.
>> Thanks,
>> Sent from ProtonMail https://protonmail.com, Swiss-based encrypted email.
>>
>>> -------- Original Message --------
>>> Subject: Re: [Rd] Cannot Compute Box's M (Three Days Trying...)
>>> Local Time: October 28, 2017 6:48 AM
>>> UTC Time: October 28, 2017 10:48 AM
>>> From: murdoch.duncan at gmail.com
>>> To: Morkus morkus at protonmail.com
>>> r-devel at r-project.org r-devel at r-project.org
>>> On 28/10/2017 6:26 AM, Morkus wrote:
>>>
>>> I'm not sure what you mean. Could you please be more specific?
>>>
>>> You were trying to eval an expression that you constructed in Java. I
>>> was suggesting that before you eval it, you print it.
>>> If I print the string, I get: /boxM(boxMVariable[, -5],
>>> boxMVariable[, 5])/
>>>
>>> Right, that's what I was suggesting you do. Now you've fixed the
>>> syntax
>>> error, that looks okay.
>>>
>>> If I'm reading these messages in the right order, your latest error is
>>>
>>> Error in |[.data.frame|(boxMVariable, , -5) : undefined columns
>>> selected
>>>
>>> The expression there is a funny way of printing boxMVariable[,-5]. So
>>> now you need to figure out why it thinks you've selected undefined
>>> columns. This is a little perplexing, because you're asking for all
>>> columns except column 5, and that works whether or not you have a
>>> column
>>>
>>> -
>>>
>>> So I'd guess there's something weird about boxMVariable. You should ask
>>> R to print it, and to print str(boxMVariable), to make sure it's a
>>> regular dataframe containing 4 numeric columns and one factor or
>>> character column.
>>> Duncan Murdoch
>>>
>>> From this code:
>>> .
>>> .
>>> .
>>> /// assign the data to a variable.
>>> /rConnection.assign("boxMVariable", myDf);
>>> /// create a string command with that variable name.
>>> /String boxVariable = "boxM(boxMVariable[, -5], boxMVariable[, 5])";
>>> /System/./out/./println/(/boxVariable/);  // print the string? Not
>>> sure
>>> what is meant.
>>> Sorry if I didn't understand your suggestion.
>>> Look forward to hearing back from you.
>>> Thanks,
>>> Sent from ProtonMail https://protonmail.com, Swiss-based encrypted
>>> email.
>>>
>>>     -------- Original Message --------
>>>     Subject: Re: [Rd] Cannot Compute Box's M (Three Days Trying...)
>>>     Local Time: October 27, 2017 6:09 PM
>>>     UTC Time: October 27, 2017 10:09 PM
>>>     From: murdoch.duncan at gmail.com <mailto:murdoch.duncan at gmail.com>
>>>     To: Morkus morkus at protonmail.com
>>>     <mailto:morkus at protonmail.com>, r-devel at r-project.org
>>>     <mailto:r-devel at r-project.org>
>>>     r-devel at r-project.org <mailto:r-devel at r-project.org>
>>>     Just print the string you are asking to R to evaluate. It
>>>     doesn't make
>>>     any sense as an R expression. Fix that, and things will work.
>>>     Duncan Murdoch
>>>     On 27/10/2017 3:41 PM, Morkus via R-devel wrote:
>>>
>>>     |It can't be this hard, right? I really need a shove in the
>>>     right direction here. Been spinning wheels for three days.
>>>     Cannot get past the errors. I'm doing something wrong,
>>>     obviously, since I can easily compute the Box's M right there
>>>     in RStudio But I don't see what is wrong below with the coding
>>>     equivalent. The entire code snippet is below. The code fails
>>>     below on the call to the boxM statistic call. PLEASE HELP!!!
>>>     Thanks in advance,
>>>     ------------------------------------------------------------------------
>>>     rConnection.eval("library('biotools')"); String inputIris =
>>>     "5.1,3.5,1.4,0.2,setosa\n" + "4.9,3,1.4,0.2,setosa\n" +
>>>     "4.7,3.2,1.3,0.2,setosa\n" + "4.6,3.1,1.5,0.2,setosa\n" +
>>>     "5,3.6,1.4,0.2,setosa\n" + "5.4,3.9,1.7,0.4,setosa\n" +
>>>     "4.6,3.4,1.4,0.3,setosa\n" + "5,3.4,1.5,0.2,setosa\n" +
>>>     "4.4,2.9,1.4,0.2,setosa\n" + "4.9,3.1,1.5,0.1,setosa\n" +
>>>     "5.4,3.7,1.5,0.2,setosa\n" + "4.8,3.4,1.6,0.2,setosa\n" +
>>>     "4.8,3,1.4,0.1,setosa\n" + "4.3,3,1.1,0.1,setosa\n" +
>>>     "5.8,4,1.2,0.2,setosa\n" + "5.7,4.4,1.5,0.4,setosa\n" +
>>>     "5.4,3.9,1.3,0.4,setosa\n" + "5.1,3.5,1.4,0.3,setosa\n" +
>>>     "5.7,3.8,1.7,0.3,setosa\n" + "5.1,3.8,1.5,0.3,setosa\n" +
>>>     "5.4,3.4,1.7,0.2,setosa\n" + "5.1,3.7,1.5,0.4,setosa\n" +
>>>     "4.6,3.6,1,0.2,setosa\n" + "5.1,3.3,1.7,0.5,setosa\n" +
>>>     "4.8,3.4,1.9,0.2,setosa\n" + "5,3,1.6,0.2,setosa\n" +
>>>     "5,3.4,1.6,0.4,setosa\n" + "5.2,3.5,1.5,0.2,setosa\n" +
>>>     "5.2,3.4,1.4,0.2,setosa\n" + "4.7,3.2,1.6,0.2,setosa\n" +
>>>     "4.8,3.1,1.6,0.2,setosa\n" + "5.4,3.4,1.5,0.4,setosa\n" +
>>>     "5.2,4.1,1.5,0.1,setosa\n" + "5.5,4.2,1.4,0.2,setosa\n" +
>>>     "4.9,3.1,1.5,0.2,setosa\n" + "5,3.2,1.2,0.2,setosa\n" +
>>>     "5.5,3.5,1.3,0.2,setosa\n" + "4.9,3.6,1.4,0.1,setosa\n" +
>>>     "4.4,3,1.3,0.2,setosa\n" + "5.1,3.4,1.5,0.2,setosa\n" +
>>>     "5,3.5,1.3,0.3,setosa\n" + "4.5,2.3,1.3,0.3,setosa\n" +
>>>     "4.4,3.2,1.3,0.2,setosa\n" + "5,3.5,1.6,0.6,setosa\n" +
>>>     "5.1,3.8,1.9,0.4,setosa\n" + "4.8,3,1.4,0.3,setosa\n" +
>>>     "5.1,3.8,1.6,0.2,setosa\n" + "4.6,3.2,1.4,0.2,setosa\n" +
>>>     "5.3,3.7,1.5,0.2,setosa\n" + "5,3.3,1.4,0.2,setosa\n" +
>>>     "7,3.2,4.7,1.4,versicolor\n" + "6.4,3.2,4.5,1.5,versicolor\n"
>>>     + "6.9,3.1,4.9,1.5,versicolor\n" +
>>>     "5.5,2.3,4,1.3,versicolor\n" + "6.5,2.8,4.6,1.5,versicolor\n"
>>>     + "5.7,2.8,4.5,1.3,versicolor\n" +
>>>     "6.3,3.3,4.7,1.6,versicolor\n" + "4.9,2.4,3.3,1,versicolor\n"
>>>     + "6.6,2.9,4.6,1.3,versicolor\n" +
>>>     "5.2,2.7,3.9,1.4,versicolor\n" + "5,2,3.5,1,versicolor\n" +
>>>     "5.9,3,4.2,1.5,versicolor\n" + "6,2.2,4,1,versicolor\n" +
>>>     "6.1,2.9,4.7,1.4,versicolor\n" +
>>>     "5.6,2.9,3.6,1.3,versicolor\n" +
>>>     "6.7,3.1,4.4,1.4,versicolor\n" + "5.6,3,4.5,1.5,versicolor\n"
>>>     + "5.8,2.7,4.1,1,versicolor\n" +
>>>     "6.2,2.2,4.5,1.5,versicolor\n" +
>>>     "5.6,2.5,3.9,1.1,versicolor\n" +
>>>     "5.9,3.2,4.8,1.8,versicolor\n" + "6.1,2.8,4,1.3,versicolor\n"
>>>     + "6.3,2.5,4.9,1.5,versicolor\n" +
>>>     "6.1,2.8,4.7,1.2,versicolor\n" +
>>>     "6.4,2.9,4.3,1.3,versicolor\n" + "6.6,3,4.4,1.4,versicolor\n"
>>>     + "6.8,2.8,4.8,1.4,versicolor\n" + "6.7,3,5,1.7,versicolor\n"
>>>     + "6,2.9,4.5,1.5,versicolor\n" + "5.7,2.6,3.5,1,versicolor\n"
>>>     + "5.5,2.4,3.8,1.1,versicolor\n" +
>>>     "5.5,2.4,3.7,1,versicolor\n" + "5.8,2.7,3.9,1.2,versicolor\n"
>>>     + "6,2.7,5.1,1.6,versicolor\n" + "5.4,3,4.5,1.5,versicolor\n"
>>>     + "6,3.4,4.5,1.6,versicolor\n" +
>>>     "6.7,3.1,4.7,1.5,versicolor\n" +
>>>     "6.3,2.3,4.4,1.3,versicolor\n" + "5.6,3,4.1,1.3,versicolor\n"
>>>     + "5.5,2.5,4,1.3,versicolor\n" +
>>>     "5.5,2.6,4.4,1.2,versicolor\n" + "6.1,3,4.6,1.4,versicolor\n"
>>>     + "5.8,2.6,4,1.2,versicolor\n" + "5,2.3,3.3,1,versicolor\n" +
>>>     "5.6,2.7,4.2,1.3,versicolor\n" + "5.7,3,4.2,1.2,versicolor\n"
>>>     + "5.7,2.9,4.2,1.3,versicolor\n" +
>>>     "6.2,2.9,4.3,1.3,versicolor\n" + "5.1,2.5,3,1.1,versicolor\n"
>>>     + "5.7,2.8,4.1,1.3,versicolor\n" + "6.3,3.3,6,2.5,virginica\n"
>>>     + "5.8,2.7,5.1,1.9,virginica\n" + "7.1,3,5.9,2.1,virginica\n"
>>>     + "6.3,2.9,5.6,1.8,virginica\n" + "6.5,3,5.8,2.2,virginica\n"
>>>     + "7.6,3,6.6,2.1,virginica\n" + "4.9,2.5,4.5,1.7,virginica\n"
>>>     + "7.3,2.9,6.3,1.8,virginica\n" +
>>>     "6.7,2.5,5.8,1.8,virginica\n" + "7.2,3.6,6.1,2.5,virginica\n"
>>>     + "6.5,3.2,5.1,2,virginica\n" + "6.4,2.7,5.3,1.9,virginica\n"
>>>     + "6.8,3,5.5,2.1,virginica\n" + "5.7,2.5,5,2,virginica\n" +
>>>     "5.8,2.8,5.1,2.4,virginica\n" + "6.4,3.2,5.3,2.3,virginica\n"
>>>     + "6.5,3,5.5,1.8,virginica\n" + "7.7,3.8,6.7,2.2,virginica\n"
>>>     + "7.7,2.6,6.9,2.3,virginica\n" + "6,2.2,5,1.5,virginica\n" +
>>>     "6.9,3.2,5.7,2.3,virginica\n" + "5.6,2.8,4.9,2,virginica\n" +
>>>     "7.7,2.8,6.7,2,virginica\n" + "6.3,2.7,4.9,1.8,virginica\n" +
>>>     "6.7,3.3,5.7,2.1,virginica\n" + "7.2,3.2,6,1.8,virginica\n" +
>>>     "6.2,2.8,4.8,1.8,virginica\n" + "6.1,3,4.9,1.8,virginica\n" +
>>>     "6.4,2.8,5.6,2.1,virginica\n" + "7.2,3,5.8,1.6,virginica\n" +
>>>     "7.4,2.8,6.1,1.9,virginica\n" + "7.9,3.8,6.4,2,virginica\n" +
>>>     "6.4,2.8,5.6,2.2,virginica\n" + "6.3,2.8,5.1,1.5,virginica\n"
>>>     + "6.1,2.6,5.6,1.4,virginica\n" + "7.7,3,6.1,2.3,virginica\n"
>>>     + "6.3,3.4,5.6,2.4,virginica\n" +
>>>     "6.4,3.1,5.5,1.8,virginica\n" + "6,3,4.8,1.8,virginica\n" +
>>>     "6.9,3.1,5.4,2.1,virginica\n" + "6.7,3.1,5.6,2.4,virginica\n"
>>>     + "6.9,3.1,5.1,2.3,virginica\n" +
>>>     "5.8,2.7,5.1,1.9,virginica\n" + "6.8,3.2,5.9,2.3,virginica\n"
>>>     + "6.7,3.3,5.7,2.5,virginica\n" + "6.7,3,5.2,2.3,virginica\n"
>>>     + "6.3,2.5,5,1.9,virginica\n" + "6.5,3,5.2,2,virginica\n" +
>>>     "6.2,3.4,5.4,2.3,virginica\n" + "5.9,3,5.1,1.8,virginica\n";
>>>     List tableRead = rConnection.eval( "read.csv(textConnection(""
>>>     + inputIris + ""), header = FALSE)").asList(); // works!
>>>     double[] d1 = ((REXPVector) ((RList)
>>>     tableRead).get(0)).asDoubles(); double[] d2 = ((REXPVector)
>>>     ((RList) tableRead).get(1)).asDoubles(); double[] d3 =
>>>     ((REXPVector) ((RList) tableRead).get(2)).asDoubles();
>>>     double[] d4 = ((REXPVector) ((RList)
>>>     tableRead).get(3)).asDoubles(); String[] d5 = ((REXPVector)
>>>     ((RList) tableRead).get(4)).asStrings(); // create data frame
>>>     with data.REXP myDf = REXP.createDataFrame(new RList( new
>>>     REXP[] { new REXPDouble(d1), new REXPDouble(d2), new
>>>     REXPDouble(d3), new REXPDouble(d4), new REXPString(d5) })); //
>>>     assign the data to a variable as was
>>>     suggested.rConnection.assign("boxMVariable", myDf); // create
>>>     a string command with that variable name.String boxVariable =
>>>     "boxM(boxMVariable [,-5], boxMVariable[,5]"; // try to execute
>>>     the command... // FAILS with
>>>     org.rosuda.REngine.Rserve.RserveException: eval failed,
>>>     request status: R parser: input incomplete>>>> FAILS ! >>>>
>>>     REXP theBoxMResult = rConnection.eval(boxVariable); <<<< FAILS
>>>     <<<<< sent from ProtonMail <https://protonmail.com>,
>>>     Swiss-based encrypted email. [[alternative HTML version
>>>     deleted]]
>>>     ------------------------------------------------------------------------
>>>     R-devel at r-project.org <mailto:R-devel at r-project.org> mailing
>>>     list https://stat.ethz.ch/mailman/listinfo/r-devel |
	[[alternative HTML version deleted]]


From murdoch.duncan at gmail.com  Sat Oct 28 22:51:04 2017
From: murdoch.duncan at gmail.com (Duncan Murdoch)
Date: Sat, 28 Oct 2017 16:51:04 -0400
Subject: [Rd] Cannot Compute Box's M (Three Days Trying...)
In-Reply-To: <9BD27QZMzsNhYUSXQNpmzB6M1_eswp75Vyk6vgZ67jKV3Mf8H3ji_fE_YVPRSOl9Pb7XZDy1nfJCHyqt5J8hzVCzg9JxsJ-piLcIeu_7JZ4=@protonmail.com>
References: <yNSrSEBSEthk1cJc2W6y3M50LXPWIRpFNyUtLE8yIZMb4guTLWuQi9XjWd4MHnt5vxOZAK1bO32QWqqM26bRU_XpiYnip5jDiyjKWUKIH7w=@protonmail.com>
 <3e5b4dc9-1b9a-4c63-a929-82a127856dbe@gmail.com>
 <P6V3IIqCfJ4SUFtNl9ML3Wmo2cvnL50vlzlUJdvRaAj106MjIojw5ITRt5ZQdkeOa9rnyS6HTxRgg7SUwmPY4CqGPbQFWqYEKCTr_yDVZdM=@protonmail.com>
 <abfb1feb-1da9-8c88-ceb5-98cef28ef406@gmail.com>
 <rl0BFmHLQl4yweaOtoWaJJEScu0VetftcUuusTtgU1qjAdU-8pgrnohMfnzvJQZTY2jPjjraq6xgDDAlxfHHZunKbfGydZILJQ8xk4g0IWc=@protonmail.com>
 <ee03e49f-9c97-5e34-d12e-7623effcf062@gmail.com>
 <9BD27QZMzsNhYUSXQNpmzB6M1_eswp75Vyk6vgZ67jKV3Mf8H3ji_fE_YVPRSOl9Pb7XZDy1nfJCHyqt5J8hzVCzg9JxsJ-piLcIeu_7JZ4=@protonmail.com>
Message-ID: <abe44eb4-e08a-087a-1870-dc73d1e59da4@gmail.com>

On 28/10/2017 8:59 AM, Morkus wrote:
> Hey Duncan,
> 
> Hard to debug? That's an understatement. Eyes bleeding....
> 
> In any case, I tried all your suggestions. To get "integer" for the 
> final column, I had to change the code to get integers instead of strings.

The last column in iris is actually a factor.  That's stored as an 
S3-classed integer vector with an attribute listing the levels.  Using 
strings instead can cause problems in a few R functions (they want 
factors, and don't do automatic conversions), but the errors you're 
seeing seem more fundamental.

> 
> double[] d1 = ((REXPVector) ((RList) tableRead).get(0)).asDoubles();
> double[] d2 = ((REXPVector) ((RList) tableRead).get(1)).asDoubles();
> double[] d3 = ((REXPVector) ((RList) tableRead).get(2)).asDoubles();
> double[] d4 = ((REXPVector) ((RList) tableRead).get(3)).asDoubles();
> *int**[] d5 = ((REXPVector) ((RList) tableRead).get(**4**)).asIntegers();*
> 
> /// create data frame with data.
> /REXP myDf = REXP.createDataFrame(new RList(
> new REXP[]
> {
> new REXPDouble(d1),
> new REXPDouble(d2),
> new REXPDouble(d3),
> new REXPDouble(d4),
> *new **REXPInteger(d5)*
> }));
> 
> Here are the results from the eval debug code.
> 
> head(boxMVariable)? ? Gives the high level 5 objects.
> 
> typeof(boxMVariable): ?list?
> 
> class(boxMVariable) : ?data.frame?
> 
> names(boxMVariable)? ? String object returned (couldn't evaluate it)

That sounds like it could be serious.  Dataframe names shouldn't be 
particularly complicated, so there shouldn't be a problem evaluating 
them.  (But maybe this is just hard in Java for some reason.  As I've 
mentioned, I'm not familiar with the R Java interface.)  If there really 
is a problem with the way the names have been constructed, that would 
explain the error in str(), and would lead to lots of other weird problems.

Another way to look at R objects from within R is to use 
.Internal(inspect( x )).  For example,

 > .Internal(inspect(names(iris)))
@7f898ff9e2e8 16 STRSXP g0c4 [NAM(2)] (len=5, tl=0)
   @7f8992c41878 09 CHARSXP g0c2 [gp=0x61,ATT] [ASCII] [cached] 
"Sepal.Length"
   @7f8992c41840 09 CHARSXP g0c2 [gp=0x61] [ASCII] [cached] "Sepal.Width"
   @7f8992c41808 09 CHARSXP g0c2 [gp=0x61,ATT] [ASCII] [cached] 
"Petal.Length"
   @7f898ba99f78 09 CHARSXP g0c2 [gp=0x61,ATT] [ASCII] [cached] 
"Petal.Width"
   @7f898b9a3468 09 CHARSXP g0c1 [gp=0x61,ATT] [ASCII] [cached] "Species"

You can also look at R objects while in a debugger like gdb using the 
R_PV() function; see Writing R Extensions for details if this is 
something available to you.

> ncol(boxMVariable)? - 5
> 
> nrow(boxMVariable)?? - 150
> 
> typeof(boxMVariable)
> 
> for (i in 1:5) print(typeof(boxMVariable[[i]]))
> *I get:*
> 1 ?> double
> 2 ?> double
> 3? ?> double
> 4 ?> double
> 5 ->? integer
> 
> Is this problem "debug-proof"?
> 
> Does anyone out there actually use Java and R?

I don't know anyone who does that.  It seems like a bad idea just 
because it's always easiest to do what everyone else does.

I think it's more common to call Java from R than the reverse.

Duncan Murdoch

> 
> Sigh...
> 
> 
> 
> Sent from ProtonMail <https://protonmail.com>, Swiss-based encrypted email.
> 
> 
>> -------- Original Message --------
>> Subject: Re: [Rd] Cannot Compute Box's M (Three Days Trying...)
>> Local Time: October 28, 2017 7:31 AM
>> UTC Time: October 28, 2017 11:31 AM
>> From: murdoch.duncan at gmail.com
>> To: Morkus <morkus at protonmail.com>
>> r-devel at r-project.org <r-devel at r-project.org>
>>
>> On 28/10/2017 7:12 AM, Morkus wrote:
>>
>>     Thanks Duncan. Awesome ideas!
>>     I think we're getting closer!
>>     I tried what you suggested and got a possibly better error...
>>     .
>>     .
>>     .
>>     rConnection.assign("boxMVariable", myDf);
>>     *String resultBV *= /"str(boxMVariable)"/; /// your suggestion./
>>     /RESULTING ERROR:/
>>     /Error in format.default(nam.ob, width = max(ncn), justify = "left") :
>>     invalid 'width' argument/
>>     (No idea what this means).
>>
>>     That looks like an error occurring in the str() function. I've never
>>     seen such a think in a regular R session, so I would guess that either
>>     your boxMVariable object is set up in a weird way that is confusing
>>     str(), or your R session in Java is messed up.
>>
>>     This is likely to be pretty hard to debug. As a general strategy, I'd
>>     try to find out exactly what is in boxMVariable first. Since str()
>>     doesn't work, try printing things like
>>
>>     head(boxMVariable)
>>     class(boxMVariable)
>>     names(boxMVariable)
>>     ncol(boxMVariable)
>>     nrow(boxMVariable)
>>     typeof(boxMVariable)
>>     for (i in 1:5)
>>     print(typeof(boxMVariable[[i]]))
>>
>>     etc.
>>
>>     Make sure the values match what you see in a regular R session:
>>
>>     boxMVariable <- iris
>>     head(boxMVariable)
>>     Sepal.Length Sepal.Width Petal.Length Petal.Width Species
>>     1 5.1 3.5 1.4 0.2 setosa
>>     2 4.9 3.0 1.4 0.2 setosa
>>     3 4.7 3.2 1.3 0.2 setosa
>>     4 4.6 3.1 1.5 0.2 setosa
>>     5 5.0 3.6 1.4 0.2 setosa
>>     6 5.4 3.9 1.7 0.4 setosa
>>     class(boxMVariable)
>>     [1] "data.frame"
>>     names(boxMVariable)
>>     [1] "Sepal.Length" "Sepal.Width" "Petal.Length" "Petal.Width"
>>     "Species"
>>     ncol(boxMVariable)
>>     [1] 5
>>     nrow(boxMVariable)
>>     [1] 150
>>     typeof(boxMVariable)
>>     [1] "list"
>>     for (i in 1:5)
>>
>>  *
>>     print(typeof(boxMVariable[[i]]))
>>     [1] "double"
>>     [1] "double"
>>     [1] "double"
>>     [1] "double"
>>     [1] "integer"
>>
>>     For testing, I'm using the same standard IRIS dataset as the Box's M
>>     documentation shows in biotools:
>>     Examples
>>     data(iris)
>>     /boxM(iris[, -5], iris[, 5])/
>>     /-------/
>>     **
>>     Now, in the debugger, the built values of myDf are these:
>>     /myDf/ = {org.rosuda.REngine.REXPGenericVector at 562}
>>     "org.rosuda.REngine./REXPGenericVector/@17d99928+[5]?
>>
>>     ? payload = {org.rosuda.REngine./RList/@566} size = 5
>>     ? 0 = {org.rosuda.REngine.REXPDouble at 570}
>>     "org.rosuda.REngine./REXPDouble/@6fffcba5[150]"
>>     ? 1 = {org.rosuda.REngine.REXPDouble at 571}
>>     "org.rosuda.REngine./REXPDouble/@34340fab[150]?
>>     ? 2 = {org.rosuda.REngine.REXPDouble at 572}
>>     "org.rosuda.REngine./REXPDouble/@2aafb23c[150]"
>>     ? 3 = {org.rosuda.REngine.REXPDouble at 573}
>>     "org.rosuda.REngine./REXPDouble/@2b80d80f[150]?
>>     ? 4 = {org.rosuda.REngine.REXPString at 574}
>>     "org.rosuda.REngine./REXPString/@3ab39c39[150]?
>>     Does this help?
>>     Please let me know what else I can try.
>>     Thanks,
>>     Sent from ProtonMail https://protonmail.com, Swiss-based encrypted
>>     email.
>>
>>         -------- Original Message --------
>>         Subject: Re: [Rd] Cannot Compute Box's M (Three Days Trying...)
>>         Local Time: October 28, 2017 6:48 AM
>>         UTC Time: October 28, 2017 10:48 AM
>>         From: murdoch.duncan at gmail.com <mailto:murdoch.duncan at gmail.com>
>>         To: Morkus morkus at protonmail.com <mailto:morkus at protonmail.com>
>>         r-devel at r-project.org <mailto:r-devel at r-project.org>
>>         r-devel at r-project.org <mailto:r-devel at r-project.org>
>>         On 28/10/2017 6:26 AM, Morkus wrote:
>>
>>         |I'm not sure what you mean. Could you please be more specific?
>>         You were trying to eval an expression that you constructed in
>>         Java. I was suggesting that before you eval it, you print it.
>>         If I print the string, I get: /boxM(boxMVariable[, -5],
>>         boxMVariable[, 5])/ Right, that's what I was suggesting you
>>         do. Now you've fixed the syntax error, that looks okay. If I'm
>>         reading these messages in the right order, your latest error
>>         is Error in |[.data.frame|(boxMVariable, , -5) : undefined
>>         columns selected The expression there is a funny way of
>>         printing boxMVariable[,-5]. So now you need to figure out why
>>         it thinks you've selected undefined columns. This is a little
>>         perplexing, because you're asking for all columns except
>>         column 5, and that works whether or not you have a column |
>>
>>         5.
>>
>>
>>         So I'd guess there's something weird about boxMVariable. You
>>         should ask
>>         R to print it, and to print str(boxMVariable), to make sure it's a
>>         regular dataframe containing 4 numeric columns and one factor or
>>         character column.
>>         Duncan Murdoch
>>
>>         |From this code: . . . /// assign the data to a variable.
>>         /rConnection.assign("boxMVariable", myDf); /// create a string
>>         command with that variable name. /String boxVariable =
>>         "boxM(boxMVariable[, -5], boxMVariable[, 5])";
>>         /System/./out/./println/(/boxVariable/);? // print the string?
>>         Not sure what is meant. Sorry if I didn't understand your
>>         suggestion. Look forward to hearing back from you. Thanks,
>>         Sent from ProtonMail https://protonmail.com, Swiss-based
>>         encrypted email. -------- Original Message -------- Subject:
>>         Re: [Rd] Cannot Compute Box's M (Three Days Trying...) Local
>>         Time: October 27, 2017 6:09 PM UTC Time: October 27, 2017
>>         10:09 PM From: murdoch.duncan at gmail.com
>>         <mailto:murdoch.duncan at gmail.com> To: Morkus
>>         morkus at protonmail.com <mailto:morkus at protonmail.com>,
>>         r-devel at r-project.org <mailto:r-devel at r-project.org>
>>         r-devel at r-project.org <mailto:r-devel at r-project.org> Just
>>         print the string you are asking to R to evaluate. It doesn't
>>         make any sense as an R expression. Fix that, and things will
>>         work. Duncan Murdoch On 27/10/2017 3:41 PM, Morkus via R-devel
>>         wrote: |It can't be this hard, right? I really need a shove in
>>         the right direction here. Been spinning wheels for three days.
>>         Cannot get past the errors. I'm doing something wrong,
>>         obviously, since I can easily compute the Box's M right there
>>         in RStudio But I don't see what is wrong below with the coding
>>         equivalent. The entire code snippet is below. The code fails
>>         below on the call to the boxM statistic call. PLEASE HELP!!!
>>         Thanks in advance,
>>         ------------------------------------------------------------------------
>>         rConnection.eval("library('biotools')"); String inputIris =
>>         "5.1,3.5,1.4,0.2,setosa\n" + "4.9,3,1.4,0.2,setosa\n" +
>>         "4.7,3.2,1.3,0.2,setosa\n" + "4.6,3.1,1.5,0.2,setosa\n" +
>>         "5,3.6,1.4,0.2,setosa\n" + "5.4,3.9,1.7,0.4,setosa\n" +
>>         "4.6,3.4,1.4,0.3,setosa\n" + "5,3.4,1.5,0.2,setosa\n" +
>>         "4.4,2.9,1.4,0.2,setosa\n" + "4.9,3.1,1.5,0.1,setosa\n" +
>>         "5.4,3.7,1.5,0.2,setosa\n" + "4.8,3.4,1.6,0.2,setosa\n" +
>>         "4.8,3,1.4,0.1,setosa\n" + "4.3,3,1.1,0.1,setosa\n" +
>>         "5.8,4,1.2,0.2,setosa\n" + "5.7,4.4,1.5,0.4,setosa\n" +
>>         "5.4,3.9,1.3,0.4,setosa\n" + "5.1,3.5,1.4,0.3,setosa\n" +
>>         "5.7,3.8,1.7,0.3,setosa\n" + "5.1,3.8,1.5,0.3,setosa\n" +
>>         "5.4,3.4,1.7,0.2,setosa\n" + "5.1,3.7,1.5,0.4,setosa\n" +
>>         "4.6,3.6,1,0.2,setosa\n" + "5.1,3.3,1.7,0.5,setosa\n" +
>>         "4.8,3.4,1.9,0.2,setosa\n" + "5,3,1.6,0.2,setosa\n" +
>>         "5,3.4,1.6,0.4,setosa\n" + "5.2,3.5,1.5,0.2,setosa\n" +
>>         "5.2,3.4,1.4,0.2,setosa\n" + "4.7,3.2,1.6,0.2,setosa\n" +
>>         "4.8,3.1,1.6,0.2,setosa\n" + "5.4,3.4,1.5,0.4,setosa\n" +
>>         "5.2,4.1,1.5,0.1,setosa\n" + "5.5,4.2,1.4,0.2,setosa\n" +
>>         "4.9,3.1,1.5,0.2,setosa\n" + "5,3.2,1.2,0.2,setosa\n" +
>>         "5.5,3.5,1.3,0.2,setosa\n" + "4.9,3.6,1.4,0.1,setosa\n" +
>>         "4.4,3,1.3,0.2,setosa\n" + "5.1,3.4,1.5,0.2,setosa\n" +
>>         "5,3.5,1.3,0.3,setosa\n" + "4.5,2.3,1.3,0.3,setosa\n" +
>>         "4.4,3.2,1.3,0.2,setosa\n" + "5,3.5,1.6,0.6,setosa\n" +
>>         "5.1,3.8,1.9,0.4,setosa\n" + "4.8,3,1.4,0.3,setosa\n" +
>>         "5.1,3.8,1.6,0.2,setosa\n" + "4.6,3.2,1.4,0.2,setosa\n" +
>>         "5.3,3.7,1.5,0.2,setosa\n" + "5,3.3,1.4,0.2,setosa\n" +
>>         "7,3.2,4.7,1.4,versicolor\n" + "6.4,3.2,4.5,1.5,versicolor\n"
>>         + "6.9,3.1,4.9,1.5,versicolor\n" +
>>         "5.5,2.3,4,1.3,versicolor\n" + "6.5,2.8,4.6,1.5,versicolor\n"
>>         + "5.7,2.8,4.5,1.3,versicolor\n" +
>>         "6.3,3.3,4.7,1.6,versicolor\n" + "4.9,2.4,3.3,1,versicolor\n"
>>         + "6.6,2.9,4.6,1.3,versicolor\n" +
>>         "5.2,2.7,3.9,1.4,versicolor\n" + "5,2,3.5,1,versicolor\n" +
>>         "5.9,3,4.2,1.5,versicolor\n" + "6,2.2,4,1,versicolor\n" +
>>         "6.1,2.9,4.7,1.4,versicolor\n" +
>>         "5.6,2.9,3.6,1.3,versicolor\n" +
>>         "6.7,3.1,4.4,1.4,versicolor\n" + "5.6,3,4.5,1.5,versicolor\n"
>>         + "5.8,2.7,4.1,1,versicolor\n" +
>>         "6.2,2.2,4.5,1.5,versicolor\n" +
>>         "5.6,2.5,3.9,1.1,versicolor\n" +
>>         "5.9,3.2,4.8,1.8,versicolor\n" + "6.1,2.8,4,1.3,versicolor\n"
>>         + "6.3,2.5,4.9,1.5,versicolor\n" +
>>         "6.1,2.8,4.7,1.2,versicolor\n" +
>>         "6.4,2.9,4.3,1.3,versicolor\n" + "6.6,3,4.4,1.4,versicolor\n"
>>         + "6.8,2.8,4.8,1.4,versicolor\n" + "6.7,3,5,1.7,versicolor\n"
>>         + "6,2.9,4.5,1.5,versicolor\n" + "5.7,2.6,3.5,1,versicolor\n"
>>         + "5.5,2.4,3.8,1.1,versicolor\n" +
>>         "5.5,2.4,3.7,1,versicolor\n" + "5.8,2.7,3.9,1.2,versicolor\n"
>>         + "6,2.7,5.1,1.6,versicolor\n" + "5.4,3,4.5,1.5,versicolor\n"
>>         + "6,3.4,4.5,1.6,versicolor\n" +
>>         "6.7,3.1,4.7,1.5,versicolor\n" +
>>         "6.3,2.3,4.4,1.3,versicolor\n" + "5.6,3,4.1,1.3,versicolor\n"
>>         + "5.5,2.5,4,1.3,versicolor\n" +
>>         "5.5,2.6,4.4,1.2,versicolor\n" + "6.1,3,4.6,1.4,versicolor\n"
>>         + "5.8,2.6,4,1.2,versicolor\n" + "5,2.3,3.3,1,versicolor\n" +
>>         "5.6,2.7,4.2,1.3,versicolor\n" + "5.7,3,4.2,1.2,versicolor\n"
>>         + "5.7,2.9,4.2,1.3,versicolor\n" +
>>         "6.2,2.9,4.3,1.3,versicolor\n" + "5.1,2.5,3,1.1,versicolor\n"
>>         + "5.7,2.8,4.1,1.3,versicolor\n" + "6.3,3.3,6,2.5,virginica\n"
>>         + "5.8,2.7,5.1,1.9,virginica\n" + "7.1,3,5.9,2.1,virginica\n"
>>         + "6.3,2.9,5.6,1.8,virginica\n" + "6.5,3,5.8,2.2,virginica\n"
>>         + "7.6,3,6.6,2.1,virginica\n" + "4.9,2.5,4.5,1.7,virginica\n"
>>         + "7.3,2.9,6.3,1.8,virginica\n" +
>>         "6.7,2.5,5.8,1.8,virginica\n" + "7.2,3.6,6.1,2.5,virginica\n"
>>         + "6.5,3.2,5.1,2,virginica\n" + "6.4,2.7,5.3,1.9,virginica\n"
>>         + "6.8,3,5.5,2.1,virginica\n" + "5.7,2.5,5,2,virginica\n" +
>>         "5.8,2.8,5.1,2.4,virginica\n" + "6.4,3.2,5.3,2.3,virginica\n"
>>         + "6.5,3,5.5,1.8,virginica\n" + "7.7,3.8,6.7,2.2,virginica\n"
>>         + "7.7,2.6,6.9,2.3,virginica\n" + "6,2.2,5,1.5,virginica\n" +
>>         "6.9,3.2,5.7,2.3,virginica\n" + "5.6,2.8,4.9,2,virginica\n" +
>>         "7.7,2.8,6.7,2,virginica\n" + "6.3,2.7,4.9,1.8,virginica\n" +
>>         "6.7,3.3,5.7,2.1,virginica\n" + "7.2,3.2,6,1.8,virginica\n" +
>>         "6.2,2.8,4.8,1.8,virginica\n" + "6.1,3,4.9,1.8,virginica\n" +
>>         "6.4,2.8,5.6,2.1,virginica\n" + "7.2,3,5.8,1.6,virginica\n" +
>>         "7.4,2.8,6.1,1.9,virginica\n" + "7.9,3.8,6.4,2,virginica\n" +
>>         "6.4,2.8,5.6,2.2,virginica\n" + "6.3,2.8,5.1,1.5,virginica\n"
>>         + "6.1,2.6,5.6,1.4,virginica\n" + "7.7,3,6.1,2.3,virginica\n"
>>         + "6.3,3.4,5.6,2.4,virginica\n" +
>>         "6.4,3.1,5.5,1.8,virginica\n" + "6,3,4.8,1.8,virginica\n" +
>>         "6.9,3.1,5.4,2.1,virginica\n" + "6.7,3.1,5.6,2.4,virginica\n"
>>         + "6.9,3.1,5.1,2.3,virginica\n" +
>>         "5.8,2.7,5.1,1.9,virginica\n" + "6.8,3.2,5.9,2.3,virginica\n"
>>         + "6.7,3.3,5.7,2.5,virginica\n" + "6.7,3,5.2,2.3,virginica\n"
>>         + "6.3,2.5,5,1.9,virginica\n" + "6.5,3,5.2,2,virginica\n" +
>>         "6.2,3.4,5.4,2.3,virginica\n" + "5.9,3,5.1,1.8,virginica\n";
>>         List tableRead = rConnection.eval( "read.csv(textConnection(""
>>         + inputIris + ""), header = FALSE)").asList(); // works!
>>         double[] d1 = ((REXPVector) ((RList)
>>         tableRead).get(0)).asDoubles(); double[] d2 = ((REXPVector)
>>         ((RList) tableRead).get(1)).asDoubles(); double[] d3 =
>>         ((REXPVector) ((RList) tableRead).get(2)).asDoubles();
>>         double[] d4 = ((REXPVector) ((RList)
>>         tableRead).get(3)).asDoubles(); String[] d5 = ((REXPVector)
>>         ((RList) tableRead).get(4)).asStrings(); // create data frame
>>         with data.REXP myDf = REXP.createDataFrame(new RList( new
>>         REXP[] { new REXPDouble(d1), new REXPDouble(d2), new
>>         REXPDouble(d3), new REXPDouble(d4), new REXPString(d5) })); //
>>         assign the data to a variable as was
>>         suggested.rConnection.assign("boxMVariable", myDf); // create
>>         a string command with that variable name.String boxVariable =
>>         "boxM(boxMVariable [,-5], boxMVariable[,5]"; // try to execute
>>         the command... // FAILS with
>>         org.rosuda.REngine.Rserve.RserveException: eval failed,
>>         request status: R parser: input incomplete>>>> FAILS ! >>>>
>>         REXP theBoxMResult = rConnection.eval(boxVariable); <<<< FAILS
>>         <<<<< sent from ProtonMail <https://protonmail.com>,
>>         Swiss-based encrypted email. [[alternative HTML version
>>         deleted]]
>>         ------------------------------------------------------------------------
>>         R-devel at r-project.org <mailto:R-devel at r-project.org> mailing
>>         list https://stat.ethz.ch/mailman/listinfo/r-devel | |
>>
>>
>


From morkus at protonmail.com  Sun Oct 29 12:26:32 2017
From: morkus at protonmail.com (Morkus)
Date: Sun, 29 Oct 2017 07:26:32 -0400
Subject: [Rd] Cannot Compute Box's M (Three Days Trying...)
In-Reply-To: <abe44eb4-e08a-087a-1870-dc73d1e59da4@gmail.com>
References: <yNSrSEBSEthk1cJc2W6y3M50LXPWIRpFNyUtLE8yIZMb4guTLWuQi9XjWd4MHnt5vxOZAK1bO32QWqqM26bRU_XpiYnip5jDiyjKWUKIH7w=@protonmail.com>
 <3e5b4dc9-1b9a-4c63-a929-82a127856dbe@gmail.com>
 <P6V3IIqCfJ4SUFtNl9ML3Wmo2cvnL50vlzlUJdvRaAj106MjIojw5ITRt5ZQdkeOa9rnyS6HTxRgg7SUwmPY4CqGPbQFWqYEKCTr_yDVZdM=@protonmail.com>
 <abfb1feb-1da9-8c88-ceb5-98cef28ef406@gmail.com>
 <rl0BFmHLQl4yweaOtoWaJJEScu0VetftcUuusTtgU1qjAdU-8pgrnohMfnzvJQZTY2jPjjraq6xgDDAlxfHHZunKbfGydZILJQ8xk4g0IWc=@protonmail.com>
 <ee03e49f-9c97-5e34-d12e-7623effcf062@gmail.com>
 <9BD27QZMzsNhYUSXQNpmzB6M1_eswp75Vyk6vgZ67jKV3Mf8H3ji_fE_YVPRSOl9Pb7XZDy1nfJCHyqt5J8hzVCzg9JxsJ-piLcIeu_7JZ4=@protonmail.com>
 <abe44eb4-e08a-087a-1870-dc73d1e59da4@gmail.com>
Message-ID: <3vTUHD1PtBDruYfNDtqh8Aom_SVM7c5CwgImGeBOfwq5N1z329qNFlNLnj9dL1NBUJExFwkQmTaBHYy88hXIdWhd4uiamMHFlqKs06TccYU=@protonmail.com>

Thanks Duncan. I can't tell you how helpful all your terrific replies have been.

I think the biggest surprise is that nobody appears to be using Java and R together like I"m trying to do. I suppose it should be a surprise since there are no books on the subject and almost no technical documentation other than a few sites here and there.

-----

I originally had the "int" as the return type for the factors, but that didn't make any difference.

So, let me ask you. What I can get working is calling an R Script from Java. Literally opening the ".R" file and reading it line by line and evaluating it. That works. Is there any reason why that's not a viable way to go?

The one thing I don't know how to do is pass a parameter to an RScript from Java. Is it possible to pass a parameter to an RScript from Java? If I can pass a parameter to an RScript, then it's not static and I could use it as a "function" to call for different values.

Look forward to your reply.

Sent from [ProtonMail](https://protonmail.com), Swiss-based encrypted email.

> -------- Original Message --------
> Subject: Re: [Rd] Cannot Compute Box's M (Three Days Trying...)
> Local Time: October 28, 2017 4:51 PM
> UTC Time: October 28, 2017 8:51 PM
> From: murdoch.duncan at gmail.com
> To: Morkus <morkus at protonmail.com>
> r-devel at r-project.org <r-devel at r-project.org>
>
> On 28/10/2017 8:59 AM, Morkus wrote:
>
>> Hey Duncan,
>> Hard to debug? That's an understatement. Eyes bleeding....
>> In any case, I tried all your suggestions. To get "integer" for the
>> final column, I had to change the code to get integers instead of strings.
>>
>> The last column in iris is actually a factor. That's stored as an
>> S3-classed integer vector with an attribute listing the levels. Using
>> strings instead can cause problems in a few R functions (they want
>> factors, and don't do automatic conversions), but the errors you're
>> seeing seem more fundamental.
>> double[] d1 = ((REXPVector) ((RList) tableRead).get(0)).asDoubles();
>> double[] d2 = ((REXPVector) ((RList) tableRead).get(1)).asDoubles();
>> double[] d3 = ((REXPVector) ((RList) tableRead).get(2)).asDoubles();
>> double[] d4 = ((REXPVector) ((RList) tableRead).get(3)).asDoubles();
>> int*[] d5 = ((REXPVector) ((RList) tableRead).get(4)).asIntegers();*
>> /// create data frame with data.
>> /REXP myDf = REXP.createDataFrame(new RList(
>> new REXP[]
>> {
>> new REXPDouble(d1),
>> new REXPDouble(d2),
>> new REXPDouble(d3),
>> new REXPDouble(d4),
>> *new *REXPInteger(d5)
>> }));
>> Here are the results from the eval debug code.
>> head(boxMVariable)  ? Gives the high level 5 objects.
>> typeof(boxMVariable): ?list?
>> class(boxMVariable) : ?data.frame?
>> names(boxMVariable)  ? String object returned (couldn't evaluate it)
>>
>> That sounds like it could be serious. Dataframe names shouldn't be
>> particularly complicated, so there shouldn't be a problem evaluating
>> them. (But maybe this is just hard in Java for some reason. As I've
>> mentioned, I'm not familiar with the R Java interface.) If there really
>> is a problem with the way the names have been constructed, that would
>> explain the error in str(), and would lead to lots of other weird problems.
>>
>> Another way to look at R objects from within R is to use
>> .Internal(inspect( x )). For example,
>>
>> .Internal(inspect(names(iris)))
>> @7f898ff9e2e8 16 STRSXP g0c4 [NAM(2)] (len=5, tl=0)
>> @7f8992c41878 09 CHARSXP g0c2 [gp=0x61,ATT] [ASCII] [cached]
>> "Sepal.Length"
>> @7f8992c41840 09 CHARSXP g0c2 [gp=0x61] [ASCII] [cached] "Sepal.Width"
>> @7f8992c41808 09 CHARSXP g0c2 [gp=0x61,ATT] [ASCII] [cached]
>> "Petal.Length"
>> @7f898ba99f78 09 CHARSXP g0c2 [gp=0x61,ATT] [ASCII] [cached]
>> "Petal.Width"
>> @7f898b9a3468 09 CHARSXP g0c1 [gp=0x61,ATT] [ASCII] [cached] "Species"
>>
>> You can also look at R objects while in a debugger like gdb using the
>> R_PV() function; see Writing R Extensions for details if this is
>> something available to you.
>>
>> ncol(boxMVariable)  - 5
>> nrow(boxMVariable)   - 150
>> typeof(boxMVariable)
>> for (i in 1:5) print(typeof(boxMVariable[[i]]))
>> I get:
>> 1 ?> double
>> 2 ?> double
>> 3  ?> double
>> 4 ?> double
>> 5 ->  integer
>> Is this problem "debug-proof"?
>> Does anyone out there actually use Java and R?
>>
>> I don't know anyone who does that. It seems like a bad idea just
>> because it's always easiest to do what everyone else does.
>>
>> I think it's more common to call Java from R than the reverse.
>>
>> Duncan Murdoch
>> Sigh...
>> Sent from ProtonMail https://protonmail.com, Swiss-based encrypted email.
>>
>>> -------- Original Message --------
>>> Subject: Re: [Rd] Cannot Compute Box's M (Three Days Trying...)
>>> Local Time: October 28, 2017 7:31 AM
>>> UTC Time: October 28, 2017 11:31 AM
>>> From: murdoch.duncan at gmail.com
>>> To: Morkus morkus at protonmail.com
>>> r-devel at r-project.org r-devel at r-project.org
>>> On 28/10/2017 7:12 AM, Morkus wrote:
>>>
>>> Thanks Duncan. Awesome ideas!
>>> I think we're getting closer!
>>> I tried what you suggested and got a possibly better error...
>>> .
>>> .
>>> .
>>> rConnection.assign("boxMVariable", myDf);
>>> *String resultBV *= /"str(boxMVariable)"/; /// your suggestion./
>>> /RESULTING ERROR:/
>>> /Error in format.default(nam.ob, width = max(ncn), justify = "left") :
>>> invalid 'width' argument/
>>> (No idea what this means).
>>>
>>> That looks like an error occurring in the str() function. I've never
>>> seen such a think in a regular R session, so I would guess that either
>>> your boxMVariable object is set up in a weird way that is confusing
>>> str(), or your R session in Java is messed up.
>>>
>>> This is likely to be pretty hard to debug. As a general strategy, I'd
>>> try to find out exactly what is in boxMVariable first. Since str()
>>> doesn't work, try printing things like
>>>
>>> head(boxMVariable)
>>> class(boxMVariable)
>>> names(boxMVariable)
>>> ncol(boxMVariable)
>>> nrow(boxMVariable)
>>> typeof(boxMVariable)
>>> for (i in 1:5)
>>> print(typeof(boxMVariable[[i]]))
>>>
>>> etc.
>>>
>>> Make sure the values match what you see in a regular R session:
>>>
>>> boxMVariable <- iris
>>> head(boxMVariable)
>>> Sepal.Length Sepal.Width Petal.Length Petal.Width Species
>>> 1 5.1 3.5 1.4 0.2 setosa
>>> 2 4.9 3.0 1.4 0.2 setosa
>>> 3 4.7 3.2 1.3 0.2 setosa
>>> 4 4.6 3.1 1.5 0.2 setosa
>>> 5 5.0 3.6 1.4 0.2 setosa
>>> 6 5.4 3.9 1.7 0.4 setosa
>>> class(boxMVariable)
>>> [1] "data.frame"
>>> names(boxMVariable)
>>> [1] "Sepal.Length" "Sepal.Width" "Petal.Length" "Petal.Width"
>>> "Species"
>>> ncol(boxMVariable)
>>> [1] 5
>>> nrow(boxMVariable)
>>> [1] 150
>>> typeof(boxMVariable)
>>> [1] "list"
>>> for (i in 1:5)
>>>
>>> - print(typeof(boxMVariable[[i]]))
>>> [1] "double"
>>> [1] "double"
>>> [1] "double"
>>> [1] "double"
>>> [1] "integer"
>>> For testing, I'm using the same standard IRIS dataset as the Box's M
>>> documentation shows in biotools:
>>> Examples
>>> data(iris)
>>> /boxM(iris[, -5], iris[, 5])/
>>> /-------/
>>> **
>>> Now, in the debugger, the built values of myDf are these:
>>> /myDf/ = {org.rosuda.REngine.REXPGenericVector at 562}
>>> "org.rosuda.REngine./REXPGenericVector/@17d99928+[5]?
>>> ? payload = {org.rosuda.REngine./RList/@566} size = 5
>>> ? 0 = {org.rosuda.REngine.REXPDouble at 570}
>>> "org.rosuda.REngine./REXPDouble/@6fffcba5[150]"
>>> ? 1 = {org.rosuda.REngine.REXPDouble at 571}
>>> "org.rosuda.REngine./REXPDouble/@34340fab[150]?
>>> ? 2 = {org.rosuda.REngine.REXPDouble at 572}
>>> "org.rosuda.REngine./REXPDouble/@2aafb23c[150]"
>>> ? 3 = {org.rosuda.REngine.REXPDouble at 573}
>>> "org.rosuda.REngine./REXPDouble/@2b80d80f[150]?
>>> ? 4 = {org.rosuda.REngine.REXPString at 574}
>>> "org.rosuda.REngine./REXPString/@3ab39c39[150]?
>>> Does this help?
>>> Please let me know what else I can try.
>>> Thanks,
>>> Sent from ProtonMail https://protonmail.com, Swiss-based encrypted
>>> email.
>>>
>>> -------- Original Message --------
>>>  Subject: Re: [Rd] Cannot Compute Box's M (Three Days Trying...)
>>>  Local Time: October 28, 2017 6:48 AM
>>>  UTC Time: October 28, 2017 10:48 AM
>>>  From: murdoch.duncan at gmail.com <mailto:murdoch.duncan at gmail.com>
>>>  To: Morkus morkus at protonmail.com <mailto:morkus at protonmail.com>
>>>  r-devel at r-project.org <mailto:r-devel at r-project.org>
>>>  r-devel at r-project.org <mailto:r-devel at r-project.org>
>>>  On 28/10/2017 6:26 AM, Morkus wrote:
>>>
>>>  |I'm not sure what you mean. Could you please be more specific?
>>>  You were trying to eval an expression that you constructed in
>>>  Java. I was suggesting that before you eval it, you print it.
>>>  If I print the string, I get: /boxM(boxMVariable[, -5],
>>>  boxMVariable[, 5])/ Right, that's what I was suggesting you
>>>  do. Now you've fixed the syntax error, that looks okay. If I'm
>>>  reading these messages in the right order, your latest error
>>>  is Error in |[.data.frame|(boxMVariable, , -5) : undefined
>>>  columns selected The expression there is a funny way of
>>>  printing boxMVariable[,-5]. So now you need to figure out why
>>>  it thinks you've selected undefined columns. This is a little
>>>  perplexing, because you're asking for all columns except
>>>  column 5, and that works whether or not you have a column |
>>>
>>>  5.
>>>
>>>  So I'd guess there's something weird about boxMVariable. You
>>>  should ask
>>>  R to print it, and to print str(boxMVariable), to make sure it's a
>>>  regular dataframe containing 4 numeric columns and one factor or
>>>  character column.
>>>  Duncan Murdoch
>>>
>>>  |From this code: . . . /// assign the data to a variable.
>>>  /rConnection.assign("boxMVariable", myDf); /// create a string
>>>  command with that variable name. /String boxVariable =
>>>  "boxM(boxMVariable[, -5], boxMVariable[, 5])";
>>>  /System/./out/./println/(/boxVariable/);  // print the string?
>>>  Not sure what is meant. Sorry if I didn't understand your
>>>  suggestion. Look forward to hearing back from you. Thanks,
>>>  Sent from ProtonMail https://protonmail.com, Swiss-based
>>>  encrypted email. -------- Original Message -------- Subject:
>>>  Re: [Rd] Cannot Compute Box's M (Three Days Trying...) Local
>>>  Time: October 27, 2017 6:09 PM UTC Time: October 27, 2017
>>>  10:09 PM From: murdoch.duncan at gmail.com
>>>  <mailto:murdoch.duncan at gmail.com> To: Morkus
>>>  morkus at protonmail.com <mailto:morkus at protonmail.com>,
>>>  r-devel at r-project.org <mailto:r-devel at r-project.org>
>>>  r-devel at r-project.org <mailto:r-devel at r-project.org> Just
>>>  print the string you are asking to R to evaluate. It doesn't
>>>  make any sense as an R expression. Fix that, and things will
>>>  work. Duncan Murdoch On 27/10/2017 3:41 PM, Morkus via R-devel
>>>  wrote: |It can't be this hard, right? I really need a shove in
>>>  the right direction here. Been spinning wheels for three days.
>>>  Cannot get past the errors. I'm doing something wrong,
>>>  obviously, since I can easily compute the Box's M right there
>>>  in RStudio But I don't see what is wrong below with the coding
>>>  equivalent. The entire code snippet is below. The code fails
>>>  below on the call to the boxM statistic call. PLEASE HELP!!!
>>>  Thanks in advance,
>>>  ------------------------------------------------------------------------
>>>  rConnection.eval("library('biotools')"); String inputIris =
>>>  "5.1,3.5,1.4,0.2,setosa\n" + "4.9,3,1.4,0.2,setosa\n" +
>>>  "4.7,3.2,1.3,0.2,setosa\n" + "4.6,3.1,1.5,0.2,setosa\n" +
>>>  "5,3.6,1.4,0.2,setosa\n" + "5.4,3.9,1.7,0.4,setosa\n" +
>>>  "4.6,3.4,1.4,0.3,setosa\n" + "5,3.4,1.5,0.2,setosa\n" +
>>>  "4.4,2.9,1.4,0.2,setosa\n" + "4.9,3.1,1.5,0.1,setosa\n" +
>>>  "5.4,3.7,1.5,0.2,setosa\n" + "4.8,3.4,1.6,0.2,setosa\n" +
>>>  "4.8,3,1.4,0.1,setosa\n" + "4.3,3,1.1,0.1,setosa\n" +
>>>  "5.8,4,1.2,0.2,setosa\n" + "5.7,4.4,1.5,0.4,setosa\n" +
>>>  "5.4,3.9,1.3,0.4,setosa\n" + "5.1,3.5,1.4,0.3,setosa\n" +
>>>  "5.7,3.8,1.7,0.3,setosa\n" + "5.1,3.8,1.5,0.3,setosa\n" +
>>>  "5.4,3.4,1.7,0.2,setosa\n" + "5.1,3.7,1.5,0.4,setosa\n" +
>>>  "4.6,3.6,1,0.2,setosa\n" + "5.1,3.3,1.7,0.5,setosa\n" +
>>>  "4.8,3.4,1.9,0.2,setosa\n" + "5,3,1.6,0.2,setosa\n" +
>>>  "5,3.4,1.6,0.4,setosa\n" + "5.2,3.5,1.5,0.2,setosa\n" +
>>>  "5.2,3.4,1.4,0.2,setosa\n" + "4.7,3.2,1.6,0.2,setosa\n" +
>>>  "4.8,3.1,1.6,0.2,setosa\n" + "5.4,3.4,1.5,0.4,setosa\n" +
>>>  "5.2,4.1,1.5,0.1,setosa\n" + "5.5,4.2,1.4,0.2,setosa\n" +
>>>  "4.9,3.1,1.5,0.2,setosa\n" + "5,3.2,1.2,0.2,setosa\n" +
>>>  "5.5,3.5,1.3,0.2,setosa\n" + "4.9,3.6,1.4,0.1,setosa\n" +
>>>  "4.4,3,1.3,0.2,setosa\n" + "5.1,3.4,1.5,0.2,setosa\n" +
>>>  "5,3.5,1.3,0.3,setosa\n" + "4.5,2.3,1.3,0.3,setosa\n" +
>>>  "4.4,3.2,1.3,0.2,setosa\n" + "5,3.5,1.6,0.6,setosa\n" +
>>>  "5.1,3.8,1.9,0.4,setosa\n" + "4.8,3,1.4,0.3,setosa\n" +
>>>  "5.1,3.8,1.6,0.2,setosa\n" + "4.6,3.2,1.4,0.2,setosa\n" +
>>>  "5.3,3.7,1.5,0.2,setosa\n" + "5,3.3,1.4,0.2,setosa\n" +
>>>  "7,3.2,4.7,1.4,versicolor\n" + "6.4,3.2,4.5,1.5,versicolor\n"
>>>  + "6.9,3.1,4.9,1.5,versicolor\n" +
>>>  "5.5,2.3,4,1.3,versicolor\n" + "6.5,2.8,4.6,1.5,versicolor\n"
>>>  + "5.7,2.8,4.5,1.3,versicolor\n" +
>>>  "6.3,3.3,4.7,1.6,versicolor\n" + "4.9,2.4,3.3,1,versicolor\n"
>>>  + "6.6,2.9,4.6,1.3,versicolor\n" +
>>>  "5.2,2.7,3.9,1.4,versicolor\n" + "5,2,3.5,1,versicolor\n" +
>>>  "5.9,3,4.2,1.5,versicolor\n" + "6,2.2,4,1,versicolor\n" +
>>>  "6.1,2.9,4.7,1.4,versicolor\n" +
>>>  "5.6,2.9,3.6,1.3,versicolor\n" +
>>>  "6.7,3.1,4.4,1.4,versicolor\n" + "5.6,3,4.5,1.5,versicolor\n"
>>>  + "5.8,2.7,4.1,1,versicolor\n" +
>>>  "6.2,2.2,4.5,1.5,versicolor\n" +
>>>  "5.6,2.5,3.9,1.1,versicolor\n" +
>>>  "5.9,3.2,4.8,1.8,versicolor\n" + "6.1,2.8,4,1.3,versicolor\n"
>>>  + "6.3,2.5,4.9,1.5,versicolor\n" +
>>>  "6.1,2.8,4.7,1.2,versicolor\n" +
>>>  "6.4,2.9,4.3,1.3,versicolor\n" + "6.6,3,4.4,1.4,versicolor\n"
>>>  + "6.8,2.8,4.8,1.4,versicolor\n" + "6.7,3,5,1.7,versicolor\n"
>>>  + "6,2.9,4.5,1.5,versicolor\n" + "5.7,2.6,3.5,1,versicolor\n"
>>>  + "5.5,2.4,3.8,1.1,versicolor\n" +
>>>  "5.5,2.4,3.7,1,versicolor\n" + "5.8,2.7,3.9,1.2,versicolor\n"
>>>  + "6,2.7,5.1,1.6,versicolor\n" + "5.4,3,4.5,1.5,versicolor\n"
>>>  + "6,3.4,4.5,1.6,versicolor\n" +
>>>  "6.7,3.1,4.7,1.5,versicolor\n" +
>>>  "6.3,2.3,4.4,1.3,versicolor\n" + "5.6,3,4.1,1.3,versicolor\n"
>>>  + "5.5,2.5,4,1.3,versicolor\n" +
>>>  "5.5,2.6,4.4,1.2,versicolor\n" + "6.1,3,4.6,1.4,versicolor\n"
>>>  + "5.8,2.6,4,1.2,versicolor\n" + "5,2.3,3.3,1,versicolor\n" +
>>>  "5.6,2.7,4.2,1.3,versicolor\n" + "5.7,3,4.2,1.2,versicolor\n"
>>>  + "5.7,2.9,4.2,1.3,versicolor\n" +
>>>  "6.2,2.9,4.3,1.3,versicolor\n" + "5.1,2.5,3,1.1,versicolor\n"
>>>  + "5.7,2.8,4.1,1.3,versicolor\n" + "6.3,3.3,6,2.5,virginica\n"
>>>  + "5.8,2.7,5.1,1.9,virginica\n" + "7.1,3,5.9,2.1,virginica\n"
>>>  + "6.3,2.9,5.6,1.8,virginica\n" + "6.5,3,5.8,2.2,virginica\n"
>>>  + "7.6,3,6.6,2.1,virginica\n" + "4.9,2.5,4.5,1.7,virginica\n"
>>>  + "7.3,2.9,6.3,1.8,virginica\n" +
>>>  "6.7,2.5,5.8,1.8,virginica\n" + "7.2,3.6,6.1,2.5,virginica\n"
>>>  + "6.5,3.2,5.1,2,virginica\n" + "6.4,2.7,5.3,1.9,virginica\n"
>>>  + "6.8,3,5.5,2.1,virginica\n" + "5.7,2.5,5,2,virginica\n" +
>>>  "5.8,2.8,5.1,2.4,virginica\n" + "6.4,3.2,5.3,2.3,virginica\n"
>>>  + "6.5,3,5.5,1.8,virginica\n" + "7.7,3.8,6.7,2.2,virginica\n"
>>>  + "7.7,2.6,6.9,2.3,virginica\n" + "6,2.2,5,1.5,virginica\n" +
>>>  "6.9,3.2,5.7,2.3,virginica\n" + "5.6,2.8,4.9,2,virginica\n" +
>>>  "7.7,2.8,6.7,2,virginica\n" + "6.3,2.7,4.9,1.8,virginica\n" +
>>>  "6.7,3.3,5.7,2.1,virginica\n" + "7.2,3.2,6,1.8,virginica\n" +
>>>  "6.2,2.8,4.8,1.8,virginica\n" + "6.1,3,4.9,1.8,virginica\n" +
>>>  "6.4,2.8,5.6,2.1,virginica\n" + "7.2,3,5.8,1.6,virginica\n" +
>>>  "7.4,2.8,6.1,1.9,virginica\n" + "7.9,3.8,6.4,2,virginica\n" +
>>>  "6.4,2.8,5.6,2.2,virginica\n" + "6.3,2.8,5.1,1.5,virginica\n"
>>>  + "6.1,2.6,5.6,1.4,virginica\n" + "7.7,3,6.1,2.3,virginica\n"
>>>  + "6.3,3.4,5.6,2.4,virginica\n" +
>>>  "6.4,3.1,5.5,1.8,virginica\n" + "6,3,4.8,1.8,virginica\n" +
>>>  "6.9,3.1,5.4,2.1,virginica\n" + "6.7,3.1,5.6,2.4,virginica\n"
>>>  + "6.9,3.1,5.1,2.3,virginica\n" +
>>>  "5.8,2.7,5.1,1.9,virginica\n" + "6.8,3.2,5.9,2.3,virginica\n"
>>>  + "6.7,3.3,5.7,2.5,virginica\n" + "6.7,3,5.2,2.3,virginica\n"
>>>  + "6.3,2.5,5,1.9,virginica\n" + "6.5,3,5.2,2,virginica\n" +
>>>  "6.2,3.4,5.4,2.3,virginica\n" + "5.9,3,5.1,1.8,virginica\n";
>>>  List tableRead = rConnection.eval( "read.csv(textConnection(""
>>>  + inputIris + ""), header = FALSE)").asList(); // works!
>>>  double[] d1 = ((REXPVector) ((RList)
>>>  tableRead).get(0)).asDoubles(); double[] d2 = ((REXPVector)
>>>  ((RList) tableRead).get(1)).asDoubles(); double[] d3 =
>>>  ((REXPVector) ((RList) tableRead).get(2)).asDoubles();
>>>  double[] d4 = ((REXPVector) ((RList)
>>>  tableRead).get(3)).asDoubles(); String[] d5 = ((REXPVector)
>>>  ((RList) tableRead).get(4)).asStrings(); // create data frame
>>>  with data.REXP myDf = REXP.createDataFrame(new RList( new
>>>  REXP[] { new REXPDouble(d1), new REXPDouble(d2), new
>>>  REXPDouble(d3), new REXPDouble(d4), new REXPString(d5) })); //
>>>  assign the data to a variable as was
>>>  suggested.rConnection.assign("boxMVariable", myDf); // create
>>>  a string command with that variable name.String boxVariable =
>>>  "boxM(boxMVariable [,-5], boxMVariable[,5]"; // try to execute
>>>  the command... // FAILS with
>>>  org.rosuda.REngine.Rserve.RserveException: eval failed,
>>>  request status: R parser: input incomplete>>>> FAILS ! >>>>
>>>  REXP theBoxMResult = rConnection.eval(boxVariable); <<<< FAILS
>>>  <<<<< sent from ProtonMail <https://protonmail.com>,
>>>  Swiss-based encrypted email. [[alternative HTML version
>>>  deleted]]
>>>  ------------------------------------------------------------------------
>>>  R-devel at r-project.org <mailto:R-devel at r-project.org> mailing
>>>  list https://stat.ethz.ch/mailman/listinfo/r-devel | |
	[[alternative HTML version deleted]]


From murdoch.duncan at gmail.com  Sun Oct 29 12:45:09 2017
From: murdoch.duncan at gmail.com (Duncan Murdoch)
Date: Sun, 29 Oct 2017 07:45:09 -0400
Subject: [Rd] Cannot Compute Box's M (Three Days Trying...)
In-Reply-To: <3vTUHD1PtBDruYfNDtqh8Aom_SVM7c5CwgImGeBOfwq5N1z329qNFlNLnj9dL1NBUJExFwkQmTaBHYy88hXIdWhd4uiamMHFlqKs06TccYU=@protonmail.com>
References: <yNSrSEBSEthk1cJc2W6y3M50LXPWIRpFNyUtLE8yIZMb4guTLWuQi9XjWd4MHnt5vxOZAK1bO32QWqqM26bRU_XpiYnip5jDiyjKWUKIH7w=@protonmail.com>
 <3e5b4dc9-1b9a-4c63-a929-82a127856dbe@gmail.com>
 <P6V3IIqCfJ4SUFtNl9ML3Wmo2cvnL50vlzlUJdvRaAj106MjIojw5ITRt5ZQdkeOa9rnyS6HTxRgg7SUwmPY4CqGPbQFWqYEKCTr_yDVZdM=@protonmail.com>
 <abfb1feb-1da9-8c88-ceb5-98cef28ef406@gmail.com>
 <rl0BFmHLQl4yweaOtoWaJJEScu0VetftcUuusTtgU1qjAdU-8pgrnohMfnzvJQZTY2jPjjraq6xgDDAlxfHHZunKbfGydZILJQ8xk4g0IWc=@protonmail.com>
 <ee03e49f-9c97-5e34-d12e-7623effcf062@gmail.com>
 <9BD27QZMzsNhYUSXQNpmzB6M1_eswp75Vyk6vgZ67jKV3Mf8H3ji_fE_YVPRSOl9Pb7XZDy1nfJCHyqt5J8hzVCzg9JxsJ-piLcIeu_7JZ4=@protonmail.com>
 <abe44eb4-e08a-087a-1870-dc73d1e59da4@gmail.com>
 <3vTUHD1PtBDruYfNDtqh8Aom_SVM7c5CwgImGeBOfwq5N1z329qNFlNLnj9dL1NBUJExFwkQmTaBHYy88hXIdWhd4uiamMHFlqKs06TccYU=@protonmail.com>
Message-ID: <ae21b1c0-7c3b-d244-46e7-5a039e21296b@gmail.com>

On 29/10/2017 7:26 AM, Morkus wrote:
> Thanks Duncan. I can't tell you how helpful all your terrific replies 
> have been.
> 
> I think the biggest surprise is that nobody appears to be using Java and 
> R together like I"m trying to do. I suppose it should be a surprise 
> since there are no books on the subject and almost no technical 
> documentation other than a few sites here and there.
> 
> -----
> 
> I originally had the "int" as the return type for the factors, but that 
> didn't make any difference.
> 
> So, let me ask you. *What I can get working is* calling an R Script from 
> Java. Literally opening the ".R" file and reading it line by line and 
> evaluating it. That works. Is there any reason why that's not a viable 
> way to go?

I can't answer this very specifically, because it depends so much on 
your circumstances.  But why bother with the file system at all? 
Presumably if you can read a string, you can construct the same string 
within your Java program (perhaps as a literal string, perhaps by 
building it from local variables).

> 
> The one thing I don't know how to do is pass a parameter to an RScript 
> from Java. *Is it possible to pass a parameter to an RScript from Java?* 
> If I can pass a parameter to an RScript, then it's not static and I 
> could use it as a "function" to call for different values.
> 
> Look forward to your reply.

I can't really answer that question, since I have no experience at all 
in calling R from Java.  But if you want to pass a parameter named "x" 
with value 123 from Java to R, why not just construct and evaluate the 
statement "x <- 123"?

Duncan Murdoch

> 
> 
> 
> Sent from ProtonMail <https://protonmail.com>, Swiss-based encrypted email.
> 
> 
>> -------- Original Message --------
>> Subject: Re: [Rd] Cannot Compute Box's M (Three Days Trying...)
>> Local Time: October 28, 2017 4:51 PM
>> UTC Time: October 28, 2017 8:51 PM
>> From: murdoch.duncan at gmail.com
>> To: Morkus <morkus at protonmail.com>
>> r-devel at r-project.org <r-devel at r-project.org>
>>
>> On 28/10/2017 8:59 AM, Morkus wrote:
>>
>>     Hey Duncan,
>>     Hard to debug? That's an understatement. Eyes bleeding....
>>     In any case, I tried all your suggestions. To get "integer" for the
>>     final column, I had to change the code to get integers instead of
>>     strings.
>>
>>     The last column in iris is actually a factor. That's stored as an
>>     S3-classed integer vector with an attribute listing the levels. Using
>>     strings instead can cause problems in a few R functions (they want
>>     factors, and don't do automatic conversions), but the errors you're
>>     seeing seem more fundamental.
>>     double[] d1 = ((REXPVector) ((RList) tableRead).get(0)).asDoubles();
>>     double[] d2 = ((REXPVector) ((RList) tableRead).get(1)).asDoubles();
>>     double[] d3 = ((REXPVector) ((RList) tableRead).get(2)).asDoubles();
>>     double[] d4 = ((REXPVector) ((RList) tableRead).get(3)).asDoubles();
>>     /int/*[] d5 = ((REXPVector) ((RList)
>>     tableRead).get(*4*)).asIntegers();*
>>     /// create data frame with data.
>>     /REXP myDf = REXP.createDataFrame(new RList(
>>     new REXP[]
>>     {
>>     new REXPDouble(d1),
>>     new REXPDouble(d2),
>>     new REXPDouble(d3),
>>     new REXPDouble(d4),
>>     *new */REXPInteger(d5)/
>>     }));
>>     Here are the results from the eval debug code.
>>     head(boxMVariable)? ? Gives the high level 5 objects.
>>     typeof(boxMVariable): ?list?
>>     class(boxMVariable) : ?data.frame?
>>     names(boxMVariable)? ? String object returned (couldn't evaluate it)
>>
>>     That sounds like it could be serious. Dataframe names shouldn't be
>>     particularly complicated, so there shouldn't be a problem evaluating
>>     them. (But maybe this is just hard in Java for some reason. As I've
>>     mentioned, I'm not familiar with the R Java interface.) If there
>>     really
>>     is a problem with the way the names have been constructed, that would
>>     explain the error in str(), and would lead to lots of other weird
>>     problems.
>>
>>     Another way to look at R objects from within R is to use
>>     .Internal(inspect( x )). For example,
>>
>>     .Internal(inspect(names(iris)))
>>     @7f898ff9e2e8 16 STRSXP g0c4 [NAM(2)] (len=5, tl=0)
>>     @7f8992c41878 09 CHARSXP g0c2 [gp=0x61,ATT] [ASCII] [cached]
>>     "Sepal.Length"
>>     @7f8992c41840 09 CHARSXP g0c2 [gp=0x61] [ASCII] [cached] "Sepal.Width"
>>     @7f8992c41808 09 CHARSXP g0c2 [gp=0x61,ATT] [ASCII] [cached]
>>     "Petal.Length"
>>     @7f898ba99f78 09 CHARSXP g0c2 [gp=0x61,ATT] [ASCII] [cached]
>>     "Petal.Width"
>>     @7f898b9a3468 09 CHARSXP g0c1 [gp=0x61,ATT] [ASCII] [cached] "Species"
>>
>>     You can also look at R objects while in a debugger like gdb using the
>>     R_PV() function; see Writing R Extensions for details if this is
>>     something available to you.
>>
>>     ncol(boxMVariable)? - 5
>>     nrow(boxMVariable)?? - 150
>>     typeof(boxMVariable)
>>     for (i in 1:5) print(typeof(boxMVariable[[i]]))
>>     /I get:/
>>     1 ?> double
>>     2 ?> double
>>     3? ?> double
>>     4 ?> double
>>     5 ->? integer
>>     Is this problem "debug-proof"?
>>     Does anyone out there actually use Java and R?
>>
>>     I don't know anyone who does that. It seems like a bad idea just
>>     because it's always easiest to do what everyone else does.
>>
>>     I think it's more common to call Java from R than the reverse.
>>
>>     Duncan Murdoch
>>     Sigh...
>>     Sent from ProtonMail https://protonmail.com, Swiss-based encrypted
>>     email.
>>
>>         -------- Original Message --------
>>         Subject: Re: [Rd] Cannot Compute Box's M (Three Days Trying...)
>>         Local Time: October 28, 2017 7:31 AM
>>         UTC Time: October 28, 2017 11:31 AM
>>         From: murdoch.duncan at gmail.com <mailto:murdoch.duncan at gmail.com>
>>         To: Morkus morkus at protonmail.com <mailto:morkus at protonmail.com>
>>         r-devel at r-project.org <mailto:r-devel at r-project.org>
>>         r-devel at r-project.org <mailto:r-devel at r-project.org>
>>         On 28/10/2017 7:12 AM, Morkus wrote:
>>
>>         |Thanks Duncan. Awesome ideas! I think we're getting closer! I
>>         tried what you suggested and got a possibly better error... .
>>         . . rConnection.assign("boxMVariable", myDf); *String resultBV
>>         *= /"str(boxMVariable)"/; /// your suggestion./ /RESULTING
>>         ERROR:/ /Error in format.default(nam.ob, width = max(ncn),
>>         justify = "left") : invalid 'width' argument/ (No idea what
>>         this means). That looks like an error occurring in the str()
>>         function. I've never seen such a think in a regular R session,
>>         so I would guess that either your boxMVariable object is set
>>         up in a weird way that is confusing str(), or your R session
>>         in Java is messed up. This is likely to be pretty hard to
>>         debug. As a general strategy, I'd try to find out exactly what
>>         is in boxMVariable first. Since str() doesn't work, try
>>         printing things like head(boxMVariable) class(boxMVariable)
>>         names(boxMVariable) ncol(boxMVariable) nrow(boxMVariable)
>>         typeof(boxMVariable) for (i in 1:5)
>>         print(typeof(boxMVariable[[i]])) etc. Make sure the values
>>         match what you see in a regular R session: boxMVariable <-
>>         iris head(boxMVariable) Sepal.Length Sepal.Width Petal.Length
>>         Petal.Width Species 1 5.1 3.5 1.4 0.2 setosa 2 4.9 3.0 1.4 0.2
>>         setosa 3 4.7 3.2 1.3 0.2 setosa 4 4.6 3.1 1.5 0.2 setosa 5 5.0
>>         3.6 1.4 0.2 setosa 6 5.4 3.9 1.7 0.4 setosa
>>         class(boxMVariable) [1] "data.frame" names(boxMVariable) [1]
>>         "Sepal.Length" "Sepal.Width" "Petal.Length" "Petal.Width"
>>         "Species" ncol(boxMVariable) [1] 5 nrow(boxMVariable) [1] 150
>>         typeof(boxMVariable) [1] "list" for (i in 1:5) |
>>
>>          *
>>             print(typeof(boxMVariable[[i]]))
>>             [1] "double"
>>             [1] "double"
>>             [1] "double"
>>             [1] "double"
>>             [1] "integer"
>>             For testing, I'm using the same standard IRIS dataset as
>>             the Box's M
>>             documentation shows in biotools:
>>             Examples
>>             data(iris)
>>             /boxM(iris[, -5], iris[, 5])/
>>             /-------/
>>             **
>>             Now, in the debugger, the built values of myDf are these:
>>             /myDf/ = {org.rosuda.REngine.REXPGenericVector at 562}
>>             "org.rosuda.REngine./REXPGenericVector/@17d99928+[5]?
>>             ? payload = {org.rosuda.REngine./RList/@566} size = 5
>>             ? 0 = {org.rosuda.REngine.REXPDouble at 570}
>>             "org.rosuda.REngine./REXPDouble/@6fffcba5[150]"
>>             ? 1 = {org.rosuda.REngine.REXPDouble at 571}
>>             "org.rosuda.REngine./REXPDouble/@34340fab[150]?
>>             ? 2 = {org.rosuda.REngine.REXPDouble at 572}
>>             "org.rosuda.REngine./REXPDouble/@2aafb23c[150]"
>>             ? 3 = {org.rosuda.REngine.REXPDouble at 573}
>>             "org.rosuda.REngine./REXPDouble/@2b80d80f[150]?
>>             ? 4 = {org.rosuda.REngine.REXPString at 574}
>>             "org.rosuda.REngine./REXPString/@3ab39c39[150]?
>>             Does this help?
>>             Please let me know what else I can try.
>>             Thanks,
>>             Sent from ProtonMail https://protonmail.com, Swiss-based
>>             encrypted
>>             email.
>>
>>             |-------- Original Message -------- Subject: Re: [Rd]
>>             Cannot Compute Box's M (Three Days Trying...) Local Time:
>>             October 28, 2017 6:48 AM UTC Time: October 28, 2017 10:48
>>             AM From: murdoch.duncan at gmail.com
>>             <mailto:murdoch.duncan at gmail.com> To: Morkus
>>             morkus at protonmail.com <mailto:morkus at protonmail.com>
>>             r-devel at r-project.org <mailto:r-devel at r-project.org>
>>             r-devel at r-project.org <mailto:r-devel at r-project.org> On
>>             28/10/2017 6:26 AM, Morkus wrote: |I'm not sure what you
>>             mean. Could you please be more specific? You were trying
>>             to eval an expression that you constructed in Java. I was
>>             suggesting that before you eval it, you print it. If I
>>             print the string, I get: /boxM(boxMVariable[, -5],
>>             boxMVariable[, 5])/ Right, that's what I was suggesting
>>             you do. Now you've fixed the syntax error, that looks
>>             okay. If I'm reading these messages in the right order,
>>             your latest error is Error in |[.data.frame|(boxMVariable,
>>             , -5) : undefined columns selected The expression there is
>>             a funny way of printing boxMVariable[,-5]. So now you need
>>             to figure out why it thinks you've selected undefined
>>             columns. This is a little perplexing, because you're
>>             asking for all columns except column 5, and that works
>>             whether or not you have a column | 5. So I'd guess there's
>>             something weird about boxMVariable. You should ask R to
>>             print it, and to print str(boxMVariable), to make sure
>>             it's a regular dataframe containing 4 numeric columns and
>>             one factor or character column. Duncan Murdoch |From this
>>             code: . . . /// assign the data to a variable.
>>             /rConnection.assign("boxMVariable", myDf); /// create a
>>             string command with that variable name. /String
>>             boxVariable = "boxM(boxMVariable[, -5], boxMVariable[,
>>             5])"; /System/./out/./println/(/boxVariable/);? // print
>>             the string? Not sure what is meant. Sorry if I didn't
>>             understand your suggestion. Look forward to hearing back
>>             from you. Thanks, Sent from ProtonMail
>>             https://protonmail.com, Swiss-based encrypted email.
>>             -------- Original Message -------- Subject: Re: [Rd]
>>             Cannot Compute Box's M (Three Days Trying...) Local Time:
>>             October 27, 2017 6:09 PM UTC Time: October 27, 2017 10:09
>>             PM From: murdoch.duncan at gmail.com
>>             <mailto:murdoch.duncan at gmail.com> To: Morkus
>>             morkus at protonmail.com <mailto:morkus at protonmail.com>,
>>             r-devel at r-project.org <mailto:r-devel at r-project.org>
>>             r-devel at r-project.org <mailto:r-devel at r-project.org> Just
>>             print the string you are asking to R to evaluate. It
>>             doesn't make any sense as an R expression. Fix that, and
>>             things will work. Duncan Murdoch On 27/10/2017 3:41 PM,
>>             Morkus via R-devel wrote: |It can't be this hard, right? I
>>             really need a shove in the right direction here. Been
>>             spinning wheels for three days. Cannot get past the
>>             errors. I'm doing something wrong, obviously, since I can
>>             easily compute the Box's M right there in RStudio But I
>>             don't see what is wrong below with the coding equivalent.
>>             The entire code snippet is below. The code fails below on
>>             the call to the boxM statistic call. PLEASE HELP!!! Thanks
>>             in advance,
>>             ------------------------------------------------------------------------
>>             rConnection.eval("library('biotools')"); String inputIris
>>             = "5.1,3.5,1.4,0.2,setosa\n" + "4.9,3,1.4,0.2,setosa\n" +
>>             "4.7,3.2,1.3,0.2,setosa\n" + "4.6,3.1,1.5,0.2,setosa\n" +
>>             "5,3.6,1.4,0.2,setosa\n" + "5.4,3.9,1.7,0.4,setosa\n" +
>>             "4.6,3.4,1.4,0.3,setosa\n" + "5,3.4,1.5,0.2,setosa\n" +
>>             "4.4,2.9,1.4,0.2,setosa\n" + "4.9,3.1,1.5,0.1,setosa\n" +
>>             "5.4,3.7,1.5,0.2,setosa\n" + "4.8,3.4,1.6,0.2,setosa\n" +
>>             "4.8,3,1.4,0.1,setosa\n" + "4.3,3,1.1,0.1,setosa\n" +
>>             "5.8,4,1.2,0.2,setosa\n" + "5.7,4.4,1.5,0.4,setosa\n" +
>>             "5.4,3.9,1.3,0.4,setosa\n" + "5.1,3.5,1.4,0.3,setosa\n" +
>>             "5.7,3.8,1.7,0.3,setosa\n" + "5.1,3.8,1.5,0.3,setosa\n" +
>>             "5.4,3.4,1.7,0.2,setosa\n" + "5.1,3.7,1.5,0.4,setosa\n" +
>>             "4.6,3.6,1,0.2,setosa\n" + "5.1,3.3,1.7,0.5,setosa\n" +
>>             "4.8,3.4,1.9,0.2,setosa\n" + "5,3,1.6,0.2,setosa\n" +
>>             "5,3.4,1.6,0.4,setosa\n" + "5.2,3.5,1.5,0.2,setosa\n" +
>>             "5.2,3.4,1.4,0.2,setosa\n" + "4.7,3.2,1.6,0.2,setosa\n" +
>>             "4.8,3.1,1.6,0.2,setosa\n" + "5.4,3.4,1.5,0.4,setosa\n" +
>>             "5.2,4.1,1.5,0.1,setosa\n" + "5.5,4.2,1.4,0.2,setosa\n" +
>>             "4.9,3.1,1.5,0.2,setosa\n" + "5,3.2,1.2,0.2,setosa\n" +
>>             "5.5,3.5,1.3,0.2,setosa\n" + "4.9,3.6,1.4,0.1,setosa\n" +
>>             "4.4,3,1.3,0.2,setosa\n" + "5.1,3.4,1.5,0.2,setosa\n" +
>>             "5,3.5,1.3,0.3,setosa\n" + "4.5,2.3,1.3,0.3,setosa\n" +
>>             "4.4,3.2,1.3,0.2,setosa\n" + "5,3.5,1.6,0.6,setosa\n" +
>>             "5.1,3.8,1.9,0.4,setosa\n" + "4.8,3,1.4,0.3,setosa\n" +
>>             "5.1,3.8,1.6,0.2,setosa\n" + "4.6,3.2,1.4,0.2,setosa\n" +
>>             "5.3,3.7,1.5,0.2,setosa\n" + "5,3.3,1.4,0.2,setosa\n" +
>>             "7,3.2,4.7,1.4,versicolor\n" +
>>             "6.4,3.2,4.5,1.5,versicolor\n" +
>>             "6.9,3.1,4.9,1.5,versicolor\n" +
>>             "5.5,2.3,4,1.3,versicolor\n" +
>>             "6.5,2.8,4.6,1.5,versicolor\n" +
>>             "5.7,2.8,4.5,1.3,versicolor\n" +
>>             "6.3,3.3,4.7,1.6,versicolor\n" +
>>             "4.9,2.4,3.3,1,versicolor\n" +
>>             "6.6,2.9,4.6,1.3,versicolor\n" +
>>             "5.2,2.7,3.9,1.4,versicolor\n" + "5,2,3.5,1,versicolor\n"
>>             + "5.9,3,4.2,1.5,versicolor\n" + "6,2.2,4,1,versicolor\n"
>>             + "6.1,2.9,4.7,1.4,versicolor\n" +
>>             "5.6,2.9,3.6,1.3,versicolor\n" +
>>             "6.7,3.1,4.4,1.4,versicolor\n" +
>>             "5.6,3,4.5,1.5,versicolor\n" +
>>             "5.8,2.7,4.1,1,versicolor\n" +
>>             "6.2,2.2,4.5,1.5,versicolor\n" +
>>             "5.6,2.5,3.9,1.1,versicolor\n" +
>>             "5.9,3.2,4.8,1.8,versicolor\n" +
>>             "6.1,2.8,4,1.3,versicolor\n" +
>>             "6.3,2.5,4.9,1.5,versicolor\n" +
>>             "6.1,2.8,4.7,1.2,versicolor\n" +
>>             "6.4,2.9,4.3,1.3,versicolor\n" +
>>             "6.6,3,4.4,1.4,versicolor\n" +
>>             "6.8,2.8,4.8,1.4,versicolor\n" +
>>             "6.7,3,5,1.7,versicolor\n" + "6,2.9,4.5,1.5,versicolor\n"
>>             + "5.7,2.6,3.5,1,versicolor\n" +
>>             "5.5,2.4,3.8,1.1,versicolor\n" +
>>             "5.5,2.4,3.7,1,versicolor\n" +
>>             "5.8,2.7,3.9,1.2,versicolor\n" +
>>             "6,2.7,5.1,1.6,versicolor\n" +
>>             "5.4,3,4.5,1.5,versicolor\n" +
>>             "6,3.4,4.5,1.6,versicolor\n" +
>>             "6.7,3.1,4.7,1.5,versicolor\n" +
>>             "6.3,2.3,4.4,1.3,versicolor\n" +
>>             "5.6,3,4.1,1.3,versicolor\n" +
>>             "5.5,2.5,4,1.3,versicolor\n" +
>>             "5.5,2.6,4.4,1.2,versicolor\n" +
>>             "6.1,3,4.6,1.4,versicolor\n" +
>>             "5.8,2.6,4,1.2,versicolor\n" + "5,2.3,3.3,1,versicolor\n"
>>             + "5.6,2.7,4.2,1.3,versicolor\n" +
>>             "5.7,3,4.2,1.2,versicolor\n" +
>>             "5.7,2.9,4.2,1.3,versicolor\n" +
>>             "6.2,2.9,4.3,1.3,versicolor\n" +
>>             "5.1,2.5,3,1.1,versicolor\n" +
>>             "5.7,2.8,4.1,1.3,versicolor\n" +
>>             "6.3,3.3,6,2.5,virginica\n" +
>>             "5.8,2.7,5.1,1.9,virginica\n" +
>>             "7.1,3,5.9,2.1,virginica\n" +
>>             "6.3,2.9,5.6,1.8,virginica\n" +
>>             "6.5,3,5.8,2.2,virginica\n" + "7.6,3,6.6,2.1,virginica\n"
>>             + "4.9,2.5,4.5,1.7,virginica\n" +
>>             "7.3,2.9,6.3,1.8,virginica\n" +
>>             "6.7,2.5,5.8,1.8,virginica\n" +
>>             "7.2,3.6,6.1,2.5,virginica\n" +
>>             "6.5,3.2,5.1,2,virginica\n" +
>>             "6.4,2.7,5.3,1.9,virginica\n" +
>>             "6.8,3,5.5,2.1,virginica\n" + "5.7,2.5,5,2,virginica\n" +
>>             "5.8,2.8,5.1,2.4,virginica\n" +
>>             "6.4,3.2,5.3,2.3,virginica\n" +
>>             "6.5,3,5.5,1.8,virginica\n" +
>>             "7.7,3.8,6.7,2.2,virginica\n" +
>>             "7.7,2.6,6.9,2.3,virginica\n" + "6,2.2,5,1.5,virginica\n"
>>             + "6.9,3.2,5.7,2.3,virginica\n" +
>>             "5.6,2.8,4.9,2,virginica\n" + "7.7,2.8,6.7,2,virginica\n"
>>             + "6.3,2.7,4.9,1.8,virginica\n" +
>>             "6.7,3.3,5.7,2.1,virginica\n" +
>>             "7.2,3.2,6,1.8,virginica\n" +
>>             "6.2,2.8,4.8,1.8,virginica\n" +
>>             "6.1,3,4.9,1.8,virginica\n" +
>>             "6.4,2.8,5.6,2.1,virginica\n" +
>>             "7.2,3,5.8,1.6,virginica\n" +
>>             "7.4,2.8,6.1,1.9,virginica\n" +
>>             "7.9,3.8,6.4,2,virginica\n" +
>>             "6.4,2.8,5.6,2.2,virginica\n" +
>>             "6.3,2.8,5.1,1.5,virginica\n" +
>>             "6.1,2.6,5.6,1.4,virginica\n" +
>>             "7.7,3,6.1,2.3,virginica\n" +
>>             "6.3,3.4,5.6,2.4,virginica\n" +
>>             "6.4,3.1,5.5,1.8,virginica\n" + "6,3,4.8,1.8,virginica\n"
>>             + "6.9,3.1,5.4,2.1,virginica\n" +
>>             "6.7,3.1,5.6,2.4,virginica\n" +
>>             "6.9,3.1,5.1,2.3,virginica\n" +
>>             "5.8,2.7,5.1,1.9,virginica\n" +
>>             "6.8,3.2,5.9,2.3,virginica\n" +
>>             "6.7,3.3,5.7,2.5,virginica\n" +
>>             "6.7,3,5.2,2.3,virginica\n" + "6.3,2.5,5,1.9,virginica\n"
>>             + "6.5,3,5.2,2,virginica\n" +
>>             "6.2,3.4,5.4,2.3,virginica\n" +
>>             "5.9,3,5.1,1.8,virginica\n"; List tableRead =
>>             rConnection.eval( "read.csv(textConnection("" + inputIris
>>             + ""), header = FALSE)").asList(); // works! double[] d1 =
>>             ((REXPVector) ((RList) tableRead).get(0)).asDoubles();
>>             double[] d2 = ((REXPVector) ((RList)
>>             tableRead).get(1)).asDoubles(); double[] d3 =
>>             ((REXPVector) ((RList) tableRead).get(2)).asDoubles();
>>             double[] d4 = ((REXPVector) ((RList)
>>             tableRead).get(3)).asDoubles(); String[] d5 =
>>             ((REXPVector) ((RList) tableRead).get(4)).asStrings(); //
>>             create data frame with data.REXP myDf =
>>             REXP.createDataFrame(new RList( new REXP[] { new
>>             REXPDouble(d1), new REXPDouble(d2), new REXPDouble(d3),
>>             new REXPDouble(d4), new REXPString(d5) })); // assign the
>>             data to a variable as was
>>             suggested.rConnection.assign("boxMVariable", myDf); //
>>             create a string command with that variable name.String
>>             boxVariable = "boxM(boxMVariable [,-5], boxMVariable[,5]";
>>             // try to execute the command... // FAILS with
>>             org.rosuda.REngine.Rserve.RserveException: eval failed,
>>             request status: R parser: input incomplete>>>> FAILS !
>>             >>>> REXP theBoxMResult = rConnection.eval(boxVariable);
>>             <<<< FAILS <<<<< sent from ProtonMail
>>             <https://protonmail.com>, Swiss-based encrypted email.
>>             [[alternative HTML version deleted]]
>>             ------------------------------------------------------------------------
>>             R-devel at r-project.org <mailto:R-devel at r-project.org>
>>             mailing list https://stat.ethz.ch/mailman/listinfo/r-devel
>>             | | |
>>
>>
>


From morkus at protonmail.com  Sun Oct 29 14:01:08 2017
From: morkus at protonmail.com (Morkus)
Date: Sun, 29 Oct 2017 09:01:08 -0400
Subject: [Rd] Cannot Compute Box's M (Three Days Trying...)
In-Reply-To: <ae21b1c0-7c3b-d244-46e7-5a039e21296b@gmail.com>
References: <yNSrSEBSEthk1cJc2W6y3M50LXPWIRpFNyUtLE8yIZMb4guTLWuQi9XjWd4MHnt5vxOZAK1bO32QWqqM26bRU_XpiYnip5jDiyjKWUKIH7w=@protonmail.com>
 <3e5b4dc9-1b9a-4c63-a929-82a127856dbe@gmail.com>
 <P6V3IIqCfJ4SUFtNl9ML3Wmo2cvnL50vlzlUJdvRaAj106MjIojw5ITRt5ZQdkeOa9rnyS6HTxRgg7SUwmPY4CqGPbQFWqYEKCTr_yDVZdM=@protonmail.com>
 <abfb1feb-1da9-8c88-ceb5-98cef28ef406@gmail.com>
 <rl0BFmHLQl4yweaOtoWaJJEScu0VetftcUuusTtgU1qjAdU-8pgrnohMfnzvJQZTY2jPjjraq6xgDDAlxfHHZunKbfGydZILJQ8xk4g0IWc=@protonmail.com>
 <ee03e49f-9c97-5e34-d12e-7623effcf062@gmail.com>
 <9BD27QZMzsNhYUSXQNpmzB6M1_eswp75Vyk6vgZ67jKV3Mf8H3ji_fE_YVPRSOl9Pb7XZDy1nfJCHyqt5J8hzVCzg9JxsJ-piLcIeu_7JZ4=@protonmail.com>
 <abe44eb4-e08a-087a-1870-dc73d1e59da4@gmail.com>
 <3vTUHD1PtBDruYfNDtqh8Aom_SVM7c5CwgImGeBOfwq5N1z329qNFlNLnj9dL1NBUJExFwkQmTaBHYy88hXIdWhd4uiamMHFlqKs06TccYU=@protonmail.com>
 <ae21b1c0-7c3b-d244-46e7-5a039e21296b@gmail.com>
Message-ID: <yBJfX4WjevNGyZ5SgHYCo6jzpWa0eniZt751IWhfzVnyh1WH1QiaGGohK3Q0D_rHbHsPTmXL9E7laTfz_wBkgBL-T2jRxipDY3Nz0J97iTM=@protonmail.com>

Hey Duncan,

Since Java is the #1 language and R is extremely popular, I think the most telling thing is that nobody on the "R-devel" forum (where people do "programming with R") is doing R and Java like I'm doing: calling R from Java and passing data structures.

So it appears I'm clearly pushing R somewhere it doesn't want to go. And, the boxM issue is more or less debug-proof at this moment.

Perhaps I'll need to off-shore this issue for resolution for a few hundred bucks? I'm at the point now where I probably need to just pay somebody to get this crazy BoxM thing working! :(

Thanks again,

Sent from [ProtonMail](https://protonmail.com), Swiss-based encrypted email.

> -------- Original Message --------
> Subject: Re: [Rd] Cannot Compute Box's M (Three Days Trying...)
> Local Time: October 29, 2017 7:45 AM
> UTC Time: October 29, 2017 11:45 AM
> From: murdoch.duncan at gmail.com
> To: Morkus <morkus at protonmail.com>
> r-devel at r-project.org <r-devel at r-project.org>
>
> On 29/10/2017 7:26 AM, Morkus wrote:
>
>> Thanks Duncan. I can't tell you how helpful all your terrific replies
>> have been.
>> I think the biggest surprise is that nobody appears to be using Java and
>> R together like I"m trying to do. I suppose it should be a surprise
>> since there are no books on the subject and almost no technical
>> documentation other than a few sites here and there.
>> ---------------------------------------------------------------
>>
>> I originally had the "int" as the return type for the factors, but that
>> didn't make any difference.
>> So, let me ask you. What I can get working is calling an R Script from
>> Java. Literally opening the ".R" file and reading it line by line and
>> evaluating it. That works. Is there any reason why that's not a viable
>> way to go?
>>
>> I can't answer this very specifically, because it depends so much on
>> your circumstances. But why bother with the file system at all?
>> Presumably if you can read a string, you can construct the same string
>> within your Java program (perhaps as a literal string, perhaps by
>> building it from local variables).
>> The one thing I don't know how to do is pass a parameter to an RScript
>> from Java. Is it possible to pass a parameter to an RScript from Java?
>> If I can pass a parameter to an RScript, then it's not static and I
>> could use it as a "function" to call for different values.
>> Look forward to your reply.
>>
>> I can't really answer that question, since I have no experience at all
>> in calling R from Java. But if you want to pass a parameter named "x"
>> with value 123 from Java to R, why not just construct and evaluate the
>> statement "x <- 123"?
	[[alternative HTML version deleted]]


From dtemplelang at ucdavis.edu  Sun Oct 29 14:56:42 2017
From: dtemplelang at ucdavis.edu (Duncan Temple Lang)
Date: Sun, 29 Oct 2017 13:56:42 +0000
Subject: [Rd] Cannot Compute Box's M (Three Days Trying...)
In-Reply-To: <yBJfX4WjevNGyZ5SgHYCo6jzpWa0eniZt751IWhfzVnyh1WH1QiaGGohK3Q0D_rHbHsPTmXL9E7laTfz_wBkgBL-T2jRxipDY3Nz0J97iTM=@protonmail.com>
References: <yNSrSEBSEthk1cJc2W6y3M50LXPWIRpFNyUtLE8yIZMb4guTLWuQi9XjWd4MHnt5vxOZAK1bO32QWqqM26bRU_XpiYnip5jDiyjKWUKIH7w=@protonmail.com>
 <3e5b4dc9-1b9a-4c63-a929-82a127856dbe@gmail.com>
 <P6V3IIqCfJ4SUFtNl9ML3Wmo2cvnL50vlzlUJdvRaAj106MjIojw5ITRt5ZQdkeOa9rnyS6HTxRgg7SUwmPY4CqGPbQFWqYEKCTr_yDVZdM=@protonmail.com>
 <abfb1feb-1da9-8c88-ceb5-98cef28ef406@gmail.com>
 <rl0BFmHLQl4yweaOtoWaJJEScu0VetftcUuusTtgU1qjAdU-8pgrnohMfnzvJQZTY2jPjjraq6xgDDAlxfHHZunKbfGydZILJQ8xk4g0IWc=@protonmail.com>
 <ee03e49f-9c97-5e34-d12e-7623effcf062@gmail.com>
 <9BD27QZMzsNhYUSXQNpmzB6M1_eswp75Vyk6vgZ67jKV3Mf8H3ji_fE_YVPRSOl9Pb7XZDy1nfJCHyqt5J8hzVCzg9JxsJ-piLcIeu_7JZ4=@protonmail.com>
 <abe44eb4-e08a-087a-1870-dc73d1e59da4@gmail.com>
 <3vTUHD1PtBDruYfNDtqh8Aom_SVM7c5CwgImGeBOfwq5N1z329qNFlNLnj9dL1NBUJExFwkQmTaBHYy88hXIdWhd4uiamMHFlqKs06TccYU=@protonmail.com>
 <ae21b1c0-7c3b-d244-46e7-5a039e21296b@gmail.com>
 <yBJfX4WjevNGyZ5SgHYCo6jzpWa0eniZt751IWhfzVnyh1WH1QiaGGohK3Q0D_rHbHsPTmXL9E7laTfz_wBkgBL-T2jRxipDY3Nz0J97iTM=@protonmail.com>
Message-ID: <CABQ6xNYj9SA28p7ku9m0DK+63=RJ+Gvqe=sKLvp5kBQgp2s+1g@mail.gmail.com>

The SJava package from 18 years  ago did (does) have bidirectional calls
from R to Java and Java to R. So you are not pushing
the interface somewhere it doesn't want to go.   But you are going about it
with strings and R syntax which is a much less powerful approach
than working with actual objects and function calls, and as you are finding
out, very cumbersome.   And it helps to know both R and Java well.
You might take a look at the SJava or rJava packages and see how they do
this. But you have to do your own homework first before asking questions
you can answer yourself.

Best,
 Duncan (TL)


On Sun, Oct 29, 2017 at 6:01 AM Morkus via R-devel <r-devel at r-project.org>
wrote:

> Hey Duncan,
>
> Since Java is the #1 language and R is extremely popular, I think the most
> telling thing is that nobody on the "R-devel" forum (where people do
> "programming with R") is doing R and Java like I'm doing: calling R from
> Java and passing data structures.
>
> So it appears I'm clearly pushing R somewhere it doesn't want to go. And,
> the boxM issue is more or less debug-proof at this moment.
>
> Perhaps I'll need to off-shore this issue for resolution for a few hundred
> bucks? I'm at the point now where I probably need to just pay somebody to
> get this crazy BoxM thing working! :(
>
> Thanks again,
>
> Sent from [ProtonMail](https://protonmail.com), Swiss-based encrypted
> email.
>
> > -------- Original Message --------
> > Subject: Re: [Rd] Cannot Compute Box's M (Three Days Trying...)
> > Local Time: October 29, 2017 7:45 AM
> > UTC Time: October 29, 2017 11:45 AM
> > From: murdoch.duncan at gmail.com
> > To: Morkus <morkus at protonmail.com>
> > r-devel at r-project.org <r-devel at r-project.org>
> >
> > On 29/10/2017 7:26 AM, Morkus wrote:
> >
> >> Thanks Duncan. I can't tell you how helpful all your terrific replies
> >> have been.
> >> I think the biggest surprise is that nobody appears to be using Java and
> >> R together like I"m trying to do. I suppose it should be a surprise
> >> since there are no books on the subject and almost no technical
> >> documentation other than a few sites here and there.
> >> ---------------------------------------------------------------
> >>
> >> I originally had the "int" as the return type for the factors, but that
> >> didn't make any difference.
> >> So, let me ask you. What I can get working is calling an R Script from
> >> Java. Literally opening the ".R" file and reading it line by line and
> >> evaluating it. That works. Is there any reason why that's not a viable
> >> way to go?
> >>
> >> I can't answer this very specifically, because it depends so much on
> >> your circumstances. But why bother with the file system at all?
> >> Presumably if you can read a string, you can construct the same string
> >> within your Java program (perhaps as a literal string, perhaps by
> >> building it from local variables).
> >> The one thing I don't know how to do is pass a parameter to an RScript
> >> from Java. Is it possible to pass a parameter to an RScript from Java?
> >> If I can pass a parameter to an RScript, then it's not static and I
> >> could use it as a "function" to call for different values.
> >> Look forward to your reply.
> >>
> >> I can't really answer that question, since I have no experience at all
> >> in calling R from Java. But if you want to pass a parameter named "x"
> >> with value 123 from Java to R, why not just construct and evaluate the
> >> statement "x <- 123"?
>         [[alternative HTML version deleted]]
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>
-- 
Duncan Temple Lang
Director, Data Science Initiative
Professor of Statistics

	[[alternative HTML version deleted]]


From morkus at protonmail.com  Sun Oct 29 16:34:59 2017
From: morkus at protonmail.com (Morkus)
Date: Sun, 29 Oct 2017 11:34:59 -0400
Subject: [Rd] Renjin?
Message-ID: <veiwXiZxL7CzF_h3k4rCiK5kHWZc3NKcVoHdxDFUkiMt5bTe7qm9sIZZSFUhSDk9JM1Tn6uOaAiN1bPJoGoutXjIg0IwNbHCJoA8dYukl6I=@protonmail.com>

Hi All,

OK, in the "back to the drawing board" department, I found what looks like a much better solution to using R in Java. Renjin.

Looking at the docs and then trying a quick example, didn't quite work.

Of course I'm missing something.

Although I'm telling the engine to require ("biotools") just like I would in R itself, when I get to the line of code that does the actual call

engine.eval("boxMResult <- boxM(inputIris [,-5], inputIris[,5])");

Then, I get:

Exception in thread "main" org.renjin.eval.EvalException: could not find function 'boxM'

Am I using Renjin as intended? Biotools is installed in R and works fine from RStudio.

I didn't see any examples in the docs (please excuse if I missed) that bring in any libraries.

Entire Java source below.

Thanks in advance,

----

public class RCallerExample{
public static void main(String[] args)
{
// create a script engine manager:RenjinScriptEngineFactory factory = new RenjinScriptEngineFactory();
// create a Renjin engine:ScriptEngine engine = factory.getScriptEngine();

try{
engine.eval("require(biotools)");

String inputIris = "5.1,3.5,1.4,0.2,setosa\n" +
"4.9,3,1.4,0.2,setosa\n" +
"4.7,3.2,1.3,0.2,setosa\n" +
"4.6,3.1,1.5,0.2,setosa\n" +
"5,3.6,1.4,0.2,setosa\n" +
"5.4,3.9,1.7,0.4,setosa\n" +
"4.6,3.4,1.4,0.3,setosa\n" +
"5,3.4,1.5,0.2,setosa\n" +
"4.4,2.9,1.4,0.2,setosa\n" +
"4.9,3.1,1.5,0.1,setosa\n" +
"5.4,3.7,1.5,0.2,setosa\n" +
"4.8,3.4,1.6,0.2,setosa\n" +
"4.8,3,1.4,0.1,setosa\n" +
"4.3,3,1.1,0.1,setosa\n" +
"5.8,4,1.2,0.2,setosa\n" +
"5.7,4.4,1.5,0.4,setosa\n" +
"5.4,3.9,1.3,0.4,setosa\n" +
"5.1,3.5,1.4,0.3,setosa\n" +
"5.7,3.8,1.7,0.3,setosa\n" +
"5.1,3.8,1.5,0.3,setosa\n" +
"5.4,3.4,1.7,0.2,setosa\n" +
"5.1,3.7,1.5,0.4,setosa\n" +
"4.6,3.6,1,0.2,setosa\n" +
"5.1,3.3,1.7,0.5,setosa\n" +
"4.8,3.4,1.9,0.2,setosa\n" +
"5,3,1.6,0.2,setosa\n" +
"5,3.4,1.6,0.4,setosa\n" +
"5.2,3.5,1.5,0.2,setosa\n" +
"5.2,3.4,1.4,0.2,setosa\n" +
"4.7,3.2,1.6,0.2,setosa\n" +
"4.8,3.1,1.6,0.2,setosa\n" +
"5.4,3.4,1.5,0.4,setosa\n" +
"5.2,4.1,1.5,0.1,setosa\n" +
"5.5,4.2,1.4,0.2,setosa\n" +
"4.9,3.1,1.5,0.2,setosa\n" +
"5,3.2,1.2,0.2,setosa\n" +
"5.5,3.5,1.3,0.2,setosa\n" +
"4.9,3.6,1.4,0.1,setosa\n" +
"4.4,3,1.3,0.2,setosa\n" +
"5.1,3.4,1.5,0.2,setosa\n" +
"5,3.5,1.3,0.3,setosa\n" +
"4.5,2.3,1.3,0.3,setosa\n" +
"4.4,3.2,1.3,0.2,setosa\n" +
"5,3.5,1.6,0.6,setosa\n" +
"5.1,3.8,1.9,0.4,setosa\n" +
"4.8,3,1.4,0.3,setosa\n" +
"5.1,3.8,1.6,0.2,setosa\n" +
"4.6,3.2,1.4,0.2,setosa\n" +
"5.3,3.7,1.5,0.2,setosa\n" +
"5,3.3,1.4,0.2,setosa\n" +
"7,3.2,4.7,1.4,versicolor\n" +
"6.4,3.2,4.5,1.5,versicolor\n" +
"6.9,3.1,4.9,1.5,versicolor\n" +
"5.5,2.3,4,1.3,versicolor\n" +
"6.5,2.8,4.6,1.5,versicolor\n" +
"5.7,2.8,4.5,1.3,versicolor\n" +
"6.3,3.3,4.7,1.6,versicolor\n" +
"4.9,2.4,3.3,1,versicolor\n" +
"6.6,2.9,4.6,1.3,versicolor\n" +
"5.2,2.7,3.9,1.4,versicolor\n" +
"5,2,3.5,1,versicolor\n" +
"5.9,3,4.2,1.5,versicolor\n" +
"6,2.2,4,1,versicolor\n" +
"6.1,2.9,4.7,1.4,versicolor\n" +
"5.6,2.9,3.6,1.3,versicolor\n" +
"6.7,3.1,4.4,1.4,versicolor\n" +
"5.6,3,4.5,1.5,versicolor\n" +
"5.8,2.7,4.1,1,versicolor\n" +
"6.2,2.2,4.5,1.5,versicolor\n" +
"5.6,2.5,3.9,1.1,versicolor\n" +
"5.9,3.2,4.8,1.8,versicolor\n" +
"6.1,2.8,4,1.3,versicolor\n" +
"6.3,2.5,4.9,1.5,versicolor\n" +
"6.1,2.8,4.7,1.2,versicolor\n" +
"6.4,2.9,4.3,1.3,versicolor\n" +
"6.6,3,4.4,1.4,versicolor\n" +
"6.8,2.8,4.8,1.4,versicolor\n" +
"6.7,3,5,1.7,versicolor\n" +
"6,2.9,4.5,1.5,versicolor\n" +
"5.7,2.6,3.5,1,versicolor\n" +
"5.5,2.4,3.8,1.1,versicolor\n" +
"5.5,2.4,3.7,1,versicolor\n" +
"5.8,2.7,3.9,1.2,versicolor\n" +
"6,2.7,5.1,1.6,versicolor\n" +
"5.4,3,4.5,1.5,versicolor\n" +
"6,3.4,4.5,1.6,versicolor\n" +
"6.7,3.1,4.7,1.5,versicolor\n" +
"6.3,2.3,4.4,1.3,versicolor\n" +
"5.6,3,4.1,1.3,versicolor\n" +
"5.5,2.5,4,1.3,versicolor\n" +
"5.5,2.6,4.4,1.2,versicolor\n" +
"6.1,3,4.6,1.4,versicolor\n" +
"5.8,2.6,4,1.2,versicolor\n" +
"5,2.3,3.3,1,versicolor\n" +
"5.6,2.7,4.2,1.3,versicolor\n" +
"5.7,3,4.2,1.2,versicolor\n" +
"5.7,2.9,4.2,1.3,versicolor\n" +
"6.2,2.9,4.3,1.3,versicolor\n" +
"5.1,2.5,3,1.1,versicolor\n" +
"5.7,2.8,4.1,1.3,versicolor\n" +
"6.3,3.3,6,2.5,virginica\n" +
"5.8,2.7,5.1,1.9,virginica\n" +
"7.1,3,5.9,2.1,virginica\n" +
"6.3,2.9,5.6,1.8,virginica\n" +
"6.5,3,5.8,2.2,virginica\n" +
"7.6,3,6.6,2.1,virginica\n" +
"4.9,2.5,4.5,1.7,virginica\n" +
"7.3,2.9,6.3,1.8,virginica\n" +
"6.7,2.5,5.8,1.8,virginica\n" +
"7.2,3.6,6.1,2.5,virginica\n" +
"6.5,3.2,5.1,2,virginica\n" +
"6.4,2.7,5.3,1.9,virginica\n" +
"6.8,3,5.5,2.1,virginica\n" +
"5.7,2.5,5,2,virginica\n" +
"5.8,2.8,5.1,2.4,virginica\n" +
"6.4,3.2,5.3,2.3,virginica\n" +
"6.5,3,5.5,1.8,virginica\n" +
"7.7,3.8,6.7,2.2,virginica\n" +
"7.7,2.6,6.9,2.3,virginica\n" +
"6,2.2,5,1.5,virginica\n" +
"6.9,3.2,5.7,2.3,virginica\n" +
"5.6,2.8,4.9,2,virginica\n" +
"7.7,2.8,6.7,2,virginica\n" +
"6.3,2.7,4.9,1.8,virginica\n" +
"6.7,3.3,5.7,2.1,virginica\n" +
"7.2,3.2,6,1.8,virginica\n" +
"6.2,2.8,4.8,1.8,virginica\n" +
"6.1,3,4.9,1.8,virginica\n" +
"6.4,2.8,5.6,2.1,virginica\n" +
"7.2,3,5.8,1.6,virginica\n" +
"7.4,2.8,6.1,1.9,virginica\n" +
"7.9,3.8,6.4,2,virginica\n" +
"6.4,2.8,5.6,2.2,virginica\n" +
"6.3,2.8,5.1,1.5,virginica\n" +
"6.1,2.6,5.6,1.4,virginica\n" +
"7.7,3,6.1,2.3,virginica\n" +
"6.3,3.4,5.6,2.4,virginica\n" +
"6.4,3.1,5.5,1.8,virginica\n" +
"6,3,4.8,1.8,virginica\n" +
"6.9,3.1,5.4,2.1,virginica\n" +
"6.7,3.1,5.6,2.4,virginica\n" +
"6.9,3.1,5.1,2.3,virginica\n" +
"5.8,2.7,5.1,1.9,virginica\n" +
"6.8,3.2,5.9,2.3,virginica\n" +
"6.7,3.3,5.7,2.5,virginica\n" +
"6.7,3,5.2,2.3,virginica\n" +
"6.3,2.5,5,1.9,virginica\n" +
"6.5,3,5.2,2,virginica\n" +
"6.2,3.4,5.4,2.3,virginica\n" +
"5.9,3,5.1,1.8,virginica\n";

engine.eval("boxMResult <- boxM(inputIris [,-5], inputIris[,5])");

}
catch (ScriptException e)
{
e.printStackTrace();
}

Sent from [ProtonMail](https://protonmail.com), Swiss-based encrypted email.
	[[alternative HTML version deleted]]


From brian at braverock.com  Sun Oct 29 16:37:58 2017
From: brian at braverock.com (Brian G. Peterson)
Date: Sun, 29 Oct 2017 10:37:58 -0500
Subject: [Rd] Renjin?
In-Reply-To: <veiwXiZxL7CzF_h3k4rCiK5kHWZc3NKcVoHdxDFUkiMt5bTe7qm9sIZZSFUhSDk9JM1Tn6uOaAiN1bPJoGoutXjIg0IwNbHCJoA8dYukl6I=@protonmail.com>
References: <veiwXiZxL7CzF_h3k4rCiK5kHWZc3NKcVoHdxDFUkiMt5bTe7qm9sIZZSFUhSDk9JM1Tn6uOaAiN1bPJoGoutXjIg0IwNbHCJoA8dYukl6I=@protonmail.com>
Message-ID: <1509291478.2795.91.camel@braverock.com>

Please move this to r-help.  It is clear that this is not a problem
with R itself, but with your ability to search the internet and read
the documentation and the code before posting.

On Sun, 2017-10-29 at 11:34 -0400, Morkus via R-devel wrote:
> Hi All,
> 
> OK, in the "back to the drawing board" department, I found what looks
> like a much better solution to using R in Java. Renjin.
> 
> Looking at the docs and then trying a quick example, didn't quite
> work.
> 
> Of course I'm missing something.
> 
> Although I'm telling the engine to require ("biotools") just like I
> would in R itself, when I get to the line of code that does the
> actual call
> 
> engine.eval("boxMResult <- boxM(inputIris [,-5], inputIris[,5])");
> 
> Then, I get:
> 
> Exception in thread "main" org.renjin.eval.EvalException: could not
> find function 'boxM'
> 
> Am I using Renjin as intended? Biotools is installed in R and works
> fine from RStudio.
> 
> I didn't see any examples in the docs (please excuse if I missed)
> that bring in any libraries.
> 
> Entire Java source below.
> 
> Thanks in advance,
> 
> ----
> 
> public class RCallerExample{
> public static void main(String[] args)
> {
> // create a script engine manager:RenjinScriptEngineFactory factory =
> new RenjinScriptEngineFactory();
> // create a Renjin engine:ScriptEngine engine =
> factory.getScriptEngine();
> 
> try{
> engine.eval("require(biotools)");
> 
> String inputIris = "5.1,3.5,1.4,0.2,setosa\n" +
> "4.9,3,1.4,0.2,setosa\n" +
> "4.7,3.2,1.3,0.2,setosa\n" +
> "4.6,3.1,1.5,0.2,setosa\n" +
> "5,3.6,1.4,0.2,setosa\n" +
> "5.4,3.9,1.7,0.4,setosa\n" +
> "4.6,3.4,1.4,0.3,setosa\n" +
> "5,3.4,1.5,0.2,setosa\n" +
> "4.4,2.9,1.4,0.2,setosa\n" +
> "4.9,3.1,1.5,0.1,setosa\n" +
> "5.4,3.7,1.5,0.2,setosa\n" +
> "4.8,3.4,1.6,0.2,setosa\n" +
> "4.8,3,1.4,0.1,setosa\n" +
> "4.3,3,1.1,0.1,setosa\n" +
> "5.8,4,1.2,0.2,setosa\n" +
> "5.7,4.4,1.5,0.4,setosa\n" +
> "5.4,3.9,1.3,0.4,setosa\n" +
> "5.1,3.5,1.4,0.3,setosa\n" +
> "5.7,3.8,1.7,0.3,setosa\n" +
> "5.1,3.8,1.5,0.3,setosa\n" +
> "5.4,3.4,1.7,0.2,setosa\n" +
> "5.1,3.7,1.5,0.4,setosa\n" +
> "4.6,3.6,1,0.2,setosa\n" +
> "5.1,3.3,1.7,0.5,setosa\n" +
> "4.8,3.4,1.9,0.2,setosa\n" +
> "5,3,1.6,0.2,setosa\n" +
> "5,3.4,1.6,0.4,setosa\n" +
> "5.2,3.5,1.5,0.2,setosa\n" +
> "5.2,3.4,1.4,0.2,setosa\n" +
> "4.7,3.2,1.6,0.2,setosa\n" +
> "4.8,3.1,1.6,0.2,setosa\n" +
> "5.4,3.4,1.5,0.4,setosa\n" +
> "5.2,4.1,1.5,0.1,setosa\n" +
> "5.5,4.2,1.4,0.2,setosa\n" +
> "4.9,3.1,1.5,0.2,setosa\n" +
> "5,3.2,1.2,0.2,setosa\n" +
> "5.5,3.5,1.3,0.2,setosa\n" +
> "4.9,3.6,1.4,0.1,setosa\n" +
> "4.4,3,1.3,0.2,setosa\n" +
> "5.1,3.4,1.5,0.2,setosa\n" +
> "5,3.5,1.3,0.3,setosa\n" +
> "4.5,2.3,1.3,0.3,setosa\n" +
> "4.4,3.2,1.3,0.2,setosa\n" +
> "5,3.5,1.6,0.6,setosa\n" +
> "5.1,3.8,1.9,0.4,setosa\n" +
> "4.8,3,1.4,0.3,setosa\n" +
> "5.1,3.8,1.6,0.2,setosa\n" +
> "4.6,3.2,1.4,0.2,setosa\n" +
> "5.3,3.7,1.5,0.2,setosa\n" +
> "5,3.3,1.4,0.2,setosa\n" +
> "7,3.2,4.7,1.4,versicolor\n" +
> "6.4,3.2,4.5,1.5,versicolor\n" +
> "6.9,3.1,4.9,1.5,versicolor\n" +
> "5.5,2.3,4,1.3,versicolor\n" +
> "6.5,2.8,4.6,1.5,versicolor\n" +
> "5.7,2.8,4.5,1.3,versicolor\n" +
> "6.3,3.3,4.7,1.6,versicolor\n" +
> "4.9,2.4,3.3,1,versicolor\n" +
> "6.6,2.9,4.6,1.3,versicolor\n" +
> "5.2,2.7,3.9,1.4,versicolor\n" +
> "5,2,3.5,1,versicolor\n" +
> "5.9,3,4.2,1.5,versicolor\n" +
> "6,2.2,4,1,versicolor\n" +
> "6.1,2.9,4.7,1.4,versicolor\n" +
> "5.6,2.9,3.6,1.3,versicolor\n" +
> "6.7,3.1,4.4,1.4,versicolor\n" +
> "5.6,3,4.5,1.5,versicolor\n" +
> "5.8,2.7,4.1,1,versicolor\n" +
> "6.2,2.2,4.5,1.5,versicolor\n" +
> "5.6,2.5,3.9,1.1,versicolor\n" +
> "5.9,3.2,4.8,1.8,versicolor\n" +
> "6.1,2.8,4,1.3,versicolor\n" +
> "6.3,2.5,4.9,1.5,versicolor\n" +
> "6.1,2.8,4.7,1.2,versicolor\n" +
> "6.4,2.9,4.3,1.3,versicolor\n" +
> "6.6,3,4.4,1.4,versicolor\n" +
> "6.8,2.8,4.8,1.4,versicolor\n" +
> "6.7,3,5,1.7,versicolor\n" +
> "6,2.9,4.5,1.5,versicolor\n" +
> "5.7,2.6,3.5,1,versicolor\n" +
> "5.5,2.4,3.8,1.1,versicolor\n" +
> "5.5,2.4,3.7,1,versicolor\n" +
> "5.8,2.7,3.9,1.2,versicolor\n" +
> "6,2.7,5.1,1.6,versicolor\n" +
> "5.4,3,4.5,1.5,versicolor\n" +
> "6,3.4,4.5,1.6,versicolor\n" +
> "6.7,3.1,4.7,1.5,versicolor\n" +
> "6.3,2.3,4.4,1.3,versicolor\n" +
> "5.6,3,4.1,1.3,versicolor\n" +
> "5.5,2.5,4,1.3,versicolor\n" +
> "5.5,2.6,4.4,1.2,versicolor\n" +
> "6.1,3,4.6,1.4,versicolor\n" +
> "5.8,2.6,4,1.2,versicolor\n" +
> "5,2.3,3.3,1,versicolor\n" +
> "5.6,2.7,4.2,1.3,versicolor\n" +
> "5.7,3,4.2,1.2,versicolor\n" +
> "5.7,2.9,4.2,1.3,versicolor\n" +
> "6.2,2.9,4.3,1.3,versicolor\n" +
> "5.1,2.5,3,1.1,versicolor\n" +
> "5.7,2.8,4.1,1.3,versicolor\n" +
> "6.3,3.3,6,2.5,virginica\n" +
> "5.8,2.7,5.1,1.9,virginica\n" +
> "7.1,3,5.9,2.1,virginica\n" +
> "6.3,2.9,5.6,1.8,virginica\n" +
> "6.5,3,5.8,2.2,virginica\n" +
> "7.6,3,6.6,2.1,virginica\n" +
> "4.9,2.5,4.5,1.7,virginica\n" +
> "7.3,2.9,6.3,1.8,virginica\n" +
> "6.7,2.5,5.8,1.8,virginica\n" +
> "7.2,3.6,6.1,2.5,virginica\n" +
> "6.5,3.2,5.1,2,virginica\n" +
> "6.4,2.7,5.3,1.9,virginica\n" +
> "6.8,3,5.5,2.1,virginica\n" +
> "5.7,2.5,5,2,virginica\n" +
> "5.8,2.8,5.1,2.4,virginica\n" +
> "6.4,3.2,5.3,2.3,virginica\n" +
> "6.5,3,5.5,1.8,virginica\n" +
> "7.7,3.8,6.7,2.2,virginica\n" +
> "7.7,2.6,6.9,2.3,virginica\n" +
> "6,2.2,5,1.5,virginica\n" +
> "6.9,3.2,5.7,2.3,virginica\n" +
> "5.6,2.8,4.9,2,virginica\n" +
> "7.7,2.8,6.7,2,virginica\n" +
> "6.3,2.7,4.9,1.8,virginica\n" +
> "6.7,3.3,5.7,2.1,virginica\n" +
> "7.2,3.2,6,1.8,virginica\n" +
> "6.2,2.8,4.8,1.8,virginica\n" +
> "6.1,3,4.9,1.8,virginica\n" +
> "6.4,2.8,5.6,2.1,virginica\n" +
> "7.2,3,5.8,1.6,virginica\n" +
> "7.4,2.8,6.1,1.9,virginica\n" +
> "7.9,3.8,6.4,2,virginica\n" +
> "6.4,2.8,5.6,2.2,virginica\n" +
> "6.3,2.8,5.1,1.5,virginica\n" +
> "6.1,2.6,5.6,1.4,virginica\n" +
> "7.7,3,6.1,2.3,virginica\n" +
> "6.3,3.4,5.6,2.4,virginica\n" +
> "6.4,3.1,5.5,1.8,virginica\n" +
> "6,3,4.8,1.8,virginica\n" +
> "6.9,3.1,5.4,2.1,virginica\n" +
> "6.7,3.1,5.6,2.4,virginica\n" +
> "6.9,3.1,5.1,2.3,virginica\n" +
> "5.8,2.7,5.1,1.9,virginica\n" +
> "6.8,3.2,5.9,2.3,virginica\n" +
> "6.7,3.3,5.7,2.5,virginica\n" +
> "6.7,3,5.2,2.3,virginica\n" +
> "6.3,2.5,5,1.9,virginica\n" +
> "6.5,3,5.2,2,virginica\n" +
> "6.2,3.4,5.4,2.3,virginica\n" +
> "5.9,3,5.1,1.8,virginica\n";
> 
> engine.eval("boxMResult <- boxM(inputIris [,-5], inputIris[,5])");
> 
> }
> catch (ScriptException e)
> {
> e.printStackTrace();
> }
> 
> Sent from [ProtonMail](https://protonmail.com), Swiss-based encrypted
> email.
> 	[[alternative HTML version deleted]]
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From brian at braverock.com  Sun Oct 29 16:58:31 2017
From: brian at braverock.com (Brian G. Peterson)
Date: Sun, 29 Oct 2017 10:58:31 -0500
Subject: [Rd] Renjin?
In-Reply-To: <d8BEPXi2e0AZkBn4bN3GgYERRLPmt6Il0mII12-r3047DUiRoFDWoQEwoyACe-TBVXNSAJy7iiWMaQ9HkbwsaP6ssQkkPeybGj5MUBJ5Ank=@protonmail.com>
References: <veiwXiZxL7CzF_h3k4rCiK5kHWZc3NKcVoHdxDFUkiMt5bTe7qm9sIZZSFUhSDk9JM1Tn6uOaAiN1bPJoGoutXjIg0IwNbHCJoA8dYukl6I=@protonmail.com>
 <1509291478.2795.91.camel@braverock.com>
 <d8BEPXi2e0AZkBn4bN3GgYERRLPmt6Il0mII12-r3047DUiRoFDWoQEwoyACe-TBVXNSAJy7iiWMaQ9HkbwsaP6ssQkkPeybGj5MUBJ5Ank=@protonmail.com>
Message-ID: <1509292711.2795.95.camel@braverock.com>

Renjin is not R.??

Renjin is an R language interpreter written in Java.

It has become exceedingly obvious that you are making user
errors.??That's not a bug in the language.

If you want to use Renjin, there are mailing lists devoted to Renjin,
and also Stack Overflow and Renjin list questions that cover exactly
what you've asked about (loading packages in Renjin when Renjin is used
as a Java library).??So I have to conclude that you didn't look very
hard before posting (again).

In any event, the R-devel list is for the development of the R language
itself, and issues *with the core language*.??It is not a user help
list. (this is all described in the list signup page:?
https://stat.ethz.ch/mailman/listinfo/r-devel )

Regards,

Brian


On Sun, 2017-10-29 at 11:50 -0400, Morkus wrote:
> Brian,
> 
> Huh?
> 
> I did read the documentation, but I didn't understand how to do what
> I wanted from what I read -- as there was no example of what I was
> trying to do.
> 
> Hence a posting.
> 
> Isn't that how (development) forums work?
> 
> I really don't understand why posting a developer question on the
> development forum elicits a response like yours.
> 
> I'm baffled by these kinds of replies.
> 
> And we both know if I post code on the regular R-help list, I'll get
> a snarky response that I should have put that posting on the R-
> Develop list.
> 
> I get it if you don't know the answer, but please try to be nice and
> assume the best about the poster.
> 
> Thanks.
> 
> Sent from ProtonMail, Swiss-based encrypted email.
> 
> 
> 
> > -------- Original Message --------
> > Subject: Re: [Rd] Renjin?
> > Local Time: October 29, 2017 11:37 AM
> > UTC Time: October 29, 2017 3:37 PM
> > From: brian at braverock.com
> > To: Morkus <morkus at protonmail.com>, r-devel at r-project.org <r-devel@
> > r-project.org>
> > 
> > Please move this to r-help. It is clear that this is not a problem
> > with R itself, but with your ability to search the internet and
> > read
> > the documentation and the code before posting.
> > 
> > On Sun, 2017-10-29 at 11:34 -0400, Morkus via R-devel wrote:
> > 
> > Hi All,
> > OK, in the "back to the drawing board" department, I found what
> > looks
> > like a much better solution to using R in Java. Renjin.
> > 
> > Looking at the docs and then trying a quick example, didn't quite
> > work.
> > 
> > Of course I'm missing something.
> > Although I'm telling the engine to require ("biotools") just like I
> > would in R itself, when I get to the line of code that does the
> > actual call
> > 
> > engine.eval("boxMResult <- boxM(inputIris [,-5], inputIris[,5])");
> > Then, I get:
> > Exception in thread "main" org.renjin.eval.EvalException: could not
> > find function 'boxM'
> > 
> > Am I using Renjin as intended? Biotools is installed in R and works
> > fine from RStudio.
> > 
> > I didn't see any examples in the docs (please excuse if I missed)
> > that bring in any libraries.
> > 
> > Entire Java source below.
> > Thanks in advance,
> > 
> > public class RCallerExample{
> > public static void main(String[] args)
> > {
> > // create a script engine manager:RenjinScriptEngineFactory factory
> > =
> > new RenjinScriptEngineFactory();
> > // create a Renjin engine:ScriptEngine engine =
> > factory.getScriptEngine();
> > 
> > try{
> > engine.eval("require(biotools)");
> > 
> > String inputIris = "5.1,3.5,1.4,0.2,setosa\n" +
> > "4.9,3,1.4,0.2,setosa\n" +
> > "4.7,3.2,1.3,0.2,setosa\n" +
> > "4.6,3.1,1.5,0.2,setosa\n" +
> > "5,3.6,1.4,0.2,setosa\n" +
> > "5.4,3.9,1.7,0.4,setosa\n" +
> > "4.6,3.4,1.4,0.3,setosa\n" +
> > "5,3.4,1.5,0.2,setosa\n" +
> > "4.4,2.9,1.4,0.2,setosa\n" +
> > "4.9,3.1,1.5,0.1,setosa\n" +
> > "5.4,3.7,1.5,0.2,setosa\n" +
> > "4.8,3.4,1.6,0.2,setosa\n" +
> > "4.8,3,1.4,0.1,setosa\n" +
> > "4.3,3,1.1,0.1,setosa\n" +
> > "5.8,4,1.2,0.2,setosa\n" +
> > "5.7,4.4,1.5,0.4,setosa\n" +
> > "5.4,3.9,1.3,0.4,setosa\n" +
> > "5.1,3.5,1.4,0.3,setosa\n" +
> > "5.7,3.8,1.7,0.3,setosa\n" +
> > "5.1,3.8,1.5,0.3,setosa\n" +
> > "5.4,3.4,1.7,0.2,setosa\n" +
> > "5.1,3.7,1.5,0.4,setosa\n" +
> > "4.6,3.6,1,0.2,setosa\n" +
> > "5.1,3.3,1.7,0.5,setosa\n" +
> > "4.8,3.4,1.9,0.2,setosa\n" +
> > "5,3,1.6,0.2,setosa\n" +
> > "5,3.4,1.6,0.4,setosa\n" +
> > "5.2,3.5,1.5,0.2,setosa\n" +
> > "5.2,3.4,1.4,0.2,setosa\n" +
> > "4.7,3.2,1.6,0.2,setosa\n" +
> > "4.8,3.1,1.6,0.2,setosa\n" +
> > "5.4,3.4,1.5,0.4,setosa\n" +
> > "5.2,4.1,1.5,0.1,setosa\n" +
> > "5.5,4.2,1.4,0.2,setosa\n" +
> > "4.9,3.1,1.5,0.2,setosa\n" +
> > "5,3.2,1.2,0.2,setosa\n" +
> > "5.5,3.5,1.3,0.2,setosa\n" +
> > "4.9,3.6,1.4,0.1,setosa\n" +
> > "4.4,3,1.3,0.2,setosa\n" +
> > "5.1,3.4,1.5,0.2,setosa\n" +
> > "5,3.5,1.3,0.3,setosa\n" +
> > "4.5,2.3,1.3,0.3,setosa\n" +
> > "4.4,3.2,1.3,0.2,setosa\n" +
> > "5,3.5,1.6,0.6,setosa\n" +
> > "5.1,3.8,1.9,0.4,setosa\n" +
> > "4.8,3,1.4,0.3,setosa\n" +
> > "5.1,3.8,1.6,0.2,setosa\n" +
> > "4.6,3.2,1.4,0.2,setosa\n" +
> > "5.3,3.7,1.5,0.2,setosa\n" +
> > "5,3.3,1.4,0.2,setosa\n" +
> > "7,3.2,4.7,1.4,versicolor\n" +
> > "6.4,3.2,4.5,1.5,versicolor\n" +
> > "6.9,3.1,4.9,1.5,versicolor\n" +
> > "5.5,2.3,4,1.3,versicolor\n" +
> > "6.5,2.8,4.6,1.5,versicolor\n" +
> > "5.7,2.8,4.5,1.3,versicolor\n" +
> > "6.3,3.3,4.7,1.6,versicolor\n" +
> > "4.9,2.4,3.3,1,versicolor\n" +
> > "6.6,2.9,4.6,1.3,versicolor\n" +
> > "5.2,2.7,3.9,1.4,versicolor\n" +
> > "5,2,3.5,1,versicolor\n" +
> > "5.9,3,4.2,1.5,versicolor\n" +
> > "6,2.2,4,1,versicolor\n" +
> > "6.1,2.9,4.7,1.4,versicolor\n" +
> > "5.6,2.9,3.6,1.3,versicolor\n" +
> > "6.7,3.1,4.4,1.4,versicolor\n" +
> > "5.6,3,4.5,1.5,versicolor\n" +
> > "5.8,2.7,4.1,1,versicolor\n" +
> > "6.2,2.2,4.5,1.5,versicolor\n" +
> > "5.6,2.5,3.9,1.1,versicolor\n" +
> > "5.9,3.2,4.8,1.8,versicolor\n" +
> > "6.1,2.8,4,1.3,versicolor\n" +
> > "6.3,2.5,4.9,1.5,versicolor\n" +
> > "6.1,2.8,4.7,1.2,versicolor\n" +
> > "6.4,2.9,4.3,1.3,versicolor\n" +
> > "6.6,3,4.4,1.4,versicolor\n" +
> > "6.8,2.8,4.8,1.4,versicolor\n" +
> > "6.7,3,5,1.7,versicolor\n" +
> > "6,2.9,4.5,1.5,versicolor\n" +
> > "5.7,2.6,3.5,1,versicolor\n" +
> > "5.5,2.4,3.8,1.1,versicolor\n" +
> > "5.5,2.4,3.7,1,versicolor\n" +
> > "5.8,2.7,3.9,1.2,versicolor\n" +
> > "6,2.7,5.1,1.6,versicolor\n" +
> > "5.4,3,4.5,1.5,versicolor\n" +
> > "6,3.4,4.5,1.6,versicolor\n" +
> > "6.7,3.1,4.7,1.5,versicolor\n" +
> > "6.3,2.3,4.4,1.3,versicolor\n" +
> > "5.6,3,4.1,1.3,versicolor\n" +
> > "5.5,2.5,4,1.3,versicolor\n" +
> > "5.5,2.6,4.4,1.2,versicolor\n" +
> > "6.1,3,4.6,1.4,versicolor\n" +
> > "5.8,2.6,4,1.2,versicolor\n" +
> > "5,2.3,3.3,1,versicolor\n" +
> > "5.6,2.7,4.2,1.3,versicolor\n" +
> > "5.7,3,4.2,1.2,versicolor\n" +
> > "5.7,2.9,4.2,1.3,versicolor\n" +
> > "6.2,2.9,4.3,1.3,versicolor\n" +
> > "5.1,2.5,3,1.1,versicolor\n" +
> > "5.7,2.8,4.1,1.3,versicolor\n" +
> > "6.3,3.3,6,2.5,virginica\n" +
> > "5.8,2.7,5.1,1.9,virginica\n" +
> > "7.1,3,5.9,2.1,virginica\n" +
> > "6.3,2.9,5.6,1.8,virginica\n" +
> > "6.5,3,5.8,2.2,virginica\n" +
> > "7.6,3,6.6,2.1,virginica\n" +
> > "4.9,2.5,4.5,1.7,virginica\n" +
> > "7.3,2.9,6.3,1.8,virginica\n" +
> > "6.7,2.5,5.8,1.8,virginica\n" +
> > "7.2,3.6,6.1,2.5,virginica\n" +
> > "6.5,3.2,5.1,2,virginica\n" +
> > "6.4,2.7,5.3,1.9,virginica\n" +
> > "6.8,3,5.5,2.1,virginica\n" +
> > "5.7,2.5,5,2,virginica\n" +
> > "5.8,2.8,5.1,2.4,virginica\n" +
> > "6.4,3.2,5.3,2.3,virginica\n" +
> > "6.5,3,5.5,1.8,virginica\n" +
> > "7.7,3.8,6.7,2.2,virginica\n" +
> > "7.7,2.6,6.9,2.3,virginica\n" +
> > "6,2.2,5,1.5,virginica\n" +
> > "6.9,3.2,5.7,2.3,virginica\n" +
> > "5.6,2.8,4.9,2,virginica\n" +
> > "7.7,2.8,6.7,2,virginica\n" +
> > "6.3,2.7,4.9,1.8,virginica\n" +
> > "6.7,3.3,5.7,2.1,virginica\n" +
> > "7.2,3.2,6,1.8,virginica\n" +
> > "6.2,2.8,4.8,1.8,virginica\n" +
> > "6.1,3,4.9,1.8,virginica\n" +
> > "6.4,2.8,5.6,2.1,virginica\n" +
> > "7.2,3,5.8,1.6,virginica\n" +
> > "7.4,2.8,6.1,1.9,virginica\n" +
> > "7.9,3.8,6.4,2,virginica\n" +
> > "6.4,2.8,5.6,2.2,virginica\n" +
> > "6.3,2.8,5.1,1.5,virginica\n" +
> > "6.1,2.6,5.6,1.4,virginica\n" +
> > "7.7,3,6.1,2.3,virginica\n" +
> > "6.3,3.4,5.6,2.4,virginica\n" +
> > "6.4,3.1,5.5,1.8,virginica\n" +
> > "6,3,4.8,1.8,virginica\n" +
> > "6.9,3.1,5.4,2.1,virginica\n" +
> > "6.7,3.1,5.6,2.4,virginica\n" +
> > "6.9,3.1,5.1,2.3,virginica\n" +
> > "5.8,2.7,5.1,1.9,virginica\n" +
> > "6.8,3.2,5.9,2.3,virginica\n" +
> > "6.7,3.3,5.7,2.5,virginica\n" +
> > "6.7,3,5.2,2.3,virginica\n" +
> > "6.3,2.5,5,1.9,virginica\n" +
> > "6.5,3,5.2,2,virginica\n" +
> > "6.2,3.4,5.4,2.3,virginica\n" +
> > "5.9,3,5.1,1.8,virginica\n";
> > 
> > engine.eval("boxMResult <- boxM(inputIris [,-5], inputIris[,5])");
> > }
> > catch (ScriptException e)
> > {
> > e.printStackTrace();
> > }
> > 
> > Sent from ProtonMail, Swiss-based encrypted
> > email.
> > [[alternative HTML version deleted]]
> > 
> > 
> > R-devel at r-project.org mailing list
> > https://stat.ethz.ch/mailman/listinfo/r-devel
-- 
Brian G. Peterson
http://braverock.com/brian/
Ph: 773-459-4973
IM: bgpbraverock


From jtelleriar at gmail.com  Sun Oct 29 21:42:17 2017
From: jtelleriar at gmail.com (Juan Telleria)
Date: Sun, 29 Oct 2017 21:42:17 +0100
Subject: [Rd] Debate: Shall some of Microsoft R Open Code be ported to
	mainstream R?
In-Reply-To: <CANNd7==3TOGYzS0aYNOmeakn2woD+U+o6GfWhKy1-BuR8WfVzQ@mail.gmail.com>
References: <CANNd7=mF5jQqWMYymrkx0uNQ5g6B298jj0y66is2gi6wWxUVJQ@mail.gmail.com>
 <CANNd7=nDuTKJwKByrkQW4R7TmO=j0w5kqR867FNzU4UUbbyyKA@mail.gmail.com>
 <CANNd7=n9Y5UDDgA3hn+4XGT9H4Q9BwPKoht2uBnyHBme-qerLA@mail.gmail.com>
 <CANNd7=kuJJE3k=+_3LHAzRyiQcS0HkhiNeNam=N015o7uTgmUg@mail.gmail.com>
 <CANNd7=mng2CL+8XwG4Dq_r5zZT8OP5bevn=ydQFCgAM09+pDbw@mail.gmail.com>
 <CANNd7=mafvMdEChnpwDYu49tcvRpSUXt79=fHroduhLB2ss1LQ@mail.gmail.com>
 <CANNd7=ky-7aQc-OjtPHDTPxMKxwkzyuWAGYPaVSJTsKfFg1v8w@mail.gmail.com>
 <CANNd7=mNYabPvvNEKEtKmhQXFV-uO-teERxLYOz1=sD=_w6epg@mail.gmail.com>
 <CANNd7==8Sgf2ueA08wpROe6CrD_n7==Gz7tSr_ncdpK3XPwoSw@mail.gmail.com>
 <CANNd7=ngXVKsaEwyQVmzsuVuQN5Bxcgnwmtk-EJq1ucUBt9iOw@mail.gmail.com>
 <CANNd7=mF44uUA8Y6VdmHV3QnYr_mJdoP2C-MY0-2nzULCSVoCA@mail.gmail.com>
 <CANNd7=m4vdn1jUVPP3+a9g7cTRye_a=PrvSe43eSA_NdvuaStg@mail.gmail.com>
 <CANNd7==usdHMse-okiSLnJZ_Lj_bTSnVLWLsF5O_2-xCAfaCDQ@mail.gmail.com>
 <CANNd7==3TOGYzS0aYNOmeakn2woD+U+o6GfWhKy1-BuR8WfVzQ@mail.gmail.com>
Message-ID: <CANNd7==P3-yKKJUuka9+Fmajb9c7+b2X516o9hQGThyKQt0d4Q@mail.gmail.com>

Dear R Developers,

First of all, I would like to thank you Jeroen Ooms for taking the binary
Window Builds from Duncan. I firmly believe that the R Community will
benefit a lot from his work.

However, the debate I would like to open is about if some of Microsoft R
Open Code shall be ported from R Open to Mainstream R.

There are some beneficts in R Open such as multithreaded performance:
https://mran.microsoft.com/documents/rro/multithread/

Maybe, the R Consortium, and in particular, Microsoft R Team, could
collaborate, if appropriate, in such duty.

Thank you,
Juan Telleria

	[[alternative HTML version deleted]]


From kmbell56 at gmail.com  Sun Oct 29 23:01:22 2017
From: kmbell56 at gmail.com (Kenny Bell)
Date: Sun, 29 Oct 2017 22:01:22 +0000
Subject: [Rd] Debate: Shall some of Microsoft R Open Code be ported to
 mainstream R?
In-Reply-To: <CANNd7==P3-yKKJUuka9+Fmajb9c7+b2X516o9hQGThyKQt0d4Q@mail.gmail.com>
References: <CANNd7=mF5jQqWMYymrkx0uNQ5g6B298jj0y66is2gi6wWxUVJQ@mail.gmail.com>
 <CANNd7=nDuTKJwKByrkQW4R7TmO=j0w5kqR867FNzU4UUbbyyKA@mail.gmail.com>
 <CANNd7=n9Y5UDDgA3hn+4XGT9H4Q9BwPKoht2uBnyHBme-qerLA@mail.gmail.com>
 <CANNd7=kuJJE3k=+_3LHAzRyiQcS0HkhiNeNam=N015o7uTgmUg@mail.gmail.com>
 <CANNd7=mng2CL+8XwG4Dq_r5zZT8OP5bevn=ydQFCgAM09+pDbw@mail.gmail.com>
 <CANNd7=mafvMdEChnpwDYu49tcvRpSUXt79=fHroduhLB2ss1LQ@mail.gmail.com>
 <CANNd7=ky-7aQc-OjtPHDTPxMKxwkzyuWAGYPaVSJTsKfFg1v8w@mail.gmail.com>
 <CANNd7=mNYabPvvNEKEtKmhQXFV-uO-teERxLYOz1=sD=_w6epg@mail.gmail.com>
 <CANNd7==8Sgf2ueA08wpROe6CrD_n7==Gz7tSr_ncdpK3XPwoSw@mail.gmail.com>
 <CANNd7=ngXVKsaEwyQVmzsuVuQN5Bxcgnwmtk-EJq1ucUBt9iOw@mail.gmail.com>
 <CANNd7=mF44uUA8Y6VdmHV3QnYr_mJdoP2C-MY0-2nzULCSVoCA@mail.gmail.com>
 <CANNd7=m4vdn1jUVPP3+a9g7cTRye_a=PrvSe43eSA_NdvuaStg@mail.gmail.com>
 <CANNd7==usdHMse-okiSLnJZ_Lj_bTSnVLWLsF5O_2-xCAfaCDQ@mail.gmail.com>
 <CANNd7==3TOGYzS0aYNOmeakn2woD+U+o6GfWhKy1-BuR8WfVzQ@mail.gmail.com>
 <CANNd7==P3-yKKJUuka9+Fmajb9c7+b2X516o9hQGThyKQt0d4Q@mail.gmail.com>
Message-ID: <CAPekMCncKgUyuRDd86ioLkABGG-fAVQZ6FyChgNrrm4orBmq4g@mail.gmail.com>

User here: incorporating Intel's MKL, as MRO does, would be a very welcome
addition.

I was an MRO user before and it improved my experience with medium data
immensely.

They did, however, leave behind bugs here and there, especially related to
development with Rcpp, so I switched back to vanilla R.

On Mon, Oct 30, 2017, 9:42 AM Juan Telleria <jtelleriar at gmail.com> wrote:

> Dear R Developers,
>
> First of all, I would like to thank you Jeroen Ooms for taking the binary
> Window Builds from Duncan. I firmly believe that the R Community will
> benefit a lot from his work.
>
> However, the debate I would like to open is about if some of Microsoft R
> Open Code shall be ported from R Open to Mainstream R.
>
> There are some beneficts in R Open such as multithreaded performance:
> https://mran.microsoft.com/documents/rro/multithread/
>
> Maybe, the R Consortium, and in particular, Microsoft R Team, could
> collaborate, if appropriate, in such duty.
>
> Thank you,
> Juan Telleria
>
>         [[alternative HTML version deleted]]
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>

	[[alternative HTML version deleted]]


From edd at debian.org  Mon Oct 30 04:09:57 2017
From: edd at debian.org (Dirk Eddelbuettel)
Date: Sun, 29 Oct 2017 22:09:57 -0500
Subject: [Rd] Debate: Shall some of Microsoft R Open Code be ported to
 mainstream R?
In-Reply-To: <CAPekMCncKgUyuRDd86ioLkABGG-fAVQZ6FyChgNrrm4orBmq4g@mail.gmail.com>
References: <CANNd7=mF5jQqWMYymrkx0uNQ5g6B298jj0y66is2gi6wWxUVJQ@mail.gmail.com>
 <CANNd7=nDuTKJwKByrkQW4R7TmO=j0w5kqR867FNzU4UUbbyyKA@mail.gmail.com>
 <CANNd7=n9Y5UDDgA3hn+4XGT9H4Q9BwPKoht2uBnyHBme-qerLA@mail.gmail.com>
 <CANNd7=kuJJE3k=+_3LHAzRyiQcS0HkhiNeNam=N015o7uTgmUg@mail.gmail.com>
 <CANNd7=mng2CL+8XwG4Dq_r5zZT8OP5bevn=ydQFCgAM09+pDbw@mail.gmail.com>
 <CANNd7=mafvMdEChnpwDYu49tcvRpSUXt79=fHroduhLB2ss1LQ@mail.gmail.com>
 <CANNd7=ky-7aQc-OjtPHDTPxMKxwkzyuWAGYPaVSJTsKfFg1v8w@mail.gmail.com>
 <CANNd7=mNYabPvvNEKEtKmhQXFV-uO-teERxLYOz1=sD=_w6epg@mail.gmail.com>
 <CANNd7==8Sgf2ueA08wpROe6CrD_n7==Gz7tSr_ncdpK3XPwoSw@mail.gmail.com>
 <CANNd7=ngXVKsaEwyQVmzsuVuQN5Bxcgnwmtk-EJq1ucUBt9iOw@mail.gmail.com>
 <CANNd7=mF44uUA8Y6VdmHV3QnYr_mJdoP2C-MY0-2nzULCSVoCA@mail.gmail.com>
 <CANNd7=m4vdn1jUVPP3+a9g7cTRye_a=PrvSe43eSA_NdvuaStg@mail.gmail.com>
 <CANNd7==usdHMse-okiSLnJZ_Lj_bTSnVLWLsF5O_2-xCAfaCDQ@mail.gmail.com>
 <CANNd7==3TOGYzS0aYNOmeakn2woD+U+o6GfWhKy1-BuR8WfVzQ@mail.gmail.com>
 <CANNd7==P3-yKKJUuka9+Fmajb9c7+b2X516o9hQGThyKQt0d4Q@mail.gmail.com>
 <CAPekMCncKgUyuRDd86ioLkABGG-fAVQZ6FyChgNrrm4orBmq4g@mail.gmail.com>
Message-ID: <23030.38917.724763.513161@bud.eddelbuettel.com>


On 29 October 2017 at 22:01, Kenny Bell wrote:
| User here: incorporating Intel's MKL, as MRO does, would be a very welcome
| addition.
| 
| I was an MRO user before and it improved my experience with medium data
| immensely.
| 
| They did, however, leave behind bugs here and there, especially related to
| development with Rcpp, so I switched back to vanilla R.

With all due respect: You may miss something. MKL has always worked with 'Base R'.

As a point of reference and comparison, I set up a benchmarking and
comparison package _well over half a decade ago_ and while it never get fully
finished to the point of a submitted paper the vignette still stands---and
demonstrates that _dropping in MKL is a one-line operation_.

And always has been.  There may have been some license arbitrage: Intel was
an early investor in Revo, so MKL was pushed hard.  With GotoBLAS and later
OpenBLAS I cared less, but IIRC the license of MKL is a little simpler for
"mere use" now.

See  https://cloud.r-project.org/web/packages/gcbd/vignettes/gcbd.pdf  for more.

Hth,  Dirk

| 
| On Mon, Oct 30, 2017, 9:42 AM Juan Telleria <jtelleriar at gmail.com> wrote:
| 
| > Dear R Developers,
| >
| > First of all, I would like to thank you Jeroen Ooms for taking the binary
| > Window Builds from Duncan. I firmly believe that the R Community will
| > benefit a lot from his work.
| >
| > However, the debate I would like to open is about if some of Microsoft R
| > Open Code shall be ported from R Open to Mainstream R.
| >
| > There are some beneficts in R Open such as multithreaded performance:
| > https://mran.microsoft.com/documents/rro/multithread/
| >
| > Maybe, the R Consortium, and in particular, Microsoft R Team, could
| > collaborate, if appropriate, in such duty.
| >
| > Thank you,
| > Juan Telleria
| >
| >         [[alternative HTML version deleted]]
| >
| > ______________________________________________
| > R-devel at r-project.org mailing list
| > https://stat.ethz.ch/mailman/listinfo/r-devel
| >
| 
| 	[[alternative HTML version deleted]]
| 
| ______________________________________________
| R-devel at r-project.org mailing list
| https://stat.ethz.ch/mailman/listinfo/r-devel

-- 
http://dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org


From maechler at stat.math.ethz.ch  Mon Oct 30 08:57:35 2017
From: maechler at stat.math.ethz.ch (Martin Maechler)
Date: Mon, 30 Oct 2017 08:57:35 +0100
Subject: [Rd] Renjin?
In-Reply-To: <1509292711.2795.95.camel@braverock.com>
References: <veiwXiZxL7CzF_h3k4rCiK5kHWZc3NKcVoHdxDFUkiMt5bTe7qm9sIZZSFUhSDk9JM1Tn6uOaAiN1bPJoGoutXjIg0IwNbHCJoA8dYukl6I=@protonmail.com>
 <1509291478.2795.91.camel@braverock.com>
 <d8BEPXi2e0AZkBn4bN3GgYERRLPmt6Il0mII12-r3047DUiRoFDWoQEwoyACe-TBVXNSAJy7iiWMaQ9HkbwsaP6ssQkkPeybGj5MUBJ5Ank=@protonmail.com>
 <1509292711.2795.95.camel@braverock.com>
Message-ID: <23030.56175.861408.649407@stat.math.ethz.ch>

>>>>> Brian G Peterson <brian at braverock.com>
>>>>>     on Sun, 29 Oct 2017 10:58:31 -0500 writes:

    > Renjin is not R.??  Renjin is an R language interpreter
    > written in Java.

    > It has become exceedingly obvious that you are making user
    > errors.??That's not a bug in the language.

    > If you want to use Renjin, there are mailing lists devoted
    > to Renjin, and also Stack Overflow and Renjin list
    > questions that cover exactly what you've asked about
    > (loading packages in Renjin when Renjin is used as a Java
    > library).??So I have to conclude that you didn't look very
    > hard before posting (again).

    > In any event, the R-devel list is for the development of
    > the R language itself, and issues *with the core
    > language*.??It is not a user help list. (this is all
    > described in the list signup page:?
    > https://stat.ethz.ch/mailman/listinfo/r-devel )

    > Regards,
    > Brian

Yes, indeed!
Thank you Brian.

Morkus:  Do *STOP* using the R-devel mailing list for now, and
use R-help instead.  You are absolutely misusing R-devel currently!

Martin Maechler
ETH Zurich	(and co-maintainer of the R-devel list)



    > On Sun, 2017-10-29 at 11:50 -0400, Morkus wrote:
    >> Brian,
    >> 
    >> Huh?
    >> 
    >> I did read the documentation, but I didn't understand how
    >> to do what I wanted from what I read -- as there was no
    >> example of what I was trying to do.
    >> 
    >> Hence a posting.
    >> 
    >> Isn't that how (development) forums work?
    >> 
    >> I really don't understand why posting a developer
    >> question on the development forum elicits a response like
    >> yours.
    >> 
    >> I'm baffled by these kinds of replies.
    >> 
    >> And we both know if I post code on the regular R-help
    >> list, I'll get a snarky response that I should have put
    >> that posting on the R- Develop list.
    >> 
    >> I get it if you don't know the answer, but please try to
    >> be nice and assume the best about the poster.
    >> 
    >> Thanks.
    >> 
    >> Sent from ProtonMail, Swiss-based encrypted email.
    >> 
    >> 
    >> 
    >> > -------- Original Message -------- > Subject: Re: [Rd]
    >> Renjin?  > Local Time: October 29, 2017 11:37 AM > UTC
    >> Time: October 29, 2017 3:37 PM > From:
    >> brian at braverock.com > To: Morkus <morkus at protonmail.com>,
    >> r-devel at r-project.org <r-devel@ > r-project.org>
    >> > 
    >> > Please move this to r-help. It is clear that this is
    >> not a problem > with R itself, but with your ability to
    >> search the internet and > read > the documentation and
    >> the code before posting.
    >> > 
    >> > On Sun, 2017-10-29 at 11:34 -0400, Morkus via R-devel
    >> wrote:
    >> > 
    >> > Hi All, > OK, in the "back to the drawing board"
    >> department, I found what > looks > like a much better
    >> solution to using R in Java. Renjin.
    >> > 
    >> > Looking at the docs and then trying a quick example,
    >> didn't quite > work.
    >> > 
    >> > Of course I'm missing something.  > Although I'm
    >> telling the engine to require ("biotools") just like I >
    >> would in R itself, when I get to the line of code that
    >> does the > actual call
    >> > 
    >> > engine.eval("boxMResult <- boxM(inputIris [,-5],
    >> inputIris[,5])"); > Then, I get: > Exception in thread
    >> "main" org.renjin.eval.EvalException: could not > find
    >> function 'boxM'
    >> > 
    >> > Am I using Renjin as intended? Biotools is installed in
    >> R and works > fine from RStudio.
    >> > 
    >> > I didn't see any examples in the docs (please excuse if
    >> I missed) > that bring in any libraries.
    >> > 
    >> > Entire Java source below.  > Thanks in advance,
    >> > 
    >> > public class RCallerExample{ > public static void
    >> main(String[] args) > { > // create a script engine
    >> manager:RenjinScriptEngineFactory factory > = > new
    >> RenjinScriptEngineFactory(); > // create a Renjin
    >> engine:ScriptEngine engine = > factory.getScriptEngine();
    >> > 
    >> > try{ > engine.eval("require(biotools)");
    >> > 
    >> > String inputIris = "5.1,3.5,1.4,0.2,setosa\n" + >
    >> "4.9,3,1.4,0.2,setosa\n" + > "4.7,3.2,1.3,0.2,setosa\n" +
    >> > "4.6,3.1,1.5,0.2,setosa\n" + > "5,3.6,1.4,0.2,setosa\n"
    >> + > "5.4,3.9,1.7,0.4,setosa\n" + >
    >> "4.6,3.4,1.4,0.3,setosa\n" + > "5,3.4,1.5,0.2,setosa\n" +
    >> > "4.4,2.9,1.4,0.2,setosa\n" + >
    >> "4.9,3.1,1.5,0.1,setosa\n" + > "5.4,3.7,1.5,0.2,setosa\n"
    >> + > "4.8,3.4,1.6,0.2,setosa\n" + >
    >> "4.8,3,1.4,0.1,setosa\n" + > "4.3,3,1.1,0.1,setosa\n" + >
    >> "5.8,4,1.2,0.2,setosa\n" + > "5.7,4.4,1.5,0.4,setosa\n" +
    >> > "5.4,3.9,1.3,0.4,setosa\n" + >
    >> "5.1,3.5,1.4,0.3,setosa\n" + > "5.7,3.8,1.7,0.3,setosa\n"
    >> + > "5.1,3.8,1.5,0.3,setosa\n" + >
    >> "5.4,3.4,1.7,0.2,setosa\n" + > "5.1,3.7,1.5,0.4,setosa\n"
    >> + > "4.6,3.6,1,0.2,setosa\n" + >
    >> "5.1,3.3,1.7,0.5,setosa\n" + > "4.8,3.4,1.9,0.2,setosa\n"
    >> + > "5,3,1.6,0.2,setosa\n" + > "5,3.4,1.6,0.4,setosa\n" +
    >> > "5.2,3.5,1.5,0.2,setosa\n" + >
    >> "5.2,3.4,1.4,0.2,setosa\n" + > "4.7,3.2,1.6,0.2,setosa\n"
    >> + > "4.8,3.1,1.6,0.2,setosa\n" + >
    >> "5.4,3.4,1.5,0.4,setosa\n" + > "5.2,4.1,1.5,0.1,setosa\n"
    >> + > "5.5,4.2,1.4,0.2,setosa\n" + >
    >> "4.9,3.1,1.5,0.2,setosa\n" + > "5,3.2,1.2,0.2,setosa\n" +
    >> > "5.5,3.5,1.3,0.2,setosa\n" + >
    >> "4.9,3.6,1.4,0.1,setosa\n" + > "4.4,3,1.3,0.2,setosa\n" +
    >> > "5.1,3.4,1.5,0.2,setosa\n" + > "5,3.5,1.3,0.3,setosa\n"
    >> + > "4.5,2.3,1.3,0.3,setosa\n" + >
    >> "4.4,3.2,1.3,0.2,setosa\n" + > "5,3.5,1.6,0.6,setosa\n" +
    >> > "5.1,3.8,1.9,0.4,setosa\n" + > "4.8,3,1.4,0.3,setosa\n"
    >> + > "5.1,3.8,1.6,0.2,setosa\n" + >
    >> "4.6,3.2,1.4,0.2,setosa\n" + > "5.3,3.7,1.5,0.2,setosa\n"
    >> + > "5,3.3,1.4,0.2,setosa\n" + >
    >> "7,3.2,4.7,1.4,versicolor\n" + >
    >> "6.4,3.2,4.5,1.5,versicolor\n" + >
    >> "6.9,3.1,4.9,1.5,versicolor\n" + >
    >> "5.5,2.3,4,1.3,versicolor\n" + >
    >> "6.5,2.8,4.6,1.5,versicolor\n" + >
    >> "5.7,2.8,4.5,1.3,versicolor\n" + >
    >> "6.3,3.3,4.7,1.6,versicolor\n" + >
    >> "4.9,2.4,3.3,1,versicolor\n" + >
    >> "6.6,2.9,4.6,1.3,versicolor\n" + >
    >> "5.2,2.7,3.9,1.4,versicolor\n" + >
    >> "5,2,3.5,1,versicolor\n" + > "5.9,3,4.2,1.5,versicolor\n"
    >> + > "6,2.2,4,1,versicolor\n" + >
    >> "6.1,2.9,4.7,1.4,versicolor\n" + >
    >> "5.6,2.9,3.6,1.3,versicolor\n" + >
    >> "6.7,3.1,4.4,1.4,versicolor\n" + >
    >> "5.6,3,4.5,1.5,versicolor\n" + >
    >> "5.8,2.7,4.1,1,versicolor\n" + >
    >> "6.2,2.2,4.5,1.5,versicolor\n" + >
    >> "5.6,2.5,3.9,1.1,versicolor\n" + >
    >> "5.9,3.2,4.8,1.8,versicolor\n" + >
    >> "6.1,2.8,4,1.3,versicolor\n" + >
    >> "6.3,2.5,4.9,1.5,versicolor\n" + >
    >> "6.1,2.8,4.7,1.2,versicolor\n" + >
    >> "6.4,2.9,4.3,1.3,versicolor\n" + >
    >> "6.6,3,4.4,1.4,versicolor\n" + >
    >> "6.8,2.8,4.8,1.4,versicolor\n" + >
    >> "6.7,3,5,1.7,versicolor\n" + >
    >> "6,2.9,4.5,1.5,versicolor\n" + >
    >> "5.7,2.6,3.5,1,versicolor\n" + >
    >> "5.5,2.4,3.8,1.1,versicolor\n" + >
    >> "5.5,2.4,3.7,1,versicolor\n" + >
    >> "5.8,2.7,3.9,1.2,versicolor\n" + >
    >> "6,2.7,5.1,1.6,versicolor\n" + >
    >> "5.4,3,4.5,1.5,versicolor\n" + >
    >> "6,3.4,4.5,1.6,versicolor\n" + >
    >> "6.7,3.1,4.7,1.5,versicolor\n" + >
    >> "6.3,2.3,4.4,1.3,versicolor\n" + >
    >> "5.6,3,4.1,1.3,versicolor\n" + >
    >> "5.5,2.5,4,1.3,versicolor\n" + >
    >> "5.5,2.6,4.4,1.2,versicolor\n" + >
    >> "6.1,3,4.6,1.4,versicolor\n" + >
    >> "5.8,2.6,4,1.2,versicolor\n" + >
    >> "5,2.3,3.3,1,versicolor\n" + >
    >> "5.6,2.7,4.2,1.3,versicolor\n" + >
    >> "5.7,3,4.2,1.2,versicolor\n" + >
    >> "5.7,2.9,4.2,1.3,versicolor\n" + >
    >> "6.2,2.9,4.3,1.3,versicolor\n" + >
    >> "5.1,2.5,3,1.1,versicolor\n" + >
    >> "5.7,2.8,4.1,1.3,versicolor\n" + >
    >> "6.3,3.3,6,2.5,virginica\n" + >
    >> "5.8,2.7,5.1,1.9,virginica\n" + >
    >> "7.1,3,5.9,2.1,virginica\n" + >
    >> "6.3,2.9,5.6,1.8,virginica\n" + >
    >> "6.5,3,5.8,2.2,virginica\n" + >
    >> "7.6,3,6.6,2.1,virginica\n" + >
    >> "4.9,2.5,4.5,1.7,virginica\n" + >
    >> "7.3,2.9,6.3,1.8,virginica\n" + >
    >> "6.7,2.5,5.8,1.8,virginica\n" + >
    >> "7.2,3.6,6.1,2.5,virginica\n" + >
    >> "6.5,3.2,5.1,2,virginica\n" + >
    >> "6.4,2.7,5.3,1.9,virginica\n" + >
    >> "6.8,3,5.5,2.1,virginica\n" + > "5.7,2.5,5,2,virginica\n"
    >> + > "5.8,2.8,5.1,2.4,virginica\n" + >
    >> "6.4,3.2,5.3,2.3,virginica\n" + >
    >> "6.5,3,5.5,1.8,virginica\n" + >
    >> "7.7,3.8,6.7,2.2,virginica\n" + >
    >> "7.7,2.6,6.9,2.3,virginica\n" + >
    >> "6,2.2,5,1.5,virginica\n" + >
    >> "6.9,3.2,5.7,2.3,virginica\n" + >
    >> "5.6,2.8,4.9,2,virginica\n" + >
    >> "7.7,2.8,6.7,2,virginica\n" + >
    >> "6.3,2.7,4.9,1.8,virginica\n" + >
    >> "6.7,3.3,5.7,2.1,virginica\n" + >
    >> "7.2,3.2,6,1.8,virginica\n" + >
    >> "6.2,2.8,4.8,1.8,virginica\n" + >
    >> "6.1,3,4.9,1.8,virginica\n" + >
    >> "6.4,2.8,5.6,2.1,virginica\n" + >
    >> "7.2,3,5.8,1.6,virginica\n" + >
    >> "7.4,2.8,6.1,1.9,virginica\n" + >
    >> "7.9,3.8,6.4,2,virginica\n" + >
    >> "6.4,2.8,5.6,2.2,virginica\n" + >
    >> "6.3,2.8,5.1,1.5,virginica\n" + >
    >> "6.1,2.6,5.6,1.4,virginica\n" + >
    >> "7.7,3,6.1,2.3,virginica\n" + >
    >> "6.3,3.4,5.6,2.4,virginica\n" + >
    >> "6.4,3.1,5.5,1.8,virginica\n" + >
    >> "6,3,4.8,1.8,virginica\n" + >
    >> "6.9,3.1,5.4,2.1,virginica\n" + >
    >> "6.7,3.1,5.6,2.4,virginica\n" + >
    >> "6.9,3.1,5.1,2.3,virginica\n" + >
    >> "5.8,2.7,5.1,1.9,virginica\n" + >
    >> "6.8,3.2,5.9,2.3,virginica\n" + >
    >> "6.7,3.3,5.7,2.5,virginica\n" + >
    >> "6.7,3,5.2,2.3,virginica\n" + >
    >> "6.3,2.5,5,1.9,virginica\n" + > "6.5,3,5.2,2,virginica\n"
    >> + > "6.2,3.4,5.4,2.3,virginica\n" + >
    >> "5.9,3,5.1,1.8,virginica\n";
    >> > 
    >> > engine.eval("boxMResult <- boxM(inputIris [,-5],
    >> inputIris[,5])"); > } > catch (ScriptException e) > { >
    >> e.printStackTrace(); > }
    >> > 
    >> > Sent from ProtonMail, Swiss-based encrypted > email.  >
    >> [[alternative HTML version deleted]]
    >> > 
    >> > 
    >> > R-devel at r-project.org mailing list >
    >> https://stat.ethz.ch/mailman/listinfo/r-devel
    > -- 
    > Brian G. Peterson http://braverock.com/brian/ Ph:
    > 773-459-4973 IM: bgpbraverock

    > ______________________________________________
    > R-devel at r-project.org mailing list
    > https://stat.ethz.ch/mailman/listinfo/r-devel


From istazahn at gmail.com  Mon Oct 30 16:40:43 2017
From: istazahn at gmail.com (Ista Zahn)
Date: Mon, 30 Oct 2017 11:40:43 -0400
Subject: [Rd] Debate: Shall some of Microsoft R Open Code be ported to
 mainstream R?
In-Reply-To: <23030.38917.724763.513161@bud.eddelbuettel.com>
References: <CANNd7=mF5jQqWMYymrkx0uNQ5g6B298jj0y66is2gi6wWxUVJQ@mail.gmail.com>
 <CANNd7=nDuTKJwKByrkQW4R7TmO=j0w5kqR867FNzU4UUbbyyKA@mail.gmail.com>
 <CANNd7=n9Y5UDDgA3hn+4XGT9H4Q9BwPKoht2uBnyHBme-qerLA@mail.gmail.com>
 <CANNd7=kuJJE3k=+_3LHAzRyiQcS0HkhiNeNam=N015o7uTgmUg@mail.gmail.com>
 <CANNd7=mng2CL+8XwG4Dq_r5zZT8OP5bevn=ydQFCgAM09+pDbw@mail.gmail.com>
 <CANNd7=mafvMdEChnpwDYu49tcvRpSUXt79=fHroduhLB2ss1LQ@mail.gmail.com>
 <CANNd7=ky-7aQc-OjtPHDTPxMKxwkzyuWAGYPaVSJTsKfFg1v8w@mail.gmail.com>
 <CANNd7=mNYabPvvNEKEtKmhQXFV-uO-teERxLYOz1=sD=_w6epg@mail.gmail.com>
 <CANNd7==8Sgf2ueA08wpROe6CrD_n7==Gz7tSr_ncdpK3XPwoSw@mail.gmail.com>
 <CANNd7=ngXVKsaEwyQVmzsuVuQN5Bxcgnwmtk-EJq1ucUBt9iOw@mail.gmail.com>
 <CANNd7=mF44uUA8Y6VdmHV3QnYr_mJdoP2C-MY0-2nzULCSVoCA@mail.gmail.com>
 <CANNd7=m4vdn1jUVPP3+a9g7cTRye_a=PrvSe43eSA_NdvuaStg@mail.gmail.com>
 <CANNd7==usdHMse-okiSLnJZ_Lj_bTSnVLWLsF5O_2-xCAfaCDQ@mail.gmail.com>
 <CANNd7==3TOGYzS0aYNOmeakn2woD+U+o6GfWhKy1-BuR8WfVzQ@mail.gmail.com>
 <CANNd7==P3-yKKJUuka9+Fmajb9c7+b2X516o9hQGThyKQt0d4Q@mail.gmail.com>
 <CAPekMCncKgUyuRDd86ioLkABGG-fAVQZ6FyChgNrrm4orBmq4g@mail.gmail.com>
 <23030.38917.724763.513161@bud.eddelbuettel.com>
Message-ID: <CA+vqiLGnDB7AFc1QtcBAzmNgHOuUU=5-XMuGsdc=N0BtC+gE5g@mail.gmail.com>

On Sun, Oct 29, 2017 at 11:09 PM, Dirk Eddelbuettel <edd at debian.org> wrote:
>
> On 29 October 2017 at 22:01, Kenny Bell wrote:
> | User here: incorporating Intel's MKL, as MRO does, would be a very welcome
> | addition.
> |
> | I was an MRO user before and it improved my experience with medium data
> | immensely.
> |
> | They did, however, leave behind bugs here and there, especially related to
> | development with Rcpp, so I switched back to vanilla R.
>
> With all due respect: You may miss something. MKL has always worked with 'Base R'.
>
> As a point of reference and comparison, I set up a benchmarking and
> comparison package _well over half a decade ago_ and while it never get fully
> finished to the point of a submitted paper the vignette still stands---and
> demonstrates that _dropping in MKL is a one-line operation_.
>
> And always has been.  There may have been some license arbitrage: Intel was
> an early investor in Revo, so MKL was pushed hard.  With GotoBLAS and later
> OpenBLAS I cared less, but IIRC the license of MKL is a little simpler for
> "mere use" now.
>
> See  https://cloud.r-project.org/web/packages/gcbd/vignettes/gcbd.pdf  for more.

FWIW, I've been using openBlas for years now, based on this and other
benchmarks. It provides performance comparable to MKL while being
really free.

Best,
Ista

>
> Hth,  Dirk
>
> |
> | On Mon, Oct 30, 2017, 9:42 AM Juan Telleria <jtelleriar at gmail.com> wrote:
> |
> | > Dear R Developers,
> | >
> | > First of all, I would like to thank you Jeroen Ooms for taking the binary
> | > Window Builds from Duncan. I firmly believe that the R Community will
> | > benefit a lot from his work.
> | >
> | > However, the debate I would like to open is about if some of Microsoft R
> | > Open Code shall be ported from R Open to Mainstream R.
> | >
> | > There are some beneficts in R Open such as multithreaded performance:
> | > https://mran.microsoft.com/documents/rro/multithread/
> | >
> | > Maybe, the R Consortium, and in particular, Microsoft R Team, could
> | > collaborate, if appropriate, in such duty.
> | >
> | > Thank you,
> | > Juan Telleria
> | >
> | >         [[alternative HTML version deleted]]
> | >
> | > ______________________________________________
> | > R-devel at r-project.org mailing list
> | > https://stat.ethz.ch/mailman/listinfo/r-devel
> | >
> |
> |       [[alternative HTML version deleted]]
> |
> | ______________________________________________
> | R-devel at r-project.org mailing list
> | https://stat.ethz.ch/mailman/listinfo/r-devel
>
> --
> http://dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From robert.s.cohn at intel.com  Mon Oct 30 17:45:46 2017
From: robert.s.cohn at intel.com (Cohn, Robert S)
Date: Mon, 30 Oct 2017 16:45:46 +0000
Subject: [Rd] Debate: Shall some of Microsoft R Open Code be ported
	to	mainstream R?
Message-ID: <017981773BBEDE44A0F34FBEE7EAF2DA75A09F9C@ORSMSX113.amr.corp.intel.com>

I think the thing that is missing is a simple way for end users on windows to replace blas/lapack libraries with MKL-a package that you install that puts the libraries in the right place.

Microsoft provides something for their distro, but we don't have the equivalent if you get R from cran.


On 29 October 2017 at 22:01, Kenny Bell wrote:

| User here: incorporating Intel's MKL, as MRO does, would be a very welcome

| addition.

|

| I was an MRO user before and it improved my experience with medium data

| immensely.

|

| They did, however, leave behind bugs here and there, especially related to

| development with Rcpp, so I switched back to vanilla R.



With all due respect: You may miss something. MKL has always worked with 'Base R'.



As a point of reference and comparison, I set up a benchmarking and

comparison package _well over half a decade ago_ and while it never get fully

finished to the point of a submitted paper the vignette still stands---and

demonstrates that _dropping in MKL is a one-line operation_.



And always has been.  There may have been some license arbitrage: Intel was

an early investor in Revo, so MKL was pushed hard.  With GotoBLAS and later

OpenBLAS I cared less, but IIRC the license of MKL is a little simpler for

"mere use" now.



See  https://cloud.r-project.org/web/packages/gcbd/vignettes/gcbd.pdf  for more.



Hth,  Dirk


	[[alternative HTML version deleted]]


From avraham.adler at gmail.com  Mon Oct 30 18:45:26 2017
From: avraham.adler at gmail.com (Avraham Adler)
Date: Mon, 30 Oct 2017 13:45:26 -0400
Subject: [Rd] Debate: Shall some of Microsoft R Open Code be ported to
 mainstream R?
In-Reply-To: <CAPekMCncKgUyuRDd86ioLkABGG-fAVQZ6FyChgNrrm4orBmq4g@mail.gmail.com>
References: <CANNd7=mF5jQqWMYymrkx0uNQ5g6B298jj0y66is2gi6wWxUVJQ@mail.gmail.com>
 <CANNd7=nDuTKJwKByrkQW4R7TmO=j0w5kqR867FNzU4UUbbyyKA@mail.gmail.com>
 <CANNd7=n9Y5UDDgA3hn+4XGT9H4Q9BwPKoht2uBnyHBme-qerLA@mail.gmail.com>
 <CANNd7=kuJJE3k=+_3LHAzRyiQcS0HkhiNeNam=N015o7uTgmUg@mail.gmail.com>
 <CANNd7=mng2CL+8XwG4Dq_r5zZT8OP5bevn=ydQFCgAM09+pDbw@mail.gmail.com>
 <CANNd7=mafvMdEChnpwDYu49tcvRpSUXt79=fHroduhLB2ss1LQ@mail.gmail.com>
 <CANNd7=ky-7aQc-OjtPHDTPxMKxwkzyuWAGYPaVSJTsKfFg1v8w@mail.gmail.com>
 <CANNd7=mNYabPvvNEKEtKmhQXFV-uO-teERxLYOz1=sD=_w6epg@mail.gmail.com>
 <CANNd7==8Sgf2ueA08wpROe6CrD_n7==Gz7tSr_ncdpK3XPwoSw@mail.gmail.com>
 <CANNd7=ngXVKsaEwyQVmzsuVuQN5Bxcgnwmtk-EJq1ucUBt9iOw@mail.gmail.com>
 <CANNd7=mF44uUA8Y6VdmHV3QnYr_mJdoP2C-MY0-2nzULCSVoCA@mail.gmail.com>
 <CANNd7=m4vdn1jUVPP3+a9g7cTRye_a=PrvSe43eSA_NdvuaStg@mail.gmail.com>
 <CANNd7==usdHMse-okiSLnJZ_Lj_bTSnVLWLsF5O_2-xCAfaCDQ@mail.gmail.com>
 <CANNd7==3TOGYzS0aYNOmeakn2woD+U+o6GfWhKy1-BuR8WfVzQ@mail.gmail.com>
 <CANNd7==P3-yKKJUuka9+Fmajb9c7+b2X516o9hQGThyKQt0d4Q@mail.gmail.com>
 <CAPekMCncKgUyuRDd86ioLkABGG-fAVQZ6FyChgNrrm4orBmq4g@mail.gmail.com>
Message-ID: <CAL6gwnLxhX2ojubf0S=4M3RCbrk7tRYsAk3pYkCkCGt5cUnkmw@mail.gmail.com>

[Sent offlist accidentally]

What concerns me first and foremost is that the licensure would have
to be ironclad (including for commercial use like vanilla R now) as
well as ensuring that R remains completely FLOSS. Anything ?added? to
R has to be a no-strings-attached gift to R.

Also, I would think that it would have to play nice with existing
workflows (like OpenBLAS instead of MKL) unless there is such a
benefit that it is worth breaking compatibility.

Avi

On Sun, Oct 29, 2017 at 6:01 PM, Kenny Bell <kmbell56 at gmail.com> wrote:
> User here: incorporating Intel's MKL, as MRO does, would be a very welcome
> addition.
>
> I was an MRO user before and it improved my experience with medium data
> immensely.
>
> They did, however, leave behind bugs here and there, especially related to
> development with Rcpp, so I switched back to vanilla R.
>
> On Mon, Oct 30, 2017, 9:42 AM Juan Telleria <jtelleriar at gmail.com> wrote:
>
>> Dear R Developers,
>>
>> First of all, I would like to thank you Jeroen Ooms for taking the binary
>> Window Builds from Duncan. I firmly believe that the R Community will
>> benefit a lot from his work.
>>
>> However, the debate I would like to open is about if some of Microsoft R
>> Open Code shall be ported from R Open to Mainstream R.
>>
>> There are some beneficts in R Open such as multithreaded performance:
>> https://mran.microsoft.com/documents/rro/multithread/
>>
>> Maybe, the R Consortium, and in particular, Microsoft R Team, could
>> collaborate, if appropriate, in such duty.
>>
>> Thank you,
>> Juan Telleria
>>
>>         [[alternative HTML version deleted]]
>>
>> ______________________________________________
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>
>
>         [[alternative HTML version deleted]]
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From avraham.adler at gmail.com  Mon Oct 30 19:05:42 2017
From: avraham.adler at gmail.com (Avraham Adler)
Date: Mon, 30 Oct 2017 14:05:42 -0400
Subject: [Rd] Debate: Shall some of Microsoft R Open Code be ported to
 mainstream R?
In-Reply-To: <017981773BBEDE44A0F34FBEE7EAF2DA75A09F9C@ORSMSX113.amr.corp.intel.com>
References: <017981773BBEDE44A0F34FBEE7EAF2DA75A09F9C@ORSMSX113.amr.corp.intel.com>
Message-ID: <CAL6gwnJe+8xN2ppHXwnJZwEXqQwyHuQjyaPOFvDFDitDfbsnMg@mail.gmail.com>

On Mon, Oct 30, 2017 at 12:45 PM, Cohn, Robert S
<robert.s.cohn at intel.com> wrote:
> I think the thing that is missing is a simple way for end users on windows to replace blas/lapack libraries with MKL-a package that you install that puts the libraries in the right place.
>
> Microsoft provides something for their distro, but we don't have the equivalent if you get R from cran.
>

Dr. Ei-ji Nakama has some compiled GotoBLAS Rblas DLLs on his site
[1], but they are rather old now. I've toyed with the idea of doing
something similar for OpenBLAS?which requires tricking R into thinking
it's ATLAS [2]?and hosting at least a Sandy Bridge and a dynamic
version. I'm not sure how the licenses and copyrights would interact
though. Also, that only works for the BLAS. Using an optimized LAPACK
is even more difficult. On Unix-likes, the manual does not recommend
it but it's allowed as an option in the configure [3]. For OpenBLAS
(and ATLAS for that matter), even though one can build an optimized
LAPACK, there is no way to access the build of the LAPACK on Windows
through Mkrules.local, and R_HOME/src/modules/lapack/README makes it
seem to be rather difficult, if not impossible. I believe the MKL
includes a specialized LAPACK; I do not know if this is compiled into
M$ R, though.

Thanks,

Avi

[1] https://prs.ism.ac.jp/~nakama/SurviveGotoBLAS2/binary/windows/
[2] https://www.avrahamadler.com/r-tips/build-openblas-for-windows-r64/
[3] https://cran.r-project.org/doc/manuals/r-release/R-admin.html#LAPACK


From istazahn at gmail.com  Tue Oct 31 00:37:12 2017
From: istazahn at gmail.com (Ista Zahn)
Date: Mon, 30 Oct 2017 19:37:12 -0400
Subject: [Rd] Debate: Shall some of Microsoft R Open Code be ported to
 mainstream R?
In-Reply-To: <017981773BBEDE44A0F34FBEE7EAF2DA75A09F9C@ORSMSX113.amr.corp.intel.com>
References: <017981773BBEDE44A0F34FBEE7EAF2DA75A09F9C@ORSMSX113.amr.corp.intel.com>
Message-ID: <CA+vqiLHOjsd4wJ_5STH7DzUm3bCqUTujR78Ky1-baNO8ci-TkA@mail.gmail.com>

On Mon, Oct 30, 2017 at 12:45 PM, Cohn, Robert S
<robert.s.cohn at intel.com> wrote:
> I think the thing that is missing is a simple way for end users on windows to replace blas/lapack libraries with MKL-a package that you install that puts the libraries in the right place.
>
> Microsoft provides something for their distro, but we don't have the equivalent if you get R from cran.

I don't have any interest in using a proprietary BLAS when a perfectly
good free alternative exists. If we just care about performance,
swapping out the reference BLAS for openBLAS is pretty simple
apparently:

- Download pre-compiled openblas from
https://sourceforge.net/projects/openblas/files/ (windows binaries
currently available for 2.19 but not 2.20)
- Unzip and copy libopenblas.dll to C:\Program Files\R\R-3.4.x\bin\x64
and rename it "Rblas.dll"
- Download the mingw dll's (e.g., from
https://sourceforge.net/projects/openblas/files/v0.2.15/mingw64_dll.zip/download),
unzip and copy all the dll's to C:\Program Files\R\R-3.4.x\bin\x64

Best,
Ista

>
>
> On 29 October 2017 at 22:01, Kenny Bell wrote:
>
> | User here: incorporating Intel's MKL, as MRO does, would be a very welcome
>
> | addition.
>
> |
>
> | I was an MRO user before and it improved my experience with medium data
>
> | immensely.
>
> |
>
> | They did, however, leave behind bugs here and there, especially related to
>
> | development with Rcpp, so I switched back to vanilla R.
>
>
>
> With all due respect: You may miss something. MKL has always worked with 'Base R'.
>
>
>
> As a point of reference and comparison, I set up a benchmarking and
>
> comparison package _well over half a decade ago_ and while it never get fully
>
> finished to the point of a submitted paper the vignette still stands---and
>
> demonstrates that _dropping in MKL is a one-line operation_.
>
>
>
> And always has been.  There may have been some license arbitrage: Intel was
>
> an early investor in Revo, so MKL was pushed hard.  With GotoBLAS and later
>
> OpenBLAS I cared less, but IIRC the license of MKL is a little simpler for
>
> "mere use" now.
>
>
>
> See  https://cloud.r-project.org/web/packages/gcbd/vignettes/gcbd.pdf  for more.
>
>
>
> Hth,  Dirk
>
>
>         [[alternative HTML version deleted]]
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From jtelleriar at gmail.com  Tue Oct 31 14:34:25 2017
From: jtelleriar at gmail.com (Juan Telleria)
Date: Tue, 31 Oct 2017 14:34:25 +0100
Subject: [Rd] Debate: Shall some of Microsoft R Open Code be ported to
 mainstream R?
In-Reply-To: <CAL6gwnLxhX2ojubf0S=4M3RCbrk7tRYsAk3pYkCkCGt5cUnkmw@mail.gmail.com>
References: <CANNd7=mF5jQqWMYymrkx0uNQ5g6B298jj0y66is2gi6wWxUVJQ@mail.gmail.com>
 <CANNd7=nDuTKJwKByrkQW4R7TmO=j0w5kqR867FNzU4UUbbyyKA@mail.gmail.com>
 <CANNd7=n9Y5UDDgA3hn+4XGT9H4Q9BwPKoht2uBnyHBme-qerLA@mail.gmail.com>
 <CANNd7=kuJJE3k=+_3LHAzRyiQcS0HkhiNeNam=N015o7uTgmUg@mail.gmail.com>
 <CANNd7=mng2CL+8XwG4Dq_r5zZT8OP5bevn=ydQFCgAM09+pDbw@mail.gmail.com>
 <CANNd7=mafvMdEChnpwDYu49tcvRpSUXt79=fHroduhLB2ss1LQ@mail.gmail.com>
 <CANNd7=ky-7aQc-OjtPHDTPxMKxwkzyuWAGYPaVSJTsKfFg1v8w@mail.gmail.com>
 <CANNd7=mNYabPvvNEKEtKmhQXFV-uO-teERxLYOz1=sD=_w6epg@mail.gmail.com>
 <CANNd7==8Sgf2ueA08wpROe6CrD_n7==Gz7tSr_ncdpK3XPwoSw@mail.gmail.com>
 <CANNd7=ngXVKsaEwyQVmzsuVuQN5Bxcgnwmtk-EJq1ucUBt9iOw@mail.gmail.com>
 <CANNd7=mF44uUA8Y6VdmHV3QnYr_mJdoP2C-MY0-2nzULCSVoCA@mail.gmail.com>
 <CANNd7=m4vdn1jUVPP3+a9g7cTRye_a=PrvSe43eSA_NdvuaStg@mail.gmail.com>
 <CANNd7==usdHMse-okiSLnJZ_Lj_bTSnVLWLsF5O_2-xCAfaCDQ@mail.gmail.com>
 <CANNd7==3TOGYzS0aYNOmeakn2woD+U+o6GfWhKy1-BuR8WfVzQ@mail.gmail.com>
 <CANNd7==P3-yKKJUuka9+Fmajb9c7+b2X516o9hQGThyKQt0d4Q@mail.gmail.com>
 <CAPekMCncKgUyuRDd86ioLkABGG-fAVQZ6FyChgNrrm4orBmq4g@mail.gmail.com>
 <CAL6gwnLxhX2ojubf0S=4M3RCbrk7tRYsAk3pYkCkCGt5cUnkmw@mail.gmail.com>
Message-ID: <CANNd7=k56MBDsbTiOREvgg81EvP1FM_eKqZPCbi2fyvyicWq=g@mail.gmail.com>

So as long as I can read, OpenBlas, for Windows, might be a worth
considering option:
http://www.openblas.net

But Intel MKL also seems to be free*:
https://software.intel.com/en-us/articles/free-mkl

Thank you,
Juan

El 30/10/2017 6:45 p. m., "Avraham Adler" <avraham.adler at gmail.com>
escribi?:

> [Sent offlist accidentally]
>
> What concerns me first and foremost is that the licensure would have
> to be ironclad (including for commercial use like vanilla R now) as
> well as ensuring that R remains completely FLOSS. Anything ?added? to
> R has to be a no-strings-attached gift to R.
>
> Also, I would think that it would have to play nice with existing
> workflows (like OpenBLAS instead of MKL) unless there is such a
> benefit that it is worth breaking compatibility.
>
> Avi
>
> On Sun, Oct 29, 2017 at 6:01 PM, Kenny Bell <kmbell56 at gmail.com> wrote:
> > User here: incorporating Intel's MKL, as MRO does, would be a very
> welcome
> > addition.
> >
> > I was an MRO user before and it improved my experience with medium data
> > immensely.
> >
> > They did, however, leave behind bugs here and there, especially related
> to
> > development with Rcpp, so I switched back to vanilla R.
> >
> > On Mon, Oct 30, 2017, 9:42 AM Juan Telleria <jtelleriar at gmail.com>
> wrote:
> >
> >> Dear R Developers,
> >>
> >> First of all, I would like to thank you Jeroen Ooms for taking the
> binary
> >> Window Builds from Duncan. I firmly believe that the R Community will
> >> benefit a lot from his work.
> >>
> >> However, the debate I would like to open is about if some of Microsoft R
> >> Open Code shall be ported from R Open to Mainstream R.
> >>
> >> There are some beneficts in R Open such as multithreaded performance:
> >> https://mran.microsoft.com/documents/rro/multithread/
> >>
> >> Maybe, the R Consortium, and in particular, Microsoft R Team, could
> >> collaborate, if appropriate, in such duty.
> >>
> >> Thank you,
> >> Juan Telleria
> >>
> >>         [[alternative HTML version deleted]]
> >>
> >> ______________________________________________
> >> R-devel at r-project.org mailing list
> >> https://stat.ethz.ch/mailman/listinfo/r-devel
> >>
> >
> >         [[alternative HTML version deleted]]
> >
> > ______________________________________________
> > R-devel at r-project.org mailing list
> > https://stat.ethz.ch/mailman/listinfo/r-devel
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel

	[[alternative HTML version deleted]]


From i.ucar86 at gmail.com  Tue Oct 31 14:55:44 2017
From: i.ucar86 at gmail.com (=?UTF-8?B?ScOxYWtpIMOaY2Fy?=)
Date: Tue, 31 Oct 2017 14:55:44 +0100
Subject: [Rd] Debate: Shall some of Microsoft R Open Code be ported to
 mainstream R?
In-Reply-To: <CANNd7=k56MBDsbTiOREvgg81EvP1FM_eKqZPCbi2fyvyicWq=g@mail.gmail.com>
References: <CANNd7=mF5jQqWMYymrkx0uNQ5g6B298jj0y66is2gi6wWxUVJQ@mail.gmail.com>
 <CANNd7=nDuTKJwKByrkQW4R7TmO=j0w5kqR867FNzU4UUbbyyKA@mail.gmail.com>
 <CANNd7=n9Y5UDDgA3hn+4XGT9H4Q9BwPKoht2uBnyHBme-qerLA@mail.gmail.com>
 <CANNd7=kuJJE3k=+_3LHAzRyiQcS0HkhiNeNam=N015o7uTgmUg@mail.gmail.com>
 <CANNd7=mng2CL+8XwG4Dq_r5zZT8OP5bevn=ydQFCgAM09+pDbw@mail.gmail.com>
 <CANNd7=mafvMdEChnpwDYu49tcvRpSUXt79=fHroduhLB2ss1LQ@mail.gmail.com>
 <CANNd7=ky-7aQc-OjtPHDTPxMKxwkzyuWAGYPaVSJTsKfFg1v8w@mail.gmail.com>
 <CANNd7=mNYabPvvNEKEtKmhQXFV-uO-teERxLYOz1=sD=_w6epg@mail.gmail.com>
 <CANNd7==8Sgf2ueA08wpROe6CrD_n7==Gz7tSr_ncdpK3XPwoSw@mail.gmail.com>
 <CANNd7=ngXVKsaEwyQVmzsuVuQN5Bxcgnwmtk-EJq1ucUBt9iOw@mail.gmail.com>
 <CANNd7=mF44uUA8Y6VdmHV3QnYr_mJdoP2C-MY0-2nzULCSVoCA@mail.gmail.com>
 <CANNd7=m4vdn1jUVPP3+a9g7cTRye_a=PrvSe43eSA_NdvuaStg@mail.gmail.com>
 <CANNd7==usdHMse-okiSLnJZ_Lj_bTSnVLWLsF5O_2-xCAfaCDQ@mail.gmail.com>
 <CANNd7==3TOGYzS0aYNOmeakn2woD+U+o6GfWhKy1-BuR8WfVzQ@mail.gmail.com>
 <CANNd7==P3-yKKJUuka9+Fmajb9c7+b2X516o9hQGThyKQt0d4Q@mail.gmail.com>
 <CAPekMCncKgUyuRDd86ioLkABGG-fAVQZ6FyChgNrrm4orBmq4g@mail.gmail.com>
 <CAL6gwnLxhX2ojubf0S=4M3RCbrk7tRYsAk3pYkCkCGt5cUnkmw@mail.gmail.com>
 <CANNd7=k56MBDsbTiOREvgg81EvP1FM_eKqZPCbi2fyvyicWq=g@mail.gmail.com>
Message-ID: <CALEXWq0Lyd2WUQYxKYn=7SSS4gp3KMHL6bdfgpCwi-J3qg0zHg@mail.gmail.com>

2017-10-31 14:34 GMT+01:00 Juan Telleria <jtelleriar at gmail.com>:
> So as long as I can read, OpenBlas, for Windows, might be a worth
> considering option:
> http://www.openblas.net
>
> But Intel MKL also seems to be free*:
> https://software.intel.com/en-us/articles/free-mkl

install.packages("rmsfact")
sub(".*because ", "", rmsfact::rmsfact(8))

I?aki


From jtelleriar at gmail.com  Tue Oct 31 15:10:02 2017
From: jtelleriar at gmail.com (Juan Telleria)
Date: Tue, 31 Oct 2017 15:10:02 +0100
Subject: [Rd] Debate: Shall some of Microsoft R Open Code be ported to
 mainstream R?
In-Reply-To: <CANNd7=kvKBPXCnhyrAq6a6siESaYzrVcz=a4ATZ0=5tLU_ChAA@mail.gmail.com>
References: <CANNd7=mF5jQqWMYymrkx0uNQ5g6B298jj0y66is2gi6wWxUVJQ@mail.gmail.com>
 <CANNd7=nDuTKJwKByrkQW4R7TmO=j0w5kqR867FNzU4UUbbyyKA@mail.gmail.com>
 <CANNd7=n9Y5UDDgA3hn+4XGT9H4Q9BwPKoht2uBnyHBme-qerLA@mail.gmail.com>
 <CANNd7=kuJJE3k=+_3LHAzRyiQcS0HkhiNeNam=N015o7uTgmUg@mail.gmail.com>
 <CANNd7=mng2CL+8XwG4Dq_r5zZT8OP5bevn=ydQFCgAM09+pDbw@mail.gmail.com>
 <CANNd7=mafvMdEChnpwDYu49tcvRpSUXt79=fHroduhLB2ss1LQ@mail.gmail.com>
 <CANNd7=ky-7aQc-OjtPHDTPxMKxwkzyuWAGYPaVSJTsKfFg1v8w@mail.gmail.com>
 <CANNd7=mNYabPvvNEKEtKmhQXFV-uO-teERxLYOz1=sD=_w6epg@mail.gmail.com>
 <CANNd7==8Sgf2ueA08wpROe6CrD_n7==Gz7tSr_ncdpK3XPwoSw@mail.gmail.com>
 <CANNd7=ngXVKsaEwyQVmzsuVuQN5Bxcgnwmtk-EJq1ucUBt9iOw@mail.gmail.com>
 <CANNd7=mF44uUA8Y6VdmHV3QnYr_mJdoP2C-MY0-2nzULCSVoCA@mail.gmail.com>
 <CANNd7=m4vdn1jUVPP3+a9g7cTRye_a=PrvSe43eSA_NdvuaStg@mail.gmail.com>
 <CANNd7==usdHMse-okiSLnJZ_Lj_bTSnVLWLsF5O_2-xCAfaCDQ@mail.gmail.com>
 <CANNd7==3TOGYzS0aYNOmeakn2woD+U+o6GfWhKy1-BuR8WfVzQ@mail.gmail.com>
 <CANNd7==P3-yKKJUuka9+Fmajb9c7+b2X516o9hQGThyKQt0d4Q@mail.gmail.com>
 <CAPekMCncKgUyuRDd86ioLkABGG-fAVQZ6FyChgNrrm4orBmq4g@mail.gmail.com>
 <CAL6gwnLxhX2ojubf0S=4M3RCbrk7tRYsAk3pYkCkCGt5cUnkmw@mail.gmail.com>
 <CANNd7=k56MBDsbTiOREvgg81EvP1FM_eKqZPCbi2fyvyicWq=g@mail.gmail.com>
 <CALEXWq0Lyd2WUQYxKYn=7SSS4gp3KMHL6bdfgpCwi-J3qg0zHg@mail.gmail.com>
 <CANNd7=kvKBPXCnhyrAq6a6siESaYzrVcz=a4ATZ0=5tLU_ChAA@mail.gmail.com>
Message-ID: <CANNd7==VmSRt_11AXseDgJAb147ef1oMP5idXY4DKRDQ51faAQ@mail.gmail.com>

OpenBlas seems to have a performance similar to Intel MKL, as is stated in
Wikipedia:

https://en.m.wikipedia.org/wiki/OpenBLAS

However, I would suggest debating this topic in the R Consortium and the R
Foundation, for taking the best decision possible for the future or R.

Thank you all,
Juan

El 31/10/2017 2:55 p. m., "I?aki ?car" <i.ucar86 at gmail.com> escribi?:

2017-10-31 14:34 GMT+01:00 Juan Telleria <jtelleriar at gmail.com>:
> So as long as I can read, OpenBlas, for Windows, might be a worth
> considering option:
> http://www.openblas.net
>
> But Intel MKL also seems to be free*:
> https://software.intel.com/en-us/articles/free-mkl

install.packages("rmsfact")
sub(".*because ", "", rmsfact::rmsfact(8))

I?aki

	[[alternative HTML version deleted]]


From tylermw at gmail.com  Tue Oct 31 16:01:31 2017
From: tylermw at gmail.com (Tyler)
Date: Tue, 31 Oct 2017 11:01:31 -0400
Subject: [Rd] Bug in model.matrix.default for higher-order interaction
 encoding when specific model terms are missing
In-Reply-To: <CACg-3uZiwGNQUF3ZsoE7w7fwQ8xEXWfs9L=vpJskgOuf=QiTPw@mail.gmail.com>
References: <CACg-3uZiwGNQUF3ZsoE7w7fwQ8xEXWfs9L=vpJskgOuf=QiTPw@mail.gmail.com>
Message-ID: <CAJhwqzSEFPOqSmKkRq9dCe2zJQ_JwQiVyNKwAdACOE3Lh+COig@mail.gmail.com>

Hi Arie,

Thank you for your further research into the issue.

Regarding Stata: On the other hand, JMP gives model matrices that use the
main effects contrasts in computing the higher order interactions, without
the dummy variable encoding. I verified this both by analyzing the linear
model given in my first example and noting that JMP has one more degree of
freedom than R for the same model, as well as looking at the generated
model matrices. It's easy to find a design where JMP will allow us fit our
model with goodness-of-fit estimates and R will not due to the extra
degree(s) of freedom required. Let's keep the conversation limited to R.

I want to refocus back onto my original bug report, which was not for a
missing main effects term, but rather for a missing lower-order interaction
term. The behavior of model.matrix.default() for a missing main effects
term is a nice example to demonstrate how model.matrix encodes with dummy
variables instead of contrasts, but doesn't demonstrate the inconsistent
behavior my bug report highlighted.

I went looking for documentation on this behavior, and the issue stems not
from model.matrix.default(), but rather the terms() function in
interpreting the formula. This "clever" replacement of contrasts by dummy
variables to maintain marginality (presuming that's the reason) is not
described anywhere in the documentation for either the model.matrix() or
the terms() function. In order to find a description for the behavior, I
had to look in the underlying C code, buried above the "TermCode" function
of the "model.c" file, which says:

"TermCode decides on the encoding of a model term. Returns 1 if variable
``whichBit'' in ``thisTerm'' is to be encoded by contrasts and 2 if it is
to be encoded by dummy variables.  This is decided using the heuristic
described in Statistical Models in S, page 38."

I do not have a copy of this book, and I suspect most R users do not as
well. Thankfully, however, some of the pages describing this behavior were
available as part of Amazon's "Look Inside" feature--but if not for that, I
would have no idea what heuristic R was using. Since those pages could made
unavailable by Amazon at any time, at the very least we have an problem
with a lack of documentation.

However, I still believe there is a bug when comparing R's implementation
to the heuristic described in the book. From Statistical Models in S, page
38-39:

"Suppose F_j is any factor included in term T_i. Let T_{i(j)} denote the
margin of T_i for factor F_j--that is, the term obtained by dropping F_j
from T_i. We say that T_{i(j)} has appeared in the formula if there is some
term T_i' for i' < i such that T_i' contains all the factors appearing
in T_{i(j)}.
The usual case is that T_{i(j)} itself is one of the preceding terms. Then
F_j is coded by contrasts if T_{i(j)} has appeared in the formula and by
dummy variables if it has not"

Here, F_j refers to a factor (variable) in a model and not a categorical
factor, as specified later in that section (page 40): "Numeric variables
appear in the computations as themselves, uncoded. Therefore, the rule does
not do anything special for them, and it remains valid, in a trivial sense,
whenever any of the F_j is numeric rather than categorical."

Going back to my original example with three variables: X1 (numeric), X2
(numeric), X3 (categorical). This heuristic prescribes encoding X1:X2:X3
with contrasts as long as X1:X2, X1:X3, and X2:X3 exist in the formula.
When any of the preceding terms do not exist, this heuristic tells us to
use dummy variables to encode the interaction (e.g. "F_j [the interaction
term] is coded ... by dummy variables if it [any of the marginal terms
obtained by dropping a single factor in the interaction] has not [appeared
in the formula]"). However, the example I gave demonstrated that this dummy
variable encoding only occurs for the model where the missing term is the
numeric-numeric interaction, "~(X1+X2+X3)^3-X1:X2". Otherwise, the
interaction term X1:X2:X3 is encoded by contrasts, not dummy variables.
This is inconsistent with the description of the intended behavior given in
the book.

Best regards,
Tyler


On Fri, Oct 27, 2017 at 2:18 PM, Arie ten Cate <arietencate at gmail.com>
wrote:

> Hello Tyler,
>
> I want to bring to your attention the following document: "What
> happens if you omit the main effect in a regression model with an
> interaction?" (https://stats.idre.ucla.edu/stata/faq/what-happens-if-you-o
> mit-the-main-effect-in-a-regression-model-with-an-interaction).
> This gives a useful review of the problem. Your example is Case 2: a
> continuous and a categorical regressor.
>
> The numerical examples are coded in Stata, and they give the same
> result as in R. Hence, if this is a bug in R then it is also a bug in
> Stata. That seems very unlikely.
>
> Here is a simulation in R of the above mentioned Case 2 in Stata:
>
> df <- expand.grid(socst=c(-1:1),grp=c("1","2","3","4"))
> print("Full model")
> print(model.matrix(~(socst+grp)^2 ,data=df))
> print("Example 2.1: drop socst")
> print(model.matrix(~(socst+grp)^2 -socst ,data=df))
> print("Example 2.2: drop grp")
> print(model.matrix(~(socst+grp)^2 -grp ,data=df))
>
> This gives indeed the following regressors:
>
> "Full model"
> (Intercept) socst grp2 grp3 grp4 socst:grp2 socst:grp3 socst:grp4
> "Example 2.1: drop socst"
> (Intercept) grp2 grp3 grp4 socst:grp1 socst:grp2 socst:grp3 socst:grp4
> "Example 2.2: drop grp"
> (Intercept) socst socst:grp2 socst:grp3 socst:grp4
>
> There is a little bit of R documentation about this, based on the
> concept of marginality, which typically forbids a model having an
> interaction but not the corresponding main effects. (You might see the
> references in https://en.wikipedia.org/wiki/Principle_of_marginality )
>     See "An Introduction to R", by Venables and Smith and the R Core
> Team. At the bottom of page 52 (PDF: 57) it says: "Although the
> details are complicated, model formulae in R will normally generate
> the models that an expert statistician would expect, provided that
> marginality is preserved. Fitting, for [a contrary] example, a model
> with an interaction but not the corresponding main effects will in
> general lead to surprising results ....".
>     The Reference Manual states that the R functions dropterm() and
> addterm() resp. drop or add only terms such that marginality is
> preserved.
>
> Finally, about your singular matrix t(mm)%*%mm. This is in fact
> Example 2.1 in Case 2 discussed above. As discussed there, in Stata
> and in R the drop of the continuous variable has no effect on the
> degrees of freedom here: it is just a reparameterisation of the full
> model, protecting you against losing marginality... Hence the
> model.matrix 'mm' is still square and nonsingular after the drop of
> X1, unless of course when a row is removed from the matrix 'design'
> when before creating 'mm'.
>
>     Arie
>
> On Sun, Oct 15, 2017 at 7:05 PM, Tyler <tylermw at gmail.com> wrote:
> > You could possibly try to explain away the behavior for a missing main
> > effects term, since without the main effects term we don't have main
> effect
> > columns in the model matrix used to compute the interaction columns (At
> > best this is undocumented behavior--I still think it's a bug, as we know
> > how we would encode the categorical factors if they were in fact present.
> > It's either specified in contrasts.arg or using the default set in
> > options). However, when all the main effects are present, why would the
> > three-factor interaction column not simply be the product of the main
> > effect columns? In my example: we know X1, we know X2, and we know X3.
> Why
> > does the encoding of X1:X2:X3 depend on whether we specified a two-factor
> > interaction, AND only changes for specific missing interactions?
> >
> > In addition, I can use a two-term example similar to yours to show how
> this
> > behavior results in a singular covariance matrix when, given the desired
> > factor encoding, it should not be singular.
> >
> > We start with a full factorial design for a two-level continuous factor
> and
> > a three-level categorical factor, and remove a single row. This design
> > matrix does not leave enough degrees of freedom to determine
> > goodness-of-fit, but should allow us to obtain parameter estimates.
> >
> >> design = expand.grid(X1=c(1,-1),X2=c("A","B","C"))
> >> design = design[-1,]
> >> design
> >   X1 X2
> > 2 -1  A
> > 3  1  B
> > 4 -1  B
> > 5  1  C
> > 6 -1  C
> >
> > Here, we first calculate the model matrix for the full model, and then
> > manually remove the X1 column from the model matrix. This gives us the
> > model matrix one would expect if X1 were removed from the model. We then
> > successfully calculate the covariance matrix.
> >
> >> mm = model.matrix(~(X1+X2)^2,data=design)
> >> mm
> >   (Intercept) X1 X2B X2C X1:X2B X1:X2C
> > 2           1 -1   0   0      0      0
> > 3           1  1   1   0      1      0
> > 4           1 -1   1   0     -1      0
> > 5           1  1   0   1      0      1
> > 6           1 -1   0   1      0     -1
> >
> >> mm = mm[,-2]
> >> solve(t(mm) %*% mm)
> >             (Intercept)  X2B  X2C X1:X2B X1:X2C
> > (Intercept)           1 -1.0 -1.0    0.0    0.0
> > X2B                  -1  1.5  1.0    0.0    0.0
> > X2C                  -1  1.0  1.5    0.0    0.0
> > X1:X2B                0  0.0  0.0    0.5    0.0
> > X1:X2C                0  0.0  0.0    0.0    0.5
> >
> > Here, we see the actual behavior for model.matrix. The undesired
> re-coding
> > of the model matrix interaction term makes the information matrix
> singular.
> >
> >> mm = model.matrix(~(X1+X2)^2-X1,data=design)
> >> mm
> >   (Intercept) X2B X2C X1:X2A X1:X2B X1:X2C
> > 2           1   0   0     -1      0      0
> > 3           1   1   0      0      1      0
> > 4           1   1   0      0     -1      0
> > 5           1   0   1      0      0      1
> > 6           1   0   1      0      0     -1
> >
> >> solve(t(mm) %*% mm)
> > Error in solve.default(t(mm) %*% mm) : system is computationally
> singular:
> > reciprocal condition number = 5.55112e-18
> >
> > I still believe this is a bug.
> >
> > Best regards,
> > Tyler Morgan-Wall
> >
> > On Sun, Oct 15, 2017 at 1:49 AM, Arie ten Cate <arietencate at gmail.com>
> > wrote:
> >
> >> I think it is not a bug. It is a general property of interactions.
> >> This property is best observed if all variables are factors
> >> (qualitative).
> >>
> >> For example, you have three variables (factors). You ask for as many
> >> interactions as possible, except an interaction term between two
> >> particular variables. When this interaction is not a constant, it is
> >> different for different values of the remaining variable. More
> >> precisely: for all values of that variable. In other words: you have a
> >> three-way interaction, with all values of that variable.
> >>
> >> An even smaller example is the following script with only two
> >> variables, each being a factor:
> >>
> >>  df <- expand.grid(X1=c("p","q"), X2=c("A","B","C"))
> >>  print(model.matrix(~(X1+X2)^2    ,data=df))
> >>  print(model.matrix(~(X1+X2)^2 -X1,data=df))
> >>  print(model.matrix(~(X1+X2)^2 -X2,data=df))
> >>
> >> The result is:
> >>
> >>   (Intercept) X1q X2B X2C X1q:X2B X1q:X2C
> >> 1           1   0   0   0       0       0
> >> 2           1   1   0   0       0       0
> >> 3           1   0   1   0       0       0
> >> 4           1   1   1   0       1       0
> >> 5           1   0   0   1       0       0
> >> 6           1   1   0   1       0       1
> >>
> >>   (Intercept) X2B X2C X1q:X2A X1q:X2B X1q:X2C
> >> 1           1   0   0       0       0       0
> >> 2           1   0   0       1       0       0
> >> 3           1   1   0       0       0       0
> >> 4           1   1   0       0       1       0
> >> 5           1   0   1       0       0       0
> >> 6           1   0   1       0       0       1
> >>
> >>   (Intercept) X1q X1p:X2B X1q:X2B X1p:X2C X1q:X2C
> >> 1           1   0       0       0       0       0
> >> 2           1   1       0       0       0       0
> >> 3           1   0       1       0       0       0
> >> 4           1   1       0       1       0       0
> >> 5           1   0       0       0       1       0
> >> 6           1   1       0       0       0       1
> >>
> >> Thus, in the second result, we have no main effect of X1. Instead, the
> >> effect of X1 depends on the value of X2; either A or B or C. In fact,
> >> this is a two-way interaction, including all three values of X2. In
> >> the third result, we have no main effect of X2, The effect of X2
> >> depends on the value of X1; either p or q.
> >>
> >> A complicating element with your example seems to be that your X1 and
> >> X2 are not factors.
> >>
> >>    Arie
> >>
> >> On Thu, Oct 12, 2017 at 7:12 PM, Tyler <tylermw at gmail.com> wrote:
> >> > Hi,
> >> >
> >> > I recently ran into an inconsistency in the way model.matrix.default
> >> > handles factor encoding for higher level interactions with categorical
> >> > variables when the full hierarchy of effects is not present.
> Depending on
> >> > which lower level interactions are specified, the factor encoding
> changes
> >> > for a higher level interaction. Consider the following minimal
> >> reproducible
> >> > example:
> >> >
> >> > --------------
> >> >
> >> >> runmatrix = expand.grid(X1=c(1,-1),X2=c(1,-1),X3=c("A","B","C"))>
> >> model.matrix(~(X1+X2+X3)^3,data=runmatrix)   (Intercept) X1 X2 X3B X3C
> >> X1:X2 X1:X3B X1:X3C X2:X3B X2:X3C X1:X2:X3B X1:X2:X3C
> >> > 1            1  1  1   0   0     1      0      0      0      0
> >> > 0         0
> >> > 2            1 -1  1   0   0    -1      0      0      0      0
> >> > 0         0
> >> > 3            1  1 -1   0   0    -1      0      0      0      0
> >> > 0         0
> >> > 4            1 -1 -1   0   0     1      0      0      0      0
> >> > 0         0
> >> > 5            1  1  1   1   0     1      1      0      1      0
> >> > 1         0
> >> > 6            1 -1  1   1   0    -1     -1      0      1      0
> >> > -1         0
> >> > 7            1  1 -1   1   0    -1      1      0     -1      0
> >> > -1         0
> >> > 8            1 -1 -1   1   0     1     -1      0     -1      0
> >> > 1         0
> >> > 9            1  1  1   0   1     1      0      1      0      1
> >> > 0         1
> >> > 10           1 -1  1   0   1    -1      0     -1      0      1
> >> > 0        -1
> >> > 11           1  1 -1   0   1    -1      0      1      0     -1
> >> > 0        -1
> >> > 12           1 -1 -1   0   1     1      0     -1      0     -1
> >> > 0         1
> >> > attr(,"assign")
> >> >  [1] 0 1 2 3 3 4 5 5 6 6 7 7
> >> > attr(,"contrasts")
> >> > attr(,"contrasts")$X3
> >> > [1] "contr.treatment"
> >> >
> >> > --------------
> >> >
> >> > Specifying the full hierarchy gives us what we expect: the interaction
> >> > columns are simply calculated from the product of the main effect
> >> columns.
> >> > The interaction term X1:X2:X3 gives us two columns in the model
> matrix,
> >> > X1:X2:X3B and X1:X2:X3C, matching the products of the main effects.
> >> >
> >> > If we remove either the X2:X3 interaction or the X1:X3 interaction, we
> >> get
> >> > what we would expect for the X1:X2:X3 interaction, but when we remove
> the
> >> > X1:X2 interaction the encoding for X1:X2:X3 changes completely:
> >> >
> >> > --------------
> >> >
> >> >> model.matrix(~(X1+X2+X3)^3-X1:X3,data=runmatrix)   (Intercept) X1 X2
> >> X3B X3C X1:X2 X2:X3B X2:X3C X1:X2:X3B X1:X2:X3C
> >> > 1            1  1  1   0   0     1      0      0         0         0
> >> > 2            1 -1  1   0   0    -1      0      0         0         0
> >> > 3            1  1 -1   0   0    -1      0      0         0         0
> >> > 4            1 -1 -1   0   0     1      0      0         0         0
> >> > 5            1  1  1   1   0     1      1      0         1         0
> >> > 6            1 -1  1   1   0    -1      1      0        -1         0
> >> > 7            1  1 -1   1   0    -1     -1      0        -1         0
> >> > 8            1 -1 -1   1   0     1     -1      0         1         0
> >> > 9            1  1  1   0   1     1      0      1         0         1
> >> > 10           1 -1  1   0   1    -1      0      1         0        -1
> >> > 11           1  1 -1   0   1    -1      0     -1         0        -1
> >> > 12           1 -1 -1   0   1     1      0     -1         0         1
> >> > attr(,"assign")
> >> >  [1] 0 1 2 3 3 4 5 5 6 6
> >> > attr(,"contrasts")
> >> > attr(,"contrasts")$X3
> >> > [1] "contr.treatment"
> >> >
> >> >
> >> >
> >> >> model.matrix(~(X1+X2+X3)^3-X2:X3,data=runmatrix)   (Intercept) X1 X2
> >> X3B X3C X1:X2 X1:X3B X1:X3C X1:X2:X3B X1:X2:X3C
> >> > 1            1  1  1   0   0     1      0      0         0         0
> >> > 2            1 -1  1   0   0    -1      0      0         0         0
> >> > 3            1  1 -1   0   0    -1      0      0         0         0
> >> > 4            1 -1 -1   0   0     1      0      0         0         0
> >> > 5            1  1  1   1   0     1      1      0         1         0
> >> > 6            1 -1  1   1   0    -1     -1      0        -1         0
> >> > 7            1  1 -1   1   0    -1      1      0        -1         0
> >> > 8            1 -1 -1   1   0     1     -1      0         1         0
> >> > 9            1  1  1   0   1     1      0      1         0         1
> >> > 10           1 -1  1   0   1    -1      0     -1         0        -1
> >> > 11           1  1 -1   0   1    -1      0      1         0        -1
> >> > 12           1 -1 -1   0   1     1      0     -1         0         1
> >> > attr(,"assign")
> >> >  [1] 0 1 2 3 3 4 5 5 6 6
> >> > attr(,"contrasts")
> >> > attr(,"contrasts")$X3
> >> > [1] "contr.treatment"
> >> >
> >> >
> >> >> model.matrix(~(X1+X2+X3)^3-X1:X2,data=runmatrix)   (Intercept) X1 X2
> >> X3B X3C X1:X3B X1:X3C X2:X3B X2:X3C X1:X2:X3A X1:X2:X3B X1:X2:X3C
> >> > 1            1  1  1   0   0      0      0      0      0         1
> >> >     0         0
> >> > 2            1 -1  1   0   0      0      0      0      0        -1
> >> >     0         0
> >> > 3            1  1 -1   0   0      0      0      0      0        -1
> >> >     0         0
> >> > 4            1 -1 -1   0   0      0      0      0      0         1
> >> >     0         0
> >> > 5            1  1  1   1   0      1      0      1      0         0
> >> >     1         0
> >> > 6            1 -1  1   1   0     -1      0      1      0         0
> >> >    -1         0
> >> > 7            1  1 -1   1   0      1      0     -1      0         0
> >> >    -1         0
> >> > 8            1 -1 -1   1   0     -1      0     -1      0         0
> >> >     1         0
> >> > 9            1  1  1   0   1      0      1      0      1         0
> >> >     0         1
> >> > 10           1 -1  1   0   1      0     -1      0      1         0
> >> >     0        -1
> >> > 11           1  1 -1   0   1      0      1      0     -1         0
> >> >     0        -1
> >> > 12           1 -1 -1   0   1      0     -1      0     -1         0
> >> >     0         1
> >> > attr(,"assign")
> >> >  [1] 0 1 2 3 3 4 4 5 5 6 6 6
> >> > attr(,"contrasts")
> >> > attr(,"contrasts")$X3
> >> > [1] "contr.treatment"
> >> >
> >> > --------------
> >> >
> >> > Here, we now see the encoding for the interaction X1:X2:X3 is now the
> >> > interaction of X1 and X2 with a new encoding for X3 where each factor
> >> level
> >> > is represented by its own column. I would expect, given the two column
> >> > dummy variable encoding for X3, that the X1:X2:X3 column would also be
> >> two
> >> > columns regardless of what two-factor interactions we also specified,
> but
> >> > in this case it switches to three. If other two factor interactions
> are
> >> > missing in addition to X1:X2, this issue still occurs. This also
> happens
> >> > regardless of the contrast specified in contrasts.arg for X3. I don't
> see
> >> > any reasoning for this behavior given in the documentation, so I
> suspect
> >> it
> >> > is a bug.
> >> >
> >> > Best regards,
> >> > Tyler Morgan-Wall
> >> >
> >> >         [[alternative HTML version deleted]]
> >> >
> >> > ______________________________________________
> >> > R-devel at r-project.org mailing list
> >> > https://stat.ethz.ch/mailman/listinfo/r-devel
> >>
> >
> >         [[alternative HTML version deleted]]
> >
> > ______________________________________________
> > R-devel at r-project.org mailing list
> > https://stat.ethz.ch/mailman/listinfo/r-devel
>

	[[alternative HTML version deleted]]


