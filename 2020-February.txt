From k|m@|@me @end|ng |rom y@hoo@|r  Mon Feb  3 07:23:01 2020
From: k|m@|@me @end|ng |rom y@hoo@|r (ismael ismael)
Date: Mon, 3 Feb 2020 06:23:01 +0000 (UTC)
Subject: [Rd] Stroring and extracting AICs from an ARIMA model using a
 nested loop
References: <1120275228.1123321.1580710981461.ref@mail.yahoo.com>
Message-ID: <1120275228.1123321.1580710981461@mail.yahoo.com>

Hello
I am trying to extract AICs from an ARIMA estimation with different
combinations of p & q ( p =0,1,2,3
and q=0,1.2,3). I have tried using the following code unsucessfully. Can
anyone help?

code:
storage1 <- numeric(16)
for (p in 0:3){

? ? for (q in 0:3){
?
? ? storage1[p]? <- arima(x,order=c(p,0,q), method="ML")}
}
storage1$aic

	[[alternative HTML version deleted]]


From ru|pb@rr@d@@ @end|ng |rom @@po@pt  Mon Feb  3 10:46:32 2020
From: ru|pb@rr@d@@ @end|ng |rom @@po@pt (Rui Barradas)
Date: Mon, 3 Feb 2020 09:46:32 +0000
Subject: [Rd] Stroring and extracting AICs from an ARIMA model using a
 nested loop
In-Reply-To: <1120275228.1123321.1580710981461@mail.yahoo.com>
References: <1120275228.1123321.1580710981461.ref@mail.yahoo.com>
 <1120275228.1123321.1580710981461@mail.yahoo.com>
Message-ID: <6edaef9e-cd53-a81e-d1a4-4138f9de4134@sapo.pt>

Hello,

You can solve the problem in two different ways.

1. Redefine storage1 as a matrix and extract the aic *in* the loop.

storage1 <- matrix(0, 4, 4)
for(p in 0:3){
   for(q in 0:3){
     storage1[p + 1, q + 1] <- arima(etc)$aic
   }
}


2. define storage1 as a list.

storage1 <- vector("list", 16)
i <- 0L
for(p in 0:3){
   for(q in 0:3){
     i <- i + 1L
     storage1[[i]] <- arima(etc)
   }
}

lapply(storage1, '[[', "aic")  # get the aic's.

Maybe sapply is better it will return a vector.


Hope this helps,

Rui Barradas




?s 06:23 de 03/02/20, ismael ismael via R-devel escreveu:
> Hello
> I am trying to extract AICs from an ARIMA estimation with different
> combinations of p & q ( p =0,1,2,3
> and q=0,1.2,3). I have tried using the following code unsucessfully. Can
> anyone help?
> 
> code:
> storage1 <- numeric(16)
> for (p in 0:3){
> 
>  ? ? for (q in 0:3){
>   
>  ? ? storage1[p]? <- arima(x,order=c(p,0,q), method="ML")}
> }
> storage1$aic
> 
> 	[[alternative HTML version deleted]]
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>


From k|m@|@me @end|ng |rom y@hoo@|r  Mon Feb  3 11:09:24 2020
From: k|m@|@me @end|ng |rom y@hoo@|r (ismael ismael)
Date: Mon, 3 Feb 2020 04:09:24 -0600
Subject: [Rd] Stroring and extracting AICs from an ARIMA model using a
 nested loop
In-Reply-To: <6edaef9e-cd53-a81e-d1a4-4138f9de4134@sapo.pt>
References: <6edaef9e-cd53-a81e-d1a4-4138f9de4134@sapo.pt>
Message-ID: <5A8A4646-6443-4A53-9D49-1AE0229109A5@yahoo.fr>

It works!!!
Thank you so much for your help!

Sent from my iPhone

> On Feb 3, 2020, at 3:47 AM, Rui Barradas <ruipbarradas at sapo.pt> wrote:
> 
> ?Hello,
> 
> You can solve the problem in two different ways.
> 
> 1. Redefine storage1 as a matrix and extract the aic *in* the loop.
> 
> storage1 <- matrix(0, 4, 4)
> for(p in 0:3){
>  for(q in 0:3){
>    storage1[p + 1, q + 1] <- arima(etc)$aic
>  }
> }
> 
> 
> 2. define storage1 as a list.
> 
> storage1 <- vector("list", 16)
> i <- 0L
> for(p in 0:3){
>  for(q in 0:3){
>    i <- i + 1L
>    storage1[[i]] <- arima(etc)
>  }
> }
> 
> lapply(storage1, '[[', "aic")  # get the aic's.
> 
> Maybe sapply is better it will return a vector.
> 
> 
> Hope this helps,
> 
> Rui Barradas
> 
> 
> 
> 
> ?s 06:23 de 03/02/20, ismael ismael via R-devel escreveu:
>> Hello
>> I am trying to extract AICs from an ARIMA estimation with different
>> combinations of p & q ( p =0,1,2,3
>> and q=0,1.2,3). I have tried using the following code unsucessfully. Can
>> anyone help?
>> code:
>> storage1 <- numeric(16)
>> for (p in 0:3){
>>     for (q in 0:3){
>>       storage1[p]  <- arima(x,order=c(p,0,q), method="ML")}
>> }
>> storage1$aic
>>    [[alternative HTML version deleted]]
>> ______________________________________________
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel


From k|m@|@me @end|ng |rom y@hoo@|r  Mon Feb  3 11:09:24 2020
From: k|m@|@me @end|ng |rom y@hoo@|r (ismael ismael)
Date: Mon, 3 Feb 2020 04:09:24 -0600
Subject: [Rd] Stroring and extracting AICs from an ARIMA model using a
 nested loop
In-Reply-To: <6edaef9e-cd53-a81e-d1a4-4138f9de4134@sapo.pt>
References: <6edaef9e-cd53-a81e-d1a4-4138f9de4134@sapo.pt>
Message-ID: <5A8A4646-6443-4A53-9D49-1AE0229109A5@yahoo.fr>

It works!!!
Thank you so much for your help!

Sent from my iPhone

> On Feb 3, 2020, at 3:47 AM, Rui Barradas <ruipbarradas at sapo.pt> wrote:
> 
> ?Hello,
> 
> You can solve the problem in two different ways.
> 
> 1. Redefine storage1 as a matrix and extract the aic *in* the loop.
> 
> storage1 <- matrix(0, 4, 4)
> for(p in 0:3){
>  for(q in 0:3){
>    storage1[p + 1, q + 1] <- arima(etc)$aic
>  }
> }
> 
> 
> 2. define storage1 as a list.
> 
> storage1 <- vector("list", 16)
> i <- 0L
> for(p in 0:3){
>  for(q in 0:3){
>    i <- i + 1L
>    storage1[[i]] <- arima(etc)
>  }
> }
> 
> lapply(storage1, '[[', "aic")  # get the aic's.
> 
> Maybe sapply is better it will return a vector.
> 
> 
> Hope this helps,
> 
> Rui Barradas
> 
> 
> 
> 
> ?s 06:23 de 03/02/20, ismael ismael via R-devel escreveu:
>> Hello
>> I am trying to extract AICs from an ARIMA estimation with different
>> combinations of p & q ( p =0,1,2,3
>> and q=0,1.2,3). I have tried using the following code unsucessfully. Can
>> anyone help?
>> code:
>> storage1 <- numeric(16)
>> for (p in 0:3){
>>     for (q in 0:3){
>>       storage1[p]  <- arima(x,order=c(p,0,q), method="ML")}
>> }
>> storage1$aic
>>    [[alternative HTML version deleted]]
>> ______________________________________________
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel


From m@ech|er @end|ng |rom @t@t@m@th@ethz@ch  Mon Feb  3 12:04:45 2020
From: m@ech|er @end|ng |rom @t@t@m@th@ethz@ch (Martin Maechler)
Date: Mon, 3 Feb 2020 12:04:45 +0100
Subject: [Rd] Stroring and extracting AICs from an ARIMA model using a
 nested loop
In-Reply-To: <5A8A4646-6443-4A53-9D49-1AE0229109A5@yahoo.fr>
References: <6edaef9e-cd53-a81e-d1a4-4138f9de4134@sapo.pt>
 <5A8A4646-6443-4A53-9D49-1AE0229109A5@yahoo.fr>
Message-ID: <24119.65101.642933.417166@stat.math.ethz.ch>

>>>>> ismael ismael via R-devel 
>>>>>     on Mon, 3 Feb 2020 04:09:24 -0600 writes:

    > It works!!!
    > Thank you so much for your help!

and it was an "R help" question which  Rui  so generously answered.

But this is the R-devel mailing list.
Please do *NOT* misuse it for  R-help questions in the future:

These should go to the R-help mailing list instead!

Best,
Martin Maechler


    >> On Feb 3, 2020, at 3:47 AM, Rui Barradas <ruipbarradas at sapo.pt> wrote:
    >> 
    >> ?Hello,
    >> 
    >> You can solve the problem in two different ways.
    >> 
    >> 1. Redefine storage1 as a matrix and extract the aic *in* the loop.
    >> 
    >> storage1 <- matrix(0, 4, 4)
    >> for(p in 0:3){
    >> for(q in 0:3){
    >> storage1[p + 1, q + 1] <- arima(etc)$aic
    >> }
    >> }
    >> 
    >> 
    >> 2. define storage1 as a list.
    >> 
    >> storage1 <- vector("list", 16)
    >> i <- 0L
    >> for(p in 0:3){
    >> for(q in 0:3){
    >> i <- i + 1L
    >> storage1[[i]] <- arima(etc)
    >> }
    >> }
    >> 
    >> lapply(storage1, '[[', "aic")  # get the aic's.
    >> 
    >> Maybe sapply is better it will return a vector.
    >> 
    >> 
    >> Hope this helps,
    >> 
    >> Rui Barradas
    >> 
    >> 
    >> 
    >> 
    >> ?s 06:23 de 03/02/20, ismael ismael via R-devel escreveu:
    >>> Hello
    >>> I am trying to extract AICs from an ARIMA estimation with different
    >>> combinations of p & q ( p =0,1,2,3
    >>> and q=0,1.2,3). I have tried using the following code unsucessfully. Can
    >>> anyone help?
    >>> code:
    >>> storage1 <- numeric(16)
    >>> for (p in 0:3){
    >>> for (q in 0:3){
    >>> storage1[p]  <- arima(x,order=c(p,0,q), method="ML")}
    >>> }
    >>> storage1$aic
    >>> [[alternative HTML version deleted]]
    >>> ______________________________________________
    >>> R-devel at r-project.org mailing list
    >>> https://stat.ethz.ch/mailman/listinfo/r-devel

    > ______________________________________________
    > R-devel at r-project.org mailing list
    > https://stat.ethz.ch/mailman/listinfo/r-devel


From ru|pb@rr@d@@ @end|ng |rom @@po@pt  Mon Feb  3 18:32:00 2020
From: ru|pb@rr@d@@ @end|ng |rom @@po@pt (Rui Barradas)
Date: Mon, 3 Feb 2020 17:32:00 +0000
Subject: [Rd] Stroring and extracting AICs from an ARIMA model using a
 nested loop
In-Reply-To: <24119.65101.642933.417166@stat.math.ethz.ch>
References: <6edaef9e-cd53-a81e-d1a4-4138f9de4134@sapo.pt>
 <5A8A4646-6443-4A53-9D49-1AE0229109A5@yahoo.fr>
 <24119.65101.642933.417166@stat.math.ethz.ch>
Message-ID: <3e93f7d9-13e4-d27b-ee9f-0d0f509d4fc0@sapo.pt>

Hello,

Inline.

?s 11:04 de 03/02/20, Martin Maechler escreveu:
>>>>>> ismael ismael via R-devel
>>>>>>      on Mon, 3 Feb 2020 04:09:24 -0600 writes:
> 
>      > It works!!!
>      > Thank you so much for your help!
> 
> and it was an "R help" question which  Rui  so generously answered.
> 
> But this is the R-devel mailing list.
> Please do *NOT* misuse it for  R-help questions in the future:
> 
> These should go to the R-help mailing list instead!

Yes, and I had noticed it but then, after writing down the answer, 
forgot to mention it.
Thanks for the warning.

Rui Barradas

> 
> Best,
> Martin Maechler
> 
> 
>      >> On Feb 3, 2020, at 3:47 AM, Rui Barradas <ruipbarradas at sapo.pt> wrote:
>      >>
>      >> ?Hello,
>      >>
>      >> You can solve the problem in two different ways.
>      >>
>      >> 1. Redefine storage1 as a matrix and extract the aic *in* the loop.
>      >>
>      >> storage1 <- matrix(0, 4, 4)
>      >> for(p in 0:3){
>      >> for(q in 0:3){
>      >> storage1[p + 1, q + 1] <- arima(etc)$aic
>      >> }
>      >> }
>      >>
>      >>
>      >> 2. define storage1 as a list.
>      >>
>      >> storage1 <- vector("list", 16)
>      >> i <- 0L
>      >> for(p in 0:3){
>      >> for(q in 0:3){
>      >> i <- i + 1L
>      >> storage1[[i]] <- arima(etc)
>      >> }
>      >> }
>      >>
>      >> lapply(storage1, '[[', "aic")  # get the aic's.
>      >>
>      >> Maybe sapply is better it will return a vector.
>      >>
>      >>
>      >> Hope this helps,
>      >>
>      >> Rui Barradas
>      >>
>      >>
>      >>
>      >>
>      >> ?s 06:23 de 03/02/20, ismael ismael via R-devel escreveu:
>      >>> Hello
>      >>> I am trying to extract AICs from an ARIMA estimation with different
>      >>> combinations of p & q ( p =0,1,2,3
>      >>> and q=0,1.2,3). I have tried using the following code unsucessfully. Can
>      >>> anyone help?
>      >>> code:
>      >>> storage1 <- numeric(16)
>      >>> for (p in 0:3){
>      >>> for (q in 0:3){
>      >>> storage1[p]  <- arima(x,order=c(p,0,q), method="ML")}
>      >>> }
>      >>> storage1$aic
>      >>> [[alternative HTML version deleted]]
>      >>> ______________________________________________
>      >>> R-devel at r-project.org mailing list
>      >>> https://stat.ethz.ch/mailman/listinfo/r-devel
> 
>      > ______________________________________________
>      > R-devel at r-project.org mailing list
>      > https://stat.ethz.ch/mailman/listinfo/r-devel
>


From d@v|@ @end|ng |rom r@tud|o@com  Mon Feb  3 18:40:15 2020
From: d@v|@ @end|ng |rom r@tud|o@com (Davis Vaughan)
Date: Mon, 3 Feb 2020 12:40:15 -0500
Subject: [Rd] ALTREP "wrapper" classes needs an Extract_subset method
Message-ID: <CABzLhzxrq_ROOtzb9f_JCNVNgSHZaXmUC5xTserugC0sMwsETg@mail.gmail.com>

Hi all,

I believe I have found a bug (or perhaps just an oversight) with the ALTREP
wrapper classes. The short form of this is that I believe that the wrapper
classes need to override the default ALTREP `Extract_subset_method()` with
a method that calls `Extract_subset()` on the "wrapped" object. I have a
patch prepared here:

https://github.com/DavisVaughan/r-source/pull/1

There is currently no call to `R_set_altvec_Extract_subset_method()` in the
wrapper class init functions. This means that the default ALTREP method of
`altvec_Extract_subset_default()` is called, which simply returns `NULL`.

Consider what that means for an ALTREP compact integer seq that has been
"wrapped". The default subsetting code will eventually call
`ExtractSubset()`. That checks if the object is ALTREP, and calls the
ALTREP Extract_subset() method if so. If the return value from that is
NULL, then it will fallback to repeatedly calling `INTEGER_ELT()` to do the
subsetting. See below for the relevant section:

https://github.com/wch/r-source/blob/d1c0c6b921fc6a0cbe82c4354c6ec6ceb7f320aa/src/main/subset.c#L103

This wrapped compact integer seq is an ALTREP object, so `ALTREP(x)`
returns true. But then it just calls the default method of returning NULL
rather than calling the compact integer seq `Extract_subset()` method! This
still "works" because it falls back to `INTEGER_ELT()` for which there is
a `wrapper_integer_Elt()` method defined that will use the underlying
compact seq's `integer_Elt()` method, but it is less efficient than it
could be.

My rough benchmarks show that in R 3.6.0 the subset benchmarks at the
bottom of this message take 4ms on the compact seq, and 5ms on the wrapped
compact seq. With a patch that I have prepared, both take 4ms.

The other reason I bring this up is that it can result in bugs with some
ALTREP objects. I was working on one where it makes sense to have an
`Extract_subset()` method but not an `Elt()` method. When it gets
"wrapped", my `Extract_subset()` method is bypassed as shown above, and the
`Elt()` method is incorrectly called (which throws an error because it is
not meaningful for me).

If you all agree these changes should be made, I can submit the patch.

Thanks,
Davis

# Ensure we have enough elements for "wrapping" to kick in
x <- 1:65

# select the 1st element a large number of times
index <- rep(1L, 1e6) + 0L

# ALTREP - but not wrapped
# .Internal(inspect(x))

bench::mark(x[index], iterations = 1000)

# Wrap it by adding a dummy attribute
attributes(x) <- list(foo = "bar")

# ALTREP - wrapped + compact seq
# .Internal(inspect(x))

bench::mark(x[index], iterations = 1000)

	[[alternative HTML version deleted]]


From iuke-tier@ey m@iii@g oii uiow@@edu  Tue Feb  4 04:43:37 2020
From: iuke-tier@ey m@iii@g oii uiow@@edu (iuke-tier@ey m@iii@g oii uiow@@edu)
Date: Mon, 3 Feb 2020 21:43:37 -0600 (CST)
Subject: [Rd] 
 [External] ALTREP "wrapper" classes needs an Extract_subset method
In-Reply-To: <CABzLhzxrq_ROOtzb9f_JCNVNgSHZaXmUC5xTserugC0sMwsETg@mail.gmail.com>
References: <CABzLhzxrq_ROOtzb9f_JCNVNgSHZaXmUC5xTserugC0sMwsETg@mail.gmail.com>
Message-ID: <alpine.OSX.2.21.2002032136230.657@macbook-air-5.local>

It's not a bug as there will always be cases where ALTREP will need to
fall back. But it does look like something that would be good to
address. So please file it as a wishlist item and I'll look at a patch
if you have one.

As to your issue at the end, it seems to me that you should probably
have another look at your design. Supporting getting a subset,
including one of size one, but not getting an element seems odd, and I
suspect will get you in trouble somewhere else before long..

Best,

luke

On Mon, 3 Feb 2020, Davis Vaughan wrote:

> Hi all,
>
> I believe I have found a bug (or perhaps just an oversight) with the ALTREP
> wrapper classes. The short form of this is that I believe that the wrapper
> classes need to override the default ALTREP `Extract_subset_method()` with
> a method that calls `Extract_subset()` on the "wrapped" object. I have a
> patch prepared here:
>
> https://github.com/DavisVaughan/r-source/pull/1
>
> There is currently no call to `R_set_altvec_Extract_subset_method()` in the
> wrapper class init functions. This means that the default ALTREP method of
> `altvec_Extract_subset_default()` is called, which simply returns `NULL`.
>
> Consider what that means for an ALTREP compact integer seq that has been
> "wrapped". The default subsetting code will eventually call
> `ExtractSubset()`. That checks if the object is ALTREP, and calls the
> ALTREP Extract_subset() method if so. If the return value from that is
> NULL, then it will fallback to repeatedly calling `INTEGER_ELT()` to do the
> subsetting. See below for the relevant section:
>
> https://github.com/wch/r-source/blob/d1c0c6b921fc6a0cbe82c4354c6ec6ceb7f320aa/src/main/subset.c#L103
>
> This wrapped compact integer seq is an ALTREP object, so `ALTREP(x)`
> returns true. But then it just calls the default method of returning NULL
> rather than calling the compact integer seq `Extract_subset()` method! This
> still "works" because it falls back to `INTEGER_ELT()` for which there is
> a `wrapper_integer_Elt()` method defined that will use the underlying
> compact seq's `integer_Elt()` method, but it is less efficient than it
> could be.
>
> My rough benchmarks show that in R 3.6.0 the subset benchmarks at the
> bottom of this message take 4ms on the compact seq, and 5ms on the wrapped
> compact seq. With a patch that I have prepared, both take 4ms.
>
> The other reason I bring this up is that it can result in bugs with some
> ALTREP objects. I was working on one where it makes sense to have an
> `Extract_subset()` method but not an `Elt()` method. When it gets
> "wrapped", my `Extract_subset()` method is bypassed as shown above, and the
> `Elt()` method is incorrectly called (which throws an error because it is
> not meaningful for me).
>
> If you all agree these changes should be made, I can submit the patch.
>
> Thanks,
> Davis
>
> # Ensure we have enough elements for "wrapping" to kick in
> x <- 1:65
>
> # select the 1st element a large number of times
> index <- rep(1L, 1e6) + 0L
>
> # ALTREP - but not wrapped
> # .Internal(inspect(x))
>
> bench::mark(x[index], iterations = 1000)
>
> # Wrap it by adding a dummy attribute
> attributes(x) <- list(foo = "bar")
>
> # ALTREP - wrapped + compact seq
> # .Internal(inspect(x))
>
> bench::mark(x[index], iterations = 1000)
>
> 	[[alternative HTML version deleted]]
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>

-- 
Luke Tierney
Ralph E. Wareham Professor of Mathematical Sciences
University of Iowa                  Phone:             319-335-3386
Department of Statistics and        Fax:               319-335-3017
    Actuarial Science
241 Schaeffer Hall                  email:   luke-tierney at uiowa.edu
Iowa City, IA 52242                 WWW:  http://www.stat.uiowa.edu


From k|m@|@me @end|ng |rom y@hoo@|r  Tue Feb  4 14:20:26 2020
From: k|m@|@me @end|ng |rom y@hoo@|r (ismael ismael)
Date: Tue, 4 Feb 2020 13:20:26 +0000 (UTC)
Subject: [Rd] Stroring and extracting AICs from an ARIMA model using a
 nested loop
In-Reply-To: <6edaef9e-cd53-a81e-d1a4-4138f9de4134@sapo.pt>
References: <1120275228.1123321.1580710981461.ref@mail.yahoo.com>
 <1120275228.1123321.1580710981461@mail.yahoo.com>
 <6edaef9e-cd53-a81e-d1a4-4138f9de4134@sapo.pt>
Message-ID: <5714922.446597.1580822426141@mail.yahoo.com>

  
I am nowaware that I should not post this type of questions on this group. However, Iwould like to have some clarifications related to the response you've?alreadyprovided. The code you provided yields accurate results, however I still haveissues grasping the loop process in case 1 & 2.

In case1,?the use of?"p+1" and "q+1" is still blurry tome? Likewise "0L" and " i + 1L" in case 2.

?

Can youplease provide explanations on the loop mechanisms you've used.?




    Le lundi 3 f?vrier 2020 ? 03:47:20 UTC?6, Rui Barradas <ruipbarradas at sapo.pt> a ?crit :  
 
 Hello,

You can solve the problem in two different ways.

1. Redefine storage1 as a matrix and extract the aic *in* the loop.

storage1 <- matrix(0, 4, 4)
for(p in 0:3){
? for(q in 0:3){
? ? storage1[p + 1, q + 1] <- arima(etc)$aic
? }
}


2. define storage1 as a list.

storage1 <- vector("list", 16)
i <- 0L
for(p in 0:3){
? for(q in 0:3){
? ? i <- i + 1L
? ? storage1[[i]] <- arima(etc)
? }
}

lapply(storage1, '[[', "aic")? # get the aic's.

Maybe sapply is better it will return a vector.


Hope this helps,

Rui Barradas




?s 06:23 de 03/02/20, ismael ismael via R-devel escreveu:
> Hello
> I am trying to extract AICs from an ARIMA estimation with different
> combinations of p & q ( p =0,1,2,3
> and q=0,1.2,3). I have tried using the following code unsucessfully. Can
> anyone help?
> 
> code:
> storage1 <- numeric(16)
> for (p in 0:3){
> 
>? ? ? for (q in 0:3){
>? 
>? ? ? storage1[p]? <- arima(x,order=c(p,0,q), method="ML")}
> }
> storage1$aic
> 
> ??? [[alternative HTML version deleted]]
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
> 
  
	[[alternative HTML version deleted]]


From ru|pb@rr@d@@ @end|ng |rom @@po@pt  Tue Feb  4 16:36:30 2020
From: ru|pb@rr@d@@ @end|ng |rom @@po@pt (Rui Barradas)
Date: Tue, 4 Feb 2020 15:36:30 +0000
Subject: [Rd] Stroring and extracting AICs from an ARIMA model using a
 nested loop
In-Reply-To: <5714922.446597.1580822426141@mail.yahoo.com>
References: <1120275228.1123321.1580710981461.ref@mail.yahoo.com>
 <1120275228.1123321.1580710981461@mail.yahoo.com>
 <6edaef9e-cd53-a81e-d1a4-4138f9de4134@sapo.pt>
 <5714922.446597.1580822426141@mail.yahoo.com>
Message-ID: <555a3b0a-261f-6bbd-1f60-a075de9c7b88@sapo.pt>

Hello,

Don't worry, we've seen worst questions :).
Inline.

?s 13:20 de 04/02/20, ismael ismael escreveu:
> I am now aware that I should not post this type of questions on this 
> group. However, I would like to have some clarifications related to the 
> response you've?already provided. The code you provided yields accurate 
> results, however I still have issues grasping the loop process in case 1 
> & 2.
> 
> In case 1,?the use of?"p+1" and "q+1" is still blurry to me? 

1. R indexes starting from 1, both your orders p and q are 0:3. So to 
assign the results to the results matrix, add 1 and get indices 1:4.
You could also set the row and column names after, to make it more clear:

dimnames(storage1) <- list(paste0("p", 0:3), paste0("q", 0:3))

2. 0L is an integer, just 0 is a floating-point corresponding to the C 
language double.

class(0L)   # "integer"
class(0)    # "numeric"

typeof(0L)  # "integer"
typeof(0)   # "double"

Indices are integers, so I used integers and added 1L every iteration 
through the inner loop.

This also means that in point 1. I should have indexed the matrix with p 
+ 1L and q + 1L, see the output of

class(0:3)


Hope this helps,

Rui Barradas

Likewise
> "0L" and " i + 1L" in case 2.
> 
> Can you please provide explanations on the loop mechanisms you've used.
> 
> 
> 
> 
> 
> Le lundi 3 f?vrier 2020 ? 03:47:20 UTC?6, Rui Barradas 
> <ruipbarradas at sapo.pt> a ?crit :
> 
> 
> Hello,
> 
> You can solve the problem in two different ways.
> 
> 1. Redefine storage1 as a matrix and extract the aic *in* the loop.
> 
> storage1 <- matrix(0, 4, 4)
> for(p in 0:3){
>  ? for(q in 0:3){
>  ? ? storage1[p + 1, q + 1] <- arima(etc)$aic
>  ? }
> }
> 
> 
> 2. define storage1 as a list.
> 
> storage1 <- vector("list", 16)
> i <- 0L
> for(p in 0:3){
>  ? for(q in 0:3){
>  ? ? i <- i + 1L
>  ? ? storage1[[i]] <- arima(etc)
>  ? }
> }
> 
> lapply(storage1, '[[', "aic")? # get the aic's.
> 
> Maybe sapply is better it will return a vector.
> 
> 
> Hope this helps,
> 
> Rui Barradas
> 
> 
> 
> 
> ?s 06:23 de 03/02/20, ismael ismael via R-devel escreveu:
>  > Hello
>  > I am trying to extract AICs from an ARIMA estimation with different
>  > combinations of p & q ( p =0,1,2,3
>  > and q=0,1.2,3). I have tried using the following code unsucessfully. Can
>  > anyone help?
>  >
>  > code:
>  > storage1 <- numeric(16)
>  > for (p in 0:3){
>  >
>  >? ? ? for (q in 0:3){
>  >
>  >? ? ? storage1[p]? <- arima(x,order=c(p,0,q), method="ML")}
>  > }
>  > storage1$aic
> 
>  >
>  > ??? [[alternative HTML version deleted]]
>  >
>  > ______________________________________________
>  > R-devel at r-project.org <mailto:R-devel at r-project.org> mailing list
>  > https://stat.ethz.ch/mailman/listinfo/r-devel
> 
>  >


From j@goreck| @end|ng |rom w|t@edu@p|  Tue Feb  4 17:18:03 2020
From: j@goreck| @end|ng |rom w|t@edu@p| (Jan Gorecki)
Date: Tue, 4 Feb 2020 21:48:03 +0530
Subject: [Rd] document base::`[[.data.frame`
Message-ID: <CAOO9MKWTFqSkJ2EhD=dQ8BSnwW1wNzDk7_VGrf39xme3P2dOxA@mail.gmail.com>

Dear R-devel,

Looking at source of base::`[[.data.frame` we can see a mysterious
handling of subsetting rows and columns at the same time. That does
not seems to be dcoumented anywhere in `[[`. Could we extend
documentation for such data.frame use cases? Or if it is meant to be
used only internally, then maybe better to put that into own internal
function?

Best regards,
Jan Gorecki


From k|m@|@me @end|ng |rom y@hoo@|r  Tue Feb  4 22:00:48 2020
From: k|m@|@me @end|ng |rom y@hoo@|r (ismael ismael)
Date: Tue, 4 Feb 2020 15:00:48 -0600
Subject: [Rd] Stroring and extracting AICs from an ARIMA model using a
 nested loop
In-Reply-To: <555a3b0a-261f-6bbd-1f60-a075de9c7b88@sapo.pt>
References: <555a3b0a-261f-6bbd-1f60-a075de9c7b88@sapo.pt>
Message-ID: <B53EFAA6-175F-4131-A859-44FA7727045A@yahoo.fr>

I does help! Thank you for clarifications!


Sent from my iPhone

> On Feb 4, 2020, at 9:36 AM, Rui Barradas <ruipbarradas at sapo.pt> wrote:
> 
> ?Hello,
> 
> Don't worry, we've seen worst questions :).
> Inline.
> 
> ?s 13:20 de 04/02/20, ismael ismael escreveu:
>> I am now aware that I should not post this type of questions on this group. However, I would like to have some clarifications related to the response you've already provided. The code you provided yields accurate results, however I still have issues grasping the loop process in case 1 & 2.
>> In case 1, the use of "p+1" and "q+1" is still blurry to me? 
> 
> 1. R indexes starting from 1, both your orders p and q are 0:3. So to assign the results to the results matrix, add 1 and get indices 1:4.
> You could also set the row and column names after, to make it more clear:
> 
> dimnames(storage1) <- list(paste0("p", 0:3), paste0("q", 0:3))
> 
> 2. 0L is an integer, just 0 is a floating-point corresponding to the C language double.
> 
> class(0L)   # "integer"
> class(0)    # "numeric"
> 
> typeof(0L)  # "integer"
> typeof(0)   # "double"
> 
> Indices are integers, so I used integers and added 1L every iteration through the inner loop.
> 
> This also means that in point 1. I should have indexed the matrix with p + 1L and q + 1L, see the output of
> 
> class(0:3)
> 
> 
> Hope this helps,
> 
> Rui Barradas
> 
> Likewise
>> "0L" and " i + 1L" in case 2.
>> Can you please provide explanations on the loop mechanisms you've used.
>> Le lundi 3 f?vrier 2020 ? 03:47:20 UTC?6, Rui Barradas <ruipbarradas at sapo.pt> a ?crit :
>> Hello,
>> You can solve the problem in two different ways.
>> 1. Redefine storage1 as a matrix and extract the aic *in* the loop.
>> storage1 <- matrix(0, 4, 4)
>> for(p in 0:3){
>>   for(q in 0:3){
>>     storage1[p + 1, q + 1] <- arima(etc)$aic
>>   }
>> }
>> 2. define storage1 as a list.
>> storage1 <- vector("list", 16)
>> i <- 0L
>> for(p in 0:3){
>>   for(q in 0:3){
>>     i <- i + 1L
>>     storage1[[i]] <- arima(etc)
>>   }
>> }
>> lapply(storage1, '[[', "aic")  # get the aic's.
>> Maybe sapply is better it will return a vector.
>> Hope this helps,
>> Rui Barradas
>> ?s 06:23 de 03/02/20, ismael ismael via R-devel escreveu:
>> > Hello
>> > I am trying to extract AICs from an ARIMA estimation with different
>> > combinations of p & q ( p =0,1,2,3
>> > and q=0,1.2,3). I have tried using the following code unsucessfully. Can
>> > anyone help?
>> >
>> > code:
>> > storage1 <- numeric(16)
>> > for (p in 0:3){
>> >
>> >      for (q in 0:3){
>> >
>> >      storage1[p]  <- arima(x,order=c(p,0,q), method="ML")}
>> > }
>> > storage1$aic
>> >
>> >     [[alternative HTML version deleted]]
>> >
>> > ______________________________________________
>> > R-devel at r-project.org <mailto:R-devel at r-project.org> mailing list
>> > https://stat.ethz.ch/mailman/listinfo/r-devel
>> >


From k|m@|@me @end|ng |rom y@hoo@|r  Tue Feb  4 22:00:48 2020
From: k|m@|@me @end|ng |rom y@hoo@|r (ismael ismael)
Date: Tue, 4 Feb 2020 15:00:48 -0600
Subject: [Rd] Stroring and extracting AICs from an ARIMA model using a
 nested loop
In-Reply-To: <555a3b0a-261f-6bbd-1f60-a075de9c7b88@sapo.pt>
References: <555a3b0a-261f-6bbd-1f60-a075de9c7b88@sapo.pt>
Message-ID: <B53EFAA6-175F-4131-A859-44FA7727045A@yahoo.fr>

I does help! Thank you for clarifications!


Sent from my iPhone

> On Feb 4, 2020, at 9:36 AM, Rui Barradas <ruipbarradas at sapo.pt> wrote:
> 
> ?Hello,
> 
> Don't worry, we've seen worst questions :).
> Inline.
> 
> ?s 13:20 de 04/02/20, ismael ismael escreveu:
>> I am now aware that I should not post this type of questions on this group. However, I would like to have some clarifications related to the response you've already provided. The code you provided yields accurate results, however I still have issues grasping the loop process in case 1 & 2.
>> In case 1, the use of "p+1" and "q+1" is still blurry to me? 
> 
> 1. R indexes starting from 1, both your orders p and q are 0:3. So to assign the results to the results matrix, add 1 and get indices 1:4.
> You could also set the row and column names after, to make it more clear:
> 
> dimnames(storage1) <- list(paste0("p", 0:3), paste0("q", 0:3))
> 
> 2. 0L is an integer, just 0 is a floating-point corresponding to the C language double.
> 
> class(0L)   # "integer"
> class(0)    # "numeric"
> 
> typeof(0L)  # "integer"
> typeof(0)   # "double"
> 
> Indices are integers, so I used integers and added 1L every iteration through the inner loop.
> 
> This also means that in point 1. I should have indexed the matrix with p + 1L and q + 1L, see the output of
> 
> class(0:3)
> 
> 
> Hope this helps,
> 
> Rui Barradas
> 
> Likewise
>> "0L" and " i + 1L" in case 2.
>> Can you please provide explanations on the loop mechanisms you've used.
>> Le lundi 3 f?vrier 2020 ? 03:47:20 UTC?6, Rui Barradas <ruipbarradas at sapo.pt> a ?crit :
>> Hello,
>> You can solve the problem in two different ways.
>> 1. Redefine storage1 as a matrix and extract the aic *in* the loop.
>> storage1 <- matrix(0, 4, 4)
>> for(p in 0:3){
>>   for(q in 0:3){
>>     storage1[p + 1, q + 1] <- arima(etc)$aic
>>   }
>> }
>> 2. define storage1 as a list.
>> storage1 <- vector("list", 16)
>> i <- 0L
>> for(p in 0:3){
>>   for(q in 0:3){
>>     i <- i + 1L
>>     storage1[[i]] <- arima(etc)
>>   }
>> }
>> lapply(storage1, '[[', "aic")  # get the aic's.
>> Maybe sapply is better it will return a vector.
>> Hope this helps,
>> Rui Barradas
>> ?s 06:23 de 03/02/20, ismael ismael via R-devel escreveu:
>> > Hello
>> > I am trying to extract AICs from an ARIMA estimation with different
>> > combinations of p & q ( p =0,1,2,3
>> > and q=0,1.2,3). I have tried using the following code unsucessfully. Can
>> > anyone help?
>> >
>> > code:
>> > storage1 <- numeric(16)
>> > for (p in 0:3){
>> >
>> >      for (q in 0:3){
>> >
>> >      storage1[p]  <- arima(x,order=c(p,0,q), method="ML")}
>> > }
>> > storage1$aic
>> >
>> >     [[alternative HTML version deleted]]
>> >
>> > ______________________________________________
>> > R-devel at r-project.org <mailto:R-devel at r-project.org> mailing list
>> > https://stat.ethz.ch/mailman/listinfo/r-devel
>> >


From pd@me@ @end|ng |rom cb@@dk  Thu Feb  6 16:58:13 2020
From: pd@me@ @end|ng |rom cb@@dk (Peter Dalgaard)
Date: Thu, 6 Feb 2020 15:58:13 +0000
Subject: [Rd] R 3.6.3 scheduled for February 29
Message-ID: <8913CAB2-6C63-4563-8A88-40B991C42ABC@cbs.dk>

Full schedule is available on developer.r-project.org.

(The date is chosen to celebrate the 5th anniversary of R 1.0.0. Some irregularity may occur on the release day, since this happens to be a Saturday and the release manager is speaking at the CelebRation2020 event...) 

-- 
Peter Dalgaard, Professor,
Center for Statistics, Copenhagen Business School
Solbjerg Plads 3, 2000 Frederiksberg, Denmark
Phone: (+45)38153501
Office: A 4.23
Email: pd.mes at cbs.dk  Priv: PDalgd at gmail.com


From @purd|e@@ @end|ng |rom gm@||@com  Thu Feb  6 21:32:02 2020
From: @purd|e@@ @end|ng |rom gm@||@com (Abby Spurdle)
Date: Fri, 7 Feb 2020 09:32:02 +1300
Subject: [Rd] R 3.6.3 scheduled for February 29
In-Reply-To: <8913CAB2-6C63-4563-8A88-40B991C42ABC@cbs.dk>
References: <8913CAB2-6C63-4563-8A88-40B991C42ABC@cbs.dk>
Message-ID: <CAB8pepzEJ7MmJjpgbQDTBF7VtK2J9r5k-5zQxqvrxYvDdwy2Sg@mail.gmail.com>

Congratulations!

> celebrate (beeR=TRUE, loud.music=FALSE,
    nbeeRs=2L,
    proportion.of.tech.talk=0.4)

Why is it the 5th anniversary and the not the 20th anniversary?


On Fri, Feb 7, 2020 at 4:58 AM Peter Dalgaard via R-devel
<r-devel at r-project.org> wrote:
>
> Full schedule is available on developer.r-project.org.
>
> (The date is chosen to celebrate the 5th anniversary of R 1.0.0. Some irregularity may occur on the release day, since this happens to be a Saturday and the release manager is speaking at the CelebRation2020 event...)
>
> --
> Peter Dalgaard, Professor,
> Center for Statistics, Copenhagen Business School
> Solbjerg Plads 3, 2000 Frederiksberg, Denmark
> Phone: (+45)38153501
> Office: A 4.23
> Email: pd.mes at cbs.dk  Priv: PDalgd at gmail.com
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From bbo|ker @end|ng |rom gm@||@com  Thu Feb  6 21:43:51 2020
From: bbo|ker @end|ng |rom gm@||@com (Ben Bolker)
Date: Thu, 6 Feb 2020 15:43:51 -0500
Subject: [Rd] R 3.6.3 scheduled for February 29
In-Reply-To: <CAB8pepzEJ7MmJjpgbQDTBF7VtK2J9r5k-5zQxqvrxYvDdwy2Sg@mail.gmail.com>
References: <8913CAB2-6C63-4563-8A88-40B991C42ABC@cbs.dk>
 <CAB8pepzEJ7MmJjpgbQDTBF7VtK2J9r5k-5zQxqvrxYvDdwy2Sg@mail.gmail.com>
Message-ID: <CABghstQepeoxZXS22eNZ=zKCLhQnM8F2f6d-KL2ZnQ7k69-mNw@mail.gmail.com>

  Because it's the fifth recurrence of the date (29 February).
  https://en.wikipedia.org/wiki/The_Pirates_of_Penzance

On Thu, Feb 6, 2020 at 3:32 PM Abby Spurdle <spurdle.a at gmail.com> wrote:
>
> Congratulations!
>
> > celebrate (beeR=TRUE, loud.music=FALSE,
>     nbeeRs=2L,
>     proportion.of.tech.talk=0.4)
>
> Why is it the 5th anniversary and the not the 20th anniversary?
>
>
> On Fri, Feb 7, 2020 at 4:58 AM Peter Dalgaard via R-devel
> <r-devel at r-project.org> wrote:
> >
> > Full schedule is available on developer.r-project.org.
> >
> > (The date is chosen to celebrate the 5th anniversary of R 1.0.0. Some irregularity may occur on the release day, since this happens to be a Saturday and the release manager is speaking at the CelebRation2020 event...)
> >
> > --
> > Peter Dalgaard, Professor,
> > Center for Statistics, Copenhagen Business School
> > Solbjerg Plads 3, 2000 Frederiksberg, Denmark
> > Phone: (+45)38153501
> > Office: A 4.23
> > Email: pd.mes at cbs.dk  Priv: PDalgd at gmail.com
> >
> > ______________________________________________
> > R-devel at r-project.org mailing list
> > https://stat.ethz.ch/mailman/listinfo/r-devel
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From berw|n@tur|@ch @end|ng |rom gm@||@com  Sat Feb  8 09:27:07 2020
From: berw|n@tur|@ch @end|ng |rom gm@||@com (Berwin A Turlach)
Date: Sat, 8 Feb 2020 16:27:07 +0800
Subject: [Rd] Development version of R fails tests and is not installed
Message-ID: <20200208162707.04cc63d2@ECM-DTC-716.uniwa.uwa.edu.au>

G'day all,

I have daily scripts running to install the patched version of the
current R version and the development version of R on my linux box
(Ubuntu 18.04.4 LTS).

The last development version that was successfully compiled and
installed was "R Under development (unstable) (2020-01-25 r77715)" on
27 January.  Since then the script always fails as a regression test
seems to fail.  Specifically, in the tests/ subdirectory of my build
directory I have a file reg-tests-1d.Rout.fail which ends with:

> ## more than half of the above were rounded *down* in R <= 3.6.x
> ## Some "wrong" test cases from CRAN packages (partly relying on wrong R <= 3.6.x behavior) 
> stopifnot(exprs = {
+     all.equal(round(10.7775, digits=3), 10.778, tolerance = 1e-12) # even tol=0, was 10.777
+     all.equal(round(12345 / 1000,   2), 12.35 , tolerance = 1e-12) # even tol=0, was 12.34 in Rd
+     all.equal(round(9.18665, 4),        9.1866, tolerance = 1e-12) # even tol=0, was  9.1867
+ })
Error: round(10.7775, digits = 3) and 10.778 are not equal:
  Mean relative difference: 9.27902e-05
Execution halted

This happens while the 32bit architecture is installed,  which is a bit
surprising as I get the following results for the last installed
version of R's development version:

R Under development (unstable) (2020-01-25 r77715) -- "Unsuffered Consequences" 
Copyright (C) 2020 The R Foundation for Statistical Computing 
Platform: x86_64-pc-linux-gnu/32 (32-bit)
[...]
> round(10.7775, digits=3)
[1] 10.778

and

R Under development (unstable) (2020-01-25 r77715) -- "Unsuffered Consequences" 
Copyright (C) 2020 The R Foundation for Statistical Computing 
Platform: x86_64-pc-linux-gnu/64 (64-bit) 
[...]
> round(10.7775, digits=3)
[1] 10.778


On the other hand, the R 3.6.2 version, that I mainly use at the moment,
gives the following results:

R version 3.6.2 (2019-12-12) -- "Dark and Stormy Night"
Copyright (C) 2019 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu/32 (32-bit)
[...]
> round(10.7775, digits=3)
[1] 10.777

and

R version 3.6.2 (2019-12-12) -- "Dark and Stormy Night"
Copyright (C) 2019 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu/64 (64-bit)
[...]
> round(10.7775, digits=3)
[1] 10.777


So it seems as if the behaviour of round() has changed between R 3.6.2
and the development version.  But I do not understand why this test all
of a sudden failed if the results from the last successfully installed
development version of R suggest that the test should be passed.

Thanks in advance for any insight and tips.

Cheers,

	Berwin


From hugh@p@r@on@ge @end|ng |rom gm@||@com  Sat Feb  8 11:12:43 2020
From: hugh@p@r@on@ge @end|ng |rom gm@||@com (Hugh Parsonage)
Date: Sat, 8 Feb 2020 21:12:43 +1100
Subject: [Rd] Development version of R fails tests and is not installed
In-Reply-To: <20200208162707.04cc63d2@ECM-DTC-716.uniwa.uwa.edu.au>
References: <20200208162707.04cc63d2@ECM-DTC-716.uniwa.uwa.edu.au>
Message-ID: <CAJmOi+OHSZ_RA4c-vujM7HvGUbMhKiJ6g80wCRg1PZK3v-wMLw@mail.gmail.com>

The only observation I can make is that the change to round() was made
in r77727 whereas your R-devel appears to be r77715 (so would not
exhibit the fixed behaviour).  My guess is that there was a perpetual
installation failure after r77715 but that the test folder was still
retrieved and used.

On Sat, 8 Feb 2020 at 19:27, Berwin A Turlach <berwin.turlach at gmail.com> wrote:
>
> G'day all,
>
> I have daily scripts running to install the patched version of the
> current R version and the development version of R on my linux box
> (Ubuntu 18.04.4 LTS).
>
> The last development version that was successfully compiled and
> installed was "R Under development (unstable) (2020-01-25 r77715)" on
> 27 January.  Since then the script always fails as a regression test
> seems to fail.  Specifically, in the tests/ subdirectory of my build
> directory I have a file reg-tests-1d.Rout.fail which ends with:
>
> > ## more than half of the above were rounded *down* in R <= 3.6.x
> > ## Some "wrong" test cases from CRAN packages (partly relying on wrong R <= 3.6.x behavior)
> > stopifnot(exprs = {
> +     all.equal(round(10.7775, digits=3), 10.778, tolerance = 1e-12) # even tol=0, was 10.777
> +     all.equal(round(12345 / 1000,   2), 12.35 , tolerance = 1e-12) # even tol=0, was 12.34 in Rd
> +     all.equal(round(9.18665, 4),        9.1866, tolerance = 1e-12) # even tol=0, was  9.1867
> + })
> Error: round(10.7775, digits = 3) and 10.778 are not equal:
>   Mean relative difference: 9.27902e-05
> Execution halted
>
> This happens while the 32bit architecture is installed,  which is a bit
> surprising as I get the following results for the last installed
> version of R's development version:
>
> R Under development (unstable) (2020-01-25 r77715) -- "Unsuffered Consequences"
> Copyright (C) 2020 The R Foundation for Statistical Computing
> Platform: x86_64-pc-linux-gnu/32 (32-bit)
> [...]
> > round(10.7775, digits=3)
> [1] 10.778
>
> and
>
> R Under development (unstable) (2020-01-25 r77715) -- "Unsuffered Consequences"
> Copyright (C) 2020 The R Foundation for Statistical Computing
> Platform: x86_64-pc-linux-gnu/64 (64-bit)
> [...]
> > round(10.7775, digits=3)
> [1] 10.778
>
>
> On the other hand, the R 3.6.2 version, that I mainly use at the moment,
> gives the following results:
>
> R version 3.6.2 (2019-12-12) -- "Dark and Stormy Night"
> Copyright (C) 2019 The R Foundation for Statistical Computing
> Platform: x86_64-pc-linux-gnu/32 (32-bit)
> [...]
> > round(10.7775, digits=3)
> [1] 10.777
>
> and
>
> R version 3.6.2 (2019-12-12) -- "Dark and Stormy Night"
> Copyright (C) 2019 The R Foundation for Statistical Computing
> Platform: x86_64-pc-linux-gnu/64 (64-bit)
> [...]
> > round(10.7775, digits=3)
> [1] 10.777
>
>
> So it seems as if the behaviour of round() has changed between R 3.6.2
> and the development version.  But I do not understand why this test all
> of a sudden failed if the results from the last successfully installed
> development version of R suggest that the test should be passed.
>
> Thanks in advance for any insight and tips.
>
> Cheers,
>
>         Berwin
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From m@ech|er @end|ng |rom @t@t@m@th@ethz@ch  Sat Feb  8 18:02:45 2020
From: m@ech|er @end|ng |rom @t@t@m@th@ethz@ch (Martin Maechler)
Date: Sat, 8 Feb 2020 18:02:45 +0100
Subject: [Rd] round(x, dig) [was "Development version of R fails tests .."]
In-Reply-To: <CAJmOi+OHSZ_RA4c-vujM7HvGUbMhKiJ6g80wCRg1PZK3v-wMLw@mail.gmail.com>
References: <20200208162707.04cc63d2@ECM-DTC-716.uniwa.uwa.edu.au>
 <CAJmOi+OHSZ_RA4c-vujM7HvGUbMhKiJ6g80wCRg1PZK3v-wMLw@mail.gmail.com>
Message-ID: <24126.59829.811380.837844@stat.math.ethz.ch>

>>>>> Hugh Parsonage 
>>>>>     on Sat, 8 Feb 2020 21:12:43 +1100 writes:

    > The only observation I can make is that the change to
    > round() was made in r77727 whereas your R-devel appears to
    > be r77715 (so would not exhibit the fixed behaviour).  My
    > guess is that there was a perpetual installation failure
    > after r77715 but that the test folder was still retrieved
    > and used.


    > On Sat, 8 Feb 2020 at 19:27, Berwin A Turlach <berwin.turlach at gmail.com> wrote:
    >> 
    >> G'day all,
    >> 
    >> I have daily scripts running to install the patched version of the
    >> current R version and the development version of R on my linux box
    >> (Ubuntu 18.04.4 LTS).
    >> 
    >> The last development version that was successfully compiled and
    >> installed was "R Under development (unstable) (2020-01-25 r77715)" on
    >> 27 January.  Since then the script always fails as a regression test
    >> seems to fail.  Specifically, in the tests/ subdirectory of my build
    >> directory I have a file reg-tests-1d.Rout.fail which ends with:
    >> 
    >> > ## more than half of the above were rounded *down* in R <= 3.6.x
    >> > ## Some "wrong" test cases from CRAN packages (partly relying on wrong R <= 3.6.x behavior)
    >> > stopifnot(exprs = {
    >> +     all.equal(round(10.7775, digits=3), 10.778, tolerance = 1e-12) # even tol=0, was 10.777
    >> +     all.equal(round(12345 / 1000,   2), 12.35 , tolerance = 1e-12) # even tol=0, was 12.34 in Rd
    >> +     all.equal(round(9.18665, 4),        9.1866, tolerance = 1e-12) # even tol=0, was  9.1867
    >> + })
    >> Error: round(10.7775, digits = 3) and 10.778 are not equal:

    >> Mean relative difference: 9.27902e-05
    >> Execution halted
    >> 
    >> This happens while the 32bit architecture is installed,  which is a bit
    >> surprising as I get the following results for the last installed
    >> version of R's development version:
    >> 
    >> R Under development (unstable) (2020-01-25 r77715) -- "Unsuffered Consequences"
    >> Copyright (C) 2020 The R Foundation for Statistical Computing
    >> Platform: x86_64-pc-linux-gnu/32 (32-bit)
    >> [...]
    >> > round(10.7775, digits=3)
    >> [1] 10.778
    >> 
    >> and
    >> 
    >> R Under development (unstable) (2020-01-25 r77715) -- "Unsuffered Consequences"
    >> Copyright (C) 2020 The R Foundation for Statistical Computing
    >> Platform: x86_64-pc-linux-gnu/64 (64-bit)
    >> [...]
    >> > round(10.7775, digits=3)
    >> [1] 10.778
    >> 
    >> 
    >> On the other hand, the R 3.6.2 version, that I mainly use at the moment,
    >> gives the following results:
    >> 
    >> R version 3.6.2 (2019-12-12) -- "Dark and Stormy Night"
    >> Copyright (C) 2019 The R Foundation for Statistical Computing
    >> Platform: x86_64-pc-linux-gnu/32 (32-bit)
    >> [...]
    >> > round(10.7775, digits=3)
    >> [1] 10.777
    >> 
    >> and
    >> 
    >> R version 3.6.2 (2019-12-12) -- "Dark and Stormy Night"
    >> Copyright (C) 2019 The R Foundation for Statistical Computing
    >> Platform: x86_64-pc-linux-gnu/64 (64-bit)
    >> [...]
    >> > round(10.7775, digits=3)
    >> [1] 10.777
    >> 
    >> 
    >> So it seems as if the behaviour of round() has changed between R 3.6.2
    >> and the development version.  But I do not understand why this test all
    >> of a sudden failed if the results from the last successfully installed
    >> development version of R suggest that the test should be passed.
    >> 
    >> Thanks in advance for any insight and tips.
    >> 
    >> Cheers,
    >> Berwin

Note that r77727 was the last of a few commits I made related to
dealing with R's bug report PR#17668:
  https://bugs.r-project.org/bugzilla/show_bug.cgi?id=17668

which itself triggered an involved dialogue, mostly online,
visible at the PR's URL above.

It lead me to also write an R package 'round' (in order to
compare R 3.6.x and later's round() versions, comparing them etc)
with a (not entirely polished) package vignette
that explains how rounding to decimal digits is not at all
trivial and why and how I ended (*) improving R's
round(x, digits) algorithm in R-devel.

The CRAN version of the package
    https://cran.r-project.org/package=round

    install.packages("round")
    
is not quite current, notably its vignette isn't and so I have
mentioned in the above thread
( https://bugs.r-project.org/bugzilla/show_bug.cgi?id=17668#c8 )
that the latest version of the vignette is also available as

     https://stat.ethz.ch/~maechler/R/Rounding.html

You can install and load the devel version of 'round' by

   remotes::install_gitlab("mmaechler/round") 
   require("round")

and then look a bit at the different versions of round(.)  using

   example(roundX)

i.e. using round::roundX(x, digits, version)

For those who read so far:  I'm really interested in getting
critical (constructive) feedback and comments about what I've
written there (in the bugzilla report, and the package vignette).
It seems almost nobody till now has had much interest and time to delve
into the somewhat intriguing issues.

Best regards,
Martin Maechler
ETH Zurich and R Core team


From jeroen @end|ng |rom berke|ey@edu  Sun Feb  9 01:04:24 2020
From: jeroen @end|ng |rom berke|ey@edu (Jeroen Ooms)
Date: Sun, 9 Feb 2020 01:04:24 +0100
Subject: [Rd] Development version of R fails tests and is not installed
In-Reply-To: <20200208162707.04cc63d2@ECM-DTC-716.uniwa.uwa.edu.au>
References: <20200208162707.04cc63d2@ECM-DTC-716.uniwa.uwa.edu.au>
Message-ID: <CABFfbXs19vQLHU39ysuqrY21+ghcivo+73VHQ2GUmgL9i6=N9g@mail.gmail.com>

On Sat, Feb 8, 2020 at 9:27 AM Berwin A Turlach
<berwin.turlach at gmail.com> wrote:
>
> G'day all,
>
> I have daily scripts running to install the patched version of the
> current R version and the development version of R on my linux box
> (Ubuntu 18.04.4 LTS).
>
> The last development version that was successfully compiled and
> installed was "R Under development (unstable) (2020-01-25 r77715)" on
> 27 January.  Since then the script always fails as a regression test
> seems to fail.  Specifically, in the tests/ subdirectory of my build
> directory I have a file reg-tests-1d.Rout.fail which ends with:
>
> > ## more than half of the above were rounded *down* in R <= 3.6.x
> > ## Some "wrong" test cases from CRAN packages (partly relying on wrong R <= 3.6.x behavior)
> > stopifnot(exprs = {
> +     all.equal(round(10.7775, digits=3), 10.778, tolerance = 1e-12) # even tol=0, was 10.777
> +     all.equal(round(12345 / 1000,   2), 12.35 , tolerance = 1e-12) # even tol=0, was 12.34 in Rd
> +     all.equal(round(9.18665, 4),        9.1866, tolerance = 1e-12) # even tol=0, was  9.1867
> + })
> Error: round(10.7775, digits = 3) and 10.778 are not equal:
>   Mean relative difference: 9.27902e-05
> Execution halted
>
> This happens while the 32bit architecture is installed,  which is a bit
> surprising as I get the following results for the last installed
> version of R's development version

There are two independent, but slightly related issues here:

First, as Martin already explained, the round() function was recently
improved, and some very strict tests were added to confirm the new
behavior. That explains why you see different round() results in R 4.0
from R 3.6.2. The bugzilla thread explains why:
https://bugs.r-project.org/bugzilla/show_bug.cgi?id=17668

The second issue has to do with numeric precision on 32-bit systems,
which is why I think you are getting this error. We ran into the same
problem on Windows where results on 32-bit are slightly off, including
(but not limited to) edge-cases in rounding. This has always been the
case, but the 32-bit inaccuracies have increased for recent versions
of GCC.

In general, the main difference in float precision between i686 and
x86_64 could come from whether it uses x87 (with 80 bit floats as
intermediates, as long as all intermediates are stored in registers)
or sse2 for general math. Depending on what the tests do, you can get
test failures (i.e. different results) if intermediates use different
precision, if the test reference is calculated assuming rounding all
intermediates to a certain length between each step.

The solution: to get the same results on 32-bit as on 64-bit, you need
to build R with these extra gcc flags: -mfpmath=sse -msse2. As
explained in https://gcc.gnu.org/onlinedocs/gcc-8.3.0/gcc/x86-Options.html#x86-Options
the -mfpmath=sse is the default for x86-64 but not for i686. As of
r77719 we have made sse the default on Windows and now we get
consistent results on 32-bit and 64-bit, including the round() edge
cases.

I think the intention was to add something similar in R's autoconf
script to enable sse on 32-bit unix systems, but seemingly this hasn't
happened. For now I think you should be able to make your 32-bit
checks succeed if you build R with CFLAGS=-mfpmath=sse -msse2.


From hugh@p@r@on@ge @end|ng |rom gm@||@com  Tue Feb 11 10:02:02 2020
From: hugh@p@r@on@ge @end|ng |rom gm@||@com (Hugh Parsonage)
Date: Tue, 11 Feb 2020 20:02:02 +1100
Subject: [Rd] Minor typo in recent commit
Message-ID: <CAJmOi+Pm1qW8+mshgVO48pLxkvtqBBSXqvGgadVaKNKB1Yq+1g@mail.gmail.com>

I believe should be February 2020 not 2010

--- a/doc/manual/R-exts.texi
+++ b/doc/manual/R-exts.texi
@@ -2631,9 +2631,9 @@ not necessarily installed) on all known @R{}
platforms.  As from @R{}
 4.0.0 a C++ compiler will be selected only if it conforms to the 2011
 standard (`C++11').  A minor update at footnote{The changes are linked from
 @uref{https://isocpp.org/@/std/@/standing-documents/@/sd-6-sg10-feature-test-recommendations}.}

-(`C++14') was published in December 2014.  The latest standard (`C++17')
-was published in December 2017, and a further revision (`C++20') is in
-preparation.
+(`C++14') was published in December 2014.  A revision (`C++17') was
+published in December 2017, and a further revision (`C++20', with many
+new features) is scheduled for February 2010.


From neon|r@ @end|ng |rom gm@||@com  Tue Feb 11 14:57:01 2020
From: neon|r@ @end|ng |rom gm@||@com (neonira Arinoem)
Date: Tue, 11 Feb 2020 14:57:01 +0100
Subject: [Rd] PDF generation issue from manual page
Message-ID: <CAN--Dz1KKtjmmvgNg3osk9KYEKOY9gECEsCkctqCmw0Kf6yYBw@mail.gmail.com>

Hi R gurus

Got an issue risen by CRAN about using unknown characters from Latex.

Here is the error message







*Check: PDF version of manual, Result: WARNING   LaTeX errors when creating
PDF version.   This typically indicates Rd problems.   LaTeX errors found:
  ! Undefined control sequence.   <recently read> \blacktriangleright *




*   l.237 STRATUM $\blacktriangleright
$ LAYER\_3   ! Undefined control sequence.   <recently read>
\blacktriangleright *




*   l.239 PHASING $\blacktriangleright
$ RUN   ! Undefined control sequence.   <recently read> \blacktriangleright
*

*   l.241 INTENT  $\blacktriangleright
$ FEEDBACK*

I understand that the \blacktriangleright is an unknown control sequence
from latex ... and that sounds strange to me, as I uses it often in
vignettes without any issue so far.

In the incriminated manual page, the code generating this sequence is the
following
*\ifelse{latex}{\out{$\blacktriangleright$}}{\ifelse{html}{\out{&#x25B6;}}{\u25b6}}*

I am wondering what is wrong and how to circumvent such issue.
Yours ideas and hints welcome

Best.
Neonira

	[[alternative HTML version deleted]]


From pe|j@@z @end|ng |rom y@hoo@co@uk  Tue Feb 11 15:54:12 2020
From: pe|j@@z @end|ng |rom y@hoo@co@uk (lejeczek)
Date: Tue, 11 Feb 2020 14:54:12 +0000
Subject: [Rd] R with Squid proxy - invalid requests ??
References: <e25b904d-f06a-bd62-aae2-503abeecff9f.ref@yahoo.co.uk>
Message-ID: <e25b904d-f06a-bd62-aae2-503abeecff9f@yahoo.co.uk>

dear devel,

I thought you guys would know best - I have an R which fails to get
communicate outside via a proxy, and Squid's logs show:

...

1581432434.501????? 0 10.5.8.17 TAG_NONE/400 4064? %C5/%B6* -
HIER_NONE/- text/html
1581432497.231????? 0 10.5.8.17 TAG_NONE/400 4570 NONE
error:invalid-request - HIER_NONE/- text/html
1581432497.338????? 0 10.5.8.17 TAG_NONE/400 4300?
%AC%9E%D0Rj%84%19%8D%23O%F9%E5%D4%E9%DBj%8D%F9x%C3:%FB-%02f%FBE%E5O%92c%9A
- HIER_NONE/- text/html
1581432497.445????? 0 10.5.8.17 TAG_NONE/400 4570 NONE
error:invalid-request - HIER_NONE/- text/html
1581432497.552????? 0 10.5.8.17 TAG_NONE/400 4570 NONE
error:invalid-request - HIER_NONE/- text/html
1581432497.659????? 0 10.5.8.17 TAG_NONE/400 4320?
Fi%E3@%04%D3%97o0%23%13%1B%C1%08%082%E8%A5%1B%DAh%F3%18%E1%DB%A1%1E%FET%01%DD
- HIER_NONE/- text/html
1581432497.766????? 0 10.5.8.17 TAG_NONE/400 4452?
%01%D4%F7%8AB%CA%AE%A5%D7.%BE%C4I%B5%D4%10c%0F%9D%9B%D9%C7%BA%15%FF%A2JO%B3%60%D0%86%B8lY%8F%97%B5%BC%15%C9
- HIER_NONE/- text/html
1581432557.005????? 0 10.5.8.17 TAG_NONE/400 4346?
%CC6%F3%CA%F4%90%F5%E0%9B%B47%C6%DB%83%89%E1%F4%F1=%08a%81%06KK%3C%B4%DAj%AC%B7
- HIER_NONE/- text/html
1581432557.112????? 0 10.5.8.17 TAG_NONE/400 4320?
%DE%D3%1B%89%1Et%94R%ECQ%ADd%04%8D=r%92%9AZ%5E%98%C4%1F%F9%9F%06%FF%AB%5E%BC%D7@
- HIER_NONE/- text/html
1581432557.219????? 0 10.5.8.17 TAG_NONE/400 4570 NONE
error:invalid-request - HIER_NONE/- text/html
1581432557.326????? 0 10.5.8.17 TAG_NONE/400 4288?
%A8O%FBmW%E4%97%9E%7C%FC%C4 at T8S%BA3%19%C36%9E%9C%E5%CBt%1F%C3&.7%14%C2 -
HIER_NONE/- text/html
1581432557.433????? 0 10.5.8.17 TAG_NONE/400 4260?
?9a%AB%8E%ECh-w%1C%C3%5D%084x%0F*%1Efw%D7+%0ED%7D%92%94%06%DA%EC%BB; -
HIER_NONE/- text/html
1581432557.540????? 0 10.5.8.17 TAG_NONE/400 4298?
%C5%EA?%A6%11t.%DE%FC%%C8%82o%C0%F49%BCFX%C4%D0%EEbfb%01%A8%27Y%F8%DB%C4
- HIER_NONE/- text/html

when I do anything, something like:

> install.packages("sos")

Everything else on the box uses & works fine with that Squid. Could it
be be somehow "crooked" default R on that box which is Centos 8?

Or what else?

many thanks, L.




From pe|j@@z @end|ng |rom y@hoo@co@uk  Tue Feb 11 17:08:03 2020
From: pe|j@@z @end|ng |rom y@hoo@co@uk (lejeczek)
Date: Tue, 11 Feb 2020 16:08:03 +0000
Subject: [Rd] R with Squid proxy - invalid requests ??
In-Reply-To: <e25b904d-f06a-bd62-aae2-503abeecff9f@yahoo.co.uk>
References: <e25b904d-f06a-bd62-aae2-503abeecff9f.ref@yahoo.co.uk>
 <e25b904d-f06a-bd62-aae2-503abeecff9f@yahoo.co.uk>
Message-ID: <686d2b7e-2188-fdd1-696f-668a603a681d@yahoo.co.uk>

On 11/02/2020 14:54, lejeczek via R-devel wrote:
> dear devel,
>
> I thought you guys would know best - I have an R which fails to get
> communicate outside via a proxy, and Squid's logs show:
>
> ...
>
> 1581432434.501????? 0 10.5.8.17 TAG_NONE/400 4064? %C5/%B6* -
> HIER_NONE/- text/html
> 1581432497.231????? 0 10.5.8.17 TAG_NONE/400 4570 NONE
> error:invalid-request - HIER_NONE/- text/html
> 1581432497.338????? 0 10.5.8.17 TAG_NONE/400 4300?
> %AC%9E%D0Rj%84%19%8D%23O%F9%E5%D4%E9%DBj%8D%F9x%C3:%FB-%02f%FBE%E5O%92c%9A
> - HIER_NONE/- text/html
> 1581432497.445????? 0 10.5.8.17 TAG_NONE/400 4570 NONE
> error:invalid-request - HIER_NONE/- text/html
> 1581432497.552????? 0 10.5.8.17 TAG_NONE/400 4570 NONE
> error:invalid-request - HIER_NONE/- text/html
> 1581432497.659????? 0 10.5.8.17 TAG_NONE/400 4320?
> Fi%E3@%04%D3%97o0%23%13%1B%C1%08%082%E8%A5%1B%DAh%F3%18%E1%DB%A1%1E%FET%01%DD
> - HIER_NONE/- text/html
> 1581432497.766????? 0 10.5.8.17 TAG_NONE/400 4452?
> %01%D4%F7%8AB%CA%AE%A5%D7.%BE%C4I%B5%D4%10c%0F%9D%9B%D9%C7%BA%15%FF%A2JO%B3%60%D0%86%B8lY%8F%97%B5%BC%15%C9
> - HIER_NONE/- text/html
> 1581432557.005????? 0 10.5.8.17 TAG_NONE/400 4346?
> %CC6%F3%CA%F4%90%F5%E0%9B%B47%C6%DB%83%89%E1%F4%F1=%08a%81%06KK%3C%B4%DAj%AC%B7
> - HIER_NONE/- text/html
> 1581432557.112????? 0 10.5.8.17 TAG_NONE/400 4320?
> %DE%D3%1B%89%1Et%94R%ECQ%ADd%04%8D=r%92%9AZ%5E%98%C4%1F%F9%9F%06%FF%AB%5E%BC%D7@
> - HIER_NONE/- text/html
> 1581432557.219????? 0 10.5.8.17 TAG_NONE/400 4570 NONE
> error:invalid-request - HIER_NONE/- text/html
> 1581432557.326????? 0 10.5.8.17 TAG_NONE/400 4288?
> %A8O%FBmW%E4%97%9E%7C%FC%C4 at T8S%BA3%19%C36%9E%9C%E5%CBt%1F%C3&.7%14%C2 -
> HIER_NONE/- text/html
> 1581432557.433????? 0 10.5.8.17 TAG_NONE/400 4260?
> ?9a%AB%8E%ECh-w%1C%C3%5D%084x%0F*%1Efw%D7+%0ED%7D%92%94%06%DA%EC%BB; -
> HIER_NONE/- text/html
> 1581432557.540????? 0 10.5.8.17 TAG_NONE/400 4298?
> %C5%EA?%A6%11t.%DE%FC%%C8%82o%C0%F49%BCFX%C4%D0%EEbfb%01%A8%27Y%F8%DB%C4
> - HIER_NONE/- text/html
>
> when I do anything, something like:
>
>> install.packages("sos")
> Everything else on the box uses & works fine with that Squid. Could it
> be be somehow "crooked" default R on that box which is Centos 8?
>
> Or what else?
>
> many thanks, L.
>
>
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel

I think R+CURL is "crooked".


From Kurt@Horn|k @end|ng |rom wu@@c@@t  Tue Feb 11 21:23:50 2020
From: Kurt@Horn|k @end|ng |rom wu@@c@@t (Kurt Hornik)
Date: Tue, 11 Feb 2020 21:23:50 +0100
Subject: [Rd] Minor typo in recent commit
In-Reply-To: <CAJmOi+Pm1qW8+mshgVO48pLxkvtqBBSXqvGgadVaKNKB1Yq+1g@mail.gmail.com>
References: <CAJmOi+Pm1qW8+mshgVO48pLxkvtqBBSXqvGgadVaKNKB1Yq+1g@mail.gmail.com>
Message-ID: <24131.3414.976793.470798@hornik.net>

>>>>> Hugh Parsonage writes:

Thanks: fixed now.

Best
-k

> I believe should be February 2020 not 2010
> --- a/doc/manual/R-exts.texi
> +++ b/doc/manual/R-exts.texi
> @@ -2631,9 +2631,9 @@ not necessarily installed) on all known @R{}
> platforms.  As from @R{}
>  4.0.0 a C++ compiler will be selected only if it conforms to the 2011
>  standard (`C++11').  A minor update at footnote{The changes are linked from
>  @uref{https://isocpp.org/@/std/@/standing-documents/@/sd-6-sg10-feature-test-recommendations}.}

> -(`C++14') was published in December 2014.  The latest standard (`C++17')
> -was published in December 2017, and a further revision (`C++20') is in
> -preparation.
> +(`C++14') was published in December 2014.  A revision (`C++17') was
> +published in December 2017, and a further revision (`C++20', with many
> +new features) is scheduled for February 2010.

> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From m|kko@korpe|@ @end|ng |rom m@@nm|tt@u@|@|to@@||  Wed Feb 12 10:23:09 2020
From: m|kko@korpe|@ @end|ng |rom m@@nm|tt@u@|@|to@@|| (Korpela Mikko (MML))
Date: Wed, 12 Feb 2020 09:23:09 +0000
Subject: [Rd] PDF generation issue from manual page
Message-ID: <93b4497ff7c7428e854058b9e6ea76e3@C119S212VM022.msvyvi.vaha.local>

Hi Neonira!

The \blacktriangleright macro is defined in LaTeX package "amssymb". According to Writing R Extensions (section 2.6 Mathematics), "only basic LaTeX can be used, there being no provision to specify LaTeX style files such as the AMS extensions" (in Rd files).

Best,
- Mikko
 
-----Alkuper?inen viesti-----
L?hett?j?: R-devel <r-devel-bounces at r-project.org> Puolesta neonira Arinoem
L?hetetty: tiistai 11. helmikuuta 2020 15.57
Vastaanottaja: r-devel <r-devel at r-project.org>
Aihe: [Rd] PDF generation issue from manual page

Hi R gurus

Got an issue risen by CRAN about using unknown characters from Latex.

Here is the error message







*Check: PDF version of manual, Result: WARNING   LaTeX errors when creating
PDF version.   This typically indicates Rd problems.   LaTeX errors found:
  ! Undefined control sequence.   <recently read> \blacktriangleright *




*   l.237 STRATUM $\blacktriangleright
$ LAYER\_3   ! Undefined control sequence.   <recently read>
\blacktriangleright *




*   l.239 PHASING $\blacktriangleright
$ RUN   ! Undefined control sequence.   <recently read> \blacktriangleright
*

*   l.241 INTENT  $\blacktriangleright
$ FEEDBACK*

I understand that the \blacktriangleright is an unknown control sequence from latex ... and that sounds strange to me, as I uses it often in vignettes without any issue so far.

In the incriminated manual page, the code generating this sequence is the following
*\ifelse{latex}{\out{$\blacktriangleright$}}{\ifelse{html}{\out{&#x25B6;}}{\u25b6}}*

I am wondering what is wrong and how to circumvent such issue.
Yours ideas and hints welcome

Best.
Neonira

	[[alternative HTML version deleted]]

______________________________________________
R-devel at r-project.org mailing list
https://stat.ethz.ch/mailman/listinfo/r-devel


From georg|@bo@hn@kov @end|ng |rom m@nche@ter@@c@uk  Thu Feb 13 11:10:58 2020
From: georg|@bo@hn@kov @end|ng |rom m@nche@ter@@c@uk (Georgi Boshnakov)
Date: Thu, 13 Feb 2020 10:10:58 +0000
Subject: [Rd] changed names from lm() in R-devel
Message-ID: <438D2EC9EAFE5946B2D5864670EA468E01CC7BBA2D@MBXP01.ds.man.ac.uk>

In the last week or so lm() in R-devel (and Rpatched, see https://cran.rstudio.com/web/checks/check_results_pcts.html) started to produce different names for some interactions, compared to R-3.6.x. A full example is at the end of this email but the gist is that a term  
"TimeIndex:Season", where "Season" is a factor produces names like "TimeIndex:Season1", while R-devel changes the order of the names to "Season1:TimeIndex", etc. 

Is this change on purpose? 

Georgi Boshnakov

---

ex_fac    <- as.factor(rep(1:4, 10))
ex_fo     <- as.formula("x ~ -1 - Season  + TimeIndex:Season")
ex_data   <- data.frame(x = rnorm(40), Season = ex_fac, TimeIndex = 1:40)
lm(ex_fo, data = ex_data, na.action = na.exclude)

## R version 3.6.1 (2019-07-05) -- "Action of the Toes"
##
## Call:
## lm(formula = ex_fo, data = ex_data, na.action = na.exclude)
##
## Coefficients:
## TimeIndex:Season1  TimeIndex:Season2  TimeIndex:Season3  TimeIndex:Season4
##         0.0036876         -0.0033619          0.0211838         -0.0008042


## R Under development (unstable) (2020-02-12 r77798) -- "Unsuffered
Consequences"
##
## Call:
## lm(formula = ex_fo, data = ex_data, na.action = na.exclude)
##
## Coefficients:
## Season1:TimeIndex  Season2:TimeIndex  Season3:TimeIndex  Season4:TimeIndex
##          -0.01033            0.02900            0.01791            0.01596

From henr|k@bengt@@on @end|ng |rom gm@||@com  Fri Feb 14 16:08:45 2020
From: henr|k@bengt@@on @end|ng |rom gm@||@com (Henrik Bengtsson)
Date: Fri, 14 Feb 2020 07:08:45 -0800
Subject: [Rd] methods package: A _R_CHECK_LENGTH_1_LOGIC2_=true error
In-Reply-To: <23831.52673.201433.320952@stat.math.ethz.ch>
References: <CAFDcVCQOWVr0p2e2HONOy9NvqPdpoAH=HPMOEP65K-N6UjhA2g@mail.gmail.com>
 <67D2E7FE-74E3-4379-B9FB-C4028AB808DF@gmail.com>
 <CAFDcVCTARMfrJRs-KiS5UiSo=SoU8+TgPh_KE+e-zFRR0eCSFQ@mail.gmail.com>
 <23824.41030.156424.792062@stat.math.ethz.ch>
 <CAFDcVCTq-Zc49t9HrdVQB4VHhOtuaoOmpGnx9JsAy+_esene3w@mail.gmail.com>
 <03ED7150-6BF7-4E6E-AD78-B6DFACE43A97@gmail.com>
 <6334E748-4121-41E7-9CD4-3F3B2278E8DC@gmail.com>
 <23828.56742.426539.104574@stat.math.ethz.ch>
 <CAFDcVCSoHT-GxRyw-bncfnbzbG19t9sUpvPnpg=Edz_j35DiFA@mail.gmail.com>
 <23830.7740.817555.22803@stat.math.ethz.ch>
 <B499F134-0795-42AD-9CDD-C639D3FD87A0@gmail.com>
 <23831.8774.109040.126892@stat.math.ethz.ch>
 <23831.14333.101371.604209@stat.math.ethz.ch>
 <23831.52673.201433.320952@stat.math.ethz.ch>
Message-ID: <CAFDcVCRbixWyJSpsu6gnDJ46a80oZ=prHzTLcqiv_5=f58BE_A@mail.gmail.com>

I still observe this error and just want to ping this thread so we
don't forget it. Should I add this to
https://bugs.r-project.org/bugzilla/ so it's tracked there?

This thread in the archives:

* https://stat.ethz.ch/pipermail/r-devel/2019-June/078049.html
* https://stat.ethz.ch/pipermail/r-devel/2019-July/078115.html
* https://stat.ethz.ch/pipermail/r-devel/2019-July/078126.html

/Henrik

On Sat, Jun 29, 2019 at 1:45 PM Martin Maechler
<maechler at stat.math.ethz.ch> wrote:
>
> >>>>> Martin Maechler
> >>>>>     on Sat, 29 Jun 2019 12:05:49 +0200 writes:
>
> >>>>> Martin Maechler
> >>>>>     on Sat, 29 Jun 2019 10:33:10 +0200 writes:
>
> >>>>> peter dalgaard
> >>>>>     on Fri, 28 Jun 2019 16:20:03 +0200 writes:
>
>     >>> > On 28 Jun 2019, at 16:03 , Martin Maechler <maechler at stat.math.ethz.ch> wrote:
>     >>> >
>     >>> >>>>>> Henrik Bengtsson
>     >>> >>>>>>    on Thu, 27 Jun 2019 16:00:39 -0700 writes:
>     >>> >
>     >>> >> Using:
>     >>> >>
>     >>> >> untrace(methods::conformMethod)
>     >>> >> at <- c(12,4,3,2)
>     >>> >> str(body(methods::conformMethod)[[at]])
>     >>> >> ## language omittedSig <- omittedSig && (signature[omittedSig] != "missing")
>     >>> >> cc <- 0L
>     >>> >> trace(methods::conformMethod, tracer = quote({
>     >>> >>  cc <<- cc + 1L
>     >>> >>  print(cc)
>     >>> >>  if (cc == 31) {  ## manually identified
>     >>> >>    untrace(methods::conformMethod)
>     >>> >>    trace(methods::conformMethod, at = list(at), tracer = quote({
>     >>> >>      str(list(signature = signature, mnames = mnames, fnames = fnames))
>     >>> >>      print(ls())
>     >>> >>      try(str(list(omittedSig = omittedSig, signature = signature)))
>     >>> >>    }))
>     >>> >>  }
>     >>> >> }))
>     >>> >> loadNamespace("oligo")
>     >>> >>
>     >>> >> gives:
>     >>> >>
>     >>> >> Untracing function "conformMethod" in package "methods"
>     >>> >> Tracing function "conformMethod" in package "methods"
>     >>> >> Tracing conformMethod(signature, mnames, fnames, f, fdef, definition)
>     >>> >> step 12,4,3,2
>     >>> >> List of 3
>     >>> >> $ signature: Named chr [1:4] "TilingFeatureSet" "ANY" "ANY" "array"
>     >>> >>  ..- attr(*, "names")= chr [1:4] "object" "subset" "target" "value"
>     >>> >>  ..- attr(*, "package")= chr [1:4] "oligoClasses" "methods" "methods" "methods"
>     >>> >> $ mnames   : chr [1:2] "object" "value"
>     >>> >> $ fnames   : chr [1:4] "object" "subset" "target" "value"
>     >>> >> [1] "f"          "fdef"       "fnames"     "fsig"       "imf"
>     >>> >> [6] "method"     "mnames"     "omitted"    "omittedSig" "sig0"
>     >>> >> [11] "sigNames"   "signature"
>     >>> >> List of 2
>     >>> >> $ omittedSig: logi [1:4] FALSE TRUE TRUE FALSE
>     >>> >> $ signature : Named chr [1:4] "TilingFeatureSet" "ANY" "ANY" "array"
>     >>> >>  ..- attr(*, "names")= chr [1:4] "object" "subset" "target" "value"
>     >>> >>  ..- attr(*, "package")= chr [1:4] "oligoClasses" "methods" "methods" "methods"
>     >>> >> Error in omittedSig && (signature[omittedSig] != "missing") :
>     >>> >>  'length(x) = 4 > 1' in coercion to 'logical(1)'
>     >>> >> Error: unable to load R code in package 'oligo'
>     >>> >>
>     >>> >
>     >>> > Thank you, Henrik, nice piece of using trace() .. and the above
>     >>> > is useful for solving the issue --  I can work with that.
>     >>> >
>     >>> > I'm  already pretty sure the wrong code starts with
>     >>> >
>     >>> >    omittedSig <- sigNames %in% fnames[omitted] # ....
>
>     >> my  "pretty sure"  statement above has proven to be wrong ..
>
>     >>> > -------------
>     >>> >
>     >>>
>     >>> I think the intention must have been that the two "ANY" signatures should change to "missing".
>
>     >> Definitely.
>
>     >>> However, with the current logic that will not happen, because
>     >>>
>     >>> > c(F,T,T,F) &&  c(T,T)
>     >>> [1] FALSE
>     >>>
>     >>> Henrik's non-fix would have resulted in
>     >>>
>     >>> > c(F,T,T,F) &  c(T,T)
>     >>> [1] FALSE  TRUE  TRUE FALSE
>     >>>
>     >>> which is actually right, but only coincidentally due to recycling of c(T,T). Had it been c(F,T) then it would have been expanded to c(F,T,F,T) which would be the opposite of what was wanted.
>     >>>
>     >>> Barring NA issues, I still think
>     >>>
>     >>> omittedSig[omittedSig] <- (signature[omittedSig] != "missing")
>     >>>
>     >>> should do the trick.
>
>     >> yes, (most probably).  I've found a version of that which should
>     >> be even easier to "read and understand", in  svn commit 76753 :
>
>     >> svn diff -c 76753 src/library/methods/R/RMethodUtils.R
>
>     >> --- src/library/methods/R/RMethodUtils.R (Revision 76752)
>     >> +++ src/library/methods/R/RMethodUtils.R (Revision 76753)
>     >> @@ -342,8 +342,7 @@
>     >> gettextf("formal arguments (%s) omitted in the method definition cannot be in the signature", bad2),
>     >> call. = TRUE, domain = NA)
>     >> }
>     >> -    else if(!all(signature[omittedSig] == "missing")) {
>     >> -        omittedSig <- omittedSig && (signature[omittedSig] != "missing")
>     >> +    else if(any(omittedSig <- omittedSig & signature != "missing")) {
>
>
>     >> BTW:  I've marked this --- and the  runmed() seg.fault + na.action
>     >> change ---  as something to be added to R 3.6.1 patched,  as I
>     >> deemed I should obey the "code freeze" rule in both cases.
>
>     >> Martin
>
>     > Hmm... I think we got a 'Neverending Story' here -- because it
>     > seems, both Peter and I were wrong in thinking that it's a good
>     > idea to change "missing" to "ANY" here ...
>     > ((or if that *was* correct, that needs to entail more changes
>     > happening during setMethod(.) {conformMethod() is only called in
>     > one place in our code base, namely from setMethod()} :
>
> as a matter of fact, I've been brave for now, left the change to
> conformMethod()  and started to fix the constructed .local()
> calls which are created in  conformMethod()'s sibling,
> which is rematchDefinition().
>
> It seems that this builds e.g. Matrix {with its gazillion
> setMethod()s} and that continues to run its own tests.  OTOH,
> Matrix may not trigger the situations that are dealt with here
> at all, as the signature() are rarely longer than three, and at
> some point in time I had made long passes through the package in
> order to "minimize" the .local() calls.
>
> --> svn commit 76756  (in addition to 76753, mentioned earlier)
>     now has rematchDefinition() changes
>
> I would be positively surprised if (but can imagine that) this
> had no affect on CRAN / Bioconductor packages.
>
> Still, these two changes seem to achieve what both the comments
> and the documentation of  conformMethod() and rematchDefinition()
> suggest should happen.
>
> Of course, I'd really be happy if people with S4 packages would
> check them with an R-devel version with svn rev >=  76756
> and report problems they see.
> I do imagine effects, and would expect that bugs in current code
> become visible where they had not done so previously.
>
> Martin
>
>     > I've started to explore the effects of the change using and
>     > extending the tests/reg-tests-1d.R  example that I had just committed.
>
>     > And the result is *not good* :
>
>     > As we said above, the new code does replace all "ANY" by "missing" in the
>     > signature, unless the "ANY" are at the end of the signature.
>
>     > However, later methods package code producing the .local(.)
>     > calls in the method definition (in cases where the signature of
>     > the generic and the method do not match exactly) --- possibly
>     > may have been tweaked later than the conformMethod() code ---
>     > and the .local() calls they now produce
>
>     > - work as intended for R <= 3.6.0 (and R 3.6.1 RC)
>     > - fail to work for R-devel with the change :
>
>     > See this (not a minimal rep.rex. but one building on Henrik's
>     > oligo case and what's newly in  tests/reg-tests-1d.R ) :
>
>     > -----------------------------------------------------------------------------
>
>     > ## conformMethod()  "&& logic" bug, by Henrik Bengtsson on R-devel list, 2019-06-22
>     > setClass("tilingFSet", slots = c(x = "numeric"))
>     > if(!is.null(getGeneric("oligoFn"))) removeGeneric("oligoFn")
>     > setGeneric("oligoFn",
>     > function(object, subset, target, value) { standardGeneric("oligoFn") })
>     > Sys.unsetenv("_R_CHECK_LENGTH_1_LOGIC2_") ## << added here, to compare with R 3.6.0, 3.5.3, ..
>     > setMethod("oligoFn", signature(object = "tilingFSet", value="array"),     ## Method _ 1 _
>     > function(object, value) { list(object=object, value=value) })
>     > setMethod("oligoFn", signature(object = "matrix", target="array"),        ## Method _ 2 _
>     > function(object, target) list(object=object, target=target))
>     > setMethod("oligoFn", signature(object = "matrix", subset="integer"),      ## Method _ 3 _
>     > function(object, subset) list(object=object, subset=subset))      #       (*no* Note: ANY at end)
>     > setMethod("oligoFn", signature(object = "matrix"),                        ## Method _ 4 _
>     > function(object) list(object=object))                             #       (*no* Note: ANY at end)
>     > showMethods("oligoFn") # F.Y.I.:  in R 3.6.0 and earlier: contains "ANY" everywhere
>
>     > ##-- Now, the following *DOES* work fine in R <= 3.6.0  but *no longer* in R-devel :
>     > str(r1 <- oligoFn(object=new("tilingFSet"), value=array(2)))
>     > str(r2 <- oligoFn(object=diag(2),          target=array(42)))
>     > ## These 2 work fine in all versions of R: Here the "ANY" remain at the end:
>     > str(r3 <- oligoFn(object=diag(2),          subset=1:3))
>     > str(r4 <- oligoFn(object=diag(2)))
>
>     > -----------------------------------------------------------------------------
>     > The two errors in R-devel are actually quite user-confusing:
>
>     >> r2 <- oligoFn(object=diag(2),          target=array(42))
>     > Error in .local(object, target) :
>     > argument "target" is missing, with no default
>     >> getMethod("oligoFn", signature(object="matrix", subset="missing", target="array"))
>     > Method Definition:
>
>     > function (object, subset, target, value)
>     > {
>     > .local <- function (object, subset, target, value)
>     > list(object = object, target = target)
>     > .local(object, target)
>     > }
>
>     > Signatures:
>     > object   subset    target  value
>     > target  "matrix" "missing" "array" "ANY"
>     > defined "matrix" "missing" "array" "ANY"
>     >>
>
>
>     > My conclusion:  There's something really wrong with what
>     > conformMethod() has been *intended* to achieve and what it
>     > "accidentally" did achieve in these cases: it never replaced
>     > "ANY" by "missing" in all these cases *AND* that is what it
>     > seems it should continue doing.
>
>     > BTW: ?conformMethod  goes to a page with quite a few things,
>     > relevantly containing
>
>     > ?conformMethod?: If the formal arguments, ?mnames?, are not
>     > identical to the formal arguments to the function, ?fnames?,
>     > ?conformMethod? determines whether the signature and the two
>     > sets of arguments conform, and returns the signature,
>     > possibly extended.  The function name, ?f? is supplied for
>     > error messages. The generic function, ?fdef?, supplies the
>     > generic signature for matching purposes.
>
>     > The method assignment conforms if method and generic function
>     > have identical formal argument lists.  It can also conform if
>     > the method omits some of the formal arguments of the function
>     > but: (1) the non-omitted arguments are a subset of the
>     > function arguments, appearing in the same order; (2) there
>     > are no arguments to the method that are not arguments to the
>     > function; and (3) the omitted formal arguments do not appear
>     > as explicit classes in the signature.  A future extension
>     > hopes to test also that the omitted arguments are not assumed
>     > by being used as locally assigned names or function names in
>     > the body of the method.
>
>     > ---
>     > It seems my commit to R-devel needs another change.
>     > This has to wait for hours currently, though.
>
>     > Martin
>
>     > ______________________________________________
>     > R-devel at r-project.org mailing list
>     > https://stat.ethz.ch/mailman/listinfo/r-devel
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From suh@rto_@@ggo@o m@iii@g oii y@hoo@com  Sun Feb 16 04:14:41 2020
From: suh@rto_@@ggo@o m@iii@g oii y@hoo@com (suh@rto_@@ggo@o m@iii@g oii y@hoo@com)
Date: Sun, 16 Feb 2020 03:14:41 +0000 (UTC)
Subject: [Rd] 
 round(x, dig) [was "Development version of R fails tests .."]
References: <1181492388.2572623.1581822881117.ref@mail.yahoo.com>
Message-ID: <1181492388.2572623.1581822881117@mail.yahoo.com>

I?disagree?with?what?is?assessed?as?"correct"?in?vignette?of?package?'round'.

With
x?<-?9.18665
,?what?is?actually?stored?in?'x'?is?a?number?that?is?slightly?larger?than?9.18665.?So,?as?said?in?the?vignette,?it?is?closer?to?9.1867?than?9.1866.

sprintf("%.4f",?x)
giving
"9.1867"
is?correct,?as?it?is?a?string?representing?the?_exact_?number?9.1867.

For?round(x,?4)?,?that?gives?number?and?cannot?return?9.1867?exactly,?I?still?think?that?a?binary?double?precision?number?closest?to?9.1867?should?be?returned.?My?principles:
-?Input?number?should?be?read?as?is,?should?be?treated?as?exact.
-?What?counts?is?what?the?exact?result?should?be.


------------
>>>>>?Hugh?Parsonage
>>>>>?????on?Sat,?8?Feb?2020?21:12:43?+1100?writes:

????>?The?only?observation?I?can?make?is?that?the?change?to
????>?round()?was?made?in?r77727?whereas?your?R-devel?appears?to
????>?be?r77715?(so?would?not?exhibit?the?fixed?behaviour).??My
????>?guess?is?that?there?was?a?perpetual?installation?failure
????>?after?r77715?but?that?the?test?folder?was?still?retrieved
????>?and?used.


????>?On?Sat,?8?Feb?2020?at?19:27,?Berwin?A?Turlach?<berwin.turlach?using?gmail.com>?wrote:
????>>
????>>?G'day?all,
????>>
????>>?I?have?daily?scripts?running?to?install?the?patched?version?of?the
????>>?current?R?version?and?the?development?version?of?R?on?my?linux?box
????>>?(Ubuntu?18.04.4?LTS).
????>>
????>>?The?last?development?version?that?was?successfully?compiled?and
????>>?installed?was?"R?Under?development?(unstable)?(2020-01-25?r77715)"?on
????>>?27?January.??Since?then?the?script?always?fails?as?a?regression?test
????>>?seems?to?fail.??Specifically,?in?the?tests/?subdirectory?of?my?build
????>>?directory?I?have?a?file?reg-tests-1d.Rout.fail?which?ends?with:
????>>
????>>?>?##?more?than?half?of?the?above?were?rounded?*down*?in?R?<=?3.6.x
????>>?>?##?Some?"wrong"?test?cases?from?CRAN?packages?(partly?relying?on?wrong?R?<=?3.6.x?behavior)
????>>?>?stopifnot(exprs?=?{
????>>?+?????all.equal(round(10.7775,?digits=3),?10.778,?tolerance?=?1e-12)?#?even?tol=0,?was?10.777
????>>?+?????all.equal(round(12345?/?1000,???2),?12.35?,?tolerance?=?1e-12)?#?even?tol=0,?was?12.34?in?Rd
????>>?+?????all.equal(round(9.18665,?4),????????9.1866,?tolerance?=?1e-12)?#?even?tol=0,?was??9.1867
????>>?+?})
????>>?Error:?round(10.7775,?digits?=?3)?and?10.778?are?not?equal:

????>>?Mean?relative?difference:?9.27902e-05
????>>?Execution?halted
????>>
????>>?This?happens?while?the?32bit?architecture?is?installed,??which?is?a?bit
????>>?surprising?as?I?get?the?following?results?for?the?last?installed
????>>?version?of?R's?development?version:
????>>
????>>?R?Under?development?(unstable)?(2020-01-25?r77715)?--?"Unsuffered?Consequences"
????>>?Copyright?(C)?2020?The?R?Foundation?for?Statistical?Computing
????>>?Platform:?x86_64-pc-linux-gnu/32?(32-bit)
????>>?[...]
????>>?>?round(10.7775,?digits=3)
????>>?[1]?10.778
????>>
????>>?and
????>>
????>>?R?Under?development?(unstable)?(2020-01-25?r77715)?--?"Unsuffered?Consequences"
????>>?Copyright?(C)?2020?The?R?Foundation?for?Statistical?Computing
????>>?Platform:?x86_64-pc-linux-gnu/64?(64-bit)
????>>?[...]
????>>?>?round(10.7775,?digits=3)
????>>?[1]?10.778
????>>
????>>
????>>?On?the?other?hand,?the?R?3.6.2?version,?that?I?mainly?use?at?the?moment,
????>>?gives?the?following?results:
????>>
????>>?R?version?3.6.2?(2019-12-12)?--?"Dark?and?Stormy?Night"
????>>?Copyright?(C)?2019?The?R?Foundation?for?Statistical?Computing
????>>?Platform:?x86_64-pc-linux-gnu/32?(32-bit)
????>>?[...]
????>>?>?round(10.7775,?digits=3)
????>>?[1]?10.777
????>>
????>>?and
????>>
????>>?R?version?3.6.2?(2019-12-12)?--?"Dark?and?Stormy?Night"
????>>?Copyright?(C)?2019?The?R?Foundation?for?Statistical?Computing
????>>?Platform:?x86_64-pc-linux-gnu/64?(64-bit)
????>>?[...]
????>>?>?round(10.7775,?digits=3)
????>>?[1]?10.777
????>>
????>>
????>>?So?it?seems?as?if?the?behaviour?of?round()?has?changed?between?R?3.6.2
????>>?and?the?development?version.??But?I?do?not?understand?why?this?test?all
????>>?of?a?sudden?failed?if?the?results?from?the?last?successfully?installed
????>>?development?version?of?R?suggest?that?the?test?should?be?passed.
????>>
????>>?Thanks?in?advance?for?any?insight?and?tips.
????>>
????>>?Cheers,
????>>?Berwin

Note?that?r77727?was?the?last?of?a?few?commits?I?made?related?to
dealing?with?R's?bug?report?PR#17668:
??https://bugs.r-project.org/bugzilla/show_bug.cgi?id=17668

which?itself?triggered?an?involved?dialogue,?mostly?online,
visible?at?the?PR's?URL?above.

It?lead?me?to?also?write?an?R?package?'round'?(in?order?to
compare?R?3.6.x?and?later's?round()?versions,?comparing?them?etc)
with?a?(not?entirely?polished)?package?vignette
that?explains?how?rounding?to?decimal?digits?is?not?at?all
trivial?and?why?and?how?I?ended?(*)?improving?R's
round(x,?digits)?algorithm?in?R-devel.

The?CRAN?version?of?the?package
????https://cran.r-project.org/package=round

????install.packages("round")

is?not?quite?current,?notably?its?vignette?isn't?and?so?I?have
mentioned?in?the?above?thread
(?https://bugs.r-project.org/bugzilla/show_bug.cgi?id=17668#c8?)
that?the?latest?version?of?the?vignette?is?also?available?as

?????https://stat.ethz.ch/~maechler/R/Rounding.html

You?can?install?and?load?the?devel?version?of?'round'?by

???remotes::install_gitlab("mmaechler/round")
???require("round")

and?then?look?a?bit?at?the?different?versions?of?round(.)??using

???example(roundX)

i.e.?using?round::roundX(x,?digits,?version)

For?those?who?read?so?far:??I'm?really?interested?in?getting
critical?(constructive)?feedback?and?comments?about?what?I've
written?there?(in?the?bugzilla?report,?and?the?package?vignette).
It?seems?almost?nobody?till?now?has?had?much?interest?and?time?to?delve
into?the?somewhat?intriguing?issues.

Best?regards,
Martin?Maechler
ETH?Zurich?and?R?Core?team


From berw|n@tur|@ch @end|ng |rom gm@||@com  Sun Feb 16 10:53:08 2020
From: berw|n@tur|@ch @end|ng |rom gm@||@com (Berwin A Turlach)
Date: Sun, 16 Feb 2020 17:53:08 +0800
Subject: [Rd] Development version of R fails tests and is not installed
In-Reply-To: <CABFfbXs19vQLHU39ysuqrY21+ghcivo+73VHQ2GUmgL9i6=N9g@mail.gmail.com>
References: <20200208162707.04cc63d2@ECM-DTC-716.uniwa.uwa.edu.au>
 <CABFfbXs19vQLHU39ysuqrY21+ghcivo+73VHQ2GUmgL9i6=N9g@mail.gmail.com>
Message-ID: <20200216175308.1557cbce@goodenia>

G'day Jeroen,

On Sun, 9 Feb 2020 01:04:24 +0100
Jeroen Ooms <jeroen at berkeley.edu> wrote:

> I think the intention was to add something similar in R's autoconf
> script to enable sse on 32-bit unix systems, but seemingly this hasn't
> happened. For now I think you should be able to make your 32-bit
> checks succeed if you build R with CFLAGS=-mfpmath=sse -msse2.

Just for the record, adding

  CFLAGS="-mfpmath=sse -msse2"

to the config.site file used to compile the 32bit version of R's
development version fixed the problem indeed.  The installation script
ran from the command line with out error to the end, and every day
since then at this crontab'd time.

Looks as if it would be good indeed if R's autoconf script would enable
sse on 32-bit unix systems. :)

Thank you for the solution.

Cheers,

	Berwin


From k@ro||@@koncev|c|u@ @end|ng |rom gm@||@com  Sun Feb 16 20:23:47 2020
From: k@ro||@@koncev|c|u@ @end|ng |rom gm@||@com (Karolis =?utf-8?Q?Koncevi=C4=8Dius?=)
Date: Sun, 16 Feb 2020 21:23:47 +0200
Subject: [Rd] Why is any() only defined for a numeric and not logical
 data.frame?
Message-ID: <20200216192347.gvy2rhp7znee4op3@PMW>

Hello,

I recently stumbled on an unusual behaviour of any() and all() and have 
been adviced from StackOverflow to share it here [1].

     df1 <- data.frame(A=TRUE, B=FALSE)
     df2 <- data.frame(A=1, B=0)

     > any(df1)
     Error in FUN(X[[i]], ...):
       only defined on a data frame  with all numeric variables

     > any(df2)
     [1] TRUE
     Warning message: In any(c(1, 2), na.rm = FALSE):
       coercing argument of type 'double' to logical

Same results happen when using all()

So the any() and all() do not work on data frames with logical values, 
but work if the values are numeric.

This doesn't seem to be a bug because error correctly states that any() 
will only work on an all-numeric data.frame. However the behaviour 
doesn't seem intentional and I cannot come up with any reason for it 
behaving this way.

Maybe any() and all() need to be modified to not work on data.frames() 
at all, which would also be consistent with is.nan() ?

[1]: https://stackoverflow.com/questions/60251847/why-is-any-only-defined-for-a-numeric-and-not-logical-data-frame


From ru|pb@rr@d@@ @end|ng |rom @@po@pt  Sun Feb 16 20:47:41 2020
From: ru|pb@rr@d@@ @end|ng |rom @@po@pt (Rui Barradas)
Date: Sun, 16 Feb 2020 19:47:41 +0000
Subject: [Rd] Why is any() only defined for a numeric and not logical
 data.frame?
In-Reply-To: <20200216192347.gvy2rhp7znee4op3@PMW>
References: <20200216192347.gvy2rhp7znee4op3@PMW>
Message-ID: <f871c946-818a-a426-7c06-bfa1ad48f414@sapo.pt>

Hello,

As it turns out, this is valid for all generics of the ?Summary group. 
 From help("Summary"):

Group "Summary":

all, any

sum, prod

min, max

range

methods("Summary") shows that there is a method for df's.
And the code of Summary.data.frame has an explicit test

        if (!is.numeric(x) && !is.complex(x))
             stop("only defined on a data frame with all numeric variables")


So now the question is even more pertinent (?)(I think):

If sum(<logical vector>) is a valid instruction, why only

sum(<numeric df>)
sum(<complex df>)

are valid?


Rui Barradas

?s 19:23 de 16/02/20, Karolis Koncevi?ius escreveu:
> Hello,
> 
> I recently stumbled on an unusual behaviour of any() and all() and have 
> been adviced from StackOverflow to share it here [1].
> 
>  ??? df1 <- data.frame(A=TRUE, B=FALSE)
>  ??? df2 <- data.frame(A=1, B=0)
> 
>  ??? > any(df1)
>  ??? Error in FUN(X[[i]], ...):
>  ????? only defined on a data frame? with all numeric variables
> 
>  ??? > any(df2)
>  ??? [1] TRUE
>  ??? Warning message: In any(c(1, 2), na.rm = FALSE):
>  ????? coercing argument of type 'double' to logical
> 
> Same results happen when using all()
> 
> So the any() and all() do not work on data frames with logical values, 
> but work if the values are numeric.
> 
> This doesn't seem to be a bug because error correctly states that any() 
> will only work on an all-numeric data.frame. However the behaviour 
> doesn't seem intentional and I cannot come up with any reason for it 
> behaving this way.
> 
> Maybe any() and all() need to be modified to not work on data.frames() 
> at all, which would also be consistent with is.nan() ?
> 
> [1]: 
> https://stackoverflow.com/questions/60251847/why-is-any-only-defined-for-a-numeric-and-not-logical-data-frame 
> 
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From @oko| @end|ng |rom |n@@-tou|ou@e@|r  Mon Feb 17 17:36:29 2020
From: @oko| @end|ng |rom |n@@-tou|ou@e@|r (Serguei Sokol)
Date: Mon, 17 Feb 2020 17:36:29 +0100
Subject: [Rd] NA in doc for options(matprod="default")
Message-ID: <928e69da-b81b-da84-1875-f79e982f3ce2@insa-toulouse.fr>

Hi,

A colleague of mine has spotted me a passage of the doc ?option talking 
about Inf and NaN check in 'matprod=default' section:
https://stat.ethz.ch/R-manual/R-devel/library/base/html/options.html

I am wondering if NA should be mentioned too as the check seems to 
include this "value" too. NA being different from Inf and NaN it is 
worth mentioning, isn't it?

Best,
Serguei.


From tom@@@k@||ber@ @end|ng |rom gm@||@com  Mon Feb 17 17:50:15 2020
From: tom@@@k@||ber@ @end|ng |rom gm@||@com (Tomas Kalibera)
Date: Mon, 17 Feb 2020 17:50:15 +0100
Subject: [Rd] NA in doc for options(matprod="default")
In-Reply-To: <928e69da-b81b-da84-1875-f79e982f3ce2@insa-toulouse.fr>
References: <928e69da-b81b-da84-1875-f79e982f3ce2@insa-toulouse.fr>
Message-ID: <ba4617aa-e4be-95a7-b905-90ec0278d5c8@gmail.com>

On 2/17/20 5:36 PM, Serguei Sokol wrote:
> Hi,
>
> A colleague of mine has spotted me a passage of the doc ?option 
> talking about Inf and NaN check in 'matprod=default' section:
> https://stat.ethz.ch/R-manual/R-devel/library/base/html/options.html
>
> I am wondering if NA should be mentioned too as the check seems to 
> include this "value" too. NA being different from Inf and NaN it is 
> worth mentioning, isn't it?

Yes, NA is handled, too. NA is one of NaN values for the purpose of this 
text (and it is also implemented that way, see ?NaN).

Best
Tomas

>
> Best,
> Serguei.
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From @oko| @end|ng |rom |n@@-tou|ou@e@|r  Mon Feb 17 18:18:51 2020
From: @oko| @end|ng |rom |n@@-tou|ou@e@|r (Serguei Sokol)
Date: Mon, 17 Feb 2020 18:18:51 +0100
Subject: [Rd] NA in doc for options(matprod="default")
In-Reply-To: <ba4617aa-e4be-95a7-b905-90ec0278d5c8@gmail.com>
References: <928e69da-b81b-da84-1875-f79e982f3ce2@insa-toulouse.fr>
 <ba4617aa-e4be-95a7-b905-90ec0278d5c8@gmail.com>
Message-ID: <f4de8cff-ceae-fae8-8758-6d9ce8670355@insa-toulouse.fr>

Le 17/02/2020 ? 17:50, Tomas Kalibera a ?crit?:
> On 2/17/20 5:36 PM, Serguei Sokol wrote:
>> Hi,
>>
>> A colleague of mine has spotted me a passage of the doc ?option 
>> talking about Inf and NaN check in 'matprod=default' section:
>> https://stat.ethz.ch/R-manual/R-devel/library/base/html/options.html
>>
>> I am wondering if NA should be mentioned too as the check seems to 
>> include this "value" too. NA being different from Inf and NaN it is 
>> worth mentioning, isn't it?
>
> Yes, NA is handled, too. NA is one of NaN values for the purpose of 
> this text
Thanks for clarification. It was not clear for me from the text itself.

> (and it is also implemented that way, see ?NaN).
 ?Indeed, the text of ?NaN says "... systems typically have
 ???? many different NaN values.? One of these is used for the numeric
 ???? missing value ?NA?, and ?is.nan? is false for that value."
However, R can return both NA and NaN symbols, e.g.

 > mean(c(1, NA))
[1] NA
 > mean(c(1, NaN))
[1] NaN

which does not help to understand their relationship. That's why I 
continue to think that it would be clearer to mention NA explicitly in 
option(matprod=default). It could be a phrasing like "... ensure correct 
propagation of Inf and NaN (including NA) ..."

Best,
Serguei.


From tom@@@k@||ber@ @end|ng |rom gm@||@com  Mon Feb 17 19:40:37 2020
From: tom@@@k@||ber@ @end|ng |rom gm@||@com (Tomas Kalibera)
Date: Mon, 17 Feb 2020 19:40:37 +0100
Subject: [Rd] NA in doc for options(matprod="default")
In-Reply-To: <f4de8cff-ceae-fae8-8758-6d9ce8670355@insa-toulouse.fr>
References: <928e69da-b81b-da84-1875-f79e982f3ce2@insa-toulouse.fr>
 <ba4617aa-e4be-95a7-b905-90ec0278d5c8@gmail.com>
 <f4de8cff-ceae-fae8-8758-6d9ce8670355@insa-toulouse.fr>
Message-ID: <01763680-b768-f968-9dd4-b688d55da5c7@gmail.com>

On 2/17/20 6:18 PM, Serguei Sokol wrote:
> Le 17/02/2020 ? 17:50, Tomas Kalibera a ?crit?:
>> On 2/17/20 5:36 PM, Serguei Sokol wrote:
>>> Hi,
>>>
>>> A colleague of mine has spotted me a passage of the doc ?option 
>>> talking about Inf and NaN check in 'matprod=default' section:
>>> https://stat.ethz.ch/R-manual/R-devel/library/base/html/options.html
>>>
>>> I am wondering if NA should be mentioned too as the check seems to 
>>> include this "value" too. NA being different from Inf and NaN it is 
>>> worth mentioning, isn't it?
>>
>> Yes, NA is handled, too. NA is one of NaN values for the purpose of 
>> this text
> Thanks for clarification. It was not clear for me from the text itself.

>
>> (and it is also implemented that way, see ?NaN).
> ?Indeed, the text of ?NaN says "... systems typically have
> ???? many different NaN values.? One of these is used for the numeric
> ???? missing value ?NA?, and ?is.nan? is false for that value."

> However, R can return both NA and NaN symbols, e.g.
>
> > mean(c(1, NA))
> [1] NA
> > mean(c(1, NaN))
> [1] NaN
>
> which does not help to understand their relationship. 

> That's why I continue to think that it would be clearer to mention NA 
> explicitly in option(matprod=default). It could be a phrasing like 
> "... ensure correct propagation of Inf and NaN (including NA) ..."

I've intentionally left that out from this part of the text in ?options. 
It is irrelevant to talk about how NA propagates through computation 
because NaNs may become NAs and vice versa (see ?NaN). Intuitively it 
would be nice if NAs were different, if a computation of say a pure 
function would result in NA iff at least one of its inputs was an NA. In 
more complicated situations it would be hard to define what should be 
the correct result, but even in the simpler cases this does not work in 
R anymore. We lost this with architectural changes in CPUs that no 
longer defined the payload of NaNs resulting from elementary floating 
point operations, so we would have to always check explicitly, with a 
lot of effort and additional performance overhead. Also, we could not 
hope for the distinction to work through external code (such as BLAS or 
LAPACK) that is not aware of R's notion of NA.

All of ?options for "matprod" is about propagation of standard floating 
point non-finite values (NaN, Inf) through matrix multiplication. The 
naive 3-loop algorithm with a correct compiler (following the standard 
in implementing floating point operations) is regarded as producing the 
correct results. Some BLAS implementations produce different results due 
to optimizations in code (not the naive 3-loop algorithm) and likely 
aggressive compiler optimizations that violate the standard. R users can 
choose based on their preference, the differences in performance can be 
significant.

Best
Tomas
>
> Best,
> Serguei.
>


From @d|rk@e @end|ng |rom g@m@@com  Tue Feb 18 05:55:35 2020
From: @d|rk@e @end|ng |rom g@m@@com (Steven Dirkse)
Date: Mon, 17 Feb 2020 23:55:35 -0500
Subject: [Rd] 
 round(x, dig) [was "Development version of R fails tests .."]
In-Reply-To: <24126.59829.811380.837844@stat.math.ethz.ch>
References: <20200208162707.04cc63d2@ECM-DTC-716.uniwa.uwa.edu.au>
 <CAJmOi+OHSZ_RA4c-vujM7HvGUbMhKiJ6g80wCRg1PZK3v-wMLw@mail.gmail.com>
 <24126.59829.811380.837844@stat.math.ethz.ch>
Message-ID: <CAHiA-Zmaet5LrDWT07d6ByVcxO-VoO1ch0nrPvoZ-FETTSiYPA@mail.gmail.com>

Martin,

Yes, this subject of rounding is quite fascinating when one realizes that
we round a binary representation to a value expressed via a decimal
representation, but then store this value as a binary.  It's also very
interesting to note that there seems to be little consensus on what correct
behavior is.  Maybe that's a good place to start.  First some observations:

1. round(x,n) depends on the double x, not on some string value that when
converted to double yields x.  So one cannot insist that
round(55.5555555,6)  returns 55.555556.  The decimal value 55.5555555 is
not exactly representable as a double, so this particular value is one the
round function will never see.  round() will only ever see the closest
double to this value.
2. It is possible to produce "correctly rounded decimal representations" of
doubles.  The C routine sprintf() does this, or at least it is supposed
to.  Of course, we get a string and not a double, but it's a correctly
rounded value.  And if one doesn't believe sprintf() does this, no matter:
there are other routines that do.  To be precise, a "correctly rounded
decimal representation" of x is the closest-to-x base-10 value with n
digits past the decimal point.  In the event of ties, use banker's rounding.
3. There are routines that, given a decimal string like 55.5555, produce a
"correctly rounded double", i.e. the closest double representation and, in
the event of tie, a result computed using banker's rounding.  IMHO the C
strtod() does exactly this.  Again, there are other routines that do if you
don't like strtod.

So as a sort of reference implementation or definition, I would propose
that the result of round(x,n) would be the value you get by first rounding
x to n decimal digits - as a string!! - and then converting this string to
a double.  The most obvious implementation of this definition is not very
fast, but at least it's unambiguous.  And with some tweaks it might not be
so slow after all . . .

If we give up on having a proper definition of what round(x,n) should
actually return, we could easily wind up chasing our tails.

To follow up on the specific example of how to compute

x <- 9.18665
round(x,4)

the definition above implies that round(x,4) is 9.1867.  The double 9.18665
is not exactly representable, and the nearest double is a little higher
than the decimal string.  Since the decimal value is exactly in between the
two closest candidates for rounding to four digits, the direction of this
error when representing the decimal as binary determines the final result -
or, if you like to think only in terms of decimal representations, the
direction of the rounding.

I look forward to hearing your thoughts on this suggested definition.


-Steve

On Sat, Feb 8, 2020 at 12:03 PM Martin Maechler <maechler at stat.math.ethz.ch>
wrote:

> >>>>> Hugh Parsonage
> >>>>>     on Sat, 8 Feb 2020 21:12:43 +1100 writes:
>
>     > The only observation I can make is that the change to
>     > round() was made in r77727 whereas your R-devel appears to
>     > be r77715 (so would not exhibit the fixed behaviour).  My
>     > guess is that there was a perpetual installation failure
>     > after r77715 but that the test folder was still retrieved
>     > and used.
>
>
>     > On Sat, 8 Feb 2020 at 19:27, Berwin A Turlach <
> berwin.turlach at gmail.com> wrote:
>     >>
>     >> G'day all,
>     >>
>     >> I have daily scripts running to install the patched version of the
>     >> current R version and the development version of R on my linux box
>     >> (Ubuntu 18.04.4 LTS).
>     >>
>     >> The last development version that was successfully compiled and
>     >> installed was "R Under development (unstable) (2020-01-25 r77715)"
> on
>     >> 27 January.  Since then the script always fails as a regression test
>     >> seems to fail.  Specifically, in the tests/ subdirectory of my build
>     >> directory I have a file reg-tests-1d.Rout.fail which ends with:
>     >>
>     >> > ## more than half of the above were rounded *down* in R <= 3.6.x
>     >> > ## Some "wrong" test cases from CRAN packages (partly relying on
> wrong R <= 3.6.x behavior)
>     >> > stopifnot(exprs = {
>     >> +     all.equal(round(10.7775, digits=3), 10.778, tolerance =
> 1e-12) # even tol=0, was 10.777
>     >> +     all.equal(round(12345 / 1000,   2), 12.35 , tolerance =
> 1e-12) # even tol=0, was 12.34 in Rd
>     >> +     all.equal(round(9.18665, 4),        9.1866, tolerance =
> 1e-12) # even tol=0, was  9.1867
>     >> + })
>     >> Error: round(10.7775, digits = 3) and 10.778 are not equal:
>
>     >> Mean relative difference: 9.27902e-05
>     >> Execution halted
>     >>
>     >> This happens while the 32bit architecture is installed,  which is a
> bit
>     >> surprising as I get the following results for the last installed
>     >> version of R's development version:
>     >>
>     >> R Under development (unstable) (2020-01-25 r77715) -- "Unsuffered
> Consequences"
>     >> Copyright (C) 2020 The R Foundation for Statistical Computing
>     >> Platform: x86_64-pc-linux-gnu/32 (32-bit)
>     >> [...]
>     >> > round(10.7775, digits=3)
>     >> [1] 10.778
>     >>
>     >> and
>     >>
>     >> R Under development (unstable) (2020-01-25 r77715) -- "Unsuffered
> Consequences"
>     >> Copyright (C) 2020 The R Foundation for Statistical Computing
>     >> Platform: x86_64-pc-linux-gnu/64 (64-bit)
>     >> [...]
>     >> > round(10.7775, digits=3)
>     >> [1] 10.778
>     >>
>     >>
>     >> On the other hand, the R 3.6.2 version, that I mainly use at the
> moment,
>     >> gives the following results:
>     >>
>     >> R version 3.6.2 (2019-12-12) -- "Dark and Stormy Night"
>     >> Copyright (C) 2019 The R Foundation for Statistical Computing
>     >> Platform: x86_64-pc-linux-gnu/32 (32-bit)
>     >> [...]
>     >> > round(10.7775, digits=3)
>     >> [1] 10.777
>     >>
>     >> and
>     >>
>     >> R version 3.6.2 (2019-12-12) -- "Dark and Stormy Night"
>     >> Copyright (C) 2019 The R Foundation for Statistical Computing
>     >> Platform: x86_64-pc-linux-gnu/64 (64-bit)
>     >> [...]
>     >> > round(10.7775, digits=3)
>     >> [1] 10.777
>     >>
>     >>
>     >> So it seems as if the behaviour of round() has changed between R
> 3.6.2
>     >> and the development version.  But I do not understand why this test
> all
>     >> of a sudden failed if the results from the last successfully
> installed
>     >> development version of R suggest that the test should be passed.
>     >>
>     >> Thanks in advance for any insight and tips.
>     >>
>     >> Cheers,
>     >> Berwin
>
> Note that r77727 was the last of a few commits I made related to
> dealing with R's bug report PR#17668:
>   https://bugs.r-project.org/bugzilla/show_bug.cgi?id=17668
>
> which itself triggered an involved dialogue, mostly online,
> visible at the PR's URL above.
>
> It lead me to also write an R package 'round' (in order to
> compare R 3.6.x and later's round() versions, comparing them etc)
> with a (not entirely polished) package vignette
> that explains how rounding to decimal digits is not at all
> trivial and why and how I ended (*) improving R's
> round(x, digits) algorithm in R-devel.
>
> The CRAN version of the package
>     https://cran.r-project.org/package=round
>
>     install.packages("round")
>
> is not quite current, notably its vignette isn't and so I have
> mentioned in the above thread
> ( https://bugs.r-project.org/bugzilla/show_bug.cgi?id=17668#c8 )
> that the latest version of the vignette is also available as
>
>      https://stat.ethz.ch/~maechler/R/Rounding.html
>
> You can install and load the devel version of 'round' by
>
>    remotes::install_gitlab("mmaechler/round")
>    require("round")
>
> and then look a bit at the different versions of round(.)  using
>
>    example(roundX)
>
> i.e. using round::roundX(x, digits, version)
>
> For those who read so far:  I'm really interested in getting
> critical (constructive) feedback and comments about what I've
> written there (in the bugzilla report, and the package vignette).
> It seems almost nobody till now has had much interest and time to delve
> into the somewhat intriguing issues.
>
> Best regards,
> Martin Maechler
> ETH Zurich and R Core team
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>


-- 
Steven Dirkse, Ph.D.
GAMS Development Corp.
office: 202.342.0180

	[[alternative HTML version deleted]]


From rh@r|ow86 @end|ng |rom gm@||@com  Tue Feb 18 15:32:35 2020
From: rh@r|ow86 @end|ng |rom gm@||@com (Robert Harlow)
Date: Tue, 18 Feb 2020 09:32:35 -0500
Subject: [Rd] Possible Regression in setClassUnion between 3.5.0 and 3.6.0
Message-ID: <CAHdfS95sfC+7RRYcztqDKeyJwBukjJLHuRroQMfU7yCkhVyMDg@mail.gmail.com>

I am trying to create a class union of class unions to facilitate method
dispatch. When I execute code in the global environment, everything acts as
expected, however when I put the same code in the context of a package,
selectMethod can no longer find the correct method. This first block below
puts the code in the context of a package:

fn <- "codefile.R"
writeLines(
    c(
        "setClass('x', slots = list(slot ='character'))",
        "setClass('y', slots = list(slot ='character'))",
        "setClass('a', slots = list(slot ='character'))",
        "setClass('b', slots = list(slot ='character'))",
        "setClassUnion('xy', c('x', 'y'))",
        "setClassUnion('ab', c('a', 'b'))",
        "setClassUnion('xyab', c('xy', 'ab'))",
        "setGeneric('f', function(object, ...) standardGeneric('f'))",
        "setMethod('f', 'xyab', function(object, ...) print('hi!'))"
    ),
    con = fn
)
package.skeleton(code_files = "codefile.R")
system("rm -rf anRpackage/man")
system("R CMD INSTALL anRpackage")
library(anRpackage)
## fails in R 3.6.2, but works in R 3.5.0
f(new("a"))

Next, if a fresh R 3.6.2 session is started and I execute the following at
the prompt, method dispatch works as expected.

setClass("x", slots = list(slot ="character"))
setClass("y", slots = list(slot ="character"))
setClass("a", slots = list(slot ="character"))
setClass("b", slots = list(slot ="character"))
setClassUnion("xy", c("x", "y"))
setClassUnion("ab", c("a", "b"))
setClassUnion("xyab", c("xy", "ab"))
setGeneric("f", function(object, ...) standardGeneric("f"))
setMethod("f", "xyab", function(object, ...) print("hi!"))
## print's "hi!" as expected
f(new("a"))

I have also posted to stack overflow here:
https://stackoverflow.com/questions/60264786/r-s4-class-union-of-class-unions?noredirect=1#comment106627883_60264786,
(the example in this note removes devtools to make the environment
cleaner).

Interestingly, the issue only seems to arise when there are > 1 layer
of the class union. E.g. if I were to setMethod on "ab" instead of
"xyab", method dispatch would work as expected. I am not posting a bug
yet as it is still unclear to me if I am doing something incorrect.

My sessionInfo() is :

R version 3.6.2 (2019-12-12)
Platform: x86_64-pc-linux-gnu (64-bit)
Running under: Ubuntu 18.04.3 LTS

Matrix products: default
BLAS:   /usr/local/lib/R/lib/libRblas.so
LAPACK: /usr/local/lib/R/lib/libRlapack.so

locale:
 [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C
 [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8
 [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8
 [7] LC_PAPER=en_US.UTF-8       LC_NAME=C
 [9] LC_ADDRESS=C               LC_TELEPHONE=C
[11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C

attached base packages:
[1] stats     graphics  grDevices utils     datasets  methods   base

other attached packages:
[1] anRpackage_1.0

loaded via a namespace (and not attached):
[1] compiler_3.6.2 tools_3.6.2

Thanks in advance for the help!

	[[alternative HTML version deleted]]


From ezztucker @end|ng |rom gm@||@com  Tue Feb 18 17:32:15 2020
From: ezztucker @end|ng |rom gm@||@com (Ezra Tucker)
Date: Tue, 18 Feb 2020 11:32:15 -0500
Subject: [Rd] 
 Possible Regression in setClassUnion between 3.5.0 and 3.6.0
In-Reply-To: <CAHdfS95sfC+7RRYcztqDKeyJwBukjJLHuRroQMfU7yCkhVyMDg@mail.gmail.com>
References: <CAHdfS95sfC+7RRYcztqDKeyJwBukjJLHuRroQMfU7yCkhVyMDg@mail.gmail.com>
Message-ID: <5e408873-eb6a-8209-aac6-f78b7f1d0bb1@gmail.com>

Hi Robert,

This looks like a bug to me (tested in R 3.6.2 on Windows), f(new("a")) 
should return "hi!". I'll add that this DOES work properly in 3.6.1 
which leads me to suspect this could be due to the subtle change in the 
way method dispatch was performed to fix a different bug, in 3.6.2. Can 
anybody else confirm that?


On 2/18/2020 9:32 AM, Robert Harlow wrote:
> I am trying to create a class union of class unions to facilitate method
> dispatch. When I execute code in the global environment, everything acts as
> expected, however when I put the same code in the context of a package,
> selectMethod can no longer find the correct method. This first block below
> puts the code in the context of a package:
>
> fn <- "codefile.R"
> writeLines(
>      c(
>          "setClass('x', slots = list(slot ='character'))",
>          "setClass('y', slots = list(slot ='character'))",
>          "setClass('a', slots = list(slot ='character'))",
>          "setClass('b', slots = list(slot ='character'))",
>          "setClassUnion('xy', c('x', 'y'))",
>          "setClassUnion('ab', c('a', 'b'))",
>          "setClassUnion('xyab', c('xy', 'ab'))",
>          "setGeneric('f', function(object, ...) standardGeneric('f'))",
>          "setMethod('f', 'xyab', function(object, ...) print('hi!'))"
>      ),
>      con = fn
> )
> package.skeleton(code_files = "codefile.R")
> system("rm -rf anRpackage/man")
> system("R CMD INSTALL anRpackage")
> library(anRpackage)
> ## fails in R 3.6.2, but works in R 3.5.0
> f(new("a"))
>
> Next, if a fresh R 3.6.2 session is started and I execute the following at
> the prompt, method dispatch works as expected.
>
> setClass("x", slots = list(slot ="character"))
> setClass("y", slots = list(slot ="character"))
> setClass("a", slots = list(slot ="character"))
> setClass("b", slots = list(slot ="character"))
> setClassUnion("xy", c("x", "y"))
> setClassUnion("ab", c("a", "b"))
> setClassUnion("xyab", c("xy", "ab"))
> setGeneric("f", function(object, ...) standardGeneric("f"))
> setMethod("f", "xyab", function(object, ...) print("hi!"))
> ## print's "hi!" as expected
> f(new("a"))
>
> I have also posted to stack overflow here:
> https://stackoverflow.com/questions/60264786/r-s4-class-union-of-class-unions?noredirect=1#comment106627883_60264786,
> (the example in this note removes devtools to make the environment
> cleaner).
>
> Interestingly, the issue only seems to arise when there are > 1 layer
> of the class union. E.g. if I were to setMethod on "ab" instead of
> "xyab", method dispatch would work as expected. I am not posting a bug
> yet as it is still unclear to me if I am doing something incorrect.
>
> My sessionInfo() is :
>
> R version 3.6.2 (2019-12-12)
> Platform: x86_64-pc-linux-gnu (64-bit)
> Running under: Ubuntu 18.04.3 LTS
>
> Matrix products: default
> BLAS:   /usr/local/lib/R/lib/libRblas.so
> LAPACK: /usr/local/lib/R/lib/libRlapack.so
>
> locale:
>   [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C
>   [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8
>   [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8
>   [7] LC_PAPER=en_US.UTF-8       LC_NAME=C
>   [9] LC_ADDRESS=C               LC_TELEPHONE=C
> [11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C
>
> attached base packages:
> [1] stats     graphics  grDevices utils     datasets  methods   base
>
> other attached packages:
> [1] anRpackage_1.0
>
> loaded via a namespace (and not attached):
> [1] compiler_3.6.2 tools_3.6.2
>
> Thanks in advance for the help!
>
> 	[[alternative HTML version deleted]]
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From |@wrence@m|ch@e| @end|ng |rom gene@com  Wed Feb 19 05:00:53 2020
From: |@wrence@m|ch@e| @end|ng |rom gene@com (Michael Lawrence)
Date: Tue, 18 Feb 2020 20:00:53 -0800
Subject: [Rd] 
 Possible Regression in setClassUnion between 3.5.0 and 3.6.0
In-Reply-To: <5e408873-eb6a-8209-aac6-f78b7f1d0bb1@gmail.com>
References: <CAHdfS95sfC+7RRYcztqDKeyJwBukjJLHuRroQMfU7yCkhVyMDg@mail.gmail.com>
 <5e408873-eb6a-8209-aac6-f78b7f1d0bb1@gmail.com>
Message-ID: <CAOQ5Nyf25-Hj4gQ=nBS+7M8OPdPWgeL7w7ykKj+D6_Egc7EMaw@mail.gmail.com>

Thanks, I'll look into it.

On Tue, Feb 18, 2020 at 8:32 AM Ezra Tucker <ezztucker at gmail.com> wrote:
>
> Hi Robert,
>
> This looks like a bug to me (tested in R 3.6.2 on Windows), f(new("a"))
> should return "hi!". I'll add that this DOES work properly in 3.6.1
> which leads me to suspect this could be due to the subtle change in the
> way method dispatch was performed to fix a different bug, in 3.6.2. Can
> anybody else confirm that?
>
>
> On 2/18/2020 9:32 AM, Robert Harlow wrote:
> > I am trying to create a class union of class unions to facilitate method
> > dispatch. When I execute code in the global environment, everything acts as
> > expected, however when I put the same code in the context of a package,
> > selectMethod can no longer find the correct method. This first block below
> > puts the code in the context of a package:
> >
> > fn <- "codefile.R"
> > writeLines(
> >      c(
> >          "setClass('x', slots = list(slot ='character'))",
> >          "setClass('y', slots = list(slot ='character'))",
> >          "setClass('a', slots = list(slot ='character'))",
> >          "setClass('b', slots = list(slot ='character'))",
> >          "setClassUnion('xy', c('x', 'y'))",
> >          "setClassUnion('ab', c('a', 'b'))",
> >          "setClassUnion('xyab', c('xy', 'ab'))",
> >          "setGeneric('f', function(object, ...) standardGeneric('f'))",
> >          "setMethod('f', 'xyab', function(object, ...) print('hi!'))"
> >      ),
> >      con = fn
> > )
> > package.skeleton(code_files = "codefile.R")
> > system("rm -rf anRpackage/man")
> > system("R CMD INSTALL anRpackage")
> > library(anRpackage)
> > ## fails in R 3.6.2, but works in R 3.5.0
> > f(new("a"))
> >
> > Next, if a fresh R 3.6.2 session is started and I execute the following at
> > the prompt, method dispatch works as expected.
> >
> > setClass("x", slots = list(slot ="character"))
> > setClass("y", slots = list(slot ="character"))
> > setClass("a", slots = list(slot ="character"))
> > setClass("b", slots = list(slot ="character"))
> > setClassUnion("xy", c("x", "y"))
> > setClassUnion("ab", c("a", "b"))
> > setClassUnion("xyab", c("xy", "ab"))
> > setGeneric("f", function(object, ...) standardGeneric("f"))
> > setMethod("f", "xyab", function(object, ...) print("hi!"))
> > ## print's "hi!" as expected
> > f(new("a"))
> >
> > I have also posted to stack overflow here:
> > https://stackoverflow.com/questions/60264786/r-s4-class-union-of-class-unions?noredirect=1#comment106627883_60264786,
> > (the example in this note removes devtools to make the environment
> > cleaner).
> >
> > Interestingly, the issue only seems to arise when there are > 1 layer
> > of the class union. E.g. if I were to setMethod on "ab" instead of
> > "xyab", method dispatch would work as expected. I am not posting a bug
> > yet as it is still unclear to me if I am doing something incorrect.
> >
> > My sessionInfo() is :
> >
> > R version 3.6.2 (2019-12-12)
> > Platform: x86_64-pc-linux-gnu (64-bit)
> > Running under: Ubuntu 18.04.3 LTS
> >
> > Matrix products: default
> > BLAS:   /usr/local/lib/R/lib/libRblas.so
> > LAPACK: /usr/local/lib/R/lib/libRlapack.so
> >
> > locale:
> >   [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C
> >   [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8
> >   [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8
> >   [7] LC_PAPER=en_US.UTF-8       LC_NAME=C
> >   [9] LC_ADDRESS=C               LC_TELEPHONE=C
> > [11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C
> >
> > attached base packages:
> > [1] stats     graphics  grDevices utils     datasets  methods   base
> >
> > other attached packages:
> > [1] anRpackage_1.0
> >
> > loaded via a namespace (and not attached):
> > [1] compiler_3.6.2 tools_3.6.2
> >
> > Thanks in advance for the help!
> >
> >       [[alternative HTML version deleted]]
> >
> > ______________________________________________
> > R-devel at r-project.org mailing list
> > https://stat.ethz.ch/mailman/listinfo/r-devel
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel



-- 
Michael Lawrence
Senior Scientist, Bioinformatics and Computational Biology
Genentech, A Member of the Roche Group
Office +1 (650) 225-7760
michafla at gene.com

Join Genentech on LinkedIn | Twitter | Facebook | Instagram | YouTube


From @@chre|b @end|ng |rom u@|bert@@c@  Wed Feb 19 03:55:19 2020
From: @@chre|b @end|ng |rom u@|bert@@c@ (Stefan Schreiber)
Date: Tue, 18 Feb 2020 19:55:19 -0700
Subject: [Rd] object.size vs lobstr::obj_size
Message-ID: <CAPK=JivePSZw8Ljuq+rGM+HAaRp31_Jz0gGCWbW5vrMWaXQLHA@mail.gmail.com>

I have posted this question on R-help where it was suggested to me
that I might get a better response on R-devel. So far I have gotten no
response. The post I am talking about is here:
https://stat.ethz.ch/pipermail/r-help/2020-February/465700.html

My apologies for cross-posting, which I am aware is impolite and I
should have posted on R-devel in the first place - but I wasn't sure.

Here is my question again:

I am currently working through Advanced R by H. Wickham and came
across the `lobstr::obj_size` function which appears to calculate the
size of an object by taking into account whether the same object has
been referenced multiple times, e.g.

x <- runif(1e6)
y <- list(x, x, x)
lobstr::obj_size(y)
# 8,000,128 B

# versus:
object.size(y)
# 24000224 bytes

Reading through `?object.size` in the "Details" it reads: [...] but
does not detect if elements of a list are shared [...].

My questions are:

(1) is the result of `obj_size()` the "correct" one when it comes to
actual size used in memory?

(2) And if yes, why wouldn't `object.size()` be updated to reflect the
more precise calculation of an object in question similar to
`obj_size()`?

There are probably valid reasons for this and any insight would be
greatly appreciated.


From @oko| @end|ng |rom |n@@-tou|ou@e@|r  Wed Feb 19 15:21:21 2020
From: @oko| @end|ng |rom |n@@-tou|ou@e@|r (Serguei Sokol)
Date: Wed, 19 Feb 2020 15:21:21 +0100
Subject: [Rd] dimnames incoherence?
Message-ID: <93c7f926-4a26-d874-9016-9103d08e21b1@insa-toulouse.fr>

Hi,

I was bitten by a little incoherence in dimnames assignment or may be I 
missed some point.
Here is the case. If I assign row names via dimnames(a)[[1]], when 
nrow(a)=1 then an error is thrown. But if I do the same when nrow(a) > 1 
it's OK. Is one of this case works unexpectedly? Both? Neither?

a=as.matrix(1)
dimnames(a)[[1]]="a" # error: 'dimnames' must be a list

aa=as.matrix(1:2)
dimnames(aa)[[1]]=c("a", "b") # OK

In the second case, dimnames(aa) is not a list (like in the first case) 
but it works.
I would expect that the both work or neither.

Your thoughts are welcome.
Best,
Serguei.

PS the same apply for dimnames(a)[[2]]<-.

 > sessionInfo()
R version 3.6.1 (2019-07-05)
Platform: x86_64-pc-linux-gnu (64-bit)
Running under: Mageia 7

Matrix products: default
BLAS/LAPACK: /home/opt/OpenBLAS/lib/libopenblas_sandybridge-r0.3.6.so

locale:
 ?[1] LC_CTYPE=fr_FR.UTF-8?????? LC_NUMERIC=C
 ?[3] LC_TIME=fr_FR.UTF-8??????? LC_COLLATE=fr_FR.UTF-8
 ?[5] LC_MONETARY=fr_FR.UTF-8??? LC_MESSAGES=fr_FR.UTF-8
 ?[7] LC_PAPER=fr_FR.UTF-8?????? LC_NAME=C
 ?[9] LC_ADDRESS=C?????????????? LC_TELEPHONE=C
[11] LC_MEASUREMENT=fr_FR.UTF-8 LC_IDENTIFICATION=C

attached base packages:
[1] parallel? stats???? graphics? grDevices utils???? datasets methods
[8] base

other attached packages:
[1] multbxxc_1.0.1??????????? rmumps_5.2.1-11
[3] arrApply_2.1????????????? RcppArmadillo_0.9.800.4.0
[5] Rcpp_1.0.3??????????????? slam_0.1-47
[7] nnls_1.4

loaded via a namespace (and not attached):
[1] compiler_3.6.1?? tools_3.6.1????? codetools_0.2-16


From m@ech|er @end|ng |rom @t@t@m@th@ethz@ch  Wed Feb 19 18:06:57 2020
From: m@ech|er @end|ng |rom @t@t@m@th@ethz@ch (Martin Maechler)
Date: Wed, 19 Feb 2020 18:06:57 +0100
Subject: [Rd] dimnames incoherence?
In-Reply-To: <93c7f926-4a26-d874-9016-9103d08e21b1@insa-toulouse.fr>
References: <93c7f926-4a26-d874-9016-9103d08e21b1@insa-toulouse.fr>
Message-ID: <24141.27441.451267.488389@stat.math.ethz.ch>

>>>>> Serguei Sokol 
>>>>>     on Wed, 19 Feb 2020 15:21:21 +0100 writes:

    > Hi,
    > I was bitten by a little incoherence in dimnames assignment or may be I 
    > missed some point.
    > Here is the case. If I assign row names via dimnames(a)[[1]], when 
    > nrow(a)=1 then an error is thrown. But if I do the same when nrow(a) > 1 
    > it's OK. Is one of this case works unexpectedly? Both? Neither?

    > a=as.matrix(1)
    > dimnames(a)[[1]]="a" # error: 'dimnames' must be a list

    > aa=as.matrix(1:2)
    > dimnames(aa)[[1]]=c("a", "b") # OK

    > In the second case, dimnames(aa) is not a list (like in the first case) 
    > but it works.
    > I would expect that the both work or neither.

I agree (even though I'm strongly advising people to use '<-'
  	instead of '=');
which in this case helps you get the name of the function really
involved:  It is  `dimnames<-`  (which is implemented in C
entirely, for matrices and other arrays).


    > Your thoughts are welcome.

I think we'd be happy if you report this formally on R's
bugzilla - https://bugs.r-project.org/ - as a bug.

  --> https://www.r-project.org/bugs.html

>From reading bugs.html you note that you should ask for an account there;
as I'm one of the people who get such request by e-mail, in this
case, I can do it directly (if you confirm you'd want in a
private e-mail).

    > Best,
    > Serguei.

    > PS the same apply for dimnames(a)[[2]]<-.

(of course)

NB *and*  importantly, the buglet is still in current versions of R 

Best,
Martin

    >> sessionInfo()
    > R version 3.6.1 (2019-07-05)
    > Platform: x86_64-pc-linux-gnu (64-bit)
    > Running under: Mageia 7

    > Matrix products: default
    > BLAS/LAPACK: /home/opt/OpenBLAS/lib/libopenblas_sandybridge-r0.3.6.so

    > locale:
    > ?[1] LC_CTYPE=fr_FR.UTF-8?????? LC_NUMERIC=C
    > ?[3] LC_TIME=fr_FR.UTF-8??????? LC_COLLATE=fr_FR.UTF-8
    > ?[5] LC_MONETARY=fr_FR.UTF-8??? LC_MESSAGES=fr_FR.UTF-8
    > ?[7] LC_PAPER=fr_FR.UTF-8?????? LC_NAME=C
    > ?[9] LC_ADDRESS=C?????????????? LC_TELEPHONE=C
    > [11] LC_MEASUREMENT=fr_FR.UTF-8 LC_IDENTIFICATION=C

    > attached base packages:
    > [1] parallel? stats???? graphics? grDevices utils???? datasets methods
    > [8] base

    > other attached packages:
    > [1] multbxxc_1.0.1??????????? rmumps_5.2.1-11
    > [3] arrApply_2.1????????????? RcppArmadillo_0.9.800.4.0
    > [5] Rcpp_1.0.3??????????????? slam_0.1-47
    > [7] nnls_1.4

    > loaded via a namespace (and not attached):
    > [1] compiler_3.6.1?? tools_3.6.1????? codetools_0.2-16

    > ______________________________________________
    > R-devel at r-project.org mailing list
    > https://stat.ethz.ch/mailman/listinfo/r-devel


From wdun|@p @end|ng |rom t|bco@com  Wed Feb 19 18:30:48 2020
From: wdun|@p @end|ng |rom t|bco@com (William Dunlap)
Date: Wed, 19 Feb 2020 09:30:48 -0800
Subject: [Rd] dimnames incoherence?
In-Reply-To: <93c7f926-4a26-d874-9016-9103d08e21b1@insa-toulouse.fr>
References: <93c7f926-4a26-d874-9016-9103d08e21b1@insa-toulouse.fr>
Message-ID: <CAF8bMcbX-E5BUq7Z=_r73GS1sD+B9nXN01hFvsevjwkqu4BRMw@mail.gmail.com>

How far would you like to go with the automatic creation of dimnames in
nested replacement operations on arrays?  It currently works nicely with [<-
   > a <- array(numeric(), dim=c(2,0,1)); dimnames(a)[3] <- list("One")
   > str(a)
    num[1:2, 0 , 1]
    - attr(*, "dimnames")=List of 3
     ..$ : NULL
     ..$ : NULL
     ..$ : chr "One"

It works most of the time (except for length=1) for [[<-
  > a <- array(numeric(), dim=c(2,0,1)); dimnames(a)[[1]] <- c("X1","X2")
  > a <- array(numeric(), dim=c(2,0,1)); dimnames(a)[[2]] <- character()
  > a <- array(numeric(), dim=c(2,0,1)); dimnames(a)[[3]] <- "Z1"
  Error in dimnames(a)[[3]] <- "Z1" : 'dimnames' must be a list

It does not work at all for names<-.
> a <- array(numeric(), dim=c(2,0,1)); names(dimnames(a)) <- c("X","Y","Z")
Error in names(dimnames(a)) <- c("X", "Y", "Z") :
  attempt to set an attribute on NULL
> a <- array(numeric(), dim=c(2,0,1)); dimnames(a)<-vector("list",3);
names(dimnames(a)) <- c("X","Y","Z")
> str(a)
 num[1:2, 0 , 1]
 - attr(*, "dimnames")=List of 3
  ..$ X: NULL
  ..$ Y: NULL
  ..$ Z: NULL

Bill Dunlap
TIBCO Software
wdunlap tibco.com


On Wed, Feb 19, 2020 at 6:24 AM Serguei Sokol <sokol at insa-toulouse.fr>
wrote:

> Hi,
>
> I was bitten by a little incoherence in dimnames assignment or may be I
> missed some point.
> Here is the case. If I assign row names via dimnames(a)[[1]], when
> nrow(a)=1 then an error is thrown. But if I do the same when nrow(a) > 1
> it's OK. Is one of this case works unexpectedly? Both? Neither?
>
> a=as.matrix(1)
> dimnames(a)[[1]]="a" # error: 'dimnames' must be a list
>
> aa=as.matrix(1:2)
> dimnames(aa)[[1]]=c("a", "b") # OK
>
> In the second case, dimnames(aa) is not a list (like in the first case)
> but it works.
> I would expect that the both work or neither.
>
> Your thoughts are welcome.
> Best,
> Serguei.
>
> PS the same apply for dimnames(a)[[2]]<-.
>
>  > sessionInfo()
> R version 3.6.1 (2019-07-05)
> Platform: x86_64-pc-linux-gnu (64-bit)
> Running under: Mageia 7
>
> Matrix products: default
> BLAS/LAPACK: /home/opt/OpenBLAS/lib/libopenblas_sandybridge-r0.3.6.so
>
> locale:
>   [1] LC_CTYPE=fr_FR.UTF-8       LC_NUMERIC=C
>   [3] LC_TIME=fr_FR.UTF-8        LC_COLLATE=fr_FR.UTF-8
>   [5] LC_MONETARY=fr_FR.UTF-8    LC_MESSAGES=fr_FR.UTF-8
>   [7] LC_PAPER=fr_FR.UTF-8       LC_NAME=C
>   [9] LC_ADDRESS=C               LC_TELEPHONE=C
> [11] LC_MEASUREMENT=fr_FR.UTF-8 LC_IDENTIFICATION=C
>
> attached base packages:
> [1] parallel  stats     graphics  grDevices utils     datasets methods
> [8] base
>
> other attached packages:
> [1] multbxxc_1.0.1            rmumps_5.2.1-11
> [3] arrApply_2.1              RcppArmadillo_0.9.800.4.0
> [5] Rcpp_1.0.3                slam_0.1-47
> [7] nnls_1.4
>
> loaded via a namespace (and not attached):
> [1] compiler_3.6.1   tools_3.6.1      codetools_0.2-16
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>

	[[alternative HTML version deleted]]


From m@ech|er @end|ng |rom @t@t@m@th@ethz@ch  Wed Feb 19 21:58:51 2020
From: m@ech|er @end|ng |rom @t@t@m@th@ethz@ch (Martin Maechler)
Date: Wed, 19 Feb 2020 21:58:51 +0100
Subject: [Rd] dimnames incoherence?
In-Reply-To: <24141.27441.451267.488389@stat.math.ethz.ch>
References: <93c7f926-4a26-d874-9016-9103d08e21b1@insa-toulouse.fr>
 <24141.27441.451267.488389@stat.math.ethz.ch>
Message-ID: <24141.41355.477434.400158@stat.math.ethz.ch>

>>>>> Martin Maechler 
>>>>>     on Wed, 19 Feb 2020 18:06:57 +0100 writes:

>>>>> Serguei Sokol 
>>>>>     on Wed, 19 Feb 2020 15:21:21 +0100 writes:

    >> Hi,
    >> I was bitten by a little incoherence in dimnames assignment or may be I 
    >> missed some point.
    >> Here is the case. If I assign row names via dimnames(a)[[1]], when 
    >> nrow(a)=1 then an error is thrown. But if I do the same when nrow(a) > 1 
    >> it's OK. Is one of this case works unexpectedly? Both? Neither?

    >> a=as.matrix(1)
    >> dimnames(a)[[1]]="a" # error: 'dimnames' must be a list

    >> aa=as.matrix(1:2)
    >> dimnames(aa)[[1]]=c("a", "b") # OK

    >> In the second case, dimnames(aa) is not a list (like in the first case) 
    >> but it works.
    >> I would expect that the both work or neither.

    > I agree (even though I'm strongly advising people to use '<-'
    > instead of '=');
    > which in this case helps you get the name of the function really
    > involved:  It is  `dimnames<-`  (which is implemented in C
    > entirely, for matrices and other arrays).

As a matter of fact, I wrote too quickly, the culprit here is
the  `[[<-`  function (rather than `dimnames<-`),
which has a special "inconsistency" feature when used to "add to NULL";
almost surely inherited from S,  but I now think we should
consider dropping on the occasion of aiming for  R 4.0.0 :

It's documented in ?Extract  that  length 1  `[[.]]`-assignment works
specially for NULL (and dimnames(.) are NULL here).

Note you need to read and understand one of the tougher sections
in the official  'R Language Definition'  Manual,
section -- 3.4.4 Subset assignment ---
i.e.,
https://cran.r-project.org/doc/manuals/r-release/R-lang.html#Subset-assignment

notably this part: 

Nesting of complex assignments is evaluated recursively 

     names(x)[3] <- "Three"

is equivalent to

     `*tmp*` <- x
     x <- "names<-"(`*tmp*`, value="[<-"(names(`*tmp*`), 3, value="Three"))
     rm(`*tmp*`)

and then, apply this to our    dimnames(a)[[1]] <- "a"
and so  replace

 -  'names<-' by 'dimnames<-'
 -  '[<-'     by '[[<-'

----------

Here is the rest of my analysis as valid R code
{this is not new, Peter Dalgaard had explained this 10 or 20
 years ago to a mailing list audience IIRC} : 

## MM: The problematic behavior (bug ?) is in `[[<-`, not in `dimnames<-` :

`[[<-`(NULL, 1,   "a"     ) # gives  "a"  (*not* a list)
`[[<-`(NULL, 1, c("a","b")) # gives list(c("a","b"))  !!

##==> in C code: in  subassign.c  [ ~/R/D/r-devel/R/src/main/subassign.c ]
##==> function (~ 340 lines)
##            do_subassign2_dflt(SEXP call, SEXP op, SEXP args, SEXP rho)
## has
"
line svn r.  svn auth. c.o.d.e...
---- ------  --------- ----------------------------------------------
1741   4166      ihaka     if (isNull(x)) {
1742  45446     ripley         if (isNull(y)) {
1743  76166       luke             UNPROTECT(2); /* args, y */
1744   4166      ihaka             return x;
1745  45446     ripley         }
1746  35680    murdoch         if (length(y) == 1)
1747  68094       luke             x = allocVector(TYPEOF(y), 0);
1748  24954     ripley         else
1749  68094       luke             x = allocVector(VECSXP, 0);
1750   1820      ihaka     }
---- ------  --------- ----------------------------------------------
"
## so clearly, in case the value is of length 1, no list is created .

## For dimnames<-  Replacing NULL by list()  should be done in both cases , and then things work :
`[[<-`(list(), 1,   "a"     ) # gives list( "a" )
`[[<-`(list(), 1, c("a","b")) # gives list(c("a","b"))  !!

## but the problem here is that  `[[<-` at this time in the game
## does *not* know that it comes from dimnames<- ....

---------------

If we change the behavior  NULL--[[--assignment from

 `[[<-`(NULL, 1, "a" ) # gives  "a"  (*not* a list)

to

 `[[<-`(NULL, 1, "a" ) # gives  list("a")


then we have more consistency there *and* your bug is fixed too.
Of course, in other situations back-compatibility would be
broken as well.

At the moment, I think we (R Core Team) should consider doing
that here.

Martin



    >> Your thoughts are welcome.

    > I think we'd be happy if you report this formally on R's
    > bugzilla - https://bugs.r-project.org/ - as a bug.

    --> https://www.r-project.org/bugs.html

    >> From reading bugs.html you note that you should ask for
    >> an account there;
    > as I'm one of the people who get such request by e-mail,
    > in this case, I can do it directly (if you confirm you'd
    > want in a private e-mail).

    >> Best, Serguei.

    >> PS the same apply for dimnames(a)[[2]]<-.

    > (of course)

    > NB *and* importantly, the buglet is still in current
    > versions of R

    > Best, Martin

    >>> sessionInfo()
    >> R version 3.6.1 (2019-07-05) Platform:
    >> x86_64-pc-linux-gnu (64-bit) Running under: Mageia 7

    >> Matrix products: default BLAS/LAPACK:
    >> /home/opt/OpenBLAS/lib/libopenblas_sandybridge-r0.3.6.so

    >> locale: ?[1] LC_CTYPE=fr_FR.UTF-8?????? LC_NUMERIC=C ?[3]
    >> LC_TIME=fr_FR.UTF-8??????? LC_COLLATE=fr_FR.UTF-8 ?[5]
    >> LC_MONETARY=fr_FR.UTF-8??? LC_MESSAGES=fr_FR.UTF-8 ?[7]
    >> LC_PAPER=fr_FR.UTF-8?????? LC_NAME=C ?[9]
    >> LC_ADDRESS=C?????????????? LC_TELEPHONE=C [11]
    >> LC_MEASUREMENT=fr_FR.UTF-8 LC_IDENTIFICATION=C

    >> attached base packages: [1] parallel? stats???? graphics?
    >> grDevices utils???? datasets methods [8] base

    >> other attached packages: [1] multbxxc_1.0.1???????????
    >> rmumps_5.2.1-11 [3] arrApply_2.1?????????????
    >> RcppArmadillo_0.9.800.4.0 [5] Rcpp_1.0.3???????????????
    >> slam_0.1-47 [7] nnls_1.4

    >> loaded via a namespace (and not attached): [1]
    >> compiler_3.6.1?? tools_3.6.1????? codetools_0.2-16

    >> ______________________________________________
    >> R-devel at r-project.org mailing list
    >> https://stat.ethz.ch/mailman/listinfo/r-devel

    > ______________________________________________
    > R-devel at r-project.org mailing list
    > https://stat.ethz.ch/mailman/listinfo/r-devel


From irederik m@iii@g oii oib@@et  Fri Feb 21 06:25:23 2020
From: irederik m@iii@g oii oib@@et (irederik m@iii@g oii oib@@et)
Date: Thu, 20 Feb 2020 21:25:23 -0800
Subject: [Rd] R --interactive -e 'browser()'
Message-ID: <20200221052523.GA123924@localhost>

I would like to have a mode where I can run some R code in an executable script, like with Rscript, but interactively, so that e.g. 'browser()' works.

 From the manual page it looks like this should work:

     R --interactive -e 'source("script.R")'

or we could shorten it to:

     R --interactive -e 'browser()'

However, it seems that --interactive causes -e to be ignored.

And if I leave out --interactive, then R quits before the browser() function exits.

 From an engineering standpoint it doesn't seem like it should be very difficult to tell the interactive REPL to pretend that a certain command was entered before everything else. Also, it would be useful to me to be able to debug R scripts using standard features like 'browser()'. Should I submit a feature request on Bugzilla, or maybe someone can advise me how to proceed?

Thanks,

Frederick


From jte||er|@@rproject @end|ng |rom gm@||@com  Fri Feb 21 06:58:24 2020
From: jte||er|@@rproject @end|ng |rom gm@||@com (Juan Telleria Ruiz de Aguirre)
Date: Fri, 21 Feb 2020 06:58:24 +0100
Subject: [Rd] Support for Dashes in the Raw String Delimiter
Message-ID: <CAJXDcw0kdaTvFFB4rZxzbDCFu-x-3sYYbeOoPAMepnHDQREu0w@mail.gmail.com>

Dear R Developers,

As regards "Support for Dashes in the Raw String Delimiter" from commit:

https://github.com/wch/r-source/commit/4d4781ad19890193d5eb458d71f18d7e53ee73c5

Would it be possible to support in addition to r"" Syntax, for not escaping
backlash character in strings, also support """ """ (Python Like Syntax),
for also allowing to have within the character string the closing sequence
" symbol?

See Python's article on string literals for further information:

https://docs.python.org/2.0/ref/strings.html

Thanks!

	[[alternative HTML version deleted]]


From m@ech|er @end|ng |rom @t@t@m@th@ethz@ch  Fri Feb 21 09:53:16 2020
From: m@ech|er @end|ng |rom @t@t@m@th@ethz@ch (Martin Maechler)
Date: Fri, 21 Feb 2020 09:53:16 +0100
Subject: [Rd] capabilities(),
 was [R-pkg-devel] ... No protocol specified (OS X only)
In-Reply-To: <CABFfbXt=HPcfoXL8cWmOoOunC33zcUkw5p-zD+Bv3Wjh-RuzOg@mail.gmail.com>
References: <CAEfsz7p5UGdGCgeHFbTw+eR8ZdfNiKjegtQTXVzPUO_S57Jpeg@mail.gmail.com>
 <CABFfbXt=HPcfoXL8cWmOoOunC33zcUkw5p-zD+Bv3Wjh-RuzOg@mail.gmail.com>
Message-ID: <24143.39548.415509.67054@stat.math.ethz.ch>

Diverting (from R-package-devel) to R-devel, as it is now about
extending R :

>>>>> Jeroen Ooms   on Thu, 20 Feb 2020 20:34:14 +0100 writes:

    > On Tue, Feb 18, 2020 at 1:29 AM Dominic Comtois
    > <dominic.comtois at gmail.com> wrote:
    >> 
    >> Hello,
    >> 
    >> On my package's check results (
    >> https://cran.r-project.org/web/checks/check_results_summarytools.html), I
    >> see a bunch of warnings with "No protocol specified" messages. This happens
    >> only with OS X, and I can't reproduce them when actually building on a Mac,
    >> nor with rhub::check_on_macos(). I can't really make sense out of them, and
    >> they are all over the place. Can they simply be ignored?

    > This happens when your package calls capabilities(), which as a side
    > effect initiates xquartz. It seems the MacOS server has certain
    > permission restrictions that cause X11 to print this warning.

    > I think you can safely ignore it.

Thank you, Jeroen.

The function is currently defined (in base/R/New-Internal.R ) as

capabilities <- function(what = NULL)
{
    z  <- .Internal(capabilities())
    if(!is.null(what))
        z <- z[match(what, names(z), 0L)]
    if(.Platform$OS.type == "windows") return(z)
    ## Now we need to deal with any NA entries if X11 is unknown.
    nas <- names(z[is.na(z)])
    if(any(nas %in% c("X11", "jpeg", "png", "tiff"))) {
        ## This might throw an X11 error
         z[nas] <- tryCatch(.Internal(capabilitiesX11()),
                            error = function(e) FALSE)
    }
    z
}

and we could easily add a 2nd argument, say  'Xchk = TRUE'  like
this

capabilities <- function(what = NULL, Xchk = TRUE)
{
    z  <- .Internal(capabilities())
    if(!is.null(what))
        z <- z[match(what, names(z), 0L)]
    if(.Platform$OS.type == "windows") return(z)
    if(Xchk) {
	## Now we need to deal with any NA entries if X11 is unknown.
	nas <- names(z[is.na(z)])
	if(any(nas %in% c("X11", "jpeg", "png", "tiff"))) {
	    ## This might throw an X11 error
	     z[nas] <- tryCatch(.Internal(capabilitiesX11()),
				error = function(e) FALSE)
	}
    }
    z
}

and as an afterthought rather improve the argument's default, from

    Xchk = TRUE

to

    Xchk = is.null(what) ||
           any(c("X11", "jpeg", "png", "tiff") %in% what)

(or similar smart defaults).

Then, e.g.,  capabilities("long.double")  or
capabilities("profmem")
would never trigger that X11-lookup and neither would

  cap <- capabilities(X = FALSE)

where you'd typically get an  NA  for cap[["X11"]]


Martin


From m@ech|er @end|ng |rom @t@t@m@th@ethz@ch  Fri Feb 21 12:11:24 2020
From: m@ech|er @end|ng |rom @t@t@m@th@ethz@ch (Martin Maechler)
Date: Fri, 21 Feb 2020 12:11:24 +0100
Subject: [Rd] function(x) !is.na(x) & x "is_true(.)" etc. was: [R] How to
 index..
In-Reply-To: <F447EE43-A0E9-4764-812F-21BA13B20B73@gmail.com>
References: <SYYP282MB108651F19CC21C2452DF2953D9100@SYYP282MB1086.AUSP282.PROD.OUTLOOK.COM>
 <CAF8bMcbNpEc8inm_bV8QXK5juyFG0NJep0u9=jtjp7XRZ2TufA@mail.gmail.com>
 <ME4P282MB107903721DAF4F18F4AA975AD9130@ME4P282MB1079.AUSP282.PROD.OUTLOOK.COM>
 <F447EE43-A0E9-4764-812F-21BA13B20B73@gmail.com>
Message-ID: <24143.47836.322661.70620@stat.math.ethz.ch>

Diverted from R-help to R-devel,
as I've changed the focus to consider adding new functions to R :

>>>>> peter dalgaard 
>>>>>     on Fri, 21 Feb 2020 10:46:16 +0100 writes:

    > It has isTRUE, but that is not vectorized, and in fact explicitly tests length==1, so
    >> isTRUE(c(TRUE,FALSE,NA))
    > [1] FALSE
    >> isTRUE(c(TRUE,TRUE, TRUE)) # I thought I thaw a puddycat... ;-)
    > [1] FALSE
    >> Vectorize(isTRUE)(c(TRUE,FALSE,NA))
    > [1]  TRUE FALSE FALSE

    > (The latter would be silly as an implementation of is_true, of course.)

    > -pd

yes... We've had (hidden) functions in the Matrix package for
these, which can still be accelerated (quite a bit for most
arguments), in Matrix/R/Auxiliaries.R (see the R-forge development version :
 https://r-forge.r-project.org/scm/viewvc.php/pkg/Matrix/R/Auxiliaries.R?view=markup&root=matrix  ) 


## Need to consider NAs ;  "== 0" even works for logical & complex:
## Note that "!x" is faster than "x == 0", but does not (yet!) work for complex
## if we did these in C, would gain a factor 2 (or so):
is0  <- function(x) !is.na(x) & x == 0
isN0 <- function(x)  is.na(x) | x != 0
is1  <- function(x) !is.na(x) & x   # also == "isTRUE componentwise"


{{Note that here  0 <==> FALSE   and  non-0 <==> TRUE , and I
  had preferred the shorter words to the longer ones in the
  Matrix pkg, not the least as '0' is relevant also for
  talking/programming about sparse matrices ..
}}

... and then there are  all* and any* versions of these
functions there , for which I have even written fast C based .Call()s ...

May this be something worth adding to base  for  R 4.0.0
(if only just to entice more users making the effort to switch
 to it in ca. 2 months) ?

Martin



    >> On 20 Feb 2020, at 04:20 , Lijun Zhao <lijun.zhao at adelaide.edu.au> wrote:
    >> 
    >> 
    >> Some packages have the equivalent of that is_true function, which maps FALSE and NA to FALSE and TRUE to TRUE.  I don't think core R contains such a function.

    > -- 
    > Peter Dalgaard, Professor,
    > Center for Statistics, Copenhagen Business School
    > Solbjerg Plads 3, 2000 Frederiksberg, Denmark
    > Phone: (+45)38153501
    > Office: A 4.23
    > Email: pd.mes at cbs.dk  Priv: PDalgd at gmail.com

    > ______________________________________________
    > R-help at r-project.org mailing list -- To UNSUBSCRIBE and more, see
    > https://stat.ethz.ch/mailman/listinfo/r-help
    > PLEASE do read the posting guide http://www.R-project.org/posting-guide.html
    > and provide commented, minimal, self-contained, reproducible code.


From iuke-tier@ey m@iii@g oii uiow@@edu  Fri Feb 21 14:23:22 2020
From: iuke-tier@ey m@iii@g oii uiow@@edu (iuke-tier@ey m@iii@g oii uiow@@edu)
Date: Fri, 21 Feb 2020 07:23:22 -0600 (CST)
Subject: [Rd] [External]  Support for Dashes in the Raw String Delimiter
In-Reply-To: <CAJXDcw0kdaTvFFB4rZxzbDCFu-x-3sYYbeOoPAMepnHDQREu0w@mail.gmail.com>
References: <CAJXDcw0kdaTvFFB4rZxzbDCFu-x-3sYYbeOoPAMepnHDQREu0w@mail.gmail.com>
Message-ID: <alpine.DEB.2.21.2002210707090.3694@luke-Latitude-7480>

> r"{single quote ' and double quote " and one at the end "}"
[1] "single quote ' and double quote \" and one at the end \""

See ?Quotes for details.

The C++ syntax, on which the R syntax is based, is strictly more
powerful than the Python approach: it allows a raw string to contain
_any_ sequence of characters by adjusting the delimiter. To simplify
the implementation R only allows dashes for adjustment, but that is
sufficient:

> r"{'`"}"
[1] "'`\""
> r"-{r"{'`"}"}-"
[1] "r\"{'`\"}\""

Best,

luke

On Fri, 21 Feb 2020, Juan Telleria Ruiz de Aguirre wrote:

> Dear R Developers,
>
> As regards "Support for Dashes in the Raw String Delimiter" from commit:
>
> https://github.com/wch/r-source/commit/4d4781ad19890193d5eb458d71f18d7e53ee73c5
>
> Would it be possible to support in addition to r"" Syntax, for not escaping
> backlash character in strings, also support """ """ (Python Like Syntax),
> for also allowing to have within the character string the closing sequence
> " symbol?
>
> See Python's article on string literals for further information:
>
> https://docs.python.org/2.0/ref/strings.html
>
> Thanks!
>
> 	[[alternative HTML version deleted]]
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>

-- 
Luke Tierney
Ralph E. Wareham Professor of Mathematical Sciences
University of Iowa                  Phone:             319-335-3386
Department of Statistics and        Fax:               319-335-3017
    Actuarial Science
241 Schaeffer Hall                  email:   luke-tierney at uiowa.edu
Iowa City, IA 52242                 WWW:  http://www.stat.uiowa.edu


From bbo|ker @end|ng |rom gm@||@com  Fri Feb 21 16:53:32 2020
From: bbo|ker @end|ng |rom gm@||@com (Ben Bolker)
Date: Fri, 21 Feb 2020 10:53:32 -0500
Subject: [Rd] trivial typo in man page Quote.Rd
Message-ID: <82812ee8-3f9d-5897-1257-aa9a0579ccc6@math.mcmaster.ca>


  Attn: someone on R-core:

  "ran" should be "can".

  Also, thanks for this feature!

Index: Quotes.Rd
===================================================================
--- Quotes.Rd	(revision 77845)
+++ Quotes.Rd	(working copy)
@@ -74,7 +74,7 @@
   Raw character constants are also available using a syntax similar to
   the one used in C++: \code{r"(...)"} with \code{...} any character
   sequence, except that it must not contain the closing sequence
-  \samp{)"}. The delimiter pairs \code{[]} and \code{\{\}} ran also be
+  \samp{)"}. The delimiter pairs \code{[]} and \code{\{\}} can also be
   used. For  additional flexibility, a number of dashes can be placed
   between the opening quote and the opening delimiter, as long as the same
   number of dashes appear between the closing delimiter and the closing
quote.


From m@ech|er @end|ng |rom @t@t@m@th@ethz@ch  Fri Feb 21 18:09:27 2020
From: m@ech|er @end|ng |rom @t@t@m@th@ethz@ch (Martin Maechler)
Date: Fri, 21 Feb 2020 18:09:27 +0100
Subject: [Rd] trivial typo in man page Quote.Rd
In-Reply-To: <82812ee8-3f9d-5897-1257-aa9a0579ccc6@math.mcmaster.ca>
References: <82812ee8-3f9d-5897-1257-aa9a0579ccc6@math.mcmaster.ca>
Message-ID: <24144.3783.188012.3108@stat.math.ethz.ch>

>>>>> Ben Bolker 
>>>>>     on Fri, 21 Feb 2020 10:53:32 -0500 writes:

    > Attn: someone on R-core:

    > "ran" should be "can".

    > Also, thanks for this feature!

    > Index: Quotes.Rd
    > ===================================================================
    > --- Quotes.Rd	(revision 77845)
    > +++ Quotes.Rd	(working copy)
    > @@ -74,7 +74,7 @@
    > Raw character constants are also available using a syntax similar to
    > the one used in C++: \code{r"(...)"} with \code{...} any character
    > sequence, except that it must not contain the closing sequence
    > -  \samp{)"}. The delimiter pairs \code{[]} and \code{\{\}} ran also be
    > +  \samp{)"}. The delimiter pairs \code{[]} and \code{\{\}} can also be
    > ....

Thank you, Ben.  Commited now.

Martin


From wdun|@p @end|ng |rom t|bco@com  Fri Feb 21 23:05:49 2020
From: wdun|@p @end|ng |rom t|bco@com (William Dunlap)
Date: Fri, 21 Feb 2020 14:05:49 -0800
Subject: [Rd] dimnames incoherence?
In-Reply-To: <24141.41355.477434.400158@stat.math.ethz.ch>
References: <93c7f926-4a26-d874-9016-9103d08e21b1@insa-toulouse.fr>
 <24141.27441.451267.488389@stat.math.ethz.ch>
 <24141.41355.477434.400158@stat.math.ethz.ch>
Message-ID: <CAF8bMcZi32on6xLzySL2VaJpUSX8J36+t8P12H6YWRd56cxFeQ@mail.gmail.com>

   If we change the behavior  NULL--[[--assignment from
    `[[<-`(NULL, 1, "a" ) # gives  "a"  (*not* a list)
   to
    `[[<-`(NULL, 1, "a" ) # gives  list("a")
   then we have more consistency there *and* your bug is fixed too.
   Of course, in other situations back-compatibility would be
   broken as well.

Would that change the result of
   L <- list(One=1) ; L$Two[[1]] <- 2
from the current list(One=1,Two=2) to list(One=1, Two=list(2))
and the result of
   F <- 1L ; levels(F)[[1]] <- "one"
from structure(1L, levels="one") to structure(1L, levels=list("one"))?
This change would make L$Name[[1]] <- value act like L$Name$one <- value
in cases when L did not have a component named "Name" and value
had length 1.

I have seen users use [[<- where [<- is more appropriate in cases like
this.  Should there be a way to generate warnings about the change in
behavior as you've done with other syntax changes?

Bill Dunlap
TIBCO Software
wdunlap tibco.com


On Wed, Feb 19, 2020 at 12:59 PM Martin Maechler <maechler at stat.math.ethz.ch>
wrote:

> >>>>> Martin Maechler
> >>>>>     on Wed, 19 Feb 2020 18:06:57 +0100 writes:
>
> >>>>> Serguei Sokol
> >>>>>     on Wed, 19 Feb 2020 15:21:21 +0100 writes:
>
>     >> Hi,
>     >> I was bitten by a little incoherence in dimnames assignment or may
> be I
>     >> missed some point.
>     >> Here is the case. If I assign row names via dimnames(a)[[1]], when
>     >> nrow(a)=1 then an error is thrown. But if I do the same when
> nrow(a) > 1
>     >> it's OK. Is one of this case works unexpectedly? Both? Neither?
>
>     >> a=as.matrix(1)
>     >> dimnames(a)[[1]]="a" # error: 'dimnames' must be a list
>
>     >> aa=as.matrix(1:2)
>     >> dimnames(aa)[[1]]=c("a", "b") # OK
>
>     >> In the second case, dimnames(aa) is not a list (like in the first
> case)
>     >> but it works.
>     >> I would expect that the both work or neither.
>
>     > I agree (even though I'm strongly advising people to use '<-'
>     > instead of '=');
>     > which in this case helps you get the name of the function really
>     > involved:  It is  `dimnames<-`  (which is implemented in C
>     > entirely, for matrices and other arrays).
>
> As a matter of fact, I wrote too quickly, the culprit here is
> the  `[[<-`  function (rather than `dimnames<-`),
> which has a special "inconsistency" feature when used to "add to NULL";
> almost surely inherited from S,  but I now think we should
> consider dropping on the occasion of aiming for  R 4.0.0 :
>
> It's documented in ?Extract  that  length 1  `[[.]]`-assignment works
> specially for NULL (and dimnames(.) are NULL here).
>
> Note you need to read and understand one of the tougher sections
> in the official  'R Language Definition'  Manual,
> section -- 3.4.4 Subset assignment ---
> i.e.,
>
> https://cran.r-project.org/doc/manuals/r-release/R-lang.html#Subset-assignment
>
> notably this part:
>
> Nesting of complex assignments is evaluated recursively
>
>      names(x)[3] <- "Three"
>
> is equivalent to
>
>      `*tmp*` <- x
>      x <- "names<-"(`*tmp*`, value="[<-"(names(`*tmp*`), 3, value="Three"))
>      rm(`*tmp*`)
>
> and then, apply this to our    dimnames(a)[[1]] <- "a"
> and so  replace
>
>  -  'names<-' by 'dimnames<-'
>  -  '[<-'     by '[[<-'
>
> ----------
>
> Here is the rest of my analysis as valid R code
> {this is not new, Peter Dalgaard had explained this 10 or 20
>  years ago to a mailing list audience IIRC} :
>
> ## MM: The problematic behavior (bug ?) is in `[[<-`, not in `dimnames<-` :
>
> `[[<-`(NULL, 1,   "a"     ) # gives  "a"  (*not* a list)
> `[[<-`(NULL, 1, c("a","b")) # gives list(c("a","b"))  !!
>
> ##==> in C code: in  subassign.c  [ ~/R/D/r-devel/R/src/main/subassign.c ]
> ##==> function (~ 340 lines)
> ##            do_subassign2_dflt(SEXP call, SEXP op, SEXP args, SEXP rho)
> ## has
> "
> line svn r.  svn auth. c.o.d.e...
> ---- ------  --------- ----------------------------------------------
> 1741   4166      ihaka     if (isNull(x)) {
> 1742  45446     ripley         if (isNull(y)) {
> 1743  76166       luke             UNPROTECT(2); /* args, y */
> 1744   4166      ihaka             return x;
> 1745  45446     ripley         }
> 1746  35680    murdoch         if (length(y) == 1)
> 1747  68094       luke             x = allocVector(TYPEOF(y), 0);
> 1748  24954     ripley         else
> 1749  68094       luke             x = allocVector(VECSXP, 0);
> 1750   1820      ihaka     }
> ---- ------  --------- ----------------------------------------------
> "
> ## so clearly, in case the value is of length 1, no list is created .
>
> ## For dimnames<-  Replacing NULL by list()  should be done in both cases
> , and then things work :
> `[[<-`(list(), 1,   "a"     ) # gives list( "a" )
> `[[<-`(list(), 1, c("a","b")) # gives list(c("a","b"))  !!
>
> ## but the problem here is that  `[[<-` at this time in the game
> ## does *not* know that it comes from dimnames<- ....
>
> ---------------
>
> If we change the behavior  NULL--[[--assignment from
>
>  `[[<-`(NULL, 1, "a" ) # gives  "a"  (*not* a list)
>
> to
>
>  `[[<-`(NULL, 1, "a" ) # gives  list("a")
>
>
> then we have more consistency there *and* your bug is fixed too.
> Of course, in other situations back-compatibility would be
> broken as well.
>
> At the moment, I think we (R Core Team) should consider doing
> that here.
>
> Martin
>
>
>
>     >> Your thoughts are welcome.
>
>     > I think we'd be happy if you report this formally on R's
>     > bugzilla - https://bugs.r-project.org/ - as a bug.
>
>     --> https://www.r-project.org/bugs.html
>
>     >> From reading bugs.html you note that you should ask for
>     >> an account there;
>     > as I'm one of the people who get such request by e-mail,
>     > in this case, I can do it directly (if you confirm you'd
>     > want in a private e-mail).
>
>     >> Best, Serguei.
>
>     >> PS the same apply for dimnames(a)[[2]]<-.
>
>     > (of course)
>
>     > NB *and* importantly, the buglet is still in current
>     > versions of R
>
>     > Best, Martin
>
>     >>> sessionInfo()
>     >> R version 3.6.1 (2019-07-05) Platform:
>     >> x86_64-pc-linux-gnu (64-bit) Running under: Mageia 7
>
>     >> Matrix products: default BLAS/LAPACK:
>     >> /home/opt/OpenBLAS/lib/libopenblas_sandybridge-r0.3.6.so
>
>     >> locale:  [1] LC_CTYPE=fr_FR.UTF-8       LC_NUMERIC=C  [3]
>     >> LC_TIME=fr_FR.UTF-8        LC_COLLATE=fr_FR.UTF-8  [5]
>     >> LC_MONETARY=fr_FR.UTF-8    LC_MESSAGES=fr_FR.UTF-8  [7]
>     >> LC_PAPER=fr_FR.UTF-8       LC_NAME=C  [9]
>     >> LC_ADDRESS=C               LC_TELEPHONE=C [11]
>     >> LC_MEASUREMENT=fr_FR.UTF-8 LC_IDENTIFICATION=C
>
>     >> attached base packages: [1] parallel  stats     graphics
>     >> grDevices utils     datasets methods [8] base
>
>     >> other attached packages: [1] multbxxc_1.0.1
>     >> rmumps_5.2.1-11 [3] arrApply_2.1
>     >> RcppArmadillo_0.9.800.4.0 [5] Rcpp_1.0.3
>     >> slam_0.1-47 [7] nnls_1.4
>
>     >> loaded via a namespace (and not attached): [1]
>     >> compiler_3.6.1   tools_3.6.1      codetools_0.2-16
>
>     >> ______________________________________________
>     >> R-devel at r-project.org mailing list
>     >> https://stat.ethz.ch/mailman/listinfo/r-devel
>
>     > ______________________________________________
>     > R-devel at r-project.org mailing list
>     > https://stat.ethz.ch/mailman/listinfo/r-devel
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>

	[[alternative HTML version deleted]]


From m@ech|er @end|ng |rom @t@t@m@th@ethz@ch  Sat Feb 22 20:20:49 2020
From: m@ech|er @end|ng |rom @t@t@m@th@ethz@ch (Martin Maechler)
Date: Sat, 22 Feb 2020 20:20:49 +0100
Subject: [Rd] dimnames incoherence?
In-Reply-To: <CAF8bMcZi32on6xLzySL2VaJpUSX8J36+t8P12H6YWRd56cxFeQ@mail.gmail.com>
References: <93c7f926-4a26-d874-9016-9103d08e21b1@insa-toulouse.fr>
 <24141.27441.451267.488389@stat.math.ethz.ch>
 <24141.41355.477434.400158@stat.math.ethz.ch>
 <CAF8bMcZi32on6xLzySL2VaJpUSX8J36+t8P12H6YWRd56cxFeQ@mail.gmail.com>
Message-ID: <24145.32529.232208.410932@stat.math.ethz.ch>

>>>>> William Dunlap 
>>>>>     on Fri, 21 Feb 2020 14:05:49 -0800 writes:

    > If we change the behavior  NULL--[[--assignment from

    > `[[<-`(NULL, 1, "a" ) # gives  "a"  (*not* a list)

    > to

    > `[[<-`(NULL, 1, "a" ) # gives  list("a")

    > then we have more consistency there *and* your bug is fixed too.
    > Of course, in other situations back-compatibility would be
    > broken as well.

    > Would that change the result of
    > L <- list(One=1) ; L$Two[[1]] <- 2
    > from the current list(One=1,Two=2) to list(One=1, Two=list(2))

    > and the result of
    > F <- 1L ; levels(F)[[1]] <- "one"
    > from structure(1L, levels="one") to structure(1L, levels=list("one"))?

Yes (twice).

This is indeed what happens in current R-devel, as I had
committed the proposition above yesterday.
So R-devel (with svn rev >= 77844 )  does this :

> L <- list(One=1) ; L$Two[[1]] <- 2 ; dput(L)
list(One = 1, Two = list(2))
>  F <- 1L ; levels(F)[[1]] <- "one" ; dput(F)
structure(1L, .Label = list("one"))
> 

but I find that still considerably more logical than current
(pre R-devel) R's

> L <- list(One=1) ; L$Two[[1]] <- 2 ; dput(L)
list(One = 1, Two = 2)
> L <- list(One=1) ; L$Two[[1]] <- 2:3 ; dput(L)
list(One = 1, Two = list(2:3))
> 
> F <- 1L ; levels(F)[[1]] <- "one" ; dput(F)
structure(1L, .Label = "one")
> F <- 1L ; levels(F)[[1]] <- c("one", "TWO") ; dput(F)
structure(1L, .Label = list(c("one", "TWO")))
>


    > This change would make L$Name[[1]] <- value act like L$Name$one <- value
    > in cases when L did not have a component named "Name" and value
    > had length 1.

(I don't entirely get what you mean, but)
indeed,
the  [[<-  assignments will be closer to corresponding $<-  assignments...
which I thought would be another good thing about the change.

    > I have seen users use [[<- where [<- is more appropriate in cases like
    > this.  Should there be a way to generate warnings about the change in
    > behavior as you've done with other syntax changes?

Well, good question.
I'd guess one would get such warnings "all over the place",  and
if a warning is given only once per session it may not be
effective  ... also the warning be confusing to the 99.9% of R users who
don't even get what we are talking about here ;-)

Thank you for your comments.. I did not get too many.

Martin

    > Bill Dunlap
    > TIBCO Software
    > wdunlap tibco.com


    > On Wed, Feb 19, 2020 at 12:59 PM Martin Maechler <maechler at stat.math.ethz.ch>
    > wrote:

    >> >>>>> Martin Maechler
    >> >>>>>     on Wed, 19 Feb 2020 18:06:57 +0100 writes:
    >> 
    >> >>>>> Serguei Sokol
    >> >>>>>     on Wed, 19 Feb 2020 15:21:21 +0100 writes:
    >> 
    >> >> Hi,
    >> >> I was bitten by a little incoherence in dimnames assignment or may
    >> be I
    >> >> missed some point.
    >> >> Here is the case. If I assign row names via dimnames(a)[[1]], when
    >> >> nrow(a)=1 then an error is thrown. But if I do the same when
    >> nrow(a) > 1
    >> >> it's OK. Is one of this case works unexpectedly? Both? Neither?
    >> 
    >> >> a=as.matrix(1)
    >> >> dimnames(a)[[1]]="a" # error: 'dimnames' must be a list
    >> 
    >> >> aa=as.matrix(1:2)
    >> >> dimnames(aa)[[1]]=c("a", "b") # OK
    >> 
    >> >> In the second case, dimnames(aa) is not a list (like in the first
    >> case)
    >> >> but it works.
    >> >> I would expect that the both work or neither.
    >> 
    >> > I agree (even though I'm strongly advising people to use '<-'
    >> > instead of '=');
    >> > which in this case helps you get the name of the function really
    >> > involved:  It is  `dimnames<-`  (which is implemented in C
    >> > entirely, for matrices and other arrays).
    >> 
    >> As a matter of fact, I wrote too quickly, the culprit here is
    >> the  `[[<-`  function (rather than `dimnames<-`),
    >> which has a special "inconsistency" feature when used to "add to NULL";
    >> almost surely inherited from S,  but I now think we should
    >> consider dropping on the occasion of aiming for  R 4.0.0 :
    >> 
    >> It's documented in ?Extract  that  length 1  `[[.]]`-assignment works
    >> specially for NULL (and dimnames(.) are NULL here).
    >> 
    >> Note you need to read and understand one of the tougher sections
    >> in the official  'R Language Definition'  Manual,
    >> section -- 3.4.4 Subset assignment ---
    >> i.e.,
    >> 
    >> https://cran.r-project.org/doc/manuals/r-release/R-lang.html#Subset-assignment
    >> 
    >> notably this part:
    >> 
    >> Nesting of complex assignments is evaluated recursively
    >> 
    >> names(x)[3] <- "Three"
    >> 
    >> is equivalent to
    >> 
    >> `*tmp*` <- x
    >> x <- "names<-"(`*tmp*`, value="[<-"(names(`*tmp*`), 3, value="Three"))
    >> rm(`*tmp*`)
    >> 
    >> and then, apply this to our    dimnames(a)[[1]] <- "a"
    >> and so  replace
    >> 
    >> -  'names<-' by 'dimnames<-'
    >> -  '[<-'     by '[[<-'
    >> 
    >> ----------
    >> 
    >> Here is the rest of my analysis as valid R code
    >> {this is not new, Peter Dalgaard had explained this 10 or 20
    >> years ago to a mailing list audience IIRC} :
    >> 
    >> ## MM: The problematic behavior (bug ?) is in `[[<-`, not in `dimnames<-` :
    >> 
    >> `[[<-`(NULL, 1,   "a"     ) # gives  "a"  (*not* a list)
    >> `[[<-`(NULL, 1, c("a","b")) # gives list(c("a","b"))  !!
    >> 
    >> ##==> in C code: in  subassign.c  [ ~/R/D/r-devel/R/src/main/subassign.c ]
    >> ##==> function (~ 340 lines)
    >> ##            do_subassign2_dflt(SEXP call, SEXP op, SEXP args, SEXP rho)
    >> ## has
    >> "
    >> line svn r.  svn auth. c.o.d.e...
    >> ---- ------  --------- ----------------------------------------------
    >> 1741   4166      ihaka     if (isNull(x)) {
    >> 1742  45446     ripley         if (isNull(y)) {
    >> 1743  76166       luke             UNPROTECT(2); /* args, y */
    >> 1744   4166      ihaka             return x;
    >> 1745  45446     ripley         }
    >> 1746  35680    murdoch         if (length(y) == 1)
    >> 1747  68094       luke             x = allocVector(TYPEOF(y), 0);
    >> 1748  24954     ripley         else
    >> 1749  68094       luke             x = allocVector(VECSXP, 0);
    >> 1750   1820      ihaka     }
    >> ---- ------  --------- ----------------------------------------------
    >> "
    >> ## so clearly, in case the value is of length 1, no list is created .
    >> 
    >> ## For dimnames<-  Replacing NULL by list()  should be done in both cases
    >> , and then things work :
    >> `[[<-`(list(), 1,   "a"     ) # gives list( "a" )
    >> `[[<-`(list(), 1, c("a","b")) # gives list(c("a","b"))  !!
    >> 
    >> ## but the problem here is that  `[[<-` at this time in the game
    >> ## does *not* know that it comes from dimnames<- ....
    >> 
    >> ---------------
    >> 
    >> If we change the behavior  NULL--[[--assignment from
    >> 
    >> `[[<-`(NULL, 1, "a" ) # gives  "a"  (*not* a list)
    >> 
    >> to
    >> 
    >> `[[<-`(NULL, 1, "a" ) # gives  list("a")
    >> 
    >> 
    >> then we have more consistency there *and* your bug is fixed too.
    >> Of course, in other situations back-compatibility would be
    >> broken as well.
    >> 
    >> At the moment, I think we (R Core Team) should consider doing
    >> that here.
    >> 
    >> Martin
    >> 
    >> 
    >> 
    >> >> Your thoughts are welcome.
    >> 
    >> > I think we'd be happy if you report this formally on R's
    >> > bugzilla - https://bugs.r-project.org/ - as a bug.
    >> 
    --> https://www.r-project.org/bugs.html
    >> 
    >> >> From reading bugs.html you note that you should ask for
    >> >> an account there;
    >> > as I'm one of the people who get such request by e-mail,
    >> > in this case, I can do it directly (if you confirm you'd
    >> > want in a private e-mail).
    >> 
    >> >> Best, Serguei.
    >> 
    >> >> PS the same apply for dimnames(a)[[2]]<-.
    >> 
    >> > (of course)
    >> 
    >> > NB *and* importantly, the buglet is still in current
    >> > versions of R
    >> 
    >> > Best, Martin
    >> 
    >> >>> sessionInfo()
    >> >> R version 3.6.1 (2019-07-05) Platform:
    >> >> x86_64-pc-linux-gnu (64-bit) Running under: Mageia 7
    >> 
    >> >> Matrix products: default BLAS/LAPACK:
    >> >> /home/opt/OpenBLAS/lib/libopenblas_sandybridge-r0.3.6.so
    >> 
    >> >> locale:  [1] LC_CTYPE=fr_FR.UTF-8       LC_NUMERIC=C  [3]
    >> >> LC_TIME=fr_FR.UTF-8        LC_COLLATE=fr_FR.UTF-8  [5]
    >> >> LC_MONETARY=fr_FR.UTF-8    LC_MESSAGES=fr_FR.UTF-8  [7]
    >> >> LC_PAPER=fr_FR.UTF-8       LC_NAME=C  [9]
    >> >> LC_ADDRESS=C               LC_TELEPHONE=C [11]
    >> >> LC_MEASUREMENT=fr_FR.UTF-8 LC_IDENTIFICATION=C
    >> 
    >> >> attached base packages: [1] parallel  stats     graphics
    >> >> grDevices utils     datasets methods [8] base
    >> 
    >> >> other attached packages: [1] multbxxc_1.0.1
    >> >> rmumps_5.2.1-11 [3] arrApply_2.1
    >> >> RcppArmadillo_0.9.800.4.0 [5] Rcpp_1.0.3
    >> >> slam_0.1-47 [7] nnls_1.4
    >> 
    >> >> loaded via a namespace (and not attached): [1]
    >> >> compiler_3.6.1   tools_3.6.1      codetools_0.2-16
    >> 
    >> >> ______________________________________________
    >> >> R-devel at r-project.org mailing list
    >> >> https://stat.ethz.ch/mailman/listinfo/r-devel
    >> 
    >> > ______________________________________________
    >> > R-devel at r-project.org mailing list
    >> > https://stat.ethz.ch/mailman/listinfo/r-devel
    >> 
    >> ______________________________________________
    >> R-devel at r-project.org mailing list
    >> https://stat.ethz.ch/mailman/listinfo/r-devel
    >>


From m@ech|er @end|ng |rom @t@t@m@th@ethz@ch  Sat Feb 22 21:43:58 2020
From: m@ech|er @end|ng |rom @t@t@m@th@ethz@ch (Martin Maechler)
Date: Sat, 22 Feb 2020 21:43:58 +0100
Subject: [Rd] Change 77844 breaking pkgs [Re:  dimnames incoherence?]
In-Reply-To: <24145.32529.232208.410932@stat.math.ethz.ch>
References: <93c7f926-4a26-d874-9016-9103d08e21b1@insa-toulouse.fr>
 <24141.27441.451267.488389@stat.math.ethz.ch>
 <24141.41355.477434.400158@stat.math.ethz.ch>
 <CAF8bMcZi32on6xLzySL2VaJpUSX8J36+t8P12H6YWRd56cxFeQ@mail.gmail.com>
 <24145.32529.232208.410932@stat.math.ethz.ch>
Message-ID: <24145.37518.811461.726910@stat.math.ethz.ch>

>>>>> Martin Maechler 
>>>>>     on Sat, 22 Feb 2020 20:20:49 +0100 writes:

>>>>> William Dunlap 
>>>>>     on Fri, 21 Feb 2020 14:05:49 -0800 writes:

    >> If we change the behavior  NULL--[[--assignment from

    >> `[[<-`(NULL, 1, "a" ) # gives  "a"  (*not* a list)

    >> to

    >> `[[<-`(NULL, 1, "a" ) # gives  list("a")

    >> then we have more consistency there *and* your bug is fixed too.
    >> Of course, in other situations back-compatibility would be
    >> broken as well.

    >> Would that change the result of
    >> L <- list(One=1) ; L$Two[[1]] <- 2
    >> from the current list(One=1,Two=2) to list(One=1, Two=list(2))

    >> and the result of
    >> F <- 1L ; levels(F)[[1]] <- "one"
    >> from structure(1L, levels="one") to structure(1L, levels=list("one"))?

    > Yes (twice).

    > This is indeed what happens in current R-devel, as I had
    > committed the proposition above yesterday.
    > So R-devel (with svn rev >= 77844 )  does this :

    >> L <- list(One=1) ; L$Two[[1]] <- 2 ; dput(L)
    > list(One = 1, Two = list(2))
    >> F <- 1L ; levels(F)[[1]] <- "one" ; dput(F)
    > structure(1L, .Label = list("one"))
    >> 

    > but I find that still considerably more logical than current
    > (pre R-devel) R's

    >> L <- list(One=1) ; L$Two[[1]] <- 2 ; dput(L)
    > list(One = 1, Two = 2)
    >> L <- list(One=1) ; L$Two[[1]] <- 2:3 ; dput(L)
    > list(One = 1, Two = list(2:3))
    >> 
    >> F <- 1L ; levels(F)[[1]] <- "one" ; dput(F)
    > structure(1L, .Label = "one")
    >> F <- 1L ; levels(F)[[1]] <- c("one", "TWO") ; dput(F)
    > structure(1L, .Label = list(c("one", "TWO")))
    >> 


    >> This change would make L$Name[[1]] <- value act like L$Name$one <- value
    >> in cases when L did not have a component named "Name" and value
    >> had length 1.

    > (I don't entirely get what you mean, but)
    > indeed,
    > the  [[<-  assignments will be closer to corresponding $<-  assignments...
    > which I thought would be another good thing about the change.

    >> I have seen users use [[<- where [<- is more appropriate in cases like
    >> this.  Should there be a way to generate warnings about the change in
    >> behavior as you've done with other syntax changes?

    > Well, good question.
    > I'd guess one would get such warnings "all over the place",  and
    > if a warning is given only once per session it may not be
    > effective  ... also the warning be confusing to the 99.9% of R users who
    > don't even get what we are talking about here ;-)

    > Thank you for your comments.. I did not get too many.

Well, there's one situation where semi-experienced package
authors are bitten by the new R-devel behavior...

I'm seeing a few dozen CRAN packages breaking in R-devel >= r77884.

One case is exactly as you (Bill) mention above: people using
dd[[.]] <- ..   where they should use single [.].

In one package, I see an inefficient for loop over all rows of a
data frame 'dd'

for(i in 1:nrow(dd)) {

 ...

 dd$<nonexisting_column>[[i]] <-  <one character string>

}

This used to work -- as said quite inefficiently:
for i=1 it created the **full** data frame column  and then,
once the column exists, it presumably does assign one entry
after the other...

Now this code breaks (later!) in the package now, because the
new column ends up as a *list* of strings, instead of a vector
of strings.

I think there are quite a few such cases also in other CRAN
packages which now break with the latest R-devel.

Coming back to Bill Dunlap's question: Should we not warn here?
And now when our toplevel list is a data frame, maybe we should
warn indeed, if we can easily limit ourselves to such "bizarre"
ways of growng a data frame  ...


  dd $ foo [[i]] <- vv

<==>

  `*tmp*` <- dd
  dd <- `$<-`(`*tmp*`, value = `[[<-`(`*tmp*`$foo, i, vv))
  rm(`*tmp*`)
  
but then really we have the same problem as previously: The
 `[[<-`(NULL, i, vv)  part does not "know" anything about the
fact that we are in a data frame column creation context.

If the R package author had used  '[i]' instead of '[[i]]'
he|she would have been safe

(as they would be if they worked more efficiently and created
the whole variable as a vector and only then added it to the
data frame ... but then, it seems people want to perpetuate the
claim of R to be slow ... even if it's them who make R run
slowly ... ;-))


From @purd|e@@ @end|ng |rom gm@||@com  Sat Feb 22 22:21:35 2020
From: @purd|e@@ @end|ng |rom gm@||@com (Abby Spurdle)
Date: Sun, 23 Feb 2020 10:21:35 +1300
Subject: [Rd] R --interactive -e 'browser()'
In-Reply-To: <20200221052523.GA123924@localhost>
References: <20200221052523.GA123924@localhost>
Message-ID: <CAB8pepw97u1oVjC8ybMJqntuzrp=WV9oSZ0Jko7DMyzKdj6ZYw@mail.gmail.com>

Here's what I would expect:

In interactive mode, input is taken from the user (i.e. command line).
In non-interactive mode, input is taken from a text file (or equivalent).

What you're trying to do is run R in *non*-interactive mode, and call
the browser function.
This requires input to come from the user (i.e. command line) and from
a text file (or equivalent), at essentially the same time.

While doing fantasmoswankyblastik things with I/O is a lot of fun.
I don't think it's R's job to do that.


On Fri, Feb 21, 2020 at 6:25 PM <frederik at ofb.net> wrote:
>
> I would like to have a mode where I can run some R code in an executable script, like with Rscript, but interactively, so that e.g. 'browser()' works.
>
>  From the manual page it looks like this should work:
>
>      R --interactive -e 'source("script.R")'
>
> or we could shorten it to:
>
>      R --interactive -e 'browser()'
>
> However, it seems that --interactive causes -e to be ignored.
>
> And if I leave out --interactive, then R quits before the browser() function exits.
>
>  From an engineering standpoint it doesn't seem like it should be very difficult to tell the interactive REPL to pretend that a certain command was entered before everything else. Also, it would be useful to me to be able to debug R scripts using standard features like 'browser()'. Should I submit a feature request on Bugzilla, or maybe someone can advise me how to proceed?
>
> Thanks,
>
> Frederick
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From wdun|@p @end|ng |rom t|bco@com  Sat Feb 22 23:18:20 2020
From: wdun|@p @end|ng |rom t|bco@com (William Dunlap)
Date: Sat, 22 Feb 2020 14:18:20 -0800
Subject: [Rd] Change 77844 breaking pkgs [Re:  dimnames incoherence?]
In-Reply-To: <24145.37518.811461.726910@stat.math.ethz.ch>
References: <93c7f926-4a26-d874-9016-9103d08e21b1@insa-toulouse.fr>
 <24141.27441.451267.488389@stat.math.ethz.ch>
 <24141.41355.477434.400158@stat.math.ethz.ch>
 <CAF8bMcZi32on6xLzySL2VaJpUSX8J36+t8P12H6YWRd56cxFeQ@mail.gmail.com>
 <24145.32529.232208.410932@stat.math.ethz.ch>
 <24145.37518.811461.726910@stat.math.ethz.ch>
Message-ID: <CAF8bMcZhC6-SfMKxhaT=uEGOD4WKAC43x4oCqAg3ATabws-cFg@mail.gmail.com>

> but then, it seems people want to perpetuate the
> claim of R to be slow

More charitably, I think that the thinking may have been that since x[[i]]
gives you one element of x,
they should use x[[i]]<-value, for scalar i, to stick in one element.

Bill Dunlap
TIBCO Software
wdunlap tibco.com


On Sat, Feb 22, 2020 at 12:44 PM Martin Maechler <maechler at stat.math.ethz.ch>
wrote:

> >>>>> Martin Maechler
> >>>>>     on Sat, 22 Feb 2020 20:20:49 +0100 writes:
>
> >>>>> William Dunlap
> >>>>>     on Fri, 21 Feb 2020 14:05:49 -0800 writes:
>
>     >> If we change the behavior  NULL--[[--assignment from
>
>     >> `[[<-`(NULL, 1, "a" ) # gives  "a"  (*not* a list)
>
>     >> to
>
>     >> `[[<-`(NULL, 1, "a" ) # gives  list("a")
>
>     >> then we have more consistency there *and* your bug is fixed too.
>     >> Of course, in other situations back-compatibility would be
>     >> broken as well.
>
>     >> Would that change the result of
>     >> L <- list(One=1) ; L$Two[[1]] <- 2
>     >> from the current list(One=1,Two=2) to list(One=1, Two=list(2))
>
>     >> and the result of
>     >> F <- 1L ; levels(F)[[1]] <- "one"
>     >> from structure(1L, levels="one") to structure(1L,
> levels=list("one"))?
>
>     > Yes (twice).
>
>     > This is indeed what happens in current R-devel, as I had
>     > committed the proposition above yesterday.
>     > So R-devel (with svn rev >= 77844 )  does this :
>
>     >> L <- list(One=1) ; L$Two[[1]] <- 2 ; dput(L)
>     > list(One = 1, Two = list(2))
>     >> F <- 1L ; levels(F)[[1]] <- "one" ; dput(F)
>     > structure(1L, .Label = list("one"))
>     >>
>
>     > but I find that still considerably more logical than current
>     > (pre R-devel) R's
>
>     >> L <- list(One=1) ; L$Two[[1]] <- 2 ; dput(L)
>     > list(One = 1, Two = 2)
>     >> L <- list(One=1) ; L$Two[[1]] <- 2:3 ; dput(L)
>     > list(One = 1, Two = list(2:3))
>     >>
>     >> F <- 1L ; levels(F)[[1]] <- "one" ; dput(F)
>     > structure(1L, .Label = "one")
>     >> F <- 1L ; levels(F)[[1]] <- c("one", "TWO") ; dput(F)
>     > structure(1L, .Label = list(c("one", "TWO")))
>     >>
>
>
>     >> This change would make L$Name[[1]] <- value act like L$Name$one <-
> value
>     >> in cases when L did not have a component named "Name" and value
>     >> had length 1.
>
>     > (I don't entirely get what you mean, but)
>     > indeed,
>     > the  [[<-  assignments will be closer to corresponding $<-
> assignments...
>     > which I thought would be another good thing about the change.
>
>     >> I have seen users use [[<- where [<- is more appropriate in cases
> like
>     >> this.  Should there be a way to generate warnings about the change
> in
>     >> behavior as you've done with other syntax changes?
>
>     > Well, good question.
>     > I'd guess one would get such warnings "all over the place",  and
>     > if a warning is given only once per session it may not be
>     > effective  ... also the warning be confusing to the 99.9% of R users
> who
>     > don't even get what we are talking about here ;-)
>
>     > Thank you for your comments.. I did not get too many.
>
> Well, there's one situation where semi-experienced package
> authors are bitten by the new R-devel behavior...
>
> I'm seeing a few dozen CRAN packages breaking in R-devel >= r77884.
>
> One case is exactly as you (Bill) mention above: people using
> dd[[.]] <- ..   where they should use single [.].
>
> In one package, I see an inefficient for loop over all rows of a
> data frame 'dd'
>
> for(i in 1:nrow(dd)) {
>
>  ...
>
>  dd$<nonexisting_column>[[i]] <-  <one character string>
>
> }
>
> This used to work -- as said quite inefficiently:
> for i=1 it created the **full** data frame column  and then,
> once the column exists, it presumably does assign one entry
> after the other...
>
> Now this code breaks (later!) in the package now, because the
> new column ends up as a *list* of strings, instead of a vector
> of strings.
>
> I think there are quite a few such cases also in other CRAN
> packages which now break with the latest R-devel.
>
> Coming back to Bill Dunlap's question: Should we not warn here?
> And now when our toplevel list is a data frame, maybe we should
> warn indeed, if we can easily limit ourselves to such "bizarre"
> ways of growng a data frame  ...
>
>
>   dd $ foo [[i]] <- vv
>
> <==>
>
>   `*tmp*` <- dd
>   dd <- `$<-`(`*tmp*`, value = `[[<-`(`*tmp*`$foo, i, vv))
>   rm(`*tmp*`)
>
> but then really we have the same problem as previously: The
>  `[[<-`(NULL, i, vv)  part does not "know" anything about the
> fact that we are in a data frame column creation context.
>
> If the R package author had used  '[i]' instead of '[[i]]'
> he|she would have been safe
>
> (as they would be if they worked more efficiently and created
> the whole variable as a vector and only then added it to the
> data frame ... but then, it seems people want to perpetuate the
> claim of R to be slow ... even if it's them who make R run
> slowly ... ;-))
>
>

	[[alternative HTML version deleted]]


From @purd|e@@ @end|ng |rom gm@||@com  Sun Feb 23 01:19:14 2020
From: @purd|e@@ @end|ng |rom gm@||@com (Abby Spurdle)
Date: Sun, 23 Feb 2020 13:19:14 +1300
Subject: [Rd] R --interactive -e 'browser()'
In-Reply-To: <CAB8pepw97u1oVjC8ybMJqntuzrp=WV9oSZ0Jko7DMyzKdj6ZYw@mail.gmail.com>
References: <20200221052523.GA123924@localhost>
 <CAB8pepw97u1oVjC8ybMJqntuzrp=WV9oSZ0Jko7DMyzKdj6ZYw@mail.gmail.com>
Message-ID: <CAB8pepyuMPuKqudJFC08hVjvQbomiPebq=-_Z+NukZhvFg9Kow@mail.gmail.com>

I should add:

In theory, R could emulate the behavior of a compiled programming language.
(In which case, R could read input from the user, or use debugging
tools, when told to).
However, I can't see R-core supporting this approach in the foreseeable future.

A related topic is running R inside Java and C++ programs.
Something R-core is *un*enthusiastic about...???

I note that a number of people have requested the ability to run R
scripts like executable files (easily), or to run scripts with partial
interactivity.

It would be possible to create a special-purpose pty-based (or
pty-like) application specifically to run R, which could allow the
user to emulate the behavior of a compiled language (and do a few
other things), but I'm wondering if it's ethical to publish it...???


On Sun, Feb 23, 2020 at 10:21 AM Abby Spurdle <spurdle.a at gmail.com> wrote:
>
> Here's what I would expect:
>
> In interactive mode, input is taken from the user (i.e. command line).
> In non-interactive mode, input is taken from a text file (or equivalent).
>
> What you're trying to do is run R in *non*-interactive mode, and call
> the browser function.
> This requires input to come from the user (i.e. command line) and from
> a text file (or equivalent), at essentially the same time.
>
> While doing fantasmoswankyblastik things with I/O is a lot of fun.
> I don't think it's R's job to do that.
>
>
> On Fri, Feb 21, 2020 at 6:25 PM <frederik at ofb.net> wrote:
> >
> > I would like to have a mode where I can run some R code in an executable script, like with Rscript, but interactively, so that e.g. 'browser()' works.
> >
> >  From the manual page it looks like this should work:
> >
> >      R --interactive -e 'source("script.R")'
> >
> > or we could shorten it to:
> >
> >      R --interactive -e 'browser()'
> >
> > However, it seems that --interactive causes -e to be ignored.
> >
> > And if I leave out --interactive, then R quits before the browser() function exits.
> >
> >  From an engineering standpoint it doesn't seem like it should be very difficult to tell the interactive REPL to pretend that a certain command was entered before everything else. Also, it would be useful to me to be able to debug R scripts using standard features like 'browser()'. Should I submit a feature request on Bugzilla, or maybe someone can advise me how to proceed?
> >
> > Thanks,
> >
> > Frederick
> >
> > ______________________________________________
> > R-devel at r-project.org mailing list
> > https://stat.ethz.ch/mailman/listinfo/r-devel


From murdoch@dunc@n @end|ng |rom gm@||@com  Mon Feb 24 11:48:36 2020
From: murdoch@dunc@n @end|ng |rom gm@||@com (Duncan Murdoch)
Date: Mon, 24 Feb 2020 05:48:36 -0500
Subject: [Rd] Default for checkBuilt in update.packages() should be TRUE
Message-ID: <120efde7-f62e-40b9-0a5a-ee47f19a5178@gmail.com>

The checkBuilt argument to update.packages() currently defaults to 
FALSE.  This means that packages built and installed under R 3.6.2 will 
not be updated by R 4.0.0, and leads to confusion (e.g. 
https://stackoverflow.com/q/60356442/2554330, where tidyverse can't be 
updated because some of its many dependencies haven't been updated).

The default should be TRUE, even though this will lead to some packages 
being updated unnecessarily, because the cost of an unnecessary update 
is so much less than the cost of missing a necessary update.

Duncan Murdoch


From ||@t@ @end|ng |rom dewey@myzen@co@uk  Mon Feb 24 12:34:01 2020
From: ||@t@ @end|ng |rom dewey@myzen@co@uk (Michael Dewey)
Date: Mon, 24 Feb 2020 11:34:01 +0000
Subject: [Rd] Default for checkBuilt in update.packages() should be TRUE
In-Reply-To: <120efde7-f62e-40b9-0a5a-ee47f19a5178@gmail.com>
References: <120efde7-f62e-40b9-0a5a-ee47f19a5178@gmail.com>
Message-ID: <3508eb94-cdee-6a7b-c0f8-9be965f79c27@dewey.myzen.co.uk>

I suppose it is too late to change the name but checkBuilt does not 
immediately clarify to me what it does. It does not check whether I have 
built a package for instance. Having read Duncan's post at least I now 
know that I should set it as TRUE until the default is changed.

Michael

On 24/02/2020 10:48, Duncan Murdoch wrote:
> The checkBuilt argument to update.packages() currently defaults to 
> FALSE.? This means that packages built and installed under R 3.6.2 will 
> not be updated by R 4.0.0, and leads to confusion (e.g. 
> https://stackoverflow.com/q/60356442/2554330, where tidyverse can't be 
> updated because some of its many dependencies haven't been updated).
> 
> The default should be TRUE, even though this will lead to some packages 
> being updated unnecessarily, because the cost of an unnecessary update 
> is so much less than the cost of missing a necessary update.
> 
> Duncan Murdoch
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
> 

-- 
Michael
http://www.dewey.myzen.co.uk/home.html


From therne@u @end|ng |rom m@yo@edu  Mon Feb 24 14:55:56 2020
From: therne@u @end|ng |rom m@yo@edu (Therneau, Terry M., Ph.D.)
Date: Mon, 24 Feb 2020 07:55:56 -0600
Subject: [Rd] specials issue, a heads up
Message-ID: <28fddd$daa8mo@ironport10.mayo.edu>

I recently had a long argument wrt the survival package, namely that the following code 
didn't do what they expected, and so they reported it as a bug

 ? survival::coxph( survival::Surv(time, status) ~ age + sex + survival::strata(inst), 
data=lung)

a. The Google R style guide? recommends that one put :: everywhere
b. This breaks the recognition of cluster as a "special" in the terms function.

I've been stubborn and said that their misunderstanding of how formulas work is not my 
problem.?? But I'm sure that the issue will come up again, and multiple other packages 
will break.

A big problem is that the code runs, it just gives the wrong answer.

Suggestions?

Terry T.


	[[alternative HTML version deleted]]


From hugh@p@r@on@ge @end|ng |rom gm@||@com  Mon Feb 24 18:01:18 2020
From: hugh@p@r@on@ge @end|ng |rom gm@||@com (Hugh Parsonage)
Date: Tue, 25 Feb 2020 04:01:18 +1100
Subject: [Rd] specials issue, a heads up
In-Reply-To: <28fddd$daa8mo@ironport10.mayo.edu>
References: <28fddd$daa8mo@ironport10.mayo.edu>
Message-ID: <CAJmOi+OKdriCGs0Q0MfydG-Aj8evHHeft+p5vrdvKg-xhyOwvQ@mail.gmail.com>

I mean if the person filing the bug regards style as more important than
the truth of how R treats formulas then they?re literally talking in
another language.

I strongly recommend you do nothing or at most make a note in the
documentation addressing this. Your time is too valuable.

On Tue, 25 Feb 2020 at 12:56 am, Therneau, Terry M., Ph.D. via R-devel <
r-devel at r-project.org> wrote:

> I recently had a long argument wrt the survival package, namely that the
> following code
> didn't do what they expected, and so they reported it as a bug
>
>    survival::coxph( survival::Surv(time, status) ~ age + sex +
> survival::strata(inst),
> data=lung)
>
> a. The Google R style guide  recommends that one put :: everywhere
> b. This breaks the recognition of cluster as a "special" in the terms
> function.
>
> I've been stubborn and said that their misunderstanding of how formulas
> work is not my
> problem.   But I'm sure that the issue will come up again, and multiple
> other packages
> will break.
>
> A big problem is that the code runs, it just gives the wrong answer.
>
> Suggestions?
>
> Terry T.
>
>
>         [[alternative HTML version deleted]]
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>

	[[alternative HTML version deleted]]


From bbo|ker @end|ng |rom gm@||@com  Mon Feb 24 18:26:39 2020
From: bbo|ker @end|ng |rom gm@||@com (Ben Bolker)
Date: Mon, 24 Feb 2020 12:26:39 -0500
Subject: [Rd] specials issue, a heads up
In-Reply-To: <CAJmOi+OKdriCGs0Q0MfydG-Aj8evHHeft+p5vrdvKg-xhyOwvQ@mail.gmail.com>
References: <28fddd$daa8mo@ironport10.mayo.edu>
 <CAJmOi+OKdriCGs0Q0MfydG-Aj8evHHeft+p5vrdvKg-xhyOwvQ@mail.gmail.com>
Message-ID: <CABghstQ6r3peDfW=C-C5kfs=S1AZjVr2BWosaVgpNpSFRmtkNQ@mail.gmail.com>

In the long run, coming up with a way to parse specials in formulas
that is both clean and robust is a good idea - annoying users are a
little bit like CRAN maintainers in this respect. I think I would
probably do this by testing identical(eval(extracted_head),
survival::Surv) - but this has lots of potential annoyances (what if
extracted_head is a symbol that can't be found in any attached
environment?  Do we have to start with if
(length(find(deparse(extracted_head))>0) ?

In the short run, a clear note in the documentation seems entirely sufficient.

On Mon, Feb 24, 2020 at 12:01 PM Hugh Parsonage
<hugh.parsonage at gmail.com> wrote:
>
> I mean if the person filing the bug regards style as more important than
> the truth of how R treats formulas then they?re literally talking in
> another language.
>
> I strongly recommend you do nothing or at most make a note in the
> documentation addressing this. Your time is too valuable.
>
> On Tue, 25 Feb 2020 at 12:56 am, Therneau, Terry M., Ph.D. via R-devel <
> r-devel at r-project.org> wrote:
>
> > I recently had a long argument wrt the survival package, namely that the
> > following code
> > didn't do what they expected, and so they reported it as a bug
> >
> >    survival::coxph( survival::Surv(time, status) ~ age + sex +
> > survival::strata(inst),
> > data=lung)
> >
> > a. The Google R style guide  recommends that one put :: everywhere
> > b. This breaks the recognition of cluster as a "special" in the terms
> > function.
> >
> > I've been stubborn and said that their misunderstanding of how formulas
> > work is not my
> > problem.   But I'm sure that the issue will come up again, and multiple
> > other packages
> > will break.
> >
> > A big problem is that the code runs, it just gives the wrong answer.
> >
> > Suggestions?
> >
> > Terry T.
> >
> >
> >         [[alternative HTML version deleted]]
> >
> > ______________________________________________
> > R-devel at r-project.org mailing list
> > https://stat.ethz.ch/mailman/listinfo/r-devel
> >
>
>         [[alternative HTML version deleted]]
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From murdoch@dunc@n @end|ng |rom gm@||@com  Mon Feb 24 19:21:55 2020
From: murdoch@dunc@n @end|ng |rom gm@||@com (Duncan Murdoch)
Date: Mon, 24 Feb 2020 13:21:55 -0500
Subject: [Rd] specials issue, a heads up
In-Reply-To: <28fddd$daa8mo@ironport10.mayo.edu>
References: <28fddd$daa8mo@ironport10.mayo.edu>
Message-ID: <872564ec-c60e-3f9f-b5c4-ef7aa6bbb194@gmail.com>

On 24/02/2020 8:55 a.m., Therneau, Terry M., Ph.D. via R-devel wrote:
> I recently had a long argument wrt the survival package, namely that the following code
> didn't do what they expected, and so they reported it as a bug
> 
>   ? survival::coxph( survival::Surv(time, status) ~ age + sex + survival::strata(inst),
> data=lung)
> 
> a. The Google R style guide? recommends that one put :: everywhere
> b. This breaks the recognition of cluster as a "special" in the terms function.
> 
> I've been stubborn and said that their misunderstanding of how formulas work is not my
> problem.?? But I'm sure that the issue will come up again, and multiple other packages
> will break.
> 
> A big problem is that the code runs, it just gives the wrong answer.
> 
> Suggestions?

I don't know how widely used survival::strata is versus the special 
strata (or cluster, or other specials).  If you were just introducing 
this now, I'd try to make sure that only one of those worked:  don't 
have any functions matching the names of specials, or have functions 
that generate an error if you call them.  I did that in the much less 
widely used "tables" package, e.g. Heading() has special interpretation, 
and the Heading function is defined as

Heading <- function(name = NULL, override = TRUE,
                     character.only = FALSE,
		    nearData = TRUE)
     stop("This is a pseudo-function, not meant to be called.")

However, survival has far more users than tables does, so changing the 
name of your special functions or the corresponding regular functions 
could be a huge headache.

Perhaps there's a way to set a flag before evaluating the function in 
the formula, and generate a warning if survival::strata is called when 
it looks like the special function is intended.

Duncan Murdoch


From pd@|gd @end|ng |rom gm@||@com  Mon Feb 24 20:53:14 2020
From: pd@|gd @end|ng |rom gm@||@com (peter dalgaard)
Date: Mon, 24 Feb 2020 20:53:14 +0100
Subject: [Rd] specials issue, a heads up
In-Reply-To: <872564ec-c60e-3f9f-b5c4-ef7aa6bbb194@gmail.com>
References: <28fddd$daa8mo@ironport10.mayo.edu>
 <872564ec-c60e-3f9f-b5c4-ef7aa6bbb194@gmail.com>
Message-ID: <58B87450-AFC2-49C5-8C21-59EBA1A4A308@gmail.com>

Notice that the stats package contains the same issue: For some reason it defines an offset() function (for no particular reason, afaics) which just returns its argument. So

> x <- rnorm(10)
> y <- z <- 1:10
> lm(x~y+offset(z))

Call:
lm(formula = x ~ y + offset(z))

Coefficients:
(Intercept)            y  
     0.8253      -1.0840  

> lm(x~y+stats::offset(z))

Call:
lm(formula = x ~ y + stats::offset(z))

Coefficients:
     (Intercept)                 y  stats::offset(z)  
         0.82531          -0.08397                NA 

So I'm inclined to say that formulas are formulas and functions using formulas interpret functions and operators at their own convenience. You also deserve what you get from

> lm(x~base::`+`(y,z))

Call:
lm(formula = x ~ base::`+`(y, z))

Coefficients:
    (Intercept)  base::`+`(y, z)  
        0.82531         -0.04198  

-pd 

> On 24 Feb 2020, at 19:21 , Duncan Murdoch <murdoch.duncan at gmail.com> wrote:
> 
> On 24/02/2020 8:55 a.m., Therneau, Terry M., Ph.D. via R-devel wrote:
>> I recently had a long argument wrt the survival package, namely that the following code
>> didn't do what they expected, and so they reported it as a bug
>>    survival::coxph( survival::Surv(time, status) ~ age + sex + survival::strata(inst),
>> data=lung)
>> a. The Google R style guide  recommends that one put :: everywhere
>> b. This breaks the recognition of cluster as a "special" in the terms function.
>> I've been stubborn and said that their misunderstanding of how formulas work is not my
>> problem.   But I'm sure that the issue will come up again, and multiple other packages
>> will break.
>> A big problem is that the code runs, it just gives the wrong answer.
>> Suggestions?
> 
> I don't know how widely used survival::strata is versus the special strata (or cluster, or other specials).  If you were just introducing this now, I'd try to make sure that only one of those worked: don't have any functions matching the names of specials, or have functions that generate an error if you call them.  I did that in the much less widely used "tables" package, e.g. Heading() has special interpretation, and the Heading function is defined as
> 
> Heading <- function(name = NULL, override = TRUE,
>                    character.only = FALSE,
> 		    nearData = TRUE)
>    stop("This is a pseudo-function, not meant to be called.")
> 
> However, survival has far more users than tables does, so changing the name of your special functions or the corresponding regular functions could be a huge headache.
> 
> Perhaps there's a way to set a flag before evaluating the function in the formula, and generate a warning if survival::strata is called when it looks like the special function is intended.
> 
> Duncan Murdoch
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel

-- 
Peter Dalgaard, Professor,
Center for Statistics, Copenhagen Business School
Solbjerg Plads 3, 2000 Frederiksberg, Denmark
Phone: (+45)38153501
Office: A 4.23
Email: pd.mes at cbs.dk  Priv: PDalgd at gmail.com


From h@nk|n@rob|n @end|ng |rom gm@||@com  Mon Feb 24 20:54:04 2020
From: h@nk|n@rob|n @end|ng |rom gm@||@com (robin hankin)
Date: Tue, 25 Feb 2020 08:54:04 +1300
Subject: [Rd] specials issue, a heads up
In-Reply-To: <28fddd$daa8mo@ironport10.mayo.edu>
References: <28fddd$daa8mo@ironport10.mayo.edu>
Message-ID: <CAHHjBM7dV3iXQ4YtMqFiMP9Mv6hwmXd9B8uEaDujBLYCRF-L_w@mail.gmail.com>

Terry, speaking as a package author I would say that the package is the
primary unit of organisation of R functionality, and package considerations
should trump R style considerations.  Packages should be self-contained as
far as possible.

Having said that, many of my own packages use---shall we say---distinct
idiom which is easy to misunderstand.  My suggestion would be to document
the misunderstanding. Add the survival::coxph() expression you quote above
to coxph.Rd,  maybe under a \warning{} section, explaining both a
reasonable but wrong, and the correct way, to parse such constructions.

Best wishes

Robin






On Tue, Feb 25, 2020 at 2:56 AM Therneau, Terry M., Ph.D. via R-devel <
r-devel at r-project.org> wrote:

> I recently had a long argument wrt the survival package, namely that the
> following code
> didn't do what they expected, and so they reported it as a bug
>
>    survival::coxph( survival::Surv(time, status) ~ age + sex +
> survival::strata(inst),
> data=lung)
>
> a. The Google R style guide  recommends that one put :: everywhere
> b. This breaks the recognition of cluster as a "special" in the terms
> function.
>
> I've been stubborn and said that their misunderstanding of how formulas
> work is not my
> problem.   But I'm sure that the issue will come up again, and multiple
> other packages
> will break.
>
> A big problem is that the code runs, it just gives the wrong answer.
>
> Suggestions?
>
> Terry T.
>
>
>         [[alternative HTML version deleted]]
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>

	[[alternative HTML version deleted]]


From pd@|gd @end|ng |rom gm@||@com  Mon Feb 24 20:57:59 2020
From: pd@|gd @end|ng |rom gm@||@com (peter dalgaard)
Date: Mon, 24 Feb 2020 20:57:59 +0100
Subject: [Rd] specials issue, a heads up
In-Reply-To: <CABghstQ6r3peDfW=C-C5kfs=S1AZjVr2BWosaVgpNpSFRmtkNQ@mail.gmail.com>
References: <28fddd$daa8mo@ironport10.mayo.edu>
 <CAJmOi+OKdriCGs0Q0MfydG-Aj8evHHeft+p5vrdvKg-xhyOwvQ@mail.gmail.com>
 <CABghstQ6r3peDfW=C-C5kfs=S1AZjVr2BWosaVgpNpSFRmtkNQ@mail.gmail.com>
Message-ID: <5A89E78A-1475-465F-97B2-5DA0536C1642@gmail.com>

<musing>
For some reason, I can't read this without thinking of the tech support guy going

"No, it is http:// ... aitch - tee - tee - pee - colon - AS IN WHERE YOUR HEAD IS - slash - slash ..."
</musing> 

-pd

> On 24 Feb 2020, at 18:26 , Ben Bolker <bbolker at gmail.com> wrote:
> 
> In the long run, coming up with a way to parse specials in formulas
> that is both clean and robust is a good idea - annoying users are a
> little bit like CRAN maintainers in this respect. I think I would
> probably do this by testing identical(eval(extracted_head),
> survival::Surv) - but this has lots of potential annoyances (what if
> extracted_head is a symbol that can't be found in any attached
> environment?  Do we have to start with if
> (length(find(deparse(extracted_head))>0) ?
> 
> In the short run, a clear note in the documentation seems entirely sufficient.
> 
> On Mon, Feb 24, 2020 at 12:01 PM Hugh Parsonage
> <hugh.parsonage at gmail.com> wrote:
>> 
>> I mean if the person filing the bug regards style as more important than
>> the truth of how R treats formulas then they?re literally talking in
>> another language.
>> 
>> I strongly recommend you do nothing or at most make a note in the
>> documentation addressing this. Your time is too valuable.
>> 
>> On Tue, 25 Feb 2020 at 12:56 am, Therneau, Terry M., Ph.D. via R-devel <
>> r-devel at r-project.org> wrote:
>> 
>>> I recently had a long argument wrt the survival package, namely that the
>>> following code
>>> didn't do what they expected, and so they reported it as a bug
>>> 
>>>   survival::coxph( survival::Surv(time, status) ~ age + sex +
>>> survival::strata(inst),
>>> data=lung)
>>> 
>>> a. The Google R style guide  recommends that one put :: everywhere
>>> b. This breaks the recognition of cluster as a "special" in the terms
>>> function.
>>> 
>>> I've been stubborn and said that their misunderstanding of how formulas
>>> work is not my
>>> problem.   But I'm sure that the issue will come up again, and multiple
>>> other packages
>>> will break.
>>> 
>>> A big problem is that the code runs, it just gives the wrong answer.
>>> 
>>> Suggestions?
>>> 
>>> Terry T.
>>> 
>>> 
>>>        [[alternative HTML version deleted]]
>>> 
>>> ______________________________________________
>>> R-devel at r-project.org mailing list
>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>> 
>> 
>>        [[alternative HTML version deleted]]
>> 
>> ______________________________________________
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel

-- 
Peter Dalgaard, Professor,
Center for Statistics, Copenhagen Business School
Solbjerg Plads 3, 2000 Frederiksberg, Denmark
Phone: (+45)38153501
Office: A 4.23
Email: pd.mes at cbs.dk  Priv: PDalgd at gmail.com


From therne@u @end|ng |rom m@yo@edu  Mon Feb 24 21:46:38 2020
From: therne@u @end|ng |rom m@yo@edu (Therneau, Terry M., Ph.D.)
Date: Mon, 24 Feb 2020 14:46:38 -0600
Subject: [Rd] specials issue, a heads up
In-Reply-To: <872564ec-c60e-3f9f-b5c4-ef7aa6bbb194@gmail.com>
References: <28fddd$daa8mo@ironport10.mayo.edu>
 <872564ec-c60e-3f9f-b5c4-ef7aa6bbb194@gmail.com>
Message-ID: <28fddd$daf3or@ironport10.mayo.edu>

Thanks to all who commented.?? In some defense of the person who reported the "bug", it 
appeared to be a company policy from above, influenced by the fact that they had been 
often burned by not using :: when multiple packages use the same symbol.

Some further technical detail:? coxph has 3 specials: strata, cluster, and tt.? For the 
last of these I took a different route, and did not make it an exported symbol in the 
survival package. (I try to be smarter over time).? Instead, coxph first looks at the 
formula.? If that formula contains tt() then it creates an envionment that contains the 
function? "tt <- funciton(x) x", whose parent is the environment of the formula, changes 
the formula's environment to this, and then proceeds as usual.??? As a curiousity, I'm 
going to change cluster to the same form, and them run my script that executes R CMD? 
check on every package that has surivval as depend/import/suggest and see how many 
break.?? I'm guessing I'll find several that used cluster for their own ends. The strata 
function will be worse.

Duncan -- to use your approach, I'd instead hack the formula before calling model.frame, 
so that it does not try to call cluster?

Another approach I tried was not exporting cluster(), but that fails when model.frame 
tries to call it.


Terry


On 2/24/20 12:21 PM, Duncan Murdoch wrote:
> On 24/02/2020 8:55 a.m., Therneau, Terry M., Ph.D. via R-devel wrote:
>> I recently had a long argument wrt the survival package, namely that the following code
>> didn't do what they expected, and so they reported it as a bug
>>
>> ? ? survival::coxph( survival::Surv(time, status) ~ age + sex + survival::strata(inst),
>> data=lung)
>>
>> a. The Google R style guide? recommends that one put :: everywhere
>> b. This breaks the recognition of cluster as a "special" in the terms function.
>>
>> I've been stubborn and said that their misunderstanding of how formulas work is not my
>> problem.?? But I'm sure that the issue will come up again, and multiple other packages
>> will break.
>>
>> A big problem is that the code runs, it just gives the wrong answer.
>>
>> Suggestions?
>
> I don't know how widely used survival::strata is versus the special strata (or cluster, 
> or other specials).? If you were just introducing this now, I'd try to make sure that 
> only one of those worked:? don't have any functions matching the names of specials, or 
> have functions that generate an error if you call them.? I did that in the much less 
> widely used "tables" package, e.g. Heading() has special interpretation, and the Heading 
> function is defined as
>
> Heading <- function(name = NULL, override = TRUE,
> ??????????????????? character.only = FALSE,
> ??????????? nearData = TRUE)
> ??? stop("This is a pseudo-function, not meant to be called.")
>
> However, survival has far more users than tables does, so changing the name of your 
> special functions or the corresponding regular functions could be a huge headache.
>
> Perhaps there's a way to set a flag before evaluating the function in the formula, and 
> generate a warning if survival::strata is called when it looks like the special function 
> is intended.
>
> Duncan Murdoch 


	[[alternative HTML version deleted]]


From @tep@n@@|nde|@r @end|ng |rom or@c|e@com  Tue Feb 25 17:38:42 2020
From: @tep@n@@|nde|@r @end|ng |rom or@c|e@com (Stepan)
Date: Tue, 25 Feb 2020 17:38:42 +0100
Subject: [Rd] RIOT 2020
Message-ID: <c5c63474-132c-32c3-905a-c53ab9782552@oracle.com>

I hope you don?t mind us using this mailing list for a small 
advertisement, but we think it is most relevant for this group:

We'd like to invite you to RIOT 2020 - the 5rd workshop on R 
Implementation, Optimization and Tooling [1]. It will take place 
co-located with, and during, useR! 2020 in St. Louis on July 8th. RIOT 
is an excellent venue for deep technical discussions about R 
implementations, tools, optimizations and R extension, and will be very 
interesting for anyone interested in what?s under the hood of R.

Regards,
Stepan Sindelar, Lukas Stadler (Oracle Labs), Jan Vitek (Northeastern), 
Alexander Bertram (BeDataDriven)

[1] http://riotworkshop.github.io/


From |@wrence@m|ch@e| @end|ng |rom gene@com  Tue Feb 25 21:39:31 2020
From: |@wrence@m|ch@e| @end|ng |rom gene@com (Michael Lawrence)
Date: Tue, 25 Feb 2020 12:39:31 -0800
Subject: [Rd] 
 Possible Regression in setClassUnion between 3.5.0 and 3.6.0
In-Reply-To: <CAOQ5Nyf25-Hj4gQ=nBS+7M8OPdPWgeL7w7ykKj+D6_Egc7EMaw@mail.gmail.com>
References: <CAHdfS95sfC+7RRYcztqDKeyJwBukjJLHuRroQMfU7yCkhVyMDg@mail.gmail.com>
 <5e408873-eb6a-8209-aac6-f78b7f1d0bb1@gmail.com>
 <CAOQ5Nyf25-Hj4gQ=nBS+7M8OPdPWgeL7w7ykKj+D6_Egc7EMaw@mail.gmail.com>
Message-ID: <CAOQ5NyeUBd4szqHq7Oo05BBEbgwM0wvZGqpoENuFOWnuregksw@mail.gmail.com>

This seems to work as expected (returning "hi!") in R-devel, but there
have been so many destabilizing changes to methods that it would be
tough to port this to release. Probably should just wait for 4.0.

Michael

On Tue, Feb 18, 2020 at 8:00 PM Michael Lawrence <michafla at gene.com> wrote:
>
> Thanks, I'll look into it.
>
> On Tue, Feb 18, 2020 at 8:32 AM Ezra Tucker <ezztucker at gmail.com> wrote:
> >
> > Hi Robert,
> >
> > This looks like a bug to me (tested in R 3.6.2 on Windows), f(new("a"))
> > should return "hi!". I'll add that this DOES work properly in 3.6.1
> > which leads me to suspect this could be due to the subtle change in the
> > way method dispatch was performed to fix a different bug, in 3.6.2. Can
> > anybody else confirm that?
> >
> >
> > On 2/18/2020 9:32 AM, Robert Harlow wrote:
> > > I am trying to create a class union of class unions to facilitate method
> > > dispatch. When I execute code in the global environment, everything acts as
> > > expected, however when I put the same code in the context of a package,
> > > selectMethod can no longer find the correct method. This first block below
> > > puts the code in the context of a package:
> > >
> > > fn <- "codefile.R"
> > > writeLines(
> > >      c(
> > >          "setClass('x', slots = list(slot ='character'))",
> > >          "setClass('y', slots = list(slot ='character'))",
> > >          "setClass('a', slots = list(slot ='character'))",
> > >          "setClass('b', slots = list(slot ='character'))",
> > >          "setClassUnion('xy', c('x', 'y'))",
> > >          "setClassUnion('ab', c('a', 'b'))",
> > >          "setClassUnion('xyab', c('xy', 'ab'))",
> > >          "setGeneric('f', function(object, ...) standardGeneric('f'))",
> > >          "setMethod('f', 'xyab', function(object, ...) print('hi!'))"
> > >      ),
> > >      con = fn
> > > )
> > > package.skeleton(code_files = "codefile.R")
> > > system("rm -rf anRpackage/man")
> > > system("R CMD INSTALL anRpackage")
> > > library(anRpackage)
> > > ## fails in R 3.6.2, but works in R 3.5.0
> > > f(new("a"))
> > >
> > > Next, if a fresh R 3.6.2 session is started and I execute the following at
> > > the prompt, method dispatch works as expected.
> > >
> > > setClass("x", slots = list(slot ="character"))
> > > setClass("y", slots = list(slot ="character"))
> > > setClass("a", slots = list(slot ="character"))
> > > setClass("b", slots = list(slot ="character"))
> > > setClassUnion("xy", c("x", "y"))
> > > setClassUnion("ab", c("a", "b"))
> > > setClassUnion("xyab", c("xy", "ab"))
> > > setGeneric("f", function(object, ...) standardGeneric("f"))
> > > setMethod("f", "xyab", function(object, ...) print("hi!"))
> > > ## print's "hi!" as expected
> > > f(new("a"))
> > >
> > > I have also posted to stack overflow here:
> > > https://stackoverflow.com/questions/60264786/r-s4-class-union-of-class-unions?noredirect=1#comment106627883_60264786,
> > > (the example in this note removes devtools to make the environment
> > > cleaner).
> > >
> > > Interestingly, the issue only seems to arise when there are > 1 layer
> > > of the class union. E.g. if I were to setMethod on "ab" instead of
> > > "xyab", method dispatch would work as expected. I am not posting a bug
> > > yet as it is still unclear to me if I am doing something incorrect.
> > >
> > > My sessionInfo() is :
> > >
> > > R version 3.6.2 (2019-12-12)
> > > Platform: x86_64-pc-linux-gnu (64-bit)
> > > Running under: Ubuntu 18.04.3 LTS
> > >
> > > Matrix products: default
> > > BLAS:   /usr/local/lib/R/lib/libRblas.so
> > > LAPACK: /usr/local/lib/R/lib/libRlapack.so
> > >
> > > locale:
> > >   [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C
> > >   [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8
> > >   [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8
> > >   [7] LC_PAPER=en_US.UTF-8       LC_NAME=C
> > >   [9] LC_ADDRESS=C               LC_TELEPHONE=C
> > > [11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C
> > >
> > > attached base packages:
> > > [1] stats     graphics  grDevices utils     datasets  methods   base
> > >
> > > other attached packages:
> > > [1] anRpackage_1.0
> > >
> > > loaded via a namespace (and not attached):
> > > [1] compiler_3.6.2 tools_3.6.2
> > >
> > > Thanks in advance for the help!
> > >
> > >       [[alternative HTML version deleted]]
> > >
> > > ______________________________________________
> > > R-devel at r-project.org mailing list
> > > https://stat.ethz.ch/mailman/listinfo/r-devel
> >
> > ______________________________________________
> > R-devel at r-project.org mailing list
> > https://stat.ethz.ch/mailman/listinfo/r-devel
>
>
>
> --
> Michael Lawrence
> Senior Scientist, Bioinformatics and Computational Biology
> Genentech, A Member of the Roche Group
> Office +1 (650) 225-7760
> michafla at gene.com
>
> Join Genentech on LinkedIn | Twitter | Facebook | Instagram | YouTube



-- 
Michael Lawrence
Senior Scientist, Bioinformatics and Computational Biology
Genentech, A Member of the Roche Group
Office +1 (650) 225-7760
michafla at gene.com

Join Genentech on LinkedIn | Twitter | Facebook | Instagram | YouTube


From rh@r|ow86 @end|ng |rom gm@||@com  Wed Feb 26 02:34:04 2020
From: rh@r|ow86 @end|ng |rom gm@||@com (Robert Harlow)
Date: Tue, 25 Feb 2020 20:34:04 -0500
Subject: [Rd] 
 Possible Regression in setClassUnion between 3.5.0 and 3.6.0
In-Reply-To: <CAOQ5NyeUBd4szqHq7Oo05BBEbgwM0wvZGqpoENuFOWnuregksw@mail.gmail.com>
References: <CAHdfS95sfC+7RRYcztqDKeyJwBukjJLHuRroQMfU7yCkhVyMDg@mail.gmail.com>
 <5e408873-eb6a-8209-aac6-f78b7f1d0bb1@gmail.com>
 <CAOQ5Nyf25-Hj4gQ=nBS+7M8OPdPWgeL7w7ykKj+D6_Egc7EMaw@mail.gmail.com>
 <CAOQ5NyeUBd4szqHq7Oo05BBEbgwM0wvZGqpoENuFOWnuregksw@mail.gmail.com>
Message-ID: <CAHdfS94BnHGr7zTQZsT1DpnHw+30CEK7jHgHJ+6B=Rh1nwT_cA@mail.gmail.com>

Okay - that makes sense and thanks for looking into this! As an aside, from
R-devel's perspective would you say methods are stabilizing again or do you
foresee a lot of changes coming in the 4.* series?

On Tue, Feb 25, 2020 at 3:39 PM Michael Lawrence via R-devel <
r-devel at r-project.org> wrote:

> This seems to work as expected (returning "hi!") in R-devel, but there
> have been so many destabilizing changes to methods that it would be
> tough to port this to release. Probably should just wait for 4.0.
>
> Michael
>
> On Tue, Feb 18, 2020 at 8:00 PM Michael Lawrence <michafla at gene.com>
> wrote:
> >
> > Thanks, I'll look into it.
> >
> > On Tue, Feb 18, 2020 at 8:32 AM Ezra Tucker <ezztucker at gmail.com> wrote:
> > >
> > > Hi Robert,
> > >
> > > This looks like a bug to me (tested in R 3.6.2 on Windows), f(new("a"))
> > > should return "hi!". I'll add that this DOES work properly in 3.6.1
> > > which leads me to suspect this could be due to the subtle change in the
> > > way method dispatch was performed to fix a different bug, in 3.6.2. Can
> > > anybody else confirm that?
> > >
> > >
> > > On 2/18/2020 9:32 AM, Robert Harlow wrote:
> > > > I am trying to create a class union of class unions to facilitate
> method
> > > > dispatch. When I execute code in the global environment, everything
> acts as
> > > > expected, however when I put the same code in the context of a
> package,
> > > > selectMethod can no longer find the correct method. This first block
> below
> > > > puts the code in the context of a package:
> > > >
> > > > fn <- "codefile.R"
> > > > writeLines(
> > > >      c(
> > > >          "setClass('x', slots = list(slot ='character'))",
> > > >          "setClass('y', slots = list(slot ='character'))",
> > > >          "setClass('a', slots = list(slot ='character'))",
> > > >          "setClass('b', slots = list(slot ='character'))",
> > > >          "setClassUnion('xy', c('x', 'y'))",
> > > >          "setClassUnion('ab', c('a', 'b'))",
> > > >          "setClassUnion('xyab', c('xy', 'ab'))",
> > > >          "setGeneric('f', function(object, ...)
> standardGeneric('f'))",
> > > >          "setMethod('f', 'xyab', function(object, ...) print('hi!'))"
> > > >      ),
> > > >      con = fn
> > > > )
> > > > package.skeleton(code_files = "codefile.R")
> > > > system("rm -rf anRpackage/man")
> > > > system("R CMD INSTALL anRpackage")
> > > > library(anRpackage)
> > > > ## fails in R 3.6.2, but works in R 3.5.0
> > > > f(new("a"))
> > > >
> > > > Next, if a fresh R 3.6.2 session is started and I execute the
> following at
> > > > the prompt, method dispatch works as expected.
> > > >
> > > > setClass("x", slots = list(slot ="character"))
> > > > setClass("y", slots = list(slot ="character"))
> > > > setClass("a", slots = list(slot ="character"))
> > > > setClass("b", slots = list(slot ="character"))
> > > > setClassUnion("xy", c("x", "y"))
> > > > setClassUnion("ab", c("a", "b"))
> > > > setClassUnion("xyab", c("xy", "ab"))
> > > > setGeneric("f", function(object, ...) standardGeneric("f"))
> > > > setMethod("f", "xyab", function(object, ...) print("hi!"))
> > > > ## print's "hi!" as expected
> > > > f(new("a"))
> > > >
> > > > I have also posted to stack overflow here:
> > > >
> https://stackoverflow.com/questions/60264786/r-s4-class-union-of-class-unions?noredirect=1#comment106627883_60264786
> ,
> > > > (the example in this note removes devtools to make the environment
> > > > cleaner).
> > > >
> > > > Interestingly, the issue only seems to arise when there are > 1 layer
> > > > of the class union. E.g. if I were to setMethod on "ab" instead of
> > > > "xyab", method dispatch would work as expected. I am not posting a
> bug
> > > > yet as it is still unclear to me if I am doing something incorrect.
> > > >
> > > > My sessionInfo() is :
> > > >
> > > > R version 3.6.2 (2019-12-12)
> > > > Platform: x86_64-pc-linux-gnu (64-bit)
> > > > Running under: Ubuntu 18.04.3 LTS
> > > >
> > > > Matrix products: default
> > > > BLAS:   /usr/local/lib/R/lib/libRblas.so
> > > > LAPACK: /usr/local/lib/R/lib/libRlapack.so
> > > >
> > > > locale:
> > > >   [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C
> > > >   [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8
> > > >   [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8
> > > >   [7] LC_PAPER=en_US.UTF-8       LC_NAME=C
> > > >   [9] LC_ADDRESS=C               LC_TELEPHONE=C
> > > > [11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C
> > > >
> > > > attached base packages:
> > > > [1] stats     graphics  grDevices utils     datasets  methods   base
> > > >
> > > > other attached packages:
> > > > [1] anRpackage_1.0
> > > >
> > > > loaded via a namespace (and not attached):
> > > > [1] compiler_3.6.2 tools_3.6.2
> > > >
> > > > Thanks in advance for the help!
> > > >
> > > >       [[alternative HTML version deleted]]
> > > >
> > > > ______________________________________________
> > > > R-devel at r-project.org mailing list
> > > > https://stat.ethz.ch/mailman/listinfo/r-devel
> > >
> > > ______________________________________________
> > > R-devel at r-project.org mailing list
> > > https://stat.ethz.ch/mailman/listinfo/r-devel
> >
> >
> >
> > --
> > Michael Lawrence
> > Senior Scientist, Bioinformatics and Computational Biology
> > Genentech, A Member of the Roche Group
> > Office +1 (650) 225-7760
> > michafla at gene.com
> >
> > Join Genentech on LinkedIn | Twitter | Facebook | Instagram | YouTube
>
>
>
> --
> Michael Lawrence
> Senior Scientist, Bioinformatics and Computational Biology
> Genentech, A Member of the Roche Group
> Office +1 (650) 225-7760
> michafla at gene.com
>
> Join Genentech on LinkedIn | Twitter | Facebook | Instagram | YouTube
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>

	[[alternative HTML version deleted]]


From |@wrence@m|ch@e| @end|ng |rom gene@com  Wed Feb 26 03:05:55 2020
From: |@wrence@m|ch@e| @end|ng |rom gene@com (Michael Lawrence)
Date: Tue, 25 Feb 2020 18:05:55 -0800
Subject: [Rd] 
 Possible Regression in setClassUnion between 3.5.0 and 3.6.0
In-Reply-To: <CAHdfS94BnHGr7zTQZsT1DpnHw+30CEK7jHgHJ+6B=Rh1nwT_cA@mail.gmail.com>
References: <CAHdfS95sfC+7RRYcztqDKeyJwBukjJLHuRroQMfU7yCkhVyMDg@mail.gmail.com>
 <5e408873-eb6a-8209-aac6-f78b7f1d0bb1@gmail.com>
 <CAOQ5Nyf25-Hj4gQ=nBS+7M8OPdPWgeL7w7ykKj+D6_Egc7EMaw@mail.gmail.com>
 <CAOQ5NyeUBd4szqHq7Oo05BBEbgwM0wvZGqpoENuFOWnuregksw@mail.gmail.com>
 <CAHdfS94BnHGr7zTQZsT1DpnHw+30CEK7jHgHJ+6B=Rh1nwT_cA@mail.gmail.com>
Message-ID: <CAOQ5NydvvjwL4Qj+19CSGbM93YGZEasJKXhjRZR82Hc2zQt3xQ@mail.gmail.com>

They're stabilizing. All changes are internal and addressing bugs; not
user-facing.

On Tue, Feb 25, 2020 at 5:34 PM Robert Harlow <rharlow86 at gmail.com> wrote:
>
> Okay - that makes sense and thanks for looking into this! As an aside, from R-devel's perspective would you say methods are stabilizing again or do you foresee a lot of changes coming in the 4.* series?
>
> On Tue, Feb 25, 2020 at 3:39 PM Michael Lawrence via R-devel <r-devel at r-project.org> wrote:
>>
>> This seems to work as expected (returning "hi!") in R-devel, but there
>> have been so many destabilizing changes to methods that it would be
>> tough to port this to release. Probably should just wait for 4.0.
>>
>> Michael
>>
>> On Tue, Feb 18, 2020 at 8:00 PM Michael Lawrence <michafla at gene.com> wrote:
>> >
>> > Thanks, I'll look into it.
>> >
>> > On Tue, Feb 18, 2020 at 8:32 AM Ezra Tucker <ezztucker at gmail.com> wrote:
>> > >
>> > > Hi Robert,
>> > >
>> > > This looks like a bug to me (tested in R 3.6.2 on Windows), f(new("a"))
>> > > should return "hi!". I'll add that this DOES work properly in 3.6.1
>> > > which leads me to suspect this could be due to the subtle change in the
>> > > way method dispatch was performed to fix a different bug, in 3.6.2. Can
>> > > anybody else confirm that?
>> > >
>> > >
>> > > On 2/18/2020 9:32 AM, Robert Harlow wrote:
>> > > > I am trying to create a class union of class unions to facilitate method
>> > > > dispatch. When I execute code in the global environment, everything acts as
>> > > > expected, however when I put the same code in the context of a package,
>> > > > selectMethod can no longer find the correct method. This first block below
>> > > > puts the code in the context of a package:
>> > > >
>> > > > fn <- "codefile.R"
>> > > > writeLines(
>> > > >      c(
>> > > >          "setClass('x', slots = list(slot ='character'))",
>> > > >          "setClass('y', slots = list(slot ='character'))",
>> > > >          "setClass('a', slots = list(slot ='character'))",
>> > > >          "setClass('b', slots = list(slot ='character'))",
>> > > >          "setClassUnion('xy', c('x', 'y'))",
>> > > >          "setClassUnion('ab', c('a', 'b'))",
>> > > >          "setClassUnion('xyab', c('xy', 'ab'))",
>> > > >          "setGeneric('f', function(object, ...) standardGeneric('f'))",
>> > > >          "setMethod('f', 'xyab', function(object, ...) print('hi!'))"
>> > > >      ),
>> > > >      con = fn
>> > > > )
>> > > > package.skeleton(code_files = "codefile.R")
>> > > > system("rm -rf anRpackage/man")
>> > > > system("R CMD INSTALL anRpackage")
>> > > > library(anRpackage)
>> > > > ## fails in R 3.6.2, but works in R 3.5.0
>> > > > f(new("a"))
>> > > >
>> > > > Next, if a fresh R 3.6.2 session is started and I execute the following at
>> > > > the prompt, method dispatch works as expected.
>> > > >
>> > > > setClass("x", slots = list(slot ="character"))
>> > > > setClass("y", slots = list(slot ="character"))
>> > > > setClass("a", slots = list(slot ="character"))
>> > > > setClass("b", slots = list(slot ="character"))
>> > > > setClassUnion("xy", c("x", "y"))
>> > > > setClassUnion("ab", c("a", "b"))
>> > > > setClassUnion("xyab", c("xy", "ab"))
>> > > > setGeneric("f", function(object, ...) standardGeneric("f"))
>> > > > setMethod("f", "xyab", function(object, ...) print("hi!"))
>> > > > ## print's "hi!" as expected
>> > > > f(new("a"))
>> > > >
>> > > > I have also posted to stack overflow here:
>> > > > https://stackoverflow.com/questions/60264786/r-s4-class-union-of-class-unions?noredirect=1#comment106627883_60264786,
>> > > > (the example in this note removes devtools to make the environment
>> > > > cleaner).
>> > > >
>> > > > Interestingly, the issue only seems to arise when there are > 1 layer
>> > > > of the class union. E.g. if I were to setMethod on "ab" instead of
>> > > > "xyab", method dispatch would work as expected. I am not posting a bug
>> > > > yet as it is still unclear to me if I am doing something incorrect.
>> > > >
>> > > > My sessionInfo() is :
>> > > >
>> > > > R version 3.6.2 (2019-12-12)
>> > > > Platform: x86_64-pc-linux-gnu (64-bit)
>> > > > Running under: Ubuntu 18.04.3 LTS
>> > > >
>> > > > Matrix products: default
>> > > > BLAS:   /usr/local/lib/R/lib/libRblas.so
>> > > > LAPACK: /usr/local/lib/R/lib/libRlapack.so
>> > > >
>> > > > locale:
>> > > >   [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C
>> > > >   [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8
>> > > >   [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8
>> > > >   [7] LC_PAPER=en_US.UTF-8       LC_NAME=C
>> > > >   [9] LC_ADDRESS=C               LC_TELEPHONE=C
>> > > > [11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C
>> > > >
>> > > > attached base packages:
>> > > > [1] stats     graphics  grDevices utils     datasets  methods   base
>> > > >
>> > > > other attached packages:
>> > > > [1] anRpackage_1.0
>> > > >
>> > > > loaded via a namespace (and not attached):
>> > > > [1] compiler_3.6.2 tools_3.6.2
>> > > >
>> > > > Thanks in advance for the help!
>> > > >
>> > > >       [[alternative HTML version deleted]]
>> > > >
>> > > > ______________________________________________
>> > > > R-devel at r-project.org mailing list
>> > > > https://stat.ethz.ch/mailman/listinfo/r-devel
>> > >
>> > > ______________________________________________
>> > > R-devel at r-project.org mailing list
>> > > https://stat.ethz.ch/mailman/listinfo/r-devel
>> >
>> >
>> >
>> > --
>> > Michael Lawrence
>> > Senior Scientist, Bioinformatics and Computational Biology
>> > Genentech, A Member of the Roche Group
>> > Office +1 (650) 225-7760
>> > michafla at gene.com
>> >
>> > Join Genentech on LinkedIn | Twitter | Facebook | Instagram | YouTube
>>
>>
>>
>> --
>> Michael Lawrence
>> Senior Scientist, Bioinformatics and Computational Biology
>> Genentech, A Member of the Roche Group
>> Office +1 (650) 225-7760
>> michafla at gene.com
>>
>> Join Genentech on LinkedIn | Twitter | Facebook | Instagram | YouTube
>>
>> ______________________________________________
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel



-- 
Michael Lawrence
Senior Scientist, Bioinformatics and Computational Biology
Genentech, A Member of the Roche Group
Office +1 (650) 225-7760
michafla at gene.com

Join Genentech on LinkedIn | Twitter | Facebook | Instagram | YouTube


From kr|m|r+m| @end|ng |rom m@||box@org  Wed Feb 26 09:54:39 2020
From: kr|m|r+m| @end|ng |rom m@||box@org (=?UTF-8?Q?Kirill_M=c3=bcller?=)
Date: Wed, 26 Feb 2020 09:54:39 +0100
Subject: [Rd] Profiling: attributing costs to place of invocation (instead
 of place of evaluation)?
Message-ID: <ed0d281b-38da-3f28-8e32-7a655ec1b45b@mailbox.org>

Hi


Consider the following example:

f <- function(expr) g(expr)
g <- function(expr) {
 ? h(expr)
}
h <- function(expr) {
 ? expr # evaluation happens here
 ? i(expr)
}
i <- function(expr) {
 ? expr # already evaluated, no costs here
 ? invisible()
}

rprof <- tempfile()
Rprof(rprof)
f(replicate(1e2, sample.int(1e4)))
Rprof(NULL)
cat(readLines(rprof), sep = "\n")
#> sample.interval=20000
#> "sample.int" "FUN" "lapply" "sapply" "replicate" "h" "g" "f"
#> "sample.int" "FUN" "lapply" "sapply" "replicate" "h" "g" "f"
#> "sample.int" "FUN" "lapply" "sapply" "replicate" "h" "g" "f"

The evaluation of the slow replicate() call is deferred to the execution 
of h(), but there's no replicate() call in h's definition. This makes 
parsing the profile much more difficult than necessary.

I have pasted an experimental patch below (off of 3.6.2) that produces 
the following output:

cat(readLines(rprof), sep = "\n")
#> sample.interval=20000
#> "sample.int" "FUN" "lapply" "sapply" "replicate" "f"
#> "sample.int" "FUN" "lapply" "sapply" "replicate" "f"
#> "sample.int" "FUN" "lapply" "sapply" "replicate" "f"

This attributes the cost to the replicate() call to f(), where the call 
is actually defined. From my experience, this will give a much better 
understanding of the actual costs of each part of the code. The SIGPROF 
handler looks at sysparent and cloenv before deciding if an element of 
the call stack is to be included in the profile.

Is there interest in integrating a variant of this patch, perhaps with 
an optional argument to Rprof()?

Thanks!


Best regards

Kirill


Index: src/main/eval.c
===================================================================
--- src/main/eval.c??? (revision 77857)
+++ src/main/eval.c??? (working copy)
@@ -218,7 +218,10 @@
 ???? if (R_Line_Profiling)
 ???? lineprof(buf, R_getCurrentSrcref());

+??? SEXP sysparent = NULL;
+
 ???? for (cptr = R_GlobalContext; cptr; cptr = cptr->nextcontext) {
+??? if (sysparent != NULL && cptr->cloenv != sysparent && 
cptr->sysparent != sysparent) continue;
 ???? if ((cptr->callflag & (CTXT_FUNCTION | CTXT_BUILTIN))
 ???? ??? && TYPEOF(cptr->call) == LANGSXP) {
 ???? ??? SEXP fun = CAR(cptr->call);
@@ -292,6 +295,8 @@
 ???? ??? ??? else
 ???? ??? ??? lineprof(buf, cptr->srcref);
 ???? ??? }
+
+??? ??? sysparent = cptr->sysparent;
 ???? ??? }
 ???? }
 ???? }


From ||one| @end|ng |rom r@tud|o@com  Wed Feb 26 10:33:18 2020
From: ||one| @end|ng |rom r@tud|o@com (Lionel Henry)
Date: Wed, 26 Feb 2020 10:33:18 +0100
Subject: [Rd] 
 Profiling: attributing costs to place of invocation (instead
 of place of evaluation)?
In-Reply-To: <ed0d281b-38da-3f28-8e32-7a655ec1b45b@mailbox.org>
References: <ed0d281b-38da-3f28-8e32-7a655ec1b45b@mailbox.org>
Message-ID: <CAJf4E3qENy4W_XgCWMrcKOWoCm+XPh3hLRkdoE-p2UYLFKtwFw@mail.gmail.com>

There's a patch under review:
https://bugs.r-project.org/bugzilla/show_bug.cgi?id=17595

Best,
Lionel

On 2/26/20, Kirill M?ller <krlmlr+ml at mailbox.org> wrote:
> Hi
>
>
> Consider the following example:
>
> f <- function(expr) g(expr)
> g <- function(expr) {
>  ? h(expr)
> }
> h <- function(expr) {
>  ? expr # evaluation happens here
>  ? i(expr)
> }
> i <- function(expr) {
>  ? expr # already evaluated, no costs here
>  ? invisible()
> }
>
> rprof <- tempfile()
> Rprof(rprof)
> f(replicate(1e2, sample.int(1e4)))
> Rprof(NULL)
> cat(readLines(rprof), sep = "\n")
> #> sample.interval=20000
> #> "sample.int" "FUN" "lapply" "sapply" "replicate" "h" "g" "f"
> #> "sample.int" "FUN" "lapply" "sapply" "replicate" "h" "g" "f"
> #> "sample.int" "FUN" "lapply" "sapply" "replicate" "h" "g" "f"
>
> The evaluation of the slow replicate() call is deferred to the execution
> of h(), but there's no replicate() call in h's definition. This makes
> parsing the profile much more difficult than necessary.
>
> I have pasted an experimental patch below (off of 3.6.2) that produces
> the following output:
>
> cat(readLines(rprof), sep = "\n")
> #> sample.interval=20000
> #> "sample.int" "FUN" "lapply" "sapply" "replicate" "f"
> #> "sample.int" "FUN" "lapply" "sapply" "replicate" "f"
> #> "sample.int" "FUN" "lapply" "sapply" "replicate" "f"
>
> This attributes the cost to the replicate() call to f(), where the call
> is actually defined. From my experience, this will give a much better
> understanding of the actual costs of each part of the code. The SIGPROF
> handler looks at sysparent and cloenv before deciding if an element of
> the call stack is to be included in the profile.
>
> Is there interest in integrating a variant of this patch, perhaps with
> an optional argument to Rprof()?
>
> Thanks!
>
>
> Best regards
>
> Kirill
>
>
> Index: src/main/eval.c
> ===================================================================
> --- src/main/eval.c??? (revision 77857)
> +++ src/main/eval.c??? (working copy)
> @@ -218,7 +218,10 @@
>  ???? if (R_Line_Profiling)
>  ???? lineprof(buf, R_getCurrentSrcref());
>
> +??? SEXP sysparent = NULL;
> +
>  ???? for (cptr = R_GlobalContext; cptr; cptr = cptr->nextcontext) {
> +??? if (sysparent != NULL && cptr->cloenv != sysparent &&
> cptr->sysparent != sysparent) continue;
>  ???? if ((cptr->callflag & (CTXT_FUNCTION | CTXT_BUILTIN))
>  ???? ??? && TYPEOF(cptr->call) == LANGSXP) {
>  ???? ??? SEXP fun = CAR(cptr->call);
> @@ -292,6 +295,8 @@
>  ???? ??? ??? else
>  ???? ??? ??? lineprof(buf, cptr->srcref);
>  ???? ??? }
> +
> +??? ??? sysparent = cptr->sysparent;
>  ???? ??? }
>  ???? }
>  ???? }
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>


From @purd|e@@ @end|ng |rom gm@||@com  Wed Feb 26 22:45:29 2020
From: @purd|e@@ @end|ng |rom gm@||@com (Abby Spurdle)
Date: Thu, 27 Feb 2020 10:45:29 +1300
Subject: [Rd] RIOT 2020
In-Reply-To: <c5c63474-132c-32c3-905a-c53ab9782552@oracle.com>
References: <c5c63474-132c-32c3-905a-c53ab9782552@oracle.com>
Message-ID: <CAB8pepy_=1TjqZZb91GserdVKdE6v5xFB6SWbouaR5jJP8y-ZQ@mail.gmail.com>

If people want to create a new interpreter (for R or any other
data-driven programming language), or do something closely related
(such as adapt an existing interpreter), I think a better strategy
would be to focus on real time computing.

I note that Oracle who appears to be sponsoring this event, also
acquired ChorusOS (via their acquisition of Sun). I think they should
release ChorusOS under an open source license, and consider investing
into that.


On Wed, Feb 26, 2020 at 5:41 AM Stepan <stepan.sindelar at oracle.com> wrote:
>
> I hope you don?t mind us using this mailing list for a small
> advertisement, but we think it is most relevant for this group:
>
> We'd like to invite you to RIOT 2020 - the 5rd workshop on R
> Implementation, Optimization and Tooling [1]. It will take place
> co-located with, and during, useR! 2020 in St. Louis on July 8th. RIOT
> is an excellent venue for deep technical discussions about R
> implementations, tools, optimizations and R extension, and will be very
> interesting for anyone interested in what?s under the hood of R.
>
> Regards,
> Stepan Sindelar, Lukas Stadler (Oracle Labs), Jan Vitek (Northeastern),
> Alexander Bertram (BeDataDriven)
>
> [1] http://riotworkshop.github.io/
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From c@@rd|@g@bor @end|ng |rom gm@||@com  Wed Feb 26 23:47:49 2020
From: c@@rd|@g@bor @end|ng |rom gm@||@com (=?UTF-8?B?R8OhYm9yIENzw6FyZGk=?=)
Date: Wed, 26 Feb 2020 22:47:49 +0000
Subject: [Rd] unlink() on "~" removes the home directory
Message-ID: <CABtg=KkUxSqqNe1cNfL=WDK06=K0yAJS38KpkgE8U3Yjn6Dqhg@mail.gmail.com>

!!! DON'T TRY THE CODE IN THIS EMAIL AT HOME !!!

Well, unlink() does what it is supposed to do, so you could argue that
there is nothing wrong with it. Also, nobody would call unlink() on
"~", right?

The situation is not so simple, however. E.g. if you happen to have a
directory called "~", and you iterate over all files and directories
to selectively remove some of them, then your code might end up
calling unlink on the local "~" directory, and then your home is gone.

But you would not create a directory named "~", that is just asking
for trouble. Well, surely, _intentionally_ you would not do that.
Unintentionally, you might. E.g. something like this is enough:

# Create a subpath within a base directory
badfun <- function(base = ".", path) {
  dir.create(file.path(base, path), recursive = TRUE, showWarnings = FALSE)
}
badfun(path = "~/foo")

(If you did run this, be very careful how you remove the directory called "~"!)

A real example is `R CMD build` which deletes the home directory of
the current user if the root of the package contains a non-empty "~"
directory. Luckily this is now fixed in R-devel, so R 4.0.0 will do
better. (R 3.6.3 will not.) See
https://github.com/wch/r-source/commit/1d4f7aa1dac427ea2213d1f7cd7b5c16e896af22

I have seen several bug reports about various packages (that call R
CMD build) removing the home directory, so this indeed happens in
practice to a number of people. The commit above will fix `R CMD
build`, but it would be great to "fix" this in general.

It seems pretty hard to prevent users from creating of a "~"
directory. But preventing unlink() from deleting "~" does not actually
seem too hard. If unlink() could just refuse removing "~" (when expand
= TRUE), that would be great. It seems to me that the current behavior
is very-very rarely intended, and its consequences are potentially
disastrous.

If unlink("~", recursive = TRUE) errors, you can still remove a local
"~" file/dir with unlink("./~", ...). And you can still remove your
home directory if you really want to do that, with
unlink(path.expand("~"), ...). So no functionality is lost.

Also, if anyone is aware of packages/functions that tend to create "~"
directories or files, please let me know.

I would be happy to submit a patch for the new unlink("~") behavior.

Thanks,
Gabor


From hp@ge@ @end|ng |rom |redhutch@org  Thu Feb 27 00:54:39 2020
From: hp@ge@ @end|ng |rom |redhutch@org (=?UTF-8?B?SGVydsOpIFBhZ8Oocw==?=)
Date: Wed, 26 Feb 2020 15:54:39 -0800
Subject: [Rd] unlink() on "~" removes the home directory
In-Reply-To: <CABtg=KkUxSqqNe1cNfL=WDK06=K0yAJS38KpkgE8U3Yjn6Dqhg@mail.gmail.com>
References: <CABtg=KkUxSqqNe1cNfL=WDK06=K0yAJS38KpkgE8U3Yjn6Dqhg@mail.gmail.com>
Message-ID: <cd4d3769-c98d-1101-02c9-9d406bf14f70@fredhutch.org>

On 2/26/20 14:47, G?bor Cs?rdi wrote:
> !!! DON'T TRY THE CODE IN THIS EMAIL AT HOME !!!

Ok I'll try it at work on my boss's computer, sounds a lot safer.

H.

> 
> Well, unlink() does what it is supposed to do, so you could argue that
> there is nothing wrong with it. Also, nobody would call unlink() on
> "~", right?
> 
> The situation is not so simple, however. E.g. if you happen to have a
> directory called "~", and you iterate over all files and directories
> to selectively remove some of them, then your code might end up
> calling unlink on the local "~" directory, and then your home is gone.
> 
> But you would not create a directory named "~", that is just asking
> for trouble. Well, surely, _intentionally_ you would not do that.
> Unintentionally, you might. E.g. something like this is enough:
> 
> # Create a subpath within a base directory
> badfun <- function(base = ".", path) {
>    dir.create(file.path(base, path), recursive = TRUE, showWarnings = FALSE)
> }
> badfun(path = "~/foo")
> 
> (If you did run this, be very careful how you remove the directory called "~"!)
> 
> A real example is `R CMD build` which deletes the home directory of
> the current user if the root of the package contains a non-empty "~"
> directory. Luckily this is now fixed in R-devel, so R 4.0.0 will do
> better. (R 3.6.3 will not.) See
> https://urldefense.proofpoint.com/v2/url?u=https-3A__github.com_wch_r-2Dsource_commit_1d4f7aa1dac427ea2213d1f7cd7b5c16e896af22&d=DwICAg&c=eRAMFD45gAfqt84VtBcfhQ&r=BK7q3XeAvimeWdGbWY_wJYbW0WYiZvSXAJJKaaPhzWA&m=C3VCGF44o7jATPOlC8aZhaT4YGU1JtcOixJKZgu6KyI&s=iWNt-0G2gZa99bnOqNBMOHph0NyVoJdsIwuA07GhJZQ&e=
> 
> I have seen several bug reports about various packages (that call R
> CMD build) removing the home directory, so this indeed happens in
> practice to a number of people. The commit above will fix `R CMD
> build`, but it would be great to "fix" this in general.
> 
> It seems pretty hard to prevent users from creating of a "~"
> directory. But preventing unlink() from deleting "~" does not actually
> seem too hard. If unlink() could just refuse removing "~" (when expand
> = TRUE), that would be great. It seems to me that the current behavior
> is very-very rarely intended, and its consequences are potentially
> disastrous.
> 
> If unlink("~", recursive = TRUE) errors, you can still remove a local
> "~" file/dir with unlink("./~", ...). And you can still remove your
> home directory if you really want to do that, with
> unlink(path.expand("~"), ...). So no functionality is lost.
> 
> Also, if anyone is aware of packages/functions that tend to create "~"
> directories or files, please let me know.
> 
> I would be happy to submit a patch for the new unlink("~") behavior.
> 
> Thanks,
> Gabor
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://urldefense.proofpoint.com/v2/url?u=https-3A__stat.ethz.ch_mailman_listinfo_r-2Ddevel&d=DwICAg&c=eRAMFD45gAfqt84VtBcfhQ&r=BK7q3XeAvimeWdGbWY_wJYbW0WYiZvSXAJJKaaPhzWA&m=C3VCGF44o7jATPOlC8aZhaT4YGU1JtcOixJKZgu6KyI&s=FeZWU9uN-HwDNkSBOmbYXiGqu8q8-U6DI-ddyUn7HHw&e=
> 

-- 
Herv? Pag?s

Program in Computational Biology
Division of Public Health Sciences
Fred Hutchinson Cancer Research Center
1100 Fairview Ave. N, M1-B514
P.O. Box 19024
Seattle, WA 98109-1024

E-mail: hpages at fredhutch.org
Phone:  (206) 667-5791
Fax:    (206) 667-1319


From j@v|tek @end|ng |rom northe@@tern@edu  Thu Feb 27 03:58:08 2020
From: j@v|tek @end|ng |rom northe@@tern@edu (Vitek, Jan)
Date: Thu, 27 Feb 2020 02:58:08 +0000
Subject: [Rd] RIOT 2020
In-Reply-To: <CAB8pepy_=1TjqZZb91GserdVKdE6v5xFB6SWbouaR5jJP8y-ZQ@mail.gmail.com>
References: <c5c63474-132c-32c3-905a-c53ab9782552@oracle.com>
 <CAB8pepy_=1TjqZZb91GserdVKdE6v5xFB6SWbouaR5jJP8y-ZQ@mail.gmail.com>
Message-ID: <9A987010-ADE4-429C-9B24-C4F4E84C6131@neu.edu>

Reasonable -- I am a co-organizer of RIOT and spent 10 years building real-time Java virtual machines.

My conclusion: no one cares. :-(

> On Feb 26, 2020, at 4:45 PM, Abby Spurdle <spurdle.a at gmail.com> wrote:
> 
> If people want to create a new interpreter (for R or any other
> data-driven programming language), or do something closely related
> (such as adapt an existing interpreter), I think a better strategy
> would be to focus on real time computing.
> 
> I note that Oracle who appears to be sponsoring this event, also
> acquired ChorusOS (via their acquisition of Sun). I think they should
> release ChorusOS under an open source license, and consider investing
> into that.
> 
> 
> On Wed, Feb 26, 2020 at 5:41 AM Stepan <stepan.sindelar at oracle.com> wrote:
>> 
>> I hope you don?t mind us using this mailing list for a small
>> advertisement, but we think it is most relevant for this group:
>> 
>> We'd like to invite you to RIOT 2020 - the 5rd workshop on R
>> Implementation, Optimization and Tooling [1]. It will take place
>> co-located with, and during, useR! 2020 in St. Louis on July 8th. RIOT
>> is an excellent venue for deep technical discussions about R
>> implementations, tools, optimizations and R extension, and will be very
>> interesting for anyone interested in what?s under the hood of R.
>> 
>> Regards,
>> Stepan Sindelar, Lukas Stadler (Oracle Labs), Jan Vitek (Northeastern),
>> Alexander Bertram (BeDataDriven)
>> 
>> [1] https://nam05.safelinks.protection.outlook.com/?url=http%3A%2F%2Friotworkshop.github.io%2F&amp;data=02%7C01%7Cj.vitek%40northeastern.edu%7C649169c229e1438e351808d7bb05473a%7Ca8eec281aaa34daeac9b9a398b9215e7%7C0%7C0%7C637183503671619822&amp;sdata=pATfh3Mmv%2FT1UvElIczwLpf4dzg7jEo0M249m6xa0Dg%3D&amp;reserved=0
>> 
>> ______________________________________________
>> R-devel at r-project.org mailing list
>> https://nam05.safelinks.protection.outlook.com/?url=https%3A%2F%2Fstat.ethz.ch%2Fmailman%2Flistinfo%2Fr-devel&amp;data=02%7C01%7Cj.vitek%40northeastern.edu%7C649169c229e1438e351808d7bb05473a%7Ca8eec281aaa34daeac9b9a398b9215e7%7C0%7C0%7C637183503671619822&amp;sdata=a%2Bds6hnD9ob1FTYbyc6Mv1pyjGOUy6rTR8kxnuqHu6w%3D&amp;reserved=0
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://nam05.safelinks.protection.outlook.com/?url=https%3A%2F%2Fstat.ethz.ch%2Fmailman%2Flistinfo%2Fr-devel&amp;data=02%7C01%7Cj.vitek%40northeastern.edu%7C649169c229e1438e351808d7bb05473a%7Ca8eec281aaa34daeac9b9a398b9215e7%7C0%7C0%7C637183503671619822&amp;sdata=a%2Bds6hnD9ob1FTYbyc6Mv1pyjGOUy6rTR8kxnuqHu6w%3D&amp;reserved=0


From @purd|e@@ @end|ng |rom gm@||@com  Fri Feb 28 01:22:09 2020
From: @purd|e@@ @end|ng |rom gm@||@com (Abby Spurdle)
Date: Fri, 28 Feb 2020 13:22:09 +1300
Subject: [Rd] RIOT 2020
In-Reply-To: <9A987010-ADE4-429C-9B24-C4F4E84C6131@neu.edu>
References: <c5c63474-132c-32c3-905a-c53ab9782552@oracle.com>
 <CAB8pepy_=1TjqZZb91GserdVKdE6v5xFB6SWbouaR5jJP8y-ZQ@mail.gmail.com>
 <9A987010-ADE4-429C-9B24-C4F4E84C6131@neu.edu>
Message-ID: <CAB8pepx+nvON=i_5A6YTXKn4gf9N-Q6ySAHzk78c=6mwgHbOLA@mail.gmail.com>

On Thu, Feb 27, 2020 at 3:58 PM Vitek, Jan <j.vitek at northeastern.edu> wrote:
> I am a co-organizer of RIOT and spent 10 years building real-time Java virtual machines.

Wow!
I'm impressed.

Sounds like you've set a precedent for future research in language
implementation.

> My conclusion: no one cares

It sounds like your research has been under-appreciated.
(Not sure if I'm interpreting your post correctly).

I suspect that (some) other people will start coming on board, relatively soon.


From h@nk|n@rob|n @end|ng |rom gm@||@com  Sat Feb 29 01:08:29 2020
From: h@nk|n@rob|n @end|ng |rom gm@||@com (robin hankin)
Date: Sat, 29 Feb 2020 13:08:29 +1300
Subject: [Rd] dput()
Message-ID: <CAHHjBM6zFE+UQrLeVT+gMD7R-jbHco+cygkAB+JR4P2cCik6bg@mail.gmail.com>

My interpretation of dput.Rd is that dput() gives an exact ASCII form
of the internal representation of an R object.  But:

 rhankin at cuttlefish:~ $ R --version
R version 3.6.2 (2019-12-12) -- "Dark and Stormy Night"
Copyright (C) 2019 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

[snip]

rhankin at cuttlefish:~ $ R --vanilla --quiet
> x <- sum(dbinom(0:20,20,0.35))
> dput(x)
1
> x-1
[1] -4.440892e-16
>
> x==1
[1] FALSE
>

So, dput(x) gives 1, but x is not equal to 1.  Can anyone advise?


From ru|pb@rr@d@@ @end|ng |rom @@po@pt  Sat Feb 29 08:42:52 2020
From: ru|pb@rr@d@@ @end|ng |rom @@po@pt (Rui Barradas)
Date: Sat, 29 Feb 2020 07:42:52 +0000
Subject: [Rd] dput()
In-Reply-To: <CAHHjBM6zFE+UQrLeVT+gMD7R-jbHco+cygkAB+JR4P2cCik6bg@mail.gmail.com>
References: <CAHHjBM6zFE+UQrLeVT+gMD7R-jbHco+cygkAB+JR4P2cCik6bg@mail.gmail.com>
Message-ID: <a0c1898c-2dac-cdd5-ff4b-5c91a30b065f@sapo.pt>

Hello,

FAQ 7.31

See also this StackOverflow post:

https://stackoverflow.com/questions/9508518/why-are-these-numbers-not-equal

Hope this helps,

Rui Barradas

?s 00:08 de 29/02/20, robin hankin escreveu:
> My interpretation of dput.Rd is that dput() gives an exact ASCII form
> of the internal representation of an R object.  But:
> 
>   rhankin at cuttlefish:~ $ R --version
> R version 3.6.2 (2019-12-12) -- "Dark and Stormy Night"
> Copyright (C) 2019 The R Foundation for Statistical Computing
> Platform: x86_64-pc-linux-gnu (64-bit)
> 
> [snip]
> 
> rhankin at cuttlefish:~ $ R --vanilla --quiet
>> x <- sum(dbinom(0:20,20,0.35))
>> dput(x)
> 1
>> x-1
> [1] -4.440892e-16
>>
>> x==1
> [1] FALSE
>>
> 
> So, dput(x) gives 1, but x is not equal to 1.  Can anyone advise?
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>


From dw|n@em|u@ @end|ng |rom comc@@t@net  Sat Feb 29 10:09:36 2020
From: dw|n@em|u@ @end|ng |rom comc@@t@net (David Winsemius)
Date: Sat, 29 Feb 2020 01:09:36 -0800
Subject: [Rd] dput()
In-Reply-To: <a0c1898c-2dac-cdd5-ff4b-5c91a30b065f@sapo.pt>
References: <CAHHjBM6zFE+UQrLeVT+gMD7R-jbHco+cygkAB+JR4P2cCik6bg@mail.gmail.com>
 <a0c1898c-2dac-cdd5-ff4b-5c91a30b065f@sapo.pt>
Message-ID: <5ce0faa8-93dc-451a-f70a-dc0662094798@comcast.net>


On 2/28/20 11:42 PM, Rui Barradas wrote:
> Hello,
>
> FAQ 7.31
>
> See also this StackOverflow post:
>
> https://stackoverflow.com/questions/9508518/why-are-these-numbers-not-equal 
>


That was going to be my initial response, but then I realized that the 
question might be why the dput representation of the x variable didn't 
display the detail of the decimal fraction out at the 16th or 
seventeenth place. So here's some further results to chew on:


1 (rather than 0.99999999999999955591) is what would get if `dput` were 
used to send it to a file:


 ?dput(x, file="temp.txt")

 ?x <- scan(file="temp.txt")
#Read 1 item

 ?x==1
#[1] TRUE

And if you wanted more precision with the value before it got rectified 
by output/input? you could use the control parameter:


dput(x, control="digits17")
#0.99999999999999956


HTH;

David.

>
> Hope this helps,
>
> Rui Barradas
>
> ?s 00:08 de 29/02/20, robin hankin escreveu:
>> My interpretation of dput.Rd is that dput() gives an exact ASCII form
>> of the internal representation of an R object.? But:
>>
>> ? rhankin at cuttlefish:~ $ R --version
>> R version 3.6.2 (2019-12-12) -- "Dark and Stormy Night"
>> Copyright (C) 2019 The R Foundation for Statistical Computing
>> Platform: x86_64-pc-linux-gnu (64-bit)
>>
>> [snip]
>>
>> rhankin at cuttlefish:~ $ R --vanilla --quiet
>>> x <- sum(dbinom(0:20,20,0.35))
>>> dput(x)
>> 1
>>> x-1
>> [1] -4.440892e-16
>>>
>>> x==1
>> [1] FALSE
>>>
>>
>> So, dput(x) gives 1, but x is not equal to 1.? Can anyone advise?
>>
>> ______________________________________________
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From pd@me@ @end|ng |rom cb@@dk  Sat Feb 29 10:14:22 2020
From: pd@me@ @end|ng |rom cb@@dk (Peter Dalgaard)
Date: Sat, 29 Feb 2020 09:14:22 +0000
Subject: [Rd] R 3.6.3 is released
Message-ID: <DEBEE59C-5554-4FD1-8E36-7D4B22914CC2@cbs.dk>

The build system rolled up R-3.6.3.tar.gz (codename "Holding the Windsock") this morning.

The list below details the changes in this release.

You can get the source code from

http://cran.r-project.org/src/base/R-3/R-3.6.3.tar.gz

or wait for it to be mirrored at a CRAN site nearer to you.

Binaries for various platforms will appear in due course.


For the R Core Team,

Peter Dalgaard

These are the checksums (md5 and SHA-256) for the freshly created files, in case you wish
to check that they are uncorrupted:

MD5 (AUTHORS) = b9c44f9f78cab3184ad9898bebc854b4
MD5 (COPYING) = eb723b61539feef013de476e68b5c50a
MD5 (COPYING.LIB) = a6f89e2100d9b6cdffcea4f398e37343
MD5 (FAQ) = 28a3942a7129877e9af1d5ea16202052
MD5 (INSTALL) = 7893f754308ca31f1ccf62055090ad7b
MD5 (NEWS) = 2b364f6eaef28e069ab8ed779ee5859d
MD5 (NEWS.0) = bfcd7c147251b5474d96848c6f57e5a8
MD5 (NEWS.1) = eb78c4d053ec9c32b815cf0c2ebea801
MD5 (NEWS.2) = 591dcf615162127f904e4e461f330ce9
MD5 (R-latest.tar.gz) = 506c9576ba33e1262ad5b5624db9d96a
MD5 (README) = f468f281c919665e276a1b691decbbe6
MD5 (RESOURCES) = 529223fd3ffef95731d0a87353108435
MD5 (THANKS) = bb45f89c01d509721c47fd41f147da60
MD5 (VERSION-INFO.dcf) = d97d382dc5583f9385461d8a4b0ff091
MD5 (R-3/R-3.6.3.tar.gz) = 506c9576ba33e1262ad5b5624db9d96a


2cde824a7b18958e5f06b391c801c8288be0f84fa8934b7ddefef23c67e60c09  AUTHORS
e6d6a009505e345fe949e1310334fcb0747f28dae2856759de102ab66b722cb4  COPYING
6095e9ffa777dd22839f7801aa845b31c9ed07f3d6bf8a26dc5d2dec8ccc0ef3  COPYING.LIB
38219d9c6221ccfbf075ef03711b420a1aa8731f890c8f2337148b602a217c2d  FAQ
f87461be6cbaecc4dce44ac58e5bd52364b0491ccdadaf846cb9b452e9550f31  INSTALL
50381062bad9aeb4b0c8c4695cb6955c5ff70699fcc821a8e1b340229100278c  NEWS
4e21b62f515b749f80997063fceab626d7258c7d650e81a662ba8e0640f12f62  NEWS.0
12b30c724117b1b2b11484673906a6dcd48a361f69fc420b36194f9218692d01  NEWS.1
ca04f78ffe54afa326fe3ed40e7e1411aca0000ed2fa5ead97ddf51c6aa5b7bc  NEWS.2
89302990d8e8add536e12125ec591d6951022cf8475861b3690bc8bf1cefaa8f  R-latest.tar.gz
2fdd3e90f23f32692d4b3a0c0452f2c219a10882033d1774f8cadf25886c3ddc  README
408737572ecc6e1135fdb2cf7a9dbb1a6cb27967c757f1771b8c39d1fd2f1ab9  RESOURCES
2a8dca916cd92229ef9e328f3610ca204809c262823b860252b42072dac2473a  THANKS
20f8bfdfc6302bb2cf9b0fc5424c9a10ac0953096b6c32768ffd106a3fdd4589  VERSION-INFO.dcf
89302990d8e8add536e12125ec591d6951022cf8475861b3690bc8bf1cefaa8f  R-3/R-3.6.3.tar.gz


This is the relevant part of the NEWS file

CHANGES IN R 3.6.3:

  NEW FEATURES:

    * The included LAPACK has been updated to version 3.9.0 (for the
      included routines, just bug fixes).

  BUG FIXES:

    * Fixed a C level integer overflow in rhyper(); reported by
      Benjamin Tyner in PR#17694.

    * Uses of url(gzcon(.)) needing to extend buffer size have failed
      (with HTTP/2 servers), reported by G'abor Cs'ardi.

    * predict(loess(..), se=TRUE) now errors out (instead of
      seg.faulting etc) for large sample sizes, thanks to a report and
      patch by Benjamin Tyner in PR#17121.

    * tools:assertCondition(., "error") and hence assertError() no
      longer return errors twice (invisibly).

    * update(form, new) in the case of a long new formula sometimes
      wrongly eliminated the intercept from form, or (more rarely)
      added a garbage term (or seg.faulted !); the fix happened by
      simplifying the C-level logic of terms.formula().  Reported by
      Mathias Amb"uhl in PR#16326.

    * The error message from stopifnot(.., <error producing call>)
      again contains the full "stopifnot(.......)" call: Its attempted
      suppression did not work consistently.

    * On Windows, download.file(., , "wininet", headers=character())
      would fail; reported with patch proposal by Kevin Ushey in
      PR#17710.

-- 
Peter Dalgaard, Professor,
Center for Statistics, Copenhagen Business School
Solbjerg Plads 3, 2000 Frederiksberg, Denmark
Phone: (+45)38153501
Office: A 4.23
Email: pd.mes at cbs.dk  Priv: PDalgd at gmail.com


From g@bembecker @end|ng |rom gm@||@com  Sat Feb 29 10:18:03 2020
From: g@bembecker @end|ng |rom gm@||@com (Gabriel Becker)
Date: Sat, 29 Feb 2020 01:18:03 -0800
Subject: [Rd] dput()
In-Reply-To: <a0c1898c-2dac-cdd5-ff4b-5c91a30b065f@sapo.pt>
References: <CAHHjBM6zFE+UQrLeVT+gMD7R-jbHco+cygkAB+JR4P2cCik6bg@mail.gmail.com>
 <a0c1898c-2dac-cdd5-ff4b-5c91a30b065f@sapo.pt>
Message-ID: <CAD4oTHFTNqBBWstK=wk21jxsG+U61zcTs5249aHBSQOcqMJzMQ@mail.gmail.com>

Hi Robin,

In the future, questions like this belong on R-help, not R-devel as it is a
basic usage question not a discussion about development of the R language
itself or similar.

That said, ?dput states a number of times that exact deparsing is not
always possible and that dput is not appropriate for what I'm inferring you
may be trying to do with it.  I would not have expected this in particular
to be one of those cases, to be honest, but its within spec. dput is NOT
guaranteed to give back an identical object, in fact according to the docs
in some cases it should be expected not to. As for why dput is doing this ,
I'm not sure if its that some amount off formatting is going on inside
dput, or if its a finite precision issue as suggested by Rui. I think the
former is more consistent with the behavior you're seeing but I don't have
time to dig into the guts of dput right this second.

Either way, If you want exact recreation of the object you have you need to
either run the actual code you used to generate it (on the same data  in
the same environment, etc etc) or serialize it out via saveRDS (or just
save if you must) and then readRDS/load it back in.

I hope that helps.
~G


On Fri, Feb 28, 2020 at 11:43 PM Rui Barradas <ruipbarradas at sapo.pt> wrote:

> Hello,
>
> FAQ 7.31
>
> See also this StackOverflow post:
>
> https://stackoverflow.com/questions/9508518/why-are-these-numbers-not-equal
>
> Hope this helps,
>
> Rui Barradas
>
> ?s 00:08 de 29/02/20, robin hankin escreveu:
> > My interpretation of dput.Rd is that dput() gives an exact ASCII form
> > of the internal representation of an R object.  But:
> >
> >   rhankin at cuttlefish:~ $ R --version
> > R version 3.6.2 (2019-12-12) -- "Dark and Stormy Night"
> > Copyright (C) 2019 The R Foundation for Statistical Computing
> > Platform: x86_64-pc-linux-gnu (64-bit)
> >
> > [snip]
> >
> > rhankin at cuttlefish:~ $ R --vanilla --quiet
> >> x <- sum(dbinom(0:20,20,0.35))
> >> dput(x)
> > 1
> >> x-1
> > [1] -4.440892e-16
> >>
> >> x==1
> > [1] FALSE
> >>
> >
> > So, dput(x) gives 1, but x is not equal to 1.  Can anyone advise?
> >
> > ______________________________________________
> > R-devel at r-project.org mailing list
> > https://stat.ethz.ch/mailman/listinfo/r-devel
> >
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>

	[[alternative HTML version deleted]]


From bbo|ker @end|ng |rom gm@||@com  Sat Feb 29 10:19:43 2020
From: bbo|ker @end|ng |rom gm@||@com (Ben Bolker)
Date: Sat, 29 Feb 2020 04:19:43 -0500
Subject: [Rd] dput()
In-Reply-To: <a0c1898c-2dac-cdd5-ff4b-5c91a30b065f@sapo.pt>
References: <CAHHjBM6zFE+UQrLeVT+gMD7R-jbHco+cygkAB+JR4P2cCik6bg@mail.gmail.com>
 <a0c1898c-2dac-cdd5-ff4b-5c91a30b065f@sapo.pt>
Message-ID: <4d7acddc-485f-2de8-d802-e382b8f861be@gmail.com>


 I think Robin knows about FAQ 7.31/floating point (author of
'Brobdingnag', among other numerical packages).  I agree that this is
surprising (to me).

  To reframe this question: is there way to get an *exact* ASCII
representation of a numeric value (i.e., guaranteeing the restored value
is identical() to the original) ?

 .deparseOpts has

?"digits17"?: Real and finite complex numbers are output using
          format ?"%.17g"? which may give more precision than the
          default (but the output will depend on the platform and there
          may be loss of precision when read back).

  ... but this still doesn't guarantee that all precision is kept.

  Maybe

 saveRDS(x,textConnection("out","w"),ascii=TRUE)
identical(x,as.numeric(out[length(out)]))   ## TRUE

?




On 2020-02-29 2:42 a.m., Rui Barradas wrote:
> Hello,
> 
> FAQ 7.31
> 
> See also this StackOverflow post:
> 
> https://stackoverflow.com/questions/9508518/why-are-these-numbers-not-equal
> 
> Hope this helps,
> 
> Rui Barradas
> 
> ?s 00:08 de 29/02/20, robin hankin escreveu:
>> My interpretation of dput.Rd is that dput() gives an exact ASCII form
>> of the internal representation of an R object.? But:
>>
>> ? rhankin at cuttlefish:~ $ R --version
>> R version 3.6.2 (2019-12-12) -- "Dark and Stormy Night"
>> Copyright (C) 2019 The R Foundation for Statistical Computing
>> Platform: x86_64-pc-linux-gnu (64-bit)
>>
>> [snip]
>>
>> rhankin at cuttlefish:~ $ R --vanilla --quiet
>>> x <- sum(dbinom(0:20,20,0.35))
>>> dput(x)
>> 1
>>> x-1
>> [1] -4.440892e-16
>>>
>>> x==1
>> [1] FALSE
>>>
>>
>> So, dput(x) gives 1, but x is not equal to 1.? Can anyone advise?
>>
>> ______________________________________________
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From murdoch@dunc@n @end|ng |rom gm@||@com  Sat Feb 29 18:21:46 2020
From: murdoch@dunc@n @end|ng |rom gm@||@com (Duncan Murdoch)
Date: Sat, 29 Feb 2020 12:21:46 -0500
Subject: [Rd] dput()
In-Reply-To: <4d7acddc-485f-2de8-d802-e382b8f861be@gmail.com>
References: <CAHHjBM6zFE+UQrLeVT+gMD7R-jbHco+cygkAB+JR4P2cCik6bg@mail.gmail.com>
 <a0c1898c-2dac-cdd5-ff4b-5c91a30b065f@sapo.pt>
 <4d7acddc-485f-2de8-d802-e382b8f861be@gmail.com>
Message-ID: <e3faa734-0db4-760d-ef1e-4f85e2382542@gmail.com>

On 29/02/2020 4:19 a.m., Ben Bolker wrote:
> 
>   I think Robin knows about FAQ 7.31/floating point (author of
> 'Brobdingnag', among other numerical packages).  I agree that this is
> surprising (to me).
> 
>    To reframe this question: is there way to get an *exact* ASCII
> representation of a numeric value (i.e., guaranteeing the restored value
> is identical() to the original) ?
> 
>   .deparseOpts has
> 
> ?"digits17"?: Real and finite complex numbers are output using
>            format ?"%.17g"? which may give more precision than the
>            default (but the output will depend on the platform and there
>            may be loss of precision when read back).
> 
>    ... but this still doesn't guarantee that all precision is kept.

"Using control = c("all", "hexNumeric") comes closest to making 
deparse() an inverse of parse(), as representing double and complex 
numbers as decimals may well not be exact. However, not all objects are 
deparse-able even with this option. A warning will be issued if the 
function recognizes that it is being asked to do the impossible."

> 
>    Maybe
> 
>   saveRDS(x,textConnection("out","w"),ascii=TRUE)
> identical(x,as.numeric(out[length(out)]))   ## TRUE
> 
> ?
> 
> 
> 
> 
> On 2020-02-29 2:42 a.m., Rui Barradas wrote:
>> Hello,
>>
>> FAQ 7.31
>>
>> See also this StackOverflow post:
>>
>> https://stackoverflow.com/questions/9508518/why-are-these-numbers-not-equal
>>
>> Hope this helps,
>>
>> Rui Barradas
>>
>> ?s 00:08 de 29/02/20, robin hankin escreveu:
>>> My interpretation of dput.Rd is that dput() gives an exact ASCII form
>>> of the internal representation of an R object.? But:
>>>
>>>  ? rhankin at cuttlefish:~ $ R --version
>>> R version 3.6.2 (2019-12-12) -- "Dark and Stormy Night"
>>> Copyright (C) 2019 The R Foundation for Statistical Computing
>>> Platform: x86_64-pc-linux-gnu (64-bit)
>>>
>>> [snip]
>>>
>>> rhankin at cuttlefish:~ $ R --vanilla --quiet
>>>> x <- sum(dbinom(0:20,20,0.35))
>>>> dput(x)
>>> 1
>>>> x-1
>>> [1] -4.440892e-16
>>>>
>>>> x==1
>>> [1] FALSE
>>>>
>>>
>>> So, dput(x) gives 1, but x is not equal to 1.? Can anyone advise?
>>>
>>> ______________________________________________
>>> R-devel at r-project.org mailing list
>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>>
>>
>> ______________________________________________
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>


From ch@r||e @end|ng |rom @t@t@umn@edu  Sat Feb 29 19:01:21 2020
From: ch@r||e @end|ng |rom @t@t@umn@edu (Charles Geyer)
Date: Sat, 29 Feb 2020 12:01:21 -0600
Subject: [Rd] tcl problem with R-3.6.3?
Message-ID: <CAKctRd35HMAbWzE0wwOwX7f6V54aBfXm_HUWi4NCGzfXD3vOWA@mail.gmail.com>

Just built 3.6.3 from source and tcl doesn't work.  Worked fine with the
same laptop in 3.6.2.  Here's the exact error.

blurfle$ R --vanilla

R version 3.6.3 (2020-02-29) -- "Holding the Windsock"
Copyright (C) 2020 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> sessionInfo()
R version 3.6.3 (2020-02-29)
Platform: x86_64-pc-linux-gnu (64-bit)
Running under: Ubuntu 18.04.4 LTS

Matrix products: default
BLAS:   /home/geyer/local/current/lib/R/lib/libRblas.so
LAPACK: /home/geyer/local/current/lib/R/lib/libRlapack.so

locale:
 [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C
 [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8
 [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8
 [7] LC_PAPER=en_US.UTF-8       LC_NAME=C
 [9] LC_ADDRESS=C               LC_TELEPHONE=C
[11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C

attached base packages:
[1] stats     graphics  grDevices utils     datasets  methods   base

loaded via a namespace (and not attached):
[1] compiler_3.6.3
> install.packages("aster")
--- Please select a CRAN mirror for use in this session ---
Error in structure(.External(.C_dotTclObjv, objv), class = "tclObj") :
  [tcl] grab failed: window not viewable.
> q()

What's up with that?

-- 
Charles Geyer
Professor, School of Statistics
Resident Fellow, Minnesota Center for Philosophy of Science
University of Minnesota
charlie at stat.umn.edu

	[[alternative HTML version deleted]]


From henr|k@bengt@@on @end|ng |rom gm@||@com  Sat Feb 29 19:13:10 2020
From: henr|k@bengt@@on @end|ng |rom gm@||@com (Henrik Bengtsson)
Date: Sat, 29 Feb 2020 10:13:10 -0800
Subject: [Rd] tcl problem with R-3.6.3?
In-Reply-To: <CAKctRd35HMAbWzE0wwOwX7f6V54aBfXm_HUWi4NCGzfXD3vOWA@mail.gmail.com>
References: <CAKctRd35HMAbWzE0wwOwX7f6V54aBfXm_HUWi4NCGzfXD3vOWA@mail.gmail.com>
Message-ID: <CAFDcVCRLg-TMxsvpZc=X1q8Aq1pRxZHMQjUEn1tDzhK7qVMiQg@mail.gmail.com>

Here's a simpler example that should reproduce that error for you:

  ans <- utils::select.list(c("hello", "world", "again"), graphics=TRUE)

Does it?

FYI, I installed R 3.6.3 from source on CentOS 7 a few hours ago, and
for me the above works just fine.

For your immediate needs of selecting a CRAN mirror, you can set:

options(menu.graphics = FALSE)

as a workaround to skip Tcl-based menus.

/Henrik

On Sat, Feb 29, 2020 at 10:01 AM Charles Geyer <charlie at stat.umn.edu> wrote:
>
> Just built 3.6.3 from source and tcl doesn't work.  Worked fine with the
> same laptop in 3.6.2.  Here's the exact error.
>
> blurfle$ R --vanilla
>
> R version 3.6.3 (2020-02-29) -- "Holding the Windsock"
> Copyright (C) 2020 The R Foundation for Statistical Computing
> Platform: x86_64-pc-linux-gnu (64-bit)
>
> R is free software and comes with ABSOLUTELY NO WARRANTY.
> You are welcome to redistribute it under certain conditions.
> Type 'license()' or 'licence()' for distribution details.
>
>   Natural language support but running in an English locale
>
> R is a collaborative project with many contributors.
> Type 'contributors()' for more information and
> 'citation()' on how to cite R or R packages in publications.
>
> Type 'demo()' for some demos, 'help()' for on-line help, or
> 'help.start()' for an HTML browser interface to help.
> Type 'q()' to quit R.
>
> > sessionInfo()
> R version 3.6.3 (2020-02-29)
> Platform: x86_64-pc-linux-gnu (64-bit)
> Running under: Ubuntu 18.04.4 LTS
>
> Matrix products: default
> BLAS:   /home/geyer/local/current/lib/R/lib/libRblas.so
> LAPACK: /home/geyer/local/current/lib/R/lib/libRlapack.so
>
> locale:
>  [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C
>  [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8
>  [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8
>  [7] LC_PAPER=en_US.UTF-8       LC_NAME=C
>  [9] LC_ADDRESS=C               LC_TELEPHONE=C
> [11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C
>
> attached base packages:
> [1] stats     graphics  grDevices utils     datasets  methods   base
>
> loaded via a namespace (and not attached):
> [1] compiler_3.6.3
> > install.packages("aster")
> --- Please select a CRAN mirror for use in this session ---
> Error in structure(.External(.C_dotTclObjv, objv), class = "tclObj") :
>   [tcl] grab failed: window not viewable.
> > q()
>
> What's up with that?
>
> --
> Charles Geyer
> Professor, School of Statistics
> Resident Fellow, Minnesota Center for Philosophy of Science
> University of Minnesota
> charlie at stat.umn.edu
>
>         [[alternative HTML version deleted]]
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From ch@r||e @end|ng |rom @t@t@umn@edu  Sat Feb 29 19:19:08 2020
From: ch@r||e @end|ng |rom @t@t@umn@edu (Charles Geyer)
Date: Sat, 29 Feb 2020 12:19:08 -0600
Subject: [Rd] tcl problem with R-3.6.3?
In-Reply-To: <CAFDcVCRLg-TMxsvpZc=X1q8Aq1pRxZHMQjUEn1tDzhK7qVMiQg@mail.gmail.com>
References: <CAKctRd35HMAbWzE0wwOwX7f6V54aBfXm_HUWi4NCGzfXD3vOWA@mail.gmail.com>
 <CAFDcVCRLg-TMxsvpZc=X1q8Aq1pRxZHMQjUEn1tDzhK7qVMiQg@mail.gmail.com>
Message-ID: <CAKctRd25N+RSmcncdXC9zZPPVPHS44B_MNLiA66kAfjGAE77jQ@mail.gmail.com>

I knew I could work around.  But this shouldn't happen.

And yes.  Same problem with your example.

blurfle$ R --vanilla

R version 3.6.3 (2020-02-29) -- "Holding the Windsock"
Copyright (C) 2020 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ans <- utils::select.list(c("hello", "world", "again"), graphics=TRUE)
Error in structure(.External(.C_dotTclObjv, objv), class = "tclObj") :
  [tcl] grab failed: window not viewable.
> q()

I didn't bother with sessionInfo() this time.  I presume it would be the
same as before.


AFAIK this is a fully up to date Ubuntu 18.04 box.

On Sat, Feb 29, 2020 at 12:13 PM Henrik Bengtsson <
henrik.bengtsson at gmail.com> wrote:

> Here's a simpler example that should reproduce that error for you:
>
>   ans <- utils::select.list(c("hello", "world", "again"), graphics=TRUE)
>
> Does it?
>
> FYI, I installed R 3.6.3 from source on CentOS 7 a few hours ago, and
> for me the above works just fine.
>
> For your immediate needs of selecting a CRAN mirror, you can set:
>
> options(menu.graphics = FALSE)
>
> as a workaround to skip Tcl-based menus.
>
> /Henrik
>
> On Sat, Feb 29, 2020 at 10:01 AM Charles Geyer <charlie at stat.umn.edu>
> wrote:
> >
> > Just built 3.6.3 from source and tcl doesn't work.  Worked fine with the
> > same laptop in 3.6.2.  Here's the exact error.
> >
> > blurfle$ R --vanilla
> >
> > R version 3.6.3 (2020-02-29) -- "Holding the Windsock"
> > Copyright (C) 2020 The R Foundation for Statistical Computing
> > Platform: x86_64-pc-linux-gnu (64-bit)
> >
> > R is free software and comes with ABSOLUTELY NO WARRANTY.
> > You are welcome to redistribute it under certain conditions.
> > Type 'license()' or 'licence()' for distribution details.
> >
> >   Natural language support but running in an English locale
> >
> > R is a collaborative project with many contributors.
> > Type 'contributors()' for more information and
> > 'citation()' on how to cite R or R packages in publications.
> >
> > Type 'demo()' for some demos, 'help()' for on-line help, or
> > 'help.start()' for an HTML browser interface to help.
> > Type 'q()' to quit R.
> >
> > > sessionInfo()
> > R version 3.6.3 (2020-02-29)
> > Platform: x86_64-pc-linux-gnu (64-bit)
> > Running under: Ubuntu 18.04.4 LTS
> >
> > Matrix products: default
> > BLAS:   /home/geyer/local/current/lib/R/lib/libRblas.so
> > LAPACK: /home/geyer/local/current/lib/R/lib/libRlapack.so
> >
> > locale:
> >  [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C
> >  [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8
> >  [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8
> >  [7] LC_PAPER=en_US.UTF-8       LC_NAME=C
> >  [9] LC_ADDRESS=C               LC_TELEPHONE=C
> > [11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C
> >
> > attached base packages:
> > [1] stats     graphics  grDevices utils     datasets  methods   base
> >
> > loaded via a namespace (and not attached):
> > [1] compiler_3.6.3
> > > install.packages("aster")
> > --- Please select a CRAN mirror for use in this session ---
> > Error in structure(.External(.C_dotTclObjv, objv), class = "tclObj") :
> >   [tcl] grab failed: window not viewable.
> > > q()
> >
> > What's up with that?
> >
> > --
> > Charles Geyer
> > Professor, School of Statistics
> > Resident Fellow, Minnesota Center for Philosophy of Science
> > University of Minnesota
> > charlie at stat.umn.edu
> >
> >         [[alternative HTML version deleted]]
> >
> > ______________________________________________
> > R-devel at r-project.org mailing list
> > https://stat.ethz.ch/mailman/listinfo/r-devel
>


-- 
Charles Geyer
Professor, School of Statistics
Resident Fellow, Minnesota Center for Philosophy of Science
University of Minnesota
charlie at stat.umn.edu

	[[alternative HTML version deleted]]


From m@ech|er @end|ng |rom @t@t@m@th@ethz@ch  Sat Feb 29 20:18:57 2020
From: m@ech|er @end|ng |rom @t@t@m@th@ethz@ch (Martin Maechler)
Date: Sat, 29 Feb 2020 20:18:57 +0100
Subject: [Rd] tcl problem with R-3.6.3?
In-Reply-To: <CAKctRd25N+RSmcncdXC9zZPPVPHS44B_MNLiA66kAfjGAE77jQ@mail.gmail.com>
References: <CAKctRd35HMAbWzE0wwOwX7f6V54aBfXm_HUWi4NCGzfXD3vOWA@mail.gmail.com>
 <CAFDcVCRLg-TMxsvpZc=X1q8Aq1pRxZHMQjUEn1tDzhK7qVMiQg@mail.gmail.com>
 <CAKctRd25N+RSmcncdXC9zZPPVPHS44B_MNLiA66kAfjGAE77jQ@mail.gmail.com>
Message-ID: <24154.47393.802821.819962@stat.math.ethz.ch>

>>>>> Charles Geyer 
>>>>>     on Sat, 29 Feb 2020 12:19:08 -0600 writes:

    > I knew I could work around.  But this shouldn't happen.

I assume   capabilities()    does show a   FALSE   for "tcltk" ?
In such cases, sessionInfo()  may be extended:

> sfsmisc :: sessionInfoX() # returns even more; has a "nice" print() method

Extended  sessionInfo():
-----------------------
Capabilities:
       jpeg         png        tiff       tcltk         X11        aqua 
          X           X           X           X           X           - 
   http/ftp     sockets      libxml        fifo      cledit       iconv 
          X           X           X           X           -           X 
        NLS     profmem       cairo         ICU long.double     libcurl 
          X           -           X           X           X           X 
Sys.info:
nodename                v-lynne
user                    maechler

LAPACK version: 3.9.0 
External software (versions):
zlib                    1.2.11
bzlib                   1.0.6, 6-Sept-2010
xz                      5.2.4
PCRE                    8.43 2019-02-23
ICU                     63.2
TRE                     TRE 0.8.0 R_fixes (BSD)
iconv                   glibc 2.29
readline                8.0
BLAS                    /u/maechler/R/D/r-patched/F30-64-inst/lib/libRblas.so

PCRE (regex) config.: ("UTF-8" = TRUE, "Unicode properties" = TRUE, JIT = TRUE, stack = TRUE) 
R executable linked against libR.* ['is R shared']: FALSE 

R_LIBS:
libPath [.libPaths()] contents in addition to R_LIBS and .Library:
[1] "/usr/local64.sfs/app/R/Bioconductor/library_3.10_F30"
[2] "/usr/local64.sfs/app/R/R_local/library_F30-3.6"      
[3] "/u/maechler/R/x86_64-pc-linux-gnu-library/3.6"       
Main R env. variables (for more, inspect the 'xR.env' component):
                [,1]                           
R_ENVIRON       "/u/maechler/R/Renviron64"     
R_PROFILE       "/u/maechler/R/Rprofile"       
R_CHECK_ENVIRON "/u/maechler/.R/check.Renviron"
---------------- standard sessionInfo():
R version 3.6.3 Patched (2020-02-29 r77878)
Platform: x86_64-pc-linux-gnu (64-bit)
Running under: Fedora 30 (Thirty)

Matrix products: default
BLAS:   /u/maechler/R/D/r-patched/F30-64-inst/lib/libRblas.so
LAPACK: /u/maechler/R/D/r-patched/F30-64-inst/lib/libRlapack.so

locale:
 [1] LC_CTYPE=de_CH.UTF-8       LC_NUMERIC=C              
 [3] LC_TIME=en_US.UTF-8        LC_COLLATE=de_CH.UTF-8    
 [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=de_CH.UTF-8   
 [7] LC_PAPER=de_CH.UTF-8       LC_NAME=C                 
 [9] LC_ADDRESS=C               LC_TELEPHONE=C            
[11] LC_MEASUREMENT=de_CH.UTF-8 LC_IDENTIFICATION=C       

attached base packages:
[1] graphics  grDevices datasets  stats     utils     methods   base     

other attached packages:
[1] fortunes_1.5-4 sfsmisc_1.1-5 

loaded via a namespace (and not attached):
[1] compiler_3.6.3 tools_3.6.3    tcltk_3.6.3   
> 

I'm not seeing any problems on my Linux platforms (all Fedora 30).

Martin

    > And yes.  Same problem with your example.

    > blurfle$ R --vanilla

    > R version 3.6.3 (2020-02-29) -- "Holding the Windsock"
    > Copyright (C) 2020 The R Foundation for Statistical
    > Computing Platform: x86_64-pc-linux-gnu (64-bit)

    > R is free software and comes with ABSOLUTELY NO WARRANTY.
    > You are welcome to redistribute it under certain
    > conditions.  Type 'license()' or 'licence()' for
    > distribution details.

    >   Natural language support but running in an English
    > locale

    > R is a collaborative project with many contributors.  Type
    > 'contributors()' for more information and 'citation()' on
    > how to cite R or R packages in publications.

    > Type 'demo()' for some demos, 'help()' for on-line help,
    > or 'help.start()' for an HTML browser interface to help.
    > Type 'q()' to quit R.

    >> ans <- utils::select.list(c("hello", "world", "again"),
    >> graphics=TRUE)
    > Error in structure(.External(.C_dotTclObjv, objv), class =
    > "tclObj") : [tcl] grab failed: window not viewable.
    >> q()

    > I didn't bother with sessionInfo() this time.  I presume
    > it would be the same as before.


    > AFAIK this is a fully up to date Ubuntu 18.04 box.

    > On Sat, Feb 29, 2020 at 12:13 PM Henrik Bengtsson <
    > henrik.bengtsson at gmail.com> wrote:

    >> Here's a simpler example that should reproduce that error
    >> for you:
    >> 
    >> ans <- utils::select.list(c("hello", "world", "again"),
    >> graphics=TRUE)
    >> 
    >> Does it?
    >> 
    >> FYI, I installed R 3.6.3 from source on CentOS 7 a few
    >> hours ago, and for me the above works just fine.
    >> 
    >> For your immediate needs of selecting a CRAN mirror, you
    >> can set:
    >> 
    >> options(menu.graphics = FALSE)
    >> 
    >> as a workaround to skip Tcl-based menus.
    >> 
    >> /Henrik
    >> 
    >> On Sat, Feb 29, 2020 at 10:01 AM Charles Geyer
    >> <charlie at stat.umn.edu> wrote:
    >> >
    >> > Just built 3.6.3 from source and tcl doesn't work.
    >> Worked fine with the > same laptop in 3.6.2.  Here's the
    >> exact error.
    >> >
    >> > blurfle$ R --vanilla
    >> >
    >> > R version 3.6.3 (2020-02-29) -- "Holding the Windsock"
    >> > Copyright (C) 2020 The R Foundation for Statistical
    >> Computing > Platform: x86_64-pc-linux-gnu (64-bit)
    >> >
    >> > R is free software and comes with ABSOLUTELY NO
    >> WARRANTY.  > You are welcome to redistribute it under
    >> certain conditions.  > Type 'license()' or 'licence()'
    >> for distribution details.
    >> >
    >> > Natural language support but running in an English
    >> locale
    >> >
    >> > R is a collaborative project with many contributors.  >
    >> Type 'contributors()' for more information and >
    >> 'citation()' on how to cite R or R packages in
    >> publications.
    >> >
    >> > Type 'demo()' for some demos, 'help()' for on-line
    >> help, or > 'help.start()' for an HTML browser interface
    >> to help.  > Type 'q()' to quit R.
    >> >
    >> > > sessionInfo() > R version 3.6.3 (2020-02-29) >
    >> Platform: x86_64-pc-linux-gnu (64-bit) > Running under:
    >> Ubuntu 18.04.4 LTS
    >> >
    >> > Matrix products: default > BLAS:
    >> /home/geyer/local/current/lib/R/lib/libRblas.so > LAPACK:
    >> /home/geyer/local/current/lib/R/lib/libRlapack.so
    >> >
    >> > locale: > [1] LC_CTYPE=en_US.UTF-8 LC_NUMERIC=C > [3]
    >> LC_TIME=en_US.UTF-8 LC_COLLATE=en_US.UTF-8 > [5]
    >> LC_MONETARY=en_US.UTF-8 LC_MESSAGES=en_US.UTF-8 > [7]
    >> LC_PAPER=en_US.UTF-8 LC_NAME=C > [9] LC_ADDRESS=C
    >> LC_TELEPHONE=C > [11] LC_MEASUREMENT=en_US.UTF-8
    >> LC_IDENTIFICATION=C
    >> >
    >> > attached base packages: > [1] stats graphics grDevices
    >> utils datasets methods base
    >> >
    >> > loaded via a namespace (and not attached): > [1]
    >> compiler_3.6.3 > > install.packages("aster") > --- Please
    >> select a CRAN mirror for use in this session --- > Error
    >> in structure(.External(.C_dotTclObjv, objv), class =
    >> "tclObj") : > [tcl] grab failed: window not viewable.  >
    >> > q()
    >> >
    >> > What's up with that?
    >> >
    >> > --
    >> > Charles Geyer > Professor, School of Statistics >
    >> Resident Fellow, Minnesota Center for Philosophy of
    >> Science > University of Minnesota > charlie at stat.umn.edu
    >> >
    >> > [[alternative HTML version deleted]]
    >> >
    >> > ______________________________________________ >
    >> R-devel at r-project.org mailing list >
    >> https://stat.ethz.ch/mailman/listinfo/r-devel
    >> 


    > -- 
    > Charles Geyer Professor, School of Statistics Resident
    > Fellow, Minnesota Center for Philosophy of Science
    > University of Minnesota charlie at stat.umn.edu

    > 	[[alternative HTML version deleted]]

    > ______________________________________________
    > R-devel at r-project.org mailing list
    > https://stat.ethz.ch/mailman/listinfo/r-devel


From dmedr| @end|ng |rom gm@||@com  Sat Feb 29 20:24:17 2020
From: dmedr| @end|ng |rom gm@||@com (dmedri)
Date: Sat, 29 Feb 2020 20:24:17 +0100
Subject: [Rd] R 3.6.3 is released
In-Reply-To: <DEBEE59C-5554-4FD1-8E36-7D4B22914CC2@cbs.dk>
Message-ID: <5e5aba62.1c69fb81.2d4e1.d851@mx.google.com>

Or use the Roaster:https://github.com/dmedri/roaster/(feedback is welcome)
-------- Messaggio originale --------Da: Peter Dalgaard via R-devel <r-devel at r-project.org> Data: 29/02/20  10:19  (GMT+01:00) A: r-announce at r-project.org Cc: r-devel <r-devel at r-project.org> Oggetto: [Rd] R 3.6.3 is released The build system rolled up R-3.6.3.tar.gz (codename "Holding the Windsock") this morning.The list below details the changes in this release.You can get the source code fromhttp://cran.r-project.org/src/base/R-3/R-3.6.3.tar.gzor wait for it to be mirrored at a CRAN site nearer to you.Binaries for various platforms will appear in due course.For the R Core Team,Peter DalgaardThese are the checksums (md5 and SHA-256) for the freshly created files, in case you wishto check that they are uncorrupted:MD5 (AUTHORS) = b9c44f9f78cab3184ad9898bebc854b4MD5 (COPYING) = eb723b61539feef013de476e68b5c50aMD5 (COPYING.LIB) = a6f89e2100d9b6cdffcea4f398e37343MD5 (FAQ) = 28a3942a7129877e9af1d5ea16202052MD5 (INSTALL) = 7893f754308ca31f1ccf62055090ad7bMD5 (NEWS) = 2b364f6eaef28e069ab8ed779ee5859dMD5 (NEWS.0) = bfcd7c147251b5474d96848c6f57e5a8MD5 (NEWS.1) = eb78c4d053ec9c32b815cf0c2ebea801MD5 (NEWS.2) = 591dcf615162127f904e4e461f330ce9MD5 (R-latest.tar.gz) = 506c9576ba33e1262ad5b5624db9d96aMD5 (README) = f468f281c919665e276a1b691decbbe6MD5 (RESOURCES) = 529223fd3ffef95731d0a87353108435MD5 (THANKS) = bb45f89c01d509721c47fd41f147da60MD5 (VERSION-INFO.dcf) = d97d382dc5583f9385461d8a4b0ff091MD5 (R-3/R-3.6.3.tar.gz) = 506c9576ba33e1262ad5b5624db9d96a2cde824a7b18958e5f06b391c801c8288be0f84fa8934b7ddefef23c67e60c09? AUTHORSe6d6a009505e345fe949e1310334fcb0747f28dae2856759de102ab66b722cb4? COPYING6095e9ffa777dd22839f7801aa845b31c9ed07f3d6bf8a26dc5d2dec8ccc0ef3? COPYING.LIB38219d9c6221ccfbf075ef03711b420a1aa8731f890c8f2337148b602a217c2d? FAQf87461be6cbaecc4dce44ac58e5bd52364b0491ccdadaf846cb9b452e9550f31? INSTALL50381062bad9aeb4b0c8c4695cb6955c5ff70699fcc821a8e1b340229100278c? NEWS4e21b62f515b749f80997063fceab626d7258c7d650e81a662ba8e0640f12f62? NEWS.012b30c724117b1b2b11484673906a6dcd48a361f69fc420b36194f9218692d01? NEWS.1ca04f78ffe54afa326fe3ed40e7e1411aca0000ed2fa5ead97ddf51c6aa5b7bc? NEWS.289302990d8e8add536e12125ec591d6951022cf8475861b3690bc8bf1cefaa8f? R-latest.tar.gz2fdd3e90f23f32692d4b3a0c0452f2c219a10882033d1774f8cadf25886c3ddc? README408737572ecc6e1135fdb2cf7a9dbb1a6cb27967c757f1771b8c39d1fd2f1ab9? RESOURCES2a8dca916cd92229ef9e328f3610ca204809c262823b860252b42072dac2473a? THANKS20f8bfdfc6302bb2cf9b0fc5424c9a10ac0953096b6c32768ffd106a3fdd4589? VERSION-INFO.dcf89302990d8e8add536e12125ec591d6951022cf8475861b3690bc8bf1cefaa8f? R-3/R-3.6.3.tar.gzThis is the relevant part of the NEWS fileCHANGES IN R 3.6.3:? NEW FEATURES:??? * The included LAPACK has been updated to version 3.9.0 (for the????? included routines, just bug fixes).? BUG FIXES:??? * Fixed a C level integer overflow in rhyper(); reported by????? Benjamin Tyner in PR#17694.??? * Uses of url(gzcon(.)) needing to extend buffer size have failed????? (with HTTP/2 servers), reported by G'abor Cs'ardi.??? * predict(loess(..), se=TRUE) now errors out (instead of????? seg.faulting etc) for large sample sizes, thanks to a report and????? patch by Benjamin Tyner in PR#17121.??? * tools:assertCondition(., "error") and hence assertError() no????? longer return errors twice (invisibly).??? * update(form, new) in the case of a long new formula sometimes????? wrongly eliminated the intercept from form, or (more rarely)????? added a garbage term (or seg.faulted !); the fix happened by????? simplifying the C-level logic of terms.formula().? Reported by????? Mathias Amb"uhl in PR#16326.??? * The error message from stopifnot(.., <error producing call>)????? again contains the full "stopifnot(.......)" call: Its attempted????? suppression did not work consistently.??? * On Windows, download.file(., , "wininet", headers=character())????? would fail; reported with patch proposal by Kevin Ushey in????? PR#17710.-- Peter Dalgaard, Professor,Center for Statistics, Copenhagen Business SchoolSolbjerg Plads 3, 2000 Frederiksberg, DenmarkPhone: (+45)38153501Office: A 4.23Email: pd.mes at cbs.dk? Priv: PDalgd at gmail.com______________________________________________R-devel@r-project.org mailing listhttps://stat.ethz.ch/mailman/listinfo/r-devel
	[[alternative HTML version deleted]]


From h@nk|n@rob|n @end|ng |rom gm@||@com  Sat Feb 29 21:26:24 2020
From: h@nk|n@rob|n @end|ng |rom gm@||@com (robin hankin)
Date: Sun, 1 Mar 2020 09:26:24 +1300
Subject: [Rd] dput()
In-Reply-To: <e3faa734-0db4-760d-ef1e-4f85e2382542@gmail.com>
References: <CAHHjBM6zFE+UQrLeVT+gMD7R-jbHco+cygkAB+JR4P2cCik6bg@mail.gmail.com>
 <a0c1898c-2dac-cdd5-ff4b-5c91a30b065f@sapo.pt>
 <4d7acddc-485f-2de8-d802-e382b8f861be@gmail.com>
 <e3faa734-0db4-760d-ef1e-4f85e2382542@gmail.com>
Message-ID: <CAHHjBM7uyFM+zZG=TFxmtahi1mKNnjsvbvhHnzv2xS2OpRVRgA@mail.gmail.com>

 Thanks guys, I guess I should have referred to FAQ 7.31 (which I am
indeed very familiar with) to avoid misunderstanding.  I have always
used dput() to clarify 7.31-type issues.

The description in ?dput implies [to me at any rate] that there will
be no floating-point roundoff in its output.  I hadn't realised that
'deparsing' as discussed in dput.Rd includes precision roundoff
issues.

I guess the question I should have asked is close to Ben's: "How to
force dput() to return an exact representation of a floating point
number?".  Duncan's reply is the insight I was missing: exact decimal
representation of a double might not be possible (this had not
occurred to me).  Also, Duncan's suggestion of control = c("all",
"hexNumeric") looks good and I will experiment with this.

Best wishes

Robin




On Sun, Mar 1, 2020 at 6:22 AM Duncan Murdoch <murdoch.duncan at gmail.com> wrote:
>
> On 29/02/2020 4:19 a.m., Ben Bolker wrote:
> >
> >   I think Robin knows about FAQ 7.31/floating point (author of
> > 'Brobdingnag', among other numerical packages).  I agree that this is
> > surprising (to me).
> >
> >    To reframe this question: is there way to get an *exact* ASCII
> > representation of a numeric value (i.e., guaranteeing the restored value
> > is identical() to the original) ?
> >
> >   .deparseOpts has
> >
> > ?"digits17"?: Real and finite complex numbers are output using
> >            format ?"%.17g"? which may give more precision than the
> >            default (but the output will depend on the platform and there
> >            may be loss of precision when read back).
> >
> >    ... but this still doesn't guarantee that all precision is kept.
>
> "Using control = c("all", "hexNumeric") comes closest to making
> deparse() an inverse of parse(), as representing double and complex
> numbers as decimals may well not be exact. However, not all objects are
> deparse-able even with this option. A warning will be issued if the
> function recognizes that it is being asked to do the impossible."
>
> >
> >    Maybe
> >
> >   saveRDS(x,textConnection("out","w"),ascii=TRUE)
> > identical(x,as.numeric(out[length(out)]))   ## TRUE
> >
> > ?
> >
> >
> >
> >
> > On 2020-02-29 2:42 a.m., Rui Barradas wrote:
> >> Hello,
> >>
> >> FAQ 7.31
> >>
> >> See also this StackOverflow post:
> >>
> >> https://stackoverflow.com/questions/9508518/why-are-these-numbers-not-equal
> >>
> >> Hope this helps,
> >>
> >> Rui Barradas
> >>
> >> ?s 00:08 de 29/02/20, robin hankin escreveu:
> >>> My interpretation of dput.Rd is that dput() gives an exact ASCII form
> >>> of the internal representation of an R object.  But:
> >>>
> >>>    rhankin at cuttlefish:~ $ R --version
> >>> R version 3.6.2 (2019-12-12) -- "Dark and Stormy Night"
> >>> Copyright (C) 2019 The R Foundation for Statistical Computing
> >>> Platform: x86_64-pc-linux-gnu (64-bit)
> >>>
> >>> [snip]
> >>>
> >>> rhankin at cuttlefish:~ $ R --vanilla --quiet
> >>>> x <- sum(dbinom(0:20,20,0.35))
> >>>> dput(x)
> >>> 1
> >>>> x-1
> >>> [1] -4.440892e-16
> >>>>
> >>>> x==1
> >>> [1] FALSE
> >>>>
> >>>
> >>> So, dput(x) gives 1, but x is not equal to 1.  Can anyone advise?
> >>>
> >>> ______________________________________________
> >>> R-devel at r-project.org mailing list
> >>> https://stat.ethz.ch/mailman/listinfo/r-devel
> >>>
> >>
> >> ______________________________________________
> >> R-devel at r-project.org mailing list
> >> https://stat.ethz.ch/mailman/listinfo/r-devel
> >
> > ______________________________________________
> > R-devel at r-project.org mailing list
> > https://stat.ethz.ch/mailman/listinfo/r-devel
> >
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From edd @end|ng |rom deb|@n@org  Sat Feb 29 22:04:46 2020
From: edd @end|ng |rom deb|@n@org (Dirk Eddelbuettel)
Date: Sat, 29 Feb 2020 15:04:46 -0600
Subject: [Rd] tcl problem with R-3.6.3?
In-Reply-To: <CAKctRd25N+RSmcncdXC9zZPPVPHS44B_MNLiA66kAfjGAE77jQ@mail.gmail.com>
References: <CAKctRd35HMAbWzE0wwOwX7f6V54aBfXm_HUWi4NCGzfXD3vOWA@mail.gmail.com>
 <CAFDcVCRLg-TMxsvpZc=X1q8Aq1pRxZHMQjUEn1tDzhK7qVMiQg@mail.gmail.com>
 <CAKctRd25N+RSmcncdXC9zZPPVPHS44B_MNLiA66kAfjGAE77jQ@mail.gmail.com>
Message-ID: <24154.53742.260945.180539@rob.eddelbuettel.com>


Charles,

Did you try a build of the provided alpha, beta and rc releases made
available to allow you to ensure that the released version would build and
perform as expected?

FWIW the new 3.6.3 made ~ 12 hours ago are already available for Debian,
built for the Ubuntu backports at CRAN (thanks to Michael) and also in the
base Rocker container behaves as expected (and as the one RC build did):

edd at rob:~$ docker run --rm -ti rocker/r-base

R version 3.6.3 (2020-02-29) -- "Holding the Windsock"
Copyright (C) 2020 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> capabilities()
       jpeg         png        tiff       tcltk         X11        aqua 
       TRUE        TRUE        TRUE        TRUE       FALSE       FALSE 
   http/ftp     sockets      libxml        fifo      cledit       iconv 
       TRUE        TRUE        TRUE        TRUE        TRUE        TRUE 
        NLS     profmem       cairo         ICU long.double     libcurl 
       TRUE        TRUE        TRUE        TRUE        TRUE        TRUE 
>


And (to echo Martin Maechler) tcltk comes up as TRUE as it should.

Dirk

-- 
http://dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org


From ch@r||e @end|ng |rom @t@t@umn@edu  Sat Feb 29 22:33:50 2020
From: ch@r||e @end|ng |rom @t@t@umn@edu (Charles Geyer)
Date: Sat, 29 Feb 2020 15:33:50 -0600
Subject: [Rd] tcl problem with R-3.6.3?
In-Reply-To: <24154.53742.260945.180539@rob.eddelbuettel.com>
References: <CAKctRd35HMAbWzE0wwOwX7f6V54aBfXm_HUWi4NCGzfXD3vOWA@mail.gmail.com>
 <CAFDcVCRLg-TMxsvpZc=X1q8Aq1pRxZHMQjUEn1tDzhK7qVMiQg@mail.gmail.com>
 <CAKctRd25N+RSmcncdXC9zZPPVPHS44B_MNLiA66kAfjGAE77jQ@mail.gmail.com>
 <24154.53742.260945.180539@rob.eddelbuettel.com>
Message-ID: <CAKctRd38bnP+=Gq-GJxpJjfV71eJDSf8DCcK9N6=xLt73J2Vjg@mail.gmail.com>

No. I didn't do any of that and am now at a hockey game.  But since I can't
reproduce the problem after an Ubuntu online update and reboot, I assume
the issue is moot.  But I will check these things in an hour or so.

On Sat, Feb 29, 2020, 3:24 PM Dirk Eddelbuettel <edd at debian.org> wrote:

>
> Charles,
>
> Did you try a build of the provided alpha, beta and rc releases made
> available to allow you to ensure that the released version would build and
> perform as expected?
>
> FWIW the new 3.6.3 made ~ 12 hours ago are already available for Debian,
> built for the Ubuntu backports at CRAN (thanks to Michael) and also in the
> base Rocker container behaves as expected (and as the one RC build did):
>
> edd at rob:~$ docker run --rm -ti rocker/r-base
>
> R version 3.6.3 (2020-02-29) -- "Holding the Windsock"
> Copyright (C) 2020 The R Foundation for Statistical Computing
> Platform: x86_64-pc-linux-gnu (64-bit)
>
> R is free software and comes with ABSOLUTELY NO WARRANTY.
> You are welcome to redistribute it under certain conditions.
> Type 'license()' or 'licence()' for distribution details.
>
>   Natural language support but running in an English locale
>
> R is a collaborative project with many contributors.
> Type 'contributors()' for more information and
> 'citation()' on how to cite R or R packages in publications.
>
> Type 'demo()' for some demos, 'help()' for on-line help, or
> 'help.start()' for an HTML browser interface to help.
> Type 'q()' to quit R.
>
> > capabilities()
>        jpeg         png        tiff       tcltk         X11        aqua
>        TRUE        TRUE        TRUE        TRUE       FALSE       FALSE
>    http/ftp     sockets      libxml        fifo      cledit       iconv
>        TRUE        TRUE        TRUE        TRUE        TRUE        TRUE
>         NLS     profmem       cairo         ICU long.double     libcurl
>        TRUE        TRUE        TRUE        TRUE        TRUE        TRUE
> >
>
>
> And (to echo Martin Maechler) tcltk comes up as TRUE as it should.
>
> Dirk
>
> --
> http://dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org
>

	[[alternative HTML version deleted]]


