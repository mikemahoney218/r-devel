From spencer.graves at structuremonitoring.com  Mon Jul  1 07:28:06 2013
From: spencer.graves at structuremonitoring.com (Spencer Graves)
Date: Sun, 30 Jun 2013 22:28:06 -0700
Subject: [Rd] tests conditioned on CRAN?
Message-ID: <51D11366.6070906@structuremonitoring.com>

Hello:


       What is the recommended procedure for skipping long tests in "R 
CMD check --as-cran"?


       Some time ago, after a discussion on this list, I added the 
following function to the fda package:


CRAN <- function (x = "_R_CHECK_TIMINGS_") {
     x. <- Sys.getenv(x)
     nchar(as.character(x.)) > 0
}


       However, it does not seem to be working with R 3.0.1.  I know 
this, because the time to compute the examples in findFn.Rd in the sos 
package did not drop after I wrapped all the examples in the following:


if(!CRAN()){

...

}


       Thanks,
       Spencer


From hb at biostat.ucsf.edu  Mon Jul  1 10:31:24 2013
From: hb at biostat.ucsf.edu (Henrik Bengtsson)
Date: Mon, 1 Jul 2013 10:31:24 +0200
Subject: [Rd] tests conditioned on CRAN?
In-Reply-To: <51D11366.6070906@structuremonitoring.com>
References: <51D11366.6070906@structuremonitoring.com>
Message-ID: <CAFDcVCR8mOAJ8TgCADF2wZWnEe82yMQVasLfRs8w7wa6_RXTLw@mail.gmail.com>

"On CRAN servers" or ""R CMD check --as-cran"?  I assume you mean the
former.  The way I do it is "the other way around", i.e. to condition
on running locally or not such that the default is not to run or to
run a smaller test case:

if (Sys.getenv("_R_CHECK_FULL_") == "") {
  # Default/no test
} else {
  # Full test
}

Note, _R_CHECK_FULL_ is inspired by the other _R_CHECK_*_ flags, but
it's not an official one.  Since the CRAN servers don't define
_R_CHECK_FULL_, you can be fairly sure this works as you want.  Making
assumptions on which flags CRAN use at any time/in the future is a
much harder task.

/Henrik


On Mon, Jul 1, 2013 at 7:28 AM, Spencer Graves
<spencer.graves at structuremonitoring.com> wrote:
> Hello:
>
>
>       What is the recommended procedure for skipping long tests in "R CMD
> check --as-cran"?
>
>
>       Some time ago, after a discussion on this list, I added the following
> function to the fda package:
>
>
> CRAN <- function (x = "_R_CHECK_TIMINGS_") {
>     x. <- Sys.getenv(x)
>     nchar(as.character(x.)) > 0
> }
>
>
>       However, it does not seem to be working with R 3.0.1.  I know this,
> because the time to compute the examples in findFn.Rd in the sos package did
> not drop after I wrapped all the examples in the following:
>
>
> if(!CRAN()){
>
> ...
>
> }
>
>
>       Thanks,
>       Spencer
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From weigand.stephen at gmail.com  Mon Jul  1 17:37:01 2013
From: weigand.stephen at gmail.com (Stephen Weigand)
Date: Mon, 1 Jul 2013 10:37:01 -0500
Subject: [Rd] dotchart.R and left margin
Message-ID: <CAPaK=1GxqTJftxSy0tRRkBtwiQrMdm8PtjtovKWUTf0ppJwrog@mail.gmail.com>

Hello,

In trying to minimize the margin on the left hand side when using
dotchart I found what may be a typo in the code.

In the lines below from dotchart.R, should nmai[4L] be nmai[2L]?


    if (!(is.null(labels) && is.null(glabels))) {
nmai <- par("mai")
nmai[2L] <- nmai[4L] + max(linch + goffset, ginch) + 0.1
par(mai = nmai)
    }


Thank you,

Stephen Weigand

--
Rochester, Minn. USA


From therneau at mayo.edu  Mon Jul  1 22:51:43 2013
From: therneau at mayo.edu (Terry Therneau)
Date: Mon, 01 Jul 2013 15:51:43 -0500
Subject: [Rd] Problem with anova and the new abbreviation restrictions
Message-ID: <51D1EBDF.9050307@mayo.edu>

An unwanted side effect of the new restrictions on abrreviated names.

The anova.coxph command, in a slavish copy of anova.lm etc, returns a data frame with 
column labels of
     loglik  Chisq  Df  Pr(>|Chi|)

If one tries to extract the final column of the table errors result since it is not a 
standard R variable name.

 > afit <- anova(lm(conc ~ uptake, CO2))
 > afit$P
[1] 2.905607e-06           NA
Warning message:
In `$.data.frame`(afit, P) : Name partially matched in data frame
 > afit$Pr(>F)
Error: unexpected '>' in "afit$Pr(>"

The second is a result of allowing TAB completion of the name.

Yes, experienced folks can sneak around it, but should this be upgraded to match and "ease 
of use" criteria?  Add an [.anova subscript method that allows for shortened names?

I'm still in favor of an option() that controls this new behavior with values of "allow", 
"warn", and "error" so that I can at least turn it off for me.  (I work on many data sets 
created by SAS programmers that are in love with excessively long names, and use batch 
scripts so name completion isn't avail during script creation).  But this is more local to 
me, and does not address the primary question above in a general way.

Terry T


From h.wickham at gmail.com  Mon Jul  1 23:01:22 2013
From: h.wickham at gmail.com (Hadley Wickham)
Date: Mon, 1 Jul 2013 16:01:22 -0500
Subject: [Rd] Problem with anova and the new abbreviation restrictions
In-Reply-To: <51D1EBDF.9050307@mayo.edu>
References: <51D1EBDF.9050307@mayo.edu>
Message-ID: <CABdHhvGYarcJ83fk9D2Dt0Wu1hQCr=1ZowQxy+X8uaET5RH-YQ@mail.gmail.com>

On Mon, Jul 1, 2013 at 3:51 PM, Terry Therneau <therneau at mayo.edu> wrote:
> An unwanted side effect of the new restrictions on abrreviated names.
>
> The anova.coxph command, in a slavish copy of anova.lm etc, returns a data
> frame with column labels of
>     loglik  Chisq  Df  Pr(>|Chi|)
>
> If one tries to extract the final column of the table errors result since it
> is not a standard R variable name.
>
>> afit <- anova(lm(conc ~ uptake, CO2))
>> afit$P
> [1] 2.905607e-06           NA
> Warning message:
> In `$.data.frame`(afit, P) : Name partially matched in data frame

I think it's reasonable to emit a warning in that case, although it
would be more useful to say:

Warning message:
P partially matched to `Pr(>|Chi|)` in data frame

Hadley

--
Chief Scientist, RStudio
http://had.co.nz/


From hpages at fhcrc.org  Tue Jul  2 00:51:51 2013
From: hpages at fhcrc.org (=?ISO-8859-1?Q?Herv=E9_Pag=E8s?=)
Date: Mon, 01 Jul 2013 15:51:51 -0700
Subject: [Rd] relist() is broken when the skeleton is a list with empty
 list elements
In-Reply-To: <51B259C6.8090302@fhcrc.org>
References: <51B259C6.8090302@fhcrc.org>
Message-ID: <51D20807.2080802@fhcrc.org>

Hi,

On 06/07/2013 03:08 PM, Herv? Pag?s wrote:
> Hi,
>
> relist() is broken when the skeleton is a list with empty list elements:
>
>    > x <- list(1:3, integer(0), 11:14)
>
>    > relist(unlist(x), x)
>    [[1]]
>    [1] 1 2 3
>
>    [[2]]
>    [1] 11  3
>
>    [[3]]
>    [1] 11 12 13 14
>
> Hard to believe that such a bug has been around for 6 years (i.e. since
> the introduction of relist()) without ever being noticed.

This bug has actually been noticed. Just found out it was already
reported by Michael Lawrence 2 years ago:

 
https://stat.ethz.ch/pipermail/r-devel/attachments/20110811/4bbaa84f/attachment.pl

Any chance it can be fixed?

Below is the patch against current R-devel if that helps (it fixes
relist.list and relist.matrix which are both broken in the same way).

Thanks,
H.


hpages at thinkpad:~/svn/R/R-devel$ svn diff
Index: src/library/utils/R/relist.R
===================================================================
--- src/library/utils/R/relist.R	(revision 63132)
+++ src/library/utils/R/relist.R	(working copy)
@@ -119,13 +119,13 @@

  relist.list <- function(flesh, skeleton=attr(flesh, "skeleton"))
  {
-    ind <- 1L
+    offset <- 0L
      result <- skeleton
      for (i in seq_along(skeleton)) {
  	size <- length(unlist(result[[i]]))
  	result[[i]] <-
-	    relist(flesh[ind:(ind + size - 1L)], result[[i]])
-	ind <- ind + size
+	    relist(flesh[seq_len(size) + offset], result[[i]])
+	offset <- offset + size
      }
      result
  }
@@ -139,13 +139,13 @@
      n <- nrow(skeleton)
      m <- ncol(skeleton)
      result <- skeleton
-    ind <- 1L
-    for (j in 1L:m)
-	for (i in 1L:n) {
+    offset <- 0L
+    for (j in seq_len(m))
+	for (i in seq_len(n)) {
  	    size <- length(unlist(skeleton[[i, j]]))
-	    result[[i, j]] <- relist(flesh[ind:(ind + size - 1)],
+	    result[[i, j]] <- relist(flesh[seq_len(size) + offset],
  				     skeleton[[i, j]])
-	    ind <- ind + size
+	    offset <- offset + size
  	}
      result
  }


>
> Cheers,
> H.
>
>  > sessionInfo()
> R version 3.0.1 (2013-05-16)
> Platform: x86_64-unknown-linux-gnu (64-bit)
>
> locale:
>   [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C
>   [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8
>   [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8
>   [7] LC_PAPER=C                 LC_NAME=C
>   [9] LC_ADDRESS=C               LC_TELEPHONE=C
> [11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C
>
> attached base packages:
> [1] stats     graphics  grDevices utils     datasets  methods   base
>

-- 
Herv? Pag?s

Program in Computational Biology
Division of Public Health Sciences
Fred Hutchinson Cancer Research Center
1100 Fairview Ave. N, M1-B514
P.O. Box 19024
Seattle, WA 98109-1024

E-mail: hpages at fhcrc.org
Phone:  (206) 667-5791
Fax:    (206) 667-1319


From peter.meilstrup at gmail.com  Tue Jul  2 05:56:54 2013
From: peter.meilstrup at gmail.com (Peter Meilstrup)
Date: Mon, 1 Jul 2013 20:56:54 -0700
Subject: [Rd] Problem with anova and the new abbreviation restrictions
In-Reply-To: <51D1EBDF.9050307@mayo.edu>
References: <51D1EBDF.9050307@mayo.edu>
Message-ID: <CAJoaRhbXgDN_aTwvcBcO3rmEk8VEEPVyG5_Bh4dUJCeiwtEWcQ@mail.gmail.com>

An embedded and charset-unspecified text was scrubbed...
Name: not available
URL: <https://stat.ethz.ch/pipermail/r-devel/attachments/20130701/2c0366e3/attachment.pl>

From vobencha at fhcrc.org  Tue Jul  2 07:04:34 2013
From: vobencha at fhcrc.org (Valerie Obenchain)
Date: Mon, 01 Jul 2013 22:04:34 -0700
Subject: [Rd] cache most-recent dispatch
In-Reply-To: <51D255CC.1050300@fhcrc.org>
References: <51D255CC.1050300@fhcrc.org>
Message-ID: <51D25F62.6050102@fhcrc.org>

Hi,

S4 method dispatch can be very slow. Would it be reasonable to cache the 
most
recent dispatch, anticipating the next invocation will be on the same 
type? This
would be very helpful in loops.

   fun0 <- function(x)
       sapply(x, paste, collapse="+")
   fun1 <- function(x) {
       paste <- selectMethod(paste, class(x[[1]]))
       sapply(x, paste, collapse="+")
   }
   lst <- split(rep(LETTERS, 100), rep(1:1300, 2))

   library(microbenchmark)
   microbenchmark(fun0(lst), times=10)
   ## Unit: milliseconds
   ##       expr      min       lq   median      uq      max neval
   ##  fun0(lst) 4.153287 4.180659 4.513539 5.19261 5.280481    10

   setGeneric("paste")
   microbenchmark(fun0(lst), fun1(lst), times=10)
   ## >     microbenchmark(fun0(lst), fun1(lst), times=10)
   ## Unit: milliseconds
   ##       expr       min       lq    median        uq       max neval
   ##  fun0(lst) 21.093180 21.27616 21.453174 21.833686 24.758791    10
   ##  fun1(lst)  4.517808  4.53067  4.582641  4.682235  5.121856    10

Dispatch seems to be especially slow when packages are involved, e.g.,
with the Bioconductor IRanges package
(http://bioconductor.org/packages/release/bioc/html/IRanges.html)

   removeGeneric("paste")
   library(IRanges)
   showMethods(paste)
   ## Function: paste (package BiocGenerics)
   ## ...="ANY"
   ## ...="Rle"
   selectMethod(paste, "ANY")
   ## Method Definition (Class "derivedDefaultMethod"):
   ##
   ## function (..., sep = " ", collapse = NULL)
   ## .Internal(paste(list(...), sep, collapse))
   ## <environment: namespace:base>
   ##
   ## Signatures:
   ##         ...
   ## target  "ANY"
   ## defined "ANY"

   microbenchmark(fun0(lst), fun1(lst), times=10)
   ## Unit: milliseconds
   ##       expr        min         lq     median         uq        max 
neval
   ##  fun0(lst) 233.539585 234.592491 236.311209 237.268506 243.181123 
    10
   ##  fun1(lst)   4.564914   4.592996   4.642898   4.729009   5.492706 
    10

   sessionInfo()
   ## R version 3.0.0 Patched (2013-04-04 r62492)
   ## Platform: x86_64-unknown-linux-gnu (64-bit)
   ##
   ## locale:
   ##  [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C
   ##  [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8
   ##  [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8
   ##  [7] LC_PAPER=C                 LC_NAME=C
   ##  [9] LC_ADDRESS=C               LC_TELEPHONE=C
   ## [11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C
   ##
   ## attached base packages:
   ## [1] parallel  stats     graphics  grDevices utils     datasets 
methods
   ## [8] base
   ##
   ## other attached packages:
   ## [1] IRanges_1.19.15      BiocGenerics_0.7.2   microbenchmark_1.3-0
   ##
   ## loaded via a namespace (and not attached):
   ## [1] stats4_3.0.0


Thanks,
Valerie


From hpages at fhcrc.org  Tue Jul  2 07:59:05 2013
From: hpages at fhcrc.org (=?windows-1252?Q?Herv=E9_Pag=E8s?=)
Date: Mon, 01 Jul 2013 22:59:05 -0700
Subject: [Rd] cache most-recent dispatch
In-Reply-To: <51D25F62.6050102@fhcrc.org>
References: <51D255CC.1050300@fhcrc.org> <51D25F62.6050102@fhcrc.org>
Message-ID: <51D26C29.80605@fhcrc.org>

Hi Val,

[off list... I don't want to compromise your chances to start a
constructive discussion ;-)]

Thanks for reporting this. Just wanted to mention that the reason I
think the situation is worst when you use the paste() generic defined
in BiocGenerics than when you make paste() a generic with
setGeneric("paste") is because of the signature of the generic.
With the latter dispatch is on the 'sep' and 'collapse' args only
(which is surprising but that's another story), while
with the former it's on ...:

   > setGeneric("paste")
   [1] "paste"

   > paste
   standardGeneric for "paste" defined from package "base"

   function (..., sep = " ", collapse = NULL)
   standardGeneric("paste")
   <environment: 0x157a028>
   Methods may be defined for arguments: sep, collapse
   Use  showMethods("paste")  for currently available ones.

   ## Note that showMethods() is broken (it contradicts the above
   ## that indicates dispatch is on 'sep' and 'collapse').
   > showMethods("paste")
   Function: paste (package base)
   ...="ANY"

   > microbenchmark(fun0(lst), fun1(lst), times=10)
   Unit: milliseconds
         expr       min        lq    median        uq       max neval
    fun0(lst) 27.374228 27.508580 28.144858 28.895889 33.528221    10
    fun1(lst)  5.474173  5.739289  5.803471  6.050482  6.825982    10

   > removeGeneric("paste")
   [1] TRUE

   > setGeneric("paste", signature="...")  # this how it's defined in 
BiocGenerics
   Creating a new generic function for ?paste? in the global environment
   [1] "paste"

   > microbenchmark(fun0(lst), fun1(lst), times=10)
   Unit: milliseconds
         expr        min         lq     median         uq        max neval
    fun0(lst) 149.828201 153.192866 155.845508 157.916067 176.313906    10
    fun1(lst)   4.924387   5.088094   5.114532   5.200432   5.332386    10

Dispatch on ... seems to have a ridiculously high cost!

H.

On 07/01/2013 10:04 PM, Valerie Obenchain wrote:
> Hi,
>
> S4 method dispatch can be very slow. Would it be reasonable to cache the
> most
> recent dispatch, anticipating the next invocation will be on the same
> type? This
> would be very helpful in loops.
>
>    fun0 <- function(x)
>        sapply(x, paste, collapse="+")
>    fun1 <- function(x) {
>        paste <- selectMethod(paste, class(x[[1]]))
>        sapply(x, paste, collapse="+")
>    }
>    lst <- split(rep(LETTERS, 100), rep(1:1300, 2))
>
>    library(microbenchmark)
>    microbenchmark(fun0(lst), times=10)
>    ## Unit: milliseconds
>    ##       expr      min       lq   median      uq      max neval
>    ##  fun0(lst) 4.153287 4.180659 4.513539 5.19261 5.280481    10
>
>    setGeneric("paste")
>    microbenchmark(fun0(lst), fun1(lst), times=10)
>    ## >     microbenchmark(fun0(lst), fun1(lst), times=10)
>    ## Unit: milliseconds
>    ##       expr       min       lq    median        uq       max neval
>    ##  fun0(lst) 21.093180 21.27616 21.453174 21.833686 24.758791    10
>    ##  fun1(lst)  4.517808  4.53067  4.582641  4.682235  5.121856    10
>
> Dispatch seems to be especially slow when packages are involved, e.g.,
> with the Bioconductor IRanges package
> (http://bioconductor.org/packages/release/bioc/html/IRanges.html)
>
>    removeGeneric("paste")
>    library(IRanges)
>    showMethods(paste)
>    ## Function: paste (package BiocGenerics)
>    ## ...="ANY"
>    ## ...="Rle"
>    selectMethod(paste, "ANY")
>    ## Method Definition (Class "derivedDefaultMethod"):
>    ##
>    ## function (..., sep = " ", collapse = NULL)
>    ## .Internal(paste(list(...), sep, collapse))
>    ## <environment: namespace:base>
>    ##
>    ## Signatures:
>    ##         ...
>    ## target  "ANY"
>    ## defined "ANY"
>
>    microbenchmark(fun0(lst), fun1(lst), times=10)
>    ## Unit: milliseconds
>    ##       expr        min         lq     median         uq        max
> neval
>    ##  fun0(lst) 233.539585 234.592491 236.311209 237.268506 243.181123
>     10
>    ##  fun1(lst)   4.564914   4.592996   4.642898   4.729009   5.492706
>     10
>
>    sessionInfo()
>    ## R version 3.0.0 Patched (2013-04-04 r62492)
>    ## Platform: x86_64-unknown-linux-gnu (64-bit)
>    ##
>    ## locale:
>    ##  [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C
>    ##  [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8
>    ##  [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8
>    ##  [7] LC_PAPER=C                 LC_NAME=C
>    ##  [9] LC_ADDRESS=C               LC_TELEPHONE=C
>    ## [11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C
>    ##
>    ## attached base packages:
>    ## [1] parallel  stats     graphics  grDevices utils     datasets
> methods
>    ## [8] base
>    ##
>    ## other attached packages:
>    ## [1] IRanges_1.19.15      BiocGenerics_0.7.2   microbenchmark_1.3-0
>    ##
>    ## loaded via a namespace (and not attached):
>    ## [1] stats4_3.0.0
>
>
> Thanks,
> Valerie
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel

-- 
Herv? Pag?s

Program in Computational Biology
Division of Public Health Sciences
Fred Hutchinson Cancer Research Center
1100 Fairview Ave. N, M1-B514
P.O. Box 19024
Seattle, WA 98109-1024

E-mail: hpages at fhcrc.org
Phone:  (206) 667-5791
Fax:    (206) 667-1319


From jmc at r-project.org  Tue Jul  2 17:41:51 2013
From: jmc at r-project.org (John Chambers)
Date: Tue, 02 Jul 2013 08:41:51 -0700
Subject: [Rd] cache most-recent dispatch
In-Reply-To: <51D25F62.6050102@fhcrc.org>
References: <51D255CC.1050300@fhcrc.org> <51D25F62.6050102@fhcrc.org>
Message-ID: <51D2F4BF.8080903@r-project.org>

It's hard to see how repeated dispatch on the same classes can be that 
slow, _if_ the function being called each time is itself doing some 
substantial work.

The first call (in a session) with a particular signature searches for 
inherited methods and stores the method found in a table.  The following 
calls with that signature should do a single lookup in a hash table. 
Caching the last signature is unlikely to be dramatically faster, but we 
can experiment and see.

What is substantially different is calling a generic function vs calling 
a primitive or internal.  If the local paste you constructed is the 
default, base::paste, that is a .Internal.

Not going through the R generic function several thousand times would 
make a difference.

It's a fundamental point about R that function calls do enough work that 
they add significant time to a "trivial" computation, such as a 
primitive call.  There are various efforts going on these days to 
provide more efficient alternatives.  They're all helpful; my personal 
favorite when the game is worth it is to consider doing key computations 
in a seriously faster language, like C++ via Rcpp.

John

On 7/1/13 10:04 PM, Valerie Obenchain wrote:
> Hi,
>
> S4 method dispatch can be very slow. Would it be reasonable to cache the
> most
> recent dispatch, anticipating the next invocation will be on the same
> type? This
> would be very helpful in loops.
>
>    fun0 <- function(x)
>        sapply(x, paste, collapse="+")
>    fun1 <- function(x) {
>        paste <- selectMethod(paste, class(x[[1]]))
>        sapply(x, paste, collapse="+")
>    }
>    lst <- split(rep(LETTERS, 100), rep(1:1300, 2))
>
>    library(microbenchmark)
>    microbenchmark(fun0(lst), times=10)
>    ## Unit: milliseconds
>    ##       expr      min       lq   median      uq      max neval
>    ##  fun0(lst) 4.153287 4.180659 4.513539 5.19261 5.280481    10
>
>    setGeneric("paste")
>    microbenchmark(fun0(lst), fun1(lst), times=10)
>    ## >     microbenchmark(fun0(lst), fun1(lst), times=10)
>    ## Unit: milliseconds
>    ##       expr       min       lq    median        uq       max neval
>    ##  fun0(lst) 21.093180 21.27616 21.453174 21.833686 24.758791    10
>    ##  fun1(lst)  4.517808  4.53067  4.582641  4.682235  5.121856    10
>
> Dispatch seems to be especially slow when packages are involved, e.g.,
> with the Bioconductor IRanges package
> (http://bioconductor.org/packages/release/bioc/html/IRanges.html)
>
>    removeGeneric("paste")
>    library(IRanges)
>    showMethods(paste)
>    ## Function: paste (package BiocGenerics)
>    ## ...="ANY"
>    ## ...="Rle"
>    selectMethod(paste, "ANY")
>    ## Method Definition (Class "derivedDefaultMethod"):
>    ##
>    ## function (..., sep = " ", collapse = NULL)
>    ## .Internal(paste(list(...), sep, collapse))
>    ## <environment: namespace:base>
>    ##
>    ## Signatures:
>    ##         ...
>    ## target  "ANY"
>    ## defined "ANY"
>
>    microbenchmark(fun0(lst), fun1(lst), times=10)
>    ## Unit: milliseconds
>    ##       expr        min         lq     median         uq        max
> neval
>    ##  fun0(lst) 233.539585 234.592491 236.311209 237.268506 243.181123
>     10
>    ##  fun1(lst)   4.564914   4.592996   4.642898   4.729009   5.492706
>     10
>
>    sessionInfo()
>    ## R version 3.0.0 Patched (2013-04-04 r62492)
>    ## Platform: x86_64-unknown-linux-gnu (64-bit)
>    ##
>    ## locale:
>    ##  [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C
>    ##  [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8
>    ##  [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8
>    ##  [7] LC_PAPER=C                 LC_NAME=C
>    ##  [9] LC_ADDRESS=C               LC_TELEPHONE=C
>    ## [11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C
>    ##
>    ## attached base packages:
>    ## [1] parallel  stats     graphics  grDevices utils     datasets
> methods
>    ## [8] base
>    ##
>    ## other attached packages:
>    ## [1] IRanges_1.19.15      BiocGenerics_0.7.2   microbenchmark_1.3-0
>    ##
>    ## loaded via a namespace (and not attached):
>    ## [1] stats4_3.0.0
>
>
> Thanks,
> Valerie
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From ronglli at cn.ibm.com  Tue Jul  2 17:46:02 2013
From: ronglli at cn.ibm.com (Rong lI Li)
Date: Tue, 2 Jul 2013 23:46:02 +0800
Subject: [Rd] Ctrl+C in R will terminate the child process which is spawned
	by using "pipe"
Message-ID: <OF918D6FB5.0BE55AA5-ON48257B9C.005569B6-48257B9C.0056AE15@cn.ibm.com>

An embedded and charset-unspecified text was scrubbed...
Name: not available
URL: <https://stat.ethz.ch/pipermail/r-devel/attachments/20130702/377c801f/attachment.pl>

From simon.urbanek at r-project.org  Tue Jul  2 18:13:23 2013
From: simon.urbanek at r-project.org (Simon Urbanek)
Date: Tue, 2 Jul 2013 12:13:23 -0400
Subject: [Rd] Ctrl+C in R will terminate the child process which is
	spawned by using "pipe"
In-Reply-To: <OF918D6FB5.0BE55AA5-ON48257B9C.005569B6-48257B9C.0056AE15@cn.ibm.com>
References: <OF918D6FB5.0BE55AA5-ON48257B9C.005569B6-48257B9C.0056AE15@cn.ibm.com>
Message-ID: <E22341A8-ED18-48C8-9870-2FC39EC94EFB@r-project.org>


On Jul 2, 2013, at 11:46 AM, Rong lI Li wrote:

> 
> Hi, all,
> 
> I pressed Ctrl+C in R process, and found that the child process which was
> spawned by using "pipe" is terminated due to this.
> Are there any way to work around it, so that the child process can run
> happily without being terminated? Or can we block the signal for the child
> process?
> 

Yes, simply handle the INT signal in your C++ process and do what you deem appropriate (which does include the option of doing nothing / ignoring).

Other option is to do a double-fork ( fork -> if (fork()) exit) so you disassociate the child from the parent group or to possibly use setsid(), both as to not share the terminal with the parent.

Cheers,
Simon


> 1. I used pipe to spawn one C++ process, which will running in a loop
> without exiting immediately.
> 
> z <- pipe("./mytest", open = "r+")
>> z
> description       class        mode        text      opened    can read
> "./mytest"      "pipe"        "r+"      "text"    "opened"       "yes"
>  can write
>       "no"
> 
> 2. When I press "Ctrl+C" in the current R shell, I found the forked child
> process was also terminated. Are there any way to work around it?
> 
> =====================
> 
> Rong "Jessica", Li (????)
> Platform Symphony TET, CSTL, IBM Systems &Technology Group, Development
> Tel:86-10-82451010  Email:ronglli at cn.ibm.com
> 	[[alternative HTML version deleted]]
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From wdunlap at tibco.com  Tue Jul  2 18:16:52 2013
From: wdunlap at tibco.com (William Dunlap)
Date: Tue, 2 Jul 2013 16:16:52 +0000
Subject: [Rd] Ctrl+C in R will terminate the child process which is
 spawned	by using "pipe"
In-Reply-To: <OF918D6FB5.0BE55AA5-ON48257B9C.005569B6-48257B9C.0056AE15@cn.ibm.com>
References: <OF918D6FB5.0BE55AA5-ON48257B9C.005569B6-48257B9C.0056AE15@cn.ibm.com>
Message-ID: <E66794E69CFDE04D9A70842786030B931C308F30@PA-MBX01.na.tibco.com>

If you are on a Unix-like machine try using the setsid command to
run your command in a 'session' of its own.  E.g.,

  > z <- pipe("setsid /usr/bin/yes", open="r")
  > length(readLines(z, n=1e6))
  [1] 1000000
  > # hit control-C
  > length(readLines(z, n=1e6))
  [1] 1000000
  > length(readLines(z, n=1e6))
  [1] 1000000
  > close(z)

as opposed to

  > z <- pipe("/usr/bin/yes", open="r")
  > length(readLines(z, n=1e6))
  [1] 1000000
  > # hit control-C
  > length(readLines(z, n=1e6)) # this reads what is left in the stdin buffer
  [1] 34240
  > length(readLines(z, n=1e6))
  [1] 0
  > close(z)

Bill Dunlap
Spotfire, TIBCO Software
wdunlap tibco.com


> -----Original Message-----
> From: r-devel-bounces at r-project.org [mailto:r-devel-bounces at r-project.org] On Behalf
> Of Rong lI Li
> Sent: Tuesday, July 02, 2013 8:46 AM
> To: r-devel at r-project.org
> Subject: [Rd] Ctrl+C in R will terminate the child process which is spawned by using "pipe"
> 
> 
> Hi, all,
> 
> I pressed Ctrl+C in R process, and found that the child process which was
> spawned by using "pipe" is terminated due to this.
> Are there any way to work around it, so that the child process can run
> happily without being terminated? Or can we block the signal for the child
> process?
> 
> 1. I used pipe to spawn one C++ process, which will running in a loop
> without exiting immediately.
> 
> z <- pipe("./mytest", open = "r+")
> > z
> description       class        mode        text      opened    can read
>  "./mytest"      "pipe"        "r+"      "text"    "opened"       "yes"
>   can write
>        "no"
> 
> 2. When I press "Ctrl+C" in the current R shell, I found the forked child
> process was also terminated. Are there any way to work around it?
> 
> =====================
> 
> Rong "Jessica", Li (????)
> Platform Symphony TET, CSTL, IBM Systems &Technology Group, Development
> Tel:86-10-82451010  Email:ronglli at cn.ibm.com
> 	[[alternative HTML version deleted]]


From vobencha at fhcrc.org  Wed Jul  3 05:40:51 2013
From: vobencha at fhcrc.org (Valerie Obenchain)
Date: Tue, 02 Jul 2013 20:40:51 -0700
Subject: [Rd] cache most-recent dispatch
In-Reply-To: <51D2F4BF.8080903@r-project.org>
References: <51D255CC.1050300@fhcrc.org> <51D25F62.6050102@fhcrc.org>
	<51D2F4BF.8080903@r-project.org>
Message-ID: <51D39D43.4080304@fhcrc.org>

Thanks for the background and suggestions.

Valerie


On 07/02/2013 08:41 AM, John Chambers wrote:
> It's hard to see how repeated dispatch on the same classes can be that
> slow, _if_ the function being called each time is itself doing some
> substantial work.
>
> The first call (in a session) with a particular signature searches for
> inherited methods and stores the method found in a table.  The following
> calls with that signature should do a single lookup in a hash table.
> Caching the last signature is unlikely to be dramatically faster, but we
> can experiment and see.
>
> What is substantially different is calling a generic function vs calling
> a primitive or internal.  If the local paste you constructed is the
> default, base::paste, that is a .Internal.
>
> Not going through the R generic function several thousand times would
> make a difference.
>
> It's a fundamental point about R that function calls do enough work that
> they add significant time to a "trivial" computation, such as a
> primitive call.  There are various efforts going on these days to
> provide more efficient alternatives.  They're all helpful; my personal
> favorite when the game is worth it is to consider doing key computations
> in a seriously faster language, like C++ via Rcpp.
>
> John
>
> On 7/1/13 10:04 PM, Valerie Obenchain wrote:
>> Hi,
>>
>> S4 method dispatch can be very slow. Would it be reasonable to cache the
>> most
>> recent dispatch, anticipating the next invocation will be on the same
>> type? This
>> would be very helpful in loops.
>>
>>    fun0 <- function(x)
>>        sapply(x, paste, collapse="+")
>>    fun1 <- function(x) {
>>        paste <- selectMethod(paste, class(x[[1]]))
>>        sapply(x, paste, collapse="+")
>>    }
>>    lst <- split(rep(LETTERS, 100), rep(1:1300, 2))
>>
>>    library(microbenchmark)
>>    microbenchmark(fun0(lst), times=10)
>>    ## Unit: milliseconds
>>    ##       expr      min       lq   median      uq      max neval
>>    ##  fun0(lst) 4.153287 4.180659 4.513539 5.19261 5.280481    10
>>
>>    setGeneric("paste")
>>    microbenchmark(fun0(lst), fun1(lst), times=10)
>>    ## >     microbenchmark(fun0(lst), fun1(lst), times=10)
>>    ## Unit: milliseconds
>>    ##       expr       min       lq    median        uq       max neval
>>    ##  fun0(lst) 21.093180 21.27616 21.453174 21.833686 24.758791    10
>>    ##  fun1(lst)  4.517808  4.53067  4.582641  4.682235  5.121856    10
>>
>> Dispatch seems to be especially slow when packages are involved, e.g.,
>> with the Bioconductor IRanges package
>> (http://bioconductor.org/packages/release/bioc/html/IRanges.html)
>>
>>    removeGeneric("paste")
>>    library(IRanges)
>>    showMethods(paste)
>>    ## Function: paste (package BiocGenerics)
>>    ## ...="ANY"
>>    ## ...="Rle"
>>    selectMethod(paste, "ANY")
>>    ## Method Definition (Class "derivedDefaultMethod"):
>>    ##
>>    ## function (..., sep = " ", collapse = NULL)
>>    ## .Internal(paste(list(...), sep, collapse))
>>    ## <environment: namespace:base>
>>    ##
>>    ## Signatures:
>>    ##         ...
>>    ## target  "ANY"
>>    ## defined "ANY"
>>
>>    microbenchmark(fun0(lst), fun1(lst), times=10)
>>    ## Unit: milliseconds
>>    ##       expr        min         lq     median         uq        max
>> neval
>>    ##  fun0(lst) 233.539585 234.592491 236.311209 237.268506 243.181123
>>     10
>>    ##  fun1(lst)   4.564914   4.592996   4.642898   4.729009   5.492706
>>     10
>>
>>    sessionInfo()
>>    ## R version 3.0.0 Patched (2013-04-04 r62492)
>>    ## Platform: x86_64-unknown-linux-gnu (64-bit)
>>    ##
>>    ## locale:
>>    ##  [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C
>>    ##  [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8
>>    ##  [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8
>>    ##  [7] LC_PAPER=C                 LC_NAME=C
>>    ##  [9] LC_ADDRESS=C               LC_TELEPHONE=C
>>    ## [11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C
>>    ##
>>    ## attached base packages:
>>    ## [1] parallel  stats     graphics  grDevices utils     datasets
>> methods
>>    ## [8] base
>>    ##
>>    ## other attached packages:
>>    ## [1] IRanges_1.19.15      BiocGenerics_0.7.2   microbenchmark_1.3-0
>>    ##
>>    ## loaded via a namespace (and not attached):
>>    ## [1] stats4_3.0.0
>>
>>
>> Thanks,
>> Valerie
>>
>> ______________________________________________
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel


From maechler at stat.math.ethz.ch  Wed Jul  3 11:04:46 2013
From: maechler at stat.math.ethz.ch (Martin Maechler)
Date: Wed, 3 Jul 2013 11:04:46 +0200
Subject: [Rd] RFC: a "safe" uniroot() function for future R
In-Reply-To: <D0EFA24D-4AD5-4967-9BA8-FC75F3128AED@xs4all.nl>
References: <20903.2899.135264.914688@stat.math.ethz.ch>
	<CA+COuteo2iQHZyneAy+x7qsfB7G_Erc2GVXpcSTyxez-FVTuOQ@mail.gmail.com>
	<20903.11965.812306.509672@stat.math.ethz.ch>
	<51A773B3.8080807@gmail.com>
	<20904.24724.932826.199873@stat.math.ethz.ch>
	<D0EFA24D-4AD5-4967-9BA8-FC75F3128AED@xs4all.nl>
Message-ID: <20947.59694.996540.705709@stat.math.ethz.ch>

>>>>> Berend Hasselman <bhh at xs4all.nl>
>>>>>     on Mon, 3 Jun 2013 09:01:25 +0200 writes:

    > On 31-05-2013, at 10:34, Martin Maechler
    > <maechler at stat.math.ethz.ch> wrote:

    > ?..
    >> From the current feedbacks, I'd come to propose / further
    >> discuss the following issues:
    >> 
    >> 1) the goal is to remain with one function uniroot()
    >> 
    >> 2) Instead of the 'Sig' = "sign(f'(x_0))" {not quite, but
    >> typically} with 4 different value classes, namely NULL,
    >> -1, 0, 1, (where +/- 1 are equivalent to any positive or
    >> negative finite number respectively),
    >> 
    >> we should either use a string with 4 different possible
    >> values or a {logical or NULL}, say 'upcrossing' (which
    >> also gives 4 values, NULL, NA, FALSE, TRUE).
    >> 
    >> 
    >> 3) [I'm not sure about this:] The new default of the
    >> 'Sig' replacement would correspond to the current Sig =
    >> NULL which does extend the search interval when that does
    >> not constitute a sign change.
    >> 
    >> Alternatively, implicitly proposed by Ravi Varadhan, the
    >> default would correspond to Sig = 0, i.e. to the current
    >> uniroot() behavior which signals an error as soon as the
    >> initial interval is not large enough.
    >> 
    >> Further opinions and suggestions for '2)' and '3)' are
    >> still very welcome!

    > I agree with Ravi. Ravi's example shows what can go wrong.
    > Let the default behaviour of a new uniroot() be the
    > current behaviour.  No harm will be done to any existent
    > applications.

    > An option would be to append a suggestion to the current
    > error message: "Consider setting argument Sig to non-zero
    > to expand the range of x" or something similar when Sig =
    > 0 and uniroot can't find a solution.

    > In addition I think that it should be possible to specify
    > an absolute lower and upper limit for x in order to avoid
    > evaluating a function for invalid values of its argument
    > (e.g. log(x) for negative x) Silly example:

    > xstart <- c(100,110)
    > unirootS(f, xstart, Sig=10,trace=2)

    > Berend

A few days before leaving for a conference and vacation, 
I have finally committed to the very first part of Berend's and
other suggestions, and my own plans (mentioned in this thread, a
month ago):

In R-devel:
   unirootS() no longer exists

and the (rendered) help file for  "new uniroot" currently starts with

------------------------------------------------------------ 

One Dimensional Root (Zero) Finding

Description:

     The function ?uniroot? searches the interval from ?lower? to
     ?upper? for a root (i.e., zero) of the function ?f? with respect
     to its first argument.

     Setting ?extendInt? to a non-?"no"? string, means searching for
     the correct ?interval = c(lower,upper)? if ?sign(f(x))? does not
     satisfy the requirements at the interval end points; see the
     ?Details? section.

Usage:

     uniroot(f, interval, ...,
             lower = min(interval), upper = max(interval),
             f.lower = f(lower, ...), f.upper = f(upper, ...),
             extendInt = c("no", "yes", "downX", "upX"), check.conv = FALSE,
             tol = .Machine$double.eps^0.25, maxiter = 1000, trace = 0)
     
Arguments:

       f: the function for which the root is sought.

interval: a vector containing the end-points of the interval to be
          searched for the root.

     ...: additional named or unnamed arguments to be passed to ?f?

lower, upper: the lower and upper end points of the interval to be
          searched.

f.lower, f.upper: the same as ?f(upper)? and ?f(lower)?, respectively.
          Passing these values from the caller where they are often
          known is more economical as soon as ?f()? contains
          non-trivial computations.

extendInt: character string specifying if the interval ?c(lower,upper)?
          should be extended or directly produce an error when ?f()?
          does not have differing signs at the endpoints.  The default,
          ?"no"?, keeps the search interval and hence produces an
          error.

check.conv: logical indicating whether a convergence warning of the
          underlying ?uniroot? should be caught as an error and if
          non-convergence in ?maxiter? iterations should be an error
          instead of a warning.

     tol: the desired accuracy (convergence tolerance).

 maxiter: the maximum number of iterations.

   trace: integer number; if positive, tracing information is produced.
          Higher values giving more details.

Details:

     Note that arguments after ?...? must be matched exactly.

     Either ?interval? or both ?lower? and ?upper? must be specified:
     the upper endpoint must be strictly larger than the lower
     endpoint.  The function values at the endpoints must be of
     opposite signs (or zero), for ?extendInt="no"?, the default.
     Otherwise, if ?extendInt="yes"?, the interval is extended on both
     sides, in search of a sign change, i.e., until the search interval
     [l,u] satisfies f(l) * f(u) <= 0.

     If it is _known how_ f changes sign at the root x0, that is, if
     the function is increasing or decreasing there, ?extendInt? can
     (and typically should) be specified as ?"upX"? (for ?upward
     crossing?) or ?"downX"?, respectively.  Equivalently, define S:=
     +/- 1, to require S = sign(f(x0 + eps)) at the solution.  In that
     case, the search interval [l,u] possibly is extended to be such
     that S * f(l) <= 0 and S * f(u) >= 0.

-------------

As said above, this does not contain all the changes I've
planned, notably the exact interval extension algorithm *will*
change, on one hand according to what Duncan proposed
(economizing), but also in how the internal 'Delta' is
initialized.

You may want to look at the current partly new examples
and also provide your own, on this thread.
I plan to take it up after about July 20.

Martin


From gianluca.mastrantonio at yahoo.it  Thu Jul  4 09:34:06 2013
From: gianluca.mastrantonio at yahoo.it (gianluca mastrantonio)
Date: Thu, 4 Jul 2013 09:34:06 +0200
Subject: [Rd] R-devel Digest, Vol 125, Issue 2
In-Reply-To: <mailman.19.1372759206.15721.r-devel@r-project.org>
References: <mailman.19.1372759206.15721.r-devel@r-project.org>
Message-ID: <E5C33C8D-6FE1-421C-AAEA-FCC6FC5258BA@yahoo.it>

Hi all,

I have a problem but i am not sure that this is the right mailing list.

I'm writing a R program which call a C++ program, through the function .Call. I use to compile the c++ script with the command 

R CMD SHLIB   SpTempWrapC.cpp -Wall -l covmodel.h -l util.h

Everything works fine since, for mistake, i paste in the terminal the content  of the r-script. Now, when i try to compile, i received the following error:

llvm-g++-4.2 -arch x86_64 -dynamiclib -Wl,-headerpad_max_install_names -undefined dynamic_lookup -single_module -multiply_defined suppress -L/usr/local/lib -L/usr/local/lib -o SpTempWrapC.so SpTempWrapC.o -Wall -l covmodel.h -l util.h -F/Library/Frameworks/R.framework/.. -framework R -Wl,-framework -Wl,CoreFoundation
covmodel.h:15:20: error: iostream: No such file or directory
covmodel.h:16:18: error: string: No such file or directory
covmodel.h:17: error: expected ?=?, ?,?, ?;?, ?asm? or ?__attribute__? before ?namespace?
covmodel.h:20: error: expected ?=?, ?,?, ?;?, ?asm? or ?__attribute__? before ?covmodel?
util.h:12:20: error: iostream: No such file or directory
util.h:13:19: error: iomanip: No such file or directory
util.h:14:18: error: string: No such file or directory
util.h:15:19: error: sstream: No such file or directory
util.h:16:18: error: vector: No such file or directory
util.h:17:15: error: map: No such file or directory
util.h:18: error: expected ?=?, ?,?, ?;?, ?asm? or ?__attribute__? before ?namespace?
util.h:20:15: error: R.h: No such file or directory
util.h:21:19: error: Rmath.h: No such file or directory
util.h:22:24: error: Rinternals.h: No such file or directory
util.h:23:26: error: R_ext/Lapack.h: No such file or directory
util.h:24:24: error: R_ext/BLAS.h: No such file or directory
util.h:25:25: error: R_ext/Utils.h: No such file or directory
util.h:29: error: expected declaration specifiers or ?...? before ?bool?

I also tried to reinstall R.

Thanks


From pdalgd at gmail.com  Thu Jul  4 09:44:30 2013
From: pdalgd at gmail.com (peter dalgaard)
Date: Thu, 4 Jul 2013 09:44:30 +0200
Subject: [Rd] R-devel Digest, Vol 125, Issue 2
In-Reply-To: <E5C33C8D-6FE1-421C-AAEA-FCC6FC5258BA@yahoo.it>
References: <mailman.19.1372759206.15721.r-devel@r-project.org>
	<E5C33C8D-6FE1-421C-AAEA-FCC6FC5258BA@yahoo.it>
Message-ID: <9F461B84-4E42-410D-A933-D7D930BCC066@gmail.com>


On Jul 4, 2013, at 09:34 , gianluca mastrantonio wrote:

> Hi all,
> 
> I have a problem but i am not sure that this is the right mailing list.
> 
> I'm writing a R program which call a C++ program, through the function .Call. I use to compile the c++ script with the command 
> 
> R CMD SHLIB   SpTempWrapC.cpp -Wall -l covmodel.h -l util.h

That doesn't look right. "-l" is usually something with linking, "-I" intended?



> Everything works fine since, for mistake, i paste in the terminal the content  of the r-script. Now, when i try to compile, i received the following error:
> 
> llvm-g++-4.2 -arch x86_64 -dynamiclib -Wl,-headerpad_max_install_names -undefined dynamic_lookup -single_module -multiply_defined suppress -L/usr/local/lib -L/usr/local/lib -o SpTempWrapC.so SpTempWrapC.o -Wall -l covmodel.h -l util.h -F/Library/Frameworks/R.framework/.. -framework R -Wl,-framework -Wl,CoreFoundation
> covmodel.h:15:20: error: iostream: No such file or directory
> covmodel.h:16:18: error: string: No such file or directory
> covmodel.h:17: error: expected ?=?, ?,?, ?;?, ?asm? or ?__attribute__? before ?namespace?
> covmodel.h:20: error: expected ?=?, ?,?, ?;?, ?asm? or ?__attribute__? before ?covmodel?
> util.h:12:20: error: iostream: No such file or directory
> util.h:13:19: error: iomanip: No such file or directory
> util.h:14:18: error: string: No such file or directory
> util.h:15:19: error: sstream: No such file or directory
> util.h:16:18: error: vector: No such file or directory
> util.h:17:15: error: map: No such file or directory
> util.h:18: error: expected ?=?, ?,?, ?;?, ?asm? or ?__attribute__? before ?namespace?
> util.h:20:15: error: R.h: No such file or directory
> util.h:21:19: error: Rmath.h: No such file or directory
> util.h:22:24: error: Rinternals.h: No such file or directory
> util.h:23:26: error: R_ext/Lapack.h: No such file or directory
> util.h:24:24: error: R_ext/BLAS.h: No such file or directory
> util.h:25:25: error: R_ext/Utils.h: No such file or directory
> util.h:29: error: expected declaration specifiers or ?...? before ?bool?
> 
> I also tried to reinstall R.
> 
> Thanks
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel

-- 
Peter Dalgaard, Professor,
Center for Statistics, Copenhagen Business School
Solbjerg Plads 3, 2000 Frederiksberg, Denmark
Phone: (+45)38153501
Email: pd.mes at cbs.dk  Priv: PDalgd at gmail.com


From gianluca.mastrantonio at yahoo.it  Thu Jul  4 09:53:42 2013
From: gianluca.mastrantonio at yahoo.it (gianluca mastrantonio)
Date: Thu, 4 Jul 2013 09:53:42 +0200
Subject: [Rd] R-devel Digest, Vol 125, Issue 2
In-Reply-To: <9F461B84-4E42-410D-A933-D7D930BCC066@gmail.com>
References: <mailman.19.1372759206.15721.r-devel@r-project.org>
	<E5C33C8D-6FE1-421C-AAEA-FCC6FC5258BA@yahoo.it>
	<9F461B84-4E42-410D-A933-D7D930BCC066@gmail.com>
Message-ID: <0EBDAAA2-4D40-433B-8129-4B0B4AE72DB2@yahoo.it>

An embedded and charset-unspecified text was scrubbed...
Name: not available
URL: <https://stat.ethz.ch/pipermail/r-devel/attachments/20130704/5caa97ed/attachment.pl>

From ronglli at cn.ibm.com  Thu Jul  4 14:07:24 2013
From: ronglli at cn.ibm.com (Rong lI Li)
Date: Thu, 4 Jul 2013 20:07:24 +0800
Subject: [Rd] Ctrl+C in R will terminate the child process which is
 spawned by using "pipe"
Message-ID: <OFA68050AD.63F113C2-ON48257B9E.00421C63-48257B9E.0042B344@cn.ibm.com>

An embedded and charset-unspecified text was scrubbed...
Name: not available
URL: <https://stat.ethz.ch/pipermail/r-devel/attachments/20130704/72932558/attachment.pl>

From jon.clayden at gmail.com  Thu Jul  4 16:52:51 2013
From: jon.clayden at gmail.com (Jon Clayden)
Date: Thu, 4 Jul 2013 15:52:51 +0100
Subject: [Rd] Cross-platform linking of a simple front-end
Message-ID: <CAM9CR=2z8UWuwtHXV+HsbHqOF9aSe1-mYP72WTe7pf2q+zMXcg@mail.gmail.com>

An embedded and charset-unspecified text was scrubbed...
Name: not available
URL: <https://stat.ethz.ch/pipermail/r-devel/attachments/20130704/05e7ee9c/attachment.pl>

From xie at yihui.name  Fri Jul  5 09:31:58 2013
From: xie at yihui.name (Yihui Xie)
Date: Fri, 5 Jul 2013 00:31:58 -0700
Subject: [Rd] should the text for RIGHT_ASSIGN be -> in getParseData()?
Message-ID: <CANROs4eVNfPjs_D5wb4Hqgy3Axb=88PZ_eGHVAFhTbi-3uT3Tw@mail.gmail.com>

Hi,

The text column for '->' becomes '<-' in the data frame returned by
getParseData():

> getParseData(parse(text='1->x'))
  line1 col1 line2 col2 id parent        token terminal text
7     1    1     1    4  7      0         expr    FALSE
1     1    1     1    1  1      2    NUM_CONST     TRUE    1
2     1    1     1    1  2      7         expr    FALSE
3     1    2     1    3  3      7 RIGHT_ASSIGN     TRUE   <-
4     1    4     1    4  4      6       SYMBOL     TRUE    x
6     1    4     1    4  6      7         expr    FALSE

Is that expected?

> sessionInfo()
R version 3.0.1 (2013-05-16)
Platform: x86_64-pc-linux-gnu (64-bit)

locale:
 [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C
 [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8
 [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8
 [7] LC_PAPER=C                 LC_NAME=C
 [9] LC_ADDRESS=C               LC_TELEPHONE=C
[11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C

attached base packages:
[1] stats     graphics  grDevices utils     datasets  methods   base

Regards,
Yihui
--
Yihui Xie <xieyihui at gmail.com>
Phone: 206-667-4385 Web: http://yihui.name
Fred Hutchinson Cancer Research Center, Seattle


From hlin09pu at gmail.com  Fri Jul  5 07:15:49 2013
From: hlin09pu at gmail.com (maxpar)
Date: Thu, 4 Jul 2013 22:15:49 -0700 (PDT)
Subject: [Rd] Get the tail of a list in C
Message-ID: <1373001349875-4670900.post@n4.nabble.com>

Hi, 

I am write R extensions in C. Now I have a VECSXP variable, so how can I get
the tail of it (all but the first one) as a new VECSXP. I tried CDR(), but
it gives error. 

Thanks. 



--
View this message in context: http://r.789695.n4.nabble.com/Get-the-tail-of-a-list-in-C-tp4670900.html
Sent from the R devel mailing list archive at Nabble.com.


From murdoch.duncan at gmail.com  Fri Jul  5 13:29:47 2013
From: murdoch.duncan at gmail.com (Duncan Murdoch)
Date: Fri, 05 Jul 2013 07:29:47 -0400
Subject: [Rd] should the text for RIGHT_ASSIGN be -> in getParseData()?
In-Reply-To: <CANROs4eVNfPjs_D5wb4Hqgy3Axb=88PZ_eGHVAFhTbi-3uT3Tw@mail.gmail.com>
References: <CANROs4eVNfPjs_D5wb4Hqgy3Axb=88PZ_eGHVAFhTbi-3uT3Tw@mail.gmail.com>
Message-ID: <51D6AE2B.1060500@gmail.com>

On 13-07-05 3:31 AM, Yihui Xie wrote:
> Hi,
>
> The text column for '->' becomes '<-' in the data frame returned by
> getParseData():
>
>> getParseData(parse(text='1->x'))
>    line1 col1 line2 col2 id parent        token terminal text
> 7     1    1     1    4  7      0         expr    FALSE
> 1     1    1     1    1  1      2    NUM_CONST     TRUE    1
> 2     1    1     1    1  2      7         expr    FALSE
> 3     1    2     1    3  3      7 RIGHT_ASSIGN     TRUE   <-
> 4     1    4     1    4  4      6       SYMBOL     TRUE    x
> 6     1    4     1    4  6      7         expr    FALSE
>
> Is that expected?

It's by design, but I agree it's not ideal.  The reason for it is that 
"1 -> x" is parsed as `<-`(x, 1).  I think the parser only does 
translations like this for -> and ->>.  Currently the parser shows the 
name of the binary operator as the text.

I'll look into adding special handling for translations like this.  We 
will still parse the assignment in the same way, but the getParseData 
text could be the true text.

Duncan Murdoch


>
>> sessionInfo()
> R version 3.0.1 (2013-05-16)
> Platform: x86_64-pc-linux-gnu (64-bit)
>
> locale:
>   [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C
>   [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8
>   [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8
>   [7] LC_PAPER=C                 LC_NAME=C
>   [9] LC_ADDRESS=C               LC_TELEPHONE=C
> [11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C
>
> attached base packages:
> [1] stats     graphics  grDevices utils     datasets  methods   base
>
> Regards,
> Yihui
> --
> Yihui Xie <xieyihui at gmail.com>
> Phone: 206-667-4385 Web: http://yihui.name
> Fred Hutchinson Cancer Research Center, Seattle
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>


From pdalgd at gmail.com  Fri Jul  5 13:40:31 2013
From: pdalgd at gmail.com (peter dalgaard)
Date: Fri, 5 Jul 2013 13:40:31 +0200
Subject: [Rd] should the text for RIGHT_ASSIGN be -> in getParseData()?
In-Reply-To: <51D6AE2B.1060500@gmail.com>
References: <CANROs4eVNfPjs_D5wb4Hqgy3Axb=88PZ_eGHVAFhTbi-3uT3Tw@mail.gmail.com>
	<51D6AE2B.1060500@gmail.com>
Message-ID: <93D66B0A-0F6C-4D4B-AA78-F9379C390C2F@gmail.com>


On Jul 5, 2013, at 13:29 , Duncan Murdoch wrote:

> On 13-07-05 3:31 AM, Yihui Xie wrote:
>> Hi,
>> 
>> The text column for '->' becomes '<-' in the data frame returned by
>> getParseData():
>> 
>>> getParseData(parse(text='1->x'))
>>   line1 col1 line2 col2 id parent        token terminal text
>> 7     1    1     1    4  7      0         expr    FALSE
>> 1     1    1     1    1  1      2    NUM_CONST     TRUE    1
>> 2     1    1     1    1  2      7         expr    FALSE
>> 3     1    2     1    3  3      7 RIGHT_ASSIGN     TRUE   <-
>> 4     1    4     1    4  4      6       SYMBOL     TRUE    x
>> 6     1    4     1    4  6      7         expr    FALSE
>> 
>> Is that expected?
> 
> It's by design, but I agree it's not ideal.  The reason for it is that "1 -> x" is parsed as `<-`(x, 1).  I think the parser only does translations like this for -> and ->>.  Currently the parser shows the name of the binary operator as the text.
> 
> I'll look into adding special handling for translations like this.  We will still parse the assignment in the same way, but the getParseData text could be the true text.

Just watch out for potential complications, e.g.

> `->`(x,1)
Error: could not find function "->"

so one needs to be sure that nothing will assume that the text column is a function name.

-- 
Peter Dalgaard, Professor
Center for Statistics, Copenhagen Business School
Solbjerg Plads 3, 2000 Frederiksberg, Denmark
Phone: (+45)38153501
Email: pd.mes at cbs.dk  Priv: PDalgd at gmail.com


From murdoch.duncan at gmail.com  Fri Jul  5 13:57:35 2013
From: murdoch.duncan at gmail.com (Duncan Murdoch)
Date: Fri, 05 Jul 2013 07:57:35 -0400
Subject: [Rd] should the text for RIGHT_ASSIGN be -> in getParseData()?
In-Reply-To: <93D66B0A-0F6C-4D4B-AA78-F9379C390C2F@gmail.com>
References: <CANROs4eVNfPjs_D5wb4Hqgy3Axb=88PZ_eGHVAFhTbi-3uT3Tw@mail.gmail.com>
	<51D6AE2B.1060500@gmail.com>
	<93D66B0A-0F6C-4D4B-AA78-F9379C390C2F@gmail.com>
Message-ID: <51D6B4AF.6060201@gmail.com>

On 13-07-05 7:40 AM, peter dalgaard wrote:
>
> On Jul 5, 2013, at 13:29 , Duncan Murdoch wrote:
>
>> On 13-07-05 3:31 AM, Yihui Xie wrote:
>>> Hi,
>>>
>>> The text column for '->' becomes '<-' in the data frame returned by
>>> getParseData():
>>>
>>>> getParseData(parse(text='1->x'))
>>>    line1 col1 line2 col2 id parent        token terminal text
>>> 7     1    1     1    4  7      0         expr    FALSE
>>> 1     1    1     1    1  1      2    NUM_CONST     TRUE    1
>>> 2     1    1     1    1  2      7         expr    FALSE
>>> 3     1    2     1    3  3      7 RIGHT_ASSIGN     TRUE   <-
>>> 4     1    4     1    4  4      6       SYMBOL     TRUE    x
>>> 6     1    4     1    4  6      7         expr    FALSE
>>>
>>> Is that expected?
>>
>> It's by design, but I agree it's not ideal.  The reason for it is that "1 -> x" is parsed as `<-`(x, 1).  I think the parser only does translations like this for -> and ->>.  Currently the parser shows the name of the binary operator as the text.
>>
>> I'll look into adding special handling for translations like this.  We will still parse the assignment in the same way, but the getParseData text could be the true text.
>
> Just watch out for potential complications, e.g.
>
>> `->`(x,1)
> Error: could not find function "->"
>
> so one needs to be sure that nothing will assume that the text column is a function name.
>

R itself doesn't make use of the text column, it's for display of code 
by highlighters etc.  So if anyone does assume text is a function name, 
it's their bug, not ours.  In fact, the bug is already there, because 
there is actually one other example which was being parsed properly, 
"**" is translated to "^".  There's no `**` function, but 2**3 works.

Duncan Murdoch

Duncan


From romain at r-enthusiasts.com  Fri Jul  5 15:43:27 2013
From: romain at r-enthusiasts.com (romain at r-enthusiasts.com)
Date: Fri, 05 Jul 2013 15:43:27 +0200
Subject: [Rd] Get the tail of a list in C
In-Reply-To: <1373001349875-4670900.post@n4.nabble.com>
References: <1373001349875-4670900.post@n4.nabble.com>
Message-ID: <1fc49b7c8acd4f6b358c3db2d91d5660@r-enthusiasts.com>

Le 2013-07-05 07:15, maxpar a ?crit?:
> Hi,
>
> I am write R extensions in C. Now I have a VECSXP variable, so how 
> can I get
> the tail of it (all but the first one) as a new VECSXP. I tried 
> CDR(), but
> it gives error.
>
> Thanks.

Hello,

A VECSXP is actually an array of pointers, not a linked list. If you 
want the tail, you have to allocate new data.
For a simplistic version that does not deal with attributes, names, etc 
..., try something like this:

int n = length( x ) - 1  ;
SEXP taildata = PROTECT( allocVector( VECSXP, n ) ) ;
for( int i=0; i<n; i++)
     SET_VECTOR_ELT( taildata, i, VECTOR_ELT( x, i ) ) ;


Romain


From b.rowlingson at lancaster.ac.uk  Fri Jul  5 18:29:29 2013
From: b.rowlingson at lancaster.ac.uk (Barry Rowlingson)
Date: Fri, 5 Jul 2013 17:29:29 +0100
Subject: [Rd] should the text for RIGHT_ASSIGN be -> in getParseData()?
In-Reply-To: <252887c8b1864e97a749507eec483c7b@EX-1-HT0.lancs.local>
References: <CANROs4eVNfPjs_D5wb4Hqgy3Axb=88PZ_eGHVAFhTbi-3uT3Tw@mail.gmail.com>
	<51D6AE2B.1060500@gmail.com>
	<93D66B0A-0F6C-4D4B-AA78-F9379C390C2F@gmail.com>
	<252887c8b1864e97a749507eec483c7b@EX-1-HT0.lancs.local>
Message-ID: <CANVKczO+J5OR3vGCRE0cuT7KfA9y7zQdq_iRjJYkqs=1+3hp4g@mail.gmail.com>

On Fri, Jul 5, 2013 at 12:57 PM, Duncan Murdoch
<murdoch.duncan at gmail.com> wrote:

> R itself doesn't make use of the text column, it's for display of code
> by highlighters etc.  So if anyone does assume text is a function name,
> it's their bug, not ours.  In fact, the bug is already there, because
> there is actually one other example which was being parsed properly,
> "**" is translated to "^".  There's no `**` function, but 2**3 works.

 Is there any reason right-assign with "->" still exists? How much
code on CRAN uses it, and how trivially could it be excised? Can we
also have 'up assign'  and "down assign" so I can do:

 >     3
 > x -^
 > x -v
 >     4

 - they make just as much sense.

 Okay, lets see all the edge cases.....

Barry


From wdunlap at tibco.com  Fri Jul  5 18:59:10 2013
From: wdunlap at tibco.com (William Dunlap)
Date: Fri, 5 Jul 2013 16:59:10 +0000
Subject: [Rd] should the text for RIGHT_ASSIGN be -> in getParseData()?
In-Reply-To: <CANVKczO+J5OR3vGCRE0cuT7KfA9y7zQdq_iRjJYkqs=1+3hp4g@mail.gmail.com>
References: <CANROs4eVNfPjs_D5wb4Hqgy3Axb=88PZ_eGHVAFhTbi-3uT3Tw@mail.gmail.com>
	<51D6AE2B.1060500@gmail.com>
	<93D66B0A-0F6C-4D4B-AA78-F9379C390C2F@gmail.com>
	<252887c8b1864e97a749507eec483c7b@EX-1-HT0.lancs.local>
	<CANVKczO+J5OR3vGCRE0cuT7KfA9y7zQdq_iRjJYkqs=1+3hp4g@mail.gmail.com>
Message-ID: <E66794E69CFDE04D9A70842786030B931C319123@PA-MBX01.na.tibco.com>

>  Is there any reason right-assign with "->" still exists? How much
> code on CRAN uses it, and how trivially could it be excised?

I use '->' a lot when doing interactive work.  I often first run a command
to see its printed output then decide that I had better save its value.
The up-arrow key gives me the previous command line with the cursor placed at the
end of the line so adding '-> z' at the end of the line is convenient.
(Not using the up-arrow key and doing 'z <- .Last.value' also works, but
I don't like its context sensitivity.)

I never use '->' when writing code in a file, so you would have to search
my .Rhistory files, not my *.R files, for evidence of its usefulness to me.

Bill Dunlap
Spotfire, TIBCO Software
wdunlap tibco.com


> -----Original Message-----
> From: r-devel-bounces at r-project.org [mailto:r-devel-bounces at r-project.org] On Behalf
> Of Barry Rowlingson
> Sent: Friday, July 05, 2013 9:29 AM
> To: Duncan Murdoch
> Cc: R-devel
> Subject: Re: [Rd] should the text for RIGHT_ASSIGN be -> in getParseData()?
> 
> On Fri, Jul 5, 2013 at 12:57 PM, Duncan Murdoch
> <murdoch.duncan at gmail.com> wrote:
> 
> > R itself doesn't make use of the text column, it's for display of code
> > by highlighters etc.  So if anyone does assume text is a function name,
> > it's their bug, not ours.  In fact, the bug is already there, because
> > there is actually one other example which was being parsed properly,
> > "**" is translated to "^".  There's no `**` function, but 2**3 works.
> 
>  Is there any reason right-assign with "->" still exists? How much
> code on CRAN uses it, and how trivially could it be excised? Can we
> also have 'up assign'  and "down assign" so I can do:
> 
>  >     3
>  > x -^
>  > x -v
>  >     4
> 
>  - they make just as much sense.
> 
>  Okay, lets see all the edge cases.....
> 
> Barry
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From pdalgd at gmail.com  Fri Jul  5 20:24:33 2013
From: pdalgd at gmail.com (peter dalgaard)
Date: Fri, 5 Jul 2013 20:24:33 +0200
Subject: [Rd] should the text for RIGHT_ASSIGN be -> in getParseData()?
In-Reply-To: <E66794E69CFDE04D9A70842786030B931C319123@PA-MBX01.na.tibco.com>
References: <CANROs4eVNfPjs_D5wb4Hqgy3Axb=88PZ_eGHVAFhTbi-3uT3Tw@mail.gmail.com>
	<51D6AE2B.1060500@gmail.com>
	<93D66B0A-0F6C-4D4B-AA78-F9379C390C2F@gmail.com>
	<252887c8b1864e97a749507eec483c7b@EX-1-HT0.lancs.local>
	<CANVKczO+J5OR3vGCRE0cuT7KfA9y7zQdq_iRjJYkqs=1+3hp4g@mail.gmail.com>
	<E66794E69CFDE04D9A70842786030B931C319123@PA-MBX01.na.tibco.com>
Message-ID: <AABCAC34-1DF1-4EFA-B979-82799C4BCC23@gmail.com>


On Jul 5, 2013, at 18:59 , William Dunlap wrote:

>> Is there any reason right-assign with "->" still exists? How much
>> code on CRAN uses it, and how trivially could it be excised?
> 
> I use '->' a lot when doing interactive work.  I often first run a command
> to see its printed output then decide that I had better save its value.
> The up-arrow key gives me the previous command line with the cursor placed at the
> end of the line so adding '-> z' at the end of the line is convenient.
> (Not using the up-arrow key and doing 'z <- .Last.value' also works, but
> I don't like its context sensitivity.)

But up-arrow, ctrl-A then "z <-" is not much less convenient, is it? 

I have used in with multi-line input, occasionally, though. As in

replicate(10000, {
   ysim <- rbinom(length(p), n, p)
   glm(cbind(ysim, n - ysim) ~ x, binomial)$deviance 
})

... and then you realize that you probably don't want to look at 10000 simulated deviances and add "-> simDev". 

> 
> I never use '->' when writing code in a file, so you would have to search
> my .Rhistory files, not my *.R files, for evidence of its usefulness to me.
> 
> Bill Dunlap
> Spotfire, TIBCO Software
> wdunlap tibco.com
> 
> 
>> -----Original Message-----
>> From: r-devel-bounces at r-project.org [mailto:r-devel-bounces at r-project.org] On Behalf
>> Of Barry Rowlingson
>> Sent: Friday, July 05, 2013 9:29 AM
>> To: Duncan Murdoch
>> Cc: R-devel
>> Subject: Re: [Rd] should the text for RIGHT_ASSIGN be -> in getParseData()?
>> 
>> On Fri, Jul 5, 2013 at 12:57 PM, Duncan Murdoch
>> <murdoch.duncan at gmail.com> wrote:
>> 
>>> R itself doesn't make use of the text column, it's for display of code
>>> by highlighters etc.  So if anyone does assume text is a function name,
>>> it's their bug, not ours.  In fact, the bug is already there, because
>>> there is actually one other example which was being parsed properly,
>>> "**" is translated to "^".  There's no `**` function, but 2**3 works.
>> 
>> Is there any reason right-assign with "->" still exists? How much
>> code on CRAN uses it, and how trivially could it be excised? Can we
>> also have 'up assign'  and "down assign" so I can do:
>> 
>>>    3
>>> x -^
>>> x -v
>>>    4
>> 
>> - they make just as much sense.
>> 
>> Okay, lets see all the edge cases.....
>> 
>> Barry
>> 
>> ______________________________________________
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel

-- 
Peter Dalgaard, Professor,
Center for Statistics, Copenhagen Business School
Solbjerg Plads 3, 2000 Frederiksberg, Denmark
Phone: (+45)38153501
Email: pd.mes at cbs.dk  Priv: PDalgd at gmail.com


From wdunlap at tibco.com  Fri Jul  5 20:31:59 2013
From: wdunlap at tibco.com (William Dunlap)
Date: Fri, 5 Jul 2013 18:31:59 +0000
Subject: [Rd] should the text for RIGHT_ASSIGN be -> in getParseData()?
In-Reply-To: <AABCAC34-1DF1-4EFA-B979-82799C4BCC23@gmail.com>
References: <CANROs4eVNfPjs_D5wb4Hqgy3Axb=88PZ_eGHVAFhTbi-3uT3Tw@mail.gmail.com>
	<51D6AE2B.1060500@gmail.com>
	<93D66B0A-0F6C-4D4B-AA78-F9379C390C2F@gmail.com>
	<252887c8b1864e97a749507eec483c7b@EX-1-HT0.lancs.local>
	<CANVKczO+J5OR3vGCRE0cuT7KfA9y7zQdq_iRjJYkqs=1+3hp4g@mail.gmail.com>
	<E66794E69CFDE04D9A70842786030B931C319123@PA-MBX01.na.tibco.com>
	<AABCAC34-1DF1-4EFA-B979-82799C4BCC23@gmail.com>
Message-ID: <E66794E69CFDE04D9A70842786030B931C31A0FF@PA-MBX01.na.tibco.com>

> But up-arrow, ctrl-A then "z <-" is not much less convenient, is it?

I didn't know that ctrl-A would bring me to the start of the line, nor
that ctrl-E would bring me to the end.  Thanks.

Bill Dunlap
Spotfire, TIBCO Software
wdunlap tibco.com


> -----Original Message-----
> From: peter dalgaard [mailto:pdalgd at gmail.com]
> Sent: Friday, July 05, 2013 11:25 AM
> To: William Dunlap
> Cc: Barry Rowlingson; R-devel
> Subject: Re: [Rd] should the text for RIGHT_ASSIGN be -> in getParseData()?
> 
> 
> On Jul 5, 2013, at 18:59 , William Dunlap wrote:
> 
> >> Is there any reason right-assign with "->" still exists? How much
> >> code on CRAN uses it, and how trivially could it be excised?
> >
> > I use '->' a lot when doing interactive work.  I often first run a command
> > to see its printed output then decide that I had better save its value.
> > The up-arrow key gives me the previous command line with the cursor placed at the
> > end of the line so adding '-> z' at the end of the line is convenient.
> > (Not using the up-arrow key and doing 'z <- .Last.value' also works, but
> > I don't like its context sensitivity.)
> 
> But up-arrow, ctrl-A then "z <-" is not much less convenient, is it?
> 
> I have used in with multi-line input, occasionally, though. As in
> 
> replicate(10000, {
>    ysim <- rbinom(length(p), n, p)
>    glm(cbind(ysim, n - ysim) ~ x, binomial)$deviance
> })
> 
> ... and then you realize that you probably don't want to look at 10000 simulated
> deviances and add "-> simDev".
> 
> >
> > I never use '->' when writing code in a file, so you would have to search
> > my .Rhistory files, not my *.R files, for evidence of its usefulness to me.
> >
> > Bill Dunlap
> > Spotfire, TIBCO Software
> > wdunlap tibco.com
> >
> >
> >> -----Original Message-----
> >> From: r-devel-bounces at r-project.org [mailto:r-devel-bounces at r-project.org] On
> Behalf
> >> Of Barry Rowlingson
> >> Sent: Friday, July 05, 2013 9:29 AM
> >> To: Duncan Murdoch
> >> Cc: R-devel
> >> Subject: Re: [Rd] should the text for RIGHT_ASSIGN be -> in getParseData()?
> >>
> >> On Fri, Jul 5, 2013 at 12:57 PM, Duncan Murdoch
> >> <murdoch.duncan at gmail.com> wrote:
> >>
> >>> R itself doesn't make use of the text column, it's for display of code
> >>> by highlighters etc.  So if anyone does assume text is a function name,
> >>> it's their bug, not ours.  In fact, the bug is already there, because
> >>> there is actually one other example which was being parsed properly,
> >>> "**" is translated to "^".  There's no `**` function, but 2**3 works.
> >>
> >> Is there any reason right-assign with "->" still exists? How much
> >> code on CRAN uses it, and how trivially could it be excised? Can we
> >> also have 'up assign'  and "down assign" so I can do:
> >>
> >>>    3
> >>> x -^
> >>> x -v
> >>>    4
> >>
> >> - they make just as much sense.
> >>
> >> Okay, lets see all the edge cases.....
> >>
> >> Barry
> >>
> >> ______________________________________________
> >> R-devel at r-project.org mailing list
> >> https://stat.ethz.ch/mailman/listinfo/r-devel
> >
> > ______________________________________________
> > R-devel at r-project.org mailing list
> > https://stat.ethz.ch/mailman/listinfo/r-devel
> 
> --
> Peter Dalgaard, Professor,
> Center for Statistics, Copenhagen Business School
> Solbjerg Plads 3, 2000 Frederiksberg, Denmark
> Phone: (+45)38153501
> Email: pd.mes at cbs.dk  Priv: PDalgd at gmail.com
> 
> 
> 
> 
> 
> 
> 


From rowe at muxspace.com  Fri Jul  5 21:11:11 2013
From: rowe at muxspace.com (Brian Lee Yung Rowe)
Date: Fri, 5 Jul 2013 15:11:11 -0400
Subject: [Rd] should the text for RIGHT_ASSIGN be -> in getParseData()?
In-Reply-To: <E66794E69CFDE04D9A70842786030B931C31A0FF@PA-MBX01.na.tibco.com>
References: <CANROs4eVNfPjs_D5wb4Hqgy3Axb=88PZ_eGHVAFhTbi-3uT3Tw@mail.gmail.com>
	<51D6AE2B.1060500@gmail.com>
	<93D66B0A-0F6C-4D4B-AA78-F9379C390C2F@gmail.com>
	<252887c8b1864e97a749507eec483c7b@EX-1-HT0.lancs.local>
	<CANVKczO+J5OR3vGCRE0cuT7KfA9y7zQdq_iRjJYkqs=1+3hp4g@mail.gmail.com>
	<E66794E69CFDE04D9A70842786030B931C319123@PA-MBX01.na.tibco.com>
	<AABCAC34-1DF1-4EFA-B979-82799C4BCC23@gmail.com>
	<E66794E69CFDE04D9A70842786030B931C31A0FF@PA-MBX01.na.tibco.com>
Message-ID: <7ED4F31C-6ED3-4694-9592-0BCFFF0CD405@muxspace.com>

Here are two more standard emacs bindings that work:  Ctrl-K to cut and Ctrl-Y to paste. 

?????
Brian Lee Yung Rowe
917 496 4583


On Jul 5, 2013, at 2:32 PM, William Dunlap <wdunlap at tibco.com> wrote:

>> But up-arrow, ctrl-A then "z <-" is not much less convenient, is it?
> 
> I didn't know that ctrl-A would bring me to the start of the line, nor
> that ctrl-E would bring me to the end.  Thanks.
> 
> Bill Dunlap
> Spotfire, TIBCO Software
> wdunlap tibco.com
> 
> 
>> -----Original Message-----
>> From: peter dalgaard [mailto:pdalgd at gmail.com]
>> Sent: Friday, July 05, 2013 11:25 AM
>> To: William Dunlap
>> Cc: Barry Rowlingson; R-devel
>> Subject: Re: [Rd] should the text for RIGHT_ASSIGN be -> in getParseData()?
>> 
>> 
>> On Jul 5, 2013, at 18:59 , William Dunlap wrote:
>> 
>>>> Is there any reason right-assign with "->" still exists? How much
>>>> code on CRAN uses it, and how trivially could it be excised?
>>> 
>>> I use '->' a lot when doing interactive work.  I often first run a command
>>> to see its printed output then decide that I had better save its value.
>>> The up-arrow key gives me the previous command line with the cursor placed at the
>>> end of the line so adding '-> z' at the end of the line is convenient.
>>> (Not using the up-arrow key and doing 'z <- .Last.value' also works, but
>>> I don't like its context sensitivity.)
>> 
>> But up-arrow, ctrl-A then "z <-" is not much less convenient, is it?
>> 
>> I have used in with multi-line input, occasionally, though. As in
>> 
>> replicate(10000, {
>>   ysim <- rbinom(length(p), n, p)
>>   glm(cbind(ysim, n - ysim) ~ x, binomial)$deviance
>> })
>> 
>> ... and then you realize that you probably don't want to look at 10000 simulated
>> deviances and add "-> simDev".
>> 
>>> 
>>> I never use '->' when writing code in a file, so you would have to search
>>> my .Rhistory files, not my *.R files, for evidence of its usefulness to me.
>>> 
>>> Bill Dunlap
>>> Spotfire, TIBCO Software
>>> wdunlap tibco.com
>>> 
>>> 
>>>> -----Original Message-----
>>>> From: r-devel-bounces at r-project.org [mailto:r-devel-bounces at r-project.org] On
>> Behalf
>>>> Of Barry Rowlingson
>>>> Sent: Friday, July 05, 2013 9:29 AM
>>>> To: Duncan Murdoch
>>>> Cc: R-devel
>>>> Subject: Re: [Rd] should the text for RIGHT_ASSIGN be -> in getParseData()?
>>>> 
>>>> On Fri, Jul 5, 2013 at 12:57 PM, Duncan Murdoch
>>>> <murdoch.duncan at gmail.com> wrote:
>>>> 
>>>>> R itself doesn't make use of the text column, it's for display of code
>>>>> by highlighters etc.  So if anyone does assume text is a function name,
>>>>> it's their bug, not ours.  In fact, the bug is already there, because
>>>>> there is actually one other example which was being parsed properly,
>>>>> "**" is translated to "^".  There's no `**` function, but 2**3 works.
>>>> 
>>>> Is there any reason right-assign with "->" still exists? How much
>>>> code on CRAN uses it, and how trivially could it be excised? Can we
>>>> also have 'up assign'  and "down assign" so I can do:
>>>> 
>>>>>   3
>>>>> x -^
>>>>> x -v
>>>>>   4
>>>> 
>>>> - they make just as much sense.
>>>> 
>>>> Okay, lets see all the edge cases.....
>>>> 
>>>> Barry
>>>> 
>>>> ______________________________________________
>>>> R-devel at r-project.org mailing list
>>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>> 
>>> ______________________________________________
>>> R-devel at r-project.org mailing list
>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>> 
>> --
>> Peter Dalgaard, Professor,
>> Center for Statistics, Copenhagen Business School
>> Solbjerg Plads 3, 2000 Frederiksberg, Denmark
>> Phone: (+45)38153501
>> Email: pd.mes at cbs.dk  Priv: PDalgd at gmail.com
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From murdoch.duncan at gmail.com  Fri Jul  5 21:25:08 2013
From: murdoch.duncan at gmail.com (Duncan Murdoch)
Date: Fri, 05 Jul 2013 15:25:08 -0400
Subject: [Rd] should the text for RIGHT_ASSIGN be -> in getParseData()?
In-Reply-To: <CANVKczO+J5OR3vGCRE0cuT7KfA9y7zQdq_iRjJYkqs=1+3hp4g@mail.gmail.com>
References: <CANROs4eVNfPjs_D5wb4Hqgy3Axb=88PZ_eGHVAFhTbi-3uT3Tw@mail.gmail.com>
	<51D6AE2B.1060500@gmail.com>
	<93D66B0A-0F6C-4D4B-AA78-F9379C390C2F@gmail.com>
	<252887c8b1864e97a749507eec483c7b@EX-1-HT0.lancs.local>
	<CANVKczO+J5OR3vGCRE0cuT7KfA9y7zQdq_iRjJYkqs=1+3hp4g@mail.gmail.com>
Message-ID: <51D71D94.10909@gmail.com>

On 05/07/2013 12:29 PM, Barry Rowlingson wrote:
> On Fri, Jul 5, 2013 at 12:57 PM, Duncan Murdoch
> <murdoch.duncan at gmail.com> wrote:
>
> > R itself doesn't make use of the text column, it's for display of code
> > by highlighters etc.  So if anyone does assume text is a function name,
> > it's their bug, not ours.  In fact, the bug is already there, because
> > there is actually one other example which was being parsed properly,
> > "**" is translated to "^".  There's no `**` function, but 2**3 works.
>
>   Is there any reason right-assign with "->" still exists? How much
> code on CRAN uses it, and how trivially could it be excised?

Dozens of packages on CRAN use it:  abc, abd, adabag, AdaptFitOS, bgeva, ...

> Can we
> also have 'up assign'  and "down assign" so I can do:
>
>   >     3
>   > x -^
>   > x -v
>   >     4
>
>   - they make just as much sense.

I'll work on those; they sound easier than excising right-assign.

Duncan
>
>   Okay, lets see all the edge cases.....
>
> Barry


From wdunlap at tibco.com  Fri Jul  5 21:52:08 2013
From: wdunlap at tibco.com (William Dunlap)
Date: Fri, 5 Jul 2013 19:52:08 +0000
Subject: [Rd] should the text for RIGHT_ASSIGN be -> in getParseData()?
In-Reply-To: <7ED4F31C-6ED3-4694-9592-0BCFFF0CD405@muxspace.com>
References: <CANROs4eVNfPjs_D5wb4Hqgy3Axb=88PZ_eGHVAFhTbi-3uT3Tw@mail.gmail.com>
	<51D6AE2B.1060500@gmail.com>
	<93D66B0A-0F6C-4D4B-AA78-F9379C390C2F@gmail.com>
	<252887c8b1864e97a749507eec483c7b@EX-1-HT0.lancs.local>
	<CANVKczO+J5OR3vGCRE0cuT7KfA9y7zQdq_iRjJYkqs=1+3hp4g@mail.gmail.com>
	<E66794E69CFDE04D9A70842786030B931C319123@PA-MBX01.na.tibco.com>
	<AABCAC34-1DF1-4EFA-B979-82799C4BCC23@gmail.com>
	<E66794E69CFDE04D9A70842786030B931C31A0FF@PA-MBX01.na.tibco.com>
	<7ED4F31C-6ED3-4694-9592-0BCFFF0CD405@muxspace.com>
Message-ID: <E66794E69CFDE04D9A70842786030B931C31A14B@PA-MBX01.na.tibco.com>

Ctrl-K is delete from here to end of line on Linux-comand-line and Windows-GUI R.
(My fingers are not nimble enough for emacs, I'll stick with vi.)

Bill Dunlap
Spotfire, TIBCO Software
wdunlap tibco.com


> -----Original Message-----
> From: Brian Lee Yung Rowe [mailto:rowe at muxspace.com]
> Sent: Friday, July 05, 2013 12:11 PM
> To: William Dunlap
> Cc: peter dalgaard; R-devel; Barry Rowlingson
> Subject: Re: [Rd] should the text for RIGHT_ASSIGN be -> in getParseData()?
> 
> Here are two more standard emacs bindings that work:  Ctrl-K to cut and Ctrl-Y to paste.
> 
> ?????
> Brian Lee Yung Rowe
> 917 496 4583
> 
> 
> On Jul 5, 2013, at 2:32 PM, William Dunlap <wdunlap at tibco.com> wrote:
> 
> >> But up-arrow, ctrl-A then "z <-" is not much less convenient, is it?
> >
> > I didn't know that ctrl-A would bring me to the start of the line, nor
> > that ctrl-E would bring me to the end.  Thanks.
> >
> > Bill Dunlap
> > Spotfire, TIBCO Software
> > wdunlap tibco.com
> >
> >
> >> -----Original Message-----
> >> From: peter dalgaard [mailto:pdalgd at gmail.com]
> >> Sent: Friday, July 05, 2013 11:25 AM
> >> To: William Dunlap
> >> Cc: Barry Rowlingson; R-devel
> >> Subject: Re: [Rd] should the text for RIGHT_ASSIGN be -> in getParseData()?
> >>
> >>
> >> On Jul 5, 2013, at 18:59 , William Dunlap wrote:
> >>
> >>>> Is there any reason right-assign with "->" still exists? How much
> >>>> code on CRAN uses it, and how trivially could it be excised?
> >>>
> >>> I use '->' a lot when doing interactive work.  I often first run a command
> >>> to see its printed output then decide that I had better save its value.
> >>> The up-arrow key gives me the previous command line with the cursor placed at the
> >>> end of the line so adding '-> z' at the end of the line is convenient.
> >>> (Not using the up-arrow key and doing 'z <- .Last.value' also works, but
> >>> I don't like its context sensitivity.)
> >>
> >> But up-arrow, ctrl-A then "z <-" is not much less convenient, is it?
> >>
> >> I have used in with multi-line input, occasionally, though. As in
> >>
> >> replicate(10000, {
> >>   ysim <- rbinom(length(p), n, p)
> >>   glm(cbind(ysim, n - ysim) ~ x, binomial)$deviance
> >> })
> >>
> >> ... and then you realize that you probably don't want to look at 10000 simulated
> >> deviances and add "-> simDev".
> >>
> >>>
> >>> I never use '->' when writing code in a file, so you would have to search
> >>> my .Rhistory files, not my *.R files, for evidence of its usefulness to me.
> >>>
> >>> Bill Dunlap
> >>> Spotfire, TIBCO Software
> >>> wdunlap tibco.com
> >>>
> >>>
> >>>> -----Original Message-----
> >>>> From: r-devel-bounces at r-project.org [mailto:r-devel-bounces at r-project.org] On
> >> Behalf
> >>>> Of Barry Rowlingson
> >>>> Sent: Friday, July 05, 2013 9:29 AM
> >>>> To: Duncan Murdoch
> >>>> Cc: R-devel
> >>>> Subject: Re: [Rd] should the text for RIGHT_ASSIGN be -> in getParseData()?
> >>>>
> >>>> On Fri, Jul 5, 2013 at 12:57 PM, Duncan Murdoch
> >>>> <murdoch.duncan at gmail.com> wrote:
> >>>>
> >>>>> R itself doesn't make use of the text column, it's for display of code
> >>>>> by highlighters etc.  So if anyone does assume text is a function name,
> >>>>> it's their bug, not ours.  In fact, the bug is already there, because
> >>>>> there is actually one other example which was being parsed properly,
> >>>>> "**" is translated to "^".  There's no `**` function, but 2**3 works.
> >>>>
> >>>> Is there any reason right-assign with "->" still exists? How much
> >>>> code on CRAN uses it, and how trivially could it be excised? Can we
> >>>> also have 'up assign'  and "down assign" so I can do:
> >>>>
> >>>>>   3
> >>>>> x -^
> >>>>> x -v
> >>>>>   4
> >>>>
> >>>> - they make just as much sense.
> >>>>
> >>>> Okay, lets see all the edge cases.....
> >>>>
> >>>> Barry
> >>>>
> >>>> ______________________________________________
> >>>> R-devel at r-project.org mailing list
> >>>> https://stat.ethz.ch/mailman/listinfo/r-devel
> >>>
> >>> ______________________________________________
> >>> R-devel at r-project.org mailing list
> >>> https://stat.ethz.ch/mailman/listinfo/r-devel
> >>
> >> --
> >> Peter Dalgaard, Professor,
> >> Center for Statistics, Copenhagen Business School
> >> Solbjerg Plads 3, 2000 Frederiksberg, Denmark
> >> Phone: (+45)38153501
> >> Email: pd.mes at cbs.dk  Priv: PDalgd at gmail.com
> >
> > ______________________________________________
> > R-devel at r-project.org mailing list
> > https://stat.ethz.ch/mailman/listinfo/r-devel

From hlin09pu at gmail.com  Fri Jul  5 19:12:19 2013
From: hlin09pu at gmail.com (maxpar)
Date: Fri, 5 Jul 2013 10:12:19 -0700 (PDT)
Subject: [Rd] Get the tail of a list in C
In-Reply-To: <1fc49b7c8acd4f6b358c3db2d91d5660@r-enthusiasts.com>
References: <1373001349875-4670900.post@n4.nabble.com>
	<1fc49b7c8acd4f6b358c3db2d91d5660@r-enthusiasts.com>
Message-ID: <1373044339090-4670958.post@n4.nabble.com>

Thanks. Got it. I need differentiate pairlist and list.





--
View this message in context: http://r.789695.n4.nabble.com/Get-the-tail-of-a-list-in-C-tp4670900p4670958.html
Sent from the R devel mailing list archive at Nabble.com.


From b.rowlingson at lancaster.ac.uk  Sat Jul  6 00:55:02 2013
From: b.rowlingson at lancaster.ac.uk (Barry Rowlingson)
Date: Fri, 5 Jul 2013 23:55:02 +0100
Subject: [Rd] should the text for RIGHT_ASSIGN be -> in getParseData()?
In-Reply-To: <b5a14bcd6c2142a6a9b48564eaf61bbd@EX-0-HT0.lancs.local>
References: <CANROs4eVNfPjs_D5wb4Hqgy3Axb=88PZ_eGHVAFhTbi-3uT3Tw@mail.gmail.com>
	<51D6AE2B.1060500@gmail.com>
	<93D66B0A-0F6C-4D4B-AA78-F9379C390C2F@gmail.com>
	<252887c8b1864e97a749507eec483c7b@EX-1-HT0.lancs.local>
	<CANVKczO+J5OR3vGCRE0cuT7KfA9y7zQdq_iRjJYkqs=1+3hp4g@mail.gmail.com>
	<E66794E69CFDE04D9A70842786030B931C319123@PA-MBX01.na.tibco.com>
	<b5a14bcd6c2142a6a9b48564eaf61bbd@EX-0-HT0.lancs.local>
Message-ID: <CANVKczP1-uBx7wwjOzsLBPAyAQAg-NxF0A3yqV9C78DLvH8-vg@mail.gmail.com>

On Fri, Jul 5, 2013 at 7:24 PM, peter dalgaard <pdalgd at gmail.com> wrote:

> I have used in with multi-line input, occasionally, though. As in
>
> replicate(10000, {
>    ysim <- rbinom(length(p), n, p)
>    glm(cbind(ysim, n - ysim) ~ x, binomial)$deviance
> })
>
> ... and then you realize that you probably don't want to look at 10000 simulated deviances and add "-> simDev".
>

 Yes, that's kinda cute, but then you realise you don't want to have
to type all that again and it would really be better off in a
function. Can you do something like:

replicate(10000,{
  ysim <- rbinom(length(p), n, p)
glm(cbind(ysim, n - ysim) ~ x, binomial)$deviance
}) -> function()...

 - I don't think so. Once you've started typing, the only way to get
it into a function is going to involve sticking function() at the
start, at which point you can add the foo <-

I guess this is the point where Dirk gets upset and calls me a troll.
I'll shut up. You've convinced me its mostly harmless.

Barry


From rowe at muxspace.com  Sat Jul  6 01:42:46 2013
From: rowe at muxspace.com (Brian Lee Yung Rowe)
Date: Fri, 5 Jul 2013 19:42:46 -0400
Subject: [Rd] should the text for RIGHT_ASSIGN be -> in getParseData()?
In-Reply-To: <E66794E69CFDE04D9A70842786030B931C31A14B@PA-MBX01.na.tibco.com>
References: <CANROs4eVNfPjs_D5wb4Hqgy3Axb=88PZ_eGHVAFhTbi-3uT3Tw@mail.gmail.com>
	<51D6AE2B.1060500@gmail.com>
	<93D66B0A-0F6C-4D4B-AA78-F9379C390C2F@gmail.com>
	<252887c8b1864e97a749507eec483c7b@EX-1-HT0.lancs.local>
	<CANVKczO+J5OR3vGCRE0cuT7KfA9y7zQdq_iRjJYkqs=1+3hp4g@mail.gmail.com>
	<E66794E69CFDE04D9A70842786030B931C319123@PA-MBX01.na.tibco.com>
	<AABCAC34-1DF1-4EFA-B979-82799C4BCC23@gmail.com>
	<E66794E69CFDE04D9A70842786030B931C31A0FF@PA-MBX01.na.tibco.com>
	<7ED4F31C-6ED3-4694-9592-0BCFFF0CD405@muxspace.com>
	<E66794E69CFDE04D9A70842786030B931C31A14B@PA-MBX01.na.tibco.com>
Message-ID: <7EFF42EB-A6C4-4A9A-BE43-D58BA3A321F4@muxspace.com>

That is a more accurate statement regarding Ctrl-K. Nonetheless whatever is killed can be yanked back via Ctrl-Y, so the effect emulates cutting and pasting. I am also a vi user, but these four basic emacs bindings seem to perennially haunt numerous terminal apps. 

?????
Brian Lee Yung Rowe
917 496 4583


On Jul 5, 2013, at 3:53 PM, William Dunlap <wdunlap at tibco.com> wrote:

> Ctrl-K is delete from here to end of line on Linux-comand-line and Windows-GUI R.
> (My fingers are not nimble enough for emacs, I'll stick with vi.)
> 
> Bill Dunlap
> Spotfire, TIBCO Software
> wdunlap tibco.com
> 
> 
>> -----Original Message-----
>> From: Brian Lee Yung Rowe [mailto:rowe at muxspace.com]
>> Sent: Friday, July 05, 2013 12:11 PM
>> To: William Dunlap
>> Cc: peter dalgaard; R-devel; Barry Rowlingson
>> Subject: Re: [Rd] should the text for RIGHT_ASSIGN be -> in getParseData()?
>> 
>> Here are two more standard emacs bindings that work:  Ctrl-K to cut and Ctrl-Y to paste.
>> 
>> ?????
>> Brian Lee Yung Rowe
>> 917 496 4583
>> 
>> 
>> On Jul 5, 2013, at 2:32 PM, William Dunlap <wdunlap at tibco.com> wrote:
>> 
>>>> But up-arrow, ctrl-A then "z <-" is not much less convenient, is it?
>>> 
>>> I didn't know that ctrl-A would bring me to the start of the line, nor
>>> that ctrl-E would bring me to the end.  Thanks.
>>> 
>>> Bill Dunlap
>>> Spotfire, TIBCO Software
>>> wdunlap tibco.com
>>> 
>>> 
>>>> -----Original Message-----
>>>> From: peter dalgaard [mailto:pdalgd at gmail.com]
>>>> Sent: Friday, July 05, 2013 11:25 AM
>>>> To: William Dunlap
>>>> Cc: Barry Rowlingson; R-devel
>>>> Subject: Re: [Rd] should the text for RIGHT_ASSIGN be -> in getParseData()?
>>>> 
>>>> 
>>>> On Jul 5, 2013, at 18:59 , William Dunlap wrote:
>>>> 
>>>>>> Is there any reason right-assign with "->" still exists? How much
>>>>>> code on CRAN uses it, and how trivially could it be excised?
>>>>> 
>>>>> I use '->' a lot when doing interactive work.  I often first run a command
>>>>> to see its printed output then decide that I had better save its value.
>>>>> The up-arrow key gives me the previous command line with the cursor placed at the
>>>>> end of the line so adding '-> z' at the end of the line is convenient.
>>>>> (Not using the up-arrow key and doing 'z <- .Last.value' also works, but
>>>>> I don't like its context sensitivity.)
>>>> 
>>>> But up-arrow, ctrl-A then "z <-" is not much less convenient, is it?
>>>> 
>>>> I have used in with multi-line input, occasionally, though. As in
>>>> 
>>>> replicate(10000, {
>>>>  ysim <- rbinom(length(p), n, p)
>>>>  glm(cbind(ysim, n - ysim) ~ x, binomial)$deviance
>>>> })
>>>> 
>>>> ... and then you realize that you probably don't want to look at 10000 simulated
>>>> deviances and add "-> simDev".
>>>> 
>>>>> 
>>>>> I never use '->' when writing code in a file, so you would have to search
>>>>> my .Rhistory files, not my *.R files, for evidence of its usefulness to me.
>>>>> 
>>>>> Bill Dunlap
>>>>> Spotfire, TIBCO Software
>>>>> wdunlap tibco.com
>>>>> 
>>>>> 
>>>>>> -----Original Message-----
>>>>>> From: r-devel-bounces at r-project.org [mailto:r-devel-bounces at r-project.org] On
>>>> Behalf
>>>>>> Of Barry Rowlingson
>>>>>> Sent: Friday, July 05, 2013 9:29 AM
>>>>>> To: Duncan Murdoch
>>>>>> Cc: R-devel
>>>>>> Subject: Re: [Rd] should the text for RIGHT_ASSIGN be -> in getParseData()?
>>>>>> 
>>>>>> On Fri, Jul 5, 2013 at 12:57 PM, Duncan Murdoch
>>>>>> <murdoch.duncan at gmail.com> wrote:
>>>>>> 
>>>>>>> R itself doesn't make use of the text column, it's for display of code
>>>>>>> by highlighters etc.  So if anyone does assume text is a function name,
>>>>>>> it's their bug, not ours.  In fact, the bug is already there, because
>>>>>>> there is actually one other example which was being parsed properly,
>>>>>>> "**" is translated to "^".  There's no `**` function, but 2**3 works.
>>>>>> 
>>>>>> Is there any reason right-assign with "->" still exists? How much
>>>>>> code on CRAN uses it, and how trivially could it be excised? Can we
>>>>>> also have 'up assign'  and "down assign" so I can do:
>>>>>> 
>>>>>>>  3
>>>>>>> x -^
>>>>>>> x -v
>>>>>>>  4
>>>>>> 
>>>>>> - they make just as much sense.
>>>>>> 
>>>>>> Okay, lets see all the edge cases.....
>>>>>> 
>>>>>> Barry
>>>>>> 
>>>>>> ______________________________________________
>>>>>> R-devel at r-project.org mailing list
>>>>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>>>> 
>>>>> ______________________________________________
>>>>> R-devel at r-project.org mailing list
>>>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>>> 
>>>> --
>>>> Peter Dalgaard, Professor,
>>>> Center for Statistics, Copenhagen Business School
>>>> Solbjerg Plads 3, 2000 Frederiksberg, Denmark
>>>> Phone: (+45)38153501
>>>> Email: pd.mes at cbs.dk  Priv: PDalgd at gmail.com
>>> 
>>> ______________________________________________
>>> R-devel at r-project.org mailing list
>>> https://stat.ethz.ch/mailman/listinfo/r-devel


From peter.meilstrup at gmail.com  Sat Jul  6 02:04:12 2013
From: peter.meilstrup at gmail.com (Peter Meilstrup)
Date: Fri, 5 Jul 2013 17:04:12 -0700
Subject: [Rd] should the text for RIGHT_ASSIGN be -> in getParseData()?
In-Reply-To: <7EFF42EB-A6C4-4A9A-BE43-D58BA3A321F4@muxspace.com>
References: <CANROs4eVNfPjs_D5wb4Hqgy3Axb=88PZ_eGHVAFhTbi-3uT3Tw@mail.gmail.com>
	<51D6AE2B.1060500@gmail.com>
	<93D66B0A-0F6C-4D4B-AA78-F9379C390C2F@gmail.com>
	<252887c8b1864e97a749507eec483c7b@EX-1-HT0.lancs.local>
	<CANVKczO+J5OR3vGCRE0cuT7KfA9y7zQdq_iRjJYkqs=1+3hp4g@mail.gmail.com>
	<E66794E69CFDE04D9A70842786030B931C319123@PA-MBX01.na.tibco.com>
	<AABCAC34-1DF1-4EFA-B979-82799C4BCC23@gmail.com>
	<E66794E69CFDE04D9A70842786030B931C31A0FF@PA-MBX01.na.tibco.com>
	<7ED4F31C-6ED3-4694-9592-0BCFFF0CD405@muxspace.com>
	<E66794E69CFDE04D9A70842786030B931C31A14B@PA-MBX01.na.tibco.com>
	<7EFF42EB-A6C4-4A9A-BE43-D58BA3A321F4@muxspace.com>
Message-ID: <A0C78646-795A-479D-8637-EA8DA531B846@gmail.com>

For these programs that use GNU readline, hit Alt-Control-J to switch into vi-like bindings. 

On Jul 5, 2013, at 16:42, Brian Lee Yung Rowe <rowe at muxspace.com> wrote:

> That is a more accurate statement regarding Ctrl-K. Nonetheless whatever is killed can be yanked back via Ctrl-Y, so the effect emulates cutting and pasting. I am also a vi user, but these four basic emacs bindings seem to perennially haunt numerous terminal apps. 
> 
> ?????
> Brian Lee Yung Rowe
> 917 496 4583
> 
> 
> On Jul 5, 2013, at 3:53 PM, William Dunlap <wdunlap at tibco.com> wrote:
> 
>> Ctrl-K is delete from here to end of line on Linux-comand-line and Windows-GUI R.
>> (My fingers are not nimble enough for emacs, I'll stick with vi.)
>> 
>> Bill Dunlap
>> Spotfire, TIBCO Software
>> wdunlap tibco.com
>> 
>> 
>>> -----Original Message-----
>>> From: Brian Lee Yung Rowe [mailto:rowe at muxspace.com]
>>> Sent: Friday, July 05, 2013 12:11 PM
>>> To: William Dunlap
>>> Cc: peter dalgaard; R-devel; Barry Rowlingson
>>> Subject: Re: [Rd] should the text for RIGHT_ASSIGN be -> in getParseData()?
>>> 
>>> Here are two more standard emacs bindings that work:  Ctrl-K to cut and Ctrl-Y to paste.
>>> 
>>> ?????
>>> Brian Lee Yung Rowe
>>> 917 496 4583
>>> 
>>> 
>>> On Jul 5, 2013, at 2:32 PM, William Dunlap <wdunlap at tibco.com> wrote:
>>> 
>>>>> But up-arrow, ctrl-A then "z <-" is not much less convenient, is it?
>>>> 
>>>> I didn't know that ctrl-A would bring me to the start of the line, nor
>>>> that ctrl-E would bring me to the end.  Thanks.
>>>> 
>>>> Bill Dunlap
>>>> Spotfire, TIBCO Software
>>>> wdunlap tibco.com
>>>> 
>>>> 
>>>>> -----Original Message-----
>>>>> From: peter dalgaard [mailto:pdalgd at gmail.com]
>>>>> Sent: Friday, July 05, 2013 11:25 AM
>>>>> To: William Dunlap
>>>>> Cc: Barry Rowlingson; R-devel
>>>>> Subject: Re: [Rd] should the text for RIGHT_ASSIGN be -> in getParseData()?
>>>>> 
>>>>> 
>>>>> On Jul 5, 2013, at 18:59 , William Dunlap wrote:
>>>>> 
>>>>>>> Is there any reason right-assign with "->" still exists? How much
>>>>>>> code on CRAN uses it, and how trivially could it be excised?
>>>>>> 
>>>>>> I use '->' a lot when doing interactive work.  I often first run a command
>>>>>> to see its printed output then decide that I had better save its value.
>>>>>> The up-arrow key gives me the previous command line with the cursor placed at the
>>>>>> end of the line so adding '-> z' at the end of the line is convenient.
>>>>>> (Not using the up-arrow key and doing 'z <- .Last.value' also works, but
>>>>>> I don't like its context sensitivity.)
>>>>> 
>>>>> But up-arrow, ctrl-A then "z <-" is not much less convenient, is it?
>>>>> 
>>>>> I have used in with multi-line input, occasionally, though. As in
>>>>> 
>>>>> replicate(10000, {
>>>>> ysim <- rbinom(length(p), n, p)
>>>>> glm(cbind(ysim, n - ysim) ~ x, binomial)$deviance
>>>>> })
>>>>> 
>>>>> ... and then you realize that you probably don't want to look at 10000 simulated
>>>>> deviances and add "-> simDev".
>>>>> 
>>>>>> 
>>>>>> I never use '->' when writing code in a file, so you would have to search
>>>>>> my .Rhistory files, not my *.R files, for evidence of its usefulness to me.
>>>>>> 
>>>>>> Bill Dunlap
>>>>>> Spotfire, TIBCO Software
>>>>>> wdunlap tibco.com
>>>>>> 
>>>>>> 
>>>>>>> -----Original Message-----
>>>>>>> From: r-devel-bounces at r-project.org [mailto:r-devel-bounces at r-project.org] On
>>>>> Behalf
>>>>>>> Of Barry Rowlingson
>>>>>>> Sent: Friday, July 05, 2013 9:29 AM
>>>>>>> To: Duncan Murdoch
>>>>>>> Cc: R-devel
>>>>>>> Subject: Re: [Rd] should the text for RIGHT_ASSIGN be -> in getParseData()?
>>>>>>> 
>>>>>>> On Fri, Jul 5, 2013 at 12:57 PM, Duncan Murdoch
>>>>>>> <murdoch.duncan at gmail.com> wrote:
>>>>>>> 
>>>>>>>> R itself doesn't make use of the text column, it's for display of code
>>>>>>>> by highlighters etc.  So if anyone does assume text is a function name,
>>>>>>>> it's their bug, not ours.  In fact, the bug is already there, because
>>>>>>>> there is actually one other example which was being parsed properly,
>>>>>>>> "**" is translated to "^".  There's no `**` function, but 2**3 works.
>>>>>>> 
>>>>>>> Is there any reason right-assign with "->" still exists? How much
>>>>>>> code on CRAN uses it, and how trivially could it be excised? Can we
>>>>>>> also have 'up assign'  and "down assign" so I can do:
>>>>>>> 
>>>>>>>> 3
>>>>>>>> x -^
>>>>>>>> x -v
>>>>>>>> 4
>>>>>>> 
>>>>>>> - they make just as much sense.
>>>>>>> 
>>>>>>> Okay, lets see all the edge cases.....
>>>>>>> 
>>>>>>> Barry
>>>>>>> 
>>>>>>> ______________________________________________
>>>>>>> R-devel at r-project.org mailing list
>>>>>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>>>>> 
>>>>>> ______________________________________________
>>>>>> R-devel at r-project.org mailing list
>>>>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>>>> 
>>>>> --
>>>>> Peter Dalgaard, Professor,
>>>>> Center for Statistics, Copenhagen Business School
>>>>> Solbjerg Plads 3, 2000 Frederiksberg, Denmark
>>>>> Phone: (+45)38153501
>>>>> Email: pd.mes at cbs.dk  Priv: PDalgd at gmail.com
>>>> 
>>>> ______________________________________________
>>>> R-devel at r-project.org mailing list
>>>> https://stat.ethz.ch/mailman/listinfo/r-devel
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From simon.urbanek at r-project.org  Sat Jul  6 04:14:19 2013
From: simon.urbanek at r-project.org (Simon Urbanek)
Date: Fri, 5 Jul 2013 22:14:19 -0400
Subject: [Rd] R-devel Digest, Vol 125, Issue 2
In-Reply-To: <0EBDAAA2-4D40-433B-8129-4B0B4AE72DB2@yahoo.it>
References: <mailman.19.1372759206.15721.r-devel@r-project.org>
	<E5C33C8D-6FE1-421C-AAEA-FCC6FC5258BA@yahoo.it>
	<9F461B84-4E42-410D-A933-D7D930BCC066@gmail.com>
	<0EBDAAA2-4D40-433B-8129-4B0B4AE72DB2@yahoo.it>
Message-ID: <E16CCA76-6E80-4B27-AC75-2EC263CC858C@r-project.org>

On Jul 4, 2013, at 3:53 AM, gianluca mastrantonio wrote:

> I'm just a beginner, so i can make some stupid error.
> I use the "-l cov.model.h -l util.h" because i need to load another two c++ programs (cov.model.cpp and util.cpp)
> 

Well,then you probably meant

R CMD SHLIB   SpTempWrapC.cpp cov.model.cpp util.cpp

Cheers,
S



> Il giorno 04/lug/2013, alle ore 09:44, peter dalgaard <pdalgd at gmail.com> ha scritto:
> 
>> -I
> 
> 
> 	[[alternative HTML version deleted]]
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
> 
> 


From simon.urbanek at r-project.org  Sat Jul  6 04:19:21 2013
From: simon.urbanek at r-project.org (Simon Urbanek)
Date: Fri, 5 Jul 2013 22:19:21 -0400
Subject: [Rd] Cross-platform linking of a simple front-end
In-Reply-To: <CAM9CR=2z8UWuwtHXV+HsbHqOF9aSe1-mYP72WTe7pf2q+zMXcg@mail.gmail.com>
References: <CAM9CR=2z8UWuwtHXV+HsbHqOF9aSe1-mYP72WTe7pf2q+zMXcg@mail.gmail.com>
Message-ID: <0D58AA12-6314-4277-8570-A7C87F291516@r-project.org>

Jon,

On Jul 4, 2013, at 10:52 AM, Jon Clayden wrote:

> Dear all,
> 
> I have a simple front-end program which uses the APIs described in section
> 8 of "Writing R Extensions" to deviate from the standard R behaviour in
> fairly minor ways. However, I'm having some difficulty getting it to link
> reliably across different platforms.
> 
> R CMD LINK seemed like it would help, but I've had difficulty finding many
> real-world examples online. I've tried
> 
>  R CMD LINK $(R CMD config CC) $(R CMD config --cppflags) $(R CMD config
> --ldflags) -o ../bin/exec/tractor tractor.c
> 
> and this works on one of my test platforms (OS X.8.4, R 3.0.1), but not the
> other (Ubuntu 12.04 LTS, R 2.14.1). In the latter case I get the error
> 
>  /usr/bin/ld: /tmp/ccmKf57E.o: undefined reference to symbol 'log10@
> @GLIBC_2.0'
>  /usr/bin/ld: note: 'log10@@GLIBC_2.0' is defined in DSO
> /lib/i386-linux-gnu/libm.so.6 so try adding it to the linker command line
>  /lib/i386-linux-gnu/libm.so.6: could not read symbols: Invalid operation
>  collect2: ld returned 1 exit status
> 
> I can correct this by adding "-lm" manually to the command, but I'm not
> sure how portable that will itself be.
> 

My guess would be that you did not use --enable-R-shlib when compiling R on Ubuntu so you don't have a shared version of the R library to link against (which is needed to resolve the dependencies). Could that be the case?

Cheers,
Simon


> Could anyone advise on the best way to make this work portably, please? For
> this application I'm not concerned about Windows compatibility -
> portability across Unix-alikes is sufficient. The source code is at <
> https://github.com/jonclayden/tractor/blob/master/src/tractor.c>, if that
> is useful.
> 
> All the best,
> Jon
> 
> 	[[alternative HTML version deleted]]
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
> 
> 


From ripley at stats.ox.ac.uk  Sat Jul  6 07:52:56 2013
From: ripley at stats.ox.ac.uk (Prof Brian Ripley)
Date: Sat, 06 Jul 2013 06:52:56 +0100
Subject: [Rd] Cross-platform linking of a simple front-end
In-Reply-To: <0D58AA12-6314-4277-8570-A7C87F291516@r-project.org>
References: <CAM9CR=2z8UWuwtHXV+HsbHqOF9aSe1-mYP72WTe7pf2q+zMXcg@mail.gmail.com>
	<0D58AA12-6314-4277-8570-A7C87F291516@r-project.org>
Message-ID: <51D7B0B8.8060501@stats.ox.ac.uk>

On 06/07/2013 03:19, Simon Urbanek wrote:
> Jon,
>
> On Jul 4, 2013, at 10:52 AM, Jon Clayden wrote:
>
>> Dear all,
>>
>> I have a simple front-end program which uses the APIs described in section
>> 8 of "Writing R Extensions" to deviate from the standard R behaviour in
>> fairly minor ways. However, I'm having some difficulty getting it to link
>> reliably across different platforms.
>>
>> R CMD LINK seemed like it would help, but I've had difficulty finding many
>> real-world examples online. I've tried
>>
>>   R CMD LINK $(R CMD config CC) $(R CMD config --cppflags) $(R CMD config
>> --ldflags) -o ../bin/exec/tractor tractor.c
>>
>> and this works on one of my test platforms (OS X.8.4, R 3.0.1), but not the
>> other (Ubuntu 12.04 LTS, R 2.14.1). In the latter case I get the error
>>
>>   /usr/bin/ld: /tmp/ccmKf57E.o: undefined reference to symbol 'log10@
>> @GLIBC_2.0'
>>   /usr/bin/ld: note: 'log10@@GLIBC_2.0' is defined in DSO
>> /lib/i386-linux-gnu/libm.so.6 so try adding it to the linker command line
>>   /lib/i386-linux-gnu/libm.so.6: could not read symbols: Invalid operation
>>   collect2: ld returned 1 exit status
>>
>> I can correct this by adding "-lm" manually to the command, but I'm not
>> sure how portable that will itself be.
>>
>
> My guess would be that you did not use --enable-R-shlib when compiling R on Ubuntu so you don't have a shared version of the R library to link against (which is needed to resolve the dependencies). Could that be the case?

I was able to reproduce this on Fedora: that is not the error if R was 
not built as a shared library.

I would simply copy how R does it (for R.bin in src/main).  libtool 
(used by R CMD LINK) is not coming up with the same flags.  On my system 
R is not using -lm:

gcc -std=gnu99 -Wl,--export-dynamic -fopenmp  -L/usr/local/lib64 -o 
R.bin Rmain.o  -L../../lib -lR -lRblas


Adding -lm is not portable (some OSes do not have a separate libm and 
some always add it when linking via $(CC)), but there is a LIBM macro in 
etc/Makeconf which tells you if configure found one.



> Cheers,
> Simon
>
>
>> Could anyone advise on the best way to make this work portably, please? For
>> this application I'm not concerned about Windows compatibility -
>> portability across Unix-alikes is sufficient. The source code is at <
>> https://github.com/jonclayden/tractor/blob/master/src/tractor.c>, if that
>> is useful.
>>
>> All the best,
>> Jon



-- 
Brian D. Ripley,                  ripley at stats.ox.ac.uk
Professor of Applied Statistics,  http://www.stats.ox.ac.uk/~ripley/
University of Oxford,             Tel:  +44 1865 272861 (self)
1 South Parks Road,                     +44 1865 272866 (PA)
Oxford OX1 3TG, UK                Fax:  +44 1865 272595


From peter.meilstrup at gmail.com  Sun Jul  7 06:11:06 2013
From: peter.meilstrup at gmail.com (Peter Meilstrup)
Date: Sat, 6 Jul 2013 21:11:06 -0700
Subject: [Rd] The *tmp* variable
Message-ID: <CAJoaRhbsAUeKHO382L03buo7WGnKh=ysuq3Fn=bhfL04bKkHWQ@mail.gmail.com>

An embedded and charset-unspecified text was scrubbed...
Name: not available
URL: <https://stat.ethz.ch/pipermail/r-devel/attachments/20130706/ee57d5c8/attachment.pl>

From peter.meilstrup at gmail.com  Sun Jul  7 07:22:07 2013
From: peter.meilstrup at gmail.com (Peter Meilstrup)
Date: Sat, 6 Jul 2013 22:22:07 -0700
Subject: [Rd] The *tmp* variable
In-Reply-To: <CACk-te0C4oyVnREWgx5emCnQ_8KCxw8+G7zOhUNFO=3OP0-CuA@mail.gmail.com>
References: <CAJoaRhbsAUeKHO382L03buo7WGnKh=ysuq3Fn=bhfL04bKkHWQ@mail.gmail.com>
	<CACk-te0C4oyVnREWgx5emCnQ_8KCxw8+G7zOhUNFO=3OP0-CuA@mail.gmail.com>
Message-ID: <CAJoaRhb=V192BmADC=8WD0HUszqu=TgU-UrDBSfNpKb6gVx8SA@mail.gmail.com>

An embedded and charset-unspecified text was scrubbed...
Name: not available
URL: <https://stat.ethz.ch/pipermail/r-devel/attachments/20130706/2c0ef746/attachment.pl>

From gunter.berton at gene.com  Sun Jul  7 06:36:49 2013
From: gunter.berton at gene.com (Bert Gunter)
Date: Sat, 6 Jul 2013 21:36:49 -0700
Subject: [Rd] The *tmp* variable
In-Reply-To: <CAJoaRhbsAUeKHO382L03buo7WGnKh=ysuq3Fn=bhfL04bKkHWQ@mail.gmail.com>
References: <CAJoaRhbsAUeKHO382L03buo7WGnKh=ysuq3Fn=bhfL04bKkHWQ@mail.gmail.com>
Message-ID: <CACk-te0C4oyVnREWgx5emCnQ_8KCxw8+G7zOhUNFO=3OP0-CuA@mail.gmail.com>

Peter:

(Your function doesn't work -- you need to specify runif(1))

What ambiguity?

In the assignment within f(), x <- x+1,

the "x" on the rhs is a free variable in the function, and is
therefore looked for in the environment where the function was
defined. The x on the lhs is defined within the function only.

No matter what f() returns, x remains 1 in the environment from which
f is called. The function does not "return x" -- it returns a value,
which you can assign as you wish.

So ???
(and apologies if I'm missing something obvious).

Cheers,
Bert

On Sat, Jul 6, 2013 at 9:11 PM, Peter Meilstrup
<peter.meilstrup at gmail.com> wrote:
> When complex assignments are performed, the R interpreter creates, then
> removes a special variable *tmp*. However, when byte compiling is enabled,
> it seems that a different mechanism for making compound assignments is used.
>
> Would it be possible to eliminate *tmp* from interpreted R code as well? It
> might be useful for a function to lock its own environment, and the
> appearance and disappearance of *tmp* generally precludes that.
>
> (For example, a function might lock its own environment to guard against
> lexical-scope-breaking ambiguities such as
>
> x <- 1
> f <- function() {
>    if (runif() < 0.5) {
>     x <- x+1
>   }
>   x
> }
>
> where it is not clear where the returned x comes from inside or outside f.)
>
>         [[alternative HTML version deleted]]
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel



-- 

Bert Gunter
Genentech Nonclinical Biostatistics

Internal Contact Info:
Phone: 467-7374
Website:
http://pharmadevelopment.roche.com/index/pdb/pdb-functional-groups/pdb-biostatistics/pdb-ncb-home.htm


From gunter.berton at gene.com  Sun Jul  7 08:49:30 2013
From: gunter.berton at gene.com (Bert Gunter)
Date: Sat, 6 Jul 2013 23:49:30 -0700
Subject: [Rd] The *tmp* variable
In-Reply-To: <CAJoaRhb=V192BmADC=8WD0HUszqu=TgU-UrDBSfNpKb6gVx8SA@mail.gmail.com>
References: <CAJoaRhbsAUeKHO382L03buo7WGnKh=ysuq3Fn=bhfL04bKkHWQ@mail.gmail.com>
	<CACk-te0C4oyVnREWgx5emCnQ_8KCxw8+G7zOhUNFO=3OP0-CuA@mail.gmail.com>
	<CAJoaRhb=V192BmADC=8WD0HUszqu=TgU-UrDBSfNpKb6gVx8SA@mail.gmail.com>
Message-ID: <CACk-te2X6WOQBCq_9jded-bhqTBZk-VqxGnXZ5tXsA-FAwhCCA@mail.gmail.com>

Thanks, Peter. Now I get it.

It _was_ obvious!

-- Bert

On Sat, Jul 6, 2013 at 10:22 PM, Peter Meilstrup
<peter.meilstrup at gmail.com> wrote:
> The R interpreter does what it does at run time. The ambiguity is in
> reasoning at any time _other than run time_ which environment the returned
> value of 'x' is taken from.
>
> This is one reason why R has been profiled to spend a significant amount of
> time looking up names ( http://www.cs.purdue.edu/homes/jv/pubs/ecoop12.pdf
> -- see also:
> http://xianblog.wordpress.com/2010/09/13/simply-start-over-and-build-something-better/
> ). In languages with strict lexical scope, all var references are
> straightforwardly compiled into pointer jumps.
>
> But my concern is that it is generally bad _style_ to have bindings that are
> ambiguous in scope. Locking function environments would turn those cases, if
> they occur, into errors that can be caught and corrected.
>
> Peter
>
>
> On Sat, Jul 6, 2013 at 9:36 PM, Bert Gunter <gunter.berton at gene.com> wrote:
>>
>> Peter:
>>
>> (Your function doesn't work -- you need to specify runif(1))
>>
>> What ambiguity?
>>
>> In the assignment within f(), x <- x+1,
>>
>> the "x" on the rhs is a free variable in the function, and is
>> therefore looked for in the environment where the function was
>> defined. The x on the lhs is defined within the function only.
>>
>> No matter what f() returns, x remains 1 in the environment from which
>> f is called. The function does not "return x" -- it returns a value,
>> which you can assign as you wish.
>>
>> So ???
>> (and apologies if I'm missing something obvious).
>>
>> Cheers,
>> Bert
>>
>> On Sat, Jul 6, 2013 at 9:11 PM, Peter Meilstrup
>> <peter.meilstrup at gmail.com> wrote:
>> > When complex assignments are performed, the R interpreter creates, then
>> > removes a special variable *tmp*. However, when byte compiling is
>> > enabled,
>> > it seems that a different mechanism for making compound assignments is
>> > used.
>> >
>> > Would it be possible to eliminate *tmp* from interpreted R code as well?
>> > It
>> > might be useful for a function to lock its own environment, and the
>> > appearance and disappearance of *tmp* generally precludes that.
>> >
>> > (For example, a function might lock its own environment to guard against
>> > lexical-scope-breaking ambiguities such as
>> >
>> > x <- 1
>> > f <- function() {
>> >    if (runif() < 0.5) {
>> >     x <- x+1
>> >   }
>> >   x
>> > }
>> >
>> > where it is not clear where the returned x comes from inside or outside
>> > f.)
>> >
>> >         [[alternative HTML version deleted]]
>> >
>> > ______________________________________________
>> > R-devel at r-project.org mailing list
>> > https://stat.ethz.ch/mailman/listinfo/r-devel
>>
>>
>>
>> --
>>
>> Bert Gunter
>> Genentech Nonclinical Biostatistics
>>
>> Internal Contact Info:
>> Phone: 467-7374
>> Website:
>>
>> http://pharmadevelopment.roche.com/index/pdb/pdb-functional-groups/pdb-biostatistics/pdb-ncb-home.htm
>
>



-- 

Bert Gunter
Genentech Nonclinical Biostatistics

Internal Contact Info:
Phone: 467-7374
Website:
http://pharmadevelopment.roche.com/index/pdb/pdb-functional-groups/pdb-biostatistics/pdb-ncb-home.htm


From peter.meilstrup at gmail.com  Mon Jul  8 05:09:21 2013
From: peter.meilstrup at gmail.com (Peter Meilstrup)
Date: Sun, 7 Jul 2013 20:09:21 -0700
Subject: [Rd] does subset.data.frame need to accept extra arguments?
Message-ID: <CAJoaRhbJvHvrzTDdCDh5TNTDWLcBRZ6HTOPguAg=GfkdZoc63g@mail.gmail.com>

An embedded and charset-unspecified text was scrubbed...
Name: not available
URL: <https://stat.ethz.ch/pipermail/r-devel/attachments/20130707/b9747236/attachment.pl>

From murdoch.duncan at gmail.com  Mon Jul  8 10:40:41 2013
From: murdoch.duncan at gmail.com (Duncan Murdoch)
Date: Mon, 08 Jul 2013 04:40:41 -0400
Subject: [Rd] does subset.data.frame need to accept extra arguments?
In-Reply-To: <CAJoaRhbJvHvrzTDdCDh5TNTDWLcBRZ6HTOPguAg=GfkdZoc63g@mail.gmail.com>
References: <CAJoaRhbJvHvrzTDdCDh5TNTDWLcBRZ6HTOPguAg=GfkdZoc63g@mail.gmail.com>
Message-ID: <51DA7B09.3000606@gmail.com>

On 13-07-07 11:09 PM, Peter Meilstrup wrote:
> The formal list for subset.data.frame accepts a "..."
>
>> args(subset.data.frame)
> function (x, subset, select, drop = FALSE, ...)
> NULL
>
> But it appears that subset.data.frame does not actually use the "..." or
> pass it along:
>
>> "..." %in% all.names(body(subset.data.frame))
> [1] FALSE
>
> Is there any reason why subset.data.frame needs to accept extra, unused
> arguments? One recurring error I see myself and other people making in
> interactive use is to type an = instead of an == in a subset call, e.g.
>
> subset(df, column=value)
>
> which I think ought to be an error, but it silently returns df instead.
>
> If "..." were eliminated from the formals of subset.data.frame, it would
> eliminate a frequent user error.

It needs to have ... in the formal argument list because the generic 
subset() does.

It could enforce a run-time warning that some arguments were being 
skipped (by testing length(list(...)) for example), but then NextMethod 
might fail, in a case where an object has a complicated class vector.

This is basically a limitation of the S3 class system.  The S4 system 
can do much more careful checking.

Duncan Murdoch


From jon.clayden at gmail.com  Mon Jul  8 18:58:23 2013
From: jon.clayden at gmail.com (Jon Clayden)
Date: Mon, 8 Jul 2013 17:58:23 +0100
Subject: [Rd] Cross-platform linking of a simple front-end
In-Reply-To: <51D7B0B8.8060501@stats.ox.ac.uk>
References: <CAM9CR=2z8UWuwtHXV+HsbHqOF9aSe1-mYP72WTe7pf2q+zMXcg@mail.gmail.com>
	<0D58AA12-6314-4277-8570-A7C87F291516@r-project.org>
	<51D7B0B8.8060501@stats.ox.ac.uk>
Message-ID: <CAM9CR=18LMgOG3KDesxFYqjB3Xf20D0iH_1r93F3W4hqsZ4fsA@mail.gmail.com>

An embedded and charset-unspecified text was scrubbed...
Name: not available
URL: <https://stat.ethz.ch/pipermail/r-devel/attachments/20130708/a894259d/attachment.pl>

From chiefmurphy at gmail.com  Tue Jul  9 13:03:16 2013
From: chiefmurphy at gmail.com (Dan Murphy)
Date: Tue, 9 Jul 2013 04:03:16 -0700
Subject: [Rd] Is difftime a "class"
Message-ID: <CAHgH9_EJv97fGoiBZoS70MpdotrHwJrp6KJ4NrFXJg-WRjj_UA@mail.gmail.com>

I am trying to write S4 methods with "difftime" in the signature but
am being "informed" (? not a warning or error) that "difftime" is not
a class. Nevertheless, dispatch takes place. Should I simply ignore
that "information"? Here is a toy example:

> setClass("foo", contains = "Date")
> setMethod("+", c("foo", "difftime"), function(e1, e2) callNextMethod())
in method for ?+? with signature ?"foo","difftime"?: no definition for
class ?difftime?
[1] "+"
> x <- new("foo", as.Date("2013-06-30"))
> dt <- as.difftime(1, units = "days")
> x + dt
[1] "2013-07-01"

Thank you,
Dan Murphy


From kevin.r.coombes at gmail.com  Tue Jul  9 13:14:31 2013
From: kevin.r.coombes at gmail.com (Kevin R. Coombes)
Date: Tue, 09 Jul 2013 06:14:31 -0500
Subject: [Rd] Is difftime a "class"
In-Reply-To: <CAHgH9_EJv97fGoiBZoS70MpdotrHwJrp6KJ4NrFXJg-WRjj_UA@mail.gmail.com>
References: <CAHgH9_EJv97fGoiBZoS70MpdotrHwJrp6KJ4NrFXJg-WRjj_UA@mail.gmail.com>
Message-ID: <51DBF097.2040804@gmail.com>

difftime is an S3 class, not an S4 class. To convert it, include the line

setOldClass("difftime")

and the setMethod call should work.

On 7/9/2013 6:03 AM, Dan Murphy wrote:
> I am trying to write S4 methods with "difftime" in the signature but
> am being "informed" (? not a warning or error) that "difftime" is not
> a class. Nevertheless, dispatch takes place. Should I simply ignore
> that "information"? Here is a toy example:
>
>> setClass("foo", contains = "Date")
>> setMethod("+", c("foo", "difftime"), function(e1, e2) callNextMethod())
> in method for ?+? with signature ?"foo","difftime"?: no definition for
> class ?difftime?
> [1] "+"
>> x<- new("foo", as.Date("2013-06-30"))
>> dt<- as.difftime(1, units = "days")
>> x + dt
> [1] "2013-07-01"
>
> Thank you,
> Dan Murphy
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From friendly at yorku.ca  Tue Jul  9 20:29:21 2013
From: friendly at yorku.ca (Michael Friendly)
Date: Tue, 09 Jul 2013 14:29:21 -0400
Subject: [Rd] probable bugs in stats::loglin calculation of pearson chisq
Message-ID: <51DC5681.2030508@yorku.ca>

In running the following example of a loglinear model for the Titanic data,
I was surprised to see NaN reported for the
Pearson chisq

 > loglin(Titanic, margin=list(1:3, 4))
2 iterations: deviation 2.273737e-13
$lrt
[1] 671.9622

$pearson
[1] NaN

$df
[1] 15

$margin
$margin[[1]]
[1] "Class" "Sex"   "Age"

$margin[[2]]
[1] "Survived"


Tracing it back, this occurs because there are zeros in the 
fitted/expected frequencies
for children among the Crew.

 > # get fitted (expected) values
 > fitted <- loglin(Titanic, margin=list(1:3, 4), fit=TRUE)$fit
2 iterations: deviation 2.273737e-13
 > fitted[Class="Crew",,Age="Child",]
         Survived
Sex      No Yes
   Male    0   0
   Female  0   0

I certainly understand the difference between sampling
zeros and structural zeros, and this distinction seems properly 
implemented in loglin()
via the start= argument, but only in the calculation of Pearson chisq, 
not for LRT.  I think this is a code
bug, but if there is a reason for the difference, it should be 
documented in the help for
loglin.

Another probable bug is that the calculation of of the LRT chisq also 
takes zero fitted values
into account, while the calculation of the Pearson chisq does not, and 
leads to the NaN
result for my example.
It occurs in the following portion of the code for loglin:

     fit <- z$fit
     attributes(fit) <- attributes(table)
     observed <- as.vector(table[start > 0])
     expected <- as.vector(fit[start > 0])
     pearson <- sum((observed - expected)^2/expected)
     observed <- as.vector(table[table * fit > 0])
     expected <- as.vector(fit[table * fit > 0])
     lrt <- 2 * sum(observed * log(observed/expected))

I don't understand the reasons for the different calculations of 
observed & expected
for pearson & lrt.

FWIW, below is how I calculate these in my mosaics.sas program

start chisq(obs, fit);
    *-- Find Pearson and likelihood ratio chisquares;
    gf = sum ( (obs - fit)##2 / ( fit + (fit=0) ) );
    lr = 2 # sum ( obs # log ( (obs+(obs=0)) / (fit + (fit=0)) ) );
    return (gf // lr);
    finish;

-Michael




-- 
Michael Friendly     Email: friendly AT yorku DOT ca
Professor, Psychology Dept. & Chair, Quantitative Methods
York University      Voice: 416 736-2100 x66249 Fax: 416 736-5814
4700 Keele Street    Web:   http://www.datavis.ca
Toronto, ONT  M3J 1P3 CANADA


From dtenenba at fhcrc.org  Wed Jul 10 04:52:15 2013
From: dtenenba at fhcrc.org (Dan Tenenbaum)
Date: Tue, 9 Jul 2013 19:52:15 -0700
Subject: [Rd] R CMD INSTALL and file permission settings
In-Reply-To: <21555_1371339551_51BCFB1E_21555_1664_1_E307D292-451C-4233-A660-87A2B88B52A6@r-project.org>
References: <20915.23136.75704.347469@max.nulle.part>
	<20917.40985.705751.95999@stat.math.ethz.ch>
	<20923.30546.509634.752403@stat.math.ethz.ch>
	<1A628E3D-CC34-4C38-B23B-03169D3C7AD0@r-project.org>
	<20923.32408.400045.470669@max.nulle.part>
	<046C1EB4-F22D-457F-BB2C-27D666E3418F@r-project.org>
	<20923.57124.150011.263475@max.nulle.part>
	<82EC6E1A-75F7-4172-968B-CA55AB102171@r-project.org>
	<20924.22356.973252.449984@max.nulle.part>
	<20924.35840.998596.681242@max.nulle.part>
	<20924.46479.760166.350303@stat.math.ethz.ch>
	<21555_1371339551_51BCFB1E_21555_1664_1_E307D292-451C-4233-A660-87A2B88B52A6@r-project.org>
Message-ID: <CAF42j233gQkGRsk3mLaLajimfFb1GUM1FV=geXtPdD6X4Y0a8A@mail.gmail.com>

On Sat, Jun 15, 2013 at 4:38 PM, Simon Urbanek
<simon.urbanek at r-project.org> wrote:
>
> On Jun 15, 2013, at 2:42 PM, Martin Maechler wrote:
>
>>>>>>> Dirk Eddelbuettel <edd at debian.org>
>>>>>>>    on Sat, 15 Jun 2013 10:45:04 -0500 writes:
>>
>>> On 15 June 2013 at 07:00, Dirk Eddelbuettel wrote:
>>> |
>>> | On 15 June 2013 at 07:47, Simon Urbanek wrote: | |
>>> Because update.packages() doesn't restore the
>>> group-writable bit. Which leads us to my point that this
>>> is not what you really want.
>>> |
>>> | Ooops. I'll take another look.
>>
>>> Done.  "It works."  For fairly generous definitions of
>>> working. I'll detail:
>>
>>> i) My initial patch only used options() to set things.
>>> Martin was not to enthralled with this and guided the
>>> patch towards using --group-writable as an option.
>>
>>> ii) With --group-writable, installation works but updates
>>> fail as noticed by Simon.
>>
>>> iii) If we fall back to using options() [ or an
>>> environment variable ], things works.  A log is below.
>>
>> Hmm, but this only works if everyone who calls  update.packages() also has
>> this options() setting, no?
>> Why would the update keep the package files group writable otherwise ?
>> If the updater has no group-writable option she can still update
>> the package you installed, but you can no longer, right?
>>
>> I still think the approach to abolish all settings and just
>> trigger group-writable package installation *when* the library
>> directory is group writable is so simple we should adopt it,
>> and can forget all options/ command line arguments / environment
>> variables about this topic.
>>
>
> I fully agree. Also thanks for summarizing the discussion earlier today - it was dead on.
>

Picking up a somewhat old thread...what is the final status of this?
It doesn't look like an option was added to control the permissions of
installed package files.
It also seems that the --group-writable option to R CMD INSTALL is not
present in R-3.0.1.

So are we back to where we started?

FWIW, I'd prefer a solution that respects the umask and is honored in
install.packages(), update.packages(), etc. In my use case users will
be installing packages most often within R with install.packages() (as
opposed to R CMD INSTALL from the command line), and they will
probably use install.packages() rather than update.packages() even for
packages that are already installed.

I'll probably use the inotify hack suggested earlier in the short term.

Thanks,
Dan



> Thanks,
> Simon
>
>
>
>> Martin
>>
>>> iv) I guess those of you who want the --group-writeable
>>> option need to ensure it also works for update.packages()
>>> as new option?
>>
>>> I am happy with what we have right now as it works in the
>>> context established by my patch.  Martin's addition of
>>> --group-writable is a bit more ambitious and we may need
>>> to enhance update.package(), or tell everybody to also
>>> (??)  use the option() setting, or environment variable.
>>
>>> Two things follow, a quick test script and a log from the
>>> script.
>>
>>> Dirk
>>
>>
>>> Script
>>>
>>> #!/bin/bash
>>>
>>> ## we use digest as an example as it is pretty small
>>> cd ~/svn/digest
>>> ls -l digest_0.6.?.tar.gz
>>>
>>> ## we make two assumptions:
>>> ##
>>> ## a) R-devel (called via a shell script wrapper)
>>> ~/bin/R-devel.sh --version | head -1
>>> ##
>>> ## b) An option has been set
>>> cat /usr/local/lib/R-devel/lib/R/etc/Rprofile.site
>>>
>>> ## now install an older version so that we can upgrade later
>>> ## this is running as 'edd' ie me
>>> ~/bin/R-devel.sh CMD INSTALL digest_0.6.2.tar.gz
>>>
>>> ls -ld /usr/local/lib/R/site-library/digest/
>>> ls -lR /usr/local/lib/R/site-library/digest/
>>>
>>> ## now try the upgrade as another user in the group
>>> sudo su lmp -c '~edd/bin/R-devel.sh -e "update.packages(repos=\"http://cran.r-project.org\", ask=FALSE, lib.loc=\"/usr/local/lib/R/site-library\")"'
>>>
>>> ls -ld /usr/local/lib/R/site-library/digest/
>>> ls -lR /usr/local/lib/R/site-library/digest/
>>>
>>>
>>>
>>> Session log
>>>
>>> edd at max:~$ /tmp/testRupgrade.sh
>>> -rw-r--r-- 1 edd edd 53344 Nov 25  2012 digest_0.6.0.tar.gz
>>> -rw-r--r-- 1 edd edd 76839 Jan 21 09:25 digest_0.6.1.tar.gz
>>> -rw-r--r-- 1 edd edd 76771 Jan 25 11:33 digest_0.6.2.tar.gz
>>> -rw-r--r-- 1 edd edd 78002 Feb 16 06:35 digest_0.6.3.tar.gz
>>> R Under development (unstable) (2013-06-14 r62964) -- "Unsuffered Consequences"
>>> options("group.writable.pkgs"=TRUE)
>>> * installing to library ?/usr/local/lib/R/site-library?
>>> * installing *source* package ?digest? ...
>>> ** libs
>>> ccache gcc-4.7 -I/usr/local/lib/R-devel/lib/R/include -DNDEBUG  -I/usr/local/include    -fpic  -O3 -g0 -Wall -pipe -pedantic -std=gnu99  -c aes.c -o aes.o
>>> ccache gcc-4.7 -I/usr/local/lib/R-devel/lib/R/include -DNDEBUG  -I/usr/local/include    -fpic  -O3 -g0 -Wall -pipe -pedantic -std=gnu99  -c crc32.c -o crc32.o
>>> ccache gcc-4.7 -I/usr/local/lib/R-devel/lib/R/include -DNDEBUG  -I/usr/local/include    -fpic  -O3 -g0 -Wall -pipe -pedantic -std=gnu99  -c digest.c -o digest.o
>>> ccache gcc-4.7 -I/usr/local/lib/R-devel/lib/R/include -DNDEBUG  -I/usr/local/include    -fpic  -O3 -g0 -Wall -pipe -pedantic -std=gnu99  -c md5.c -o md5.o
>>> ccache gcc-4.7 -I/usr/local/lib/R-devel/lib/R/include -DNDEBUG  -I/usr/local/include    -fpic  -O3 -g0 -Wall -pipe -pedantic -std=gnu99  -c raes.c -o raes.o
>>> ccache gcc-4.7 -I/usr/local/lib/R-devel/lib/R/include -DNDEBUG  -I/usr/local/include    -fpic  -O3 -g0 -Wall -pipe -pedantic -std=gnu99  -c sha1.c -o sha1.o
>>> ccache gcc-4.7 -I/usr/local/lib/R-devel/lib/R/include -DNDEBUG  -I/usr/local/include    -fpic  -O3 -g0 -Wall -pipe -pedantic -std=gnu99  -c sha2.c -o sha2.o
>>> ccache gcc-4.7 -I/usr/local/lib/R-devel/lib/R/include -DNDEBUG  -I/usr/local/include    -fpic  -O3 -g0 -Wall -pipe -pedantic -std=gnu99  -c sha256.c -o sha256.o
>>> sha2.c: In function ?SHA256_Final?:
>>> sha2.c:606:3: warning: dereferencing type-punned pointer will break strict-aliasing rules [-Wstrict-aliasing]
>>> sha2.c: In function ?SHA512_Last?:
>>> sha2.c:923:2: warning: dereferencing type-punned pointer will break strict-aliasing rules [-Wstrict-aliasing]
>>> sha2.c:924:2: warning: dereferencing type-punned pointer will break strict-aliasing rules [-Wstrict-aliasing]
>>> ccache gcc-4.7 -shared -L/usr/local/lib -o digest.so aes.o crc32.o digest.o md5.o raes.o sha1.o sha2.o sha256.o -L/usr/local/lib/R-devel/lib/R/lib -lR
>>> installing to /usr/local/lib/R/site-library/digest/libs
>>> ** R
>>> ** inst
>>> ** preparing package for lazy loading
>>> ** help
>>> *** installing help indices
>>> ** building package indices
>>> ** testing if installed package can be loaded
>>> * DONE (digest)
>>> drwxrwxr-x 7 edd staff 4096 Jun 15 10:42 /usr/local/lib/R/site-library/digest/
>>> /usr/local/lib/R/site-library/digest/:
>>> total 52
>>> -rw-rw-r-- 1 edd staff  1605 Jun 15 10:42 DESCRIPTION
>>> -rw-rw-r-- 1 edd staff 18092 Jun 15 10:42 GPL-2
>>> drwxrwxr-x 2 edd staff  4096 Jun 15 10:42 help
>>> drwxrwxr-x 2 edd staff  4096 Jun 15 10:42 html
>>> -rw-rw-r-- 1 edd staff   271 Jun 15 10:42 INDEX
>>> drwxrwxr-x 2 edd staff  4096 Jun 15 10:42 libs
>>> drwxrwxr-x 2 edd staff  4096 Jun 15 10:42 Meta
>>> -rw-rw-r-- 1 edd staff   140 Jun 15 10:42 NAMESPACE
>>> drwxrwxr-x 2 edd staff  4096 Jun 15 10:42 R
>>>
>>> /usr/local/lib/R/site-library/digest/help:
>>> total 36
>>> -rw-rw-r-- 1 edd staff    80 Jun 15 10:42 aliases.rds
>>> -rw-rw-r-- 1 edd staff    32 Jun 15 10:42 AnIndex
>>> -rw-rw-r-- 1 edd staff 17857 Jun 15 10:42 digest.rdb
>>> -rw-rw-r-- 1 edd staff   193 Jun 15 10:42 digest.rdx
>>> -rw-rw-r-- 1 edd staff   140 Jun 15 10:42 paths.rds
>>>
>>> /usr/local/lib/R/site-library/digest/html:
>>> total 8
>>> -rw-rw-r-- 1 edd staff 1236 Jun 15 10:42 00Index.html
>>> -rw-rw-r-- 1 edd staff 1179 Jun 15 10:42 R.css
>>>
>>> /usr/local/lib/R/site-library/digest/libs:
>>> total 120
>>> -rwxrwxr-x 1 edd staff 118956 Jun 15 10:42 digest.so
>>>
>>> /usr/local/lib/R/site-library/digest/Meta:
>>> total 20
>>> -rw-rw-r-- 1 edd staff  351 Jun 15 10:42 hsearch.rds
>>> -rw-rw-r-- 1 edd staff  117 Jun 15 10:42 links.rds
>>> -rw-rw-r-- 1 edd staff  224 Jun 15 10:42 nsInfo.rds
>>> -rw-rw-r-- 1 edd staff 1271 Jun 15 10:42 package.rds
>>> -rw-rw-r-- 1 edd staff  331 Jun 15 10:42 Rd.rds
>>>
>>> /usr/local/lib/R/site-library/digest/R:
>>> total 16
>>> -rw-rw-r-- 1 edd staff 1056 Jun 15 10:42 digest
>>> -rw-rw-r-- 1 edd staff 4168 Jun 15 10:42 digest.rdb
>>> -rw-rw-r-- 1 edd staff  388 Jun 15 10:42 digest.rdx
>>>
>>> R Under development (unstable) (2013-06-14 r62964) -- "Unsuffered Consequences"
>>> Copyright (C) 2013 The R Foundation for Statistical Computing
>>> Platform: x86_64-unknown-linux-gnu (64-bit)
>>>
>>> R is free software and comes with ABSOLUTELY NO WARRANTY.
>>> You are welcome to redistribute it under certain conditions.
>>> Type 'license()' or 'licence()' for distribution details.
>>>
>>>  Natural language support but running in an English locale
>>>
>>> R is a collaborative project with many contributors.
>>> Type 'contributors()' for more information and
>>> 'citation()' on how to cite R or R packages in publications.
>>>
>>> Type 'demo()' for some demos, 'help()' for on-line help, or
>>> 'help.start()' for an HTML browser interface to help.
>>> Type 'q()' to quit R.
>>>
>>>> update.packages(repos="http://cran.r-project.org", ask=FALSE, lib.loc="/usr/local/lib/R/site-library")
>>> trying URL 'http://cran.r-project.org/src/contrib/digest_0.6.3.tar.gz'
>>> Content type 'application/x-gzip' length 80083 bytes (78 Kb)
>>> opened URL
>>> ==================================================
>>> downloaded 78 Kb
>>>
>>> * installing *source* package ?digest? ...
>>> ** package ?digest? successfully unpacked and MD5 sums checked
>>> ** libs
>>> ccache gcc -I/usr/local/lib/R-devel/lib/R/include -DNDEBUG  -I/usr/local/include    -fpic  -ggdb -pipe -std=gnu99 -Wall -pedantic  -c aes.c -o aes.o
>>> ccache gcc -I/usr/local/lib/R-devel/lib/R/include -DNDEBUG  -I/usr/local/include    -fpic  -ggdb -pipe -std=gnu99 -Wall -pedantic  -c crc32.c -o crc32.o
>>> ccache gcc -I/usr/local/lib/R-devel/lib/R/include -DNDEBUG  -I/usr/local/include    -fpic  -ggdb -pipe -std=gnu99 -Wall -pedantic  -c digest.c -o digest.o
>>> ccache gcc -I/usr/local/lib/R-devel/lib/R/include -DNDEBUG  -I/usr/local/include    -fpic  -ggdb -pipe -std=gnu99 -Wall -pedantic  -c md5.c -o md5.o
>>> ccache gcc -I/usr/local/lib/R-devel/lib/R/include -DNDEBUG  -I/usr/local/include    -fpic  -ggdb -pipe -std=gnu99 -Wall -pedantic  -c raes.c -o raes.o
>>> ccache gcc -I/usr/local/lib/R-devel/lib/R/include -DNDEBUG  -I/usr/local/include    -fpic  -ggdb -pipe -std=gnu99 -Wall -pedantic  -c sha1.c -o sha1.o
>>> ccache gcc -I/usr/local/lib/R-devel/lib/R/include -DNDEBUG  -I/usr/local/include    -fpic  -ggdb -pipe -std=gnu99 -Wall -pedantic  -c sha2.c -o sha2.o
>>> ccache gcc -I/usr/local/lib/R-devel/lib/R/include -DNDEBUG  -I/usr/local/include    -fpic  -ggdb -pipe -std=gnu99 -Wall -pedantic  -c sha256.c -o sha256.o
>>> ccache gcc -shared -L/usr/local/lib -o digest.so aes.o crc32.o digest.o md5.o raes.o sha1.o sha2.o sha256.o -L/usr/local/lib/R-devel/lib/R/lib -lR
>>> installing to /usr/local/lib/R/site-library/digest/libs
>>> ** R
>>> ** inst
>>> ** preparing package for lazy loading
>>> ** help
>>> *** installing help indices
>>> ** building package indices
>>> ** testing if installed package can be loaded
>>> * DONE (digest)
>>>
>>> The downloaded source packages are in
>>>      ?/tmp/RtmpxJgmSB/downloaded_packages?
>>>>
>>>>
>>> drwxrwxr-x 7 lmp staff 4096 Jun 15 10:42 /usr/local/lib/R/site-library/digest/
>>> /usr/local/lib/R/site-library/digest/:
>>> total 52
>>> -rw-rw-r-- 1 lmp staff  1767 Jun 15 10:42 DESCRIPTION
>>> -rw-rw-r-- 1 lmp staff 18092 Jun 15 10:42 GPL-2
>>> drwxrwxr-x 2 lmp staff  4096 Jun 15 10:42 help
>>> drwxrwxr-x 2 lmp staff  4096 Jun 15 10:42 html
>>> -rw-rw-r-- 1 lmp staff   253 Jun 15 10:42 INDEX
>>> drwxrwxr-x 2 lmp staff  4096 Jun 15 10:42 libs
>>> drwxrwxr-x 2 lmp staff  4096 Jun 15 10:42 Meta
>>> -rw-rw-r-- 1 lmp staff   140 Jun 15 10:42 NAMESPACE
>>> drwxrwxr-x 2 lmp staff  4096 Jun 15 10:42 R
>>>
>>> /usr/local/lib/R/site-library/digest/help:
>>> total 36
>>> -rw-rw-r-- 1 lmp staff    80 Jun 15 10:42 aliases.rds
>>> -rw-rw-r-- 1 lmp staff    32 Jun 15 10:42 AnIndex
>>> -rw-rw-r-- 1 lmp staff 17871 Jun 15 10:42 digest.rdb
>>> -rw-rw-r-- 1 lmp staff   195 Jun 15 10:42 digest.rdx
>>> -rw-rw-r-- 1 lmp staff   140 Jun 15 10:42 paths.rds
>>>
>>> /usr/local/lib/R/site-library/digest/html:
>>> total 8
>>> -rw-rw-r-- 1 lmp staff 1236 Jun 15 10:42 00Index.html
>>> -rw-rw-r-- 1 lmp staff 1179 Jun 15 10:42 R.css
>>>
>>> /usr/local/lib/R/site-library/digest/libs:
>>> total 172
>>> -rwxrwxr-x 1 lmp staff 175154 Jun 15 10:42 digest.so
>>>
>>> /usr/local/lib/R/site-library/digest/Meta:
>>> total 20
>>> -rw-rw-r-- 1 lmp staff  351 Jun 15 10:42 hsearch.rds
>>> -rw-rw-r-- 1 lmp staff  117 Jun 15 10:42 links.rds
>>> -rw-rw-r-- 1 lmp staff  224 Jun 15 10:42 nsInfo.rds
>>> -rw-rw-r-- 1 lmp staff 1325 Jun 15 10:42 package.rds
>>> -rw-rw-r-- 1 lmp staff  331 Jun 15 10:42 Rd.rds
>>>
>>> /usr/local/lib/R/site-library/digest/R:
>>> total 16
>>> -rw-rw-r-- 1 lmp staff 1056 Jun 15 10:42 digest
>>> -rw-rw-r-- 1 lmp staff 4205 Jun 15 10:42 digest.rdb
>>> -rw-rw-r-- 1 lmp staff  385 Jun 15 10:42 digest.rdx
>>> edd at max:~$
>>>
>>> --
>>> Dirk Eddelbuettel | edd at debian.org | http://dirk.eddelbuettel.com
>>
>>
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From edd at debian.org  Wed Jul 10 07:15:13 2013
From: edd at debian.org (Dirk Eddelbuettel)
Date: Wed, 10 Jul 2013 00:15:13 -0500
Subject: [Rd] R CMD INSTALL and file permission settings
In-Reply-To: <CAF42j233gQkGRsk3mLaLajimfFb1GUM1FV=geXtPdD6X4Y0a8A@mail.gmail.com>
References: <20915.23136.75704.347469@max.nulle.part>
	<20917.40985.705751.95999@stat.math.ethz.ch>
	<20923.30546.509634.752403@stat.math.ethz.ch>
	<1A628E3D-CC34-4C38-B23B-03169D3C7AD0@r-project.org>
	<20923.32408.400045.470669@max.nulle.part>
	<046C1EB4-F22D-457F-BB2C-27D666E3418F@r-project.org>
	<20923.57124.150011.263475@max.nulle.part>
	<82EC6E1A-75F7-4172-968B-CA55AB102171@r-project.org>
	<20924.22356.973252.449984@max.nulle.part>
	<20924.35840.998596.681242@max.nulle.part>
	<20924.46479.760166.350303@stat.math.ethz.ch>
	<21555_1371339551_51BCFB1E_21555_1664_1_E307D292-451C-4233-A660-87A2B88B52A6@r-project.org>
	<CAF42j233gQkGRsk3mLaLajimfFb1GUM1FV=geXtPdD6X4Y0a8A@mail.gmail.com>
Message-ID: <20956.60897.544948.583992@max.nulle.part>


Hi Dan,

On 9 July 2013 at 19:52, Dan Tenenbaum wrote:
| Picking up a somewhat old thread...what is the final status of this?

In r-patched and r-devel, check the NEWS file.

| It doesn't look like an option was added to control the permissions of
| installed package files.
| It also seems that the --group-writable option to R CMD INSTALL is not
| present in R-3.0.1.
| 
| So are we back to where we started?
| 
| FWIW, I'd prefer a solution that respects the umask and is honored in
| install.packages(), update.packages(), etc. In my use case users will

We have something which is (in the eyes of all who played along here) better
and simpler.  Instead of passing an explicit option down (which has to cope
with the different entry paths for this), the install function now checks for
group-write mode of the target target directory. If present, the installation
will use group-write too on file and its new directories.  Easier, and quite
elegant.  Have a go and see if it fits your bill -- no umask fiddling, no
teaching all users to change habits, no inotify.

Dirk

-- 
Dirk Eddelbuettel | edd at debian.org | http://dirk.eddelbuettel.com


From h.wickham at gmail.com  Thu Jul 11 12:59:10 2013
From: h.wickham at gmail.com (Hadley Wickham)
Date: Thu, 11 Jul 2013 12:59:10 +0200
Subject: [Rd] does subset.data.frame need to accept extra arguments?
In-Reply-To: <51DA7B09.3000606@gmail.com>
References: <CAJoaRhbJvHvrzTDdCDh5TNTDWLcBRZ6HTOPguAg=GfkdZoc63g@mail.gmail.com>
	<51DA7B09.3000606@gmail.com>
Message-ID: <CABdHhvFxZ13LfhHUbYPsMVSaSCvfE6zz9kLEx628i+0ZTv4QSA@mail.gmail.com>

> It needs to have ... in the formal argument list because the generic
> subset() does.
>
> It could enforce a run-time warning that some arguments were being skipped
> (by testing length(list(...)) for example), but then NextMethod might fail,
> in a case where an object has a complicated class vector.

That wouldn't be a problem if the check was implemented in
subset.data.frame, would it?

Hadley

--
Chief Scientist, RStudio
http://had.co.nz/


From murdoch.duncan at gmail.com  Thu Jul 11 14:57:24 2013
From: murdoch.duncan at gmail.com (Duncan Murdoch)
Date: Thu, 11 Jul 2013 14:57:24 +0200
Subject: [Rd] does subset.data.frame need to accept extra arguments?
In-Reply-To: <CABdHhvFxZ13LfhHUbYPsMVSaSCvfE6zz9kLEx628i+0ZTv4QSA@mail.gmail.com>
References: <CAJoaRhbJvHvrzTDdCDh5TNTDWLcBRZ6HTOPguAg=GfkdZoc63g@mail.gmail.com>
	<51DA7B09.3000606@gmail.com>
	<CABdHhvFxZ13LfhHUbYPsMVSaSCvfE6zz9kLEx628i+0ZTv4QSA@mail.gmail.com>
Message-ID: <51DEABB4.7060409@gmail.com>

On 13-07-11 12:59 PM, Hadley Wickham wrote:
>> It needs to have ... in the formal argument list because the generic
>> subset() does.
>>
>> It could enforce a run-time warning that some arguments were being skipped
>> (by testing length(list(...)) for example), but then NextMethod might fail,
>> in a case where an object has a complicated class vector.
>
> That wouldn't be a problem if the check was implemented in
> subset.data.frame, would it?

Suppose the class vector is c("myclass", "data.frame").  Then 
subset.myclass would be called first if it existed.  It might do some 
simple computation and then use NextMethod.  It should not need to know 
that it is calling subset.data.frame next, so it will pass all of its 
arguments along, possibly including some that subset.data.frame should 
ignore.

Duncan Murdoch


From bbolker at gmail.com  Fri Jul 12 04:57:28 2013
From: bbolker at gmail.com (Ben Bolker)
Date: Thu, 11 Jul 2013 22:57:28 -0400
Subject: [Rd] robustbase compilation problem: probably boneheaded? maybe
	32-bit?
Message-ID: <51DF7098.1080905@gmail.com>


With a recent SVN build (R Under development (unstable) (2013-07-10
r63264) -- "Unsuffered Consequences"), I'm having trouble installing the
robustbase package.  The bottom line is that I *think* it's a
32-bit-system problem, but I could easily be mistaken.

robustbase is passing its package checks:
http://cran.r-project.org/web/checks/check_results_robustbase.html

 ... but from the names of the targets it doesn't look like it is tested
on 32-bit platforms?

  The error is:

gcc -std=gnu99 -I/usr/local/lib/R/include -DNDEBUG  -I/usr/local/include
   -fpic  -g -O2  -c init.c -o init.o
In file included from init.c:3:
robustbase.h:20: error: redefinition of typedef ?R_xlen_t?
/usr/local/lib/R/include/Rinternals.h:69: note: previous declaration of
?R_xlen_t? was here

  As far as I can see there isn't any junk left over in my systems from
previous installs.

Rinternals.h has

#ifdef LONG_VECTOR_SUPPORT
    typedef ptrdiff_t R_xlen_t;
    typedef struct { R_xlen_t lv_length, lv_truelength; } R_long_vec_hdr_t;
# define R_XLEN_T_MAX 4503599627370496
# define R_SHORT_LEN_MAX 2147483647
# define R_LONG_VEC_TOKEN -1
#else
    typedef int R_xlen_t;
# define R_XLEN_T_MAX R_LEN_T_MAX
#endif

 while robustbase has

#ifndef LONG_VECTOR_SUPPORT
# ifndef XLENGTH
   // for  R <= 2.15.x :
#  define XLENGTH(x) LENGTH(x)
   typedef int R_xlen_t;
# endif
#endif

 It seems the problem is that I have

#define SIZEOF_SIZE_T 4

in my config.log , which in turn turns off LONG_VECTOR_SUPPORT, which is
otherwise (?) assumed only to be true for R<=2.15.x ... can this be
because I'm on 32-bit Linux , or on old linux with gcc 4.4.3, or ... ?
<http://stackoverflow.com/questions/918787/whats-sizeofsize-t-on-32-bit-vs-the-various-64-bit-data-models>

  Can anyone confirm/enlighten me?

  cheers
    Ben Bolker


From simon.urbanek at r-project.org  Fri Jul 12 05:10:21 2013
From: simon.urbanek at r-project.org (Simon Urbanek)
Date: Thu, 11 Jul 2013 23:10:21 -0400
Subject: [Rd] robustbase compilation problem: probably boneheaded? maybe
	32-bit?
In-Reply-To: <51DF7098.1080905@gmail.com>
References: <51DF7098.1080905@gmail.com>
Message-ID: <B3B0CB23-1E0F-4AD4-844D-692E4ED7B911@r-project.org>


On Jul 11, 2013, at 10:57 PM, Ben Bolker wrote:

> 
> With a recent SVN build (R Under development (unstable) (2013-07-10
> r63264) -- "Unsuffered Consequences"), I'm having trouble installing the
> robustbase package.  The bottom line is that I *think* it's a
> 32-bit-system problem, but I could easily be mistaken.
> 

It's a bug in robustbase - it redefines R_xlen_t without checking the R version. I think the author's true intention was to make it conditional on R version for compatibility so it should be using R_VERSION and not LONG_VECTOR_SUPPORT since the latter is irrelevant here as R 3.0.0+ will have R_xlen_t regardless of the long vector support.

Cheers,
Simon


> robustbase is passing its package checks:
> http://cran.r-project.org/web/checks/check_results_robustbase.html
> 
> ... but from the names of the targets it doesn't look like it is tested
> on 32-bit platforms?
> 
>  The error is:
> 
> gcc -std=gnu99 -I/usr/local/lib/R/include -DNDEBUG  -I/usr/local/include
>   -fpic  -g -O2  -c init.c -o init.o
> In file included from init.c:3:
> robustbase.h:20: error: redefinition of typedef ?R_xlen_t?
> /usr/local/lib/R/include/Rinternals.h:69: note: previous declaration of
> ?R_xlen_t? was here
> 
>  As far as I can see there isn't any junk left over in my systems from
> previous installs.
> 
> Rinternals.h has
> 
> #ifdef LONG_VECTOR_SUPPORT
>    typedef ptrdiff_t R_xlen_t;
>    typedef struct { R_xlen_t lv_length, lv_truelength; } R_long_vec_hdr_t;
> # define R_XLEN_T_MAX 4503599627370496
> # define R_SHORT_LEN_MAX 2147483647
> # define R_LONG_VEC_TOKEN -1
> #else
>    typedef int R_xlen_t;
> # define R_XLEN_T_MAX R_LEN_T_MAX
> #endif
> 
> while robustbase has
> 
> #ifndef LONG_VECTOR_SUPPORT
> # ifndef XLENGTH
>   // for  R <= 2.15.x :
> #  define XLENGTH(x) LENGTH(x)
>   typedef int R_xlen_t;
> # endif
> #endif
> 
> It seems the problem is that I have
> 
> #define SIZEOF_SIZE_T 4
> 
> in my config.log , which in turn turns off LONG_VECTOR_SUPPORT, which is
> otherwise (?) assumed only to be true for R<=2.15.x ... can this be
> because I'm on 32-bit Linux , or on old linux with gcc 4.4.3, or ... ?
> <http://stackoverflow.com/questions/918787/whats-sizeofsize-t-on-32-bit-vs-the-various-64-bit-data-models>
> 
>  Can anyone confirm/enlighten me?
> 
>  cheers
>    Ben Bolker
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
> 
> 


From jgrn at illinois.edu  Fri Jul 12 17:52:42 2013
From: jgrn at illinois.edu (Jonathan Greenberg)
Date: Fri, 12 Jul 2013 10:52:42 -0500
Subject: [Rd] "Proper" way to use a "hidden" function in an R-package?
Message-ID: <CABG0rfuVhzEB1s-287dAfCHMDcsWL9dLDAfaLennbQNMYOjNEw@mail.gmail.com>

R-developers:

I'm working on updating my R package "spatial.tools", and one thing I
was wondering was the proper way to have hidden functions -- should I
simply not export them to the namespace and use the ::: operator to
call them (which is what I currently do)?

--j

--
Jonathan A. Greenberg, PhD
Assistant Professor
Global Environmental Analysis and Remote Sensing (GEARS) Laboratory
Department of Geography and Geographic Information Science
University of Illinois at Urbana-Champaign
607 South Mathews Avenue, MC 150
Urbana, IL 61801
Phone: 217-300-1924
http://www.geog.illinois.edu/~jgrn/
AIM: jgrn307, MSN: jgrn307 at hotmail.com, Gchat: jgrn307, Skype: jgrn3007


From murdoch.duncan at gmail.com  Fri Jul 12 18:35:04 2013
From: murdoch.duncan at gmail.com (Duncan Murdoch)
Date: Fri, 12 Jul 2013 18:35:04 +0200
Subject: [Rd] "Proper" way to use a "hidden" function in an R-package?
In-Reply-To: <CABG0rfuVhzEB1s-287dAfCHMDcsWL9dLDAfaLennbQNMYOjNEw@mail.gmail.com>
References: <CABG0rfuVhzEB1s-287dAfCHMDcsWL9dLDAfaLennbQNMYOjNEw@mail.gmail.com>
Message-ID: <51E03038.5080000@gmail.com>

On 13-07-12 5:52 PM, Jonathan Greenberg wrote:
> R-developers:
>
> I'm working on updating my R package "spatial.tools", and one thing I
> was wondering was the proper way to have hidden functions -- should I
> simply not export them to the namespace and use the ::: operator to
> call them (which is what I currently do)?

Are you calling them from inside the package?  If so, you don't need the 
:::.

If you're not calling them from inside the package, then why not export 
them?  I think you need to explain the context.

Duncan Murdoch

>
> --j
>
> --
> Jonathan A. Greenberg, PhD
> Assistant Professor
> Global Environmental Analysis and Remote Sensing (GEARS) Laboratory
> Department of Geography and Geographic Information Science
> University of Illinois at Urbana-Champaign
> 607 South Mathews Avenue, MC 150
> Urbana, IL 61801
> Phone: 217-300-1924
> http://www.geog.illinois.edu/~jgrn/
> AIM: jgrn307, MSN: jgrn307 at hotmail.com, Gchat: jgrn307, Skype: jgrn3007
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>


From jgrn at illinois.edu  Fri Jul 12 20:13:12 2013
From: jgrn at illinois.edu (Jonathan Greenberg)
Date: Fri, 12 Jul 2013 13:13:12 -0500
Subject: [Rd] "Proper" way to use a "hidden" function in an R-package?
In-Reply-To: <72e8fb0d815546218d6a34ae88d1100d@CHIHT1.ad.uillinois.edu>
References: <CABG0rfuVhzEB1s-287dAfCHMDcsWL9dLDAfaLennbQNMYOjNEw@mail.gmail.com>
	<72e8fb0d815546218d6a34ae88d1100d@CHIHT1.ad.uillinois.edu>
Message-ID: <CABG0rftQLsvWdkU_Sj=xYyYYt-Xb6B5rZn1-VOtcSOiap+eEgA@mail.gmail.com>

I think part of this may be my (possibly flawed) understanding of
documentation requirements for CRAN -- if a function is exported to
the namespace, does CRAN require documentation of that function?  The
reason I ask is that I have a lot of these little functions that have
no need for documentation (since they are only used internally by a
larger, documented function -- no end-user would touch them).  If this
is flawed understanding, do I just export it to the NAMESPACE and I'm
good to go?

--j

On Fri, Jul 12, 2013 at 11:35 AM, Duncan Murdoch
<murdoch.duncan at gmail.com> wrote:
> On 13-07-12 5:52 PM, Jonathan Greenberg wrote:
>> R-developers:
>>
>> I'm working on updating my R package "spatial.tools", and one thing I
>> was wondering was the proper way to have hidden functions -- should I
>> simply not export them to the namespace and use the ::: operator to
>> call them (which is what I currently do)?
>
> Are you calling them from inside the package?  If so, you don't need the
> :::.
>
> If you're not calling them from inside the package, then why not export
> them?  I think you need to explain the context.
>
> Duncan Murdoch
>
>>
>> --j
>>
>> --
>> Jonathan A. Greenberg, PhD
>> Assistant Professor
>> Global Environmental Analysis and Remote Sensing (GEARS) Laboratory
>> Department of Geography and Geographic Information Science
>> University of Illinois at Urbana-Champaign
>> 607 South Mathews Avenue, MC 150
>> Urbana, IL 61801
>> Phone: 217-300-1924
>> http://www.geog.illinois.edu/~jgrn/
>> AIM: jgrn307, MSN: jgrn307 at hotmail.com, Gchat: jgrn307, Skype: jgrn3007
>>
>> ______________________________________________
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>
>



-- 
Jonathan A. Greenberg, PhD
Assistant Professor
Global Environmental Analysis and Remote Sensing (GEARS) Laboratory
Department of Geography and Geographic Information Science
University of Illinois at Urbana-Champaign
607 South Mathews Avenue, MC 150
Urbana, IL 61801
Phone: 217-300-1924
http://www.geog.illinois.edu/~jgrn/
AIM: jgrn307, MSN: jgrn307 at hotmail.com, Gchat: jgrn307, Skype: jgrn3007


From gmbecker at ucdavis.edu  Fri Jul 12 20:42:42 2013
From: gmbecker at ucdavis.edu (Gabriel Becker)
Date: Fri, 12 Jul 2013 11:42:42 -0700
Subject: [Rd] "Proper" way to use a "hidden" function in an R-package?
In-Reply-To: <CABG0rftQLsvWdkU_Sj=xYyYYt-Xb6B5rZn1-VOtcSOiap+eEgA@mail.gmail.com>
References: <CABG0rfuVhzEB1s-287dAfCHMDcsWL9dLDAfaLennbQNMYOjNEw@mail.gmail.com>
	<72e8fb0d815546218d6a34ae88d1100d@CHIHT1.ad.uillinois.edu>
	<CABG0rftQLsvWdkU_Sj=xYyYYt-Xb6B5rZn1-VOtcSOiap+eEgA@mail.gmail.com>
Message-ID: <CADwqtCMZnRVZq7vaexrmjaM3K+Hycim4prwuBoE0ncu0gXYBAw@mail.gmail.com>

An embedded and charset-unspecified text was scrubbed...
Name: not available
URL: <https://stat.ethz.ch/pipermail/r-devel/attachments/20130712/2adf6742/attachment.pl>

From hpages at fhcrc.org  Sat Jul 13 03:38:39 2013
From: hpages at fhcrc.org (=?ISO-8859-1?Q?Herv=E9_Pag=E8s?=)
Date: Fri, 12 Jul 2013 18:38:39 -0700
Subject: [Rd] missing PROTECT() in src/main/arithmetic.c
Message-ID: <51E0AF9F.5000001@fhcrc.org>

at lines 651 & 653 (integer_binary function):

     if (code == DIVOP || code == POWOP)
         ans = allocVector(REALSXP, n);
     else
         ans = allocVector(INTSXP, n);

There are calls to warningcall() later in the function, which can
trigger garbbage collection.

Looks like the typical scenario where it seemed pretty safe to not
PROTECT in the original version of the function but became very
unsafe 3 years later when the calls to warningcall() were added to
the function.

Cheers,
H.

-- 
Herv? Pag?s

Program in Computational Biology
Division of Public Health Sciences
Fred Hutchinson Cancer Research Center
1100 Fairview Ave. N, M1-B514
P.O. Box 19024
Seattle, WA 98109-1024

E-mail: hpages at fhcrc.org
Phone:  (206) 667-5791
Fax:    (206) 667-1319


From b.h.mevik at usit.uio.no  Sat Jul 13 10:56:29 2013
From: b.h.mevik at usit.uio.no (=?utf-8?Q?Bj=C3=B8rn-Helge_Mevik?=)
Date: Sat, 13 Jul 2013 10:56:29 +0200
Subject: [Rd] Alternative to eval(cl, parent.frame()) ?
Message-ID: <s3sk3kubzya.fsf@slagelg.uio.no>

Dear developeRs,

I maintain a package 'pls', which has a main fit function mvr(), and
functions plsr() and pcr() which are meant to take the same arguments as
mvr() and do exactly the same, but have different default values for the
'method' argument.  The three functions are all exported from the name
space.

In the 'pre namespace' era, I took inspiration from lm() and implemented
it like this:

plsr <- function(..., method = pls.options()$plsralg) {
    cl <- match.call()
    cl$method <- match.arg(method, c("kernelpls", "widekernelpls", "simpls",
                                     "oscorespls", "model.frame"))
    cl[[1]] <- as.name("mvr")
    res <- eval(cl, parent.frame())
    ...


Recently, Prof. Brian Ripley kindly pointed out that this doesn't work
properly when the 'pls' package in not attached:

> data(yarn, package='pls')
> pls::plsr(density ~ NIR, 6, data = yarn, validation = "CV")
<environment: R_GlobalEnv>
Error in eval(expr, envir, enclos) : could not find function "mvr"

I first believed that

    cl[[1]] <- as.name("pls::mvr")

would fix the problem, but that did not help.  I have found that the
following seems to work:

plsr <- function(..., method = pls.options()$plsralg) {
    cl <- match.call()
    cl$method <- match.arg(method, c("kernelpls", "widekernelpls", "simpls",
                                     "oscorespls", "model.frame"))
    arguments <- as.list(cl)[-1]
    res <- do.call(mvr, arguments, envir = parent.frame())
    ...

However, if I understand correctly, this will evaluate the arguments
before handing them over to mvr().  Currently, mvr() doesn't need the
unevaluated arguments, but if it were to, this would be a problem.

Is there an 'R best practice' for achieving what I want (several
versions of the same function, with different default value for an
argument)?

-- 
Regards,
Bj?rn-Helge Mevik


From pdalgd at gmail.com  Sat Jul 13 11:12:27 2013
From: pdalgd at gmail.com (peter dalgaard)
Date: Sat, 13 Jul 2013 11:12:27 +0200
Subject: [Rd] Alternative to eval(cl, parent.frame()) ?
In-Reply-To: <s3sk3kubzya.fsf@slagelg.uio.no>
References: <s3sk3kubzya.fsf@slagelg.uio.no>
Message-ID: <A047A4FA-A260-4484-9864-1EB1C20CDC4B@gmail.com>


On Jul 13, 2013, at 10:56 , Bj?rn-Helge Mevik wrote:

> Dear developeRs,
> 
> I maintain a package 'pls', which has a main fit function mvr(), and
> functions plsr() and pcr() which are meant to take the same arguments as
> mvr() and do exactly the same, but have different default values for the
> 'method' argument.  The three functions are all exported from the name
> space.
> 
> In the 'pre namespace' era, I took inspiration from lm() and implemented
> it like this:
> 
> plsr <- function(..., method = pls.options()$plsralg) {
>    cl <- match.call()
>    cl$method <- match.arg(method, c("kernelpls", "widekernelpls", "simpls",
>                                     "oscorespls", "model.frame"))
>    cl[[1]] <- as.name("mvr")
>    res <- eval(cl, parent.frame())
>    ...
> 
> 
> Recently, Prof. Brian Ripley kindly pointed out that this doesn't work
> properly when the 'pls' package in not attached:
> 
>> data(yarn, package='pls')
>> pls::plsr(density ~ NIR, 6, data = yarn, validation = "CV")
> <environment: R_GlobalEnv>
> Error in eval(expr, envir, enclos) : could not find function "mvr"
> 
> I first believed that
> 
>    cl[[1]] <- as.name("pls::mvr")
> 
> would fix the problem, but that did not help.  I have found that the
> following seems to work:
> 
> plsr <- function(..., method = pls.options()$plsralg) {
>    cl <- match.call()
>    cl$method <- match.arg(method, c("kernelpls", "widekernelpls", "simpls",
>                                     "oscorespls", "model.frame"))
>    arguments <- as.list(cl)[-1]
>    res <- do.call(mvr, arguments, envir = parent.frame())
>    ...
> 
> However, if I understand correctly, this will evaluate the arguments
> before handing them over to mvr().  Currently, mvr() doesn't need the
> unevaluated arguments, but if it were to, this would be a problem.
> 
> Is there an 'R best practice' for achieving what I want (several
> versions of the same function, with different default value for an
> argument)?

We discussed this recently, and I believe the winner was 

cl[[1]] <- quote(pls::mvr)

(notice that :: is an operator, so this is profoundly different from as.name("pls::mvr"), which is a symbol with two colons inside!)

-- 
Peter Dalgaard, Professor,
Center for Statistics, Copenhagen Business School
Solbjerg Plads 3, 2000 Frederiksberg, Denmark
Phone: (+45)38153501
Email: pd.mes at cbs.dk  Priv: PDalgd at gmail.com


From b.h.mevik at usit.uio.no  Sat Jul 13 15:12:21 2013
From: b.h.mevik at usit.uio.no (=?utf-8?Q?Bj=C3=B8rn-Helge_Mevik?=)
Date: Sat, 13 Jul 2013 15:12:21 +0200
Subject: [Rd] Alternative to eval(cl, parent.frame()) ?
In-Reply-To: <A047A4FA-A260-4484-9864-1EB1C20CDC4B@gmail.com> (peter
	dalgaard's message of "Sat, 13 Jul 2013 11:12:27 +0200")
References: <s3sk3kubzya.fsf@slagelg.uio.no>
	<A047A4FA-A260-4484-9864-1EB1C20CDC4B@gmail.com>
Message-ID: <s3sd2qmbo3u.fsf@slagelg.uio.no>

peter dalgaard <pdalgd at gmail.com> writes:

> We discussed this recently, and I believe the winner was 
>
> cl[[1]] <- quote(pls::mvr)

Thank you!

> (notice that :: is an operator, so this is profoundly different from
> as.name("pls::mvr"), which is a symbol with two colons inside!)

Ah.  Of course!

-- 
Regards,
Bj?rn-Helge Mevik


From radford at cs.toronto.edu  Sat Jul 13 16:59:29 2013
From: radford at cs.toronto.edu (Radford Neal)
Date: Sat, 13 Jul 2013 10:59:29 -0400
Subject: [Rd] missing PROTECT() in src/main/arithmetic.c
In-Reply-To: <mailman.27.1373709607.15244.r-devel@r-project.org>
References: <mailman.27.1373709607.15244.r-devel@r-project.org>
Message-ID: <20130713145929.GA4321@cs.toronto.edu>

> From: Herv? Pag?s <hpages at fhcrc.org>

> at lines 651 & 653 (integer_binary function):
> 
>      if (code == DIVOP || code == POWOP)
>          ans = allocVector(REALSXP, n);
>      else
>          ans = allocVector(INTSXP, n);
> 
> There are calls to warningcall() later in the function, which can
> trigger garbbage collection.
> 
> Looks like the typical scenario where it seemed pretty safe to not
> PROTECT in the original version of the function but became very
> unsafe 3 years later when the calls to warningcall() were added to
> the function.

Note that there is also a problem with a possible warning from myfmod,
which in turn is called from R_pow.  

The call of myfmod from R_pow should probably be replaced by something
else, since as it is, the following undesirable behaviour occurs:

    > (-Inf)^(1e16)
    [1] Inf
    Warning message:
    probable complete loss of accuracy in modulus 

I think issuing a warning for this is probably not a good idea, but if
a warning is issued, it certainly shouldn't be this one.

   Radford Neal


From luke-tierney at uiowa.edu  Sat Jul 13 17:08:15 2013
From: luke-tierney at uiowa.edu (luke-tierney at uiowa.edu)
Date: Sat, 13 Jul 2013 10:08:15 -0500
Subject: [Rd] missing PROTECT() in src/main/arithmetic.c
In-Reply-To: <51E0AF9F.5000001@fhcrc.org>
References: <51E0AF9F.5000001@fhcrc.org>
Message-ID: <alpine.DEB.2.02.1307131007420.2139@luke-Latitude>

Thanks -- fixed in 63290 (trunk) and 63291 (patched).

luke

On Fri, 12 Jul 2013, Herv? Pag?s wrote:

> at lines 651 & 653 (integer_binary function):
>
>    if (code == DIVOP || code == POWOP)
>        ans = allocVector(REALSXP, n);
>    else
>        ans = allocVector(INTSXP, n);
>
> There are calls to warningcall() later in the function, which can
> trigger garbbage collection.
>
> Looks like the typical scenario where it seemed pretty safe to not
> PROTECT in the original version of the function but became very
> unsafe 3 years later when the calls to warningcall() were added to
> the function.
>
> Cheers,
> H.
>
>

-- 
Luke Tierney
Chair, Statistics and Actuarial Science
Ralph E. Wareham Professor of Mathematical Sciences
University of Iowa                  Phone:             319-335-3386
Department of Statistics and        Fax:               319-335-3017
    Actuarial Science
241 Schaeffer Hall                  email:   luke-tierney at uiowa.edu
Iowa City, IA 52242                 WWW:  http://www.stat.uiowa.edu

From edd at debian.org  Sat Jul 13 17:40:21 2013
From: edd at debian.org (Dirk Eddelbuettel)
Date: Sat, 13 Jul 2013 10:40:21 -0500
Subject: [Rd] "Proper" way to use a "hidden" function in an R-package?
In-Reply-To: <CADwqtCMZnRVZq7vaexrmjaM3K+Hycim4prwuBoE0ncu0gXYBAw@mail.gmail.com>
References: <CABG0rfuVhzEB1s-287dAfCHMDcsWL9dLDAfaLennbQNMYOjNEw@mail.gmail.com>
	<72e8fb0d815546218d6a34ae88d1100d@CHIHT1.ad.uillinois.edu>
	<CABG0rftQLsvWdkU_Sj=xYyYYt-Xb6B5rZn1-VOtcSOiap+eEgA@mail.gmail.com>
	<CADwqtCMZnRVZq7vaexrmjaM3K+Hycim4prwuBoE0ncu0gXYBAw@mail.gmail.com>
Message-ID: <20961.29925.394385.528222@max.nulle.part>


On 12 July 2013 at 11:42, Gabriel Becker wrote:
| Jonathan,
| 
| All exported functions must have documentation entries to pass R CMD check
| without warnings.
| 
| Functions within your package do not need another function in your package
| to be exported to call it without :::, but code not in your package (ie
| functions in other packages or user code) do.
| 
| If you have reason to believe that a user or function from another package
| will directly call a function, it should be exported, and thus documented.
| If not, you can use them within code in your own package without exporting
| them, using :::, or documenting them.

All true, but what Jonathan _really_ wanted to know is that adding a single 

    \alias{nameOfThatFunction}

in an .Rd file will also satisfy R CMD check.  Some package use a file
undocumented.Rd to regreoup these; I sometimes use the Packagename-package.Rd
file.

Dirk

-- 
Dirk Eddelbuettel | edd at debian.org | http://dirk.eddelbuettel.com


From ivo.welch at gmail.com  Sun Jul 14 07:24:19 2013
From: ivo.welch at gmail.com (ivo welch)
Date: Sat, 13 Jul 2013 22:24:19 -0700
Subject: [Rd] unmapped memory core dump with pure R program?
Message-ID: <CAPr7RtXJMjJ6m8T+LNLQ4_+-ggDXLiXZPLxRJujHSxV5MyYCnQ@mail.gmail.com>

An embedded and charset-unspecified text was scrubbed...
Name: not available
URL: <https://stat.ethz.ch/pipermail/r-devel/attachments/20130713/50e96da8/attachment.pl>

From edd at debian.org  Sun Jul 14 11:54:21 2013
From: edd at debian.org (Dirk Eddelbuettel)
Date: Sun, 14 Jul 2013 04:54:21 -0500
Subject: [Rd] unmapped memory core dump with pure R program?
In-Reply-To: <CAPr7RtXJMjJ6m8T+LNLQ4_+-ggDXLiXZPLxRJujHSxV5MyYCnQ@mail.gmail.com>
References: <CAPr7RtXJMjJ6m8T+LNLQ4_+-ggDXLiXZPLxRJujHSxV5MyYCnQ@mail.gmail.com>
Message-ID: <20962.30029.747172.113244@max.nulle.part>


On 13 July 2013 at 22:24, ivo welch wrote:
| dear R developers---I am running a pure R program on the stock binary
| debian (ubuntu) 64-bit linux distribution, 3.0.1.  for identification,
[...]
| recurse some.  I don't have symbols in my R binary, so the location may not
| be useful, but I thought I would let you guys know.  

You can install the 'r-base-core-dbg' package [1] to get the (stripped)
debugging symbols back.

Dirk

[1] Quite generally, on Debian/Ubuntu, for package $xys the corresponding
    $xyz-dbg contains the corresponding debugging symbols.

-- 
Dirk Eddelbuettel | edd at debian.org | http://dirk.eddelbuettel.com


From ivo.welch at gmail.com  Sun Jul 14 16:51:48 2013
From: ivo.welch at gmail.com (ivo welch)
Date: Sun, 14 Jul 2013 07:51:48 -0700
Subject: [Rd] unmapped memory core dump with pure R program?
In-Reply-To: <20962.30029.747172.113244@max.nulle.part>
References: <CAPr7RtXJMjJ6m8T+LNLQ4_+-ggDXLiXZPLxRJujHSxV5MyYCnQ@mail.gmail.com>
	<20962.30029.747172.113244@max.nulle.part>
Message-ID: <CAPr7RtVobwHEj20X2JqG7DHWs_VyEgAeLfX7V0jp4sn=Dk36Hw@mail.gmail.com>

An embedded and charset-unspecified text was scrubbed...
Name: not available
URL: <https://stat.ethz.ch/pipermail/r-devel/attachments/20130714/f99d5df4/attachment.pl>

From simon.urbanek at r-project.org  Sun Jul 14 17:01:21 2013
From: simon.urbanek at r-project.org (Simon Urbanek)
Date: Sun, 14 Jul 2013 11:01:21 -0400
Subject: [Rd] unmapped memory core dump with pure R program?
In-Reply-To: <CAPr7RtVobwHEj20X2JqG7DHWs_VyEgAeLfX7V0jp4sn=Dk36Hw@mail.gmail.com>
References: <CAPr7RtXJMjJ6m8T+LNLQ4_+-ggDXLiXZPLxRJujHSxV5MyYCnQ@mail.gmail.com>
	<20962.30029.747172.113244@max.nulle.part>
	<CAPr7RtVobwHEj20X2JqG7DHWs_VyEgAeLfX7V0jp4sn=Dk36Hw@mail.gmail.com>
Message-ID: <E085E85D-5C7C-438B-85CE-2503B1572775@r-project.org>

On Jul 14, 2013, at 10:51 AM, ivo welch wrote:

> thx.  would be happy to do this, but is it worth the effort?  are you guys
> interested in potentially chasing this down or is this mundane?
> 

R should not segfault, so we're interested, but we will need a reproducible example.
That said, R-devel has quite a few new bugfixes, so I'd suggest that you may want to replicate it there first.

Cheers,
Simon


> regards,
> 
> /iaw
> ----
> Ivo Welch (ivo.welch at gmail.com)
> 
> 
> 
> On Sun, Jul 14, 2013 at 2:54 AM, Dirk Eddelbuettel <edd at debian.org> wrote:
> 
>> 
>> On 13 July 2013 at 22:24, ivo welch wrote:
>> | dear R developers---I am running a pure R program on the stock binary
>> | debian (ubuntu) 64-bit linux distribution, 3.0.1.  for identification,
>> [...]
>> | recurse some.  I don't have symbols in my R binary, so the location may
>> not
>> | be useful, but I thought I would let you guys know.
>> 
>> You can install the 'r-base-core-dbg' package [1] to get the (stripped)
>> debugging symbols back.
>> 
>> Dirk
>> 
>> [1] Quite generally, on Debian/Ubuntu, for package $xys the corresponding
>>    $xyz-dbg contains the corresponding debugging symbols.
>> 
>> --
>> Dirk Eddelbuettel | edd at debian.org | http://dirk.eddelbuettel.com
>> 
> 
> 	[[alternative HTML version deleted]]
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
> 
> 


From ivo.welch at gmail.com  Sun Jul 14 18:04:06 2013
From: ivo.welch at gmail.com (ivo welch)
Date: Sun, 14 Jul 2013 09:04:06 -0700
Subject: [Rd] unmapped memory core dump with pure R program?
In-Reply-To: <E085E85D-5C7C-438B-85CE-2503B1572775@r-project.org>
References: <CAPr7RtXJMjJ6m8T+LNLQ4_+-ggDXLiXZPLxRJujHSxV5MyYCnQ@mail.gmail.com>
	<20962.30029.747172.113244@max.nulle.part>
	<CAPr7RtVobwHEj20X2JqG7DHWs_VyEgAeLfX7V0jp4sn=Dk36Hw@mail.gmail.com>
	<E085E85D-5C7C-438B-85CE-2503B1572775@r-project.org>
Message-ID: <CAPr7RtUtH37P5e0W8YcFsaJA5VTj3+MhHFJCVpzcwSbzHdsiDg@mail.gmail.com>

An embedded and charset-unspecified text was scrubbed...
Name: not available
URL: <https://stat.ethz.ch/pipermail/r-devel/attachments/20130714/b51e6e47/attachment.pl>

From edd at debian.org  Sun Jul 14 18:20:07 2013
From: edd at debian.org (Dirk Eddelbuettel)
Date: Sun, 14 Jul 2013 11:20:07 -0500
Subject: [Rd] unmapped memory core dump with pure R program?
In-Reply-To: <CAPr7RtUtH37P5e0W8YcFsaJA5VTj3+MhHFJCVpzcwSbzHdsiDg@mail.gmail.com>
References: <CAPr7RtXJMjJ6m8T+LNLQ4_+-ggDXLiXZPLxRJujHSxV5MyYCnQ@mail.gmail.com>
	<20962.30029.747172.113244@max.nulle.part>
	<CAPr7RtVobwHEj20X2JqG7DHWs_VyEgAeLfX7V0jp4sn=Dk36Hw@mail.gmail.com>
	<E085E85D-5C7C-438B-85CE-2503B1572775@r-project.org>
	<CAPr7RtUtH37P5e0W8YcFsaJA5VTj3+MhHFJCVpzcwSbzHdsiDg@mail.gmail.com>
Message-ID: <20962.53175.179933.607310@max.nulle.part>


On 14 July 2013 at 09:04, ivo welch wrote:
| thanks, simon.  it's replicable even on
| 
|    R version 3.0.1 Patched (2013-07-13 r63293) -- "Good Sport"
| 
| (I presume that it is loading its own updated dynamic libraries when I
| installed it in a temporary directory and am invoking it as
| "temp/R-patched/bin/R", and not the system-wide unpatched version.)  the

It "should" stay within its own tree. I call my r-devel builds with a
two-line shell script wrapper to make sure its bin/ directory is prefixed to
the $PATH. 

| program that causes it is small enough to be displayable
| 
| if (interactive()) options(error=recover)
| year <- 1982
| 
| for (yr in (year-6):year) {
|     ifname <- paste0("dbetas/dbetas-",yr, ".Rdata")

That is obviously NOT reproducible as we do not have your files.

If possible, please create a _self-contained reproducible script_ as it ought
to be possible to create such data matrices with random data.

Dirk

|     load(ifname)
|     print(head(dbetas,2))  ## if you remove this, then the core dump goes
| away
|     dm <- if (!exists("dm")) dbetas else rbind(dm, dbetas)
|     cat("[Loaded ", yr,"]\n")
| }
| cat("\n[", now(), "Loaded All Data]\n")
| 
| 
| Reproducing the error,
| 
| # r-devel/R-patched/bin/R --vanilla
| 
| R version 3.0.1 Patched (2013-07-13 r63293) -- "Good Sport"
| Copyright (C) 2013 The R Foundation for Statistical Computing
| Platform: x86_64-unknown-linux-gnu (64-bit)
| 
| R is free software and comes with ABSOLUTELY NO WARRANTY.
| You are welcome to redistribute it under certain conditions.
| Type 'license()' or 'licence()' for distribution details.
| 
|   Natural language support but running in an English locale
| 
| R is a collaborative project with many contributors.
| Type 'contributors()' for more information and
| 'citation()' on how to cite R or R packages in publications.
| 
| Type 'demo()' for some demos, 'help()' for on-line help, or
| 'help.start()' for an HTML browser interface to help.
| Type 'q()' to quit R.
| 
| > source("coredump.R")
|       permno yyyymmdd lagmval        beta
| 31303  10006 19760102  219450 -0.81162794
| 31304  10006 19760105  218025 -0.01280477
| [Loaded  1976 ]
|       permno yyyymmdd  lagmval       beta
| 31556  10006 19770103 304709.4  4.5770379
| 31557  10006 19770104 301456.2 -0.3810519
| [Loaded  1977 ]
|       permno yyyymmdd  lagmval     beta
| 31808  10006 19780103 301219.5 1.277823
| 31809  10006 19780104 296854.0 2.671327
| [Loaded  1978 ]
|       permno yyyymmdd  lagmval        beta
| 32060  10006 19790102 269308.5 -0.06000999
| 32061  10006 19790103 269308.5 -0.83697042
| [Loaded  1979 ]
|       permno yyyymmdd  lagmval       beta
| 32313  10006 19800102 303420.8 -0.3768525
| 32314  10006 19800103 305635.5  2.2475787
| Error in rbind(deparse.level, ...) :
|   'pairlist' object cannot be coerced to type 'double'
| 
| Enter a frame number, or 0 to exit
| 
| 1: source("coredump.R")
| 2: withVisible(eval(ei, envir))
| 3: eval(ei, envir)
| 4: eval(expr, envir, enclos)
| 5: coredump.R#8: rbind(dm, dbetas)
| 6: rbind(deparse.level, ...)
| 
| Selection: 6
| Called from: eval(substitute(browser(skipCalls = skip), list(skip = 7 -
| which)),
|     envir = sys.frame(which))
| Browse[1]> head(dm)
|       permno yyyymmdd lagmval        beta
| 31303  10006 19760102  219450 -0.81162794
| 31304  10006 19760105  218025 -0.01280477
| 31305  10006 19760106  218025  7.26041268
| 31306  10006 19760107  236550 -1.23044474
| 31307  10006 19760108  235125  3.02461687
| 31308  10006 19760109  239400  2.04868169
| Browse[1]> head(rbind(dm,dbetas))
| 
|  *** caught segfault ***
| address 0x10, cause 'memory not mapped'
| 
| Traceback:
|  1: rbind(deparse.level, ...)
|  2: rbind(dm, dbetas)
|  3: head(rbind(dm, dbetas))
|  4: eval(expr, envir, enclos)
|  5: eval(substitute(browser(skipCalls = skip), list(skip = 7 - which)),
| envir = sys.frame(which))
|  6: (function () {    if (.isMethodsDispatchOn()) {        tState <-
| tracingState(FALSE)        on.exit(tracingState(tState))    }    calls <-
| sys.calls()    from <- 0L    n <- length(calls)    if
| (identical(sys.function(n), recover))         n <- n - 1L    for (i in
| rev(seq_len(n))) {        calli <- calls[[i]]        fname <- calli[[1L]]
|      if (!is.na(match(deparse(fname)[1L], c("methods::.doTrace",
|   ".doTrace")))) {            from <- i - 1L            break        }    }
|    if (from == 0L)         for (i in rev(seq_len(n))) {            calli <-
| calls[[i]]            fname <- calli[[1L]]            if (!is.name(fname)
| || is.na(match(as.character(fname),                 c("recover", "stop",
| "Stop")))) {                from <- i                break            }
|    }    if (from > 0L) {        if (!interactive()) {
|  try(dump.frames())            cat(gettext("recover called
| non-interactively; frames dumped, use debugger() to view\n"))
|  return(NULL)        }        else if
| (identical(getOption("show.error.messages"),             FALSE))
|   return(NULL)        calls <- limitedLabels(calls[1L:from])        repeat
| {            which <- menu(calls, title = "\nEnter a frame number, or 0 to
| exit  ")            if (which)
| eval(substitute(browser(skipCalls = skip), list(skip = 7 -
|   which)), envir = sys.frame(which))            else break        }    }
|  else cat(gettext("No suitable frames for recover()\n"))})()
|  7: rbind(deparse.level, ...)
|  8: rbind(dm, dbetas)
|  9: eval(expr, envir, enclos)
| 10: eval(ei, envir)
| 11: withVisible(eval(ei, envir))
| 12: source("coredump.R")
| 
| Possible actions:
| 1: abort (with core dump, if enabled)
| 2: normal R exit
| 3: exit R without saving workspace
| 4: exit R saving workspace
| Selection:
| 
| 
| the data files used are about 60mb.  this is all happening on a home
| machine, which is not easy to ssh into.  however, I can bring it into the
| office and see if I can replicate it there, too.  if I can, I could put it
| up and give you an account on my machine.  or I can tar it up incl the data
| and put it somewhere for download.  whatever you prefer.
| 
| regards,
| 
| /iaw
| ----
| Ivo Welch (ivo.welch at gmail.com)
| 
| 	[[alternative HTML version deleted]]
| 
| ______________________________________________
| R-devel at r-project.org mailing list
| https://stat.ethz.ch/mailman/listinfo/r-devel

-- 
Dirk Eddelbuettel | edd at debian.org | http://dirk.eddelbuettel.com


From jeroen.ooms at stat.ucla.edu  Sun Jul 14 19:18:25 2013
From: jeroen.ooms at stat.ucla.edu (Jeroen Ooms)
Date: Sun, 14 Jul 2013 19:18:25 +0200
Subject: [Rd] Redirect system2 stdout to a file on windows
Message-ID: <CABFfbXt=G7L1=4FFvZS5m=tVmEUg95eOBnJYo7u7GHz2D-keTg@mail.gmail.com>

According to the manual, the `stdout` argument of the `system2`
function can redirect output to a file. This seems to work on unix,
however I can't get it to work on windows. The toy example below, no
`out.txt` or `err.txt` files are created. I tried sending it to an
existing file, or expand the full file path, but with no success:

    setwd(tempdir())
    system2("whoami", stdout="out.txt", stderr="err.txt")
    file.exists("out.txt")

Am I doing something wrong or is this not supported on windows?


From ivo.welch at gmail.com  Sun Jul 14 20:45:29 2013
From: ivo.welch at gmail.com (ivo welch)
Date: Sun, 14 Jul 2013 11:45:29 -0700
Subject: [Rd] unmapped memory core dump with pure R program?
In-Reply-To: <20962.53175.179933.607310@max.nulle.part>
References: <CAPr7RtXJMjJ6m8T+LNLQ4_+-ggDXLiXZPLxRJujHSxV5MyYCnQ@mail.gmail.com>
	<20962.30029.747172.113244@max.nulle.part>
	<CAPr7RtVobwHEj20X2JqG7DHWs_VyEgAeLfX7V0jp4sn=Dk36Hw@mail.gmail.com>
	<E085E85D-5C7C-438B-85CE-2503B1572775@r-project.org>
	<CAPr7RtUtH37P5e0W8YcFsaJA5VTj3+MhHFJCVpzcwSbzHdsiDg@mail.gmail.com>
	<20962.53175.179933.607310@max.nulle.part>
Message-ID: <CAPr7RtV7uwiKDwDJQQJPnupAO3z1e3HTA6s53AQC2-GVeiFPYw@mail.gmail.com>

An embedded and charset-unspecified text was scrubbed...
Name: not available
URL: <https://stat.ethz.ch/pipermail/r-devel/attachments/20130714/772ba8a6/attachment.pl>

From edd at debian.org  Sun Jul 14 21:03:22 2013
From: edd at debian.org (Dirk Eddelbuettel)
Date: Sun, 14 Jul 2013 14:03:22 -0500
Subject: [Rd] unmapped memory core dump with pure R program?
In-Reply-To: <CAPr7RtV7uwiKDwDJQQJPnupAO3z1e3HTA6s53AQC2-GVeiFPYw@mail.gmail.com>
References: <CAPr7RtXJMjJ6m8T+LNLQ4_+-ggDXLiXZPLxRJujHSxV5MyYCnQ@mail.gmail.com>
	<20962.30029.747172.113244@max.nulle.part>
	<CAPr7RtVobwHEj20X2JqG7DHWs_VyEgAeLfX7V0jp4sn=Dk36Hw@mail.gmail.com>
	<E085E85D-5C7C-438B-85CE-2503B1572775@r-project.org>
	<CAPr7RtUtH37P5e0W8YcFsaJA5VTj3+MhHFJCVpzcwSbzHdsiDg@mail.gmail.com>
	<20962.53175.179933.607310@max.nulle.part>
	<CAPr7RtV7uwiKDwDJQQJPnupAO3z1e3HTA6s53AQC2-GVeiFPYw@mail.gmail.com>
Message-ID: <20962.62970.540933.46729@max.nulle.part>


On 14 July 2013 at 11:45, ivo welch wrote:
| hi dirk---look, it's a fickle bus segfault. ?if you read my email in full, you
| will note that even eliminating an irrelevant print(head()) statement makes it
| go away. ?we are lucky it is reproducible and thus easy to track down for
| whoever wrote the code, given my code AND the data, of course. ?(maybe it
| could do with me trying to create data that are random, maybe not. ?but there
| is no point to me doing so. ?if we have the bug reproducible, we should chase
| it down when we know it appears.) ?I know that you cannot reproduce it from
| what I have posted. ?I also wrote that I will bring the tarball (with the
| files) into my office tomorrow to see if I can make it remotely available to
| simon or you, if you are interested.
| 
| I am trying to help...it did take me a day to reduce the code to figure out
| what went wrong,, and an hour to get it to this point where it is easily
| understandable, reproducible, and digestable by you.

Well your comment notwithstanding I actually had read your code snippet and
concluded that at least your initial report was wrong (as you blamed rbind,
not head which the comment now blames) but I have never made any promises to
debug this -- R memory internals requires sturdier souls than mine.

Rather, I was trying to explain to you that if you want your "so far non-bug
as not reproducible" report to have any effect, you have to give those whose
time you expect to be devoted to this at least the commonly required inputs
to be able to replicate the issue.  And no, the offer to supply 60gb of data
does not commonly count as a suitable offer.  A reproducible script might.

Dirk

-- 
Dirk Eddelbuettel | edd at debian.org | http://dirk.eddelbuettel.com


From ivo.welch at gmail.com  Sun Jul 14 21:57:11 2013
From: ivo.welch at gmail.com (ivo welch)
Date: Sun, 14 Jul 2013 12:57:11 -0700
Subject: [Rd] unmapped memory core dump with pure R program?
In-Reply-To: <20962.62970.540933.46729@max.nulle.part>
References: <CAPr7RtXJMjJ6m8T+LNLQ4_+-ggDXLiXZPLxRJujHSxV5MyYCnQ@mail.gmail.com>
	<20962.30029.747172.113244@max.nulle.part>
	<CAPr7RtVobwHEj20X2JqG7DHWs_VyEgAeLfX7V0jp4sn=Dk36Hw@mail.gmail.com>
	<E085E85D-5C7C-438B-85CE-2503B1572775@r-project.org>
	<CAPr7RtUtH37P5e0W8YcFsaJA5VTj3+MhHFJCVpzcwSbzHdsiDg@mail.gmail.com>
	<20962.53175.179933.607310@max.nulle.part>
	<CAPr7RtV7uwiKDwDJQQJPnupAO3z1e3HTA6s53AQC2-GVeiFPYw@mail.gmail.com>
	<20962.62970.540933.46729@max.nulle.part>
Message-ID: <CAPr7RtV6QEn77=bNtqDPsiMufdDXo-ty5jQAuHn56a_HcvLZbA@mail.gmail.com>

An embedded and charset-unspecified text was scrubbed...
Name: not available
URL: <https://stat.ethz.ch/pipermail/r-devel/attachments/20130714/e5457daf/attachment.pl>

From ggrothendieck at gmail.com  Sun Jul 14 22:24:45 2013
From: ggrothendieck at gmail.com (Gabor Grothendieck)
Date: Sun, 14 Jul 2013 16:24:45 -0400
Subject: [Rd] Redirect system2 stdout to a file on windows
In-Reply-To: <CABFfbXt=G7L1=4FFvZS5m=tVmEUg95eOBnJYo7u7GHz2D-keTg@mail.gmail.com>
References: <CABFfbXt=G7L1=4FFvZS5m=tVmEUg95eOBnJYo7u7GHz2D-keTg@mail.gmail.com>
Message-ID: <CAP01uR=5jNc6p_DcC_RGvSk6XunZp=5-GuOrYSa5Viej=z-YUA@mail.gmail.com>

On Sun, Jul 14, 2013 at 1:18 PM, Jeroen Ooms <jeroen.ooms at stat.ucla.edu> wrote:
> According to the manual, the `stdout` argument of the `system2`
> function can redirect output to a file. This seems to work on unix,
> however I can't get it to work on windows. The toy example below, no
> `out.txt` or `err.txt` files are created. I tried sending it to an
> existing file, or expand the full file path, but with no success:
>
>     setwd(tempdir())
>     system2("whoami", stdout="out.txt", stderr="err.txt")
>     file.exists("out.txt")
>
> Am I doing something wrong or is this not supported on windows?
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel

Try:

out.txt <- normalizePath("./out.txt", mustWork = FALSE)



--
Statistics & Software Consulting
GKX Group, GKX Associates Inc.
tel: 1-877-GKX-GROUP
email: ggrothendieck at gmail.com


From jeroen.ooms at stat.ucla.edu  Sun Jul 14 23:20:52 2013
From: jeroen.ooms at stat.ucla.edu (Jeroen Ooms)
Date: Sun, 14 Jul 2013 23:20:52 +0200
Subject: [Rd] Redirect system2 stdout to a file on windows
In-Reply-To: <CAP01uR=5jNc6p_DcC_RGvSk6XunZp=5-GuOrYSa5Viej=z-YUA@mail.gmail.com>
References: <CABFfbXt=G7L1=4FFvZS5m=tVmEUg95eOBnJYo7u7GHz2D-keTg@mail.gmail.com>
	<CAP01uR=5jNc6p_DcC_RGvSk6XunZp=5-GuOrYSa5Viej=z-YUA@mail.gmail.com>
Message-ID: <CABFfbXushi3DUc37Qg4mm=Ghib1j_pUjDirtobGEsUcZjf151Q@mail.gmail.com>

On Sun, Jul 14, 2013 at 10:24 PM, Gabor Grothendieck wrote:
> Try:
> out.txt <- normalizePath("./out.txt", mustWork = FALSE)

Doesn't work either, neither on Win7 nor WinXP.

> sessionInfo()
R version 3.0.1 (2013-05-16)
Platform: x86_64-w64-mingw32/x64 (64-bit)


From ggrothendieck at gmail.com  Mon Jul 15 00:01:33 2013
From: ggrothendieck at gmail.com (Gabor Grothendieck)
Date: Sun, 14 Jul 2013 18:01:33 -0400
Subject: [Rd] Redirect system2 stdout to a file on windows
In-Reply-To: <CABFfbXushi3DUc37Qg4mm=Ghib1j_pUjDirtobGEsUcZjf151Q@mail.gmail.com>
References: <CABFfbXt=G7L1=4FFvZS5m=tVmEUg95eOBnJYo7u7GHz2D-keTg@mail.gmail.com>
	<CAP01uR=5jNc6p_DcC_RGvSk6XunZp=5-GuOrYSa5Viej=z-YUA@mail.gmail.com>
	<CABFfbXushi3DUc37Qg4mm=Ghib1j_pUjDirtobGEsUcZjf151Q@mail.gmail.com>
Message-ID: <CAP01uRmQDnPY7EnTCnp7gPB6HT=mnodoZJzqc=UTLtcezTX-sA@mail.gmail.com>

On Sun, Jul 14, 2013 at 5:20 PM, Jeroen Ooms <jeroen.ooms at stat.ucla.edu> wrote:
> On Sun, Jul 14, 2013 at 10:24 PM, Gabor Grothendieck wrote:
>> Try:
>> out.txt <- normalizePath("./out.txt", mustWork = FALSE)
>
> Doesn't work either, neither on Win7 nor WinXP.
>
>> sessionInfo()
> R version 3.0.1 (2013-05-16)
> Platform: x86_64-w64-mingw32/x64 (64-bit)

Not sure what happened but I tried it again and it did not work on my
system either.

If a workaround is ok then this works on my system:

shell(paste("whoami", ">", "out.txt"))



--
Statistics & Software Consulting
GKX Group, GKX Associates Inc.
tel: 1-877-GKX-GROUP
email: ggrothendieck at gmail.com


From hb at biostat.ucsf.edu  Mon Jul 15 00:08:33 2013
From: hb at biostat.ucsf.edu (Henrik Bengtsson)
Date: Mon, 15 Jul 2013 00:08:33 +0200
Subject: [Rd] Redirect system2 stdout to a file on windows
In-Reply-To: <CAP01uRmQDnPY7EnTCnp7gPB6HT=mnodoZJzqc=UTLtcezTX-sA@mail.gmail.com>
References: <CABFfbXt=G7L1=4FFvZS5m=tVmEUg95eOBnJYo7u7GHz2D-keTg@mail.gmail.com>
	<CAP01uR=5jNc6p_DcC_RGvSk6XunZp=5-GuOrYSa5Viej=z-YUA@mail.gmail.com>
	<CABFfbXushi3DUc37Qg4mm=Ghib1j_pUjDirtobGEsUcZjf151Q@mail.gmail.com>
	<CAP01uRmQDnPY7EnTCnp7gPB6HT=mnodoZJzqc=UTLtcezTX-sA@mail.gmail.com>
Message-ID: <CAFDcVCSqF8y16oKe1DVM_QxYjVuWevi-fxw_yT4Xgpyy+cy=BQ@mail.gmail.com>

Works for me (Win 7 64bit) using R.exe:

> setwd(tempdir())
> getwd()
[1] "C:/Users/hb/AppData/Local/Temp/RtmpSqjCDt"
> res <- system2("whoami", stdout="out.txt", stderr="err.txt")
> res
[1] 0
> file.info(c("out.txt", "err.txt"))
        size isdir mode               mtime               ctime
out.txt   12 FALSE  666 2013-07-15 00:02:06 2013-07-15 00:02:02
err.txt    0 FALSE  666 2013-07-15 00:02:06 2013-07-15 00:02:02
                      atime exe
out.txt 2013-07-15 00:02:02  no
err.txt 2013-07-15 00:02:02  no

> sessionInfo()
R version 3.0.1 Patched (2013-07-10 r63264)
Platform: x86_64-w64-mingw32/x64 (64-bit)

locale:
[1] LC_COLLATE=English_United States.1252
[2] LC_CTYPE=English_United States.1252
[3] LC_MONETARY=English_United States.1252
[4] LC_NUMERIC=C
[5] LC_TIME=English_United States.1252

attached base packages:
[1] stats     graphics  grDevices utils     datasets  methods   base

loaded via a namespace (and not attached):
[1] tools_3.0.1

/Henrik

On Mon, Jul 15, 2013 at 12:01 AM, Gabor Grothendieck
<ggrothendieck at gmail.com> wrote:
> On Sun, Jul 14, 2013 at 5:20 PM, Jeroen Ooms <jeroen.ooms at stat.ucla.edu> wrote:
>> On Sun, Jul 14, 2013 at 10:24 PM, Gabor Grothendieck wrote:
>>> Try:
>>> out.txt <- normalizePath("./out.txt", mustWork = FALSE)
>>
>> Doesn't work either, neither on Win7 nor WinXP.
>>
>>> sessionInfo()
>> R version 3.0.1 (2013-05-16)
>> Platform: x86_64-w64-mingw32/x64 (64-bit)
>
> Not sure what happened but I tried it again and it did not work on my
> system either.
>
> If a workaround is ok then this works on my system:
>
> shell(paste("whoami", ">", "out.txt"))
>
>
>
> --
> Statistics & Software Consulting
> GKX Group, GKX Associates Inc.
> tel: 1-877-GKX-GROUP
> email: ggrothendieck at gmail.com
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From ripley at stats.ox.ac.uk  Mon Jul 15 12:22:05 2013
From: ripley at stats.ox.ac.uk (Prof Brian Ripley)
Date: Mon, 15 Jul 2013 11:22:05 +0100
Subject: [Rd] dotchart.R and left margin
In-Reply-To: <CAPaK=1GxqTJftxSy0tRRkBtwiQrMdm8PtjtovKWUTf0ppJwrog@mail.gmail.com>
References: <CAPaK=1GxqTJftxSy0tRRkBtwiQrMdm8PtjtovKWUTf0ppJwrog@mail.gmail.com>
Message-ID: <51E3CD4D.2010400@stats.ox.ac.uk>

On 01/07/2013 16:37, Stephen Weigand wrote:
> Hello,
>
> In trying to minimize the margin on the left hand side when using
> dotchart I found what may be a typo in the code.
>
> In the lines below from dotchart.R, should nmai[4L] be nmai[2L]?
>
>
>      if (!(is.null(labels) && is.null(glabels))) {
> nmai <- par("mai")
> nmai[2L] <- nmai[4L] + max(linch + goffset, ginch) + 0.1
> par(mai = nmai)
>      }

I think not.  It is unclear what the intention is, but it seems to be to 
visually balance the left and right margins of the whole plot including 
the labels.

It goes back a very long way: the changes since dotchart replaced 
dotplot in 2001 are merely cosmetic.

>
> Thank you,
>
> Stephen Weigand
>
> --
> Rochester, Minn. USA
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>


-- 
Brian D. Ripley,                  ripley at stats.ox.ac.uk
Professor of Applied Statistics,  http://www.stats.ox.ac.uk/~ripley/
University of Oxford,             Tel:  +44 1865 272861 (self)
1 South Parks Road,                     +44 1865 272866 (PA)
Oxford OX1 3TG, UK                Fax:  +44 1865 272595


From Uwe.Ligges at R-project.org  Mon Jul 15 10:11:53 2013
From: Uwe.Ligges at R-project.org (Uwe Ligges)
Date: Mon, 15 Jul 2013 10:11:53 +0200
Subject: [Rd] CRAN and www.r-project.org with limited availability today
Message-ID: <51E3AEC9.8030801@R-project.org>

The CRAN master machines are being moved to the new WU campus in Vienna 
today.  The services will be partially or completely unavailable, 
including www.r-project.org, ftp uploads for packages and the web 
submission form. We expect services to be available again this evening 
European time.

The CRAN team


From justintalbot at gmail.com  Mon Jul 15 07:02:34 2013
From: justintalbot at gmail.com (Justin Talbot)
Date: Sun, 14 Jul 2013 22:02:34 -0700
Subject: [Rd] pmatch inconsistency
Message-ID: <CALLn38Myehc2C+eLuNkphrWRg2cmX2HMxc5wT0OgoQ5dnmVqnA@mail.gmail.com>

The pmatch help (see also section 4.3.2 in the R Language Definition)
claims that pmatch with duplicates.ok=FALSE provides the same
functionality as R's argument matching algorithm, modulo how empty
strings are matched.

Here's an undocumented inconsistency between pmatch and R's argument
matching algorithm:

> sessionInfo()
R version 3.0.1 (2013-05-16)
Platform: x86_64-apple-darwin10.8.0 (64-bit)

locale:
[1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8

attached base packages:
[1] stats     graphics  grDevices utils     datasets  methods   base

> f <- function(abc, ax) 1
> f(ab=1,a=10)
Error in f(ab = 1, a = 10) :
  formal argument "abc" matched by multiple actual arguments

> pmatch(c('ab','a'), c('abc', 'ax'), duplicates.ok=FALSE)
[1] 1 2

That is, pmatch doesn't consider ambiguous partial matches to be an
error if the ambiguity is resolved by an earlier partial match.

This leads to an order dependency in pmatch that doesn't happen with
argument matching:

> pmatch(c('ab','a'), c('abc', 'ax'), duplicates.ok=FALSE)
[1] 1 2

> pmatch(c('a','ab'), c('abc', 'ax'), duplicates.ok=FALSE)
[1] NA 1

It would be great if this were documented.

At a higher level, is pmatch intended to be the same as the argument
matching algorithm or is it just supposed to be "close"?

Justin


From murdoch.duncan at gmail.com  Mon Jul 15 13:47:08 2013
From: murdoch.duncan at gmail.com (Duncan Murdoch)
Date: Mon, 15 Jul 2013 07:47:08 -0400
Subject: [Rd] pmatch inconsistency
In-Reply-To: <CALLn38Myehc2C+eLuNkphrWRg2cmX2HMxc5wT0OgoQ5dnmVqnA@mail.gmail.com>
References: <CALLn38Myehc2C+eLuNkphrWRg2cmX2HMxc5wT0OgoQ5dnmVqnA@mail.gmail.com>
Message-ID: <51E3E13C.6010002@gmail.com>

On 13-07-15 1:02 AM, Justin Talbot wrote:
> The pmatch help (see also section 4.3.2 in the R Language Definition)
> claims that pmatch with duplicates.ok=FALSE provides the same
> functionality as R's argument matching algorithm, modulo how empty
> strings are matched.
>
> Here's an undocumented inconsistency between pmatch and R's argument
> matching algorithm:
>
>> sessionInfo()
> R version 3.0.1 (2013-05-16)
> Platform: x86_64-apple-darwin10.8.0 (64-bit)
>
> locale:
> [1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8
>
> attached base packages:
> [1] stats     graphics  grDevices utils     datasets  methods   base
>
>> f <- function(abc, ax) 1
>> f(ab=1,a=10)
> Error in f(ab = 1, a = 10) :
>    formal argument "abc" matched by multiple actual arguments
>
>> pmatch(c('ab','a'), c('abc', 'ax'), duplicates.ok=FALSE)
> [1] 1 2
>
> That is, pmatch doesn't consider ambiguous partial matches to be an
> error if the ambiguity is resolved by an earlier partial match.
>
> This leads to an order dependency in pmatch that doesn't happen with
> argument matching:
>
>> pmatch(c('ab','a'), c('abc', 'ax'), duplicates.ok=FALSE)
> [1] 1 2
>
>> pmatch(c('a','ab'), c('abc', 'ax'), duplicates.ok=FALSE)
> [1] NA 1
>
> It would be great if this were documented.

Or should it be made consistent?  Is there any value in keeping the 
current pmatch behaviour different from the argument matching?

>
> At a higher level, is pmatch intended to be the same as the argument
> matching algorithm or is it just supposed to be "close"?

I would take that line in the documentation to say it is intended to be 
the same except for empty strings.

Duncan Murdoch


From mayer at iiasa.ac.at  Mon Jul 15 17:05:54 2013
From: mayer at iiasa.ac.at (MAYER Hans)
Date: Mon, 15 Jul 2013 17:05:54 +0200
Subject: [Rd] linking modules - add needed libraries
Message-ID: <AEB6E9807EE5E04BA2F4A6CD4CE9DB198EA0FAD97B@rhine.iiasa.ac.at>


Hi

Hopefully this is the correct mailing list. Sorry if not.

I am still fighting to install "shiny" on Solaris OS. For this I need the package 'httpuv' which makes troubles during linking.
R version 3.0.1 (2013-05-16) -- "Good Sport" is working well.

The compile steps result is below. I have more a general question. The problem is clear: 
The symbol "sendfile64" is not found as the necessary library is not linked. 
The file which should be linked is /lib/libsendfile.so 
Therefore an additional string  "-lsendfile" should be added anywhere in a "Makefile" or another file. 
But where ? 
This should be done for the test routine and then for the final linking step of the package.
Any help would be nice.

Kind regards
Hans


# R CMD INSTALL  .
* installing to library '/usr/local/lib/R/library'
* installing *source* package 'httpuv' ...
** libs
gmake --directory=libuv \
        CC="gcc -std=gnu99" CFLAGS="-g -O2  -fPIC" AR="ar" RANLIB="ranlib" \
        libuv.a
gmake[1]: Entering directory `/h/u036sumida/mayer/10/httpuv/src/libuv'
gmake[1]: `libuv.a' is up to date.
gmake[1]: Leaving directory `/h/u036sumida/mayer/10/httpuv/src/libuv'
gmake --directory=http-parser \
        CC="gcc -std=gnu99" CFLAGS="-g -O2  -fPIC" AR="ar" RANLIB="ranlib" \
        http_parser.o
gmake[1]: Entering directory `/h/u036sumida/mayer/10/httpuv/src/http-parser'
gmake[1]: `http_parser.o' is up to date.
gmake[1]: Leaving directory `/h/u036sumida/mayer/10/httpuv/src/http-parser'
(cd sha1 && gcc -std=gnu99 -g -O2  -fPIC -c sha1.c -o sha1.o)
In file included from sha1.c:89:
sha1.h:27:22: warning: no newline at end of file
sha1.c:375:18: warning: no newline at end of file
(cd base64 && g++ -g -O2  -fPIC -c base64.cpp -o base64.o)
g++ -shared -L/usr/local/lib -L/usr/sfw/lib -L/opt/sfw/lib -L/opt/solarisstudio12.3/lib -L/opt/solarisstudio12.3/prod/lib -o httpuv.so RcppExports.o filedatasource-unix.o filedatasource-win.o http.o httpuv.o set_invalid_parameter.o uvutil.o websockets.o /usr/local/lib/R/library/Rcpp/lib/libRcpp.a ./libuv/libuv.a ./http-parser/http_parser.o ./sha1/sha1.o ./base64/base64.o
installing to /usr/local/lib/R/library/httpuv/libs
** R
** demo
** preparing package for lazy loading
** help
*** installing help indices
** building package indices
** testing if installed package can be loaded
Error in dyn.load(file, DLLpath = DLLpath, ...) :
  unable to load shared object '/usr/local/lib/R/library/httpuv/libs/httpuv.so':
  ld.so.1: R: fatal: relocation error: file /usr/local/lib/R/library/httpuv/libs/httpuv.so: symbol sendfile64: referenced symbol not found
Error: loading failed
Execution halted
ERROR: loading failed
* removing '/usr/local/lib/R/library/httpuv'

From edd at debian.org  Mon Jul 15 17:14:59 2013
From: edd at debian.org (Dirk Eddelbuettel)
Date: Mon, 15 Jul 2013 10:14:59 -0500
Subject: [Rd] linking modules - add needed libraries
In-Reply-To: <AEB6E9807EE5E04BA2F4A6CD4CE9DB198EA0FAD97B@rhine.iiasa.ac.at>
References: <AEB6E9807EE5E04BA2F4A6CD4CE9DB198EA0FAD97B@rhine.iiasa.ac.at>
Message-ID: <20964.4595.129935.157781@max.nulle.part>


On 15 July 2013 at 17:05, MAYER Hans wrote:
| 
| Hi
| 
| Hopefully this is the correct mailing list. Sorry if not.
| 
| I am still fighting to install "shiny" on Solaris OS. For this I need the package 'httpuv' which makes troubles during linking.
| R version 3.0.1 (2013-05-16) -- "Good Sport" is working well.
| 
| The compile steps result is below. I have more a general question. The problem is clear: 
| The symbol "sendfile64" is not found as the necessary library is not linked. 
| The file which should be linked is /lib/libsendfile.so 
| Therefore an additional string  "-lsendfile" should be added anywhere in a "Makefile" or another file. 
| But where ? 

Try the file src/Makevars as the Fine Manual (TM) "Writing R Extensions" clearly suggests.

Dirk

| This should be done for the test routine and then for the final linking step of the package.
| Any help would be nice.
| 
| Kind regards
| Hans
| 
| 
| # R CMD INSTALL  .
| * installing to library '/usr/local/lib/R/library'
| * installing *source* package 'httpuv' ...
| ** libs
| gmake --directory=libuv \
|         CC="gcc -std=gnu99" CFLAGS="-g -O2  -fPIC" AR="ar" RANLIB="ranlib" \
|         libuv.a
| gmake[1]: Entering directory `/h/u036sumida/mayer/10/httpuv/src/libuv'
| gmake[1]: `libuv.a' is up to date.
| gmake[1]: Leaving directory `/h/u036sumida/mayer/10/httpuv/src/libuv'
| gmake --directory=http-parser \
|         CC="gcc -std=gnu99" CFLAGS="-g -O2  -fPIC" AR="ar" RANLIB="ranlib" \
|         http_parser.o
| gmake[1]: Entering directory `/h/u036sumida/mayer/10/httpuv/src/http-parser'
| gmake[1]: `http_parser.o' is up to date.
| gmake[1]: Leaving directory `/h/u036sumida/mayer/10/httpuv/src/http-parser'
| (cd sha1 && gcc -std=gnu99 -g -O2  -fPIC -c sha1.c -o sha1.o)
| In file included from sha1.c:89:
| sha1.h:27:22: warning: no newline at end of file
| sha1.c:375:18: warning: no newline at end of file
| (cd base64 && g++ -g -O2  -fPIC -c base64.cpp -o base64.o)
| g++ -shared -L/usr/local/lib -L/usr/sfw/lib -L/opt/sfw/lib -L/opt/solarisstudio12.3/lib -L/opt/solarisstudio12.3/prod/lib -o httpuv.so RcppExports.o filedatasource-unix.o filedatasource-win.o http.o httpuv.o set_invalid_parameter.o uvutil.o websockets.o /usr/local/lib/R/library/Rcpp/lib/libRcpp.a ./libuv/libuv.a ./http-parser/http_parser.o ./sha1/sha1.o ./base64/base64.o
| installing to /usr/local/lib/R/library/httpuv/libs
| ** R
| ** demo
| ** preparing package for lazy loading
| ** help
| *** installing help indices
| ** building package indices
| ** testing if installed package can be loaded
| Error in dyn.load(file, DLLpath = DLLpath, ...) :
|   unable to load shared object '/usr/local/lib/R/library/httpuv/libs/httpuv.so':
|   ld.so.1: R: fatal: relocation error: file /usr/local/lib/R/library/httpuv/libs/httpuv.so: symbol sendfile64: referenced symbol not found
| Error: loading failed
| Execution halted
| ERROR: loading failed
| * removing '/usr/local/lib/R/library/httpuv'
| ______________________________________________
| R-devel at r-project.org mailing list
| https://stat.ethz.ch/mailman/listinfo/r-devel

-- 
Dirk Eddelbuettel | edd at debian.org | http://dirk.eddelbuettel.com


From ripley at stats.ox.ac.uk  Mon Jul 15 17:16:18 2013
From: ripley at stats.ox.ac.uk (Prof Brian Ripley)
Date: Mon, 15 Jul 2013 16:16:18 +0100
Subject: [Rd] linking modules - add needed libraries
In-Reply-To: <AEB6E9807EE5E04BA2F4A6CD4CE9DB198EA0FAD97B@rhine.iiasa.ac.at>
References: <AEB6E9807EE5E04BA2F4A6CD4CE9DB198EA0FAD97B@rhine.iiasa.ac.at>
Message-ID: <51E41242.6080609@stats.ox.ac.uk>

What did the maintainer say when you asked him (see the posting guide)?

But invocations such as -lsendfile should be in PKG_LIBS (see 'Writing R 
Extensions').


On 15/07/2013 16:05, MAYER Hans wrote:
>
> Hi
>
> Hopefully this is the correct mailing list. Sorry if not.
>
> I am still fighting to install "shiny" on Solaris OS. For this I need the package 'httpuv' which makes troubles during linking.
> R version 3.0.1 (2013-05-16) -- "Good Sport" is working well.
>
> The compile steps result is below. I have more a general question. The problem is clear:
> The symbol "sendfile64" is not found as the necessary library is not linked.
> The file which should be linked is /lib/libsendfile.so
> Therefore an additional string  "-lsendfile" should be added anywhere in a "Makefile" or another file.
> But where ?
> This should be done for the test routine and then for the final linking step of the package.
> Any help would be nice.
>
> Kind regards
> Hans
>
>
> # R CMD INSTALL  .
> * installing to library '/usr/local/lib/R/library'
> * installing *source* package 'httpuv' ...
> ** libs
> gmake --directory=libuv \
>          CC="gcc -std=gnu99" CFLAGS="-g -O2  -fPIC" AR="ar" RANLIB="ranlib" \
>          libuv.a
> gmake[1]: Entering directory `/h/u036sumida/mayer/10/httpuv/src/libuv'
> gmake[1]: `libuv.a' is up to date.
> gmake[1]: Leaving directory `/h/u036sumida/mayer/10/httpuv/src/libuv'
> gmake --directory=http-parser \
>          CC="gcc -std=gnu99" CFLAGS="-g -O2  -fPIC" AR="ar" RANLIB="ranlib" \
>          http_parser.o
> gmake[1]: Entering directory `/h/u036sumida/mayer/10/httpuv/src/http-parser'
> gmake[1]: `http_parser.o' is up to date.
> gmake[1]: Leaving directory `/h/u036sumida/mayer/10/httpuv/src/http-parser'
> (cd sha1 && gcc -std=gnu99 -g -O2  -fPIC -c sha1.c -o sha1.o)
> In file included from sha1.c:89:
> sha1.h:27:22: warning: no newline at end of file
> sha1.c:375:18: warning: no newline at end of file
> (cd base64 && g++ -g -O2  -fPIC -c base64.cpp -o base64.o)
> g++ -shared -L/usr/local/lib -L/usr/sfw/lib -L/opt/sfw/lib -L/opt/solarisstudio12.3/lib -L/opt/solarisstudio12.3/prod/lib -o httpuv.so RcppExports.o filedatasource-unix.o filedatasource-win.o http.o httpuv.o set_invalid_parameter.o uvutil.o websockets.o /usr/local/lib/R/library/Rcpp/lib/libRcpp.a ./libuv/libuv.a ./http-parser/http_parser.o ./sha1/sha1.o ./base64/base64.o
> installing to /usr/local/lib/R/library/httpuv/libs
> ** R
> ** demo
> ** preparing package for lazy loading
> ** help
> *** installing help indices
> ** building package indices
> ** testing if installed package can be loaded
> Error in dyn.load(file, DLLpath = DLLpath, ...) :
>    unable to load shared object '/usr/local/lib/R/library/httpuv/libs/httpuv.so':
>    ld.so.1: R: fatal: relocation error: file /usr/local/lib/R/library/httpuv/libs/httpuv.so: symbol sendfile64: referenced symbol not found
> Error: loading failed
> Execution halted
> ERROR: loading failed
> * removing '/usr/local/lib/R/library/httpuv'
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>


-- 
Brian D. Ripley,                  ripley at stats.ox.ac.uk
Professor of Applied Statistics,  http://www.stats.ox.ac.uk/~ripley/
University of Oxford,             Tel:  +44 1865 272861 (self)
1 South Parks Road,                     +44 1865 272866 (PA)
Oxford OX1 3TG, UK                Fax:  +44 1865 272595


From hwborchers at gmail.com  Tue Jul 16 13:55:15 2013
From: hwborchers at gmail.com (Hans W Borchers)
Date: Tue, 16 Jul 2013 13:55:15 +0200
Subject: [Rd] Problem following an R bug fix to integrate()
Message-ID: <CAML4n3P5tekMoE+k3287tm+BDy5DqqwK=bXx4j1shwEuAPeyQw@mail.gmail.com>

I have been told by the CRAN administrators that the following code generated
an error on 64-bit Fedora Linux (gcc, clang) and on Solaris machines (sparc,
x86), but runs well on all other systems):

    > fn <- function(x, y) ifelse(x^2 + y^2 <= 1, 1 - x^2 - y^2, 0)

    > tol <- 1.5e-8
    > fy <- function(x) integrate(function(y) fn(x, y), 0, 1,
                            subdivisions = 300, rel.tol = tol)$value
    > Fy <- Vectorize(fy)

    > xa <- -1; xb <- 1
    > Q  <- integrate(Fy, xa, xb,
                subdivisions = 300, rel.tol = tol)$value

    Error in integrate(Fy, xa, xb, subdivisions = 300, rel.tol = tol) :
    roundoff error was detected

Obviously, this realizes a double integration, split up into two 1-dimensional
integrations, and the result shall be pi/4. I wonder what a 'roundoff error'
means in this situation.

In my package, this test worked well, w/o error or warnings, since July 2011,
on Windows, Max OS X, and Ubuntu Linux. I have no chance to test it on one of
the above mentioned systems. Of course, I can simply disable these tests, but
I would not like to do so w/o good reason.

If there is a connection to a bug fix to integrate(), with NEWS item

    "integrate() reverts to the pre-2.12.0 behaviour.  (PR#15219)",

then I do not understand what this pre-2.12.0 behavior really means.

Thanks for any help or a hint to what shall be changed.
Hans W Borchers

PS:
This kind of tricky definition in function 'fn' has caused some discussion on
this list in July 2009. I still think it should be allowed to proceed in this
way.


From edd at debian.org  Tue Jul 16 19:11:09 2013
From: edd at debian.org (Dirk Eddelbuettel)
Date: Tue, 16 Jul 2013 12:11:09 -0500
Subject: [Rd] unmapped memory core dump with pure R program?
In-Reply-To: <CAPr7RtV6QEn77=bNtqDPsiMufdDXo-ty5jQAuHn56a_HcvLZbA@mail.gmail.com>
References: <CAPr7RtXJMjJ6m8T+LNLQ4_+-ggDXLiXZPLxRJujHSxV5MyYCnQ@mail.gmail.com>
	<20962.30029.747172.113244@max.nulle.part>
	<CAPr7RtVobwHEj20X2JqG7DHWs_VyEgAeLfX7V0jp4sn=Dk36Hw@mail.gmail.com>
	<E085E85D-5C7C-438B-85CE-2503B1572775@r-project.org>
	<CAPr7RtUtH37P5e0W8YcFsaJA5VTj3+MhHFJCVpzcwSbzHdsiDg@mail.gmail.com>
	<20962.53175.179933.607310@max.nulle.part>
	<CAPr7RtV7uwiKDwDJQQJPnupAO3z1e3HTA6s53AQC2-GVeiFPYw@mail.gmail.com>
	<20962.62970.540933.46729@max.nulle.part>
	<CAPr7RtV6QEn77=bNtqDPsiMufdDXo-ty5jQAuHn56a_HcvLZbA@mail.gmail.com>
Message-ID: <20965.32429.704278.440595@max.nulle.part>


On 14 July 2013 at 12:57, ivo welch wrote:
| hi dirk---it is not 100% clear what causes it. ?it is a segfault. ?the bug
| does not show up at the head command. ?it shows up at a different place, but
| removing an unrelated print(head()) command means the bug does not appear
| later.
| 
| it weighs in at about 280MB. ?I will make it available to simon on Monday,
| after verifying first that I can replicate it on another computer in my office.

So what ever happened?  Replicable or not?

Dirk

-- 
Dirk Eddelbuettel | edd at debian.org | http://dirk.eddelbuettel.com


From 184523479 at qq.com  Tue Jul 16 20:07:34 2013
From: 184523479 at qq.com (ge11232002)
Date: Tue, 16 Jul 2013 11:07:34 -0700 (PDT)
Subject: [Rd] Read a text file into R with .Call()
In-Reply-To: <AD0DBA87-8945-49E4-A3FE-792AD33FD4E3@r-project.org>
References: <tencent_1039840B6669131118B8D10B@qq.com>
	<tencent_541DA6027020FB783AB8DC58@qq.com>
	<AD0DBA87-8945-49E4-A3FE-792AD33FD4E3@r-project.org>
Message-ID: <1373998039892-4671704.post@n4.nabble.com>

Hi Simon,

I am sorry that for some unknown reasons I did not receive your reply on 27
June 2013 in my email boxs. I just randomly searched and read it today on
Nabble.
Thank you for your explaination and it really helps me to understand how the
memory allocation works.

One more short questions is
If the "resident" memory from top or ps can be misleading, then how can I
detect the memory leak happening in the .Call()? Is the leaked memory
visible in the gc()? or it can be detected by mallinfo() from your mallinfo
package?

Thanks again!
Ge
 



--
View this message in context: http://r.789695.n4.nabble.com/Read-a-text-file-into-R-with-Call-tp4670443p4671704.html
Sent from the R devel mailing list archive at Nabble.com.


From bbolker at gmail.com  Wed Jul 17 04:34:33 2013
From: bbolker at gmail.com (Ben Bolker)
Date: Tue, 16 Jul 2013 22:34:33 -0400
Subject: [Rd] SweaveParseOptions, quoted commas, and knitr vignettes
Message-ID: <51E602B9.5090609@ufl.edu>


  I haven't figured it out entirely, but it looks like there are a
couple of small glitches with knitr-based vignettes and
SweaveParseOptions.

  I posted the tarball of a package with a knitr vignette with (as far
as I can tell) everything properly coded in the DESCRIPTION file
(VignetteBuilder: knitr, Suggests: knitr) and the vignette itself
(%\VignetteEngine{knitr::knitr}).  When Windows users (who may not
have had knitr installed) tried to install it from source, they
encountered an error from utils:::SweaveParseOptions .
  The proximal source of the problem was a chunk header of the form
<<chunkName,fig.cap="Something with a comma in it, ...">>= ; this is
legal knitr, but doesn't make it through SweaveParseOptions because
the function just splits on a comma without trying to check for
nesting within quotation marks.
  The second problem is that for some reason SweaveParseOptions was
being called at all -- presumably it's looking at Rnw files, not
knowing that they're really in knitr rather than Sweave format.

  I'm sorry for the speculation and lack of reproducible examples
here, but I thought it was worth commenting on.  If people are
interested I can try to follow it up with a mini-package (one of the
hard parts is that I can't actually reproduce the error myself -- I
don't know if it's specific to Windows, or to not having knitr
installed, or both ...)

  Ben Bolker


From xie at yihui.name  Wed Jul 17 06:18:07 2013
From: xie at yihui.name (Yihui Xie)
Date: Tue, 16 Jul 2013 21:18:07 -0700
Subject: [Rd] SweaveParseOptions, quoted commas, and knitr vignettes
In-Reply-To: <51E602B9.5090609@ufl.edu>
References: <51E602B9.5090609@ufl.edu>
Message-ID: <CANROs4e8-U=KhSV5j+JO8s5c3kwAXN9fSJRZC0hbdvaVdChvGQ@mail.gmail.com>

Here is my understanding:

Package vignettes are built through tools::buildVignettes, which first
calls tools::pkgVignettes() to list the vignettes. Due to
loadVignetteBuilder(dir, mustwork = FALSE) in pkgVignettes(), the
vignette engine falls back to utils::Sweave if the specified vignette
builder was not found (in your case, knitr). Then because Sweave
cannot process knitr's Rnw files, the real problem goes under the
disguise of SweaveParseOptions(), which actually came from mustwork =
FALSE.

I think we discussed this issue (offline) before the non-Sweave engine
was introduced in R 3.0.0: if knitr is only required for package
vignettes, should it be specified in Depends/Imports or Suggests? The
former will make sure the vignettes always work because knitr will
always be installed, but if the user installs a prebuilt binary
package from, say, CRAN, he/she does not really need knitr to be
installed, as R will not rebuild the vignettes when installing the
binary packages. Later we decided to go with Suggests only, so that at
least R CMD check will work.

Two approaches to solve the problem:

1. either you Depends on knitr,
2. or make install.packages() also install VignetteBuilder (specified
in DESCRIPTION) when the user chooses to install from source, i.e.
install.packages(..., type = 'source')

I guess 1 is not a good choice.

Or if you want a less cryptic error message, put a code chunk like
this in your Rnw document:

<<setup, include=FALSE>>=
library(knitr)
@

I think R will emit an error that knitr was not installed, which can
be more helpful for the users to realize the real problem.

Regards,
Yihui
--
Yihui Xie <xieyihui at gmail.com>
Phone: 206-667-4385 Web: http://yihui.name
Fred Hutchinson Cancer Research Center, Seattle


On Tue, Jul 16, 2013 at 7:34 PM, Ben Bolker <bbolker at gmail.com> wrote:
>
>   I haven't figured it out entirely, but it looks like there are a
> couple of small glitches with knitr-based vignettes and
> SweaveParseOptions.
>
>   I posted the tarball of a package with a knitr vignette with (as far
> as I can tell) everything properly coded in the DESCRIPTION file
> (VignetteBuilder: knitr, Suggests: knitr) and the vignette itself
> (%\VignetteEngine{knitr::knitr}).  When Windows users (who may not
> have had knitr installed) tried to install it from source, they
> encountered an error from utils:::SweaveParseOptions .
>   The proximal source of the problem was a chunk header of the form
> <<chunkName,fig.cap="Something with a comma in it, ...">>= ; this is
> legal knitr, but doesn't make it through SweaveParseOptions because
> the function just splits on a comma without trying to check for
> nesting within quotation marks.
>   The second problem is that for some reason SweaveParseOptions was
> being called at all -- presumably it's looking at Rnw files, not
> knowing that they're really in knitr rather than Sweave format.
>
>   I'm sorry for the speculation and lack of reproducible examples
> here, but I thought it was worth commenting on.  If people are
> interested I can try to follow it up with a mini-package (one of the
> hard parts is that I can't actually reproduce the error myself -- I
> don't know if it's specific to Windows, or to not having knitr
> installed, or both ...)
>
>   Ben Bolker
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From bbolker at gmail.com  Wed Jul 17 15:10:48 2013
From: bbolker at gmail.com (Ben Bolker)
Date: Wed, 17 Jul 2013 13:10:48 +0000
Subject: [Rd] SweaveParseOptions, quoted commas, and knitr vignettes
References: <51E602B9.5090609@ufl.edu>
	<CANROs4e8-U=KhSV5j+JO8s5c3kwAXN9fSJRZC0hbdvaVdChvGQ@mail.gmail.com>
Message-ID: <loom.20130717T150919-176@post.gmane.org>

Yihui Xie <xie <at> yihui.name> writes:

> 
  [snip]

  thanks, that all makes sense.

> Two approaches to solve the problem:
> 
> 1. either you Depends on knitr,
> 2. or make install.packages() also install VignetteBuilder (specified
> in DESCRIPTION) when the user chooses to install from source, i.e.
> install.packages(..., type = 'source')
> 
  [snip]

> Or if you want a less cryptic error message, put a code chunk like
> this in your Rnw document:
> 
> <<setup, include=FALSE>>=
> library(knitr)
>  <at> 
> 
> I think R will emit an error that knitr was not installed, which can
> be more helpful for the users to realize the real problem.

  I like the third option here. It might be nice if this were documented
in the "Writing R extensions" manual, although I guess I shouldn't complain
until I volunteer to write a documentation patch ...

  Ben


From rowe at muxspace.com  Wed Jul 17 16:58:03 2013
From: rowe at muxspace.com (Brian Rowe)
Date: Wed, 17 Jul 2013 10:58:03 -0400
Subject: [Rd] On the mechanics of function evaluation and argument matching
Message-ID: <3727EA1A-F2BE-4C1D-9CBB-2BA6F8ED76A7@muxspace.com>

An embedded and charset-unspecified text was scrubbed...
Name: not available
URL: <https://stat.ethz.ch/pipermail/r-devel/attachments/20130717/99436f19/attachment.pl>

From michael.weylandt at gmail.com  Wed Jul 17 17:05:11 2013
From: michael.weylandt at gmail.com (R. Michael Weylandt)
Date: Wed, 17 Jul 2013 10:05:11 -0500
Subject: [Rd] On the mechanics of function evaluation and argument
	matching
In-Reply-To: <3727EA1A-F2BE-4C1D-9CBB-2BA6F8ED76A7@muxspace.com>
References: <3727EA1A-F2BE-4C1D-9CBB-2BA6F8ED76A7@muxspace.com>
Message-ID: <CAAmySGOCr5ieKer23OS6hYsyRbKY_WmY-3aK7_N5sBaehwzzNQ@mail.gmail.com>

On Wed, Jul 17, 2013 at 9:58 AM, Brian Rowe <rowe at muxspace.com> wrote:
> Hello,
>
> Section 4.3.2 of the R language definition [1] states that argument matching to formal arguments is a 3-pass process to match arguments to a function. An error is generated if any (supplied) arguments are left unmatched. Interestingly the opposite is not true as any unmatched formals does not generate an error.
>
>> f <- function(x,y,z) x
>> f(2)
> [1] 2
>> f(2,3)
> [1] 2
>
> Since R is lazily evaluated, I understand that it is not an error for an unused argument to be unassigned. However, it is surprising to me that a function need not be called with all its required arguments. I guess in this situation technically "required arguments" means required and referenced arguments.
>
>> f()
> Error in f() : argument "x" is missing, with no default
>
> Can anyone shed light on the reasoning for this design choice?

I'm not sure I can, but I'd look around at how the missing() function is used.

Cheers,
MW


From rowe at muxspace.com  Wed Jul 17 17:12:53 2013
From: rowe at muxspace.com (Brian Rowe)
Date: Wed, 17 Jul 2013 11:12:53 -0400
Subject: [Rd] On the mechanics of function evaluation and argument
	matching
In-Reply-To: <CAAmySGOCr5ieKer23OS6hYsyRbKY_WmY-3aK7_N5sBaehwzzNQ@mail.gmail.com>
References: <3727EA1A-F2BE-4C1D-9CBB-2BA6F8ED76A7@muxspace.com>
	<CAAmySGOCr5ieKer23OS6hYsyRbKY_WmY-3aK7_N5sBaehwzzNQ@mail.gmail.com>
Message-ID: <5CC4DF09-7D40-4A0D-BCA4-75C2CEF7E82A@muxspace.com>

Thanks for the lead. Given the example in ?missing though, wouldn't it be safer to explicitly define a default value of NULL:

myplot <- function(x, y=NULL) {
  if(is.null(y)) {
    y <- x
    x <- 1:length(y)
  }
  plot(x, y)
}



On Jul 17, 2013, at 11:05 AM, "R. Michael Weylandt" <michael.weylandt at gmail.com> wrote:

> On Wed, Jul 17, 2013 at 9:58 AM, Brian Rowe <rowe at muxspace.com> wrote:
>> Hello,
>> 
>> Section 4.3.2 of the R language definition [1] states that argument matching to formal arguments is a 3-pass process to match arguments to a function. An error is generated if any (supplied) arguments are left unmatched. Interestingly the opposite is not true as any unmatched formals does not generate an error.
>> 
>>> f <- function(x,y,z) x
>>> f(2)
>> [1] 2
>>> f(2,3)
>> [1] 2
>> 
>> Since R is lazily evaluated, I understand that it is not an error for an unused argument to be unassigned. However, it is surprising to me that a function need not be called with all its required arguments. I guess in this situation technically "required arguments" means required and referenced arguments.
>> 
>>> f()
>> Error in f() : argument "x" is missing, with no default
>> 
>> Can anyone shed light on the reasoning for this design choice?
> 
> I'm not sure I can, but I'd look around at how the missing() function is used.
> 
> Cheers,
> MW


From bbolker at gmail.com  Wed Jul 17 19:20:56 2013
From: bbolker at gmail.com (Ben Bolker)
Date: Wed, 17 Jul 2013 17:20:56 +0000
Subject: [Rd]
	=?utf-8?q?On_the_mechanics_of_function_evaluation_and_argume?=
	=?utf-8?q?nt=09matching?=
References: <3727EA1A-F2BE-4C1D-9CBB-2BA6F8ED76A7@muxspace.com>
	<CAAmySGOCr5ieKer23OS6hYsyRbKY_WmY-3aK7_N5sBaehwzzNQ@mail.gmail.com>
	<5CC4DF09-7D40-4A0D-BCA4-75C2CEF7E82A@muxspace.com>
Message-ID: <loom.20130717T191900-141@post.gmane.org>

Brian Rowe <rowe <at> muxspace.com> writes:

> 
> Thanks for the lead. Given the example in ?missing though,
>  wouldn't it be safer to explicitly define a
> default value of NULL:
> 
> myplot <- function(x, y=NULL) {
>   if(is.null(y)) {
>     y <- x
>     x <- 1:length(y)
>   }
>   plot(x, y)
> }
> 

 [snip]

 In my opinion the missing() functionality can indeed be
fragile (for example, I don't know how I can manipulate an
existing call to make an argument be 'missing' when it was
previously 'non-empty') and using an explicit NULL is often
a good idea.  This makes the documentation a tiny bit less
wieldy if you have lots of parameters ...


From plummerm at iarc.fr  Wed Jul 17 19:37:10 2013
From: plummerm at iarc.fr (Martyn Plummer)
Date: Wed, 17 Jul 2013 17:37:10 +0000
Subject: [Rd] Problem following an R bug fix to integrate()
In-Reply-To: <CAML4n3P5tekMoE+k3287tm+BDy5DqqwK=bXx4j1shwEuAPeyQw@mail.gmail.com>
References: <CAML4n3P5tekMoE+k3287tm+BDy5DqqwK=bXx4j1shwEuAPeyQw@mail.gmail.com>
Message-ID: <1374082630.2272.43.camel@braque.iarc.fr>

On Tue, 2013-07-16 at 13:55 +0200, Hans W Borchers wrote:
> I have been told by the CRAN administrators that the following code generated
> an error on 64-bit Fedora Linux (gcc, clang) and on Solaris machines (sparc,
> x86), but runs well on all other systems):
> 
>     > fn <- function(x, y) ifelse(x^2 + y^2 <= 1, 1 - x^2 - y^2, 0)
> 
>     > tol <- 1.5e-8
>     > fy <- function(x) integrate(function(y) fn(x, y), 0, 1,
>                             subdivisions = 300, rel.tol = tol)$value
>     > Fy <- Vectorize(fy)
> 
>     > xa <- -1; xb <- 1
>     > Q  <- integrate(Fy, xa, xb,
>                 subdivisions = 300, rel.tol = tol)$value
> 
>     Error in integrate(Fy, xa, xb, subdivisions = 300, rel.tol = tol) :
>     roundoff error was detected
> 
> Obviously, this realizes a double integration, split up into two 1-dimensional
> integrations, and the result shall be pi/4. I wonder what a 'roundoff error'
> means in this situation.
> 
> In my package, this test worked well, w/o error or warnings, since July 2011,
> on Windows, Max OS X, and Ubuntu Linux. I have no chance to test it on one of
> the above mentioned systems. Of course, I can simply disable these tests, but
> I would not like to do so w/o good reason.
> 
> If there is a connection to a bug fix to integrate(), with NEWS item
> 
>     "integrate() reverts to the pre-2.12.0 behaviour.  (PR#15219)",
> 
> then I do not understand what this pre-2.12.0 behavior really means.
> 
> Thanks for any help or a hint to what shall be changed.

You can see the bug report here:

https://bugs.r-project.org/bugzilla3/show_bug.cgi?id=15219

It concerns the behaviour of integrate with a small error tolerance.
>From 2.12.0 to 3.0.1 integrate was not working correctly with small
error tolerance values, in the sense that small values did not improve
accuracy and the accuracy was mis-reported.

The tolerance in your example (1.5e-8) is considerably smaller than the
default (1.2e-4). My guess is that the rounding error always existed but
was not detected due to the bug.  You might try a larger tolerance. I
have tested your example and increasing the tolerance to 1.5e-7 removes
the error.

Martyn


> Hans W Borchers
> 
> PS:
> This kind of tricky definition in function 'fn' has caused some discussion on
> this list in July 2009. I still think it should be allowed to proceed in this
> way.
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel

-----------------------------------------------------------------------
This message and its attachments are strictly confidenti...{{dropped:8}}


From peter.meilstrup at gmail.com  Wed Jul 17 20:35:12 2013
From: peter.meilstrup at gmail.com (Peter Meilstrup)
Date: Wed, 17 Jul 2013 11:35:12 -0700
Subject: [Rd] On the mechanics of function evaluation and argument
	matching
In-Reply-To: <loom.20130717T191900-141@post.gmane.org>
References: <3727EA1A-F2BE-4C1D-9CBB-2BA6F8ED76A7@muxspace.com>
	<CAAmySGOCr5ieKer23OS6hYsyRbKY_WmY-3aK7_N5sBaehwzzNQ@mail.gmail.com>
	<5CC4DF09-7D40-4A0D-BCA4-75C2CEF7E82A@muxspace.com>
	<loom.20130717T191900-141@post.gmane.org>
Message-ID: <CAJoaRhZd7fDwdet_vnPt2XRdCsRgbRbAwW0Q1_MZ7ikz+G2H4Q@mail.gmail.com>

An embedded and charset-unspecified text was scrubbed...
Name: not available
URL: <https://stat.ethz.ch/pipermail/r-devel/attachments/20130717/7d082bf3/attachment.pl>

From rowe at muxspace.com  Wed Jul 17 21:14:13 2013
From: rowe at muxspace.com (Brian Rowe)
Date: Wed, 17 Jul 2013 15:14:13 -0400
Subject: [Rd] On the mechanics of function evaluation and argument
	matching
In-Reply-To: <CAJoaRhZd7fDwdet_vnPt2XRdCsRgbRbAwW0Q1_MZ7ikz+G2H4Q@mail.gmail.com>
References: <3727EA1A-F2BE-4C1D-9CBB-2BA6F8ED76A7@muxspace.com>
	<CAAmySGOCr5ieKer23OS6hYsyRbKY_WmY-3aK7_N5sBaehwzzNQ@mail.gmail.com>
	<5CC4DF09-7D40-4A0D-BCA4-75C2CEF7E82A@muxspace.com>
	<loom.20130717T191900-141@post.gmane.org>
	<CAJoaRhZd7fDwdet_vnPt2XRdCsRgbRbAwW0Q1_MZ7ikz+G2H4Q@mail.gmail.com>
Message-ID: <511CC385-7CDE-4BDA-A1A4-AC8D9E703DB6@muxspace.com>

I agree that failing fast is a good principle. My initial point led the other way though, i.e. any unmatched formal arguments without default values should be handled in one of two ways:

1. Fail the function call. This is what most non-functional languages do e.g. Python
>>> def f(x,y,z): x
...
>>> f(2)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
TypeError: f() takes exactly 3 arguments (1 given)

2. Perform partial application, like some functional languages e.g. Haskell
f :: Int -> Int -> Int -> Int
f x y z = x

*Main> let a = f 2
*Main> :t a
a :: Int -> Int -> Int

Otherwise if an argument is truly optional, I don't see why a default value cannot be assigned to the formal argument when defining the function (excepting the edge cases you pointed out earlier).

Brian


On Jul 17, 2013, at 2:35 PM, Peter Meilstrup <peter.meilstrup at gmail.com> wrote:

> On Wed, Jul 17, 2013 at 10:20 AM, Ben Bolker <bbolker at gmail.com> wrote:
> 
>> Brian Rowe <rowe <at> muxspace.com> writes:
>> 
>>> 
>>> Thanks for the lead. Given the example in ?missing though,
>>> wouldn't it be safer to explicitly define a
>>> default value of NULL:
>>> 
>>> myplot <- function(x, y=NULL) {
>>>  if(is.null(y)) {
>>>    y <- x
>>>    x <- 1:length(y)
>>>  }
>>>  plot(x, y)
>>> }
>>> 
>> 
>> [snip]
>> 
>> In my opinion the missing() functionality can indeed be
>> fragile (for example, I don't know how I can manipulate an
>> existing call to make an argument be 'missing' when it was
>> previously 'non-empty')
> 
> 
> Like so:
> 
>> thecall <- quote(x[i,j])
>> thecall[[3]] <- quote(expr=)
>> thecall
> x[, j]
> 
> 
>> and using an explicit NULL is often
>> a good idea.  This makes the documentation a tiny bit less
>> wieldy if you have lots of parameters ...
> 
> 
> I could certainly imagine a variant of R in which missing and NULL are
> unified, and NULL is the default for any binding that exists but was not
> given a value. I would probably prefer it on the grounds of being smaller
> and more consistent.  (At the C implementation level, R_MissingArg and
> R_NilValue are just two parallel uses of the null object pattern with
> different behavior, which is a bit silly)
> 
> But one advantage the missing value behavior can have is that it "fails
> early", i.e. it generates an error closer to where a function wants to use
> a value it was not provided, rather than "failing late," where a NULL
> propagates though your data and you have to do more debugging work to find
> out where it came from. This kind of fragility can be a good thing as it's
> easier to debug problems that happen closer to the point of failure.
> 
> For instance,
> 
>> myplot <- function(y, x=1:length(y)) plot(x,y)
>> myplot()
> Error in plot(x, y) (from #1) :
>  error in evaluating the argument 'x' in selecting a method for function
> 'plot': Error in length(y) (from #1) : 'y' is missing
> 
> I didn't think about what myplot should do with no arguments. As it turns
> out it is an error, as R refuses to pass a missing value along to length()
> or plot(), which is reasonable.
> 
> Compare with a default-NULL version.
>> myplot <- function(y=NULL, x=1:length(y)) plot(x,y)
>> myplot()
> 
> Instead of failing early and generating a stack trace pointing you at the
> problem, myplot() now generates a graph with points at (0,0) and (1,1) --
> most surprising! This is because R happily forwards NULL to length() and
> plot() where it refused to earlier. In more complicated code nulls can pass
> along several layers before causing problems, making those problems more of
> a headache to debug.
> 
> Peter
> 
> 	[[alternative HTML version deleted]]
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From HodgessE at uhd.edu  Thu Jul 18 08:45:20 2013
From: HodgessE at uhd.edu (Hodgess, Erin)
Date: Thu, 18 Jul 2013 06:45:20 +0000
Subject: [Rd] question about Makeconf and nvcc/CUDA
Message-ID: <FF9DB805FC41CC4E95825A50F680630217A25E2C@columbia.uhd.campus>

An embedded and charset-unspecified text was scrubbed...
Name: not available
URL: <https://stat.ethz.ch/pipermail/r-devel/attachments/20130718/85084211/attachment.pl>

From ripley at stats.ox.ac.uk  Thu Jul 18 09:44:32 2013
From: ripley at stats.ox.ac.uk (Prof Brian Ripley)
Date: Thu, 18 Jul 2013 08:44:32 +0100
Subject: [Rd] question about Makeconf and nvcc/CUDA
In-Reply-To: <FF9DB805FC41CC4E95825A50F680630217A25E2C@columbia.uhd.campus>
References: <FF9DB805FC41CC4E95825A50F680630217A25E2C@columbia.uhd.campus>
Message-ID: <51E79CE0.1050507@stats.ox.ac.uk>

On 18/07/2013 07:45, Hodgess, Erin wrote:
> Dear R development:
>
>
>
> I'm not sure if this is the appropriate list, but it's a start.
>
>
>
> I would like to put together a package which contains a CUDA program on Windows 7.  I believe that it has to do with the Makeconf file in the etc directory.

That message is just that you have not set up Rtools fully.  As it says,
set CYGWIN=nodosfilewarning in your environment.  See ?D.3 in the 
R-admin manual, e.g. 
http://cran.r-project.org/doc/manuals/r-release/R-admin.html#The-command-line-tools 
.

We can see nothing from what you supplied, as it was not a build in 
clean sources.



>
>
> But when I just use the nvcc with the shared option, I can use the dyn.load command, but when I use the is.loaded function, it shows FALSE.
>
>
>
>
>
>
>
> Here are the results of the check command:
>
>
>
> c:\PROGRA~1\R\R-3.0.1\bin\i386>R CMD check cudasize
> R CMD check cudasize
> * using log directory 'c:/PROGRA~1/R/R-3.0.1/bin/i386/cudasize.Rcheck'
> * using R version 3.0.1 (2013-05-16)
> * using platform: i386-w64-mingw32 (32-bit)
> * using session charset: ISO8859-1
> * checking for file 'cudasize/DESCRIPTION' ... OK
> * checking extension type ... Package
> * this is package 'cudasize' version '1.0'
> * checking package namespace information ... OK
> * checking package dependencies ... OK
> * checking if this is a source package ... OK
> * checking if there is a namespace ... OK
> * checking for executable files ... OK
> * checking for hidden files and directories ... OK
> * checking for portable file names ... OK
> * checking whether package 'cudasize' can be installed ... ERROR
> Installation failed.
> See 'c:/PROGRA~1/R/R-3.0.1/bin/i386/cudasize.Rcheck/00install.out' for details.
>
> And the 00install.out file:
>
> * installing *source* package 'cudasize' ...
>
> ** libs
>
>
>
> *** arch - i386
>
> cygwin warning:
>    MS-DOS style path detected: c:/PROGRA~1/R/R-30~1.1/etc/i386/Makeconf
>    Preferred POSIX equivalent is: /cygdrive/c/PROGRA~1/R/R-30~1.1/etc/i386/Makeconf
>    CYGWIN environment variable option "nodosfilewarning" turns off this warning.
>    Consult the user's guide for more details about POSIX paths:
>      http://cygwin.com/cygwin-ug-net/using.html#using-pathnames
> cygwin warning:
>    MS-DOS style path detected: c:/PROGRA~1/R/R-30~1.1/etc/i386/Makeconf
>    Preferred POSIX equivalent is: /cygdrive/c/PROGRA~1/R/R-30~1.1/etc/i386/Makeconf
>    CYGWIN environment variable option "nodosfilewarning" turns off this warning.
>    Consult the user's guide for more details about POSIX paths:
>      http://cygwin.com/cygwin-ug-net/using.html#using-pathnames
> make: `symbols.rds' is up to date.
> ERROR: compilation failed for package 'cudasize'
>
> * removing 'c:/PROGRA~1/R/R-3.0.1/bin/i386/cudasize.Rcheck/cudasize'
>
>
>
> I've been experimenting with the Makeconf file, but to no avail.
>
>
>
> Does anyone have any suggestions, please?
>
>
>
> Thanks,
>
> Erin
>
>
>
> 	[[alternative HTML version deleted]]
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>


-- 
Brian D. Ripley,                  ripley at stats.ox.ac.uk
Professor of Applied Statistics,  http://www.stats.ox.ac.uk/~ripley/
University of Oxford,             Tel:  +44 1865 272861 (self)
1 South Parks Road,                     +44 1865 272866 (PA)
Oxford OX1 3TG, UK                Fax:  +44 1865 272595


From JRMHosking at gmail.com  Wed Jul 17 16:38:55 2013
From: JRMHosking at gmail.com (J. R. M. Hosking)
Date: Wed, 17 Jul 2013 10:38:55 -0400
Subject: [Rd] Problem following an R bug fix to integrate()
In-Reply-To: <CAML4n3P5tekMoE+k3287tm+BDy5DqqwK=bXx4j1shwEuAPeyQw@mail.gmail.com>
References: <CAML4n3P5tekMoE+k3287tm+BDy5DqqwK=bXx4j1shwEuAPeyQw@mail.gmail.com>
Message-ID: <ks6a9q$il9$1@ger.gmane.org>

On 2013-07-16 07:55, Hans W Borchers wrote:
> I have been told by the CRAN administrators that the following code generated
> an error on 64-bit Fedora Linux (gcc, clang) and on Solaris machines (sparc,
> x86), but runs well on all other systems):
>
>      >  fn<- function(x, y) ifelse(x^2 + y^2<= 1, 1 - x^2 - y^2, 0)
>
>      >  tol<- 1.5e-8
>      >  fy<- function(x) integrate(function(y) fn(x, y), 0, 1,
>                              subdivisions = 300, rel.tol = tol)$value
>      >  Fy<- Vectorize(fy)
>
>      >  xa<- -1; xb<- 1
>      >  Q<- integrate(Fy, xa, xb,
>                  subdivisions = 300, rel.tol = tol)$value
>
>      Error in integrate(Fy, xa, xb, subdivisions = 300, rel.tol = tol) :
>      roundoff error was detected
>
> Obviously, this realizes a double integration, split up into two 1-dimensional
> integrations, and the result shall be pi/4. I wonder what a 'roundoff error'
> means in this situation.
>
> In my package, this test worked well, w/o error or warnings, since July 2011,
> on Windows, Max OS X, and Ubuntu Linux. I have no chance to test it on one of
> the above mentioned systems. Of course, I can simply disable these tests, but
> I would not like to do so w/o good reason.
>
> If there is a connection to a bug fix to integrate(), with NEWS item
>
>      "integrate() reverts to the pre-2.12.0 behaviour.  (PR#15219)",
>
> then I do not understand what this pre-2.12.0 behavior really means.
>
> Thanks for any help or a hint to what shall be changed.
> Hans W Borchers
>
> PS:
> This kind of tricky definition in function 'fn' has caused some discussion on
> this list in July 2009. I still think it should be allowed to proceed in this
> way.

Short answer: use a larger value of 'rel.tol' for the outer integral
than for the inner integral.

Using R 2.11.1 on Windows:

 > fn <- function(x, y) ifelse(x^2 + y^2 <= 1, 1 - x^2 - y^2, 0)
 > tol <- 1.5e-8
 > fy <- function(x) integrate(function(y) fn(x, y), 0, 1,
           subdivisions = 300, rel.tol = tol)$value
 > Fy <- Vectorize(fy)
 > xa <- -1; xb <- 1
 > Q  <- integrate(Fy, xa, xb,
           subdivisions = 300, rel.tol = tol)$value
Error in integrate(Fy, xa, xb, subdivisions = 300, rel.tol = tol) :
   roundoff error was detected

Now increase 'rel.tol' in the outer integral:

 > Q  <- integrate(Fy, xa, xb,
           subdivisions = 300, rel.tol = tol*10)$value
 > Q - pi/4
[1] -1.233257e-07

Longer answer: Fy, the integrand of the outer integral, is in effect
computed with noise added to it that is of the order of magnitude of
the 'rel.tol' of the inner integral; this noise prevents the outer
integral from attaining relative accuracy of this magnitude or smaller.
The version of integrate() in use since R 2.12.0 did not accurately
reproduce the computations in the Fortran routines (in the QUADPACK
package) on which it was based, and in consequence failed to detect this
situation.  Reversion to the R 2.11.1 version of integrate() restores
concordance with the Fortran routines and correctly diagnoses the
inability of the outer integral to achieve the requested accuracy.
(And, btw, the Q computed above is actually closer to pi/4 than you
will have been getting with the code that "worked well".)


J. R. M. Hosking


From hwborchers at gmail.com  Wed Jul 17 21:35:39 2013
From: hwborchers at gmail.com (Hans W Borchers)
Date: Wed, 17 Jul 2013 21:35:39 +0200
Subject: [Rd] Problem following an R bug fix to integrate()
In-Reply-To: <1374082630.2272.43.camel@braque.iarc.fr>
References: <CAML4n3P5tekMoE+k3287tm+BDy5DqqwK=bXx4j1shwEuAPeyQw@mail.gmail.com>
	<1374082630.2272.43.camel@braque.iarc.fr>
Message-ID: <CAML4n3OT5FhJjY8Y+NBu4s2F2moL1VrBDGz7YMp=V=v49bdwoA@mail.gmail.com>

Thanks for the help.

What bothers me is that it works on most systems and does not work on
some more 'exotic' systems -- though it should work everywhere however
small the user chooses the tolerance (with some warnings, maybe).

I decided I will apply my own integration routines in this example as
they appear to work more reliably.

Hans Werner


On Wed, Jul 17, 2013 at 7:37 PM, Martyn Plummer <plummerm at iarc.fr> wrote:
> On Tue, 2013-07-16 at 13:55 +0200, Hans W Borchers wrote:
>> I have been told by the CRAN administrators that the following code generated
>> an error on 64-bit Fedora Linux (gcc, clang) and on Solaris machines (sparc,
>> x86), but runs well on all other systems):
>>
>>     > fn <- function(x, y) ifelse(x^2 + y^2 <= 1, 1 - x^2 - y^2, 0)
>>
>>     > tol <- 1.5e-8
>>     > fy <- function(x) integrate(function(y) fn(x, y), 0, 1,
>>                             subdivisions = 300, rel.tol = tol)$value
>>     > Fy <- Vectorize(fy)
>>
>>     > xa <- -1; xb <- 1
>>     > Q  <- integrate(Fy, xa, xb,
>>                 subdivisions = 300, rel.tol = tol)$value
>>
>>     Error in integrate(Fy, xa, xb, subdivisions = 300, rel.tol = tol) :
>>     roundoff error was detected
>>
>> Obviously, this realizes a double integration, split up into two 1-dimensional
>> integrations, and the result shall be pi/4. I wonder what a 'roundoff error'
>> means in this situation.
>>
>> In my package, this test worked well, w/o error or warnings, since July 2011,
>> on Windows, Max OS X, and Ubuntu Linux. I have no chance to test it on one of
>> the above mentioned systems. Of course, I can simply disable these tests, but
>> I would not like to do so w/o good reason.
>>
>> If there is a connection to a bug fix to integrate(), with NEWS item
>>
>>     "integrate() reverts to the pre-2.12.0 behaviour.  (PR#15219)",
>>
>> then I do not understand what this pre-2.12.0 behavior really means.
>>
>> Thanks for any help or a hint to what shall be changed.
>
> You can see the bug report here:
>
> https://bugs.r-project.org/bugzilla3/show_bug.cgi?id=15219
>
> It concerns the behaviour of integrate with a small error tolerance.
> From 2.12.0 to 3.0.1 integrate was not working correctly with small
> error tolerance values, in the sense that small values did not improve
> accuracy and the accuracy was mis-reported.
>
> The tolerance in your example (1.5e-8) is considerably smaller than the
> default (1.2e-4). My guess is that the rounding error always existed but
> was not detected due to the bug.  You might try a larger tolerance. I
> have tested your example and increasing the tolerance to 1.5e-7 removes
> the error.
>
> Martyn
>
>
>> Hans W Borchers
>>
>> PS:
>> This kind of tricky definition in function 'fn' has caused some discussion on
>> this list in July 2009. I still think it should be allowed to proceed in this
>> way.
>>
>> ______________________________________________
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel
>
> -----------------------------------------------------------------------
> This message and its attachments are strictly confiden...{{dropped:8}}


From HodgessE at uhd.edu  Thu Jul 18 14:45:26 2013
From: HodgessE at uhd.edu (Hodgess, Erin)
Date: Thu, 18 Jul 2013 12:45:26 +0000
Subject: [Rd] question about Makeconf and nvcc/CUDA
In-Reply-To: <51E79CE0.1050507@stats.ox.ac.uk>
References: <FF9DB805FC41CC4E95825A50F680630217A25E2C@columbia.uhd.campus>,
	<51E79CE0.1050507@stats.ox.ac.uk>
Message-ID: <FF9DB805FC41CC4E95825A50F680630217A25F94@columbia.uhd.campus>

Now let's try again.  I set up the CYGWIN environment command as kindly suggested by Prof. Ripley.

Here are my next steps:

R CMD build cudasize
* checking for file 'cudasize/DESCRIPTION' ... OK
* preparing 'cudasize':
* checking DESCRIPTION meta-information ... OK
* cleaning src
Warning: C:/Users/erin/AppData/Local/Temp/RtmpOWOS4q/Rbuilda8820822194/cudasize/man/f1.Rd:33: unexpected '{'
Warning: C:/Users/erin/AppData/Local/Temp/RtmpOWOS4q/Rbuilda8820822194/cudasize/man/f1.Rd:37: unexpected '}'
* checking for LF line-endings in source and make files
* checking for empty or unneeded directories
* building 'cudasize_1.0.tar.gz'


c:\PROGRA~1\R\R-3.0.1\bin\i386>R CMD check cudasize_1.0.tar.gz 
R CMD check cudasize_1.0.tar.gz 
* using log directory 'c:/PROGRA~1/R/R-3.0.1/bin/i386/cudasize.Rcheck'
* using R version 3.0.1 (2013-05-16)
* using platform: i386-w64-mingw32 (32-bit)
* using session charset: ISO8859-1
* checking for file 'cudasize/DESCRIPTION' ... OK
* checking extension type ... Package
* this is package 'cudasize' version '1.0'
* checking package namespace information ... OK
* checking package dependencies ... OK
* checking if this is a source package ... WARNING
Subdirectory 'src' contains:
  cuda4.cu
These are unlikely file names for src files.
* checking if there is a namespace ... OK
* checking for executable files ... OK
* checking for hidden files and directories ... OK
* checking for portable file names ... OK
* checking whether package 'cudasize' can be installed ... ERROR
Installation failed.
See 'c:/PROGRA~1/R/R-3.0.1/bin/i386/cudasize.Rcheck/00install.out' for details.

And the 00install.out file is:
* installing *source* package 'cudasize' ...
** libs

*** arch - i386
ERROR: compilation failed for package 'cudasize'
* removing 'c:/PROGRA~1/R/R-3.0.1/bin/i386/cudasize.Rcheck/cudasize'

So it doesn't seem that CUDA is  working here.  However, if I compile cuda4.cu from the command line, it works fine, as seen here:

nvcc -m32 --shared -o cuda4.dll cuda4.cu
 nvcc -m32 --shared -o cuda4.dll cuda4.cu
cuda4.cu
tmpxft_000013d4_00000000-5_cuda4.cudafe1.gpu
tmpxft_000013d4_00000000-10_cuda4.cudafe2.gpu
cuda4.cu
tmpxft_000013d4_00000000-5_cuda4.cudafe1.cpp
tmpxft_000013d4_00000000-15_cuda4.ii

So that is my situation.

This is Windows 7, R version 3.0.1
Thanks,
Erin

________________________________________
From: r-devel-bounces at r-project.org [r-devel-bounces at r-project.org] on behalf of Prof Brian Ripley [ripley at stats.ox.ac.uk]
Sent: Thursday, July 18, 2013 2:44 AM
To: r-devel at r-project.org
Subject: Re: [Rd] question about Makeconf and nvcc/CUDA

On 18/07/2013 07:45, Hodgess, Erin wrote:
> Dear R development:
>
>
>
> I'm not sure if this is the appropriate list, but it's a start.
>
>
>
> I would like to put together a package which contains a CUDA program on Windows 7.  I believe that it has to do with the Makeconf file in the etc directory.

That message is just that you have not set up Rtools fully.  As it says,
set CYGWIN=nodosfilewarning in your environment.  See ?D.3 in the
R-admin manual, e.g.
http://cran.r-project.org/doc/manuals/r-release/R-admin.html#The-command-line-tools
.

We can see nothing from what you supplied, as it was not a build in
clean sources.



>
>
> But when I just use the nvcc with the shared option, I can use the dyn.load command, but when I use the is.loaded function, it shows FALSE.
>
>
>
>
>
>
>
> Here are the results of the check command:
>
>
>
> c:\PROGRA~1\R\R-3.0.1\bin\i386>R CMD check cudasize
> R CMD check cudasize
> * using log directory 'c:/PROGRA~1/R/R-3.0.1/bin/i386/cudasize.Rcheck'
> * using R version 3.0.1 (2013-05-16)
> * using platform: i386-w64-mingw32 (32-bit)
> * using session charset: ISO8859-1
> * checking for file 'cudasize/DESCRIPTION' ... OK
> * checking extension type ... Package
> * this is package 'cudasize' version '1.0'
> * checking package namespace information ... OK
> * checking package dependencies ... OK
> * checking if this is a source package ... OK
> * checking if there is a namespace ... OK
> * checking for executable files ... OK
> * checking for hidden files and directories ... OK
> * checking for portable file names ... OK
> * checking whether package 'cudasize' can be installed ... ERROR
> Installation failed.
> See 'c:/PROGRA~1/R/R-3.0.1/bin/i386/cudasize.Rcheck/00install.out' for details.
>
> And the 00install.out file:
>
> * installing *source* package 'cudasize' ...
>
> ** libs
>
>
>
> *** arch - i386
>
> cygwin warning:
>    MS-DOS style path detected: c:/PROGRA~1/R/R-30~1.1/etc/i386/Makeconf
>    Preferred POSIX equivalent is: /cygdrive/c/PROGRA~1/R/R-30~1.1/etc/i386/Makeconf
>    CYGWIN environment variable option "nodosfilewarning" turns off this warning.
>    Consult the user's guide for more details about POSIX paths:
>      http://cygwin.com/cygwin-ug-net/using.html#using-pathnames
> cygwin warning:
>    MS-DOS style path detected: c:/PROGRA~1/R/R-30~1.1/etc/i386/Makeconf
>    Preferred POSIX equivalent is: /cygdrive/c/PROGRA~1/R/R-30~1.1/etc/i386/Makeconf
>    CYGWIN environment variable option "nodosfilewarning" turns off this warning.
>    Consult the user's guide for more details about POSIX paths:
>      http://cygwin.com/cygwin-ug-net/using.html#using-pathnames
> make: `symbols.rds' is up to date.
> ERROR: compilation failed for package 'cudasize'
>
> * removing 'c:/PROGRA~1/R/R-3.0.1/bin/i386/cudasize.Rcheck/cudasize'
>
>
>
> I've been experimenting with the Makeconf file, but to no avail.
>
>
>
> Does anyone have any suggestions, please?
>
>
>
> Thanks,
>
> Erin
>
>
>
>       [[alternative HTML version deleted]]
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>


--
Brian D. Ripley,                  ripley at stats.ox.ac.uk
Professor of Applied Statistics,  http://www.stats.ox.ac.uk/~ripley/
University of Oxford,             Tel:  +44 1865 272861 (self)
1 South Parks Road,                     +44 1865 272866 (PA)
Oxford OX1 3TG, UK                Fax:  +44 1865 272595

______________________________________________
R-devel at r-project.org mailing list
https://stat.ethz.ch/mailman/listinfo/r-devel


From ripley at stats.ox.ac.uk  Thu Jul 18 14:53:56 2013
From: ripley at stats.ox.ac.uk (Prof Brian Ripley)
Date: Thu, 18 Jul 2013 13:53:56 +0100
Subject: [Rd] question about Makeconf and nvcc/CUDA
In-Reply-To: <FF9DB805FC41CC4E95825A50F680630217A25F94@columbia.uhd.campus>
References: <FF9DB805FC41CC4E95825A50F680630217A25E2C@columbia.uhd.campus>,
	<51E79CE0.1050507@stats.ox.ac.uk>
	<FF9DB805FC41CC4E95825A50F680630217A25F94@columbia.uhd.campus>
Message-ID: <51E7E564.9000104@stats.ox.ac.uk>

You will need a src/Makevars.win to get a .cu file to compile.  It is 
not a known extension: see ?1.1.4 of 'Writing R Extensions'

Most likely you need something like

cudasize.dll:
	nvcc -m32 --shared -o $@ cuda4.cu

in Makevars.win.

Also, heed the advice about trying R CMD INSTALL before R CMD check.


On 18/07/2013 13:45, Hodgess, Erin wrote:
> Now let's try again.  I set up the CYGWIN environment command as kindly suggested by Prof. Ripley.
>
> Here are my next steps:
>
> R CMD build cudasize
> * checking for file 'cudasize/DESCRIPTION' ... OK
> * preparing 'cudasize':
> * checking DESCRIPTION meta-information ... OK
> * cleaning src
> Warning: C:/Users/erin/AppData/Local/Temp/RtmpOWOS4q/Rbuilda8820822194/cudasize/man/f1.Rd:33: unexpected '{'
> Warning: C:/Users/erin/AppData/Local/Temp/RtmpOWOS4q/Rbuilda8820822194/cudasize/man/f1.Rd:37: unexpected '}'
> * checking for LF line-endings in source and make files
> * checking for empty or unneeded directories
> * building 'cudasize_1.0.tar.gz'
>
>
> c:\PROGRA~1\R\R-3.0.1\bin\i386>R CMD check cudasize_1.0.tar.gz
> R CMD check cudasize_1.0.tar.gz
> * using log directory 'c:/PROGRA~1/R/R-3.0.1/bin/i386/cudasize.Rcheck'
> * using R version 3.0.1 (2013-05-16)
> * using platform: i386-w64-mingw32 (32-bit)
> * using session charset: ISO8859-1
> * checking for file 'cudasize/DESCRIPTION' ... OK
> * checking extension type ... Package
> * this is package 'cudasize' version '1.0'
> * checking package namespace information ... OK
> * checking package dependencies ... OK
> * checking if this is a source package ... WARNING
> Subdirectory 'src' contains:
>    cuda4.cu
> These are unlikely file names for src files.
> * checking if there is a namespace ... OK
> * checking for executable files ... OK
> * checking for hidden files and directories ... OK
> * checking for portable file names ... OK
> * checking whether package 'cudasize' can be installed ... ERROR
> Installation failed.
> See 'c:/PROGRA~1/R/R-3.0.1/bin/i386/cudasize.Rcheck/00install.out' for details.
>
> And the 00install.out file is:
> * installing *source* package 'cudasize' ...
> ** libs
>
> *** arch - i386
> ERROR: compilation failed for package 'cudasize'
> * removing 'c:/PROGRA~1/R/R-3.0.1/bin/i386/cudasize.Rcheck/cudasize'
>
> So it doesn't seem that CUDA is  working here.  However, if I compile cuda4.cu from the command line, it works fine, as seen here:
>
> nvcc -m32 --shared -o cuda4.dll cuda4.cu
>   nvcc -m32 --shared -o cuda4.dll cuda4.cu
> cuda4.cu
> tmpxft_000013d4_00000000-5_cuda4.cudafe1.gpu
> tmpxft_000013d4_00000000-10_cuda4.cudafe2.gpu
> cuda4.cu
> tmpxft_000013d4_00000000-5_cuda4.cudafe1.cpp
> tmpxft_000013d4_00000000-15_cuda4.ii
>
> So that is my situation.
>
> This is Windows 7, R version 3.0.1
> Thanks,
> Erin
>
> ________________________________________
> From: r-devel-bounces at r-project.org [r-devel-bounces at r-project.org] on behalf of Prof Brian Ripley [ripley at stats.ox.ac.uk]
> Sent: Thursday, July 18, 2013 2:44 AM
> To: r-devel at r-project.org
> Subject: Re: [Rd] question about Makeconf and nvcc/CUDA
>
> On 18/07/2013 07:45, Hodgess, Erin wrote:
>> Dear R development:
>>
>>
>>
>> I'm not sure if this is the appropriate list, but it's a start.
>>
>>
>>
>> I would like to put together a package which contains a CUDA program on Windows 7.  I believe that it has to do with the Makeconf file in the etc directory.
>
> That message is just that you have not set up Rtools fully.  As it says,
> set CYGWIN=nodosfilewarning in your environment.  See ?D.3 in the
> R-admin manual, e.g.
> http://cran.r-project.org/doc/manuals/r-release/R-admin.html#The-command-line-tools
> .
>
> We can see nothing from what you supplied, as it was not a build in
> clean sources.
>
>
>
>>
>>
>> But when I just use the nvcc with the shared option, I can use the dyn.load command, but when I use the is.loaded function, it shows FALSE.
>>
>>
>>
>>
>>
>>
>>
>> Here are the results of the check command:
>>
>>
>>
>> c:\PROGRA~1\R\R-3.0.1\bin\i386>R CMD check cudasize
>> R CMD check cudasize
>> * using log directory 'c:/PROGRA~1/R/R-3.0.1/bin/i386/cudasize.Rcheck'
>> * using R version 3.0.1 (2013-05-16)
>> * using platform: i386-w64-mingw32 (32-bit)
>> * using session charset: ISO8859-1
>> * checking for file 'cudasize/DESCRIPTION' ... OK
>> * checking extension type ... Package
>> * this is package 'cudasize' version '1.0'
>> * checking package namespace information ... OK
>> * checking package dependencies ... OK
>> * checking if this is a source package ... OK
>> * checking if there is a namespace ... OK
>> * checking for executable files ... OK
>> * checking for hidden files and directories ... OK
>> * checking for portable file names ... OK
>> * checking whether package 'cudasize' can be installed ... ERROR
>> Installation failed.
>> See 'c:/PROGRA~1/R/R-3.0.1/bin/i386/cudasize.Rcheck/00install.out' for details.
>>
>> And the 00install.out file:
>>
>> * installing *source* package 'cudasize' ...
>>
>> ** libs
>>
>>
>>
>> *** arch - i386
>>
>> cygwin warning:
>>     MS-DOS style path detected: c:/PROGRA~1/R/R-30~1.1/etc/i386/Makeconf
>>     Preferred POSIX equivalent is: /cygdrive/c/PROGRA~1/R/R-30~1.1/etc/i386/Makeconf
>>     CYGWIN environment variable option "nodosfilewarning" turns off this warning.
>>     Consult the user's guide for more details about POSIX paths:
>>       http://cygwin.com/cygwin-ug-net/using.html#using-pathnames
>> cygwin warning:
>>     MS-DOS style path detected: c:/PROGRA~1/R/R-30~1.1/etc/i386/Makeconf
>>     Preferred POSIX equivalent is: /cygdrive/c/PROGRA~1/R/R-30~1.1/etc/i386/Makeconf
>>     CYGWIN environment variable option "nodosfilewarning" turns off this warning.
>>     Consult the user's guide for more details about POSIX paths:
>>       http://cygwin.com/cygwin-ug-net/using.html#using-pathnames
>> make: `symbols.rds' is up to date.
>> ERROR: compilation failed for package 'cudasize'
>>
>> * removing 'c:/PROGRA~1/R/R-3.0.1/bin/i386/cudasize.Rcheck/cudasize'
>>
>>
>>
>> I've been experimenting with the Makeconf file, but to no avail.
>>
>>
>>
>> Does anyone have any suggestions, please?
>>
>>
>>
>> Thanks,
>>
>> Erin
>>
>>
>>
>>        [[alternative HTML version deleted]]
>>
>> ______________________________________________
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>
>
>
> --
> Brian D. Ripley,                  ripley at stats.ox.ac.uk
> Professor of Applied Statistics,  http://www.stats.ox.ac.uk/~ripley/
> University of Oxford,             Tel:  +44 1865 272861 (self)
> 1 South Parks Road,                     +44 1865 272866 (PA)
> Oxford OX1 3TG, UK                Fax:  +44 1865 272595
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>


-- 
Brian D. Ripley,                  ripley at stats.ox.ac.uk
Professor of Applied Statistics,  http://www.stats.ox.ac.uk/~ripley/
University of Oxford,             Tel:  +44 1865 272861 (self)
1 South Parks Road,                     +44 1865 272866 (PA)
Oxford OX1 3TG, UK                Fax:  +44 1865 272595


From dtemplelang at ucdavis.edu  Thu Jul 18 16:16:35 2013
From: dtemplelang at ucdavis.edu (Duncan Temple Lang)
Date: Thu, 18 Jul 2013 07:16:35 -0700
Subject: [Rd] question about Makeconf and nvcc/CUDA
In-Reply-To: <FF9DB805FC41CC4E95825A50F680630217A25E2C@columbia.uhd.campus>
References: <FF9DB805FC41CC4E95825A50F680630217A25E2C@columbia.uhd.campus>
Message-ID: <51E7F8C3.30000@ucdavis.edu>


Hi Erin

 Glad you are making progress on this with Brian's help.

 I thought I would mention a different approach that might save you some
programming time and actually make the code more flexible at the same time.
Basically, in a high-level language like R, it is nice to keep the code
calling a GPU kernel also high-level rather than writing code in C/C++
to do the transfer of data to and from the CPU and GPU.

Simon's OpenCL package (on CRAN) and the new RCUDA package (www.omegahat.org/RCUDA)
allow us to load and invoke kernels directly from R.
These provide more flexibility for invoking GPU kernels from R than fixed C/C++ code.

RCUDA provides an interface to almost all of the CUDA API and so allows us to transfer
values from R to the GPU and back (in different ways), invoke kernels asynchronously, etc.
I haven't built the package on Windows yet, but may be able to get to that in the next
few days.

With a Windows binary of RCUDA (or OpenCL), you would be able to skip nvcc in your
package by  compiling the kernel code generically so that it contains code for GPUs
with different  capabilities (e.g. sm_20, sm_30, sm_35).

In the last few days, I have also managed to compile very simple R code
directly in R to PTX code that we can load and invoke using RCUDA.
The compilation uses the Rllvm and RLLVMCompile packages. So in the
future, I expect we will be able to compile simple R functions
to native and PTX code.

 D.

On 7/17/13 11:45 PM, Hodgess, Erin wrote:
> Dear R development:
> 
> 
> 
> I'm not sure if this is the appropriate list, but it's a start.
> 
> 
> 
> I would like to put together a package which contains a CUDA program on Windows 7.  I believe that it has to do with the Makeconf file in the etc directory.
> 
> 
> 
> But when I just use the nvcc with the shared option, I can use the dyn.load command, but when I use the is.loaded function, it shows FALSE.
> 
> 
> 
> 
> 
> 
> 
> Here are the results of the check command:
> 
> 
> 
> c:\PROGRA~1\R\R-3.0.1\bin\i386>R CMD check cudasize
> R CMD check cudasize
> * using log directory 'c:/PROGRA~1/R/R-3.0.1/bin/i386/cudasize.Rcheck'
> * using R version 3.0.1 (2013-05-16)
> * using platform: i386-w64-mingw32 (32-bit)
> * using session charset: ISO8859-1
> * checking for file 'cudasize/DESCRIPTION' ... OK
> * checking extension type ... Package
> * this is package 'cudasize' version '1.0'
> * checking package namespace information ... OK
> * checking package dependencies ... OK
> * checking if this is a source package ... OK
> * checking if there is a namespace ... OK
> * checking for executable files ... OK
> * checking for hidden files and directories ... OK
> * checking for portable file names ... OK
> * checking whether package 'cudasize' can be installed ... ERROR
> Installation failed.
> See 'c:/PROGRA~1/R/R-3.0.1/bin/i386/cudasize.Rcheck/00install.out' for details.
> 
> And the 00install.out file:
> 
> * installing *source* package 'cudasize' ...
> 
> ** libs
> 
> 
> 
> *** arch - i386
> 
> cygwin warning:
>   MS-DOS style path detected: c:/PROGRA~1/R/R-30~1.1/etc/i386/Makeconf
>   Preferred POSIX equivalent is: /cygdrive/c/PROGRA~1/R/R-30~1.1/etc/i386/Makeconf
>   CYGWIN environment variable option "nodosfilewarning" turns off this warning.
>   Consult the user's guide for more details about POSIX paths:
>     http://cygwin.com/cygwin-ug-net/using.html#using-pathnames
> cygwin warning:
>   MS-DOS style path detected: c:/PROGRA~1/R/R-30~1.1/etc/i386/Makeconf
>   Preferred POSIX equivalent is: /cygdrive/c/PROGRA~1/R/R-30~1.1/etc/i386/Makeconf
>   CYGWIN environment variable option "nodosfilewarning" turns off this warning.
>   Consult the user's guide for more details about POSIX paths:
>     http://cygwin.com/cygwin-ug-net/using.html#using-pathnames
> make: `symbols.rds' is up to date.
> ERROR: compilation failed for package 'cudasize'
> 
> * removing 'c:/PROGRA~1/R/R-3.0.1/bin/i386/cudasize.Rcheck/cudasize'
> 
> 
> 
> I've been experimenting with the Makeconf file, but to no avail.
> 
> 
> 
> Does anyone have any suggestions, please?
> 
> 
> 
> Thanks,
> 
> Erin
> 
> 
> 
> 	[[alternative HTML version deleted]]
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>


From bodenhofer at bioinf.jku.at  Thu Jul 18 17:13:33 2013
From: bodenhofer at bioinf.jku.at (Ulrich Bodenhofer)
Date: Thu, 18 Jul 2013 17:13:33 +0200
Subject: [Rd] parLapplyLB: Load balancing?
Message-ID: <51E8061D.8020504@bioinf.jku.at>

An embedded and charset-unspecified text was scrubbed...
Name: not available
URL: <https://stat.ethz.ch/pipermail/r-devel/attachments/20130718/3bf4ea7d/attachment.pl>

From HodgessE at uhd.edu  Thu Jul 18 20:01:31 2013
From: HodgessE at uhd.edu (Hodgess, Erin)
Date: Thu, 18 Jul 2013 18:01:31 +0000
Subject: [Rd] question about Makeconf and nvcc/CUDA
In-Reply-To: <51E7F8C3.30000@ucdavis.edu>
References: <FF9DB805FC41CC4E95825A50F680630217A25E2C@columbia.uhd.campus>,
	<51E7F8C3.30000@ucdavis.edu>
Message-ID: <FF9DB805FC41CC4E95825A50F680630217A262DB@columbia.uhd.campus>

Hi again:

Here is another problem that I am having.  Hope this will be the last one.  I really want to see if I can put it together.  Sorry for belaboring the issue.

Well, here is my story:

c:\Program Files\R\R-3.0.1\bin\i386>R CMD build cudasize
R CMD build cudasize
* checking for file 'cudasize/DESCRIPTION' ... OK
* preparing 'cudasize':
* checking DESCRIPTION meta-information ... OK
* cleaning src
Warning: C:/Users/erin/AppData/Local/Temp/RtmpOKsfga/Rbuild22e066bf13fb/cudasize/man/f1.Rd:33: unexpected '{'
Warning: C:/Users/erin/AppData/Local/Temp/RtmpOKsfga/Rbuild22e066bf13fb/cudasize/man/f1.Rd:37: unexpected '}'
* checking for LF line-endings in source and make files
* checking for empty or unneeded directories
* building 'cudasize_1.0.tar.gz'


c:\Program Files\R\R-3.0.1\bin\i386>R CMD INSTALL --no-multiarch cudasize_1.0.tar.gz 
R CMD INSTALL --no-multiarch cudasize_1.0.tar.gz 
* installing to library 'c:/myRlib'
* installing *source* package 'cudasize' ...
** libs
nvcc -m32 --shared -o cuda4.dll cuda4.cu
cuda4.cu
tmpxft_000012fc_00000000-5_cuda4.cudafe1.gpu
tmpxft_000012fc_00000000-10_cuda4.cudafe2.gpu
cuda4.cu
tmpxft_000012fc_00000000-5_cuda4.cudafe1.cpp
tmpxft_000012fc_00000000-15_cuda4.ii
installing to c:/myRlib/cudasize/libs/i386
** R
** preparing package for lazy loading
** help
Warning: C:/Users/erin/AppData/Local/Temp/RtmpKSm696/R.INSTALL7fc517f4e58/cudasize/man/f1.Rd:33: unexpected '{'
Warning: C:/Users/erin/AppData/Local/Temp/RtmpKSm696/R.INSTALL7fc517f4e58/cudasize/man/f1.Rd:37: unexpected '}'
Warning: C:/Users/erin/AppData/Local/Temp/RtmpKSm696/R.INSTALL7fc517f4e58/cudasize/man/f1.Rd:31: All text must be in a section
Warning: C:/Users/erin/AppData/Local/Temp/RtmpKSm696/R.INSTALL7fc517f4e58/cudasize/man/f1.Rd:32: All text must be in a section
Warning: C:/Users/erin/AppData/Local/Temp/RtmpKSm696/R.INSTALL7fc517f4e58/cudasize/man/f1.Rd:34: All text must be in a section
Warning: C:/Users/erin/AppData/Local/Temp/RtmpKSm696/R.INSTALL7fc517f4e58/cudasize/man/f1.Rd:35: All text must be in a section
Warning: C:/Users/erin/AppData/Local/Temp/RtmpKSm696/R.INSTALL7fc517f4e58/cudasize/man/f1.Rd:36: All text must be in a section
*** installing help indices
** building package indices
** testing if installed package can be loaded
* DONE (cudasize)

c:\Program Files\R\R-3.0.1\bin\i386>R --vanilla
R --vanilla

R version 3.0.1 (2013-05-16) -- "Good Sport"
Copyright (C) 2013 The R Foundation for Statistical Computing
Platform: i386-w64-mingw32/i386 (32-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> library(cudasize)
library(cudasize)
> f1
f1
function (x) 
{
    y <- .Call("cuda4", as.character(x))
    return(y)
}
<environment: namespace:cudasize>
> f1(2)
f1(2)
Error in .Call("cuda4", as.character(x)) : 
  "cuda4" not resolved from current namespace (cudasize)
Calls: f1 -> .Call
Execution halted

Here is the Makevars.win file

cuda4.dll:
	nvcc -m32 --shared -o cuda4.dll cuda4.cu

And finally, the program itself:


#include <stdio.h>
#include <cuda.h>
 
// Kernel that executes on the CUDA device
__global__ void square_array(float *a, int N)
{
  int idx = blockIdx.x * blockDim.x + threadIdx.x;
  if (idx<N) a[idx] = a[idx] * a[idx];
}
 
// main routine that executes on the host
void  stuff(int argc, char **argv)
{
  float *a_h, *a_d;  // Pointer to host & device arrays
  int N = atoi(argv[1]);
//  const int N = 10;   Number of elements in arrays
  size_t size = N * sizeof(float);
  a_h = (float *)malloc(size);        // Allocate array on host
  cudaMalloc((void **) &a_d, size);   // Allocate array on device
  // Initialize host array and copy it to CUDA device
  for (int i=0; i<N; i++) a_h[i] = (float)i;
  cudaMemcpy(a_d, a_h, size, cudaMemcpyHostToDevice);
  // Do calculation on device:
  int block_size = 4;
  int n_blocks = N/block_size + (N%block_size == 0 ? 0:1);
  square_array <<< n_blocks, block_size >>> (a_d, N);
  // Retrieve result from device and store it in host array
  cudaMemcpy(a_h, a_d, sizeof(float)*N, cudaMemcpyDeviceToHost);
  // Print results
  for (int i=0; i<N; i++) printf("%d %f\n", i, a_h[i]);
  // Cleanup
  free(a_h); cudaFree(a_d);
}

Any suggestions would be appreciated.

Thanks,
Erin

________________________________________
From: r-devel-bounces at r-project.org [r-devel-bounces at r-project.org] on behalf of Duncan Temple Lang [dtemplelang at ucdavis.edu]
Sent: Thursday, July 18, 2013 9:16 AM
To: r-devel at r-project.org
Subject: Re: [Rd] question about Makeconf and nvcc/CUDA

Hi Erin

 Glad you are making progress on this with Brian's help.

 I thought I would mention a different approach that might save you some
programming time and actually make the code more flexible at the same time.
Basically, in a high-level language like R, it is nice to keep the code
calling a GPU kernel also high-level rather than writing code in C/C++
to do the transfer of data to and from the CPU and GPU.

Simon's OpenCL package (on CRAN) and the new RCUDA package (www.omegahat.org/RCUDA)
allow us to load and invoke kernels directly from R.
These provide more flexibility for invoking GPU kernels from R than fixed C/C++ code.

RCUDA provides an interface to almost all of the CUDA API and so allows us to transfer
values from R to the GPU and back (in different ways), invoke kernels asynchronously, etc.
I haven't built the package on Windows yet, but may be able to get to that in the next
few days.

With a Windows binary of RCUDA (or OpenCL), you would be able to skip nvcc in your
package by  compiling the kernel code generically so that it contains code for GPUs
with different  capabilities (e.g. sm_20, sm_30, sm_35).

In the last few days, I have also managed to compile very simple R code
directly in R to PTX code that we can load and invoke using RCUDA.
The compilation uses the Rllvm and RLLVMCompile packages. So in the
future, I expect we will be able to compile simple R functions
to native and PTX code.

 D.

On 7/17/13 11:45 PM, Hodgess, Erin wrote:
> Dear R development:
>
>
>
> I'm not sure if this is the appropriate list, but it's a start.
>
>
>
> I would like to put together a package which contains a CUDA program on Windows 7.  I believe that it has to do with the Makeconf file in the etc directory.
>
>
>
> But when I just use the nvcc with the shared option, I can use the dyn.load command, but when I use the is.loaded function, it shows FALSE.
>
>
>
>
>
>
>
> Here are the results of the check command:
>
>
>
> c:\PROGRA~1\R\R-3.0.1\bin\i386>R CMD check cudasize
> R CMD check cudasize
> * using log directory 'c:/PROGRA~1/R/R-3.0.1/bin/i386/cudasize.Rcheck'
> * using R version 3.0.1 (2013-05-16)
> * using platform: i386-w64-mingw32 (32-bit)
> * using session charset: ISO8859-1
> * checking for file 'cudasize/DESCRIPTION' ... OK
> * checking extension type ... Package
> * this is package 'cudasize' version '1.0'
> * checking package namespace information ... OK
> * checking package dependencies ... OK
> * checking if this is a source package ... OK
> * checking if there is a namespace ... OK
> * checking for executable files ... OK
> * checking for hidden files and directories ... OK
> * checking for portable file names ... OK
> * checking whether package 'cudasize' can be installed ... ERROR
> Installation failed.
> See 'c:/PROGRA~1/R/R-3.0.1/bin/i386/cudasize.Rcheck/00install.out' for details.
>
> And the 00install.out file:
>
> * installing *source* package 'cudasize' ...
>
> ** libs
>
>
>
> *** arch - i386
>
> cygwin warning:
>   MS-DOS style path detected: c:/PROGRA~1/R/R-30~1.1/etc/i386/Makeconf
>   Preferred POSIX equivalent is: /cygdrive/c/PROGRA~1/R/R-30~1.1/etc/i386/Makeconf
>   CYGWIN environment variable option "nodosfilewarning" turns off this warning.
>   Consult the user's guide for more details about POSIX paths:
>     http://cygwin.com/cygwin-ug-net/using.html#using-pathnames
> cygwin warning:
>   MS-DOS style path detected: c:/PROGRA~1/R/R-30~1.1/etc/i386/Makeconf
>   Preferred POSIX equivalent is: /cygdrive/c/PROGRA~1/R/R-30~1.1/etc/i386/Makeconf
>   CYGWIN environment variable option "nodosfilewarning" turns off this warning.
>   Consult the user's guide for more details about POSIX paths:
>     http://cygwin.com/cygwin-ug-net/using.html#using-pathnames
> make: `symbols.rds' is up to date.
> ERROR: compilation failed for package 'cudasize'
>
> * removing 'c:/PROGRA~1/R/R-3.0.1/bin/i386/cudasize.Rcheck/cudasize'
>
>
>
> I've been experimenting with the Makeconf file, but to no avail.
>
>
>
> Does anyone have any suggestions, please?
>
>
>
> Thanks,
>
> Erin
>
>
>
>       [[alternative HTML version deleted]]
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>

______________________________________________
R-devel at r-project.org mailing list
https://stat.ethz.ch/mailman/listinfo/r-devel


From dtemplelang at ucdavis.edu  Thu Jul 18 20:09:29 2013
From: dtemplelang at ucdavis.edu (Duncan Temple Lang)
Date: Thu, 18 Jul 2013 11:09:29 -0700
Subject: [Rd] question about Makeconf and nvcc/CUDA
In-Reply-To: <FF9DB805FC41CC4E95825A50F680630217A262DB@columbia.uhd.campus>
References: <FF9DB805FC41CC4E95825A50F680630217A25E2C@columbia.uhd.campus>,
	<51E7F8C3.30000@ucdavis.edu>
	<FF9DB805FC41CC4E95825A50F680630217A262DB@columbia.uhd.campus>
Message-ID: <51E82F59.2010902@ucdavis.edu>


Hi Erin

It appears that there is only one file in src that is compile, i.e. cuda4.cu.

That does not contain a routine named cuda4, which is what you are trying to invoke
via the .Call("cuda4") expression.

Instead, it contains two routines - one kernel square_array which runs
on the GPU, and the routine stuff.

To be able to call the stuff() routine from R, you would have to
a)  add
      extern "C"
    before its definition/declaration so that its name is not mangled by nvcc

b)  change its signature so that it can be invoked via a .Call() or alternatively
    a .C().

 I would create another routine that acts as an intermediate routine
called from R that then calls stuff().

This assumes that what you showed us of cuda4.cu is all there is in it.
   D.

On 7/18/13 11:01 AM, Hodgess, Erin wrote:
> Hi again:
> 
> Here is another problem that I am having.  Hope this will be the last one.  I really want to see if I can put it together.  Sorry for belaboring the issue.
> 
> Well, here is my story:
> 
> c:\Program Files\R\R-3.0.1\bin\i386>R CMD build cudasize
> R CMD build cudasize
> * checking for file 'cudasize/DESCRIPTION' ... OK
> * preparing 'cudasize':
> * checking DESCRIPTION meta-information ... OK
> * cleaning src
> Warning: C:/Users/erin/AppData/Local/Temp/RtmpOKsfga/Rbuild22e066bf13fb/cudasize/man/f1.Rd:33: unexpected '{'
> Warning: C:/Users/erin/AppData/Local/Temp/RtmpOKsfga/Rbuild22e066bf13fb/cudasize/man/f1.Rd:37: unexpected '}'
> * checking for LF line-endings in source and make files
> * checking for empty or unneeded directories
> * building 'cudasize_1.0.tar.gz'
> 
> 
> c:\Program Files\R\R-3.0.1\bin\i386>R CMD INSTALL --no-multiarch cudasize_1.0.tar.gz 
> R CMD INSTALL --no-multiarch cudasize_1.0.tar.gz 
> * installing to library 'c:/myRlib'
> * installing *source* package 'cudasize' ...
> ** libs
> nvcc -m32 --shared -o cuda4.dll cuda4.cu
> cuda4.cu
> tmpxft_000012fc_00000000-5_cuda4.cudafe1.gpu
> tmpxft_000012fc_00000000-10_cuda4.cudafe2.gpu
> cuda4.cu
> tmpxft_000012fc_00000000-5_cuda4.cudafe1.cpp
> tmpxft_000012fc_00000000-15_cuda4.ii
> installing to c:/myRlib/cudasize/libs/i386
> ** R
> ** preparing package for lazy loading
> ** help
> Warning: C:/Users/erin/AppData/Local/Temp/RtmpKSm696/R.INSTALL7fc517f4e58/cudasize/man/f1.Rd:33: unexpected '{'
> Warning: C:/Users/erin/AppData/Local/Temp/RtmpKSm696/R.INSTALL7fc517f4e58/cudasize/man/f1.Rd:37: unexpected '}'
> Warning: C:/Users/erin/AppData/Local/Temp/RtmpKSm696/R.INSTALL7fc517f4e58/cudasize/man/f1.Rd:31: All text must be in a section
> Warning: C:/Users/erin/AppData/Local/Temp/RtmpKSm696/R.INSTALL7fc517f4e58/cudasize/man/f1.Rd:32: All text must be in a section
> Warning: C:/Users/erin/AppData/Local/Temp/RtmpKSm696/R.INSTALL7fc517f4e58/cudasize/man/f1.Rd:34: All text must be in a section
> Warning: C:/Users/erin/AppData/Local/Temp/RtmpKSm696/R.INSTALL7fc517f4e58/cudasize/man/f1.Rd:35: All text must be in a section
> Warning: C:/Users/erin/AppData/Local/Temp/RtmpKSm696/R.INSTALL7fc517f4e58/cudasize/man/f1.Rd:36: All text must be in a section
> *** installing help indices
> ** building package indices
> ** testing if installed package can be loaded
> * DONE (cudasize)
> 
> c:\Program Files\R\R-3.0.1\bin\i386>R --vanilla
> R --vanilla
> 
> R version 3.0.1 (2013-05-16) -- "Good Sport"
> Copyright (C) 2013 The R Foundation for Statistical Computing
> Platform: i386-w64-mingw32/i386 (32-bit)
> 
> R is free software and comes with ABSOLUTELY NO WARRANTY.
> You are welcome to redistribute it under certain conditions.
> Type 'license()' or 'licence()' for distribution details.
> 
> R is a collaborative project with many contributors.
> Type 'contributors()' for more information and
> 'citation()' on how to cite R or R packages in publications.
> 
> Type 'demo()' for some demos, 'help()' for on-line help, or
> 'help.start()' for an HTML browser interface to help.
> Type 'q()' to quit R.
> 
>> library(cudasize)
> library(cudasize)
>> f1
> f1
> function (x) 
> {
>     y <- .Call("cuda4", as.character(x))
>     return(y)
> }
> <environment: namespace:cudasize>
>> f1(2)
> f1(2)
> Error in .Call("cuda4", as.character(x)) : 
>   "cuda4" not resolved from current namespace (cudasize)
> Calls: f1 -> .Call
> Execution halted
> 
> Here is the Makevars.win file
> 
> cuda4.dll:
> 	nvcc -m32 --shared -o cuda4.dll cuda4.cu
> 
> And finally, the program itself:
> 
> 
> #include <stdio.h>
> #include <cuda.h>
>  
> // Kernel that executes on the CUDA device
> __global__ void square_array(float *a, int N)
> {
>   int idx = blockIdx.x * blockDim.x + threadIdx.x;
>   if (idx<N) a[idx] = a[idx] * a[idx];
> }
>  
> // main routine that executes on the host
> void  stuff(int argc, char **argv)
> {
>   float *a_h, *a_d;  // Pointer to host & device arrays
>   int N = atoi(argv[1]);
> //  const int N = 10;   Number of elements in arrays
>   size_t size = N * sizeof(float);
>   a_h = (float *)malloc(size);        // Allocate array on host
>   cudaMalloc((void **) &a_d, size);   // Allocate array on device
>   // Initialize host array and copy it to CUDA device
>   for (int i=0; i<N; i++) a_h[i] = (float)i;
>   cudaMemcpy(a_d, a_h, size, cudaMemcpyHostToDevice);
>   // Do calculation on device:
>   int block_size = 4;
>   int n_blocks = N/block_size + (N%block_size == 0 ? 0:1);
>   square_array <<< n_blocks, block_size >>> (a_d, N);
>   // Retrieve result from device and store it in host array
>   cudaMemcpy(a_h, a_d, sizeof(float)*N, cudaMemcpyDeviceToHost);
>   // Print results
>   for (int i=0; i<N; i++) printf("%d %f\n", i, a_h[i]);
>   // Cleanup
>   free(a_h); cudaFree(a_d);
> }
> 
> Any suggestions would be appreciated.
> 
> Thanks,
> Erin
> 
> ________________________________________
> From: r-devel-bounces at r-project.org [r-devel-bounces at r-project.org] on behalf of Duncan Temple Lang [dtemplelang at ucdavis.edu]
> Sent: Thursday, July 18, 2013 9:16 AM
> To: r-devel at r-project.org
> Subject: Re: [Rd] question about Makeconf and nvcc/CUDA
> 
> Hi Erin
> 
>  Glad you are making progress on this with Brian's help.
> 
>  I thought I would mention a different approach that might save you some
> programming time and actually make the code more flexible at the same time.
> Basically, in a high-level language like R, it is nice to keep the code
> calling a GPU kernel also high-level rather than writing code in C/C++
> to do the transfer of data to and from the CPU and GPU.
> 
> Simon's OpenCL package (on CRAN) and the new RCUDA package (www.omegahat.org/RCUDA)
> allow us to load and invoke kernels directly from R.
> These provide more flexibility for invoking GPU kernels from R than fixed C/C++ code.
> 
> RCUDA provides an interface to almost all of the CUDA API and so allows us to transfer
> values from R to the GPU and back (in different ways), invoke kernels asynchronously, etc.
> I haven't built the package on Windows yet, but may be able to get to that in the next
> few days.
> 
> With a Windows binary of RCUDA (or OpenCL), you would be able to skip nvcc in your
> package by  compiling the kernel code generically so that it contains code for GPUs
> with different  capabilities (e.g. sm_20, sm_30, sm_35).
> 
> In the last few days, I have also managed to compile very simple R code
> directly in R to PTX code that we can load and invoke using RCUDA.
> The compilation uses the Rllvm and RLLVMCompile packages. So in the
> future, I expect we will be able to compile simple R functions
> to native and PTX code.
> 
>  D.
> 
> On 7/17/13 11:45 PM, Hodgess, Erin wrote:
>> Dear R development:
>>
>>
>>
>> I'm not sure if this is the appropriate list, but it's a start.
>>
>>
>>
>> I would like to put together a package which contains a CUDA program on Windows 7.  I believe that it has to do with the Makeconf file in the etc directory.
>>
>>
>>
>> But when I just use the nvcc with the shared option, I can use the dyn.load command, but when I use the is.loaded function, it shows FALSE.
>>
>>
>>
>>
>>
>>
>>
>> Here are the results of the check command:
>>
>>
>>
>> c:\PROGRA~1\R\R-3.0.1\bin\i386>R CMD check cudasize
>> R CMD check cudasize
>> * using log directory 'c:/PROGRA~1/R/R-3.0.1/bin/i386/cudasize.Rcheck'
>> * using R version 3.0.1 (2013-05-16)
>> * using platform: i386-w64-mingw32 (32-bit)
>> * using session charset: ISO8859-1
>> * checking for file 'cudasize/DESCRIPTION' ... OK
>> * checking extension type ... Package
>> * this is package 'cudasize' version '1.0'
>> * checking package namespace information ... OK
>> * checking package dependencies ... OK
>> * checking if this is a source package ... OK
>> * checking if there is a namespace ... OK
>> * checking for executable files ... OK
>> * checking for hidden files and directories ... OK
>> * checking for portable file names ... OK
>> * checking whether package 'cudasize' can be installed ... ERROR
>> Installation failed.
>> See 'c:/PROGRA~1/R/R-3.0.1/bin/i386/cudasize.Rcheck/00install.out' for details.
>>
>> And the 00install.out file:
>>
>> * installing *source* package 'cudasize' ...
>>
>> ** libs
>>
>>
>>
>> *** arch - i386
>>
>> cygwin warning:
>>   MS-DOS style path detected: c:/PROGRA~1/R/R-30~1.1/etc/i386/Makeconf
>>   Preferred POSIX equivalent is: /cygdrive/c/PROGRA~1/R/R-30~1.1/etc/i386/Makeconf
>>   CYGWIN environment variable option "nodosfilewarning" turns off this warning.
>>   Consult the user's guide for more details about POSIX paths:
>>     http://cygwin.com/cygwin-ug-net/using.html#using-pathnames
>> cygwin warning:
>>   MS-DOS style path detected: c:/PROGRA~1/R/R-30~1.1/etc/i386/Makeconf
>>   Preferred POSIX equivalent is: /cygdrive/c/PROGRA~1/R/R-30~1.1/etc/i386/Makeconf
>>   CYGWIN environment variable option "nodosfilewarning" turns off this warning.
>>   Consult the user's guide for more details about POSIX paths:
>>     http://cygwin.com/cygwin-ug-net/using.html#using-pathnames
>> make: `symbols.rds' is up to date.
>> ERROR: compilation failed for package 'cudasize'
>>
>> * removing 'c:/PROGRA~1/R/R-3.0.1/bin/i386/cudasize.Rcheck/cudasize'
>>
>>
>>
>> I've been experimenting with the Makeconf file, but to no avail.
>>
>>
>>
>> Does anyone have any suggestions, please?
>>
>>
>>
>> Thanks,
>>
>> Erin
>>
>>
>>
>>       [[alternative HTML version deleted]]
>>
>> ______________________________________________
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>


From HodgessE at uhd.edu  Thu Jul 18 21:46:40 2013
From: HodgessE at uhd.edu (Hodgess, Erin)
Date: Thu, 18 Jul 2013 19:46:40 +0000
Subject: [Rd] question about Makeconf and nvcc/CUDA
In-Reply-To: <51E82F59.2010902@ucdavis.edu>
References: <FF9DB805FC41CC4E95825A50F680630217A25E2C@columbia.uhd.campus>,
	<51E7F8C3.30000@ucdavis.edu>
	<FF9DB805FC41CC4E95825A50F680630217A262DB@columbia.uhd.campus>,
	<51E82F59.2010902@ucdavis.edu>
Message-ID: <FF9DB805FC41CC4E95825A50F680630217A263AC@columbia.uhd.campus>

Hi again.

I put in the extern statement.

However, I'm not sure what you mean by changing the signature, please.  

I changed out the routine name from "stuff" to "cuda4" in the cuda4.cu program.

Still getting:

> library(cudasize)
library(cudasize)

> 

> .C("cuda4",as.character(5))
.C("cuda4",as.character(5))
Error in .C("cuda4", as.character(5)) : 
  C symbol name "cuda4" not in load table
Execution halted

c:\Program Files\R\R-3.0.1\bin\i386>

I still want to keep at it.

Thanks so much for all of your help!!!

Erin

________________________________________
From: Duncan Temple Lang [dtemplelang at ucdavis.edu]
Sent: Thursday, July 18, 2013 1:09 PM
To: Hodgess, Erin
Cc: r-devel at r-project.org
Subject: Re: [Rd] question about Makeconf and nvcc/CUDA

Hi Erin

It appears that there is only one file in src that is compile, i.e. cuda4.cu.

That does not contain a routine named cuda4, which is what you are trying to invoke
via the .Call("cuda4") expression.

Instead, it contains two routines - one kernel square_array which runs
on the GPU, and the routine stuff.

To be able to call the stuff() routine from R, you would have to
a)  add
      extern "C"
    before its definition/declaration so that its name is not mangled by nvcc

b)  change its signature so that it can be invoked via a .Call() or alternatively
    a .C().

 I would create another routine that acts as an intermediate routine
called from R that then calls stuff().

This assumes that what you showed us of cuda4.cu is all there is in it.
   D.

On 7/18/13 11:01 AM, Hodgess, Erin wrote:
> Hi again:
>
> Here is another problem that I am having.  Hope this will be the last one.  I really want to see if I can put it together.  Sorry for belaboring the issue.
>
> Well, here is my story:
>
> c:\Program Files\R\R-3.0.1\bin\i386>R CMD build cudasize
> R CMD build cudasize
> * checking for file 'cudasize/DESCRIPTION' ... OK
> * preparing 'cudasize':
> * checking DESCRIPTION meta-information ... OK
> * cleaning src
> Warning: C:/Users/erin/AppData/Local/Temp/RtmpOKsfga/Rbuild22e066bf13fb/cudasize/man/f1.Rd:33: unexpected '{'
> Warning: C:/Users/erin/AppData/Local/Temp/RtmpOKsfga/Rbuild22e066bf13fb/cudasize/man/f1.Rd:37: unexpected '}'
> * checking for LF line-endings in source and make files
> * checking for empty or unneeded directories
> * building 'cudasize_1.0.tar.gz'
>
>
> c:\Program Files\R\R-3.0.1\bin\i386>R CMD INSTALL --no-multiarch cudasize_1.0.tar.gz
> R CMD INSTALL --no-multiarch cudasize_1.0.tar.gz
> * installing to library 'c:/myRlib'
> * installing *source* package 'cudasize' ...
> ** libs
> nvcc -m32 --shared -o cuda4.dll cuda4.cu
> cuda4.cu
> tmpxft_000012fc_00000000-5_cuda4.cudafe1.gpu
> tmpxft_000012fc_00000000-10_cuda4.cudafe2.gpu
> cuda4.cu
> tmpxft_000012fc_00000000-5_cuda4.cudafe1.cpp
> tmpxft_000012fc_00000000-15_cuda4.ii
> installing to c:/myRlib/cudasize/libs/i386
> ** R
> ** preparing package for lazy loading
> ** help
> Warning: C:/Users/erin/AppData/Local/Temp/RtmpKSm696/R.INSTALL7fc517f4e58/cudasize/man/f1.Rd:33: unexpected '{'
> Warning: C:/Users/erin/AppData/Local/Temp/RtmpKSm696/R.INSTALL7fc517f4e58/cudasize/man/f1.Rd:37: unexpected '}'
> Warning: C:/Users/erin/AppData/Local/Temp/RtmpKSm696/R.INSTALL7fc517f4e58/cudasize/man/f1.Rd:31: All text must be in a section
> Warning: C:/Users/erin/AppData/Local/Temp/RtmpKSm696/R.INSTALL7fc517f4e58/cudasize/man/f1.Rd:32: All text must be in a section
> Warning: C:/Users/erin/AppData/Local/Temp/RtmpKSm696/R.INSTALL7fc517f4e58/cudasize/man/f1.Rd:34: All text must be in a section
> Warning: C:/Users/erin/AppData/Local/Temp/RtmpKSm696/R.INSTALL7fc517f4e58/cudasize/man/f1.Rd:35: All text must be in a section
> Warning: C:/Users/erin/AppData/Local/Temp/RtmpKSm696/R.INSTALL7fc517f4e58/cudasize/man/f1.Rd:36: All text must be in a section
> *** installing help indices
> ** building package indices
> ** testing if installed package can be loaded
> * DONE (cudasize)
>
> c:\Program Files\R\R-3.0.1\bin\i386>R --vanilla
> R --vanilla
>
> R version 3.0.1 (2013-05-16) -- "Good Sport"
> Copyright (C) 2013 The R Foundation for Statistical Computing
> Platform: i386-w64-mingw32/i386 (32-bit)
>
> R is free software and comes with ABSOLUTELY NO WARRANTY.
> You are welcome to redistribute it under certain conditions.
> Type 'license()' or 'licence()' for distribution details.
>
> R is a collaborative project with many contributors.
> Type 'contributors()' for more information and
> 'citation()' on how to cite R or R packages in publications.
>
> Type 'demo()' for some demos, 'help()' for on-line help, or
> 'help.start()' for an HTML browser interface to help.
> Type 'q()' to quit R.
>
>> library(cudasize)
> library(cudasize)
>> f1
> f1
> function (x)
> {
>     y <- .Call("cuda4", as.character(x))
>     return(y)
> }
> <environment: namespace:cudasize>
>> f1(2)
> f1(2)
> Error in .Call("cuda4", as.character(x)) :
>   "cuda4" not resolved from current namespace (cudasize)
> Calls: f1 -> .Call
> Execution halted
>
> Here is the Makevars.win file
>
> cuda4.dll:
>       nvcc -m32 --shared -o cuda4.dll cuda4.cu
>
> And finally, the program itself:
>
>
> #include <stdio.h>
> #include <cuda.h>
>
> // Kernel that executes on the CUDA device
> __global__ void square_array(float *a, int N)
> {
>   int idx = blockIdx.x * blockDim.x + threadIdx.x;
>   if (idx<N) a[idx] = a[idx] * a[idx];
> }
>
> // main routine that executes on the host
> void  stuff(int argc, char **argv)
> {
>   float *a_h, *a_d;  // Pointer to host & device arrays
>   int N = atoi(argv[1]);
> //  const int N = 10;   Number of elements in arrays
>   size_t size = N * sizeof(float);
>   a_h = (float *)malloc(size);        // Allocate array on host
>   cudaMalloc((void **) &a_d, size);   // Allocate array on device
>   // Initialize host array and copy it to CUDA device
>   for (int i=0; i<N; i++) a_h[i] = (float)i;
>   cudaMemcpy(a_d, a_h, size, cudaMemcpyHostToDevice);
>   // Do calculation on device:
>   int block_size = 4;
>   int n_blocks = N/block_size + (N%block_size == 0 ? 0:1);
>   square_array <<< n_blocks, block_size >>> (a_d, N);
>   // Retrieve result from device and store it in host array
>   cudaMemcpy(a_h, a_d, sizeof(float)*N, cudaMemcpyDeviceToHost);
>   // Print results
>   for (int i=0; i<N; i++) printf("%d %f\n", i, a_h[i]);
>   // Cleanup
>   free(a_h); cudaFree(a_d);
> }
>
> Any suggestions would be appreciated.
>
> Thanks,
> Erin
>
> ________________________________________
> From: r-devel-bounces at r-project.org [r-devel-bounces at r-project.org] on behalf of Duncan Temple Lang [dtemplelang at ucdavis.edu]
> Sent: Thursday, July 18, 2013 9:16 AM
> To: r-devel at r-project.org
> Subject: Re: [Rd] question about Makeconf and nvcc/CUDA
>
> Hi Erin
>
>  Glad you are making progress on this with Brian's help.
>
>  I thought I would mention a different approach that might save you some
> programming time and actually make the code more flexible at the same time.
> Basically, in a high-level language like R, it is nice to keep the code
> calling a GPU kernel also high-level rather than writing code in C/C++
> to do the transfer of data to and from the CPU and GPU.
>
> Simon's OpenCL package (on CRAN) and the new RCUDA package (www.omegahat.org/RCUDA)
> allow us to load and invoke kernels directly from R.
> These provide more flexibility for invoking GPU kernels from R than fixed C/C++ code.
>
> RCUDA provides an interface to almost all of the CUDA API and so allows us to transfer
> values from R to the GPU and back (in different ways), invoke kernels asynchronously, etc.
> I haven't built the package on Windows yet, but may be able to get to that in the next
> few days.
>
> With a Windows binary of RCUDA (or OpenCL), you would be able to skip nvcc in your
> package by  compiling the kernel code generically so that it contains code for GPUs
> with different  capabilities (e.g. sm_20, sm_30, sm_35).
>
> In the last few days, I have also managed to compile very simple R code
> directly in R to PTX code that we can load and invoke using RCUDA.
> The compilation uses the Rllvm and RLLVMCompile packages. So in the
> future, I expect we will be able to compile simple R functions
> to native and PTX code.
>
>  D.
>
> On 7/17/13 11:45 PM, Hodgess, Erin wrote:
>> Dear R development:
>>
>>
>>
>> I'm not sure if this is the appropriate list, but it's a start.
>>
>>
>>
>> I would like to put together a package which contains a CUDA program on Windows 7.  I believe that it has to do with the Makeconf file in the etc directory.
>>
>>
>>
>> But when I just use the nvcc with the shared option, I can use the dyn.load command, but when I use the is.loaded function, it shows FALSE.
>>
>>
>>
>>
>>
>>
>>
>> Here are the results of the check command:
>>
>>
>>
>> c:\PROGRA~1\R\R-3.0.1\bin\i386>R CMD check cudasize
>> R CMD check cudasize
>> * using log directory 'c:/PROGRA~1/R/R-3.0.1/bin/i386/cudasize.Rcheck'
>> * using R version 3.0.1 (2013-05-16)
>> * using platform: i386-w64-mingw32 (32-bit)
>> * using session charset: ISO8859-1
>> * checking for file 'cudasize/DESCRIPTION' ... OK
>> * checking extension type ... Package
>> * this is package 'cudasize' version '1.0'
>> * checking package namespace information ... OK
>> * checking package dependencies ... OK
>> * checking if this is a source package ... OK
>> * checking if there is a namespace ... OK
>> * checking for executable files ... OK
>> * checking for hidden files and directories ... OK
>> * checking for portable file names ... OK
>> * checking whether package 'cudasize' can be installed ... ERROR
>> Installation failed.
>> See 'c:/PROGRA~1/R/R-3.0.1/bin/i386/cudasize.Rcheck/00install.out' for details.
>>
>> And the 00install.out file:
>>
>> * installing *source* package 'cudasize' ...
>>
>> ** libs
>>
>>
>>
>> *** arch - i386
>>
>> cygwin warning:
>>   MS-DOS style path detected: c:/PROGRA~1/R/R-30~1.1/etc/i386/Makeconf
>>   Preferred POSIX equivalent is: /cygdrive/c/PROGRA~1/R/R-30~1.1/etc/i386/Makeconf
>>   CYGWIN environment variable option "nodosfilewarning" turns off this warning.
>>   Consult the user's guide for more details about POSIX paths:
>>     http://cygwin.com/cygwin-ug-net/using.html#using-pathnames
>> cygwin warning:
>>   MS-DOS style path detected: c:/PROGRA~1/R/R-30~1.1/etc/i386/Makeconf
>>   Preferred POSIX equivalent is: /cygdrive/c/PROGRA~1/R/R-30~1.1/etc/i386/Makeconf
>>   CYGWIN environment variable option "nodosfilewarning" turns off this warning.
>>   Consult the user's guide for more details about POSIX paths:
>>     http://cygwin.com/cygwin-ug-net/using.html#using-pathnames
>> make: `symbols.rds' is up to date.
>> ERROR: compilation failed for package 'cudasize'
>>
>> * removing 'c:/PROGRA~1/R/R-3.0.1/bin/i386/cudasize.Rcheck/cudasize'
>>
>>
>>
>> I've been experimenting with the Makeconf file, but to no avail.
>>
>>
>>
>> Does anyone have any suggestions, please?
>>
>>
>>
>> Thanks,
>>
>> Erin
>>
>>
>>
>>       [[alternative HTML version deleted]]
>>
>> ______________________________________________
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>


From dtemplelang at ucdavis.edu  Thu Jul 18 22:08:47 2013
From: dtemplelang at ucdavis.edu (Duncan Temple Lang)
Date: Thu, 18 Jul 2013 13:08:47 -0700
Subject: [Rd] question about Makeconf and nvcc/CUDA
In-Reply-To: <FF9DB805FC41CC4E95825A50F680630217A263AC@columbia.uhd.campus>
References: <FF9DB805FC41CC4E95825A50F680630217A25E2C@columbia.uhd.campus>,
	<51E7F8C3.30000@ucdavis.edu>
	<FF9DB805FC41CC4E95825A50F680630217A262DB@columbia.uhd.campus>,
	<51E82F59.2010902@ucdavis.edu>
	<FF9DB805FC41CC4E95825A50F680630217A263AC@columbia.uhd.campus>
Message-ID: <51E84B4F.2020506@ucdavis.edu>

Hi Erin

See the code below.

Basically, I have created a new routine that you will
call from R as

 .C("cuda4", 1L, "5")

where 1L is the number of arguments you are passing and "5" is the character vector of arguments.

We are using .C() here for simplicity. For other cases involving data, .Call() would be better.

That cuda4 routines is now not name-mangled, and has the correct parameter types and return type
to be called via the .C().
The good thing is this has nothing to do with CUDA, but just calling C++ routines from R.


This illustrates that there are complexities here with different devices, languages, etc.
This is one of the reasons a high-level interface to calling kernels is simpler and
more flexible.

The following R only code invokes the kernel on actual data we have in R (x).

# Put the square_array routine only in a file named, erinHodgess.cu
# add extern "C" before the square_array routine

  # generate the PTX code
f = nvcc("erinHodgess.cu")

  # load the PTX code
mod = loadModule(f)

  # Invoke the PTX code
x = rnorm(100000)
ans = .gpu(mod$square_array, x, length(x), gridBy = x)

all.equal(x*x, ans)


  D.

////////////////////////////////


#include <stdio.h>
#include <cuda.h>

// Kernel that executes on the CUDA device
extern "C"
__global__ void square_array(float *a, int N)
{
  int idx = blockIdx.x * blockDim.x + threadIdx.x;
  if (idx<N) a[idx] = a[idx] * a[idx];
}

// main routine that executes on the host
void stuff(int argc, char **argv)
{
  float *a_h, *a_d;  // Pointer to host & device arrays
  int N = atoi(argv[1]);
//  const int N = 10;   Number of elements in arrays
  size_t size = N * sizeof(float);
  a_h = (float *)malloc(size);        // Allocate array on host
  cudaMalloc((void **) &a_d, size);   // Allocate array on device
  // Initialize host array and copy it to CUDA device
  for (int i=0; i<N; i++) a_h[i] = (float)i;
  cudaMemcpy(a_d, a_h, size, cudaMemcpyHostToDevice);
  // Do calculation on device:
  int block_size = 4;
  int n_blocks = N/block_size + (N%block_size == 0 ? 0:1);
  square_array <<< n_blocks, block_size >>> (a_d, N);
  // Retrieve result from device and store it in host array
  cudaMemcpy(a_h, a_d, sizeof(float)*N, cudaMemcpyDeviceToHost);
  // Print results
  for (int i=0; i<N; i++) printf("%d %f\n", i, a_h[i]);
  // Cleanup
  free(a_h); cudaFree(a_d);
}

extern "C"
void
cuda4(int *nels, char **els)
{
   stuff(*nels, els);
}


On 7/18/13 12:46 PM, Hodgess, Erin wrote:
> Hi again.
> 
> I put in the extern statement.
> 
> However, I'm not sure what you mean by changing the signature, please.  
> 
> I changed out the routine name from "stuff" to "cuda4" in the cuda4.cu program.
> 
> Still getting:
> 
>> library(cudasize)
> library(cudasize)
> 
>>
> 
>> .C("cuda4",as.character(5))
> .C("cuda4",as.character(5))
> Error in .C("cuda4", as.character(5)) : 
>   C symbol name "cuda4" not in load table
> Execution halted
> 
> c:\Program Files\R\R-3.0.1\bin\i386>
> 
> I still want to keep at it.
> 
> Thanks so much for all of your help!!!
> 
> Erin
> 
> ________________________________________
> From: Duncan Temple Lang [dtemplelang at ucdavis.edu]
> Sent: Thursday, July 18, 2013 1:09 PM
> To: Hodgess, Erin
> Cc: r-devel at r-project.org
> Subject: Re: [Rd] question about Makeconf and nvcc/CUDA
> 
> Hi Erin
> 
> It appears that there is only one file in src that is compile, i.e. cuda4.cu.
> 
> That does not contain a routine named cuda4, which is what you are trying to invoke
> via the .Call("cuda4") expression.
> 
> Instead, it contains two routines - one kernel square_array which runs
> on the GPU, and the routine stuff.
> 
> To be able to call the stuff() routine from R, you would have to
> a)  add
>       extern "C"
>     before its definition/declaration so that its name is not mangled by nvcc
> 
> b)  change its signature so that it can be invoked via a .Call() or alternatively
>     a .C().
> 
>  I would create another routine that acts as an intermediate routine
> called from R that then calls stuff().
> 
> This assumes that what you showed us of cuda4.cu is all there is in it.
>    D.
> 
> On 7/18/13 11:01 AM, Hodgess, Erin wrote:
>> Hi again:
>>
>> Here is another problem that I am having.  Hope this will be the last one.  I really want to see if I can put it together.  Sorry for belaboring the issue.
>>
>> Well, here is my story:
>>
>> c:\Program Files\R\R-3.0.1\bin\i386>R CMD build cudasize
>> R CMD build cudasize
>> * checking for file 'cudasize/DESCRIPTION' ... OK
>> * preparing 'cudasize':
>> * checking DESCRIPTION meta-information ... OK
>> * cleaning src
>> Warning: C:/Users/erin/AppData/Local/Temp/RtmpOKsfga/Rbuild22e066bf13fb/cudasize/man/f1.Rd:33: unexpected '{'
>> Warning: C:/Users/erin/AppData/Local/Temp/RtmpOKsfga/Rbuild22e066bf13fb/cudasize/man/f1.Rd:37: unexpected '}'
>> * checking for LF line-endings in source and make files
>> * checking for empty or unneeded directories
>> * building 'cudasize_1.0.tar.gz'
>>
>>
>> c:\Program Files\R\R-3.0.1\bin\i386>R CMD INSTALL --no-multiarch cudasize_1.0.tar.gz
>> R CMD INSTALL --no-multiarch cudasize_1.0.tar.gz
>> * installing to library 'c:/myRlib'
>> * installing *source* package 'cudasize' ...
>> ** libs
>> nvcc -m32 --shared -o cuda4.dll cuda4.cu
>> cuda4.cu
>> tmpxft_000012fc_00000000-5_cuda4.cudafe1.gpu
>> tmpxft_000012fc_00000000-10_cuda4.cudafe2.gpu
>> cuda4.cu
>> tmpxft_000012fc_00000000-5_cuda4.cudafe1.cpp
>> tmpxft_000012fc_00000000-15_cuda4.ii
>> installing to c:/myRlib/cudasize/libs/i386
>> ** R
>> ** preparing package for lazy loading
>> ** help
>> Warning: C:/Users/erin/AppData/Local/Temp/RtmpKSm696/R.INSTALL7fc517f4e58/cudasize/man/f1.Rd:33: unexpected '{'
>> Warning: C:/Users/erin/AppData/Local/Temp/RtmpKSm696/R.INSTALL7fc517f4e58/cudasize/man/f1.Rd:37: unexpected '}'
>> Warning: C:/Users/erin/AppData/Local/Temp/RtmpKSm696/R.INSTALL7fc517f4e58/cudasize/man/f1.Rd:31: All text must be in a section
>> Warning: C:/Users/erin/AppData/Local/Temp/RtmpKSm696/R.INSTALL7fc517f4e58/cudasize/man/f1.Rd:32: All text must be in a section
>> Warning: C:/Users/erin/AppData/Local/Temp/RtmpKSm696/R.INSTALL7fc517f4e58/cudasize/man/f1.Rd:34: All text must be in a section
>> Warning: C:/Users/erin/AppData/Local/Temp/RtmpKSm696/R.INSTALL7fc517f4e58/cudasize/man/f1.Rd:35: All text must be in a section
>> Warning: C:/Users/erin/AppData/Local/Temp/RtmpKSm696/R.INSTALL7fc517f4e58/cudasize/man/f1.Rd:36: All text must be in a section
>> *** installing help indices
>> ** building package indices
>> ** testing if installed package can be loaded
>> * DONE (cudasize)
>>
>> c:\Program Files\R\R-3.0.1\bin\i386>R --vanilla
>> R --vanilla
>>
>> R version 3.0.1 (2013-05-16) -- "Good Sport"
>> Copyright (C) 2013 The R Foundation for Statistical Computing
>> Platform: i386-w64-mingw32/i386 (32-bit)
>>
>> R is free software and comes with ABSOLUTELY NO WARRANTY.
>> You are welcome to redistribute it under certain conditions.
>> Type 'license()' or 'licence()' for distribution details.
>>
>> R is a collaborative project with many contributors.
>> Type 'contributors()' for more information and
>> 'citation()' on how to cite R or R packages in publications.
>>
>> Type 'demo()' for some demos, 'help()' for on-line help, or
>> 'help.start()' for an HTML browser interface to help.
>> Type 'q()' to quit R.
>>
>>> library(cudasize)
>> library(cudasize)
>>> f1
>> f1
>> function (x)
>> {
>>     y <- .Call("cuda4", as.character(x))
>>     return(y)
>> }
>> <environment: namespace:cudasize>
>>> f1(2)
>> f1(2)
>> Error in .Call("cuda4", as.character(x)) :
>>   "cuda4" not resolved from current namespace (cudasize)
>> Calls: f1 -> .Call
>> Execution halted
>>
>> Here is the Makevars.win file
>>
>> cuda4.dll:
>>       nvcc -m32 --shared -o cuda4.dll cuda4.cu
>>
>> And finally, the program itself:
>>
>>
>> #include <stdio.h>
>> #include <cuda.h>
>>
>> // Kernel that executes on the CUDA device
>> __global__ void square_array(float *a, int N)
>> {
>>   int idx = blockIdx.x * blockDim.x + threadIdx.x;
>>   if (idx<N) a[idx] = a[idx] * a[idx];
>> }
>>
>> // main routine that executes on the host
>> void  stuff(int argc, char **argv)
>> {
>>   float *a_h, *a_d;  // Pointer to host & device arrays
>>   int N = atoi(argv[1]);
>> //  const int N = 10;   Number of elements in arrays
>>   size_t size = N * sizeof(float);
>>   a_h = (float *)malloc(size);        // Allocate array on host
>>   cudaMalloc((void **) &a_d, size);   // Allocate array on device
>>   // Initialize host array and copy it to CUDA device
>>   for (int i=0; i<N; i++) a_h[i] = (float)i;
>>   cudaMemcpy(a_d, a_h, size, cudaMemcpyHostToDevice);
>>   // Do calculation on device:
>>   int block_size = 4;
>>   int n_blocks = N/block_size + (N%block_size == 0 ? 0:1);
>>   square_array <<< n_blocks, block_size >>> (a_d, N);
>>   // Retrieve result from device and store it in host array
>>   cudaMemcpy(a_h, a_d, sizeof(float)*N, cudaMemcpyDeviceToHost);
>>   // Print results
>>   for (int i=0; i<N; i++) printf("%d %f\n", i, a_h[i]);
>>   // Cleanup
>>   free(a_h); cudaFree(a_d);
>> }
>>
>> Any suggestions would be appreciated.
>>
>> Thanks,
>> Erin
>>
>> ________________________________________
>> From: r-devel-bounces at r-project.org [r-devel-bounces at r-project.org] on behalf of Duncan Temple Lang [dtemplelang at ucdavis.edu]
>> Sent: Thursday, July 18, 2013 9:16 AM
>> To: r-devel at r-project.org
>> Subject: Re: [Rd] question about Makeconf and nvcc/CUDA
>>
>> Hi Erin
>>
>>  Glad you are making progress on this with Brian's help.
>>
>>  I thought I would mention a different approach that might save you some
>> programming time and actually make the code more flexible at the same time.
>> Basically, in a high-level language like R, it is nice to keep the code
>> calling a GPU kernel also high-level rather than writing code in C/C++
>> to do the transfer of data to and from the CPU and GPU.
>>
>> Simon's OpenCL package (on CRAN) and the new RCUDA package (www.omegahat.org/RCUDA)
>> allow us to load and invoke kernels directly from R.
>> These provide more flexibility for invoking GPU kernels from R than fixed C/C++ code.
>>
>> RCUDA provides an interface to almost all of the CUDA API and so allows us to transfer
>> values from R to the GPU and back (in different ways), invoke kernels asynchronously, etc.
>> I haven't built the package on Windows yet, but may be able to get to that in the next
>> few days.
>>
>> With a Windows binary of RCUDA (or OpenCL), you would be able to skip nvcc in your
>> package by  compiling the kernel code generically so that it contains code for GPUs
>> with different  capabilities (e.g. sm_20, sm_30, sm_35).
>>
>> In the last few days, I have also managed to compile very simple R code
>> directly in R to PTX code that we can load and invoke using RCUDA.
>> The compilation uses the Rllvm and RLLVMCompile packages. So in the
>> future, I expect we will be able to compile simple R functions
>> to native and PTX code.
>>
>>  D.
>>
>> On 7/17/13 11:45 PM, Hodgess, Erin wrote:
>>> Dear R development:
>>>
>>>
>>>
>>> I'm not sure if this is the appropriate list, but it's a start.
>>>
>>>
>>>
>>> I would like to put together a package which contains a CUDA program on Windows 7.  I believe that it has to do with the Makeconf file in the etc directory.
>>>
>>>
>>>
>>> But when I just use the nvcc with the shared option, I can use the dyn.load command, but when I use the is.loaded function, it shows FALSE.
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>> Here are the results of the check command:
>>>
>>>
>>>
>>> c:\PROGRA~1\R\R-3.0.1\bin\i386>R CMD check cudasize
>>> R CMD check cudasize
>>> * using log directory 'c:/PROGRA~1/R/R-3.0.1/bin/i386/cudasize.Rcheck'
>>> * using R version 3.0.1 (2013-05-16)
>>> * using platform: i386-w64-mingw32 (32-bit)
>>> * using session charset: ISO8859-1
>>> * checking for file 'cudasize/DESCRIPTION' ... OK
>>> * checking extension type ... Package
>>> * this is package 'cudasize' version '1.0'
>>> * checking package namespace information ... OK
>>> * checking package dependencies ... OK
>>> * checking if this is a source package ... OK
>>> * checking if there is a namespace ... OK
>>> * checking for executable files ... OK
>>> * checking for hidden files and directories ... OK
>>> * checking for portable file names ... OK
>>> * checking whether package 'cudasize' can be installed ... ERROR
>>> Installation failed.
>>> See 'c:/PROGRA~1/R/R-3.0.1/bin/i386/cudasize.Rcheck/00install.out' for details.
>>>
>>> And the 00install.out file:
>>>
>>> * installing *source* package 'cudasize' ...
>>>
>>> ** libs
>>>
>>>
>>>
>>> *** arch - i386
>>>
>>> cygwin warning:
>>>   MS-DOS style path detected: c:/PROGRA~1/R/R-30~1.1/etc/i386/Makeconf
>>>   Preferred POSIX equivalent is: /cygdrive/c/PROGRA~1/R/R-30~1.1/etc/i386/Makeconf
>>>   CYGWIN environment variable option "nodosfilewarning" turns off this warning.
>>>   Consult the user's guide for more details about POSIX paths:
>>>     http://cygwin.com/cygwin-ug-net/using.html#using-pathnames
>>> cygwin warning:
>>>   MS-DOS style path detected: c:/PROGRA~1/R/R-30~1.1/etc/i386/Makeconf
>>>   Preferred POSIX equivalent is: /cygdrive/c/PROGRA~1/R/R-30~1.1/etc/i386/Makeconf
>>>   CYGWIN environment variable option "nodosfilewarning" turns off this warning.
>>>   Consult the user's guide for more details about POSIX paths:
>>>     http://cygwin.com/cygwin-ug-net/using.html#using-pathnames
>>> make: `symbols.rds' is up to date.
>>> ERROR: compilation failed for package 'cudasize'
>>>
>>> * removing 'c:/PROGRA~1/R/R-3.0.1/bin/i386/cudasize.Rcheck/cudasize'
>>>
>>>
>>>
>>> I've been experimenting with the Makeconf file, but to no avail.
>>>
>>>
>>>
>>> Does anyone have any suggestions, please?
>>>
>>>
>>>
>>> Thanks,
>>>
>>> Erin
>>>
>>>
>>>
>>>       [[alternative HTML version deleted]]
>>>
>>> ______________________________________________
>>> R-devel at r-project.org mailing list
>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>>
>>
>> ______________________________________________
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>


From HodgessE at uhd.edu  Thu Jul 18 22:12:00 2013
From: HodgessE at uhd.edu (Hodgess, Erin)
Date: Thu, 18 Jul 2013 20:12:00 +0000
Subject: [Rd] question about Makeconf and nvcc/CUDA
In-Reply-To: <51E84B4F.2020506@ucdavis.edu>
References: <FF9DB805FC41CC4E95825A50F680630217A25E2C@columbia.uhd.campus>,
	<51E7F8C3.30000@ucdavis.edu>
	<FF9DB805FC41CC4E95825A50F680630217A262DB@columbia.uhd.campus>,
	<51E82F59.2010902@ucdavis.edu>
	<FF9DB805FC41CC4E95825A50F680630217A263AC@columbia.uhd.campus>,
	<51E84B4F.2020506@ucdavis.edu>
Message-ID: <FF9DB805FC41CC4E95825A50F680630217A263D2@columbia.uhd.campus>

Wow!

This is just amazing!

Thanks so much.  I didn't realize how intense this is.


________________________________________
From: Duncan Temple Lang [dtemplelang at ucdavis.edu]
Sent: Thursday, July 18, 2013 3:08 PM
To: Hodgess, Erin
Cc: r-devel at r-project.org
Subject: Re: [Rd] question about Makeconf and nvcc/CUDA

Hi Erin

See the code below.

Basically, I have created a new routine that you will
call from R as

 .C("cuda4", 1L, "5")

where 1L is the number of arguments you are passing and "5" is the character vector of arguments.

We are using .C() here for simplicity. For other cases involving data, .Call() would be better.

That cuda4 routines is now not name-mangled, and has the correct parameter types and return type
to be called via the .C().
The good thing is this has nothing to do with CUDA, but just calling C++ routines from R.


This illustrates that there are complexities here with different devices, languages, etc.
This is one of the reasons a high-level interface to calling kernels is simpler and
more flexible.

The following R only code invokes the kernel on actual data we have in R (x).

# Put the square_array routine only in a file named, erinHodgess.cu
# add extern "C" before the square_array routine

  # generate the PTX code
f = nvcc("erinHodgess.cu")

  # load the PTX code
mod = loadModule(f)

  # Invoke the PTX code
x = rnorm(100000)
ans = .gpu(mod$square_array, x, length(x), gridBy = x)

all.equal(x*x, ans)


  D.

////////////////////////////////


#include <stdio.h>
#include <cuda.h>

// Kernel that executes on the CUDA device
extern "C"
__global__ void square_array(float *a, int N)
{
  int idx = blockIdx.x * blockDim.x + threadIdx.x;
  if (idx<N) a[idx] = a[idx] * a[idx];
}

// main routine that executes on the host
void stuff(int argc, char **argv)
{
  float *a_h, *a_d;  // Pointer to host & device arrays
  int N = atoi(argv[1]);
//  const int N = 10;   Number of elements in arrays
  size_t size = N * sizeof(float);
  a_h = (float *)malloc(size);        // Allocate array on host
  cudaMalloc((void **) &a_d, size);   // Allocate array on device
  // Initialize host array and copy it to CUDA device
  for (int i=0; i<N; i++) a_h[i] = (float)i;
  cudaMemcpy(a_d, a_h, size, cudaMemcpyHostToDevice);
  // Do calculation on device:
  int block_size = 4;
  int n_blocks = N/block_size + (N%block_size == 0 ? 0:1);
  square_array <<< n_blocks, block_size >>> (a_d, N);
  // Retrieve result from device and store it in host array
  cudaMemcpy(a_h, a_d, sizeof(float)*N, cudaMemcpyDeviceToHost);
  // Print results
  for (int i=0; i<N; i++) printf("%d %f\n", i, a_h[i]);
  // Cleanup
  free(a_h); cudaFree(a_d);
}

extern "C"
void
cuda4(int *nels, char **els)
{
   stuff(*nels, els);
}


On 7/18/13 12:46 PM, Hodgess, Erin wrote:
> Hi again.
>
> I put in the extern statement.
>
> However, I'm not sure what you mean by changing the signature, please.
>
> I changed out the routine name from "stuff" to "cuda4" in the cuda4.cu program.
>
> Still getting:
>
>> library(cudasize)
> library(cudasize)
>
>>
>
>> .C("cuda4",as.character(5))
> .C("cuda4",as.character(5))
> Error in .C("cuda4", as.character(5)) :
>   C symbol name "cuda4" not in load table
> Execution halted
>
> c:\Program Files\R\R-3.0.1\bin\i386>
>
> I still want to keep at it.
>
> Thanks so much for all of your help!!!
>
> Erin
>
> ________________________________________
> From: Duncan Temple Lang [dtemplelang at ucdavis.edu]
> Sent: Thursday, July 18, 2013 1:09 PM
> To: Hodgess, Erin
> Cc: r-devel at r-project.org
> Subject: Re: [Rd] question about Makeconf and nvcc/CUDA
>
> Hi Erin
>
> It appears that there is only one file in src that is compile, i.e. cuda4.cu.
>
> That does not contain a routine named cuda4, which is what you are trying to invoke
> via the .Call("cuda4") expression.
>
> Instead, it contains two routines - one kernel square_array which runs
> on the GPU, and the routine stuff.
>
> To be able to call the stuff() routine from R, you would have to
> a)  add
>       extern "C"
>     before its definition/declaration so that its name is not mangled by nvcc
>
> b)  change its signature so that it can be invoked via a .Call() or alternatively
>     a .C().
>
>  I would create another routine that acts as an intermediate routine
> called from R that then calls stuff().
>
> This assumes that what you showed us of cuda4.cu is all there is in it.
>    D.
>
> On 7/18/13 11:01 AM, Hodgess, Erin wrote:
>> Hi again:
>>
>> Here is another problem that I am having.  Hope this will be the last one.  I really want to see if I can put it together.  Sorry for belaboring the issue.
>>
>> Well, here is my story:
>>
>> c:\Program Files\R\R-3.0.1\bin\i386>R CMD build cudasize
>> R CMD build cudasize
>> * checking for file 'cudasize/DESCRIPTION' ... OK
>> * preparing 'cudasize':
>> * checking DESCRIPTION meta-information ... OK
>> * cleaning src
>> Warning: C:/Users/erin/AppData/Local/Temp/RtmpOKsfga/Rbuild22e066bf13fb/cudasize/man/f1.Rd:33: unexpected '{'
>> Warning: C:/Users/erin/AppData/Local/Temp/RtmpOKsfga/Rbuild22e066bf13fb/cudasize/man/f1.Rd:37: unexpected '}'
>> * checking for LF line-endings in source and make files
>> * checking for empty or unneeded directories
>> * building 'cudasize_1.0.tar.gz'
>>
>>
>> c:\Program Files\R\R-3.0.1\bin\i386>R CMD INSTALL --no-multiarch cudasize_1.0.tar.gz
>> R CMD INSTALL --no-multiarch cudasize_1.0.tar.gz
>> * installing to library 'c:/myRlib'
>> * installing *source* package 'cudasize' ...
>> ** libs
>> nvcc -m32 --shared -o cuda4.dll cuda4.cu
>> cuda4.cu
>> tmpxft_000012fc_00000000-5_cuda4.cudafe1.gpu
>> tmpxft_000012fc_00000000-10_cuda4.cudafe2.gpu
>> cuda4.cu
>> tmpxft_000012fc_00000000-5_cuda4.cudafe1.cpp
>> tmpxft_000012fc_00000000-15_cuda4.ii
>> installing to c:/myRlib/cudasize/libs/i386
>> ** R
>> ** preparing package for lazy loading
>> ** help
>> Warning: C:/Users/erin/AppData/Local/Temp/RtmpKSm696/R.INSTALL7fc517f4e58/cudasize/man/f1.Rd:33: unexpected '{'
>> Warning: C:/Users/erin/AppData/Local/Temp/RtmpKSm696/R.INSTALL7fc517f4e58/cudasize/man/f1.Rd:37: unexpected '}'
>> Warning: C:/Users/erin/AppData/Local/Temp/RtmpKSm696/R.INSTALL7fc517f4e58/cudasize/man/f1.Rd:31: All text must be in a section
>> Warning: C:/Users/erin/AppData/Local/Temp/RtmpKSm696/R.INSTALL7fc517f4e58/cudasize/man/f1.Rd:32: All text must be in a section
>> Warning: C:/Users/erin/AppData/Local/Temp/RtmpKSm696/R.INSTALL7fc517f4e58/cudasize/man/f1.Rd:34: All text must be in a section
>> Warning: C:/Users/erin/AppData/Local/Temp/RtmpKSm696/R.INSTALL7fc517f4e58/cudasize/man/f1.Rd:35: All text must be in a section
>> Warning: C:/Users/erin/AppData/Local/Temp/RtmpKSm696/R.INSTALL7fc517f4e58/cudasize/man/f1.Rd:36: All text must be in a section
>> *** installing help indices
>> ** building package indices
>> ** testing if installed package can be loaded
>> * DONE (cudasize)
>>
>> c:\Program Files\R\R-3.0.1\bin\i386>R --vanilla
>> R --vanilla
>>
>> R version 3.0.1 (2013-05-16) -- "Good Sport"
>> Copyright (C) 2013 The R Foundation for Statistical Computing
>> Platform: i386-w64-mingw32/i386 (32-bit)
>>
>> R is free software and comes with ABSOLUTELY NO WARRANTY.
>> You are welcome to redistribute it under certain conditions.
>> Type 'license()' or 'licence()' for distribution details.
>>
>> R is a collaborative project with many contributors.
>> Type 'contributors()' for more information and
>> 'citation()' on how to cite R or R packages in publications.
>>
>> Type 'demo()' for some demos, 'help()' for on-line help, or
>> 'help.start()' for an HTML browser interface to help.
>> Type 'q()' to quit R.
>>
>>> library(cudasize)
>> library(cudasize)
>>> f1
>> f1
>> function (x)
>> {
>>     y <- .Call("cuda4", as.character(x))
>>     return(y)
>> }
>> <environment: namespace:cudasize>
>>> f1(2)
>> f1(2)
>> Error in .Call("cuda4", as.character(x)) :
>>   "cuda4" not resolved from current namespace (cudasize)
>> Calls: f1 -> .Call
>> Execution halted
>>
>> Here is the Makevars.win file
>>
>> cuda4.dll:
>>       nvcc -m32 --shared -o cuda4.dll cuda4.cu
>>
>> And finally, the program itself:
>>
>>
>> #include <stdio.h>
>> #include <cuda.h>
>>
>> // Kernel that executes on the CUDA device
>> __global__ void square_array(float *a, int N)
>> {
>>   int idx = blockIdx.x * blockDim.x + threadIdx.x;
>>   if (idx<N) a[idx] = a[idx] * a[idx];
>> }
>>
>> // main routine that executes on the host
>> void  stuff(int argc, char **argv)
>> {
>>   float *a_h, *a_d;  // Pointer to host & device arrays
>>   int N = atoi(argv[1]);
>> //  const int N = 10;   Number of elements in arrays
>>   size_t size = N * sizeof(float);
>>   a_h = (float *)malloc(size);        // Allocate array on host
>>   cudaMalloc((void **) &a_d, size);   // Allocate array on device
>>   // Initialize host array and copy it to CUDA device
>>   for (int i=0; i<N; i++) a_h[i] = (float)i;
>>   cudaMemcpy(a_d, a_h, size, cudaMemcpyHostToDevice);
>>   // Do calculation on device:
>>   int block_size = 4;
>>   int n_blocks = N/block_size + (N%block_size == 0 ? 0:1);
>>   square_array <<< n_blocks, block_size >>> (a_d, N);
>>   // Retrieve result from device and store it in host array
>>   cudaMemcpy(a_h, a_d, sizeof(float)*N, cudaMemcpyDeviceToHost);
>>   // Print results
>>   for (int i=0; i<N; i++) printf("%d %f\n", i, a_h[i]);
>>   // Cleanup
>>   free(a_h); cudaFree(a_d);
>> }
>>
>> Any suggestions would be appreciated.
>>
>> Thanks,
>> Erin
>>
>> ________________________________________
>> From: r-devel-bounces at r-project.org [r-devel-bounces at r-project.org] on behalf of Duncan Temple Lang [dtemplelang at ucdavis.edu]
>> Sent: Thursday, July 18, 2013 9:16 AM
>> To: r-devel at r-project.org
>> Subject: Re: [Rd] question about Makeconf and nvcc/CUDA
>>
>> Hi Erin
>>
>>  Glad you are making progress on this with Brian's help.
>>
>>  I thought I would mention a different approach that might save you some
>> programming time and actually make the code more flexible at the same time.
>> Basically, in a high-level language like R, it is nice to keep the code
>> calling a GPU kernel also high-level rather than writing code in C/C++
>> to do the transfer of data to and from the CPU and GPU.
>>
>> Simon's OpenCL package (on CRAN) and the new RCUDA package (www.omegahat.org/RCUDA)
>> allow us to load and invoke kernels directly from R.
>> These provide more flexibility for invoking GPU kernels from R than fixed C/C++ code.
>>
>> RCUDA provides an interface to almost all of the CUDA API and so allows us to transfer
>> values from R to the GPU and back (in different ways), invoke kernels asynchronously, etc.
>> I haven't built the package on Windows yet, but may be able to get to that in the next
>> few days.
>>
>> With a Windows binary of RCUDA (or OpenCL), you would be able to skip nvcc in your
>> package by  compiling the kernel code generically so that it contains code for GPUs
>> with different  capabilities (e.g. sm_20, sm_30, sm_35).
>>
>> In the last few days, I have also managed to compile very simple R code
>> directly in R to PTX code that we can load and invoke using RCUDA.
>> The compilation uses the Rllvm and RLLVMCompile packages. So in the
>> future, I expect we will be able to compile simple R functions
>> to native and PTX code.
>>
>>  D.
>>
>> On 7/17/13 11:45 PM, Hodgess, Erin wrote:
>>> Dear R development:
>>>
>>>
>>>
>>> I'm not sure if this is the appropriate list, but it's a start.
>>>
>>>
>>>
>>> I would like to put together a package which contains a CUDA program on Windows 7.  I believe that it has to do with the Makeconf file in the etc directory.
>>>
>>>
>>>
>>> But when I just use the nvcc with the shared option, I can use the dyn.load command, but when I use the is.loaded function, it shows FALSE.
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>> Here are the results of the check command:
>>>
>>>
>>>
>>> c:\PROGRA~1\R\R-3.0.1\bin\i386>R CMD check cudasize
>>> R CMD check cudasize
>>> * using log directory 'c:/PROGRA~1/R/R-3.0.1/bin/i386/cudasize.Rcheck'
>>> * using R version 3.0.1 (2013-05-16)
>>> * using platform: i386-w64-mingw32 (32-bit)
>>> * using session charset: ISO8859-1
>>> * checking for file 'cudasize/DESCRIPTION' ... OK
>>> * checking extension type ... Package
>>> * this is package 'cudasize' version '1.0'
>>> * checking package namespace information ... OK
>>> * checking package dependencies ... OK
>>> * checking if this is a source package ... OK
>>> * checking if there is a namespace ... OK
>>> * checking for executable files ... OK
>>> * checking for hidden files and directories ... OK
>>> * checking for portable file names ... OK
>>> * checking whether package 'cudasize' can be installed ... ERROR
>>> Installation failed.
>>> See 'c:/PROGRA~1/R/R-3.0.1/bin/i386/cudasize.Rcheck/00install.out' for details.
>>>
>>> And the 00install.out file:
>>>
>>> * installing *source* package 'cudasize' ...
>>>
>>> ** libs
>>>
>>>
>>>
>>> *** arch - i386
>>>
>>> cygwin warning:
>>>   MS-DOS style path detected: c:/PROGRA~1/R/R-30~1.1/etc/i386/Makeconf
>>>   Preferred POSIX equivalent is: /cygdrive/c/PROGRA~1/R/R-30~1.1/etc/i386/Makeconf
>>>   CYGWIN environment variable option "nodosfilewarning" turns off this warning.
>>>   Consult the user's guide for more details about POSIX paths:
>>>     http://cygwin.com/cygwin-ug-net/using.html#using-pathnames
>>> cygwin warning:
>>>   MS-DOS style path detected: c:/PROGRA~1/R/R-30~1.1/etc/i386/Makeconf
>>>   Preferred POSIX equivalent is: /cygdrive/c/PROGRA~1/R/R-30~1.1/etc/i386/Makeconf
>>>   CYGWIN environment variable option "nodosfilewarning" turns off this warning.
>>>   Consult the user's guide for more details about POSIX paths:
>>>     http://cygwin.com/cygwin-ug-net/using.html#using-pathnames
>>> make: `symbols.rds' is up to date.
>>> ERROR: compilation failed for package 'cudasize'
>>>
>>> * removing 'c:/PROGRA~1/R/R-3.0.1/bin/i386/cudasize.Rcheck/cudasize'
>>>
>>>
>>>
>>> I've been experimenting with the Makeconf file, but to no avail.
>>>
>>>
>>>
>>> Does anyone have any suggestions, please?
>>>
>>>
>>>
>>> Thanks,
>>>
>>> Erin
>>>
>>>
>>>
>>>       [[alternative HTML version deleted]]
>>>
>>> ______________________________________________
>>> R-devel at r-project.org mailing list
>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>>
>>
>> ______________________________________________
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>


From HodgessE at uhd.edu  Fri Jul 19 04:21:29 2013
From: HodgessE at uhd.edu (Hodgess, Erin)
Date: Fri, 19 Jul 2013 02:21:29 +0000
Subject: [Rd] question about Makeconf and nvcc/CUDA
In-Reply-To: <51E84B4F.2020506@ucdavis.edu>
References: <FF9DB805FC41CC4E95825A50F680630217A25E2C@columbia.uhd.campus>,
	<51E7F8C3.30000@ucdavis.edu>
	<FF9DB805FC41CC4E95825A50F680630217A262DB@columbia.uhd.campus>,
	<51E82F59.2010902@ucdavis.edu>
	<FF9DB805FC41CC4E95825A50F680630217A263AC@columbia.uhd.campus>,
	<51E84B4F.2020506@ucdavis.edu>
Message-ID: <FF9DB805FC41CC4E95825A50F680630217A26523@columbia.uhd.campus>

All right.  I'm still stuck even with all of the help.

Here is the first part:

>R CMD INSTALL --no-multiarch cudasize_1.0.tar.gz 
R CMD INSTALL --no-multiarch cudasize_1.0.tar.gz 
* installing to library 'c:/myRlib'
* installing *source* package 'cudasize' ...
** libs
nvcc -m32 --shared -o cuda4.dll cuda4.cu 
cuda4.cu
tmpxft_00001a88_00000000-5_cuda4.cudafe1.gpu
tmpxft_00001a88_00000000-10_cuda4.cudafe2.gpu
cuda4.cu
tmpxft_00001a88_00000000-5_cuda4.cudafe1.cpp
tmpxft_00001a88_00000000-15_cuda4.ii
installing to c:/myRlib/cudasize/libs/i386
** R
** preparing package for lazy loading
** help
Warning: C:/Users/erin/AppData/Local/Temp/RtmpIfKA2q/R.INSTALL19782457375c/cudasize/man/f1.Rd:33: unexpected '{'
Warning: C:/Users/erin/AppData/Local/Temp/RtmpIfKA2q/R.INSTALL19782457375c/cudasize/man/f1.Rd:37: unexpected '}'
Warning: C:/Users/erin/AppData/Local/Temp/RtmpIfKA2q/R.INSTALL19782457375c/cudasize/man/f1.Rd:31: All text must be in a section
Warning: C:/Users/erin/AppData/Local/Temp/RtmpIfKA2q/R.INSTALL19782457375c/cudasize/man/f1.Rd:32: All text must be in a section
Warning: C:/Users/erin/AppData/Local/Temp/RtmpIfKA2q/R.INSTALL19782457375c/cudasize/man/f1.Rd:34: All text must be in a section
Warning: C:/Users/erin/AppData/Local/Temp/RtmpIfKA2q/R.INSTALL19782457375c/cudasize/man/f1.Rd:35: All text must be in a section
Warning: C:/Users/erin/AppData/Local/Temp/RtmpIfKA2q/R.INSTALL19782457375c/cudasize/man/f1.Rd:36: All text must be in a section
*** installing help indices
** building package indices
** testing if installed package can be loaded
* DONE (cudasize)

c:\Program Files\R\R-3.0.1\bin\i386>R --vanilla
R --vanilla

R version 3.0.1 (2013-05-16) -- "Good Sport"
Copyright (C) 2013 The R Foundation for Statistical Computing
Platform: i386-w64-mingw32/i386 (32-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> library(cudasize)
library(cudasize)
> .C("cuda4",1L,"5")
.C("cuda4",1L,"5")
Error in .C("cuda4", 1L, "5") : C symbol name "cuda4" not in load table
Execution halted

c:\Program Files\R\R-3.0.1\bin\i386>

Then when I run  R CMD check, here are my results:
c:\Program Files\R\R-3.0.1\bin\i386>R CMD check --no-multiarch cudasize_1.0.tar.gz 
R CMD check --no-multiarch cudasize_1.0.tar.gz 
* using log directory 'c:/Program Files/R/R-3.0.1/bin/i386/cudasize.Rcheck'
* using R version 3.0.1 (2013-05-16)
* using platform: i386-w64-mingw32 (32-bit)
* using session charset: ISO8859-1
* checking for file 'cudasize/DESCRIPTION' ... OK
* checking extension type ... Package
* this is package 'cudasize' version '1.0'
* checking package namespace information ... OK
* checking package dependencies ... OK
* checking if this is a source package ... WARNING
Subdirectory 'src' contains:
  cuda4.cu stuff.cu
These are unlikely file names for src files.
* checking if there is a namespace ... OK
* checking for executable files ... OK
* checking for hidden files and directories ... OK
* checking for portable file names ... OK
* checking whether package 'cudasize' can be installed ... WARNING
Found the following significant warnings:
  Warning: c:/Program Files/R/R-3.0.1/bin/i386/cudasize.Rcheck/00_pkg_src/cudasize/man/f1.Rd:33: unexpected '{'
  Warning: c:/Program Files/R/R-3.0.1/bin/i386/cudasize.Rcheck/00_pkg_src/cudasize/man/f1.Rd:37: unexpected '}'
  Warning: c:/Program Files/R/R-3.0.1/bin/i386/cudasize.Rcheck/00_pkg_src/cudasize/man/f1.Rd:31: All text must be in a section
  Warning: c:/Program Files/R/R-3.0.1/bin/i386/cudasize.Rcheck/00_pkg_src/cudasize/man/f1.Rd:32: All text must be in a section
  Warning: c:/Program Files/R/R-3.0.1/bin/i386/cudasize.Rcheck/00_pkg_src/cudasize/man/f1.Rd:34: All text must be in a section
  Warning: c:/Program Files/R/R-3.0.1/bin/i386/cudasize.Rcheck/00_pkg_src/cudasize/man/f1.Rd:35: All text must be in a section
  Warning: c:/Program Files/R/R-3.0.1/bin/i386/cudasize.Rcheck/00_pkg_src/cudasize/man/f1.Rd:36: All text must be in a section
See 'c:/Program Files/R/R-3.0.1/bin/i386/cudasize.Rcheck/00install.out' for details.
* checking installed package size ... OK
* checking package directory ... OK
* checking DESCRIPTION meta-information ... OK
* checking top-level files ... OK
* checking for left-over files ... OK
* checking index information ... OK
* checking package subdirectories ... OK
* checking R files for non-ASCII characters ... OK
* checking R files for syntax errors ... OK
* checking whether the package can be loaded ... OK
* checking whether the package can be loaded with stated dependencies ... OK
* checking whether the package can be unloaded cleanly ... OK
* checking whether the namespace can be loaded with stated dependencies ... OK
* checking whether the namespace can be unloaded cleanly ... OK
* checking loading without being on the library search path ... OK
* checking for unstated dependencies in R code ... OK
* checking S3 generic/method consistency ... OK
* checking replacement functions ... OK
* checking foreign function calls ... OK
* checking R code for possible problems ... OK
* checking Rd files ... WARNING
prepare_Rd: f1.Rd:33: unexpected '{'
prepare_Rd: f1.Rd:37: unexpected '}'
prepare_Rd: f1.Rd:31: All text must be in a section
prepare_Rd: f1.Rd:32: All text must be in a section
prepare_Rd: f1.Rd:34: All text must be in a section
prepare_Rd: f1.Rd:35: All text must be in a section
prepare_Rd: f1.Rd:36: All text must be in a section
* checking Rd metadata ... OK
* checking Rd cross-references ... OK
* checking for missing documentation entries ... OK
* checking for code/documentation mismatches ... OK
* checking Rd \usage sections ... OK
* checking Rd contents ... OK
* checking for unstated dependencies in examples ... OK
* checking line endings in C/C++/Fortran sources/headers ... OK
* checking line endings in Makefiles ... OK
* checking for portable use of $(BLAS_LIBS) and $(LAPACK_LIBS) ... OK
* checking compiled code ... OK
* checking examples ... ERROR
Running examples in 'cudasize-Ex.R' failed
The error most likely occurred in:

> ### Name: cudasize-package
> ### Title: test for cuda
> ### Aliases: cudasize-package cudasize
> ### Keywords: package
> 
> ### ** Examples
> 
> require(cudasize)
> z <- .Call("cuda4",1L,"5")
Error in .Call("cuda4", 1L, "5") : 
  C symbol name "cuda4" not in load table
Execution halted

c:\Program Files\R\R-3.0.1\bin\i386>

The updated cuda4.dll and symbols.rd files are in cudasize.Rcheck/00_pkg/cudasize/src

Yet again, any help truly appreciated.

Sincerely,
Erin



________________________________________
From: Duncan Temple Lang [dtemplelang at ucdavis.edu]
Sent: Thursday, July 18, 2013 3:08 PM
To: Hodgess, Erin
Cc: r-devel at r-project.org
Subject: Re: [Rd] question about Makeconf and nvcc/CUDA

Hi Erin

See the code below.

Basically, I have created a new routine that you will
call from R as

 .C("cuda4", 1L, "5")

where 1L is the number of arguments you are passing and "5" is the character vector of arguments.

We are using .C() here for simplicity. For other cases involving data, .Call() would be better.

That cuda4 routines is now not name-mangled, and has the correct parameter types and return type
to be called via the .C().
The good thing is this has nothing to do with CUDA, but just calling C++ routines from R.


This illustrates that there are complexities here with different devices, languages, etc.
This is one of the reasons a high-level interface to calling kernels is simpler and
more flexible.

The following R only code invokes the kernel on actual data we have in R (x).

# Put the square_array routine only in a file named, erinHodgess.cu
# add extern "C" before the square_array routine

  # generate the PTX code
f = nvcc("erinHodgess.cu")

  # load the PTX code
mod = loadModule(f)

  # Invoke the PTX code
x = rnorm(100000)
ans = .gpu(mod$square_array, x, length(x), gridBy = x)

all.equal(x*x, ans)


  D.

////////////////////////////////


#include <stdio.h>
#include <cuda.h>

// Kernel that executes on the CUDA device
extern "C"
__global__ void square_array(float *a, int N)
{
  int idx = blockIdx.x * blockDim.x + threadIdx.x;
  if (idx<N) a[idx] = a[idx] * a[idx];
}

// main routine that executes on the host
void stuff(int argc, char **argv)
{
  float *a_h, *a_d;  // Pointer to host & device arrays
  int N = atoi(argv[1]);
//  const int N = 10;   Number of elements in arrays
  size_t size = N * sizeof(float);
  a_h = (float *)malloc(size);        // Allocate array on host
  cudaMalloc((void **) &a_d, size);   // Allocate array on device
  // Initialize host array and copy it to CUDA device
  for (int i=0; i<N; i++) a_h[i] = (float)i;
  cudaMemcpy(a_d, a_h, size, cudaMemcpyHostToDevice);
  // Do calculation on device:
  int block_size = 4;
  int n_blocks = N/block_size + (N%block_size == 0 ? 0:1);
  square_array <<< n_blocks, block_size >>> (a_d, N);
  // Retrieve result from device and store it in host array
  cudaMemcpy(a_h, a_d, sizeof(float)*N, cudaMemcpyDeviceToHost);
  // Print results
  for (int i=0; i<N; i++) printf("%d %f\n", i, a_h[i]);
  // Cleanup
  free(a_h); cudaFree(a_d);
}

extern "C"
void
cuda4(int *nels, char **els)
{
   stuff(*nels, els);
}


On 7/18/13 12:46 PM, Hodgess, Erin wrote:
> Hi again.
>
> I put in the extern statement.
>
> However, I'm not sure what you mean by changing the signature, please.
>
> I changed out the routine name from "stuff" to "cuda4" in the cuda4.cu program.
>
> Still getting:
>
>> library(cudasize)
> library(cudasize)
>
>>
>
>> .C("cuda4",as.character(5))
> .C("cuda4",as.character(5))
> Error in .C("cuda4", as.character(5)) :
>   C symbol name "cuda4" not in load table
> Execution halted
>
> c:\Program Files\R\R-3.0.1\bin\i386>
>
> I still want to keep at it.
>
> Thanks so much for all of your help!!!
>
> Erin
>
> ________________________________________
> From: Duncan Temple Lang [dtemplelang at ucdavis.edu]
> Sent: Thursday, July 18, 2013 1:09 PM
> To: Hodgess, Erin
> Cc: r-devel at r-project.org
> Subject: Re: [Rd] question about Makeconf and nvcc/CUDA
>
> Hi Erin
>
> It appears that there is only one file in src that is compile, i.e. cuda4.cu.
>
> That does not contain a routine named cuda4, which is what you are trying to invoke
> via the .Call("cuda4") expression.
>
> Instead, it contains two routines - one kernel square_array which runs
> on the GPU, and the routine stuff.
>
> To be able to call the stuff() routine from R, you would have to
> a)  add
>       extern "C"
>     before its definition/declaration so that its name is not mangled by nvcc
>
> b)  change its signature so that it can be invoked via a .Call() or alternatively
>     a .C().
>
>  I would create another routine that acts as an intermediate routine
> called from R that then calls stuff().
>
> This assumes that what you showed us of cuda4.cu is all there is in it.
>    D.
>
> On 7/18/13 11:01 AM, Hodgess, Erin wrote:
>> Hi again:
>>
>> Here is another problem that I am having.  Hope this will be the last one.  I really want to see if I can put it together.  Sorry for belaboring the issue.
>>
>> Well, here is my story:
>>
>> c:\Program Files\R\R-3.0.1\bin\i386>R CMD build cudasize
>> R CMD build cudasize
>> * checking for file 'cudasize/DESCRIPTION' ... OK
>> * preparing 'cudasize':
>> * checking DESCRIPTION meta-information ... OK
>> * cleaning src
>> Warning: C:/Users/erin/AppData/Local/Temp/RtmpOKsfga/Rbuild22e066bf13fb/cudasize/man/f1.Rd:33: unexpected '{'
>> Warning: C:/Users/erin/AppData/Local/Temp/RtmpOKsfga/Rbuild22e066bf13fb/cudasize/man/f1.Rd:37: unexpected '}'
>> * checking for LF line-endings in source and make files
>> * checking for empty or unneeded directories
>> * building 'cudasize_1.0.tar.gz'
>>
>>
>> c:\Program Files\R\R-3.0.1\bin\i386>R CMD INSTALL --no-multiarch cudasize_1.0.tar.gz
>> R CMD INSTALL --no-multiarch cudasize_1.0.tar.gz
>> * installing to library 'c:/myRlib'
>> * installing *source* package 'cudasize' ...
>> ** libs
>> nvcc -m32 --shared -o cuda4.dll cuda4.cu
>> cuda4.cu
>> tmpxft_000012fc_00000000-5_cuda4.cudafe1.gpu
>> tmpxft_000012fc_00000000-10_cuda4.cudafe2.gpu
>> cuda4.cu
>> tmpxft_000012fc_00000000-5_cuda4.cudafe1.cpp
>> tmpxft_000012fc_00000000-15_cuda4.ii
>> installing to c:/myRlib/cudasize/libs/i386
>> ** R
>> ** preparing package for lazy loading
>> ** help
>> Warning: C:/Users/erin/AppData/Local/Temp/RtmpKSm696/R.INSTALL7fc517f4e58/cudasize/man/f1.Rd:33: unexpected '{'
>> Warning: C:/Users/erin/AppData/Local/Temp/RtmpKSm696/R.INSTALL7fc517f4e58/cudasize/man/f1.Rd:37: unexpected '}'
>> Warning: C:/Users/erin/AppData/Local/Temp/RtmpKSm696/R.INSTALL7fc517f4e58/cudasize/man/f1.Rd:31: All text must be in a section
>> Warning: C:/Users/erin/AppData/Local/Temp/RtmpKSm696/R.INSTALL7fc517f4e58/cudasize/man/f1.Rd:32: All text must be in a section
>> Warning: C:/Users/erin/AppData/Local/Temp/RtmpKSm696/R.INSTALL7fc517f4e58/cudasize/man/f1.Rd:34: All text must be in a section
>> Warning: C:/Users/erin/AppData/Local/Temp/RtmpKSm696/R.INSTALL7fc517f4e58/cudasize/man/f1.Rd:35: All text must be in a section
>> Warning: C:/Users/erin/AppData/Local/Temp/RtmpKSm696/R.INSTALL7fc517f4e58/cudasize/man/f1.Rd:36: All text must be in a section
>> *** installing help indices
>> ** building package indices
>> ** testing if installed package can be loaded
>> * DONE (cudasize)
>>
>> c:\Program Files\R\R-3.0.1\bin\i386>R --vanilla
>> R --vanilla
>>
>> R version 3.0.1 (2013-05-16) -- "Good Sport"
>> Copyright (C) 2013 The R Foundation for Statistical Computing
>> Platform: i386-w64-mingw32/i386 (32-bit)
>>
>> R is free software and comes with ABSOLUTELY NO WARRANTY.
>> You are welcome to redistribute it under certain conditions.
>> Type 'license()' or 'licence()' for distribution details.
>>
>> R is a collaborative project with many contributors.
>> Type 'contributors()' for more information and
>> 'citation()' on how to cite R or R packages in publications.
>>
>> Type 'demo()' for some demos, 'help()' for on-line help, or
>> 'help.start()' for an HTML browser interface to help.
>> Type 'q()' to quit R.
>>
>>> library(cudasize)
>> library(cudasize)
>>> f1
>> f1
>> function (x)
>> {
>>     y <- .Call("cuda4", as.character(x))
>>     return(y)
>> }
>> <environment: namespace:cudasize>
>>> f1(2)
>> f1(2)
>> Error in .Call("cuda4", as.character(x)) :
>>   "cuda4" not resolved from current namespace (cudasize)
>> Calls: f1 -> .Call
>> Execution halted
>>
>> Here is the Makevars.win file
>>
>> cuda4.dll:
>>       nvcc -m32 --shared -o cuda4.dll cuda4.cu
>>
>> And finally, the program itself:
>>
>>
>> #include <stdio.h>
>> #include <cuda.h>
>>
>> // Kernel that executes on the CUDA device
>> __global__ void square_array(float *a, int N)
>> {
>>   int idx = blockIdx.x * blockDim.x + threadIdx.x;
>>   if (idx<N) a[idx] = a[idx] * a[idx];
>> }
>>
>> // main routine that executes on the host
>> void  stuff(int argc, char **argv)
>> {
>>   float *a_h, *a_d;  // Pointer to host & device arrays
>>   int N = atoi(argv[1]);
>> //  const int N = 10;   Number of elements in arrays
>>   size_t size = N * sizeof(float);
>>   a_h = (float *)malloc(size);        // Allocate array on host
>>   cudaMalloc((void **) &a_d, size);   // Allocate array on device
>>   // Initialize host array and copy it to CUDA device
>>   for (int i=0; i<N; i++) a_h[i] = (float)i;
>>   cudaMemcpy(a_d, a_h, size, cudaMemcpyHostToDevice);
>>   // Do calculation on device:
>>   int block_size = 4;
>>   int n_blocks = N/block_size + (N%block_size == 0 ? 0:1);
>>   square_array <<< n_blocks, block_size >>> (a_d, N);
>>   // Retrieve result from device and store it in host array
>>   cudaMemcpy(a_h, a_d, sizeof(float)*N, cudaMemcpyDeviceToHost);
>>   // Print results
>>   for (int i=0; i<N; i++) printf("%d %f\n", i, a_h[i]);
>>   // Cleanup
>>   free(a_h); cudaFree(a_d);
>> }
>>
>> Any suggestions would be appreciated.
>>
>> Thanks,
>> Erin
>>
>> ________________________________________
>> From: r-devel-bounces at r-project.org [r-devel-bounces at r-project.org] on behalf of Duncan Temple Lang [dtemplelang at ucdavis.edu]
>> Sent: Thursday, July 18, 2013 9:16 AM
>> To: r-devel at r-project.org
>> Subject: Re: [Rd] question about Makeconf and nvcc/CUDA
>>
>> Hi Erin
>>
>>  Glad you are making progress on this with Brian's help.
>>
>>  I thought I would mention a different approach that might save you some
>> programming time and actually make the code more flexible at the same time.
>> Basically, in a high-level language like R, it is nice to keep the code
>> calling a GPU kernel also high-level rather than writing code in C/C++
>> to do the transfer of data to and from the CPU and GPU.
>>
>> Simon's OpenCL package (on CRAN) and the new RCUDA package (www.omegahat.org/RCUDA)
>> allow us to load and invoke kernels directly from R.
>> These provide more flexibility for invoking GPU kernels from R than fixed C/C++ code.
>>
>> RCUDA provides an interface to almost all of the CUDA API and so allows us to transfer
>> values from R to the GPU and back (in different ways), invoke kernels asynchronously, etc.
>> I haven't built the package on Windows yet, but may be able to get to that in the next
>> few days.
>>
>> With a Windows binary of RCUDA (or OpenCL), you would be able to skip nvcc in your
>> package by  compiling the kernel code generically so that it contains code for GPUs
>> with different  capabilities (e.g. sm_20, sm_30, sm_35).
>>
>> In the last few days, I have also managed to compile very simple R code
>> directly in R to PTX code that we can load and invoke using RCUDA.
>> The compilation uses the Rllvm and RLLVMCompile packages. So in the
>> future, I expect we will be able to compile simple R functions
>> to native and PTX code.
>>
>>  D.
>>
>> On 7/17/13 11:45 PM, Hodgess, Erin wrote:
>>> Dear R development:
>>>
>>>
>>>
>>> I'm not sure if this is the appropriate list, but it's a start.
>>>
>>>
>>>
>>> I would like to put together a package which contains a CUDA program on Windows 7.  I believe that it has to do with the Makeconf file in the etc directory.
>>>
>>>
>>>
>>> But when I just use the nvcc with the shared option, I can use the dyn.load command, but when I use the is.loaded function, it shows FALSE.
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>> Here are the results of the check command:
>>>
>>>
>>>
>>> c:\PROGRA~1\R\R-3.0.1\bin\i386>R CMD check cudasize
>>> R CMD check cudasize
>>> * using log directory 'c:/PROGRA~1/R/R-3.0.1/bin/i386/cudasize.Rcheck'
>>> * using R version 3.0.1 (2013-05-16)
>>> * using platform: i386-w64-mingw32 (32-bit)
>>> * using session charset: ISO8859-1
>>> * checking for file 'cudasize/DESCRIPTION' ... OK
>>> * checking extension type ... Package
>>> * this is package 'cudasize' version '1.0'
>>> * checking package namespace information ... OK
>>> * checking package dependencies ... OK
>>> * checking if this is a source package ... OK
>>> * checking if there is a namespace ... OK
>>> * checking for executable files ... OK
>>> * checking for hidden files and directories ... OK
>>> * checking for portable file names ... OK
>>> * checking whether package 'cudasize' can be installed ... ERROR
>>> Installation failed.
>>> See 'c:/PROGRA~1/R/R-3.0.1/bin/i386/cudasize.Rcheck/00install.out' for details.
>>>
>>> And the 00install.out file:
>>>
>>> * installing *source* package 'cudasize' ...
>>>
>>> ** libs
>>>
>>>
>>>
>>> *** arch - i386
>>>
>>> cygwin warning:
>>>   MS-DOS style path detected: c:/PROGRA~1/R/R-30~1.1/etc/i386/Makeconf
>>>   Preferred POSIX equivalent is: /cygdrive/c/PROGRA~1/R/R-30~1.1/etc/i386/Makeconf
>>>   CYGWIN environment variable option "nodosfilewarning" turns off this warning.
>>>   Consult the user's guide for more details about POSIX paths:
>>>     http://cygwin.com/cygwin-ug-net/using.html#using-pathnames
>>> cygwin warning:
>>>   MS-DOS style path detected: c:/PROGRA~1/R/R-30~1.1/etc/i386/Makeconf
>>>   Preferred POSIX equivalent is: /cygdrive/c/PROGRA~1/R/R-30~1.1/etc/i386/Makeconf
>>>   CYGWIN environment variable option "nodosfilewarning" turns off this warning.
>>>   Consult the user's guide for more details about POSIX paths:
>>>     http://cygwin.com/cygwin-ug-net/using.html#using-pathnames
>>> make: `symbols.rds' is up to date.
>>> ERROR: compilation failed for package 'cudasize'
>>>
>>> * removing 'c:/PROGRA~1/R/R-3.0.1/bin/i386/cudasize.Rcheck/cudasize'
>>>
>>>
>>>
>>> I've been experimenting with the Makeconf file, but to no avail.
>>>
>>>
>>>
>>> Does anyone have any suggestions, please?
>>>
>>>
>>>
>>> Thanks,
>>>
>>> Erin
>>>
>>>
>>>
>>>       [[alternative HTML version deleted]]
>>>
>>> ______________________________________________
>>> R-devel at r-project.org mailing list
>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>>
>>
>> ______________________________________________
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>


From skostysh at princeton.edu  Fri Jul 19 08:54:30 2013
From: skostysh at princeton.edu (Scott Kostyshak)
Date: Fri, 19 Jul 2013 02:54:30 -0400
Subject: [Rd] R CMD check --outdir=path gives unknown option '--outdir'
In-Reply-To: <CAFDcVCQ_ZkQpC=f6CL2L_1sOMrU6nfP1nHE2BKme+ouGsmpVbA@mail.gmail.com>
References: <CAFDcVCQ_ZkQpC=f6CL2L_1sOMrU6nfP1nHE2BKme+ouGsmpVbA@mail.gmail.com>
Message-ID: <CAE3=dmfa=ptGbnMoxw2D1HExMQF2j4OXfSczqUCp9d7f=dH3eQ@mail.gmail.com>

On Thu, Apr 4, 2013 at 2:06 PM, Henrik Bengtsson <hb at biostat.ucsf.edu> wrote:
> For 'R CMD check', it appears that option '--outdir' is not recognized
> and generates warning "unknown option '--outdir'". R CMD check --help
> says:
>
> Usage: R CMD check [options] pkgs
> [...]
> Options:
> [...]
>   -o, --outdir=DIR      directory used for logfiles, R output, etc.
>                         (default is 'pkg.Rcheck' in current directory,
>                         where 'pkg' is the name of the package checked)
>
> Example:
>
> mkdir foo
>
> # Check output is written to foo/
> R CMD check -o foo pkg_0.1.tar.gz
>
> # Option is ignored and check output is written to bar.Rcheck/
> R CMD check --outdir=foo pkg_0.1.tar.gz
> Warning: unknown option '--outdir=foo'
>
> # Also tried with:
> R CMD check --outdir foo pkg_0.1.tar.gz
> Warning: unknown option '--outdir'
>
> R CMD check -outdir=foo pkg_0.1.tar.gz
> Warning: unknown option '-outdir=foo'
>
> R CMD check -outdir foo pkg_0.1.tar.gz
> Warning: unknown option '-outdir'
>
> I get this with:
>
>> sessionInfo()
> R version 3.0.0 (2013-04-03)
> Platform: x86_64-w64-mingw32/x64 (64-bit)
>
>> sessionInfo()
> R Under development (unstable) (2013-04-02 r62479)
> Platform: x86_64-w64-mingw32/x64 (64-bit)
>
>> sessionInfo()
> R version 2.15.3 (2013-03-01)
> Platform: x86_64-unknown-linux-gnu (64-bit)

I see the same behavior on 3.0.1 (pre-compiled binaries on Ubuntu
12.04 and 13.04).

> sessionInfo()
R version 3.0.1 (2013-05-16)
Platform: x86_64-pc-linux-gnu (64-bit)

locale:
 [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C
 [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8
 [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8
 [7] LC_PAPER=C                 LC_NAME=C
 [9] LC_ADDRESS=C               LC_TELEPHONE=C
[11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C

attached base packages:
[1] stats     graphics  grDevices utils     datasets  methods   base

> Should I report this to http://bugs.r-project.org/?

Did you? If not, please do (or tell me to if you don't have time). I
see nothing in News.Rd on trunk.

Scott


--
Scott Kostyshak
Economics PhD Candidate
Princeton University


From ripley at stats.ox.ac.uk  Fri Jul 19 09:04:15 2013
From: ripley at stats.ox.ac.uk (Prof Brian Ripley)
Date: Fri, 19 Jul 2013 08:04:15 +0100
Subject: [Rd] R CMD check --outdir=path gives unknown option '--outdir'
In-Reply-To: <CAE3=dmfa=ptGbnMoxw2D1HExMQF2j4OXfSczqUCp9d7f=dH3eQ@mail.gmail.com>
References: <CAFDcVCQ_ZkQpC=f6CL2L_1sOMrU6nfP1nHE2BKme+ouGsmpVbA@mail.gmail.com>
	<CAE3=dmfa=ptGbnMoxw2D1HExMQF2j4OXfSczqUCp9d7f=dH3eQ@mail.gmail.com>
Message-ID: <51E8E4EF.9090108@stats.ox.ac.uk>

So please follow the posting guide at 
http://www.r-project.org/posting-guide.html, to wit

'f you are using an old version of R and think it does not work 
properly, upgrade to the latest version and try that, before posting. If 
possible, try the current R-patched or R-devel version of R (see the FAQ 
for details), to see if the problem has already been addressed.'

It has been.


On 19/07/2013 07:54, Scott Kostyshak wrote:
> On Thu, Apr 4, 2013 at 2:06 PM, Henrik Bengtsson <hb at biostat.ucsf.edu> wrote:
>> For 'R CMD check', it appears that option '--outdir' is not recognized
>> and generates warning "unknown option '--outdir'". R CMD check --help
>> says:
>>
>> Usage: R CMD check [options] pkgs
>> [...]
>> Options:
>> [...]
>>    -o, --outdir=DIR      directory used for logfiles, R output, etc.
>>                          (default is 'pkg.Rcheck' in current directory,
>>                          where 'pkg' is the name of the package checked)
>>
>> Example:
>>
>> mkdir foo
>>
>> # Check output is written to foo/
>> R CMD check -o foo pkg_0.1.tar.gz
>>
>> # Option is ignored and check output is written to bar.Rcheck/
>> R CMD check --outdir=foo pkg_0.1.tar.gz
>> Warning: unknown option '--outdir=foo'
>>
>> # Also tried with:
>> R CMD check --outdir foo pkg_0.1.tar.gz
>> Warning: unknown option '--outdir'
>>
>> R CMD check -outdir=foo pkg_0.1.tar.gz
>> Warning: unknown option '-outdir=foo'
>>
>> R CMD check -outdir foo pkg_0.1.tar.gz
>> Warning: unknown option '-outdir'
>>
>> I get this with:
>>
>>> sessionInfo()
>> R version 3.0.0 (2013-04-03)
>> Platform: x86_64-w64-mingw32/x64 (64-bit)
>>
>>> sessionInfo()
>> R Under development (unstable) (2013-04-02 r62479)
>> Platform: x86_64-w64-mingw32/x64 (64-bit)
>>
>>> sessionInfo()
>> R version 2.15.3 (2013-03-01)
>> Platform: x86_64-unknown-linux-gnu (64-bit)
>
> I see the same behavior on 3.0.1 (pre-compiled binaries on Ubuntu
> 12.04 and 13.04).
>
>> sessionInfo()
> R version 3.0.1 (2013-05-16)
> Platform: x86_64-pc-linux-gnu (64-bit)
>
> locale:
>   [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C
>   [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8
>   [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8
>   [7] LC_PAPER=C                 LC_NAME=C
>   [9] LC_ADDRESS=C               LC_TELEPHONE=C
> [11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C
>
> attached base packages:
> [1] stats     graphics  grDevices utils     datasets  methods   base
>
>> Should I report this to http://bugs.r-project.org/?
>
> Did you? If not, please do (or tell me to if you don't have time). I
> see nothing in News.Rd on trunk.
>
> Scott
>
>
> --
> Scott Kostyshak
> Economics PhD Candidate
> Princeton University
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>


-- 
Brian D. Ripley,                  ripley at stats.ox.ac.uk
Professor of Applied Statistics,  http://www.stats.ox.ac.uk/~ripley/
University of Oxford,             Tel:  +44 1865 272861 (self)
1 South Parks Road,                     +44 1865 272866 (PA)
Oxford OX1 3TG, UK                Fax:  +44 1865 272595


From skostysh at princeton.edu  Fri Jul 19 09:25:43 2013
From: skostysh at princeton.edu (Scott Kostyshak)
Date: Fri, 19 Jul 2013 03:25:43 -0400
Subject: [Rd] R CMD check --outdir=path gives unknown option '--outdir'
In-Reply-To: <51E8E4EF.9090108@stats.ox.ac.uk>
References: <CAFDcVCQ_ZkQpC=f6CL2L_1sOMrU6nfP1nHE2BKme+ouGsmpVbA@mail.gmail.com>
	<CAE3=dmfa=ptGbnMoxw2D1HExMQF2j4OXfSczqUCp9d7f=dH3eQ@mail.gmail.com>
	<51E8E4EF.9090108@stats.ox.ac.uk>
Message-ID: <CAE3=dmcEW-QWLUP-XyDs1ZsYJDzHs9hmwsHUpO6oahbTBXugPA@mail.gmail.com>

On Fri, Jul 19, 2013 at 3:04 AM, Prof Brian Ripley
<ripley at stats.ox.ac.uk> wrote:
> So please follow the posting guide at
> http://www.r-project.org/posting-guide.html, to wit
>
> 'f you are using an old version of R and think it does not work properly,
> upgrade to the latest version and try that, before posting. If possible, try
> the current R-patched or R-devel version of R (see the FAQ for details), to
> see if the problem has already been addressed.'

OK.

> It has been.

Thanks,

Scott


--
Scott Kostyshak
Economics PhD Candidate
Princeton University


From skostysh at princeton.edu  Fri Jul 19 09:34:20 2013
From: skostysh at princeton.edu (Scott Kostyshak)
Date: Fri, 19 Jul 2013 03:34:20 -0400
Subject: [Rd] Posting Guide: changed link and other comment
Message-ID: <CAE3=dmcZM1abcKP1KrQA=+Vgq2gqXEYTnesbQmG3tXTBxXDUFg@mail.gmail.com>

I have two comments regarding the Posting Guide:

(1) The link in the following sentence did not work for me:

    Take care when you quote other people's comments to respect their
rights, e.g., as summarized here[a].

[a] http://www.jiscmail.ac.uk/help/policy/copyright.htm

Has it been changed to the following?
  http://www.jiscmail.ac.uk/policyandsecurity/copyrightissues.html

(2) Regarding the following extract

  `If you feel insulted by some response to a post of yours, don't
make any hasty response in return - you're as likely as not to regret
it.'

wouldn't someone who is `as likely as not to regret it' be indifferent
between sending a hasty response and not sending a hasty response? The
intent is perfectly clear but perhaps `you're _more_ likely than not'
is a more probabilistically correct expression?

Thanks for the helpful document -- it is useful reading for this list
as well as more generally.

Scott


--
Scott Kostyshak
Economics PhD Candidate
Princeton University


From sleepingwell at gmail.com  Fri Jul 19 11:33:20 2013
From: sleepingwell at gmail.com (Simon Knapp)
Date: Fri, 19 Jul 2013 19:33:20 +1000
Subject: [Rd] Problem with distributing data in package.
Message-ID: <CAA+5f=37MX2EbP3S1G53cpK2dSSSLb6YWG+QyEVaQznuj9ZgsQ@mail.gmail.com>

Hi List,

I am building a package for a client to help them create and perform
analyses against netcdf files which contain 'a temporal stack' of
grids.

For my examples and test cases, I create an example dataset in code
(as this is a lot more space efficient than providing raw data). The
code creates a netcdf file in tempdir() and an object of class 'ncdf'
in the global namespace. I have placed the code in a .R file in the
data directory of my package and 'load' it with a call to data().

My problem
-----------------
When I build the package, the code gets executed during the build
process, the netcdf file gets created in tempdir() and the 'ncdf'
object gets saved to a .rda file in the package... which is not very
useful, since when I call data() the object gets loaded but the netcdf
file is not present (further, the 'ncdf' object includes the path to
the netcdf file - in my tempdir()).

My question
------------------
Is there a way to circumvent the creation of the .rda file and build
the package such that it contains the .R files instead (I note that
this is what appears to happen with a binary build for windows)? If
not, then is there another 'R-ish' way to achieve a similar result?

Just in case it is useful, I have included the code I use to build the
netcdf file and 'ncdf' object below.

Thanks in advance,
Simon Knapp


#--------------------------R code starts here--------------------------
# create a netcdf file holding a 'temporal stack'
combined.ncdf <- with(new.env(), {
    require(ncdf)
    nLat <- 7
    nLon <- 8
    nTime <- 9
    missing.val <- -999
    filename <- file.path(tempdir(), 'combined_d6fg4s64s6g4l.nc')
    lat.dim <- dim.def.ncdf('lat', 'degrees', 1:nLat)
    lon.dim <- dim.def.ncdf('lon', 'degrees', 1:nLon)
    time.dim <- dim.def.ncdf("time", "days since 1970-01-01",
as.integer(1:nTime), unlim=T)
    var.def <- var.def.ncdf('Data', 'mm', list(lon.dim, lat.dim,
time.dim), missing.val, prec='single')
    nc <- create.ncdf(filename, var.def)
    for(i in 1:nLon)
        for(j in 1:nLat)
            for(k in 1:nTime)
                put.var.ncdf(nc, var.def, i + j*10 + k*100, c(i, j,
k), rep(1, 3))
    close.ncdf(nc) # seems to be required.
    open.ncdf(filename)
})


From ravi.varadhan at jhu.edu  Thu Jul 18 16:23:37 2013
From: ravi.varadhan at jhu.edu (Ravi Varadhan)
Date: Thu, 18 Jul 2013 14:23:37 +0000
Subject: [Rd] Problem following an R bug fix to integrate()
In-Reply-To: <CAML4n3OT5FhJjY8Y+NBu4s2F2moL1VrBDGz7YMp=V=v49bdwoA@mail.gmail.com>
References: <CAML4n3P5tekMoE+k3287tm+BDy5DqqwK=bXx4j1shwEuAPeyQw@mail.gmail.com>
	<1374082630.2272.43.camel@braque.iarc.fr>
	<CAML4n3OT5FhJjY8Y+NBu4s2F2moL1VrBDGz7YMp=V=v49bdwoA@mail.gmail.com>
Message-ID: <2F9EA67EF9AE1C48A147CB41BE2E15C348A010@DOM-EB-MAIL1.win.ad.jhu.edu>

This, i.e. quadrature, is another area where the "default" or "base" R functionality needs enhancement, just like the functionality for optimization.  While `integrate' is good, it can be improved.  

Hans Werner, what routines do you use for quadrature?

Best,
Ravi

-----Original Message-----
From: r-devel-bounces at r-project.org [mailto:r-devel-bounces at r-project.org] On Behalf Of Hans W Borchers
Sent: Wednesday, July 17, 2013 3:36 PM
To: Martyn Plummer
Cc: r-devel at r-project.org
Subject: Re: [Rd] Problem following an R bug fix to integrate()

Thanks for the help.

What bothers me is that it works on most systems and does not work on some more 'exotic' systems -- though it should work everywhere however small the user chooses the tolerance (with some warnings, maybe).

I decided I will apply my own integration routines in this example as they appear to work more reliably.

Hans Werner


On Wed, Jul 17, 2013 at 7:37 PM, Martyn Plummer <plummerm at iarc.fr> wrote:
> On Tue, 2013-07-16 at 13:55 +0200, Hans W Borchers wrote:
>> I have been told by the CRAN administrators that the following code 
>> generated an error on 64-bit Fedora Linux (gcc, clang) and on Solaris 
>> machines (sparc, x86), but runs well on all other systems):
>>
>>     > fn <- function(x, y) ifelse(x^2 + y^2 <= 1, 1 - x^2 - y^2, 0)
>>
>>     > tol <- 1.5e-8
>>     > fy <- function(x) integrate(function(y) fn(x, y), 0, 1,
>>                             subdivisions = 300, rel.tol = tol)$value
>>     > Fy <- Vectorize(fy)
>>
>>     > xa <- -1; xb <- 1
>>     > Q  <- integrate(Fy, xa, xb,
>>                 subdivisions = 300, rel.tol = tol)$value
>>
>>     Error in integrate(Fy, xa, xb, subdivisions = 300, rel.tol = tol) :
>>     roundoff error was detected
>>
>> Obviously, this realizes a double integration, split up into two 
>> 1-dimensional integrations, and the result shall be pi/4. I wonder what a 'roundoff error'
>> means in this situation.
>>
>> In my package, this test worked well, w/o error or warnings, since 
>> July 2011, on Windows, Max OS X, and Ubuntu Linux. I have no chance 
>> to test it on one of the above mentioned systems. Of course, I can 
>> simply disable these tests, but I would not like to do so w/o good reason.
>>
>> If there is a connection to a bug fix to integrate(), with NEWS item
>>
>>     "integrate() reverts to the pre-2.12.0 behaviour.  (PR#15219)",
>>
>> then I do not understand what this pre-2.12.0 behavior really means.
>>
>> Thanks for any help or a hint to what shall be changed.
>
> You can see the bug report here:
>
> https://bugs.r-project.org/bugzilla3/show_bug.cgi?id=15219
>
> It concerns the behaviour of integrate with a small error tolerance.
> From 2.12.0 to 3.0.1 integrate was not working correctly with small 
> error tolerance values, in the sense that small values did not improve 
> accuracy and the accuracy was mis-reported.
>
> The tolerance in your example (1.5e-8) is considerably smaller than 
> the default (1.2e-4). My guess is that the rounding error always 
> existed but was not detected due to the bug.  You might try a larger 
> tolerance. I have tested your example and increasing the tolerance to 
> 1.5e-7 removes the error.
>
> Martyn
>
>
>> Hans W Borchers
>>
>> PS:
>> This kind of tricky definition in function 'fn' has caused some 
>> discussion on this list in July 2009. I still think it should be 
>> allowed to proceed in this way.
>>
>> ______________________________________________
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel
>
> ----------------------------------------------------------------------
> - This message and its attachments are strictly 
> confiden...{{dropped:8}}

______________________________________________
R-devel at r-project.org mailing list
https://stat.ethz.ch/mailman/listinfo/r-devel


From b.rowlingson at lancaster.ac.uk  Sat Jul 20 08:58:56 2013
From: b.rowlingson at lancaster.ac.uk (Barry Rowlingson)
Date: Sat, 20 Jul 2013 07:58:56 +0100
Subject: [Rd] Problem with distributing data in package.
In-Reply-To: <40021026bf894a17a9db5f6c883ba0f6@EX-1-HT0.lancs.local>
References: <40021026bf894a17a9db5f6c883ba0f6@EX-1-HT0.lancs.local>
Message-ID: <CANVKczMVQjiY2LL2CsJvbYX4=jjDCXC9V-L28hqtyD9YKvy_PQ@mail.gmail.com>

On Fri, Jul 19, 2013 at 10:33 AM, Simon Knapp <sleepingwell at gmail.com> wrote:
> Hi List,
>
> I am building a package for a client to help them create and perform
> analyses against netcdf files which contain 'a temporal stack' of
> grids.
>
> For my examples and test cases, I create an example dataset in code
> (as this is a lot more space efficient than providing raw data). The
> code creates a netcdf file in tempdir() and an object of class 'ncdf'
> in the global namespace. I have placed the code in a .R file in the
> data directory of my package and 'load' it with a call to data().

 Why not just put the function that generates the data file into the
usual place (/R/ folder) and document it so that the user knows to run
'sampledata=makeSampleNCDF()' before doing things that need it?

 Trying to put executable code into the data folder does seem a bit perverse!

Barry


From sleepingwell at gmail.com  Sat Jul 20 13:01:25 2013
From: sleepingwell at gmail.com (Simon Knapp)
Date: Sat, 20 Jul 2013 21:01:25 +1000
Subject: [Rd] Problem with distributing data in package.
In-Reply-To: <CANVKczMVQjiY2LL2CsJvbYX4=jjDCXC9V-L28hqtyD9YKvy_PQ@mail.gmail.com>
References: <40021026bf894a17a9db5f6c883ba0f6@EX-1-HT0.lancs.local>
	<CANVKczMVQjiY2LL2CsJvbYX4=jjDCXC9V-L28hqtyD9YKvy_PQ@mail.gmail.com>
Message-ID: <CAA+5f=2aJ-LEVXrRiwr9B+wV5bRR90bjnfp8k6a7uxzPOJiXqA@mail.gmail.com>

Hi Barry,

Thanks for the response, your suggestion was going to be my 'work
around'... perhaps I took the second paragraph of section 1.1.5 of
R-exts.pdf the wrong way.

I'd be interested in knowing why there is a difference between the
data in a source package (.rda files) and windows binary package (.R
files) if anyone can tell me.

Thanks again,
Simon

On Sat, Jul 20, 2013 at 4:58 PM, Barry Rowlingson
<b.rowlingson at lancaster.ac.uk> wrote:
> On Fri, Jul 19, 2013 at 10:33 AM, Simon Knapp <sleepingwell at gmail.com> wrote:
>> Hi List,
>>
>> I am building a package for a client to help them create and perform
>> analyses against netcdf files which contain 'a temporal stack' of
>> grids.
>>
>> For my examples and test cases, I create an example dataset in code
>> (as this is a lot more space efficient than providing raw data). The
>> code creates a netcdf file in tempdir() and an object of class 'ncdf'
>> in the global namespace. I have placed the code in a .R file in the
>> data directory of my package and 'load' it with a call to data().
>
>  Why not just put the function that generates the data file into the
> usual place (/R/ folder) and document it so that the user knows to run
> 'sampledata=makeSampleNCDF()' before doing things that need it?
>
>  Trying to put executable code into the data folder does seem a bit perverse!
>
> Barry


From ripley at stats.ox.ac.uk  Sat Jul 20 19:25:39 2013
From: ripley at stats.ox.ac.uk (Prof Brian Ripley)
Date: Sat, 20 Jul 2013 18:25:39 +0100
Subject: [Rd] Problem with distributing data in package.
In-Reply-To: <CAA+5f=2aJ-LEVXrRiwr9B+wV5bRR90bjnfp8k6a7uxzPOJiXqA@mail.gmail.com>
References: <40021026bf894a17a9db5f6c883ba0f6@EX-1-HT0.lancs.local>
	<CANVKczMVQjiY2LL2CsJvbYX4=jjDCXC9V-L28hqtyD9YKvy_PQ@mail.gmail.com>
	<CAA+5f=2aJ-LEVXrRiwr9B+wV5bRR90bjnfp8k6a7uxzPOJiXqA@mail.gmail.com>
Message-ID: <51EAC813.8010305@stats.ox.ac.uk>

On 20/07/2013 12:01, Simon Knapp wrote:
> Hi Barry,
>
> Thanks for the response, your suggestion was going to be my 'work
> around'... perhaps I took the second paragraph of section 1.1.5 of
> R-exts.pdf the wrong way.
>
> I'd be interested in knowing why there is a difference between the
> data in a source package (.rda files) and windows binary package (.R
> files) if anyone can tell me.

We have little idea what you did.  Apparently you feel you are exempted 
from the request in the posting guide for a reproducible example.

At a wild guess, you did not understand the point of R CMD build 
--no-resave-data and did not want your data resaved as a .rda file (the 
documented default).  But there is no mention of running 'R CMD build' here.

>
> On Sat, Jul 20, 2013 at 4:58 PM, Barry Rowlingson
> <b.rowlingson at lancaster.ac.uk> wrote:
>> On Fri, Jul 19, 2013 at 10:33 AM, Simon Knapp <sleepingwell at gmail.com> wrote:
>>> Hi List,
>>>
>>> I am building a package for a client to help them create and perform
>>> analyses against netcdf files which contain 'a temporal stack' of
>>> grids.
>>>
>>> For my examples and test cases, I create an example dataset in code
>>> (as this is a lot more space efficient than providing raw data). The
>>> code creates a netcdf file in tempdir() and an object of class 'ncdf'
>>> in the global namespace. I have placed the code in a .R file in the
>>> data directory of my package and 'load' it with a call to data().
>>
>>   Why not just put the function that generates the data file into the
>> usual place (/R/ folder) and document it so that the user knows to run
>> 'sampledata=makeSampleNCDF()' before doing things that need it?
>>
>>   Trying to put executable code into the data folder does seem a bit perverse!

Actually, it seems to be *interpretable* R code in a .R file.

The help file for data() says:

Details:

      Currently, four formats of data files are supported:

        1. files ending ?.R? or ?.r? are ?source()?d in, with the R
           working directory changed temporarily to the directory
           containing the respective file.  (?data? ensures that the
           ?utils? package is attached, in case it had been run _via_
           ?utils::data?.)
...

and (in so far as we can tell without the requested example) that was 
the 'format' intended to be used.

>>
>> Barry


-- 
Brian D. Ripley,                  ripley at stats.ox.ac.uk
Professor of Applied Statistics,  http://www.stats.ox.ac.uk/~ripley/
University of Oxford,             Tel:  +44 1865 272861 (self)
1 South Parks Road,                     +44 1865 272866 (PA)
Oxford OX1 3TG, UK                Fax:  +44 1865 272595


From sleepingwell at gmail.com  Sun Jul 21 07:14:34 2013
From: sleepingwell at gmail.com (Simon Knapp)
Date: Sun, 21 Jul 2013 15:14:34 +1000
Subject: [Rd] Problem with distributing data in package.
In-Reply-To: <51EAC813.8010305@stats.ox.ac.uk>
References: <40021026bf894a17a9db5f6c883ba0f6@EX-1-HT0.lancs.local>
	<CANVKczMVQjiY2LL2CsJvbYX4=jjDCXC9V-L28hqtyD9YKvy_PQ@mail.gmail.com>
	<CAA+5f=2aJ-LEVXrRiwr9B+wV5bRR90bjnfp8k6a7uxzPOJiXqA@mail.gmail.com>
	<51EAC813.8010305@stats.ox.ac.uk>
Message-ID: <CAA+5f=38ef9Rj-2GOOFB_1z6WYd2Vm1KhX06a9jBJ_RxSY=RoQ@mail.gmail.com>

Hi Brian,

Thanks for the response. My original request contained the code that I
have placed in a file in the data directory, though this had been
removed in Barry's response. I have copied the original email below.
While I did mention "When I build the package" in that email, I did
not, however, state that I did this using the command:

R CMD build <package-name>

I apologise for being remiss. For my own education, is there anything
else I should have provided as part of a reproducible example?

I did not know there was an option --no-resave-data (I had not thought
to look at `R CMD build --help`, there is no mention of it in
R-exts.pdf and my ability to use Google is clearly lacking... though I
did try that), but it appears to be exactly what I need - Thankyou!

Kind Regards,
Simon Knapp




---------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------
start of original email
---------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------
Hi List,

I am building a package for a client to help them create and perform
analyses against netcdf files which contain 'a temporal stack' of
grids.

For my examples and test cases, I create an example dataset in code
(as this is a lot more space efficient than providing raw data). The
code creates a netcdf file in tempdir() and an object of class 'ncdf'
in the global namespace. I have placed the code in a .R file in the
data directory of my package and 'load' it with a call to data().

My problem
-----------------
When I build the package, the code gets executed during the build
process, the netcdf file gets created in tempdir() and the 'ncdf'
object gets saved to a .rda file in the package... which is not very
useful, since when I call data() the object gets loaded but the netcdf
file is not present (further, the 'ncdf' object includes the path to
the netcdf file - in my tempdir()).

My question
------------------
Is there a way to circumvent the creation of the .rda file and build
the package such that it contains the .R files instead (I note that
this is what appears to happen with a binary build for windows)? If
not, then is there another 'R-ish' way to achieve a similar result?

Just in case it is useful, I have included the code I use to build the
netcdf file and 'ncdf' object below.

Thanks in advance,
Simon Knapp


#--------------------------R code starts here--------------------------
# create a netcdf file holding a 'temporal stack'
combined.ncdf <- with(new.env(), {
    require(ncdf)
    nLat <- 7
    nLon <- 8
    nTime <- 9
    missing.val <- -999
    filename <- file.path(tempdir(), 'combined_d6fg4s64s6g4l.nc')
    lat.dim <- dim.def.ncdf('lat', 'degrees', 1:nLat)
    lon.dim <- dim.def.ncdf('lon', 'degrees', 1:nLon)
    time.dim <- dim.def.ncdf("time", "days since 1970-01-01",
as.integer(1:nTime), unlim=T)
    var.def <- var.def.ncdf('Data', 'mm', list(lon.dim, lat.dim,
time.dim), missing.val, prec='single')
    nc <- create.ncdf(filename, var.def)
    for(i in 1:nLon)
        for(j in 1:nLat)
            for(k in 1:nTime)
                put.var.ncdf(nc, var.def, i + j*10 + k*100, c(i, j,
k), rep(1, 3))
    close.ncdf(nc) # seems to be required.
    open.ncdf(filename)
})

---------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------
end of original email
---------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------





On Sun, Jul 21, 2013 at 3:25 AM, Prof Brian Ripley
<ripley at stats.ox.ac.uk> wrote:
> On 20/07/2013 12:01, Simon Knapp wrote:
>>
>> Hi Barry,
>>
>> Thanks for the response, your suggestion was going to be my 'work
>> around'... perhaps I took the second paragraph of section 1.1.5 of
>> R-exts.pdf the wrong way.
>>
>> I'd be interested in knowing why there is a difference between the
>> data in a source package (.rda files) and windows binary package (.R
>> files) if anyone can tell me.
>
>
> We have little idea what you did.  Apparently you feel you are exempted from
> the request in the posting guide for a reproducible example.
>
> At a wild guess, you did not understand the point of R CMD build
> --no-resave-data and did not want your data resaved as a .rda file (the
> documented default).  But there is no mention of running 'R CMD build' here.
>
>
>>
>> On Sat, Jul 20, 2013 at 4:58 PM, Barry Rowlingson
>> <b.rowlingson at lancaster.ac.uk> wrote:
>>>
>>> On Fri, Jul 19, 2013 at 10:33 AM, Simon Knapp <sleepingwell at gmail.com>
>>> wrote:
>>>>
>>>> Hi List,
>>>>
>>>> I am building a package for a client to help them create and perform
>>>> analyses against netcdf files which contain 'a temporal stack' of
>>>> grids.
>>>>
>>>> For my examples and test cases, I create an example dataset in code
>>>> (as this is a lot more space efficient than providing raw data). The
>>>> code creates a netcdf file in tempdir() and an object of class 'ncdf'
>>>> in the global namespace. I have placed the code in a .R file in the
>>>> data directory of my package and 'load' it with a call to data().
>>>
>>>
>>>   Why not just put the function that generates the data file into the
>>> usual place (/R/ folder) and document it so that the user knows to run
>>> 'sampledata=makeSampleNCDF()' before doing things that need it?
>>>
>>>   Trying to put executable code into the data folder does seem a bit
>>> perverse!
>
>
> Actually, it seems to be *interpretable* R code in a .R file.
>
> The help file for data() says:
>
> Details:
>
>      Currently, four formats of data files are supported:
>
>        1. files ending ?.R? or ?.r? are ?source()?d in, with the R
>           working directory changed temporarily to the directory
>           containing the respective file.  (?data? ensures that the
>           ?utils? package is attached, in case it had been run _via_
>           ?utils::data?.)
> ...
>
> and (in so far as we can tell without the requested example) that was the
> 'format' intended to be used.
>
>>>
>>> Barry
>
>
>
> --
> Brian D. Ripley,                  ripley at stats.ox.ac.uk
> Professor of Applied Statistics,  http://www.stats.ox.ac.uk/~ripley/
> University of Oxford,             Tel:  +44 1865 272861 (self)
> 1 South Parks Road,                     +44 1865 272866 (PA)
> Oxford OX1 3TG, UK                Fax:  +44 1865 272595


From maechler at stat.math.ethz.ch  Mon Jul 22 11:29:43 2013
From: maechler at stat.math.ethz.ch (Martin Maechler)
Date: Mon, 22 Jul 2013 11:29:43 +0200
Subject: [Rd] Posting Guide: changed link and other comment
In-Reply-To: <CAE3=dmcZM1abcKP1KrQA=+Vgq2gqXEYTnesbQmG3tXTBxXDUFg@mail.gmail.com>
References: <CAE3=dmcZM1abcKP1KrQA=+Vgq2gqXEYTnesbQmG3tXTBxXDUFg@mail.gmail.com>
Message-ID: <20972.64391.53097.700619@stat.math.ethz.ch>

>>>>> Scott Kostyshak <skostysh at princeton.edu>
>>>>>     on Fri, 19 Jul 2013 03:34:20 -0400 writes:

    > I have two comments regarding the Posting Guide:
    > (1) The link in the following sentence did not work for me:

    > Take care when you quote other people's comments to respect their
    > rights, e.g., as summarized here[a].

    > [a] http://www.jiscmail.ac.uk/help/policy/copyright.htm

    > Has it been changed to the following?
    > http://www.jiscmail.ac.uk/policyandsecurity/copyrightissues.html

    > (2) Regarding the following extract

    > `If you feel insulted by some response to a post of yours, don't
    > make any hasty response in return - you're as likely as not to regret
    > it.'

    > wouldn't someone who is `as likely as not to regret it' be indifferent
    > between sending a hasty response and not sending a hasty response? The
    > intent is perfectly clear but perhaps `you're _more_ likely than not'
    > is a more probabilistically correct expression?

    > Thanks for the helpful document -- it is useful reading for this list
    > as well as more generally.

Thank you, Scott.
I've made both amendments that you've proposed above.
The 2nd one is most probably more helpful for non-native English
readers/speakers may .. when it may be nice and better style for
some flavor of real English .. 

Martin

    > Scott


    > --
    > Scott Kostyshak
    > Economics PhD Candidate
    > Princeton University

    > ______________________________________________
    > R-devel at r-project.org mailing list
    > https://stat.ethz.ch/mailman/listinfo/r-devel


From maechler at stat.math.ethz.ch  Mon Jul 22 15:32:55 2013
From: maechler at stat.math.ethz.ch (Martin Maechler)
Date: Mon, 22 Jul 2013 15:32:55 +0200
Subject: [Rd] robustbase compilation problem: probably boneheaded? maybe
	32-bit?
In-Reply-To: <B3B0CB23-1E0F-4AD4-844D-692E4ED7B911@r-project.org>
References: <51DF7098.1080905@gmail.com>
	<B3B0CB23-1E0F-4AD4-844D-692E4ED7B911@r-project.org>
Message-ID: <20973.13447.726083.23370@stat.math.ethz.ch>

>>>>> Simon Urbanek <simon.urbanek at r-project.org>
>>>>>     on Thu, 11 Jul 2013 23:10:21 -0400 writes:

    > On Jul 11, 2013, at 10:57 PM, Ben Bolker wrote:

    >> 
    >> With a recent SVN build (R Under development (unstable) (2013-07-10
    >> r63264) -- "Unsuffered Consequences"), I'm having trouble installing the
    >> robustbase package.  The bottom line is that I *think* it's a
    >> 32-bit-system problem, but I could easily be mistaken.
    >> 

    > It's a bug in robustbase - it redefines R_xlen_t without checking the R version. I think the author's true intention was to make it conditional on R version for compatibility so it should be using R_VERSION and not LONG_VECTOR_SUPPORT since the latter is irrelevant here as R 3.0.0+ will have R_xlen_t regardless of the long vector support.

I'm about to upload a new version of robustbase 0.9-9 which
should fix this problem.

However, note that all the CRAN checks of robustbase,
nor my own checks, with R 2.15.1 and R-patched and R-devel,
on both 32-bit or 64-bit do *NOT* reproduce the problem you
report. 

Hence, I'm sending the tar file to Ben and someone else who
enquired in direct private e-mail the tarball of the source
package for robustbase, asking them to check if my changes fix
the problem.

    > Cheers,
    > Simon


    >> robustbase is passing its package checks:
    >> http://cran.r-project.org/web/checks/check_results_robustbase.html
    >> 
    >> ... but from the names of the targets it doesn't look like it is tested
    >> on 32-bit platforms?
    >> 
    >> The error is:
    >> 
    >> gcc -std=gnu99 -I/usr/local/lib/R/include -DNDEBUG  -I/usr/local/include
    >> -fpic  -g -O2  -c init.c -o init.o
    >> In file included from init.c:3:
    >> robustbase.h:20: error: redefinition of typedef ?R_xlen_t?
    >> /usr/local/lib/R/include/Rinternals.h:69: note: previous declaration of
    >> ?R_xlen_t? was here
    >> 
    >> As far as I can see there isn't any junk left over in my systems from
    >> previous installs.
    >> 
    >> Rinternals.h has
    >> 
    >> #ifdef LONG_VECTOR_SUPPORT
    >> typedef ptrdiff_t R_xlen_t;
    >> typedef struct { R_xlen_t lv_length, lv_truelength; } R_long_vec_hdr_t;
    >> # define R_XLEN_T_MAX 4503599627370496
    >> # define R_SHORT_LEN_MAX 2147483647
    >> # define R_LONG_VEC_TOKEN -1
    >> #else
    >> typedef int R_xlen_t;
    >> # define R_XLEN_T_MAX R_LEN_T_MAX
    >> #endif
    >> 
    >> while robustbase has
    >> 
    >> #ifndef LONG_VECTOR_SUPPORT
    >> # ifndef XLENGTH
    >> // for  R <= 2.15.x :
    >> #  define XLENGTH(x) LENGTH(x)
    >> typedef int R_xlen_t;
    >> # endif
    >> #endif
    >> 
    >> It seems the problem is that I have
    >> 
    >> #define SIZEOF_SIZE_T 4
    >> 
    >> in my config.log , which in turn turns off LONG_VECTOR_SUPPORT, which is
    >> otherwise (?) assumed only to be true for R<=2.15.x ... can this be
    >> because I'm on 32-bit Linux , or on old linux with gcc 4.4.3, or ... ?
    >> <http://stackoverflow.com/questions/918787/whats-sizeofsize-t-on-32-bit-vs-the-various-64-bit-data-models>
    >> 
    >> Can anyone confirm/enlighten me?
    >> 
    >> cheers
    >> Ben Bolker
    >> 
    >> ______________________________________________
    >> R-devel at r-project.org mailing list
    >> https://stat.ethz.ch/mailman/listinfo/r-devel
    >> 
    >>


From hpages at fhcrc.org  Mon Jul 22 21:04:04 2013
From: hpages at fhcrc.org (=?windows-1252?Q?Herv=E9_Pag=E8s?=)
Date: Mon, 22 Jul 2013 12:04:04 -0700
Subject: [Rd] Problem with distributing data in package.
In-Reply-To: <51EAC813.8010305@stats.ox.ac.uk>
References: <40021026bf894a17a9db5f6c883ba0f6@EX-1-HT0.lancs.local>
	<CANVKczMVQjiY2LL2CsJvbYX4=jjDCXC9V-L28hqtyD9YKvy_PQ@mail.gmail.com>
	<CAA+5f=2aJ-LEVXrRiwr9B+wV5bRR90bjnfp8k6a7uxzPOJiXqA@mail.gmail.com>
	<51EAC813.8010305@stats.ox.ac.uk>
Message-ID: <51ED8224.7000008@fhcrc.org>

Hi there,

On 07/20/2013 10:25 AM, Prof Brian Ripley wrote:
> On 20/07/2013 12:01, Simon Knapp wrote:
>> Hi Barry,
>>
>> Thanks for the response, your suggestion was going to be my 'work
>> around'... perhaps I took the second paragraph of section 1.1.5 of
>> R-exts.pdf the wrong way.
>>
>> I'd be interested in knowing why there is a difference between the
>> data in a source package (.rda files) and windows binary package (.R
>> files) if anyone can tell me.
>
> We have little idea what you did.  Apparently you feel you are exempted
> from the request in the posting guide for a reproducible example.
>
> At a wild guess, you did not understand the point of R CMD build
> --no-resave-data and did not want your data resaved as a .rda file (the
> documented default).  But there is no mention of running 'R CMD build'
> here.

Having the data resaved as a .rda file by default seems to defeat the
purpose of supporting executable code in the data folder. Maybe there
are good reasons for doing this on CRAN (and it's not even clear what
those reasons could be, since the size of the code that generates the
data is generally much smaller than the data it generates) but it would
probably make more sense to not have 'R CMD build' do this by default
and to let the author of the package be happy with its decision to
dynamically generate the data.

Thanks,
H.

>
>>
>> On Sat, Jul 20, 2013 at 4:58 PM, Barry Rowlingson
>> <b.rowlingson at lancaster.ac.uk> wrote:
>>> On Fri, Jul 19, 2013 at 10:33 AM, Simon Knapp
>>> <sleepingwell at gmail.com> wrote:
>>>> Hi List,
>>>>
>>>> I am building a package for a client to help them create and perform
>>>> analyses against netcdf files which contain 'a temporal stack' of
>>>> grids.
>>>>
>>>> For my examples and test cases, I create an example dataset in code
>>>> (as this is a lot more space efficient than providing raw data). The
>>>> code creates a netcdf file in tempdir() and an object of class 'ncdf'
>>>> in the global namespace. I have placed the code in a .R file in the
>>>> data directory of my package and 'load' it with a call to data().
>>>
>>>   Why not just put the function that generates the data file into the
>>> usual place (/R/ folder) and document it so that the user knows to run
>>> 'sampledata=makeSampleNCDF()' before doing things that need it?
>>>
>>>   Trying to put executable code into the data folder does seem a bit
>>> perverse!
>
> Actually, it seems to be *interpretable* R code in a .R file.
>
> The help file for data() says:
>
> Details:
>
>       Currently, four formats of data files are supported:
>
>         1. files ending ?.R? or ?.r? are ?source()?d in, with the R
>            working directory changed temporarily to the directory
>            containing the respective file.  (?data? ensures that the
>            ?utils? package is attached, in case it had been run _via_
>            ?utils::data?.)
> ...
>
> and (in so far as we can tell without the requested example) that was
> the 'format' intended to be used.
>
>>>
>>> Barry
>
>

-- 
Herv? Pag?s

Program in Computational Biology
Division of Public Health Sciences
Fred Hutchinson Cancer Research Center
1100 Fairview Ave. N, M1-B514
P.O. Box 19024
Seattle, WA 98109-1024

E-mail: hpages at fhcrc.org
Phone:  (206) 667-5791
Fax:    (206) 667-1319


From fgnu32 at yahoo.com  Tue Jul 23 15:18:45 2013
From: fgnu32 at yahoo.com (Fg Nu)
Date: Tue, 23 Jul 2013 06:18:45 -0700 (PDT)
Subject: [Rd] cbind error with check.names
Message-ID: <1374585525.97733.YahooMailNeo@web160105.mail.bf1.yahoo.com>



Here is an example where?cbind?fails with an error when?check.names=TRUE?is set.

data(airquality)
airQualityBind =cbind(airquality,airquality,check.names =TRUE)


?I understand that?cbind?is a call to?data.frame?and the following works:
airQualityBind =data.frame(airquality,airquality,check.names =TRUE)
but I would like to understand why?cbind?throws an error.

I asked this question on SO here:
http://stackoverflow.com/questions/17810470/cbind-error-with-check-names
and user?Hong Ooi?confirmed my suspicion that cbind was passing check.names = FALSE regardless of my setting that option, even though the help file indicates that this should be possible,?

"For the "data.frame" method of cbind these can be further arguments to data.frame such as stringsAsFactors."

Is there some design principle that I am missing here?

Thanks.


From istazahn at gmail.com  Tue Jul 23 18:20:20 2013
From: istazahn at gmail.com (Ista Zahn)
Date: Tue, 23 Jul 2013 12:20:20 -0400
Subject: [Rd] cbind error with check.names
In-Reply-To: <1374585525.97733.YahooMailNeo@web160105.mail.bf1.yahoo.com>
References: <1374585525.97733.YahooMailNeo@web160105.mail.bf1.yahoo.com>
Message-ID: <CA+vqiLGkncU6QZm0CqBs+PbbXzFuGnzWvOOfrVqN9mUc4kttpQ@mail.gmail.com>

On Tue, Jul 23, 2013 at 9:18 AM, Fg Nu <fgnu32 at yahoo.com> wrote:
>
>
>
> Here is an example where cbind fails with an error when check.names=TRUE is set.
>
> data(airquality)
> airQualityBind =cbind(airquality,airquality,check.names =TRUE)
>
>
>  I understand that cbind is a call to data.frame and the following works:
> airQualityBind =data.frame(airquality,airquality,check.names =TRUE)
> but I would like to understand why cbind throws an error.
>
> I asked this question on SO here:
> http://stackoverflow.com/questions/17810470/cbind-error-with-check-names
> and user Hong Ooi confirmed my suspicion that cbind was passing check.names = FALSE regardless of my setting that option, even though the help file indicates that this should be possible,
>
> "For the "data.frame" method of cbind these can be further arguments to data.frame such as stringsAsFactors."
>
> Is there some design principle that I am missing here?


Well, the function does work as documented. See the help file section
on "Data frame methods", which says "The 'cbind' data frame method is
just a wrapper for 'data.frame(..., check.names = FALSE)'".

Best,
Ista


>
>
> Thanks.
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From istazahn at gmail.com  Tue Jul 23 19:35:34 2013
From: istazahn at gmail.com (Ista Zahn)
Date: Tue, 23 Jul 2013 13:35:34 -0400
Subject: [Rd] cbind error with check.names
In-Reply-To: <1374598453.74044.YahooMailNeo@web160105.mail.bf1.yahoo.com>
References: <1374585525.97733.YahooMailNeo@web160105.mail.bf1.yahoo.com>
	<CA+vqiLGkncU6QZm0CqBs+PbbXzFuGnzWvOOfrVqN9mUc4kttpQ@mail.gmail.com>
	<1374598453.74044.YahooMailNeo@web160105.mail.bf1.yahoo.com>
Message-ID: <CA+vqiLHmAC2n-5kUTS+J09O8BzEvikLEyK+v2i3Kv3ffGGn2KA@mail.gmail.com>

On Tue, Jul 23, 2013 at 12:54 PM, Fg Nu <fgnu32 at yahoo.com> wrote:
>
>
>
> ----- Original Message -----
> From: Ista Zahn <istazahn at gmail.com>
> To: Fg Nu <fgnu32 at yahoo.com>
> Cc: "r-devel at r-project.org" <r-devel at r-project.org>
> Sent: Tuesday, July 23, 2013 9:50 PM
> Subject: Re: [Rd] cbind error with check.names
>
> On Tue, Jul 23, 2013 at 9:18 AM, Fg Nu <fgnu32 at yahoo.com> wrote:
>>
>>
>>
>> Here is an example where cbind fails with an error when check.names=TRUE is set.
>>
>> data(airquality)
>> airQualityBind =cbind(airquality,airquality,check.names =TRUE)
>>
>>
>>  I understand that cbind is a call to data.frame and the following works:
>> airQualityBind =data.frame(airquality,airquality,check.names =TRUE)
>> but I would like to understand why cbind throws an error.
>>
>> I asked this question on SO here:
>> http://stackoverflow.com/questions/17810470/cbind-error-with-check-names
>> and user Hong Ooi confirmed my suspicion that cbind was passing check.names = FALSE regardless of my setting that option, even though the help file indicates that this should be possible,
>>
>> "For the "data.frame" method of cbind these can be further arguments to data.frame such as stringsAsFactors."
>>
>> Is there some design principle that I am missing here?
>
>
> Well, the function does work as documented. See the help file section
> on "Data frame methods", which says "The 'cbind' data frame method is
> just a wrapper for 'data.frame(..., check.names = FALSE)'".
>
> Best,
> Ista
>
>
>
> Is there then a reason that overriding the check.names default is forbidden from cbind? I can't tell why this would be the case.

For the same reason you can't have

data.frame(x=1:10, x=11:20, check.names=TRUE, check.names=FALSE)

or

mean(x=1:10, x=11:20)

i.e, you can't generally pass the same argument more than once. There
are exceptions to this, e.g.,

sum(c(NA, 1:10), na.rm=TRUE, na.rm=FALSE)

but in general each argument can only be matched once. Since
cbind.data.frame calls data.frame with check.names=FALSE, you can't
supply it again.

Best,
Ista

>
> Thanks
>


From fgnu32 at yahoo.com  Tue Jul 23 18:54:13 2013
From: fgnu32 at yahoo.com (Fg Nu)
Date: Tue, 23 Jul 2013 09:54:13 -0700 (PDT)
Subject: [Rd] cbind error with check.names
In-Reply-To: <CA+vqiLGkncU6QZm0CqBs+PbbXzFuGnzWvOOfrVqN9mUc4kttpQ@mail.gmail.com>
References: <1374585525.97733.YahooMailNeo@web160105.mail.bf1.yahoo.com>
	<CA+vqiLGkncU6QZm0CqBs+PbbXzFuGnzWvOOfrVqN9mUc4kttpQ@mail.gmail.com>
Message-ID: <1374598453.74044.YahooMailNeo@web160105.mail.bf1.yahoo.com>




----- Original Message -----
From: Ista Zahn <istazahn at gmail.com>
To: Fg Nu <fgnu32 at yahoo.com>
Cc: "r-devel at r-project.org" <r-devel at r-project.org>
Sent: Tuesday, July 23, 2013 9:50 PM
Subject: Re: [Rd] cbind error with check.names

On Tue, Jul 23, 2013 at 9:18 AM, Fg Nu <fgnu32 at yahoo.com> wrote:
>
>
>
> Here is an example where cbind fails with an error when check.names=TRUE is set.
>
> data(airquality)
> airQualityBind =cbind(airquality,airquality,check.names =TRUE)
>
>
>? I understand that cbind is a call to data.frame and the following works:
> airQualityBind =data.frame(airquality,airquality,check.names =TRUE)
> but I would like to understand why cbind throws an error.
>
> I asked this question on SO here:
> http://stackoverflow.com/questions/17810470/cbind-error-with-check-names
> and user Hong Ooi confirmed my suspicion that cbind was passing check.names = FALSE regardless of my setting that option, even though the help file indicates that this should be possible,
>
> "For the "data.frame" method of cbind these can be further arguments to data.frame such as stringsAsFactors."
>
> Is there some design principle that I am missing here?


Well, the function does work as documented. See the help file section
on "Data frame methods", which says "The 'cbind' data frame method is
just a wrapper for 'data.frame(..., check.names = FALSE)'".

Best,
Ista



Is there then a reason that overriding the check.names default is forbidden from cbind? I can't tell why this would be the case.

Thanks



From fgnu32 at yahoo.com  Tue Jul 23 19:46:53 2013
From: fgnu32 at yahoo.com (Fg Nu)
Date: Tue, 23 Jul 2013 10:46:53 -0700 (PDT)
Subject: [Rd] cbind error with check.names
In-Reply-To: <CA+vqiLHmAC2n-5kUTS+J09O8BzEvikLEyK+v2i3Kv3ffGGn2KA@mail.gmail.com>
References: <1374585525.97733.YahooMailNeo@web160105.mail.bf1.yahoo.com>
	<CA+vqiLGkncU6QZm0CqBs+PbbXzFuGnzWvOOfrVqN9mUc4kttpQ@mail.gmail.com>
	<1374598453.74044.YahooMailNeo@web160105.mail.bf1.yahoo.com>
	<CA+vqiLHmAC2n-5kUTS+J09O8BzEvikLEyK+v2i3Kv3ffGGn2KA@mail.gmail.com>
Message-ID: <1374601613.65858.YahooMailNeo@web160104.mail.bf1.yahoo.com>





----- Original Message -----
From: Ista Zahn <istazahn at gmail.com>
To: Fg Nu <fgnu32 at yahoo.com>
Cc: "r-devel at r-project.org" <r-devel at r-project.org>
Sent: Tuesday, July 23, 2013 11:05 PM
Subject: Re: [Rd] cbind error with check.names

On Tue, Jul 23, 2013 at 12:54 PM, Fg Nu <fgnu32 at yahoo.com> wrote:
>
>
>
> ----- Original Message -----
> From: Ista Zahn <istazahn at gmail.com>
> To: Fg Nu <fgnu32 at yahoo.com>
> Cc: "r-devel at r-project.org" <r-devel at r-project.org>
> Sent: Tuesday, July 23, 2013 9:50 PM
> Subject: Re: [Rd] cbind error with check.names
>
> On Tue, Jul 23, 2013 at 9:18 AM, Fg Nu <fgnu32 at yahoo.com> wrote:
>>
>>
>>
>> Here is an example where cbind fails with an error when check.names=TRUE is set.
>>
>> data(airquality)
>> airQualityBind =cbind(airquality,airquality,check.names =TRUE)
>>
>>
>>? I understand that cbind is a call to data.frame and the following works:
>> airQualityBind =data.frame(airquality,airquality,check.names =TRUE)
>> but I would like to understand why cbind throws an error.
>>
>> I asked this question on SO here:
>> http://stackoverflow.com/questions/17810470/cbind-error-with-check-names
>> and user Hong Ooi confirmed my suspicion that cbind was passing check.names = FALSE regardless of my setting that option, even though the help file indicates that this should be possible,
>>
>> "For the "data.frame" method of cbind these can be further arguments to data.frame such as stringsAsFactors."
>>
>> Is there some design principle that I am missing here?
>
>
> Well, the function does work as documented. See the help file section
> on "Data frame methods", which says "The 'cbind' data frame method is
> just a wrapper for 'data.frame(..., check.names = FALSE)'".
>
> Best,
> Ista
>
>
>
> Is there then a reason that overriding the check.names default is forbidden from cbind? I can't tell why this would be the case.

For the same reason you can't have

data.frame(x=1:10, x=11:20, check.names=TRUE, check.names=FALSE)

or

mean(x=1:10, x=11:20)

i.e, you can't generally pass the same argument more than once. There
are exceptions to this, e.g.,

sum(c(NA, 1:10), na.rm=TRUE, na.rm=FALSE)

but in general each argument can only be matched once. Since
cbind.data.frame calls data.frame with check.names=FALSE, you can't
supply it again.

Best,
Ista

>
> Thanks
>


Yikes, no. As I mentioned to the SO poster, I get that bit.

I meant what is the design principle behind check.names being hardcoded to FALSE. I see no conflict with the purpose of cbind from the ability to specify check.names at the level of cbind.


From fgnu32 at yahoo.com  Tue Jul 23 19:47:39 2013
From: fgnu32 at yahoo.com (Fg Nu)
Date: Tue, 23 Jul 2013 10:47:39 -0700 (PDT)
Subject: [Rd] cbind error with check.names
In-Reply-To: <CA+vqiLHmAC2n-5kUTS+J09O8BzEvikLEyK+v2i3Kv3ffGGn2KA@mail.gmail.com>
References: <1374585525.97733.YahooMailNeo@web160105.mail.bf1.yahoo.com>
	<CA+vqiLGkncU6QZm0CqBs+PbbXzFuGnzWvOOfrVqN9mUc4kttpQ@mail.gmail.com>
	<1374598453.74044.YahooMailNeo@web160105.mail.bf1.yahoo.com>
	<CA+vqiLHmAC2n-5kUTS+J09O8BzEvikLEyK+v2i3Kv3ffGGn2KA@mail.gmail.com>
Message-ID: <1374601659.38463.YahooMailNeo@web160105.mail.bf1.yahoo.com>



> Is there then a reason that overriding the check.names default is forbidden from cbind? I can't tell why this would be the case.

For the same reason you can't have

data.frame(x=1:10, x=11:20, check.names=TRUE, check.names=FALSE)

or

mean(x=1:10, x=11:20)

i.e, you can't generally pass the same argument more than once. There
are exceptions to this, e.g.,

sum(c(NA, 1:10), na.rm=TRUE, na.rm=FALSE)

but in general each argument can only be matched once. Since
cbind.data.frame calls data.frame with check.names=FALSE, you can't
supply it again.

Best,
Ista

>
> Thanks
>



Yikes, no. As I mentioned to the SO poster, I get that bit.

I meant what is the design principle behind check.names being hardcoded to FALSE. I see no conflict with the purpose of cbind from the ability to specify check.names at the level of cbind.


From h.wickham at gmail.com  Wed Jul 24 16:35:17 2013
From: h.wickham at gmail.com (Hadley Wickham)
Date: Wed, 24 Jul 2013 09:35:17 -0500
Subject: [Rd] Understanding modification in place
Message-ID: <CABdHhvGCcVdGFPwEW9yxG8UBQJXj2x+rEFEgTTkBcqLSs_M6=Q@mail.gmail.com>

Hi all,

Take this simple script, which I'm trying to use to understand when
modification in-place occurs, and when a new object is created:

message("Global")
x <- 1:3
.Internal(inspect(x))
x[2] <- 1L
.Internal(inspect(x))

message("In function")
(function() {
  x <- 1:3
  .Internal(inspect(x))
  x[2] <- 1L
  .Internal(inspect(x))
})()

If I run it from the command line, I get:

Global
@1050bb840 13 INTSXP g0c2 [MARK,NAM(1)] (len=3, tl=0) 1,2,3
@1050bb840 13 INTSXP g0c2 [MARK,NAM(1)] (len=3, tl=0) 1,1,3
In function
@1050bb190 13 INTSXP g0c2 [NAM(1)] (len=3, tl=0) 1,2,3
@1050bb190 13 INTSXP g0c2 [NAM(1)] (len=3, tl=0) 1,1,3

i.e. both modifications occur in place.

If I put it in a file and source() it, I get:

Global
@1050bb318 13 INTSXP g0c2 [NAM(2)] (len=3, tl=0) 1,2,3
@1050bb698 13 INTSXP g0c2 [NAM(1)] (len=3, tl=0) 1,1,3
In function
@1050b8958 13 INTSXP g0c2 [NAM(1)] (len=3, tl=0) 1,2,3
@1050b8958 13 INTSXP g0c2 [NAM(1)] (len=3, tl=0) 1,1,3

i.e. in the global environment a copy is created.

Why is there a difference?

Thanks!

Hadley

-- 
Chief Scientist, RStudio
http://had.co.nz/


From wdunlap at tibco.com  Wed Jul 24 17:38:58 2013
From: wdunlap at tibco.com (William Dunlap)
Date: Wed, 24 Jul 2013 15:38:58 +0000
Subject: [Rd] cbind error with check.names
In-Reply-To: <1374601659.38463.YahooMailNeo@web160105.mail.bf1.yahoo.com>
References: <1374585525.97733.YahooMailNeo@web160105.mail.bf1.yahoo.com>
	<CA+vqiLGkncU6QZm0CqBs+PbbXzFuGnzWvOOfrVqN9mUc4kttpQ@mail.gmail.com>
	<1374598453.74044.YahooMailNeo@web160105.mail.bf1.yahoo.com>
	<CA+vqiLHmAC2n-5kUTS+J09O8BzEvikLEyK+v2i3Kv3ffGGn2KA@mail.gmail.com>
	<1374601659.38463.YahooMailNeo@web160105.mail.bf1.yahoo.com>
Message-ID: <E66794E69CFDE04D9A70842786030B931C328CF0@PA-MBX01.na.tibco.com>

> I meant what is the design principle behind check.names being hardcoded to FALSE.
> I see no conflict with the purpose of cbind from the ability to specify check.names
> at the level of cbind.

One rationale is that data.frame(check.names=TRUE,...) does two things: it makes
sure there are no duplicate names and it makes sure that all the names are syntactic
names.  If you have created a data.frame with non-syntactic names you would be annoyed
if a call to cbind mangled its names, hence cbind.data.frame sets check.names=FALSE
to avoid this.
  > d1 <- data.frame(`Mass (g)`=102, `Conc (% by vol.)`=0.23, check.names=FALSE)
  > d2 <- data.frame(`Accel (m/s/s)`=9.81, `Conc (% by vol.)`=0.23, check.names=FALSE)
  > names(d1)
  [1] "Mass (g)"         "Conc (% by vol.)"
  > names(d2)
  [1] "Accel (m/s/s)"    "Conc (% by vol.)"
  > names(data.frame(d1, d2, check.names=TRUE))
  [1] "Mass..g."           "Conc....by.vol.."   "Accel..m.s.s."      "Conc....by.vol...1"
  > names(data.frame(d1, d2, check.names=FALSE))
  [1] "Mass (g)"         "Conc (% by vol.)" "Accel (m/s/s)"    "Conc (% by vol.)"
  > names(cbind(d1, d2))
  [1] "Mass (g)"         "Conc (% by vol.)" "Accel (m/s/s)"    "Conc (% by vol.)"

Perhaps data.frame() should throw an error if there are duplicate names,
or perhaps it should have a separate argument to say what to do about duplicate names,
but changing that sort of thing now would break a fair bit of code.  Perhaps
cbind.data.frame should not call data.frame, but copy the work that data.frame
does or perhaps it should check for duplicate names on the output of data.frame().
Is it worth the time to do that?

Bill Dunlap
Spotfire, TIBCO Software
wdunlap tibco.com

> -----Original Message-----
> From: r-devel-bounces at r-project.org [mailto:r-devel-bounces at r-project.org] On Behalf
> Of Fg Nu
> Sent: Tuesday, July 23, 2013 10:48 AM
> To: Ista Zahn
> Cc: r-devel at r-project.org
> Subject: Re: [Rd] cbind error with check.names
> 
> 
> 
> > Is there then a reason that overriding the check.names default is forbidden from cbind?
> I can't tell why this would be the case.
> 
> For the same reason you can't have
> 
> data.frame(x=1:10, x=11:20, check.names=TRUE, check.names=FALSE)
> 
> or
> 
> mean(x=1:10, x=11:20)
> 
> i.e, you can't generally pass the same argument more than once. There
> are exceptions to this, e.g.,
> 
> sum(c(NA, 1:10), na.rm=TRUE, na.rm=FALSE)
> 
> but in general each argument can only be matched once. Since
> cbind.data.frame calls data.frame with check.names=FALSE, you can't
> supply it again.
> 
> Best,
> Ista
> 
> >
> > Thanks
> >
> 
> 
> 
> Yikes, no. As I mentioned to the SO poster, I get that bit.
> 
> I meant what is the design principle behind check.names being hardcoded to FALSE. I see
> no conflict with the purpose of cbind from the ability to specify check.names at the level
> of cbind.
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From simon.urbanek at r-project.org  Wed Jul 24 18:02:17 2013
From: simon.urbanek at r-project.org (Simon Urbanek)
Date: Wed, 24 Jul 2013 12:02:17 -0400
Subject: [Rd] Understanding modification in place
In-Reply-To: <CABdHhvGCcVdGFPwEW9yxG8UBQJXj2x+rEFEgTTkBcqLSs_M6=Q@mail.gmail.com>
References: <CABdHhvGCcVdGFPwEW9yxG8UBQJXj2x+rEFEgTTkBcqLSs_M6=Q@mail.gmail.com>
Message-ID: <59139924-1571-4904-81C6-9486DC964347@r-project.org>

On Jul 24, 2013, at 10:35 AM, Hadley Wickham wrote:

> Hi all,
> 
> Take this simple script, which I'm trying to use to understand when
> modification in-place occurs, and when a new object is created:
> 
> message("Global")
> x <- 1:3
> .Internal(inspect(x))
> x[2] <- 1L
> .Internal(inspect(x))
> 
> message("In function")
> (function() {
>  x <- 1:3
>  .Internal(inspect(x))
>  x[2] <- 1L
>  .Internal(inspect(x))
> })()
> 
> If I run it from the command line, I get:
> 
> Global
> @1050bb840 13 INTSXP g0c2 [MARK,NAM(1)] (len=3, tl=0) 1,2,3
> @1050bb840 13 INTSXP g0c2 [MARK,NAM(1)] (len=3, tl=0) 1,1,3
> In function
> @1050bb190 13 INTSXP g0c2 [NAM(1)] (len=3, tl=0) 1,2,3
> @1050bb190 13 INTSXP g0c2 [NAM(1)] (len=3, tl=0) 1,1,3
> 
> i.e. both modifications occur in place.
> 
> If I put it in a file and source() it, I get:
> 
> Global
> @1050bb318 13 INTSXP g0c2 [NAM(2)] (len=3, tl=0) 1,2,3
> @1050bb698 13 INTSXP g0c2 [NAM(1)] (len=3, tl=0) 1,1,3
> In function
> @1050b8958 13 INTSXP g0c2 [NAM(1)] (len=3, tl=0) 1,2,3
> @1050b8958 13 INTSXP g0c2 [NAM(1)] (len=3, tl=0) 1,1,3
> 
> i.e. in the global environment a copy is created.
> 
> Why is there a difference?
> 

Did you look at source()? ;)
It has to do with all the additional processing there which assigns the result of every line locally thus producing extra copies. If you just eval it, you'll get the same behavior as in the console:

> p=parse("test.R")
> eval(p)
Global
@100816498 13 INTSXP g0c2 [NAM(1)] (len=3, tl=0) 1,2,3
@100816498 13 INTSXP g0c2 [NAM(1)] (len=3, tl=0) 1,1,3
In function
@102c42378 13 INTSXP g0c2 [NAM(1)] (len=3, tl=0) 1,2,3
@102c42378 13 INTSXP g0c2 [NAM(1)] (len=3, tl=0) 1,1,3

The same is true is you just put { } around it and source it so it becomes a single expression.

Cheers,
Simon


From algol at sim.ul.pt  Wed Jul 24 17:00:15 2013
From: algol at sim.ul.pt (Alberto Krone-Martins)
Date: Wed, 24 Jul 2013 16:00:15 +0100
Subject: [Rd] Alpha channel in colorRamp() and colorRampPalette()
Message-ID: <46C499E2-7936-481D-8470-E544ED65868A@sim.ul.pt>

 
 Hi all, 

 I had the need to create a colorbar considering the alpha channel of the colors, but colorRamp() and colorRampPalette() ignored the alpha argument in rgb(). So I performed some minor modifs. in their codes, as to support the interpolation using the alpha channel.
 
 I guess that those simple modifications might be useful for other people, so perhaps it would be worth to add them to colorRamp and colorRampPalette codes in grDevices? the modified functions follows.
 
 Cheers,
 
 Alberto.
 
colorRampPalette <- function (colors, ...) {
    ramp <- colorRamp(colors, ...)
    function(n) {
        x <- ramp(seq.int(0, 1, length.out = n))
        rgb(x[, 1], x[, 2], x[, 3], x[, 4], maxColorValue = 255)
    }
}

colorRamp <- function (colors, bias = 1, space = c("rgb", "Lab"), interpolate = c("linear", "spline")) {
    if (bias <= 0) 
        stop("'bias' must be positive")
    colors <- t(col2rgb(colors, alpha=T)/255)
    space <- match.arg(space)
    interpolate <- match.arg(interpolate)
    if (space == "Lab") {
        colors <- convertColor(colors, from = "sRGB", to = "Lab")
    }
    interpolate <- switch(interpolate, linear = stats::approxfun, spline = stats::splinefun)
    if ((nc <- nrow(colors)) == 1L) {
        colors <- colors[c(1L, 1L), ]
        nc <- 2L
    }
    x <- seq.int(0, 1, length.out = nc)^bias
    palette <- c(interpolate(x, colors[, 1]), interpolate(x, colors[, 2]), interpolate(x, colors[, 3]), interpolate(x, colors[, 4]))
    roundcolor <- function(rgb) pmax(pmin(rgb, 1), 0)
    if (space == "Lab") {
        function(x) {
            roundcolor(convertColor(cbind(palette[[1L]](x), palette[[2L]](x), 
                palette[[3L]](x), palette[[4L]](x)), from = "Lab", to = "sRGB")) * 
                255
        }
    }
    else {
        function(x) {
            roundcolor(cbind(palette[[1L]](x), palette[[2L]](x), 
                palette[[3L]](x), palette[[4L]](x))) * 255
        }
    }
}

____________________________________________________

 Universidade de Lisboa - Laborat?rio SIM
 Alberto Krone-Martins
 http://www.astro.iag.usp.br/~algol






From ripley at stats.ox.ac.uk  Thu Jul 25 11:37:06 2013
From: ripley at stats.ox.ac.uk (Prof Brian Ripley)
Date: Thu, 25 Jul 2013 10:37:06 +0100
Subject: [Rd] Alpha channel in colorRamp() and colorRampPalette()
In-Reply-To: <46C499E2-7936-481D-8470-E544ED65868A@sim.ul.pt>
References: <46C499E2-7936-481D-8470-E544ED65868A@sim.ul.pt>
Message-ID: <51F0F1C2.6070606@stats.ox.ac.uk>

Thank you for the suggestion. But editing deparsed code is of almost no 
use to us: you need to edit the sources.  And even then mailers may 
distort it, so it really is much easier to file these things as 
attachments on bugs.r-project.org, as a wishlist item.

I have incorporated what I think you intended in R-devel, so please test it.

On 24/07/2013 16:00, Alberto Krone-Martins wrote:
>
>   Hi all,
>
>   I had the need to create a colorbar considering the alpha channel of the colors, but colorRamp() and colorRampPalette() ignored the alpha argument in rgb(). So I performed some minor modifs. in their codes, as to support the interpolation using the alpha channel.
>
>   I guess that those simple modifications might be useful for other people, so perhaps it would be worth to add them to colorRamp and colorRampPalette codes in grDevices? the modified functions follows.
>
>   Cheers,
>
>   Alberto.
>
> colorRampPalette <- function (colors, ...) {
>      ramp <- colorRamp(colors, ...)
>      function(n) {
>          x <- ramp(seq.int(0, 1, length.out = n))
>          rgb(x[, 1], x[, 2], x[, 3], x[, 4], maxColorValue = 255)
>      }
> }
>
> colorRamp <- function (colors, bias = 1, space = c("rgb", "Lab"), interpolate = c("linear", "spline")) {
>      if (bias <= 0)
>          stop("'bias' must be positive")
>      colors <- t(col2rgb(colors, alpha=T)/255)
>      space <- match.arg(space)
>      interpolate <- match.arg(interpolate)
>      if (space == "Lab") {
>          colors <- convertColor(colors, from = "sRGB", to = "Lab")
>      }
>      interpolate <- switch(interpolate, linear = stats::approxfun, spline = stats::splinefun)
>      if ((nc <- nrow(colors)) == 1L) {
>          colors <- colors[c(1L, 1L), ]
>          nc <- 2L
>      }
>      x <- seq.int(0, 1, length.out = nc)^bias
>      palette <- c(interpolate(x, colors[, 1]), interpolate(x, colors[, 2]), interpolate(x, colors[, 3]), interpolate(x, colors[, 4]))
>      roundcolor <- function(rgb) pmax(pmin(rgb, 1), 0)
>      if (space == "Lab") {
>          function(x) {
>              roundcolor(convertColor(cbind(palette[[1L]](x), palette[[2L]](x),
>                  palette[[3L]](x), palette[[4L]](x)), from = "Lab", to = "sRGB")) *
>                  255
>          }
>      }
>      else {
>          function(x) {
>              roundcolor(cbind(palette[[1L]](x), palette[[2L]](x),
>                  palette[[3L]](x), palette[[4L]](x))) * 255
>          }
>      }
> }
>
> ____________________________________________________
>
>   Universidade de Lisboa - Laborat?rio SIM
>   Alberto Krone-Martins
>   http://www.astro.iag.usp.br/~algol
>
>
>
>
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>


-- 
Brian D. Ripley,                  ripley at stats.ox.ac.uk
Professor of Applied Statistics,  http://www.stats.ox.ac.uk/~ripley/
University of Oxford,             Tel:  +44 1865 272861 (self)
1 South Parks Road,                     +44 1865 272866 (PA)
Oxford OX1 3TG, UK                Fax:  +44 1865 272595


From jonathan at mazamascience.com  Wed Jul 24 21:35:13 2013
From: jonathan at mazamascience.com (Jonathan Callahan)
Date: Wed, 24 Jul 2013 12:35:13 -0700
Subject: [Rd] package compilation on OSX 10.8 -- error compiling Fortran
 library for architecture i386
Message-ID: <CAPjNR=S=cGj4YzN4S5Np+ioiiEmff3qVBKuqMmqnUZFLxzE1Dw@mail.gmail.com>

An embedded and charset-unspecified text was scrubbed...
Name: not available
URL: <https://stat.ethz.ch/pipermail/r-devel/attachments/20130724/fbfa62bf/attachment.pl>

From fgnu32 at yahoo.com  Thu Jul 25 13:58:58 2013
From: fgnu32 at yahoo.com (Fg Nu)
Date: Thu, 25 Jul 2013 04:58:58 -0700 (PDT)
Subject: [Rd] cbind error with check.names
In-Reply-To: <E66794E69CFDE04D9A70842786030B931C328CF0@PA-MBX01.na.tibco.com>
References: <1374585525.97733.YahooMailNeo@web160105.mail.bf1.yahoo.com>	<CA+vqiLGkncU6QZm0CqBs+PbbXzFuGnzWvOOfrVqN9mUc4kttpQ@mail.gmail.com>	<1374598453.74044.YahooMailNeo@web160105.mail.bf1.yahoo.com>	<CA+vqiLHmAC2n-5kUTS+J09O8BzEvikLEyK+v2i3Kv3ffGGn2KA@mail.gmail.com>
	<1374601659.38463.YahooMailNeo@web160105.mail.bf1.yahoo.com>
	<E66794E69CFDE04D9A70842786030B931C328CF0@PA-MBX01.na.tibco.com>
Message-ID: <1374753538.31658.YahooMailNeo@web160101.mail.bf1.yahoo.com>





>>  I meant what is the design principle behind check.names being hardcoded to 
> FALSE.
>>  I see no conflict with the purpose of cbind from the ability to specify 
> check.names
>>  at the level of cbind.


> Perhaps data.frame() should throw an error if there are duplicate names,
> or perhaps it should have a separate argument to say what to do about duplicate 
> names,
> but changing that sort of thing now would break a fair bit of code.? Perhaps
> cbind.data.frame should not call data.frame, but copy the work that data.frame
> does or perhaps it should check for duplicate names on the output of 
> data.frame().
> Is it worth the time to do that?
> 



Bill, thanks for your reply. I understand that this is one of things that just are. For me, the ability to check for duplicate names in dataframes is important, and it is surprising that I never realised before that cbind has this limitation.


From simon.urbanek at r-project.org  Thu Jul 25 14:37:33 2013
From: simon.urbanek at r-project.org (Simon Urbanek)
Date: Thu, 25 Jul 2013 08:37:33 -0400
Subject: [Rd] package compilation on OSX 10.8 -- error compiling Fortran
	library for architecture i386
In-Reply-To: <CAPjNR=S=cGj4YzN4S5Np+ioiiEmff3qVBKuqMmqnUZFLxzE1Dw@mail.gmail.com>
References: <CAPjNR=S=cGj4YzN4S5Np+ioiiEmff3qVBKuqMmqnUZFLxzE1Dw@mail.gmail.com>
Message-ID: <35896E17-ED47-4ED1-BEBF-12161255CE96@r-project.org>


On Jul 24, 2013, at 3:35 PM, Jonathan Callahan wrote:

> I am developing a package for analysis of seismic data that relies on a
> Fortran library.
> 
> Package compilation works fine on Ubuntu and Red Hat Enterprise but fails
> for R 2.15.3 on Mac OSX 10.8.4.
> 
> I've included the entire dump below but the relevant error message seems to
> be:
> 
> ld: warning: ignoring file libmseed/libmseed.a, file was built for archive
>> which is not the architecture being linked (i386): libmseed/libmseed.a
> 
> 
> Compilation for x86_64 proceeds without a hitch.
> 
> If anyone is curious, the package tarballs are available at:
> 
> http://mazamascience.com/Downloads/
> 
> Thanks for any helpful suggestions about compiling Fortran on OSX.
> 

This has nothing to do with Fortran (and it's not even Mac-specific) - you're using the wrong compiler flags for building the dependent library inside your package (as the message tells you: you are building 64-bit version of libmseed when compiling 32-bit version of the package). Please make sure you use the proper compiler and flags that R is providing (i.e., remove all conflicting flags from libmseed/Makefile).

Cheers,
Simon



> Jon
> 
> 
> $ R CMD INSTALL seismic_0.2.1.0.tar.gz
> * installing to library
> ?/Library/Frameworks/R.framework/Versions/2.15/Resources/library?
> * installing *source* package ?seismic? ...
> ** libs
> *** arch - i386
> gcc -arch i386 -std=gnu99
> -I/Library/Frameworks/R.framework/Resources/include
> -I/Library/Frameworks/R.framework/Resources/include/i386 -DNDEBUG
> -Ilibmseed -I/usr/local/include   -fPIC -fPIC  -g -O2  -c parseMiniSEED.c
> -o parseMiniSEED.o
> gcc -O2 -Wall -fPIC   -c -o fileutils.o fileutils.c
> gcc -O2 -Wall -fPIC   -c -o genutils.o genutils.c
> gcc -O2 -Wall -fPIC   -c -o gswap.o gswap.c
> gcc -O2 -Wall -fPIC   -c -o lmplatform.o lmplatform.c
> gcc -O2 -Wall -fPIC   -c -o lookup.o lookup.c
> gcc -O2 -Wall -fPIC   -c -o msrutils.o msrutils.c
> gcc -O2 -Wall -fPIC   -c -o pack.o pack.c
> gcc -O2 -Wall -fPIC   -c -o packdata.o packdata.c
> gcc -O2 -Wall -fPIC   -c -o traceutils.o traceutils.c
> gcc -O2 -Wall -fPIC   -c -o tracelist.o tracelist.c
> gcc -O2 -Wall -fPIC   -c -o parseutils.o parseutils.c
> gcc -O2 -Wall -fPIC   -c -o unpack.o unpack.c
> gcc -O2 -Wall -fPIC   -c -o unpackdata.o unpackdata.c
> gcc -O2 -Wall -fPIC   -c -o selection.o selection.c
> gcc -O2 -Wall -fPIC   -c -o logging.o logging.c
> rm -f libmseed.a
> ar -csq libmseed.a fileutils.o genutils.o gswap.o lmplatform.o lookup.o
> msrutils.o pack.o packdata.o traceutils.o tracelist.o parseutils.o unpack.o
> unpackdata.o selection.o logging.o
> gcc -arch i386 -std=gnu99 -dynamiclib -Wl,-headerpad_max_install_names
> -undefined dynamic_lookup -single_module -multiply_defined suppress
> -L/usr/local/lib -o seismic.so parseMiniSEED.o -Llibmseed -lmseed
> -F/Library/Frameworks/R.framework/.. -framework R -Wl,-framework
> -Wl,CoreFoundation
> ld: warning: ignoring file libmseed/libmseed.a, file was built for archive
> which is not the architecture being linked (i386): libmseed/libmseed.a
> installing to
> /Library/Frameworks/R.framework/Versions/2.15/Resources/library/seismic/libs/i386
> *** arch - x86_64
> gcc -arch x86_64 -std=gnu99
> -I/Library/Frameworks/R.framework/Resources/include
> -I/Library/Frameworks/R.framework/Resources/include/x86_64 -DNDEBUG
> -Ilibmseed -I/usr/local/include   -fPIC -fPIC  -g -O2  -c parseMiniSEED.c
> -o parseMiniSEED.o
> gcc -O2 -Wall -fPIC   -c -o fileutils.o fileutils.c
> gcc -O2 -Wall -fPIC   -c -o genutils.o genutils.c
> gcc -O2 -Wall -fPIC   -c -o gswap.o gswap.c
> gcc -O2 -Wall -fPIC   -c -o lmplatform.o lmplatform.c
> gcc -O2 -Wall -fPIC   -c -o lookup.o lookup.c
> gcc -O2 -Wall -fPIC   -c -o msrutils.o msrutils.c
> gcc -O2 -Wall -fPIC   -c -o pack.o pack.c
> gcc -O2 -Wall -fPIC   -c -o packdata.o packdata.c
> gcc -O2 -Wall -fPIC   -c -o traceutils.o traceutils.c
> gcc -O2 -Wall -fPIC   -c -o tracelist.o tracelist.c
> gcc -O2 -Wall -fPIC   -c -o parseutils.o parseutils.c
> gcc -O2 -Wall -fPIC   -c -o unpack.o unpack.c
> gcc -O2 -Wall -fPIC   -c -o unpackdata.o unpackdata.c
> gcc -O2 -Wall -fPIC   -c -o selection.o selection.c
> gcc -O2 -Wall -fPIC   -c -o logging.o logging.c
> rm -f libmseed.a
> ar -csq libmseed.a fileutils.o genutils.o gswap.o lmplatform.o lookup.o
> msrutils.o pack.o packdata.o traceutils.o tracelist.o parseutils.o unpack.o
> unpackdata.o selection.o logging.o
> gcc -arch x86_64 -std=gnu99 -dynamiclib -Wl,-headerpad_max_install_names
> -undefined dynamic_lookup -single_module -multiply_defined suppress
> -L/usr/local/lib -o seismic.so parseMiniSEED.o -Llibmseed -lmseed
> -F/Library/Frameworks/R.framework/.. -framework R -Wl,-framework
> -Wl,CoreFoundation
> installing to
> /Library/Frameworks/R.framework/Versions/2.15/Resources/library/seismic/libs/x86_64
> ** R
> ** inst
> ** preparing package for lazy loading
> Creating a generic function for ?as.vector? from package ?base? in package
> ?seismic?
> Creating a generic function for ?mean? from package ?base? in package
> ?seismic?
> Creating a generic function for ?median? from package ?stats? in package
> ?seismic?
> Creating a generic function for ?sd? from package ?stats? in package
> ?seismic?
> Creating a generic function for ?plot? from package ?graphics? in package
> ?seismic?
> ** help
> *** installing help indices
> ** building package indices
> ** installing vignettes
>   ?seismic-intro.Rnw?
> ** testing if installed package can be loaded
> *** arch - i386
> Error in dyn.load(file, DLLpath = DLLpath, ...) :
>  unable to load shared object
> '/Library/Frameworks/R.framework/Versions/2.15/Resources/library/seismic/libs/i386/seismic.so':
> 
> dlopen(/Library/Frameworks/R.framework/Versions/2.15/Resources/library/seismic/libs/i386/seismic.so,
> 6): Symbol not found: _ms_loginit
>  Referenced from:
> /Library/Frameworks/R.framework/Versions/2.15/Resources/library/seismic/libs/i386/seismic.so
>  Expected in: flat namespace
> in
> /Library/Frameworks/R.framework/Versions/2.15/Resources/library/seismic/libs/i386/seismic.so
> Error: loading failed
> Execution halted
> *** arch - x86_64
> ERROR: loading failed for ?i386?
> * removing
> ?/Library/Frameworks/R.framework/Versions/2.15/Resources/library/seismic?
> 
> 
> -- 
> Jonathan Callahan, PhD
> Mazama Science
> 206-708-5028
> mazamascience.com
> 
> 	[[alternative HTML version deleted]]
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From h.wickham at gmail.com  Thu Jul 25 14:42:26 2013
From: h.wickham at gmail.com (Hadley Wickham)
Date: Thu, 25 Jul 2013 07:42:26 -0500
Subject: [Rd] Understanding modification in place
In-Reply-To: <59139924-1571-4904-81C6-9486DC964347@r-project.org>
References: <CABdHhvGCcVdGFPwEW9yxG8UBQJXj2x+rEFEgTTkBcqLSs_M6=Q@mail.gmail.com>
	<59139924-1571-4904-81C6-9486DC964347@r-project.org>
Message-ID: <CABdHhvFY6JhtmMGqyScPjz2d6Ag=GcvJLXCFy2duwAZhjkAAsQ@mail.gmail.com>

>> If I run it from the command line, I get:
>>
>> Global
>> @1050bb840 13 INTSXP g0c2 [MARK,NAM(1)] (len=3, tl=0) 1,2,3
>> @1050bb840 13 INTSXP g0c2 [MARK,NAM(1)] (len=3, tl=0) 1,1,3
>> In function
>> @1050bb190 13 INTSXP g0c2 [NAM(1)] (len=3, tl=0) 1,2,3
>> @1050bb190 13 INTSXP g0c2 [NAM(1)] (len=3, tl=0) 1,1,3
>>
>> i.e. both modifications occur in place.
>>
>> If I put it in a file and source() it, I get:
>>
>> Global
>> @1050bb318 13 INTSXP g0c2 [NAM(2)] (len=3, tl=0) 1,2,3
>> @1050bb698 13 INTSXP g0c2 [NAM(1)] (len=3, tl=0) 1,1,3
>> In function
>> @1050b8958 13 INTSXP g0c2 [NAM(1)] (len=3, tl=0) 1,2,3
>> @1050b8958 13 INTSXP g0c2 [NAM(1)] (len=3, tl=0) 1,1,3
>>
>> i.e. in the global environment a copy is created.
>>
>> Why is there a difference?
>>
>
> Did you look at source()? ;)
> It has to do with all the additional processing there which assigns the result of every line locally thus producing extra copies. If you just eval it, you'll get the same behavior as in the console:

Oh, of course.  Thanks!

Hadley

-- 
Chief Scientist, RStudio
http://had.co.nz/


From bwarren2 at gmail.com  Thu Jul 25 21:35:13 2013
From: bwarren2 at gmail.com (Ben Warren)
Date: Thu, 25 Jul 2013 15:35:13 -0400
Subject: [Rd] Building R with Cairo
Message-ID: <CACHewfzuZtaJry8S7WdX9wcOoBHGSW5kC2zfW9_mw-jds4qxMA@mail.gmail.com>

An embedded and charset-unspecified text was scrubbed...
Name: not available
URL: <https://stat.ethz.ch/pipermail/r-devel/attachments/20130725/04abdcbe/attachment.pl>

From zach.harrington at gmail.com  Thu Jul 25 21:44:04 2013
From: zach.harrington at gmail.com (Zach Harrington)
Date: Thu, 25 Jul 2013 15:44:04 -0400
Subject: [Rd] What algorithm is R using to calculate mean?
Message-ID: <51F18004.3060509@gmail.com>

I am curious to know what algorithm R's mean function uses. Is there 
some reference to the numerical properties of this algorithm?

I found the following C code in summary.c:do_summary():
case REALSXP:
     PROTECT(ans = allocVector(REALSXP, 1));
     for (i = 0; i < n; i++) s += REAL(x)[i];
     s /= n;
     if(R_FINITE((double)s)) {
         for (i = 0; i < n; i++) t += (REAL(x)[i] - s);
         s += t/n;
     }
     REAL(ans)[0] = s;
     break;

It seems to do a straight up mean:
for (i = 0; i < n; i++) s += REAL(x)[i];
s /= n;

Then it adds what i assume is a numerical correction which seems to be 
the mean difference from the mean of the data:
for (i = 0; i < n; i++) t += (REAL(x)[i] - s);
s += t/n;

I haven't been able to track this algorithm down anywhere (mean is not a 
great search term).

Any help would be much appreciated,

Zach Harrington


From ripley at stats.ox.ac.uk  Fri Jul 26 10:43:22 2013
From: ripley at stats.ox.ac.uk (Prof Brian Ripley)
Date: Fri, 26 Jul 2013 09:43:22 +0100
Subject: [Rd] Building R with Cairo
In-Reply-To: <CACHewfzuZtaJry8S7WdX9wcOoBHGSW5kC2zfW9_mw-jds4qxMA@mail.gmail.com>
References: <CACHewfzuZtaJry8S7WdX9wcOoBHGSW5kC2zfW9_mw-jds4qxMA@mail.gmail.com>
Message-ID: <51F236AA.8000407@stats.ox.ac.uk>

On 25/07/2013 20:35, Ben Warren wrote:
> All-
>
>       I have been hacking on an R 2.15 build on an Ubuntu 10.4 box, and I do
> not know how to debug R's error message regarding cairo "working".
>   Configuration completes without the expected additional capability (cairo)

We don't support obsolete versions of R. (Although there never was a 
'2.15', this seems to be 2.15.1, four versions old.  See the posting guide.)

You will need to look in config.log to see the details, but I expect the 
information in the 'R Installation and Administration Manual' covers 
this.  You really do want pango for decent font support.

>
> R is now configured for x86_64-unknown-linux-gnu
>>    Source directory:          .
>>    Installation directory:    /app/vendor/R
>>    C compiler:                gcc -std=gnu99  -g -O2
>>    Fortran 77 compiler:       gfortran  -g -O2
>>    C++ compiler:              g++  -g -O2
>>    Fortran 90/95 compiler:    gfortran -g -O2
>>    Obj-C compiler:
>>    Interfaces supported:
>>    External libraries:        readline
>>    Additional capabilities:   PNG, NLS
>>    Options enabled:           shared R library, shared BLAS, R profiling
>>    Recommended packages:      yes
>> configure: WARNING: you cannot build info or HTML versions of the R manuals
>> configure: WARNING: you cannot build PDF versions of the R manuals
>> configure: WARNING: you cannot build PDF versions of vignettes and help
>> pages
>
>
> and it appears the relevant error is:
>
> checking whether pkg-config knows about cairo and pango... no
>> checking whether pkg-config knows about cairo... yes
>> checking whether cairo is >= 1.2 and works... no
>
>
> Does anyone have perspective on what flags/tests to run in debugging this?
>   Many thanks in advance for your perspective, and apologies for socializing
> such a minor problem; I am so very close, but have been banging my head on
> this for a while.
>
> Many thanks,
> Ben
>
>
>
>
> My build script:
>
> #!/usr/bin/env bash
>> #Get apt looking in the right places
>> sudo apt-get update
>> #Give the box the tools it needs to manage software
>> sudo apt-get install -y curl make pkg-config g++
>> #Install the dependencies for the packages below
>> sudo apt-get install -y freetype* libxml2 libxml2-dev libpng12-dev gfortran
>>
>> sudo mkdir -p /app
>> sudo chown -R vagrant /app
>> INSTALL_LOCATION=/app/vendor
>> mkdir -p $INSTALL_LOCATION/lib
>> mkdir -p $INSTALL_LOCATION/include
>> mkdir -p $INSTALL_LOCATION/compiled
>> mkdir -p $INSTALL_LOCATION/vulcan
>>
>> cd $INSTALL_LOCATION/include
>> curl
>> http://www.freedesktop.org/software/fontconfig/release/fontconfig-2.9.0.tar.gz-o fontconfig-2.9.0.tar.gz
>> tar -zxf fontconfig-2.9.0.tar.gz
>> cd fontconfig-2.9.0
>> ./configure --prefix $INSTALL_LOCATION
>> make
>> mkdir -p $INSTALL_LOCATION/include/fontconfig
>> cp -v fontconfig/fcfreetype.h fontconfig/fcprivate.h
>> fontconfig/fontconfig.h $INSTALL_LOCATION/include/fontconfig/
>> make install
>> make clean
>> cd -
>>
>> cd $INSTALL_LOCATION/include
>> curl http://cairographics.org/releases/pixman-0.26.0.tar.gz -o
>> pixman-0.26.0.tar.gz
>> tar -zxf pixman-0.26.0.tar.gz
>> cd pixman-0.26.0/
>> ./configure --prefix $INSTALL_LOCATION
>> make
>> mkdir -p $INSTALL_LOCATION/include/pixman-1
>> cp -v pixman/pixman.h pixman/pixman-version.h
>> $INSTALL_LOCATION/include/pixman-1/
>> make install
>> make clean
>> cd -
>>
>> cd $INSTALL_LOCATION/include
>> curl http://www.cairographics.org/releases/cairo-1.10.0.tar.gz -o
>> cairo-1.10.0.tar.gz
>> tar -zxf cairo-1.10.0.tar.gz
>> cd cairo-1.10.0/
>> # Tell Cairo where fontconfig and pixman are
>> # export LD_LIBRARY_PATH=$INSTALL_LOCATION/lib  # This does not do it.
>> export PKG_CONFIG_PATH=$INSTALL_LOCATION/lib/pkgconfig
>> export FONTCONFIG_CFLAGS="-I${INSTALL_LOCATION}/include/fontconfig
>> -I${INSTALL_LOCATION}/include"
>> export FONTCONFIG_LIBS="-L${INSTALL_LOCATION}/lib -lpixman-1"
>> export pixman_CFLAGS="-I${INSTALL_LOCATION}/include/pixman-1
>> -I${INSTALL_LOCATION}/include"
>> export pixman_LIBS="-L${INSTALL_LOCATION}/lib -lfontconfig"
>> ./configure --prefix $INSTALL_LOCATION/cairo
>> make
>> make install
>> make clean
>> cd -
>> # echo "******************************************"
>>
>> curl http://cran.r-project.org/src/base/R-2/R-2.15.1.tar.gz -o
>> R-2.15.1.tar.gz
>> tar -zxf R-2.15.1.tar.gz
>> cd R-2.15.1/
>> # Tell R where Cairo is
>> export MAIN_CFLAGS="-I${INSTALL_LOCATION}/include
>> -I${INSTALL_LOCATION}/cairo/include"
>> export LDFLAGS="-L${INSTALL_LOCATION}/lib -L${INSTALL_LOCATION}/cairo/lib"
>> export
>> PKG_CONFIG_PATH="${PKG_CONFIG_PATH}:${INSTALL_LOCATION}/cairo/lib/pkgconfig:${INSTALL_LOCATION}/lib/pkgconfig"
>> ./configure --prefix $INSTALL_LOCATION/R --enable-R-shlib --without-x
>> --with-cairo --with-libpng
>> make
>> make docs
>> make install
>> cd -
>
> 	[[alternative HTML version deleted]]
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>


-- 
Brian D. Ripley,                  ripley at stats.ox.ac.uk
Professor of Applied Statistics,  http://www.stats.ox.ac.uk/~ripley/
University of Oxford,             Tel:  +44 1865 272861 (self)
1 South Parks Road,                     +44 1865 272866 (PA)
Oxford OX1 3TG, UK                Fax:  +44 1865 272595


From josh.m.ulrich at gmail.com  Fri Jul 26 13:12:56 2013
From: josh.m.ulrich at gmail.com (Joshua Ulrich)
Date: Fri, 26 Jul 2013 06:12:56 -0500
Subject: [Rd] What algorithm is R using to calculate mean?
In-Reply-To: <51F18004.3060509@gmail.com>
References: <51F18004.3060509@gmail.com>
Message-ID: <CAPPM_gRm2akG_xhj1hKDVSUyBG8JYvGT=04tbeYrUTHJT2kDaA@mail.gmail.com>

This was also asked on StackOverflow:
http://stackoverflow.com/q/17866149/271616.  Here is the answer I
posted:

This appears to be the updating method of West, 1979 [1] and it was
implemented in R-2.3.0 in response to PR#1228 [2].

I'm not positive this is the correct algorithm, since it was suggested
by Martin Maechler but implemented by Brian Ripley. I couldn't find a
reference in the source code or version control logs that listed the
actual algorithm used. It was implemented in cov.c in revision 37389
and in summary.c in revision 37393.

[1] http://dl.acm.org/citation.cfm?doid=359146.359153
[2] https://bugs.r-project.org/bugzilla3/show_bug.cgi?id=1228

Best,
--
Joshua Ulrich  |  about.me/joshuaulrich
FOSS Trading  |  www.fosstrading.com


On Thu, Jul 25, 2013 at 2:44 PM, Zach Harrington
<zach.harrington at gmail.com> wrote:
> I am curious to know what algorithm R's mean function uses. Is there some
> reference to the numerical properties of this algorithm?
>
> I found the following C code in summary.c:do_summary():
> case REALSXP:
>     PROTECT(ans = allocVector(REALSXP, 1));
>     for (i = 0; i < n; i++) s += REAL(x)[i];
>     s /= n;
>     if(R_FINITE((double)s)) {
>         for (i = 0; i < n; i++) t += (REAL(x)[i] - s);
>         s += t/n;
>     }
>     REAL(ans)[0] = s;
>     break;
>
> It seems to do a straight up mean:
> for (i = 0; i < n; i++) s += REAL(x)[i];
> s /= n;
>
> Then it adds what i assume is a numerical correction which seems to be the
> mean difference from the mean of the data:
> for (i = 0; i < n; i++) t += (REAL(x)[i] - s);
> s += t/n;
>
> I haven't been able to track this algorithm down anywhere (mean is not a
> great search term).
>
> Any help would be much appreciated,
>
> Zach Harrington
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From edd at debian.org  Fri Jul 26 13:44:04 2013
From: edd at debian.org (Dirk Eddelbuettel)
Date: Fri, 26 Jul 2013 06:44:04 -0500
Subject: [Rd] Building R with Cairo
In-Reply-To: <51F236AA.8000407@stats.ox.ac.uk>
References: <CACHewfzuZtaJry8S7WdX9wcOoBHGSW5kC2zfW9_mw-jds4qxMA@mail.gmail.com>
	<51F236AA.8000407@stats.ox.ac.uk>
Message-ID: <20978.24836.238569.365913@max.nulle.part>


| On 25/07/2013 20:35, Ben Warren wrote:
| >       I have been hacking on an R 2.15 build on an Ubuntu 10.4 box, and I do
| > not know how to debug R's error message regarding cairo "working".

Well -- there is a formally supported package so you could just use what I
use in the official Debian / Ubuntu package.  

Here is eg from my build-log for R 2.10.1-2 from early 2010 (to reflect your
Ubuntu 10.4 requirement) -- cutting and pasting from a grep for 'pango\|cairo':

Get:98 http://ftp.us.debian.org sid/main libcairo2 1.8.8-2 [508kB]
Get:100 http://ftp.us.debian.org sid/main libpango1.0-common 1.26.1-1 [103kB]
Get:104 http://ftp.us.debian.org sid/main libpango1.0-0 1.26.1-1 [298kB]
Get:115 http://ftp.us.debian.org sid/main libcairo2-dev 1.8.8-2 [584kB]
Get:116 http://ftp.us.debian.org sid/main libpango1.0-dev 1.26.1-1 [369kB]
[...]
Setting up libpango1.0-0 (1.26.1-1) ...
Setting up libcairo2-dev (1.8.8-2) ...
Setting up libpango1.0-dev (1.26.1-1) ..
[...]
checking whether pkg-config knows about cairo and pango... yes  
checking whether cairo including pango is >= 1.2 and works... yes  
  Additional capabilities:   PNG, JPEG, TIFF, NLS, cairo

These days, on current releases, it looks similar, apart from the fact that
we are of course using current release vesions.  As you probably should too.

Note that there is excellent support for pre-built binaries versions of Ubuntu
on CRAN as well, but I fear it only goes back as far currently supported
versions including the last long-term support as detailed in the README.

The r-sig-debian list is there for help on matters Debian/Ubuntu too.

Dirk

-- 
Dirk Eddelbuettel | edd at debian.org | http://dirk.eddelbuettel.com


From b.h.mevik at usit.uio.no  Fri Jul 26 15:59:13 2013
From: b.h.mevik at usit.uio.no (=?utf-8?Q?Bj=C3=B8rn-Helge_Mevik?=)
Date: Fri, 26 Jul 2013 15:59:13 +0200
Subject: [Rd] How to best implement package options?
Message-ID: <s3s7ggda0cu.fsf@slagelg.uio.no>

Dear developeRs,

I have a package, pls, that implements package options.  The users are
supposed to use a function pls.options() to manipulate them.

If a user changes the options, they are stored in .GlobalEnv.  I was
recently informed that this is against current CRAN submission policies,
so I need to change that.


I have looked at several different packages that implement package
options, and found that:


1) Many packages simply use the global R options, setting default
  options with base::options() inside either .onLoad() or .onAttach().
  Users then are supposed to use base::options() etc. for manipulating
  the options.

  This has the advantages that users can use the standard options
  interface, and the package authors don't need to "reinvent the wheel".

  One disadvantage is the possibility for name collisions between
  package options.  Some packages try to minimise that risk by prefixing
  all options with the package name.


2) Some packages implement their own version of options() (like
  pls.options()), and store a list of options in the package name space.

  This avoids any name collisions, but users have to relate to several
  options interfaces (the ones I've seen work mostly the same as the
  standard options(), though).

  AFAIK, this solution neccessitates calling unlockBinding() on the
  option list, or using assignInMyNamespace() to update it.


3) Finally, I've found one package ('pkgmaker') that implements a
  general mechanism that can be used by other packages to create package
  options.  The mechanism creates options()-like functions in the
  package's name space, and the optins are either stored as a single
  option in base:::.Options, or in the created function's enclosure.

  Again, users need to relate to separate options interfaces, but the
  package authors don't have to "reinvent the wheel".


What is considered "best practice" for implementing package options?
Any of the above, or something different?


-- 
RegaRds,
Bj?rn-Helge Mevik


From simon.urbanek at r-project.org  Fri Jul 26 17:17:55 2013
From: simon.urbanek at r-project.org (Simon Urbanek)
Date: Fri, 26 Jul 2013 11:17:55 -0400
Subject: [Rd] How to best implement package options?
In-Reply-To: <s3s7ggda0cu.fsf@slagelg.uio.no>
References: <s3s7ggda0cu.fsf@slagelg.uio.no>
Message-ID: <74F6456C-3BFE-4D23-84EE-8B7D09C42B07@r-project.org>


On Jul 26, 2013, at 9:59 AM, Bj?rn-Helge Mevik wrote:

> Dear developeRs,
> 
> I have a package, pls, that implements package options.  The users are
> supposed to use a function pls.options() to manipulate them.
> 
> If a user changes the options, they are stored in .GlobalEnv.  I was
> recently informed that this is against current CRAN submission policies,
> so I need to change that.
> 
> 
> I have looked at several different packages that implement package
> options, and found that:
> 
> 
> 1) Many packages simply use the global R options, setting default
>  options with base::options() inside either .onLoad() or .onAttach().
>  Users then are supposed to use base::options() etc. for manipulating
>  the options.
> 
>  This has the advantages that users can use the standard options
>  interface, and the package authors don't need to "reinvent the wheel".
> 
>  One disadvantage is the possibility for name collisions between
>  package options.  Some packages try to minimise that risk by prefixing
>  all options with the package name.
> 
> 
> 2) Some packages implement their own version of options() (like
>  pls.options()), and store a list of options in the package name space.
> 
>  This avoids any name collisions, but users have to relate to several
>  options interfaces (the ones I've seen work mostly the same as the
>  standard options(), though).
> 
>  AFAIK, this solution neccessitates calling unlockBinding() on the
>  option list, or using assignInMyNamespace() to update it.
> 

That is certainly not a good way. If you have the urge to use unlockBinding() or assign*Namespace() then think again as your design is likely bad. If you want to store package-local information, simply create an environment in your package - it's this simple:

.myenv <- new.env(TRUE, emptyenv())

The environment is independent of the namespace (you don't export it) and thus you don't need any ugly hacks. The code in your package can manipulate it directly, while the user cannot easily mess with it.


> 3) Finally, I've found one package ('pkgmaker') that implements a
>  general mechanism that can be used by other packages to create package
>  options.  The mechanism creates options()-like functions in the
>  package's name space, and the optins are either stored as a single
>  option in base:::.Options, or in the created function's enclosure.
> 
>  Again, users need to relate to separate options interfaces, but the
>  package authors don't have to "reinvent the wheel".
> 
> 
> What is considered "best practice" for implementing package options?
> Any of the above, or something different?
> 

Personally, I hate when packages use their own option management system because it leads to vastly inconsistent behavior, so I prefer using the options() as that is transparent and well defined. But that is just my personal opinion.

Cheers,
Simon


> 
> -- 
> RegaRds,
> Bj?rn-Helge Mevik
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From zach.harrington at gmail.com  Fri Jul 26 15:59:38 2013
From: zach.harrington at gmail.com (Zach Harrington)
Date: Fri, 26 Jul 2013 09:59:38 -0400
Subject: [Rd] What algorithm is R using to calculate mean?
In-Reply-To: <2F9EA67EF9AE1C48A147CB41BE2E15C3491530@DOM-EB-MAIL1.win.ad.jhu.edu>
References: <51F18004.3060509@gmail.com>,
	<CAPPM_gRm2akG_xhj1hKDVSUyBG8JYvGT=04tbeYrUTHJT2kDaA@mail.gmail.com>
	<2F9EA67EF9AE1C48A147CB41BE2E15C3491530@DOM-EB-MAIL1.win.ad.jhu.edu>
Message-ID: <51F280CA.2030904@gmail.com>

An embedded and charset-unspecified text was scrubbed...
Name: not available
URL: <https://stat.ethz.ch/pipermail/r-devel/attachments/20130726/d3cdcee2/attachment.pl>

From ravi.varadhan at jhu.edu  Fri Jul 26 14:58:28 2013
From: ravi.varadhan at jhu.edu (Ravi Varadhan)
Date: Fri, 26 Jul 2013 12:58:28 +0000
Subject: [Rd] What algorithm is R using to calculate mean?
In-Reply-To: <CAPPM_gRm2akG_xhj1hKDVSUyBG8JYvGT=04tbeYrUTHJT2kDaA@mail.gmail.com>
References: <51F18004.3060509@gmail.com>,
	<CAPPM_gRm2akG_xhj1hKDVSUyBG8JYvGT=04tbeYrUTHJT2kDaA@mail.gmail.com>
Message-ID: <2F9EA67EF9AE1C48A147CB41BE2E15C3491530@DOM-EB-MAIL1.win.ad.jhu.edu>

This uses the idea of Kahan's summation, if I am not mistaken.

http://en.wikipedia.org/wiki/Kahan_summation_algorithm 

Ravi
________________________________________
From: r-devel-bounces at r-project.org [r-devel-bounces at r-project.org] on behalf of Joshua Ulrich [josh.m.ulrich at gmail.com]
Sent: Friday, July 26, 2013 7:12 AM
To: Zach Harrington
Cc: r-devel at r-project.org List
Subject: Re: [Rd] What algorithm is R using to calculate mean?

This was also asked on StackOverflow:
http://stackoverflow.com/q/17866149/271616.  Here is the answer I
posted:

This appears to be the updating method of West, 1979 [1] and it was
implemented in R-2.3.0 in response to PR#1228 [2].

I'm not positive this is the correct algorithm, since it was suggested
by Martin Maechler but implemented by Brian Ripley. I couldn't find a
reference in the source code or version control logs that listed the
actual algorithm used. It was implemented in cov.c in revision 37389
and in summary.c in revision 37393.

[1] http://dl.acm.org/citation.cfm?doid=359146.359153
[2] https://bugs.r-project.org/bugzilla3/show_bug.cgi?id=1228

Best,
--
Joshua Ulrich  |  about.me/joshuaulrich
FOSS Trading  |  www.fosstrading.com


On Thu, Jul 25, 2013 at 2:44 PM, Zach Harrington
<zach.harrington at gmail.com> wrote:
> I am curious to know what algorithm R's mean function uses. Is there some
> reference to the numerical properties of this algorithm?
>
> I found the following C code in summary.c:do_summary():
> case REALSXP:
>     PROTECT(ans = allocVector(REALSXP, 1));
>     for (i = 0; i < n; i++) s += REAL(x)[i];
>     s /= n;
>     if(R_FINITE((double)s)) {
>         for (i = 0; i < n; i++) t += (REAL(x)[i] - s);
>         s += t/n;
>     }
>     REAL(ans)[0] = s;
>     break;
>
> It seems to do a straight up mean:
> for (i = 0; i < n; i++) s += REAL(x)[i];
> s /= n;
>
> Then it adds what i assume is a numerical correction which seems to be the
> mean difference from the mean of the data:
> for (i = 0; i < n; i++) t += (REAL(x)[i] - s);
> s += t/n;
>
> I haven't been able to track this algorithm down anywhere (mean is not a
> great search term).
>
> Any help would be much appreciated,
>
> Zach Harrington
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel

______________________________________________
R-devel at r-project.org mailing list
https://stat.ethz.ch/mailman/listinfo/r-devel


From nashjc at uottawa.ca  Sat Jul 27 16:35:26 2013
From: nashjc at uottawa.ca (Prof J C Nash (U30A))
Date: Sat, 27 Jul 2013 10:35:26 -0400
Subject: [Rd] What algorithm is R using to calculate mean?
In-Reply-To: <mailman.27.1374919207.2567.r-devel@r-project.org>
References: <mailman.27.1374919207.2567.r-devel@r-project.org>
Message-ID: <51F3DAAE.1080504@uottawa.ca>

There is quite a literature on related methods for variance. If anyone 
is interested, I did some work (and even published the code in the 
magazine Interface Age in 1981) on some of these. I could probably put 
together scans of relevant materials, some of which are not easily 
available. It would make a good Master's or senior undergrad project, 
and could be (possibly has been) extended to compute covariance matrices 
properly for very large data sets and streaming data.

JN

On 13-07-27 06:00 AM, r-devel-request at r-project.org wrote:
> Message: 6
> Date: Fri, 26 Jul 2013 12:58:28 +0000
> From: Ravi Varadhan<ravi.varadhan at jhu.edu>
> To: Joshua Ulrich<josh.m.ulrich at gmail.com>, Zach Harrington
> 	<zach.harrington at gmail.com>
> Cc:"r-devel at r-project.org List"  <r-devel at r-project.org>
> Subject: Re: [Rd] What algorithm is R using to calculate mean?
> Message-ID:
> 	<2F9EA67EF9AE1C48A147CB41BE2E15C3491530 at DOM-EB-MAIL1.win.ad.jhu.edu>
> Content-Type: text/plain; charset="us-ascii"
>
> This uses the idea of Kahan's summation, if I am not mistaken.
>
> http://en.wikipedia.org/wiki/Kahan_summation_algorithm
>
> Ravi
> __________________________


From hb at biostat.ucsf.edu  Sun Jul 28 19:22:13 2013
From: hb at biostat.ucsf.edu (Henrik Bengtsson)
Date: Sun, 28 Jul 2013 10:22:13 -0700
Subject: [Rd] R -e "" crashes on Windows (but not Rterm -e "")
Message-ID: <CAFDcVCSQx5Zfs5O3RgtT3_x6kuTuZXiuzahF0BhGhBejN6k7eg@mail.gmail.com>

On Windows, the following crashes "R for Windows terminal front-end":

R -e ""

whereas

Rterm -e "" or R -e " " (a space in the expression) doesn't.

I observe this on:

- R Under development (unstable) (2013-07-26 r63419) [Platform:
x86_64-w64-mingw32/x64 (64-bit)]
- R version 3.0.1 Patched (2013-07-25 r63414) [Platform:
x86_64-w64-mingw32/x64 (64-bit)]
- R version 3.0.1 (2013-05-16) [Platform: x86_64-w64-mingw32/x64 (64-bit)]
- R version 2.15.3 Patched (2013-03-13 r62402) [Platform:
x86_64-w64-mingw32/x64 (64-bit)]

Can others reproduce this?  If so, I'll submit a bug report.  (On
Linux/OSX it does not crash/core dump.).

/Henrik


From hb at biostat.ucsf.edu  Sun Jul 28 19:31:43 2013
From: hb at biostat.ucsf.edu (Henrik Bengtsson)
Date: Sun, 28 Jul 2013 10:31:43 -0700
Subject: [Rd] Core dump with R --encoding=foo -e 1 (non-existing encoding)
Message-ID: <CAFDcVCQKUQMs0D_TMLdDcONeEt90ws54UhFD17R8Lvsaumyqgw@mail.gmail.com>

Trying to launch R with a *non-existing* encoding core dumps/crashes,
e.g. R --encoding=foo -e 1.

EXAMPLES:

> R --encoding=foo -e 1
R version 3.0.1 (2013-05-16) -- "Good Sport"
Copyright (C) 2013 The R Foundation for Statistical Computing
Platform: x86_64-apple-darwin10.8.0 (64-bit)
[...]
>
 *** caught segfault ***
address 0xffffffffffffffff, cause 'memory not mapped'
aborting ...
Segmentation fault


% R --encoding=foo -e 1
R version 3.0.0 (2013-04-03) -- "Masked Marvel"
Copyright (C) 2013 The R Foundation for Statistical Computing
Platform: x86_64-unknown-linux-gnu (64-bit)
[...]
> <ERROR: re-encoding failure from encoding 'foo'>

(not sure if the above is a core dump, but the expression is not
echoed/evaluated)


%R --encoding=foo -e 1 (also Rterm --encoding=foo -e 1)
R Under development (unstable) (2013-07-26 r63419) -- "Unsuffered Consequences"
Copyright (C) 2013 The R Foundation for Statistical Computing
Platform: x86_64-w64-mingw32/x64 (64-bit)
[...]
[crashes "R for Windows terminal front-end"]


Should I file a bug report?

/Henrik


From murdoch.duncan at gmail.com  Sun Jul 28 19:39:56 2013
From: murdoch.duncan at gmail.com (Duncan Murdoch)
Date: Sun, 28 Jul 2013 13:39:56 -0400
Subject: [Rd] Core dump with R --encoding=foo -e 1 (non-existing
	encoding)
In-Reply-To: <CAFDcVCQKUQMs0D_TMLdDcONeEt90ws54UhFD17R8Lvsaumyqgw@mail.gmail.com>
References: <CAFDcVCQKUQMs0D_TMLdDcONeEt90ws54UhFD17R8Lvsaumyqgw@mail.gmail.com>
Message-ID: <51F5576C.5070802@gmail.com>

On 13-07-28 1:31 PM, Henrik Bengtsson wrote:
> Trying to launch R with a *non-existing* encoding core dumps/crashes,
> e.g. R --encoding=foo -e 1.
>
> EXAMPLES:
>
>> R --encoding=foo -e 1
> R version 3.0.1 (2013-05-16) -- "Good Sport"
> Copyright (C) 2013 The R Foundation for Statistical Computing
> Platform: x86_64-apple-darwin10.8.0 (64-bit)
> [...]
>>
>   *** caught segfault ***
> address 0xffffffffffffffff, cause 'memory not mapped'
> aborting ...
> Segmentation fault
>
>
> % R --encoding=foo -e 1
> R version 3.0.0 (2013-04-03) -- "Masked Marvel"
> Copyright (C) 2013 The R Foundation for Statistical Computing
> Platform: x86_64-unknown-linux-gnu (64-bit)
> [...]
>> <ERROR: re-encoding failure from encoding 'foo'>
>
> (not sure if the above is a core dump, but the expression is not
> echoed/evaluated)
>
>
> %R --encoding=foo -e 1 (also Rterm --encoding=foo -e 1)
> R Under development (unstable) (2013-07-26 r63419) -- "Unsuffered Consequences"
> Copyright (C) 2013 The R Foundation for Statistical Computing
> Platform: x86_64-w64-mingw32/x64 (64-bit)
> [...]
> [crashes "R for Windows terminal front-end"]
>
>
> Should I file a bug report?

The general rule is that if a crash like that occurs in both the release 
version (which is 3.0.1, not 3.0.0) and R-patched, you should file a bug 
report.

If it only occurs in R-patched or in R-devel, then a message to this 
list is probably better.

If it only occurs in the release but not R-patched, then no report is 
necessary:  it has been fixed.

Duncan Murdoch


From hb at biostat.ucsf.edu  Sun Jul 28 19:52:22 2013
From: hb at biostat.ucsf.edu (Henrik Bengtsson)
Date: Sun, 28 Jul 2013 10:52:22 -0700
Subject: [Rd] Core dump with R --encoding=foo -e 1 (non-existing
	encoding)
In-Reply-To: <51F5576C.5070802@gmail.com>
References: <CAFDcVCQKUQMs0D_TMLdDcONeEt90ws54UhFD17R8Lvsaumyqgw@mail.gmail.com>
	<51F5576C.5070802@gmail.com>
Message-ID: <CAFDcVCTS8Gm1PONKjGxw9=85K79WZ8yTxXM1zCY1iUK=5DaeFA@mail.gmail.com>

On Sun, Jul 28, 2013 at 10:39 AM, Duncan Murdoch
<murdoch.duncan at gmail.com> wrote:
> On 13-07-28 1:31 PM, Henrik Bengtsson wrote:
>>
>> Trying to launch R with a *non-existing* encoding core dumps/crashes,
>> e.g. R --encoding=foo -e 1.
>>
>> EXAMPLES:
>>
>>> R --encoding=foo -e 1
>>
>> R version 3.0.1 (2013-05-16) -- "Good Sport"
>> Copyright (C) 2013 The R Foundation for Statistical Computing
>> Platform: x86_64-apple-darwin10.8.0 (64-bit)
>> [...]
>>>
>>>
>>   *** caught segfault ***
>> address 0xffffffffffffffff, cause 'memory not mapped'
>> aborting ...
>> Segmentation fault
>>
>>
>> % R --encoding=foo -e 1
>> R version 3.0.0 (2013-04-03) -- "Masked Marvel"
>> Copyright (C) 2013 The R Foundation for Statistical Computing
>> Platform: x86_64-unknown-linux-gnu (64-bit)
>> [...]
>>>
>>> <ERROR: re-encoding failure from encoding 'foo'>
>>
>>
>> (not sure if the above is a core dump, but the expression is not
>> echoed/evaluated)
>>
>>
>> %R --encoding=foo -e 1 (also Rterm --encoding=foo -e 1)
>> R Under development (unstable) (2013-07-26 r63419) -- "Unsuffered
>> Consequences"
>> Copyright (C) 2013 The R Foundation for Statistical Computing
>> Platform: x86_64-w64-mingw32/x64 (64-bit)
>> [...]
>> [crashes "R for Windows terminal front-end"]
>>
>>
>> Should I file a bug report?
>
>
> The general rule is that if a crash like that occurs in both the release
> version (which is 3.0.1, not 3.0.0) and R-patched, you should file a bug
> report.
>
> If it only occurs in R-patched or in R-devel, then a message to this list is
> probably better.
>
> If it only occurs in the release but not R-patched, then no report is
> necessary:  it has been fixed.

Thanks for the prompt reply; I've submitted PR#15405
[https://bugs.r-project.org/bugzilla3/show_bug.cgi?id=15405]

/Henrik

>
> Duncan Murdoch
>


From hb at biostat.ucsf.edu  Sun Jul 28 19:55:18 2013
From: hb at biostat.ucsf.edu (Henrik Bengtsson)
Date: Sun, 28 Jul 2013 10:55:18 -0700
Subject: [Rd] R -e "" crashes on Windows (but not Rterm -e "")
In-Reply-To: <CAFDcVCSQx5Zfs5O3RgtT3_x6kuTuZXiuzahF0BhGhBejN6k7eg@mail.gmail.com>
References: <CAFDcVCSQx5Zfs5O3RgtT3_x6kuTuZXiuzahF0BhGhBejN6k7eg@mail.gmail.com>
Message-ID: <CAFDcVCSf0h9vrAyL9Xn8bTbFmMe1md7OZK-HDQbwjEM2E2S44g@mail.gmail.com>

On Sun, Jul 28, 2013 at 10:22 AM, Henrik Bengtsson <hb at biostat.ucsf.edu> wrote:
> On Windows, the following crashes "R for Windows terminal front-end":
>
> R -e ""
>
> whereas
>
> Rterm -e "" or R -e " " (a space in the expression) doesn't.
>
> I observe this on:
>
> - R Under development (unstable) (2013-07-26 r63419) [Platform:
> x86_64-w64-mingw32/x64 (64-bit)]
> - R version 3.0.1 Patched (2013-07-25 r63414) [Platform:
> x86_64-w64-mingw32/x64 (64-bit)]
> - R version 3.0.1 (2013-05-16) [Platform: x86_64-w64-mingw32/x64 (64-bit)]
> - R version 2.15.3 Patched (2013-03-13 r62402) [Platform:
> x86_64-w64-mingw32/x64 (64-bit)]
>
> Can others reproduce this?  If so, I'll submit a bug report.  (On
> Linux/OSX it does not crash/core dump.).

Following Duncan Murdoch's advice in a related message, I've filed bug
report PR#15406
[https://bugs.r-project.org/bugzilla3/show_bug.cgi?id=15406].

/Henrik

>
> /Henrik


From murdoch.duncan at gmail.com  Sun Jul 28 23:17:39 2013
From: murdoch.duncan at gmail.com (Duncan Murdoch)
Date: Sun, 28 Jul 2013 17:17:39 -0400
Subject: [Rd] R -e "" crashes on Windows (but not Rterm -e "")
In-Reply-To: <CAFDcVCSf0h9vrAyL9Xn8bTbFmMe1md7OZK-HDQbwjEM2E2S44g@mail.gmail.com>
References: <CAFDcVCSQx5Zfs5O3RgtT3_x6kuTuZXiuzahF0BhGhBejN6k7eg@mail.gmail.com>
	<CAFDcVCSf0h9vrAyL9Xn8bTbFmMe1md7OZK-HDQbwjEM2E2S44g@mail.gmail.com>
Message-ID: <51F58A73.9010303@gmail.com>

On 13-07-28 1:55 PM, Henrik Bengtsson wrote:
> On Sun, Jul 28, 2013 at 10:22 AM, Henrik Bengtsson <hb at biostat.ucsf.edu> wrote:
>> On Windows, the following crashes "R for Windows terminal front-end":
>>
>> R -e ""
>>
>> whereas
>>
>> Rterm -e "" or R -e " " (a space in the expression) doesn't.
>>
>> I observe this on:
>>
>> - R Under development (unstable) (2013-07-26 r63419) [Platform:
>> x86_64-w64-mingw32/x64 (64-bit)]
>> - R version 3.0.1 Patched (2013-07-25 r63414) [Platform:
>> x86_64-w64-mingw32/x64 (64-bit)]
>> - R version 3.0.1 (2013-05-16) [Platform: x86_64-w64-mingw32/x64 (64-bit)]
>> - R version 2.15.3 Patched (2013-03-13 r62402) [Platform:
>> x86_64-w64-mingw32/x64 (64-bit)]
>>
>> Can others reproduce this?  If so, I'll submit a bug report.  (On
>> Linux/OSX it does not crash/core dump.).
>
> Following Duncan Murdoch's advice in a related message, I've filed bug
> report PR#15406
> [https://bugs.r-project.org/bugzilla3/show_bug.cgi?id=15406].

These bugs are both fixed now in R-devel and R-patched.

A little bit more advice on the question of "should there be a bug 
report or not":

  -  See the discussion in ?bug.report about "When is there a bug?" 
Both of Henrik's reports were clearly bugs.

  -  Some things are so minor that using the bug reporting system wastes 
time.  My own rule is that if a NEWS entry is warranted, then it is 
helpful to have more depth in the discussion in the bug list.  (The HTML 
version of the NEWS file has hyperlinks into the bug list.)  So spelling 
mistakes should be reported to R-devel, not to the bug system.

  - If you report to R-devel, there's a non-zero chance that your report 
will be missed.  If you submit a bug report, it may not be acted on, but 
it will not be so easily lost.

  - If you're asking for an improvement or suggesting a change, you 
should almost certainly start in R-devel, not in the bug list.  People 
might disagree about the value of your suggestion.  If there's general 
agreement, you can post it as a bug report with "Wishlist" in the 
subject heading.

  - If you do post something as a bug report, it may be helpful to 
include a suggested patch.  This should be against the R-devel source, 
not against a displayed version of a function or a help page.  Identify 
the revision number as well.  ("svn diff" on an R source checkout 
produces a nice patch file, including revision number.)  Don't fix more 
than one thing in a single patch file.  Do explain what your patch does.

  - Don't expect all bug reports to get action.  Sometimes they just 
look like too much trouble to track down and will sit in the bug list 
for a long time, sometimes whoever deals with it will disagree that the 
change is desirable, and will mark it as WONTFIX.

Duncan Murdoch


From dstr7320 at uni.sydney.edu.au  Mon Jul 29 09:00:18 2013
From: dstr7320 at uni.sydney.edu.au (Dario Strbenac)
Date: Mon, 29 Jul 2013 07:00:18 +0000
Subject: [Rd] Shell Function not on Linux
Message-ID: <A4D0AD48C137224D9E532742F418928A1CFB8D88@BL2PRD0111MB520.prod.exchangelabs.com>

Hello,

Using R for Windows, I am able to use the shell function :

R version 3.0.1 (2013-05-16) -- "Good Sport"
Copyright (C) 2013 The R Foundation for Statistical Computing
Platform: x86_64-w64-mingw32/x64 (64-bit)

   ...                                               ...

> shell()
Error in shell() : argument "cmd" is missing, with no default

But, on Linux, it isn't found.

R version 3.0.1 (2013-05-16) -- "Good Sport"
Copyright (C) 2013 The R Foundation for Statistical Computing
Platform: x86_64-unknown-linux-gnu (64-bit)

   ...                                               ...

> shell()
Error: could not find function "shell"

Other base functions are found, though.

> plot()
Error in xy.coords(x, y, xlabel, ylabel, log) : 
  argument "x" is missing, with no default
> sum()
[1] 0

Both of these were new R sessions. What should I do now ? Both of the installations were done by me, but on the Linux server, even the system-wide installation of R maintained by the IT administrator doesn't have it.

~$ /usr/bin/R

R version 2.15.2 (2012-10-26) -- "Trick or Treat"
Copyright (C) 2012 The R Foundation for Statistical Computing
ISBN 3-900051-07-0
Platform: i486-pc-linux-gnu (32-bit)

   ...                                               ...

> shell()
Error: could not find function "shell"

What should I do now ?

--------------------------------------
Dario Strbenac
PhD Student
University of Sydney
Camperdown NSW 2050
Australia


From ripley at stats.ox.ac.uk  Mon Jul 29 09:08:18 2013
From: ripley at stats.ox.ac.uk (Prof Brian Ripley)
Date: Mon, 29 Jul 2013 08:08:18 +0100
Subject: [Rd] Shell Function not on Linux
In-Reply-To: <A4D0AD48C137224D9E532742F418928A1CFB8D88@BL2PRD0111MB520.prod.exchangelabs.com>
References: <A4D0AD48C137224D9E532742F418928A1CFB8D88@BL2PRD0111MB520.prod.exchangelabs.com>
Message-ID: <51F614E2.7040209@stats.ox.ac.uk>

You should read the documentation.  shell() is specific to Windows, as 
on all other platforms system() runs a shell.  (This is an OS-level 
difference: Windows is not POSIX compliant.)

See also the manuals, e.g. 
http://cran.r-project.org/doc/manuals/r-release/R-exts.html#Operating-system-access 
and FAQs, e.g.
http://cran.r-project.org/bin/windows/base/rw-FAQ.html#What-should-I-expect-to-behave-differently-from-the-Unix-version

This was really a question for R-help, not R-devel.


On 29/07/2013 08:00, Dario Strbenac wrote:
> Hello,
>
> Using R for Windows, I am able to use the shell function :
>
> R version 3.0.1 (2013-05-16) -- "Good Sport"
> Copyright (C) 2013 The R Foundation for Statistical Computing
> Platform: x86_64-w64-mingw32/x64 (64-bit)
>
>     ...                                               ...
>
>> shell()
> Error in shell() : argument "cmd" is missing, with no default
>
> But, on Linux, it isn't found.
>
> R version 3.0.1 (2013-05-16) -- "Good Sport"
> Copyright (C) 2013 The R Foundation for Statistical Computing
> Platform: x86_64-unknown-linux-gnu (64-bit)
>
>     ...                                               ...
>
>> shell()
> Error: could not find function "shell"
>
> Other base functions are found, though.
>
>> plot()
> Error in xy.coords(x, y, xlabel, ylabel, log) :
>    argument "x" is missing, with no default
>> sum()
> [1] 0
>
> Both of these were new R sessions. What should I do now ? Both of the installations were done by me, but on the Linux server, even the system-wide installation of R maintained by the IT administrator doesn't have it.
>
> ~$ /usr/bin/R
>
> R version 2.15.2 (2012-10-26) -- "Trick or Treat"
> Copyright (C) 2012 The R Foundation for Statistical Computing
> ISBN 3-900051-07-0
> Platform: i486-pc-linux-gnu (32-bit)
>
>     ...                                               ...
>
>> shell()
> Error: could not find function "shell"
>
> What should I do now ?
>
> --------------------------------------
> Dario Strbenac
> PhD Student
> University of Sydney
> Camperdown NSW 2050
> Australia
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>


-- 
Brian D. Ripley,                  ripley at stats.ox.ac.uk
Professor of Applied Statistics,  http://www.stats.ox.ac.uk/~ripley/
University of Oxford,             Tel:  +44 1865 272861 (self)
1 South Parks Road,                     +44 1865 272866 (PA)
Oxford OX1 3TG, UK                Fax:  +44 1865 272595


From dstr7320 at uni.sydney.edu.au  Mon Jul 29 09:14:36 2013
From: dstr7320 at uni.sydney.edu.au (Dario Strbenac)
Date: Mon, 29 Jul 2013 07:14:36 +0000
Subject: [Rd] Shell Function not on Linux
In-Reply-To: <51F614E2.7040209@stats.ox.ac.uk>
References: <A4D0AD48C137224D9E532742F418928A1CFB8D88@BL2PRD0111MB520.prod.exchangelabs.com>,
	<51F614E2.7040209@stats.ox.ac.uk>
Message-ID: <A4D0AD48C137224D9E532742F418928A1CFB8DA3@BL2PRD0111MB520.prod.exchangelabs.com>

I did. Nowhere does it explicitly say it is only for Windows, and one of the arguments also mentions BASH in it, so that made me assume it works for Linux.


________________________________________
From: r-devel-bounces at r-project.org [r-devel-bounces at r-project.org] on behalf of Prof Brian Ripley [ripley at stats.ox.ac.uk]
Sent: Monday, 29 July 2013 5:08 PM
To: r-devel at r-project.org
Subject: Re: [Rd] Shell Function not on Linux

You should read the documentation.  shell() is specific to Windows, as
on all other platforms system() runs a shell.  (This is an OS-level
difference: Windows is not POSIX compliant.)

See also the manuals, e.g.
http://cran.r-project.org/doc/manuals/r-release/R-exts.html#Operating-system-access
and FAQs, e.g.
http://cran.r-project.org/bin/windows/base/rw-FAQ.html#What-should-I-expect-to-behave-differently-from-the-Unix-version

This was really a question for R-help, not R-devel.


On 29/07/2013 08:00, Dario Strbenac wrote:
> Hello,
>
> Using R for Windows, I am able to use the shell function :
>
> R version 3.0.1 (2013-05-16) -- "Good Sport"
> Copyright (C) 2013 The R Foundation for Statistical Computing
> Platform: x86_64-w64-mingw32/x64 (64-bit)
>
>     ...                                               ...
>
>> shell()
> Error in shell() : argument "cmd" is missing, with no default
>
> But, on Linux, it isn't found.
>
> R version 3.0.1 (2013-05-16) -- "Good Sport"
> Copyright (C) 2013 The R Foundation for Statistical Computing
> Platform: x86_64-unknown-linux-gnu (64-bit)
>
>     ...                                               ...
>
>> shell()
> Error: could not find function "shell"
>
> Other base functions are found, though.
>
>> plot()
> Error in xy.coords(x, y, xlabel, ylabel, log) :
>    argument "x" is missing, with no default
>> sum()
> [1] 0
>
> Both of these were new R sessions. What should I do now ? Both of the installations were done by me, but on the Linux server, even the system-wide installation of R maintained by the IT administrator doesn't have it.
>
> ~$ /usr/bin/R
>
> R version 2.15.2 (2012-10-26) -- "Trick or Treat"
> Copyright (C) 2012 The R Foundation for Statistical Computing
> ISBN 3-900051-07-0
> Platform: i486-pc-linux-gnu (32-bit)
>
>     ...                                               ...
>
>> shell()
> Error: could not find function "shell"
>
> What should I do now ?
>
> --------------------------------------
> Dario Strbenac
> PhD Student
> University of Sydney
> Camperdown NSW 2050
> Australia
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>


--
Brian D. Ripley,                  ripley at stats.ox.ac.uk
Professor of Applied Statistics,  http://www.stats.ox.ac.uk/~ripley/
University of Oxford,             Tel:  +44 1865 272861 (self)
1 South Parks Road,                     +44 1865 272866 (PA)
Oxford OX1 3TG, UK                Fax:  +44 1865 272595

______________________________________________
R-devel at r-project.org mailing list
https://stat.ethz.ch/mailman/listinfo/r-devel



From hpages at fhcrc.org  Mon Jul 29 20:52:36 2013
From: hpages at fhcrc.org (=?ISO-8859-1?Q?Herv=E9_Pag=E8s?=)
Date: Mon, 29 Jul 2013 11:52:36 -0700
Subject: [Rd] duplicated.data.frame() is broken on data frames containing \r
Message-ID: <51F6B9F4.3090503@fhcrc.org>

Hi,

The trick used by duplicated.data.frame() is to transform the supplied
data.frame into a character vector by pasting together the columns using
"\r" as separator. But no precautions are taken to deal with "\r" in
the supplied data.frame. As a consequence it's easy to imagine
situations where duplicated.data.frame() returns an incorrect answer:

   > df <- data.frame(a=c("AA", "AA\r"), b=c("\rBBB", "BBB"))
   > df
        a     b
   1   AA \rBBB
   2 AA\r   BBB
   > duplicated(df)
   [1] FALSE  TRUE

Cheers,
H.

 > sessionInfo()
R version 3.0.1 (2013-05-16)
Platform: x86_64-unknown-linux-gnu (64-bit)

locale:
  [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C
  [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8
  [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8
  [7] LC_PAPER=C                 LC_NAME=C
  [9] LC_ADDRESS=C               LC_TELEPHONE=C
[11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C

attached base packages:
[1] stats     graphics  grDevices utils     datasets  methods   base


-- 
Herv? Pag?s

Program in Computational Biology
Division of Public Health Sciences
Fred Hutchinson Cancer Research Center
1100 Fairview Ave. N, M1-B514
P.O. Box 19024
Seattle, WA 98109-1024

E-mail: hpages at fhcrc.org
Phone:  (206) 667-5791
Fax:    (206) 667-1319


From hpages at fhcrc.org  Mon Jul 29 21:06:03 2013
From: hpages at fhcrc.org (=?windows-1252?Q?Herv=E9_Pag=E8s?=)
Date: Mon, 29 Jul 2013 12:06:03 -0700
Subject: [Rd] duplicated.data.frame() is broken on data frames
 containing \r
In-Reply-To: <51F6B9F4.3090503@fhcrc.org>
References: <51F6B9F4.3090503@fhcrc.org>
Message-ID: <51F6BD1B.1040301@fhcrc.org>

OK it's actually documented:

      The data frame method works by pasting together a character
      representation of the rows separated by ?\r?, so may be imperfect
      if the data frame has characters with embedded carriage returns or
      columns which do not reliably map to characters.

But what about fixing it? One possible fix is to use "\r\r" as
separator and to substitute user-supplied "\r" with, say, "#\r#".
Just an example.

Thanks,
H.


On 07/29/2013 11:52 AM, Herv? Pag?s wrote:
> Hi,
>
> The trick used by duplicated.data.frame() is to transform the supplied
> data.frame into a character vector by pasting together the columns using
> "\r" as separator. But no precautions are taken to deal with "\r" in
> the supplied data.frame. As a consequence it's easy to imagine
> situations where duplicated.data.frame() returns an incorrect answer:
>
>    > df <- data.frame(a=c("AA", "AA\r"), b=c("\rBBB", "BBB"))
>    > df
>         a     b
>    1   AA \rBBB
>    2 AA\r   BBB
>    > duplicated(df)
>    [1] FALSE  TRUE
>
> Cheers,
> H.
>
>  > sessionInfo()
> R version 3.0.1 (2013-05-16)
> Platform: x86_64-unknown-linux-gnu (64-bit)
>
> locale:
>   [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C
>   [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8
>   [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8
>   [7] LC_PAPER=C                 LC_NAME=C
>   [9] LC_ADDRESS=C               LC_TELEPHONE=C
> [11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C
>
> attached base packages:
> [1] stats     graphics  grDevices utils     datasets  methods   base
>
>

-- 
Herv? Pag?s

Program in Computational Biology
Division of Public Health Sciences
Fred Hutchinson Cancer Research Center
1100 Fairview Ave. N, M1-B514
P.O. Box 19024
Seattle, WA 98109-1024

E-mail: hpages at fhcrc.org
Phone:  (206) 667-5791
Fax:    (206) 667-1319


From Thierry.ONKELINX at inbo.be  Tue Jul 30 12:34:32 2013
From: Thierry.ONKELINX at inbo.be (ONKELINX, Thierry)
Date: Tue, 30 Jul 2013 10:34:32 +0000
Subject: [Rd] Error from R CMD check
Message-ID: <AA818EAD2576BC488B4F623941DA7427CD31C519@inbomail.inbo.be>

Dear all,

I'm puzzled by the error I get from R CMD check one of my packages. I'm running R CMD check with the --as-cran flag and it get the error both from running it from the command line as from within Rstudio. On the same machine R CMD check on my GRTS package (https://r-forge.r-project.org/R/?group_id=1027) works fine.

Any suggestions on how to fix this? I can send the source code in a private email if required.

Best regards,

Thierry

Output from Rcmd.exe check --as-cran watervogels_0.3-27.tar.gz


* using log directory 'U:/svn2/watervogels/watervogels.Rcheck'
* using R version 3.0.1 Patched (2013-07-14 r63298)
* using platform: i386-w64-mingw32 (32-bit)
* using session charset: ISO8859-1
* checking for file 'watervogels/DESCRIPTION' ... OK
* checking extension type ... Package
* this is package 'watervogels' version '0.3-27'
* package encoding: UTF-8
* checking CRAN incoming feasibility ... NOTE
Maintainer: 'Thierry Onkelinx <Thierry.Onkelinx at inbo.be>'
New submission
Non-FOSS package license (Private package of the Research Institute for Nature and
Forest)
* checking package namespace information ... OK
* checking package dependencies ... OK
* checking if this is a source package ... OK
* checking if there is a namespace ... OK
* checking for executable files ... OK
* checking for hidden files and directories ... OK
* checking for portable file names ... OK
* checking whether package 'watervogels' can be installed ... ERROR
Installation failed.
See 'U:/svn2/watervogels/watervogels.Rcheck/00install.out' for details.

Exited with status 1.



Output from 00install.out

* installing *source* package 'watervogels' ...
** R
** data
** inst
** preparing package for lazy loading
** help
*** installing help indices
** building package indices
** installing vignettes
** testing if installed package can be loaded
Warning in Sys.junction(from, to) :
  cannot set reparse point 'C:\DOCUME~1\THIERR~2\LOCALS~1\Temp\RtmpMZUCyo\RLIBS_15585fa46d84/watervogels', reason 'De in de reparsepuntbuffer aanwezige gegevens zijn ongeldig'
Error in flink(normalizePath(pkgdir), tmplib) :
  cannot link from U:\svn2\watervogels\watervogels.Rcheck\00_pkg_src\watervogels
* removing 'U:/svn2/watervogels/watervogels.Rcheck/watervogels'

A translation of the error message: The data in the reparse point buffer are invalid.

ir. Thierry Onkelinx
Instituut voor natuur- en bosonderzoek / Research Institute for Nature and Forest
team Biometrie & Kwaliteitszorg / team Biometrics & Quality Assurance
Kliniekstraat 25
1070 Anderlecht
Belgium
+ 32 2 525 02 51
+ 32 54 43 61 85
Thierry.Onkelinx at inbo.be
www.inbo.be

To call in the statistician after the experiment is done may be no more than asking him to perform a post-mortem examination: he may be able to say what the experiment died of.
~ Sir Ronald Aylmer Fisher

The plural of anecdote is not data.
~ Roger Brinner

The combination of some data and an aching desire for an answer does not ensure that a reasonable answer can be extracted from a given body of data.
~ John Tukey


* * * * * * * * * * * * * D I S C L A I M E R * * * * * * * * * * * * *
Dit bericht en eventuele bijlagen geven enkel de visie van de schrijver weer en binden het INBO onder geen enkel beding, zolang dit bericht niet bevestigd is door een geldig ondertekend document.
The views expressed in this message and any annex are purely those of the writer and may not be regarded as stating an official position of INBO, as long as the message is not confirmed by a duly signed document.


From murdoch.duncan at gmail.com  Tue Jul 30 13:18:04 2013
From: murdoch.duncan at gmail.com (Duncan Murdoch)
Date: Tue, 30 Jul 2013 07:18:04 -0400
Subject: [Rd] Error from R CMD check
In-Reply-To: <AA818EAD2576BC488B4F623941DA7427CD31C519@inbomail.inbo.be>
References: <AA818EAD2576BC488B4F623941DA7427CD31C519@inbomail.inbo.be>
Message-ID: <51F7A0EC.4070502@gmail.com>

On 13-07-30 6:34 AM, ONKELINX, Thierry wrote:
> Dear all,
>
> I'm puzzled by the error I get from R CMD check one of my packages. I'm running R CMD check with the --as-cran flag and it get the error both from running it from the command line as from within Rstudio. On the same machine R CMD check on my GRTS package (https://r-forge.r-project.org/R/?group_id=1027) works fine.
>
> Any suggestions on how to fix this? I can send the source code in a private email if required.
>
> Best regards,
>
> Thierry
>
> Output from Rcmd.exe check --as-cran watervogels_0.3-27.tar.gz
>
>
> * using log directory 'U:/svn2/watervogels/watervogels.Rcheck'
> * using R version 3.0.1 Patched (2013-07-14 r63298)
> * using platform: i386-w64-mingw32 (32-bit)
> * using session charset: ISO8859-1
> * checking for file 'watervogels/DESCRIPTION' ... OK
> * checking extension type ... Package
> * this is package 'watervogels' version '0.3-27'
> * package encoding: UTF-8
> * checking CRAN incoming feasibility ... NOTE
> Maintainer: 'Thierry Onkelinx <Thierry.Onkelinx at inbo.be>'
> New submission
> Non-FOSS package license (Private package of the Research Institute for Nature and
> Forest)
> * checking package namespace information ... OK
> * checking package dependencies ... OK
> * checking if this is a source package ... OK
> * checking if there is a namespace ... OK
> * checking for executable files ... OK
> * checking for hidden files and directories ... OK
> * checking for portable file names ... OK
> * checking whether package 'watervogels' can be installed ... ERROR
> Installation failed.
> See 'U:/svn2/watervogels/watervogels.Rcheck/00install.out' for details.
>
> Exited with status 1.
>
>
>
> Output from 00install.out
>
> * installing *source* package 'watervogels' ...
> ** R
> ** data
> ** inst
> ** preparing package for lazy loading
> ** help
> *** installing help indices
> ** building package indices
> ** installing vignettes
> ** testing if installed package can be loaded
> Warning in Sys.junction(from, to) :
>    cannot set reparse point 'C:\DOCUME~1\THIERR~2\LOCALS~1\Temp\RtmpMZUCyo\RLIBS_15585fa46d84/watervogels', reason 'De in de reparsepuntbuffer aanwezige gegevens zijn ongeldig'
> Error in flink(normalizePath(pkgdir), tmplib) :
>    cannot link from U:\svn2\watervogels\watervogels.Rcheck\00_pkg_src\watervogels
> * removing 'U:/svn2/watervogels/watervogels.Rcheck/watervogels'
>
> A translation of the error message: The data in the reparse point buffer are invalid.

It's hard to diagnose the cause of the error, but you can avoid the use 
of junctions by setting the environment variable R_WIN_NO_JUNCTIONS to 
some non-empty content, and that might avoid it.

Duncan Murdoch


From hb at biostat.ucsf.edu  Wed Jul 31 04:59:43 2013
From: hb at biostat.ucsf.edu (Henrik Bengtsson)
Date: Tue, 30 Jul 2013 19:59:43 -0700
Subject: [Rd] Adding text comments to graphics device output files?
Message-ID: <CAFDcVCTHb65JCh+uREyczADbgRfMNYHNUJx+PuitpPb1ahASPA@mail.gmail.com>

Hi,

several image file format supports textual/meta data comments in one
way or the other.  For me an obvious usage would be to add
sessionInfo() information to PNG and PDF image files, ideally from
within R although external tools would work as well(*).  Has anyone
looked into this or have any suggestions or comments?

/Henrik

(*) One could even imagine including self-contained R
scripts/vignettes within such comments.


From dtemplelang at ucdavis.edu  Wed Jul 31 05:04:30 2013
From: dtemplelang at ucdavis.edu (Duncan Temple Lang)
Date: Tue, 30 Jul 2013 20:04:30 -0700
Subject: [Rd] Adding text comments to graphics device output files?
In-Reply-To: <CAFDcVCTHb65JCh+uREyczADbgRfMNYHNUJx+PuitpPb1ahASPA@mail.gmail.com>
References: <CAFDcVCTHb65JCh+uREyczADbgRfMNYHNUJx+PuitpPb1ahASPA@mail.gmail.com>
Message-ID: <51F87EBE.3070803@ucdavis.edu>


Hi Henrik

 I have some extensions of Simon U's png package
to read and write metadata elements for PNG.
They are at
   https://github.com/duncantl/png.git

When I have time to completely test them, maybe Simon
may incorporate them.

  D.

On 7/30/13 7:59 PM, Henrik Bengtsson wrote:
> Hi,
> 
> several image file format supports textual/meta data comments in one
> way or the other.  For me an obvious usage would be to add
> sessionInfo() information to PNG and PDF image files, ideally from
> within R although external tools would work as well(*).  Has anyone
> looked into this or have any suggestions or comments?
> 
> /Henrik
> 
> (*) One could even imagine including self-contained R
> scripts/vignettes within such comments.
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>


From hb at biostat.ucsf.edu  Wed Jul 31 06:12:38 2013
From: hb at biostat.ucsf.edu (Henrik Bengtsson)
Date: Tue, 30 Jul 2013 21:12:38 -0700
Subject: [Rd] Adding text comments to graphics device output files?
In-Reply-To: <51F87EBE.3070803@ucdavis.edu>
References: <CAFDcVCTHb65JCh+uREyczADbgRfMNYHNUJx+PuitpPb1ahASPA@mail.gmail.com>
	<51F87EBE.3070803@ucdavis.edu>
Message-ID: <CAFDcVCQ1WeqcX-GShEoZ8-OSwaaRY6EdvxUsH_A=sh7h94z7UA@mail.gmail.com>

Hi Duncan,

this is perfect timing.  Your
https://github.com/duncantl/png/blob/master/testMeta.R example
illustrates what I'm looking for.

Yes, it would be great if this would be incorporated into the 'png' package.

Thanks,

Henrik

On Tue, Jul 30, 2013 at 8:04 PM, Duncan Temple Lang
<dtemplelang at ucdavis.edu> wrote:
>
> Hi Henrik
>
>  I have some extensions of Simon U's png package
> to read and write metadata elements for PNG.
> They are at
>    https://github.com/duncantl/png.git
>
> When I have time to completely test them, maybe Simon
> may incorporate them.
>
>   D.
>
> On 7/30/13 7:59 PM, Henrik Bengtsson wrote:
>> Hi,
>>
>> several image file format supports textual/meta data comments in one
>> way or the other.  For me an obvious usage would be to add
>> sessionInfo() information to PNG and PDF image files, ideally from
>> within R although external tools would work as well(*).  Has anyone
>> looked into this or have any suggestions or comments?
>>
>> /Henrik
>>
>> (*) One could even imagine including self-contained R
>> scripts/vignettes within such comments.
>>
>> ______________________________________________
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From simon.urbanek at r-project.org  Wed Jul 31 14:42:13 2013
From: simon.urbanek at r-project.org (Simon Urbanek)
Date: Wed, 31 Jul 2013 08:42:13 -0400
Subject: [Rd] Adding text comments to graphics device output files?
In-Reply-To: <51F87EBE.3070803@ucdavis.edu>
References: <CAFDcVCTHb65JCh+uREyczADbgRfMNYHNUJx+PuitpPb1ahASPA@mail.gmail.com>
	<51F87EBE.3070803@ucdavis.edu>
Message-ID: <A4CDF879-2D18-4F73-ABCC-CC67D2EA6D75@r-project.org>


On Jul 30, 2013, at 11:04 PM, Duncan Temple Lang wrote:

> 
> Hi Henrik
> 
> I have some extensions of Simon U's png package
> to read and write metadata elements for PNG.
> They are at
>   https://github.com/duncantl/png.git
> 
> When I have time to completely test them, maybe Simon
> may incorporate them.
> 

I was looking at it and it was the last drop that made me push most of my packages to github so you don't need to fork by hand anymore ;). It's on my ToDo list to add port the changes one way or another - I think it's a good idea - thanks Duncan!

Cheers,
Simon



>  D.
> 
> On 7/30/13 7:59 PM, Henrik Bengtsson wrote:
>> Hi,
>> 
>> several image file format supports textual/meta data comments in one
>> way or the other.  For me an obvious usage would be to add
>> sessionInfo() information to PNG and PDF image files, ideally from
>> within R although external tools would work as well(*).  Has anyone
>> looked into this or have any suggestions or comments?
>> 
>> /Henrik
>> 
>> (*) One could even imagine including self-contained R
>> scripts/vignettes within such comments.
>> 
>> ______________________________________________
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel
>> 
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
> 
> 


From simon.urbanek at r-project.org  Wed Jul 31 16:17:39 2013
From: simon.urbanek at r-project.org (Simon Urbanek)
Date: Wed, 31 Jul 2013 10:17:39 -0400
Subject: [Rd] Adding text comments to graphics device output files?
In-Reply-To: <CAFDcVCQ1WeqcX-GShEoZ8-OSwaaRY6EdvxUsH_A=sh7h94z7UA@mail.gmail.com>
References: <CAFDcVCTHb65JCh+uREyczADbgRfMNYHNUJx+PuitpPb1ahASPA@mail.gmail.com>
	<51F87EBE.3070803@ucdavis.edu>
	<CAFDcVCQ1WeqcX-GShEoZ8-OSwaaRY6EdvxUsH_A=sh7h94z7UA@mail.gmail.com>
Message-ID: <D25A53EE-AAC2-42DA-8264-FD5E602DBB33@r-project.org>


On Jul 31, 2013, at 12:12 AM, Henrik Bengtsson wrote:

> Hi Duncan,
> 
> this is perfect timing.  Your
> https://github.com/duncantl/png/blob/master/testMeta.R example
> illustrates what I'm looking for.
> 
> Yes, it would be great if this would be incorporated into the 'png' package.
> 

Ok, I have added support for both text chunks and arbitrary R metadata to the PNG package.
http://rforge.net/png
The it is based on Duncan's idea, but the implementation and API is different -- Duncan's approach was implemented before png has support for the PNG info, so it is now simply extending that concept. You can store native text key/values pairs. In addition, R-native matadata can be attached -- it is stored as a special key "R.metadata" holding the serialization of the R object. See the last example in
http://rforge.net/doc/packages/png/writePNG.html
Feedback is welcome.

Cheers,
Simon



> Thanks,
> 
> Henrik
> 
> On Tue, Jul 30, 2013 at 8:04 PM, Duncan Temple Lang
> <dtemplelang at ucdavis.edu> wrote:
>> 
>> Hi Henrik
>> 
>> I have some extensions of Simon U's png package
>> to read and write metadata elements for PNG.
>> They are at
>>   https://github.com/duncantl/png.git
>> 
>> When I have time to completely test them, maybe Simon
>> may incorporate them.
>> 
>>  D.
>> 
>> On 7/30/13 7:59 PM, Henrik Bengtsson wrote:
>>> Hi,
>>> 
>>> several image file format supports textual/meta data comments in one
>>> way or the other.  For me an obvious usage would be to add
>>> sessionInfo() information to PNG and PDF image files, ideally from
>>> within R although external tools would work as well(*).  Has anyone
>>> looked into this or have any suggestions or comments?
>>> 
>>> /Henrik
>>> 
>>> (*) One could even imagine including self-contained R
>>> scripts/vignettes within such comments.
>>> 
>>> ______________________________________________
>>> R-devel at r-project.org mailing list
>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>> 
>> 
>> ______________________________________________
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
> 
> 


From h.wickham at gmail.com  Wed Jul 31 17:55:34 2013
From: h.wickham at gmail.com (Hadley Wickham)
Date: Wed, 31 Jul 2013 10:55:34 -0500
Subject: [Rd] S3 internal and group generics
Message-ID: <CABdHhvF9m1Qjqz1ifSaWQNcXYSHmPYQwO4rkNXgYA8Y069fa1g@mail.gmail.com>

Hi all,

I've noticed a couple of small bugs/documentation errors related to S3
internal and group generics:

* In ?S3groupGeneric, log2 and log10 are not listed as group generics,
even though they are in the equivalent S4 groups, and are the source
code for do_log1arg contains DispatchGroup("Math", ...)

* As well as log2 and log10, tools:::.get_internal_S3_generics() fails
to include cbind and rbind, even though they are listed in ?"internal
generics"

Based on my reading of the documentation and the source code, I
believe this function lists all S3 internal generics:

s3_internal <- function(fname) {
  # Functions in S4 group generics should be the same
  group <- c(getGroupMembers("Arith"), getGroupMembers("Compare"),
    getGroupMembers("Logic"), getGroupMembers("Math"), getGroupMembers("Math2"),
    getGroupMembers("Summary"), getGroupMembers("Complex"))

  primitive <- .S3PrimitiveGenerics

  # Extracted from ?"internal generic"
  internal <- c("[", "[[", "$", "[<-", "[[<-", "$<-", "unlist",
    "cbind", "rbind", "as.vector")

  c(group, primitive, internal)
}

Have I missed anything?

Thanks!

Hadley

-- 
Chief Scientist, RStudio
http://had.co.nz/


