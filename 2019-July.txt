From @purd|e@@ @end|ng |rom gm@||@com  Mon Jul  1 00:35:40 2019
From: @purd|e@@ @end|ng |rom gm@||@com (Abby Spurdle)
Date: Mon, 1 Jul 2019 10:35:40 +1200
Subject: [Rd] Making R CMD nicer
In-Reply-To: <CAGPh-qOZsZz7CPtquXFijQzUwybXjWrTXZFuGYm0G1T_i6VR5Q@mail.gmail.com>
References: <CAGPh-qOZsZz7CPtquXFijQzUwybXjWrTXZFuGYm0G1T_i6VR5Q@mail.gmail.com>
Message-ID: <CAB8pepyrM+BF8WOFNDSuz4bAMRic5PaRTuO--wRcOwdj5_4MMg@mail.gmail.com>

> First time posting in the R mailing lists so hopefully this works well.
> I noticed when I type `R CMD` I get this unhelpful message:
> /usr/lib/R/bin/Rcmd: 60: shift: can't shift that many

I wasn't able to reproduce this.
Maybe it's a Linux thing.
But then, I suspect you've omitted some of your input.

> I also think it would be nice if `R CMD help` showed the usable commands.

What do you mean...
All of the following give you the "usable commands":

> R CMD
> R CMD -h
> R CMD --help

	[[alternative HTML version deleted]]


From c@@rd|@g@bor @end|ng |rom gm@||@com  Mon Jul  1 01:29:03 2019
From: c@@rd|@g@bor @end|ng |rom gm@||@com (=?UTF-8?B?R8OhYm9yIENzw6FyZGk=?=)
Date: Mon, 1 Jul 2019 00:29:03 +0100
Subject: [Rd] Making R CMD nicer
In-Reply-To: <CAB8pepyrM+BF8WOFNDSuz4bAMRic5PaRTuO--wRcOwdj5_4MMg@mail.gmail.com>
References: <CAGPh-qOZsZz7CPtquXFijQzUwybXjWrTXZFuGYm0G1T_i6VR5Q@mail.gmail.com>
 <CAB8pepyrM+BF8WOFNDSuz4bAMRic5PaRTuO--wRcOwdj5_4MMg@mail.gmail.com>
Message-ID: <CABtg=K=kKUVgDvWbg-nngZYZGTd7zMZ9CD66bZrtcFNJEJ=x6Q@mail.gmail.com>

For the record, this is Linux R-devel:

root at 4bef68c16864:~# R CMD
/opt/R-devel/lib/R/bin/Rcmd: 60: shift: can't shift that many
root at 4bef68c16864:~# R CMD -h
/opt/R-devel/lib/R/bin/Rcmd: 62: exec: -h: not found
root at 4bef68c16864:~# R CMD --help
/opt/R-devel/lib/R/bin/Rcmd: 62: exec: --help: not found

This is R-release on macOS:

? R CMD
/Library/Frameworks/R.framework/Resources/bin/Rcmd: line 62:
/Library/Frameworks/R.framework/Resources/bin/: is a directory
/Library/Frameworks/R.framework/Resources/bin/Rcmd: line 62: exec:
/Library/Frameworks/R.framework/Resources/bin/: cannot execute:
Undefined error: 0
? R CMD -h
/Library/Frameworks/R.framework/Resources/bin/Rcmd: line 62: exec: -h:
invalid option
exec: usage: exec [-cl] [-a name] file [redirection ...]
? R CMD --help
/Library/Frameworks/R.framework/Resources/bin/Rcmd: line 62: exec: --:
invalid option
exec: usage: exec [-cl] [-a name] file [redirection ...]

On Windows you indeed get a useful list of commands and more helpful tips.

Gabor


On Sun, Jun 30, 2019 at 11:36 PM Abby Spurdle <spurdle.a at gmail.com> wrote:
>
> > First time posting in the R mailing lists so hopefully this works well.
> > I noticed when I type `R CMD` I get this unhelpful message:
> > /usr/lib/R/bin/Rcmd: 60: shift: can't shift that many
>
> I wasn't able to reproduce this.
> Maybe it's a Linux thing.
> But then, I suspect you've omitted some of your input.
>
> > I also think it would be nice if `R CMD help` showed the usable commands.
>
> What do you mean...
> All of the following give you the "usable commands":
>
> > R CMD
> > R CMD -h
> > R CMD --help
>
>         [[alternative HTML version deleted]]
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From @purd|e@@ @end|ng |rom gm@||@com  Mon Jul  1 02:08:45 2019
From: @purd|e@@ @end|ng |rom gm@||@com (Abby Spurdle)
Date: Mon, 1 Jul 2019 12:08:45 +1200
Subject: [Rd] Making R CMD nicer
In-Reply-To: <CABtg=K=kKUVgDvWbg-nngZYZGTd7zMZ9CD66bZrtcFNJEJ=x6Q@mail.gmail.com>
References: <CAGPh-qOZsZz7CPtquXFijQzUwybXjWrTXZFuGYm0G1T_i6VR5Q@mail.gmail.com>
 <CAB8pepyrM+BF8WOFNDSuz4bAMRic5PaRTuO--wRcOwdj5_4MMg@mail.gmail.com>
 <CABtg=K=kKUVgDvWbg-nngZYZGTd7zMZ9CD66bZrtcFNJEJ=x6Q@mail.gmail.com>
Message-ID: <CAB8pepwpeVpD6iT8LpzcjeW_poCyoZQM7qBWWG3s+1x_4gpjgg@mail.gmail.com>

In that case, I was wrong.
And I must apologize...

In saying that, good to see Windows out performing Linux on the command
line...


On Mon, Jul 1, 2019 at 11:30 AM G?bor Cs?rdi <csardi.gabor at gmail.com> wrote:
>
> For the record, this is Linux R-devel:
>
> root at 4bef68c16864:~# R CMD
> /opt/R-devel/lib/R/bin/Rcmd: 60: shift: can't shift that many
> root at 4bef68c16864:~# R CMD -h
> /opt/R-devel/lib/R/bin/Rcmd: 62: exec: -h: not found
> root at 4bef68c16864:~# R CMD --help
> /opt/R-devel/lib/R/bin/Rcmd: 62: exec: --help: not found
>
> This is R-release on macOS:
>
> ? R CMD
> /Library/Frameworks/R.framework/Resources/bin/Rcmd: line 62:
> /Library/Frameworks/R.framework/Resources/bin/: is a directory
> /Library/Frameworks/R.framework/Resources/bin/Rcmd: line 62: exec:
> /Library/Frameworks/R.framework/Resources/bin/: cannot execute:
> Undefined error: 0
> ? R CMD -h
> /Library/Frameworks/R.framework/Resources/bin/Rcmd: line 62: exec: -h:
> invalid option
> exec: usage: exec [-cl] [-a name] file [redirection ...]
> ? R CMD --help
> /Library/Frameworks/R.framework/Resources/bin/Rcmd: line 62: exec: --:
> invalid option
> exec: usage: exec [-cl] [-a name] file [redirection ...]
>
> On Windows you indeed get a useful list of commands and more helpful tips.
>
> Gabor
>
>
> On Sun, Jun 30, 2019 at 11:36 PM Abby Spurdle <spurdle.a at gmail.com> wrote:
> >
> > > First time posting in the R mailing lists so hopefully this works
well.
> > > I noticed when I type `R CMD` I get this unhelpful message:
> > > /usr/lib/R/bin/Rcmd: 60: shift: can't shift that many
> >
> > I wasn't able to reproduce this.
> > Maybe it's a Linux thing.
> > But then, I suspect you've omitted some of your input.
> >
> > > I also think it would be nice if `R CMD help` showed the usable
commands.
> >
> > What do you mean...
> > All of the following give you the "usable commands":
> >
> > > R CMD
> > > R CMD -h
> > > R CMD --help
> >
> >         [[alternative HTML version deleted]]
> >
> > ______________________________________________
> > R-devel at r-project.org mailing list
> > https://stat.ethz.ch/mailman/listinfo/r-devel

	[[alternative HTML version deleted]]


From murdoch@dunc@n @end|ng |rom gm@||@com  Mon Jul  1 02:21:31 2019
From: murdoch@dunc@n @end|ng |rom gm@||@com (Duncan Murdoch)
Date: Sun, 30 Jun 2019 20:21:31 -0400
Subject: [Rd] Making R CMD nicer
In-Reply-To: <CAB8pepwpeVpD6iT8LpzcjeW_poCyoZQM7qBWWG3s+1x_4gpjgg@mail.gmail.com>
References: <CAGPh-qOZsZz7CPtquXFijQzUwybXjWrTXZFuGYm0G1T_i6VR5Q@mail.gmail.com>
 <CAB8pepyrM+BF8WOFNDSuz4bAMRic5PaRTuO--wRcOwdj5_4MMg@mail.gmail.com>
 <CABtg=K=kKUVgDvWbg-nngZYZGTd7zMZ9CD66bZrtcFNJEJ=x6Q@mail.gmail.com>
 <CAB8pepwpeVpD6iT8LpzcjeW_poCyoZQM7qBWWG3s+1x_4gpjgg@mail.gmail.com>
Message-ID: <e51aeaea-e24c-8a5b-4780-bd0f89beab3e@gmail.com>

On 30/06/2019 8:08 p.m., Abby Spurdle wrote:
> In that case, I was wrong.
> And I must apologize...
> 
> In saying that, good to see Windows out performing Linux on the command
> line...

That's going to set the bees abuzz...


From @pencer@gr@ve@ @end|ng |rom prod@y@e@com  Mon Jul  1 05:16:17 2019
From: @pencer@gr@ve@ @end|ng |rom prod@y@e@com (Spencer Graves)
Date: Sun, 30 Jun 2019 22:16:17 -0500
Subject: [Rd] R-Forge > GitHub?
In-Reply-To: <CAPPM_gQm4JEDZnqg1xPN8U7j2y76=bBNsmxB0dAm0Z7ujmrXzQ@mail.gmail.com>
References: <71f66de5-e1aa-5649-b07a-6cf79f9b07bc@prodsyse.com>
 <cb4218b1-7fcc-80cb-18ab-361b93a3177e@prodsyse.com>
 <8d6c6dd4-d231-ecc7-c584-6e08f93a81e5@gmail.com>
 <89645BC9-C6BF-4E57-8AA0-9F426BA8AC5E@rstudio.com>
 <CA+rDMK+HXUKnA0j49czOf99M62QBfnyO36Sf1MBEe8a5AO-+XA@mail.gmail.com>
 <06a9569b-5b68-a288-8c4f-1537120a5213@prodsyse.com>
 <CABtg=Km5cdEWyUM55FEiabNdZdHvJoELHZ7RCRMPgQhUg9Gc6w@mail.gmail.com>
 <6d983b3b-62ea-3bb9-724a-01baaff51e70@gmail.com>
 <fb319697-6408-17b5-30a1-7a8f9d8da928@prodsyse.com>
 <CAMMJQ0a7ZtndwL8YYas6+k3BRDtAFizAuaacONQ6i6HmrQMTeA@mail.gmail.com>
 <3f01d7bc-ed20-1a39-25bc-ce7d34e22398@prodsyse.com>
 <CAFDcVCR9=WMJRmT3RVZxaQaWxQ4EciojC5ct4K=PrSjuJKtKNw@mail.gmail.com>
 <c9f1e823-9384-1f9f-0d70-e6ccbe8e9075@prodsyse.com>
 <CAPPM_gQ6Ef0+FYz0NrywwiPyW9O2Wwcms8sbmQATp-jcgyYhBA@mail.gmail.com>
 <CAPPM_gQm4JEDZnqg1xPN8U7j2y76=bBNsmxB0dAm0Z7ujmrXzQ@mail.gmail.com>
Message-ID: <593d5e40-611e-3fcc-c131-6fb7de1130b9@prodsyse.com>



On 2019-06-30 06:58, Joshua Ulrich wrote:
<snip>

> I imported both packages into separate repositories:
> https://github.com/joshuaulrich/tmp-ecdat
> https://github.com/joshuaulrich/tmp-ecfun
>
> I changed your email address on your R-Forge commits to match your
> GitHub email address, so R-Forge commits would be associated with your
> GitHub account.  I also omitted the "move" commit from Ecdat, and the
> "obsolete > GitHub" commits from both packages.  I've attached a file
> with the commands I used, if anyone is interested.
>
> You can use my repos by cloning them to your local machine, adding
> your repos as new remotes, and pushing to them.  You would need to run
> these commands (untested):
>
> ### clone my GitHub repo to your machine
> git clone git at github.com:joshuaulrich/tmp-ecfun.git Ecdat


Thanks so much.? Sadly, I'm still having troubles.? This "git clone ..." 
generates:


Enter passphrase for key '/Users/sbgraves/.ssh/id_rsa':


 ????? Sadly, I don't know the passphrase it's looking for here, and I 
don't know how to find what it's looking for.? Under GitHub > Settings > 
"SSH and GPG keys", I see an SSH key dated two days ago, when I cloned 
Ecdat from within RStudio.? And in "~.ssh" I see files id_rsa and 
id_rsa.pub, both created two days ago.


 ????? What do you suggest I try to get past this?


 ????? Thanks again for all your help.


 ????? Spencer Graves

> cd Ecdat
> ### rename my GitHub repo remote from 'origin' to 'tmp'
> git remote rename origin tmp
> ### add your GitHub repo remote as 'origin'
> ### NOTE: this should be a new, clean repo.
> ###    Rename your existing 'Ecdat' so you don't overwrite it
> git remote add origin https://github.com/sbgraves237/Ecdat
> ### push to your GitHub repo
> git push -u origin master
>
> Then you need to run similar commands for Ecfun.
>
> Best,
> Josh
>
>>>         Thanks,
>>>         Spencer
>>>
>>>
>>> On 2019-06-29 14:09, Henrik Bengtsson wrote:
>>>> On Sat, Jun 29, 2019 at 9:43 AM Spencer Graves
>>>> <spencer.graves at prodsyse.com> wrote:
>>>>> Hi, Ott et al.:
>>>>>
>>>>>
>>>>>          What's the best way to get "Travis CI" to build and test the two
>>>>> packages, Ecdat and Ecfun, that have long been combined in the Ecdat
>>>>> project?
>>>>>
>>>>>
>>>>>          Following Ott's advice and studying studying Wickham's "R
>>>>> Packages" (http://r-pkgs.had.co.nz/), I was able to configure RStudio so
>>>>> it would sync using git with "GitHub.com/sbgraves237/Ecdat".  However,
>>>>> when I tried to configure "Travis CI", it said, "No DESCRIPTION file
>>>>> found, user must supply their own install and script steps".
>>>>>
>>>>>
>>>>>          Earlier in this thread, I think someone suggested I make the
>>>>> Ecdat and Ecfun packages separate projects on GitHub (though I can't
>>>>> find that suggestion now).  This would not be an issue if it were all
>>>>> local without version control.  With RStudio managing my interface with
>>>>> GitHub, it now seems quite tricky.
>>>> I'm 99.999% confident that your life will be much much easier if you
>>>> keep one R package per repository.  If you don't, you'll probably be
>>>> very lonely when it comes to tools etc.  There are built-in 'git'
>>>> commands, but also git utility tools, for extracting a subset of
>>>> folders/files from git repository into new git repositories.  You'll
>>>> still preserve the commit history.  I would deal with this in the
>>>> terminal, using the 'git' client and possible some extraction tool.
>>>>
>>>> Also, while you spend time on this, have a look at the commit
>>>> authorship that I mentioned previously.  It's nice to have that in
>>>> place later.
>>>>
>>>> After you got the above in place, then .travis.yml and appveyor.yml is
>>>> pretty straightforward (might even be a copy'n'paste).
>>>>
>>>> Finally, I saw you put your credentials in the URL when you cloned.  I
>>>> don't think that's safe, your GitHub credentials will be stored in the
>>>> ./.git/config file.  Instead, just clone with:
>>>>
>>>> git clone https://github.com/sbgraves237/Ecdat.git
>>>>
>>>> You can then configure git to cache your HTTPS credentials for a
>>>> certain time, e.g. 120 minutes, so you don't have to enter them each
>>>> time you pull/push.  See https://git-scm.com/docs/git-credential-cache
>>>> for details.  That's what I tell new-comers to Git(Hub|Lab|...) to
>>>> use.  Personally, I add my public SSH key to GitHub and then clone
>>>> with the ssh protocol:
>>>>
>>>> git clone git at github.com:sbgraves237/Ecdat.git
>>>>
>>>> That way my I never have to worry entering my credentials.
>>>>
>>>> /Henrik
>>>>
>>>>>          Suggestions?
>>>>>          Thanks again to all who have offered suggestions so far.  This
>>>>> migration from R-Forge to GitHub seems complete except for the automatic
>>>>> tests provided via "Travis CI".
>>>>>
>>>>>
>>>>>          Spencer
>>>>>
>>>>>
>>>>> On 2019-06-28 22:25, Ott Toomet wrote:
>>>>>> Apparently your username/password are wrong.  Can you clone/push from
>>>>>> other repos?
>>>>>>
>>>>>> You do not need authorization when cloning a public repo, so even
>>>>>> incorrect credentials may work (haven't tested this though).  But for
>>>>>> push you have to have that in order.
>>>>>>
>>>>>> I suggest you create ssh keys, upload those to GH, and use ssh
>>>>>> authorization instead of https.
>>>>>>
>>>>>> Cheers,
>>>>>> Ott
>>>>>>
>>>>>> On Fri, Jun 28, 2019 at 8:18 PM Spencer Graves
>>>>>> <spencer.graves at prodsyse.com <mailto:spencer.graves at prodsyse.com>> wrote:
>>>>>>
>>>>>>       Thanks to Duncan, Henrik and Henrik, Brian, and G?bor:
>>>>>>
>>>>>>
>>>>>>              I created a local copy of the new GitHub version using the
>>>>>>       following:
>>>>>>
>>>>>>       git clone
>>>>>>       https://sbgraves237:mypassword at github.com/sbgraves237/Ecdat.git
>>>>>>
>>>>>>
>>>>>>
>>>>>>              That worked in the sense that I got a local copy. However,
>>>>>>       after
>>>>>>       I rolled the version number and did "git commit" on the DESCRIPTION
>>>>>>       files, my "git push" command generated the following:
>>>>>>
>>>>>>
>>>>>>       remote: Invalid username or password.
>>>>>>       fatal: Authentication failed for
>>>>>>       'https://sbgraves237:mypassword at github.com/sbgraves237/Ecdat.git/'
>>>>>>
>>>>>>
>>>>>>              What am I missing?  [Note:  I used my actual GitHub
>>>>>>       password in
>>>>>>       place of "mypassword" here, and this "Authentication failed" message
>>>>>>       reported the GitHub password I used here.]
>>>>>>
>>>>>>
>>>>>>              Thanks,
>>>>>>              Spencer
>>>>>>
>>>>>>
>>>>>>       p.s.  I'm doing this under macOS Mojave 10.14.5.  Also,  I added
>>>>>>       ".onAttach" functions to the R-Forge versions as Brian G. Peterson
>>>>>>       suggested.  That seemed to work fine.
>>>>>>
>>>>>>
>>>>>>       On 2019-06-28 07:13, Duncan Murdoch wrote:
>>>>>>       > On 28/06/2019 6:26 a.m., G?bor Cs?rdi wrote:
>>>>>>       >
>>>>>>       >> Instead, you can do as Duncan suggested, and put a README in your
>>>>>>       >> R-Forge
>>>>>>       >> repository, that points to *your* GitHub repositor(y/ies). Then the
>>>>>>       >> https://github.com/rforge/ecdat read only mirror will pick this up
>>>>>>       >> and will
>>>>>>       >> point there as well.
>>>>>>       >
>>>>>>       > Just for the record:  that was Henrik Singmann's suggestion, I just
>>>>>>       > agreed with it.
>>>>>>       >
>>>>>>       > Duncan Murdoch
>>>>>>       >
>>>>>>
>>>>>>
>>>>>>               [[alternative HTML version deleted]]
>>>>>>
>>>>>>       ______________________________________________
>>>>>>       R-devel at r-project.org <mailto:R-devel at r-project.org> mailing list
>>>>>>       https://stat.ethz.ch/mailman/listinfo/r-devel
>>>>>>
>>>>>           [[alternative HTML version deleted]]
>>>>>
>>>>> ______________________________________________
>>>>> R-devel at r-project.org mailing list
>>>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>> ______________________________________________
>>> R-devel at r-project.org mailing list
>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>
>>
>> --
>> Joshua Ulrich  |  about.me/joshuaulrich
>> FOSS Trading  |  www.fosstrading.com
>
>


From otoomet @end|ng |rom gm@||@com  Mon Jul  1 08:05:15 2019
From: otoomet @end|ng |rom gm@||@com (Ott Toomet)
Date: Sun, 30 Jun 2019 23:05:15 -0700
Subject: [Rd] R-Forge > GitHub?
In-Reply-To: <593d5e40-611e-3fcc-c131-6fb7de1130b9@prodsyse.com>
References: <71f66de5-e1aa-5649-b07a-6cf79f9b07bc@prodsyse.com>
 <cb4218b1-7fcc-80cb-18ab-361b93a3177e@prodsyse.com>
 <8d6c6dd4-d231-ecc7-c584-6e08f93a81e5@gmail.com>
 <89645BC9-C6BF-4E57-8AA0-9F426BA8AC5E@rstudio.com>
 <CA+rDMK+HXUKnA0j49czOf99M62QBfnyO36Sf1MBEe8a5AO-+XA@mail.gmail.com>
 <06a9569b-5b68-a288-8c4f-1537120a5213@prodsyse.com>
 <CABtg=Km5cdEWyUM55FEiabNdZdHvJoELHZ7RCRMPgQhUg9Gc6w@mail.gmail.com>
 <6d983b3b-62ea-3bb9-724a-01baaff51e70@gmail.com>
 <fb319697-6408-17b5-30a1-7a8f9d8da928@prodsyse.com>
 <CAMMJQ0a7ZtndwL8YYas6+k3BRDtAFizAuaacONQ6i6HmrQMTeA@mail.gmail.com>
 <3f01d7bc-ed20-1a39-25bc-ce7d34e22398@prodsyse.com>
 <CAFDcVCR9=WMJRmT3RVZxaQaWxQ4EciojC5ct4K=PrSjuJKtKNw@mail.gmail.com>
 <c9f1e823-9384-1f9f-0d70-e6ccbe8e9075@prodsyse.com>
 <CAPPM_gQ6Ef0+FYz0NrywwiPyW9O2Wwcms8sbmQATp-jcgyYhBA@mail.gmail.com>
 <CAPPM_gQm4JEDZnqg1xPN8U7j2y76=bBNsmxB0dAm0Z7ujmrXzQ@mail.gmail.com>
 <593d5e40-611e-3fcc-c131-6fb7de1130b9@prodsyse.com>
Message-ID: <CAMMJQ0a0ONoBnZnnn9wq3a4ey336t24CTLrf_RZS99u_hMKrjA@mail.gmail.com>

Apparently you created id_rsa key pair with a passphrase.  Passphrase is
like an additional password protection layer on your ssh key.  I don't know
how did you create it.  But you can always create a new one (you should
delete the old one before you create a new one) using the shell command
'ssh-keygen'.  It asks for a passphrase, just push enter for an empty
passphrase (twice).  You also have to update the ssh public key
(id_rsa.pub) on github by supplying the new public key (id_rsa.pub).

There are some implications you should be aware of:
* if you delete id_rsa*, you cannot use any ssh authorization that relies
on this key any more (that's why you have to update on GH).  From the what
you write (... created 2 days ago) I guess you do not use these keys
elsewhere but I may be wrong.
* if you supply empty passphrase, you bypass the optional extra security
layer.  I think this is OK for open source software development on your
personal computer but your preferences/situation may differ.
* You cannot use the same keys with passphrase if they are created without
one.  This is likely not an issue, but if it turns out to be a problem, you
can either add passphrase to the default keys, or create another set of
keys, passphrase protected.

Cheers,
Ott


On Sun, Jun 30, 2019 at 9:51 PM Spencer Graves <spencer.graves at prodsyse.com>
wrote:

>
>
> On 2019-06-30 06:58, Joshua Ulrich wrote:
> <snip>
>
> > I imported both packages into separate repositories:
> > https://github.com/joshuaulrich/tmp-ecdat
> > https://github.com/joshuaulrich/tmp-ecfun
> >
> > I changed your email address on your R-Forge commits to match your
> > GitHub email address, so R-Forge commits would be associated with your
> > GitHub account.  I also omitted the "move" commit from Ecdat, and the
> > "obsolete > GitHub" commits from both packages.  I've attached a file
> > with the commands I used, if anyone is interested.
> >
> > You can use my repos by cloning them to your local machine, adding
> > your repos as new remotes, and pushing to them.  You would need to run
> > these commands (untested):
> >
> > ### clone my GitHub repo to your machine
> > git clone git at github.com:joshuaulrich/tmp-ecfun.git Ecdat
>
>
> Thanks so much.  Sadly, I'm still having troubles.  This "git clone ..."
> generates:
>
>
> Enter passphrase for key '/Users/sbgraves/.ssh/id_rsa':
>
>
>        Sadly, I don't know the passphrase it's looking for here, and I
> don't know how to find what it's looking for.  Under GitHub > Settings >
> "SSH and GPG keys", I see an SSH key dated two days ago, when I cloned
> Ecdat from within RStudio.  And in "~.ssh" I see files id_rsa and
> id_rsa.pub, both created two days ago.
>
>
>        What do you suggest I try to get past this?
>
>
>        Thanks again for all your help.
>
>
>        Spencer Graves
>
> > cd Ecdat
> > ### rename my GitHub repo remote from 'origin' to 'tmp'
> > git remote rename origin tmp
> > ### add your GitHub repo remote as 'origin'
> > ### NOTE: this should be a new, clean repo.
> > ###    Rename your existing 'Ecdat' so you don't overwrite it
> > git remote add origin https://github.com/sbgraves237/Ecdat
> > ### push to your GitHub repo
> > git push -u origin master
> >
> > Then you need to run similar commands for Ecfun.
> >
> > Best,
> > Josh
> >
> >>>         Thanks,
> >>>         Spencer
> >>>
> >>>
> >>> On 2019-06-29 14:09, Henrik Bengtsson wrote:
> >>>> On Sat, Jun 29, 2019 at 9:43 AM Spencer Graves
> >>>> <spencer.graves at prodsyse.com> wrote:
> >>>>> Hi, Ott et al.:
> >>>>>
> >>>>>
> >>>>>          What's the best way to get "Travis CI" to build and test
> the two
> >>>>> packages, Ecdat and Ecfun, that have long been combined in the Ecdat
> >>>>> project?
> >>>>>
> >>>>>
> >>>>>          Following Ott's advice and studying studying Wickham's "R
> >>>>> Packages" (http://r-pkgs.had.co.nz/), I was able to configure
> RStudio so
> >>>>> it would sync using git with "GitHub.com/sbgraves237/Ecdat".
> However,
> >>>>> when I tried to configure "Travis CI", it said, "No DESCRIPTION file
> >>>>> found, user must supply their own install and script steps".
> >>>>>
> >>>>>
> >>>>>          Earlier in this thread, I think someone suggested I make the
> >>>>> Ecdat and Ecfun packages separate projects on GitHub (though I can't
> >>>>> find that suggestion now).  This would not be an issue if it were all
> >>>>> local without version control.  With RStudio managing my interface
> with
> >>>>> GitHub, it now seems quite tricky.
> >>>> I'm 99.999% confident that your life will be much much easier if you
> >>>> keep one R package per repository.  If you don't, you'll probably be
> >>>> very lonely when it comes to tools etc.  There are built-in 'git'
> >>>> commands, but also git utility tools, for extracting a subset of
> >>>> folders/files from git repository into new git repositories.  You'll
> >>>> still preserve the commit history.  I would deal with this in the
> >>>> terminal, using the 'git' client and possible some extraction tool.
> >>>>
> >>>> Also, while you spend time on this, have a look at the commit
> >>>> authorship that I mentioned previously.  It's nice to have that in
> >>>> place later.
> >>>>
> >>>> After you got the above in place, then .travis.yml and appveyor.yml is
> >>>> pretty straightforward (might even be a copy'n'paste).
> >>>>
> >>>> Finally, I saw you put your credentials in the URL when you cloned.  I
> >>>> don't think that's safe, your GitHub credentials will be stored in the
> >>>> ./.git/config file.  Instead, just clone with:
> >>>>
> >>>> git clone https://github.com/sbgraves237/Ecdat.git
> >>>>
> >>>> You can then configure git to cache your HTTPS credentials for a
> >>>> certain time, e.g. 120 minutes, so you don't have to enter them each
> >>>> time you pull/push.  See
> https://git-scm.com/docs/git-credential-cache
> >>>> for details.  That's what I tell new-comers to Git(Hub|Lab|...) to
> >>>> use.  Personally, I add my public SSH key to GitHub and then clone
> >>>> with the ssh protocol:
> >>>>
> >>>> git clone git at github.com:sbgraves237/Ecdat.git
> >>>>
> >>>> That way my I never have to worry entering my credentials.
> >>>>
> >>>> /Henrik
> >>>>
> >>>>>          Suggestions?
> >>>>>          Thanks again to all who have offered suggestions so far.
> This
> >>>>> migration from R-Forge to GitHub seems complete except for the
> automatic
> >>>>> tests provided via "Travis CI".
> >>>>>
> >>>>>
> >>>>>          Spencer
> >>>>>
> >>>>>
> >>>>> On 2019-06-28 22:25, Ott Toomet wrote:
> >>>>>> Apparently your username/password are wrong.  Can you clone/push
> from
> >>>>>> other repos?
> >>>>>>
> >>>>>> You do not need authorization when cloning a public repo, so even
> >>>>>> incorrect credentials may work (haven't tested this though).  But
> for
> >>>>>> push you have to have that in order.
> >>>>>>
> >>>>>> I suggest you create ssh keys, upload those to GH, and use ssh
> >>>>>> authorization instead of https.
> >>>>>>
> >>>>>> Cheers,
> >>>>>> Ott
> >>>>>>
> >>>>>> On Fri, Jun 28, 2019 at 8:18 PM Spencer Graves
> >>>>>> <spencer.graves at prodsyse.com <mailto:spencer.graves at prodsyse.com>>
> wrote:
> >>>>>>
> >>>>>>       Thanks to Duncan, Henrik and Henrik, Brian, and G?bor:
> >>>>>>
> >>>>>>
> >>>>>>              I created a local copy of the new GitHub version using
> the
> >>>>>>       following:
> >>>>>>
> >>>>>>       git clone
> >>>>>>
> https://sbgraves237:mypassword at github.com/sbgraves237/Ecdat.git
> >>>>>>
> >>>>>>
> >>>>>>
> >>>>>>              That worked in the sense that I got a local copy.
> However,
> >>>>>>       after
> >>>>>>       I rolled the version number and did "git commit" on the
> DESCRIPTION
> >>>>>>       files, my "git push" command generated the following:
> >>>>>>
> >>>>>>
> >>>>>>       remote: Invalid username or password.
> >>>>>>       fatal: Authentication failed for
> >>>>>>       '
> https://sbgraves237:mypassword at github.com/sbgraves237/Ecdat.git/'
> >>>>>>
> >>>>>>
> >>>>>>              What am I missing?  [Note:  I used my actual GitHub
> >>>>>>       password in
> >>>>>>       place of "mypassword" here, and this "Authentication failed"
> message
> >>>>>>       reported the GitHub password I used here.]
> >>>>>>
> >>>>>>
> >>>>>>              Thanks,
> >>>>>>              Spencer
> >>>>>>
> >>>>>>
> >>>>>>       p.s.  I'm doing this under macOS Mojave 10.14.5.  Also,  I
> added
> >>>>>>       ".onAttach" functions to the R-Forge versions as Brian G.
> Peterson
> >>>>>>       suggested.  That seemed to work fine.
> >>>>>>
> >>>>>>
> >>>>>>       On 2019-06-28 07:13, Duncan Murdoch wrote:
> >>>>>>       > On 28/06/2019 6:26 a.m., G?bor Cs?rdi wrote:
> >>>>>>       >
> >>>>>>       >> Instead, you can do as Duncan suggested, and put a README
> in your
> >>>>>>       >> R-Forge
> >>>>>>       >> repository, that points to *your* GitHub repositor(y/ies).
> Then the
> >>>>>>       >> https://github.com/rforge/ecdat read only mirror will
> pick this up
> >>>>>>       >> and will
> >>>>>>       >> point there as well.
> >>>>>>       >
> >>>>>>       > Just for the record:  that was Henrik Singmann's
> suggestion, I just
> >>>>>>       > agreed with it.
> >>>>>>       >
> >>>>>>       > Duncan Murdoch
> >>>>>>       >
> >>>>>>
> >>>>>>
> >>>>>>               [[alternative HTML version deleted]]
> >>>>>>
> >>>>>>       ______________________________________________
> >>>>>>       R-devel at r-project.org <mailto:R-devel at r-project.org> mailing
> list
> >>>>>>       https://stat.ethz.ch/mailman/listinfo/r-devel
> >>>>>>
> >>>>>           [[alternative HTML version deleted]]
> >>>>>
> >>>>> ______________________________________________
> >>>>> R-devel at r-project.org mailing list
> >>>>> https://stat.ethz.ch/mailman/listinfo/r-devel
> >>> ______________________________________________
> >>> R-devel at r-project.org mailing list
> >>> https://stat.ethz.ch/mailman/listinfo/r-devel
> >>
> >>
> >> --
> >> Joshua Ulrich  |  about.me/joshuaulrich
> >> FOSS Trading  |  www.fosstrading.com
> >
> >
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>

	[[alternative HTML version deleted]]


From j@@onx98 @end|ng |rom gm@||@com  Mon Jul  1 02:09:19 2019
From: j@@onx98 @end|ng |rom gm@||@com (Jason Xu)
Date: Sun, 30 Jun 2019 20:09:19 -0400
Subject: [Rd] Making R CMD nicer
In-Reply-To: <CABtg=K=kKUVgDvWbg-nngZYZGTd7zMZ9CD66bZrtcFNJEJ=x6Q@mail.gmail.com>
References: <CAGPh-qOZsZz7CPtquXFijQzUwybXjWrTXZFuGYm0G1T_i6VR5Q@mail.gmail.com>
 <CAB8pepyrM+BF8WOFNDSuz4bAMRic5PaRTuO--wRcOwdj5_4MMg@mail.gmail.com>
 <CABtg=K=kKUVgDvWbg-nngZYZGTd7zMZ9CD66bZrtcFNJEJ=x6Q@mail.gmail.com>
Message-ID: <CAGPh-qOApct2AJ7AhyYxG6rAeRoaRtgrrMHUDzkJE+26dm_Nug@mail.gmail.com>

Yes I'm using R 3.4.4 on Ubuntu 18.04. I doubt the Windows version would
make use of a bash script.
I'm all for a more consistent interface. It puzzles me that a shell script
is used at all since that does not seem portable, especially for Windows
users.

To my surprise I discovered the R that's called from shell, usr/bin/R, is
actually just a shell script. The binary that's called seems to be
/usr/lib/R/bin/exec/R which is a tiny executable that then probably calls
something else.
In comparison the python called from shell, /usr/bin/python3.6, really is a
binary. I'm sure there's a good reason that R uses a shell wrapper script
but it's not like a C program can't parse arguments or set env vars.





On Sun, Jun 30, 2019 at 7:30 PM G?bor Cs?rdi <csardi.gabor at gmail.com> wrote:

> For the record, this is Linux R-devel:
>
> root at 4bef68c16864:~# R CMD
> /opt/R-devel/lib/R/bin/Rcmd: 60: shift: can't shift that many
> root at 4bef68c16864:~# R CMD -h
> /opt/R-devel/lib/R/bin/Rcmd: 62: exec: -h: not found
> root at 4bef68c16864:~# R CMD --help
> /opt/R-devel/lib/R/bin/Rcmd: 62: exec: --help: not found
>
> This is R-release on macOS:
>
> ? R CMD
> /Library/Frameworks/R.framework/Resources/bin/Rcmd: line 62:
> /Library/Frameworks/R.framework/Resources/bin/: is a directory
> /Library/Frameworks/R.framework/Resources/bin/Rcmd: line 62: exec:
> /Library/Frameworks/R.framework/Resources/bin/: cannot execute:
> Undefined error: 0
> ? R CMD -h
> /Library/Frameworks/R.framework/Resources/bin/Rcmd: line 62: exec: -h:
> invalid option
> exec: usage: exec [-cl] [-a name] file [redirection ...]
> ? R CMD --help
> /Library/Frameworks/R.framework/Resources/bin/Rcmd: line 62: exec: --:
> invalid option
> exec: usage: exec [-cl] [-a name] file [redirection ...]
>
> On Windows you indeed get a useful list of commands and more helpful tips.
>
> Gabor
>
>
> On Sun, Jun 30, 2019 at 11:36 PM Abby Spurdle <spurdle.a at gmail.com> wrote:
> >
> > > First time posting in the R mailing lists so hopefully this works well.
> > > I noticed when I type `R CMD` I get this unhelpful message:
> > > /usr/lib/R/bin/Rcmd: 60: shift: can't shift that many
> >
> > I wasn't able to reproduce this.
> > Maybe it's a Linux thing.
> > But then, I suspect you've omitted some of your input.
> >
> > > I also think it would be nice if `R CMD help` showed the usable
> commands.
> >
> > What do you mean...
> > All of the following give you the "usable commands":
> >
> > > R CMD
> > > R CMD -h
> > > R CMD --help
> >
> >         [[alternative HTML version deleted]]
> >
> > ______________________________________________
> > R-devel at r-project.org mailing list
> > https://stat.ethz.ch/mailman/listinfo/r-devel
>

	[[alternative HTML version deleted]]


From j@@onx98 @end|ng |rom gm@||@com  Mon Jul  1 02:26:48 2019
From: j@@onx98 @end|ng |rom gm@||@com (Jason Xu)
Date: Sun, 30 Jun 2019 20:26:48 -0400
Subject: [Rd] Making R CMD nicer
In-Reply-To: <CAB8pepwpeVpD6iT8LpzcjeW_poCyoZQM7qBWWG3s+1x_4gpjgg@mail.gmail.com>
References: <CAGPh-qOZsZz7CPtquXFijQzUwybXjWrTXZFuGYm0G1T_i6VR5Q@mail.gmail.com>
 <CAB8pepyrM+BF8WOFNDSuz4bAMRic5PaRTuO--wRcOwdj5_4MMg@mail.gmail.com>
 <CABtg=K=kKUVgDvWbg-nngZYZGTd7zMZ9CD66bZrtcFNJEJ=x6Q@mail.gmail.com>
 <CAB8pepwpeVpD6iT8LpzcjeW_poCyoZQM7qBWWG3s+1x_4gpjgg@mail.gmail.com>
Message-ID: <CAGPh-qOfkiB-J7iK38asVyc0DNLTKwjuofP7ee6yyovQumXpmg@mail.gmail.com>

In my humble personal opinion, I try to avoid bash scripts longer than a
couple lines because I find the syntax so obtuse and unintuitive it's
difficult to maintain and write less buggy code. But that is mostly a
reflection of my personal inexperience.
I think the only time a bash script is really needed is for maximum
portability in systems _with bash_.
(I would use python for a wrapper in personal projects, given python comes
pre-installed on many linux systems and OS X, but I completely understand
not wanting to burden Windows users with an extra python dependency to
install.)





On Sun, Jun 30, 2019 at 8:08 PM Abby Spurdle <spurdle.a at gmail.com> wrote:

> In that case, I was wrong.
> And I must apologize...
>
> In saying that, good to see Windows out performing Linux on the command
> line...
>
>
> On Mon, Jul 1, 2019 at 11:30 AM G?bor Cs?rdi <csardi.gabor at gmail.com>
> wrote:
> >
> > For the record, this is Linux R-devel:
> >
> > root at 4bef68c16864:~# R CMD
> > /opt/R-devel/lib/R/bin/Rcmd: 60: shift: can't shift that many
> > root at 4bef68c16864:~# R CMD -h
> > /opt/R-devel/lib/R/bin/Rcmd: 62: exec: -h: not found
> > root at 4bef68c16864:~# R CMD --help
> > /opt/R-devel/lib/R/bin/Rcmd: 62: exec: --help: not found
> >
> > This is R-release on macOS:
> >
> > ? R CMD
> > /Library/Frameworks/R.framework/Resources/bin/Rcmd: line 62:
> > /Library/Frameworks/R.framework/Resources/bin/: is a directory
> > /Library/Frameworks/R.framework/Resources/bin/Rcmd: line 62: exec:
> > /Library/Frameworks/R.framework/Resources/bin/: cannot execute:
> > Undefined error: 0
> > ? R CMD -h
> > /Library/Frameworks/R.framework/Resources/bin/Rcmd: line 62: exec: -h:
> > invalid option
> > exec: usage: exec [-cl] [-a name] file [redirection ...]
> > ? R CMD --help
> > /Library/Frameworks/R.framework/Resources/bin/Rcmd: line 62: exec: --:
> > invalid option
> > exec: usage: exec [-cl] [-a name] file [redirection ...]
> >
> > On Windows you indeed get a useful list of commands and more helpful
> tips.
> >
> > Gabor
> >
> >
> > On Sun, Jun 30, 2019 at 11:36 PM Abby Spurdle <spurdle.a at gmail.com>
> wrote:
> > >
> > > > First time posting in the R mailing lists so hopefully this works
> well.
> > > > I noticed when I type `R CMD` I get this unhelpful message:
> > > > /usr/lib/R/bin/Rcmd: 60: shift: can't shift that many
> > >
> > > I wasn't able to reproduce this.
> > > Maybe it's a Linux thing.
> > > But then, I suspect you've omitted some of your input.
> > >
> > > > I also think it would be nice if `R CMD help` showed the usable
> commands.
> > >
> > > What do you mean...
> > > All of the following give you the "usable commands":
> > >
> > > > R CMD
> > > > R CMD -h
> > > > R CMD --help
> > >
> > >         [[alternative HTML version deleted]]
> > >
> > > ______________________________________________
> > > R-devel at r-project.org mailing list
> > > https://stat.ethz.ch/mailman/listinfo/r-devel
>

	[[alternative HTML version deleted]]


From georg|@bo@hn@kov @end|ng |rom m@nche@ter@@c@uk  Mon Jul  1 11:11:39 2019
From: georg|@bo@hn@kov @end|ng |rom m@nche@ter@@c@uk (Georgi Boshnakov)
Date: Mon, 1 Jul 2019 09:11:39 +0000
Subject: [Rd] methods package: A _R_CHECK_LENGTH_1_LOGIC2_=true
Message-ID: <438D2EC9EAFE5946B2D5864670EA468E018F7206B3@MBXP02.ds.man.ac.uk>

I run checks with  R-devel rev. 76756 on several of my packages which use S4, with no ill effects. 

With the risk of not adding much, it seems that Martin's example, which I repeat below, suggests a crossover between several "signatures" involved here - the signature of the generic, the signature of the method (the argument for setMethod()), and the signature of the function object defining the method.

    >> r2 <- oligoFn(object=diag(2),          target=array(42))
    > Error in .local(object, target) :
    > argument "target" is missing, with no default
    >> getMethod("oligoFn", signature(object="matrix", subset="missing", target="array"))
    > Method Definition:

    > function (object, subset, target, value)
    > {
    > .local <- function (object, subset, target, value)
    > list(object = object, target = target)
    > .local(object, target)
    > }


a) .local() seems superfluous here, since the signature of the function object is identical to that of the generic.

b) "subset" is "missing" in the signature of the method but it is (legally, I believe) present in the function object. The call .local(object, target) would be appropriate if "subset" was missing also from the signature of the function object (the latter would be illegal here). Alternatively, it could be named, as in .local(object, target = target)  or maybe even 
.local(object, , target).

--
Georgi Boshnakov 

------------------------------
Date: Sat, 29 Jun 2019 22:44:49 +0200
From: Martin Maechler <maechler at stat.math.ethz.ch>
To: R-devel <r-devel at r-project.org>, Henrik Bengtsson
        <henrik.bengtsson at gmail.com>
Cc: Martin Maechler <maechler at stat.math.ethz.ch>
Subject: Re: [Rd] methods package: A _R_CHECK_LENGTH_1_LOGIC2_=true
        error
Message-ID: <23831.52673.201433.320952 at stat.math.ethz.ch>
Content-Type: text/plain; charset="utf-8"

>>>>> Martin Maechler
>>>>>     on Sat, 29 Jun 2019 12:05:49 +0200 writes:

>>>>> Martin Maechler
>>>>>     on Sat, 29 Jun 2019 10:33:10 +0200 writes:

>>>>> peter dalgaard
>>>>>     on Fri, 28 Jun 2019 16:20:03 +0200 writes:

    >>> > On 28 Jun 2019, at 16:03 , Martin Maechler <maechler at stat.math.ethz.ch> wrote:
    >>> >
    >>> >>>>>> Henrik Bengtsson
    >>> >>>>>>    on Thu, 27 Jun 2019 16:00:39 -0700 writes:
    >>> >
    >>> >> Using:
    >>> >>
    >>> >> untrace(methods::conformMethod)
    >>> >> at <- c(12,4,3,2)
    >>> >> str(body(methods::conformMethod)[[at]])
    >>> >> ## language omittedSig <- omittedSig && (signature[omittedSig] != "missing")
    >>> >> cc <- 0L
    >>> >> trace(methods::conformMethod, tracer = quote({
    >>> >>  cc <<- cc + 1L
    >>> >>  print(cc)
    >>> >>  if (cc == 31) {  ## manually identified
    >>> >>    untrace(methods::conformMethod)
    >>> >>    trace(methods::conformMethod, at = list(at), tracer = quote({
    >>> >>      str(list(signature = signature, mnames = mnames, fnames = fnames))
    >>> >>      print(ls())
    >>> >>      try(str(list(omittedSig = omittedSig, signature = signature)))
    >>> >>    }))
    >>> >>  }
    >>> >> }))
    >>> >> loadNamespace("oligo")
    >>> >>
    >>> >> gives:
    >>> >>
    >>> >> Untracing function "conformMethod" in package "methods"
    >>> >> Tracing function "conformMethod" in package "methods"
    >>> >> Tracing conformMethod(signature, mnames, fnames, f, fdef, definition)
    >>> >> step 12,4,3,2
    >>> >> List of 3
    >>> >> $ signature: Named chr [1:4] "TilingFeatureSet" "ANY" "ANY" "array"
    >>> >>  ..- attr(*, "names")= chr [1:4] "object" "subset" "target" "value"
    >>> >>  ..- attr(*, "package")= chr [1:4] "oligoClasses" "methods" "methods" "methods"
    >>> >> $ mnames   : chr [1:2] "object" "value"
    >>> >> $ fnames   : chr [1:4] "object" "subset" "target" "value"
    >>> >> [1] "f"          "fdef"       "fnames"     "fsig"       "imf"
    >>> >> [6] "method"     "mnames"     "omitted"    "omittedSig" "sig0"
    >>> >> [11] "sigNames"   "signature"
    >>> >> List of 2
    >>> >> $ omittedSig: logi [1:4] FALSE TRUE TRUE FALSE
    >>> >> $ signature : Named chr [1:4] "TilingFeatureSet" "ANY" "ANY" "array"
    >>> >>  ..- attr(*, "names")= chr [1:4] "object" "subset" "target" "value"
    >>> >>  ..- attr(*, "package")= chr [1:4] "oligoClasses" "methods" "methods" "methods"
    >>> >> Error in omittedSig && (signature[omittedSig] != "missing") :
    >>> >>  'length(x) = 4 > 1' in coercion to 'logical(1)'
    >>> >> Error: unable to load R code in package 'oligo'
    >>> >>
    >>> >
    >>> > Thank you, Henrik, nice piece of using trace() .. and the above
    >>> > is useful for solving the issue --  I can work with that.
    >>> >
    >>> > I'm  already pretty sure the wrong code starts with
    >>> >
    >>> >    omittedSig <- sigNames %in% fnames[omitted] # ....

    >> my  "pretty sure"  statement above has proven to be wrong ..

    >>> > -------------
    >>> >
    >>>
    >>> I think the intention must have been that the two "ANY" signatures should change to "missing".

    >> Definitely.

    >>> However, with the current logic that will not happen, because
    >>>
    >>> > c(F,T,T,F) &&  c(T,T)
    >>> [1] FALSE
    >>>
    >>> Henrik's non-fix would have resulted in
    >>>
    >>> > c(F,T,T,F) &  c(T,T)
    >>> [1] FALSE  TRUE  TRUE FALSE
    >>>
    >>> which is actually right, but only coincidentally due to recycling of c(T,T). Had it been c(F,T) then it would have been expanded to c(F,T,F,T) which would be the opposite of what was wanted.
    >>>
    >>> Barring NA issues, I still think
    >>>
    >>> omittedSig[omittedSig] <- (signature[omittedSig] != "missing")
    >>>
    >>> should do the trick.

    >> yes, (most probably).  I've found a version of that which should
    >> be even easier to "read and understand", in  svn commit 76753 :

    >> svn diff -c 76753 src/library/methods/R/RMethodUtils.R

    >> --- src/library/methods/R/RMethodUtils.R (Revision 76752)
    >> +++ src/library/methods/R/RMethodUtils.R (Revision 76753)
    >> @@ -342,8 +342,7 @@
    >> gettextf("formal arguments (%s) omitted in the method definition cannot be in the signature", bad2),
    >> call. = TRUE, domain = NA)
    >> }
    >> -    else if(!all(signature[omittedSig] == "missing")) {
    >> -        omittedSig <- omittedSig && (signature[omittedSig] != "missing")
    >> +    else if(any(omittedSig <- omittedSig & signature != "missing")) {


    >> BTW:  I've marked this --- and the  runmed() seg.fault + na.action
    >> change ---  as something to be added to R 3.6.1 patched,  as I
    >> deemed I should obey the "code freeze" rule in both cases.

    >> Martin

    > Hmm... I think we got a 'Neverending Story' here -- because it
    > seems, both Peter and I were wrong in thinking that it's a good
    > idea to change "missing" to "ANY" here ...
    > ((or if that *was* correct, that needs to entail more changes
    > happening during setMethod(.) {conformMethod() is only called in
    > one place in our code base, namely from setMethod()} :

as a matter of fact, I've been brave for now, left the change to
conformMethod()  and started to fix the constructed .local()
calls which are created in  conformMethod()'s sibling,
which is rematchDefinition().

It seems that this builds e.g. Matrix {with its gazillion
setMethod()s} and that continues to run its own tests.  OTOH,
Matrix may not trigger the situations that are dealt with here
at all, as the signature() are rarely longer than three, and at
some point in time I had made long passes through the package in
order to "minimize" the .local() calls.

--> svn commit 76756  (in addition to 76753, mentioned earlier)
    now has rematchDefinition() changes

I would be positively surprised if (but can imagine that) this
had no affect on CRAN / Bioconductor packages.

Still, these two changes seem to achieve what both the comments
and the documentation of  conformMethod() and rematchDefinition()
suggest should happen.

Of course, I'd really be happy if people with S4 packages would
check them with an R-devel version with svn rev >=  76756
and report problems they see.
I do imagine effects, and would expect that bugs in current code
become visible where they had not done so previously.

Martin

    > I've started to explore the effects of the change using and
    > extending the tests/reg-tests-1d.R  example that I had just committed.

    > And the result is *not good* :

    > As we said above, the new code does replace all "ANY" by "missing" in the
    > signature, unless the "ANY" are at the end of the signature.

    > However, later methods package code producing the .local(.)
    > calls in the method definition (in cases where the signature of
    > the generic and the method do not match exactly) --- possibly
    > may have been tweaked later than the conformMethod() code ---
    > and the .local() calls they now produce

    > - work as intended for R <= 3.6.0 (and R 3.6.1 RC)
    > - fail to work for R-devel with the change :

    > See this (not a minimal rep.rex. but one building on Henrik's
    > oligo case and what's newly in  tests/reg-tests-1d.R ) :

    > -----------------------------------------------------------------------------

    > ## conformMethod()  "&& logic" bug, by Henrik Bengtsson on R-devel list, 2019-06-22
    > setClass("tilingFSet", slots = c(x = "numeric"))
    > if(!is.null(getGeneric("oligoFn"))) removeGeneric("oligoFn")
    > setGeneric("oligoFn",
    > function(object, subset, target, value) { standardGeneric("oligoFn") })
    > Sys.unsetenv("_R_CHECK_LENGTH_1_LOGIC2_") ## << added here, to compare with R 3.6.0, 3.5.3, ..
    > setMethod("oligoFn", signature(object = "tilingFSet", value="array"),     ## Method _ 1 _
    > function(object, value) { list(object=object, value=value) })
    > setMethod("oligoFn", signature(object = "matrix", target="array"),        ## Method _ 2 _
    > function(object, target) list(object=object, target=target))
    > setMethod("oligoFn", signature(object = "matrix", subset="integer"),      ## Method _ 3 _
    > function(object, subset) list(object=object, subset=subset))      #       (*no* Note: ANY at end)
    > setMethod("oligoFn", signature(object = "matrix"),                        ## Method _ 4 _
    > function(object) list(object=object))                             #       (*no* Note: ANY at end)
    > showMethods("oligoFn") # F.Y.I.:  in R 3.6.0 and earlier: contains "ANY" everywhere

    > ##-- Now, the following *DOES* work fine in R <= 3.6.0  but *no longer* in R-devel :
    > str(r1 <- oligoFn(object=new("tilingFSet"), value=array(2)))
    > str(r2 <- oligoFn(object=diag(2),          target=array(42)))
    > ## These 2 work fine in all versions of R: Here the "ANY" remain at the end:
    > str(r3 <- oligoFn(object=diag(2),          subset=1:3))
    > str(r4 <- oligoFn(object=diag(2)))

    > -----------------------------------------------------------------------------
    > The two errors in R-devel are actually quite user-confusing:

    >> r2 <- oligoFn(object=diag(2),          target=array(42))
    > Error in .local(object, target) :
    > argument "target" is missing, with no default
    >> getMethod("oligoFn", signature(object="matrix", subset="missing", target="array"))
    > Method Definition:

    > function (object, subset, target, value)
    > {
    > .local <- function (object, subset, target, value)
    > list(object = object, target = target)
    > .local(object, target)
    > }

    > Signatures:
    > object   subset    target  value
    > target  "matrix" "missing" "array" "ANY"
    > defined "matrix" "missing" "array" "ANY"
    >>


    > My conclusion:  There's something really wrong with what
    > conformMethod() has been *intended* to achieve and what it
    > "accidentally" did achieve in these cases: it never replaced
    > "ANY" by "missing" in all these cases *AND* that is what it
    > seems it should continue doing.

    > BTW: ?conformMethod  goes to a page with quite a few things,
    > relevantly containing

    > ?conformMethod?: If the formal arguments, ?mnames?, are not
    > identical to the formal arguments to the function, ?fnames?,
    > ?conformMethod? determines whether the signature and the two
    > sets of arguments conform, and returns the signature,
    > possibly extended.  The function name, ?f? is supplied for
    > error messages. The generic function, ?fdef?, supplies the
    > generic signature for matching purposes.

    > The method assignment conforms if method and generic function
    > have identical formal argument lists.  It can also conform if
    > the method omits some of the formal arguments of the function
    > but: (1) the non-omitted arguments are a subset of the
    > function arguments, appearing in the same order; (2) there
    > are no arguments to the method that are not arguments to the
    > function; and (3) the omitted formal arguments do not appear
    > as explicit classes in the signature.  A future extension
    > hopes to test also that the omitted arguments are not assumed
    > by being used as locally assigned names or function names in
    > the body of the method.

    > ---
    > It seems my commit to R-devel needs another change.
    > This has to wait for hours currently, though.

    > Martin

    > ______________________________________________
    > R-devel at r-project.org mailing list
    > https://stat.ethz.ch/mailman/listinfo/r-devel


From m@ech|er @end|ng |rom @t@t@m@th@ethz@ch  Mon Jul  1 14:11:16 2019
From: m@ech|er @end|ng |rom @t@t@m@th@ethz@ch (Martin Maechler)
Date: Mon, 1 Jul 2019 14:11:16 +0200
Subject: [Rd] methods package: A _R_CHECK_LENGTH_1_LOGIC2_=true
In-Reply-To: <438D2EC9EAFE5946B2D5864670EA468E018F7206B3@MBXP02.ds.man.ac.uk>
References: <CAFDcVCQOWVr0p2e2HONOy9NvqPdpoAH=HPMOEP65K-N6UjhA2g@mail.gmail.com>
 <67D2E7FE-74E3-4379-B9FB-C4028AB808DF@gmail.com>
 <CAFDcVCTARMfrJRs-KiS5UiSo=SoU8+TgPh_KE+e-zFRR0eCSFQ@mail.gmail.com>
 <23824.41030.156424.792062@stat.math.ethz.ch>
 <CAFDcVCTq-Zc49t9HrdVQB4VHhOtuaoOmpGnx9JsAy+_esene3w@mail.gmail.com>
 <03ED7150-6BF7-4E6E-AD78-B6DFACE43A97@gmail.com>
 <6334E748-4121-41E7-9CD4-3F3B2278E8DC@gmail.com>
 <23828.56742.426539.104574@stat.math.ethz.ch>
 <CAFDcVCSoHT-GxRyw-bncfnbzbG19t9sUpvPnpg=Edz_j35DiFA@mail.gmail.com>
 <23830.7740.817555.22803@stat.math.ethz.ch>
 <B499F134-0795-42AD-9CDD-C639D3FD87A0@gmail.com>
 <23831.8774.109040.126892@stat.math.ethz.ch>
 <23831.14333.101371.604209@stat.math.ethz.ch>
 <438D2EC9EAFE5946B2D5864670EA468E018F7206B3@MBXP02.ds.man.ac.uk>
Message-ID: <23833.63588.823966.300544@stat.math.ethz.ch>

>>>>> Georgi Boshnakov 
>>>>>     on Mon, 1 Jul 2019 09:11:39 +0000 writes:

    > I run checks with R-devel rev. 76756 on several of my
    > packages which use S4, with no ill effects.  

Thank you, Georgi!

    > With the risk of not adding much, it seems that Martin's example, which
    > I repeat below, suggests a crossover between several
    > "signatures" involved here - the signature of the generic,
    > the signature of the method (the argument for setMethod()),
    > and the signature of the function object defining the method.

that's correct.

and the conformMethod() plus  rematchDefinition()  utility functions
have been created to deal with this problem "optimally" and consistently.

>>> r2 <- oligoFn(object=diag(2), target=array(42))
>>  Error in .local(object, target) :
>>      argument "target" is missing, with no default
>>> getMethod("oligoFn", signature(object="matrix", subset="missing", target="array"))
>>
>> Method Definition:
>
>> function (object, subset, target, value)
>> {
>>   .local <- function (object, subset, target, value)
>>                   list(object = object, target = target)
>>   .local(object, target)
>> }


    > a) .local() seems superfluous here, since the signature of
    > the function object is identical to that of the generic.

that's only true in the *result*ing method,
but not in how the method was defined (the following code was in
my post) :

 setMethod("oligoFn", signature(object = "matrix", target="array"),   ## Method _ 2 _
     function(object, target) list(object=object, target=target))

Here, function object has arguments  (object, target)   only


    > b) "subset" is "missing" in the signature of the method
    > but it is (legally, I believe) present in the function
    > object. The call .local(object, target) would be
    > appropriate if "subset" was missing also from the
    > signature of the function object (the latter would be
    > illegal here). Alternatively, it could be named, as in
    > .local(object, target = target) or maybe even
    > .local(object, , target).

    > --
    > Georgi Boshnakov


The 2nd patch I committed -- the one mostly to
rematchDefiniton() --  does exactly that:  It uses .local()
calls where those argument *are* named which should be named.
==> hence the above example works fine there.

Martin

    > ------------------------------
> Date: Sat, 29 Jun 2019 22:44:49 +0200
> From: Martin Maechler <maechler at stat.math.ethz.ch>
> To: R-devel <r-devel at r-project.org>, Henrik Bengtsson
>         <henrik.bengtsson at gmail.com>
> Cc: Martin Maechler <maechler at stat.math.ethz.ch>
> Subject: Re: [Rd] methods package: A _R_CHECK_LENGTH_1_LOGIC2_=true
>         error
> Message-ID: <23831.52673.201433.320952 at stat.math.ethz.ch>
> Content-Type: text/plain; charset="utf-8"
> 
> >>>>> Martin Maechler
> >>>>>     on Sat, 29 Jun 2019 12:05:49 +0200 writes:
> 
> >>>>> Martin Maechler
> >>>>>     on Sat, 29 Jun 2019 10:33:10 +0200 writes:
> 
> >>>>> peter dalgaard
> >>>>>     on Fri, 28 Jun 2019 16:20:03 +0200 writes:
> 
 >>>> > On 28 Jun 2019, at 16:03 , Martin Maechler <maechler at stat.math.ethz.ch> wrote:
 >>>> >
 >>>> >>>>>> Henrik Bengtsson
 >>>> >>>>>>    on Thu, 27 Jun 2019 16:00:39 -0700 writes:
 >>>> >
 >>>> >> Using:
 >>>> >>
 >>>> >> untrace(methods::conformMethod)
 >>>> >> at <- c(12,4,3,2)
 >>>> >> str(body(methods::conformMethod)[[at]])
 >>>> >> ## language omittedSig <- omittedSig && (signature[omittedSig] != "missing")
 >>>> >> cc <- 0L
 >>>> >> trace(methods::conformMethod, tracer = quote({
 >>>> >>  cc <<- cc + 1L
 >>>> >>  print(cc)
 >>>> >>  if (cc == 31) {  ## manually identified
 >>>> >>    untrace(methods::conformMethod)
 >>>> >>    trace(methods::conformMethod, at = list(at), tracer = quote({
 >>>> >>      str(list(signature = signature, mnames = mnames, fnames = fnames))
 >>>> >>      print(ls())
 >>>> >>      try(str(list(omittedSig = omittedSig, signature = signature)))
 >>>> >>    }))
 >>>> >>  }
 >>>> >> }))
 >>>> >> loadNamespace("oligo")
 >>>> >>
 >>>> >> gives:
 >>>> >>
 >>>> >> Untracing function "conformMethod" in package "methods"
 >>>> >> Tracing function "conformMethod" in package "methods"
 >>>> >> Tracing conformMethod(signature, mnames, fnames, f, fdef, definition)
 >>>> >> step 12,4,3,2
 >>>> >> List of 3
 >>>> >> $ signature: Named chr [1:4] "TilingFeatureSet" "ANY" "ANY" "array"
 >>>> >>  ..- attr(*, "names")= chr [1:4] "object" "subset" "target" "value"
 >>>> >>  ..- attr(*, "package")= chr [1:4] "oligoClasses" "methods" "methods" "methods"
 >>>> >> $ mnames   : chr [1:2] "object" "value"
 >>>> >> $ fnames   : chr [1:4] "object" "subset" "target" "value"
 >>>> >> [1] "f"          "fdef"       "fnames"     "fsig"       "imf"
 >>>> >> [6] "method"     "mnames"     "omitted"    "omittedSig" "sig0"
 >>>> >> [11] "sigNames"   "signature"
 >>>> >> List of 2
 >>>> >> $ omittedSig: logi [1:4] FALSE TRUE TRUE FALSE
 >>>> >> $ signature : Named chr [1:4] "TilingFeatureSet" "ANY" "ANY" "array"
 >>>> >>  ..- attr(*, "names")= chr [1:4] "object" "subset" "target" "value"
 >>>> >>  ..- attr(*, "package")= chr [1:4] "oligoClasses" "methods" "methods" "methods"
 >>>> >> Error in omittedSig && (signature[omittedSig] != "missing") :
 >>>> >>  'length(x) = 4 > 1' in coercion to 'logical(1)'
 >>>> >> Error: unable to load R code in package 'oligo'
 >>>> >>
 >>>> >
 >>>> > Thank you, Henrik, nice piece of using trace() .. and the above
 >>>> > is useful for solving the issue --  I can work with that.
 >>>> >
 >>>> > I'm  already pretty sure the wrong code starts with
 >>>> >
 >>>> >    omittedSig <- sigNames %in% fnames[omitted] # ....
> 
>     >> my  "pretty sure"  statement above has proven to be wrong ..
> 
 >>>> > -------------
 >>>> >
 >>>>
 >>>> I think the intention must have been that the two "ANY" signatures should change to "missing".
> 
>     >> Definitely.
> 
 >>>> However, with the current logic that will not happen, because
 >>>>
 >>>> > c(F,T,T,F) &&  c(T,T)
 >>>> [1] FALSE
 >>>>
 >>>> Henrik's non-fix would have resulted in
 >>>>
 >>>> > c(F,T,T,F) &  c(T,T)
 >>>> [1] FALSE  TRUE  TRUE FALSE
 >>>>
 >>>> which is actually right, but only coincidentally due to recycling of c(T,T). Had it been c(F,T) then it would have been expanded to c(F,T,F,T) which would be the opposite of what was wanted.
 >>>>
 >>>> Barring NA issues, I still think
 >>>>
 >>>> omittedSig[omittedSig] <- (signature[omittedSig] != "missing")
 >>>>
 >>>> should do the trick.
> 
>     >> yes, (most probably).  I've found a version of that which should
>     >> be even easier to "read and understand", in  svn commit 76753 :
> 
>     >> svn diff -c 76753 src/library/methods/R/RMethodUtils.R
> 
>     >> --- src/library/methods/R/RMethodUtils.R (Revision 76752)
>     >> +++ src/library/methods/R/RMethodUtils.R (Revision 76753)
>     >> @@ -342,8 +342,7 @@
>     >> gettextf("formal arguments (%s) omitted in the method definition cannot be in the signature", bad2),
>     >> call. = TRUE, domain = NA)
>     >> }
>     >> -    else if(!all(signature[omittedSig] == "missing")) {
>     >> -        omittedSig <- omittedSig && (signature[omittedSig] != "missing")
>     >> +    else if(any(omittedSig <- omittedSig & signature != "missing")) {
> 
> 
>     >> BTW:  I've marked this --- and the  runmed() seg.fault + na.action
>     >> change ---  as something to be added to R 3.6.1 patched,  as I
>     >> deemed I should obey the "code freeze" rule in both cases.
> 
>     >> Martin
> 
>     > Hmm... I think we got a 'Neverending Story' here -- because it
>     > seems, both Peter and I were wrong in thinking that it's a good
>     > idea to change "missing" to "ANY" here ...
>     > ((or if that *was* correct, that needs to entail more changes
>     > happening during setMethod(.) {conformMethod() is only called in
>     > one place in our code base, namely from setMethod()} :
> 
> as a matter of fact, I've been brave for now, left the change to
> conformMethod()  and started to fix the constructed .local()
> calls which are created in  conformMethod()'s sibling,
> which is rematchDefinition().
> 
> It seems that this builds e.g. Matrix {with its gazillion
> setMethod()s} and that continues to run its own tests.  OTOH,
> Matrix may not trigger the situations that are dealt with here
> at all, as the signature() are rarely longer than three, and at
> some point in time I had made long passes through the package in
> order to "minimize" the .local() calls.
> 
> --> svn commit 76756  (in addition to 76753, mentioned earlier)
>     now has rematchDefinition() changes
> 
> I would be positively surprised if (but can imagine that) this
> had no affect on CRAN / Bioconductor packages.
> 
> Still, these two changes seem to achieve what both the comments
> and the documentation of  conformMethod() and rematchDefinition()
> suggest should happen.
> 
> Of course, I'd really be happy if people with S4 packages would
> check them with an R-devel version with svn rev >=  76756
> and report problems they see.
> I do imagine effects, and would expect that bugs in current code
> become visible where they had not done so previously.
> 
> Martin
> 
>     > I've started to explore the effects of the change using and
>     > extending the tests/reg-tests-1d.R  example that I had just committed.
> 
>     > And the result is *not good* :
> 
>     > As we said above, the new code does replace all "ANY" by "missing" in the
>     > signature, unless the "ANY" are at the end of the signature.
> 
>     > However, later methods package code producing the .local(.)
>     > calls in the method definition (in cases where the signature of
>     > the generic and the method do not match exactly) --- possibly
>     > may have been tweaked later than the conformMethod() code ---
>     > and the .local() calls they now produce
> 
>     > - work as intended for R <= 3.6.0 (and R 3.6.1 RC)
>     > - fail to work for R-devel with the change :
> 
>     > See this (not a minimal rep.rex. but one building on Henrik's
>     > oligo case and what's newly in  tests/reg-tests-1d.R ) :
> 
>     > -----------------------------------------------------------------------------
> 
>     > ## conformMethod()  "&& logic" bug, by Henrik Bengtsson on R-devel list, 2019-06-22
>     > setClass("tilingFSet", slots = c(x = "numeric"))
>     > if(!is.null(getGeneric("oligoFn"))) removeGeneric("oligoFn")
>     > setGeneric("oligoFn",
>     > function(object, subset, target, value) { standardGeneric("oligoFn") })
>     > Sys.unsetenv("_R_CHECK_LENGTH_1_LOGIC2_") ## << added here, to compare with R 3.6.0, 3.5.3, ..
>     > setMethod("oligoFn", signature(object = "tilingFSet", value="array"),     ## Method _ 1 _
>     > function(object, value) { list(object=object, value=value) })
>     > setMethod("oligoFn", signature(object = "matrix", target="array"),        ## Method _ 2 _
>     > function(object, target) list(object=object, target=target))
>     > setMethod("oligoFn", signature(object = "matrix", subset="integer"),      ## Method _ 3 _
>     > function(object, subset) list(object=object, subset=subset))      #       (*no* Note: ANY at end)
>     > setMethod("oligoFn", signature(object = "matrix"),                        ## Method _ 4 _
>     > function(object) list(object=object))                             #       (*no* Note: ANY at end)
>     > showMethods("oligoFn") # F.Y.I.:  in R 3.6.0 and earlier: contains "ANY" everywhere
> 
>     > ##-- Now, the following *DOES* work fine in R <= 3.6.0  but *no longer* in R-devel :
>     > str(r1 <- oligoFn(object=new("tilingFSet"), value=array(2)))
>     > str(r2 <- oligoFn(object=diag(2),          target=array(42)))
>     > ## These 2 work fine in all versions of R: Here the "ANY" remain at the end:
>     > str(r3 <- oligoFn(object=diag(2),          subset=1:3))
>     > str(r4 <- oligoFn(object=diag(2)))
> 
>     > -----------------------------------------------------------------------------
>     > The two errors in R-devel are actually quite user-confusing:
> 
>     >> r2 <- oligoFn(object=diag(2),          target=array(42))
>     > Error in .local(object, target) :
>     > argument "target" is missing, with no default
>     >> getMethod("oligoFn", signature(object="matrix", subset="missing", target="array"))
>     > Method Definition:
> 
>     > function (object, subset, target, value)
>     > {
>     > .local <- function (object, subset, target, value)
>     > list(object = object, target = target)
>     > .local(object, target)
>     > }
> 
>     > Signatures:
>     > object   subset    target  value
>     > target  "matrix" "missing" "array" "ANY"
>     > defined "matrix" "missing" "array" "ANY"
>     >>
> 
> 
>     > My conclusion:  There's something really wrong with what
>     > conformMethod() has been *intended* to achieve and what it
>     > "accidentally" did achieve in these cases: it never replaced
>     > "ANY" by "missing" in all these cases *AND* that is what it
>     > seems it should continue doing.
> 
>     > BTW: ?conformMethod  goes to a page with quite a few things,
>     > relevantly containing
> 
>     > ?conformMethod?: If the formal arguments, ?mnames?, are not
>     > identical to the formal arguments to the function, ?fnames?,
>     > ?conformMethod? determines whether the signature and the two
>     > sets of arguments conform, and returns the signature,
>     > possibly extended.  The function name, ?f? is supplied for
>     > error messages. The generic function, ?fdef?, supplies the
>     > generic signature for matching purposes.
> 
>     > The method assignment conforms if method and generic function
>     > have identical formal argument lists.  It can also conform if
>     > the method omits some of the formal arguments of the function
>     > but: (1) the non-omitted arguments are a subset of the
>     > function arguments, appearing in the same order; (2) there
>     > are no arguments to the method that are not arguments to the
>     > function; and (3) the omitted formal arguments do not appear
>     > as explicit classes in the signature.  A future extension
>     > hopes to test also that the omitted arguments are not assumed
>     > by being used as locally assigned names or function names in
>     > the body of the method.
> 
>     > ---
>     > It seems my commit to R-devel needs another change.
>     > This has to wait for hours currently, though.
> 
>     > Martin
> 
>     > ______________________________________________
>     > R-devel at r-project.org mailing list
>     > https://stat.ethz.ch/mailman/listinfo/r-devel


From b@row||ng@on @end|ng |rom |@nc@@ter@@c@uk  Mon Jul  1 14:11:51 2019
From: b@row||ng@on @end|ng |rom |@nc@@ter@@c@uk (Barry Rowlingson)
Date: Mon, 1 Jul 2019 13:11:51 +0100
Subject: [Rd] Making R CMD nicer
In-Reply-To: <10fa7a57a775472883147fcb335e5f23@LNXP265MB0395.GBRP265.PROD.OUTLOOK.COM>
References: <CAGPh-qOZsZz7CPtquXFijQzUwybXjWrTXZFuGYm0G1T_i6VR5Q@mail.gmail.com>
 <CAB8pepyrM+BF8WOFNDSuz4bAMRic5PaRTuO--wRcOwdj5_4MMg@mail.gmail.com>
 <CABtg=K=kKUVgDvWbg-nngZYZGTd7zMZ9CD66bZrtcFNJEJ=x6Q@mail.gmail.com>
 <CAB8pepwpeVpD6iT8LpzcjeW_poCyoZQM7qBWWG3s+1x_4gpjgg@mail.gmail.com>
 <10fa7a57a775472883147fcb335e5f23@LNXP265MB0395.GBRP265.PROD.OUTLOOK.COM>
Message-ID: <CANVKczOWzJ-LGuspFwpzw-Y2wvvxr1JcHdBsVdHTxr7RTLn+BQ@mail.gmail.com>

If you write a lot of R code to run as command line scripts then look at
Dirk E's "littler":

$ r --help

Usage: r [options] [-|file]

Launch GNU R to execute the R commands supplied in the specified file, or
from stdin if '-' is used. Suitable for so-called shebang '#!/'-line
scripts.

Options:
  -h, --help           Give this help list
      --usage          Give a short usage message
  -V, --version        Show the version number
  -v, --vanilla        Pass the '--vanilla' option to R
  -t, --rtemp          Use per-session temporary directory as R does
  -i, --interactive    Let interactive() return 'true' rather than 'false'
  -q, --quick          Skip autoload / delayed assign of default libraries
  -p, --verbose        Print the value of expressions to the console
  -l, --packages list  Load the R packages from the comma-separated 'list'
  -d, --datastdin      Prepend command to load 'X' as csv from stdin
  -L, --libpath dir    Add directory to library path via '.libPaths(dir)'
  -e, --eval expr      Let R evaluate 'expr'

available from an archive near you...


On Mon, Jul 1, 2019 at 8:58 AM Jason Xu <jasonx98 at gmail.com> wrote:

> In my humble personal opinion, I try to avoid bash scripts longer than a
> couple lines because I find the syntax so obtuse and unintuitive it's
> difficult to maintain and write less buggy code. But that is mostly a
> reflection of my personal inexperience.
> I think the only time a bash script is really needed is for maximum
> portability in systems _with bash_.
> (I would use python for a wrapper in personal projects, given python comes
> pre-installed on many linux systems and OS X, but I completely understand
> not wanting to burden Windows users with an extra python dependency to
> install.)
>
>
>
>
>
> On Sun, Jun 30, 2019 at 8:08 PM Abby Spurdle <spurdle.a at gmail.com> wrote:
>
> > In that case, I was wrong.
> > And I must apologize...
> >
> > In saying that, good to see Windows out performing Linux on the command
> > line...
> >
> >
> > On Mon, Jul 1, 2019 at 11:30 AM G?bor Cs?rdi <csardi.gabor at gmail.com>
> > wrote:
> > >
> > > For the record, this is Linux R-devel:
> > >
> > > root at 4bef68c16864:~# R CMD
> > > /opt/R-devel/lib/R/bin/Rcmd: 60: shift: can't shift that many
> > > root at 4bef68c16864:~# R CMD -h
> > > /opt/R-devel/lib/R/bin/Rcmd: 62: exec: -h: not found
> > > root at 4bef68c16864:~# R CMD --help
> > > /opt/R-devel/lib/R/bin/Rcmd: 62: exec: --help: not found
> > >
> > > This is R-release on macOS:
> > >
> > > ? R CMD
> > > /Library/Frameworks/R.framework/Resources/bin/Rcmd: line 62:
> > > /Library/Frameworks/R.framework/Resources/bin/: is a directory
> > > /Library/Frameworks/R.framework/Resources/bin/Rcmd: line 62: exec:
> > > /Library/Frameworks/R.framework/Resources/bin/: cannot execute:
> > > Undefined error: 0
> > > ? R CMD -h
> > > /Library/Frameworks/R.framework/Resources/bin/Rcmd: line 62: exec: -h:
> > > invalid option
> > > exec: usage: exec [-cl] [-a name] file [redirection ...]
> > > ? R CMD --help
> > > /Library/Frameworks/R.framework/Resources/bin/Rcmd: line 62: exec: --:
> > > invalid option
> > > exec: usage: exec [-cl] [-a name] file [redirection ...]
> > >
> > > On Windows you indeed get a useful list of commands and more helpful
> > tips.
> > >
> > > Gabor
> > >
> > >
> > > On Sun, Jun 30, 2019 at 11:36 PM Abby Spurdle <spurdle.a at gmail.com>
> > wrote:
> > > >
> > > > > First time posting in the R mailing lists so hopefully this works
> > well.
> > > > > I noticed when I type `R CMD` I get this unhelpful message:
> > > > > /usr/lib/R/bin/Rcmd: 60: shift: can't shift that many
> > > >
> > > > I wasn't able to reproduce this.
> > > > Maybe it's a Linux thing.
> > > > But then, I suspect you've omitted some of your input.
> > > >
> > > > > I also think it would be nice if `R CMD help` showed the usable
> > commands.
> > > >
> > > > What do you mean...
> > > > All of the following give you the "usable commands":
> > > >
> > > > > R CMD
> > > > > R CMD -h
> > > > > R CMD --help
> > > >
> > > >         [[alternative HTML version deleted]]
> > > >
> > > > ______________________________________________
> > > > R-devel at r-project.org mailing list
> > > > https://stat.ethz.ch/mailman/listinfo/r-devel
> >
>
>         [[alternative HTML version deleted]]
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>

	[[alternative HTML version deleted]]


From therne@u @end|ng |rom m@yo@edu  Mon Jul  1 16:55:24 2019
From: therne@u @end|ng |rom m@yo@edu (Therneau, Terry M., Ph.D.)
Date: Mon, 01 Jul 2019 09:55:24 -0500
Subject: [Rd] ASAN error with R-devel
Message-ID: <8fb769$bvkt9j@ironport10.mayo.edu>

I have an ASAN enabled version of R-devel on my test machine, and can get it to relably 
crash.? Here is the first part of the session:

tmt-local2434% R --vanilla

R Under development (unstable) (2019-06-28 r76752) -- "Unsuffered Consequences"
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

 ? Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.
 > install.packages('kinship2')
Installing package into ?/home/therneau/Rlib?
(as ?lib? is unspecified)
--- Please select a CRAN mirror for use in this session ---
=================================================================
==21606==ERROR: AddressSanitizer: heap-use-after-free on address 0x602000042830 at pc 
0x7f9f834fa0f7 bp 0x7fff24ab9050 sp 0x7fff24ab87f8
READ of size 1 at 0x602000042830 thread T0
 ??? #0 0x7f9f834fa0f6 (/usr/lib/x86_64-linux-gnu/libasan.so.4+0x5a0f6)
 ??? #1 0x7f787837d683 in _XimUnRegisterIMInstantiateCallback 
(/usr/lib/x86_64-linux-gnu/libX11.so.6+0x64683)
 ??? #2 0x7f7878364d32 in XUnregisterIMInstantiateCallback 
(/usr/lib/x86_64-linux-gnu/libX11.so.6+0x4bd32)
 ??? #3 0x7f787837d566 in _XimRegisterIMInstantiateCallback 
(/usr/lib/x86_64-linux-gnu/libX11.so.6+0x64566)
 ??? #4 0x7f7878364cba in XRegisterIMInstantiateCallback 
(/usr/lib/x86_64-linux-gnu/libX11.so.6+0x4bcba)
 ??? #5 0x7f78745cddfb in TkpOpenDisplay (/usr/lib/x86_64-linux-gnu/libtk8.6.so+0xf2dfb)
 ??? #6 0x7f787453c769 (/usr/lib/x86_64-linux-gnu/libtk8.6.so+0x61769)
 ??? #7 0x7f787453d0ab in TkCreateMainWindow (/usr/lib/x86_64-linux-gnu/libtk8.6.so+0x620ab)
 ??? #8 0x7f7874548cc6 (/usr/lib/x86_64-linux-gnu/libtk8.6.so+0x6dcc6)
 ??? #9 0x7f7874546c7a (/usr/lib/x86_64-linux-gnu/libtk8.6.so+0x6bc7a)
 ??? #10 0x7f787453f6c4 (/usr/lib/x86_64-linux-gnu/libtk8.6.so+0x646c4)
 ??? #11 0x7f7874bf0c0b in tcltk_init /usr/local/src/R-devel/src/library/tcltk/src/tcltk.c:697
 ??? #12 0x5582e3aa93c1 in do_dotCode /usr/local/src/R-devel/src/main/dotcode.c:1743
 ??? #13 0x5582e3b41f79 in bcEval /usr/local/src/R-devel/src/main/eval.c:6775
 ??? #14 0x5582e3b6a5df in Rf_eval /usr/local/src/R-devel/src/main/eval.c:620
 ??? #15 0x5582e3b702b9 in R_execClosure /usr/local/src/R-devel/src/main/eval.c:1780
 ??? #16 0x5582e3b72777 in Rf_applyClosure /usr/local/src/R-devel/src/main/eval.c:1706
 ??? #17 0x5582e3b4ab0a in bcEval /usr/local/src/R-devel/src/main/eval.c:6743
 ??? #18 0x5582e3b6a5df in Rf_eval /usr/local/src/R-devel/src/main/eval.c:620
 ??? #19 0x5582e3b6c55e in forcePromise /usr/local/src/R-devel/src/main/eval.c:516
 ??? #20 0x5582e3b6d22f in FORCE_PROMISE /usr/local/src/R-devel/src/main/eval.c:4900
 ?...
 ??? #133 0x7f788f5e6b96 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x21b96)
 ??? #134 0x5582e392b999 in _start (/usr/local/src/R-devel/bin/exec/R+0x135999)

0x602000055af0 is located 0 bytes inside of 1-byte region [0x602000055af0,0x602000055af1)
freed by thread T0 here:
 ??? #0 0x7f7891a157b8 in __interceptor_free (/usr/lib/x86_64-linux-gnu/libasan.so.4+0xde7b8)
 ??? #1 0x7f7878373d8c in XSetLocaleModifiers (/usr/lib/x86_64-linux-gnu/libX11.so.6+0x5ad8c)

previously allocated by thread T0 here:
 ??? #0 0x7f7891a15b50 in __interceptor_malloc 
(/usr/lib/x86_64-linux-gnu/libasan.so.4+0xdeb50)
 ??? #1 0x7f7878373984 in _XlcDefaultMapModifiers 
(/usr/lib/x86_64-linux-gnu/libX11.so.6+0x5a984)

SUMMARY: AddressSanitizer: heap-use-after-free 
(/usr/lib/x86_64-linux-gnu/libasan.so.4+0x5a0f6)

------------------------------
The window with a choice of machines never appeared.

Terry T.




	[[alternative HTML version deleted]]


From jenny@|@bry@n @end|ng |rom gm@||@com  Tue Jul  2 04:26:42 2019
From: jenny@|@bry@n @end|ng |rom gm@||@com (Jennifer Bryan)
Date: Mon, 1 Jul 2019 19:26:42 -0700
Subject: [Rd] eliminate a partial argument match warning in R CMD check
Message-ID: <CANe9BHE9RWCjc-e=BZH7-ow3oWMeS-HeobhEJDN_O-J0g5cenw@mail.gmail.com>

Hello,

I'm seeing a nuisance warning when I run `R CMD check --as-cran
whatever_x.y.z.tar.gz`.

I generally work with these options set:

options(
  warnPartialMatchArgs = TRUE,
  warnPartialMatchAttr = TRUE,
  warnPartialMatchDollar = TRUE
)

And I see this:

* checking use of SHLIB_OPENMP_*FLAGS in Makefiles ...Warning in dir("src",
patt = "[.]c$") :
  partial argument match of 'patt' to 'pattern'
Warning in dir("src", patt = "[.](cc|cpp)$") :
  partial argument match of 'patt' to 'pattern'
Warning in dir("src", patt = "[.]f$") :
  partial argument match of 'patt' to 'pattern'
Warning in dir("src", patt = "[.]f9[05]$") :
  partial argument match of 'patt' to 'pattern'

It's not a big deal but it would be nice to silence it. Patch below.

Thanks,
Jenny

diff --git a/src/library/tools/R/check.R b/src/library/tools/R/check.R

index 21d192af485..199029bda73 100644
--- a/src/library/tools/R/check.R
+++ b/src/library/tools/R/check.R
@@ -2933,10 +2933,10 @@ add_dummies <- function(dir, Log)
             any <- msg <- character()
             for (m in makefiles) {
                 lines <- readLines(m, warn = FALSE)
-                have_c <- length(dir('src', patt = "[.]c$", recursive
= TRUE)) > 0L
-                have_cxx <- length(dir('src', patt = "[.](cc|cpp)$",
recursive = TRUE)) > 0L
-                have_f <- length(dir('src', patt = "[.]f$", recursive
= TRUE)) > 0L
-                have_f9x <- length(dir('src', patt = "[.]f9[05]$",
recursive = TRUE)) > 0L
+                have_c <- length(dir('src', pattern = "[.]c$",
recursive = TRUE)) > 0L
+                have_cxx <- length(dir('src', pattern =
"[.](cc|cpp)$", recursive = TRUE)) > 0L
+                have_f <- length(dir('src', pattern = "[.]f$",
recursive = TRUE)) > 0L
+                have_f9x <- length(dir('src', pattern = "[.]f9[05]$",
recursive = TRUE)) > 0L
                 for (f in c("C", "CXX", "F", "FC", "CPP"))  {
                     this <- paste0(f, "FLAGS")
                     this2 <- paste0("PKG_", this)

	[[alternative HTML version deleted]]


From m@r||n- @end|ng |rom gmx@cn  Tue Jul  2 07:35:54 2019
From: m@r||n- @end|ng |rom gmx@cn (Jialin Ma)
Date: Mon, 01 Jul 2019 22:35:54 -0700
Subject: [Rd] Format printing inside a matrix
Message-ID: <3279306.Pz8kNGSOn8@plastic>

Hi everyone,

I am not sure if there is an existing solution to this, but I want my S4
objects inside a list matrix showing correctly. Currently it shows as:

R> str(lst[[1]])
Formal class 'Basic' [package "symengine"] with 1 slot
  ..@ ptr:<externalptr>
R> matrix(lst, 2)
     [,1] [,2] [,3] [,4] [,5]
[1,] ?    ?    ?    ?    ?
[2,] ?    ?    ?    ?    ?

Is it possible that the print method for matrix can call some type of generic
such as `as.character` or `format` when it encounters such cases? Or is there
any other place that I can override without introducing a new S3 class?

Thanks!
Jialin Ma


From Kurt@Horn|k @end|ng |rom wu@@c@@t  Tue Jul  2 08:32:23 2019
From: Kurt@Horn|k @end|ng |rom wu@@c@@t (Kurt Hornik)
Date: Tue, 2 Jul 2019 08:32:23 +0200
Subject: [Rd] eliminate a partial argument match warning in R CMD check
In-Reply-To: <CANe9BHE9RWCjc-e=BZH7-ow3oWMeS-HeobhEJDN_O-J0g5cenw@mail.gmail.com>
References: <CANe9BHE9RWCjc-e=BZH7-ow3oWMeS-HeobhEJDN_O-J0g5cenw@mail.gmail.com>
Message-ID: <23834.64119.702506.122370@hornik.net>

>>>>> Jennifer Bryan writes:

Thanks: fixed with c76763 in the trunk.

Best
-k

> Hello,
> I'm seeing a nuisance warning when I run `R CMD check --as-cran
> whatever_x.y.z.tar.gz`.

> I generally work with these options set:

> options(
>   warnPartialMatchArgs = TRUE,
>   warnPartialMatchAttr = TRUE,
>   warnPartialMatchDollar = TRUE
> )

> And I see this:

> * checking use of SHLIB_OPENMP_*FLAGS in Makefiles ...Warning in dir("src",
> patt = "[.]c$") :
>   partial argument match of 'patt' to 'pattern'
> Warning in dir("src", patt = "[.](cc|cpp)$") :
>   partial argument match of 'patt' to 'pattern'
> Warning in dir("src", patt = "[.]f$") :
>   partial argument match of 'patt' to 'pattern'
> Warning in dir("src", patt = "[.]f9[05]$") :
>   partial argument match of 'patt' to 'pattern'

> It's not a big deal but it would be nice to silence it. Patch below.

> Thanks,
> Jenny

> diff --git a/src/library/tools/R/check.R b/src/library/tools/R/check.R

> index 21d192af485..199029bda73 100644
> --- a/src/library/tools/R/check.R
> +++ b/src/library/tools/R/check.R
> @@ -2933,10 +2933,10 @@ add_dummies <- function(dir, Log)
>              any <- msg <- character()
>              for (m in makefiles) {
>                  lines <- readLines(m, warn = FALSE)
> -                have_c <- length(dir('src', patt = "[.]c$", recursive
> = TRUE)) > 0L
> -                have_cxx <- length(dir('src', patt = "[.](cc|cpp)$",
> recursive = TRUE)) > 0L
> -                have_f <- length(dir('src', patt = "[.]f$", recursive
> = TRUE)) > 0L
> -                have_f9x <- length(dir('src', patt = "[.]f9[05]$",
> recursive = TRUE)) > 0L
> +                have_c <- length(dir('src', pattern = "[.]c$",
> recursive = TRUE)) > 0L
> +                have_cxx <- length(dir('src', pattern =
> "[.](cc|cpp)$", recursive = TRUE)) > 0L
> +                have_f <- length(dir('src', pattern = "[.]f$",
> recursive = TRUE)) > 0L
> +                have_f9x <- length(dir('src', pattern = "[.]f9[05]$",
> recursive = TRUE)) > 0L
>                  for (f in c("C", "CXX", "F", "FC", "CPP"))  {
>                      this <- paste0(f, "FLAGS")
>                      this2 <- paste0("PKG_", this)

> 	[[alternative HTML version deleted]]

> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From r|p|ey @end|ng |rom @t@t@@ox@@c@uk  Tue Jul  2 09:15:59 2019
From: r|p|ey @end|ng |rom @t@t@@ox@@c@uk (Prof Brian Ripley)
Date: Tue, 2 Jul 2019 08:15:59 +0100
Subject: [Rd] ASAN error with R-devel
In-Reply-To: <8fb769$bvkt9j@ironport10.mayo.edu>
References: <8fb769$bvkt9j@ironport10.mayo.edu>
Message-ID: <207a0404-580d-14c0-c6a8-1c0ed2b50f7d@stats.ox.ac.uk>

This is entirely within your OS's installation of Tcl/Tk and X11: the 
latter both allocated and freed.  We've seen it before (even had it as 
bug report on R). Please check your OS is fully up-to-date and if so 
report it there.

On 01/07/2019 15:55, Therneau, Terry M., Ph.D. via R-devel wrote:
> I have an ASAN enabled version of R-devel on my test machine, and can get it to relably
> crash.? Here is the first part of the session:
> 
> tmt-local2434% R --vanilla
> 
> R Under development (unstable) (2019-06-28 r76752) -- "Unsuffered Consequences"
> Platform: x86_64-pc-linux-gnu (64-bit)
> 
> R is free software and comes with ABSOLUTELY NO WARRANTY.
> You are welcome to redistribute it under certain conditions.
> Type 'license()' or 'licence()' for distribution details.
> 
>   ? Natural language support but running in an English locale
> 
> R is a collaborative project with many contributors.
> Type 'contributors()' for more information and
> 'citation()' on how to cite R or R packages in publications.
> 
> Type 'demo()' for some demos, 'help()' for on-line help, or
> 'help.start()' for an HTML browser interface to help.
> Type 'q()' to quit R.
>   > install.packages('kinship2')
> Installing package into ?/home/therneau/Rlib?
> (as ?lib? is unspecified)
> --- Please select a CRAN mirror for use in this session ---
> =================================================================
> ==21606==ERROR: AddressSanitizer: heap-use-after-free on address 0x602000042830 at pc
> 0x7f9f834fa0f7 bp 0x7fff24ab9050 sp 0x7fff24ab87f8
> READ of size 1 at 0x602000042830 thread T0
>   ??? #0 0x7f9f834fa0f6 (/usr/lib/x86_64-linux-gnu/libasan.so.4+0x5a0f6)
>   ??? #1 0x7f787837d683 in _XimUnRegisterIMInstantiateCallback
> (/usr/lib/x86_64-linux-gnu/libX11.so.6+0x64683)
>   ??? #2 0x7f7878364d32 in XUnregisterIMInstantiateCallback
> (/usr/lib/x86_64-linux-gnu/libX11.so.6+0x4bd32)
>   ??? #3 0x7f787837d566 in _XimRegisterIMInstantiateCallback
> (/usr/lib/x86_64-linux-gnu/libX11.so.6+0x64566)
>   ??? #4 0x7f7878364cba in XRegisterIMInstantiateCallback
> (/usr/lib/x86_64-linux-gnu/libX11.so.6+0x4bcba)
>   ??? #5 0x7f78745cddfb in TkpOpenDisplay (/usr/lib/x86_64-linux-gnu/libtk8.6.so+0xf2dfb)
>   ??? #6 0x7f787453c769 (/usr/lib/x86_64-linux-gnu/libtk8.6.so+0x61769)
>   ??? #7 0x7f787453d0ab in TkCreateMainWindow (/usr/lib/x86_64-linux-gnu/libtk8.6.so+0x620ab)
>   ??? #8 0x7f7874548cc6 (/usr/lib/x86_64-linux-gnu/libtk8.6.so+0x6dcc6)
>   ??? #9 0x7f7874546c7a (/usr/lib/x86_64-linux-gnu/libtk8.6.so+0x6bc7a)
>   ??? #10 0x7f787453f6c4 (/usr/lib/x86_64-linux-gnu/libtk8.6.so+0x646c4)
>   ??? #11 0x7f7874bf0c0b in tcltk_init /usr/local/src/R-devel/src/library/tcltk/src/tcltk.c:697
>   ??? #12 0x5582e3aa93c1 in do_dotCode /usr/local/src/R-devel/src/main/dotcode.c:1743
>   ??? #13 0x5582e3b41f79 in bcEval /usr/local/src/R-devel/src/main/eval.c:6775
>   ??? #14 0x5582e3b6a5df in Rf_eval /usr/local/src/R-devel/src/main/eval.c:620
>   ??? #15 0x5582e3b702b9 in R_execClosure /usr/local/src/R-devel/src/main/eval.c:1780
>   ??? #16 0x5582e3b72777 in Rf_applyClosure /usr/local/src/R-devel/src/main/eval.c:1706
>   ??? #17 0x5582e3b4ab0a in bcEval /usr/local/src/R-devel/src/main/eval.c:6743
>   ??? #18 0x5582e3b6a5df in Rf_eval /usr/local/src/R-devel/src/main/eval.c:620
>   ??? #19 0x5582e3b6c55e in forcePromise /usr/local/src/R-devel/src/main/eval.c:516
>   ??? #20 0x5582e3b6d22f in FORCE_PROMISE /usr/local/src/R-devel/src/main/eval.c:4900
>   ?...
>   ??? #133 0x7f788f5e6b96 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x21b96)
>   ??? #134 0x5582e392b999 in _start (/usr/local/src/R-devel/bin/exec/R+0x135999)
> 
> 0x602000055af0 is located 0 bytes inside of 1-byte region [0x602000055af0,0x602000055af1)
> freed by thread T0 here:
>   ??? #0 0x7f7891a157b8 in __interceptor_free (/usr/lib/x86_64-linux-gnu/libasan.so.4+0xde7b8)
>   ??? #1 0x7f7878373d8c in XSetLocaleModifiers (/usr/lib/x86_64-linux-gnu/libX11.so.6+0x5ad8c)
> 
> previously allocated by thread T0 here:
>   ??? #0 0x7f7891a15b50 in __interceptor_malloc
> (/usr/lib/x86_64-linux-gnu/libasan.so.4+0xdeb50)
>   ??? #1 0x7f7878373984 in _XlcDefaultMapModifiers
> (/usr/lib/x86_64-linux-gnu/libX11.so.6+0x5a984)
> 
> SUMMARY: AddressSanitizer: heap-use-after-free
> (/usr/lib/x86_64-linux-gnu/libasan.so.4+0x5a0f6)
> 
> ------------------------------
> The window with a choice of machines never appeared.
> 
> Terry T.
> 
> 
> 
> 
> 	[[alternative HTML version deleted]]
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
> 


-- 
Brian D. Ripley,                  ripley at stats.ox.ac.uk
Emeritus Professor of Applied Statistics, University of Oxford


From bbo|ker @end|ng |rom gm@||@com  Wed Jul  3 07:35:19 2019
From: bbo|ker @end|ng |rom gm@||@com (Ben Bolker)
Date: Wed, 3 Jul 2019 01:35:19 -0400
Subject: [Rd] trivial typos in man/switch.Rd
Message-ID: <d7f7e4b9-0baf-e62b-a61a-8b3ae5c74735@gmail.com>


  My colleague points out that these typos are probably still present
because almost no-one has the stamina to read that far down in ?switch ...

  cheers
    Ben Bolker

-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: switch_patch.txt
URL: <https://stat.ethz.ch/pipermail/r-devel/attachments/20190703/8fce1dbc/attachment.txt>

From Kurt@Horn|k @end|ng |rom wu@@c@@t  Wed Jul  3 09:01:44 2019
From: Kurt@Horn|k @end|ng |rom wu@@c@@t (Kurt Hornik)
Date: Wed, 3 Jul 2019 09:01:44 +0200
Subject: [Rd] trivial typos in man/switch.Rd
In-Reply-To: <d7f7e4b9-0baf-e62b-a61a-8b3ae5c74735@gmail.com>
References: <d7f7e4b9-0baf-e62b-a61a-8b3ae5c74735@gmail.com>
Message-ID: <23836.21208.968847.888088@hornik.net>

>>>>> Ben Bolker writes:

Thanks: fixed now in the trunk.

Best
-k

>   My colleague points out that these typos are probably still present
> because almost no-one has the stamina to read that far down in ?switch ...

>   cheers
>     Ben Bolker
> x[DELETED ATTACHMENT switch_patch.txt, plain text]
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From @pencer@gr@ve@ @end|ng |rom prod@y@e@com  Thu Jul  4 06:30:38 2019
From: @pencer@gr@ve@ @end|ng |rom prod@y@e@com (Spencer Graves)
Date: Wed, 3 Jul 2019 23:30:38 -0500
Subject: [Rd] R-Forge > GitHub?
In-Reply-To: <CAMMJQ0a0ONoBnZnnn9wq3a4ey336t24CTLrf_RZS99u_hMKrjA@mail.gmail.com>
References: <71f66de5-e1aa-5649-b07a-6cf79f9b07bc@prodsyse.com>
 <8d6c6dd4-d231-ecc7-c584-6e08f93a81e5@gmail.com>
 <89645BC9-C6BF-4E57-8AA0-9F426BA8AC5E@rstudio.com>
 <CA+rDMK+HXUKnA0j49czOf99M62QBfnyO36Sf1MBEe8a5AO-+XA@mail.gmail.com>
 <06a9569b-5b68-a288-8c4f-1537120a5213@prodsyse.com>
 <CABtg=Km5cdEWyUM55FEiabNdZdHvJoELHZ7RCRMPgQhUg9Gc6w@mail.gmail.com>
 <6d983b3b-62ea-3bb9-724a-01baaff51e70@gmail.com>
 <fb319697-6408-17b5-30a1-7a8f9d8da928@prodsyse.com>
 <CAMMJQ0a7ZtndwL8YYas6+k3BRDtAFizAuaacONQ6i6HmrQMTeA@mail.gmail.com>
 <3f01d7bc-ed20-1a39-25bc-ce7d34e22398@prodsyse.com>
 <CAFDcVCR9=WMJRmT3RVZxaQaWxQ4EciojC5ct4K=PrSjuJKtKNw@mail.gmail.com>
 <c9f1e823-9384-1f9f-0d70-e6ccbe8e9075@prodsyse.com>
 <CAPPM_gQ6Ef0+FYz0NrywwiPyW9O2Wwcms8sbmQATp-jcgyYhBA@mail.gmail.com>
 <CAPPM_gQm4JEDZnqg1xPN8U7j2y76=bBNsmxB0dAm0Z7ujmrXzQ@mail.gmail.com>
 <593d5e40-611e-3fcc-c131-6fb7de1130b9@prodsyse.com>
 <CAMMJQ0a0ONoBnZnnn9wq3a4ey336t24CTLrf_RZS99u_hMKrjA@mail.gmail.com>
Message-ID: <a896f66e-6727-cb45-9cd6-60c7ffdc2d9f@prodsyse.com>

 ????? Thanks so much for your help.


 ????? Now your "git push -u origin master" was "![rejected]", after 
creating a new SSH and after your "git clone" and other "git remote 
rename ..." commands seemed to work:


$ git clone git at github.com:joshuaulrich/tmp-ecfun.git Ecdat
# Cloning into 'Ecdat'...<snip> done.

$ cd Ecdat/
$ git remote rename origin tmp
$ git remote add origin https://github.com/sbgraves237/Ecdat
$ git push -u origin master
#[Username & password OK]
To https://github.com/sbgraves237/Ecdat
 ?! [rejected]??????? master -> master (fetch first)
error: failed to push some refs to 'https://github.com/sbgraves237/Ecdat'
hint: Updates were rejected because the remote contains work that you do
hint: not have locally. This is usually caused by another repository pushing
hint: to the same ref. You may want to first integrate the remote changes
hint: (e.g., 'git pull ...') before pushing again.
hint: See the 'Note about fast-forwards' in 'git push --help' for details.
SpenceravessMBP:Ecdat sbgraves$


 ????? Suggestions?
 ????? Thanks again,
 ????? Spencer Graves


On 2019-07-01 01:05, Ott Toomet wrote:
> Apparently you created id_rsa key pair with a passphrase. Passphrase 
> is like an additional password protection layer on your ssh key.? I 
> don't know how did you create it.? But you can always create a new one 
> (you should delete the old one before you create a new one) using the 
> shell command 'ssh-keygen'.? It asks for a passphrase, just push enter 
> for an empty passphrase (twice).? You also have to update the ssh 
> public key (id_rsa.pub) on github by supplying the new public key 
> (id_rsa.pub).
>
> There are some implications you should be aware of:
> * if you delete id_rsa*, you cannot use any ssh authorization that 
> relies on this key any more (that's why you have to update on GH).? 
> From the what you write (... created 2 days ago) I guess you do not 
> use these keys elsewhere but I may be wrong.
> * if you supply empty passphrase, you bypass the optional extra 
> security layer.? I think this is OK for open source software 
> development on your personal computer but your preferences/situation 
> may differ.
> * You cannot use the same keys with passphrase if they are created 
> without one.? This is likely not an issue, but if it turns out to be a 
> problem, you can either add passphrase to the default keys, or create 
> another set of keys, passphrase protected.
>
> Cheers,
> Ott
>
>
> On Sun, Jun 30, 2019 at 9:51 PM Spencer Graves 
> <spencer.graves at prodsyse.com <mailto:spencer.graves at prodsyse.com>> wrote:
>
>
>
>     On 2019-06-30 06:58, Joshua Ulrich wrote:
>     <snip>
>
>     > I imported both packages into separate repositories:
>     > https://github.com/joshuaulrich/tmp-ecdat
>     > https://github.com/joshuaulrich/tmp-ecfun
>     >
>     > I changed your email address on your R-Forge commits to match your
>     > GitHub email address, so R-Forge commits would be associated
>     with your
>     > GitHub account.? I also omitted the "move" commit from Ecdat,
>     and the
>     > "obsolete > GitHub" commits from both packages.? I've attached a
>     file
>     > with the commands I used, if anyone is interested.
>     >
>     > You can use my repos by cloning them to your local machine, adding
>     > your repos as new remotes, and pushing to them.? You would need
>     to run
>     > these commands (untested):
>     >
>     > ### clone my GitHub repo to your machine
>     > git clone git at github.com:joshuaulrich/tmp-ecfun.git Ecdat
>
>
>     Thanks so much.? Sadly, I'm still having troubles.? This "git
>     clone ..."
>     generates:
>
>
>     Enter passphrase for key '/Users/sbgraves/.ssh/id_rsa':
>
>
>     ?????? Sadly, I don't know the passphrase it's looking for here,
>     and I
>     don't know how to find what it's looking for.? Under GitHub >
>     Settings >
>     "SSH and GPG keys", I see an SSH key dated two days ago, when I
>     cloned
>     Ecdat from within RStudio.? And in "~.ssh" I see files id_rsa and
>     id_rsa.pub, both created two days ago.
>
>
>     ?????? What do you suggest I try to get past this?
>
>
>     ?????? Thanks again for all your help.
>
>
>     ?????? Spencer Graves
>
>     > cd Ecdat
>     > ### rename my GitHub repo remote from 'origin' to 'tmp'
>     > git remote rename origin tmp
>     > ### add your GitHub repo remote as 'origin'
>     > ### NOTE: this should be a new, clean repo.
>     > ###? ? Rename your existing 'Ecdat' so you don't overwrite it
>     > git remote add origin https://github.com/sbgraves237/Ecdat
>     > ### push to your GitHub repo
>     > git push -u origin master
>     >
>     > Then you need to run similar commands for Ecfun.
>     >
>     > Best,
>     > Josh
>     >
>     >>>? ? ? ? ?Thanks,
>     >>>? ? ? ? ?Spencer
>     >>>
>     >>>
>     >>> On 2019-06-29 14:09, Henrik Bengtsson wrote:
>     >>>> On Sat, Jun 29, 2019 at 9:43 AM Spencer Graves
>     >>>> <spencer.graves at prodsyse.com
>     <mailto:spencer.graves at prodsyse.com>> wrote:
>     >>>>> Hi, Ott et al.:
>     >>>>>
>     >>>>>
>     >>>>>? ? ? ? ? What's the best way to get "Travis CI" to build and
>     test the two
>     >>>>> packages, Ecdat and Ecfun, that have long been combined in
>     the Ecdat
>     >>>>> project?
>     >>>>>
>     >>>>>
>     >>>>>? ? ? ? ? Following Ott's advice and studying studying
>     Wickham's "R
>     >>>>> Packages" (http://r-pkgs.had.co.nz/), I was able to
>     configure RStudio so
>     >>>>> it would sync using git with
>     "GitHub.com/sbgraves237/Ecdat".? However,
>     >>>>> when I tried to configure "Travis CI", it said, "No
>     DESCRIPTION file
>     >>>>> found, user must supply their own install and script steps".
>     >>>>>
>     >>>>>
>     >>>>>? ? ? ? ? Earlier in this thread, I think someone suggested I
>     make the
>     >>>>> Ecdat and Ecfun packages separate projects on GitHub (though
>     I can't
>     >>>>> find that suggestion now).? This would not be an issue if it
>     were all
>     >>>>> local without version control.? With RStudio managing my
>     interface with
>     >>>>> GitHub, it now seems quite tricky.
>     >>>> I'm 99.999% confident that your life will be much much easier
>     if you
>     >>>> keep one R package per repository.? If you don't, you'll
>     probably be
>     >>>> very lonely when it comes to tools etc. There are built-in 'git'
>     >>>> commands, but also git utility tools, for extracting a subset of
>     >>>> folders/files from git repository into new git repositories.?
>     You'll
>     >>>> still preserve the commit history.? I would deal with this in the
>     >>>> terminal, using the 'git' client and possible some extraction
>     tool.
>     >>>>
>     >>>> Also, while you spend time on this, have a look at the commit
>     >>>> authorship that I mentioned previously.? It's nice to have
>     that in
>     >>>> place later.
>     >>>>
>     >>>> After you got the above in place, then .travis.yml and
>     appveyor.yml is
>     >>>> pretty straightforward (might even be a copy'n'paste).
>     >>>>
>     >>>> Finally, I saw you put your credentials in the URL when you
>     cloned.? I
>     >>>> don't think that's safe, your GitHub credentials will be
>     stored in the
>     >>>> ./.git/config file.? Instead, just clone with:
>     >>>>
>     >>>> git clone https://github.com/sbgraves237/Ecdat.git
>     >>>>
>     >>>> You can then configure git to cache your HTTPS credentials for a
>     >>>> certain time, e.g. 120 minutes, so you don't have to enter
>     them each
>     >>>> time you pull/push.? See
>     https://git-scm.com/docs/git-credential-cache
>     >>>> for details.? That's what I tell new-comers to
>     Git(Hub|Lab|...) to
>     >>>> use.? Personally, I add my public SSH key to GitHub and then
>     clone
>     >>>> with the ssh protocol:
>     >>>>
>     >>>> git clone git at github.com:sbgraves237/Ecdat.git
>     >>>>
>     >>>> That way my I never have to worry entering my credentials.
>     >>>>
>     >>>> /Henrik
>     >>>>
>     >>>>>? ? ? ? ? Suggestions?
>     >>>>>? ? ? ? ? Thanks again to all who have offered suggestions so
>     far.? This
>     >>>>> migration from R-Forge to GitHub seems complete except for
>     the automatic
>     >>>>> tests provided via "Travis CI".
>     >>>>>
>     >>>>>
>     >>>>>? ? ? ? ? Spencer
>     >>>>>
>     >>>>>
>     >>>>> On 2019-06-28 22:25, Ott Toomet wrote:
>     >>>>>> Apparently your username/password are wrong.? Can you
>     clone/push from
>     >>>>>> other repos?
>     >>>>>>
>     >>>>>> You do not need authorization when cloning a public repo,
>     so even
>     >>>>>> incorrect credentials may work (haven't tested this
>     though).? But for
>     >>>>>> push you have to have that in order.
>     >>>>>>
>     >>>>>> I suggest you create ssh keys, upload those to GH, and use ssh
>     >>>>>> authorization instead of https.
>     >>>>>>
>     >>>>>> Cheers,
>     >>>>>> Ott
>     >>>>>>
>     >>>>>> On Fri, Jun 28, 2019 at 8:18 PM Spencer Graves
>     >>>>>> <spencer.graves at prodsyse.com
>     <mailto:spencer.graves at prodsyse.com>
>     <mailto:spencer.graves at prodsyse.com
>     <mailto:spencer.graves at prodsyse.com>>> wrote:
>     >>>>>>
>     >>>>>>? ? ? ?Thanks to Duncan, Henrik and Henrik, Brian, and G?bor:
>     >>>>>>
>     >>>>>>
>     >>>>>>? ? ? ? ? ? ? I created a local copy of the new GitHub
>     version using the
>     >>>>>>? ? ? ?following:
>     >>>>>>
>     >>>>>>? ? ? ?git clone
>     >>>>>> https://sbgraves237:mypassword at github.com/sbgraves237/Ecdat.git
>     >>>>>>
>     >>>>>>
>     >>>>>>
>     >>>>>>? ? ? ? ? ? ? That worked in the sense that I got a local
>     copy. However,
>     >>>>>>? ? ? ?after
>     >>>>>>? ? ? ?I rolled the version number and did "git commit" on
>     the DESCRIPTION
>     >>>>>>? ? ? ?files, my "git push" command generated the following:
>     >>>>>>
>     >>>>>>
>     >>>>>>? ? ? ?remote: Invalid username or password.
>     >>>>>>? ? ? ?fatal: Authentication failed for
>     >>>>>>? ? ?
>     ?'https://sbgraves237:mypassword at github.com/sbgraves237/Ecdat.git/'
>     >>>>>>
>     >>>>>>
>     >>>>>>? ? ? ? ? ? ? What am I missing? [Note:? I used my actual GitHub
>     >>>>>>? ? ? ?password in
>     >>>>>>? ? ? ?place of "mypassword" here, and this "Authentication
>     failed" message
>     >>>>>>? ? ? ?reported the GitHub password I used here.]
>     >>>>>>
>     >>>>>>
>     >>>>>>? ? ? ? ? ? ? Thanks,
>     >>>>>>? ? ? ? ? ? ? Spencer
>     >>>>>>
>     >>>>>>
>     >>>>>>? ? ? ?p.s.? I'm doing this under macOS Mojave 10.14.5.?
>     Also,? I added
>     >>>>>>? ? ? ?".onAttach" functions to the R-Forge versions as
>     Brian G. Peterson
>     >>>>>>? ? ? ?suggested.? That seemed to work fine.
>     >>>>>>
>     >>>>>>
>     >>>>>>? ? ? ?On 2019-06-28 07:13, Duncan Murdoch wrote:
>     >>>>>>? ? ? ?> On 28/06/2019 6:26 a.m., G?bor Cs?rdi wrote:
>     >>>>>>? ? ? ?>
>     >>>>>>? ? ? ?>> Instead, you can do as Duncan suggested, and put a
>     README in your
>     >>>>>>? ? ? ?>> R-Forge
>     >>>>>>? ? ? ?>> repository, that points to *your* GitHub
>     repositor(y/ies). Then the
>     >>>>>>? ? ? ?>> https://github.com/rforge/ecdat read only mirror
>     will pick this up
>     >>>>>>? ? ? ?>> and will
>     >>>>>>? ? ? ?>> point there as well.
>     >>>>>>? ? ? ?>
>     >>>>>>? ? ? ?> Just for the record:? that was Henrik Singmann's
>     suggestion, I just
>     >>>>>>? ? ? ?> agreed with it.
>     >>>>>>? ? ? ?>
>     >>>>>>? ? ? ?> Duncan Murdoch
>     >>>>>>? ? ? ?>
>     >>>>>>
>     >>>>>>
>     >>>>>>? ? ? ? ? ? ? ?[[alternative HTML version deleted]]
>     >>>>>>
>     >>>>>> ?______________________________________________
>     >>>>>> R-devel at r-project.org <mailto:R-devel at r-project.org>
>     <mailto:R-devel at r-project.org <mailto:R-devel at r-project.org>>
>     mailing list
>     >>>>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>     >>>>>>
>     >>>>>? ? ? ? ? ?[[alternative HTML version deleted]]
>     >>>>>
>     >>>>> ______________________________________________
>     >>>>> R-devel at r-project.org <mailto:R-devel at r-project.org> mailing
>     list
>     >>>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>     >>> ______________________________________________
>     >>> R-devel at r-project.org <mailto:R-devel at r-project.org> mailing list
>     >>> https://stat.ethz.ch/mailman/listinfo/r-devel
>     >>
>     >>
>     >> --
>     >> Joshua Ulrich? | about.me/joshuaulrich
>     <http://about.me/joshuaulrich>
>     >> FOSS Trading? | www.fosstrading.com <http://www.fosstrading.com>
>     >
>     >
>
>     ______________________________________________
>     R-devel at r-project.org <mailto:R-devel at r-project.org> mailing list
>     https://stat.ethz.ch/mailman/listinfo/r-devel
>


	[[alternative HTML version deleted]]


From @uh@rto_@nggono @end|ng |rom y@hoo@com  Thu Jul  4 17:13:55 2019
From: @uh@rto_@nggono @end|ng |rom y@hoo@com (Suharto Anggono Suharto Anggono)
Date: Thu, 4 Jul 2019 15:13:55 +0000 (UTC)
Subject: [Rd] methods package: A _R_CHECK_LENGTH_1_LOGIC2_=true error
References: <793203922.1895806.1562253235836.ref@mail.yahoo.com>
Message-ID: <793203922.1895806.1562253235836@mail.yahoo.com>

In 'conformMethod', there is another instance of
omittedSig & <something about signature[omittedSig]> .
It just affects error message.

Original:
? ? if(any(is.na(match(signature[omittedSig], c("ANY", "missing"))))) {
? ? ? ? bad <- omittedSig & is.na(match(signature[omittedSig], c("ANY", "missing")))

After r76756:
? ? if(any(iiN <- is.na(match(signature[omittedSig], c("ANY", "missing"))))) {
? ? ? ? bad <- omittedSig & iiN


----------------------------------------------
>>>>> Martin Maechler 
>>>>>? ?  on Sat, 29 Jun 2019 12:05:49 +0200 writes:

>>>>> Martin Maechler 
>>>>>? ?  on Sat, 29 Jun 2019 10:33:10 +0200 writes:

>>>>> peter dalgaard 
>>>>>? ?  on Fri, 28 Jun 2019 16:20:03 +0200 writes:

? ? >>> > On 28 Jun 2019, at 16:03 , Martin Maechler <maechler using stat.math.ethz.ch> wrote:
? ? >>> > 
? ? >>> >>>>>> Henrik Bengtsson 
? ? >>> >>>>>>? ? on Thu, 27 Jun 2019 16:00:39 -0700 writes:
? ? >>> > 
? ? >>> >> Using:
? ? >>> >> 
? ? >>> >> untrace(methods::conformMethod)
? ? >>> >> at <- c(12,4,3,2)
? ? >>> >> str(body(methods::conformMethod)[[at]])
? ? >>> >> ## language omittedSig <- omittedSig && (signature[omittedSig] != "missing")
? ? >>> >> cc <- 0L
? ? >>> >> trace(methods::conformMethod, tracer = quote({
? ? >>> >>? cc <<- cc + 1L
? ? >>> >>? print(cc)
? ? >>> >>? if (cc == 31) {? ## manually identified
? ? >>> >>? ? untrace(methods::conformMethod)
? ? >>> >>? ? trace(methods::conformMethod, at = list(at), tracer = quote({
? ? >>> >>? ? ? str(list(signature = signature, mnames = mnames, fnames = fnames))
? ? >>> >>? ? ? print(ls())
? ? >>> >>? ? ? try(str(list(omittedSig = omittedSig, signature = signature)))
? ? >>> >>? ? }))
? ? >>> >>? }
? ? >>> >> }))
? ? >>> >> loadNamespace("oligo")
? ? >>> >> 
? ? >>> >> gives:
? ? >>> >> 
? ? >>> >> Untracing function "conformMethod" in package "methods"
? ? >>> >> Tracing function "conformMethod" in package "methods"
? ? >>> >> Tracing conformMethod(signature, mnames, fnames, f, fdef, definition)
? ? >>> >> step 12,4,3,2
? ? >>> >> List of 3
? ? >>> >> $ signature: Named chr [1:4] "TilingFeatureSet" "ANY" "ANY" "array"
? ? >>> >>? ..- attr(*, "names")= chr [1:4] "object" "subset" "target" "value"
? ? >>> >>? ..- attr(*, "package")= chr [1:4] "oligoClasses" "methods" "methods" "methods"
? ? >>> >> $ mnames?  : chr [1:2] "object" "value"
? ? >>> >> $ fnames?  : chr [1:4] "object" "subset" "target" "value"
? ? >>> >> [1] "f"? ? ? ? ? "fdef"? ? ?  "fnames"? ?  "fsig"? ? ?  "imf"
? ? >>> >> [6] "method"? ?  "mnames"? ?  "omitted"? ? "omittedSig" "sig0"
? ? >>> >> [11] "sigNames"?  "signature"
? ? >>> >> List of 2
? ? >>> >> $ omittedSig: logi [1:4] FALSE TRUE TRUE FALSE
? ? >>> >> $ signature : Named chr [1:4] "TilingFeatureSet" "ANY" "ANY" "array"
? ? >>> >>? ..- attr(*, "names")= chr [1:4] "object" "subset" "target" "value"
? ? >>> >>? ..- attr(*, "package")= chr [1:4] "oligoClasses" "methods" "methods" "methods"
? ? >>> >> Error in omittedSig && (signature[omittedSig] != "missing") :
? ? >>> >>? 'length(x) = 4 > 1' in coercion to 'logical(1)'
? ? >>> >> Error: unable to load R code in package 'oligo'
? ? >>> >> 
? ? >>> > 
? ? >>> > Thank you, Henrik, nice piece of using trace() .. and the above
? ? >>> > is useful for solving the issue --? I can work with that.
? ? >>> > 
? ? >>> > I'm? already pretty sure the wrong code starts with
? ? >>> > 
? ? >>> >? ? omittedSig <- sigNames %in% fnames[omitted] # ....

? ? >> my? "pretty sure"? statement above has proven to be wrong ..

? ? >>> > -------------
? ? >>> > 
? ? >>> 
? ? >>> I think the intention must have been that the two "ANY" signatures should change to "missing". 

? ? >> Definitely.

? ? >>> However, with the current logic that will not happen, because
? ? >>> 
? ? >>> > c(F,T,T,F) &&? c(T,T)
? ? >>> [1] FALSE
? ? >>> 
? ? >>> Henrik's non-fix would have resulted in
? ? >>> 
? ? >>> > c(F,T,T,F) &? c(T,T)
? ? >>> [1] FALSE? TRUE? TRUE FALSE
? ? >>> 
? ? >>> which is actually right, but only coincidentally due to recycling of c(T,T). Had it been c(F,T) then it would have been expanded to c(F,T,F,T) which would be the opposite of what was wanted.
? ? >>> 
? ? >>> Barring NA issues, I still think 
? ? >>> 
? ? >>> omittedSig[omittedSig] <- (signature[omittedSig] != "missing")
? ? >>> 
? ? >>> should do the trick.

? ? >> yes, (most probably).? I've found a version of that which should
? ? >> be even easier to "read and understand", in? svn commit 76753 :

? ? >> svn diff -c 76753 src/library/methods/R/RMethodUtils.R

? ? >> --- src/library/methods/R/RMethodUtils.R??? (Revision 76752)
? ? >> +++ src/library/methods/R/RMethodUtils.R??? (Revision 76753)
? ? >> @@ -342,8 +342,7 @@
? ? >> gettextf("formal arguments (%s) omitted in the method definition cannot be in the signature", bad2),
? ? >> call. = TRUE, domain = NA)
? ? >> }
? ? >> -? ? else if(!all(signature[omittedSig] == "missing")) {
? ? >> -? ? ? ? omittedSig <- omittedSig && (signature[omittedSig] != "missing")
? ? >> +? ? else if(any(omittedSig <- omittedSig & signature != "missing")) {


? ? >> BTW:? I've marked this --- and the? runmed() seg.fault + na.action
? ? >> change ---? as something to be added to R 3.6.1 patched,? as I
? ? >> deemed I should obey the "code freeze" rule in both cases.

? ? >> Martin

? ? > Hmm... I think we got a 'Neverending Story' here -- because it
? ? > seems, both Peter and I were wrong in thinking that it's a good
? ? > idea to change "missing" to "ANY" here ...
? ? > ((or if that *was* correct, that needs to entail more changes
? ? > happening during setMethod(.) {conformMethod() is only called in
? ? > one place in our code base, namely from setMethod()} :

as a matter of fact, I've been brave for now, left the change to
conformMethod()? and started to fix the constructed .local()
calls which are created in? conformMethod()'s sibling,
which is rematchDefinition().

It seems that this builds e.g. Matrix {with its gazillion
setMethod()s} and that continues to run its own tests.? OTOH,
Matrix may not trigger the situations that are dealt with here
at all, as the signature() are rarely longer than three, and at
some point in time I had made long passes through the package in
order to "minimize" the .local() calls.

--> svn commit 76756? (in addition to 76753, mentioned earlier)
? ? now has rematchDefinition() changes

I would be positively surprised if (but can imagine that) this
had no affect on CRAN / Bioconductor packages.

Still, these two changes seem to achieve what both the comments
and the documentation of? conformMethod() and rematchDefinition()
suggest should happen.

Of course, I'd really be happy if people with S4 packages would
check them with an R-devel version with svn rev >=? 76756
and report problems they see.
I do imagine effects, and would expect that bugs in current code
become visible where they had not done so previously.

Martin


From pd@me@ @end|ng |rom cb@@dk  Fri Jul  5 09:22:17 2019
From: pd@me@ @end|ng |rom cb@@dk (Peter Dalgaard)
Date: Fri, 5 Jul 2019 07:22:17 +0000
Subject: [Rd] R 3.6.1 is released
Message-ID: <07DD5C40-026F-4048-98D4-8ACEA4C9749F@cbs.dk>

The build system rolled up R-3.6.1.tar.gz (codename "Action of the Toes") this morning.

The list below details the changes in this release.

You can get the source code from

http://cran.r-project.org/src/base/R-3/R-3.6.1.tar.gz

or wait for it to be mirrored at a CRAN site nearer to you.

Binaries for various platforms will appear in due course.


For the R Core Team,

Peter Dalgaard

These are the checksums (md5 and SHA-256) for the freshly created files, in case you wish
to check that they are uncorrupted:

MD5 (AUTHORS) = b9c44f9f78cab3184ad9898bebc854b4
MD5 (COPYING) = eb723b61539feef013de476e68b5c50a
MD5 (COPYING.LIB) = a6f89e2100d9b6cdffcea4f398e37343
MD5 (FAQ) = 28a3942a7129877e9af1d5ea16202052
MD5 (INSTALL) = 7893f754308ca31f1ccf62055090ad7b
MD5 (NEWS) = 0b9e5d3077558ec2d91d39e03bfb2ad5
MD5 (NEWS.0) = bfcd7c147251b5474d96848c6f57e5a8
MD5 (NEWS.1) = eb78c4d053ec9c32b815cf0c2ebea801
MD5 (NEWS.2) = 591dcf615162127f904e4e461f330ce9
MD5 (R-latest.tar.gz) = f5003472d58a3d3765a1c537fdae71d5
MD5 (README) = f468f281c919665e276a1b691decbbe6
MD5 (RESOURCES) = 529223fd3ffef95731d0a87353108435
MD5 (THANKS) = 08158353102084599797db8c9ccf8e2a
MD5 (VERSION-INFO.dcf) = ff3f371396553df4e1936c10a56d973d
MD5 (R-3/R-3.6.1.tar.gz) = f5003472d58a3d3765a1c537fdae71d5

2cde824a7b18958e5f06b391c801c8288be0f84fa8934b7ddefef23c67e60c09  AUTHORS
e6d6a009505e345fe949e1310334fcb0747f28dae2856759de102ab66b722cb4  COPYING
6095e9ffa777dd22839f7801aa845b31c9ed07f3d6bf8a26dc5d2dec8ccc0ef3  COPYING.LIB
38219d9c6221ccfbf075ef03711b420a1aa8731f890c8f2337148b602a217c2d  FAQ
f87461be6cbaecc4dce44ac58e5bd52364b0491ccdadaf846cb9b452e9550f31  INSTALL
dd2ff3bc1e94c9751aed4182da7ed381bb546535bdf61f33b033474067c85c7c  NEWS
4e21b62f515b749f80997063fceab626d7258c7d650e81a662ba8e0640f12f62  NEWS.0
12b30c724117b1b2b11484673906a6dcd48a361f69fc420b36194f9218692d01  NEWS.1
ca04f78ffe54afa326fe3ed40e7e1411aca0000ed2fa5ead97ddf51c6aa5b7bc  NEWS.2
5baa9ebd3e71acecdcc3da31d9042fb174d55a42829f8315f2457080978b1389  R-latest.tar.gz
2fdd3e90f23f32692d4b3a0c0452f2c219a10882033d1774f8cadf25886c3ddc  README
408737572ecc6e1135fdb2cf7a9dbb1a6cb27967c757f1771b8c39d1fd2f1ab9  RESOURCES
2d2e85e85574c4430951f6b070c08cd5aff1602abfd1bb162bed6d89c436b11f  THANKS
20cf23c12614c5d9e8f9b3983005a35c8bac4c7340db4d7911afe05ca0688e07  VERSION-INFO.dcf
5baa9ebd3e71acecdcc3da31d9042fb174d55a42829f8315f2457080978b1389  R-3/R-3.6.1.tar.gz

This is the relevant part of the NEWS file

CHANGES IN R 3.6.1:

  INSTALLATION on a UNIX-ALIKE:

    * The default detection of the shell variable libNN is overridden
      for derivatives of Debian Linux, some of which have started to
      have a /usr/lib64 directory.  (E.g. Ubuntu 19.04.)  As before, it
      can be specified in config.site.

  UTILITIES:

    * R CMD config knows the values of AR and RANLIB, often set for LTO
      builds.

  DEPRECATED AND DEFUNCT:

    * The use of a character vector with .Fortran() is formally
      deprecated and gives a non-portability warning.  (It has long
      been strongly discouraged in 'Writing R Extensions'.)

  BUG FIXES:

    * On Windows, GUI package installation via menuInstallPkgs() works
      again, thanks to Len Weil's and Duncan Murdoch's PR#17556.

    * R CMD check on data() fixing PR#17558 thanks to Duncan Murdoch.

    * quasi(*, variance = list(..)) now works more efficiently, and
      should work in all cases fixing PR#17560.  Further, quasi(var =
      mu(1-mu)) and quasi(var = "mu ^ 3") now work, and quasi(variance
      = "log(mu)") now gives a correct error message.

    * Creation of lazy loading database during package installation is
      again robust to Rprofile changing the current working directory
      (PR#17559).

    * boxplot(y ~ f, horizontal=TRUE) now produces correct x- and
      y-labels.

    * rbind.data.frame() allows to keep <NA> levels from factor columns
      (PR#17562) via new option factor.exclude.

      Additionally, it works in one more case with matrix-columns which
      had been reported on 2017-01-16 by Krzysztof Banas.

    * Correct messaging in C++ pragma checks in tools code for R CMD
      check, fixing PR#17566 thanks to Xavier Robin.

    * print()ing and auto-printing no longer differs for functions with
      a user defined print.function, thanks to Bill Dunlap's report.

    * On Windows, writeClipboard(.., format = <n>) now does correctly
      pass format to the underlying C code, thanks to a bug report
      (with patch) by Jenny Bryan.

    * as.data.frame() treats 1D arrays the same as vectors, PR#17570.

    * Improvements in smoothEnds(x, *) working with NAs (towards
      runmed() working in that case, in the next version of R).

    * vcov(glm(<quasi>), dispersion = *) works correctly again, fixing
      PR#17571 thanks to Pavel Krivitsky.

    * R CMD INSTALL of binary packages on Windows now works also with
      per-directory locking.

    * R CMD INSTALL and install.packages() on Windows are now more
      robust against a locked file in an earlier installation of the
      package to be installed.  The default value of option
      install.lock on Windows has been changed to TRUE.

    * On Unix alikes (when readline is active), only expand tilde (~)
      file names starting with a tilde, instead of almost all tildes.

    * In R documentation (*.Rd) files, \item [..] is no longer treated
      specially when rendered in LaTeX and hence pdf, but rather shows
      the brackets in all cases.



-- 
Peter Dalgaard, Professor,
Center for Statistics, Copenhagen Business School
Solbjerg Plads 3, 2000 Frederiksberg, Denmark
Phone: (+45)38153501
Office: A 4.23
Email: pd.mes at cbs.dk  Priv: PDalgd at gmail.com


From m||e@@mcb@|n @end|ng |rom gm@||@com  Fri Jul  5 13:31:31 2019
From: m||e@@mcb@|n @end|ng |rom gm@||@com (Miles McBain)
Date: Fri, 5 Jul 2019 21:31:31 +1000
Subject: [Rd] parse() drops parse data when encountering `` (bug?)
Message-ID: <CAOO6kDxEQ+4abEuz_yHA=rV=44EQ+Tkppu0v+DBk__RsxEkn_A@mail.gmail.com>

Hi,

I've noticed that partial parse data from parse() is irretrivable when it
errors due to encountering '``' - two backticks in sequence. The print
output also looks more limited than a regular parser error which leads me
to suspect this is a bug. If this is the case could someone with the
authority please add it to R's bug tracker?

My reprex follows.

Thanks,
Miles

``` r
target_text <- "foo = 1 `` {r} foo = 2"
tstfile = srcfile(tempfile())
parse(text = target_text,
      keep.source = TRUE,
      srcfile = tstfile)
#> Error in parse(text = target_text, keep.source = TRUE, srcfile =
tstfile): attempt to use zero-length variable name

getParseData(tstfile)
#> NULL

target_text2 <- "foo = 1 {r} foo = 2"
tstfile = srcfile(tempfile())
parse(text = target_text2,
      keep.source = TRUE,
      srcfile = tstfile)
#> Error in parse(text = target_text2, keep.source = TRUE, srcfile =
tstfile): /tmp/RtmpXuGaL1/file5434ebd1f95:1:9: unexpected '{'
#> 1: foo = 1 {
#>             ^

getParseData(tstfile)
#>   line1 col1 line2 col2 id parent        token terminal text
#> 8     1    1     1    7  8      0 equal_assign    FALSE
#> 1     1    1     1    3  1      3       SYMBOL     TRUE  foo
#> 3     1    1     1    3  3      8         expr    FALSE
#> 2     1    5     1    5  2      8    EQ_ASSIGN     TRUE    =
#> 4     1    7     1    7  4      5    NUM_CONST     TRUE    1
#> 5     1    7     1    7  5      8         expr    FALSE
#> 6     1    9     1    9  6      0          '{'     TRUE    {

sessionInfo()
#> R version 3.6.0 (2019-04-26)
#> Platform: x86_64-pc-linux-gnu (64-bit)
#> Running under: Pop!_OS 18.10
#>
#> Matrix products: default
#> BLAS:   /usr/lib/x86_64-linux-gnu/blas/libblas.so.3.8.0
#> LAPACK: /usr/lib/x86_64-linux-gnu/lapack/liblapack.so.3.8.0
#>
#> locale:
#>  [1] LC_CTYPE=en_AU.UTF-8       LC_NUMERIC=C
#>  [3] LC_TIME=en_AU.UTF-8        LC_COLLATE=en_AU.UTF-8
#>  [5] LC_MONETARY=en_AU.UTF-8    LC_MESSAGES=en_AU.UTF-8
#>  [7] LC_PAPER=en_AU.UTF-8       LC_NAME=C
#>  [9] LC_ADDRESS=C               LC_TELEPHONE=C
#> [11] LC_MEASUREMENT=en_AU.UTF-8 LC_IDENTIFICATION=C
#>
#> attached base packages:
#> [1] stats     graphics  grDevices utils     datasets  methods   base
#>
#> loaded via a namespace (and not attached):
#>  [1] compiler_3.6.0  magrittr_1.5    tools_3.6.0     htmltools_0.3.6
#>  [5] yaml_2.2.0      Rcpp_1.0.1      stringi_1.4.3   rmarkdown_1.12
#>  [9] highr_0.8       knitr_1.23      stringr_1.4.0   xfun_0.8
#> [13] digest_0.6.19   evaluate_0.14
```

<sup>Created on 2019-07-05 by the [reprex package](
https://reprex.tidyverse.org) (v0.2.1)</sup>

	[[alternative HTML version deleted]]


From edd @end|ng |rom deb|@n@org  Fri Jul  5 18:45:41 2019
From: edd @end|ng |rom deb|@n@org (Dirk Eddelbuettel)
Date: Fri, 5 Jul 2019 11:45:41 -0500
Subject: [Rd] CRAN down ?
Message-ID: <23839.32437.454535.398095@rob.eddelbuettel.com>


There seems to be another outage of the Vienna CRAN server [1] though from
what I can from afar not related to DNS outage [2].

Could anyone confirm and possibly alert the local team in Vienna?

Dirk

[1] https://twitter.com/d_olivaw/status/1147161883797086214
[2] The DNS resolves on a few sites but eg simple pings stall

-- 
http://dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org


From Fr|edr|ch@Le|@ch @end|ng |rom boku@@c@@t  Fri Jul  5 19:36:23 2019
From: Fr|edr|ch@Le|@ch @end|ng |rom boku@@c@@t (Friedrich Leisch)
Date: Fri, 5 Jul 2019 19:36:23 +0200
Subject: [Rd] CRAN down ?
In-Reply-To: <23839.32437.454535.398095@rob.eddelbuettel.com>
References: <23839.32437.454535.398095@rob.eddelbuettel.com>
Message-ID: <23839.35479.177369.773717@angua.boku.ac.at>


>>>>> On Fri, 5 Jul 2019 11:45:41 -0500,
>>>>> Dirk Eddelbuettel (DE) wrote:

  > There seems to be another outage of the Vienna CRAN server [1] though from
  > what I can from afar not related to DNS outage [2].

  > Could anyone confirm and possibly alert the local team in Vienna?

Seems to work fine for me, both http and ping from non-WU machines
(but of course from Vienna):

leisch at nona01:~$ ping cran.r-project.org
PING cran.wu-wien.ac.at (137.208.57.37) 56(84) bytes of data.
64 bytes from cran.wu-wien.ac.at (137.208.57.37): icmp_seq=1 ttl=58 time=1.43 ms
64 bytes from cran.wu-wien.ac.at (137.208.57.37): icmp_seq=2 ttl=58 time=1.22 ms
64 bytes from cran.wu-wien.ac.at (137.208.57.37): icmp_seq=3 ttl=58 time=1.62 ms
64 bytes from cran.wu-wien.ac.at (137.208.57.37): icmp_seq=4 ttl=58 time=1.47 ms

Best,
Fritz


From pd@|gd @end|ng |rom gm@||@com  Fri Jul  5 19:37:09 2019
From: pd@|gd @end|ng |rom gm@||@com (peter dalgaard)
Date: Fri, 5 Jul 2019 19:37:09 +0200
Subject: [Rd] CRAN down ?
In-Reply-To: <23839.32437.454535.398095@rob.eddelbuettel.com>
References: <23839.32437.454535.398095@rob.eddelbuettel.com>
Message-ID: <001AB0AA-FF5F-4301-92C3-830B494C0AFB@gmail.com>

Hum, I could reach the machine once:

$ ssh cran.r-project.org

The programs included with the Debian GNU/Linux system are free software;
....

but now it hangs on connecting. So either it is being DOS'ed or someone saw the problem and restarted it.

-pd


> On 5 Jul 2019, at 18:45 , Dirk Eddelbuettel <edd at debian.org> wrote:
> 
> 
> There seems to be another outage of the Vienna CRAN server [1] though from
> what I can from afar not related to DNS outage [2].
> 
> Could anyone confirm and possibly alert the local team in Vienna?
> 
> Dirk
> 
> [1] https://twitter.com/d_olivaw/status/1147161883797086214
> [2] The DNS resolves on a few sites but eg simple pings stall
> 
> -- 
> http://dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel

-- 
Peter Dalgaard, Professor,
Center for Statistics, Copenhagen Business School
Solbjerg Plads 3, 2000 Frederiksberg, Denmark
Phone: (+45)38153501
Office: A 4.23
Email: pd.mes at cbs.dk  Priv: PDalgd at gmail.com


From pd@|gd @end|ng |rom gm@||@com  Fri Jul  5 19:38:43 2019
From: pd@|gd @end|ng |rom gm@||@com (peter dalgaard)
Date: Fri, 5 Jul 2019 19:38:43 +0200
Subject: [Rd] CRAN down ?
In-Reply-To: <001AB0AA-FF5F-4301-92C3-830B494C0AFB@gmail.com>
References: <23839.32437.454535.398095@rob.eddelbuettel.com>
 <001AB0AA-FF5F-4301-92C3-830B494C0AFB@gmail.com>
Message-ID: <E3BB5DAD-7D03-41E6-A8D8-38B403597876@gmail.com>

The latter

pd at cran:~$ uptime
 19:37:51 up 0 min,  2 users,  load average: 4.80, 1.30, 0.44


> On 5 Jul 2019, at 19:37 , peter dalgaard <pdalgd at gmail.com> wrote:
> 
> Hum, I could reach the machine once:
> 
> $ ssh cran.r-project.org
> 
> The programs included with the Debian GNU/Linux system are free software;
> ....
> 
> but now it hangs on connecting. So either it is being DOS'ed or someone saw the problem and restarted it.
> 
> -pd
> 
> 
>> On 5 Jul 2019, at 18:45 , Dirk Eddelbuettel <edd at debian.org> wrote:
>> 
>> 
>> There seems to be another outage of the Vienna CRAN server [1] though from
>> what I can from afar not related to DNS outage [2].
>> 
>> Could anyone confirm and possibly alert the local team in Vienna?
>> 
>> Dirk
>> 
>> [1] https://twitter.com/d_olivaw/status/1147161883797086214
>> [2] The DNS resolves on a few sites but eg simple pings stall
>> 
>> -- 
>> http://dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org
>> 
>> ______________________________________________
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel
> 
> -- 
> Peter Dalgaard, Professor,
> Center for Statistics, Copenhagen Business School
> Solbjerg Plads 3, 2000 Frederiksberg, Denmark
> Phone: (+45)38153501
> Office: A 4.23
> Email: pd.mes at cbs.dk  Priv: PDalgd at gmail.com
> 
> 
> 
> 
> 
> 
> 
> 
> 

-- 
Peter Dalgaard, Professor,
Center for Statistics, Copenhagen Business School
Solbjerg Plads 3, 2000 Frederiksberg, Denmark
Phone: (+45)38153501
Office: A 4.23
Email: pd.mes at cbs.dk  Priv: PDalgd at gmail.com


From m@ech|er @end|ng |rom @t@t@m@th@ethz@ch  Sat Jul  6 15:21:32 2019
From: m@ech|er @end|ng |rom @t@t@m@th@ethz@ch (Martin Maechler)
Date: Sat, 6 Jul 2019 15:21:32 +0200
Subject: [Rd] methods package: A _R_CHECK_LENGTH_1_LOGIC2_=true error
In-Reply-To: <793203922.1895806.1562253235836@mail.yahoo.com>
References: <793203922.1895806.1562253235836.ref@mail.yahoo.com>
 <793203922.1895806.1562253235836@mail.yahoo.com>
Message-ID: <23840.41052.569765.577730@stat.math.ethz.ch>

>>>>> Suharto Anggono Suharto Anggono via R-devel 
>>>>>     on Thu, 4 Jul 2019 15:13:55 +0000 writes:

    > In 'conformMethod', there is another instance of
    > omittedSig & <something about signature[omittedSig]> .
    > It just affects error message.

    > Original:
    > ? ? if(any(is.na(match(signature[omittedSig], c("ANY", "missing"))))) {
    > ? ? ? ? bad <- omittedSig & is.na(match(signature[omittedSig], c("ANY", "missing")))

    > After r76756:
    > ? ? if(any(iiN <- is.na(match(signature[omittedSig], c("ANY", "missing"))))) {
    > ? ? ? ? bad <- omittedSig & iiN

Yes, thank you, that's same "internal logic" error as later.

One difference is that I think the above case cannot be
triggered by setMethod() .. one needs an explicit "artificial"
conformMethod() call.
Still, of course, it's wrong and should be corrected.
I've started to test changes .. maye not get to commit (with
enough confidence) before taking the train to
useR! 2019 @  Toulouse (France).

Martin


From @purd|e@@ @end|ng |rom gm@||@com  Mon Jul  8 01:43:59 2019
From: @purd|e@@ @end|ng |rom gm@||@com (Abby Spurdle)
Date: Mon, 8 Jul 2019 11:43:59 +1200
Subject: [Rd] Format printing inside a matrix
In-Reply-To: <3279306.Pz8kNGSOn8@plastic>
References: <3279306.Pz8kNGSOn8@plastic>
Message-ID: <CAB8pepwib7Dpv6mzDHbNe44c_f8JjJ9FbPZg7MXXgZjbS-g6hQ@mail.gmail.com>

> I am not sure if there is an existing solution to this, but I want my S4
> objects inside a list matrix showing correctly.
> R> matrix(lst, 2)
>      [,1] [,2] [,3] [,4] [,5]
> [1,] ?    ?    ?    ?    ?
> [2,] ?    ?    ?    ?    ?
> Is it possible that the print method for matrix can call some type of
generic
> such as `as.character` or `format` when it encounters such cases?

I had some difficulty understanding this question.
So, I'm going to paraphrase it.

R, to the best of my knowledge, does not support object arrays, as such.
(Or if it does, I've certainly missed the memo on this one).

The closest option, is to create an (S3) list of (S3 or S4) objects.
This is sufficient in the one-dimension case.
However, to provide functionality of two- or three-dimensional object
arrays, one can create a matrix (or array) from the list.

It's desirable to print such matrices and arrays.
This is possible but the output contains an array of question marks, which
isn't helpful.

Would it be possible for the print method for both matrices and arrays
(conditional on having a list type), call the format method for each
object, possibly creating a character matrix?
Presumably there are other approaches, but the main thing is that the
output is useful and it's easy for R users to control the way objects (in
matrices and arrays) are printed.

> Or is there any other place that I can override without introducing a new
S3 class?

In theory, the simplest approach is to redefine the print method for
matrices.
However, that would be unacceptable in a CRAN package, probably...

So, unless R Core change the print method, you may have to create a matrix
subclass.


Abs

	[[alternative HTML version deleted]]


From m@r||n- @end|ng |rom gmx@cn  Mon Jul  8 02:41:05 2019
From: m@r||n- @end|ng |rom gmx@cn (Jialin Ma)
Date: Sun, 07 Jul 2019 17:41:05 -0700
Subject: [Rd] Format printing inside a matrix
In-Reply-To: <CAB8pepwib7Dpv6mzDHbNe44c_f8JjJ9FbPZg7MXXgZjbS-g6hQ@mail.gmail.com>
References: <3279306.Pz8kNGSOn8@plastic>
 <CAB8pepwib7Dpv6mzDHbNe44c_f8JjJ9FbPZg7MXXgZjbS-g6hQ@mail.gmail.com>
Message-ID: <1826006.ZiRRdhffAi@plastic>

Hi Abby,

Thanks a lot for your paraphrasing and your suggestion!

The problem of wrapping the list into a S3/S4 object, i.e. subclassing array
or matrix, is that one also has to define a bunch of methods for subsetting,
joining, etc, in order to make it behave like a list array. The reason is that
most R functions for subsetting, joining, etc. do not preserve class
attributes of the input, which is possibly by design. It is not desirable if a
simple matrix subsetting will remove the class attributes of the object.

There are also many other common functions that are meant to drop the
attributes of the input, e.g. lapply, apply -- they are not generics and it is
not wise to override them.

Overall, introducing a new S3/S4 class often brings some extra price in order
to maintain the correct behavior, which is why I tend to avoid them unless it
is necessary.

Best regards,
Jialin

On Sunday, July 7, 2019 4:43:59 PM PDT Abby Spurdle wrote:
> contains an array of question marks, which
> isn't helpful.
>
> Would it be possible for the print method for both matrices and arrays
> (conditional on having a list type), call the format method for each
> object, possibly creating a character matrix?
> Presumably there are other approaches, but the main thing is that the
> output is useful and it's easy for R users to control the way objects (in
> matrices and arrays) are printed.
>
> > Or is there any other place that I can override without introducing a new
>
> S3 class?
>
> In theory, the simplest approach is to redefine the print method for
> matrices.
> However, that would be unacceptable in a CRAN package, probably...
>
> So, unless R Core change the print method, you may have to create a matrix
> subclass.


From @purd|e@@ @end|ng |rom gm@||@com  Mon Jul  8 03:34:42 2019
From: @purd|e@@ @end|ng |rom gm@||@com (Abby Spurdle)
Date: Mon, 8 Jul 2019 13:34:42 +1200
Subject: [Rd] Format printing inside a matrix
In-Reply-To: <1826006.ZiRRdhffAi@plastic>
References: <3279306.Pz8kNGSOn8@plastic>
 <CAB8pepwib7Dpv6mzDHbNe44c_f8JjJ9FbPZg7MXXgZjbS-g6hQ@mail.gmail.com>
 <1826006.ZiRRdhffAi@plastic>
Message-ID: <CAB8pepy8H7AjUfMDdbrOyPKxzDU2S7eCCh2Hu7dmOh8Jc7zw-Q@mail.gmail.com>

> The problem of wrapping the list into a S3/S4 object, i.e. subclassing
array
> or matrix, is that one also has to define a bunch of methods for
subsetting,
> joining, etc, in order to make it behave like a list array.

False, sorry.
Wrapping != Defining a New Class.
And you don't have to define any methods.
However, my understanding of your original post is that you want to modify
the printing.
So, there would only need to be one method, a print method.

And if you don't want to do that, you could just create a stand alone
custom print function:
my.print.function = function (my.matrix.object, quote=FALSE, max.chars=10L)
{   do.something ()
}

> It is not desirable if a
> simple matrix subsetting will remove the class attributes of the object.

I'm assuming by "the object" you are referring to the matrix.
And by "class attribute"-"s" you are referring to all the attributes.
This is a completely separate discussion from your original post.
And I don't see what it has to do with printing matrices with a list type.

Note that subsetting only removes attributes from the matrix, it does not
remove attributes (or slots) from each object in the matrix.
Also, note that you may need to use "obj [[i, j]]", with *double* brackets.
Because
> attributes (obj [i, j])
Will be NULL.

	[[alternative HTML version deleted]]


From |@wrence@m|ch@e| @end|ng |rom gene@com  Mon Jul  8 04:04:03 2019
From: |@wrence@m|ch@e| @end|ng |rom gene@com (Michael Lawrence)
Date: Sun, 7 Jul 2019 19:04:03 -0700
Subject: [Rd] Format printing inside a matrix
In-Reply-To: <CAB8pepwib7Dpv6mzDHbNe44c_f8JjJ9FbPZg7MXXgZjbS-g6hQ@mail.gmail.com>
References: <3279306.Pz8kNGSOn8@plastic>
 <CAB8pepwib7Dpv6mzDHbNe44c_f8JjJ9FbPZg7MXXgZjbS-g6hQ@mail.gmail.com>
Message-ID: <CAOQ5Nycj4EuY14OGCYnEEyEX1+dMKFeMh1Frdu5pxVDdrU=g0g@mail.gmail.com>

A generic for displaying an object in a cell would be a reasonable
solution for this particular problem. However, as soon as you start
treating these objects as data (like putting them into a matrix),
you're likely going to want vectorized operations over them, which
means formalized vector and matrix classes. S4Vectors in Bioconductor
facilitates this for vectors, but not for higher-order arrays.

Michael

On Sun, Jul 7, 2019 at 4:44 PM Abby Spurdle <spurdle.a at gmail.com> wrote:
>
> > I am not sure if there is an existing solution to this, but I want my S4
> > objects inside a list matrix showing correctly.
> > R> matrix(lst, 2)
> >      [,1] [,2] [,3] [,4] [,5]
> > [1,] ?    ?    ?    ?    ?
> > [2,] ?    ?    ?    ?    ?
> > Is it possible that the print method for matrix can call some type of
> generic
> > such as `as.character` or `format` when it encounters such cases?
>
> I had some difficulty understanding this question.
> So, I'm going to paraphrase it.
>
> R, to the best of my knowledge, does not support object arrays, as such.
> (Or if it does, I've certainly missed the memo on this one).
>
> The closest option, is to create an (S3) list of (S3 or S4) objects.
> This is sufficient in the one-dimension case.
> However, to provide functionality of two- or three-dimensional object
> arrays, one can create a matrix (or array) from the list.
>
> It's desirable to print such matrices and arrays.
> This is possible but the output contains an array of question marks, which
> isn't helpful.
>
> Would it be possible for the print method for both matrices and arrays
> (conditional on having a list type), call the format method for each
> object, possibly creating a character matrix?
> Presumably there are other approaches, but the main thing is that the
> output is useful and it's easy for R users to control the way objects (in
> matrices and arrays) are printed.
>
> > Or is there any other place that I can override without introducing a new
> S3 class?
>
> In theory, the simplest approach is to redefine the print method for
> matrices.
> However, that would be unacceptable in a CRAN package, probably...
>
> So, unless R Core change the print method, you may have to create a matrix
> subclass.
>
>
> Abs
>
>         [[alternative HTML version deleted]]
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel



-- 
Michael Lawrence
Scientist, Bioinformatics and Computational Biology
Genentech, A Member of the Roche Group
Office +1 (650) 225-7760
michafla at gene.com

Join Genentech on LinkedIn | Twitter | Facebook | Instagram | YouTube


From m@r||n- @end|ng |rom gmx@cn  Mon Jul  8 04:13:47 2019
From: m@r||n- @end|ng |rom gmx@cn (Jialin Ma)
Date: Sun, 07 Jul 2019 19:13:47 -0700
Subject: [Rd] Format printing inside a matrix
In-Reply-To: <CAB8pepy8H7AjUfMDdbrOyPKxzDU2S7eCCh2Hu7dmOh8Jc7zw-Q@mail.gmail.com>
References: <3279306.Pz8kNGSOn8@plastic> <1826006.ZiRRdhffAi@plastic>
 <CAB8pepy8H7AjUfMDdbrOyPKxzDU2S7eCCh2Hu7dmOh8Jc7zw-Q@mail.gmail.com>
Message-ID: <312538717.SnT3Y9hZbM@plastic>

Hi Abby,

> > It is not desirable if a
> > simple matrix subsetting will remove the class attributes of the object.
>
> I'm assuming by "the object" you are referring to the matrix.
> And by "class attribute"-"s" you are referring to all the attributes.
> This is a completely separate discussion from your original post.
> And I don't see what it has to do with printing matrices with a list type.

This is what I means:

Suppose my list of S4 objects looks like following:

  myElement <- setClass("myElement", slots = c(x = "integer"))
  myList <- lapply(1:8, function(x) myElement(x = x))
  myArray <- array(myList, c(2,2,2))
  myArray

  # , , 1
  #
  #      [,1] [,2]
  # [1,] ?    ?
  # [2,] ?    ?
  #
  # , , 2
  #
  #      [,1] [,2]
  # [1,] ?    ?
  # [2,] ?    ?

Then I want to wrap the list with a new class and defining a new print
method for it.

  class(myArray) <- "myArray"
  print.myArray <- function(x) {
      print(`dim<-`(sapply(x, function(x) paste0("'", x at x)), dim(x)))
  }
  myArray

  # , , 1
  #
  #      [,1] [,2]
  # [1,] "'1" "'3"
  # [2,] "'2" "'4"
  #
  # , , 2
  #
  #      [,1] [,2]
  # [1,] "'5" "'7"
  # [2,] "'6" "'8"

This works fine but no longer work after we do some simple operations.

  myArray[1:2, 1:2, 2]

  #      [,1] [,2]
  # [1,] ?    ?
  # [2,] ?    ?

In order to make it work naturally, we have to define the subsetting method.

  `[.myArray` <- function(x, i, j, ...) {
      `class<-`(unclass(x)[i, j, ...], class(x))
  }
  myArray[1:2, 1:2, 2]

  #      [,1] [,2]
  # [1,] "'5" "'7"
  # [2,] "'6" "'8"

And there is a bunch of other methods that needs to be defined for this
specific class. This seems too much if I simply want the default list behavior
plus printing method.

Best regards,
Jialin


From m@r||n- @end|ng |rom gmx@cn  Mon Jul  8 04:48:48 2019
From: m@r||n- @end|ng |rom gmx@cn (Jialin Ma)
Date: Sun, 07 Jul 2019 19:48:48 -0700
Subject: [Rd] Format printing inside a matrix
In-Reply-To: <CAOQ5Nycj4EuY14OGCYnEEyEX1+dMKFeMh1Frdu5pxVDdrU=g0g@mail.gmail.com>
References: <3279306.Pz8kNGSOn8@plastic>
 <CAB8pepwib7Dpv6mzDHbNe44c_f8JjJ9FbPZg7MXXgZjbS-g6hQ@mail.gmail.com>
 <CAOQ5Nycj4EuY14OGCYnEEyEX1+dMKFeMh1Frdu5pxVDdrU=g0g@mail.gmail.com>
Message-ID: <2959933.SN51179d71@plastic>

Hi Michael,

Thanks for your reply. I suppose using a new S3/S4 class wrapping the list
could solve my problem, but again I think it brings too much cost for
maintaining the expected behavior.  I was aware that Rmpfr package takes this
approach and uses a similar structure (a S4 class wrapping a list of S4
objects) to represent the matrix or higher-order array with arbitrary
precision.

And yes S4Vectors was a great package -- one can easily extend a class defined
in S4Vectors and get expected behavior. However, in my case I was hoping my
particular data structure could play well with matrix, data frame, etc.

Best regards,
Jialin

On Sunday, July 7, 2019 7:04:03 PM PDT Michael Lawrence wrote:
> A generic for displaying an object in a cell would be a reasonable
> solution for this particular problem. However, as soon as you start
> treating these objects as data (like putting them into a matrix),
> you're likely going to want vectorized operations over them, which
> means formalized vector and matrix classes. S4Vectors in Bioconductor
> facilitates this for vectors, but not for higher-order arrays.
>
> Michael
>
> On Sun, Jul 7, 2019 at 4:44 PM Abby Spurdle <spurdle.a at gmail.com> wrote:
> > > I am not sure if there is an existing solution to this, but I want my S4
> > > objects inside a list matrix showing correctly.
> > > R> matrix(lst, 2)
> > >
> > >      [,1] [,2] [,3] [,4] [,5]
> > >
> > > [1,] ?    ?    ?    ?    ?
> > > [2,] ?    ?    ?    ?    ?
> > > Is it possible that the print method for matrix can call some type of
> >
> > generic
> >
> > > such as `as.character` or `format` when it encounters such cases?
> >
> > I had some difficulty understanding this question.
> > So, I'm going to paraphrase it.
> >
> > R, to the best of my knowledge, does not support object arrays, as such.
> > (Or if it does, I've certainly missed the memo on this one).
> >
> > The closest option, is to create an (S3) list of (S3 or S4) objects.
> > This is sufficient in the one-dimension case.
> > However, to provide functionality of two- or three-dimensional object
> > arrays, one can create a matrix (or array) from the list.
> >
> > It's desirable to print such matrices and arrays.
> > This is possible but the output contains an array of question marks, which
> > isn't helpful.
> >
> > Would it be possible for the print method for both matrices and arrays
> > (conditional on having a list type), call the format method for each
> > object, possibly creating a character matrix?
> > Presumably there are other approaches, but the main thing is that the
> > output is useful and it's easy for R users to control the way objects (in
> > matrices and arrays) are printed.
> >
> > > Or is there any other place that I can override without introducing a
> > > new
> >
> > S3 class?
> >
> > In theory, the simplest approach is to redefine the print method for
> > matrices.
> > However, that would be unacceptable in a CRAN package, probably...
> >
> > So, unless R Core change the print method, you may have to create a matrix
> > subclass.
> >
> >
> > Abs
> >
> >         [[alternative HTML version deleted]]
> >
> > ______________________________________________
> > R-devel at r-project.org mailing list
> > https://stat.ethz.ch/mailman/listinfo/r-devel


From @purd|e@@ @end|ng |rom gm@||@com  Mon Jul  8 05:03:52 2019
From: @purd|e@@ @end|ng |rom gm@||@com (Abby Spurdle)
Date: Mon, 8 Jul 2019 15:03:52 +1200
Subject: [Rd] Format printing inside a matrix
In-Reply-To: <312538717.SnT3Y9hZbM@plastic>
References: <3279306.Pz8kNGSOn8@plastic> <1826006.ZiRRdhffAi@plastic>
 <CAB8pepy8H7AjUfMDdbrOyPKxzDU2S7eCCh2Hu7dmOh8Jc7zw-Q@mail.gmail.com>
 <312538717.SnT3Y9hZbM@plastic>
Message-ID: <CAB8pepyAhqBwCSMe7PjyBtubJLrxOmJkFNeUf2aiyXVN44xceg@mail.gmail.com>

> This works fine but no longer work after we do some simple operations.
>   myArray[1:2, 1:2, 2]
>   #      [,1] [,2]
>   # [1,] ?    ?
>   # [2,] ?    ?

OK, that's a good point.
I didn't think of that.

Michael Lawrence was probably correct in his comment:

>However, as soon as you start
> treating these objects as data (like putting them into a matrix),
> you're likely going to want vectorized operations over them, which
> means formalized vector and matrix classes

I'm thinking that we need an array object designed for specifically for
other objects.
I think it would be good if it was part of the standard R distribution.
But that's not up to me.

Note that I'm planning to create an R package for matrix based and table
based objects, in the near future, possibly extending the Matrix package.
(So, likely to be in S4).

I will think about object arrays in R, some more.

Thank you for highlighting this issue.
Sorry, I can't offer an immediate solution.

	[[alternative HTML version deleted]]


From hp@ge@ @end|ng |rom |redhutch@org  Mon Jul  8 06:32:29 2019
From: hp@ge@ @end|ng |rom |redhutch@org (Pages, Herve)
Date: Mon, 8 Jul 2019 04:32:29 +0000
Subject: [Rd] Format printing inside a matrix
In-Reply-To: <1826006.ZiRRdhffAi@plastic>
References: <3279306.Pz8kNGSOn8@plastic>
 <CAB8pepwib7Dpv6mzDHbNe44c_f8JjJ9FbPZg7MXXgZjbS-g6hQ@mail.gmail.com>
 <1826006.ZiRRdhffAi@plastic>
Message-ID: <338008c4-ed9b-0a41-10bd-ea9d127bcc5e@fredhutch.org>

On 7/7/19 17:41, Jialin Ma wrote:
> Hi Abby,
> 
> Thanks a lot for your paraphrasing and your suggestion!
> 
> The problem of wrapping the list into a S3/S4 object, i.e. subclassing array
> or matrix, is that one also has to define a bunch of methods for subsetting,
> joining, etc, in order to make it behave like a list array. The reason is that
> most R functions for subsetting, joining, etc. do not preserve class
> attributes of the input, which is possibly by design.

Is it? One could argue that a more sensible behavior would be that
things like `[`(..., drop=FALSE), rbind(), cbind(), etc... preserve
the class attribute.

Interestingly t() does that:

   m <- matrix(1:6, nrow=2)
   class(m) <- "foo"

   m
   #      [,1] [,2] [,3]
   # [1,]    1    3    5
   # [2,]    2    4    6
   # attr(,"class")
   # [1] "foo"

   t(m)
   #      [,1] [,2]
   # [1,]    1    2
   # [2,]    3    4
   # [3,]    5    6
   # attr(,"class")
   # [1] "foo"

but not aperm() (which in this case would be expected to be
equivalent to t()):

   aperm(m, 2:1)
   #      [,1] [,2]
   # [1,]    1    2
   # [2,]    3    4
   # [3,]    5    6

Reshaping also preserves the class:

   dim(m) <- c(6, 1)
   m
   #      [,1]
   # [1,]    1
   # [2,]    2
   # [3,]    3
   # [4,]    4
   # [5,]    5
   # [6,]    6
   # attr(,"class")
   # [1] "foo"

So if it makes sense for t() and reshaping, it's not clear why it
wouldn't for [, aperm(), cbind(), etc...?

H.


> It is not desirable if a
> simple matrix subsetting will remove the class attributes of the object.
> 
> There are also many other common functions that are meant to drop the
> attributes of the input, e.g. lapply, apply -- they are not generics and it is
> not wise to override them.
> 
> Overall, introducing a new S3/S4 class often brings some extra price in order
> to maintain the correct behavior, which is why I tend to avoid them unless it
> is necessary.
> 
> Best regards,
> Jialin
> 
> On Sunday, July 7, 2019 4:43:59 PM PDT Abby Spurdle wrote:
>> contains an array of question marks, which
>> isn't helpful.
>>
>> Would it be possible for the print method for both matrices and arrays
>> (conditional on having a list type), call the format method for each
>> object, possibly creating a character matrix?
>> Presumably there are other approaches, but the main thing is that the
>> output is useful and it's easy for R users to control the way objects (in
>> matrices and arrays) are printed.
>>
>>> Or is there any other place that I can override without introducing a new
>>
>> S3 class?
>>
>> In theory, the simplest approach is to redefine the print method for
>> matrices.
>> However, that would be unacceptable in a CRAN package, probably...
>>
>> So, unless R Core change the print method, you may have to create a matrix
>> subclass.
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://urldefense.proofpoint.com/v2/url?u=https-3A__stat.ethz.ch_mailman_listinfo_r-2Ddevel&d=DwIFAg&c=eRAMFD45gAfqt84VtBcfhQ&r=BK7q3XeAvimeWdGbWY_wJYbW0WYiZvSXAJJKaaPhzWA&m=CFwIFXl8lv7HqmAdD6GKNJ6jlR0VRL1Ek1iGNO_suAk&s=Mhiq-DX7GTrcmqUFXKjuATvQy8Zs6op359DAMvOrois&e=
> 

-- 
Herv? Pag?s

Program in Computational Biology
Division of Public Health Sciences
Fred Hutchinson Cancer Research Center
1100 Fairview Ave. N, M1-B514
P.O. Box 19024
Seattle, WA 98109-1024

E-mail: hpages at fredhutch.org
Phone:  (206) 667-5791
Fax:    (206) 667-1319

From m@r||n- @end|ng |rom gmx@cn  Mon Jul  8 07:10:11 2019
From: m@r||n- @end|ng |rom gmx@cn (Jialin Ma)
Date: Sun, 07 Jul 2019 22:10:11 -0700
Subject: [Rd] Format printing inside a matrix
In-Reply-To: <338008c4-ed9b-0a41-10bd-ea9d127bcc5e@fredhutch.org>
References: <3279306.Pz8kNGSOn8@plastic> <1826006.ZiRRdhffAi@plastic>
 <338008c4-ed9b-0a41-10bd-ea9d127bcc5e@fredhutch.org>
Message-ID: <2388201.pcZvV3gs6k@plastic>

Hi Herv?,

> Is it? One could argue that a more sensible behavior would be that
> things like `[`(..., drop=FALSE), rbind(), cbind(), etc... preserve
> the class attribute.
> 
> Interestingly t() does that
> 
> So if it makes sense for t() and reshaping, it's not clear why it
> wouldn't for [, aperm(), cbind(), etc...?

Thanks for the interesting example and I did not test these functions before. 
It seems to me that it indeed makes senses to preserve class attributes for 
these functions -- if there is no specific reason to drop them.

And it will make it a lot easier extending the behaviors of base list, matrix 
and array.

Best regards,
Jialin

On Sunday, July 7, 2019 9:32:29 PM PDT Pages, Herve wrote:
> On 7/7/19 17:41, Jialin Ma wrote:
> 
> > Hi Abby,
> > 
> > Thanks a lot for your paraphrasing and your suggestion!
> > 
> > The problem of wrapping the list into a S3/S4 object, i.e. subclassing
> > array
 or matrix, is that one also has to define a bunch of methods for
> > subsetting, joining, etc, in order to make it behave like a list array.
> > The reason is that most R functions for subsetting, joining, etc. do not
> > preserve class attributes of the input, which is possibly by design.
> 
> 
> Is it? One could argue that a more sensible behavior would be that
> things like `[`(..., drop=FALSE), rbind(), cbind(), etc... preserve
> the class attribute.
> 
> Interestingly t() does that:
> 
>    m <- matrix(1:6, nrow=2)
>    class(m) <- "foo"
> 
>    m
>    #      [,1] [,2] [,3]
>    # [1,]    1    3    5
>    # [2,]    2    4    6
>    # attr(,"class")
>    # [1] "foo"
> 
>    t(m)
>    #      [,1] [,2]
>    # [1,]    1    2
>    # [2,]    3    4
>    # [3,]    5    6
>    # attr(,"class")
>    # [1] "foo"
> 
> but not aperm() (which in this case would be expected to be
> equivalent to t()):
> 
>    aperm(m, 2:1)
>    #      [,1] [,2]
>    # [1,]    1    2
>    # [2,]    3    4
>    # [3,]    5    6
> 
> Reshaping also preserves the class:
> 
>    dim(m) <- c(6, 1)
>    m
>    #      [,1]
>    # [1,]    1
>    # [2,]    2
>    # [3,]    3
>    # [4,]    4
>    # [5,]    5
>    # [6,]    6
>    # attr(,"class")
>    # [1] "foo"
> 
> So if it makes sense for t() and reshaping, it's not clear why it
> wouldn't for [, aperm(), cbind(), etc...?
> 
> H.
> 
> 
> 
> > It is not desirable if a
> > simple matrix subsetting will remove the class attributes of the object.
> > 
> > There are also many other common functions that are meant to drop the
> > attributes of the input, e.g. lapply, apply -- they are not generics and
> > it is
 not wise to override them.
> > 
> > Overall, introducing a new S3/S4 class often brings some extra price in
> > order
 to maintain the correct behavior, which is why I tend to avoid
> > them unless it is necessary.
> > 
> > Best regards,
> > Jialin
> > 
> > On Sunday, July 7, 2019 4:43:59 PM PDT Abby Spurdle wrote:
> > 
> >> contains an array of question marks, which
> >> isn't helpful.
> >>
> >>
> >>
> >> Would it be possible for the print method for both matrices and arrays
> >> (conditional on having a list type), call the format method for each
> >> object, possibly creating a character matrix?
> >> Presumably there are other approaches, but the main thing is that the
> >> output is useful and it's easy for R users to control the way objects
> >> (in
> >> matrices and arrays) are printed.
> >>
> >>
> >>
> >>> Or is there any other place that I can override without introducing a
> >>> new
> >>
> >>
> >>
> >> S3 class?
> >>
> >>
> >>
> >> In theory, the simplest approach is to redefine the print method for
> >> matrices.
> >> However, that would be unacceptable in a CRAN package, probably...
> >>
> >>
> >>
> >> So, unless R Core change the print method, you may have to create a
> >> matrix
> >> subclass.
> > 
> > 
> > ______________________________________________
> > R-devel at r-project.org mailing list
> > https://urldefense.proofpoint.com/v2/url?u=https-3A__stat.ethz.ch_mailman_
> > listinfo_r-2Ddevel&d=DwIFAg&c=eRAMFD45gAfqt84VtBcfhQ&r=BK7q3XeAvimeWdGbWY_
> > wJYbW0WYiZvSXAJJKaaPhzWA&m=CFwIFXl8lv7HqmAdD6GKNJ6jlR0VRL1Ek1iGNO_suAk&s=M
> > hiq-DX7GTrcmqUFXKjuATvQy8Zs6op359DAMvOrois&e=
 
> 
> 
> -- 
> Herv? Pag?s
> 
> Program in Computational Biology
> Division of Public Health Sciences
> Fred Hutchinson Cancer Research Center
> 1100 Fairview Ave. N, M1-B514
> P.O. Box 19024
> Seattle, WA 98109-1024
> 
> E-mail: hpages at fredhutch.org
> Phone:  (206) 667-5791
> Fax:    (206) 667-1319


From m|ch@e|ch|r|co4 @end|ng |rom gm@||@com  Mon Jul  8 11:40:53 2019
From: m|ch@e|ch|r|co4 @end|ng |rom gm@||@com (Michael Chirico)
Date: Mon, 8 Jul 2019 17:40:53 +0800
Subject: [Rd] head.matrix can return 1000s of columns -- limit to n or add
 new argument?
Message-ID: <CAPRVBcxsAkcgr3mDc4skTe8DTxJaYe2xyhk3QMk3odW1MGcyNA@mail.gmail.com>

I think of head() as a standard helper for "glancing" at objects, so I'm
sometimes surprised that head() produces massive output:

M = matrix(nrow = 10L, ncol = 100000L)
print(head(M)) # <- beware, could be a huge print

I assume there are lots of backwards-compatibility issues as well as valid
use cases for this behavior, so I guess defaulting to M[1:6, 1:6] is out of
the question.

Is there any scope for adding a new argument to head.matrix that would
allow this flexibility? IINM it should essentially be as simple to do
head.array as:

do.call(`[`, c(list(x, drop = FALSE), lapply(pmin(dim(x), n), seq_len)))

(with extra decoration to handle -n, etc)

	[[alternative HTML version deleted]]


From bob @end|ng |rom rud@|@  Tue Jul  9 20:24:24 2019
From: bob @end|ng |rom rud@|@ (Bob Rudis)
Date: Tue, 9 Jul 2019 14:24:24 -0400
Subject: [Rd] Addition of a meta viewport tag to HTML manuals
Message-ID: <7FAF4E2F-6981-4CC0-98FB-7FCA96C2A9EF@rud.is>

The addition of a single line:

    <meta name="viewport" content="width=device-width, initial-scale=1.0">

at in the <head> of the R HTML generated manuals would make them much easier to read on mobile devices.

texi2any (which generates the HTML files) is based on long-working Perl code that includes many modern HTML elements but does not include this one.

A Perl one-liner in the install-html: Makefile directive in Makefile.in:

    install-html: installdirs
      @for f in $(OBJECTS_HTML); do \
        if test -f $${f} ; then \
          $(INSTALL_DATA) $${f} "$(DESTDIR)$(rdocdir)/manual"; \
          perl -pi -e 's/\<meta name="desc/<meta name="viewport" content="width=device-width, initial-scale=1.0">\n<meta name="desc/' "$(DESTDIR)$(rdocdir)/manual/*.html"; \
        fi \
      done

would insert this (I still need to read Makefile.win to see where it should go there) and I'd be glad to create a PR unless folks do not think better accessibility on mobile is a good idea.

$(PERL) does not seem to be defined but Perl itself is a requirement for texi2any so it is definitely something that would work in the current installation process. 

-Bob

From brod|e@g@@|@m @end|ng |rom y@hoo@com  Thu Jul 11 03:14:53 2019
From: brod|e@g@@|@m @end|ng |rom y@hoo@com (brodie gaslam)
Date: Thu, 11 Jul 2019 01:14:53 +0000 (UTC)
Subject: [Rd] Documentation tweak for ?traceback
References: <956558975.112344.1562807693093.ref@mail.yahoo.com>
Message-ID: <956558975.112344.1562807693093@mail.yahoo.com>

The addition of `.traceback` in r70207 adds one more function to the call stack when invoking `traceback()`.? This changes the output of one of the examples to include the error handler call:


> options(error = function() traceback(2))
> foo(2)
[1] 1
Error in bar(2) : object 'a.variable.which.does.not.exist' not found
3: (function () 
?? traceback(2))() at #1
2: bar(2) at #1
1: foo(2)

The attached trivial patch cleans up the example so that the above looks like it would have under r<70207.
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: traceback-docs-1.txt
URL: <https://stat.ethz.ch/pipermail/r-devel/attachments/20190711/90e0da30/attachment.txt>

From r@||@@tubner @end|ng |rom gm@||@com  Thu Jul 11 10:26:51 2019
From: r@||@@tubner @end|ng |rom gm@||@com (Ralf Stubner)
Date: Thu, 11 Jul 2019 10:26:51 +0200
Subject: [Rd] Integration with exchanged and infinite limits
Message-ID: <CAFQwRQyqwTz-bPi6aLTB0z7oGVY+HH6gXBqGBe9YCjFn-zYWsA@mail.gmail.com>

Dear List,

while working on an update to my post on integrating over an infinite
range using RcppNumerical [1] I have encountered erroneous behavior
from integrate() when (at least) one of the limits is infinite and
upper and lower limit are exchanged, i.e. upper < lower. For example,
integrating dnorm with upper > lower works without problems:

integrate(dnorm, 0.1, 1)
#> 0.3015169 with absolute error < 3.3e-15
integrate(dnorm, 0.1, 10)
#> 0.4601722 with absolute error < 6.2e-06
integrate(dnorm, 0.1, Inf)
#> 0.4601722 with absolute error < 2.7e-05

If we interchange the limits, we get the expected negative value of
the previous integrals as long as the limits are finite:

integrate(dnorm, 1, 0.1)
#> -0.3015169 with absolute error < 3.3e-15
integrate(dnorm, 10, 0.1)
#> -0.4601722 with absolute error < 6.2e-06

But when the lower limit is Inf, the returned value is incorrect:

integrate(dnorm, Inf, 0.1)
#> 0.5398278 with absolute error < 7.5e-05

Instead of the expected -0.4601722, it is the value one would get when
the lower limit were -Inf:

integrate(dnorm, -Inf, 0.1)
#> 0.5398278 with absolute error < 7.5e-05

Similar problems occur if the upper limit is -Inf. The reason seems to
be that integrate() assumes that if is.finite() is false for lower
then lower == -Inf (similarly for upper).

Should this be fixed?

Greetings
Ralf

[1] https://stubner.me/2019/07/numerical-integration-in-rcpp/


From d@rocz|g @end|ng |rom r@pporter@net  Thu Jul 11 23:48:47 2019
From: d@rocz|g @end|ng |rom r@pporter@net (=?UTF-8?Q?Gergely_Dar=C3=B3czi?=)
Date: Thu, 11 Jul 2019 23:48:47 +0200
Subject: [Rd] Determining the exit code of an "almost finished" R script
In-Reply-To: <2360288f-52fb-096b-beb7-f5252844b2a2@gmail.com>
References: <CAPvvxJUyDVV4xe5=zPJzWs=OeD0DtSw1iWFP90LNn1apu+VCQg@mail.gmail.com>
 <03638bde-bb9b-1e67-abc1-1ab66ff153f7@gmail.com>
 <CAPvvxJUteOKZfT+-uE+Cb+o-V24YP_LrVu4eWt=FYotenOZURw@mail.gmail.com>
 <2360288f-52fb-096b-beb7-f5252844b2a2@gmail.com>
Message-ID: <CAPvvxJXOePsZnsk=i6Q5QJRedVgjHVLincpRFPthz_UptZ0Yrw@mail.gmail.com>

Sorry for the late reply, it took a couple of iterations (and some
days off) to find a feasible solution without splitting the helper
function into two -- please see below if interested.

On Sat, Jun 8, 2019 at 6:50 PM Duncan Murdoch <murdoch.duncan at gmail.com> wrote:
>
> On 08/06/2019 9:55 a.m., Gergely Dar?czi wrote:
> > On Sat, Jun 8, 2019 at 2:13 PM Duncan Murdoch <murdoch.duncan at gmail.com> wrote:
> >>
> >> On 08/06/2019 7:42 a.m., Gergely Dar?czi wrote:
> >>> Dear All,
> >>>
> >>> I'm using "reg.finalizer" in a function that is to be called in R scripts
> >>> to do some cleanup on success. I have not found a way to run the function
> >>> only if the script run without errors, so when the exit code is expected to
> >>> be 0.
> >>>
> >>> What I've tried is checking "geterrmessage()", but unfortunately it's not
> >>> perfect: if an error was handled with eg "tryCatch" previously, that
> >>> message still shows up there.
> >>>
> >>> Is there any better way of figuring out in "reg.finalizer" or ".Last" if
> >>> the session run OK or exiting with !0 exit code?
> >>
> >> Can't you just put the line to run it as the last line of your script?
> >> You won't get there if there was an error.
> >
> > Thank you very much, Duncan, but unfortunately, that's not feasible.
> >
> > "reg.finalizer" is called from a function early in the script, which
> > function first checks when the same script last run and optionally
> > exists early.
>
> > If that optional early exit (within the helper function) doesn't
> > happen, then the "reg.finalizer" call sets a status update when the R
> > script has finished, but that should only happen if the script run
> > without any problems.
> >
> > Of course, this helper could be split into two -- (1) function call at
> > the beginning of the script and (2) another at the end, but it would
> > be much less elegant and error-prone.
> >
> > I know I'm trying to hack-in some features in my R scripts that should
> > be better handled by an external job scheduler, but I hope this is
> > doable.
>
> I still think you're using reg.finalizer() in a way it's not designed to
> work, and this makes it more complicated than necessary.  The strategy
> of splitting into two seems safer to me:  you never know when a
> finalizer will be called, because it is triggered by garbage
> collections, and those can happen asynchronously, not under your control.

Yes, you are absolutely right -- still, I really wanted to make this
work by calling only one function at the beginning of an R script
(actually, hundreds of R scripts and without an explicit R function
call, but doing that in a package's .onLoad function).

What I came up with is probably not too elegant ... and might have
some edge cases, but seems to do the trick, so thus turned out to be a
reasonable solution for now:
- overriding the default "error" option to set an env var
- check that env var at the end of the script via "reg.finalizer"
triggered on exit

Quick example:

```r
library(logger)

options(error = function() {
    Sys.setenv(R_ERROR_HAPPENED = TRUE)
    quit(status = 1)
})

reg.finalizer(e = environment(), f = function(...) {
    if (Sys.getenv('R_ERROR_HAPPENED') != '') {
        log_error(skip_formatter(paste('Seems like there was an error
previously:', geterrmessage())))
    } else {
        log_info('All good!')
    }
}, onexit = TRUE)

1 + dasf
```

>
> It is nice to have all code for some purpose in one place, so if you
> really want that, you could put together your own explicitly called
> finalizer, something like this:
>
>    finalizers <- list()
>
>    addFinalizer <- function(fn) {
>      finalizers <<- c(finalizers, list(fn))
>    }
>
>    runFinalizers <- function() {
>      for (i in rev(seq_along(finalizers))) { # Run in reverse order
>        finalizers[[i]]()       # Call the finalizer
>        finalizers[[i]] <- NULL # Allow related objects to be released
>      }
>    }
>
>
> In the place you now call reg.finalizer(), you call addFinalizer()
> instead; so all code specific to that task remains local.  At the end of
> your script if things have been successful, you call runFinalizers().
>
> Duncan Murdoch
>
>
>
>
>
> >
> >>
> >>
> >> The point of reg.finalizer is to run code even if there was an error;
> >> your situation is much simpler.
> >>
> >> Duncan Murdoch
>


From m@ech|er @end|ng |rom @t@t@m@th@ethz@ch  Fri Jul 12 07:20:20 2019
From: m@ech|er @end|ng |rom @t@t@m@th@ethz@ch (Martin Maechler)
Date: Fri, 12 Jul 2019 07:20:20 +0200
Subject: [Rd] Documentation tweak for ?traceback
In-Reply-To: <956558975.112344.1562807693093@mail.yahoo.com>
References: <956558975.112344.1562807693093.ref@mail.yahoo.com>
 <956558975.112344.1562807693093@mail.yahoo.com>
Message-ID: <23848.6292.209840.99178@stat.math.ethz.ch>

>>>>> brodie gaslam via R-devel 
>>>>>     on Thu, 11 Jul 2019 03:14:53 +0200 writes:

>    The addition of `.traceback` in r70207 adds one more function to the
   > call stack when invoking `traceback()`.  This changes the output of one
   > of the examples to include the error handler call:
   > > options(error = function() traceback(2))
   > > foo(2)
   > [1] 1
   > Error in bar(2) : object 'a.variable.which.does.not.exist' not found
   > 3: (function ()
   >    traceback(2))() at #1
   > 2: bar(2) at #1
   > 1: foo(2)
   > The attached trivial patch cleans up the example so that the above
   > looks like it would have under r<70207.

Indeed, thanks a lot, Brodie!
There was a bit more to change -- the options() setting
is also mentioned in the main text.

Committed to R-devel and R-patched now.

Martin Maechler
ETH Zurich and  R Core Team


From @zwj|08 @end|ng |rom gm@||@com  Fri Jul 12 19:22:22 2019
From: @zwj|08 @end|ng |rom gm@||@com (King Jiefei)
Date: Fri, 12 Jul 2019 13:22:22 -0400
Subject: [Rd] strange increase in the reference number
Message-ID: <CAGiFhPPT8UUjB0shOOfWZcNBwFiVWq68T=B23WhMJrVaQyY6Tg@mail.gmail.com>

Hi,

I just found a strange increase in the reference number and I'm wondering
if there is any reason for it, here is the code.

> a=c(1,2,3)
> .Internal(inspect(a))
@0x000000001bf0b9b0 14 REALSXP g0c3 [NAM(1)] (len=3, tl=0) 1,2,3
> is.vector(a)
[1] TRUE
> .Internal(inspect(a))
@0x000000001bf0b9b0 14 REALSXP g0c3 [NAM(7)] (len=3, tl=0) 1,2,3

The variable *a* initially has one reference number, after calling
*is.vector* function, the reference number goes to 7, which I believe is
the highest number that is allowed in R.  I also tried the other R
functions, *is.atomic, is.integer* and *is.numeric* do not increase the
reference number, but *typeof *will do. Is it intentional?

Best,
Jiefei

	[[alternative HTML version deleted]]


From murdoch@dunc@n @end|ng |rom gm@||@com  Fri Jul 12 20:47:22 2019
From: murdoch@dunc@n @end|ng |rom gm@||@com (Duncan Murdoch)
Date: Fri, 12 Jul 2019 14:47:22 -0400
Subject: [Rd] strange increase in the reference number
In-Reply-To: <CAGiFhPPT8UUjB0shOOfWZcNBwFiVWq68T=B23WhMJrVaQyY6Tg@mail.gmail.com>
References: <CAGiFhPPT8UUjB0shOOfWZcNBwFiVWq68T=B23WhMJrVaQyY6Tg@mail.gmail.com>
Message-ID: <f037fedf-5f42-12d7-547b-33d431e8ef9b@gmail.com>

On 12/07/2019 1:22 p.m., King Jiefei wrote:
> Hi,
> 
> I just found a strange increase in the reference number and I'm wondering
> if there is any reason for it, here is the code.
> 
>> a=c(1,2,3)
>> .Internal(inspect(a))
> @0x000000001bf0b9b0 14 REALSXP g0c3 [NAM(1)] (len=3, tl=0) 1,2,3
>> is.vector(a)
> [1] TRUE
>> .Internal(inspect(a))
> @0x000000001bf0b9b0 14 REALSXP g0c3 [NAM(7)] (len=3, tl=0) 1,2,3
> 
> The variable *a* initially has one reference number, after calling
> *is.vector* function, the reference number goes to 7, which I believe is
> the highest number that is allowed in R.  I also tried the other R
> functions, *is.atomic, is.integer* and *is.numeric* do not increase the
> reference number, but *typeof *will do. Is it intentional?

is.vector() is a closure that calls .Internal.  is.atomic(), 
is.integer() and is.numeric() are all primitives.

Generally speaking closures that call .Internal are easier to implement 
(e.g. is.vector can use the regular mechanism to set a default for its 
second argument), but less efficient in CPU time.  From it's help page, 
it appears that the logic for is.vector() is a lot more complex than for 
the others, so that implementation does make sense.

So why does NAMED go to 7?  Initially, the vector is bound to a.  Within 
is.vector, it is bound to the local variable x.  At this point there are 
two names bound to the same object, so it has to be considered 
immutable.  There's really no difference between any of the values of 2 
or more in the memory manager.  (But see 
http://developer.r-project.org/Refcnt.html for some plans.  That 
document is from about 5 years ago; I don't know the current state.)

Duncan Murdoch


From g@bembecker @end|ng |rom gm@||@com  Fri Jul 12 22:37:35 2019
From: g@bembecker @end|ng |rom gm@||@com (Gabriel Becker)
Date: Fri, 12 Jul 2019 13:37:35 -0700
Subject: [Rd] strange increase in the reference number
In-Reply-To: <f037fedf-5f42-12d7-547b-33d431e8ef9b@gmail.com>
References: <CAGiFhPPT8UUjB0shOOfWZcNBwFiVWq68T=B23WhMJrVaQyY6Tg@mail.gmail.com>
 <f037fedf-5f42-12d7-547b-33d431e8ef9b@gmail.com>
Message-ID: <CAD4oTHHpMDLyONhKyTZcULG_2CpRH_PDZKB8VkSB3+2uhz-cKw@mail.gmail.com>

Hi Jiefei and Duncan,

I suspect what is likely happening is that one of  ENSURE_NAMEDMAX or
MARK_NOT_MUTABLE are being hit for x. These used to set named to 3, but now
set it to 7 (ie the previous and current NAMEDMAX  value, respectively).

Because these are macros rather than C functions, its not easy to figure
out why one of them is being invoked from do_isvector  (a cursory
exploration didn't reveal what was going on, at least to me) and I don't
have the time to dig super deeply into this right now,  but perhaps Luke or
Tomas know why this is happening of the top of their head.

Sorry I can't be of more help.

~G



On Fri, Jul 12, 2019 at 11:47 AM Duncan Murdoch <murdoch.duncan at gmail.com>
wrote:

> On 12/07/2019 1:22 p.m., King Jiefei wrote:
> > Hi,
> >
> > I just found a strange increase in the reference number and I'm wondering
> > if there is any reason for it, here is the code.
> >
> >> a=c(1,2,3)
> >> .Internal(inspect(a))
> > @0x000000001bf0b9b0 14 REALSXP g0c3 [NAM(1)] (len=3, tl=0) 1,2,3
> >> is.vector(a)
> > [1] TRUE
> >> .Internal(inspect(a))
> > @0x000000001bf0b9b0 14 REALSXP g0c3 [NAM(7)] (len=3, tl=0) 1,2,3
> >
> > The variable *a* initially has one reference number, after calling
> > *is.vector* function, the reference number goes to 7, which I believe is
> > the highest number that is allowed in R.  I also tried the other R
> > functions, *is.atomic, is.integer* and *is.numeric* do not increase the
> > reference number, but *typeof *will do. Is it intentional?
>
> is.vector() is a closure that calls .Internal.  is.atomic(),
> is.integer() and is.numeric() are all primitives.
>
> Generally speaking closures that call .Internal are easier to implement
> (e.g. is.vector can use the regular mechanism to set a default for its
> second argument), but less efficient in CPU time.  From it's help page,
> it appears that the logic for is.vector() is a lot more complex than for
> the others, so that implementation does make sense.
>
> So why does NAMED go to 7?  Initially, the vector is bound to a.  Within
> is.vector, it is bound to the local variable x.  At this point there are
> two names bound to the same object, so it has to be considered
> immutable.  There's really no difference between any of the values of 2
> or more in the memory manager.  (But see
> http://developer.r-project.org/Refcnt.html for some plans.  That
> document is from about 5 years ago; I don't know the current state.)
>
> Duncan Murdoch
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>

	[[alternative HTML version deleted]]


From @purd|e@@ @end|ng |rom gm@||@com  Sat Jul 13 01:03:07 2019
From: @purd|e@@ @end|ng |rom gm@||@com (Abby Spurdle)
Date: Sat, 13 Jul 2019 11:03:07 +1200
Subject: [Rd] 
 head.matrix can return 1000s of columns -- limit to n or add
 new argument?
In-Reply-To: <CAPRVBcxsAkcgr3mDc4skTe8DTxJaYe2xyhk3QMk3odW1MGcyNA@mail.gmail.com>
References: <CAPRVBcxsAkcgr3mDc4skTe8DTxJaYe2xyhk3QMk3odW1MGcyNA@mail.gmail.com>
Message-ID: <CAB8pepxS2mRtd+522OwjixnM6ZjYxb+X0dc4vMGn6QxdFYBmVQ@mail.gmail.com>

> I assume there are lots of backwards-compatibility issues as well as valid
> use cases for this behavior, so I guess defaulting to M[1:6, 1:6] is out
of
> the question.

Agree.

> Is there any scope for adding a new argument to head.matrix that would
> allow this flexibility?

I agree with what you're trying to achieve.
However, I'm not sure this is as simple as you're suggesting.

What if the user wants "head" in rows but "tail" in columns.
Or "head" in rows, and both "head" and "tail" in columns.
With head and tail alone, there's a combinatorial explosion.

Also, when using tail on an unnamed matrix, it may be desirable to name
rows and columns.

And all of this assumes standard matrix objects.
Add in a matrix subclasses and related objects, and things get more complex
still.

As I suggested in a another thread, a few days ago, I'm planning to write
an R package for matrices and matrix-like objects (possibly extending the
Matrix package), with an initial emphasis on subsetting, printing and
formatting.
So, I'm interested to hear more suggestions on this topic.

	[[alternative HTML version deleted]]


From g@bembecker @end|ng |rom gm@||@com  Sat Jul 13 02:35:05 2019
From: g@bembecker @end|ng |rom gm@||@com (Gabriel Becker)
Date: Fri, 12 Jul 2019 17:35:05 -0700
Subject: [Rd] 
 head.matrix can return 1000s of columns -- limit to n or add
 new argument?
In-Reply-To: <CAB8pepxS2mRtd+522OwjixnM6ZjYxb+X0dc4vMGn6QxdFYBmVQ@mail.gmail.com>
References: <CAPRVBcxsAkcgr3mDc4skTe8DTxJaYe2xyhk3QMk3odW1MGcyNA@mail.gmail.com>
 <CAB8pepxS2mRtd+522OwjixnM6ZjYxb+X0dc4vMGn6QxdFYBmVQ@mail.gmail.com>
Message-ID: <CAD4oTHH=LpeEj6h6xYdOGsreS-GDCGdgJV5wpaUR3Pjuh5_M1w@mail.gmail.com>

Hi Michael and Abby,

So one thing that could happen that would be backwards compatible (with the
exception of something that was an error no longer being an error) is head
and tail could take vectors of length (dim(x)) rather than integers of
length for n, with the default being n=6 being equivalent to n = c(6,
dim(x)[2], <...>, dim(x)[k]), at least for the deprecation cycle, if not
permanently. It not recycling would be unexpected based on the behavior of
many R functions but would preserve the current behavior while granting
more fine-grained control to users that feel they need it.

A rapidly thrown-together prototype of such a method for the head of a
matrix case is as follows:

head2 = function(x, n = 6L, ...) {
    indvecs = lapply(seq_along(dim(x)), function(i) {
        if(length(n) >= i) {
            ni = n[i]
        } else {
            ni =  dim(x)[i]
        }
        if(ni < 0L)
            ni = max(nrow(x) + ni, 0L)
        else
            ni = min(ni, dim(x)[i])
        seq_len(ni)
    })
    lstargs = c(list(x),indvecs, drop = FALSE)
    do.call("[", lstargs)
}


> mat = matrix(1:100, 10, 10)

> *head(mat)*

     [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10]

[1,]    1   11   21   31   41   51   61   71   81    91

[2,]    2   12   22   32   42   52   62   72   82    92

[3,]    3   13   23   33   43   53   63   73   83    93

[4,]    4   14   24   34   44   54   64   74   84    94

[5,]    5   15   25   35   45   55   65   75   85    95

[6,]    6   16   26   36   46   56   66   76   86    96

> *head2(mat)*

     [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10]

[1,]    1   11   21   31   41   51   61   71   81    91

[2,]    2   12   22   32   42   52   62   72   82    92

[3,]    3   13   23   33   43   53   63   73   83    93

[4,]    4   14   24   34   44   54   64   74   84    94

[5,]    5   15   25   35   45   55   65   75   85    95

[6,]    6   16   26   36   46   56   66   76   86    96

> *head2(mat, c(2, 3))*

     [,1] [,2] [,3]

[1,]    1   11   21

[2,]    2   12   22

> *head2(mat, c(2, -9))*

     [,1]

[1,]    1

[2,]    2


Now one thing to keep in mind here, is that I think we'd  either a) have to
make the non-recycling  behavior permanent, or b) have head treat
data.frames and matrices different with respect to the subsets they grab
(which strikes me as a  *Bad Plan *(tm)).

So I don't think the default behavior would ever be mat[1:6, 1:6],  not
because of backwards compatibility, but because at least in my intuition
that is just not what head on a data.frame should do by default, and I
think the behaviors for the basic rectangular datatypes should "stick
together". I mean, also because of backwards compatibility, but that could  *in
theory* change across a long enough deprecation cycle, but  the
conceptually right thing to do with a data.frame probably won't.

All of that said, is head(mat, c(6, 6)) really that much  easier to
type/better than just mat[1:6, 1:6, drop=FALSE] (I know this will behave
differently if any of the dims of mat are less than 6, but if so why are
you heading it in the first place ;) )? I don't really have a strong
feeling on the answer to that.

I'm happy to put a patch for head.matrix, head.data.frame, tail.matrix and
tail.data.frame, plus documentation, if people on R-core are interested in
this.

Note, as most here probably know, and as alluded to above,  length(n) > 1
for head or tail currently give an error, so  this would  be an extension
of the existing functionality in the mathematical extension sense, where
all existing behavior would remain identical, but the support/valid
parameter space would grow.

Best,
~G


On Fri, Jul 12, 2019 at 4:03 PM Abby Spurdle <spurdle.a at gmail.com> wrote:

> > I assume there are lots of backwards-compatibility issues as well as
> valid
> > use cases for this behavior, so I guess defaulting to M[1:6, 1:6] is out
> of
> > the question.
>
> Agree.
>
> > Is there any scope for adding a new argument to head.matrix that would
> > allow this flexibility?
>
> I agree with what you're trying to achieve.
> However, I'm not sure this is as simple as you're suggesting.
>
> What if the user wants "head" in rows but "tail" in columns.
> Or "head" in rows, and both "head" and "tail" in columns.
> With head and tail alone, there's a combinatorial explosion.
>
> Also, when using tail on an unnamed matrix, it may be desirable to name
> rows and columns.
>
> And all of this assumes standard matrix objects.
> Add in a matrix subclasses and related objects, and things get more complex
> still.
>
> As I suggested in a another thread, a few days ago, I'm planning to write
> an R package for matrices and matrix-like objects (possibly extending the
> Matrix package), with an initial emphasis on subsetting, printing and
> formatting.
> So, I'm interested to hear more suggestions on this topic.
>
>         [[alternative HTML version deleted]]
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>

	[[alternative HTML version deleted]]


From brod|e@g@@|@m @end|ng |rom y@hoo@com  Sat Jul 13 19:31:44 2019
From: brod|e@g@@|@m @end|ng |rom y@hoo@com (brodie gaslam)
Date: Sat, 13 Jul 2019 17:31:44 +0000 (UTC)
Subject: [Rd] Mitigating Stalls Caused by Call Deparse on Error
References: <1095250181.1426568.1563039104421.ref@mail.yahoo.com>
Message-ID: <1095250181.1426568.1563039104421@mail.yahoo.com>

When large calls cause errors R may stall for extended periods.? This
is particularly likely to happen with `do.call`, as in this example 
with a 24 second stall:

??? x <- runif(1e7)
??? system.time(do.call(paste0, list(abs, x)))? # intentional error
??? ## Error in (function (..., collapse = NULL)? : 
??? ##?? cannot coerce type 'builtin' to vector of type 'character'
??? ## Calls: system.time -> do.call -> <Anonymous>
??? ## Timing stopped at: 23.81 0.149 24.04

??? str(.Traceback)
??? ## Dotted pair list of 3
??? ##? $ : chr [1:2500488] "(function (..., collapse = NULL) " ".Internal(paste0(list(...), collapse)))(.Primitive(\"abs\"), c(0.718117154669017, " "0.494785501621664, 0.1453434410505, 0.635028422810137, 0.0353180423844606, " "0.688418723642826, 0.889682895969599, 0.728154224809259, 0.292572240810841, " ...
??? ##? $ : chr "do.call(paste0, list(abs, x))"
??? ##? $ : chr "system.time(do.call(paste0, list(abs, x)))"

The first time I noticed this I thought my session had frozen/crashed
as the standard interrupt ^C does not work during the deparse.? The
stall happens when on error the call stack is deparsed prior to being
saved to `.Traceback`.? The deparsing is done by `deparse1m` in native
code, with the value of `getOption('deparse.max.lines')` which
defaults to all lines.

Since there is little value to seeing millions of lines of deparsed
objects in `traceback()`, a simple work-around is to change the
`deparse.max.lines` value:

??? options(deparse.max.lines=1)
??? system.time(do.call(paste0, list(abs, x)))
??? ## Error in (function (..., collapse = NULL)? : 
??? ##?? cannot coerce type 'builtin' to vector of type 'character'
??? ## Calls: system.time -> do.call -> <Anonymous>
??? ## Timing stopped at: 0 0 0

Unfortunately this will affect all `deparse` calls, and it seems
undesirable to pre-emptively enable it just for calls that might cause
large deparses on error.

An alternative is to store the actual calls instead of their deparsed
character equivalents in `.Traceback`.? This defers the deparsing to 
when `traceback()` is used.? As per `?traceback`, it should be
relatively safe to modify `.Traceback` in this way:

> It is undocumented where .Traceback is stored nor that it is
> visible, and this is subject to change.

Deferring the deparsing to `traceback()` will give us the?
opportunity to use a different `max.lines` setting as we do here 
with the patch applied:

??? system.time(do.call(paste0, list(abs, x)))
??? ## Error in (function (..., collapse = NULL)? : 
??? ##?? cannot coerce type 'builtin' to vector of type 'character'
??? ## Timing stopped at: 0.028 0 0.029

??? system.time(traceback(max.lines=3))
??? ## 3: (function (..., collapse = NULL) 
??? ##??? .Internal(paste0(list(...), collapse)))(.Primitive("abs"), c(0.535468587651849, 
??? ##??? 0.0540027911774814, 0.732930393889546, 0.565360915614292, 0.544816034380347, 
??? ##???? ...
??? ## 2: do.call(paste0, list(abs, x))
??? ## 1: system.time(do.call(paste0, list(abs, x)))
??? ##??? user? system elapsed 
??? ##?? 0.000?? 0.000?? 0.003 


More generally, it might be better to have a different smaller default
value for the lines to deparse when calls? are _displayed_ as parts of 
lists, as is the case with `traceback()`, or in `print(sys.calls())` and
similar.

I attach a patch that does this.? I have run some basic tests 
and `make check-devel` passes. I can file an issue on bugzilla 
if that is a better place to have this conversation (assuming there 
is interest in it).

Best,

Brodie

PS: for some reason my mail client is refusing to attach the patch so I paste it
starting on the next line.
Index: src/gnuwin32/Rdll.hide
===================================================================
--- src/gnuwin32/Rdll.hide?? ?(revision 76827)
+++ src/gnuwin32/Rdll.hide?? ?(working copy)
@@ -94,6 +94,7 @@
? R_GetMaxNSize
? R_GetMaxVSize
? R_GetTraceback
+ R_GetTracebackParsed
? R_GetVarLocSymbol
? R_GetVarLocValue
? R_HandlerStack
Index: src/include/Defn.h
===================================================================
--- src/include/Defn.h?? ?(revision 76827)
+++ src/include/Defn.h?? ?(working copy)
@@ -1296,6 +1296,7 @@
?void NORET ErrorMessage(SEXP, int, ...);
?void WarningMessage(SEXP, R_WARNING, ...);
?SEXP R_GetTraceback(int);
+SEXP R_GetTracebackParsed(int);
?
?R_size_t R_GetMaxVSize(void);
?void R_SetMaxVSize(R_size_t);
Index: src/library/base/R/traceback.R
===================================================================
--- src/library/base/R/traceback.R?? ?(revision 76827)
+++ src/library/base/R/traceback.R?? ?(working copy)
@@ -16,9 +16,19 @@
?#? A copy of the GNU General Public License is available at
?#? https://www.R-project.org/Licenses/
?
-.traceback <- function(x = NULL) {
-??? if(is.null(x) && !is.null(x <- get0(".Traceback", envir = baseenv())))
-?? ?{}
+.traceback <- function(x = NULL, max.lines=getOption("deparse.max.lines")) {
+??? if(!(is.numeric(max.lines) && !is.na(max.lines) &&
+???????? as.integer(max.lines) > 0L)
+??? ) {
+??????? max.lines <- -1L
+??? }
+??? if(is.null(x) && !is.null(x <- get0(".Traceback", envir = baseenv()))) {
+??????? for(i in seq_along(x)) {
+??????????? srcref <- attr(x[[i]], 'srcref')
+??????????? x[[i]] <- deparse(x[[i]], nlines=max.lines)
+??????????? attr(x[[i]], 'srcref') <- srcref
+??????? }
+??? }
???? else if (is.numeric(x))
??? ??? ?x <- .Internal(traceback(x))
???? x
@@ -26,7 +36,16 @@
?
?traceback <- function(x = NULL, max.lines = getOption("deparse.max.lines"))
?{
-??? n <- length(x <- .traceback(x))
+??? valid.max.lines <- is.numeric(max.lines) && !is.na(max.lines) &&
+???????? as.integer(max.lines) > 0L
+
+??? if(valid.max.lines) {
+??????? # max.lines + 1L so we can know that output was truncated by .traceback
+??????? max.lines.2 <- as.integer(max.lines) + 1L
+??? } else {
+??????? max.lines.2 <- -1L
+??? }
+??? n <- length(x <- .traceback(x, max.lines=max.lines.2))
???? if(n == 0L)
???????? cat(gettext("No traceback available"), "\n")
???? else {
@@ -40,7 +59,7 @@
???????????????? paste0(" at ", basename(srcfile$filename), "#", srcref[1L])
???????????? }
???????????? ## Truncate deparsed code (destroys attributes of xi)
-??????????? if(is.numeric(max.lines) && max.lines > 0L && max.lines < m) {
+??????????? if(valid.max.lines &&? max.lines < m) {
???????????????? xi <- c(xi[seq_len(max.lines)], " ...")
???????????????? m <- length(xi)
???????????? }
Index: src/library/base/man/traceback.Rd
===================================================================
--- src/library/base/man/traceback.Rd?? ?(revision 76827)
+++ src/library/base/man/traceback.Rd?? ?(working copy)
@@ -21,7 +21,7 @@
?}
?\usage{
?traceback(x = NULL, max.lines = getOption("deparse.max.lines"))
-.traceback(x = NULL)
+.traceback(x = NULL, max.lines = getOption("deparse.max.lines"))
?}
?\arguments{
?? \item{x}{\code{NULL} (default, meaning \code{.Traceback}), or an
Index: src/main/errors.c
===================================================================
--- src/main/errors.c?? ?(revision 76827)
+++ src/main/errors.c?? ?(working copy)
@@ -1008,7 +1008,7 @@
??? ??? (which should not happen) */
??? ?if (traceback && inError < 2 && inError == oldInError) {
??? ???? inError = 2;
-?? ???? PROTECT(s = R_GetTraceback(0));
+?? ???? PROTECT(s = R_GetTracebackParsed(0));
??? ???? SET_SYMVALUE(install(".Traceback"), s);
??? ???? /* should have been defineVar
??? ??????? setVar(install(".Traceback"), s, R_GlobalEnv); */
@@ -1440,9 +1440,11 @@
??? ?PrintWarnings();
???? }
?}
-
+/*
+ * Return the traceback without deparsing the calls
+ */
?attribute_hidden
-SEXP R_GetTraceback(int skip)
+SEXP R_GetTracebackParsed(int skip)
?{
???? int nback = 0, ns;
???? RCNTXT *c;
@@ -1467,7 +1469,9 @@
??? ???? if (skip > 0)
??? ??? ?skip--;
??? ???? else {
-?? ??? ?SETCAR(t, deparse1m(c->call, 0, DEFAULTDEPARSE));
+??????????????? // Extra paranoid PROTECTS
+?? ??? ?SETCAR(t, PROTECT(duplicate(c->call)));
+??????????????? UNPROTECT(1);
??? ??? ?if (c->srcref && !isNull(c->srcref)) {
??? ??? ???? SEXP sref;
??? ??? ???? if (c->srcref == R_InBCInterpreter)
@@ -1482,7 +1486,26 @@
???? UNPROTECT(1);
???? return s;
?}
+/*
+ * Return the traceback with calls deparsed
+ */
+attribute_hidden
+SEXP R_GetTraceback(int skip)
+{
+??? int nback = 0;
+??? SEXP s, t, u, v;
+??? s = PROTECT(R_GetTracebackParsed(skip));
+??? for(t = s; t != R_NilValue; t = CDR(t)) nback++;
+??? u = v = PROTECT(allocList(nback));
?
+??? for(t = s; t != R_NilValue; t = CDR(t), v=CDR(v)) {
+??????? SETCAR(v, PROTECT(deparse1m(CAR(t), 0, DEFAULTDEPARSE)));
+??????? UNPROTECT(1);
+??? }
+??? UNPROTECT(1);
+??? return u;
+}
+
?SEXP attribute_hidden do_traceback(SEXP call, SEXP op, SEXP args, SEXP rho)
?{
???? int skip;


From brod|e@g@@|@m @end|ng |rom y@hoo@com  Sat Jul 13 19:42:50 2019
From: brod|e@g@@|@m @end|ng |rom y@hoo@com (brodie gaslam)
Date: Sat, 13 Jul 2019 17:42:50 +0000 (UTC)
Subject: [Rd] strange increase in the reference number
In-Reply-To: <f037fedf-5f42-12d7-547b-33d431e8ef9b@gmail.com>
References: <CAGiFhPPT8UUjB0shOOfWZcNBwFiVWq68T=B23WhMJrVaQyY6Tg@mail.gmail.com>
 <f037fedf-5f42-12d7-547b-33d431e8ef9b@gmail.com>
Message-ID: <1501215335.1402454.1563039770718@mail.yahoo.com>

 If you would like more details I wrote about this recently:
https://www.brodieg.com/2019/02/18/an-unofficial-reference-for-internal-inspect/
Basically as soon as you hit a closure R assumes that theargument might still have a surviving reference to iteven after the closure evaluation ends because theclosure environment still exists.? This is why thenamed count is set to the maximum value.

Note that since the time I wrote the above andnow the maximum reference count changed to 7 from 3.? Atsome point I believe there was a plan to add true(er?)reference counting in 3.6 to but that was not quiteready in time.

    On Friday, July 12, 2019, 2:47:41 PM EDT, Duncan Murdoch <murdoch.duncan at gmail.com> wrote:  
 
 On 12/07/2019 1:22 p.m., King Jiefei wrote:
> Hi,
> 
> I just found a strange increase in the reference number and I'm wondering
> if there is any reason for it, here is the code.
> 
>> a=c(1,2,3)
>> .Internal(inspect(a))
> @0x000000001bf0b9b0 14 REALSXP g0c3 [NAM(1)] (len=3, tl=0) 1,2,3
>> is.vector(a)
> [1] TRUE
>> .Internal(inspect(a))
> @0x000000001bf0b9b0 14 REALSXP g0c3 [NAM(7)] (len=3, tl=0) 1,2,3
> 
> The variable *a* initially has one reference number, after calling
> *is.vector* function, the reference number goes to 7, which I believe is
> the highest number that is allowed in R.? I also tried the other R
> functions, *is.atomic, is.integer* and *is.numeric* do not increase the
> reference number, but *typeof *will do. Is it intentional?

is.vector() is a closure that calls .Internal.? is.atomic(), 
is.integer() and is.numeric() are all primitives.

Generally speaking closures that call .Internal are easier to implement 
(e.g. is.vector can use the regular mechanism to set a default for its 
second argument), but less efficient in CPU time.? From it's help page, 
it appears that the logic for is.vector() is a lot more complex than for 
the others, so that implementation does make sense.

So why does NAMED go to 7?? Initially, the vector is bound to a.? Within 
is.vector, it is bound to the local variable x.? At this point there are 
two names bound to the same object, so it has to be considered 
immutable.? There's really no difference between any of the values of 2 
or more in the memory manager.? (But see 
http://developer.r-project.org/Refcnt.html for some plans.? That 
document is from about 5 years ago; I don't know the current state.)

Duncan Murdoch

______________________________________________
R-devel at r-project.org mailing list
https://stat.ethz.ch/mailman/listinfo/r-devel
  
	[[alternative HTML version deleted]]


From brod|e@g@@|@m @end|ng |rom y@hoo@com  Sat Jul 13 20:19:30 2019
From: brod|e@g@@|@m @end|ng |rom y@hoo@com (brodie gaslam)
Date: Sat, 13 Jul 2019 18:19:30 +0000 (UTC)
Subject: [Rd] strange increase in the reference number
In-Reply-To: <CAD4oTHHpMDLyONhKyTZcULG_2CpRH_PDZKB8VkSB3+2uhz-cKw@mail.gmail.com>
References: <CAGiFhPPT8UUjB0shOOfWZcNBwFiVWq68T=B23WhMJrVaQyY6Tg@mail.gmail.com>
 <f037fedf-5f42-12d7-547b-33d431e8ef9b@gmail.com>
 <CAD4oTHHpMDLyONhKyTZcULG_2CpRH_PDZKB8VkSB3+2uhz-cKw@mail.gmail.com>
Message-ID: <1560340370.1405063.1563041970724@mail.yahoo.com>

Re ENSURE_NAMEDMAX, I am unsure but think this happens in (src/eval.c at 492):
 static SEXP forcePromise(SEXP e)
{
??? if (PRVALUE(e) == R_UnboundValue) {
??? /* ... SNIP ...*/
??? val = eval(PRCODE(e), PRENV(e));
??? /* ... SNIP ...*/
??? SET_PRSEEN(e, 0);
?? ?SET_PRVALUE(e, val);
?? ?ENSURE_NAMEDMAX(val);???????????????? <<<<<<< HERE
?? ?SET_PRENV(e, R_NilValue);
??? }
??? return PRVALUE(e);
}

as part of the evaluations of the closure.? `forcePromise` is called ineval (src/eval.c at 656).? It's been a while since I've looked at the mechanicsof how the native version of `eval` works so I could be completely wrong.

B.

PS: line references are in r-devel at 76287.


On Friday, July 12, 2019, 4:38:06 PM EDT, Gabriel Becker <gabembecker at gmail.com> wrote: 





Hi Jiefei and Duncan,

I suspect what is likely happening is that one of? ENSURE_NAMEDMAX or
MARK_NOT_MUTABLE are being hit for x. These used to set named to 3, but now
set it to 7 (ie the previous and current NAMEDMAX? value, respectively).

Because these are macros rather than C functions, its not easy to figure
out why one of them is being invoked from do_isvector? (a cursory
exploration didn't reveal what was going on, at least to me) and I don't
have the time to dig super deeply into this right now,? but perhaps Luke or
Tomas know why this is happening of the top of their head.

Sorry I can't be of more help.

~G



On Fri, Jul 12, 2019 at 11:47 AM Duncan Murdoch <murdoch.duncan at gmail.com>
wrote:

> On 12/07/2019 1:22 p.m., King Jiefei wrote:
> > Hi,
> >
> > I just found a strange increase in the reference number and I'm wondering
> > if there is any reason for it, here is the code.
> >
> >> a=c(1,2,3)
> >> .Internal(inspect(a))
> > @0x000000001bf0b9b0 14 REALSXP g0c3 [NAM(1)] (len=3, tl=0) 1,2,3
> >> is.vector(a)
> > [1] TRUE
> >> .Internal(inspect(a))
> > @0x000000001bf0b9b0 14 REALSXP g0c3 [NAM(7)] (len=3, tl=0) 1,2,3
> >
> > The variable *a* initially has one reference number, after calling
> > *is.vector* function, the reference number goes to 7, which I believe is
> > the highest number that is allowed in R.? I also tried the other R
> > functions, *is.atomic, is.integer* and *is.numeric* do not increase the
> > reference number, but *typeof *will do. Is it intentional?
>
> is.vector() is a closure that calls .Internal.? is.atomic(),
> is.integer() and is.numeric() are all primitives.
>
> Generally speaking closures that call .Internal are easier to implement
> (e.g. is.vector can use the regular mechanism to set a default for its
> second argument), but less efficient in CPU time.? From it's help page,
> it appears that the logic for is.vector() is a lot more complex than for
> the others, so that implementation does make sense.
>
> So why does NAMED go to 7?? Initially, the vector is bound to a.? Within
> is.vector, it is bound to the local variable x.? At this point there are
> two names bound to the same object, so it has to be considered
> immutable.? There's really no difference between any of the values of 2
> or more in the memory manager.? (But see
> http://developer.r-project.org/Refcnt.html for some plans.? That
> document is from about 5 years ago; I don't know the current state.)
>
> Duncan Murdoch
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>

??? [[alternative HTML version deleted]]


______________________________________________
R-devel at r-project.org mailing list
https://stat.ethz.ch/mailman/listinfo/r-devel
	[[alternative HTML version deleted]]


From |uke-t|erney @end|ng |rom u|ow@@edu  Sun Jul 14 14:52:42 2019
From: |uke-t|erney @end|ng |rom u|ow@@edu (Tierney, Luke)
Date: Sun, 14 Jul 2019 12:52:42 +0000
Subject: [Rd] 
 [External]  Mitigating Stalls Caused by Call Deparse on Error
In-Reply-To: <1095250181.1426568.1563039104421@mail.yahoo.com>
References: <1095250181.1426568.1563039104421.ref@mail.yahoo.com>
 <1095250181.1426568.1563039104421@mail.yahoo.com>
Message-ID: <alpine.DEB.2.21.1907140747160.5519@luke-Latitude-7480>

This is probably best viewed in the context of other issue with
displaying calls, such as issues arising from calls constructed in
non-standard evaluation contexts. Might be good to move to a wishlist
item in bugzilla.

Best,

luke

On Sat, 13 Jul 2019, brodie gaslam via R-devel wrote:

> When large calls cause errors R may stall for extended periods.? This
> is particularly likely to happen with `do.call`, as in this example
> with a 24 second stall:
>
> ??? x <- runif(1e7)
> ??? system.time(do.call(paste0, list(abs, x)))? # intentional error
> ??? ## Error in (function (..., collapse = NULL)? :
> ??? ##?? cannot coerce type 'builtin' to vector of type 'character'
> ??? ## Calls: system.time -> do.call -> <Anonymous>
> ??? ## Timing stopped at: 23.81 0.149 24.04
>
> ??? str(.Traceback)
> ??? ## Dotted pair list of 3
> ??? ##? $ : chr [1:2500488] "(function (..., collapse = NULL) " ".Internal(paste0(list(...), collapse)))(.Primitive(\"abs\"), c(0.718117154669017, " "0.494785501621664, 0.1453434410505, 0.635028422810137, 0.0353180423844606, " "0.688418723642826, 0.889682895969599, 0.728154224809259, 0.292572240810841, " ...
> ??? ##? $ : chr "do.call(paste0, list(abs, x))"
> ??? ##? $ : chr "system.time(do.call(paste0, list(abs, x)))"
>
> The first time I noticed this I thought my session had frozen/crashed
> as the standard interrupt ^C does not work during the deparse.? The
> stall happens when on error the call stack is deparsed prior to being
> saved to `.Traceback`.? The deparsing is done by `deparse1m` in native
> code, with the value of `getOption('deparse.max.lines')` which
> defaults to all lines.
>
> Since there is little value to seeing millions of lines of deparsed
> objects in `traceback()`, a simple work-around is to change the
> `deparse.max.lines` value:
>
> ??? options(deparse.max.lines=1)
> ??? system.time(do.call(paste0, list(abs, x)))
> ??? ## Error in (function (..., collapse = NULL)? :
> ??? ##?? cannot coerce type 'builtin' to vector of type 'character'
> ??? ## Calls: system.time -> do.call -> <Anonymous>
> ??? ## Timing stopped at: 0 0 0
>
> Unfortunately this will affect all `deparse` calls, and it seems
> undesirable to pre-emptively enable it just for calls that might cause
> large deparses on error.
>
> An alternative is to store the actual calls instead of their deparsed
> character equivalents in `.Traceback`.? This defers the deparsing to
> when `traceback()` is used.? As per `?traceback`, it should be
> relatively safe to modify `.Traceback` in this way:
>
>> It is undocumented where .Traceback is stored nor that it is
>> visible, and this is subject to change.
>
> Deferring the deparsing to `traceback()` will give us the?
> opportunity to use a different `max.lines` setting as we do here
> with the patch applied:
>
> ??? system.time(do.call(paste0, list(abs, x)))
> ??? ## Error in (function (..., collapse = NULL)? :
> ??? ##?? cannot coerce type 'builtin' to vector of type 'character'
> ??? ## Timing stopped at: 0.028 0 0.029
>
> ??? system.time(traceback(max.lines=3))
> ??? ## 3: (function (..., collapse = NULL)
> ??? ##??? .Internal(paste0(list(...), collapse)))(.Primitive("abs"), c(0.535468587651849,
> ??? ##??? 0.0540027911774814, 0.732930393889546, 0.565360915614292, 0.544816034380347,
> ??? ##???? ...
> ??? ## 2: do.call(paste0, list(abs, x))
> ??? ## 1: system.time(do.call(paste0, list(abs, x)))
> ??? ##??? user? system elapsed
> ??? ##?? 0.000?? 0.000?? 0.003
>
>
> More generally, it might be better to have a different smaller default
> value for the lines to deparse when calls? are _displayed_ as parts of
> lists, as is the case with `traceback()`, or in `print(sys.calls())` and
> similar.
>
> I attach a patch that does this.? I have run some basic tests
> and `make check-devel` passes. I can file an issue on bugzilla
> if that is a better place to have this conversation (assuming there
> is interest in it).
>
> Best,
>
> Brodie
>
> PS: for some reason my mail client is refusing to attach the patch so I paste it
> starting on the next line.
> Index: src/gnuwin32/Rdll.hide
> ===================================================================
> --- src/gnuwin32/Rdll.hide?? ?(revision 76827)
> +++ src/gnuwin32/Rdll.hide?? ?(working copy)
> @@ -94,6 +94,7 @@
> ? R_GetMaxNSize
> ? R_GetMaxVSize
> ? R_GetTraceback
> + R_GetTracebackParsed
> ? R_GetVarLocSymbol
> ? R_GetVarLocValue
> ? R_HandlerStack
> Index: src/include/Defn.h
> ===================================================================
> --- src/include/Defn.h?? ?(revision 76827)
> +++ src/include/Defn.h?? ?(working copy)
> @@ -1296,6 +1296,7 @@
> ?void NORET ErrorMessage(SEXP, int, ...);
> ?void WarningMessage(SEXP, R_WARNING, ...);
> ?SEXP R_GetTraceback(int);
> +SEXP R_GetTracebackParsed(int);
> ?
> ?R_size_t R_GetMaxVSize(void);
> ?void R_SetMaxVSize(R_size_t);
> Index: src/library/base/R/traceback.R
> ===================================================================
> --- src/library/base/R/traceback.R?? ?(revision 76827)
> +++ src/library/base/R/traceback.R?? ?(working copy)
> @@ -16,9 +16,19 @@
> ?#? A copy of the GNU General Public License is available at
> ?#? https://www.R-project.org/Licenses/
> ?
> -.traceback <- function(x = NULL) {
> -??? if(is.null(x) && !is.null(x <- get0(".Traceback", envir = baseenv())))
> -?? ?{}
> +.traceback <- function(x = NULL, max.lines=getOption("deparse.max.lines")) {
> +??? if(!(is.numeric(max.lines) && !is.na(max.lines) &&
> +???????? as.integer(max.lines) > 0L)
> +??? ) {
> +??????? max.lines <- -1L
> +??? }
> +??? if(is.null(x) && !is.null(x <- get0(".Traceback", envir = baseenv()))) {
> +??????? for(i in seq_along(x)) {
> +??????????? srcref <- attr(x[[i]], 'srcref')
> +??????????? x[[i]] <- deparse(x[[i]], nlines=max.lines)
> +??????????? attr(x[[i]], 'srcref') <- srcref
> +??????? }
> +??? }
> ???? else if (is.numeric(x))
> ??? ??? ?x <- .Internal(traceback(x))
> ???? x
> @@ -26,7 +36,16 @@
> ?
> ?traceback <- function(x = NULL, max.lines = getOption("deparse.max.lines"))
> ?{
> -??? n <- length(x <- .traceback(x))
> +??? valid.max.lines <- is.numeric(max.lines) && !is.na(max.lines) &&
> +???????? as.integer(max.lines) > 0L
> +
> +??? if(valid.max.lines) {
> +??????? # max.lines + 1L so we can know that output was truncated by .traceback
> +??????? max.lines.2 <- as.integer(max.lines) + 1L
> +??? } else {
> +??????? max.lines.2 <- -1L
> +??? }
> +??? n <- length(x <- .traceback(x, max.lines=max.lines.2))
> ???? if(n == 0L)
> ???????? cat(gettext("No traceback available"), "\n")
> ???? else {
> @@ -40,7 +59,7 @@
> ???????????????? paste0(" at ", basename(srcfile$filename), "#", srcref[1L])
> ???????????? }
> ???????????? ## Truncate deparsed code (destroys attributes of xi)
> -??????????? if(is.numeric(max.lines) && max.lines > 0L && max.lines < m) {
> +??????????? if(valid.max.lines &&? max.lines < m) {
> ???????????????? xi <- c(xi[seq_len(max.lines)], " ...")
> ???????????????? m <- length(xi)
> ???????????? }
> Index: src/library/base/man/traceback.Rd
> ===================================================================
> --- src/library/base/man/traceback.Rd?? ?(revision 76827)
> +++ src/library/base/man/traceback.Rd?? ?(working copy)
> @@ -21,7 +21,7 @@
> ?}
> ?\usage{
> ?traceback(x = NULL, max.lines = getOption("deparse.max.lines"))
> -.traceback(x = NULL)
> +.traceback(x = NULL, max.lines = getOption("deparse.max.lines"))
> ?}
> ?\arguments{
> ?? \item{x}{\code{NULL} (default, meaning \code{.Traceback}), or an
> Index: src/main/errors.c
> ===================================================================
> --- src/main/errors.c?? ?(revision 76827)
> +++ src/main/errors.c?? ?(working copy)
> @@ -1008,7 +1008,7 @@
> ??? ??? (which should not happen) */
> ??? ?if (traceback && inError < 2 && inError == oldInError) {
> ??? ???? inError = 2;
> -?? ???? PROTECT(s = R_GetTraceback(0));
> +?? ???? PROTECT(s = R_GetTracebackParsed(0));
> ??? ???? SET_SYMVALUE(install(".Traceback"), s);
> ??? ???? /* should have been defineVar
> ??? ??????? setVar(install(".Traceback"), s, R_GlobalEnv); */
> @@ -1440,9 +1440,11 @@
> ??? ?PrintWarnings();
> ???? }
> ?}
> -
> +/*
> + * Return the traceback without deparsing the calls
> + */
> ?attribute_hidden
> -SEXP R_GetTraceback(int skip)
> +SEXP R_GetTracebackParsed(int skip)
> ?{
> ???? int nback = 0, ns;
> ???? RCNTXT *c;
> @@ -1467,7 +1469,9 @@
> ??? ???? if (skip > 0)
> ??? ??? ?skip--;
> ??? ???? else {
> -?? ??? ?SETCAR(t, deparse1m(c->call, 0, DEFAULTDEPARSE));
> +??????????????? // Extra paranoid PROTECTS
> +?? ??? ?SETCAR(t, PROTECT(duplicate(c->call)));
> +??????????????? UNPROTECT(1);
> ??? ??? ?if (c->srcref && !isNull(c->srcref)) {
> ??? ??? ???? SEXP sref;
> ??? ??? ???? if (c->srcref == R_InBCInterpreter)
> @@ -1482,7 +1486,26 @@
> ???? UNPROTECT(1);
> ???? return s;
> ?}
> +/*
> + * Return the traceback with calls deparsed
> + */
> +attribute_hidden
> +SEXP R_GetTraceback(int skip)
> +{
> +??? int nback = 0;
> +??? SEXP s, t, u, v;
> +??? s = PROTECT(R_GetTracebackParsed(skip));
> +??? for(t = s; t != R_NilValue; t = CDR(t)) nback++;
> +??? u = v = PROTECT(allocList(nback));
> ?
> +??? for(t = s; t != R_NilValue; t = CDR(t), v=CDR(v)) {
> +??????? SETCAR(v, PROTECT(deparse1m(CAR(t), 0, DEFAULTDEPARSE)));
> +??????? UNPROTECT(1);
> +??? }
> +??? UNPROTECT(1);
> +??? return u;
> +}
> +
> ?SEXP attribute_hidden do_traceback(SEXP call, SEXP op, SEXP args, SEXP rho)
> ?{
> ???? int skip;
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>

-- 
Luke Tierney
Ralph E. Wareham Professor of Mathematical Sciences
University of Iowa                  Phone:             319-335-3386
Department of Statistics and        Fax:               319-335-3017
    Actuarial Science
241 Schaeffer Hall                  email:   luke-tierney at uiowa.edu
Iowa City, IA 52242                 WWW:  http://www.stat.uiowa.edu

From @pencer@gr@ve@ @end|ng |rom prod@y@e@com  Sun Jul 14 16:32:26 2019
From: @pencer@gr@ve@ @end|ng |rom prod@y@e@com (Spencer Graves)
Date: Sun, 14 Jul 2019 09:32:26 -0500
Subject: [Rd] .travis.yml ... most likely included in error
Message-ID: <66fe0410-c0ae-50a9-7b43-bfe48ca81bd2@prodsyse.com>

Hello:


 ????? Suggestions for whomever maintains "R CMD":


 ??? ??????? 1.? Can you change it so it doesn't complain about the 
presence of ".travis.yml", at least on GitHub?


 ??? ??????? 2.? What do you suggest people do to find error messages in 
the output?? I ask, because I'm getting "build failing" from 
travis-ci.org, but I can't see what failed in the following:


https://travis-ci.org/sbgraves237/Ecdat/builds/558528361?utm_medium=notification&utm_source=email


 ??? ??? ????????? https://api.travis-ci.org/v3/job/558528362/log.txt


 ????? Or are thesejust Travis-CI problems?? If yes, what would you 
suggest they do?


 ????? Thanks,
 ????? Spencer Graves


From brod|e@g@@|@m @end|ng |rom y@hoo@com  Sun Jul 14 16:32:59 2019
From: brod|e@g@@|@m @end|ng |rom y@hoo@com (brodie gaslam)
Date: Sun, 14 Jul 2019 14:32:59 +0000 (UTC)
Subject: [Rd] 
 [External]  Mitigating Stalls Caused by Call Deparse on Error
In-Reply-To: <alpine.DEB.2.21.1907140747160.5519@luke-Latitude-7480>
References: <1095250181.1426568.1563039104421.ref@mail.yahoo.com>
 <1095250181.1426568.1563039104421@mail.yahoo.com>
 <alpine.DEB.2.21.1907140747160.5519@luke-Latitude-7480>
Message-ID: <1868480939.1645077.1563114779876@mail.yahoo.com>

Luke, thanks for considering the issue.? I would like to
try to separate the problem into two parts, as I _think_ 
your comments address primarily part 2 below:

1. How can we avoid significant and possibly crippling
?? stalls on error with these non-standard calls.
2. What is the best way to view these non-standard calls.

I agree that issue 2. requires further thought and 
discussion under a wishlist issue ([on bugzilla now][1]).? 
While I did raise issue 2., the patch itself makes no
attempt to resolve it.

The proposed patch resolves issue 1., which is a big
 usability problem.? Right now if you have the misfortune of
 using `do.call` with a big object and trigger an error, you 
have the choice of waiting a possibly long time for 
the deparse to complete, or killing your entire R session
 externally.

It seems a shame to allow a big usability issue for `do.call` 
to remain when there is a simple solution at hand, especially
since the complete deparse of large objects likely serves no
purpose in this case. Obviously, if storing the actual calls
 instead of their deparsed equivalents in .Traceback causes 
problems I'm not anticipating, then that's different.? 
Is that the case?

Best,

Brodie.

[1]: https://bugs.r-project.org/bugzilla/show_bug.cgi?id=17580

On Sunday, July 14, 2019, 8:52:45 AM EDT, Tierney, Luke <luke-tierney at uiowa.edu> wrote: 





This is probably best viewed in the context of other issue with
displaying calls, such as issues arising from calls constructed in
non-standard evaluation contexts. Might be good to move to a wishlist
item in bugzilla.

Best,

luke

On Sat, 13 Jul 2019, brodie gaslam via R-devel wrote:

> When large calls cause errors R may stall for extended periods.? This
> is particularly likely to happen with `do.call`, as in this example
> with a 24 second stall:
>
> ??? x <- runif(1e7)
> ??? system.time(do.call(paste0, list(abs, x)))? # intentional error
> ??? ## Error in (function (..., collapse = NULL)? :
> ??? ##?? cannot coerce type 'builtin' to vector of type 'character'
> ??? ## Calls: system.time -> do.call -> <Anonymous>
> ??? ## Timing stopped at: 23.81 0.149 24.04
>
> ??? str(.Traceback)
> ??? ## Dotted pair list of 3
> ??? ##? $ : chr [1:2500488] "(function (..., collapse = NULL) " ".Internal(paste0(list(...), collapse)))(.Primitive(\"abs\"), c(0.718117154669017, " "0.494785501621664, 0.1453434410505, 0.635028422810137, 0.0353180423844606, " "0.688418723642826, 0.889682895969599, 0.728154224809259, 0.292572240810841, " ...
> ??? ##? $ : chr "do.call(paste0, list(abs, x))"
> ??? ##? $ : chr "system.time(do.call(paste0, list(abs, x)))"
>
> The first time I noticed this I thought my session had frozen/crashed
> as the standard interrupt ^C does not work during the deparse.? The
> stall happens when on error the call stack is deparsed prior to being
> saved to `.Traceback`.? The deparsing is done by `deparse1m` in native
> code, with the value of `getOption('deparse.max.lines')` which
> defaults to all lines.
>
> Since there is little value to seeing millions of lines of deparsed
> objects in `traceback()`, a simple work-around is to change the
> `deparse.max.lines` value:
>
> ??? options(deparse.max.lines=1)
> ??? system.time(do.call(paste0, list(abs, x)))
> ??? ## Error in (function (..., collapse = NULL)? :
> ??? ##?? cannot coerce type 'builtin' to vector of type 'character'
> ??? ## Calls: system.time -> do.call -> <Anonymous>
> ??? ## Timing stopped at: 0 0 0
>
> Unfortunately this will affect all `deparse` calls, and it seems
> undesirable to pre-emptively enable it just for calls that might cause
> large deparses on error.
>
> An alternative is to store the actual calls instead of their deparsed
> character equivalents in `.Traceback`.? This defers the deparsing to
> when `traceback()` is used.? As per `?traceback`, it should be
> relatively safe to modify `.Traceback` in this way:
>
>> It is undocumented where .Traceback is stored nor that it is
>> visible, and this is subject to change.
>
> Deferring the deparsing to `traceback()` will give us the?
> opportunity to use a different `max.lines` setting as we do here
> with the patch applied:
>
> ??? system.time(do.call(paste0, list(abs, x)))
> ??? ## Error in (function (..., collapse = NULL)? :
> ??? ##?? cannot coerce type 'builtin' to vector of type 'character'
> ??? ## Timing stopped at: 0.028 0 0.029
>
> ??? system.time(traceback(max.lines=3))
> ??? ## 3: (function (..., collapse = NULL)
> ??? ##??? .Internal(paste0(list(...), collapse)))(.Primitive("abs"), c(0.535468587651849,
> ??? ##??? 0.0540027911774814, 0.732930393889546, 0.565360915614292, 0.544816034380347,
> ??? ##???? ...
> ??? ## 2: do.call(paste0, list(abs, x))
> ??? ## 1: system.time(do.call(paste0, list(abs, x)))
> ??? ##??? user? system elapsed
> ??? ##?? 0.000?? 0.000?? 0.003
>
>
> More generally, it might be better to have a different smaller default
> value for the lines to deparse when calls? are _displayed_ as parts of
> lists, as is the case with `traceback()`, or in `print(sys.calls())` and
> similar.
>
> I attach a patch that does this.? I have run some basic tests
> and `make check-devel` passes. I can file an issue on bugzilla
> if that is a better place to have this conversation (assuming there
> is interest in it).
>
> Best,
>
> Brodie
>
> PS: for some reason my mail client is refusing to attach the patch so I paste it
> starting on the next line.
> Index: src/gnuwin32/Rdll.hide
> ===================================================================
> --- src/gnuwin32/Rdll.hide?? ?(revision 76827)
> +++ src/gnuwin32/Rdll.hide?? ?(working copy)
> @@ -94,6 +94,7 @@
> ? R_GetMaxNSize
> ? R_GetMaxVSize
> ? R_GetTraceback
> + R_GetTracebackParsed
> ? R_GetVarLocSymbol
> ? R_GetVarLocValue
> ? R_HandlerStack
> Index: src/include/Defn.h
> ===================================================================
> --- src/include/Defn.h?? ?(revision 76827)
> +++ src/include/Defn.h?? ?(working copy)
> @@ -1296,6 +1296,7 @@
> ?void NORET ErrorMessage(SEXP, int, ...);
> ?void WarningMessage(SEXP, R_WARNING, ...);
> ?SEXP R_GetTraceback(int);
> +SEXP R_GetTracebackParsed(int);
> ?
> ?R_size_t R_GetMaxVSize(void);
> ?void R_SetMaxVSize(R_size_t);
> Index: src/library/base/R/traceback.R
> ===================================================================
> --- src/library/base/R/traceback.R?? ?(revision 76827)
> +++ src/library/base/R/traceback.R?? ?(working copy)
> @@ -16,9 +16,19 @@
> ?#? A copy of the GNU General Public License is available at
> ?#? https://www.R-project.org/Licenses/
> ?
> -.traceback <- function(x = NULL) {
> -??? if(is.null(x) && !is.null(x <- get0(".Traceback", envir = baseenv())))
> -?? ?{}
> +.traceback <- function(x = NULL, max.lines=getOption("deparse.max.lines")) {
> +??? if(!(is.numeric(max.lines) && !is.na(max.lines) &&
> +???????? as.integer(max.lines) > 0L)
> +??? ) {
> +??????? max.lines <- -1L
> +??? }
> +??? if(is.null(x) && !is.null(x <- get0(".Traceback", envir = baseenv()))) {
> +??????? for(i in seq_along(x)) {
> +??????????? srcref <- attr(x[[i]], 'srcref')
> +??????????? x[[i]] <- deparse(x[[i]], nlines=max.lines)
> +??????????? attr(x[[i]], 'srcref') <- srcref
> +??????? }
> +??? }
> ???? else if (is.numeric(x))
> ??? ??? ?x <- .Internal(traceback(x))
> ???? x
> @@ -26,7 +36,16 @@
> ?
> ?traceback <- function(x = NULL, max.lines = getOption("deparse.max.lines"))
> ?{
> -??? n <- length(x <- .traceback(x))
> +??? valid.max.lines <- is.numeric(max.lines) && !is.na(max.lines) &&
> +???????? as.integer(max.lines) > 0L
> +
> +??? if(valid.max.lines) {
> +??????? # max.lines + 1L so we can know that output was truncated by .traceback
> +??????? max.lines.2 <- as.integer(max.lines) + 1L
> +??? } else {
> +??????? max.lines.2 <- -1L
> +??? }
> +??? n <- length(x <- .traceback(x, max.lines=max.lines.2))
> ???? if(n == 0L)
> ???????? cat(gettext("No traceback available"), "\n")
> ???? else {
> @@ -40,7 +59,7 @@
> ???????????????? paste0(" at ", basename(srcfile$filename), "#", srcref[1L])
> ???????????? }
> ???????????? ## Truncate deparsed code (destroys attributes of xi)
> -??????????? if(is.numeric(max.lines) && max.lines > 0L && max.lines < m) {
> +??????????? if(valid.max.lines &&? max.lines < m) {
> ???????????????? xi <- c(xi[seq_len(max.lines)], " ...")
> ???????????????? m <- length(xi)
> ???????????? }
> Index: src/library/base/man/traceback.Rd
> ===================================================================
> --- src/library/base/man/traceback.Rd?? ?(revision 76827)
> +++ src/library/base/man/traceback.Rd?? ?(working copy)
> @@ -21,7 +21,7 @@
> ?}
> ?\usage{
> ?traceback(x = NULL, max.lines = getOption("deparse.max.lines"))
> -.traceback(x = NULL)
> +.traceback(x = NULL, max.lines = getOption("deparse.max.lines"))
> ?}
> ?\arguments{
> ?? \item{x}{\code{NULL} (default, meaning \code{.Traceback}), or an
> Index: src/main/errors.c
> ===================================================================
> --- src/main/errors.c?? ?(revision 76827)
> +++ src/main/errors.c?? ?(working copy)
> @@ -1008,7 +1008,7 @@
> ??? ??? (which should not happen) */
> ??? ?if (traceback && inError < 2 && inError == oldInError) {
> ??? ???? inError = 2;
> -?? ???? PROTECT(s = R_GetTraceback(0));
> +?? ???? PROTECT(s = R_GetTracebackParsed(0));
> ??? ???? SET_SYMVALUE(install(".Traceback"), s);
> ??? ???? /* should have been defineVar
> ??? ??????? setVar(install(".Traceback"), s, R_GlobalEnv); */
> @@ -1440,9 +1440,11 @@
> ??? ?PrintWarnings();
> ???? }
> ?}
> -
> +/*
> + * Return the traceback without deparsing the calls
> + */
> ?attribute_hidden
> -SEXP R_GetTraceback(int skip)
> +SEXP R_GetTracebackParsed(int skip)
> ?{
> ???? int nback = 0, ns;
> ???? RCNTXT *c;
> @@ -1467,7 +1469,9 @@
> ??? ???? if (skip > 0)
> ??? ??? ?skip--;
> ??? ???? else {
> -?? ??? ?SETCAR(t, deparse1m(c->call, 0, DEFAULTDEPARSE));
> +??????????????? // Extra paranoid PROTECTS
> +?? ??? ?SETCAR(t, PROTECT(duplicate(c->call)));
> +??????????????? UNPROTECT(1);
> ??? ??? ?if (c->srcref && !isNull(c->srcref)) {
> ??? ??? ???? SEXP sref;
> ??? ??? ???? if (c->srcref == R_InBCInterpreter)
> @@ -1482,7 +1486,26 @@
> ???? UNPROTECT(1);
> ???? return s;
> ?}
> +/*
> + * Return the traceback with calls deparsed
> + */
> +attribute_hidden
> +SEXP R_GetTraceback(int skip)
> +{
> +??? int nback = 0;
> +??? SEXP s, t, u, v;
> +??? s = PROTECT(R_GetTracebackParsed(skip));
> +??? for(t = s; t != R_NilValue; t = CDR(t)) nback++;
> +??? u = v = PROTECT(allocList(nback));
> ?
> +??? for(t = s; t != R_NilValue; t = CDR(t), v=CDR(v)) {
> +??????? SETCAR(v, PROTECT(deparse1m(CAR(t), 0, DEFAULTDEPARSE)));
> +??????? UNPROTECT(1);
> +??? }
> +??? UNPROTECT(1);
> +??? return u;
> +}
> +
> ?SEXP attribute_hidden do_traceback(SEXP call, SEXP op, SEXP args, SEXP rho)
> ?{
> ???? int skip;

>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>

-- 
Luke Tierney
Ralph E. Wareham Professor of Mathematical Sciences
University of Iowa? ? ? ? ? ? ? ? ? Phone:? ? ? ? ? ? 319-335-3386
Department of Statistics and? ? ? ? Fax:? ? ? ? ? ? ? 319-335-3017
? ? Actuarial Science
241 Schaeffer Hall? ? ? ? ? ? ? ? ? email:? luke-tierney at uiowa.edu
Iowa City, IA 52242? ? ? ? ? ? ? ? WWW:? http://www.stat.uiowa.edu


From d@nny @end|ng |rom gorch@@org  Sun Jul 14 17:08:23 2019
From: d@nny @end|ng |rom gorch@@org (Danny Smith)
Date: Mon, 15 Jul 2019 01:08:23 +1000
Subject: [Rd] .travis.yml ... most likely included in error
In-Reply-To: <66fe0410-c0ae-50a9-7b43-bfe48ca81bd2@prodsyse.com>
References: <66fe0410-c0ae-50a9-7b43-bfe48ca81bd2@prodsyse.com>
Message-ID: <CAOgn7i=57FY_E5AJXVyYGtdZ9-uK5945J648JhXv5ub=EnsX4w@mail.gmail.com>

Hi Spencer,

To get rid of the .travis.yml note add a .Rbuildignore file with this line:
^\.travis\.yml$
This will exclude the file from the build.

The build is failing because of a warning. As noted in the log, Travis is
treating a warning as an error:

Found warnings, treating as errors

It's a bit hard to find the warning in the logs because of all the pdfTeX
output but it's a warning about uncompressed datasets on line 3179:
https://travis-ci.org/sbgraves237/Ecdat/builds/558528361#L3179

You could try resaving your datasets, there are a couple of suggestions
here:
https://stackoverflow.com/questions/32605623/how-to-compress-saves-in-r-package-build/47074811

Cheers,
Danny


On Mon., 15 Jul. 2019, 00:32 Spencer Graves, <spencer.graves at prodsyse.com>
wrote:

> Hello:
>
>
>        Suggestions for whomever maintains "R CMD":
>
>
>              1.  Can you change it so it doesn't complain about the
> presence of ".travis.yml", at least on GitHub?
>
>
>              2.  What do you suggest people do to find error messages in
> the output?  I ask, because I'm getting "build failing" from
> travis-ci.org, but I can't see what failed in the following:
>
>
>
> https://travis-ci.org/sbgraves237/Ecdat/builds/558528361?utm_medium=notification&utm_source=email
>
>
>                    https://api.travis-ci.org/v3/job/558528362/log.txt
>
>
>        Or are thesejust Travis-CI problems?  If yes, what would you
> suggest they do?
>
>
>        Thanks,
>        Spencer Graves
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>

	[[alternative HTML version deleted]]


From @pencer@gr@ve@ @end|ng |rom prod@y@e@com  Sun Jul 14 17:25:06 2019
From: @pencer@gr@ve@ @end|ng |rom prod@y@e@com (Spencer Graves)
Date: Sun, 14 Jul 2019 10:25:06 -0500
Subject: [Rd] .travis.yml ... most likely included in error
In-Reply-To: <CAOgn7i=57FY_E5AJXVyYGtdZ9-uK5945J648JhXv5ub=EnsX4w@mail.gmail.com>
References: <66fe0410-c0ae-50a9-7b43-bfe48ca81bd2@prodsyse.com>
 <CAOgn7i=57FY_E5AJXVyYGtdZ9-uK5945J648JhXv5ub=EnsX4w@mail.gmail.com>
Message-ID: <db943af2-0cb4-8256-4376-871f6763c14b@prodsyse.com>

Hi, Danny et al.:


 ????? Thanks.? I found ".Rbuildignore" on my local copy that was, 
however, not tracked by git.? I added that, then committed and pushed 
the change.


 ????? Obviously, I'm new to travis and am still learning how to read 
and understand what it's saying -- especially on how to find "warnings, 
treating as errors".


 ????? Thanks again,
 ????? Spencer Graves


On 2019-07-14 10:08, Danny Smith wrote:
> Hi Spencer,
>
> To get rid of the .travis.yml note add a .Rbuildignore file with this 
> line:
> ^\.travis\.yml$
> This will exclude the file from the build.
>
> The build is failing because of a warning. As noted in the log, Travis 
> is treating a warning as an error:
> Found warnings, treating as errors
> It's a bit hard to find the warning in the logs because of all the 
> pdfTeX output but it's a warning about uncompressed datasets on line 3179:
> https://travis-ci.org/sbgraves237/Ecdat/builds/558528361#L3179
>
> You could try resaving your datasets, there are a couple of 
> suggestions here:
> https://stackoverflow.com/questions/32605623/how-to-compress-saves-in-r-package-build/47074811
>
> Cheers,
> Danny
>
>
> On Mon., 15 Jul. 2019, 00:32 Spencer Graves, 
> <spencer.graves at prodsyse.com <mailto:spencer.graves at prodsyse.com>> wrote:
>
>     Hello:
>
>
>     ?????? Suggestions for whomever maintains "R CMD":
>
>
>     ???? ??????? 1.? Can you change it so it doesn't complain about the
>     presence of ".travis.yml", at least on GitHub?
>
>
>     ???? ??????? 2.? What do you suggest people do to find error
>     messages in
>     the output?? I ask, because I'm getting "build failing" from
>     travis-ci.org <http://travis-ci.org>, but I can't see what failed
>     in the following:
>
>
>     https://travis-ci.org/sbgraves237/Ecdat/builds/558528361?utm_medium=notification&utm_source=email
>
>
>     https://api.travis-ci.org/v3/job/558528362/log.txt
>
>
>     ?????? Or are thesejust Travis-CI problems?? If yes, what would you
>     suggest they do?
>
>
>     ?????? Thanks,
>     ?????? Spencer Graves
>
>     ______________________________________________
>     R-devel at r-project.org <mailto:R-devel at r-project.org> mailing list
>     https://stat.ethz.ch/mailman/listinfo/r-devel
>


	[[alternative HTML version deleted]]


From @pencer@gr@ve@ @end|ng |rom prod@y@e@com  Sun Jul 14 20:08:04 2019
From: @pencer@gr@ve@ @end|ng |rom prod@y@e@com (Spencer Graves)
Date: Sun, 14 Jul 2019 13:08:04 -0500
Subject: [Rd] R-Forge > GitHub?
In-Reply-To: <a896f66e-6727-cb45-9cd6-60c7ffdc2d9f@prodsyse.com>
References: <71f66de5-e1aa-5649-b07a-6cf79f9b07bc@prodsyse.com>
 <89645BC9-C6BF-4E57-8AA0-9F426BA8AC5E@rstudio.com>
 <CA+rDMK+HXUKnA0j49czOf99M62QBfnyO36Sf1MBEe8a5AO-+XA@mail.gmail.com>
 <06a9569b-5b68-a288-8c4f-1537120a5213@prodsyse.com>
 <CABtg=Km5cdEWyUM55FEiabNdZdHvJoELHZ7RCRMPgQhUg9Gc6w@mail.gmail.com>
 <6d983b3b-62ea-3bb9-724a-01baaff51e70@gmail.com>
 <fb319697-6408-17b5-30a1-7a8f9d8da928@prodsyse.com>
 <CAMMJQ0a7ZtndwL8YYas6+k3BRDtAFizAuaacONQ6i6HmrQMTeA@mail.gmail.com>
 <3f01d7bc-ed20-1a39-25bc-ce7d34e22398@prodsyse.com>
 <CAFDcVCR9=WMJRmT3RVZxaQaWxQ4EciojC5ct4K=PrSjuJKtKNw@mail.gmail.com>
 <c9f1e823-9384-1f9f-0d70-e6ccbe8e9075@prodsyse.com>
 <CAPPM_gQ6Ef0+FYz0NrywwiPyW9O2Wwcms8sbmQATp-jcgyYhBA@mail.gmail.com>
 <CAPPM_gQm4JEDZnqg1xPN8U7j2y76=bBNsmxB0dAm0Z7ujmrXzQ@mail.gmail.com>
 <593d5e40-611e-3fcc-c131-6fb7de1130b9@prodsyse.com>
 <CAMMJQ0a0ONoBnZnnn9wq3a4ey336t24CTLrf_RZS99u_hMKrjA@mail.gmail.com>
 <a896f66e-6727-cb45-9cd6-60c7ffdc2d9f@prodsyse.com>
Message-ID: <f1119591-dffc-986f-06c5-661def1ad0e4@prodsyse.com>

 ????? Thanks to Ott and others, I now have separate GitHub 
repositories, one for each of the packages combined in the Ecdat R-Forge 
project.? In case it might help others in the future, I will summarize 
here key things I did to make this transition:


 ??? ??????? 1.? I first copied the "Ecfun" package into its own 
directory on my local computer and created a separate GitHub repository 
for that.? I lost the history in doing so, but I can live without that 
history.


 ??? ??????? 2.? I moved the contents of "~Ecdat/pkg/Ecdat" to "~Ecdat" 
and deleted the now-empty ""pkg/Ecdat" subdirectory.? I first tried to 
do this in RStudio, but wasn't sure it was done correctly.? So I used 
"?git reset --hard HEAD? to revert all that. Then I copied the material 
in Finder on my Mac, so I could see what I was doing.? Then I did "git 
add" of the individual files and folders in a Terminal plus "git rm -r 
pkg" to delete


 ??? ??????? 3.? Then I set up automatic checking for both packages 
using Travis CI as described by Hadley's "R Packages" 
(http://r-pkgs.had.co.nz/check.html).? [GitHub complained that 
".travis.yml" didn't belong there.? Danny Smith on Rd told me to add it 
to ".Rbuildignore".? I found it was already there, but ".Rbuildignore" 
was not part of the repository.? Now it is.]


 ??? ??????? 4.? Along the way, GitHub kept asking for my username and 
password, even though I had established SSH authentication.? I traced 
the problem to the ".git/config" that said, "url = 
https://github.com/sbgraves237/Ecdat".? I changed that line to read "url 
= https://sbgraves237:password at github.com/sbgraves237/Ecdat" (where 
"password" is my GitHub password, which I had to change to make it work 
there, because it included "@" ;-)? oops.


 ??? ??????? 5.? I also had problems with "Warning: ?inst/doc? files":? 
Those had not existed in the R-Forge versions but appeared somehow in 
migrating them to GitHub.? I deleted them in a Terminal with "git rm -r 
inst/doc".? After "git commit" and "git push", I found they had been 
deleted from the GitHub repository but not my local computer, so I 
deleted them locally -- without any apparent side effects.


 ????? Thanks again,
 ????? Spencer Graves


On 2019-07-03 23:30, Spencer Graves wrote:
>   ????? Thanks so much for your help.
>
>
>   ????? Now your "git push -u origin master" was "![rejected]", after
> creating a new SSH and after your "git clone" and other "git remote
> rename ..." commands seemed to work:
>
>
> $ git clonegit at github.com:joshuaulrich/tmp-ecfun.git  Ecdat
> # Cloning into 'Ecdat'...<snip> done.
>
> $ cd Ecdat/
> $ git remote rename origin tmp
> $ git remote add originhttps://github.com/sbgraves237/Ecdat
> $ git push -u origin master
> #[Username & password OK]
> Tohttps://github.com/sbgraves237/Ecdat
>   ?! [rejected]??????? master -> master (fetch first)
> error: failed to push some refs to 'https://github.com/sbgraves237/Ecdat'
> hint: Updates were rejected because the remote contains work that you do
> hint: not have locally. This is usually caused by another repository pushing
> hint: to the same ref. You may want to first integrate the remote changes
> hint: (e.g., 'git pull ...') before pushing again.
> hint: See the 'Note about fast-forwards' in 'git push --help' for details.
> SpenceravessMBP:Ecdat sbgraves$
>
>
>   ????? Suggestions?
>   ????? Thanks again,
>   ????? Spencer Graves
>
>
> On 2019-07-01 01:05, Ott Toomet wrote:
>> Apparently you created id_rsa key pair with a passphrase. Passphrase
>> is like an additional password protection layer on your ssh key.? I
>> don't know how did you create it.? But you can always create a new one
>> (you should delete the old one before you create a new one) using the
>> shell command 'ssh-keygen'.? It asks for a passphrase, just push enter
>> for an empty passphrase (twice).? You also have to update the ssh
>> public key (id_rsa.pub) on github by supplying the new public key
>> (id_rsa.pub).
>>
>> There are some implications you should be aware of:
>> * if you delete id_rsa*, you cannot use any ssh authorization that
>> relies on this key any more (that's why you have to update on GH).
>> >From the what you write (... created 2 days ago) I guess you do not 
>> use these keys elsewhere but I may be wrong.
>> * if you supply empty passphrase, you bypass the optional extra
>> security layer.? I think this is OK for open source software
>> development on your personal computer but your preferences/situation
>> may differ.
>> * You cannot use the same keys with passphrase if they are created
>> without one.? This is likely not an issue, but if it turns out to be a
>> problem, you can either add passphrase to the default keys, or create
>> another set of keys, passphrase protected.
>>
>> Cheers,
>> Ott
>>
>>
>> On Sun, Jun 30, 2019 at 9:51 PM Spencer Graves
>> <spencer.graves at prodsyse.com  <mailto:spencer.graves at prodsyse.com>> wrote:
>>
>>
>>
>>      On 2019-06-30 06:58, Joshua Ulrich wrote:
>>      <snip>
>>
>>      > I imported both packages into separate repositories:
>>      >https://github.com/joshuaulrich/tmp-ecdat
>>      >https://github.com/joshuaulrich/tmp-ecfun
>>      >
>>      > I changed your email address on your R-Forge commits to match your
>>      > GitHub email address, so R-Forge commits would be associated
>>      with your
>>      > GitHub account.? I also omitted the "move" commit from Ecdat,
>>      and the
>>      > "obsolete > GitHub" commits from both packages.? I've attached a
>>      file
>>      > with the commands I used, if anyone is interested.
>>      >
>>      > You can use my repos by cloning them to your local machine, adding
>>      > your repos as new remotes, and pushing to them.? You would need
>>      to run
>>      > these commands (untested):
>>      >
>>      > ### clone my GitHub repo to your machine
>>      > git clonegit at github.com:joshuaulrich/tmp-ecfun.git  Ecdat
>>
>>
>>      Thanks so much.? Sadly, I'm still having troubles.? This "git
>>      clone ..."
>>      generates:
>>
>>
>>      Enter passphrase for key '/Users/sbgraves/.ssh/id_rsa':
>>
>>
>>      ?????? Sadly, I don't know the passphrase it's looking for here,
>>      and I
>>      don't know how to find what it's looking for.? Under GitHub >
>>      Settings >
>>      "SSH and GPG keys", I see an SSH key dated two days ago, when I
>>      cloned
>>      Ecdat from within RStudio.? And in "~.ssh" I see files id_rsa and
>>      id_rsa.pub, both created two days ago.
>>
>>
>>      ?????? What do you suggest I try to get past this?
>>
>>
>>      ?????? Thanks again for all your help.
>>
>>
>>      ?????? Spencer Graves
>>
>>      > cd Ecdat
>>      > ### rename my GitHub repo remote from 'origin' to 'tmp'
>>      > git remote rename origin tmp
>>      > ### add your GitHub repo remote as 'origin'
>>      > ### NOTE: this should be a new, clean repo.
>>      > ###? ? Rename your existing 'Ecdat' so you don't overwrite it
>>      > git remote add originhttps://github.com/sbgraves237/Ecdat
>>      > ### push to your GitHub repo
>>      > git push -u origin master
>>      >
>>      > Then you need to run similar commands for Ecfun.
>>      >
>>      > Best,
>>      > Josh
>>      >
>>      >>>? ? ? ? ?Thanks,
>>      >>>? ? ? ? ?Spencer
>>      >>>
>>      >>>
>>      >>> On 2019-06-29 14:09, Henrik Bengtsson wrote:
>>      >>>> On Sat, Jun 29, 2019 at 9:43 AM Spencer Graves
>>      >>>> <spencer.graves at prodsyse.com
>>      <mailto:spencer.graves at prodsyse.com>> wrote:
>>      >>>>> Hi, Ott et al.:
>>      >>>>>
>>      >>>>>
>>      >>>>>? ? ? ? ? What's the best way to get "Travis CI" to build and
>>      test the two
>>      >>>>> packages, Ecdat and Ecfun, that have long been combined in
>>      the Ecdat
>>      >>>>> project?
>>      >>>>>
>>      >>>>>
>>      >>>>>? ? ? ? ? Following Ott's advice and studying studying
>>      Wickham's "R
>>      >>>>> Packages" (http://r-pkgs.had.co.nz/), I was able to
>>      configure RStudio so
>>      >>>>> it would sync using git with
>>      "GitHub.com/sbgraves237/Ecdat".? However,
>>      >>>>> when I tried to configure "Travis CI", it said, "No
>>      DESCRIPTION file
>>      >>>>> found, user must supply their own install and script steps".
>>      >>>>>
>>      >>>>>
>>      >>>>>? ? ? ? ? Earlier in this thread, I think someone suggested I
>>      make the
>>      >>>>> Ecdat and Ecfun packages separate projects on GitHub (though
>>      I can't
>>      >>>>> find that suggestion now).? This would not be an issue if it
>>      were all
>>      >>>>> local without version control.? With RStudio managing my
>>      interface with
>>      >>>>> GitHub, it now seems quite tricky.
>>      >>>> I'm 99.999% confident that your life will be much much easier
>>      if you
>>      >>>> keep one R package per repository.? If you don't, you'll
>>      probably be
>>      >>>> very lonely when it comes to tools etc. There are built-in 'git'
>>      >>>> commands, but also git utility tools, for extracting a subset of
>>      >>>> folders/files from git repository into new git repositories.
>>      You'll
>>      >>>> still preserve the commit history.? I would deal with this in the
>>      >>>> terminal, using the 'git' client and possible some extraction
>>      tool.
>>      >>>>
>>      >>>> Also, while you spend time on this, have a look at the commit
>>      >>>> authorship that I mentioned previously.? It's nice to have
>>      that in
>>      >>>> place later.
>>      >>>>
>>      >>>> After you got the above in place, then .travis.yml and
>>      appveyor.yml is
>>      >>>> pretty straightforward (might even be a copy'n'paste).
>>      >>>>
>>      >>>> Finally, I saw you put your credentials in the URL when you
>>      cloned.? I
>>      >>>> don't think that's safe, your GitHub credentials will be
>>      stored in the
>>      >>>> ./.git/config file.? Instead, just clone with:
>>      >>>>
>>      >>>> git clonehttps://github.com/sbgraves237/Ecdat.git
>>      >>>>
>>      >>>> You can then configure git to cache your HTTPS credentials for a
>>      >>>> certain time, e.g. 120 minutes, so you don't have to enter
>>      them each
>>      >>>> time you pull/push.? See
>>      https://git-scm.com/docs/git-credential-cache
>>      >>>> for details.? That's what I tell new-comers to
>>      Git(Hub|Lab|...) to
>>      >>>> use.? Personally, I add my public SSH key to GitHub and then
>>      clone
>>      >>>> with the ssh protocol:
>>      >>>>
>>      >>>> git clonegit at github.com:sbgraves237/Ecdat.git
>>      >>>>
>>      >>>> That way my I never have to worry entering my credentials.
>>      >>>>
>>      >>>> /Henrik
>>      >>>>
>>      >>>>>? ? ? ? ? Suggestions?
>>      >>>>>? ? ? ? ? Thanks again to all who have offered suggestions so
>>      far.? This
>>      >>>>> migration from R-Forge to GitHub seems complete except for
>>      the automatic
>>      >>>>> tests provided via "Travis CI".
>>      >>>>>
>>      >>>>>
>>      >>>>>? ? ? ? ? Spencer
>>      >>>>>
>>      >>>>>
>>      >>>>> On 2019-06-28 22:25, Ott Toomet wrote:
>>      >>>>>> Apparently your username/password are wrong.? Can you
>>      clone/push from
>>      >>>>>> other repos?
>>      >>>>>>
>>      >>>>>> You do not need authorization when cloning a public repo,
>>      so even
>>      >>>>>> incorrect credentials may work (haven't tested this
>>      though).? But for
>>      >>>>>> push you have to have that in order.
>>      >>>>>>
>>      >>>>>> I suggest you create ssh keys, upload those to GH, and use ssh
>>      >>>>>> authorization instead of https.
>>      >>>>>>
>>      >>>>>> Cheers,
>>      >>>>>> Ott
>>      >>>>>>
>>      >>>>>> On Fri, Jun 28, 2019 at 8:18 PM Spencer Graves
>>      >>>>>> <spencer.graves at prodsyse.com
>>      <mailto:spencer.graves at prodsyse.com>
>>      <mailto:spencer.graves at prodsyse.com
>>      <mailto:spencer.graves at prodsyse.com>>> wrote:
>>      >>>>>>
>>      >>>>>>? ? ? ?Thanks to Duncan, Henrik and Henrik, Brian, and G?bor:
>>      >>>>>>
>>      >>>>>>
>>      >>>>>>? ? ? ? ? ? ? I created a local copy of the new GitHub
>>      version using the
>>      >>>>>>? ? ? ?following:
>>      >>>>>>
>>      >>>>>>? ? ? ?git clone
>>      >>>>>>https://sbgraves237:mypassword at github.com/sbgraves237/Ecdat.git
>>      >>>>>>
>>      >>>>>>
>>      >>>>>>
>>      >>>>>>? ? ? ? ? ? ? That worked in the sense that I got a local
>>      copy. However,
>>      >>>>>>? ? ? ?after
>>      >>>>>>? ? ? ?I rolled the version number and did "git commit" on
>>      the DESCRIPTION
>>      >>>>>>? ? ? ?files, my "git push" command generated the following:
>>      >>>>>>
>>      >>>>>>
>>      >>>>>>? ? ? ?remote: Invalid username or password.
>>      >>>>>>? ? ? ?fatal: Authentication failed for
>>      >>>>>>
>>      ?'https://sbgraves237:mypassword at github.com/sbgraves237/Ecdat.git/'
>>      >>>>>>
>>      >>>>>>
>>      >>>>>>? ? ? ? ? ? ? What am I missing? [Note:? I used my actual GitHub
>>      >>>>>>? ? ? ?password in
>>      >>>>>>? ? ? ?place of "mypassword" here, and this "Authentication
>>      failed" message
>>      >>>>>>? ? ? ?reported the GitHub password I used here.]
>>      >>>>>>
>>      >>>>>>
>>      >>>>>>? ? ? ? ? ? ? Thanks,
>>      >>>>>>? ? ? ? ? ? ? Spencer
>>      >>>>>>
>>      >>>>>>
>>      >>>>>>? ? ? ?p.s.? I'm doing this under macOS Mojave 10.14.5.
>>      Also,? I added
>>      >>>>>>? ? ? ?".onAttach" functions to the R-Forge versions as
>>      Brian G. Peterson
>>      >>>>>>? ? ? ?suggested.? That seemed to work fine.
>>      >>>>>>
>>      >>>>>>
>>      >>>>>>? ? ? ?On 2019-06-28 07:13, Duncan Murdoch wrote:
>>      >>>>>>? ? ? ?> On 28/06/2019 6:26 a.m., G?bor Cs?rdi wrote:
>>      >>>>>>? ? ? ?>
>>      >>>>>>? ? ? ?>> Instead, you can do as Duncan suggested, and put a
>>      README in your
>>      >>>>>>? ? ? ?>> R-Forge
>>      >>>>>>? ? ? ?>> repository, that points to *your* GitHub
>>      repositor(y/ies). Then the
>>      >>>>>>? ? ? ?>>https://github.com/rforge/ecdat  read only mirror
>>      will pick this up
>>      >>>>>>? ? ? ?>> and will
>>      >>>>>>? ? ? ?>> point there as well.
>>      >>>>>>? ? ? ?>
>>      >>>>>>? ? ? ?> Just for the record:? that was Henrik Singmann's
>>      suggestion, I just
>>      >>>>>>? ? ? ?> agreed with it.
>>      >>>>>>? ? ? ?>
>>      >>>>>>? ? ? ?> Duncan Murdoch
>>      >>>>>>? ? ? ?>
>>      >>>>>>
>>      >>>>>>
>>      >>>>>>? ? ? ? ? ? ? ?[[alternative HTML version deleted]]
>>      >>>>>>
>>      >>>>>> ?______________________________________________
>>      >>>>>>R-devel at r-project.org  <mailto:R-devel at r-project.org>
>>      <mailto:R-devel at r-project.org  <mailto:R-devel at r-project.org>>
>>      mailing list
>>      >>>>>>https://stat.ethz.ch/mailman/listinfo/r-devel
>>      >>>>>>
>>      >>>>>? ? ? ? ? ?[[alternative HTML version deleted]]
>>      >>>>>
>>      >>>>> ______________________________________________
>>      >>>>>R-devel at r-project.org  <mailto:R-devel at r-project.org>  mailing
>>      list
>>      >>>>>https://stat.ethz.ch/mailman/listinfo/r-devel
>>      >>> ______________________________________________
>>      >>>R-devel at r-project.org  <mailto:R-devel at r-project.org>  mailing list
>>      >>>https://stat.ethz.ch/mailman/listinfo/r-devel
>>      >>
>>      >>
>>      >> --
>>      >> Joshua Ulrich? | about.me/joshuaulrich
>>      <http://about.me/joshuaulrich>
>>      >> FOSS Trading? |www.fosstrading.com  <http://www.fosstrading.com>
>>      >
>>      >
>>
>>      ______________________________________________
>>      R-devel at r-project.org  <mailto:R-devel at r-project.org>  mailing list
>>      https://stat.ethz.ch/mailman/listinfo/r-devel
>>
> 	[[alternative HTML version deleted]]
>
> ______________________________________________
> R-devel at r-project.org  mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>


From m@ech|er @end|ng |rom @t@t@m@th@ethz@ch  Mon Jul 15 11:30:08 2019
From: m@ech|er @end|ng |rom @t@t@m@th@ethz@ch (Martin Maechler)
Date: Mon, 15 Jul 2019 11:30:08 +0200
Subject: [Rd] Format printing inside a matrix
In-Reply-To: <338008c4-ed9b-0a41-10bd-ea9d127bcc5e@fredhutch.org>
References: <3279306.Pz8kNGSOn8@plastic>
 <CAB8pepwib7Dpv6mzDHbNe44c_f8JjJ9FbPZg7MXXgZjbS-g6hQ@mail.gmail.com>
 <1826006.ZiRRdhffAi@plastic>
 <338008c4-ed9b-0a41-10bd-ea9d127bcc5e@fredhutch.org>
Message-ID: <23852.18336.753850.305953@stat.math.ethz.ch>

>>>>> Pages, Herve 
>>>>>     on Mon, 8 Jul 2019 04:32:29 +0000 writes:

    > On 7/7/19 17:41, Jialin Ma wrote:
    >> Hi Abby,
    >> 
    >> Thanks a lot for your paraphrasing and your suggestion!
    >> 
    >> The problem of wrapping the list into a S3/S4 object, i.e. subclassing array
    >> or matrix, is that one also has to define a bunch of methods for subsetting,
    >> joining, etc, in order to make it behave like a list array. The reason is that
    >> most R functions for subsetting, joining, etc. do not preserve class
    >> attributes of the input, which is possibly by design.

    > Is it? One could argue that a more sensible behavior would be that
    > things like `[`(..., drop=FALSE), rbind(), cbind(), etc... preserve
    > the class attribute.

    > Interestingly t() does that:

    > m <- matrix(1:6, nrow=2)
    > class(m) <- "foo"

    > m
    > #      [,1] [,2] [,3]
    > # [1,]    1    3    5
    > # [2,]    2    4    6
    > # attr(,"class")
    > # [1] "foo"

    > t(m)
    > #      [,1] [,2]
    > # [1,]    1    2
    > # [2,]    3    4
    > # [3,]    5    6
    > # attr(,"class")
    > # [1] "foo"

    > but not aperm() (which in this case would be expected to be
    > equivalent to t()):

    > aperm(m, 2:1)
    > #      [,1] [,2]
    > # [1,]    1    2
    > # [2,]    3    4
    > # [3,]    5    6

    > Reshaping also preserves the class:

    > dim(m) <- c(6, 1)
    > m
    > #      [,1]
    > # [1,]    1
    > # [2,]    2
    > # [3,]    3
    > # [4,]    4
    > # [5,]    5
    > # [6,]    6
    > # attr(,"class")
    > # [1] "foo"

    > So if it makes sense for t() and reshaping, it's not clear why it
    > wouldn't for [, aperm(), cbind(), etc...?

    > H.

I think I definitely tend to agree for aperm(); all others are
(slightly or much) more dubious to me however :

- `[`: yes probably, but only if drop=FALSE is used, so,
  e.g. dim & dimnames attributes will be kept {modified to the
  new dimensions of course}

- cbind(), rbind():  
    Here we are talking about an arbitrary number of arguments,
    each potentially with different and partly conflicting
    attributes, notably 'class'.
     
    Of course there are -- sometimes quite sophisticated -- S3
    and S4 methods that may apply here typically ((notably for
    specialized matrices, "my" Matrix and Rmpfr packages being
    mentioned)).

  For the (internal C code based) default method, a point could
  be made for trying to keep some attributes of the first
  argument; but I'm not convinced really yet that it would be
  wise to change behavior of the (base internal) default method
  for the cbind() / rbind() twin.


    >> It is not desirable if a
    >> simple matrix subsetting will remove the class attributes of the object.

The sentence above in its generality is wrong, sorry.
Think e.g. of the class  "symmetricMatrix", or imagine "covarianceMatrix"
or similar:  Almost all subsetting will change the most
important "property" of the class and keeping the class
attribute would be clearly internally inconsistent and wrong.
{and also consider that subsetting in R can be with repeated
 indices, say  m[c(1:10, 1:20, 20:1) , ] }


    >> There are also many other common functions that are meant to drop the
    >> attributes of the input, e.g. lapply, apply -- they are not generics and it is
    >> not wise to override them.
    >> 
    >> Overall, introducing a new S3/S4 class often brings some extra price in order
    >> to maintain the correct behavior,

that is correct

    >> which is why I tend to avoid them unless it is necessary.

well, it is never absolutely necessary, I'd say.
{ you could tell your users that your objects must only be
   accessed in one of a few possible ways and all other "access", i.e., 
   function calls with them as arguments is "forbidden" / "undefined" ...

   .. but your users will not follow what you told them, e.g., if
   your objects look closely like other R objects they already
   know very well ...
}

So, I'm convinced good programmers should
 pay the extra price _once_
 for the benefit of their package useRs and often themselves  _forever_
 (after that initial price has been paid).

Martin

    >> Best regards,
    >> Jialin
    >> 
    >> On Sunday, July 7, 2019 4:43:59 PM PDT Abby Spurdle wrote:
    >>> contains an array of question marks, which
    >>> isn't helpful.
    >>> 
    >>> Would it be possible for the print method for both matrices and arrays
    >>> (conditional on having a list type), call the format method for each
    >>> object, possibly creating a character matrix?
    >>> Presumably there are other approaches, but the main thing is that the
    >>> output is useful and it's easy for R users to control the way objects (in
    >>> matrices and arrays) are printed.
    >>> 
    >>>> Or is there any other place that I can override without introducing a new
    >>> 
    >>> S3 class?
    >>> 
    >>> In theory, the simplest approach is to redefine the print method for
    >>> matrices.
    >>> However, that would be unacceptable in a CRAN package, probably...
    >>> 
    >>> So, unless R Core change the print method, you may have to create a matrix
    >>> subclass.
    >> 
    >> ______________________________________________
    >> R-devel at r-project.org mailing list
    >> https://urldefense.proofpoint.com/v2/url?u=https-3A__stat.ethz.ch_mailman_listinfo_r-2Ddevel&d=DwIFAg&c=eRAMFD45gAfqt84VtBcfhQ&r=BK7q3XeAvimeWdGbWY_wJYbW0WYiZvSXAJJKaaPhzWA&m=CFwIFXl8lv7HqmAdD6GKNJ6jlR0VRL1Ek1iGNO_suAk&s=Mhiq-DX7GTrcmqUFXKjuATvQy8Zs6op359DAMvOrois&e=
    >> 

    > -- 
    > Herv? Pag?s

    > Program in Computational Biology
    > Division of Public Health Sciences
    > Fred Hutchinson Cancer Research Center
    > 1100 Fairview Ave. N, M1-B514
    > P.O. Box 19024
    > Seattle, WA 98109-1024

    > E-mail: hpages at fredhutch.org
    > Phone:  (206) 667-5791
    > Fax:    (206) 667-1319
    > ______________________________________________
    > R-devel at r-project.org mailing list
    > https://stat.ethz.ch/mailman/listinfo/r-devel


From m@ech|er @end|ng |rom @t@t@m@th@ethz@ch  Mon Jul 15 11:51:53 2019
From: m@ech|er @end|ng |rom @t@t@m@th@ethz@ch (Martin Maechler)
Date: Mon, 15 Jul 2019 11:51:53 +0200
Subject: [Rd] Addition of a meta viewport tag to HTML manuals
In-Reply-To: <7FAF4E2F-6981-4CC0-98FB-7FCA96C2A9EF@rud.is>
References: <7FAF4E2F-6981-4CC0-98FB-7FCA96C2A9EF@rud.is>
Message-ID: <23852.19641.838145.731228@stat.math.ethz.ch>

>>>>> Bob Rudis 
>>>>>     on Tue, 9 Jul 2019 14:24:24 -0400 writes:

    > The addition of a single line:
    > <meta name="viewport" content="width=device-width, initial-scale=1.0">

    > at in the <head> of the R HTML generated manuals would make them much easier to read on mobile devices.

    > texi2any (which generates the HTML files) is based on long-working Perl code that includes many modern HTML elements but does not include this one.

    > A Perl one-liner in the install-html: Makefile directive in Makefile.in:

    > install-html: installdirs
    > @for f in $(OBJECTS_HTML); do \
    > if test -f $${f} ; then \
    > $(INSTALL_DATA) $${f} "$(DESTDIR)$(rdocdir)/manual"; \
    > perl -pi -e 's/\<meta name="desc/<meta name="viewport" content="width=device-width, initial-scale=1.0">\n<meta name="desc/' "$(DESTDIR)$(rdocdir)/manual/*.html"; \
    > fi \
    > done

    > would insert this (I still need to read Makefile.win to see where it should go there) and I'd be glad to create a PR unless folks do not think better accessibility on mobile is a good idea.

To the contrary.
Thank you very much, Bob, for bringing this up, here!

    > $(PERL) does not seem to be defined but Perl itself is a requirement for texi2any so it is definitely something that would work in the current installation process. 

    > -Bob

Hmm,.. a very long time ago,  perl was an absolute requirement
for building R from the sources, but in the mean time, it's not
been required anymore strictly *).  AFAIK, there are alternative versions
of versions/alternatives to texi2any  (say on Windoze .. or
bizarre Linux distros or non-linux unices), and I'm almost sure
we do not want to require perl explicitly.

We are using R itself in many places for installation things,
but here, it should be possible to use smaller unix tools (such
as 'sed' and 'grep' say) instead.

If you (or someone else) provided a small patch for using those
instead of perl, I don't see a reason not to be grateful and
apply it to the sources.

Thank you once more
Martin


--
*)  perl is mentioned twice in the "R Administration and
    Installation" manual:
    1. maybe needed for 'install-info'  *if* there's no
      'install-info' command on the system [but on my Fedora and
       probably most "math-y" Linux dist there is a binary]

    2. On Windoze, the texinfo 5.x package needs perl


From g|on@t@@gh|gg| @end|ng |rom ep||@ch  Sun Jul  7 17:49:23 2019
From: g|on@t@@gh|gg| @end|ng |rom ep||@ch (Ghiggi Gionata)
Date: Sun, 7 Jul 2019 15:49:23 +0000
Subject: [Rd] Possible bug in `class<-` when a class-specific '[[.' method
 is defined
Message-ID: <1be44ffeed8e46619c57a9f8fae974b6@epfl.ch>

Hi all !

I noticed a strange behaviour of the function `class<-` when a class-specific '[[.' method is defined.

Here below a reproducible example :


#-------------------------------------------------------------------.

counttt <- 0

`[[.MYCLASS` = function(x, ...) {
  counttt <<- counttt + 1
  # browser()
  x = NextMethod()
  return(x)
}

df <- as.data.frame(matrix(1:20, nrow=5))
class(df) <- c("MYCLASS","data.frame")
counttt

# The same occurs when using structure(, class=) or attr(,"class")<-
df <- as.data.frame(matrix(1:20, nrow=5))
df <- structure(df, class=c("MYCLASS","data.frame"))
attr(df, "class") <- c("MYCLASS","data.frame")

#-------------------------------------------------------------------.

Why in this example `class<-` is calling  `[[.MYCLASS` 9 times ?

Is there a way to avoid `class<-` to call `[[.MYCLASS` ?


Thank you in advance for your help and suggestions.

Gionata



	[[alternative HTML version deleted]]


From morg@n@em@||box @end|ng |rom gm@||@com  Thu Jul 11 22:56:50 2019
From: morg@n@em@||box @end|ng |rom gm@||@com (Morgan Morgan)
Date: Thu, 11 Jul 2019 21:56:50 +0100
Subject: [Rd] Convert STRSXP or INTSXP to factor
Message-ID: <CAL0QV_O+U+okfszx59z-ySfD8emv9Bx6=g3YJfbq15_znVUsvg@mail.gmail.com>

Hi,

Using the R C PAI, is there a way to convert to convert STRSXP or INTSXP to
factor.

The idea would be to do in C something similar to the "factor" function
(example below):

> letters[1:5]
# [1] "a" "b" "c" "d" "e"

> factor(letters[1:5])
# [1] a b c d e
# Levels: a b c d e

There is the function setAttrib the levels of a SXP however when returned
to R the object is of type character not factor. Ideally what i would like
to return from the C function is the same output as above when the input is
of type character.

Please let me if you need more informations.
Thank you
Best regards
Morgan

	[[alternative HTML version deleted]]


From |eutn@nt @end|ng |rom |h-muen@ter@de  Fri Jul 12 11:22:11 2019
From: |eutn@nt @end|ng |rom |h-muen@ter@de (Dominik Leutnant)
Date: Fri, 12 Jul 2019 09:22:11 +0000
Subject: [Rd] MacOS parallel::makeCluster fails
In-Reply-To: <fedc97a1-e407-b427-a7f3-225a91fae27e@gmail.com>
References: <BA251FC4-C0F3-4473-834C-72B147F63C26@contoso.com>
 <fedc97a1-e407-b427-a7f3-225a91fae27e@gmail.com>
Message-ID: <6F92DA87-472D-4621-A1AB-6AF981FF99D6@fh-muenster.de>

Hi Thomas,

thanks for your reply (and thanks for your patience...).
I am now  using the following minimal reprex:

> library(parallel)
> cl <- makeCluster(2L)

I freshly started the machine and did not open any other app. Just R.app (3.6.1).

After executing the second line of code, R seems to hang infinitely and does not respond.
The R process itself uses almost no CPU.

Unfortunately, I do not have any experience with neither "Sock_listen"  nor "dtruss".
Is there an example somewhere available?

Best
Dominik




?Am 05.06.19, 10:18 schrieb "Tomas Kalibera" <tomas.kalibera at gmail.com>:

    Hi Dominik,
    
    from the output, the master process could not "listen" on the port where 
    it expects a connection from the worker. We need to find out why. I'd 
    recommend first to create a minimal reproducible example (and one that 
    does not use future, only parallel, and a minimal number of threads, 
    ideally just 2). Then I'd recommend to check if the problem still exists 
    with R-devel. Then I'd check if the problem happens in all invocations, 
    even after reboots, on a clean system, without many running applications 
    - if it does, this is good news. Then you could post such example and we 
    could help more - if we can reproduce on our system indeed we could 
    debug, if not there could at least be more directed advice on how to 
    debug on your side. What I'd do myself if I could reproduce on my system 
    would be instrument R around Sock_listen in internet module to see 
    exactly what has failed with which error. Maybe dtruss would help too, 
    but instrumenting may be easier. The earlier problem you mention has 
    never been diagnosed (it was only intermittent on the reporter's 
    machine, we could not reproduce on our systems, and despite a lot of 
    effort on our side and on the reporter's, we could not reliably 
    diagnose). In principle, it could be some race condition in R (one has 
    been fixed since the previous report), but especially if it is 
    deterministic it would more likely be some OS limit on your system. You 
    could of course try playing with OS limits, on the number of open files, 
    etc, with changing the port number (port= option), etc, but I would 
    recommend the systematic approach of debugging the cause.
    
    Best
    Tomas
    
    On 6/4/19 10:45 AM, Dominik Leutnant wrote:
    > Hi all,
    >
    > The call parallel::makeCluster(1L) hangs infinitely on my MacOS machine which seems to be already reported by some people (e.g., https://stat.ethz.ch/pipermail/r-devel/2018-February/075565.html).
    > However, the solutions posted on SO, GH or R-devel do not work in my case.
    >
    > So far, I unsuccessfully tested ?
    >
    >    1.  Couple of reboots
    >    2.  Adding 192.0.0.1 to /etc/hosts
    >    3.  Using R.app instead of RStudio.app
    >    4.  Turn off the firewall
    >
    > Following Hendriks advice, ?cl <- future::makeClusterPSOCK(1L, verbose = TRUE, timeout = 60)? gives (note: without adding the timeout parameter, R just hangs):
    >> Sys.setenv(LANGUAGE='en')
    >> cl <- future::makeClusterPSOCK(1L, verbose = TRUE, timeout = 60)
    > [local output] Workers: [n = 1] ?localhost?
    > [local output] Base port: 11867
    > [local output] Creating node 1 of 1 ...
    > [local output] - setting up node
    > Testing if worker's PID can be inferred: ?'/Library/Frameworks/R.framework/Resources/bin/Rscript' -e 'try(cat(Sys.getpid(),file="/var/folders/5s/kgm05t2s0_52gz1s445mnlgw0000gn/T//RtmpZp1RX6/future.parent=835.3434fe0c5c6.pid"), silent = TRUE)' -e "file.exists('/var/folders/5s/kgm05t2s0_52gz1s445mnlgw0000gn/T//RtmpZp1RX6/future.parent=835.3434fe0c5c6.pid')"?
    > - Possible to infer worker's PID: TRUE
    > [local output] Starting worker #1 on ?localhost?: '/Library/Frameworks/R.framework/Resources/bin/Rscript' --default-packages=datasets,utils,grDevices,graphics,stats,methods -e 'try(cat(Sys.getpid(),file="/var/folders/5s/kgm05t2s0_52gz1s445mnlgw0000gn/T//RtmpZp1RX6/future.parent=835.3434fe0c5c6.pid"), silent = TRUE)' -e 'parallel:::.slaveRSOCK()' MASTER=localhost PORT=11867 OUT=/dev/null TIMEOUT=60 XDR=TRUE
    > [local output] - Exit code of system() call: 0
    > [local output] Waiting for worker #1 on ?localhost? to connect back
    > [local output] Detected a warning from socketConnection(): ?problem in listening on this socket?
    > Killing worker process (PID 903) if still alive
    > Worker (PID 903) was successfully killed: TRUE
    > Error in socketConnection("localhost", port = port, server = TRUE, blocking = TRUE,  :
    >    Failed to launch and connect to R worker on local machine ?localhost? from local machine ?Dominiks-MBP.local?.
    > * The error produced by socketConnection() was: ?cannot open the connection?
    > * In addition, socketConnection() produced 1 warning(s):
    >     - Warning #1: ?problem in listening on this socket?
    > * The localhost socket connection that failed to connect to the R worker used port 11867 using a communication timeout of 60 seconds and a connection timeout of 120 seconds.
    > * Worker launch call: '/Library/Frameworks/R.framework/Resources/bin/Rscript' --default-packages=datasets,utils,grDevices,graphics,stats,methods -e 'try(cat(Sys.getpid(),file="/var/folders/5s/kgm05t2s0_52gz1s445mnlgw0000gn/T//RtmpZp1RX6/future.parent=835.3434fe0c5c6.pid"), silent = TRUE)' -e 'parallel:::.slaveRSOCK()' MASTER=localhost PORT=11867 OUT=/dev/null TIMEOUT=60 XDR=TRUE.
    > * Worker (PID 903) was successfully killed: TRUE
    > * Troubleshooting suggestions:
    >     - Suggestion #1: Set 'outfile=NULL' to see output from worker.
    > In addition: Warning message:
    > In socketConnection("localhost", port = port, server = TRUE, blocking = TRUE,  :
    >    problem in listening on this socket
    >
    > My session looks like:
    >> sessionInfo()
    > R version 3.6.0 (2019-04-26)
    > Platform: x86_64-apple-darwin15.6.0 (64-bit)
    > Running under: macOS Mojave 10.14.5
    >
    > Matrix products: default
    > BLAS:   /Library/Frameworks/R.framework/Versions/3.6/Resources/lib/libRblas.0.dylib
    > LAPACK: /Library/Frameworks/R.framework/Versions/3.6/Resources/lib/libRlapack.dylib
    >
    > Random number generation:
    > RNG:     Mersenne-Twister
    >   Normal:  Inversion
    >   Sample:  Rounding
    >
    > locale:
    > [1] de_DE.UTF-8/de_DE.UTF-8/de_DE.UTF-8/C/de_DE.UTF-8/de_DE.UTF-8
    >
    > attached base packages:
    > [1] stats     graphics  grDevices utils     datasets  methods   base
    >
    > loaded via a namespace (and not attached):
    > [1] compiler_3.6.0
    > Any help is greatly appreciated.
    > Best regards
    > Dominik
    >
    > Dr. Dominik Leutnant
    >
    > Muenster University of Applied Sciences
    > Department of Civil Engineering
    > Institute for Infrastucture?Water?Resources?Environment (IWARU)
    > WG Urban Hydrology and Water Management
    > Corrensstr. 25
    > FRG-48149 M?nster, Germany
    >
    > Tel.:  +49 (0) 251/83-65274
    > Fax:  +49 (0) 251/83-65915
    > Mail:  leutnant at fh-muenster.de<mailto:leutnant at fh-muenster.de>
    > Web: https://www.fh-muenster.de/
    >
    > 	[[alternative HTML version deleted]]
    >
    > ______________________________________________
    > R-devel at r-project.org mailing list
    > https://stat.ethz.ch/mailman/listinfo/r-devel
    
    
    


From chend@n|e|y @end|ng |rom gm@||@com  Fri Jul 12 20:53:21 2019
From: chend@n|e|y @end|ng |rom gm@||@com (Daniel Chen)
Date: Fri, 12 Jul 2019 13:53:21 -0500
Subject: [Rd] Unexpected behaviour when comparing (==) long quoted
 expressions
Message-ID: <548ff578-bd19-aed9-78f5-f4dcd7a2576c@gmail.com>

Hi everyone:

I?m one of the interns at RStudio this summer working on a project that 
helps teachers grade student code. I found an unexpected behaviour with 
the |==| operator when comparing |quote|d expressions.

Example 1:

|u <- quote(tidyr::gather(key = key, value = value, 
new_sp_m014:newrel_f65, na.rm = TRUE)) s <- quote(tidyr::gather(key = 
key, value = value, new_sp_m014:newrel_f65, na.rm = FALSE)) u == s # 
TRUE u <- quote(tidyr::gather(key = key, value = value, na.rm = TRUE)) s 
<- quote(tidyr::gather(key = key, value = value, na.rm = FALSE)) u == s 
# FALSE |

Example 2:

|u <- 
quote(f(x123456789012345678901234567890123456789012345678901234567890, 
1)) s <- 
quote(f(x123456789012345678901234567890123456789012345678901234567890, 
2)) u == s #> [1] TRUE |

Winston Chang pointed out in the help page for |==|:

    Language objects such as symbols and calls are deparsed to character
    strings before comparison.

and in the source code that does the comparison [1] shows that It 
deparses each language object and then only extracts the first element 
from the resulting character vector:

|SET_STRING_ELT(tmp, 0, (iS) ? PRINTNAME(x) : STRING_ELT(deparse1(x, 0, 
DEFAULTDEPARSE), 0)); |

Is this a fix that needs to happen within the |==| documentation? or an 
actual bug with the operator?

For more context the original issue we had is here: 
https://github.com/rstudio-education/grader/issues/28

Workaround:

You can get around this issue by using |all.equal| or |identical|

|u <- quote(tidyr::gather(key = key, value = value, 
new_sp_m014:newrel_f65, na.rm = TRUE)) s <- quote(tidyr::gather(key = 
key, value = value, new_sp_m014:newrel_f65, na.rm = FALSE)) u == s # 
TRUE all.equal(u, s) # "target, current do not match when deparsed" 
identical(u, s) # FALSE |

Thanks,

Dan

[1] 
https://github.com/wch/r-source/blob/e647f78cb85282263f88ea30c6337b77a30743d9/src/main/relop.c#L140-L155

?

	[[alternative HTML version deleted]]


From b2tremb|@y @end|ng |rom uw@ter|oo@c@  Sun Jul 14 14:05:25 2019
From: b2tremb|@y @end|ng |rom uw@ter|oo@c@ (Benjamin Jean-Marie Tremblay)
Date: Sun, 14 Jul 2019 08:05:25 -0400
Subject: [Rd] Potential bug with data.frame replacement
Message-ID: <F2511EF0-05DC-46FE-8ABC-7272ED87036C@uwaterloo.ca>

Dear R-devel,

I have encountered a crash-inducing scenario and would like to enquire as to
whether this would be considered a bug. To reproduce the crash:

X <- sample(letters, 3000, TRUE)
D <- data.frame(X, 1:3000, X, X, X, X, X)
D$X1.3000 <- paste0("GSM", D)

The reason why I'm not sure if this would be considered a bug is because I
typed this by accident, when what I meant was:

D$X1.3000 <- paste0("GSM", D$X1.3000)

I can never image a scenario where I would intentionally perform the former.

This issue seems to have something to do with the size of the data.frame, as
smaller examples will work fine:

D <- data.frame(A = 1:10, B = letters[1:10])
D$A <- paste0("A", D)

Also just doing the paste0 part without trying to replace a data.frame column
not crash R for me.

I can submit this on Bugzilla should this be deemed sufficiently buggy.

I am running 3.6.0 on macOS (x86_64-apple-darwin15.6.0).

Sincerely,

B.T.


From |@wrence@m|ch@e| @end|ng |rom gene@com  Mon Jul 15 14:06:22 2019
From: |@wrence@m|ch@e| @end|ng |rom gene@com (Michael Lawrence)
Date: Mon, 15 Jul 2019 05:06:22 -0700
Subject: [Rd] 
 Possible bug in `class<-` when a class-specific '[[.' method
 is defined
In-Reply-To: <1be44ffeed8e46619c57a9f8fae974b6@epfl.ch>
References: <1be44ffeed8e46619c57a9f8fae974b6@epfl.ch>
Message-ID: <CAOQ5NycGZjVbVBZPMCP3dQEo7Cu81s_Oth1MTjNa2nAXbQT_qA@mail.gmail.com>

I'm unable to reproduce this with R 3.6.1. Which version are you
using? Is this a fresh session?

On Mon, Jul 15, 2019 at 3:25 AM Ghiggi Gionata <gionata.ghiggi at epfl.ch> wrote:
>
> Hi all !
>
> I noticed a strange behaviour of the function `class<-` when a class-specific '[[.' method is defined.
>
> Here below a reproducible example :
>
>
> #-------------------------------------------------------------------.
>
> counttt <- 0
>
> `[[.MYCLASS` = function(x, ...) {
>   counttt <<- counttt + 1
>   # browser()
>   x = NextMethod()
>   return(x)
> }
>
> df <- as.data.frame(matrix(1:20, nrow=5))
> class(df) <- c("MYCLASS","data.frame")
> counttt
>
> # The same occurs when using structure(, class=) or attr(,"class")<-
> df <- as.data.frame(matrix(1:20, nrow=5))
> df <- structure(df, class=c("MYCLASS","data.frame"))
> attr(df, "class") <- c("MYCLASS","data.frame")
>
> #-------------------------------------------------------------------.
>
> Why in this example `class<-` is calling  `[[.MYCLASS` 9 times ?
>
> Is there a way to avoid `class<-` to call `[[.MYCLASS` ?
>
>
> Thank you in advance for your help and suggestions.
>
> Gionata
>
>
>
>         [[alternative HTML version deleted]]
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel



-- 
Michael Lawrence
Scientist, Bioinformatics and Computational Biology
Genentech, A Member of the Roche Group
Office +1 (650) 225-7760
michafla at gene.com

Join Genentech on LinkedIn | Twitter | Facebook | Instagram | YouTube


From murdoch@dunc@n @end|ng |rom gm@||@com  Mon Jul 15 14:16:57 2019
From: murdoch@dunc@n @end|ng |rom gm@||@com (Duncan Murdoch)
Date: Mon, 15 Jul 2019 08:16:57 -0400
Subject: [Rd] 
 Possible bug in `class<-` when a class-specific '[[.' method
 is defined
In-Reply-To: <1be44ffeed8e46619c57a9f8fae974b6@epfl.ch>
References: <1be44ffeed8e46619c57a9f8fae974b6@epfl.ch>
Message-ID: <747cf507-e25b-d05f-366d-7f1ea2ddcbcd@gmail.com>

On 07/07/2019 11:49 a.m., Ghiggi Gionata wrote:
> Hi all !
> 
> I noticed a strange behaviour of the function `class<-` when a class-specific '[[.' method is defined.
> 
> Here below a reproducible example :
> 
> 
> #-------------------------------------------------------------------.
> 
> counttt <- 0
> 
> `[[.MYCLASS` = function(x, ...) {
>    counttt <<- counttt + 1
>    # browser()
>    x = NextMethod()
>    return(x)
> }
> 
> df <- as.data.frame(matrix(1:20, nrow=5))
> class(df) <- c("MYCLASS","data.frame")
> counttt
> 
> # The same occurs when using structure(, class=) or attr(,"class")<-
> df <- as.data.frame(matrix(1:20, nrow=5))
> df <- structure(df, class=c("MYCLASS","data.frame"))
> attr(df, "class") <- c("MYCLASS","data.frame")
> 
> #-------------------------------------------------------------------.
> 
> Why in this example `class<-` is calling  `[[.MYCLASS` 9 times ?
> 
> Is there a way to avoid `class<-` to call `[[.MYCLASS` ?
> 
> 
> Thank you in advance for your help and suggestions.

This is what I see:


 > counttt <- 0
 >
 > `[[.MYCLASS` = function(x, ...) {
+   counttt <<- counttt + 1
+   # browser()
+   x = NextMethod()
+   return(x)
+ }
 >
 > df <- as.data.frame(matrix(1:20, nrow=5))
 > class(df) <- c("MYCLASS","data.frame")
 > counttt
[1] 0

So there's something else going on in your system.  Maybe post 
sessionInfo()?

Duncan Murdoch


From ru|pb@rr@d@@ @end|ng |rom @@po@pt  Mon Jul 15 14:57:12 2019
From: ru|pb@rr@d@@ @end|ng |rom @@po@pt (Rui Barradas)
Date: Mon, 15 Jul 2019 13:57:12 +0100
Subject: [Rd] 
 Possible bug in `class<-` when a class-specific '[[.' method
 is defined
In-Reply-To: <747cf507-e25b-d05f-366d-7f1ea2ddcbcd@gmail.com>
References: <1be44ffeed8e46619c57a9f8fae974b6@epfl.ch>
 <747cf507-e25b-d05f-366d-7f1ea2ddcbcd@gmail.com>
Message-ID: <00442d3d-9d4e-8f0d-b32d-c11d138de8d0@sapo.pt>

Hello,

Clean R 3.6.1 session on Ubuntu 19.04, RStudio 1.1.453. sessionInfo() at 
the end.

I can reproduce this.

counttt <- 0

`[[.MYCLASS` = function(x, ...) {
   counttt <<- counttt + 1
   # browser()
   x = NextMethod()
   return(x)
}

df <- as.data.frame(matrix(1:20, nrow=5))
class(df) <- c("MYCLASS","data.frame")
counttt
#[1] 9


But there's more. I tried to print the values of x in the method and got 
really strange results

counttt <- 0

`[[.MYCLASS` = function(x, ...) {
   counttt <<- counttt + 1
   print(x)
   # browser()
   x = NextMethod()
   return(x)
}

df <- as.data.frame(matrix(1:20, nrow=5))
class(df) <- c("MYCLASS","data.frame")
counttt
#[1] 151


If I change print to print.data.frame it goes up to

counttt
#[1] 176

With print.default back to 9. What is the print method called in the 
second example?


sessionInfo()
R version 3.6.1 (2019-07-05)
Platform: x86_64-pc-linux-gnu (64-bit)
Running under: Ubuntu 19.04

Matrix products: default
BLAS:   /usr/lib/x86_64-linux-gnu/blas/libblas.so.3.8.0
LAPACK: /usr/lib/x86_64-linux-gnu/lapack/liblapack.so.3.8.0

locale:
  [1] LC_CTYPE=pt_PT.UTF-8       LC_NUMERIC=C
  [3] LC_TIME=pt_PT.UTF-8        LC_COLLATE=pt_PT.UTF-8
  [5] LC_MONETARY=pt_PT.UTF-8    LC_MESSAGES=pt_PT.UTF-8
  [7] LC_PAPER=pt_PT.UTF-8       LC_NAME=C
  [9] LC_ADDRESS=C               LC_TELEPHONE=C
[11] LC_MEASUREMENT=pt_PT.UTF-8 LC_IDENTIFICATION=C

attached base packages:
[1] stats     graphics  grDevices utils     datasets  methods
[7] base

loaded via a namespace (and not attached):
   [1] sos_2.0-0           nlme_3.1-140        matrixStats_0.54.0
   [4] fs_1.2.7            xts_0.11-2          usethis_1.5.0
   [7] lubridate_1.7.4     devtools_2.0.2      RColorBrewer_1.1-2
  [10] rprojroot_1.3-2     rbenchmark_1.0.0    tools_3.6.1
  [13] backports_1.1.4     R6_2.4.0            rpart_4.1-15
  [16] Hmisc_4.2-0         lazyeval_0.2.2      colorspace_1.4-1
  [19] nnet_7.3-12         npsurv_0.4-0        withr_2.1.2
  [22] tidyselect_0.2.5    gridExtra_2.3       prettyunits_1.0.2
  [25] processx_3.3.0      curl_3.3            compiler_3.6.1
  [28] cli_1.1.0           htmlTable_1.13.1    randomNames_1.4-0.0
  [31] dvmisc_1.1.3        desc_1.2.0          tseries_0.10-46
  [34] scales_1.0.0        checkmate_1.9.1     lmtest_0.9-36
  [37] fracdiff_1.4-2      mvtnorm_1.0-10      quadprog_1.5-6
  [40] callr_3.2.0         stringr_1.4.0       digest_0.6.18
  [43] foreign_0.8-71      rio_0.5.16          base64enc_0.1-3
  [46] stocks_1.1.4        pkgconfig_2.0.2     htmltools_0.3.6
  [49] sessioninfo_1.1.1   readxl_1.3.1        htmlwidgets_1.3
  [52] rlang_0.3.4         TTR_0.23-4          rstudioapi_0.10
  [55] quantmod_0.4-14     MLmetrics_1.1.1     zoo_1.8-5
  [58] zip_2.0.1           acepack_1.4.1       dplyr_0.8.0.1
  [61] car_3.0-2           magrittr_1.5        Formula_1.2-3
  [64] Matrix_1.2-17       Rcpp_1.0.1          munsell_0.5.0
  [67] abind_1.4-5         stringi_1.4.3       forecast_8.6
  [70] yaml_2.2.0          carData_3.0-2       MASS_7.3-51.3
  [73] pkgbuild_1.0.3      plyr_1.8.4          grid_3.6.1
  [76] parallel_3.6.1      forcats_0.4.0       crayon_1.3.4
  [79] lattice_0.20-38     haven_2.1.0         splines_3.6.1
  [82] hms_0.4.2           knitr_1.22          ps_1.3.0
  [85] pillar_1.4.0        pkgload_1.0.2       urca_1.3-0
  [88] glue_1.3.1          lsei_1.2-0          babynames_1.0.0
  [91] latticeExtra_0.6-28 data.table_1.12.2   remotes_2.0.4
  [94] cellranger_1.1.0    testthat_2.1.0      gtable_0.3.0
  [97] purrr_0.3.2         assertthat_0.2.1    ggplot2_3.1.1
[100] openxlsx_4.1.0      xfun_0.6            survey_3.35-1
[103] survival_2.44-1.1   timeDate_3043.102   tibble_2.1.1
[106] memoise_1.1.0       cluster_2.0.8       toOrdinal_1.1-0.0
[109] fitdistrplus_1.0-14 brew_1.0-6



Hope this helps,

Rui Barradas


?s 13:16 de 15/07/19, Duncan Murdoch escreveu:
> On 07/07/2019 11:49 a.m., Ghiggi Gionata wrote:
>> Hi all !
>>
>> I noticed a strange behaviour of the function `class<-` when a 
>> class-specific '[[.' method is defined.
>>
>> Here below a reproducible example :
>>
>>
>> #-------------------------------------------------------------------.
>>
>> counttt <- 0
>>
>> `[[.MYCLASS` = function(x, ...) {
>> ?? counttt <<- counttt + 1
>> ?? # browser()
>> ?? x = NextMethod()
>> ?? return(x)
>> }
>>
>> df <- as.data.frame(matrix(1:20, nrow=5))
>> class(df) <- c("MYCLASS","data.frame")
>> counttt
>>
>> # The same occurs when using structure(, class=) or attr(,"class")<-
>> df <- as.data.frame(matrix(1:20, nrow=5))
>> df <- structure(df, class=c("MYCLASS","data.frame"))
>> attr(df, "class") <- c("MYCLASS","data.frame")
>>
>> #-------------------------------------------------------------------.
>>
>> Why in this example `class<-` is calling? `[[.MYCLASS` 9 times ?
>>
>> Is there a way to avoid `class<-` to call `[[.MYCLASS` ?
>>
>>
>> Thank you in advance for your help and suggestions.
> 
> This is what I see:
> 
> 
>  > counttt <- 0
>  >
>  > `[[.MYCLASS` = function(x, ...) {
> +?? counttt <<- counttt + 1
> +?? # browser()
> +?? x = NextMethod()
> +?? return(x)
> + }
>  >
>  > df <- as.data.frame(matrix(1:20, nrow=5))
>  > class(df) <- c("MYCLASS","data.frame")
>  > counttt
> [1] 0
> 
> So there's something else going on in your system.? Maybe post 
> sessionInfo()?
> 
> Duncan Murdoch
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From |uke-t|erney @end|ng |rom u|ow@@edu  Mon Jul 15 15:24:10 2019
From: |uke-t|erney @end|ng |rom u|ow@@edu (Tierney, Luke)
Date: Mon, 15 Jul 2019 13:24:10 +0000
Subject: [Rd] 
 [External] Re: Possible bug in `class<-` when a class-specific
 '[[.' method is defined
In-Reply-To: <00442d3d-9d4e-8f0d-b32d-c11d138de8d0@sapo.pt>
References: <1be44ffeed8e46619c57a9f8fae974b6@epfl.ch>
 <747cf507-e25b-d05f-366d-7f1ea2ddcbcd@gmail.com>
 <00442d3d-9d4e-8f0d-b32d-c11d138de8d0@sapo.pt>
Message-ID: <alpine.OSX.2.21.1907150819550.1224@macbook-air-3.local>

Pasting the entire example into RStudio and hitting return to evaluate
does not show this. Evaluating the finall line to print counttt
separately does.

Looks like RStudio is calling `[[` on your object when examining the
environment for the Environment panel. If this concerns you then you
should contact RStudio.

Best,

luke

On Mon, 15 Jul 2019, Rui Barradas wrote:

> Hello,
>
> Clean R 3.6.1 session on Ubuntu 19.04, RStudio 1.1.453. sessionInfo() at the 
> end.
>
> I can reproduce this.
>
> counttt <- 0
>
> `[[.MYCLASS` = function(x, ...) {
>  counttt <<- counttt + 1
>  # browser()
>  x = NextMethod()
>  return(x)
> }
>
> df <- as.data.frame(matrix(1:20, nrow=5))
> class(df) <- c("MYCLASS","data.frame")
> counttt
> #[1] 9
>
>
> But there's more. I tried to print the values of x in the method and got 
> really strange results
>
> counttt <- 0
>
> `[[.MYCLASS` = function(x, ...) {
>  counttt <<- counttt + 1
>  print(x)
>  # browser()
>  x = NextMethod()
>  return(x)
> }
>
> df <- as.data.frame(matrix(1:20, nrow=5))
> class(df) <- c("MYCLASS","data.frame")
> counttt
> #[1] 151
>
>
> If I change print to print.data.frame it goes up to
>
> counttt
> #[1] 176
>
> With print.default back to 9. What is the print method called in the second 
> example?
>
>
> sessionInfo()
> R version 3.6.1 (2019-07-05)
> Platform: x86_64-pc-linux-gnu (64-bit)
> Running under: Ubuntu 19.04
>
> Matrix products: default
> BLAS:   /usr/lib/x86_64-linux-gnu/blas/libblas.so.3.8.0
> LAPACK: /usr/lib/x86_64-linux-gnu/lapack/liblapack.so.3.8.0
>
> locale:
> [1] LC_CTYPE=pt_PT.UTF-8       LC_NUMERIC=C
> [3] LC_TIME=pt_PT.UTF-8        LC_COLLATE=pt_PT.UTF-8
> [5] LC_MONETARY=pt_PT.UTF-8    LC_MESSAGES=pt_PT.UTF-8
> [7] LC_PAPER=pt_PT.UTF-8       LC_NAME=C
> [9] LC_ADDRESS=C               LC_TELEPHONE=C
> [11] LC_MEASUREMENT=pt_PT.UTF-8 LC_IDENTIFICATION=C
>
> attached base packages:
> [1] stats     graphics  grDevices utils     datasets  methods
> [7] base
>
> loaded via a namespace (and not attached):
>  [1] sos_2.0-0           nlme_3.1-140        matrixStats_0.54.0
>  [4] fs_1.2.7            xts_0.11-2          usethis_1.5.0
>  [7] lubridate_1.7.4     devtools_2.0.2      RColorBrewer_1.1-2
> [10] rprojroot_1.3-2     rbenchmark_1.0.0    tools_3.6.1
> [13] backports_1.1.4     R6_2.4.0            rpart_4.1-15
> [16] Hmisc_4.2-0         lazyeval_0.2.2      colorspace_1.4-1
> [19] nnet_7.3-12         npsurv_0.4-0        withr_2.1.2
> [22] tidyselect_0.2.5    gridExtra_2.3       prettyunits_1.0.2
> [25] processx_3.3.0      curl_3.3            compiler_3.6.1
> [28] cli_1.1.0           htmlTable_1.13.1    randomNames_1.4-0.0
> [31] dvmisc_1.1.3        desc_1.2.0          tseries_0.10-46
> [34] scales_1.0.0        checkmate_1.9.1     lmtest_0.9-36
> [37] fracdiff_1.4-2      mvtnorm_1.0-10      quadprog_1.5-6
> [40] callr_3.2.0         stringr_1.4.0       digest_0.6.18
> [43] foreign_0.8-71      rio_0.5.16          base64enc_0.1-3
> [46] stocks_1.1.4        pkgconfig_2.0.2     htmltools_0.3.6
> [49] sessioninfo_1.1.1   readxl_1.3.1        htmlwidgets_1.3
> [52] rlang_0.3.4         TTR_0.23-4          rstudioapi_0.10
> [55] quantmod_0.4-14     MLmetrics_1.1.1     zoo_1.8-5
> [58] zip_2.0.1           acepack_1.4.1       dplyr_0.8.0.1
> [61] car_3.0-2           magrittr_1.5        Formula_1.2-3
> [64] Matrix_1.2-17       Rcpp_1.0.1          munsell_0.5.0
> [67] abind_1.4-5         stringi_1.4.3       forecast_8.6
> [70] yaml_2.2.0          carData_3.0-2       MASS_7.3-51.3
> [73] pkgbuild_1.0.3      plyr_1.8.4          grid_3.6.1
> [76] parallel_3.6.1      forcats_0.4.0       crayon_1.3.4
> [79] lattice_0.20-38     haven_2.1.0         splines_3.6.1
> [82] hms_0.4.2           knitr_1.22          ps_1.3.0
> [85] pillar_1.4.0        pkgload_1.0.2       urca_1.3-0
> [88] glue_1.3.1          lsei_1.2-0          babynames_1.0.0
> [91] latticeExtra_0.6-28 data.table_1.12.2   remotes_2.0.4
> [94] cellranger_1.1.0    testthat_2.1.0      gtable_0.3.0
> [97] purrr_0.3.2         assertthat_0.2.1    ggplot2_3.1.1
> [100] openxlsx_4.1.0      xfun_0.6            survey_3.35-1
> [103] survival_2.44-1.1   timeDate_3043.102   tibble_2.1.1
> [106] memoise_1.1.0       cluster_2.0.8       toOrdinal_1.1-0.0
> [109] fitdistrplus_1.0-14 brew_1.0-6
>
>
>
> Hope this helps,
>
> Rui Barradas
>
>
> ?s 13:16 de 15/07/19, Duncan Murdoch escreveu:
>> On 07/07/2019 11:49 a.m., Ghiggi Gionata wrote:
>>> Hi all !
>>> 
>>> I noticed a strange behaviour of the function `class<-` when a 
>>> class-specific '[[.' method is defined.
>>> 
>>> Here below a reproducible example :
>>> 
>>> 
>>> #-------------------------------------------------------------------.
>>> 
>>> counttt <- 0
>>> 
>>> `[[.MYCLASS` = function(x, ...) {
>>> ?? counttt <<- counttt + 1
>>> ?? # browser()
>>> ?? x = NextMethod()
>>> ?? return(x)
>>> }
>>> 
>>> df <- as.data.frame(matrix(1:20, nrow=5))
>>> class(df) <- c("MYCLASS","data.frame")
>>> counttt
>>> 
>>> # The same occurs when using structure(, class=) or attr(,"class")<-
>>> df <- as.data.frame(matrix(1:20, nrow=5))
>>> df <- structure(df, class=c("MYCLASS","data.frame"))
>>> attr(df, "class") <- c("MYCLASS","data.frame")
>>> 
>>> #-------------------------------------------------------------------.
>>> 
>>> Why in this example `class<-` is calling? `[[.MYCLASS` 9 times ?
>>> 
>>> Is there a way to avoid `class<-` to call `[[.MYCLASS` ?
>>> 
>>> 
>>> Thank you in advance for your help and suggestions.
>> 
>> This is what I see:
>> 
>>
>>  > counttt <- 0
>>  >
>>  > `[[.MYCLASS` = function(x, ...) {
>> +?? counttt <<- counttt + 1
>> +?? # browser()
>> +?? x = NextMethod()
>> +?? return(x)
>> + }
>>  >
>>  > df <- as.data.frame(matrix(1:20, nrow=5))
>>  > class(df) <- c("MYCLASS","data.frame")
>>  > counttt
>> [1] 0
>> 
>> So there's something else going on in your system.? Maybe post 
>> sessionInfo()?
>> 
>> Duncan Murdoch
>> 
>> ______________________________________________
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>

-- 
Luke Tierney
Ralph E. Wareham Professor of Mathematical Sciences
University of Iowa                  Phone:             319-335-3386
Department of Statistics and        Fax:               319-335-3017
    Actuarial Science
241 Schaeffer Hall                  email:   luke-tierney at uiowa.edu
Iowa City, IA 52242                 WWW:  http://www.stat.uiowa.edu

From murdoch@dunc@n @end|ng |rom gm@||@com  Mon Jul 15 15:26:10 2019
From: murdoch@dunc@n @end|ng |rom gm@||@com (Duncan Murdoch)
Date: Mon, 15 Jul 2019 09:26:10 -0400
Subject: [Rd] 
 Possible bug in `class<-` when a class-specific '[[.' method
 is defined
In-Reply-To: <00442d3d-9d4e-8f0d-b32d-c11d138de8d0@sapo.pt>
References: <1be44ffeed8e46619c57a9f8fae974b6@epfl.ch>
 <747cf507-e25b-d05f-366d-7f1ea2ddcbcd@gmail.com>
 <00442d3d-9d4e-8f0d-b32d-c11d138de8d0@sapo.pt>
Message-ID: <d66b7f9e-98b2-f43e-e80f-031319582353@gmail.com>

On 15/07/2019 8:57 a.m., Rui Barradas wrote:
> Hello,
> 
> Clean R 3.6.1 session on Ubuntu 19.04, RStudio 1.1.453. sessionInfo() at
> the end.

That's not what I'd call a "clean session" with all those packages loaded:

> loaded via a namespace (and not attached):
>     [1] sos_2.0-0           nlme_3.1-140        matrixStats_0.54.0
>     [4] fs_1.2.7            xts_0.11-2          usethis_1.5.0
>     [7] lubridate_1.7.4     devtools_2.0.2      RColorBrewer_1.1-2
>    [10] rprojroot_1.3-2     rbenchmark_1.0.0    tools_3.6.1
>    [13] backports_1.1.4     R6_2.4.0            rpart_4.1-15
>    [16] Hmisc_4.2-0         lazyeval_0.2.2      colorspace_1.4-1
>    [19] nnet_7.3-12         npsurv_0.4-0        withr_2.1.2
>    [22] tidyselect_0.2.5    gridExtra_2.3       prettyunits_1.0.2
>    [25] processx_3.3.0      curl_3.3            compiler_3.6.1
>    [28] cli_1.1.0           htmlTable_1.13.1    randomNames_1.4-0.0
>    [31] dvmisc_1.1.3        desc_1.2.0          tseries_0.10-46
>    [34] scales_1.0.0        checkmate_1.9.1     lmtest_0.9-36
>    [37] fracdiff_1.4-2      mvtnorm_1.0-10      quadprog_1.5-6
>    [40] callr_3.2.0         stringr_1.4.0       digest_0.6.18
>    [43] foreign_0.8-71      rio_0.5.16          base64enc_0.1-3
>    [46] stocks_1.1.4        pkgconfig_2.0.2     htmltools_0.3.6
>    [49] sessioninfo_1.1.1   readxl_1.3.1        htmlwidgets_1.3
>    [52] rlang_0.3.4         TTR_0.23-4          rstudioapi_0.10
>    [55] quantmod_0.4-14     MLmetrics_1.1.1     zoo_1.8-5
>    [58] zip_2.0.1           acepack_1.4.1       dplyr_0.8.0.1
>    [61] car_3.0-2           magrittr_1.5        Formula_1.2-3
>    [64] Matrix_1.2-17       Rcpp_1.0.1          munsell_0.5.0
>    [67] abind_1.4-5         stringi_1.4.3       forecast_8.6
>    [70] yaml_2.2.0          carData_3.0-2       MASS_7.3-51.3
>    [73] pkgbuild_1.0.3      plyr_1.8.4          grid_3.6.1
>    [76] parallel_3.6.1      forcats_0.4.0       crayon_1.3.4
>    [79] lattice_0.20-38     haven_2.1.0         splines_3.6.1
>    [82] hms_0.4.2           knitr_1.22          ps_1.3.0
>    [85] pillar_1.4.0        pkgload_1.0.2       urca_1.3-0
>    [88] glue_1.3.1          lsei_1.2-0          babynames_1.0.0
>    [91] latticeExtra_0.6-28 data.table_1.12.2   remotes_2.0.4
>    [94] cellranger_1.1.0    testthat_2.1.0      gtable_0.3.0
>    [97] purrr_0.3.2         assertthat_0.2.1    ggplot2_3.1.1
> [100] openxlsx_4.1.0      xfun_0.6            survey_3.35-1
> [103] survival_2.44-1.1   timeDate_3043.102   tibble_2.1.1
> [106] memoise_1.1.0       cluster_2.0.8       toOrdinal_1.1-0.0
> [109] fitdistrplus_1.0-14 brew_1.0-6
> 
> 

However, even when I load almost all of those, I don't see the problem. 
I've got the same R version, and a newer Rstudio version (mine is 
1.2.1335 on a Mac).  I couldn't load ] "latticeExtradata.table" and 
"fitdistrplusbrew", and I didn't check my package versions against yours.

I'd suspect the issue is with RStudio somehow, because it needs to do a 
lot to maintain its environment view.  Do you see this when running R 
from the command line?

Duncan Murdoch


From murdoch@dunc@n @end|ng |rom gm@||@com  Mon Jul 15 15:28:15 2019
From: murdoch@dunc@n @end|ng |rom gm@||@com (Duncan Murdoch)
Date: Mon, 15 Jul 2019 09:28:15 -0400
Subject: [Rd] 
 [External] Re: Possible bug in `class<-` when a class-specific
 '[[.' method is defined
In-Reply-To: <alpine.OSX.2.21.1907150819550.1224@macbook-air-3.local>
References: <1be44ffeed8e46619c57a9f8fae974b6@epfl.ch>
 <747cf507-e25b-d05f-366d-7f1ea2ddcbcd@gmail.com>
 <00442d3d-9d4e-8f0d-b32d-c11d138de8d0@sapo.pt>
 <alpine.OSX.2.21.1907150819550.1224@macbook-air-3.local>
Message-ID: <78f5829d-e0bb-7392-07e2-bb2cb51875fb@gmail.com>

On 15/07/2019 9:24 a.m., Tierney, Luke wrote:
> Pasting the entire example into RStudio and hitting return to evaluate
> does not show this. Evaluating the finall line to print counttt
> separately does.
> 
> Looks like RStudio is calling `[[` on your object when examining the
> environment for the Environment panel. If this concerns you then you
> should contact RStudio.

Now I see it!

Duncan Murdoch


From |uke-t|erney @end|ng |rom u|ow@@edu  Mon Jul 15 16:04:16 2019
From: |uke-t|erney @end|ng |rom u|ow@@edu (Tierney, Luke)
Date: Mon, 15 Jul 2019 14:04:16 +0000
Subject: [Rd] 
 [External]  Mitigating Stalls Caused by Call Deparse on Error
In-Reply-To: <1868480939.1645077.1563114779876@mail.yahoo.com>
References: <1095250181.1426568.1563039104421.ref@mail.yahoo.com>
 <1095250181.1426568.1563039104421@mail.yahoo.com>
 <alpine.DEB.2.21.1907140747160.5519@luke-Latitude-7480>
 <1868480939.1645077.1563114779876@mail.yahoo.com>
Message-ID: <alpine.DEB.2.21.1907150902340.5519@luke-Latitude-7480>

Better to add this to the wishlist item. This all needs to be looked
at together, and nothing is likely to happen until after
vacation/conference season.  It will disappear from everyone's radar
if it is just in R_devel.

Best,

luke

On Sun, 14 Jul 2019, brodie gaslam wrote:

> Luke, thanks for considering the issue.? I would like to
> try to separate the problem into two parts, as I _think_
> your comments address primarily part 2 below:
>
> 1. How can we avoid significant and possibly crippling
> ?? stalls on error with these non-standard calls.
> 2. What is the best way to view these non-standard calls.
>
> I agree that issue 2. requires further thought and
> discussion under a wishlist issue ([on bugzilla now][1]).?
> While I did raise issue 2., the patch itself makes no
> attempt to resolve it.
>
> The proposed patch resolves issue 1., which is a big
> usability problem.? Right now if you have the misfortune of
> using `do.call` with a big object and trigger an error, you
> have the choice of waiting a possibly long time for
> the deparse to complete, or killing your entire R session
> externally.
>
> It seems a shame to allow a big usability issue for `do.call`
> to remain when there is a simple solution at hand, especially
> since the complete deparse of large objects likely serves no
> purpose in this case. Obviously, if storing the actual calls
> instead of their deparsed equivalents in .Traceback causes
> problems I'm not anticipating, then that's different.?
> Is that the case?
>
> Best,
>
> Brodie.
>
> [1]: https://bugs.r-project.org/bugzilla/show_bug.cgi?id=17580
>
> On Sunday, July 14, 2019, 8:52:45 AM EDT, Tierney, Luke <luke-tierney at uiowa.edu> wrote:
>
>
>
>
>
> This is probably best viewed in the context of other issue with
> displaying calls, such as issues arising from calls constructed in
> non-standard evaluation contexts. Might be good to move to a wishlist
> item in bugzilla.
>
> Best,
>
> luke
>
> On Sat, 13 Jul 2019, brodie gaslam via R-devel wrote:
>
>> When large calls cause errors R may stall for extended periods.? This
>> is particularly likely to happen with `do.call`, as in this example
>> with a 24 second stall:
>>
>> ??? x <- runif(1e7)
>> ??? system.time(do.call(paste0, list(abs, x)))? # intentional error
>> ??? ## Error in (function (..., collapse = NULL)? :
>> ??? ##?? cannot coerce type 'builtin' to vector of type 'character'
>> ??? ## Calls: system.time -> do.call -> <Anonymous>
>> ??? ## Timing stopped at: 23.81 0.149 24.04
>>
>> ??? str(.Traceback)
>> ??? ## Dotted pair list of 3
>> ??? ##? $ : chr [1:2500488] "(function (..., collapse = NULL) " ".Internal(paste0(list(...), collapse)))(.Primitive(\"abs\"), c(0.718117154669017, " "0.494785501621664, 0.1453434410505, 0.635028422810137, 0.0353180423844606, " "0.688418723642826, 0.889682895969599, 0.728154224809259, 0.292572240810841, " ...
>> ??? ##? $ : chr "do.call(paste0, list(abs, x))"
>> ??? ##? $ : chr "system.time(do.call(paste0, list(abs, x)))"
>>
>> The first time I noticed this I thought my session had frozen/crashed
>> as the standard interrupt ^C does not work during the deparse.? The
>> stall happens when on error the call stack is deparsed prior to being
>> saved to `.Traceback`.? The deparsing is done by `deparse1m` in native
>> code, with the value of `getOption('deparse.max.lines')` which
>> defaults to all lines.
>>
>> Since there is little value to seeing millions of lines of deparsed
>> objects in `traceback()`, a simple work-around is to change the
>> `deparse.max.lines` value:
>>
>> ??? options(deparse.max.lines=1)
>> ??? system.time(do.call(paste0, list(abs, x)))
>> ??? ## Error in (function (..., collapse = NULL)? :
>> ??? ##?? cannot coerce type 'builtin' to vector of type 'character'
>> ??? ## Calls: system.time -> do.call -> <Anonymous>
>> ??? ## Timing stopped at: 0 0 0
>>
>> Unfortunately this will affect all `deparse` calls, and it seems
>> undesirable to pre-emptively enable it just for calls that might cause
>> large deparses on error.
>>
>> An alternative is to store the actual calls instead of their deparsed
>> character equivalents in `.Traceback`.? This defers the deparsing to
>> when `traceback()` is used.? As per `?traceback`, it should be
>> relatively safe to modify `.Traceback` in this way:
>>
>>> It is undocumented where .Traceback is stored nor that it is
>>> visible, and this is subject to change.
>>
>> Deferring the deparsing to `traceback()` will give us the?
>> opportunity to use a different `max.lines` setting as we do here
>> with the patch applied:
>>
>> ??? system.time(do.call(paste0, list(abs, x)))
>> ??? ## Error in (function (..., collapse = NULL)? :
>> ??? ##?? cannot coerce type 'builtin' to vector of type 'character'
>> ??? ## Timing stopped at: 0.028 0 0.029
>>
>> ??? system.time(traceback(max.lines=3))
>> ??? ## 3: (function (..., collapse = NULL)
>> ??? ##??? .Internal(paste0(list(...), collapse)))(.Primitive("abs"), c(0.535468587651849,
>> ??? ##??? 0.0540027911774814, 0.732930393889546, 0.565360915614292, 0.544816034380347,
>> ??? ##???? ...
>> ??? ## 2: do.call(paste0, list(abs, x))
>> ??? ## 1: system.time(do.call(paste0, list(abs, x)))
>> ??? ##??? user? system elapsed
>> ??? ##?? 0.000?? 0.000?? 0.003
>>
>>
>> More generally, it might be better to have a different smaller default
>> value for the lines to deparse when calls? are _displayed_ as parts of
>> lists, as is the case with `traceback()`, or in `print(sys.calls())` and
>> similar.
>>
>> I attach a patch that does this.? I have run some basic tests
>> and `make check-devel` passes. I can file an issue on bugzilla
>> if that is a better place to have this conversation (assuming there
>> is interest in it).
>>
>> Best,
>>
>> Brodie
>>
>> PS: for some reason my mail client is refusing to attach the patch so I paste it
>> starting on the next line.
>> Index: src/gnuwin32/Rdll.hide
>> ===================================================================
>> --- src/gnuwin32/Rdll.hide?? ?(revision 76827)
>> +++ src/gnuwin32/Rdll.hide?? ?(working copy)
>> @@ -94,6 +94,7 @@
>> ? R_GetMaxNSize
>> ? R_GetMaxVSize
>> ? R_GetTraceback
>> + R_GetTracebackParsed
>> ? R_GetVarLocSymbol
>> ? R_GetVarLocValue
>> ? R_HandlerStack
>> Index: src/include/Defn.h
>> ===================================================================
>> --- src/include/Defn.h?? ?(revision 76827)
>> +++ src/include/Defn.h?? ?(working copy)
>> @@ -1296,6 +1296,7 @@
>> ?void NORET ErrorMessage(SEXP, int, ...);
>> ?void WarningMessage(SEXP, R_WARNING, ...);
>> ?SEXP R_GetTraceback(int);
>> +SEXP R_GetTracebackParsed(int);
>> ?
>> ?R_size_t R_GetMaxVSize(void);
>> ?void R_SetMaxVSize(R_size_t);
>> Index: src/library/base/R/traceback.R
>> ===================================================================
>> --- src/library/base/R/traceback.R?? ?(revision 76827)
>> +++ src/library/base/R/traceback.R?? ?(working copy)
>> @@ -16,9 +16,19 @@
>> ?#? A copy of the GNU General Public License is available at
>> ?#? https://www.R-project.org/Licenses/
>> ?
>> -.traceback <- function(x = NULL) {
>> -??? if(is.null(x) && !is.null(x <- get0(".Traceback", envir = baseenv())))
>> -?? ?{}
>> +.traceback <- function(x = NULL, max.lines=getOption("deparse.max.lines")) {
>> +??? if(!(is.numeric(max.lines) && !is.na(max.lines) &&
>> +???????? as.integer(max.lines) > 0L)
>> +??? ) {
>> +??????? max.lines <- -1L
>> +??? }
>> +??? if(is.null(x) && !is.null(x <- get0(".Traceback", envir = baseenv()))) {
>> +??????? for(i in seq_along(x)) {
>> +??????????? srcref <- attr(x[[i]], 'srcref')
>> +??????????? x[[i]] <- deparse(x[[i]], nlines=max.lines)
>> +??????????? attr(x[[i]], 'srcref') <- srcref
>> +??????? }
>> +??? }
>> ???? else if (is.numeric(x))
>> ??? ??? ?x <- .Internal(traceback(x))
>> ???? x
>> @@ -26,7 +36,16 @@
>> ?
>> ?traceback <- function(x = NULL, max.lines = getOption("deparse.max.lines"))
>> ?{
>> -??? n <- length(x <- .traceback(x))
>> +??? valid.max.lines <- is.numeric(max.lines) && !is.na(max.lines) &&
>> +???????? as.integer(max.lines) > 0L
>> +
>> +??? if(valid.max.lines) {
>> +??????? # max.lines + 1L so we can know that output was truncated by .traceback
>> +??????? max.lines.2 <- as.integer(max.lines) + 1L
>> +??? } else {
>> +??????? max.lines.2 <- -1L
>> +??? }
>> +??? n <- length(x <- .traceback(x, max.lines=max.lines.2))
>> ???? if(n == 0L)
>> ???????? cat(gettext("No traceback available"), "\n")
>> ???? else {
>> @@ -40,7 +59,7 @@
>> ???????????????? paste0(" at ", basename(srcfile$filename), "#", srcref[1L])
>> ???????????? }
>> ???????????? ## Truncate deparsed code (destroys attributes of xi)
>> -??????????? if(is.numeric(max.lines) && max.lines > 0L && max.lines < m) {
>> +??????????? if(valid.max.lines &&? max.lines < m) {
>> ???????????????? xi <- c(xi[seq_len(max.lines)], " ...")
>> ???????????????? m <- length(xi)
>> ???????????? }
>> Index: src/library/base/man/traceback.Rd
>> ===================================================================
>> --- src/library/base/man/traceback.Rd?? ?(revision 76827)
>> +++ src/library/base/man/traceback.Rd?? ?(working copy)
>> @@ -21,7 +21,7 @@
>> ?}
>> ?\usage{
>> ?traceback(x = NULL, max.lines = getOption("deparse.max.lines"))
>> -.traceback(x = NULL)
>> +.traceback(x = NULL, max.lines = getOption("deparse.max.lines"))
>> ?}
>> ?\arguments{
>> ?? \item{x}{\code{NULL} (default, meaning \code{.Traceback}), or an
>> Index: src/main/errors.c
>> ===================================================================
>> --- src/main/errors.c?? ?(revision 76827)
>> +++ src/main/errors.c?? ?(working copy)
>> @@ -1008,7 +1008,7 @@
>> ??? ??? (which should not happen) */
>> ??? ?if (traceback && inError < 2 && inError == oldInError) {
>> ??? ???? inError = 2;
>> -?? ???? PROTECT(s = R_GetTraceback(0));
>> +?? ???? PROTECT(s = R_GetTracebackParsed(0));
>> ??? ???? SET_SYMVALUE(install(".Traceback"), s);
>> ??? ???? /* should have been defineVar
>> ??? ??????? setVar(install(".Traceback"), s, R_GlobalEnv); */
>> @@ -1440,9 +1440,11 @@
>> ??? ?PrintWarnings();
>> ???? }
>> ?}
>> -
>> +/*
>> + * Return the traceback without deparsing the calls
>> + */
>> ?attribute_hidden
>> -SEXP R_GetTraceback(int skip)
>> +SEXP R_GetTracebackParsed(int skip)
>> ?{
>> ???? int nback = 0, ns;
>> ???? RCNTXT *c;
>> @@ -1467,7 +1469,9 @@
>> ??? ???? if (skip > 0)
>> ??? ??? ?skip--;
>> ??? ???? else {
>> -?? ??? ?SETCAR(t, deparse1m(c->call, 0, DEFAULTDEPARSE));
>> +??????????????? // Extra paranoid PROTECTS
>> +?? ??? ?SETCAR(t, PROTECT(duplicate(c->call)));
>> +??????????????? UNPROTECT(1);
>> ??? ??? ?if (c->srcref && !isNull(c->srcref)) {
>> ??? ??? ???? SEXP sref;
>> ??? ??? ???? if (c->srcref == R_InBCInterpreter)
>> @@ -1482,7 +1486,26 @@
>> ???? UNPROTECT(1);
>> ???? return s;
>> ?}
>> +/*
>> + * Return the traceback with calls deparsed
>> + */
>> +attribute_hidden
>> +SEXP R_GetTraceback(int skip)
>> +{
>> +??? int nback = 0;
>> +??? SEXP s, t, u, v;
>> +??? s = PROTECT(R_GetTracebackParsed(skip));
>> +??? for(t = s; t != R_NilValue; t = CDR(t)) nback++;
>> +??? u = v = PROTECT(allocList(nback));
>> ?
>> +??? for(t = s; t != R_NilValue; t = CDR(t), v=CDR(v)) {
>> +??????? SETCAR(v, PROTECT(deparse1m(CAR(t), 0, DEFAULTDEPARSE)));
>> +??????? UNPROTECT(1);
>> +??? }
>> +??? UNPROTECT(1);
>> +??? return u;
>> +}
>> +
>> ?SEXP attribute_hidden do_traceback(SEXP call, SEXP op, SEXP args, SEXP rho)
>> ?{
>> ???? int skip;
>
>>
>> ______________________________________________
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>
>
>

-- 
Luke Tierney
Ralph E. Wareham Professor of Mathematical Sciences
University of Iowa                  Phone:             319-335-3386
Department of Statistics and        Fax:               319-335-3017
    Actuarial Science
241 Schaeffer Hall                  email:   luke-tierney at uiowa.edu
Iowa City, IA 52242                 WWW:  http://www.stat.uiowa.edu

From ru|pb@rr@d@@ @end|ng |rom @@po@pt  Mon Jul 15 16:59:14 2019
From: ru|pb@rr@d@@ @end|ng |rom @@po@pt (Rui Barradas)
Date: Mon, 15 Jul 2019 15:59:14 +0100
Subject: [Rd] 
 Possible bug in `class<-` when a class-specific '[[.' method
 is defined
In-Reply-To: <d66b7f9e-98b2-f43e-e80f-031319582353@gmail.com>
References: <1be44ffeed8e46619c57a9f8fae974b6@epfl.ch>
 <747cf507-e25b-d05f-366d-7f1ea2ddcbcd@gmail.com>
 <00442d3d-9d4e-8f0d-b32d-c11d138de8d0@sapo.pt>
 <d66b7f9e-98b2-f43e-e80f-031319582353@gmail.com>
Message-ID: <00ba68f4-7438-7873-9c18-70ac0712d12e@sapo.pt>

Hello,

Inline.

?s 14:26 de 15/07/19, Duncan Murdoch escreveu:
> On 15/07/2019 8:57 a.m., Rui Barradas wrote:
>> Hello,
>>
>> Clean R 3.6.1 session on Ubuntu 19.04, RStudio 1.1.453. sessionInfo() at
>> the end.
> 
> That's not what I'd call a "clean session" with all those packages loaded:

You are right, but when I wrote that it *was* clean. Then, for some 
reason I don't understand, RStudio loaded them all. Guess I'll have to 
check what is going on here.

> 
>> loaded via a namespace (and not attached):
>> ??? [1] sos_2.0-0?????????? nlme_3.1-140??????? matrixStats_0.54.0
>> ??? [4] fs_1.2.7??????????? xts_0.11-2????????? usethis_1.5.0
>> ??? [7] lubridate_1.7.4???? devtools_2.0.2????? RColorBrewer_1.1-2
>> ?? [10] rprojroot_1.3-2???? rbenchmark_1.0.0??? tools_3.6.1
>> ?? [13] backports_1.1.4???? R6_2.4.0??????????? rpart_4.1-15
>> ?? [16] Hmisc_4.2-0???????? lazyeval_0.2.2????? colorspace_1.4-1
>> ?? [19] nnet_7.3-12???????? npsurv_0.4-0??????? withr_2.1.2
>> ?? [22] tidyselect_0.2.5??? gridExtra_2.3?????? prettyunits_1.0.2
>> ?? [25] processx_3.3.0????? curl_3.3??????????? compiler_3.6.1
>> ?? [28] cli_1.1.0?????????? htmlTable_1.13.1??? randomNames_1.4-0.0
>> ?? [31] dvmisc_1.1.3??????? desc_1.2.0????????? tseries_0.10-46
>> ?? [34] scales_1.0.0??????? checkmate_1.9.1???? lmtest_0.9-36
>> ?? [37] fracdiff_1.4-2????? mvtnorm_1.0-10????? quadprog_1.5-6
>> ?? [40] callr_3.2.0???????? stringr_1.4.0?????? digest_0.6.18
>> ?? [43] foreign_0.8-71????? rio_0.5.16????????? base64enc_0.1-3
>> ?? [46] stocks_1.1.4??????? pkgconfig_2.0.2???? htmltools_0.3.6
>> ?? [49] sessioninfo_1.1.1?? readxl_1.3.1??????? htmlwidgets_1.3
>> ?? [52] rlang_0.3.4???????? TTR_0.23-4????????? rstudioapi_0.10
>> ?? [55] quantmod_0.4-14???? MLmetrics_1.1.1???? zoo_1.8-5
>> ?? [58] zip_2.0.1?????????? acepack_1.4.1?????? dplyr_0.8.0.1
>> ?? [61] car_3.0-2?????????? magrittr_1.5??????? Formula_1.2-3
>> ?? [64] Matrix_1.2-17?????? Rcpp_1.0.1????????? munsell_0.5.0
>> ?? [67] abind_1.4-5???????? stringi_1.4.3?????? forecast_8.6
>> ?? [70] yaml_2.2.0????????? carData_3.0-2?????? MASS_7.3-51.3
>> ?? [73] pkgbuild_1.0.3????? plyr_1.8.4????????? grid_3.6.1
>> ?? [76] parallel_3.6.1????? forcats_0.4.0?????? crayon_1.3.4
>> ?? [79] lattice_0.20-38???? haven_2.1.0???????? splines_3.6.1
>> ?? [82] hms_0.4.2?????????? knitr_1.22????????? ps_1.3.0
>> ?? [85] pillar_1.4.0??????? pkgload_1.0.2?????? urca_1.3-0
>> ?? [88] glue_1.3.1????????? lsei_1.2-0????????? babynames_1.0.0
>> ?? [91] latticeExtra_0.6-28 data.table_1.12.2?? remotes_2.0.4
>> ?? [94] cellranger_1.1.0??? testthat_2.1.0????? gtable_0.3.0
>> ?? [97] purrr_0.3.2???????? assertthat_0.2.1??? ggplot2_3.1.1
>> [100] openxlsx_4.1.0????? xfun_0.6??????????? survey_3.35-1
>> [103] survival_2.44-1.1?? timeDate_3043.102?? tibble_2.1.1
>> [106] memoise_1.1.0?????? cluster_2.0.8?????? toOrdinal_1.1-0.0
>> [109] fitdistrplus_1.0-14 brew_1.0-6
>>
>>
> 
> However, even when I load almost all of those, I don't see the problem. 
> I've got the same R version, and a newer Rstudio version (mine is 
> 1.2.1335 on a Mac).? I couldn't load ] "latticeExtradata.table" and 
> "fitdistrplusbrew", and I didn't check my package versions against yours.
> 
> I'd suspect the issue is with RStudio somehow, because it needs to do a 
> lot to maintain its environment view.? Do you see this when running R 
> from the command line?
> 
> Duncan Murdoch
> 

It's a RStudio thing.
Tested with

Rscript --vanilla test.R


the result is the expected one.
(test.R has the obvious contents.)


Rui Barradas


From @zwj|08 @end|ng |rom gm@||@com  Mon Jul 15 17:39:03 2019
From: @zwj|08 @end|ng |rom gm@||@com (King Jiefei)
Date: Mon, 15 Jul 2019 11:39:03 -0400
Subject: [Rd] strange increase in the reference number
In-Reply-To: <1560340370.1405063.1563041970724@mail.yahoo.com>
References: <CAGiFhPPT8UUjB0shOOfWZcNBwFiVWq68T=B23WhMJrVaQyY6Tg@mail.gmail.com>
 <f037fedf-5f42-12d7-547b-33d431e8ef9b@gmail.com>
 <CAD4oTHHpMDLyONhKyTZcULG_2CpRH_PDZKB8VkSB3+2uhz-cKw@mail.gmail.com>
 <1560340370.1405063.1563041970724@mail.yahoo.com>
Message-ID: <CAGiFhPMaTH+p7rCd9=b9dR5FPu5227jUwh79-9SrDcTyJ+-fyw@mail.gmail.com>

Hi Duncan, Gabriel, and Brodie

Thanks for the explanations and references. Brodie's blog talks about
exactly the same problem without involving too many technical details. I
would recommend to read it if anyone is interested in it. I really
appreciate all of you guys' answers.


Best,
Jiefei

On Sat, Jul 13, 2019 at 2:19 PM brodie gaslam via R-devel <
r-devel at r-project.org> wrote:

> Re ENSURE_NAMEDMAX, I am unsure but think this happens in (src/eval.c at 492
> ):
>  static SEXP forcePromise(SEXP e)
> {
>     if (PRVALUE(e) == R_UnboundValue) {
>     /* ... SNIP ...*/
>     val = eval(PRCODE(e), PRENV(e));
>     /* ... SNIP ...*/
>     SET_PRSEEN(e, 0);
>     SET_PRVALUE(e, val);
>     ENSURE_NAMEDMAX(val);                 <<<<<<< HERE
>     SET_PRENV(e, R_NilValue);
>     }
>     return PRVALUE(e);
> }
>
> as part of the evaluations of the closure.  `forcePromise` is called
> ineval (src/eval.c at 656).  It's been a while since I've looked at the
> mechanicsof how the native version of `eval` works so I could be completely
> wrong.
>
> B.
>
> PS: line references are in r-devel at 76287.
>
>
> On Friday, July 12, 2019, 4:38:06 PM EDT, Gabriel Becker <
> gabembecker at gmail.com> wrote:
>
>
>
>
>
> Hi Jiefei and Duncan,
>
> I suspect what is likely happening is that one of  ENSURE_NAMEDMAX or
> MARK_NOT_MUTABLE are being hit for x. These used to set named to 3, but now
> set it to 7 (ie the previous and current NAMEDMAX  value, respectively).
>
> Because these are macros rather than C functions, its not easy to figure
> out why one of them is being invoked from do_isvector  (a cursory
> exploration didn't reveal what was going on, at least to me) and I don't
> have the time to dig super deeply into this right now,  but perhaps Luke or
> Tomas know why this is happening of the top of their head.
>
> Sorry I can't be of more help.
>
> ~G
>
>
>
> On Fri, Jul 12, 2019 at 11:47 AM Duncan Murdoch <murdoch.duncan at gmail.com>
> wrote:
>
> > On 12/07/2019 1:22 p.m., King Jiefei wrote:
> > > Hi,
> > >
> > > I just found a strange increase in the reference number and I'm
> wondering
> > > if there is any reason for it, here is the code.
> > >
> > >> a=c(1,2,3)
> > >> .Internal(inspect(a))
> > > @0x000000001bf0b9b0 14 REALSXP g0c3 [NAM(1)] (len=3, tl=0) 1,2,3
> > >> is.vector(a)
> > > [1] TRUE
> > >> .Internal(inspect(a))
> > > @0x000000001bf0b9b0 14 REALSXP g0c3 [NAM(7)] (len=3, tl=0) 1,2,3
> > >
> > > The variable *a* initially has one reference number, after calling
> > > *is.vector* function, the reference number goes to 7, which I believe
> is
> > > the highest number that is allowed in R.  I also tried the other R
> > > functions, *is.atomic, is.integer* and *is.numeric* do not increase the
> > > reference number, but *typeof *will do. Is it intentional?
> >
> > is.vector() is a closure that calls .Internal.  is.atomic(),
> > is.integer() and is.numeric() are all primitives.
> >
> > Generally speaking closures that call .Internal are easier to implement
> > (e.g. is.vector can use the regular mechanism to set a default for its
> > second argument), but less efficient in CPU time.  From it's help page,
> > it appears that the logic for is.vector() is a lot more complex than for
> > the others, so that implementation does make sense.
> >
> > So why does NAMED go to 7?  Initially, the vector is bound to a.  Within
> > is.vector, it is bound to the local variable x.  At this point there are
> > two names bound to the same object, so it has to be considered
> > immutable.  There's really no difference between any of the values of 2
> > or more in the memory manager.  (But see
> > http://developer.r-project.org/Refcnt.html for some plans.  That
> > document is from about 5 years ago; I don't know the current state.)
> >
> > Duncan Murdoch
> >
> > ______________________________________________
> > R-devel at r-project.org mailing list
> > https://stat.ethz.ch/mailman/listinfo/r-devel
> >
>
>     [[alternative HTML version deleted]]
>
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>         [[alternative HTML version deleted]]
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>

	[[alternative HTML version deleted]]


From edd @end|ng |rom deb|@n@org  Mon Jul 15 17:56:56 2019
From: edd @end|ng |rom deb|@n@org (Dirk Eddelbuettel)
Date: Mon, 15 Jul 2019 10:56:56 -0500
Subject: [Rd] R-Forge > GitHub?
In-Reply-To: <f1119591-dffc-986f-06c5-661def1ad0e4@prodsyse.com>
References: <71f66de5-e1aa-5649-b07a-6cf79f9b07bc@prodsyse.com>
 <89645BC9-C6BF-4E57-8AA0-9F426BA8AC5E@rstudio.com>
 <CA+rDMK+HXUKnA0j49czOf99M62QBfnyO36Sf1MBEe8a5AO-+XA@mail.gmail.com>
 <06a9569b-5b68-a288-8c4f-1537120a5213@prodsyse.com>
 <CABtg=Km5cdEWyUM55FEiabNdZdHvJoELHZ7RCRMPgQhUg9Gc6w@mail.gmail.com>
 <6d983b3b-62ea-3bb9-724a-01baaff51e70@gmail.com>
 <fb319697-6408-17b5-30a1-7a8f9d8da928@prodsyse.com>
 <CAMMJQ0a7ZtndwL8YYas6+k3BRDtAFizAuaacONQ6i6HmrQMTeA@mail.gmail.com>
 <3f01d7bc-ed20-1a39-25bc-ce7d34e22398@prodsyse.com>
 <CAFDcVCR9=WMJRmT3RVZxaQaWxQ4EciojC5ct4K=PrSjuJKtKNw@mail.gmail.com>
 <c9f1e823-9384-1f9f-0d70-e6ccbe8e9075@prodsyse.com>
 <CAPPM_gQ6Ef0+FYz0NrywwiPyW9O2Wwcms8sbmQATp-jcgyYhBA@mail.gmail.com>
 <CAPPM_gQm4JEDZnqg1xPN8U7j2y76=bBNsmxB0dAm0Z7ujmrXzQ@mail.gmail.com>
 <593d5e40-611e-3fcc-c131-6fb7de1130b9@prodsyse.com>
 <CAMMJQ0a0ONoBnZnnn9wq3a4ey336t24CTLrf_RZS99u_hMKrjA@mail.gmail.com>
 <a896f66e-6727-cb45-9cd6-60c7ffdc2d9f@prodsyse.com>
 <f1119591-dffc-986f-06c5-661def1ad0e4@prodsyse.com>
Message-ID: <23852.41544.642632.563143@rob.eddelbuettel.com>


On 14 July 2019 at 13:08, Spencer Graves wrote:
| for that.? I lost the history in doing so, but I can live without that 
| history.

Well many of us imported svn repos into git repos. And my favourite example
is still ESS as it has history back to 1997 (!!) thanks to cvs2svn
pre-filling its svn history which became the git history.

| https://github.com/sbgraves237/Ecdat".? I changed that line to read "url 
| = https://sbgraves237:password at github.com/sbgraves237/Ecdat" (where 
| "password" is my GitHub password, which I had to change to make it work 

Don't write passwords down like this. Your error is likely in expecting _ssh_
authentication over _https_ -- when it works only over ssh. Use the alternate
form for a remote e.g. one that looks like git at github.com:emacs-ess/ESS.git

Hth, Dirk

-- 
http://dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org


From kev|nu@hey @end|ng |rom gm@||@com  Mon Jul 15 18:19:19 2019
From: kev|nu@hey @end|ng |rom gm@||@com (Kevin Ushey)
Date: Mon, 15 Jul 2019 09:19:19 -0700
Subject: [Rd] 
 Possible bug in `class<-` when a class-specific '[[.' method
 is defined
In-Reply-To: <00ba68f4-7438-7873-9c18-70ac0712d12e@sapo.pt>
References: <1be44ffeed8e46619c57a9f8fae974b6@epfl.ch>
 <747cf507-e25b-d05f-366d-7f1ea2ddcbcd@gmail.com>
 <00442d3d-9d4e-8f0d-b32d-c11d138de8d0@sapo.pt>
 <d66b7f9e-98b2-f43e-e80f-031319582353@gmail.com>
 <00ba68f4-7438-7873-9c18-70ac0712d12e@sapo.pt>
Message-ID: <CAJXgQP2K4FB43-75AXKVJHaaz0S3U0Az8+TY8svBSQUE+v5QdA@mail.gmail.com>

When RStudio builds the Environment pane, it will evaluate some R code
on objects in your global environment (as you have seen). In
particular, for better or worse, it calls `str()` on objects in the
global environment, to get a short text summary of the object.

So, to reproduce what you're seeing in a plain R session, you can check:

> counttt
[1] 0
> str(df)
Classes 'MYCLASS' and 'data.frame':     5 obs. of  4 variables:
 $ V1: int  1 2 3 4 5
 $ V2: int  6 7 8 9 10
 $ V3: int  11 12 13 14 15
 $ V4: int  16 17 18 19 20
> counttt
[1] 9

Newer versions will allow you to disable the Environment pane if you
so desire, since calling `str()` can have these kinds of undesirable
side effects in some cases.

In general though, if you're reporting a bug in R (as opposed to
RStudio) it's best to verify that you can reproduce the issue in a
'plain' R session (e.g. in the terminal) to be absolutely sure you're
seeing an R issue as opposed to an RStudio issue, as I imagine the
last thing R Core wants to do is spend time tracking down an issue
only to find it was in RStudio rather than R itself...

If you want to follow up further with the RStudio team I'd recommend
making a post at https://community.rstudio.com/c/rstudio-ide.

Thanks,
Kevin

On Mon, Jul 15, 2019 at 7:59 AM Rui Barradas <ruipbarradas at sapo.pt> wrote:
>
> Hello,
>
> Inline.
>
> ?s 14:26 de 15/07/19, Duncan Murdoch escreveu:
> > On 15/07/2019 8:57 a.m., Rui Barradas wrote:
> >> Hello,
> >>
> >> Clean R 3.6.1 session on Ubuntu 19.04, RStudio 1.1.453. sessionInfo() at
> >> the end.
> >
> > That's not what I'd call a "clean session" with all those packages loaded:
>
> You are right, but when I wrote that it *was* clean. Then, for some
> reason I don't understand, RStudio loaded them all. Guess I'll have to
> check what is going on here.
>
> >
> >> loaded via a namespace (and not attached):
> >>     [1] sos_2.0-0           nlme_3.1-140        matrixStats_0.54.0
> >>     [4] fs_1.2.7            xts_0.11-2          usethis_1.5.0
> >>     [7] lubridate_1.7.4     devtools_2.0.2      RColorBrewer_1.1-2
> >>    [10] rprojroot_1.3-2     rbenchmark_1.0.0    tools_3.6.1
> >>    [13] backports_1.1.4     R6_2.4.0            rpart_4.1-15
> >>    [16] Hmisc_4.2-0         lazyeval_0.2.2      colorspace_1.4-1
> >>    [19] nnet_7.3-12         npsurv_0.4-0        withr_2.1.2
> >>    [22] tidyselect_0.2.5    gridExtra_2.3       prettyunits_1.0.2
> >>    [25] processx_3.3.0      curl_3.3            compiler_3.6.1
> >>    [28] cli_1.1.0           htmlTable_1.13.1    randomNames_1.4-0.0
> >>    [31] dvmisc_1.1.3        desc_1.2.0          tseries_0.10-46
> >>    [34] scales_1.0.0        checkmate_1.9.1     lmtest_0.9-36
> >>    [37] fracdiff_1.4-2      mvtnorm_1.0-10      quadprog_1.5-6
> >>    [40] callr_3.2.0         stringr_1.4.0       digest_0.6.18
> >>    [43] foreign_0.8-71      rio_0.5.16          base64enc_0.1-3
> >>    [46] stocks_1.1.4        pkgconfig_2.0.2     htmltools_0.3.6
> >>    [49] sessioninfo_1.1.1   readxl_1.3.1        htmlwidgets_1.3
> >>    [52] rlang_0.3.4         TTR_0.23-4          rstudioapi_0.10
> >>    [55] quantmod_0.4-14     MLmetrics_1.1.1     zoo_1.8-5
> >>    [58] zip_2.0.1           acepack_1.4.1       dplyr_0.8.0.1
> >>    [61] car_3.0-2           magrittr_1.5        Formula_1.2-3
> >>    [64] Matrix_1.2-17       Rcpp_1.0.1          munsell_0.5.0
> >>    [67] abind_1.4-5         stringi_1.4.3       forecast_8.6
> >>    [70] yaml_2.2.0          carData_3.0-2       MASS_7.3-51.3
> >>    [73] pkgbuild_1.0.3      plyr_1.8.4          grid_3.6.1
> >>    [76] parallel_3.6.1      forcats_0.4.0       crayon_1.3.4
> >>    [79] lattice_0.20-38     haven_2.1.0         splines_3.6.1
> >>    [82] hms_0.4.2           knitr_1.22          ps_1.3.0
> >>    [85] pillar_1.4.0        pkgload_1.0.2       urca_1.3-0
> >>    [88] glue_1.3.1          lsei_1.2-0          babynames_1.0.0
> >>    [91] latticeExtra_0.6-28 data.table_1.12.2   remotes_2.0.4
> >>    [94] cellranger_1.1.0    testthat_2.1.0      gtable_0.3.0
> >>    [97] purrr_0.3.2         assertthat_0.2.1    ggplot2_3.1.1
> >> [100] openxlsx_4.1.0      xfun_0.6            survey_3.35-1
> >> [103] survival_2.44-1.1   timeDate_3043.102   tibble_2.1.1
> >> [106] memoise_1.1.0       cluster_2.0.8       toOrdinal_1.1-0.0
> >> [109] fitdistrplus_1.0-14 brew_1.0-6
> >>
> >>
> >
> > However, even when I load almost all of those, I don't see the problem.
> > I've got the same R version, and a newer Rstudio version (mine is
> > 1.2.1335 on a Mac).  I couldn't load ] "latticeExtradata.table" and
> > "fitdistrplusbrew", and I didn't check my package versions against yours.
> >
> > I'd suspect the issue is with RStudio somehow, because it needs to do a
> > lot to maintain its environment view.  Do you see this when running R
> > from the command line?
> >
> > Duncan Murdoch
> >
>
> It's a RStudio thing.
> Tested with
>
> Rscript --vanilla test.R
>
>
> the result is the expected one.
> (test.R has the obvious contents.)
>
>
> Rui Barradas
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From @pencer@gr@ve@ @end|ng |rom prod@y@e@com  Mon Jul 15 18:41:47 2019
From: @pencer@gr@ve@ @end|ng |rom prod@y@e@com (Spencer Graves)
Date: Mon, 15 Jul 2019 11:41:47 -0500
Subject: [Rd] GitHub passwords in .git/config?
In-Reply-To: <23852.41544.642632.563143@rob.eddelbuettel.com>
References: <71f66de5-e1aa-5649-b07a-6cf79f9b07bc@prodsyse.com>
 <06a9569b-5b68-a288-8c4f-1537120a5213@prodsyse.com>
 <CABtg=Km5cdEWyUM55FEiabNdZdHvJoELHZ7RCRMPgQhUg9Gc6w@mail.gmail.com>
 <6d983b3b-62ea-3bb9-724a-01baaff51e70@gmail.com>
 <fb319697-6408-17b5-30a1-7a8f9d8da928@prodsyse.com>
 <CAMMJQ0a7ZtndwL8YYas6+k3BRDtAFizAuaacONQ6i6HmrQMTeA@mail.gmail.com>
 <3f01d7bc-ed20-1a39-25bc-ce7d34e22398@prodsyse.com>
 <CAFDcVCR9=WMJRmT3RVZxaQaWxQ4EciojC5ct4K=PrSjuJKtKNw@mail.gmail.com>
 <c9f1e823-9384-1f9f-0d70-e6ccbe8e9075@prodsyse.com>
 <CAPPM_gQ6Ef0+FYz0NrywwiPyW9O2Wwcms8sbmQATp-jcgyYhBA@mail.gmail.com>
 <CAPPM_gQm4JEDZnqg1xPN8U7j2y76=bBNsmxB0dAm0Z7ujmrXzQ@mail.gmail.com>
 <593d5e40-611e-3fcc-c131-6fb7de1130b9@prodsyse.com>
 <CAMMJQ0a0ONoBnZnnn9wq3a4ey336t24CTLrf_RZS99u_hMKrjA@mail.gmail.com>
 <a896f66e-6727-cb45-9cd6-60c7ffdc2d9f@prodsyse.com>
 <f1119591-dffc-986f-06c5-661def1ad0e4@prodsyse.com>
 <23852.41544.642632.563143@rob.eddelbuettel.com>
Message-ID: <24877fa2-8f74-1344-c017-e07884e84f85@prodsyse.com>



On 2019-07-15 10:56, Dirk Eddelbuettel wrote:
> <snip>
>
>
> Don't write passwords down like this. Your error is likely in expecting _ssh_
> authentication over _https_ -- when it works only over ssh. Use the alternate
> form for a remote e.g. one that looks like git at github.com:emacs-ess/ESS.git


 ????? I'm confused.? I changed that line to:


 ??? ?? ? ?? url = https://git at github.com:sbgraves237/sbgraves237/Ecdat


 ????? Then when I did "git pull" I got:


fatal: unable to access 
'https://git at github.com:sbgraves237/sbgraves237/Ecdat/': Port number 
ended with 's'


 ??? ? ???
 ??? ? Thanks,
 ??? ? Spencer

> Hth, Dirk
>


From edd @end|ng |rom deb|@n@org  Mon Jul 15 18:49:38 2019
From: edd @end|ng |rom deb|@n@org (Dirk Eddelbuettel)
Date: Mon, 15 Jul 2019 11:49:38 -0500
Subject: [Rd] GitHub passwords in .git/config?
In-Reply-To: <24877fa2-8f74-1344-c017-e07884e84f85@prodsyse.com>
References: <71f66de5-e1aa-5649-b07a-6cf79f9b07bc@prodsyse.com>
 <06a9569b-5b68-a288-8c4f-1537120a5213@prodsyse.com>
 <CABtg=Km5cdEWyUM55FEiabNdZdHvJoELHZ7RCRMPgQhUg9Gc6w@mail.gmail.com>
 <6d983b3b-62ea-3bb9-724a-01baaff51e70@gmail.com>
 <fb319697-6408-17b5-30a1-7a8f9d8da928@prodsyse.com>
 <CAMMJQ0a7ZtndwL8YYas6+k3BRDtAFizAuaacONQ6i6HmrQMTeA@mail.gmail.com>
 <3f01d7bc-ed20-1a39-25bc-ce7d34e22398@prodsyse.com>
 <CAFDcVCR9=WMJRmT3RVZxaQaWxQ4EciojC5ct4K=PrSjuJKtKNw@mail.gmail.com>
 <c9f1e823-9384-1f9f-0d70-e6ccbe8e9075@prodsyse.com>
 <CAPPM_gQ6Ef0+FYz0NrywwiPyW9O2Wwcms8sbmQATp-jcgyYhBA@mail.gmail.com>
 <CAPPM_gQm4JEDZnqg1xPN8U7j2y76=bBNsmxB0dAm0Z7ujmrXzQ@mail.gmail.com>
 <593d5e40-611e-3fcc-c131-6fb7de1130b9@prodsyse.com>
 <CAMMJQ0a0ONoBnZnnn9wq3a4ey336t24CTLrf_RZS99u_hMKrjA@mail.gmail.com>
 <a896f66e-6727-cb45-9cd6-60c7ffdc2d9f@prodsyse.com>
 <f1119591-dffc-986f-06c5-661def1ad0e4@prodsyse.com>
 <23852.41544.642632.563143@rob.eddelbuettel.com>
 <24877fa2-8f74-1344-c017-e07884e84f85@prodsyse.com>
Message-ID: <23852.44706.170899.596853@rob.eddelbuettel.com>


On 15 July 2019 at 11:41, Spencer Graves wrote:
| On 2019-07-15 10:56, Dirk Eddelbuettel wrote:
| >
| > Don't write passwords down like this. Your error is likely in expecting _ssh_
| > authentication over _https_ -- when it works only over ssh. Use the alternate
| > form for a remote e.g. one that looks like git at github.com:emacs-ess/ESS.git
| 
| 
|  ????? I'm confused.? I changed that line to:
| 
| 
|  ??? ?? ? ?? url = https://git at github.com:sbgraves237/sbgraves237/Ecdat
| 
| 
|  ????? Then when I did "git pull" I got:
| 
| 
| fatal: unable to access 
| 'https://git at github.com:sbgraves237/sbgraves237/Ecdat/': Port number 
| ended with 's'

Briefly:

 - Go to your repo.
 - Click the green 'Clone or Download' button.
 - If it shows https, select 'use ssh' in top right.
 - Copy the url:  git at github.com:sbgraves237/Ecfun.git
 - Use it instead of:   https://github.com/sbgraves237/Ecfun.git
 - Don't improvise a new form.  Use theirs.

Hth, Dirk

-- 
http://dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org


From wdun|@p @end|ng |rom t|bco@com  Mon Jul 15 18:55:08 2019
From: wdun|@p @end|ng |rom t|bco@com (William Dunlap)
Date: Mon, 15 Jul 2019 09:55:08 -0700
Subject: [Rd] Potential bug with data.frame replacement
In-Reply-To: <F2511EF0-05DC-46FE-8ABC-7272ED87036C@uwaterloo.ca>
References: <F2511EF0-05DC-46FE-8ABC-7272ED87036C@uwaterloo.ca>
Message-ID: <CAF8bMcZ-La_Mca3Za4kV+_0dhoWVu-OhHGWurKGHvEJrndt5fA@mail.gmail.com>

This may be related to the size of the deparsed call in the error message
that Brodie and Luke were discussing recently on R-devel (" Mitigating
Stalls Caused by Call Deparse on Error").   I don't get a crash, but the
error message itself doesn't show up after the deparsed call.

> X <- sample(letters, 3000, TRUE)
> D <- data.frame(X, 1:3000, X, X, X, X, X)
> D$X1.3000 <- paste0("GSM", D)
Error in `$<-.data.frame`(`*tmp*`, X1.3000, value = c("GSMc(16, 6, 11, 1,
13, 7,
... many lines elided ...
 24, 24, 9, 7, 10, 17, 17, 6, 26, 26, 19, 11, 15, \n12, 9, 25, 17, 21, 24,
12, 14, 21, 23, 11, 7, 8, 11, 7, 10,
> # Note the message part of the error message was not printed
> # Use tryCatch to get the details
> e <- tryCatch(D$X1.3000 <- paste0("GSM", D), error=function(e)e)
> str(e)
List of 2
 $ message: chr "replacement has 7 rows, data has 3000"
 $ call   : language `$<-.data.frame`(`*tmp*`, X1.3000, value = c("GSMc(23,
10, 2, 9, 4, 3, 16, 12, 21, 26, 3, 17, 6, 25, 8, 1, 17, 10| __truncated__
...
 - attr(*, "class")= chr [1:3] "simpleError" "error" "condition"
> nchar(deparse(e$call))
[1] 11068 11036 11023 11023 11023 11021     2


Bill Dunlap
TIBCO Software
wdunlap tibco.com


On Mon, Jul 15, 2019 at 3:25 AM Benjamin Jean-Marie Tremblay <
b2tremblay at uwaterloo.ca> wrote:
>
> Dear R-devel,
>
> I have encountered a crash-inducing scenario and would like to enquire as
to
> whether this would be considered a bug. To reproduce the crash:
>
> X <- sample(letters, 3000, TRUE)
> D <- data.frame(X, 1:3000, X, X, X, X, X)
> D$X1.3000 <- paste0("GSM", D)
>
> The reason why I'm not sure if this would be considered a bug is because I
> typed this by accident, when what I meant was:
>
> D$X1.3000 <- paste0("GSM", D$X1.3000)
>
> I can never image a scenario where I would intentionally perform the
former.
>
> This issue seems to have something to do with the size of the data.frame,
as
> smaller examples will work fine:
>
> D <- data.frame(A = 1:10, B = letters[1:10])
> D$A <- paste0("A", D)
>
> Also just doing the paste0 part without trying to replace a data.frame
column
> not crash R for me.
>
> I can submit this on Bugzilla should this be deemed sufficiently buggy.
>
> I am running 3.6.0 on macOS (x86_64-apple-darwin15.6.0).
>
> Sincerely,
>
> B.T.
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel

	[[alternative HTML version deleted]]


From br|@n @end|ng |rom br@verock@com  Mon Jul 15 19:01:57 2019
From: br|@n @end|ng |rom br@verock@com (Brian G. Peterson)
Date: Mon, 15 Jul 2019 12:01:57 -0500
Subject: [Rd] GitHub passwords in .git/config?
In-Reply-To: <24877fa2-8f74-1344-c017-e07884e84f85@prodsyse.com>
References: <71f66de5-e1aa-5649-b07a-6cf79f9b07bc@prodsyse.com>
 <06a9569b-5b68-a288-8c4f-1537120a5213@prodsyse.com>
 <CABtg=Km5cdEWyUM55FEiabNdZdHvJoELHZ7RCRMPgQhUg9Gc6w@mail.gmail.com>
 <6d983b3b-62ea-3bb9-724a-01baaff51e70@gmail.com>
 <fb319697-6408-17b5-30a1-7a8f9d8da928@prodsyse.com>
 <CAMMJQ0a7ZtndwL8YYas6+k3BRDtAFizAuaacONQ6i6HmrQMTeA@mail.gmail.com>
 <3f01d7bc-ed20-1a39-25bc-ce7d34e22398@prodsyse.com>
 <CAFDcVCR9=WMJRmT3RVZxaQaWxQ4EciojC5ct4K=PrSjuJKtKNw@mail.gmail.com>
 <c9f1e823-9384-1f9f-0d70-e6ccbe8e9075@prodsyse.com>
 <CAPPM_gQ6Ef0+FYz0NrywwiPyW9O2Wwcms8sbmQATp-jcgyYhBA@mail.gmail.com>
 <CAPPM_gQm4JEDZnqg1xPN8U7j2y76=bBNsmxB0dAm0Z7ujmrXzQ@mail.gmail.com>
 <593d5e40-611e-3fcc-c131-6fb7de1130b9@prodsyse.com>
 <CAMMJQ0a0ONoBnZnnn9wq3a4ey336t24CTLrf_RZS99u_hMKrjA@mail.gmail.com>
 <a896f66e-6727-cb45-9cd6-60c7ffdc2d9f@prodsyse.com>
 <f1119591-dffc-986f-06c5-661def1ad0e4@prodsyse.com>
 <23852.41544.642632.563143@rob.eddelbuettel.com>
 <24877fa2-8f74-1344-c017-e07884e84f85@prodsyse.com>
Message-ID: <57345a5415408e3f7acad06b8b5f84330cc112b8.camel@braverock.com>

it would be:

ssh://git at github.com:sbgraves237/Ecdat.git


On Mon, 2019-07-15 at 11:41 -0500, Spencer Graves wrote:
> 
> On 2019-07-15 10:56, Dirk Eddelbuettel wrote:
> > <snip>
> > 
> > 
> > Don't write passwords down like this. Your error is likely in
> > expecting _ssh_
> > authentication over _https_ -- when it works only over ssh. Use the
> > alternate
> > form for a remote e.g. one that looks like git at github.com:emacs-
> > ess/ESS.git
> 
>        I'm confused.  I changed that line to:
> 
> 
>              url = 
> https://git at github.com:sbgraves237/sbgraves237/Ecdat
> 
> 
>        Then when I did "git pull" I got:
> 
> 
> fatal: unable to access 
> 'https://git at github.com:sbgraves237/sbgraves237/Ecdat/': Port number 
> ended with 's'
> 
> 
>        ???
>        Thanks,
>        Spencer
> 
> > Hth, Dirk
> > 
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
-- 
Brian G. Peterson
ph: +1.773.459.4973
im: bgpbraverock


From c|@rk||tzg @end|ng |rom gm@||@com  Mon Jul 15 19:12:51 2019
From: c|@rk||tzg @end|ng |rom gm@||@com (Clark Fitzgerald)
Date: Mon, 15 Jul 2019 10:12:51 -0700
Subject: [Rd] Unexpected behaviour when comparing (==) long quoted
 expressions
In-Reply-To: <548ff578-bd19-aed9-78f5-f4dcd7a2576c@gmail.com>
References: <548ff578-bd19-aed9-78f5-f4dcd7a2576c@gmail.com>
Message-ID: <CAE_rN=2mjLyUJBcxE57KXBCyz2TWVS7QHdcnj4kKbnfvZhT+1w@mail.gmail.com>

Hi Dan,

I wouldn't expect that behavior out of `==` on language objects either.

On a related note, working with R's language objects directly can be
clumsy. That was one of the motivations for Nick Ulle to develop the
rstatic package. https://github.com/nick-ulle/rstatic It lets me write code
that's easier to read and reason about, compared to using the standard
language objects. It behaves as you hoped here:

> s <-
quote(f(x123456789012345678901234567890123456789012345678901234567890, 1))
> u <-
quote(f(x123456789012345678901234567890123456789012345678901234567890, 2))
> s == u
[1] TRUE
> s1 = rstatic::to_ast(s)
> u1 = rstatic::to_ast(u)
> s1 == u1
[1] FALSE

Best,
Clark

On Mon, Jul 15, 2019 at 3:25 AM Daniel Chen <chendaniely at gmail.com> wrote:

> Hi everyone:
>
> I?m one of the interns at RStudio this summer working on a project that
> helps teachers grade student code. I found an unexpected behaviour with
> the |==| operator when comparing |quote|d expressions.
>
> Example 1:
>
> |u <- quote(tidyr::gather(key = key, value = value,
> new_sp_m014:newrel_f65, na.rm = TRUE)) s <- quote(tidyr::gather(key =
> key, value = value, new_sp_m014:newrel_f65, na.rm = FALSE)) u == s #
> TRUE u <- quote(tidyr::gather(key = key, value = value, na.rm = TRUE)) s
> <- quote(tidyr::gather(key = key, value = value, na.rm = FALSE)) u == s
> # FALSE |
>
> Example 2:
>
> |u <-
> quote(f(x123456789012345678901234567890123456789012345678901234567890,
> 1)) s <-
> quote(f(x123456789012345678901234567890123456789012345678901234567890,
> 2)) u == s #> [1] TRUE |
>
> Winston Chang pointed out in the help page for |==|:
>
>     Language objects such as symbols and calls are deparsed to character
>     strings before comparison.
>
> and in the source code that does the comparison [1] shows that It
> deparses each language object and then only extracts the first element
> from the resulting character vector:
>
> |SET_STRING_ELT(tmp, 0, (iS) ? PRINTNAME(x) : STRING_ELT(deparse1(x, 0,
> DEFAULTDEPARSE), 0)); |
>
> Is this a fix that needs to happen within the |==| documentation? or an
> actual bug with the operator?
>
> For more context the original issue we had is here:
> https://github.com/rstudio-education/grader/issues/28
>
> Workaround:
>
> You can get around this issue by using |all.equal| or |identical|
>
> |u <- quote(tidyr::gather(key = key, value = value,
> new_sp_m014:newrel_f65, na.rm = TRUE)) s <- quote(tidyr::gather(key =
> key, value = value, new_sp_m014:newrel_f65, na.rm = FALSE)) u == s #
> TRUE all.equal(u, s) # "target, current do not match when deparsed"
> identical(u, s) # FALSE |
>
> Thanks,
>
> Dan
>
> [1]
>
> https://github.com/wch/r-source/blob/e647f78cb85282263f88ea30c6337b77a30743d9/src/main/relop.c#L140-L155
>
> ?
>
>         [[alternative HTML version deleted]]
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>

	[[alternative HTML version deleted]]


From |uc@r @end|ng |rom |edor@project@org  Mon Jul 15 19:39:39 2019
From: |uc@r @end|ng |rom |edor@project@org (=?UTF-8?Q?I=C3=B1aki_Ucar?=)
Date: Mon, 15 Jul 2019 19:39:39 +0200
Subject: [Rd] Potential bug with data.frame replacement
In-Reply-To: <CAF8bMcZ-La_Mca3Za4kV+_0dhoWVu-OhHGWurKGHvEJrndt5fA@mail.gmail.com>
References: <F2511EF0-05DC-46FE-8ABC-7272ED87036C@uwaterloo.ca>
 <CAF8bMcZ-La_Mca3Za4kV+_0dhoWVu-OhHGWurKGHvEJrndt5fA@mail.gmail.com>
Message-ID: <CALEXWq1PZztTg6FczeoOdmXG8NUw-047mTC8MJbY83fk4_Q-+w@mail.gmail.com>

On Mon, 15 Jul 2019 at 18:55, William Dunlap via R-devel
<r-devel at r-project.org> wrote:
>
> This may be related to the size of the deparsed call in the error message
> that Brodie and Luke were discussing recently on R-devel (" Mitigating
> Stalls Caused by Call Deparse on Error").   I don't get a crash, but the
> error message itself doesn't show up after the deparsed call.

The example crashes with a buffer overflow in systems with
FORTIFY_SOURCE=2 (i.e., official R package in most Linux
distributions).

I?aki


From @pencer@gr@ve@ @end|ng |rom prod@y@e@com  Mon Jul 15 19:48:46 2019
From: @pencer@gr@ve@ @end|ng |rom prod@y@e@com (Spencer Graves)
Date: Mon, 15 Jul 2019 12:48:46 -0500
Subject: [Rd] GitHub passwords in .git/config?
In-Reply-To: <57345a5415408e3f7acad06b8b5f84330cc112b8.camel@braverock.com>
References: <71f66de5-e1aa-5649-b07a-6cf79f9b07bc@prodsyse.com>
 <6d983b3b-62ea-3bb9-724a-01baaff51e70@gmail.com>
 <fb319697-6408-17b5-30a1-7a8f9d8da928@prodsyse.com>
 <CAMMJQ0a7ZtndwL8YYas6+k3BRDtAFizAuaacONQ6i6HmrQMTeA@mail.gmail.com>
 <3f01d7bc-ed20-1a39-25bc-ce7d34e22398@prodsyse.com>
 <CAFDcVCR9=WMJRmT3RVZxaQaWxQ4EciojC5ct4K=PrSjuJKtKNw@mail.gmail.com>
 <c9f1e823-9384-1f9f-0d70-e6ccbe8e9075@prodsyse.com>
 <CAPPM_gQ6Ef0+FYz0NrywwiPyW9O2Wwcms8sbmQATp-jcgyYhBA@mail.gmail.com>
 <CAPPM_gQm4JEDZnqg1xPN8U7j2y76=bBNsmxB0dAm0Z7ujmrXzQ@mail.gmail.com>
 <593d5e40-611e-3fcc-c131-6fb7de1130b9@prodsyse.com>
 <CAMMJQ0a0ONoBnZnnn9wq3a4ey336t24CTLrf_RZS99u_hMKrjA@mail.gmail.com>
 <a896f66e-6727-cb45-9cd6-60c7ffdc2d9f@prodsyse.com>
 <f1119591-dffc-986f-06c5-661def1ad0e4@prodsyse.com>
 <23852.41544.642632.563143@rob.eddelbuettel.com>
 <24877fa2-8f74-1344-c017-e07884e84f85@prodsyse.com>
 <57345a5415408e3f7acad06b8b5f84330cc112b8.camel@braverock.com>
Message-ID: <337480ef-ebfd-7438-a5b3-23f9f5080451@prodsyse.com>

I'm diverging:? Now I get:


 >>> git pull
ssh: Could not resolve hostname github.com:sbgraves237: nodename nor 
servname provided, or not known
fatal: Could not read from remote repository.

Please make sure you have the correct access rights
and the repository exists.


 ????? ** With .git/config as follows:


[core]
 ??? repositoryformatversion = 0
 ??? filemode = true
 ??? bare = false
 ??? logallrefupdates = true
 ??? ignorecase = true
 ??? precomposeunicode = true
[remote "origin"]
 ??? url = ssh://git at github.com:sbgraves237/Ecdat.git
 ??? fetch = +refs/heads/*:refs/remotes/origin/*
[branch "master"]
 ??? remote = origin
 ??? merge = refs/heads/master


 ????? I have an SSH key on my GitHub account, which says it was "Added 
on Jul 3, 2019 Last used within the last 2 weeks ? Read/write".


 ????? Should I delete my current local copies and clone them fresh from 
GitHub?
 ????? Spencer


On 2019-07-15 12:01, Brian G. Peterson wrote:
> it would be:
>
> ssh://git at github.com:sbgraves237/Ecdat.git
>
>
> On Mon, 2019-07-15 at 11:41 -0500, Spencer Graves wrote:
>> On 2019-07-15 10:56, Dirk Eddelbuettel wrote:
>>> <snip>
>>>
>>>
>>> Don't write passwords down like this. Your error is likely in
>>> expecting _ssh_
>>> authentication over _https_ -- when it works only over ssh. Use the
>>> alternate
>>> form for a remote e.g. one that looks like git at github.com:emacs-
>>> ess/ESS.git
>>         I'm confused.  I changed that line to:
>>
>>
>>               url =
>> https://git at github.com:sbgraves237/sbgraves237/Ecdat
>>
>>
>>         Then when I did "git pull" I got:
>>
>>
>> fatal: unable to access
>> 'https://git at github.com:sbgraves237/sbgraves237/Ecdat/': Port number
>> ended with 's'
>>
>>
>>         ???
>>         Thanks,
>>         Spencer
>>
>>> Hth, Dirk
>>>
>> ______________________________________________
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel


From M@rce|@R@mo@ @end|ng |rom ro@we||p@rk@org  Mon Jul 15 19:54:01 2019
From: M@rce|@R@mo@ @end|ng |rom ro@we||p@rk@org (Marcel Ramos)
Date: Mon, 15 Jul 2019 17:54:01 +0000
Subject: [Rd] GitHub passwords in .git/config?
In-Reply-To: <337480ef-ebfd-7438-a5b3-23f9f5080451@prodsyse.com>
References: <71f66de5-e1aa-5649-b07a-6cf79f9b07bc@prodsyse.com>
 <6d983b3b-62ea-3bb9-724a-01baaff51e70@gmail.com>
 <fb319697-6408-17b5-30a1-7a8f9d8da928@prodsyse.com>
 <CAMMJQ0a7ZtndwL8YYas6+k3BRDtAFizAuaacONQ6i6HmrQMTeA@mail.gmail.com>
 <3f01d7bc-ed20-1a39-25bc-ce7d34e22398@prodsyse.com>
 <CAFDcVCR9=WMJRmT3RVZxaQaWxQ4EciojC5ct4K=PrSjuJKtKNw@mail.gmail.com>
 <c9f1e823-9384-1f9f-0d70-e6ccbe8e9075@prodsyse.com>
 <CAPPM_gQ6Ef0+FYz0NrywwiPyW9O2Wwcms8sbmQATp-jcgyYhBA@mail.gmail.com>
 <CAPPM_gQm4JEDZnqg1xPN8U7j2y76=bBNsmxB0dAm0Z7ujmrXzQ@mail.gmail.com>
 <593d5e40-611e-3fcc-c131-6fb7de1130b9@prodsyse.com>
 <CAMMJQ0a0ONoBnZnnn9wq3a4ey336t24CTLrf_RZS99u_hMKrjA@mail.gmail.com>
 <a896f66e-6727-cb45-9cd6-60c7ffdc2d9f@prodsyse.com>
 <f1119591-dffc-986f-06c5-661def1ad0e4@prodsyse.com>
 <23852.41544.642632.563143@rob.eddelbuettel.com>
 <24877fa2-8f74-1344-c017-e07884e84f85@prodsyse.com>
 <57345a5415408e3f7acad06b8b5f84330cc112b8.camel@braverock.com>
 <337480ef-ebfd-7438-a5b3-23f9f5080451@prodsyse.com>
Message-ID: <3879e196-eb57-c7ef-ce94-07535a34d9ba@roswellpark.org>

Hi Spencer,

The first line in the `[remote "origin"]` section should read:

```

url = git at github.com:sbgraves237/Ecdat.git<mailto:git at github.com:sbgraves237/Ecdat.git>

```

Generally, I add these configs by doing a clone on the command line such as:

> git clone git at github.com:sbgraves237/Ecdat.git<mailto:git at github.com:sbgraves237/Ecdat.git>

so that I don't have to mess with the config file.


Best,

Marcel

On 7/15/19 1:48 PM, Spencer Graves wrote:
I'm diverging:  Now I get:


>>> git pull
ssh: Could not resolve hostname github.com:sbgraves237: nodename nor servname provided, or not known
fatal: Could not read from remote repository.

Please make sure you have the correct access rights
and the repository exists.


      ** With .git/config as follows:


[core]
    repositoryformatversion = 0
    filemode = true
    bare = false
    logallrefupdates = true
    ignorecase = true
    precomposeunicode = true
[remote "origin"]
    url = ssh://git at github.com:sbgraves237/Ecdat.git<mailto:ssh://git at github.com:sbgraves237/Ecdat.git>
    fetch = +refs/heads/*:refs/remotes/origin/*
[branch "master"]
    remote = origin
    merge = refs/heads/master


      I have an SSH key on my GitHub account, which says it was "Added on Jul 3, 2019 Last used within the last 2 weeks ? Read/write".


      Should I delete my current local copies and clone them fresh from GitHub?
      Spencer


On 2019-07-15 12:01, Brian G. Peterson wrote:
it would be:

ssh://git at github.com:sbgraves237/Ecdat.git<mailto:ssh://git at github.com:sbgraves237/Ecdat.git>


On Mon, 2019-07-15 at 11:41 -0500, Spencer Graves wrote:
On 2019-07-15 10:56, Dirk Eddelbuettel wrote:
<snip>


Don't write passwords down like this. Your error is likely in
expecting _ssh_
authentication over _https_ -- when it works only over ssh. Use the
alternate
form for a remote e.g. one that looks like git at github.com:emacs<mailto:git at github.com:emacs>-
ess/ESS.git
        I'm confused.  I changed that line to:


              url =
https://git at github.com:sbgraves237/sbgraves237/Ecdat<mailto:https://git at github.com:sbgraves237/sbgraves237/Ecdat>


        Then when I did "git pull" I got:


fatal: unable to access
'https://git at github.com:sbgraves237/sbgraves237/Ecdat/<mailto:https://git at github.com:sbgraves237/sbgraves237/Ecdat/>': Port number
ended with 's'


        ???
        Thanks,
        Spencer

Hth, Dirk

______________________________________________
R-devel at r-project.org<mailto:R-devel at r-project.org> mailing list
https://stat.ethz.ch/mailman/listinfo/r-devel

______________________________________________
R-devel at r-project.org<mailto:R-devel at r-project.org> mailing list
https://stat.ethz.ch/mailman/listinfo/r-devel


This email message may contain legally privileged and/or confidential information.  If you are not the intended recipient(s), or the employee or agent responsible for the delivery of this message to the intended recipient(s), you are hereby notified that any disclosure, copying, distribution, or use of this email message is prohibited.  If you have received this message in error, please notify the sender immediately by e-mail and delete this email message from your computer. Thank you.
	[[alternative HTML version deleted]]


From @pencer@gr@ve@ @end|ng |rom prod@y@e@com  Mon Jul 15 20:20:52 2019
From: @pencer@gr@ve@ @end|ng |rom prod@y@e@com (Spencer Graves)
Date: Mon, 15 Jul 2019 13:20:52 -0500
Subject: [Rd] GitHub passwords in .git/config?
In-Reply-To: <3879e196-eb57-c7ef-ce94-07535a34d9ba@roswellpark.org>
References: <71f66de5-e1aa-5649-b07a-6cf79f9b07bc@prodsyse.com>
 <fb319697-6408-17b5-30a1-7a8f9d8da928@prodsyse.com>
 <CAMMJQ0a7ZtndwL8YYas6+k3BRDtAFizAuaacONQ6i6HmrQMTeA@mail.gmail.com>
 <3f01d7bc-ed20-1a39-25bc-ce7d34e22398@prodsyse.com>
 <CAFDcVCR9=WMJRmT3RVZxaQaWxQ4EciojC5ct4K=PrSjuJKtKNw@mail.gmail.com>
 <c9f1e823-9384-1f9f-0d70-e6ccbe8e9075@prodsyse.com>
 <CAPPM_gQ6Ef0+FYz0NrywwiPyW9O2Wwcms8sbmQATp-jcgyYhBA@mail.gmail.com>
 <CAPPM_gQm4JEDZnqg1xPN8U7j2y76=bBNsmxB0dAm0Z7ujmrXzQ@mail.gmail.com>
 <593d5e40-611e-3fcc-c131-6fb7de1130b9@prodsyse.com>
 <CAMMJQ0a0ONoBnZnnn9wq3a4ey336t24CTLrf_RZS99u_hMKrjA@mail.gmail.com>
 <a896f66e-6727-cb45-9cd6-60c7ffdc2d9f@prodsyse.com>
 <f1119591-dffc-986f-06c5-661def1ad0e4@prodsyse.com>
 <23852.41544.642632.563143@rob.eddelbuettel.com>
 <24877fa2-8f74-1344-c017-e07884e84f85@prodsyse.com>
 <57345a5415408e3f7acad06b8b5f84330cc112b8.camel@braverock.com>
 <337480ef-ebfd-7438-a5b3-23f9f5080451@prodsyse.com>
 <3879e196-eb57-c7ef-ce94-07535a34d9ba@roswellpark.org>
Message-ID: <6b8ff806-6a67-0e64-1275-966b002dfa93@prodsyse.com>

Thanks, Marcel:


 ????? That did it.


 ????? My next challenge is to replicate it on a Windows 10 machine.


 ????? Spencer


On 2019-07-15 12:54, Marcel Ramos wrote:
> Hi Spencer,
>
> The first line in the `[remote "origin"]` section should read:
>
> ```
>
> url = git at github.com:sbgraves237/Ecdat.git<mailto:git at github.com:sbgraves237/Ecdat.git>
>
> ```
>
> Generally, I add these configs by doing a clone on the command line such as:
>
>> git clone git at github.com:sbgraves237/Ecdat.git<mailto:git at github.com:sbgraves237/Ecdat.git>
> so that I don't have to mess with the config file.
>
>
> Best,
>
> Marcel
>
> On 7/15/19 1:48 PM, Spencer Graves wrote:
> I'm diverging:  Now I get:
>
>
>>>> git pull
> ssh: Could not resolve hostname github.com:sbgraves237: nodename nor servname provided, or not known
> fatal: Could not read from remote repository.
>
> Please make sure you have the correct access rights
> and the repository exists.
>
>
>        ** With .git/config as follows:
>
>
> [core]
>      repositoryformatversion = 0
>      filemode = true
>      bare = false
>      logallrefupdates = true
>      ignorecase = true
>      precomposeunicode = true
> [remote "origin"]
>      url = ssh://git at github.com:sbgraves237/Ecdat.git<mailto:ssh://git at github.com:sbgraves237/Ecdat.git>
>      fetch = +refs/heads/*:refs/remotes/origin/*
> [branch "master"]
>      remote = origin
>      merge = refs/heads/master
>
>
>        I have an SSH key on my GitHub account, which says it was "Added on Jul 3, 2019 Last used within the last 2 weeks ? Read/write".
>
>
>        Should I delete my current local copies and clone them fresh from GitHub?
>        Spencer
>
>
> On 2019-07-15 12:01, Brian G. Peterson wrote:
> it would be:
>
> ssh://git at github.com:sbgraves237/Ecdat.git<mailto:ssh://git at github.com:sbgraves237/Ecdat.git>
>
>
> On Mon, 2019-07-15 at 11:41 -0500, Spencer Graves wrote:
> On 2019-07-15 10:56, Dirk Eddelbuettel wrote:
> <snip>
>
>
> Don't write passwords down like this. Your error is likely in
> expecting _ssh_
> authentication over _https_ -- when it works only over ssh. Use the
> alternate
> form for a remote e.g. one that looks like git at github.com:emacs<mailto:git at github.com:emacs>-
> ess/ESS.git
>          I'm confused.  I changed that line to:
>
>
>                url =
> https://git at github.com:sbgraves237/sbgraves237/Ecdat<mailto:https://git at github.com:sbgraves237/sbgraves237/Ecdat>
>
>
>          Then when I did "git pull" I got:
>
>
> fatal: unable to access
> 'https://git at github.com:sbgraves237/sbgraves237/Ecdat/<mailto:https://git at github.com:sbgraves237/sbgraves237/Ecdat/>': Port number
> ended with 's'
>
>
>          ???
>          Thanks,
>          Spencer
>
> Hth, Dirk
>
> ______________________________________________
> R-devel at r-project.org<mailto:R-devel at r-project.org> mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>
> ______________________________________________
> R-devel at r-project.org<mailto:R-devel at r-project.org> mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>
>
> This email message may contain legally privileged and/or confidential information.  If you are not the intended recipient(s), or the employee or agent responsible for the delivery of this message to the intended recipient(s), you are hereby notified that any disclosure, copying, distribution, or use of this email message is prohibited.  If you have received this message in error, please notify the sender immediately by e-mail and delete this email message from your computer. Thank you.
> 	[[alternative HTML version deleted]]
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From g@bembecker @end|ng |rom gm@||@com  Mon Jul 15 22:29:28 2019
From: g@bembecker @end|ng |rom gm@||@com (Gabriel Becker)
Date: Mon, 15 Jul 2019 13:29:28 -0700
Subject: [Rd] Convert STRSXP or INTSXP to factor
In-Reply-To: <CAL0QV_O+U+okfszx59z-ySfD8emv9Bx6=g3YJfbq15_znVUsvg@mail.gmail.com>
References: <CAL0QV_O+U+okfszx59z-ySfD8emv9Bx6=g3YJfbq15_znVUsvg@mail.gmail.com>
Message-ID: <CAD4oTHGDxs4X2UOFVfqk+ZHWYnWue=SbyULwO3JwwFzsESf3Hw@mail.gmail.com>

Hi Morgan,

So if the goal  is output  identical to  calling factor, one thing youc an
do is construct  and evaluate a call to the R-level factor function. That
would work and  be guaranteed to meet your  requirement.

The factor function is implemented with R code,  without even any direct
calls down to C code, so there isn't any C level functionality already
there that you could try to hit directly.

If you really really needed to write it using only C (and not hitting the R
evaluator), I suppose you could. You'd need to do the following, I think:


   1. Loop through the values to determine the array of levels vector,
   equivalent to a call to unique(x) at the R level. I don't know if there
   are any public API functions that will do this for you, a quick grep
   through the header files  suggests there are not.
   2. Allocate the ouptut INTSXP and determine the underlying integer value
   for each factor element.  Equivalent to a match(x,  levels) in R (x has
   already been converted to character at this point in the R function).
   Getting this to be performant would probably be annoying but is doable
   (e.g., via a hash table or some such)
   3. Do classgets on the the output vector to make it a factor (this will
   set the object bit so you don't need to do that separate)
   4. do setAttrib on the output vector to set the levels attribute (which
   now needs to be  a STRSXP  rather than, e.g., an array of  const char*)
   5. Return the output vector

Personally, unless there was a really compelling reason not to, I'd just do
the  create and evaluate an R-level call thing instead.

Best,
~G




On Mon, Jul 15, 2019 at 3:25 AM Morgan Morgan <morgan.emailbox at gmail.com>
wrote:

> Hi,
>
> Using the R C PAI, is there a way to convert to convert STRSXP or INTSXP to
> factor.
>
> The idea would be to do in C something similar to the "factor" function
> (example below):
>
> > letters[1:5]
> # [1] "a" "b" "c" "d" "e"
>
> > factor(letters[1:5])
> # [1] a b c d e
> # Levels: a b c d e
>
> There is the function setAttrib the levels of a SXP however when returned
> to R the object is of type character not factor. Ideally what i would like
> to return from the C function is the same output as above when the input is
> of type character.
>
> Please let me if you need more informations.
> Thank you
> Best regards
> Morgan
>
>         [[alternative HTML version deleted]]
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>

	[[alternative HTML version deleted]]


From |uke-t|erney @end|ng |rom u|ow@@edu  Mon Jul 15 22:43:02 2019
From: |uke-t|erney @end|ng |rom u|ow@@edu (Tierney, Luke)
Date: Mon, 15 Jul 2019 20:43:02 +0000
Subject: [Rd] [External]  Potential bug with data.frame replacement
In-Reply-To: <F2511EF0-05DC-46FE-8ABC-7272ED87036C@uwaterloo.ca>
References: <F2511EF0-05DC-46FE-8ABC-7272ED87036C@uwaterloo.ca>
Message-ID: <alpine.DEB.2.21.1907151542220.5519@luke-Latitude-7480>

Thanks for the report. The buffer overflow should be fixed in
R-patched and R-devel.

Best,

luke

On Sun, 14 Jul 2019, Benjamin Jean-Marie Tremblay wrote:

> Dear R-devel,
>
> I have encountered a crash-inducing scenario and would like to enquire as to
> whether this would be considered a bug. To reproduce the crash:
>
> X <- sample(letters, 3000, TRUE)
> D <- data.frame(X, 1:3000, X, X, X, X, X)
> D$X1.3000 <- paste0("GSM", D)
>
> The reason why I'm not sure if this would be considered a bug is because I
> typed this by accident, when what I meant was:
>
> D$X1.3000 <- paste0("GSM", D$X1.3000)
>
> I can never image a scenario where I would intentionally perform the former.
>
> This issue seems to have something to do with the size of the data.frame, as
> smaller examples will work fine:
>
> D <- data.frame(A = 1:10, B = letters[1:10])
> D$A <- paste0("A", D)
>
> Also just doing the paste0 part without trying to replace a data.frame column
> not crash R for me.
>
> I can submit this on Bugzilla should this be deemed sufficiently buggy.
>
> I am running 3.6.0 on macOS (x86_64-apple-darwin15.6.0).
>
> Sincerely,
>
> B.T.
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>

-- 
Luke Tierney
Ralph E. Wareham Professor of Mathematical Sciences
University of Iowa                  Phone:             319-335-3386
Department of Statistics and        Fax:               319-335-3017
    Actuarial Science
241 Schaeffer Hall                  email:   luke-tierney at uiowa.edu
Iowa City, IA 52242                 WWW:  http://www.stat.uiowa.edu


From m@ech|er @end|ng |rom @t@t@m@th@ethz@ch  Tue Jul 16 09:07:41 2019
From: m@ech|er @end|ng |rom @t@t@m@th@ethz@ch (Martin Maechler)
Date: Tue, 16 Jul 2019 09:07:41 +0200
Subject: [Rd] Convert STRSXP or INTSXP to factor
In-Reply-To: <CAD4oTHGDxs4X2UOFVfqk+ZHWYnWue=SbyULwO3JwwFzsESf3Hw@mail.gmail.com>
References: <CAL0QV_O+U+okfszx59z-ySfD8emv9Bx6=g3YJfbq15_znVUsvg@mail.gmail.com>
 <CAD4oTHGDxs4X2UOFVfqk+ZHWYnWue=SbyULwO3JwwFzsESf3Hw@mail.gmail.com>
Message-ID: <23853.30653.802179.212281@stat.math.ethz.ch>

>>>>> Gabriel Becker 
>>>>>     on Mon, 15 Jul 2019 13:29:28 -0700 writes:

    > Hi Morgan,
    > So if the goal  is output  identical to  calling factor, one thing youc an
    > do is construct  and evaluate a call to the R-level factor function. That
    > would work and  be guaranteed to meet your  requirement.

    > The factor function is implemented with R code,  without even any direct
    > calls down to C code, so there isn't any C level functionality already
    > there that you could try to hit directly.

    > If you really really needed to write it using only C (and not hitting the R
    > evaluator), I suppose you could. You'd need to do the following, I think:

        [... hoop jumping  ...]
        [... hoop jumping  ...]


    > Personally, unless there was a really compelling reason not to, I'd just do
    > the  create and evaluate an R-level call thing instead.

I'm strongly supporting that.  That's the only will not to have
to change your (potentially brittle) C code if  factor() or
as.factor() .. is tweaked in a future version of R.





    > On Mon, Jul 15, 2019 at 3:25 AM Morgan Morgan <morgan.emailbox at gmail.com>
    > wrote:

    >> Hi,
    >> 
    >> Using the R C PAI, is there a way to convert to convert STRSXP or INTSXP to
    >> factor.
    >> 
    >> The idea would be to do in C something similar to the "factor" function
    >> (example below):
    >> 
    >> > letters[1:5]
    >> # [1] "a" "b" "c" "d" "e"
    >> 
    >> > factor(letters[1:5])
    >> # [1] a b c d e
    >> # Levels: a b c d e
    >> 
    >> There is the function setAttrib the levels of a SXP however when returned
    >> to R the object is of type character not factor. Ideally what i would like
    >> to return from the C function is the same output as above when the input is
    >> of type character.
    >> 
    >> Please let me if you need more informations.
    >> Thank you
    >> Best regards
    >> Morgan
    >> 
    >> [[alternative HTML version deleted]]
    >> 
    >> ______________________________________________
    >> R-devel at r-project.org mailing list
    >> https://stat.ethz.ch/mailman/listinfo/r-devel
    >> 

    > [[alternative HTML version deleted]]

    > ______________________________________________
    > R-devel at r-project.org mailing list
    > https://stat.ethz.ch/mailman/listinfo/r-devel


From jenny@|@bry@n @end|ng |rom gm@||@com  Mon Jul 15 12:01:55 2019
From: jenny@|@bry@n @end|ng |rom gm@||@com (Jennifer Bryan)
Date: Mon, 15 Jul 2019 12:01:55 +0200
Subject: [Rd] What is the best way to determine the version of an `.rds`?
Message-ID: <CANe9BHFzp2oDnb===CyJcd_N0+paD9LQ9jZMUPg2kbci=UWs8g-3458@mail.gmail.com>

Hi,

I am writing a test that consults the serialization version of an `.rds`
file.

An attractive way to get this is:

tools:::get_serialization_version() # reports just version

which calls

.Internal(serializeInfoFromConn() # reports much more

but neither is truly exported for public use.

Is there an official, exported way to get the serialization version? It is
possible to get this information with R code yourself, but it doesn't feel
very elegant.

If not, could we have this? It's pretty easy these days to acquire a
version 3 file, without real intent, which risks making the package require
R >= 3.5.

Thanks,
Jenny

	[[alternative HTML version deleted]]


From m@ech|er @end|ng |rom @t@t@m@th@ethz@ch  Tue Jul 16 10:35:36 2019
From: m@ech|er @end|ng |rom @t@t@m@th@ethz@ch (Martin Maechler)
Date: Tue, 16 Jul 2019 10:35:36 +0200
Subject: [Rd] Unexpected behaviour when comparing (==) long quoted
 expressions
In-Reply-To: <548ff578-bd19-aed9-78f5-f4dcd7a2576c@gmail.com>
References: <548ff578-bd19-aed9-78f5-f4dcd7a2576c@gmail.com>
Message-ID: <23853.35928.732608.240662@stat.math.ethz.ch>

>>>>> Daniel Chen 
>>>>>     on Fri, 12 Jul 2019 13:53:21 -0500 writes:

    > Hi everyone:
    > I?m one of the interns at RStudio this summer working on a project that 
    > helps teachers grade student code. I found an unexpected behaviour with 
    > the |==| operator when comparing |quote|d expressions.

    > Example 1:

    > |u <- quote(tidyr::gather(key = key, value = value, 
    > new_sp_m014:newrel_f65, na.rm = TRUE)) s <- quote(tidyr::gather(key = 
    > key, value = value, new_sp_m014:newrel_f65, na.rm = FALSE)) u == s # 
    > TRUE u <- quote(tidyr::gather(key = key, value = value, na.rm = TRUE)) s 
    > <- quote(tidyr::gather(key = key, value = value, na.rm = FALSE)) u == s 
    > # FALSE |

Unfortunately the above is almost unreadable, as you "forgot" to
click (in the lower right corner of your Gmail interface with
the three vertical dots) "plain text mode".

    > Example 2:

    > |u <- 
    > quote(f(x123456789012345678901234567890123456789012345678901234567890, 
    > 1)) s <- 
    > quote(f(x123456789012345678901234567890123456789012345678901234567890, 
    > 2)) u == s #> [1] TRUE |

this is even readable after html - de-html mangling

    > Winston Chang pointed out in the help page for |==|:

    > Language objects such as symbols and calls are deparsed to character
    > strings before comparison.

    > and in the source code that does the comparison [1] shows that It 
    > deparses each language object and then only extracts the first element 
    > from the resulting character vector:

    > |SET_STRING_ELT(tmp, 0, (iS) ? PRINTNAME(x) : STRING_ELT(deparse1(x, 0, 
    > DEFAULTDEPARSE), 0)); |

    > Is this a fix that needs to happen within the |==| documentation? or an 
    > actual bug with the operator?

This a good question.

Thank you, Daniel, for providing the link to the source code in
<R>/src/main/relop.c .

Looking at that and its context, I think we (R core) should
reconsider that implementation of '=='  which indeed does about
the same thing as deparse {which also truncates at some point by
default; something very very reasonable for error messages, but
undesirable in other cases}.

But I think it's fair expectation that comparing  calls  ["language"]
with '==' should compare the full call's syntax even if that may
occasionally be very long.

Martin

    > For more context the original issue we had is here: 
    > https://github.com/rstudio-education/grader/issues/28

    > Workaround:

    > You can get around this issue by using |all.equal| or |identical|

    > |u <- quote(tidyr::gather(key = key, value = value, 
    > new_sp_m014:newrel_f65, na.rm = TRUE)) s <- quote(tidyr::gather(key = 
    > key, value = value, new_sp_m014:newrel_f65, na.rm = FALSE)) u == s # 
    > TRUE all.equal(u, s) # "target, current do not match when deparsed" 
    > identical(u, s) # FALSE |

    > Thanks,

    > Dan

    > [1] https://github.com/wch/r-source/blob/e647f78cb85282263f88ea30c6337b77a30743d9/src/main/relop.c#L140-L155


From ||one| @end|ng |rom r@tud|o@com  Tue Jul 16 10:53:33 2019
From: ||one| @end|ng |rom r@tud|o@com (Lionel Henry)
Date: Tue, 16 Jul 2019 10:53:33 +0200
Subject: [Rd] 
 [External]  Mitigating Stalls Caused by Call Deparse on Error
In-Reply-To: <alpine.DEB.2.21.1907150902340.5519@luke-Latitude-7480>
References: <1095250181.1426568.1563039104421.ref@mail.yahoo.com>
 <1095250181.1426568.1563039104421@mail.yahoo.com>
 <alpine.DEB.2.21.1907140747160.5519@luke-Latitude-7480>
 <1868480939.1645077.1563114779876@mail.yahoo.com>
 <alpine.DEB.2.21.1907150902340.5519@luke-Latitude-7480>
Message-ID: <FCE27981-051E-462C-AD91-E9F4EB84F37E@rstudio.com>

We also have a few other suggestions and wishes about backtrace
storage and display on the one hand, and display of constructed calls
on the other hand. Perhaps it would be better to open a different
wishlist item for traceback() to keep the discussions focused?

FWIW I think deparsing backtraces lazily is a great idea. Displaying 1
line per call by default in interactive sessions, while being able to
get a more exhaustive output by calling `traceback(max.lines = Inf)`,
offers the best of both worlds. Understanding the structure of the
backtrace quickly is often more helpful than having immediate access
to all the information.

Best,
Lionel


> On 15 Jul 2019, at 16:04, Tierney, Luke <luke-tierney at uiowa.edu> wrote:
> 
> Better to add this to the wishlist item. This all needs to be looked
> at together, and nothing is likely to happen until after
> vacation/conference season.  It will disappear from everyone's radar
> if it is just in R_devel.
> 
> Best,
> 
> luke
> 
> On Sun, 14 Jul 2019, brodie gaslam wrote:
> 
>> Luke, thanks for considering the issue.  I would like to
>> try to separate the problem into two parts, as I _think_
>> your comments address primarily part 2 below:
>> 
>> 1. How can we avoid significant and possibly crippling
>>    stalls on error with these non-standard calls.
>> 2. What is the best way to view these non-standard calls.
>> 
>> I agree that issue 2. requires further thought and
>> discussion under a wishlist issue ([on bugzilla now][1]). 
>> While I did raise issue 2., the patch itself makes no
>> attempt to resolve it.
>> 
>> The proposed patch resolves issue 1., which is a big
>> usability problem.  Right now if you have the misfortune of
>> using `do.call` with a big object and trigger an error, you
>> have the choice of waiting a possibly long time for
>> the deparse to complete, or killing your entire R session
>> externally.
>> 
>> It seems a shame to allow a big usability issue for `do.call`
>> to remain when there is a simple solution at hand, especially
>> since the complete deparse of large objects likely serves no
>> purpose in this case. Obviously, if storing the actual calls
>> instead of their deparsed equivalents in .Traceback causes
>> problems I'm not anticipating, then that's different. 
>> Is that the case?
>> 
>> Best,
>> 
>> Brodie.
>> 
>> [1]: https://bugs.r-project.org/bugzilla/show_bug.cgi?id=17580
>> 
>> On Sunday, July 14, 2019, 8:52:45 AM EDT, Tierney, Luke <luke-tierney at uiowa.edu> wrote:
>> 
>> 
>> 
>> 
>> 
>> This is probably best viewed in the context of other issue with
>> displaying calls, such as issues arising from calls constructed in
>> non-standard evaluation contexts. Might be good to move to a wishlist
>> item in bugzilla.
>> 
>> Best,
>> 
>> luke
>> 
>> On Sat, 13 Jul 2019, brodie gaslam via R-devel wrote:
>> 
>>> When large calls cause errors R may stall for extended periods.  This
>>> is particularly likely to happen with `do.call`, as in this example
>>> with a 24 second stall:
>>> 
>>>     x <- runif(1e7)
>>>     system.time(do.call(paste0, list(abs, x)))  # intentional error
>>>     ## Error in (function (..., collapse = NULL)  :
>>>     ##   cannot coerce type 'builtin' to vector of type 'character'
>>>     ## Calls: system.time -> do.call -> <Anonymous>
>>>     ## Timing stopped at: 23.81 0.149 24.04
>>> 
>>>     str(.Traceback)
>>>     ## Dotted pair list of 3
>>>     ##  $ : chr [1:2500488] "(function (..., collapse = NULL) " ".Internal(paste0(list(...), collapse)))(.Primitive(\"abs\"), c(0.718117154669017, " "0.494785501621664, 0.1453434410505, 0.635028422810137, 0.0353180423844606, " "0.688418723642826, 0.889682895969599, 0.728154224809259, 0.292572240810841, " ...
>>>     ##  $ : chr "do.call(paste0, list(abs, x))"
>>>     ##  $ : chr "system.time(do.call(paste0, list(abs, x)))"
>>> 
>>> The first time I noticed this I thought my session had frozen/crashed
>>> as the standard interrupt ^C does not work during the deparse.  The
>>> stall happens when on error the call stack is deparsed prior to being
>>> saved to `.Traceback`.  The deparsing is done by `deparse1m` in native
>>> code, with the value of `getOption('deparse.max.lines')` which
>>> defaults to all lines.
>>> 
>>> Since there is little value to seeing millions of lines of deparsed
>>> objects in `traceback()`, a simple work-around is to change the
>>> `deparse.max.lines` value:
>>> 
>>>     options(deparse.max.lines=1)
>>>     system.time(do.call(paste0, list(abs, x)))
>>>     ## Error in (function (..., collapse = NULL)  :
>>>     ##   cannot coerce type 'builtin' to vector of type 'character'
>>>     ## Calls: system.time -> do.call -> <Anonymous>
>>>     ## Timing stopped at: 0 0 0
>>> 
>>> Unfortunately this will affect all `deparse` calls, and it seems
>>> undesirable to pre-emptively enable it just for calls that might cause
>>> large deparses on error.
>>> 
>>> An alternative is to store the actual calls instead of their deparsed
>>> character equivalents in `.Traceback`.  This defers the deparsing to
>>> when `traceback()` is used.  As per `?traceback`, it should be
>>> relatively safe to modify `.Traceback` in this way:
>>> 
>>>> It is undocumented where .Traceback is stored nor that it is
>>>> visible, and this is subject to change.
>>> 
>>> Deferring the deparsing to `traceback()` will give us the 
>>> opportunity to use a different `max.lines` setting as we do here
>>> with the patch applied:
>>> 
>>>     system.time(do.call(paste0, list(abs, x)))
>>>     ## Error in (function (..., collapse = NULL)  :
>>>     ##   cannot coerce type 'builtin' to vector of type 'character'
>>>     ## Timing stopped at: 0.028 0 0.029
>>> 
>>>     system.time(traceback(max.lines=3))
>>>     ## 3: (function (..., collapse = NULL)
>>>     ##    .Internal(paste0(list(...), collapse)))(.Primitive("abs"), c(0.535468587651849,
>>>     ##    0.0540027911774814, 0.732930393889546, 0.565360915614292, 0.544816034380347,
>>>     ##     ...
>>>     ## 2: do.call(paste0, list(abs, x))
>>>     ## 1: system.time(do.call(paste0, list(abs, x)))
>>>     ##    user  system elapsed
>>>     ##   0.000   0.000   0.003
>>> 
>>> 
>>> More generally, it might be better to have a different smaller default
>>> value for the lines to deparse when calls  are _displayed_ as parts of
>>> lists, as is the case with `traceback()`, or in `print(sys.calls())` and
>>> similar.
>>> 
>>> I attach a patch that does this.  I have run some basic tests
>>> and `make check-devel` passes. I can file an issue on bugzilla
>>> if that is a better place to have this conversation (assuming there
>>> is interest in it).
>>> 
>>> Best,
>>> 
>>> Brodie
>>> 
>>> PS: for some reason my mail client is refusing to attach the patch so I paste it
>>> starting on the next line.
>>> Index: src/gnuwin32/Rdll.hide
>>> ===================================================================
>>> --- src/gnuwin32/Rdll.hide    (revision 76827)
>>> +++ src/gnuwin32/Rdll.hide    (working copy)
>>> @@ -94,6 +94,7 @@
>>>   R_GetMaxNSize
>>>   R_GetMaxVSize
>>>   R_GetTraceback
>>> + R_GetTracebackParsed
>>>   R_GetVarLocSymbol
>>>   R_GetVarLocValue
>>>   R_HandlerStack
>>> Index: src/include/Defn.h
>>> ===================================================================
>>> --- src/include/Defn.h    (revision 76827)
>>> +++ src/include/Defn.h    (working copy)
>>> @@ -1296,6 +1296,7 @@
>>>  void NORET ErrorMessage(SEXP, int, ...);
>>>  void WarningMessage(SEXP, R_WARNING, ...);
>>>  SEXP R_GetTraceback(int);
>>> +SEXP R_GetTracebackParsed(int);
>>>  
>>>  R_size_t R_GetMaxVSize(void);
>>>  void R_SetMaxVSize(R_size_t);
>>> Index: src/library/base/R/traceback.R
>>> ===================================================================
>>> --- src/library/base/R/traceback.R    (revision 76827)
>>> +++ src/library/base/R/traceback.R    (working copy)
>>> @@ -16,9 +16,19 @@
>>>  #  A copy of the GNU General Public License is available at
>>>  #  https://www.R-project.org/Licenses/
>>>  
>>> -.traceback <- function(x = NULL) {
>>> -    if(is.null(x) && !is.null(x <- get0(".Traceback", envir = baseenv())))
>>> -    {}
>>> +.traceback <- function(x = NULL, max.lines=getOption("deparse.max.lines")) {
>>> +    if(!(is.numeric(max.lines) && !is.na(max.lines) &&
>>> +         as.integer(max.lines) > 0L)
>>> +    ) {
>>> +        max.lines <- -1L
>>> +    }
>>> +    if(is.null(x) && !is.null(x <- get0(".Traceback", envir = baseenv()))) {
>>> +        for(i in seq_along(x)) {
>>> +            srcref <- attr(x[[i]], 'srcref')
>>> +            x[[i]] <- deparse(x[[i]], nlines=max.lines)
>>> +            attr(x[[i]], 'srcref') <- srcref
>>> +        }
>>> +    }
>>>      else if (is.numeric(x))
>>>          x <- .Internal(traceback(x))
>>>      x
>>> @@ -26,7 +36,16 @@
>>>  
>>>  traceback <- function(x = NULL, max.lines = getOption("deparse.max.lines"))
>>>  {
>>> -    n <- length(x <- .traceback(x))
>>> +    valid.max.lines <- is.numeric(max.lines) && !is.na(max.lines) &&
>>> +         as.integer(max.lines) > 0L
>>> +
>>> +    if(valid.max.lines) {
>>> +        # max.lines + 1L so we can know that output was truncated by .traceback
>>> +        max.lines.2 <- as.integer(max.lines) + 1L
>>> +    } else {
>>> +        max.lines.2 <- -1L
>>> +    }
>>> +    n <- length(x <- .traceback(x, max.lines=max.lines.2))
>>>      if(n == 0L)
>>>          cat(gettext("No traceback available"), "\n")
>>>      else {
>>> @@ -40,7 +59,7 @@
>>>                  paste0(" at ", basename(srcfile$filename), "#", srcref[1L])
>>>              }
>>>              ## Truncate deparsed code (destroys attributes of xi)
>>> -            if(is.numeric(max.lines) && max.lines > 0L && max.lines < m) {
>>> +            if(valid.max.lines &&  max.lines < m) {
>>>                  xi <- c(xi[seq_len(max.lines)], " ...")
>>>                  m <- length(xi)
>>>              }
>>> Index: src/library/base/man/traceback.Rd
>>> ===================================================================
>>> --- src/library/base/man/traceback.Rd    (revision 76827)
>>> +++ src/library/base/man/traceback.Rd    (working copy)
>>> @@ -21,7 +21,7 @@
>>>  }
>>>  \usage{
>>>  traceback(x = NULL, max.lines = getOption("deparse.max.lines"))
>>> -.traceback(x = NULL)
>>> +.traceback(x = NULL, max.lines = getOption("deparse.max.lines"))
>>>  }
>>>  \arguments{
>>>    \item{x}{\code{NULL} (default, meaning \code{.Traceback}), or an
>>> Index: src/main/errors.c
>>> ===================================================================
>>> --- src/main/errors.c    (revision 76827)
>>> +++ src/main/errors.c    (working copy)
>>> @@ -1008,7 +1008,7 @@
>>>         (which should not happen) */
>>>      if (traceback && inError < 2 && inError == oldInError) {
>>>          inError = 2;
>>> -        PROTECT(s = R_GetTraceback(0));
>>> +        PROTECT(s = R_GetTracebackParsed(0));
>>>          SET_SYMVALUE(install(".Traceback"), s);
>>>          /* should have been defineVar
>>>             setVar(install(".Traceback"), s, R_GlobalEnv); */
>>> @@ -1440,9 +1440,11 @@
>>>      PrintWarnings();
>>>      }
>>>  }
>>> -
>>> +/*
>>> + * Return the traceback without deparsing the calls
>>> + */
>>>  attribute_hidden
>>> -SEXP R_GetTraceback(int skip)
>>> +SEXP R_GetTracebackParsed(int skip)
>>>  {
>>>      int nback = 0, ns;
>>>      RCNTXT *c;
>>> @@ -1467,7 +1469,9 @@
>>>          if (skip > 0)
>>>          skip--;
>>>          else {
>>> -        SETCAR(t, deparse1m(c->call, 0, DEFAULTDEPARSE));
>>> +                // Extra paranoid PROTECTS
>>> +        SETCAR(t, PROTECT(duplicate(c->call)));
>>> +                UNPROTECT(1);
>>>          if (c->srcref && !isNull(c->srcref)) {
>>>              SEXP sref;
>>>              if (c->srcref == R_InBCInterpreter)
>>> @@ -1482,7 +1486,26 @@
>>>      UNPROTECT(1);
>>>      return s;
>>>  }
>>> +/*
>>> + * Return the traceback with calls deparsed
>>> + */
>>> +attribute_hidden
>>> +SEXP R_GetTraceback(int skip)
>>> +{
>>> +    int nback = 0;
>>> +    SEXP s, t, u, v;
>>> +    s = PROTECT(R_GetTracebackParsed(skip));
>>> +    for(t = s; t != R_NilValue; t = CDR(t)) nback++;
>>> +    u = v = PROTECT(allocList(nback));
>>>  
>>> +    for(t = s; t != R_NilValue; t = CDR(t), v=CDR(v)) {
>>> +        SETCAR(v, PROTECT(deparse1m(CAR(t), 0, DEFAULTDEPARSE)));
>>> +        UNPROTECT(1);
>>> +    }
>>> +    UNPROTECT(1);
>>> +    return u;
>>> +}
>>> +
>>>  SEXP attribute_hidden do_traceback(SEXP call, SEXP op, SEXP args, SEXP rho)
>>>  {
>>>      int skip;
>> 
>>> 
>>> ______________________________________________
>>> R-devel at r-project.org mailing list
>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>> 
>> 
>> 
> 
> -- 
> Luke Tierney
> Ralph E. Wareham Professor of Mathematical Sciences
> University of Iowa                  Phone:             319-335-3386
> Department of Statistics and        Fax:               319-335-3017
>    Actuarial Science
> 241 Schaeffer Hall                  email:   luke-tierney at uiowa.edu
> Iowa City, IA 52242                 WWW:  http://www.stat.uiowa.edu
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From chend@n|e|y @end|ng |rom gm@||@com  Tue Jul 16 11:11:54 2019
From: chend@n|e|y @end|ng |rom gm@||@com (Daniel Chen)
Date: Tue, 16 Jul 2019 02:11:54 -0700
Subject: [Rd] Unexpected behaviour when comparing (==) long quoted
 expressions
In-Reply-To: <23853.35928.732608.240662@stat.math.ethz.ch>
References: <548ff578-bd19-aed9-78f5-f4dcd7a2576c@gmail.com>
 <23853.35928.732608.240662@stat.math.ethz.ch>
Message-ID: <f57ab099-0fe2-dcd4-bdf5-134d99b3009b@gmail.com>

Hi Martin:

Yes, I totally made things worse (and blundered my first listserv post) 
when things got converted from markdown...

For posterity (and clarity), I've reproduced the examples that show the 
unexpected behaviour and the current workaround we've used.

Example 1: expected u == s to return FALSE, but it return TRUE instead.

u <- quote(tidyr::gather(key = key, value = value, 
new_sp_m014:newrel_f65, na.rm = TRUE))
s <- quote(tidyr::gather(key = key, value = value, 
new_sp_m014:newrel_f65, na.rm = FALSE))
u == s # TRUE

u <- quote(tidyr::gather(key = key, value = value, na.rm = TRUE))
s <- quote(tidyr::gather(key = key, value = value, na.rm = FALSE))
u == s # FALSE

Example 2: seems more to do with length of the quoted expression than 
function arguments.

u <- 
quote(f(x123456789012345678901234567890123456789012345678901234567890, 1))
s <- 
quote(f(x123456789012345678901234567890123456789012345678901234567890, 2))
u == s
#> [1] TRUE

Workaround:

You can get around this issue by using all.equal or identical

u <- quote(tidyr::gather(key = key, value = value, 
new_sp_m014:newrel_f65, na.rm = TRUE))
s <- quote(tidyr::gather(key = key, value = value, 
new_sp_m014:newrel_f65, na.rm = FALSE))
u == s # TRUE
all.equal(u, s) # "target, current do not match when deparsed"
identical(u, s) # FALSE


The snippet for the implementation shows only the first element from the 
resulting deparse character vector is used 
(https://github.com/wch/r-source/blob/e647f78cb85282263f88ea30c6337b77a30743d9/src/main/relop.c#L140-L155):


 ??? SET_STRING_ELT(tmp, 0, (iS) ? PRINTNAME(x) :
 ?????????????? STRING_ELT(deparse1(x, 0, DEFAULTDEPARSE), 0));


- Dan



On 7/16/19 1:35 AM, Martin Maechler wrote:
>>>>>> Daniel Chen
>>>>>>      on Fri, 12 Jul 2019 13:53:21 -0500 writes:
>      > Hi everyone:
>      > I?m one of the interns at RStudio this summer working on a project that
>      > helps teachers grade student code. I found an unexpected behaviour with
>      > the |==| operator when comparing |quote|d expressions.
>
>      > Example 1:
>
>      > |u <- quote(tidyr::gather(key = key, value = value,
>      > new_sp_m014:newrel_f65, na.rm = TRUE)) s <- quote(tidyr::gather(key =
>      > key, value = value, new_sp_m014:newrel_f65, na.rm = FALSE)) u == s #
>      > TRUE u <- quote(tidyr::gather(key = key, value = value, na.rm = TRUE)) s
>      > <- quote(tidyr::gather(key = key, value = value, na.rm = FALSE)) u == s
>      > # FALSE |
>
> Unfortunately the above is almost unreadable, as you "forgot" to
> click (in the lower right corner of your Gmail interface with
> the three vertical dots) "plain text mode".
>
>      > Example 2:
>
>      > |u <-
>      > quote(f(x123456789012345678901234567890123456789012345678901234567890,
>      > 1)) s <-
>      > quote(f(x123456789012345678901234567890123456789012345678901234567890,
>      > 2)) u == s #> [1] TRUE |
>
> this is even readable after html - de-html mangling
>
>      > Winston Chang pointed out in the help page for |==|:
>
>      > Language objects such as symbols and calls are deparsed to character
>      > strings before comparison.
>
>      > and in the source code that does the comparison [1] shows that It
>      > deparses each language object and then only extracts the first element
>      > from the resulting character vector:
>
>      > |SET_STRING_ELT(tmp, 0, (iS) ? PRINTNAME(x) : STRING_ELT(deparse1(x, 0,
>      > DEFAULTDEPARSE), 0)); |
>
>      > Is this a fix that needs to happen within the |==| documentation? or an
>      > actual bug with the operator?
>
> This a good question.
>
> Thank you, Daniel, for providing the link to the source code in
> <R>/src/main/relop.c .
>
> Looking at that and its context, I think we (R core) should
> reconsider that implementation of '=='  which indeed does about
> the same thing as deparse {which also truncates at some point by
> default; something very very reasonable for error messages, but
> undesirable in other cases}.
>
> But I think it's fair expectation that comparing  calls  ["language"]
> with '==' should compare the full call's syntax even if that may
> occasionally be very long.
>
> Martin
>
>      > For more context the original issue we had is here:
>      > https://github.com/rstudio-education/grader/issues/28
>
>      > Workaround:
>
>      > You can get around this issue by using |all.equal| or |identical|
>
>      > |u <- quote(tidyr::gather(key = key, value = value,
>      > new_sp_m014:newrel_f65, na.rm = TRUE)) s <- quote(tidyr::gather(key =
>      > key, value = value, new_sp_m014:newrel_f65, na.rm = FALSE)) u == s #
>      > TRUE all.equal(u, s) # "target, current do not match when deparsed"
>      > identical(u, s) # FALSE |
>
>      > Thanks,
>
>      > Dan
>
>      > [1] https://github.com/wch/r-source/blob/e647f78cb85282263f88ea30c6337b77a30743d9/src/main/relop.c#L140-L155


From |uke-t|erney @end|ng |rom u|ow@@edu  Tue Jul 16 14:05:14 2019
From: |uke-t|erney @end|ng |rom u|ow@@edu (Tierney, Luke)
Date: Tue, 16 Jul 2019 12:05:14 +0000
Subject: [Rd] 
 [External] Re: Unexpected behaviour when comparing (==) long
 quoted expressions
In-Reply-To: <23853.35928.732608.240662@stat.math.ethz.ch>
References: <548ff578-bd19-aed9-78f5-f4dcd7a2576c@gmail.com>
 <23853.35928.732608.240662@stat.math.ethz.ch>
Message-ID: <alpine.DEB.2.21.1907160655560.5519@luke-Latitude-7480>

On Tue, 16 Jul 2019, Martin Maechler wrote:

>>>>>> Daniel Chen
>>>>>>     on Fri, 12 Jul 2019 13:53:21 -0500 writes:
>
>    > Hi everyone:
>    > I?m one of the interns at RStudio this summer working on a project that
>    > helps teachers grade student code. I found an unexpected behaviour with
>    > the |==| operator when comparing |quote|d expressions.
>
>    > Example 1:
>
>    > |u <- quote(tidyr::gather(key = key, value = value,
>    > new_sp_m014:newrel_f65, na.rm = TRUE)) s <- quote(tidyr::gather(key =
>    > key, value = value, new_sp_m014:newrel_f65, na.rm = FALSE)) u == s #
>    > TRUE u <- quote(tidyr::gather(key = key, value = value, na.rm = TRUE)) s
>    > <- quote(tidyr::gather(key = key, value = value, na.rm = FALSE)) u == s
>    > # FALSE |
>
> Unfortunately the above is almost unreadable, as you "forgot" to
> click (in the lower right corner of your Gmail interface with
> the three vertical dots) "plain text mode".
>
>    > Example 2:
>
>    > |u <-
>    > quote(f(x123456789012345678901234567890123456789012345678901234567890,
>    > 1)) s <-
>    > quote(f(x123456789012345678901234567890123456789012345678901234567890,
>    > 2)) u == s #> [1] TRUE |
>
> this is even readable after html - de-html mangling
>
>    > Winston Chang pointed out in the help page for |==|:
>
>    > Language objects such as symbols and calls are deparsed to character
>    > strings before comparison.
>
>    > and in the source code that does the comparison [1] shows that It
>    > deparses each language object and then only extracts the first element
>    > from the resulting character vector:
>
>    > |SET_STRING_ELT(tmp, 0, (iS) ? PRINTNAME(x) : STRING_ELT(deparse1(x, 0,
>    > DEFAULTDEPARSE), 0)); |
>
>    > Is this a fix that needs to happen within the |==| documentation? or an
>    > actual bug with the operator?
>
> This a good question.
>
> Thank you, Daniel, for providing the link to the source code in
> <R>/src/main/relop.c .
>
> Looking at that and its context, I think we (R core) should
> reconsider that implementation of '=='  which indeed does about
> the same thing as deparse {which also truncates at some point by
> default; something very very reasonable for error messages, but
> undesirable in other cases}.
>
> But I think it's fair expectation that comparing  calls  ["language"]
> with '==' should compare the full call's syntax even if that may
> occasionally be very long.

Before going there I think we should reconsider whether allowing ==
comparisons on calls is a good idea. We already don't allow it for
expresison() objects. It is probably unavoidable to allow symbols
(there are probably lots of things that would break if quote(x) == "x"
did not work and return TRUE), but for calls it makes little sense to
have "f(x)" == quote(f(x)). These are very different objects that
happen to have identical string representations. For computing on the
language identical() is the right way to go (that is what is used in
the byte code compiler and codetools).

Best,

luke

>
> Martin
>
>    > For more context the original issue we had is here:
>    > https://github.com/rstudio-education/grader/issues/28
>
>    > Workaround:
>
>    > You can get around this issue by using |all.equal| or |identical|
>
>    > |u <- quote(tidyr::gather(key = key, value = value,
>    > new_sp_m014:newrel_f65, na.rm = TRUE)) s <- quote(tidyr::gather(key =
>    > key, value = value, new_sp_m014:newrel_f65, na.rm = FALSE)) u == s #
>    > TRUE all.equal(u, s) # "target, current do not match when deparsed"
>    > identical(u, s) # FALSE |
>
>    > Thanks,
>
>    > Dan
>
>    > [1] https://github.com/wch/r-source/blob/e647f78cb85282263f88ea30c6337b77a30743d9/src/main/relop.c#L140-L155
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>

-- 
Luke Tierney
Ralph E. Wareham Professor of Mathematical Sciences
University of Iowa                  Phone:             319-335-3386
Department of Statistics and        Fax:               319-335-3017
    Actuarial Science
241 Schaeffer Hall                  email:   luke-tierney at uiowa.edu
Iowa City, IA 52242                 WWW:  http://www.stat.uiowa.edu

From |uke-t|erney @end|ng |rom u|ow@@edu  Tue Jul 16 17:22:36 2019
From: |uke-t|erney @end|ng |rom u|ow@@edu (Tierney, Luke)
Date: Tue, 16 Jul 2019 15:22:36 +0000
Subject: [Rd] 
 [External] What is the best way to determine the version of an
 `.rds`?
In-Reply-To: <CANe9BHFzp2oDnb===CyJcd_N0+paD9LQ9jZMUPg2kbci=UWs8g-3458@mail.gmail.com>
References: <CANe9BHFzp2oDnb===CyJcd_N0+paD9LQ9jZMUPg2kbci=UWs8g-3458@mail.gmail.com>
Message-ID: <alpine.DEB.2.21.1907161021440.5519@luke-Latitude-7480>

Can you add a wishlist item to bugzilla?

Thanks,

luke

On Mon, 15 Jul 2019, Jennifer Bryan wrote:

> Hi,
>
> I am writing a test that consults the serialization version of an `.rds`
> file.
>
> An attractive way to get this is:
>
> tools:::get_serialization_version() # reports just version
>
> which calls
>
> .Internal(serializeInfoFromConn() # reports much more
>
> but neither is truly exported for public use.
>
> Is there an official, exported way to get the serialization version? It is
> possible to get this information with R code yourself, but it doesn't feel
> very elegant.
>
> If not, could we have this? It's pretty easy these days to acquire a
> version 3 file, without real intent, which risks making the package require
> R >= 3.5.
>
> Thanks,
> Jenny
>
> 	[[alternative HTML version deleted]]
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>

-- 
Luke Tierney
Ralph E. Wareham Professor of Mathematical Sciences
University of Iowa                  Phone:             319-335-3386
Department of Statistics and        Fax:               319-335-3017
    Actuarial Science
241 Schaeffer Hall                  email:   luke-tierney at uiowa.edu
Iowa City, IA 52242                 WWW:  http://www.stat.uiowa.edu


From brod|e@g@@|@m @end|ng |rom y@hoo@com  Wed Jul 17 02:55:56 2019
From: brod|e@g@@|@m @end|ng |rom y@hoo@com (brodie gaslam)
Date: Wed, 17 Jul 2019 00:55:56 +0000 (UTC)
Subject: [Rd] 
 [External]  Mitigating Stalls Caused by Call Deparse on Error
In-Reply-To: <FCE27981-051E-462C-AD91-E9F4EB84F37E@rstudio.com>
References: <1095250181.1426568.1563039104421.ref@mail.yahoo.com>
 <1095250181.1426568.1563039104421@mail.yahoo.com>
 <alpine.DEB.2.21.1907140747160.5519@luke-Latitude-7480>
 <1868480939.1645077.1563114779876@mail.yahoo.com>
 <alpine.DEB.2.21.1907150902340.5519@luke-Latitude-7480>
 <FCE27981-051E-462C-AD91-E9F4EB84F37E@rstudio.com>
Message-ID: <915165325.2988549.1563324956897@mail.yahoo.com>

As per Luke's instructions I've updated the [wishlist item][1]
 to include the deparse-on-error issue, and also renamed it to
something more appropriate for its broader scope.

I do share Lionel's concern that the deparse-on-error issue
could get unnecessarily delayed in the hopes of finding a more
comprehensive issue for all the problems. I would really appreciate
 it if and when you all have a chance to look at this issue 
you could consider the possibility of resolving the deparse-on-error
 one separately if a global solution seems out of reach.

Thank you for all your work making R better and more
performant.

Best,

Brodie.


[1]: https://bugs.r-project.org/bugzilla/show_bug.cgi?id=17580


On Tuesday, July 16, 2019, 4:53:37 AM EDT, Lionel Henry <lionel at rstudio.com> wrote: 





We also have a few other suggestions and wishes about backtrace
storage and display on the one hand, and display of constructed calls
on the other hand. Perhaps it would be better to open a different
wishlist item for traceback() to keep the discussions focused?

FWIW I think deparsing backtraces lazily is a great idea. Displaying 1
line per call by default in interactive sessions, while being able to
get a more exhaustive output by calling `traceback(max.lines = Inf)`,
offers the best of both worlds. Understanding the structure of the
backtrace quickly is often more helpful than having immediate access
to all the information.

Best,
Lionel


> On 15 Jul 2019, at 16:04, Tierney, Luke <luke-tierney at uiowa.edu> wrote:
> 
> Better to add this to the wishlist item. This all needs to be looked
> at together, and nothing is likely to happen until after
> vacation/conference season.? It will disappear from everyone's radar
> if it is just in R_devel.
> 
> Best,
> 
> luke
> 
> On Sun, 14 Jul 2019, brodie gaslam wrote:
> 
>> Luke, thanks for considering the issue.? I would like to
>> try to separate the problem into two parts, as I _think_
>> your comments address primarily part 2 below:
>> 
>> 1. How can we avoid significant and possibly crippling
>>? ? stalls on error with these non-standard calls.
>> 2. What is the best way to view these non-standard calls.
>> 
>> I agree that issue 2. requires further thought and
>> discussion under a wishlist issue ([on bugzilla now][1]). 
>> While I did raise issue 2., the patch itself makes no
>> attempt to resolve it.
>> 
>> The proposed patch resolves issue 1., which is a big
>> usability problem.? Right now if you have the misfortune of
>> using `do.call` with a big object and trigger an error, you
>> have the choice of waiting a possibly long time for
>> the deparse to complete, or killing your entire R session
>> externally.
>> 
>> It seems a shame to allow a big usability issue for `do.call`
>> to remain when there is a simple solution at hand, especially
>> since the complete deparse of large objects likely serves no
>> purpose in this case. Obviously, if storing the actual calls
>> instead of their deparsed equivalents in .Traceback causes
>> problems I'm not anticipating, then that's different. 
>> Is that the case?
>> 
>> Best,
>> 
>> Brodie.
>> 
>> [1]: https://bugs.r-project.org/bugzilla/show_bug.cgi?id=17580
>> 
>> On Sunday, July 14, 2019, 8:52:45 AM EDT, Tierney, Luke <luke-tierney at uiowa.edu> wrote:
>> 
>> 
>> 
>> 
>> 
>> This is probably best viewed in the context of other issue with
>> displaying calls, such as issues arising from calls constructed in
>> non-standard evaluation contexts. Might be good to move to a wishlist
>> item in bugzilla.
>> 
>> Best,
>> 
>> luke
>> 
>> On Sat, 13 Jul 2019, brodie gaslam via R-devel wrote:
>> 
>>> When large calls cause errors R may stall for extended periods.? This
>>> is particularly likely to happen with `do.call`, as in this example
>>> with a 24 second stall:
>>> 
>>>? ? x <- runif(1e7)
>>>? ? system.time(do.call(paste0, list(abs, x)))? # intentional error
>>>? ? ## Error in (function (..., collapse = NULL)? :
>>>? ? ##? cannot coerce type 'builtin' to vector of type 'character'
>>>? ? ## Calls: system.time -> do.call -> <Anonymous>
>>>? ? ## Timing stopped at: 23.81 0.149 24.04
>>> 
>>>? ? str(.Traceback)
>>>? ? ## Dotted pair list of 3
>>>? ? ##? $ : chr [1:2500488] "(function (..., collapse = NULL) " ".Internal(paste0(list(...), collapse)))(.Primitive(\"abs\"), c(0.718117154669017, " "0.494785501621664, 0.1453434410505, 0.635028422810137, 0.0353180423844606, " "0.688418723642826, 0.889682895969599, 0.728154224809259, 0.292572240810841, " ...
>>>? ? ##? $ : chr "do.call(paste0, list(abs, x))"
>>>? ? ##? $ : chr "system.time(do.call(paste0, list(abs, x)))"
>>> 
>>> The first time I noticed this I thought my session had frozen/crashed
>>> as the standard interrupt ^C does not work during the deparse.? The
>>> stall happens when on error the call stack is deparsed prior to being
>>> saved to `.Traceback`.? The deparsing is done by `deparse1m` in native
>>> code, with the value of `getOption('deparse.max.lines')` which
>>> defaults to all lines.
>>> 
>>> Since there is little value to seeing millions of lines of deparsed
>>> objects in `traceback()`, a simple work-around is to change the
>>> `deparse.max.lines` value:
>>> 
>>>? ? options(deparse.max.lines=1)
>>>? ? system.time(do.call(paste0, list(abs, x)))
>>>? ? ## Error in (function (..., collapse = NULL)? :
>>>? ? ##? cannot coerce type 'builtin' to vector of type 'character'
>>>? ? ## Calls: system.time -> do.call -> <Anonymous>
>>>? ? ## Timing stopped at: 0 0 0
>>> 
>>> Unfortunately this will affect all `deparse` calls, and it seems
>>> undesirable to pre-emptively enable it just for calls that might cause
>>> large deparses on error.
>>> 
>>> An alternative is to store the actual calls instead of their deparsed
>>> character equivalents in `.Traceback`.? This defers the deparsing to
>>> when `traceback()` is used.? As per `?traceback`, it should be
>>> relatively safe to modify `.Traceback` in this way:
>>> 
>>>> It is undocumented where .Traceback is stored nor that it is
>>>> visible, and this is subject to change.
>>> 
>>> Deferring the deparsing to `traceback()` will give us the 
>>> opportunity to use a different `max.lines` setting as we do here
>>> with the patch applied:
>>> 
>>>? ? system.time(do.call(paste0, list(abs, x)))
>>>? ? ## Error in (function (..., collapse = NULL)? :
>>>? ? ##? cannot coerce type 'builtin' to vector of type 'character'
>>>? ? ## Timing stopped at: 0.028 0 0.029
>>> 
>>>? ? system.time(traceback(max.lines=3))
>>>? ? ## 3: (function (..., collapse = NULL)
>>>? ? ##? ? .Internal(paste0(list(...), collapse)))(.Primitive("abs"), c(0.535468587651849,
>>>? ? ##? ? 0.0540027911774814, 0.732930393889546, 0.565360915614292, 0.544816034380347,
>>>? ? ##? ? ...
>>>? ? ## 2: do.call(paste0, list(abs, x))
>>>? ? ## 1: system.time(do.call(paste0, list(abs, x)))
>>>? ? ##? ? user? system elapsed
>>>? ? ##? 0.000? 0.000? 0.003
>>> 
>>> 
>>> More generally, it might be better to have a different smaller default
>>> value for the lines to deparse when calls? are _displayed_ as parts of
>>> lists, as is the case with `traceback()`, or in `print(sys.calls())` and
>>> similar.
>>> 
>>> I attach a patch that does this.? I have run some basic tests
>>> and `make check-devel` passes. I can file an issue on bugzilla
>>> if that is a better place to have this conversation (assuming there
>>> is interest in it).
>>> 
>>> Best,
>>> 
>>> Brodie
>>> 
>>> PS: for some reason my mail client is refusing to attach the patch so I paste it
>>> starting on the next line.
>>> Index: src/gnuwin32/Rdll.hide
>>> ===================================================================
>>> --- src/gnuwin32/Rdll.hide? ? (revision 76827)
>>> +++ src/gnuwin32/Rdll.hide? ? (working copy)
>>> @@ -94,6 +94,7 @@
>>>? R_GetMaxNSize
>>>? R_GetMaxVSize
>>>? R_GetTraceback
>>> + R_GetTracebackParsed
>>>? R_GetVarLocSymbol
>>>? R_GetVarLocValue
>>>? R_HandlerStack
>>> Index: src/include/Defn.h
>>> ===================================================================
>>> --- src/include/Defn.h? ? (revision 76827)
>>> +++ src/include/Defn.h? ? (working copy)
>>> @@ -1296,6 +1296,7 @@
>>>? void NORET ErrorMessage(SEXP, int, ...);
>>>? void WarningMessage(SEXP, R_WARNING, ...);
>>>? SEXP R_GetTraceback(int);
>>> +SEXP R_GetTracebackParsed(int);
>>>? 
>>>? R_size_t R_GetMaxVSize(void);
>>>? void R_SetMaxVSize(R_size_t);
>>> Index: src/library/base/R/traceback.R
>>> ===================================================================
>>> --- src/library/base/R/traceback.R? ? (revision 76827)
>>> +++ src/library/base/R/traceback.R? ? (working copy)
>>> @@ -16,9 +16,19 @@
>>>? #? A copy of the GNU General Public License is available at
>>>? #? https://www.R-project.org/Licenses/
>>>? 
>>> -.traceback <- function(x = NULL) {
>>> -? ? if(is.null(x) && !is.null(x <- get0(".Traceback", envir = baseenv())))
>>> -? ? {}
>>> +.traceback <- function(x = NULL, max.lines=getOption("deparse.max.lines")) {
>>> +? ? if(!(is.numeric(max.lines) && !is.na(max.lines) &&
>>> +? ? ? ? as.integer(max.lines) > 0L)
>>> +? ? ) {
>>> +? ? ? ? max.lines <- -1L
>>> +? ? }
>>> +? ? if(is.null(x) && !is.null(x <- get0(".Traceback", envir = baseenv()))) {
>>> +? ? ? ? for(i in seq_along(x)) {
>>> +? ? ? ? ? ? srcref <- attr(x[[i]], 'srcref')
>>> +? ? ? ? ? ? x[[i]] <- deparse(x[[i]], nlines=max.lines)
>>> +? ? ? ? ? ? attr(x[[i]], 'srcref') <- srcref
>>> +? ? ? ? }
>>> +? ? }
>>>? ? ? else if (is.numeric(x))
>>>? ? ? ? ? x <- .Internal(traceback(x))
>>>? ? ? x
>>> @@ -26,7 +36,16 @@
>>>? 
>>>? traceback <- function(x = NULL, max.lines = getOption("deparse.max.lines"))
>>>? {
>>> -? ? n <- length(x <- .traceback(x))
>>> +? ? valid.max.lines <- is.numeric(max.lines) && !is.na(max.lines) &&
>>> +? ? ? ? as.integer(max.lines) > 0L
>>> +
>>> +? ? if(valid.max.lines) {
>>> +? ? ? ? # max.lines + 1L so we can know that output was truncated by .traceback
>>> +? ? ? ? max.lines.2 <- as.integer(max.lines) + 1L
>>> +? ? } else {
>>> +? ? ? ? max.lines.2 <- -1L
>>> +? ? }
>>> +? ? n <- length(x <- .traceback(x, max.lines=max.lines.2))
>>>? ? ? if(n == 0L)
>>>? ? ? ? ? cat(gettext("No traceback available"), "\n")
>>>? ? ? else {
>>> @@ -40,7 +59,7 @@
>>>? ? ? ? ? ? ? ? ? paste0(" at ", basename(srcfile$filename), "#", srcref[1L])
>>>? ? ? ? ? ? ? }
>>>? ? ? ? ? ? ? ## Truncate deparsed code (destroys attributes of xi)
>>> -? ? ? ? ? ? if(is.numeric(max.lines) && max.lines > 0L && max.lines < m) {
>>> +? ? ? ? ? ? if(valid.max.lines &&? max.lines < m) {
>>>? ? ? ? ? ? ? ? ? xi <- c(xi[seq_len(max.lines)], " ...")
>>>? ? ? ? ? ? ? ? ? m <- length(xi)
>>>? ? ? ? ? ? ? }
>>> Index: src/library/base/man/traceback.Rd
>>> ===================================================================
>>> --- src/library/base/man/traceback.Rd? ? (revision 76827)
>>> +++ src/library/base/man/traceback.Rd? ? (working copy)
>>> @@ -21,7 +21,7 @@
>>>? }
>>>? \usage{
>>>? traceback(x = NULL, max.lines = getOption("deparse.max.lines"))
>>> -.traceback(x = NULL)
>>> +.traceback(x = NULL, max.lines = getOption("deparse.max.lines"))
>>>? }
>>>? \arguments{
>>>? ? \item{x}{\code{NULL} (default, meaning \code{.Traceback}), or an
>>> Index: src/main/errors.c
>>> ===================================================================
>>> --- src/main/errors.c? ? (revision 76827)
>>> +++ src/main/errors.c? ? (working copy)
>>> @@ -1008,7 +1008,7 @@
>>>? ? ? ? (which should not happen) */
>>>? ? ? if (traceback && inError < 2 && inError == oldInError) {
>>>? ? ? ? ? inError = 2;
>>> -? ? ? ? PROTECT(s = R_GetTraceback(0));
>>> +? ? ? ? PROTECT(s = R_GetTracebackParsed(0));
>>>? ? ? ? ? SET_SYMVALUE(install(".Traceback"), s);
>>>? ? ? ? ? /* should have been defineVar
>>>? ? ? ? ? ? setVar(install(".Traceback"), s, R_GlobalEnv); */
>>> @@ -1440,9 +1440,11 @@
>>>? ? ? PrintWarnings();
>>>? ? ? }
>>>? }
>>> -
>>> +/*
>>> + * Return the traceback without deparsing the calls
>>> + */
>>>? attribute_hidden
>>> -SEXP R_GetTraceback(int skip)
>>> +SEXP R_GetTracebackParsed(int skip)
>>>? {
>>>? ? ? int nback = 0, ns;
>>>? ? ? RCNTXT *c;
>>> @@ -1467,7 +1469,9 @@
>>>? ? ? ? ? if (skip > 0)
>>>? ? ? ? ? skip--;
>>>? ? ? ? ? else {
>>> -? ? ? ? SETCAR(t, deparse1m(c->call, 0, DEFAULTDEPARSE));
>>> +? ? ? ? ? ? ? ? // Extra paranoid PROTECTS
>>> +? ? ? ? SETCAR(t, PROTECT(duplicate(c->call)));
>>> +? ? ? ? ? ? ? ? UNPROTECT(1);
>>>? ? ? ? ? if (c->srcref && !isNull(c->srcref)) {
>>>? ? ? ? ? ? ? SEXP sref;
>>>? ? ? ? ? ? ? if (c->srcref == R_InBCInterpreter)
>>> @@ -1482,7 +1486,26 @@
>>>? ? ? UNPROTECT(1);
>>>? ? ? return s;
>>>? }
>>> +/*
>>> + * Return the traceback with calls deparsed
>>> + */
>>> +attribute_hidden
>>> +SEXP R_GetTraceback(int skip)
>>> +{
>>> +? ? int nback = 0;
>>> +? ? SEXP s, t, u, v;
>>> +? ? s = PROTECT(R_GetTracebackParsed(skip));
>>> +? ? for(t = s; t != R_NilValue; t = CDR(t)) nback++;
>>> +? ? u = v = PROTECT(allocList(nback));
>>>? 
>>> +? ? for(t = s; t != R_NilValue; t = CDR(t), v=CDR(v)) {
>>> +? ? ? ? SETCAR(v, PROTECT(deparse1m(CAR(t), 0, DEFAULTDEPARSE)));
>>> +? ? ? ? UNPROTECT(1);
>>> +? ? }
>>> +? ? UNPROTECT(1);
>>> +? ? return u;
>>> +}
>>> +
>>>? SEXP attribute_hidden do_traceback(SEXP call, SEXP op, SEXP args, SEXP rho)
>>>? {
>>>? ? ? int skip;
>> 
>>> 
>>> ______________________________________________
>>> R-devel at r-project.org mailing list
>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>> 
>> 
>> 
> 
> -- 
> Luke Tierney
> Ralph E. Wareham Professor of Mathematical Sciences
> University of Iowa? ? ? ? ? ? ? ? ? Phone:? ? ? ? ? ? 319-335-3386
> Department of Statistics and? ? ? ? Fax:? ? ? ? ? ? ? 319-335-3017
>? ? Actuarial Science
> 241 Schaeffer Hall? ? ? ? ? ? ? ? ? email:? luke-tierney at uiowa.edu
> Iowa City, IA 52242? ? ? ? ? ? ? ? WWW:? http://www.stat.uiowa.edu

> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From rbg @end|ng |rom vt@edu  Wed Jul 17 15:18:31 2019
From: rbg @end|ng |rom vt@edu (Robert B. Gramacy)
Date: Wed, 17 Jul 2019 09:18:31 -0400
Subject: [Rd] MKL with latest Rs
Message-ID: <CAC=0fxWBHsSvyFe4QAvk6db8YdJxB5YHUpowUoPRyNYuZku4vA@mail.gmail.com>

Dear R-devel team,

I've encountered problems with recent Rs (>= 3.5.3) and MKL.  I've followed
Dirk's (http://dirk.eddelbuettel.com/blog/2018/04/15/) and Intel's (
https://software.intel.com/en-us/articles/quick-linking-intel-mkl-blas-lapack-to-r)
instructions and many versions of MKL.  All works fine in my Ubuntu 18
setup for R 3.5.2 and older.  Carrying out the install and linking
instructions works fine for later Rs, but calculations involving linear
algebra become corrupted.  E.g., following Dirk's very simple svd example
from that link above ...

> n <- 1e3
> X <- matrix(rnorm(n*n),n,n)
> Xsvd <- svd(X)
> Xsvd$d[1:5]
[1] 63.09366 62.47868 62.26147 61.94530 61.84727

... you get Eigenvalues that are bigger than 1e26 in R-devel, say, but
(correct) values near 60 with R 3.5.2.

I just wanted to throw that out there in case anyone else had come across
something similar.  I don't mind using a slightly older R/MKL for my
stuff.  I might speculate that the Microsoft R Open folks are having
similar issues because they're still using older Rs.

I haven't tried compiling and linking from source (
https://cran.r-project.org/doc/manuals/R-admin.html#MKL) because I haven't
had success with that in some time.

-B

	[[alternative HTML version deleted]]


From k@bem|@ @end|ng |rom northe@@tern@edu  Wed Jul 17 16:39:49 2019
From: k@bem|@ @end|ng |rom northe@@tern@edu (Bemis, Kylie)
Date: Wed, 17 Jul 2019 14:39:49 +0000
Subject: [Rd] ALTREP wrappers and factors
Message-ID: <57621E9B-ADF6-4ED8-9C51-AFF01C2EA821@northeastern.edu>

Hello,

I?m experimenting with ALTREP and was wondering if there is a preferred way to create an ALTREP wrapper vector without using .Internal(wrap_meta(?)), which R CMD check doesn?t like since it uses an .Internal() function.

I was trying to create a factor that used an ALTREP integer, but attempting to set the class and levels attributes always ended up duplicating and materializing the integer vector. Using the wrapper avoided this issue.

Here is my initial ALTREP integer vector:

> fc0 <- factor(c("a", "a", "b"))
>
> y <- matter::as.matter(as.integer(fc0))
> y <- matter:::as.altrep(y)
>
> .Internal(inspect(y))
@7fb0ce78c0f0 13 INTSXP g0c0 [NAM(7)] matter vector (mode=3, len=3, mem=0)

Here is what I get without a wrapper:

> fc1 <- structure(y, class="factor", levels=levels(x))
> .Internal(inspect(fc1))
@7fb0cae66408 13 INTSXP g0c2 [OBJ,NAM(2),ATT] (len=3, tl=0) 1,1,2
ATTRIB:
  @7fb0ce771868 02 LISTSXP g0c0 []
    TAG: @7fb0c80043d0 01 SYMSXP g1c0 [MARK,LCK,gp=0x4000] "class" (has value)
    @7fb0c9fcbe90 16 STRSXP g0c1 [NAM(7)] (len=1, tl=0)
      @7fb0c80841a0 09 CHARSXP g1c1 [MARK,gp=0x61] [ASCII] [cached] "factor"
    TAG: @7fb0c8004050 01 SYMSXP g1c0 [MARK,NAM(7),LCK,gp=0x4000] "levels" (has value)
    @7fb0d1dd58c8 16 STRSXP g0c2 [MARK,NAM(7)] (len=2, tl=0)
      @7fb0c81bf4c0 09 CHARSXP g1c1 [MARK,gp=0x61] [ASCII] [cached] "a"
      @7fb0c90ba728 09 CHARSXP g1c1 [MARK,gp=0x61] [ASCII] [cached] "b"

Here is what I get with a wrapper:

> fc2 <- structure(.Internal(wrap_meta(y, 0, 0)), class="factor", levels=levels(x))
> .Internal(inspect(fc2))
@7fb0ce764630 13 INTSXP g0c0 [OBJ,NAM(2),ATT]  wrapper [srt=0,no_na=0]
  @7fb0ce78c0f0 13 INTSXP g0c0 [NAM(7)] matter vector (mode=3, len=3, mem=0)
ATTRIB:
  @7fb0ce764668 02 LISTSXP g0c0 []
    TAG: @7fb0c80043d0 01 SYMSXP g1c0 [MARK,LCK,gp=0x4000] "class" (has value)
    @7fb0c9fcb010 16 STRSXP g0c1 [NAM(7)] (len=1, tl=0)
      @7fb0c80841a0 09 CHARSXP g1c1 [MARK,gp=0x61] [ASCII] [cached] "factor"
    TAG: @7fb0c8004050 01 SYMSXP g1c0 [MARK,NAM(7),LCK,gp=0x4000] "levels" (has value)
    @7fb0d1dd58c8 16 STRSXP g0c2 [MARK,NAM(7)] (len=2, tl=0)
      @7fb0c81bf4c0 09 CHARSXP g1c1 [MARK,gp=0x61] [ASCII] [cached] "a"
      @7fb0c90ba728 09 CHARSXP g1c1 [MARK,gp=0x61] [ASCII] [cached] "b"

Is there a way to do this that doesn?t rely on .Internal() and won?t produce R CMD check warnings?

~~~
Kylie Ariel Bemis
Khoury College of Computer Sciences
Northeastern University
kuwisdelu.github.io<https://kuwisdelu.github.io>











	[[alternative HTML version deleted]]


From bob @end|ng |rom rud@|@  Thu Jul 18 10:17:43 2019
From: bob @end|ng |rom rud@|@ (Bob Rudis)
Date: Thu, 18 Jul 2019 04:17:43 -0400
Subject: [Rd] Addition of a meta viewport tag to HTML manuals
In-Reply-To: <23852.19641.838145.731228@stat.math.ethz.ch>
References: <7FAF4E2F-6981-4CC0-98FB-7FCA96C2A9EF@rud.is>
 <23852.19641.838145.731228@stat.math.ethz.ch>
Message-ID: <CAA-FpKXZAcARgDqMXdiXWU20TRQiLneiTuiz1B+uO2Qitz=vOw@mail.gmail.com>

Thanks for both the support & sage advice, Martin!

And, aye, tis straightforward to convert the perl one-liner to a
shell/sed idiom.

A kind soul from the list has also offered to walk me through the
"provide a patch" process and I'll do my best to get it right on Par 1
:-)

-Bob

On Mon, Jul 15, 2019 at 5:54 AM Martin Maechler
<maechler at stat.math.ethz.ch> wrote:
>
> >>>>> Bob Rudis
> >>>>>     on Tue, 9 Jul 2019 14:24:24 -0400 writes:
>
>     > The addition of a single line:
>     > <meta name="viewport" content="width=device-width, initial-scale=1.0">
>
>     > at in the <head> of the R HTML generated manuals would make them much easier to read on mobile devices.
>
>     > texi2any (which generates the HTML files) is based on long-working Perl code that includes many modern HTML elements but does not include this one.
>
>     > A Perl one-liner in the install-html: Makefile directive in Makefile.in:
>
>     > install-html: installdirs
>     > @for f in $(OBJECTS_HTML); do \
>     > if test -f $${f} ; then \
>     > $(INSTALL_DATA) $${f} "$(DESTDIR)$(rdocdir)/manual"; \
>     > perl -pi -e 's/\<meta name="desc/<meta name="viewport" content="width=device-width, initial-scale=1.0">\n<meta name="desc/' "$(DESTDIR)$(rdocdir)/manual/*.html"; \
>     > fi \
>     > done
>
>     > would insert this (I still need to read Makefile.win to see where it should go there) and I'd be glad to create a PR unless folks do not think better accessibility on mobile is a good idea.
>
> To the contrary.
> Thank you very much, Bob, for bringing this up, here!
>
>     > $(PERL) does not seem to be defined but Perl itself is a requirement for texi2any so it is definitely something that would work in the current installation process.
>
>     > -Bob
>
> Hmm,.. a very long time ago,  perl was an absolute requirement
> for building R from the sources, but in the mean time, it's not
> been required anymore strictly *).  AFAIK, there are alternative versions
> of versions/alternatives to texi2any  (say on Windoze .. or
> bizarre Linux distros or non-linux unices), and I'm almost sure
> we do not want to require perl explicitly.
>
> We are using R itself in many places for installation things,
> but here, it should be possible to use smaller unix tools (such
> as 'sed' and 'grep' say) instead.
>
> If you (or someone else) provided a small patch for using those
> instead of perl, I don't see a reason not to be grateful and
> apply it to the sources.
>
> Thank you once more
> Martin
>
>
> --
> *)  perl is mentioned twice in the "R Administration and
>     Installation" manual:
>     1. maybe needed for 'install-info'  *if* there's no
>       'install-info' command on the system [but on my Fedora and
>        probably most "math-y" Linux dist there is a binary]
>
>     2. On Windoze, the texinfo 5.x package needs perl


From @zwj|08 @end|ng |rom gm@||@com  Thu Jul 18 21:21:32 2019
From: @zwj|08 @end|ng |rom gm@||@com (King Jiefei)
Date: Thu, 18 Jul 2019 15:21:32 -0400
Subject: [Rd] ALTREP wrappers and factors
In-Reply-To: <57621E9B-ADF6-4ED8-9C51-AFF01C2EA821@northeastern.edu>
References: <57621E9B-ADF6-4ED8-9C51-AFF01C2EA821@northeastern.edu>
Message-ID: <CAGiFhPOWCorUaaGd4Wca4+5a3k8dzp3pAVffK8WmFkXy7rdmGg@mail.gmail.com>

Hi Kylie,

For your question, I don't think a wrapper can completely solve your
problem. The duplication occurs since your variable y has more than 1
reference number( Please see highlighted), so even you have a wrapper, any
changes on the value of the wrapper still can trigger the duplication.

> .Internal(inspect(y))
> @7fb0ce78c0f0 13 INTSXP g0c0 *[NAM(7)]* matter vector (mode=3, len=3,
> mem=0)


My guess is that *matter:::as.altrep* function assigned the variable *y* to
a local variable so that it increases the reference number. For example:

*This would not cause a duplication*

> > a=c(1,2,3)
> > .Internal(inspect(a))
> @0x000000002384f530 14 REALSXP g0c3 [NAM(1)] (len=3, tl=0) 1,2,3
> > attr(a,"dim")=c(1,3)
> > .Internal(inspect(a))
> @0x000000002384f530 14 REALSXP g0c3 [NAM(1),ATT] (len=3, tl=0) 1,2,3
> ATTRIB:
>   @0x0000000023864b58 02 LISTSXP g0c0 []
>     TAG: @0x00000000044b1a90 01 SYMSXP g1c0 [MARK,LCK,gp=0x4000] "dim"
> (has value)
>     @0x000000002384cb48 13 INTSXP g0c1 [NAM(7)] (len=2, tl=0) 1,3
>

*This would cause a duplication, even though the function test does
nothing.*

> > test<-function(x) x1=x
> > a=c(1,2,3)
> > .Internal(inspect(a))
> @0x000000002384f260 14 REALSXP g0c3 [NAM(1)] (len=3, tl=0) 1,2,3
> > test(a)
> > .Internal(inspect(a))
> @0x000000002384f260 14 REALSXP g0c3 [NAM(7)] (len=3, tl=0) 1,2,3
> > attr(a,"dim")=c(1,3)
> > .Internal(inspect(a))
> @0x000000002384f0d0 14 REALSXP g0c3 [NAM(1),ATT] (len=3, tl=0) 1,2,3
> ATTRIB:
>   @0x00000000238666c0 02 LISTSXP g0c0 []
>     TAG: @0x00000000044b1a90 01 SYMSXP g1c0 [MARK,LCK,gp=0x4000] "dim"
> (has value)
>     @0x000000002384c6e8 13 INTSXP g0c1 [NAM(7)] (len=2, tl=0) 1,3
>


If that is the case and you are 100% sure the reference number should be 1
for your variable *y*, my solution is to call *SET_NAMED *in C++ to reset
the reference number. Note that you need to unbind your local variable
before you reset the number. To return an unbound SEXP,  the C++ function
should be placed at the end of your *matter:::as.altrep *function. I don't
know if there is any simpler way to do that and I'll be happy to see any
opinion.


Also, I notice that you are using ALTREP to create a wrapper for your
*matter_vec *class. I'm an author of AltWrapper package and the package is
able to define an ALTREP in pure R level, it is capable to add an attribute
to ALTREP object when creating the object and has a correct reference
number. The simplest example would be

*CODE*
```
library(AltWrapper)
inspectFunc <- function(x) cat("Altrep object\n")
lengthFunc <- function(x) return(length(x))
getPtrFunc <- function(x, writeable) return(x)

setAltClass(className = "test", classType = "real")
setAltMethod(className = "test", inspect = inspectFunc)
setAltMethod(className = "test", getLength = lengthFunc)
setAltMethod(className = "test", getDataptr = getPtrFunc)

A = runif(6)
A_alt = makeAltrep(className = "test", x = A, *attributes = list(dim = c(2,
3))*)
```
*RESULT*
```
> .Internal(inspect(A_alt))
@0x000000002385ac00 14 REALSXP g0c0 [NAM(1),ATT] Altrep object
ATTRIB:
  @0x000000002385a8b8 02 LISTSXP g0c0 []
    TAG: @0x00000000044b1a90 01 SYMSXP g1c0 [MARK,LCK,gp=0x4000] "dim" (has
value)
    @0x000000002384d590 13 INTSXP g0c1 [NAM(7)] (len=2, tl=0) 2,3
> A_alt
          [,1]     [,2]      [,3]
[1,] 0.9430458 0.548670 0.4148741
[2,] 0.9550899 0.251857 0.6077540
```
I will be happy to talk more about it if you are interested in the package,
it is available at
https://github.com/Jiefei-Wang/AltWrapper

Best,
Jiefei


On Thu, Jul 18, 2019 at 3:28 AM Bemis, Kylie <k.bemis at northeastern.edu>
wrote:

> Hello,
>
> I?m experimenting with ALTREP and was wondering if there is a preferred
> way to create an ALTREP wrapper vector without using
> .Internal(wrap_meta(?)), which R CMD check doesn?t like since it uses an
> .Internal() function.
>
> I was trying to create a factor that used an ALTREP integer, but
> attempting to set the class and levels attributes always ended up
> duplicating and materializing the integer vector. Using the wrapper avoided
> this issue.
>
> Here is my initial ALTREP integer vector:
>
> > fc0 <- factor(c("a", "a", "b"))
> >
> > y <- matter::as.matter(as.integer(fc0))
> > y <- matter:::as.altrep(y)
> >
> > .Internal(inspect(y))
> @7fb0ce78c0f0 13 INTSXP g0c0 [NAM(7)] matter vector (mode=3, len=3, mem=0)
>
> Here is what I get without a wrapper:
>
> > fc1 <- structure(y, class="factor", levels=levels(x))
> > .Internal(inspect(fc1))
> @7fb0cae66408 13 INTSXP g0c2 [OBJ,NAM(2),ATT] (len=3, tl=0) 1,1,2
> ATTRIB:
>   @7fb0ce771868 02 LISTSXP g0c0 []
>     TAG: @7fb0c80043d0 01 SYMSXP g1c0 [MARK,LCK,gp=0x4000] "class" (has
> value)
>     @7fb0c9fcbe90 16 STRSXP g0c1 [NAM(7)] (len=1, tl=0)
>       @7fb0c80841a0 09 CHARSXP g1c1 [MARK,gp=0x61] [ASCII] [cached]
> "factor"
>     TAG: @7fb0c8004050 01 SYMSXP g1c0 [MARK,NAM(7),LCK,gp=0x4000] "levels"
> (has value)
>     @7fb0d1dd58c8 16 STRSXP g0c2 [MARK,NAM(7)] (len=2, tl=0)
>       @7fb0c81bf4c0 09 CHARSXP g1c1 [MARK,gp=0x61] [ASCII] [cached] "a"
>       @7fb0c90ba728 09 CHARSXP g1c1 [MARK,gp=0x61] [ASCII] [cached] "b"
>
> Here is what I get with a wrapper:
>
> > fc2 <- structure(.Internal(wrap_meta(y, 0, 0)), class="factor",
> levels=levels(x))
> > .Internal(inspect(fc2))
> @7fb0ce764630 13 INTSXP g0c0 [OBJ,NAM(2),ATT]  wrapper [srt=0,no_na=0]
>   @7fb0ce78c0f0 13 INTSXP g0c0 [NAM(7)] matter vector (mode=3, len=3,
> mem=0)
> ATTRIB:
>   @7fb0ce764668 02 LISTSXP g0c0 []
>     TAG: @7fb0c80043d0 01 SYMSXP g1c0 [MARK,LCK,gp=0x4000] "class" (has
> value)
>     @7fb0c9fcb010 16 STRSXP g0c1 [NAM(7)] (len=1, tl=0)
>       @7fb0c80841a0 09 CHARSXP g1c1 [MARK,gp=0x61] [ASCII] [cached]
> "factor"
>     TAG: @7fb0c8004050 01 SYMSXP g1c0 [MARK,NAM(7),LCK,gp=0x4000] "levels"
> (has value)
>     @7fb0d1dd58c8 16 STRSXP g0c2 [MARK,NAM(7)] (len=2, tl=0)
>       @7fb0c81bf4c0 09 CHARSXP g1c1 [MARK,gp=0x61] [ASCII] [cached] "a"
>       @7fb0c90ba728 09 CHARSXP g1c1 [MARK,gp=0x61] [ASCII] [cached] "b"
>
> Is there a way to do this that doesn?t rely on .Internal() and won?t
> produce R CMD check warnings?
>
> ~~~
> Kylie Ariel Bemis
> Khoury College of Computer Sciences
> Northeastern University
> kuwisdelu.github.io<https://kuwisdelu.github.io>
>
>
>
>
>
>
>
>
>
>
>
>         [[alternative HTML version deleted]]
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>

	[[alternative HTML version deleted]]


From g@bembecker @end|ng |rom gm@||@com  Fri Jul 19 04:00:03 2019
From: g@bembecker @end|ng |rom gm@||@com (Gabriel Becker)
Date: Thu, 18 Jul 2019 19:00:03 -0700
Subject: [Rd] ALTREP wrappers and factors
In-Reply-To: <CAGiFhPOWCorUaaGd4Wca4+5a3k8dzp3pAVffK8WmFkXy7rdmGg@mail.gmail.com>
References: <57621E9B-ADF6-4ED8-9C51-AFF01C2EA821@northeastern.edu>
 <CAGiFhPOWCorUaaGd4Wca4+5a3k8dzp3pAVffK8WmFkXy7rdmGg@mail.gmail.com>
Message-ID: <CAD4oTHHVLUZyVd6V8GWx2onN3xD8o9g3ji8tZ6LEu2OFU8jC_Q@mail.gmail.com>

Hi Jiefei and Kylie,

Great to see people engaging with the ALTREP framework and identifying
places we may need more tooling. Comments inline.

On Thu, Jul 18, 2019 at 12:22 PM King Jiefei <szwjf08 at gmail.com> wrote:

>
> If that is the case and you are 100% sure the reference number should be 1
> for your variable *y*, my solution is to call *SET_NAMED *in C++ to reset
> the reference number. Note that you need to unbind your local variable
> before you reset the number. To return an unbound SEXP,  the C++ function
> should be placed at the end of your *matter:::as.altrep *function. I don't
> know if there is any simpler way to do that and I'll be happy to see any
> opinion.
>

So as far as I know, manually setting the NAMED value on any SEXP the
garbage collector is aware of is a direct violation of C-API contract and
not something that package code should ever be doing.

Its not at all clear to me that you can *ever* be 100% sure that the
reference number should be 1 when it is not currently one for an R object
that exists at the R-level (as opposed to only in pure C code). Sure, maybe
the object is created within the body of your R function instead of being
passed in, but what if someone is debugging your function and assigns the
value to the global environment using <<-  for later inspection; now  you
have an invalidly low NAMED value, ie you have a segfault coming. I know of
no way for you to prevent this or even know it has happened.



> On Thu, Jul 18, 2019 at 3:28 AM Bemis, Kylie <k.bemis at northeastern.edu>
> wrote:
>
> > Hello,
> >
> > I?m experimenting with ALTREP and was wondering if there is a preferred
> > way to create an ALTREP wrapper vector without using
> > .Internal(wrap_meta(?)), which R CMD check doesn?t like since it uses an
> > .Internal() function.
>

So there is the .doSortWrap  (and its currently inexplicably identical
clone .doWrap) function in base, which is an R level function that calls
down to .Internal(wrap_meta(...)), which you can use, but it doesn't look
general enough for what  I think you need (it was written for things that
have just been sorted, thus the name). Specifically, its not able to
indicate that things are of unknown sortedness as currently written.  If
matter vectors are guaranteed to be sorted for some reason, though, you can
use this. I'll talk to Luke about whether we want to generalize this, it
would be easy to have this support the full space of metadata for wrappers
and be a general purpose wrapper-maker, but that isn't what it is right now.

At the C-level, it looks like we do make R_tryWrap available (it appears in
Rinternals.h, and not within a USE_RINTERNALS section),so you can call that
from your own C(++) code. This creates a wrapper that has no metadata on it
(or rather it has metadata but  the metadata indicates that no special info
is known about the vector).

>
> > I was trying to create a factor that used an ALTREP integer, but
> > attempting to set the class and levels attributes always ended up
> > duplicating and materializing the integer vector. Using the wrapper
> avoided
> > this issue.
> >
> > Here is my initial ALTREP integer vector:
> >
> > > fc0 <- factor(c("a", "a", "b"))
> > >
> > > y <- matter::as.matter(as.integer(fc0))
> > > y <- matter:::as.altrep(y)
> > >
> > > .Internal(inspect(y))
> > @7fb0ce78c0f0 13 INTSXP g0c0 [NAM(7)] matter vector (mode=3, len=3,
> mem=0)
> >
> > Here is what I get without a wrapper:
> >
> > > fc1 <- structure(y, class="factor", levels=levels(x))
> > > .Internal(inspect(fc1))
> > @7fb0cae66408 13 INTSXP g0c2 [OBJ,NAM(2),ATT] (len=3, tl=0) 1,1,2
> > ATTRIB:
> >   @7fb0ce771868 02 LISTSXP g0c0 []
> >     TAG: @7fb0c80043d0 01 SYMSXP g1c0 [MARK,LCK,gp=0x4000] "class" (has
> > value)
> >     @7fb0c9fcbe90 16 STRSXP g0c1 [NAM(7)] (len=1, tl=0)
> >       @7fb0c80841a0 09 CHARSXP g1c1 [MARK,gp=0x61] [ASCII] [cached]
> > "factor"
> >     TAG: @7fb0c8004050 01 SYMSXP g1c0 [MARK,NAM(7),LCK,gp=0x4000]
> "levels"
> > (has value)
> >     @7fb0d1dd58c8 16 STRSXP g0c2 [MARK,NAM(7)] (len=2, tl=0)
> >       @7fb0c81bf4c0 09 CHARSXP g1c1 [MARK,gp=0x61] [ASCII] [cached] "a"
> >       @7fb0c90ba728 09 CHARSXP g1c1 [MARK,gp=0x61] [ASCII] [cached] "b"
> >
> > Here is what I get with a wrapper:
> >
> > > fc2 <- structure(.Internal(wrap_meta(y, 0, 0)), class="factor",
> > levels=levels(x))
> > > .Internal(inspect(fc2))
> > @7fb0ce764630 13 INTSXP g0c0 [OBJ,NAM(2),ATT]  wrapper [srt=0,no_na=0]
> >   @7fb0ce78c0f0 13 INTSXP g0c0 [NAM(7)] matter vector (mode=3, len=3,
> > mem=0)
> > ATTRIB:
> >   @7fb0ce764668 02 LISTSXP g0c0 []
> >     TAG: @7fb0c80043d0 01 SYMSXP g1c0 [MARK,LCK,gp=0x4000] "class" (has
> > value)
> >     @7fb0c9fcb010 16 STRSXP g0c1 [NAM(7)] (len=1, tl=0)
> >       @7fb0c80841a0 09 CHARSXP g1c1 [MARK,gp=0x61] [ASCII] [cached]
> > "factor"
> >     TAG: @7fb0c8004050 01 SYMSXP g1c0 [MARK,NAM(7),LCK,gp=0x4000]
> "levels"
> > (has value)
> >     @7fb0d1dd58c8 16 STRSXP g0c2 [MARK,NAM(7)] (len=2, tl=0)
> >       @7fb0c81bf4c0 09 CHARSXP g1c1 [MARK,gp=0x61] [ASCII] [cached] "a"
> >       @7fb0c90ba728 09 CHARSXP g1c1 [MARK,gp=0x61] [ASCII] [cached] "b"
> >
> > Is there a way to do this that doesn?t rely on .Internal() and won?t
> > produce R CMD check warnings?
> >
> > ~~~
> > Kylie Ariel Bemis
> > Khoury College of Computer Sciences
> > Northeastern University
> > kuwisdelu.github.io<https://kuwisdelu.github.io>
> >
> >
> >
> >
> >
> >
> >
> >
> >
> >
> >
> >         [[alternative HTML version deleted]]
> >
> > ______________________________________________
> > R-devel at r-project.org mailing list
> > https://stat.ethz.ch/mailman/listinfo/r-devel
> >
>
>         [[alternative HTML version deleted]]
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>

	[[alternative HTML version deleted]]


From @pyqqqd|@ @end|ng |rom y@hoo@com  Thu Jul 18 16:55:54 2019
From: @pyqqqd|@ @end|ng |rom y@hoo@com (Michael Meyer)
Date: Thu, 18 Jul 2019 14:55:54 +0000 (UTC)
Subject: [Rd] inconsistent behaviour of c(...)
Message-ID: <1436228557.3054326.1563461754675@mail.yahoo.com>



Greetings,

Running R 3.5.0 under Windows 7

typeof(c(1,"2")) yields "character" as expected. But in

d.f <- data.frame(C=c(1,"2"))

typeof(d.f$C) yields "integer".

Is this a bug?

Michael Meyer


From peter@|@ng|e|der @end|ng |rom gm@||@com  Fri Jul 19 09:19:39 2019
From: peter@|@ng|e|der @end|ng |rom gm@||@com (Peter Langfelder)
Date: Fri, 19 Jul 2019 00:19:39 -0700
Subject: [Rd] inconsistent behaviour of c(...)
In-Reply-To: <1436228557.3054326.1563461754675@mail.yahoo.com>
References: <1436228557.3054326.1563461754675@mail.yahoo.com>
Message-ID: <CA+hbrhVYPsYo6ZBtLi_Jj2mu4feVahW+oko=M6C0XBAkWqYFSg@mail.gmail.com>

I think your character vector got converted to a factor. See ?options,
section stringsAsFactors:

     ?stringsAsFactors?: The default setting for arguments of
          ?data.frame? and ?read.table?.
The default is TRUE, so strings get converted to factors when building
data frames.

Set options(stringsAsFactors=FALSE) and try again.

Peter

On Fri, Jul 19, 2019 at 12:15 AM Michael Meyer via R-devel
<r-devel at r-project.org> wrote:
>
>
>
> Greetings,
>
> Running R 3.5.0 under Windows 7
>
> typeof(c(1,"2")) yields "character" as expected. But in
>
> d.f <- data.frame(C=c(1,"2"))
>
> typeof(d.f$C) yields "integer".
>
> Is this a bug?
>
> Michael Meyer
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From ru|pb@rr@d@@ @end|ng |rom @@po@pt  Fri Jul 19 12:54:42 2019
From: ru|pb@rr@d@@ @end|ng |rom @@po@pt (Rui Barradas)
Date: Fri, 19 Jul 2019 11:54:42 +0100
Subject: [Rd] inconsistent behaviour of c(...)
In-Reply-To: <CA+hbrhVYPsYo6ZBtLi_Jj2mu4feVahW+oko=M6C0XBAkWqYFSg@mail.gmail.com>
References: <1436228557.3054326.1563461754675@mail.yahoo.com>
 <CA+hbrhVYPsYo6ZBtLi_Jj2mu4feVahW+oko=M6C0XBAkWqYFSg@mail.gmail.com>
Message-ID: <133974ac-1ca5-82ee-fbf7-25ae16bd2b77@sapo.pt>

Hello,

A way to see this is with ?class

# OP's code
typeof(c(1,"2")) # "character"

d.f <- data.frame(C=c(1,"2"))
typeof(d.f$C)    # "integer"

# And check the objects' classes
class(c(1,"2")) # "character"
class(d.f$C)    # "factor"


Hope this helps,

Rui Barradas


?s 08:19 de 19/07/19, Peter Langfelder escreveu:
> I think your character vector got converted to a factor. See ?options,
> section stringsAsFactors:
> 
>       ?stringsAsFactors?: The default setting for arguments of
>            ?data.frame? and ?read.table?.
> The default is TRUE, so strings get converted to factors when building
> data frames.
> 
> Set options(stringsAsFactors=FALSE) and try again.
> 
> Peter
> 
> On Fri, Jul 19, 2019 at 12:15 AM Michael Meyer via R-devel
> <r-devel at r-project.org> wrote:
>>
>>
>>
>> Greetings,
>>
>> Running R 3.5.0 under Windows 7
>>
>> typeof(c(1,"2")) yields "character" as expected. But in
>>
>> d.f <- data.frame(C=c(1,"2"))
>>
>> typeof(d.f$C) yields "integer".
>>
>> Is this a bug?
>>
>> Michael Meyer
>>
>> ______________________________________________
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>


From ru|pb@rr@d@@ @end|ng |rom @@po@pt  Fri Jul 19 12:58:59 2019
From: ru|pb@rr@d@@ @end|ng |rom @@po@pt (Rui Barradas)
Date: Fri, 19 Jul 2019 11:58:59 +0100
Subject: [Rd] inconsistent behaviour of c(...)
In-Reply-To: <133974ac-1ca5-82ee-fbf7-25ae16bd2b77@sapo.pt>
References: <1436228557.3054326.1563461754675@mail.yahoo.com>
 <CA+hbrhVYPsYo6ZBtLi_Jj2mu4feVahW+oko=M6C0XBAkWqYFSg@mail.gmail.com>
 <133974ac-1ca5-82ee-fbf7-25ae16bd2b77@sapo.pt>
Message-ID: <6dd8f2c2-972b-48f2-e68b-da10bc6e76b6@sapo.pt>

I forgot there is also ?mode.


mode(c(1,"2")) # "character"
mode(d.f$C)    # "numeric" (not "integer")


Rui Barradas

?s 11:54 de 19/07/19, Rui Barradas escreveu:
> Hello,
> 
> A way to see this is with ?class
> 
> # OP's code
> typeof(c(1,"2")) # "character"
> 
> d.f <- data.frame(C=c(1,"2"))
> typeof(d.f$C)??? # "integer"
> 
> # And check the objects' classes
> class(c(1,"2")) # "character"
> class(d.f$C)??? # "factor"
> 
> 
> Hope this helps,
> 
> Rui Barradas
> 
> 
> ?s 08:19 de 19/07/19, Peter Langfelder escreveu:
>> I think your character vector got converted to a factor. See ?options,
>> section stringsAsFactors:
>>
>> ????? ?stringsAsFactors?: The default setting for arguments of
>> ?????????? ?data.frame? and ?read.table?.
>> The default is TRUE, so strings get converted to factors when building
>> data frames.
>>
>> Set options(stringsAsFactors=FALSE) and try again.
>>
>> Peter
>>
>> On Fri, Jul 19, 2019 at 12:15 AM Michael Meyer via R-devel
>> <r-devel at r-project.org> wrote:
>>>
>>>
>>>
>>> Greetings,
>>>
>>> Running R 3.5.0 under Windows 7
>>>
>>> typeof(c(1,"2")) yields "character" as expected. But in
>>>
>>> d.f <- data.frame(C=c(1,"2"))
>>>
>>> typeof(d.f$C) yields "integer".
>>>
>>> Is this a bug?
>>>
>>> Michael Meyer
>>>
>>> ______________________________________________
>>> R-devel at r-project.org mailing list
>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>
>> ______________________________________________
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From |uke-t|erney @end|ng |rom u|ow@@edu  Fri Jul 19 14:34:48 2019
From: |uke-t|erney @end|ng |rom u|ow@@edu (Tierney, Luke)
Date: Fri, 19 Jul 2019 12:34:48 +0000
Subject: [Rd] [External] Re:  ALTREP wrappers and factors
In-Reply-To: <CAD4oTHHVLUZyVd6V8GWx2onN3xD8o9g3ji8tZ6LEu2OFU8jC_Q@mail.gmail.com>
References: <57621E9B-ADF6-4ED8-9C51-AFF01C2EA821@northeastern.edu>
 <CAGiFhPOWCorUaaGd4Wca4+5a3k8dzp3pAVffK8WmFkXy7rdmGg@mail.gmail.com>
 <CAD4oTHHVLUZyVd6V8GWx2onN3xD8o9g3ji8tZ6LEu2OFU8jC_Q@mail.gmail.com>
Message-ID: <alpine.DEB.2.21.1907190712461.5519@luke-Latitude-7480>

On Fri, 19 Jul 2019, Gabriel Becker wrote:

> Hi Jiefei and Kylie,
>
> Great to see people engaging with the ALTREP framework and identifying
> places we may need more tooling. Comments inline.
>
> On Thu, Jul 18, 2019 at 12:22 PM King Jiefei <szwjf08 at gmail.com> wrote:
>
>>
>> If that is the case and you are 100% sure the reference number should be 1
>> for your variable *y*, my solution is to call *SET_NAMED *in C++ to reset
>> the reference number. Note that you need to unbind your local variable
>> before you reset the number. To return an unbound SEXP,  the C++ function
>> should be placed at the end of your *matter:::as.altrep *function. I don't
>> know if there is any simpler way to do that and I'll be happy to see any
>> opinion.
>>
>
> So as far as I know, manually setting the NAMED value on any SEXP the
> garbage collector is aware of is a direct violation of C-API contract and
> not something that package code should ever be doing.
>
> Its not at all clear to me that you can *ever* be 100% sure that the
> reference number should be 1 when it is not currently one for an R object
> that exists at the R-level (as opposed to only in pure C code). Sure, maybe
> the object is created within the body of your R function instead of being
> passed in, but what if someone is debugging your function and assigns the
> value to the global environment using <<-  for later inspection; now  you
> have an invalidly low NAMED value, ie you have a segfault coming. I know of
> no way for you to prevent this or even know it has happened.

SET_NAMED should NEVER be used in a package. In fact it will hopefully
disappear at some point not too far in the future.

>> On Thu, Jul 18, 2019 at 3:28 AM Bemis, Kylie <k.bemis at northeastern.edu>
>> wrote:
>>
>>> Hello,
>>>
>>> I?m experimenting with ALTREP and was wondering if there is a preferred
>>> way to create an ALTREP wrapper vector without using
>>> .Internal(wrap_meta(?)), which R CMD check doesn?t like since it uses an
>>> .Internal() function.
>>
>
> So there is the .doSortWrap  (and its currently inexplicably identical
> clone .doWrap) function in base, which is an R level function that calls
> down to .Internal(wrap_meta(...)), which you can use, but it doesn't look
> general enough for what  I think you need (it was written for things that
> have just been sorted, thus the name). Specifically, its not able to
> indicate that things are of unknown sortedness as currently written.  If
> matter vectors are guaranteed to be sorted for some reason, though, you can
> use this. I'll talk to Luke about whether we want to generalize this, it
> would be easy to have this support the full space of metadata for wrappers
> and be a general purpose wrapper-maker, but that isn't what it is right now.
>
> At the C-level, it looks like we do make R_tryWrap available (it appears in
> Rinternals.h, and not within a USE_RINTERNALS section),so you can call that
> from your own C(++) code. This creates a wrapper that has no metadata on it
> (or rather it has metadata but  the metadata indicates that no special info
> is known about the vector).

At this point we are not ready to cast in stone an interface to
creating wrappers from R.  The C R_tryWrap could be used, but it is
still subject to change.

You might try your example with a larger vector. In R 3.6.x
structure() should produce a wrapper for length 100 or more.

Best,

luke

>>
>>> I was trying to create a factor that used an ALTREP integer, but
>>> attempting to set the class and levels attributes always ended up
>>> duplicating and materializing the integer vector. Using the wrapper
>> avoided
>>> this issue.
>>>
>>> Here is my initial ALTREP integer vector:
>>>
>>>> fc0 <- factor(c("a", "a", "b"))
>>>>
>>>> y <- matter::as.matter(as.integer(fc0))
>>>> y <- matter:::as.altrep(y)
>>>>
>>>> .Internal(inspect(y))
>>> @7fb0ce78c0f0 13 INTSXP g0c0 [NAM(7)] matter vector (mode=3, len=3,
>> mem=0)
>>>
>>> Here is what I get without a wrapper:
>>>
>>>> fc1 <- structure(y, class="factor", levels=levels(x))
>>>> .Internal(inspect(fc1))
>>> @7fb0cae66408 13 INTSXP g0c2 [OBJ,NAM(2),ATT] (len=3, tl=0) 1,1,2
>>> ATTRIB:
>>>   @7fb0ce771868 02 LISTSXP g0c0 []
>>>     TAG: @7fb0c80043d0 01 SYMSXP g1c0 [MARK,LCK,gp=0x4000] "class" (has
>>> value)
>>>     @7fb0c9fcbe90 16 STRSXP g0c1 [NAM(7)] (len=1, tl=0)
>>>       @7fb0c80841a0 09 CHARSXP g1c1 [MARK,gp=0x61] [ASCII] [cached]
>>> "factor"
>>>     TAG: @7fb0c8004050 01 SYMSXP g1c0 [MARK,NAM(7),LCK,gp=0x4000]
>> "levels"
>>> (has value)
>>>     @7fb0d1dd58c8 16 STRSXP g0c2 [MARK,NAM(7)] (len=2, tl=0)
>>>       @7fb0c81bf4c0 09 CHARSXP g1c1 [MARK,gp=0x61] [ASCII] [cached] "a"
>>>       @7fb0c90ba728 09 CHARSXP g1c1 [MARK,gp=0x61] [ASCII] [cached] "b"
>>>
>>> Here is what I get with a wrapper:
>>>
>>>> fc2 <- structure(.Internal(wrap_meta(y, 0, 0)), class="factor",
>>> levels=levels(x))
>>>> .Internal(inspect(fc2))
>>> @7fb0ce764630 13 INTSXP g0c0 [OBJ,NAM(2),ATT]  wrapper [srt=0,no_na=0]
>>>   @7fb0ce78c0f0 13 INTSXP g0c0 [NAM(7)] matter vector (mode=3, len=3,
>>> mem=0)
>>> ATTRIB:
>>>   @7fb0ce764668 02 LISTSXP g0c0 []
>>>     TAG: @7fb0c80043d0 01 SYMSXP g1c0 [MARK,LCK,gp=0x4000] "class" (has
>>> value)
>>>     @7fb0c9fcb010 16 STRSXP g0c1 [NAM(7)] (len=1, tl=0)
>>>       @7fb0c80841a0 09 CHARSXP g1c1 [MARK,gp=0x61] [ASCII] [cached]
>>> "factor"
>>>     TAG: @7fb0c8004050 01 SYMSXP g1c0 [MARK,NAM(7),LCK,gp=0x4000]
>> "levels"
>>> (has value)
>>>     @7fb0d1dd58c8 16 STRSXP g0c2 [MARK,NAM(7)] (len=2, tl=0)
>>>       @7fb0c81bf4c0 09 CHARSXP g1c1 [MARK,gp=0x61] [ASCII] [cached] "a"
>>>       @7fb0c90ba728 09 CHARSXP g1c1 [MARK,gp=0x61] [ASCII] [cached] "b"
>>>
>>> Is there a way to do this that doesn?t rely on .Internal() and won?t
>>> produce R CMD check warnings?
>>>
>>> ~~~
>>> Kylie Ariel Bemis
>>> Khoury College of Computer Sciences
>>> Northeastern University
>>> kuwisdelu.github.io<https://kuwisdelu.github.io>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>         [[alternative HTML version deleted]]
>>>
>>> ______________________________________________
>>> R-devel at r-project.org mailing list
>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>>
>>
>>         [[alternative HTML version deleted]]
>>
>> ______________________________________________
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>
>
> 	[[alternative HTML version deleted]]
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>

-- 
Luke Tierney
Ralph E. Wareham Professor of Mathematical Sciences
University of Iowa                  Phone:             319-335-3386
Department of Statistics and        Fax:               319-335-3017
    Actuarial Science
241 Schaeffer Hall                  email:   luke-tierney at uiowa.edu
Iowa City, IA 52242                 WWW:  http://www.stat.uiowa.edu

From tr@ver@c @end|ng |rom gm@||@com  Fri Jul 19 19:00:27 2019
From: tr@ver@c @end|ng |rom gm@||@com (Travers Ching)
Date: Fri, 19 Jul 2019 10:00:27 -0700
Subject: [Rd] Use of restricted c++ keywords as variable names in headers
In-Reply-To: <6dd8f2c2-972b-48f2-e68b-da10bc6e76b6@sapo.pt>
References: <1436228557.3054326.1563461754675@mail.yahoo.com>
 <CA+hbrhVYPsYo6ZBtLi_Jj2mu4feVahW+oko=M6C0XBAkWqYFSg@mail.gmail.com>
 <133974ac-1ca5-82ee-fbf7-25ae16bd2b77@sapo.pt>
 <6dd8f2c2-972b-48f2-e68b-da10bc6e76b6@sapo.pt>
Message-ID: <CAPLMX9E2ouZTo3Z6u7UZqes=oS-aYpAUOxZzC=n_1EyYqKR51g@mail.gmail.com>

I was trying to use one of the headers in R_ext/, but had trouble.  I
determined that it was due to using restricted keywords as variable names.
So to load in the header, I needed to do this:

#define class klass
#define private krivate
#include <R_ext/Connections.h>
#undef class
#undef private

I know that the altrep.h header previously had the same issue, but was
fixed.  Could this be changed as well?

	[[alternative HTML version deleted]]


From jte||er|@@rproject @end|ng |rom gm@||@com  Sun Jul 21 12:08:00 2019
From: jte||er|@@rproject @end|ng |rom gm@||@com (Juan Telleria Ruiz de Aguirre)
Date: Sun, 21 Jul 2019 12:08:00 +0200
Subject: [Rd] Recommended Reading: Advanced R Second Edition
Message-ID: <CAJXDcw2GDjHxz=Og+0YNKLHs9=GB10bNnjGJjz+gL2DE9oFhgw@mail.gmail.com>

Dear R Developers,

After having fully read "Advanced R First Edition" , and having just bought
my physical copy of "Advanced R Second Edition", I recommend that:

Any community member interested in the development of R reads "Advanced R
Second Edition", which explains R Language Core concepts cristal clear, and
shows the motivation behind libraries such as "rlang", "purrr", "bench",
"profvis", "sloop", "lobstr", above others.

I'm sure you will learn something new and enjoy the Reading!

Digital Book (Free):
https://adv-r.hadley.nz/

Physical Book:
https://www.amazon.com/Advanced-Second-Chapman-Hall-CRC/dp/0815384572/ref=mp_s_a_1_1?keywords=advanced+r+second+edition&qid=1563703482&s=gateway&sprefix=advanced+R+second+edition&sr=8-1

Best,
Juan

	[[alternative HTML version deleted]]


From Kurt@Horn|k @end|ng |rom wu@@c@@t  Sun Jul 21 14:15:14 2019
From: Kurt@Horn|k @end|ng |rom wu@@c@@t (Kurt Hornik)
Date: Sun, 21 Jul 2019 14:15:14 +0200
Subject: [Rd] Addition of a meta viewport tag to HTML manuals
In-Reply-To: <CAA-FpKXZAcARgDqMXdiXWU20TRQiLneiTuiz1B+uO2Qitz=vOw@mail.gmail.com>
References: <7FAF4E2F-6981-4CC0-98FB-7FCA96C2A9EF@rud.is>
 <23852.19641.838145.731228@stat.math.ethz.ch>
 <CAA-FpKXZAcARgDqMXdiXWU20TRQiLneiTuiz1B+uO2Qitz=vOw@mail.gmail.com>
Message-ID: <23860.22354.169229.640171@hornik.net>

>>>>> Bob Rudis writes:

> Thanks for both the support & sage advice, Martin!
> And, aye, tis straightforward to convert the perl one-liner to a
> shell/sed idiom.

> A kind soul from the list has also offered to walk me through the
> "provide a patch" process and I'll do my best to get it right on Par 1
> :-)

When building HTML from the Texinfo sources, we already have a sed
script in place: we can easily teach it to also add the HTML5 viewport
meta tag as suggested.

I'll do so after more checking ...

-k

> -Bob

> On Mon, Jul 15, 2019 at 5:54 AM Martin Maechler
> <maechler at stat.math.ethz.ch> wrote:
>> 
>> >>>>> Bob Rudis
>> >>>>>     on Tue, 9 Jul 2019 14:24:24 -0400 writes:
>> 
>> > The addition of a single line:
>> > <meta name="viewport" content="width=device-width, initial-scale=1.0">
>> 
>> > at in the <head> of the R HTML generated manuals would make them much easier to read on mobile devices.
>> 
>> > texi2any (which generates the HTML files) is based on long-working Perl code that includes many modern HTML elements but does not include this one.
>> 
>> > A Perl one-liner in the install-html: Makefile directive in Makefile.in:
>> 
>> > install-html: installdirs
>> > @for f in $(OBJECTS_HTML); do \
>> > if test -f $${f} ; then \
>> > $(INSTALL_DATA) $${f} "$(DESTDIR)$(rdocdir)/manual"; \
>> > perl -pi -e 's/\<meta name="desc/<meta name="viewport" content="width=device-width, initial-scale=1.0">\n<meta name="desc/' "$(DESTDIR)$(rdocdir)/manual/*.html"; \
>> > fi \
>> > done
>> 
>> > would insert this (I still need to read Makefile.win to see where it should go there) and I'd be glad to create a PR unless folks do not think better accessibility on mobile is a good idea.
>> 
>> To the contrary.
>> Thank you very much, Bob, for bringing this up, here!
>> 
>> > $(PERL) does not seem to be defined but Perl itself is a requirement for texi2any so it is definitely something that would work in the current installation process.
>> 
>> > -Bob
>> 
>> Hmm,.. a very long time ago,  perl was an absolute requirement
>> for building R from the sources, but in the mean time, it's not
>> been required anymore strictly *).  AFAIK, there are alternative versions
>> of versions/alternatives to texi2any  (say on Windoze .. or
>> bizarre Linux distros or non-linux unices), and I'm almost sure
>> we do not want to require perl explicitly.
>> 
>> We are using R itself in many places for installation things,
>> but here, it should be possible to use smaller unix tools (such
>> as 'sed' and 'grep' say) instead.
>> 
>> If you (or someone else) provided a small patch for using those
>> instead of perl, I don't see a reason not to be grateful and
>> apply it to the sources.
>> 
>> Thank you once more
>> Martin
>> 
>> 
>> --
>> *)  perl is mentioned twice in the "R Administration and
>> Installation" manual:
>> 1. maybe needed for 'install-info'  *if* there's no
>> 'install-info' command on the system [but on my Fedora and
>> probably most "math-y" Linux dist there is a binary]
>> 
>> 2. On Windoze, the texinfo 5.x package needs perl

> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From @purd|e@@ @end|ng |rom gm@||@com  Mon Jul 22 00:50:13 2019
From: @purd|e@@ @end|ng |rom gm@||@com (Abby Spurdle)
Date: Mon, 22 Jul 2019 10:50:13 +1200
Subject: [Rd] Recommended Reading: Advanced R Second Edition
In-Reply-To: <CAJXDcw2GDjHxz=Og+0YNKLHs9=GB10bNnjGJjz+gL2DE9oFhgw@mail.gmail.com>
References: <CAJXDcw2GDjHxz=Og+0YNKLHs9=GB10bNnjGJjz+gL2DE9oFhgw@mail.gmail.com>
Message-ID: <CAB8pepzNyj6n-sdPiF=HWc_R9fUYb5BkYdMYOtNVEX9mzcFhXQ@mail.gmail.com>

> After having fully read "Advanced R First Edition"

Try the R Manuals.
https://cran.r-project.org/manuals.html

There's also some good books by John Chambers.

> which explains R Language Core concepts cristal clear,

I'm assuming that you mean "cr${y}stal clear".

> and
> shows the motivation behind libraries such as "rlang", "purrr", "bench",
> "profvis", "sloop", "lobstr", above others.

Novel != Advanced

	[[alternative HTML version deleted]]


From Kurt@Horn|k @end|ng |rom wu@@c@@t  Mon Jul 22 08:57:11 2019
From: Kurt@Horn|k @end|ng |rom wu@@c@@t (Kurt Hornik)
Date: Mon, 22 Jul 2019 08:57:11 +0200
Subject: [Rd] Addition of a meta viewport tag to HTML manuals
In-Reply-To: <23860.22354.169229.640171@hornik.net>
References: <7FAF4E2F-6981-4CC0-98FB-7FCA96C2A9EF@rud.is>
 <23852.19641.838145.731228@stat.math.ethz.ch>
 <CAA-FpKXZAcARgDqMXdiXWU20TRQiLneiTuiz1B+uO2Qitz=vOw@mail.gmail.com>
 <23860.22354.169229.640171@hornik.net>
Message-ID: <23861.24135.606680.520447@hornik.net>

>>>>> Kurt Hornik writes:

>>>>> Bob Rudis writes:
>> Thanks for both the support & sage advice, Martin!
>> And, aye, tis straightforward to convert the perl one-liner to a
>> shell/sed idiom.

>> A kind soul from the list has also offered to walk me through the
>> "provide a patch" process and I'll do my best to get it right on Par 1
>> :-)

> When building HTML from the Texinfo sources, we already have a sed
> script in place: we can easily teach it to also add the HTML5 viewport
> meta tag as suggested.

> I'll do so after more checking ...

Done now:

r76856 | hornik | 2019-07-22 08:56:41 +0200 (Mon, 22 Jul 2019) | 2 lines
Add HTML5 viewport meta tags to the HTML manuals.
Suggested by Bob Rudis <bob at rud.is>.

Thanks again!

Best
-k


> -k

>> -Bob

>> On Mon, Jul 15, 2019 at 5:54 AM Martin Maechler
>> <maechler at stat.math.ethz.ch> wrote:
>>> 
>>> >>>>> Bob Rudis
>>> >>>>>     on Tue, 9 Jul 2019 14:24:24 -0400 writes:
>>> 
>>> > The addition of a single line:
>>> > <meta name="viewport" content="width=device-width, initial-scale=1.0">
>>> 
>>> > at in the <head> of the R HTML generated manuals would make them much easier to read on mobile devices.
>>> 
>>> > texi2any (which generates the HTML files) is based on long-working Perl code that includes many modern HTML elements but does not include this one.
>>> 
>>> > A Perl one-liner in the install-html: Makefile directive in Makefile.in:
>>> 
>>> > install-html: installdirs
>>> > @for f in $(OBJECTS_HTML); do \
>>> > if test -f $${f} ; then \
>>> > $(INSTALL_DATA) $${f} "$(DESTDIR)$(rdocdir)/manual"; \
>>> > perl -pi -e 's/\<meta name="desc/<meta name="viewport" content="width=device-width, initial-scale=1.0">\n<meta name="desc/' "$(DESTDIR)$(rdocdir)/manual/*.html"; \
>>> > fi \
>>> > done
>>> 
>>> > would insert this (I still need to read Makefile.win to see where it should go there) and I'd be glad to create a PR unless folks do not think better accessibility on mobile is a good idea.
>>> 
>>> To the contrary.
>>> Thank you very much, Bob, for bringing this up, here!
>>> 
>>> > $(PERL) does not seem to be defined but Perl itself is a requirement for texi2any so it is definitely something that would work in the current installation process.
>>> 
>>> > -Bob
>>> 
>>> Hmm,.. a very long time ago,  perl was an absolute requirement
>>> for building R from the sources, but in the mean time, it's not
>>> been required anymore strictly *).  AFAIK, there are alternative versions
>>> of versions/alternatives to texi2any  (say on Windoze .. or
>>> bizarre Linux distros or non-linux unices), and I'm almost sure
>>> we do not want to require perl explicitly.
>>> 
>>> We are using R itself in many places for installation things,
>>> but here, it should be possible to use smaller unix tools (such
>>> as 'sed' and 'grep' say) instead.
>>> 
>>> If you (or someone else) provided a small patch for using those
>>> instead of perl, I don't see a reason not to be grateful and
>>> apply it to the sources.
>>> 
>>> Thank you once more
>>> Martin
>>> 
>>> 
>>> --
>>> *)  perl is mentioned twice in the "R Administration and
>>> Installation" manual:
>>> 1. maybe needed for 'install-info'  *if* there's no
>>> 'install-info' command on the system [but on my Fedora and
>>> probably most "math-y" Linux dist there is a binary]
>>> 
>>> 2. On Windoze, the texinfo 5.x package needs perl

>> ______________________________________________
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel

> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From jo@hmobr|en @end|ng |rom gm@||@com  Tue Jul 23 00:09:09 2019
From: jo@hmobr|en @end|ng |rom gm@||@com (Josh O'Brien)
Date: Mon, 22 Jul 2019 15:09:09 -0700
Subject: [Rd] Minor typo in R-exts
Message-ID: <CAOwKfPRFOhD+O_bf4eqQXO9-DgLG5m4-si5OcKBNgiW9wE19RQ@mail.gmail.com>

Section 1.1.3 of the "R-exts" manual currently refers to "imports or
importFrom directives" where it means to say "import or importFrom
directives". Results of a diff between R-exts.texi at SVN revision
76864 and a corrected version are copied below.



*** R-exts.texi Mon Jul 22 14:41:19 2019
--- R-exts.texi.modified Mon Jul 22 14:45:32 2019
***************
*** 902,904 ****
  @code{library(@var{pkgname})} should be listed in the @samp{Imports} field
! and not in the @samp{Depends} field.  Packages listed in @code{imports}
  or @code{importFrom} directives in the @file{NAMESPACE} file should
--- 902,904 ----
  @code{library(@var{pkgname})} should be listed in the @samp{Imports} field
! and not in the @samp{Depends} field.  Packages listed in @code{import}
  or @code{importFrom} directives in the @file{NAMESPACE} file should


From ru@@e||-|enth @end|ng |rom u|ow@@edu  Tue Jul 23 06:29:34 2019
From: ru@@e||-|enth @end|ng |rom u|ow@@edu (Lenth, Russell V)
Date: Tue, 23 Jul 2019 04:29:34 +0000
Subject: [Rd] quiet namespace load is noisy
Message-ID: <DM6PR04MB4380586C3A8D266C1DEA7219F1C70@DM6PR04MB4380.namprd04.prod.outlook.com>

Dear R-devel,

Consider the following clip (in R version 3.6.0, Windows):

    > requireNamespace("ggplot2", quietly = TRUE)
    Registered S3 methods overwritten by 'ggplot2':
      method         from 
      [.quosures     rlang
      c.quosures     rlang
      print.quosures rlang

It seems to me that if one specifies 'quietly = TRUE', then messages about S3 method overrides should be quieted along with everything else. After all, other package startup messages ARE suppressed, and even error messages are suppressed:

    > requireNamespace("xyz", quietly = TRUE)
    > ## (it is silent even though there is no "xyz" package)

Thanks

Russ Lenth
U of Iowa


From ||one| @end|ng |rom r@tud|o@com  Tue Jul 23 08:32:49 2019
From: ||one| @end|ng |rom r@tud|o@com (Lionel Henry)
Date: Tue, 23 Jul 2019 08:32:49 +0200
Subject: [Rd] quiet namespace load is noisy
In-Reply-To: <DM6PR04MB4380586C3A8D266C1DEA7219F1C70@DM6PR04MB4380.namprd04.prod.outlook.com>
References: <DM6PR04MB4380586C3A8D266C1DEA7219F1C70@DM6PR04MB4380.namprd04.prod.outlook.com>
Message-ID: <762919D6-4D23-49BB-8EFC-A0D028217F43@rstudio.com>

Hello,

I think `quietly` should only silence normal masking messages
intended for users and providing information about normal
behaviour, such as masking.  This is not the case here as the
message is about overriding of S3 methods, which has global
effect and is rather problematic. It may change behaviour of
package and script code in unpredictable ways.

This is not something that the user can act upon, the developers
of the parties involved need to be contacted by users so they can
fix it (the developers of the conflicting methods might not be
aware if the generic is from a third party package, such as
base::print()). In the case of ggplot2 vs rlang, you can update
ggplot2 to the latest version to fix these messages.

> After all, other package startup messages ARE suppressed, and
> even error messages are suppressed

Note that `quietly = TRUE` does not really suppress error
messages for missing packages. The errors are converted to a
boolean return value, and thus become normal behaviour, for which
it makes sense to suppress the message. This does not imply the
S3 overriding message should be suppressed as well.

Best,
Lionel


> On 23 Jul 2019, at 06:29, Lenth, Russell V <russell-lenth at uiowa.edu> wrote:
> 
> Dear R-devel,
> 
> Consider the following clip (in R version 3.6.0, Windows):
> 
>> requireNamespace("ggplot2", quietly = TRUE)
>    Registered S3 methods overwritten by 'ggplot2':
>      method         from 
>      [.quosures     rlang
>      c.quosures     rlang
>      print.quosures rlang
> 
> It seems to me that if one specifies 'quietly = TRUE', then messages about S3 method overrides should be quieted along with everything else. After all, other package startup messages ARE suppressed, and even error messages are suppressed:
> 
>> requireNamespace("xyz", quietly = TRUE)
>> ## (it is silent even though there is no "xyz" package)
> 
> Thanks
> 
> Russ Lenth
> U of Iowa
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From ru@@e||-|enth @end|ng |rom u|ow@@edu  Tue Jul 23 15:36:39 2019
From: ru@@e||-|enth @end|ng |rom u|ow@@edu (Lenth, Russell V)
Date: Tue, 23 Jul 2019 13:36:39 +0000
Subject: [Rd] [External] Re:  quiet namespace load is noisy
In-Reply-To: <762919D6-4D23-49BB-8EFC-A0D028217F43@rstudio.com>
References: <DM6PR04MB4380586C3A8D266C1DEA7219F1C70@DM6PR04MB4380.namprd04.prod.outlook.com>,
 <762919D6-4D23-49BB-8EFC-A0D028217F43@rstudio.com>
Message-ID: <C087FDE4-69F5-4128-B12A-694C6AD73FFF@uiowa.edu>

Lionel,

Thanks for your response. I understand that method overriding can be a serious issue, but as you say, this is not something that the user can act upon. Yet the message lands at the user?s feet. 

In my case, the messages are cluttering my package vignettes, and may or may not represent what users see if they themselves run the vignette code, depending on what version of ggplot2, etc. they have. I will certainly update my ggplot2 installation and that will help. But basically I don?t ever want these kinds of messages to appear in my vignettes, so I will seek some other workaround. 

Russ

Sent from my iPhone

> On Jul 23, 2019, at 1:32 AM, Lionel Henry <lionel at rstudio.com> wrote:
> 
> Hello,
> 
> I think `quietly` should only silence normal masking messages
> intended for users and providing information about normal
> behaviour, such as masking.  This is not the case here as the
> message is about overriding of S3 methods, which has global
> effect and is rather problematic. It may change behaviour of
> package and script code in unpredictable ways.
> 
> This is not something that the user can act upon, the developers
> of the parties involved need to be contacted by users so they can
> fix it (the developers of the conflicting methods might not be
> aware if the generic is from a third party package, such as
> base::print()). In the case of ggplot2 vs rlang, you can update
> ggplot2 to the latest version to fix these messages.
> 
>> After all, other package startup messages ARE suppressed, and
>> even error messages are suppressed
> 
> Note that `quietly = TRUE` does not really suppress error
> messages for missing packages. The errors are converted to a
> boolean return value, and thus become normal behaviour, for which
> it makes sense to suppress the message. This does not imply the
> S3 overriding message should be suppressed as well.
> 
> Best,
> Lionel
> 
> 
>> On 23 Jul 2019, at 06:29, Lenth, Russell V <russell-lenth at uiowa.edu> wrote:
>> 
>> Dear R-devel,
>> 
>> Consider the following clip (in R version 3.6.0, Windows):
>> 
>>> requireNamespace("ggplot2", quietly = TRUE)
>>   Registered S3 methods overwritten by 'ggplot2':
>>     method         from 
>>     [.quosures     rlang
>>     c.quosures     rlang
>>     print.quosures rlang
>> 
>> It seems to me that if one specifies 'quietly = TRUE', then messages about S3 method overrides should be quieted along with everything else. After all, other package startup messages ARE suppressed, and even error messages are suppressed:
>> 
>>> requireNamespace("xyz", quietly = TRUE)
>>> ## (it is silent even though there is no "xyz" package)
>> 
>> Thanks
>> 
>> Russ Lenth
>> U of Iowa
>> 
>> ______________________________________________
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel
> 

From bbo|ker @end|ng |rom gm@||@com  Tue Jul 23 15:51:58 2019
From: bbo|ker @end|ng |rom gm@||@com (Ben Bolker)
Date: Tue, 23 Jul 2019 09:51:58 -0400
Subject: [Rd] [External] Re: quiet namespace load is noisy
In-Reply-To: <C087FDE4-69F5-4128-B12A-694C6AD73FFF@uiowa.edu>
References: <DM6PR04MB4380586C3A8D266C1DEA7219F1C70@DM6PR04MB4380.namprd04.prod.outlook.com>
 <762919D6-4D23-49BB-8EFC-A0D028217F43@rstudio.com>
 <C087FDE4-69F5-4128-B12A-694C6AD73FFF@uiowa.edu>
Message-ID: <f27ddedc-048f-2807-e737-bf6c7c969a48@gmail.com>


  Does setting message=FALSE in the chunk options of the vignette help?

  Or less preferably, using supressMessages() ?

On 2019-07-23 9:36 a.m., Lenth, Russell V wrote:
> Lionel,
> 
> Thanks for your response. I understand that method overriding can be a serious issue, but as you say, this is not something that the user can act upon. Yet the message lands at the user?s feet. 
> 
> In my case, the messages are cluttering my package vignettes, and may or may not represent what users see if they themselves run the vignette code, depending on what version of ggplot2, etc. they have. I will certainly update my ggplot2 installation and that will help. But basically I don?t ever want these kinds of messages to appear in my vignettes, so I will seek some other workaround. 
> 
> Russ
> 
> Sent from my iPhone
> 
>> On Jul 23, 2019, at 1:32 AM, Lionel Henry <lionel at rstudio.com> wrote:
>>
>> Hello,
>>
>> I think `quietly` should only silence normal masking messages
>> intended for users and providing information about normal
>> behaviour, such as masking.  This is not the case here as the
>> message is about overriding of S3 methods, which has global
>> effect and is rather problematic. It may change behaviour of
>> package and script code in unpredictable ways.
>>
>> This is not something that the user can act upon, the developers
>> of the parties involved need to be contacted by users so they can
>> fix it (the developers of the conflicting methods might not be
>> aware if the generic is from a third party package, such as
>> base::print()). In the case of ggplot2 vs rlang, you can update
>> ggplot2 to the latest version to fix these messages.
>>
>>> After all, other package startup messages ARE suppressed, and
>>> even error messages are suppressed
>>
>> Note that `quietly = TRUE` does not really suppress error
>> messages for missing packages. The errors are converted to a
>> boolean return value, and thus become normal behaviour, for which
>> it makes sense to suppress the message. This does not imply the
>> S3 overriding message should be suppressed as well.
>>
>> Best,
>> Lionel
>>
>>
>>> On 23 Jul 2019, at 06:29, Lenth, Russell V <russell-lenth at uiowa.edu> wrote:
>>>
>>> Dear R-devel,
>>>
>>> Consider the following clip (in R version 3.6.0, Windows):
>>>
>>>> requireNamespace("ggplot2", quietly = TRUE)
>>>   Registered S3 methods overwritten by 'ggplot2':
>>>     method         from 
>>>     [.quosures     rlang
>>>     c.quosures     rlang
>>>     print.quosures rlang
>>>
>>> It seems to me that if one specifies 'quietly = TRUE', then messages about S3 method overrides should be quieted along with everything else. After all, other package startup messages ARE suppressed, and even error messages are suppressed:
>>>
>>>> requireNamespace("xyz", quietly = TRUE)
>>>> ## (it is silent even though there is no "xyz" package)
>>>
>>> Thanks
>>>
>>> Russ Lenth
>>> U of Iowa
>>>
>>> ______________________________________________
>>> R-devel at r-project.org mailing list
>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>


From @|ngm@nn @end|ng |rom gm@||@com  Tue Jul 23 16:28:27 2019
From: @|ngm@nn @end|ng |rom gm@||@com (Henrik Singmann)
Date: Tue, 23 Jul 2019 15:28:27 +0100
Subject: [Rd] [External] Re: quiet namespace load is noisy
In-Reply-To: <f27ddedc-048f-2807-e737-bf6c7c969a48@gmail.com>
References: <DM6PR04MB4380586C3A8D266C1DEA7219F1C70@DM6PR04MB4380.namprd04.prod.outlook.com>
 <762919D6-4D23-49BB-8EFC-A0D028217F43@rstudio.com>
 <C087FDE4-69F5-4128-B12A-694C6AD73FFF@uiowa.edu>
 <f27ddedc-048f-2807-e737-bf6c7c969a48@gmail.com>
Message-ID: <CA+rDMKLZ=+BPGb86ePgEMgjhO6g3Gv4KEQLrvvVEY5TDoZa7rw@mail.gmail.com>

Dear Russ,

I had the same problem in my vignettes and setting both message and warning
to FALSE seems to remove all unwanted output:

```{r message=FALSE, warning=FALSE}
library("afex")
library("ggplot2")
library("cowplot")
theme_set(theme_grey())
```

Result:
https://cran.r-project.org/web/packages/afex/vignettes/afex_plot_introduction.html

Best,
Henrik


Am Di., 23. Juli 2019 um 14:52 Uhr schrieb Ben Bolker <bbolker at gmail.com>:

>
>   Does setting message=FALSE in the chunk options of the vignette help?
>
>   Or less preferably, using supressMessages() ?
>
> On 2019-07-23 9:36 a.m., Lenth, Russell V wrote:
> > Lionel,
> >
> > Thanks for your response. I understand that method overriding can be a
> serious issue, but as you say, this is not something that the user can act
> upon. Yet the message lands at the user?s feet.
> >
> > In my case, the messages are cluttering my package vignettes, and may or
> may not represent what users see if they themselves run the vignette code,
> depending on what version of ggplot2, etc. they have. I will certainly
> update my ggplot2 installation and that will help. But basically I don?t
> ever want these kinds of messages to appear in my vignettes, so I will seek
> some other workaround.
> >
> > Russ
> >
> > Sent from my iPhone
> >
> >> On Jul 23, 2019, at 1:32 AM, Lionel Henry <lionel at rstudio.com> wrote:
> >>
> >> Hello,
> >>
> >> I think `quietly` should only silence normal masking messages
> >> intended for users and providing information about normal
> >> behaviour, such as masking.  This is not the case here as the
> >> message is about overriding of S3 methods, which has global
> >> effect and is rather problematic. It may change behaviour of
> >> package and script code in unpredictable ways.
> >>
> >> This is not something that the user can act upon, the developers
> >> of the parties involved need to be contacted by users so they can
> >> fix it (the developers of the conflicting methods might not be
> >> aware if the generic is from a third party package, such as
> >> base::print()). In the case of ggplot2 vs rlang, you can update
> >> ggplot2 to the latest version to fix these messages.
> >>
> >>> After all, other package startup messages ARE suppressed, and
> >>> even error messages are suppressed
> >>
> >> Note that `quietly = TRUE` does not really suppress error
> >> messages for missing packages. The errors are converted to a
> >> boolean return value, and thus become normal behaviour, for which
> >> it makes sense to suppress the message. This does not imply the
> >> S3 overriding message should be suppressed as well.
> >>
> >> Best,
> >> Lionel
> >>
> >>
> >>> On 23 Jul 2019, at 06:29, Lenth, Russell V <russell-lenth at uiowa.edu>
> wrote:
> >>>
> >>> Dear R-devel,
> >>>
> >>> Consider the following clip (in R version 3.6.0, Windows):
> >>>
> >>>> requireNamespace("ggplot2", quietly = TRUE)
> >>>   Registered S3 methods overwritten by 'ggplot2':
> >>>     method         from
> >>>     [.quosures     rlang
> >>>     c.quosures     rlang
> >>>     print.quosures rlang
> >>>
> >>> It seems to me that if one specifies 'quietly = TRUE', then messages
> about S3 method overrides should be quieted along with everything else.
> After all, other package startup messages ARE suppressed, and even error
> messages are suppressed:
> >>>
> >>>> requireNamespace("xyz", quietly = TRUE)
> >>>> ## (it is silent even though there is no "xyz" package)
> >>>
> >>> Thanks
> >>>
> >>> Russ Lenth
> >>> U of Iowa
> >>>
> >>> ______________________________________________
> >>> R-devel at r-project.org mailing list
> >>> https://stat.ethz.ch/mailman/listinfo/r-devel
> >>
> > ______________________________________________
> > R-devel at r-project.org mailing list
> > https://stat.ethz.ch/mailman/listinfo/r-devel
> >
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>


-- 
Dr. Henrik Singmann
Assistant Professor, Department of Psychology
University of Warwick, UK
http://singmann.org

	[[alternative HTML version deleted]]


From ru@@e||-|enth @end|ng |rom u|ow@@edu  Tue Jul 23 17:30:30 2019
From: ru@@e||-|enth @end|ng |rom u|ow@@edu (Lenth, Russell V)
Date: Tue, 23 Jul 2019 15:30:30 +0000
Subject: [Rd] [External] Re: quiet namespace load is noisy
In-Reply-To: <CA+rDMKLZ=+BPGb86ePgEMgjhO6g3Gv4KEQLrvvVEY5TDoZa7rw@mail.gmail.com>
References: <DM6PR04MB4380586C3A8D266C1DEA7219F1C70@DM6PR04MB4380.namprd04.prod.outlook.com>
 <762919D6-4D23-49BB-8EFC-A0D028217F43@rstudio.com>
 <C087FDE4-69F5-4128-B12A-694C6AD73FFF@uiowa.edu>
 <f27ddedc-048f-2807-e737-bf6c7c969a48@gmail.com>,
 <CA+rDMKLZ=+BPGb86ePgEMgjhO6g3Gv4KEQLrvvVEY5TDoZa7rw@mail.gmail.com>
Message-ID: <0F271834-0535-4D0F-8C80-649379F66916@uiowa.edu>

Ben and Henrik,

My package tends to load other packages ? namespaces on an as-needed basis, e.g. ggplot2 when a plotting function is called. I have been thinking I would use suppressMessages() in my code, but it is probably a better idea to instead have a setup chunk in each vignette that loads all the needed namespaces or libraries. That way the package user would see those messages in their own session when they could be relevant.

Thanks

Russ

Sent from my iPhone

On Jul 23, 2019, at 9:28 AM, Henrik Singmann <singmann at gmail.com<mailto:singmann at gmail.com>> wrote:

Dear Russ,

I had the same problem in my vignettes and setting both message and warning to FALSE seems to remove all unwanted output:

```{r message=FALSE, warning=FALSE}
library("afex")
library("ggplot2")
library("cowplot")
theme_set(theme_grey())
```

Result: https://cran.r-project.org/web/packages/afex/vignettes/afex_plot_introduction.html

Best,
Henrik


Am Di., 23. Juli 2019 um 14:52 Uhr schrieb Ben Bolker <bbolker at gmail.com<mailto:bbolker at gmail.com>>:

  Does setting message=FALSE in the chunk options of the vignette help?

  Or less preferably, using supressMessages() ?

On 2019-07-23 9:36 a.m., Lenth, Russell V wrote:
> Lionel,
>
> Thanks for your response. I understand that method overriding can be a serious issue, but as you say, this is not something that the user can act upon. Yet the message lands at the user?s feet.
>
> In my case, the messages are cluttering my package vignettes, and may or may not represent what users see if they themselves run the vignette code, depending on what version of ggplot2, etc. they have. I will certainly update my ggplot2 installation and that will help. But basically I don?t ever want these kinds of messages to appear in my vignettes, so I will seek some other workaround.
>
> Russ
>
> Sent from my iPhone
>
>> On Jul 23, 2019, at 1:32 AM, Lionel Henry <lionel at rstudio.com<mailto:lionel at rstudio.com>> wrote:
>>
>> Hello,
>>
>> I think `quietly` should only silence normal masking messages
>> intended for users and providing information about normal
>> behaviour, such as masking.  This is not the case here as the
>> message is about overriding of S3 methods, which has global
>> effect and is rather problematic. It may change behaviour of
>> package and script code in unpredictable ways.
>>
>> This is not something that the user can act upon, the developers
>> of the parties involved need to be contacted by users so they can
>> fix it (the developers of the conflicting methods might not be
>> aware if the generic is from a third party package, such as
>> base::print()). In the case of ggplot2 vs rlang, you can update
>> ggplot2 to the latest version to fix these messages.
>>
>>> After all, other package startup messages ARE suppressed, and
>>> even error messages are suppressed
>>
>> Note that `quietly = TRUE` does not really suppress error
>> messages for missing packages. The errors are converted to a
>> boolean return value, and thus become normal behaviour, for which
>> it makes sense to suppress the message. This does not imply the
>> S3 overriding message should be suppressed as well.
>>
>> Best,
>> Lionel
>>
>>
>>> On 23 Jul 2019, at 06:29, Lenth, Russell V <russell-lenth at uiowa.edu<mailto:russell-lenth at uiowa.edu>> wrote:
>>>
>>> Dear R-devel,
>>>
>>> Consider the following clip (in R version 3.6.0, Windows):
>>>
>>>> requireNamespace("ggplot2", quietly = TRUE)
>>>   Registered S3 methods overwritten by 'ggplot2':
>>>     method         from
>>>     [.quosures     rlang
>>>     c.quosures     rlang
>>>     print.quosures rlang
>>>
>>> It seems to me that if one specifies 'quietly = TRUE', then messages about S3 method overrides should be quieted along with everything else. After all, other package startup messages ARE suppressed, and even error messages are suppressed:
>>>
>>>> requireNamespace("xyz", quietly = TRUE)
>>>> ## (it is silent even though there is no "xyz" package)
>>>
>>> Thanks
>>>
>>> Russ Lenth
>>> U of Iowa
>>>
>>> ______________________________________________
>>> R-devel at r-project.org<mailto:R-devel at r-project.org> mailing list
>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>
> ______________________________________________
> R-devel at r-project.org<mailto:R-devel at r-project.org> mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>

______________________________________________
R-devel at r-project.org<mailto:R-devel at r-project.org> mailing list
https://stat.ethz.ch/mailman/listinfo/r-devel


--
Dr. Henrik Singmann
Assistant Professor, Department of Psychology
University of Warwick, UK
http://singmann.org

	[[alternative HTML version deleted]]


From x|e @end|ng |rom y|hu|@n@me  Tue Jul 23 17:31:35 2019
From: x|e @end|ng |rom y|hu|@n@me (Yihui Xie)
Date: Tue, 23 Jul 2019 10:31:35 -0500
Subject: [Rd] [External] Re: quiet namespace load is noisy
In-Reply-To: <CA+rDMKLZ=+BPGb86ePgEMgjhO6g3Gv4KEQLrvvVEY5TDoZa7rw@mail.gmail.com>
References: <DM6PR04MB4380586C3A8D266C1DEA7219F1C70@DM6PR04MB4380.namprd04.prod.outlook.com>
 <762919D6-4D23-49BB-8EFC-A0D028217F43@rstudio.com>
 <C087FDE4-69F5-4128-B12A-694C6AD73FFF@uiowa.edu>
 <f27ddedc-048f-2807-e737-bf6c7c969a48@gmail.com>
 <CA+rDMKLZ=+BPGb86ePgEMgjhO6g3Gv4KEQLrvvVEY5TDoZa7rw@mail.gmail.com>
Message-ID: <CANROs4esC5fCRbw6cXg7t8zQU+Q5oG=kOTKf4AWgojtw=ZoL+Q@mail.gmail.com>

I mentioned the same thing a couple of months ago but didn't get a
response: https://stat.ethz.ch/pipermail/r-devel/2019-May/077774.html

In your case of package vignettes, it is easy enough to suppress the
messages via the knitr chunk option message = FALSE. However, I still
wonder if it will be a better idea if requireNamespace(quietly = TRUE)
can suppress such messages, because in the past, we can test if a
package is loadable via

  if (requireNamespace(pkg, quietly = TRUE)) { ... }

And now we have to use suppressMessages() or
suppressPackageStartupMessages() plus quietly = TRUE:

  if (suppressPackageStartupMessages(requireNamespace(pkg, quietly =
TRUE))) { ... }

I'm aware of the fact that if a package has packageStartupMessage() in
its .onLoad(), requireNamespace(quietly = TRUE) won't suppress such
messages, and we still have use suppressPackageStartupMessages(). This
statement in Russ's post was incorrect:

> After all, other package startup messages ARE suppressed

but I feel it is a nice feature request for quietly = TRUE to call
suppressPackageStartupMessages() automatically.

Regards,
Yihui
--
https://yihui.name

On Tue, Jul 23, 2019 at 9:29 AM Henrik Singmann <singmann at gmail.com> wrote:
>
> Dear Russ,
>
> I had the same problem in my vignettes and setting both message and warning
> to FALSE seems to remove all unwanted output:
>
> ```{r message=FALSE, warning=FALSE}
> library("afex")
> library("ggplot2")
> library("cowplot")
> theme_set(theme_grey())
> ```
>
> Result:
> https://cran.r-project.org/web/packages/afex/vignettes/afex_plot_introduction.html
>
> Best,
> Henrik
>
>
> Am Di., 23. Juli 2019 um 14:52 Uhr schrieb Ben Bolker <bbolker at gmail.com>:
>
> >
> >   Does setting message=FALSE in the chunk options of the vignette help?
> >
> >   Or less preferably, using supressMessages() ?
> >
> > On 2019-07-23 9:36 a.m., Lenth, Russell V wrote:
> > > Lionel,
> > >
> > > Thanks for your response. I understand that method overriding can be a
> > serious issue, but as you say, this is not something that the user can act
> > upon. Yet the message lands at the user?s feet.
> > >
> > > In my case, the messages are cluttering my package vignettes, and may or
> > may not represent what users see if they themselves run the vignette code,
> > depending on what version of ggplot2, etc. they have. I will certainly
> > update my ggplot2 installation and that will help. But basically I don?t
> > ever want these kinds of messages to appear in my vignettes, so I will seek
> > some other workaround.
> > >
> > > Russ
> > >
> > > Sent from my iPhone
> > >
> > >> On Jul 23, 2019, at 1:32 AM, Lionel Henry <lionel at rstudio.com> wrote:
> > >>
> > >> Hello,
> > >>
> > >> I think `quietly` should only silence normal masking messages
> > >> intended for users and providing information about normal
> > >> behaviour, such as masking.  This is not the case here as the
> > >> message is about overriding of S3 methods, which has global
> > >> effect and is rather problematic. It may change behaviour of
> > >> package and script code in unpredictable ways.
> > >>
> > >> This is not something that the user can act upon, the developers
> > >> of the parties involved need to be contacted by users so they can
> > >> fix it (the developers of the conflicting methods might not be
> > >> aware if the generic is from a third party package, such as
> > >> base::print()). In the case of ggplot2 vs rlang, you can update
> > >> ggplot2 to the latest version to fix these messages.
> > >>
> > >>> After all, other package startup messages ARE suppressed, and
> > >>> even error messages are suppressed
> > >>
> > >> Note that `quietly = TRUE` does not really suppress error
> > >> messages for missing packages. The errors are converted to a
> > >> boolean return value, and thus become normal behaviour, for which
> > >> it makes sense to suppress the message. This does not imply the
> > >> S3 overriding message should be suppressed as well.
> > >>
> > >> Best,
> > >> Lionel
> > >>
> > >>
> > >>> On 23 Jul 2019, at 06:29, Lenth, Russell V <russell-lenth at uiowa.edu>
> > wrote:
> > >>>
> > >>> Dear R-devel,
> > >>>
> > >>> Consider the following clip (in R version 3.6.0, Windows):
> > >>>
> > >>>> requireNamespace("ggplot2", quietly = TRUE)
> > >>>   Registered S3 methods overwritten by 'ggplot2':
> > >>>     method         from
> > >>>     [.quosures     rlang
> > >>>     c.quosures     rlang
> > >>>     print.quosures rlang
> > >>>
> > >>> It seems to me that if one specifies 'quietly = TRUE', then messages
> > about S3 method overrides should be quieted along with everything else.
> > After all, other package startup messages ARE suppressed, and even error
> > messages are suppressed:
> > >>>
> > >>>> requireNamespace("xyz", quietly = TRUE)
> > >>>> ## (it is silent even though there is no "xyz" package)
> > >>>
> > >>> Thanks
> > >>>
> > >>> Russ Lenth
> > >>> U of Iowa
> > >>>
> > >>> ______________________________________________
> > >>> R-devel at r-project.org mailing list
> > >>> https://stat.ethz.ch/mailman/listinfo/r-devel
> > >>
> > > ______________________________________________
> > > R-devel at r-project.org mailing list
> > > https://stat.ethz.ch/mailman/listinfo/r-devel
> > >
> >
> > ______________________________________________
> > R-devel at r-project.org mailing list
> > https://stat.ethz.ch/mailman/listinfo/r-devel
> >
>
>
> --
> Dr. Henrik Singmann
> Assistant Professor, Department of Psychology
> University of Warwick, UK
> http://singmann.org
>
>         [[alternative HTML version deleted]]
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From k@bem|@ @end|ng |rom northe@@tern@edu  Tue Jul 23 18:09:13 2019
From: k@bem|@ @end|ng |rom northe@@tern@edu (Bemis, Kylie)
Date: Tue, 23 Jul 2019 16:09:13 +0000
Subject: [Rd] Any plans for ALTREP lists (VECSXP)?
Message-ID: <61E11B6B-E70C-4B92-9AC2-A3FA6678D626@northeastern.edu>

Hello,

I was wondering if there were any plans for ALTREP lists (VECSXP)?

It seems to me that they could be supported in a similar way to how ALTSTRING works, with Elt() and Set_elt() methods, or would there be some problems with that I?m not seeing due to lists not being atomic vectors?

I was taking an approach of converting each list element (of a file-based list data structure) to an ALTREP representation to build up an ?ALTREP list?.

This seems fine for shorter lists with large elements, but I noticed that for longer lists with smaller elements, this could be far more time-consuming than simply reading the entire list into memory and returning a non-ALTREP list:

> x
<34840 length> matter_list :: out-of-memory list
(1.1 MB real | 543.3 MB virtual)

> system.time(y <- as.list(x))
   user  system elapsed
  1.116   2.175   5.053

> system.time(z <- as.altrep(x))
   user  system elapsed
 36.295   4.717  41.216

> .Internal(inspect(y))
@108255000 19 VECSXP g1c7 [MARK,NAM(7)] (len=34840, tl=0)
  @7f9044d9fc00 14 REALSXP g1c7 [MARK] (len=1129, tl=0) 404.093,404.096,404.099,404.102,404.105,...
  @7f9044d25e00 14 REALSXP g1c7 [MARK] (len=890, tl=0) 409.924,409.927,409.931,409.934,409.937,...
  @7f9044da6000 14 REALSXP g1c7 [MARK] (len=1878, tl=0) 400.3,400.303,400.306,400.309,400.312,...
  @7f9031a6b000 14 REALSXP g1c7 [MARK] (len=2266, tl=0) 402.179,402.182,402.185,402.188,402.191,...
  @7f9031a77a00 14 REALSXP g1c7 [MARK] (len=1981, tl=0) 403.021,403.024,403.027,403.03,403.033,...
  ...

> .Internal(inspect(z))
@108210000 19 VECSXP g1c7 [MARK,NAM(7)] (len=34840, tl=0)
  @7f904eea7660 14 REALSXP g1c0 [MARK,NAM(7)] matter vector (mode=4, len=1129, mem=0)
  @7f9050347498 14 REALSXP g1c0 [MARK,NAM(7)] matter vector (mode=4, len=890, mem=0)
  @7f904d286b20 14 REALSXP g1c0 [MARK,NAM(7)] matter vector (mode=4, len=1878, mem=0)
  @7f904fd38820 14 REALSXP g1c0 [MARK,NAM(7)] matter vector (mode=4, len=2266, mem=0)
  @7f904c75ce90 14 REALSXP g1c0 [MARK,NAM(7)] matter vector (mode=4, len=1981, mem=0)
  ...

In this situation, it would be much faster and simpler for me to return a theoretical ALTREP list that serves SEXP elements on-demand, similar to how ALTSTRING seems to be implemented.

I don?t know how many other people would get a use out of ALTREP lists, but I certainly would.

Are there any plans for this?

Thanks!

~~~
Kylie Ariel Bemis
Khoury College of Computer Sciences
Northeastern University
kuwisdelu.github.io<https://kuwisdelu.github.io>











	[[alternative HTML version deleted]]


From |uke-t|erney @end|ng |rom u|ow@@edu  Tue Jul 23 18:38:00 2019
From: |uke-t|erney @end|ng |rom u|ow@@edu (Tierney, Luke)
Date: Tue, 23 Jul 2019 16:38:00 +0000
Subject: [Rd] [External]  Any plans for ALTREP lists (VECSXP)?
In-Reply-To: <61E11B6B-E70C-4B92-9AC2-A3FA6678D626@northeastern.edu>
References: <61E11B6B-E70C-4B92-9AC2-A3FA6678D626@northeastern.edu>
Message-ID: <alpine.DEB.2.21.1907231136170.3077@luke-Latitude-7480>

Eventually, but probably not in the next release. There are many more
issues to think through for vectors where the elements can be
arbitrary R object, and I don't think there will be time for that soon
given other issues on the table.

Best,

luke

On Tue, 23 Jul 2019, Bemis, Kylie wrote:

> Hello,
>
> I was wondering if there were any plans for ALTREP lists (VECSXP)?
>
> It seems to me that they could be supported in a similar way to how ALTSTRING works, with Elt() and Set_elt() methods, or would there be some problems with that I?m not seeing due to lists not being atomic vectors?
>
> I was taking an approach of converting each list element (of a file-based list data structure) to an ALTREP representation to build up an ?ALTREP list?.
>
> This seems fine for shorter lists with large elements, but I noticed that for longer lists with smaller elements, this could be far more time-consuming than simply reading the entire list into memory and returning a non-ALTREP list:
>
>> x
> <34840 length> matter_list :: out-of-memory list
> (1.1 MB real | 543.3 MB virtual)
>
>> system.time(y <- as.list(x))
>   user  system elapsed
>  1.116   2.175   5.053
>
>> system.time(z <- as.altrep(x))
>   user  system elapsed
> 36.295   4.717  41.216
>
>> .Internal(inspect(y))
> @108255000 19 VECSXP g1c7 [MARK,NAM(7)] (len=34840, tl=0)
>  @7f9044d9fc00 14 REALSXP g1c7 [MARK] (len=1129, tl=0) 404.093,404.096,404.099,404.102,404.105,...
>  @7f9044d25e00 14 REALSXP g1c7 [MARK] (len=890, tl=0) 409.924,409.927,409.931,409.934,409.937,...
>  @7f9044da6000 14 REALSXP g1c7 [MARK] (len=1878, tl=0) 400.3,400.303,400.306,400.309,400.312,...
>  @7f9031a6b000 14 REALSXP g1c7 [MARK] (len=2266, tl=0) 402.179,402.182,402.185,402.188,402.191,...
>  @7f9031a77a00 14 REALSXP g1c7 [MARK] (len=1981, tl=0) 403.021,403.024,403.027,403.03,403.033,...
>  ...
>
>> .Internal(inspect(z))
> @108210000 19 VECSXP g1c7 [MARK,NAM(7)] (len=34840, tl=0)
>  @7f904eea7660 14 REALSXP g1c0 [MARK,NAM(7)] matter vector (mode=4, len=1129, mem=0)
>  @7f9050347498 14 REALSXP g1c0 [MARK,NAM(7)] matter vector (mode=4, len=890, mem=0)
>  @7f904d286b20 14 REALSXP g1c0 [MARK,NAM(7)] matter vector (mode=4, len=1878, mem=0)
>  @7f904fd38820 14 REALSXP g1c0 [MARK,NAM(7)] matter vector (mode=4, len=2266, mem=0)
>  @7f904c75ce90 14 REALSXP g1c0 [MARK,NAM(7)] matter vector (mode=4, len=1981, mem=0)
>  ...
>
> In this situation, it would be much faster and simpler for me to return a theoretical ALTREP list that serves SEXP elements on-demand, similar to how ALTSTRING seems to be implemented.
>
> I don?t know how many other people would get a use out of ALTREP lists, but I certainly would.
>
> Are there any plans for this?
>
> Thanks!
>
> ~~~
> Kylie Ariel Bemis
> Khoury College of Computer Sciences
> Northeastern University
> kuwisdelu.github.io<https://kuwisdelu.github.io>
>
>
>
>
>
>
>
>
>
>
>
> 	[[alternative HTML version deleted]]
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel

-- 
Luke Tierney
Ralph E. Wareham Professor of Mathematical Sciences
University of Iowa                  Phone:             319-335-3386
Department of Statistics and        Fax:               319-335-3017
    Actuarial Science
241 Schaeffer Hall                  email:   luke-tierney at uiowa.edu
Iowa City, IA 52242                 WWW:  http://www.stat.uiowa.edu

From |@wrence@m|ch@e| @end|ng |rom gene@com  Tue Jul 23 18:53:36 2019
From: |@wrence@m|ch@e| @end|ng |rom gene@com (Michael Lawrence)
Date: Tue, 23 Jul 2019 09:53:36 -0700
Subject: [Rd] Any plans for ALTREP lists (VECSXP)?
In-Reply-To: <61E11B6B-E70C-4B92-9AC2-A3FA6678D626@northeastern.edu>
References: <61E11B6B-E70C-4B92-9AC2-A3FA6678D626@northeastern.edu>
Message-ID: <CAOQ5NyfEaZL+Uy_Ncw=Yy5sRcc4iuR1=3c1vMEB2xPSrHn6cvw@mail.gmail.com>

Hi Kylie,

As an alternative in the short term, you could consider deriving from
S4Vector's List class, implementing the getListElement() method to
lazily create the objects.

Michael

On Tue, Jul 23, 2019 at 9:09 AM Bemis, Kylie <k.bemis at northeastern.edu> wrote:
>
> Hello,
>
> I was wondering if there were any plans for ALTREP lists (VECSXP)?
>
> It seems to me that they could be supported in a similar way to how ALTSTRING works, with Elt() and Set_elt() methods, or would there be some problems with that I?m not seeing due to lists not being atomic vectors?
>
> I was taking an approach of converting each list element (of a file-based list data structure) to an ALTREP representation to build up an ?ALTREP list?.
>
> This seems fine for shorter lists with large elements, but I noticed that for longer lists with smaller elements, this could be far more time-consuming than simply reading the entire list into memory and returning a non-ALTREP list:
>
> > x
> <34840 length> matter_list :: out-of-memory list
> (1.1 MB real | 543.3 MB virtual)
>
> > system.time(y <- as.list(x))
>    user  system elapsed
>   1.116   2.175   5.053
>
> > system.time(z <- as.altrep(x))
>    user  system elapsed
>  36.295   4.717  41.216
>
> > .Internal(inspect(y))
> @108255000 19 VECSXP g1c7 [MARK,NAM(7)] (len=34840, tl=0)
>   @7f9044d9fc00 14 REALSXP g1c7 [MARK] (len=1129, tl=0) 404.093,404.096,404.099,404.102,404.105,...
>   @7f9044d25e00 14 REALSXP g1c7 [MARK] (len=890, tl=0) 409.924,409.927,409.931,409.934,409.937,...
>   @7f9044da6000 14 REALSXP g1c7 [MARK] (len=1878, tl=0) 400.3,400.303,400.306,400.309,400.312,...
>   @7f9031a6b000 14 REALSXP g1c7 [MARK] (len=2266, tl=0) 402.179,402.182,402.185,402.188,402.191,...
>   @7f9031a77a00 14 REALSXP g1c7 [MARK] (len=1981, tl=0) 403.021,403.024,403.027,403.03,403.033,...
>   ...
>
> > .Internal(inspect(z))
> @108210000 19 VECSXP g1c7 [MARK,NAM(7)] (len=34840, tl=0)
>   @7f904eea7660 14 REALSXP g1c0 [MARK,NAM(7)] matter vector (mode=4, len=1129, mem=0)
>   @7f9050347498 14 REALSXP g1c0 [MARK,NAM(7)] matter vector (mode=4, len=890, mem=0)
>   @7f904d286b20 14 REALSXP g1c0 [MARK,NAM(7)] matter vector (mode=4, len=1878, mem=0)
>   @7f904fd38820 14 REALSXP g1c0 [MARK,NAM(7)] matter vector (mode=4, len=2266, mem=0)
>   @7f904c75ce90 14 REALSXP g1c0 [MARK,NAM(7)] matter vector (mode=4, len=1981, mem=0)
>   ...
>
> In this situation, it would be much faster and simpler for me to return a theoretical ALTREP list that serves SEXP elements on-demand, similar to how ALTSTRING seems to be implemented.
>
> I don?t know how many other people would get a use out of ALTREP lists, but I certainly would.
>
> Are there any plans for this?
>
> Thanks!
>
> ~~~
> Kylie Ariel Bemis
> Khoury College of Computer Sciences
> Northeastern University
> kuwisdelu.github.io<https://kuwisdelu.github.io>
>
>
>
>
>
>
>
>
>
>
>
>         [[alternative HTML version deleted]]
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel



-- 
Michael Lawrence
Scientist, Bioinformatics and Computational Biology
Genentech, A Member of the Roche Group
Office +1 (650) 225-7760
michafla at gene.com

Join Genentech on LinkedIn | Twitter | Facebook | Instagram | YouTube


From g@bembecker @end|ng |rom gm@||@com  Tue Jul 23 20:27:10 2019
From: g@bembecker @end|ng |rom gm@||@com (Gabriel Becker)
Date: Tue, 23 Jul 2019 11:27:10 -0700
Subject: [Rd] Any plans for ALTREP lists (VECSXP)?
In-Reply-To: <CAOQ5NyfEaZL+Uy_Ncw=Yy5sRcc4iuR1=3c1vMEB2xPSrHn6cvw@mail.gmail.com>
References: <61E11B6B-E70C-4B92-9AC2-A3FA6678D626@northeastern.edu>
 <CAOQ5NyfEaZL+Uy_Ncw=Yy5sRcc4iuR1=3c1vMEB2xPSrHn6cvw@mail.gmail.com>
Message-ID: <CAD4oTHGaJFWCLtVRVQ3oG6ws2hj+Cuo1krw0-VBjNCuhKQYThg@mail.gmail.com>

Hi Kylie,

Is it a list with only numerics in it? (I only see REALSXPs there, but
obviously inspect isn't showing all of them). If so, you could load it up
into one big vector and then also keep partitioning information around.
Bioconductor does this (see ?IRanges::CompressedList ). The potential
benefit here being that the underlying large vector could then be a big
out-of-memory altrep. How helpful this would be depends somewhat on what
you want to do with it, of course, but it is something that comes to mind.

Also, I would expect some overhead but that seems like a lot (without
having done super much in the way of benchmarking). What exactly is
as.altrep doing?

Best,
~G

On Tue, Jul 23, 2019 at 9:54 AM Michael Lawrence via R-devel <
r-devel at r-project.org> wrote:

> Hi Kylie,
>
> As an alternative in the short term, you could consider deriving from
> S4Vector's List class, implementing the getListElement() method to
> lazily create the objects.
>
> Michael
>
> On Tue, Jul 23, 2019 at 9:09 AM Bemis, Kylie <k.bemis at northeastern.edu>
> wrote:
> >
> > Hello,
> >
> > I was wondering if there were any plans for ALTREP lists (VECSXP)?
> >
> > It seems to me that they could be supported in a similar way to how
> ALTSTRING works, with Elt() and Set_elt() methods, or would there be some
> problems with that I?m not seeing due to lists not being atomic vectors?
> >
> > I was taking an approach of converting each list element (of a
> file-based list data structure) to an ALTREP representation to build up an
> ?ALTREP list?.
> >
> > This seems fine for shorter lists with large elements, but I noticed
> that for longer lists with smaller elements, this could be far more
> time-consuming than simply reading the entire list into memory and
> returning a non-ALTREP list:
> >
> > > x
> > <34840 length> matter_list :: out-of-memory list
> > (1.1 MB real | 543.3 MB virtual)
> >
> > > system.time(y <- as.list(x))
> >    user  system elapsed
> >   1.116   2.175   5.053
> >
> > > system.time(z <- as.altrep(x))
> >    user  system elapsed
> >  36.295   4.717  41.216
> >
> > > .Internal(inspect(y))
> > @108255000 19 VECSXP g1c7 [MARK,NAM(7)] (len=34840, tl=0)
> >   @7f9044d9fc00 14 REALSXP g1c7 [MARK] (len=1129, tl=0)
> 404.093,404.096,404.099,404.102,404.105,...
> >   @7f9044d25e00 14 REALSXP g1c7 [MARK] (len=890, tl=0)
> 409.924,409.927,409.931,409.934,409.937,...
> >   @7f9044da6000 14 REALSXP g1c7 [MARK] (len=1878, tl=0)
> 400.3,400.303,400.306,400.309,400.312,...
> >   @7f9031a6b000 14 REALSXP g1c7 [MARK] (len=2266, tl=0)
> 402.179,402.182,402.185,402.188,402.191,...
> >   @7f9031a77a00 14 REALSXP g1c7 [MARK] (len=1981, tl=0)
> 403.021,403.024,403.027,403.03,403.033,...
> >   ...
> >
> > > .Internal(inspect(z))
> > @108210000 19 VECSXP g1c7 [MARK,NAM(7)] (len=34840, tl=0)
> >   @7f904eea7660 14 REALSXP g1c0 [MARK,NAM(7)] matter vector (mode=4,
> len=1129, mem=0)
> >   @7f9050347498 14 REALSXP g1c0 [MARK,NAM(7)] matter vector (mode=4,
> len=890, mem=0)
> >   @7f904d286b20 14 REALSXP g1c0 [MARK,NAM(7)] matter vector (mode=4,
> len=1878, mem=0)
> >   @7f904fd38820 14 REALSXP g1c0 [MARK,NAM(7)] matter vector (mode=4,
> len=2266, mem=0)
> >   @7f904c75ce90 14 REALSXP g1c0 [MARK,NAM(7)] matter vector (mode=4,
> len=1981, mem=0)
> >   ...
> >
> > In this situation, it would be much faster and simpler for me to return
> a theoretical ALTREP list that serves SEXP elements on-demand, similar to
> how ALTSTRING seems to be implemented.
> >
> > I don?t know how many other people would get a use out of ALTREP lists,
> but I certainly would.
> >
> > Are there any plans for this?
> >
> > Thanks!
> >
> > ~~~
> > Kylie Ariel Bemis
> > Khoury College of Computer Sciences
> > Northeastern University
> > kuwisdelu.github.io<https://kuwisdelu.github.io>
> >
> >
> >
> >
> >
> >
> >
> >
> >
> >
> >
> >         [[alternative HTML version deleted]]
> >
> > ______________________________________________
> > R-devel at r-project.org mailing list
> > https://stat.ethz.ch/mailman/listinfo/r-devel
>
>
>
> --
> Michael Lawrence
> Scientist, Bioinformatics and Computational Biology
> Genentech, A Member of the Roche Group
> Office +1 (650) 225-7760
> michafla at gene.com
>
> Join Genentech on LinkedIn | Twitter | Facebook | Instagram | YouTube
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>

	[[alternative HTML version deleted]]


From kmbe||56 @end|ng |rom gm@||@com  Wed Jul 24 08:43:41 2019
From: kmbe||56 @end|ng |rom gm@||@com (Kenny Bell)
Date: Wed, 24 Jul 2019 18:43:41 +1200
Subject: [Rd] Writing files with long paths on Windows fails even after
 enabling long paths
Message-ID: <CAPekMC=QKkXdgfWk24wFd9HrAsm0YAawiwVHbzvn4WkLczROug@mail.gmail.com>

Hello all,

We now can have long file paths on Windows by setting the LongPathsEnabled
key to 1 at HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\FileSystem
in the Registry Editor. I can successfully rename files to have long paths
in File Explorer.

R still isn't able to take advantage of the change, however:

write(1, paste0(paste(sample(letters, 265, TRUE), collapse = ''), '.txt'))
#> Warning in file(file, ifelse(append, "a", "w")): cannot open file
#>
'mbpbzpgivtyhuugkkbcfxlvdzhsujaivaissyhivwqdxixmbnzctxlplazgtewpiioyxielkbohmvejcdkhcjmqtjyieymccrfquiwepngrseroiolayuucevztmqemnlnvfsshyhhggakxfemzzovwikusqtfeslwevxqmvufuyyvgvwwubmmpzvlcwaiwhipumrzphyeziwibisxszqrouekuonzjlaztdtonuupniqmxsaifpvkcldftkgnkozntgndwfu.txt':
#> No such file or directory
#> Error in file(file, ifelse(append, "a", "w")): cannot open the connection

I have read that long paths will be enabled by default in some future
release of Windows.

Hope this helps,
Kenny

	[[alternative HTML version deleted]]


From pete@moh@nty @end|ng |rom gm@||@com  Sat Jul 20 01:11:47 2019
From: pete@moh@nty @end|ng |rom gm@||@com (pete mohanty)
Date: Fri, 19 Jul 2019 16:11:47 -0700
Subject: [Rd] difficulty with sanitizer using bigmemory
Message-ID: <CADgfM5Rjx6gD5ry1My+GAJyZP_RWjZs0XQiwBtUgoWLfZUJrZQ@mail.gmail.com>

Dear all,

bigKRLS, which has been on CRAN for a couple of years, had to be pulled
recently due to what seems to be a sanitizer issue stemming from its use of
bigmemory. bigKRLS works fine (we?ve used it ourselves on many different
platforms and have had over 15,000 downloads without an end user reporting
difficulties because of this issue). Unfortunately, we have been unable to
reproduce the UndefinedBehaviorSanitizer error locally, and are unsure how
to proceed. We corresponded with Michael Kane, author of bigmemory, who
seems to think the issue may be on the CRAN side. At his suggestion, we
switched to filebacked big matrices, which didn?t resolve the issue. We
also tried adding MAIN_LDFLAGS = -fsanitize=undefined,address to the
MAKEVARS, which didn?t do the trick either.

Here are some links:


   1.

   bigKRLS repo: https://github.com/rdrr1990/bigKRLS
   2.

   bigKRLS file backs all big matrices with a helper function called
   ?to.big.matrix? found starting on line 116 of
   bigKRLS/bigKRLS_Rcpp_functions.R:
   https://github.com/rdrr1990/bigKRLS/blob/master/R/bigKRLS_Rcpp_functions.R
   3.

   Discussion with Michael Kane:
   https://github.com/kaneplusplus/bigmemory/issues/73#issuecomment-330543207



And here is the main error itself:

package bigKRLS_3.0.5.tar.gz has been auto-processed.

The auto-check found additional issues for the *last* version released on
CRAN:

  clang-UBSAN <
https://www.stats.ox.ac.uk/pub/bdr/memtests/clang-UBSAN/bigKRLS>

  gcc-UBSAN <https://www.stats.ox.ac.uk/pub/bdr/memtests/gcc-UBSAN/bigKRLS>

Clicking through, you find that

> test_check("bigKRLS")

gauss_kernel.cpp:38:40: runtime error: member call on address
0x6120001f2c40 which does not point to an object of type 'BigMatrix'

0x6120001f2c40: note: object is of type 'FileBackedBigMatrix'

[details omitted]

SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior
gauss_kernel.cpp:38:40 in

/data/gannet/ripley/R/test-clang/bigmemory/include/bigmemory/BigMatrix.h:41:28:
runtime error: member access within address 0x6120001f2c40 which does not
point to an object of type 'BigMatrix'

0x6120001f2c40: note: object is of type 'FileBackedBigMatrix'

But FileBackedBigMatrix are BigMatrix objects and earlier versions of the
package which did not file back generated similar errors. (R CMD check
--as-cran does not yield these errors on Ubuntu 16.04 or MacOS Sierra,
which has made it particularly tricky to work on.)

Any and all help would be greatly appreciated!!

Best,

Pete Mohanty and Robert Shaffer


-- 
Pete Mohanty, PhD
Science, Engineering & Education Fellow
Stanford University
Department of Statistics
https://sites.google.com/site/petemohanty/

	[[alternative HTML version deleted]]


From henr|k@bengt@@on @end|ng |rom gm@||@com  Wed Jul 24 09:30:31 2019
From: henr|k@bengt@@on @end|ng |rom gm@||@com (Henrik Bengtsson)
Date: Wed, 24 Jul 2019 09:30:31 +0200
Subject: [Rd] difficulty with sanitizer using bigmemory
In-Reply-To: <CADgfM5Rjx6gD5ry1My+GAJyZP_RWjZs0XQiwBtUgoWLfZUJrZQ@mail.gmail.com>
References: <CADgfM5Rjx6gD5ry1My+GAJyZP_RWjZs0XQiwBtUgoWLfZUJrZQ@mail.gmail.com>
Message-ID: <CAFDcVCQNJLJnJnH77LFbAcZJx1a2EzNaZiC_envMRv-vv1_KTQ@mail.gmail.com>

The https://builder.r-hub.io/advanced provides an 'R CMD check
--as-cran' for 'Debian Linux, R-devel, GCC ASAN/UBSAN'.  You can
either upload it there or launch it from you local R prompt;

> rhub::check()
?? Choose build platform
...
10: Debian Linux, R-devel, GCC ASAN/UBSAN (linux-x86_64-rocker-gcc-san)
...
20: Windows Server 2008 R2 SP1, R-release, 32/64 bit (windows-x86_64-release)

With some luck, you might be able to reproduce those CRAN sanity checks there.

/Henrik

On Wed, Jul 24, 2019 at 9:21 AM pete mohanty <pete.mohanty at gmail.com> wrote:
>
> Dear all,
>
> bigKRLS, which has been on CRAN for a couple of years, had to be pulled
> recently due to what seems to be a sanitizer issue stemming from its use of
> bigmemory. bigKRLS works fine (we?ve used it ourselves on many different
> platforms and have had over 15,000 downloads without an end user reporting
> difficulties because of this issue). Unfortunately, we have been unable to
> reproduce the UndefinedBehaviorSanitizer error locally, and are unsure how
> to proceed. We corresponded with Michael Kane, author of bigmemory, who
> seems to think the issue may be on the CRAN side. At his suggestion, we
> switched to filebacked big matrices, which didn?t resolve the issue. We
> also tried adding MAIN_LDFLAGS = -fsanitize=undefined,address to the
> MAKEVARS, which didn?t do the trick either.
>
> Here are some links:
>
>
>    1.
>
>    bigKRLS repo: https://github.com/rdrr1990/bigKRLS
>    2.
>
>    bigKRLS file backs all big matrices with a helper function called
>    ?to.big.matrix? found starting on line 116 of
>    bigKRLS/bigKRLS_Rcpp_functions.R:
>    https://github.com/rdrr1990/bigKRLS/blob/master/R/bigKRLS_Rcpp_functions.R
>    3.
>
>    Discussion with Michael Kane:
>    https://github.com/kaneplusplus/bigmemory/issues/73#issuecomment-330543207
>
>
>
> And here is the main error itself:
>
> package bigKRLS_3.0.5.tar.gz has been auto-processed.
>
> The auto-check found additional issues for the *last* version released on
> CRAN:
>
>   clang-UBSAN <
> https://www.stats.ox.ac.uk/pub/bdr/memtests/clang-UBSAN/bigKRLS>
>
>   gcc-UBSAN <https://www.stats.ox.ac.uk/pub/bdr/memtests/gcc-UBSAN/bigKRLS>
>
> Clicking through, you find that
>
> > test_check("bigKRLS")
>
> gauss_kernel.cpp:38:40: runtime error: member call on address
> 0x6120001f2c40 which does not point to an object of type 'BigMatrix'
>
> 0x6120001f2c40: note: object is of type 'FileBackedBigMatrix'
>
> [details omitted]
>
> SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior
> gauss_kernel.cpp:38:40 in
>
> /data/gannet/ripley/R/test-clang/bigmemory/include/bigmemory/BigMatrix.h:41:28:
> runtime error: member access within address 0x6120001f2c40 which does not
> point to an object of type 'BigMatrix'
>
> 0x6120001f2c40: note: object is of type 'FileBackedBigMatrix'
>
> But FileBackedBigMatrix are BigMatrix objects and earlier versions of the
> package which did not file back generated similar errors. (R CMD check
> --as-cran does not yield these errors on Ubuntu 16.04 or MacOS Sierra,
> which has made it particularly tricky to work on.)
>
> Any and all help would be greatly appreciated!!
>
> Best,
>
> Pete Mohanty and Robert Shaffer
>
>
> --
> Pete Mohanty, PhD
> Science, Engineering & Education Fellow
> Stanford University
> Department of Statistics
> https://sites.google.com/site/petemohanty/
>
>         [[alternative HTML version deleted]]
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From m@ech|er @end|ng |rom @t@t@m@th@ethz@ch  Wed Jul 24 09:55:55 2019
From: m@ech|er @end|ng |rom @t@t@m@th@ethz@ch (Martin Maechler)
Date: Wed, 24 Jul 2019 09:55:55 +0200
Subject: [Rd] Minor typo in R-exts
In-Reply-To: <CAOwKfPRFOhD+O_bf4eqQXO9-DgLG5m4-si5OcKBNgiW9wE19RQ@mail.gmail.com>
References: <CAOwKfPRFOhD+O_bf4eqQXO9-DgLG5m4-si5OcKBNgiW9wE19RQ@mail.gmail.com>
Message-ID: <23864.3851.344642.572399@stat.math.ethz.ch>

>>>>> Josh O'Brien 
>>>>>     on Mon, 22 Jul 2019 15:09:09 -0700 writes:

    > Section 1.1.3 of the "R-exts" manual currently refers to "imports or
    > importFrom directives" where it means to say "import or importFrom
    > directives". Results of a diff between R-exts.texi at SVN revision
    > 76864 and a corrected version are copied below.

Thank you, Josh.   Fixed in the sources now.

Martin


From tom@@@k@||ber@ @end|ng |rom gm@||@com  Wed Jul 24 10:14:19 2019
From: tom@@@k@||ber@ @end|ng |rom gm@||@com (Tomas Kalibera)
Date: Wed, 24 Jul 2019 10:14:19 +0200
Subject: [Rd] Writing files with long paths on Windows fails even after
 enabling long paths
In-Reply-To: <CAPekMC=QKkXdgfWk24wFd9HrAsm0YAawiwVHbzvn4WkLczROug@mail.gmail.com>
References: <CAPekMC=QKkXdgfWk24wFd9HrAsm0YAawiwVHbzvn4WkLczROug@mail.gmail.com>
Message-ID: <dd8598b1-7956-4b53-a53d-527ca2540f3c@gmail.com>

Thanks for the note. R uses MAX_PATH internally at a number of places 
(both directly in Windows specific code and indirectly via PATH_MAX to 
reflect POSIX) and sometimes uses POSIX functions to access files and 
directories, so it would be a non-trivial change and would require more 
Windows-specific code in the code base. I expect external libraries to 
also depend on MAX_PATH and sometimes use POSIX functions (when 
supported on Windows) to access files and directories. Mingw which we 
use on Windows also has PATH_MAX derived from MAX_PATH to reflect POSIX 
behavior and allow use of POSIX-like functions.? It is hence even 
unclear how big effect this change if done in R could have on R end 
users, the limit would just remain in many situations. So I am afraid 
the path length limit on Windows in R cannot be removed/increased in the 
near future. Please feel free to submit a wishlist report to bugzilla, 
where this could be revisited in the future.

Best
Tomas

On 7/24/19 8:43 AM, Kenny Bell wrote:
> Hello all,
>
> We now can have long file paths on Windows by setting the LongPathsEnabled
> key to 1 at HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\FileSystem
> in the Registry Editor. I can successfully rename files to have long paths
> in File Explorer.
>
> R still isn't able to take advantage of the change, however:
>
> write(1, paste0(paste(sample(letters, 265, TRUE), collapse = ''), '.txt'))
> #> Warning in file(file, ifelse(append, "a", "w")): cannot open file
> #>
> 'mbpbzpgivtyhuugkkbcfxlvdzhsujaivaissyhivwqdxixmbnzctxlplazgtewpiioyxielkbohmvejcdkhcjmqtjyieymccrfquiwepngrseroiolayuucevztmqemnlnvfsshyhhggakxfemzzovwikusqtfeslwevxqmvufuyyvgvwwubmmpzvlcwaiwhipumrzphyeziwibisxszqrouekuonzjlaztdtonuupniqmxsaifpvkcldftkgnkozntgndwfu.txt':
> #> No such file or directory
> #> Error in file(file, ifelse(append, "a", "w")): cannot open the connection
>
> I have read that long paths will be enabled by default in some future
> release of Windows.
>
> Hope this helps,
> Kenny
>
> 	[[alternative HTML version deleted]]
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From |uke-t|erney @end|ng |rom u|ow@@edu  Wed Jul 24 17:25:01 2019
From: |uke-t|erney @end|ng |rom u|ow@@edu (Tierney, Luke)
Date: Wed, 24 Jul 2019 15:25:01 +0000
Subject: [Rd] [External] Re:  Any plans for ALTREP lists (VECSXP)?
In-Reply-To: <CAD4oTHGaJFWCLtVRVQ3oG6ws2hj+Cuo1krw0-VBjNCuhKQYThg@mail.gmail.com>
References: <61E11B6B-E70C-4B92-9AC2-A3FA6678D626@northeastern.edu>
 <CAOQ5NyfEaZL+Uy_Ncw=Yy5sRcc4iuR1=3c1vMEB2xPSrHn6cvw@mail.gmail.com>
 <CAD4oTHGaJFWCLtVRVQ3oG6ws2hj+Cuo1krw0-VBjNCuhKQYThg@mail.gmail.com>
Message-ID: <alpine.DEB.2.21.1907241008540.3077@luke-Latitude-7480>

If one of you wanted to try to create a patch to support ALTREP
generic vectors here are some notes:

The main challenge I am aware of (there might be others): Allowing
DATAPTR to return a writable pointer would be too dangerous because
the GC write barrier needs to see all mutations. So it would be best
if Dataptr and Dataptr_or_null methods were not allowed to be
defined. The default methods in altrep.c should do the right think.

A reasonable name for the abstract class would be 'altlist'.

'altrep' methods that a class can provide:

   Unserialize or UnserializeEX
   Serialized_state
   Duplicate or DuplicateEx
   Coerce
   Inspect
   Length

'altvec' methods a class should provide:

   Extract_subset
   not Dataptr
   not Dataptr_or_null

'altlist' specific methods:

   Elt
   Set_elt

Best,

luke

On Tue, 23 Jul 2019, Gabriel Becker wrote:

> Hi Kylie,
>
> Is it a list with only numerics in it? (I only see REALSXPs there, but
> obviously inspect isn't showing all of them). If so, you could load it up
> into one big vector and then also keep partitioning information around.
> Bioconductor does this (see ?IRanges::CompressedList ). The potential
> benefit here being that the underlying large vector could then be a big
> out-of-memory altrep. How helpful this would be depends somewhat on what
> you want to do with it, of course, but it is something that comes to mind.
>
> Also, I would expect some overhead but that seems like a lot (without
> having done super much in the way of benchmarking). What exactly is
> as.altrep doing?
>
> Best,
> ~G
>
> On Tue, Jul 23, 2019 at 9:54 AM Michael Lawrence via R-devel <
> r-devel at r-project.org> wrote:
>
>> Hi Kylie,
>>
>> As an alternative in the short term, you could consider deriving from
>> S4Vector's List class, implementing the getListElement() method to
>> lazily create the objects.
>>
>> Michael
>>
>> On Tue, Jul 23, 2019 at 9:09 AM Bemis, Kylie <k.bemis at northeastern.edu>
>> wrote:
>>>
>>> Hello,
>>>
>>> I was wondering if there were any plans for ALTREP lists (VECSXP)?
>>>
>>> It seems to me that they could be supported in a similar way to how
>> ALTSTRING works, with Elt() and Set_elt() methods, or would there be some
>> problems with that I?m not seeing due to lists not being atomic vectors?
>>>
>>> I was taking an approach of converting each list element (of a
>> file-based list data structure) to an ALTREP representation to build up an
>> ?ALTREP list?.
>>>
>>> This seems fine for shorter lists with large elements, but I noticed
>> that for longer lists with smaller elements, this could be far more
>> time-consuming than simply reading the entire list into memory and
>> returning a non-ALTREP list:
>>>
>>>> x
>>> <34840 length> matter_list :: out-of-memory list
>>> (1.1 MB real | 543.3 MB virtual)
>>>
>>>> system.time(y <- as.list(x))
>>>    user  system elapsed
>>>   1.116   2.175   5.053
>>>
>>>> system.time(z <- as.altrep(x))
>>>    user  system elapsed
>>>  36.295   4.717  41.216
>>>
>>>> .Internal(inspect(y))
>>> @108255000 19 VECSXP g1c7 [MARK,NAM(7)] (len=34840, tl=0)
>>>   @7f9044d9fc00 14 REALSXP g1c7 [MARK] (len=1129, tl=0)
>> 404.093,404.096,404.099,404.102,404.105,...
>>>   @7f9044d25e00 14 REALSXP g1c7 [MARK] (len=890, tl=0)
>> 409.924,409.927,409.931,409.934,409.937,...
>>>   @7f9044da6000 14 REALSXP g1c7 [MARK] (len=1878, tl=0)
>> 400.3,400.303,400.306,400.309,400.312,...
>>>   @7f9031a6b000 14 REALSXP g1c7 [MARK] (len=2266, tl=0)
>> 402.179,402.182,402.185,402.188,402.191,...
>>>   @7f9031a77a00 14 REALSXP g1c7 [MARK] (len=1981, tl=0)
>> 403.021,403.024,403.027,403.03,403.033,...
>>>   ...
>>>
>>>> .Internal(inspect(z))
>>> @108210000 19 VECSXP g1c7 [MARK,NAM(7)] (len=34840, tl=0)
>>>   @7f904eea7660 14 REALSXP g1c0 [MARK,NAM(7)] matter vector (mode=4,
>> len=1129, mem=0)
>>>   @7f9050347498 14 REALSXP g1c0 [MARK,NAM(7)] matter vector (mode=4,
>> len=890, mem=0)
>>>   @7f904d286b20 14 REALSXP g1c0 [MARK,NAM(7)] matter vector (mode=4,
>> len=1878, mem=0)
>>>   @7f904fd38820 14 REALSXP g1c0 [MARK,NAM(7)] matter vector (mode=4,
>> len=2266, mem=0)
>>>   @7f904c75ce90 14 REALSXP g1c0 [MARK,NAM(7)] matter vector (mode=4,
>> len=1981, mem=0)
>>>   ...
>>>
>>> In this situation, it would be much faster and simpler for me to return
>> a theoretical ALTREP list that serves SEXP elements on-demand, similar to
>> how ALTSTRING seems to be implemented.
>>>
>>> I don?t know how many other people would get a use out of ALTREP lists,
>> but I certainly would.
>>>
>>> Are there any plans for this?
>>>
>>> Thanks!
>>>
>>> ~~~
>>> Kylie Ariel Bemis
>>> Khoury College of Computer Sciences
>>> Northeastern University
>>> kuwisdelu.github.io<https://kuwisdelu.github.io>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>         [[alternative HTML version deleted]]
>>>
>>> ______________________________________________
>>> R-devel at r-project.org mailing list
>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>
>>
>>
>> --
>> Michael Lawrence
>> Scientist, Bioinformatics and Computational Biology
>> Genentech, A Member of the Roche Group
>> Office +1 (650) 225-7760
>> michafla at gene.com
>>
>> Join Genentech on LinkedIn | Twitter | Facebook | Instagram | YouTube
>>
>> ______________________________________________
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>
>
> 	[[alternative HTML version deleted]]
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>

-- 
Luke Tierney
Ralph E. Wareham Professor of Mathematical Sciences
University of Iowa                  Phone:             319-335-3386
Department of Statistics and        Fax:               319-335-3017
    Actuarial Science
241 Schaeffer Hall                  email:   luke-tierney at uiowa.edu
Iowa City, IA 52242                 WWW:  http://www.stat.uiowa.edu

From g@bembecker @end|ng |rom gm@||@com  Wed Jul 24 19:43:03 2019
From: g@bembecker @end|ng |rom gm@||@com (Gabriel Becker)
Date: Wed, 24 Jul 2019 10:43:03 -0700
Subject: [Rd] [External] Re:  Any plans for ALTREP lists (VECSXP)?
In-Reply-To: <alpine.DEB.2.21.1907241008540.3077@luke-Latitude-7480>
References: <61E11B6B-E70C-4B92-9AC2-A3FA6678D626@northeastern.edu>
 <CAOQ5NyfEaZL+Uy_Ncw=Yy5sRcc4iuR1=3c1vMEB2xPSrHn6cvw@mail.gmail.com>
 <CAD4oTHGaJFWCLtVRVQ3oG6ws2hj+Cuo1krw0-VBjNCuhKQYThg@mail.gmail.com>
 <alpine.DEB.2.21.1907241008540.3077@luke-Latitude-7480>
Message-ID: <CAD4oTHG5q9L3qorwpaQNQ6PM69rhqu1ofHC8PHacmYnOvBs47Q@mail.gmail.com>

I can work on this. Thanks Luke.

~G

On Wed, Jul 24, 2019 at 8:25 AM Tierney, Luke <luke-tierney at uiowa.edu>
wrote:

> If one of you wanted to try to create a patch to support ALTREP
> generic vectors here are some notes:
>
> The main challenge I am aware of (there might be others): Allowing
> DATAPTR to return a writable pointer would be too dangerous because
> the GC write barrier needs to see all mutations. So it would be best
> if Dataptr and Dataptr_or_null methods were not allowed to be
> defined. The default methods in altrep.c should do the right think.
>
> A reasonable name for the abstract class would be 'altlist'.
>
> 'altrep' methods that a class can provide:
>
>    Unserialize or UnserializeEX
>    Serialized_state
>    Duplicate or DuplicateEx
>    Coerce
>    Inspect
>    Length
>
> 'altvec' methods a class should provide:
>
>    Extract_subset
>    not Dataptr
>    not Dataptr_or_null
>
> 'altlist' specific methods:
>
>    Elt
>    Set_elt
>
> Best,
>
> luke
>
> On Tue, 23 Jul 2019, Gabriel Becker wrote:
>
> > Hi Kylie,
> >
> > Is it a list with only numerics in it? (I only see REALSXPs there, but
> > obviously inspect isn't showing all of them). If so, you could load it up
> > into one big vector and then also keep partitioning information around.
> > Bioconductor does this (see ?IRanges::CompressedList ). The potential
> > benefit here being that the underlying large vector could then be a big
> > out-of-memory altrep. How helpful this would be depends somewhat on what
> > you want to do with it, of course, but it is something that comes to
> mind.
> >
> > Also, I would expect some overhead but that seems like a lot (without
> > having done super much in the way of benchmarking). What exactly is
> > as.altrep doing?
> >
> > Best,
> > ~G
> >
> > On Tue, Jul 23, 2019 at 9:54 AM Michael Lawrence via R-devel <
> > r-devel at r-project.org> wrote:
> >
> >> Hi Kylie,
> >>
> >> As an alternative in the short term, you could consider deriving from
> >> S4Vector's List class, implementing the getListElement() method to
> >> lazily create the objects.
> >>
> >> Michael
> >>
> >> On Tue, Jul 23, 2019 at 9:09 AM Bemis, Kylie <k.bemis at northeastern.edu>
> >> wrote:
> >>>
> >>> Hello,
> >>>
> >>> I was wondering if there were any plans for ALTREP lists (VECSXP)?
> >>>
> >>> It seems to me that they could be supported in a similar way to how
> >> ALTSTRING works, with Elt() and Set_elt() methods, or would there be
> some
> >> problems with that I?m not seeing due to lists not being atomic vectors?
> >>>
> >>> I was taking an approach of converting each list element (of a
> >> file-based list data structure) to an ALTREP representation to build up
> an
> >> ?ALTREP list?.
> >>>
> >>> This seems fine for shorter lists with large elements, but I noticed
> >> that for longer lists with smaller elements, this could be far more
> >> time-consuming than simply reading the entire list into memory and
> >> returning a non-ALTREP list:
> >>>
> >>>> x
> >>> <34840 length> matter_list :: out-of-memory list
> >>> (1.1 MB real | 543.3 MB virtual)
> >>>
> >>>> system.time(y <- as.list(x))
> >>>    user  system elapsed
> >>>   1.116   2.175   5.053
> >>>
> >>>> system.time(z <- as.altrep(x))
> >>>    user  system elapsed
> >>>  36.295   4.717  41.216
> >>>
> >>>> .Internal(inspect(y))
> >>> @108255000 19 VECSXP g1c7 [MARK,NAM(7)] (len=34840, tl=0)
> >>>   @7f9044d9fc00 14 REALSXP g1c7 [MARK] (len=1129, tl=0)
> >> 404.093,404.096,404.099,404.102,404.105,...
> >>>   @7f9044d25e00 14 REALSXP g1c7 [MARK] (len=890, tl=0)
> >> 409.924,409.927,409.931,409.934,409.937,...
> >>>   @7f9044da6000 14 REALSXP g1c7 [MARK] (len=1878, tl=0)
> >> 400.3,400.303,400.306,400.309,400.312,...
> >>>   @7f9031a6b000 14 REALSXP g1c7 [MARK] (len=2266, tl=0)
> >> 402.179,402.182,402.185,402.188,402.191,...
> >>>   @7f9031a77a00 14 REALSXP g1c7 [MARK] (len=1981, tl=0)
> >> 403.021,403.024,403.027,403.03,403.033,...
> >>>   ...
> >>>
> >>>> .Internal(inspect(z))
> >>> @108210000 19 VECSXP g1c7 [MARK,NAM(7)] (len=34840, tl=0)
> >>>   @7f904eea7660 14 REALSXP g1c0 [MARK,NAM(7)] matter vector (mode=4,
> >> len=1129, mem=0)
> >>>   @7f9050347498 14 REALSXP g1c0 [MARK,NAM(7)] matter vector (mode=4,
> >> len=890, mem=0)
> >>>   @7f904d286b20 14 REALSXP g1c0 [MARK,NAM(7)] matter vector (mode=4,
> >> len=1878, mem=0)
> >>>   @7f904fd38820 14 REALSXP g1c0 [MARK,NAM(7)] matter vector (mode=4,
> >> len=2266, mem=0)
> >>>   @7f904c75ce90 14 REALSXP g1c0 [MARK,NAM(7)] matter vector (mode=4,
> >> len=1981, mem=0)
> >>>   ...
> >>>
> >>> In this situation, it would be much faster and simpler for me to return
> >> a theoretical ALTREP list that serves SEXP elements on-demand, similar
> to
> >> how ALTSTRING seems to be implemented.
> >>>
> >>> I don?t know how many other people would get a use out of ALTREP lists,
> >> but I certainly would.
> >>>
> >>> Are there any plans for this?
> >>>
> >>> Thanks!
> >>>
> >>> ~~~
> >>> Kylie Ariel Bemis
> >>> Khoury College of Computer Sciences
> >>> Northeastern University
> >>> kuwisdelu.github.io<https://kuwisdelu.github.io>
> >>>
> >>>
> >>>
> >>>
> >>>
> >>>
> >>>
> >>>
> >>>
> >>>
> >>>
> >>>         [[alternative HTML version deleted]]
> >>>
> >>> ______________________________________________
> >>> R-devel at r-project.org mailing list
> >>> https://stat.ethz.ch/mailman/listinfo/r-devel
> >>
> >>
> >>
> >> --
> >> Michael Lawrence
> >> Scientist, Bioinformatics and Computational Biology
> >> Genentech, A Member of the Roche Group
> >> Office +1 (650) 225-7760
> >> michafla at gene.com
> >>
> >> Join Genentech on LinkedIn | Twitter | Facebook | Instagram | YouTube
> >>
> >> ______________________________________________
> >> R-devel at r-project.org mailing list
> >> https://stat.ethz.ch/mailman/listinfo/r-devel
> >>
> >
> >       [[alternative HTML version deleted]]
> >
> > ______________________________________________
> > R-devel at r-project.org mailing list
> > https://stat.ethz.ch/mailman/listinfo/r-devel
> >
>
> --
> Luke Tierney
> Ralph E. Wareham Professor of Mathematical Sciences
> University of Iowa                  Phone:             319-335-3386
> Department of Statistics and        Fax:               319-335-3017
>     Actuarial Science
> 241 Schaeffer Hall                  email:   luke-tierney at uiowa.edu
> Iowa City, IA 52242                 WWW:  http://www.stat.uiowa.edu

	[[alternative HTML version deleted]]


From g@bembecker @end|ng |rom gm@||@com  Wed Jul 24 19:43:31 2019
From: g@bembecker @end|ng |rom gm@||@com (Gabriel Becker)
Date: Wed, 24 Jul 2019 10:43:31 -0700
Subject: [Rd] [External] Re:  Any plans for ALTREP lists (VECSXP)?
In-Reply-To: <CAD4oTHG5q9L3qorwpaQNQ6PM69rhqu1ofHC8PHacmYnOvBs47Q@mail.gmail.com>
References: <61E11B6B-E70C-4B92-9AC2-A3FA6678D626@northeastern.edu>
 <CAOQ5NyfEaZL+Uy_Ncw=Yy5sRcc4iuR1=3c1vMEB2xPSrHn6cvw@mail.gmail.com>
 <CAD4oTHGaJFWCLtVRVQ3oG6ws2hj+Cuo1krw0-VBjNCuhKQYThg@mail.gmail.com>
 <alpine.DEB.2.21.1907241008540.3077@luke-Latitude-7480>
 <CAD4oTHG5q9L3qorwpaQNQ6PM69rhqu1ofHC8PHacmYnOvBs47Q@mail.gmail.com>
Message-ID: <CAD4oTHG_opmX=E09ggaZ1Y36HhQb8KYAxDC1-Tqh0_hnHL6mtQ@mail.gmail.com>

@Kylie happy to collaborate on it if you're interested.

~G

On Wed, Jul 24, 2019 at 10:43 AM Gabriel Becker <gabembecker at gmail.com>
wrote:

> I can work on this. Thanks Luke.
>
> ~G
>
> On Wed, Jul 24, 2019 at 8:25 AM Tierney, Luke <luke-tierney at uiowa.edu>
> wrote:
>
>> If one of you wanted to try to create a patch to support ALTREP
>> generic vectors here are some notes:
>>
>> The main challenge I am aware of (there might be others): Allowing
>> DATAPTR to return a writable pointer would be too dangerous because
>> the GC write barrier needs to see all mutations. So it would be best
>> if Dataptr and Dataptr_or_null methods were not allowed to be
>> defined. The default methods in altrep.c should do the right think.
>>
>> A reasonable name for the abstract class would be 'altlist'.
>>
>> 'altrep' methods that a class can provide:
>>
>>    Unserialize or UnserializeEX
>>    Serialized_state
>>    Duplicate or DuplicateEx
>>    Coerce
>>    Inspect
>>    Length
>>
>> 'altvec' methods a class should provide:
>>
>>    Extract_subset
>>    not Dataptr
>>    not Dataptr_or_null
>>
>> 'altlist' specific methods:
>>
>>    Elt
>>    Set_elt
>>
>> Best,
>>
>> luke
>>
>> On Tue, 23 Jul 2019, Gabriel Becker wrote:
>>
>> > Hi Kylie,
>> >
>> > Is it a list with only numerics in it? (I only see REALSXPs there, but
>> > obviously inspect isn't showing all of them). If so, you could load it
>> up
>> > into one big vector and then also keep partitioning information around.
>> > Bioconductor does this (see ?IRanges::CompressedList ). The potential
>> > benefit here being that the underlying large vector could then be a big
>> > out-of-memory altrep. How helpful this would be depends somewhat on what
>> > you want to do with it, of course, but it is something that comes to
>> mind.
>> >
>> > Also, I would expect some overhead but that seems like a lot (without
>> > having done super much in the way of benchmarking). What exactly is
>> > as.altrep doing?
>> >
>> > Best,
>> > ~G
>> >
>> > On Tue, Jul 23, 2019 at 9:54 AM Michael Lawrence via R-devel <
>> > r-devel at r-project.org> wrote:
>> >
>> >> Hi Kylie,
>> >>
>> >> As an alternative in the short term, you could consider deriving from
>> >> S4Vector's List class, implementing the getListElement() method to
>> >> lazily create the objects.
>> >>
>> >> Michael
>> >>
>> >> On Tue, Jul 23, 2019 at 9:09 AM Bemis, Kylie <k.bemis at northeastern.edu
>> >
>> >> wrote:
>> >>>
>> >>> Hello,
>> >>>
>> >>> I was wondering if there were any plans for ALTREP lists (VECSXP)?
>> >>>
>> >>> It seems to me that they could be supported in a similar way to how
>> >> ALTSTRING works, with Elt() and Set_elt() methods, or would there be
>> some
>> >> problems with that I?m not seeing due to lists not being atomic
>> vectors?
>> >>>
>> >>> I was taking an approach of converting each list element (of a
>> >> file-based list data structure) to an ALTREP representation to build
>> up an
>> >> ?ALTREP list?.
>> >>>
>> >>> This seems fine for shorter lists with large elements, but I noticed
>> >> that for longer lists with smaller elements, this could be far more
>> >> time-consuming than simply reading the entire list into memory and
>> >> returning a non-ALTREP list:
>> >>>
>> >>>> x
>> >>> <34840 length> matter_list :: out-of-memory list
>> >>> (1.1 MB real | 543.3 MB virtual)
>> >>>
>> >>>> system.time(y <- as.list(x))
>> >>>    user  system elapsed
>> >>>   1.116   2.175   5.053
>> >>>
>> >>>> system.time(z <- as.altrep(x))
>> >>>    user  system elapsed
>> >>>  36.295   4.717  41.216
>> >>>
>> >>>> .Internal(inspect(y))
>> >>> @108255000 19 VECSXP g1c7 [MARK,NAM(7)] (len=34840, tl=0)
>> >>>   @7f9044d9fc00 14 REALSXP g1c7 [MARK] (len=1129, tl=0)
>> >> 404.093,404.096,404.099,404.102,404.105,...
>> >>>   @7f9044d25e00 14 REALSXP g1c7 [MARK] (len=890, tl=0)
>> >> 409.924,409.927,409.931,409.934,409.937,...
>> >>>   @7f9044da6000 14 REALSXP g1c7 [MARK] (len=1878, tl=0)
>> >> 400.3,400.303,400.306,400.309,400.312,...
>> >>>   @7f9031a6b000 14 REALSXP g1c7 [MARK] (len=2266, tl=0)
>> >> 402.179,402.182,402.185,402.188,402.191,...
>> >>>   @7f9031a77a00 14 REALSXP g1c7 [MARK] (len=1981, tl=0)
>> >> 403.021,403.024,403.027,403.03,403.033,...
>> >>>   ...
>> >>>
>> >>>> .Internal(inspect(z))
>> >>> @108210000 19 VECSXP g1c7 [MARK,NAM(7)] (len=34840, tl=0)
>> >>>   @7f904eea7660 14 REALSXP g1c0 [MARK,NAM(7)] matter vector (mode=4,
>> >> len=1129, mem=0)
>> >>>   @7f9050347498 14 REALSXP g1c0 [MARK,NAM(7)] matter vector (mode=4,
>> >> len=890, mem=0)
>> >>>   @7f904d286b20 14 REALSXP g1c0 [MARK,NAM(7)] matter vector (mode=4,
>> >> len=1878, mem=0)
>> >>>   @7f904fd38820 14 REALSXP g1c0 [MARK,NAM(7)] matter vector (mode=4,
>> >> len=2266, mem=0)
>> >>>   @7f904c75ce90 14 REALSXP g1c0 [MARK,NAM(7)] matter vector (mode=4,
>> >> len=1981, mem=0)
>> >>>   ...
>> >>>
>> >>> In this situation, it would be much faster and simpler for me to
>> return
>> >> a theoretical ALTREP list that serves SEXP elements on-demand, similar
>> to
>> >> how ALTSTRING seems to be implemented.
>> >>>
>> >>> I don?t know how many other people would get a use out of ALTREP
>> lists,
>> >> but I certainly would.
>> >>>
>> >>> Are there any plans for this?
>> >>>
>> >>> Thanks!
>> >>>
>> >>> ~~~
>> >>> Kylie Ariel Bemis
>> >>> Khoury College of Computer Sciences
>> >>> Northeastern University
>> >>> kuwisdelu.github.io<https://kuwisdelu.github.io>
>> >>>
>> >>>
>> >>>
>> >>>
>> >>>
>> >>>
>> >>>
>> >>>
>> >>>
>> >>>
>> >>>
>> >>>         [[alternative HTML version deleted]]
>> >>>
>> >>> ______________________________________________
>> >>> R-devel at r-project.org mailing list
>> >>> https://stat.ethz.ch/mailman/listinfo/r-devel
>> >>
>> >>
>> >>
>> >> --
>> >> Michael Lawrence
>> >> Scientist, Bioinformatics and Computational Biology
>> >> Genentech, A Member of the Roche Group
>> >> Office +1 (650) 225-7760
>> >> michafla at gene.com
>> >>
>> >> Join Genentech on LinkedIn | Twitter | Facebook | Instagram | YouTube
>> >>
>> >> ______________________________________________
>> >> R-devel at r-project.org mailing list
>> >> https://stat.ethz.ch/mailman/listinfo/r-devel
>> >>
>> >
>> >       [[alternative HTML version deleted]]
>> >
>> > ______________________________________________
>> > R-devel at r-project.org mailing list
>> > https://stat.ethz.ch/mailman/listinfo/r-devel
>> >
>>
>> --
>> Luke Tierney
>> Ralph E. Wareham Professor of Mathematical Sciences
>> University of Iowa                  Phone:             319-335-3386
>> Department of Statistics and        Fax:               319-335-3017
>>     Actuarial Science
>> 241 Schaeffer Hall                  email:   luke-tierney at uiowa.edu
>> Iowa City, IA 52242                 WWW:  http://www.stat.uiowa.edu
>
>

	[[alternative HTML version deleted]]


From tom@@@k@||ber@ @end|ng |rom gm@||@com  Fri Jul 26 12:22:19 2019
From: tom@@@k@||ber@ @end|ng |rom gm@||@com (Tomas Kalibera)
Date: Fri, 26 Jul 2019 12:22:19 +0200
Subject: [Rd] MKL with latest Rs
In-Reply-To: <CAC=0fxWBHsSvyFe4QAvk6db8YdJxB5YHUpowUoPRyNYuZku4vA@mail.gmail.com>
References: <CAC=0fxWBHsSvyFe4QAvk6db8YdJxB5YHUpowUoPRyNYuZku4vA@mail.gmail.com>
Message-ID: <f1be26bc-9d44-43c2-3bb3-c2f4bbcafdfa@gmail.com>

Dear Robert,

try setting these MKL environment variables

export MKL_INTERFACE_LAYER=GNU,LP64
export MKL_THREADING_LAYER=GNU

the example should then report correct results (and regardless of the 
version of R). There is no need to rebuild R from source, but when you 
are building from source, this problem would be detected by checks in R 
configure scripts. I can reproduce the problem on Ubuntu 19.04 and MKL 
installed from binaries as described in Dirk's blog, both with R 3.5.2 
and R-devel, and the problem goes away on both when the variables are set.

Best
Tomas

On 7/17/19 3:18 PM, Robert B. Gramacy wrote:
> Dear R-devel team,
>
> I've encountered problems with recent Rs (>= 3.5.3) and MKL.  I've followed
> Dirk's (http://dirk.eddelbuettel.com/blog/2018/04/15/) and Intel's (
> https://software.intel.com/en-us/articles/quick-linking-intel-mkl-blas-lapack-to-r)
> instructions and many versions of MKL.  All works fine in my Ubuntu 18
> setup for R 3.5.2 and older.  Carrying out the install and linking
> instructions works fine for later Rs, but calculations involving linear
> algebra become corrupted.  E.g., following Dirk's very simple svd example
> from that link above ...
>
>> n <- 1e3
>> X <- matrix(rnorm(n*n),n,n)
>> Xsvd <- svd(X)
>> Xsvd$d[1:5]
> [1] 63.09366 62.47868 62.26147 61.94530 61.84727
>
> ... you get Eigenvalues that are bigger than 1e26 in R-devel, say, but
> (correct) values near 60 with R 3.5.2.
>
> I just wanted to throw that out there in case anyone else had come across
> something similar.  I don't mind using a slightly older R/MKL for my
> stuff.  I might speculate that the Microsoft R Open folks are having
> similar issues because they're still using older Rs.
>
> I haven't tried compiling and linking from source (
> https://cran.r-project.org/doc/manuals/R-admin.html#MKL) because I haven't
> had success with that in some time.
>
> -B
>
> 	[[alternative HTML version deleted]]
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From @nto|ne@|@br| @end|ng |rom gm@||@com  Mon Jul 29 13:39:01 2019
From: @nto|ne@|@br| @end|ng |rom gm@||@com (Ant F)
Date: Mon, 29 Jul 2019 13:39:01 +0200
Subject: [Rd] install packages with missing pkg argument
Message-ID: <CAEKh8ujAOg5+qPm8JKB8DOnyd6j2yto-fpAddq4sex1_L8rHxQ@mail.gmail.com>

Dear all,

The help for `?install.packages` decribes, in the `pkg` argument
description :

> If this is missing, a listbox of available packages is presented where
possible in an interactive R session.

In fact running it with a missing argument triggers an error :

install.packages()
> Error in install.packages : argument "pkgs" is missing, with no default

What however doesn't trigger an error is callinginstall.packages on a zero
length character :

install.packages(character(0))

On my colleague's R 3.5.1 windows installation it shows the listbox of
available packages, on my 3.6.0 installation it pauses for a couple seconds
and doesn't do anything.

A character vector of length zero is what you get when you compute an empty
`setdiff` or `intersection`, so it was very surprising to us to see
something popup where we were expecting a vector of missing packages to be
installed (or none if there was no missing package).

I believe having the function work as advertised with a proper missing
argument, and having it do nothing silently when the argument is of length
zero, would make more sense.

Best regards,

Antoine

	[[alternative HTML version deleted]]


From hugh@p@r@on@ge @end|ng |rom gm@||@com  Mon Jul 29 13:59:01 2019
From: hugh@p@r@on@ge @end|ng |rom gm@||@com (Hugh Parsonage)
Date: Mon, 29 Jul 2019 21:59:01 +1000
Subject: [Rd] install packages with missing pkg argument
In-Reply-To: <CAEKh8ujAOg5+qPm8JKB8DOnyd6j2yto-fpAddq4sex1_L8rHxQ@mail.gmail.com>
References: <CAEKh8ujAOg5+qPm8JKB8DOnyd6j2yto-fpAddq4sex1_L8rHxQ@mail.gmail.com>
Message-ID: <CAJmOi+PqA=D5c3+=-gfwVyYxpGeoTHQiqE7qHzZu+=HWLGMyhg@mail.gmail.com>

Are you running that command in RStudio? And do you get the documented
results when you run utils::install.packages() rather than just
install.packages()

If yes, then the function is likely working as advertised and you've
mixed up the R and RStudio versions


On 29/07/2019, Ant F <antoine.fabri at gmail.com> wrote:
> Dear all,
>
> The help for `?install.packages` decribes, in the `pkg` argument
> description :
>
>> If this is missing, a listbox of available packages is presented where
> possible in an interactive R session.
>
> In fact running it with a missing argument triggers an error :
>
> install.packages()
>> Error in install.packages : argument "pkgs" is missing, with no default
>
> What however doesn't trigger an error is callinginstall.packages on a zero
> length character :
>
> install.packages(character(0))
>
> On my colleague's R 3.5.1 windows installation it shows the listbox of
> available packages, on my 3.6.0 installation it pauses for a couple seconds
> and doesn't do anything.
>
> A character vector of length zero is what you get when you compute an empty
> `setdiff` or `intersection`, so it was very surprising to us to see
> something popup where we were expecting a vector of missing packages to be
> installed (or none if there was no missing package).
>
> I believe having the function work as advertised with a proper missing
> argument, and having it do nothing silently when the argument is of length
> zero, would make more sense.
>
> Best regards,
>
> Antoine
>
> 	[[alternative HTML version deleted]]
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>


From e@ @end|ng |rom enr|co@chum@nn@net  Mon Jul 29 14:05:53 2019
From: e@ @end|ng |rom enr|co@chum@nn@net (Enrico Schumann)
Date: Mon, 29 Jul 2019 14:05:53 +0200
Subject: [Rd] install packages with missing pkg argument
In-Reply-To: <CAEKh8ujAOg5+qPm8JKB8DOnyd6j2yto-fpAddq4sex1_L8rHxQ@mail.gmail.com>
 (Ant F.'s message of "Mon, 29 Jul 2019 13:39:01 +0200")
References: <CAEKh8ujAOg5+qPm8JKB8DOnyd6j2yto-fpAddq4sex1_L8rHxQ@mail.gmail.com>
Message-ID: <87y30h2ggu.fsf@enricoschumann.net>

Maybe related to this?

    https://bugs.r-project.org/bugzilla/show_bug.cgi?id=17556

>>>>> "Antoine" == Ant F <antoine.fabri at gmail.com> writes:

    Antoine> Dear all,
    Antoine> The help for `?install.packages` decribes, in the `pkg` argument
    Antoine> description :

    >> If this is missing, a listbox of available packages is presented where
    Antoine> possible in an interactive R session.

    Antoine> In fact running it with a missing argument triggers an error :

    Antoine> install.packages()
    >> Error in install.packages : argument "pkgs" is missing, with no default

    Antoine> What however doesn't trigger an error is callinginstall.packages on a zero
    Antoine> length character :

    Antoine> install.packages(character(0))

    Antoine> On my colleague's R 3.5.1 windows installation it shows the listbox of
    Antoine> available packages, on my 3.6.0 installation it pauses for a couple seconds
    Antoine> and doesn't do anything.

    Antoine> A character vector of length zero is what you get when you compute an empty
    Antoine> `setdiff` or `intersection`, so it was very surprising to us to see
    Antoine> something popup where we were expecting a vector of missing packages to be
    Antoine> installed (or none if there was no missing package).

    Antoine> I believe having the function work as advertised with a proper missing
    Antoine> argument, and having it do nothing silently when the argument is of length
    Antoine> zero, would make more sense.

    Antoine> Best regards,

    Antoine> Antoine


-- 
Enrico Schumann
Lucerne, Switzerland
http://enricoschumann.net


From @nto|ne@|@br| @end|ng |rom gm@||@com  Mon Jul 29 14:56:37 2019
From: @nto|ne@|@br| @end|ng |rom gm@||@com (Ant F)
Date: Mon, 29 Jul 2019 14:56:37 +0200
Subject: [Rd] install packages with missing pkg argument
In-Reply-To: <CAJmOi+PqA=D5c3+=-gfwVyYxpGeoTHQiqE7qHzZu+=HWLGMyhg@mail.gmail.com>
References: <CAEKh8ujAOg5+qPm8JKB8DOnyd6j2yto-fpAddq4sex1_L8rHxQ@mail.gmail.com>
 <CAJmOi+PqA=D5c3+=-gfwVyYxpGeoTHQiqE7qHzZu+=HWLGMyhg@mail.gmail.com>
Message-ID: <CAEKh8ujhuYDNPzphNzgPx0VHhudYCZDHGasZKQV9qO5+tCB45g@mail.gmail.com>

Indeed Hugh, apologies for the oversight, I've reported this to Rstudio, as
I believe it is problematic to get an irrelevant help file when calling
`?install.packages`.

https://github.com/rstudio/rstudio/issues/5154

Best regards,

Antoine

Le lun. 29 juil. 2019 ? 13:59, Hugh Parsonage <hugh.parsonage at gmail.com> a
?crit :

> Are you running that command in RStudio? And do you get the documented
> results when you run utils::install.packages() rather than just
> install.packages()
>
> If yes, then the function is likely working as advertised and you've
> mixed up the R and RStudio versions
>
>
> On 29/07/2019, Ant F <antoine.fabri at gmail.com> wrote:
> > Dear all,
> >
> > The help for `?install.packages` decribes, in the `pkg` argument
> > description :
> >
> >> If this is missing, a listbox of available packages is presented where
> > possible in an interactive R session.
> >
> > In fact running it with a missing argument triggers an error :
> >
> > install.packages()
> >> Error in install.packages : argument "pkgs" is missing, with no default
> >
> > What however doesn't trigger an error is callinginstall.packages on a
> zero
> > length character :
> >
> > install.packages(character(0))
> >
> > On my colleague's R 3.5.1 windows installation it shows the listbox of
> > available packages, on my 3.6.0 installation it pauses for a couple
> seconds
> > and doesn't do anything.
> >
> > A character vector of length zero is what you get when you compute an
> empty
> > `setdiff` or `intersection`, so it was very surprising to us to see
> > something popup where we were expecting a vector of missing packages to
> be
> > installed (or none if there was no missing package).
> >
> > I believe having the function work as advertised with a proper missing
> > argument, and having it do nothing silently when the argument is of
> length
> > zero, would make more sense.
> >
> > Best regards,
> >
> > Antoine
> >
> >       [[alternative HTML version deleted]]
> >
> > ______________________________________________
> > R-devel at r-project.org mailing list
> > https://stat.ethz.ch/mailman/listinfo/r-devel
> >
>

	[[alternative HTML version deleted]]


From murdoch@dunc@n @end|ng |rom gm@||@com  Mon Jul 29 15:02:06 2019
From: murdoch@dunc@n @end|ng |rom gm@||@com (Duncan Murdoch)
Date: Mon, 29 Jul 2019 09:02:06 -0400
Subject: [Rd] install packages with missing pkg argument
In-Reply-To: <CAEKh8ujAOg5+qPm8JKB8DOnyd6j2yto-fpAddq4sex1_L8rHxQ@mail.gmail.com>
References: <CAEKh8ujAOg5+qPm8JKB8DOnyd6j2yto-fpAddq4sex1_L8rHxQ@mail.gmail.com>
Message-ID: <9dd25042-4d2a-5cac-03f7-be93beb0c461@gmail.com>

On 29/07/2019 7:39 a.m., Ant F wrote:
> Dear all,
> 
> The help for `?install.packages` decribes, in the `pkg` argument
> description :
> 
>> If this is missing, a listbox of available packages is presented where
> possible in an interactive R session.
> 
> In fact running it with a missing argument triggers an error :
> 
> install.packages()
>> Error in install.packages : argument "pkgs" is missing, with no default
> 
> What however doesn't trigger an error is callinginstall.packages on a zero
> length character :
> 
> install.packages(character(0))
> 
> On my colleague's R 3.5.1 windows installation it shows the listbox of
> available packages, on my 3.6.0 installation it pauses for a couple seconds
> and doesn't do anything.
> 
> A character vector of length zero is what you get when you compute an empty
> `setdiff` or `intersection`, so it was very surprising to us to see
> something popup where we were expecting a vector of missing packages to be
> installed (or none if there was no missing package).
> 
> I believe having the function work as advertised with a proper missing
> argument, and having it do nothing silently when the argument is of length
> zero, would make more sense.
> 

The change you are requesting is listed as having been done in the NEWS 
for 3.6.0...

Duncan Murdoch


From @nto|ne@|@br| @end|ng |rom gm@||@com  Mon Jul 29 15:24:40 2019
From: @nto|ne@|@br| @end|ng |rom gm@||@com (Ant F)
Date: Mon, 29 Jul 2019 15:24:40 +0200
Subject: [Rd] install packages with missing pkg argument
In-Reply-To: <9dd25042-4d2a-5cac-03f7-be93beb0c461@gmail.com>
References: <CAEKh8ujAOg5+qPm8JKB8DOnyd6j2yto-fpAddq4sex1_L8rHxQ@mail.gmail.com>
 <9dd25042-4d2a-5cac-03f7-be93beb0c461@gmail.com>
Message-ID: <CAEKh8uh1T9x9Hj819CZdijqS2+SRPo_L7y_K_PFqJf1Y8LxmGg@mail.gmail.com>

Indeed it's a RStudio issue as diagnosed by Hugh, and is still an issue
with the latest version.

Le lun. 29 juil. 2019 ? 15:02, Duncan Murdoch <murdoch.duncan at gmail.com> a
?crit :

> On 29/07/2019 7:39 a.m., Ant F wrote:
> > Dear all,
> >
> > The help for `?install.packages` decribes, in the `pkg` argument
> > description :
> >
> >> If this is missing, a listbox of available packages is presented where
> > possible in an interactive R session.
> >
> > In fact running it with a missing argument triggers an error :
> >
> > install.packages()
> >> Error in install.packages : argument "pkgs" is missing, with no default
> >
> > What however doesn't trigger an error is callinginstall.packages on a
> zero
> > length character :
> >
> > install.packages(character(0))
> >
> > On my colleague's R 3.5.1 windows installation it shows the listbox of
> > available packages, on my 3.6.0 installation it pauses for a couple
> seconds
> > and doesn't do anything.
> >
> > A character vector of length zero is what you get when you compute an
> empty
> > `setdiff` or `intersection`, so it was very surprising to us to see
> > something popup where we were expecting a vector of missing packages to
> be
> > installed (or none if there was no missing package).
> >
> > I believe having the function work as advertised with a proper missing
> > argument, and having it do nothing silently when the argument is of
> length
> > zero, would make more sense.
> >
>
> The change you are requesting is listed as having been done in the NEWS
> for 3.6.0...
>
> Duncan Murdoch
>

	[[alternative HTML version deleted]]


From @zwj|08 @end|ng |rom gm@||@com  Tue Jul 30 17:51:32 2019
From: @zwj|08 @end|ng |rom gm@||@com (Wang Jiefei)
Date: Tue, 30 Jul 2019 11:51:32 -0400
Subject: [Rd] Questions regarding ALTREP_SET_ELT APIs
Message-ID: <CAGiFhPN6JY-CRO=kAexUgg38rh5yV_PbccFU7k2Eow5RSWnt2g@mail.gmail.com>

Hi all,

I'm wondering if there is any way to define a `SET_ELT` function for an
ALTREP class? I see there are ` ALTINTEGER_SET_ELT` etc. functions exported
in Rinternal.h, but there is no corresponding ALTREP APIs to define them.
The only way to set the value of an ALTREP is through a pointer, which will
require that the ALTREP data is in memory. Is it on purpose? Will there be
any plan to develop these ALTREP set element APIs?

Best,
Jiefei

	[[alternative HTML version deleted]]


From |uke-t|erney @end|ng |rom u|ow@@edu  Tue Jul 30 18:41:42 2019
From: |uke-t|erney @end|ng |rom u|ow@@edu (Tierney, Luke)
Date: Tue, 30 Jul 2019 16:41:42 +0000
Subject: [Rd] [External]  Questions regarding ALTREP_SET_ELT APIs
In-Reply-To: <CAGiFhPN6JY-CRO=kAexUgg38rh5yV_PbccFU7k2Eow5RSWnt2g@mail.gmail.com>
References: <CAGiFhPN6JY-CRO=kAexUgg38rh5yV_PbccFU7k2Eow5RSWnt2g@mail.gmail.com>
Message-ID: <alpine.OSX.2.21.1907301131200.1224@macbook-air-3.local>

On Tue, 30 Jul 2019, Wang Jiefei wrote:

> Hi all,
>
> I'm wondering if there is any way to define a `SET_ELT` function for an
> ALTREP class? I see there are ` ALTINTEGER_SET_ELT` etc. functions exported
> in Rinternal.h, but there is no corresponding ALTREP APIs to define them.
> The only way to set the value of an ALTREP is through a pointer, which will
> require that the ALTREP data is in memory. Is it on purpose?

For now, yes. We do support a Set_elt method for ALTSTRING classes but
not yet for others. I seem to recall that there are some issues with
going there for others, but we'll probably take a closer look later
this year.

One thing to keep in mind is that the R pass-by-value semantics
require that C code duplicate an object for which MAYBE_REFERENCED is
true, and the assumption in existing code is that duplicate returns an
object that can safely be mutated. That places a lot of limitations on
what can be done. You can see some notes on the issues in the
README.md and the vignette in
https://github.com/ALTREP-examples/Rpkg-mutable.

Best,

luke

> Will there be
> any plan to develop these ALTREP set element APIs?
>
> Best,
> Jiefei
>
> 	[[alternative HTML version deleted]]
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>

-- 
Luke Tierney
Ralph E. Wareham Professor of Mathematical Sciences
University of Iowa                  Phone:             319-335-3386
Department of Statistics and        Fax:               319-335-3017
    Actuarial Science
241 Schaeffer Hall                  email:   luke-tierney at uiowa.edu
Iowa City, IA 52242                 WWW:  http://www.stat.uiowa.edu


From @zwj|08 @end|ng |rom gm@||@com  Tue Jul 30 18:46:42 2019
From: @zwj|08 @end|ng |rom gm@||@com (Wang Jiefei)
Date: Tue, 30 Jul 2019 12:46:42 -0400
Subject: [Rd] [External]  Questions regarding ALTREP_SET_ELT APIs
In-Reply-To: <alpine.OSX.2.21.1907301131200.1224@macbook-air-3.local>
References: <CAGiFhPN6JY-CRO=kAexUgg38rh5yV_PbccFU7k2Eow5RSWnt2g@mail.gmail.com>
 <alpine.OSX.2.21.1907301131200.1224@macbook-air-3.local>
Message-ID: <CAGiFhPMRcy41N=iam4vkz0w-QV3w7ZLQbnLx0X8WFXGeeO5wgg@mail.gmail.com>

Hi Luke,

Thanks for your quick response. I appreciate your help.

Best,
Jiefei

On Tue, Jul 30, 2019 at 12:41 PM Tierney, Luke <luke-tierney at uiowa.edu>
wrote:

> On Tue, 30 Jul 2019, Wang Jiefei wrote:
>
> > Hi all,
> >
> > I'm wondering if there is any way to define a `SET_ELT` function for an
> > ALTREP class? I see there are ` ALTINTEGER_SET_ELT` etc. functions
> exported
> > in Rinternal.h, but there is no corresponding ALTREP APIs to define them.
> > The only way to set the value of an ALTREP is through a pointer, which
> will
> > require that the ALTREP data is in memory. Is it on purpose?
>
> For now, yes. We do support a Set_elt method for ALTSTRING classes but
> not yet for others. I seem to recall that there are some issues with
> going there for others, but we'll probably take a closer look later
> this year.
>
> One thing to keep in mind is that the R pass-by-value semantics
> require that C code duplicate an object for which MAYBE_REFERENCED is
> true, and the assumption in existing code is that duplicate returns an
> object that can safely be mutated. That places a lot of limitations on
> what can be done. You can see some notes on the issues in the
> README.md and the vignette in
> https://github.com/ALTREP-examples/Rpkg-mutable.
>
> Best,
>
> luke
>
> > Will there be
> > any plan to develop these ALTREP set element APIs?
> >
> > Best,
> > Jiefei
> >
> >       [[alternative HTML version deleted]]
> >
> > ______________________________________________
> > R-devel at r-project.org mailing list
> > https://stat.ethz.ch/mailman/listinfo/r-devel
> >
>
> --
> Luke Tierney
> Ralph E. Wareham Professor of Mathematical Sciences
> University of Iowa                  Phone:             319-335-3386
> Department of Statistics and        Fax:               319-335-3017
>     Actuarial Science
> 241 Schaeffer Hall                  email:   luke-tierney at uiowa.edu
> Iowa City, IA 52242                 WWW:  http://www.stat.uiowa.edu
>

	[[alternative HTML version deleted]]


From neon|r@ @end|ng |rom gm@||@com  Fri Jul 26 22:44:58 2019
From: neon|r@ @end|ng |rom gm@||@com (neonira Arinoem)
Date: Fri, 26 Jul 2019 22:44:58 +0200
Subject: [Rd] R evolution suggestion request
In-Reply-To: <CAN--Dz0HiEj3Up4SCTLng_VGP829fZsYyRDj5SKPO58XaqK62w@mail.gmail.com>
References: <CAN--Dz0HiEj3Up4SCTLng_VGP829fZsYyRDj5SKPO58XaqK62w@mail.gmail.com>
Message-ID: <CAN--Dz29svNZJsJHmDCrBFB79+rFuk+7BmjQfhoLr8eupbRgtA@mail.gmail.com>

Good evening R devel mailing list.

Just wonder if there is a way to ask for an evolution of the R language. In
affirmative case, let me know.

I use R for now many years, and still like it very much. It evolves quite
smoothly and improves well. Nevertheless, there is one topic that I still
miss in R language.

It is pure native R annotation, I mean ? la java. I wish to have an @
operator available a R language level to create/embed real code
annotations. Currently, the best I can get is to use a trick of hiding such
thing behind a comment. Neither good, not the right way, as comments are
comments, and annotations are annotations. They must be distinguished and
distinguish-able immediately, both for humans and code parsers.

Could you tell me, who should I get in touch with to share and promote this
need, that I believe, could bring a new frontier to R, and could generate a
lot of benefits for R users community.

Best regards.
Fabien GELINEAU, a.k.a Neonira

	[[alternative HTML version deleted]]


From dpc10@ter @end|ng |rom gm@||@com  Mon Jul 29 17:49:58 2019
From: dpc10@ter @end|ng |rom gm@||@com (Dev Chakraborty)
Date: Mon, 29 Jul 2019 11:49:58 -0400
Subject: [Rd] Is win-builder development branch down?
Message-ID: <C578F6B1-305F-45CC-A1D6-8C57428EAB3E@gmail.com>

Is the win-builder site (https://win-builder.r.project.org) down? I cannot load the tarball for my package to the development branch. I can upload it on the release and old-release branches. 

Also get FTP error (Failed FTP upload: 550) when I run devtools::check_win_devel(). 

Package is at https://github.com/dpc10ster/RJafroc <https://github.com/dpc10ster/RJafroc> on cran branch.

Thanks



	[[alternative HTML version deleted]]


From rbg @end|ng |rom vt@edu  Fri Jul 26 14:48:24 2019
From: rbg @end|ng |rom vt@edu (Robert B. Gramacy)
Date: Fri, 26 Jul 2019 08:48:24 -0400
Subject: [Rd] MKL with latest Rs
In-Reply-To: <f1be26bc-9d44-43c2-3bb3-c2f4bbcafdfa@gmail.com>
References: <CAC=0fxWBHsSvyFe4QAvk6db8YdJxB5YHUpowUoPRyNYuZku4vA@mail.gmail.com>
 <f1be26bc-9d44-43c2-3bb3-c2f4bbcafdfa@gmail.com>
Message-ID: <CAC=0fxUgMfWf8Fd9AfLw2Uu+pmad+JAAwbxh2AnjM-wH-L4HOg@mail.gmail.com>

Hi Tomas,

That does the trick, thanks!  In fact, I had those lines commented out in
my Rmkl startup script but I can't remember why, since they're part of
Intel's instructions.  Strange that things still worked for somewhat older
Rs.  (Perhaps that's why I canceled them.)

Dirk, if you're listening, it might help to add a note to your blog post.
I guess it's not as simple as "update-alternatives and done" because
environment variables still need to be set.

Cheers,
Bobby



On Fri, 26 Jul 2019 at 06:22, Tomas Kalibera <tomas.kalibera at gmail.com>
wrote:

> Dear Robert,
>
> try setting these MKL environment variables
>
> export MKL_INTERFACE_LAYER=GNU,LP64
> export MKL_THREADING_LAYER=GNU
>
> the example should then report correct results (and regardless of the
> version of R). There is no need to rebuild R from source, but when you
> are building from source, this problem would be detected by checks in R
> configure scripts. I can reproduce the problem on Ubuntu 19.04 and MKL
> installed from binaries as described in Dirk's blog, both with R 3.5.2
> and R-devel, and the problem goes away on both when the variables are set.
>
> Best
> Tomas
>
> On 7/17/19 3:18 PM, Robert B. Gramacy wrote:
> > Dear R-devel team,
> >
> > I've encountered problems with recent Rs (>= 3.5.3) and MKL.  I've
> followed
> > Dirk's (http://dirk.eddelbuettel.com/blog/2018/04/15/) and Intel's (
> >
> https://software.intel.com/en-us/articles/quick-linking-intel-mkl-blas-lapack-to-r
> )
> > instructions and many versions of MKL.  All works fine in my Ubuntu 18
> > setup for R 3.5.2 and older.  Carrying out the install and linking
> > instructions works fine for later Rs, but calculations involving linear
> > algebra become corrupted.  E.g., following Dirk's very simple svd example
> > from that link above ...
> >
> >> n <- 1e3
> >> X <- matrix(rnorm(n*n),n,n)
> >> Xsvd <- svd(X)
> >> Xsvd$d[1:5]
> > [1] 63.09366 62.47868 62.26147 61.94530 61.84727
> >
> > ... you get Eigenvalues that are bigger than 1e26 in R-devel, say, but
> > (correct) values near 60 with R 3.5.2.
> >
> > I just wanted to throw that out there in case anyone else had come across
> > something similar.  I don't mind using a slightly older R/MKL for my
> > stuff.  I might speculate that the Microsoft R Open folks are having
> > similar issues because they're still using older Rs.
> >
> > I haven't tried compiling and linking from source (
> > https://cran.r-project.org/doc/manuals/R-admin.html#MKL) because I
> haven't
> > had success with that in some time.
> >
> > -B
> >
> >       [[alternative HTML version deleted]]
> >
> > ______________________________________________
> > R-devel at r-project.org mailing list
> > https://stat.ethz.ch/mailman/listinfo/r-devel
>
>
>

	[[alternative HTML version deleted]]


