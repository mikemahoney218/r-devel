From kry|ov@r00t @end|ng |rom gm@||@com  Sun Feb  5 14:04:25 2023
From: kry|ov@r00t @end|ng |rom gm@||@com (Ivan Krylov)
Date: Sun, 5 Feb 2023 16:04:25 +0300
Subject: [Rd] R2HTML doesn't split paragraphs originating from
 \Sexpr[results=rd]
Message-ID: <20230205160425.1e35a036@Tarkus>

Hello,

Here's an example that renders correctly using Rd2txt / Rd2latex / R
CMD Rd2pdf, but has problems under Rd2HTML:

\name{foo}
\title{foo}
\section{foo}{
  This should be on a separate paragraph

  This should be on a separate paragraph

  This should be on a separate paragraph

  \Sexpr[stage=render,results=rd]{
    paste(
      rep('Sexpr: This should be on a separate paragraph', 3),
      collapse = '\n\n'
    )
  }
}

For the text I've typed manually, there are <p>...</p> tags splitting
the text separated by empty lines into paragraphs. The \Sexpr return
value only has newlines, which joints the paragraphs together:

<p>This should be on a separate paragraph
</p>
<p>This should be on a separate paragraph
</p>
<p>This should be on a separate paragraph
</p>
<p>Sexpr: This should be on a separate paragraph

Sexpr: This should be on a separate paragraph

Sexpr: This should be on a separate paragraph
</p>

addParaBreaks() is prevented from closing the paragraph tag because
tools:::isBlankLineRd() returns FALSE for blank lines produced by a
\Sexpr. This happens because utils:::getSrcByte() not 1 for these blank
lines. That, in turn, is because the source reference for \Sexpr values
is the whole \Sexpr tag:

# blank line from a \Sexpr
Rd[[3]][[2]][[9]][[2]]
# [1] "\n"
# attr(,"Rd_tag")
# [1] "TEXT"
getSrcref(Rd[[3]][[2]][[9]][[2]])
# \Sexpr[stage=render,results=rd]{
#   paste(
#     rep('Sexpr: This should be on a separate paragraph', 3),
#     collapse = '\n\n'
#   )
# }

# artisanal hand-crafted blank line
Rd[[3]][[2]][[7]]
# [1] "\n"
# attr(,"Rd_tag")
# [1] "TEXT"
summary(getSrcref(Rd[[3]][[2]][[7]]))
# <srcref: file "~/foo.Rd" chars 9:1 to 9:1>

I think I understand that tools:::isBlankLineRd requires
utils:::getSrcByte(x) == 1L because it may be called on things like
"\\eqn{0}\n" where the terminal "\n" might otherwise be considered a
"blank line". How to reconcile isBlankLineRd with blank lines not
directly originating from Rd source?

Rd2latex might have a similar problem (its addParaBreaks() checks for
isBlankLineRd()), but then it works anyway because Rd rules for
paragraph breaks on blank lines are the same as in LaTeX.

-- 
Best regards,
Ivan


From @nto|ne@|@br| @end|ng |rom gm@||@com  Mon Feb  6 15:42:51 2023
From: @nto|ne@|@br| @end|ng |rom gm@||@com (Antoine Fabri)
Date: Mon, 6 Feb 2023 15:42:51 +0100
Subject: [Rd] Unnecessary note when import only used in arg definition
Message-ID: <CAEKh8ujzyH=Lhd49yc58=1Q4MxiGbjFpfQ13Rp+dEUQFA0Yr8g@mail.gmail.com>

Dear r-devel,

When a package is only used in an argument definition, e.g :


f <- function(test = testthat::is_testing()) {

  if (test) 1 else 2

}


R CMD CHECK gives us a note: "Namespace in Imports field not imported from:
'testthat'"


This incites me to remove the package from the Imports field but that'll
make my package brittle.


I noted I'm not the first one having the issue (
https://github.com/r-lib/devtools/issues/2456 ) and I've seen some
workarounds too, in particular Hadley Wickham suggests in 'R packages' to
use the following construct :


ignore_unused_imports <- *function*() {

  aaapkg::aaa_fun

}


That's far from obvious though, and not very satisfying.

Are there any downside to removing this note in this scenario? it makes
little sense to me and incites wrong behaviour AFAIU.


Thanks,


Antoine

	[[alternative HTML version deleted]]


From kev|nu@hey @end|ng |rom gm@||@com  Mon Feb  6 19:03:07 2023
From: kev|nu@hey @end|ng |rom gm@||@com (Kevin Ushey)
Date: Mon, 6 Feb 2023 10:03:07 -0800
Subject: [Rd] Unnecessary note when import only used in arg definition
In-Reply-To: <CAEKh8ujzyH=Lhd49yc58=1Q4MxiGbjFpfQ13Rp+dEUQFA0Yr8g@mail.gmail.com>
References: <CAEKh8ujzyH=Lhd49yc58=1Q4MxiGbjFpfQ13Rp+dEUQFA0Yr8g@mail.gmail.com>
Message-ID: <CAJXgQP0NhMQYRNqy8SfS4jN-kcVKFinJG4bxfROX_BEbBt5L+Q@mail.gmail.com>

Hi Antoine,

Maybe I'm misunderstanding, but I think the warning is saying that
you've declared the package dependency in the DESCRIPTION file, but
you haven't actually imported the package (or any functions) in your
package NAMESPACE file?

I put together an example package that I think satisfies the point
you're describing, and I don't see any R CMD check warnings (using R
4.2.2).

https://github.com/kevinushey/imports.example

As I understand it, if you declare a package dependency in the
DESCRIPTION file, you need to clarify how you're using the package in
the NAMESPACE file -- e.g. what symbols you want to import, and so on.

Best,
Kevin

On Mon, Feb 6, 2023 at 6:43 AM Antoine Fabri <antoine.fabri at gmail.com> wrote:
>
> Dear r-devel,
>
> When a package is only used in an argument definition, e.g :
>
>
> f <- function(test = testthat::is_testing()) {
>
>   if (test) 1 else 2
>
> }
>
>
> R CMD CHECK gives us a note: "Namespace in Imports field not imported from:
> 'testthat'"
>
>
> This incites me to remove the package from the Imports field but that'll
> make my package brittle.
>
>
> I noted I'm not the first one having the issue (
> https://github.com/r-lib/devtools/issues/2456 ) and I've seen some
> workarounds too, in particular Hadley Wickham suggests in 'R packages' to
> use the following construct :
>
>
> ignore_unused_imports <- *function*() {
>
>   aaapkg::aaa_fun
>
> }
>
>
> That's far from obvious though, and not very satisfying.
>
> Are there any downside to removing this note in this scenario? it makes
> little sense to me and incites wrong behaviour AFAIU.
>
>
> Thanks,
>
>
> Antoine
>
>         [[alternative HTML version deleted]]
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From murdoch@dunc@n @end|ng |rom gm@||@com  Mon Feb  6 19:59:27 2023
From: murdoch@dunc@n @end|ng |rom gm@||@com (Duncan Murdoch)
Date: Mon, 6 Feb 2023 13:59:27 -0500
Subject: [Rd] Unnecessary note when import only used in arg definition
In-Reply-To: <CAJXgQP0NhMQYRNqy8SfS4jN-kcVKFinJG4bxfROX_BEbBt5L+Q@mail.gmail.com>
References: <CAEKh8ujzyH=Lhd49yc58=1Q4MxiGbjFpfQ13Rp+dEUQFA0Yr8g@mail.gmail.com>
 <CAJXgQP0NhMQYRNqy8SfS4jN-kcVKFinJG4bxfROX_BEbBt5L+Q@mail.gmail.com>
Message-ID: <e02220d8-9806-09dd-aee3-665479704d6d@gmail.com>

I think the usual rule is that a qualified use of a package is 
sufficient to suppress the warning without any entry in the NAMESPACE 
file.  So if there isn't something else going on, Antoine's example 
illustrates a bug (or at least an inconsistency) in the check code.

Here's a version of your example that doesn't import anything from rlang 
using the NAMESPACE, but uses it in code:

   https://github.com/dmurdoch/imports.example/tree/explicituse

And here's one like Antoine's, where the only use is in a default value:

   https://github.com/dmurdoch/imports.example/tree/defaultvalue

The first one tests clean, the second one gives the note he was talking 
about:

  ? checking dependencies in R code ... NOTE
    Namespace in Imports field not imported from: ?rlang?
      All declared Imports should be used.

Duncan

On 06/02/2023 1:03 p.m., Kevin Ushey wrote:
> Hi Antoine,
> 
> Maybe I'm misunderstanding, but I think the warning is saying that
> you've declared the package dependency in the DESCRIPTION file, but
> you haven't actually imported the package (or any functions) in your
> package NAMESPACE file?
> 
> I put together an example package that I think satisfies the point
> you're describing, and I don't see any R CMD check warnings (using R
> 4.2.2).
> 
> https://github.com/kevinushey/imports.example
> 
> As I understand it, if you declare a package dependency in the
> DESCRIPTION file, you need to clarify how you're using the package in
> the NAMESPACE file -- e.g. what symbols you want to import, and so on.
> 
> Best,
> Kevin
> 
> On Mon, Feb 6, 2023 at 6:43 AM Antoine Fabri <antoine.fabri at gmail.com> wrote:
>>
>> Dear r-devel,
>>
>> When a package is only used in an argument definition, e.g :
>>
>>
>> f <- function(test = testthat::is_testing()) {
>>
>>    if (test) 1 else 2
>>
>> }
>>
>>
>> R CMD CHECK gives us a note: "Namespace in Imports field not imported from:
>> 'testthat'"
>>
>>
>> This incites me to remove the package from the Imports field but that'll
>> make my package brittle.
>>
>>
>> I noted I'm not the first one having the issue (
>> https://github.com/r-lib/devtools/issues/2456 ) and I've seen some
>> workarounds too, in particular Hadley Wickham suggests in 'R packages' to
>> use the following construct :
>>
>>
>> ignore_unused_imports <- *function*() {
>>
>>    aaapkg::aaa_fun
>>
>> }
>>
>>
>> That's far from obvious though, and not very satisfying.
>>
>> Are there any downside to removing this note in this scenario? it makes
>> little sense to me and incites wrong behaviour AFAIU.
>>
>>
>> Thanks,
>>
>>
>> Antoine
>>
>>          [[alternative HTML version deleted]]
>>
>> ______________________________________________
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From murdoch@dunc@n @end|ng |rom gm@||@com  Mon Feb  6 20:31:31 2023
From: murdoch@dunc@n @end|ng |rom gm@||@com (Duncan Murdoch)
Date: Mon, 6 Feb 2023 14:31:31 -0500
Subject: [Rd] Unnecessary note when import only used in arg definition
In-Reply-To: <e02220d8-9806-09dd-aee3-665479704d6d@gmail.com>
References: <CAEKh8ujzyH=Lhd49yc58=1Q4MxiGbjFpfQ13Rp+dEUQFA0Yr8g@mail.gmail.com>
 <CAJXgQP0NhMQYRNqy8SfS4jN-kcVKFinJG4bxfROX_BEbBt5L+Q@mail.gmail.com>
 <e02220d8-9806-09dd-aee3-665479704d6d@gmail.com>
Message-ID: <3f099c2c-9b6c-f5f8-5e3e-c7d656be95de@gmail.com>

On 06/02/2023 1:59 p.m., Duncan Murdoch wrote:
> I think the usual rule is that a qualified use of a package is
> sufficient to suppress the warning without any entry in the NAMESPACE
> file.  So if there isn't something else going on, Antoine's example
> illustrates a bug (or at least an inconsistency) in the check code.

Here's where the problem arises:

https://github.com/r-devel/r-svn/blob/7a2207dad15b8eed8c3d1c5cc49f29d431c289bd/src/library/tools/R/QC.R#L2105

with code

   if(is.call(e) || is.expression(e)) {

While examining a function definition, the arguments are stored in a 
pairlist.  The test is looking for a call or an expression, and a 
pairlist isn't any of those, so it skips over it.  I think it would work 
properly if that line was changed to

   if(is.call(e) || is.expression(e) || is.pairlist(e)) {

because then it would iterate over the arguments, and would find the use 
of a package in a default value.

Duncan Murdoch

> 
> Here's a version of your example that doesn't import anything from rlang
> using the NAMESPACE, but uses it in code:
> 
>     https://github.com/dmurdoch/imports.example/tree/explicituse
> 
> And here's one like Antoine's, where the only use is in a default value:
> 
>     https://github.com/dmurdoch/imports.example/tree/defaultvalue
> 
> The first one tests clean, the second one gives the note he was talking
> about:
> 
>    ? checking dependencies in R code ... NOTE
>      Namespace in Imports field not imported from: ?rlang?
>        All declared Imports should be used.
> 
> Duncan
> 
> On 06/02/2023 1:03 p.m., Kevin Ushey wrote:
>> Hi Antoine,
>>
>> Maybe I'm misunderstanding, but I think the warning is saying that
>> you've declared the package dependency in the DESCRIPTION file, but
>> you haven't actually imported the package (or any functions) in your
>> package NAMESPACE file?
>>
>> I put together an example package that I think satisfies the point
>> you're describing, and I don't see any R CMD check warnings (using R
>> 4.2.2).
>>
>> https://github.com/kevinushey/imports.example
>>
>> As I understand it, if you declare a package dependency in the
>> DESCRIPTION file, you need to clarify how you're using the package in
>> the NAMESPACE file -- e.g. what symbols you want to import, and so on.
>>
>> Best,
>> Kevin
>>
>> On Mon, Feb 6, 2023 at 6:43 AM Antoine Fabri <antoine.fabri at gmail.com> wrote:
>>>
>>> Dear r-devel,
>>>
>>> When a package is only used in an argument definition, e.g :
>>>
>>>
>>> f <- function(test = testthat::is_testing()) {
>>>
>>>     if (test) 1 else 2
>>>
>>> }
>>>
>>>
>>> R CMD CHECK gives us a note: "Namespace in Imports field not imported from:
>>> 'testthat'"
>>>
>>>
>>> This incites me to remove the package from the Imports field but that'll
>>> make my package brittle.
>>>
>>>
>>> I noted I'm not the first one having the issue (
>>> https://github.com/r-lib/devtools/issues/2456 ) and I've seen some
>>> workarounds too, in particular Hadley Wickham suggests in 'R packages' to
>>> use the following construct :
>>>
>>>
>>> ignore_unused_imports <- *function*() {
>>>
>>>     aaapkg::aaa_fun
>>>
>>> }
>>>
>>>
>>> That's far from obvious though, and not very satisfying.
>>>
>>> Are there any downside to removing this note in this scenario? it makes
>>> little sense to me and incites wrong behaviour AFAIU.
>>>
>>>
>>> Thanks,
>>>
>>>
>>> Antoine
>>>
>>>           [[alternative HTML version deleted]]
>>>
>>> ______________________________________________
>>> R-devel at r-project.org mailing list
>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>
>> ______________________________________________
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel
>


From murdoch@dunc@n @end|ng |rom gm@||@com  Mon Feb  6 21:47:16 2023
From: murdoch@dunc@n @end|ng |rom gm@||@com (Duncan Murdoch)
Date: Mon, 6 Feb 2023 15:47:16 -0500
Subject: [Rd] Unnecessary note when import only used in arg definition
In-Reply-To: <3f099c2c-9b6c-f5f8-5e3e-c7d656be95de@gmail.com>
References: <CAEKh8ujzyH=Lhd49yc58=1Q4MxiGbjFpfQ13Rp+dEUQFA0Yr8g@mail.gmail.com>
 <CAJXgQP0NhMQYRNqy8SfS4jN-kcVKFinJG4bxfROX_BEbBt5L+Q@mail.gmail.com>
 <e02220d8-9806-09dd-aee3-665479704d6d@gmail.com>
 <3f099c2c-9b6c-f5f8-5e3e-c7d656be95de@gmail.com>
Message-ID: <62b0a67b-2ce1-5adf-783b-0b462b8f7490@gmail.com>

On 06/02/2023 2:31 p.m., Duncan Murdoch wrote:
> On 06/02/2023 1:59 p.m., Duncan Murdoch wrote:
>> I think the usual rule is that a qualified use of a package is
>> sufficient to suppress the warning without any entry in the NAMESPACE
>> file.  So if there isn't something else going on, Antoine's example
>> illustrates a bug (or at least an inconsistency) in the check code.
> 
> Here's where the problem arises:
> 
> https://github.com/r-devel/r-svn/blob/7a2207dad15b8eed8c3d1c5cc49f29d431c289bd/src/library/tools/R/QC.R#L2105

Whoops, I think that's the wrong location.  I think this is the right one:

 
https://github.com/r-devel/r-svn/blob/7a2207dad15b8eed8c3d1c5cc49f29d431c289bd/src/library/tools/R/QC.R#L5754

There are two similar functions in that big source file.

Duncan Murdoch

> with code
> 
>     if(is.call(e) || is.expression(e)) {
> 
> While examining a function definition, the arguments are stored in a
> pairlist.  The test is looking for a call or an expression, and a
> pairlist isn't any of those, so it skips over it.  I think it would work
> properly if that line was changed to
> 
>     if(is.call(e) || is.expression(e) || is.pairlist(e)) {
> 
> because then it would iterate over the arguments, and would find the use
> of a package in a default value.
> 
> Duncan Murdoch
> 
>>
>> Here's a version of your example that doesn't import anything from rlang
>> using the NAMESPACE, but uses it in code:
>>
>>      https://github.com/dmurdoch/imports.example/tree/explicituse
>>
>> And here's one like Antoine's, where the only use is in a default value:
>>
>>      https://github.com/dmurdoch/imports.example/tree/defaultvalue
>>
>> The first one tests clean, the second one gives the note he was talking
>> about:
>>
>>     ? checking dependencies in R code ... NOTE
>>       Namespace in Imports field not imported from: ?rlang?
>>         All declared Imports should be used.
>>
>> Duncan
>>
>> On 06/02/2023 1:03 p.m., Kevin Ushey wrote:
>>> Hi Antoine,
>>>
>>> Maybe I'm misunderstanding, but I think the warning is saying that
>>> you've declared the package dependency in the DESCRIPTION file, but
>>> you haven't actually imported the package (or any functions) in your
>>> package NAMESPACE file?
>>>
>>> I put together an example package that I think satisfies the point
>>> you're describing, and I don't see any R CMD check warnings (using R
>>> 4.2.2).
>>>
>>> https://github.com/kevinushey/imports.example
>>>
>>> As I understand it, if you declare a package dependency in the
>>> DESCRIPTION file, you need to clarify how you're using the package in
>>> the NAMESPACE file -- e.g. what symbols you want to import, and so on.
>>>
>>> Best,
>>> Kevin
>>>
>>> On Mon, Feb 6, 2023 at 6:43 AM Antoine Fabri <antoine.fabri at gmail.com> wrote:
>>>>
>>>> Dear r-devel,
>>>>
>>>> When a package is only used in an argument definition, e.g :
>>>>
>>>>
>>>> f <- function(test = testthat::is_testing()) {
>>>>
>>>>      if (test) 1 else 2
>>>>
>>>> }
>>>>
>>>>
>>>> R CMD CHECK gives us a note: "Namespace in Imports field not imported from:
>>>> 'testthat'"
>>>>
>>>>
>>>> This incites me to remove the package from the Imports field but that'll
>>>> make my package brittle.
>>>>
>>>>
>>>> I noted I'm not the first one having the issue (
>>>> https://github.com/r-lib/devtools/issues/2456 ) and I've seen some
>>>> workarounds too, in particular Hadley Wickham suggests in 'R packages' to
>>>> use the following construct :
>>>>
>>>>
>>>> ignore_unused_imports <- *function*() {
>>>>
>>>>      aaapkg::aaa_fun
>>>>
>>>> }
>>>>
>>>>
>>>> That's far from obvious though, and not very satisfying.
>>>>
>>>> Are there any downside to removing this note in this scenario? it makes
>>>> little sense to me and incites wrong behaviour AFAIU.
>>>>
>>>>
>>>> Thanks,
>>>>
>>>>
>>>> Antoine
>>>>
>>>>            [[alternative HTML version deleted]]
>>>>
>>>> ______________________________________________
>>>> R-devel at r-project.org mailing list
>>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>>
>>> ______________________________________________
>>> R-devel at r-project.org mailing list
>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>
>


From murdoch@dunc@n @end|ng |rom gm@||@com  Tue Feb  7 16:22:17 2023
From: murdoch@dunc@n @end|ng |rom gm@||@com (Duncan Murdoch)
Date: Tue, 7 Feb 2023 10:22:17 -0500
Subject: [Rd] Unnecessary note when import only used in arg definition
In-Reply-To: <CAEKh8ujzyH=Lhd49yc58=1Q4MxiGbjFpfQ13Rp+dEUQFA0Yr8g@mail.gmail.com>
References: <CAEKh8ujzyH=Lhd49yc58=1Q4MxiGbjFpfQ13Rp+dEUQFA0Yr8g@mail.gmail.com>
Message-ID: <c1d26ab3-55ae-b8ba-0a5d-ff7454d94db5@gmail.com>

I've submitted a bug report 
(https://bugs.r-project.org/show_bug.cgi?id=18465) about this, along 
with a patch to fix it.

Duncan Murdoch

On 06/02/2023 9:42 a.m., Antoine Fabri wrote:
> Dear r-devel,
> 
> When a package is only used in an argument definition, e.g :
> 
> 
> f <- function(test = testthat::is_testing()) {
> 
>    if (test) 1 else 2
> 
> }
> 
> 
> R CMD CHECK gives us a note: "Namespace in Imports field not imported from:
> 'testthat'"
> 
> 
> This incites me to remove the package from the Imports field but that'll
> make my package brittle.
> 
> 
> I noted I'm not the first one having the issue (
> https://github.com/r-lib/devtools/issues/2456 ) and I've seen some
> workarounds too, in particular Hadley Wickham suggests in 'R packages' to
> use the following construct :
> 
> 
> ignore_unused_imports <- *function*() {
> 
>    aaapkg::aaa_fun
> 
> }
> 
> 
> That's far from obvious though, and not very satisfying.
> 
> Are there any downside to removing this note in this scenario? it makes
> little sense to me and incites wrong behaviour AFAIU.
> 
> 
> Thanks,
> 
> 
> Antoine
> 
> 	[[alternative HTML version deleted]]
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From c@@rd|@g@bor @end|ng |rom gm@||@com  Wed Feb  8 01:13:54 2023
From: c@@rd|@g@bor @end|ng |rom gm@||@com (=?UTF-8?B?R8OhYm9yIENzw6FyZGk=?=)
Date: Wed, 8 Feb 2023 01:13:54 +0100
Subject: [Rd] Compiling R-devel on older Linux distributions,
 e.g. RHEL / CentOS 7
Message-ID: <CABtg=KnOdkTL1L3wK=Q7D1vi6ubOz=1vM0r2TY_W498h_HxUqg@mail.gmail.com>

As preparation for the next release, I am trying to compile R devel on
RHEL / CentOS 7, which is still supported by RedHat until 2024 June.
There are two issues.

One is that the libcurl version in CentOS 7 is quite old, 7.29.0, and
R devel now requires 7.32.0, since 83715 about a week ago. This
requirement is here to stay for R 4.3.0, right?

The second is that the recommended packages are now installed with R
CMD INSTALL --use-C17, which fails on CentOS 7 with

begin installing recommended package MASS
* installing *source* package 'MASS' ...
** package 'MASS' successfully unpacked and MD5 sums checked
** using non-staged installation
** libs
Error: C17 standard requested but CC17 is not defined
* removing '/root/R-devel/library/MASS'

CentOS 7 has GCC 4.8.5, which does not have a -std=gnu17 option.
However the commit message of this change in commit 83566 hints that
this requirement might be temporary. Hence my questions.

Is the C17 requirement temporary or it will be a requirement for R 4.3.0?
Should I expect any problems if I remove the --use-C17 flag for
installing the recommended packages?

There are a lot of R users still on RHEL 7, so it would be great to
know what to expect for the next release.

Thank you,
G?bor


