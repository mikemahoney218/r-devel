From Friedrich.Leisch at stat.uni-muenchen.de  Mon Aug 28 15:33:46 2006
From: Friedrich.Leisch at stat.uni-muenchen.de (Friedrich Leisch)
Date: Mon, 28 Aug 2006 15:33:46 +0200
Subject: [Rd] [Bioc-devel] Sweave windows style path (was Re: texmf
 error on 7 packages on devel winXP build nodes)
In-Reply-To: <6phzmdqdyqb.fsf@gopher4.fhcrc.org>
References: <6.2.5.6.1.20060827184815.02173e80@wehi.edu.au>
	<6phzmdqdyqb.fsf@gopher4.fhcrc.org>
Message-ID: <17650.61626.320652.905103@galadriel.ci.tuwien.ac.at>

>>>>> On Sun, 27 Aug 2006 07:45:00 -0700,
>>>>> Martin Morgan (MM) wrote:

  > [A build system misconfiguration at Bioconductor lead to a discussion
  > about whether \usepackage{Sweave} should be included in .Rnw
  > documents. Leaving this line out causes a problem on Windows, as
  > indicated below.]

  > I think the problem is '~', which should, according to Donald
  > Arseneau's comment in this thread

  > http://groups.google.com/group/comp.text.tex/browse_thread/thread/640e89078d0697c4/5b6f9fc6b0da21bf?lnk=gst&q=windows+file+path&rnum=4#5b6f9fc6b0da21bf

  > be \string~. If this is the correct change, perhaps an upstream fix
  > could be introduced in src/library/util/R/Sweave.R.

Sorry to join in late, I am currently at a conference with limited
access to the Internet. I am not su sure how easy it is to make the
conversion, i.e. if it is save to unconditionally change all tildes in
the path as suggested above. Does anybody have any experience wether
that is save on all platforms and TeX installations?

Personally I think it would make a lot of sense if the Bioconductor
check machines could include a version of RHOME/share/texmf in their
TeX input path ... that would also allow to use Rd.sty etc.

Otherwise most of what has been said in this thread is true: The full
path is inserted into the document by Sweave such that you donnot have
to copy something from RHOME to your tex installation every time you
install a new version of R.

On Unix it is easy: Put /usr/local/lib/R/share/texmf (or wherever you
typically install your default R) into your tex path and you are
done. On windows the normal R installation path contains the version
number, so this will fail. Hence I did the path thing in R as a
convenience for authors (and to make sure that R version and
Sweave.sty are consistent, but the .sty is pretty stable anyway).

Maybe the installer could/should create

	c:\programme\R\R-latest

as a link to the newest installed version?

Just a thought.

Best,
Fritz



From Beyerj at students.uni-marburg.de  Mon Aug 28 15:55:48 2006
From: Beyerj at students.uni-marburg.de (J=?ISO-8859-1?B?9g==?=rg Beyer)
Date: Mon, 28 Aug 2006 15:55:48 +0200
Subject: [Rd] S4 classes and objects -- fixed structure? No...
Message-ID: <C118C284.19D3%Beyerj@students.uni-marburg.de>

Hello.

Suppose you define a new S4-class, say
>  setClass("track", representation(x="numeric", y="numeric"))

Don't worry if you have a deja vu, it's from the help page.
Your new class is said to have a fixed structure: two slots, x, and y,
and that should apply to all objects you construct as members of that class.
>  tr <- new( "track" )

Now do the following:
>  tr[ "ping" ] <- "pong"
>  tr$bingo <- "bongo"
>  tr[[ "blaa" ]] <- c( 200, 300 )

Of course you can use the well known operators to access these "list entries
in a S4-class object":
>  tr[ "blaa" ]
>  etc. 

You see what can happen if you decide to do a bit stress testing. The
question is not whether my examples makes sense or not. The question is if
these examples should be possible at all.
I wonder which is true,
-- the theory (Chambers, 1998, p. 279ff; Venables and Ripley, 2000, p. 99ff:
"... All objects in a [S4] class must have the same structure. ..."; etc.)
-- or the actual implementation in R (see my example, which successfully
violates the design principles of the language)

Bug, or feature? Any clarifications are appreciated -- it may be my
half-cooked knowledge that I find this confusing and dangerous.

Best 

Joerg Beyer

P.S.: 
Oh, the specs: PowerMac G4/400 PCI -- 1GB RAM -- Mac OS X 10.4.6 -- R 2.2.1



From ggrothendieck at gmail.com  Mon Aug 28 16:08:53 2006
From: ggrothendieck at gmail.com (Gabor Grothendieck)
Date: Mon, 28 Aug 2006 10:08:53 -0400
Subject: [Rd] S4 classes and objects -- fixed structure? No...
In-Reply-To: <C118C284.19D3%Beyerj@students.uni-marburg.de>
References: <C118C284.19D3%Beyerj@students.uni-marburg.de>
Message-ID: <971536df0608280708w3580b855nf76b45b0807931ae@mail.gmail.com>

Under R 2.3.1 these work as you indicate but under R 2.4.0
they all give errors:

>  setClass("track", representation(x="numeric", y="numeric"))
[1] "track"
>  tr <- new( "track" )
>  tr[ "ping" ] <- "pong"
Error in "[<-"(`*tmp*`, "ping", value = "pong") :
        object is not subsettable
>  tr$bingo <- "bongo"
Error: cannot coerce type S4 to list vector
In addition: Warning message:
Coercing LHS to a list
>  tr[[ "blaa" ]] <- c( 200, 300 )
Error in "[[<-"(`*tmp*`, "blaa", value = c(200, 300)) :
        object is not subsettable
>  tr[ "blaa" ]
Error in tr["blaa"] : object is not subsettable
> R.version.string
[1] "R version 2.4.0 Under development (unstable) (2006-08-08 r38825)"


On 8/28/06, J?rg Beyer <Beyerj at students.uni-marburg.de> wrote:
> Hello.
>
> Suppose you define a new S4-class, say
> >  setClass("track", representation(x="numeric", y="numeric"))
>
> Don't worry if you have a deja vu, it's from the help page.
> Your new class is said to have a fixed structure: two slots, x, and y,
> and that should apply to all objects you construct as members of that class.
> >  tr <- new( "track" )
>
> Now do the following:
> >  tr[ "ping" ] <- "pong"
> >  tr$bingo <- "bongo"
> >  tr[[ "blaa" ]] <- c( 200, 300 )
>
> Of course you can use the well known operators to access these "list entries
> in a S4-class object":
> >  tr[ "blaa" ]
> >  etc.
>
> You see what can happen if you decide to do a bit stress testing. The
> question is not whether my examples makes sense or not. The question is if
> these examples should be possible at all.
> I wonder which is true,
> -- the theory (Chambers, 1998, p. 279ff; Venables and Ripley, 2000, p. 99ff:
> "... All objects in a [S4] class must have the same structure. ..."; etc.)
> -- or the actual implementation in R (see my example, which successfully
> violates the design principles of the language)
>
> Bug, or feature? Any clarifications are appreciated -- it may be my
> half-cooked knowledge that I find this confusing and dangerous.
>
> Best
>
> Joerg Beyer
>
> P.S.:
> Oh, the specs: PowerMac G4/400 PCI -- 1GB RAM -- Mac OS X 10.4.6 -- R 2.2.1
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>



From ripley at stats.ox.ac.uk  Mon Aug 28 16:10:21 2006
From: ripley at stats.ox.ac.uk (Prof Brian Ripley)
Date: Mon, 28 Aug 2006 15:10:21 +0100 (BST)
Subject: [Rd] [Bioc-devel] Sweave windows style path (was Re: texmf
 error on 7 packages on devel winXP build nodes)
In-Reply-To: <17650.61626.320652.905103@galadriel.ci.tuwien.ac.at>
References: <6.2.5.6.1.20060827184815.02173e80@wehi.edu.au>
	<6phzmdqdyqb.fsf@gopher4.fhcrc.org>
	<17650.61626.320652.905103@galadriel.ci.tuwien.ac.at>
Message-ID: <Pine.LNX.4.64.0608281501200.652@gannet.stats.ox.ac.uk>

> Maybe the installer could/should create
>
>       c:\programme\R\R-latest
>
> as a link to the newest installed version?

Not on an OS without links ....

I think having the correct TeX path is the user's responsibility, and 
suggest Sweave stops trying to be helpful.  There is no guarantee that the 
path you find will be a valid TeX string on any OS (there are plenty of 
possible exceptions on a Unix-alike, so it is not a Windows-specific 
problem).

-- 
Brian D. Ripley,                  ripley at stats.ox.ac.uk
Professor of Applied Statistics,  http://www.stats.ox.ac.uk/~ripley/
University of Oxford,             Tel:  +44 1865 272861 (self)
1 South Parks Road,                     +44 1865 272866 (PA)
Oxford OX1 3TG, UK                Fax:  +44 1865 272595



From rdpeng at gmail.com  Mon Aug 28 16:13:29 2006
From: rdpeng at gmail.com (Roger D. Peng)
Date: Mon, 28 Aug 2006 10:13:29 -0400
Subject: [Rd] S4 classes and objects -- fixed structure? No...
In-Reply-To: <C118C284.19D3%Beyerj@students.uni-marburg.de>
References: <C118C284.19D3%Beyerj@students.uni-marburg.de>
Message-ID: <44F2FA09.4020703@gmail.com>

I think you're right---this shouldn't happen in theory, but it does because of 
the internal representation of S4 objects in R.

In R devel (to be 2.4.0), this changes and I believe your example will no longer 
work.

-roger

J?rg Beyer wrote:
> Hello.
> 
> Suppose you define a new S4-class, say
>>  setClass("track", representation(x="numeric", y="numeric"))
> 
> Don't worry if you have a deja vu, it's from the help page.
> Your new class is said to have a fixed structure: two slots, x, and y,
> and that should apply to all objects you construct as members of that class.
>>  tr <- new( "track" )
> 
> Now do the following:
>>  tr[ "ping" ] <- "pong"
>>  tr$bingo <- "bongo"
>>  tr[[ "blaa" ]] <- c( 200, 300 )
> 
> Of course you can use the well known operators to access these "list entries
> in a S4-class object":
>>  tr[ "blaa" ]
>>  etc. 
> 
> You see what can happen if you decide to do a bit stress testing. The
> question is not whether my examples makes sense or not. The question is if
> these examples should be possible at all.
> I wonder which is true,
> -- the theory (Chambers, 1998, p. 279ff; Venables and Ripley, 2000, p. 99ff:
> "... All objects in a [S4] class must have the same structure. ..."; etc.)
> -- or the actual implementation in R (see my example, which successfully
> violates the design principles of the language)
> 
> Bug, or feature? Any clarifications are appreciated -- it may be my
> half-cooked knowledge that I find this confusing and dangerous.
> 
> Best 
> 
> Joerg Beyer
> 
> P.S.: 
> Oh, the specs: PowerMac G4/400 PCI -- 1GB RAM -- Mac OS X 10.4.6 -- R 2.2.1
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
> 

-- 
Roger D. Peng  |  http://www.biostat.jhsph.edu/~rpeng/



From martin.becker at mx.uni-saarland.de  Mon Aug 28 16:23:52 2006
From: martin.becker at mx.uni-saarland.de (Martin Becker)
Date: Mon, 28 Aug 2006 16:23:52 +0200
Subject: [Rd] Speed of runif() on different Operating Systems
Message-ID: <44F2FC78.3040106@mx.uni-saarland.de>

Dear list,

I have noticed surprisingly big performance differences of runif() 
between Windows XP and (Debian) linux on similar CPUs (Pentium D 3.0GHz 
(WinXP)/3.2GHz (Linux)) and I wonder if there is a simple explanation 
for the difference.
On a linux system (with a slightly better CPU and 1GB more RAM), 
execution of runif() seems to consume about 80% more CPU time than on a 
Windows XP system.
On a Xeon 2.7GHz (Debian) linux I have checked, that using the .deb - 
i386 - Version of R instead of a self-build i686 - version has no 
noticeable effect on speed.
Measuring CPU time with Rprof() instead of Sys.time()-differences yields 
similar results.

Any hint is appreciated, please let me know, if the given information on 
system/OS or the R output below is not sufficient.

Regards,

  Martin Becker

------------------------ R - Output  below ------------------------

Windows XP: (Pentium D, 3.0 GHz)

 > version
               _                        
platform       i386-pc-mingw32          
arch           i386                     
os             mingw32                  
system         i386, mingw32            
status                                  
major          2                        
minor          3.1                      
year           2006                     
month          06                       
day            01                       
svn rev        38247                    
language       R                        
version.string Version 2.3.1 (2006-06-01)
 > RNGkind()
[1] "Mersenne-Twister" "Inversion"      
 > t1<-Sys.time();for (i in 1:500) ttt<-runif(1000000);print(Sys.time()-t1);
Time difference of 57.969 secs
 >

Debian Linux: (Pentium D, 3.2GHz)

 > version
               _                        
platform       i686-pc-linux-gnu        
arch           i686                     
os             linux-gnu                
system         i686, linux-gnu          
status                                  
major          2                        
minor          3.1                      
year           2006                     
month          06                       
day            01                       
svn rev        38247                    
language       R                        
version.string Version 2.3.1 (2006-06-01)
 > RNGkind()
[1] "Mersenne-Twister" "Inversion"      
 > t1<-Sys.time();for (i in 1:500) 
ttt<-runif(1000000);print(Sys.time()-t1);    
Time difference of 1.752916 mins
 >



From Beyerj at students.uni-marburg.de  Mon Aug 28 16:26:31 2006
From: Beyerj at students.uni-marburg.de (J=?ISO-8859-1?B?9g==?=rg Beyer)
Date: Mon, 28 Aug 2006 16:26:31 +0200
Subject: [Rd] S4 classes and objects -- fixed structure? No...
In-Reply-To: <971536df0608280708w3580b855nf76b45b0807931ae@mail.gmail.com>
Message-ID: <C118C9B7.19D9%Beyerj@students.uni-marburg.de>

Gabor, Roger, 

thanks a lot for your immediate answers.
Knowing that this is subject to change means a lot less coding for me :-)
Good news ... for me, and first of all for the impressing S4 system.

Thanks again

Joerg



Am 28.08.2006 16:08 Uhr schrieb Gabor Grothendieck
(<ggrothendieck at gmail.com>):

> Under R 2.3.1 these work as you indicate but under R 2.4.0
> they all give errors:
> 
>>  setClass("track", representation(x="numeric", y="numeric"))
> [1] "track"
>>  tr <- new( "track" )
>>  tr[ "ping" ] <- "pong"
> Error in "[<-"(`*tmp*`, "ping", value = "pong") :
>         object is not subsettable
>>  tr$bingo <- "bongo"
> Error: cannot coerce type S4 to list vector
> In addition: Warning message:
> Coercing LHS to a list
>>  tr[[ "blaa" ]] <- c( 200, 300 )
> Error in "[[<-"(`*tmp*`, "blaa", value = c(200, 300)) :
>         object is not subsettable
>>  tr[ "blaa" ]
> Error in tr["blaa"] : object is not subsettable
>> R.version.string
> [1] "R version 2.4.0 Under development (unstable) (2006-08-08 r38825)"
> 
> 
> On 8/28/06, J?rg Beyer <Beyerj at students.uni-marburg.de> wrote:
>> Hello.
>> 
>> Suppose you define a new S4-class, say
>>>  setClass("track", representation(x="numeric", y="numeric"))
>> 
>> Don't worry if you have a deja vu, it's from the help page.
>> Your new class is said to have a fixed structure: two slots, x, and y,
>> and that should apply to all objects you construct as members of that class.
>>>  tr <- new( "track" )
>> 
>> Now do the following:
>>>  tr[ "ping" ] <- "pong"
>>>  tr$bingo <- "bongo"
>>>  tr[[ "blaa" ]] <- c( 200, 300 )
>> 
>> Of course you can use the well known operators to access these "list entries
>> in a S4-class object":
>>>  tr[ "blaa" ]
>>>  etc.
>> 
>> You see what can happen if you decide to do a bit stress testing. The
>> question is not whether my examples makes sense or not. The question is if
>> these examples should be possible at all.
>> I wonder which is true,
>> -- the theory (Chambers, 1998, p. 279ff; Venables and Ripley, 2000, p. 99ff:
>> "... All objects in a [S4] class must have the same structure. ..."; etc.)
>> -- or the actual implementation in R (see my example, which successfully
>> violates the design principles of the language)
>> 
>> Bug, or feature? Any clarifications are appreciated -- it may be my
>> half-cooked knowledge that I find this confusing and dangerous.
>> 
>> Best
>> 
>> Joerg Beyer
>> 
>> P.S.:
>> Oh, the specs: PowerMac G4/400 PCI -- 1GB RAM -- Mac OS X 10.4.6 -- R 2.2.1
>> 
>> ______________________________________________
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>



From Roy.Mendelssohn at noaa.gov  Mon Aug 28 17:02:23 2006
From: Roy.Mendelssohn at noaa.gov (Roy Mendelssohn)
Date: Mon, 28 Aug 2006 08:02:23 -0700
Subject: [Rd] Adding OPeNDAP to the ncdf package on windows
Message-ID: <p06230901c118b5deca29@[161.55.17.194]>

Hi:

Russ Moffit of our Honolulu Lab has made a modification to the R 
netcdf package  'ncdf' so that it can access remote netcdf files 
using OPenDAP  (http://www.opendap.org). The package works on Linux, 
and with help from Don MacQueen was also ported to Macintosh OS X.

We have had a lot of demand for this to be ported to Windows also, 
but it is beyond our capabilities. If there is anyone willing to try 
and port  this to Windows,  I can provide existing code and get them 
in touch with the people who did the Linux and Macintosh ports.

If someone is willing to give this a stab and get it to work - they 
will surely be blessed many times over and go to heaven!  Seriously, 
we just had a course on the use of satellite data in Fisheries, and 
there was a large demand for this.

TIA,

-Roy M.
-- 
**********************
"The contents of this message do not reflect any position of the U.S. 
Government or NOAA."
**********************
Roy Mendelssohn
Supervisory Operations Research Analyst
NOAA/NMFS
Environmental Research Division
Southwest Fisheries Science Center
1352 Lighthouse Avenue
Pacific Grove, CA 93950-2097

e-mail: Roy.Mendelssohn at noaa.gov (Note new e-mail address)
voice: (831)-648-9029
fax: (831)-648-8440
www: http://www.pfeg.noaa.gov/

"Old age and treachery will overcome youth and skill."



From ggrothendieck at gmail.com  Mon Aug 28 17:19:08 2006
From: ggrothendieck at gmail.com (Gabor Grothendieck)
Date: Mon, 28 Aug 2006 11:19:08 -0400
Subject: [Rd] [Bioc-devel] Sweave windows style path (was Re: texmf
	error on 7 packages on devel winXP build nodes)
In-Reply-To: <17650.61626.320652.905103@galadriel.ci.tuwien.ac.at>
References: <6.2.5.6.1.20060827184815.02173e80@wehi.edu.au>
	<6phzmdqdyqb.fsf@gopher4.fhcrc.org>
	<17650.61626.320652.905103@galadriel.ci.tuwien.ac.at>
Message-ID: <971536df0608280819g14f49121m652d97e280514535@mail.gmail.com>

Have a look at Rfind.bat in

   http://cran.r-project.org/contrib/extra/batchfiles/

which uses the registry to find various software used by R.

On 8/28/06, Friedrich Leisch <Friedrich.Leisch at stat.uni-muenchen.de> wrote:
> >>>>> On Sun, 27 Aug 2006 07:45:00 -0700,
> >>>>> Martin Morgan (MM) wrote:
>
>  > [A build system misconfiguration at Bioconductor lead to a discussion
>  > about whether \usepackage{Sweave} should be included in .Rnw
>  > documents. Leaving this line out causes a problem on Windows, as
>  > indicated below.]
>
>  > I think the problem is '~', which should, according to Donald
>  > Arseneau's comment in this thread
>
>  > http://groups.google.com/group/comp.text.tex/browse_thread/thread/640e89078d0697c4/5b6f9fc6b0da21bf?lnk=gst&q=windows+file+path&rnum=4#5b6f9fc6b0da21bf
>
>  > be \string~. If this is the correct change, perhaps an upstream fix
>  > could be introduced in src/library/util/R/Sweave.R.
>
> Sorry to join in late, I am currently at a conference with limited
> access to the Internet. I am not su sure how easy it is to make the
> conversion, i.e. if it is save to unconditionally change all tildes in
> the path as suggested above. Does anybody have any experience wether
> that is save on all platforms and TeX installations?
>
> Personally I think it would make a lot of sense if the Bioconductor
> check machines could include a version of RHOME/share/texmf in their
> TeX input path ... that would also allow to use Rd.sty etc.
>
> Otherwise most of what has been said in this thread is true: The full
> path is inserted into the document by Sweave such that you donnot have
> to copy something from RHOME to your tex installation every time you
> install a new version of R.
>
> On Unix it is easy: Put /usr/local/lib/R/share/texmf (or wherever you
> typically install your default R) into your tex path and you are
> done. On windows the normal R installation path contains the version
> number, so this will fail. Hence I did the path thing in R as a
> convenience for authors (and to make sure that R version and
> Sweave.sty are consistent, but the .sty is pretty stable anyway).
>
> Maybe the installer could/should create
>
>        c:\programme\R\R-latest
>
> as a link to the newest installed version?
>
> Just a thought.
>
> Best,
> Fritz
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>



From dave at kanecap.com  Mon Aug 28 17:48:47 2006
From: dave at kanecap.com (David Kane)
Date: Mon, 28 Aug 2006 11:48:47 -0400
Subject: [Rd] Affiliation Reporting Standards. was: Re: reshape scaling with
	large numbers of times/rows
In-Reply-To: <Pine.LNX.4.64.0608240959560.3740@gannet.stats.ox.ac.uk>
References: <Pine.LNX.4.64.0608240959560.3740@gannet.stats.ox.ac.uk>
Message-ID: <17651.4191.973934.639033@gargle.gargle.HOWL>

After a question on R, Prof Brian Ripley writes:
 > However, you did not give your affiliation and I do not like giving free 
 > consultancy to undisclosed commercial organizations.  Please in future use 
 > a proper signature block so that helpers are aware of your provenance.

I have one question and one comment.

Question: Are there specific standards about this for R mailing lists?
I could not find any. I don't think that there should be because, in
the context of a mailing list question (as opposed to a personal
e-mail), the person's "affiliation" does not strike me as relevant
(although Professor Ripley is free to use whatever criteria he likes
for deciding which questions he answers).

Comment: Does it make much sense to harp on a "commercial" versus
non-commercial motivation in the context of an R mailing list? I think
it makes no sense. I (like many other R users) have both commercial
and university affiliations. Are mailing list participants more
willing to answer my questions if I sign them:

-- 
David Kane
CEO
Kane Capital Management

versus

--
David Kane
Institute Fellow at IQSS
Harvard University

Moreover, just because I sign a message with a university signature
does not mean that I am using the information for academic research
just as a commercial signature does not imply the opposite. My
colleagues and I have asked many questions --- and thanks for all the
great answers! --- relating to out portfolio package, now
open-sourced.

This is also true of "full-time" academics, many of whom do extensive
consulting. Just because an academic asks a question does not mean
that the answer won't be used solely for an "undisclosed commercial
organizations," or should such questions be openly labelled as such?

Perhaps I am missing something. But the
current-standard-as-I-understand-it (use whatever signature you like)
seems perfectly fine. If R-core wants a different standard, I would,
of course, comply.

Dave

--
Dave Kane
Whatever-Affiliation-You-Want-Here



From ggrothendieck at gmail.com  Mon Aug 28 17:54:35 2006
From: ggrothendieck at gmail.com (Gabor Grothendieck)
Date: Mon, 28 Aug 2006 11:54:35 -0400
Subject: [Rd] Affiliation Reporting Standards. was: Re: reshape scaling
	with large numbers of times/rows
In-Reply-To: <17651.4191.973934.639033@gargle.gargle.HOWL>
References: <Pine.LNX.4.64.0608240959560.3740@gannet.stats.ox.ac.uk>
	<17651.4191.973934.639033@gargle.gargle.HOWL>
Message-ID: <971536df0608280854k62d5be6ap78da988632a2d930@mail.gmail.com>

I don't think you owe anyone any explanations or descriptions of
yourself.  The only thing you really need to provide is a good description
of any problem you post as discussed on the r-help posting
guide and as discussed in the single line at the bottom of every
r-help message.

On 8/28/06, David Kane <dave at kanecap.com> wrote:
> After a question on R, Prof Brian Ripley writes:
>  > However, you did not give your affiliation and I do not like giving free
>  > consultancy to undisclosed commercial organizations.  Please in future use
>  > a proper signature block so that helpers are aware of your provenance.
>
> I have one question and one comment.
>
> Question: Are there specific standards about this for R mailing lists?
> I could not find any. I don't think that there should be because, in
> the context of a mailing list question (as opposed to a personal
> e-mail), the person's "affiliation" does not strike me as relevant
> (although Professor Ripley is free to use whatever criteria he likes
> for deciding which questions he answers).
>
> Comment: Does it make much sense to harp on a "commercial" versus
> non-commercial motivation in the context of an R mailing list? I think
> it makes no sense. I (like many other R users) have both commercial
> and university affiliations. Are mailing list participants more
> willing to answer my questions if I sign them:
>
> --
> David Kane
> CEO
> Kane Capital Management
>
> versus
>
> --
> David Kane
> Institute Fellow at IQSS
> Harvard University
>
> Moreover, just because I sign a message with a university signature
> does not mean that I am using the information for academic research
> just as a commercial signature does not imply the opposite. My
> colleagues and I have asked many questions --- and thanks for all the
> great answers! --- relating to out portfolio package, now
> open-sourced.
>
> This is also true of "full-time" academics, many of whom do extensive
> consulting. Just because an academic asks a question does not mean
> that the answer won't be used solely for an "undisclosed commercial
> organizations," or should such questions be openly labelled as such?
>
> Perhaps I am missing something. But the
> current-standard-as-I-understand-it (use whatever signature you like)
> seems perfectly fine. If R-core wants a different standard, I would,
> of course, comply.
>
> Dave
>
> --
> Dave Kane
> Whatever-Affiliation-You-Want-Here
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>



From InternetGateway1 at firmenich.com  Mon Aug 28 18:43:14 2006
From: InternetGateway1 at firmenich.com (InternetGateway1 at firmenich.com)
Date: Mon, 28 Aug 2006 18:43:14 +0200 (MEST)
Subject: [Rd] [WARNING: VIRUS REMOVED]Mail System Error - Returned Mail >>
 Message Rejected: Unauthorized File(s) (Exec) <<
Message-ID: <20060828164020.48D5F2D0940@GVA3016.firmenich.com>

<<< This is a computer generated message >>>
<<< Please do not reply to this address  >>>

-----------------------------------------------------------
>From :  r-devel at stat.math.ethz.ch
To   : yonogoasakti at firmenich.com

Date : Mon, 28 Aug 2006 09:30:49 -0700
-----------------------------------------------------------

We're sorry ! Your email message has been prevented from reaching its intended recipient(s). Firmenich uses an email security system and policies that blocks all unauthorized files. If your email is business related and was rejected in error, please contact your addressee.
Your message and its attachment(s) have been blocked due to a potential security issue.

Reason : This mail message contains unauthorized file(s).

Please use Firmenich E-Mail for Business purposes only !

Area : InternetGateway1 at firmenich.com - Block Executable (T7a62806dd0996c4094db4)
Detected : Scenarios/Block Executable Extension: A filename matching the file mask was detected: 'firmenich.com.zip'.


Modified : 

Removed Attachments :



From smckinney at bccrc.ca  Tue Aug 29 00:45:57 2006
From: smckinney at bccrc.ca (Steven McKinney)
Date: Mon, 28 Aug 2006 15:45:57 -0700
Subject: [Rd] Bug/problem reporting: Possible to modify posting guide FAQ?
Message-ID: <0BE438149FF2254DB4199E2682C8DFEB01D55528@crcmail1.BCCRC.CA>


If users post a bug or problem issue to an R-based news group
(R-devel, R-help, BioC - though BioC is far more forgiving)
they get yelled at for not reading the posting guide
and FAQ.

"Please *_do_* read the FAQ, the posting guide, ..."
the yellers do say.  So I read the BioC FAQ and it says...

http://www.bioconductor.org/docs/faq/

    "Bug reports on packages should perhaps be sent to the 
     package maintainer rather than to r-bugs."


So I send email to a maintainer, who I believe rightly points out

   "best to send this kind of questions to the bioc mailing list, rather
    than to myself privately, because other people might (a) also have
    answers or (b) benefit from the questions & answers."

Could the FAQ possibly be revised to some sensible combination
that generates less finger pointing, such as

   "Bug reports on packages should be sent to the Bioconductor mailing list, 
    and sent or copied to the package maintainer, rather than to r-bugs."

or

   "Bug reports on packages should be sent to the package maintainer, 
    and copied to the Bioconductor mailing list, rather than to r-bugs."


Could the posting guides to R-help and R-devel do something
similar?


Sign me
<Tired of all the finger pointing>


http://www.r-project.org/posting-guide.html

 "If the question relates to a contributed package , e.g., one downloaded 
  from CRAN, try contacting the package maintainer first. You can also 
  use find("functionname") and packageDescription("packagename") to 
  find this information. Only send such questions to R-help or R-devel if 
  you get no reply or need further assistance. This applies to both 
  requests for help and to bug reports."


How about

If the question relates to a contributed package , e.g., one downloaded 
from CRAN, email the list and be sure to additionally send to or copy to 
the package maintainer as well. You can use find("functionname") 
and packageDescription("packagename") to find this information. 
Only send such questions to one of R-help or R-devel. This applies to both 
requests for help and to bug reports.



From rgentlem at fhcrc.org  Tue Aug 29 01:57:55 2006
From: rgentlem at fhcrc.org (Robert Gentleman)
Date: Mon, 28 Aug 2006 16:57:55 -0700
Subject: [Rd] [R] Bug/problem reporting: Possible to modify posting
 guide FAQ?
In-Reply-To: <0BE438149FF2254DB4199E2682C8DFEB01D55528@crcmail1.BCCRC.CA>
References: <0BE438149FF2254DB4199E2682C8DFEB01D55528@crcmail1.BCCRC.CA>
Message-ID: <44F38303.50105@fhcrc.org>

Hi,
   I guess the question often comes down to whether it is a bug report, 
or a question. If you know it is a bug, and have a complete and correct 
example where the obviously incorrect behavior occurs and you are 
positive that the problem is the package then sending it to the 
maintainer is appropriate.  When I get these I try to deal with them. 
Real bug reports that go to the mailing list may be missed so in my 
opinion it would be best to cc the maintainer and we will amend the FAQ 
in that direction. If instead you are asking a question, of the form, is 
this a bug, or why is this happening, then for BioC at least, it is 
better to post directly to the list, as there are many folks who can 
help and you are more likely to get an answer.  When I get one of these 
emails I always refer the person to the mailing lists.  I see little 
problem with being redirected by a maintainer to the mailing list if 
they feel that the question is better asked there.

Bioconductor is different from R, clearly our mailing list has to be 
more about the constituent packages, since we will direct questions 
about R to the appropriate R mailing lists.  R mailing lists tend to be 
about R, so asking about a specific package there (among the 1000 or so) 
often does not get you very far, but sometimes it does.


  best wishes
    Robert


Steven McKinney wrote:
> If users post a bug or problem issue to an R-based news group
> (R-devel, R-help, BioC - though BioC is far more forgiving)
> they get yelled at for not reading the posting guide
> and FAQ.
> 
> "Please *_do_* read the FAQ, the posting guide, ..."
> the yellers do say.  So I read the BioC FAQ and it says...
> 
> http://www.bioconductor.org/docs/faq/
> 
>     "Bug reports on packages should perhaps be sent to the 
>      package maintainer rather than to r-bugs."
> 
> 
> So I send email to a maintainer, who I believe rightly points out
> 
>    "best to send this kind of questions to the bioc mailing list, rather
>     than to myself privately, because other people might (a) also have
>     answers or (b) benefit from the questions & answers."
> 
> Could the FAQ possibly be revised to some sensible combination
> that generates less finger pointing, such as
> 
>    "Bug reports on packages should be sent to the Bioconductor mailing list, 
>     and sent or copied to the package maintainer, rather than to r-bugs."
> 
> or
> 
>    "Bug reports on packages should be sent to the package maintainer, 
>     and copied to the Bioconductor mailing list, rather than to r-bugs."
> 
> 
> Could the posting guides to R-help and R-devel do something
> similar?
> 
> 
> Sign me
> <Tired of all the finger pointing>
> 
> 
> http://www.r-project.org/posting-guide.html
> 
>  "If the question relates to a contributed package , e.g., one downloaded 
>   from CRAN, try contacting the package maintainer first. You can also 
>   use find("functionname") and packageDescription("packagename") to 
>   find this information. Only send such questions to R-help or R-devel if 
>   you get no reply or need further assistance. This applies to both 
>   requests for help and to bug reports."
> 
> 
> How about
> 
> If the question relates to a contributed package , e.g., one downloaded 
> from CRAN, email the list and be sure to additionally send to or copy to 
> the package maintainer as well. You can use find("functionname") 
> and packageDescription("packagename") to find this information. 
> Only send such questions to one of R-help or R-devel. This applies to both 
> requests for help and to bug reports.
> 
> ______________________________________________
> R-help at stat.math.ethz.ch mailing list
> https://stat.ethz.ch/mailman/listinfo/r-help
> PLEASE do read the posting guide http://www.R-project.org/posting-guide.html
> and provide commented, minimal, self-contained, reproducible code.
> 

-- 
Robert Gentleman, PhD
Program in Computational Biology
Division of Public Health Sciences
Fred Hutchinson Cancer Research Center
1100 Fairview Ave. N, M2-B876
PO Box 19024
Seattle, Washington 98109-1024
206-667-7700
rgentlem at fhcrc.org



From sfalcon at fhcrc.org  Tue Aug 29 02:42:39 2006
From: sfalcon at fhcrc.org (Seth Falcon)
Date: Mon, 28 Aug 2006 17:42:39 -0700
Subject: [Rd] PATCH: Add fields argument to installed.packages and
	available.packages
Message-ID: <m2wt8sgyo0.fsf@ziti.fhcrc.org>

Hi all,

The write_PACKAGES function has a 'fields' argument that allows a user
generating a PACKAGES file to specify additional fields to include.
For symmetry, it would be nice for the available.packages function to
be able to read those extra fields when specified.

Similarly, it would be useful for installed.packages to have a
'fields' argument.  This would allow a user to query the set of
installed packages for other fields in the DESCRIPTION file.

One use for this would be for repository hosters to include the
License field in their PACKAGES file.  In this way, end users could
query a repository and only download packages that they have a license
to use.

Below is a patch against svn 38996 that attempts to implement this.

+ seth


Index: src/library/utils/R/packages.R
===================================================================
--- src/library/utils/R/packages.R	(revision 38996)
+++ src/library/utils/R/packages.R	(working copy)
@@ -1,5 +1,6 @@
 available.packages <-
-    function(contriburl = contrib.url(getOption("repos")), method)
+    function(contriburl = contrib.url(getOption("repos")), method,
+             fields = NULL)
 {
     .checkRversion <- function(x) {
         if(is.na(xx <- x["Depends"])) return(TRUE)
@@ -9,10 +10,14 @@
         else TRUE
     }
 
-    flds <- c("Package", "Version", "Priority", "Bundle",
-              "Depends", "Imports", "Suggests", "Contains")
-    res <- matrix(as.character(NA), 0, length(flds) + 1)
-    colnames(res) <- c(flds, "Repository")
+    requiredFields <- c("Package", "Version", "Priority", "Bundle",
+                        "Depends", "Imports", "Suggests", "Contains")
+    if (!is.null(fields) && is.character(fields))
+      fields <- unique(c(requiredFields, fields))
+    else
+      fields <- requiredFields
+    res <- matrix(as.character(NA), 0, length(fields) + 1)
+    colnames(res) <- c(fields, "Repository")
     for(repos in contriburl) {
         localcran <- length(grep("^file:", repos)) > 0
         if(localcran) {
@@ -23,7 +28,7 @@
                 if(length(grep("[A-Za-z]:", tmpf)))
                     tmpf <- substring(tmpf, 2)
             }
-            res0 <- read.dcf(file = tmpf, fields = flds)
+            res0 <- read.dcf(file = tmpf)
             if(length(res0)) rownames(res0) <- res0[, "Package"]
         } else {
             dest <- file.path(tempdir(),
@@ -57,7 +62,7 @@
                             call. = FALSE, immediate. = TRUE, domain = NA)
                     next
                 }
-                res0 <- read.dcf(file = tmpf, fields = flds)
+                res0 <- read.dcf(file = tmpf)
                 if(length(res0)) rownames(res0) <- res0[, "Package"]
                 .saveRDS(res0, dest, compress = TRUE)
                 unlink(tmpf)
@@ -65,7 +70,14 @@
             } # end of download vs cached
         } # end of localcran vs online
         if (length(res0)) {
-            res0 <- cbind(res0, Repository = repos)
+            missingFields <- fields[!(fields %in% colnames(res0))]
+            if (length(missingFields)) {
+                toadd <- matrix(as.character(NA), nrow=nrow(res0),
+                                ncol=length(missingFields),
+                                dimnames=list(NULL, missingFields))
+                res0 <- cbind(res0, toadd)
+            }
+            res0 <- cbind(res0[, fields], Repository = repos)
             res <- rbind(res, res0)
         }
     }
@@ -307,22 +319,29 @@
 }
 
 installed.packages <-
-    function(lib.loc = NULL, priority = NULL,  noCache = FALSE)
+    function(lib.loc = NULL, priority = NULL,  noCache = FALSE,
+             fields = NULL)
 {
     if(is.null(lib.loc))
         lib.loc <- .libPaths()
-    pkgFlds <- c("Version", "Priority", "Bundle", "Contains", "Depends",
-                 "Suggests", "Imports", "Built")
     if(!is.null(priority)) {
         if(!is.character(priority))
             stop("'priority' must be character or NULL")
         if(any(b <- priority %in% "high"))
             priority <- c(priority[!b], "recommended","base")
     }
-    retval <- matrix("", 0, 2+length(pkgFlds))
+    requiredFields <- c("Version", "Priority", "Bundle", "Contains",
+                        "Depends", "Suggests", "Imports", "Built")
+    if (!is.null(fields) && is.character(fields))
+      fields <- unique(c(requiredFields, fields))
+    else
+      fields <- requiredFields
+    retval <- matrix("", 0, 2+length(fields))
     for(lib in lib.loc) {
         dest <- file.path(tempdir(),
-                          paste("libloc_", URLencode(lib, TRUE), ".rds",
+                          paste("libloc_", URLencode(lib, TRUE),
+                                paste(fields, collapse=","),
+                                ".rds",
                                 sep=""))
         if(!noCache && file.exists(dest) &&
             file.info(dest)$mtime > file.info(lib.loc)$mtime) {
@@ -332,12 +351,12 @@
             ## this excludes packages without DESCRIPTION files
             pkgs <- .packages(all.available = TRUE, lib.loc = lib)
             for(p in pkgs){
-                desc <- packageDescription(p, lib = lib, fields = pkgFlds,
+                desc <- packageDescription(p, lib = lib, fields = fields,
                                            encoding = NA)
                 ## this gives NA if the package has no Version field
                 if (is.logical(desc)) {
-                    desc <- rep(as.character(NA), length(pkgFlds))
-                    names(desc) <- pkgFlds
+                    desc <- rep(as.character(NA), length(fields))
+                    names(desc) <- fields
                 } else {
                     desc <- unlist(desc)
                     Rver <- strsplit(strsplit(desc["Built"], ";")[[1]][1],
@@ -352,7 +371,7 @@
             }
         }
     }
-    colnames(retval) <- c("Package", "LibPath", pkgFlds)
+    colnames(retval) <- c("Package", "LibPath", fields)
     if(length(retval) && !is.null(priority)) {
         keep <- !is.na(pmatch(retval[,"Priority"], priority,
                               duplicates.ok = TRUE))
Index: src/library/utils/man/installed.packages.Rd
===================================================================
--- src/library/utils/man/installed.packages.Rd	(revision 38996)
+++ src/library/utils/man/installed.packages.Rd	(working copy)
@@ -7,7 +7,7 @@
 }
 \usage{
 installed.packages(lib.loc = NULL, priority = NULL,
-                   noCache = FALSE)
+                   noCache = FALSE, fields = NULL)
 }
 \arguments{
   \item{lib.loc}{
@@ -21,6 +21,11 @@
     assigned priority use \code{priority = "NA"}.
   }
   \item{noCache}{Do not use cached information.}
+
+  \item{fields}{a character vector giving the fields to extract from
+    each package's \code{DESCRIPTION} file in addition to the default
+    ones, or \code{NULL} (default).  Unavailable fields result in
+    \code{NA} values.}
 }
 \details{
   \code{installed.packages} scans the \file{DESCRIPTION} files of each
@@ -31,18 +36,21 @@
   for versioned installs with the name under which the package is
   installed, in the style \code{mypkg_1.3-7}.
 
-  The information found is cached (by library) for the \R session,
-  and updated only if the top-level library directory has been altered,
-  for example by installing or removing a package.  If the cached
-  information becomes confused, it can be refreshed by running
-  \code{installed.packages(noCache = TRUE)}.
+  The information found is cached (by library) for the \R session and
+  specified \code{fields} argument, and updated only if the top-level
+  library directory has been altered, for example by installing or
+  removing a package.  If the cached information becomes confused, it
+  can be refreshed by running \code{installed.packages(noCache =
+  TRUE)}.
 }
 \value{
   A matrix with one row per package, row names the package names and
   column names \code{"Package"}, \code{"LibPath"}, \code{"Version"},
-  \code{"Priority"}, \code{"Bundle"}, \code{"Contains"}, \code{"Depends"},
-  \code{"Suggests"}, \code{"Imports"} and \code{"Built"}
-  (the \R version the package was built under).
+  \code{"Priority"}, \code{"Bundle"}, \code{"Contains"},
+  \code{"Depends"}, \code{"Suggests"}, \code{"Imports"} and
+  \code{"Built"} (the \R version the package was built under).
+  Additional columns can be specified using the \code{fields}
+  argument.
 }
 \seealso{
   \code{\link{update.packages}}, \code{\link{INSTALL}}, \code{\link{REMOVE}}.
@@ -50,5 +58,6 @@
 \examples{
 str(ip <- installed.packages(priority = "high"))
 ip[, c(1,3:5)]
+plic <- installed.packages(priotiry = "high", fields="License")
 }
 \keyword{utilities}
Index: src/library/utils/man/update.packages.Rd
===================================================================
--- src/library/utils/man/update.packages.Rd	(revision 38996)
+++ src/library/utils/man/update.packages.Rd	(working copy)
@@ -20,7 +20,7 @@
                 type = getOption("pkgType"))
 
 available.packages(contriburl = contrib.url(getOption("repos")),
-                   method)
+                   method, fields = NULL)
 
 old.packages(lib.loc = NULL, repos = getOption("repos"),
              contriburl = contrib.url(repos),
@@ -157,7 +157,14 @@
     This is sometimes used to perform additional operations at the end
     of the package installation in addition to removing intermediate files.
   }
+  \item{fields}{a character vector giving the fields to extract from
+    the \code{PACKAGES} file(s) in addition to the default ones, or
+    \code{NULL} (default).  Unavailable fields result in \code{NA}
+    values.
+  }
 }
+
+}
 \details{
   All of these functions work with the names of a package or bundle (and
   not the component packages of a bundle, except for
@@ -252,7 +259,8 @@
   with one row per package/bundle, row names the package names and
   column names \code{"Package"}, \code{"Version"}, \code{"Priority"},
   \code{"Bundle"}, \code{"Depends"}, \code{"Imports"}, \code{"Suggests"}
-  \code{"Contains"} and \code{"Repository"}.
+  \code{"Contains"} and \code{"Repository"}.  Additional columns can
+  be specified using the \code{fields} argument.
 
   For \code{old.packages}, \code{NULL} or a matrix with one row per
   package/bundle, row names the package names and column names



From khansen at stat.Berkeley.EDU  Tue Aug 29 03:40:23 2006
From: khansen at stat.Berkeley.EDU (Kasper Daniel Hansen)
Date: Mon, 28 Aug 2006 18:40:23 -0700
Subject: [Rd] writeChar
Message-ID: <B383A048-EEB7-405F-8B2E-87B624FA7983@stat.berkeley.edu>

I have recently been using writeChar and writeBin to write binary  
files. These functions makes it very easy to write OS-independent  
files, which I am very happy with.

I have however found a few issues, best illustrated by a short example

 > con <- file("test", open = "wb")
 > writeChar(as.character(c("ab", "ab")), nchars = c(3), con = con,  
eos = "")
Warning message:
writeChar: more characters requested than are in the string - will  
zero-pad
 > close(con)
 > system("hexdump -Cv test")
00000000  61 62 00 00                                       |ab..|
00000004

As seen from this example, the fact that nchars is shorter than the  
character vector being written results in the remaining elements  
being skipped. Also, the nchars argument is not being recycled,  
something I find quite R-counter-intuitive. I would suggest  
recycling, although I am not sure how to best achieve this.

I also get a warning about zero-padding - even if I request more  
characters than present in the vector. This means that I get a  
warning if using the argument for "what is what meant for" (at least  
in my opinion). Right now I get many warnings when writing the binary  
files I am working with, which might be confusing to future users. I  
would suggest to only give a warning if requesting _less_ characters,  
since in that case R would truncate the argument.

Finally, having a NA or a negative number (not shown) in the nchars  
argument makes R crash, at least on two platforms:

 > con <- file("test", open = "wb")
 > writeChar(as.character(c("ab", "ab")), nchars = c(3, NA), con =  
con, eos = NULL)

*** caught bus error ***
address 0x2008000, cause 'invalid alignment'

This is reproducible using R-2.3.0 (patched) on 32bit Linux:

 > con <- file("test", open = "wb")
 > writeChar(as.character(c("ab", "ab")), nchars = c(3, NA), con =  
con, eos = NULL)

*** caught segfault ***
address 0x1a5c000, cause 'memory not mapped'
Segmentation fault

I have not tested it on R-devel, but the news file does not indicate  
any changes in writeChar.

Kasper



From ripley at stats.ox.ac.uk  Tue Aug 29 08:38:48 2006
From: ripley at stats.ox.ac.uk (Prof Brian Ripley)
Date: Tue, 29 Aug 2006 07:38:48 +0100 (BST)
Subject: [Rd] writeChar
In-Reply-To: <B383A048-EEB7-405F-8B2E-87B624FA7983@stat.berkeley.edu>
References: <B383A048-EEB7-405F-8B2E-87B624FA7983@stat.berkeley.edu>
Message-ID: <Pine.LNX.4.64.0608290721020.21232@gannet.stats.ox.ac.uk>

Given that if you specify the 'nchars' argument you are trying to do 
something unnatural, I don't see why you find it incorrect to get warnings 
about mismatches between what you supply and what you asked for, but 
expect one if what you supply matches what you asked for (and truncation 
occurs).  Originally it was an error to ask for more characters than were 
available, but Fritz Leisch persuaded us to allow this with a warning
(and that is precisely what the documentation says).  Since then we have 
added the raw type, and I would now say that if you want to do things 
involving nul bytes, you should be using the raw type instead.

R help normally tells you its recycling rules if there are any, and surely 
it is no hardship to supply an accurate version of 'nchars' using rep()?
Especially as almost all users are not going to be specifying 'nchars'?

I've added a stricter sanity check against incorrect specification of 
'nchars'.

On Mon, 28 Aug 2006, Kasper Daniel Hansen wrote:

> I have recently been using writeChar and writeBin to write binary  
> files. These functions makes it very easy to write OS-independent  
> files, which I am very happy with.
> 
> I have however found a few issues, best illustrated by a short example
> 
>  > con <- file("test", open = "wb")
>  > writeChar(as.character(c("ab", "ab")), nchars = c(3), con = con,  
> eos = "")
> Warning message:
> writeChar: more characters requested than are in the string - will  
> zero-pad
>  > close(con)
>  > system("hexdump -Cv test")
> 00000000  61 62 00 00                                       |ab..|
> 00000004
> 
> As seen from this example, the fact that nchars is shorter than the  
> character vector being written results in the remaining elements  
> being skipped. Also, the nchars argument is not being recycled,  
> something I find quite R-counter-intuitive. I would suggest  
> recycling, although I am not sure how to best achieve this.
> 
> I also get a warning about zero-padding - even if I request more  
> characters than present in the vector. This means that I get a  
> warning if using the argument for "what is what meant for" (at least  
> in my opinion). Right now I get many warnings when writing the binary  
> files I am working with, which might be confusing to future users. I  
> would suggest to only give a warning if requesting _less_ characters,  
> since in that case R would truncate the argument.
> 
> Finally, having a NA or a negative number (not shown) in the nchars  
> argument makes R crash, at least on two platforms:
> 
>  > con <- file("test", open = "wb")
>  > writeChar(as.character(c("ab", "ab")), nchars = c(3, NA), con =  
> con, eos = NULL)
> 
> *** caught bus error ***
> address 0x2008000, cause 'invalid alignment'
> 
> This is reproducible using R-2.3.0 (patched) on 32bit Linux:
> 
>  > con <- file("test", open = "wb")
>  > writeChar(as.character(c("ab", "ab")), nchars = c(3, NA), con =  
> con, eos = NULL)
> 
> *** caught segfault ***
> address 0x1a5c000, cause 'memory not mapped'
> Segmentation fault
> 
> I have not tested it on R-devel, but the news file does not indicate  
> any changes in writeChar.
> 
> Kasper
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
> 

-- 
Brian D. Ripley,                  ripley at stats.ox.ac.uk
Professor of Applied Statistics,  http://www.stats.ox.ac.uk/~ripley/
University of Oxford,             Tel:  +44 1865 272861 (self)
1 South Parks Road,                     +44 1865 272866 (PA)
Oxford OX1 3TG, UK                Fax:  +44 1865 272595



From r.hankin at noc.soton.ac.uk  Tue Aug 29 10:32:37 2006
From: r.hankin at noc.soton.ac.uk (Robin Hankin)
Date: Tue, 29 Aug 2006 09:32:37 +0100
Subject: [Rd] S4 methods for "+"
In-Reply-To: <Pine.LNX.4.64.0608251253260.31404@gannet.stats.ox.ac.uk>
References: <976B7A6F-2AD6-40E8-B8DA-5CEE4625A1F1@soc.soton.ac.uk>
	<Pine.LNX.4.64.0608251253260.31404@gannet.stats.ox.ac.uk>
Message-ID: <19036E53-EFD0-40CF-9712-82FF57334151@soc.soton.ac.uk>


On 25 Aug 2006, at 12:56, Prof Brian Ripley wrote:

> Just like any other S4 method:
>
> setMethod("+", c("track", "track"),
>           function(e1, e2) new("track", x=c(e1 at x, e2 at x), y=c 
> (e1 at y,e2 at y)))
>
> If you want to write a group generic for the S4 Ops group, you do it
> very like S3.  There are worked examples in 'S Programming' (that  
> at least
> at one point worked in R).
>


I had a long train journey over the weekend and took S Programming
with me.  Most of my  questions about S4 methods can be answered
by reading chapters 4 and 5 over and over and over again, with  
occasional
reference to the Green Book.

?SetMethod does not reference Venables & Ripley.  Could this be added?





>
> On Fri, 25 Aug 2006, Robin Hankin wrote:
>
>> Hi
>>
>> I'm trying to implement S4 methods in a package, and I am having
>> difficulty defining "+" to do what I want.
>>
>> In the Green Book, there is a discussion of a "track" object,
>>
>> setClass("track", representation(x="numeric", y="numeric"))
>>
>> OK.
>>
>> track1 <- new("track",x=c(1,4,6),y=c(10,11,12))
>> track2 <- new("track",x=c(2,5),y=c(100,101))
>>
>>
>> What I want to do is to define "+" for track object so that if
>>
>> track3 <-  track1 + track2
>>
>> has track3 at x  == c(1,2,4,5,6)
>> and
>> track3 at y = c(10,100,11,101,12)
>>
>> maybe adding a track object to a scalar would shift the values of the
>> x slot.
>>
>> The algorithm itself is no problem...but what is the S4 equivalent to
>> the S3 technique of writing an Ops.track() function that tells
>> R what "+" means?
>>
>>
>>

--
Robin Hankin
Uncertainty Analyst
National Oceanography Centre, Southampton
European Way, Southampton SO14 3ZH, UK
  tel  023-8059-7743



From maechler at stat.math.ethz.ch  Tue Aug 29 10:44:59 2006
From: maechler at stat.math.ethz.ch (Martin Maechler)
Date: Tue, 29 Aug 2006 10:44:59 +0200
Subject: [Rd] PATCH: Add fields argument to installed.packages and
	available.packages
In-Reply-To: <m2wt8sgyo0.fsf@ziti.fhcrc.org>
References: <m2wt8sgyo0.fsf@ziti.fhcrc.org>
Message-ID: <17651.65163.240840.365787@stat.math.ethz.ch>

>>>>> "Seth" == Seth Falcon <sfalcon at fhcrc.org>
>>>>>     on Mon, 28 Aug 2006 17:42:39 -0700 writes:

    Seth> Hi all, The write_PACKAGES function has a 'fields'
    Seth> argument that allows a user generating a PACKAGES file
    Seth> to specify additional fields to include.  For
    Seth> symmetry, it would be nice for the available.packages
    Seth> function to be able to read those extra fields when
    Seth> specified.

    Seth> Similarly, it would be useful for installed.packages
    Seth> to have a 'fields' argument.  This would allow a user
    Seth> to query the set of installed packages for other
    Seth> fields in the DESCRIPTION file.

    Seth> One use for this would be for repository hosters to
    Seth> include the License field in their PACKAGES file.  In
    Seth> this way, end users could query a repository and only
    Seth> download packages that they have a license to use.

    Seth> Below is a patch against svn 38996 that attempts to
    Seth> implement this.

I like the idea and will look into applying the patch
(note there's at least one typo which makes "make check" fail:
 /priotiry/)

A propos:

A while back (in last summer?), we (some of R-core) have
discussed about a new field to be added to DESCRIPTION,
and AFAIR, the only problem we had, is to find a name we
all liked.
Or was there more then the name alone, and some where convinced
that it is superfluous and hence too complicated.

The idea was a field related to but weaker than 'Suggests' :
Something like
     'canMakeUseOf: <pkg1> [, <pkg2>, ... ]
which is *not* used in any QA/QC checking, but is purely
informative: If <pkg1> is require()able, then some examples may
look nicer, a function may provide another feature, etc, etc.
Alternatives to 'canMakeUseOf' would have been
'isHappilyCoworkingWith' ....

What do you (R-devel listeners) think about the idea?

Martin



From r.hankin at noc.soton.ac.uk  Tue Aug 29 11:42:21 2006
From: r.hankin at noc.soton.ac.uk (Robin Hankin)
Date: Tue, 29 Aug 2006 10:42:21 +0100
Subject: [Rd] vector S4 classes
Message-ID: <AC7EC9F8-ECDC-4E6A-BB8D-7C53A4A7605F@soc.soton.ac.uk>

In the Green Book, section 7.5 discusses new vector classes and uses  
quaternions
as an example of a vector class that needs more than one number per  
element.

I would like to define a new class that has a numeric vector and a  
logical
vector of the same length that specifies whether the measurement was  
accurate.

The following code does not behave as desired:

 > setClass("thing",representation("vector",accurate="logical"))
[1] "thing"
 > dput(x <- new("thing",1:10,accurate=rep(T,10)))
structure(c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10), accurate = c(TRUE,
TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE), class =  
structure("thing", package = ".GlobalEnv"))
 > x[1:3]
[1] 1 2 3
 > dput(x[1:3])
c(1, 2, 3)
 >

because, although the "accurate" slot is filled as desired in "x",  
when extracting the first
three elements, it seems to be lost.

What is the appropriate setClass() call to do what I want?  Or indeed  
is making "thing"
a vector class as sensible idea here?





--
Robin Hankin
Uncertainty Analyst
National Oceanography Centre, Southampton
European Way, Southampton SO14 3ZH, UK
  tel  023-8059-7743



From maechler at stat.math.ethz.ch  Tue Aug 29 12:11:23 2006
From: maechler at stat.math.ethz.ch (Martin Maechler)
Date: Tue, 29 Aug 2006 12:11:23 +0200
Subject: [Rd] vector S4 classes
In-Reply-To: <AC7EC9F8-ECDC-4E6A-BB8D-7C53A4A7605F@soc.soton.ac.uk>
References: <AC7EC9F8-ECDC-4E6A-BB8D-7C53A4A7605F@soc.soton.ac.uk>
Message-ID: <17652.4811.806532.129240@stat.math.ethz.ch>

>>>>> "Robin" == Robin Hankin <r.hankin at noc.soton.ac.uk>
>>>>>     on Tue, 29 Aug 2006 10:42:21 +0100 writes:

    Robin> In the Green Book, section 7.5 discusses new vector classes and uses  
    Robin> quaternions
    Robin> as an example of a vector class that needs more than one number per  
    Robin> element.

    Robin> I would like to define a new class that has a numeric vector and a  
    Robin> logical
    Robin> vector of the same length that specifies whether the measurement was  
    Robin> accurate.

    Robin> The following code does not behave as desired:

    >> setClass("thing",representation("vector",accurate="logical"))
    Robin> [1] "thing"
    >> dput(x <- new("thing",1:10,accurate=rep(T,10)))
    Robin> structure(c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10), accurate = c(TRUE,
    Robin> TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE), class =  
    Robin> structure("thing", package = ".GlobalEnv"))
    >> x[1:3]
    Robin> [1] 1 2 3
    >> dput(x[1:3])
    Robin> c(1, 2, 3)
    >> 

    Robin> because, although the "accurate" slot is filled as desired in "x",  
    Robin> when extracting the first
    Robin> three elements, it seems to be lost.

and you would really expect that ``R'' magically knows to it
also must subset the accurate slote ?

    Robin> What is the appropriate setClass() call to do what I want?  Or indeed  
    Robin> is making "thing"
    Robin> a vector class as sensible idea here?

I think you need to define at least a  subset and subassign
method for your class as well.

Defining it as "vector" will automatically inherit all the
method definitions for "vector" --- none of which will ``know anything''
about the accuracy slot.
Therefore, I tend to think you rather define a class with "all slots"

  setClass("Thing", representation(x = "numeric", accurate = "logical"))

and then you probably have to define many methods for that
class, notably for "[" and also "[<-" where the latter should
happen via setReplaceMethod("Thing",

Also, I'd define a validity method, where you have to decide if
'accurate' must have the same length as 'x' -- or what it should
mean if not.

Martin



From r.hankin at noc.soton.ac.uk  Tue Aug 29 12:38:27 2006
From: r.hankin at noc.soton.ac.uk (Robin Hankin)
Date: Tue, 29 Aug 2006 11:38:27 +0100
Subject: [Rd] vector S4 classes
In-Reply-To: <17652.4811.806532.129240@stat.math.ethz.ch>
References: <AC7EC9F8-ECDC-4E6A-BB8D-7C53A4A7605F@soc.soton.ac.uk>
	<17652.4811.806532.129240@stat.math.ethz.ch>
Message-ID: <645CBF31-5714-48B7-ABB9-0FB52C54D53A@soc.soton.ac.uk>

Hi Martin

thanks for this.  I see what you say about R not being able to  
magically subset the
"accuracy" slot.  Which leaves me puzzled as to why anyone would define
a vector class such as "string" (p315).  I can't see why "string" is  
defined as
it is, rather than use something like "fungi" from V&R chapter 5.

So, my next question is, why does the Green Book recommend

setClass("quaternion", "vector", prototype=numeric())
?


Why not do what the "onion" package does and make a quaternion
a single column of a four-row matrix?  What advantage does the
setClass() method above have over the single-column-of-a-four-row-matrix
method?



best wishes

Robin


On 29 Aug 2006, at 11:11, Martin Maechler wrote:

>>>>>> "Robin" == Robin Hankin <r.hankin at noc.soton.ac.uk>
>>>>>>     on Tue, 29 Aug 2006 10:42:21 +0100 writes:
>
>     Robin> In the Green Book, section 7.5 discusses new vector  
> classes and uses
>     Robin> quaternions
>     Robin> as an example of a vector class that needs more than one  
> number per
>     Robin> element.
>
>     Robin> I would like to define a new class that has a numeric  
> vector and a
>     Robin> logical
>     Robin> vector of the same length that specifies whether the  
> measurement was
>     Robin> accurate.
>
>     Robin> The following code does not behave as desired:
>
>>> setClass("thing",representation("vector",accurate="logical"))
>     Robin> [1] "thing"
>>> dput(x <- new("thing",1:10,accurate=rep(T,10)))
>     Robin> structure(c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10), accurate = c 
> (TRUE,
>     Robin> TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE),  
> class =
>     Robin> structure("thing", package = ".GlobalEnv"))
>>> x[1:3]
>     Robin> [1] 1 2 3
>>> dput(x[1:3])
>     Robin> c(1, 2, 3)
>>>
>
>     Robin> because, although the "accurate" slot is filled as  
> desired in "x",
>     Robin> when extracting the first
>     Robin> three elements, it seems to be lost.
>
> and you would really expect that ``R'' magically knows to it
> also must subset the accurate slote ?
>
>     Robin> What is the appropriate setClass() call to do what I  
> want?  Or indeed
>     Robin> is making "thing"
>     Robin> a vector class as sensible idea here?
>
> I think you need to define at least a  subset and subassign
> method for your class as well.
>
> Defining it as "vector" will automatically inherit all the
> method definitions for "vector" --- none of which will ``know  
> anything''
> about the accuracy slot.
> Therefore, I tend to think you rather define a class with "all slots"
>
>   setClass("Thing", representation(x = "numeric", accurate =  
> "logical"))
>
> and then you probably have to define many methods for that
> class, notably for "[" and also "[<-" where the latter should
> happen via setReplaceMethod("Thing",
>
> Also, I'd define a validity method, where you have to decide if
> 'accurate' must have the same length as 'x' -- or what it should
> mean if not.
>
> Martin

--
Robin Hankin
Uncertainty Analyst
National Oceanography Centre, Southampton
European Way, Southampton SO14 3ZH, UK
  tel  023-8059-7743



From ggrothendieck at gmail.com  Tue Aug 29 12:40:55 2006
From: ggrothendieck at gmail.com (Gabor Grothendieck)
Date: Tue, 29 Aug 2006 06:40:55 -0400
Subject: [Rd] vector S4 classes
In-Reply-To: <AC7EC9F8-ECDC-4E6A-BB8D-7C53A4A7605F@soc.soton.ac.uk>
References: <AC7EC9F8-ECDC-4E6A-BB8D-7C53A4A7605F@soc.soton.ac.uk>
Message-ID: <971536df0608290340r39b99318sca33cf20a4ac1931@mail.gmail.com>

You might want to look at the source for the R 'its' package.  It defines
an S4 class for an irregular time series whose representation
consists of

1. a matrix portion analogous to your vector portion to hold the series
    of multivariate series, and
2. a "dates" slot analogous to your accurate slot

and defines numerous methods for this class.

On 8/29/06, Robin Hankin <r.hankin at noc.soton.ac.uk> wrote:
> In the Green Book, section 7.5 discusses new vector classes and uses
> quaternions
> as an example of a vector class that needs more than one number per
> element.
>
> I would like to define a new class that has a numeric vector and a
> logical
> vector of the same length that specifies whether the measurement was
> accurate.
>
> The following code does not behave as desired:
>
>  > setClass("thing",representation("vector",accurate="logical"))
> [1] "thing"
>  > dput(x <- new("thing",1:10,accurate=rep(T,10)))
> structure(c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10), accurate = c(TRUE,
> TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE), class =
> structure("thing", package = ".GlobalEnv"))
>  > x[1:3]
> [1] 1 2 3
>  > dput(x[1:3])
> c(1, 2, 3)
>  >
>
> because, although the "accurate" slot is filled as desired in "x",
> when extracting the first
> three elements, it seems to be lost.
>
> What is the appropriate setClass() call to do what I want?  Or indeed
> is making "thing"
> a vector class as sensible idea here?
>
>
>
>
>
> --
> Robin Hankin
> Uncertainty Analyst
> National Oceanography Centre, Southampton
> European Way, Southampton SO14 3ZH, UK
>  tel  023-8059-7743
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>



From pgilbert at bank-banque-canada.ca  Tue Aug 29 15:55:09 2006
From: pgilbert at bank-banque-canada.ca (Paul Gilbert)
Date: Tue, 29 Aug 2006 09:55:09 -0400
Subject: [Rd] PATCH: Add fields argument to
	installed.packages	and	available.packages
In-Reply-To: <17651.65163.240840.365787@stat.math.ethz.ch>
References: <m2wt8sgyo0.fsf@ziti.fhcrc.org>
	<17651.65163.240840.365787@stat.math.ethz.ch>
Message-ID: <44F4473D.9030203@bank-banque-canada.ca>

Martin Maechler wrote:

> ...
>
>The idea was a field related to but weaker than 'Suggests' :
>Something like
>     'canMakeUseOf: <pkg1> [, <pkg2>, ... ]
>which is *not* used in any QA/QC checking, but is purely
>informative: If <pkg1> is require()able, then some examples may
>look nicer, a function may provide another feature, etc, etc.
>Alternatives to 'canMakeUseOf' would have been
>'isHappilyCoworkingWith' ....
>
>What do you (R-devel listeners) think about the idea?
>  
>
I still like this idea.  I prefer 'canMakeUseOf' to 
'isHappilyCoworkingWith'  mainly because it seems less ambiguous.

Paul Gilbert

>Martin
>
>______________________________________________
>R-devel at r-project.org mailing list
>https://stat.ethz.ch/mailman/listinfo/r-devel
>  
>
====================================================================================

La version fran?aise suit le texte anglais.

------------------------------------------------------------------------------------

This email may contain privileged and/or confidential inform...{{dropped}}



From maechler at stat.math.ethz.ch  Tue Aug 29 16:12:44 2006
From: maechler at stat.math.ethz.ch (Martin Maechler)
Date: Tue, 29 Aug 2006 16:12:44 +0200
Subject: [Rd] 'CanMakeUseOf' field  [was ".. Add 'fields' argument ..]
In-Reply-To: <44F4473D.9030203@bank-banque-canada.ca>
References: <m2wt8sgyo0.fsf@ziti.fhcrc.org>
	<17651.65163.240840.365787@stat.math.ethz.ch>
	<44F4473D.9030203@bank-banque-canada.ca>
Message-ID: <17652.19292.998960.686119@stat.math.ethz.ch>

>>>>> "PaulG" == Paul Gilbert <pgilbert at bank-banque-canada.ca>
>>>>>     on Tue, 29 Aug 2006 09:55:09 -0400 writes:

    PaulG> Martin Maechler wrote:
    >> ...
    >> 
    >> The idea was a field related to but weaker than 'Suggests' :
    >> Something like
    >> 'canMakeUseOf: <pkg1> [, <pkg2>, ... ]
    >> which is *not* used in any QA/QC checking, but is purely
    >> informative: If <pkg1> is require()able, then some examples may
    >> look nicer, a function may provide another feature, etc, etc.
    >> Alternatives to 'canMakeUseOf' would have been
    >> 'isHappilyCoworkingWith' ....
    >> 
    >> What do you (R-devel listeners) think about the idea?

    PaulG> I still like this idea.  I prefer 'canMakeUseOf' to 
    PaulG> 'isHappilyCoworkingWith'  mainly because it seems less ambiguous.

Thanks, Paul.
As you may have guessed I should have put a  " :-) "  beside the
'isHappily...' .

Of course, even 'CanMakeUseOf' {we should capitalize the first letter}
is rather too long, but before finding the proper term, we should
agree on usefulness of such a new field.
Apart from the use of package authors {some could note that
other packages make use of theirs, without already depending on
or suggesting them}, it's one of those fields that should help
in the future to explore (e.g. cluster or neighborhood-graph)
the growing high-dimensional space of R packages.

Martin



From Bernhard_Pfaff at fra.invesco.com  Tue Aug 29 16:33:43 2006
From: Bernhard_Pfaff at fra.invesco.com (Pfaff, Bernhard Dr.)
Date: Tue, 29 Aug 2006 15:33:43 +0100
Subject: [Rd] 'CanMakeUseOf' field  [was ".. Add 'fields' argument ..]
In-Reply-To: <17652.19292.998960.686119@stat.math.ethz.ch>
Message-ID: <E4A9111DA23BA048B9A46686BF727CF461BD09@DEFRAXMB01.corp.amvescap.net>

>>>>>> "PaulG" == Paul Gilbert <pgilbert at bank-banque-canada.ca>
>>>>>>     on Tue, 29 Aug 2006 09:55:09 -0400 writes:
>
>    PaulG> Martin Maechler wrote:
>    >> ...
>    >> 
>    >> The idea was a field related to but weaker than 'Suggests' :
>    >> Something like
>    >> 'canMakeUseOf: <pkg1> [, <pkg2>, ... ]
>    >> which is *not* used in any QA/QC checking, but is purely
>    >> informative: If <pkg1> is require()able, then some examples may
>    >> look nicer, a function may provide another feature, etc, etc.
>    >> Alternatives to 'canMakeUseOf' would have been
>    >> 'isHappilyCoworkingWith' ....
>    >> 
>    >> What do you (R-devel listeners) think about the idea?
>
>    PaulG> I still like this idea.  I prefer 'canMakeUseOf' to 
>    PaulG> 'isHappilyCoworkingWith'  mainly because it seems 
>less ambiguous.
>
>Thanks, Paul.
>As you may have guessed I should have put a  " :-) "  beside the
>'isHappily...' .
>
>Of course, even 'CanMakeUseOf' {we should capitalize the first letter}
>is rather too long, but before finding the proper term, we should
>agree on usefulness of such a new field.
>Apart from the use of package authors {some could note that
>other packages make use of theirs, without already depending on
>or suggesting them}, it's one of those fields that should help
>in the future to explore (e.g. cluster or neighborhood-graph)
>the growing high-dimensional space of R packages.
>

Hello Martin, hello Paul,

this is an interesting iniative! There are already 'task views' (I do
not have to tell you :-); with a growing number of packages contained in
each) and hence, the 'value added', IMHO, of such a field in the
DESCRIPTION file would be to narrow down the search to affiliated
packages. Incidentally, these packages might not be contained in a
certain task view and the advantage is threefold: first this give
package authors the leeway to decide which packages should go 'hand in
hand' with their one(s); secondly, users might be pointed to packages,
that would have slipped their attention by only spotting at a certain
task view and last but not least, not all packages do appear in a task
view. 

Just my 2c.

Best,
Bernhard


>Martin
>
>______________________________________________
>R-devel at r-project.org mailing list
>https://stat.ethz.ch/mailman/listinfo/r-devel
>
*****************************************************************
Confidentiality Note: The information contained in this mess...{{dropped}}



From sfalcon at fhcrc.org  Tue Aug 29 16:35:36 2006
From: sfalcon at fhcrc.org (Seth Falcon)
Date: Tue, 29 Aug 2006 07:35:36 -0700
Subject: [Rd] PATCH: Add fields argument to installed.packages and
	available.packages
In-Reply-To: <17651.65163.240840.365787@stat.math.ethz.ch> (Martin Maechler's
	message of "Tue, 29 Aug 2006 10:44:59 +0200")
References: <m2wt8sgyo0.fsf@ziti.fhcrc.org>
	<17651.65163.240840.365787@stat.math.ethz.ch>
Message-ID: <m2veobfw3r.fsf@ziti.fhcrc.org>

Martin Maechler <maechler at stat.math.ethz.ch> writes:
> I like the idea and will look into applying the patch
> (note there's at least one typo which makes "make check" fail:
>  /priotiry/)

Great.  Sorry for the typo, I've sent an update privately.

> A propos:
>
> A while back (in last summer?), we (some of R-core) have
> discussed about a new field to be added to DESCRIPTION,
> and AFAIR, the only problem we had, is to find a name we
> all liked.
> Or was there more then the name alone, and some where convinced
> that it is superfluous and hence too complicated.
>
> The idea was a field related to but weaker than 'Suggests' :
> Something like
>      'canMakeUseOf: <pkg1> [, <pkg2>, ... ]
> which is *not* used in any QA/QC checking, but is purely
> informative: If <pkg1> is require()able, then some examples may
> look nicer, a function may provide another feature, etc, etc.
> Alternatives to 'canMakeUseOf' would have been
> 'isHappilyCoworkingWith' ....
>
> What do you (R-devel listeners) think about the idea?

Some thoughts:

* Beyond strict dependencies, it is useful for a package to be able to
  declare that it "can use" other packages to provide additional
  features _which may be platform specific_.

* It is useful to be able to check the non-optional parts when
  non-essential packages are not available.  In the case of platform
  specific optional features, this is essential.  Otherwise it would
  be impossible to ever run check.

* Package vignettes, used heavily in Bioconductor, often require a set
  of packages to be available to provide data and functions for a
  coherent example analysis.  These extra packages are often not used
  directly by the package itself (neither dependency nor "can use").
  A similar issue arises for examples included in package
  documentation.

* It is useful to be able to check only those vignettes and examples
  where the required packages available.

* If I were a new user/developer coming to R and read about Depends,
  Suggests, and CanMakeUseOf, I would likely be confused.

With that in mind, I wonder if:

  Suggests could mean "can use" and a compromise of some sort be
  established w.r.t. to R CMD check (similar to --no-vignettes).

  Depends.examples (or similar) be added which lists dependencies for
  documentation examples and vignettes.  

Best Wishes,

+ seth



From h.wickham at gmail.com  Tue Aug 29 16:46:14 2006
From: h.wickham at gmail.com (hadley wickham)
Date: Tue, 29 Aug 2006 09:46:14 -0500
Subject: [Rd] Capturing warnings with capture.output
Message-ID: <f8e6ff050608290746x420b56e7i5c7d7fabea9a9c98@mail.gmail.com>

Is there any way to include warnings in the output from capture.output?  eg:

a <- capture.output(warning("test"))
all.equal(a, "Warning message: \n test ")

Conceptually, this seems like redirecting stderr to stdout, or somehow
changing warning to simple print it's output.  I've had a look at
tryCatch and using a warning handler, but this terminates execution at
the warning.

Thanks,

Hadley



From Robert.McGehee at geodecapital.com  Tue Aug 29 16:31:03 2006
From: Robert.McGehee at geodecapital.com (McGehee, Robert)
Date: Tue, 29 Aug 2006 10:31:03 -0400
Subject: [Rd] 'CanMakeUseOf' field  [was ".. Add 'fields' argument ..]
Message-ID: <67DCA285A2D7754280D3B8E88EB548020C9468F4@MSGBOSCLB2WIN.DMN1.FMR.COM>

CanUse?

If the 'Suggests' field "lists packages that are not necessarily needed"
(Writing R Extensions), then why is the user required to have the
package installed to pass R CMD check? Likewise, if a CanMakeUseOf field
is added, then why would one choose to use Suggests at all? That is, is
there an advantage to requiring that the user have a package available
(to pass R CMD check) even if they do not need to load it to get
functionality?

I occasionally write functions of the form:
	if (require(pkg)) optimizedCode() else regularCode()
which works better for users who have installed additional packages, but
does not fail if the user has not. Such a field would be a nice addition
to inform users that getting an additional package might be
advantageous.

Cheers,
Robert

-----Original Message-----
From: r-devel-bounces at r-project.org
[mailto:r-devel-bounces at r-project.org] On Behalf Of Martin Maechler
Sent: Tuesday, August 29, 2006 10:13 AM
To: Paul Gilbert
Cc: r-devel at stat.math.ethz.ch
Subject: Re: [Rd] 'CanMakeUseOf' field [was ".. Add 'fields' argument
..]

>>>>> "PaulG" == Paul Gilbert <pgilbert at bank-banque-canada.ca>
>>>>>     on Tue, 29 Aug 2006 09:55:09 -0400 writes:

    PaulG> Martin Maechler wrote:
    >> ...
    >> 
    >> The idea was a field related to but weaker than 'Suggests' :
    >> Something like
    >> 'canMakeUseOf: <pkg1> [, <pkg2>, ... ]
    >> which is *not* used in any QA/QC checking, but is purely
    >> informative: If <pkg1> is require()able, then some examples may
    >> look nicer, a function may provide another feature, etc, etc.
    >> Alternatives to 'canMakeUseOf' would have been
    >> 'isHappilyCoworkingWith' ....
    >> 
    >> What do you (R-devel listeners) think about the idea?

    PaulG> I still like this idea.  I prefer 'canMakeUseOf' to 
    PaulG> 'isHappilyCoworkingWith'  mainly because it seems less
ambiguous.

Thanks, Paul.
As you may have guessed I should have put a  " :-) "  beside the
'isHappily...' .

Of course, even 'CanMakeUseOf' {we should capitalize the first letter}
is rather too long, but before finding the proper term, we should
agree on usefulness of such a new field.
Apart from the use of package authors {some could note that
other packages make use of theirs, without already depending on
or suggesting them}, it's one of those fields that should help
in the future to explore (e.g. cluster or neighborhood-graph)
the growing high-dimensional space of R packages.

Martin

______________________________________________
R-devel at r-project.org mailing list
https://stat.ethz.ch/mailman/listinfo/r-devel



From ggrothendieck at gmail.com  Tue Aug 29 16:56:41 2006
From: ggrothendieck at gmail.com (Gabor Grothendieck)
Date: Tue, 29 Aug 2006 10:56:41 -0400
Subject: [Rd] PATCH: Add fields argument to installed.packages and
	available.packages
In-Reply-To: <17651.65163.240840.365787@stat.math.ethz.ch>
References: <m2wt8sgyo0.fsf@ziti.fhcrc.org>
	<17651.65163.240840.365787@stat.math.ethz.ch>
Message-ID: <971536df0608290756k34136704ja820ba01487c3513@mail.gmail.com>

Rather than a plethora of fields, perhaps the Depends field could indicate
what depends on the object:  For example, if we use file extensions to
indicate what is dependent then one might write this to indicate that
some .Rd (i.e. examples) and .Rnw (i.e. vignette) files depend on lattice
and the entire package depends on zoo and the package is related to
but not dependent on tseries:

Depends: lattice (.Rd, .Rnw), grid (.Rnw), zoo, tseries (0)

Then there could be rules for each such suffix when processing
the package.

This has the advantage that its meaning is more obvious than a bunch
of keywords (Depends, Suggests, CanUse, Related).


On 8/29/06, Martin Maechler <maechler at stat.math.ethz.ch> wrote:
> >>>>> "Seth" == Seth Falcon <sfalcon at fhcrc.org>
> >>>>>     on Mon, 28 Aug 2006 17:42:39 -0700 writes:
>
>    Seth> Hi all, The write_PACKAGES function has a 'fields'
>    Seth> argument that allows a user generating a PACKAGES file
>    Seth> to specify additional fields to include.  For
>    Seth> symmetry, it would be nice for the available.packages
>    Seth> function to be able to read those extra fields when
>    Seth> specified.
>
>    Seth> Similarly, it would be useful for installed.packages
>    Seth> to have a 'fields' argument.  This would allow a user
>    Seth> to query the set of installed packages for other
>    Seth> fields in the DESCRIPTION file.
>
>    Seth> One use for this would be for repository hosters to
>    Seth> include the License field in their PACKAGES file.  In
>    Seth> this way, end users could query a repository and only
>    Seth> download packages that they have a license to use.
>
>    Seth> Below is a patch against svn 38996 that attempts to
>    Seth> implement this.
>
> I like the idea and will look into applying the patch
> (note there's at least one typo which makes "make check" fail:
>  /priotiry/)
>
> A propos:
>
> A while back (in last summer?), we (some of R-core) have
> discussed about a new field to be added to DESCRIPTION,
> and AFAIR, the only problem we had, is to find a name we
> all liked.
> Or was there more then the name alone, and some where convinced
> that it is superfluous and hence too complicated.
>
> The idea was a field related to but weaker than 'Suggests' :
> Something like
>     'canMakeUseOf: <pkg1> [, <pkg2>, ... ]
> which is *not* used in any QA/QC checking, but is purely
> informative: If <pkg1> is require()able, then some examples may
> look nicer, a function may provide another feature, etc, etc.
> Alternatives to 'canMakeUseOf' would have been
> 'isHappilyCoworkingWith' ....
>
> What do you (R-devel listeners) think about the idea?
>
> Martin
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>



From ggrothendieck at gmail.com  Tue Aug 29 17:07:43 2006
From: ggrothendieck at gmail.com (Gabor Grothendieck)
Date: Tue, 29 Aug 2006 11:07:43 -0400
Subject: [Rd] Capturing warnings with capture.output
In-Reply-To: <f8e6ff050608290746x420b56e7i5c7d7fabea9a9c98@mail.gmail.com>
References: <f8e6ff050608290746x420b56e7i5c7d7fabea9a9c98@mail.gmail.com>
Message-ID: <971536df0608290807m607951f8j6ded7cba36e7c5c9@mail.gmail.com>

Something like this which displays the warnings and also writes
them to out so that they are captured:

out <- capture.output(
   withCallingHandlers({
	print(1)
	warning("A warning.")
	print(2)
	warning("Another warning.")
	print(3)
   }, warning = function(x) cat(x$message, "\n"))
)

print(out)


On 8/29/06, hadley wickham <h.wickham at gmail.com> wrote:
> Is there any way to include warnings in the output from capture.output?  eg:
>
> a <- capture.output(warning("test"))
> all.equal(a, "Warning message: \n test ")
>
> Conceptually, this seems like redirecting stderr to stdout, or somehow
> changing warning to simple print it's output.  I've had a look at
> tryCatch and using a warning handler, but this terminates execution at
> the warning.
>
> Thanks,
>
> Hadley
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>



From sego at vt.edu  Tue Aug 29 17:43:03 2006
From: sego at vt.edu (sego at vt.edu)
Date: Tue, 29 Aug 2006 17:43:03 +0200 (CEST)
Subject: [Rd] arguments to boxplot( ) not passed to bxp() (PR#9183)
Message-ID: <20060829154303.7C00E28EB7@slim.kubism.ku.dk>

Full_Name: Landon Sego
Version: 2.3.1
OS: Windows
Submission from: (NULL) (130.20.54.241)


# When calling boxplot(), shouldn't the "axes" and "frame.plot"
# arguments get passed down to bxp()?  

# Two examples where the "frame.plot" and "axes" arguments
# don't seem to work the way one would anticipate:
X <- data.frame(x=as.factor(rep(c(1,2,3), 10)), y=rnorm(30))

# Removes the axes, but doesn't frame the plot
boxplot(y~x, data=X, axes=FALSE, frame.plot=TRUE)  

# Both axes and frame are present
boxplot(y~x, data=X, axes=TRUE, frame.plot=FALSE)  

# However, if we explictly use bxp(), the arguments work as
# we would expect:
Y <- boxplot(y~x, data=X, plot=FALSE)

# Frames plot and no axes
bxp(Y, frame.plot=TRUE, axes=FALSE)

# Produces axes with no frame
bxp(Y, frame.plot=FALSE)

# If I'm mistaken (or misinformed) and this isn't a bug,
# please accept my apologies in advance.



From murdoch at stats.uwo.ca  Tue Aug 29 17:45:22 2006
From: murdoch at stats.uwo.ca (Duncan Murdoch)
Date: Tue, 29 Aug 2006 11:45:22 -0400
Subject: [Rd] 'CanMakeUseOf' field  [was ".. Add 'fields' argument ..]
In-Reply-To: <17652.19292.998960.686119@stat.math.ethz.ch>
References: <m2wt8sgyo0.fsf@ziti.fhcrc.org>	<17651.65163.240840.365787@stat.math.ethz.ch>	<44F4473D.9030203@bank-banque-canada.ca>
	<17652.19292.998960.686119@stat.math.ethz.ch>
Message-ID: <44F46112.7060809@stats.uwo.ca>

On 8/29/2006 10:12 AM, Martin Maechler wrote:
>>>>>> "PaulG" == Paul Gilbert <pgilbert at bank-banque-canada.ca>
>>>>>>     on Tue, 29 Aug 2006 09:55:09 -0400 writes:
> 
>     PaulG> Martin Maechler wrote:
>     >> ...
>     >> 
>     >> The idea was a field related to but weaker than 'Suggests' :
>     >> Something like
>     >> 'canMakeUseOf: <pkg1> [, <pkg2>, ... ]
>     >> which is *not* used in any QA/QC checking, but is purely
>     >> informative: If <pkg1> is require()able, then some examples may
>     >> look nicer, a function may provide another feature, etc, etc.
>     >> Alternatives to 'canMakeUseOf' would have been
>     >> 'isHappilyCoworkingWith' ....
>     >> 
>     >> What do you (R-devel listeners) think about the idea?
> 
>     PaulG> I still like this idea.  I prefer 'canMakeUseOf' to 
>     PaulG> 'isHappilyCoworkingWith'  mainly because it seems less ambiguous.
> 
> Thanks, Paul.
> As you may have guessed I should have put a  " :-) "  beside the
> 'isHappily...' .
> 
> Of course, even 'CanMakeUseOf' {we should capitalize the first letter}
> is rather too long, but before finding the proper term, we should
> agree on usefulness of such a new field.
> Apart from the use of package authors {some could note that
> other packages make use of theirs, without already depending on
> or suggesting them}, it's one of those fields that should help
> in the future to explore (e.g. cluster or neighborhood-graph)
> the growing high-dimensional space of R packages.

I think we need an option to R CMD check rather than a new field in the 
DESCRIPTION.  Currently a package could be mentioned for any of these 
reasons:

1.  To make functions, examples or vignettes work
2.  To allow optional functionality in functions, examples or vignettes.
3.  Because it contains complementary functions.

I don't think we really need to worry about 3:  it should be contained 
in 1 or 2, if reasonably complete examples are given.

Case 1 is handled by Depends.

An author should check case 2 both with and without the suggested 
package.  A user  might be satisfied with a simple check "as things 
currently stand", or might want a stringent check like the author wants. 
  The author can't know that, because it will depend on the user.

So I don't think this is something that should be changed in 
DESCRIPTION.  There should be an option to R CMD check to include or 
exclude packages mentioned in the Suggests entry.  (I'd suggest a 3 
level option:  check as though they are not available, check as 
currently installed, require that they be available.)

Duncan Murdoch



From sfalcon at fhcrc.org  Tue Aug 29 17:58:48 2006
From: sfalcon at fhcrc.org (Seth Falcon)
Date: Tue, 29 Aug 2006 08:58:48 -0700
Subject: [Rd] 'CanMakeUseOf' field
In-Reply-To: <44F46112.7060809@stats.uwo.ca> (Duncan Murdoch's message of "Tue,
	29 Aug 2006 11:45:22 -0400")
References: <m2wt8sgyo0.fsf@ziti.fhcrc.org>
	<17651.65163.240840.365787@stat.math.ethz.ch>
	<44F4473D.9030203@bank-banque-canada.ca>
	<17652.19292.998960.686119@stat.math.ethz.ch>
	<44F46112.7060809@stats.uwo.ca>
Message-ID: <m2d5ajedon.fsf@ziti.fhcrc.org>

Duncan Murdoch <murdoch at stats.uwo.ca> writes:
> I think we need an option to R CMD check rather than a new field in the 
> DESCRIPTION.  Currently a package could be mentioned for any of these 
> reasons:
>
> 1.  To make functions, examples or vignettes work
> 2.  To allow optional functionality in functions, examples or vignettes.
> 3.  Because it contains complementary functions.
>
> I don't think we really need to worry about 3:  it should be contained 
> in 1 or 2, if reasonably complete examples are given.
>
> Case 1 is handled by Depends.

I think there is an important distinction between a dependency needed
for the package to function and a dependency needed to demonstrate
said functionality via an example or vignette.  The former is what
Depends is about, the latter is something else (Suggests).

> An author should check case 2 both with and without the suggested 
> package.  A user  might be satisfied with a simple check "as things 
> currently stand", or might want a stringent check like the author wants. 
>   The author can't know that, because it will depend on the user.
>
> So I don't think this is something that should be changed in 
> DESCRIPTION.  There should be an option to R CMD check to include or 
> exclude packages mentioned in the Suggests entry.  (I'd suggest a 3 
> level option:  check as though they are not available, check as 
> currently installed, require that they be available.)

I like this approach and agree in general that a solution involving
changes to R CMD check might be the best as opposed to adding fields.

+ seth



From murdoch at stats.uwo.ca  Tue Aug 29 19:00:05 2006
From: murdoch at stats.uwo.ca (Duncan Murdoch)
Date: Tue, 29 Aug 2006 13:00:05 -0400
Subject: [Rd] 'CanMakeUseOf' field
In-Reply-To: <m2d5ajedon.fsf@ziti.fhcrc.org>
References: <m2wt8sgyo0.fsf@ziti.fhcrc.org>	<17651.65163.240840.365787@stat.math.ethz.ch>	<44F4473D.9030203@bank-banque-canada.ca>	<17652.19292.998960.686119@stat.math.ethz.ch>	<44F46112.7060809@stats.uwo.ca>
	<m2d5ajedon.fsf@ziti.fhcrc.org>
Message-ID: <44F47295.2050207@stats.uwo.ca>

On 8/29/2006 11:58 AM, Seth Falcon wrote:
> Duncan Murdoch <murdoch at stats.uwo.ca> writes:
>> I think we need an option to R CMD check rather than a new field in the 
>> DESCRIPTION.  Currently a package could be mentioned for any of these 
>> reasons:
>>
>> 1.  To make functions, examples or vignettes work
>> 2.  To allow optional functionality in functions, examples or vignettes.
>> 3.  Because it contains complementary functions.
>>
>> I don't think we really need to worry about 3:  it should be contained 
>> in 1 or 2, if reasonably complete examples are given.
>>
>> Case 1 is handled by Depends.
> 
> I think there is an important distinction between a dependency needed
> for the package to function and a dependency needed to demonstrate
> said functionality via an example or vignette.  The former is what
> Depends is about, the latter is something else (Suggests).

Yes, that's a good point, especially with vignettes.  Only the package 
author needs to be able to run them.

But maybe examples should be considered broken if they don't work. Users 
should be able to expect example(foo) not to generate an error.  Package 
authors should wrap optional examples in code like if (require(...)).

Duncan Murdoch


> 
>> An author should check case 2 both with and without the suggested 
>> package.  A user  might be satisfied with a simple check "as things 
>> currently stand", or might want a stringent check like the author wants. 
>>   The author can't know that, because it will depend on the user.
>>
>> So I don't think this is something that should be changed in 
>> DESCRIPTION.  There should be an option to R CMD check to include or 
>> exclude packages mentioned in the Suggests entry.  (I'd suggest a 3 
>> level option:  check as though they are not available, check as 
>> currently installed, require that they be available.)
> 
> I like this approach and agree in general that a solution involving
> changes to R CMD check might be the best as opposed to adding fields.
> 
> + seth
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel



From pgilbert at bank-banque-canada.ca  Tue Aug 29 19:05:56 2006
From: pgilbert at bank-banque-canada.ca (Paul Gilbert)
Date: Tue, 29 Aug 2006 13:05:56 -0400
Subject: [Rd] 'CanMakeUseOf' field  [was ".. Add 'fields' argument ..]
In-Reply-To: <44F46112.7060809@stats.uwo.ca>
References: <m2wt8sgyo0.fsf@ziti.fhcrc.org>	<17651.65163.240840.365787@stat.math.ethz.ch>	<44F4473D.9030203@bank-banque-canada.ca>
	<17652.19292.998960.686119@stat.math.ethz.ch>
	<44F46112.7060809@stats.uwo.ca>
Message-ID: <44F473F4.1020607@bank-banque-canada.ca>



Duncan Murdoch wrote:

> On 8/29/2006 10:12 AM, Martin Maechler wrote:
>
>>>>>>> "PaulG" == Paul Gilbert <pgilbert at bank-banque-canada.ca>
>>>>>>>     on Tue, 29 Aug 2006 09:55:09 -0400 writes:
>>>>>>
>>
>>     PaulG> Martin Maechler wrote:
>>     >> ...
>>     >>     >> The idea was a field related to but weaker than 
>> 'Suggests' :
>>     >> Something like
>>     >> 'canMakeUseOf: <pkg1> [, <pkg2>, ... ]
>>     >> which is *not* used in any QA/QC checking, but is purely
>>     >> informative: If <pkg1> is require()able, then some examples may
>>     >> look nicer, a function may provide another feature, etc, etc.
>>     >> Alternatives to 'canMakeUseOf' would have been
>>     >> 'isHappilyCoworkingWith' ....
>>     >>     >> What do you (R-devel listeners) think about the idea?
>>
>>     PaulG> I still like this idea.  I prefer 'canMakeUseOf' to     
>> PaulG> 'isHappilyCoworkingWith'  mainly because it seems less ambiguous.
>>
>> Thanks, Paul.
>> As you may have guessed I should have put a  " :-) "  beside the
>> 'isHappily...' .
>>
>> Of course, even 'CanMakeUseOf' {we should capitalize the first letter}
>> is rather too long, but before finding the proper term, we should
>> agree on usefulness of such a new field.
>> Apart from the use of package authors {some could note that
>> other packages make use of theirs, without already depending on
>> or suggesting them}, it's one of those fields that should help
>> in the future to explore (e.g. cluster or neighborhood-graph)
>> the growing high-dimensional space of R packages.
>
>
> I think we need an option to R CMD check rather than a new field in 
> the DESCRIPTION.  Currently a package could be mentioned for any of 
> these reasons:
>
> 1.  To make functions, examples or vignettes work
> 2.  To allow optional functionality in functions, examples or vignettes.
> 3.  Because it contains complementary functions.
>
> I don't think we really need to worry about 3:  it should be contained 
> in 1 or 2, if reasonably complete examples are given.
>
> Case 1 is handled by Depends.

Well, from "Writing R Extensions"
   The optional  Suggests  field uses the same syntax as  Depends  and 
lists packages that are not
   necessarily needed. This includes packages used only in examples or 
vignettes

So case 1 is handled by the combination of Depends and Suggests, and we 
need something to handle case 2.

The related question is whether the CRAN checks should  try to check 2, 
or perhaps there needs to be 2a and 2b.  There are cababilities (and 
data) that CRAN may not have, so it would be nice distinguish things 
that should be checked on CRAN from things that should not be.

Paul

>
> An author should check case 2 both with and without the suggested 
> package.  A user  might be satisfied with a simple check "as things 
> currently stand", or might want a stringent check like the author 
> wants.  The author can't know that, because it will depend on the user.
>
> So I don't think this is something that should be changed in 
> DESCRIPTION.  There should be an option to R CMD check to include or 
> exclude packages mentioned in the Suggests entry.  (I'd suggest a 3 
> level option:  check as though they are not available, check as 
> currently installed, require that they be available.)
>
> Duncan Murdoch
====================================================================================

La version fran?aise suit le texte anglais.

------------------------------------------------------------------------------------

This email may contain privileged and/or confidential inform...{{dropped}}



From murdoch at stats.uwo.ca  Tue Aug 29 19:22:33 2006
From: murdoch at stats.uwo.ca (Duncan Murdoch)
Date: Tue, 29 Aug 2006 13:22:33 -0400
Subject: [Rd] 'CanMakeUseOf' field  [was ".. Add 'fields' argument ..]
In-Reply-To: <44F473F4.1020607@bank-banque-canada.ca>
References: <m2wt8sgyo0.fsf@ziti.fhcrc.org>	<17651.65163.240840.365787@stat.math.ethz.ch>	<44F4473D.9030203@bank-banque-canada.ca>	<17652.19292.998960.686119@stat.math.ethz.ch>	<44F46112.7060809@stats.uwo.ca>
	<44F473F4.1020607@bank-banque-canada.ca>
Message-ID: <44F477D9.7090909@stats.uwo.ca>

On 8/29/2006 1:05 PM, Paul Gilbert wrote:
> 
> Duncan Murdoch wrote:
> 
>> On 8/29/2006 10:12 AM, Martin Maechler wrote:
>>
>>>>>>>> "PaulG" == Paul Gilbert <pgilbert at bank-banque-canada.ca>
>>>>>>>>     on Tue, 29 Aug 2006 09:55:09 -0400 writes:
>>>>>>>
>>>
>>>     PaulG> Martin Maechler wrote:
>>>     >> ...
>>>     >>     >> The idea was a field related to but weaker than 
>>> 'Suggests' :
>>>     >> Something like
>>>     >> 'canMakeUseOf: <pkg1> [, <pkg2>, ... ]
>>>     >> which is *not* used in any QA/QC checking, but is purely
>>>     >> informative: If <pkg1> is require()able, then some examples may
>>>     >> look nicer, a function may provide another feature, etc, etc.
>>>     >> Alternatives to 'canMakeUseOf' would have been
>>>     >> 'isHappilyCoworkingWith' ....
>>>     >>     >> What do you (R-devel listeners) think about the idea?
>>>
>>>     PaulG> I still like this idea.  I prefer 'canMakeUseOf' to     
>>> PaulG> 'isHappilyCoworkingWith'  mainly because it seems less ambiguous.
>>>
>>> Thanks, Paul.
>>> As you may have guessed I should have put a  " :-) "  beside the
>>> 'isHappily...' .
>>>
>>> Of course, even 'CanMakeUseOf' {we should capitalize the first letter}
>>> is rather too long, but before finding the proper term, we should
>>> agree on usefulness of such a new field.
>>> Apart from the use of package authors {some could note that
>>> other packages make use of theirs, without already depending on
>>> or suggesting them}, it's one of those fields that should help
>>> in the future to explore (e.g. cluster or neighborhood-graph)
>>> the growing high-dimensional space of R packages.
>>
>>
>> I think we need an option to R CMD check rather than a new field in 
>> the DESCRIPTION.  Currently a package could be mentioned for any of 
>> these reasons:
>>
>> 1.  To make functions, examples or vignettes work
>> 2.  To allow optional functionality in functions, examples or vignettes.
>> 3.  Because it contains complementary functions.
>>
>> I don't think we really need to worry about 3:  it should be contained 
>> in 1 or 2, if reasonably complete examples are given.
>>
>> Case 1 is handled by Depends.
> 
> Well, from "Writing R Extensions"
>    The optional  Suggests  field uses the same syntax as  Depends  and 
> lists packages that are not
>    necessarily needed. This includes packages used only in examples or 
> vignettes

Yes, Seth pointed that out too.  Rather than adding additional levels, 
I'd fix it by changing the wording:

1.  To make functions work.
2.  To make examples and vignettes work, or optional functionality in 
functions.

The point is that there are some packages that are absolutely required 
(listed in Depends), and some that are only sometimes required (listed 
in Suggests).  Gabor's suggestion of labelling how things are used could 
be helpful too, but really even there, there are multiple levels of how 
something is used.

> So case 1 is handled by the combination of Depends and Suggests, and we 
> need something to handle case 2.
> 
> The related question is whether the CRAN checks should  try to check 2, 
> or perhaps there needs to be 2a and 2b.  There are cababilities (and 
> data) that CRAN may not have, so it would be nice distinguish things 
> that should be checked on CRAN from things that should not be.

I'd suggest that CRAN do its checks using the "as currently installed" 
option proposed below.  If a package can't pass tests using what's on 
CRAN, then it should be marked as needing work.

Duncan Murdoch

> 
> Paul
> 
>>
>> An author should check case 2 both with and without the suggested 
>> package.  A user  might be satisfied with a simple check "as things 
>> currently stand", or might want a stringent check like the author 
>> wants.  The author can't know that, because it will depend on the user.
>>
>> So I don't think this is something that should be changed in 
>> DESCRIPTION.  There should be an option to R CMD check to include or 
>> exclude packages mentioned in the Suggests entry.  (I'd suggest a 3 
>> level option:  check as though they are not available, check as 
>> currently installed, require that they be available.)
>>
>> Duncan Murdoch
> ====================================================================================
> 
> La version fran?aise suit le texte anglais.
> 
> ------------------------------------------------------------------------------------
> 
> This email may contain privileged and/or confidential info...{{dropped}}



From sfalcon at fhcrc.org  Tue Aug 29 19:53:28 2006
From: sfalcon at fhcrc.org (Seth Falcon)
Date: Tue, 29 Aug 2006 10:53:28 -0700
Subject: [Rd] 'CanMakeUseOf' field
In-Reply-To: <44F47295.2050207@stats.uwo.ca> (Duncan Murdoch's message of "Tue,
	29 Aug 2006 13:00:05 -0400")
References: <m2wt8sgyo0.fsf@ziti.fhcrc.org>
	<17651.65163.240840.365787@stat.math.ethz.ch>
	<44F4473D.9030203@bank-banque-canada.ca>
	<17652.19292.998960.686119@stat.math.ethz.ch>
	<44F46112.7060809@stats.uwo.ca> <m2d5ajedon.fsf@ziti.fhcrc.org>
	<44F47295.2050207@stats.uwo.ca>
Message-ID: <m28xl7ctt3.fsf@ziti.fhcrc.org>

Duncan Murdoch <murdoch at stats.uwo.ca> writes:
> On 8/29/2006 11:58 AM, Seth Falcon wrote:
>> I think there is an important distinction between a dependency needed
>> for the package to function and a dependency needed to demonstrate
>> said functionality via an example or vignette.  The former is what
>> Depends is about, the latter is something else (Suggests).
>
> Yes, that's a good point, especially with vignettes.  Only the package
> author needs to be able to run them.

Yes, but just to keep things clear: the value of vignettes is that
users can follow along.  So the ability to programatically identify
the extra required packages is valuable.

> But maybe examples should be considered broken if they don't
> work. Users should be able to expect example(foo) not to generate an
> error.  Package authors should wrap optional examples in code like if
> (require(...)).

I agree.  As with vignettes, there is value in users being able to
follow along and it would be nice to have a programatic way to
identify extra package needed for fancy/involved/optional examples.

Best,

+ seth



From pgilbert at bank-banque-canada.ca  Tue Aug 29 20:24:27 2006
From: pgilbert at bank-banque-canada.ca (Paul Gilbert)
Date: Tue, 29 Aug 2006 14:24:27 -0400
Subject: [Rd] 'CanMakeUseOf' field
In-Reply-To: <m28xl7ctt3.fsf@ziti.fhcrc.org>
References: <m2wt8sgyo0.fsf@ziti.fhcrc.org>	<17651.65163.240840.365787@stat.math.ethz.ch>	<44F4473D.9030203@bank-banque-canada.ca>	<17652.19292.998960.686119@stat.math.ethz.ch>	<44F46112.7060809@stats.uwo.ca>
	<m2d5ajedon.fsf@ziti.fhcrc.org>	<44F47295.2050207@stats.uwo.ca>
	<m28xl7ctt3.fsf@ziti.fhcrc.org>
Message-ID: <44F4865B.5010107@bank-banque-canada.ca>

Seth Falcon wrote:

>Duncan Murdoch <murdoch at stats.uwo.ca> writes:
>  
>
>>On 8/29/2006 11:58 AM, Seth Falcon wrote:
>>    
>>
>>>I think there is an important distinction between a dependency needed
>>>for the package to function and a dependency needed to demonstrate
>>>said functionality via an example or vignette.  The former is what
>>>Depends is about, the latter is something else (Suggests).
>>>      
>>>
>>Yes, that's a good point, especially with vignettes.  Only the package
>>author needs to be able to run them.
>>    
>>
>
>Yes, but just to keep things clear: the value of vignettes is that
>users can follow along.  So the ability to programatically identify
>the extra required packages is valuable.
>
>  
>
>>But maybe examples should be considered broken if they don't
>>work. Users should be able to expect example(foo) not to generate an
>>error.  Package authors should wrap optional examples in code like if
>>(require(...)).
>>    
>>
This is a work around that is ok for the developer's testing and to 
prevent failure on CRAN, and I use it. But, other than actually reading 
the examples, it provides no hints to other testers or users about 
things that might be installed, or installed first, to give more 
complete testing and more functionality.

Looking toward the future, I think it would be useful to have a standard 
mechanism to indicate extensions that are available in a package, and 
might be tested and used, but are not necessarily available on CRAN. For 
instance, an example might access to a purchased database or take 
advantage of  a computer cluster. It seems limiting to think that all 
testing that cannot be done on CRAN must be done almost exclusively by 
the developer.

Paul

>
>I agree.  As with vignettes, there is value in users being able to
>follow along and it would be nice to have a programatic way to
>identify extra package needed for fancy/involved/optional examples.
>
>Best,
>
>+ seth
>
>______________________________________________
>R-devel at r-project.org mailing list
>https://stat.ethz.ch/mailman/listinfo/r-devel
>  
>
====================================================================================

La version fran?aise suit le texte anglais.

------------------------------------------------------------------------------------

This email may contain privileged and/or confidential inform...{{dropped}}



From murdoch at stats.uwo.ca  Tue Aug 29 20:58:07 2006
From: murdoch at stats.uwo.ca (Duncan Murdoch)
Date: Tue, 29 Aug 2006 14:58:07 -0400
Subject: [Rd] 'CanMakeUseOf' field
In-Reply-To: <44F4865B.5010107@bank-banque-canada.ca>
References: <m2wt8sgyo0.fsf@ziti.fhcrc.org>	<17651.65163.240840.365787@stat.math.ethz.ch>	<44F4473D.9030203@bank-banque-canada.ca>	<17652.19292.998960.686119@stat.math.ethz.ch>	<44F46112.7060809@stats.uwo.ca>	<m2d5ajedon.fsf@ziti.fhcrc.org>	<44F47295.2050207@stats.uwo.ca>	<m28xl7ctt3.fsf@ziti.fhcrc.org>
	<44F4865B.5010107@bank-banque-canada.ca>
Message-ID: <44F48E3F.6070903@stats.uwo.ca>

On 8/29/2006 2:24 PM, Paul Gilbert wrote:
> Seth Falcon wrote:
> 
>>Duncan Murdoch <murdoch at stats.uwo.ca> writes:
>>  
>>
>>>On 8/29/2006 11:58 AM, Seth Falcon wrote:
>>>    
>>>
>>>>I think there is an important distinction between a dependency needed
>>>>for the package to function and a dependency needed to demonstrate
>>>>said functionality via an example or vignette.  The former is what
>>>>Depends is about, the latter is something else (Suggests).
>>>>      
>>>>
>>>Yes, that's a good point, especially with vignettes.  Only the package
>>>author needs to be able to run them.
>>>    
>>>
>>
>>Yes, but just to keep things clear: the value of vignettes is that
>>users can follow along.  So the ability to programatically identify
>>the extra required packages is valuable.
>>
>>  
>>
>>>But maybe examples should be considered broken if they don't
>>>work. Users should be able to expect example(foo) not to generate an
>>>error.  Package authors should wrap optional examples in code like if
>>>(require(...)).
>>>    
>>>
> This is a work around that is ok for the developer's testing and to 
> prevent failure on CRAN, and I use it. But, other than actually reading 
> the examples, it provides no hints to other testers or users about 
> things that might be installed, or installed first, to give more 
> complete testing and more functionality.

I'm not saying to use this instead of Suggests, I'm saying to do both. 
This way the Suggests entries really are suggestions:  the examples will 
run with or without the presence of the suggested packages.

I think there are so many variations on when a Suggested package should 
be installed, that it's not reasonable to expect to be able to encode 
them all in a machine readable way.  They should be documented in human 
readable format.

> Looking toward the future, I think it would be useful to have a standard 
> mechanism to indicate extensions that are available in a package, and 
> might be tested and used, but are not necessarily available on CRAN. For 
> instance, an example might access to a purchased database or take 
> advantage of  a computer cluster. It seems limiting to think that all 
> testing that cannot be done on CRAN must be done almost exclusively by 
> the developer.

If by "mechanism" you mean human-readable documentation, I agree with 
this.

Duncan Murdoch

> 
> Paul
> 
>>
>>I agree.  As with vignettes, there is value in users being able to
>>follow along and it would be nice to have a programatic way to
>>identify extra package needed for fancy/involved/optional examples.
>>
>>Best,
>>
>>+ seth
>>
>>______________________________________________
>>R-devel at r-project.org mailing list
>>https://stat.ethz.ch/mailman/listinfo/r-devel
>>  
>>
> ====================================================================================
> 
> La version fran?aise suit le texte anglais.
> 
> ------------------------------------------------------------------------------------
> 
> This email may contain privileged and/or confidential inform...{{dropped}}
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel



From ripley at stats.ox.ac.uk  Tue Aug 29 21:29:33 2006
From: ripley at stats.ox.ac.uk (Prof Brian Ripley)
Date: Tue, 29 Aug 2006 20:29:33 +0100 (BST)
Subject: [Rd] Speed of runif() on different Operating Systems
In-Reply-To: <44F2FC78.3040106@mx.uni-saarland.de>
References: <44F2FC78.3040106@mx.uni-saarland.de>
Message-ID: <Pine.LNX.4.64.0608281535580.652@gannet.stats.ox.ac.uk>

No one else seems to have responded to this.

Please see `Writing R Extensions' for how to time things in R.

For things like this, the fine details of how well the compiler keeps the 
pipelines and cache filled are important, as is the cache size and 
memory speed.  Using

system.time(for (i in 1:500) ttt <- runif(1000000))

your Linux time looks slow, indeed slower than the only 32-bit Linux box I 
have left (a 2GHz 512Kb cache Xeon) and 2.5x slower than a 64-bit R on an 
2.2GHz Opteron (which is doing a lot of other work and so only giving 
about 30% of one of its processors to R: the elapsed time was much 
longer).

The binary distribution of R for Windows is compiled with -O3: for some 
tasks it makes a lot of difference and this might just be one.

However, what can you usefully do in R with 5e8 random uniforms in 
anything like a minute, let alone the aggregate time this list will spend 
reading your question?  If it matters to you, investigate the code your 
compiler creates.  (The ATLAS developers report very poor performance on 
certain Pentiums for certain versions of gcc4.)

On Mon, 28 Aug 2006, Martin Becker wrote:

> Dear list,
> 
> I have noticed surprisingly big performance differences of runif() 
> between Windows XP and (Debian) linux on similar CPUs (Pentium D 3.0GHz 
> (WinXP)/3.2GHz (Linux)) and I wonder if there is a simple explanation 
> for the difference.
> On a linux system (with a slightly better CPU and 1GB more RAM), 
> execution of runif() seems to consume about 80% more CPU time than on a 
> Windows XP system.
> On a Xeon 2.7GHz (Debian) linux I have checked, that using the .deb - 
> i386 - Version of R instead of a self-build i686 - version has no 
> noticeable effect on speed.
> Measuring CPU time with Rprof() instead of Sys.time()-differences yields 
> similar results.

You are not measuring CPU time at all with Sys.time.


> Any hint is appreciated, please let me know, if the given information on 
> system/OS or the R output below is not sufficient.
> 
> Regards,
> 
>   Martin Becker
> 
> ------------------------ R - Output  below ------------------------
> 
> Windows XP: (Pentium D, 3.0 GHz)
> 
>  > version
>                _                        
> platform       i386-pc-mingw32          
> arch           i386                     
> os             mingw32                  
> system         i386, mingw32            
> status                                  
> major          2                        
> minor          3.1                      
> year           2006                     
> month          06                       
> day            01                       
> svn rev        38247                    
> language       R                        
> version.string Version 2.3.1 (2006-06-01)
>  > RNGkind()
> [1] "Mersenne-Twister" "Inversion"      
>  > t1<-Sys.time();for (i in 1:500) ttt<-runif(1000000);print(Sys.time()-t1);
> Time difference of 57.969 secs
>  >
> 
> Debian Linux: (Pentium D, 3.2GHz)
> 
>  > version
>                _                        
> platform       i686-pc-linux-gnu        
> arch           i686                     
> os             linux-gnu                
> system         i686, linux-gnu          
> status                                  
> major          2                        
> minor          3.1                      
> year           2006                     
> month          06                       
> day            01                       
> svn rev        38247                    
> language       R                        
> version.string Version 2.3.1 (2006-06-01)
>  > RNGkind()
> [1] "Mersenne-Twister" "Inversion"      
>  > t1<-Sys.time();for (i in 1:500) 
> ttt<-runif(1000000);print(Sys.time()-t1);    
> Time difference of 1.752916 mins
>  >
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
> 

-- 
Brian D. Ripley,                  ripley at stats.ox.ac.uk
Professor of Applied Statistics,  http://www.stats.ox.ac.uk/~ripley/
University of Oxford,             Tel:  +44 1865 272861 (self)
1 South Parks Road,                     +44 1865 272866 (PA)
Oxford OX1 3TG, UK                Fax:  +44 1865 272595



From pgilbert at bank-banque-canada.ca  Tue Aug 29 22:13:21 2006
From: pgilbert at bank-banque-canada.ca (Paul Gilbert)
Date: Tue, 29 Aug 2006 16:13:21 -0400
Subject: [Rd] 'CanMakeUseOf' field
In-Reply-To: <44F48E3F.6070903@stats.uwo.ca>
References: <m2wt8sgyo0.fsf@ziti.fhcrc.org>	<17651.65163.240840.365787@stat.math.ethz.ch>	<44F4473D.9030203@bank-banque-canada.ca>	<17652.19292.998960.686119@stat.math.ethz.ch>	<44F46112.7060809@stats.uwo.ca>	<m2d5ajedon.fsf@ziti.fhcrc.org>	<44F47295.2050207@stats.uwo.ca>	<m28xl7ctt3.fsf@ziti.fhcrc.org>
	<44F4865B.5010107@bank-banque-canada.ca>
	<44F48E3F.6070903@stats.uwo.ca>
Message-ID: <44F49FE1.6040002@bank-banque-canada.ca>



Duncan Murdoch wrote:

> On 8/29/2006 2:24 PM, Paul Gilbert wrote:
>
>> Seth Falcon wrote:
>>
>>> Duncan Murdoch <murdoch at stats.uwo.ca> writes:
>>>  
>>>
>>>> On 8/29/2006 11:58 AM, Seth Falcon wrote:
>>>>   
>>>>
>>>>> I think there is an important distinction between a dependency needed
>>>>> for the package to function and a dependency needed to demonstrate
>>>>> said functionality via an example or vignette.  The former is what
>>>>> Depends is about, the latter is something else (Suggests).
>>>>>     
>>>>
>>>> Yes, that's a good point, especially with vignettes.  Only the package
>>>> author needs to be able to run them.
>>>>   
>>>
>>>
>>> Yes, but just to keep things clear: the value of vignettes is that
>>> users can follow along.  So the ability to programatically identify
>>> the extra required packages is valuable.
>>>
>>>  
>>>
>>>> But maybe examples should be considered broken if they don't
>>>> work. Users should be able to expect example(foo) not to generate an
>>>> error.  Package authors should wrap optional examples in code like if
>>>> (require(...)).
>>>>   
>>>
>> This is a work around that is ok for the developer's testing and to 
>> prevent failure on CRAN, and I use it. But, other than actually 
>> reading the examples, it provides no hints to other testers or users 
>> about things that might be installed, or installed first, to give 
>> more complete testing and more functionality.
>
>
> I'm not saying to use this instead of Suggests, I'm saying to do both. 
> This way the Suggests entries really are suggestions:  the examples 
> will run with or without the presence of the suggested packages.
>
> I think there are so many variations on when a Suggested package 
> should be installed, that it's not reasonable to expect to be able to 
> encode them all in a machine readable way.  They should be documented 
> in human readable format.
>
>> Looking toward the future, I think it would be useful to have a 
>> standard mechanism to indicate extensions that are available in a 
>> package, and might be tested and used, but are not necessarily 
>> available on CRAN. For instance, an example might access to a 
>> purchased database or take advantage of  a computer cluster. It seems 
>> limiting to think that all testing that cannot be done on CRAN must 
>> be done almost exclusively by the developer.
>
>
> If by "mechanism" you mean human-readable documentation, I agree with 
> this.

Yes,  I was think of human-readable and in a standard location, like a 
field in the DESCRIPTION file.  (You are thinking of fields in the 
DESCRIPTION file as human-readable, are you not?)

Paul

>
> Duncan Murdoch
>
>>
>> Paul
>>
>>>
>>> I agree.  As with vignettes, there is value in users being able to
>>> follow along and it would be nice to have a programatic way to
>>> identify extra package needed for fancy/involved/optional examples.
>>>
>>> Best,
>>>
>>> + seth
>>>
>>> ______________________________________________
>>> R-devel at r-project.org mailing list
>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>>  
>>>
>> ==================================================================================== 
>>
>>
>> La version fran?aise suit le texte anglais.
>>
>> ------------------------------------------------------------------------------------ 
>>
>>
>> This email may contain privileged and/or confidential 
>> inform...{{dropped}}
>>
>> ______________________________________________
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel
>
====================================================================================

La version fran?aise suit le texte anglais.

------------------------------------------------------------------------------------

This email may contain privileged and/or confidential inform...{{dropped}}



From murdoch at stats.uwo.ca  Tue Aug 29 22:21:33 2006
From: murdoch at stats.uwo.ca (Duncan Murdoch)
Date: Tue, 29 Aug 2006 16:21:33 -0400
Subject: [Rd] 'CanMakeUseOf' field
In-Reply-To: <44F49FE1.6040002@bank-banque-canada.ca>
References: <m2wt8sgyo0.fsf@ziti.fhcrc.org>	<17651.65163.240840.365787@stat.math.ethz.ch>	<44F4473D.9030203@bank-banque-canada.ca>	<17652.19292.998960.686119@stat.math.ethz.ch>	<44F46112.7060809@stats.uwo.ca>	<m2d5ajedon.fsf@ziti.fhcrc.org>	<44F47295.2050207@stats.uwo.ca>	<m28xl7ctt3.fsf@ziti.fhcrc.org>	<44F4865B.5010107@bank-banque-canada.ca>	<44F48E3F.6070903@stats.uwo.ca>
	<44F49FE1.6040002@bank-banque-canada.ca>
Message-ID: <44F4A1CD.50800@stats.uwo.ca>

On 8/29/2006 4:13 PM, Paul Gilbert wrote:
> 
> Duncan Murdoch wrote:
> 
>> On 8/29/2006 2:24 PM, Paul Gilbert wrote:
>>
>>> Seth Falcon wrote:
>>>
>>>> Duncan Murdoch <murdoch at stats.uwo.ca> writes:
>>>>  
>>>>
>>>>> On 8/29/2006 11:58 AM, Seth Falcon wrote:
>>>>>   
>>>>>
>>>>>> I think there is an important distinction between a dependency needed
>>>>>> for the package to function and a dependency needed to demonstrate
>>>>>> said functionality via an example or vignette.  The former is what
>>>>>> Depends is about, the latter is something else (Suggests).
>>>>>>     
>>>>>
>>>>> Yes, that's a good point, especially with vignettes.  Only the package
>>>>> author needs to be able to run them.
>>>>>   
>>>>
>>>>
>>>> Yes, but just to keep things clear: the value of vignettes is that
>>>> users can follow along.  So the ability to programatically identify
>>>> the extra required packages is valuable.
>>>>
>>>>  
>>>>
>>>>> But maybe examples should be considered broken if they don't
>>>>> work. Users should be able to expect example(foo) not to generate an
>>>>> error.  Package authors should wrap optional examples in code like if
>>>>> (require(...)).
>>>>>   
>>>>
>>> This is a work around that is ok for the developer's testing and to 
>>> prevent failure on CRAN, and I use it. But, other than actually 
>>> reading the examples, it provides no hints to other testers or users 
>>> about things that might be installed, or installed first, to give 
>>> more complete testing and more functionality.
>>
>>
>> I'm not saying to use this instead of Suggests, I'm saying to do both. 
>> This way the Suggests entries really are suggestions:  the examples 
>> will run with or without the presence of the suggested packages.
>>
>> I think there are so many variations on when a Suggested package 
>> should be installed, that it's not reasonable to expect to be able to 
>> encode them all in a machine readable way.  They should be documented 
>> in human readable format.
>>
>>> Looking toward the future, I think it would be useful to have a 
>>> standard mechanism to indicate extensions that are available in a 
>>> package, and might be tested and used, but are not necessarily 
>>> available on CRAN. For instance, an example might access to a 
>>> purchased database or take advantage of  a computer cluster. It seems 
>>> limiting to think that all testing that cannot be done on CRAN must 
>>> be done almost exclusively by the developer.
>>
>>
>> If by "mechanism" you mean human-readable documentation, I agree with 
>> this.
> 
> Yes,  I was think of human-readable and in a standard location, like a 
> field in the DESCRIPTION file.  (You are thinking of fields in the 
> DESCRIPTION file as human-readable, are you not?)

Yes, but I don't think that's necessarily the right place for this. 
What we were going to do this summer was to make it easier to build 
foo-package.Rd files, without duplication of the information in the 
DESCRIPTION file.  I think that man page (or a man page linked from it) 
would be the right place for a detailed discussion like this.

This doesn't address the problem of someone who hasn't got the package 
installed yet, though perhaps CRAN could put a version of that man page 
(or all of them) online for browsing.  Unfortunately this hasn't 
happened yet, but maybe we'll get to it before 2.5.0.

Duncan Murdoch



> 
> Paul
> 
>>
>> Duncan Murdoch
>>
>>>
>>> Paul
>>>
>>>>
>>>> I agree.  As with vignettes, there is value in users being able to
>>>> follow along and it would be nice to have a programatic way to
>>>> identify extra package needed for fancy/involved/optional examples.
>>>>
>>>> Best,
>>>>
>>>> + seth
>>>>
>>>> ______________________________________________
>>>> R-devel at r-project.org mailing list
>>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>>>  
>>>>
>>> ==================================================================================== 
>>>
>>>
>>> La version fran?aise suit le texte anglais.
>>>
>>> ------------------------------------------------------------------------------------ 
>>>
>>>
>>> This email may contain privileged and/or confidential 
>>> inform...{{dropped}}
>>>
>>> ______________________________________________
>>> R-devel at r-project.org mailing list
>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>
> ====================================================================================
> 
> La version fran?aise suit le texte anglais.
> 
> ------------------------------------------------------------------------------------
> 
> This email may contain privileged and/or confidential info...{{dropped}}



From gah4 at u.washington.edu  Wed Aug 30 00:59:13 2006
From: gah4 at u.washington.edu (gah4 at u.washington.edu)
Date: Wed, 30 Aug 2006 00:59:13 +0200 (CEST)
Subject: [Rd] list and pairlist in "Writing R Extensions" (PR#9185)
Message-ID: <20060829225913.66DCE18398@slim.kubism.ku.dk>

Full_Name: Glen Herrmannsfeldt
Version: 2.2.1
OS: Linux
Submission from: (NULL) (128.95.113.77)


Following the discussion in "Writing R Extensions" in section 5.8.2, there
is no indication that showArgs expects a pairlist() instead of a list().

I was trying 

.Call("showArgs",list(one=1,two=2,three=3))

for example, and getting many core dumps.

It wasn't until reading "R Language Definition" that I found out
about pairlist(), as needed.  

The final example:

showArgs<-function(...) .Call("showArgs1",list(...))

looks like a list can be passed to showArgs, but in fact it is showArgs1, which
doesn't seem to be documented at all!

It could be that using pairlist() in 5.8.2 would fix the problem,
but there should be a reference to the difference between list()
and pairlist()

thanks,

-- glen



From pxi at stat.cmu.edu  Tue Aug 29 18:40:45 2006
From: pxi at stat.cmu.edu (pxi at stat.cmu.edu)
Date: Tue, 29 Aug 2006 18:40:45 +0200 (CEST)
Subject: [Rd] rgamma gives zeros. (PR#9184)
Message-ID: <20060829164045.936A4AB7A@slim.kubism.ku.dk>

Full_Name: Peiyi Xi
Version: R 2.2.0
OS: Windows XP Professional
Submission from: (NULL) (128.2.3.141)


When I use rgamma(n, shape, rate ) to generate gamma samples, it
gives zeros when both shape and rate are very small.

But we know that if x follows a gamma distribution, x should be positive.

e.g.
> temp=rgamma(10, 0.001, rate=0.01)
> temp
 [1]  2.438078e-33 5.101136e-130  1.760830e-54 2.724731e-166  0.000000e+00
 [6] 4.461151e-146  1.332914e-55 2.336396e-277  0.000000e+00  0.000000e+00
> temp[5]
[1] 0



From ripley at stats.ox.ac.uk  Wed Aug 30 08:45:48 2006
From: ripley at stats.ox.ac.uk (ripley at stats.ox.ac.uk)
Date: Wed, 30 Aug 2006 08:45:48 +0200 (CEST)
Subject: [Rd] list and pairlist in "Writing R Extensions" (PR#9185)
Message-ID: <20060830064548.DC9C9283B0@slim.kubism.ku.dk>

It says clearly that showArgs is for use by .External, not .Call (it is 
introduced in a paragraph about the differences):

@example
showArgs <- function(...) .External("showArgs", ...)
@end example

and that is the main user error here.  Pairlists are not needed when used 
as documented.

On Wed, 30 Aug 2006, gah4 at u.washington.edu wrote:

> Full_Name: Glen Herrmannsfeldt
> Version: 2.2.1
> OS: Linux
> Submission from: (NULL) (128.95.113.77)
> 
> 
> Following the discussion in "Writing R Extensions" in section 5.8.2, there
> is no indication that showArgs expects a pairlist() instead of a list().
> 
> I was trying 
> 
> .Call("showArgs",list(one=1,two=2,three=3))
> 
> for example, and getting many core dumps.
> 
> It wasn't until reading "R Language Definition" that I found out
> about pairlist(), as needed.  

> The final example:
> 
> showArgs<-function(...) .Call("showArgs1",list(...))
> 
> looks like a list can be passed to showArgs, but in fact it is showArgs1, which
> doesn't seem to be documented at all!

It says this is an 'alternative style', not an example.

> It could be that using pairlist() in 5.8.2 would fix the problem,
> but there should be a reference to the difference between list()
> and pairlist()

-- 
Brian D. Ripley,                  ripley at stats.ox.ac.uk
Professor of Applied Statistics,  http://www.stats.ox.ac.uk/~ripley/
University of Oxford,             Tel:  +44 1865 272861 (self)
1 South Parks Road,                     +44 1865 272866 (PA)
Oxford OX1 3TG, UK                Fax:  +44 1865 272595



From friedrich.leisch at stat.uni-muenchen.de  Wed Aug 30 09:21:50 2006
From: friedrich.leisch at stat.uni-muenchen.de (friedrich.leisch at stat.uni-muenchen.de)
Date: Wed, 30 Aug 2006 09:21:50 +0200 (MEST)
Subject: [Rd] 'CanMakeUseOf' field
In-Reply-To: <44F4A1CD.50800@stats.uwo.ca>
References: <m2wt8sgyo0.fsf@ziti.fhcrc.org>	<17651.65163.240840.365787@stat.math.ethz.ch>	<44F4473D.9030203@bank-banque-canada.ca>	<17652.19292.998960.686119@stat.math.ethz.ch>	<44F46112.7060809@stats.uwo.ca>	<m2d5ajedon.fsf@ziti.fhcrc.org>	<44F47295.2050207@stats.uwo.ca>	<m28xl7ctt3.fsf@ziti.fhcrc.org>	<44F4865B.5010107@bank-banque-canada.ca>	<44F48E3F.6070903@stats.uwo.ca>
	<44F49FE1.6040002@bank-banque-canada.ca>
	<44F4A1CD.50800@stats.uwo.ca>
Message-ID: <63679.151.100.49.234.1156922510.squirrel@webmail.lrz-muenchen.de>

> On 8/29/2006 4:13 PM, Paul Gilbert wrote:
>>
>> Duncan Murdoch wrote:

[...]

>
> This doesn't address the problem of someone who hasn't got the package
> installed yet, though perhaps CRAN could put a version of that man page
> (or all of them) online for browsing.  Unfortunately this hasn't
> happened yet, but maybe we'll get to it before 2.5.0.

The help pages are available on CRAN in PDF format, if there are strong
preferences to also get the HTML version online that should not be a major
problem.

Best,
Fritz



From friedrich.leisch at stat.uni-muenchen.de  Wed Aug 30 09:34:13 2006
From: friedrich.leisch at stat.uni-muenchen.de (friedrich.leisch at stat.uni-muenchen.de)
Date: Wed, 30 Aug 2006 09:34:13 +0200 (MEST)
Subject: [Rd] 'CanMakeUseOf' field
In-Reply-To: <m2d5ajedon.fsf@ziti.fhcrc.org>
References: <m2wt8sgyo0.fsf@ziti.fhcrc.org>
	<17651.65163.240840.365787@stat.math.ethz.ch>
	<44F4473D.9030203@bank-banque-canada.ca>
	<17652.19292.998960.686119@stat.math.ethz.ch>
	<44F46112.7060809@stats.uwo.ca> <m2d5ajedon.fsf@ziti.fhcrc.org>
Message-ID: <63945.151.100.49.234.1156923253.squirrel@webmail.lrz-muenchen.de>

> Duncan Murdoch <murdoch at stats.uwo.ca> writes:
>> I think we need an option to R CMD check rather than a new field in the
>> DESCRIPTION.  Currently a package could be mentioned for any of these
>> reasons:
>>
>> 1.  To make functions, examples or vignettes work
>> 2.  To allow optional functionality in functions, examples or vignettes.
>> 3.  Because it contains complementary functions.
>>
>> I don't think we really need to worry about 3:  it should be contained
>> in 1 or 2, if reasonably complete examples are given.
>>
>> Case 1 is handled by Depends.
>
> I think there is an important distinction between a dependency needed
> for the package to function and a dependency needed to demonstrate
> said functionality via an example or vignette.  The former is what
> Depends is about, the latter is something else (Suggests).

Sorry to join in late, I am at the Compstat conference and have limited
email access. What Seth describes in the above paragraph is exactly what I
had in mind when splitting the single Depends field we had into Depends
and Suggests: Depends are a necessity to run the package, Suggests is nice
to have but not necessary. If you know how to use a package you may the
decide not to install a package that is only suggested, but

  * may not be interested to execute the examples,
  * know that you never need the extra functionality
  * ...

so it should not be auto-installed unless you ask for it (the default
could also be the other way round, the point is that it should be possible
to have package foo but not the packages it only suggests). On CRAN we
check with all suggestions to test all bits and pieces, having an option
in R CMD check to test only with suggests may be nice, if there is use for
it.

Ad the wording in the manual: obviously that is not optimal (otherwise no
need for parts of this email thread), perhaps somebody else than the
original author (=me) could try to improve it for 2.4 after this
clarifications?  Otherwise I will give it a shot next week after I return
from Rome.

Best,
Fritz



From ripley at stats.ox.ac.uk  Wed Aug 30 09:29:19 2006
From: ripley at stats.ox.ac.uk (ripley at stats.ox.ac.uk)
Date: Wed, 30 Aug 2006 09:29:19 +0200 (CEST)
Subject: [Rd] rgamma gives zeros. (PR#9184)
Message-ID: <20060830072919.805264C9E8@slim.kubism.ku.dk>

I think you fail to understand the floating point arithmetic involved. The 
smallest floating point number that can be represented to full precision 
is

> .Machine$double.xmin
[1] 2.225074e-308

and

> pgamma(.Machine$double.xmin, 0.001, rate=0.01)
[1] 0.4904533

Your distribution is so extreme that in computer representation it is 
largely discrete.

Now, on your platform there are denormalized doubles, so

> table(rgamma(1e6, 0.001, rate=0.01) < .Machine$double.xmin)

 FALSE   TRUE
509073 490927
> table(rgamma(1e6, 0.001, rate=0.01) == 0)

 FALSE   TRUE
525187 474813

> x <- rgamma(1e6, 0.001, rate=0.01)
> sort(x[x> 0]) [1:10]
 [1] 4.940656e-322 4.940656e-322 4.940656e-322 4.940656e-322 4.940656e-322
 [6] 4.940656e-322 4.940656e-322 4.940656e-322 4.940656e-322 4.940656e-322

is pretty much what I expected.

On Tue, 29 Aug 2006, pxi at stat.cmu.edu wrote:

> Full_Name: Peiyi Xi
> Version: R 2.2.0

You are specifically asked NOT to report on obselete versions of R.

> OS: Windows XP Professional
> Submission from: (NULL) (128.2.3.141)
> 
> 
> When I use rgamma(n, shape, rate ) to generate gamma samples, it
> gives zeros when both shape and rate are very small.
> 
> But we know that if x follows a gamma distribution, x should be positive.
> 
> e.g.
> > temp=rgamma(10, 0.001, rate=0.01)
> > temp
>  [1]  2.438078e-33 5.101136e-130  1.760830e-54 2.724731e-166  0.000000e+00
>  [6] 4.461151e-146  1.332914e-55 2.336396e-277  0.000000e+00  0.000000e+00
> > temp[5]
> [1] 0
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
> 

-- 
Brian D. Ripley,                  ripley at stats.ox.ac.uk
Professor of Applied Statistics,  http://www.stats.ox.ac.uk/~ripley/
University of Oxford,             Tel:  +44 1865 272861 (self)
1 South Parks Road,                     +44 1865 272866 (PA)
Oxford OX1 3TG, UK                Fax:  +44 1865 272595



From maechler at stat.math.ethz.ch  Wed Aug 30 10:44:38 2006
From: maechler at stat.math.ethz.ch (Martin Maechler)
Date: Wed, 30 Aug 2006 10:44:38 +0200
Subject: [Rd] 'CanMakeUseOf' field
In-Reply-To: <63945.151.100.49.234.1156923253.squirrel@webmail.lrz-muenchen.de>
References: <m2wt8sgyo0.fsf@ziti.fhcrc.org>
	<17651.65163.240840.365787@stat.math.ethz.ch>
	<44F4473D.9030203@bank-banque-canada.ca>
	<17652.19292.998960.686119@stat.math.ethz.ch>
	<44F46112.7060809@stats.uwo.ca> <m2d5ajedon.fsf@ziti.fhcrc.org>
	<63945.151.100.49.234.1156923253.squirrel@webmail.lrz-muenchen.de>
Message-ID: <17653.20470.199569.870638@stat.math.ethz.ch>

>>>>> "FrL" == friedrich leisch <friedrich.leisch at stat.uni-muenchen.de>
>>>>>     on Wed, 30 Aug 2006 09:34:13 +0200 (MEST) writes:

    >> Duncan Murdoch <murdoch at stats.uwo.ca> writes:
    >>> I think we need an option to R CMD check rather than a new field in the
    >>> DESCRIPTION.  Currently a package could be mentioned for any of these
    >>> reasons:
    >>> 
    >>> 1.  To make functions, examples or vignettes work
    >>> 2.  To allow optional functionality in functions, examples or vignettes.
    >>> 3.  Because it contains complementary functions.
    >>> 
    >>> I don't think we really need to worry about 3:  it should be contained
    >>> in 1 or 2, if reasonably complete examples are given.
    >>> 
    >>> Case 1 is handled by Depends.
    >> 
    >> I think there is an important distinction between a dependency needed
    >> for the package to function and a dependency needed to demonstrate
    >> said functionality via an example or vignette.  The former is what
    >> Depends is about, the latter is something else (Suggests).

    FrL> Sorry to join in late, I am at the Compstat conference and have limited
    FrL> email access. What Seth describes in the above paragraph is exactly what I
    FrL> had in mind when splitting the single Depends field we had into Depends
    FrL> and Suggests: Depends are a necessity to run the package, Suggests is nice
    FrL> to have but not necessary. If you know how to use a package you may the
    FrL> decide not to install a package that is only suggested, but

    FrL> * may not be interested to execute the examples,
    FrL> * know that you never need the extra functionality
    FrL> * ...

    FrL> so it should not be auto-installed unless you ask for
    FrL> it (the default could also be the other way round, the
    FrL> point is that it should be possible to have package foo
    FrL> but not the packages it only suggests). On CRAN we
    FrL> check with all suggestions to test all bits and pieces,
    FrL> having an option in R CMD check to test only with
    FrL> suggests may be nice, if there is use for it.

Yes.
However, I see two (related) problems with the current 'Suggests'
and that's why I opened this thread proposing to have a 
(what I now would want to simply call)  'canUse' :

1) For 'R CMD check' (and hence CRAN checking),
   Packages in 'Suggests' must be require()able, and
   hence all testing only happens *with* the suggested packages
   being there, and not without.

2) "Suggests"  suggests to the human reader of DESCRIPTION that
   the package authors suggest to also install the packages listed
   there.
   Now there are cases, I (as package author) want to show some
   stuff, or even provide compatibility functionality for some
   packages that are related to mine, but which I really do not ``suggest''
   to also be installed, e.g., because the other packages do
   similar stuff as mine, but I believe my package to be
   superior.  In such a case, I may, e.g., want to provide 
   functions for porting the other package classes to my package's.

Duncan Murdoch has proposed to take care of "1)" by
still only use 'Suggests' but adding another option to 'R CMD
check', let's say   --no-suggests  which would run all the
checks without having the suggested packages available  
--- something not quite easy to implement, BTW:
Imagine the typical windows users who (AFAICS) always only use
one library into which they install all packages.
How do you want the 
    if( require(<my_suggested_package>) ) {
       ...
    }
clause *not* to be triggered in such a case ?
I do agree quite a bit that such a '--no-suggests' option would
be very useful for 'R CMD check' -- in addition to my proposal.

Further, I think "2)" above is not taken care of anyway.
After all the interesting statements and alternative proposals,
I'm still proposing to introduce a  'canUse'  field for DESCRIPTION
which
  a) has a "human-readable intent" of being weaker than 'Suggests'
  b) will not require its packages to be available for R CMD check
  c) conveys extra information about the package's context, to humans, and
  d) will potentially be used in automated or semi-manual 
     ``R package database management''

Martin

    FrL> Ad the wording in the manual: obviously that is not
    FrL> optimal (otherwise no need for parts of this email
    FrL> thread), perhaps somebody else than the original author
    FrL> (=me) could try to improve it for 2.4 after this
    FrL> clarifications?  Otherwise I will give it a shot next
    FrL> week after I return from Rome.



From Kurt.Hornik at wu-wien.ac.at  Wed Aug 30 10:42:40 2006
From: Kurt.Hornik at wu-wien.ac.at (Kurt Hornik)
Date: Wed, 30 Aug 2006 10:42:40 +0200
Subject: [Rd] 'CanMakeUseOf' field  [was ".. Add 'fields' argument ..]
In-Reply-To: <44F46112.7060809@stats.uwo.ca>
References: <m2wt8sgyo0.fsf@ziti.fhcrc.org>
	<17651.65163.240840.365787@stat.math.ethz.ch>
	<44F4473D.9030203@bank-banque-canada.ca>
	<17652.19292.998960.686119@stat.math.ethz.ch>
	<44F46112.7060809@stats.uwo.ca>
Message-ID: <17653.20352.330891.556094@mithrandir.hornik.net>

>>>>> Duncan Murdoch writes:

> On 8/29/2006 10:12 AM, Martin Maechler wrote:
>>>>>>> "PaulG" == Paul Gilbert <pgilbert at bank-banque-canada.ca>
>>>>>>> on Tue, 29 Aug 2006 09:55:09 -0400 writes:
>> 
PaulG> Martin Maechler wrote:
>> >> ...
>> >> 
>> >> The idea was a field related to but weaker than 'Suggests' :
>> >> Something like
>> >> 'canMakeUseOf: <pkg1> [, <pkg2>, ... ]
>> >> which is *not* used in any QA/QC checking, but is purely
>> >> informative: If <pkg1> is require()able, then some examples may
>> >> look nicer, a function may provide another feature, etc, etc.
>> >> Alternatives to 'canMakeUseOf' would have been
>> >> 'isHappilyCoworkingWith' ....
>> >> 
>> >> What do you (R-devel listeners) think about the idea?
>> 
PaulG> I still like this idea.  I prefer 'canMakeUseOf' to 
PaulG> 'isHappilyCoworkingWith'  mainly because it seems less ambiguous.
>> 
>> Thanks, Paul.
>> As you may have guessed I should have put a  " :-) "  beside the
>> 'isHappily...' .
>> 
>> Of course, even 'CanMakeUseOf' {we should capitalize the first letter}
>> is rather too long, but before finding the proper term, we should
>> agree on usefulness of such a new field.
>> Apart from the use of package authors {some could note that
>> other packages make use of theirs, without already depending on
>> or suggesting them}, it's one of those fields that should help
>> in the future to explore (e.g. cluster or neighborhood-graph)
>> the growing high-dimensional space of R packages.

> I think we need an option to R CMD check rather than a new field in the 
> DESCRIPTION.  Currently a package could be mentioned for any of these 
> reasons:

> 1.  To make functions, examples or vignettes work
> 2.  To allow optional functionality in functions, examples or vignettes.
> 3.  Because it contains complementary functions.

> I don't think we really need to worry about 3:  it should be contained 
> in 1 or 2, if reasonably complete examples are given.

> Case 1 is handled by Depends.

> An author should check case 2 both with and without the suggested 
> package.  A user  might be satisfied with a simple check "as things 
> currently stand", or might want a stringent check like the author wants. 
>   The author can't know that, because it will depend on the user.

> So I don't think this is something that should be changed in 
> DESCRIPTION.  There should be an option to R CMD check to include or 
> exclude packages mentioned in the Suggests entry.  (I'd suggest a 3 
> level option:  check as though they are not available, check as 
> currently installed, require that they be available.)

An internal environment variable called

  _R_CHECK_FORCE_SUGGESTS_

which controls this has been in place for quite some time now.  One can
trivially add a Perl R CMD check configure variable for it.  I am a bit
hesitant to add a --force-suggests cola to R CMD check, as this
hardwires a legacy dependency model which may not be up to future needs.

As an aside, I have never understood whe developers have need for such
an option (as I would have assumed that they'd typically try to check
all of their code).

-k



From Kurt.Hornik at wu-wien.ac.at  Wed Aug 30 11:03:49 2006
From: Kurt.Hornik at wu-wien.ac.at (Kurt Hornik)
Date: Wed, 30 Aug 2006 11:03:49 +0200
Subject: [Rd] 'CanMakeUseOf' field
In-Reply-To: <17653.20470.199569.870638@stat.math.ethz.ch>
References: <m2wt8sgyo0.fsf@ziti.fhcrc.org>
	<17651.65163.240840.365787@stat.math.ethz.ch>
	<44F4473D.9030203@bank-banque-canada.ca>
	<17652.19292.998960.686119@stat.math.ethz.ch>
	<44F46112.7060809@stats.uwo.ca> <m2d5ajedon.fsf@ziti.fhcrc.org>
	<63945.151.100.49.234.1156923253.squirrel@webmail.lrz-muenchen.de>
	<17653.20470.199569.870638@stat.math.ethz.ch>
Message-ID: <17653.21621.74689.138434@mithrandir.hornik.net>

>>>>> Martin Maechler writes:

>>>>> "FrL" == friedrich leisch <friedrich.leisch at stat.uni-muenchen.de>
>>>>>     on Wed, 30 Aug 2006 09:34:13 +0200 (MEST) writes:

>>> Duncan Murdoch <murdoch at stats.uwo.ca> writes:
>>>> I think we need an option to R CMD check rather than a new field in the
>>>> DESCRIPTION.  Currently a package could be mentioned for any of these
>>>> reasons:
>>>> 
>>>> 1.  To make functions, examples or vignettes work
>>>> 2.  To allow optional functionality in functions, examples or vignettes.
>>>> 3.  Because it contains complementary functions.
>>>> 
>>>> I don't think we really need to worry about 3:  it should be contained
>>>> in 1 or 2, if reasonably complete examples are given.
>>>> 
>>>> Case 1 is handled by Depends.
>>> 
>>> I think there is an important distinction between a dependency needed
>>> for the package to function and a dependency needed to demonstrate
>>> said functionality via an example or vignette.  The former is what
>>> Depends is about, the latter is something else (Suggests).

FrL> Sorry to join in late, I am at the Compstat conference and have limited
FrL> email access. What Seth describes in the above paragraph is exactly what I
FrL> had in mind when splitting the single Depends field we had into Depends
FrL> and Suggests: Depends are a necessity to run the package, Suggests is nice
FrL> to have but not necessary. If you know how to use a package you may the
FrL> decide not to install a package that is only suggested, but

FrL> * may not be interested to execute the examples,
FrL> * know that you never need the extra functionality
FrL> * ...

FrL> so it should not be auto-installed unless you ask for
FrL> it (the default could also be the other way round, the
FrL> point is that it should be possible to have package foo
FrL> but not the packages it only suggests). On CRAN we
FrL> check with all suggestions to test all bits and pieces,
FrL> having an option in R CMD check to test only with
FrL> suggests may be nice, if there is use for it.

> ...

> Further, I think "2)" above is not taken care of anyway.
> After all the interesting statements and alternative proposals,
> I'm still proposing to introduce a  'canUse'  field for DESCRIPTION
> which
>   a) has a "human-readable intent" of being weaker than 'Suggests'
>   b) will not require its packages to be available for R CMD check
>   c) conveys extra information about the package's context, to humans, and
>   d) will potentially be used in automated or semi-manual 
>      ``R package database management''

Martin,

I don't think such info should be human-readable.  It should be in a
standardized format so that we can have tools to compute on such
information.  E.g., a simple subject-predicate-object model as used in
the W3C's semantic web.

I am slightly nervous about moving in this direction, though, as I think
it implies that repository maintainers deploy processes which validate
the semantics of the package metadata.  But eventually we will have to
do this in any case.

-k



From martin.becker at mx.uni-saarland.de  Wed Aug 30 12:07:07 2006
From: martin.becker at mx.uni-saarland.de (Martin Becker)
Date: Wed, 30 Aug 2006 12:07:07 +0200
Subject: [Rd] Speed of runif() on different Operating Systems
In-Reply-To: <Pine.LNX.4.64.0608281535580.652@gannet.stats.ox.ac.uk>
References: <44F2FC78.3040106@mx.uni-saarland.de>
	<Pine.LNX.4.64.0608281535580.652@gannet.stats.ox.ac.uk>
Message-ID: <44F5634B.8090801@mx.uni-saarland.de>

Prof Brian Ripley wrote:
> No one else seems to have responded to this.
>
> Please see `Writing R Extensions' for how to time things in R.
>
>   
Thank you very much for the pointer to system.time(), although I read 
most of 'Writing R Extensions', I must have overlooked this (very 
useful) part. Nevertheless I was aware, that Sys.time() does not measure 
cpu time (that's why I included the information, that measuring time 
with Rprof() yields similar results, I had better included the output of 
Rprof indeed), but I was the only user on both (idle) dual core systems 
and thus expected a high correlation between the differences of 
Sys.time() and the cpu time actually used.
> For things like this, the fine details of how well the compiler keeps the 
> pipelines and cache filled are important, as is the cache size and 
> memory speed.  Using
>
> system.time(for (i in 1:500) ttt <- runif(1000000))
>
> your Linux time looks slow, indeed slower than the only 32-bit Linux box I 
> have left (a 2GHz 512Kb cache Xeon) and 2.5x slower than a 64-bit R on an 
> 2.2GHz Opteron (which is doing a lot of other work and so only giving 
> about 30% of one of its processors to R: the elapsed time was much 
> longer).
>
> The binary distribution of R for Windows is compiled with -O3: for some 
> tasks it makes a lot of difference and this might just be one.
>
>   
Thank you very much for this valuable piece of information, it explains 
a big part of the speed difference: recompiling R on my linux box with 
-O3 significantly increases speed of runif(), now the linux box needs 
less than 40% more time than the WinXP system.
> However, what can you usefully do in R with 5e8 random uniforms in 
> anything like a minute, let alone the aggregate time this list will spend 
> reading your question?  
The standard method for simulating final, minimal and maximal values of 
Brownian Motion relies on a (discrete) n-step random walk approximation, 
where n has to be chosen very large (typically n=100 000) to keep the 
bias induced by the approximation "small enough" for certain 
applications. So if you want to do MC option pricing of e.g. double 
barrier options, 5e8 random uniforms are needed for 5 000 draws of 
final, minimal and maximal value, which is still a quite small number of 
draws in MC applications. I am working on a faster simulation method and 
of course I want to compare the speed of the new and (old) standard 
method, that's why I needed large numbers of random uniforms. I thought 
that the particular application is not of interest for this list, so I 
left it out in my initial submission. I apologise, if my submission was 
off-topic in this mailing list.
> If it matters to you, investigate the code your 
> compiler creates.  (The ATLAS developers report very poor performance on 
> certain Pentiums for certain versions of gcc4.)
>
>   
Thank you again for the useful hints!

Regards,

  Martin Becker



From ripley at stats.ox.ac.uk  Wed Aug 30 12:33:19 2006
From: ripley at stats.ox.ac.uk (Prof Brian Ripley)
Date: Wed, 30 Aug 2006 11:33:19 +0100 (BST)
Subject: [Rd] Speed of runif() on different Operating Systems
In-Reply-To: <44F5634B.8090801@mx.uni-saarland.de>
References: <44F2FC78.3040106@mx.uni-saarland.de>
	<Pine.LNX.4.64.0608281535580.652@gannet.stats.ox.ac.uk>
	<44F5634B.8090801@mx.uni-saarland.de>
Message-ID: <Pine.LNX.4.64.0608301110390.27066@gannet.stats.ox.ac.uk>

On Wed, 30 Aug 2006, Martin Becker wrote:

> Prof Brian Ripley wrote:
> > No one else seems to have responded to this.
> >
> > Please see `Writing R Extensions' for how to time things in R.
> >   
> Thank you very much for the pointer to system.time(), although I read most of
> 'Writing R Extensions', I must have overlooked this (very useful) part.
> Nevertheless I was aware, that Sys.time() does not measure cpu time (that's
> why I included the information, that measuring time with Rprof() yields
> similar results, I had better included the output of Rprof indeed), but I was
> the only user on both (idle) dual core systems and thus expected a high
> correlation between the differences of Sys.time() and the cpu time actually
> used.

Actually, Rprof does time elapsed time on Windows.  Calling gc() first is 
important, and part of what system.time() does.

> > For things like this, the fine details of how well the compiler keeps the
> > pipelines and cache filled are important, as is the cache size and memory
> > speed.  Using
> >
> > system.time(for (i in 1:500) ttt <- runif(1000000))
> >
> > your Linux time looks slow, indeed slower than the only 32-bit Linux box I
> > have left (a 2GHz 512Kb cache Xeon) and 2.5x slower than a 64-bit R on an
> > 2.2GHz Opteron (which is doing a lot of other work and so only giving about
> > 30% of one of its processors to R: the elapsed time was much longer).
> >
> > The binary distribution of R for Windows is compiled with -O3: for some
> > tasks it makes a lot of difference and this might just be one.
> >
> Thank you very much for this valuable piece of information, it explains a big
> part of the speed difference: recompiling R on my linux box with -O3
> significantly increases speed of runif(), now the linux box needs less than
> 40% more time than the WinXP system.
> > However, what can you usefully do in R with 5e8 random uniforms in anything
> > like a minute, let alone the aggregate time this list will spend reading
> > your question?  
> The standard method for simulating final, minimal and maximal values of
> Brownian Motion relies on a (discrete) n-step random walk approximation, where
> n has to be chosen very large (typically n=100 000) to keep the bias induced
> by the approximation "small enough" for certain applications. So if you want
> to do MC option pricing of e.g. double barrier options, 5e8 random uniforms
> are needed for 5 000 draws of final, minimal and maximal value, which is still
> a quite small number of draws in MC applications. I am working on a faster
> simulation method and of course I want to compare the speed of the new and
> (old) standard method, that's why I needed large numbers of random uniforms. I
> thought that the particular application is not of interest for this list, so I
> left it out in my initial submission. I apologise, if my submission was
> off-topic in this mailing list.

Isn't that usually done by adding rnorm()s and not runif()s?

There are much better algorithms for simulating Brownian motion
barrier-crossing statistics to high accuracy.  It's not my field, but one 
idea is to use scaled Brownian bridge to infill time when the process is 
near a boundary.

Sometimes the R helpers spend a long time answering the wrong question, 
which is why it always helps to give the real one.

> > If it matters to you, investigate the code your compiler creates.  (The
> > ATLAS developers report very poor performance on certain Pentiums for
> > certain versions of gcc4.)
> >
> >   
> Thank you again for the useful hints!
> 
> Regards,
> 
>  Martin Becker
> 
> 

-- 
Brian D. Ripley,                  ripley at stats.ox.ac.uk
Professor of Applied Statistics,  http://www.stats.ox.ac.uk/~ripley/
University of Oxford,             Tel:  +44 1865 272861 (self)
1 South Parks Road,                     +44 1865 272866 (PA)
Oxford OX1 3TG, UK                Fax:  +44 1865 272595



From murdoch at stats.uwo.ca  Wed Aug 30 12:35:55 2006
From: murdoch at stats.uwo.ca (Duncan Murdoch)
Date: Wed, 30 Aug 2006 06:35:55 -0400
Subject: [Rd] 'CanMakeUseOf' field
In-Reply-To: <63679.151.100.49.234.1156922510.squirrel@webmail.lrz-muenchen.de>
References: <m2wt8sgyo0.fsf@ziti.fhcrc.org>	<17651.65163.240840.365787@stat.math.ethz.ch>	<44F4473D.9030203@bank-banque-canada.ca>	<17652.19292.998960.686119@stat.math.ethz.ch>	<44F46112.7060809@stats.uwo.ca>	<m2d5ajedon.fsf@ziti.fhcrc.org>	<44F47295.2050207@stats.uwo.ca>	<m28xl7ctt3.fsf@ziti.fhcrc.org>	<44F4865B.5010107@bank-banque-canada.ca>	<44F48E3F.6070903@stats.uwo.ca>
	<44F49FE1.6040002@bank-banque-canada.ca>
	<44F4A1CD.50800@stats.uwo.ca>
	<63679.151.100.49.234.1156922510.squirrel@webmail.lrz-muenchen.de>
Message-ID: <44F56A0B.9090100@stats.uwo.ca>

On 8/30/2006 3:21 AM, friedrich.leisch at stat.uni-muenchen.de wrote:
>> On 8/29/2006 4:13 PM, Paul Gilbert wrote:
>>> Duncan Murdoch wrote:
> 
> [...]
> 
>> This doesn't address the problem of someone who hasn't got the package
>> installed yet, though perhaps CRAN could put a version of that man page
>> (or all of them) online for browsing.  Unfortunately this hasn't
>> happened yet, but maybe we'll get to it before 2.5.0.
> 
> The help pages are available on CRAN in PDF format, if there are strong
> preferences to also get the HTML version online that should not be a major
> problem.

Just to clarify: "this hasn't happened yet" was meant to apply to the 
earlier part of my message, the changes necessary to make the package 
man page easier to maintain.

Duncan Murdoch



From murdoch at stats.uwo.ca  Wed Aug 30 12:44:52 2006
From: murdoch at stats.uwo.ca (Duncan Murdoch)
Date: Wed, 30 Aug 2006 06:44:52 -0400
Subject: [Rd] Speed of runif() on different Operating Systems
In-Reply-To: <Pine.LNX.4.64.0608301110390.27066@gannet.stats.ox.ac.uk>
References: <44F2FC78.3040106@mx.uni-saarland.de>	<Pine.LNX.4.64.0608281535580.652@gannet.stats.ox.ac.uk>	<44F5634B.8090801@mx.uni-saarland.de>
	<Pine.LNX.4.64.0608301110390.27066@gannet.stats.ox.ac.uk>
Message-ID: <44F56C24.4040108@stats.uwo.ca>

On 8/30/2006 6:33 AM, Prof Brian Ripley wrote:
> On Wed, 30 Aug 2006, Martin Becker wrote:
> 
>> Prof Brian Ripley wrote:
>>> No one else seems to have responded to this.
>>>
>>> Please see `Writing R Extensions' for how to time things in R.
>>>   
>> Thank you very much for the pointer to system.time(), although I read most of
>> 'Writing R Extensions', I must have overlooked this (very useful) part.
>> Nevertheless I was aware, that Sys.time() does not measure cpu time (that's
>> why I included the information, that measuring time with Rprof() yields
>> similar results, I had better included the output of Rprof indeed), but I was
>> the only user on both (idle) dual core systems and thus expected a high
>> correlation between the differences of Sys.time() and the cpu time actually
>> used.
> 
> Actually, Rprof does time elapsed time on Windows.  Calling gc() first is 
> important, and part of what system.time() does.
> 
>>> For things like this, the fine details of how well the compiler keeps the
>>> pipelines and cache filled are important, as is the cache size and memory
>>> speed.  Using
>>>
>>> system.time(for (i in 1:500) ttt <- runif(1000000))
>>>
>>> your Linux time looks slow, indeed slower than the only 32-bit Linux box I
>>> have left (a 2GHz 512Kb cache Xeon) and 2.5x slower than a 64-bit R on an
>>> 2.2GHz Opteron (which is doing a lot of other work and so only giving about
>>> 30% of one of its processors to R: the elapsed time was much longer).
>>>
>>> The binary distribution of R for Windows is compiled with -O3: for some
>>> tasks it makes a lot of difference and this might just be one.
>>>
>> Thank you very much for this valuable piece of information, it explains a big
>> part of the speed difference: recompiling R on my linux box with -O3
>> significantly increases speed of runif(), now the linux box needs less than
>> 40% more time than the WinXP system.
>>> However, what can you usefully do in R with 5e8 random uniforms in anything
>>> like a minute, let alone the aggregate time this list will spend reading
>>> your question?  
>> The standard method for simulating final, minimal and maximal values of
>> Brownian Motion relies on a (discrete) n-step random walk approximation, where
>> n has to be chosen very large (typically n=100 000) to keep the bias induced
>> by the approximation "small enough" for certain applications. So if you want
>> to do MC option pricing of e.g. double barrier options, 5e8 random uniforms
>> are needed for 5 000 draws of final, minimal and maximal value, which is still
>> a quite small number of draws in MC applications. I am working on a faster
>> simulation method and of course I want to compare the speed of the new and
>> (old) standard method, that's why I needed large numbers of random uniforms. I
>> thought that the particular application is not of interest for this list, so I
>> left it out in my initial submission. I apologise, if my submission was
>> off-topic in this mailing list.
> 
> Isn't that usually done by adding rnorm()s and not runif()s?
> 
> There are much better algorithms for simulating Brownian motion
> barrier-crossing statistics to high accuracy.  It's not my field, but one 
> idea is to use scaled Brownian bridge to infill time when the process is 
> near a boundary.

McLeish published algorithms to simulate these directly in a recent 
issue of CJS.  I don't have the reference handy, but I think it's 2004 
or 2005.

Duncan Murdoch

> 
> Sometimes the R helpers spend a long time answering the wrong question, 
> which is why it always helps to give the real one.
> 
>>> If it matters to you, investigate the code your compiler creates.  (The
>>> ATLAS developers report very poor performance on certain Pentiums for
>>> certain versions of gcc4.)
>>>
>>>   
>> Thank you again for the useful hints!
>>
>> Regards,
>>
>>  Martin Becker
>>
>>
>



From kellymj1 at cf.ac.uk  Wed Aug 30 13:25:45 2006
From: kellymj1 at cf.ac.uk (kellymj1 at cf.ac.uk)
Date: Wed, 30 Aug 2006 13:25:45 +0200 (CEST)
Subject: [Rd] Inaccuracy in seq() (PR#9189)
Message-ID: <20060830112545.EC5042245F@slim.kubism.ku.dk>

Full_Name: Mark James Kelly
Version: 2.3.1
OS: Windows
Submission from: (NULL) (193.63.127.224)


Sequence produces slightly inaccurate results. 

#This (supposedely) creates a sequence 0.060,0.065,0.070.....0.30
thingnor=(seq(0.06,0.30,by=0.005))

#This does the same but rounds to three decimals
thingrou=round(seq(0.06,0.30,by=0.005),3)

#This is another vector, the same length as the two above, with 24 zeroes, then
0.070, then 24 zeroes
otherthing=c(rep(0,24),0.070,rep(0,24))


#This fails to select the entries equal to 0.070 
otherthing[otherthing==thingnor[3]]

#This gives the correct answer
otherthing[otherthing==thingrou[3]]


#This compares the two sequences (which should be identical)
(thingnor-thingrou)



From martin.becker at mx.uni-saarland.de  Wed Aug 30 13:31:21 2006
From: martin.becker at mx.uni-saarland.de (Martin Becker)
Date: Wed, 30 Aug 2006 13:31:21 +0200
Subject: [Rd] Speed of runif() on different Operating Systems
In-Reply-To: <Pine.LNX.4.64.0608301110390.27066@gannet.stats.ox.ac.uk>
References: <44F2FC78.3040106@mx.uni-saarland.de>
	<Pine.LNX.4.64.0608281535580.652@gannet.stats.ox.ac.uk>
	<44F5634B.8090801@mx.uni-saarland.de>
	<Pine.LNX.4.64.0608301110390.27066@gannet.stats.ox.ac.uk>
Message-ID: <44F57709.10406@mx.uni-saarland.de>

Prof Brian Ripley schrieb:
>> The standard method for simulating final, minimal and maximal values of
>> Brownian Motion relies on a (discrete) n-step random walk approximation, where
>> n has to be chosen very large (typically n=100 000) to keep the bias induced
>> by the approximation "small enough" for certain applications. So if you want
>> to do MC option pricing of e.g. double barrier options, 5e8 random uniforms
>> are needed for 5 000 draws of final, minimal and maximal value, which is still
>> a quite small number of draws in MC applications. I am working on a faster
>> simulation method and of course I want to compare the speed of the new and
>> (old) standard method, that's why I needed large numbers of random uniforms. I
>> thought that the particular application is not of interest for this list, so I
>> left it out in my initial submission. I apologise, if my submission was
>> off-topic in this mailing list.
>>     
>
> Isn't that usually done by adding rnorm()s and not runif()s?
>
> There are much better algorithms for simulating Brownian motion
> barrier-crossing statistics to high accuracy.  It's not my field, but one 
> idea is to use scaled Brownian bridge to infill time when the process is 
> near a boundary.
>
> Sometimes the R helpers spend a long time answering the wrong question, 
> which is why it always helps to give the real one.
>   
As I wrote, I am working on (an implementation of) a faster method, 
which indeed uses Brownian bridge and related concepts, and I generated 
the huge number of random uniforms (random normals are better but still 
slower) just for speed comparison. So for me, the real question was 
about the speed difference of runif().

Thanks again, regards,

  Martin



From Roger.Bivand at nhh.no  Wed Aug 30 13:43:53 2006
From: Roger.Bivand at nhh.no (Roger Bivand)
Date: Wed, 30 Aug 2006 13:43:53 +0200 (CEST)
Subject: [Rd] Inaccuracy in seq() (PR#9189)
In-Reply-To: <20060830112545.EC5042245F@slim.kubism.ku.dk>
Message-ID: <Pine.LNX.4.44.0608301341250.5562-100000@reclus.nhh.no>

On Wed, 30 Aug 2006 kellymj1 at cf.ac.uk wrote:

> Full_Name: Mark James Kelly
> Version: 2.3.1
> OS: Windows
> Submission from: (NULL) (193.63.127.224)
> 
> 
> Sequence produces slightly inaccurate results. 

Not a bug, but a FAQ (7.31):

http://cran.r-project.org/doc/FAQ/R-FAQ.html#Why-doesn_0027t-R-think-these-numbers-are-equal_003f

Try:

otherthing[25]==thingnor[3]
identical(otherthing[25], thingnor[3])
all.equal(otherthing[25], thingnor[3])

?all.equal


> 
> #This (supposedely) creates a sequence 0.060,0.065,0.070.....0.30
> thingnor=(seq(0.06,0.30,by=0.005))
> 
> #This does the same but rounds to three decimals
> thingrou=round(seq(0.06,0.30,by=0.005),3)
> 
> #This is another vector, the same length as the two above, with 24 zeroes, then
> 0.070, then 24 zeroes
> otherthing=c(rep(0,24),0.070,rep(0,24))
> 
> 
> #This fails to select the entries equal to 0.070 
> otherthing[otherthing==thingnor[3]]
> 
> #This gives the correct answer
> otherthing[otherthing==thingrou[3]]
> 
> 
> #This compares the two sequences (which should be identical)
> (thingnor-thingrou)
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
> 

-- 
Roger Bivand
Economic Geography Section, Department of Economics, Norwegian School of
Economics and Business Administration, Helleveien 30, N-5045 Bergen,
Norway. voice: +47 55 95 93 55; fax +47 55 95 95 43
e-mail: Roger.Bivand at nhh.no



From martin.becker at mx.uni-saarland.de  Wed Aug 30 13:44:20 2006
From: martin.becker at mx.uni-saarland.de (Martin Becker)
Date: Wed, 30 Aug 2006 13:44:20 +0200
Subject: [Rd] Speed of runif() on different Operating Systems
In-Reply-To: <44F56C24.4040108@stats.uwo.ca>
References: <44F2FC78.3040106@mx.uni-saarland.de>	<Pine.LNX.4.64.0608281535580.652@gannet.stats.ox.ac.uk>	<44F5634B.8090801@mx.uni-saarland.de>
	<Pine.LNX.4.64.0608301110390.27066@gannet.stats.ox.ac.uk>
	<44F56C24.4040108@stats.uwo.ca>
Message-ID: <44F57A14.4020905@mx.uni-saarland.de>

Duncan Murdoch schrieb:
>
> McLeish published algorithms to simulate these directly in a recent 
> issue of CJS.  I don't have the reference handy, but I think it's 2004 
> or 2005.
>
> Duncan Murdoch
Thank you for this reference, I think it is the 2002 article "*Highs and 
lows: Some properties of the extremes of a diffusion and applications in 
finance"*.
This article perfectly covers simulation of final and minimal or final 
and maximal value and gives some proposals for the simulation of the 
third component (max resp. min). In principle my implementation of the 
simulation of the first two components coincides with the algorithm 
given in this paper.

Thanks again,

  Martin



From ripley at stats.ox.ac.uk  Wed Aug 30 13:52:12 2006
From: ripley at stats.ox.ac.uk (Prof Brian Ripley)
Date: Wed, 30 Aug 2006 12:52:12 +0100 (BST)
Subject: [Rd] Inaccuracy in seq() (PR#9189)
In-Reply-To: <20060830112545.EC5042245F@slim.kubism.ku.dk>
References: <20060830112545.EC5042245F@slim.kubism.ku.dk>
Message-ID: <Pine.LNX.4.64.0608301228380.10345@gannet.stats.ox.ac.uk>

See the FAQ Q7.31: 0.07 is not exactly representable on your computer.

0.060 + 2*0.005 != 0.070 in computer arithmetic:

> options(digits=18)
> 0.060
[1] 0.06
> 0.070
[1] 0.070000000000000007
> 0.060+2*0.005
[1] 0.06999999999999999
> 0.06+2*0.005 -0.07
[1] -1.3877787807814457e-17
> .Machine$double.eps * 0.07
[1] 1.5543122344752193e-17

On Wed, 30 Aug 2006, kellymj1 at cf.ac.uk wrote:

> Full_Name: Mark James Kelly
> Version: 2.3.1
> OS: Windows
> Submission from: (NULL) (193.63.127.224)
> 
> 
> Sequence produces slightly inaccurate results. 

sequence() is a different function in R.

> #This (supposedely) creates a sequence 0.060,0.065,0.070.....0.30
> thingnor=(seq(0.06,0.30,by=0.005))
> 
> #This does the same but rounds to three decimals
> thingrou=round(seq(0.06,0.30,by=0.005),3)
> 
> #This is another vector, the same length as the two above, with 24 zeroes, then
> 0.070, then 24 zeroes
> otherthing=c(rep(0,24),0.070,rep(0,24))
> 
> 
> #This fails to select the entries equal to 0.070 
> otherthing[otherthing==thingnor[3]]
> 
> #This gives the correct answer
> otherthing[otherthing==thingrou[3]]
> 
> 
> #This compares the two sequences (which should be identical)
> (thingnor-thingrou)

Not according to FAQ Q7.31 and help("==").

-- 
Brian D. Ripley,                  ripley at stats.ox.ac.uk
Professor of Applied Statistics,  http://www.stats.ox.ac.uk/~ripley/
University of Oxford,             Tel:  +44 1865 272861 (self)
1 South Parks Road,                     +44 1865 272866 (PA)
Oxford OX1 3TG, UK                Fax:  +44 1865 272595



From friedrich.leisch at stat.uni-muenchen.de  Wed Aug 30 13:53:18 2006
From: friedrich.leisch at stat.uni-muenchen.de (friedrich.leisch at stat.uni-muenchen.de)
Date: Wed, 30 Aug 2006 13:53:18 +0200 (MEST)
Subject: [Rd] 'CanMakeUseOf' field
In-Reply-To: <44F56A0B.9090100@stats.uwo.ca>
References: <m2wt8sgyo0.fsf@ziti.fhcrc.org>	<17651.65163.240840.365787@stat.math.ethz.ch>	<44F4473D.9030203@bank-banque-canada.ca>	<17652.19292.998960.686119@stat.math.ethz.ch>	<44F46112.7060809@stats.uwo.ca>	<m2d5ajedon.fsf@ziti.fhcrc.org>	<44F47295.2050207@stats.uwo.ca>	<m28xl7ctt3.fsf@ziti.fhcrc.org>	<44F4865B.5010107@bank-banque-canada.ca>	<44F48E3F.6070903@stats.uwo.ca>
	<44F49FE1.6040002@bank-banque-canada.ca>   
	<44F4A1CD.50800@stats.uwo.ca>
	<63679.151.100.49.234.1156922510.squirrel@webmail.lrz-muenchen.de>
	<44F56A0B.9090100@stats.uwo.ca>
Message-ID: <20291.151.100.147.28.1156938798.squirrel@webmail.lrz-muenchen.de>

> On 8/30/2006 3:21 AM, friedrich.leisch at stat.uni-muenchen.de wrote:
>>> On 8/29/2006 4:13 PM, Paul Gilbert wrote:
>>>> Duncan Murdoch wrote:
>>
>> [...]
>>
>>> This doesn't address the problem of someone who hasn't got the package
>>> installed yet, though perhaps CRAN could put a version of that man page
>>> (or all of them) online for browsing.  Unfortunately this hasn't
>>> happened yet, but maybe we'll get to it before 2.5.0.
>>
>> The help pages are available on CRAN in PDF format, if there are strong
>> preferences to also get the HTML version online that should not be a
>> major
>> problem.
>
> Just to clarify: "this hasn't happened yet" was meant to apply to the
> earlier part of my message, the changes necessary to make the package
> man page easier to maintain.

Sure, that is how I read it (sorry for not deleting your last sentence in
my reply). The question remains wether we should put HTML pages of all
package help pages on CRAN? Kurt builds them anyway when checking the
packages, so it is mostly a matter of copying them into the HTTP tree and
some linking.

Why we did not do it so far is that it really increases the size of
mirrors a lot, as those files would not be compressed (nd there are heaps
of them).

Best,
Fritz



From murdoch at stats.uwo.ca  Wed Aug 30 14:04:12 2006
From: murdoch at stats.uwo.ca (Duncan Murdoch)
Date: Wed, 30 Aug 2006 08:04:12 -0400
Subject: [Rd] Speed of runif() on different Operating Systems
In-Reply-To: <44F57A14.4020905@mx.uni-saarland.de>
References: <44F2FC78.3040106@mx.uni-saarland.de>	<Pine.LNX.4.64.0608281535580.652@gannet.stats.ox.ac.uk>	<44F5634B.8090801@mx.uni-saarland.de>
	<Pine.LNX.4.64.0608301110390.27066@gannet.stats.ox.ac.uk>
	<44F56C24.4040108@stats.uwo.ca>
	<44F57A14.4020905@mx.uni-saarland.de>
Message-ID: <44F57EBC.1030207@stats.uwo.ca>

On 8/30/2006 7:44 AM, Martin Becker wrote:
> Duncan Murdoch schrieb:
>>
>> McLeish published algorithms to simulate these directly in a recent 
>> issue of CJS.  I don't have the reference handy, but I think it's 2004 
>> or 2005.
>>
>> Duncan Murdoch
> Thank you for this reference, I think it is the 2002 article "*Highs and 
> lows: Some properties of the extremes of a diffusion and applications in 
> finance"*.

Yes, that's it.

Duncan Murdoch

> This article perfectly covers simulation of final and minimal or final 
> and maximal value and gives some proposals for the simulation of the 
> third component (max resp. min). In principle my implementation of the 
> simulation of the first two components coincides with the algorithm 
> given in this paper.
> 
> Thanks again,
> 
>   Martin



From friedrich.leisch at stat.uni-muenchen.de  Wed Aug 30 14:04:53 2006
From: friedrich.leisch at stat.uni-muenchen.de (friedrich.leisch at stat.uni-muenchen.de)
Date: Wed, 30 Aug 2006 14:04:53 +0200 (MEST)
Subject: [Rd] 'CanMakeUseOf' field
In-Reply-To: <17653.20470.199569.870638@stat.math.ethz.ch>
References: <m2wt8sgyo0.fsf@ziti.fhcrc.org>
	<17651.65163.240840.365787@stat.math.ethz.ch>
	<44F4473D.9030203@bank-banque-canada.ca>
	<17652.19292.998960.686119@stat.math.ethz.ch>
	<44F46112.7060809@stats.uwo.ca> <m2d5ajedon.fsf@ziti.fhcrc.org>
	<63945.151.100.49.234.1156923253.squirrel@webmail.lrz-muenchen.de>
	<17653.20470.199569.870638@stat.math.ethz.ch>
Message-ID: <22354.151.100.147.28.1156939493.squirrel@webmail.lrz-muenchen.de>

>>>>>> "FrL" == friedrich leisch <friedrich.leisch at stat.uni-muenchen.de>
>>>>>>     on Wed, 30 Aug 2006 09:34:13 +0200 (MEST) writes:
>
>     >> Duncan Murdoch <murdoch at stats.uwo.ca> writes:
>     >>> I think we need an option to R CMD check rather than a new field
> in the
>     >>> DESCRIPTION.  Currently a package could be mentioned for any of
> these
>     >>> reasons:
>     >>>
>     >>> 1.  To make functions, examples or vignettes work
>     >>> 2.  To allow optional functionality in functions, examples or
> vignettes.
>     >>> 3.  Because it contains complementary functions.
>     >>>
>     >>> I don't think we really need to worry about 3:  it should be
> contained
>     >>> in 1 or 2, if reasonably complete examples are given.
>     >>>
>     >>> Case 1 is handled by Depends.
>     >>
>     >> I think there is an important distinction between a dependency
> needed
>     >> for the package to function and a dependency needed to demonstrate
>     >> said functionality via an example or vignette.  The former is what
>     >> Depends is about, the latter is something else (Suggests).
>
>     FrL> Sorry to join in late, I am at the Compstat conference and have
> limited
>     FrL> email access. What Seth describes in the above paragraph is
> exactly what I
>     FrL> had in mind when splitting the single Depends field we had into
> Depends
>     FrL> and Suggests: Depends are a necessity to run the package,
> Suggests is nice
>     FrL> to have but not necessary. If you know how to use a package you
> may the
>     FrL> decide not to install a package that is only suggested, but
>
>     FrL> * may not be interested to execute the examples,
>     FrL> * know that you never need the extra functionality
>     FrL> * ...
>
>     FrL> so it should not be auto-installed unless you ask for
>     FrL> it (the default could also be the other way round, the
>     FrL> point is that it should be possible to have package foo
>     FrL> but not the packages it only suggests). On CRAN we
>     FrL> check with all suggestions to test all bits and pieces,
>     FrL> having an option in R CMD check to test only with
>     FrL> suggests may be nice, if there is use for it.
>
> Yes.
> However, I see two (related) problems with the current 'Suggests'
> and that's why I opened this thread proposing to have a
> (what I now would want to simply call)  'canUse' :
>
> 1) For 'R CMD check' (and hence CRAN checking),
>    Packages in 'Suggests' must be require()able, and
>    hence all testing only happens *with* the suggested packages
>    being there, and not without.
>
> 2) "Suggests"  suggests to the human reader of DESCRIPTION that
>    the package authors suggest to also install the packages listed
>    there.
>    Now there are cases, I (as package author) want to show some
>    stuff, or even provide compatibility functionality for some
>    packages that are related to mine, but which I really do not
> ``suggest''
>    to also be installed, e.g., because the other packages do
>    similar stuff as mine, but I believe my package to be
>    superior.  In such a case, I may, e.g., want to provide
>    functions for porting the other package classes to my package's.
>
> Duncan Murdoch has proposed to take care of "1)" by
> still only use 'Suggests' but adding another option to 'R CMD
> check', let's say   --no-suggests  which would run all the
> checks without having the suggested packages available
> --- something not quite easy to implement, BTW:
> Imagine the typical windows users who (AFAICS) always only use
> one library into which they install all packages.
> How do you want the
>     if( require(<my_suggested_package>) ) {
>        ...
>     }
> clause *not* to be triggered in such a case ?
> I do agree quite a bit that such a '--no-suggests' option would
> be very useful for 'R CMD check' -- in addition to my proposal.
>
> Further, I think "2)" above is not taken care of anyway.
> After all the interesting statements and alternative proposals,
> I'm still proposing to introduce a  'canUse'  field for DESCRIPTION
> which
>   a) has a "human-readable intent" of being weaker than 'Suggests'
>   b) will not require its packages to be available for R CMD check
>   c) conveys extra information about the package's context, to humans, and
>   d) will potentially be used in automated or semi-manual
>      ``R package database management''
>

Sorry, I did not want to give the impression of ignoring your proposal,
but wanted to clarify the ratio behid what we currently have first and
then ran out of time. I agree that a new field like you describe above can
be very usefull, the only thing I worry about is if it makes life really
easier or if it confuses users and developers even more.

Debian has Depends/Recommends/Suggests and after 10 years of using Debian
I would still have to got to the Debian guidelines to learn what the exact
difference between the latter two is. There certainly is a distinction,
and I knew it at some point in time, but when I read a package description
now I always condense it to needed/optional in my brain ... hence I went
for a two-layer model in R.

Fritz

PS: I would have immediate use for canUse, because flexclust "suggests"
cluster only because it has coercion methods for converting to flexclust
objects ... canUse certainly would describe better what is going on.



From edd at debian.org  Wed Aug 30 14:19:42 2006
From: edd at debian.org (Dirk Eddelbuettel)
Date: Wed, 30 Aug 2006 07:19:42 -0500
Subject: [Rd]  "Enhances"  (Was: 'CanMakeUseOf' field)
In-Reply-To: <22354.151.100.147.28.1156939493.squirrel@webmail.lrz-muenchen.de>
References: <m2wt8sgyo0.fsf@ziti.fhcrc.org>
	<17651.65163.240840.365787@stat.math.ethz.ch>
	<44F4473D.9030203@bank-banque-canada.ca>
	<17652.19292.998960.686119@stat.math.ethz.ch>
	<44F46112.7060809@stats.uwo.ca> <m2d5ajedon.fsf@ziti.fhcrc.org>
	<63945.151.100.49.234.1156923253.squirrel@webmail.lrz-muenchen.de>
	<17653.20470.199569.870638@stat.math.ethz.ch>
	<22354.151.100.147.28.1156939493.squirrel@webmail.lrz-muenchen.de>
Message-ID: <17653.33374.71038.862175@basebud.nulle.part>


On 30 August 2006 at 14:04, friedrich.leisch at stat.uni-muenchen.de wrote:
| Debian has Depends/Recommends/Suggests and after 10 years of using Debian
| I would still have to got to the Debian guidelines to learn what the exact
| difference between the latter two is. There certainly is a distinction,

It's all defined somewhere, but I by and large second the sentiment.

Now, while we're at it, Debian also has a field called "Enhances:" and IIRC
it provides a means to communicate a relationship 'the other way'.  Ie a
package foo, rather than being 'pulled in' by a package bar via a Depends,
makes itself available to bar.   That is useful as you can enhance the
'graph' structure without a change in the other package.  Maybe that would be
of use for R too?

Dirk

-- 
Hell, there are no rules here - we're trying to accomplish something. 
                                                  -- Thomas A. Edison



From jmc at r-project.org  Wed Aug 30 15:25:27 2006
From: jmc at r-project.org (John Chambers)
Date: Wed, 30 Aug 2006 09:25:27 -0400
Subject: [Rd] S4 Methods dispatch
Message-ID: <44F591C7.7070900@r-project.org>

A revision of r-devel 2.4.0 is being committed today with changes to 
method and class management.

The changes are internal but extensive.  All packages that use S4 
methods and classes need to be reinstalled from source to use the new 
version.

The main effects are to speed up method caching and dispatch, and to fix 
some problems with selecting inherited methods.  The new design is also 
cleaner, so we can experiment more easily in the future with changes for 
efficiency or semantics.

The change will mostly be noticeable in attaching packages with many 
methods.  The CPU time for attaching package Matrix, for example, goes 
down by about a factor of 7 compared to R 2.3.1, timed on a Mac G5.

The other major change is that now _all_ inherited methods are examined 
and one of the closest matches is chosen.  The old selection took the 
first candidate found, so the current version is better defined, and 
will also let us experiment with various tuning & strategies.

There is a draft paper describing method selection at
  http://developer.r-project.org/howMethodsWork.pdf
(It's a document in progress, so go back in a few days for a revised 
version.)

If a package uses inheritance for method selection with multiple 
arguments, there may well be changes in behavior.  We found examples in 
both methods itself and in Matrix that needed attention.

John



From sfalcon at fhcrc.org  Wed Aug 30 16:06:24 2006
From: sfalcon at fhcrc.org (Seth Falcon)
Date: Wed, 30 Aug 2006 07:06:24 -0700
Subject: [Rd] 'CanMakeUseOf' field
In-Reply-To: <17653.20352.330891.556094@mithrandir.hornik.net> (Kurt Hornik's
	message of "Wed, 30 Aug 2006 10:42:40 +0200")
References: <m2wt8sgyo0.fsf@ziti.fhcrc.org>
	<17651.65163.240840.365787@stat.math.ethz.ch>
	<44F4473D.9030203@bank-banque-canada.ca>
	<17652.19292.998960.686119@stat.math.ethz.ch>
	<44F46112.7060809@stats.uwo.ca>
	<17653.20352.330891.556094@mithrandir.hornik.net>
Message-ID: <m2fyfe5ndr.fsf@ziti.fhcrc.org>

Kurt Hornik <Kurt.Hornik at wu-wien.ac.at> writes:
> An internal environment variable called
>
>   _R_CHECK_FORCE_SUGGESTS_
>
> which controls this has been in place for quite some time now.  One can
> trivially add a Perl R CMD check configure variable for it.  I am a bit
> hesitant to add a --force-suggests cola to R CMD check, as this
> hardwires a legacy dependency model which may not be up to future needs.
>
> As an aside, I have never understood whe developers have need for such
> an option (as I would have assumed that they'd typically try to check
> all of their code).

This is not an aside, but the heart of the issue IMHO :-)

One case in which checking Suggests does not make sense is when a
package provides optional functionality that is platform specific.  A
given Suggests entry may only be available on platform A, but it still
is desirable to check the package on platform B.  Similar issues can
arise during development when a given Suggests entry stops working
with R-devel.

Further, if an item in Suggests means it is optional, then one
_should_ test that by testing the package without the optional packge
being available.  There are a few ways for a true dependency to sneak
into the code.  So I agree that typically developers want to test all
of their code, but that implies being able to check a package without
its Suggests being available (I realize this may be hard to implement,
but easily having R CMD check ignore Suggests is a good start).

And lastly, Suggests is currently used to list packages used for
extended examples in package vignettes and being able to easily
perform all other checks makes sense to me.


Bw,

+ seth



From murdoch at stats.uwo.ca  Wed Aug 30 16:30:01 2006
From: murdoch at stats.uwo.ca (Duncan Murdoch)
Date: Wed, 30 Aug 2006 10:30:01 -0400
Subject: [Rd] 'CanMakeUseOf' field
In-Reply-To: <17653.20470.199569.870638@stat.math.ethz.ch>
References: <m2wt8sgyo0.fsf@ziti.fhcrc.org>	<17651.65163.240840.365787@stat.math.ethz.ch>	<44F4473D.9030203@bank-banque-canada.ca>	<17652.19292.998960.686119@stat.math.ethz.ch>	<44F46112.7060809@stats.uwo.ca>
	<m2d5ajedon.fsf@ziti.fhcrc.org>	<63945.151.100.49.234.1156923253.squirrel@webmail.lrz-muenchen.de>
	<17653.20470.199569.870638@stat.math.ethz.ch>
Message-ID: <44F5A0E9.1010309@stats.uwo.ca>

On 8/30/2006 4:44 AM, Martin Maechler wrote:
>>>>>> "FrL" == friedrich leisch <friedrich.leisch at stat.uni-muenchen.de>
>>>>>>     on Wed, 30 Aug 2006 09:34:13 +0200 (MEST) writes:
> 
>     >> Duncan Murdoch <murdoch at stats.uwo.ca> writes:
>     >>> I think we need an option to R CMD check rather than a new field in the
>     >>> DESCRIPTION.  Currently a package could be mentioned for any of these
>     >>> reasons:
>     >>> 
>     >>> 1.  To make functions, examples or vignettes work
>     >>> 2.  To allow optional functionality in functions, examples or vignettes.
>     >>> 3.  Because it contains complementary functions.
>     >>> 
>     >>> I don't think we really need to worry about 3:  it should be contained
>     >>> in 1 or 2, if reasonably complete examples are given.
>     >>> 
>     >>> Case 1 is handled by Depends.
>     >> 
>     >> I think there is an important distinction between a dependency needed
>     >> for the package to function and a dependency needed to demonstrate
>     >> said functionality via an example or vignette.  The former is what
>     >> Depends is about, the latter is something else (Suggests).
> 
>     FrL> Sorry to join in late, I am at the Compstat conference and have limited
>     FrL> email access. What Seth describes in the above paragraph is exactly what I
>     FrL> had in mind when splitting the single Depends field we had into Depends
>     FrL> and Suggests: Depends are a necessity to run the package, Suggests is nice
>     FrL> to have but not necessary. If you know how to use a package you may the
>     FrL> decide not to install a package that is only suggested, but
> 
>     FrL> * may not be interested to execute the examples,
>     FrL> * know that you never need the extra functionality
>     FrL> * ...
> 
>     FrL> so it should not be auto-installed unless you ask for
>     FrL> it (the default could also be the other way round, the
>     FrL> point is that it should be possible to have package foo
>     FrL> but not the packages it only suggests). On CRAN we
>     FrL> check with all suggestions to test all bits and pieces,
>     FrL> having an option in R CMD check to test only with
>     FrL> suggests may be nice, if there is use for it.
> 
> Yes.
> However, I see two (related) problems with the current 'Suggests'
> and that's why I opened this thread proposing to have a 
> (what I now would want to simply call)  'canUse' :
> 
> 1) For 'R CMD check' (and hence CRAN checking),
>    Packages in 'Suggests' must be require()able, and
>    hence all testing only happens *with* the suggested packages
>    being there, and not without.
> 
> 2) "Suggests"  suggests to the human reader of DESCRIPTION that
>    the package authors suggest to also install the packages listed
>    there.
>    Now there are cases, I (as package author) want to show some
>    stuff, or even provide compatibility functionality for some
>    packages that are related to mine, but which I really do not ``suggest''
>    to also be installed, e.g., because the other packages do
>    similar stuff as mine, but I believe my package to be
>    superior.  In such a case, I may, e.g., want to provide 
>    functions for porting the other package classes to my package's.
> 
> Duncan Murdoch has proposed to take care of "1)" by
> still only use 'Suggests' but adding another option to 'R CMD
> check', let's say   --no-suggests  which would run all the
> checks without having the suggested packages available  
> --- something not quite easy to implement, BTW:
> Imagine the typical windows users who (AFAICS) always only use
> one library into which they install all packages.
> How do you want the 
>     if( require(<my_suggested_package>) ) {
>        ...
>     }
> clause *not* to be triggered in such a case ?

I would expect require to return FALSE.  This could be done by check 
installing a new version of require() (as it installs new T and F), or 
by the standard require() being modified to check a stop list before 
acting (I'd prefer this, because it would make it easier for developers 
to experiment with functions in different environments), or by playing 
around with the names of things in the library (probably not workable on 
Windows), etc.

I think the default check behaviour on CRAN should be my middle case: 
test based on what is currently installed, don't require packages listed 
in Suggests to be installed.  I'm not sure if that should be the default 
behaviour for R CMD check at the command line:  as Kurt said, usually a 
developer wants to check all of the code.

> I do agree quite a bit that such a '--no-suggests' option would
> be very useful for 'R CMD check' -- in addition to my proposal.

I think the other extreme (which I think is there now as 
_R_CHECK_FORCE_SUGGESTS_) is also important.

> 
> Further, I think "2)" above is not taken care of anyway.
> After all the interesting statements and alternative proposals,
> I'm still proposing to introduce a  'canUse'  field for DESCRIPTION
> which
>   a) has a "human-readable intent" of being weaker than 'Suggests'
>   b) will not require its packages to be available for R CMD check
>   c) conveys extra information about the package's context, to humans, and
>   d) will potentially be used in automated or semi-manual 
>      ``R package database management''

I think d) is important, but I think there are too many variations on a) 
and c) to hope that this would be used consistently.  As Fritz said, the 
thing he can remember (and what I would remember) is whether a package 
is mandatory or optional.  Fine variations within "optional" are just 
too hard to define clearly in a two-level classification.

On the other hand, they are relatively easy to convey in clearly written 
documentation.  So I'd still recommend that we stay with just Depends 
and Suggests, but encourage authors to document what they mean by 
"Suggests".

Duncan Murdoch

> 
> Martin
> 
>     FrL> Ad the wording in the manual: obviously that is not
>     FrL> optimal (otherwise no need for parts of this email
>     FrL> thread), perhaps somebody else than the original author
>     FrL> (=me) could try to improve it for 2.4 after this
>     FrL> clarifications?  Otherwise I will give it a shot next
>     FrL> week after I return from Rome.
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel



From r.hankin at noc.soton.ac.uk  Wed Aug 30 16:33:44 2006
From: r.hankin at noc.soton.ac.uk (Robin Hankin)
Date: Wed, 30 Aug 2006 15:33:44 +0100
Subject: [Rd] setMethod() and log()
Message-ID: <3CE5144C-800B-4504-99CC-A56F1C7AAD1C@soc.soton.ac.uk>

Hi

I am having difficulty with setMethod().  I have a "brob" class of  
objects whose
representation has two slots: "x" and "positive".  Slot "x"  (double)  
holds the log
of a number and slot "positive" (logical) its sign.   The idea is  
that large numbers
can be handled.

I'm trying to implement a log() method using an analogue of the  
setMethod() example
for polynomials on page 117 of V&R.  abs() works [I think], but log()  
doesn't:

[transcript follows, source for  the classes below]



 > a <- as.brob((-4:4 )+0.4)
 > a
An object of class "brob"
Slot "x":
[1]  1.2809338  0.9555114  0.4700036 -0.5108256 -0.9162907   
0.3364722  0.8754687
[8]  1.2237754  1.4816045

Slot "positive":
[1] FALSE FALSE FALSE FALSE  TRUE  TRUE  TRUE  TRUE  TRUE

 > abs(a)
An object of class "brob"
Slot "x":
[1]  1.2809338  0.9555114  0.4700036 -0.5108256 -0.9162907   
0.3364722  0.8754687
[8]  1.2237754  1.4816045

Slot "positive":
[1] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE

# This works: each element is now positive.

 > log(a)
Error in log(x) : Non-numeric argument to mathematical function
 >



What's wrong with my setMethod() call below?





setClass("brob",
          representation = representation 
(x="numeric",positive="logical"),
          prototype      = list(x=numeric(),positive=logical())
          )

setAs("brob", "numeric", function(from){
   out <- exp(from at x)
   out[!from at positive] <- -out[!from at positive]
   return(out)
}
       )

setMethod("as.numeric",signature(x="brob"),function(x){as(x,"numeric")})

is.brob <- function(x){is(x,"brob")}

"brob" <- function(x,positive){
   if(missing(positive)){
     positive <- rep(TRUE,length(x))
   }
   if(length(positive)==1){
     positive <- rep(positive,length(x))
   }
   new("brob",x=x,positive=positive)
}

as.brob <- function(x){
   brob(log(abs(x)),x>0)
}

setMethod("Math", "brob",
           function(x){
             switch(.Generic,
                    abs    = brob(x at x),
                    log    = { out <- x at x
                               out[!x at positive] <- NaN
                               out
                             },
                    acos   =,
                    acosh  =,
                    asin   =,
                    asinh  =,
                    atan   =,
                    atanh  =,
                    ceiling=,
                    cos    =,
                    cosh   =,
                    cumsum =,
                    exp    =,
                    floor  =,
                    gamma  =,
                    lgamma =,
                    sin    =,
                    sinh   =,
                    tan    =,
                    tanh   =,
                    trunc  = as.brob(callGeneric(as.numeric(x))),
                    stop(paste(.Generic, "not allowed on  
Brobdingnagian numbers"))
                      )
           }
           )






--
Robin Hankin
Uncertainty Analyst
National Oceanography Centre, Southampton
European Way, Southampton SO14 3ZH, UK
  tel  023-8059-7743



From sfalcon at fhcrc.org  Wed Aug 30 17:01:44 2006
From: sfalcon at fhcrc.org (Seth Falcon)
Date: Wed, 30 Aug 2006 08:01:44 -0700
Subject: [Rd] "Enhances"
In-Reply-To: <17653.33374.71038.862175@basebud.nulle.part> (Dirk
	Eddelbuettel's message of "Wed, 30 Aug 2006 07:19:42 -0500")
References: <m2wt8sgyo0.fsf@ziti.fhcrc.org>
	<17651.65163.240840.365787@stat.math.ethz.ch>
	<44F4473D.9030203@bank-banque-canada.ca>
	<17652.19292.998960.686119@stat.math.ethz.ch>
	<44F46112.7060809@stats.uwo.ca> <m2d5ajedon.fsf@ziti.fhcrc.org>
	<63945.151.100.49.234.1156923253.squirrel@webmail.lrz-muenchen.de>
	<17653.20470.199569.870638@stat.math.ethz.ch>
	<22354.151.100.147.28.1156939493.squirrel@webmail.lrz-muenchen.de>
	<17653.33374.71038.862175@basebud.nulle.part>
Message-ID: <m23bbe5ktj.fsf@ziti.fhcrc.org>

Dirk Eddelbuettel <edd at debian.org> writes:
> Now, while we're at it, Debian also has a field called "Enhances:" and IIRC
> it provides a means to communicate a relationship 'the other way'.  Ie a
> package foo, rather than being 'pulled in' by a package bar via a Depends,
> makes itself available to bar.   That is useful as you can enhance the
> 'graph' structure without a change in the other package.  Maybe that would be
> of use for R too?

Such a field DependsOnMe might be useful in some cases, but one can
compute that using the dependency graph.  One just needs a bit of
code...

[shameless plug]

I have an almost complete package 'pkgDepTools' that provides tools
for computing and analyzing dependency relationships among R packages.

It provides tools for building a graph-based representation of the
dependencies among all packages in a list of CRAN-style package
repositories.  There are also utilities for computing installation
order of a given package.  If the RCurl package is available, an
estimate of the download size required to install a given package and
its dependencies can be obtained.

It should be available in Bioconductor in the next couple of weeks.

Bw,

+ seth



From lenon at fstrf-wi.org  Wed Aug 30 17:46:10 2006
From: lenon at fstrf-wi.org (lenon at fstrf-wi.org)
Date: Wed, 30 Aug 2006 17:46:10 +0200 (CEST)
Subject: [Rd] Installation error (PR#9190)
Message-ID: <20060830154610.3CD08283B0@slim.kubism.ku.dk>

Full_Name: Patrick Lenon
Version: 2.3.1
OS: Solaris 10
Submission from: (NULL) (144.92.92.204)


During ./configure of R 2.3.1 (R-home directory of `/u/home/lenon/R/ru231/') I
got this feedback shown below.  

configure: WARNING: floatingpoint.h: present but cannot be compiled
configure: WARNING: floatingpoint.h:     check for missing prerequisite
headers?
configure: WARNING: floatingpoint.h: see the Autoconf documentation
configure: WARNING: floatingpoint.h:     section "Present But Cannot Be
Compiled"
configure: WARNING: floatingpoint.h: proceeding with the preprocessor's result
configure: WARNING: floatingpoint.h: in the future, the compiler will take
precedence
configure: WARNING:     ## ----------------------------------- ##
configure: WARNING:     ## Report this to r-bugs at R-project.org ##
configure: WARNING:     ## ----------------------------------- ##

Subsequently the "make" failed with this error:

/usr/local/include/stdio.h:186: error: conflicting types for `FILE'
/usr/local/lib/gcc-lib/sparc-sun-solaris2.9/3.3.1/include/floatingpoint.h:52:
error: previous declaration of `FILE'
make[3]: *** [bakslv.o] Error 1
make[3]: Leaving directory `/u/home/lenon/R/ru231/R-2.3.1/src/appl'
make[2]: *** [R] Error 2
make[2]: Leaving directory `/u/home/lenon/R/ru231/R-2.3.1/src/appl'
make[1]: *** [R] Error 1
make[1]: Leaving directory `/u/home/lenon/R/ru231/R-2.3.1/src'
make: *** [R] Error 1

I did a search for 'floatingpoint.h' in the R bug archive and got no results.



From sfalcon at fhcrc.org  Wed Aug 30 17:48:42 2006
From: sfalcon at fhcrc.org (Seth Falcon)
Date: Wed, 30 Aug 2006 08:48:42 -0700
Subject: [Rd] Duplicated definition of helper in available.packages
Message-ID: <m2lkp6442t.fsf@ziti.fhcrc.org>

Hi,

The .checkRversion helper function is defined twice in
available.packages.  I'm pretty sure one definition will suffice.

Untested patch below.

+ seth


diff --git a/src/library/utils/R/packages.R b/src/library/utils/R/packages.R
index 0b84f02..5184992 100644
--- a/src/library/utils/R/packages.R
+++ b/src/library/utils/R/packages.R
@@ -86,13 +86,6 @@ available.packages <-
     }
     ## ignore packages which don't fit our version of R
     if(length(res)) {
-        .checkRversion <- function(x) {
-            if(is.na(xx <- x["Depends"])) return(TRUE)
-            xx <- tools:::.split_dependencies(xx)
-            if(length(z <- xx[["R"]]) > 1)
-                eval(parse(text=paste("currentR", z$op, "z$version")))
-            else TRUE
-        }
         currentR <- getRversion()
         res <- res[apply(res, 1, .checkRversion), , drop=FALSE]
     }



From mtmorgan at fhcrc.org  Wed Aug 30 18:04:18 2006
From: mtmorgan at fhcrc.org (Martin Morgan)
Date: Wed, 30 Aug 2006 09:04:18 -0700
Subject: [Rd] setMethod() and log()
In-Reply-To: <3CE5144C-800B-4504-99CC-A56F1C7AAD1C@soc.soton.ac.uk> (Robin
	Hankin's message of "Wed, 30 Aug 2006 15:33:44 +0100")
References: <3CE5144C-800B-4504-99CC-A56F1C7AAD1C@soc.soton.ac.uk>
Message-ID: <6phd5ai9pml.fsf@gopher4.fhcrc.org>

Hi Robin,

from reading ?Math:

     Note: currently those members which are not primitive functions
     must have been converted to S4 generic functions (preferably
     _before_ setting an S4 group generic method) as it only sets
     methods for known S4 generics.  This can be done by a call to
     'setGeneric', for example 'setGeneric("round", group="Math2")'.

so

setGeneric("log", group="Math")

before setMethod("Math", ...) seems to do the trick (perhaps at the
expense of adding explicit S4 method dispatch to log). The difference
between abs and log is apparent from looking at their definitions

> abs
.Primitive("abs")
> log
function (x, base = exp(1)) 
if (missing(base)) .Internal(log(x)) else .Internal(log(x, base))
<environment: namespace:base>

Hope that removes some uncertainty.

Martin
-- 
Bioconductor

Robin Hankin <r.hankin at noc.soton.ac.uk> writes:

> Hi
>
> I am having difficulty with setMethod().  I have a "brob" class of  
> objects whose
> representation has two slots: "x" and "positive".  Slot "x"  (double)  
> holds the log
> of a number and slot "positive" (logical) its sign.   The idea is  
> that large numbers
> can be handled.
>
> I'm trying to implement a log() method using an analogue of the  
> setMethod() example
> for polynomials on page 117 of V&R.  abs() works [I think], but log()  
> doesn't:
>
> [transcript follows, source for  the classes below]
>
>
>
>  > a <- as.brob((-4:4 )+0.4)
>  > a
> An object of class "brob"
> Slot "x":
> [1]  1.2809338  0.9555114  0.4700036 -0.5108256 -0.9162907   
> 0.3364722  0.8754687
> [8]  1.2237754  1.4816045
>
> Slot "positive":
> [1] FALSE FALSE FALSE FALSE  TRUE  TRUE  TRUE  TRUE  TRUE
>
>  > abs(a)
> An object of class "brob"
> Slot "x":
> [1]  1.2809338  0.9555114  0.4700036 -0.5108256 -0.9162907   
> 0.3364722  0.8754687
> [8]  1.2237754  1.4816045
>
> Slot "positive":
> [1] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE
>
> # This works: each element is now positive.
>
>  > log(a)
> Error in log(x) : Non-numeric argument to mathematical function
>  >
>
>
>
> What's wrong with my setMethod() call below?
>
>
>
>
>
> setClass("brob",
>           representation = representation 
> (x="numeric",positive="logical"),
>           prototype      = list(x=numeric(),positive=logical())
>           )
>
> setAs("brob", "numeric", function(from){
>    out <- exp(from at x)
>    out[!from at positive] <- -out[!from at positive]
>    return(out)
> }
>        )
>
> setMethod("as.numeric",signature(x="brob"),function(x){as(x,"numeric")})
>
> is.brob <- function(x){is(x,"brob")}
>
> "brob" <- function(x,positive){
>    if(missing(positive)){
>      positive <- rep(TRUE,length(x))
>    }
>    if(length(positive)==1){
>      positive <- rep(positive,length(x))
>    }
>    new("brob",x=x,positive=positive)
> }
>
> as.brob <- function(x){
>    brob(log(abs(x)),x>0)
> }
>
> setMethod("Math", "brob",
>            function(x){
>              switch(.Generic,
>                     abs    = brob(x at x),
>                     log    = { out <- x at x
>                                out[!x at positive] <- NaN
>                                out
>                              },
>                     acos   =,
>                     acosh  =,
>                     asin   =,
>                     asinh  =,
>                     atan   =,
>                     atanh  =,
>                     ceiling=,
>                     cos    =,
>                     cosh   =,
>                     cumsum =,
>                     exp    =,
>                     floor  =,
>                     gamma  =,
>                     lgamma =,
>                     sin    =,
>                     sinh   =,
>                     tan    =,
>                     tanh   =,
>                     trunc  = as.brob(callGeneric(as.numeric(x))),
>                     stop(paste(.Generic, "not allowed on  
> Brobdingnagian numbers"))
>                       )
>            }
>            )
>
>
>
>
>
>
> --
> Robin Hankin
> Uncertainty Analyst
> National Oceanography Centre, Southampton
> European Way, Southampton SO14 3ZH, UK
>   tel  023-8059-7743
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel



From ripley at stats.ox.ac.uk  Wed Aug 30 18:09:39 2006
From: ripley at stats.ox.ac.uk (Prof Brian Ripley)
Date: Wed, 30 Aug 2006 17:09:39 +0100 (BST)
Subject: [Rd] Installation error (PR#9190)
In-Reply-To: <20060830154610.3CD08283B0@slim.kubism.ku.dk>
References: <20060830154610.3CD08283B0@slim.kubism.ku.dk>
Message-ID: <Pine.LNX.4.64.0608301658190.3574@gannet.stats.ox.ac.uk>

This is a bug in your compiler installation, not one in R.

I notice you have a very old version of gcc, and that you have a system
header (stdio.h) in /usr/local/include.

It seems likely that you have a version of the mismatch problem discussed 
in the R-admin manual:

  @command{gcc} makes modified versions of some header files, and
  so (for example) @command{gcc} compiled under Solaris 2.6 will not
  compile @R{} under Solaris 2.7. 


On Wed, 30 Aug 2006, lenon at fstrf-wi.org wrote:

> Full_Name: Patrick Lenon
> Version: 2.3.1
> OS: Solaris 10
> Submission from: (NULL) (144.92.92.204)
> 
> 
> During ./configure of R 2.3.1 (R-home directory of `/u/home/lenon/R/ru231/') I
> got this feedback shown below.  
> 
> configure: WARNING: floatingpoint.h: present but cannot be compiled
> configure: WARNING: floatingpoint.h:     check for missing prerequisite
> headers?
> configure: WARNING: floatingpoint.h: see the Autoconf documentation
> configure: WARNING: floatingpoint.h:     section "Present But Cannot Be
> Compiled"
> configure: WARNING: floatingpoint.h: proceeding with the preprocessor's result
> configure: WARNING: floatingpoint.h: in the future, the compiler will take
> precedence
> configure: WARNING:     ## ----------------------------------- ##
> configure: WARNING:     ## Report this to r-bugs at R-project.org ##
> configure: WARNING:     ## ----------------------------------- ##
> 
> Subsequently the "make" failed with this error:
> 
> /usr/local/include/stdio.h:186: error: conflicting types for `FILE'
> /usr/local/lib/gcc-lib/sparc-sun-solaris2.9/3.3.1/include/floatingpoint.h:52:
> error: previous declaration of `FILE'
> make[3]: *** [bakslv.o] Error 1
> make[3]: Leaving directory `/u/home/lenon/R/ru231/R-2.3.1/src/appl'
> make[2]: *** [R] Error 2
> make[2]: Leaving directory `/u/home/lenon/R/ru231/R-2.3.1/src/appl'
> make[1]: *** [R] Error 1
> make[1]: Leaving directory `/u/home/lenon/R/ru231/R-2.3.1/src'
> make: *** [R] Error 1
> 
> I did a search for 'floatingpoint.h' in the R bug archive and got no results.
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
> 

-- 
Brian D. Ripley,                  ripley at stats.ox.ac.uk
Professor of Applied Statistics,  http://www.stats.ox.ac.uk/~ripley/
University of Oxford,             Tel:  +44 1865 272861 (self)
1 South Parks Road,                     +44 1865 272866 (PA)
Oxford OX1 3TG, UK                Fax:  +44 1865 272595



From pgilbert at bank-banque-canada.ca  Wed Aug 30 18:28:41 2006
From: pgilbert at bank-banque-canada.ca (Paul Gilbert)
Date: Wed, 30 Aug 2006 12:28:41 -0400
Subject: [Rd] 'CanMakeUseOf' field
In-Reply-To: <44F5A0E9.1010309@stats.uwo.ca>
References: <m2wt8sgyo0.fsf@ziti.fhcrc.org>	<17651.65163.240840.365787@stat.math.ethz.ch>	<44F4473D.9030203@bank-banque-canada.ca>	<17652.19292.998960.686119@stat.math.ethz.ch>	<44F46112.7060809@stats.uwo.ca>	<m2d5ajedon.fsf@ziti.fhcrc.org>	<63945.151.100.49.234.1156923253.squirrel@webmail.lrz-muenchen.de>	<17653.20470.199569.870638@stat.math.ethz.ch>
	<44F5A0E9.1010309@stats.uwo.ca>
Message-ID: <44F5BCB9.7030702@bank-banque-canada.ca>

Duncan Murdoch wrote:
> On 8/30/2006 4:44 AM, Martin Maechler wrote:
>>>>>>> "FrL" == friedrich leisch <friedrich.leisch at stat.uni-muenchen.de>
>>>>>>>     on Wed, 30 Aug 2006 09:34:13 +0200 (MEST) writes:
>>     >> Duncan Murdoch <murdoch at stats.uwo.ca> writes:
>>     >>> I think we need an option to R CMD check rather than a new field in the
>>     >>> DESCRIPTION.  Currently a package could be mentioned for any of these
>>     >>> reasons:
>>     >>> 
>>     >>> 1.  To make functions, examples or vignettes work
>>     >>> 2.  To allow optional functionality in functions, examples or vignettes.
>>     >>> 3.  Because it contains complementary functions.
>>     >>> 
>>     >>> I don't think we really need to worry about 3:  it should be contained
>>     >>> in 1 or 2, if reasonably complete examples are given.
>>     >>> 
>>     >>> Case 1 is handled by Depends.
>>     >> 
>>     >> I think there is an important distinction between a dependency needed
>>     >> for the package to function and a dependency needed to demonstrate
>>     >> said functionality via an example or vignette.  The former is what
>>     >> Depends is about, the latter is something else (Suggests).
>>
>>     FrL> Sorry to join in late, I am at the Compstat conference and have limited
>>     FrL> email access. What Seth describes in the above paragraph is exactly what I
>>     FrL> had in mind when splitting the single Depends field we had into Depends
>>     FrL> and Suggests: Depends are a necessity to run the package, Suggests is nice
>>     FrL> to have but not necessary. If you know how to use a package you may the
>>     FrL> decide not to install a package that is only suggested, but
>>
>>     FrL> * may not be interested to execute the examples,
>>     FrL> * know that you never need the extra functionality
>>     FrL> * ...
>>
>>     FrL> so it should not be auto-installed unless you ask for
>>     FrL> it (the default could also be the other way round, the
>>     FrL> point is that it should be possible to have package foo
>>     FrL> but not the packages it only suggests). On CRAN we
>>     FrL> check with all suggestions to test all bits and pieces,
>>     FrL> having an option in R CMD check to test only with
>>     FrL> suggests may be nice, if there is use for it.
>>
>> Yes.
>> However, I see two (related) problems with the current 'Suggests'
>> and that's why I opened this thread proposing to have a 
>> (what I now would want to simply call)  'canUse' :
>>
>> 1) For 'R CMD check' (and hence CRAN checking),
>>    Packages in 'Suggests' must be require()able, and
>>    hence all testing only happens *with* the suggested packages
>>    being there, and not without.
>>
>> 2) "Suggests"  suggests to the human reader of DESCRIPTION that
>>    the package authors suggest to also install the packages listed
>>    there.
>>    Now there are cases, I (as package author) want to show some
>>    stuff, or even provide compatibility functionality for some
>>    packages that are related to mine, but which I really do not ``suggest''
>>    to also be installed, e.g., because the other packages do
>>    similar stuff as mine, but I believe my package to be
>>    superior.  In such a case, I may, e.g., want to provide 
>>    functions for porting the other package classes to my package's.
>>
>> Duncan Murdoch has proposed to take care of "1)" by
>> still only use 'Suggests' but adding another option to 'R CMD
>> check', let's say   --no-suggests  which would run all the
>> checks without having the suggested packages available  
>> --- something not quite easy to implement, BTW:
>> Imagine the typical windows users who (AFAICS) always only use
>> one library into which they install all packages.
>> How do you want the 
>>     if( require(<my_suggested_package>) ) {
>>        ...
>>     }
>> clause *not* to be triggered in such a case ?
> 
> I would expect require to return FALSE.  This could be done by check 
> installing a new version of require() (as it installs new T and F), or 
> by the standard require() being modified to check a stop list before 
> acting (I'd prefer this, because it would make it easier for developers 
> to experiment with functions in different environments), or by playing 
> around with the names of things in the library (probably not workable on 
> Windows), etc.
> 
> I think the default check behaviour on CRAN should be my middle case: 
> test based on what is currently installed, don't require packages listed 
> in Suggests to be installed.  I'm not sure if that should be the default 
> behaviour for R CMD check at the command line:  as Kurt said, usually a 
> developer wants to check all of the code.
> 
>> I do agree quite a bit that such a '--no-suggests' option would
>> be very useful for 'R CMD check' -- in addition to my proposal.
> 
> I think the other extreme (which I think is there now as 
> _R_CHECK_FORCE_SUGGESTS_) is also important.
> 
>> Further, I think "2)" above is not taken care of anyway.
>> After all the interesting statements and alternative proposals,
>> I'm still proposing to introduce a  'canUse'  field for DESCRIPTION
>> which
>>   a) has a "human-readable intent" of being weaker than 'Suggests'
>>   b) will not require its packages to be available for R CMD check
>>   c) conveys extra information about the package's context, to humans, and
>>   d) will potentially be used in automated or semi-manual 
>>      ``R package database management''
> 
> I think d) is important, but I think there are too many variations on a) 
> and c) to hope that this would be used consistently.  As Fritz said, the 
> thing he can remember (and what I would remember) is whether a package 
> is mandatory or optional.  Fine variations within "optional" are just 
> too hard to define clearly in a two-level classification.
> 
> On the other hand, they are relatively easy to convey in clearly written 
> documentation.  So I'd still recommend that we stay with just Depends 
> and Suggests, but encourage authors to document what they mean by 
> "Suggests".

The problem I see here is that this is a change from the status quo, 
which is likely to make a real mess for some time.  The status quo is 
that packages in Depends and Suggests are needed to check examples and 
vignettes. I would not change this without a very good reason.  It would 
be best to put other suggestions of extensions, that some users may want 
to use, somewhere else.  The current situation is that these suggestions 
are sprinkled in Rd files, vignettes, web pages, etc. This situation is 
not too bad, but it might be nice to have some place users would expect 
to find this information.  However, changing the meaning of Suggests to 
be developer defined does not strike me as an improvement.

Paul Gilbert
> 
> Duncan Murdoch
> 
>> Martin
>>
>>     FrL> Ad the wording in the manual: obviously that is not
>>     FrL> optimal (otherwise no need for parts of this email
>>     FrL> thread), perhaps somebody else than the original author
>>     FrL> (=me) could try to improve it for 2.4 after this
>>     FrL> clarifications?  Otherwise I will give it a shot next
>>     FrL> week after I return from Rome.
>>
>> ______________________________________________
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
====================================================================================

La version fran?aise suit le texte anglais.

------------------------------------------------------------------------------------

This email may contain privileged and/or confidential inform...{{dropped}}



From murdoch at stats.uwo.ca  Wed Aug 30 18:41:52 2006
From: murdoch at stats.uwo.ca (Duncan Murdoch)
Date: Wed, 30 Aug 2006 12:41:52 -0400
Subject: [Rd] 'CanMakeUseOf' field
In-Reply-To: <44F5BCB9.7030702@bank-banque-canada.ca>
References: <m2wt8sgyo0.fsf@ziti.fhcrc.org>	<17651.65163.240840.365787@stat.math.ethz.ch>	<44F4473D.9030203@bank-banque-canada.ca>	<17652.19292.998960.686119@stat.math.ethz.ch>	<44F46112.7060809@stats.uwo.ca>	<m2d5ajedon.fsf@ziti.fhcrc.org>	<63945.151.100.49.234.1156923253.squirrel@webmail.lrz-muenchen.de>	<17653.20470.199569.870638@stat.math.ethz.ch>	<44F5A0E9.1010309@stats.uwo.ca>
	<44F5BCB9.7030702@bank-banque-canada.ca>
Message-ID: <44F5BFD0.3040502@stats.uwo.ca>

On 8/30/2006 12:28 PM, Paul Gilbert wrote:
> Duncan Murdoch wrote:
>> On 8/30/2006 4:44 AM, Martin Maechler wrote:
>>>>>>>> "FrL" == friedrich leisch <friedrich.leisch at stat.uni-muenchen.de>
>>>>>>>>     on Wed, 30 Aug 2006 09:34:13 +0200 (MEST) writes:
>>>     >> Duncan Murdoch <murdoch at stats.uwo.ca> writes:
>>>     >>> I think we need an option to R CMD check rather than a new field in the
>>>     >>> DESCRIPTION.  Currently a package could be mentioned for any of these
>>>     >>> reasons:
>>>     >>> 
>>>     >>> 1.  To make functions, examples or vignettes work
>>>     >>> 2.  To allow optional functionality in functions, examples or vignettes.
>>>     >>> 3.  Because it contains complementary functions.
>>>     >>> 
>>>     >>> I don't think we really need to worry about 3:  it should be contained
>>>     >>> in 1 or 2, if reasonably complete examples are given.
>>>     >>> 
>>>     >>> Case 1 is handled by Depends.
>>>     >> 
>>>     >> I think there is an important distinction between a dependency needed
>>>     >> for the package to function and a dependency needed to demonstrate
>>>     >> said functionality via an example or vignette.  The former is what
>>>     >> Depends is about, the latter is something else (Suggests).
>>>
>>>     FrL> Sorry to join in late, I am at the Compstat conference and have limited
>>>     FrL> email access. What Seth describes in the above paragraph is exactly what I
>>>     FrL> had in mind when splitting the single Depends field we had into Depends
>>>     FrL> and Suggests: Depends are a necessity to run the package, Suggests is nice
>>>     FrL> to have but not necessary. If you know how to use a package you may the
>>>     FrL> decide not to install a package that is only suggested, but
>>>
>>>     FrL> * may not be interested to execute the examples,
>>>     FrL> * know that you never need the extra functionality
>>>     FrL> * ...
>>>
>>>     FrL> so it should not be auto-installed unless you ask for
>>>     FrL> it (the default could also be the other way round, the
>>>     FrL> point is that it should be possible to have package foo
>>>     FrL> but not the packages it only suggests). On CRAN we
>>>     FrL> check with all suggestions to test all bits and pieces,
>>>     FrL> having an option in R CMD check to test only with
>>>     FrL> suggests may be nice, if there is use for it.
>>>
>>> Yes.
>>> However, I see two (related) problems with the current 'Suggests'
>>> and that's why I opened this thread proposing to have a 
>>> (what I now would want to simply call)  'canUse' :
>>>
>>> 1) For 'R CMD check' (and hence CRAN checking),
>>>    Packages in 'Suggests' must be require()able, and
>>>    hence all testing only happens *with* the suggested packages
>>>    being there, and not without.
>>>
>>> 2) "Suggests"  suggests to the human reader of DESCRIPTION that
>>>    the package authors suggest to also install the packages listed
>>>    there.
>>>    Now there are cases, I (as package author) want to show some
>>>    stuff, or even provide compatibility functionality for some
>>>    packages that are related to mine, but which I really do not ``suggest''
>>>    to also be installed, e.g., because the other packages do
>>>    similar stuff as mine, but I believe my package to be
>>>    superior.  In such a case, I may, e.g., want to provide 
>>>    functions for porting the other package classes to my package's.
>>>
>>> Duncan Murdoch has proposed to take care of "1)" by
>>> still only use 'Suggests' but adding another option to 'R CMD
>>> check', let's say   --no-suggests  which would run all the
>>> checks without having the suggested packages available  
>>> --- something not quite easy to implement, BTW:
>>> Imagine the typical windows users who (AFAICS) always only use
>>> one library into which they install all packages.
>>> How do you want the 
>>>     if( require(<my_suggested_package>) ) {
>>>        ...
>>>     }
>>> clause *not* to be triggered in such a case ?
>> 
>> I would expect require to return FALSE.  This could be done by check 
>> installing a new version of require() (as it installs new T and F), or 
>> by the standard require() being modified to check a stop list before 
>> acting (I'd prefer this, because it would make it easier for developers 
>> to experiment with functions in different environments), or by playing 
>> around with the names of things in the library (probably not workable on 
>> Windows), etc.
>> 
>> I think the default check behaviour on CRAN should be my middle case: 
>> test based on what is currently installed, don't require packages listed 
>> in Suggests to be installed.  I'm not sure if that should be the default 
>> behaviour for R CMD check at the command line:  as Kurt said, usually a 
>> developer wants to check all of the code.
>> 
>>> I do agree quite a bit that such a '--no-suggests' option would
>>> be very useful for 'R CMD check' -- in addition to my proposal.
>> 
>> I think the other extreme (which I think is there now as 
>> _R_CHECK_FORCE_SUGGESTS_) is also important.
>> 
>>> Further, I think "2)" above is not taken care of anyway.
>>> After all the interesting statements and alternative proposals,
>>> I'm still proposing to introduce a  'canUse'  field for DESCRIPTION
>>> which
>>>   a) has a "human-readable intent" of being weaker than 'Suggests'
>>>   b) will not require its packages to be available for R CMD check
>>>   c) conveys extra information about the package's context, to humans, and
>>>   d) will potentially be used in automated or semi-manual 
>>>      ``R package database management''
>> 
>> I think d) is important, but I think there are too many variations on a) 
>> and c) to hope that this would be used consistently.  As Fritz said, the 
>> thing he can remember (and what I would remember) is whether a package 
>> is mandatory or optional.  Fine variations within "optional" are just 
>> too hard to define clearly in a two-level classification.
>> 
>> On the other hand, they are relatively easy to convey in clearly written 
>> documentation.  So I'd still recommend that we stay with just Depends 
>> and Suggests, but encourage authors to document what they mean by 
>> "Suggests".
> 
> The problem I see here is that this is a change from the status quo, 
> which is likely to make a real mess for some time.  

I'm not sure what your "this" refers to.  Was it my suggestion or 
Martin's?  Must be his, I never make a real mess :-)

Duncan Murdoch

 > The status quo is
> that packages in Depends and Suggests are needed to check examples and 
> vignettes. I would not change this without a very good reason.  It would 
> be best to put other suggestions of extensions, that some users may want 
> to use, somewhere else.  The current situation is that these suggestions 
> are sprinkled in Rd files, vignettes, web pages, etc. This situation is 
> not too bad, but it might be nice to have some place users would expect 
> to find this information.  However, changing the meaning of Suggests to 
> be developer defined does not strike me as an improvement.
> 
> Paul Gilbert
>> 
>> Duncan Murdoch
>> 
>>> Martin
>>>
>>>     FrL> Ad the wording in the manual: obviously that is not
>>>     FrL> optimal (otherwise no need for parts of this email
>>>     FrL> thread), perhaps somebody else than the original author
>>>     FrL> (=me) could try to improve it for 2.4 after this
>>>     FrL> clarifications?  Otherwise I will give it a shot next
>>>     FrL> week after I return from Rome.
>>>
>>> ______________________________________________
>>> R-devel at r-project.org mailing list
>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>> 
>> ______________________________________________
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel
> ====================================================================================
> 
> La version fran?aise suit le texte anglais.
> 
> ------------------------------------------------------------------------------------
> 
> This email may contain privileged and/or confidential info...{{dropped}}



From hb at stat.berkeley.edu  Wed Aug 30 18:57:31 2006
From: hb at stat.berkeley.edu (Henrik Bengtsson)
Date: Wed, 30 Aug 2006 09:57:31 -0700
Subject: [Rd] S4 Methods dispatch
In-Reply-To: <44F591C7.7070900@r-project.org>
References: <44F591C7.7070900@r-project.org>
Message-ID: <59d7961d0608300957s109b2533t7949c3a83928149d@mail.gmail.com>

[Cross-posting to BioC-devel to]

Thank you for this.

> The changes are internal but extensive.  All packages that use S4
> methods and classes need to be reinstalled from source to use the new
> version.

Is there an easy way to detect if a package is using S4 or not?  If
so, I could scan my already installed libraries and call
install.packages() on its S4 subset of packages.  The alternative is
to do install.packages() an all libraries (sic!).  Bioconductor: maybe
biocLite() could have such an update mechanism built in internally?

If I miss to reinstall one S4 package, what should I expect?  I assume
there will be an error, but I just want to confirm that there is no
risk of getting weird "results" but still a running program?

Reinstallation is also required for all package that comes as Windows
binaries, correct?

Best

Henrik

On 8/30/06, John Chambers <jmc at r-project.org> wrote:
> A revision of r-devel 2.4.0 is being committed today with changes to
> method and class management.
>
> The changes are internal but extensive.  All packages that use S4
> methods and classes need to be reinstalled from source to use the new
> version.
>
> The main effects are to speed up method caching and dispatch, and to fix
> some problems with selecting inherited methods.  The new design is also
> cleaner, so we can experiment more easily in the future with changes for
> efficiency or semantics.
>
> The change will mostly be noticeable in attaching packages with many
> methods.  The CPU time for attaching package Matrix, for example, goes
> down by about a factor of 7 compared to R 2.3.1, timed on a Mac G5.
>
> The other major change is that now _all_ inherited methods are examined
> and one of the closest matches is chosen.  The old selection took the
> first candidate found, so the current version is better defined, and
> will also let us experiment with various tuning & strategies.
>
> There is a draft paper describing method selection at
>   http://developer.r-project.org/howMethodsWork.pdf
> (It's a document in progress, so go back in a few days for a revised
> version.)
>
> If a package uses inheritance for method selection with multiple
> arguments, there may well be changes in behavior.  We found examples in
> both methods itself and in Matrix that needed attention.
>
> John
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>
>



From jmc at r-project.org  Wed Aug 30 19:01:22 2006
From: jmc at r-project.org (John Chambers)
Date: Wed, 30 Aug 2006 13:01:22 -0400
Subject: [Rd] S4 Methods dispatch
In-Reply-To: <44F591C7.7070900@r-project.org>
References: <44F591C7.7070900@r-project.org>
Message-ID: <44F5C462.20004@r-project.org>

John Chambers wrote:
> A revision of r-devel 2.4.0 is being committed today with changes to 
> method and class management.
>
> The changes are internal but extensive.  All packages that use S4 
> methods and classes need to be reinstalled from source to use the new 
> version.
>   
A footnote on this. ALL packages need to be reinstalled--including 
stats4 in the R source.  Otherwise that package will fail when used in 
the tests.   I was bitten by this myself today.

Advice from members of r-core more expert in the innards, suggests that 
the best thing to do is
  make clean
in the directory where you are building R, if you have previously built 
R there, before making the new version of R.
> The main effects are to speed up method caching and dispatch, and to fix 
> some problems with selecting inherited methods.  The new design is also 
> cleaner, so we can experiment more easily in the future with changes for 
> efficiency or semantics.
>
> The change will mostly be noticeable in attaching packages with many 
> methods.  The CPU time for attaching package Matrix, for example, goes 
> down by about a factor of 7 compared to R 2.3.1, timed on a Mac G5.
>
> The other major change is that now _all_ inherited methods are examined 
> and one of the closest matches is chosen.  The old selection took the 
> first candidate found, so the current version is better defined, and 
> will also let us experiment with various tuning & strategies.
>
> There is a draft paper describing method selection at
>   http://developer.r-project.org/howMethodsWork.pdf
> (It's a document in progress, so go back in a few days for a revised 
> version.)
>
> If a package uses inheritance for method selection with multiple 
> arguments, there may well be changes in behavior.  We found examples in 
> both methods itself and in Matrix that needed attention.
>
> John
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>
>



From ripley at stats.ox.ac.uk  Wed Aug 30 19:17:08 2006
From: ripley at stats.ox.ac.uk (Prof Brian Ripley)
Date: Wed, 30 Aug 2006 18:17:08 +0100 (BST)
Subject: [Rd] S4 Methods dispatch
In-Reply-To: <59d7961d0608300957s109b2533t7949c3a83928149d@mail.gmail.com>
References: <44F591C7.7070900@r-project.org>
	<59d7961d0608300957s109b2533t7949c3a83928149d@mail.gmail.com>
Message-ID: <Pine.LNX.4.64.0608301801350.3574@gannet.stats.ox.ac.uk>

On Wed, 30 Aug 2006, Henrik Bengtsson wrote:

> [Cross-posting to BioC-devel to]
> 
> Thank you for this.
> 
> > The changes are internal but extensive.  All packages that use S4
> > methods and classes need to be reinstalled from source to use the new
> > version.
> 
> Is there an easy way to detect if a package is using S4 or not?  If

Yes, look at the Depends field of the DESCRIPTION

a <- installed.packages()
aa <- as.vector(a[grep("methods", a[, "Depends"]), 1])
install.packages(aa)

If you want to install them in the same place as before, do this for each 
library in turn.

I'd hold off for a few days if you can: some packages will not yet 
reinstall.

> so, I could scan my already installed libraries and call
> install.packages() on its S4 subset of packages.  The alternative is
> to do install.packages() an all libraries (sic!).  Bioconductor: maybe
> biocLite() could have such an update mechanism built in internally?
> 
> If I miss to reinstall one S4 package, what should I expect?  I assume
> there will be an error, but I just want to confirm that there is no
> risk of getting weird "results" but still a running program?
> 
> Reinstallation is also required for all package that comes as Windows
> binaries, correct?

Correct, and from source at that since Uwe is not yet building packages 
under R-devel (and his '2.4' is really 2.3, as I understand it).

-- 
Brian D. Ripley,                  ripley at stats.ox.ac.uk
Professor of Applied Statistics,  http://www.stats.ox.ac.uk/~ripley/
University of Oxford,             Tel:  +44 1865 272861 (self)
1 South Parks Road,                     +44 1865 272866 (PA)
Oxford OX1 3TG, UK                Fax:  +44 1865 272595



From sfalcon at fhcrc.org  Wed Aug 30 19:22:38 2006
From: sfalcon at fhcrc.org (Seth Falcon)
Date: Wed, 30 Aug 2006 10:22:38 -0700
Subject: [Rd] S4 Methods dispatch
In-Reply-To: <59d7961d0608300957s109b2533t7949c3a83928149d@mail.gmail.com>
	(Henrik Bengtsson's message of "Wed, 30 Aug 2006 09:57:31 -0700")
References: <44F591C7.7070900@r-project.org>
	<59d7961d0608300957s109b2533t7949c3a83928149d@mail.gmail.com>
Message-ID: <m24pvu2l5t.fsf@ziti.fhcrc.org>

"Henrik Bengtsson" <hb at stat.berkeley.edu> writes:

> [Cross-posting to BioC-devel to]

I'll answer here for now.

> Is there an easy way to detect if a package is using S4 or not?  If
> so, I could scan my already installed libraries and call
> install.packages() on its S4 subset of packages.  The alternative is
> to do install.packages() an all libraries (sic!).  Bioconductor: maybe
> biocLite() could have such an update mechanism built in internally?

This really is only an issue for developers and those living on the
bleeding edge.  That is, when upgrading R, one generally reinstalls
all packages anyhow (at least that is what I do).

> If I miss to reinstall one S4 package, what should I expect?  I assume
> there will be an error, but I just want to confirm that there is no
> risk of getting weird "results" but still a running program?

Not sure, but in some testing I know that in at least _some_ cases,
one does get an error message.

> Reinstallation is also required for all package that comes as Windows
> binaries, correct?

But one has to reinstall binaries when upgrading R anyway.  Unless I'm
missing something, I would say this is a case where developers and
those on the bleeding edge just have to bite the bullet and
reinstall.  

As for identifying S4 using packages, I think it is the case that such
packages will have one or more of the following:

1. methods package in Depends
2. methods package in Imports
3. import or importFrom methods in NAMESPACE
4. a call to setClass, setMethod, or setGeneric in R sources (harder
   to identify)

Items 1 and 2 above would be easy to pull out of the return value of
installed.packages().

Best,

+ seth



From jmc at r-project.org  Wed Aug 30 19:35:59 2006
From: jmc at r-project.org (John Chambers)
Date: Wed, 30 Aug 2006 13:35:59 -0400
Subject: [Rd] S4 Methods dispatch
In-Reply-To: <59d7961d0608300957s109b2533t7949c3a83928149d@mail.gmail.com>
References: <44F591C7.7070900@r-project.org>
	<59d7961d0608300957s109b2533t7949c3a83928149d@mail.gmail.com>
Message-ID: <44F5CC7F.9060303@r-project.org>

Henrik Bengtsson wrote:
> [Cross-posting to BioC-devel to]
>
> Thank you for this.
>
>> The changes are internal but extensive.  All packages that use S4
>> methods and classes need to be reinstalled from source to use the new
>> version.
>
> Is there an easy way to detect if a package is using S4 or not?

If you have your package source in various directories under a single 
directory (which is how I usually work), then, from the directory above 
the package directories, the comand:
     grep "Depends:.*methods" */DESCRIPTION
will pick up the packages that declare a dependency on methods.  There 
may be cleaner techniques.
> If
> so, I could scan my already installed libraries and call
> install.packages() on its S4 subset of packages.  The alternative is
> to do install.packages() an all libraries (sic!).  Bioconductor: maybe
> biocLite() could have such an update mechanism built in internally?
>
> If I miss to reinstall one S4 package, what should I expect?

The typical symptom is a clutch of warning messages when you attach the 
package.  The warnings try to mention that the package may need 
reinstallling, though sometimes the package name is misleading.

> I assume
> there will be an error, but I just want to confirm that there is no
> risk of getting weird "results" but still a running program?
>
> Reinstallation is also required for all package that comes as Windows
> binaries, correct?
Anything that uses S4 methods will have out-of-date objects for class 
and method definitions.

John
>
> Best
>
> Henrik
>
> On 8/30/06, John Chambers <jmc at r-project.org> wrote:
>> A revision of r-devel 2.4.0 is being committed today with changes to
>> method and class management.
>>
>> The changes are internal but extensive.  All packages that use S4
>> methods and classes need to be reinstalled from source to use the new
>> version.
>>
>> The main effects are to speed up method caching and dispatch, and to fix
>> some problems with selecting inherited methods.  The new design is also
>> cleaner, so we can experiment more easily in the future with changes for
>> efficiency or semantics.
>>
>> The change will mostly be noticeable in attaching packages with many
>> methods.  The CPU time for attaching package Matrix, for example, goes
>> down by about a factor of 7 compared to R 2.3.1, timed on a Mac G5.
>>
>> The other major change is that now _all_ inherited methods are examined
>> and one of the closest matches is chosen.  The old selection took the
>> first candidate found, so the current version is better defined, and
>> will also let us experiment with various tuning & strategies.
>>
>> There is a draft paper describing method selection at
>>   http://developer.r-project.org/howMethodsWork.pdf
>> (It's a document in progress, so go back in a few days for a revised
>> version.)
>>
>> If a package uses inheritance for method selection with multiple
>> arguments, there may well be changes in behavior.  We found examples in
>> both methods itself and in Matrix that needed attention.
>>
>> John
>>
>> ______________________________________________
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>
>>
>



From hb at stat.berkeley.edu  Wed Aug 30 19:42:49 2006
From: hb at stat.berkeley.edu (Henrik Bengtsson)
Date: Wed, 30 Aug 2006 10:42:49 -0700
Subject: [Rd] S4 Methods dispatch
In-Reply-To: <Pine.LNX.4.64.0608301801350.3574@gannet.stats.ox.ac.uk>
References: <44F591C7.7070900@r-project.org>
	<59d7961d0608300957s109b2533t7949c3a83928149d@mail.gmail.com>
	<Pine.LNX.4.64.0608301801350.3574@gannet.stats.ox.ac.uk>
Message-ID: <59d7961d0608301042u6762eb3ckc5aad1a2e51f0a1b@mail.gmail.com>

On 8/30/06, Prof Brian Ripley <ripley at stats.ox.ac.uk> wrote:
> On Wed, 30 Aug 2006, Henrik Bengtsson wrote:
>
> > [Cross-posting to BioC-devel to]
> >
> > Thank you for this.
> >
> > > The changes are internal but extensive.  All packages that use S4
> > > methods and classes need to be reinstalled from source to use the new
> > > version.
> >
> > Is there an easy way to detect if a package is using S4 or not?  If
>
> Yes, look at the Depends field of the DESCRIPTION
>
> a <- installed.packages()
> aa <- as.vector(a[grep("methods", a[, "Depends"]), 1])
> install.packages(aa)

I think it's more complicated than this.  First of all, is it
mandatory for a package to be explicit about 'methods'?  Second, there
are many packages that imports 'methods' implicitly via dependency of
other S4 packages, .e.g see many Bioconductor packages.  Thus, for
this to work we have to build the dependency graph, and it have to
work across repositories.

One way would be to load packages (that are explicit about 'methods')
and do some investigation on them.

>From John Chambers updated post on this thread, it look like we should
reinstall all package to be on the safe side.

>
> If you want to install them in the same place as before, do this for each
> library in turn.
>
> I'd hold off for a few days if you can: some packages will not yet
> reinstall.
>
> > so, I could scan my already installed libraries and call
> > install.packages() on its S4 subset of packages.  The alternative is
> > to do install.packages() an all libraries (sic!).  Bioconductor: maybe
> > biocLite() could have such an update mechanism built in internally?
> >
> > If I miss to reinstall one S4 package, what should I expect?  I assume
> > there will be an error, but I just want to confirm that there is no
> > risk of getting weird "results" but still a running program?
> >
> > Reinstallation is also required for all package that comes as Windows
> > binaries, correct?
>
> Correct, and from source at that since Uwe is not yet building packages
> under R-devel (and his '2.4' is really 2.3, as I understand it).

Ah, that last part is an EXTREMELY IMPORTANT PIECE OF INFORMATION,
related to this S4 update.

I predict that there will unfortunately be a few postings of people
being bitten by this.  I can see how you run install/update.packages()
on a Windows machine and things stops working.  Then there is no
repository to fall back to, and if you do not have the machinery for
installing from source on Windows it's going to be a mess.

It sound like that creating a copy of the (binary) package reprocitory
as is today would be the first precocious step to take.  If problems
occur until Uwe gets his "2.4" up and running, at least this can be
used as a backup for people being bitten by the above.

I'm on Windows too, and at least I will make a local copy of what I've
got today and I will avoid doing install/update.packages() on
CRAN/Bioconductor until I know things are working.  I will also keep
my current R-devel installation around, because that should work with
Uwe's current "2.3" rep, (I believe?).

/H

>
> --
> Brian D. Ripley,                  ripley at stats.ox.ac.uk
> Professor of Applied Statistics,  http://www.stats.ox.ac.uk/~ripley/
> University of Oxford,             Tel:  +44 1865 272861 (self)
> 1 South Parks Road,                     +44 1865 272866 (PA)
> Oxford OX1 3TG, UK                Fax:  +44 1865 272595
>



From murdoch at stats.uwo.ca  Wed Aug 30 19:48:33 2006
From: murdoch at stats.uwo.ca (Duncan Murdoch)
Date: Wed, 30 Aug 2006 13:48:33 -0400
Subject: [Rd] S4 Methods dispatch
In-Reply-To: <44F5CC7F.9060303@r-project.org>
References: <44F591C7.7070900@r-project.org>	<59d7961d0608300957s109b2533t7949c3a83928149d@mail.gmail.com>
	<44F5CC7F.9060303@r-project.org>
Message-ID: <44F5CF71.8090202@stats.uwo.ca>

On 8/30/2006 1:35 PM, John Chambers wrote:
> Henrik Bengtsson wrote:
>> [Cross-posting to BioC-devel to]
>>
>> Thank you for this.
>>
>>> The changes are internal but extensive.  All packages that use S4
>>> methods and classes need to be reinstalled from source to use the new
>>> version.
>>
>> Is there an easy way to detect if a package is using S4 or not?
> 
> If you have your package source in various directories under a single 
> directory (which is how I usually work), then, from the directory above 
> the package directories, the comand:
>      grep "Depends:.*methods" */DESCRIPTION
> will pick up the packages that declare a dependency on methods.  There 
> may be cleaner techniques.

This does the same within R:

 > pkgs <- installed.packages()
 > pkgs[grep("methods", pkgs[,"Depends"]),]

Duncan Murdoch

>> If
>> so, I could scan my already installed libraries and call
>> install.packages() on its S4 subset of packages.  The alternative is
>> to do install.packages() an all libraries (sic!).  Bioconductor: maybe
>> biocLite() could have such an update mechanism built in internally?
>>
>> If I miss to reinstall one S4 package, what should I expect?
> 
> The typical symptom is a clutch of warning messages when you attach the 
> package.  The warnings try to mention that the package may need 
> reinstallling, though sometimes the package name is misleading.
> 
>> I assume
>> there will be an error, but I just want to confirm that there is no
>> risk of getting weird "results" but still a running program?
>>
>> Reinstallation is also required for all package that comes as Windows
>> binaries, correct?
> Anything that uses S4 methods will have out-of-date objects for class 
> and method definitions.
> 
> John
>>
>> Best
>>
>> Henrik
>>
>> On 8/30/06, John Chambers <jmc at r-project.org> wrote:
>>> A revision of r-devel 2.4.0 is being committed today with changes to
>>> method and class management.
>>>
>>> The changes are internal but extensive.  All packages that use S4
>>> methods and classes need to be reinstalled from source to use the new
>>> version.
>>>
>>> The main effects are to speed up method caching and dispatch, and to fix
>>> some problems with selecting inherited methods.  The new design is also
>>> cleaner, so we can experiment more easily in the future with changes for
>>> efficiency or semantics.
>>>
>>> The change will mostly be noticeable in attaching packages with many
>>> methods.  The CPU time for attaching package Matrix, for example, goes
>>> down by about a factor of 7 compared to R 2.3.1, timed on a Mac G5.
>>>
>>> The other major change is that now _all_ inherited methods are examined
>>> and one of the closest matches is chosen.  The old selection took the
>>> first candidate found, so the current version is better defined, and
>>> will also let us experiment with various tuning & strategies.
>>>
>>> There is a draft paper describing method selection at
>>>   http://developer.r-project.org/howMethodsWork.pdf
>>> (It's a document in progress, so go back in a few days for a revised
>>> version.)
>>>
>>> If a package uses inheritance for method selection with multiple
>>> arguments, there may well be changes in behavior.  We found examples in
>>> both methods itself and in Matrix that needed attention.
>>>
>>> John
>>>
>>> ______________________________________________
>>> R-devel at r-project.org mailing list
>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>>
>>>
>>
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel



From pgilbert at bank-banque-canada.ca  Wed Aug 30 20:13:55 2006
From: pgilbert at bank-banque-canada.ca (Paul Gilbert)
Date: Wed, 30 Aug 2006 14:13:55 -0400
Subject: [Rd] 'CanMakeUseOf' field
In-Reply-To: <44F5BFD0.3040502@stats.uwo.ca>
References: <m2wt8sgyo0.fsf@ziti.fhcrc.org>	<17651.65163.240840.365787@stat.math.ethz.ch>	<44F4473D.9030203@bank-banque-canada.ca>	<17652.19292.998960.686119@stat.math.ethz.ch>	<44F46112.7060809@stats.uwo.ca>	<m2d5ajedon.fsf@ziti.fhcrc.org>	<63945.151.100.49.234.1156923253.squirrel@webmail.lrz-muenchen.de>	<17653.20470.199569.870638@stat.math.ethz.ch>	<44F5A0E9.1010309@stats.uwo.ca>
	<44F5BCB9.7030702@bank-banque-canada.ca>
	<44F5BFD0.3040502@stats.uwo.ca>
Message-ID: <44F5D563.6090601@bank-banque-canada.ca>



Duncan Murdoch wrote:
> On 8/30/2006 12:28 PM, Paul Gilbert wrote:
>> Duncan Murdoch wrote:
>>> On 8/30/2006 4:44 AM, Martin Maechler wrote:
>>>>>>>>> "FrL" == friedrich leisch <friedrich.leisch at stat.uni-muenchen.de>
>>>>>>>>>     on Wed, 30 Aug 2006 09:34:13 +0200 (MEST) writes:
>>>>     >> Duncan Murdoch <murdoch at stats.uwo.ca> writes:
>>>>     >>> I think we need an option to R CMD check rather than a new 
>>>> field in the
>>>>     >>> DESCRIPTION.  Currently a package could be mentioned for any 
>>>> of these
>>>>     >>> reasons:
>>>>     >>>     >>> 1.  To make functions, examples or vignettes work
>>>>     >>> 2.  To allow optional functionality in functions, examples 
>>>> or vignettes.
>>>>     >>> 3.  Because it contains complementary functions.
>>>>     >>>     >>> I don't think we really need to worry about 3:  it 
>>>> should be contained
>>>>     >>> in 1 or 2, if reasonably complete examples are given.
>>>>     >>>     >>> Case 1 is handled by Depends.
>>>>     >>     >> I think there is an important distinction between a 
>>>> dependency needed
>>>>     >> for the package to function and a dependency needed to 
>>>> demonstrate
>>>>     >> said functionality via an example or vignette.  The former is 
>>>> what
>>>>     >> Depends is about, the latter is something else (Suggests).
>>>>
>>>>     FrL> Sorry to join in late, I am at the Compstat conference and 
>>>> have limited
>>>>     FrL> email access. What Seth describes in the above paragraph is 
>>>> exactly what I
>>>>     FrL> had in mind when splitting the single Depends field we had 
>>>> into Depends
>>>>     FrL> and Suggests: Depends are a necessity to run the package, 
>>>> Suggests is nice
>>>>     FrL> to have but not necessary. If you know how to use a package 
>>>> you may the
>>>>     FrL> decide not to install a package that is only suggested, but
>>>>
>>>>     FrL> * may not be interested to execute the examples,
>>>>     FrL> * know that you never need the extra functionality
>>>>     FrL> * ...
>>>>
>>>>     FrL> so it should not be auto-installed unless you ask for
>>>>     FrL> it (the default could also be the other way round, the
>>>>     FrL> point is that it should be possible to have package foo
>>>>     FrL> but not the packages it only suggests). On CRAN we
>>>>     FrL> check with all suggestions to test all bits and pieces,
>>>>     FrL> having an option in R CMD check to test only with
>>>>     FrL> suggests may be nice, if there is use for it.
>>>>
>>>> Yes.
>>>> However, I see two (related) problems with the current 'Suggests'
>>>> and that's why I opened this thread proposing to have a (what I now 
>>>> would want to simply call)  'canUse' :
>>>>
>>>> 1) For 'R CMD check' (and hence CRAN checking),
>>>>    Packages in 'Suggests' must be require()able, and
>>>>    hence all testing only happens *with* the suggested packages
>>>>    being there, and not without.
>>>>
>>>> 2) "Suggests"  suggests to the human reader of DESCRIPTION that
>>>>    the package authors suggest to also install the packages listed
>>>>    there.
>>>>    Now there are cases, I (as package author) want to show some
>>>>    stuff, or even provide compatibility functionality for some
>>>>    packages that are related to mine, but which I really do not 
>>>> ``suggest''
>>>>    to also be installed, e.g., because the other packages do
>>>>    similar stuff as mine, but I believe my package to be
>>>>    superior.  In such a case, I may, e.g., want to provide    
>>>> functions for porting the other package classes to my package's.
>>>>
>>>> Duncan Murdoch has proposed to take care of "1)" by
>>>> still only use 'Suggests' but adding another option to 'R CMD
>>>> check', let's say   --no-suggests  which would run all the
>>>> checks without having the suggested packages available  --- 
>>>> something not quite easy to implement, BTW:
>>>> Imagine the typical windows users who (AFAICS) always only use
>>>> one library into which they install all packages.
>>>> How do you want the     if( require(<my_suggested_package>) ) {
>>>>        ...
>>>>     }
>>>> clause *not* to be triggered in such a case ?
>>>
>>> I would expect require to return FALSE.  This could be done by check 
>>> installing a new version of require() (as it installs new T and F), 
>>> or by the standard require() being modified to check a stop list 
>>> before acting (I'd prefer this, because it would make it easier for 
>>> developers to experiment with functions in different environments), 
>>> or by playing around with the names of things in the library 
>>> (probably not workable on Windows), etc.
>>>
>>> I think the default check behaviour on CRAN should be my middle case: 
>>> test based on what is currently installed, don't require packages 
>>> listed in Suggests to be installed.  I'm not sure if that should be 
>>> the default behaviour for R CMD check at the command line:  as Kurt 
>>> said, usually a developer wants to check all of the code.
>>>
>>>> I do agree quite a bit that such a '--no-suggests' option would
>>>> be very useful for 'R CMD check' -- in addition to my proposal.
>>>
>>> I think the other extreme (which I think is there now as 
>>> _R_CHECK_FORCE_SUGGESTS_) is also important.
>>>
>>>> Further, I think "2)" above is not taken care of anyway.
>>>> After all the interesting statements and alternative proposals,
>>>> I'm still proposing to introduce a  'canUse'  field for DESCRIPTION
>>>> which
>>>>   a) has a "human-readable intent" of being weaker than 'Suggests'
>>>>   b) will not require its packages to be available for R CMD check
>>>>   c) conveys extra information about the package's context, to 
>>>> humans, and
>>>>   d) will potentially be used in automated or semi-manual      ``R 
>>>> package database management''
>>>
>>> I think d) is important, but I think there are too many variations on 
>>> a) and c) to hope that this would be used consistently.  As Fritz 
>>> said, the thing he can remember (and what I would remember) is 
>>> whether a package is mandatory or optional.  Fine variations within 
>>> "optional" are just too hard to define clearly in a two-level 
>>> classification.
>>>
>>> On the other hand, they are relatively easy to convey in clearly 
>>> written documentation.  So I'd still recommend that we stay with just 
>>> Depends and Suggests, but encourage authors to document what they 
>>> mean by "Suggests".
>>
>> The problem I see here is that this is a change from the status quo, 
>> which is likely to make a real mess for some time.  
> 
> I'm not sure what your "this" refers to.  Was it my suggestion or 
> Martin's?  Must be his, I never make a real mess :-)

I was referring to 'but encourage authors to document what they mean by 
"Suggests"', which to me implies that every developer gets to define 
what Suggests means to them.  Thus, I would get to make a real mess, 
which I usually manage to do even without it being a legitimate option.:-)

> 
> Duncan Murdoch
> 
>  > The status quo is
>> that packages in Depends and Suggests are needed to check examples and 
>> vignettes. I would not change this without a very good reason.  It 
>> would be best to put other suggestions of extensions, that some users 
>> may want to use, somewhere else.  The current situation is that these 
>> suggestions are sprinkled in Rd files, vignettes, web pages, etc. This 
>> situation is not too bad, but it might be nice to have some place 
>> users would expect to find this information.  However, changing the 
>> meaning of Suggests to be developer defined does not strike me as an 
>> improvement.
>>
>> Paul Gilbert
>>>
>>> Duncan Murdoch
>>>
>>>> Martin
>>>>
>>>>     FrL> Ad the wording in the manual: obviously that is not
>>>>     FrL> optimal (otherwise no need for parts of this email
>>>>     FrL> thread), perhaps somebody else than the original author
>>>>     FrL> (=me) could try to improve it for 2.4 after this
>>>>     FrL> clarifications?  Otherwise I will give it a shot next
>>>>     FrL> week after I return from Rome.
>>>>
>>>> ______________________________________________
>>>> R-devel at r-project.org mailing list
>>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>>
>>> ______________________________________________
>>> R-devel at r-project.org mailing list
>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>> ==================================================================================== 
>>
>>
>> La version fran?aise suit le texte anglais.
>>
>> ------------------------------------------------------------------------------------ 
>>
>>
>> This email may contain privileged and/or confidential information, and 
>> the Bank of
>> Canada does not waive any related rights. Any distribution, use, or 
>> copying of this
>> email or the information it contains by other than the intended 
>> recipient is
>> unauthorized. If you received this email in error please delete it 
>> immediately from
>> your system and notify the sender promptly by email that you have done 
>> so.
>> ------------------------------------------------------------------------------------ 
>>
>>
>> Le pr?sent courriel peut contenir de l'information privil?gi?e ou 
>> confidentielle.
>> La Banque du Canada ne renonce pas aux droits qui s'y rapportent. 
>> Toute diffusion,
>> utilisation ou copie de ce courriel ou des renseignements qu'il 
>> contient par une
>> personne autre que le ou les destinataires d?sign?s est interdite. Si 
>> vous recevez
>> ce courriel par erreur, veuillez le supprimer imm?diatement et envoyer 
>> sans d?lai ?
>> l'exp?diteur un message ?lectronique pour l'aviser que vous avez 
>> ?limin? de votre
>> ordinateur toute copie du courriel re?u.
====================================================================================

La version fran?aise suit le texte anglais.

------------------------------------------------------------------------------------

This email may contain privileged and/or confidential inform...{{dropped}}



From sfalcon at fhcrc.org  Wed Aug 30 20:25:03 2006
From: sfalcon at fhcrc.org (Seth Falcon)
Date: Wed, 30 Aug 2006 11:25:03 -0700
Subject: [Rd] S4 Methods dispatch
In-Reply-To: <59d7961d0608301042u6762eb3ckc5aad1a2e51f0a1b@mail.gmail.com>
	(Henrik Bengtsson's message of "Wed, 30 Aug 2006 10:42:49 -0700")
References: <44F591C7.7070900@r-project.org>
	<59d7961d0608300957s109b2533t7949c3a83928149d@mail.gmail.com>
	<Pine.LNX.4.64.0608301801350.3574@gannet.stats.ox.ac.uk>
	<59d7961d0608301042u6762eb3ckc5aad1a2e51f0a1b@mail.gmail.com>
Message-ID: <m23bbe3wu8.fsf@ziti.fhcrc.org>

"Henrik Bengtsson" <hb at stat.berkeley.edu> writes:
> I think it's more complicated than this.  First of all, is it
> mandatory for a package to be explicit about 'methods'?  Second, there
> are many packages that imports 'methods' implicitly via dependency of
> other S4 packages, .e.g see many Bioconductor packages.  Thus, for
> this to work we have to build the dependency graph, and it have to
> work across repositories.

[As I already posted, I don't think this is worth the effort, better
to just reinstall.]

But this coincides with work I've been doing on tools for package
dependency graphs.  If you're curious, read on...


allDeps <- makeDepGraph(biocReposList(), type="source", 
                        keep.builtin=TRUE, dosize=FALSE)

allDepsOnMe <- reverseEdgeDirections(allDeps)

needsMethods <- dijkstra.sp(allDepsOnMe, start="methods")

needsMethods <- needsMethods$distance[is.finite(needsMethods$distance)]

length(needsMethods)
[1] 514

table(needsMethods)
needsMethods
  0   1   2   3 
  1 130 118 265 

I won't spam the mailing list with the package names, but am happy to
make them available if anyone would really find it useful.

Bw,

+ seth



From gilescrane at verizon.net  Wed Aug 30 22:02:45 2006
From: gilescrane at verizon.net (gilescrane at verizon.net)
Date: Wed, 30 Aug 2006 15:02:45 -0500 (CDT)
Subject: [Rd] Suggestion for read.table()
Message-ID: <6769639.199881156968166072.JavaMail.root@vms070.mailsrvcs.net>

First, I compliment you all
for such a useful project as R.

Suggestion:  If read.table() could
take input from a character string,
then one could write

raw=
"  x   y  z
   1   2  3
   4   5  6
"
df = read.table(raw,head=TRUE)

Of course, one can
cat() to write raw into a 
temporary file,
and read.table() from that file.
However, direct reading 
might be a good option?

Hope this is useful.
Cordially
Giles Crane
gilescrane at verizon.net



From murdoch at stats.uwo.ca  Wed Aug 30 22:12:27 2006
From: murdoch at stats.uwo.ca (Duncan Murdoch)
Date: Wed, 30 Aug 2006 16:12:27 -0400
Subject: [Rd] 'CanMakeUseOf' field
In-Reply-To: <44F5D563.6090601@bank-banque-canada.ca>
References: <m2wt8sgyo0.fsf@ziti.fhcrc.org>	<17651.65163.240840.365787@stat.math.ethz.ch>	<44F4473D.9030203@bank-banque-canada.ca>	<17652.19292.998960.686119@stat.math.ethz.ch>	<44F46112.7060809@stats.uwo.ca>	<m2d5ajedon.fsf@ziti.fhcrc.org>	<63945.151.100.49.234.1156923253.squirrel@webmail.lrz-muenchen.de>	<17653.20470.199569.870638@stat.math.ethz.ch>	<44F5A0E9.1010309@stats.uwo.ca>	<44F5BCB9.7030702@bank-banque-canada.ca>	<44F5BFD0.3040502@stats.uwo.ca>
	<44F5D563.6090601@bank-banque-canada.ca>
Message-ID: <44F5F12B.7050808@stats.uwo.ca>

On 8/30/2006 2:13 PM, Paul Gilbert wrote:
> 
> Duncan Murdoch wrote:
>> On 8/30/2006 12:28 PM, Paul Gilbert wrote:
>>> Duncan Murdoch wrote:
>>>> On 8/30/2006 4:44 AM, Martin Maechler wrote:
>>>>>>>>>> "FrL" == friedrich leisch <friedrich.leisch at stat.uni-muenchen.de>
>>>>>>>>>>     on Wed, 30 Aug 2006 09:34:13 +0200 (MEST) writes:
>>>>>     >> Duncan Murdoch <murdoch at stats.uwo.ca> writes:
>>>>>     >>> I think we need an option to R CMD check rather than a new 
>>>>> field in the
>>>>>     >>> DESCRIPTION.  Currently a package could be mentioned for any 
>>>>> of these
>>>>>     >>> reasons:
>>>>>     >>>     >>> 1.  To make functions, examples or vignettes work
>>>>>     >>> 2.  To allow optional functionality in functions, examples 
>>>>> or vignettes.
>>>>>     >>> 3.  Because it contains complementary functions.
>>>>>     >>>     >>> I don't think we really need to worry about 3:  it 
>>>>> should be contained
>>>>>     >>> in 1 or 2, if reasonably complete examples are given.
>>>>>     >>>     >>> Case 1 is handled by Depends.
>>>>>     >>     >> I think there is an important distinction between a 
>>>>> dependency needed
>>>>>     >> for the package to function and a dependency needed to 
>>>>> demonstrate
>>>>>     >> said functionality via an example or vignette.  The former is 
>>>>> what
>>>>>     >> Depends is about, the latter is something else (Suggests).
>>>>>
>>>>>     FrL> Sorry to join in late, I am at the Compstat conference and 
>>>>> have limited
>>>>>     FrL> email access. What Seth describes in the above paragraph is 
>>>>> exactly what I
>>>>>     FrL> had in mind when splitting the single Depends field we had 
>>>>> into Depends
>>>>>     FrL> and Suggests: Depends are a necessity to run the package, 
>>>>> Suggests is nice
>>>>>     FrL> to have but not necessary. If you know how to use a package 
>>>>> you may the
>>>>>     FrL> decide not to install a package that is only suggested, but
>>>>>
>>>>>     FrL> * may not be interested to execute the examples,
>>>>>     FrL> * know that you never need the extra functionality
>>>>>     FrL> * ...
>>>>>
>>>>>     FrL> so it should not be auto-installed unless you ask for
>>>>>     FrL> it (the default could also be the other way round, the
>>>>>     FrL> point is that it should be possible to have package foo
>>>>>     FrL> but not the packages it only suggests). On CRAN we
>>>>>     FrL> check with all suggestions to test all bits and pieces,
>>>>>     FrL> having an option in R CMD check to test only with
>>>>>     FrL> suggests may be nice, if there is use for it.
>>>>>
>>>>> Yes.
>>>>> However, I see two (related) problems with the current 'Suggests'
>>>>> and that's why I opened this thread proposing to have a (what I now 
>>>>> would want to simply call)  'canUse' :
>>>>>
>>>>> 1) For 'R CMD check' (and hence CRAN checking),
>>>>>    Packages in 'Suggests' must be require()able, and
>>>>>    hence all testing only happens *with* the suggested packages
>>>>>    being there, and not without.
>>>>>
>>>>> 2) "Suggests"  suggests to the human reader of DESCRIPTION that
>>>>>    the package authors suggest to also install the packages listed
>>>>>    there.
>>>>>    Now there are cases, I (as package author) want to show some
>>>>>    stuff, or even provide compatibility functionality for some
>>>>>    packages that are related to mine, but which I really do not 
>>>>> ``suggest''
>>>>>    to also be installed, e.g., because the other packages do
>>>>>    similar stuff as mine, but I believe my package to be
>>>>>    superior.  In such a case, I may, e.g., want to provide    
>>>>> functions for porting the other package classes to my package's.
>>>>>
>>>>> Duncan Murdoch has proposed to take care of "1)" by
>>>>> still only use 'Suggests' but adding another option to 'R CMD
>>>>> check', let's say   --no-suggests  which would run all the
>>>>> checks without having the suggested packages available  --- 
>>>>> something not quite easy to implement, BTW:
>>>>> Imagine the typical windows users who (AFAICS) always only use
>>>>> one library into which they install all packages.
>>>>> How do you want the     if( require(<my_suggested_package>) ) {
>>>>>        ...
>>>>>     }
>>>>> clause *not* to be triggered in such a case ?
>>>>
>>>> I would expect require to return FALSE.  This could be done by check 
>>>> installing a new version of require() (as it installs new T and F), 
>>>> or by the standard require() being modified to check a stop list 
>>>> before acting (I'd prefer this, because it would make it easier for 
>>>> developers to experiment with functions in different environments), 
>>>> or by playing around with the names of things in the library 
>>>> (probably not workable on Windows), etc.
>>>>
>>>> I think the default check behaviour on CRAN should be my middle case: 
>>>> test based on what is currently installed, don't require packages 
>>>> listed in Suggests to be installed.  I'm not sure if that should be 
>>>> the default behaviour for R CMD check at the command line:  as Kurt 
>>>> said, usually a developer wants to check all of the code.
>>>>
>>>>> I do agree quite a bit that such a '--no-suggests' option would
>>>>> be very useful for 'R CMD check' -- in addition to my proposal.
>>>>
>>>> I think the other extreme (which I think is there now as 
>>>> _R_CHECK_FORCE_SUGGESTS_) is also important.
>>>>
>>>>> Further, I think "2)" above is not taken care of anyway.
>>>>> After all the interesting statements and alternative proposals,
>>>>> I'm still proposing to introduce a  'canUse'  field for DESCRIPTION
>>>>> which
>>>>>   a) has a "human-readable intent" of being weaker than 'Suggests'
>>>>>   b) will not require its packages to be available for R CMD check
>>>>>   c) conveys extra information about the package's context, to 
>>>>> humans, and
>>>>>   d) will potentially be used in automated or semi-manual      ``R 
>>>>> package database management''
>>>>
>>>> I think d) is important, but I think there are too many variations on 
>>>> a) and c) to hope that this would be used consistently.  As Fritz 
>>>> said, the thing he can remember (and what I would remember) is 
>>>> whether a package is mandatory or optional.  Fine variations within 
>>>> "optional" are just too hard to define clearly in a two-level 
>>>> classification.
>>>>
>>>> On the other hand, they are relatively easy to convey in clearly 
>>>> written documentation.  So I'd still recommend that we stay with just 
>>>> Depends and Suggests, but encourage authors to document what they 
>>>> mean by "Suggests".
>>>
>>> The problem I see here is that this is a change from the status quo, 
>>> which is likely to make a real mess for some time.  
>> 
>> I'm not sure what your "this" refers to.  Was it my suggestion or 
>> Martin's?  Must be his, I never make a real mess :-)
> 
> I was referring to 'but encourage authors to document what they mean by 
> "Suggests"', which to me implies that every developer gets to define 
> what Suggests means to them.  Thus, I would get to make a real mess, 
> which I usually manage to do even without it being a legitimate option.:-)

Suggests has some meaning to R, basically corresponding to "is optional 
but possibly useful".  Developers should explain why they chose to label 
a package that way within R.  I don't see how they could mess this up.

Duncan Murdoch

> 
>> 
>> Duncan Murdoch
>> 
>>  > The status quo is
>>> that packages in Depends and Suggests are needed to check examples and 
>>> vignettes. I would not change this without a very good reason.  It 
>>> would be best to put other suggestions of extensions, that some users 
>>> may want to use, somewhere else.  The current situation is that these 
>>> suggestions are sprinkled in Rd files, vignettes, web pages, etc. This 
>>> situation is not too bad, but it might be nice to have some place 
>>> users would expect to find this information.  However, changing the 
>>> meaning of Suggests to be developer defined does not strike me as an 
>>> improvement.
>>>
>>> Paul Gilbert
>>>>
>>>> Duncan Murdoch
>>>>
>>>>> Martin
>>>>>
>>>>>     FrL> Ad the wording in the manual: obviously that is not
>>>>>     FrL> optimal (otherwise no need for parts of this email
>>>>>     FrL> thread), perhaps somebody else than the original author
>>>>>     FrL> (=me) could try to improve it for 2.4 after this
>>>>>     FrL> clarifications?  Otherwise I will give it a shot next
>>>>>     FrL> week after I return from Rome.
>>>>>
>>>>> ______________________________________________
>>>>> R-devel at r-project.org mailing list
>>>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>>>
>>>> ______________________________________________
>>>> R-devel at r-project.org mailing list
>>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>> ==================================================================================== 
>>>
>>>
>>> La version fran?aise suit le texte anglais.
>>>
>>> ------------------------------------------------------------------------------------ 
>>>
>>>
>>> This email may contain privileged and/or confidential information, and 
>>> the Bank of
>>> Canada does not waive any related rights. Any distribution, use, or 
>>> copying of this
>>> email or the information it contains by other than the intended 
>>> recipient is
>>> unauthorized. If you received this email in error please delete it 
>>> immediately from
>>> your system and notify the sender promptly by email that you have done 
>>> so.
>>> ------------------------------------------------------------------------------------ 
>>>
>>>
>>> Le pr?sent courriel peut contenir de l'information privil?gi?e ou 
>>> confidentielle.
>>> La Banque du Canada ne renonce pas aux droits qui s'y rapportent. 
>>> Toute diffusion,
>>> utilisation ou copie de ce courriel ou des renseignements qu'il 
>>> contient par une
>>> personne autre que le ou les destinataires d?sign?s est interdite. Si 
>>> vous recevez
>>> ce courriel par erreur, veuillez le supprimer imm?diatement et envoyer 
>>> sans d?lai ?
>>> l'exp?diteur un message ?lectronique pour l'aviser que vous avez 
>>> ?limin? de votre
>>> ordinateur toute copie du courriel re?u.
> ====================================================================================
> 
> La version fran?aise suit le texte anglais.
> 
> ------------------------------------------------------------------------------------
> 
> This email may contain privileged and/or confidential inform...{{dropped}}
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel



From ggrothendieck at gmail.com  Wed Aug 30 22:12:42 2006
From: ggrothendieck at gmail.com (Gabor Grothendieck)
Date: Wed, 30 Aug 2006 16:12:42 -0400
Subject: [Rd] Suggestion for read.table()
In-Reply-To: <6769639.199881156968166072.JavaMail.root@vms070.mailsrvcs.net>
References: <6769639.199881156968166072.JavaMail.root@vms070.mailsrvcs.net>
Message-ID: <971536df0608301312u24038aa9g93b5f8a658aac13a@mail.gmail.com>

Try this:

> raw=
+ "  x   y  z
+   1   2  3
+   4   5  6
+ "
> read.table(textConnection(raw), header = TRUE)
  x y z
1 1 2 3
2 4 5 6



On 8/30/06, gilescrane at verizon.net <gilescrane at verizon.net> wrote:
> First, I compliment you all
> for such a useful project as R.
>
> Suggestion:  If read.table() could
> take input from a character string,
> then one could write
>
> raw=
> "  x   y  z
>   1   2  3
>   4   5  6
> "
> df = read.table(raw,head=TRUE)
>
> Of course, one can
> cat() to write raw into a
> temporary file,
> and read.table() from that file.
> However, direct reading
> might be a good option?
>
> Hope this is useful.
> Cordially
> Giles Crane
> gilescrane at verizon.net
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>



From ripley at stats.ox.ac.uk  Wed Aug 30 22:15:45 2006
From: ripley at stats.ox.ac.uk (Prof Brian Ripley)
Date: Wed, 30 Aug 2006 21:15:45 +0100 (BST)
Subject: [Rd] Suggestion for read.table()
In-Reply-To: <6769639.199881156968166072.JavaMail.root@vms070.mailsrvcs.net>
References: <6769639.199881156968166072.JavaMail.root@vms070.mailsrvcs.net>
Message-ID: <Pine.LNX.4.64.0608302110340.19806@gannet.stats.ox.ac.uk>

On Wed, 30 Aug 2006, gilescrane at verizon.net wrote:

> First, I compliment you all
> for such a useful project as R.
> 
> Suggestion:  If read.table() could
> take input from a character string,
> then one could write
> 
> raw=
> "  x   y  z
>    1   2  3
>    4   5  6
> "
> df = read.table(raw,head=TRUE)

'raw' is the name of a function in R, so not a good choice.

> Of course, one can
> cat() to write raw into a 
> temporary file,
> and read.table() from that file.

Yes, we have anonymous file connections for that.

> However, direct reading might be a good option?

See ?textConnection for how to do this.

inp <- "  x   y  z
    1   2  3
    4   5  6
"
read.table(textConnection(inp), header=TRUE)

The most common case is wanting to paste in, and we have "clipboard" for 
that (at least on Windows on X11: it would be a nice addition on Aqua).

-- 
Brian D. Ripley,                  ripley at stats.ox.ac.uk
Professor of Applied Statistics,  http://www.stats.ox.ac.uk/~ripley/
University of Oxford,             Tel:  +44 1865 272861 (self)
1 South Parks Road,                     +44 1865 272866 (PA)
Oxford OX1 3TG, UK                Fax:  +44 1865 272595



From huber at ebi.ac.uk  Wed Aug 30 22:15:44 2006
From: huber at ebi.ac.uk (Wolfgang Huber)
Date: Wed, 30 Aug 2006 13:15:44 -0700
Subject: [Rd] Suggestion for read.table()
In-Reply-To: <6769639.199881156968166072.JavaMail.root@vms070.mailsrvcs.net>
References: <6769639.199881156968166072.JavaMail.root@vms070.mailsrvcs.net>
Message-ID: <44F5F1F0.3000008@ebi.ac.uk>

Hi Giles,

x = "x y z\n1 2 3\n4 5 6"
res = read.table(textConnection(x), header=TRUE)

will do. See also http://cran.r-project.org/doc/manuals/R-data.html

  Best wishes
   Wolfgang Huber
   EMBL-EBI, Cambridge UK

gilescrane at verizon.net wrote:
> First, I compliment you all
> for such a useful project as R.
> 
> Suggestion:  If read.table() could
> take input from a character string,
> then one could write
> 
> raw=
> "  x   y  z
>    1   2  3
>    4   5  6
> "
> df = read.table(raw,head=TRUE)
> 
> Of course, one can
> cat() to write raw into a 
> temporary file,
> and read.table() from that file.
> However, direct reading 
> might be a good option?
> 
> Hope this is useful.
> Cordially
> Giles Crane
> gilescrane at verizon.net



From gregor.gorjanc at bfro.uni-lj.si  Thu Aug 31 01:32:41 2006
From: gregor.gorjanc at bfro.uni-lj.si (Gregor Gorjanc)
Date: Thu, 31 Aug 2006 01:32:41 +0200
Subject: [Rd] make test-Specific?
Message-ID: <44F62019.7030907@bfro.uni-lj.si>

Hello!

In Writing R Extensions manual, section "Testing R code"[1] says:
"be careful to check if make test-Specific or particularly, cd tests;
make no-segfault.Rout"

Actually, make test-Specific also needs "cd tests;" in front.

[1]http://cran.r-project.org/doc/manuals/R-exts.html#Testing-R-code

-- 
Lep pozdrav / With regards,
    Gregor Gorjanc

----------------------------------------------------------------------
University of Ljubljana     PhD student
Biotechnical Faculty
Zootechnical Department     URI: http://www.bfro.uni-lj.si/MR/ggorjan
Groblje 3                   mail: gregor.gorjanc <at> bfro.uni-lj.si

SI-1230 Domzale             tel: +386 (0)1 72 17 861
Slovenia, Europe            fax: +386 (0)1 72 17 888

----------------------------------------------------------------------
"One must learn by doing the thing; for though you think you know it,
 you have no certainty until you try." Sophocles ~ 450 B.C.



From gregor.gorjanc at bfro.uni-lj.si  Thu Aug 31 01:41:19 2006
From: gregor.gorjanc at bfro.uni-lj.si (gregor.gorjanc at bfro.uni-lj.si)
Date: Thu, 31 Aug 2006 01:41:19 +0200 (CEST)
Subject: [Rd] Summary() fails after use of na.action="na.exclude" in lm()
	(PR#9191)
Message-ID: <20060830234119.8F1D24C9CF@slim.kubism.ku.dk>

Hello!

I have already reported on this behaviour at [1] and now I have checked
the same example on r-devel and the problem is still there. Thomas
Lumley inidicated problem [2]. Example:

n <- 50
x <- runif(n=n)
y1 <- 2 * x + rnorm(n=n)
y2 <- 5 * x + rnorm(n=n)
y2[sample(1:n, size=5)] <- NA

y <- cbind(y1, y2)

## Goes ok here
fit <- lm(y1 ~ 1, na.action="na.exclude")
summary(fit)

## And here
fit <- lm(y2 ~ 1, na.action="na.exclude")
summary(fit)

## But fails if we use matrix of response variables
fit <- lm(y ~ 1, na.action="na.exclude")
summary(fit)

Response y1 :

Call:
lm(formula = y1 ~ 1, na.action = "na.exclude")

Residuals:
Error in quantile.default(resid) : missing values and NaN's not allowed
if 'na.rm' is FALSE

[1]http://tolstoy.newcastle.edu.au/R/devel/06/07/6187.html
[2]http://tolstoy.newcastle.edu.au/R/devel/06/07/6203.html

--please do not edit the information below--

Version:
 platform = i686-pc-linux-gnu
 arch = i686
 os = linux-gnu
 system = i686, linux-gnu
 status = Under development (unstable)
 major = 2
 minor = 4.0
 year = 2006
 month = 08
 day = 30
 svn rev = 39022
 language = R
 version.string = R version 2.4.0 Under development (unstable)
(2006-08-30 r39022)

Locale:
LC_CTYPE=en_GB.UTF-8;LC_NUMERIC=C;LC_TIME=en_GB.UTF-8;LC_COLLATE=en_GB.UTF-8;LC_MONETARY=en_GB.UTF-8;LC_MESSAGES=en_GB.UTF-8;LC_PAPER=en_GB.UTF-8;LC_NAME=C;LC_ADDRESS=C;LC_TELEPHONE=C;LC_MEASUREMENT=en_GB.UTF-8;LC_IDENTIFICATION=C

Search Path:
 .GlobalEnv, package:methods, package:stats, package:graphics,
package:grDevices, package:utils, package:datasets, Autoloads, package:base

-- 
Lep pozdrav / With regards,
    Gregor Gorjanc

----------------------------------------------------------------------
University of Ljubljana     PhD student
Biotechnical Faculty
Zootechnical Department     URI: http://www.bfro.uni-lj.si/MR/ggorjan
Groblje 3                   mail: gregor.gorjanc <at> bfro.uni-lj.si

SI-1230 Domzale             tel: +386 (0)1 72 17 861
Slovenia, Europe            fax: +386 (0)1 72 17 888

----------------------------------------------------------------------
"One must learn by doing the thing; for though you think you know it,
 you have no certainty until you try." Sophocles ~ 450 B.C.



From gregor.gorjanc at bfro.uni-lj.si  Thu Aug 31 02:16:25 2006
From: gregor.gorjanc at bfro.uni-lj.si (Gregor Gorjanc)
Date: Thu, 31 Aug 2006 02:16:25 +0200
Subject: [Rd] Wish: keep names in mapply() result
Message-ID: <44F62A59.8040301@bfro.uni-lj.si>

Hello!

I have noticed that mapply() drops names in R 2.3.1 as well as in
r-devel. Here is a simple example:

l <- list(a=1, b=2)
k <- list(1)
mapply(FUN="+", l, k)
[1] 2 3
mapply(FUN="+", l, k, SIMPLIFY=FALSE)
[[1]]
[1] 2

[[2]]
[1] 3

Help page does not indicate that this should happen. Argument USE.NAMES
does not have any effect here as it used only in a bit special
situation: "If the first ... argument is character and the result does
not already have names, use it as the names." But result is always
without names as shown above. Did I miss any peculiarities?

This is not consistent with lapply, which keeps names i.e.

lapply(l, "+", 1)
$a
[1] 2

$b
[1] 3

I have attached and copied (at the end) patch proposal against SVN that
adds names back to the result if x had it (only R as my C is ...). This
way it would also be consistent with lapply. make check-all seems to be
happy with changes. Now we get:

mapply(FUN="+", l, k)
a b
2 3

mapply(FUN="+", l, k, SIMPLIFY=FALSE)
$a
[1] 2

$b
[1] 3

And if we had "character" (with some variations) for first ... then:

l <- list(a="1", b="2")
mapply(FUN="paste", l, k)
    a     b
"1 1" "2 1"

l <- list("1", "2")
mapply(FUN="paste", l, k)
[1] "1 1" "2 1"

l <- c("1", "2")
mapply(FUN="paste", l, k)
    1     2
"1 1" "2 1"

Index: src/library/base/R/mapply.R
===================================================================
--- src/library/base/R/mapply.R (revision 39024)
+++ src/library/base/R/mapply.R (working copy)
@@ -3,8 +3,16 @@
     FUN <- match.fun(FUN)
     dots <- list(...)

+    if(!is.null(names(dots[[1]]))) {
+        isNamed <- TRUE
+        namesX <- names(dots[[1]])
+    } else {
+        isNamed <- FALSE
+    }
+
     answer<-.Call("do_mapply", FUN, dots, MoreArgs, environment(),
                   PACKAGE="base")
+    if(isNamed) names(answer) <- namesX

     if (USE.NAMES && length(dots) && is.character(dots[[1]]) &&
         is.null(names(answer))) names(answer) <- dots[[1]]
@@ -47,4 +55,4 @@
     }
     formals(FUNV) <- formals(FUN)
     FUNV
-}
\ No newline at end of file
+}

-- 
Lep pozdrav / With regards,
    Gregor Gorjanc

----------------------------------------------------------------------
University of Ljubljana     PhD student
Biotechnical Faculty
Zootechnical Department     URI: http://www.bfro.uni-lj.si/MR/ggorjan
Groblje 3                   mail: gregor.gorjanc <at> bfro.uni-lj.si

SI-1230 Domzale             tel: +386 (0)1 72 17 861
Slovenia, Europe            fax: +386 (0)1 72 17 888

----------------------------------------------------------------------
"One must learn by doing the thing; for though you think you know it,
 you have no certainty until you try." Sophocles ~ 450 B.C.
----------------------------------------------------------------------
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: mapply.R.namesPatch
Url: https://stat.ethz.ch/pipermail/r-devel/attachments/20060831/0a234e2c/attachment-0003.ksh 

From cberry at tajo.ucsd.edu  Thu Aug 31 05:20:40 2006
From: cberry at tajo.ucsd.edu (Charles C. Berry)
Date: Wed, 30 Aug 2006 20:20:40 -0700
Subject: [Rd] Wish: keep names in mapply() result
In-Reply-To: <44F62A59.8040301@bfro.uni-lj.si>
References: <44F62A59.8040301@bfro.uni-lj.si>
Message-ID: <Pine.LNX.4.64.0608302010200.28278@tajo.ucsd.edu>


Gregor:

Works for me on 2.3.0:

> mapply(function(x,y,z) paste(y,z), letters,as.list(LETTERS),as.list(1:26))[ 1:5 ]
     a     b     c     d     e 
"A 1" "B 2" "C 3" "D 4" "E 5" 
> mapply(function(x,y,z) paste(x,y,z), letters,as.list(LETTERS),as.list(1:26))[ 1:5 ]
       a       b       c       d       e 
"a A 1" "b B 2" "c C 3" "d D 4" "e E 5" 
>

but  this does not yield names:

> mapply(function(x,y,z) paste(x,y,z), as.list(letters),as.list(LETTERS),as.list(1:26))[ 1:5 ]
[1] "a A 1" "b B 2" "c C 3" "d D 4" "e E 5"


Perhaps the help page would be clearer if it said:

USE.NAMES: If the first ... argument is a character ***vector*** and the result
           doesn't already have names, use it as the names


Chuck


On Thu, 31 Aug 2006, Gregor Gorjanc wrote:

> Hello!
>
> I have noticed that mapply() drops names in R 2.3.1 as well as in
> r-devel. Here is a simple example:
>
> l <- list(a=1, b=2)
> k <- list(1)
> mapply(FUN="+", l, k)
> [1] 2 3
> mapply(FUN="+", l, k, SIMPLIFY=FALSE)
> [[1]]
> [1] 2
>
> [[2]]
> [1] 3
>
> Help page does not indicate that this should happen. Argument USE.NAMES
> does not have any effect here as it used only in a bit special
> situation: "If the first ... argument is character and the result does
> not already have names, use it as the names." But result is always
> without names as shown above. Did I miss any peculiarities?
>
> This is not consistent with lapply, which keeps names i.e.
>
> lapply(l, "+", 1)
> $a
> [1] 2
>
> $b
> [1] 3
>
> I have attached and copied (at the end) patch proposal against SVN that
> adds names back to the result if x had it (only R as my C is ...). This
> way it would also be consistent with lapply. make check-all seems to be
> happy with changes. Now we get:
>
> mapply(FUN="+", l, k)
> a b
> 2 3
>
> mapply(FUN="+", l, k, SIMPLIFY=FALSE)
> $a
> [1] 2
>
> $b
> [1] 3
>
> And if we had "character" (with some variations) for first ... then:
>
> l <- list(a="1", b="2")
> mapply(FUN="paste", l, k)
>    a     b
> "1 1" "2 1"
>
> l <- list("1", "2")
> mapply(FUN="paste", l, k)
> [1] "1 1" "2 1"
>
> l <- c("1", "2")
> mapply(FUN="paste", l, k)
>    1     2
> "1 1" "2 1"
>
> Index: src/library/base/R/mapply.R
> ===================================================================
> --- src/library/base/R/mapply.R (revision 39024)
> +++ src/library/base/R/mapply.R (working copy)
> @@ -3,8 +3,16 @@
>     FUN <- match.fun(FUN)
>     dots <- list(...)
>
> +    if(!is.null(names(dots[[1]]))) {
> +        isNamed <- TRUE
> +        namesX <- names(dots[[1]])
> +    } else {
> +        isNamed <- FALSE
> +    }
> +
>     answer<-.Call("do_mapply", FUN, dots, MoreArgs, environment(),
>                   PACKAGE="base")
> +    if(isNamed) names(answer) <- namesX
>
>     if (USE.NAMES && length(dots) && is.character(dots[[1]]) &&
>         is.null(names(answer))) names(answer) <- dots[[1]]
> @@ -47,4 +55,4 @@
>     }
>     formals(FUNV) <- formals(FUN)
>     FUNV
> -}
> \ No newline at end of file
> +}
>
> -- 
> Lep pozdrav / With regards,
>    Gregor Gorjanc
>
> ----------------------------------------------------------------------
> University of Ljubljana     PhD student
> Biotechnical Faculty
> Zootechnical Department     URI: http://www.bfro.uni-lj.si/MR/ggorjan
> Groblje 3                   mail: gregor.gorjanc <at> bfro.uni-lj.si
>
> SI-1230 Domzale             tel: +386 (0)1 72 17 861
> Slovenia, Europe            fax: +386 (0)1 72 17 888
>
> ----------------------------------------------------------------------
> "One must learn by doing the thing; for though you think you know it,
> you have no certainty until you try." Sophocles ~ 450 B.C.
> ----------------------------------------------------------------------
>

Charles C. Berry                        (858) 534-2098
                                          Dept of Family/Preventive Medicine
E mailto:cberry at tajo.ucsd.edu	         UC San Diego
http://biostat.ucsd.edu/~cberry/         La Jolla, San Diego 92093-0717



From maechler at stat.math.ethz.ch  Thu Aug 31 09:40:56 2006
From: maechler at stat.math.ethz.ch (Martin Maechler)
Date: Thu, 31 Aug 2006 09:40:56 +0200
Subject: [Rd] 'CanMakeUseOf' field
In-Reply-To: <m2fyfe5ndr.fsf@ziti.fhcrc.org>
References: <m2wt8sgyo0.fsf@ziti.fhcrc.org>
	<17651.65163.240840.365787@stat.math.ethz.ch>
	<44F4473D.9030203@bank-banque-canada.ca>
	<17652.19292.998960.686119@stat.math.ethz.ch>
	<44F46112.7060809@stats.uwo.ca>
	<17653.20352.330891.556094@mithrandir.hornik.net>
	<m2fyfe5ndr.fsf@ziti.fhcrc.org>
Message-ID: <17654.37512.452743.135183@stat.math.ethz.ch>

>>>>> "Seth" == Seth Falcon <sfalcon at fhcrc.org>
>>>>>     on Wed, 30 Aug 2006 07:06:24 -0700 writes:

    Seth> Kurt Hornik <Kurt.Hornik at wu-wien.ac.at> writes:
    >> An internal environment variable called
    >> 
    >> _R_CHECK_FORCE_SUGGESTS_
    >> 
    >> which controls this has been in place for quite some time now.  One can
    >> trivially add a Perl R CMD check configure variable for it.  I am a bit
    >> hesitant to add a --force-suggests cola to R CMD check, as this
    >> hardwires a legacy dependency model which may not be up to future needs.
    >> 
    >> As an aside, I have never understood whe developers have need for such
    >> an option (as I would have assumed that they'd typically try to check
    >> all of their code).

    Seth> This is not an aside, but the heart of the issue IMHO :-)

    Seth> One case in which checking Suggests does not make sense is when a
    Seth> package provides optional functionality that is platform specific.  A
    Seth> given Suggests entry may only be available on platform A, but it still
    Seth> is desirable to check the package on platform B.  Similar issues can
    Seth> arise during development when a given Suggests entry stops working
    Seth> with R-devel.

    Seth> Further, if an item in Suggests means it is optional, then one
    Seth> _should_ test that by testing the package without the optional packge
    Seth> being available.  There are a few ways for a true dependency to sneak
    Seth> into the code.  So I agree that typically developers want to test all
    Seth> of their code, but that implies being able to check a package without
    Seth> its Suggests being available (I realize this may be hard to implement,
    Seth> but easily having R CMD check ignore Suggests is a good start).

    Seth> And lastly, Suggests is currently used to list packages used for
    Seth> extended examples in package vignettes and being able to easily
    Seth> perform all other checks makes sense to me.

Very good points, thanks.
I think it's clear that some R developers see a clear need for
this and their (our) output would be enhanced by such a very
small addition --- it would probably only be a small addition
addition to the "Writing R Extension" manual for the moment.

I don't understand why some developers have such a resistance
to allow one other such keyword.
Dirk mentioned 'Enhances'  --- something which I could also live
with instead of 'CanUse' -- I just to be generous
with myself (as package author) in my interpretation of
"enhancing" :-)

Those developers who cannot remember disambiguating more than
one field for 'optional' are well allowed to keep using just
one, i.e., 'Suggests'. 
But others who want to be more precise and or want to better expose
(via DESCRIPTION) what they do anyway
(via 'if(require(*)) { .. }') inside their code, examples, and
or vignettes would just converge on *how* the new field should
be baptized. 
Since 'R CMD check' is not affected, there's no other
consequence for any package writer.

Having a much more expressive scheme, namely also specifying where
and how the 'canUse' packages are made use of,
could be even more useful.
However, given the overall reactions and the average package
writer's inertia or even "I don't want to have to know this as
well, I just want my package out" mind set -- which can
perfectly make sense, BTW --
I think we should strive for Einstein's
"Make everything as simple as possible, but not simpler"
here.

I'd really like to conclude this thread or at least concentrate
on the "how" rather than the "do we need this at all?" part.

Martin



From murdoch at stats.uwo.ca  Thu Aug 31 12:41:33 2006
From: murdoch at stats.uwo.ca (Duncan Murdoch)
Date: Thu, 31 Aug 2006 06:41:33 -0400
Subject: [Rd] 'CanMakeUseOf' field
In-Reply-To: <17654.37512.452743.135183@stat.math.ethz.ch>
References: <m2wt8sgyo0.fsf@ziti.fhcrc.org>	<17651.65163.240840.365787@stat.math.ethz.ch>	<44F4473D.9030203@bank-banque-canada.ca>	<17652.19292.998960.686119@stat.math.ethz.ch>	<44F46112.7060809@stats.uwo.ca>	<17653.20352.330891.556094@mithrandir.hornik.net>	<m2fyfe5ndr.fsf@ziti.fhcrc.org>
	<17654.37512.452743.135183@stat.math.ethz.ch>
Message-ID: <44F6BCDD.60205@stats.uwo.ca>

On 8/31/2006 3:40 AM, Martin Maechler wrote:
>>>>>> "Seth" == Seth Falcon <sfalcon at fhcrc.org>
>>>>>>     on Wed, 30 Aug 2006 07:06:24 -0700 writes:
> 
>     Seth> Kurt Hornik <Kurt.Hornik at wu-wien.ac.at> writes:
>     >> An internal environment variable called
>     >> 
>     >> _R_CHECK_FORCE_SUGGESTS_
>     >> 
>     >> which controls this has been in place for quite some time now.  One can
>     >> trivially add a Perl R CMD check configure variable for it.  I am a bit
>     >> hesitant to add a --force-suggests cola to R CMD check, as this
>     >> hardwires a legacy dependency model which may not be up to future needs.
>     >> 
>     >> As an aside, I have never understood whe developers have need for such
>     >> an option (as I would have assumed that they'd typically try to check
>     >> all of their code).
> 
>     Seth> This is not an aside, but the heart of the issue IMHO :-)
> 
>     Seth> One case in which checking Suggests does not make sense is when a
>     Seth> package provides optional functionality that is platform specific.  A
>     Seth> given Suggests entry may only be available on platform A, but it still
>     Seth> is desirable to check the package on platform B.  Similar issues can
>     Seth> arise during development when a given Suggests entry stops working
>     Seth> with R-devel.
> 
>     Seth> Further, if an item in Suggests means it is optional, then one
>     Seth> _should_ test that by testing the package without the optional packge
>     Seth> being available.  There are a few ways for a true dependency to sneak
>     Seth> into the code.  So I agree that typically developers want to test all
>     Seth> of their code, but that implies being able to check a package without
>     Seth> its Suggests being available (I realize this may be hard to implement,
>     Seth> but easily having R CMD check ignore Suggests is a good start).
> 
>     Seth> And lastly, Suggests is currently used to list packages used for
>     Seth> extended examples in package vignettes and being able to easily
>     Seth> perform all other checks makes sense to me.
> 
> Very good points, thanks.
> I think it's clear that some R developers see a clear need for
> this and their (our) output would be enhanced by such a very
> small addition --- it would probably only be a small addition
> addition to the "Writing R Extension" manual for the moment.
> 
> I don't understand why some developers have such a resistance
> to allow one other such keyword.

My objection is that adding a keyword that people don't understand will 
lead to inconsistent use and confusion.  It will make "Writing R 
Extensions" harder to read, and packages harder to write.

I could be wrong that your proposal is one that won't be understood. 
Could you post a proposed revision to the docs that describes it?

Duncan Murdoch



> Dirk mentioned 'Enhances'  --- something which I could also live
> with instead of 'CanUse' -- I just to be generous
> with myself (as package author) in my interpretation of
> "enhancing" :-)
> 
> Those developers who cannot remember disambiguating more than
> one field for 'optional' are well allowed to keep using just
> one, i.e., 'Suggests'. 
> But others who want to be more precise and or want to better expose
> (via DESCRIPTION) what they do anyway
> (via 'if(require(*)) { .. }') inside their code, examples, and
> or vignettes would just converge on *how* the new field should
> be baptized. 
> Since 'R CMD check' is not affected, there's no other
> consequence for any package writer.
> 
> Having a much more expressive scheme, namely also specifying where
> and how the 'canUse' packages are made use of,
> could be even more useful.
> However, given the overall reactions and the average package
> writer's inertia or even "I don't want to have to know this as
> well, I just want my package out" mind set -- which can
> perfectly make sense, BTW --
> I think we should strive for Einstein's
> "Make everything as simple as possible, but not simpler"
> here.
> 
> I'd really like to conclude this thread or at least concentrate
> on the "how" rather than the "do we need this at all?" part.
> 
> Martin
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel



From ripley at stats.ox.ac.uk  Thu Aug 31 14:22:11 2006
From: ripley at stats.ox.ac.uk (Prof Brian Ripley)
Date: Thu, 31 Aug 2006 13:22:11 +0100 (BST)
Subject: [Rd] Suggestion for read.table()
In-Reply-To: <C07BB4B4-3440-43C1-BAD1-4F2433C17513@r-project.org>
References: <6769639.199881156968166072.JavaMail.root@vms070.mailsrvcs.net>
	<Pine.LNX.4.64.0608302110340.19806@gannet.stats.ox.ac.uk>
	<C07BB4B4-3440-43C1-BAD1-4F2433C17513@r-project.org>
Message-ID: <Pine.LNX.4.64.0608311319460.21681@gannet.stats.ox.ac.uk>

On Thu, 31 Aug 2006, Simon Urbanek wrote:

> 
> On Aug 30, 2006, at 10:15 PM, Prof Brian Ripley wrote:
> 
> >On Wed, 30 Aug 2006, gilescrane at verizon.net wrote:
> >
> > >However, direct reading might be a good option?
> >
> >See ?textConnection for how to do this.
> >
> >inp <- "  x   y  z
> >    1   2  3
> >    4   5  6
> >"
> >read.table(textConnection(inp), header=TRUE)
> >
> >The most common case is wanting to paste in, and we have "clipboard" for
> >that (at least on Windows on X11: it would be a nice addition on Aqua).
> >
> 
> On Mac OS X (Aqua or cmd line) you can use clipboard input like this:
> read.table(pipe("pbpaste"))
> It seems to be quite popular especially in conjunction with Excel...

Yes, I know (I even documented in ?connections).  What would be nice is if

read.table("clipboard")

worked as it does on the other platforms.

-- 
Brian D. Ripley,                  ripley at stats.ox.ac.uk
Professor of Applied Statistics,  http://www.stats.ox.ac.uk/~ripley/
University of Oxford,             Tel:  +44 1865 272861 (self)
1 South Parks Road,                     +44 1865 272866 (PA)
Oxford OX1 3TG, UK                Fax:  +44 1865 272595



From lars at umich.edu  Thu Aug 31 14:41:40 2006
From: lars at umich.edu (=?iso-8859-15?Q?Lars_D=2E_Nood=E9n?=)
Date: Thu, 31 Aug 2006 08:41:40 -0400 (EDT)
Subject: [Rd] R-Project logo in SVG format
Message-ID: <Pine.LNX.4.64.0608310839160.32642@goldenaxe.gpcc.itd.umich.edu>

Hi,

I'm looking for a version of the R-Project logo in SVG format.  I've found 
the bitmapped versions,
 	http://developer.r-project.org/Logo/

but would prefer a scalable version as it usually looks better when 
printed.

Where may I find one?
-Lars

Lars Nooden (lars at umich.edu)
 	On the Internet, nobody knows you're a dog ...
 	... until you start barking.



From thomaskelderml at gmail.com  Thu Aug 31 14:52:49 2006
From: thomaskelderml at gmail.com (Thomas Kelder)
Date: Thu, 31 Aug 2006 14:52:49 +0200
Subject: [Rd] stop R mainloop without calling exit(1)
Message-ID: <903fbcd30608310552w2f3d6350p72e7e52c0144cc4b@mail.gmail.com>

Hello,

I'm trying to make my Java application work with R, which involves
sending and retrieving data and to run R functions from within the
Java application. I also need to have "live interaction" with R, to
show the R console output (e.g. warnings and print) and to enable the
user to enter input when a function asks for it.

Therefore I created a simple R console in Java using JRI
(http://rosuda.org/JRI/), and it works ok. The only problem is that I
have to start the R main loop which doesn't return. The only way to
stop it is to give R the quit command ('q()'), but then 'exit(1)' is
called from the R code and the Java Virtual Machine (including my
application) also shuts down.

My quick solution to this problem was to modify the R source code so
that the main loop ends without the need to call exit. The 'do_quit'
method in main.c now returns NULL instead of calling exit(1) and
'Rf_ReplIteration' checks for a returned NULL after each eval() and
breaks the main loop by returning -1.

Here are the simple changes to the R source code ('+' are the lines I
added, '//' are the lines I removed):

src/main/main.c : Rf_ReplIteration(...):
------------------------------------------------------------------
value = eval(R_CurrentExpr, rho);
+if(value == NULL)
+return(-1);

src/main/main.c : do_quit():
-------------------------------------
//exit(0);
+return(NULL)

I also removed the call to exit in src/linux/sys-std.c:Rstd_CleanUp
and src/gnuwin32/system.c:R_CleanUp for linux and windows
respectively.

This is obviously a quick hack to make it work (but it works fine,
also the standalone R exits ok this way), but I can imagine more
people want to use the mainloop with the possibility to return from it
without making their application to exit too. I wonder if it's
possible to include this possibility in future versions of R. Or do I
see this wrong and are there other (easier) solutions to achieve what
I want? Thanks in advance for your comments/reactions.

Thomas



From ripley at stats.ox.ac.uk  Thu Aug 31 15:22:21 2006
From: ripley at stats.ox.ac.uk (Prof Brian Ripley)
Date: Thu, 31 Aug 2006 14:22:21 +0100 (BST)
Subject: [Rd] stop R mainloop without calling exit(1)
In-Reply-To: <903fbcd30608310552w2f3d6350p72e7e52c0144cc4b@mail.gmail.com>
References: <903fbcd30608310552w2f3d6350p72e7e52c0144cc4b@mail.gmail.com>
Message-ID: <Pine.LNX.4.64.0608311406130.22477@gannet.stats.ox.ac.uk>

This is already covered in the R-devel version of R: please consult
`Writing R Extensions' in that version.

On Thu, 31 Aug 2006, Thomas Kelder wrote:

> Hello,
> 
> I'm trying to make my Java application work with R, which involves
> sending and retrieving data and to run R functions from within the
> Java application. I also need to have "live interaction" with R, to
> show the R console output (e.g. warnings and print) and to enable the
> user to enter input when a function asks for it.
> 
> Therefore I created a simple R console in Java using JRI
> (http://rosuda.org/JRI/), and it works ok. The only problem is that I
> have to start the R main loop which doesn't return.

But that's not true.  The documented way is

setup_Rmainloop
run a loop (which can return)
end_Rmainloop

The problem was that the only documented way to shut R down cleanly was 
end_Rmainloop (which did call exit), whereas there now is Rf_endEmbeddedR.

> The only way to stop it is to give R the quit command ('q()'), but then 
> 'exit(1)' is called from the R code and the Java Virtual Machine 
> (including my application) also shuts down.

That's because you called end_Rmainloop, possibly by calling 
run_Rmainloop rather than taking control of the loop.

It seems that almost all users of embedded R did not call end_Rmainloop, 
and I met this when creating a common embedding interface for Unix and 
Windows versions of R: the Windows widgets (such as the graphics device) 
do need to be told to shut down.

[...]

-- 
Brian D. Ripley,                  ripley at stats.ox.ac.uk
Professor of Applied Statistics,  http://www.stats.ox.ac.uk/~ripley/
University of Oxford,             Tel:  +44 1865 272861 (self)
1 South Parks Road,                     +44 1865 272866 (PA)
Oxford OX1 3TG, UK                Fax:  +44 1865 272595



From friedrich.leisch at stat.uni-muenchen.de  Thu Aug 31 15:52:48 2006
From: friedrich.leisch at stat.uni-muenchen.de (friedrich.leisch at stat.uni-muenchen.de)
Date: Thu, 31 Aug 2006 15:52:48 +0200 (MEST)
Subject: [Rd] R-Project logo in SVG format
In-Reply-To: <Pine.LNX.4.64.0608310839160.32642@goldenaxe.gpcc.itd.umich.edu>
References: <Pine.LNX.4.64.0608310839160.32642@goldenaxe.gpcc.itd.umich.edu>
Message-ID: <61685.151.100.49.234.1157032368.squirrel@webmail.lrz-muenchen.de>

> Hi,
>
> I'm looking for a version of the R-Project logo in SVG format.  I've found
> the bitmapped versions,
>  	http://developer.r-project.org/Logo/
>
> but would prefer a scalable version as it usually looks better when
> printed.
>
> Where may I find one?

After you created one and submitted it to us probably at the same place as
the bitmaps. In the meantime it will have to suffice that you use all we
have, and that are the bitmaps (the logo was done by a volunteer who chose
to use a bitmapped graphics program). It is not like we keep the good
stuff back on purpose ...

Best,
Fritz



From leydold at statmath.wu-wien.ac.at  Thu Aug 31 15:57:39 2006
From: leydold at statmath.wu-wien.ac.at (Josef Leydold)
Date: Thu, 31 Aug 2006 15:57:39 +0200
Subject: [Rd] Interface for package supplied random number generator
Message-ID: <20060831135739.GA7336@essek.stat-math.wu-wien.ac.at>

Hi,

As you probably know, there is a problem with the interface for adding uniform
random number generators in R (see by article in R News 5/2, November 2005).
There exists a mechanism called "user-supplied" that allows users of R
to run their own generator in R. However, there is no such mechanism for
package writers. Those who want to add their own generators abuse 
RNGkind(kind="user-supplied") for their purpose.
The problem with this approach is that it relies on the unique existence of the
function "user_unif_rand". When two packages are loaded that use this interface,
then at least one package is broken. If the user herself loads a shared library
that contains such a function, some of the functionalities of all the 
corresponding packages are broken.

When writing my paper I found the following packages on CRAN that abuse this
interface (meanwhile there might be more packages):

randaes_0.1.tar.gz
rlecuyer_0.1.tar.gz
rsprng_0.3-1.tar.gz
rstream_1.1.tar.gz
SuppDists_1.0-13.tar.gz

what makes the situation even more complicated is the fact that some of these
packages are loaded automaticall by other packages.
For example, package 'rlecuyer' is loaded by

snow_0.2-1.tar.gz
snowFT_0.0-1.tar.gz
varSelRF_0.6-2.tar.gz

To solve this problem, Stefan Theussl and I have tried to extend the mechanism
for random number generators in the following way:

- we have added a new kind of generators: "package-supplied"

- this generator kind needs functions named 'package_unif_rand', 'package_unif_init',
  'package_unif_nseed', and 'package_unif_seedloc'
  (analogously to the functions for kind "user-supplied")

- RNGkind has an additional optional argument:
    RNGkind <- function(kind = NULL, normal.kind = NULL, PACKAGE = "")
  argument 'PACKAGE' is only used for the new generator kind "package-supplied"

- similarly the function set.seed needs the optinal argument 'PACKAGE'

Since I need such an extended interface (and I assume that other package
write do also) I ask whether this extension can be included into R.
We have implemented a first experimental version of this modified interface. 
A patch against the development snapshot R-devel_2006-08-30.tar.gz is available.
However, it is a little bit too long (239 lines) to be posted here.

Of course suggestions for an alternative approach are welcome.

Josef


-- 


-----------------------------------------------------------------------------
Josef Leydold   |  Vienna University of Economics and Business Administration
                |  Department of Statistics and Mathematics
-----------------------------------------------------------------------------
Augasse 2-6     |  Tel.   +43 1 31336 4695
A-1090 Vienna   |  FAX    +43 1 31336 774
European Union  |  email  Josef.Leydold at statistik.wu-wien.ac.at
-----------------------------------------------------------------------------
Alles Unglueck kam daher, dass die Denkenden nicht mehr handeln konnten,
und die Handelnden keine Zeit mehr fanden zu denken.       (Marlen Haushofer)



From msf17 at psu.edu  Thu Aug 31 16:42:27 2006
From: msf17 at psu.edu (msf17 at psu.edu)
Date: Thu, 31 Aug 2006 16:42:27 +0200 (CEST)
Subject: [Rd] R crashes in Mac OS 10.4 when Find is used (PR#9192)
Message-ID: <20060831144227.755F64C9A1@slim.kubism.ku.dk>

Full_Name: Matt Fantle
Version: 1.16
OS: Mac OS 10.4.7
Submission from: (NULL) (128.118.174.213)


Problem:  R crashes when 'Command-f' is pressed to begin "Find"
Frequency:  This problem is intermittant.  Once R crashes, the only solution is
to restart R and try to Find again.  There is no regularity to the problem.  If
R is opened by double-clicking on a ".R" file, the problem might be there.  If R
is opened by double-clicking the application or alias, the problem may also
still be there.

Log report:
OS Version:     10.4.7 (Build 8J135)
Report Version: 4

Command: R
Path:    /Applications/R.app/Contents/MacOS/R
Parent:  WindowServer [60]

Version: 1.16 (3198)

PID:    474
Thread: 0

Exception:  EXC_BREAKPOINT (0x0006)
Code[0]:    0x00000001
Code[1]:    0x9295f120


Thread 0 Crashed:
0   com.apple.Foundation     	0x9295f120 _NSRaiseError + 264
1   com.apple.AppKit         	0x937c9274 -[NSCarbonMenuImpl
performActionWithHighlightingForItemAtIndex:] + 160
2   com.apple.AppKit         	0x937c8ce4 -[NSMenu performKeyEquivalent:] + 272
3   com.apple.AppKit         	0x937c88c4 -[NSApplication _handleKeyEquivalent:]
+ 220
4   com.apple.AppKit         	0x936d2408 -[NSApplication sendEvent:] + 2944
5   org.R-project.R          	0x0000b730 -[RController handleReadConsole:] + 88
(RController.m:869)
6   org.R-project.R          	0x0002c0b8 Re_ReadConsole + 108
(Rcallbacks.m:137)
7   org.R-project.R          	0x0003223c run_REngineRmainloop + 300
(Rinit.c:341)
8   org.R-project.R          	0x0002aa1c -[REngine runREPL] + 68
(REngine.m:167)
9   org.R-project.R          	0x0001d340 main + 680 (main.m:101)
10  org.R-project.R          	0x00002e8c _start + 340 (crt.c:272)
11  org.R-project.R          	0x00002d34 start + 60

Thread 1:
0   libSystem.B.dylib        	0x9000b268 mach_msg_trap + 8
1   libSystem.B.dylib        	0x9000b1bc mach_msg + 60
2   com.apple.CoreFoundation 	0x907dbb78 __CFRunLoopRun + 832
3   com.apple.CoreFoundation 	0x907db47c CFRunLoopRunSpecific + 268
4   com.apple.Foundation     	0x92939598 -[NSConnection sendInvocation:] + 1468
5   com.apple.Foundation     	0x92938034 -[NSObject(NSForwardInvocation)
forward::] + 408
6   libobjc.A.dylib          	0x90a430b0 _objc_msgForward + 176
7   com.apple.Foundation     	0x9293839c -[NSDistantObject
methodSignatureForSelector:] + 268
8   com.apple.Foundation     	0x92937f04 -[NSObject(NSForwardInvocation)
forward::] + 104
9   libobjc.A.dylib          	0x90a430b0 _objc_msgForward + 176
10  org.R-project.R          	0x0000acc0 -[RController readThread:] + 2436
(RController.m:613)
11  com.apple.Foundation     	0x92944194 forkThreadForFunction + 108
12  libSystem.B.dylib        	0x9002bc28 _pthread_body + 96

Thread 2:
0   libSystem.B.dylib        	0x9002c2e8 semaphore_wait_signal_trap + 8
1   libSystem.B.dylib        	0x90030dcc pthread_cond_wait + 480
2   com.apple.Foundation     	0x9294b300 -[NSConditionLock lockWhenCondition:] +
68
3   com.apple.AppKit         	0x9376a708 -[NSUIHeartBeat _heartBeatThread:] +
324
4   com.apple.Foundation     	0x92944194 forkThreadForFunction + 108
5   libSystem.B.dylib        	0x9002bc28 _pthread_body + 96

Thread 3:
0   libSystem.B.dylib        	0x9000b268 mach_msg_trap + 8
1   libSystem.B.dylib        	0x9000b1bc mach_msg + 60
2   com.apple.CoreFoundation 	0x907dbb78 __CFRunLoopRun + 832
3   com.apple.CoreFoundation 	0x907db47c CFRunLoopRunSpecific + 268
4   com.apple.Foundation     	0x9296b69c
+[NSURLConnection(NSURLConnectionInternal) _resourceLoadLoop:] + 264
5   com.apple.Foundation     	0x92944194 forkThreadForFunction + 108
6   libSystem.B.dylib        	0x9002bc28 _pthread_body + 96

Thread 4:
0   libSystem.B.dylib        	0x9000b268 mach_msg_trap + 8
1   libSystem.B.dylib        	0x9000b1bc mach_msg + 60
2   com.apple.CoreFoundation 	0x907dbb78 __CFRunLoopRun + 832
3   com.apple.CoreFoundation 	0x907db47c CFRunLoopRunSpecific + 268
4   com.apple.Foundation     	0x9296c7dc +[NSURLCache _diskCacheSyncLoop:] +
152
5   com.apple.Foundation     	0x92944194 forkThreadForFunction + 108
6   libSystem.B.dylib        	0x9002bc28 _pthread_body + 96

Thread 5:
0   libSystem.B.dylib        	0x9000b268 mach_msg_trap + 8
1   libSystem.B.dylib        	0x9000b1bc mach_msg + 60
2   com.apple.CoreFoundation 	0x907dbb78 __CFRunLoopRun + 832
3   com.apple.CoreFoundation 	0x907db47c CFRunLoopRunSpecific + 268
4   com.apple.Foundation     	0x92953164 -[NSRunLoop runMode:beforeDate:] + 172
5   com.apple.Foundation     	0x9295309c -[NSRunLoop run] + 76
6   com.apple.WebKit         	0x9562ff70 +[WebFileDatabase _syncLoop:] + 176
7   com.apple.Foundation     	0x92944194 forkThreadForFunction + 108
8   libSystem.B.dylib        	0x9002bc28 _pthread_body + 96

Thread 0 crashed with PPC Thread State 64:
  srr0: 0x000000009295f120 srr1: 0x000000000202f030                       
vrsave: 0x0000000000000000
    cr: 0x24000442          xer: 0x0000000000000004   lr: 0x000000009295f0f8 
ctr: 0x0000000092921264
    r0: 0x0000000000000000   r1: 0x00000000bfffeff0   r2: 0x00000000a291e508  
r3: 0x00000000a2942b88
    r4: 0x0000000090a4dff0   r5: 0x0000000092920844   r6: 0x00000000bfffec24  
r7: 0x00000000000000ff
    r8: 0x00000000bfffec10   r9: 0x0000000004a15770  r10: 0x0000000090a3c628 
r11: 0x0000000024000442
   r12: 0x0000000092921264  r13: 0x0000000000000000  r14: 0x0000000000000000 
r15: 0x0000000000000000
   r16: 0x0000000000000000  r17: 0x0000000000000000  r18: 0x0000000000000000 
r19: 0x0000000000000000
   r20: 0x0000000000000000  r21: 0x000000000003d0a0  r22: 0x000000000003c054 
r23: 0x0000000000000000
   r24: 0x000000000054aba4  r25: 0x0000000007822c10  r26: 0x000000000781ab50 
r27: 0x0000000000000047
   r28: 0x00000000078363f0  r29: 0x00000000a292381c  r30: 0x00000000005bcf00 
r31: 0x000000009295f028

Binary Images Description:
    0x1000 -    0x3efff org.R-project.R 1.16 (3198)
/Applications/R.app/Contents/MacOS/R
  0x157000 -   0x162fff libgcc_s.1.0.dylib 
/Library/Frameworks/R.framework/Versions/2.3/Resources/lib/libgcc_s.1.0.dylib
  0x305000 -   0x34bfff libgfortran.0.dylib 
/Library/Frameworks/R.framework/Versions/2.3/Resources/lib/libgfortran.0.dylib
  0x41c000 -   0x45afff libreadline.5.1.dylib 
/Library/Frameworks/R.framework/Versions/2.3/Resources/lib/libreadline.5.1.dylib
 0x1008000 -  0x1210fff libR.dylib 
/Library/Frameworks/R.framework/Versions/2.3/Resources/lib/libR.dylib
 0x4bca000 -  0x4bcdfff methods.so 
/Library/Frameworks/R.framework/Versions/2.3/Resources/library/methods/libs/ppc/methods.so
 0x5c93000 -  0x5caffff grDevices.so 
/Library/Frameworks/R.framework/Versions/2.3/Resources/library/grDevices/libs/ppc/grDevices.so
 0x5d76000 -  0x5dbcfff stats.so 
/Library/Frameworks/R.framework/Versions/2.3/Resources/library/stats/libs/ppc/stats.so
0x8fe00000 - 0x8fe52fff dyld 45.3	/usr/lib/dyld
0x90000000 - 0x901bbfff libSystem.B.dylib 	/usr/lib/libSystem.B.dylib
0x90213000 - 0x90218fff libmathCommon.A.dylib 
/usr/lib/system/libmathCommon.A.dylib
0x9021a000 - 0x90267fff com.apple.CoreText 1.0.2 (???)
/System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/CoreText.framework/Versions/A/CoreText
0x90292000 - 0x90343fff ATS 
/System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/ATS.framework/Versions/A/ATS
0x90372000 - 0x9072cfff com.apple.CoreGraphics 1.258.33 (???)
/System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/CoreGraphics.framework/Versions/A/CoreGraphics
0x907b9000 - 0x90892fff com.apple.CoreFoundation 6.4.6 (368.27)
/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation
0x908db000 - 0x908dbfff com.apple.CoreServices 10.4 (???)
/System/Library/Frameworks/CoreServices.framework/Versions/A/CoreServices
0x908dd000 - 0x909dffff libicucore.A.dylib 	/usr/lib/libicucore.A.dylib
0x90a39000 - 0x90abdfff libobjc.A.dylib 	/usr/lib/libobjc.A.dylib
0x90ae7000 - 0x90b57fff com.apple.framework.IOKit 1.4.1 (???)
/System/Library/Frameworks/IOKit.framework/Versions/A/IOKit
0x90b6d000 - 0x90b7ffff libauto.dylib 	/usr/lib/libauto.dylib
0x90b86000 - 0x90e5dfff com.apple.CoreServices.CarbonCore 681.4
/System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/CarbonCore.framework/Versions/A/CarbonCore
0x90ec3000 - 0x90f43fff com.apple.CoreServices.OSServices 4.1
/System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/OSServices.framework/Versions/A/OSServices
0x90f8d000 - 0x90fcefff com.apple.CFNetwork 129.16
/System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/CFNetwork.framework/Versions/A/CFNetwork
0x90fe3000 - 0x90ffbfff com.apple.WebServices 1.1.2 (1.1.0)
/System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/WebServicesCore.framework/Versions/A/WebServicesCore
0x9100b000 - 0x9108cfff com.apple.SearchKit 1.0.5
/System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/SearchKit.framework/Versions/A/SearchKit
0x910d2000 - 0x910fcfff com.apple.Metadata 10.4.4 (121.36)
/System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/Metadata.framework/Versions/A/Metadata
0x9110d000 - 0x9111bfff libz.1.dylib 	/usr/lib/libz.1.dylib
0x9111e000 - 0x912d8fff com.apple.security 4.4 (27566)
/System/Library/Frameworks/Security.framework/Versions/A/Security
0x913d6000 - 0x913dffff com.apple.DiskArbitration 2.1
/System/Library/Frameworks/DiskArbitration.framework/Versions/A/DiskArbitration
0x913e6000 - 0x9140efff com.apple.SystemConfiguration 1.8.3
/System/Library/Frameworks/SystemConfiguration.framework/Versions/A/SystemConfiguration
0x91421000 - 0x9142cfff libgcc_s.1.dylib 	/usr/lib/libgcc_s.1.dylib
0x91431000 - 0x91439fff libbsm.dylib 	/usr/lib/libbsm.dylib
0x9143d000 - 0x914b8fff com.apple.audio.CoreAudio 3.0.4
/System/Library/Frameworks/CoreAudio.framework/Versions/A/CoreAudio
0x914f5000 - 0x914f5fff com.apple.ApplicationServices 10.4 (???)
/System/Library/Frameworks/ApplicationServices.framework/Versions/A/ApplicationServices
0x914f7000 - 0x9152ffff com.apple.AE 1.5 (297)
/System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/AE.framework/Versions/A/AE
0x9154a000 - 0x91617fff com.apple.ColorSync 4.4.4
/System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/ColorSync.framework/Versions/A/ColorSync
0x9166c000 - 0x916fdfff com.apple.print.framework.PrintCore 4.6 (177.13)
/System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/PrintCore.framework/Versions/A/PrintCore
0x91744000 - 0x917fbfff com.apple.QD 3.10.20 (???)
/System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/QD.framework/Versions/A/QD
0x91838000 - 0x91896fff com.apple.HIServices 1.5.3 (???)
/System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/HIServices.framework/Versions/A/HIServices
0x918c5000 - 0x918e9fff com.apple.LangAnalysis 1.6.1
/System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/LangAnalysis.framework/Versions/A/LangAnalysis
0x918fd000 - 0x91922fff com.apple.FindByContent 1.5
/System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/FindByContent.framework/Versions/A/FindByContent
0x91935000 - 0x91977fff com.apple.LaunchServices 181
/System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/LaunchServices.framework/Versions/A/LaunchServices
0x91993000 - 0x919a7fff com.apple.speech.synthesis.framework 3.3
/System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/SpeechSynthesis.framework/Versions/A/SpeechSynthesis
0x919b5000 - 0x919f5fff com.apple.ImageIO.framework 1.4.8
/System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/ImageIO.framework/Versions/A/ImageIO
0x91a0b000 - 0x91ad3fff libcrypto.0.9.7.dylib 	/usr/lib/libcrypto.0.9.7.dylib
0x91b21000 - 0x91b36fff libcups.2.dylib 	/usr/lib/libcups.2.dylib
0x91b3b000 - 0x91b58fff libJPEG.dylib 
/System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/ImageIO.framework/Versions/A/Resources/libJPEG.dylib
0x91b5d000 - 0x91bccfff libJP2.dylib 
/System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/ImageIO.framework/Versions/A/Resources/libJP2.dylib
0x91be3000 - 0x91be7fff libGIF.dylib 
/System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/ImageIO.framework/Versions/A/Resources/libGIF.dylib
0x91be9000 - 0x91c31fff libRaw.dylib 
/System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/ImageIO.framework/Versions/A/Resources/libRaw.dylib
0x91c36000 - 0x91c73fff libTIFF.dylib 
/System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/ImageIO.framework/Versions/A/Resources/libTIFF.dylib
0x91c7a000 - 0x91c93fff libPng.dylib 
/System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/ImageIO.framework/Versions/A/Resources/libPng.dylib
0x91c98000 - 0x91c9bfff libRadiance.dylib 
/System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/ImageIO.framework/Versions/A/Resources/libRadiance.dylib
0x91c9d000 - 0x91c9dfff com.apple.Accelerate 1.2.2 (Accelerate 1.2.2)
/System/Library/Frameworks/Accelerate.framework/Versions/A/Accelerate
0x91c9f000 - 0x91d84fff com.apple.vImage 2.4
/System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vImage.framework/Versions/A/vImage
0x91d8c000 - 0x91dabfff com.apple.Accelerate.vecLib 3.2.2 (vecLib 3.2.2)
/System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/vecLib
0x91e17000 - 0x91e85fff libvMisc.dylib 
/System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libvMisc.dylib
0x91e90000 - 0x91f25fff libvDSP.dylib 
/System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libvDSP.dylib
0x91f3f000 - 0x924c7fff libBLAS.dylib 
/System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libBLAS.dylib
0x924fa000 - 0x92825fff libLAPACK.dylib 
/System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libLAPACK.dylib
0x92855000 - 0x928ddfff com.apple.DesktopServices 1.3.4
/System/Library/PrivateFrameworks/DesktopServicesPriv.framework/Versions/A/DesktopServicesPriv
0x9291e000 - 0x92b49fff com.apple.Foundation 6.4.6 (567.27)
/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation
0x92c67000 - 0x92d45fff libxml2.2.dylib 	/usr/lib/libxml2.2.dylib
0x92d65000 - 0x92e53fff libiconv.2.dylib 	/usr/lib/libiconv.2.dylib
0x92e65000 - 0x92e83fff libGL.dylib 
/System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libGL.dylib
0x92e8e000 - 0x92ee8fff libGLU.dylib 
/System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libGLU.dylib
0x92f06000 - 0x92f06fff com.apple.Carbon 10.4 (???)
/System/Library/Frameworks/Carbon.framework/Versions/A/Carbon
0x92f08000 - 0x92f1cfff com.apple.ImageCapture 3.0
/System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/ImageCapture.framework/Versions/A/ImageCapture
0x92f34000 - 0x92f44fff com.apple.speech.recognition.framework 3.4
/System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/SpeechRecognition.framework/Versions/A/SpeechRecognition
0x92f50000 - 0x92f65fff com.apple.securityhi 2.0 (203)
/System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/SecurityHI.framework/Versions/A/SecurityHI
0x92f77000 - 0x92ffefff com.apple.ink.framework 101.2 (69)
/System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/Ink.framework/Versions/A/Ink
0x93012000 - 0x9301dfff com.apple.help 1.0.3 (32)
/System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/Help.framework/Versions/A/Help
0x93027000 - 0x93054fff com.apple.openscripting 1.2.5 (???)
/System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/OpenScripting.framework/Versions/A/OpenScripting
0x9306e000 - 0x9307efff com.apple.print.framework.Print 5.0 (190.1)
/System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/Print.framework/Versions/A/Print
0x9308a000 - 0x930f0fff com.apple.htmlrendering 1.1.2
/System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/HTMLRendering.framework/Versions/A/HTMLRendering
0x93121000 - 0x93170fff com.apple.NavigationServices 3.4.4 (3.4.3)
/System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/NavigationServices.framework/Versions/A/NavigationServices
0x9319e000 - 0x931bbfff com.apple.audio.SoundManager 3.9
/System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/CarbonSound.framework/Versions/A/CarbonSound
0x931cd000 - 0x931dafff com.apple.CommonPanels 1.2.2 (73)
/System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/CommonPanels.framework/Versions/A/CommonPanels
0x931e3000 - 0x934f0fff com.apple.HIToolbox 1.4.8 (???)
/System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/HIToolbox.framework/Versions/A/HIToolbox
0x9363f000 - 0x9364bfff com.apple.opengl 1.4.7
/System/Library/Frameworks/OpenGL.framework/Versions/A/OpenGL
0x936c3000 - 0x936c3fff com.apple.Cocoa 6.4 (???)
/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa
0x936c5000 - 0x93cf8fff com.apple.AppKit 6.4.7 (824.41)
/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit
0x94085000 - 0x940f5fff com.apple.CoreData 80
/System/Library/Frameworks/CoreData.framework/Versions/A/CoreData
0x9412e000 - 0x941f1fff com.apple.audio.toolbox.AudioToolbox 1.4.3
/System/Library/Frameworks/AudioToolbox.framework/Versions/A/AudioToolbox
0x94243000 - 0x94243fff com.apple.audio.units.AudioUnit 1.4
/System/Library/Frameworks/AudioUnit.framework/Versions/A/AudioUnit
0x94245000 - 0x943f8fff com.apple.QuartzCore 1.4.8
/System/Library/Frameworks/QuartzCore.framework/Versions/A/QuartzCore
0x9444b000 - 0x94488fff libsqlite3.0.dylib 	/usr/lib/libsqlite3.0.dylib
0x94490000 - 0x944e0fff libGLImage.dylib 
/System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libGLImage.dylib
0x94683000 - 0x94692fff libCGATS.A.dylib 
/System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/CoreGraphics.framework/Versions/A/Resources/libCGATS.A.dylib
0x9469a000 - 0x946a6fff libCSync.A.dylib 
/System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/CoreGraphics.framework/Versions/A/Resources/libCSync.A.dylib
0x946ec000 - 0x94704fff libRIP.A.dylib 
/System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/CoreGraphics.framework/Versions/A/Resources/libRIP.A.dylib
0x94b67000 - 0x94b88fff libmx.A.dylib 	/usr/lib/libmx.A.dylib
0x9562d000 - 0x956bbfff com.apple.WebKit 418.8
/System/Library/Frameworks/WebKit.framework/Versions/A/WebKit
0x95717000 - 0x957adfff com.apple.JavaScriptCore 418.3
/System/Library/Frameworks/WebKit.framework/Versions/A/Frameworks/JavaScriptCore.framework/Versions/A/JavaScriptCore
0x957ea000 - 0x95af6fff com.apple.WebCore 418.20.1
/System/Library/Frameworks/WebKit.framework/Versions/A/Frameworks/WebCore.framework/Versions/A/WebCore
0x95c7f000 - 0x95ca8fff libxslt.1.dylib 	/usr/lib/libxslt.1.dylib
0x95ecd000 - 0x95ecffff com.apple.ExceptionHandling 1.2 (???)
/System/Library/Frameworks/ExceptionHandling.framework/Versions/A/ExceptionHandling
0x96e9f000 - 0x96ebefff com.apple.vecLib 3.2.2 (vecLib 3.2.2)
/System/Library/Frameworks/vecLib.framework/Versions/A/vecLib



From sfalcon at fhcrc.org  Thu Aug 31 16:46:29 2006
From: sfalcon at fhcrc.org (Seth Falcon)
Date: Thu, 31 Aug 2006 07:46:29 -0700
Subject: [Rd] 'CanMakeUseOf' field
In-Reply-To: <17654.37512.452743.135183@stat.math.ethz.ch> (Martin Maechler's
	message of "Thu, 31 Aug 2006 09:40:56 +0200")
References: <m2wt8sgyo0.fsf@ziti.fhcrc.org>
	<17651.65163.240840.365787@stat.math.ethz.ch>
	<44F4473D.9030203@bank-banque-canada.ca>
	<17652.19292.998960.686119@stat.math.ethz.ch>
	<44F46112.7060809@stats.uwo.ca>
	<17653.20352.330891.556094@mithrandir.hornik.net>
	<m2fyfe5ndr.fsf@ziti.fhcrc.org>
	<17654.37512.452743.135183@stat.math.ethz.ch>
Message-ID: <m2sljdufne.fsf@ziti.fhcrc.org>

Martin Maechler <maechler at stat.math.ethz.ch> writes:

>>>>>> "Seth" == Seth Falcon <sfalcon at fhcrc.org>
>>>>>>     on Wed, 30 Aug 2006 07:06:24 -0700 writes:
>
>     Seth> Kurt Hornik <Kurt.Hornik at wu-wien.ac.at> writes:
>     >> An internal environment variable called
>     >> 
>     >> _R_CHECK_FORCE_SUGGESTS_
>     >> 
>     >> which controls this has been in place for quite some time now.  One can
>     >> trivially add a Perl R CMD check configure variable for it.  I am a bit
>     >> hesitant to add a --force-suggests cola to R CMD check, as this
>     >> hardwires a legacy dependency model which may not be up to future needs.
>     >> 
>     >> As an aside, I have never understood whe developers have need for such
>     >> an option (as I would have assumed that they'd typically try to check
>     >> all of their code).
>
>     Seth> This is not an aside, but the heart of the issue IMHO :-)
>
>     Seth> One case in which checking Suggests does not make sense is when a
>     Seth> package provides optional functionality that is platform specific.  A
>     Seth> given Suggests entry may only be available on platform A, but it still
>     Seth> is desirable to check the package on platform B.  Similar issues can
>     Seth> arise during development when a given Suggests entry stops working
>     Seth> with R-devel.
>
>     Seth> Further, if an item in Suggests means it is optional, then one
>     Seth> _should_ test that by testing the package without the optional packge
>     Seth> being available.  There are a few ways for a true dependency to sneak
>     Seth> into the code.  So I agree that typically developers want to test all
>     Seth> of their code, but that implies being able to check a package without
>     Seth> its Suggests being available (I realize this may be hard to implement,
>     Seth> but easily having R CMD check ignore Suggests is a good start).
>
>     Seth> And lastly, Suggests is currently used to list packages used for
>     Seth> extended examples in package vignettes and being able to easily
>     Seth> perform all other checks makes sense to me.
>
> Very good points, thanks.
> I think it's clear that some R developers see a clear need for
> this and their (our) output would be enhanced by such a very
> small addition --- it would probably only be a small addition
> addition to the "Writing R Extension" manual for the moment.
>
> I don't understand why some developers have such a resistance
> to allow one other such keyword.
> Dirk mentioned 'Enhances'  --- something which I could also live
> with instead of 'CanUse' -- I just to be generous
> with myself (as package author) in my interpretation of
> "enhancing" :-)

This is my last post until we discuss this next year ;-)

The easy solution is to add a new term, but I don't think this is a
good solution at all.

A new developer would have a hard time guessing the difference between
Suggests and CanUse.  Why?  Because 'CanUse' exists because of a
disagreement about how R CMD check should operate.  The meaning of
CanUse is just that it doesn't get checked by R CMD check.

I think we should consider keeping the two levels: Depends and
Suggests and improve R CMD check to:

* Be able to check a package when any subset of Suggests
  is present.

* Be able to check a package forcing all Suggests to be unavailable.

If new terms are wanted, they should have clear semantics.  From the
discussion, here are some possibilities:

DocDepends: Needed for vignette or extended example
RelatedTo: Loose affinity for listed package

Adding DocDepends, it would make sense to modify R CMD check to know
about it.  Probably not for RelatedTo.

> Those developers who cannot remember disambiguating more than
> one field for 'optional' are well allowed to keep using just
> one, i.e., 'Suggests'. 
> But others who want to be more precise and or want to better expose
> (via DESCRIPTION) what they do anyway
> (via 'if(require(*)) { .. }') inside their code, examples, and
> or vignettes would just converge on *how* the new field should
> be baptized. 
> Since 'R CMD check' is not affected, there's no other
> consequence for any package writer.

I fail to see how adding an ambiguous term with fuzzy meaning is good
for package developers wishing to be more precise.  At the same time,
if changes to R CMD check are decided against, I would rather have an
extra term.

Bw,

+ seth



From thomaskelderml at gmail.com  Thu Aug 31 17:33:26 2006
From: thomaskelderml at gmail.com (Thomas Kelder)
Date: Thu, 31 Aug 2006 17:33:26 +0200
Subject: [Rd] stop R mainloop without calling exit(1)
In-Reply-To: <903fbcd30608310831s4b323e4fya224e99961b97db9@mail.gmail.com>
References: <903fbcd30608310552w2f3d6350p72e7e52c0144cc4b@mail.gmail.com>
	<Pine.LNX.4.64.0608311406130.22477@gannet.stats.ox.ac.uk>
	<Pine.LNX.4.64.0608311429420.22954@gannet.stats.ox.ac.uk>
	<903fbcd30608310831s4b323e4fya224e99961b97db9@mail.gmail.com>
Message-ID: <903fbcd30608310833h7a06b4d8p682912f0041d1baa@mail.gmail.com>

Dear Professor Ripley,

Thank you for your reply. I have a few questions left:

> > But that's not true.  The documented way is
> >
> > setup_Rmainloop
> > run a loop (which can return)
> > end_Rmainloop
> >
> > The problem was that the only documented way to shut R down cleanly was
> > end_Rmainloop (which did call exit), whereas there now is Rf_endEmbeddedR.

In the documentation  "run_Rmainloop" is called to start the loop:

         Rf_initEmbeddedR(argc, argv);
         /* submit some code to R, which is done interactively via
             run_Rmainloop();
         */
         Rf_endEmbeddedR(0);

But that method doesn't return normally, right? It only ends if
ReplIteration returns -1.
Or do you mean I need to re-implement the read-and-evaluate loop in a
way that I can interrupt it (at "run a loop (which can return)" in
your example)? So instead of calling run_Rmainloop, I can copy the
loop in R_ReplConsole, add an interrupted flag and check that every
iteration.

> > It seems that almost all users of embedded R did not call end_Rmainloop,
> > and I met this when creating a common embedding interface for Unix and
> > Windows versions of R: the Windows widgets (such as the graphics device)
> > do need to be told to shut down.

> Another idea on Unix-alikes is to replace R_CleanUp by your own callback:
> it is part of the documented interface for writing a front-end.

So for the Unix alikes I could use a customized R_CleanUp for the
non-devel versions of R. For windows I should still call
end_Rmainloop, but if I understand you well, this is only needed if I
use the windows widgets in R. I don't want to, so it shouldn't be a
problem then?

Thank you for your help, I'm going to try to modify the JRI interface
by writing a custom loop instead of calling run_Rmainloop.

By the way, I use R version 2.2.1 in linux, because I got the "Error:
C stack usage is too close to the limit R" error in higher versions (I
saw there was a topic about this already:
https://stat.ethz.ch/pipermail/r-devel/2006-April/037219.html). I
tried to use the R-devel version to make use of the Rf_endEmbeddedR
method, but the error also occurs in this version. Could this be a
bug?

Thomas

2006/8/31, Prof Brian Ripley <ripley at stats.ox.ac.uk>:
> Another idea on Unix-alikes is to replace R_CleanUp by your own callback:
> it is part of the documented interface for writing a front-end.
>
> On Thu, 31 Aug 2006, Prof Brian Ripley wrote:
>
> > This is already covered in the R-devel version of R: please consult
> > `Writing R Extensions' in that version.
> >
> > On Thu, 31 Aug 2006, Thomas Kelder wrote:
> >
> > > Hello,
> > >
> > > I'm trying to make my Java application work with R, which involves
> > > sending and retrieving data and to run R functions from within the
> > > Java application. I also need to have "live interaction" with R, to
> > > show the R console output (e.g. warnings and print) and to enable the
> > > user to enter input when a function asks for it.
> > >
> > > Therefore I created a simple R console in Java using JRI
> > > (http://rosuda.org/JRI/), and it works ok. The only problem is that I
> > > have to start the R main loop which doesn't return.
> >
> > But that's not true.  The documented way is
> >
> > setup_Rmainloop
> > run a loop (which can return)
> > end_Rmainloop
> >
> > The problem was that the only documented way to shut R down cleanly was
> > end_Rmainloop (which did call exit), whereas there now is Rf_endEmbeddedR.
> >
> > > The only way to stop it is to give R the quit command ('q()'), but then
> > > 'exit(1)' is called from the R code and the Java Virtual Machine
> > > (including my application) also shuts down.
> >
> > That's because you called end_Rmainloop, possibly by calling
> > run_Rmainloop rather than taking control of the loop.
> >
> > It seems that almost all users of embedded R did not call end_Rmainloop,
> > and I met this when creating a common embedding interface for Unix and
> > Windows versions of R: the Windows widgets (such as the graphics device)
> > do need to be told to shut down.
> >
> > [...]
> >
> >
>
> --
> Brian D. Ripley,                  ripley at stats.ox.ac.uk
> Professor of Applied Statistics,  http://www.stats.ox.ac.uk/~ripley/
> University of Oxford,             Tel:  +44 1865 272861 (self)
> 1 South Parks Road,                     +44 1865 272866 (PA)
> Oxford OX1 3TG, UK                Fax:  +44 1865 272595
>



From B.Rowlingson at lancaster.ac.uk  Thu Aug 31 17:55:38 2006
From: B.Rowlingson at lancaster.ac.uk (Barry Rowlingson)
Date: Thu, 31 Aug 2006 16:55:38 +0100
Subject: [Rd] R-Project logo in SVG format
In-Reply-To: <61685.151.100.49.234.1157032368.squirrel@webmail.lrz-muenchen.de>
References: <Pine.LNX.4.64.0608310839160.32642@goldenaxe.gpcc.itd.umich.edu>
	<61685.151.100.49.234.1157032368.squirrel@webmail.lrz-muenchen.de>
Message-ID: <44F7067A.6030108@lancaster.ac.uk>

friedrich.leisch at stat.uni-muenchen.de wrote:

> After you created one and submitted it to us probably at the same place as
> the bitmaps. In the meantime it will have to suffice that you use all we
> have, and that are the bitmaps (the logo was done by a volunteer who chose
> to use a bitmapped graphics program). It is not like we keep the good
> stuff back on purpose ...

  It does look like it would be near-impossible to parameterise the logo 
efficiently into a vector format - all that shading and 3-d effect 
stuff. The largest PNG file there is 1450x1100 pixels which at 300 dpi 
gives you a 4-inch logo. Although looking at it full-size on my monitor 
reveals some artifacts in the 3-d shading...

  Do any other materials exist for making the logo? A description of the 
fonts used, a 3-d model R and O-shape, a layered PSD or XCF file, or a 
Gimp/Photoshop macro set for getting that effect? I dont believe this 
was painted pixel-by-pixel...

  When was the last time the mailing list had a 'need a new logo' thread?

Barry



From jeff.horner at vanderbilt.edu  Thu Aug 31 17:57:34 2006
From: jeff.horner at vanderbilt.edu (Jeffrey Horner)
Date: Thu, 31 Aug 2006 10:57:34 -0500
Subject: [Rd] stop R mainloop without calling exit(1)
In-Reply-To: <903fbcd30608310833h7a06b4d8p682912f0041d1baa@mail.gmail.com>
References: <903fbcd30608310552w2f3d6350p72e7e52c0144cc4b@mail.gmail.com>	<Pine.LNX.4.64.0608311406130.22477@gannet.stats.ox.ac.uk>	<Pine.LNX.4.64.0608311429420.22954@gannet.stats.ox.ac.uk>	<903fbcd30608310831s4b323e4fya224e99961b97db9@mail.gmail.com>
	<903fbcd30608310833h7a06b4d8p682912f0041d1baa@mail.gmail.com>
Message-ID: <44F706EE.7040802@vanderbilt.edu>

Thomas Kelder wrote:
[...]

> By the way, I use R version 2.2.1 in linux, because I got the "Error:
> C stack usage is too close to the limit R" error in higher versions (I
> saw there was a topic about this already:
> https://stat.ethz.ch/pipermail/r-devel/2006-April/037219.html). I
> tried to use the R-devel version to make use of the Rf_endEmbeddedR
> method, but the error also occurs in this version. Could this be a
> bug?

Try this in your code. It turns off stack checking altogether:

     #ifdef CSTACK_DEFNS
     /* Don't do any stack checking */
     R_CStackLimit = -1;
     #endif
     Rf_initEmbeddedR(R_argc, R_argv);


Jeff
-- 
http://biostat.mc.vanderbilt.edu/JeffreyHorner



From h.wickham at gmail.com  Thu Aug 31 18:44:05 2006
From: h.wickham at gmail.com (hadley wickham)
Date: Thu, 31 Aug 2006 11:44:05 -0500
Subject: [Rd] R-Project logo in SVG format
In-Reply-To: <44F7067A.6030108@lancaster.ac.uk>
References: <Pine.LNX.4.64.0608310839160.32642@goldenaxe.gpcc.itd.umich.edu>
	<61685.151.100.49.234.1157032368.squirrel@webmail.lrz-muenchen.de>
	<44F7067A.6030108@lancaster.ac.uk>
Message-ID: <f8e6ff050608310944ib3310e5i1d15a395934d7891@mail.gmail.com>

>   It does look like it would be near-impossible to parameterise the logo
> efficiently into a vector format - all that shading and 3-d effect
> stuff.

These days, most vector graphics programs provide gradient shading
primitives - that's all you need to recreate most 3D effects.

Hadley



From gregor.gorjanc at bfro.uni-lj.si  Thu Aug 31 20:06:23 2006
From: gregor.gorjanc at bfro.uni-lj.si (Gregor Gorjanc)
Date: Thu, 31 Aug 2006 20:06:23 +0200
Subject: [Rd] Wish: keep names in mapply() result
In-Reply-To: <44F62A59.8040301@bfro.uni-lj.si>
References: <44F62A59.8040301@bfro.uni-lj.si>
Message-ID: <44F7251F.2090700@bfro.uni-lj.si>

Hello,

Charles Berry sent me (off-list) his proposal, which I find better
(after slight modification) than mine. I would say that proposed changes
make mapply even more consistent with (some) *apply* funcs in terms of
names. Patches to mapply.R and mapply.Rd are attached. I have runned
make check-all and it seems that there are no problems with this change.
I hope R core will find this worth to apply.

New behaviour without first ... as character:

l <- list(a=1, b=2)
k <- list(1)
mapply(FUN="+", l, k)
a b
2 3

mapply(FUN="+", l, k, USE.NAMES=FALSE)
[1] 2 3

mapply(FUN="+", l, k, SIMPLIFY=FALSE)
$a
[1] 2

$b
[1] 3

mapply(FUN="+", l, k, SIMPLIFY=FALSE, USE.NAMES=FALSE)
[[1]]
[1] 2

[[2]]
[1] 3

New behaviour with first ... as character _with_ names:

l <- c("1", "2")
names(l) <- c("a", "b")
mapply(FUN="paste", l, k)
    a     b
"1 1" "2 1"

mapply(FUN="paste", l, k, USE.NAMES=FALSE)
[1] "1 1" "2 1"

mapply(FUN="paste", l, k, SIMPLIFY=FALSE)
$a
[1] "1 1"

$b
[1] "2 1"

mapply(FUN="paste", l, k, SIMPLIFY=FALSE, USE.NAMES=FALSE)
[[1]]
[1] "1 1"

[[2]]
[1] "2 1"

New behaviour with first ... as character _without_ names:

l <- c("1", "2")
mapply(FUN="paste", l, k)
    1     2
"1 1" "2 1"

mapply(FUN="paste", l, k, USE.NAMES=FALSE)
[1] "1 1" "2 1"

mapply(FUN="paste", l, k, SIMPLIFY=FALSE)
$`1`
[1] "1 1"

$`2`
[1] "2 1"

mapply(FUN="paste", l, k, SIMPLIFY=FALSE, USE.NAMES=FALSE)
[[1]]
[1] "1 1"

[[2]]
[1] "2 1"

Regards, Gregor

Gregor Gorjanc wrote:
> Hello!
> 
> I have noticed that mapply() drops names in R 2.3.1 as well as in
> r-devel. Here is a simple example:
> 
> l <- list(a=1, b=2)
> k <- list(1)
> mapply(FUN="+", l, k)
> [1] 2 3
> mapply(FUN="+", l, k, SIMPLIFY=FALSE)
> [[1]]
> [1] 2
> 
> [[2]]
> [1] 3
> 
> Help page does not indicate that this should happen. Argument USE.NAMES
> does not have any effect here as it used only in a bit special
> situation: "If the first ... argument is character and the result does
> not already have names, use it as the names." But result is always
> without names as shown above. Did I miss any peculiarities?
> 
> This is not consistent with lapply, which keeps names i.e.
> 
> lapply(l, "+", 1)
> $a
> [1] 2
> 
> $b
> [1] 3
> 
> I have attached and copied (at the end) patch proposal against SVN that
> adds names back to the result if x had it (only R as my C is ...). This
> way it would also be consistent with lapply. make check-all seems to be
> happy with changes. Now we get:
> 
> mapply(FUN="+", l, k)
> a b
> 2 3
> 
> mapply(FUN="+", l, k, SIMPLIFY=FALSE)
> $a
> [1] 2
> 
> $b
> [1] 3
> 
> And if we had "character" (with some variations) for first ... then:
> 
> l <- list(a="1", b="2")
> mapply(FUN="paste", l, k)
>     a     b
> "1 1" "2 1"
> 
> l <- list("1", "2")
> mapply(FUN="paste", l, k)
> [1] "1 1" "2 1"
> 
> l <- c("1", "2")
> mapply(FUN="paste", l, k)
>     1     2
> "1 1" "2 1"
> 
> Index: src/library/base/R/mapply.R
> ===================================================================
> --- src/library/base/R/mapply.R (revision 39024)
> +++ src/library/base/R/mapply.R (working copy)
> @@ -3,8 +3,16 @@
>      FUN <- match.fun(FUN)
>      dots <- list(...)
> 
> +    if(!is.null(names(dots[[1]]))) {
> +        isNamed <- TRUE
> +        namesX <- names(dots[[1]])
> +    } else {
> +        isNamed <- FALSE
> +    }
> +
>      answer<-.Call("do_mapply", FUN, dots, MoreArgs, environment(),
>                    PACKAGE="base")
> +    if(isNamed) names(answer) <- namesX
> 
>      if (USE.NAMES && length(dots) && is.character(dots[[1]]) &&
>          is.null(names(answer))) names(answer) <- dots[[1]]
> @@ -47,4 +55,4 @@
>      }
>      formals(FUNV) <- formals(FUN)
>      FUNV
> -}
> \ No newline at end of file
> +}
> 
> 
> 
> ------------------------------------------------------------------------
> 
> Index: src/library/base/R/mapply.R
> ===================================================================
> --- src/library/base/R/mapply.R	(revision 39024)
> +++ src/library/base/R/mapply.R	(working copy)
> @@ -3,8 +3,16 @@
>      FUN <- match.fun(FUN)
>      dots <- list(...)
>  
> +    if(!is.null(names(dots[[1]]))) {
> +        isNamed <- TRUE
> +        namesX <- names(dots[[1]])
> +    } else {
> +        isNamed <- FALSE
> +    }
> +
>      answer<-.Call("do_mapply", FUN, dots, MoreArgs, environment(),
>                    PACKAGE="base")
> +    if(isNamed) names(answer) <- namesX
>  
>      if (USE.NAMES && length(dots) && is.character(dots[[1]]) &&
>          is.null(names(answer))) names(answer) <- dots[[1]]
> @@ -47,4 +55,4 @@
>      }
>      formals(FUNV) <- formals(FUN)
>      FUNV
> -}
> \ No newline at end of file
> +}

-------------- next part --------------
A non-text attachment was scrubbed...
Name: mapply.R.patch.gz
Type: application/x-gzip
Size: 446 bytes
Desc: not available
Url : https://stat.ethz.ch/pipermail/r-devel/attachments/20060831/80849894/attachment-0008.gz 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: mapply.Rd.patch.gz
Type: application/x-gzip
Size: 438 bytes
Desc: not available
Url : https://stat.ethz.ch/pipermail/r-devel/attachments/20060831/80849894/attachment-0009.gz 

From Roger.Bivand at nhh.no  Thu Aug 31 22:16:44 2006
From: Roger.Bivand at nhh.no (Roger Bivand)
Date: Thu, 31 Aug 2006 22:16:44 +0200 (CEST)
Subject: [Rd] S4 changes - sp fails
Message-ID: <Pine.LNX.4.44.0608312159380.5231-100000@reclus.nhh.no>

Under R version 2.4.0 (2006-08-30 r39024), sp fails CMD check following
the latest changes in methods.

The failures are in running examples and occur in CMD check:

> data(state)
> dd2dms(state.center$x)
Error in function (classes, fdef, mtable)  : 
        unable to find an inherited method for function "initialize", for 
signature "integer"

Offending code:

	deg <- as(floor(dd), "integer") 

After replacing by as.integer(floor(dd)), it fails on the local class 
definition:

> dd2dms(state.center$x)
Error in function (classes, fdef, mtable)  : 
        unable to find an inherited method for function "initialize", for 
signature "DMS"

Installing sp, example("DMS-class") runs successfully interactively 
(other examples do too).

The methods package is declared as Depends: in DESCRIPTION, and
import(methods) in NAMESPACE; 

.onLoad <- function(lib, pkg) require(methods) is in the first R source 
file in Collate: order.

Should the methods package be being invoked in some other way, is there a 
reason why the installed package appears to run examples successfully that 
fail under CMD check?

Roger

-- 
Roger Bivand
Economic Geography Section, Department of Economics, Norwegian School of
Economics and Business Administration, Helleveien 30, N-5045 Bergen,
Norway. voice: +47 55 95 93 55; fax +47 55 95 95 43
e-mail: Roger.Bivand at nhh.no



From Friedrich.Leisch at stat.uni-muenchen.de  Mon Aug 28 15:33:46 2006
From: Friedrich.Leisch at stat.uni-muenchen.de (Friedrich Leisch)
Date: Mon, 28 Aug 2006 15:33:46 +0200
Subject: [Rd] [Bioc-devel] Sweave windows style path (was Re: texmf
 error on 7 packages on devel winXP build nodes)
In-Reply-To: <6phzmdqdyqb.fsf@gopher4.fhcrc.org>
References: <6.2.5.6.1.20060827184815.02173e80@wehi.edu.au>
	<6phzmdqdyqb.fsf@gopher4.fhcrc.org>
Message-ID: <17650.61626.320652.905103@galadriel.ci.tuwien.ac.at>

>>>>> On Sun, 27 Aug 2006 07:45:00 -0700,
>>>>> Martin Morgan (MM) wrote:

  > [A build system misconfiguration at Bioconductor lead to a discussion
  > about whether \usepackage{Sweave} should be included in .Rnw
  > documents. Leaving this line out causes a problem on Windows, as
  > indicated below.]

  > I think the problem is '~', which should, according to Donald
  > Arseneau's comment in this thread

  > http://groups.google.com/group/comp.text.tex/browse_thread/thread/640e89078d0697c4/5b6f9fc6b0da21bf?lnk=gst&q=windows+file+path&rnum=4#5b6f9fc6b0da21bf

  > be \string~. If this is the correct change, perhaps an upstream fix
  > could be introduced in src/library/util/R/Sweave.R.

Sorry to join in late, I am currently at a conference with limited
access to the Internet. I am not su sure how easy it is to make the
conversion, i.e. if it is save to unconditionally change all tildes in
the path as suggested above. Does anybody have any experience wether
that is save on all platforms and TeX installations?

Personally I think it would make a lot of sense if the Bioconductor
check machines could include a version of RHOME/share/texmf in their
TeX input path ... that would also allow to use Rd.sty etc.

Otherwise most of what has been said in this thread is true: The full
path is inserted into the document by Sweave such that you donnot have
to copy something from RHOME to your tex installation every time you
install a new version of R.

On Unix it is easy: Put /usr/local/lib/R/share/texmf (or wherever you
typically install your default R) into your tex path and you are
done. On windows the normal R installation path contains the version
number, so this will fail. Hence I did the path thing in R as a
convenience for authors (and to make sure that R version and
Sweave.sty are consistent, but the .sty is pretty stable anyway).

Maybe the installer could/should create

	c:\programme\R\R-latest

as a link to the newest installed version?

Just a thought.

Best,
Fritz



From Beyerj at students.uni-marburg.de  Mon Aug 28 15:55:48 2006
From: Beyerj at students.uni-marburg.de (J=?ISO-8859-1?B?9g==?=rg Beyer)
Date: Mon, 28 Aug 2006 15:55:48 +0200
Subject: [Rd] S4 classes and objects -- fixed structure? No...
Message-ID: <C118C284.19D3%Beyerj@students.uni-marburg.de>

Hello.

Suppose you define a new S4-class, say
>  setClass("track", representation(x="numeric", y="numeric"))

Don't worry if you have a deja vu, it's from the help page.
Your new class is said to have a fixed structure: two slots, x, and y,
and that should apply to all objects you construct as members of that class.
>  tr <- new( "track" )

Now do the following:
>  tr[ "ping" ] <- "pong"
>  tr$bingo <- "bongo"
>  tr[[ "blaa" ]] <- c( 200, 300 )

Of course you can use the well known operators to access these "list entries
in a S4-class object":
>  tr[ "blaa" ]
>  etc. 

You see what can happen if you decide to do a bit stress testing. The
question is not whether my examples makes sense or not. The question is if
these examples should be possible at all.
I wonder which is true,
-- the theory (Chambers, 1998, p. 279ff; Venables and Ripley, 2000, p. 99ff:
"... All objects in a [S4] class must have the same structure. ..."; etc.)
-- or the actual implementation in R (see my example, which successfully
violates the design principles of the language)

Bug, or feature? Any clarifications are appreciated -- it may be my
half-cooked knowledge that I find this confusing and dangerous.

Best 

Joerg Beyer

P.S.: 
Oh, the specs: PowerMac G4/400 PCI -- 1GB RAM -- Mac OS X 10.4.6 -- R 2.2.1



From ggrothendieck at gmail.com  Mon Aug 28 16:08:53 2006
From: ggrothendieck at gmail.com (Gabor Grothendieck)
Date: Mon, 28 Aug 2006 10:08:53 -0400
Subject: [Rd] S4 classes and objects -- fixed structure? No...
In-Reply-To: <C118C284.19D3%Beyerj@students.uni-marburg.de>
References: <C118C284.19D3%Beyerj@students.uni-marburg.de>
Message-ID: <971536df0608280708w3580b855nf76b45b0807931ae@mail.gmail.com>

Under R 2.3.1 these work as you indicate but under R 2.4.0
they all give errors:

>  setClass("track", representation(x="numeric", y="numeric"))
[1] "track"
>  tr <- new( "track" )
>  tr[ "ping" ] <- "pong"
Error in "[<-"(`*tmp*`, "ping", value = "pong") :
        object is not subsettable
>  tr$bingo <- "bongo"
Error: cannot coerce type S4 to list vector
In addition: Warning message:
Coercing LHS to a list
>  tr[[ "blaa" ]] <- c( 200, 300 )
Error in "[[<-"(`*tmp*`, "blaa", value = c(200, 300)) :
        object is not subsettable
>  tr[ "blaa" ]
Error in tr["blaa"] : object is not subsettable
> R.version.string
[1] "R version 2.4.0 Under development (unstable) (2006-08-08 r38825)"


On 8/28/06, J?rg Beyer <Beyerj at students.uni-marburg.de> wrote:
> Hello.
>
> Suppose you define a new S4-class, say
> >  setClass("track", representation(x="numeric", y="numeric"))
>
> Don't worry if you have a deja vu, it's from the help page.
> Your new class is said to have a fixed structure: two slots, x, and y,
> and that should apply to all objects you construct as members of that class.
> >  tr <- new( "track" )
>
> Now do the following:
> >  tr[ "ping" ] <- "pong"
> >  tr$bingo <- "bongo"
> >  tr[[ "blaa" ]] <- c( 200, 300 )
>
> Of course you can use the well known operators to access these "list entries
> in a S4-class object":
> >  tr[ "blaa" ]
> >  etc.
>
> You see what can happen if you decide to do a bit stress testing. The
> question is not whether my examples makes sense or not. The question is if
> these examples should be possible at all.
> I wonder which is true,
> -- the theory (Chambers, 1998, p. 279ff; Venables and Ripley, 2000, p. 99ff:
> "... All objects in a [S4] class must have the same structure. ..."; etc.)
> -- or the actual implementation in R (see my example, which successfully
> violates the design principles of the language)
>
> Bug, or feature? Any clarifications are appreciated -- it may be my
> half-cooked knowledge that I find this confusing and dangerous.
>
> Best
>
> Joerg Beyer
>
> P.S.:
> Oh, the specs: PowerMac G4/400 PCI -- 1GB RAM -- Mac OS X 10.4.6 -- R 2.2.1
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>



From ripley at stats.ox.ac.uk  Mon Aug 28 16:10:21 2006
From: ripley at stats.ox.ac.uk (Prof Brian Ripley)
Date: Mon, 28 Aug 2006 15:10:21 +0100 (BST)
Subject: [Rd] [Bioc-devel] Sweave windows style path (was Re: texmf
 error on 7 packages on devel winXP build nodes)
In-Reply-To: <17650.61626.320652.905103@galadriel.ci.tuwien.ac.at>
References: <6.2.5.6.1.20060827184815.02173e80@wehi.edu.au>
	<6phzmdqdyqb.fsf@gopher4.fhcrc.org>
	<17650.61626.320652.905103@galadriel.ci.tuwien.ac.at>
Message-ID: <Pine.LNX.4.64.0608281501200.652@gannet.stats.ox.ac.uk>

> Maybe the installer could/should create
>
>       c:\programme\R\R-latest
>
> as a link to the newest installed version?

Not on an OS without links ....

I think having the correct TeX path is the user's responsibility, and 
suggest Sweave stops trying to be helpful.  There is no guarantee that the 
path you find will be a valid TeX string on any OS (there are plenty of 
possible exceptions on a Unix-alike, so it is not a Windows-specific 
problem).

-- 
Brian D. Ripley,                  ripley at stats.ox.ac.uk
Professor of Applied Statistics,  http://www.stats.ox.ac.uk/~ripley/
University of Oxford,             Tel:  +44 1865 272861 (self)
1 South Parks Road,                     +44 1865 272866 (PA)
Oxford OX1 3TG, UK                Fax:  +44 1865 272595



From rdpeng at gmail.com  Mon Aug 28 16:13:29 2006
From: rdpeng at gmail.com (Roger D. Peng)
Date: Mon, 28 Aug 2006 10:13:29 -0400
Subject: [Rd] S4 classes and objects -- fixed structure? No...
In-Reply-To: <C118C284.19D3%Beyerj@students.uni-marburg.de>
References: <C118C284.19D3%Beyerj@students.uni-marburg.de>
Message-ID: <44F2FA09.4020703@gmail.com>

I think you're right---this shouldn't happen in theory, but it does because of 
the internal representation of S4 objects in R.

In R devel (to be 2.4.0), this changes and I believe your example will no longer 
work.

-roger

J?rg Beyer wrote:
> Hello.
> 
> Suppose you define a new S4-class, say
>>  setClass("track", representation(x="numeric", y="numeric"))
> 
> Don't worry if you have a deja vu, it's from the help page.
> Your new class is said to have a fixed structure: two slots, x, and y,
> and that should apply to all objects you construct as members of that class.
>>  tr <- new( "track" )
> 
> Now do the following:
>>  tr[ "ping" ] <- "pong"
>>  tr$bingo <- "bongo"
>>  tr[[ "blaa" ]] <- c( 200, 300 )
> 
> Of course you can use the well known operators to access these "list entries
> in a S4-class object":
>>  tr[ "blaa" ]
>>  etc. 
> 
> You see what can happen if you decide to do a bit stress testing. The
> question is not whether my examples makes sense or not. The question is if
> these examples should be possible at all.
> I wonder which is true,
> -- the theory (Chambers, 1998, p. 279ff; Venables and Ripley, 2000, p. 99ff:
> "... All objects in a [S4] class must have the same structure. ..."; etc.)
> -- or the actual implementation in R (see my example, which successfully
> violates the design principles of the language)
> 
> Bug, or feature? Any clarifications are appreciated -- it may be my
> half-cooked knowledge that I find this confusing and dangerous.
> 
> Best 
> 
> Joerg Beyer
> 
> P.S.: 
> Oh, the specs: PowerMac G4/400 PCI -- 1GB RAM -- Mac OS X 10.4.6 -- R 2.2.1
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
> 

-- 
Roger D. Peng  |  http://www.biostat.jhsph.edu/~rpeng/



From martin.becker at mx.uni-saarland.de  Mon Aug 28 16:23:52 2006
From: martin.becker at mx.uni-saarland.de (Martin Becker)
Date: Mon, 28 Aug 2006 16:23:52 +0200
Subject: [Rd] Speed of runif() on different Operating Systems
Message-ID: <44F2FC78.3040106@mx.uni-saarland.de>

Dear list,

I have noticed surprisingly big performance differences of runif() 
between Windows XP and (Debian) linux on similar CPUs (Pentium D 3.0GHz 
(WinXP)/3.2GHz (Linux)) and I wonder if there is a simple explanation 
for the difference.
On a linux system (with a slightly better CPU and 1GB more RAM), 
execution of runif() seems to consume about 80% more CPU time than on a 
Windows XP system.
On a Xeon 2.7GHz (Debian) linux I have checked, that using the .deb - 
i386 - Version of R instead of a self-build i686 - version has no 
noticeable effect on speed.
Measuring CPU time with Rprof() instead of Sys.time()-differences yields 
similar results.

Any hint is appreciated, please let me know, if the given information on 
system/OS or the R output below is not sufficient.

Regards,

  Martin Becker

------------------------ R - Output  below ------------------------

Windows XP: (Pentium D, 3.0 GHz)

 > version
               _                        
platform       i386-pc-mingw32          
arch           i386                     
os             mingw32                  
system         i386, mingw32            
status                                  
major          2                        
minor          3.1                      
year           2006                     
month          06                       
day            01                       
svn rev        38247                    
language       R                        
version.string Version 2.3.1 (2006-06-01)
 > RNGkind()
[1] "Mersenne-Twister" "Inversion"      
 > t1<-Sys.time();for (i in 1:500) ttt<-runif(1000000);print(Sys.time()-t1);
Time difference of 57.969 secs
 >

Debian Linux: (Pentium D, 3.2GHz)

 > version
               _                        
platform       i686-pc-linux-gnu        
arch           i686                     
os             linux-gnu                
system         i686, linux-gnu          
status                                  
major          2                        
minor          3.1                      
year           2006                     
month          06                       
day            01                       
svn rev        38247                    
language       R                        
version.string Version 2.3.1 (2006-06-01)
 > RNGkind()
[1] "Mersenne-Twister" "Inversion"      
 > t1<-Sys.time();for (i in 1:500) 
ttt<-runif(1000000);print(Sys.time()-t1);    
Time difference of 1.752916 mins
 >



From Beyerj at students.uni-marburg.de  Mon Aug 28 16:26:31 2006
From: Beyerj at students.uni-marburg.de (J=?ISO-8859-1?B?9g==?=rg Beyer)
Date: Mon, 28 Aug 2006 16:26:31 +0200
Subject: [Rd] S4 classes and objects -- fixed structure? No...
In-Reply-To: <971536df0608280708w3580b855nf76b45b0807931ae@mail.gmail.com>
Message-ID: <C118C9B7.19D9%Beyerj@students.uni-marburg.de>

Gabor, Roger, 

thanks a lot for your immediate answers.
Knowing that this is subject to change means a lot less coding for me :-)
Good news ... for me, and first of all for the impressing S4 system.

Thanks again

Joerg



Am 28.08.2006 16:08 Uhr schrieb Gabor Grothendieck
(<ggrothendieck at gmail.com>):

> Under R 2.3.1 these work as you indicate but under R 2.4.0
> they all give errors:
> 
>>  setClass("track", representation(x="numeric", y="numeric"))
> [1] "track"
>>  tr <- new( "track" )
>>  tr[ "ping" ] <- "pong"
> Error in "[<-"(`*tmp*`, "ping", value = "pong") :
>         object is not subsettable
>>  tr$bingo <- "bongo"
> Error: cannot coerce type S4 to list vector
> In addition: Warning message:
> Coercing LHS to a list
>>  tr[[ "blaa" ]] <- c( 200, 300 )
> Error in "[[<-"(`*tmp*`, "blaa", value = c(200, 300)) :
>         object is not subsettable
>>  tr[ "blaa" ]
> Error in tr["blaa"] : object is not subsettable
>> R.version.string
> [1] "R version 2.4.0 Under development (unstable) (2006-08-08 r38825)"
> 
> 
> On 8/28/06, J?rg Beyer <Beyerj at students.uni-marburg.de> wrote:
>> Hello.
>> 
>> Suppose you define a new S4-class, say
>>>  setClass("track", representation(x="numeric", y="numeric"))
>> 
>> Don't worry if you have a deja vu, it's from the help page.
>> Your new class is said to have a fixed structure: two slots, x, and y,
>> and that should apply to all objects you construct as members of that class.
>>>  tr <- new( "track" )
>> 
>> Now do the following:
>>>  tr[ "ping" ] <- "pong"
>>>  tr$bingo <- "bongo"
>>>  tr[[ "blaa" ]] <- c( 200, 300 )
>> 
>> Of course you can use the well known operators to access these "list entries
>> in a S4-class object":
>>>  tr[ "blaa" ]
>>>  etc.
>> 
>> You see what can happen if you decide to do a bit stress testing. The
>> question is not whether my examples makes sense or not. The question is if
>> these examples should be possible at all.
>> I wonder which is true,
>> -- the theory (Chambers, 1998, p. 279ff; Venables and Ripley, 2000, p. 99ff:
>> "... All objects in a [S4] class must have the same structure. ..."; etc.)
>> -- or the actual implementation in R (see my example, which successfully
>> violates the design principles of the language)
>> 
>> Bug, or feature? Any clarifications are appreciated -- it may be my
>> half-cooked knowledge that I find this confusing and dangerous.
>> 
>> Best
>> 
>> Joerg Beyer
>> 
>> P.S.:
>> Oh, the specs: PowerMac G4/400 PCI -- 1GB RAM -- Mac OS X 10.4.6 -- R 2.2.1
>> 
>> ______________________________________________
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>



From Roy.Mendelssohn at noaa.gov  Mon Aug 28 17:02:23 2006
From: Roy.Mendelssohn at noaa.gov (Roy Mendelssohn)
Date: Mon, 28 Aug 2006 08:02:23 -0700
Subject: [Rd] Adding OPeNDAP to the ncdf package on windows
Message-ID: <p06230901c118b5deca29@[161.55.17.194]>

Hi:

Russ Moffit of our Honolulu Lab has made a modification to the R 
netcdf package  'ncdf' so that it can access remote netcdf files 
using OPenDAP  (http://www.opendap.org). The package works on Linux, 
and with help from Don MacQueen was also ported to Macintosh OS X.

We have had a lot of demand for this to be ported to Windows also, 
but it is beyond our capabilities. If there is anyone willing to try 
and port  this to Windows,  I can provide existing code and get them 
in touch with the people who did the Linux and Macintosh ports.

If someone is willing to give this a stab and get it to work - they 
will surely be blessed many times over and go to heaven!  Seriously, 
we just had a course on the use of satellite data in Fisheries, and 
there was a large demand for this.

TIA,

-Roy M.
-- 
**********************
"The contents of this message do not reflect any position of the U.S. 
Government or NOAA."
**********************
Roy Mendelssohn
Supervisory Operations Research Analyst
NOAA/NMFS
Environmental Research Division
Southwest Fisheries Science Center
1352 Lighthouse Avenue
Pacific Grove, CA 93950-2097

e-mail: Roy.Mendelssohn at noaa.gov (Note new e-mail address)
voice: (831)-648-9029
fax: (831)-648-8440
www: http://www.pfeg.noaa.gov/

"Old age and treachery will overcome youth and skill."



From ggrothendieck at gmail.com  Mon Aug 28 17:19:08 2006
From: ggrothendieck at gmail.com (Gabor Grothendieck)
Date: Mon, 28 Aug 2006 11:19:08 -0400
Subject: [Rd] [Bioc-devel] Sweave windows style path (was Re: texmf
	error on 7 packages on devel winXP build nodes)
In-Reply-To: <17650.61626.320652.905103@galadriel.ci.tuwien.ac.at>
References: <6.2.5.6.1.20060827184815.02173e80@wehi.edu.au>
	<6phzmdqdyqb.fsf@gopher4.fhcrc.org>
	<17650.61626.320652.905103@galadriel.ci.tuwien.ac.at>
Message-ID: <971536df0608280819g14f49121m652d97e280514535@mail.gmail.com>

Have a look at Rfind.bat in

   http://cran.r-project.org/contrib/extra/batchfiles/

which uses the registry to find various software used by R.

On 8/28/06, Friedrich Leisch <Friedrich.Leisch at stat.uni-muenchen.de> wrote:
> >>>>> On Sun, 27 Aug 2006 07:45:00 -0700,
> >>>>> Martin Morgan (MM) wrote:
>
>  > [A build system misconfiguration at Bioconductor lead to a discussion
>  > about whether \usepackage{Sweave} should be included in .Rnw
>  > documents. Leaving this line out causes a problem on Windows, as
>  > indicated below.]
>
>  > I think the problem is '~', which should, according to Donald
>  > Arseneau's comment in this thread
>
>  > http://groups.google.com/group/comp.text.tex/browse_thread/thread/640e89078d0697c4/5b6f9fc6b0da21bf?lnk=gst&q=windows+file+path&rnum=4#5b6f9fc6b0da21bf
>
>  > be \string~. If this is the correct change, perhaps an upstream fix
>  > could be introduced in src/library/util/R/Sweave.R.
>
> Sorry to join in late, I am currently at a conference with limited
> access to the Internet. I am not su sure how easy it is to make the
> conversion, i.e. if it is save to unconditionally change all tildes in
> the path as suggested above. Does anybody have any experience wether
> that is save on all platforms and TeX installations?
>
> Personally I think it would make a lot of sense if the Bioconductor
> check machines could include a version of RHOME/share/texmf in their
> TeX input path ... that would also allow to use Rd.sty etc.
>
> Otherwise most of what has been said in this thread is true: The full
> path is inserted into the document by Sweave such that you donnot have
> to copy something from RHOME to your tex installation every time you
> install a new version of R.
>
> On Unix it is easy: Put /usr/local/lib/R/share/texmf (or wherever you
> typically install your default R) into your tex path and you are
> done. On windows the normal R installation path contains the version
> number, so this will fail. Hence I did the path thing in R as a
> convenience for authors (and to make sure that R version and
> Sweave.sty are consistent, but the .sty is pretty stable anyway).
>
> Maybe the installer could/should create
>
>        c:\programme\R\R-latest
>
> as a link to the newest installed version?
>
> Just a thought.
>
> Best,
> Fritz
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>



From dave at kanecap.com  Mon Aug 28 17:48:47 2006
From: dave at kanecap.com (David Kane)
Date: Mon, 28 Aug 2006 11:48:47 -0400
Subject: [Rd] Affiliation Reporting Standards. was: Re: reshape scaling with
	large numbers of times/rows
In-Reply-To: <Pine.LNX.4.64.0608240959560.3740@gannet.stats.ox.ac.uk>
References: <Pine.LNX.4.64.0608240959560.3740@gannet.stats.ox.ac.uk>
Message-ID: <17651.4191.973934.639033@gargle.gargle.HOWL>

After a question on R, Prof Brian Ripley writes:
 > However, you did not give your affiliation and I do not like giving free 
 > consultancy to undisclosed commercial organizations.  Please in future use 
 > a proper signature block so that helpers are aware of your provenance.

I have one question and one comment.

Question: Are there specific standards about this for R mailing lists?
I could not find any. I don't think that there should be because, in
the context of a mailing list question (as opposed to a personal
e-mail), the person's "affiliation" does not strike me as relevant
(although Professor Ripley is free to use whatever criteria he likes
for deciding which questions he answers).

Comment: Does it make much sense to harp on a "commercial" versus
non-commercial motivation in the context of an R mailing list? I think
it makes no sense. I (like many other R users) have both commercial
and university affiliations. Are mailing list participants more
willing to answer my questions if I sign them:

-- 
David Kane
CEO
Kane Capital Management

versus

--
David Kane
Institute Fellow at IQSS
Harvard University

Moreover, just because I sign a message with a university signature
does not mean that I am using the information for academic research
just as a commercial signature does not imply the opposite. My
colleagues and I have asked many questions --- and thanks for all the
great answers! --- relating to out portfolio package, now
open-sourced.

This is also true of "full-time" academics, many of whom do extensive
consulting. Just because an academic asks a question does not mean
that the answer won't be used solely for an "undisclosed commercial
organizations," or should such questions be openly labelled as such?

Perhaps I am missing something. But the
current-standard-as-I-understand-it (use whatever signature you like)
seems perfectly fine. If R-core wants a different standard, I would,
of course, comply.

Dave

--
Dave Kane
Whatever-Affiliation-You-Want-Here



From ggrothendieck at gmail.com  Mon Aug 28 17:54:35 2006
From: ggrothendieck at gmail.com (Gabor Grothendieck)
Date: Mon, 28 Aug 2006 11:54:35 -0400
Subject: [Rd] Affiliation Reporting Standards. was: Re: reshape scaling
	with large numbers of times/rows
In-Reply-To: <17651.4191.973934.639033@gargle.gargle.HOWL>
References: <Pine.LNX.4.64.0608240959560.3740@gannet.stats.ox.ac.uk>
	<17651.4191.973934.639033@gargle.gargle.HOWL>
Message-ID: <971536df0608280854k62d5be6ap78da988632a2d930@mail.gmail.com>

I don't think you owe anyone any explanations or descriptions of
yourself.  The only thing you really need to provide is a good description
of any problem you post as discussed on the r-help posting
guide and as discussed in the single line at the bottom of every
r-help message.

On 8/28/06, David Kane <dave at kanecap.com> wrote:
> After a question on R, Prof Brian Ripley writes:
>  > However, you did not give your affiliation and I do not like giving free
>  > consultancy to undisclosed commercial organizations.  Please in future use
>  > a proper signature block so that helpers are aware of your provenance.
>
> I have one question and one comment.
>
> Question: Are there specific standards about this for R mailing lists?
> I could not find any. I don't think that there should be because, in
> the context of a mailing list question (as opposed to a personal
> e-mail), the person's "affiliation" does not strike me as relevant
> (although Professor Ripley is free to use whatever criteria he likes
> for deciding which questions he answers).
>
> Comment: Does it make much sense to harp on a "commercial" versus
> non-commercial motivation in the context of an R mailing list? I think
> it makes no sense. I (like many other R users) have both commercial
> and university affiliations. Are mailing list participants more
> willing to answer my questions if I sign them:
>
> --
> David Kane
> CEO
> Kane Capital Management
>
> versus
>
> --
> David Kane
> Institute Fellow at IQSS
> Harvard University
>
> Moreover, just because I sign a message with a university signature
> does not mean that I am using the information for academic research
> just as a commercial signature does not imply the opposite. My
> colleagues and I have asked many questions --- and thanks for all the
> great answers! --- relating to out portfolio package, now
> open-sourced.
>
> This is also true of "full-time" academics, many of whom do extensive
> consulting. Just because an academic asks a question does not mean
> that the answer won't be used solely for an "undisclosed commercial
> organizations," or should such questions be openly labelled as such?
>
> Perhaps I am missing something. But the
> current-standard-as-I-understand-it (use whatever signature you like)
> seems perfectly fine. If R-core wants a different standard, I would,
> of course, comply.
>
> Dave
>
> --
> Dave Kane
> Whatever-Affiliation-You-Want-Here
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>



From InternetGateway1 at firmenich.com  Mon Aug 28 18:43:14 2006
From: InternetGateway1 at firmenich.com (InternetGateway1 at firmenich.com)
Date: Mon, 28 Aug 2006 18:43:14 +0200 (MEST)
Subject: [Rd] [WARNING: VIRUS REMOVED]Mail System Error - Returned Mail >>
 Message Rejected: Unauthorized File(s) (Exec) <<
Message-ID: <20060828164020.48D5F2D0940@GVA3016.firmenich.com>

<<< This is a computer generated message >>>
<<< Please do not reply to this address  >>>

-----------------------------------------------------------
>From :  r-devel at stat.math.ethz.ch
To   : yonogoasakti at firmenich.com

Date : Mon, 28 Aug 2006 09:30:49 -0700
-----------------------------------------------------------

We're sorry ! Your email message has been prevented from reaching its intended recipient(s). Firmenich uses an email security system and policies that blocks all unauthorized files. If your email is business related and was rejected in error, please contact your addressee.
Your message and its attachment(s) have been blocked due to a potential security issue.

Reason : This mail message contains unauthorized file(s).

Please use Firmenich E-Mail for Business purposes only !

Area : InternetGateway1 at firmenich.com - Block Executable (T7a62806dd0996c4094db4)
Detected : Scenarios/Block Executable Extension: A filename matching the file mask was detected: 'firmenich.com.zip'.


Modified : 

Removed Attachments :



From smckinney at bccrc.ca  Tue Aug 29 00:45:57 2006
From: smckinney at bccrc.ca (Steven McKinney)
Date: Mon, 28 Aug 2006 15:45:57 -0700
Subject: [Rd] Bug/problem reporting: Possible to modify posting guide FAQ?
Message-ID: <0BE438149FF2254DB4199E2682C8DFEB01D55528@crcmail1.BCCRC.CA>


If users post a bug or problem issue to an R-based news group
(R-devel, R-help, BioC - though BioC is far more forgiving)
they get yelled at for not reading the posting guide
and FAQ.

"Please *_do_* read the FAQ, the posting guide, ..."
the yellers do say.  So I read the BioC FAQ and it says...

http://www.bioconductor.org/docs/faq/

    "Bug reports on packages should perhaps be sent to the 
     package maintainer rather than to r-bugs."


So I send email to a maintainer, who I believe rightly points out

   "best to send this kind of questions to the bioc mailing list, rather
    than to myself privately, because other people might (a) also have
    answers or (b) benefit from the questions & answers."

Could the FAQ possibly be revised to some sensible combination
that generates less finger pointing, such as

   "Bug reports on packages should be sent to the Bioconductor mailing list, 
    and sent or copied to the package maintainer, rather than to r-bugs."

or

   "Bug reports on packages should be sent to the package maintainer, 
    and copied to the Bioconductor mailing list, rather than to r-bugs."


Could the posting guides to R-help and R-devel do something
similar?


Sign me
<Tired of all the finger pointing>


http://www.r-project.org/posting-guide.html

 "If the question relates to a contributed package , e.g., one downloaded 
  from CRAN, try contacting the package maintainer first. You can also 
  use find("functionname") and packageDescription("packagename") to 
  find this information. Only send such questions to R-help or R-devel if 
  you get no reply or need further assistance. This applies to both 
  requests for help and to bug reports."


How about

If the question relates to a contributed package , e.g., one downloaded 
from CRAN, email the list and be sure to additionally send to or copy to 
the package maintainer as well. You can use find("functionname") 
and packageDescription("packagename") to find this information. 
Only send such questions to one of R-help or R-devel. This applies to both 
requests for help and to bug reports.



From rgentlem at fhcrc.org  Tue Aug 29 01:57:55 2006
From: rgentlem at fhcrc.org (Robert Gentleman)
Date: Mon, 28 Aug 2006 16:57:55 -0700
Subject: [Rd] [R] Bug/problem reporting: Possible to modify posting
 guide FAQ?
In-Reply-To: <0BE438149FF2254DB4199E2682C8DFEB01D55528@crcmail1.BCCRC.CA>
References: <0BE438149FF2254DB4199E2682C8DFEB01D55528@crcmail1.BCCRC.CA>
Message-ID: <44F38303.50105@fhcrc.org>

Hi,
   I guess the question often comes down to whether it is a bug report, 
or a question. If you know it is a bug, and have a complete and correct 
example where the obviously incorrect behavior occurs and you are 
positive that the problem is the package then sending it to the 
maintainer is appropriate.  When I get these I try to deal with them. 
Real bug reports that go to the mailing list may be missed so in my 
opinion it would be best to cc the maintainer and we will amend the FAQ 
in that direction. If instead you are asking a question, of the form, is 
this a bug, or why is this happening, then for BioC at least, it is 
better to post directly to the list, as there are many folks who can 
help and you are more likely to get an answer.  When I get one of these 
emails I always refer the person to the mailing lists.  I see little 
problem with being redirected by a maintainer to the mailing list if 
they feel that the question is better asked there.

Bioconductor is different from R, clearly our mailing list has to be 
more about the constituent packages, since we will direct questions 
about R to the appropriate R mailing lists.  R mailing lists tend to be 
about R, so asking about a specific package there (among the 1000 or so) 
often does not get you very far, but sometimes it does.


  best wishes
    Robert


Steven McKinney wrote:
> If users post a bug or problem issue to an R-based news group
> (R-devel, R-help, BioC - though BioC is far more forgiving)
> they get yelled at for not reading the posting guide
> and FAQ.
> 
> "Please *_do_* read the FAQ, the posting guide, ..."
> the yellers do say.  So I read the BioC FAQ and it says...
> 
> http://www.bioconductor.org/docs/faq/
> 
>     "Bug reports on packages should perhaps be sent to the 
>      package maintainer rather than to r-bugs."
> 
> 
> So I send email to a maintainer, who I believe rightly points out
> 
>    "best to send this kind of questions to the bioc mailing list, rather
>     than to myself privately, because other people might (a) also have
>     answers or (b) benefit from the questions & answers."
> 
> Could the FAQ possibly be revised to some sensible combination
> that generates less finger pointing, such as
> 
>    "Bug reports on packages should be sent to the Bioconductor mailing list, 
>     and sent or copied to the package maintainer, rather than to r-bugs."
> 
> or
> 
>    "Bug reports on packages should be sent to the package maintainer, 
>     and copied to the Bioconductor mailing list, rather than to r-bugs."
> 
> 
> Could the posting guides to R-help and R-devel do something
> similar?
> 
> 
> Sign me
> <Tired of all the finger pointing>
> 
> 
> http://www.r-project.org/posting-guide.html
> 
>  "If the question relates to a contributed package , e.g., one downloaded 
>   from CRAN, try contacting the package maintainer first. You can also 
>   use find("functionname") and packageDescription("packagename") to 
>   find this information. Only send such questions to R-help or R-devel if 
>   you get no reply or need further assistance. This applies to both 
>   requests for help and to bug reports."
> 
> 
> How about
> 
> If the question relates to a contributed package , e.g., one downloaded 
> from CRAN, email the list and be sure to additionally send to or copy to 
> the package maintainer as well. You can use find("functionname") 
> and packageDescription("packagename") to find this information. 
> Only send such questions to one of R-help or R-devel. This applies to both 
> requests for help and to bug reports.
> 
> ______________________________________________
> R-help at stat.math.ethz.ch mailing list
> https://stat.ethz.ch/mailman/listinfo/r-help
> PLEASE do read the posting guide http://www.R-project.org/posting-guide.html
> and provide commented, minimal, self-contained, reproducible code.
> 

-- 
Robert Gentleman, PhD
Program in Computational Biology
Division of Public Health Sciences
Fred Hutchinson Cancer Research Center
1100 Fairview Ave. N, M2-B876
PO Box 19024
Seattle, Washington 98109-1024
206-667-7700
rgentlem at fhcrc.org



From sfalcon at fhcrc.org  Tue Aug 29 02:42:39 2006
From: sfalcon at fhcrc.org (Seth Falcon)
Date: Mon, 28 Aug 2006 17:42:39 -0700
Subject: [Rd] PATCH: Add fields argument to installed.packages and
	available.packages
Message-ID: <m2wt8sgyo0.fsf@ziti.fhcrc.org>

Hi all,

The write_PACKAGES function has a 'fields' argument that allows a user
generating a PACKAGES file to specify additional fields to include.
For symmetry, it would be nice for the available.packages function to
be able to read those extra fields when specified.

Similarly, it would be useful for installed.packages to have a
'fields' argument.  This would allow a user to query the set of
installed packages for other fields in the DESCRIPTION file.

One use for this would be for repository hosters to include the
License field in their PACKAGES file.  In this way, end users could
query a repository and only download packages that they have a license
to use.

Below is a patch against svn 38996 that attempts to implement this.

+ seth


Index: src/library/utils/R/packages.R
===================================================================
--- src/library/utils/R/packages.R	(revision 38996)
+++ src/library/utils/R/packages.R	(working copy)
@@ -1,5 +1,6 @@
 available.packages <-
-    function(contriburl = contrib.url(getOption("repos")), method)
+    function(contriburl = contrib.url(getOption("repos")), method,
+             fields = NULL)
 {
     .checkRversion <- function(x) {
         if(is.na(xx <- x["Depends"])) return(TRUE)
@@ -9,10 +10,14 @@
         else TRUE
     }
 
-    flds <- c("Package", "Version", "Priority", "Bundle",
-              "Depends", "Imports", "Suggests", "Contains")
-    res <- matrix(as.character(NA), 0, length(flds) + 1)
-    colnames(res) <- c(flds, "Repository")
+    requiredFields <- c("Package", "Version", "Priority", "Bundle",
+                        "Depends", "Imports", "Suggests", "Contains")
+    if (!is.null(fields) && is.character(fields))
+      fields <- unique(c(requiredFields, fields))
+    else
+      fields <- requiredFields
+    res <- matrix(as.character(NA), 0, length(fields) + 1)
+    colnames(res) <- c(fields, "Repository")
     for(repos in contriburl) {
         localcran <- length(grep("^file:", repos)) > 0
         if(localcran) {
@@ -23,7 +28,7 @@
                 if(length(grep("[A-Za-z]:", tmpf)))
                     tmpf <- substring(tmpf, 2)
             }
-            res0 <- read.dcf(file = tmpf, fields = flds)
+            res0 <- read.dcf(file = tmpf)
             if(length(res0)) rownames(res0) <- res0[, "Package"]
         } else {
             dest <- file.path(tempdir(),
@@ -57,7 +62,7 @@
                             call. = FALSE, immediate. = TRUE, domain = NA)
                     next
                 }
-                res0 <- read.dcf(file = tmpf, fields = flds)
+                res0 <- read.dcf(file = tmpf)
                 if(length(res0)) rownames(res0) <- res0[, "Package"]
                 .saveRDS(res0, dest, compress = TRUE)
                 unlink(tmpf)
@@ -65,7 +70,14 @@
             } # end of download vs cached
         } # end of localcran vs online
         if (length(res0)) {
-            res0 <- cbind(res0, Repository = repos)
+            missingFields <- fields[!(fields %in% colnames(res0))]
+            if (length(missingFields)) {
+                toadd <- matrix(as.character(NA), nrow=nrow(res0),
+                                ncol=length(missingFields),
+                                dimnames=list(NULL, missingFields))
+                res0 <- cbind(res0, toadd)
+            }
+            res0 <- cbind(res0[, fields], Repository = repos)
             res <- rbind(res, res0)
         }
     }
@@ -307,22 +319,29 @@
 }
 
 installed.packages <-
-    function(lib.loc = NULL, priority = NULL,  noCache = FALSE)
+    function(lib.loc = NULL, priority = NULL,  noCache = FALSE,
+             fields = NULL)
 {
     if(is.null(lib.loc))
         lib.loc <- .libPaths()
-    pkgFlds <- c("Version", "Priority", "Bundle", "Contains", "Depends",
-                 "Suggests", "Imports", "Built")
     if(!is.null(priority)) {
         if(!is.character(priority))
             stop("'priority' must be character or NULL")
         if(any(b <- priority %in% "high"))
             priority <- c(priority[!b], "recommended","base")
     }
-    retval <- matrix("", 0, 2+length(pkgFlds))
+    requiredFields <- c("Version", "Priority", "Bundle", "Contains",
+                        "Depends", "Suggests", "Imports", "Built")
+    if (!is.null(fields) && is.character(fields))
+      fields <- unique(c(requiredFields, fields))
+    else
+      fields <- requiredFields
+    retval <- matrix("", 0, 2+length(fields))
     for(lib in lib.loc) {
         dest <- file.path(tempdir(),
-                          paste("libloc_", URLencode(lib, TRUE), ".rds",
+                          paste("libloc_", URLencode(lib, TRUE),
+                                paste(fields, collapse=","),
+                                ".rds",
                                 sep=""))
         if(!noCache && file.exists(dest) &&
             file.info(dest)$mtime > file.info(lib.loc)$mtime) {
@@ -332,12 +351,12 @@
             ## this excludes packages without DESCRIPTION files
             pkgs <- .packages(all.available = TRUE, lib.loc = lib)
             for(p in pkgs){
-                desc <- packageDescription(p, lib = lib, fields = pkgFlds,
+                desc <- packageDescription(p, lib = lib, fields = fields,
                                            encoding = NA)
                 ## this gives NA if the package has no Version field
                 if (is.logical(desc)) {
-                    desc <- rep(as.character(NA), length(pkgFlds))
-                    names(desc) <- pkgFlds
+                    desc <- rep(as.character(NA), length(fields))
+                    names(desc) <- fields
                 } else {
                     desc <- unlist(desc)
                     Rver <- strsplit(strsplit(desc["Built"], ";")[[1]][1],
@@ -352,7 +371,7 @@
             }
         }
     }
-    colnames(retval) <- c("Package", "LibPath", pkgFlds)
+    colnames(retval) <- c("Package", "LibPath", fields)
     if(length(retval) && !is.null(priority)) {
         keep <- !is.na(pmatch(retval[,"Priority"], priority,
                               duplicates.ok = TRUE))
Index: src/library/utils/man/installed.packages.Rd
===================================================================
--- src/library/utils/man/installed.packages.Rd	(revision 38996)
+++ src/library/utils/man/installed.packages.Rd	(working copy)
@@ -7,7 +7,7 @@
 }
 \usage{
 installed.packages(lib.loc = NULL, priority = NULL,
-                   noCache = FALSE)
+                   noCache = FALSE, fields = NULL)
 }
 \arguments{
   \item{lib.loc}{
@@ -21,6 +21,11 @@
     assigned priority use \code{priority = "NA"}.
   }
   \item{noCache}{Do not use cached information.}
+
+  \item{fields}{a character vector giving the fields to extract from
+    each package's \code{DESCRIPTION} file in addition to the default
+    ones, or \code{NULL} (default).  Unavailable fields result in
+    \code{NA} values.}
 }
 \details{
   \code{installed.packages} scans the \file{DESCRIPTION} files of each
@@ -31,18 +36,21 @@
   for versioned installs with the name under which the package is
   installed, in the style \code{mypkg_1.3-7}.
 
-  The information found is cached (by library) for the \R session,
-  and updated only if the top-level library directory has been altered,
-  for example by installing or removing a package.  If the cached
-  information becomes confused, it can be refreshed by running
-  \code{installed.packages(noCache = TRUE)}.
+  The information found is cached (by library) for the \R session and
+  specified \code{fields} argument, and updated only if the top-level
+  library directory has been altered, for example by installing or
+  removing a package.  If the cached information becomes confused, it
+  can be refreshed by running \code{installed.packages(noCache =
+  TRUE)}.
 }
 \value{
   A matrix with one row per package, row names the package names and
   column names \code{"Package"}, \code{"LibPath"}, \code{"Version"},
-  \code{"Priority"}, \code{"Bundle"}, \code{"Contains"}, \code{"Depends"},
-  \code{"Suggests"}, \code{"Imports"} and \code{"Built"}
-  (the \R version the package was built under).
+  \code{"Priority"}, \code{"Bundle"}, \code{"Contains"},
+  \code{"Depends"}, \code{"Suggests"}, \code{"Imports"} and
+  \code{"Built"} (the \R version the package was built under).
+  Additional columns can be specified using the \code{fields}
+  argument.
 }
 \seealso{
   \code{\link{update.packages}}, \code{\link{INSTALL}}, \code{\link{REMOVE}}.
@@ -50,5 +58,6 @@
 \examples{
 str(ip <- installed.packages(priority = "high"))
 ip[, c(1,3:5)]
+plic <- installed.packages(priotiry = "high", fields="License")
 }
 \keyword{utilities}
Index: src/library/utils/man/update.packages.Rd
===================================================================
--- src/library/utils/man/update.packages.Rd	(revision 38996)
+++ src/library/utils/man/update.packages.Rd	(working copy)
@@ -20,7 +20,7 @@
                 type = getOption("pkgType"))
 
 available.packages(contriburl = contrib.url(getOption("repos")),
-                   method)
+                   method, fields = NULL)
 
 old.packages(lib.loc = NULL, repos = getOption("repos"),
              contriburl = contrib.url(repos),
@@ -157,7 +157,14 @@
     This is sometimes used to perform additional operations at the end
     of the package installation in addition to removing intermediate files.
   }
+  \item{fields}{a character vector giving the fields to extract from
+    the \code{PACKAGES} file(s) in addition to the default ones, or
+    \code{NULL} (default).  Unavailable fields result in \code{NA}
+    values.
+  }
 }
+
+}
 \details{
   All of these functions work with the names of a package or bundle (and
   not the component packages of a bundle, except for
@@ -252,7 +259,8 @@
   with one row per package/bundle, row names the package names and
   column names \code{"Package"}, \code{"Version"}, \code{"Priority"},
   \code{"Bundle"}, \code{"Depends"}, \code{"Imports"}, \code{"Suggests"}
-  \code{"Contains"} and \code{"Repository"}.
+  \code{"Contains"} and \code{"Repository"}.  Additional columns can
+  be specified using the \code{fields} argument.
 
   For \code{old.packages}, \code{NULL} or a matrix with one row per
   package/bundle, row names the package names and column names



From khansen at stat.Berkeley.EDU  Tue Aug 29 03:40:23 2006
From: khansen at stat.Berkeley.EDU (Kasper Daniel Hansen)
Date: Mon, 28 Aug 2006 18:40:23 -0700
Subject: [Rd] writeChar
Message-ID: <B383A048-EEB7-405F-8B2E-87B624FA7983@stat.berkeley.edu>

I have recently been using writeChar and writeBin to write binary  
files. These functions makes it very easy to write OS-independent  
files, which I am very happy with.

I have however found a few issues, best illustrated by a short example

 > con <- file("test", open = "wb")
 > writeChar(as.character(c("ab", "ab")), nchars = c(3), con = con,  
eos = "")
Warning message:
writeChar: more characters requested than are in the string - will  
zero-pad
 > close(con)
 > system("hexdump -Cv test")
00000000  61 62 00 00                                       |ab..|
00000004

As seen from this example, the fact that nchars is shorter than the  
character vector being written results in the remaining elements  
being skipped. Also, the nchars argument is not being recycled,  
something I find quite R-counter-intuitive. I would suggest  
recycling, although I am not sure how to best achieve this.

I also get a warning about zero-padding - even if I request more  
characters than present in the vector. This means that I get a  
warning if using the argument for "what is what meant for" (at least  
in my opinion). Right now I get many warnings when writing the binary  
files I am working with, which might be confusing to future users. I  
would suggest to only give a warning if requesting _less_ characters,  
since in that case R would truncate the argument.

Finally, having a NA or a negative number (not shown) in the nchars  
argument makes R crash, at least on two platforms:

 > con <- file("test", open = "wb")
 > writeChar(as.character(c("ab", "ab")), nchars = c(3, NA), con =  
con, eos = NULL)

*** caught bus error ***
address 0x2008000, cause 'invalid alignment'

This is reproducible using R-2.3.0 (patched) on 32bit Linux:

 > con <- file("test", open = "wb")
 > writeChar(as.character(c("ab", "ab")), nchars = c(3, NA), con =  
con, eos = NULL)

*** caught segfault ***
address 0x1a5c000, cause 'memory not mapped'
Segmentation fault

I have not tested it on R-devel, but the news file does not indicate  
any changes in writeChar.

Kasper



From ripley at stats.ox.ac.uk  Tue Aug 29 08:38:48 2006
From: ripley at stats.ox.ac.uk (Prof Brian Ripley)
Date: Tue, 29 Aug 2006 07:38:48 +0100 (BST)
Subject: [Rd] writeChar
In-Reply-To: <B383A048-EEB7-405F-8B2E-87B624FA7983@stat.berkeley.edu>
References: <B383A048-EEB7-405F-8B2E-87B624FA7983@stat.berkeley.edu>
Message-ID: <Pine.LNX.4.64.0608290721020.21232@gannet.stats.ox.ac.uk>

Given that if you specify the 'nchars' argument you are trying to do 
something unnatural, I don't see why you find it incorrect to get warnings 
about mismatches between what you supply and what you asked for, but 
expect one if what you supply matches what you asked for (and truncation 
occurs).  Originally it was an error to ask for more characters than were 
available, but Fritz Leisch persuaded us to allow this with a warning
(and that is precisely what the documentation says).  Since then we have 
added the raw type, and I would now say that if you want to do things 
involving nul bytes, you should be using the raw type instead.

R help normally tells you its recycling rules if there are any, and surely 
it is no hardship to supply an accurate version of 'nchars' using rep()?
Especially as almost all users are not going to be specifying 'nchars'?

I've added a stricter sanity check against incorrect specification of 
'nchars'.

On Mon, 28 Aug 2006, Kasper Daniel Hansen wrote:

> I have recently been using writeChar and writeBin to write binary  
> files. These functions makes it very easy to write OS-independent  
> files, which I am very happy with.
> 
> I have however found a few issues, best illustrated by a short example
> 
>  > con <- file("test", open = "wb")
>  > writeChar(as.character(c("ab", "ab")), nchars = c(3), con = con,  
> eos = "")
> Warning message:
> writeChar: more characters requested than are in the string - will  
> zero-pad
>  > close(con)
>  > system("hexdump -Cv test")
> 00000000  61 62 00 00                                       |ab..|
> 00000004
> 
> As seen from this example, the fact that nchars is shorter than the  
> character vector being written results in the remaining elements  
> being skipped. Also, the nchars argument is not being recycled,  
> something I find quite R-counter-intuitive. I would suggest  
> recycling, although I am not sure how to best achieve this.
> 
> I also get a warning about zero-padding - even if I request more  
> characters than present in the vector. This means that I get a  
> warning if using the argument for "what is what meant for" (at least  
> in my opinion). Right now I get many warnings when writing the binary  
> files I am working with, which might be confusing to future users. I  
> would suggest to only give a warning if requesting _less_ characters,  
> since in that case R would truncate the argument.
> 
> Finally, having a NA or a negative number (not shown) in the nchars  
> argument makes R crash, at least on two platforms:
> 
>  > con <- file("test", open = "wb")
>  > writeChar(as.character(c("ab", "ab")), nchars = c(3, NA), con =  
> con, eos = NULL)
> 
> *** caught bus error ***
> address 0x2008000, cause 'invalid alignment'
> 
> This is reproducible using R-2.3.0 (patched) on 32bit Linux:
> 
>  > con <- file("test", open = "wb")
>  > writeChar(as.character(c("ab", "ab")), nchars = c(3, NA), con =  
> con, eos = NULL)
> 
> *** caught segfault ***
> address 0x1a5c000, cause 'memory not mapped'
> Segmentation fault
> 
> I have not tested it on R-devel, but the news file does not indicate  
> any changes in writeChar.
> 
> Kasper
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
> 

-- 
Brian D. Ripley,                  ripley at stats.ox.ac.uk
Professor of Applied Statistics,  http://www.stats.ox.ac.uk/~ripley/
University of Oxford,             Tel:  +44 1865 272861 (self)
1 South Parks Road,                     +44 1865 272866 (PA)
Oxford OX1 3TG, UK                Fax:  +44 1865 272595



From r.hankin at noc.soton.ac.uk  Tue Aug 29 10:32:37 2006
From: r.hankin at noc.soton.ac.uk (Robin Hankin)
Date: Tue, 29 Aug 2006 09:32:37 +0100
Subject: [Rd] S4 methods for "+"
In-Reply-To: <Pine.LNX.4.64.0608251253260.31404@gannet.stats.ox.ac.uk>
References: <976B7A6F-2AD6-40E8-B8DA-5CEE4625A1F1@soc.soton.ac.uk>
	<Pine.LNX.4.64.0608251253260.31404@gannet.stats.ox.ac.uk>
Message-ID: <19036E53-EFD0-40CF-9712-82FF57334151@soc.soton.ac.uk>


On 25 Aug 2006, at 12:56, Prof Brian Ripley wrote:

> Just like any other S4 method:
>
> setMethod("+", c("track", "track"),
>           function(e1, e2) new("track", x=c(e1 at x, e2 at x), y=c 
> (e1 at y,e2 at y)))
>
> If you want to write a group generic for the S4 Ops group, you do it
> very like S3.  There are worked examples in 'S Programming' (that  
> at least
> at one point worked in R).
>


I had a long train journey over the weekend and took S Programming
with me.  Most of my  questions about S4 methods can be answered
by reading chapters 4 and 5 over and over and over again, with  
occasional
reference to the Green Book.

?SetMethod does not reference Venables & Ripley.  Could this be added?





>
> On Fri, 25 Aug 2006, Robin Hankin wrote:
>
>> Hi
>>
>> I'm trying to implement S4 methods in a package, and I am having
>> difficulty defining "+" to do what I want.
>>
>> In the Green Book, there is a discussion of a "track" object,
>>
>> setClass("track", representation(x="numeric", y="numeric"))
>>
>> OK.
>>
>> track1 <- new("track",x=c(1,4,6),y=c(10,11,12))
>> track2 <- new("track",x=c(2,5),y=c(100,101))
>>
>>
>> What I want to do is to define "+" for track object so that if
>>
>> track3 <-  track1 + track2
>>
>> has track3 at x  == c(1,2,4,5,6)
>> and
>> track3 at y = c(10,100,11,101,12)
>>
>> maybe adding a track object to a scalar would shift the values of the
>> x slot.
>>
>> The algorithm itself is no problem...but what is the S4 equivalent to
>> the S3 technique of writing an Ops.track() function that tells
>> R what "+" means?
>>
>>
>>

--
Robin Hankin
Uncertainty Analyst
National Oceanography Centre, Southampton
European Way, Southampton SO14 3ZH, UK
  tel  023-8059-7743



From maechler at stat.math.ethz.ch  Tue Aug 29 10:44:59 2006
From: maechler at stat.math.ethz.ch (Martin Maechler)
Date: Tue, 29 Aug 2006 10:44:59 +0200
Subject: [Rd] PATCH: Add fields argument to installed.packages and
	available.packages
In-Reply-To: <m2wt8sgyo0.fsf@ziti.fhcrc.org>
References: <m2wt8sgyo0.fsf@ziti.fhcrc.org>
Message-ID: <17651.65163.240840.365787@stat.math.ethz.ch>

>>>>> "Seth" == Seth Falcon <sfalcon at fhcrc.org>
>>>>>     on Mon, 28 Aug 2006 17:42:39 -0700 writes:

    Seth> Hi all, The write_PACKAGES function has a 'fields'
    Seth> argument that allows a user generating a PACKAGES file
    Seth> to specify additional fields to include.  For
    Seth> symmetry, it would be nice for the available.packages
    Seth> function to be able to read those extra fields when
    Seth> specified.

    Seth> Similarly, it would be useful for installed.packages
    Seth> to have a 'fields' argument.  This would allow a user
    Seth> to query the set of installed packages for other
    Seth> fields in the DESCRIPTION file.

    Seth> One use for this would be for repository hosters to
    Seth> include the License field in their PACKAGES file.  In
    Seth> this way, end users could query a repository and only
    Seth> download packages that they have a license to use.

    Seth> Below is a patch against svn 38996 that attempts to
    Seth> implement this.

I like the idea and will look into applying the patch
(note there's at least one typo which makes "make check" fail:
 /priotiry/)

A propos:

A while back (in last summer?), we (some of R-core) have
discussed about a new field to be added to DESCRIPTION,
and AFAIR, the only problem we had, is to find a name we
all liked.
Or was there more then the name alone, and some where convinced
that it is superfluous and hence too complicated.

The idea was a field related to but weaker than 'Suggests' :
Something like
     'canMakeUseOf: <pkg1> [, <pkg2>, ... ]
which is *not* used in any QA/QC checking, but is purely
informative: If <pkg1> is require()able, then some examples may
look nicer, a function may provide another feature, etc, etc.
Alternatives to 'canMakeUseOf' would have been
'isHappilyCoworkingWith' ....

What do you (R-devel listeners) think about the idea?

Martin



From r.hankin at noc.soton.ac.uk  Tue Aug 29 11:42:21 2006
From: r.hankin at noc.soton.ac.uk (Robin Hankin)
Date: Tue, 29 Aug 2006 10:42:21 +0100
Subject: [Rd] vector S4 classes
Message-ID: <AC7EC9F8-ECDC-4E6A-BB8D-7C53A4A7605F@soc.soton.ac.uk>

In the Green Book, section 7.5 discusses new vector classes and uses  
quaternions
as an example of a vector class that needs more than one number per  
element.

I would like to define a new class that has a numeric vector and a  
logical
vector of the same length that specifies whether the measurement was  
accurate.

The following code does not behave as desired:

 > setClass("thing",representation("vector",accurate="logical"))
[1] "thing"
 > dput(x <- new("thing",1:10,accurate=rep(T,10)))
structure(c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10), accurate = c(TRUE,
TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE), class =  
structure("thing", package = ".GlobalEnv"))
 > x[1:3]
[1] 1 2 3
 > dput(x[1:3])
c(1, 2, 3)
 >

because, although the "accurate" slot is filled as desired in "x",  
when extracting the first
three elements, it seems to be lost.

What is the appropriate setClass() call to do what I want?  Or indeed  
is making "thing"
a vector class as sensible idea here?





--
Robin Hankin
Uncertainty Analyst
National Oceanography Centre, Southampton
European Way, Southampton SO14 3ZH, UK
  tel  023-8059-7743



From maechler at stat.math.ethz.ch  Tue Aug 29 12:11:23 2006
From: maechler at stat.math.ethz.ch (Martin Maechler)
Date: Tue, 29 Aug 2006 12:11:23 +0200
Subject: [Rd] vector S4 classes
In-Reply-To: <AC7EC9F8-ECDC-4E6A-BB8D-7C53A4A7605F@soc.soton.ac.uk>
References: <AC7EC9F8-ECDC-4E6A-BB8D-7C53A4A7605F@soc.soton.ac.uk>
Message-ID: <17652.4811.806532.129240@stat.math.ethz.ch>

>>>>> "Robin" == Robin Hankin <r.hankin at noc.soton.ac.uk>
>>>>>     on Tue, 29 Aug 2006 10:42:21 +0100 writes:

    Robin> In the Green Book, section 7.5 discusses new vector classes and uses  
    Robin> quaternions
    Robin> as an example of a vector class that needs more than one number per  
    Robin> element.

    Robin> I would like to define a new class that has a numeric vector and a  
    Robin> logical
    Robin> vector of the same length that specifies whether the measurement was  
    Robin> accurate.

    Robin> The following code does not behave as desired:

    >> setClass("thing",representation("vector",accurate="logical"))
    Robin> [1] "thing"
    >> dput(x <- new("thing",1:10,accurate=rep(T,10)))
    Robin> structure(c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10), accurate = c(TRUE,
    Robin> TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE), class =  
    Robin> structure("thing", package = ".GlobalEnv"))
    >> x[1:3]
    Robin> [1] 1 2 3
    >> dput(x[1:3])
    Robin> c(1, 2, 3)
    >> 

    Robin> because, although the "accurate" slot is filled as desired in "x",  
    Robin> when extracting the first
    Robin> three elements, it seems to be lost.

and you would really expect that ``R'' magically knows to it
also must subset the accurate slote ?

    Robin> What is the appropriate setClass() call to do what I want?  Or indeed  
    Robin> is making "thing"
    Robin> a vector class as sensible idea here?

I think you need to define at least a  subset and subassign
method for your class as well.

Defining it as "vector" will automatically inherit all the
method definitions for "vector" --- none of which will ``know anything''
about the accuracy slot.
Therefore, I tend to think you rather define a class with "all slots"

  setClass("Thing", representation(x = "numeric", accurate = "logical"))

and then you probably have to define many methods for that
class, notably for "[" and also "[<-" where the latter should
happen via setReplaceMethod("Thing",

Also, I'd define a validity method, where you have to decide if
'accurate' must have the same length as 'x' -- or what it should
mean if not.

Martin



From r.hankin at noc.soton.ac.uk  Tue Aug 29 12:38:27 2006
From: r.hankin at noc.soton.ac.uk (Robin Hankin)
Date: Tue, 29 Aug 2006 11:38:27 +0100
Subject: [Rd] vector S4 classes
In-Reply-To: <17652.4811.806532.129240@stat.math.ethz.ch>
References: <AC7EC9F8-ECDC-4E6A-BB8D-7C53A4A7605F@soc.soton.ac.uk>
	<17652.4811.806532.129240@stat.math.ethz.ch>
Message-ID: <645CBF31-5714-48B7-ABB9-0FB52C54D53A@soc.soton.ac.uk>

Hi Martin

thanks for this.  I see what you say about R not being able to  
magically subset the
"accuracy" slot.  Which leaves me puzzled as to why anyone would define
a vector class such as "string" (p315).  I can't see why "string" is  
defined as
it is, rather than use something like "fungi" from V&R chapter 5.

So, my next question is, why does the Green Book recommend

setClass("quaternion", "vector", prototype=numeric())
?


Why not do what the "onion" package does and make a quaternion
a single column of a four-row matrix?  What advantage does the
setClass() method above have over the single-column-of-a-four-row-matrix
method?



best wishes

Robin


On 29 Aug 2006, at 11:11, Martin Maechler wrote:

>>>>>> "Robin" == Robin Hankin <r.hankin at noc.soton.ac.uk>
>>>>>>     on Tue, 29 Aug 2006 10:42:21 +0100 writes:
>
>     Robin> In the Green Book, section 7.5 discusses new vector  
> classes and uses
>     Robin> quaternions
>     Robin> as an example of a vector class that needs more than one  
> number per
>     Robin> element.
>
>     Robin> I would like to define a new class that has a numeric  
> vector and a
>     Robin> logical
>     Robin> vector of the same length that specifies whether the  
> measurement was
>     Robin> accurate.
>
>     Robin> The following code does not behave as desired:
>
>>> setClass("thing",representation("vector",accurate="logical"))
>     Robin> [1] "thing"
>>> dput(x <- new("thing",1:10,accurate=rep(T,10)))
>     Robin> structure(c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10), accurate = c 
> (TRUE,
>     Robin> TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE),  
> class =
>     Robin> structure("thing", package = ".GlobalEnv"))
>>> x[1:3]
>     Robin> [1] 1 2 3
>>> dput(x[1:3])
>     Robin> c(1, 2, 3)
>>>
>
>     Robin> because, although the "accurate" slot is filled as  
> desired in "x",
>     Robin> when extracting the first
>     Robin> three elements, it seems to be lost.
>
> and you would really expect that ``R'' magically knows to it
> also must subset the accurate slote ?
>
>     Robin> What is the appropriate setClass() call to do what I  
> want?  Or indeed
>     Robin> is making "thing"
>     Robin> a vector class as sensible idea here?
>
> I think you need to define at least a  subset and subassign
> method for your class as well.
>
> Defining it as "vector" will automatically inherit all the
> method definitions for "vector" --- none of which will ``know  
> anything''
> about the accuracy slot.
> Therefore, I tend to think you rather define a class with "all slots"
>
>   setClass("Thing", representation(x = "numeric", accurate =  
> "logical"))
>
> and then you probably have to define many methods for that
> class, notably for "[" and also "[<-" where the latter should
> happen via setReplaceMethod("Thing",
>
> Also, I'd define a validity method, where you have to decide if
> 'accurate' must have the same length as 'x' -- or what it should
> mean if not.
>
> Martin

--
Robin Hankin
Uncertainty Analyst
National Oceanography Centre, Southampton
European Way, Southampton SO14 3ZH, UK
  tel  023-8059-7743



From ggrothendieck at gmail.com  Tue Aug 29 12:40:55 2006
From: ggrothendieck at gmail.com (Gabor Grothendieck)
Date: Tue, 29 Aug 2006 06:40:55 -0400
Subject: [Rd] vector S4 classes
In-Reply-To: <AC7EC9F8-ECDC-4E6A-BB8D-7C53A4A7605F@soc.soton.ac.uk>
References: <AC7EC9F8-ECDC-4E6A-BB8D-7C53A4A7605F@soc.soton.ac.uk>
Message-ID: <971536df0608290340r39b99318sca33cf20a4ac1931@mail.gmail.com>

You might want to look at the source for the R 'its' package.  It defines
an S4 class for an irregular time series whose representation
consists of

1. a matrix portion analogous to your vector portion to hold the series
    of multivariate series, and
2. a "dates" slot analogous to your accurate slot

and defines numerous methods for this class.

On 8/29/06, Robin Hankin <r.hankin at noc.soton.ac.uk> wrote:
> In the Green Book, section 7.5 discusses new vector classes and uses
> quaternions
> as an example of a vector class that needs more than one number per
> element.
>
> I would like to define a new class that has a numeric vector and a
> logical
> vector of the same length that specifies whether the measurement was
> accurate.
>
> The following code does not behave as desired:
>
>  > setClass("thing",representation("vector",accurate="logical"))
> [1] "thing"
>  > dput(x <- new("thing",1:10,accurate=rep(T,10)))
> structure(c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10), accurate = c(TRUE,
> TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE), class =
> structure("thing", package = ".GlobalEnv"))
>  > x[1:3]
> [1] 1 2 3
>  > dput(x[1:3])
> c(1, 2, 3)
>  >
>
> because, although the "accurate" slot is filled as desired in "x",
> when extracting the first
> three elements, it seems to be lost.
>
> What is the appropriate setClass() call to do what I want?  Or indeed
> is making "thing"
> a vector class as sensible idea here?
>
>
>
>
>
> --
> Robin Hankin
> Uncertainty Analyst
> National Oceanography Centre, Southampton
> European Way, Southampton SO14 3ZH, UK
>  tel  023-8059-7743
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>



From pgilbert at bank-banque-canada.ca  Tue Aug 29 15:55:09 2006
From: pgilbert at bank-banque-canada.ca (Paul Gilbert)
Date: Tue, 29 Aug 2006 09:55:09 -0400
Subject: [Rd] PATCH: Add fields argument to
	installed.packages	and	available.packages
In-Reply-To: <17651.65163.240840.365787@stat.math.ethz.ch>
References: <m2wt8sgyo0.fsf@ziti.fhcrc.org>
	<17651.65163.240840.365787@stat.math.ethz.ch>
Message-ID: <44F4473D.9030203@bank-banque-canada.ca>

Martin Maechler wrote:

> ...
>
>The idea was a field related to but weaker than 'Suggests' :
>Something like
>     'canMakeUseOf: <pkg1> [, <pkg2>, ... ]
>which is *not* used in any QA/QC checking, but is purely
>informative: If <pkg1> is require()able, then some examples may
>look nicer, a function may provide another feature, etc, etc.
>Alternatives to 'canMakeUseOf' would have been
>'isHappilyCoworkingWith' ....
>
>What do you (R-devel listeners) think about the idea?
>  
>
I still like this idea.  I prefer 'canMakeUseOf' to 
'isHappilyCoworkingWith'  mainly because it seems less ambiguous.

Paul Gilbert

>Martin
>
>______________________________________________
>R-devel at r-project.org mailing list
>https://stat.ethz.ch/mailman/listinfo/r-devel
>  
>
====================================================================================

La version fran?aise suit le texte anglais.

------------------------------------------------------------------------------------

This email may contain privileged and/or confidential inform...{{dropped}}



From maechler at stat.math.ethz.ch  Tue Aug 29 16:12:44 2006
From: maechler at stat.math.ethz.ch (Martin Maechler)
Date: Tue, 29 Aug 2006 16:12:44 +0200
Subject: [Rd] 'CanMakeUseOf' field  [was ".. Add 'fields' argument ..]
In-Reply-To: <44F4473D.9030203@bank-banque-canada.ca>
References: <m2wt8sgyo0.fsf@ziti.fhcrc.org>
	<17651.65163.240840.365787@stat.math.ethz.ch>
	<44F4473D.9030203@bank-banque-canada.ca>
Message-ID: <17652.19292.998960.686119@stat.math.ethz.ch>

>>>>> "PaulG" == Paul Gilbert <pgilbert at bank-banque-canada.ca>
>>>>>     on Tue, 29 Aug 2006 09:55:09 -0400 writes:

    PaulG> Martin Maechler wrote:
    >> ...
    >> 
    >> The idea was a field related to but weaker than 'Suggests' :
    >> Something like
    >> 'canMakeUseOf: <pkg1> [, <pkg2>, ... ]
    >> which is *not* used in any QA/QC checking, but is purely
    >> informative: If <pkg1> is require()able, then some examples may
    >> look nicer, a function may provide another feature, etc, etc.
    >> Alternatives to 'canMakeUseOf' would have been
    >> 'isHappilyCoworkingWith' ....
    >> 
    >> What do you (R-devel listeners) think about the idea?

    PaulG> I still like this idea.  I prefer 'canMakeUseOf' to 
    PaulG> 'isHappilyCoworkingWith'  mainly because it seems less ambiguous.

Thanks, Paul.
As you may have guessed I should have put a  " :-) "  beside the
'isHappily...' .

Of course, even 'CanMakeUseOf' {we should capitalize the first letter}
is rather too long, but before finding the proper term, we should
agree on usefulness of such a new field.
Apart from the use of package authors {some could note that
other packages make use of theirs, without already depending on
or suggesting them}, it's one of those fields that should help
in the future to explore (e.g. cluster or neighborhood-graph)
the growing high-dimensional space of R packages.

Martin



From Bernhard_Pfaff at fra.invesco.com  Tue Aug 29 16:33:43 2006
From: Bernhard_Pfaff at fra.invesco.com (Pfaff, Bernhard Dr.)
Date: Tue, 29 Aug 2006 15:33:43 +0100
Subject: [Rd] 'CanMakeUseOf' field  [was ".. Add 'fields' argument ..]
In-Reply-To: <17652.19292.998960.686119@stat.math.ethz.ch>
Message-ID: <E4A9111DA23BA048B9A46686BF727CF461BD09@DEFRAXMB01.corp.amvescap.net>

>>>>>> "PaulG" == Paul Gilbert <pgilbert at bank-banque-canada.ca>
>>>>>>     on Tue, 29 Aug 2006 09:55:09 -0400 writes:
>
>    PaulG> Martin Maechler wrote:
>    >> ...
>    >> 
>    >> The idea was a field related to but weaker than 'Suggests' :
>    >> Something like
>    >> 'canMakeUseOf: <pkg1> [, <pkg2>, ... ]
>    >> which is *not* used in any QA/QC checking, but is purely
>    >> informative: If <pkg1> is require()able, then some examples may
>    >> look nicer, a function may provide another feature, etc, etc.
>    >> Alternatives to 'canMakeUseOf' would have been
>    >> 'isHappilyCoworkingWith' ....
>    >> 
>    >> What do you (R-devel listeners) think about the idea?
>
>    PaulG> I still like this idea.  I prefer 'canMakeUseOf' to 
>    PaulG> 'isHappilyCoworkingWith'  mainly because it seems 
>less ambiguous.
>
>Thanks, Paul.
>As you may have guessed I should have put a  " :-) "  beside the
>'isHappily...' .
>
>Of course, even 'CanMakeUseOf' {we should capitalize the first letter}
>is rather too long, but before finding the proper term, we should
>agree on usefulness of such a new field.
>Apart from the use of package authors {some could note that
>other packages make use of theirs, without already depending on
>or suggesting them}, it's one of those fields that should help
>in the future to explore (e.g. cluster or neighborhood-graph)
>the growing high-dimensional space of R packages.
>

Hello Martin, hello Paul,

this is an interesting iniative! There are already 'task views' (I do
not have to tell you :-); with a growing number of packages contained in
each) and hence, the 'value added', IMHO, of such a field in the
DESCRIPTION file would be to narrow down the search to affiliated
packages. Incidentally, these packages might not be contained in a
certain task view and the advantage is threefold: first this give
package authors the leeway to decide which packages should go 'hand in
hand' with their one(s); secondly, users might be pointed to packages,
that would have slipped their attention by only spotting at a certain
task view and last but not least, not all packages do appear in a task
view. 

Just my 2c.

Best,
Bernhard


>Martin
>
>______________________________________________
>R-devel at r-project.org mailing list
>https://stat.ethz.ch/mailman/listinfo/r-devel
>
*****************************************************************
Confidentiality Note: The information contained in this mess...{{dropped}}



From sfalcon at fhcrc.org  Tue Aug 29 16:35:36 2006
From: sfalcon at fhcrc.org (Seth Falcon)
Date: Tue, 29 Aug 2006 07:35:36 -0700
Subject: [Rd] PATCH: Add fields argument to installed.packages and
	available.packages
In-Reply-To: <17651.65163.240840.365787@stat.math.ethz.ch> (Martin Maechler's
	message of "Tue, 29 Aug 2006 10:44:59 +0200")
References: <m2wt8sgyo0.fsf@ziti.fhcrc.org>
	<17651.65163.240840.365787@stat.math.ethz.ch>
Message-ID: <m2veobfw3r.fsf@ziti.fhcrc.org>

Martin Maechler <maechler at stat.math.ethz.ch> writes:
> I like the idea and will look into applying the patch
> (note there's at least one typo which makes "make check" fail:
>  /priotiry/)

Great.  Sorry for the typo, I've sent an update privately.

> A propos:
>
> A while back (in last summer?), we (some of R-core) have
> discussed about a new field to be added to DESCRIPTION,
> and AFAIR, the only problem we had, is to find a name we
> all liked.
> Or was there more then the name alone, and some where convinced
> that it is superfluous and hence too complicated.
>
> The idea was a field related to but weaker than 'Suggests' :
> Something like
>      'canMakeUseOf: <pkg1> [, <pkg2>, ... ]
> which is *not* used in any QA/QC checking, but is purely
> informative: If <pkg1> is require()able, then some examples may
> look nicer, a function may provide another feature, etc, etc.
> Alternatives to 'canMakeUseOf' would have been
> 'isHappilyCoworkingWith' ....
>
> What do you (R-devel listeners) think about the idea?

Some thoughts:

* Beyond strict dependencies, it is useful for a package to be able to
  declare that it "can use" other packages to provide additional
  features _which may be platform specific_.

* It is useful to be able to check the non-optional parts when
  non-essential packages are not available.  In the case of platform
  specific optional features, this is essential.  Otherwise it would
  be impossible to ever run check.

* Package vignettes, used heavily in Bioconductor, often require a set
  of packages to be available to provide data and functions for a
  coherent example analysis.  These extra packages are often not used
  directly by the package itself (neither dependency nor "can use").
  A similar issue arises for examples included in package
  documentation.

* It is useful to be able to check only those vignettes and examples
  where the required packages available.

* If I were a new user/developer coming to R and read about Depends,
  Suggests, and CanMakeUseOf, I would likely be confused.

With that in mind, I wonder if:

  Suggests could mean "can use" and a compromise of some sort be
  established w.r.t. to R CMD check (similar to --no-vignettes).

  Depends.examples (or similar) be added which lists dependencies for
  documentation examples and vignettes.  

Best Wishes,

+ seth



From h.wickham at gmail.com  Tue Aug 29 16:46:14 2006
From: h.wickham at gmail.com (hadley wickham)
Date: Tue, 29 Aug 2006 09:46:14 -0500
Subject: [Rd] Capturing warnings with capture.output
Message-ID: <f8e6ff050608290746x420b56e7i5c7d7fabea9a9c98@mail.gmail.com>

Is there any way to include warnings in the output from capture.output?  eg:

a <- capture.output(warning("test"))
all.equal(a, "Warning message: \n test ")

Conceptually, this seems like redirecting stderr to stdout, or somehow
changing warning to simple print it's output.  I've had a look at
tryCatch and using a warning handler, but this terminates execution at
the warning.

Thanks,

Hadley



From Robert.McGehee at geodecapital.com  Tue Aug 29 16:31:03 2006
From: Robert.McGehee at geodecapital.com (McGehee, Robert)
Date: Tue, 29 Aug 2006 10:31:03 -0400
Subject: [Rd] 'CanMakeUseOf' field  [was ".. Add 'fields' argument ..]
Message-ID: <67DCA285A2D7754280D3B8E88EB548020C9468F4@MSGBOSCLB2WIN.DMN1.FMR.COM>

CanUse?

If the 'Suggests' field "lists packages that are not necessarily needed"
(Writing R Extensions), then why is the user required to have the
package installed to pass R CMD check? Likewise, if a CanMakeUseOf field
is added, then why would one choose to use Suggests at all? That is, is
there an advantage to requiring that the user have a package available
(to pass R CMD check) even if they do not need to load it to get
functionality?

I occasionally write functions of the form:
	if (require(pkg)) optimizedCode() else regularCode()
which works better for users who have installed additional packages, but
does not fail if the user has not. Such a field would be a nice addition
to inform users that getting an additional package might be
advantageous.

Cheers,
Robert

-----Original Message-----
From: r-devel-bounces at r-project.org
[mailto:r-devel-bounces at r-project.org] On Behalf Of Martin Maechler
Sent: Tuesday, August 29, 2006 10:13 AM
To: Paul Gilbert
Cc: r-devel at stat.math.ethz.ch
Subject: Re: [Rd] 'CanMakeUseOf' field [was ".. Add 'fields' argument
..]

>>>>> "PaulG" == Paul Gilbert <pgilbert at bank-banque-canada.ca>
>>>>>     on Tue, 29 Aug 2006 09:55:09 -0400 writes:

    PaulG> Martin Maechler wrote:
    >> ...
    >> 
    >> The idea was a field related to but weaker than 'Suggests' :
    >> Something like
    >> 'canMakeUseOf: <pkg1> [, <pkg2>, ... ]
    >> which is *not* used in any QA/QC checking, but is purely
    >> informative: If <pkg1> is require()able, then some examples may
    >> look nicer, a function may provide another feature, etc, etc.
    >> Alternatives to 'canMakeUseOf' would have been
    >> 'isHappilyCoworkingWith' ....
    >> 
    >> What do you (R-devel listeners) think about the idea?

    PaulG> I still like this idea.  I prefer 'canMakeUseOf' to 
    PaulG> 'isHappilyCoworkingWith'  mainly because it seems less
ambiguous.

Thanks, Paul.
As you may have guessed I should have put a  " :-) "  beside the
'isHappily...' .

Of course, even 'CanMakeUseOf' {we should capitalize the first letter}
is rather too long, but before finding the proper term, we should
agree on usefulness of such a new field.
Apart from the use of package authors {some could note that
other packages make use of theirs, without already depending on
or suggesting them}, it's one of those fields that should help
in the future to explore (e.g. cluster or neighborhood-graph)
the growing high-dimensional space of R packages.

Martin

______________________________________________
R-devel at r-project.org mailing list
https://stat.ethz.ch/mailman/listinfo/r-devel



From ggrothendieck at gmail.com  Tue Aug 29 16:56:41 2006
From: ggrothendieck at gmail.com (Gabor Grothendieck)
Date: Tue, 29 Aug 2006 10:56:41 -0400
Subject: [Rd] PATCH: Add fields argument to installed.packages and
	available.packages
In-Reply-To: <17651.65163.240840.365787@stat.math.ethz.ch>
References: <m2wt8sgyo0.fsf@ziti.fhcrc.org>
	<17651.65163.240840.365787@stat.math.ethz.ch>
Message-ID: <971536df0608290756k34136704ja820ba01487c3513@mail.gmail.com>

Rather than a plethora of fields, perhaps the Depends field could indicate
what depends on the object:  For example, if we use file extensions to
indicate what is dependent then one might write this to indicate that
some .Rd (i.e. examples) and .Rnw (i.e. vignette) files depend on lattice
and the entire package depends on zoo and the package is related to
but not dependent on tseries:

Depends: lattice (.Rd, .Rnw), grid (.Rnw), zoo, tseries (0)

Then there could be rules for each such suffix when processing
the package.

This has the advantage that its meaning is more obvious than a bunch
of keywords (Depends, Suggests, CanUse, Related).


On 8/29/06, Martin Maechler <maechler at stat.math.ethz.ch> wrote:
> >>>>> "Seth" == Seth Falcon <sfalcon at fhcrc.org>
> >>>>>     on Mon, 28 Aug 2006 17:42:39 -0700 writes:
>
>    Seth> Hi all, The write_PACKAGES function has a 'fields'
>    Seth> argument that allows a user generating a PACKAGES file
>    Seth> to specify additional fields to include.  For
>    Seth> symmetry, it would be nice for the available.packages
>    Seth> function to be able to read those extra fields when
>    Seth> specified.
>
>    Seth> Similarly, it would be useful for installed.packages
>    Seth> to have a 'fields' argument.  This would allow a user
>    Seth> to query the set of installed packages for other
>    Seth> fields in the DESCRIPTION file.
>
>    Seth> One use for this would be for repository hosters to
>    Seth> include the License field in their PACKAGES file.  In
>    Seth> this way, end users could query a repository and only
>    Seth> download packages that they have a license to use.
>
>    Seth> Below is a patch against svn 38996 that attempts to
>    Seth> implement this.
>
> I like the idea and will look into applying the patch
> (note there's at least one typo which makes "make check" fail:
>  /priotiry/)
>
> A propos:
>
> A while back (in last summer?), we (some of R-core) have
> discussed about a new field to be added to DESCRIPTION,
> and AFAIR, the only problem we had, is to find a name we
> all liked.
> Or was there more then the name alone, and some where convinced
> that it is superfluous and hence too complicated.
>
> The idea was a field related to but weaker than 'Suggests' :
> Something like
>     'canMakeUseOf: <pkg1> [, <pkg2>, ... ]
> which is *not* used in any QA/QC checking, but is purely
> informative: If <pkg1> is require()able, then some examples may
> look nicer, a function may provide another feature, etc, etc.
> Alternatives to 'canMakeUseOf' would have been
> 'isHappilyCoworkingWith' ....
>
> What do you (R-devel listeners) think about the idea?
>
> Martin
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>



From ggrothendieck at gmail.com  Tue Aug 29 17:07:43 2006
From: ggrothendieck at gmail.com (Gabor Grothendieck)
Date: Tue, 29 Aug 2006 11:07:43 -0400
Subject: [Rd] Capturing warnings with capture.output
In-Reply-To: <f8e6ff050608290746x420b56e7i5c7d7fabea9a9c98@mail.gmail.com>
References: <f8e6ff050608290746x420b56e7i5c7d7fabea9a9c98@mail.gmail.com>
Message-ID: <971536df0608290807m607951f8j6ded7cba36e7c5c9@mail.gmail.com>

Something like this which displays the warnings and also writes
them to out so that they are captured:

out <- capture.output(
   withCallingHandlers({
	print(1)
	warning("A warning.")
	print(2)
	warning("Another warning.")
	print(3)
   }, warning = function(x) cat(x$message, "\n"))
)

print(out)


On 8/29/06, hadley wickham <h.wickham at gmail.com> wrote:
> Is there any way to include warnings in the output from capture.output?  eg:
>
> a <- capture.output(warning("test"))
> all.equal(a, "Warning message: \n test ")
>
> Conceptually, this seems like redirecting stderr to stdout, or somehow
> changing warning to simple print it's output.  I've had a look at
> tryCatch and using a warning handler, but this terminates execution at
> the warning.
>
> Thanks,
>
> Hadley
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>



From sego at vt.edu  Tue Aug 29 17:43:03 2006
From: sego at vt.edu (sego at vt.edu)
Date: Tue, 29 Aug 2006 17:43:03 +0200 (CEST)
Subject: [Rd] arguments to boxplot( ) not passed to bxp() (PR#9183)
Message-ID: <20060829154303.7C00E28EB7@slim.kubism.ku.dk>

Full_Name: Landon Sego
Version: 2.3.1
OS: Windows
Submission from: (NULL) (130.20.54.241)


# When calling boxplot(), shouldn't the "axes" and "frame.plot"
# arguments get passed down to bxp()?  

# Two examples where the "frame.plot" and "axes" arguments
# don't seem to work the way one would anticipate:
X <- data.frame(x=as.factor(rep(c(1,2,3), 10)), y=rnorm(30))

# Removes the axes, but doesn't frame the plot
boxplot(y~x, data=X, axes=FALSE, frame.plot=TRUE)  

# Both axes and frame are present
boxplot(y~x, data=X, axes=TRUE, frame.plot=FALSE)  

# However, if we explictly use bxp(), the arguments work as
# we would expect:
Y <- boxplot(y~x, data=X, plot=FALSE)

# Frames plot and no axes
bxp(Y, frame.plot=TRUE, axes=FALSE)

# Produces axes with no frame
bxp(Y, frame.plot=FALSE)

# If I'm mistaken (or misinformed) and this isn't a bug,
# please accept my apologies in advance.



From murdoch at stats.uwo.ca  Tue Aug 29 17:45:22 2006
From: murdoch at stats.uwo.ca (Duncan Murdoch)
Date: Tue, 29 Aug 2006 11:45:22 -0400
Subject: [Rd] 'CanMakeUseOf' field  [was ".. Add 'fields' argument ..]
In-Reply-To: <17652.19292.998960.686119@stat.math.ethz.ch>
References: <m2wt8sgyo0.fsf@ziti.fhcrc.org>	<17651.65163.240840.365787@stat.math.ethz.ch>	<44F4473D.9030203@bank-banque-canada.ca>
	<17652.19292.998960.686119@stat.math.ethz.ch>
Message-ID: <44F46112.7060809@stats.uwo.ca>

On 8/29/2006 10:12 AM, Martin Maechler wrote:
>>>>>> "PaulG" == Paul Gilbert <pgilbert at bank-banque-canada.ca>
>>>>>>     on Tue, 29 Aug 2006 09:55:09 -0400 writes:
> 
>     PaulG> Martin Maechler wrote:
>     >> ...
>     >> 
>     >> The idea was a field related to but weaker than 'Suggests' :
>     >> Something like
>     >> 'canMakeUseOf: <pkg1> [, <pkg2>, ... ]
>     >> which is *not* used in any QA/QC checking, but is purely
>     >> informative: If <pkg1> is require()able, then some examples may
>     >> look nicer, a function may provide another feature, etc, etc.
>     >> Alternatives to 'canMakeUseOf' would have been
>     >> 'isHappilyCoworkingWith' ....
>     >> 
>     >> What do you (R-devel listeners) think about the idea?
> 
>     PaulG> I still like this idea.  I prefer 'canMakeUseOf' to 
>     PaulG> 'isHappilyCoworkingWith'  mainly because it seems less ambiguous.
> 
> Thanks, Paul.
> As you may have guessed I should have put a  " :-) "  beside the
> 'isHappily...' .
> 
> Of course, even 'CanMakeUseOf' {we should capitalize the first letter}
> is rather too long, but before finding the proper term, we should
> agree on usefulness of such a new field.
> Apart from the use of package authors {some could note that
> other packages make use of theirs, without already depending on
> or suggesting them}, it's one of those fields that should help
> in the future to explore (e.g. cluster or neighborhood-graph)
> the growing high-dimensional space of R packages.

I think we need an option to R CMD check rather than a new field in the 
DESCRIPTION.  Currently a package could be mentioned for any of these 
reasons:

1.  To make functions, examples or vignettes work
2.  To allow optional functionality in functions, examples or vignettes.
3.  Because it contains complementary functions.

I don't think we really need to worry about 3:  it should be contained 
in 1 or 2, if reasonably complete examples are given.

Case 1 is handled by Depends.

An author should check case 2 both with and without the suggested 
package.  A user  might be satisfied with a simple check "as things 
currently stand", or might want a stringent check like the author wants. 
  The author can't know that, because it will depend on the user.

So I don't think this is something that should be changed in 
DESCRIPTION.  There should be an option to R CMD check to include or 
exclude packages mentioned in the Suggests entry.  (I'd suggest a 3 
level option:  check as though they are not available, check as 
currently installed, require that they be available.)

Duncan Murdoch



From sfalcon at fhcrc.org  Tue Aug 29 17:58:48 2006
From: sfalcon at fhcrc.org (Seth Falcon)
Date: Tue, 29 Aug 2006 08:58:48 -0700
Subject: [Rd] 'CanMakeUseOf' field
In-Reply-To: <44F46112.7060809@stats.uwo.ca> (Duncan Murdoch's message of "Tue,
	29 Aug 2006 11:45:22 -0400")
References: <m2wt8sgyo0.fsf@ziti.fhcrc.org>
	<17651.65163.240840.365787@stat.math.ethz.ch>
	<44F4473D.9030203@bank-banque-canada.ca>
	<17652.19292.998960.686119@stat.math.ethz.ch>
	<44F46112.7060809@stats.uwo.ca>
Message-ID: <m2d5ajedon.fsf@ziti.fhcrc.org>

Duncan Murdoch <murdoch at stats.uwo.ca> writes:
> I think we need an option to R CMD check rather than a new field in the 
> DESCRIPTION.  Currently a package could be mentioned for any of these 
> reasons:
>
> 1.  To make functions, examples or vignettes work
> 2.  To allow optional functionality in functions, examples or vignettes.
> 3.  Because it contains complementary functions.
>
> I don't think we really need to worry about 3:  it should be contained 
> in 1 or 2, if reasonably complete examples are given.
>
> Case 1 is handled by Depends.

I think there is an important distinction between a dependency needed
for the package to function and a dependency needed to demonstrate
said functionality via an example or vignette.  The former is what
Depends is about, the latter is something else (Suggests).

> An author should check case 2 both with and without the suggested 
> package.  A user  might be satisfied with a simple check "as things 
> currently stand", or might want a stringent check like the author wants. 
>   The author can't know that, because it will depend on the user.
>
> So I don't think this is something that should be changed in 
> DESCRIPTION.  There should be an option to R CMD check to include or 
> exclude packages mentioned in the Suggests entry.  (I'd suggest a 3 
> level option:  check as though they are not available, check as 
> currently installed, require that they be available.)

I like this approach and agree in general that a solution involving
changes to R CMD check might be the best as opposed to adding fields.

+ seth



From murdoch at stats.uwo.ca  Tue Aug 29 19:00:05 2006
From: murdoch at stats.uwo.ca (Duncan Murdoch)
Date: Tue, 29 Aug 2006 13:00:05 -0400
Subject: [Rd] 'CanMakeUseOf' field
In-Reply-To: <m2d5ajedon.fsf@ziti.fhcrc.org>
References: <m2wt8sgyo0.fsf@ziti.fhcrc.org>	<17651.65163.240840.365787@stat.math.ethz.ch>	<44F4473D.9030203@bank-banque-canada.ca>	<17652.19292.998960.686119@stat.math.ethz.ch>	<44F46112.7060809@stats.uwo.ca>
	<m2d5ajedon.fsf@ziti.fhcrc.org>
Message-ID: <44F47295.2050207@stats.uwo.ca>

On 8/29/2006 11:58 AM, Seth Falcon wrote:
> Duncan Murdoch <murdoch at stats.uwo.ca> writes:
>> I think we need an option to R CMD check rather than a new field in the 
>> DESCRIPTION.  Currently a package could be mentioned for any of these 
>> reasons:
>>
>> 1.  To make functions, examples or vignettes work
>> 2.  To allow optional functionality in functions, examples or vignettes.
>> 3.  Because it contains complementary functions.
>>
>> I don't think we really need to worry about 3:  it should be contained 
>> in 1 or 2, if reasonably complete examples are given.
>>
>> Case 1 is handled by Depends.
> 
> I think there is an important distinction between a dependency needed
> for the package to function and a dependency needed to demonstrate
> said functionality via an example or vignette.  The former is what
> Depends is about, the latter is something else (Suggests).

Yes, that's a good point, especially with vignettes.  Only the package 
author needs to be able to run them.

But maybe examples should be considered broken if they don't work. Users 
should be able to expect example(foo) not to generate an error.  Package 
authors should wrap optional examples in code like if (require(...)).

Duncan Murdoch


> 
>> An author should check case 2 both with and without the suggested 
>> package.  A user  might be satisfied with a simple check "as things 
>> currently stand", or might want a stringent check like the author wants. 
>>   The author can't know that, because it will depend on the user.
>>
>> So I don't think this is something that should be changed in 
>> DESCRIPTION.  There should be an option to R CMD check to include or 
>> exclude packages mentioned in the Suggests entry.  (I'd suggest a 3 
>> level option:  check as though they are not available, check as 
>> currently installed, require that they be available.)
> 
> I like this approach and agree in general that a solution involving
> changes to R CMD check might be the best as opposed to adding fields.
> 
> + seth
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel



From pgilbert at bank-banque-canada.ca  Tue Aug 29 19:05:56 2006
From: pgilbert at bank-banque-canada.ca (Paul Gilbert)
Date: Tue, 29 Aug 2006 13:05:56 -0400
Subject: [Rd] 'CanMakeUseOf' field  [was ".. Add 'fields' argument ..]
In-Reply-To: <44F46112.7060809@stats.uwo.ca>
References: <m2wt8sgyo0.fsf@ziti.fhcrc.org>	<17651.65163.240840.365787@stat.math.ethz.ch>	<44F4473D.9030203@bank-banque-canada.ca>
	<17652.19292.998960.686119@stat.math.ethz.ch>
	<44F46112.7060809@stats.uwo.ca>
Message-ID: <44F473F4.1020607@bank-banque-canada.ca>



Duncan Murdoch wrote:

> On 8/29/2006 10:12 AM, Martin Maechler wrote:
>
>>>>>>> "PaulG" == Paul Gilbert <pgilbert at bank-banque-canada.ca>
>>>>>>>     on Tue, 29 Aug 2006 09:55:09 -0400 writes:
>>>>>>
>>
>>     PaulG> Martin Maechler wrote:
>>     >> ...
>>     >>     >> The idea was a field related to but weaker than 
>> 'Suggests' :
>>     >> Something like
>>     >> 'canMakeUseOf: <pkg1> [, <pkg2>, ... ]
>>     >> which is *not* used in any QA/QC checking, but is purely
>>     >> informative: If <pkg1> is require()able, then some examples may
>>     >> look nicer, a function may provide another feature, etc, etc.
>>     >> Alternatives to 'canMakeUseOf' would have been
>>     >> 'isHappilyCoworkingWith' ....
>>     >>     >> What do you (R-devel listeners) think about the idea?
>>
>>     PaulG> I still like this idea.  I prefer 'canMakeUseOf' to     
>> PaulG> 'isHappilyCoworkingWith'  mainly because it seems less ambiguous.
>>
>> Thanks, Paul.
>> As you may have guessed I should have put a  " :-) "  beside the
>> 'isHappily...' .
>>
>> Of course, even 'CanMakeUseOf' {we should capitalize the first letter}
>> is rather too long, but before finding the proper term, we should
>> agree on usefulness of such a new field.
>> Apart from the use of package authors {some could note that
>> other packages make use of theirs, without already depending on
>> or suggesting them}, it's one of those fields that should help
>> in the future to explore (e.g. cluster or neighborhood-graph)
>> the growing high-dimensional space of R packages.
>
>
> I think we need an option to R CMD check rather than a new field in 
> the DESCRIPTION.  Currently a package could be mentioned for any of 
> these reasons:
>
> 1.  To make functions, examples or vignettes work
> 2.  To allow optional functionality in functions, examples or vignettes.
> 3.  Because it contains complementary functions.
>
> I don't think we really need to worry about 3:  it should be contained 
> in 1 or 2, if reasonably complete examples are given.
>
> Case 1 is handled by Depends.

Well, from "Writing R Extensions"
   The optional  Suggests  field uses the same syntax as  Depends  and 
lists packages that are not
   necessarily needed. This includes packages used only in examples or 
vignettes

So case 1 is handled by the combination of Depends and Suggests, and we 
need something to handle case 2.

The related question is whether the CRAN checks should  try to check 2, 
or perhaps there needs to be 2a and 2b.  There are cababilities (and 
data) that CRAN may not have, so it would be nice distinguish things 
that should be checked on CRAN from things that should not be.

Paul

>
> An author should check case 2 both with and without the suggested 
> package.  A user  might be satisfied with a simple check "as things 
> currently stand", or might want a stringent check like the author 
> wants.  The author can't know that, because it will depend on the user.
>
> So I don't think this is something that should be changed in 
> DESCRIPTION.  There should be an option to R CMD check to include or 
> exclude packages mentioned in the Suggests entry.  (I'd suggest a 3 
> level option:  check as though they are not available, check as 
> currently installed, require that they be available.)
>
> Duncan Murdoch
====================================================================================

La version fran?aise suit le texte anglais.

------------------------------------------------------------------------------------

This email may contain privileged and/or confidential inform...{{dropped}}



From murdoch at stats.uwo.ca  Tue Aug 29 19:22:33 2006
From: murdoch at stats.uwo.ca (Duncan Murdoch)
Date: Tue, 29 Aug 2006 13:22:33 -0400
Subject: [Rd] 'CanMakeUseOf' field  [was ".. Add 'fields' argument ..]
In-Reply-To: <44F473F4.1020607@bank-banque-canada.ca>
References: <m2wt8sgyo0.fsf@ziti.fhcrc.org>	<17651.65163.240840.365787@stat.math.ethz.ch>	<44F4473D.9030203@bank-banque-canada.ca>	<17652.19292.998960.686119@stat.math.ethz.ch>	<44F46112.7060809@stats.uwo.ca>
	<44F473F4.1020607@bank-banque-canada.ca>
Message-ID: <44F477D9.7090909@stats.uwo.ca>

On 8/29/2006 1:05 PM, Paul Gilbert wrote:
> 
> Duncan Murdoch wrote:
> 
>> On 8/29/2006 10:12 AM, Martin Maechler wrote:
>>
>>>>>>>> "PaulG" == Paul Gilbert <pgilbert at bank-banque-canada.ca>
>>>>>>>>     on Tue, 29 Aug 2006 09:55:09 -0400 writes:
>>>>>>>
>>>
>>>     PaulG> Martin Maechler wrote:
>>>     >> ...
>>>     >>     >> The idea was a field related to but weaker than 
>>> 'Suggests' :
>>>     >> Something like
>>>     >> 'canMakeUseOf: <pkg1> [, <pkg2>, ... ]
>>>     >> which is *not* used in any QA/QC checking, but is purely
>>>     >> informative: If <pkg1> is require()able, then some examples may
>>>     >> look nicer, a function may provide another feature, etc, etc.
>>>     >> Alternatives to 'canMakeUseOf' would have been
>>>     >> 'isHappilyCoworkingWith' ....
>>>     >>     >> What do you (R-devel listeners) think about the idea?
>>>
>>>     PaulG> I still like this idea.  I prefer 'canMakeUseOf' to     
>>> PaulG> 'isHappilyCoworkingWith'  mainly because it seems less ambiguous.
>>>
>>> Thanks, Paul.
>>> As you may have guessed I should have put a  " :-) "  beside the
>>> 'isHappily...' .
>>>
>>> Of course, even 'CanMakeUseOf' {we should capitalize the first letter}
>>> is rather too long, but before finding the proper term, we should
>>> agree on usefulness of such a new field.
>>> Apart from the use of package authors {some could note that
>>> other packages make use of theirs, without already depending on
>>> or suggesting them}, it's one of those fields that should help
>>> in the future to explore (e.g. cluster or neighborhood-graph)
>>> the growing high-dimensional space of R packages.
>>
>>
>> I think we need an option to R CMD check rather than a new field in 
>> the DESCRIPTION.  Currently a package could be mentioned for any of 
>> these reasons:
>>
>> 1.  To make functions, examples or vignettes work
>> 2.  To allow optional functionality in functions, examples or vignettes.
>> 3.  Because it contains complementary functions.
>>
>> I don't think we really need to worry about 3:  it should be contained 
>> in 1 or 2, if reasonably complete examples are given.
>>
>> Case 1 is handled by Depends.
> 
> Well, from "Writing R Extensions"
>    The optional  Suggests  field uses the same syntax as  Depends  and 
> lists packages that are not
>    necessarily needed. This includes packages used only in examples or 
> vignettes

Yes, Seth pointed that out too.  Rather than adding additional levels, 
I'd fix it by changing the wording:

1.  To make functions work.
2.  To make examples and vignettes work, or optional functionality in 
functions.

The point is that there are some packages that are absolutely required 
(listed in Depends), and some that are only sometimes required (listed 
in Suggests).  Gabor's suggestion of labelling how things are used could 
be helpful too, but really even there, there are multiple levels of how 
something is used.

> So case 1 is handled by the combination of Depends and Suggests, and we 
> need something to handle case 2.
> 
> The related question is whether the CRAN checks should  try to check 2, 
> or perhaps there needs to be 2a and 2b.  There are cababilities (and 
> data) that CRAN may not have, so it would be nice distinguish things 
> that should be checked on CRAN from things that should not be.

I'd suggest that CRAN do its checks using the "as currently installed" 
option proposed below.  If a package can't pass tests using what's on 
CRAN, then it should be marked as needing work.

Duncan Murdoch

> 
> Paul
> 
>>
>> An author should check case 2 both with and without the suggested 
>> package.  A user  might be satisfied with a simple check "as things 
>> currently stand", or might want a stringent check like the author 
>> wants.  The author can't know that, because it will depend on the user.
>>
>> So I don't think this is something that should be changed in 
>> DESCRIPTION.  There should be an option to R CMD check to include or 
>> exclude packages mentioned in the Suggests entry.  (I'd suggest a 3 
>> level option:  check as though they are not available, check as 
>> currently installed, require that they be available.)
>>
>> Duncan Murdoch
> ====================================================================================
> 
> La version fran?aise suit le texte anglais.
> 
> ------------------------------------------------------------------------------------
> 
> This email may contain privileged and/or confidential info...{{dropped}}



From sfalcon at fhcrc.org  Tue Aug 29 19:53:28 2006
From: sfalcon at fhcrc.org (Seth Falcon)
Date: Tue, 29 Aug 2006 10:53:28 -0700
Subject: [Rd] 'CanMakeUseOf' field
In-Reply-To: <44F47295.2050207@stats.uwo.ca> (Duncan Murdoch's message of "Tue,
	29 Aug 2006 13:00:05 -0400")
References: <m2wt8sgyo0.fsf@ziti.fhcrc.org>
	<17651.65163.240840.365787@stat.math.ethz.ch>
	<44F4473D.9030203@bank-banque-canada.ca>
	<17652.19292.998960.686119@stat.math.ethz.ch>
	<44F46112.7060809@stats.uwo.ca> <m2d5ajedon.fsf@ziti.fhcrc.org>
	<44F47295.2050207@stats.uwo.ca>
Message-ID: <m28xl7ctt3.fsf@ziti.fhcrc.org>

Duncan Murdoch <murdoch at stats.uwo.ca> writes:
> On 8/29/2006 11:58 AM, Seth Falcon wrote:
>> I think there is an important distinction between a dependency needed
>> for the package to function and a dependency needed to demonstrate
>> said functionality via an example or vignette.  The former is what
>> Depends is about, the latter is something else (Suggests).
>
> Yes, that's a good point, especially with vignettes.  Only the package
> author needs to be able to run them.

Yes, but just to keep things clear: the value of vignettes is that
users can follow along.  So the ability to programatically identify
the extra required packages is valuable.

> But maybe examples should be considered broken if they don't
> work. Users should be able to expect example(foo) not to generate an
> error.  Package authors should wrap optional examples in code like if
> (require(...)).

I agree.  As with vignettes, there is value in users being able to
follow along and it would be nice to have a programatic way to
identify extra package needed for fancy/involved/optional examples.

Best,

+ seth



From pgilbert at bank-banque-canada.ca  Tue Aug 29 20:24:27 2006
From: pgilbert at bank-banque-canada.ca (Paul Gilbert)
Date: Tue, 29 Aug 2006 14:24:27 -0400
Subject: [Rd] 'CanMakeUseOf' field
In-Reply-To: <m28xl7ctt3.fsf@ziti.fhcrc.org>
References: <m2wt8sgyo0.fsf@ziti.fhcrc.org>	<17651.65163.240840.365787@stat.math.ethz.ch>	<44F4473D.9030203@bank-banque-canada.ca>	<17652.19292.998960.686119@stat.math.ethz.ch>	<44F46112.7060809@stats.uwo.ca>
	<m2d5ajedon.fsf@ziti.fhcrc.org>	<44F47295.2050207@stats.uwo.ca>
	<m28xl7ctt3.fsf@ziti.fhcrc.org>
Message-ID: <44F4865B.5010107@bank-banque-canada.ca>

Seth Falcon wrote:

>Duncan Murdoch <murdoch at stats.uwo.ca> writes:
>  
>
>>On 8/29/2006 11:58 AM, Seth Falcon wrote:
>>    
>>
>>>I think there is an important distinction between a dependency needed
>>>for the package to function and a dependency needed to demonstrate
>>>said functionality via an example or vignette.  The former is what
>>>Depends is about, the latter is something else (Suggests).
>>>      
>>>
>>Yes, that's a good point, especially with vignettes.  Only the package
>>author needs to be able to run them.
>>    
>>
>
>Yes, but just to keep things clear: the value of vignettes is that
>users can follow along.  So the ability to programatically identify
>the extra required packages is valuable.
>
>  
>
>>But maybe examples should be considered broken if they don't
>>work. Users should be able to expect example(foo) not to generate an
>>error.  Package authors should wrap optional examples in code like if
>>(require(...)).
>>    
>>
This is a work around that is ok for the developer's testing and to 
prevent failure on CRAN, and I use it. But, other than actually reading 
the examples, it provides no hints to other testers or users about 
things that might be installed, or installed first, to give more 
complete testing and more functionality.

Looking toward the future, I think it would be useful to have a standard 
mechanism to indicate extensions that are available in a package, and 
might be tested and used, but are not necessarily available on CRAN. For 
instance, an example might access to a purchased database or take 
advantage of  a computer cluster. It seems limiting to think that all 
testing that cannot be done on CRAN must be done almost exclusively by 
the developer.

Paul

>
>I agree.  As with vignettes, there is value in users being able to
>follow along and it would be nice to have a programatic way to
>identify extra package needed for fancy/involved/optional examples.
>
>Best,
>
>+ seth
>
>______________________________________________
>R-devel at r-project.org mailing list
>https://stat.ethz.ch/mailman/listinfo/r-devel
>  
>
====================================================================================

La version fran?aise suit le texte anglais.

------------------------------------------------------------------------------------

This email may contain privileged and/or confidential inform...{{dropped}}



From murdoch at stats.uwo.ca  Tue Aug 29 20:58:07 2006
From: murdoch at stats.uwo.ca (Duncan Murdoch)
Date: Tue, 29 Aug 2006 14:58:07 -0400
Subject: [Rd] 'CanMakeUseOf' field
In-Reply-To: <44F4865B.5010107@bank-banque-canada.ca>
References: <m2wt8sgyo0.fsf@ziti.fhcrc.org>	<17651.65163.240840.365787@stat.math.ethz.ch>	<44F4473D.9030203@bank-banque-canada.ca>	<17652.19292.998960.686119@stat.math.ethz.ch>	<44F46112.7060809@stats.uwo.ca>	<m2d5ajedon.fsf@ziti.fhcrc.org>	<44F47295.2050207@stats.uwo.ca>	<m28xl7ctt3.fsf@ziti.fhcrc.org>
	<44F4865B.5010107@bank-banque-canada.ca>
Message-ID: <44F48E3F.6070903@stats.uwo.ca>

On 8/29/2006 2:24 PM, Paul Gilbert wrote:
> Seth Falcon wrote:
> 
>>Duncan Murdoch <murdoch at stats.uwo.ca> writes:
>>  
>>
>>>On 8/29/2006 11:58 AM, Seth Falcon wrote:
>>>    
>>>
>>>>I think there is an important distinction between a dependency needed
>>>>for the package to function and a dependency needed to demonstrate
>>>>said functionality via an example or vignette.  The former is what
>>>>Depends is about, the latter is something else (Suggests).
>>>>      
>>>>
>>>Yes, that's a good point, especially with vignettes.  Only the package
>>>author needs to be able to run them.
>>>    
>>>
>>
>>Yes, but just to keep things clear: the value of vignettes is that
>>users can follow along.  So the ability to programatically identify
>>the extra required packages is valuable.
>>
>>  
>>
>>>But maybe examples should be considered broken if they don't
>>>work. Users should be able to expect example(foo) not to generate an
>>>error.  Package authors should wrap optional examples in code like if
>>>(require(...)).
>>>    
>>>
> This is a work around that is ok for the developer's testing and to 
> prevent failure on CRAN, and I use it. But, other than actually reading 
> the examples, it provides no hints to other testers or users about 
> things that might be installed, or installed first, to give more 
> complete testing and more functionality.

I'm not saying to use this instead of Suggests, I'm saying to do both. 
This way the Suggests entries really are suggestions:  the examples will 
run with or without the presence of the suggested packages.

I think there are so many variations on when a Suggested package should 
be installed, that it's not reasonable to expect to be able to encode 
them all in a machine readable way.  They should be documented in human 
readable format.

> Looking toward the future, I think it would be useful to have a standard 
> mechanism to indicate extensions that are available in a package, and 
> might be tested and used, but are not necessarily available on CRAN. For 
> instance, an example might access to a purchased database or take 
> advantage of  a computer cluster. It seems limiting to think that all 
> testing that cannot be done on CRAN must be done almost exclusively by 
> the developer.

If by "mechanism" you mean human-readable documentation, I agree with 
this.

Duncan Murdoch

> 
> Paul
> 
>>
>>I agree.  As with vignettes, there is value in users being able to
>>follow along and it would be nice to have a programatic way to
>>identify extra package needed for fancy/involved/optional examples.
>>
>>Best,
>>
>>+ seth
>>
>>______________________________________________
>>R-devel at r-project.org mailing list
>>https://stat.ethz.ch/mailman/listinfo/r-devel
>>  
>>
> ====================================================================================
> 
> La version fran?aise suit le texte anglais.
> 
> ------------------------------------------------------------------------------------
> 
> This email may contain privileged and/or confidential inform...{{dropped}}
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel



From ripley at stats.ox.ac.uk  Tue Aug 29 21:29:33 2006
From: ripley at stats.ox.ac.uk (Prof Brian Ripley)
Date: Tue, 29 Aug 2006 20:29:33 +0100 (BST)
Subject: [Rd] Speed of runif() on different Operating Systems
In-Reply-To: <44F2FC78.3040106@mx.uni-saarland.de>
References: <44F2FC78.3040106@mx.uni-saarland.de>
Message-ID: <Pine.LNX.4.64.0608281535580.652@gannet.stats.ox.ac.uk>

No one else seems to have responded to this.

Please see `Writing R Extensions' for how to time things in R.

For things like this, the fine details of how well the compiler keeps the 
pipelines and cache filled are important, as is the cache size and 
memory speed.  Using

system.time(for (i in 1:500) ttt <- runif(1000000))

your Linux time looks slow, indeed slower than the only 32-bit Linux box I 
have left (a 2GHz 512Kb cache Xeon) and 2.5x slower than a 64-bit R on an 
2.2GHz Opteron (which is doing a lot of other work and so only giving 
about 30% of one of its processors to R: the elapsed time was much 
longer).

The binary distribution of R for Windows is compiled with -O3: for some 
tasks it makes a lot of difference and this might just be one.

However, what can you usefully do in R with 5e8 random uniforms in 
anything like a minute, let alone the aggregate time this list will spend 
reading your question?  If it matters to you, investigate the code your 
compiler creates.  (The ATLAS developers report very poor performance on 
certain Pentiums for certain versions of gcc4.)

On Mon, 28 Aug 2006, Martin Becker wrote:

> Dear list,
> 
> I have noticed surprisingly big performance differences of runif() 
> between Windows XP and (Debian) linux on similar CPUs (Pentium D 3.0GHz 
> (WinXP)/3.2GHz (Linux)) and I wonder if there is a simple explanation 
> for the difference.
> On a linux system (with a slightly better CPU and 1GB more RAM), 
> execution of runif() seems to consume about 80% more CPU time than on a 
> Windows XP system.
> On a Xeon 2.7GHz (Debian) linux I have checked, that using the .deb - 
> i386 - Version of R instead of a self-build i686 - version has no 
> noticeable effect on speed.
> Measuring CPU time with Rprof() instead of Sys.time()-differences yields 
> similar results.

You are not measuring CPU time at all with Sys.time.


> Any hint is appreciated, please let me know, if the given information on 
> system/OS or the R output below is not sufficient.
> 
> Regards,
> 
>   Martin Becker
> 
> ------------------------ R - Output  below ------------------------
> 
> Windows XP: (Pentium D, 3.0 GHz)
> 
>  > version
>                _                        
> platform       i386-pc-mingw32          
> arch           i386                     
> os             mingw32                  
> system         i386, mingw32            
> status                                  
> major          2                        
> minor          3.1                      
> year           2006                     
> month          06                       
> day            01                       
> svn rev        38247                    
> language       R                        
> version.string Version 2.3.1 (2006-06-01)
>  > RNGkind()
> [1] "Mersenne-Twister" "Inversion"      
>  > t1<-Sys.time();for (i in 1:500) ttt<-runif(1000000);print(Sys.time()-t1);
> Time difference of 57.969 secs
>  >
> 
> Debian Linux: (Pentium D, 3.2GHz)
> 
>  > version
>                _                        
> platform       i686-pc-linux-gnu        
> arch           i686                     
> os             linux-gnu                
> system         i686, linux-gnu          
> status                                  
> major          2                        
> minor          3.1                      
> year           2006                     
> month          06                       
> day            01                       
> svn rev        38247                    
> language       R                        
> version.string Version 2.3.1 (2006-06-01)
>  > RNGkind()
> [1] "Mersenne-Twister" "Inversion"      
>  > t1<-Sys.time();for (i in 1:500) 
> ttt<-runif(1000000);print(Sys.time()-t1);    
> Time difference of 1.752916 mins
>  >
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
> 

-- 
Brian D. Ripley,                  ripley at stats.ox.ac.uk
Professor of Applied Statistics,  http://www.stats.ox.ac.uk/~ripley/
University of Oxford,             Tel:  +44 1865 272861 (self)
1 South Parks Road,                     +44 1865 272866 (PA)
Oxford OX1 3TG, UK                Fax:  +44 1865 272595



From pgilbert at bank-banque-canada.ca  Tue Aug 29 22:13:21 2006
From: pgilbert at bank-banque-canada.ca (Paul Gilbert)
Date: Tue, 29 Aug 2006 16:13:21 -0400
Subject: [Rd] 'CanMakeUseOf' field
In-Reply-To: <44F48E3F.6070903@stats.uwo.ca>
References: <m2wt8sgyo0.fsf@ziti.fhcrc.org>	<17651.65163.240840.365787@stat.math.ethz.ch>	<44F4473D.9030203@bank-banque-canada.ca>	<17652.19292.998960.686119@stat.math.ethz.ch>	<44F46112.7060809@stats.uwo.ca>	<m2d5ajedon.fsf@ziti.fhcrc.org>	<44F47295.2050207@stats.uwo.ca>	<m28xl7ctt3.fsf@ziti.fhcrc.org>
	<44F4865B.5010107@bank-banque-canada.ca>
	<44F48E3F.6070903@stats.uwo.ca>
Message-ID: <44F49FE1.6040002@bank-banque-canada.ca>



Duncan Murdoch wrote:

> On 8/29/2006 2:24 PM, Paul Gilbert wrote:
>
>> Seth Falcon wrote:
>>
>>> Duncan Murdoch <murdoch at stats.uwo.ca> writes:
>>>  
>>>
>>>> On 8/29/2006 11:58 AM, Seth Falcon wrote:
>>>>   
>>>>
>>>>> I think there is an important distinction between a dependency needed
>>>>> for the package to function and a dependency needed to demonstrate
>>>>> said functionality via an example or vignette.  The former is what
>>>>> Depends is about, the latter is something else (Suggests).
>>>>>     
>>>>
>>>> Yes, that's a good point, especially with vignettes.  Only the package
>>>> author needs to be able to run them.
>>>>   
>>>
>>>
>>> Yes, but just to keep things clear: the value of vignettes is that
>>> users can follow along.  So the ability to programatically identify
>>> the extra required packages is valuable.
>>>
>>>  
>>>
>>>> But maybe examples should be considered broken if they don't
>>>> work. Users should be able to expect example(foo) not to generate an
>>>> error.  Package authors should wrap optional examples in code like if
>>>> (require(...)).
>>>>   
>>>
>> This is a work around that is ok for the developer's testing and to 
>> prevent failure on CRAN, and I use it. But, other than actually 
>> reading the examples, it provides no hints to other testers or users 
>> about things that might be installed, or installed first, to give 
>> more complete testing and more functionality.
>
>
> I'm not saying to use this instead of Suggests, I'm saying to do both. 
> This way the Suggests entries really are suggestions:  the examples 
> will run with or without the presence of the suggested packages.
>
> I think there are so many variations on when a Suggested package 
> should be installed, that it's not reasonable to expect to be able to 
> encode them all in a machine readable way.  They should be documented 
> in human readable format.
>
>> Looking toward the future, I think it would be useful to have a 
>> standard mechanism to indicate extensions that are available in a 
>> package, and might be tested and used, but are not necessarily 
>> available on CRAN. For instance, an example might access to a 
>> purchased database or take advantage of  a computer cluster. It seems 
>> limiting to think that all testing that cannot be done on CRAN must 
>> be done almost exclusively by the developer.
>
>
> If by "mechanism" you mean human-readable documentation, I agree with 
> this.

Yes,  I was think of human-readable and in a standard location, like a 
field in the DESCRIPTION file.  (You are thinking of fields in the 
DESCRIPTION file as human-readable, are you not?)

Paul

>
> Duncan Murdoch
>
>>
>> Paul
>>
>>>
>>> I agree.  As with vignettes, there is value in users being able to
>>> follow along and it would be nice to have a programatic way to
>>> identify extra package needed for fancy/involved/optional examples.
>>>
>>> Best,
>>>
>>> + seth
>>>
>>> ______________________________________________
>>> R-devel at r-project.org mailing list
>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>>  
>>>
>> ==================================================================================== 
>>
>>
>> La version fran?aise suit le texte anglais.
>>
>> ------------------------------------------------------------------------------------ 
>>
>>
>> This email may contain privileged and/or confidential 
>> inform...{{dropped}}
>>
>> ______________________________________________
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel
>
====================================================================================

La version fran?aise suit le texte anglais.

------------------------------------------------------------------------------------

This email may contain privileged and/or confidential inform...{{dropped}}



From murdoch at stats.uwo.ca  Tue Aug 29 22:21:33 2006
From: murdoch at stats.uwo.ca (Duncan Murdoch)
Date: Tue, 29 Aug 2006 16:21:33 -0400
Subject: [Rd] 'CanMakeUseOf' field
In-Reply-To: <44F49FE1.6040002@bank-banque-canada.ca>
References: <m2wt8sgyo0.fsf@ziti.fhcrc.org>	<17651.65163.240840.365787@stat.math.ethz.ch>	<44F4473D.9030203@bank-banque-canada.ca>	<17652.19292.998960.686119@stat.math.ethz.ch>	<44F46112.7060809@stats.uwo.ca>	<m2d5ajedon.fsf@ziti.fhcrc.org>	<44F47295.2050207@stats.uwo.ca>	<m28xl7ctt3.fsf@ziti.fhcrc.org>	<44F4865B.5010107@bank-banque-canada.ca>	<44F48E3F.6070903@stats.uwo.ca>
	<44F49FE1.6040002@bank-banque-canada.ca>
Message-ID: <44F4A1CD.50800@stats.uwo.ca>

On 8/29/2006 4:13 PM, Paul Gilbert wrote:
> 
> Duncan Murdoch wrote:
> 
>> On 8/29/2006 2:24 PM, Paul Gilbert wrote:
>>
>>> Seth Falcon wrote:
>>>
>>>> Duncan Murdoch <murdoch at stats.uwo.ca> writes:
>>>>  
>>>>
>>>>> On 8/29/2006 11:58 AM, Seth Falcon wrote:
>>>>>   
>>>>>
>>>>>> I think there is an important distinction between a dependency needed
>>>>>> for the package to function and a dependency needed to demonstrate
>>>>>> said functionality via an example or vignette.  The former is what
>>>>>> Depends is about, the latter is something else (Suggests).
>>>>>>     
>>>>>
>>>>> Yes, that's a good point, especially with vignettes.  Only the package
>>>>> author needs to be able to run them.
>>>>>   
>>>>
>>>>
>>>> Yes, but just to keep things clear: the value of vignettes is that
>>>> users can follow along.  So the ability to programatically identify
>>>> the extra required packages is valuable.
>>>>
>>>>  
>>>>
>>>>> But maybe examples should be considered broken if they don't
>>>>> work. Users should be able to expect example(foo) not to generate an
>>>>> error.  Package authors should wrap optional examples in code like if
>>>>> (require(...)).
>>>>>   
>>>>
>>> This is a work around that is ok for the developer's testing and to 
>>> prevent failure on CRAN, and I use it. But, other than actually 
>>> reading the examples, it provides no hints to other testers or users 
>>> about things that might be installed, or installed first, to give 
>>> more complete testing and more functionality.
>>
>>
>> I'm not saying to use this instead of Suggests, I'm saying to do both. 
>> This way the Suggests entries really are suggestions:  the examples 
>> will run with or without the presence of the suggested packages.
>>
>> I think there are so many variations on when a Suggested package 
>> should be installed, that it's not reasonable to expect to be able to 
>> encode them all in a machine readable way.  They should be documented 
>> in human readable format.
>>
>>> Looking toward the future, I think it would be useful to have a 
>>> standard mechanism to indicate extensions that are available in a 
>>> package, and might be tested and used, but are not necessarily 
>>> available on CRAN. For instance, an example might access to a 
>>> purchased database or take advantage of  a computer cluster. It seems 
>>> limiting to think that all testing that cannot be done on CRAN must 
>>> be done almost exclusively by the developer.
>>
>>
>> If by "mechanism" you mean human-readable documentation, I agree with 
>> this.
> 
> Yes,  I was think of human-readable and in a standard location, like a 
> field in the DESCRIPTION file.  (You are thinking of fields in the 
> DESCRIPTION file as human-readable, are you not?)

Yes, but I don't think that's necessarily the right place for this. 
What we were going to do this summer was to make it easier to build 
foo-package.Rd files, without duplication of the information in the 
DESCRIPTION file.  I think that man page (or a man page linked from it) 
would be the right place for a detailed discussion like this.

This doesn't address the problem of someone who hasn't got the package 
installed yet, though perhaps CRAN could put a version of that man page 
(or all of them) online for browsing.  Unfortunately this hasn't 
happened yet, but maybe we'll get to it before 2.5.0.

Duncan Murdoch



> 
> Paul
> 
>>
>> Duncan Murdoch
>>
>>>
>>> Paul
>>>
>>>>
>>>> I agree.  As with vignettes, there is value in users being able to
>>>> follow along and it would be nice to have a programatic way to
>>>> identify extra package needed for fancy/involved/optional examples.
>>>>
>>>> Best,
>>>>
>>>> + seth
>>>>
>>>> ______________________________________________
>>>> R-devel at r-project.org mailing list
>>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>>>  
>>>>
>>> ==================================================================================== 
>>>
>>>
>>> La version fran?aise suit le texte anglais.
>>>
>>> ------------------------------------------------------------------------------------ 
>>>
>>>
>>> This email may contain privileged and/or confidential 
>>> inform...{{dropped}}
>>>
>>> ______________________________________________
>>> R-devel at r-project.org mailing list
>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>
> ====================================================================================
> 
> La version fran?aise suit le texte anglais.
> 
> ------------------------------------------------------------------------------------
> 
> This email may contain privileged and/or confidential info...{{dropped}}



From gah4 at u.washington.edu  Wed Aug 30 00:59:13 2006
From: gah4 at u.washington.edu (gah4 at u.washington.edu)
Date: Wed, 30 Aug 2006 00:59:13 +0200 (CEST)
Subject: [Rd] list and pairlist in "Writing R Extensions" (PR#9185)
Message-ID: <20060829225913.66DCE18398@slim.kubism.ku.dk>

Full_Name: Glen Herrmannsfeldt
Version: 2.2.1
OS: Linux
Submission from: (NULL) (128.95.113.77)


Following the discussion in "Writing R Extensions" in section 5.8.2, there
is no indication that showArgs expects a pairlist() instead of a list().

I was trying 

.Call("showArgs",list(one=1,two=2,three=3))

for example, and getting many core dumps.

It wasn't until reading "R Language Definition" that I found out
about pairlist(), as needed.  

The final example:

showArgs<-function(...) .Call("showArgs1",list(...))

looks like a list can be passed to showArgs, but in fact it is showArgs1, which
doesn't seem to be documented at all!

It could be that using pairlist() in 5.8.2 would fix the problem,
but there should be a reference to the difference between list()
and pairlist()

thanks,

-- glen



From pxi at stat.cmu.edu  Tue Aug 29 18:40:45 2006
From: pxi at stat.cmu.edu (pxi at stat.cmu.edu)
Date: Tue, 29 Aug 2006 18:40:45 +0200 (CEST)
Subject: [Rd] rgamma gives zeros. (PR#9184)
Message-ID: <20060829164045.936A4AB7A@slim.kubism.ku.dk>

Full_Name: Peiyi Xi
Version: R 2.2.0
OS: Windows XP Professional
Submission from: (NULL) (128.2.3.141)


When I use rgamma(n, shape, rate ) to generate gamma samples, it
gives zeros when both shape and rate are very small.

But we know that if x follows a gamma distribution, x should be positive.

e.g.
> temp=rgamma(10, 0.001, rate=0.01)
> temp
 [1]  2.438078e-33 5.101136e-130  1.760830e-54 2.724731e-166  0.000000e+00
 [6] 4.461151e-146  1.332914e-55 2.336396e-277  0.000000e+00  0.000000e+00
> temp[5]
[1] 0



From ripley at stats.ox.ac.uk  Wed Aug 30 08:45:48 2006
From: ripley at stats.ox.ac.uk (ripley at stats.ox.ac.uk)
Date: Wed, 30 Aug 2006 08:45:48 +0200 (CEST)
Subject: [Rd] list and pairlist in "Writing R Extensions" (PR#9185)
Message-ID: <20060830064548.DC9C9283B0@slim.kubism.ku.dk>

It says clearly that showArgs is for use by .External, not .Call (it is 
introduced in a paragraph about the differences):

@example
showArgs <- function(...) .External("showArgs", ...)
@end example

and that is the main user error here.  Pairlists are not needed when used 
as documented.

On Wed, 30 Aug 2006, gah4 at u.washington.edu wrote:

> Full_Name: Glen Herrmannsfeldt
> Version: 2.2.1
> OS: Linux
> Submission from: (NULL) (128.95.113.77)
> 
> 
> Following the discussion in "Writing R Extensions" in section 5.8.2, there
> is no indication that showArgs expects a pairlist() instead of a list().
> 
> I was trying 
> 
> .Call("showArgs",list(one=1,two=2,three=3))
> 
> for example, and getting many core dumps.
> 
> It wasn't until reading "R Language Definition" that I found out
> about pairlist(), as needed.  

> The final example:
> 
> showArgs<-function(...) .Call("showArgs1",list(...))
> 
> looks like a list can be passed to showArgs, but in fact it is showArgs1, which
> doesn't seem to be documented at all!

It says this is an 'alternative style', not an example.

> It could be that using pairlist() in 5.8.2 would fix the problem,
> but there should be a reference to the difference between list()
> and pairlist()

-- 
Brian D. Ripley,                  ripley at stats.ox.ac.uk
Professor of Applied Statistics,  http://www.stats.ox.ac.uk/~ripley/
University of Oxford,             Tel:  +44 1865 272861 (self)
1 South Parks Road,                     +44 1865 272866 (PA)
Oxford OX1 3TG, UK                Fax:  +44 1865 272595



From friedrich.leisch at stat.uni-muenchen.de  Wed Aug 30 09:21:50 2006
From: friedrich.leisch at stat.uni-muenchen.de (friedrich.leisch at stat.uni-muenchen.de)
Date: Wed, 30 Aug 2006 09:21:50 +0200 (MEST)
Subject: [Rd] 'CanMakeUseOf' field
In-Reply-To: <44F4A1CD.50800@stats.uwo.ca>
References: <m2wt8sgyo0.fsf@ziti.fhcrc.org>	<17651.65163.240840.365787@stat.math.ethz.ch>	<44F4473D.9030203@bank-banque-canada.ca>	<17652.19292.998960.686119@stat.math.ethz.ch>	<44F46112.7060809@stats.uwo.ca>	<m2d5ajedon.fsf@ziti.fhcrc.org>	<44F47295.2050207@stats.uwo.ca>	<m28xl7ctt3.fsf@ziti.fhcrc.org>	<44F4865B.5010107@bank-banque-canada.ca>	<44F48E3F.6070903@stats.uwo.ca>
	<44F49FE1.6040002@bank-banque-canada.ca>
	<44F4A1CD.50800@stats.uwo.ca>
Message-ID: <63679.151.100.49.234.1156922510.squirrel@webmail.lrz-muenchen.de>

> On 8/29/2006 4:13 PM, Paul Gilbert wrote:
>>
>> Duncan Murdoch wrote:

[...]

>
> This doesn't address the problem of someone who hasn't got the package
> installed yet, though perhaps CRAN could put a version of that man page
> (or all of them) online for browsing.  Unfortunately this hasn't
> happened yet, but maybe we'll get to it before 2.5.0.

The help pages are available on CRAN in PDF format, if there are strong
preferences to also get the HTML version online that should not be a major
problem.

Best,
Fritz



From friedrich.leisch at stat.uni-muenchen.de  Wed Aug 30 09:34:13 2006
From: friedrich.leisch at stat.uni-muenchen.de (friedrich.leisch at stat.uni-muenchen.de)
Date: Wed, 30 Aug 2006 09:34:13 +0200 (MEST)
Subject: [Rd] 'CanMakeUseOf' field
In-Reply-To: <m2d5ajedon.fsf@ziti.fhcrc.org>
References: <m2wt8sgyo0.fsf@ziti.fhcrc.org>
	<17651.65163.240840.365787@stat.math.ethz.ch>
	<44F4473D.9030203@bank-banque-canada.ca>
	<17652.19292.998960.686119@stat.math.ethz.ch>
	<44F46112.7060809@stats.uwo.ca> <m2d5ajedon.fsf@ziti.fhcrc.org>
Message-ID: <63945.151.100.49.234.1156923253.squirrel@webmail.lrz-muenchen.de>

> Duncan Murdoch <murdoch at stats.uwo.ca> writes:
>> I think we need an option to R CMD check rather than a new field in the
>> DESCRIPTION.  Currently a package could be mentioned for any of these
>> reasons:
>>
>> 1.  To make functions, examples or vignettes work
>> 2.  To allow optional functionality in functions, examples or vignettes.
>> 3.  Because it contains complementary functions.
>>
>> I don't think we really need to worry about 3:  it should be contained
>> in 1 or 2, if reasonably complete examples are given.
>>
>> Case 1 is handled by Depends.
>
> I think there is an important distinction between a dependency needed
> for the package to function and a dependency needed to demonstrate
> said functionality via an example or vignette.  The former is what
> Depends is about, the latter is something else (Suggests).

Sorry to join in late, I am at the Compstat conference and have limited
email access. What Seth describes in the above paragraph is exactly what I
had in mind when splitting the single Depends field we had into Depends
and Suggests: Depends are a necessity to run the package, Suggests is nice
to have but not necessary. If you know how to use a package you may the
decide not to install a package that is only suggested, but

  * may not be interested to execute the examples,
  * know that you never need the extra functionality
  * ...

so it should not be auto-installed unless you ask for it (the default
could also be the other way round, the point is that it should be possible
to have package foo but not the packages it only suggests). On CRAN we
check with all suggestions to test all bits and pieces, having an option
in R CMD check to test only with suggests may be nice, if there is use for
it.

Ad the wording in the manual: obviously that is not optimal (otherwise no
need for parts of this email thread), perhaps somebody else than the
original author (=me) could try to improve it for 2.4 after this
clarifications?  Otherwise I will give it a shot next week after I return
from Rome.

Best,
Fritz



From ripley at stats.ox.ac.uk  Wed Aug 30 09:29:19 2006
From: ripley at stats.ox.ac.uk (ripley at stats.ox.ac.uk)
Date: Wed, 30 Aug 2006 09:29:19 +0200 (CEST)
Subject: [Rd] rgamma gives zeros. (PR#9184)
Message-ID: <20060830072919.805264C9E8@slim.kubism.ku.dk>

I think you fail to understand the floating point arithmetic involved. The 
smallest floating point number that can be represented to full precision 
is

> .Machine$double.xmin
[1] 2.225074e-308

and

> pgamma(.Machine$double.xmin, 0.001, rate=0.01)
[1] 0.4904533

Your distribution is so extreme that in computer representation it is 
largely discrete.

Now, on your platform there are denormalized doubles, so

> table(rgamma(1e6, 0.001, rate=0.01) < .Machine$double.xmin)

 FALSE   TRUE
509073 490927
> table(rgamma(1e6, 0.001, rate=0.01) == 0)

 FALSE   TRUE
525187 474813

> x <- rgamma(1e6, 0.001, rate=0.01)
> sort(x[x> 0]) [1:10]
 [1] 4.940656e-322 4.940656e-322 4.940656e-322 4.940656e-322 4.940656e-322
 [6] 4.940656e-322 4.940656e-322 4.940656e-322 4.940656e-322 4.940656e-322

is pretty much what I expected.

On Tue, 29 Aug 2006, pxi at stat.cmu.edu wrote:

> Full_Name: Peiyi Xi
> Version: R 2.2.0

You are specifically asked NOT to report on obselete versions of R.

> OS: Windows XP Professional
> Submission from: (NULL) (128.2.3.141)
> 
> 
> When I use rgamma(n, shape, rate ) to generate gamma samples, it
> gives zeros when both shape and rate are very small.
> 
> But we know that if x follows a gamma distribution, x should be positive.
> 
> e.g.
> > temp=rgamma(10, 0.001, rate=0.01)
> > temp
>  [1]  2.438078e-33 5.101136e-130  1.760830e-54 2.724731e-166  0.000000e+00
>  [6] 4.461151e-146  1.332914e-55 2.336396e-277  0.000000e+00  0.000000e+00
> > temp[5]
> [1] 0
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
> 

-- 
Brian D. Ripley,                  ripley at stats.ox.ac.uk
Professor of Applied Statistics,  http://www.stats.ox.ac.uk/~ripley/
University of Oxford,             Tel:  +44 1865 272861 (self)
1 South Parks Road,                     +44 1865 272866 (PA)
Oxford OX1 3TG, UK                Fax:  +44 1865 272595



From maechler at stat.math.ethz.ch  Wed Aug 30 10:44:38 2006
From: maechler at stat.math.ethz.ch (Martin Maechler)
Date: Wed, 30 Aug 2006 10:44:38 +0200
Subject: [Rd] 'CanMakeUseOf' field
In-Reply-To: <63945.151.100.49.234.1156923253.squirrel@webmail.lrz-muenchen.de>
References: <m2wt8sgyo0.fsf@ziti.fhcrc.org>
	<17651.65163.240840.365787@stat.math.ethz.ch>
	<44F4473D.9030203@bank-banque-canada.ca>
	<17652.19292.998960.686119@stat.math.ethz.ch>
	<44F46112.7060809@stats.uwo.ca> <m2d5ajedon.fsf@ziti.fhcrc.org>
	<63945.151.100.49.234.1156923253.squirrel@webmail.lrz-muenchen.de>
Message-ID: <17653.20470.199569.870638@stat.math.ethz.ch>

>>>>> "FrL" == friedrich leisch <friedrich.leisch at stat.uni-muenchen.de>
>>>>>     on Wed, 30 Aug 2006 09:34:13 +0200 (MEST) writes:

    >> Duncan Murdoch <murdoch at stats.uwo.ca> writes:
    >>> I think we need an option to R CMD check rather than a new field in the
    >>> DESCRIPTION.  Currently a package could be mentioned for any of these
    >>> reasons:
    >>> 
    >>> 1.  To make functions, examples or vignettes work
    >>> 2.  To allow optional functionality in functions, examples or vignettes.
    >>> 3.  Because it contains complementary functions.
    >>> 
    >>> I don't think we really need to worry about 3:  it should be contained
    >>> in 1 or 2, if reasonably complete examples are given.
    >>> 
    >>> Case 1 is handled by Depends.
    >> 
    >> I think there is an important distinction between a dependency needed
    >> for the package to function and a dependency needed to demonstrate
    >> said functionality via an example or vignette.  The former is what
    >> Depends is about, the latter is something else (Suggests).

    FrL> Sorry to join in late, I am at the Compstat conference and have limited
    FrL> email access. What Seth describes in the above paragraph is exactly what I
    FrL> had in mind when splitting the single Depends field we had into Depends
    FrL> and Suggests: Depends are a necessity to run the package, Suggests is nice
    FrL> to have but not necessary. If you know how to use a package you may the
    FrL> decide not to install a package that is only suggested, but

    FrL> * may not be interested to execute the examples,
    FrL> * know that you never need the extra functionality
    FrL> * ...

    FrL> so it should not be auto-installed unless you ask for
    FrL> it (the default could also be the other way round, the
    FrL> point is that it should be possible to have package foo
    FrL> but not the packages it only suggests). On CRAN we
    FrL> check with all suggestions to test all bits and pieces,
    FrL> having an option in R CMD check to test only with
    FrL> suggests may be nice, if there is use for it.

Yes.
However, I see two (related) problems with the current 'Suggests'
and that's why I opened this thread proposing to have a 
(what I now would want to simply call)  'canUse' :

1) For 'R CMD check' (and hence CRAN checking),
   Packages in 'Suggests' must be require()able, and
   hence all testing only happens *with* the suggested packages
   being there, and not without.

2) "Suggests"  suggests to the human reader of DESCRIPTION that
   the package authors suggest to also install the packages listed
   there.
   Now there are cases, I (as package author) want to show some
   stuff, or even provide compatibility functionality for some
   packages that are related to mine, but which I really do not ``suggest''
   to also be installed, e.g., because the other packages do
   similar stuff as mine, but I believe my package to be
   superior.  In such a case, I may, e.g., want to provide 
   functions for porting the other package classes to my package's.

Duncan Murdoch has proposed to take care of "1)" by
still only use 'Suggests' but adding another option to 'R CMD
check', let's say   --no-suggests  which would run all the
checks without having the suggested packages available  
--- something not quite easy to implement, BTW:
Imagine the typical windows users who (AFAICS) always only use
one library into which they install all packages.
How do you want the 
    if( require(<my_suggested_package>) ) {
       ...
    }
clause *not* to be triggered in such a case ?
I do agree quite a bit that such a '--no-suggests' option would
be very useful for 'R CMD check' -- in addition to my proposal.

Further, I think "2)" above is not taken care of anyway.
After all the interesting statements and alternative proposals,
I'm still proposing to introduce a  'canUse'  field for DESCRIPTION
which
  a) has a "human-readable intent" of being weaker than 'Suggests'
  b) will not require its packages to be available for R CMD check
  c) conveys extra information about the package's context, to humans, and
  d) will potentially be used in automated or semi-manual 
     ``R package database management''

Martin

    FrL> Ad the wording in the manual: obviously that is not
    FrL> optimal (otherwise no need for parts of this email
    FrL> thread), perhaps somebody else than the original author
    FrL> (=me) could try to improve it for 2.4 after this
    FrL> clarifications?  Otherwise I will give it a shot next
    FrL> week after I return from Rome.



From Kurt.Hornik at wu-wien.ac.at  Wed Aug 30 10:42:40 2006
From: Kurt.Hornik at wu-wien.ac.at (Kurt Hornik)
Date: Wed, 30 Aug 2006 10:42:40 +0200
Subject: [Rd] 'CanMakeUseOf' field  [was ".. Add 'fields' argument ..]
In-Reply-To: <44F46112.7060809@stats.uwo.ca>
References: <m2wt8sgyo0.fsf@ziti.fhcrc.org>
	<17651.65163.240840.365787@stat.math.ethz.ch>
	<44F4473D.9030203@bank-banque-canada.ca>
	<17652.19292.998960.686119@stat.math.ethz.ch>
	<44F46112.7060809@stats.uwo.ca>
Message-ID: <17653.20352.330891.556094@mithrandir.hornik.net>

>>>>> Duncan Murdoch writes:

> On 8/29/2006 10:12 AM, Martin Maechler wrote:
>>>>>>> "PaulG" == Paul Gilbert <pgilbert at bank-banque-canada.ca>
>>>>>>> on Tue, 29 Aug 2006 09:55:09 -0400 writes:
>> 
PaulG> Martin Maechler wrote:
>> >> ...
>> >> 
>> >> The idea was a field related to but weaker than 'Suggests' :
>> >> Something like
>> >> 'canMakeUseOf: <pkg1> [, <pkg2>, ... ]
>> >> which is *not* used in any QA/QC checking, but is purely
>> >> informative: If <pkg1> is require()able, then some examples may
>> >> look nicer, a function may provide another feature, etc, etc.
>> >> Alternatives to 'canMakeUseOf' would have been
>> >> 'isHappilyCoworkingWith' ....
>> >> 
>> >> What do you (R-devel listeners) think about the idea?
>> 
PaulG> I still like this idea.  I prefer 'canMakeUseOf' to 
PaulG> 'isHappilyCoworkingWith'  mainly because it seems less ambiguous.
>> 
>> Thanks, Paul.
>> As you may have guessed I should have put a  " :-) "  beside the
>> 'isHappily...' .
>> 
>> Of course, even 'CanMakeUseOf' {we should capitalize the first letter}
>> is rather too long, but before finding the proper term, we should
>> agree on usefulness of such a new field.
>> Apart from the use of package authors {some could note that
>> other packages make use of theirs, without already depending on
>> or suggesting them}, it's one of those fields that should help
>> in the future to explore (e.g. cluster or neighborhood-graph)
>> the growing high-dimensional space of R packages.

> I think we need an option to R CMD check rather than a new field in the 
> DESCRIPTION.  Currently a package could be mentioned for any of these 
> reasons:

> 1.  To make functions, examples or vignettes work
> 2.  To allow optional functionality in functions, examples or vignettes.
> 3.  Because it contains complementary functions.

> I don't think we really need to worry about 3:  it should be contained 
> in 1 or 2, if reasonably complete examples are given.

> Case 1 is handled by Depends.

> An author should check case 2 both with and without the suggested 
> package.  A user  might be satisfied with a simple check "as things 
> currently stand", or might want a stringent check like the author wants. 
>   The author can't know that, because it will depend on the user.

> So I don't think this is something that should be changed in 
> DESCRIPTION.  There should be an option to R CMD check to include or 
> exclude packages mentioned in the Suggests entry.  (I'd suggest a 3 
> level option:  check as though they are not available, check as 
> currently installed, require that they be available.)

An internal environment variable called

  _R_CHECK_FORCE_SUGGESTS_

which controls this has been in place for quite some time now.  One can
trivially add a Perl R CMD check configure variable for it.  I am a bit
hesitant to add a --force-suggests cola to R CMD check, as this
hardwires a legacy dependency model which may not be up to future needs.

As an aside, I have never understood whe developers have need for such
an option (as I would have assumed that they'd typically try to check
all of their code).

-k



From Kurt.Hornik at wu-wien.ac.at  Wed Aug 30 11:03:49 2006
From: Kurt.Hornik at wu-wien.ac.at (Kurt Hornik)
Date: Wed, 30 Aug 2006 11:03:49 +0200
Subject: [Rd] 'CanMakeUseOf' field
In-Reply-To: <17653.20470.199569.870638@stat.math.ethz.ch>
References: <m2wt8sgyo0.fsf@ziti.fhcrc.org>
	<17651.65163.240840.365787@stat.math.ethz.ch>
	<44F4473D.9030203@bank-banque-canada.ca>
	<17652.19292.998960.686119@stat.math.ethz.ch>
	<44F46112.7060809@stats.uwo.ca> <m2d5ajedon.fsf@ziti.fhcrc.org>
	<63945.151.100.49.234.1156923253.squirrel@webmail.lrz-muenchen.de>
	<17653.20470.199569.870638@stat.math.ethz.ch>
Message-ID: <17653.21621.74689.138434@mithrandir.hornik.net>

>>>>> Martin Maechler writes:

>>>>> "FrL" == friedrich leisch <friedrich.leisch at stat.uni-muenchen.de>
>>>>>     on Wed, 30 Aug 2006 09:34:13 +0200 (MEST) writes:

>>> Duncan Murdoch <murdoch at stats.uwo.ca> writes:
>>>> I think we need an option to R CMD check rather than a new field in the
>>>> DESCRIPTION.  Currently a package could be mentioned for any of these
>>>> reasons:
>>>> 
>>>> 1.  To make functions, examples or vignettes work
>>>> 2.  To allow optional functionality in functions, examples or vignettes.
>>>> 3.  Because it contains complementary functions.
>>>> 
>>>> I don't think we really need to worry about 3:  it should be contained
>>>> in 1 or 2, if reasonably complete examples are given.
>>>> 
>>>> Case 1 is handled by Depends.
>>> 
>>> I think there is an important distinction between a dependency needed
>>> for the package to function and a dependency needed to demonstrate
>>> said functionality via an example or vignette.  The former is what
>>> Depends is about, the latter is something else (Suggests).

FrL> Sorry to join in late, I am at the Compstat conference and have limited
FrL> email access. What Seth describes in the above paragraph is exactly what I
FrL> had in mind when splitting the single Depends field we had into Depends
FrL> and Suggests: Depends are a necessity to run the package, Suggests is nice
FrL> to have but not necessary. If you know how to use a package you may the
FrL> decide not to install a package that is only suggested, but

FrL> * may not be interested to execute the examples,
FrL> * know that you never need the extra functionality
FrL> * ...

FrL> so it should not be auto-installed unless you ask for
FrL> it (the default could also be the other way round, the
FrL> point is that it should be possible to have package foo
FrL> but not the packages it only suggests). On CRAN we
FrL> check with all suggestions to test all bits and pieces,
FrL> having an option in R CMD check to test only with
FrL> suggests may be nice, if there is use for it.

> ...

> Further, I think "2)" above is not taken care of anyway.
> After all the interesting statements and alternative proposals,
> I'm still proposing to introduce a  'canUse'  field for DESCRIPTION
> which
>   a) has a "human-readable intent" of being weaker than 'Suggests'
>   b) will not require its packages to be available for R CMD check
>   c) conveys extra information about the package's context, to humans, and
>   d) will potentially be used in automated or semi-manual 
>      ``R package database management''

Martin,

I don't think such info should be human-readable.  It should be in a
standardized format so that we can have tools to compute on such
information.  E.g., a simple subject-predicate-object model as used in
the W3C's semantic web.

I am slightly nervous about moving in this direction, though, as I think
it implies that repository maintainers deploy processes which validate
the semantics of the package metadata.  But eventually we will have to
do this in any case.

-k



From martin.becker at mx.uni-saarland.de  Wed Aug 30 12:07:07 2006
From: martin.becker at mx.uni-saarland.de (Martin Becker)
Date: Wed, 30 Aug 2006 12:07:07 +0200
Subject: [Rd] Speed of runif() on different Operating Systems
In-Reply-To: <Pine.LNX.4.64.0608281535580.652@gannet.stats.ox.ac.uk>
References: <44F2FC78.3040106@mx.uni-saarland.de>
	<Pine.LNX.4.64.0608281535580.652@gannet.stats.ox.ac.uk>
Message-ID: <44F5634B.8090801@mx.uni-saarland.de>

Prof Brian Ripley wrote:
> No one else seems to have responded to this.
>
> Please see `Writing R Extensions' for how to time things in R.
>
>   
Thank you very much for the pointer to system.time(), although I read 
most of 'Writing R Extensions', I must have overlooked this (very 
useful) part. Nevertheless I was aware, that Sys.time() does not measure 
cpu time (that's why I included the information, that measuring time 
with Rprof() yields similar results, I had better included the output of 
Rprof indeed), but I was the only user on both (idle) dual core systems 
and thus expected a high correlation between the differences of 
Sys.time() and the cpu time actually used.
> For things like this, the fine details of how well the compiler keeps the 
> pipelines and cache filled are important, as is the cache size and 
> memory speed.  Using
>
> system.time(for (i in 1:500) ttt <- runif(1000000))
>
> your Linux time looks slow, indeed slower than the only 32-bit Linux box I 
> have left (a 2GHz 512Kb cache Xeon) and 2.5x slower than a 64-bit R on an 
> 2.2GHz Opteron (which is doing a lot of other work and so only giving 
> about 30% of one of its processors to R: the elapsed time was much 
> longer).
>
> The binary distribution of R for Windows is compiled with -O3: for some 
> tasks it makes a lot of difference and this might just be one.
>
>   
Thank you very much for this valuable piece of information, it explains 
a big part of the speed difference: recompiling R on my linux box with 
-O3 significantly increases speed of runif(), now the linux box needs 
less than 40% more time than the WinXP system.
> However, what can you usefully do in R with 5e8 random uniforms in 
> anything like a minute, let alone the aggregate time this list will spend 
> reading your question?  
The standard method for simulating final, minimal and maximal values of 
Brownian Motion relies on a (discrete) n-step random walk approximation, 
where n has to be chosen very large (typically n=100 000) to keep the 
bias induced by the approximation "small enough" for certain 
applications. So if you want to do MC option pricing of e.g. double 
barrier options, 5e8 random uniforms are needed for 5 000 draws of 
final, minimal and maximal value, which is still a quite small number of 
draws in MC applications. I am working on a faster simulation method and 
of course I want to compare the speed of the new and (old) standard 
method, that's why I needed large numbers of random uniforms. I thought 
that the particular application is not of interest for this list, so I 
left it out in my initial submission. I apologise, if my submission was 
off-topic in this mailing list.
> If it matters to you, investigate the code your 
> compiler creates.  (The ATLAS developers report very poor performance on 
> certain Pentiums for certain versions of gcc4.)
>
>   
Thank you again for the useful hints!

Regards,

  Martin Becker



From ripley at stats.ox.ac.uk  Wed Aug 30 12:33:19 2006
From: ripley at stats.ox.ac.uk (Prof Brian Ripley)
Date: Wed, 30 Aug 2006 11:33:19 +0100 (BST)
Subject: [Rd] Speed of runif() on different Operating Systems
In-Reply-To: <44F5634B.8090801@mx.uni-saarland.de>
References: <44F2FC78.3040106@mx.uni-saarland.de>
	<Pine.LNX.4.64.0608281535580.652@gannet.stats.ox.ac.uk>
	<44F5634B.8090801@mx.uni-saarland.de>
Message-ID: <Pine.LNX.4.64.0608301110390.27066@gannet.stats.ox.ac.uk>

On Wed, 30 Aug 2006, Martin Becker wrote:

> Prof Brian Ripley wrote:
> > No one else seems to have responded to this.
> >
> > Please see `Writing R Extensions' for how to time things in R.
> >   
> Thank you very much for the pointer to system.time(), although I read most of
> 'Writing R Extensions', I must have overlooked this (very useful) part.
> Nevertheless I was aware, that Sys.time() does not measure cpu time (that's
> why I included the information, that measuring time with Rprof() yields
> similar results, I had better included the output of Rprof indeed), but I was
> the only user on both (idle) dual core systems and thus expected a high
> correlation between the differences of Sys.time() and the cpu time actually
> used.

Actually, Rprof does time elapsed time on Windows.  Calling gc() first is 
important, and part of what system.time() does.

> > For things like this, the fine details of how well the compiler keeps the
> > pipelines and cache filled are important, as is the cache size and memory
> > speed.  Using
> >
> > system.time(for (i in 1:500) ttt <- runif(1000000))
> >
> > your Linux time looks slow, indeed slower than the only 32-bit Linux box I
> > have left (a 2GHz 512Kb cache Xeon) and 2.5x slower than a 64-bit R on an
> > 2.2GHz Opteron (which is doing a lot of other work and so only giving about
> > 30% of one of its processors to R: the elapsed time was much longer).
> >
> > The binary distribution of R for Windows is compiled with -O3: for some
> > tasks it makes a lot of difference and this might just be one.
> >
> Thank you very much for this valuable piece of information, it explains a big
> part of the speed difference: recompiling R on my linux box with -O3
> significantly increases speed of runif(), now the linux box needs less than
> 40% more time than the WinXP system.
> > However, what can you usefully do in R with 5e8 random uniforms in anything
> > like a minute, let alone the aggregate time this list will spend reading
> > your question?  
> The standard method for simulating final, minimal and maximal values of
> Brownian Motion relies on a (discrete) n-step random walk approximation, where
> n has to be chosen very large (typically n=100 000) to keep the bias induced
> by the approximation "small enough" for certain applications. So if you want
> to do MC option pricing of e.g. double barrier options, 5e8 random uniforms
> are needed for 5 000 draws of final, minimal and maximal value, which is still
> a quite small number of draws in MC applications. I am working on a faster
> simulation method and of course I want to compare the speed of the new and
> (old) standard method, that's why I needed large numbers of random uniforms. I
> thought that the particular application is not of interest for this list, so I
> left it out in my initial submission. I apologise, if my submission was
> off-topic in this mailing list.

Isn't that usually done by adding rnorm()s and not runif()s?

There are much better algorithms for simulating Brownian motion
barrier-crossing statistics to high accuracy.  It's not my field, but one 
idea is to use scaled Brownian bridge to infill time when the process is 
near a boundary.

Sometimes the R helpers spend a long time answering the wrong question, 
which is why it always helps to give the real one.

> > If it matters to you, investigate the code your compiler creates.  (The
> > ATLAS developers report very poor performance on certain Pentiums for
> > certain versions of gcc4.)
> >
> >   
> Thank you again for the useful hints!
> 
> Regards,
> 
>  Martin Becker
> 
> 

-- 
Brian D. Ripley,                  ripley at stats.ox.ac.uk
Professor of Applied Statistics,  http://www.stats.ox.ac.uk/~ripley/
University of Oxford,             Tel:  +44 1865 272861 (self)
1 South Parks Road,                     +44 1865 272866 (PA)
Oxford OX1 3TG, UK                Fax:  +44 1865 272595



From murdoch at stats.uwo.ca  Wed Aug 30 12:35:55 2006
From: murdoch at stats.uwo.ca (Duncan Murdoch)
Date: Wed, 30 Aug 2006 06:35:55 -0400
Subject: [Rd] 'CanMakeUseOf' field
In-Reply-To: <63679.151.100.49.234.1156922510.squirrel@webmail.lrz-muenchen.de>
References: <m2wt8sgyo0.fsf@ziti.fhcrc.org>	<17651.65163.240840.365787@stat.math.ethz.ch>	<44F4473D.9030203@bank-banque-canada.ca>	<17652.19292.998960.686119@stat.math.ethz.ch>	<44F46112.7060809@stats.uwo.ca>	<m2d5ajedon.fsf@ziti.fhcrc.org>	<44F47295.2050207@stats.uwo.ca>	<m28xl7ctt3.fsf@ziti.fhcrc.org>	<44F4865B.5010107@bank-banque-canada.ca>	<44F48E3F.6070903@stats.uwo.ca>
	<44F49FE1.6040002@bank-banque-canada.ca>
	<44F4A1CD.50800@stats.uwo.ca>
	<63679.151.100.49.234.1156922510.squirrel@webmail.lrz-muenchen.de>
Message-ID: <44F56A0B.9090100@stats.uwo.ca>

On 8/30/2006 3:21 AM, friedrich.leisch at stat.uni-muenchen.de wrote:
>> On 8/29/2006 4:13 PM, Paul Gilbert wrote:
>>> Duncan Murdoch wrote:
> 
> [...]
> 
>> This doesn't address the problem of someone who hasn't got the package
>> installed yet, though perhaps CRAN could put a version of that man page
>> (or all of them) online for browsing.  Unfortunately this hasn't
>> happened yet, but maybe we'll get to it before 2.5.0.
> 
> The help pages are available on CRAN in PDF format, if there are strong
> preferences to also get the HTML version online that should not be a major
> problem.

Just to clarify: "this hasn't happened yet" was meant to apply to the 
earlier part of my message, the changes necessary to make the package 
man page easier to maintain.

Duncan Murdoch



From murdoch at stats.uwo.ca  Wed Aug 30 12:44:52 2006
From: murdoch at stats.uwo.ca (Duncan Murdoch)
Date: Wed, 30 Aug 2006 06:44:52 -0400
Subject: [Rd] Speed of runif() on different Operating Systems
In-Reply-To: <Pine.LNX.4.64.0608301110390.27066@gannet.stats.ox.ac.uk>
References: <44F2FC78.3040106@mx.uni-saarland.de>	<Pine.LNX.4.64.0608281535580.652@gannet.stats.ox.ac.uk>	<44F5634B.8090801@mx.uni-saarland.de>
	<Pine.LNX.4.64.0608301110390.27066@gannet.stats.ox.ac.uk>
Message-ID: <44F56C24.4040108@stats.uwo.ca>

On 8/30/2006 6:33 AM, Prof Brian Ripley wrote:
> On Wed, 30 Aug 2006, Martin Becker wrote:
> 
>> Prof Brian Ripley wrote:
>>> No one else seems to have responded to this.
>>>
>>> Please see `Writing R Extensions' for how to time things in R.
>>>   
>> Thank you very much for the pointer to system.time(), although I read most of
>> 'Writing R Extensions', I must have overlooked this (very useful) part.
>> Nevertheless I was aware, that Sys.time() does not measure cpu time (that's
>> why I included the information, that measuring time with Rprof() yields
>> similar results, I had better included the output of Rprof indeed), but I was
>> the only user on both (idle) dual core systems and thus expected a high
>> correlation between the differences of Sys.time() and the cpu time actually
>> used.
> 
> Actually, Rprof does time elapsed time on Windows.  Calling gc() first is 
> important, and part of what system.time() does.
> 
>>> For things like this, the fine details of how well the compiler keeps the
>>> pipelines and cache filled are important, as is the cache size and memory
>>> speed.  Using
>>>
>>> system.time(for (i in 1:500) ttt <- runif(1000000))
>>>
>>> your Linux time looks slow, indeed slower than the only 32-bit Linux box I
>>> have left (a 2GHz 512Kb cache Xeon) and 2.5x slower than a 64-bit R on an
>>> 2.2GHz Opteron (which is doing a lot of other work and so only giving about
>>> 30% of one of its processors to R: the elapsed time was much longer).
>>>
>>> The binary distribution of R for Windows is compiled with -O3: for some
>>> tasks it makes a lot of difference and this might just be one.
>>>
>> Thank you very much for this valuable piece of information, it explains a big
>> part of the speed difference: recompiling R on my linux box with -O3
>> significantly increases speed of runif(), now the linux box needs less than
>> 40% more time than the WinXP system.
>>> However, what can you usefully do in R with 5e8 random uniforms in anything
>>> like a minute, let alone the aggregate time this list will spend reading
>>> your question?  
>> The standard method for simulating final, minimal and maximal values of
>> Brownian Motion relies on a (discrete) n-step random walk approximation, where
>> n has to be chosen very large (typically n=100 000) to keep the bias induced
>> by the approximation "small enough" for certain applications. So if you want
>> to do MC option pricing of e.g. double barrier options, 5e8 random uniforms
>> are needed for 5 000 draws of final, minimal and maximal value, which is still
>> a quite small number of draws in MC applications. I am working on a faster
>> simulation method and of course I want to compare the speed of the new and
>> (old) standard method, that's why I needed large numbers of random uniforms. I
>> thought that the particular application is not of interest for this list, so I
>> left it out in my initial submission. I apologise, if my submission was
>> off-topic in this mailing list.
> 
> Isn't that usually done by adding rnorm()s and not runif()s?
> 
> There are much better algorithms for simulating Brownian motion
> barrier-crossing statistics to high accuracy.  It's not my field, but one 
> idea is to use scaled Brownian bridge to infill time when the process is 
> near a boundary.

McLeish published algorithms to simulate these directly in a recent 
issue of CJS.  I don't have the reference handy, but I think it's 2004 
or 2005.

Duncan Murdoch

> 
> Sometimes the R helpers spend a long time answering the wrong question, 
> which is why it always helps to give the real one.
> 
>>> If it matters to you, investigate the code your compiler creates.  (The
>>> ATLAS developers report very poor performance on certain Pentiums for
>>> certain versions of gcc4.)
>>>
>>>   
>> Thank you again for the useful hints!
>>
>> Regards,
>>
>>  Martin Becker
>>
>>
>



From kellymj1 at cf.ac.uk  Wed Aug 30 13:25:45 2006
From: kellymj1 at cf.ac.uk (kellymj1 at cf.ac.uk)
Date: Wed, 30 Aug 2006 13:25:45 +0200 (CEST)
Subject: [Rd] Inaccuracy in seq() (PR#9189)
Message-ID: <20060830112545.EC5042245F@slim.kubism.ku.dk>

Full_Name: Mark James Kelly
Version: 2.3.1
OS: Windows
Submission from: (NULL) (193.63.127.224)


Sequence produces slightly inaccurate results. 

#This (supposedely) creates a sequence 0.060,0.065,0.070.....0.30
thingnor=(seq(0.06,0.30,by=0.005))

#This does the same but rounds to three decimals
thingrou=round(seq(0.06,0.30,by=0.005),3)

#This is another vector, the same length as the two above, with 24 zeroes, then
0.070, then 24 zeroes
otherthing=c(rep(0,24),0.070,rep(0,24))


#This fails to select the entries equal to 0.070 
otherthing[otherthing==thingnor[3]]

#This gives the correct answer
otherthing[otherthing==thingrou[3]]


#This compares the two sequences (which should be identical)
(thingnor-thingrou)



From martin.becker at mx.uni-saarland.de  Wed Aug 30 13:31:21 2006
From: martin.becker at mx.uni-saarland.de (Martin Becker)
Date: Wed, 30 Aug 2006 13:31:21 +0200
Subject: [Rd] Speed of runif() on different Operating Systems
In-Reply-To: <Pine.LNX.4.64.0608301110390.27066@gannet.stats.ox.ac.uk>
References: <44F2FC78.3040106@mx.uni-saarland.de>
	<Pine.LNX.4.64.0608281535580.652@gannet.stats.ox.ac.uk>
	<44F5634B.8090801@mx.uni-saarland.de>
	<Pine.LNX.4.64.0608301110390.27066@gannet.stats.ox.ac.uk>
Message-ID: <44F57709.10406@mx.uni-saarland.de>

Prof Brian Ripley schrieb:
>> The standard method for simulating final, minimal and maximal values of
>> Brownian Motion relies on a (discrete) n-step random walk approximation, where
>> n has to be chosen very large (typically n=100 000) to keep the bias induced
>> by the approximation "small enough" for certain applications. So if you want
>> to do MC option pricing of e.g. double barrier options, 5e8 random uniforms
>> are needed for 5 000 draws of final, minimal and maximal value, which is still
>> a quite small number of draws in MC applications. I am working on a faster
>> simulation method and of course I want to compare the speed of the new and
>> (old) standard method, that's why I needed large numbers of random uniforms. I
>> thought that the particular application is not of interest for this list, so I
>> left it out in my initial submission. I apologise, if my submission was
>> off-topic in this mailing list.
>>     
>
> Isn't that usually done by adding rnorm()s and not runif()s?
>
> There are much better algorithms for simulating Brownian motion
> barrier-crossing statistics to high accuracy.  It's not my field, but one 
> idea is to use scaled Brownian bridge to infill time when the process is 
> near a boundary.
>
> Sometimes the R helpers spend a long time answering the wrong question, 
> which is why it always helps to give the real one.
>   
As I wrote, I am working on (an implementation of) a faster method, 
which indeed uses Brownian bridge and related concepts, and I generated 
the huge number of random uniforms (random normals are better but still 
slower) just for speed comparison. So for me, the real question was 
about the speed difference of runif().

Thanks again, regards,

  Martin



From Roger.Bivand at nhh.no  Wed Aug 30 13:43:53 2006
From: Roger.Bivand at nhh.no (Roger Bivand)
Date: Wed, 30 Aug 2006 13:43:53 +0200 (CEST)
Subject: [Rd] Inaccuracy in seq() (PR#9189)
In-Reply-To: <20060830112545.EC5042245F@slim.kubism.ku.dk>
Message-ID: <Pine.LNX.4.44.0608301341250.5562-100000@reclus.nhh.no>

On Wed, 30 Aug 2006 kellymj1 at cf.ac.uk wrote:

> Full_Name: Mark James Kelly
> Version: 2.3.1
> OS: Windows
> Submission from: (NULL) (193.63.127.224)
> 
> 
> Sequence produces slightly inaccurate results. 

Not a bug, but a FAQ (7.31):

http://cran.r-project.org/doc/FAQ/R-FAQ.html#Why-doesn_0027t-R-think-these-numbers-are-equal_003f

Try:

otherthing[25]==thingnor[3]
identical(otherthing[25], thingnor[3])
all.equal(otherthing[25], thingnor[3])

?all.equal


> 
> #This (supposedely) creates a sequence 0.060,0.065,0.070.....0.30
> thingnor=(seq(0.06,0.30,by=0.005))
> 
> #This does the same but rounds to three decimals
> thingrou=round(seq(0.06,0.30,by=0.005),3)
> 
> #This is another vector, the same length as the two above, with 24 zeroes, then
> 0.070, then 24 zeroes
> otherthing=c(rep(0,24),0.070,rep(0,24))
> 
> 
> #This fails to select the entries equal to 0.070 
> otherthing[otherthing==thingnor[3]]
> 
> #This gives the correct answer
> otherthing[otherthing==thingrou[3]]
> 
> 
> #This compares the two sequences (which should be identical)
> (thingnor-thingrou)
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
> 

-- 
Roger Bivand
Economic Geography Section, Department of Economics, Norwegian School of
Economics and Business Administration, Helleveien 30, N-5045 Bergen,
Norway. voice: +47 55 95 93 55; fax +47 55 95 95 43
e-mail: Roger.Bivand at nhh.no



From martin.becker at mx.uni-saarland.de  Wed Aug 30 13:44:20 2006
From: martin.becker at mx.uni-saarland.de (Martin Becker)
Date: Wed, 30 Aug 2006 13:44:20 +0200
Subject: [Rd] Speed of runif() on different Operating Systems
In-Reply-To: <44F56C24.4040108@stats.uwo.ca>
References: <44F2FC78.3040106@mx.uni-saarland.de>	<Pine.LNX.4.64.0608281535580.652@gannet.stats.ox.ac.uk>	<44F5634B.8090801@mx.uni-saarland.de>
	<Pine.LNX.4.64.0608301110390.27066@gannet.stats.ox.ac.uk>
	<44F56C24.4040108@stats.uwo.ca>
Message-ID: <44F57A14.4020905@mx.uni-saarland.de>

Duncan Murdoch schrieb:
>
> McLeish published algorithms to simulate these directly in a recent 
> issue of CJS.  I don't have the reference handy, but I think it's 2004 
> or 2005.
>
> Duncan Murdoch
Thank you for this reference, I think it is the 2002 article "*Highs and 
lows: Some properties of the extremes of a diffusion and applications in 
finance"*.
This article perfectly covers simulation of final and minimal or final 
and maximal value and gives some proposals for the simulation of the 
third component (max resp. min). In principle my implementation of the 
simulation of the first two components coincides with the algorithm 
given in this paper.

Thanks again,

  Martin



From ripley at stats.ox.ac.uk  Wed Aug 30 13:52:12 2006
From: ripley at stats.ox.ac.uk (Prof Brian Ripley)
Date: Wed, 30 Aug 2006 12:52:12 +0100 (BST)
Subject: [Rd] Inaccuracy in seq() (PR#9189)
In-Reply-To: <20060830112545.EC5042245F@slim.kubism.ku.dk>
References: <20060830112545.EC5042245F@slim.kubism.ku.dk>
Message-ID: <Pine.LNX.4.64.0608301228380.10345@gannet.stats.ox.ac.uk>

See the FAQ Q7.31: 0.07 is not exactly representable on your computer.

0.060 + 2*0.005 != 0.070 in computer arithmetic:

> options(digits=18)
> 0.060
[1] 0.06
> 0.070
[1] 0.070000000000000007
> 0.060+2*0.005
[1] 0.06999999999999999
> 0.06+2*0.005 -0.07
[1] -1.3877787807814457e-17
> .Machine$double.eps * 0.07
[1] 1.5543122344752193e-17

On Wed, 30 Aug 2006, kellymj1 at cf.ac.uk wrote:

> Full_Name: Mark James Kelly
> Version: 2.3.1
> OS: Windows
> Submission from: (NULL) (193.63.127.224)
> 
> 
> Sequence produces slightly inaccurate results. 

sequence() is a different function in R.

> #This (supposedely) creates a sequence 0.060,0.065,0.070.....0.30
> thingnor=(seq(0.06,0.30,by=0.005))
> 
> #This does the same but rounds to three decimals
> thingrou=round(seq(0.06,0.30,by=0.005),3)
> 
> #This is another vector, the same length as the two above, with 24 zeroes, then
> 0.070, then 24 zeroes
> otherthing=c(rep(0,24),0.070,rep(0,24))
> 
> 
> #This fails to select the entries equal to 0.070 
> otherthing[otherthing==thingnor[3]]
> 
> #This gives the correct answer
> otherthing[otherthing==thingrou[3]]
> 
> 
> #This compares the two sequences (which should be identical)
> (thingnor-thingrou)

Not according to FAQ Q7.31 and help("==").

-- 
Brian D. Ripley,                  ripley at stats.ox.ac.uk
Professor of Applied Statistics,  http://www.stats.ox.ac.uk/~ripley/
University of Oxford,             Tel:  +44 1865 272861 (self)
1 South Parks Road,                     +44 1865 272866 (PA)
Oxford OX1 3TG, UK                Fax:  +44 1865 272595



From friedrich.leisch at stat.uni-muenchen.de  Wed Aug 30 13:53:18 2006
From: friedrich.leisch at stat.uni-muenchen.de (friedrich.leisch at stat.uni-muenchen.de)
Date: Wed, 30 Aug 2006 13:53:18 +0200 (MEST)
Subject: [Rd] 'CanMakeUseOf' field
In-Reply-To: <44F56A0B.9090100@stats.uwo.ca>
References: <m2wt8sgyo0.fsf@ziti.fhcrc.org>	<17651.65163.240840.365787@stat.math.ethz.ch>	<44F4473D.9030203@bank-banque-canada.ca>	<17652.19292.998960.686119@stat.math.ethz.ch>	<44F46112.7060809@stats.uwo.ca>	<m2d5ajedon.fsf@ziti.fhcrc.org>	<44F47295.2050207@stats.uwo.ca>	<m28xl7ctt3.fsf@ziti.fhcrc.org>	<44F4865B.5010107@bank-banque-canada.ca>	<44F48E3F.6070903@stats.uwo.ca>
	<44F49FE1.6040002@bank-banque-canada.ca>   
	<44F4A1CD.50800@stats.uwo.ca>
	<63679.151.100.49.234.1156922510.squirrel@webmail.lrz-muenchen.de>
	<44F56A0B.9090100@stats.uwo.ca>
Message-ID: <20291.151.100.147.28.1156938798.squirrel@webmail.lrz-muenchen.de>

> On 8/30/2006 3:21 AM, friedrich.leisch at stat.uni-muenchen.de wrote:
>>> On 8/29/2006 4:13 PM, Paul Gilbert wrote:
>>>> Duncan Murdoch wrote:
>>
>> [...]
>>
>>> This doesn't address the problem of someone who hasn't got the package
>>> installed yet, though perhaps CRAN could put a version of that man page
>>> (or all of them) online for browsing.  Unfortunately this hasn't
>>> happened yet, but maybe we'll get to it before 2.5.0.
>>
>> The help pages are available on CRAN in PDF format, if there are strong
>> preferences to also get the HTML version online that should not be a
>> major
>> problem.
>
> Just to clarify: "this hasn't happened yet" was meant to apply to the
> earlier part of my message, the changes necessary to make the package
> man page easier to maintain.

Sure, that is how I read it (sorry for not deleting your last sentence in
my reply). The question remains wether we should put HTML pages of all
package help pages on CRAN? Kurt builds them anyway when checking the
packages, so it is mostly a matter of copying them into the HTTP tree and
some linking.

Why we did not do it so far is that it really increases the size of
mirrors a lot, as those files would not be compressed (nd there are heaps
of them).

Best,
Fritz



From murdoch at stats.uwo.ca  Wed Aug 30 14:04:12 2006
From: murdoch at stats.uwo.ca (Duncan Murdoch)
Date: Wed, 30 Aug 2006 08:04:12 -0400
Subject: [Rd] Speed of runif() on different Operating Systems
In-Reply-To: <44F57A14.4020905@mx.uni-saarland.de>
References: <44F2FC78.3040106@mx.uni-saarland.de>	<Pine.LNX.4.64.0608281535580.652@gannet.stats.ox.ac.uk>	<44F5634B.8090801@mx.uni-saarland.de>
	<Pine.LNX.4.64.0608301110390.27066@gannet.stats.ox.ac.uk>
	<44F56C24.4040108@stats.uwo.ca>
	<44F57A14.4020905@mx.uni-saarland.de>
Message-ID: <44F57EBC.1030207@stats.uwo.ca>

On 8/30/2006 7:44 AM, Martin Becker wrote:
> Duncan Murdoch schrieb:
>>
>> McLeish published algorithms to simulate these directly in a recent 
>> issue of CJS.  I don't have the reference handy, but I think it's 2004 
>> or 2005.
>>
>> Duncan Murdoch
> Thank you for this reference, I think it is the 2002 article "*Highs and 
> lows: Some properties of the extremes of a diffusion and applications in 
> finance"*.

Yes, that's it.

Duncan Murdoch

> This article perfectly covers simulation of final and minimal or final 
> and maximal value and gives some proposals for the simulation of the 
> third component (max resp. min). In principle my implementation of the 
> simulation of the first two components coincides with the algorithm 
> given in this paper.
> 
> Thanks again,
> 
>   Martin



From friedrich.leisch at stat.uni-muenchen.de  Wed Aug 30 14:04:53 2006
From: friedrich.leisch at stat.uni-muenchen.de (friedrich.leisch at stat.uni-muenchen.de)
Date: Wed, 30 Aug 2006 14:04:53 +0200 (MEST)
Subject: [Rd] 'CanMakeUseOf' field
In-Reply-To: <17653.20470.199569.870638@stat.math.ethz.ch>
References: <m2wt8sgyo0.fsf@ziti.fhcrc.org>
	<17651.65163.240840.365787@stat.math.ethz.ch>
	<44F4473D.9030203@bank-banque-canada.ca>
	<17652.19292.998960.686119@stat.math.ethz.ch>
	<44F46112.7060809@stats.uwo.ca> <m2d5ajedon.fsf@ziti.fhcrc.org>
	<63945.151.100.49.234.1156923253.squirrel@webmail.lrz-muenchen.de>
	<17653.20470.199569.870638@stat.math.ethz.ch>
Message-ID: <22354.151.100.147.28.1156939493.squirrel@webmail.lrz-muenchen.de>

>>>>>> "FrL" == friedrich leisch <friedrich.leisch at stat.uni-muenchen.de>
>>>>>>     on Wed, 30 Aug 2006 09:34:13 +0200 (MEST) writes:
>
>     >> Duncan Murdoch <murdoch at stats.uwo.ca> writes:
>     >>> I think we need an option to R CMD check rather than a new field
> in the
>     >>> DESCRIPTION.  Currently a package could be mentioned for any of
> these
>     >>> reasons:
>     >>>
>     >>> 1.  To make functions, examples or vignettes work
>     >>> 2.  To allow optional functionality in functions, examples or
> vignettes.
>     >>> 3.  Because it contains complementary functions.
>     >>>
>     >>> I don't think we really need to worry about 3:  it should be
> contained
>     >>> in 1 or 2, if reasonably complete examples are given.
>     >>>
>     >>> Case 1 is handled by Depends.
>     >>
>     >> I think there is an important distinction between a dependency
> needed
>     >> for the package to function and a dependency needed to demonstrate
>     >> said functionality via an example or vignette.  The former is what
>     >> Depends is about, the latter is something else (Suggests).
>
>     FrL> Sorry to join in late, I am at the Compstat conference and have
> limited
>     FrL> email access. What Seth describes in the above paragraph is
> exactly what I
>     FrL> had in mind when splitting the single Depends field we had into
> Depends
>     FrL> and Suggests: Depends are a necessity to run the package,
> Suggests is nice
>     FrL> to have but not necessary. If you know how to use a package you
> may the
>     FrL> decide not to install a package that is only suggested, but
>
>     FrL> * may not be interested to execute the examples,
>     FrL> * know that you never need the extra functionality
>     FrL> * ...
>
>     FrL> so it should not be auto-installed unless you ask for
>     FrL> it (the default could also be the other way round, the
>     FrL> point is that it should be possible to have package foo
>     FrL> but not the packages it only suggests). On CRAN we
>     FrL> check with all suggestions to test all bits and pieces,
>     FrL> having an option in R CMD check to test only with
>     FrL> suggests may be nice, if there is use for it.
>
> Yes.
> However, I see two (related) problems with the current 'Suggests'
> and that's why I opened this thread proposing to have a
> (what I now would want to simply call)  'canUse' :
>
> 1) For 'R CMD check' (and hence CRAN checking),
>    Packages in 'Suggests' must be require()able, and
>    hence all testing only happens *with* the suggested packages
>    being there, and not without.
>
> 2) "Suggests"  suggests to the human reader of DESCRIPTION that
>    the package authors suggest to also install the packages listed
>    there.
>    Now there are cases, I (as package author) want to show some
>    stuff, or even provide compatibility functionality for some
>    packages that are related to mine, but which I really do not
> ``suggest''
>    to also be installed, e.g., because the other packages do
>    similar stuff as mine, but I believe my package to be
>    superior.  In such a case, I may, e.g., want to provide
>    functions for porting the other package classes to my package's.
>
> Duncan Murdoch has proposed to take care of "1)" by
> still only use 'Suggests' but adding another option to 'R CMD
> check', let's say   --no-suggests  which would run all the
> checks without having the suggested packages available
> --- something not quite easy to implement, BTW:
> Imagine the typical windows users who (AFAICS) always only use
> one library into which they install all packages.
> How do you want the
>     if( require(<my_suggested_package>) ) {
>        ...
>     }
> clause *not* to be triggered in such a case ?
> I do agree quite a bit that such a '--no-suggests' option would
> be very useful for 'R CMD check' -- in addition to my proposal.
>
> Further, I think "2)" above is not taken care of anyway.
> After all the interesting statements and alternative proposals,
> I'm still proposing to introduce a  'canUse'  field for DESCRIPTION
> which
>   a) has a "human-readable intent" of being weaker than 'Suggests'
>   b) will not require its packages to be available for R CMD check
>   c) conveys extra information about the package's context, to humans, and
>   d) will potentially be used in automated or semi-manual
>      ``R package database management''
>

Sorry, I did not want to give the impression of ignoring your proposal,
but wanted to clarify the ratio behid what we currently have first and
then ran out of time. I agree that a new field like you describe above can
be very usefull, the only thing I worry about is if it makes life really
easier or if it confuses users and developers even more.

Debian has Depends/Recommends/Suggests and after 10 years of using Debian
I would still have to got to the Debian guidelines to learn what the exact
difference between the latter two is. There certainly is a distinction,
and I knew it at some point in time, but when I read a package description
now I always condense it to needed/optional in my brain ... hence I went
for a two-layer model in R.

Fritz

PS: I would have immediate use for canUse, because flexclust "suggests"
cluster only because it has coercion methods for converting to flexclust
objects ... canUse certainly would describe better what is going on.



From edd at debian.org  Wed Aug 30 14:19:42 2006
From: edd at debian.org (Dirk Eddelbuettel)
Date: Wed, 30 Aug 2006 07:19:42 -0500
Subject: [Rd]  "Enhances"  (Was: 'CanMakeUseOf' field)
In-Reply-To: <22354.151.100.147.28.1156939493.squirrel@webmail.lrz-muenchen.de>
References: <m2wt8sgyo0.fsf@ziti.fhcrc.org>
	<17651.65163.240840.365787@stat.math.ethz.ch>
	<44F4473D.9030203@bank-banque-canada.ca>
	<17652.19292.998960.686119@stat.math.ethz.ch>
	<44F46112.7060809@stats.uwo.ca> <m2d5ajedon.fsf@ziti.fhcrc.org>
	<63945.151.100.49.234.1156923253.squirrel@webmail.lrz-muenchen.de>
	<17653.20470.199569.870638@stat.math.ethz.ch>
	<22354.151.100.147.28.1156939493.squirrel@webmail.lrz-muenchen.de>
Message-ID: <17653.33374.71038.862175@basebud.nulle.part>


On 30 August 2006 at 14:04, friedrich.leisch at stat.uni-muenchen.de wrote:
| Debian has Depends/Recommends/Suggests and after 10 years of using Debian
| I would still have to got to the Debian guidelines to learn what the exact
| difference between the latter two is. There certainly is a distinction,

It's all defined somewhere, but I by and large second the sentiment.

Now, while we're at it, Debian also has a field called "Enhances:" and IIRC
it provides a means to communicate a relationship 'the other way'.  Ie a
package foo, rather than being 'pulled in' by a package bar via a Depends,
makes itself available to bar.   That is useful as you can enhance the
'graph' structure without a change in the other package.  Maybe that would be
of use for R too?

Dirk

-- 
Hell, there are no rules here - we're trying to accomplish something. 
                                                  -- Thomas A. Edison



From jmc at r-project.org  Wed Aug 30 15:25:27 2006
From: jmc at r-project.org (John Chambers)
Date: Wed, 30 Aug 2006 09:25:27 -0400
Subject: [Rd] S4 Methods dispatch
Message-ID: <44F591C7.7070900@r-project.org>

A revision of r-devel 2.4.0 is being committed today with changes to 
method and class management.

The changes are internal but extensive.  All packages that use S4 
methods and classes need to be reinstalled from source to use the new 
version.

The main effects are to speed up method caching and dispatch, and to fix 
some problems with selecting inherited methods.  The new design is also 
cleaner, so we can experiment more easily in the future with changes for 
efficiency or semantics.

The change will mostly be noticeable in attaching packages with many 
methods.  The CPU time for attaching package Matrix, for example, goes 
down by about a factor of 7 compared to R 2.3.1, timed on a Mac G5.

The other major change is that now _all_ inherited methods are examined 
and one of the closest matches is chosen.  The old selection took the 
first candidate found, so the current version is better defined, and 
will also let us experiment with various tuning & strategies.

There is a draft paper describing method selection at
  http://developer.r-project.org/howMethodsWork.pdf
(It's a document in progress, so go back in a few days for a revised 
version.)

If a package uses inheritance for method selection with multiple 
arguments, there may well be changes in behavior.  We found examples in 
both methods itself and in Matrix that needed attention.

John



From sfalcon at fhcrc.org  Wed Aug 30 16:06:24 2006
From: sfalcon at fhcrc.org (Seth Falcon)
Date: Wed, 30 Aug 2006 07:06:24 -0700
Subject: [Rd] 'CanMakeUseOf' field
In-Reply-To: <17653.20352.330891.556094@mithrandir.hornik.net> (Kurt Hornik's
	message of "Wed, 30 Aug 2006 10:42:40 +0200")
References: <m2wt8sgyo0.fsf@ziti.fhcrc.org>
	<17651.65163.240840.365787@stat.math.ethz.ch>
	<44F4473D.9030203@bank-banque-canada.ca>
	<17652.19292.998960.686119@stat.math.ethz.ch>
	<44F46112.7060809@stats.uwo.ca>
	<17653.20352.330891.556094@mithrandir.hornik.net>
Message-ID: <m2fyfe5ndr.fsf@ziti.fhcrc.org>

Kurt Hornik <Kurt.Hornik at wu-wien.ac.at> writes:
> An internal environment variable called
>
>   _R_CHECK_FORCE_SUGGESTS_
>
> which controls this has been in place for quite some time now.  One can
> trivially add a Perl R CMD check configure variable for it.  I am a bit
> hesitant to add a --force-suggests cola to R CMD check, as this
> hardwires a legacy dependency model which may not be up to future needs.
>
> As an aside, I have never understood whe developers have need for such
> an option (as I would have assumed that they'd typically try to check
> all of their code).

This is not an aside, but the heart of the issue IMHO :-)

One case in which checking Suggests does not make sense is when a
package provides optional functionality that is platform specific.  A
given Suggests entry may only be available on platform A, but it still
is desirable to check the package on platform B.  Similar issues can
arise during development when a given Suggests entry stops working
with R-devel.

Further, if an item in Suggests means it is optional, then one
_should_ test that by testing the package without the optional packge
being available.  There are a few ways for a true dependency to sneak
into the code.  So I agree that typically developers want to test all
of their code, but that implies being able to check a package without
its Suggests being available (I realize this may be hard to implement,
but easily having R CMD check ignore Suggests is a good start).

And lastly, Suggests is currently used to list packages used for
extended examples in package vignettes and being able to easily
perform all other checks makes sense to me.


Bw,

+ seth



From murdoch at stats.uwo.ca  Wed Aug 30 16:30:01 2006
From: murdoch at stats.uwo.ca (Duncan Murdoch)
Date: Wed, 30 Aug 2006 10:30:01 -0400
Subject: [Rd] 'CanMakeUseOf' field
In-Reply-To: <17653.20470.199569.870638@stat.math.ethz.ch>
References: <m2wt8sgyo0.fsf@ziti.fhcrc.org>	<17651.65163.240840.365787@stat.math.ethz.ch>	<44F4473D.9030203@bank-banque-canada.ca>	<17652.19292.998960.686119@stat.math.ethz.ch>	<44F46112.7060809@stats.uwo.ca>
	<m2d5ajedon.fsf@ziti.fhcrc.org>	<63945.151.100.49.234.1156923253.squirrel@webmail.lrz-muenchen.de>
	<17653.20470.199569.870638@stat.math.ethz.ch>
Message-ID: <44F5A0E9.1010309@stats.uwo.ca>

On 8/30/2006 4:44 AM, Martin Maechler wrote:
>>>>>> "FrL" == friedrich leisch <friedrich.leisch at stat.uni-muenchen.de>
>>>>>>     on Wed, 30 Aug 2006 09:34:13 +0200 (MEST) writes:
> 
>     >> Duncan Murdoch <murdoch at stats.uwo.ca> writes:
>     >>> I think we need an option to R CMD check rather than a new field in the
>     >>> DESCRIPTION.  Currently a package could be mentioned for any of these
>     >>> reasons:
>     >>> 
>     >>> 1.  To make functions, examples or vignettes work
>     >>> 2.  To allow optional functionality in functions, examples or vignettes.
>     >>> 3.  Because it contains complementary functions.
>     >>> 
>     >>> I don't think we really need to worry about 3:  it should be contained
>     >>> in 1 or 2, if reasonably complete examples are given.
>     >>> 
>     >>> Case 1 is handled by Depends.
>     >> 
>     >> I think there is an important distinction between a dependency needed
>     >> for the package to function and a dependency needed to demonstrate
>     >> said functionality via an example or vignette.  The former is what
>     >> Depends is about, the latter is something else (Suggests).
> 
>     FrL> Sorry to join in late, I am at the Compstat conference and have limited
>     FrL> email access. What Seth describes in the above paragraph is exactly what I
>     FrL> had in mind when splitting the single Depends field we had into Depends
>     FrL> and Suggests: Depends are a necessity to run the package, Suggests is nice
>     FrL> to have but not necessary. If you know how to use a package you may the
>     FrL> decide not to install a package that is only suggested, but
> 
>     FrL> * may not be interested to execute the examples,
>     FrL> * know that you never need the extra functionality
>     FrL> * ...
> 
>     FrL> so it should not be auto-installed unless you ask for
>     FrL> it (the default could also be the other way round, the
>     FrL> point is that it should be possible to have package foo
>     FrL> but not the packages it only suggests). On CRAN we
>     FrL> check with all suggestions to test all bits and pieces,
>     FrL> having an option in R CMD check to test only with
>     FrL> suggests may be nice, if there is use for it.
> 
> Yes.
> However, I see two (related) problems with the current 'Suggests'
> and that's why I opened this thread proposing to have a 
> (what I now would want to simply call)  'canUse' :
> 
> 1) For 'R CMD check' (and hence CRAN checking),
>    Packages in 'Suggests' must be require()able, and
>    hence all testing only happens *with* the suggested packages
>    being there, and not without.
> 
> 2) "Suggests"  suggests to the human reader of DESCRIPTION that
>    the package authors suggest to also install the packages listed
>    there.
>    Now there are cases, I (as package author) want to show some
>    stuff, or even provide compatibility functionality for some
>    packages that are related to mine, but which I really do not ``suggest''
>    to also be installed, e.g., because the other packages do
>    similar stuff as mine, but I believe my package to be
>    superior.  In such a case, I may, e.g., want to provide 
>    functions for porting the other package classes to my package's.
> 
> Duncan Murdoch has proposed to take care of "1)" by
> still only use 'Suggests' but adding another option to 'R CMD
> check', let's say   --no-suggests  which would run all the
> checks without having the suggested packages available  
> --- something not quite easy to implement, BTW:
> Imagine the typical windows users who (AFAICS) always only use
> one library into which they install all packages.
> How do you want the 
>     if( require(<my_suggested_package>) ) {
>        ...
>     }
> clause *not* to be triggered in such a case ?

I would expect require to return FALSE.  This could be done by check 
installing a new version of require() (as it installs new T and F), or 
by the standard require() being modified to check a stop list before 
acting (I'd prefer this, because it would make it easier for developers 
to experiment with functions in different environments), or by playing 
around with the names of things in the library (probably not workable on 
Windows), etc.

I think the default check behaviour on CRAN should be my middle case: 
test based on what is currently installed, don't require packages listed 
in Suggests to be installed.  I'm not sure if that should be the default 
behaviour for R CMD check at the command line:  as Kurt said, usually a 
developer wants to check all of the code.

> I do agree quite a bit that such a '--no-suggests' option would
> be very useful for 'R CMD check' -- in addition to my proposal.

I think the other extreme (which I think is there now as 
_R_CHECK_FORCE_SUGGESTS_) is also important.

> 
> Further, I think "2)" above is not taken care of anyway.
> After all the interesting statements and alternative proposals,
> I'm still proposing to introduce a  'canUse'  field for DESCRIPTION
> which
>   a) has a "human-readable intent" of being weaker than 'Suggests'
>   b) will not require its packages to be available for R CMD check
>   c) conveys extra information about the package's context, to humans, and
>   d) will potentially be used in automated or semi-manual 
>      ``R package database management''

I think d) is important, but I think there are too many variations on a) 
and c) to hope that this would be used consistently.  As Fritz said, the 
thing he can remember (and what I would remember) is whether a package 
is mandatory or optional.  Fine variations within "optional" are just 
too hard to define clearly in a two-level classification.

On the other hand, they are relatively easy to convey in clearly written 
documentation.  So I'd still recommend that we stay with just Depends 
and Suggests, but encourage authors to document what they mean by 
"Suggests".

Duncan Murdoch

> 
> Martin
> 
>     FrL> Ad the wording in the manual: obviously that is not
>     FrL> optimal (otherwise no need for parts of this email
>     FrL> thread), perhaps somebody else than the original author
>     FrL> (=me) could try to improve it for 2.4 after this
>     FrL> clarifications?  Otherwise I will give it a shot next
>     FrL> week after I return from Rome.
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel



From r.hankin at noc.soton.ac.uk  Wed Aug 30 16:33:44 2006
From: r.hankin at noc.soton.ac.uk (Robin Hankin)
Date: Wed, 30 Aug 2006 15:33:44 +0100
Subject: [Rd] setMethod() and log()
Message-ID: <3CE5144C-800B-4504-99CC-A56F1C7AAD1C@soc.soton.ac.uk>

Hi

I am having difficulty with setMethod().  I have a "brob" class of  
objects whose
representation has two slots: "x" and "positive".  Slot "x"  (double)  
holds the log
of a number and slot "positive" (logical) its sign.   The idea is  
that large numbers
can be handled.

I'm trying to implement a log() method using an analogue of the  
setMethod() example
for polynomials on page 117 of V&R.  abs() works [I think], but log()  
doesn't:

[transcript follows, source for  the classes below]



 > a <- as.brob((-4:4 )+0.4)
 > a
An object of class "brob"
Slot "x":
[1]  1.2809338  0.9555114  0.4700036 -0.5108256 -0.9162907   
0.3364722  0.8754687
[8]  1.2237754  1.4816045

Slot "positive":
[1] FALSE FALSE FALSE FALSE  TRUE  TRUE  TRUE  TRUE  TRUE

 > abs(a)
An object of class "brob"
Slot "x":
[1]  1.2809338  0.9555114  0.4700036 -0.5108256 -0.9162907   
0.3364722  0.8754687
[8]  1.2237754  1.4816045

Slot "positive":
[1] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE

# This works: each element is now positive.

 > log(a)
Error in log(x) : Non-numeric argument to mathematical function
 >



What's wrong with my setMethod() call below?





setClass("brob",
          representation = representation 
(x="numeric",positive="logical"),
          prototype      = list(x=numeric(),positive=logical())
          )

setAs("brob", "numeric", function(from){
   out <- exp(from at x)
   out[!from at positive] <- -out[!from at positive]
   return(out)
}
       )

setMethod("as.numeric",signature(x="brob"),function(x){as(x,"numeric")})

is.brob <- function(x){is(x,"brob")}

"brob" <- function(x,positive){
   if(missing(positive)){
     positive <- rep(TRUE,length(x))
   }
   if(length(positive)==1){
     positive <- rep(positive,length(x))
   }
   new("brob",x=x,positive=positive)
}

as.brob <- function(x){
   brob(log(abs(x)),x>0)
}

setMethod("Math", "brob",
           function(x){
             switch(.Generic,
                    abs    = brob(x at x),
                    log    = { out <- x at x
                               out[!x at positive] <- NaN
                               out
                             },
                    acos   =,
                    acosh  =,
                    asin   =,
                    asinh  =,
                    atan   =,
                    atanh  =,
                    ceiling=,
                    cos    =,
                    cosh   =,
                    cumsum =,
                    exp    =,
                    floor  =,
                    gamma  =,
                    lgamma =,
                    sin    =,
                    sinh   =,
                    tan    =,
                    tanh   =,
                    trunc  = as.brob(callGeneric(as.numeric(x))),
                    stop(paste(.Generic, "not allowed on  
Brobdingnagian numbers"))
                      )
           }
           )






--
Robin Hankin
Uncertainty Analyst
National Oceanography Centre, Southampton
European Way, Southampton SO14 3ZH, UK
  tel  023-8059-7743



From sfalcon at fhcrc.org  Wed Aug 30 17:01:44 2006
From: sfalcon at fhcrc.org (Seth Falcon)
Date: Wed, 30 Aug 2006 08:01:44 -0700
Subject: [Rd] "Enhances"
In-Reply-To: <17653.33374.71038.862175@basebud.nulle.part> (Dirk
	Eddelbuettel's message of "Wed, 30 Aug 2006 07:19:42 -0500")
References: <m2wt8sgyo0.fsf@ziti.fhcrc.org>
	<17651.65163.240840.365787@stat.math.ethz.ch>
	<44F4473D.9030203@bank-banque-canada.ca>
	<17652.19292.998960.686119@stat.math.ethz.ch>
	<44F46112.7060809@stats.uwo.ca> <m2d5ajedon.fsf@ziti.fhcrc.org>
	<63945.151.100.49.234.1156923253.squirrel@webmail.lrz-muenchen.de>
	<17653.20470.199569.870638@stat.math.ethz.ch>
	<22354.151.100.147.28.1156939493.squirrel@webmail.lrz-muenchen.de>
	<17653.33374.71038.862175@basebud.nulle.part>
Message-ID: <m23bbe5ktj.fsf@ziti.fhcrc.org>

Dirk Eddelbuettel <edd at debian.org> writes:
> Now, while we're at it, Debian also has a field called "Enhances:" and IIRC
> it provides a means to communicate a relationship 'the other way'.  Ie a
> package foo, rather than being 'pulled in' by a package bar via a Depends,
> makes itself available to bar.   That is useful as you can enhance the
> 'graph' structure without a change in the other package.  Maybe that would be
> of use for R too?

Such a field DependsOnMe might be useful in some cases, but one can
compute that using the dependency graph.  One just needs a bit of
code...

[shameless plug]

I have an almost complete package 'pkgDepTools' that provides tools
for computing and analyzing dependency relationships among R packages.

It provides tools for building a graph-based representation of the
dependencies among all packages in a list of CRAN-style package
repositories.  There are also utilities for computing installation
order of a given package.  If the RCurl package is available, an
estimate of the download size required to install a given package and
its dependencies can be obtained.

It should be available in Bioconductor in the next couple of weeks.

Bw,

+ seth



From lenon at fstrf-wi.org  Wed Aug 30 17:46:10 2006
From: lenon at fstrf-wi.org (lenon at fstrf-wi.org)
Date: Wed, 30 Aug 2006 17:46:10 +0200 (CEST)
Subject: [Rd] Installation error (PR#9190)
Message-ID: <20060830154610.3CD08283B0@slim.kubism.ku.dk>

Full_Name: Patrick Lenon
Version: 2.3.1
OS: Solaris 10
Submission from: (NULL) (144.92.92.204)


During ./configure of R 2.3.1 (R-home directory of `/u/home/lenon/R/ru231/') I
got this feedback shown below.  

configure: WARNING: floatingpoint.h: present but cannot be compiled
configure: WARNING: floatingpoint.h:     check for missing prerequisite
headers?
configure: WARNING: floatingpoint.h: see the Autoconf documentation
configure: WARNING: floatingpoint.h:     section "Present But Cannot Be
Compiled"
configure: WARNING: floatingpoint.h: proceeding with the preprocessor's result
configure: WARNING: floatingpoint.h: in the future, the compiler will take
precedence
configure: WARNING:     ## ----------------------------------- ##
configure: WARNING:     ## Report this to r-bugs at R-project.org ##
configure: WARNING:     ## ----------------------------------- ##

Subsequently the "make" failed with this error:

/usr/local/include/stdio.h:186: error: conflicting types for `FILE'
/usr/local/lib/gcc-lib/sparc-sun-solaris2.9/3.3.1/include/floatingpoint.h:52:
error: previous declaration of `FILE'
make[3]: *** [bakslv.o] Error 1
make[3]: Leaving directory `/u/home/lenon/R/ru231/R-2.3.1/src/appl'
make[2]: *** [R] Error 2
make[2]: Leaving directory `/u/home/lenon/R/ru231/R-2.3.1/src/appl'
make[1]: *** [R] Error 1
make[1]: Leaving directory `/u/home/lenon/R/ru231/R-2.3.1/src'
make: *** [R] Error 1

I did a search for 'floatingpoint.h' in the R bug archive and got no results.



From sfalcon at fhcrc.org  Wed Aug 30 17:48:42 2006
From: sfalcon at fhcrc.org (Seth Falcon)
Date: Wed, 30 Aug 2006 08:48:42 -0700
Subject: [Rd] Duplicated definition of helper in available.packages
Message-ID: <m2lkp6442t.fsf@ziti.fhcrc.org>

Hi,

The .checkRversion helper function is defined twice in
available.packages.  I'm pretty sure one definition will suffice.

Untested patch below.

+ seth


diff --git a/src/library/utils/R/packages.R b/src/library/utils/R/packages.R
index 0b84f02..5184992 100644
--- a/src/library/utils/R/packages.R
+++ b/src/library/utils/R/packages.R
@@ -86,13 +86,6 @@ available.packages <-
     }
     ## ignore packages which don't fit our version of R
     if(length(res)) {
-        .checkRversion <- function(x) {
-            if(is.na(xx <- x["Depends"])) return(TRUE)
-            xx <- tools:::.split_dependencies(xx)
-            if(length(z <- xx[["R"]]) > 1)
-                eval(parse(text=paste("currentR", z$op, "z$version")))
-            else TRUE
-        }
         currentR <- getRversion()
         res <- res[apply(res, 1, .checkRversion), , drop=FALSE]
     }



From mtmorgan at fhcrc.org  Wed Aug 30 18:04:18 2006
From: mtmorgan at fhcrc.org (Martin Morgan)
Date: Wed, 30 Aug 2006 09:04:18 -0700
Subject: [Rd] setMethod() and log()
In-Reply-To: <3CE5144C-800B-4504-99CC-A56F1C7AAD1C@soc.soton.ac.uk> (Robin
	Hankin's message of "Wed, 30 Aug 2006 15:33:44 +0100")
References: <3CE5144C-800B-4504-99CC-A56F1C7AAD1C@soc.soton.ac.uk>
Message-ID: <6phd5ai9pml.fsf@gopher4.fhcrc.org>

Hi Robin,

from reading ?Math:

     Note: currently those members which are not primitive functions
     must have been converted to S4 generic functions (preferably
     _before_ setting an S4 group generic method) as it only sets
     methods for known S4 generics.  This can be done by a call to
     'setGeneric', for example 'setGeneric("round", group="Math2")'.

so

setGeneric("log", group="Math")

before setMethod("Math", ...) seems to do the trick (perhaps at the
expense of adding explicit S4 method dispatch to log). The difference
between abs and log is apparent from looking at their definitions

> abs
.Primitive("abs")
> log
function (x, base = exp(1)) 
if (missing(base)) .Internal(log(x)) else .Internal(log(x, base))
<environment: namespace:base>

Hope that removes some uncertainty.

Martin
-- 
Bioconductor

Robin Hankin <r.hankin at noc.soton.ac.uk> writes:

> Hi
>
> I am having difficulty with setMethod().  I have a "brob" class of  
> objects whose
> representation has two slots: "x" and "positive".  Slot "x"  (double)  
> holds the log
> of a number and slot "positive" (logical) its sign.   The idea is  
> that large numbers
> can be handled.
>
> I'm trying to implement a log() method using an analogue of the  
> setMethod() example
> for polynomials on page 117 of V&R.  abs() works [I think], but log()  
> doesn't:
>
> [transcript follows, source for  the classes below]
>
>
>
>  > a <- as.brob((-4:4 )+0.4)
>  > a
> An object of class "brob"
> Slot "x":
> [1]  1.2809338  0.9555114  0.4700036 -0.5108256 -0.9162907   
> 0.3364722  0.8754687
> [8]  1.2237754  1.4816045
>
> Slot "positive":
> [1] FALSE FALSE FALSE FALSE  TRUE  TRUE  TRUE  TRUE  TRUE
>
>  > abs(a)
> An object of class "brob"
> Slot "x":
> [1]  1.2809338  0.9555114  0.4700036 -0.5108256 -0.9162907   
> 0.3364722  0.8754687
> [8]  1.2237754  1.4816045
>
> Slot "positive":
> [1] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE
>
> # This works: each element is now positive.
>
>  > log(a)
> Error in log(x) : Non-numeric argument to mathematical function
>  >
>
>
>
> What's wrong with my setMethod() call below?
>
>
>
>
>
> setClass("brob",
>           representation = representation 
> (x="numeric",positive="logical"),
>           prototype      = list(x=numeric(),positive=logical())
>           )
>
> setAs("brob", "numeric", function(from){
>    out <- exp(from at x)
>    out[!from at positive] <- -out[!from at positive]
>    return(out)
> }
>        )
>
> setMethod("as.numeric",signature(x="brob"),function(x){as(x,"numeric")})
>
> is.brob <- function(x){is(x,"brob")}
>
> "brob" <- function(x,positive){
>    if(missing(positive)){
>      positive <- rep(TRUE,length(x))
>    }
>    if(length(positive)==1){
>      positive <- rep(positive,length(x))
>    }
>    new("brob",x=x,positive=positive)
> }
>
> as.brob <- function(x){
>    brob(log(abs(x)),x>0)
> }
>
> setMethod("Math", "brob",
>            function(x){
>              switch(.Generic,
>                     abs    = brob(x at x),
>                     log    = { out <- x at x
>                                out[!x at positive] <- NaN
>                                out
>                              },
>                     acos   =,
>                     acosh  =,
>                     asin   =,
>                     asinh  =,
>                     atan   =,
>                     atanh  =,
>                     ceiling=,
>                     cos    =,
>                     cosh   =,
>                     cumsum =,
>                     exp    =,
>                     floor  =,
>                     gamma  =,
>                     lgamma =,
>                     sin    =,
>                     sinh   =,
>                     tan    =,
>                     tanh   =,
>                     trunc  = as.brob(callGeneric(as.numeric(x))),
>                     stop(paste(.Generic, "not allowed on  
> Brobdingnagian numbers"))
>                       )
>            }
>            )
>
>
>
>
>
>
> --
> Robin Hankin
> Uncertainty Analyst
> National Oceanography Centre, Southampton
> European Way, Southampton SO14 3ZH, UK
>   tel  023-8059-7743
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel



From ripley at stats.ox.ac.uk  Wed Aug 30 18:09:39 2006
From: ripley at stats.ox.ac.uk (Prof Brian Ripley)
Date: Wed, 30 Aug 2006 17:09:39 +0100 (BST)
Subject: [Rd] Installation error (PR#9190)
In-Reply-To: <20060830154610.3CD08283B0@slim.kubism.ku.dk>
References: <20060830154610.3CD08283B0@slim.kubism.ku.dk>
Message-ID: <Pine.LNX.4.64.0608301658190.3574@gannet.stats.ox.ac.uk>

This is a bug in your compiler installation, not one in R.

I notice you have a very old version of gcc, and that you have a system
header (stdio.h) in /usr/local/include.

It seems likely that you have a version of the mismatch problem discussed 
in the R-admin manual:

  @command{gcc} makes modified versions of some header files, and
  so (for example) @command{gcc} compiled under Solaris 2.6 will not
  compile @R{} under Solaris 2.7. 


On Wed, 30 Aug 2006, lenon at fstrf-wi.org wrote:

> Full_Name: Patrick Lenon
> Version: 2.3.1
> OS: Solaris 10
> Submission from: (NULL) (144.92.92.204)
> 
> 
> During ./configure of R 2.3.1 (R-home directory of `/u/home/lenon/R/ru231/') I
> got this feedback shown below.  
> 
> configure: WARNING: floatingpoint.h: present but cannot be compiled
> configure: WARNING: floatingpoint.h:     check for missing prerequisite
> headers?
> configure: WARNING: floatingpoint.h: see the Autoconf documentation
> configure: WARNING: floatingpoint.h:     section "Present But Cannot Be
> Compiled"
> configure: WARNING: floatingpoint.h: proceeding with the preprocessor's result
> configure: WARNING: floatingpoint.h: in the future, the compiler will take
> precedence
> configure: WARNING:     ## ----------------------------------- ##
> configure: WARNING:     ## Report this to r-bugs at R-project.org ##
> configure: WARNING:     ## ----------------------------------- ##
> 
> Subsequently the "make" failed with this error:
> 
> /usr/local/include/stdio.h:186: error: conflicting types for `FILE'
> /usr/local/lib/gcc-lib/sparc-sun-solaris2.9/3.3.1/include/floatingpoint.h:52:
> error: previous declaration of `FILE'
> make[3]: *** [bakslv.o] Error 1
> make[3]: Leaving directory `/u/home/lenon/R/ru231/R-2.3.1/src/appl'
> make[2]: *** [R] Error 2
> make[2]: Leaving directory `/u/home/lenon/R/ru231/R-2.3.1/src/appl'
> make[1]: *** [R] Error 1
> make[1]: Leaving directory `/u/home/lenon/R/ru231/R-2.3.1/src'
> make: *** [R] Error 1
> 
> I did a search for 'floatingpoint.h' in the R bug archive and got no results.
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
> 

-- 
Brian D. Ripley,                  ripley at stats.ox.ac.uk
Professor of Applied Statistics,  http://www.stats.ox.ac.uk/~ripley/
University of Oxford,             Tel:  +44 1865 272861 (self)
1 South Parks Road,                     +44 1865 272866 (PA)
Oxford OX1 3TG, UK                Fax:  +44 1865 272595



From pgilbert at bank-banque-canada.ca  Wed Aug 30 18:28:41 2006
From: pgilbert at bank-banque-canada.ca (Paul Gilbert)
Date: Wed, 30 Aug 2006 12:28:41 -0400
Subject: [Rd] 'CanMakeUseOf' field
In-Reply-To: <44F5A0E9.1010309@stats.uwo.ca>
References: <m2wt8sgyo0.fsf@ziti.fhcrc.org>	<17651.65163.240840.365787@stat.math.ethz.ch>	<44F4473D.9030203@bank-banque-canada.ca>	<17652.19292.998960.686119@stat.math.ethz.ch>	<44F46112.7060809@stats.uwo.ca>	<m2d5ajedon.fsf@ziti.fhcrc.org>	<63945.151.100.49.234.1156923253.squirrel@webmail.lrz-muenchen.de>	<17653.20470.199569.870638@stat.math.ethz.ch>
	<44F5A0E9.1010309@stats.uwo.ca>
Message-ID: <44F5BCB9.7030702@bank-banque-canada.ca>

Duncan Murdoch wrote:
> On 8/30/2006 4:44 AM, Martin Maechler wrote:
>>>>>>> "FrL" == friedrich leisch <friedrich.leisch at stat.uni-muenchen.de>
>>>>>>>     on Wed, 30 Aug 2006 09:34:13 +0200 (MEST) writes:
>>     >> Duncan Murdoch <murdoch at stats.uwo.ca> writes:
>>     >>> I think we need an option to R CMD check rather than a new field in the
>>     >>> DESCRIPTION.  Currently a package could be mentioned for any of these
>>     >>> reasons:
>>     >>> 
>>     >>> 1.  To make functions, examples or vignettes work
>>     >>> 2.  To allow optional functionality in functions, examples or vignettes.
>>     >>> 3.  Because it contains complementary functions.
>>     >>> 
>>     >>> I don't think we really need to worry about 3:  it should be contained
>>     >>> in 1 or 2, if reasonably complete examples are given.
>>     >>> 
>>     >>> Case 1 is handled by Depends.
>>     >> 
>>     >> I think there is an important distinction between a dependency needed
>>     >> for the package to function and a dependency needed to demonstrate
>>     >> said functionality via an example or vignette.  The former is what
>>     >> Depends is about, the latter is something else (Suggests).
>>
>>     FrL> Sorry to join in late, I am at the Compstat conference and have limited
>>     FrL> email access. What Seth describes in the above paragraph is exactly what I
>>     FrL> had in mind when splitting the single Depends field we had into Depends
>>     FrL> and Suggests: Depends are a necessity to run the package, Suggests is nice
>>     FrL> to have but not necessary. If you know how to use a package you may the
>>     FrL> decide not to install a package that is only suggested, but
>>
>>     FrL> * may not be interested to execute the examples,
>>     FrL> * know that you never need the extra functionality
>>     FrL> * ...
>>
>>     FrL> so it should not be auto-installed unless you ask for
>>     FrL> it (the default could also be the other way round, the
>>     FrL> point is that it should be possible to have package foo
>>     FrL> but not the packages it only suggests). On CRAN we
>>     FrL> check with all suggestions to test all bits and pieces,
>>     FrL> having an option in R CMD check to test only with
>>     FrL> suggests may be nice, if there is use for it.
>>
>> Yes.
>> However, I see two (related) problems with the current 'Suggests'
>> and that's why I opened this thread proposing to have a 
>> (what I now would want to simply call)  'canUse' :
>>
>> 1) For 'R CMD check' (and hence CRAN checking),
>>    Packages in 'Suggests' must be require()able, and
>>    hence all testing only happens *with* the suggested packages
>>    being there, and not without.
>>
>> 2) "Suggests"  suggests to the human reader of DESCRIPTION that
>>    the package authors suggest to also install the packages listed
>>    there.
>>    Now there are cases, I (as package author) want to show some
>>    stuff, or even provide compatibility functionality for some
>>    packages that are related to mine, but which I really do not ``suggest''
>>    to also be installed, e.g., because the other packages do
>>    similar stuff as mine, but I believe my package to be
>>    superior.  In such a case, I may, e.g., want to provide 
>>    functions for porting the other package classes to my package's.
>>
>> Duncan Murdoch has proposed to take care of "1)" by
>> still only use 'Suggests' but adding another option to 'R CMD
>> check', let's say   --no-suggests  which would run all the
>> checks without having the suggested packages available  
>> --- something not quite easy to implement, BTW:
>> Imagine the typical windows users who (AFAICS) always only use
>> one library into which they install all packages.
>> How do you want the 
>>     if( require(<my_suggested_package>) ) {
>>        ...
>>     }
>> clause *not* to be triggered in such a case ?
> 
> I would expect require to return FALSE.  This could be done by check 
> installing a new version of require() (as it installs new T and F), or 
> by the standard require() being modified to check a stop list before 
> acting (I'd prefer this, because it would make it easier for developers 
> to experiment with functions in different environments), or by playing 
> around with the names of things in the library (probably not workable on 
> Windows), etc.
> 
> I think the default check behaviour on CRAN should be my middle case: 
> test based on what is currently installed, don't require packages listed 
> in Suggests to be installed.  I'm not sure if that should be the default 
> behaviour for R CMD check at the command line:  as Kurt said, usually a 
> developer wants to check all of the code.
> 
>> I do agree quite a bit that such a '--no-suggests' option would
>> be very useful for 'R CMD check' -- in addition to my proposal.
> 
> I think the other extreme (which I think is there now as 
> _R_CHECK_FORCE_SUGGESTS_) is also important.
> 
>> Further, I think "2)" above is not taken care of anyway.
>> After all the interesting statements and alternative proposals,
>> I'm still proposing to introduce a  'canUse'  field for DESCRIPTION
>> which
>>   a) has a "human-readable intent" of being weaker than 'Suggests'
>>   b) will not require its packages to be available for R CMD check
>>   c) conveys extra information about the package's context, to humans, and
>>   d) will potentially be used in automated or semi-manual 
>>      ``R package database management''
> 
> I think d) is important, but I think there are too many variations on a) 
> and c) to hope that this would be used consistently.  As Fritz said, the 
> thing he can remember (and what I would remember) is whether a package 
> is mandatory or optional.  Fine variations within "optional" are just 
> too hard to define clearly in a two-level classification.
> 
> On the other hand, they are relatively easy to convey in clearly written 
> documentation.  So I'd still recommend that we stay with just Depends 
> and Suggests, but encourage authors to document what they mean by 
> "Suggests".

The problem I see here is that this is a change from the status quo, 
which is likely to make a real mess for some time.  The status quo is 
that packages in Depends and Suggests are needed to check examples and 
vignettes. I would not change this without a very good reason.  It would 
be best to put other suggestions of extensions, that some users may want 
to use, somewhere else.  The current situation is that these suggestions 
are sprinkled in Rd files, vignettes, web pages, etc. This situation is 
not too bad, but it might be nice to have some place users would expect 
to find this information.  However, changing the meaning of Suggests to 
be developer defined does not strike me as an improvement.

Paul Gilbert
> 
> Duncan Murdoch
> 
>> Martin
>>
>>     FrL> Ad the wording in the manual: obviously that is not
>>     FrL> optimal (otherwise no need for parts of this email
>>     FrL> thread), perhaps somebody else than the original author
>>     FrL> (=me) could try to improve it for 2.4 after this
>>     FrL> clarifications?  Otherwise I will give it a shot next
>>     FrL> week after I return from Rome.
>>
>> ______________________________________________
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
====================================================================================

La version fran?aise suit le texte anglais.

------------------------------------------------------------------------------------

This email may contain privileged and/or confidential inform...{{dropped}}



From murdoch at stats.uwo.ca  Wed Aug 30 18:41:52 2006
From: murdoch at stats.uwo.ca (Duncan Murdoch)
Date: Wed, 30 Aug 2006 12:41:52 -0400
Subject: [Rd] 'CanMakeUseOf' field
In-Reply-To: <44F5BCB9.7030702@bank-banque-canada.ca>
References: <m2wt8sgyo0.fsf@ziti.fhcrc.org>	<17651.65163.240840.365787@stat.math.ethz.ch>	<44F4473D.9030203@bank-banque-canada.ca>	<17652.19292.998960.686119@stat.math.ethz.ch>	<44F46112.7060809@stats.uwo.ca>	<m2d5ajedon.fsf@ziti.fhcrc.org>	<63945.151.100.49.234.1156923253.squirrel@webmail.lrz-muenchen.de>	<17653.20470.199569.870638@stat.math.ethz.ch>	<44F5A0E9.1010309@stats.uwo.ca>
	<44F5BCB9.7030702@bank-banque-canada.ca>
Message-ID: <44F5BFD0.3040502@stats.uwo.ca>

On 8/30/2006 12:28 PM, Paul Gilbert wrote:
> Duncan Murdoch wrote:
>> On 8/30/2006 4:44 AM, Martin Maechler wrote:
>>>>>>>> "FrL" == friedrich leisch <friedrich.leisch at stat.uni-muenchen.de>
>>>>>>>>     on Wed, 30 Aug 2006 09:34:13 +0200 (MEST) writes:
>>>     >> Duncan Murdoch <murdoch at stats.uwo.ca> writes:
>>>     >>> I think we need an option to R CMD check rather than a new field in the
>>>     >>> DESCRIPTION.  Currently a package could be mentioned for any of these
>>>     >>> reasons:
>>>     >>> 
>>>     >>> 1.  To make functions, examples or vignettes work
>>>     >>> 2.  To allow optional functionality in functions, examples or vignettes.
>>>     >>> 3.  Because it contains complementary functions.
>>>     >>> 
>>>     >>> I don't think we really need to worry about 3:  it should be contained
>>>     >>> in 1 or 2, if reasonably complete examples are given.
>>>     >>> 
>>>     >>> Case 1 is handled by Depends.
>>>     >> 
>>>     >> I think there is an important distinction between a dependency needed
>>>     >> for the package to function and a dependency needed to demonstrate
>>>     >> said functionality via an example or vignette.  The former is what
>>>     >> Depends is about, the latter is something else (Suggests).
>>>
>>>     FrL> Sorry to join in late, I am at the Compstat conference and have limited
>>>     FrL> email access. What Seth describes in the above paragraph is exactly what I
>>>     FrL> had in mind when splitting the single Depends field we had into Depends
>>>     FrL> and Suggests: Depends are a necessity to run the package, Suggests is nice
>>>     FrL> to have but not necessary. If you know how to use a package you may the
>>>     FrL> decide not to install a package that is only suggested, but
>>>
>>>     FrL> * may not be interested to execute the examples,
>>>     FrL> * know that you never need the extra functionality
>>>     FrL> * ...
>>>
>>>     FrL> so it should not be auto-installed unless you ask for
>>>     FrL> it (the default could also be the other way round, the
>>>     FrL> point is that it should be possible to have package foo
>>>     FrL> but not the packages it only suggests). On CRAN we
>>>     FrL> check with all suggestions to test all bits and pieces,
>>>     FrL> having an option in R CMD check to test only with
>>>     FrL> suggests may be nice, if there is use for it.
>>>
>>> Yes.
>>> However, I see two (related) problems with the current 'Suggests'
>>> and that's why I opened this thread proposing to have a 
>>> (what I now would want to simply call)  'canUse' :
>>>
>>> 1) For 'R CMD check' (and hence CRAN checking),
>>>    Packages in 'Suggests' must be require()able, and
>>>    hence all testing only happens *with* the suggested packages
>>>    being there, and not without.
>>>
>>> 2) "Suggests"  suggests to the human reader of DESCRIPTION that
>>>    the package authors suggest to also install the packages listed
>>>    there.
>>>    Now there are cases, I (as package author) want to show some
>>>    stuff, or even provide compatibility functionality for some
>>>    packages that are related to mine, but which I really do not ``suggest''
>>>    to also be installed, e.g., because the other packages do
>>>    similar stuff as mine, but I believe my package to be
>>>    superior.  In such a case, I may, e.g., want to provide 
>>>    functions for porting the other package classes to my package's.
>>>
>>> Duncan Murdoch has proposed to take care of "1)" by
>>> still only use 'Suggests' but adding another option to 'R CMD
>>> check', let's say   --no-suggests  which would run all the
>>> checks without having the suggested packages available  
>>> --- something not quite easy to implement, BTW:
>>> Imagine the typical windows users who (AFAICS) always only use
>>> one library into which they install all packages.
>>> How do you want the 
>>>     if( require(<my_suggested_package>) ) {
>>>        ...
>>>     }
>>> clause *not* to be triggered in such a case ?
>> 
>> I would expect require to return FALSE.  This could be done by check 
>> installing a new version of require() (as it installs new T and F), or 
>> by the standard require() being modified to check a stop list before 
>> acting (I'd prefer this, because it would make it easier for developers 
>> to experiment with functions in different environments), or by playing 
>> around with the names of things in the library (probably not workable on 
>> Windows), etc.
>> 
>> I think the default check behaviour on CRAN should be my middle case: 
>> test based on what is currently installed, don't require packages listed 
>> in Suggests to be installed.  I'm not sure if that should be the default 
>> behaviour for R CMD check at the command line:  as Kurt said, usually a 
>> developer wants to check all of the code.
>> 
>>> I do agree quite a bit that such a '--no-suggests' option would
>>> be very useful for 'R CMD check' -- in addition to my proposal.
>> 
>> I think the other extreme (which I think is there now as 
>> _R_CHECK_FORCE_SUGGESTS_) is also important.
>> 
>>> Further, I think "2)" above is not taken care of anyway.
>>> After all the interesting statements and alternative proposals,
>>> I'm still proposing to introduce a  'canUse'  field for DESCRIPTION
>>> which
>>>   a) has a "human-readable intent" of being weaker than 'Suggests'
>>>   b) will not require its packages to be available for R CMD check
>>>   c) conveys extra information about the package's context, to humans, and
>>>   d) will potentially be used in automated or semi-manual 
>>>      ``R package database management''
>> 
>> I think d) is important, but I think there are too many variations on a) 
>> and c) to hope that this would be used consistently.  As Fritz said, the 
>> thing he can remember (and what I would remember) is whether a package 
>> is mandatory or optional.  Fine variations within "optional" are just 
>> too hard to define clearly in a two-level classification.
>> 
>> On the other hand, they are relatively easy to convey in clearly written 
>> documentation.  So I'd still recommend that we stay with just Depends 
>> and Suggests, but encourage authors to document what they mean by 
>> "Suggests".
> 
> The problem I see here is that this is a change from the status quo, 
> which is likely to make a real mess for some time.  

I'm not sure what your "this" refers to.  Was it my suggestion or 
Martin's?  Must be his, I never make a real mess :-)

Duncan Murdoch

 > The status quo is
> that packages in Depends and Suggests are needed to check examples and 
> vignettes. I would not change this without a very good reason.  It would 
> be best to put other suggestions of extensions, that some users may want 
> to use, somewhere else.  The current situation is that these suggestions 
> are sprinkled in Rd files, vignettes, web pages, etc. This situation is 
> not too bad, but it might be nice to have some place users would expect 
> to find this information.  However, changing the meaning of Suggests to 
> be developer defined does not strike me as an improvement.
> 
> Paul Gilbert
>> 
>> Duncan Murdoch
>> 
>>> Martin
>>>
>>>     FrL> Ad the wording in the manual: obviously that is not
>>>     FrL> optimal (otherwise no need for parts of this email
>>>     FrL> thread), perhaps somebody else than the original author
>>>     FrL> (=me) could try to improve it for 2.4 after this
>>>     FrL> clarifications?  Otherwise I will give it a shot next
>>>     FrL> week after I return from Rome.
>>>
>>> ______________________________________________
>>> R-devel at r-project.org mailing list
>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>> 
>> ______________________________________________
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel
> ====================================================================================
> 
> La version fran?aise suit le texte anglais.
> 
> ------------------------------------------------------------------------------------
> 
> This email may contain privileged and/or confidential info...{{dropped}}



From hb at stat.berkeley.edu  Wed Aug 30 18:57:31 2006
From: hb at stat.berkeley.edu (Henrik Bengtsson)
Date: Wed, 30 Aug 2006 09:57:31 -0700
Subject: [Rd] S4 Methods dispatch
In-Reply-To: <44F591C7.7070900@r-project.org>
References: <44F591C7.7070900@r-project.org>
Message-ID: <59d7961d0608300957s109b2533t7949c3a83928149d@mail.gmail.com>

[Cross-posting to BioC-devel to]

Thank you for this.

> The changes are internal but extensive.  All packages that use S4
> methods and classes need to be reinstalled from source to use the new
> version.

Is there an easy way to detect if a package is using S4 or not?  If
so, I could scan my already installed libraries and call
install.packages() on its S4 subset of packages.  The alternative is
to do install.packages() an all libraries (sic!).  Bioconductor: maybe
biocLite() could have such an update mechanism built in internally?

If I miss to reinstall one S4 package, what should I expect?  I assume
there will be an error, but I just want to confirm that there is no
risk of getting weird "results" but still a running program?

Reinstallation is also required for all package that comes as Windows
binaries, correct?

Best

Henrik

On 8/30/06, John Chambers <jmc at r-project.org> wrote:
> A revision of r-devel 2.4.0 is being committed today with changes to
> method and class management.
>
> The changes are internal but extensive.  All packages that use S4
> methods and classes need to be reinstalled from source to use the new
> version.
>
> The main effects are to speed up method caching and dispatch, and to fix
> some problems with selecting inherited methods.  The new design is also
> cleaner, so we can experiment more easily in the future with changes for
> efficiency or semantics.
>
> The change will mostly be noticeable in attaching packages with many
> methods.  The CPU time for attaching package Matrix, for example, goes
> down by about a factor of 7 compared to R 2.3.1, timed on a Mac G5.
>
> The other major change is that now _all_ inherited methods are examined
> and one of the closest matches is chosen.  The old selection took the
> first candidate found, so the current version is better defined, and
> will also let us experiment with various tuning & strategies.
>
> There is a draft paper describing method selection at
>   http://developer.r-project.org/howMethodsWork.pdf
> (It's a document in progress, so go back in a few days for a revised
> version.)
>
> If a package uses inheritance for method selection with multiple
> arguments, there may well be changes in behavior.  We found examples in
> both methods itself and in Matrix that needed attention.
>
> John
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>
>



From jmc at r-project.org  Wed Aug 30 19:01:22 2006
From: jmc at r-project.org (John Chambers)
Date: Wed, 30 Aug 2006 13:01:22 -0400
Subject: [Rd] S4 Methods dispatch
In-Reply-To: <44F591C7.7070900@r-project.org>
References: <44F591C7.7070900@r-project.org>
Message-ID: <44F5C462.20004@r-project.org>

John Chambers wrote:
> A revision of r-devel 2.4.0 is being committed today with changes to 
> method and class management.
>
> The changes are internal but extensive.  All packages that use S4 
> methods and classes need to be reinstalled from source to use the new 
> version.
>   
A footnote on this. ALL packages need to be reinstalled--including 
stats4 in the R source.  Otherwise that package will fail when used in 
the tests.   I was bitten by this myself today.

Advice from members of r-core more expert in the innards, suggests that 
the best thing to do is
  make clean
in the directory where you are building R, if you have previously built 
R there, before making the new version of R.
> The main effects are to speed up method caching and dispatch, and to fix 
> some problems with selecting inherited methods.  The new design is also 
> cleaner, so we can experiment more easily in the future with changes for 
> efficiency or semantics.
>
> The change will mostly be noticeable in attaching packages with many 
> methods.  The CPU time for attaching package Matrix, for example, goes 
> down by about a factor of 7 compared to R 2.3.1, timed on a Mac G5.
>
> The other major change is that now _all_ inherited methods are examined 
> and one of the closest matches is chosen.  The old selection took the 
> first candidate found, so the current version is better defined, and 
> will also let us experiment with various tuning & strategies.
>
> There is a draft paper describing method selection at
>   http://developer.r-project.org/howMethodsWork.pdf
> (It's a document in progress, so go back in a few days for a revised 
> version.)
>
> If a package uses inheritance for method selection with multiple 
> arguments, there may well be changes in behavior.  We found examples in 
> both methods itself and in Matrix that needed attention.
>
> John
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>
>



From ripley at stats.ox.ac.uk  Wed Aug 30 19:17:08 2006
From: ripley at stats.ox.ac.uk (Prof Brian Ripley)
Date: Wed, 30 Aug 2006 18:17:08 +0100 (BST)
Subject: [Rd] S4 Methods dispatch
In-Reply-To: <59d7961d0608300957s109b2533t7949c3a83928149d@mail.gmail.com>
References: <44F591C7.7070900@r-project.org>
	<59d7961d0608300957s109b2533t7949c3a83928149d@mail.gmail.com>
Message-ID: <Pine.LNX.4.64.0608301801350.3574@gannet.stats.ox.ac.uk>

On Wed, 30 Aug 2006, Henrik Bengtsson wrote:

> [Cross-posting to BioC-devel to]
> 
> Thank you for this.
> 
> > The changes are internal but extensive.  All packages that use S4
> > methods and classes need to be reinstalled from source to use the new
> > version.
> 
> Is there an easy way to detect if a package is using S4 or not?  If

Yes, look at the Depends field of the DESCRIPTION

a <- installed.packages()
aa <- as.vector(a[grep("methods", a[, "Depends"]), 1])
install.packages(aa)

If you want to install them in the same place as before, do this for each 
library in turn.

I'd hold off for a few days if you can: some packages will not yet 
reinstall.

> so, I could scan my already installed libraries and call
> install.packages() on its S4 subset of packages.  The alternative is
> to do install.packages() an all libraries (sic!).  Bioconductor: maybe
> biocLite() could have such an update mechanism built in internally?
> 
> If I miss to reinstall one S4 package, what should I expect?  I assume
> there will be an error, but I just want to confirm that there is no
> risk of getting weird "results" but still a running program?
> 
> Reinstallation is also required for all package that comes as Windows
> binaries, correct?

Correct, and from source at that since Uwe is not yet building packages 
under R-devel (and his '2.4' is really 2.3, as I understand it).

-- 
Brian D. Ripley,                  ripley at stats.ox.ac.uk
Professor of Applied Statistics,  http://www.stats.ox.ac.uk/~ripley/
University of Oxford,             Tel:  +44 1865 272861 (self)
1 South Parks Road,                     +44 1865 272866 (PA)
Oxford OX1 3TG, UK                Fax:  +44 1865 272595



From sfalcon at fhcrc.org  Wed Aug 30 19:22:38 2006
From: sfalcon at fhcrc.org (Seth Falcon)
Date: Wed, 30 Aug 2006 10:22:38 -0700
Subject: [Rd] S4 Methods dispatch
In-Reply-To: <59d7961d0608300957s109b2533t7949c3a83928149d@mail.gmail.com>
	(Henrik Bengtsson's message of "Wed, 30 Aug 2006 09:57:31 -0700")
References: <44F591C7.7070900@r-project.org>
	<59d7961d0608300957s109b2533t7949c3a83928149d@mail.gmail.com>
Message-ID: <m24pvu2l5t.fsf@ziti.fhcrc.org>

"Henrik Bengtsson" <hb at stat.berkeley.edu> writes:

> [Cross-posting to BioC-devel to]

I'll answer here for now.

> Is there an easy way to detect if a package is using S4 or not?  If
> so, I could scan my already installed libraries and call
> install.packages() on its S4 subset of packages.  The alternative is
> to do install.packages() an all libraries (sic!).  Bioconductor: maybe
> biocLite() could have such an update mechanism built in internally?

This really is only an issue for developers and those living on the
bleeding edge.  That is, when upgrading R, one generally reinstalls
all packages anyhow (at least that is what I do).

> If I miss to reinstall one S4 package, what should I expect?  I assume
> there will be an error, but I just want to confirm that there is no
> risk of getting weird "results" but still a running program?

Not sure, but in some testing I know that in at least _some_ cases,
one does get an error message.

> Reinstallation is also required for all package that comes as Windows
> binaries, correct?

But one has to reinstall binaries when upgrading R anyway.  Unless I'm
missing something, I would say this is a case where developers and
those on the bleeding edge just have to bite the bullet and
reinstall.  

As for identifying S4 using packages, I think it is the case that such
packages will have one or more of the following:

1. methods package in Depends
2. methods package in Imports
3. import or importFrom methods in NAMESPACE
4. a call to setClass, setMethod, or setGeneric in R sources (harder
   to identify)

Items 1 and 2 above would be easy to pull out of the return value of
installed.packages().

Best,

+ seth



From jmc at r-project.org  Wed Aug 30 19:35:59 2006
From: jmc at r-project.org (John Chambers)
Date: Wed, 30 Aug 2006 13:35:59 -0400
Subject: [Rd] S4 Methods dispatch
In-Reply-To: <59d7961d0608300957s109b2533t7949c3a83928149d@mail.gmail.com>
References: <44F591C7.7070900@r-project.org>
	<59d7961d0608300957s109b2533t7949c3a83928149d@mail.gmail.com>
Message-ID: <44F5CC7F.9060303@r-project.org>

Henrik Bengtsson wrote:
> [Cross-posting to BioC-devel to]
>
> Thank you for this.
>
>> The changes are internal but extensive.  All packages that use S4
>> methods and classes need to be reinstalled from source to use the new
>> version.
>
> Is there an easy way to detect if a package is using S4 or not?

If you have your package source in various directories under a single 
directory (which is how I usually work), then, from the directory above 
the package directories, the comand:
     grep "Depends:.*methods" */DESCRIPTION
will pick up the packages that declare a dependency on methods.  There 
may be cleaner techniques.
> If
> so, I could scan my already installed libraries and call
> install.packages() on its S4 subset of packages.  The alternative is
> to do install.packages() an all libraries (sic!).  Bioconductor: maybe
> biocLite() could have such an update mechanism built in internally?
>
> If I miss to reinstall one S4 package, what should I expect?

The typical symptom is a clutch of warning messages when you attach the 
package.  The warnings try to mention that the package may need 
reinstallling, though sometimes the package name is misleading.

> I assume
> there will be an error, but I just want to confirm that there is no
> risk of getting weird "results" but still a running program?
>
> Reinstallation is also required for all package that comes as Windows
> binaries, correct?
Anything that uses S4 methods will have out-of-date objects for class 
and method definitions.

John
>
> Best
>
> Henrik
>
> On 8/30/06, John Chambers <jmc at r-project.org> wrote:
>> A revision of r-devel 2.4.0 is being committed today with changes to
>> method and class management.
>>
>> The changes are internal but extensive.  All packages that use S4
>> methods and classes need to be reinstalled from source to use the new
>> version.
>>
>> The main effects are to speed up method caching and dispatch, and to fix
>> some problems with selecting inherited methods.  The new design is also
>> cleaner, so we can experiment more easily in the future with changes for
>> efficiency or semantics.
>>
>> The change will mostly be noticeable in attaching packages with many
>> methods.  The CPU time for attaching package Matrix, for example, goes
>> down by about a factor of 7 compared to R 2.3.1, timed on a Mac G5.
>>
>> The other major change is that now _all_ inherited methods are examined
>> and one of the closest matches is chosen.  The old selection took the
>> first candidate found, so the current version is better defined, and
>> will also let us experiment with various tuning & strategies.
>>
>> There is a draft paper describing method selection at
>>   http://developer.r-project.org/howMethodsWork.pdf
>> (It's a document in progress, so go back in a few days for a revised
>> version.)
>>
>> If a package uses inheritance for method selection with multiple
>> arguments, there may well be changes in behavior.  We found examples in
>> both methods itself and in Matrix that needed attention.
>>
>> John
>>
>> ______________________________________________
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>
>>
>



From hb at stat.berkeley.edu  Wed Aug 30 19:42:49 2006
From: hb at stat.berkeley.edu (Henrik Bengtsson)
Date: Wed, 30 Aug 2006 10:42:49 -0700
Subject: [Rd] S4 Methods dispatch
In-Reply-To: <Pine.LNX.4.64.0608301801350.3574@gannet.stats.ox.ac.uk>
References: <44F591C7.7070900@r-project.org>
	<59d7961d0608300957s109b2533t7949c3a83928149d@mail.gmail.com>
	<Pine.LNX.4.64.0608301801350.3574@gannet.stats.ox.ac.uk>
Message-ID: <59d7961d0608301042u6762eb3ckc5aad1a2e51f0a1b@mail.gmail.com>

On 8/30/06, Prof Brian Ripley <ripley at stats.ox.ac.uk> wrote:
> On Wed, 30 Aug 2006, Henrik Bengtsson wrote:
>
> > [Cross-posting to BioC-devel to]
> >
> > Thank you for this.
> >
> > > The changes are internal but extensive.  All packages that use S4
> > > methods and classes need to be reinstalled from source to use the new
> > > version.
> >
> > Is there an easy way to detect if a package is using S4 or not?  If
>
> Yes, look at the Depends field of the DESCRIPTION
>
> a <- installed.packages()
> aa <- as.vector(a[grep("methods", a[, "Depends"]), 1])
> install.packages(aa)

I think it's more complicated than this.  First of all, is it
mandatory for a package to be explicit about 'methods'?  Second, there
are many packages that imports 'methods' implicitly via dependency of
other S4 packages, .e.g see many Bioconductor packages.  Thus, for
this to work we have to build the dependency graph, and it have to
work across repositories.

One way would be to load packages (that are explicit about 'methods')
and do some investigation on them.

>From John Chambers updated post on this thread, it look like we should
reinstall all package to be on the safe side.

>
> If you want to install them in the same place as before, do this for each
> library in turn.
>
> I'd hold off for a few days if you can: some packages will not yet
> reinstall.
>
> > so, I could scan my already installed libraries and call
> > install.packages() on its S4 subset of packages.  The alternative is
> > to do install.packages() an all libraries (sic!).  Bioconductor: maybe
> > biocLite() could have such an update mechanism built in internally?
> >
> > If I miss to reinstall one S4 package, what should I expect?  I assume
> > there will be an error, but I just want to confirm that there is no
> > risk of getting weird "results" but still a running program?
> >
> > Reinstallation is also required for all package that comes as Windows
> > binaries, correct?
>
> Correct, and from source at that since Uwe is not yet building packages
> under R-devel (and his '2.4' is really 2.3, as I understand it).

Ah, that last part is an EXTREMELY IMPORTANT PIECE OF INFORMATION,
related to this S4 update.

I predict that there will unfortunately be a few postings of people
being bitten by this.  I can see how you run install/update.packages()
on a Windows machine and things stops working.  Then there is no
repository to fall back to, and if you do not have the machinery for
installing from source on Windows it's going to be a mess.

It sound like that creating a copy of the (binary) package reprocitory
as is today would be the first precocious step to take.  If problems
occur until Uwe gets his "2.4" up and running, at least this can be
used as a backup for people being bitten by the above.

I'm on Windows too, and at least I will make a local copy of what I've
got today and I will avoid doing install/update.packages() on
CRAN/Bioconductor until I know things are working.  I will also keep
my current R-devel installation around, because that should work with
Uwe's current "2.3" rep, (I believe?).

/H

>
> --
> Brian D. Ripley,                  ripley at stats.ox.ac.uk
> Professor of Applied Statistics,  http://www.stats.ox.ac.uk/~ripley/
> University of Oxford,             Tel:  +44 1865 272861 (self)
> 1 South Parks Road,                     +44 1865 272866 (PA)
> Oxford OX1 3TG, UK                Fax:  +44 1865 272595
>



From murdoch at stats.uwo.ca  Wed Aug 30 19:48:33 2006
From: murdoch at stats.uwo.ca (Duncan Murdoch)
Date: Wed, 30 Aug 2006 13:48:33 -0400
Subject: [Rd] S4 Methods dispatch
In-Reply-To: <44F5CC7F.9060303@r-project.org>
References: <44F591C7.7070900@r-project.org>	<59d7961d0608300957s109b2533t7949c3a83928149d@mail.gmail.com>
	<44F5CC7F.9060303@r-project.org>
Message-ID: <44F5CF71.8090202@stats.uwo.ca>

On 8/30/2006 1:35 PM, John Chambers wrote:
> Henrik Bengtsson wrote:
>> [Cross-posting to BioC-devel to]
>>
>> Thank you for this.
>>
>>> The changes are internal but extensive.  All packages that use S4
>>> methods and classes need to be reinstalled from source to use the new
>>> version.
>>
>> Is there an easy way to detect if a package is using S4 or not?
> 
> If you have your package source in various directories under a single 
> directory (which is how I usually work), then, from the directory above 
> the package directories, the comand:
>      grep "Depends:.*methods" */DESCRIPTION
> will pick up the packages that declare a dependency on methods.  There 
> may be cleaner techniques.

This does the same within R:

 > pkgs <- installed.packages()
 > pkgs[grep("methods", pkgs[,"Depends"]),]

Duncan Murdoch

>> If
>> so, I could scan my already installed libraries and call
>> install.packages() on its S4 subset of packages.  The alternative is
>> to do install.packages() an all libraries (sic!).  Bioconductor: maybe
>> biocLite() could have such an update mechanism built in internally?
>>
>> If I miss to reinstall one S4 package, what should I expect?
> 
> The typical symptom is a clutch of warning messages when you attach the 
> package.  The warnings try to mention that the package may need 
> reinstallling, though sometimes the package name is misleading.
> 
>> I assume
>> there will be an error, but I just want to confirm that there is no
>> risk of getting weird "results" but still a running program?
>>
>> Reinstallation is also required for all package that comes as Windows
>> binaries, correct?
> Anything that uses S4 methods will have out-of-date objects for class 
> and method definitions.
> 
> John
>>
>> Best
>>
>> Henrik
>>
>> On 8/30/06, John Chambers <jmc at r-project.org> wrote:
>>> A revision of r-devel 2.4.0 is being committed today with changes to
>>> method and class management.
>>>
>>> The changes are internal but extensive.  All packages that use S4
>>> methods and classes need to be reinstalled from source to use the new
>>> version.
>>>
>>> The main effects are to speed up method caching and dispatch, and to fix
>>> some problems with selecting inherited methods.  The new design is also
>>> cleaner, so we can experiment more easily in the future with changes for
>>> efficiency or semantics.
>>>
>>> The change will mostly be noticeable in attaching packages with many
>>> methods.  The CPU time for attaching package Matrix, for example, goes
>>> down by about a factor of 7 compared to R 2.3.1, timed on a Mac G5.
>>>
>>> The other major change is that now _all_ inherited methods are examined
>>> and one of the closest matches is chosen.  The old selection took the
>>> first candidate found, so the current version is better defined, and
>>> will also let us experiment with various tuning & strategies.
>>>
>>> There is a draft paper describing method selection at
>>>   http://developer.r-project.org/howMethodsWork.pdf
>>> (It's a document in progress, so go back in a few days for a revised
>>> version.)
>>>
>>> If a package uses inheritance for method selection with multiple
>>> arguments, there may well be changes in behavior.  We found examples in
>>> both methods itself and in Matrix that needed attention.
>>>
>>> John
>>>
>>> ______________________________________________
>>> R-devel at r-project.org mailing list
>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>>
>>>
>>
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel



From pgilbert at bank-banque-canada.ca  Wed Aug 30 20:13:55 2006
From: pgilbert at bank-banque-canada.ca (Paul Gilbert)
Date: Wed, 30 Aug 2006 14:13:55 -0400
Subject: [Rd] 'CanMakeUseOf' field
In-Reply-To: <44F5BFD0.3040502@stats.uwo.ca>
References: <m2wt8sgyo0.fsf@ziti.fhcrc.org>	<17651.65163.240840.365787@stat.math.ethz.ch>	<44F4473D.9030203@bank-banque-canada.ca>	<17652.19292.998960.686119@stat.math.ethz.ch>	<44F46112.7060809@stats.uwo.ca>	<m2d5ajedon.fsf@ziti.fhcrc.org>	<63945.151.100.49.234.1156923253.squirrel@webmail.lrz-muenchen.de>	<17653.20470.199569.870638@stat.math.ethz.ch>	<44F5A0E9.1010309@stats.uwo.ca>
	<44F5BCB9.7030702@bank-banque-canada.ca>
	<44F5BFD0.3040502@stats.uwo.ca>
Message-ID: <44F5D563.6090601@bank-banque-canada.ca>



Duncan Murdoch wrote:
> On 8/30/2006 12:28 PM, Paul Gilbert wrote:
>> Duncan Murdoch wrote:
>>> On 8/30/2006 4:44 AM, Martin Maechler wrote:
>>>>>>>>> "FrL" == friedrich leisch <friedrich.leisch at stat.uni-muenchen.de>
>>>>>>>>>     on Wed, 30 Aug 2006 09:34:13 +0200 (MEST) writes:
>>>>     >> Duncan Murdoch <murdoch at stats.uwo.ca> writes:
>>>>     >>> I think we need an option to R CMD check rather than a new 
>>>> field in the
>>>>     >>> DESCRIPTION.  Currently a package could be mentioned for any 
>>>> of these
>>>>     >>> reasons:
>>>>     >>>     >>> 1.  To make functions, examples or vignettes work
>>>>     >>> 2.  To allow optional functionality in functions, examples 
>>>> or vignettes.
>>>>     >>> 3.  Because it contains complementary functions.
>>>>     >>>     >>> I don't think we really need to worry about 3:  it 
>>>> should be contained
>>>>     >>> in 1 or 2, if reasonably complete examples are given.
>>>>     >>>     >>> Case 1 is handled by Depends.
>>>>     >>     >> I think there is an important distinction between a 
>>>> dependency needed
>>>>     >> for the package to function and a dependency needed to 
>>>> demonstrate
>>>>     >> said functionality via an example or vignette.  The former is 
>>>> what
>>>>     >> Depends is about, the latter is something else (Suggests).
>>>>
>>>>     FrL> Sorry to join in late, I am at the Compstat conference and 
>>>> have limited
>>>>     FrL> email access. What Seth describes in the above paragraph is 
>>>> exactly what I
>>>>     FrL> had in mind when splitting the single Depends field we had 
>>>> into Depends
>>>>     FrL> and Suggests: Depends are a necessity to run the package, 
>>>> Suggests is nice
>>>>     FrL> to have but not necessary. If you know how to use a package 
>>>> you may the
>>>>     FrL> decide not to install a package that is only suggested, but
>>>>
>>>>     FrL> * may not be interested to execute the examples,
>>>>     FrL> * know that you never need the extra functionality
>>>>     FrL> * ...
>>>>
>>>>     FrL> so it should not be auto-installed unless you ask for
>>>>     FrL> it (the default could also be the other way round, the
>>>>     FrL> point is that it should be possible to have package foo
>>>>     FrL> but not the packages it only suggests). On CRAN we
>>>>     FrL> check with all suggestions to test all bits and pieces,
>>>>     FrL> having an option in R CMD check to test only with
>>>>     FrL> suggests may be nice, if there is use for it.
>>>>
>>>> Yes.
>>>> However, I see two (related) problems with the current 'Suggests'
>>>> and that's why I opened this thread proposing to have a (what I now 
>>>> would want to simply call)  'canUse' :
>>>>
>>>> 1) For 'R CMD check' (and hence CRAN checking),
>>>>    Packages in 'Suggests' must be require()able, and
>>>>    hence all testing only happens *with* the suggested packages
>>>>    being there, and not without.
>>>>
>>>> 2) "Suggests"  suggests to the human reader of DESCRIPTION that
>>>>    the package authors suggest to also install the packages listed
>>>>    there.
>>>>    Now there are cases, I (as package author) want to show some
>>>>    stuff, or even provide compatibility functionality for some
>>>>    packages that are related to mine, but which I really do not 
>>>> ``suggest''
>>>>    to also be installed, e.g., because the other packages do
>>>>    similar stuff as mine, but I believe my package to be
>>>>    superior.  In such a case, I may, e.g., want to provide    
>>>> functions for porting the other package classes to my package's.
>>>>
>>>> Duncan Murdoch has proposed to take care of "1)" by
>>>> still only use 'Suggests' but adding another option to 'R CMD
>>>> check', let's say   --no-suggests  which would run all the
>>>> checks without having the suggested packages available  --- 
>>>> something not quite easy to implement, BTW:
>>>> Imagine the typical windows users who (AFAICS) always only use
>>>> one library into which they install all packages.
>>>> How do you want the     if( require(<my_suggested_package>) ) {
>>>>        ...
>>>>     }
>>>> clause *not* to be triggered in such a case ?
>>>
>>> I would expect require to return FALSE.  This could be done by check 
>>> installing a new version of require() (as it installs new T and F), 
>>> or by the standard require() being modified to check a stop list 
>>> before acting (I'd prefer this, because it would make it easier for 
>>> developers to experiment with functions in different environments), 
>>> or by playing around with the names of things in the library 
>>> (probably not workable on Windows), etc.
>>>
>>> I think the default check behaviour on CRAN should be my middle case: 
>>> test based on what is currently installed, don't require packages 
>>> listed in Suggests to be installed.  I'm not sure if that should be 
>>> the default behaviour for R CMD check at the command line:  as Kurt 
>>> said, usually a developer wants to check all of the code.
>>>
>>>> I do agree quite a bit that such a '--no-suggests' option would
>>>> be very useful for 'R CMD check' -- in addition to my proposal.
>>>
>>> I think the other extreme (which I think is there now as 
>>> _R_CHECK_FORCE_SUGGESTS_) is also important.
>>>
>>>> Further, I think "2)" above is not taken care of anyway.
>>>> After all the interesting statements and alternative proposals,
>>>> I'm still proposing to introduce a  'canUse'  field for DESCRIPTION
>>>> which
>>>>   a) has a "human-readable intent" of being weaker than 'Suggests'
>>>>   b) will not require its packages to be available for R CMD check
>>>>   c) conveys extra information about the package's context, to 
>>>> humans, and
>>>>   d) will potentially be used in automated or semi-manual      ``R 
>>>> package database management''
>>>
>>> I think d) is important, but I think there are too many variations on 
>>> a) and c) to hope that this would be used consistently.  As Fritz 
>>> said, the thing he can remember (and what I would remember) is 
>>> whether a package is mandatory or optional.  Fine variations within 
>>> "optional" are just too hard to define clearly in a two-level 
>>> classification.
>>>
>>> On the other hand, they are relatively easy to convey in clearly 
>>> written documentation.  So I'd still recommend that we stay with just 
>>> Depends and Suggests, but encourage authors to document what they 
>>> mean by "Suggests".
>>
>> The problem I see here is that this is a change from the status quo, 
>> which is likely to make a real mess for some time.  
> 
> I'm not sure what your "this" refers to.  Was it my suggestion or 
> Martin's?  Must be his, I never make a real mess :-)

I was referring to 'but encourage authors to document what they mean by 
"Suggests"', which to me implies that every developer gets to define 
what Suggests means to them.  Thus, I would get to make a real mess, 
which I usually manage to do even without it being a legitimate option.:-)

> 
> Duncan Murdoch
> 
>  > The status quo is
>> that packages in Depends and Suggests are needed to check examples and 
>> vignettes. I would not change this without a very good reason.  It 
>> would be best to put other suggestions of extensions, that some users 
>> may want to use, somewhere else.  The current situation is that these 
>> suggestions are sprinkled in Rd files, vignettes, web pages, etc. This 
>> situation is not too bad, but it might be nice to have some place 
>> users would expect to find this information.  However, changing the 
>> meaning of Suggests to be developer defined does not strike me as an 
>> improvement.
>>
>> Paul Gilbert
>>>
>>> Duncan Murdoch
>>>
>>>> Martin
>>>>
>>>>     FrL> Ad the wording in the manual: obviously that is not
>>>>     FrL> optimal (otherwise no need for parts of this email
>>>>     FrL> thread), perhaps somebody else than the original author
>>>>     FrL> (=me) could try to improve it for 2.4 after this
>>>>     FrL> clarifications?  Otherwise I will give it a shot next
>>>>     FrL> week after I return from Rome.
>>>>
>>>> ______________________________________________
>>>> R-devel at r-project.org mailing list
>>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>>
>>> ______________________________________________
>>> R-devel at r-project.org mailing list
>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>> ==================================================================================== 
>>
>>
>> La version fran?aise suit le texte anglais.
>>
>> ------------------------------------------------------------------------------------ 
>>
>>
>> This email may contain privileged and/or confidential information, and 
>> the Bank of
>> Canada does not waive any related rights. Any distribution, use, or 
>> copying of this
>> email or the information it contains by other than the intended 
>> recipient is
>> unauthorized. If you received this email in error please delete it 
>> immediately from
>> your system and notify the sender promptly by email that you have done 
>> so.
>> ------------------------------------------------------------------------------------ 
>>
>>
>> Le pr?sent courriel peut contenir de l'information privil?gi?e ou 
>> confidentielle.
>> La Banque du Canada ne renonce pas aux droits qui s'y rapportent. 
>> Toute diffusion,
>> utilisation ou copie de ce courriel ou des renseignements qu'il 
>> contient par une
>> personne autre que le ou les destinataires d?sign?s est interdite. Si 
>> vous recevez
>> ce courriel par erreur, veuillez le supprimer imm?diatement et envoyer 
>> sans d?lai ?
>> l'exp?diteur un message ?lectronique pour l'aviser que vous avez 
>> ?limin? de votre
>> ordinateur toute copie du courriel re?u.
====================================================================================

La version fran?aise suit le texte anglais.

------------------------------------------------------------------------------------

This email may contain privileged and/or confidential inform...{{dropped}}



From sfalcon at fhcrc.org  Wed Aug 30 20:25:03 2006
From: sfalcon at fhcrc.org (Seth Falcon)
Date: Wed, 30 Aug 2006 11:25:03 -0700
Subject: [Rd] S4 Methods dispatch
In-Reply-To: <59d7961d0608301042u6762eb3ckc5aad1a2e51f0a1b@mail.gmail.com>
	(Henrik Bengtsson's message of "Wed, 30 Aug 2006 10:42:49 -0700")
References: <44F591C7.7070900@r-project.org>
	<59d7961d0608300957s109b2533t7949c3a83928149d@mail.gmail.com>
	<Pine.LNX.4.64.0608301801350.3574@gannet.stats.ox.ac.uk>
	<59d7961d0608301042u6762eb3ckc5aad1a2e51f0a1b@mail.gmail.com>
Message-ID: <m23bbe3wu8.fsf@ziti.fhcrc.org>

"Henrik Bengtsson" <hb at stat.berkeley.edu> writes:
> I think it's more complicated than this.  First of all, is it
> mandatory for a package to be explicit about 'methods'?  Second, there
> are many packages that imports 'methods' implicitly via dependency of
> other S4 packages, .e.g see many Bioconductor packages.  Thus, for
> this to work we have to build the dependency graph, and it have to
> work across repositories.

[As I already posted, I don't think this is worth the effort, better
to just reinstall.]

But this coincides with work I've been doing on tools for package
dependency graphs.  If you're curious, read on...


allDeps <- makeDepGraph(biocReposList(), type="source", 
                        keep.builtin=TRUE, dosize=FALSE)

allDepsOnMe <- reverseEdgeDirections(allDeps)

needsMethods <- dijkstra.sp(allDepsOnMe, start="methods")

needsMethods <- needsMethods$distance[is.finite(needsMethods$distance)]

length(needsMethods)
[1] 514

table(needsMethods)
needsMethods
  0   1   2   3 
  1 130 118 265 

I won't spam the mailing list with the package names, but am happy to
make them available if anyone would really find it useful.

Bw,

+ seth



From gilescrane at verizon.net  Wed Aug 30 22:02:45 2006
From: gilescrane at verizon.net (gilescrane at verizon.net)
Date: Wed, 30 Aug 2006 15:02:45 -0500 (CDT)
Subject: [Rd] Suggestion for read.table()
Message-ID: <6769639.199881156968166072.JavaMail.root@vms070.mailsrvcs.net>

First, I compliment you all
for such a useful project as R.

Suggestion:  If read.table() could
take input from a character string,
then one could write

raw=
"  x   y  z
   1   2  3
   4   5  6
"
df = read.table(raw,head=TRUE)

Of course, one can
cat() to write raw into a 
temporary file,
and read.table() from that file.
However, direct reading 
might be a good option?

Hope this is useful.
Cordially
Giles Crane
gilescrane at verizon.net



From murdoch at stats.uwo.ca  Wed Aug 30 22:12:27 2006
From: murdoch at stats.uwo.ca (Duncan Murdoch)
Date: Wed, 30 Aug 2006 16:12:27 -0400
Subject: [Rd] 'CanMakeUseOf' field
In-Reply-To: <44F5D563.6090601@bank-banque-canada.ca>
References: <m2wt8sgyo0.fsf@ziti.fhcrc.org>	<17651.65163.240840.365787@stat.math.ethz.ch>	<44F4473D.9030203@bank-banque-canada.ca>	<17652.19292.998960.686119@stat.math.ethz.ch>	<44F46112.7060809@stats.uwo.ca>	<m2d5ajedon.fsf@ziti.fhcrc.org>	<63945.151.100.49.234.1156923253.squirrel@webmail.lrz-muenchen.de>	<17653.20470.199569.870638@stat.math.ethz.ch>	<44F5A0E9.1010309@stats.uwo.ca>	<44F5BCB9.7030702@bank-banque-canada.ca>	<44F5BFD0.3040502@stats.uwo.ca>
	<44F5D563.6090601@bank-banque-canada.ca>
Message-ID: <44F5F12B.7050808@stats.uwo.ca>

On 8/30/2006 2:13 PM, Paul Gilbert wrote:
> 
> Duncan Murdoch wrote:
>> On 8/30/2006 12:28 PM, Paul Gilbert wrote:
>>> Duncan Murdoch wrote:
>>>> On 8/30/2006 4:44 AM, Martin Maechler wrote:
>>>>>>>>>> "FrL" == friedrich leisch <friedrich.leisch at stat.uni-muenchen.de>
>>>>>>>>>>     on Wed, 30 Aug 2006 09:34:13 +0200 (MEST) writes:
>>>>>     >> Duncan Murdoch <murdoch at stats.uwo.ca> writes:
>>>>>     >>> I think we need an option to R CMD check rather than a new 
>>>>> field in the
>>>>>     >>> DESCRIPTION.  Currently a package could be mentioned for any 
>>>>> of these
>>>>>     >>> reasons:
>>>>>     >>>     >>> 1.  To make functions, examples or vignettes work
>>>>>     >>> 2.  To allow optional functionality in functions, examples 
>>>>> or vignettes.
>>>>>     >>> 3.  Because it contains complementary functions.
>>>>>     >>>     >>> I don't think we really need to worry about 3:  it 
>>>>> should be contained
>>>>>     >>> in 1 or 2, if reasonably complete examples are given.
>>>>>     >>>     >>> Case 1 is handled by Depends.
>>>>>     >>     >> I think there is an important distinction between a 
>>>>> dependency needed
>>>>>     >> for the package to function and a dependency needed to 
>>>>> demonstrate
>>>>>     >> said functionality via an example or vignette.  The former is 
>>>>> what
>>>>>     >> Depends is about, the latter is something else (Suggests).
>>>>>
>>>>>     FrL> Sorry to join in late, I am at the Compstat conference and 
>>>>> have limited
>>>>>     FrL> email access. What Seth describes in the above paragraph is 
>>>>> exactly what I
>>>>>     FrL> had in mind when splitting the single Depends field we had 
>>>>> into Depends
>>>>>     FrL> and Suggests: Depends are a necessity to run the package, 
>>>>> Suggests is nice
>>>>>     FrL> to have but not necessary. If you know how to use a package 
>>>>> you may the
>>>>>     FrL> decide not to install a package that is only suggested, but
>>>>>
>>>>>     FrL> * may not be interested to execute the examples,
>>>>>     FrL> * know that you never need the extra functionality
>>>>>     FrL> * ...
>>>>>
>>>>>     FrL> so it should not be auto-installed unless you ask for
>>>>>     FrL> it (the default could also be the other way round, the
>>>>>     FrL> point is that it should be possible to have package foo
>>>>>     FrL> but not the packages it only suggests). On CRAN we
>>>>>     FrL> check with all suggestions to test all bits and pieces,
>>>>>     FrL> having an option in R CMD check to test only with
>>>>>     FrL> suggests may be nice, if there is use for it.
>>>>>
>>>>> Yes.
>>>>> However, I see two (related) problems with the current 'Suggests'
>>>>> and that's why I opened this thread proposing to have a (what I now 
>>>>> would want to simply call)  'canUse' :
>>>>>
>>>>> 1) For 'R CMD check' (and hence CRAN checking),
>>>>>    Packages in 'Suggests' must be require()able, and
>>>>>    hence all testing only happens *with* the suggested packages
>>>>>    being there, and not without.
>>>>>
>>>>> 2) "Suggests"  suggests to the human reader of DESCRIPTION that
>>>>>    the package authors suggest to also install the packages listed
>>>>>    there.
>>>>>    Now there are cases, I (as package author) want to show some
>>>>>    stuff, or even provide compatibility functionality for some
>>>>>    packages that are related to mine, but which I really do not 
>>>>> ``suggest''
>>>>>    to also be installed, e.g., because the other packages do
>>>>>    similar stuff as mine, but I believe my package to be
>>>>>    superior.  In such a case, I may, e.g., want to provide    
>>>>> functions for porting the other package classes to my package's.
>>>>>
>>>>> Duncan Murdoch has proposed to take care of "1)" by
>>>>> still only use 'Suggests' but adding another option to 'R CMD
>>>>> check', let's say   --no-suggests  which would run all the
>>>>> checks without having the suggested packages available  --- 
>>>>> something not quite easy to implement, BTW:
>>>>> Imagine the typical windows users who (AFAICS) always only use
>>>>> one library into which they install all packages.
>>>>> How do you want the     if( require(<my_suggested_package>) ) {
>>>>>        ...
>>>>>     }
>>>>> clause *not* to be triggered in such a case ?
>>>>
>>>> I would expect require to return FALSE.  This could be done by check 
>>>> installing a new version of require() (as it installs new T and F), 
>>>> or by the standard require() being modified to check a stop list 
>>>> before acting (I'd prefer this, because it would make it easier for 
>>>> developers to experiment with functions in different environments), 
>>>> or by playing around with the names of things in the library 
>>>> (probably not workable on Windows), etc.
>>>>
>>>> I think the default check behaviour on CRAN should be my middle case: 
>>>> test based on what is currently installed, don't require packages 
>>>> listed in Suggests to be installed.  I'm not sure if that should be 
>>>> the default behaviour for R CMD check at the command line:  as Kurt 
>>>> said, usually a developer wants to check all of the code.
>>>>
>>>>> I do agree quite a bit that such a '--no-suggests' option would
>>>>> be very useful for 'R CMD check' -- in addition to my proposal.
>>>>
>>>> I think the other extreme (which I think is there now as 
>>>> _R_CHECK_FORCE_SUGGESTS_) is also important.
>>>>
>>>>> Further, I think "2)" above is not taken care of anyway.
>>>>> After all the interesting statements and alternative proposals,
>>>>> I'm still proposing to introduce a  'canUse'  field for DESCRIPTION
>>>>> which
>>>>>   a) has a "human-readable intent" of being weaker than 'Suggests'
>>>>>   b) will not require its packages to be available for R CMD check
>>>>>   c) conveys extra information about the package's context, to 
>>>>> humans, and
>>>>>   d) will potentially be used in automated or semi-manual      ``R 
>>>>> package database management''
>>>>
>>>> I think d) is important, but I think there are too many variations on 
>>>> a) and c) to hope that this would be used consistently.  As Fritz 
>>>> said, the thing he can remember (and what I would remember) is 
>>>> whether a package is mandatory or optional.  Fine variations within 
>>>> "optional" are just too hard to define clearly in a two-level 
>>>> classification.
>>>>
>>>> On the other hand, they are relatively easy to convey in clearly 
>>>> written documentation.  So I'd still recommend that we stay with just 
>>>> Depends and Suggests, but encourage authors to document what they 
>>>> mean by "Suggests".
>>>
>>> The problem I see here is that this is a change from the status quo, 
>>> which is likely to make a real mess for some time.  
>> 
>> I'm not sure what your "this" refers to.  Was it my suggestion or 
>> Martin's?  Must be his, I never make a real mess :-)
> 
> I was referring to 'but encourage authors to document what they mean by 
> "Suggests"', which to me implies that every developer gets to define 
> what Suggests means to them.  Thus, I would get to make a real mess, 
> which I usually manage to do even without it being a legitimate option.:-)

Suggests has some meaning to R, basically corresponding to "is optional 
but possibly useful".  Developers should explain why they chose to label 
a package that way within R.  I don't see how they could mess this up.

Duncan Murdoch

> 
>> 
>> Duncan Murdoch
>> 
>>  > The status quo is
>>> that packages in Depends and Suggests are needed to check examples and 
>>> vignettes. I would not change this without a very good reason.  It 
>>> would be best to put other suggestions of extensions, that some users 
>>> may want to use, somewhere else.  The current situation is that these 
>>> suggestions are sprinkled in Rd files, vignettes, web pages, etc. This 
>>> situation is not too bad, but it might be nice to have some place 
>>> users would expect to find this information.  However, changing the 
>>> meaning of Suggests to be developer defined does not strike me as an 
>>> improvement.
>>>
>>> Paul Gilbert
>>>>
>>>> Duncan Murdoch
>>>>
>>>>> Martin
>>>>>
>>>>>     FrL> Ad the wording in the manual: obviously that is not
>>>>>     FrL> optimal (otherwise no need for parts of this email
>>>>>     FrL> thread), perhaps somebody else than the original author
>>>>>     FrL> (=me) could try to improve it for 2.4 after this
>>>>>     FrL> clarifications?  Otherwise I will give it a shot next
>>>>>     FrL> week after I return from Rome.
>>>>>
>>>>> ______________________________________________
>>>>> R-devel at r-project.org mailing list
>>>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>>>
>>>> ______________________________________________
>>>> R-devel at r-project.org mailing list
>>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>> ==================================================================================== 
>>>
>>>
>>> La version fran?aise suit le texte anglais.
>>>
>>> ------------------------------------------------------------------------------------ 
>>>
>>>
>>> This email may contain privileged and/or confidential information, and 
>>> the Bank of
>>> Canada does not waive any related rights. Any distribution, use, or 
>>> copying of this
>>> email or the information it contains by other than the intended 
>>> recipient is
>>> unauthorized. If you received this email in error please delete it 
>>> immediately from
>>> your system and notify the sender promptly by email that you have done 
>>> so.
>>> ------------------------------------------------------------------------------------ 
>>>
>>>
>>> Le pr?sent courriel peut contenir de l'information privil?gi?e ou 
>>> confidentielle.
>>> La Banque du Canada ne renonce pas aux droits qui s'y rapportent. 
>>> Toute diffusion,
>>> utilisation ou copie de ce courriel ou des renseignements qu'il 
>>> contient par une
>>> personne autre que le ou les destinataires d?sign?s est interdite. Si 
>>> vous recevez
>>> ce courriel par erreur, veuillez le supprimer imm?diatement et envoyer 
>>> sans d?lai ?
>>> l'exp?diteur un message ?lectronique pour l'aviser que vous avez 
>>> ?limin? de votre
>>> ordinateur toute copie du courriel re?u.
> ====================================================================================
> 
> La version fran?aise suit le texte anglais.
> 
> ------------------------------------------------------------------------------------
> 
> This email may contain privileged and/or confidential inform...{{dropped}}
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel



From ggrothendieck at gmail.com  Wed Aug 30 22:12:42 2006
From: ggrothendieck at gmail.com (Gabor Grothendieck)
Date: Wed, 30 Aug 2006 16:12:42 -0400
Subject: [Rd] Suggestion for read.table()
In-Reply-To: <6769639.199881156968166072.JavaMail.root@vms070.mailsrvcs.net>
References: <6769639.199881156968166072.JavaMail.root@vms070.mailsrvcs.net>
Message-ID: <971536df0608301312u24038aa9g93b5f8a658aac13a@mail.gmail.com>

Try this:

> raw=
+ "  x   y  z
+   1   2  3
+   4   5  6
+ "
> read.table(textConnection(raw), header = TRUE)
  x y z
1 1 2 3
2 4 5 6



On 8/30/06, gilescrane at verizon.net <gilescrane at verizon.net> wrote:
> First, I compliment you all
> for such a useful project as R.
>
> Suggestion:  If read.table() could
> take input from a character string,
> then one could write
>
> raw=
> "  x   y  z
>   1   2  3
>   4   5  6
> "
> df = read.table(raw,head=TRUE)
>
> Of course, one can
> cat() to write raw into a
> temporary file,
> and read.table() from that file.
> However, direct reading
> might be a good option?
>
> Hope this is useful.
> Cordially
> Giles Crane
> gilescrane at verizon.net
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>



From ripley at stats.ox.ac.uk  Wed Aug 30 22:15:45 2006
From: ripley at stats.ox.ac.uk (Prof Brian Ripley)
Date: Wed, 30 Aug 2006 21:15:45 +0100 (BST)
Subject: [Rd] Suggestion for read.table()
In-Reply-To: <6769639.199881156968166072.JavaMail.root@vms070.mailsrvcs.net>
References: <6769639.199881156968166072.JavaMail.root@vms070.mailsrvcs.net>
Message-ID: <Pine.LNX.4.64.0608302110340.19806@gannet.stats.ox.ac.uk>

On Wed, 30 Aug 2006, gilescrane at verizon.net wrote:

> First, I compliment you all
> for such a useful project as R.
> 
> Suggestion:  If read.table() could
> take input from a character string,
> then one could write
> 
> raw=
> "  x   y  z
>    1   2  3
>    4   5  6
> "
> df = read.table(raw,head=TRUE)

'raw' is the name of a function in R, so not a good choice.

> Of course, one can
> cat() to write raw into a 
> temporary file,
> and read.table() from that file.

Yes, we have anonymous file connections for that.

> However, direct reading might be a good option?

See ?textConnection for how to do this.

inp <- "  x   y  z
    1   2  3
    4   5  6
"
read.table(textConnection(inp), header=TRUE)

The most common case is wanting to paste in, and we have "clipboard" for 
that (at least on Windows on X11: it would be a nice addition on Aqua).

-- 
Brian D. Ripley,                  ripley at stats.ox.ac.uk
Professor of Applied Statistics,  http://www.stats.ox.ac.uk/~ripley/
University of Oxford,             Tel:  +44 1865 272861 (self)
1 South Parks Road,                     +44 1865 272866 (PA)
Oxford OX1 3TG, UK                Fax:  +44 1865 272595



From huber at ebi.ac.uk  Wed Aug 30 22:15:44 2006
From: huber at ebi.ac.uk (Wolfgang Huber)
Date: Wed, 30 Aug 2006 13:15:44 -0700
Subject: [Rd] Suggestion for read.table()
In-Reply-To: <6769639.199881156968166072.JavaMail.root@vms070.mailsrvcs.net>
References: <6769639.199881156968166072.JavaMail.root@vms070.mailsrvcs.net>
Message-ID: <44F5F1F0.3000008@ebi.ac.uk>

Hi Giles,

x = "x y z\n1 2 3\n4 5 6"
res = read.table(textConnection(x), header=TRUE)

will do. See also http://cran.r-project.org/doc/manuals/R-data.html

  Best wishes
   Wolfgang Huber
   EMBL-EBI, Cambridge UK

gilescrane at verizon.net wrote:
> First, I compliment you all
> for such a useful project as R.
> 
> Suggestion:  If read.table() could
> take input from a character string,
> then one could write
> 
> raw=
> "  x   y  z
>    1   2  3
>    4   5  6
> "
> df = read.table(raw,head=TRUE)
> 
> Of course, one can
> cat() to write raw into a 
> temporary file,
> and read.table() from that file.
> However, direct reading 
> might be a good option?
> 
> Hope this is useful.
> Cordially
> Giles Crane
> gilescrane at verizon.net



From gregor.gorjanc at bfro.uni-lj.si  Thu Aug 31 01:32:41 2006
From: gregor.gorjanc at bfro.uni-lj.si (Gregor Gorjanc)
Date: Thu, 31 Aug 2006 01:32:41 +0200
Subject: [Rd] make test-Specific?
Message-ID: <44F62019.7030907@bfro.uni-lj.si>

Hello!

In Writing R Extensions manual, section "Testing R code"[1] says:
"be careful to check if make test-Specific or particularly, cd tests;
make no-segfault.Rout"

Actually, make test-Specific also needs "cd tests;" in front.

[1]http://cran.r-project.org/doc/manuals/R-exts.html#Testing-R-code

-- 
Lep pozdrav / With regards,
    Gregor Gorjanc

----------------------------------------------------------------------
University of Ljubljana     PhD student
Biotechnical Faculty
Zootechnical Department     URI: http://www.bfro.uni-lj.si/MR/ggorjan
Groblje 3                   mail: gregor.gorjanc <at> bfro.uni-lj.si

SI-1230 Domzale             tel: +386 (0)1 72 17 861
Slovenia, Europe            fax: +386 (0)1 72 17 888

----------------------------------------------------------------------
"One must learn by doing the thing; for though you think you know it,
 you have no certainty until you try." Sophocles ~ 450 B.C.



From gregor.gorjanc at bfro.uni-lj.si  Thu Aug 31 01:41:19 2006
From: gregor.gorjanc at bfro.uni-lj.si (gregor.gorjanc at bfro.uni-lj.si)
Date: Thu, 31 Aug 2006 01:41:19 +0200 (CEST)
Subject: [Rd] Summary() fails after use of na.action="na.exclude" in lm()
	(PR#9191)
Message-ID: <20060830234119.8F1D24C9CF@slim.kubism.ku.dk>

Hello!

I have already reported on this behaviour at [1] and now I have checked
the same example on r-devel and the problem is still there. Thomas
Lumley inidicated problem [2]. Example:

n <- 50
x <- runif(n=n)
y1 <- 2 * x + rnorm(n=n)
y2 <- 5 * x + rnorm(n=n)
y2[sample(1:n, size=5)] <- NA

y <- cbind(y1, y2)

## Goes ok here
fit <- lm(y1 ~ 1, na.action="na.exclude")
summary(fit)

## And here
fit <- lm(y2 ~ 1, na.action="na.exclude")
summary(fit)

## But fails if we use matrix of response variables
fit <- lm(y ~ 1, na.action="na.exclude")
summary(fit)

Response y1 :

Call:
lm(formula = y1 ~ 1, na.action = "na.exclude")

Residuals:
Error in quantile.default(resid) : missing values and NaN's not allowed
if 'na.rm' is FALSE

[1]http://tolstoy.newcastle.edu.au/R/devel/06/07/6187.html
[2]http://tolstoy.newcastle.edu.au/R/devel/06/07/6203.html

--please do not edit the information below--

Version:
 platform = i686-pc-linux-gnu
 arch = i686
 os = linux-gnu
 system = i686, linux-gnu
 status = Under development (unstable)
 major = 2
 minor = 4.0
 year = 2006
 month = 08
 day = 30
 svn rev = 39022
 language = R
 version.string = R version 2.4.0 Under development (unstable)
(2006-08-30 r39022)

Locale:
LC_CTYPE=en_GB.UTF-8;LC_NUMERIC=C;LC_TIME=en_GB.UTF-8;LC_COLLATE=en_GB.UTF-8;LC_MONETARY=en_GB.UTF-8;LC_MESSAGES=en_GB.UTF-8;LC_PAPER=en_GB.UTF-8;LC_NAME=C;LC_ADDRESS=C;LC_TELEPHONE=C;LC_MEASUREMENT=en_GB.UTF-8;LC_IDENTIFICATION=C

Search Path:
 .GlobalEnv, package:methods, package:stats, package:graphics,
package:grDevices, package:utils, package:datasets, Autoloads, package:base

-- 
Lep pozdrav / With regards,
    Gregor Gorjanc

----------------------------------------------------------------------
University of Ljubljana     PhD student
Biotechnical Faculty
Zootechnical Department     URI: http://www.bfro.uni-lj.si/MR/ggorjan
Groblje 3                   mail: gregor.gorjanc <at> bfro.uni-lj.si

SI-1230 Domzale             tel: +386 (0)1 72 17 861
Slovenia, Europe            fax: +386 (0)1 72 17 888

----------------------------------------------------------------------
"One must learn by doing the thing; for though you think you know it,
 you have no certainty until you try." Sophocles ~ 450 B.C.



From gregor.gorjanc at bfro.uni-lj.si  Thu Aug 31 02:16:25 2006
From: gregor.gorjanc at bfro.uni-lj.si (Gregor Gorjanc)
Date: Thu, 31 Aug 2006 02:16:25 +0200
Subject: [Rd] Wish: keep names in mapply() result
Message-ID: <44F62A59.8040301@bfro.uni-lj.si>

Hello!

I have noticed that mapply() drops names in R 2.3.1 as well as in
r-devel. Here is a simple example:

l <- list(a=1, b=2)
k <- list(1)
mapply(FUN="+", l, k)
[1] 2 3
mapply(FUN="+", l, k, SIMPLIFY=FALSE)
[[1]]
[1] 2

[[2]]
[1] 3

Help page does not indicate that this should happen. Argument USE.NAMES
does not have any effect here as it used only in a bit special
situation: "If the first ... argument is character and the result does
not already have names, use it as the names." But result is always
without names as shown above. Did I miss any peculiarities?

This is not consistent with lapply, which keeps names i.e.

lapply(l, "+", 1)
$a
[1] 2

$b
[1] 3

I have attached and copied (at the end) patch proposal against SVN that
adds names back to the result if x had it (only R as my C is ...). This
way it would also be consistent with lapply. make check-all seems to be
happy with changes. Now we get:

mapply(FUN="+", l, k)
a b
2 3

mapply(FUN="+", l, k, SIMPLIFY=FALSE)
$a
[1] 2

$b
[1] 3

And if we had "character" (with some variations) for first ... then:

l <- list(a="1", b="2")
mapply(FUN="paste", l, k)
    a     b
"1 1" "2 1"

l <- list("1", "2")
mapply(FUN="paste", l, k)
[1] "1 1" "2 1"

l <- c("1", "2")
mapply(FUN="paste", l, k)
    1     2
"1 1" "2 1"

Index: src/library/base/R/mapply.R
===================================================================
--- src/library/base/R/mapply.R (revision 39024)
+++ src/library/base/R/mapply.R (working copy)
@@ -3,8 +3,16 @@
     FUN <- match.fun(FUN)
     dots <- list(...)

+    if(!is.null(names(dots[[1]]))) {
+        isNamed <- TRUE
+        namesX <- names(dots[[1]])
+    } else {
+        isNamed <- FALSE
+    }
+
     answer<-.Call("do_mapply", FUN, dots, MoreArgs, environment(),
                   PACKAGE="base")
+    if(isNamed) names(answer) <- namesX

     if (USE.NAMES && length(dots) && is.character(dots[[1]]) &&
         is.null(names(answer))) names(answer) <- dots[[1]]
@@ -47,4 +55,4 @@
     }
     formals(FUNV) <- formals(FUN)
     FUNV
-}
\ No newline at end of file
+}

-- 
Lep pozdrav / With regards,
    Gregor Gorjanc

----------------------------------------------------------------------
University of Ljubljana     PhD student
Biotechnical Faculty
Zootechnical Department     URI: http://www.bfro.uni-lj.si/MR/ggorjan
Groblje 3                   mail: gregor.gorjanc <at> bfro.uni-lj.si

SI-1230 Domzale             tel: +386 (0)1 72 17 861
Slovenia, Europe            fax: +386 (0)1 72 17 888

----------------------------------------------------------------------
"One must learn by doing the thing; for though you think you know it,
 you have no certainty until you try." Sophocles ~ 450 B.C.
----------------------------------------------------------------------
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: mapply.R.namesPatch
Url: https://stat.ethz.ch/pipermail/r-devel/attachments/20060831/0a234e2c/attachment-0004.ksh 

From cberry at tajo.ucsd.edu  Thu Aug 31 05:20:40 2006
From: cberry at tajo.ucsd.edu (Charles C. Berry)
Date: Wed, 30 Aug 2006 20:20:40 -0700
Subject: [Rd] Wish: keep names in mapply() result
In-Reply-To: <44F62A59.8040301@bfro.uni-lj.si>
References: <44F62A59.8040301@bfro.uni-lj.si>
Message-ID: <Pine.LNX.4.64.0608302010200.28278@tajo.ucsd.edu>


Gregor:

Works for me on 2.3.0:

> mapply(function(x,y,z) paste(y,z), letters,as.list(LETTERS),as.list(1:26))[ 1:5 ]
     a     b     c     d     e 
"A 1" "B 2" "C 3" "D 4" "E 5" 
> mapply(function(x,y,z) paste(x,y,z), letters,as.list(LETTERS),as.list(1:26))[ 1:5 ]
       a       b       c       d       e 
"a A 1" "b B 2" "c C 3" "d D 4" "e E 5" 
>

but  this does not yield names:

> mapply(function(x,y,z) paste(x,y,z), as.list(letters),as.list(LETTERS),as.list(1:26))[ 1:5 ]
[1] "a A 1" "b B 2" "c C 3" "d D 4" "e E 5"


Perhaps the help page would be clearer if it said:

USE.NAMES: If the first ... argument is a character ***vector*** and the result
           doesn't already have names, use it as the names


Chuck


On Thu, 31 Aug 2006, Gregor Gorjanc wrote:

> Hello!
>
> I have noticed that mapply() drops names in R 2.3.1 as well as in
> r-devel. Here is a simple example:
>
> l <- list(a=1, b=2)
> k <- list(1)
> mapply(FUN="+", l, k)
> [1] 2 3
> mapply(FUN="+", l, k, SIMPLIFY=FALSE)
> [[1]]
> [1] 2
>
> [[2]]
> [1] 3
>
> Help page does not indicate that this should happen. Argument USE.NAMES
> does not have any effect here as it used only in a bit special
> situation: "If the first ... argument is character and the result does
> not already have names, use it as the names." But result is always
> without names as shown above. Did I miss any peculiarities?
>
> This is not consistent with lapply, which keeps names i.e.
>
> lapply(l, "+", 1)
> $a
> [1] 2
>
> $b
> [1] 3
>
> I have attached and copied (at the end) patch proposal against SVN that
> adds names back to the result if x had it (only R as my C is ...). This
> way it would also be consistent with lapply. make check-all seems to be
> happy with changes. Now we get:
>
> mapply(FUN="+", l, k)
> a b
> 2 3
>
> mapply(FUN="+", l, k, SIMPLIFY=FALSE)
> $a
> [1] 2
>
> $b
> [1] 3
>
> And if we had "character" (with some variations) for first ... then:
>
> l <- list(a="1", b="2")
> mapply(FUN="paste", l, k)
>    a     b
> "1 1" "2 1"
>
> l <- list("1", "2")
> mapply(FUN="paste", l, k)
> [1] "1 1" "2 1"
>
> l <- c("1", "2")
> mapply(FUN="paste", l, k)
>    1     2
> "1 1" "2 1"
>
> Index: src/library/base/R/mapply.R
> ===================================================================
> --- src/library/base/R/mapply.R (revision 39024)
> +++ src/library/base/R/mapply.R (working copy)
> @@ -3,8 +3,16 @@
>     FUN <- match.fun(FUN)
>     dots <- list(...)
>
> +    if(!is.null(names(dots[[1]]))) {
> +        isNamed <- TRUE
> +        namesX <- names(dots[[1]])
> +    } else {
> +        isNamed <- FALSE
> +    }
> +
>     answer<-.Call("do_mapply", FUN, dots, MoreArgs, environment(),
>                   PACKAGE="base")
> +    if(isNamed) names(answer) <- namesX
>
>     if (USE.NAMES && length(dots) && is.character(dots[[1]]) &&
>         is.null(names(answer))) names(answer) <- dots[[1]]
> @@ -47,4 +55,4 @@
>     }
>     formals(FUNV) <- formals(FUN)
>     FUNV
> -}
> \ No newline at end of file
> +}
>
> -- 
> Lep pozdrav / With regards,
>    Gregor Gorjanc
>
> ----------------------------------------------------------------------
> University of Ljubljana     PhD student
> Biotechnical Faculty
> Zootechnical Department     URI: http://www.bfro.uni-lj.si/MR/ggorjan
> Groblje 3                   mail: gregor.gorjanc <at> bfro.uni-lj.si
>
> SI-1230 Domzale             tel: +386 (0)1 72 17 861
> Slovenia, Europe            fax: +386 (0)1 72 17 888
>
> ----------------------------------------------------------------------
> "One must learn by doing the thing; for though you think you know it,
> you have no certainty until you try." Sophocles ~ 450 B.C.
> ----------------------------------------------------------------------
>

Charles C. Berry                        (858) 534-2098
                                          Dept of Family/Preventive Medicine
E mailto:cberry at tajo.ucsd.edu	         UC San Diego
http://biostat.ucsd.edu/~cberry/         La Jolla, San Diego 92093-0717



From maechler at stat.math.ethz.ch  Thu Aug 31 09:40:56 2006
From: maechler at stat.math.ethz.ch (Martin Maechler)
Date: Thu, 31 Aug 2006 09:40:56 +0200
Subject: [Rd] 'CanMakeUseOf' field
In-Reply-To: <m2fyfe5ndr.fsf@ziti.fhcrc.org>
References: <m2wt8sgyo0.fsf@ziti.fhcrc.org>
	<17651.65163.240840.365787@stat.math.ethz.ch>
	<44F4473D.9030203@bank-banque-canada.ca>
	<17652.19292.998960.686119@stat.math.ethz.ch>
	<44F46112.7060809@stats.uwo.ca>
	<17653.20352.330891.556094@mithrandir.hornik.net>
	<m2fyfe5ndr.fsf@ziti.fhcrc.org>
Message-ID: <17654.37512.452743.135183@stat.math.ethz.ch>

>>>>> "Seth" == Seth Falcon <sfalcon at fhcrc.org>
>>>>>     on Wed, 30 Aug 2006 07:06:24 -0700 writes:

    Seth> Kurt Hornik <Kurt.Hornik at wu-wien.ac.at> writes:
    >> An internal environment variable called
    >> 
    >> _R_CHECK_FORCE_SUGGESTS_
    >> 
    >> which controls this has been in place for quite some time now.  One can
    >> trivially add a Perl R CMD check configure variable for it.  I am a bit
    >> hesitant to add a --force-suggests cola to R CMD check, as this
    >> hardwires a legacy dependency model which may not be up to future needs.
    >> 
    >> As an aside, I have never understood whe developers have need for such
    >> an option (as I would have assumed that they'd typically try to check
    >> all of their code).

    Seth> This is not an aside, but the heart of the issue IMHO :-)

    Seth> One case in which checking Suggests does not make sense is when a
    Seth> package provides optional functionality that is platform specific.  A
    Seth> given Suggests entry may only be available on platform A, but it still
    Seth> is desirable to check the package on platform B.  Similar issues can
    Seth> arise during development when a given Suggests entry stops working
    Seth> with R-devel.

    Seth> Further, if an item in Suggests means it is optional, then one
    Seth> _should_ test that by testing the package without the optional packge
    Seth> being available.  There are a few ways for a true dependency to sneak
    Seth> into the code.  So I agree that typically developers want to test all
    Seth> of their code, but that implies being able to check a package without
    Seth> its Suggests being available (I realize this may be hard to implement,
    Seth> but easily having R CMD check ignore Suggests is a good start).

    Seth> And lastly, Suggests is currently used to list packages used for
    Seth> extended examples in package vignettes and being able to easily
    Seth> perform all other checks makes sense to me.

Very good points, thanks.
I think it's clear that some R developers see a clear need for
this and their (our) output would be enhanced by such a very
small addition --- it would probably only be a small addition
addition to the "Writing R Extension" manual for the moment.

I don't understand why some developers have such a resistance
to allow one other such keyword.
Dirk mentioned 'Enhances'  --- something which I could also live
with instead of 'CanUse' -- I just to be generous
with myself (as package author) in my interpretation of
"enhancing" :-)

Those developers who cannot remember disambiguating more than
one field for 'optional' are well allowed to keep using just
one, i.e., 'Suggests'. 
But others who want to be more precise and or want to better expose
(via DESCRIPTION) what they do anyway
(via 'if(require(*)) { .. }') inside their code, examples, and
or vignettes would just converge on *how* the new field should
be baptized. 
Since 'R CMD check' is not affected, there's no other
consequence for any package writer.

Having a much more expressive scheme, namely also specifying where
and how the 'canUse' packages are made use of,
could be even more useful.
However, given the overall reactions and the average package
writer's inertia or even "I don't want to have to know this as
well, I just want my package out" mind set -- which can
perfectly make sense, BTW --
I think we should strive for Einstein's
"Make everything as simple as possible, but not simpler"
here.

I'd really like to conclude this thread or at least concentrate
on the "how" rather than the "do we need this at all?" part.

Martin



From murdoch at stats.uwo.ca  Thu Aug 31 12:41:33 2006
From: murdoch at stats.uwo.ca (Duncan Murdoch)
Date: Thu, 31 Aug 2006 06:41:33 -0400
Subject: [Rd] 'CanMakeUseOf' field
In-Reply-To: <17654.37512.452743.135183@stat.math.ethz.ch>
References: <m2wt8sgyo0.fsf@ziti.fhcrc.org>	<17651.65163.240840.365787@stat.math.ethz.ch>	<44F4473D.9030203@bank-banque-canada.ca>	<17652.19292.998960.686119@stat.math.ethz.ch>	<44F46112.7060809@stats.uwo.ca>	<17653.20352.330891.556094@mithrandir.hornik.net>	<m2fyfe5ndr.fsf@ziti.fhcrc.org>
	<17654.37512.452743.135183@stat.math.ethz.ch>
Message-ID: <44F6BCDD.60205@stats.uwo.ca>

On 8/31/2006 3:40 AM, Martin Maechler wrote:
>>>>>> "Seth" == Seth Falcon <sfalcon at fhcrc.org>
>>>>>>     on Wed, 30 Aug 2006 07:06:24 -0700 writes:
> 
>     Seth> Kurt Hornik <Kurt.Hornik at wu-wien.ac.at> writes:
>     >> An internal environment variable called
>     >> 
>     >> _R_CHECK_FORCE_SUGGESTS_
>     >> 
>     >> which controls this has been in place for quite some time now.  One can
>     >> trivially add a Perl R CMD check configure variable for it.  I am a bit
>     >> hesitant to add a --force-suggests cola to R CMD check, as this
>     >> hardwires a legacy dependency model which may not be up to future needs.
>     >> 
>     >> As an aside, I have never understood whe developers have need for such
>     >> an option (as I would have assumed that they'd typically try to check
>     >> all of their code).
> 
>     Seth> This is not an aside, but the heart of the issue IMHO :-)
> 
>     Seth> One case in which checking Suggests does not make sense is when a
>     Seth> package provides optional functionality that is platform specific.  A
>     Seth> given Suggests entry may only be available on platform A, but it still
>     Seth> is desirable to check the package on platform B.  Similar issues can
>     Seth> arise during development when a given Suggests entry stops working
>     Seth> with R-devel.
> 
>     Seth> Further, if an item in Suggests means it is optional, then one
>     Seth> _should_ test that by testing the package without the optional packge
>     Seth> being available.  There are a few ways for a true dependency to sneak
>     Seth> into the code.  So I agree that typically developers want to test all
>     Seth> of their code, but that implies being able to check a package without
>     Seth> its Suggests being available (I realize this may be hard to implement,
>     Seth> but easily having R CMD check ignore Suggests is a good start).
> 
>     Seth> And lastly, Suggests is currently used to list packages used for
>     Seth> extended examples in package vignettes and being able to easily
>     Seth> perform all other checks makes sense to me.
> 
> Very good points, thanks.
> I think it's clear that some R developers see a clear need for
> this and their (our) output would be enhanced by such a very
> small addition --- it would probably only be a small addition
> addition to the "Writing R Extension" manual for the moment.
> 
> I don't understand why some developers have such a resistance
> to allow one other such keyword.

My objection is that adding a keyword that people don't understand will 
lead to inconsistent use and confusion.  It will make "Writing R 
Extensions" harder to read, and packages harder to write.

I could be wrong that your proposal is one that won't be understood. 
Could you post a proposed revision to the docs that describes it?

Duncan Murdoch



> Dirk mentioned 'Enhances'  --- something which I could also live
> with instead of 'CanUse' -- I just to be generous
> with myself (as package author) in my interpretation of
> "enhancing" :-)
> 
> Those developers who cannot remember disambiguating more than
> one field for 'optional' are well allowed to keep using just
> one, i.e., 'Suggests'. 
> But others who want to be more precise and or want to better expose
> (via DESCRIPTION) what they do anyway
> (via 'if(require(*)) { .. }') inside their code, examples, and
> or vignettes would just converge on *how* the new field should
> be baptized. 
> Since 'R CMD check' is not affected, there's no other
> consequence for any package writer.
> 
> Having a much more expressive scheme, namely also specifying where
> and how the 'canUse' packages are made use of,
> could be even more useful.
> However, given the overall reactions and the average package
> writer's inertia or even "I don't want to have to know this as
> well, I just want my package out" mind set -- which can
> perfectly make sense, BTW --
> I think we should strive for Einstein's
> "Make everything as simple as possible, but not simpler"
> here.
> 
> I'd really like to conclude this thread or at least concentrate
> on the "how" rather than the "do we need this at all?" part.
> 
> Martin
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel



From ripley at stats.ox.ac.uk  Thu Aug 31 14:22:11 2006
From: ripley at stats.ox.ac.uk (Prof Brian Ripley)
Date: Thu, 31 Aug 2006 13:22:11 +0100 (BST)
Subject: [Rd] Suggestion for read.table()
In-Reply-To: <C07BB4B4-3440-43C1-BAD1-4F2433C17513@r-project.org>
References: <6769639.199881156968166072.JavaMail.root@vms070.mailsrvcs.net>
	<Pine.LNX.4.64.0608302110340.19806@gannet.stats.ox.ac.uk>
	<C07BB4B4-3440-43C1-BAD1-4F2433C17513@r-project.org>
Message-ID: <Pine.LNX.4.64.0608311319460.21681@gannet.stats.ox.ac.uk>

On Thu, 31 Aug 2006, Simon Urbanek wrote:

> 
> On Aug 30, 2006, at 10:15 PM, Prof Brian Ripley wrote:
> 
> >On Wed, 30 Aug 2006, gilescrane at verizon.net wrote:
> >
> > >However, direct reading might be a good option?
> >
> >See ?textConnection for how to do this.
> >
> >inp <- "  x   y  z
> >    1   2  3
> >    4   5  6
> >"
> >read.table(textConnection(inp), header=TRUE)
> >
> >The most common case is wanting to paste in, and we have "clipboard" for
> >that (at least on Windows on X11: it would be a nice addition on Aqua).
> >
> 
> On Mac OS X (Aqua or cmd line) you can use clipboard input like this:
> read.table(pipe("pbpaste"))
> It seems to be quite popular especially in conjunction with Excel...

Yes, I know (I even documented in ?connections).  What would be nice is if

read.table("clipboard")

worked as it does on the other platforms.

-- 
Brian D. Ripley,                  ripley at stats.ox.ac.uk
Professor of Applied Statistics,  http://www.stats.ox.ac.uk/~ripley/
University of Oxford,             Tel:  +44 1865 272861 (self)
1 South Parks Road,                     +44 1865 272866 (PA)
Oxford OX1 3TG, UK                Fax:  +44 1865 272595



From lars at umich.edu  Thu Aug 31 14:41:40 2006
From: lars at umich.edu (=?iso-8859-15?Q?Lars_D=2E_Nood=E9n?=)
Date: Thu, 31 Aug 2006 08:41:40 -0400 (EDT)
Subject: [Rd] R-Project logo in SVG format
Message-ID: <Pine.LNX.4.64.0608310839160.32642@goldenaxe.gpcc.itd.umich.edu>

Hi,

I'm looking for a version of the R-Project logo in SVG format.  I've found 
the bitmapped versions,
 	http://developer.r-project.org/Logo/

but would prefer a scalable version as it usually looks better when 
printed.

Where may I find one?
-Lars

Lars Nooden (lars at umich.edu)
 	On the Internet, nobody knows you're a dog ...
 	... until you start barking.



From thomaskelderml at gmail.com  Thu Aug 31 14:52:49 2006
From: thomaskelderml at gmail.com (Thomas Kelder)
Date: Thu, 31 Aug 2006 14:52:49 +0200
Subject: [Rd] stop R mainloop without calling exit(1)
Message-ID: <903fbcd30608310552w2f3d6350p72e7e52c0144cc4b@mail.gmail.com>

Hello,

I'm trying to make my Java application work with R, which involves
sending and retrieving data and to run R functions from within the
Java application. I also need to have "live interaction" with R, to
show the R console output (e.g. warnings and print) and to enable the
user to enter input when a function asks for it.

Therefore I created a simple R console in Java using JRI
(http://rosuda.org/JRI/), and it works ok. The only problem is that I
have to start the R main loop which doesn't return. The only way to
stop it is to give R the quit command ('q()'), but then 'exit(1)' is
called from the R code and the Java Virtual Machine (including my
application) also shuts down.

My quick solution to this problem was to modify the R source code so
that the main loop ends without the need to call exit. The 'do_quit'
method in main.c now returns NULL instead of calling exit(1) and
'Rf_ReplIteration' checks for a returned NULL after each eval() and
breaks the main loop by returning -1.

Here are the simple changes to the R source code ('+' are the lines I
added, '//' are the lines I removed):

src/main/main.c : Rf_ReplIteration(...):
------------------------------------------------------------------
value = eval(R_CurrentExpr, rho);
+if(value == NULL)
+return(-1);

src/main/main.c : do_quit():
-------------------------------------
//exit(0);
+return(NULL)

I also removed the call to exit in src/linux/sys-std.c:Rstd_CleanUp
and src/gnuwin32/system.c:R_CleanUp for linux and windows
respectively.

This is obviously a quick hack to make it work (but it works fine,
also the standalone R exits ok this way), but I can imagine more
people want to use the mainloop with the possibility to return from it
without making their application to exit too. I wonder if it's
possible to include this possibility in future versions of R. Or do I
see this wrong and are there other (easier) solutions to achieve what
I want? Thanks in advance for your comments/reactions.

Thomas



From ripley at stats.ox.ac.uk  Thu Aug 31 15:22:21 2006
From: ripley at stats.ox.ac.uk (Prof Brian Ripley)
Date: Thu, 31 Aug 2006 14:22:21 +0100 (BST)
Subject: [Rd] stop R mainloop without calling exit(1)
In-Reply-To: <903fbcd30608310552w2f3d6350p72e7e52c0144cc4b@mail.gmail.com>
References: <903fbcd30608310552w2f3d6350p72e7e52c0144cc4b@mail.gmail.com>
Message-ID: <Pine.LNX.4.64.0608311406130.22477@gannet.stats.ox.ac.uk>

This is already covered in the R-devel version of R: please consult
`Writing R Extensions' in that version.

On Thu, 31 Aug 2006, Thomas Kelder wrote:

> Hello,
> 
> I'm trying to make my Java application work with R, which involves
> sending and retrieving data and to run R functions from within the
> Java application. I also need to have "live interaction" with R, to
> show the R console output (e.g. warnings and print) and to enable the
> user to enter input when a function asks for it.
> 
> Therefore I created a simple R console in Java using JRI
> (http://rosuda.org/JRI/), and it works ok. The only problem is that I
> have to start the R main loop which doesn't return.

But that's not true.  The documented way is

setup_Rmainloop
run a loop (which can return)
end_Rmainloop

The problem was that the only documented way to shut R down cleanly was 
end_Rmainloop (which did call exit), whereas there now is Rf_endEmbeddedR.

> The only way to stop it is to give R the quit command ('q()'), but then 
> 'exit(1)' is called from the R code and the Java Virtual Machine 
> (including my application) also shuts down.

That's because you called end_Rmainloop, possibly by calling 
run_Rmainloop rather than taking control of the loop.

It seems that almost all users of embedded R did not call end_Rmainloop, 
and I met this when creating a common embedding interface for Unix and 
Windows versions of R: the Windows widgets (such as the graphics device) 
do need to be told to shut down.

[...]

-- 
Brian D. Ripley,                  ripley at stats.ox.ac.uk
Professor of Applied Statistics,  http://www.stats.ox.ac.uk/~ripley/
University of Oxford,             Tel:  +44 1865 272861 (self)
1 South Parks Road,                     +44 1865 272866 (PA)
Oxford OX1 3TG, UK                Fax:  +44 1865 272595



From friedrich.leisch at stat.uni-muenchen.de  Thu Aug 31 15:52:48 2006
From: friedrich.leisch at stat.uni-muenchen.de (friedrich.leisch at stat.uni-muenchen.de)
Date: Thu, 31 Aug 2006 15:52:48 +0200 (MEST)
Subject: [Rd] R-Project logo in SVG format
In-Reply-To: <Pine.LNX.4.64.0608310839160.32642@goldenaxe.gpcc.itd.umich.edu>
References: <Pine.LNX.4.64.0608310839160.32642@goldenaxe.gpcc.itd.umich.edu>
Message-ID: <61685.151.100.49.234.1157032368.squirrel@webmail.lrz-muenchen.de>

> Hi,
>
> I'm looking for a version of the R-Project logo in SVG format.  I've found
> the bitmapped versions,
>  	http://developer.r-project.org/Logo/
>
> but would prefer a scalable version as it usually looks better when
> printed.
>
> Where may I find one?

After you created one and submitted it to us probably at the same place as
the bitmaps. In the meantime it will have to suffice that you use all we
have, and that are the bitmaps (the logo was done by a volunteer who chose
to use a bitmapped graphics program). It is not like we keep the good
stuff back on purpose ...

Best,
Fritz



From leydold at statmath.wu-wien.ac.at  Thu Aug 31 15:57:39 2006
From: leydold at statmath.wu-wien.ac.at (Josef Leydold)
Date: Thu, 31 Aug 2006 15:57:39 +0200
Subject: [Rd] Interface for package supplied random number generator
Message-ID: <20060831135739.GA7336@essek.stat-math.wu-wien.ac.at>

Hi,

As you probably know, there is a problem with the interface for adding uniform
random number generators in R (see by article in R News 5/2, November 2005).
There exists a mechanism called "user-supplied" that allows users of R
to run their own generator in R. However, there is no such mechanism for
package writers. Those who want to add their own generators abuse 
RNGkind(kind="user-supplied") for their purpose.
The problem with this approach is that it relies on the unique existence of the
function "user_unif_rand". When two packages are loaded that use this interface,
then at least one package is broken. If the user herself loads a shared library
that contains such a function, some of the functionalities of all the 
corresponding packages are broken.

When writing my paper I found the following packages on CRAN that abuse this
interface (meanwhile there might be more packages):

randaes_0.1.tar.gz
rlecuyer_0.1.tar.gz
rsprng_0.3-1.tar.gz
rstream_1.1.tar.gz
SuppDists_1.0-13.tar.gz

what makes the situation even more complicated is the fact that some of these
packages are loaded automaticall by other packages.
For example, package 'rlecuyer' is loaded by

snow_0.2-1.tar.gz
snowFT_0.0-1.tar.gz
varSelRF_0.6-2.tar.gz

To solve this problem, Stefan Theussl and I have tried to extend the mechanism
for random number generators in the following way:

- we have added a new kind of generators: "package-supplied"

- this generator kind needs functions named 'package_unif_rand', 'package_unif_init',
  'package_unif_nseed', and 'package_unif_seedloc'
  (analogously to the functions for kind "user-supplied")

- RNGkind has an additional optional argument:
    RNGkind <- function(kind = NULL, normal.kind = NULL, PACKAGE = "")
  argument 'PACKAGE' is only used for the new generator kind "package-supplied"

- similarly the function set.seed needs the optinal argument 'PACKAGE'

Since I need such an extended interface (and I assume that other package
write do also) I ask whether this extension can be included into R.
We have implemented a first experimental version of this modified interface. 
A patch against the development snapshot R-devel_2006-08-30.tar.gz is available.
However, it is a little bit too long (239 lines) to be posted here.

Of course suggestions for an alternative approach are welcome.

Josef


-- 


-----------------------------------------------------------------------------
Josef Leydold   |  Vienna University of Economics and Business Administration
                |  Department of Statistics and Mathematics
-----------------------------------------------------------------------------
Augasse 2-6     |  Tel.   +43 1 31336 4695
A-1090 Vienna   |  FAX    +43 1 31336 774
European Union  |  email  Josef.Leydold at statistik.wu-wien.ac.at
-----------------------------------------------------------------------------
Alles Unglueck kam daher, dass die Denkenden nicht mehr handeln konnten,
und die Handelnden keine Zeit mehr fanden zu denken.       (Marlen Haushofer)



From msf17 at psu.edu  Thu Aug 31 16:42:27 2006
From: msf17 at psu.edu (msf17 at psu.edu)
Date: Thu, 31 Aug 2006 16:42:27 +0200 (CEST)
Subject: [Rd] R crashes in Mac OS 10.4 when Find is used (PR#9192)
Message-ID: <20060831144227.755F64C9A1@slim.kubism.ku.dk>

Full_Name: Matt Fantle
Version: 1.16
OS: Mac OS 10.4.7
Submission from: (NULL) (128.118.174.213)


Problem:  R crashes when 'Command-f' is pressed to begin "Find"
Frequency:  This problem is intermittant.  Once R crashes, the only solution is
to restart R and try to Find again.  There is no regularity to the problem.  If
R is opened by double-clicking on a ".R" file, the problem might be there.  If R
is opened by double-clicking the application or alias, the problem may also
still be there.

Log report:
OS Version:     10.4.7 (Build 8J135)
Report Version: 4

Command: R
Path:    /Applications/R.app/Contents/MacOS/R
Parent:  WindowServer [60]

Version: 1.16 (3198)

PID:    474
Thread: 0

Exception:  EXC_BREAKPOINT (0x0006)
Code[0]:    0x00000001
Code[1]:    0x9295f120


Thread 0 Crashed:
0   com.apple.Foundation     	0x9295f120 _NSRaiseError + 264
1   com.apple.AppKit         	0x937c9274 -[NSCarbonMenuImpl
performActionWithHighlightingForItemAtIndex:] + 160
2   com.apple.AppKit         	0x937c8ce4 -[NSMenu performKeyEquivalent:] + 272
3   com.apple.AppKit         	0x937c88c4 -[NSApplication _handleKeyEquivalent:]
+ 220
4   com.apple.AppKit         	0x936d2408 -[NSApplication sendEvent:] + 2944
5   org.R-project.R          	0x0000b730 -[RController handleReadConsole:] + 88
(RController.m:869)
6   org.R-project.R          	0x0002c0b8 Re_ReadConsole + 108
(Rcallbacks.m:137)
7   org.R-project.R          	0x0003223c run_REngineRmainloop + 300
(Rinit.c:341)
8   org.R-project.R          	0x0002aa1c -[REngine runREPL] + 68
(REngine.m:167)
9   org.R-project.R          	0x0001d340 main + 680 (main.m:101)
10  org.R-project.R          	0x00002e8c _start + 340 (crt.c:272)
11  org.R-project.R          	0x00002d34 start + 60

Thread 1:
0   libSystem.B.dylib        	0x9000b268 mach_msg_trap + 8
1   libSystem.B.dylib        	0x9000b1bc mach_msg + 60
2   com.apple.CoreFoundation 	0x907dbb78 __CFRunLoopRun + 832
3   com.apple.CoreFoundation 	0x907db47c CFRunLoopRunSpecific + 268
4   com.apple.Foundation     	0x92939598 -[NSConnection sendInvocation:] + 1468
5   com.apple.Foundation     	0x92938034 -[NSObject(NSForwardInvocation)
forward::] + 408
6   libobjc.A.dylib          	0x90a430b0 _objc_msgForward + 176
7   com.apple.Foundation     	0x9293839c -[NSDistantObject
methodSignatureForSelector:] + 268
8   com.apple.Foundation     	0x92937f04 -[NSObject(NSForwardInvocation)
forward::] + 104
9   libobjc.A.dylib          	0x90a430b0 _objc_msgForward + 176
10  org.R-project.R          	0x0000acc0 -[RController readThread:] + 2436
(RController.m:613)
11  com.apple.Foundation     	0x92944194 forkThreadForFunction + 108
12  libSystem.B.dylib        	0x9002bc28 _pthread_body + 96

Thread 2:
0   libSystem.B.dylib        	0x9002c2e8 semaphore_wait_signal_trap + 8
1   libSystem.B.dylib        	0x90030dcc pthread_cond_wait + 480
2   com.apple.Foundation     	0x9294b300 -[NSConditionLock lockWhenCondition:] +
68
3   com.apple.AppKit         	0x9376a708 -[NSUIHeartBeat _heartBeatThread:] +
324
4   com.apple.Foundation     	0x92944194 forkThreadForFunction + 108
5   libSystem.B.dylib        	0x9002bc28 _pthread_body + 96

Thread 3:
0   libSystem.B.dylib        	0x9000b268 mach_msg_trap + 8
1   libSystem.B.dylib        	0x9000b1bc mach_msg + 60
2   com.apple.CoreFoundation 	0x907dbb78 __CFRunLoopRun + 832
3   com.apple.CoreFoundation 	0x907db47c CFRunLoopRunSpecific + 268
4   com.apple.Foundation     	0x9296b69c
+[NSURLConnection(NSURLConnectionInternal) _resourceLoadLoop:] + 264
5   com.apple.Foundation     	0x92944194 forkThreadForFunction + 108
6   libSystem.B.dylib        	0x9002bc28 _pthread_body + 96

Thread 4:
0   libSystem.B.dylib        	0x9000b268 mach_msg_trap + 8
1   libSystem.B.dylib        	0x9000b1bc mach_msg + 60
2   com.apple.CoreFoundation 	0x907dbb78 __CFRunLoopRun + 832
3   com.apple.CoreFoundation 	0x907db47c CFRunLoopRunSpecific + 268
4   com.apple.Foundation     	0x9296c7dc +[NSURLCache _diskCacheSyncLoop:] +
152
5   com.apple.Foundation     	0x92944194 forkThreadForFunction + 108
6   libSystem.B.dylib        	0x9002bc28 _pthread_body + 96

Thread 5:
0   libSystem.B.dylib        	0x9000b268 mach_msg_trap + 8
1   libSystem.B.dylib        	0x9000b1bc mach_msg + 60
2   com.apple.CoreFoundation 	0x907dbb78 __CFRunLoopRun + 832
3   com.apple.CoreFoundation 	0x907db47c CFRunLoopRunSpecific + 268
4   com.apple.Foundation     	0x92953164 -[NSRunLoop runMode:beforeDate:] + 172
5   com.apple.Foundation     	0x9295309c -[NSRunLoop run] + 76
6   com.apple.WebKit         	0x9562ff70 +[WebFileDatabase _syncLoop:] + 176
7   com.apple.Foundation     	0x92944194 forkThreadForFunction + 108
8   libSystem.B.dylib        	0x9002bc28 _pthread_body + 96

Thread 0 crashed with PPC Thread State 64:
  srr0: 0x000000009295f120 srr1: 0x000000000202f030                       
vrsave: 0x0000000000000000
    cr: 0x24000442          xer: 0x0000000000000004   lr: 0x000000009295f0f8 
ctr: 0x0000000092921264
    r0: 0x0000000000000000   r1: 0x00000000bfffeff0   r2: 0x00000000a291e508  
r3: 0x00000000a2942b88
    r4: 0x0000000090a4dff0   r5: 0x0000000092920844   r6: 0x00000000bfffec24  
r7: 0x00000000000000ff
    r8: 0x00000000bfffec10   r9: 0x0000000004a15770  r10: 0x0000000090a3c628 
r11: 0x0000000024000442
   r12: 0x0000000092921264  r13: 0x0000000000000000  r14: 0x0000000000000000 
r15: 0x0000000000000000
   r16: 0x0000000000000000  r17: 0x0000000000000000  r18: 0x0000000000000000 
r19: 0x0000000000000000
   r20: 0x0000000000000000  r21: 0x000000000003d0a0  r22: 0x000000000003c054 
r23: 0x0000000000000000
   r24: 0x000000000054aba4  r25: 0x0000000007822c10  r26: 0x000000000781ab50 
r27: 0x0000000000000047
   r28: 0x00000000078363f0  r29: 0x00000000a292381c  r30: 0x00000000005bcf00 
r31: 0x000000009295f028

Binary Images Description:
    0x1000 -    0x3efff org.R-project.R 1.16 (3198)
/Applications/R.app/Contents/MacOS/R
  0x157000 -   0x162fff libgcc_s.1.0.dylib 
/Library/Frameworks/R.framework/Versions/2.3/Resources/lib/libgcc_s.1.0.dylib
  0x305000 -   0x34bfff libgfortran.0.dylib 
/Library/Frameworks/R.framework/Versions/2.3/Resources/lib/libgfortran.0.dylib
  0x41c000 -   0x45afff libreadline.5.1.dylib 
/Library/Frameworks/R.framework/Versions/2.3/Resources/lib/libreadline.5.1.dylib
 0x1008000 -  0x1210fff libR.dylib 
/Library/Frameworks/R.framework/Versions/2.3/Resources/lib/libR.dylib
 0x4bca000 -  0x4bcdfff methods.so 
/Library/Frameworks/R.framework/Versions/2.3/Resources/library/methods/libs/ppc/methods.so
 0x5c93000 -  0x5caffff grDevices.so 
/Library/Frameworks/R.framework/Versions/2.3/Resources/library/grDevices/libs/ppc/grDevices.so
 0x5d76000 -  0x5dbcfff stats.so 
/Library/Frameworks/R.framework/Versions/2.3/Resources/library/stats/libs/ppc/stats.so
0x8fe00000 - 0x8fe52fff dyld 45.3	/usr/lib/dyld
0x90000000 - 0x901bbfff libSystem.B.dylib 	/usr/lib/libSystem.B.dylib
0x90213000 - 0x90218fff libmathCommon.A.dylib 
/usr/lib/system/libmathCommon.A.dylib
0x9021a000 - 0x90267fff com.apple.CoreText 1.0.2 (???)
/System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/CoreText.framework/Versions/A/CoreText
0x90292000 - 0x90343fff ATS 
/System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/ATS.framework/Versions/A/ATS
0x90372000 - 0x9072cfff com.apple.CoreGraphics 1.258.33 (???)
/System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/CoreGraphics.framework/Versions/A/CoreGraphics
0x907b9000 - 0x90892fff com.apple.CoreFoundation 6.4.6 (368.27)
/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation
0x908db000 - 0x908dbfff com.apple.CoreServices 10.4 (???)
/System/Library/Frameworks/CoreServices.framework/Versions/A/CoreServices
0x908dd000 - 0x909dffff libicucore.A.dylib 	/usr/lib/libicucore.A.dylib
0x90a39000 - 0x90abdfff libobjc.A.dylib 	/usr/lib/libobjc.A.dylib
0x90ae7000 - 0x90b57fff com.apple.framework.IOKit 1.4.1 (???)
/System/Library/Frameworks/IOKit.framework/Versions/A/IOKit
0x90b6d000 - 0x90b7ffff libauto.dylib 	/usr/lib/libauto.dylib
0x90b86000 - 0x90e5dfff com.apple.CoreServices.CarbonCore 681.4
/System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/CarbonCore.framework/Versions/A/CarbonCore
0x90ec3000 - 0x90f43fff com.apple.CoreServices.OSServices 4.1
/System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/OSServices.framework/Versions/A/OSServices
0x90f8d000 - 0x90fcefff com.apple.CFNetwork 129.16
/System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/CFNetwork.framework/Versions/A/CFNetwork
0x90fe3000 - 0x90ffbfff com.apple.WebServices 1.1.2 (1.1.0)
/System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/WebServicesCore.framework/Versions/A/WebServicesCore
0x9100b000 - 0x9108cfff com.apple.SearchKit 1.0.5
/System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/SearchKit.framework/Versions/A/SearchKit
0x910d2000 - 0x910fcfff com.apple.Metadata 10.4.4 (121.36)
/System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/Metadata.framework/Versions/A/Metadata
0x9110d000 - 0x9111bfff libz.1.dylib 	/usr/lib/libz.1.dylib
0x9111e000 - 0x912d8fff com.apple.security 4.4 (27566)
/System/Library/Frameworks/Security.framework/Versions/A/Security
0x913d6000 - 0x913dffff com.apple.DiskArbitration 2.1
/System/Library/Frameworks/DiskArbitration.framework/Versions/A/DiskArbitration
0x913e6000 - 0x9140efff com.apple.SystemConfiguration 1.8.3
/System/Library/Frameworks/SystemConfiguration.framework/Versions/A/SystemConfiguration
0x91421000 - 0x9142cfff libgcc_s.1.dylib 	/usr/lib/libgcc_s.1.dylib
0x91431000 - 0x91439fff libbsm.dylib 	/usr/lib/libbsm.dylib
0x9143d000 - 0x914b8fff com.apple.audio.CoreAudio 3.0.4
/System/Library/Frameworks/CoreAudio.framework/Versions/A/CoreAudio
0x914f5000 - 0x914f5fff com.apple.ApplicationServices 10.4 (???)
/System/Library/Frameworks/ApplicationServices.framework/Versions/A/ApplicationServices
0x914f7000 - 0x9152ffff com.apple.AE 1.5 (297)
/System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/AE.framework/Versions/A/AE
0x9154a000 - 0x91617fff com.apple.ColorSync 4.4.4
/System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/ColorSync.framework/Versions/A/ColorSync
0x9166c000 - 0x916fdfff com.apple.print.framework.PrintCore 4.6 (177.13)
/System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/PrintCore.framework/Versions/A/PrintCore
0x91744000 - 0x917fbfff com.apple.QD 3.10.20 (???)
/System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/QD.framework/Versions/A/QD
0x91838000 - 0x91896fff com.apple.HIServices 1.5.3 (???)
/System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/HIServices.framework/Versions/A/HIServices
0x918c5000 - 0x918e9fff com.apple.LangAnalysis 1.6.1
/System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/LangAnalysis.framework/Versions/A/LangAnalysis
0x918fd000 - 0x91922fff com.apple.FindByContent 1.5
/System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/FindByContent.framework/Versions/A/FindByContent
0x91935000 - 0x91977fff com.apple.LaunchServices 181
/System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/LaunchServices.framework/Versions/A/LaunchServices
0x91993000 - 0x919a7fff com.apple.speech.synthesis.framework 3.3
/System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/SpeechSynthesis.framework/Versions/A/SpeechSynthesis
0x919b5000 - 0x919f5fff com.apple.ImageIO.framework 1.4.8
/System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/ImageIO.framework/Versions/A/ImageIO
0x91a0b000 - 0x91ad3fff libcrypto.0.9.7.dylib 	/usr/lib/libcrypto.0.9.7.dylib
0x91b21000 - 0x91b36fff libcups.2.dylib 	/usr/lib/libcups.2.dylib
0x91b3b000 - 0x91b58fff libJPEG.dylib 
/System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/ImageIO.framework/Versions/A/Resources/libJPEG.dylib
0x91b5d000 - 0x91bccfff libJP2.dylib 
/System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/ImageIO.framework/Versions/A/Resources/libJP2.dylib
0x91be3000 - 0x91be7fff libGIF.dylib 
/System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/ImageIO.framework/Versions/A/Resources/libGIF.dylib
0x91be9000 - 0x91c31fff libRaw.dylib 
/System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/ImageIO.framework/Versions/A/Resources/libRaw.dylib
0x91c36000 - 0x91c73fff libTIFF.dylib 
/System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/ImageIO.framework/Versions/A/Resources/libTIFF.dylib
0x91c7a000 - 0x91c93fff libPng.dylib 
/System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/ImageIO.framework/Versions/A/Resources/libPng.dylib
0x91c98000 - 0x91c9bfff libRadiance.dylib 
/System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/ImageIO.framework/Versions/A/Resources/libRadiance.dylib
0x91c9d000 - 0x91c9dfff com.apple.Accelerate 1.2.2 (Accelerate 1.2.2)
/System/Library/Frameworks/Accelerate.framework/Versions/A/Accelerate
0x91c9f000 - 0x91d84fff com.apple.vImage 2.4
/System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vImage.framework/Versions/A/vImage
0x91d8c000 - 0x91dabfff com.apple.Accelerate.vecLib 3.2.2 (vecLib 3.2.2)
/System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/vecLib
0x91e17000 - 0x91e85fff libvMisc.dylib 
/System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libvMisc.dylib
0x91e90000 - 0x91f25fff libvDSP.dylib 
/System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libvDSP.dylib
0x91f3f000 - 0x924c7fff libBLAS.dylib 
/System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libBLAS.dylib
0x924fa000 - 0x92825fff libLAPACK.dylib 
/System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libLAPACK.dylib
0x92855000 - 0x928ddfff com.apple.DesktopServices 1.3.4
/System/Library/PrivateFrameworks/DesktopServicesPriv.framework/Versions/A/DesktopServicesPriv
0x9291e000 - 0x92b49fff com.apple.Foundation 6.4.6 (567.27)
/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation
0x92c67000 - 0x92d45fff libxml2.2.dylib 	/usr/lib/libxml2.2.dylib
0x92d65000 - 0x92e53fff libiconv.2.dylib 	/usr/lib/libiconv.2.dylib
0x92e65000 - 0x92e83fff libGL.dylib 
/System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libGL.dylib
0x92e8e000 - 0x92ee8fff libGLU.dylib 
/System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libGLU.dylib
0x92f06000 - 0x92f06fff com.apple.Carbon 10.4 (???)
/System/Library/Frameworks/Carbon.framework/Versions/A/Carbon
0x92f08000 - 0x92f1cfff com.apple.ImageCapture 3.0
/System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/ImageCapture.framework/Versions/A/ImageCapture
0x92f34000 - 0x92f44fff com.apple.speech.recognition.framework 3.4
/System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/SpeechRecognition.framework/Versions/A/SpeechRecognition
0x92f50000 - 0x92f65fff com.apple.securityhi 2.0 (203)
/System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/SecurityHI.framework/Versions/A/SecurityHI
0x92f77000 - 0x92ffefff com.apple.ink.framework 101.2 (69)
/System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/Ink.framework/Versions/A/Ink
0x93012000 - 0x9301dfff com.apple.help 1.0.3 (32)
/System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/Help.framework/Versions/A/Help
0x93027000 - 0x93054fff com.apple.openscripting 1.2.5 (???)
/System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/OpenScripting.framework/Versions/A/OpenScripting
0x9306e000 - 0x9307efff com.apple.print.framework.Print 5.0 (190.1)
/System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/Print.framework/Versions/A/Print
0x9308a000 - 0x930f0fff com.apple.htmlrendering 1.1.2
/System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/HTMLRendering.framework/Versions/A/HTMLRendering
0x93121000 - 0x93170fff com.apple.NavigationServices 3.4.4 (3.4.3)
/System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/NavigationServices.framework/Versions/A/NavigationServices
0x9319e000 - 0x931bbfff com.apple.audio.SoundManager 3.9
/System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/CarbonSound.framework/Versions/A/CarbonSound
0x931cd000 - 0x931dafff com.apple.CommonPanels 1.2.2 (73)
/System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/CommonPanels.framework/Versions/A/CommonPanels
0x931e3000 - 0x934f0fff com.apple.HIToolbox 1.4.8 (???)
/System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/HIToolbox.framework/Versions/A/HIToolbox
0x9363f000 - 0x9364bfff com.apple.opengl 1.4.7
/System/Library/Frameworks/OpenGL.framework/Versions/A/OpenGL
0x936c3000 - 0x936c3fff com.apple.Cocoa 6.4 (???)
/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa
0x936c5000 - 0x93cf8fff com.apple.AppKit 6.4.7 (824.41)
/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit
0x94085000 - 0x940f5fff com.apple.CoreData 80
/System/Library/Frameworks/CoreData.framework/Versions/A/CoreData
0x9412e000 - 0x941f1fff com.apple.audio.toolbox.AudioToolbox 1.4.3
/System/Library/Frameworks/AudioToolbox.framework/Versions/A/AudioToolbox
0x94243000 - 0x94243fff com.apple.audio.units.AudioUnit 1.4
/System/Library/Frameworks/AudioUnit.framework/Versions/A/AudioUnit
0x94245000 - 0x943f8fff com.apple.QuartzCore 1.4.8
/System/Library/Frameworks/QuartzCore.framework/Versions/A/QuartzCore
0x9444b000 - 0x94488fff libsqlite3.0.dylib 	/usr/lib/libsqlite3.0.dylib
0x94490000 - 0x944e0fff libGLImage.dylib 
/System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libGLImage.dylib
0x94683000 - 0x94692fff libCGATS.A.dylib 
/System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/CoreGraphics.framework/Versions/A/Resources/libCGATS.A.dylib
0x9469a000 - 0x946a6fff libCSync.A.dylib 
/System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/CoreGraphics.framework/Versions/A/Resources/libCSync.A.dylib
0x946ec000 - 0x94704fff libRIP.A.dylib 
/System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/CoreGraphics.framework/Versions/A/Resources/libRIP.A.dylib
0x94b67000 - 0x94b88fff libmx.A.dylib 	/usr/lib/libmx.A.dylib
0x9562d000 - 0x956bbfff com.apple.WebKit 418.8
/System/Library/Frameworks/WebKit.framework/Versions/A/WebKit
0x95717000 - 0x957adfff com.apple.JavaScriptCore 418.3
/System/Library/Frameworks/WebKit.framework/Versions/A/Frameworks/JavaScriptCore.framework/Versions/A/JavaScriptCore
0x957ea000 - 0x95af6fff com.apple.WebCore 418.20.1
/System/Library/Frameworks/WebKit.framework/Versions/A/Frameworks/WebCore.framework/Versions/A/WebCore
0x95c7f000 - 0x95ca8fff libxslt.1.dylib 	/usr/lib/libxslt.1.dylib
0x95ecd000 - 0x95ecffff com.apple.ExceptionHandling 1.2 (???)
/System/Library/Frameworks/ExceptionHandling.framework/Versions/A/ExceptionHandling
0x96e9f000 - 0x96ebefff com.apple.vecLib 3.2.2 (vecLib 3.2.2)
/System/Library/Frameworks/vecLib.framework/Versions/A/vecLib



From sfalcon at fhcrc.org  Thu Aug 31 16:46:29 2006
From: sfalcon at fhcrc.org (Seth Falcon)
Date: Thu, 31 Aug 2006 07:46:29 -0700
Subject: [Rd] 'CanMakeUseOf' field
In-Reply-To: <17654.37512.452743.135183@stat.math.ethz.ch> (Martin Maechler's
	message of "Thu, 31 Aug 2006 09:40:56 +0200")
References: <m2wt8sgyo0.fsf@ziti.fhcrc.org>
	<17651.65163.240840.365787@stat.math.ethz.ch>
	<44F4473D.9030203@bank-banque-canada.ca>
	<17652.19292.998960.686119@stat.math.ethz.ch>
	<44F46112.7060809@stats.uwo.ca>
	<17653.20352.330891.556094@mithrandir.hornik.net>
	<m2fyfe5ndr.fsf@ziti.fhcrc.org>
	<17654.37512.452743.135183@stat.math.ethz.ch>
Message-ID: <m2sljdufne.fsf@ziti.fhcrc.org>

Martin Maechler <maechler at stat.math.ethz.ch> writes:

>>>>>> "Seth" == Seth Falcon <sfalcon at fhcrc.org>
>>>>>>     on Wed, 30 Aug 2006 07:06:24 -0700 writes:
>
>     Seth> Kurt Hornik <Kurt.Hornik at wu-wien.ac.at> writes:
>     >> An internal environment variable called
>     >> 
>     >> _R_CHECK_FORCE_SUGGESTS_
>     >> 
>     >> which controls this has been in place for quite some time now.  One can
>     >> trivially add a Perl R CMD check configure variable for it.  I am a bit
>     >> hesitant to add a --force-suggests cola to R CMD check, as this
>     >> hardwires a legacy dependency model which may not be up to future needs.
>     >> 
>     >> As an aside, I have never understood whe developers have need for such
>     >> an option (as I would have assumed that they'd typically try to check
>     >> all of their code).
>
>     Seth> This is not an aside, but the heart of the issue IMHO :-)
>
>     Seth> One case in which checking Suggests does not make sense is when a
>     Seth> package provides optional functionality that is platform specific.  A
>     Seth> given Suggests entry may only be available on platform A, but it still
>     Seth> is desirable to check the package on platform B.  Similar issues can
>     Seth> arise during development when a given Suggests entry stops working
>     Seth> with R-devel.
>
>     Seth> Further, if an item in Suggests means it is optional, then one
>     Seth> _should_ test that by testing the package without the optional packge
>     Seth> being available.  There are a few ways for a true dependency to sneak
>     Seth> into the code.  So I agree that typically developers want to test all
>     Seth> of their code, but that implies being able to check a package without
>     Seth> its Suggests being available (I realize this may be hard to implement,
>     Seth> but easily having R CMD check ignore Suggests is a good start).
>
>     Seth> And lastly, Suggests is currently used to list packages used for
>     Seth> extended examples in package vignettes and being able to easily
>     Seth> perform all other checks makes sense to me.
>
> Very good points, thanks.
> I think it's clear that some R developers see a clear need for
> this and their (our) output would be enhanced by such a very
> small addition --- it would probably only be a small addition
> addition to the "Writing R Extension" manual for the moment.
>
> I don't understand why some developers have such a resistance
> to allow one other such keyword.
> Dirk mentioned 'Enhances'  --- something which I could also live
> with instead of 'CanUse' -- I just to be generous
> with myself (as package author) in my interpretation of
> "enhancing" :-)

This is my last post until we discuss this next year ;-)

The easy solution is to add a new term, but I don't think this is a
good solution at all.

A new developer would have a hard time guessing the difference between
Suggests and CanUse.  Why?  Because 'CanUse' exists because of a
disagreement about how R CMD check should operate.  The meaning of
CanUse is just that it doesn't get checked by R CMD check.

I think we should consider keeping the two levels: Depends and
Suggests and improve R CMD check to:

* Be able to check a package when any subset of Suggests
  is present.

* Be able to check a package forcing all Suggests to be unavailable.

If new terms are wanted, they should have clear semantics.  From the
discussion, here are some possibilities:

DocDepends: Needed for vignette or extended example
RelatedTo: Loose affinity for listed package

Adding DocDepends, it would make sense to modify R CMD check to know
about it.  Probably not for RelatedTo.

> Those developers who cannot remember disambiguating more than
> one field for 'optional' are well allowed to keep using just
> one, i.e., 'Suggests'. 
> But others who want to be more precise and or want to better expose
> (via DESCRIPTION) what they do anyway
> (via 'if(require(*)) { .. }') inside their code, examples, and
> or vignettes would just converge on *how* the new field should
> be baptized. 
> Since 'R CMD check' is not affected, there's no other
> consequence for any package writer.

I fail to see how adding an ambiguous term with fuzzy meaning is good
for package developers wishing to be more precise.  At the same time,
if changes to R CMD check are decided against, I would rather have an
extra term.

Bw,

+ seth



From thomaskelderml at gmail.com  Thu Aug 31 17:33:26 2006
From: thomaskelderml at gmail.com (Thomas Kelder)
Date: Thu, 31 Aug 2006 17:33:26 +0200
Subject: [Rd] stop R mainloop without calling exit(1)
In-Reply-To: <903fbcd30608310831s4b323e4fya224e99961b97db9@mail.gmail.com>
References: <903fbcd30608310552w2f3d6350p72e7e52c0144cc4b@mail.gmail.com>
	<Pine.LNX.4.64.0608311406130.22477@gannet.stats.ox.ac.uk>
	<Pine.LNX.4.64.0608311429420.22954@gannet.stats.ox.ac.uk>
	<903fbcd30608310831s4b323e4fya224e99961b97db9@mail.gmail.com>
Message-ID: <903fbcd30608310833h7a06b4d8p682912f0041d1baa@mail.gmail.com>

Dear Professor Ripley,

Thank you for your reply. I have a few questions left:

> > But that's not true.  The documented way is
> >
> > setup_Rmainloop
> > run a loop (which can return)
> > end_Rmainloop
> >
> > The problem was that the only documented way to shut R down cleanly was
> > end_Rmainloop (which did call exit), whereas there now is Rf_endEmbeddedR.

In the documentation  "run_Rmainloop" is called to start the loop:

         Rf_initEmbeddedR(argc, argv);
         /* submit some code to R, which is done interactively via
             run_Rmainloop();
         */
         Rf_endEmbeddedR(0);

But that method doesn't return normally, right? It only ends if
ReplIteration returns -1.
Or do you mean I need to re-implement the read-and-evaluate loop in a
way that I can interrupt it (at "run a loop (which can return)" in
your example)? So instead of calling run_Rmainloop, I can copy the
loop in R_ReplConsole, add an interrupted flag and check that every
iteration.

> > It seems that almost all users of embedded R did not call end_Rmainloop,
> > and I met this when creating a common embedding interface for Unix and
> > Windows versions of R: the Windows widgets (such as the graphics device)
> > do need to be told to shut down.

> Another idea on Unix-alikes is to replace R_CleanUp by your own callback:
> it is part of the documented interface for writing a front-end.

So for the Unix alikes I could use a customized R_CleanUp for the
non-devel versions of R. For windows I should still call
end_Rmainloop, but if I understand you well, this is only needed if I
use the windows widgets in R. I don't want to, so it shouldn't be a
problem then?

Thank you for your help, I'm going to try to modify the JRI interface
by writing a custom loop instead of calling run_Rmainloop.

By the way, I use R version 2.2.1 in linux, because I got the "Error:
C stack usage is too close to the limit R" error in higher versions (I
saw there was a topic about this already:
https://stat.ethz.ch/pipermail/r-devel/2006-April/037219.html). I
tried to use the R-devel version to make use of the Rf_endEmbeddedR
method, but the error also occurs in this version. Could this be a
bug?

Thomas

2006/8/31, Prof Brian Ripley <ripley at stats.ox.ac.uk>:
> Another idea on Unix-alikes is to replace R_CleanUp by your own callback:
> it is part of the documented interface for writing a front-end.
>
> On Thu, 31 Aug 2006, Prof Brian Ripley wrote:
>
> > This is already covered in the R-devel version of R: please consult
> > `Writing R Extensions' in that version.
> >
> > On Thu, 31 Aug 2006, Thomas Kelder wrote:
> >
> > > Hello,
> > >
> > > I'm trying to make my Java application work with R, which involves
> > > sending and retrieving data and to run R functions from within the
> > > Java application. I also need to have "live interaction" with R, to
> > > show the R console output (e.g. warnings and print) and to enable the
> > > user to enter input when a function asks for it.
> > >
> > > Therefore I created a simple R console in Java using JRI
> > > (http://rosuda.org/JRI/), and it works ok. The only problem is that I
> > > have to start the R main loop which doesn't return.
> >
> > But that's not true.  The documented way is
> >
> > setup_Rmainloop
> > run a loop (which can return)
> > end_Rmainloop
> >
> > The problem was that the only documented way to shut R down cleanly was
> > end_Rmainloop (which did call exit), whereas there now is Rf_endEmbeddedR.
> >
> > > The only way to stop it is to give R the quit command ('q()'), but then
> > > 'exit(1)' is called from the R code and the Java Virtual Machine
> > > (including my application) also shuts down.
> >
> > That's because you called end_Rmainloop, possibly by calling
> > run_Rmainloop rather than taking control of the loop.
> >
> > It seems that almost all users of embedded R did not call end_Rmainloop,
> > and I met this when creating a common embedding interface for Unix and
> > Windows versions of R: the Windows widgets (such as the graphics device)
> > do need to be told to shut down.
> >
> > [...]
> >
> >
>
> --
> Brian D. Ripley,                  ripley at stats.ox.ac.uk
> Professor of Applied Statistics,  http://www.stats.ox.ac.uk/~ripley/
> University of Oxford,             Tel:  +44 1865 272861 (self)
> 1 South Parks Road,                     +44 1865 272866 (PA)
> Oxford OX1 3TG, UK                Fax:  +44 1865 272595
>



From B.Rowlingson at lancaster.ac.uk  Thu Aug 31 17:55:38 2006
From: B.Rowlingson at lancaster.ac.uk (Barry Rowlingson)
Date: Thu, 31 Aug 2006 16:55:38 +0100
Subject: [Rd] R-Project logo in SVG format
In-Reply-To: <61685.151.100.49.234.1157032368.squirrel@webmail.lrz-muenchen.de>
References: <Pine.LNX.4.64.0608310839160.32642@goldenaxe.gpcc.itd.umich.edu>
	<61685.151.100.49.234.1157032368.squirrel@webmail.lrz-muenchen.de>
Message-ID: <44F7067A.6030108@lancaster.ac.uk>

friedrich.leisch at stat.uni-muenchen.de wrote:

> After you created one and submitted it to us probably at the same place as
> the bitmaps. In the meantime it will have to suffice that you use all we
> have, and that are the bitmaps (the logo was done by a volunteer who chose
> to use a bitmapped graphics program). It is not like we keep the good
> stuff back on purpose ...

  It does look like it would be near-impossible to parameterise the logo 
efficiently into a vector format - all that shading and 3-d effect 
stuff. The largest PNG file there is 1450x1100 pixels which at 300 dpi 
gives you a 4-inch logo. Although looking at it full-size on my monitor 
reveals some artifacts in the 3-d shading...

  Do any other materials exist for making the logo? A description of the 
fonts used, a 3-d model R and O-shape, a layered PSD or XCF file, or a 
Gimp/Photoshop macro set for getting that effect? I dont believe this 
was painted pixel-by-pixel...

  When was the last time the mailing list had a 'need a new logo' thread?

Barry



From jeff.horner at vanderbilt.edu  Thu Aug 31 17:57:34 2006
From: jeff.horner at vanderbilt.edu (Jeffrey Horner)
Date: Thu, 31 Aug 2006 10:57:34 -0500
Subject: [Rd] stop R mainloop without calling exit(1)
In-Reply-To: <903fbcd30608310833h7a06b4d8p682912f0041d1baa@mail.gmail.com>
References: <903fbcd30608310552w2f3d6350p72e7e52c0144cc4b@mail.gmail.com>	<Pine.LNX.4.64.0608311406130.22477@gannet.stats.ox.ac.uk>	<Pine.LNX.4.64.0608311429420.22954@gannet.stats.ox.ac.uk>	<903fbcd30608310831s4b323e4fya224e99961b97db9@mail.gmail.com>
	<903fbcd30608310833h7a06b4d8p682912f0041d1baa@mail.gmail.com>
Message-ID: <44F706EE.7040802@vanderbilt.edu>

Thomas Kelder wrote:
[...]

> By the way, I use R version 2.2.1 in linux, because I got the "Error:
> C stack usage is too close to the limit R" error in higher versions (I
> saw there was a topic about this already:
> https://stat.ethz.ch/pipermail/r-devel/2006-April/037219.html). I
> tried to use the R-devel version to make use of the Rf_endEmbeddedR
> method, but the error also occurs in this version. Could this be a
> bug?

Try this in your code. It turns off stack checking altogether:

     #ifdef CSTACK_DEFNS
     /* Don't do any stack checking */
     R_CStackLimit = -1;
     #endif
     Rf_initEmbeddedR(R_argc, R_argv);


Jeff
-- 
http://biostat.mc.vanderbilt.edu/JeffreyHorner



From h.wickham at gmail.com  Thu Aug 31 18:44:05 2006
From: h.wickham at gmail.com (hadley wickham)
Date: Thu, 31 Aug 2006 11:44:05 -0500
Subject: [Rd] R-Project logo in SVG format
In-Reply-To: <44F7067A.6030108@lancaster.ac.uk>
References: <Pine.LNX.4.64.0608310839160.32642@goldenaxe.gpcc.itd.umich.edu>
	<61685.151.100.49.234.1157032368.squirrel@webmail.lrz-muenchen.de>
	<44F7067A.6030108@lancaster.ac.uk>
Message-ID: <f8e6ff050608310944ib3310e5i1d15a395934d7891@mail.gmail.com>

>   It does look like it would be near-impossible to parameterise the logo
> efficiently into a vector format - all that shading and 3-d effect
> stuff.

These days, most vector graphics programs provide gradient shading
primitives - that's all you need to recreate most 3D effects.

Hadley



From gregor.gorjanc at bfro.uni-lj.si  Thu Aug 31 20:06:23 2006
From: gregor.gorjanc at bfro.uni-lj.si (Gregor Gorjanc)
Date: Thu, 31 Aug 2006 20:06:23 +0200
Subject: [Rd] Wish: keep names in mapply() result
In-Reply-To: <44F62A59.8040301@bfro.uni-lj.si>
References: <44F62A59.8040301@bfro.uni-lj.si>
Message-ID: <44F7251F.2090700@bfro.uni-lj.si>

Hello,

Charles Berry sent me (off-list) his proposal, which I find better
(after slight modification) than mine. I would say that proposed changes
make mapply even more consistent with (some) *apply* funcs in terms of
names. Patches to mapply.R and mapply.Rd are attached. I have runned
make check-all and it seems that there are no problems with this change.
I hope R core will find this worth to apply.

New behaviour without first ... as character:

l <- list(a=1, b=2)
k <- list(1)
mapply(FUN="+", l, k)
a b
2 3

mapply(FUN="+", l, k, USE.NAMES=FALSE)
[1] 2 3

mapply(FUN="+", l, k, SIMPLIFY=FALSE)
$a
[1] 2

$b
[1] 3

mapply(FUN="+", l, k, SIMPLIFY=FALSE, USE.NAMES=FALSE)
[[1]]
[1] 2

[[2]]
[1] 3

New behaviour with first ... as character _with_ names:

l <- c("1", "2")
names(l) <- c("a", "b")
mapply(FUN="paste", l, k)
    a     b
"1 1" "2 1"

mapply(FUN="paste", l, k, USE.NAMES=FALSE)
[1] "1 1" "2 1"

mapply(FUN="paste", l, k, SIMPLIFY=FALSE)
$a
[1] "1 1"

$b
[1] "2 1"

mapply(FUN="paste", l, k, SIMPLIFY=FALSE, USE.NAMES=FALSE)
[[1]]
[1] "1 1"

[[2]]
[1] "2 1"

New behaviour with first ... as character _without_ names:

l <- c("1", "2")
mapply(FUN="paste", l, k)
    1     2
"1 1" "2 1"

mapply(FUN="paste", l, k, USE.NAMES=FALSE)
[1] "1 1" "2 1"

mapply(FUN="paste", l, k, SIMPLIFY=FALSE)
$`1`
[1] "1 1"

$`2`
[1] "2 1"

mapply(FUN="paste", l, k, SIMPLIFY=FALSE, USE.NAMES=FALSE)
[[1]]
[1] "1 1"

[[2]]
[1] "2 1"

Regards, Gregor

Gregor Gorjanc wrote:
> Hello!
> 
> I have noticed that mapply() drops names in R 2.3.1 as well as in
> r-devel. Here is a simple example:
> 
> l <- list(a=1, b=2)
> k <- list(1)
> mapply(FUN="+", l, k)
> [1] 2 3
> mapply(FUN="+", l, k, SIMPLIFY=FALSE)
> [[1]]
> [1] 2
> 
> [[2]]
> [1] 3
> 
> Help page does not indicate that this should happen. Argument USE.NAMES
> does not have any effect here as it used only in a bit special
> situation: "If the first ... argument is character and the result does
> not already have names, use it as the names." But result is always
> without names as shown above. Did I miss any peculiarities?
> 
> This is not consistent with lapply, which keeps names i.e.
> 
> lapply(l, "+", 1)
> $a
> [1] 2
> 
> $b
> [1] 3
> 
> I have attached and copied (at the end) patch proposal against SVN that
> adds names back to the result if x had it (only R as my C is ...). This
> way it would also be consistent with lapply. make check-all seems to be
> happy with changes. Now we get:
> 
> mapply(FUN="+", l, k)
> a b
> 2 3
> 
> mapply(FUN="+", l, k, SIMPLIFY=FALSE)
> $a
> [1] 2
> 
> $b
> [1] 3
> 
> And if we had "character" (with some variations) for first ... then:
> 
> l <- list(a="1", b="2")
> mapply(FUN="paste", l, k)
>     a     b
> "1 1" "2 1"
> 
> l <- list("1", "2")
> mapply(FUN="paste", l, k)
> [1] "1 1" "2 1"
> 
> l <- c("1", "2")
> mapply(FUN="paste", l, k)
>     1     2
> "1 1" "2 1"
> 
> Index: src/library/base/R/mapply.R
> ===================================================================
> --- src/library/base/R/mapply.R (revision 39024)
> +++ src/library/base/R/mapply.R (working copy)
> @@ -3,8 +3,16 @@
>      FUN <- match.fun(FUN)
>      dots <- list(...)
> 
> +    if(!is.null(names(dots[[1]]))) {
> +        isNamed <- TRUE
> +        namesX <- names(dots[[1]])
> +    } else {
> +        isNamed <- FALSE
> +    }
> +
>      answer<-.Call("do_mapply", FUN, dots, MoreArgs, environment(),
>                    PACKAGE="base")
> +    if(isNamed) names(answer) <- namesX
> 
>      if (USE.NAMES && length(dots) && is.character(dots[[1]]) &&
>          is.null(names(answer))) names(answer) <- dots[[1]]
> @@ -47,4 +55,4 @@
>      }
>      formals(FUNV) <- formals(FUN)
>      FUNV
> -}
> \ No newline at end of file
> +}
> 
> 
> 
> ------------------------------------------------------------------------
> 
> Index: src/library/base/R/mapply.R
> ===================================================================
> --- src/library/base/R/mapply.R	(revision 39024)
> +++ src/library/base/R/mapply.R	(working copy)
> @@ -3,8 +3,16 @@
>      FUN <- match.fun(FUN)
>      dots <- list(...)
>  
> +    if(!is.null(names(dots[[1]]))) {
> +        isNamed <- TRUE
> +        namesX <- names(dots[[1]])
> +    } else {
> +        isNamed <- FALSE
> +    }
> +
>      answer<-.Call("do_mapply", FUN, dots, MoreArgs, environment(),
>                    PACKAGE="base")
> +    if(isNamed) names(answer) <- namesX
>  
>      if (USE.NAMES && length(dots) && is.character(dots[[1]]) &&
>          is.null(names(answer))) names(answer) <- dots[[1]]
> @@ -47,4 +55,4 @@
>      }
>      formals(FUNV) <- formals(FUN)
>      FUNV
> -}
> \ No newline at end of file
> +}

-------------- next part --------------
A non-text attachment was scrubbed...
Name: mapply.R.patch.gz
Type: application/x-gzip
Size: 446 bytes
Desc: not available
Url : https://stat.ethz.ch/pipermail/r-devel/attachments/20060831/80849894/attachment-0010.gz 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: mapply.Rd.patch.gz
Type: application/x-gzip
Size: 438 bytes
Desc: not available
Url : https://stat.ethz.ch/pipermail/r-devel/attachments/20060831/80849894/attachment-0011.gz 

From Roger.Bivand at nhh.no  Thu Aug 31 22:16:44 2006
From: Roger.Bivand at nhh.no (Roger Bivand)
Date: Thu, 31 Aug 2006 22:16:44 +0200 (CEST)
Subject: [Rd] S4 changes - sp fails
Message-ID: <Pine.LNX.4.44.0608312159380.5231-100000@reclus.nhh.no>

Under R version 2.4.0 (2006-08-30 r39024), sp fails CMD check following
the latest changes in methods.

The failures are in running examples and occur in CMD check:

> data(state)
> dd2dms(state.center$x)
Error in function (classes, fdef, mtable)  : 
        unable to find an inherited method for function "initialize", for 
signature "integer"

Offending code:

	deg <- as(floor(dd), "integer") 

After replacing by as.integer(floor(dd)), it fails on the local class 
definition:

> dd2dms(state.center$x)
Error in function (classes, fdef, mtable)  : 
        unable to find an inherited method for function "initialize", for 
signature "DMS"

Installing sp, example("DMS-class") runs successfully interactively 
(other examples do too).

The methods package is declared as Depends: in DESCRIPTION, and
import(methods) in NAMESPACE; 

.onLoad <- function(lib, pkg) require(methods) is in the first R source 
file in Collate: order.

Should the methods package be being invoked in some other way, is there a 
reason why the installed package appears to run examples successfully that 
fail under CMD check?

Roger

-- 
Roger Bivand
Economic Geography Section, Department of Economics, Norwegian School of
Economics and Business Administration, Helleveien 30, N-5045 Bergen,
Norway. voice: +47 55 95 93 55; fax +47 55 95 95 43
e-mail: Roger.Bivand at nhh.no



