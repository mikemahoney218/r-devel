From pperry at stern.nyu.edu  Fri Dec  1 04:45:21 2017
From: pperry at stern.nyu.edu (Patrick Perry)
Date: Thu, 30 Nov 2017 22:45:21 -0500
Subject: [Rd] Bug is as.matrix.data.frame with nested data.frame
Message-ID: <5A20D051.40102@stern.nyu.edu>

Converting a data.frame with a nested data.frame to a matrix fails:

x <- structure(list(a = data.frame(letters)),
                class = "data.frame",
                row.names = .set_row_names(26))

as.matrix(x)
#> Error in ncol(xj) : object 'xj' not found

The offending code is here, in the definition of as.matrix.data.frame 
(source/base/all.R):

     for (j in pseq) {
         if (inherits(X[[j]], "data.frame") && ncol(xj) > 1L)
             X[[j]] <- as.matrix(X[[j]])
         xj <- X[[j]]

It should be ncol(X[[j]]), not ncol(xj). Also, the code would be more 
generic if it used is.data.frame here instead of inherits(, "data.frame").


Patrick


From maechler at stat.math.ethz.ch  Fri Dec  1 10:00:34 2017
From: maechler at stat.math.ethz.ch (Martin Maechler)
Date: Fri, 1 Dec 2017 10:00:34 +0100
Subject: [Rd] Bug is as.matrix.data.frame with nested data.frame
In-Reply-To: <5A20D051.40102@stern.nyu.edu>
References: <5A20D051.40102@stern.nyu.edu>
Message-ID: <23073.6706.222905.200746@stat.math.ethz.ch>

>>>>> Patrick Perry <pperry at stern.nyu.edu>
>>>>>     on Thu, 30 Nov 2017 22:45:21 -0500 writes:

    > Converting a data.frame with a nested data.frame to a matrix fails:
    > x <- structure(list(a = data.frame(letters)),
    > class = "data.frame",
    > row.names = .set_row_names(26))

    > as.matrix(x)
    > #> Error in ncol(xj) : object 'xj' not found

    > The offending code is here, in the definition of as.matrix.data.frame 
    > (source/base/all.R):
    ^^^^^^^^^^^^^^^^^^^^^^ that's *not* file from the sources of R !

    > for (j in pseq) {
    >    if (inherits(X[[j]], "data.frame") && ncol(xj) > 1L)
    >        X[[j]] <- as.matrix(X[[j]])
    >    xj <- X[[j]]

    > It should be ncol(X[[j]]), not ncol(xj). 

yes (or something similar ..)
Interesting, that this has not been detected earlier.

[ OTOH, who nests data.frames inside data.frames? ]

If I fix the above, there's a next "bug" preventing
as.matrix(x)  to work for your case.

I'll look into it.
 
   > Also, the code would be more 
    > generic if it used is.data.frame here instead of inherits(, "data.frame").

No, that is not true as is.data.frame() is not generic, and base
functions call base, so there can't be a difference.

Martin


From wdunlap at tibco.com  Fri Dec  1 21:58:11 2017
From: wdunlap at tibco.com (William Dunlap)
Date: Fri, 1 Dec 2017 12:58:11 -0800
Subject: [Rd] tryCatch in on.exit()
Message-ID: <CAF8bMcYN35WtHdaYMV8NxL_B9o+dng6PbhqS=UgnYMPvYJy2ZA@mail.gmail.com>

The following example involves a function whose on.exit()
expression both generates an error and catches the error.
The body of the function also generates an error.

When calling the function wrapped in a tryCatch, should
that tryCatch's error function be given the error from the
body of the function, since the one from the on.exit has
already been dealt with?  Currently the outer tryCatch gets
the error from the on.exit expression.

xx <- function() {
  on.exit(tryCatch(
    expr = stop("error in xx's on.exit"),
    error=function(e) {
      cat("xx's on.exit caught error: <<", conditionMessage(e), ">>\n",
sep="")
    }))
  stop("error in body of xx")
}
zz <- tryCatch(xx(), error=function(e)paste("outer tryCatch caught error
<<", conditionMessage(e), ">>", sep=""))
#xx's on.exit caught error: <<error in xx's on.exit>>
zz
#[1] "outer tryCatch caught error <<error in xx's on.exit>>"


Bill Dunlap
TIBCO Software
wdunlap tibco.com

	[[alternative HTML version deleted]]


From wdunlap at tibco.com  Fri Dec  1 23:16:01 2017
From: wdunlap at tibco.com (William Dunlap)
Date: Fri, 1 Dec 2017 14:16:01 -0800
Subject: [Rd] tryCatch in on.exit()
In-Reply-To: <CAF8bMcYN35WtHdaYMV8NxL_B9o+dng6PbhqS=UgnYMPvYJy2ZA@mail.gmail.com>
References: <CAF8bMcYN35WtHdaYMV8NxL_B9o+dng6PbhqS=UgnYMPvYJy2ZA@mail.gmail.com>
Message-ID: <CAF8bMcZi52_++xMQ61YCgf_DEbNkh68+XnjXOEE8fhQLr0FFYw@mail.gmail.com>

Things work as I would expect if you give stop() a condition object instead
of a string:

makeError <- function(message, class = "simpleError", call = sys.call(-2)) {
    structure(list(message=message, call=call), class=c(class, "error",
"condition"))
}
f0 <- function() {
    on.exit(tryCatch(expr = stop("pb. in f0's on.exit"),
                     error = function(e)cat("[error] caught",
paste(collapse="/", class(e)), ":", conditionMessage(e), "\n")))
    stop("pb. in f0")
}
f1 <- function() {
    on.exit(tryCatch(expr = stop(makeError("pb. in f1's on.exit",
class="simpleError")),
                     error = function(e)cat("[error] caught",
paste(collapse="/", class(e)), ":", conditionMessage(e), "\n")))
    stop(makeError("pb. in f1", class="simpleError"))
}
catch <- function(FUN) {
    tryCatch(
        expr = FUN(),
        error = function(e)paste("[error] caught", paste(collapse="/",
class(e)), ":", conditionMessage(e)))
}
catch(f0) # calls stop("string")
#[error] caught simpleError/error/condition : pb. in f0's on.exit
#[1] "[error] caught simpleError/error/condition : pb. in f0's on.exit"
catch(f1) # calls stop(conditionObject)
#[error] caught simpleError/error/condition : pb. in f1's on.exit
#[1] "[error] caught simpleError/error/condition : pb. in f1"


Bill Dunlap
TIBCO Software
wdunlap tibco.com

On Fri, Dec 1, 2017 at 12:58 PM, William Dunlap <wdunlap at tibco.com> wrote:

> The following example involves a function whose on.exit()
> expression both generates an error and catches the error.
> The body of the function also generates an error.
>
> When calling the function wrapped in a tryCatch, should
> that tryCatch's error function be given the error from the
> body of the function, since the one from the on.exit has
> already been dealt with?  Currently the outer tryCatch gets
> the error from the on.exit expression.
>
> xx <- function() {
>   on.exit(tryCatch(
>     expr = stop("error in xx's on.exit"),
>     error=function(e) {
>       cat("xx's on.exit caught error: <<", conditionMessage(e), ">>\n",
> sep="")
>     }))
>   stop("error in body of xx")
> }
> zz <- tryCatch(xx(), error=function(e)paste("outer tryCatch caught error
> <<", conditionMessage(e), ">>", sep=""))
> #xx's on.exit caught error: <<error in xx's on.exit>>
> zz
> #[1] "outer tryCatch caught error <<error in xx's on.exit>>"
>
>
> Bill Dunlap
> TIBCO Software
> wdunlap tibco.com
>

	[[alternative HTML version deleted]]


From luke-tierney at uiowa.edu  Fri Dec  1 23:52:43 2017
From: luke-tierney at uiowa.edu (luke-tierney at uiowa.edu)
Date: Fri, 1 Dec 2017 16:52:43 -0600 (CST)
Subject: [Rd] tryCatch in on.exit()
In-Reply-To: <CAF8bMcYN35WtHdaYMV8NxL_B9o+dng6PbhqS=UgnYMPvYJy2ZA@mail.gmail.com>
References: <CAF8bMcYN35WtHdaYMV8NxL_B9o+dng6PbhqS=UgnYMPvYJy2ZA@mail.gmail.com>
Message-ID: <alpine.OSX.2.20.1712011652180.1706@lukes-macbook-air.local>

Thanks -- will look into it.

luke

On Fri, 1 Dec 2017, William Dunlap via R-devel wrote:

> The following example involves a function whose on.exit()
> expression both generates an error and catches the error.
> The body of the function also generates an error.
>
> When calling the function wrapped in a tryCatch, should
> that tryCatch's error function be given the error from the
> body of the function, since the one from the on.exit has
> already been dealt with?  Currently the outer tryCatch gets
> the error from the on.exit expression.
>
> xx <- function() {
>  on.exit(tryCatch(
>    expr = stop("error in xx's on.exit"),
>    error=function(e) {
>      cat("xx's on.exit caught error: <<", conditionMessage(e), ">>\n",
> sep="")
>    }))
>  stop("error in body of xx")
> }
> zz <- tryCatch(xx(), error=function(e)paste("outer tryCatch caught error
> <<", conditionMessage(e), ">>", sep=""))
> #xx's on.exit caught error: <<error in xx's on.exit>>
> zz
> #[1] "outer tryCatch caught error <<error in xx's on.exit>>"
>
>
> Bill Dunlap
> TIBCO Software
> wdunlap tibco.com
>
> 	[[alternative HTML version deleted]]
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>

-- 
Luke Tierney
Ralph E. Wareham Professor of Mathematical Sciences
University of Iowa                  Phone:             319-335-3386
Department of Statistics and        Fax:               319-335-3017
    Actuarial Science
241 Schaeffer Hall                  email:   luke-tierney at uiowa.edu
Iowa City, IA 52242                 WWW:  http://www.stat.uiowa.edu


From arietencate at gmail.com  Sun Dec  3 16:31:25 2017
From: arietencate at gmail.com (Arie ten Cate)
Date: Sun, 3 Dec 2017 16:31:25 +0100
Subject: [Rd] Discourage the weights= option of lm with summarized data
In-Reply-To: <1678DE0E-9691-4D20-B23C-790DAAB10EE9@gmail.com>
References: <CACg-3uaGhq_RX5S7YQVz0KEx6G-MoVaFVXx_MWuP75qaWqw3mQ@mail.gmail.com>
 <3350d9cc415940f39ba36bd65e104ee0@UM-MAIL3216.unimaas.nl>
 <CACg-3uZMSoj5RBkREqzM6Dc-AiqMahHbQPMzP34KgoeQ7UmVHg@mail.gmail.com>
 <E784F4E0-01CE-4A09-8DD8-4F85FAC293AF@gmail.com>
 <CACg-3uYd66Wbua3q71Hau4w6gHhJdENrnHVzNU_yd3z4XLa5gw@mail.gmail.com>
 <1678DE0E-9691-4D20-B23C-790DAAB10EE9@gmail.com>
Message-ID: <CACg-3uaVwqEBT4io4QqcoDRtuhpYgoqTZQ_7t=-w-v-weKaYUw@mail.gmail.com>

Peter,

This is a highly structured text. Just for the discussion, I separate
the building blocks, where (D) and (E) and (F) are new:

BEGIN OF TEXT --------------------

(A)

Non-?NULL? ?weights? can be used to indicate that different
observations have different variances (with the values in ?weights?
being inversely proportional to the variances);

(B)

or equivalently, when the elements of ?weights? are positive integers
w_i, that each response y_i is the mean of w_i unit-weight
observations

(C)

(including the case that there are w_i observations equal to y_i and
the data have been summarized).

(D)

However, in the latter case, notice that within-group variation is not
used. Therefore, the sigma estimate and residual degrees of freedom
may be suboptimal;

(E)

in the case of replication weights, even wrong.

(F)

Hence, standard errors and analysis of variance tables should be
treated with care.

END OF TEXT --------------------

I don't understand (D), partly because it is unclear to me whether (D)
refers to (C) or to (B)+(C):
    If (D) refers only to (C), as the reader might automatically think
with the repetition of the word "case", then it is unclear to me to
what block does (E) refer.
    If, on the other hand, (D) refers to (B)+(C) then (E) probably
refers to (C) and then I suggest to make this more clear by replacing
"in the case of replication weights" in (E) by "in the case of
summarized data".

I suggest to change "even wrong" in (E) into the more down-to-earth "wrong".

(For the record: I prefer something like my original explanation of
the problem with (C), instead of (D)+(E)+(F):
    "With summarized data the standard errors get smaller with
increasing numbers of observations w_i. However, when for instance all
w_i are multiplied with the same constant larger than one, the
reported standard errors do not get smaller since the w_i are defined
apart from an arbitrary positive multiplicative constant. Hence the
reported standard errors tend to be too large and the reported t
values and the reported number of significance stars too small.
Obviously, also the reported number of observations and the reported
number of degrees of freedom are too small."
    Note that with heteroskedasticity, _the_ residual standard error
has no meaning.)

Finally, about the original text: (B) and (C) mention only y_i, not
x_i, while this is about entire observations. Maybe this can remedied
also?

  Arie

On Tue, Nov 28, 2017 at 1:01 PM, peter dalgaard <pdalgd at gmail.com> wrote:
> My local R-devel version now has (in ?lm)
>
>      Non-?NULL? ?weights? can be used to indicate that different
>      observations have different variances (with the values in
>      ?weights? being inversely proportional to the variances); or
>      equivalently, when the elements of ?weights? are positive integers
>      w_i, that each response y_i is the mean of w_i unit-weight
>      observations (including the case that there are w_i observations
>      equal to y_i and the data have been summarized). However, in the
>      latter case, notice that within-group variation is not used.
>      Therefore, the sigma estimate and residual degrees of freedom may
>      be suboptimal; in the case of replication weights, even wrong.
>      Hence, standard errors and analysis of variance tables should be
>      treated with care.
>
> OK?
>
>
> -pd
>
>
>> On 12 Oct 2017, at 13:48 , Arie ten Cate <arietencate at gmail.com> wrote:
>>
>> OK. We have now three suggestions to repair the text:
>> - remove the text
>> - add "not" at the beginning of the text
>> - add at the end of the text a warning; something like:
>>
>>  "Note that in this case the standard estimates of the parameters are
>> in general not correct, and hence also the t values and the p value.
>> Also the number of degrees of freedom is not correct. (The parameter
>> values are correct.)"
>>
>> A remark about the glm example: the Reference manual says: "For a
>> binomial GLM prior weights are used to give the number of trials when
>> the response is the proportion of successes ....".  Hence in the
>> binomial case the weights are frequencies.
>> With y <- 0.51 and w <- 100 you get the same result.
>>
>>   Arie
>>
>> On Mon, Oct 9, 2017 at 5:22 PM, peter dalgaard <pdalgd at gmail.com> wrote:
>>> AFAIR, it is a little more subtle than that.
>>>
>>> If you have replication weights, then the estimates are right, it is "just" that the SE from summary.lm() are wrong. Somehow, the text should reflect this.
>>>
>>> It is of some importance when you put glm() into the mix, because you can in fact get correct results from things like
>>>
>>> y <- c(0,1)
>>> w <- c(49,51)
>>> glm(y~1, weights=w, family=binomial)
>>>
>>> -pd
>>>
>>>> On 9 Oct 2017, at 07:58 , Arie ten Cate <arietencate at gmail.com> wrote:
>>>>
>>>> Yes.  Thank you; I should have quoted it.
>>>> I suggest to remove this text or to add the word "not" at the beginning.
>>>>
>>>>  Arie
>>>>
>>>> On Sun, Oct 8, 2017 at 4:38 PM, Viechtbauer Wolfgang (SP)
>>>> <wolfgang.viechtbauer at maastrichtuniversity.nl> wrote:
>>>>> Ah, I think you are referring to this part from ?lm:
>>>>>
>>>>> "(including the case that there are w_i observations equal to y_i and the data have been summarized)"
>>>>>
>>>>> I see; indeed, I don't think this is what 'weights' should be used for (the other part before that is correct). Sorry, I misunderstood the point you were trying to make.
>>>>>
>>>>> Best,
>>>>> Wolfgang
>>>>>
>>>>> -----Original Message-----
>>>>> From: R-devel [mailto:r-devel-bounces at r-project.org] On Behalf Of Arie ten Cate
>>>>> Sent: Sunday, 08 October, 2017 14:55
>>>>> To: r-devel at r-project.org
>>>>> Subject: [Rd] Discourage the weights= option of lm with summarized data
>>>>>
>>>>> Indeed: Using 'weights' is not meant to indicate that the same
>>>>> observation is repeated 'n' times.  As I showed, this gives erroneous
>>>>> results. Hence I suggested that it is discouraged rather than
>>>>> encouraged in the Details section of lm in the Reference manual.
>>>>>
>>>>>  Arie
>>>>>
>>>>> ---Original Message-----
>>>>> On Sat, 7 Oct 2017, wolfgang.viechtbauer at maastrichtuniversity.nl wrote:
>>>>>
>>>>> Using 'weights' is not meant to indicate that the same observation is
>>>>> repeated 'n' times. It is meant to indicate different variances (or to
>>>>> be precise, that the variance of the last observation in 'x' is
>>>>> sigma^2 / n, while the first three observations have variance
>>>>> sigma^2).
>>>>>
>>>>> Best,
>>>>> Wolfgang
>>>>>
>>>>> -----Original Message-----
>>>>> From: R-devel [mailto:r-devel-bounces at r-project.org] On Behalf Of Arie ten Cate
>>>>> Sent: Saturday, 07 October, 2017 9:36
>>>>> To: r-devel at r-project.org
>>>>> Subject: [Rd] Discourage the weights= option of lm with summarized data
>>>>>
>>>>> In the Details section of lm (linear models) in the Reference manual,
>>>>> it is suggested to use the weights= option for summarized data. This
>>>>> must be discouraged rather than encouraged. The motivation for this is
>>>>> as follows.
>>>>>
>>>>> With summarized data the standard errors get smaller with increasing
>>>>> numbers of observations. However, the standard errors in lm do not get
>>>>> smaller when for instance all weights are multiplied with the same
>>>>> constant larger than one, since the inverse weights are merely
>>>>> proportional to the error variances.
>>>>>
>>>>> Here is an example of the estimated standard errors being too large
>>>>> with the weights= option. The p value and the number of degrees of
>>>>> freedom are also wrong. The parameter estimates are correct.
>>>>>
>>>>> n <- 10
>>>>> x <- c(1,2,3,4)
>>>>> y <- c(1,2,5,4)
>>>>> w <- c(1,1,1,n)
>>>>> xb <- c(x,rep(x[4],n-1))  # restore the original data
>>>>> yb <- c(y,rep(y[4],n-1))
>>>>> print(summary(lm(yb ~ xb)))
>>>>> print(summary(lm(y ~ x, weights=w)))
>>>>>
>>>>> Compare with PROC REG in SAS, with a WEIGHT statement (like R) and a
>>>>> FREQ statement (for summarized data).
>>>>>
>>>>>   Arie
>>>>>
>>>>> ______________________________________________
>>>>> R-devel at r-project.org mailing list
>>>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>>>
>>>> ______________________________________________
>>>> R-devel at r-project.org mailing list
>>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>>
>>> --
>>> Peter Dalgaard, Professor,
>>> Center for Statistics, Copenhagen Business School
>>> Solbjerg Plads 3, 2000 Frederiksberg, Denmark
>>> Phone: (+45)38153501
>>> Office: A 4.23
>>> Email: pd.mes at cbs.dk  Priv: PDalgd at gmail.com
>>>
>
> --
> Peter Dalgaard, Professor,
> Center for Statistics, Copenhagen Business School
> Solbjerg Plads 3, 2000 Frederiksberg, Denmark
> Phone: (+45)38153501
> Office: A 4.23
> Email: pd.mes at cbs.dk  Priv: PDalgd at gmail.com


From pdalgd at gmail.com  Sun Dec  3 18:19:57 2017
From: pdalgd at gmail.com (peter dalgaard)
Date: Sun, 3 Dec 2017 18:19:57 +0100
Subject: [Rd] Discourage the weights= option of lm with summarized data
In-Reply-To: <CACg-3uaVwqEBT4io4QqcoDRtuhpYgoqTZQ_7t=-w-v-weKaYUw@mail.gmail.com>
References: <CACg-3uaGhq_RX5S7YQVz0KEx6G-MoVaFVXx_MWuP75qaWqw3mQ@mail.gmail.com>
 <3350d9cc415940f39ba36bd65e104ee0@UM-MAIL3216.unimaas.nl>
 <CACg-3uZMSoj5RBkREqzM6Dc-AiqMahHbQPMzP34KgoeQ7UmVHg@mail.gmail.com>
 <E784F4E0-01CE-4A09-8DD8-4F85FAC293AF@gmail.com>
 <CACg-3uYd66Wbua3q71Hau4w6gHhJdENrnHVzNU_yd3z4XLa5gw@mail.gmail.com>
 <1678DE0E-9691-4D20-B23C-790DAAB10EE9@gmail.com>
 <CACg-3uaVwqEBT4io4QqcoDRtuhpYgoqTZQ_7t=-w-v-weKaYUw@mail.gmail.com>
Message-ID: <3E630A07-6ECD-459D-8352-A7C9769977B3@gmail.com>


> On 3 Dec 2017, at 16:31 , Arie ten Cate <arietencate at gmail.com> wrote:
> 
> Peter,
> 
> This is a highly structured text. Just for the discussion, I separate
> the building blocks, where (D) and (E) and (F) are new:
> 
> BEGIN OF TEXT --------------------
> 
> (A)
> 
> Non-?NULL? ?weights? can be used to indicate that different
> observations have different variances (with the values in ?weights?
> being inversely proportional to the variances);
> 
> (B)
> 
> or equivalently, when the elements of ?weights? are positive integers
> w_i, that each response y_i is the mean of w_i unit-weight
> observations
> 
> (C)
> 
> (including the case that there are w_i observations equal to y_i and
> the data have been summarized).
> 
> (D)
> 
> However, in the latter case, notice that within-group variation is not
> used. Therefore, the sigma estimate and residual degrees of freedom
> may be suboptimal;
> 
> (E)
> 
> in the case of replication weights, even wrong.
> 
> (F)
> 
> Hence, standard errors and analysis of variance tables should be
> treated with care.
> 
> END OF TEXT --------------------
> 
> I don't understand (D), partly because it is unclear to me whether (D)
> refers to (C) or to (B)+(C):

B, including C, is "the latter case". 

>    If (D) refers only to (C), as the reader might automatically think
> with the repetition of the word "case", then it is unclear to me to
> what block does (E) refer.

Not so. If it did, it should go inside the parentheses.

>    If, on the other hand, (D) refers to (B)+(C) then (E) probably
> refers to (C) and then I suggest to make this more clear by replacing
> "in the case of replication weights" in (E) by "in the case of
> summarized data".
> 

That would be wrong. Data can be summarized by means of groups (and SDs, which are unused, hence the suboptimality), _including_ the case where all elements are identical. 

> I suggest to change "even wrong" in (E) into the more down-to-earth "wrong".

That would seem to be a matter of taste. 

Howver, "equivalently" in (B) does not look right.

> 
> (For the record: I prefer something like my original explanation of
> the problem with (C), instead of (D)+(E)+(F):
>    "With summarized data the standard errors get smaller with
> increasing numbers of observations w_i. However, when for instance all
> w_i are multiplied with the same constant larger than one, the
> reported standard errors do not get smaller since the w_i are defined
> apart from an arbitrary positive multiplicative constant. Hence the
> reported standard errors tend to be too large and the reported t
> values and the reported number of significance stars too small.
> Obviously, also the reported number of observations and the reported
> number of degrees of freedom are too small."
>    Note that with heteroskedasticity, _the_ residual standard error
> has no meaning.)
> 
> Finally, about the original text: (B) and (C) mention only y_i, not
> x_i, while this is about entire observations. Maybe this can remedied
> also?
> 
>  Arie
> 
> On Tue, Nov 28, 2017 at 1:01 PM, peter dalgaard <pdalgd at gmail.com> wrote:
>> My local R-devel version now has (in ?lm)
>> 
>>     Non-?NULL? ?weights? can be used to indicate that different
>>     observations have different variances (with the values in
>>     ?weights? being inversely proportional to the variances); or
>>     equivalently, when the elements of ?weights? are positive integers
>>     w_i, that each response y_i is the mean of w_i unit-weight
>>     observations (including the case that there are w_i observations
>>     equal to y_i and the data have been summarized). However, in the
>>     latter case, notice that within-group variation is not used.
>>     Therefore, the sigma estimate and residual degrees of freedom may
>>     be suboptimal; in the case of replication weights, even wrong.
>>     Hence, standard errors and analysis of variance tables should be
>>     treated with care.
>> 
>> OK?
>> 
>> 
>> -pd
>> 
>> 
>>> On 12 Oct 2017, at 13:48 , Arie ten Cate <arietencate at gmail.com> wrote:
>>> 
>>> OK. We have now three suggestions to repair the text:
>>> - remove the text
>>> - add "not" at the beginning of the text
>>> - add at the end of the text a warning; something like:
>>> 
>>> "Note that in this case the standard estimates of the parameters are
>>> in general not correct, and hence also the t values and the p value.
>>> Also the number of degrees of freedom is not correct. (The parameter
>>> values are correct.)"
>>> 
>>> A remark about the glm example: the Reference manual says: "For a
>>> binomial GLM prior weights are used to give the number of trials when
>>> the response is the proportion of successes ....".  Hence in the
>>> binomial case the weights are frequencies.
>>> With y <- 0.51 and w <- 100 you get the same result.
>>> 
>>>  Arie
>>> 
>>> On Mon, Oct 9, 2017 at 5:22 PM, peter dalgaard <pdalgd at gmail.com> wrote:
>>>> AFAIR, it is a little more subtle than that.
>>>> 
>>>> If you have replication weights, then the estimates are right, it is "just" that the SE from summary.lm() are wrong. Somehow, the text should reflect this.
>>>> 
>>>> It is of some importance when you put glm() into the mix, because you can in fact get correct results from things like
>>>> 
>>>> y <- c(0,1)
>>>> w <- c(49,51)
>>>> glm(y~1, weights=w, family=binomial)
>>>> 
>>>> -pd
>>>> 
>>>>> On 9 Oct 2017, at 07:58 , Arie ten Cate <arietencate at gmail.com> wrote:
>>>>> 
>>>>> Yes.  Thank you; I should have quoted it.
>>>>> I suggest to remove this text or to add the word "not" at the beginning.
>>>>> 
>>>>> Arie
>>>>> 
>>>>> On Sun, Oct 8, 2017 at 4:38 PM, Viechtbauer Wolfgang (SP)
>>>>> <wolfgang.viechtbauer at maastrichtuniversity.nl> wrote:
>>>>>> Ah, I think you are referring to this part from ?lm:
>>>>>> 
>>>>>> "(including the case that there are w_i observations equal to y_i and the data have been summarized)"
>>>>>> 
>>>>>> I see; indeed, I don't think this is what 'weights' should be used for (the other part before that is correct). Sorry, I misunderstood the point you were trying to make.
>>>>>> 
>>>>>> Best,
>>>>>> Wolfgang
>>>>>> 
>>>>>> -----Original Message-----
>>>>>> From: R-devel [mailto:r-devel-bounces at r-project.org] On Behalf Of Arie ten Cate
>>>>>> Sent: Sunday, 08 October, 2017 14:55
>>>>>> To: r-devel at r-project.org
>>>>>> Subject: [Rd] Discourage the weights= option of lm with summarized data
>>>>>> 
>>>>>> Indeed: Using 'weights' is not meant to indicate that the same
>>>>>> observation is repeated 'n' times.  As I showed, this gives erroneous
>>>>>> results. Hence I suggested that it is discouraged rather than
>>>>>> encouraged in the Details section of lm in the Reference manual.
>>>>>> 
>>>>>> Arie
>>>>>> 
>>>>>> ---Original Message-----
>>>>>> On Sat, 7 Oct 2017, wolfgang.viechtbauer at maastrichtuniversity.nl wrote:
>>>>>> 
>>>>>> Using 'weights' is not meant to indicate that the same observation is
>>>>>> repeated 'n' times. It is meant to indicate different variances (or to
>>>>>> be precise, that the variance of the last observation in 'x' is
>>>>>> sigma^2 / n, while the first three observations have variance
>>>>>> sigma^2).
>>>>>> 
>>>>>> Best,
>>>>>> Wolfgang
>>>>>> 
>>>>>> -----Original Message-----
>>>>>> From: R-devel [mailto:r-devel-bounces at r-project.org] On Behalf Of Arie ten Cate
>>>>>> Sent: Saturday, 07 October, 2017 9:36
>>>>>> To: r-devel at r-project.org
>>>>>> Subject: [Rd] Discourage the weights= option of lm with summarized data
>>>>>> 
>>>>>> In the Details section of lm (linear models) in the Reference manual,
>>>>>> it is suggested to use the weights= option for summarized data. This
>>>>>> must be discouraged rather than encouraged. The motivation for this is
>>>>>> as follows.
>>>>>> 
>>>>>> With summarized data the standard errors get smaller with increasing
>>>>>> numbers of observations. However, the standard errors in lm do not get
>>>>>> smaller when for instance all weights are multiplied with the same
>>>>>> constant larger than one, since the inverse weights are merely
>>>>>> proportional to the error variances.
>>>>>> 
>>>>>> Here is an example of the estimated standard errors being too large
>>>>>> with the weights= option. The p value and the number of degrees of
>>>>>> freedom are also wrong. The parameter estimates are correct.
>>>>>> 
>>>>>> n <- 10
>>>>>> x <- c(1,2,3,4)
>>>>>> y <- c(1,2,5,4)
>>>>>> w <- c(1,1,1,n)
>>>>>> xb <- c(x,rep(x[4],n-1))  # restore the original data
>>>>>> yb <- c(y,rep(y[4],n-1))
>>>>>> print(summary(lm(yb ~ xb)))
>>>>>> print(summary(lm(y ~ x, weights=w)))
>>>>>> 
>>>>>> Compare with PROC REG in SAS, with a WEIGHT statement (like R) and a
>>>>>> FREQ statement (for summarized data).
>>>>>> 
>>>>>>  Arie
>>>>>> 
>>>>>> ______________________________________________
>>>>>> R-devel at r-project.org mailing list
>>>>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>>>> 
>>>>> ______________________________________________
>>>>> R-devel at r-project.org mailing list
>>>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>>> 
>>>> --
>>>> Peter Dalgaard, Professor,
>>>> Center for Statistics, Copenhagen Business School
>>>> Solbjerg Plads 3, 2000 Frederiksberg, Denmark
>>>> Phone: (+45)38153501
>>>> Office: A 4.23
>>>> Email: pd.mes at cbs.dk  Priv: PDalgd at gmail.com
>>>> 
>> 
>> --
>> Peter Dalgaard, Professor,
>> Center for Statistics, Copenhagen Business School
>> Solbjerg Plads 3, 2000 Frederiksberg, Denmark
>> Phone: (+45)38153501
>> Office: A 4.23
>> Email: pd.mes at cbs.dk  Priv: PDalgd at gmail.com

-- 
Peter Dalgaard, Professor,
Center for Statistics, Copenhagen Business School
Solbjerg Plads 3, 2000 Frederiksberg, Denmark
Phone: (+45)38153501
Office: A 4.23
Email: pd.mes at cbs.dk  Priv: PDalgd at gmail.com


From csardi.gabor at gmail.com  Tue Dec  5 12:44:40 2017
From: csardi.gabor at gmail.com (=?UTF-8?B?R8OhYm9yIENzw6FyZGk=?=)
Date: Tue, 5 Dec 2017 11:44:40 +0000
Subject: [Rd] command line arguments are parsed differently on windows,
	from 3.4.3
Message-ID: <CABtg=Kkq1-63y18oRKGbgkvd3GMajVfZP8-8npTLmxytgcOzZg@mail.gmail.com>

I wonder if this is intended.

Thanks,
Gabor


C:\Users\rhub>"c:\Program Files\R\R-3.4.2\bin\R" -q -e "1 + 1"
> 1 + 1
[1] 2
>
>

C:\Users\rhub>"c:\Program Files\R\R-3.4.3\bin\R" -q -e "1 + 1"
'c:\PROGRA~1\R\R-34~1.3\bin\x64\R.exe" -q -e "1' is not recognized as an interna
l or external command,
operable program or batch file.

C:\Users\rhub>"c:\Program Files\R\R-devel\bin\R" -q -e "1 + 1"
'c:\PROGRA~1\R\R-devel\bin\x64\R.exe" -q -e "1' is not recognized as an internal
 or external command,
operable program or batch file.

C:\Users\rhub>"c:\Program Files\R\R-3.4.3patched\bin\R" -q -e "1 + 1"
'c:\PROGRA~1\R\R-34~1.3PA\bin\x64\R.exe" -q -e "1' is not recognized as an inter
nal or external command,
operable program or batch file.

C:\Users\rhub>"c:\Program Files\R\R-devel\bin\R" -q -e "1+1"
> 1+1
[1] 2
>
>


From tomas.kalibera at gmail.com  Tue Dec  5 13:44:14 2017
From: tomas.kalibera at gmail.com (Tomas Kalibera)
Date: Tue, 5 Dec 2017 13:44:14 +0100
Subject: [Rd] command line arguments are parsed differently on windows,
 from 3.4.3
In-Reply-To: <CABtg=Kkq1-63y18oRKGbgkvd3GMajVfZP8-8npTLmxytgcOzZg@mail.gmail.com>
References: <CABtg=Kkq1-63y18oRKGbgkvd3GMajVfZP8-8npTLmxytgcOzZg@mail.gmail.com>
Message-ID: <b49fd6d0-6876-817b-c882-b467b00b1548@gmail.com>

Thanks, will fix this
Best
Tomas

On 12/05/2017 12:44 PM, G?bor Cs?rdi wrote:
> I wonder if this is intended.
>
> Thanks,
> Gabor
>
>
> C:\Users\rhub>"c:\Program Files\R\R-3.4.2\bin\R" -q -e "1 + 1"
>> 1 + 1
> [1] 2
>>
> C:\Users\rhub>"c:\Program Files\R\R-3.4.3\bin\R" -q -e "1 + 1"
> 'c:\PROGRA~1\R\R-34~1.3\bin\x64\R.exe" -q -e "1' is not recognized as an interna
> l or external command,
> operable program or batch file.
>
> C:\Users\rhub>"c:\Program Files\R\R-devel\bin\R" -q -e "1 + 1"
> 'c:\PROGRA~1\R\R-devel\bin\x64\R.exe" -q -e "1' is not recognized as an internal
>   or external command,
> operable program or batch file.
>
> C:\Users\rhub>"c:\Program Files\R\R-3.4.3patched\bin\R" -q -e "1 + 1"
> 'c:\PROGRA~1\R\R-34~1.3PA\bin\x64\R.exe" -q -e "1' is not recognized as an inter
> nal or external command,
> operable program or batch file.
>
> C:\Users\rhub>"c:\Program Files\R\R-devel\bin\R" -q -e "1+1"
>> 1+1
> [1] 2
>>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From henrik.bengtsson at gmail.com  Tue Dec  5 17:40:14 2017
From: henrik.bengtsson at gmail.com (Henrik Bengtsson)
Date: Tue, 5 Dec 2017 08:40:14 -0800
Subject: [Rd] command line arguments are parsed differently on windows,
 from 3.4.3
In-Reply-To: <CAFDcVCSO03gj8mgy1cGGjUVHcMmYZQ+RUXbHWFSoyX+mUm1ztQ@mail.gmail.com>
References: <CABtg=Kkq1-63y18oRKGbgkvd3GMajVfZP8-8npTLmxytgcOzZg@mail.gmail.com>
 <CAFDcVCSu3njV1A2gPVyN66mJ4KNf3hukXQ00=McT=is_Yv6cMg@mail.gmail.com>
 <CAFDcVCSO03gj8mgy1cGGjUVHcMmYZQ+RUXbHWFSoyX+mUm1ztQ@mail.gmail.com>
Message-ID: <CAFDcVCSpM4yzDg-87wm3Mqg2E2gp0P-bGDApen6rSE9oEKStLA@mail.gmail.com>

One comment:
For your R devel example you didn't use spaces in the expression, i.e.
maybe that's broken too with spaces?

Three questions:
Does it work if you avoid spaces?

Does it work if you use single quotes?

Does this also occur for Rscript?

Thxs

Henrik


On Dec 5, 2017 03:44, "G?bor Cs?rdi" <csardi.gabor at gmail.com> wrote:

I wonder if this is intended.

Thanks,
Gabor


C:\Users\rhub>"c:\Program Files\R\R-3.4.2\bin\R" -q -e "1 + 1"
> 1 + 1
[1] 2
>
>

C:\Users\rhub>"c:\Program Files\R\R-3.4.3\bin\R" -q -e "1 + 1"
'c:\PROGRA~1\R\R-34~1.3\bin\x64\R.exe" -q -e "1' is not recognized as an
interna
l or external command,
operable program or batch file.

C:\Users\rhub>"c:\Program Files\R\R-devel\bin\R" -q -e "1 + 1"
'c:\PROGRA~1\R\R-devel\bin\x64\R.exe" -q -e "1' is not recognized as an
internal
 or external command,
operable program or batch file.

C:\Users\rhub>"c:\Program Files\R\R-3.4.3patched\bin\R" -q -e "1 + 1"
'c:\PROGRA~1\R\R-34~1.3PA\bin\x64\R.exe" -q -e "1' is not recognized as an
inter
nal or external command,
operable program or batch file.

C:\Users\rhub>"c:\Program Files\R\R-devel\bin\R" -q -e "1+1"
> 1+1
[1] 2
>
>

______________________________________________
R-devel at r-project.org mailing list
https://stat.ethz.ch/mailman/listinfo/r-devel

	[[alternative HTML version deleted]]


From csardi.gabor at gmail.com  Tue Dec  5 17:47:31 2017
From: csardi.gabor at gmail.com (=?UTF-8?B?R8OhYm9yIENzw6FyZGk=?=)
Date: Tue, 5 Dec 2017 16:47:31 +0000
Subject: [Rd] command line arguments are parsed differently on windows,
 from 3.4.3
In-Reply-To: <CAFDcVCSpM4yzDg-87wm3Mqg2E2gp0P-bGDApen6rSE9oEKStLA@mail.gmail.com>
References: <CABtg=Kkq1-63y18oRKGbgkvd3GMajVfZP8-8npTLmxytgcOzZg@mail.gmail.com>
 <CAFDcVCSu3njV1A2gPVyN66mJ4KNf3hukXQ00=McT=is_Yv6cMg@mail.gmail.com>
 <CAFDcVCSO03gj8mgy1cGGjUVHcMmYZQ+RUXbHWFSoyX+mUm1ztQ@mail.gmail.com>
 <CAFDcVCSpM4yzDg-87wm3Mqg2E2gp0P-bGDApen6rSE9oEKStLA@mail.gmail.com>
Message-ID: <CABtg=KnHNoDOPTjEqO9iWxoFtnrJAnGN6SigBi4s9A14npfShw@mail.gmail.com>

On Tue, Dec 5, 2017 at 4:40 PM, Henrik Bengtsson
<henrik.bengtsson at gmail.com> wrote:
> One comment:
> For your R devel example you didn't use spaces in the expression, i.e. maybe
> that's broken too with spaces?

I did. There are two R-devel examples, one with spaces (buggy) and one
without spaces (works).
To show that spaces are the problem.

> Three questions:
> Does it work if you avoid spaces?

It seems so.

> Does it work if you use single quotes?

It does not, single quotes are not special characters for windows, so
you'll get a different error. In
R -q -e '1 + 1'
there are three arguments after the -e: '1 and + and 1'

> Does this also occur for Rscript?

It seems so indeed.

Gabor

> Thxs
>
> Henrik
>
>
> On Dec 5, 2017 03:44, "G?bor Cs?rdi" <csardi.gabor at gmail.com> wrote:
>
> I wonder if this is intended.
>
> Thanks,
> Gabor
>
>
> C:\Users\rhub>"c:\Program Files\R\R-3.4.2\bin\R" -q -e "1 + 1"
>> 1 + 1
> [1] 2
>>
>>
>
> C:\Users\rhub>"c:\Program Files\R\R-3.4.3\bin\R" -q -e "1 + 1"
> 'c:\PROGRA~1\R\R-34~1.3\bin\x64\R.exe" -q -e "1' is not recognized as an
> interna
> l or external command,
> operable program or batch file.
>
> C:\Users\rhub>"c:\Program Files\R\R-devel\bin\R" -q -e "1 + 1"
> 'c:\PROGRA~1\R\R-devel\bin\x64\R.exe" -q -e "1' is not recognized as an
> internal
>  or external command,
> operable program or batch file.
>
> C:\Users\rhub>"c:\Program Files\R\R-3.4.3patched\bin\R" -q -e "1 + 1"
> 'c:\PROGRA~1\R\R-34~1.3PA\bin\x64\R.exe" -q -e "1' is not recognized as an
> inter
> nal or external command,
> operable program or batch file.
>
> C:\Users\rhub>"c:\Program Files\R\R-devel\bin\R" -q -e "1+1"
>> 1+1
> [1] 2
>>
>>
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>
>


From henrik.bengtsson at gmail.com  Tue Dec  5 17:51:07 2017
From: henrik.bengtsson at gmail.com (Henrik Bengtsson)
Date: Tue, 5 Dec 2017 08:51:07 -0800
Subject: [Rd] command line arguments are parsed differently on windows,
 from 3.4.3
In-Reply-To: <CABtg=KnHNoDOPTjEqO9iWxoFtnrJAnGN6SigBi4s9A14npfShw@mail.gmail.com>
References: <CABtg=Kkq1-63y18oRKGbgkvd3GMajVfZP8-8npTLmxytgcOzZg@mail.gmail.com>
 <CAFDcVCSu3njV1A2gPVyN66mJ4KNf3hukXQ00=McT=is_Yv6cMg@mail.gmail.com>
 <CAFDcVCSO03gj8mgy1cGGjUVHcMmYZQ+RUXbHWFSoyX+mUm1ztQ@mail.gmail.com>
 <CAFDcVCSpM4yzDg-87wm3Mqg2E2gp0P-bGDApen6rSE9oEKStLA@mail.gmail.com>
 <CABtg=KnHNoDOPTjEqO9iWxoFtnrJAnGN6SigBi4s9A14npfShw@mail.gmail.com>
Message-ID: <CAFDcVCSYoad_NPGh+FmxtCWWCQYSO+76kYCBwZF16MSmyP_5MA@mail.gmail.com>

Sorry for not reading carefully and thanks for confirming problem with
Rscript too.

On Dec 5, 2017 08:47, "G?bor Cs?rdi" <csardi.gabor at gmail.com> wrote:

> On Tue, Dec 5, 2017 at 4:40 PM, Henrik Bengtsson
> <henrik.bengtsson at gmail.com> wrote:
> > One comment:
> > For your R devel example you didn't use spaces in the expression, i.e.
> maybe
> > that's broken too with spaces?
>
> I did. There are two R-devel examples, one with spaces (buggy) and one
> without spaces (works).
> To show that spaces are the problem.
>
> > Three questions:
> > Does it work if you avoid spaces?
>
> It seems so.
>
> > Does it work if you use single quotes?
>
> It does not, single quotes are not special characters for windows, so
> you'll get a different error. In
> R -q -e '1 + 1'
> there are three arguments after the -e: '1 and + and 1'
>
> > Does this also occur for Rscript?
>
> It seems so indeed.
>
> Gabor
>
> > Thxs
> >
> > Henrik
> >
> >
> > On Dec 5, 2017 03:44, "G?bor Cs?rdi" <csardi.gabor at gmail.com> wrote:
> >
> > I wonder if this is intended.
> >
> > Thanks,
> > Gabor
> >
> >
> > C:\Users\rhub>"c:\Program Files\R\R-3.4.2\bin\R" -q -e "1 + 1"
> >> 1 + 1
> > [1] 2
> >>
> >>
> >
> > C:\Users\rhub>"c:\Program Files\R\R-3.4.3\bin\R" -q -e "1 + 1"
> > 'c:\PROGRA~1\R\R-34~1.3\bin\x64\R.exe" -q -e "1' is not recognized as an
> > interna
> > l or external command,
> > operable program or batch file.
> >
> > C:\Users\rhub>"c:\Program Files\R\R-devel\bin\R" -q -e "1 + 1"
> > 'c:\PROGRA~1\R\R-devel\bin\x64\R.exe" -q -e "1' is not recognized as an
> > internal
> >  or external command,
> > operable program or batch file.
> >
> > C:\Users\rhub>"c:\Program Files\R\R-3.4.3patched\bin\R" -q -e "1 + 1"
> > 'c:\PROGRA~1\R\R-34~1.3PA\bin\x64\R.exe" -q -e "1' is not recognized as
> an
> > inter
> > nal or external command,
> > operable program or batch file.
> >
> > C:\Users\rhub>"c:\Program Files\R\R-devel\bin\R" -q -e "1+1"
> >> 1+1
> > [1] 2
> >>
> >>
> >
> > ______________________________________________
> > R-devel at r-project.org mailing list
> > https://stat.ethz.ch/mailman/listinfo/r-devel
> >
> >
>

	[[alternative HTML version deleted]]


From tomas.kalibera at gmail.com  Tue Dec  5 17:58:33 2017
From: tomas.kalibera at gmail.com (Tomas Kalibera)
Date: Tue, 5 Dec 2017 17:58:33 +0100
Subject: [Rd] command line arguments are parsed differently on windows,
 from 3.4.3
In-Reply-To: <CAFDcVCSYoad_NPGh+FmxtCWWCQYSO+76kYCBwZF16MSmyP_5MA@mail.gmail.com>
References: <CABtg=Kkq1-63y18oRKGbgkvd3GMajVfZP8-8npTLmxytgcOzZg@mail.gmail.com>
 <CAFDcVCSu3njV1A2gPVyN66mJ4KNf3hukXQ00=McT=is_Yv6cMg@mail.gmail.com>
 <CAFDcVCSO03gj8mgy1cGGjUVHcMmYZQ+RUXbHWFSoyX+mUm1ztQ@mail.gmail.com>
 <CAFDcVCSpM4yzDg-87wm3Mqg2E2gp0P-bGDApen6rSE9oEKStLA@mail.gmail.com>
 <CABtg=KnHNoDOPTjEqO9iWxoFtnrJAnGN6SigBi4s9A14npfShw@mail.gmail.com>
 <CAFDcVCSYoad_NPGh+FmxtCWWCQYSO+76kYCBwZF16MSmyP_5MA@mail.gmail.com>
Message-ID: <35992416-48e5-97ad-52d8-8532577e1621@gmail.com>

A quick workaround if you needed to execute R expressions in Windows is 
calling RTerm directly.
But a fix should be available soon.

Tomas

On 12/05/2017 05:51 PM, Henrik Bengtsson wrote:
> Sorry for not reading carefully and thanks for confirming problem with
> Rscript too.
>
> On Dec 5, 2017 08:47, "G?bor Cs?rdi" <csardi.gabor at gmail.com> wrote:
>
>> On Tue, Dec 5, 2017 at 4:40 PM, Henrik Bengtsson
>> <henrik.bengtsson at gmail.com> wrote:
>>> One comment:
>>> For your R devel example you didn't use spaces in the expression, i.e.
>> maybe
>>> that's broken too with spaces?
>> I did. There are two R-devel examples, one with spaces (buggy) and one
>> without spaces (works).
>> To show that spaces are the problem.
>>
>>> Three questions:
>>> Does it work if you avoid spaces?
>> It seems so.
>>
>>> Does it work if you use single quotes?
>> It does not, single quotes are not special characters for windows, so
>> you'll get a different error. In
>> R -q -e '1 + 1'
>> there are three arguments after the -e: '1 and + and 1'
>>
>>> Does this also occur for Rscript?
>> It seems so indeed.
>>
>> Gabor
>>
>>> Thxs
>>>
>>> Henrik
>>>
>>>
>>> On Dec 5, 2017 03:44, "G?bor Cs?rdi" <csardi.gabor at gmail.com> wrote:
>>>
>>> I wonder if this is intended.
>>>
>>> Thanks,
>>> Gabor
>>>
>>>
>>> C:\Users\rhub>"c:\Program Files\R\R-3.4.2\bin\R" -q -e "1 + 1"
>>>> 1 + 1
>>> [1] 2
>>>>
>>> C:\Users\rhub>"c:\Program Files\R\R-3.4.3\bin\R" -q -e "1 + 1"
>>> 'c:\PROGRA~1\R\R-34~1.3\bin\x64\R.exe" -q -e "1' is not recognized as an
>>> interna
>>> l or external command,
>>> operable program or batch file.
>>>
>>> C:\Users\rhub>"c:\Program Files\R\R-devel\bin\R" -q -e "1 + 1"
>>> 'c:\PROGRA~1\R\R-devel\bin\x64\R.exe" -q -e "1' is not recognized as an
>>> internal
>>>   or external command,
>>> operable program or batch file.
>>>
>>> C:\Users\rhub>"c:\Program Files\R\R-3.4.3patched\bin\R" -q -e "1 + 1"
>>> 'c:\PROGRA~1\R\R-34~1.3PA\bin\x64\R.exe" -q -e "1' is not recognized as
>> an
>>> inter
>>> nal or external command,
>>> operable program or batch file.
>>>
>>> C:\Users\rhub>"c:\Program Files\R\R-devel\bin\R" -q -e "1+1"
>>>> 1+1
>>> [1] 2
>>>>
>>> ______________________________________________
>>> R-devel at r-project.org mailing list
>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>>
>>>
> 	[[alternative HTML version deleted]]
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From Pearce.Robert at epa.gov  Tue Dec  5 22:31:09 2017
From: Pearce.Robert at epa.gov (Pearce, Robert)
Date: Tue, 5 Dec 2017 21:31:09 +0000
Subject: [Rd] FW: R-devel error
Message-ID: <BY2PR09MB0293D6F3EDCE2DF3EFC57403EC3D0@BY2PR09MB0293.namprd09.prod.outlook.com>

I am resubmitting this bug report but with additional information. I am running this with windows 10:  w64-mingw32 with R Under development (unstable) (2017-12-04 r73829). I build 'httk' from the command prompt using 'R CMD build httk' after installing the required packages. Then when the vignettes are being created, it crashes. Today I installed the latest versions of Rtools, MikTex and R-devel and still got the same error. We have also replicated this on another machine. I am able to successfully build the package in this way with R 3.4.3.

Robert

From: Pearce, Robert
Sent: Monday, November 20, 2017 11:32 AM
To: 'r-devel at r-project.org' <r-devel at r-project.org>
Subject: R-devel error

Hello,

During the last week I've been getting an error with r-devel when building the source package for 'httk'. Everything works fine until: 'creating vignettes...' . Then I get a pop-up stating: 'R for Windows front-end has stopped working... close the program'. I have installed the latest version of R, and this error does not occur.

Robert Pearce

	[[alternative HTML version deleted]]


From maechler at stat.math.ethz.ch  Wed Dec  6 11:29:39 2017
From: maechler at stat.math.ethz.ch (Martin Maechler)
Date: Wed, 6 Dec 2017 11:29:39 +0100
Subject: [Rd] FW: R-devel error
In-Reply-To: <BY2PR09MB0293D6F3EDCE2DF3EFC57403EC3D0@BY2PR09MB0293.namprd09.prod.outlook.com>
References: <BY2PR09MB0293D6F3EDCE2DF3EFC57403EC3D0@BY2PR09MB0293.namprd09.prod.outlook.com>
Message-ID: <23079.50835.483974.112384@stat.math.ethz.ch>

>>>>> Pearce, Robert <Pearce.Robert at epa.gov>
>>>>>     on Tue, 5 Dec 2017 21:31:09 +0000 writes:

    > I am resubmitting this bug report but with additional information. I am running this with windows 10:  w64-mingw32 with R Under development (unstable) (2017-12-04 r73829). 

There is no such message (as you cite below) in the R-devel archives:
      https://stat.ethz.ch/pipermail/r-devel/2017-November/thread.html

Hence it was never posted for some reason
(You may have *sent* it, but it never arrived "safely")


    > I build 'httk' from the command prompt using 'R CMD build httk' after installing the required packages. Then when the vignettes are being created, it crashes. Today I installed the latest versions of Rtools, MikTex and R-devel and still got the same error. We have also replicated this on another machine. I am able to successfully build the package in this way with R 3.4.3.

> Robert

To make this reproducible, indeed, I also get 
problem, possibly the same as you on my Linux machine (Fedora 26):

1. Get  httk_1.7.tar.gz from https://cran.r-project.org/package=httk

2. unpack (for me:)
	tar xf httk_1.7.tar.gz
3.
	R-devel CMD build httk   

I get the following.
Notably after having waited several minutes at the prompt
(line  of output):

 '* creating vignettes ' 

  ------------------------------------------------------------------------
  [nfslocal at lynne tmp]$ R-devel CMD build httk
  * checking for file ?httk/DESCRIPTION? ... OK
  * preparing ?httk?:
  * checking DESCRIPTION meta-information ... OK
  * cleaning src
  * installing the package to process help pages
  * saving partial Rd database
  * creating vignettes ...sh: line 1: 16259 Segmentation fault      (core dumped) '/u/maechler/R/D/r-devel/inst/bin/Rscript' --vanilla --default-packages= -e "tools::buildVignettes(dir = '.', tangle = TRUE)" > '/tmp/RtmpV1grVw/xshell3e793c7d5258' 2>&1
   ERROR

   *** caught segfault ***
  address 0x1, cause 'memory not mapped'

  Traceback:
   1: .Call(C_stri_locate_all_regex, str, pattern, omit_no_match, opts_regex)
   2: stri_locate_all_regex(string, pattern, omit_no_match = TRUE,     opts_regex = opts)
   3: stringr::str_locate_all(input, inline.code)
   4: parse_inline(g, patterns)
   5: FUN(X[[i]], ...)
   6: lapply(groups, function(g) {    block = grepl(chunk.begin, g[1])    if (!set.preamble && !parent_mode()) {        return(if (block) "" else g)    }    if (block) {        n = length(g)        if (n >= 2 && grepl(chunk.end, g[n]))             g = g[-n]        g = strip_block(g, patterns$chunk.code)        params.src = if (group_pattern(chunk.begin)) {            stringr::str_trim(gsub(chunk.begin, "\\1", g[1]))        }        else ""        parse_block(g[-1], g[1], params.src)    }    else parse_inline(g, patterns)})
   7: split_file(lines = text)
   8: process_file(text, output)
   9: knitr::knit(knit_input, knit_output, envir = envir, quiet = quiet,     encoding = encoding)
  10: rmarkdown::render(file, encoding = encoding, quiet = quiet, envir = globalenv())
  11: vweave_rmarkdown(...)
  12: engine$weave(file, quiet = quiet, encoding = enc)
  13: doTryCatch(return(expr), name, parentenv, handler)
  14: tryCatchOne(expr, names, parentenv, handlers[[1L]])
  15: tryCatchList(expr, classes, parentenv, handlers)
  16: tryCatch({    engine$weave(file, quiet = quiet, encoding = enc)    setwd(startdir)    find_vignette_product(name, by = "weave", engine = engine)}, error = function(e) {    stop(gettextf("processing vignette '%s' failed with diagnostics:\n%s",         file, conditionMessage(e)), domain = NA, call. = FALSE)})
  17: tools::buildVignettes(dir = ".", tangle = TRUE)
  An irrecoverable exception occurred. R is aborting now ...
  [nfslocal at lynne tmp]$ 
  ------------------------------------------------------------------------


I've seen this (segfault, triggered from stringr stuff) before,
occasionally and always thought it was a consequence of a messup
(different R versions and package installations in libraries I
use on the same computer....),  but now I have convinced myself
that this is not the case: I can easily reproduce the above using

       tools::buildVignettes(dir = "<mypath_to>/httk")

==> So I'd suggest there's a pretty low-level bug somewhere.

- Either in 'stringr' or 'stringi' in their C code using
  things they should not (because not in R's API),
  which now shows in R-devel where many "inner workings" have been
  modified (key "ALTREP")

- or in R-devel .. in these new "inner workings".


I don't have time to dig further at the moment.

Thank you, Robert, for your report!

Martin Maechler,
ETH Zurich


    > From: Pearce, Robert
    > Sent: Monday, November 20, 2017 11:32 AM
    > To: 'r-devel at r-project.org' <r-devel at r-project.org>
    > Subject: R-devel error


    > Hello,

    > During the last week I've been getting an error with r-devel when building the source package for 'httk'. Everything works fine until: 'creating vignettes...' . Then I get a pop-up stating: 'R for Windows front-end has stopped working... close the program'. I have installed the latest version of R, and this error does not occur.

    > Robert Pearce


From goran.brostrom at umu.se  Wed Dec  6 17:14:23 2017
From: goran.brostrom at umu.se (=?UTF-8?Q?G=c3=b6ran_Brostr=c3=b6m?=)
Date: Wed, 6 Dec 2017 17:14:23 +0100
Subject: [Rd] FW: R-devel error
In-Reply-To: <23079.50835.483974.112384@stat.math.ethz.ch>
References: <BY2PR09MB0293D6F3EDCE2DF3EFC57403EC3D0@BY2PR09MB0293.namprd09.prod.outlook.com>
 <23079.50835.483974.112384@stat.math.ethz.ch>
Message-ID: <e6fd7a97-fe04-80fa-f667-261e721b66c1@umu.se>

Interesting, yesterday I had exactly this problem, but today I solved it 
(see the R-pkg-devel list) by _installing_ R-devel and

 > update.packages(checkBuilt = TRUE)

I also tried it on Martin's Fedora 26 example below. Worked fine (had to 
install some packages...)

On ubuntu 16.04.

G?ran Brostr?m

On 2017-12-06 11:29, Martin Maechler wrote:
>>>>>> Pearce, Robert <Pearce.Robert at epa.gov>
>>>>>>      on Tue, 5 Dec 2017 21:31:09 +0000 writes:
> 
>      > I am resubmitting this bug report but with additional information. I am running this with windows 10:  w64-mingw32 with R Under development (unstable) (2017-12-04 r73829).
> 
> There is no such message (as you cite below) in the R-devel archives:
>        https://stat.ethz.ch/pipermail/r-devel/2017-November/thread.html
> 
> Hence it was never posted for some reason
> (You may have *sent* it, but it never arrived "safely")
> 
> 
>      > I build 'httk' from the command prompt using 'R CMD build httk' after installing the required packages. Then when the vignettes are being created, it crashes. Today I installed the latest versions of Rtools, MikTex and R-devel and still got the same error. We have also replicated this on another machine. I am able to successfully build the package in this way with R 3.4.3.
> 
>> Robert
> 
> To make this reproducible, indeed, I also get
> problem, possibly the same as you on my Linux machine (Fedora 26):
> 
> 1. Get  httk_1.7.tar.gz from https://cran.r-project.org/package=httk
> 
> 2. unpack (for me:)
> 	tar xf httk_1.7.tar.gz
> 3.
> 	R-devel CMD build httk
> 
> I get the following.
> Notably after having waited several minutes at the prompt
> (line  of output):
> 
>   '* creating vignettes '
> 
>    ------------------------------------------------------------------------
>    [nfslocal at lynne tmp]$ R-devel CMD build httk
>    * checking for file ?httk/DESCRIPTION? ... OK
>    * preparing ?httk?:
>    * checking DESCRIPTION meta-information ... OK
>    * cleaning src
>    * installing the package to process help pages
>    * saving partial Rd database
>    * creating vignettes ...sh: line 1: 16259 Segmentation fault      (core dumped) '/u/maechler/R/D/r-devel/inst/bin/Rscript' --vanilla --default-packages= -e "tools::buildVignettes(dir = '.', tangle = TRUE)" > '/tmp/RtmpV1grVw/xshell3e793c7d5258' 2>&1
>     ERROR
> 
>     *** caught segfault ***
>    address 0x1, cause 'memory not mapped'
> 
>    Traceback:
>     1: .Call(C_stri_locate_all_regex, str, pattern, omit_no_match, opts_regex)
>     2: stri_locate_all_regex(string, pattern, omit_no_match = TRUE,     opts_regex = opts)
>     3: stringr::str_locate_all(input, inline.code)
>     4: parse_inline(g, patterns)
>     5: FUN(X[[i]], ...)
>     6: lapply(groups, function(g) {    block = grepl(chunk.begin, g[1])    if (!set.preamble && !parent_mode()) {        return(if (block) "" else g)    }    if (block) {        n = length(g)        if (n >= 2 && grepl(chunk.end, g[n]))             g = g[-n]        g = strip_block(g, patterns$chunk.code)        params.src = if (group_pattern(chunk.begin)) {            stringr::str_trim(gsub(chunk.begin, "\\1", g[1]))        }        else ""        parse_block(g[-1], g[1], params.src)    }    else parse_inline(g, patterns)})
>     7: split_file(lines = text)
>     8: process_file(text, output)
>     9: knitr::knit(knit_input, knit_output, envir = envir, quiet = quiet,     encoding = encoding)
>    10: rmarkdown::render(file, encoding = encoding, quiet = quiet, envir = globalenv())
>    11: vweave_rmarkdown(...)
>    12: engine$weave(file, quiet = quiet, encoding = enc)
>    13: doTryCatch(return(expr), name, parentenv, handler)
>    14: tryCatchOne(expr, names, parentenv, handlers[[1L]])
>    15: tryCatchList(expr, classes, parentenv, handlers)
>    16: tryCatch({    engine$weave(file, quiet = quiet, encoding = enc)    setwd(startdir)    find_vignette_product(name, by = "weave", engine = engine)}, error = function(e) {    stop(gettextf("processing vignette '%s' failed with diagnostics:\n%s",         file, conditionMessage(e)), domain = NA, call. = FALSE)})
>    17: tools::buildVignettes(dir = ".", tangle = TRUE)
>    An irrecoverable exception occurred. R is aborting now ...
>    [nfslocal at lynne tmp]$
>    ------------------------------------------------------------------------
> 
> 
> I've seen this (segfault, triggered from stringr stuff) before,
> occasionally and always thought it was a consequence of a messup
> (different R versions and package installations in libraries I
> use on the same computer....),  but now I have convinced myself
> that this is not the case: I can easily reproduce the above using
> 
>         tools::buildVignettes(dir = "<mypath_to>/httk")
> 
> ==> So I'd suggest there's a pretty low-level bug somewhere.
> 
> - Either in 'stringr' or 'stringi' in their C code using
>    things they should not (because not in R's API),
>    which now shows in R-devel where many "inner workings" have been
>    modified (key "ALTREP")
> 
> - or in R-devel .. in these new "inner workings".
> 
> 
> I don't have time to dig further at the moment.
> 
> Thank you, Robert, for your report!
> 
> Martin Maechler,
> ETH Zurich
> 
> 
>      > From: Pearce, Robert
>      > Sent: Monday, November 20, 2017 11:32 AM
>      > To: 'r-devel at r-project.org' <r-devel at r-project.org>
>      > Subject: R-devel error
> 
> 
>      > Hello,
> 
>      > During the last week I've been getting an error with r-devel when building the source package for 'httk'. Everything works fine until: 'creating vignettes...' . Then I get a pop-up stating: 'R for Windows front-end has stopped working... close the program'. I have installed the latest version of R, and this error does not occur.
> 
>      > Robert Pearce
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>


From gmbecker at ucdavis.edu  Wed Dec  6 18:06:27 2017
From: gmbecker at ucdavis.edu (Gabriel Becker)
Date: Wed, 6 Dec 2017 09:06:27 -0800
Subject: [Rd] FW: R-devel error
In-Reply-To: <e6fd7a97-fe04-80fa-f667-261e721b66c1@umu.se>
References: <BY2PR09MB0293D6F3EDCE2DF3EFC57403EC3D0@BY2PR09MB0293.namprd09.prod.outlook.com>
 <23079.50835.483974.112384@stat.math.ethz.ch>
 <e6fd7a97-fe04-80fa-f667-261e721b66c1@umu.se>
Message-ID: <CADwqtCM=B_9W-Z7LXEUbKM_UJ70KPjLZ9VCoWoYJJBa2civaHQ@mail.gmail.com>

Robert,

To expand a bit on Goran's point, is it possible that you have an old
library with packages installed that your R-devel is hitting. The R headers
changes relatively recently, so any packages with compiled code that were
built long enough ago (I don't have the exact date off the top of my head)
need to be rebuilt before they can be safely used.

If this is happening in a state where both the package in question AND all
it's dependencies are freshly built under the exact version of R-devel
you're trying to check httk with, then the above isn't the problem and
something else must be going on.

Best,
~G

On Wed, Dec 6, 2017 at 8:14 AM, G?ran Brostr?m <goran.brostrom at umu.se>
wrote:

> Interesting, yesterday I had exactly this problem, but today I solved it
> (see the R-pkg-devel list) by _installing_ R-devel and
>
> > update.packages(checkBuilt = TRUE)
>
> I also tried it on Martin's Fedora 26 example below. Worked fine (had to
> install some packages...)
>
> On ubuntu 16.04.
>
> G?ran Brostr?m
>
>
> On 2017-12-06 11:29, Martin Maechler wrote:
>
>> Pearce, Robert <Pearce.Robert at epa.gov>
>>>>>>>      on Tue, 5 Dec 2017 21:31:09 +0000 writes:
>>>>>>>
>>>>>>
>>      > I am resubmitting this bug report but with additional information.
>> I am running this with windows 10:  w64-mingw32 with R Under development
>> (unstable) (2017-12-04 r73829).
>>
>> There is no such message (as you cite below) in the R-devel archives:
>>        https://stat.ethz.ch/pipermail/r-devel/2017-November/thread.html
>>
>> Hence it was never posted for some reason
>> (You may have *sent* it, but it never arrived "safely")
>>
>>
>>      > I build 'httk' from the command prompt using 'R CMD build httk'
>> after installing the required packages. Then when the vignettes are being
>> created, it crashes. Today I installed the latest versions of Rtools,
>> MikTex and R-devel and still got the same error. We have also replicated
>> this on another machine. I am able to successfully build the package in
>> this way with R 3.4.3.
>>
>> Robert
>>>
>>
>> To make this reproducible, indeed, I also get
>> problem, possibly the same as you on my Linux machine (Fedora 26):
>>
>> 1. Get  httk_1.7.tar.gz from https://cran.r-project.org/package=httk
>>
>> 2. unpack (for me:)
>>         tar xf httk_1.7.tar.gz
>> 3.
>>         R-devel CMD build httk
>>
>> I get the following.
>> Notably after having waited several minutes at the prompt
>> (line  of output):
>>
>>   '* creating vignettes '
>>
>>    -----------------------------------------------------------
>> -------------
>>    [nfslocal at lynne tmp]$ R-devel CMD build httk
>>    * checking for file ?httk/DESCRIPTION? ... OK
>>    * preparing ?httk?:
>>    * checking DESCRIPTION meta-information ... OK
>>    * cleaning src
>>    * installing the package to process help pages
>>    * saving partial Rd database
>>    * creating vignettes ...sh: line 1: 16259 Segmentation fault
>> (core dumped) '/u/maechler/R/D/r-devel/inst/bin/Rscript' --vanilla
>> --default-packages= -e "tools::buildVignettes(dir = '.', tangle = TRUE)" >
>> '/tmp/RtmpV1grVw/xshell3e793c7d5258' 2>&1
>>     ERROR
>>
>>     *** caught segfault ***
>>    address 0x1, cause 'memory not mapped'
>>
>>    Traceback:
>>     1: .Call(C_stri_locate_all_regex, str, pattern, omit_no_match,
>> opts_regex)
>>     2: stri_locate_all_regex(string, pattern, omit_no_match = TRUE,
>>  opts_regex = opts)
>>     3: stringr::str_locate_all(input, inline.code)
>>     4: parse_inline(g, patterns)
>>     5: FUN(X[[i]], ...)
>>     6: lapply(groups, function(g) {    block = grepl(chunk.begin, g[1])
>>   if (!set.preamble && !parent_mode()) {        return(if (block) "" else
>> g)    }    if (block) {        n = length(g)        if (n >= 2 &&
>> grepl(chunk.end, g[n]))             g = g[-n]        g = strip_block(g,
>> patterns$chunk.code)        params.src = if (group_pattern(chunk.begin)) {
>>           stringr::str_trim(gsub(chunk.begin, "\\1", g[1]))        }
>>     else ""        parse_block(g[-1], g[1], params.src)    }    else
>> parse_inline(g, patterns)})
>>     7: split_file(lines = text)
>>     8: process_file(text, output)
>>     9: knitr::knit(knit_input, knit_output, envir = envir, quiet =
>> quiet,     encoding = encoding)
>>    10: rmarkdown::render(file, encoding = encoding, quiet = quiet, envir
>> = globalenv())
>>    11: vweave_rmarkdown(...)
>>    12: engine$weave(file, quiet = quiet, encoding = enc)
>>    13: doTryCatch(return(expr), name, parentenv, handler)
>>    14: tryCatchOne(expr, names, parentenv, handlers[[1L]])
>>    15: tryCatchList(expr, classes, parentenv, handlers)
>>    16: tryCatch({    engine$weave(file, quiet = quiet, encoding = enc)
>> setwd(startdir)    find_vignette_product(name, by = "weave", engine =
>> engine)}, error = function(e) {    stop(gettextf("processing vignette '%s'
>> failed with diagnostics:\n%s",         file, conditionMessage(e)), domain =
>> NA, call. = FALSE)})
>>    17: tools::buildVignettes(dir = ".", tangle = TRUE)
>>    An irrecoverable exception occurred. R is aborting now ...
>>    [nfslocal at lynne tmp]$
>>    -----------------------------------------------------------
>> -------------
>>
>>
>> I've seen this (segfault, triggered from stringr stuff) before,
>> occasionally and always thought it was a consequence of a messup
>> (different R versions and package installations in libraries I
>> use on the same computer....),  but now I have convinced myself
>> that this is not the case: I can easily reproduce the above using
>>
>>         tools::buildVignettes(dir = "<mypath_to>/httk")
>>
>> ==> So I'd suggest there's a pretty low-level bug somewhere.
>>
>> - Either in 'stringr' or 'stringi' in their C code using
>>    things they should not (because not in R's API),
>>    which now shows in R-devel where many "inner workings" have been
>>    modified (key "ALTREP")
>>
>> - or in R-devel .. in these new "inner workings".
>>
>>
>> I don't have time to dig further at the moment.
>>
>> Thank you, Robert, for your report!
>>
>> Martin Maechler,
>> ETH Zurich
>>
>>
>>      > From: Pearce, Robert
>>      > Sent: Monday, November 20, 2017 11:32 AM
>>      > To: 'r-devel at r-project.org' <r-devel at r-project.org>
>>      > Subject: R-devel error
>>
>>
>>      > Hello,
>>
>>      > During the last week I've been getting an error with r-devel when
>> building the source package for 'httk'. Everything works fine until:
>> 'creating vignettes...' . Then I get a pop-up stating: 'R for Windows
>> front-end has stopped working... close the program'. I have installed the
>> latest version of R, and this error does not occur.
>>
>>      > Robert Pearce
>>
>> ______________________________________________
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>
>>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>



-- 
Gabriel Becker, PhD
Scientist (Bioinformatics)
Genentech Research

	[[alternative HTML version deleted]]


From luke-tierney at uiowa.edu  Wed Dec  6 18:28:00 2017
From: luke-tierney at uiowa.edu (luke-tierney at uiowa.edu)
Date: Wed, 6 Dec 2017 11:28:00 -0600 (CST)
Subject: [Rd] FW: R-devel error
In-Reply-To: <CADwqtCM=B_9W-Z7LXEUbKM_UJ70KPjLZ9VCoWoYJJBa2civaHQ@mail.gmail.com>
References: <BY2PR09MB0293D6F3EDCE2DF3EFC57403EC3D0@BY2PR09MB0293.namprd09.prod.outlook.com>
 <23079.50835.483974.112384@stat.math.ethz.ch>
 <e6fd7a97-fe04-80fa-f667-261e721b66c1@umu.se>
 <CADwqtCM=B_9W-Z7LXEUbKM_UJ70KPjLZ9VCoWoYJJBa2civaHQ@mail.gmail.com>
Message-ID: <alpine.DEB.2.20.1712061124450.2953@luke-Latitude>

library() in R-devel checks that packages are built for the current
ABI and signals an error if they are not. A segfault is likely a
pre-existing bug unmasked by the changed memory layout. Several of
these have been resolved by recent package updates. I also cannot
reproduce the problem on current R-devel with fairly current packages
from CRAN.

Best,

luke

On Wed, 6 Dec 2017, Gabriel Becker wrote:

> Robert,
>
> To expand a bit on Goran's point, is it possible that you have an old
> library with packages installed that your R-devel is hitting. The R headers
> changes relatively recently, so any packages with compiled code that were
> built long enough ago (I don't have the exact date off the top of my head)
> need to be rebuilt before they can be safely used.
>
> If this is happening in a state where both the package in question AND all
> it's dependencies are freshly built under the exact version of R-devel
> you're trying to check httk with, then the above isn't the problem and
> something else must be going on.
>
> Best,
> ~G
>
> On Wed, Dec 6, 2017 at 8:14 AM, G?ran Brostr?m <goran.brostrom at umu.se>
> wrote:
>
>> Interesting, yesterday I had exactly this problem, but today I solved it
>> (see the R-pkg-devel list) by _installing_ R-devel and
>>
>> > update.packages(checkBuilt = TRUE)
>>
>> I also tried it on Martin's Fedora 26 example below. Worked fine (had to
>> install some packages...)
>>
>> On ubuntu 16.04.
>>
>> G?ran Brostr?m
>>
>>
>> On 2017-12-06 11:29, Martin Maechler wrote:
>>
>>> Pearce, Robert <Pearce.Robert at epa.gov>
>>>>>>>>      on Tue, 5 Dec 2017 21:31:09 +0000 writes:
>>>>>>>>
>>>>>>>
>>>      > I am resubmitting this bug report but with additional information.
>>> I am running this with windows 10:  w64-mingw32 with R Under development
>>> (unstable) (2017-12-04 r73829).
>>>
>>> There is no such message (as you cite below) in the R-devel archives:
>>>        https://stat.ethz.ch/pipermail/r-devel/2017-November/thread.html
>>>
>>> Hence it was never posted for some reason
>>> (You may have *sent* it, but it never arrived "safely")
>>>
>>>
>>>      > I build 'httk' from the command prompt using 'R CMD build httk'
>>> after installing the required packages. Then when the vignettes are being
>>> created, it crashes. Today I installed the latest versions of Rtools,
>>> MikTex and R-devel and still got the same error. We have also replicated
>>> this on another machine. I am able to successfully build the package in
>>> this way with R 3.4.3.
>>>
>>> Robert
>>>>
>>>
>>> To make this reproducible, indeed, I also get
>>> problem, possibly the same as you on my Linux machine (Fedora 26):
>>>
>>> 1. Get  httk_1.7.tar.gz from https://cran.r-project.org/package=httk
>>>
>>> 2. unpack (for me:)
>>>         tar xf httk_1.7.tar.gz
>>> 3.
>>>         R-devel CMD build httk
>>>
>>> I get the following.
>>> Notably after having waited several minutes at the prompt
>>> (line  of output):
>>>
>>>   '* creating vignettes '
>>>
>>>    -----------------------------------------------------------
>>> -------------
>>>    [nfslocal at lynne tmp]$ R-devel CMD build httk
>>>    * checking for file ?httk/DESCRIPTION? ... OK
>>>    * preparing ?httk?:
>>>    * checking DESCRIPTION meta-information ... OK
>>>    * cleaning src
>>>    * installing the package to process help pages
>>>    * saving partial Rd database
>>>    * creating vignettes ...sh: line 1: 16259 Segmentation fault
>>> (core dumped) '/u/maechler/R/D/r-devel/inst/bin/Rscript' --vanilla
>>> --default-packages= -e "tools::buildVignettes(dir = '.', tangle = TRUE)" >
>>> '/tmp/RtmpV1grVw/xshell3e793c7d5258' 2>&1
>>>     ERROR
>>>
>>>     *** caught segfault ***
>>>    address 0x1, cause 'memory not mapped'
>>>
>>>    Traceback:
>>>     1: .Call(C_stri_locate_all_regex, str, pattern, omit_no_match,
>>> opts_regex)
>>>     2: stri_locate_all_regex(string, pattern, omit_no_match = TRUE,
>>>  opts_regex = opts)
>>>     3: stringr::str_locate_all(input, inline.code)
>>>     4: parse_inline(g, patterns)
>>>     5: FUN(X[[i]], ...)
>>>     6: lapply(groups, function(g) {    block = grepl(chunk.begin, g[1])
>>>   if (!set.preamble && !parent_mode()) {        return(if (block) "" else
>>> g)    }    if (block) {        n = length(g)        if (n >= 2 &&
>>> grepl(chunk.end, g[n]))             g = g[-n]        g = strip_block(g,
>>> patterns$chunk.code)        params.src = if (group_pattern(chunk.begin)) {
>>>           stringr::str_trim(gsub(chunk.begin, "\\1", g[1]))        }
>>>     else ""        parse_block(g[-1], g[1], params.src)    }    else
>>> parse_inline(g, patterns)})
>>>     7: split_file(lines = text)
>>>     8: process_file(text, output)
>>>     9: knitr::knit(knit_input, knit_output, envir = envir, quiet =
>>> quiet,     encoding = encoding)
>>>    10: rmarkdown::render(file, encoding = encoding, quiet = quiet, envir
>>> = globalenv())
>>>    11: vweave_rmarkdown(...)
>>>    12: engine$weave(file, quiet = quiet, encoding = enc)
>>>    13: doTryCatch(return(expr), name, parentenv, handler)
>>>    14: tryCatchOne(expr, names, parentenv, handlers[[1L]])
>>>    15: tryCatchList(expr, classes, parentenv, handlers)
>>>    16: tryCatch({    engine$weave(file, quiet = quiet, encoding = enc)
>>> setwd(startdir)    find_vignette_product(name, by = "weave", engine =
>>> engine)}, error = function(e) {    stop(gettextf("processing vignette '%s'
>>> failed with diagnostics:\n%s",         file, conditionMessage(e)), domain =
>>> NA, call. = FALSE)})
>>>    17: tools::buildVignettes(dir = ".", tangle = TRUE)
>>>    An irrecoverable exception occurred. R is aborting now ...
>>>    [nfslocal at lynne tmp]$
>>>    -----------------------------------------------------------
>>> -------------
>>>
>>>
>>> I've seen this (segfault, triggered from stringr stuff) before,
>>> occasionally and always thought it was a consequence of a messup
>>> (different R versions and package installations in libraries I
>>> use on the same computer....),  but now I have convinced myself
>>> that this is not the case: I can easily reproduce the above using
>>>
>>>         tools::buildVignettes(dir = "<mypath_to>/httk")
>>>
>>> ==> So I'd suggest there's a pretty low-level bug somewhere.
>>>
>>> - Either in 'stringr' or 'stringi' in their C code using
>>>    things they should not (because not in R's API),
>>>    which now shows in R-devel where many "inner workings" have been
>>>    modified (key "ALTREP")
>>>
>>> - or in R-devel .. in these new "inner workings".
>>>
>>>
>>> I don't have time to dig further at the moment.
>>>
>>> Thank you, Robert, for your report!
>>>
>>> Martin Maechler,
>>> ETH Zurich
>>>
>>>
>>>      > From: Pearce, Robert
>>>      > Sent: Monday, November 20, 2017 11:32 AM
>>>      > To: 'r-devel at r-project.org' <r-devel at r-project.org>
>>>      > Subject: R-devel error
>>>
>>>
>>>      > Hello,
>>>
>>>      > During the last week I've been getting an error with r-devel when
>>> building the source package for 'httk'. Everything works fine until:
>>> 'creating vignettes...' . Then I get a pop-up stating: 'R for Windows
>>> front-end has stopped working... close the program'. I have installed the
>>> latest version of R, and this error does not occur.
>>>
>>>      > Robert Pearce
>>>
>>> ______________________________________________
>>> R-devel at r-project.org mailing list
>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>>
>>>
>> ______________________________________________
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>
>
>
>
> -- 
> Gabriel Becker, PhD
> Scientist (Bioinformatics)
> Genentech Research
>
> 	[[alternative HTML version deleted]]
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel

-- 
Luke Tierney
Ralph E. Wareham Professor of Mathematical Sciences
University of Iowa                  Phone:             319-335-3386
Department of Statistics and        Fax:               319-335-3017
    Actuarial Science
241 Schaeffer Hall                  email:   luke-tierney at uiowa.edu
Iowa City, IA 52242                 WWW:  http://www.stat.uiowa.edu

From luke-tierney at uiowa.edu  Wed Dec  6 21:23:42 2017
From: luke-tierney at uiowa.edu (luke-tierney at uiowa.edu)
Date: Wed, 6 Dec 2017 14:23:42 -0600 (CST)
Subject: [Rd] tryCatch in on.exit()
In-Reply-To: <alpine.OSX.2.20.1712011652180.1706@lukes-macbook-air.local>
References: <CAF8bMcYN35WtHdaYMV8NxL_B9o+dng6PbhqS=UgnYMPvYJy2ZA@mail.gmail.com>
 <alpine.OSX.2.20.1712011652180.1706@lukes-macbook-air.local>
Message-ID: <alpine.DEB.2.20.1712061422510.2953@luke-Latitude>

This should now be resolved in R-devel and R_patched.

Best,

luke

On Fri, 1 Dec 2017, luke-tierney at uiowa.edu wrote:

> Thanks -- will look into it.
>
> luke
>
> On Fri, 1 Dec 2017, William Dunlap via R-devel wrote:
>
>> The following example involves a function whose on.exit()
>> expression both generates an error and catches the error.
>> The body of the function also generates an error.
>> 
>> When calling the function wrapped in a tryCatch, should
>> that tryCatch's error function be given the error from the
>> body of the function, since the one from the on.exit has
>> already been dealt with?  Currently the outer tryCatch gets
>> the error from the on.exit expression.
>> 
>> xx <- function() {
>>  on.exit(tryCatch(
>>    expr = stop("error in xx's on.exit"),
>>    error=function(e) {
>>      cat("xx's on.exit caught error: <<", conditionMessage(e), ">>\n",
>> sep="")
>>    }))
>>  stop("error in body of xx")
>> }
>> zz <- tryCatch(xx(), error=function(e)paste("outer tryCatch caught error
>> <<", conditionMessage(e), ">>", sep=""))
>> #xx's on.exit caught error: <<error in xx's on.exit>>
>> zz
>> #[1] "outer tryCatch caught error <<error in xx's on.exit>>"
>> 
>> 
>> Bill Dunlap
>> TIBCO Software
>> wdunlap tibco.com
>>
>> 	[[alternative HTML version deleted]]
>> 
>> ______________________________________________
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel
>> 
>
>

-- 
Luke Tierney
Ralph E. Wareham Professor of Mathematical Sciences
University of Iowa                  Phone:             319-335-3386
Department of Statistics and        Fax:               319-335-3017
    Actuarial Science
241 Schaeffer Hall                  email:   luke-tierney at uiowa.edu
Iowa City, IA 52242                 WWW:  http://www.stat.uiowa.edu


From tomas.kalibera at gmail.com  Thu Dec  7 17:09:05 2017
From: tomas.kalibera at gmail.com (Tomas Kalibera)
Date: Thu, 7 Dec 2017 17:09:05 +0100
Subject: [Rd] command line arguments are parsed differently on windows,
 from 3.4.3
In-Reply-To: <35992416-48e5-97ad-52d8-8532577e1621@gmail.com>
References: <CABtg=Kkq1-63y18oRKGbgkvd3GMajVfZP8-8npTLmxytgcOzZg@mail.gmail.com>
 <CAFDcVCSu3njV1A2gPVyN66mJ4KNf3hukXQ00=McT=is_Yv6cMg@mail.gmail.com>
 <CAFDcVCSO03gj8mgy1cGGjUVHcMmYZQ+RUXbHWFSoyX+mUm1ztQ@mail.gmail.com>
 <CAFDcVCSpM4yzDg-87wm3Mqg2E2gp0P-bGDApen6rSE9oEKStLA@mail.gmail.com>
 <CABtg=KnHNoDOPTjEqO9iWxoFtnrJAnGN6SigBi4s9A14npfShw@mail.gmail.com>
 <CAFDcVCSYoad_NPGh+FmxtCWWCQYSO+76kYCBwZF16MSmyP_5MA@mail.gmail.com>
 <35992416-48e5-97ad-52d8-8532577e1621@gmail.com>
Message-ID: <1a6a7861-5419-3b61-e5e8-a6cc7638bc86@gmail.com>

Fixed in R-devel and R-patched.

Tomas

On 12/05/2017 05:58 PM, Tomas Kalibera wrote:
> A quick workaround if you needed to execute R expressions in Windows 
> is calling RTerm directly.
> But a fix should be available soon.
>
> Tomas
>
> On 12/05/2017 05:51 PM, Henrik Bengtsson wrote:
>> Sorry for not reading carefully and thanks for confirming problem with
>> Rscript too.
>>
>> On Dec 5, 2017 08:47, "G?bor Cs?rdi" <csardi.gabor at gmail.com> wrote:
>>
>>> On Tue, Dec 5, 2017 at 4:40 PM, Henrik Bengtsson
>>> <henrik.bengtsson at gmail.com> wrote:
>>>> One comment:
>>>> For your R devel example you didn't use spaces in the expression, i.e.
>>> maybe
>>>> that's broken too with spaces?
>>> I did. There are two R-devel examples, one with spaces (buggy) and one
>>> without spaces (works).
>>> To show that spaces are the problem.
>>>
>>>> Three questions:
>>>> Does it work if you avoid spaces?
>>> It seems so.
>>>
>>>> Does it work if you use single quotes?
>>> It does not, single quotes are not special characters for windows, so
>>> you'll get a different error. In
>>> R -q -e '1 + 1'
>>> there are three arguments after the -e: '1 and + and 1'
>>>
>>>> Does this also occur for Rscript?
>>> It seems so indeed.
>>>
>>> Gabor
>>>
>>>> Thxs
>>>>
>>>> Henrik
>>>>
>>>>
>>>> On Dec 5, 2017 03:44, "G?bor Cs?rdi" <csardi.gabor at gmail.com> wrote:
>>>>
>>>> I wonder if this is intended.
>>>>
>>>> Thanks,
>>>> Gabor
>>>>
>>>>
>>>> C:\Users\rhub>"c:\Program Files\R\R-3.4.2\bin\R" -q -e "1 + 1"
>>>>> 1 + 1
>>>> [1] 2
>>>>>
>>>> C:\Users\rhub>"c:\Program Files\R\R-3.4.3\bin\R" -q -e "1 + 1"
>>>> 'c:\PROGRA~1\R\R-34~1.3\bin\x64\R.exe" -q -e "1' is not recognized 
>>>> as an
>>>> interna
>>>> l or external command,
>>>> operable program or batch file.
>>>>
>>>> C:\Users\rhub>"c:\Program Files\R\R-devel\bin\R" -q -e "1 + 1"
>>>> 'c:\PROGRA~1\R\R-devel\bin\x64\R.exe" -q -e "1' is not recognized 
>>>> as an
>>>> internal
>>>> ? or external command,
>>>> operable program or batch file.
>>>>
>>>> C:\Users\rhub>"c:\Program Files\R\R-3.4.3patched\bin\R" -q -e "1 + 1"
>>>> 'c:\PROGRA~1\R\R-34~1.3PA\bin\x64\R.exe" -q -e "1' is not 
>>>> recognized as
>>> an
>>>> inter
>>>> nal or external command,
>>>> operable program or batch file.
>>>>
>>>> C:\Users\rhub>"c:\Program Files\R\R-devel\bin\R" -q -e "1+1"
>>>>> 1+1
>>>> [1] 2
>>>>>
>>>> ______________________________________________
>>>> R-devel at r-project.org mailing list
>>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>>>
>>>>
>> ????[[alternative HTML version deleted]]
>>
>> ______________________________________________
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel
>
>


From tomas.kalibera at gmail.com  Thu Dec  7 17:56:59 2017
From: tomas.kalibera at gmail.com (Tomas Kalibera)
Date: Thu, 7 Dec 2017 17:56:59 +0100
Subject: [Rd] Bug: Issues on Windows with SFN disabled
In-Reply-To: <93be1744-51e7-7d97-ee08-cb16857b79a2@gmail.com>
References: <CAD7tZLXB=73wY9tqLmYhTXyBB9DMO1WZXGz3U9pHz9KgEX4K=Q@mail.gmail.com>
 <34ec506d-bec1-544f-9067-2109bd0db1e5@gmail.com>
 <93be1744-51e7-7d97-ee08-cb16857b79a2@gmail.com>
Message-ID: <e17103b5-b473-6dac-7de4-1df157f973d2@gmail.com>


An update on this. Writing R Extensions does not recommend to have a 
space character in R_HOME. This means that on Windows one either should 
have SFN enabled (which is still the common case), or install into a 
directory that does not have a space in its name (so specifically not 
into "Program Files"). This recommendation unfortunately needs to stay 
for now.

WRE recommends that Makefiles are written to be robust against space 
characters inside R_HOME. All path names passed from a Makefile to the 
shell should be quoted at least if they include R_HOME. Make "include" 
directives should not be used on path names that are derived from 
R_HOME, but one should instead use the "-f" option multiple times when 
recursively invoking make. Maintainers of packages that use "include" 
with R_HOME have been notified. Unfortunately, the number of packages 
that do not quote pathnames with R_HOME in Makefiles is rather large, so 
fixing will take some time.

Currently, R-devel should build fine on Windows with R_HOME including 
space, including all base and recommended packages, and tests for these 
packages should pass even though this is not regularly tested. If you 
find a case when this does not work, please submit a bug report.

Thanks
Tomas


On 10/20/2017 04:29 PM, Tomas Kalibera wrote:
>
> This has now been mostly fixed in R-devel. What remains to be resolved 
> is that some packages with custom make files cannot be installed from 
> source (when R is installed into a directory with space in its name 
> and short file names are not available)
>
> Tomas
>
>
>
> On 10/17/2017 10:37 AM, Tomas Kalibera wrote:
>> Hi Zach,
>>
>> thanks for the report, I can reproduce the problem and confirm it is 
>> a bug in R and will be fixed.
>>
>> Hopefully it only impacts few users now. The workaround is to create 
>> the short name for the directory where R is installed, using "fsutil 
>> file setshortname" (for all elements of the path that contain space 
>> in their name). One can revert this by setting the shortname to an 
>> empty string (""). At least for the latter one may need to boot in 
>> safe mode.
>>
>> Best
>> Tomas
>>
>>
>> On 09/17/2017 08:23 PM, Zach Bjornson wrote:
>>> Hello,
>>>
>>> R appears to assume that Windows drives have short file names (SFN, 
>>> 8.3)
>>> enabled; for example, that "C:/Program Files/..." is addressable as
>>> "C:/Progra~1/...". Newer versions of Windows have SFN disabled on 
>>> non-OS
>>> drives, however.
>>>
>>> This means that if you install R on a non-OS drive, you
>>> - can't start R.exe from the command line.
>>> - consequently, anything that attempts to spawn a new R process also 
>>> fails.
>>> This includes a lot of the commands from the popular devtools 
>>> package. More
>>> discussion and background: 
>>> https://github.com/hadley/devtools/issues/1514
>>>
>>> I don't have access to bugzilla to file this there.
>>>
>>> Thanks and best,
>>> Zach
>>>
>>> ????[[alternative HTML version deleted]]
>>>
>>> ______________________________________________
>>> R-devel at r-project.org mailing list
>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>
>>
>


From edd at debian.org  Thu Dec  7 18:15:02 2017
From: edd at debian.org (Dirk Eddelbuettel)
Date: Thu, 7 Dec 2017 11:15:02 -0600
Subject: [Rd] Bug: Issues on Windows with SFN disabled
In-Reply-To: <e17103b5-b473-6dac-7de4-1df157f973d2@gmail.com>
References: <CAD7tZLXB=73wY9tqLmYhTXyBB9DMO1WZXGz3U9pHz9KgEX4K=Q@mail.gmail.com>
 <34ec506d-bec1-544f-9067-2109bd0db1e5@gmail.com>
 <93be1744-51e7-7d97-ee08-cb16857b79a2@gmail.com>
 <e17103b5-b473-6dac-7de4-1df157f973d2@gmail.com>
Message-ID: <23081.30486.281015.895433@bud.eddelbuettel.com>


On 7 December 2017 at 17:56, Tomas Kalibera wrote:
| 
| An update on this. Writing R Extensions does not recommend to have a 
| space character in R_HOME. This means that on Windows one either should 
| have SFN enabled (which is still the common case), or install into a 
| directory that does not have a space in its name (so specifically not 
| into "Program Files"). This recommendation unfortunately needs to stay 
| for now.
| 
| WRE recommends that Makefiles are written to be robust against space 
| characters inside R_HOME. All path names passed from a Makefile to the 
| shell should be quoted at least if they include R_HOME. Make "include" 
| directives should not be used on path names that are derived from 
| R_HOME, but one should instead use the "-f" option multiple times when 
| recursively invoking make. Maintainers of packages that use "include" 
| with R_HOME have been notified. Unfortunately, the number of packages 
| that do not quote pathnames with R_HOME in Makefiles is rather large, so 
| fixing will take some time.
| 
| Currently, R-devel should build fine on Windows with R_HOME including 
| space, including all base and recommended packages, and tests for these 
| packages should pass even though this is not regularly tested. If you 
| find a case when this does not work, please submit a bug report.

Why does the Windows installer default to using a directory with spaces?

Related (but moderately more advanced), why does R still install "everything"
under one (versioned) directory so that uninformed users on upgrade "miss"
all previously installed packages?

Why not (with space for exposition here, imagine s/ // everywhere below)

    $SOMEROOTDIR / R /
                      R-a.b.c/          # before
                      R-a.b.d/          # d > c, here
                      site-library/     # with .libPaths having this preset?

I don't really care as I manage to work mostly / entirely on another OS, but
I just don't understand why we do not put two and two together. But I am
likely unaware of some salient issues.

In any event, I appreciate the thankless work of those taking care of Windoze
(ie Tomas, Jeroen, Duncan (now ex-officio), Brian, ...)

Dirk

-- 
http://dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org


From tomas.kalibera at gmail.com  Fri Dec  8 13:14:21 2017
From: tomas.kalibera at gmail.com (Tomas Kalibera)
Date: Fri, 8 Dec 2017 13:14:21 +0100
Subject: [Rd] Bug: Issues on Windows with SFN disabled
In-Reply-To: <23081.30486.281015.895433@bud.eddelbuettel.com>
References: <CAD7tZLXB=73wY9tqLmYhTXyBB9DMO1WZXGz3U9pHz9KgEX4K=Q@mail.gmail.com>
 <34ec506d-bec1-544f-9067-2109bd0db1e5@gmail.com>
 <93be1744-51e7-7d97-ee08-cb16857b79a2@gmail.com>
 <e17103b5-b473-6dac-7de4-1df157f973d2@gmail.com>
 <23081.30486.281015.895433@bud.eddelbuettel.com>
Message-ID: <4209816d-b26c-519a-0880-2b51512b609c@gmail.com>

On 12/07/2017 06:15 PM, Dirk Eddelbuettel wrote:
> On 7 December 2017 at 17:56, Tomas Kalibera wrote:
> |
> | An update on this. Writing R Extensions does not recommend to have a
> | space character in R_HOME. This means that on Windows one either should
> | have SFN enabled (which is still the common case), or install into a
> | directory that does not have a space in its name (so specifically not
> | into "Program Files"). This recommendation unfortunately needs to stay
> | for now.
> |
> | WRE recommends that Makefiles are written to be robust against space
> | characters inside R_HOME. All path names passed from a Makefile to the
> | shell should be quoted at least if they include R_HOME. Make "include"
> | directives should not be used on path names that are derived from
> | R_HOME, but one should instead use the "-f" option multiple times when
> | recursively invoking make. Maintainers of packages that use "include"
> | with R_HOME have been notified. Unfortunately, the number of packages
> | that do not quote pathnames with R_HOME in Makefiles is rather large, so
> | fixing will take some time.
> |
> | Currently, R-devel should build fine on Windows with R_HOME including
> | space, including all base and recommended packages, and tests for these
> | packages should pass even though this is not regularly tested. If you
> | find a case when this does not work, please submit a bug report.
>
> Why does the Windows installer default to using a directory with spaces?
It's a convention on Windows and I guess there may be problems with 
permissions on other directories. My hope is we can make R work reliably 
without SFN just in time before SFN become disabled by default, after 
all, quoting pathnames in Makefiles (or shell scripts for that matter) 
is a good practice anyway and avoiding "include" is not a big problem as 
very few packages are affected.

But thanks for opening this and I am happy for insights from any Windows 
experts on the issue. I would not want to violate the convention for all 
users when just few of them have SFN disabled, and as I hope this will 
be fixed on R/packages side, but maybe the installer could at least 
detect the problem (when "Program Files" or another specified target 
directory did not have a short name). Or perhaps also suggest a 
different default. Certainly R could print a warning when it starts.

Tomas
> Related (but moderately more advanced), why does R still install "everything"
> under one (versioned) directory so that uninformed users on upgrade "miss"
> all previously installed packages?
>
> Why not (with space for exposition here, imagine s/ // everywhere below)
>
>      $SOMEROOTDIR / R /
>                        R-a.b.c/          # before
>                        R-a.b.d/          # d > c, here
>                        site-library/     # with .libPaths having this preset?
>
> I don't really care as I manage to work mostly / entirely on another OS, but
> I just don't understand why we do not put two and two together. But I am
> likely unaware of some salient issues.

>
> In any event, I appreciate the thankless work of those taking care of Windoze
> (ie Tomas, Jeroen, Duncan (now ex-officio), Brian, ...)
>
> Dirk
>


From kevinushey at gmail.com  Fri Dec  8 17:52:23 2017
From: kevinushey at gmail.com (Kevin Ushey)
Date: Fri, 8 Dec 2017 08:52:23 -0800
Subject: [Rd] Bug: Issues on Windows with SFN disabled
In-Reply-To: <4209816d-b26c-519a-0880-2b51512b609c@gmail.com>
References: <CAD7tZLXB=73wY9tqLmYhTXyBB9DMO1WZXGz3U9pHz9KgEX4K=Q@mail.gmail.com>
 <34ec506d-bec1-544f-9067-2109bd0db1e5@gmail.com>
 <93be1744-51e7-7d97-ee08-cb16857b79a2@gmail.com>
 <e17103b5-b473-6dac-7de4-1df157f973d2@gmail.com>
 <23081.30486.281015.895433@bud.eddelbuettel.com>
 <4209816d-b26c-519a-0880-2b51512b609c@gmail.com>
Message-ID: <CAJXgQP1EuOcJM6Ar=015=FAq8GGN1WsRm+1eGoc_PYqP9BodkA@mail.gmail.com>

For what it's worth, the Windows installers for other programming
language runtimes often install outside of Program Files, so at least
there is 'prior art' to motivate having R install directly into the
root of the home drive:

    - ActiveState Perl installs directly C:/Perl;
    - Python installs (when installing for all users) into C:/Python$VERSION;
    - The Ruby installers at https://rubyinstaller.org/ default to the
root home drive.

So I (as Dirk said earlier) would also be in favor of having R install
directly to the root of the home drive, with e.g. C:/R/R-x.y.z being
the default install location.

Best,
Kevin


On Fri, Dec 8, 2017 at 4:14 AM, Tomas Kalibera <tomas.kalibera at gmail.com> wrote:
>
> On 12/07/2017 06:15 PM, Dirk Eddelbuettel wrote:
>>
>> On 7 December 2017 at 17:56, Tomas Kalibera wrote:
>> |
>> | An update on this. Writing R Extensions does not recommend to have a
>> | space character in R_HOME. This means that on Windows one either should
>> | have SFN enabled (which is still the common case), or install into a
>> | directory that does not have a space in its name (so specifically not
>> | into "Program Files"). This recommendation unfortunately needs to stay
>> | for now.
>> |
>> | WRE recommends that Makefiles are written to be robust against space
>> | characters inside R_HOME. All path names passed from a Makefile to the
>> | shell should be quoted at least if they include R_HOME. Make "include"
>> | directives should not be used on path names that are derived from
>> | R_HOME, but one should instead use the "-f" option multiple times when
>> | recursively invoking make. Maintainers of packages that use "include"
>> | with R_HOME have been notified. Unfortunately, the number of packages
>> | that do not quote pathnames with R_HOME in Makefiles is rather large, so
>> | fixing will take some time.
>> |
>> | Currently, R-devel should build fine on Windows with R_HOME including
>> | space, including all base and recommended packages, and tests for these
>> | packages should pass even though this is not regularly tested. If you
>> | find a case when this does not work, please submit a bug report.
>>
>> Why does the Windows installer default to using a directory with spaces?
>
> It's a convention on Windows and I guess there may be problems with permissions on other directories. My hope is we can make R work reliably without SFN just in time before SFN become disabled by default, after all, quoting pathnames in Makefiles (or shell scripts for that matter) is a good practice anyway and avoiding "include" is not a big problem as very few packages are affected.
>
> But thanks for opening this and I am happy for insights from any Windows experts on the issue. I would not want to violate the convention for all users when just few of them have SFN disabled, and as I hope this will be fixed on R/packages side, but maybe the installer could at least detect the problem (when "Program Files" or another specified target directory did not have a short name). Or perhaps also suggest a different default. Certainly R could print a warning when it starts.
>
> Tomas
>>
>> Related (but moderately more advanced), why does R still install "everything"
>> under one (versioned) directory so that uninformed users on upgrade "miss"
>> all previously installed packages?
>>
>> Why not (with space for exposition here, imagine s/ // everywhere below)
>>
>>      $SOMEROOTDIR / R /
>>                        R-a.b.c/          # before
>>                        R-a.b.d/          # d > c, here
>>                        site-library/     # with .libPaths having this preset?
>>
>> I don't really care as I manage to work mostly / entirely on another OS, but
>> I just don't understand why we do not put two and two together. But I am
>> likely unaware of some salient issues.
>
>
>>
>> In any event, I appreciate the thankless work of those taking care of Windoze
>> (ie Tomas, Jeroen, Duncan (now ex-officio), Brian, ...)
>>
>> Dirk
>>
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From edd at debian.org  Fri Dec  8 18:11:10 2017
From: edd at debian.org (Dirk Eddelbuettel)
Date: Fri, 8 Dec 2017 11:11:10 -0600
Subject: [Rd] Bug: Issues on Windows with SFN disabled
In-Reply-To: <CAJXgQP1EuOcJM6Ar=015=FAq8GGN1WsRm+1eGoc_PYqP9BodkA@mail.gmail.com>
References: <CAD7tZLXB=73wY9tqLmYhTXyBB9DMO1WZXGz3U9pHz9KgEX4K=Q@mail.gmail.com>
 <34ec506d-bec1-544f-9067-2109bd0db1e5@gmail.com>
 <93be1744-51e7-7d97-ee08-cb16857b79a2@gmail.com>
 <e17103b5-b473-6dac-7de4-1df157f973d2@gmail.com>
 <23081.30486.281015.895433@bud.eddelbuettel.com>
 <4209816d-b26c-519a-0880-2b51512b609c@gmail.com>
 <CAJXgQP1EuOcJM6Ar=015=FAq8GGN1WsRm+1eGoc_PYqP9BodkA@mail.gmail.com>
Message-ID: <23082.51118.403176.330459@bud.eddelbuettel.com>


On 8 December 2017 at 08:52, Kevin Ushey wrote:
| For what it's worth, the Windows installers for other programming
| language runtimes often install outside of Program Files, so at least
| there is 'prior art' to motivate having R install directly into the
| root of the home drive:
| 
|     - ActiveState Perl installs directly C:/Perl;
|     - Python installs (when installing for all users) into C:/Python$VERSION;
|     - The Ruby installers at https://rubyinstaller.org/ default to the
| root home drive.
| 
| So I (as Dirk said earlier) would also be in favor of having R install
| directly to the root of the home drive, with e.g. C:/R/R-x.y.z being
| the default install location.

Yes! And also keep user-installed packages in C:/R/site-library/ by default.

Dirk


PS Thanks to an anonymous benefactor who corrected my inaccurate phrasing.

-- 
http://dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org


From zbbjornson at gmail.com  Fri Dec  8 18:14:20 2017
From: zbbjornson at gmail.com (Zach Bjornson)
Date: Fri, 8 Dec 2017 09:14:20 -0800
Subject: [Rd] Bug: Issues on Windows with SFN disabled
In-Reply-To: <CAJXgQP1EuOcJM6Ar=015=FAq8GGN1WsRm+1eGoc_PYqP9BodkA@mail.gmail.com>
References: <CAD7tZLXB=73wY9tqLmYhTXyBB9DMO1WZXGz3U9pHz9KgEX4K=Q@mail.gmail.com>
 <34ec506d-bec1-544f-9067-2109bd0db1e5@gmail.com>
 <93be1744-51e7-7d97-ee08-cb16857b79a2@gmail.com>
 <e17103b5-b473-6dac-7de4-1df157f973d2@gmail.com>
 <23081.30486.281015.895433@bud.eddelbuettel.com>
 <4209816d-b26c-519a-0880-2b51512b609c@gmail.com>
 <CAJXgQP1EuOcJM6Ar=015=FAq8GGN1WsRm+1eGoc_PYqP9BodkA@mail.gmail.com>
Message-ID: <CAD7tZLVUdefK0UdczGdoN1XviSotpMcuVP7x-DTShRv8=3QNUA@mail.gmail.com>

Thanks for fixing this!

For what it's worth, the Windows installers for other programming
language runtimes often install outside of Program Files, so at least
there is 'prior art' to motivate having R install directly into the
root of the home drive:


This is actually a pretty big peeve of mine. "Program Files" is where
programs are *supposed* to reside on Windows.

>> Related (but moderately more advanced), why does R still install
"everything"
>> under one (versioned) directory so that uninformed users on upgrade
"miss"
>> all previously installed packages?


Will this work for native (C/C++) packages? I thought they need to have
matching ABIs with the R executable.

Zach

	[[alternative HTML version deleted]]


From mcquesten at gmail.com  Fri Dec  8 18:34:46 2017
From: mcquesten at gmail.com (Paul McQuesten)
Date: Fri, 8 Dec 2017 11:34:46 -0600
Subject: [Rd] Bug: Issues on Windows with SFN disabled
In-Reply-To: <CAD7tZLVUdefK0UdczGdoN1XviSotpMcuVP7x-DTShRv8=3QNUA@mail.gmail.com>
References: <CAD7tZLXB=73wY9tqLmYhTXyBB9DMO1WZXGz3U9pHz9KgEX4K=Q@mail.gmail.com>
 <34ec506d-bec1-544f-9067-2109bd0db1e5@gmail.com>
 <93be1744-51e7-7d97-ee08-cb16857b79a2@gmail.com>
 <e17103b5-b473-6dac-7de4-1df157f973d2@gmail.com>
 <23081.30486.281015.895433@bud.eddelbuettel.com>
 <4209816d-b26c-519a-0880-2b51512b609c@gmail.com>
 <CAJXgQP1EuOcJM6Ar=015=FAq8GGN1WsRm+1eGoc_PYqP9BodkA@mail.gmail.com>
 <CAD7tZLVUdefK0UdczGdoN1XviSotpMcuVP7x-DTShRv8=3QNUA@mail.gmail.com>
Message-ID: <CAN6Gc-1tOybRaHjnnm64pDrt62NSO--fs1JLT9ggzkebQMCwuA@mail.gmail.com>

Does Windows allow creating a symlink to "C:/Program Files"?
If so, R could install into the conventional Windows location, but use the
symlink for all its access, yes?

Windows 10 command = mklink

On Fri, Dec 8, 2017 at 11:14 AM, Zach Bjornson <zbbjornson at gmail.com> wrote:

> Thanks for fixing this!
>
> For what it's worth, the Windows installers for other programming
> language runtimes often install outside of Program Files, so at least
> there is 'prior art' to motivate having R install directly into the
> root of the home drive:
>
>
> This is actually a pretty big peeve of mine. "Program Files" is where
> programs are *supposed* to reside on Windows.
>
> >> Related (but moderately more advanced), why does R still install
> "everything"
> >> under one (versioned) directory so that uninformed users on upgrade
> "miss"
> >> all previously installed packages?
>
>
> Will this work for native (C/C++) packages? I thought they need to have
> matching ABIs with the R executable.
>
> Zach
>
>         [[alternative HTML version deleted]]
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>

	[[alternative HTML version deleted]]


From zbbjornson at gmail.com  Fri Dec  8 18:33:56 2017
From: zbbjornson at gmail.com (Zach Bjornson)
Date: Fri, 8 Dec 2017 09:33:56 -0800
Subject: [Rd] Bug: Issues on Windows with SFN disabled
In-Reply-To: <CAD7tZLVUdefK0UdczGdoN1XviSotpMcuVP7x-DTShRv8=3QNUA@mail.gmail.com>
References: <CAD7tZLXB=73wY9tqLmYhTXyBB9DMO1WZXGz3U9pHz9KgEX4K=Q@mail.gmail.com>
 <34ec506d-bec1-544f-9067-2109bd0db1e5@gmail.com>
 <93be1744-51e7-7d97-ee08-cb16857b79a2@gmail.com>
 <e17103b5-b473-6dac-7de4-1df157f973d2@gmail.com>
 <23081.30486.281015.895433@bud.eddelbuettel.com>
 <4209816d-b26c-519a-0880-2b51512b609c@gmail.com>
 <CAJXgQP1EuOcJM6Ar=015=FAq8GGN1WsRm+1eGoc_PYqP9BodkA@mail.gmail.com>
 <CAD7tZLVUdefK0UdczGdoN1XviSotpMcuVP7x-DTShRv8=3QNUA@mail.gmail.com>
Message-ID: <CAD7tZLVLEBAN56EZzPeecPjvSunyV_ZWgE0uapTePNYyDN8h4A@mail.gmail.com>

>
> This is actually a pretty big peeve of mine. "Program Files" is where
> programs are *supposed* to reside on Windows.
>

PS -- Microsoft's reasoning is explained in "Why do program files go into
the Program Files directory?"

https://blogs.msdn.microsoft.com/oldnewthing/20120307-00/?p=8153

There are a few useful comments below it as well, including some folks who
got bit by SFN. The mentioned logo/cert requirements are listed in

https://msdn.microsoft.com/en-us/library/windows/desktop/aa372825(v=vs.85).aspx

-Z

	[[alternative HTML version deleted]]


From ligges at statistik.tu-dortmund.de  Sun Dec 10 15:56:58 2017
From: ligges at statistik.tu-dortmund.de (Uwe Ligges)
Date: Sun, 10 Dec 2017 15:56:58 +0100
Subject: [Rd] CRAN submission queue closes from Dec 22 to Jan 3
Message-ID: <0ee9f7e0-f7b6-eb23-f90f-cf20601a7b5a@statistik.tu-dortmund.de>

Dear package developers,

the CRAN submission queue closes and will be offline from Dec 22 to Jan 
3 due to CRAN team vacations and maintainance work on the CRAN check farm.

Best,
Uwe Ligges


From toth.denes at kogentum.hu  Mon Dec 11 11:39:38 2017
From: toth.denes at kogentum.hu (=?UTF-8?B?RMOpbmVzIFTDs3Ro?=)
Date: Mon, 11 Dec 2017 11:39:38 +0100
Subject: [Rd] possible bug in utils::removeSource - NULL argument is
 silently dropped
Message-ID: <34b5d3e5-ecdf-4dc8-2bfd-95e9b0e02e0e@kogentum.hu>

Dear R-Core Team,

I found an unexpected behaviour in utils::removeSource (also present in 
r-devel as of today).

---

# create a function which accepts NULL argument
foo <- function(x, y) {
   if (is.null(y)) y <- "default foo"
   attr(x, "foo") <- y
   x
}

# create a function which utilizes 'foo'
testSrc <- function() {
   x <- 1:3
   x <- foo(x, NULL)
   x
}

# this works fine
testSrc()

# this fails
testNoSrc <- utils::removeSource(testSrc)
testNoSrc()

# removeSource removes NULL from the 'foo' call
print(testNoSrc)

---

I traced back the bug to this row in removeSource:

(line 33 in sourceutils.R)
part[[i]] <- recurse(part[[i]])

it should be (IMHO):
part[i] <- list(recurse(part[[i]]))

---

# create a function with the above patch
rmSource <- function (fn) {
   stopifnot(is.function(fn))
   if (is.primitive(fn))
     return(fn)
   attr(fn, "srcref") <- NULL
   attr(body(fn), "wholeSrcref") <- NULL
   attr(body(fn), "srcfile") <- NULL
   recurse <- function(part) {
     if (is.name(part))
       return(part)
     attr(part, "srcref") <- NULL
     attr(part, "wholeSrcref") <- NULL
     attr(part, "srcfile") <- NULL
     if (is.language(part) && is.recursive(part)) {
       for (i in seq_along(part))
         part[i] <- list(recurse(part[[i]]))
     }
     part
   }
   body(fn) <- recurse(body(fn))
   fn
}

# test
( testNoSrc2 <- rmSource(testSrc) )
testNoSrc2()


Regards,
Denes


From maechler at stat.math.ethz.ch  Mon Dec 11 15:06:24 2017
From: maechler at stat.math.ethz.ch (Martin Maechler)
Date: Mon, 11 Dec 2017 15:06:24 +0100
Subject: [Rd] possible bug in utils::removeSource - NULL argument is
 silently dropped
In-Reply-To: <34b5d3e5-ecdf-4dc8-2bfd-95e9b0e02e0e@kogentum.hu>
References: <34b5d3e5-ecdf-4dc8-2bfd-95e9b0e02e0e@kogentum.hu>
Message-ID: <23086.37088.952171.547971@stat.math.ethz.ch>

>>>>> D?nes T?th <toth.denes at kogentum.hu>
>>>>>     on Mon, 11 Dec 2017 11:39:38 +0100 writes:

    > Dear R-Core Team,

    > I found an unexpected behaviour in utils::removeSource (also present in 
    > r-devel as of today).
> ---
> 
> # create a function which accepts NULL argument
> foo <- function(x, y) {
>    if (is.null(y)) y <- "default foo"
>    attr(x, "foo") <- y
>    x
> }
> 
> # create a function which utilizes 'foo'
> testSrc <- function() {
>    x <- 1:3
>    x <- foo(x, NULL)
>    x
> }
> 
> # this works fine
> testSrc()
> 
> # this fails
> testNoSrc <- utils::removeSource(testSrc)
> testNoSrc()
> 
> # removeSource removes NULL from the 'foo' call
> print(testNoSrc)
> 
> ---
> 
> I traced back the bug to this row in removeSource:
> 
> (line 33 in sourceutils.R)
> part[[i]] <- recurse(part[[i]])
> 
> it should be (IMHO):
> part[i] <- list(recurse(part[[i]]))
> 
> ---
> 
> # create a function with the above patch
> rmSource <- function (fn) {
>    stopifnot(is.function(fn))
>    if (is.primitive(fn))
>      return(fn)
>    attr(fn, "srcref") <- NULL
>    attr(body(fn), "wholeSrcref") <- NULL
>    attr(body(fn), "srcfile") <- NULL
>    recurse <- function(part) {
>      if (is.name(part))
>        return(part)
>      attr(part, "srcref") <- NULL
>      attr(part, "wholeSrcref") <- NULL
>      attr(part, "srcfile") <- NULL
>      if (is.language(part) && is.recursive(part)) {
>        for (i in seq_along(part))
>          part[i] <- list(recurse(part[[i]]))
>      }
>      part
>    }
>    body(fn) <- recurse(body(fn))
>    fn
> }
> 
> # test
> ( testNoSrc2 <- rmSource(testSrc) )
> testNoSrc2()
> 
> 
> Regards,
> Denes

Thank you very much, Denes. This is indeed a bug 

As it happens I had wanted to improve the removeSource()
function many months ago [to make it work so it removes source attributes also
from non-function expressions] and have had a changed version of
it in my version of R-devel.

Your proposed change looks quite reasonable, and I'll try adding
it (and look at the consequences if it is ok in all use cases).

Thank you once more!

Martin Maechler
ETH Zurich


From pperry at stern.nyu.edu  Mon Dec 11 16:32:36 2017
From: pperry at stern.nyu.edu (Patrick Perry)
Date: Mon, 11 Dec 2017 10:32:36 -0500
Subject: [Rd] Change to r-devel warns on #pragma
Message-ID: <5A2EA514.2070406@stern.nyu.edu>

A recent change to r-devel causes an R CMD check warning when a C file 
includes a "#pragma GCC diagnostic ignored" pragma: 
https://github.com/wch/r-source/commit/b76c8fd355a0f5b23d42aaf44a879cac0fc31fa4 
. This causes the CRAN checks for the "corpus" package to emit a 
warning: 
https://www.r-project.org/nosvn/R.check/r-devel-linux-x86_64-fedora-clang/corpus-00check.html 
.

The offending code is in an upstream library bundled with the package: 
https://github.com/patperry/corpus/blob/master/src/table.c#L118

#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wtype-limits"
         // gcc emits a warning if sizeof(size_t) > sizeof(unsigned)

         if ((size_t)size > SIZE_MAX / sizeof(*items)) {
#pragma GCC diagnostic pop

This is code appears in the "corpus" library that gets bundled with the 
corpus r-package but can also be installed by itself. I am the 
maintainer for both projects but in theory the library is independent 
from the r package (the latter depends on the former). I put the pragma 
there in the first place because this is the cleanest way I know of to 
remove the gcc compiler warning "comparison is always false due to 
limited range of data type" which appears whenever sizeof(unsigned) < 
sizeof(size_t); the warning does not appear for clang.

Does anyone have recommendations for what I should do to remove the R 
CMD check warning? Is it possible to do this while simultaneously 
removing the gcc warning? Note that the package does not use autoconf.

Fortunately, I am the maintainer for the included library, so I can 
potentially remove the pragma. However, I can imagine that there are 
many other cases of R packages bundling C libraries where R package 
maintainers do not have control over the downstream source. Perhaps 
there is a compelling case for this new CRAN check that I'm not seeing, 
but it seems to me that this additional CRAN check will cause extra work 
for package developers without providing any additional safety for R 
users. Package developers that do not control bundled upstream libraries 
will have to resort to `sed s/^#pragma.*//` or manually patch unfamiliar 
code to remove the CRAN warning, potentially introducing bugs in the 
process.


Patrick


From payday2stats at gmail.com  Mon Dec 11 18:45:33 2017
From: payday2stats at gmail.com (Gabe Newell)
Date: Mon, 11 Dec 2017 18:45:33 +0100
Subject: [Rd] document environment passing in parallel::parLapply
Message-ID: <CAL6DhxRkh=+X6g0CpGcJVfou+EA8-xOQPVP-F0Ri_PoqJ69-8Q@mail.gmail.com>

The runtime of parallel::parLapply depends on variables unrelated to
the parLapply call. However, this is not clearly documented. Therefore
I would like to suggest expanding the relevant documentation to
explain this behaviour.

Consider this example:

parallel_demo <- function(random_values_count) {
  some_data <- runif(random_values_count)
  dummy_function <- function(x) {
    x
  }

  cluster <- parallel::makeCluster(3)
  start <- proc.time()

  parallel::parLapply(cluster, 1:3, dummy_function)

  runtime <- proc.time() - start
  parallel::stopCluster(cluster)
  runtime
}
parallel_demo(10)
parallel_demo(100 * 1000 * 1000)

On my machine, this results in a measured runtime of 0.01 seconds
being returned for the first call to parallel_demo, but in a runtime
of 7.04 seconds being returned for the second call.

I could not find clear documentation in either ?parallel::parLapply or
vignette("parallel", package = "parallel") - or any other obvious
place - on what is the reason for the demonstrated difference in
runtime.

Based on the observations described above (and on lots of additional
tests), my _assumption_ is that parallel::parLapply passes the whole
environment of its "fun" argument to all cluster nodes, which of
course takes some time. Thus the more data there is in this
environment, the longer this takes, even though the environment data
might not be needed to execute the function "fun".

For environments with lots of data in them, this can considerably slow
down the computation at hand. At the same time, this behaviour of
passing all data in the environment of "fun" to the cluster nodes is
not clearly documented. The only - rather vague - hint that I found
about this is in the "extended examples" section (specifically on page
13, in section 10.4) of vignette("parallel", package = "parallel").
Furthermore, this behaviour is not something that would very easily be
expected by every R user, in my opinion. Therefore I want to suggested
expanding the documentation of parallel::parLapply so that it
explicitely states that the environment of "fun" has to be passed to
all cluster nodes, which may take some time.
I spent a considerable amount of time on figuring out why my
parallelization code didn't really speed up my calculations, and I
would like to save others from going through this hassle again. :-)

For the sake of completeness, here is my session info:

> version
               _
platform       x86_64-w64-mingw32
arch           x86_64
os             mingw32
system         x86_64, mingw32
status
major          3
minor          4.3
year           2017
month          11
day            30
svn rev        73796
language       R
version.string R version 3.4.3 (2017-11-30)
nickname       Kite-Eating Tree
> sessionInfo()
R version 3.4.3 (2017-11-30)
Platform: x86_64-w64-mingw32/x64 (64-bit)
Running under: Windows >= 8 x64 (build 9200)

Matrix products: default

locale:
[1] LC_COLLATE=German_Germany.1252  LC_CTYPE=German_Germany.1252
LC_MONETARY=German_Germany.1252
[4] LC_NUMERIC=C                    LC_TIME=German_Germany.1252

attached base packages:
[1] stats     graphics  grDevices utils     datasets  methods   base

loaded via a namespace (and not attached):
[1] compiler_3.4.3 parallel_3.4.3 tools_3.4.3    yaml_2.1.14



Martin


From mark.vanderloo at gmail.com  Mon Dec 11 21:42:11 2017
From: mark.vanderloo at gmail.com (Mark van der Loo)
Date: Mon, 11 Dec 2017 20:42:11 +0000
Subject: [Rd] Change to r-devel warns on #pragma
In-Reply-To: <5A2EA514.2070406@stern.nyu.edu>
References: <5A2EA514.2070406@stern.nyu.edu>
Message-ID: <CAOKDuOjXPy9yesPU2R-fYXPb60fiD4KxkdFoBQuESmjZZpHwwA@mail.gmail.com>

Hi Patrick,

It was recently added as a cran policy (thanks Dirk's cran policy watch:
https://twitter.com/markvdloo/status/935810241190617088).

It seems to be a general stricter policy on keeping to the C(++) standard.
Warnings are there for a reason and should usually not be ignored. I'm not
familiar with the warning you are suppressing  but it seems likely that
your code might assume type size that is not guaranteed by the standard and
thus may differ a cross systems/compilers. (An example is wchar_t which has
typically 16b on Windows as guaranteed by the standard and 32b on Unix)

Best,
Mark

On Mon, Dec 11, 2017, 4:33 PM Patrick Perry <pperry at stern.nyu.edu> wrote:

> A recent change to r-devel causes an R CMD check warning when a C file
> includes a "#pragma GCC diagnostic ignored" pragma:
>
> https://github.com/wch/r-source/commit/b76c8fd355a0f5b23d42aaf44a879cac0fc31fa4
> . This causes the CRAN checks for the "corpus" package to emit a
> warning:
>
> https://www.r-project.org/nosvn/R.check/r-devel-linux-x86_64-fedora-clang/corpus-00check.html
> .
>
> The offending code is in an upstream library bundled with the package:
> https://github.com/patperry/corpus/blob/master/src/table.c#L118
>
> #pragma GCC diagnostic push
> #pragma GCC diagnostic ignored "-Wtype-limits"
>          // gcc emits a warning if sizeof(size_t) > sizeof(unsigned)
>
>          if ((size_t)size > SIZE_MAX / sizeof(*items)) {
> #pragma GCC diagnostic pop
>
> This is code appears in the "corpus" library that gets bundled with the
> corpus r-package but can also be installed by itself. I am the
> maintainer for both projects but in theory the library is independent
> from the r package (the latter depends on the former). I put the pragma
> there in the first place because this is the cleanest way I know of to
> remove the gcc compiler warning "comparison is always false due to
> limited range of data type" which appears whenever sizeof(unsigned) <
> sizeof(size_t); the warning does not appear for clang.
>
> Does anyone have recommendations for what I should do to remove the R
> CMD check warning? Is it possible to do this while simultaneously
> removing the gcc warning? Note that the package does not use autoconf.
>
> Fortunately, I am the maintainer for the included library, so I can
> potentially remove the pragma. However, I can imagine that there are
> many other cases of R packages bundling C libraries where R package
> maintainers do not have control over the downstream source. Perhaps
> there is a compelling case for this new CRAN check that I'm not seeing,
> but it seems to me that this additional CRAN check will cause extra work
> for package developers without providing any additional safety for R
> users. Package developers that do not control bundled upstream libraries
> will have to resort to `sed s/^#pragma.*//` or manually patch unfamiliar
> code to remove the CRAN warning, potentially introducing bugs in the
> process.
>
>
> Patrick
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>

	[[alternative HTML version deleted]]


From pperry at stern.nyu.edu  Mon Dec 11 22:11:51 2017
From: pperry at stern.nyu.edu (Patrick Perry)
Date: Mon, 11 Dec 2017 16:11:51 -0500
Subject: [Rd] Change to r-devel warns on #pragma
In-Reply-To: <CAOKDuOjXPy9yesPU2R-fYXPb60fiD4KxkdFoBQuESmjZZpHwwA@mail.gmail.com>
References: <5A2EA514.2070406@stern.nyu.edu>
 <CAOKDuOjXPy9yesPU2R-fYXPb60fiD4KxkdFoBQuESmjZZpHwwA@mail.gmail.com>
Message-ID: <5A2EF497.7000202@stern.nyu.edu>

Dear Mark,

Thank you for the reply. I am not questioning the utility of compiler 
warnings in general. If you look at the code snippet, you can see that I 
am only disabling one warning ("-Wtype-limits"), in one line of code. 
This particular warning is spurious, so I want to ignore it, but I want 
warnings to be active for the rest of the project.

The specific issue is that I have a dynamic array of integers with an 
int length. When I grow the array, I want to make sure that the size 
doesn't overflow a size_t. I have an overflow check of the form

int n; // array size

if ((size_t)n > SIZE_MAX / sizeof(int)) {
    // handle overflow
}

The condition will never be true on a 64-bit architecture with 
sizeof(int) == 4 and sizeof(size_t) == 8 but it might be true on a 
32-bit architecture with sizeof(int) == sizeof(size_t). When compiled on 
a 64-bit architecture with "-Wextra", gcc emits a warning. Clang does 
not. I added the pragmas to disable this warning.

You might think that I could fix things by doing something like

#if sizeof(size_t) == sizeof(int)
/// check for overflow
#endif

but that won't work, because you can't use sizeof in a static #if. The 
standard work-around is to use autoconf to define SIZEOF_SIZE_T and 
SIZEOF_INT as in 
https://stackoverflow.com/questions/1921295/x64-compatible-c-source , 
but I'd rather not add a dependency on autoconf.


Patrick
> Mark van der Loo <mailto:mark.vanderloo at gmail.com>
> December 11, 2017 at 3:42 PM
>
> Hi Patrick,
>
> It was recently added as a cran policy (thanks Dirk's cran policy 
> watch: https://twitter.com/markvdloo/status/935810241190617088).
>
> It seems to be a general stricter policy on keeping to the C(++) 
> standard. Warnings are there for a reason and should usually not be 
> ignored. I'm not familiar with the warning you are suppressing  but it 
> seems likely that your code might assume type size that is not 
> guaranteed by the standard and thus may differ a cross 
> systems/compilers. (An example is wchar_t which has typically 16b on 
> Windows as guaranteed by the standard and 32b on Unix)
>
> Best,
> Mark
>
>
> Patrick Perry <mailto:pperry at stern.nyu.edu>
> December 11, 2017 at 10:32 AM
> A recent change to r-devel causes an R CMD check warning when a C file 
> includes a "#pragma GCC diagnostic ignored" pragma: 
> https://github.com/wch/r-source/commit/b76c8fd355a0f5b23d42aaf44a879cac0fc31fa4 
> . This causes the CRAN checks for the "corpus" package to emit a 
> warning: 
> https://www.r-project.org/nosvn/R.check/r-devel-linux-x86_64-fedora-clang/corpus-00check.html 
> .
>
> The offending code is in an upstream library bundled with the package: 
> https://github.com/patperry/corpus/blob/master/src/table.c#L118
>
> #pragma GCC diagnostic push
> #pragma GCC diagnostic ignored "-Wtype-limits"
>         // gcc emits a warning if sizeof(size_t) > sizeof(unsigned)
>
>         if ((size_t)size > SIZE_MAX / sizeof(*items)) {
> #pragma GCC diagnostic pop
>
> This is code appears in the "corpus" library that gets bundled with 
> the corpus r-package but can also be installed by itself. I am the 
> maintainer for both projects but in theory the library is independent 
> from the r package (the latter depends on the former). I put the 
> pragma there in the first place because this is the cleanest way I 
> know of to remove the gcc compiler warning "comparison is always false 
> due to limited range of data type" which appears whenever 
> sizeof(unsigned) < sizeof(size_t); the warning does not appear for clang.
>
> Does anyone have recommendations for what I should do to remove the R 
> CMD check warning? Is it possible to do this while simultaneously 
> removing the gcc warning? Note that the package does not use autoconf.
>
> Fortunately, I am the maintainer for the included library, so I can 
> potentially remove the pragma. However, I can imagine that there are 
> many other cases of R packages bundling C libraries where R package 
> maintainers do not have control over the downstream source. Perhaps 
> there is a compelling case for this new CRAN check that I'm not 
> seeing, but it seems to me that this additional CRAN check will cause 
> extra work for package developers without providing any additional 
> safety for R users. Package developers that do not control bundled 
> upstream libraries will have to resort to `sed s/^#pragma.*//` or 
> manually patch unfamiliar code to remove the CRAN warning, potentially 
> introducing bugs in the process.
>
>
> Patrick


	[[alternative HTML version deleted]]


From csardi.gabor at gmail.com  Thu Dec 14 19:02:18 2017
From: csardi.gabor at gmail.com (=?UTF-8?B?R8OhYm9yIENzw6FyZGk=?=)
Date: Thu, 14 Dec 2017 18:02:18 +0000
Subject: [Rd] cannot destroy connection (?) created by readLines in a
	tryCatch
Message-ID: <CABtg=KnWVVSvq6dogNG9fnYWhTJNNadJcyaMDif0_EV7Gd_VaA@mail.gmail.com>

Consider this code. This is R 3.4.2, but based on a quick look at the
NEWS, this has not been fixed.

tryCatch(
  readLines(tempfile(), warn = FALSE)[1],
  error = function(e) NA,
  warning = function(w) NA
)

rm(list=ls(all.names = TRUE))
gc()

showConnections(all = TRUE)

If you run it, you'll get a connection you cannot close(), i.e. the
last showConnections() call prints:

? showConnections(all = TRUE)
  description
0 "stdin"
1 "stdout"
2 "stderr"
3 "/var/folders/59/0gkmw1yj2w7bf2dfc3jznv5w0000gn/T//Rtmpc7JqVS/filecc2044b2ccec"
  class      mode text   isopen   can read can write
0 "terminal" "r"  "text" "opened" "yes"    "no"
1 "terminal" "w"  "text" "opened" "no"     "yes"
2 "terminal" "w"  "text" "opened" "no"     "yes"
3 "file"     "r"  "text" "closed" "yes"    "yes"

AFAICT, readLines should close the connection:

? readLines
function (con = stdin(), n = -1L, ok = TRUE, warn = TRUE, encoding = "unknown",
    skipNul = FALSE)
{
    if (is.character(con)) {
        con <- file(con, "r")
        on.exit(close(con))
    }
    .Internal(readLines(con, n, ok, warn, encoding, skipNul))
}
<environment: namespace:base>

so maybe this just a symptom of an on.exit() issue?

Or am I missing something and it is possible to close the connection?

Thanks,
Gabor


From gmbecker at ucdavis.edu  Thu Dec 14 20:56:23 2017
From: gmbecker at ucdavis.edu (Gabriel Becker)
Date: Thu, 14 Dec 2017 11:56:23 -0800
Subject: [Rd] cannot destroy connection (?) created by readLines in a
	tryCatch
In-Reply-To: <CABtg=KnWVVSvq6dogNG9fnYWhTJNNadJcyaMDif0_EV7Gd_VaA@mail.gmail.com>
References: <CABtg=KnWVVSvq6dogNG9fnYWhTJNNadJcyaMDif0_EV7Gd_VaA@mail.gmail.com>
Message-ID: <CADwqtCPwpURQqLs0NrX7Hg9CtEX4huLj+Z=DTKvzTb9bHX=vbA@mail.gmail.com>

Gabor,

You can grab the connection and destroy it via getConnection and then a
standard close call. (it actually lists that it is "closed" already, but
still in the set of existing connections. I can't speak to that difference).

> tryCatch(

+   readLines(tempfile(), warn = FALSE)[1],

+   error = function(e) NA,

+   warning = function(w) NA

+ )

[1] NA

> rm(list=ls(all.names = TRUE))

> gc()

         used (Mb) gc trigger (Mb) max used (Mb)

Ncells 257895 13.8     592000 31.7   416371 22.3

Vcells 536411  4.1    8388608 64.0  1795667 13.7

>

> showConnections(all = TRUE)

  description


0 "stdin"


1 "stdout"


2 "stderr"


3
"/var/folders/79/l_n_5qr152d2d9d9xs0591lh0000gn/T//RtmpZRcxmh/file128a13bffc77"

  class      mode text   isopen   can read can write

0 "terminal" "r"  "text" "opened" "yes"    "no"

1 "terminal" "w"  "text" "opened" "no"     "yes"

2 "terminal" "w"  "text" "opened" "no"     "yes"

3 "file"     "r"  "text" "closed" "yes"    "yes"

> con = getConnection(3)

> con

A connection with


description
"/var/folders/79/l_n_5qr152d2d9d9xs0591lh0000gn/T//RtmpZRcxmh/file128a13bffc77"

class       "file"


mode        "r"


text        "text"


opened      "closed"


can read    "yes"


can write   "yes"


> close(con)

> showConnections(all=TRUE)

  description class      mode text   isopen   can read can write

0 "stdin"     "terminal" "r"  "text" "opened" "yes"    "no"

1 "stdout"    "terminal" "w"  "text" "opened" "no"     "yes"

2 "stderr"    "terminal" "w"  "text" "opened" "no"     "yes"


HTH,
~G

On Thu, Dec 14, 2017 at 10:02 AM, G?bor Cs?rdi <csardi.gabor at gmail.com>
wrote:

> Consider this code. This is R 3.4.2, but based on a quick look at the
> NEWS, this has not been fixed.
>
> tryCatch(
>   readLines(tempfile(), warn = FALSE)[1],
>   error = function(e) NA,
>   warning = function(w) NA
> )
>
> rm(list=ls(all.names = TRUE))
> gc()
>
> showConnections(all = TRUE)
>
> If you run it, you'll get a connection you cannot close(), i.e. the
> last showConnections() call prints:
>
> ? showConnections(all = TRUE)
>   description
> 0 "stdin"
> 1 "stdout"
> 2 "stderr"
> 3 "/var/folders/59/0gkmw1yj2w7bf2dfc3jznv5w0000gn/T//Rtmpc7JqVS/
> filecc2044b2ccec"
>   class      mode text   isopen   can read can write
> 0 "terminal" "r"  "text" "opened" "yes"    "no"
> 1 "terminal" "w"  "text" "opened" "no"     "yes"
> 2 "terminal" "w"  "text" "opened" "no"     "yes"
> 3 "file"     "r"  "text" "closed" "yes"    "yes"
>
> AFAICT, readLines should close the connection:
>
> ? readLines
> function (con = stdin(), n = -1L, ok = TRUE, warn = TRUE, encoding =
> "unknown",
>     skipNul = FALSE)
> {
>     if (is.character(con)) {
>         con <- file(con, "r")
>         on.exit(close(con))
>     }
>     .Internal(readLines(con, n, ok, warn, encoding, skipNul))
> }
> <environment: namespace:base>
>
> so maybe this just a symptom of an on.exit() issue?
>
> Or am I missing something and it is possible to close the connection?
>
> Thanks,
> Gabor
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel




-- 
Gabriel Becker, PhD
Scientist (Bioinformatics)
Genentech Research

	[[alternative HTML version deleted]]


From wolfgang.viechtbauer at maastrichtuniversity.nl  Thu Dec 14 21:05:27 2017
From: wolfgang.viechtbauer at maastrichtuniversity.nl (Viechtbauer Wolfgang (SP))
Date: Thu, 14 Dec 2017 20:05:27 +0000
Subject: [Rd] xyTable(x,y) versus table(x,y) with NAs
Message-ID: <ba84fd5fbe954e0386a96f3941bf9d84@UM-MAIL3216.unimaas.nl>

Hi All,

I asked this over at r-help, but didn't get any responses. As this seems like a bug (or at least undocumented behavior) to me, I'll try again here.

It seems to me that xyTable() gets thrown off by NAs:

x <- c(1, 1, 2, 2,  2, 3)
y <- c(1, 2, 1, 3, NA, 3)
table(x, y, useNA="always")
xyTable(x, y)

Is this intended behavior?

Best,
Wolfgang


From csardi.gabor at gmail.com  Thu Dec 14 21:17:54 2017
From: csardi.gabor at gmail.com (=?UTF-8?B?R8OhYm9yIENzw6FyZGk=?=)
Date: Thu, 14 Dec 2017 20:17:54 +0000
Subject: [Rd] cannot destroy connection (?) created by readLines in a
	tryCatch
In-Reply-To: <CADwqtCPwpURQqLs0NrX7Hg9CtEX4huLj+Z=DTKvzTb9bHX=vbA@mail.gmail.com>
References: <CABtg=KnWVVSvq6dogNG9fnYWhTJNNadJcyaMDif0_EV7Gd_VaA@mail.gmail.com>
 <CADwqtCPwpURQqLs0NrX7Hg9CtEX4huLj+Z=DTKvzTb9bHX=vbA@mail.gmail.com>
Message-ID: <CABtg=KnTE+5n-4wQgty0yMVr1_vuUhvYgJ2fJGux143Pz-T0bQ@mail.gmail.com>

On Thu, Dec 14, 2017 at 7:56 PM, Gabriel Becker <gmbecker at ucdavis.edu> wrote:
> Gabor,
>
> You can grab the connection and destroy it via getConnection and then a
> standard close call.

Yeah, that's often a possible workaround, but since this connection
was opened by
readLines() internally, I don't necessarily know which one it is. E.g.
I might open multiple
connections to the same file, so I can't choose based on the file name.

Btw. this workaround seems to work for me:

read_lines <- function(con, ...) {
  if (is.character(con)) {
    con <- file(con)
    on.exit(close(con))
  }
  readLines(con, ...)
}

This is basically the same as readLines(), but on.exit() does its job here.
That's another clue that it might be an on.exit() issue. Wild guess:
on.exit() does not run if an internal function errors.

> (it actually lists that it is "closed" already, but
> still in the set of existing connections. I can't speak to that difference).

It is closed but not destroyed.

G.

>> tryCatch(
>
> +   readLines(tempfile(), warn = FALSE)[1],
>
> +   error = function(e) NA,
>
> +   warning = function(w) NA
>
> + )
>
> [1] NA
>
>> rm(list=ls(all.names = TRUE))
>
>> gc()
>
>          used (Mb) gc trigger (Mb) max used (Mb)
>
> Ncells 257895 13.8     592000 31.7   416371 22.3
>
> Vcells 536411  4.1    8388608 64.0  1795667 13.7
>
>>
>
>> showConnections(all = TRUE)
>
>   description
>
> 0 "stdin"
>
> 1 "stdout"
>
> 2 "stderr"
>
> 3
> "/var/folders/79/l_n_5qr152d2d9d9xs0591lh0000gn/T//RtmpZRcxmh/file128a13bffc77"
>
>   class      mode text   isopen   can read can write
>
> 0 "terminal" "r"  "text" "opened" "yes"    "no"
>
> 1 "terminal" "w"  "text" "opened" "no"     "yes"
>
> 2 "terminal" "w"  "text" "opened" "no"     "yes"
>
> 3 "file"     "r"  "text" "closed" "yes"    "yes"
>
>> con = getConnection(3)
>
>> con
>
> A connection with
>
> description
> "/var/folders/79/l_n_5qr152d2d9d9xs0591lh0000gn/T//RtmpZRcxmh/file128a13bffc77"
>
> class       "file"
>
> mode        "r"
>
> text        "text"
>
> opened      "closed"
>
> can read    "yes"
>
> can write   "yes"
>
>> close(con)
>
>> showConnections(all=TRUE)
>
>   description class      mode text   isopen   can read can write
>
> 0 "stdin"     "terminal" "r"  "text" "opened" "yes"    "no"
>
> 1 "stdout"    "terminal" "w"  "text" "opened" "no"     "yes"
>
> 2 "stderr"    "terminal" "w"  "text" "opened" "no"     "yes"
>
>
>
> HTH,
> ~G
>
> On Thu, Dec 14, 2017 at 10:02 AM, G?bor Cs?rdi <csardi.gabor at gmail.com>
> wrote:
>>
>> Consider this code. This is R 3.4.2, but based on a quick look at the
>> NEWS, this has not been fixed.
>>
>> tryCatch(
>>   readLines(tempfile(), warn = FALSE)[1],
>>   error = function(e) NA,
>>   warning = function(w) NA
>> )
>>
>> rm(list=ls(all.names = TRUE))
>> gc()
>>
>> showConnections(all = TRUE)
>>
>> If you run it, you'll get a connection you cannot close(), i.e. the
>> last showConnections() call prints:
>>
>> ? showConnections(all = TRUE)
>>   description
>> 0 "stdin"
>> 1 "stdout"
>> 2 "stderr"
>> 3
>> "/var/folders/59/0gkmw1yj2w7bf2dfc3jznv5w0000gn/T//Rtmpc7JqVS/filecc2044b2ccec"
>>   class      mode text   isopen   can read can write
>> 0 "terminal" "r"  "text" "opened" "yes"    "no"
>> 1 "terminal" "w"  "text" "opened" "no"     "yes"
>> 2 "terminal" "w"  "text" "opened" "no"     "yes"
>> 3 "file"     "r"  "text" "closed" "yes"    "yes"
>>
>> AFAICT, readLines should close the connection:
>>
>> ? readLines
>> function (con = stdin(), n = -1L, ok = TRUE, warn = TRUE, encoding =
>> "unknown",
>>     skipNul = FALSE)
>> {
>>     if (is.character(con)) {
>>         con <- file(con, "r")
>>         on.exit(close(con))
>>     }
>>     .Internal(readLines(con, n, ok, warn, encoding, skipNul))
>> }
>> <environment: namespace:base>
>>
>> so maybe this just a symptom of an on.exit() issue?
>>
>> Or am I missing something and it is possible to close the connection?
>>
>> Thanks,
>> Gabor
>>
>> ______________________________________________
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel
>
>
>
>
> --
> Gabriel Becker, PhD
> Scientist (Bioinformatics)
> Genentech Research


From gmbecker at ucdavis.edu  Thu Dec 14 22:21:15 2017
From: gmbecker at ucdavis.edu (Gabriel Becker)
Date: Thu, 14 Dec 2017 13:21:15 -0800
Subject: [Rd] cannot destroy connection (?) created by readLines in a
	tryCatch
In-Reply-To: <CABtg=KnTE+5n-4wQgty0yMVr1_vuUhvYgJ2fJGux143Pz-T0bQ@mail.gmail.com>
References: <CABtg=KnWVVSvq6dogNG9fnYWhTJNNadJcyaMDif0_EV7Gd_VaA@mail.gmail.com>
 <CADwqtCPwpURQqLs0NrX7Hg9CtEX4huLj+Z=DTKvzTb9bHX=vbA@mail.gmail.com>
 <CABtg=KnTE+5n-4wQgty0yMVr1_vuUhvYgJ2fJGux143Pz-T0bQ@mail.gmail.com>
Message-ID: <CADwqtCOm8R4E827krkM5Vg+_AwB190tOXeh3w+mxSxu=aBWcCA@mail.gmail.com>

On Thu, Dec 14, 2017 at 12:17 PM, G?bor Cs?rdi <csardi.gabor at gmail.com>
wrote:

> On Thu, Dec 14, 2017 at 7:56 PM, Gabriel Becker <gmbecker at ucdavis.edu>
> wrote:
> > Gabor,
> >
> > You can grab the connection and destroy it via getConnection and then a
> > standard close call.
>
> Yeah, that's often a possible workaround, but since this connection
> was opened by
> readLines() internally, I don't necessarily know which one it is. E.g.
> I might open multiple
> connections to the same file, so I can't choose based on the file name.
>
> Btw. this workaround seems to work for me:
>
> read_lines <- function(con, ...) {
>   if (is.character(con)) {
>     con <- file(con)
>     on.exit(close(con))
>   }
>   readLines(con, ...)
> }
>
> This is basically the same as readLines(), but on.exit() does its job here.
> That's another clue that it might be an on.exit() issue. Wild guess:
> on.exit() does not run if an internal function errors.
>

It seems to be the  setting of a warning handler in tryCatch that does it
actually; without that, it works as expected, even when errors are caught.

tryCatch(readLines(tempfile(), warn=FALSE), error=function(x) NA)

[1] NA

*Warning message:*

*In file(con, "r") :*

*  cannot open file
'/var/folders/79/l_n_5qr152d2d9d9xs0591lh0000gn/T//RtmpzIZ6Qh/file1ed2e57f2ea':
No such file or directory*

> showConnections(all=TRUE)

  description class      mode text   isopen   can read can write

0 "stdin"     "terminal" "r"  "text" "opened" "yes"    "no"

1 "stdout"    "terminal" "w"  "text" "opened" "no"     "yes"

2 "stderr"    "terminal" "w"  "text" "opened" "no"     "yes"

> tryCatch(readLines(tempfile(), warn=FALSE), warning=function(x) NA)

[1] NA

> showConnections(all=TRUE)

  description


0 "stdin"


1 "stdout"


2 "stderr"


3
"/var/folders/79/l_n_5qr152d2d9d9xs0591lh0000gn/T//RtmpzIZ6Qh/file1ed2300ce801"

  class      mode text   isopen   can read can write

0 "terminal" "r"  "text" "opened" "yes"    "no"

1 "terminal" "w"  "text" "opened" "no"     "yes"

2 "terminal" "w"  "text" "opened" "no"     "yes"

3 "file"     "r"  "text" "closed" "yes"    "yes"


~G


>
> > (it actually lists that it is "closed" already, but
> > still in the set of existing connections. I can't speak to that
> difference).
>
> It is closed but not destroyed.
>
> G.
>
> >> tryCatch(
> >
> > +   readLines(tempfile(), warn = FALSE)[1],
> >
> > +   error = function(e) NA,
> >
> > +   warning = function(w) NA
> >
> > + )
> >
> > [1] NA
> >
> >> rm(list=ls(all.names = TRUE))
> >
> >> gc()
> >
> >          used (Mb) gc trigger (Mb) max used (Mb)
> >
> > Ncells 257895 13.8     592000 31.7   416371 22.3
> >
> > Vcells 536411  4.1    8388608 64.0  1795667 13.7
> >
> >>
> >
> >> showConnections(all = TRUE)
> >
> >   description
> >
> > 0 "stdin"
> >
> > 1 "stdout"
> >
> > 2 "stderr"
> >
> > 3
> > "/var/folders/79/l_n_5qr152d2d9d9xs0591lh0000gn/T//
> RtmpZRcxmh/file128a13bffc77"
> >
> >   class      mode text   isopen   can read can write
> >
> > 0 "terminal" "r"  "text" "opened" "yes"    "no"
> >
> > 1 "terminal" "w"  "text" "opened" "no"     "yes"
> >
> > 2 "terminal" "w"  "text" "opened" "no"     "yes"
> >
> > 3 "file"     "r"  "text" "closed" "yes"    "yes"
> >
> >> con = getConnection(3)
> >
> >> con
> >
> > A connection with
> >
> > description
> > "/var/folders/79/l_n_5qr152d2d9d9xs0591lh0000gn/T//
> RtmpZRcxmh/file128a13bffc77"
> >
> > class       "file"
> >
> > mode        "r"
> >
> > text        "text"
> >
> > opened      "closed"
> >
> > can read    "yes"
> >
> > can write   "yes"
> >
> >> close(con)
> >
> >> showConnections(all=TRUE)
> >
> >   description class      mode text   isopen   can read can write
> >
> > 0 "stdin"     "terminal" "r"  "text" "opened" "yes"    "no"
> >
> > 1 "stdout"    "terminal" "w"  "text" "opened" "no"     "yes"
> >
> > 2 "stderr"    "terminal" "w"  "text" "opened" "no"     "yes"
> >
> >
> >
> > HTH,
> > ~G
> >
> > On Thu, Dec 14, 2017 at 10:02 AM, G?bor Cs?rdi <csardi.gabor at gmail.com>
> > wrote:
> >>
> >> Consider this code. This is R 3.4.2, but based on a quick look at the
> >> NEWS, this has not been fixed.
> >>
> >> tryCatch(
> >>   readLines(tempfile(), warn = FALSE)[1],
> >>   error = function(e) NA,
> >>   warning = function(w) NA
> >> )
> >>
> >> rm(list=ls(all.names = TRUE))
> >> gc()
> >>
> >> showConnections(all = TRUE)
> >>
> >> If you run it, you'll get a connection you cannot close(), i.e. the
> >> last showConnections() call prints:
> >>
> >> ? showConnections(all = TRUE)
> >>   description
> >> 0 "stdin"
> >> 1 "stdout"
> >> 2 "stderr"
> >> 3
> >> "/var/folders/59/0gkmw1yj2w7bf2dfc3jznv5w0000gn/T//Rtmpc7JqVS/
> filecc2044b2ccec"
> >>   class      mode text   isopen   can read can write
> >> 0 "terminal" "r"  "text" "opened" "yes"    "no"
> >> 1 "terminal" "w"  "text" "opened" "no"     "yes"
> >> 2 "terminal" "w"  "text" "opened" "no"     "yes"
> >> 3 "file"     "r"  "text" "closed" "yes"    "yes"
> >>
> >> AFAICT, readLines should close the connection:
> >>
> >> ? readLines
> >> function (con = stdin(), n = -1L, ok = TRUE, warn = TRUE, encoding =
> >> "unknown",
> >>     skipNul = FALSE)
> >> {
> >>     if (is.character(con)) {
> >>         con <- file(con, "r")
> >>         on.exit(close(con))
> >>     }
> >>     .Internal(readLines(con, n, ok, warn, encoding, skipNul))
> >> }
> >> <environment: namespace:base>
> >>
> >> so maybe this just a symptom of an on.exit() issue?
> >>
> >> Or am I missing something and it is possible to close the connection?
> >>
> >> Thanks,
> >> Gabor
> >>
> >> ______________________________________________
> >> R-devel at r-project.org mailing list
> >> https://stat.ethz.ch/mailman/listinfo/r-devel
> >
> >
> >
> >
> > --
> > Gabriel Becker, PhD
> > Scientist (Bioinformatics)
> > Genentech Research
>



-- 
Gabriel Becker, PhD
Scientist (Bioinformatics)
Genentech Research

	[[alternative HTML version deleted]]


From luke-tierney at uiowa.edu  Thu Dec 14 23:05:40 2017
From: luke-tierney at uiowa.edu (Tierney, Luke)
Date: Thu, 14 Dec 2017 22:05:40 +0000
Subject: [Rd] cannot destroy connection (?) created by readLines in
	a	tryCatch
In-Reply-To: <CADwqtCOm8R4E827krkM5Vg+_AwB190tOXeh3w+mxSxu=aBWcCA@mail.gmail.com>
References: <CABtg=KnWVVSvq6dogNG9fnYWhTJNNadJcyaMDif0_EV7Gd_VaA@mail.gmail.com>
 <CADwqtCPwpURQqLs0NrX7Hg9CtEX4huLj+Z=DTKvzTb9bHX=vbA@mail.gmail.com>
 <CABtg=KnTE+5n-4wQgty0yMVr1_vuUhvYgJ2fJGux143Pz-T0bQ@mail.gmail.com>,
 <CADwqtCOm8R4E827krkM5Vg+_AwB190tOXeh3w+mxSxu=aBWcCA@mail.gmail.com>
Message-ID: <5889CB5D-2F32-425F-A072-7100FC767E90@uiowa.edu>

Your guess is wrong. More when I have a sensible keyboard

Sent from my iPhone

On Dec 15, 2017, at 10:21 AM, Gabriel Becker <gmbecker at ucdavis.edu<mailto:gmbecker at ucdavis.edu>> wrote:

On Thu, Dec 14, 2017 at 12:17 PM, G?bor Cs?rdi <csardi.gabor at gmail.com<mailto:csardi.gabor at gmail.com>>
wrote:

On Thu, Dec 14, 2017 at 7:56 PM, Gabriel Becker <gmbecker at ucdavis.edu<mailto:gmbecker at ucdavis.edu>>
wrote:
Gabor,

You can grab the connection and destroy it via getConnection and then a
standard close call.

Yeah, that's often a possible workaround, but since this connection
was opened by
readLines() internally, I don't necessarily know which one it is. E.g.
I might open multiple
connections to the same file, so I can't choose based on the file name.

Btw. this workaround seems to work for me:

read_lines <- function(con, ...) {
 if (is.character(con)) {
   con <- file(con)
   on.exit(close(con))
 }
 readLines(con, ...)
}

This is basically the same as readLines(), but on.exit() does its job here.
That's another clue that it might be an on.exit() issue. Wild guess:
on.exit() does not run if an internal function errors.


It seems to be the  setting of a warning handler in tryCatch that does it
actually; without that, it works as expected, even when errors are caught.

tryCatch(readLines(tempfile(), warn=FALSE), error=function(x) NA)

[1] NA

*Warning message:*

*In file(con, "r") :*

*  cannot open file
'/var/folders/79/l_n_5qr152d2d9d9xs0591lh0000gn/T//RtmpzIZ6Qh/file1ed2e57f2ea':
No such file or directory*

showConnections(all=TRUE)

 description class      mode text   isopen   can read can write

0 "stdin"     "terminal" "r"  "text" "opened" "yes"    "no"

1 "stdout"    "terminal" "w"  "text" "opened" "no"     "yes"

2 "stderr"    "terminal" "w"  "text" "opened" "no"     "yes"

tryCatch(readLines(tempfile(), warn=FALSE), warning=function(x) NA)

[1] NA

showConnections(all=TRUE)

 description


0 "stdin"


1 "stdout"


2 "stderr"


3
"/var/folders/79/l_n_5qr152d2d9d9xs0591lh0000gn/T//RtmpzIZ6Qh/file1ed2300ce801"

 class      mode text   isopen   can read can write

0 "terminal" "r"  "text" "opened" "yes"    "no"

1 "terminal" "w"  "text" "opened" "no"     "yes"

2 "terminal" "w"  "text" "opened" "no"     "yes"

3 "file"     "r"  "text" "closed" "yes"    "yes"


~G



(it actually lists that it is "closed" already, but
still in the set of existing connections. I can't speak to that
difference).

It is closed but not destroyed.

G.

tryCatch(

+   readLines(tempfile(), warn = FALSE)[1],

+   error = function(e) NA,

+   warning = function(w) NA

+ )

[1] NA

rm(list=ls(all.names = TRUE))

gc()

        used (Mb) gc trigger (Mb) max used (Mb)

Ncells 257895 13.8     592000 31.7   416371 22.3

Vcells 536411  4.1    8388608 64.0  1795667 13.7



showConnections(all = TRUE)

 description

0 "stdin"

1 "stdout"

2 "stderr"

3
"/var/folders/79/l_n_5qr152d2d9d9xs0591lh0000gn/T//
RtmpZRcxmh/file128a13bffc77"

 class      mode text   isopen   can read can write

0 "terminal" "r"  "text" "opened" "yes"    "no"

1 "terminal" "w"  "text" "opened" "no"     "yes"

2 "terminal" "w"  "text" "opened" "no"     "yes"

3 "file"     "r"  "text" "closed" "yes"    "yes"

con = getConnection(3)

con

A connection with

description
"/var/folders/79/l_n_5qr152d2d9d9xs0591lh0000gn/T//
RtmpZRcxmh/file128a13bffc77"

class       "file"

mode        "r"

text        "text"

opened      "closed"

can read    "yes"

can write   "yes"

close(con)

showConnections(all=TRUE)

 description class      mode text   isopen   can read can write

0 "stdin"     "terminal" "r"  "text" "opened" "yes"    "no"

1 "stdout"    "terminal" "w"  "text" "opened" "no"     "yes"

2 "stderr"    "terminal" "w"  "text" "opened" "no"     "yes"



HTH,
~G

On Thu, Dec 14, 2017 at 10:02 AM, G?bor Cs?rdi <csardi.gabor at gmail.com<mailto:csardi.gabor at gmail.com>>
wrote:

Consider this code. This is R 3.4.2, but based on a quick look at the
NEWS, this has not been fixed.

tryCatch(
 readLines(tempfile(), warn = FALSE)[1],
 error = function(e) NA,
 warning = function(w) NA
)

rm(list=ls(all.names = TRUE))
gc()

showConnections(all = TRUE)

If you run it, you'll get a connection you cannot close(), i.e. the
last showConnections() call prints:

? showConnections(all = TRUE)
 description
0 "stdin"
1 "stdout"
2 "stderr"
3
"/var/folders/59/0gkmw1yj2w7bf2dfc3jznv5w0000gn/T//Rtmpc7JqVS/
filecc2044b2ccec"
 class      mode text   isopen   can read can write
0 "terminal" "r"  "text" "opened" "yes"    "no"
1 "terminal" "w"  "text" "opened" "no"     "yes"
2 "terminal" "w"  "text" "opened" "no"     "yes"
3 "file"     "r"  "text" "closed" "yes"    "yes"

AFAICT, readLines should close the connection:

? readLines
function (con = stdin(), n = -1L, ok = TRUE, warn = TRUE, encoding =
"unknown",
   skipNul = FALSE)
{
   if (is.character(con)) {
       con <- file(con, "r")
       on.exit(close(con))
   }
   .Internal(readLines(con, n, ok, warn, encoding, skipNul))
}
<environment: namespace:base>

so maybe this just a symptom of an on.exit() issue?

Or am I missing something and it is possible to close the connection?

Thanks,
Gabor

______________________________________________
R-devel at r-project.org<mailto:R-devel at r-project.org> mailing list
https://stat.ethz.ch/mailman/listinfo/r-devel




--
Gabriel Becker, PhD
Scientist (Bioinformatics)
Genentech Research




--
Gabriel Becker, PhD
Scientist (Bioinformatics)
Genentech Research

   [[alternative HTML version deleted]]

______________________________________________
R-devel at r-project.org<mailto:R-devel at r-project.org> mailing list
https://stat.ethz.ch/mailman/listinfo/r-devel

	[[alternative HTML version deleted]]


From hpages at fredhutch.org  Thu Dec 14 23:05:49 2017
From: hpages at fredhutch.org (=?UTF-8?B?SGVydsOpIFBhZ8Oocw==?=)
Date: Thu, 14 Dec 2017 14:05:49 -0800
Subject: [Rd] format() doesn't propagate the dim and dimnames when
 underlying type of array is "list"
Message-ID: <fb7d06e4-5d83-70af-e5a9-3b17287334f7@fredhutch.org>

Hi,

Here is how to reproduce:

With a matrix of atomic type
----------------------------

   m1 <- matrix(1:12, ncol=3,
                dimnames=list(letters[1:4], LETTERS[1:3]))

   typeof(m1)
   # [1] "integer"

   m1
   #   A B  C
   # a 1 5  9
   # b 2 6 10
   # c 3 7 11
   # d 4 8 12

   format(m1)
   #   A    B    C
   # a " 1" " 5" " 9"
   # b " 2" " 6" "10"
   # c " 3" " 7" "11"
   # d " 4" " 8" "12"

==> dim and dimnames are propagated.

With a matrix of type "list"
----------------------------

   m2 <- matrix(rep(list(1:5, NULL, "AA"), 4), ncol=3,
                dimnames=list(letters[1:4], LETTERS[1:3]))

   typeof(m2)
   # [1] "list"

   m2
   #   A         B         C
   # a Integer,5 NULL      "AA"
   # b NULL      "AA"      Integer,5
   # c "AA"      Integer,5 NULL
   # d Integer,5 NULL      "AA"

   format(m2)
   # [1] "1, 2, 3, 4, 5" "NULL"          "AA"            "1, 2, 3, 4, 5"
   # [5] "NULL"          "AA"            "1, 2, 3, 4, 5" "NULL"
   # [9] "AA"            "1, 2, 3, 4, 5" "NULL"          "AA"

==> dim and dimnames are dropped!

The same thing seems to happen with arrays of arbitrary dimensions.

Thanks,
H.

-- 
Herv? Pag?s

Program in Computational Biology
Division of Public Health Sciences
Fred Hutchinson Cancer Research Center
1100 Fairview Ave. N, M1-B514
P.O. Box 19024
Seattle, WA 98109-1024

E-mail: hpages at fredhutch.org
Phone:  (206) 667-5791
Fax:    (206) 667-1319


From luke-tierney at uiowa.edu  Fri Dec 15 00:46:25 2017
From: luke-tierney at uiowa.edu (luke-tierney at uiowa.edu)
Date: Thu, 14 Dec 2017 17:46:25 -0600 (CST)
Subject: [Rd] cannot destroy connection (?) created by readLines in a
 tryCatch
In-Reply-To: <CABtg=KnTE+5n-4wQgty0yMVr1_vuUhvYgJ2fJGux143Pz-T0bQ@mail.gmail.com>
References: <CABtg=KnWVVSvq6dogNG9fnYWhTJNNadJcyaMDif0_EV7Gd_VaA@mail.gmail.com>
 <CADwqtCPwpURQqLs0NrX7Hg9CtEX4huLj+Z=DTKvzTb9bHX=vbA@mail.gmail.com>
 <CABtg=KnTE+5n-4wQgty0yMVr1_vuUhvYgJ2fJGux143Pz-T0bQ@mail.gmail.com>
Message-ID: <alpine.OSX.2.20.1712141746070.1706@lukes-macbook-air.local>

This has nothing to do with on.exit. It is an iteraction between where
the warning is signaled in 'file' and your _exiting_ warning handler.
This combination has the same issue,

tryCatch(file(tempfile(), "r"), warning = identity)
showConnections(all = TRUE)

as does

options(warn=2)
file(tempfile(), "r")
showConnections(all = TRUE)

I haven't looked at the internals of 'file' but it looks like
what it does is

     add an entry to connections table
     warn about non-existent file
     realize it has to fail
     remove the connections table entry
     signal an error

This misses the possibility that the warning can result in a jump
if it is turned into a error or handled by an exiting handler.
It's worth filing a bug report on 'file'.

It's not clear what you are really trying to do, but establishing
an _exiting_ handler for warnings is usually not what you
want. If you are trying to suppress warnings you need to use a
calling handler, e.g. via suppressWarnings. If you want to do
something more sophisticated that does not terminate the
computation on a warniing you can build on what suppressWarnigns
does.

Best,

luke

On Thu, 14 Dec 2017, G?bor Cs?rdi wrote:

> On Thu, Dec 14, 2017 at 7:56 PM, Gabriel Becker <gmbecker at ucdavis.edu> wrote:
>> Gabor,
>>
>> You can grab the connection and destroy it via getConnection and then a
>> standard close call.
>
> Yeah, that's often a possible workaround, but since this connection
> was opened by
> readLines() internally, I don't necessarily know which one it is. E.g.
> I might open multiple
> connections to the same file, so I can't choose based on the file name.
>
> Btw. this workaround seems to work for me:
>
> read_lines <- function(con, ...) {
>  if (is.character(con)) {
>    con <- file(con)
>    on.exit(close(con))
>  }
>  readLines(con, ...)
> }
>
> This is basically the same as readLines(), but on.exit() does its job here.
> That's another clue that it might be an on.exit() issue. Wild guess:
> on.exit() does not run if an internal function errors.
>
>> (it actually lists that it is "closed" already, but
>> still in the set of existing connections. I can't speak to that difference).
>
> It is closed but not destroyed.
>
> G.
>
>>> tryCatch(
>>
>> +   readLines(tempfile(), warn = FALSE)[1],
>>
>> +   error = function(e) NA,
>>
>> +   warning = function(w) NA
>>
>> + )
>>
>> [1] NA
>>
>>> rm(list=ls(all.names = TRUE))
>>
>>> gc()
>>
>>          used (Mb) gc trigger (Mb) max used (Mb)
>>
>> Ncells 257895 13.8     592000 31.7   416371 22.3
>>
>> Vcells 536411  4.1    8388608 64.0  1795667 13.7
>>
>>>
>>
>>> showConnections(all = TRUE)
>>
>>   description
>>
>> 0 "stdin"
>>
>> 1 "stdout"
>>
>> 2 "stderr"
>>
>> 3
>> "/var/folders/79/l_n_5qr152d2d9d9xs0591lh0000gn/T//RtmpZRcxmh/file128a13bffc77"
>>
>>   class      mode text   isopen   can read can write
>>
>> 0 "terminal" "r"  "text" "opened" "yes"    "no"
>>
>> 1 "terminal" "w"  "text" "opened" "no"     "yes"
>>
>> 2 "terminal" "w"  "text" "opened" "no"     "yes"
>>
>> 3 "file"     "r"  "text" "closed" "yes"    "yes"
>>
>>> con = getConnection(3)
>>
>>> con
>>
>> A connection with
>>
>> description
>> "/var/folders/79/l_n_5qr152d2d9d9xs0591lh0000gn/T//RtmpZRcxmh/file128a13bffc77"
>>
>> class       "file"
>>
>> mode        "r"
>>
>> text        "text"
>>
>> opened      "closed"
>>
>> can read    "yes"
>>
>> can write   "yes"
>>
>>> close(con)
>>
>>> showConnections(all=TRUE)
>>
>>   description class      mode text   isopen   can read can write
>>
>> 0 "stdin"     "terminal" "r"  "text" "opened" "yes"    "no"
>>
>> 1 "stdout"    "terminal" "w"  "text" "opened" "no"     "yes"
>>
>> 2 "stderr"    "terminal" "w"  "text" "opened" "no"     "yes"
>>
>>
>>
>> HTH,
>> ~G
>>
>> On Thu, Dec 14, 2017 at 10:02 AM, G?bor Cs?rdi <csardi.gabor at gmail.com>
>> wrote:
>>>
>>> Consider this code. This is R 3.4.2, but based on a quick look at the
>>> NEWS, this has not been fixed.
>>>
>>> tryCatch(
>>>   readLines(tempfile(), warn = FALSE)[1],
>>>   error = function(e) NA,
>>>   warning = function(w) NA
>>> )
>>>
>>> rm(list=ls(all.names = TRUE))
>>> gc()
>>>
>>> showConnections(all = TRUE)
>>>
>>> If you run it, you'll get a connection you cannot close(), i.e. the
>>> last showConnections() call prints:
>>>
>>> ? showConnections(all = TRUE)
>>>   description
>>> 0 "stdin"
>>> 1 "stdout"
>>> 2 "stderr"
>>> 3
>>> "/var/folders/59/0gkmw1yj2w7bf2dfc3jznv5w0000gn/T//Rtmpc7JqVS/filecc2044b2ccec"
>>>   class      mode text   isopen   can read can write
>>> 0 "terminal" "r"  "text" "opened" "yes"    "no"
>>> 1 "terminal" "w"  "text" "opened" "no"     "yes"
>>> 2 "terminal" "w"  "text" "opened" "no"     "yes"
>>> 3 "file"     "r"  "text" "closed" "yes"    "yes"
>>>
>>> AFAICT, readLines should close the connection:
>>>
>>> ? readLines
>>> function (con = stdin(), n = -1L, ok = TRUE, warn = TRUE, encoding =
>>> "unknown",
>>>     skipNul = FALSE)
>>> {
>>>     if (is.character(con)) {
>>>         con <- file(con, "r")
>>>         on.exit(close(con))
>>>     }
>>>     .Internal(readLines(con, n, ok, warn, encoding, skipNul))
>>> }
>>> <environment: namespace:base>
>>>
>>> so maybe this just a symptom of an on.exit() issue?
>>>
>>> Or am I missing something and it is possible to close the connection?
>>>
>>> Thanks,
>>> Gabor
>>>
>>> ______________________________________________
>>> R-devel at r-project.org mailing list
>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>
>>
>>
>>
>> --
>> Gabriel Becker, PhD
>> Scientist (Bioinformatics)
>> Genentech Research
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel

-- 
Luke Tierney
Ralph E. Wareham Professor of Mathematical Sciences
University of Iowa                  Phone:             319-335-3386
Department of Statistics and        Fax:               319-335-3017
    Actuarial Science
241 Schaeffer Hall                  email:   luke-tierney at uiowa.edu
Iowa City, IA 52242                 WWW:  http://www.stat.uiowa.edu

From csardi.gabor at gmail.com  Fri Dec 15 07:48:54 2017
From: csardi.gabor at gmail.com (=?UTF-8?B?R8OhYm9yIENzw6FyZGk=?=)
Date: Fri, 15 Dec 2017 06:48:54 +0000
Subject: [Rd] cannot destroy connection (?) created by readLines in a
	tryCatch
In-Reply-To: <alpine.OSX.2.20.1712141746070.1706@lukes-macbook-air.local>
References: <CABtg=KnWVVSvq6dogNG9fnYWhTJNNadJcyaMDif0_EV7Gd_VaA@mail.gmail.com>
 <CADwqtCPwpURQqLs0NrX7Hg9CtEX4huLj+Z=DTKvzTb9bHX=vbA@mail.gmail.com>
 <CABtg=KnTE+5n-4wQgty0yMVr1_vuUhvYgJ2fJGux143Pz-T0bQ@mail.gmail.com>
 <alpine.OSX.2.20.1712141746070.1706@lukes-macbook-air.local>
Message-ID: <CABtg=KkADSVkwsEN=nm_8Xs5eONABqfy9fZwVW__wcmzP_jS5Q@mail.gmail.com>

Thanks for tracking this down. Yeah, I should use suppressWarnings(),
you are right.
Although, readLines() might throw another warning, e.g. for incomplete
last lines,
and you don't necessarily want to suppress that.

TBH I am not sure why that warning is given:

? con <- file(tempfile())
? open(con)
Error in open.connection(con) : cannot open the connection
In addition: Warning message:
In open.connection(con) :
  cannot open file
'/var/folders/59/0gkmw1yj2w7bf2dfc3jznv5w0000gn/T//RtmpilJLXL/filed0ab5adb9a18':
No such file or directory

It seems that open() also throws an error, so why give the warning?
Because it is more specific?
Would it make sense to turn that warning into an error?

Gabor

On Thu, Dec 14, 2017 at 11:46 PM,  <luke-tierney at uiowa.edu> wrote:
> This has nothing to do with on.exit. It is an iteraction between where
> the warning is signaled in 'file' and your _exiting_ warning handler.
> This combination has the same issue,
>
> tryCatch(file(tempfile(), "r"), warning = identity)
> showConnections(all = TRUE)
>
> as does
>
> options(warn=2)
> file(tempfile(), "r")
> showConnections(all = TRUE)
>
> I haven't looked at the internals of 'file' but it looks like
> what it does is
>
>     add an entry to connections table
>     warn about non-existent file
>     realize it has to fail
>     remove the connections table entry
>     signal an error
>
> This misses the possibility that the warning can result in a jump
> if it is turned into a error or handled by an exiting handler.
> It's worth filing a bug report on 'file'.
>
> It's not clear what you are really trying to do, but establishing
> an _exiting_ handler for warnings is usually not what you
> want. If you are trying to suppress warnings you need to use a
> calling handler, e.g. via suppressWarnings. If you want to do
> something more sophisticated that does not terminate the
> computation on a warniing you can build on what suppressWarnigns
> does.
>
> Best,
>
> luke
>
>
> On Thu, 14 Dec 2017, G?bor Cs?rdi wrote:
>
>> On Thu, Dec 14, 2017 at 7:56 PM, Gabriel Becker <gmbecker at ucdavis.edu>
>> wrote:
>>>
>>> Gabor,
>>>
>>> You can grab the connection and destroy it via getConnection and then a
>>> standard close call.
>>
>>
>> Yeah, that's often a possible workaround, but since this connection
>> was opened by
>> readLines() internally, I don't necessarily know which one it is. E.g.
>> I might open multiple
>> connections to the same file, so I can't choose based on the file name.
>>
>> Btw. this workaround seems to work for me:
>>
>> read_lines <- function(con, ...) {
>>  if (is.character(con)) {
>>    con <- file(con)
>>    on.exit(close(con))
>>  }
>>  readLines(con, ...)
>> }
>>
>> This is basically the same as readLines(), but on.exit() does its job
>> here.
>> That's another clue that it might be an on.exit() issue. Wild guess:
>> on.exit() does not run if an internal function errors.
>>
>>> (it actually lists that it is "closed" already, but
>>> still in the set of existing connections. I can't speak to that
>>> difference).
>>
>>
>> It is closed but not destroyed.
>>
>> G.
>>
>>>> tryCatch(
>>>
>>>
>>> +   readLines(tempfile(), warn = FALSE)[1],
>>>
>>> +   error = function(e) NA,
>>>
>>> +   warning = function(w) NA
>>>
>>> + )
>>>
>>> [1] NA
>>>
>>>> rm(list=ls(all.names = TRUE))
>>>
>>>
>>>> gc()
>>>
>>>
>>>          used (Mb) gc trigger (Mb) max used (Mb)
>>>
>>> Ncells 257895 13.8     592000 31.7   416371 22.3
>>>
>>> Vcells 536411  4.1    8388608 64.0  1795667 13.7
>>>
>>>>
>>>
>>>> showConnections(all = TRUE)
>>>
>>>
>>>   description
>>>
>>> 0 "stdin"
>>>
>>> 1 "stdout"
>>>
>>> 2 "stderr"
>>>
>>> 3
>>>
>>> "/var/folders/79/l_n_5qr152d2d9d9xs0591lh0000gn/T//RtmpZRcxmh/file128a13bffc77"
>>>
>>>   class      mode text   isopen   can read can write
>>>
>>> 0 "terminal" "r"  "text" "opened" "yes"    "no"
>>>
>>> 1 "terminal" "w"  "text" "opened" "no"     "yes"
>>>
>>> 2 "terminal" "w"  "text" "opened" "no"     "yes"
>>>
>>> 3 "file"     "r"  "text" "closed" "yes"    "yes"
>>>
>>>> con = getConnection(3)
>>>
>>>
>>>> con
>>>
>>>
>>> A connection with
>>>
>>> description
>>>
>>> "/var/folders/79/l_n_5qr152d2d9d9xs0591lh0000gn/T//RtmpZRcxmh/file128a13bffc77"
>>>
>>> class       "file"
>>>
>>> mode        "r"
>>>
>>> text        "text"
>>>
>>> opened      "closed"
>>>
>>> can read    "yes"
>>>
>>> can write   "yes"
>>>
>>>> close(con)
>>>
>>>
>>>> showConnections(all=TRUE)
>>>
>>>
>>>   description class      mode text   isopen   can read can write
>>>
>>> 0 "stdin"     "terminal" "r"  "text" "opened" "yes"    "no"
>>>
>>> 1 "stdout"    "terminal" "w"  "text" "opened" "no"     "yes"
>>>
>>> 2 "stderr"    "terminal" "w"  "text" "opened" "no"     "yes"
>>>
>>>
>>>
>>> HTH,
>>> ~G
>>>
>>> On Thu, Dec 14, 2017 at 10:02 AM, G?bor Cs?rdi <csardi.gabor at gmail.com>
>>> wrote:
>>>>
>>>>
>>>> Consider this code. This is R 3.4.2, but based on a quick look at the
>>>> NEWS, this has not been fixed.
>>>>
>>>> tryCatch(
>>>>   readLines(tempfile(), warn = FALSE)[1],
>>>>   error = function(e) NA,
>>>>   warning = function(w) NA
>>>> )
>>>>
>>>> rm(list=ls(all.names = TRUE))
>>>> gc()
>>>>
>>>> showConnections(all = TRUE)
>>>>
>>>> If you run it, you'll get a connection you cannot close(), i.e. the
>>>> last showConnections() call prints:
>>>>
>>>> ? showConnections(all = TRUE)
>>>>   description
>>>> 0 "stdin"
>>>> 1 "stdout"
>>>> 2 "stderr"
>>>> 3
>>>>
>>>> "/var/folders/59/0gkmw1yj2w7bf2dfc3jznv5w0000gn/T//Rtmpc7JqVS/filecc2044b2ccec"
>>>>   class      mode text   isopen   can read can write
>>>> 0 "terminal" "r"  "text" "opened" "yes"    "no"
>>>> 1 "terminal" "w"  "text" "opened" "no"     "yes"
>>>> 2 "terminal" "w"  "text" "opened" "no"     "yes"
>>>> 3 "file"     "r"  "text" "closed" "yes"    "yes"
>>>>
>>>> AFAICT, readLines should close the connection:
>>>>
>>>> ? readLines
>>>> function (con = stdin(), n = -1L, ok = TRUE, warn = TRUE, encoding =
>>>> "unknown",
>>>>     skipNul = FALSE)
>>>> {
>>>>     if (is.character(con)) {
>>>>         con <- file(con, "r")
>>>>         on.exit(close(con))
>>>>     }
>>>>     .Internal(readLines(con, n, ok, warn, encoding, skipNul))
>>>> }
>>>> <environment: namespace:base>
>>>>
>>>> so maybe this just a symptom of an on.exit() issue?
>>>>
>>>> Or am I missing something and it is possible to close the connection?
>>>>
>>>> Thanks,
>>>> Gabor
>>>>
>>>> ______________________________________________
>>>> R-devel at r-project.org mailing list
>>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>>
>>>
>>>
>>>
>>>
>>> --
>>> Gabriel Becker, PhD
>>> Scientist (Bioinformatics)
>>> Genentech Research
>>
>>
>> ______________________________________________
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel
>
>
> --
> Luke Tierney
> Ralph E. Wareham Professor of Mathematical Sciences
> University of Iowa                  Phone:             319-335-3386
> Department of Statistics and        Fax:               319-335-3017
>    Actuarial Science
> 241 Schaeffer Hall                  email:   luke-tierney at uiowa.edu
> Iowa City, IA 52242                 WWW:  http://www.stat.uiowa.edu


From henrik.bengtsson at gmail.com  Fri Dec 15 14:29:45 2017
From: henrik.bengtsson at gmail.com (Henrik Bengtsson)
Date: Fri, 15 Dec 2017 05:29:45 -0800
Subject: [Rd] Milestone: 12,000 packages on CRAN
Message-ID: <CAFDcVCT05qrhA2cLtccTT4OjJqsr39VEDfQihU+kKN5+B=B6=A@mail.gmail.com>

CRAN reached 12,000 packages [1] today (December 15, 2017).

A huge thank you to the CRAN team!

Milestones:

2017-12-15 12000 pkgs (+6.1/day over 165 days) 6910 mnts (+3.2/day)
2017-07-04 11000 pkgs (+6.3/day over 159 days) 6377 mnts (+3.3/day)
2017-01-27 10000 pkgs (+6.3/day over 158 days) 5845 mnts (+3.5/day)
2016-08-22 9000 pkgs (+5.7/day over 175 days) 5289 mnts (+5.8/day)
2016-02-29 8000 pkgs (+5.0/day over 201 days) 4279 mnts (+0.7/day)
2015-08-12 7000 pkgs (+3.4/day over 287 days) 4130 mnts (+2.4/day)
2014-10-29 6000 pkgs (+3.0/day over 335 days) 3444 mnts (+1.6/day)
2013-11-08 5000 pkgs (+2.7/day over 442 days) 2900 mnts (+1.2/day)
2012-08-23 4000 pkgs (+2.1/day over 469 days) 2350 mnts
2011-05-12 3000 pkgs (+1.7/day over 585 days)
2009-10-04 2000 pkgs (+1.1/day over 906 days)
2007-04-12 1000 pkgs
2004-10-01 500 pkgs
2003-04-01 250 pkgs
2002-09-17 68 pkgs
1997-04-23 12 pkgs

These data are for CRAN only [1-14]. There are many more packages
elsewhere, e.g. Bioconductor, GitHub, R-Forge etc.

[1] https://cran.r-project.org/web/packages/
[2] https://en.wikipedia.org/wiki/R_(programming_language)#Milestones
[3] https://www.r-pkg.org/
[4] Legacy data collected privately
[5] https://stat.ethz.ch/pipermail/r-devel/2007-April/045359.html
[6] https://stat.ethz.ch/pipermail/r-devel/2009-October/055049.html
[7] https://stat.ethz.ch/pipermail/r-devel/2011-May/061002.html
[8] https://stat.ethz.ch/pipermail/r-devel/2012-August/064675.html
[9] https://stat.ethz.ch/pipermail/r-devel/2013-November/067935.html
[10] https://stat.ethz.ch/pipermail/r-devel/2014-October/069997.html
[11] https://stat.ethz.ch/pipermail/r-package-devel/2015q3/000393.html
[12] https://stat.ethz.ch/pipermail/r-devel/2016-February/072388.html
[13] https://stat.ethz.ch/pipermail/r-devel/2016-August/073011.html
[14] Local CRAN mirror data (https://cran.r-project.org/mirror-howto.html)

All the best,

Henrik
(just one of many)


From kevin.r.coombes at gmail.com  Fri Dec 15 17:58:38 2017
From: kevin.r.coombes at gmail.com (Kevin Coombes)
Date: Fri, 15 Dec 2017 11:58:38 -0500
Subject: [Rd] Milestone: 12,000 packages on CRAN
In-Reply-To: <CAFDcVCT05qrhA2cLtccTT4OjJqsr39VEDfQihU+kKN5+B=B6=A@mail.gmail.com>
References: <CAFDcVCT05qrhA2cLtccTT4OjJqsr39VEDfQihU+kKN5+B=B6=A@mail.gmail.com>
Message-ID: <73d498b9-460c-7ae2-4fb2-3f51072c25d7@gmail.com>

Cool.

Since I got a package accepted overnight, I'm going to take credit for 
being #12,000....

It does look like the apparent exponential growth in packages may have 
finally come to an end however, collapsing back to something nearly 
linear.? Note that under an exponential growth model, CRAN will reach 
15,000 packages at about Thanksgiving 2018. Under a now-linear model, 
that milestone won't occur until some time in March 2019.? Remember, you 
read it here first.

 ? Kevin

On 12/15/2017 8:29 AM, Henrik Bengtsson wrote:
> CRAN reached 12,000 packages [1] today (December 15, 2017).
>
> A huge thank you to the CRAN team!
>
> Milestones:
>
> 2017-12-15 12000 pkgs (+6.1/day over 165 days) 6910 mnts (+3.2/day)
> 2017-07-04 11000 pkgs (+6.3/day over 159 days) 6377 mnts (+3.3/day)
> 2017-01-27 10000 pkgs (+6.3/day over 158 days) 5845 mnts (+3.5/day)
> 2016-08-22 9000 pkgs (+5.7/day over 175 days) 5289 mnts (+5.8/day)
> 2016-02-29 8000 pkgs (+5.0/day over 201 days) 4279 mnts (+0.7/day)
> 2015-08-12 7000 pkgs (+3.4/day over 287 days) 4130 mnts (+2.4/day)
> 2014-10-29 6000 pkgs (+3.0/day over 335 days) 3444 mnts (+1.6/day)
> 2013-11-08 5000 pkgs (+2.7/day over 442 days) 2900 mnts (+1.2/day)
> 2012-08-23 4000 pkgs (+2.1/day over 469 days) 2350 mnts
> 2011-05-12 3000 pkgs (+1.7/day over 585 days)
> 2009-10-04 2000 pkgs (+1.1/day over 906 days)
> 2007-04-12 1000 pkgs
> 2004-10-01 500 pkgs
> 2003-04-01 250 pkgs
> 2002-09-17 68 pkgs
> 1997-04-23 12 pkgs
>
> These data are for CRAN only [1-14]. There are many more packages
> elsewhere, e.g. Bioconductor, GitHub, R-Forge etc.
>
> [1] https://cran.r-project.org/web/packages/
> [2] https://en.wikipedia.org/wiki/R_(programming_language)#Milestones
> [3] https://www.r-pkg.org/
> [4] Legacy data collected privately
> [5] https://stat.ethz.ch/pipermail/r-devel/2007-April/045359.html
> [6] https://stat.ethz.ch/pipermail/r-devel/2009-October/055049.html
> [7] https://stat.ethz.ch/pipermail/r-devel/2011-May/061002.html
> [8] https://stat.ethz.ch/pipermail/r-devel/2012-August/064675.html
> [9] https://stat.ethz.ch/pipermail/r-devel/2013-November/067935.html
> [10] https://stat.ethz.ch/pipermail/r-devel/2014-October/069997.html
> [11] https://stat.ethz.ch/pipermail/r-package-devel/2015q3/000393.html
> [12] https://stat.ethz.ch/pipermail/r-devel/2016-February/072388.html
> [13] https://stat.ethz.ch/pipermail/r-devel/2016-August/073011.html
> [14] Local CRAN mirror data (https://cran.r-project.org/mirror-howto.html)
>
> All the best,
>
> Henrik
> (just one of many)
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


---
This email has been checked for viruses by Avast antivirus software.
https://www.avast.com/antivirus


From suharto_anggono at yahoo.com  Sat Dec 16 17:09:04 2017
From: suharto_anggono at yahoo.com (Suharto Anggono Suharto Anggono)
Date: Sat, 16 Dec 2017 16:09:04 +0000 (UTC)
Subject: [Rd] Nice names in deparse
References: <841616584.396777.1513440544763.ref@mail.yahoo.com>
Message-ID: <841616584.396777.1513440544763@mail.yahoo.com>

Tags (argument names) in call to 'list' becomes names of the result. It is not necessarily so with call to 'c'. The default method of 'c' has 'recursive' and 'use.names' arguments.

In R devel r73778, with
x <- 0; names(x) <- "recursive"? ,
dput(x)
or even
dput(x, control = "all")
gives
c(recursive = 0)
However, actual result of c(recursive = 0) is NULL.

Also with
x <- 0; names(x) <- "recursive"? ,
dput(x, control = c("keepNA", "keepInteger", "showAttributes"))
in R devel r73778
gives
structure(c(0), .Names = "recursive")
The 'control' is suggested by an example for output as in R < 3.5.0. However, the output is slightly different from
dput(x)
in R 3.3.2:
structure(0, .Names = "recursive")


Part of NEWS item related with "niceNames" control option:
as.character(list( c (one = 1))) now includes the name, as as.character(list(list(one = 1))) has always done.

Please reconsider.
As
as.numeric(list(c(one = 1)))
gives
1 ,
I expect that
as.character(list(c(one = "1")))
gives
"1" .
It does in R devel r73778.
Why does
as.character(list(c(one = 1)))
give
"c(one = 1)" ?

as.numeric(list(c(one = "1")))
gives
1 .

list(list(one = 1))
is not quite the same.
as.numeric(list(list(one = 1)))
gives
NA .


From luke-tierney at uiowa.edu  Sat Dec 16 21:09:50 2017
From: luke-tierney at uiowa.edu (luke-tierney at uiowa.edu)
Date: Sat, 16 Dec 2017 14:09:50 -0600 (CST)
Subject: [Rd] cannot destroy connection (?) created by readLines in a
 tryCatch
In-Reply-To: <CABtg=KkADSVkwsEN=nm_8Xs5eONABqfy9fZwVW__wcmzP_jS5Q@mail.gmail.com>
References: <CABtg=KnWVVSvq6dogNG9fnYWhTJNNadJcyaMDif0_EV7Gd_VaA@mail.gmail.com>
 <CADwqtCPwpURQqLs0NrX7Hg9CtEX4huLj+Z=DTKvzTb9bHX=vbA@mail.gmail.com>
 <CABtg=KnTE+5n-4wQgty0yMVr1_vuUhvYgJ2fJGux143Pz-T0bQ@mail.gmail.com>
 <alpine.OSX.2.20.1712141746070.1706@lukes-macbook-air.local>
 <CABtg=KkADSVkwsEN=nm_8Xs5eONABqfy9fZwVW__wcmzP_jS5Q@mail.gmail.com>
Message-ID: <alpine.DEB.2.20.1712161407190.8786@luke-Latitude>

On Fri, 15 Dec 2017, G?bor Cs?rdi wrote:

> Thanks for tracking this down. Yeah, I should use suppressWarnings(),
> you are right.
> Although, readLines() might throw another warning, e.g. for incomplete
> last lines,

Do whatever makes sense for your context.

My main point is: if you want your computation to be able to handle a
warning and possibly continue after that then you need to use a
calling handler, not an exiting one.

Best,

luke

> and you don't necessarily want to suppress that.
>
> TBH I am not sure why that warning is given:
>
> ? con <- file(tempfile())
> ? open(con)
> Error in open.connection(con) : cannot open the connection
> In addition: Warning message:
> In open.connection(con) :
>  cannot open file
> '/var/folders/59/0gkmw1yj2w7bf2dfc3jznv5w0000gn/T//RtmpilJLXL/filed0ab5adb9a18':
> No such file or directory
>
> It seems that open() also throws an error, so why give the warning?
> Because it is more specific?
> Would it make sense to turn that warning into an error?
>
> Gabor
>
> On Thu, Dec 14, 2017 at 11:46 PM,  <luke-tierney at uiowa.edu> wrote:
>> This has nothing to do with on.exit. It is an iteraction between where
>> the warning is signaled in 'file' and your _exiting_ warning handler.
>> This combination has the same issue,
>>
>> tryCatch(file(tempfile(), "r"), warning = identity)
>> showConnections(all = TRUE)
>>
>> as does
>>
>> options(warn=2)
>> file(tempfile(), "r")
>> showConnections(all = TRUE)
>>
>> I haven't looked at the internals of 'file' but it looks like
>> what it does is
>>
>>     add an entry to connections table
>>     warn about non-existent file
>>     realize it has to fail
>>     remove the connections table entry
>>     signal an error
>>
>> This misses the possibility that the warning can result in a jump
>> if it is turned into a error or handled by an exiting handler.
>> It's worth filing a bug report on 'file'.
>>
>> It's not clear what you are really trying to do, but establishing
>> an _exiting_ handler for warnings is usually not what you
>> want. If you are trying to suppress warnings you need to use a
>> calling handler, e.g. via suppressWarnings. If you want to do
>> something more sophisticated that does not terminate the
>> computation on a warniing you can build on what suppressWarnigns
>> does.
>>
>> Best,
>>
>> luke
>>
>>
>> On Thu, 14 Dec 2017, G?bor Cs?rdi wrote:
>>
>>> On Thu, Dec 14, 2017 at 7:56 PM, Gabriel Becker <gmbecker at ucdavis.edu>
>>> wrote:
>>>>
>>>> Gabor,
>>>>
>>>> You can grab the connection and destroy it via getConnection and then a
>>>> standard close call.
>>>
>>>
>>> Yeah, that's often a possible workaround, but since this connection
>>> was opened by
>>> readLines() internally, I don't necessarily know which one it is. E.g.
>>> I might open multiple
>>> connections to the same file, so I can't choose based on the file name.
>>>
>>> Btw. this workaround seems to work for me:
>>>
>>> read_lines <- function(con, ...) {
>>>  if (is.character(con)) {
>>>    con <- file(con)
>>>    on.exit(close(con))
>>>  }
>>>  readLines(con, ...)
>>> }
>>>
>>> This is basically the same as readLines(), but on.exit() does its job
>>> here.
>>> That's another clue that it might be an on.exit() issue. Wild guess:
>>> on.exit() does not run if an internal function errors.
>>>
>>>> (it actually lists that it is "closed" already, but
>>>> still in the set of existing connections. I can't speak to that
>>>> difference).
>>>
>>>
>>> It is closed but not destroyed.
>>>
>>> G.
>>>
>>>>> tryCatch(
>>>>
>>>>
>>>> +   readLines(tempfile(), warn = FALSE)[1],
>>>>
>>>> +   error = function(e) NA,
>>>>
>>>> +   warning = function(w) NA
>>>>
>>>> + )
>>>>
>>>> [1] NA
>>>>
>>>>> rm(list=ls(all.names = TRUE))
>>>>
>>>>
>>>>> gc()
>>>>
>>>>
>>>>          used (Mb) gc trigger (Mb) max used (Mb)
>>>>
>>>> Ncells 257895 13.8     592000 31.7   416371 22.3
>>>>
>>>> Vcells 536411  4.1    8388608 64.0  1795667 13.7
>>>>
>>>>>
>>>>
>>>>> showConnections(all = TRUE)
>>>>
>>>>
>>>>   description
>>>>
>>>> 0 "stdin"
>>>>
>>>> 1 "stdout"
>>>>
>>>> 2 "stderr"
>>>>
>>>> 3
>>>>
>>>> "/var/folders/79/l_n_5qr152d2d9d9xs0591lh0000gn/T//RtmpZRcxmh/file128a13bffc77"
>>>>
>>>>   class      mode text   isopen   can read can write
>>>>
>>>> 0 "terminal" "r"  "text" "opened" "yes"    "no"
>>>>
>>>> 1 "terminal" "w"  "text" "opened" "no"     "yes"
>>>>
>>>> 2 "terminal" "w"  "text" "opened" "no"     "yes"
>>>>
>>>> 3 "file"     "r"  "text" "closed" "yes"    "yes"
>>>>
>>>>> con = getConnection(3)
>>>>
>>>>
>>>>> con
>>>>
>>>>
>>>> A connection with
>>>>
>>>> description
>>>>
>>>> "/var/folders/79/l_n_5qr152d2d9d9xs0591lh0000gn/T//RtmpZRcxmh/file128a13bffc77"
>>>>
>>>> class       "file"
>>>>
>>>> mode        "r"
>>>>
>>>> text        "text"
>>>>
>>>> opened      "closed"
>>>>
>>>> can read    "yes"
>>>>
>>>> can write   "yes"
>>>>
>>>>> close(con)
>>>>
>>>>
>>>>> showConnections(all=TRUE)
>>>>
>>>>
>>>>   description class      mode text   isopen   can read can write
>>>>
>>>> 0 "stdin"     "terminal" "r"  "text" "opened" "yes"    "no"
>>>>
>>>> 1 "stdout"    "terminal" "w"  "text" "opened" "no"     "yes"
>>>>
>>>> 2 "stderr"    "terminal" "w"  "text" "opened" "no"     "yes"
>>>>
>>>>
>>>>
>>>> HTH,
>>>> ~G
>>>>
>>>> On Thu, Dec 14, 2017 at 10:02 AM, G?bor Cs?rdi <csardi.gabor at gmail.com>
>>>> wrote:
>>>>>
>>>>>
>>>>> Consider this code. This is R 3.4.2, but based on a quick look at the
>>>>> NEWS, this has not been fixed.
>>>>>
>>>>> tryCatch(
>>>>>   readLines(tempfile(), warn = FALSE)[1],
>>>>>   error = function(e) NA,
>>>>>   warning = function(w) NA
>>>>> )
>>>>>
>>>>> rm(list=ls(all.names = TRUE))
>>>>> gc()
>>>>>
>>>>> showConnections(all = TRUE)
>>>>>
>>>>> If you run it, you'll get a connection you cannot close(), i.e. the
>>>>> last showConnections() call prints:
>>>>>
>>>>> ? showConnections(all = TRUE)
>>>>>   description
>>>>> 0 "stdin"
>>>>> 1 "stdout"
>>>>> 2 "stderr"
>>>>> 3
>>>>>
>>>>> "/var/folders/59/0gkmw1yj2w7bf2dfc3jznv5w0000gn/T//Rtmpc7JqVS/filecc2044b2ccec"
>>>>>   class      mode text   isopen   can read can write
>>>>> 0 "terminal" "r"  "text" "opened" "yes"    "no"
>>>>> 1 "terminal" "w"  "text" "opened" "no"     "yes"
>>>>> 2 "terminal" "w"  "text" "opened" "no"     "yes"
>>>>> 3 "file"     "r"  "text" "closed" "yes"    "yes"
>>>>>
>>>>> AFAICT, readLines should close the connection:
>>>>>
>>>>> ? readLines
>>>>> function (con = stdin(), n = -1L, ok = TRUE, warn = TRUE, encoding =
>>>>> "unknown",
>>>>>     skipNul = FALSE)
>>>>> {
>>>>>     if (is.character(con)) {
>>>>>         con <- file(con, "r")
>>>>>         on.exit(close(con))
>>>>>     }
>>>>>     .Internal(readLines(con, n, ok, warn, encoding, skipNul))
>>>>> }
>>>>> <environment: namespace:base>
>>>>>
>>>>> so maybe this just a symptom of an on.exit() issue?
>>>>>
>>>>> Or am I missing something and it is possible to close the connection?
>>>>>
>>>>> Thanks,
>>>>> Gabor
>>>>>
>>>>> ______________________________________________
>>>>> R-devel at r-project.org mailing list
>>>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>>>
>>>>
>>>>
>>>>
>>>>
>>>> --
>>>> Gabriel Becker, PhD
>>>> Scientist (Bioinformatics)
>>>> Genentech Research
>>>
>>>
>>> ______________________________________________
>>> R-devel at r-project.org mailing list
>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>
>>
>> --
>> Luke Tierney
>> Ralph E. Wareham Professor of Mathematical Sciences
>> University of Iowa                  Phone:             319-335-3386
>> Department of Statistics and        Fax:               319-335-3017
>>    Actuarial Science
>> 241 Schaeffer Hall                  email:   luke-tierney at uiowa.edu
>> Iowa City, IA 52242                 WWW:  http://www.stat.uiowa.edu
>

-- 
Luke Tierney
Ralph E. Wareham Professor of Mathematical Sciences
University of Iowa                  Phone:             319-335-3386
Department of Statistics and        Fax:               319-335-3017
    Actuarial Science
241 Schaeffer Hall                  email:   luke-tierney at uiowa.edu
Iowa City, IA 52242                 WWW:  http://www.stat.uiowa.edu

From kmbell56 at gmail.com  Sat Dec 16 21:28:10 2017
From: kmbell56 at gmail.com (Kenny Bell)
Date: Sun, 17 Dec 2017 09:28:10 +1300
Subject: [Rd] OpenBLAS in everyday R?
Message-ID: <CAPekMCmNdaQdqJzDLJfNQb=T2X9TjhnZ-Ad9Gd0n6d1ku+Kk=A@mail.gmail.com>

Hi R-devel list,

OpenBLAS is readily available for unix-likes:

https://cloud.r-project.org/web/packages/gcbd/vignettes/gcbd.pdf

However, my questions are:

1) Would R-devel consider using OpenBLAS for the main distribution of R for
all platforms including Windows?
2) If so, would R-devel set the default multi-thread level to the number of
(real) cores on a machine?

My sense is there're a lot of wasted resources on laptops and personal
desktops around the world that could be utilised by such a switch. I
believe most unix-like users don't know about OpenBLAS and are blissfully
ignorant of the available speed gains. It seems to be quite difficult for a
typical Windows user to get this done today.

Thanks heaps,
Kenny

	[[alternative HTML version deleted]]


From edd at debian.org  Sat Dec 16 22:01:22 2017
From: edd at debian.org (Dirk Eddelbuettel)
Date: Sat, 16 Dec 2017 15:01:22 -0600
Subject: [Rd] OpenBLAS in everyday R?
In-Reply-To: <CAPekMCmNdaQdqJzDLJfNQb=T2X9TjhnZ-Ad9Gd0n6d1ku+Kk=A@mail.gmail.com>
References: <CAPekMCmNdaQdqJzDLJfNQb=T2X9TjhnZ-Ad9Gd0n6d1ku+Kk=A@mail.gmail.com>
Message-ID: <23093.35234.227393.513580@bud.eddelbuettel.com>


Kenny,

On 17 December 2017 at 09:28, Kenny Bell wrote:
| Hi R-devel list,
| 
| OpenBLAS is readily available for unix-likes:
| 
| https://cloud.r-project.org/web/packages/gcbd/vignettes/gcbd.pdf

Please consider re-reading this vignette of mine. BLAS is an interface,
OpenBLAS is but one implementation.  R has allowed you to switch between
different implementations for a long time (if you used a shared library
build), and illustrating / measuring the possible performance differences is
the whole point of the gcbd benchmarking package.
 
| However, my questions are:
| 
| 1) Would R-devel consider using OpenBLAS for the main distribution of R for
| all platforms including Windows?
| 2) If so, would R-devel set the default multi-thread level to the number of
| (real) cores on a machine?

It's complicated. If you fork at the process-level (with package parallel or
one of the many other mechansim) and then also used multi-threaded BLAS you
can starve yourself for resources quickly.
 
| My sense is there're a lot of wasted resources on laptops and personal
| desktops around the world that could be utilised by such a switch. I
| believe most unix-like users don't know about OpenBLAS and are blissfully
| ignorant of the available speed gains. It seems to be quite difficult for a
| typical Windows user to get this done today.

Many things a developer / power-user would do are very difficult on
Windows. It is one of the charms of the platform. On the other hand you do
get a few solitaire games so I guess everybody is happy.

Dirk
 
| Thanks heaps,
| Kenny
| 
| 	[[alternative HTML version deleted]]
| 
| ______________________________________________
| R-devel at r-project.org mailing list
| https://stat.ethz.ch/mailman/listinfo/r-devel

-- 
http://dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org


From keith.ohara at nyu.edu  Sat Dec 16 23:50:16 2017
From: keith.ohara at nyu.edu (Keith O'Hara)
Date: Sat, 16 Dec 2017 17:50:16 -0500
Subject: [Rd] OpenBLAS in everyday R?
In-Reply-To: <23093.35234.227393.513580@bud.eddelbuettel.com>
References: <CAPekMCmNdaQdqJzDLJfNQb=T2X9TjhnZ-Ad9Gd0n6d1ku+Kk=A@mail.gmail.com>
 <23093.35234.227393.513580@bud.eddelbuettel.com>
Message-ID: <CAB7vNPxm2ikpoj8HFzpwkckWQ-dJAQQ3NqO4qiT4tR1DBNBHVQ@mail.gmail.com>

On point 1):

The standard approach seems to favor the reference BLAS for reasons other
than speed.

For example, vecLib, Apple's multi-threaded BLAS library, is not the
default choice for macOS binaries due to concerns about 'precision'. See:

https://cloud.r-project.org/bin/macosx/RMacOSX-FAQ.html#Whic
h-BLAS-is-used-and-how-can-it-be-changed_003f

This doesn't appear to be Mac- or vecLib-specifc. R-Core seem wary of
non-reference BLAS implementations for several reasons:

'External BLAS implementations often make less use of extended-precision
floating-point registers and will almost certainly re-order computations.
This can result in less accuracy than using the internal BLAS, and may
result in different solutions, e.g. different signs in SVD and
eigendecompositions.'

https://cran.r-project.org/doc/manuals/r-devel/R-admin.html#BLAS

I'm not sure how pervasive a problem this is, though.

Keith


On Sat, Dec 16, 2017 at 4:01 PM, Dirk Eddelbuettel <edd at debian.org> wrote:

>
> Kenny,
>
> On 17 December 2017 at 09:28, Kenny Bell wrote:
> | Hi R-devel list,
> |
> | OpenBLAS is readily available for unix-likes:
> |
> | https://cloud.r-project.org/web/packages/gcbd/vignettes/gcbd.pdf
>
> Please consider re-reading this vignette of mine. BLAS is an interface,
> OpenBLAS is but one implementation.  R has allowed you to switch between
> different implementations for a long time (if you used a shared library
> build), and illustrating / measuring the possible performance differences
> is
> the whole point of the gcbd benchmarking package.
>
> | However, my questions are:
> |
> | 1) Would R-devel consider using OpenBLAS for the main distribution of R
> for
> | all platforms including Windows?
> | 2) If so, would R-devel set the default multi-thread level to the number
> of
> | (real) cores on a machine?
>
> It's complicated. If you fork at the process-level (with package parallel
> or
> one of the many other mechansim) and then also used multi-threaded BLAS you
> can starve yourself for resources quickly.
>
> | My sense is there're a lot of wasted resources on laptops and personal
> | desktops around the world that could be utilised by such a switch. I
> | believe most unix-like users don't know about OpenBLAS and are blissfully
> | ignorant of the available speed gains. It seems to be quite difficult
> for a
> | typical Windows user to get this done today.
>
> Many things a developer / power-user would do are very difficult on
> Windows. It is one of the charms of the platform. On the other hand you do
> get a few solitaire games so I guess everybody is happy.
>
> Dirk
>
> | Thanks heaps,
> | Kenny
> |
> |       [[alternative HTML version deleted]]
> |
> | ______________________________________________
> | R-devel at r-project.org mailing list
> | https://stat.ethz.ch/mailman/listinfo/r-devel
>
> --
> http://dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>

	[[alternative HTML version deleted]]


From kmbell56 at gmail.com  Sat Dec 16 23:53:59 2017
From: kmbell56 at gmail.com (Kenny Bell)
Date: Sun, 17 Dec 2017 11:53:59 +1300
Subject: [Rd] OpenBLAS in everyday R?
Message-ID: <CAPekMCnBH8QzbzZ8MdbY2KKa+joyJuVAoXvjCC=Om+CGCJRt3A@mail.gmail.com>

On Sun, Dec 17, 2017 at 10:01 AM, Dirk Eddelbuettel <edd at debian.org> wrote:

>
> Kenny,
>
> On 17 December 2017 at 09:28, Kenny Bell wrote:
> | Hi R-devel list,
> |
> | OpenBLAS is readily available for unix-likes:
> |
> | https://cloud.r-project.org/web/packages/gcbd/vignettes/gcbd.pdf
>
> Please consider re-reading this vignette of mine. BLAS is an interface,
> OpenBLAS is but one implementation.  R has allowed you to switch between
> different implementations for a long time (if you used a shared library
> build), and illustrating / measuring the possible performance differences
> is
> the whole point of the gcbd benchmarking package.
>

Understood. To be clear, my suggestion is to change the *default* BLAS
implementation to multithreaded OpenBLAS.


> | However, my questions are:
> |
> | 1) Would R-devel consider using OpenBLAS for the main distribution of R
> for
> | all platforms including Windows?
> | 2) If so, would R-devel set the default multi-thread level to the number
> of
> | (real) cores on a machine?
>
> It's complicated. If you fork at the process-level (with package parallel
> or
> one of the many other mechansim) and then also used multi-threaded BLAS you
> can starve yourself for resources quickly.
>
>
This indeed was my experience if not being careful when using MRO, which
also has a multithreaded algebra library as the default. However, the
overall speed benefits far outweighed the costs. MRO helped to overcome
this problem with an interface to change the number of threads to use. In
MRO, it is on the user to switch this before using any explicit parallel
functionality. Another question, does using multithreaded OpenBLAS mess
with RcppParallel?


> | My sense is there're a lot of wasted resources on laptops and personal
> | desktops around the world that could be utilised by such a switch. I
> | believe most unix-like users don't know about OpenBLAS and are blissfully
> | ignorant of the available speed gains. It seems to be quite difficult
> for a
> | typical Windows user to get this done today.
>
> Many things a developer / power-user would do are very difficult on
> Windows. It is one of the charms of the platform. On the other hand you do
> get a few solitaire games so I guess everybody is happy.
>
> Dirk
>
> | Thanks heaps,
> | Kenny
> |
> |       [[alternative HTML version deleted]]
> |
> | ______________________________________________
> | R-devel at r-project.org mailing list
> | https://stat.ethz.ch/mailman/listinfo/r-devel
>
> --
> http://dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org
>

	[[alternative HTML version deleted]]


From kmbell56 at gmail.com  Sun Dec 17 00:11:32 2017
From: kmbell56 at gmail.com (Kenny Bell)
Date: Sun, 17 Dec 2017 12:11:32 +1300
Subject: [Rd] OpenBLAS in everyday R?
In-Reply-To: <CAB7vNPxm2ikpoj8HFzpwkckWQ-dJAQQ3NqO4qiT4tR1DBNBHVQ@mail.gmail.com>
References: <CAPekMCmNdaQdqJzDLJfNQb=T2X9TjhnZ-Ad9Gd0n6d1ku+Kk=A@mail.gmail.com>
 <23093.35234.227393.513580@bud.eddelbuettel.com>
 <CAB7vNPxm2ikpoj8HFzpwkckWQ-dJAQQ3NqO4qiT4tR1DBNBHVQ@mail.gmail.com>
Message-ID: <CAPekMC=Ohp+kCPYcB5mxMJg4L5iJfJEtAvfp+rSsKwgdkg7i8A@mail.gmail.com>

It seems that reproducibility across systems is also an issue with
multithreaded BLASes:

https://hal.archives-ouvertes.fr/hal-01202396/file/exblas.pdf

On Sun, Dec 17, 2017 at 11:50 AM, Keith O'Hara <keith.ohara at nyu.edu> wrote:

> On point 1):
>
> The standard approach seems to favor the reference BLAS for reasons other
> than speed.
>
> For example, vecLib, Apple's multi-threaded BLAS library, is not the
> default choice for macOS binaries due to concerns about 'precision'. See:
>
> https://cloud.r-project.org/bin/macosx/RMacOSX-FAQ.html#Whic
> h-BLAS-is-used-and-how-can-it-be-changed_003f
>
> This doesn't appear to be Mac- or vecLib-specifc. R-Core seem wary of
> non-reference BLAS implementations for several reasons:
>
> 'External BLAS implementations often make less use of extended-precision
> floating-point registers and will almost certainly re-order computations.
> This can result in less accuracy than using the internal BLAS, and may
> result in different solutions, e.g. different signs in SVD and
> eigendecompositions.'
>
> https://cran.r-project.org/doc/manuals/r-devel/R-admin.html#BLAS
>
> I'm not sure how pervasive a problem this is, though.
>
> Keith
>
>
> On Sat, Dec 16, 2017 at 4:01 PM, Dirk Eddelbuettel <edd at debian.org> wrote:
>
>>
>> Kenny,
>>
>> On 17 December 2017 at 09:28, Kenny Bell wrote:
>> | Hi R-devel list,
>> |
>> | OpenBLAS is readily available for unix-likes:
>> |
>> | https://cloud.r-project.org/web/packages/gcbd/vignettes/gcbd.pdf
>>
>> Please consider re-reading this vignette of mine. BLAS is an interface,
>> OpenBLAS is but one implementation.  R has allowed you to switch between
>> different implementations for a long time (if you used a shared library
>> build), and illustrating / measuring the possible performance differences
>> is
>> the whole point of the gcbd benchmarking package.
>>
>> | However, my questions are:
>> |
>> | 1) Would R-devel consider using OpenBLAS for the main distribution of R
>> for
>> | all platforms including Windows?
>> | 2) If so, would R-devel set the default multi-thread level to the
>> number of
>> | (real) cores on a machine?
>>
>> It's complicated. If you fork at the process-level (with package parallel
>> or
>> one of the many other mechansim) and then also used multi-threaded BLAS
>> you
>> can starve yourself for resources quickly.
>>
>> | My sense is there're a lot of wasted resources on laptops and personal
>> | desktops around the world that could be utilised by such a switch. I
>> | believe most unix-like users don't know about OpenBLAS and are
>> blissfully
>> | ignorant of the available speed gains. It seems to be quite difficult
>> for a
>> | typical Windows user to get this done today.
>>
>> Many things a developer / power-user would do are very difficult on
>> Windows. It is one of the charms of the platform. On the other hand you do
>> get a few solitaire games so I guess everybody is happy.
>>
>> Dirk
>>
>> | Thanks heaps,
>> | Kenny
>> |
>> |       [[alternative HTML version deleted]]
>> |
>> | ______________________________________________
>> | R-devel at r-project.org mailing list
>> | https://stat.ethz.ch/mailman/listinfo/r-devel
>>
>> --
>> http://dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org
>>
>> ______________________________________________
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>
>
>

	[[alternative HTML version deleted]]


From jtelleriar at gmail.com  Sun Dec 17 00:31:57 2017
From: jtelleriar at gmail.com (Juan Telleria)
Date: Sun, 17 Dec 2017 00:31:57 +0100
Subject: [Rd] OpenBLAS in everyday R?
In-Reply-To: <CAPekMC=Ohp+kCPYcB5mxMJg4L5iJfJEtAvfp+rSsKwgdkg7i8A@mail.gmail.com>
References: <CAPekMCmNdaQdqJzDLJfNQb=T2X9TjhnZ-Ad9Gd0n6d1ku+Kk=A@mail.gmail.com>
 <23093.35234.227393.513580@bud.eddelbuettel.com>
 <CAB7vNPxm2ikpoj8HFzpwkckWQ-dJAQQ3NqO4qiT4tR1DBNBHVQ@mail.gmail.com>
 <CAPekMC=Ohp+kCPYcB5mxMJg4L5iJfJEtAvfp+rSsKwgdkg7i8A@mail.gmail.com>
Message-ID: <CANNd7==9vF80XxU_yd3NSqzMRXX00gaHp7mwD3mZg-ZAnyKAfw@mail.gmail.com>

Multi-threaded Math Libraries (Trough OpenBlas), taking into account that
today's laptops have a minimum of 2-4 cores, are an important topic, and in
my opinion, shall be included in R for the general interest.

I think that the way to go would be to create a configuration setting in
R's options(OpenBlas= TRUE|FALSE) which enables or disables OpenBlas in an
easy way, which by default shall be in FALSE (In order to avoid issues with
parallel libraries).

The key point would be that each time you open a new R session, a 1 liner
informative comment arises that tells you:
a) Whether OpenBlas is enabled or disabled.
b) And how many cores it uses (Setting also configurable through
options(...))

In a shape just as Microsoft R Open does.

Kind regards,
Juan Telleria

	[[alternative HTML version deleted]]


From jtelleriar at gmail.com  Sun Dec 17 00:33:42 2017
From: jtelleriar at gmail.com (Juan Telleria)
Date: Sun, 17 Dec 2017 00:33:42 +0100
Subject: [Rd] OpenBLAS in everyday R?
In-Reply-To: <CANNd7==9vF80XxU_yd3NSqzMRXX00gaHp7mwD3mZg-ZAnyKAfw@mail.gmail.com>
References: <CAPekMCmNdaQdqJzDLJfNQb=T2X9TjhnZ-Ad9Gd0n6d1ku+Kk=A@mail.gmail.com>
 <23093.35234.227393.513580@bud.eddelbuettel.com>
 <CAB7vNPxm2ikpoj8HFzpwkckWQ-dJAQQ3NqO4qiT4tR1DBNBHVQ@mail.gmail.com>
 <CAPekMC=Ohp+kCPYcB5mxMJg4L5iJfJEtAvfp+rSsKwgdkg7i8A@mail.gmail.com>
 <CANNd7==9vF80XxU_yd3NSqzMRXX00gaHp7mwD3mZg-ZAnyKAfw@mail.gmail.com>
Message-ID: <CANNd7=nVjhUDCYXb-W=TgcYtp2SUwa2zkSk7TkrUryxGLCr6Yg@mail.gmail.com>

Multi-threaded Math Libraries (Trough OpenBlas), taking into account that
today's laptops have a minimum of 2-4 cores, are an important topic, and in
my opinion, shall be included in R for the general interest.

I think that the way to go would be to create a configuration setting in
R's options(OpenBlas=TRUE|FALSE) which enables or disables OpenBlas in an
easy way, which by default shall be in FALSE (In order to avoid issues with
parallel libraries).

The key point would be that each time you open a new R session, a 1 liner
informative comment arises that tells you:

a) Whether OpenBlas is enabled or disabled.

b) And how many cores it uses (Setting also configurable through
options(...))

In a shape just as Microsoft R Open does.

Kind regards,
Juan Telleria


El 17/12/2017 12:31 a. m., "Juan Telleria" <jtelleriar at gmail.com> escribi?:

> Multi-threaded Math Libraries (Trough OpenBlas), taking into account that
> today's laptops have a minimum of 2-4 cores, are an important topic, and in
> my opinion, shall be included in R for the general interest.
>
> I think that the way to go would be to create a configuration setting in
> R's options(OpenBlas= TRUE|FALSE) which enables or disables OpenBlas in an
> easy way, which by default shall be in FALSE (In order to avoid issues with
> parallel libraries).
>
> The key point would be that each time you open a new R session, a 1 liner
> informative comment arises that tells you:
> a) Whether OpenBlas is enabled or disabled.
> b) And how many cores it uses (Setting also configurable through
> options(...))
>
> In a shape just as Microsoft R Open does.
>
> Kind regards,
> Juan Telleria
>
>

	[[alternative HTML version deleted]]


From peter.langfelder at gmail.com  Sun Dec 17 01:03:41 2017
From: peter.langfelder at gmail.com (Peter Langfelder)
Date: Sat, 16 Dec 2017 16:03:41 -0800
Subject: [Rd] OpenBLAS in everyday R?
In-Reply-To: <CAPekMCmNdaQdqJzDLJfNQb=T2X9TjhnZ-Ad9Gd0n6d1ku+Kk=A@mail.gmail.com>
References: <CAPekMCmNdaQdqJzDLJfNQb=T2X9TjhnZ-Ad9Gd0n6d1ku+Kk=A@mail.gmail.com>
Message-ID: <CA+hbrhWTNPaEPT4Og1oZ56-Q1DSWNF6aFPqGzdxHVFeFJAVb+A@mail.gmail.com>

I would be very cautious about OpenBLAS in particular...  from time to
time I get complains from users that compiled code calculations in my
WGCNA package crash or produce wrong answers with large data, and they
all come from OpenBLAS users. I am yet to reproduce any of their
crashes when using MKL and ATLAS BLAS implementations.

Just my 2 cents...

Peter

On Sat, Dec 16, 2017 at 12:28 PM, Kenny Bell <kmbell56 at gmail.com> wrote:
> Hi R-devel list,
>
> OpenBLAS is readily available for unix-likes:
>
> https://cloud.r-project.org/web/packages/gcbd/vignettes/gcbd.pdf
>
> However, my questions are:
>
> 1) Would R-devel consider using OpenBLAS for the main distribution of R for
> all platforms including Windows?
> 2) If so, would R-devel set the default multi-thread level to the number of
> (real) cores on a machine?
>
> My sense is there're a lot of wasted resources on laptops and personal
> desktops around the world that could be utilised by such a switch. I
> believe most unix-like users don't know about OpenBLAS and are blissfully
> ignorant of the available speed gains. It seems to be quite difficult for a
> typical Windows user to get this done today.
>
> Thanks heaps,
> Kenny
>
>         [[alternative HTML version deleted]]
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From kmbell56 at gmail.com  Sun Dec 17 01:41:43 2017
From: kmbell56 at gmail.com (Kenny Bell)
Date: Sun, 17 Dec 2017 13:41:43 +1300
Subject: [Rd] OpenBLAS in everyday R?
In-Reply-To: <CA+hbrhWTNPaEPT4Og1oZ56-Q1DSWNF6aFPqGzdxHVFeFJAVb+A@mail.gmail.com>
References: <CAPekMCmNdaQdqJzDLJfNQb=T2X9TjhnZ-Ad9Gd0n6d1ku+Kk=A@mail.gmail.com>
 <CA+hbrhWTNPaEPT4Og1oZ56-Q1DSWNF6aFPqGzdxHVFeFJAVb+A@mail.gmail.com>
Message-ID: <CAPekMCnToUpoj8MgJPGxsPiJdEPQAJi1FgEmyczHGh7aJBEPag@mail.gmail.com>

It seems like many of the multi-threaded BLASes have some sort of
fundamental problem preventing use in the way Juan suggests:

 - Dirk's vignette states that ATLAS "fixes the number of cores used at
compile-time and cannot vary this setting at run-time", so any
user-friendly implementation for R would have to compile ATLAS for 1-16
threads to allow the user to switch at run-time. This might dramatically
affect install times.

 - MKL seems like it's been outright rejected in the past based on not
being "free-enough".

 - OpenBLAS causes crashes.

Has anyone tried ExBLAS for use with R?

On Sun, Dec 17, 2017 at 1:03 PM, Peter Langfelder <
peter.langfelder at gmail.com> wrote:

> I would be very cautious about OpenBLAS in particular...  from time to
> time I get complains from users that compiled code calculations in my
> WGCNA package crash or produce wrong answers with large data, and they
> all come from OpenBLAS users. I am yet to reproduce any of their
> crashes when using MKL and ATLAS BLAS implementations.
>
> Just my 2 cents...
>
> Peter
>
> On Sat, Dec 16, 2017 at 12:28 PM, Kenny Bell <kmbell56 at gmail.com> wrote:
> > Hi R-devel list,
> >
> > OpenBLAS is readily available for unix-likes:
> >
> > https://cloud.r-project.org/web/packages/gcbd/vignettes/gcbd.pdf
> >
> > However, my questions are:
> >
> > 1) Would R-devel consider using OpenBLAS for the main distribution of R
> for
> > all platforms including Windows?
> > 2) If so, would R-devel set the default multi-thread level to the number
> of
> > (real) cores on a machine?
> >
> > My sense is there're a lot of wasted resources on laptops and personal
> > desktops around the world that could be utilised by such a switch. I
> > believe most unix-like users don't know about OpenBLAS and are blissfully
> > ignorant of the available speed gains. It seems to be quite difficult
> for a
> > typical Windows user to get this done today.
> >
> > Thanks heaps,
> > Kenny
> >
> >         [[alternative HTML version deleted]]
> >
> > ______________________________________________
> > R-devel at r-project.org mailing list
> > https://stat.ethz.ch/mailman/listinfo/r-devel
>
>

	[[alternative HTML version deleted]]


From avraham.adler at gmail.com  Sun Dec 17 02:49:52 2017
From: avraham.adler at gmail.com (Avraham Adler)
Date: Sat, 16 Dec 2017 20:49:52 -0500
Subject: [Rd] OpenBLAS in everyday R?
In-Reply-To: <CAPekMCnToUpoj8MgJPGxsPiJdEPQAJi1FgEmyczHGh7aJBEPag@mail.gmail.com>
References: <CAPekMCmNdaQdqJzDLJfNQb=T2X9TjhnZ-Ad9Gd0n6d1ku+Kk=A@mail.gmail.com>
 <CA+hbrhWTNPaEPT4Og1oZ56-Q1DSWNF6aFPqGzdxHVFeFJAVb+A@mail.gmail.com>
 <CAPekMCnToUpoj8MgJPGxsPiJdEPQAJi1FgEmyczHGh7aJBEPag@mail.gmail.com>
Message-ID: <CAL6gwn+8k=yP2AJuo6XcWqTbM-bX9NF77TJiAghosFgzr_uQDw@mail.gmail.com>

On Sat, Dec 16, 2017 at 7:41 PM, Kenny Bell <kmbell56 at gmail.com> wrote:
> It seems like many of the multi-threaded BLASes have some sort of
> fundamental problem preventing use in the way Juan suggests:
>
>  - Dirk's vignette states that ATLAS "fixes the number of cores used at
> compile-time and cannot vary this setting at run-time", so any
> user-friendly implementation for R would have to compile ATLAS for 1-16
> threads to allow the user to switch at run-time. This might dramatically
> affect install times.
>
>  - MKL seems like it's been outright rejected in the past based on not
> being "free-enough".
>
>  - OpenBLAS causes crashes.
>
> Has anyone tried ExBLAS for use with R?
>
> On Sun, Dec 17, 2017 at 1:03 PM, Peter Langfelder <
> peter.langfelder at gmail.com> wrote:
>
>> I would be very cautious about OpenBLAS in particular...  from time to
>> time I get complains from users that compiled code calculations in my
>> WGCNA package crash or produce wrong answers with large data, and they
>> all come from OpenBLAS users. I am yet to reproduce any of their
>> crashes when using MKL and ATLAS BLAS implementations.
>>
>> Just my 2 cents...
>>
>> Peter

I've been building R on Windows 64 bit with OpenBLAS for years and my
builds pass check-devel. For a while in the past it failed one check
as the tolerance was 5e-5 and with my build of OpenBLAS the error was
5.4e-5 or 5.7e-5, but that was changed around R 3.3, if I recall
correctly. I provide descriptions here [1], but I haven't gone so far
as to post compiled Rblas.dlls just yet. My personal build sets 4
threads when compiling OpenBLAS itself as I'm currently on a quad-core
SandyBridge. In tests I ran a few years ago, both single and multi
threaded BLAS compile and then can be compiled into R with no issues
(on my platforms, at least). Most matrix operations performed better
with multi-threaded except for R's eigenvalue decomposition, to the
nest of my recollection.

Avi

[1] https://www.avrahamadler.com/r-tips/build-openblas-for-windows-r64/


From jtelleriar at gmail.com  Sun Dec 17 03:22:05 2017
From: jtelleriar at gmail.com (Juan Telleria)
Date: Sun, 17 Dec 2017 03:22:05 +0100
Subject: [Rd] OpenBLAS in everyday R?
In-Reply-To: <CAL6gwn+8k=yP2AJuo6XcWqTbM-bX9NF77TJiAghosFgzr_uQDw@mail.gmail.com>
References: <CAPekMCmNdaQdqJzDLJfNQb=T2X9TjhnZ-Ad9Gd0n6d1ku+Kk=A@mail.gmail.com>
 <CA+hbrhWTNPaEPT4Og1oZ56-Q1DSWNF6aFPqGzdxHVFeFJAVb+A@mail.gmail.com>
 <CAPekMCnToUpoj8MgJPGxsPiJdEPQAJi1FgEmyczHGh7aJBEPag@mail.gmail.com>
 <CAL6gwn+8k=yP2AJuo6XcWqTbM-bX9NF77TJiAghosFgzr_uQDw@mail.gmail.com>
Message-ID: <CANNd7=mSuquryFg_kJ2qM3SyTKUZBerDFEYg0Cb_LMo3+Qu04Q@mail.gmail.com>

Julia Programming Language uses also OpenBlas, and it is actively
maintained with bugs being fixed as I have checked it out:

http://www.openblas.net/Changelog.txt

So I still see it ok to be included as an options(...) feature (by default
off, just for safety), over other Blas libraries.

R could not use Intel MKL for legal reasons (I think), because as long that
R ships with GPL libraries, shipping R by default with Non-GPL is illegal.

Cheers,
Juan

El 17/12/2017 2:50 a. m., "Avraham Adler" <avraham.adler at gmail.com>
escribi?:

> On Sat, Dec 16, 2017 at 7:41 PM, Kenny Bell <kmbell56 at gmail.com> wrote:
> > It seems like many of the multi-threaded BLASes have some sort of
> > fundamental problem preventing use in the way Juan suggests:
> >
> >  - Dirk's vignette states that ATLAS "fixes the number of cores used at
> > compile-time and cannot vary this setting at run-time", so any
> > user-friendly implementation for R would have to compile ATLAS for 1-16
> > threads to allow the user to switch at run-time. This might dramatically
> > affect install times.
> >
> >  - MKL seems like it's been outright rejected in the past based on not
> > being "free-enough".
> >
> >  - OpenBLAS causes crashes.
> >
> > Has anyone tried ExBLAS for use with R?
> >
> > On Sun, Dec 17, 2017 at 1:03 PM, Peter Langfelder <
> > peter.langfelder at gmail.com> wrote:
> >
> >> I would be very cautious about OpenBLAS in particular...  from time to
> >> time I get complains from users that compiled code calculations in my
> >> WGCNA package crash or produce wrong answers with large data, and they
> >> all come from OpenBLAS users. I am yet to reproduce any of their
> >> crashes when using MKL and ATLAS BLAS implementations.
> >>
> >> Just my 2 cents...
> >>
> >> Peter
>
> I've been building R on Windows 64 bit with OpenBLAS for years and my
> builds pass check-devel. For a while in the past it failed one check
> as the tolerance was 5e-5 and with my build of OpenBLAS the error was
> 5.4e-5 or 5.7e-5, but that was changed around R 3.3, if I recall
> correctly. I provide descriptions here [1], but I haven't gone so far
> as to post compiled Rblas.dlls just yet. My personal build sets 4
> threads when compiling OpenBLAS itself as I'm currently on a quad-core
> SandyBridge. In tests I ran a few years ago, both single and multi
> threaded BLAS compile and then can be compiled into R with no issues
> (on my platforms, at least). Most matrix operations performed better
> with multi-threaded except for R's eigenvalue decomposition, to the
> nest of my recollection.
>
> Avi
>
> [1] https://www.avrahamadler.com/r-tips/build-openblas-for-windows-r64/
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>

	[[alternative HTML version deleted]]


From kmbell56 at gmail.com  Sun Dec 17 03:45:12 2017
From: kmbell56 at gmail.com (Kenny Bell)
Date: Sun, 17 Dec 2017 15:45:12 +1300
Subject: [Rd] OpenBLAS in everyday R?
In-Reply-To: <CANNd7=mSuquryFg_kJ2qM3SyTKUZBerDFEYg0Cb_LMo3+Qu04Q@mail.gmail.com>
References: <CAPekMCmNdaQdqJzDLJfNQb=T2X9TjhnZ-Ad9Gd0n6d1ku+Kk=A@mail.gmail.com>
 <CA+hbrhWTNPaEPT4Og1oZ56-Q1DSWNF6aFPqGzdxHVFeFJAVb+A@mail.gmail.com>
 <CAPekMCnToUpoj8MgJPGxsPiJdEPQAJi1FgEmyczHGh7aJBEPag@mail.gmail.com>
 <CAL6gwn+8k=yP2AJuo6XcWqTbM-bX9NF77TJiAghosFgzr_uQDw@mail.gmail.com>
 <CANNd7=mSuquryFg_kJ2qM3SyTKUZBerDFEYg0Cb_LMo3+Qu04Q@mail.gmail.com>
Message-ID: <CAPekMCkuZTzmeZggac3WVDjt18FnTYb4jG7NCUFkRYEZ-DSBYg@mail.gmail.com>

Julia using OpenBLAS is *very* reassuring.

I agree that having it included as an options(...) feature should be OK.

On Sun, Dec 17, 2017, 3:22 PM Juan Telleria <jtelleriar at gmail.com> wrote:

> Julia Programming Language uses also OpenBlas, and it is actively
> maintained with bugs being fixed as I have checked it out:
>
> http://www.openblas.net/Changelog.txt
>
> So I still see it ok to be included as an options(...) feature (by default
> off, just for safety), over other Blas libraries.
>
> R could not use Intel MKL for legal reasons (I think), because as long
> that R ships with GPL libraries, shipping R by default with Non-GPL is
> illegal.
>
> Cheers,
> Juan
>
> El 17/12/2017 2:50 a. m., "Avraham Adler" <avraham.adler at gmail.com>
> escribi?:
>
>> On Sat, Dec 16, 2017 at 7:41 PM, Kenny Bell <kmbell56 at gmail.com> wrote:
>> > It seems like many of the multi-threaded BLASes have some sort of
>> > fundamental problem preventing use in the way Juan suggests:
>> >
>> >  - Dirk's vignette states that ATLAS "fixes the number of cores used at
>> > compile-time and cannot vary this setting at run-time", so any
>> > user-friendly implementation for R would have to compile ATLAS for 1-16
>> > threads to allow the user to switch at run-time. This might dramatically
>> > affect install times.
>> >
>> >  - MKL seems like it's been outright rejected in the past based on not
>> > being "free-enough".
>> >
>> >  - OpenBLAS causes crashes.
>> >
>> > Has anyone tried ExBLAS for use with R?
>> >
>> > On Sun, Dec 17, 2017 at 1:03 PM, Peter Langfelder <
>> > peter.langfelder at gmail.com> wrote:
>> >
>> >> I would be very cautious about OpenBLAS in particular...  from time to
>> >> time I get complains from users that compiled code calculations in my
>> >> WGCNA package crash or produce wrong answers with large data, and they
>> >> all come from OpenBLAS users. I am yet to reproduce any of their
>> >> crashes when using MKL and ATLAS BLAS implementations.
>> >>
>> >> Just my 2 cents...
>> >>
>> >> Peter
>>
>> I've been building R on Windows 64 bit with OpenBLAS for years and my
>> builds pass check-devel. For a while in the past it failed one check
>> as the tolerance was 5e-5 and with my build of OpenBLAS the error was
>> 5.4e-5 or 5.7e-5, but that was changed around R 3.3, if I recall
>> correctly. I provide descriptions here [1], but I haven't gone so far
>> as to post compiled Rblas.dlls just yet. My personal build sets 4
>> threads when compiling OpenBLAS itself as I'm currently on a quad-core
>> SandyBridge. In tests I ran a few years ago, both single and multi
>> threaded BLAS compile and then can be compiled into R with no issues
>> (on my platforms, at least). Most matrix operations performed better
>> with multi-threaded except for R's eigenvalue decomposition, to the
>> nest of my recollection.
>>
>> Avi
>>
>> [1] https://www.avrahamadler.com/r-tips/build-openblas-for-windows-r64/
>>
>> ______________________________________________
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>
>

	[[alternative HTML version deleted]]


From anildabral3k at gmail.com  Sun Dec 17 05:23:17 2017
From: anildabral3k at gmail.com (A Dabral)
Date: Sun, 17 Dec 2017 09:53:17 +0530
Subject: [Rd] Issue related to Rlapack
Message-ID: <CAD0vttcd=WdyEETAiBn0TGqF8MgYh89NDaT9=XDa5HmKNRuedA@mail.gmail.com>

Hi,
I am having an issue regarding R3.4.3. I am launching R instance from
RDotNet using following two statements:

REngine.SetEnvironmentVariables(rPath, rHome);
this._RServer = REngine.GetInstance();

Where
 rPath = "C:\Program Files\R\R-3.4.3\bin\x64"
 rHome = "C:\Program Files\R\R-3.4.3"

As soon as the second statement (REngine.GetInstance() ) executes I get
following error:

" *The Program can't start because Rplpack.dll is missing from your
computer. Try reinstalling the program to fix this problem.*"

I checked, Rplpack.dll is in my rPath location.

I did not get this error in the older versions of R. Only R3.4.3 is having
this issue.

Please help.

-- 
Thanks and regards,
Anil

	[[alternative HTML version deleted]]


From jeroenooms at gmail.com  Sun Dec 17 15:52:29 2017
From: jeroenooms at gmail.com (Jeroen Ooms)
Date: Sun, 17 Dec 2017 15:52:29 +0100
Subject: [Rd] Region subtag in package 'Language' field
Message-ID: <CABFfbXuNtSr=XA+mB6aV50=LSF5q435KWHpsFNh-1=YgUr9YbA@mail.gmail.com>

I am looking for the appropriate field to let package authors to
declare the pkg documentation language for spell checkers. The most
important case is to specify a preference between "en-US" or "en-GB"
which can be used by the hunspell or spelling pkg to select the
appropriate dictionary.

WRE defines the "Language" field for documentation language, but from
the current description it seems restricted to 2 or 3 letter ISO-639
codes such as "en" or "eng". WRE also mentions rfc-5646, which refers
to ISO 3166-1 for region/country subtags but it is unclear if these
are allowed in the field?

Spell checking libraries (e.g. myspell/hunspell) typically use
locale-like language names to identify the appropriate dictionary such
as "en_GB" or "de_AT", see for example [1,2]. Merely specifying "en"
or "de" is ambiguous to the spell checker. I was wondering if the WRE
definition of the "Language" field could allow for this?



[1] https://apps.fedoraproject.org/packages/hunspell-en/contents/
[2] https://packages.debian.org/stretch/hunspell-en-gb


From jtelleriar at gmail.com  Sun Dec 17 18:13:05 2017
From: jtelleriar at gmail.com (Juan Telleria)
Date: Sun, 17 Dec 2017 18:13:05 +0100
Subject: [Rd] Collaborative Wiki for fostering Open Innovation in R
Message-ID: <CANNd7=mkRMAyD9S6R2yzNH8BcSkWtnJUkYjn-HHUjcaig1T-AQ@mail.gmail.com>

Dear R Developers,

I am writing in order to open a constructive debate whether if it is worth
it that R Project adopts the Apache Software Foundation & Wikipedia Model
for Open Documentation by using a Collaborative Wiki & Document Store (As a
complement to Bugzilla and Mailing Lists), for fostering collaboration in R
Development.

The objective would be to promote innovation and collaboration between:
? R Contributors.
? R Core.
? And R Community.
For:
? R Development.
? ?R Contributed Documentation.
? ?R Internals Wiki.

The Wikis Section could be structured in different Sub-Wikis (or Pages)
with different levels of permissions:
? Some only editable by R Core.
? Others only editable by R Core, and R Contributors.
? And others editable by any member of R Community.

And have different Categories, such as:
? R Learning Resources.
? R Cheatsheets.
? R Development & Key Internals.
? ?R Contributed Documentation.
? ?R Help.
? ?etc.

A key point would be that the wikis are installed, hosted and accesible
through CRAN Servers, as a way to give some collaborative GUI to CRAN
hosted documentation.

Three collaborative wikis worth to consider would be:
? xwiki SAS (Open Source): http://www.xwiki.org
? ?Atlassian Confluence (Free for Open Source Projects):
https://www.atlassian.com/software/confluence
? ?MediaWiki: www.mediawiki.org

I personally prefer xwiki for being 100% Open Source, and being editable
with a Markdown Syntax; but we use Confluence at work and I am also very
happy with it; and MediaWiki is the one Wikipedia uses, but seems difficult
to use.

Thank you & best,
Juan

	[[alternative HTML version deleted]]


From rtobar at icrar.org  Sun Dec 17 23:55:27 2017
From: rtobar at icrar.org (Rodrigo Tobar)
Date: Mon, 18 Dec 2017 06:55:27 +0800
Subject: [Rd] Dialect for shell scripts
Message-ID: <98ab029a-fbbc-8297-b2e7-63857c43932f@icrar.org>

Dear all,

During a recent package submission, we were highlighted that some lines 
in our configure script didn't follow the correct syntax. The lines 
looked like this:

x=$(($y/10))

We were indicated at the time that this is because the statement does 
not use Bourne shell syntax, which is absolutely true, and also that the 
manual warns about this, which is true again. So far everything is clear.

However, what confuses me is that even when the manual says that "you 
can include an executable (Bourne) shell script configure in your 
package" [1], the associated footnote says something slightly different: 
"The script should only assume a POSIX-compliant /bin/sh" [2]. The 
footnote goes even further, and links to the POSIX specification of the 
Shell Command Language [3] (as published by The Open Group), which 
explicitly includes arithmetic expressions like the one above in its 
syntax [4].

My question then is: what exact dialect should be considered? Given that 
the statement above does not work in the Bourne shell, I conclude that 
the Bourne shell is not POSIX-compliant. That in turn would make the 
manual ambiguous as to the precise dialect that should be used by our 
configure scripts, and either the shells used by R should be changed to 
be POSIX-compliants, or the manual edited to be more precise regarding .

Many thanks.

Rodrigo

[1] 
https://cran.r-project.org/doc/manuals/r-release/R-exts.html#Configure-and-cleanup
[2] https://cran.r-project.org/doc/manuals/r-release/R-exts.html#FOOT25
[3] http://pubs.opengroup.org/onlinepubs/9699919799/utilities/V3_chap02.html
[4] 
http://pubs.opengroup.org/onlinepubs/9699919799/utilities/V3_chap02.html#tag_18_06_04


From i.ucar86 at gmail.com  Mon Dec 18 14:00:06 2017
From: i.ucar86 at gmail.com (=?UTF-8?B?ScOxYWtpIMOaY2Fy?=)
Date: Mon, 18 Dec 2017 14:00:06 +0100
Subject: [Rd] Dialect for shell scripts
In-Reply-To: <98ab029a-fbbc-8297-b2e7-63857c43932f@icrar.org>
References: <98ab029a-fbbc-8297-b2e7-63857c43932f@icrar.org>
Message-ID: <CALEXWq0qHBLYL15ikSiSCOmOh1wLMnrArT=7o0xbxMhDeJ2Pqw@mail.gmail.com>

For what it's worth, Autoconf does not assume that arithmetic
expansion will be available. Instead, it emits the following shell
code:

if ( eval 'test $(( 1 + 1 )) = 2' ) 2>/dev/null; then
  eval 'func_arith ()
  {
    func_arith_result=$(( $* ))
  }'
else
  func_arith ()
  {
    func_arith_result=`expr "$@"`
  }
fi

2017-12-17 23:55 GMT+01:00 Rodrigo Tobar <rtobar at icrar.org>:
> Dear all,
>
> During a recent package submission, we were highlighted that some lines in
> our configure script didn't follow the correct syntax. The lines looked like
> this:
>
> x=$(($y/10))
>
> We were indicated at the time that this is because the statement does not
> use Bourne shell syntax, which is absolutely true, and also that the manual
> warns about this, which is true again. So far everything is clear.
>
> However, what confuses me is that even when the manual says that "you can
> include an executable (Bourne) shell script configure in your package" [1],
> the associated footnote says something slightly different: "The script
> should only assume a POSIX-compliant /bin/sh" [2]. The footnote goes even
> further, and links to the POSIX specification of the Shell Command Language
> [3] (as published by The Open Group), which explicitly includes arithmetic
> expressions like the one above in its syntax [4].
>
> My question then is: what exact dialect should be considered? Given that the
> statement above does not work in the Bourne shell, I conclude that the
> Bourne shell is not POSIX-compliant. That in turn would make the manual
> ambiguous as to the precise dialect that should be used by our configure
> scripts, and either the shells used by R should be changed to be
> POSIX-compliants, or the manual edited to be more precise regarding .
>
> Many thanks.
>
> Rodrigo
>
> [1]
> https://cran.r-project.org/doc/manuals/r-release/R-exts.html#Configure-and-cleanup
> [2] https://cran.r-project.org/doc/manuals/r-release/R-exts.html#FOOT25
> [3] http://pubs.opengroup.org/onlinepubs/9699919799/utilities/V3_chap02.html
> [4]
> http://pubs.opengroup.org/onlinepubs/9699919799/utilities/V3_chap02.html#tag_18_06_04
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel



-- 
I?aki ?car
http://www.enchufa2.es
@Enchufa2


From Michael.Stravs at eawag.ch  Mon Dec 18 14:24:48 2017
From: Michael.Stravs at eawag.ch (Stravs, Michael)
Date: Mon, 18 Dec 2017 13:24:48 +0000
Subject: [Rd] Rcpp - Linking to DLL from another package?
Message-ID: <9DD73F68AC266D4AA329E07B678177B1F059D92A@EE-MBX3.ee.emp-eaw.ch>

Hi,

I am trying to make a package B that extends another package A. Package A uses Rcpp, and I want to extend a class X used there.

So package A has

src/X.h and inst/include/X.h
class X
{ ... }

src/X.cpp
X::X( arguments )
{ ... }

My package B wants to do this:

DESCRIPTION
[...]
LinkingTo: Rcpp, RcppArmadillo, A
Imports: Rcpp, RcppArmadillo, A

src/Y.h
class Y: public X
{ ... }

src/Y.cpp

Y::Y( arguments ): X(arguments)
{ ... }

Can I somehow make the package link to the library A.dll or its corresponding Linux equivalent? (Note: the files in inst/include will already be a pull request from me to the package A author, so a limited pull request for more changes is feasible, but I would like to keep it minimal.


Dr. Michael Stravs
Eawag
Umweltchemie
BU E 23
?berlandstrasse 133
8600 D?bendorf
+41 58 765 6742


	[[alternative HTML version deleted]]


From edd at debian.org  Mon Dec 18 14:40:35 2017
From: edd at debian.org (Dirk Eddelbuettel)
Date: Mon, 18 Dec 2017 07:40:35 -0600
Subject: [Rd] Rcpp - Linking to DLL from another package?
In-Reply-To: <9DD73F68AC266D4AA329E07B678177B1F059D92A@EE-MBX3.ee.emp-eaw.ch>
References: <9DD73F68AC266D4AA329E07B678177B1F059D92A@EE-MBX3.ee.emp-eaw.ch>
Message-ID: <23095.50515.694572.127889@bud.eddelbuettel.com>


(Moderately wrong list: r-package-devel for packaging questions, rcpp-devel
for Rcpp questions)

On 18 December 2017 at 13:24, Stravs, Michael wrote:
| I am trying to make a package B that extends another package A. Package A uses Rcpp, and I want to extend a class X used there.

It doesn't really matter (for the issue at hand) if you use Rcpp or not -- R
only offers us C interfaces so C interfaces are all we got. And they don't
know classes.

I worked through that in some of my packages. See eg RcppXts which "extends"
in your sense xts by allowing C++ level access from another package. The one
key aspect is that _everything you want to call from B must be explicitly
exported by A_.  See Writing R Extensions for details.

If you could rewrite your class A to be header-only then you could just
include it via LinkingTo. But that is a different story.

In short, "No Free Lunch" and no automagic mechanisms.

Dirk

-- 
http://dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org


From jeroen at berkeley.edu  Mon Dec 18 16:10:13 2017
From: jeroen at berkeley.edu (Jeroen Ooms)
Date: Mon, 18 Dec 2017 16:10:13 +0100
Subject: [Rd] Rcpp - Linking to DLL from another package?
In-Reply-To: <23095.50515.694572.127889@bud.eddelbuettel.com>
References: <9DD73F68AC266D4AA329E07B678177B1F059D92A@EE-MBX3.ee.emp-eaw.ch>
 <23095.50515.694572.127889@bud.eddelbuettel.com>
Message-ID: <CABFfbXsc6z+aa5TrC74gTthhmXVYiJ6NyYpeOnROYTTBhWxvSQ@mail.gmail.com>

On Mon, Dec 18, 2017 at 2:40 PM, Dirk Eddelbuettel <edd at debian.org> wrote:
>
> (Moderately wrong list: r-package-devel for packaging questions, rcpp-devel
> for Rcpp questions)
>
> On 18 December 2017 at 13:24, Stravs, Michael wrote:
> | I am trying to make a package B that extends another package A. Package A uses Rcpp, and I want to extend a class X used there.

Another, perhaps simpler example is the xslt package which is an
extension for the xml2 package. The xml2 package exposes its object
types (via ./inst/include/xml2_types.h) so that the xslt package get
to the underlying libxml2 objects.


From edd at debian.org  Mon Dec 18 17:42:44 2017
From: edd at debian.org (Dirk Eddelbuettel)
Date: Mon, 18 Dec 2017 10:42:44 -0600
Subject: [Rd] Rcpp - Linking to DLL from another package?
In-Reply-To: <CABFfbXsc6z+aa5TrC74gTthhmXVYiJ6NyYpeOnROYTTBhWxvSQ@mail.gmail.com>
References: <9DD73F68AC266D4AA329E07B678177B1F059D92A@EE-MBX3.ee.emp-eaw.ch>
 <23095.50515.694572.127889@bud.eddelbuettel.com>
 <CABFfbXsc6z+aa5TrC74gTthhmXVYiJ6NyYpeOnROYTTBhWxvSQ@mail.gmail.com>
Message-ID: <23095.61444.493095.86900@bud.eddelbuettel.com>


On 18 December 2017 at 16:10, Jeroen Ooms wrote:
| On Mon, Dec 18, 2017 at 2:40 PM, Dirk Eddelbuettel <edd at debian.org> wrote:
| >
| > (Moderately wrong list: r-package-devel for packaging questions, rcpp-devel
| > for Rcpp questions)
| >
| > On 18 December 2017 at 13:24, Stravs, Michael wrote:
| > | I am trying to make a package B that extends another package A. Package A uses Rcpp, and I want to extend a class X used there.
| 
| Another, perhaps simpler example is the xslt package which is an
| extension for the xml2 package. The xml2 package exposes its object
| types (via ./inst/include/xml2_types.h) so that the xslt package get
| to the underlying libxml2 objects.

That is nice too, but doesn't in your case the object code comes from the
external libxml2 only?

Michael wanted to get at code from another R package, and those shared
libraries from R packages are not system-wide visible. Hence the problem.

Dirk

-- 
http://dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org


From Kurt.Hornik at wu.ac.at  Mon Dec 18 20:23:58 2017
From: Kurt.Hornik at wu.ac.at (Kurt Hornik)
Date: Mon, 18 Dec 2017 20:23:58 +0100
Subject: [Rd] Dialect for shell scripts
In-Reply-To: <CALEXWq0qHBLYL15ikSiSCOmOh1wLMnrArT=7o0xbxMhDeJ2Pqw@mail.gmail.com>
References: <98ab029a-fbbc-8297-b2e7-63857c43932f@icrar.org>
 <CALEXWq0qHBLYL15ikSiSCOmOh1wLMnrArT=7o0xbxMhDeJ2Pqw@mail.gmail.com>
Message-ID: <23096.5582.934560.295269@hornik.net>

>>>>> I?aki ?car writes:

Same from here: in addition to what the standards say, it always pays to
be defensive and check "Portable Shell Programming" in the Autoconf
manual.  Among other things, this says

'$((EXPRESSION))'
     Arithmetic expansion is not portable as some shells (most notably
     Solaris 10 '/bin/sh') don't support it.

motivating the code shown below.  Perhaps simplest to always use expr.

-k


> For what it's worth, Autoconf does not assume that arithmetic
> expansion will be available. Instead, it emits the following shell
> code:

> if ( eval 'test $(( 1 + 1 )) = 2' ) 2>/dev/null; then
>   eval 'func_arith ()
>   {
>     func_arith_result=$(( $* ))
>   }'
> else
>   func_arith ()
>   {
>     func_arith_result=`expr "$@"`
>   }
> fi

> 2017-12-17 23:55 GMT+01:00 Rodrigo Tobar <rtobar at icrar.org>:
>> Dear all,
>> 
>> During a recent package submission, we were highlighted that some lines in
>> our configure script didn't follow the correct syntax. The lines looked like
>> this:
>> 
>> x=$(($y/10))
>> 
>> We were indicated at the time that this is because the statement does not
>> use Bourne shell syntax, which is absolutely true, and also that the manual
>> warns about this, which is true again. So far everything is clear.
>> 
>> However, what confuses me is that even when the manual says that "you can
>> include an executable (Bourne) shell script configure in your package" [1],
>> the associated footnote says something slightly different: "The script
>> should only assume a POSIX-compliant /bin/sh" [2]. The footnote goes even
>> further, and links to the POSIX specification of the Shell Command Language
>> [3] (as published by The Open Group), which explicitly includes arithmetic
>> expressions like the one above in its syntax [4].
>> 
>> My question then is: what exact dialect should be considered? Given that the
>> statement above does not work in the Bourne shell, I conclude that the
>> Bourne shell is not POSIX-compliant. That in turn would make the manual
>> ambiguous as to the precise dialect that should be used by our configure
>> scripts, and either the shells used by R should be changed to be
>> POSIX-compliants, or the manual edited to be more precise regarding .
>> 
>> Many thanks.
>> 
>> Rodrigo
>> 
>> [1]
>> https://cran.r-project.org/doc/manuals/r-release/R-exts.html#Configure-and-cleanup
>> [2] https://cran.r-project.org/doc/manuals/r-release/R-exts.html#FOOT25
>> [3] http://pubs.opengroup.org/onlinepubs/9699919799/utilities/V3_chap02.html
>> [4]
>> http://pubs.opengroup.org/onlinepubs/9699919799/utilities/V3_chap02.html#tag_18_06_04
>> 
>> ______________________________________________
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel



> -- 
> I?aki ?car
> http://www.enchufa2.es
> @Enchufa2

> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From Kurt.Hornik at wu.ac.at  Mon Dec 18 20:32:35 2017
From: Kurt.Hornik at wu.ac.at (Kurt Hornik)
Date: Mon, 18 Dec 2017 20:32:35 +0100
Subject: [Rd] Region subtag in package 'Language' field
In-Reply-To: <CABFfbXuNtSr=XA+mB6aV50=LSF5q435KWHpsFNh-1=YgUr9YbA@mail.gmail.com>
References: <CABFfbXuNtSr=XA+mB6aV50=LSF5q435KWHpsFNh-1=YgUr9YbA@mail.gmail.com>
Message-ID: <23096.6099.820406.753769@hornik.net>

>>>>> Jeroen Ooms writes:

All standard (not private use or grandfathered) IETF language tags
should be fine.  What WRE says about ISO-639 codes is meant to explain
the language subtags.

Hth
-k

> I am looking for the appropriate field to let package authors to
> declare the pkg documentation language for spell checkers. The most
> important case is to specify a preference between "en-US" or "en-GB"
> which can be used by the hunspell or spelling pkg to select the
> appropriate dictionary.

> WRE defines the "Language" field for documentation language, but from
> the current description it seems restricted to 2 or 3 letter ISO-639
> codes such as "en" or "eng". WRE also mentions rfc-5646, which refers
> to ISO 3166-1 for region/country subtags but it is unclear if these
> are allowed in the field?

> Spell checking libraries (e.g. myspell/hunspell) typically use
> locale-like language names to identify the appropriate dictionary such
> as "en_GB" or "de_AT", see for example [1,2]. Merely specifying "en"
> or "de" is ambiguous to the spell checker. I was wondering if the WRE
> definition of the "Language" field could allow for this?



> [1] https://apps.fedoraproject.org/packages/hunspell-en/contents/
> [2] https://packages.debian.org/stretch/hunspell-en-gb

> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From simon.guest at tesujimath.org  Mon Dec 18 20:56:30 2017
From: simon.guest at tesujimath.org (Simon Guest)
Date: Tue, 19 Dec 2017 08:56:30 +1300
Subject: [Rd] Fixed BLAS tests for external BLAS library
Message-ID: <CAFhGSbtyd0-=FTMsE8ty0vdGvhmbTGM+Ww5+KgQpv-xFsfAq0w@mail.gmail.com>

We build R with dynamically linked BLAS and LAPACK libraries, in order
to use the AMD Core Math Library (ACML) multi-threaded implementation
of these routines on our 64 core servers.  This is great, and our
users really appreciate it.

However, when building like this, make check fails on the reg-BLAS.R
test.  The reason for this is that the expected test output is checked
using identical.  By changing all uses of identical in this file to
all.equal, the tests pass.

Specifically, I run this command before make check:

$ sed -i -e 's/identical/all.equal/g' tests/reg-BLAS.R

I suggest that the test is fixed like this in the R source code.

Here is the configure command I use, on CentOS 7:
$ ./configure --with-system-zlib --with-system-bzlib --with-system-pcre \
    --with-blas \
    --with-lapack \
    --with-tcl-config=/usr/lib64/tclConfig.sh \
    --with-tk-config=/usr/lib64/tkConfig.sh \
    --enable-R-shlib \
    --enable-prebuilt-html

cheers,
Simon


From jtelleriar at gmail.com  Mon Dec 18 23:19:17 2017
From: jtelleriar at gmail.com (Juan Telleria)
Date: Mon, 18 Dec 2017 23:19:17 +0100
Subject: [Rd] Collaborative Wiki for fostering Open Innovation in R
In-Reply-To: <23094.45674.558093.352138@bud.eddelbuettel.com>
References: <CANNd7=mkRMAyD9S6R2yzNH8BcSkWtnJUkYjn-HHUjcaig1T-AQ@mail.gmail.com>
 <23094.45674.558093.352138@bud.eddelbuettel.com>
Message-ID: <CANNd7=mfcpbvB1KTasua=r9ZrQtBx0gCbefvURmtmfQXzbfd4Q@mail.gmail.com>

I have found Apache JSPWiki solution, which might work and is open source:
https://jspwiki.apache.org

In addition, I will test xwiki, and give my insights about the tool on
r-devel, as it might just be a resolutive tool for collaboration thanks to
it's extensible architecture.

Kind regards,
Juan Telleria

	[[alternative HTML version deleted]]


From mcquesten at gmail.com  Mon Dec 18 23:36:13 2017
From: mcquesten at gmail.com (Paul McQuesten)
Date: Mon, 18 Dec 2017 16:36:13 -0600
Subject: [Rd] Dialect for shell scripts
In-Reply-To: <23096.5582.934560.295269@hornik.net>
References: <98ab029a-fbbc-8297-b2e7-63857c43932f@icrar.org>
 <CALEXWq0qHBLYL15ikSiSCOmOh1wLMnrArT=7o0xbxMhDeJ2Pqw@mail.gmail.com>
 <23096.5582.934560.295269@hornik.net>
Message-ID: <CAN6Gc-3zPkx-x7i0GKs3aWAGFTHA0zUqNv1MPJ6dsTh6jn96Fw@mail.gmail.com>

I do not have a dog in this fight, but I have to ask:
    How much person time is worthwhile to invest in supporting Solaris 10?

It has been closed-source (Post-Oracle)
<https://en.wikipedia.org/wiki/Solaris_(operating_system)#Post-Oracle_closed_source_(Solaris_10_after_March_2010,_and_Solaris_11_(2011_and_later))>
since
March 2010.

On Mon, Dec 18, 2017 at 1:23 PM, Kurt Hornik <Kurt.Hornik at wu.ac.at> wrote:

> >>>>> I?aki ?car writes:
>
> Same from here: in addition to what the standards say, it always pays to
> be defensive and check "Portable Shell Programming" in the Autoconf
> manual.  Among other things, this says
>
> '$((EXPRESSION))'
>      Arithmetic expansion is not portable as some shells (most notably
>      Solaris 10 '/bin/sh') don't support it.
>
> motivating the code shown below.  Perhaps simplest to always use expr.
>
> -k
>
>
> > For what it's worth, Autoconf does not assume that arithmetic
> > expansion will be available. Instead, it emits the following shell
> > code:
>
> > if ( eval 'test $(( 1 + 1 )) = 2' ) 2>/dev/null; then
> >   eval 'func_arith ()
> >   {
> >     func_arith_result=$(( $* ))
> >   }'
> > else
> >   func_arith ()
> >   {
> >     func_arith_result=`expr "$@"`
> >   }
> > fi
>
> > 2017-12-17 23:55 GMT+01:00 Rodrigo Tobar <rtobar at icrar.org>:
> >> Dear all,
> >>
> >> During a recent package submission, we were highlighted that some lines
> in
> >> our configure script didn't follow the correct syntax. The lines looked
> like
> >> this:
> >>
> >> x=$(($y/10))
> >>
> >> We were indicated at the time that this is because the statement does
> not
> >> use Bourne shell syntax, which is absolutely true, and also that the
> manual
> >> warns about this, which is true again. So far everything is clear.
> >>
> >> However, what confuses me is that even when the manual says that "you
> can
> >> include an executable (Bourne) shell script configure in your package"
> [1],
> >> the associated footnote says something slightly different: "The script
> >> should only assume a POSIX-compliant /bin/sh" [2]. The footnote goes
> even
> >> further, and links to the POSIX specification of the Shell Command
> Language
> >> [3] (as published by The Open Group), which explicitly includes
> arithmetic
> >> expressions like the one above in its syntax [4].
> >>
> >> My question then is: what exact dialect should be considered? Given
> that the
> >> statement above does not work in the Bourne shell, I conclude that the
> >> Bourne shell is not POSIX-compliant. That in turn would make the manual
> >> ambiguous as to the precise dialect that should be used by our configure
> >> scripts, and either the shells used by R should be changed to be
> >> POSIX-compliants, or the manual edited to be more precise regarding .
> >>
> >> Many thanks.
> >>
> >> Rodrigo
> >>
> >> [1]
> >> https://cran.r-project.org/doc/manuals/r-release/R-exts.
> html#Configure-and-cleanup
> >> [2] https://cran.r-project.org/doc/manuals/r-release/R-exts.html#FOOT25
> >> [3] http://pubs.opengroup.org/onlinepubs/9699919799/
> utilities/V3_chap02.html
> >> [4]
> >> http://pubs.opengroup.org/onlinepubs/9699919799/
> utilities/V3_chap02.html#tag_18_06_04
> >>
> >> ______________________________________________
> >> R-devel at r-project.org mailing list
> >> https://stat.ethz.ch/mailman/listinfo/r-devel
>
>
>
> > --
> > I?aki ?car
> > http://www.enchufa2.es
> > @Enchufa2
>
> > ______________________________________________
> > R-devel at r-project.org mailing list
> > https://stat.ethz.ch/mailman/listinfo/r-devel
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>

	[[alternative HTML version deleted]]


From pdalgd at gmail.com  Tue Dec 19 00:26:22 2017
From: pdalgd at gmail.com (peter dalgaard)
Date: Tue, 19 Dec 2017 00:26:22 +0100
Subject: [Rd] Dialect for shell scripts
In-Reply-To: <CAN6Gc-3zPkx-x7i0GKs3aWAGFTHA0zUqNv1MPJ6dsTh6jn96Fw@mail.gmail.com>
References: <98ab029a-fbbc-8297-b2e7-63857c43932f@icrar.org>
 <CALEXWq0qHBLYL15ikSiSCOmOh1wLMnrArT=7o0xbxMhDeJ2Pqw@mail.gmail.com>
 <23096.5582.934560.295269@hornik.net>
 <CAN6Gc-3zPkx-x7i0GKs3aWAGFTHA0zUqNv1MPJ6dsTh6jn96Fw@mail.gmail.com>
Message-ID: <0B88BEDA-36C6-4B05-BD57-986FAE257D77@gmail.com>

Solaris is pretty much dead at this point (closed source or not), but it is not the only oddball OS around. 

The need to support a wide palette of (Unix) OS variations has been rapidly declining in later years. Fifteen years ago every supercomputer seemed to have its own set of OS quirks and we wanted to be able to support the cutting edge. Now things seem to converge on a few variations on the big three: Windows, MacOS, Linux, possibly on some parallel/cloud infrastructure. 

However, it is probably worth maintaining the conservative defensive policies at least for a while yet.

(I suspect that the text in WRE is actually older than the current POSIX standard, which is what causes confusion as to what constitutes a Bourne shell. It may be worth editing it to say that we are in fact more restrictive than current POSIX.)

-pd  

> On 18 Dec 2017, at 23:36 , Paul McQuesten <mcquesten at gmail.com> wrote:
> 
> I do not have a dog in this fight, but I have to ask:
>    How much person time is worthwhile to invest in supporting Solaris 10?
> 
> It has been closed-source (Post-Oracle)
> <https://en.wikipedia.org/wiki/Solaris_(operating_system)#Post-Oracle_closed_source_(Solaris_10_after_March_2010,_and_Solaris_11_(2011_and_later))>
> since
> March 2010.
> 
> On Mon, Dec 18, 2017 at 1:23 PM, Kurt Hornik <Kurt.Hornik at wu.ac.at> wrote:
> 
>>>>>>> I?aki ?car writes:
>> 
>> Same from here: in addition to what the standards say, it always pays to
>> be defensive and check "Portable Shell Programming" in the Autoconf
>> manual.  Among other things, this says
>> 
>> '$((EXPRESSION))'
>>     Arithmetic expansion is not portable as some shells (most notably
>>     Solaris 10 '/bin/sh') don't support it.
>> 
>> motivating the code shown below.  Perhaps simplest to always use expr.
>> 
>> -k
>> 
>> 
>>> For what it's worth, Autoconf does not assume that arithmetic
>>> expansion will be available. Instead, it emits the following shell
>>> code:
>> 
>>> if ( eval 'test $(( 1 + 1 )) = 2' ) 2>/dev/null; then
>>>  eval 'func_arith ()
>>>  {
>>>    func_arith_result=$(( $* ))
>>>  }'
>>> else
>>>  func_arith ()
>>>  {
>>>    func_arith_result=`expr "$@"`
>>>  }
>>> fi
>> 
>>> 2017-12-17 23:55 GMT+01:00 Rodrigo Tobar <rtobar at icrar.org>:
>>>> Dear all,
>>>> 
>>>> During a recent package submission, we were highlighted that some lines
>> in
>>>> our configure script didn't follow the correct syntax. The lines looked
>> like
>>>> this:
>>>> 
>>>> x=$(($y/10))
>>>> 
>>>> We were indicated at the time that this is because the statement does
>> not
>>>> use Bourne shell syntax, which is absolutely true, and also that the
>> manual
>>>> warns about this, which is true again. So far everything is clear.
>>>> 
>>>> However, what confuses me is that even when the manual says that "you
>> can
>>>> include an executable (Bourne) shell script configure in your package"
>> [1],
>>>> the associated footnote says something slightly different: "The script
>>>> should only assume a POSIX-compliant /bin/sh" [2]. The footnote goes
>> even
>>>> further, and links to the POSIX specification of the Shell Command
>> Language
>>>> [3] (as published by The Open Group), which explicitly includes
>> arithmetic
>>>> expressions like the one above in its syntax [4].
>>>> 
>>>> My question then is: what exact dialect should be considered? Given
>> that the
>>>> statement above does not work in the Bourne shell, I conclude that the
>>>> Bourne shell is not POSIX-compliant. That in turn would make the manual
>>>> ambiguous as to the precise dialect that should be used by our configure
>>>> scripts, and either the shells used by R should be changed to be
>>>> POSIX-compliants, or the manual edited to be more precise regarding .
>>>> 
>>>> Many thanks.
>>>> 
>>>> Rodrigo
>>>> 
>>>> [1]
>>>> https://cran.r-project.org/doc/manuals/r-release/R-exts.
>> html#Configure-and-cleanup
>>>> [2] https://cran.r-project.org/doc/manuals/r-release/R-exts.html#FOOT25
>>>> [3] http://pubs.opengroup.org/onlinepubs/9699919799/
>> utilities/V3_chap02.html
>>>> [4]
>>>> http://pubs.opengroup.org/onlinepubs/9699919799/
>> utilities/V3_chap02.html#tag_18_06_04
>>>> 
>>>> ______________________________________________
>>>> R-devel at r-project.org mailing list
>>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>> 
>> 
>> 
>>> --
>>> I?aki ?car
>>> http://www.enchufa2.es
>>> @Enchufa2
>> 
>>> ______________________________________________
>>> R-devel at r-project.org mailing list
>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>> 
>> ______________________________________________
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel
>> 
> 
> 	[[alternative HTML version deleted]]
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel

-- 
Peter Dalgaard, Professor,
Center for Statistics, Copenhagen Business School
Solbjerg Plads 3, 2000 Frederiksberg, Denmark
Phone: (+45)38153501
Office: A 4.23
Email: pd.mes at cbs.dk  Priv: PDalgd at gmail.com


From rtobar at icrar.org  Tue Dec 19 02:35:15 2017
From: rtobar at icrar.org (Rodrigo Tobar)
Date: Tue, 19 Dec 2017 09:35:15 +0800
Subject: [Rd] Dialect for shell scripts
In-Reply-To: <0B88BEDA-36C6-4B05-BD57-986FAE257D77@gmail.com>
References: <98ab029a-fbbc-8297-b2e7-63857c43932f@icrar.org>
 <CALEXWq0qHBLYL15ikSiSCOmOh1wLMnrArT=7o0xbxMhDeJ2Pqw@mail.gmail.com>
 <23096.5582.934560.295269@hornik.net>
 <CAN6Gc-3zPkx-x7i0GKs3aWAGFTHA0zUqNv1MPJ6dsTh6jn96Fw@mail.gmail.com>
 <0B88BEDA-36C6-4B05-BD57-986FAE257D77@gmail.com>
Message-ID: <a4e86154-3340-2b6f-4c29-61b3949c613a@icrar.org>

Hi all,

Thanks to all for your responses. As pointed out by a few of you, using 
expr is indeed safer, and is what we ended up using in our script to get 
it accepted in CRAN.

On 19/12/17 07:26, peter dalgaard wrote:
> (I suspect that the text in WRE is actually older than the current POSIX standard, which is what causes confusion as to what constitutes a Bourne shell. It may be worth editing it to say that we are in fact more restrictive than current POSIX.)

This was exactly my point, and I think it would be great to have this 
clarified in the manual to avoid any unsuspected surprises during 
package submission. Since R expectations are naturally aligned with 
autoconf's it would be worth noting that, and maybe also pointing to the 
resource pointed at by I?aki.

I think the discussion about supported OSs is also an interesting one, 
but is greater than just about this particular subject.

Regards,

Rodrigo


From edgarcia at est-econ.uc3m.es  Tue Dec 19 20:12:14 2017
From: edgarcia at est-econ.uc3m.es (EDUARDO GARCIA PORTUGUES)
Date: Tue, 19 Dec 2017 19:12:14 +0000
Subject: [Rd] lm considers removed predictors when finding complete cases
Message-ID: <CALzd1DLsa++2DXU5yZidQ3V5tJG5j9xCa4j_8s6B2mwDOwaqHw@mail.gmail.com>

Dear R-devel list,

I realized that removing a predictor in lm through the "-"'s operator in
formula() does not affect the complete cases that are considered. A minimal
example is:

summary(lm(Wind ~ ., data = airquality))
# 42 observations deleted due to missingness

summary(lm(Wind ~ . - Ozone, data = airquality))
# still 42 observations deleted due to missingness, even if only 7 are
# missing for the response and the rest of the predictors

summary(lm(Wind ~ ., data = subset(airquality, select = -Ozone)))
# 7 observations deleted due to missingness

I find this behaviour somehow striking and I was wondering whether it is
intended, or whether it would be appropriate to document it in lm's help.

Any insight on this issue is appreciated.

Best regards,
-- 
Eduardo Garc?a Portugu?s
Assistant professor
Department of Statistics
Carlos III University of Madrid

Office: 7.3.J21 (Legan?s)
Phone: (+34) 91624 8836

	[[alternative HTML version deleted]]


From csardi.gabor at gmail.com  Tue Dec 19 21:22:29 2017
From: csardi.gabor at gmail.com (=?UTF-8?B?R8OhYm9yIENzw6FyZGk=?=)
Date: Tue, 19 Dec 2017 20:22:29 +0000
Subject: [Rd] abort
Message-ID: <CABtg=KkQ49SShKTNeNLmhpT0DFbU21Y-rabctmU2OYGuAuOitw@mail.gmail.com>

FYI. G?bor

? R --vanilla -q
> sessionInfo()
R version 3.4.3 (2017-11-30)
Platform: x86_64-apple-darwin15.6.0 (64-bit)
Running under: macOS Sierra 10.12.6

Matrix products: default
BLAS: /Library/Frameworks/R.framework/Versions/3.4/Resources/lib/libRblas.0.dylib
LAPACK: /Library/Frameworks/R.framework/Versions/3.4/Resources/lib/libRlapack.dylib

locale:
[1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8

attached base packages:
[1] stats     graphics  grDevices utils     datasets  methods   base

loaded via a namespace (and not attached):
[1] compiler_3.4.3
> conditionCall.x <- function(c) strrep("xxx?", 3000)
> stop(structure(list(message="1"), class=c("x","condition")))
zsh: abort      R --vanilla -q


From luke-tierney at uiowa.edu  Tue Dec 19 23:46:17 2017
From: luke-tierney at uiowa.edu (luke-tierney at uiowa.edu)
Date: Tue, 19 Dec 2017 16:46:17 -0600 (CST)
Subject: [Rd] abort
In-Reply-To: <CABtg=KkQ49SShKTNeNLmhpT0DFbU21Y-rabctmU2OYGuAuOitw@mail.gmail.com>
References: <CABtg=KkQ49SShKTNeNLmhpT0DFbU21Y-rabctmU2OYGuAuOitw@mail.gmail.com>
Message-ID: <alpine.DEB.2.20.1712191645400.8786@luke-Latitude>

Thanks; fixed in R-devel and R-patched.

Best,

luke

On Tue, 19 Dec 2017, G?bor Cs?rdi wrote:

> FYI. G?bor
>
> ? R --vanilla -q
>> sessionInfo()
> R version 3.4.3 (2017-11-30)
> Platform: x86_64-apple-darwin15.6.0 (64-bit)
> Running under: macOS Sierra 10.12.6
>
> Matrix products: default
> BLAS: /Library/Frameworks/R.framework/Versions/3.4/Resources/lib/libRblas.0.dylib
> LAPACK: /Library/Frameworks/R.framework/Versions/3.4/Resources/lib/libRlapack.dylib
>
> locale:
> [1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8
>
> attached base packages:
> [1] stats     graphics  grDevices utils     datasets  methods   base
>
> loaded via a namespace (and not attached):
> [1] compiler_3.4.3
>> conditionCall.x <- function(c) strrep("xxx?", 3000)
>> stop(structure(list(message="1"), class=c("x","condition")))
> zsh: abort      R --vanilla -q
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel

-- 
Luke Tierney
Ralph E. Wareham Professor of Mathematical Sciences
University of Iowa                  Phone:             319-335-3386
Department of Statistics and        Fax:               319-335-3017
    Actuarial Science
241 Schaeffer Hall                  email:   luke-tierney at uiowa.edu
Iowa City, IA 52242                 WWW:  http://www.stat.uiowa.edu

From dwinsemius at comcast.net  Wed Dec 20 01:22:57 2017
From: dwinsemius at comcast.net (David Winsemius)
Date: Tue, 19 Dec 2017 16:22:57 -0800
Subject: [Rd] lm considers removed predictors when finding complete cases
In-Reply-To: <CALzd1DLsa++2DXU5yZidQ3V5tJG5j9xCa4j_8s6B2mwDOwaqHw@mail.gmail.com>
References: <CALzd1DLsa++2DXU5yZidQ3V5tJG5j9xCa4j_8s6B2mwDOwaqHw@mail.gmail.com>
Message-ID: <D00909B5-FB2E-4FDA-92F3-B4555C5E60E8@comcast.net>


> On Dec 19, 2017, at 11:12 AM, EDUARDO GARCIA PORTUGUES <edgarcia at est-econ.uc3m.es> wrote:
> 
> Dear R-devel list,
> 
> I realized that removing a predictor in lm through the "-"'s operator in
> formula() does not affect the complete cases that are considered. A minimal
> example is:
> 
> summary(lm(Wind ~ ., data = airquality))
> # 42 observations deleted due to missingness
> 
> summary(lm(Wind ~ . - Ozone, data = airquality))
> # still 42 observations deleted due to missingness, even if only 7 are
> # missing for the response and the rest of the predictors
> 
> summary(lm(Wind ~ ., data = subset(airquality, select = -Ozone)))
> # 7 observations deleted due to missingness
> 
> I find this behaviour somehow striking and I was wondering whether it is
> intended, or whether it would be appropriate to document it in lm's help.

The behavior in the second instance seems consistent with a desire to compare models (full versus reduced) based on the same data. You expectation appears to be something else but you have not really explained your rationale for a different expectation other than to call it "striking". If by "striking" you mean hitting your head and saying "Oh course, I should have thought of that" then we would be in agreement.

-- 
David.
> 
> Any insight on this issue is appreciated.
> 
> Best regards,
> -- 
> Eduardo Garc?a Portugu?s
> Assistant professor
> Department of Statistics
> Carlos III University of Madrid
> 
> Office: 7.3.J21 (Legan?s)
> Phone: (+34) 91624 8836
> 
> 	[[alternative HTML version deleted]]
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel

David Winsemius
Alameda, CA, USA

'Any technology distinguishable from magic is insufficiently advanced.'   -Gehm's Corollary to Clarke's Third Law


From csardi.gabor at gmail.com  Wed Dec 20 14:38:50 2017
From: csardi.gabor at gmail.com (=?UTF-8?B?R8OhYm9yIENzw6FyZGk=?=)
Date: Wed, 20 Dec 2017 13:38:50 +0000
Subject: [Rd] utils::unzip ignores overwrite argument, effectively
Message-ID: <CABtg=KkUdpqg1mw=PNNSqTJDyjEk0WZFaZMMXQXWfV7rmjUE=w@mail.gmail.com>

It does give a warning, but then it overwrites the files, anyway.
Reproducible example below.

This is R 3.4.3, but it does not seem to be fixed in R-devel:
https://github.com/wch/r-source/blob/4a9ca3e5ac6b19d7faa7c9290374f7604bf0ef64/src/main/dounzip.c#L171-L174

FYI,
G?bor

dir.create(tmp <- tempfile())
setwd(tmp)

cat("old1\n", file = "file1")
cat("old2\n", file = "file2")

utils::zip("files.zip", c("file1", "file2"))
#>   adding: file1 (stored 0%)
#>   adding: file2 (stored 0%)

unlink("file2")
cat("new1\n", file = "file1")
readLines("file1")
#> [1] "new1"

utils::unzip("files.zip", overwrite = FALSE)
#> Warning message:
#> In utils::unzip("files.zip", overwrite = FALSE) :
#>    not overwriting file './file1

readLines("file1")
#> [1] "old1"


From winstonchang1 at gmail.com  Wed Dec 20 18:42:47 2017
From: winstonchang1 at gmail.com (Winston Chang)
Date: Wed, 20 Dec 2017 11:42:47 -0600
Subject: [Rd] R CMD check warning about compiler warning flags
Message-ID: <CAFOpNVGKQjffBAF0+yJL7jFh7z7zDj+VsQAqnjXDjM9ZWE02Gg@mail.gmail.com>

On recent builds of R-devel, R CMD check gives a WARNING when some
compiler warning flags are detected, such as -Werror, because they are
non-portable. This appears to have been added in this commit:
  https://github.com/wch/r-source/commit/2e80059

I'm working on a package where these compiler warning flags are
present in a Makefile generated by a configure script -- that is, the
configure script detects whether the compiler supports these flags,
and if so, puts them in the Makefile. (The configure script is for a
third-party C library which is in a subdirectory of src/.)

Because the flags are added only if the system supports them, there
shouldn't be any worries about portability in practice.

Is there a way to get R CMD check to not raise warnings in cases like
this? I know I could modify the C library's configure.ac (which is
used to generate the configure script) but I'd prefer to leave the
library's code untouched if possible.

-Winston


From therneau at mayo.edu  Wed Dec 20 22:43:43 2017
From: therneau at mayo.edu (Therneau, Terry M., Ph.D.)
Date: Wed, 20 Dec 2017 15:43:43 -0600
Subject: [Rd] R_RegisterCCallable
Message-ID: <375144$8htrvm@ironport10.mayo.edu>

I've just converted all the C symbols in bdsmatrix to use the more modern form, e.g.,

 ?? .C("charle", ....??? changed to .C( Ccharlie, ....

along with defining RCMethodDef in my initfile and adding .register=TRUE to the NAMESPACE 
file.? All due to a request from CRAN to modernize one aspect, which then cascaded into 
more via suggestions from R CMD check --as-cran.

My question concerns the crosstalk with coxme.? Currently bdsmatrix has lines like the 
following:

 ??? R_RegisterCCallable("bdsmatrix","cholesky4", (DL_FUNC) &cholesky4);

while coxme has

 ??? fun= (int(*)) R_GetCCallable("bdsmatrix", "cholesky4");


Should these also change to use the pseudo name, or is it fine as is?

Terry Therneau


From ripley at stats.ox.ac.uk  Wed Dec 20 23:26:56 2017
From: ripley at stats.ox.ac.uk (Prof Brian Ripley)
Date: Wed, 20 Dec 2017 22:26:56 +0000
Subject: [Rd] R CMD check warning about compiler warning flags
In-Reply-To: <CAFOpNVGKQjffBAF0+yJL7jFh7z7zDj+VsQAqnjXDjM9ZWE02Gg@mail.gmail.com>
References: <CAFOpNVGKQjffBAF0+yJL7jFh7z7zDj+VsQAqnjXDjM9ZWE02Gg@mail.gmail.com>
Message-ID: <18c039b2-7b26-2792-565b-f305bae51938@stats.ox.ac.uk>

On 20/12/2017 17:42, Winston Chang wrote:
> On recent builds of R-devel, R CMD check gives a WARNING when some
> compiler warning flags are detected, such as -Werror, because they are
> non-portable. This appears to have been added in this commit:
>    https://github.com/wch/r-source/commit/2e80059

That is not the canonical R sources.  And your description seems wrong: 
there is now an _optional_ check controlled by an environment variable, 
primarily for CRAN checks.

> I'm working on a package where these compiler warning flags are
> present in a Makefile generated by a configure script -- that is, the
> configure script detects whether the compiler supports these flags,
> and if so, puts them in the Makefile. (The configure script is for a
> third-party C library which is in a subdirectory of src/.)
> 
> Because the flags are added only if the system supports them, there
> shouldn't be any worries about portability in practice.

Please read the explanation in the manual: there are serious concerns 
about such flags which have bitten CRAN users several times.

To take your example, you cannot know what -Werror does on all compilers 
(past, present or future) where it is supported (and -W flags do do 
different things on different compilers).  On current gcc it does

        -Werror
            Make all warnings into errors.

and so its effect depends on what other flags are used (people typically 
use -Wall, and most new versions of both gcc and clang add more warnings 
to -Wall -- I read this week exactly such a discussion about the 
interaction of -Werror with -Wtautological-constant-compare as part of 
-Wall in clang trunk).

> Is there a way to get R CMD check to not raise warnings in cases like
> this? I know I could modify the C library's configure.ac (which is
> used to generate the configure script) but I'd prefer to leave the
> library's code untouched if possible.
You don't need to (and most likely should not) use the C[XX]FLAGS it 
generates ... just use the flags which R passes to the package to use.

> 
> -Winston

-- 
Brian D. Ripley,                  ripley at stats.ox.ac.uk
Emeritus Professor of Applied Statistics, University of Oxford


From h.wickham at gmail.com  Wed Dec 20 23:48:10 2017
From: h.wickham at gmail.com (Hadley Wickham)
Date: Wed, 20 Dec 2017 16:48:10 -0600
Subject: [Rd] R CMD check warning about compiler warning flags
In-Reply-To: <18c039b2-7b26-2792-565b-f305bae51938@stats.ox.ac.uk>
References: <CAFOpNVGKQjffBAF0+yJL7jFh7z7zDj+VsQAqnjXDjM9ZWE02Gg@mail.gmail.com>
 <18c039b2-7b26-2792-565b-f305bae51938@stats.ox.ac.uk>
Message-ID: <CABdHhvGXtwC2nDN-SRs0ozEfiqcV7qDFDXk6D4HPNHow+aW9iA@mail.gmail.com>

On Wed, Dec 20, 2017 at 4:26 PM, Prof Brian Ripley
<ripley at stats.ox.ac.uk> wrote:
> On 20/12/2017 17:42, Winston Chang wrote:
>>
>> On recent builds of R-devel, R CMD check gives a WARNING when some
>> compiler warning flags are detected, such as -Werror, because they are
>> non-portable. This appears to have been added in this commit:
>>    https://github.com/wch/r-source/commit/2e80059
>
>
> That is not the canonical R sources.  And your description seems wrong:
> there is now an _optional_ check controlled by an environment variable,
> primarily for CRAN checks.

Are the canonical R sources made available in such a way that one can
link to them?

Hadley

-- 
http://hadley.nz


From murdoch.duncan at gmail.com  Thu Dec 21 00:52:25 2017
From: murdoch.duncan at gmail.com (Duncan Murdoch)
Date: Wed, 20 Dec 2017 18:52:25 -0500
Subject: [Rd] R CMD check warning about compiler warning flags
In-Reply-To: <CABdHhvGXtwC2nDN-SRs0ozEfiqcV7qDFDXk6D4HPNHow+aW9iA@mail.gmail.com>
References: <CAFOpNVGKQjffBAF0+yJL7jFh7z7zDj+VsQAqnjXDjM9ZWE02Gg@mail.gmail.com>
 <18c039b2-7b26-2792-565b-f305bae51938@stats.ox.ac.uk>
 <CABdHhvGXtwC2nDN-SRs0ozEfiqcV7qDFDXk6D4HPNHow+aW9iA@mail.gmail.com>
Message-ID: <d46dcb5b-3596-c77d-a6c2-61773f9ccd68@gmail.com>

On 20/12/2017 5:48 PM, Hadley Wickham wrote:
> On Wed, Dec 20, 2017 at 4:26 PM, Prof Brian Ripley
> <ripley at stats.ox.ac.uk> wrote:
>> On 20/12/2017 17:42, Winston Chang wrote:
>>>
>>> On recent builds of R-devel, R CMD check gives a WARNING when some
>>> compiler warning flags are detected, such as -Werror, because they are
>>> non-portable. This appears to have been added in this commit:
>>>     https://github.com/wch/r-source/commit/2e80059
>>
>>
>> That is not the canonical R sources.  And your description seems wrong:
>> there is now an _optional_ check controlled by an environment variable,
>> primarily for CRAN checks.
> 
> Are the canonical R sources made available in such a way that one can
> link to them?

Yes, the sources are available.  To link to revision 73909 of R on the 
trunk branch (which I think is the one referred to above), use

https://svn.r-project.org/R/trunk/?r=73909

I'm not sure if there's an easy way to see the diff between that and 
73908 (which is what the github link showed).  I also don't know if 
there's a way to show the diff between commit N and N-1 in github if I 
only know N.

Duncan Murdoch


From erinm.hodgess at gmail.com  Thu Dec 21 02:03:25 2017
From: erinm.hodgess at gmail.com (Erin Hodgess)
Date: Wed, 20 Dec 2017 19:03:25 -0600
Subject: [Rd] Building R from source with the PGI compiler
Message-ID: <CACxE24noXU3-kX_2mhvqEc354kHW7pCEGOF6iBbFwXn8nkEnBA@mail.gmail.com>

Hello

I would like to build R from source and use the PGI compiler, rather than
the GCC compiler.

I saw the instructions for the Intel compiler in the R Installation Manual,
but I didn't see the PGI.  I tried a few times without instructions, but
without success.

Any suggestions would be most welcome.  Also, I hope this is the right
group for the question.

Sincerely,
Erin



-- 
Erin Hodgess
Associate Professor
Department of Mathematical and Statistics
University of Houston - Downtown
mailto: erinm.hodgess at gmail.com

	[[alternative HTML version deleted]]


From ripley at stats.ox.ac.uk  Thu Dec 21 11:36:37 2017
From: ripley at stats.ox.ac.uk (Prof Brian Ripley)
Date: Thu, 21 Dec 2017 10:36:37 +0000
Subject: [Rd] Building R from source with the PGI compiler
In-Reply-To: <CACxE24noXU3-kX_2mhvqEc354kHW7pCEGOF6iBbFwXn8nkEnBA@mail.gmail.com>
References: <CACxE24noXU3-kX_2mhvqEc354kHW7pCEGOF6iBbFwXn8nkEnBA@mail.gmail.com>
Message-ID: <fc0cdf2d-3ff1-3e44-906e-4d9216983c9c@stats.ox.ac.uk>

On 21/12/2017 01:03, Erin Hodgess wrote:
> Hello
> 
> I would like to build R from source and use the PGI compiler, rather than
> the GCC compiler.

On what platform?  AFAIK we have only ever had reports on Linux.

> I saw the instructions for the Intel compiler in the R Installation Manual,
> but I didn't see the PGI.  I tried a few times without instructions, but
> without success.
> 
> Any suggestions would be most welcome.  Also, I hope this is the right
> group for the question.

It is.  Earlier versions of the  manual did contain info on using the 
PG(I) Linux compilers but as we had no reports for a long time, the 
probably-stale info was removed.  It looks like the info was added in 
late 2005, so you could try grabbing R sources from, say, 2007.

> 
> Sincerely,
> Erin


-- 
Brian D. Ripley,                  ripley at stats.ox.ac.uk
Emeritus Professor of Applied Statistics, University of Oxford


From jtelleriar at gmail.com  Thu Dec 21 12:46:25 2017
From: jtelleriar at gmail.com (Juan Telleria)
Date: Thu, 21 Dec 2017 12:46:25 +0100
Subject: [Rd] Wish List: base::source() + Add Execution Time Argument
Message-ID: <CANNd7=mvnfnuYHDfxog-bSLkKnG_AiMcmTj7p7GOj_hh_D5VYw@mail.gmail.com>

Dear R Developers,

Adding to source() base function a Timer which indicates the execution time
of the source code would be a very well welcome feature, and in my opinion
not difficult to implement as an additional funtion argument.

The source(timing = TRUE) function shall execute internally the following
code for each statement:

old <- Sys.time() # get start time at the beginning of source()
# source code
# print elapsed time
new <- Sys.time() - old # calculate difference
print(new) # print in nice format

Thank you.

Kind regards,

Juan Telleria

	[[alternative HTML version deleted]]


From murdoch.duncan at gmail.com  Thu Dec 21 13:01:38 2017
From: murdoch.duncan at gmail.com (Duncan Murdoch)
Date: Thu, 21 Dec 2017 07:01:38 -0500
Subject: [Rd] R CMD check warning about compiler warning flags
In-Reply-To: <d46dcb5b-3596-c77d-a6c2-61773f9ccd68@gmail.com>
References: <CAFOpNVGKQjffBAF0+yJL7jFh7z7zDj+VsQAqnjXDjM9ZWE02Gg@mail.gmail.com>
 <18c039b2-7b26-2792-565b-f305bae51938@stats.ox.ac.uk>
 <CABdHhvGXtwC2nDN-SRs0ozEfiqcV7qDFDXk6D4HPNHow+aW9iA@mail.gmail.com>
 <d46dcb5b-3596-c77d-a6c2-61773f9ccd68@gmail.com>
Message-ID: <bb3e19af-7b4c-48ea-cd0e-ff72d24617dd@gmail.com>

On 20/12/2017 6:52 PM, Duncan Murdoch wrote:
> On 20/12/2017 5:48 PM, Hadley Wickham wrote:
>> On Wed, Dec 20, 2017 at 4:26 PM, Prof Brian Ripley
>> <ripley at stats.ox.ac.uk> wrote:
>>> On 20/12/2017 17:42, Winston Chang wrote:
>>>>
>>>> On recent builds of R-devel, R CMD check gives a WARNING when some
>>>> compiler warning flags are detected, such as -Werror, because they are
>>>> non-portable. This appears to have been added in this commit:
>>>>      https://github.com/wch/r-source/commit/2e80059
>>>
>>>
>>> That is not the canonical R sources.  And your description seems wrong:
>>> there is now an _optional_ check controlled by an environment variable,
>>> primarily for CRAN checks.
>>
>> Are the canonical R sources made available in such a way that one can
>> link to them?
> 
> Yes, the sources are available.  To link to revision 73909 of R on the
> trunk branch (which I think is the one referred to above), use
> 
> https://svn.r-project.org/R/trunk/?r=73909
> 
> I'm not sure if there's an easy way to see the diff between that and
> 73908 (which is what the github link showed).  

After checking a bit online, it appears there are projects WebSVN, USVN 
and ViewVC that should do this. I don't know if anyone has set up views 
of the R repository with any of those.  I've never used them, I just use 
local tools.  In the past I used Windows-only TortoiseSVN (and it is 
still one of the most attractive features of Windows); now I use RStudio 
or command line svn.  As you know, RStudio's interface is somewhat 
limited, and as far as I know it can't display features of remote 
repositories.

I also don't know if
> there's a way to show the diff between commit N and N-1 in github if I
> only know N.

I still don't know this.

Duncan Murdoch


From i.ucar86 at gmail.com  Thu Dec 21 13:06:37 2017
From: i.ucar86 at gmail.com (=?UTF-8?B?ScOxYWtpIMOaY2Fy?=)
Date: Thu, 21 Dec 2017 13:06:37 +0100
Subject: [Rd] Wish List: base::source() + Add Execution Time Argument
In-Reply-To: <CANNd7=mvnfnuYHDfxog-bSLkKnG_AiMcmTj7p7GOj_hh_D5VYw@mail.gmail.com>
References: <CANNd7=mvnfnuYHDfxog-bSLkKnG_AiMcmTj7p7GOj_hh_D5VYw@mail.gmail.com>
Message-ID: <CALEXWq190cRMDoS9MXkmJdzqDDd=T4rP99Jvi5MGAJ5ZrcGrHA@mail.gmail.com>

2017-12-21 12:46 GMT+01:00 Juan Telleria <jtelleriar at gmail.com>:
> Dear R Developers,
>
> Adding to source() base function a Timer which indicates the execution time
> of the source code would be a very well welcome feature, and in my opinion
> not difficult to implement as an additional funtion argument.
>
> The source(timing = TRUE) function shall execute internally the following
> code for each statement:
>
> old <- Sys.time() # get start time at the beginning of source()
> # source code
> # print elapsed time
> new <- Sys.time() - old # calculate difference
> print(new) # print in nice format

system.time(source(...)) does what you want.

I?aki


From jtelleriar at gmail.com  Thu Dec 21 15:05:36 2017
From: jtelleriar at gmail.com (Juan Telleria)
Date: Thu, 21 Dec 2017 15:05:36 +0100
Subject: [Rd] Wish List: base::source() + Add Execution Time Argument
In-Reply-To: <CALEXWq190cRMDoS9MXkmJdzqDDd=T4rP99Jvi5MGAJ5ZrcGrHA@mail.gmail.com>
References: <CANNd7=mvnfnuYHDfxog-bSLkKnG_AiMcmTj7p7GOj_hh_D5VYw@mail.gmail.com>
 <CALEXWq190cRMDoS9MXkmJdzqDDd=T4rP99Jvi5MGAJ5ZrcGrHA@mail.gmail.com>
Message-ID: <CANNd7=nYOPrZq9LTCee8CqAX+LZE2wCa-zi-J0EBjs8UZrXjeA@mail.gmail.com>

But by statement in the source file, I mean, for knowing during the
execution how much time is taking, without having to wait till the end.

2017-12-21 13:06 GMT+01:00 I?aki ?car <i.ucar86 at gmail.com>:

> 2017-12-21 12:46 GMT+01:00 Juan Telleria <jtelleriar at gmail.com>:
> > Dear R Developers,
> >
> > Adding to source() base function a Timer which indicates the execution
> time
> > of the source code would be a very well welcome feature, and in my
> opinion
> > not difficult to implement as an additional funtion argument.
> >
> > The source(timing = TRUE) function shall execute internally the following
> > code for each statement:
> >
> > old <- Sys.time() # get start time at the beginning of source()
> > # source code
> > # print elapsed time
> > new <- Sys.time() - old # calculate difference
> > print(new) # print in nice format
>
> system.time(source(...)) does what you want.
>
> I?aki
>

	[[alternative HTML version deleted]]


From i.ucar86 at gmail.com  Thu Dec 21 15:20:39 2017
From: i.ucar86 at gmail.com (=?UTF-8?B?ScOxYWtpIMOaY2Fy?=)
Date: Thu, 21 Dec 2017 15:20:39 +0100
Subject: [Rd] Wish List: base::source() + Add Execution Time Argument
In-Reply-To: <CANNd7=nYOPrZq9LTCee8CqAX+LZE2wCa-zi-J0EBjs8UZrXjeA@mail.gmail.com>
References: <CANNd7=mvnfnuYHDfxog-bSLkKnG_AiMcmTj7p7GOj_hh_D5VYw@mail.gmail.com>
 <CALEXWq190cRMDoS9MXkmJdzqDDd=T4rP99Jvi5MGAJ5ZrcGrHA@mail.gmail.com>
 <CANNd7=nYOPrZq9LTCee8CqAX+LZE2wCa-zi-J0EBjs8UZrXjeA@mail.gmail.com>
Message-ID: <CALEXWq079=c0cz1JvxCh8_AqOUPC8jw=-jEzbHyHvF6ea4MyEQ@mail.gmail.com>

2017-12-21 15:05 GMT+01:00 Juan Telleria <jtelleriar at gmail.com>:
> But by statement in the source file, I mean, for knowing during the
> execution how much time is taking, without having to wait till the end.

What's the ultimate purpose? Are you looking for a profiler (there are
some of them on CRAN) or some kind of progress bar (something like the
'progress' package would be useful)?

I?aki


From jtelleriar at gmail.com  Thu Dec 21 16:49:17 2017
From: jtelleriar at gmail.com (Juan Telleria)
Date: Thu, 21 Dec 2017 16:49:17 +0100
Subject: [Rd] Wish List: base::source() + Add Execution Time Argument
In-Reply-To: <CALEXWq079=c0cz1JvxCh8_AqOUPC8jw=-jEzbHyHvF6ea4MyEQ@mail.gmail.com>
References: <CANNd7=mvnfnuYHDfxog-bSLkKnG_AiMcmTj7p7GOj_hh_D5VYw@mail.gmail.com>
 <CALEXWq190cRMDoS9MXkmJdzqDDd=T4rP99Jvi5MGAJ5ZrcGrHA@mail.gmail.com>
 <CANNd7=nYOPrZq9LTCee8CqAX+LZE2wCa-zi-J0EBjs8UZrXjeA@mail.gmail.com>
 <CALEXWq079=c0cz1JvxCh8_AqOUPC8jw=-jEzbHyHvF6ea4MyEQ@mail.gmail.com>
Message-ID: <CANNd7=n7CxnNHrXR8AWWABEnxLuiC1zbK9hqjwBibQLf0kp6MA@mail.gmail.com>

I did not know "progress" package existed, thank you I?aki.

However, something like that would be nice to have by default in source(),
just something to add to R's "wish list", so that everybody can benefit
from it without extra-packages, as most of us I suppose we will spend all
day simply doing Ctrl + Run :)

Thank you,
Juan

2017-12-21 15:20 GMT+01:00 I?aki ?car <i.ucar86 at gmail.com>:

> 2017-12-21 15:05 GMT+01:00 Juan Telleria <jtelleriar at gmail.com>:
> > But by statement in the source file, I mean, for knowing during the
> > execution how much time is taking, without having to wait till the end.
>
> What's the ultimate purpose? Are you looking for a profiler (there are
> some of them on CRAN) or some kind of progress bar (something like the
> 'progress' package would be useful)?
>
> I?aki
>

	[[alternative HTML version deleted]]


From wdunlap at tibco.com  Thu Dec 21 17:31:18 2017
From: wdunlap at tibco.com (William Dunlap)
Date: Thu, 21 Dec 2017 08:31:18 -0800
Subject: [Rd] Wish List: base::source() + Add Execution Time Argument
In-Reply-To: <CANNd7=mvnfnuYHDfxog-bSLkKnG_AiMcmTj7p7GOj_hh_D5VYw@mail.gmail.com>
References: <CANNd7=mvnfnuYHDfxog-bSLkKnG_AiMcmTj7p7GOj_hh_D5VYw@mail.gmail.com>
Message-ID: <CAF8bMca=5KcNt=2=ybsr+fP3L447xjCq2H2okKHU-zoibc2xFQ@mail.gmail.com>

Is source() the right place for this?  It may be, but we've had customers
who would like
this sort of thing done for commands entered by hand.  And there are those
who want
a description of any "non-triivial" objects created in .GlobalEnv by each
expression, ...
Do they need a way to wrap each expression evaluated in envir=.GlobalEnv
with a
function of their choice, one that would print times, datasets created,
etc.?

Bill Dunlap
TIBCO Software
wdunlap tibco.com

On Thu, Dec 21, 2017 at 3:46 AM, Juan Telleria <jtelleriar at gmail.com> wrote:

> Dear R Developers,
>
> Adding to source() base function a Timer which indicates the execution time
> of the source code would be a very well welcome feature, and in my opinion
> not difficult to implement as an additional funtion argument.
>
> The source(timing = TRUE) function shall execute internally the following
> code for each statement:
>
> old <- Sys.time() # get start time at the beginning of source()
> # source code
> # print elapsed time
> new <- Sys.time() - old # calculate difference
> print(new) # print in nice format
>
> Thank you.
>
> Kind regards,
>
> Juan Telleria
>
>         [[alternative HTML version deleted]]
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>

	[[alternative HTML version deleted]]


From james.f.hester at gmail.com  Thu Dec 21 18:45:47 2017
From: james.f.hester at gmail.com (Jim Hester)
Date: Thu, 21 Dec 2017 12:45:47 -0500
Subject: [Rd] Wish List: base::source() + Add Execution Time Argument
In-Reply-To: <CAF8bMca=5KcNt=2=ybsr+fP3L447xjCq2H2okKHU-zoibc2xFQ@mail.gmail.com>
References: <CANNd7=mvnfnuYHDfxog-bSLkKnG_AiMcmTj7p7GOj_hh_D5VYw@mail.gmail.com>
 <CAF8bMca=5KcNt=2=ybsr+fP3L447xjCq2H2okKHU-zoibc2xFQ@mail.gmail.com>
Message-ID: <CAD6tx95qxS3+xc3M_j-yVLdOt5pQP-uK9JqVhU1iZYBg66Se3A@mail.gmail.com>

R does provide the addTaskCallback / taskCallbackManager to run a
callback function after every top level command. However there is not
an equivalent interface that would be run _before_ each command, which
would make it possible to time of top level calls and provide other
execution measurements.

On Thu, Dec 21, 2017 at 11:31 AM, William Dunlap via R-devel
<r-devel at r-project.org> wrote:
> Is source() the right place for this?  It may be, but we've had customers
> who would like
> this sort of thing done for commands entered by hand.  And there are those
> who want
> a description of any "non-triivial" objects created in .GlobalEnv by each
> expression, ...
> Do they need a way to wrap each expression evaluated in envir=.GlobalEnv
> with a
> function of their choice, one that would print times, datasets created,
> etc.?
>
> Bill Dunlap
> TIBCO Software
> wdunlap tibco.com
>
> On Thu, Dec 21, 2017 at 3:46 AM, Juan Telleria <jtelleriar at gmail.com> wrote:
>
>> Dear R Developers,
>>
>> Adding to source() base function a Timer which indicates the execution time
>> of the source code would be a very well welcome feature, and in my opinion
>> not difficult to implement as an additional funtion argument.
>>
>> The source(timing = TRUE) function shall execute internally the following
>> code for each statement:
>>
>> old <- Sys.time() # get start time at the beginning of source()
>> # source code
>> # print elapsed time
>> new <- Sys.time() - old # calculate difference
>> print(new) # print in nice format
>>
>> Thank you.
>>
>> Kind regards,
>>
>> Juan Telleria
>>
>>         [[alternative HTML version deleted]]
>>
>> ______________________________________________
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>
>
>         [[alternative HTML version deleted]]
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From winstonchang1 at gmail.com  Thu Dec 21 19:02:08 2017
From: winstonchang1 at gmail.com (Winston Chang)
Date: Thu, 21 Dec 2017 12:02:08 -0600
Subject: [Rd] R CMD check warning about compiler warning flags
In-Reply-To: <18c039b2-7b26-2792-565b-f305bae51938@stats.ox.ac.uk>
References: <CAFOpNVGKQjffBAF0+yJL7jFh7z7zDj+VsQAqnjXDjM9ZWE02Gg@mail.gmail.com>
 <18c039b2-7b26-2792-565b-f305bae51938@stats.ox.ac.uk>
Message-ID: <CAFOpNVE-sX3kwPTzcLVY6p6xkQAo8UJJN=bBa6f6_1+kKgV7-g@mail.gmail.com>

>> On recent builds of R-devel, R CMD check gives a WARNING when some
>> compiler warning flags are detected, such as -Werror, because they are
>> non-portable. This appears to have been added in this commit:
>>    https://github.com/wch/r-source/commit/2e80059
>
> That is not the canonical R sources.

Yes, that is obvious. The main page for that repository says it is a
mirror of the R sources, right at the top. I know that because I put
the message there, and because I see it every time I visit the
repository. If you have a good way of pointing people to the changes
made in a commit with the canonical R sources, please let us know. I
and many others would be happy to use it.

> And your description seems wrong:
> there is now an _optional_ check controlled by an environment variable,
> primarily for CRAN checks.

The check is "optional", but not for packages submitted to CRAN.


>> I'm working on a package where these compiler warning flags are
>> present in a Makefile generated by a configure script -- that is, the
>> configure script detects whether the compiler supports these flags,
>> and if so, puts them in the Makefile. (The configure script is for a
>> third-party C library which is in a subdirectory of src/.)
>>
>> Because the flags are added only if the system supports them, there
>> shouldn't be any worries about portability in practice.
>
>
> Please read the explanation in the manual: there are serious concerns about
> such flags which have bitten CRAN users several times.
>
> To take your example, you cannot know what -Werror does on all compilers
> (past, present or future) where it is supported (and -W flags do do
> different things on different compilers).  On current gcc it does
>
>        -Werror
>            Make all warnings into errors.
>
> and so its effect depends on what other flags are used (people typically use
> -Wall, and most new versions of both gcc and clang add more warnings to
> -Wall -- I read this week exactly such a discussion about the interaction of
> -Werror with -Wtautological-constant-compare as part of -Wall in clang
> trunk).
>
>> Is there a way to get R CMD check to not raise warnings in cases like
>> this? I know I could modify the C library's configure.ac (which is
>> used to generate the configure script) but I'd prefer to leave the
>> library's code untouched if possible.
>
> You don't need to (and most likely should not) use the C[XX]FLAGS it
> generates ... just use the flags which R passes to the package to use.

It turns out that there isn't even a risk of these compiler flags
being used -- I learned from of my colleagues that the troublesome
compiler flags, like -Werror, never actually appear in the Makefile.
The configure script prints out those compiler flags out when it
checks for them, but in the end it creates a Makefile with the CFLAGS
inherited from R. So there's no chance that the library would be
compiled using those flags (unless R passed them along).

His suggested workaround is to silence the output of the configure
script. That also hides some useful information, but it does work for
this issue.

-Winston


From murdoch.duncan at gmail.com  Thu Dec 21 20:23:13 2017
From: murdoch.duncan at gmail.com (Duncan Murdoch)
Date: Thu, 21 Dec 2017 14:23:13 -0500
Subject: [Rd] R CMD check warning about compiler warning flags
In-Reply-To: <CAFOpNVE-sX3kwPTzcLVY6p6xkQAo8UJJN=bBa6f6_1+kKgV7-g@mail.gmail.com>
References: <CAFOpNVGKQjffBAF0+yJL7jFh7z7zDj+VsQAqnjXDjM9ZWE02Gg@mail.gmail.com>
 <18c039b2-7b26-2792-565b-f305bae51938@stats.ox.ac.uk>
 <CAFOpNVE-sX3kwPTzcLVY6p6xkQAo8UJJN=bBa6f6_1+kKgV7-g@mail.gmail.com>
Message-ID: <360d5f57-3512-9efd-de74-38db1c536c68@gmail.com>

On 21/12/2017 1:02 PM, Winston Chang wrote:
>>> On recent builds of R-devel, R CMD check gives a WARNING when some
>>> compiler warning flags are detected, such as -Werror, because they are
>>> non-portable. This appears to have been added in this commit:
>>>     https://github.com/wch/r-source/commit/2e80059
>>
>> That is not the canonical R sources.
> 
> Yes, that is obvious. The main page for that repository says it is a
> mirror of the R sources, right at the top. I know that because I put
> the message there, and because I see it every time I visit the
> repository. If you have a good way of pointing people to the changes
> made in a commit with the canonical R sources, please let us know. I
> and many others would be happy to use it.

The usual way is just to refer to the revision number, i.e. "This 
appears to have been added in rev 73909".

People who don't have the sources checked out can see the diff on your 
Github mirror using

https://github.com/wch/r-source/search?q="trunk at 73909"&type=Commits

and following the listed search hit. (Thanks to Thierry Onkelinx for 
helping me with this.) This only works for commits to the trunk.  I 
guessed that something like

https://github.com/wch/r-source/search?q="R-3-4-branch at 73937"&type=Commits

would work if the commit was to the 3.4 branch, but apparently not.  I 
don't know how to find those commits.  Presumably there's a way, but I 
don't know it.

Another possibility is that someone could set up (or already has?) one 
of the web viewers (WebSVN, etc.) for the real repository.  That would 
be better for those of us who are SVN users, but probably harder for Git 
users.

Duncan Murdoch


> 
>> And your description seems wrong:
>> there is now an _optional_ check controlled by an environment variable,
>> primarily for CRAN checks.
> 
> The check is "optional", but not for packages submitted to CRAN.
> 
> 
>>> I'm working on a package where these compiler warning flags are
>>> present in a Makefile generated by a configure script -- that is, the
>>> configure script detects whether the compiler supports these flags,
>>> and if so, puts them in the Makefile. (The configure script is for a
>>> third-party C library which is in a subdirectory of src/.)
>>>
>>> Because the flags are added only if the system supports them, there
>>> shouldn't be any worries about portability in practice.
>>
>>
>> Please read the explanation in the manual: there are serious concerns about
>> such flags which have bitten CRAN users several times.
>>
>> To take your example, you cannot know what -Werror does on all compilers
>> (past, present or future) where it is supported (and -W flags do do
>> different things on different compilers).  On current gcc it does
>>
>>         -Werror
>>             Make all warnings into errors.
>>
>> and so its effect depends on what other flags are used (people typically use
>> -Wall, and most new versions of both gcc and clang add more warnings to
>> -Wall -- I read this week exactly such a discussion about the interaction of
>> -Werror with -Wtautological-constant-compare as part of -Wall in clang
>> trunk).
>>
>>> Is there a way to get R CMD check to not raise warnings in cases like
>>> this? I know I could modify the C library's configure.ac (which is
>>> used to generate the configure script) but I'd prefer to leave the
>>> library's code untouched if possible.
>>
>> You don't need to (and most likely should not) use the C[XX]FLAGS it
>> generates ... just use the flags which R passes to the package to use.
> 
> It turns out that there isn't even a risk of these compiler flags
> being used -- I learned from of my colleagues that the troublesome
> compiler flags, like -Werror, never actually appear in the Makefile.
> The configure script prints out those compiler flags out when it
> checks for them, but in the end it creates a Makefile with the CFLAGS
> inherited from R. So there's no chance that the library would be
> compiled using those flags (unless R passed them along).
> 
> His suggested workaround is to silence the output of the configure
> script. That also hides some useful information, but it does work for
> this issue.
> 
> -Winston
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>


From martin.morgan at roswellpark.org  Fri Dec 22 00:25:01 2017
From: martin.morgan at roswellpark.org (Martin Morgan)
Date: Thu, 21 Dec 2017 18:25:01 -0500
Subject: [Rd] R CMD check warning about compiler warning flags
In-Reply-To: <CAFOpNVE-sX3kwPTzcLVY6p6xkQAo8UJJN=bBa6f6_1+kKgV7-g@mail.gmail.com>
References: <CAFOpNVGKQjffBAF0+yJL7jFh7z7zDj+VsQAqnjXDjM9ZWE02Gg@mail.gmail.com>
 <18c039b2-7b26-2792-565b-f305bae51938@stats.ox.ac.uk>
 <CAFOpNVE-sX3kwPTzcLVY6p6xkQAo8UJJN=bBa6f6_1+kKgV7-g@mail.gmail.com>
Message-ID: <8337780a-cb52-41ff-e5f8-2d9061bec609@roswellpark.org>

On 12/21/2017 01:02 PM, Winston Chang wrote:
>>> On recent builds of R-devel, R CMD check gives a WARNING when some
>>> compiler warning flags are detected, such as -Werror, because they are
>>> non-portable. This appears to have been added in this commit:
>>>     https://github.com/wch/r-source/commit/2e80059
>>
>> That is not the canonical R sources.
> 
> Yes, that is obvious. The main page for that repository says it is a
> mirror of the R sources, right at the top. I know that because I put
> the message there, and because I see it every time I visit the
> repository. If you have a good way of pointing people to the changes
> made in a commit with the canonical R sources, please let us know. I
> and many others would be happy to use it.

In case 'pointing to' is not to mean exclusively 'pointing a mouse at', 
'a good way' can include typing at the console and living with the 
merits and demerits of svn, and the question is not 
rhetorical....(probably FALSE on all accounts, but one never knows...)

Check out or update the source (linux, mac, or Windows)

   svn co https://svn.r-project.org/R/trunk R-devel
   cd R-devel
   svn up

browse the commit history

   svn log | less

and review the change

   svn diff -c73909

Restrict by specifying a path

   svn diff -c73909 src/library/tools/R/check.R

(I don't think one gets finer resolution, other than referencing the 
line number in the diff)

View a range of revisions, e.g.,

   svn diff -r73908:73909

And find commits associated with lines of code

   svn annotate doc/manual/R-exts.texi | less

A quick google search (svn diff visual display) lead me to

   svn diff --diff-cmd meld -c73909

for my platform, which pops up the diffs in a visual context.

Martin Morgan

> 
>> And your description seems wrong:
>> there is now an _optional_ check controlled by an environment variable,
>> primarily for CRAN checks.
> 
> The check is "optional", but not for packages submitted to CRAN.
> 
> 
>>> I'm working on a package where these compiler warning flags are
>>> present in a Makefile generated by a configure script -- that is, the
>>> configure script detects whether the compiler supports these flags,
>>> and if so, puts them in the Makefile. (The configure script is for a
>>> third-party C library which is in a subdirectory of src/.)
>>>
>>> Because the flags are added only if the system supports them, there
>>> shouldn't be any worries about portability in practice.
>>
>>
>> Please read the explanation in the manual: there are serious concerns about
>> such flags which have bitten CRAN users several times.
>>
>> To take your example, you cannot know what -Werror does on all compilers
>> (past, present or future) where it is supported (and -W flags do do
>> different things on different compilers).  On current gcc it does
>>
>>         -Werror
>>             Make all warnings into errors.
>>
>> and so its effect depends on what other flags are used (people typically use
>> -Wall, and most new versions of both gcc and clang add more warnings to
>> -Wall -- I read this week exactly such a discussion about the interaction of
>> -Werror with -Wtautological-constant-compare as part of -Wall in clang
>> trunk).
>>
>>> Is there a way to get R CMD check to not raise warnings in cases like
>>> this? I know I could modify the C library's configure.ac (which is
>>> used to generate the configure script) but I'd prefer to leave the
>>> library's code untouched if possible.
>>
>> You don't need to (and most likely should not) use the C[XX]FLAGS it
>> generates ... just use the flags which R passes to the package to use.
> 
> It turns out that there isn't even a risk of these compiler flags
> being used -- I learned from of my colleagues that the troublesome
> compiler flags, like -Werror, never actually appear in the Makefile.
> The configure script prints out those compiler flags out when it
> checks for them, but in the end it creates a Makefile with the CFLAGS
> inherited from R. So there's no chance that the library would be
> compiled using those flags (unless R passed them along).
> 
> His suggested workaround is to silence the output of the configure
> script. That also hides some useful information, but it does work for
> this issue.
> 
> -Winston
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
> 


This email message may contain legally privileged and/or...{{dropped:2}}


From jmhannon.ucdavis at gmail.com  Fri Dec 22 01:57:50 2017
From: jmhannon.ucdavis at gmail.com (Michael Hannon)
Date: Thu, 21 Dec 2017 16:57:50 -0800
Subject: [Rd] Building R from source with the PGI compiler
In-Reply-To: <CACxE24noXU3-kX_2mhvqEc354kHW7pCEGOF6iBbFwXn8nkEnBA@mail.gmail.com>
References: <CACxE24noXU3-kX_2mhvqEc354kHW7pCEGOF6iBbFwXn8nkEnBA@mail.gmail.com>
Message-ID: <CACdH2ZY8dbPCr_mEz5mR91oH0uy433WeOddXuEu=wut1AVFq6Q@mail.gmail.com>

Hi, Erin.  Please feel free to ignore this, but I'm curious: what is
the advantage to using the PGI compiler?

-- Mike


On Wed, Dec 20, 2017 at 5:03 PM, Erin Hodgess <erinm.hodgess at gmail.com> wrote:
> Hello
>
> I would like to build R from source and use the PGI compiler, rather than
> the GCC compiler.
>
> I saw the instructions for the Intel compiler in the R Installation Manual,
> but I didn't see the PGI.  I tried a few times without instructions, but
> without success.
>
> Any suggestions would be most welcome.  Also, I hope this is the right
> group for the question.
>
> Sincerely,
> Erin
>
>
>
> --
> Erin Hodgess
> Associate Professor
> Department of Mathematical and Statistics
> University of Houston - Downtown
> mailto: erinm.hodgess at gmail.com
>
>         [[alternative HTML version deleted]]
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From erinm.hodgess at gmail.com  Fri Dec 22 02:09:48 2017
From: erinm.hodgess at gmail.com (Erin Hodgess)
Date: Fri, 22 Dec 2017 01:09:48 +0000
Subject: [Rd] Building R from source with the PGI compiler
In-Reply-To: <CACdH2ZY8dbPCr_mEz5mR91oH0uy433WeOddXuEu=wut1AVFq6Q@mail.gmail.com>
References: <CACxE24noXU3-kX_2mhvqEc354kHW7pCEGOF6iBbFwXn8nkEnBA@mail.gmail.com>
 <CACdH2ZY8dbPCr_mEz5mR91oH0uy433WeOddXuEu=wut1AVFq6Q@mail.gmail.com>
Message-ID: <CACxE24k_UJdvNuMcdSJB2jcKccY1pqsoAKxZv3dNra2RBxXsxQ@mail.gmail.com>

Hello!

I?m working on a supercomputer and will be tying into some FORTRAN
programs.  Those programs use OpenACC, which must be compiled with PGI.

In case you are wondering, Why don?t I use C?  I actually started with C
and FORTRAN is faster.

Thanks for listening,
Erin

On Thu, Dec 21, 2017 at 6:58 PM Michael Hannon <jmhannon.ucdavis at gmail.com>
wrote:

> Hi, Erin.  Please feel free to ignore this, but I'm curious: what is
> the advantage to using the PGI compiler?
>
> -- Mike
>
>
> On Wed, Dec 20, 2017 at 5:03 PM, Erin Hodgess <erinm.hodgess at gmail.com>
> wrote:
> > Hello
> >
> > I would like to build R from source and use the PGI compiler, rather than
> > the GCC compiler.
> >
> > I saw the instructions for the Intel compiler in the R Installation
> Manual,
> > but I didn't see the PGI.  I tried a few times without instructions, but
> > without success.
> >
> > Any suggestions would be most welcome.  Also, I hope this is the right
> > group for the question.
> >
> > Sincerely,
> > Erin
> >
> >
> >
> > --
> > Erin Hodgess
> > Associate Professor
> > Department of Mathematical and Statistics
> > University of Houston - Downtown
> > mailto: erinm.hodgess at gmail.com
> >
> >         [[alternative HTML version deleted]]
> >
> > ______________________________________________
> > R-devel at r-project.org mailing list
> > https://stat.ethz.ch/mailman/listinfo/r-devel
>
-- 
Erin Hodgess
Associate Professor
Department of Mathematical and Statistics
University of Houston - Downtown
mailto: erinm.hodgess at gmail.com

	[[alternative HTML version deleted]]


From hpages at fredhutch.org  Fri Dec 22 09:57:10 2017
From: hpages at fredhutch.org (=?UTF-8?B?SGVydsOpIFBhZ8Oocw==?=)
Date: Fri, 22 Dec 2017 00:57:10 -0800
Subject: [Rd] Unexpected dimnames attribute returned by cbind/rbind
Message-ID: <c2fa21f3-5983-b2ce-68e8-3cdbc3a3b4d9@fredhutch.org>

Hi,

   > m5 <- cbind(integer(5), integer(5))
   > m5
        [,1] [,2]
   [1,]    0    0
   [2,]    0    0
   [3,]    0    0
   [4,]    0    0
   [5,]    0    0
   > dimnames(m5)
   NULL

No dimnames, as expected.

   > m0 <- cbind(integer(0), integer(0))
   > m0
        [,1] [,2]
   > dimnames(m0)
   [[1]]
   NULL

   [[2]]
   NULL

Unexpected dimnames attribute!

rbind'ing empty vectors also returns a matrix with unexpected
dimnames:

   > dimnames(rbind(character(0), character(0)))
   [[1]]
   NULL

   [[2]]
   NULL

Cheers,
H.

-- 
Herv? Pag?s

Program in Computational Biology
Division of Public Health Sciences
Fred Hutchinson Cancer Research Center
1100 Fairview Ave. N, M1-B514
P.O. Box 19024
Seattle, WA 98109-1024

E-mail: hpages at fredhutch.org
Phone:  (206) 667-5791
Fax:    (206) 667-1319


From maechler at stat.math.ethz.ch  Fri Dec 22 15:12:46 2017
From: maechler at stat.math.ethz.ch (Martin Maechler)
Date: Fri, 22 Dec 2017 15:12:46 +0100
Subject: [Rd] R CMD check warning about compiler warning flags
In-Reply-To: <360d5f57-3512-9efd-de74-38db1c536c68@gmail.com>
References: <CAFOpNVGKQjffBAF0+yJL7jFh7z7zDj+VsQAqnjXDjM9ZWE02Gg@mail.gmail.com>
 <18c039b2-7b26-2792-565b-f305bae51938@stats.ox.ac.uk>
 <CAFOpNVE-sX3kwPTzcLVY6p6xkQAo8UJJN=bBa6f6_1+kKgV7-g@mail.gmail.com>
 <360d5f57-3512-9efd-de74-38db1c536c68@gmail.com>
Message-ID: <23101.4830.979381.386647@stat.math.ethz.ch>

>>>>> Duncan Murdoch <murdoch.duncan at gmail.com>
>>>>>     on Thu, 21 Dec 2017 14:23:13 -0500 writes:

    > On 21/12/2017 1:02 PM, Winston Chang wrote:
    >>>> On recent builds of R-devel, R CMD check gives a
    >>>> WARNING when some compiler warning flags are detected,
    >>>> such as -Werror, because they are non-portable. This
    >>>> appears to have been added in this commit:
    >>>> https://github.com/wch/r-source/commit/2e80059
    >>> 
    >>> That is not the canonical R sources.
    >> 
    >> Yes, that is obvious. The main page for that repository
    >> says it is a mirror of the R sources, right at the top. I
    >> know that because I put the message there, and because I
    >> see it every time I visit the repository. If you have a
    >> good way of pointing people to the changes made in a
    >> commit with the canonical R sources, please let us
    >> know. I and many others would be happy to use it.

    > The usual way is just to refer to the revision number,
    > i.e. "This appears to have been added in rev 73909".

    > People who don't have the sources checked out can see the
    > diff on your Github mirror using

    > https://github.com/wch/r-source/search?q="trunk at 73909"&type=Commits

    > and following the listed search hit. (Thanks to Thierry
    > Onkelinx for helping me with this.) This only works for
    > commits to the trunk.  I guessed that something like

    > https://github.com/wch/r-source/search?q="R-3-4-branch at 73937"&type=Commits

    > would work if the commit was to the 3.4 branch, but
    > apparently not.  I don't know how to find those commits.
    > Presumably there's a way, but I don't know it.

    > Another possibility is that someone could set up (or
    > already has?) one of the web viewers (WebSVN, etc.) for
    > the real repository.  That would be better for those of us
    > who are SVN users, but probably harder for Git users.

    > Duncan Murdoch

As you know I had setup (the first few versions of) the svn at
  https://svn.r-project.org/

at the time, I wanted to keep that machine protected as much as
possible and had decided not to install any other apache
modules and svn - niceties just such that the server would run
minimal services and hence would be minimally vulnerable.

The times have changed though and I will look into adding WebSVN
to svn.r-project.org  as one of the  first things in 2018.

Martin Maechler




    >> 
    >>> And your description seems wrong: there is now an
    >>> _optional_ check controlled by an environment variable,
    >>> primarily for CRAN checks.
    >> 
    >> The check is "optional", but not for packages submitted
    >> to CRAN.
    >> 
    >> 
    >>>> I'm working on a package where these compiler warning
    >>>> flags are present in a Makefile generated by a
    >>>> configure script -- that is, the configure script
    >>>> detects whether the compiler supports these flags, and
    >>>> if so, puts them in the Makefile. (The configure script
    >>>> is for a third-party C library which is in a
    >>>> subdirectory of src/.)
    >>>> 
    >>>> Because the flags are added only if the system supports
    >>>> them, there shouldn't be any worries about portability
    >>>> in practice.
    >>> 
    >>> 
    >>> Please read the explanation in the manual: there are
    >>> serious concerns about such flags which have bitten CRAN
    >>> users several times.
    >>> 
    >>> To take your example, you cannot know what -Werror does
    >>> on all compilers (past, present or future) where it is
    >>> supported (and -W flags do do different things on
    >>> different compilers).  On current gcc it does
    >>> 
    >>> -Werror Make all warnings into errors.
    >>> 
    >>> and so its effect depends on what other flags are used
    >>> (people typically use -Wall, and most new versions of
    >>> both gcc and clang add more warnings to -Wall -- I read
    >>> this week exactly such a discussion about the
    >>> interaction of -Werror with
    >>> -Wtautological-constant-compare as part of -Wall in
    >>> clang trunk).
    >>> 
    >>>> Is there a way to get R CMD check to not raise warnings
    >>>> in cases like this? I know I could modify the C
    >>>> library's configure.ac (which is used to generate the
    >>>> configure script) but I'd prefer to leave the library's
    >>>> code untouched if possible.
    >>> 
    >>> You don't need to (and most likely should not) use the
    >>> C[XX]FLAGS it generates ... just use the flags which R
    >>> passes to the package to use.
    >> 
    >> It turns out that there isn't even a risk of these
    >> compiler flags being used -- I learned from of my
    >> colleagues that the troublesome compiler flags, like
    >> -Werror, never actually appear in the Makefile.  The
    >> configure script prints out those compiler flags out when
    >> it checks for them, but in the end it creates a Makefile
    >> with the CFLAGS inherited from R. So there's no chance
    >> that the library would be compiled using those flags
    >> (unless R passed them along).
    >> 
    >> His suggested workaround is to silence the output of the
    >> configure script. That also hides some useful
    >> information, but it does work for this issue.
    >> 
    >> -Winston
    >> 
    >> ______________________________________________
    >> R-devel at r-project.org mailing list
    >> https://stat.ethz.ch/mailman/listinfo/r-devel
    >> 

    > ______________________________________________
    > R-devel at r-project.org mailing list
    > https://stat.ethz.ch/mailman/listinfo/r-devel


From mikko.korpela at maanmittauslaitos.fi  Fri Dec 22 15:28:17 2017
From: mikko.korpela at maanmittauslaitos.fi (Korpela Mikko (MML))
Date: Fri, 22 Dec 2017 14:28:17 +0000
Subject: [Rd] Typos in ?regex
Message-ID: <87f17e47fb744a329e042ef7a9d11729@C119S212VM016.msvyvi.vaha.local>

I found three little typos in the ?regex manual. Apologies for the lack of a diff, as the utility is not (yet) installed on this machine.

1. "There is a also" should probably be "There is also".
2. In the list of functions following "This section covers the regular expressions"..., "grep" appears twice. The other one should probably be "grepl".
3. In the "See Also" entry for TRE documentation, there is a spurious closing parenthesis.

- Mikko

-- 
Mikko Korpela
Chief Expert, Valuations
National Land Survey of Finland
Opastinsilta 12 C, FI-00520 Helsinki, Finland
+358 50?462 6082
www.maanmittauslaitos.fi


From marc_schwartz at me.com  Fri Dec 22 16:46:07 2017
From: marc_schwartz at me.com (Marc Schwartz)
Date: Fri, 22 Dec 2017 10:46:07 -0500
Subject: [Rd] R CMD check warning about compiler warning flags
In-Reply-To: <23101.4830.979381.386647@stat.math.ethz.ch>
References: <CAFOpNVGKQjffBAF0+yJL7jFh7z7zDj+VsQAqnjXDjM9ZWE02Gg@mail.gmail.com>
 <18c039b2-7b26-2792-565b-f305bae51938@stats.ox.ac.uk>
 <CAFOpNVE-sX3kwPTzcLVY6p6xkQAo8UJJN=bBa6f6_1+kKgV7-g@mail.gmail.com>
 <360d5f57-3512-9efd-de74-38db1c536c68@gmail.com>
 <23101.4830.979381.386647@stat.math.ethz.ch>
Message-ID: <A9377D4E-29FE-4CFA-8624-3A4643440F3B@me.com>

Hi,

See inline below.


> On Dec 22, 2017, at 9:12 AM, Martin Maechler <maechler at stat.math.ethz.ch> wrote:
> 
>>>>>> Duncan Murdoch <murdoch.duncan at gmail.com>
>>>>>>    on Thu, 21 Dec 2017 14:23:13 -0500 writes:
> 
>> On 21/12/2017 1:02 PM, Winston Chang wrote:
>>>>> On recent builds of R-devel, R CMD check gives a
>>>>> WARNING when some compiler warning flags are detected,
>>>>> such as -Werror, because they are non-portable. This
>>>>> appears to have been added in this commit:
>>>>> https://github.com/wch/r-source/commit/2e80059
>>>> 
>>>> That is not the canonical R sources.
>>> 
>>> Yes, that is obvious. The main page for that repository
>>> says it is a mirror of the R sources, right at the top. I
>>> know that because I put the message there, and because I
>>> see it every time I visit the repository. If you have a
>>> good way of pointing people to the changes made in a
>>> commit with the canonical R sources, please let us
>>> know. I and many others would be happy to use it.
> 
>> The usual way is just to refer to the revision number,
>> i.e. "This appears to have been added in rev 73909".
> 
>> People who don't have the sources checked out can see the
>> diff on your Github mirror using
> 
>> https://github.com/wch/r-source/search?q="trunk at 73909"&type=Commits
> 
>> and following the listed search hit. (Thanks to Thierry
>> Onkelinx for helping me with this.) This only works for
>> commits to the trunk.  I guessed that something like
> 
>> https://github.com/wch/r-source/search?q="R-3-4-branch at 73937"&type=Commits
> 
>> would work if the commit was to the 3.4 branch, but
>> apparently not.  I don't know how to find those commits.
>> Presumably there's a way, but I don't know it.
> 
>> Another possibility is that someone could set up (or
>> already has?) one of the web viewers (WebSVN, etc.) for
>> the real repository.  That would be better for those of us
>> who are SVN users, but probably harder for Git users.
> 
>> Duncan Murdoch
> 
> As you know I had setup (the first few versions of) the svn at
>  https://svn.r-project.org/
> 
> at the time, I wanted to keep that machine protected as much as
> possible and had decided not to install any other apache
> modules and svn - niceties just such that the server would run
> minimal services and hence would be minimally vulnerable.
> 
> The times have changed though and I will look into adding WebSVN
> to svn.r-project.org  as one of the  first things in 2018.
> 
> Martin Maechler


Martin,

Just to play a bit of a devil's advocate here, WebSVN has not been updated/maintained since June of 2011, so is a number of years old at this point. That should raise some reasonable concerns over bugs, security issues and related matters.

To put that in perspective, the last update to WebSVN was around the time that R 2.13.1 was released.

That general pattern, of SVN clients not being actively maintained, seems to be consistent across a number of the web based (and even browser plugin based) SVN clients, which may in turn, be an indication of the general shift to Git in recent years, much as the shift from CVS to SVN occurred years ago.

In researching other SVN clients, the few that still seem to be actively maintained are typically dedicated desktop clients/GUIs, that in some cases are closed source and/or are OS specific.

One of the few web based SVN clients that still seems to be actively maintained is Trac (https://trac.edgewall.org), however it is under a modified BSD license, which may raise some issues and from what I can tell, may be more complicated in terms of set up, since it also supports bug tracking, wiki and other functionality. As with any such application, there would be ongoing maintenance issues as well.

I am not advocating any particular solution. I just want to point out potential issues with WebSVN and raise for discussion, what options may make sense to consider, based upon how many folks might actually use such "live" web based functionality versus remote SVN access via a desktop client, which is certainly an option, since they won't have write access anyway. 

Also, a number of the Git desktop clients also support Git SVN (https://git-scm.com/docs/git-svn), for compatibility, which offers Git users an alternative to using a dedicated desktop SVN client.

Regards,

Marc


> 
>>> 
>>>> And your description seems wrong: there is now an
>>>> _optional_ check controlled by an environment variable,
>>>> primarily for CRAN checks.
>>> 
>>> The check is "optional", but not for packages submitted
>>> to CRAN.
>>> 
>>> 
>>>>> I'm working on a package where these compiler warning
>>>>> flags are present in a Makefile generated by a
>>>>> configure script -- that is, the configure script
>>>>> detects whether the compiler supports these flags, and
>>>>> if so, puts them in the Makefile. (The configure script
>>>>> is for a third-party C library which is in a
>>>>> subdirectory of src/.)
>>>>> 
>>>>> Because the flags are added only if the system supports
>>>>> them, there shouldn't be any worries about portability
>>>>> in practice.
>>>> 
>>>> 
>>>> Please read the explanation in the manual: there are
>>>> serious concerns about such flags which have bitten CRAN
>>>> users several times.
>>>> 
>>>> To take your example, you cannot know what -Werror does
>>>> on all compilers (past, present or future) where it is
>>>> supported (and -W flags do do different things on
>>>> different compilers).  On current gcc it does
>>>> 
>>>> -Werror Make all warnings into errors.
>>>> 
>>>> and so its effect depends on what other flags are used
>>>> (people typically use -Wall, and most new versions of
>>>> both gcc and clang add more warnings to -Wall -- I read
>>>> this week exactly such a discussion about the
>>>> interaction of -Werror with
>>>> -Wtautological-constant-compare as part of -Wall in
>>>> clang trunk).
>>>> 
>>>>> Is there a way to get R CMD check to not raise warnings
>>>>> in cases like this? I know I could modify the C
>>>>> library's configure.ac (which is used to generate the
>>>>> configure script) but I'd prefer to leave the library's
>>>>> code untouched if possible.
>>>> 
>>>> You don't need to (and most likely should not) use the
>>>> C[XX]FLAGS it generates ... just use the flags which R
>>>> passes to the package to use.
>>> 
>>> It turns out that there isn't even a risk of these
>>> compiler flags being used -- I learned from of my
>>> colleagues that the troublesome compiler flags, like
>>> -Werror, never actually appear in the Makefile.  The
>>> configure script prints out those compiler flags out when
>>> it checks for them, but in the end it creates a Makefile
>>> with the CFLAGS inherited from R. So there's no chance
>>> that the library would be compiled using those flags
>>> (unless R passed them along).
>>> 
>>> His suggested workaround is to silence the output of the
>>> configure script. That also hides some useful
>>> information, but it does work for this issue.
>>> 
>>> -Winston


From murdoch.duncan at gmail.com  Mon Dec 25 12:30:04 2017
From: murdoch.duncan at gmail.com (Duncan Murdoch)
Date: Mon, 25 Dec 2017 06:30:04 -0500
Subject: [Rd] R CMD check warning about compiler warning flags
In-Reply-To: <A9377D4E-29FE-4CFA-8624-3A4643440F3B@me.com>
References: <CAFOpNVGKQjffBAF0+yJL7jFh7z7zDj+VsQAqnjXDjM9ZWE02Gg@mail.gmail.com>
 <18c039b2-7b26-2792-565b-f305bae51938@stats.ox.ac.uk>
 <CAFOpNVE-sX3kwPTzcLVY6p6xkQAo8UJJN=bBa6f6_1+kKgV7-g@mail.gmail.com>
 <360d5f57-3512-9efd-de74-38db1c536c68@gmail.com>
 <23101.4830.979381.386647@stat.math.ethz.ch>
 <A9377D4E-29FE-4CFA-8624-3A4643440F3B@me.com>
Message-ID: <7ca2313a-2143-3d8f-eade-cbb0e6cb6132@gmail.com>

On 22/12/2017 10:46 AM, Marc Schwartz wrote:
> Hi,
> 
> See inline below.
> 
> 
>> On Dec 22, 2017, at 9:12 AM, Martin Maechler <maechler at stat.math.ethz.ch> wrote:
>>
>>>>>>> Duncan Murdoch <murdoch.duncan at gmail.com>
>>>>>>>     on Thu, 21 Dec 2017 14:23:13 -0500 writes:
>>
>>> On 21/12/2017 1:02 PM, Winston Chang wrote:
>>>>>> On recent builds of R-devel, R CMD check gives a
>>>>>> WARNING when some compiler warning flags are detected,
>>>>>> such as -Werror, because they are non-portable. This
>>>>>> appears to have been added in this commit:
>>>>>> https://github.com/wch/r-source/commit/2e80059
>>>>>
>>>>> That is not the canonical R sources.
>>>>
>>>> Yes, that is obvious. The main page for that repository
>>>> says it is a mirror of the R sources, right at the top. I
>>>> know that because I put the message there, and because I
>>>> see it every time I visit the repository. If you have a
>>>> good way of pointing people to the changes made in a
>>>> commit with the canonical R sources, please let us
>>>> know. I and many others would be happy to use it.
>>
>>> The usual way is just to refer to the revision number,
>>> i.e. "This appears to have been added in rev 73909".
>>
>>> People who don't have the sources checked out can see the
>>> diff on your Github mirror using
>>
>>> https://github.com/wch/r-source/search?q="trunk at 73909"&type=Commits
>>
>>> and following the listed search hit. (Thanks to Thierry
>>> Onkelinx for helping me with this.) This only works for
>>> commits to the trunk.  I guessed that something like
>>
>>> https://github.com/wch/r-source/search?q="R-3-4-branch at 73937"&type=Commits
>>
>>> would work if the commit was to the 3.4 branch, but
>>> apparently not.  I don't know how to find those commits.
>>> Presumably there's a way, but I don't know it.
>>
>>> Another possibility is that someone could set up (or
>>> already has?) one of the web viewers (WebSVN, etc.) for
>>> the real repository.  That would be better for those of us
>>> who are SVN users, but probably harder for Git users.
>>
>>> Duncan Murdoch
>>
>> As you know I had setup (the first few versions of) the svn at
>>   https://svn.r-project.org/
>>
>> at the time, I wanted to keep that machine protected as much as
>> possible and had decided not to install any other apache
>> modules and svn - niceties just such that the server would run
>> minimal services and hence would be minimally vulnerable.
>>
>> The times have changed though and I will look into adding WebSVN
>> to svn.r-project.org  as one of the  first things in 2018.
>>
>> Martin Maechler
> 
> 
> Martin,
> 
> Just to play a bit of a devil's advocate here, WebSVN has not been updated/maintained since June of 2011, so is a number of years old at this point. That should raise some reasonable concerns over bugs, security issues and related matters.
> 
> To put that in perspective, the last update to WebSVN was around the time that R 2.13.1 was released.
> 
> That general pattern, of SVN clients not being actively maintained, seems to be consistent across a number of the web based (and even browser plugin based) SVN clients, which may in turn, be an indication of the general shift to Git in recent years, much as the shift from CVS to SVN occurred years ago.
> 
> In researching other SVN clients, the few that still seem to be actively maintained are typically dedicated desktop clients/GUIs, that in some cases are closed source and/or are OS specific.
> 
> One of the few web based SVN clients that still seems to be actively maintained is Trac (https://trac.edgewall.org), however it is under a modified BSD license, which may raise some issues and from what I can tell, may be more complicated in terms of set up, since it also supports bug tracking, wiki and other functionality. As with any such application, there would be ongoing maintenance issues as well.

There's also ViewVC which still seems to be active.

> I am not advocating any particular solution. I just want to point out potential issues with WebSVN and raise for discussion, what options may make sense to consider, based upon how many folks might actually use such "live" web based functionality versus remote SVN access via a desktop client, which is certainly an option, since they won't have write access anyway.

As a general principle in open source projects the work should be done 
by the people who want to use the product.  Winston wanted git access to 
the R sources, and he put it together: bravo!

It's unfortunate that git doesn't really support svn completely, because 
it is superior in many ways.  However, it isn't uniformly better than 
svn. Its very weak support for sequential labels means that switching to 
it would be a lot of work for R Core, and that group doesn't have a lot 
of spare time to waste.

The one negative aspect of Winston's effort is caused by this weakness. 
If you tell me that something happened in revision 73909, I know it was 
recent.  If you tell me that something appeared in commit 2e80059, it 
wastes my time looking up that commit and putting it in context.

Duncan Murdoch

> 
> Also, a number of the Git desktop clients also support Git SVN (https://git-scm.com/docs/git-svn), for compatibility, which offers Git users an alternative to using a dedicated desktop SVN client.
> 
> Regards,
> 
> Marc
> 
> 
>>
>>>>
>>>>> And your description seems wrong: there is now an
>>>>> _optional_ check controlled by an environment variable,
>>>>> primarily for CRAN checks.
>>>>
>>>> The check is "optional", but not for packages submitted
>>>> to CRAN.
>>>>
>>>>
>>>>>> I'm working on a package where these compiler warning
>>>>>> flags are present in a Makefile generated by a
>>>>>> configure script -- that is, the configure script
>>>>>> detects whether the compiler supports these flags, and
>>>>>> if so, puts them in the Makefile. (The configure script
>>>>>> is for a third-party C library which is in a
>>>>>> subdirectory of src/.)
>>>>>>
>>>>>> Because the flags are added only if the system supports
>>>>>> them, there shouldn't be any worries about portability
>>>>>> in practice.
>>>>>
>>>>>
>>>>> Please read the explanation in the manual: there are
>>>>> serious concerns about such flags which have bitten CRAN
>>>>> users several times.
>>>>>
>>>>> To take your example, you cannot know what -Werror does
>>>>> on all compilers (past, present or future) where it is
>>>>> supported (and -W flags do do different things on
>>>>> different compilers).  On current gcc it does
>>>>>
>>>>> -Werror Make all warnings into errors.
>>>>>
>>>>> and so its effect depends on what other flags are used
>>>>> (people typically use -Wall, and most new versions of
>>>>> both gcc and clang add more warnings to -Wall -- I read
>>>>> this week exactly such a discussion about the
>>>>> interaction of -Werror with
>>>>> -Wtautological-constant-compare as part of -Wall in
>>>>> clang trunk).
>>>>>
>>>>>> Is there a way to get R CMD check to not raise warnings
>>>>>> in cases like this? I know I could modify the C
>>>>>> library's configure.ac (which is used to generate the
>>>>>> configure script) but I'd prefer to leave the library's
>>>>>> code untouched if possible.
>>>>>
>>>>> You don't need to (and most likely should not) use the
>>>>> C[XX]FLAGS it generates ... just use the flags which R
>>>>> passes to the package to use.
>>>>
>>>> It turns out that there isn't even a risk of these
>>>> compiler flags being used -- I learned from of my
>>>> colleagues that the troublesome compiler flags, like
>>>> -Werror, never actually appear in the Makefile.  The
>>>> configure script prints out those compiler flags out when
>>>> it checks for them, but in the end it creates a Makefile
>>>> with the CFLAGS inherited from R. So there's no chance
>>>> that the library would be compiled using those flags
>>>> (unless R passed them along).
>>>>
>>>> His suggested workaround is to silence the output of the
>>>> configure script. That also hides some useful
>>>> information, but it does work for this issue.
>>>>
>>>> -Winston
>


From i.ucar86 at gmail.com  Mon Dec 25 13:00:22 2017
From: i.ucar86 at gmail.com (=?UTF-8?B?ScOxYWtpIMOaY2Fy?=)
Date: Mon, 25 Dec 2017 13:00:22 +0100
Subject: [Rd] R CMD check warning about compiler warning flags
In-Reply-To: <7ca2313a-2143-3d8f-eade-cbb0e6cb6132@gmail.com>
References: <CAFOpNVGKQjffBAF0+yJL7jFh7z7zDj+VsQAqnjXDjM9ZWE02Gg@mail.gmail.com>
 <18c039b2-7b26-2792-565b-f305bae51938@stats.ox.ac.uk>
 <CAFOpNVE-sX3kwPTzcLVY6p6xkQAo8UJJN=bBa6f6_1+kKgV7-g@mail.gmail.com>
 <360d5f57-3512-9efd-de74-38db1c536c68@gmail.com>
 <23101.4830.979381.386647@stat.math.ethz.ch>
 <A9377D4E-29FE-4CFA-8624-3A4643440F3B@me.com>
 <7ca2313a-2143-3d8f-eade-cbb0e6cb6132@gmail.com>
Message-ID: <CALEXWq2To4hZm9zWauxmg9dd=XGPJccnKKvHX5p67N5KMjBJNg@mail.gmail.com>

2017-12-25 12:30 GMT+01:00 Duncan Murdoch <murdoch.duncan at gmail.com>:
> The one negative aspect of Winston's effort is caused by this weakness. If
> you tell me that something happened in revision 73909, I know it was recent.
> If you tell me that something appeared in commit 2e80059, it wastes my time
> looking up that commit and putting it in context.

The output from "git describe" is something similar to an svn
revision: it describes the number of commits since the previous
annotated tag. Something like <tag_name>-<#commits>-g<commit_hash>,
e.g., v3.5.0-56-1234567.

I?aki


From murdoch.duncan at gmail.com  Mon Dec 25 16:42:30 2017
From: murdoch.duncan at gmail.com (Duncan Murdoch)
Date: Mon, 25 Dec 2017 10:42:30 -0500
Subject: [Rd] R CMD check warning about compiler warning flags
In-Reply-To: <CALEXWq2To4hZm9zWauxmg9dd=XGPJccnKKvHX5p67N5KMjBJNg@mail.gmail.com>
References: <CAFOpNVGKQjffBAF0+yJL7jFh7z7zDj+VsQAqnjXDjM9ZWE02Gg@mail.gmail.com>
 <18c039b2-7b26-2792-565b-f305bae51938@stats.ox.ac.uk>
 <CAFOpNVE-sX3kwPTzcLVY6p6xkQAo8UJJN=bBa6f6_1+kKgV7-g@mail.gmail.com>
 <360d5f57-3512-9efd-de74-38db1c536c68@gmail.com>
 <23101.4830.979381.386647@stat.math.ethz.ch>
 <A9377D4E-29FE-4CFA-8624-3A4643440F3B@me.com>
 <7ca2313a-2143-3d8f-eade-cbb0e6cb6132@gmail.com>
 <CALEXWq2To4hZm9zWauxmg9dd=XGPJccnKKvHX5p67N5KMjBJNg@mail.gmail.com>
Message-ID: <9b0f83e3-a2d9-7988-dc89-3b2e034b8763@gmail.com>

On 25/12/2017 7:00 AM, I?aki ?car wrote:
> 2017-12-25 12:30 GMT+01:00 Duncan Murdoch <murdoch.duncan at gmail.com>:
>> The one negative aspect of Winston's effort is caused by this weakness. If
>> you tell me that something happened in revision 73909, I know it was recent.
>> If you tell me that something appeared in commit 2e80059, it wastes my time
>> looking up that commit and putting it in context.
> 
> The output from "git describe" is something similar to an svn
> revision: it describes the number of commits since the previous
> annotated tag. Something like <tag_name>-<#commits>-g<commit_hash>,
> e.g., v3.5.0-56-1234567.

But we're not using git, we're just sending emails back and forth.  I 
don't need to run svn to get some useful information from the number 
73909.  Winston's web page at 
https://github.com/wch/r-source/commit/2e80059 does display the number 
73909 if you know where to look, but his email doesn't contain it.

I don't know about other svn users, but I'd be perfectly content to read 
something like "This appears to have been added in rev 73909 (diff shown 
here: https://github.com/wch/r-source/commit/2e80059)."

Duncan Murdoch


From jtelleriar at gmail.com  Tue Dec 26 00:00:50 2017
From: jtelleriar at gmail.com (Juan Telleria)
Date: Tue, 26 Dec 2017 00:00:50 +0100
Subject: [Rd] R CMD check warning about compiler warning flags
In-Reply-To: <9b0f83e3-a2d9-7988-dc89-3b2e034b8763@gmail.com>
References: <CAFOpNVGKQjffBAF0+yJL7jFh7z7zDj+VsQAqnjXDjM9ZWE02Gg@mail.gmail.com>
 <18c039b2-7b26-2792-565b-f305bae51938@stats.ox.ac.uk>
 <CAFOpNVE-sX3kwPTzcLVY6p6xkQAo8UJJN=bBa6f6_1+kKgV7-g@mail.gmail.com>
 <360d5f57-3512-9efd-de74-38db1c536c68@gmail.com>
 <23101.4830.979381.386647@stat.math.ethz.ch>
 <A9377D4E-29FE-4CFA-8624-3A4643440F3B@me.com>
 <7ca2313a-2143-3d8f-eade-cbb0e6cb6132@gmail.com>
 <CALEXWq2To4hZm9zWauxmg9dd=XGPJccnKKvHX5p67N5KMjBJNg@mail.gmail.com>
 <9b0f83e3-a2d9-7988-dc89-3b2e034b8763@gmail.com>
Message-ID: <CANNd7=nywaFfrecRtOP2yS4BEg2im_tP2WMN2qig1FEHpZzNvw@mail.gmail.com>

Maybe I'm new, and forgive my ignorance, but maybe in the future (~ X years
from now) the R Project could be managed entirely from github, by doing
pull requests and only R Core having commit rights...

Would make the forking process also easier... And could be a good roadmap.

But we're not using git, we're just sending emails back and forth.  I don't
> need to run svn to get some useful information from the number 73909.
> Winston's web page at https://github.com/wch/r-source/commit/2e80059 does
> display the number 73909 if you know where to look, but his email doesn't
> contain it.
>
> I don't know about other svn users, but I'd be perfectly content to read
> something like "This appears to have been added in rev 73909 (diff shown
> here: https://github.com/wch/r-source/commit/2e80059)."
>
> Duncan Murdoch

	[[alternative HTML version deleted]]


From suzen at acm.org  Tue Dec 26 00:11:35 2017
From: suzen at acm.org (Suzen, Mehmet)
Date: Tue, 26 Dec 2017 00:11:35 +0100
Subject: [Rd] R CMD check warning about compiler warning flags
In-Reply-To: <CANNd7=nywaFfrecRtOP2yS4BEg2im_tP2WMN2qig1FEHpZzNvw@mail.gmail.com>
References: <CAFOpNVGKQjffBAF0+yJL7jFh7z7zDj+VsQAqnjXDjM9ZWE02Gg@mail.gmail.com>
 <18c039b2-7b26-2792-565b-f305bae51938@stats.ox.ac.uk>
 <CAFOpNVE-sX3kwPTzcLVY6p6xkQAo8UJJN=bBa6f6_1+kKgV7-g@mail.gmail.com>
 <360d5f57-3512-9efd-de74-38db1c536c68@gmail.com>
 <23101.4830.979381.386647@stat.math.ethz.ch>
 <A9377D4E-29FE-4CFA-8624-3A4643440F3B@me.com>
 <7ca2313a-2143-3d8f-eade-cbb0e6cb6132@gmail.com>
 <CALEXWq2To4hZm9zWauxmg9dd=XGPJccnKKvHX5p67N5KMjBJNg@mail.gmail.com>
 <9b0f83e3-a2d9-7988-dc89-3b2e034b8763@gmail.com>
 <CANNd7=nywaFfrecRtOP2yS4BEg2im_tP2WMN2qig1FEHpZzNvw@mail.gmail.com>
Message-ID: <CAPtbhHwR-vtjRqtRgSfz4jPHS2m2u02JBcJxwwuKoejawLOW3Q@mail.gmail.com>

On 26 December 2017 at 00:00, Juan Telleria <jtelleriar at gmail.com> wrote:
> Maybe I'm new, and forgive my ignorance, but maybe in the future (~ X years
> from now) the R Project could be managed entirely from github, by doing

I strongly disagree. Are you aware that github is a commercial
company, github inc. [1] ?
What about gitlab? or Microsoft's codeplex? There are other services
similar to github, why github?
What happens if github goes out of business?

R-project should be maintained in the academic network and under
auspices of universities.


 [*]  GitHub, Inc.
       https://en.wikipedia.org/wiki/GitHub


From jtelleriar at gmail.com  Tue Dec 26 00:13:49 2017
From: jtelleriar at gmail.com (Juan Telleria)
Date: Tue, 26 Dec 2017 00:13:49 +0100
Subject: [Rd] Collaborative Wiki: Mediawiki
Message-ID: <CANNd7=my=H2x16WGsuHQC38TJsBbw4b-9WUo=Y+pdWdpoPCWdg@mail.gmail.com>

Dear R Developers,

I create this e-mail, linked to "Collaborative Wiki for fostering Open
Innovation in R", for going straight into the point:

After studing multiple wikies (Confluence, xwiki, Mediawiki) for a
collaborative approach to R Documentation, I finally came up that Mediawiki
was the best for managing documentation for being:

   - 100% Open Source.
   - Simple, tidy, neat interface.
   - Documentation Focused (no forums, no other things).
   - Being the one Wikipedia usses is really an assurance that it will
   never go away, and each second spent on it is worthy.
   - Anyone can collaborate, update files up to 40 MB, but there is a
   strict version control on the wiki :), just as wikipedia has.

So I requested on Miraheze (https://meta.miraheze.org/wiki/Miraheze)
Community Driven Wiki Farms that they set up a wiki as a *Sandbox for
testing* (Not for real use in production):

https://kbrproject.miraheze.org/wiki/Main_Page

You can test it an play with it whatever you want; and assess if it could
constitute a good option for managing contributed R documentation.

Juan

	[[alternative HTML version deleted]]


From jtelleriar at gmail.com  Tue Dec 26 00:24:44 2017
From: jtelleriar at gmail.com (Juan Telleria)
Date: Tue, 26 Dec 2017 00:24:44 +0100
Subject: [Rd] R CMD check warning about compiler warning flags
In-Reply-To: <CAPtbhHwR-vtjRqtRgSfz4jPHS2m2u02JBcJxwwuKoejawLOW3Q@mail.gmail.com>
References: <CAFOpNVGKQjffBAF0+yJL7jFh7z7zDj+VsQAqnjXDjM9ZWE02Gg@mail.gmail.com>
 <18c039b2-7b26-2792-565b-f305bae51938@stats.ox.ac.uk>
 <CAFOpNVE-sX3kwPTzcLVY6p6xkQAo8UJJN=bBa6f6_1+kKgV7-g@mail.gmail.com>
 <360d5f57-3512-9efd-de74-38db1c536c68@gmail.com>
 <23101.4830.979381.386647@stat.math.ethz.ch>
 <A9377D4E-29FE-4CFA-8624-3A4643440F3B@me.com>
 <7ca2313a-2143-3d8f-eade-cbb0e6cb6132@gmail.com>
 <CALEXWq2To4hZm9zWauxmg9dd=XGPJccnKKvHX5p67N5KMjBJNg@mail.gmail.com>
 <9b0f83e3-a2d9-7988-dc89-3b2e034b8763@gmail.com>
 <CANNd7=nywaFfrecRtOP2yS4BEg2im_tP2WMN2qig1FEHpZzNvw@mail.gmail.com>
 <CAPtbhHwR-vtjRqtRgSfz4jPHS2m2u02JBcJxwwuKoejawLOW3Q@mail.gmail.com>
Message-ID: <CANNd7==xYZzmwLfC_FWpHJ+FVmSmDSzQA4vxv_17nocOFbAUxw@mail.gmail.com>

Mmmmm... I see... thank you Suzen.

Juan


> I strongly disagree. Are you aware that github is a commercial
> company, github inc. [1] ?
> What about gitlab? or Microsoft's codeplex? There are other services
> similar to github, why github?
> What happens if github goes out of business?
>
> R-project should be maintained in the academic network and under
> auspices of universities.
>
>
>  [*]  GitHub, Inc.
>        https://en.wikipedia.org/wiki/GitHub
>

	[[alternative HTML version deleted]]


From jtelleriar at gmail.com  Tue Dec 26 00:45:47 2017
From: jtelleriar at gmail.com (Juan Telleria)
Date: Tue, 26 Dec 2017 00:45:47 +0100
Subject: [Rd] R CMD check warning about compiler warning flags
In-Reply-To: <CANNd7==xYZzmwLfC_FWpHJ+FVmSmDSzQA4vxv_17nocOFbAUxw@mail.gmail.com>
References: <CAFOpNVGKQjffBAF0+yJL7jFh7z7zDj+VsQAqnjXDjM9ZWE02Gg@mail.gmail.com>
 <18c039b2-7b26-2792-565b-f305bae51938@stats.ox.ac.uk>
 <CAFOpNVE-sX3kwPTzcLVY6p6xkQAo8UJJN=bBa6f6_1+kKgV7-g@mail.gmail.com>
 <360d5f57-3512-9efd-de74-38db1c536c68@gmail.com>
 <23101.4830.979381.386647@stat.math.ethz.ch>
 <A9377D4E-29FE-4CFA-8624-3A4643440F3B@me.com>
 <7ca2313a-2143-3d8f-eade-cbb0e6cb6132@gmail.com>
 <CALEXWq2To4hZm9zWauxmg9dd=XGPJccnKKvHX5p67N5KMjBJNg@mail.gmail.com>
 <9b0f83e3-a2d9-7988-dc89-3b2e034b8763@gmail.com>
 <CANNd7=nywaFfrecRtOP2yS4BEg2im_tP2WMN2qig1FEHpZzNvw@mail.gmail.com>
 <CAPtbhHwR-vtjRqtRgSfz4jPHS2m2u02JBcJxwwuKoejawLOW3Q@mail.gmail.com>
 <CANNd7==xYZzmwLfC_FWpHJ+FVmSmDSzQA4vxv_17nocOFbAUxw@mail.gmail.com>
Message-ID: <CANNd7=khkFCXOE1o8vd_er_ZvdOePryW7AwvKk9VQSgDQTPEAA@mail.gmail.com>

However, and hope not to be off-topic, a git repository (github, gitlab,
codeplex, etc., not just solely github) could constitute a tidy approach,
and make things easier to R Core :)

By putting the focus on version control, the line of changes made with each
commit (With the possibility to reverse changes), and not verbose e-mails.

Juan

I strongly disagree. Are you aware that github is a commercial
>> company, github inc. [1] ?
>> What about gitlab? or Microsoft's codeplex? There are other services
>> similar to github, why github?
>> What happens if github goes out of business?
>>
>> R-project should be maintained in the academic network and under
>> auspices of universities.
>>
>>
>>  [*]  GitHub, Inc.
>>        https://en.wikipedia.org/wiki/GitHub
>>
>
>

	[[alternative HTML version deleted]]


From sunyijiang at gmail.com  Tue Dec 26 08:24:19 2017
From: sunyijiang at gmail.com (Sun Yijiang)
Date: Tue, 26 Dec 2017 15:24:19 +0800
Subject: [Rd] Rscript fails with some packages (for example, h5)
Message-ID: <CAL109eMo37PYMgE8KV0rxBgCGe-6Z1NhPrsUiQJfqCoJXfk6CA@mail.gmail.com>

Consider this script (with h5 installed):

$ cat test.R
library(h5)
name <- tempfile()
f <- h5file(name)
file.remove(name)

$ Rscript test.R
Error in initialize(value, ...) :
  cannot use object of class "character" in new():  class "H5File" does not
extend that class
Calls: h5file -> new -> initialize -> initialize
Execution halted

$ /usr/lib64/R/bin/R --slave --no-restore --file=test.R
[1] TRUE

$ R_DEFAULT_PACKAGES= Rscript test.R
[1] TRUE

$ R
> source('test.R')
>

$ R_DEFAULT_PACKAGES='datasets,utils,grDevices,graphics,stats' R
> source('test.R')
Error in initialize(value, ...) :
  cannot use object of class "character" in new():  class "H5File" does not
extend that class
>

After looking into C source code, I found that Rscript by default fills
environment variable R_DEFAULT_PACKAGES with
"datasets,utils,grDevices,graphics,stats", and it somehow fails some
package like h5.

The problem here is, not setting R_DEFAULT_PACKAGES is equivalent to
setting it to a magic value, it's really confusing.  I suggest remove this
feature.

	[[alternative HTML version deleted]]


From edd at debian.org  Tue Dec 26 13:46:13 2017
From: edd at debian.org (Dirk Eddelbuettel)
Date: Tue, 26 Dec 2017 06:46:13 -0600
Subject: [Rd] Rscript fails with some packages (for example, h5)
In-Reply-To: <CAL109eMo37PYMgE8KV0rxBgCGe-6Z1NhPrsUiQJfqCoJXfk6CA@mail.gmail.com>
References: <CAL109eMo37PYMgE8KV0rxBgCGe-6Z1NhPrsUiQJfqCoJXfk6CA@mail.gmail.com>
Message-ID: <23106.17557.985432.335423@bud.eddelbuettel.com>


On 26 December 2017 at 15:24, Sun Yijiang wrote:
| After looking into C source code, I found that Rscript by default fills
| environment variable R_DEFAULT_PACKAGES with
| "datasets,utils,grDevices,graphics,stats", and it somehow fails some
| package like h5.
| 
| The problem here is, not setting R_DEFAULT_PACKAGES is equivalent to
| setting it to a magic value, it's really confusing.  I suggest remove this
| feature.

The more confusing part is that "methods" is missing 'by design' (as loading
methods is marginally more expensive that other packages). Ie for your script

   edd at bud:/tmp$ cat h5ex.R
   library(methods) 
   library(h5)
   name <- tempfile()
   f <- h5file(name)
   file.remove(name)
   edd at bud:/tmp$ Rscript h5ex.R
   [1] TRUE
   edd at bud:/tmp$

it all works if you just add `library(methods)` as seen in the first line.

For what it is worth, littler's r does not need that as it loads methods just
like R itself does avoiding the confusion:

   edd at bud:/tmp$ cat h5ex2.R
   library(h5)
   name <- tempfile()
   f <- h5file(name)
   file.remove(name)
   edd at bud:/tmp$ r h5ex2.R
   edd at bud:/tmp$

Dirk

-- 
http://dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org


From edd at debian.org  Tue Dec 26 15:40:46 2017
From: edd at debian.org (Dirk Eddelbuettel)
Date: Tue, 26 Dec 2017 08:40:46 -0600
Subject: [Rd] Rscript fails with some packages (for example, h5)
In-Reply-To: <CAL109eMSq6=mbSzrMnktNiOw=z5C=Tj7nDg9o4zNir-h5pCywg@mail.gmail.com>
References: <CAL109eMo37PYMgE8KV0rxBgCGe-6Z1NhPrsUiQJfqCoJXfk6CA@mail.gmail.com>
 <23106.17557.985432.335423@bud.eddelbuettel.com>
 <CAL109eMSq6=mbSzrMnktNiOw=z5C=Tj7nDg9o4zNir-h5pCywg@mail.gmail.com>
Message-ID: <23106.24430.6935.8034@bud.eddelbuettel.com>


On 26 December 2017 at 22:14, Sun Yijiang wrote:
| Thanks for the solution.  Now I know the work-arounds, but still don't
| quite get it. Why does R_DEFAULT_PACKAGES has anything to do with
| library(methods)?

Because it governs which packages are loaded by default.  And while R also
loads 'methods', Rscript does not. Source of endless confusion.

| If library(h5) works, it should just work, not depend on an environment variable.

Every package using S4 will fail under Rscript unless 'methods' explicitly.

| Rscript is not consistent with R, that's my confusion.

Indeed. And you are not the first person confused by it.

Dirk

-- 
http://dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org


From sunyijiang at gmail.com  Tue Dec 26 15:14:32 2017
From: sunyijiang at gmail.com (Sun Yijiang)
Date: Tue, 26 Dec 2017 22:14:32 +0800
Subject: [Rd] Rscript fails with some packages (for example, h5)
In-Reply-To: <23106.17557.985432.335423@bud.eddelbuettel.com>
References: <CAL109eMo37PYMgE8KV0rxBgCGe-6Z1NhPrsUiQJfqCoJXfk6CA@mail.gmail.com>
 <23106.17557.985432.335423@bud.eddelbuettel.com>
Message-ID: <CAL109eMSq6=mbSzrMnktNiOw=z5C=Tj7nDg9o4zNir-h5pCywg@mail.gmail.com>

Hi Dirk,

Thanks for the solution.  Now I know the work-arounds, but still don't
quite get it. Why does R_DEFAULT_PACKAGES has anything to do with
library(methods)?  If library(h5) works, it should just work, not depend on
an environment variable.  Rscript is not consistent with R, that's my
confusion.

Steve

2017-12-26 20:46 GMT+08:00 Dirk Eddelbuettel <edd at debian.org>:

>
> On 26 December 2017 at 15:24, Sun Yijiang wrote:
> | After looking into C source code, I found that Rscript by default fills
> | environment variable R_DEFAULT_PACKAGES with
> | "datasets,utils,grDevices,graphics,stats", and it somehow fails some
> | package like h5.
> |
> | The problem here is, not setting R_DEFAULT_PACKAGES is equivalent to
> | setting it to a magic value, it's really confusing.  I suggest remove
> this
> | feature.
>
> The more confusing part is that "methods" is missing 'by design' (as
> loading
> methods is marginally more expensive that other packages). Ie for your
> script
>
>    edd at bud:/tmp$ cat h5ex.R
>    library(methods)
>    library(h5)
>    name <- tempfile()
>    f <- h5file(name)
>    file.remove(name)
>    edd at bud:/tmp$ Rscript h5ex.R
>    [1] TRUE
>    edd at bud:/tmp$
>
> it all works if you just add `library(methods)` as seen in the first line.
>
> For what it is worth, littler's r does not need that as it loads methods
> just
> like R itself does avoiding the confusion:
>
>    edd at bud:/tmp$ cat h5ex2.R
>    library(h5)
>    name <- tempfile()
>    f <- h5file(name)
>    file.remove(name)
>    edd at bud:/tmp$ r h5ex2.R
>    edd at bud:/tmp$
>
> Dirk
>
> --
> http://dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org
>

	[[alternative HTML version deleted]]


From murdoch.duncan at gmail.com  Wed Dec 27 12:13:12 2017
From: murdoch.duncan at gmail.com (Duncan Murdoch)
Date: Wed, 27 Dec 2017 06:13:12 -0500
Subject: [Rd] Rscript fails with some packages (for example, h5)
In-Reply-To: <23106.24430.6935.8034@bud.eddelbuettel.com>
References: <CAL109eMo37PYMgE8KV0rxBgCGe-6Z1NhPrsUiQJfqCoJXfk6CA@mail.gmail.com>
 <23106.17557.985432.335423@bud.eddelbuettel.com>
 <CAL109eMSq6=mbSzrMnktNiOw=z5C=Tj7nDg9o4zNir-h5pCywg@mail.gmail.com>
 <23106.24430.6935.8034@bud.eddelbuettel.com>
Message-ID: <9467e2c6-55b4-5e70-dfd4-9891eb02a25b@gmail.com>

On 26/12/2017 9:40 AM, Dirk Eddelbuettel wrote:
> 
> On 26 December 2017 at 22:14, Sun Yijiang wrote:
> | Thanks for the solution.  Now I know the work-arounds, but still don't
> | quite get it. Why does R_DEFAULT_PACKAGES has anything to do with
> | library(methods)?
> 
> Because it governs which packages are loaded by default.  And while R also
> loads 'methods', Rscript does not. Source of endless confusion.

Mostly irrelevant correction of the jargon:  that setting controls which 
packages are "attached" by default.  library(h5) would be enough to load 
methods, because h5 imports things from methods.  But loading doesn't 
put a package on the search list.  library(methods) both loads methods 
(if it hasn't already been loaded), and attaches it.

> 
> | If library(h5) works, it should just work, not depend on an environment variable.
> 
> Every package using S4 will fail under Rscript unless 'methods' explicitly.

That's not quite true (or quite English, as per fortune(112)).  The 
"gmp" package imports methods, and it works in Rscript.  What doesn't 
work is to expect library(h5) or library(gmp) to cause methods functions 
like show() to be available to the user.

There is a way to do that, but it is discouraged nowadays. My ancient 
package "orientlib" depends on methods, and that forces methods to be 
attached so show() works in Rscript.  ("Depends" is used in the 
DESCRIPTION file sense.)  h5 doesn't "depend" on methods, it "imports" 
methods.


> 
> | Rscript is not consistent with R, that's my confusion.
> 
> Indeed. And you are not the first person confused by it.

And that's still true, and less irrelevant than my corrections.

Duncan Murdoch


From edd at debian.org  Wed Dec 27 14:15:51 2017
From: edd at debian.org (Dirk Eddelbuettel)
Date: Wed, 27 Dec 2017 07:15:51 -0600
Subject: [Rd] Rscript fails with some packages (for example, h5)
In-Reply-To: <9467e2c6-55b4-5e70-dfd4-9891eb02a25b@gmail.com>
References: <CAL109eMo37PYMgE8KV0rxBgCGe-6Z1NhPrsUiQJfqCoJXfk6CA@mail.gmail.com>
 <23106.17557.985432.335423@bud.eddelbuettel.com>
 <CAL109eMSq6=mbSzrMnktNiOw=z5C=Tj7nDg9o4zNir-h5pCywg@mail.gmail.com>
 <23106.24430.6935.8034@bud.eddelbuettel.com>
 <9467e2c6-55b4-5e70-dfd4-9891eb02a25b@gmail.com>
Message-ID: <23107.40199.237407.973601@bud.eddelbuettel.com>


Duncan,

Very nice tutorial. However it does NOT take away from the fact that _very_
simple_ scripts (like the one posted by Sun at the beginning of this thread)
simply _fail_ in error under Rscript.

Whereas they don't under R or r.

The R environment ships an interpreter meant for command-line and scripting
use which fails on simple scripts that happen to use S4. But I am tired of
arguing for reversing this as I have gotten nowhere in all those years.

Dirk

-- 
http://dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org


From sunyijiang at gmail.com  Wed Dec 27 15:11:50 2017
From: sunyijiang at gmail.com (Sun Yijiang)
Date: Wed, 27 Dec 2017 14:11:50 +0000
Subject: [Rd] Rscript fails with some packages (for example, h5)
In-Reply-To: <23107.40199.237407.973601@bud.eddelbuettel.com>
References: <CAL109eMo37PYMgE8KV0rxBgCGe-6Z1NhPrsUiQJfqCoJXfk6CA@mail.gmail.com>
 <23106.17557.985432.335423@bud.eddelbuettel.com>
 <CAL109eMSq6=mbSzrMnktNiOw=z5C=Tj7nDg9o4zNir-h5pCywg@mail.gmail.com>
 <23106.24430.6935.8034@bud.eddelbuettel.com>
 <9467e2c6-55b4-5e70-dfd4-9891eb02a25b@gmail.com>
 <23107.40199.237407.973601@bud.eddelbuettel.com>
Message-ID: <CAL109eNTtAfPwLC74av1w_gu2t50n2enxse-Hxai7V=+MnMCzA@mail.gmail.com>

Thanks for the details. I?m new to R, and I?m not blaming anything here,
just that I?m still not clear what good it makes to keep this inconsistency
between R and Rscript. To me (and probably to many others from Perl/Python
etc.), this is shockingly weird. I can live with that, and I also want to
know why.

Steve
Dirk Eddelbuettel <edd at debian.org>?2017?12?27? ??21:15???

>
> Duncan,
>
> Very nice tutorial. However it does NOT take away from the fact that _very_
> simple_ scripts (like the one posted by Sun at the beginning of this
> thread)
> simply _fail_ in error under Rscript.
>
> Whereas they don't under R or r.
>
> The R environment ships an interpreter meant for command-line and scripting
> use which fails on simple scripts that happen to use S4. But I am tired of
> arguing for reversing this as I have gotten nowhere in all those years.
>
> Dirk
>
> --
> http://dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org
>

	[[alternative HTML version deleted]]


From yzan at volny.cz  Wed Dec 27 16:18:10 2017
From: yzan at volny.cz (Jan Motl)
Date: Wed, 27 Dec 2017 16:18:10 +0100
Subject: [Rd] Numerical stability in chisq.test
Message-ID: <8DE36064-E2AE-4A5E-847B-278EC246AEC4@volny.cz>

The chisq.test on line 57 contains following code:
	STATISTIC <- sum(sort((x - E)^2/E, decreasing = TRUE))

However, based on book "Accuracy and stability of numerical algorithms" available from:
	http://ftp.demec.ufpr.br/CFD/bibliografia/Higham_2002_Accuracy%20and%20Stability%20of%20Numerical%20Algorithms.pdf
Table 4.1 on page 89, it is better to sort the data in increasing order than in decreasing order, when the data are non-negative.

An example:
	x = matrix(c(rep(1.1, 10000)), 10^16, nrow = 10001, ncol = 1)    # We have a vector with 10000*1.1 and 1*10^16
	c(sum(sort(x, decreasing = TRUE)), sum(sort(x, decreasing = FALSE)))
The result:
	10000000000010996 10000000000011000
When we sort the data in the increasing order, we get the correct result. If we sort the data in the decreasing order, we get a result that is off by 4.

Shouldn't the sort be in the increasing order rather than in the decreasing order?

Best regards,
Jan Motl


PS: This post is based on discussion on https://stackoverflow.com/questions/47847295/why-does-chisq-test-sort-data-in-descending-order-before-summation and the response from the post to r-help at r-project.org.

From murdoch.duncan at gmail.com  Wed Dec 27 18:28:38 2017
From: murdoch.duncan at gmail.com (Duncan Murdoch)
Date: Wed, 27 Dec 2017 12:28:38 -0500
Subject: [Rd] Rscript fails with some packages (for example, h5)
In-Reply-To: <CAL109eNTtAfPwLC74av1w_gu2t50n2enxse-Hxai7V=+MnMCzA@mail.gmail.com>
References: <CAL109eMo37PYMgE8KV0rxBgCGe-6Z1NhPrsUiQJfqCoJXfk6CA@mail.gmail.com>
 <23106.17557.985432.335423@bud.eddelbuettel.com>
 <CAL109eMSq6=mbSzrMnktNiOw=z5C=Tj7nDg9o4zNir-h5pCywg@mail.gmail.com>
 <23106.24430.6935.8034@bud.eddelbuettel.com>
 <9467e2c6-55b4-5e70-dfd4-9891eb02a25b@gmail.com>
 <23107.40199.237407.973601@bud.eddelbuettel.com>
 <CAL109eNTtAfPwLC74av1w_gu2t50n2enxse-Hxai7V=+MnMCzA@mail.gmail.com>
Message-ID: <f6bf88f5-a307-f9ad-ac60-8204795cb02e@gmail.com>

On 27/12/2017 9:11 AM, Sun Yijiang wrote:
> Thanks for the details. I?m new to R, and I?m not blaming anything here,
> just that I?m still not clear what good it makes to keep this inconsistency
> between R and Rscript. To me (and probably to many others from Perl/Python
> etc.), this is shockingly weird. I can live with that, and I also want to
> know why.

As Dirk said, the argument was that the methods package used to take a 
long time to load, and many uses of Rscript shouldn't have to pay that 
time cost.  I don't know whether that's still true or not.  Dirk and I 
agree that the inconsistency between R and Rscript is undesirable, but 
neither of us is in a position to change it, or thinks it's worth the 
effort to argue for a change.

Duncan


> 
> Steve
> Dirk Eddelbuettel <edd at debian.org>?2017?12?27? ??21:15???
> 
>>
>> Duncan,
>>
>> Very nice tutorial. However it does NOT take away from the fact that _very_
>> simple_ scripts (like the one posted by Sun at the beginning of this
>> thread)
>> simply _fail_ in error under Rscript.
>>
>> Whereas they don't under R or r.
>>
>> The R environment ships an interpreter meant for command-line and scripting
>> use which fails on simple scripts that happen to use S4. But I am tired of
>> arguing for reversing this as I have gotten nowhere in all those years.
>>
>> Dirk
>>
>> --
>> http://dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org
>>
>


From Kurt.Hornik at wu.ac.at  Thu Dec 28 13:08:11 2017
From: Kurt.Hornik at wu.ac.at (Kurt Hornik)
Date: Thu, 28 Dec 2017 13:08:11 +0100
Subject: [Rd] Numerical stability in chisq.test
In-Reply-To: <8DE36064-E2AE-4A5E-847B-278EC246AEC4@volny.cz>
References: <8DE36064-E2AE-4A5E-847B-278EC246AEC4@volny.cz>
Message-ID: <23108.57003.959386.801846@hornik.net>

>>>>> Jan Motl writes:

> The chisq.test on line 57 contains following code:
> 	STATISTIC <- sum(sort((x - E)^2/E, decreasing = TRUE))

The preceding 2 lines seem relevant:

            ## Sorting before summing may look strange, but seems to be
            ## a sensible way to deal with rounding issues (PR#3486):
            STATISTIC <- sum(sort((x - E) ^ 2 / E, decreasing = TRUE))

-k

> However, based on book "Accuracy and stability of numerical algorithms" available from:
> 	http://ftp.demec.ufpr.br/CFD/bibliografia/Higham_2002_Accuracy%20and%20Stability%20of%20Numerical%20Algorithms.pdf
> Table 4.1 on page 89, it is better to sort the data in increasing order than in decreasing order, when the data are non-negative.

> An example:
> 	x = matrix(c(rep(1.1, 10000)), 10^16, nrow = 10001, ncol = 1)    # We have a vector with 10000*1.1 and 1*10^16
> 	c(sum(sort(x, decreasing = TRUE)), sum(sort(x, decreasing = FALSE)))
> The result:
> 	10000000000010996 10000000000011000
> When we sort the data in the increasing order, we get the correct result. If we sort the data in the decreasing order, we get a result that is off by 4.

> Shouldn't the sort be in the increasing order rather than in the decreasing order?

> Best regards,
> Jan Motl


> PS: This post is based on discussion on https://stackoverflow.com/questions/47847295/why-does-chisq-test-sort-data-in-descending-order-before-summation and the response from the post to r-help at r-project.org.
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From pdalgd at gmail.com  Thu Dec 28 14:13:10 2017
From: pdalgd at gmail.com (peter dalgaard)
Date: Thu, 28 Dec 2017 14:13:10 +0100
Subject: [Rd] Numerical stability in chisq.test
In-Reply-To: <23108.57003.959386.801846@hornik.net>
References: <8DE36064-E2AE-4A5E-847B-278EC246AEC4@volny.cz>
 <23108.57003.959386.801846@hornik.net>
Message-ID: <E188F321-9859-46A6-BAE0-59176E4E009B@gmail.com>



> On 28 Dec 2017, at 13:08 , Kurt Hornik <Kurt.Hornik at wu.ac.at> wrote:
> 
>>>>>> Jan Motl writes:
> 
>> The chisq.test on line 57 contains following code:
>> 	STATISTIC <- sum(sort((x - E)^2/E, decreasing = TRUE))
> 
> The preceding 2 lines seem relevant:
> 
>            ## Sorting before summing may look strange, but seems to be
>            ## a sensible way to deal with rounding issues (PR#3486):
>            STATISTIC <- sum(sort((x - E) ^ 2 / E, decreasing = TRUE))
> 
> -k

My thoughts too. PR 3486 is about simulated tables that theoretically have STATISTIC equal to the one observed, but come out slightly different, messing up the simulated p value. The sort is not actually intended to squeeze the very last bit of accuracy out of the computation, just to make sure that the round-off affects equivalent tables in the same way. "Fixing" the code may therefore unfix PR#3486; at the very least some care is required if this is modified.  

-pd


> 
>> However, based on book "Accuracy and stability of numerical algorithms" available from:
>> 	http://ftp.demec.ufpr.br/CFD/bibliografia/Higham_2002_Accuracy%20and%20Stability%20of%20Numerical%20Algorithms.pdf
>> Table 4.1 on page 89, it is better to sort the data in increasing order than in decreasing order, when the data are non-negative.
> 
>> An example:
>> 	x = matrix(c(rep(1.1, 10000)), 10^16, nrow = 10001, ncol = 1)    # We have a vector with 10000*1.1 and 1*10^16
>> 	c(sum(sort(x, decreasing = TRUE)), sum(sort(x, decreasing = FALSE)))
>> The result:
>> 	10000000000010996 10000000000011000
>> When we sort the data in the increasing order, we get the correct result. If we sort the data in the decreasing order, we get a result that is off by 4.
> 
>> Shouldn't the sort be in the increasing order rather than in the decreasing order?
> 
>> Best regards,
>> Jan Motl
> 
> 
>> PS: This post is based on discussion on https://stackoverflow.com/questions/47847295/why-does-chisq-test-sort-data-in-descending-order-before-summation and the response from the post to r-help at r-project.org.
>> ______________________________________________
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel

-- 
Peter Dalgaard, Professor,
Center for Statistics, Copenhagen Business School
Solbjerg Plads 3, 2000 Frederiksberg, Denmark
Phone: (+45)38153501
Office: A 4.23
Email: pd.mes at cbs.dk  Priv: PDalgd at gmail.com


From maechler at stat.math.ethz.ch  Thu Dec 28 22:32:02 2017
From: maechler at stat.math.ethz.ch (Martin Maechler)
Date: Thu, 28 Dec 2017 22:32:02 +0100
Subject: [Rd] Rscript failing with h5 reveals bugs in h5 (and 'R CMD
	check')
In-Reply-To: <9467e2c6-55b4-5e70-dfd4-9891eb02a25b@gmail.com>
References: <CAL109eMo37PYMgE8KV0rxBgCGe-6Z1NhPrsUiQJfqCoJXfk6CA@mail.gmail.com>
 <23106.17557.985432.335423@bud.eddelbuettel.com>
 <CAL109eMSq6=mbSzrMnktNiOw=z5C=Tj7nDg9o4zNir-h5pCywg@mail.gmail.com>
 <23106.24430.6935.8034@bud.eddelbuettel.com>
 <9467e2c6-55b4-5e70-dfd4-9891eb02a25b@gmail.com>
Message-ID: <23109.25298.557763.699637@stat.math.ethz.ch>

>>>>> Duncan Murdoch <murdoch.duncan at gmail.com>
>>>>>     on Wed, 27 Dec 2017 06:13:12 -0500 writes:

    > On 26/12/2017 9:40 AM, Dirk Eddelbuettel wrote:
    >> 
    >> On 26 December 2017 at 22:14, Sun Yijiang wrote: | Thanks
    >> for the solution.  Now I know the work-arounds, but still
    >> don't | quite get it. Why does R_DEFAULT_PACKAGES has
    >> anything to do with | library(methods)?
    >> 
    >> Because it governs which packages are loaded by default.
    >> And while R also loads 'methods', Rscript does
    >> not. Source of endless confusion.

    > Mostly irrelevant correction of the jargon: that setting
    > controls which packages are "attached" by default.
    > library(h5) would be enough to load methods, because h5
    > imports things from methods.  But loading doesn't put a
    > package on the search list.  library(methods) both loads
    > methods (if it hasn't already been loaded), and attaches
    > it.

    >> 
    >> | If library(h5) works, it should just work, not depend
    >> on an environment variable.
    >> 
    >> Every package using S4 will fail under Rscript unless
    >> 'methods' explicitly.

    > That's not quite true (or quite English, as per
    > fortune(112)).  The "gmp" package imports methods, and
    > it works in Rscript.  What doesn't work is to expect
    > library(h5) or library(gmp) to cause methods functions
    > like show() to be available to the user.

But indeed, in this case Sun's  test.R  script did not use any
such user level functions, and it still did not work when
methods is not attached...
and indeed that's the case also with R if you run it without
loading methods e.g. by

  R_DEFAULT_PACKAGES=NULL R CMD BATCH test.R

shows the same error...

===> There is really a bug in  h5 :  It does not import enough
from methods or it would all work fine, even with Rscript !!

===> So we have something relevant to R-devel , actually at
least one bug in R's  checking :

Why did
    	R   CMD check --as-cran h5

not see that h5 defines methods for initialize() but never
imports that from methods ?
and so "should not work" when methods is not attached....

--

After all, the fact that the default packages attached at the
beginning differ between R and Rscript  has contributed to
revealing a bug in both 'h5' and R's checking procedures.

Maybe we should keep Rscript's incompatibility therefore ;-)

Martin


From therneau at mayo.edu  Fri Dec 29 14:14:36 2017
From: therneau at mayo.edu (Therneau, Terry M., Ph.D.)
Date: Fri, 29 Dec 2017 07:14:36 -0600
Subject: [Rd] winbuilder warning message wrt function pointers
Message-ID: <375144$8j4pe9@ironport10.mayo.edu>

I've recently updated the coxme package, which calls internal routines from the bdsmatrix 
package.? (It is in fact mentioned as an example of this in the Extensions manual.)
The call connections are a blocks like this, one for each of the 9 called C routines.

void bdsmatrix_prod4(int nrow,??? int nblock,?? int *bsize,
 ??????????????????? double *bmat, double *rmat,
 ??????????????????? int nfrail,?? double *y) {
 ??? static void (*fun)() = NULL;
 ??? if (fun==NULL)
 ??? fun = (void (*)) R_GetCCallable("bdsmatrix", "bdsmatrix_prod4");
 ??? fun(nrow, nblock, bsize, bmat, rmat, nfrail, y);
 ??? }

..

The winbuilder run is flagging all of these with

bdsmatrix_stub.h:22:6: warning: ISO C forbids assignment between function pointer and 
'void *' [-Wpedantic]
 ? fun = (void (*)) R_GetCCallable("bdsmatrix", "bdsmatrix_prod4");

Ignore?? Or should these lines have been written in a different way?

Terry T.


From therneau at mayo.edu  Fri Dec 29 14:23:44 2017
From: therneau at mayo.edu (Therneau, Terry M., Ph.D.)
Date: Fri, 29 Dec 2017 07:23:44 -0600
Subject: [Rd] data compression in a package
Message-ID: <375144$8j4qn4@ironport10.mayo.edu>

The submission guide has the following cryptic (to me) sentence:
 ?? "Reasonable compression should be used for data (not just .rda files) "

The survival pacakge has a fairly large number of data files --- exactly what should I be 
doing??? xz compression?

Terry T.


From edd at debian.org  Fri Dec 29 14:34:37 2017
From: edd at debian.org (Dirk Eddelbuettel)
Date: Fri, 29 Dec 2017 07:34:37 -0600
Subject: [Rd] data compression in a package
In-Reply-To: <375144$8j4qn4@ironport10.mayo.edu>
References: <375144$8j4qn4@ironport10.mayo.edu>
Message-ID: <23110.17517.553600.438412@bud.eddelbuettel.com>


On 29 December 2017 at 07:23, Therneau, Terry M., Ph.D. wrote:
| The submission guide has the following cryptic (to me) sentence:
|  ?? "Reasonable compression should be used for data (not just .rda files) "
| 
| The survival pacakge has a fairly large number of data files --- exactly what should I be 
| doing??? xz compression?

See help(save) and its ilk -- compression is on by default. So just sit back
and revel in how yet another task is already taken care of by R.

Dirk

-- 
http://dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org


From yzan at volny.cz  Fri Dec 29 14:53:43 2017
From: yzan at volny.cz (Jan Motl)
Date: Fri, 29 Dec 2017 14:53:43 +0100
Subject: [Rd] Numerical stability in chisq.test
In-Reply-To: <E188F321-9859-46A6-BAE0-59176E4E009B@gmail.com>
References: <8DE36064-E2AE-4A5E-847B-278EC246AEC4@volny.cz>
 <23108.57003.959386.801846@hornik.net>
 <E188F321-9859-46A6-BAE0-59176E4E009B@gmail.com>
Message-ID: <F7CD80FE-3588-4258-8901-33C1C5B78652@volny.cz>

Hi,

there is also PR#8224, which seems to be relevant. I executed the following code:

## Modify the function
chisq.test2 <- edit(chisq.test) # Modify to use increasing order of sorting at line 57


## PR#8224 (patological contingency table)
m <- matrix(c(1,0,7,16),2,2);

# Original
original <- chisq.test(m, sim=T)$p.value
for(i in (1:2000)){original <- c(original, chisq.test(m, sim=T)$p.value)}

# Modified
modified <- chisq.test2(m, sim=T)$p.value
for(i in (1:2000)){modified <- c(modified, chisq.test2(m, sim=T)$p.value)}

# Evaluation
t.test(original, modified)


## PR#3486 (invariance to transposition)
x <- rbind(c(149, 151), c(1, 8))

# Original
c2x <- chisq.test(x, sim=T, B=100000)$p.value
for(i in (1:200)){c2x<-c(c2x,chisq.test(x, sim=T,B=100000)$p.value)}
c2tx <- chisq.test(t(x), sim=T, B=100000)$p.value
for(i in (1:200)){c2tx<-c(c2tx,chisq.test(t(x), sim=T, B=100000)$p.value)}
sum(abs(c2x-c2tx))

# Modified
mc2x <- chisq.test2(x, sim=T, B=100000)$p.value
for(i in (1:200)){mc2x <- c(mc2x, chisq.test2(x, sim=T, B=100000)$p.value)}
mc2tx <- chisq.test2(t(x), sim=T, B=100000)$p.value
for(i in (1:200)){mc2tx <- c(mc2tx, chisq.test2(t(x), sim=T, B=100000)$p.value)}
sum(abs(mc2x-mc2tx)) 

# Evaluation
t.test((c2x-c2tx), (mc2x-mc2tx))

on two computers:
	1) OS: OS X 10.11.6, x86_64, darwin15.6.0; Version: R version 3.4.2 (2017-09-28)
	2) OS: Windows XP, i386, mingw32; Version: R version 3.4.3 (2017-11-30)

On both computers, the increasing and decreasing order return approximately the same results. 

Best regards,
 Jan Motl

> My thoughts too. PR 3486 is about simulated tables that theoretically have STATISTIC equal to the one observed, but come out slightly different, messing up the simulated p value. The sort is not actually intended to squeeze the very last bit of accuracy out of the computation, just to make sure that the round-off affects equivalent tables in the same way. "Fixing" the code may therefore unfix PR#3486; at the very least some care is required if this is modified.  


	[[alternative HTML version deleted]]


From therneau at mayo.edu  Fri Dec 29 14:59:27 2017
From: therneau at mayo.edu (Therneau, Terry M., Ph.D.)
Date: Fri, 29 Dec 2017 07:59:27 -0600
Subject: [Rd] data compression in a package
In-Reply-To: <23110.17517.553600.438412@bud.eddelbuettel.com>
References: <375144$8j4qn4@ironport10.mayo.edu>
 <23110.17517.553600.438412@bud.eddelbuettel.com>
Message-ID: <375144$8j50e0@ironport10.mayo.edu>



On 12/29/2017 07:34 AM, Dirk Eddelbuettel wrote:
> 
> On 29 December 2017 at 07:23, Therneau, Terry M., Ph.D. wrote:
> | The submission guide has the following cryptic (to me) sentence:
> |  ?? "Reasonable compression should be used for data (not just .rda files) "
> |
> | The survival pacakge has a fairly large number of data files --- exactly what should I be
> | doing??? xz compression?
> 
> See help(save) and its ilk -- compression is on by default. So just sit back
> and revel in how yet another task is already taken care of by R.
> 
> Dirk
> 

Ah -just a grammar issue.  I was reading it as "do good compression for your rda files and 
everthing else too", and your interpretation is "remember the other data (not just rda 
which is already taken care of)."  The survival package has about 2M of .rda files and 
2.2M of vignettes so I'm still under the 5M boundary, but R CMD check nags about it.

Terry T.


From edd at debian.org  Fri Dec 29 15:56:24 2017
From: edd at debian.org (Dirk Eddelbuettel)
Date: Fri, 29 Dec 2017 08:56:24 -0600
Subject: [Rd] data compression in a package
In-Reply-To: <375144$8j50e0@ironport10.mayo.edu>
References: <375144$8j4qn4@ironport10.mayo.edu>
 <23110.17517.553600.438412@bud.eddelbuettel.com>
 <375144$8j50e0@ironport10.mayo.edu>
Message-ID: <23110.22424.268587.160038@bud.eddelbuettel.com>


On 29 December 2017 at 07:59, Therneau, Terry M., Ph.D. wrote:
| which is already taken care of)."  The survival package has about 2M of .rda files and 
| 2.2M of vignettes so I'm still under the 5M boundary, but R CMD check nags about it.

The nags are genuinely irritating, especially as they are neither "inflation
adjusted" nor user-adjustable or suppressable (and I mentioned frequently how
Debian package checks allow us maintainers to control the latter part).

If I had penny for each warning I got for Rcpp, BH, ... being "large" I could
go off and (almost) buy a bitcoin.

Dirk

-- 
http://dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org


From ligges at statistik.tu-dortmund.de  Fri Dec 29 16:34:11 2017
From: ligges at statistik.tu-dortmund.de (Uwe Ligges)
Date: Fri, 29 Dec 2017 16:34:11 +0100
Subject: [Rd] Typos in ?regex
In-Reply-To: <87f17e47fb744a329e042ef7a9d11729@C119S212VM016.msvyvi.vaha.local>
References: <87f17e47fb744a329e042ef7a9d11729@C119S212VM016.msvyvi.vaha.local>
Message-ID: <9fb1aec3-44d2-2ac2-0ba6-492da0798c1c@statistik.tu-dortmund.de>

Thanks, fixed in R-devel and R-patched.

Best,
Uwe Ligges


On 22.12.2017 15:28, Korpela Mikko (MML) wrote:
> I found three little typos in the ?regex manual. Apologies for the lack of a diff, as the utility is not (yet) installed on this machine.
> 
> 1. "There is a also" should probably be "There is also".
> 2. In the list of functions following "This section covers the regular expressions"..., "grep" appears twice. The other one should probably be "grepl".
> 3. In the "See Also" entry for TRE documentation, there is a spurious closing parenthesis.
> 
> - Mikko
>


From wdunlap at tibco.com  Fri Dec 29 17:48:37 2017
From: wdunlap at tibco.com (William Dunlap)
Date: Fri, 29 Dec 2017 08:48:37 -0800
Subject: [Rd] winbuilder warning message wrt function pointers
In-Reply-To: <375144$8j4pe9@ironport10.mayo.edu>
References: <375144$8j4pe9@ironport10.mayo.edu>
Message-ID: <CAF8bMcbWjrNX4uBKxDd__s9HvxZ+Xkesyk5odegO8CaUxhWqtw@mail.gmail.com>

Try changing
  static void (*fun)() = NULL;
to
  DL_FUNC fun = NULL;

Bill Dunlap
TIBCO Software
wdunlap tibco.com

On Fri, Dec 29, 2017 at 5:14 AM, Therneau, Terry M., Ph.D. <
therneau at mayo.edu> wrote:

> I've recently updated the coxme package, which calls internal routines
> from the bdsmatrix package.  (It is in fact mentioned as an example of this
> in the Extensions manual.)
> The call connections are a blocks like this, one for each of the 9 called
> C routines.
>
> void bdsmatrix_prod4(int nrow,    int nblock,   int *bsize,
>                     double *bmat, double *rmat,
>                     int nfrail,   double *y) {
>     static void (*fun)() = NULL;
>     if (fun==NULL)
>     fun = (void (*)) R_GetCCallable("bdsmatrix", "bdsmatrix_prod4");
>     fun(nrow, nblock, bsize, bmat, rmat, nfrail, y);
>     }
>
> ..
>
> The winbuilder run is flagging all of these with
>
> bdsmatrix_stub.h:22:6: warning: ISO C forbids assignment between function
> pointer and 'void *' [-Wpedantic]
>   fun = (void (*)) R_GetCCallable("bdsmatrix", "bdsmatrix_prod4");
>
> Ignore?  Or should these lines have been written in a different way?
>
> Terry T.
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel

	[[alternative HTML version deleted]]


From wdunlap at tibco.com  Fri Dec 29 17:52:40 2017
From: wdunlap at tibco.com (William Dunlap)
Date: Fri, 29 Dec 2017 08:52:40 -0800
Subject: [Rd] winbuilder warning message wrt function pointers
In-Reply-To: <CAF8bMcbWjrNX4uBKxDd__s9HvxZ+Xkesyk5odegO8CaUxhWqtw@mail.gmail.com>
References: <375144$8j4pe9@ironport10.mayo.edu>
 <CAF8bMcbWjrNX4uBKxDd__s9HvxZ+Xkesyk5odegO8CaUxhWqtw@mail.gmail.com>
Message-ID: <CAF8bMcaxsFdFPKbEL94jjadZtGJY6Bw_C9RLt18yqvbcrsQFpQ@mail.gmail.com>

And remove the cast on the return value of R_GETCCallable.  And check
that your function is found before using it.

#include <R.h>
#include <Rinternals.h>
#include <R_ext/Rdynload.h>

void bdsmatrix_prod4(int nrow,    int nblock,   int *bsize,
                    double *bmat, double *rmat,
                    int nfrail,   double *y) {
    DL_FUNC fun = NULL;
    if (fun==NULL) {
        fun = R_GetCCallable("bdsmatrix", "bdsmatrix_prod4");
    }
    if (fun==NULL) {
        Rf_error("Cannot find C function 'bdsmatrix_prod4' in library
'bdsmatrix.{so,dll}'");
    }
    fun(nrow, nblock, bsize, bmat, rmat, nfrail, y);
    }




Bill Dunlap
TIBCO Software
wdunlap tibco.com

On Fri, Dec 29, 2017 at 8:48 AM, William Dunlap <wdunlap at tibco.com> wrote:

> Try changing
>   static void (*fun)() = NULL;
> to
>   DL_FUNC fun = NULL;
>
> Bill Dunlap
> TIBCO Software
> wdunlap tibco.com
>
> On Fri, Dec 29, 2017 at 5:14 AM, Therneau, Terry M., Ph.D. <
> therneau at mayo.edu> wrote:
>
>> I've recently updated the coxme package, which calls internal routines
>> from the bdsmatrix package.  (It is in fact mentioned as an example of this
>> in the Extensions manual.)
>> The call connections are a blocks like this, one for each of the 9 called
>> C routines.
>>
>> void bdsmatrix_prod4(int nrow,    int nblock,   int *bsize,
>>                     double *bmat, double *rmat,
>>                     int nfrail,   double *y) {
>>     static void (*fun)() = NULL;
>>     if (fun==NULL)
>>     fun = (void (*)) R_GetCCallable("bdsmatrix", "bdsmatrix_prod4");
>>     fun(nrow, nblock, bsize, bmat, rmat, nfrail, y);
>>     }
>>
>> ..
>>
>> The winbuilder run is flagging all of these with
>>
>> bdsmatrix_stub.h:22:6: warning: ISO C forbids assignment between function
>> pointer and 'void *' [-Wpedantic]
>>   fun = (void (*)) R_GetCCallable("bdsmatrix", "bdsmatrix_prod4");
>>
>> Ignore?  Or should these lines have been written in a different way?
>>
>> Terry T.
>>
>> ______________________________________________
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel
>
>
>

	[[alternative HTML version deleted]]


From therneau at mayo.edu  Fri Dec 29 19:13:58 2017
From: therneau at mayo.edu (Therneau, Terry M., Ph.D.)
Date: Fri, 29 Dec 2017 12:13:58 -0600
Subject: [Rd] winbuilder warning message wrt function pointers
In-Reply-To: <CAF8bMcaxsFdFPKbEL94jjadZtGJY6Bw_C9RLt18yqvbcrsQFpQ@mail.gmail.com>
References: <375144$8j4pe9@ironport10.mayo.edu>
 <CAF8bMcbWjrNX4uBKxDd__s9HvxZ+Xkesyk5odegO8CaUxhWqtw@mail.gmail.com>
 <CAF8bMcaxsFdFPKbEL94jjadZtGJY6Bw_C9RLt18yqvbcrsQFpQ@mail.gmail.com>
Message-ID: <375144$8j7b3u@ironport10.mayo.edu>

Bill,
 ? That's a very nice solution.? It is both cleaner looking and preferable to track R's .h 
files.
However, some of my routines don't have void * as the return type (two are int *), and 
Rdynload has

 ?? typedef void * (*DL_FUNC)();

Will this untruth mess anything up?

Terry T.

On 12/29/2017 10:52 AM, William Dunlap wrote:
> And remove the cast on the return value of R_GETCCallable.? And check
> that your function is found before using it.
>
> #include <R.h>
> #include <Rinternals.h>
> #include <R_ext/Rdynload.h>
>
> void bdsmatrix_prod4(int nrow,? ? int nblock,? ?int *bsize,
> ? ? ? ? ? ? ? ? ? ? double *bmat, double *rmat,
> ? ? ? ? ? ? ? ? ? ? int nfrail,? ?double *y) {
> ? ? DL_FUNC fun = NULL;
> ? ? if (fun==NULL) {
> ? ? ? ? fun = R_GetCCallable("bdsmatrix", "bdsmatrix_prod4");
> ? ? }
> ? ? if (fun==NULL) {
> ? ? ? ? Rf_error("Cannot find C function 'bdsmatrix_prod4' in library 
> 'bdsmatrix.{so,dll}'");
> ? ? }
> ? ? fun(nrow, nblock, bsize, bmat, rmat, nfrail, y);
> ? ? }
>
>
>
>
> Bill Dunlap
> TIBCO Software
> wdunlap tibco.com <http://tibco.com>
>
> On Fri, Dec 29, 2017 at 8:48 AM, William Dunlap <wdunlap at tibco.com 
> <mailto:wdunlap at tibco.com>> wrote:
>
>     Try changing
>     ??static void (*fun)() = NULL;
>     to
>     ? DL_FUNC fun = NULL;
>
>     Bill Dunlap
>     TIBCO Software
>     wdunlap tibco.com <http://tibco.com>
>
>     On Fri, Dec 29, 2017 at 5:14 AM, Therneau, Terry M., Ph.D. <therneau at mayo.edu
>     <mailto:therneau at mayo.edu>> wrote:
>
>         I've recently updated the coxme package, which calls internal routines from the
>         bdsmatrix package.? (It is in fact mentioned as an example of this in the
>         Extensions manual.)
>         The call connections are a blocks like this, one for each of the 9 called C
>         routines.
>
>         void bdsmatrix_prod4(int nrow,??? int nblock, int *bsize,
>         ??????????????????? double *bmat, double *rmat,
>         ??????????????????? int nfrail,?? double *y) {
>         ??? static void (*fun)() = NULL;
>         ??? if (fun==NULL)
>         ??? fun = (void (*)) R_GetCCallable("bdsmatrix", "bdsmatrix_prod4");
>         ??? fun(nrow, nblock, bsize, bmat, rmat, nfrail, y);
>         ??? }
>
>         ..
>
>         The winbuilder run is flagging all of these with
>
>         bdsmatrix_stub.h:22:6: warning: ISO C forbids assignment between function
>         pointer and 'void *' [-Wpedantic]
>         ? fun = (void (*)) R_GetCCallable("bdsmatrix", "bdsmatrix_prod4");
>
>         Ignore?? Or should these lines have been written in a different way?
>
>         Terry T.
>
>         ______________________________________________
>         R-devel at r-project.org <mailto:R-devel at r-project.org> mailing list
>         https://stat.ethz.ch/mailman/listinfo/r-devel
>         <https://stat.ethz.ch/mailman/listinfo/r-devel>
>
>
>


	[[alternative HTML version deleted]]


From wdunlap at tibco.com  Fri Dec 29 19:19:51 2017
From: wdunlap at tibco.com (William Dunlap)
Date: Fri, 29 Dec 2017 10:19:51 -0800
Subject: [Rd] winbuilder warning message wrt function pointers
In-Reply-To: <375144$8j7b3v@ironport10.mayo.edu>
References: <375144$8j4pe9@ironport10.mayo.edu>
 <CAF8bMcbWjrNX4uBKxDd__s9HvxZ+Xkesyk5odegO8CaUxhWqtw@mail.gmail.com>
 <CAF8bMcaxsFdFPKbEL94jjadZtGJY6Bw_C9RLt18yqvbcrsQFpQ@mail.gmail.com>
 <375144$8j7b3v@ironport10.mayo.edu>
Message-ID: <CAF8bMcY6XU8c_O_fPhXFDpYdj6CQHLhf-vQfHj_NraBswEjuQw@mail.gmail.com>

You can legally cast a function pointer to another function pointer, where
the signatures differ.  (It is not legal to cast between data and function
pointers.)
I would make typedefs for the various signatures, as the casting syntax is
more
readable then.

Bill Dunlap
TIBCO Software
wdunlap tibco.com

On Fri, Dec 29, 2017 at 10:13 AM, Therneau, Terry M., Ph.D. <
therneau at mayo.edu> wrote:

> Bill,
>   That's a very nice solution.  It is both cleaner looking and preferable
> to track R's .h files.
> However, some of my routines don't have void * as the return type (two are
> int *), and Rdynload has
>
>    typedef void * (*DL_FUNC)();
>
> Will this untruth mess anything up?
>
> Terry T.
>
> On 12/29/2017 10:52 AM, William Dunlap wrote:
>
> And remove the cast on the return value of R_GETCCallable.  And check
> that your function is found before using it.
>
> #include <R.h>
> #include <Rinternals.h>
> #include <R_ext/Rdynload.h>
>
> void bdsmatrix_prod4(int nrow,    int nblock,   int *bsize,
>                     double *bmat, double *rmat,
>                     int nfrail,   double *y) {
>     DL_FUNC fun = NULL;
>     if (fun==NULL) {
>         fun = R_GetCCallable("bdsmatrix", "bdsmatrix_prod4");
>     }
>     if (fun==NULL) {
>         Rf_error("Cannot find C function 'bdsmatrix_prod4' in library
> 'bdsmatrix.{so,dll}'");
>     }
>     fun(nrow, nblock, bsize, bmat, rmat, nfrail, y);
>     }
>
>
>
>
> Bill Dunlap
> TIBCO Software
> wdunlap tibco.com
>
> On Fri, Dec 29, 2017 at 8:48 AM, William Dunlap <wdunlap at tibco.com> wrote:
>
>> Try changing
>>   static void (*fun)() = NULL;
>> to
>>   DL_FUNC fun = NULL;
>>
>> Bill Dunlap
>> TIBCO Software
>> wdunlap tibco.com
>>
>> On Fri, Dec 29, 2017 at 5:14 AM, Therneau, Terry M., Ph.D. <
>> therneau at mayo.edu> wrote:
>>
>>> I've recently updated the coxme package, which calls internal routines
>>> from the bdsmatrix package.  (It is in fact mentioned as an example of this
>>> in the Extensions manual.)
>>> The call connections are a blocks like this, one for each of the 9
>>> called C routines.
>>>
>>> void bdsmatrix_prod4(int nrow,    int nblock,   int *bsize,
>>>                     double *bmat, double *rmat,
>>>                     int nfrail,   double *y) {
>>>     static void (*fun)() = NULL;
>>>     if (fun==NULL)
>>>     fun = (void (*)) R_GetCCallable("bdsmatrix", "bdsmatrix_prod4");
>>>     fun(nrow, nblock, bsize, bmat, rmat, nfrail, y);
>>>     }
>>>
>>> ..
>>>
>>> The winbuilder run is flagging all of these with
>>>
>>> bdsmatrix_stub.h:22:6: warning: ISO C forbids assignment between
>>> function pointer and 'void *' [-Wpedantic]
>>>   fun = (void (*)) R_GetCCallable("bdsmatrix", "bdsmatrix_prod4");
>>>
>>> Ignore?  Or should these lines have been written in a different way?
>>>
>>> Terry T.
>>>
>>> ______________________________________________
>>> R-devel at r-project.org mailing list
>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>
>>
>>
>
>

	[[alternative HTML version deleted]]


