From jo@ec|@ud|o@|@r|@ @end|ng |rom gm@||@com  Sat Jun  4 05:43:39 2022
From: jo@ec|@ud|o@|@r|@ @end|ng |rom gm@||@com (jcfaria)
Date: Sat, 04 Jun 2022 03:43:39 +0000
Subject: [Rd] Writing Extensions for R under Windows: is it better for GUIs
 to communicate with R via Rgui.exe, Rterm.exe or R.dll?
Message-ID: <emcfa70b95-004c-45fb-8936-55133f137688@dell>

Writing Extensions for R under Windows: is it better for GUIs to 
communicate with R via Rgui.exe, Rterm.exe or R.dll?

In the construction of extensions (GUIs) for R, in the establishment of 
communication, according to the options below:

1- Rgui.exe (via Windows API) vs. R.dll (embedded R)
2- Rterm.exe (via IPC) vs. R.dll (embedded R)

What are the advantages and disadvantages in each case?

I would like to take advantage of the email to thank Tomas Kalibera for 
his efforts in solving the problems
of R 4.2.0 communication and the Tinn-R project. Once fixed the issues 
in R that surfaced
due to using GraphApp (cross-platform GUI Library in C for Windows) it 
was possible to fix the communication issues in Tinn-R
with Rterm.exe and Rgui.exe. Version 9.01.XX.XX with the corrections 
will be released soon. At the moment we are in
extensive testing phase.

Thanks in advance,
///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\
Jose Claudio Faria
UESC/DCET/Brasil
joseclaudio.faria at gmail.com
Telefones:
55(73)3680.5545 - UESC
55(73)99966.9100 - VIVO
///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\
If you have software to deal with statistics, you have arms,
if you have good software, you have arms and legs,
if you have software like R, you have arms, legs and wings...
the height of your flight depends only on you.

	[[alternative HTML version deleted]]


From m|ch@e|ch|r|co4 @end|ng |rom gm@||@com  Tue Jun  7 08:09:29 2022
From: m|ch@e|ch|r|co4 @end|ng |rom gm@||@com (Michael Chirico)
Date: Mon, 6 Jun 2022 23:09:29 -0700
Subject: [Rd] trace() an S3-classed function in .GlobalEnv
Message-ID: <CAPRVBcwOh0zst8mGTCfYXK6OXdGViGHUOiV5A8NhV4Lh6eo2gQ@mail.gmail.com>

Consider:

foo <- function() {
  invisible(1 + 1)
}
trace(foo, quote(message("traced")), print=FALSE)
foo()
# traced

But with a minimal change:

class(foo) <- "bar"
trace(foo, quote(message("traced")), print=FALSE)
# Constructing traceable class ?barWithTrace?
# Error in .classEnv(className) :
#   unable to find an environment containing class ?bar?

I don't see anything like this mentioned in ?trace (nor does a Google
search turn up more than a handful of references to this error),
and from trying to debug what trace() is doing, we arrive to the error line[1]:

.makeTraceClass(traceClass, class(original))  #
methods:::.makeTraceClass("barWithTrace", "bar")

I don't quite follow what's going on here, but it looks like trace()
is trying to determine an S4 class definition for "bar", but isS4(bar)
is FALSE.

I can (apparently -- not sure if there are as yet-unseen downstream
consequences) work around the issue by unsetting the class, tracing,
then re-setting:

class(foo) <- NULL
trace(foo, quote(message("traced")), print=FALSE)
class(foo) <- "bar"

But obviously this is a bit clunky. Is this a bug, or am I missing something?

Mike C

[1] https://github.com/r-devel/r-svn/blob/e2a64a4e14adbc4e9e8635eaa8cbd2835ce1d764/src/library/methods/R/trace.R#L240


From @eb@@t|@n@kr@ntz @end|ng |rom gr@du@te|n@t|tute@ch  Tue Jun  7 20:44:39 2022
From: @eb@@t|@n@kr@ntz @end|ng |rom gr@du@te|n@t|tute@ch (Sebastian Martin Krantz)
Date: Tue, 7 Jun 2022 20:44:39 +0200
Subject: [Rd] R CMD Check should allow packages with C and C++ and OpenMP
 without generating a NOTE
Message-ID: <CAOsNuxCte7DOu5kBjH44CxeJnR=bHr7DVAZZk=rQ9M_J5502qA@mail.gmail.com>

Dear Developers,

I have the following issue with my package collapse:
https://github.com/SebKrantz/collapse,
whose code base is 34.5% C code and 28.3% C++, and to which I now want to
add OpenMP multithreading and send it to CRAN. For this I have set up a
Makevars file with

PKG_CFLAGS = $(SHLIB_OPENMP_CFLAGS)
PKG_CXXFLAGS = $(SHLIB_OPENMP_CXXFLAGS)
PKG_LIBS = $(SHLIB_OPENMP_CXXFLAGS)

as linking is through C++ via Rcpp. The problem is that this generates a
NOTE on R CMD Check:

src/Makevars: SHLIB_OPENMP_CFLAGS is included in PKG_CFLAGS but not in
PKG_LIBS

If I alternatively put

PKG_LIBS = $(SHLIB_OPENMP_CXXFLAGS) $(SHLIB_OPENMP_CFLAGS)

I get another NOTE stating that this is not portable. Finally putting

PKG_LIBS = $(SHLIB_OPENMP_CFLAGS)

gives a note (or warning) that linking is through C++. CRAN maintainers
have not engaged constructively with me on the issue, but I do believe this
is an issue requiring constructive engagement i.e. I believe R CMD Check
should be adjusted to allow for such a configuration, and possibly some
instructions should be added to the Writing R Extensions Manual. I have
also asked Dirk Eddelbuettel (
https://github.com/SebKrantz/collapse/issues/258) who agrees that this is
an upstream issue. I am happy for any proactive comments or suggestions.

Best regards,

Sebastian Krantz

	[[alternative HTML version deleted]]


