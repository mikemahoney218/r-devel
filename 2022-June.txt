From jo@ec|@ud|o@|@r|@ @end|ng |rom gm@||@com  Sat Jun  4 05:43:39 2022
From: jo@ec|@ud|o@|@r|@ @end|ng |rom gm@||@com (jcfaria)
Date: Sat, 04 Jun 2022 03:43:39 +0000
Subject: [Rd] Writing Extensions for R under Windows: is it better for GUIs
 to communicate with R via Rgui.exe, Rterm.exe or R.dll?
Message-ID: <emcfa70b95-004c-45fb-8936-55133f137688@dell>

Writing Extensions for R under Windows: is it better for GUIs to 
communicate with R via Rgui.exe, Rterm.exe or R.dll?

In the construction of extensions (GUIs) for R, in the establishment of 
communication, according to the options below:

1- Rgui.exe (via Windows API) vs. R.dll (embedded R)
2- Rterm.exe (via IPC) vs. R.dll (embedded R)

What are the advantages and disadvantages in each case?

I would like to take advantage of the email to thank Tomas Kalibera for 
his efforts in solving the problems
of R 4.2.0 communication and the Tinn-R project. Once fixed the issues 
in R that surfaced
due to using GraphApp (cross-platform GUI Library in C for Windows) it 
was possible to fix the communication issues in Tinn-R
with Rterm.exe and Rgui.exe. Version 9.01.XX.XX with the corrections 
will be released soon. At the moment we are in
extensive testing phase.

Thanks in advance,
///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\
Jose Claudio Faria
UESC/DCET/Brasil
joseclaudio.faria at gmail.com
Telefones:
55(73)3680.5545 - UESC
55(73)99966.9100 - VIVO
///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\
If you have software to deal with statistics, you have arms,
if you have good software, you have arms and legs,
if you have software like R, you have arms, legs and wings...
the height of your flight depends only on you.

	[[alternative HTML version deleted]]


From m|ch@e|ch|r|co4 @end|ng |rom gm@||@com  Tue Jun  7 08:09:29 2022
From: m|ch@e|ch|r|co4 @end|ng |rom gm@||@com (Michael Chirico)
Date: Mon, 6 Jun 2022 23:09:29 -0700
Subject: [Rd] trace() an S3-classed function in .GlobalEnv
Message-ID: <CAPRVBcwOh0zst8mGTCfYXK6OXdGViGHUOiV5A8NhV4Lh6eo2gQ@mail.gmail.com>

Consider:

foo <- function() {
  invisible(1 + 1)
}
trace(foo, quote(message("traced")), print=FALSE)
foo()
# traced

But with a minimal change:

class(foo) <- "bar"
trace(foo, quote(message("traced")), print=FALSE)
# Constructing traceable class ?barWithTrace?
# Error in .classEnv(className) :
#   unable to find an environment containing class ?bar?

I don't see anything like this mentioned in ?trace (nor does a Google
search turn up more than a handful of references to this error),
and from trying to debug what trace() is doing, we arrive to the error line[1]:

.makeTraceClass(traceClass, class(original))  #
methods:::.makeTraceClass("barWithTrace", "bar")

I don't quite follow what's going on here, but it looks like trace()
is trying to determine an S4 class definition for "bar", but isS4(bar)
is FALSE.

I can (apparently -- not sure if there are as yet-unseen downstream
consequences) work around the issue by unsetting the class, tracing,
then re-setting:

class(foo) <- NULL
trace(foo, quote(message("traced")), print=FALSE)
class(foo) <- "bar"

But obviously this is a bit clunky. Is this a bug, or am I missing something?

Mike C

[1] https://github.com/r-devel/r-svn/blob/e2a64a4e14adbc4e9e8635eaa8cbd2835ce1d764/src/library/methods/R/trace.R#L240


From @eb@@t|@n@kr@ntz @end|ng |rom gr@du@te|n@t|tute@ch  Tue Jun  7 20:44:39 2022
From: @eb@@t|@n@kr@ntz @end|ng |rom gr@du@te|n@t|tute@ch (Sebastian Martin Krantz)
Date: Tue, 7 Jun 2022 20:44:39 +0200
Subject: [Rd] R CMD Check should allow packages with C and C++ and OpenMP
 without generating a NOTE
Message-ID: <CAOsNuxCte7DOu5kBjH44CxeJnR=bHr7DVAZZk=rQ9M_J5502qA@mail.gmail.com>

Dear Developers,

I have the following issue with my package collapse:
https://github.com/SebKrantz/collapse,
whose code base is 34.5% C code and 28.3% C++, and to which I now want to
add OpenMP multithreading and send it to CRAN. For this I have set up a
Makevars file with

PKG_CFLAGS = $(SHLIB_OPENMP_CFLAGS)
PKG_CXXFLAGS = $(SHLIB_OPENMP_CXXFLAGS)
PKG_LIBS = $(SHLIB_OPENMP_CXXFLAGS)

as linking is through C++ via Rcpp. The problem is that this generates a
NOTE on R CMD Check:

src/Makevars: SHLIB_OPENMP_CFLAGS is included in PKG_CFLAGS but not in
PKG_LIBS

If I alternatively put

PKG_LIBS = $(SHLIB_OPENMP_CXXFLAGS) $(SHLIB_OPENMP_CFLAGS)

I get another NOTE stating that this is not portable. Finally putting

PKG_LIBS = $(SHLIB_OPENMP_CFLAGS)

gives a note (or warning) that linking is through C++. CRAN maintainers
have not engaged constructively with me on the issue, but I do believe this
is an issue requiring constructive engagement i.e. I believe R CMD Check
should be adjusted to allow for such a configuration, and possibly some
instructions should be added to the Writing R Extensions Manual. I have
also asked Dirk Eddelbuettel (
https://github.com/SebKrantz/collapse/issues/258) who agrees that this is
an upstream issue. I am happy for any proactive comments or suggestions.

Best regards,

Sebastian Krantz

	[[alternative HTML version deleted]]


From m@ech|er @end|ng |rom @t@t@m@th@ethz@ch  Wed Jun  8 12:44:21 2022
From: m@ech|er @end|ng |rom @t@t@m@th@ethz@ch (Martin Maechler)
Date: Wed, 8 Jun 2022 12:44:21 +0200
Subject: [Rd] trace() an S3-classed function in .GlobalEnv
In-Reply-To: <CAPRVBcwOh0zst8mGTCfYXK6OXdGViGHUOiV5A8NhV4Lh6eo2gQ@mail.gmail.com>
References: <CAPRVBcwOh0zst8mGTCfYXK6OXdGViGHUOiV5A8NhV4Lh6eo2gQ@mail.gmail.com>
Message-ID: <25248.32133.650644.55624@stat.math.ethz.ch>

>>>>> Michael Chirico 
>>>>>     on Mon, 6 Jun 2022 23:09:29 -0700 writes:

    > Consider:

    > foo <- function() {
    > invisible(1 + 1)
    > }
    > trace(foo, quote(message("traced")), print=FALSE)
    > foo()
    > # traced

    > But with a minimal change:

    > class(foo) <- "bar"
    > trace(foo, quote(message("traced")), print=FALSE)
    > # Constructing traceable class ?barWithTrace?
    > # Error in .classEnv(className) :
    > #   unable to find an environment containing class ?bar?

    > I don't see anything like this mentioned in ?trace (nor does a Google
    > search turn up more than a handful of references to this error),
    > and from trying to debug what trace() is doing, we arrive to the error line[1]:

    > .makeTraceClass(traceClass, class(original))  #
    > methods:::.makeTraceClass("barWithTrace", "bar")

    > I don't quite follow what's going on here, but it looks like trace()
    > is trying to determine an S4 class definition for "bar", but isS4(bar)
    > is FALSE.

    > I can (apparently -- not sure if there are as yet-unseen downstream
    > consequences) work around the issue by unsetting the class, tracing,
    > then re-setting:

    > class(foo) <- NULL
    > trace(foo, quote(message("traced")), print=FALSE)
    > class(foo) <- "bar"

    > But obviously this is a bit clunky. Is this a bug, or am I missing something?

Just a short note of  semi-confirmation:

At the time S4 generics and methods were introduced into R,
trace() was made much more flexible, notably to be able to trace
S4 methods.

It can well be that it originally also worked for functions with
an explicit S3 class, but as such functions are very rare, it
could well be you've found a bug, namely that trace() assumes
that if a function has a non-trivial class, it must be an S4
one.

... and I know you know how to report bugs ;-)

Thank you in advance!
Martin

    > Mike C

    > [1] https://github.com/r-devel/r-svn/blob/e2a64a4e14adbc4e9e8635eaa8cbd2835ce1d764/src/library/methods/R/trace.R#L240

    > ______________________________________________
    > R-devel at r-project.org mailing list
    > https://stat.ethz.ch/mailman/listinfo/r-devel


From @eb@@t|@n@kr@ntz @end|ng |rom gr@du@te|n@t|tute@ch  Wed Jun  8 14:00:15 2022
From: @eb@@t|@n@kr@ntz @end|ng |rom gr@du@te|n@t|tute@ch (Sebastian Martin Krantz)
Date: Wed, 8 Jun 2022 14:00:15 +0200
Subject: [Rd] 
 R CMD Check should allow packages with C and C++ and OpenMP
 without generating a NOTE
In-Reply-To: <CAOsNuxCte7DOu5kBjH44CxeJnR=bHr7DVAZZk=rQ9M_J5502qA@mail.gmail.com>
References: <CAOsNuxCte7DOu5kBjH44CxeJnR=bHr7DVAZZk=rQ9M_J5502qA@mail.gmail.com>
Message-ID: <CAOsNuxDjhYQQ4127NicL+2vR3mj66rvwcKVm7-r9FsKzRB8jwA@mail.gmail.com>

For the record: it seems a simple text-substitution approach in the
Makevars file solves the issue, e.g. to have a package combining C, C++ and
OpenMP, your Makevars file could look like this:

PKG_CFLAGS = $($(subst OPENMP,OPENMP_CFLAGS,SHLIB_OPENMP))
PKG_CXXFLAGS = $(SHLIB_OPENMP_CXXFLAGS)
PKG_LIBS = $(SHLIB_OPENMP_CXXFLAGS)

where $($(subst OPENMP,OPENMP_CFLAGS,SHLIB_OPENMP)) substitutes
OPENMP_CFLAGS for OPENMP, thus reconstructing SHLIB_OPENMP_CFLAGS and
avoiding errors from static code analysis on R CMD Check.

Needless to say this is not very elegant and it would be great if R CMD
Check could be adjusted.

Best regards,

Sebastian

On Tue, 7 Jun 2022 at 20:44, Sebastian Martin Krantz <
sebastian.krantz at graduateinstitute.ch> wrote:

> Dear Developers,
>
> I have the following issue with my package collapse:
> https://github.com/SebKrantz/collapse,
> whose code base is 34.5% C code and 28.3% C++, and to which I now want to
> add OpenMP multithreading and send it to CRAN. For this I have set up a
> Makevars file with
>
> PKG_CFLAGS = $(SHLIB_OPENMP_CFLAGS)
> PKG_CXXFLAGS = $(SHLIB_OPENMP_CXXFLAGS)
> PKG_LIBS = $(SHLIB_OPENMP_CXXFLAGS)
>
> as linking is through C++ via Rcpp. The problem is that this generates a
> NOTE on R CMD Check:
>
> src/Makevars: SHLIB_OPENMP_CFLAGS is included in PKG_CFLAGS but not in
> PKG_LIBS
>
> If I alternatively put
>
> PKG_LIBS = $(SHLIB_OPENMP_CXXFLAGS) $(SHLIB_OPENMP_CFLAGS)
>
> I get another NOTE stating that this is not portable. Finally putting
>
> PKG_LIBS = $(SHLIB_OPENMP_CFLAGS)
>
> gives a note (or warning) that linking is through C++. CRAN maintainers
> have not engaged constructively with me on the issue, but I do believe this
> is an issue requiring constructive engagement i.e. I believe R CMD Check
> should be adjusted to allow for such a configuration, and possibly some
> instructions should be added to the Writing R Extensions Manual. I have
> also asked Dirk Eddelbuettel (
> https://github.com/SebKrantz/collapse/issues/258) who agrees that this is
> an upstream issue. I am happy for any proactive comments or suggestions.
>
> Best regards,
>
> Sebastian Krantz
>
>
>
>
>

	[[alternative HTML version deleted]]


From @cott @end|ng |rom p@tchmypc@com  Wed Jun  8 14:36:10 2022
From: @cott @end|ng |rom p@tchmypc@com (Scott McAllister)
Date: Wed, 8 Jun 2022 12:36:10 +0000
Subject: [Rd] Unsigned binary
Message-ID: <MW4PR12MB5665254214EE4D218F76D6A0A3A49@MW4PR12MB5665.namprd12.prod.outlook.com>

Good afternoon

Are you aware that the current release of R for Windows (4.2.0) is unsigned? Do you have any plans to rectify this ?

Thanks,

Scott McAllister - Support Engineer
Rate Your Experience: Great<https://patchmypc.com/customer-feedback-scott> | Good<https://patchmypc.com/customer-feedback-scott> | Poor<https://patchmypc.com/customer-feedback-scott>
Support Session: 30 Minutes<https://patchmypc.com/scott-30-minute-session> | 60 Minutes<https://patchmypc.com/scott-60-minute-session>
Learn More: Live Demo<https://patchmypc.com/schedule-live-demo> | Setup Call<https://patchmypc.com/schedule-setup-call> | Review Call<https://patchmypc.com/environment-review-call> | Trial<https://patchmypc.com/free-trial> | Quote<https://patchmypc.com/request-quote>
Follow Us: Twitter<https://patchmypc.com/twitter> | LinkedIn<https://patchmypc.com/linkedin>
Sales and Support: + 1-866-343-3083
[Sent from Front]

	[[alternative HTML version deleted]]


From kry|ov@r00t @end|ng |rom gm@||@com  Wed Jun  8 16:57:54 2022
From: kry|ov@r00t @end|ng |rom gm@||@com (Ivan Krylov)
Date: Wed, 8 Jun 2022 17:57:54 +0300
Subject: [Rd] 
 Writing Extensions for R under Windows: is it better for GUIs
 to communicate with R via Rgui.exe, Rterm.exe or R.dll?
In-Reply-To: <emcfa70b95-004c-45fb-8936-55133f137688@dell>
References: <emcfa70b95-004c-45fb-8936-55133f137688@dell>
Message-ID: <20220608175754.5dbd228a@arachnoid>

On Sat, 04 Jun 2022 03:43:39 +0000
jcfaria <joseclaudio.faria at gmail.com> wrote:

> Writing Extensions for R under Windows: is it better for GUIs to 
> communicate with R via Rgui.exe, Rterm.exe or R.dll?

Well, WRE section 8 is all about linking the GUI to R as a DLL. It does
mention the alternative approaches like Rserve or DCOM, but such
interfaces are limited to some extents.

> In the construction of extensions (GUIs) for R, in the establishment
> of communication, according to the options below:
> 
> 1- Rgui.exe (via Windows API) vs. R.dll (embedded R)

Setting aside the fact that Windows API is not cross platform (which
may be not the point if you're writing a Windows-only GUI), the
messages that the application accepts and interprets are not a part of
a documented interface, so while they tend to be stable (because
Windows is mostly stable in handing the same kinds of messages to the
applications running there), they may be broken (like in R 4.2.0).

Linking to R.dll has a higher initial cost of setting up (you have to
write those callbacks, you have to set up R_HOME...), but the interface
won't be broken without a good reason and a migration plan.

> 2- Rterm.exe (via IPC) vs. R.dll (embedded R)

The console interface might be better understood and more stable than
passing messages to windows. If you're writing some kind of universal
interface suitable for different applications, all of which run a
Run-Eval-Print Loop in the command line, this may be a better approach
to take instead of linking to them individually. Although not without
problems [*], this is probably more stable than talking to Rgui.exe by
means of SendInput().

> What are the advantages and disadvantages in each case?

The advantages of linking to R.dll include being able to set up all
kinds of callbacks (EditFile, Busy, dataentry/dataviewer/selectlist) to
make their behaviour fit the theme of your application. The
disadvantages include a higher initial cost of setting it up and maybe
having to recompile it for different versions of R.

-- 
Best regards,
Ivan

[*] Check out ConEmu <https://conemu.github.io/> source code for
workarounds they probably amassed for all kinds of applications that
would otherwise prefer to be running in the standard console window.


From m|ch@e|ch|r|co4 @end|ng |rom gm@||@com  Wed Jun  8 19:12:25 2022
From: m|ch@e|ch|r|co4 @end|ng |rom gm@||@com (Michael Chirico)
Date: Wed, 8 Jun 2022 10:12:25 -0700
Subject: [Rd] trace() an S3-classed function in .GlobalEnv
In-Reply-To: <25248.32133.650644.55624@stat.math.ethz.ch>
References: <CAPRVBcwOh0zst8mGTCfYXK6OXdGViGHUOiV5A8NhV4Lh6eo2gQ@mail.gmail.com>
 <25248.32133.650644.55624@stat.math.ethz.ch>
Message-ID: <CAPRVBczpqRsvqcUaFMdC333_iYo4w7+M+i6hVGU59ZZ0Vn0+kQ@mail.gmail.com>

Thanks, that seems like a reasonable assessment.

Also worth noting that tracing wipes out a function's attributes,
which is also not documented:

foo = function(x) {
  invisible(1 + 1)
}
attr(foo, "bar") <- 2

trace(foo, quote(message('traced')))
names(attributes(foo))
# [1] "original" "source"   "class"

PS one day I hope to master the dark art of choosing r-devel or
bugzilla for issues :)

On Wed, Jun 8, 2022 at 3:44 AM Martin Maechler
<maechler at stat.math.ethz.ch> wrote:
>
> >>>>> Michael Chirico
> >>>>>     on Mon, 6 Jun 2022 23:09:29 -0700 writes:
>
>     > Consider:
>
>     > foo <- function() {
>     > invisible(1 + 1)
>     > }
>     > trace(foo, quote(message("traced")), print=FALSE)
>     > foo()
>     > # traced
>
>     > But with a minimal change:
>
>     > class(foo) <- "bar"
>     > trace(foo, quote(message("traced")), print=FALSE)
>     > # Constructing traceable class ?barWithTrace?
>     > # Error in .classEnv(className) :
>     > #   unable to find an environment containing class ?bar?
>
>     > I don't see anything like this mentioned in ?trace (nor does a Google
>     > search turn up more than a handful of references to this error),
>     > and from trying to debug what trace() is doing, we arrive to the error line[1]:
>
>     > .makeTraceClass(traceClass, class(original))  #
>     > methods:::.makeTraceClass("barWithTrace", "bar")
>
>     > I don't quite follow what's going on here, but it looks like trace()
>     > is trying to determine an S4 class definition for "bar", but isS4(bar)
>     > is FALSE.
>
>     > I can (apparently -- not sure if there are as yet-unseen downstream
>     > consequences) work around the issue by unsetting the class, tracing,
>     > then re-setting:
>
>     > class(foo) <- NULL
>     > trace(foo, quote(message("traced")), print=FALSE)
>     > class(foo) <- "bar"
>
>     > But obviously this is a bit clunky. Is this a bug, or am I missing something?
>
> Just a short note of  semi-confirmation:
>
> At the time S4 generics and methods were introduced into R,
> trace() was made much more flexible, notably to be able to trace
> S4 methods.
>
> It can well be that it originally also worked for functions with
> an explicit S3 class, but as such functions are very rare, it
> could well be you've found a bug, namely that trace() assumes
> that if a function has a non-trivial class, it must be an S4
> one.
>
> ... and I know you know how to report bugs ;-)
>
> Thank you in advance!
> Martin
>
>     > Mike C
>
>     > [1] https://github.com/r-devel/r-svn/blob/e2a64a4e14adbc4e9e8635eaa8cbd2835ce1d764/src/library/methods/R/trace.R#L240
>
>     > ______________________________________________
>     > R-devel at r-project.org mailing list
>     > https://stat.ethz.ch/mailman/listinfo/r-devel


From wo||g@ng@v|echtb@uer @end|ng |rom m@@@tr|chtun|ver@|ty@n|  Thu Jun  9 13:03:10 2022
From: wo||g@ng@v|echtb@uer @end|ng |rom m@@@tr|chtun|ver@|ty@n| (Viechtbauer, Wolfgang (NP))
Date: Thu, 9 Jun 2022 11:03:10 +0000
Subject: [Rd] Behavior of ylim in boxplot() when horizontal=TRUE
Message-ID: <6677093c725645a68ee92cdf054fdf87@UM-MAIL3214.unimaas.nl>

Hi all,

I just noticed something when using boxplot(). Say we have this boxplot:

boxplot(mpg ~ cyl, data=mtcars, xlab="Cylinders", ylab="Miles per Galon", ylim=c(10,40), log="y")

ylab, ylim, and log="y" are all consistently adjusting things on the y-axis (the numeric 'outcome' variable).

Now let's use horizontal=TRUE:

boxplot(mpg ~ cyl, data=mtcars, las=1, xlab="Miles per Galon", ylab="Cylinders", horizontal=TRUE, ylim=c(10,40), log="x")

Now xlab and log="x" are used to adjust things on the x-axis, but ylim still needs to be used to adjust the range of the numeric 'outcome' variable. Not a big deal, but this seems a bit inconsistent.

Best,
Wolfgang


From pd@|gd @end|ng |rom gm@||@com  Fri Jun 10 14:01:41 2022
From: pd@|gd @end|ng |rom gm@||@com (peter dalgaard)
Date: Fri, 10 Jun 2022 14:01:41 +0200
Subject: [Rd] R 4.2.1 scheduled for June 23
Message-ID: <492506A5-D562-4E87-BA6C-A25CB185AD57@gmail.com>

Full schedule available on developer.r-project.org in a short while.

-- 
Peter Dalgaard, Professor,
Center for Statistics, Copenhagen Business School
Solbjerg Plads 3, 2000 Frederiksberg, Denmark
Phone: (+45)38153501
Office: A 4.23
Email: pd.mes at cbs.dk  Priv: PDalgd at gmail.com


From @tephen@berm@n @end|ng |rom gmx@net  Tue Jun 14 11:18:06 2022
From: @tephen@berm@n @end|ng |rom gmx@net (Stephen Berman)
Date: Tue, 14 Jun 2022 11:18:06 +0200
Subject: [Rd] qt() returns Inf with certain negative ncp values
Message-ID: <871qvrmwmp.fsf@gmx.net>

I asked about the following observations on r-help and it was suggested
that they may indicate an algorithmic problem with qt(), so I thought I
should report them here.


The Inf results below seem surprising:

> sapply(-1:-10, \(ncp) qt(1-1*(10^(-4+ncp)), 35, ncp))
 [1]  3.6527153  3.0627759  2.4158355  1.7380812  1.0506904  0.3700821
 [7]        Inf -0.9279783 -1.5341759 -2.1085213

> sapply(seq(-6.9, -7.9, -0.1), \(ncp) qt(1-1*(10^(-4+ncp)), 35, ncp))
 [1] -0.2268386        Inf        Inf        Inf -0.4857400 -0.5497784
 [7] -0.6135402 -0.6770143 -0.7401974 -0.8030853 -0.8656810

These inputs also yield many repetitions of the following warning
message:

In qt(1 - 1 * (10^(-4 + ncp)), 35, ncp) :
  full precision may not have been achieved in 'pnt{final}'

In particular, in the range -1:-10 I don't get this warning with ncp =
-1 through -4, but I do get it once with each of -5 and -8 through -10,
32 times with -6, and 50 times with -7.  In the range -6.9:-7.9 I get
the warning twice with each of -6.9 and -7.3 through -7.7, once with
-7.8 and -7.9, and 50 times with each of -7.0 through -7.2.


In case it matters:

> sessionInfo()
R Under development (unstable) (2022-06-05 r82452)
Platform: x86_64-pc-linux-gnu (64-bit)
Running under: Linux From Scratch r11.0-165

Matrix products: default
BLAS:   /usr/lib/R/lib/libRblas.so
LAPACK: /usr/lib/R/lib/libRlapack.so

locale:
 [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C
 [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8
 [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8
 [7] LC_PAPER=en_US.UTF-8       LC_NAME=C
 [9] LC_ADDRESS=C               LC_TELEPHONE=C
[11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C

attached base packages:
[1] stats     graphics  grDevices utils     datasets  methods   base

loaded via a namespace (and not attached):
[1] compiler_4.3.0 tools_4.3.0


Thanks.
Steve Berman


From Andre@G||||bert @end|ng |rom chu-rouen@|r  Tue Jun 14 15:39:41 2022
From: Andre@G||||bert @end|ng |rom chu-rouen@|r (GILLIBERT, Andre)
Date: Tue, 14 Jun 2022 13:39:41 +0000
Subject: [Rd] qt() returns Inf with certain negative ncp values
In-Reply-To: <871qvrmwmp.fsf@gmx.net>
References: <871qvrmwmp.fsf@gmx.net>
Message-ID: <018a37d6d5864b1a88b11b811c876581@chu-rouen.fr>

Hello, 

> I asked about the following observations on r-help and it was suggested that they may indicate an algorithmic problem with qt(), so I thought I should report them here.

I explored numerical accuracy issues of pt and qt with non-central parameters.
There seems to be problems when probabilities are small (less than 10^-12 or 10^-14).

A few examples:
pnorm(-30)# equal to 4.9e-198, which looks fine
pt(-30, df=10000, ncp=0)# equal to 1e-189, which looks fine too
pt(-30, df=10000, ncp=0.01) # equal to 1.044e-14, which looks bad. It should be closer to zero than the previous one
pt(-300, df=10000, ncp=0.01) # equal to 1.044e-14, while it should be even closer to zero !
pt(-3000, df=10000, ncp=0.01) # still equal to 1.044e-14, while it should be even closer to zero !

qnorm(1e-13) # equal to -7.349, which looks fine
qt(1e-13, df=10000, ncp=0) # equal to -7.359, which looks fine
qt(1e-13, df=10000, ncp=0.01) # equal to -7.364, which looks fine
qt(1.044e-14, df=10000, ncp=0.01) # equal to -8.28, which looks fine
qt(1.043e-14, df=10000, ncp=0.01) # equal to -Inf, which is far too negative...

The source code shows that the non-central qt() works by inverting the non-central pt()
https://github.com/wch/r-source/blob/trunk/src/nmath/qnt.c
Consequently, both problems are related.



-----Message d'origine-----
De?: R-devel <r-devel-bounces at r-project.org> De la part de Stephen Berman
Envoy??: mardi 14 juin 2022 11:18
??: r-devel at r-project.org
Objet?: [Rd] qt() returns Inf with certain negative ncp values


I asked about the following observations on r-help and it was suggested that they may indicate an algorithmic problem with qt(), so I thought I should report them here.


The Inf results below seem surprising:

> sapply(-1:-10, \(ncp) qt(1-1*(10^(-4+ncp)), 35, ncp))
 [1]  3.6527153  3.0627759  2.4158355  1.7380812  1.0506904  0.3700821
 [7]        Inf -0.9279783 -1.5341759 -2.1085213

> sapply(seq(-6.9, -7.9, -0.1), \(ncp) qt(1-1*(10^(-4+ncp)), 35, ncp))
 [1] -0.2268386        Inf        Inf        Inf -0.4857400 -0.5497784
 [7] -0.6135402 -0.6770143 -0.7401974 -0.8030853 -0.8656810

These inputs also yield many repetitions of the following warning
message:

In qt(1 - 1 * (10^(-4 + ncp)), 35, ncp) :
  full precision may not have been achieved in 'pnt{final}'

In particular, in the range -1:-10 I don't get this warning with ncp =
-1 through -4, but I do get it once with each of -5 and -8 through -10,
32 times with -6, and 50 times with -7.  In the range -6.9:-7.9 I get the warning twice with each of -6.9 and -7.3 through -7.7, once with
-7.8 and -7.9, and 50 times with each of -7.0 through -7.2.


In case it matters:

> sessionInfo()
R Under development (unstable) (2022-06-05 r82452)
Platform: x86_64-pc-linux-gnu (64-bit)
Running under: Linux From Scratch r11.0-165

Matrix products: default
BLAS:   /usr/lib/R/lib/libRblas.so
LAPACK: /usr/lib/R/lib/libRlapack.so

locale:
 [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C
 [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8
 [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8
 [7] LC_PAPER=en_US.UTF-8       LC_NAME=C
 [9] LC_ADDRESS=C               LC_TELEPHONE=C
[11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C

attached base packages:
[1] stats     graphics  grDevices utils     datasets  methods   base

loaded via a namespace (and not attached):
[1] compiler_4.3.0 tools_4.3.0


Thanks.
Steve Berman

______________________________________________
R-devel at r-project.org mailing list
https://stat.ethz.ch/mailman/listinfo/r-devel


From m@ech|er @end|ng |rom @t@t@m@th@ethz@ch  Tue Jun 14 18:00:24 2022
From: m@ech|er @end|ng |rom @t@t@m@th@ethz@ch (Martin Maechler)
Date: Tue, 14 Jun 2022 18:00:24 +0200
Subject: [Rd] qt() returns Inf with certain negative ncp values
In-Reply-To: <018a37d6d5864b1a88b11b811c876581@chu-rouen.fr>
References: <871qvrmwmp.fsf@gmx.net>
 <018a37d6d5864b1a88b11b811c876581@chu-rouen.fr>
Message-ID: <25256.45208.821335.812617@stat.math.ethz.ch>

>>>>> GILLIBERT, Andre 
>>>>>     on Tue, 14 Jun 2022 13:39:41 +0000 writes:

    > Hello,
    >> I asked about the following observations on r-help and it
    >> was suggested that they may indicate an algorithmic
    >> problem with qt(), so I thought I should report them
    >> here.

Which is fine.
Usually you should *CAREFULLY* read the corresponding reference
documentation before posting.

In this case, we have on R's help page {on non-central pt():}

    This computes the lower tail only, so the upper tail suffers
    from cancellation and a warning will be given when this is
    likely to be significant. 

and (in ?Note:?)

    The code for non-zero ncp is principally intended to be used
    for moderate values of ncp: it will not be highly accurate,
    especially in the tails, for large values. 

and further also that a simple inversion is used for computing
the non-central qt().

    > I explored numerical accuracy issues of pt and qt with
    > non-central parameters.  There seems to be problems when
    > probabilities are small (less than 10^-12 or 10^-14).

Yes, the help (above) says  "especially in the tails",
i.e., this is also well known.

    > A few examples: pnorm(-30)# equal to 4.9e-198, which looks
    > fine pt(-30, df=10000, ncp=0)# equal to 1e-189, which
    > looks fine too pt(-30, df=10000, ncp=0.01) # equal to
    > 1.044e-14, which looks bad. It should be closer to zero
    > than the previous one pt(-300, df=10000, ncp=0.01) # equal
    > to 1.044e-14, while it should be even closer to zero !
    > pt(-3000, df=10000, ncp=0.01) # still equal to 1.044e-14,
    > while it should be even closer to zero !

    > qnorm(1e-13) # equal to -7.349, which looks fine qt(1e-13,
    > df=10000, ncp=0) # equal to -7.359, which looks fine
    > qt(1e-13, df=10000, ncp=0.01) # equal to -7.364, which
    > looks fine qt(1.044e-14, df=10000, ncp=0.01) # equal to
    > -8.28, which looks fine qt(1.043e-14, df=10000, ncp=0.01)
    > # equal to -Inf, which is far too negative...

    > The source code shows that the non-central qt() works by
    > inverting the non-central pt()
    > https://github.com/wch/r-source/blob/trunk/src/nmath/qnt.c

exactly; as the help page also says ..

    > Consequently, both problems are related.

Indeed, and known and documented for a long time..

Still, this lack of a better algorithm had bothered me (as R
Core member) in the past quite a bit, and I had implemented other
approximations for cases where the current algorithm is
deficient... but I had not been entirely satisfied, nor had I
finished exploring or finding solutions in all relevant cases.

In the mean time I had created CRAN package 'DPQ' (Density,
Probability, Quantile computations) which also contains
quite a few functions related to better/alternative computations
of pt(*, ncp=*)  which I call pnt(), not the least because R's
implementation of the algorithm is in   <Rsrc>/src/nmath/pnt.c
and the C function is called pnt().

Till now, I have not found a student or a collaborator to
finally get this project further  {{hint, hint!}}.

In DPQ, (download the *source* package if you are interested),
there's a help page listing the current approaches I have

  https://search.r-project.org/CRAN/refmans/DPQ/html/pnt.html
or
  https://rdrr.io/cran/DPQ/man/pnt.html

Additionally, in the source (man/pnt.Rd) there are comments about a not yet
implemented one, and there are even two R scripts exhibiting
bogous (and already fixed) behavior of the non-central t CDF:

 https://rdrr.io/rforge/DPQ/src/tests/t-nonc-tst.R   and
 https://rdrr.io/rforge/DPQ/src/tests/pnt-prec.R

Indeed, this situation *can* be improved, but it needs dedicated work
of people somewhat knowledgable in applied math etc.

Would you (readers ..) be interested in helping?

Best,
Martin

Martin Maechler
ETH Zurich  and  R Core team


PS: I'm adding code to explore this specific issue (better
    inversion for those cases where pnt() is not the problem)
    to my DPQ package  just these hours, notably a simple function
    qtU() which only uses pt() and uniroot() to compute
    (non-central) t-quantiles.


From @tephen@berm@n @end|ng |rom gmx@net  Wed Jun 15 00:55:49 2022
From: @tephen@berm@n @end|ng |rom gmx@net (Stephen Berman)
Date: Wed, 15 Jun 2022 00:55:49 +0200
Subject: [Rd] qt() returns Inf with certain negative ncp values
In-Reply-To: <25256.45208.821335.812617@stat.math.ethz.ch> (Martin Maechler's
 message of "Tue, 14 Jun 2022 18:00:24 +0200")
References: <871qvrmwmp.fsf@gmx.net>
 <018a37d6d5864b1a88b11b811c876581@chu-rouen.fr>
 <25256.45208.821335.812617@stat.math.ethz.ch>
Message-ID: <87v8t2luru.fsf@gmx.net>

On Tue, 14 Jun 2022 18:00:24 +0200 Martin Maechler <maechler at stat.math.ethz.ch> wrote:

>>>>>> GILLIBERT, Andre
>>>>>>     on Tue, 14 Jun 2022 13:39:41 +0000 writes:
>
>     > Hello,
>     >> I asked about the following observations on r-help and it
>     >> was suggested that they may indicate an algorithmic
>     >> problem with qt(), so I thought I should report them
>     >> here.
>
> Which is fine.
> Usually you should *CAREFULLY* read the corresponding reference
> documentation before posting.

I actually have read the documentation before, though admittedly I
didn't reread it carefully before posting, but I vaguely remembered the
reservations about the tail accuracy of large values.  The main reason I
posted was my surprise at getting seemingly good values, then suddenly
Inf, then again seemingly good values.  I actually ran into this issue
when I was graphing various effect sizes with t-distributions and with a
large effect suddenly got an error and no graph, but then with an even
larger effect got a graph again.

[...]
> Still, this lack of a better algorithm had bothered me (as R
> Core member) in the past quite a bit, and I had implemented other
> approximations for cases where the current algorithm is
> deficient... but I had not been entirely satisfied, nor had I
> finished exploring or finding solutions in all relevant cases.
>
> In the mean time I had created CRAN package 'DPQ' (Density,
> Probability, Quantile computations) which also contains
> quite a few functions related to better/alternative computations
> of pt(*, ncp=*)  which I call pnt(), not the least because R's
> implementation of the algorithm is in   <Rsrc>/src/nmath/pnt.c
> and the C function is called pnt().
>
> Till now, I have not found a student or a collaborator to
> finally get this project further  {{hint, hint!}}.
>
> In DPQ, (download the *source* package if you are interested),
> there's a help page listing the current approaches I have
>
>   https://search.r-project.org/CRAN/refmans/DPQ/html/pnt.html
> or
>   https://rdrr.io/cran/DPQ/man/pnt.html
>
> Additionally, in the source (man/pnt.Rd) there are comments about a not yet
> implemented one, and there are even two R scripts exhibiting
> bogous (and already fixed) behavior of the non-central t CDF:
>
>  https://rdrr.io/rforge/DPQ/src/tests/t-nonc-tst.R   and
>  https://rdrr.io/rforge/DPQ/src/tests/pnt-prec.R
>
> Indeed, this situation *can* be improved, but it needs dedicated work
> of people somewhat knowledgable in applied math etc.
>
> Would you (readers ..) be interested in helping?

I'm afraid I don't have enough knowledge or time to be useful for such a
project.  But what you describe sounds interesting and I'll try to find
time to look at it.

Thanks for your reply, I really appreciate it.

Steve Berman


From m@rtyn@p|ummer @end|ng |rom gm@||@com  Thu Jun 16 20:09:19 2022
From: m@rtyn@p|ummer @end|ng |rom gm@||@com (Martyn Plummer)
Date: Thu, 16 Jun 2022 19:09:19 +0100
Subject: [Rd] Unsigned binary
In-Reply-To: <MW4PR12MB5665254214EE4D218F76D6A0A3A49@MW4PR12MB5665.namprd12.prod.outlook.com>
References: <MW4PR12MB5665254214EE4D218F76D6A0A3A49@MW4PR12MB5665.namprd12.prod.outlook.com>
Message-ID: <CA+aisX0PDnmsL0BgVTLzOtD07UNWYZDdo+_MEcjhZih4XDnVKQ@mail.gmail.com>

On Wed, 8 Jun 2022 at 13:52, Scott McAllister <scott at patchmypc.com> wrote:

> Good afternoon
>
> Are you aware that the current release of R for Windows (4.2.0) is
> unsigned? Do you have any plans to rectify this ?
>
>
Yes and yes. Ideally the installer should be signed by The R Foundation. We
are working on this but the process of validating the R Foundation for a
code signing certificate is quite bureaucratic.
In the meantime release 4.2.1 will be signed by me (Co-President of the R
Foundation) using a personal certificate issued by Sectigo.

Martyn


> Thanks,
>
> Scott McAllister - Support Engineer
> Rate Your Experience: Great<https://patchmypc.com/customer-feedback-scott>
> | Good<https://patchmypc.com/customer-feedback-scott> | Poor<
> https://patchmypc.com/customer-feedback-scott>
> Support Session: 30 Minutes<https://patchmypc.com/scott-30-minute-session>
> | 60 Minutes<https://patchmypc.com/scott-60-minute-session>
> Learn More: Live Demo<https://patchmypc.com/schedule-live-demo> | Setup
> Call<https://patchmypc.com/schedule-setup-call> | Review Call<
> https://patchmypc.com/environment-review-call> | Trial<
> https://patchmypc.com/free-trial> | Quote<
> https://patchmypc.com/request-quote>
> Follow Us: Twitter<https://patchmypc.com/twitter> | LinkedIn<
> https://patchmypc.com/linkedin>
> Sales and Support: + 1-866-343-3083
> [Sent from Front]
>
>         [[alternative HTML version deleted]]
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>

	[[alternative HTML version deleted]]


From @cott @end|ng |rom p@tchmypc@com  Fri Jun 17 13:41:35 2022
From: @cott @end|ng |rom p@tchmypc@com (Scott McAllister)
Date: Fri, 17 Jun 2022 11:41:35 +0000
Subject: [Rd] Unsigned binary
In-Reply-To: <CA+aisX0PDnmsL0BgVTLzOtD07UNWYZDdo+_MEcjhZih4XDnVKQ@mail.gmail.com>
References: <MW4PR12MB5665254214EE4D218F76D6A0A3A49@MW4PR12MB5665.namprd12.prod.outlook.com>
 <CA+aisX0PDnmsL0BgVTLzOtD07UNWYZDdo+_MEcjhZih4XDnVKQ@mail.gmail.com>
Message-ID: <MW4PR12MB5665E473B8068A346A668172A3AF9@MW4PR12MB5665.namprd12.prod.outlook.com>

Thank you for your update on this

If you can keep me updated on when version 4.2.1 is rereleased with the interim code signing certificate, that would be fantastic

Thanks,

Scott McAllister - Support Engineer
Rate Your Experience: Great<https://patchmypc.com/customer-feedback-scott> | Good<https://patchmypc.com/customer-feedback-scott> | Poor<https://patchmypc.com/customer-feedback-scott>
Support Session: 30 Minutes<https://patchmypc.com/scott-30-minute-session> | 60 Minutes<https://patchmypc.com/scott-60-minute-session>
Learn More: Live Demo<https://patchmypc.com/schedule-live-demo> | Setup Call<https://patchmypc.com/schedule-setup-call> | Review Call<https://patchmypc.com/environment-review-call> | Trial<https://patchmypc.com/free-trial> | Quote<https://patchmypc.com/request-quote>
Follow Us: Twitter<https://patchmypc.com/twitter> | LinkedIn<https://patchmypc.com/linkedin>
Sales and Support: + 1-866-343-3083
[Sent from Front]
On June 16, 2022, 7:09 PM GMT+1 martyn.plummer at gmail.com<mailto:martyn.plummer at gmail.com> wrote:



On Wed, 8 Jun 2022 at 13:52, Scott McAllister <scott at patchmypc.com<mailto:scott at patchmypc.com>> wrote:
Good afternoon

Are you aware that the current release of R for Windows (4.2.0) is unsigned? Do you have any plans to rectify this ?


Yes and yes. Ideally the installer should be signed by The R Foundation. We are working on this but the process of validating the R Foundation for a code signing certificate is quite bureaucratic.
In the meantime release 4.2.1 will be signed by me (Co-President of the R Foundation) using a personal certificate issued by Sectigo.

Martyn

Thanks,

Scott McAllister - Support Engineer
Rate Your Experience: Great<https://patchmypc.com/customer-feedback-scott<https://nam11.safelinks.protection.outlook.com/?url=https%3A%2F%2Fpatchmypc.com%2Fcustomer-feedback-scott&data=05%7C01%7Cscott%40patchmypc.com%7C605c017192cb43f3df1208da4fc35c53%7Cb79783df131e4d0083036f66c0fa4bfb%7C0%7C0%7C637909997738076394%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C3000%7C%7C%7C&sdata=n6Hj7adkzgTFt1Esxno1l9A%2F6t4SUo9N7NqEMDWJhg4%3D&reserved=0>> | Good<https://patchmypc.com/customer-feedback-scott<https://nam11.safelinks.protection.outlook.com/?url=https%3A%2F%2Fpatchmypc.com%2Fcustomer-feedback-scott&data=05%7C01%7Cscott%40patchmypc.com%7C605c017192cb43f3df1208da4fc35c53%7Cb79783df131e4d0083036f66c0fa4bfb%7C0%7C0%7C637909997738076394%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C3000%7C%7C%7C&sdata=n6Hj7adkzgTFt1Esxno1l9A%2F6t4SUo9N7NqEMDWJhg4%3D&reserved=0>> | Poor<https://patchmypc.com/customer-feedback-scott<https://nam11.safelinks.protection.outlook.com/?url=https%3A%2F%2Fpatchmypc.com%2Fcustomer-feedback-scott&data=05%7C01%7Cscott%40patchmypc.com%7C605c017192cb43f3df1208da4fc35c53%7Cb79783df131e4d0083036f66c0fa4bfb%7C0%7C0%7C637909997738076394%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C3000%7C%7C%7C&sdata=n6Hj7adkzgTFt1Esxno1l9A%2F6t4SUo9N7NqEMDWJhg4%3D&reserved=0>>
Support Session: 30 Minutes<https://patchmypc.com/scott-30-minute-session<https://nam11.safelinks.protection.outlook.com/?url=https%3A%2F%2Fpatchmypc.com%2Fscott-30-minute-session&data=05%7C01%7Cscott%40patchmypc.com%7C605c017192cb43f3df1208da4fc35c53%7Cb79783df131e4d0083036f66c0fa4bfb%7C0%7C0%7C637909997738076394%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C3000%7C%7C%7C&sdata=7YhxNKzq80ny5vuWuca%2FoK7UY98aoiiCzcjaHAxKYVE%3D&reserved=0>> | 60 Minutes<https://patchmypc.com/scott-60-minute-session<https://nam11.safelinks.protection.outlook.com/?url=https%3A%2F%2Fpatchmypc.com%2Fscott-60-minute-session&data=05%7C01%7Cscott%40patchmypc.com%7C605c017192cb43f3df1208da4fc35c53%7Cb79783df131e4d0083036f66c0fa4bfb%7C0%7C0%7C637909997738076394%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C3000%7C%7C%7C&sdata=w4t%2Fbr%2Fj%2FngISt1dUP%2FxxFRihPVqEm%2F5G%2F7vCvR2%2B5o%3D&reserved=0>>
Learn More: Live Demo<https://patchmypc.com/schedule-live-demo<https://nam11.safelinks.protection.outlook.com/?url=https%3A%2F%2Fpatchmypc.com%2Fschedule-live-demo&data=05%7C01%7Cscott%40patchmypc.com%7C605c017192cb43f3df1208da4fc35c53%7Cb79783df131e4d0083036f66c0fa4bfb%7C0%7C0%7C637909997738076394%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C3000%7C%7C%7C&sdata=JmTNdLSdz8vDcL5Ktn6SR%2FUOjkw2M2ugbXF2KpoVQNw%3D&reserved=0>> | Setup Call<https://patchmypc.com/schedule-setup-call<https://nam11.safelinks.protection.outlook.com/?url=https%3A%2F%2Fpatchmypc.com%2Fschedule-setup-call&data=05%7C01%7Cscott%40patchmypc.com%7C605c017192cb43f3df1208da4fc35c53%7Cb79783df131e4d0083036f66c0fa4bfb%7C0%7C0%7C637909997738076394%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C3000%7C%7C%7C&sdata=CbfqUHeUyeJYNpyHdvyXKzyhQMfgDYewXVYfVafkyv0%3D&reserved=0>> | Review Call<https://patchmypc.com/environment-review-call<https://nam11.safelinks.protection.outlook.com/?url=https%3A%2F%2Fpatchmypc.com%2Fenvironment-review-call&data=05%7C01%7Cscott%40patchmypc.com%7C605c017192cb43f3df1208da4fc35c53%7Cb79783df131e4d0083036f66c0fa4bfb%7C0%7C0%7C637909997738076394%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C3000%7C%7C%7C&sdata=a6ZU5ecE49Af%2Fouh52VxhKmHQHj8SN1o2U9tQmoU7MY%3D&reserved=0>> | Trial<https://patchmypc.com/free-trial<https://nam11.safelinks.protection.outlook.com/?url=https%3A%2F%2Fpatchmypc.com%2Ffree-trial&data=05%7C01%7Cscott%40patchmypc.com%7C605c017192cb43f3df1208da4fc35c53%7Cb79783df131e4d0083036f66c0fa4bfb%7C0%7C0%7C637909997738076394%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C3000%7C%7C%7C&sdata=dFd9pklda%2FDasL0cSkWQF36PICt7oBIO%2BUP97HOOZKY%3D&reserved=0>> | Quote<https://patchmypc.com/request-quote<https://nam11.safelinks.protection.outlook.com/?url=https%3A%2F%2Fpatchmypc.com%2Frequest-quote&data=05%7C01%7Cscott%40patchmypc.com%7C605c017192cb43f3df1208da4fc35c53%7Cb79783df131e4d0083036f66c0fa4bfb%7C0%7C0%7C637909997738076394%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C3000%7C%7C%7C&sdata=sD%2BzhTswdB7NP8TWxTkJOTwjGzuD0PMA%2FNrUH6XsL3k%3D&reserved=0>>
Follow Us: Twitter<https://patchmypc.com/twitter<https://nam11.safelinks.protection.outlook.com/?url=https%3A%2F%2Fpatchmypc.com%2Ftwitter&data=05%7C01%7Cscott%40patchmypc.com%7C605c017192cb43f3df1208da4fc35c53%7Cb79783df131e4d0083036f66c0fa4bfb%7C0%7C0%7C637909997738076394%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C3000%7C%7C%7C&sdata=V4CQFSRfc%2F2yuzwv95hWArdsPywhvy3ZV2UlNOvGcvw%3D&reserved=0>> | LinkedIn<https://patchmypc.com/linkedin<https://nam11.safelinks.protection.outlook.com/?url=https%3A%2F%2Fpatchmypc.com%2Flinkedin&data=05%7C01%7Cscott%40patchmypc.com%7C605c017192cb43f3df1208da4fc35c53%7Cb79783df131e4d0083036f66c0fa4bfb%7C0%7C0%7C637909997738076394%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C3000%7C%7C%7C&sdata=u%2B2ve%2BXkeqbiezcZKBvtdEICpUI1vPTGKM%2FlNSz9WRk%3D&reserved=0>>
Sales and Support: + 1-866-343-3083
[Sent from Front]

        [[alternative HTML version deleted]]

______________________________________________
R-devel at r-project.org<mailto:R-devel at r-project.org> mailing list
https://stat.ethz.ch/mailman/listinfo/r-devel<https://nam11.safelinks.protection.outlook.com/?url=https%3A%2F%2Fstat.ethz.ch%2Fmailman%2Flistinfo%2Fr-devel&data=05%7C01%7Cscott%40patchmypc.com%7C605c017192cb43f3df1208da4fc35c53%7Cb79783df131e4d0083036f66c0fa4bfb%7C0%7C0%7C637909997738076394%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C3000%7C%7C%7C&sdata=LhVRlaLmu1AC9tXvl3PZ60C8BSFniVrSEdsYFg7HgVI%3D&reserved=0>

	[[alternative HTML version deleted]]


From ||@t@ @end|ng |rom dewey@myzen@co@uk  Sat Jun 18 15:07:08 2022
From: ||@t@ @end|ng |rom dewey@myzen@co@uk (Michael Dewey)
Date: Sat, 18 Jun 2022 14:07:08 +0100
Subject: [Rd] Unsigned binary
In-Reply-To: <MW4PR12MB5665E473B8068A346A668172A3AF9@MW4PR12MB5665.namprd12.prod.outlook.com>
References: <MW4PR12MB5665254214EE4D218F76D6A0A3A49@MW4PR12MB5665.namprd12.prod.outlook.com>
 <CA+aisX0PDnmsL0BgVTLzOtD07UNWYZDdo+_MEcjhZih4XDnVKQ@mail.gmail.com>
 <MW4PR12MB5665E473B8068A346A668172A3AF9@MW4PR12MB5665.namprd12.prod.outlook.com>
Message-ID: <5522f8c4-b95f-dac7-baeb-212f31276989@dewey.myzen.co.uk>

According to this post from Peter Dalgard on R-announce 
https://stat.ethz.ch/pipermail/r-announce/2022/000684.html
4.1.1 will be released (not re-released) on June 23.

Michael

On 17/06/2022 12:41, Scott McAllister wrote:
> Thank you for your update on this
> 
> If you can keep me updated on when version 4.2.1 is rereleased with the interim code signing certificate, that would be fantastic
> 
> Thanks,
> 
> Scott McAllister - Support Engineer
> Rate Your Experience: Great<https://patchmypc.com/customer-feedback-scott> | Good<https://patchmypc.com/customer-feedback-scott> | Poor<https://patchmypc.com/customer-feedback-scott>
> Support Session: 30 Minutes<https://patchmypc.com/scott-30-minute-session> | 60 Minutes<https://patchmypc.com/scott-60-minute-session>
> Learn More: Live Demo<https://patchmypc.com/schedule-live-demo> | Setup Call<https://patchmypc.com/schedule-setup-call> | Review Call<https://patchmypc.com/environment-review-call> | Trial<https://patchmypc.com/free-trial> | Quote<https://patchmypc.com/request-quote>
> Follow Us: Twitter<https://patchmypc.com/twitter> | LinkedIn<https://patchmypc.com/linkedin>
> Sales and Support: + 1-866-343-3083
> [Sent from Front]
> On June 16, 2022, 7:09 PM GMT+1 martyn.plummer at gmail.com<mailto:martyn.plummer at gmail.com> wrote:
> 
> 
> 
> On Wed, 8 Jun 2022 at 13:52, Scott McAllister <scott at patchmypc.com<mailto:scott at patchmypc.com>> wrote:
> Good afternoon
> 
> Are you aware that the current release of R for Windows (4.2.0) is unsigned? Do you have any plans to rectify this ?
> 
> 
> Yes and yes. Ideally the installer should be signed by The R Foundation. We are working on this but the process of validating the R Foundation for a code signing certificate is quite bureaucratic.
> In the meantime release 4.2.1 will be signed by me (Co-President of the R Foundation) using a personal certificate issued by Sectigo.
> 
> Martyn
> 
> Thanks,
> 
> Scott McAllister - Support Engineer
> Rate Your Experience: Great<https://patchmypc.com/customer-feedback-scott<https://nam11.safelinks.protection.outlook.com/?url=https%3A%2F%2Fpatchmypc.com%2Fcustomer-feedback-scott&data=05%7C01%7Cscott%40patchmypc.com%7C605c017192cb43f3df1208da4fc35c53%7Cb79783df131e4d0083036f66c0fa4bfb%7C0%7C0%7C637909997738076394%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C3000%7C%7C%7C&sdata=n6Hj7adkzgTFt1Esxno1l9A%2F6t4SUo9N7NqEMDWJhg4%3D&reserved=0>> | Good<https://patchmypc.com/customer-feedback-scott<https://nam11.safelinks.protection.outlook.com/?url=https%3A%2F%2Fpatchmypc.com%2Fcustomer-feedback-scott&data=05%7C01%7Cscott%40patchmypc.com%7C605c017192cb43f3df1208da4fc35c53%7Cb79783df131e4d0083036f66c0fa4bfb%7C0%7C0%7C637909997738076394%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C3000%7C%7C%7C&sdata=n6Hj7adkzgTFt1Esxno1l9A%2F6t4SUo9N7NqEMDWJhg4%3D&reserved=0>> | Poor<https://patchmypc.com/customer
>   -feedback-scott<https://nam11.safelinks.protection.outlook.com/?url=https%3A%2F%2Fpatchmypc.com%2Fcustomer-feedback-scott&data=05%7C01%7Cscott%40patchmypc.com%7C605c017192cb43f3df1208da4fc35c53%7Cb79783df131e4d0083036f66c0fa4bfb%7C0%7C0%7C637909997738076394%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C3000%7C%7C%7C&sdata=n6Hj7adkzgTFt1Esxno1l9A%2F6t4SUo9N7NqEMDWJhg4%3D&reserved=0>>
> Support Session: 30 Minutes<https://patchmypc.com/scott-30-minute-session<https://nam11.safelinks.protection.outlook.com/?url=https%3A%2F%2Fpatchmypc.com%2Fscott-30-minute-session&data=05%7C01%7Cscott%40patchmypc.com%7C605c017192cb43f3df1208da4fc35c53%7Cb79783df131e4d0083036f66c0fa4bfb%7C0%7C0%7C637909997738076394%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C3000%7C%7C%7C&sdata=7YhxNKzq80ny5vuWuca%2FoK7UY98aoiiCzcjaHAxKYVE%3D&reserved=0>> | 60 Minutes<https://patchmypc.com/scott-60-minute-session<https://nam11.safelinks.protection.outlook.com/?url=https%3A%2F%2Fpatchmypc.com%2Fscott-60-minute-session&data=05%7C01%7Cscott%40patchmypc.com%7C605c017192cb43f3df1208da4fc35c53%7Cb79783df131e4d0083036f66c0fa4bfb%7C0%7C0%7C637909997738076394%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C3000%7C%7C%7C&sdata=w4t%2Fbr%2Fj%2FngISt1dUP%2FxxFRihPVqEm%2F5G%2F7vCvR2%2B5o%3D&reserved=0>>
> Learn More: Live Demo<https://patchmypc.com/schedule-live-demo<https://nam11.safelinks.protection.outlook.com/?url=https%3A%2F%2Fpatchmypc.com%2Fschedule-live-demo&data=05%7C01%7Cscott%40patchmypc.com%7C605c017192cb43f3df1208da4fc35c53%7Cb79783df131e4d0083036f66c0fa4bfb%7C0%7C0%7C637909997738076394%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C3000%7C%7C%7C&sdata=JmTNdLSdz8vDcL5Ktn6SR%2FUOjkw2M2ugbXF2KpoVQNw%3D&reserved=0>> | Setup Call<https://patchmypc.com/schedule-setup-call<https://nam11.safelinks.protection.outlook.com/?url=https%3A%2F%2Fpatchmypc.com%2Fschedule-setup-call&data=05%7C01%7Cscott%40patchmypc.com%7C605c017192cb43f3df1208da4fc35c53%7Cb79783df131e4d0083036f66c0fa4bfb%7C0%7C0%7C637909997738076394%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C3000%7C%7C%7C&sdata=CbfqUHeUyeJYNpyHdvyXKzyhQMfgDYewXVYfVafkyv0%3D&reserved=0>> | Review Call<https://patchmypc.com/environment-review-ca
>   ll<https://nam11.safelinks.protection.outlook.com/?url=https%3A%2F%2Fpatchmypc.com%2Fenvironment-review-call&data=05%7C01%7Cscott%40patchmypc.com%7C605c017192cb43f3df1208da4fc35c53%7Cb79783df131e4d0083036f66c0fa4bfb%7C0%7C0%7C637909997738076394%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C3000%7C%7C%7C&sdata=a6ZU5ecE49Af%2Fouh52VxhKmHQHj8SN1o2U9tQmoU7MY%3D&reserved=0>> | Trial<https://patchmypc.com/free-trial<https://nam11.safelinks.protection.outlook.com/?url=https%3A%2F%2Fpatchmypc.com%2Ffree-trial&data=05%7C01%7Cscott%40patchmypc.com%7C605c017192cb43f3df1208da4fc35c53%7Cb79783df131e4d0083036f66c0fa4bfb%7C0%7C0%7C637909997738076394%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C3000%7C%7C%7C&sdata=dFd9pklda%2FDasL0cSkWQF36PICt7oBIO%2BUP97HOOZKY%3D&reserved=0>> | Quote<https://patchmypc.com/request-quote<https://nam11.safelinks.protection.outlook.com/?url=https%3A%2F%2Fpatchmypc.com%2Frequ
>   est-quote&data=05%7C01%7Cscott%40patchmypc.com%7C605c017192cb43f3df1208da4fc35c53%7Cb79783df131e4d0083036f66c0fa4bfb%7C0%7C0%7C637909997738076394%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C3000%7C%7C%7C&sdata=sD%2BzhTswdB7NP8TWxTkJOTwjGzuD0PMA%2FNrUH6XsL3k%3D&reserved=0>>
> Follow Us: Twitter<https://patchmypc.com/twitter<https://nam11.safelinks.protection.outlook.com/?url=https%3A%2F%2Fpatchmypc.com%2Ftwitter&data=05%7C01%7Cscott%40patchmypc.com%7C605c017192cb43f3df1208da4fc35c53%7Cb79783df131e4d0083036f66c0fa4bfb%7C0%7C0%7C637909997738076394%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C3000%7C%7C%7C&sdata=V4CQFSRfc%2F2yuzwv95hWArdsPywhvy3ZV2UlNOvGcvw%3D&reserved=0>> | LinkedIn<https://patchmypc.com/linkedin<https://nam11.safelinks.protection.outlook.com/?url=https%3A%2F%2Fpatchmypc.com%2Flinkedin&data=05%7C01%7Cscott%40patchmypc.com%7C605c017192cb43f3df1208da4fc35c53%7Cb79783df131e4d0083036f66c0fa4bfb%7C0%7C0%7C637909997738076394%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C3000%7C%7C%7C&sdata=u%2B2ve%2BXkeqbiezcZKBvtdEICpUI1vPTGKM%2FlNSz9WRk%3D&reserved=0>>
> Sales and Support: + 1-866-343-3083
> [Sent from Front]
> 
>          [[alternative HTML version deleted]]
> 
> ______________________________________________
> R-devel at r-project.org<mailto:R-devel at r-project.org> mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel<https://nam11.safelinks.protection.outlook.com/?url=https%3A%2F%2Fstat.ethz.ch%2Fmailman%2Flistinfo%2Fr-devel&data=05%7C01%7Cscott%40patchmypc.com%7C605c017192cb43f3df1208da4fc35c53%7Cb79783df131e4d0083036f66c0fa4bfb%7C0%7C0%7C637909997738076394%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C3000%7C%7C%7C&sdata=LhVRlaLmu1AC9tXvl3PZ60C8BSFniVrSEdsYFg7HgVI%3D&reserved=0>
> 
> 	[[alternative HTML version deleted]]
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
> 

-- 
Michael
http://www.dewey.myzen.co.uk/home.html

From henr|k@bengt@@on @end|ng |rom gm@||@com  Sat Jun 18 17:49:01 2022
From: henr|k@bengt@@on @end|ng |rom gm@||@com (Henrik Bengtsson)
Date: Sat, 18 Jun 2022 08:49:01 -0700
Subject: [Rd] Unsigned binary
In-Reply-To: <5522f8c4-b95f-dac7-baeb-212f31276989@dewey.myzen.co.uk>
References: <MW4PR12MB5665254214EE4D218F76D6A0A3A49@MW4PR12MB5665.namprd12.prod.outlook.com>
 <CA+aisX0PDnmsL0BgVTLzOtD07UNWYZDdo+_MEcjhZih4XDnVKQ@mail.gmail.com>
 <MW4PR12MB5665E473B8068A346A668172A3AF9@MW4PR12MB5665.namprd12.prod.outlook.com>
 <5522f8c4-b95f-dac7-baeb-212f31276989@dewey.myzen.co.uk>
Message-ID: <CAFDcVCRqNQ=rGFQQHXYzz1ECfZMLy+N551YzqY-B1FOB363R6A@mail.gmail.com>

For future needs:

Existing and upcoming releases are always announced on the front page
https://www.r-project.org/. Upcoming releases are put there as soon as a
decision is made. For guesstimates, see past release patterns.

/Henrik

On Sat, Jun 18, 2022, 06:07 Michael Dewey <lists at dewey.myzen.co.uk> wrote:

> According to this post from Peter Dalgard on R-announce
> https://stat.ethz.ch/pipermail/r-announce/2022/000684.html
> 4.1.1 will be released (not re-released) on June 23.
>
> Michael
>
> On 17/06/2022 12:41, Scott McAllister wrote:
> > Thank you for your update on this
> >
> > If you can keep me updated on when version 4.2.1 is rereleased with the
> interim code signing certificate, that would be fantastic
> >
> > Thanks,
> >
> > Scott McAllister - Support Engineer
> > Rate Your Experience: Great<
> https://patchmypc.com/customer-feedback-scott> | Good<
> https://patchmypc.com/customer-feedback-scott> | Poor<
> https://patchmypc.com/customer-feedback-scott>
> > Support Session: 30 Minutes<
> https://patchmypc.com/scott-30-minute-session> | 60 Minutes<
> https://patchmypc.com/scott-60-minute-session>
> > Learn More: Live Demo<https://patchmypc.com/schedule-live-demo> | Setup
> Call<https://patchmypc.com/schedule-setup-call> | Review Call<
> https://patchmypc.com/environment-review-call> | Trial<
> https://patchmypc.com/free-trial> | Quote<
> https://patchmypc.com/request-quote>
> > Follow Us: Twitter<https://patchmypc.com/twitter> | LinkedIn<
> https://patchmypc.com/linkedin>
> > Sales and Support: + 1-866-343-3083
> > [Sent from Front]
> > On June 16, 2022, 7:09 PM GMT+1 martyn.plummer at gmail.com<mailto:
> martyn.plummer at gmail.com> wrote:
> >
> >
> >
> > On Wed, 8 Jun 2022 at 13:52, Scott McAllister <scott at patchmypc.com
> <mailto:scott at patchmypc.com>> wrote:
> > Good afternoon
> >
> > Are you aware that the current release of R for Windows (4.2.0) is
> unsigned? Do you have any plans to rectify this ?
> >
> >
> > Yes and yes. Ideally the installer should be signed by The R Foundation.
> We are working on this but the process of validating the R Foundation for a
> code signing certificate is quite bureaucratic.
> > In the meantime release 4.2.1 will be signed by me (Co-President of the
> R Foundation) using a personal certificate issued by Sectigo.
> >
> > Martyn
> >
> > Thanks,
> >
> > Scott McAllister - Support Engineer
> > Rate Your Experience: Great<
> https://patchmypc.com/customer-feedback-scott<
> https://nam11.safelinks.protection.outlook.com/?url=https%3A%2F%2Fpatchmypc.com%2Fcustomer-feedback-scott&data=05%7C01%7Cscott%40patchmypc.com%7C605c017192cb43f3df1208da4fc35c53%7Cb79783df131e4d0083036f66c0fa4bfb%7C0%7C0%7C637909997738076394%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C3000%7C%7C%7C&sdata=n6Hj7adkzgTFt1Esxno1l9A%2F6t4SUo9N7NqEMDWJhg4%3D&reserved=0>>
> | Good<https://patchmypc.com/customer-feedback-scott<
> https://nam11.safelinks.protection.outlook.com/?url=https%3A%2F%2Fpatchmypc.com%2Fcustomer-feedback-scott&data=05%7C01%7Cscott%40patchmypc.com%7C605c017192cb43f3df1208da4fc35c53%7Cb79783df131e4d0083036f66c0fa4bfb%7C0%7C0%7C637909997738076394%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C3000%7C%7C%7C&sdata=n6Hj7adkzgTFt1Esxno1l9A%2F6t4SUo9N7NqEMDWJhg4%3D&reserved=0>>
> | Poor<https://patchmypc.com/custom
>  er
> >   -feedback-scott<
> https://nam11.safelinks.protection.outlook.com/?url=https%3A%2F%2Fpatchmypc.com%2Fcustomer-feedback-scott&data=05%7C01%7Cscott%40patchmypc.com%7C605c017192cb43f3df1208da4fc35c53%7Cb79783df131e4d0083036f66c0fa4bfb%7C0%7C0%7C637909997738076394%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C3000%7C%7C%7C&sdata=n6Hj7adkzgTFt1Esxno1l9A%2F6t4SUo9N7NqEMDWJhg4%3D&reserved=0
> >>
> > Support Session: 30 Minutes<
> https://patchmypc.com/scott-30-minute-session<
> https://nam11.safelinks.protection.outlook.com/?url=https%3A%2F%2Fpatchmypc.com%2Fscott-30-minute-session&data=05%7C01%7Cscott%40patchmypc.com%7C605c017192cb43f3df1208da4fc35c53%7Cb79783df131e4d0083036f66c0fa4bfb%7C0%7C0%7C637909997738076394%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C3000%7C%7C%7C&sdata=7YhxNKzq80ny5vuWuca%2FoK7UY98aoiiCzcjaHAxKYVE%3D&reserved=0>>
> | 60 Minutes<https://patchmypc.com/scott-60-minute-session<
> https://nam11.safelinks.protection.outlook.com/?url=https%3A%2F%2Fpatchmypc.com%2Fscott-60-minute-session&data=05%7C01%7Cscott%40patchmypc.com%7C605c017192cb43f3df1208da4fc35c53%7Cb79783df131e4d0083036f66c0fa4bfb%7C0%7C0%7C637909997738076394%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C3000%7C%7C%7C&sdata=w4t%2Fbr%2Fj%2FngISt1dUP%2FxxFRihPVqEm%2F5G%2F7vCvR2%2B5o%3D&reserved=0
> >>
> > Learn More: Live Demo<https://patchmypc.com/schedule-live-demo<
> https://nam11.safelinks.protection.outlook.com/?url=https%3A%2F%2Fpatchmypc.com%2Fschedule-live-demo&data=05%7C01%7Cscott%40patchmypc.com%7C605c017192cb43f3df1208da4fc35c53%7Cb79783df131e4d0083036f66c0fa4bfb%7C0%7C0%7C637909997738076394%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C3000%7C%7C%7C&sdata=JmTNdLSdz8vDcL5Ktn6SR%2FUOjkw2M2ugbXF2KpoVQNw%3D&reserved=0>>
> | Setup Call<https://patchmypc.com/schedule-setup-call<
> https://nam11.safelinks.protection.outlook.com/?url=https%3A%2F%2Fpatchmypc.com%2Fschedule-setup-call&data=05%7C01%7Cscott%40patchmypc.com%7C605c017192cb43f3df1208da4fc35c53%7Cb79783df131e4d0083036f66c0fa4bfb%7C0%7C0%7C637909997738076394%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C3000%7C%7C%7C&sdata=CbfqUHeUyeJYNpyHdvyXKzyhQMfgDYewXVYfVafkyv0%3D&reserved=0>>
> | Review Call<https://patchmypc.com/environment-review-
>  ca
> >   ll<
> https://nam11.safelinks.protection.outlook.com/?url=https%3A%2F%2Fpatchmypc.com%2Fenvironment-review-call&data=05%7C01%7Cscott%40patchmypc.com%7C605c017192cb43f3df1208da4fc35c53%7Cb79783df131e4d0083036f66c0fa4bfb%7C0%7C0%7C637909997738076394%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C3000%7C%7C%7C&sdata=a6ZU5ecE49Af%2Fouh52VxhKmHQHj8SN1o2U9tQmoU7MY%3D&reserved=0>>
> | Trial<https://patchmypc.com/free-trial<
> https://nam11.safelinks.protection.outlook.com/?url=https%3A%2F%2Fpatchmypc.com%2Ffree-trial&data=05%7C01%7Cscott%40patchmypc.com%7C605c017192cb43f3df1208da4fc35c53%7Cb79783df131e4d0083036f66c0fa4bfb%7C0%7C0%7C637909997738076394%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C3000%7C%7C%7C&sdata=dFd9pklda%2FDasL0cSkWQF36PICt7oBIO%2BUP97HOOZKY%3D&reserved=0>>
> | Quote<https://patchmypc.com/request-quote<
> https://nam11.safelinks.protection.outlook.com/?url=https%3A%2F%2Fpatchmypc.com%2Fr
>  equ
> >   est-quote&data=05%7C01%7Cscott%40patchmypc.com
> %7C605c017192cb43f3df1208da4fc35c53%7Cb79783df131e4d0083036f66c0fa4bfb%7C0%7C0%7C637909997738076394%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C3000%7C%7C%7C&sdata=sD%2BzhTswdB7NP8TWxTkJOTwjGzuD0PMA%2FNrUH6XsL3k%3D&reserved=0>>
> > Follow Us: Twitter<https://patchmypc.com/twitter<
> https://nam11.safelinks.protection.outlook.com/?url=https%3A%2F%2Fpatchmypc.com%2Ftwitter&data=05%7C01%7Cscott%40patchmypc.com%7C605c017192cb43f3df1208da4fc35c53%7Cb79783df131e4d0083036f66c0fa4bfb%7C0%7C0%7C637909997738076394%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C3000%7C%7C%7C&sdata=V4CQFSRfc%2F2yuzwv95hWArdsPywhvy3ZV2UlNOvGcvw%3D&reserved=0>>
> | LinkedIn<https://patchmypc.com/linkedin<
> https://nam11.safelinks.protection.outlook.com/?url=https%3A%2F%2Fpatchmypc.com%2Flinkedin&data=05%7C01%7Cscott%40patchmypc.com%7C605c017192cb43f3df1208da4fc35c53%7Cb79783df131e4d0083036f66c0fa4bfb%7C0%7C0%7C637909997738076394%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C3000%7C%7C%7C&sdata=u%2B2ve%2BXkeqbiezcZKBvtdEICpUI1vPTGKM%2FlNSz9WRk%3D&reserved=0
> >>
> > Sales and Support: + 1-866-343-3083
> > [Sent from Front]
> >
> >          [[alternative HTML version deleted]]
> >
> > ______________________________________________
> > R-devel at r-project.org<mailto:R-devel at r-project.org> mailing list
> > https://stat.ethz.ch/mailman/listinfo/r-devel<
> https://nam11.safelinks.protection.outlook.com/?url=https%3A%2F%2Fstat.ethz.ch%2Fmailman%2Flistinfo%2Fr-devel&data=05%7C01%7Cscott%40patchmypc.com%7C605c017192cb43f3df1208da4fc35c53%7Cb79783df131e4d0083036f66c0fa4bfb%7C0%7C0%7C637909997738076394%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C3000%7C%7C%7C&sdata=LhVRlaLmu1AC9tXvl3PZ60C8BSFniVrSEdsYFg7HgVI%3D&reserved=0
> >
> >
> >       [[alternative HTML version deleted]]
> >
> > ______________________________________________
> > R-devel at r-project.org mailing list
> > https://stat.ethz.ch/mailman/listinfo/r-devel
> >
>
> --
> Michael
> http://www.dewey.myzen.co.uk/home.html
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>

	[[alternative HTML version deleted]]


From berw|n@tur|@ch @end|ng |rom gm@||@com  Sat Jun 18 16:58:19 2022
From: berw|n@tur|@ch @end|ng |rom gm@||@com (Berwin A Turlach)
Date: Sat, 18 Jun 2022 22:58:19 +0800
Subject: [Rd] Trying to compile R 4.2.x on Linux as 32bit sub-architecture
Message-ID: <20220618225819.6778cf9c@ECM-DTC-716.uniwa.uwa.edu.au>

G'day all,

Apologies for not reporting this earlier, but our teaching semester has
just finished and I learned from experience not to update my R version
to a version that my students were not using. :)

When installing R on my Linux machines, I usually install it as a 32bit
and a 64bit sub-architecture, with the 64bit one being the default.  My
main computer also runs daily scripts during the night to install
R-patched and R-devel in this manner.

However, I now realise that I can neither install R 4.2.0 nor R-patched
as a 32bit sub-architecture on my Linux machines (which were running
Xubuntu 20.04 but were recently upgraded to Xubuntu 22.04).  The
installation process always fails at the same test.  I attach the
relevant file from trying to compile R-patched during last night's run.
 
Hopefully this report is in time before the release of R 4.2.1. :)

Or is it time to stop compiling R on Linux as a 32bit sub-architecture?
My understanding is that R 4.2.0 on Windows is already provided only as
a 64bit binary, not sure what the situation on MacOS is.  How long will
support for a 32bit version of R on Linux continue?

Thank you very much for any help/insight.

Cheers,

	Berwin

From berw|n@tur|@ch @end|ng |rom gm@||@com  Sat Jun 18 20:16:34 2022
From: berw|n@tur|@ch @end|ng |rom gm@||@com (Berwin A Turlach)
Date: Sun, 19 Jun 2022 02:16:34 +0800
Subject: [Rd] 
 Trying to compile R 4.2.x on Linux as 32bit sub-architecture
In-Reply-To: <25261.65414.379675.51967@rob.eddelbuettel.com>
References: <20220618225819.6778cf9c@ECM-DTC-716.uniwa.uwa.edu.au>
 <25261.65414.379675.51967@rob.eddelbuettel.com>
Message-ID: <20220619021634.7f33fd6e@ECM-DTC-716.uniwa.uwa.edu.au>

G'day Dirk,

On Sat, 18 Jun 2022 11:38:30 -0500
Dirk Eddelbuettel <edd at debian.org> wrote:

> See
>     https://buildd.debian.org/status/package.php?p=r-base
> and note the i386 entry.

Thank you for that.  I presume that refers to a 32bit version of debian
with 32 bit compiler suit?

I should probably have been more specific.  My Ubuntu machines are
64bit architectures and I install R as 32bit sub-architecture and 64
sub-architecture with the same compiler suite.  Well for the 32bit
compilation I specify the additional flag "-m32" to the (gcc) compilers.

Cheers,

	Berwin


From berw|n@tur|@ch @end|ng |rom gm@||@com  Sat Jun 18 20:30:03 2022
From: berw|n@tur|@ch @end|ng |rom gm@||@com (Berwin A Turlach)
Date: Sun, 19 Jun 2022 02:30:03 +0800
Subject: [Rd] 
 Trying to compile R 4.2.x on Linux as 32bit sub-architecture
In-Reply-To: <20220618225819.6778cf9c@ECM-DTC-716.uniwa.uwa.edu.au>
References: <20220618225819.6778cf9c@ECM-DTC-716.uniwa.uwa.edu.au>
Message-ID: <20220619023003.687c603e@ECM-DTC-716.uniwa.uwa.edu.au>

G'day all,

On Sat, 18 Jun 2022 22:58:19 +0800
Berwin A Turlach <Berwin.Turlach at gmail.com> wrote:

> [...] I attach the relevant file from trying to compile R-patched
> during last night's run. 

Mmh, on the web-interface to the mailing list I see that the attachment
might have been deleted.  Perhaps because it was too large?

So below the start and the final part from reg-tests-1d.Rout.fail which
shows where the error occurs.

Cheers,
	
	Berwin

----------------------------
R version 4.2.1 RC (2022-06-17 r82501) -- "Funny-Looking Kid"
Copyright (C) 2022 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu/32 (32-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ## Regression tests for R >= 3.4.0
[...very large snip...]
> ## pretty(x) when range(x) is finite but diff(range(x)) is +/- Inf:
> B <- 1e308; 2*B; (s <- seq(-B,B,length.out = 3))
[1] Inf
[1] -1e+308   0e+00  1e+308
> options(warn=1) # => warnings *as they happen*
> (ps <- pretty(c(-B,B)))
[1] -1e+308 -5e+307   0e+00  5e+307  1e+308
> ## Warning in pretty.default(c(-B, B)) :
> ##   Internal(pretty()): very large range 4e+307, corrected to 2.24712e+307
> nps <- length(ps)
> dd <- sum((dps <- diff(ps))/length(dps)) # mean w/o overflow
> epsC <- .Machine$double.eps
> relD <- (dps/dd - 1)/epsC
> relEr <- function(f, y) abs((f-y)/(f+y)*2) # cheap relative error, |f| > 0 !
> stopifnot(is.finite(mean(ps)), ## these all failed without "long-double"
+           is.finite(mdp <- mean(dps)),
+           all.equal(dd, mdp, tolerance=1e-15))
> stopifnot(relEr(c(-B,B), ps[c(1L,nps)]) <= 4*epsC,
+           -8 <= relD, relD <= 8) # seen [-1.5,.., 3.0]; w/o long-double: [-5, .., 4]
> ## ps was   0 Inf Inf Inf Inf Inf Inf Inf Inf Inf  0 , in R <= 4.1.0
> f. <- c(-1.797, -1.79, -1.75, seq(-1.7, -1, by=.1))
> stopifnot(!is.unsorted(f.)) ; f.nm <- setNames(, f.)
> fmtRng <- function(x) paste(format(range(x)), collapse=", ")
> ns <- c(2:12, 15, 20, 30, 51, 100, 2001, 1e5)
> nms.n <- formatC(ns, digits=0, format="f")
> nmsRng <- c(t(outer(paste0("r",1:2), c("lo","hi"), paste, sep=".")))
> rr <- matrix(NA, length(ns), 4, dimnames=list(nms.n, nmsRng))
> for(i.n in seq_along(ns)) {
+     n <- ns[i.n]
+     cat("n = ", n,":\n--------\n")
+     pBL <- lapply(f., function(f) structure(pretty(c(f*1e308, 2^1023.9), n), f=f))
+     ## -> a warning per f
+     n.s <- lengths(pBL) # how close to target 'n' ??
+     cat("lengths(.) in [", fmtRng(n.s), "]\n")
+     if(n <= 15) stopifnot(n.s <= 20)# seen {14,..,17}
+     else stopifnot(abs(n.s/n - 1) <= 1/2)
+     if(n) cat("length(.) <> n relative err in [", fmtRng(n.s/n - 1), "]\n")
+     ## .pretty(*, bounds=FALSE) :
+     prM <- t(sapply(f.nm, function(f)
+         unlist( .pretty(c(f*1e308, 2^1023.9), n, bounds=FALSE) )))
+     print(prM)
+     luM <- prM[,c("ns","nu")] * prM[,"unit"] # the pretty-scaled unit
+     r1 <- luM[,"ns"] / (f.nm*1e308)
+     rr[i.n, 1:2] <- r1 <- range(r1)
+     cat(sprintf("range(r1): [%g, %g]\n", r1[1], r1[2]))
+     r2 <- luM[,"nu"] / 2^1023.9
+     rr[i.n, 3:4] <- r2 <- range(r2)
+     cat(sprintf("range(r2): [%g, %g]\n", r2[1], r2[2]))
+     stopifnot(exprs = { is.matrix(prM)
+             prM[,"nu"] - prM[,"ns"] == prM[,"n"] # could differ, but not for this data
+             identical(colnames(prM), c("ns", "nu", "n", "unit"))
+             ## These bounds depend on 'n' :
+             r1 >= if(n <= 12) 0.55 else 0.89
+             r1 <= if(n <= 15) 1.4  else 1.1
+             r2 >= if(n <= 12) 0.58 else 0.95
+             r2 <= if(n <= 15) 1    else 1.025
+     })
+     invisible(lapply(pBL, function(ps) {
+         mdB <- sum((dB <- diff(ps))/length(dB))
+         rd <- dB/mdB - 1 # relative differences
+         ## print(range(rd))
+         x <- c(attr(ps,"f")*1e308, 2^1023.9)
+         stopifnot(if(n >= 1) abs(rd) <= n * 3e-15 else TRUE,
+                   ps[1] <= x[1] , x[2] <= ps[length(ps)])
+     }))
+ }
n =  2 :
--------
Warning in pretty.default(c(f * 1e+308, 2^1023.9), n) :
  R_pretty(): very large range 'cell'=1.73715e+308, corrected to 1.43815e+308
Warning in pretty.default(c(f * 1e+308, 2^1023.9), n) :
  R_pretty(): very large range 'cell'=1.73365e+308, corrected to 1.43815e+308
Warning in pretty.default(c(f * 1e+308, 2^1023.9), n) :
  R_pretty(): very large range 'cell'=1.71365e+308, corrected to 1.43815e+308
Warning in pretty.default(c(f * 1e+308, 2^1023.9), n) :
  R_pretty(): very large range 'cell'=1.68865e+308, corrected to 1.43815e+308
Warning in pretty.default(c(f * 1e+308, 2^1023.9), n) :
  R_pretty(): very large range 'cell'=1.63865e+308, corrected to 1.43815e+308
Warning in pretty.default(c(f * 1e+308, 2^1023.9), n) :
  R_pretty(): very large range 'cell'=1.58865e+308, corrected to 1.43815e+308
Warning in pretty.default(c(f * 1e+308, 2^1023.9), n) :
  R_pretty(): very large range 'cell'=1.53865e+308, corrected to 1.43815e+308
Warning in pretty.default(c(f * 1e+308, 2^1023.9), n) :
  R_pretty(): very large range 'cell'=1.48865e+308, corrected to 1.43815e+308
Warning in pretty.default(c(f * 1e+308, 2^1023.9), n) :
  R_pretty(): very large range 'cell'=1.43865e+308, corrected to 1.43815e+308
lengths(.) in [ 1, 3 ]
length(.) <> n relative err in [ -0.5,  0.5 ]
Warning in .pretty(c(f * 1e+308, 2^1023.9), n, bounds = FALSE) :
  R_pretty(): very large range 'cell'=1.73715e+308, corrected to 1.43815e+308
Warning in .pretty(c(f * 1e+308, 2^1023.9), n, bounds = FALSE) :
  R_pretty(): very large range 'cell'=1.73365e+308, corrected to 1.43815e+308
Warning in .pretty(c(f * 1e+308, 2^1023.9), n, bounds = FALSE) :
  R_pretty(): very large range 'cell'=1.71365e+308, corrected to 1.43815e+308
Warning in .pretty(c(f * 1e+308, 2^1023.9), n, bounds = FALSE) :
  R_pretty(): very large range 'cell'=1.68865e+308, corrected to 1.43815e+308
Warning in .pretty(c(f * 1e+308, 2^1023.9), n, bounds = FALSE) :
  R_pretty(): very large range 'cell'=1.63865e+308, corrected to 1.43815e+308
Warning in .pretty(c(f * 1e+308, 2^1023.9), n, bounds = FALSE) :
  R_pretty(): very large range 'cell'=1.58865e+308, corrected to 1.43815e+308
Warning in .pretty(c(f * 1e+308, 2^1023.9), n, bounds = FALSE) :
  R_pretty(): very large range 'cell'=1.53865e+308, corrected to 1.43815e+308
Warning in .pretty(c(f * 1e+308, 2^1023.9), n, bounds = FALSE) :
  R_pretty(): very large range 'cell'=1.48865e+308, corrected to 1.43815e+308
Warning in .pretty(c(f * 1e+308, 2^1023.9), n, bounds = FALSE) :
  R_pretty(): very large range 'cell'=1.43865e+308, corrected to 1.43815e+308
       ns nu n   unit
-1.797  0  0 0    Inf
-1.79   0  0 0    Inf
-1.75   0  0 0    Inf
-1.7    0  0 0    Inf
-1.6    0  0 0    Inf
-1.5    0  0 0    Inf
-1.4    0  0 0    Inf
-1.3    0  0 0    Inf
-1.2    0  0 0    Inf
-1.1   -1  1 2 1e+308
-1     -1  1 2 1e+308
range(r1): [NaN, NaN]
range(r2): [NaN, NaN]
Error: r1 >= if (n <= 12) 0.55 else 0.89 are not all TRUE
Execution halted


From jeroenoom@ @end|ng |rom gm@||@com  Sun Jun 19 12:45:36 2022
From: jeroenoom@ @end|ng |rom gm@||@com (Jeroen Ooms)
Date: Sun, 19 Jun 2022 12:45:36 +0200
Subject: [Rd] Unsigned binary
In-Reply-To: <MW4PR12MB5665E473B8068A346A668172A3AF9@MW4PR12MB5665.namprd12.prod.outlook.com>
References: <MW4PR12MB5665254214EE4D218F76D6A0A3A49@MW4PR12MB5665.namprd12.prod.outlook.com>
 <CA+aisX0PDnmsL0BgVTLzOtD07UNWYZDdo+_MEcjhZih4XDnVKQ@mail.gmail.com>
 <MW4PR12MB5665E473B8068A346A668172A3AF9@MW4PR12MB5665.namprd12.prod.outlook.com>
Message-ID: <CABFfbXtHGftT9s6gePMZShvzrC3SuamJGmehEuEieCLRwJOiCA@mail.gmail.com>

On Fri, Jun 17, 2022 at 2:46 PM Scott McAllister <scott at patchmypc.com>
wrote:

> Thank you for your update on this
>
> If you can keep me updated on when version 4.2.1 is rereleased with the
> interim code signing certificate, that would be fantastic


Signed (unofficial) builds are also available from
https://github.com/r-windows/r-base/releases

	[[alternative HTML version deleted]]


From m@ech|er @end|ng |rom @t@t@m@th@ethz@ch  Mon Jun 20 15:35:34 2022
From: m@ech|er @end|ng |rom @t@t@m@th@ethz@ch (Martin Maechler)
Date: Mon, 20 Jun 2022 15:35:34 +0200
Subject: [Rd] 
 Trying to compile R 4.2.x on Linux as 32bit sub-architecture
In-Reply-To: <20220619023003.687c603e@ECM-DTC-716.uniwa.uwa.edu.au>
References: <20220618225819.6778cf9c@ECM-DTC-716.uniwa.uwa.edu.au>
 <20220619023003.687c603e@ECM-DTC-716.uniwa.uwa.edu.au>
Message-ID: <25264.30630.11417.849490@stat.math.ethz.ch>

>>>>> Berwin A Turlach 
>>>>>     on Sun, 19 Jun 2022 02:30:03 +0800 writes:

    > G'day all, On Sat, 18 Jun 2022 22:58:19 +0800 Berwin A
    > Turlach <Berwin.Turlach at gmail.com> wrote:

    >> [...] I attach the relevant file from trying to compile
    >> R-patched during last night's run.

    > Mmh, on the web-interface to the mailing list I see that
    > the attachment might have been deleted.  Perhaps because
    > it was too large?

    > So below the start and the final part from
    > reg-tests-1d.Rout.fail which shows where the error occurs.

    > Cheers,
    > Berwin


Aaah... now we are talking ;-)

Thank you, Berwin!

Your subject was misleading to me.  This does not seem to be
about *compiling* R 4.2.x  but rather *checking* / *testing* its
functionality *after compilation and installation.

I think you are right, and we should adapt our regression tests
to still not fail here.
Also, as I was the one who added these checks, I'd like to get
this "right".

Last but not least:  We are *grateful* indeed for people like
you, testing a *pre-release* version such as   '4.2.1 RC' as we
can see below.

Note that I do test with  '../R/configure --disable-long-double'
but this cannot be the only reason.
BTW, all the pretty *warnings* below are fine and expected; the
problem is that resulting numbers end up "wrong"

I will need some more information:
Ideally, the R console output of these 5 lines of R code:

sessionInfo()
Sys.info()
capabilities()
str(.Machine)
str(.Platform)

Could you help here, doing this *off*-list?

Thanking you in advance and giving best regards,
Martin


    > ----------------------------
    > R version 4.2.1 RC (2022-06-17 r82501) -- "Funny-Looking Kid"
    > Copyright (C) 2022 The R Foundation for Statistical Computing
    > Platform: x86_64-pc-linux-gnu/32 (32-bit)

    > R is free software and comes with ABSOLUTELY NO WARRANTY.
    > You are welcome to redistribute it under certain conditions.
    > Type 'license()' or 'licence()' for distribution details.

    > R is a collaborative project with many contributors.
    > Type 'contributors()' for more information and
    > 'citation()' on how to cite R or R packages in publications.

    > Type 'demo()' for some demos, 'help()' for on-line help, or
    > 'help.start()' for an HTML browser interface to help.
    > Type 'q()' to quit R.

    >> ## Regression tests for R >= 3.4.0

 > [...very large snip...]

    >> ## pretty(x) when range(x) is finite but diff(range(x)) is +/- Inf:
    >> B <- 1e308; 2*B; (s <- seq(-B,B,length.out = 3))
    > [1] Inf
    > [1] -1e+308   0e+00  1e+308
    >> options(warn=1) # => warnings *as they happen*
    >> (ps <- pretty(c(-B,B)))
    > [1] -1e+308 -5e+307   0e+00  5e+307  1e+308
    >> ## Warning in pretty.default(c(-B, B)) :
    >> ##   Internal(pretty()): very large range 4e+307, corrected to 2.24712e+307
    >> nps <- length(ps)
    >> dd <- sum((dps <- diff(ps))/length(dps)) # mean w/o overflow
    >> epsC <- .Machine$double.eps
    >> relD <- (dps/dd - 1)/epsC
    >> relEr <- function(f, y) abs((f-y)/(f+y)*2) # cheap relative error, |f| > 0 !
    >> stopifnot(is.finite(mean(ps)), ## these all failed without "long-double"
    > +           is.finite(mdp <- mean(dps)),
    > +           all.equal(dd, mdp, tolerance=1e-15))
    >> stopifnot(relEr(c(-B,B), ps[c(1L,nps)]) <= 4*epsC,
    > +           -8 <= relD, relD <= 8) # seen [-1.5,.., 3.0]; w/o long-double: [-5, .., 4]
    >> ## ps was   0 Inf Inf Inf Inf Inf Inf Inf Inf Inf  0 , in R <= 4.1.0
    >> f. <- c(-1.797, -1.79, -1.75, seq(-1.7, -1, by=.1))
    >> stopifnot(!is.unsorted(f.)) ; f.nm <- setNames(, f.)
    >> fmtRng <- function(x) paste(format(range(x)), collapse=", ")
    >> ns <- c(2:12, 15, 20, 30, 51, 100, 2001, 1e5)
    >> nms.n <- formatC(ns, digits=0, format="f")
    >> nmsRng <- c(t(outer(paste0("r",1:2), c("lo","hi"), paste, sep=".")))
    >> rr <- matrix(NA, length(ns), 4, dimnames=list(nms.n, nmsRng))
    >> for(i.n in seq_along(ns)) {
    > +     n <- ns[i.n]
    > +     cat("n = ", n,":\n--------\n")
    > +     pBL <- lapply(f., function(f) structure(pretty(c(f*1e308, 2^1023.9), n), f=f))
    > +     ## -> a warning per f
    > +     n.s <- lengths(pBL) # how close to target 'n' ??
    > +     cat("lengths(.) in [", fmtRng(n.s), "]\n")
    > +     if(n <= 15) stopifnot(n.s <= 20)# seen {14,..,17}
    > +     else stopifnot(abs(n.s/n - 1) <= 1/2)
    > +     if(n) cat("length(.) <> n relative err in [", fmtRng(n.s/n - 1), "]\n")
    > +     ## .pretty(*, bounds=FALSE) :
    > +     prM <- t(sapply(f.nm, function(f)
    > +         unlist( .pretty(c(f*1e308, 2^1023.9), n, bounds=FALSE) )))
    > +     print(prM)
    > +     luM <- prM[,c("ns","nu")] * prM[,"unit"] # the pretty-scaled unit
    > +     r1 <- luM[,"ns"] / (f.nm*1e308)
    > +     rr[i.n, 1:2] <- r1 <- range(r1)
    > +     cat(sprintf("range(r1): [%g, %g]\n", r1[1], r1[2]))
    > +     r2 <- luM[,"nu"] / 2^1023.9
    > +     rr[i.n, 3:4] <- r2 <- range(r2)
    > +     cat(sprintf("range(r2): [%g, %g]\n", r2[1], r2[2]))
    > +     stopifnot(exprs = { is.matrix(prM)
    > +             prM[,"nu"] - prM[,"ns"] == prM[,"n"] # could differ, but not for this data
    > +             identical(colnames(prM), c("ns", "nu", "n", "unit"))
    > +             ## These bounds depend on 'n' :
    > +             r1 >= if(n <= 12) 0.55 else 0.89
    > +             r1 <= if(n <= 15) 1.4  else 1.1
    > +             r2 >= if(n <= 12) 0.58 else 0.95
    > +             r2 <= if(n <= 15) 1    else 1.025
    > +     })
    > +     invisible(lapply(pBL, function(ps) {
    > +         mdB <- sum((dB <- diff(ps))/length(dB))
    > +         rd <- dB/mdB - 1 # relative differences
    > +         ## print(range(rd))
    > +         x <- c(attr(ps,"f")*1e308, 2^1023.9)
    > +         stopifnot(if(n >= 1) abs(rd) <= n * 3e-15 else TRUE,
    > +                   ps[1] <= x[1] , x[2] <= ps[length(ps)])
    > +     }))
    > + }
    > n =  2 :
    > --------
    > Warning in pretty.default(c(f * 1e+308, 2^1023.9), n) :
    > R_pretty(): very large range 'cell'=1.73715e+308, corrected to 1.43815e+308
    > Warning in pretty.default(c(f * 1e+308, 2^1023.9), n) :
    > R_pretty(): very large range 'cell'=1.73365e+308, corrected to 1.43815e+308
    > Warning in pretty.default(c(f * 1e+308, 2^1023.9), n) :
    > R_pretty(): very large range 'cell'=1.71365e+308, corrected to 1.43815e+308
    > Warning in pretty.default(c(f * 1e+308, 2^1023.9), n) :
    > R_pretty(): very large range 'cell'=1.68865e+308, corrected to 1.43815e+308
    > Warning in pretty.default(c(f * 1e+308, 2^1023.9), n) :
    > R_pretty(): very large range 'cell'=1.63865e+308, corrected to 1.43815e+308
    > Warning in pretty.default(c(f * 1e+308, 2^1023.9), n) :
    > R_pretty(): very large range 'cell'=1.58865e+308, corrected to 1.43815e+308
    > Warning in pretty.default(c(f * 1e+308, 2^1023.9), n) :
    > R_pretty(): very large range 'cell'=1.53865e+308, corrected to 1.43815e+308
    > Warning in pretty.default(c(f * 1e+308, 2^1023.9), n) :
    > R_pretty(): very large range 'cell'=1.48865e+308, corrected to 1.43815e+308
    > Warning in pretty.default(c(f * 1e+308, 2^1023.9), n) :
    > R_pretty(): very large range 'cell'=1.43865e+308, corrected to 1.43815e+308
    > lengths(.) in [ 1, 3 ]
    > length(.) <> n relative err in [ -0.5,  0.5 ]
    > Warning in .pretty(c(f * 1e+308, 2^1023.9), n, bounds = FALSE) :
    > R_pretty(): very large range 'cell'=1.73715e+308, corrected to 1.43815e+308
    > Warning in .pretty(c(f * 1e+308, 2^1023.9), n, bounds = FALSE) :
    > R_pretty(): very large range 'cell'=1.73365e+308, corrected to 1.43815e+308
    > Warning in .pretty(c(f * 1e+308, 2^1023.9), n, bounds = FALSE) :
    > R_pretty(): very large range 'cell'=1.71365e+308, corrected to 1.43815e+308
    > Warning in .pretty(c(f * 1e+308, 2^1023.9), n, bounds = FALSE) :
    > R_pretty(): very large range 'cell'=1.68865e+308, corrected to 1.43815e+308
    > Warning in .pretty(c(f * 1e+308, 2^1023.9), n, bounds = FALSE) :
    > R_pretty(): very large range 'cell'=1.63865e+308, corrected to 1.43815e+308
    > Warning in .pretty(c(f * 1e+308, 2^1023.9), n, bounds = FALSE) :
    > R_pretty(): very large range 'cell'=1.58865e+308, corrected to 1.43815e+308
    > Warning in .pretty(c(f * 1e+308, 2^1023.9), n, bounds = FALSE) :
    > R_pretty(): very large range 'cell'=1.53865e+308, corrected to 1.43815e+308
    > Warning in .pretty(c(f * 1e+308, 2^1023.9), n, bounds = FALSE) :
    > R_pretty(): very large range 'cell'=1.48865e+308, corrected to 1.43815e+308
    > Warning in .pretty(c(f * 1e+308, 2^1023.9), n, bounds = FALSE) :
    > R_pretty(): very large range 'cell'=1.43865e+308, corrected to 1.43815e+308
    > ns nu n   unit
    > -1.797  0  0 0    Inf
    > -1.79   0  0 0    Inf
    > -1.75   0  0 0    Inf
    > -1.7    0  0 0    Inf
    > -1.6    0  0 0    Inf
    > -1.5    0  0 0    Inf
    > -1.4    0  0 0    Inf
    > -1.3    0  0 0    Inf
    > -1.2    0  0 0    Inf
    > -1.1   -1  1 2 1e+308
    > -1     -1  1 2 1e+308
    > range(r1): [NaN, NaN]
    > range(r2): [NaN, NaN]
    > Error: r1 >= if (n <= 12) 0.55 else 0.89 are not all TRUE
    > Execution halted

    > ______________________________________________
    > R-devel at r-project.org mailing list
    > https://stat.ethz.ch/mailman/listinfo/r-devel


From berw|n@tur|@ch @end|ng |rom gm@||@com  Mon Jun 20 15:40:17 2022
From: berw|n@tur|@ch @end|ng |rom gm@||@com (Berwin A Turlach)
Date: Mon, 20 Jun 2022 21:40:17 +0800
Subject: [Rd] 
 Trying to compile R 4.2.x on Linux as 32bit sub-architecture
In-Reply-To: <f5803feb-ce34-d9e2-0180-4bab4f964874@gmail.com>
References: <20220618225819.6778cf9c@ECM-DTC-716.uniwa.uwa.edu.au>
 <1bd9158c-cffd-e61a-3337-5fee2fd2ce5c@gmail.com>
 <20220620203551.0ca8eabe@ECM-DTC-716.uniwa.uwa.edu.au>
 <f5803feb-ce34-d9e2-0180-4bab4f964874@gmail.com>
Message-ID: <20220620214017.5046dd43@absentia>

G'day Tomas,

On Mon, 20 Jun 2022 14:46:04 +0200
Tomas Kalibera <tomas.kalibera at gmail.com> wrote:

> > Well, what puzzles me is that I had no problem with R-patched right
> > until the end of the 4.1 branch.  And I have no problems with
> > R-devel, that is also still installing a 32bit and a 64bit version
> > just fine.
> >
> > It is just R 4.2 that gives me the problem.  
> Ah, that's interesting. And could you perhaps bisect it to the 
> problematic commit? That might increase the chances you get attention
> of the person who authored it. After all you could also send a patch

Well, I found via Google a command that could tell me the first revision
of a branch.  Apparently revision 81976 is the first revision of the 4.2
branch:

------------------------------------------------------------------------
r81976 | pd | 2022-03-25 07:02:01 +0800 (Fri, 25 Mar 2022) | 1 line

Create R-4-2-branch
------------------------------------------------------------------------

I checked this branch out and it already displays the same problem,
the same test in reg-tests-1d.R falls over.  But I am pretty sure that
R-devel (and R-patched) compiled fine on that day. So where was the
change made before the R-4.2-branch was created?

Cheers,

	Berwin


From m@ech|er @end|ng |rom @t@t@m@th@ethz@ch  Mon Jun 20 15:45:40 2022
From: m@ech|er @end|ng |rom @t@t@m@th@ethz@ch (Martin Maechler)
Date: Mon, 20 Jun 2022 15:45:40 +0200
Subject: [Rd] Unsigned binary
In-Reply-To: <CABFfbXtHGftT9s6gePMZShvzrC3SuamJGmehEuEieCLRwJOiCA@mail.gmail.com>
References: <MW4PR12MB5665254214EE4D218F76D6A0A3A49@MW4PR12MB5665.namprd12.prod.outlook.com>
 <CA+aisX0PDnmsL0BgVTLzOtD07UNWYZDdo+_MEcjhZih4XDnVKQ@mail.gmail.com>
 <MW4PR12MB5665E473B8068A346A668172A3AF9@MW4PR12MB5665.namprd12.prod.outlook.com>
 <CABFfbXtHGftT9s6gePMZShvzrC3SuamJGmehEuEieCLRwJOiCA@mail.gmail.com>
Message-ID: <25264.31236.650358.678527@stat.math.ethz.ch>

>>>>> Jeroen Ooms 
>>>>>     on Sun, 19 Jun 2022 12:45:36 +0200 writes:

    > On Fri, Jun 17, 2022 at 2:46 PM Scott McAllister <scott at patchmypc.com>
    > wrote:

    >> Thank you for your update on this
    >> 
    >> If you can keep me updated on when version 4.2.1 is rereleased with the
    >> interim code signing certificate, that would be fantastic

    > Signed (unofficial) builds are also available from
    > https://github.com/r-windows/r-base/releases

Hmm, sorry to be blunt,  but I think these should really *NOT*
be used anymore (for R versions >= 4.2.0)
as they are not based on the official R sources for Windows, 
AFAIK, and *also* this unofficial version is still building
packages the old way instead of the new one which is documented in e.g.

     https://blog.r-project.org/

viz.

     https://blog.r-project.org/2021/12/07/upcoming-changes-in-r-4.2-on-windows/
and  https://blog.r-project.org/2022/06/16/upcoming-changes-in-r-4.2.1-on-windows/

Martin Maechler
(R core team; co-author of the first blog above)


From ht @end|ng |rom he@therturner@net  Mon Jun 20 16:21:10 2022
From: ht @end|ng |rom he@therturner@net (Heather Turner)
Date: Mon, 20 Jun 2022 15:21:10 +0100
Subject: [Rd] Bug BBQ
Message-ID: <c5c3f424-c53a-4cdc-be55-68aca8920b7c@www.fastmail.com>

Dear All,

The R Contribution Working Group is organizing a Bug BBQ as a satellite event to useR!
https://contributor.r-project.org/events/bug-bbq

The event is spread over Friday June 24 UTC, after useR! ends (there is no need to have registered for useR!). You are encouraged to put aside some time during the Bug BBQ to review the open bugs and see if you can contribute.

There will be three organized sessions for people to discuss, work together and share their expertise - you are welcome to join in one or more of these sessions (see the link above for times + Zoom registration links, Session 1 starts on Thursday June 23 in UTC negative time zones). 

We will be treating R's Bugzilla as read-only during the event: if you wish to contribute as part of the Bug BBQ, please follow the guidance on the event page.

Hope to see many of you there!

Best wishes,

Heather


From kry|ov@r00t @end|ng |rom gm@||@com  Mon Jun 20 17:06:02 2022
From: kry|ov@r00t @end|ng |rom gm@||@com (Ivan Krylov)
Date: Mon, 20 Jun 2022 18:06:02 +0300
Subject: [Rd] HTML documentation check: 'condition must be plain text'
Message-ID: <20220620180602.36c20989@arachnoid>

Hi,

Use of \Sexpr in an \if condition in R documentation results in a NOTE,
but only during HTML documentation check, not any of the previous Rd
checks:

  \if{\Sexpr{'TRUE'}}{The condition evaluates to true.}

* checking HTML version of manual ... NOTE
Encountered the following conversion/validation errors:
foo.Rd:10: condition must be plain text

Is this supported? "Writing R documentation" ?2.11 seems to agree:

>> Also accepted [as a condition] are TRUE (matching all formats) and
>> FALSE (matching no formats). These could be the output of the \Sexpr
>> macro.

In order to check the HTML documentation, check_Rd2HTML() runs
tools::Rd2HTML() on the results of tools::Rd_db() [1]. The former runs
\Sexpr[stage=render] macros and the latter runs \Sexpr[stage=build]
macros, leaving \Sexpr[stage=install] macros unevaluated. The NOTE goes
away if I switch the "stage" argument to anything but "install".

Is there any downside to adding stages = c('build', 'install') to the
Rd_db call or stages = c('install', 'render') to the Rd2HTML call in
order to make this NOTE go away?

-- 
Best regards,
Ivan

[1]
https://github.com/r-devel/r-svn/blob/d25e77715164e39c96baae4c180d8f980ec93932/src/library/tools/R/check.R#L4911-L4939


From tom@@@k@||ber@ @end|ng |rom gm@||@com  Mon Jun 20 17:48:21 2022
From: tom@@@k@||ber@ @end|ng |rom gm@||@com (Tomas Kalibera)
Date: Mon, 20 Jun 2022 17:48:21 +0200
Subject: [Rd] 
 Trying to compile R 4.2.x on Linux as 32bit sub-architecture
In-Reply-To: <20220620214017.5046dd43@absentia>
References: <20220618225819.6778cf9c@ECM-DTC-716.uniwa.uwa.edu.au>
 <1bd9158c-cffd-e61a-3337-5fee2fd2ce5c@gmail.com>
 <20220620203551.0ca8eabe@ECM-DTC-716.uniwa.uwa.edu.au>
 <f5803feb-ce34-d9e2-0180-4bab4f964874@gmail.com>
 <20220620214017.5046dd43@absentia>
Message-ID: <81e05bd3-649c-0066-cac7-d1b45d323ec0@gmail.com>


On 6/20/22 15:40, Berwin A Turlach wrote:
> G'day Tomas,
>
> On Mon, 20 Jun 2022 14:46:04 +0200
> Tomas Kalibera <tomas.kalibera at gmail.com> wrote:
>
>>> Well, what puzzles me is that I had no problem with R-patched right
>>> until the end of the 4.1 branch.  And I have no problems with
>>> R-devel, that is also still installing a 32bit and a 64bit version
>>> just fine.
>>>
>>> It is just R 4.2 that gives me the problem.
>> Ah, that's interesting. And could you perhaps bisect it to the
>> problematic commit? That might increase the chances you get attention
>> of the person who authored it. After all you could also send a patch
> Well, I found via Google a command that could tell me the first revision
> of a branch.  Apparently revision 81976 is the first revision of the 4.2
> branch:
>
> ------------------------------------------------------------------------
> r81976 | pd | 2022-03-25 07:02:01 +0800 (Fri, 25 Mar 2022) | 1 line
>
> Create R-4-2-branch
> ------------------------------------------------------------------------
>
> I checked this branch out and it already displays the same problem,
> the same test in reg-tests-1d.R falls over.  But I am pretty sure that
> R-devel (and R-patched) compiled fine on that day. So where was the
> change made before the R-4.2-branch was created?

the R-4-2-branch was created from R-devel branch by that commit you 
found, so the previous changes were on R-devel. So you could now 
actually search for a commit on R-devel (after r81978) that fixed it, 
perhaps it is something that could be ported to R-4-2-branch.

You could restrict the search for changes in the corresponding test 
files, first, checking if the tests/the tolerances have changed (that 
would be easy, "svn blame" would help: "svn blame", "svn blame -r xxxx", 
"svn log --diff", etc). If it is not a change in the tests but rather in 
the computations, that would be harder to guess, still bisecting should 
find it.

Best
Tomas

>
> Cheers,
>
> 	Berwin


From kry|ov@r00t @end|ng |rom gm@||@com  Wed Jun 22 17:25:02 2022
From: kry|ov@r00t @end|ng |rom gm@||@com (Ivan Krylov)
Date: Wed, 22 Jun 2022 18:25:02 +0300
Subject: [Rd] stats::getInitial: requires the model to live in the stats
 namespace or above
Message-ID: <20220622182502.191d3a93@arachnoid>

Hello R-devel,

Here's a corner case I've stumbled upon recently:

local({
	# Originally this was a package namespace, but a local
	# environment also leads to failure
	stopifnot(!identical(environment(), globalenv()))

	# Make a self-starting model inside this private environment...
	SSlinear <- selfStart(
		~ a * x + b,
		function(mCall, data, LHS, ...) {
			xy <- sortedXyData(mCall[['x']], LHS, data)
			setNames(
				coef(lm(y ~ x, xy)),
				mCall[c('b', 'a')]
			)
		},
		c('a', 'b')
	)

	# ...and try to use it
	x <- 1:100
	y <- 100 + 5 * x + rnorm(length(x), sd = 10)
	nls(y ~ SSlinear(x, a, b))
	# error in get('SSlinear'): object not found
})

As a workaround, I'll just provide the starting values manually,
but should this work?

As implemented [1], getInitial requires the model object to live in the
stats package namespace or any of its parents, which eventually include
the global environment and the attached packages, but not the private
namespaces of the packages or any other local environments. This
results from the fact that getInitial() uses plain get() in order to
resolve the symbol for the self-starting model, and get() defaults to
the current environment, which leads a chain of stats -> imports:stats
-> base -> global environment -> attached packages.

It seems easy to suggest get(., envir = environment(object)) as a fix,
which would be able to access anything available at the time of
creation of the formula. On the other hand, it would break the case
when the stats package is not attached to the global environment or the
formula environment, which currently works.

-- 
Best regards,
Ivan

[1]
https://github.com/r-devel/r-svn/blob/d43497cbc927e632c6f597fa23001c3f31d4cae6/src/library/stats/R/selfStart.R#L81-L87


From w||||@mwdun|@p @end|ng |rom gm@||@com  Wed Jun 22 18:44:25 2022
From: w||||@mwdun|@p @end|ng |rom gm@||@com (Bill Dunlap)
Date: Wed, 22 Jun 2022 09:44:25 -0700
Subject: [Rd] stats::getInitial: requires the model to live in the stats
 namespace or above
In-Reply-To: <20220622182502.191d3a93@arachnoid>
References: <20220622182502.191d3a93@arachnoid>
Message-ID: <CAHqSRuS51ruHwGy7gysr-pOA2fOEi4A2CYRuQahMrBkzdx6a5g@mail.gmail.com>

Shouldn't the get()'s in stats:::getInitial.formula be looking in the
environment of the formula, not the environment of getInitial.formula?

--- selfStart.R (revision 82512)
+++ selfStart.R (working copy)
@@ -78,13 +79,19 @@
     switch (length(object),
             stop("argument 'object' has an impossible length"),
         {                              # one-sided formula
-           func <- get(as.character(object[[2L]][[1L]]))
+            if (!is.call(object[[2L]])) {
+                stop("Right-hand side of formula is not a call")
+            }
+           func <- get(as.character(object[[2L]][[1L]]), mode="function",
envir=environment(object))
            getInitial(func, data,
                       mCall = as.list(match.call(func, call =
object[[2L]])),
                        ...)
         },
         {                              # two-sided formula
-           func <- get(as.character(object[[3L]][[1L]]))
+            if (!is.call(object[[3L]])) {
+                stop("Right-hand side of formula is not a call")
+            }
+           func <- get(as.character(object[[3L]][[1L]]), mode="function",
envir=environment(object))
            getInitial(func, data,
                       mCall = as.list(match.call(func, call =
object[[3L]])),
                       LHS = object[[2L]], ...)

-Bill


On Wed, Jun 22, 2022 at 8:25 AM Ivan Krylov <krylov.r00t at gmail.com> wrote:

> Hello R-devel,
>
> Here's a corner case I've stumbled upon recently:
>
> local({
>         # Originally this was a package namespace, but a local
>         # environment also leads to failure
>         stopifnot(!identical(environment(), globalenv()))
>
>         # Make a self-starting model inside this private environment...
>         SSlinear <- selfStart(
>                 ~ a * x + b,
>                 function(mCall, data, LHS, ...) {
>                         xy <- sortedXyData(mCall[['x']], LHS, data)
>                         setNames(
>                                 coef(lm(y ~ x, xy)),
>                                 mCall[c('b', 'a')]
>                         )
>                 },
>                 c('a', 'b')
>         )
>
>         # ...and try to use it
>         x <- 1:100
>         y <- 100 + 5 * x + rnorm(length(x), sd = 10)
>         nls(y ~ SSlinear(x, a, b))
>         # error in get('SSlinear'): object not found
> })
>
> As a workaround, I'll just provide the starting values manually,
> but should this work?
>
> As implemented [1], getInitial requires the model object to live in the
> stats package namespace or any of its parents, which eventually include
> the global environment and the attached packages, but not the private
> namespaces of the packages or any other local environments. This
> results from the fact that getInitial() uses plain get() in order to
> resolve the symbol for the self-starting model, and get() defaults to
> the current environment, which leads a chain of stats -> imports:stats
> -> base -> global environment -> attached packages.
>
> It seems easy to suggest get(., envir = environment(object)) as a fix,
> which would be able to access anything available at the time of
> creation of the formula. On the other hand, it would break the case
> when the stats package is not attached to the global environment or the
> formula environment, which currently works.
>
> --
> Best regards,
> Ivan
>
> [1]
>
> https://github.com/r-devel/r-svn/blob/d43497cbc927e632c6f597fa23001c3f31d4cae6/src/library/stats/R/selfStart.R#L81-L87
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>

	[[alternative HTML version deleted]]


From @eb@meyer @end|ng |rom |@u@de  Wed Jun 22 18:47:45 2022
From: @eb@meyer @end|ng |rom |@u@de (Sebastian Meyer)
Date: Wed, 22 Jun 2022 18:47:45 +0200
Subject: [Rd] stats::getInitial: requires the model to live in the stats
 namespace or above
In-Reply-To: <20220622182502.191d3a93@arachnoid>
References: <20220622182502.191d3a93@arachnoid>
Message-ID: <8c95fa55-a616-38d2-4ee0-7e4d16a50f85@fau.de>

Thank you, Ivan, for this careful report. You are right and I have 
actually found that issue myself while working on nlme bugs some months 
ago, but had decided to postpone working on that until someone reports 
any real problems with how this is implemented since ages.

Here is my (smaller) example:

> local({
>     mySSfunc <- stats::SSlogis
>     getInitial(circumference ~ mySSfunc(age, Asym, xmid, scal), Orange)
> })

Error in get(as.character(object[[3L]][[1L]])) :
   object 'mySSfunc' not found

And also evil code that I had planned as a regression test:

> plogis <- stats::SSlogis
> in2 <- getInitial(circumference ~ plogis(age, Asym, xmid, scal), Orange)

Error in getInitial.default(func, data, mCall = as.list(match.call(func, :
   no 'getInitial' method found for "function" objects

I had similar thoughts about the "obvious" patch that you describe and 
also assume a minor slow-down in variable lookup for the standard use 
case with the pre-defined self-starting functions from stats. However, 
these problems may not be relevant in practice ... they seem to be less 
relevant than the bug itself since we now both found it independently 
and it cannot be worked around. Furthermore, stats is a base package 
attached by default (but packages like yours could even "Depends: stats" 
to ensure that self-starting functions from stats are eventually found 
starting from the formula environment, often the global environment, if 
not masked).

I'd suggest you add this report to R's Bugzilla so that it can be linked 
from the NEWS once this gets addressed.

Thanks and best regards,

	Sebastian Meyer


Am 22.06.22 um 17:25 schrieb Ivan Krylov:
> Hello R-devel,
> 
> Here's a corner case I've stumbled upon recently:
> 
> local({
> 	# Originally this was a package namespace, but a local
> 	# environment also leads to failure
> 	stopifnot(!identical(environment(), globalenv()))
> 
> 	# Make a self-starting model inside this private environment...
> 	SSlinear <- selfStart(
> 		~ a * x + b,
> 		function(mCall, data, LHS, ...) {
> 			xy <- sortedXyData(mCall[['x']], LHS, data)
> 			setNames(
> 				coef(lm(y ~ x, xy)),
> 				mCall[c('b', 'a')]
> 			)
> 		},
> 		c('a', 'b')
> 	)
> 
> 	# ...and try to use it
> 	x <- 1:100
> 	y <- 100 + 5 * x + rnorm(length(x), sd = 10)
> 	nls(y ~ SSlinear(x, a, b))
> 	# error in get('SSlinear'): object not found
> })
> 
> As a workaround, I'll just provide the starting values manually,
> but should this work?
> 
> As implemented [1], getInitial requires the model object to live in the
> stats package namespace or any of its parents, which eventually include
> the global environment and the attached packages, but not the private
> namespaces of the packages or any other local environments. This
> results from the fact that getInitial() uses plain get() in order to
> resolve the symbol for the self-starting model, and get() defaults to
> the current environment, which leads a chain of stats -> imports:stats
> -> base -> global environment -> attached packages.
> 
> It seems easy to suggest get(., envir = environment(object)) as a fix,
> which would be able to access anything available at the time of
> creation of the formula. On the other hand, it would break the case
> when the stats package is not attached to the global environment or the
> formula environment, which currently works.
>


From murdoch@dunc@n @end|ng |rom gm@||@com  Wed Jun 22 19:57:53 2022
From: murdoch@dunc@n @end|ng |rom gm@||@com (Duncan Murdoch)
Date: Wed, 22 Jun 2022 13:57:53 -0400
Subject: [Rd] stats::getInitial: requires the model to live in the stats
 namespace or above
In-Reply-To: <CAHqSRuS51ruHwGy7gysr-pOA2fOEi4A2CYRuQahMrBkzdx6a5g@mail.gmail.com>
References: <20220622182502.191d3a93@arachnoid>
 <CAHqSRuS51ruHwGy7gysr-pOA2fOEi4A2CYRuQahMrBkzdx6a5g@mail.gmail.com>
Message-ID: <99a6c2b5-e2cf-8d09-24b2-1b6e57241ab3@gmail.com>

On 22/06/2022 12:44 p.m., Bill Dunlap wrote:
> Shouldn't the get()'s in stats:::getInitial.formula be looking in the
> environment of the formula, not the environment of getInitial.formula?

Yes, that definitely looks like the right environment to use.  Ivan, is 
that what you meant by "environment(object)"?

Duncan Murdoch

> 
> --- selfStart.R (revision 82512)
> +++ selfStart.R (working copy)
> @@ -78,13 +79,19 @@
>       switch (length(object),
>               stop("argument 'object' has an impossible length"),
>           {                              # one-sided formula
> -           func <- get(as.character(object[[2L]][[1L]]))
> +            if (!is.call(object[[2L]])) {
> +                stop("Right-hand side of formula is not a call")
> +            }
> +           func <- get(as.character(object[[2L]][[1L]]), mode="function",
> envir=environment(object))
>              getInitial(func, data,
>                         mCall = as.list(match.call(func, call =
> object[[2L]])),
>                          ...)
>           },
>           {                              # two-sided formula
> -           func <- get(as.character(object[[3L]][[1L]]))
> +            if (!is.call(object[[3L]])) {
> +                stop("Right-hand side of formula is not a call")
> +            }
> +           func <- get(as.character(object[[3L]][[1L]]), mode="function",
> envir=environment(object))
>              getInitial(func, data,
>                         mCall = as.list(match.call(func, call =
> object[[3L]])),
>                         LHS = object[[2L]], ...)
> 
> -Bill
> 
> 
> On Wed, Jun 22, 2022 at 8:25 AM Ivan Krylov <krylov.r00t at gmail.com> wrote:
> 
>> Hello R-devel,
>>
>> Here's a corner case I've stumbled upon recently:
>>
>> local({
>>          # Originally this was a package namespace, but a local
>>          # environment also leads to failure
>>          stopifnot(!identical(environment(), globalenv()))
>>
>>          # Make a self-starting model inside this private environment...
>>          SSlinear <- selfStart(
>>                  ~ a * x + b,
>>                  function(mCall, data, LHS, ...) {
>>                          xy <- sortedXyData(mCall[['x']], LHS, data)
>>                          setNames(
>>                                  coef(lm(y ~ x, xy)),
>>                                  mCall[c('b', 'a')]
>>                          )
>>                  },
>>                  c('a', 'b')
>>          )
>>
>>          # ...and try to use it
>>          x <- 1:100
>>          y <- 100 + 5 * x + rnorm(length(x), sd = 10)
>>          nls(y ~ SSlinear(x, a, b))
>>          # error in get('SSlinear'): object not found
>> })
>>
>> As a workaround, I'll just provide the starting values manually,
>> but should this work?
>>
>> As implemented [1], getInitial requires the model object to live in the
>> stats package namespace or any of its parents, which eventually include
>> the global environment and the attached packages, but not the private
>> namespaces of the packages or any other local environments. This
>> results from the fact that getInitial() uses plain get() in order to
>> resolve the symbol for the self-starting model, and get() defaults to
>> the current environment, which leads a chain of stats -> imports:stats
>> -> base -> global environment -> attached packages.
>>
>> It seems easy to suggest get(., envir = environment(object)) as a fix,
>> which would be able to access anything available at the time of
>> creation of the formula. On the other hand, it would break the case
>> when the stats package is not attached to the global environment or the
>> formula environment, which currently works.
>>
>> --
>> Best regards,
>> Ivan
>>
>> [1]
>>
>> https://github.com/r-devel/r-svn/blob/d43497cbc927e632c6f597fa23001c3f31d4cae6/src/library/stats/R/selfStart.R#L81-L87
>>
>> ______________________________________________
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>
> 
> 	[[alternative HTML version deleted]]
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From kry|ov@r00t @end|ng |rom gm@||@com  Wed Jun 22 23:05:09 2022
From: kry|ov@r00t @end|ng |rom gm@||@com (Ivan Krylov)
Date: Thu, 23 Jun 2022 00:05:09 +0300
Subject: [Rd] stats::getInitial: requires the model to live in the stats
 namespace or above
In-Reply-To: <99a6c2b5-e2cf-8d09-24b2-1b6e57241ab3@gmail.com>
References: <20220622182502.191d3a93@arachnoid>
 <CAHqSRuS51ruHwGy7gysr-pOA2fOEi4A2CYRuQahMrBkzdx6a5g@mail.gmail.com>
 <99a6c2b5-e2cf-8d09-24b2-1b6e57241ab3@gmail.com>
Message-ID: <20220623000509.53d374e8@Tarkus>

On Wed, 22 Jun 2022 13:57:53 -0400
Duncan Murdoch <murdoch.duncan at gmail.com> wrote:

> On 22/06/2022 12:44 p.m., Bill Dunlap wrote:
> > Shouldn't the get()'s in stats:::getInitial.formula be looking in
> > the environment of the formula, not the environment of
> > getInitial.formula?  
> 
> Yes, that definitely looks like the right environment to use.  Ivan,
> is that what you meant by "environment(object)"?

Yes, I meant the formula by "object", following the name of
getInitial.formula's argument.

-- 
Best regards,
Ivan


