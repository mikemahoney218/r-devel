From norbert@kuder @end|ng |rom gm@||@com  Thu Jan  2 15:04:57 2025
From: norbert@kuder @end|ng |rom gm@||@com (Norbert Kuder)
Date: Thu, 2 Jan 2025 15:04:57 +0100
Subject: [Rd] Possible issue in stats/arima.R package
Message-ID: <CAMUMQUSh5t2sazypdiAeOSJ2MQssNfb89jQJvvBwRbA1PwAqeA@mail.gmail.com>

Hello all,

I am running R version 4.4.2 (2024-10-31 ucrt) on Windows 10 x64, and
noticed something that might be a minor bug (or at least inconsistent code)
in the stats/arima.R package.
I have found:
1. A missing stop() call at line 69:
    if (length(order) == 3) seasonal <- list(order = seasonal) else
("\'seasonal\' is of the wrong length")
it should be rather:
    if (length(order) == 3) seasonal <- list(order = seasonal) else
stop("\'seasonal\' is of the wrong length")

2. An unused 'mod' variable assignment at line 190:

mod <- makeARIMA(trarma[[1]], trarma[[2]], Delta, kappa, SSinit)

I am trying to confirm whether this is intended behavior or possibly an
overlooked detail. Could someone please clarify if the current logic is
correct?

Thank you.

Best regards,
Norbert Kuder

	[[alternative HTML version deleted]]


From murdoch@dunc@n @end|ng |rom gm@||@com  Thu Jan  2 17:20:31 2025
From: murdoch@dunc@n @end|ng |rom gm@||@com (Duncan Murdoch)
Date: Thu, 2 Jan 2025 11:20:31 -0500
Subject: [Rd] Possible issue in stats/arima.R package
In-Reply-To: <CAMUMQUSh5t2sazypdiAeOSJ2MQssNfb89jQJvvBwRbA1PwAqeA@mail.gmail.com>
References: <CAMUMQUSh5t2sazypdiAeOSJ2MQssNfb89jQJvvBwRbA1PwAqeA@mail.gmail.com>
Message-ID: <822e67f1-5900-4355-b231-a09c8691d4ae@gmail.com>

On 2025-01-02 9:04 a.m., Norbert Kuder wrote:
> Hello all,
> 
> I am running R version 4.4.2 (2024-10-31 ucrt) on Windows 10 x64, and
> noticed something that might be a minor bug (or at least inconsistent code)
> in the stats/arima.R package.
> I have found:
> 1. A missing stop() call at line 69:
>      if (length(order) == 3) seasonal <- list(order = seasonal) else
> ("\'seasonal\' is of the wrong length")
> it should be rather:
>      if (length(order) == 3) seasonal <- list(order = seasonal) else
> stop("\'seasonal\' is of the wrong length")

I think you're right about this one.

> 
> 2. An unused 'mod' variable assignment at line 190:
> 
> mod <- makeARIMA(trarma[[1]], trarma[[2]], Delta, kappa, SSinit)
> 
> I am trying to confirm whether this is intended behavior or possibly an
> overlooked detail. Could someone please clarify if the current logic is
> correct?
> 

In the R-devel source I see mod being used in the next statement:

         mod <- makeARIMA(trarma[[1L]], trarma[[2L]], Delta, kappa, SSinit)
         val <- if(ncxreg > 0L)
             arimaSS(x - xreg %*% coef[narma + (1L:ncxreg)], mod)
         else arimaSS(x, mod)

It appears in both alternatives of the if statement.

This one is strange though:  the code in the github mirror 
(https://github.com/wch/r-source/blob/4a1ed749271c52e60a85e794e6f34b0831efb1ae/src/library/stats/R/arima.R#L256-L258) 
is different:

         mod <- makeARIMA(trarma[[1L]], trarma[[2L]], Delta, kappa, SSinit)
         if(ncxreg > 0) x <- x - xreg %*% coef[narma + (1L:ncxreg)]
         arimaSS(x, mod)

yet the log shows no recent changes.  I'm not sure what's going on.

Duncan Murdoch


From murdoch@dunc@n @end|ng |rom gm@||@com  Thu Jan  2 17:28:45 2025
From: murdoch@dunc@n @end|ng |rom gm@||@com (Duncan Murdoch)
Date: Thu, 2 Jan 2025 11:28:45 -0500
Subject: [Rd] Possible issue in stats/arima.R package
In-Reply-To: <822e67f1-5900-4355-b231-a09c8691d4ae@gmail.com>
References: <CAMUMQUSh5t2sazypdiAeOSJ2MQssNfb89jQJvvBwRbA1PwAqeA@mail.gmail.com>
 <822e67f1-5900-4355-b231-a09c8691d4ae@gmail.com>
Message-ID: <e93186db-914d-41cf-b1df-46cbc90af3b6@gmail.com>

On 2025-01-02 11:20 a.m., Duncan Murdoch wrote:
> On 2025-01-02 9:04 a.m., Norbert Kuder wrote:
>> Hello all,
>>
>> I am running R version 4.4.2 (2024-10-31 ucrt) on Windows 10 x64, and
>> noticed something that might be a minor bug (or at least inconsistent code)
>> in the stats/arima.R package.
>> I have found:
>> 1. A missing stop() call at line 69:
>>       if (length(order) == 3) seasonal <- list(order = seasonal) else
>> ("\'seasonal\' is of the wrong length")
>> it should be rather:
>>       if (length(order) == 3) seasonal <- list(order = seasonal) else
>> stop("\'seasonal\' is of the wrong length")
> 
> I think you're right about this one.
> 
>>
>> 2. An unused 'mod' variable assignment at line 190:
>>
>> mod <- makeARIMA(trarma[[1]], trarma[[2]], Delta, kappa, SSinit)
>>
>> I am trying to confirm whether this is intended behavior or possibly an
>> overlooked detail. Could someone please clarify if the current logic is
>> correct?
>>
> 
> In the R-devel source I see mod being used in the next statement:
> 
>           mod <- makeARIMA(trarma[[1L]], trarma[[2L]], Delta, kappa, SSinit)
>           val <- if(ncxreg > 0L)
>               arimaSS(x - xreg %*% coef[narma + (1L:ncxreg)], mod)
>           else arimaSS(x, mod)
> 
> It appears in both alternatives of the if statement.
> 
> This one is strange though:  the code in the github mirror
> (https://github.com/wch/r-source/blob/4a1ed749271c52e60a85e794e6f34b0831efb1ae/src/library/stats/R/arima.R#L256-L258)
> is different:
> 
>           mod <- makeARIMA(trarma[[1L]], trarma[[2L]], Delta, kappa, SSinit)
>           if(ncxreg > 0) x <- x - xreg %*% coef[narma + (1L:ncxreg)]
>           arimaSS(x, mod)
> 
> yet the log shows no recent changes.  I'm not sure what's going on.

Mystery solved:  code like this appears several times in that file.  In 
the occurrence here:

https://github.com/wch/r-source/blob/4a1ed749271c52e60a85e794e6f34b0831efb1ae/src/library/stats/R/arima.R#L293

it does appear that the mod value isn't being used.

Duncan Murdoch


From m@ech|er @end|ng |rom @t@t@m@th@ethz@ch  Thu Jan  2 20:42:58 2025
From: m@ech|er @end|ng |rom @t@t@m@th@ethz@ch (Martin Maechler)
Date: Thu, 2 Jan 2025 20:42:58 +0100
Subject: [Rd] Possible issue in stats/arima.R package
In-Reply-To: <e93186db-914d-41cf-b1df-46cbc90af3b6@gmail.com>
References: <CAMUMQUSh5t2sazypdiAeOSJ2MQssNfb89jQJvvBwRbA1PwAqeA@mail.gmail.com>
 <822e67f1-5900-4355-b231-a09c8691d4ae@gmail.com>
 <e93186db-914d-41cf-b1df-46cbc90af3b6@gmail.com>
Message-ID: <26486.60482.328642.701605@stat.math.ethz.ch>

>>>>> Duncan Murdoch 
>>>>>     on Thu, 2 Jan 2025 11:28:45 -0500 writes:

    > On 2025-01-02 11:20 a.m., Duncan Murdoch wrote:
    >> On 2025-01-02 9:04 a.m., Norbert Kuder wrote:
    >>> Hello all,
    >>> 
    >>> I am running R version 4.4.2 (2024-10-31 ucrt) on Windows 10 x64, and
    >>> noticed something that might be a minor bug (or at least inconsistent code)
    >>> in the stats/arima.R package.
    >>> I have found:
    >>> 1. A missing stop() call at line 69:
    >>> if (length(order) == 3) seasonal <- list(order = seasonal) else
    >>> ("\'seasonal\' is of the wrong length")
    >>> it should be rather:
    >>> if (length(order) == 3) seasonal <- list(order = seasonal) else
    >>> stop("\'seasonal\' is of the wrong length")
    >> 
    >> I think you're right about this one.
    >> 
    >>> 
    >>> 2. An unused 'mod' variable assignment at line 190:
    >>> 
    >>> mod <- makeARIMA(trarma[[1]], trarma[[2]], Delta, kappa, SSinit)
    >>> 
    >>> I am trying to confirm whether this is intended behavior or possibly an
    >>> overlooked detail. Could someone please clarify if the current logic is
    >>> correct?
    >>> 
    >> 
    >> In the R-devel source I see mod being used in the next statement:
    >> 
    >> mod <- makeARIMA(trarma[[1L]], trarma[[2L]], Delta, kappa, SSinit)
    >> val <- if(ncxreg > 0L)
    >> arimaSS(x - xreg %*% coef[narma + (1L:ncxreg)], mod)
    >> else arimaSS(x, mod)
    >> 
    >> It appears in both alternatives of the if statement.
    >> 
    >> This one is strange though:  the code in the github mirror
    >> (https://github.com/wch/r-source/blob/4a1ed749271c52e60a85e794e6f34b0831efb1ae/src/library/stats/R/arima.R#L256-L258)
    >> is different:
    >> 
    >> mod <- makeARIMA(trarma[[1L]], trarma[[2L]], Delta, kappa, SSinit)
    >> if(ncxreg > 0) x <- x - xreg %*% coef[narma + (1L:ncxreg)]
    >> arimaSS(x, mod)
    >> 
    >> yet the log shows no recent changes.  I'm not sure what's going on.

    > Mystery solved:  code like this appears several times in that file.  In 
    > the occurrence here:

    > https://github.com/wch/r-source/blob/4a1ed749271c52e60a85e794e6f34b0831efb1ae/src/library/stats/R/arima.R#L293

    > it does appear that the mod value isn't being used.

    > Duncan Murdoch

Thank you, Norbert and Duncan.
A little bit (unfinished)  aRcheology showed that both parts
have been in the arima code since Dec 11 2003 (when the code, i.e., the
whole package 'ts') was moved / merged into package 'stats'.

I'll fix and quickly test the change, and then commit it.

Congratulations indeed to Norbert Kuder for finding such (small)
blemishes of such an age!

... and  Happy New yeaR!   to all readers.
Martin


From m@ech|er @end|ng |rom @t@t@m@th@ethz@ch  Thu Jan  2 21:53:43 2025
From: m@ech|er @end|ng |rom @t@t@m@th@ethz@ch (Martin Maechler)
Date: Thu, 2 Jan 2025 21:53:43 +0100
Subject: [Rd] Possible issue in stats/arima.R package
In-Reply-To: <26486.60482.328642.701605@stat.math.ethz.ch>
References: <CAMUMQUSh5t2sazypdiAeOSJ2MQssNfb89jQJvvBwRbA1PwAqeA@mail.gmail.com>
 <822e67f1-5900-4355-b231-a09c8691d4ae@gmail.com>
 <e93186db-914d-41cf-b1df-46cbc90af3b6@gmail.com>
 <26486.60482.328642.701605@stat.math.ethz.ch>
Message-ID: <26486.64727.599697.148053@stat.math.ethz.ch>

>>>>> Martin Maechler on Thu, 2 Jan 2025 20:42:58 +0100 writes:
 >>>>> Duncan Murdoch on Thu, 2 Jan 2025 11:28:45 -0500 writes:
    >> On 2025-01-02 11:20 a.m., Duncan Murdoch wrote:
    >>> On 2025-01-02 9:04 a.m., Norbert Kuder wrote:
    >>>> Hello all,
    >>>> 
    >>>> I am running R version 4.4.2 (2024-10-31 ucrt) on Windows 10 x64, and
    >>>> noticed something that might be a minor bug (or at least inconsistent code)
    >>>> in the stats/arima.R package.
    >>>> I have found:
    >>>> 1. A missing stop() call at line 69:
    >>>>  if (length(order) == 3) seasonal <- list(order = seasonal) else
    >>>>    ("\'seasonal\' is of the wrong length")
    >>>> it should be rather:
    >>>> if (length(order) == 3) seasonal <- list(order = seasonal) else
    >>>> stop("\'seasonal\' is of the wrong length")
    >>> 
    >>> I think you're right about this one.

well, actually, the mishap is larger:

Reading the help page for arima,  'seasonal' is documented as

 seasonal: A specification of the seasonal part of the ARIMA model, plus
           the period (which defaults to ?frequency(x)?).  This may be a
           list with components ?order? and ?period?, or just a numeric
           vector of length 3 which specifies the seasonal ?order?.  In
           the latter case the default period is used.

Note the
    or just a numeric vector of length 3 ... the seasonal 'order'
part.
If you look at the larger context of the

   else ("'seasonal...

part, it becomes clear that -- in order to fulfill the above
documented behavior, it's not length(order),
but length(seasonal) which should be 3   which leads to the
following change :

@@ -124,10 +124,11 @@
             if(!is.numeric(seasonal$order) || length(seasonal$order) != 3L
                || any(seasonal$order < 0L))
                 stop("'seasonal$order' must be a non-negative numeric vector of length 3")
-        } else if(is.numeric(order)) {
-            if(length(order) == 3L) seasonal <- list(order=seasonal)
-            else ("'seasonal' is of the wrong length")
-        } else stop("'seasonal' must be a list with component 'order'")
+        } else if(is.numeric(seasonal)) { # meant to be  seasonal$order
+            if(length(seasonal) != 3L || any(seasonal < 0))
+                stop("if not a list, 'seasonal' must be a non-negative numeric vector of length 3")
+            seasonal <- list(order=seasonal)
+        } else stop("'seasonal' must be a list with component 'order' or length-3 vector")
 

... I still plan to commit this, but it may well be that this
change will wake up arima() use that was buggy and never detected
till now.

Martin


From norbert@kuder @end|ng |rom gm@||@com  Fri Jan  3 17:13:36 2025
From: norbert@kuder @end|ng |rom gm@||@com (Norbert Kuder)
Date: Fri, 3 Jan 2025 17:13:36 +0100
Subject: [Rd] Possible issue in stats/arima.R package
In-Reply-To: <26486.64727.599697.148053@stat.math.ethz.ch>
References: <CAMUMQUSh5t2sazypdiAeOSJ2MQssNfb89jQJvvBwRbA1PwAqeA@mail.gmail.com>
 <822e67f1-5900-4355-b231-a09c8691d4ae@gmail.com>
 <e93186db-914d-41cf-b1df-46cbc90af3b6@gmail.com>
 <26486.60482.328642.701605@stat.math.ethz.ch>
 <26486.64727.599697.148053@stat.math.ethz.ch>
Message-ID: <CAMUMQUTp+PoZfUiOAZ=U1tG3PpZokknNrvjtFEg7a7YQ48XFuw@mail.gmail.com>

Martin,

thank you solving this issue. Anyway there is the same bug in arima0.R:

https://github.com/wch/r-source/blob/4a1ed749271c52e60a85e794e6f34b0831efb1ae/src/library/stats/R/arma0.R#L79

Best regards,
Norbert Kuder

czw., 2 sty 2025, 21:53 u?ytkownik Martin Maechler <
maechler at stat.math.ethz.ch> napisa?:

> >>>>> Martin Maechler on Thu, 2 Jan 2025 20:42:58 +0100 writes:
>  >>>>> Duncan Murdoch on Thu, 2 Jan 2025 11:28:45 -0500 writes:
>     >> On 2025-01-02 11:20 a.m., Duncan Murdoch wrote:
>     >>> On 2025-01-02 9:04 a.m., Norbert Kuder wrote:
>     >>>> Hello all,
>     >>>>
>     >>>> I am running R version 4.4.2 (2024-10-31 ucrt) on Windows 10 x64,
> and
>     >>>> noticed something that might be a minor bug (or at least
> inconsistent code)
>     >>>> in the stats/arima.R package.
>     >>>> I have found:
>     >>>> 1. A missing stop() call at line 69:
>     >>>>  if (length(order) == 3) seasonal <- list(order = seasonal) else
>     >>>>    ("\'seasonal\' is of the wrong length")
>     >>>> it should be rather:
>     >>>> if (length(order) == 3) seasonal <- list(order = seasonal) else
>     >>>> stop("\'seasonal\' is of the wrong length")
>     >>>
>     >>> I think you're right about this one.
>
> well, actually, the mishap is larger:
>
> Reading the help page for arima,  'seasonal' is documented as
>
>  seasonal: A specification of the seasonal part of the ARIMA model, plus
>            the period (which defaults to ?frequency(x)?).  This may be a
>            list with components ?order? and ?period?, or just a numeric
>            vector of length 3 which specifies the seasonal ?order?.  In
>            the latter case the default period is used.
>
> Note the
>     or just a numeric vector of length 3 ... the seasonal 'order'
> part.
> If you look at the larger context of the
>
>    else ("'seasonal...
>
> part, it becomes clear that -- in order to fulfill the above
> documented behavior, it's not length(order),
> but length(seasonal) which should be 3   which leads to the
> following change :
>
> @@ -124,10 +124,11 @@
>              if(!is.numeric(seasonal$order) || length(seasonal$order) != 3L
>                 || any(seasonal$order < 0L))
>                  stop("'seasonal$order' must be a non-negative numeric
> vector of length 3")
> -        } else if(is.numeric(order)) {
> -            if(length(order) == 3L) seasonal <- list(order=seasonal)
> -            else ("'seasonal' is of the wrong length")
> -        } else stop("'seasonal' must be a list with component 'order'")
> +        } else if(is.numeric(seasonal)) { # meant to be  seasonal$order
> +            if(length(seasonal) != 3L || any(seasonal < 0))
> +                stop("if not a list, 'seasonal' must be a non-negative
> numeric vector of length 3")
> +            seasonal <- list(order=seasonal)
> +        } else stop("'seasonal' must be a list with component 'order' or
> length-3 vector")
>
>
> ... I still plan to commit this, but it may well be that this
> change will wake up arima() use that was buggy and never detected
> till now.
>
> Martin
>
>
>

	[[alternative HTML version deleted]]


From m@ech|er @end|ng |rom @t@t@m@th@ethz@ch  Fri Jan  3 17:22:34 2025
From: m@ech|er @end|ng |rom @t@t@m@th@ethz@ch (Martin Maechler)
Date: Fri, 3 Jan 2025 17:22:34 +0100
Subject: [Rd] Possible issue in stats/arima.R package
In-Reply-To: <26486.60482.328642.701605@stat.math.ethz.ch>
References: <CAMUMQUSh5t2sazypdiAeOSJ2MQssNfb89jQJvvBwRbA1PwAqeA@mail.gmail.com>
 <822e67f1-5900-4355-b231-a09c8691d4ae@gmail.com>
 <e93186db-914d-41cf-b1df-46cbc90af3b6@gmail.com>
 <26486.60482.328642.701605@stat.math.ethz.ch>
Message-ID: <26488.3786.644216.114494@stat.math.ethz.ch>

>>>>> Martin Maechler on Thu, 2 Jan 2025 20:42:58 +0100 writes:
  >>>>> Duncan Murdoch on Thu, 2 Jan 2025 11:28:45 -0500 writes:

    >> On 2025-01-02 11:20 a.m., Duncan Murdoch wrote:
    >>> On 2025-01-02 9:04 a.m., Norbert Kuder wrote:
    >>>> Hello all,
    >>>> 
    >>>> I am running R version 4.4.2 (2024-10-31 ucrt) on Windows 10 x64, and
    >>>> noticed something that might be a minor bug (or at least inconsistent code)
    >>>> in the stats/arima.R package.

    ....................

    >>>> 2. An unused 'mod' variable assignment at line 190:
    >>>> 
    >>>> mod <- makeARIMA(trarma[[1]], trarma[[2]], Delta, kappa, SSinit)
    >>>> 
    >>>> I am trying to confirm whether this is intended behavior or possibly an
    >>>> overlooked detail. Could someone please clarify if the current logic is
    >>>> correct?

    >> Mystery solved:  code like this appears several times in that file.  In 
    >> the occurrence here:

    >> https://github.com/wch/r-source/blob/4a1ed749271c52e60a85e794e6f34b0831efb1ae/src/library/stats/R/arima.R#L293

    >> it does appear that the mod value isn't being used.

    >> Duncan Murdoch

    > Thank you, Norbert and Duncan.
    > A little bit (unfinished)  aRcheology showed that both parts
    > have been in the arima code since Dec 11 2003 (when the code, i.e., the
    > whole package 'ts') was moved / merged into package 'stats'.

    > I'll fix and quickly test the change, and then commit it.

and testing quickly revealed what is obvious in hindsight:
When minimizing the negative log likelihood, in

    optim(<p>, armafn, ...)

the armafn() is called of course and it *does* need the model,
i.e., `mod`.

==> the 2nd "inconsistency  was *not* a mistake at all: The

    mod <- makeARIMA(....)

line has clearly been necessary all along.

Martin


From norbert@kuder @end|ng |rom gm@||@com  Fri Jan  3 18:02:16 2025
From: norbert@kuder @end|ng |rom gm@||@com (Norbert Kuder)
Date: Fri, 3 Jan 2025 18:02:16 +0100
Subject: [Rd] stats/ar.R issue - else branch never used
Message-ID: <CAMUMQUSHKprCOdv9RsmhtwHb9YmUm9L=cbiFqE5mFy2u-cYZZQ@mail.gmail.com>

Hello,

There is another issue in stats/ar.R:

https://github.com/wch/r-source/blob/4a1ed749271c52e60a85e794e6f34b0831efb1ae/src/library/stats/R/ar.R#L142
https://github.com/wch/r-source/blob/4a1ed749271c52e60a85e794e6f34b0831efb1ae/src/library/stats/R/ar.R#L429
https://github.com/wch/r-source/blob/4a1ed749271c52e60a85e794e6f34b0831efb1ae/src/library/stats/R/ar.R#L570

When aic is passed as a boolean (T/F), the code does the following:

maic <- min(aic)      # 0 if F, 1 if T
xaic <- setNames(if(is.finite(maic)) xaic - min(xaic) else
                                                    ifelse(xaic == maic, 0,
Inf), 0L:order.max)

Because maic is always 0 or 1, is.finite(maic) is always T, so the else
branch (ifelse(xaic == maic, 0, Inf)) never executes.

Please check if my finding is valid.

Best regards,
Norbert Kuder

	[[alternative HTML version deleted]]


From norbert@kuder @end|ng |rom gm@||@com  Fri Jan  3 19:06:14 2025
From: norbert@kuder @end|ng |rom gm@||@com (Norbert Kuder)
Date: Fri, 3 Jan 2025 19:06:14 +0100
Subject: [Rd] stats/HoltWinters.R inverted logic in seasonal in R and C
Message-ID: <CAMUMQUTbwVX6SrojJiH654mfVrzD4ur4bipi22FfOW4qFRtOKQ@mail.gmail.com>

Hello,

I have noticed a potentially confusing implementation in the HoltWinters
function regarding the seasonal parameter mapping between R and C code:
https://github.com/wch/r-source/blob/4a1ed749271c52e60a85e794e6f34b0831efb1ae/src/library/stats/R/HoltWinters.R#L98
The C code interprets a seasonal value of 1 as additive and 0 as
multiplicative.
The R seasonal can be "additive" or "multiplicative", so the R code must
invert the logic when calling C.

The proposed solution is to define a seasonalChoice variable:

hw <- function(x, alpha, beta, gamma, seasonal, start.time, f, ...) {
    lenx <- length(x)
    seasonalChoice <- if (seasonal == "multiplicative") 0L else 1L

    .C(C_HoltWinters,
        as.double(x),
        lenx,
        as.double(max(min(alpha, 1), 0)),
        as.double(max(min(beta, 1), 0)),
        as.double(max(min(gamma, 1), 0)),
        as.integer(start.time),
        as.integer(seasonalChoice),
        as.integer(f),
        as.integer(!is.logical(beta) || beta),
        as.integer(!is.logical(gamma) || gamma),
        ...
    )
}

Please check the proposed solution.

Regards,
Norbert Kuder

	[[alternative HTML version deleted]]


From thebudget72 @end|ng |rom gm@||@com  Sat Jan  4 07:25:42 2025
From: thebudget72 @end|ng |rom gm@||@com (Philip Rogers)
Date: Sat, 4 Jan 2025 07:25:42 +0100
Subject: [Rd] Fix documentation about <- and = differences
Message-ID: <eaec60d1-ef4c-4a8f-a036-53c348ad9ba7@gmail.com>

Hello R devs,

this StackOverflow answer says that the R documentation is wrong: 
https://stackoverflow.com/a/51564252/1719931

Can we fi it?

Best,

&#8203;
	[[alternative HTML version deleted]]


From murdoch@dunc@n @end|ng |rom gm@||@com  Sat Jan  4 17:29:24 2025
From: murdoch@dunc@n @end|ng |rom gm@||@com (Duncan Murdoch)
Date: Sat, 4 Jan 2025 11:29:24 -0500
Subject: [Rd] Fix documentation about <- and = differences
In-Reply-To: <eaec60d1-ef4c-4a8f-a036-53c348ad9ba7@gmail.com>
References: <eaec60d1-ef4c-4a8f-a036-53c348ad9ba7@gmail.com>
Message-ID: <bae8a9b6-1253-4108-8133-e275193ec45c@gmail.com>

On 2025-01-04 1:25 a.m., Philip Rogers wrote:
> Hello R devs,
> 
> this StackOverflow answer says that the R documentation is wrong:
> https://stackoverflow.com/a/51564252/1719931
> 
> Can we fi it?

Why do you think the SO answer is right and the docs are wrong?  Maybe 
the parser is just missing a user error.

My own feeling is that any use of "=" as an assignment operator is too much.

Duncan Murdoch


From murdoch@dunc@n @end|ng |rom gm@||@com  Sat Jan  4 17:55:01 2025
From: murdoch@dunc@n @end|ng |rom gm@||@com (Duncan Murdoch)
Date: Sat, 4 Jan 2025 11:55:01 -0500
Subject: [Rd] Fix documentation about <- and = differences
In-Reply-To: <eaec60d1-ef4c-4a8f-a036-53c348ad9ba7@gmail.com>
References: <eaec60d1-ef4c-4a8f-a036-53c348ad9ba7@gmail.com>
Message-ID: <69d4067a-b140-4f41-b7eb-a01b6d44f32a@gmail.com>

On 2025-01-04 1:25 a.m., Philip Rogers wrote:
> Hello R devs,
> 
> this StackOverflow answer says that the R documentation is wrong:
> https://stackoverflow.com/a/51564252/1719931
> 
> Can we fi it?

By the way, the SO answer is wrong about the history of this.  It says 
that this message:  https://developer.r-project.org/equalAssign.html is 
the "original explanation by John Chambers", but in fact John committed 
the text that is still present in the docs several months earlier,
to both the `?assign` help page (rev 15467, 2001-08-13) and to the 
equalAssign.html document on developer.r-project.org (rev 608, same day).

Duncan Murdoch


From ro|@nd@|u@@ @end|ng |rom thuenen@de  Tue Jan  7 07:28:37 2025
From: ro|@nd@|u@@ @end|ng |rom thuenen@de (=?UTF-8?Q?Roland_Fu=C3=9F?=)
Date: Tue, 7 Jan 2025 07:28:37 +0100
Subject: [Rd] Small typo in nlme documentation
Message-ID: <96524c6e-ba08-4388-86cf-fcc711c5aa4e@thuenen.de>

Hi,

I've noticed a small typo in `help("varClasses", "nlme")`. Contrary to 
what the "Note" says, variance classes need a method for `Initialize` 
(capital i) and not `initialize`.

Best regards,

Roland

-- 
Dr. Roland Fu?

Th?nen-Institut f?r Agrarklimaschutz/
Th?nen Institute of Climate-Smart Agriculture

Bundesallee 65
D-38116 Braunschweig, Germany

Tel./Webex: ++49 531 25701967
Email: roland.fuss at thuenen.de

Arbeitsgruppe "Emissionsberichterstattung"/
Working group "Emission Inventories"
Email: emissionsinventare at thuenen.de

Das Johann Heinrich von Th?nen-Institut,
Bundesforschungsinstitut f?r L?ndliche R?ume,
Wald und Fischerei ? kurz: Th?nen-Institut ?
besteht aus 15 Fachinstituten, die in den
Bereichen ?konomie, ?kologie und Technologie
forschen und die Politik beraten.

The Johann Heinrich von Th?nen Institute,
Federal Research Institute for Rural Areas,
Forestry and Fisheries ? Th?nen Institute in brief ?
consists of 15 specialized institutes that
carry out research and provide policy advice
in the fields of economy, ecology and technology.


From @eb@meyer @end|ng |rom |@u@de  Tue Jan  7 13:43:36 2025
From: @eb@meyer @end|ng |rom |@u@de (Sebastian Meyer)
Date: Tue, 7 Jan 2025 13:43:36 +0100
Subject: [Rd] Small typo in nlme documentation
In-Reply-To: <96524c6e-ba08-4388-86cf-fcc711c5aa4e@thuenen.de>
References: <96524c6e-ba08-4388-86cf-fcc711c5aa4e@thuenen.de>
Message-ID: <10fd5cb7-4e62-4672-9da6-e07974993a69@fau.de>

Thanks. Fixed in the trunk.

	Sebastian Meyer


Am 07.01.25 um 07:28 schrieb Roland Fu? via R-devel:
> Hi,
> 
> I've noticed a small typo in `help("varClasses", "nlme")`. Contrary to
> what the "Note" says, variance classes need a method for `Initialize`
> (capital i) and not `initialize`.
> 
> Best regards,
> 
> Roland
>


From bbo|ker @end|ng |rom gm@||@com  Wed Jan  8 16:57:47 2025
From: bbo|ker @end|ng |rom gm@||@com (Ben Bolker)
Date: Wed, 8 Jan 2025 10:57:47 -0500
Subject: [Rd] binomial()$linkinv no longer accepts integer values
Message-ID: <7dfe81b2-c7ec-49fe-8955-9c41a5771d24@gmail.com>


As of r87537, binomial()$linkinv no longer accepts integer arguments.

binomial()$linkinv(1.0)  ## 0.7310586
binomial()$linkinv(1L)

Error in binomial()$linkinv(1L) :
   REAL() can only be applied to a 'numeric', not a 'integer'

   Since R is usually so permissive/sloppy with the distinction between 
integers and numeric/doubles, I'd argue that this is a bug ...

   (This came up because it happens to break lme4's tests.)

    I haven't done the archaeology to figure out when this broke/exactly 
what change in the R code base broke it: it happened within the last 
month or so and it's certainly something upstream of the linkinv 
function itself, as (according to 'git blame') nothing in that function 
has changed in the last 4 years ... (if it were of interest I could 'git 
bisect' to figure it out but maybe someone will save me the trouble ...)

   Thoughts, insights?  Should I post this to r-bugzilla?  Or suck it up 
and accept it as the new reality?

   cheers
    Ben Bolker

====
binomial()$linkinv is:

function (eta)
.Call(C_logit_linkinv, eta)
<environment: namespace:stats>

Here is the body of the function in C code:

https://github.com/r-devel/r-svn/blob/195ab0870a8131d01492f8f1d3a2ad514bc7e040/src/library/stats/src/family.c#L72C1-L89C2

SEXP logit_linkinv(SEXP eta)
{
     SEXP ans = PROTECT(shallow_duplicate(eta));
     int i, n = LENGTH(eta);
     double *rans = REAL(ans), *reta = REAL(eta);

     if (!n || !isReal(eta))
	error(_("Argument %s must be a nonempty numeric vector"), "eta");
     for (i = 0; i < n; i++) {
	double etai = reta[i], tmp;
	tmp = (etai < MTHRESH) ? DBL_EPSILON :
	    ((etai > THRESH) ? INVEPS : exp(etai));
	rans[i] = x_d_opx(tmp);
     }
     UNPROTECT(1);
     return ans;
}


From |kry|ov @end|ng |rom d|@root@org  Wed Jan  8 17:20:11 2025
From: |kry|ov @end|ng |rom d|@root@org (Ivan Krylov)
Date: Wed, 8 Jan 2025 19:20:11 +0300
Subject: [Rd] binomial()$linkinv no longer accepts integer values
In-Reply-To: <7dfe81b2-c7ec-49fe-8955-9c41a5771d24@gmail.com>
References: <7dfe81b2-c7ec-49fe-8955-9c41a5771d24@gmail.com>
Message-ID: <20250108192011.01b9155b@Tarkus>

On Wed, 8 Jan 2025 10:57:47 -0500
Ben Bolker <bbolker at gmail.com> wrote:

> I haven't done the archaeology to figure out when this broke/exactly 
> what change in the R code base broke it: it happened within the last 
> month or so

binomial() itself exhibits this property even in R-4.2.2 from more than
two years ago:

R -q -s -e 'getRversion(); binomial()$linkinv(1L)'
# [1] ?4.2.2?
# Error in binomial()$linkinv(1L) : 
#   REAL() can only be applied to a 'numeric', not a 'integer'

It's the `etas` [1] that suddenly became integer due to a change in
seq.int():

R -q -s -e 'str(seq.int(-8, 8, by=1))'
# num [1:17] -8 -7 -6 -5 -4 -3 -2 -1 0 1 ...
R-devel -q -s -e 'str(seq.int(-8, 8, by=1))'
# int [1:17] -8 -7 -6 -5 -4 -3 -2 -1 0 1 ...

-- 
Best regards,
Ivan

[1]
https://github.com/lme4/lme4/blob/54c54a320c23b34fea2f7e613928d1ebe7a3fd37/tests/testthat/test-glmFamily.R#L10C5-L10C25


From bbo|ker @end|ng |rom gm@||@com  Wed Jan  8 17:26:24 2025
From: bbo|ker @end|ng |rom gm@||@com (Ben Bolker)
Date: Wed, 8 Jan 2025 11:26:24 -0500
Subject: [Rd] binomial()$linkinv no longer accepts integer values
In-Reply-To: <20250108192011.01b9155b@Tarkus>
References: <7dfe81b2-c7ec-49fe-8955-9c41a5771d24@gmail.com>
 <20250108192011.01b9155b@Tarkus>
Message-ID: <efb07b88-fbb0-468e-95d4-307f18e7127e@gmail.com>

   Thanks, that makes sense.

   I guess if it never worked for integers (or hasn't worked in a long 
time, at least) then it doesn't need to be fixed/changed ...

   cheers
    Ben


On 2025-01-08 11:20 a.m., Ivan Krylov wrote:
> On Wed, 8 Jan 2025 10:57:47 -0500
> Ben Bolker <bbolker at gmail.com> wrote:
> 
>> I haven't done the archaeology to figure out when this broke/exactly
>> what change in the R code base broke it: it happened within the last
>> month or so
> 
> binomial() itself exhibits this property even in R-4.2.2 from more than
> two years ago:
> 
> R -q -s -e 'getRversion(); binomial()$linkinv(1L)'
> # [1] ?4.2.2?
> # Error in binomial()$linkinv(1L) :
> #   REAL() can only be applied to a 'numeric', not a 'integer'
> 
> It's the `etas` [1] that suddenly became integer due to a change in
> seq.int():
> 
> R -q -s -e 'str(seq.int(-8, 8, by=1))'
> # num [1:17] -8 -7 -6 -5 -4 -3 -2 -1 0 1 ...
> R-devel -q -s -e 'str(seq.int(-8, 8, by=1))'
> # int [1:17] -8 -7 -6 -5 -4 -3 -2 -1 0 1 ...
> 

-- 
Dr. Benjamin Bolker
Professor, Mathematics & Statistics and Biology, McMaster University
 > E-mail is sent at my convenience; I don't expect replies outside of 
working hours.


From tom@@@k@||ber@ @end|ng |rom gm@||@com  Wed Jan  8 17:56:08 2025
From: tom@@@k@||ber@ @end|ng |rom gm@||@com (Tomas Kalibera)
Date: Wed, 8 Jan 2025 17:56:08 +0100
Subject: [Rd] binomial()$linkinv no longer accepts integer values
In-Reply-To: <efb07b88-fbb0-468e-95d4-307f18e7127e@gmail.com>
References: <7dfe81b2-c7ec-49fe-8955-9c41a5771d24@gmail.com>
 <20250108192011.01b9155b@Tarkus>
 <efb07b88-fbb0-468e-95d4-307f18e7127e@gmail.com>
Message-ID: <10d2110b-1119-4f97-b782-cfc01dafd64f@gmail.com>


On 1/8/25 17:26, Ben Bolker wrote:
> Thanks, that makes sense.
>
> ? I guess if it never worked for integers (or hasn't worked in a long 
> time, at least) then it doesn't need to be fixed/changed ...

Still you found out that the type check and use of REAL() in the 
function is in wrong order. Instead of

"REAL() can only be applied to a 'numeric', not a 'integer' "

one should get

"Argument eta must be a nonempty numeric vector"

Fixed in R-devel,

Best,
Tomas


>
> ? cheers
> ?? Ben
>
>
> On 2025-01-08 11:20 a.m., Ivan Krylov wrote:
>> On Wed, 8 Jan 2025 10:57:47 -0500
>> Ben Bolker <bbolker at gmail.com> wrote:
>>
>>> I haven't done the archaeology to figure out when this broke/exactly
>>> what change in the R code base broke it: it happened within the last
>>> month or so
>>
>> binomial() itself exhibits this property even in R-4.2.2 from more than
>> two years ago:
>>
>> R -q -s -e 'getRversion(); binomial()$linkinv(1L)'
>> # [1] ?4.2.2?
>> # Error in binomial()$linkinv(1L) :
>> #?? REAL() can only be applied to a 'numeric', not a 'integer'
>>
>> It's the `etas` [1] that suddenly became integer due to a change in
>> seq.int():
>>
>> R -q -s -e 'str(seq.int(-8, 8, by=1))'
>> # num [1:17] -8 -7 -6 -5 -4 -3 -2 -1 0 1 ...
>> R-devel -q -s -e 'str(seq.int(-8, 8, by=1))'
>> # int [1:17] -8 -7 -6 -5 -4 -3 -2 -1 0 1 ...
>>
>


From @|mon@urb@nek @end|ng |rom R-project@org  Wed Jan  8 23:16:45 2025
From: @|mon@urb@nek @end|ng |rom R-project@org (Simon Urbanek)
Date: Thu, 9 Jan 2025 11:16:45 +1300
Subject: [Rd] binomial()$linkinv no longer accepts integer values
In-Reply-To: <10d2110b-1119-4f97-b782-cfc01dafd64f@gmail.com>
References: <7dfe81b2-c7ec-49fe-8955-9c41a5771d24@gmail.com>
 <20250108192011.01b9155b@Tarkus>
 <efb07b88-fbb0-468e-95d4-307f18e7127e@gmail.com>
 <10d2110b-1119-4f97-b782-cfc01dafd64f@gmail.com>
Message-ID: <CB0DF90B-8667-4301-BC61-8F532C26CFBA@R-project.org>



> On 9 Jan 2025, at 05:56, Tomas Kalibera <tomas.kalibera at gmail.com> wrote:
> 
> 
> On 1/8/25 17:26, Ben Bolker wrote:
>> Thanks, that makes sense.
>> 
>>   I guess if it never worked for integers (or hasn't worked in a long time, at least) then it doesn't need to be fixed/changed ...
> 
> Still you found out that the type check and use of REAL() in the function is in wrong order. Instead of
> 
> "REAL() can only be applied to a 'numeric', not a 'integer' "
> 
> one should get
> 
> "Argument eta must be a nonempty numeric vector"
> 


But that is in practice a bit ambiguous, because

> is.numeric(1L)
[1] TRUE

and integers are also of the mode numeric, so I?d argue that the previous error was more informative. I would either re-word the error to explicitly exclude integers, or coerce integers to doubles. Technically the latter would be more consistent with R, but if someone explicitly passes an integer to the inverse logit function in a real application then chances are it?s not intentional.

Cheers,
Simon
 

> Fixed in R-devel,
> 
> Best,
> Tomas
> 
> 
>> 
>>   cheers
>>    Ben
>> 
>> 
>> On 2025-01-08 11:20 a.m., Ivan Krylov wrote:
>>> On Wed, 8 Jan 2025 10:57:47 -0500
>>> Ben Bolker <bbolker at gmail.com> wrote:
>>> 
>>>> I haven't done the archaeology to figure out when this broke/exactly
>>>> what change in the R code base broke it: it happened within the last
>>>> month or so
>>> 
>>> binomial() itself exhibits this property even in R-4.2.2 from more than
>>> two years ago:
>>> 
>>> R -q -s -e 'getRversion(); binomial()$linkinv(1L)'
>>> # [1] ?4.2.2?
>>> # Error in binomial()$linkinv(1L) :
>>> #   REAL() can only be applied to a 'numeric', not a 'integer'
>>> 
>>> It's the `etas` [1] that suddenly became integer due to a change in
>>> seq.int():
>>> 
>>> R -q -s -e 'str(seq.int(-8, 8, by=1))'
>>> # num [1:17] -8 -7 -6 -5 -4 -3 -2 -1 0 1 ...
>>> R-devel -q -s -e 'str(seq.int(-8, 8, by=1))'
>>> # int [1:17] -8 -7 -6 -5 -4 -3 -2 -1 0 1 ...
>>> 
>> 
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
> 


From m@ech|er @end|ng |rom @t@t@m@th@ethz@ch  Thu Jan  9 11:13:11 2025
From: m@ech|er @end|ng |rom @t@t@m@th@ethz@ch (Martin Maechler)
Date: Thu, 9 Jan 2025 11:13:11 +0100
Subject: [Rd] binomial()$linkinv no longer accepts integer values
In-Reply-To: <CB0DF90B-8667-4301-BC61-8F532C26CFBA@R-project.org>
References: <7dfe81b2-c7ec-49fe-8955-9c41a5771d24@gmail.com>
 <20250108192011.01b9155b@Tarkus>
 <efb07b88-fbb0-468e-95d4-307f18e7127e@gmail.com>
 <10d2110b-1119-4f97-b782-cfc01dafd64f@gmail.com>
 <CB0DF90B-8667-4301-BC61-8F532C26CFBA@R-project.org>
Message-ID: <26495.41271.191764.790549@stat.math.ethz.ch>

>>>>> "SU" == Simon Urbanek 
>>>>>     on Thu, 9 Jan 2025 11:16:45 +1300 writes:

    >> On 9 Jan 2025, at 05:56, Tomas Kalibera <tomas.kalibera at gmail.com> wrote:
    >> 
    >> 
    >> On 1/8/25 17:26, Ben Bolker wrote:
    >>> Thanks, that makes sense.
    >>> 
    >>> I guess if it never worked for integers (or hasn't worked in a long time, at least) then it doesn't need to be fixed/changed ...
    >> 
    >> Still you found out that the type check and use of REAL() in the function is in wrong order. Instead of
    >> 
    >> "REAL() can only be applied to a 'numeric', not a 'integer' "
    >> 
    >> one should get
    >> 
    >> "Argument eta must be a nonempty numeric vector"
    >> 


    SU> But that is in practice a bit ambiguous, because

    >> is.numeric(1L)
    SU> [1] TRUE

    SU> and integers are also of the mode numeric, so I?d argue that the previous error was more informative. I would either re-word the error to explicitly exclude integers, or coerce integers to doubles. Technically the latter would be more consistent with R, but if someone explicitly passes an integer to the inverse logit function in a real application then chances are it?s not intentional.

I agree with Simon, I think we should do the extra step and
allow integer (type, not just value) for binomial data inside
the family.c code.

I'll have a look, too.
Martin

    SU> Cheers,
    SU> Simon
 

    >> Fixed in R-devel,
    >> 
    >> Best,
    >> Tomas
    >> 
    >>> 
    >>> cheers
    >>> Ben
    >>> 
    >>> 
    >>> On 2025-01-08 11:20 a.m., Ivan Krylov wrote:
    >>>> On Wed, 8 Jan 2025 10:57:47 -0500
    >>>> Ben Bolker <bbolker at gmail.com> wrote:
    >>>> 
    >>>>> I haven't done the archaeology to figure out when this broke/exactly
    >>>>> what change in the R code base broke it: it happened within the last
    >>>>> month or so
    >>>> 
    >>>> binomial() itself exhibits this property even in R-4.2.2 from more than
    >>>> two years ago:
    >>>> 
    >>>> R -q -s -e 'getRversion(); binomial()$linkinv(1L)'
    >>>> # [1] ?4.2.2?
    >>>> # Error in binomial()$linkinv(1L) :
    >>>> #   REAL() can only be applied to a 'numeric', not a 'integer'
    >>>> 
    >>>> It's the `etas` [1] that suddenly became integer due to a change in
    >>>> seq.int():
    >>>> 
    >>>> R -q -s -e 'str(seq.int(-8, 8, by=1))'
    >>>> # num [1:17] -8 -7 -6 -5 -4 -3 -2 -1 0 1 ...
    >>>> R-devel -q -s -e 'str(seq.int(-8, 8, by=1))'
    >>>> # int [1:17] -8 -7 -6 -5 -4 -3 -2 -1 0 1 ...


From jeroenoom@ @end|ng |rom gm@||@com  Sat Jan 11 00:16:51 2025
From: jeroenoom@ @end|ng |rom gm@||@com (Jeroen Ooms)
Date: Sat, 11 Jan 2025 00:16:51 +0100
Subject: [Rd] Package compression benchmarks for zstd vs gzip
Message-ID: <CABFfbXvHddYPsHs7j9ZzvTrPo-NX880mbh6=quZWrd1+eCjD=g@mail.gmail.com>

Many distros and browsers these days use zstd as the preferred
compression method. For example if you unpack a .deb or .rpm file on
Debian or Fedora there is zstd archive inside. It is claimed that zstd
offers improved compression over gzip, but (unlike lzma) it has
comparable decompression speed. Maybe it is interesting to get an
estimate of how much R packages would benefit from zstd.

Testing this for source packages and MacOS binary packages it is easy
as we can gunzip and recompress tar.gz files without having to extract
the tarball itself:

  OUTPUT="sizes.txt"
  echo "FILE GZIP ZSTD" > $OUTPUT
  for x in *gz; do
    FILE=$(basename $x)
    GZIP=$(wc -c "$x" | awk '{print $1}')
    ZSTD=$(gunzip -c $x | zstd -19 | wc -c)
    echo "$FILE $GZIP $ZSTD" | tee -a $OUTPUT
  done

Attached are results of running this script on the 500 most downloaded
CRAN packages. It shows about 16% size reduction for sources, and 19%
for binaries.

Zstd is BSD licensed C code that can easily be embedded in any project.

-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: sources.txt
URL: <https://stat.ethz.ch/pipermail/r-devel/attachments/20250111/90f91d5e/attachment.txt>

-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: binaries.txt
URL: <https://stat.ethz.ch/pipermail/r-devel/attachments/20250111/90f91d5e/attachment-0001.txt>

From @vr@h@m@@d|er @end|ng |rom gm@||@com  Sun Jan 12 00:41:28 2025
From: @vr@h@m@@d|er @end|ng |rom gm@||@com (Avraham Adler)
Date: Sat, 11 Jan 2025 18:41:28 -0500
Subject: [Rd] Package compression benchmarks for zstd vs gzip
In-Reply-To: <CABFfbXvHddYPsHs7j9ZzvTrPo-NX880mbh6=quZWrd1+eCjD=g@mail.gmail.com>
References: <CABFfbXvHddYPsHs7j9ZzvTrPo-NX880mbh6=quZWrd1+eCjD=g@mail.gmail.com>
Message-ID: <CAL6gwnL0eLEFu0kyxqubmy1CeqnCGUa3FqQ+wFUghEazyxEV1g@mail.gmail.com>

zstd is accessible within R using the archive package [1]. I use it
all the time when saving large objects, using code I adapted from [2].
Is your suggestion to import the libraries/source code into base?

[1] https://CRAN.R-project.org/package=archive
[2] https://coolbutuseless.github.io/2018/10/02/using-lz4-and-zstandard-to-compress-files-with-saverds/

On Fri, Jan 10, 2025 at 6:17?PM Jeroen Ooms <jeroenooms at gmail.com> wrote:
>
> Many distros and browsers these days use zstd as the preferred
> compression method. For example if you unpack a .deb or .rpm file on
> Debian or Fedora there is zstd archive inside. It is claimed that zstd
> offers improved compression over gzip, but (unlike lzma) it has
> comparable decompression speed. Maybe it is interesting to get an
> estimate of how much R packages would benefit from zstd.
>
> Testing this for source packages and MacOS binary packages it is easy
> as we can gunzip and recompress tar.gz files without having to extract
> the tarball itself:
>
>   OUTPUT="sizes.txt"
>   echo "FILE GZIP ZSTD" > $OUTPUT
>   for x in *gz; do
>     FILE=$(basename $x)
>     GZIP=$(wc -c "$x" | awk '{print $1}')
>     ZSTD=$(gunzip -c $x | zstd -19 | wc -c)
>     echo "$FILE $GZIP $ZSTD" | tee -a $OUTPUT
>   done
>
> Attached are results of running this script on the 500 most downloaded
> CRAN packages. It shows about 16% size reduction for sources, and 19%
> for binaries.
>
> Zstd is BSD licensed C code that can easily be embedded in any project.
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From henr|k@bengt@@on @end|ng |rom gm@||@com  Sun Jan 12 01:05:46 2025
From: henr|k@bengt@@on @end|ng |rom gm@||@com (Henrik Bengtsson)
Date: Sat, 11 Jan 2025 16:05:46 -0800
Subject: [Rd] Package compression benchmarks for zstd vs gzip
In-Reply-To: <CAL6gwnL0eLEFu0kyxqubmy1CeqnCGUa3FqQ+wFUghEazyxEV1g@mail.gmail.com>
References: <CABFfbXvHddYPsHs7j9ZzvTrPo-NX880mbh6=quZWrd1+eCjD=g@mail.gmail.com>
 <CAL6gwnL0eLEFu0kyxqubmy1CeqnCGUa3FqQ+wFUghEazyxEV1g@mail.gmail.com>
Message-ID: <CAFDcVCS6kfkqzwR7ximTu=EJiHeuSBa0hU_r0Ze7yRi87_cLbw@mail.gmail.com>

Can't speak for Jeroen, but it sounds like it's worth adding support
for tar.zstd package files, just like how tar.gz, tar.xz, and
tar.bzip2 are currently supported. I'd also argue for support zstd
compression throughout R, including adding zstdfile(), support for
saveRDS(..., compress = "zstd"), and so on. Then it could be discussed
later what the default(s) should be.

It's probably also worth looking at package compression with 'xz'
compression. In [1], Mike FC has a graph where 'bzip2' and 'xz' seem
to give the best compression ratios, at least for RDS files.

FWIW, Mike FC submitted the 'zstdlite' package [1] to CRAN about a
year ago, but it was removed, resubmitted, then removed again. I
believe this was Mike FC first ever CRAN submission, but I think they
eventually gave up. From
https://cran.r-project.org/src/contrib/PACKAGES.in:

Package: zstdlite
X-CRAN-Comment: Removed on 2024-03-18 for repeated policy violation.
  .
  Does not look for suitable system 'libzstd'.
  Spams personal email addresses of team members.
X-CRAN-History: Removed on 2024-03-13 for policy violation and
misrepresentation of copyright holder(s).
  .
  Does not even attempt to use system 'libzstd'.
  Back on CRAN on 2024-03-17.

[1] https://github.com/coolbutuseless/zstdlite

/Henrik

On Sat, Jan 11, 2025 at 3:41?PM Avraham Adler <avraham.adler at gmail.com> wrote:
>
> zstd is accessible within R using the archive package [1]. I use it
> all the time when saving large objects, using code I adapted from [2].
> Is your suggestion to import the libraries/source code into base?
>
> [1] https://CRAN.R-project.org/package=archive
> [2] https://coolbutuseless.github.io/2018/10/02/using-lz4-and-zstandard-to-compress-files-with-saverds/
>
> On Fri, Jan 10, 2025 at 6:17?PM Jeroen Ooms <jeroenooms at gmail.com> wrote:
> >
> > Many distros and browsers these days use zstd as the preferred
> > compression method. For example if you unpack a .deb or .rpm file on
> > Debian or Fedora there is zstd archive inside. It is claimed that zstd
> > offers improved compression over gzip, but (unlike lzma) it has
> > comparable decompression speed. Maybe it is interesting to get an
> > estimate of how much R packages would benefit from zstd.
> >
> > Testing this for source packages and MacOS binary packages it is easy
> > as we can gunzip and recompress tar.gz files without having to extract
> > the tarball itself:
> >
> >   OUTPUT="sizes.txt"
> >   echo "FILE GZIP ZSTD" > $OUTPUT
> >   for x in *gz; do
> >     FILE=$(basename $x)
> >     GZIP=$(wc -c "$x" | awk '{print $1}')
> >     ZSTD=$(gunzip -c $x | zstd -19 | wc -c)
> >     echo "$FILE $GZIP $ZSTD" | tee -a $OUTPUT
> >   done
> >
> > Attached are results of running this script on the 500 most downloaded
> > CRAN packages. It shows about 16% size reduction for sources, and 19%
> > for binaries.
> >
> > Zstd is BSD licensed C code that can easily be embedded in any project.
> > ______________________________________________
> > R-devel at r-project.org mailing list
> > https://stat.ethz.ch/mailman/listinfo/r-devel
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From |kry|ov @end|ng |rom d|@root@org  Sun Jan 12 09:14:40 2025
From: |kry|ov @end|ng |rom d|@root@org (Ivan Krylov)
Date: Sun, 12 Jan 2025 11:14:40 +0300
Subject: [Rd] Package compression benchmarks for zstd vs gzip
In-Reply-To: <CAFDcVCS6kfkqzwR7ximTu=EJiHeuSBa0hU_r0Ze7yRi87_cLbw@mail.gmail.com>
References: <CABFfbXvHddYPsHs7j9ZzvTrPo-NX880mbh6=quZWrd1+eCjD=g@mail.gmail.com>
 <CAL6gwnL0eLEFu0kyxqubmy1CeqnCGUa3FqQ+wFUghEazyxEV1g@mail.gmail.com>
 <CAFDcVCS6kfkqzwR7ximTu=EJiHeuSBa0hU_r0Ze7yRi87_cLbw@mail.gmail.com>
Message-ID: <20250112111440.598e4f54@Tarkus>

On Sat, 11 Jan 2025 16:05:46 -0800
Henrik Bengtsson <henrik.bengtsson at gmail.com> wrote:

> It's probably also worth looking at package compression with 'xz'
> compression. In [1], Mike FC has a graph where 'bzip2' and 'xz' seem
> to give the best compression ratios, at least for RDS files.

'bzip2' can be surprisingly good on very repetitive payloads. It
compresses 0x80000000 zero bytes to only 1.5 KiB, much better than 'xz
-9' with 305 KiB (with compression settings not making much
difference), although the compression is not perfect. One terabyte of
zeros can be compressed to 697202 bytes of repetitive compressed stream
that can be bzipped further to 248 bytes.

Binary packages are probably the most obvious target for new
compression methods because there is no need to install them on older
versions of R.

-- 
Best regards,
Ivan


From @|mon@urb@nek @end|ng |rom R-project@org  Mon Jan 13 02:26:14 2025
From: @|mon@urb@nek @end|ng |rom R-project@org (Simon Urbanek)
Date: Mon, 13 Jan 2025 14:26:14 +1300
Subject: [Rd] Package compression benchmarks for zstd vs gzip
In-Reply-To: <CABFfbXvHddYPsHs7j9ZzvTrPo-NX880mbh6=quZWrd1+eCjD=g@mail.gmail.com>
References: <CABFfbXvHddYPsHs7j9ZzvTrPo-NX880mbh6=quZWrd1+eCjD=g@mail.gmail.com>
Message-ID: <16544526-1245-4DF8-995E-F9289B8CF0EA@R-project.org>

I think the first step would have to be to add zstd support to R. zstd is a bit controversial (as shown by the community blowback of the changes you mentioned) and their build system (calling it that is being very generous) is mess so it would require a bit of testing, but it is doable.

That said, assuming the above is solved, we have been debating the change of compression at CRAN in general for a bit, but the assumptions about the file names are built into today?s tools so there would be certainly some fall-out - not just in R, but also the ecosystems around it. As you pointed out, possibly the safest place to start are binaries, since we have tighter control of those and they are used in fewer places.

Personally, I think the higher priority is signing, so as we address that we may just include the compression change with it since it will require some tool changes anyway. I was thinking of using xz as that is more stable, already supported and less controversial, but I don?t think the choice really matters - it just has to be a compression which R supports (zstd and xz have different benefits, so it?s always a trade-off without a clear winner).

Cheers,
Simon


> On 11 Jan 2025, at 12:16, Jeroen Ooms <jeroenooms at gmail.com> wrote:
> 
> Many distros and browsers these days use zstd as the preferred
> compression method. For example if you unpack a .deb or .rpm file on
> Debian or Fedora there is zstd archive inside. It is claimed that zstd
> offers improved compression over gzip, but (unlike lzma) it has
> comparable decompression speed. Maybe it is interesting to get an
> estimate of how much R packages would benefit from zstd.
> 
> Testing this for source packages and MacOS binary packages it is easy
> as we can gunzip and recompress tar.gz files without having to extract
> the tarball itself:
> 
>  OUTPUT="sizes.txt"
>  echo "FILE GZIP ZSTD" > $OUTPUT
>  for x in *gz; do
>    FILE=$(basename $x)
>    GZIP=$(wc -c "$x" | awk '{print $1}')
>    ZSTD=$(gunzip -c $x | zstd -19 | wc -c)
>    echo "$FILE $GZIP $ZSTD" | tee -a $OUTPUT
>  done
> 
> Attached are results of running this script on the 500 most downloaded
> CRAN packages. It shows about 16% size reduction for sources, and 19%
> for binaries.
> 
> Zstd is BSD licensed C code that can easily be embedded in any project.
> <sources.txt><binaries.txt>______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From ht @end|ng |rom he@therturner@net  Wed Jan 15 10:21:59 2025
From: ht @end|ng |rom he@therturner@net (Heather Turner)
Date: Wed, 15 Jan 2025 09:21:59 +0000
Subject: [Rd] Package compression benchmarks for zstd vs gzip
In-Reply-To: <16544526-1245-4DF8-995E-F9289B8CF0EA@R-project.org>
References: <CABFfbXvHddYPsHs7j9ZzvTrPo-NX880mbh6=quZWrd1+eCjD=g@mail.gmail.com>
 <16544526-1245-4DF8-995E-F9289B8CF0EA@R-project.org>
Message-ID: <d2bcbea5-9d62-4946-a883-70555cfe6cd9@app.fastmail.com>

With the changes to add zstd support yesterday, the build of R-devel is failing when zstd is not present, even though the docs say that zstd is optional.

The error comes in building the datasets package, see e.g. https://github.com/r-devel/r-svn/actions/runs/12760693086/job/35566530112.

Best wishes,

Heather

On Mon, Jan 13, 2025, at 1:26 AM, Simon Urbanek wrote:
> I think the first step would have to be to add zstd support to R. zstd 
> is a bit controversial (as shown by the community blowback of the 
> changes you mentioned) and their build system (calling it that is being 
> very generous) is mess so it would require a bit of testing, but it is 
> doable.
>
> That said, assuming the above is solved, we have been debating the 
> change of compression at CRAN in general for a bit, but the assumptions 
> about the file names are built into today?s tools so there would be 
> certainly some fall-out - not just in R, but also the ecosystems around 
> it. As you pointed out, possibly the safest place to start are 
> binaries, since we have tighter control of those and they are used in 
> fewer places.
>
> Personally, I think the higher priority is signing, so as we address 
> that we may just include the compression change with it since it will 
> require some tool changes anyway. I was thinking of using xz as that is 
> more stable, already supported and less controversial, but I don?t 
> think the choice really matters - it just has to be a compression which 
> R supports (zstd and xz have different benefits, so it?s always a 
> trade-off without a clear winner).
>
> Cheers,
> Simon
>
>
>> On 11 Jan 2025, at 12:16, Jeroen Ooms <jeroenooms at gmail.com> wrote:
>> 
>> Many distros and browsers these days use zstd as the preferred
>> compression method. For example if you unpack a .deb or .rpm file on
>> Debian or Fedora there is zstd archive inside. It is claimed that zstd
>> offers improved compression over gzip, but (unlike lzma) it has
>> comparable decompression speed. Maybe it is interesting to get an
>> estimate of how much R packages would benefit from zstd.
>> 
>> Testing this for source packages and MacOS binary packages it is easy
>> as we can gunzip and recompress tar.gz files without having to extract
>> the tarball itself:
>> 
>>  OUTPUT="sizes.txt"
>>  echo "FILE GZIP ZSTD" > $OUTPUT
>>  for x in *gz; do
>>    FILE=$(basename $x)
>>    GZIP=$(wc -c "$x" | awk '{print $1}')
>>    ZSTD=$(gunzip -c $x | zstd -19 | wc -c)
>>    echo "$FILE $GZIP $ZSTD" | tee -a $OUTPUT
>>  done
>> 
>> Attached are results of running this script on the 500 most downloaded
>> CRAN packages. It shows about 16% size reduction for sources, and 19%
>> for binaries.
>> 
>> Zstd is BSD licensed C code that can easily be embedded in any project.
>> <sources.txt><binaries.txt>______________________________________________
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From @|mon@urb@nek @end|ng |rom R-project@org  Wed Jan 15 13:30:11 2025
From: @|mon@urb@nek @end|ng |rom R-project@org (Simon Urbanek)
Date: Thu, 16 Jan 2025 01:30:11 +1300
Subject: [Rd] Package compression benchmarks for zstd vs gzip
In-Reply-To: <d2bcbea5-9d62-4946-a883-70555cfe6cd9@app.fastmail.com>
References: <CABFfbXvHddYPsHs7j9ZzvTrPo-NX880mbh6=quZWrd1+eCjD=g@mail.gmail.com>
 <16544526-1245-4DF8-995E-F9289B8CF0EA@R-project.org>
 <d2bcbea5-9d62-4946-a883-70555cfe6cd9@app.fastmail.com>
Message-ID: <7E8F4E4A-771D-4557-A640-BB540BB4007B@R-project.org>

Heather,

thanks, now fixed (datasets was using numeric value for compress= instead of the compression name so it picked zstd instead of gzip - now the switch order is kept the same).

Cheers,
Simon


> On Jan 15, 2025, at 10:21 PM, Heather Turner <ht at heatherturner.net> wrote:
> 
> With the changes to add zstd support yesterday, the build of R-devel is failing when zstd is not present, even though the docs say that zstd is optional.
> 
> The error comes in building the datasets package, see e.g. https://github.com/r-devel/r-svn/actions/runs/12760693086/job/35566530112.
> 
> Best wishes,
> 
> Heather
> 
> On Mon, Jan 13, 2025, at 1:26 AM, Simon Urbanek wrote:
>> I think the first step would have to be to add zstd support to R. zstd 
>> is a bit controversial (as shown by the community blowback of the 
>> changes you mentioned) and their build system (calling it that is being 
>> very generous) is mess so it would require a bit of testing, but it is 
>> doable.
>> 
>> That said, assuming the above is solved, we have been debating the 
>> change of compression at CRAN in general for a bit, but the assumptions 
>> about the file names are built into today?s tools so there would be 
>> certainly some fall-out - not just in R, but also the ecosystems around 
>> it. As you pointed out, possibly the safest place to start are 
>> binaries, since we have tighter control of those and they are used in 
>> fewer places.
>> 
>> Personally, I think the higher priority is signing, so as we address 
>> that we may just include the compression change with it since it will 
>> require some tool changes anyway. I was thinking of using xz as that is 
>> more stable, already supported and less controversial, but I don?t 
>> think the choice really matters - it just has to be a compression which 
>> R supports (zstd and xz have different benefits, so it?s always a 
>> trade-off without a clear winner).
>> 
>> Cheers,
>> Simon
>> 
>> 
>>> On 11 Jan 2025, at 12:16, Jeroen Ooms <jeroenooms at gmail.com> wrote:
>>> 
>>> Many distros and browsers these days use zstd as the preferred
>>> compression method. For example if you unpack a .deb or .rpm file on
>>> Debian or Fedora there is zstd archive inside. It is claimed that zstd
>>> offers improved compression over gzip, but (unlike lzma) it has
>>> comparable decompression speed. Maybe it is interesting to get an
>>> estimate of how much R packages would benefit from zstd.
>>> 
>>> Testing this for source packages and MacOS binary packages it is easy
>>> as we can gunzip and recompress tar.gz files without having to extract
>>> the tarball itself:
>>> 
>>> OUTPUT="sizes.txt"
>>> echo "FILE GZIP ZSTD" > $OUTPUT
>>> for x in *gz; do
>>>   FILE=$(basename $x)
>>>   GZIP=$(wc -c "$x" | awk '{print $1}')
>>>   ZSTD=$(gunzip -c $x | zstd -19 | wc -c)
>>>   echo "$FILE $GZIP $ZSTD" | tee -a $OUTPUT
>>> done
>>> 
>>> Attached are results of running this script on the 500 most downloaded
>>> CRAN packages. It shows about 16% size reduction for sources, and 19%
>>> for binaries.
>>> 
>>> Zstd is BSD licensed C code that can easily be embedded in any project.
>>> <sources.txt><binaries.txt>______________________________________________
>>> R-devel at r-project.org mailing list
>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>> 
>> ______________________________________________
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel
> 


From |uc@r @end|ng |rom |edor@project@org  Wed Jan 15 17:06:54 2025
From: |uc@r @end|ng |rom |edor@project@org (=?UTF-8?Q?I=C3=B1aki_Ucar?=)
Date: Wed, 15 Jan 2025 17:06:54 +0100
Subject: [Rd] Build error with gcc 15
Message-ID: <CALEXWq0setVEQoe2+6g-BdZ73vGHQo0vG7DARnQnHBd+r-SM6A@mail.gmail.com>

Dear R Core,

GCC 15 is already in Fedora rawhide, because it will be part of the next
release, Fedora 42. R 4.4.2 fails to build with the following error [1]:

> sys-std.c:1189:1: warning: ?noreturn? attribute ignored [-Wattributes]
>  1189 | void Rstd_CleanUp(SA_TYPE saveact, int status, int runLast)
>       | ^~~~
> sys-std.c:1189:1: error: expected identifier or ?(? before ?void?

I've seen some references to this in the source code, so this may be fixed
in R devel. If this is the case, it would be great if you could provide a
patch that I can apply to v4.4.2 until the next R release (or maybe I
should just specify an older C standard?).

[1] https://kojipkgs.fedoraproject.org//work/tasks/6266/127896266/build.log

Best,
-- 
I?aki ?car

	[[alternative HTML version deleted]]


From r|p|ey @end|ng |rom @t@t@@ox@@c@uk  Wed Jan 15 20:29:02 2025
From: r|p|ey @end|ng |rom @t@t@@ox@@c@uk (Prof Brian Ripley)
Date: Wed, 15 Jan 2025 19:29:02 +0000
Subject: [Rd] Build error with gcc 15
In-Reply-To: <CALEXWq0setVEQoe2+6g-BdZ73vGHQo0vG7DARnQnHBd+r-SM6A@mail.gmail.com>
References: <CALEXWq0setVEQoe2+6g-BdZ73vGHQo0vG7DARnQnHBd+r-SM6A@mail.gmail.com>
Message-ID: <1b6bf7b3-bc60-407e-a32b-eca298315ad3@stats.ox.ac.uk>

On 15/01/2025 16:06, I?aki Ucar wrote:
> Dear R Core,
> 
> GCC 15 is already in Fedora rawhide, because it will be part of the next
> release, Fedora 42. R 4.4.2 fails to build with the following error [1]:
> 
>> sys-std.c:1189:1: warning: ?noreturn? attribute ignored [-Wattributes]
>>   1189 | void Rstd_CleanUp(SA_TYPE saveact, int status, int runLast)
>>        | ^~~~
>> sys-std.c:1189:1: error: expected identifier or ?(? before ?void?

You failed to say that GCC 15 defaults to C23 (and they have not yet 
documented that).
> 
> I've seen some references to this in the source code, so this may be fixed
> in R devel. If this is the case, it would be great if you could provide a
> patch that I can apply to v4.4.2 until the next R release (or maybe I
> should just specify an older C standard?).

Look at the definition of NORET in R_ext/Error.h.  You want r87411;

r87411 | ripley | 2024-12-01 10:11:10 +0000 (Sun, 01 Dec 2024) | 1 line

gcc pre-15 does not yet support [[noreturn]]

GCC 15 is not even at RC stage, and this is one of many undocumented 
changes -- so they have not even got to the documentation-fixing stage. 
This is a GCC issue -- both LLVM and Apple clang build R-patched in C23 
mode.

We will port this to R-patched, unless GCC 15 is fixed before its or 
R-patched's release.

-- 
Brian D. Ripley,                  ripley at stats.ox.ac.uk
Emeritus Professor of Applied Statistics, University of Oxford


From |uc@r @end|ng |rom |edor@project@org  Wed Jan 15 22:22:07 2025
From: |uc@r @end|ng |rom |edor@project@org (=?UTF-8?Q?I=C3=B1aki_Ucar?=)
Date: Wed, 15 Jan 2025 22:22:07 +0100
Subject: [Rd] Build error with gcc 15
In-Reply-To: <1b6bf7b3-bc60-407e-a32b-eca298315ad3@stats.ox.ac.uk>
References: <CALEXWq0setVEQoe2+6g-BdZ73vGHQo0vG7DARnQnHBd+r-SM6A@mail.gmail.com>
 <1b6bf7b3-bc60-407e-a32b-eca298315ad3@stats.ox.ac.uk>
Message-ID: <CALEXWq2XeN8LcM=Yv_uKQytDFKJgYhO9cC0hpoGvmAFzfOHLhQ@mail.gmail.com>

On Wed, 15 Jan 2025 at 20:29, Prof Brian Ripley <ripley at stats.ox.ac.uk> wrote:
>
> On 15/01/2025 16:06, I?aki Ucar wrote:
> > Dear R Core,
> >
> > GCC 15 is already in Fedora rawhide, because it will be part of the next
> > release, Fedora 42. R 4.4.2 fails to build with the following error [1]:
> >
> >> sys-std.c:1189:1: warning: ?noreturn? attribute ignored [-Wattributes]
> >>   1189 | void Rstd_CleanUp(SA_TYPE saveact, int status, int runLast)
> >>        | ^~~~
> >> sys-std.c:1189:1: error: expected identifier or ?(? before ?void?
>
> You failed to say that GCC 15 defaults to C23 (and they have not yet
> documented that).
> >
> > I've seen some references to this in the source code, so this may be fixed
> > in R devel. If this is the case, it would be great if you could provide a
> > patch that I can apply to v4.4.2 until the next R release (or maybe I
> > should just specify an older C standard?).
>
> Look at the definition of NORET in R_ext/Error.h.  You want r87411;
>
> r87411 | ripley | 2024-12-01 10:11:10 +0000 (Sun, 01 Dec 2024) | 1 line
>
> gcc pre-15 does not yet support [[noreturn]]

Thanks, that worked nicely. I'll apply it for now.

Best,
I?aki

> GCC 15 is not even at RC stage, and this is one of many undocumented
> changes -- so they have not even got to the documentation-fixing stage.
> This is a GCC issue -- both LLVM and Apple clang build R-patched in C23
> mode.
>
> We will port this to R-patched, unless GCC 15 is fixed before its or
> R-patched's release.
>
> --
> Brian D. Ripley,                  ripley at stats.ox.ac.uk
> Emeritus Professor of Applied Statistics, University of Oxford
>


-- 
I?aki ?car


From |kry|ov @end|ng |rom d|@root@org  Thu Jan 16 12:41:21 2025
From: |kry|ov @end|ng |rom d|@root@org (Ivan Krylov)
Date: Thu, 16 Jan 2025 14:41:21 +0300
Subject: [Rd] Depends: R (>= 4.1) for packages that use |> and \(...)
Message-ID: <20250116144121.5520a9cc@arachnoid>

Hello R-devel,

Approximately [*] the following CRAN packages make use of the pipe
syntax in their source code or examples without depending on R >= 4.1:

 [1] "biplotEZ"           "CaseBasedReasoning" "collinear"
 [4] "cubble"             "disk.frame"         "duckdbfs"
 [7] "eia"                "feltr"              "flattabler"
[10] "geodimension"       "hgnc"               "himach"
[13] "lay"                "lidR"               "locateip"
[16] "particles"          "photosynthesis"     "pivotea"
[19] "planr"              "rtrek"              "satres"
[22] "sdtmval"            "selenider"          "sewage"
[25] "stminsights"        "tabr"               "tidygraph"
[28] "tidywikidatar"      "USgas"              "washi"
[31] "zctaCrosswalk"

Since we have checks in place to automatically set Depends: R (>=
2.10.0) for data files compressed with xz or bzip2 and >= 3.5.0 for
data files serialized with format version 3, would it make sense to
automatically add Depends: R (>= 4.1) for such packages?

The patch at the end of this message adds the R version dependency
during R CMD build:

R-devel CMD build --no-build-vignettes .
* checking for file ?./DESCRIPTION? ... OK
* preparing ?biplotEZ?:
* checking DESCRIPTION meta-information ... OK
* cleaning src
* checking vignette meta-information ... OK
* checking for LF line-endings in source and make files and shell
scripts
* checking for empty or unneeded directories
  NB: this package now depends on R (>= 4.1.0)
  WARNING: Added dependency on R >= 4.1.0 because some of the source
  files use the new syntax constructs.
Files making use of R >= 4.1 pipe |> or function shorthand \(...):
  biplotEZ/R/biplot.R biplotEZ/R/translate_axes.R
* building ?biplotEZ_2.2.tar.gz?

A more extensive test could also look at the tests, demos, and
\examples{}, but that may take longer and open the door for false
positives. A package that uses |> in one example would still be useful
on R-4.0.0, while a package that uses |> in the source code would fail
to parse and install.

Index: src/library/tools/R/QC.R
===================================================================
--- src/library/tools/R/QC.R	(revision 87545)
+++ src/library/tools/R/QC.R	(working copy)
@@ -10367,7 +10367,29 @@
     }
 }
 
+.check_use_of_R41_syntax <-
+function(files)
+{
+    out <- vapply(files,
+           function(f) tryCatch(
+               any(getParseData(parse(f, keep.source = TRUE))$token %in% c("PIPE", "'\\\\'")),
+               error = function(e) FALSE
+           ),
+           FALSE)
+    out <- files[out]
+    class(out) <- "check_use_of_R41_syntax"
+    out
+}
 
+format.check_use_of_R41_syntax <-
+function(x, ...)
+{
+    if (length(x)) {
+        c("Files making use of R >= 4.1 pipe |> or function shorthand \\(...):",
+          .strwrap22(x, " "))
+    } else character()
+}
+
 ### Local variables: ***
 ### mode: outline-minor ***
 ### outline-regexp: "### [*]+" ***
Index: src/library/tools/R/build.R
===================================================================
--- src/library/tools/R/build.R	(revision 87545)
+++ src/library/tools/R/build.R	(working copy)
@@ -1165,9 +1165,11 @@
         desc <- .read_description(file.path(pkgname, "DESCRIPTION"))
         Rdeps <- .split_description(desc)$Rdepends2
         hasDep350 <- FALSE
+        hasDep410 <- FALSE
         for(dep in Rdeps) {
             if(dep$op != '>=') next
             if(dep$version >= "3.5.0") hasDep350 <- TRUE
+            if(dep$version >= "4.1.0") hasDep410 <- TRUE
         }
         if (!hasDep350) {
             ## re-read files after exclusions have been applied
@@ -1189,6 +1191,23 @@
                          "\n")
             }
         }
+        if (!hasDep410) {
+            uses410 <- .check_use_of_R41_syntax(dir(file.path(pkgname, "R"),
+                                                    full.names = TRUE,
+                                                    pattern = "[.]R$",
+                                                    ignore.case = TRUE))
+            if (length(uses410)) {
+                fixup_R_dep(pkgname, "4.1.0")
+                msg <- paste("WARNING: Added dependency on R >= 4.1.0 because",
+                             "some of the source files use the new syntax",
+                             "constructs.")
+                printLog(Log,
+                         paste(c(strwrap(msg, indent = 2L, exdent = 2L),
+                                 format(uses410)),
+                               collapse = "\n"),
+                               "\n")
+            }
+        }
 
 	## add NAMESPACE if the author didn't write one
 	if(!file.exists(namespace <- file.path(pkgname, "NAMESPACE")) ) {


-- 
Best regards,
Ivan

[*] Based on the following GitHub search, which requires logging in:
https://github.com/search?q=org%3Acran%20path%3A%2F%5B.%5D%5BRr%5Dd%3F%24%2F%20%2F%5Cs%5C%7C%3E%2F&type=code
There's currently no REST API support for regexp search, so the list
was obtained manually.


From Thom@@@SOEIRO @end|ng |rom @p-hm@|r  Thu Jan 16 14:36:02 2025
From: Thom@@@SOEIRO @end|ng |rom @p-hm@|r (SOEIRO Thomas)
Date: Thu, 16 Jan 2025 13:36:02 +0000
Subject: [Rd] as.data.frame() methods for model objects
Message-ID: <77cc3fe9e80449aaab6321794d04eb09@SCWPR-EXDAG1-6A.aphm.ap-hm.fr>

Hello all,

Would there be any interest for adding as.data.frame() methods for model objects?
Of course there is packages (e.g. broom), but I think providing methods would be more discoverable (and the patch would be small).
It is really useful for exporting model results or for plotting.

e.g.:

as.data.frame.lm <- function(x) { # could get other arguments, e.g. exp = TRUE/FALSE to exponentiate estimate, conf.low, conf.high
  cf <- x |> summary() |> stats::coef()
  ci <- stats::confint(x)
  data.frame(
    term = row.names(cf),
    estimate = cf[, "Estimate"],
    p.value = cf[, 4], # magic number because name changes between lm() and glm(*, family = *)
    conf.low = ci[, "2.5 %"],
    conf.high = ci[, "97.5 %"],
    row.names = NULL
  )
}

> lm(breaks ~ wool + tension, warpbreaks) |> as.data.frame()
         term   estimate      p.value  conf.low  conf.high
1 (Intercept)  39.277778 6.681866e-17  32.92715 45.6284061
2       woolB  -5.777778 7.361367e-02 -12.12841  0.5728505
3    tensionM -10.000000 1.278683e-02 -17.77790 -2.2221006
4    tensionH -14.722222 3.913842e-04 -22.50012 -6.9443228

> glm(breaks < 20 ~ wool + tension, data = warpbreaks) |> as.data.frame()
Waiting for profiling to be done...
         term   estimate    p.value    conf.low conf.high
1 (Intercept) 0.07407407 0.54849393 -0.16624575 0.3143939
2       woolB 0.07407407 0.54849393 -0.16624575 0.3143939
3    tensionM 0.22222222 0.14520270 -0.07210825 0.5165527
4    tensionH 0.33333333 0.03100435  0.03900286 0.6276638

Thank you.

Best regards,
Thomas


From henr|k@bengt@@on @end|ng |rom gm@||@com  Thu Jan 16 16:22:03 2025
From: henr|k@bengt@@on @end|ng |rom gm@||@com (Henrik Bengtsson)
Date: Thu, 16 Jan 2025 07:22:03 -0800
Subject: [Rd] Depends: R (>= 4.1) for packages that use |> and \(...)
In-Reply-To: <20250116144121.5520a9cc@arachnoid>
References: <20250116144121.5520a9cc@arachnoid>
Message-ID: <CAFDcVCTTVa+Ea+BoVoag0RJ7LK3P1tyPzBG9vP4U-4w6a4kKKQ@mail.gmail.com>

Thanks for looking into this and the patch. FWIW, there's an open
PR18105 - "R CMD build: Add dependency on R >= 4.1.0 if code uses pipe
symbol |>" for this
(https://bugs.r-project.org/show_bug.cgi?id=18105).

/Henrik

On Thu, Jan 16, 2025 at 3:42?AM Ivan Krylov via R-devel
<r-devel at r-project.org> wrote:
>
> Hello R-devel,
>
> Approximately [*] the following CRAN packages make use of the pipe
> syntax in their source code or examples without depending on R >= 4.1:
>
>  [1] "biplotEZ"           "CaseBasedReasoning" "collinear"
>  [4] "cubble"             "disk.frame"         "duckdbfs"
>  [7] "eia"                "feltr"              "flattabler"
> [10] "geodimension"       "hgnc"               "himach"
> [13] "lay"                "lidR"               "locateip"
> [16] "particles"          "photosynthesis"     "pivotea"
> [19] "planr"              "rtrek"              "satres"
> [22] "sdtmval"            "selenider"          "sewage"
> [25] "stminsights"        "tabr"               "tidygraph"
> [28] "tidywikidatar"      "USgas"              "washi"
> [31] "zctaCrosswalk"
>
> Since we have checks in place to automatically set Depends: R (>=
> 2.10.0) for data files compressed with xz or bzip2 and >= 3.5.0 for
> data files serialized with format version 3, would it make sense to
> automatically add Depends: R (>= 4.1) for such packages?
>
> The patch at the end of this message adds the R version dependency
> during R CMD build:
>
> R-devel CMD build --no-build-vignettes .
> * checking for file ?./DESCRIPTION? ... OK
> * preparing ?biplotEZ?:
> * checking DESCRIPTION meta-information ... OK
> * cleaning src
> * checking vignette meta-information ... OK
> * checking for LF line-endings in source and make files and shell
> scripts
> * checking for empty or unneeded directories
>   NB: this package now depends on R (>= 4.1.0)
>   WARNING: Added dependency on R >= 4.1.0 because some of the source
>   files use the new syntax constructs.
> Files making use of R >= 4.1 pipe |> or function shorthand \(...):
>   biplotEZ/R/biplot.R biplotEZ/R/translate_axes.R
> * building ?biplotEZ_2.2.tar.gz?
>
> A more extensive test could also look at the tests, demos, and
> \examples{}, but that may take longer and open the door for false
> positives. A package that uses |> in one example would still be useful
> on R-4.0.0, while a package that uses |> in the source code would fail
> to parse and install.
>
> Index: src/library/tools/R/QC.R
> ===================================================================
> --- src/library/tools/R/QC.R    (revision 87545)
> +++ src/library/tools/R/QC.R    (working copy)
> @@ -10367,7 +10367,29 @@
>      }
>  }
>
> +.check_use_of_R41_syntax <-
> +function(files)
> +{
> +    out <- vapply(files,
> +           function(f) tryCatch(
> +               any(getParseData(parse(f, keep.source = TRUE))$token %in% c("PIPE", "'\\\\'")),
> +               error = function(e) FALSE
> +           ),
> +           FALSE)
> +    out <- files[out]
> +    class(out) <- "check_use_of_R41_syntax"
> +    out
> +}
>
> +format.check_use_of_R41_syntax <-
> +function(x, ...)
> +{
> +    if (length(x)) {
> +        c("Files making use of R >= 4.1 pipe |> or function shorthand \\(...):",
> +          .strwrap22(x, " "))
> +    } else character()
> +}
> +
>  ### Local variables: ***
>  ### mode: outline-minor ***
>  ### outline-regexp: "### [*]+" ***
> Index: src/library/tools/R/build.R
> ===================================================================
> --- src/library/tools/R/build.R (revision 87545)
> +++ src/library/tools/R/build.R (working copy)
> @@ -1165,9 +1165,11 @@
>          desc <- .read_description(file.path(pkgname, "DESCRIPTION"))
>          Rdeps <- .split_description(desc)$Rdepends2
>          hasDep350 <- FALSE
> +        hasDep410 <- FALSE
>          for(dep in Rdeps) {
>              if(dep$op != '>=') next
>              if(dep$version >= "3.5.0") hasDep350 <- TRUE
> +            if(dep$version >= "4.1.0") hasDep410 <- TRUE
>          }
>          if (!hasDep350) {
>              ## re-read files after exclusions have been applied
> @@ -1189,6 +1191,23 @@
>                           "\n")
>              }
>          }
> +        if (!hasDep410) {
> +            uses410 <- .check_use_of_R41_syntax(dir(file.path(pkgname, "R"),
> +                                                    full.names = TRUE,
> +                                                    pattern = "[.]R$",
> +                                                    ignore.case = TRUE))
> +            if (length(uses410)) {
> +                fixup_R_dep(pkgname, "4.1.0")
> +                msg <- paste("WARNING: Added dependency on R >= 4.1.0 because",
> +                             "some of the source files use the new syntax",
> +                             "constructs.")
> +                printLog(Log,
> +                         paste(c(strwrap(msg, indent = 2L, exdent = 2L),
> +                                 format(uses410)),
> +                               collapse = "\n"),
> +                               "\n")
> +            }
> +        }
>
>         ## add NAMESPACE if the author didn't write one
>         if(!file.exists(namespace <- file.path(pkgname, "NAMESPACE")) ) {
>
>
> --
> Best regards,
> Ivan
>
> [*] Based on the following GitHub search, which requires logging in:
> https://github.com/search?q=org%3Acran%20path%3A%2F%5B.%5D%5BRr%5Dd%3F%24%2F%20%2F%5Cs%5C%7C%3E%2F&type=code
> There's currently no REST API support for regexp search, so the list
> was obtained manually.
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From peter@ruckde@che| @end|ng |rom web@de  Thu Jan 16 18:09:25 2025
From: peter@ruckde@che| @end|ng |rom web@de (Peter Ruckdeschel)
Date: Thu, 16 Jan 2025 18:09:25 +0100
Subject: [Rd] UTF-8 encoding issue with R CMD check with
 install-args="--latex"
Message-ID: <8f65996d-9c62-41eb-ae9c-fe177ffb2c11@web.de>

Hi,

this is to report some minor UTF-8 encoding issue with R CMD check with option --install-args="--latex"
(and possibly more install-args).

More specifically, in my Windows system (see the cloud link below for details on my system), but also
on the Linux machine of my collaborator Matthias Kohl (CC), the following command throws errors:

 ????? R CMD check --install-args="--latex" <pkg>_<version>.tar.gz

I.e., at this command, when checking the pdf version of the manual, pdflatex throws an error of type

===
* checking PDF version of manual ... WARNING
LaTeX errors when creating PDF version.
This typically indicates Rd problems.
LaTeX errors found:
! Undefined control sequence.
l.37 \inputencoding
 ?????????????????? {utf8}
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
===

This is certainly not an urgent issue.

Option --install-args="--latex" can be removed without harm for me, it somehow survived in my set
of (Windows) batch files I use to build, check, and install my R packages on Windows, which,
admittedly, makes me a rare species in the R ecosystem.

Still, it would be nice to understand why this happens, so any hints would be warmly welcome.

Some more details on my testing configuration and my first insights into this error can be found
here: https://cloudstorage.uni-oldenburg.de/s/kStWp5PNiwJEqfz

Best, Peter Ruckdeschel


	[[alternative HTML version deleted]]


From |kry|ov @end|ng |rom d|@root@org  Thu Jan 16 21:21:16 2025
From: |kry|ov @end|ng |rom d|@root@org (Ivan Krylov)
Date: Thu, 16 Jan 2025 23:21:16 +0300
Subject: [Rd] UTF-8 encoding issue with R CMD check with
 install-args="--latex"
In-Reply-To: <8f65996d-9c62-41eb-ae9c-fe177ffb2c11@web.de>
References: <8f65996d-9c62-41eb-ae9c-fe177ffb2c11@web.de>
Message-ID: <20250116232116.4e843b88@Tarkus>

? Thu, 16 Jan 2025 18:09:25 +0100
Peter Ruckdeschel via R-devel <r-devel at r-project.org> ?????:

> this is to report some minor UTF-8 encoding issue with R CMD check
> with option --install-args="--latex" (and possibly more install-args).

Thank you for a very detailed report!

This doesn't happen on R-4.2.2 or 4.3.1, but it does happen on R-devel.

Comparing the calls from R CMD check to R CMD Rd2pdf, I see no
difference in the environment variables or any significant difference
in the command lines. The command being run ends up being equivalent to

R CMD Rd2pdf <package>.Rcheck/<package>

...and the source of the difference is the presence (or absence) of the
<package>.Rcheck/<package>/latex directory. If I temporarily move it
away during an R CMD check --install-args=--latex run, the command
succeeds.

Indeed, tools:::.pkg2tex says

>> ## First check for a latex dir (from R CMD INSTALL --latex).
>> ## Second guess is this is a >= 2.10.0 package with stored .rds
>> ## files.
>> ## If it does not exist, guess this is a source package.
>> latexdir <- file.path(pkgdir, "latex")

The individual *.tex files in the latex/ subdirectory of the installed
package all do start with an "\inputencoding{utf8}" line.

When the latex/ subdirectory doesn't exist, the !dir.exists(latexdir)
branch is taken, where Rd2latex(...) is called with writeEncoding =
FALSE, thus avoiding the problem.

-- 
Best regards,
Ivan


From Kurt@Horn|k @end|ng |rom wu@@c@@t  Fri Jan 17 09:01:56 2025
From: Kurt@Horn|k @end|ng |rom wu@@c@@t (Kurt Hornik)
Date: Fri, 17 Jan 2025 09:01:56 +0100
Subject: [Rd] UTF-8 encoding issue with R CMD check with
 install-args="--latex"
In-Reply-To: <20250116232116.4e843b88@Tarkus>
References: <8f65996d-9c62-41eb-ae9c-fe177ffb2c11@web.de>
 <20250116232116.4e843b88@Tarkus>
Message-ID: <26506.3700.807381.353929@hornik.net>

>>>>> Ivan Krylov via R-devel writes:

Thanks.  Will try to fix ...

Best
-k

> ? Thu, 16 Jan 2025 18:09:25 +0100
> Peter Ruckdeschel via R-devel <r-devel at r-project.org> ?????:

>> this is to report some minor UTF-8 encoding issue with R CMD check
>> with option --install-args="--latex" (and possibly more install-args).

> Thank you for a very detailed report!

> This doesn't happen on R-4.2.2 or 4.3.1, but it does happen on R-devel.

> Comparing the calls from R CMD check to R CMD Rd2pdf, I see no
> difference in the environment variables or any significant difference
> in the command lines. The command being run ends up being equivalent to

> R CMD Rd2pdf <package>.Rcheck/<package>

> ...and the source of the difference is the presence (or absence) of the
> <package>.Rcheck/<package>/latex directory. If I temporarily move it
> away during an R CMD check --install-args=--latex run, the command
> succeeds.

> Indeed, tools:::.pkg2tex says

>>> ## First check for a latex dir (from R CMD INSTALL --latex).
>>> ## Second guess is this is a >= 2.10.0 package with stored .rds
>>> ## files.
>>> ## If it does not exist, guess this is a source package.
>>> latexdir <- file.path(pkgdir, "latex")

> The individual *.tex files in the latex/ subdirectory of the installed
> package all do start with an "\inputencoding{utf8}" line.

> When the latex/ subdirectory doesn't exist, the !dir.exists(latexdir)
> branch is taken, where Rd2latex(...) is called with writeEncoding =
> FALSE, thus avoiding the problem.

> -- 
> Best regards,
> Ivan

> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From peter@ruckde@che| @end|ng |rom web@de  Fri Jan 17 14:56:21 2025
From: peter@ruckde@che| @end|ng |rom web@de (Peter Ruckdeschel)
Date: Fri, 17 Jan 2025 14:56:21 +0100
Subject: [Rd] UTF-8 encoding issue with R CMD check with
 install-args="--latex"
In-Reply-To: <26506.3700.807381.353929@hornik.net>
References: <8f65996d-9c62-41eb-ae9c-fe177ffb2c11@web.de>
 <20250116232116.4e843b88@Tarkus> <26506.3700.807381.353929@hornik.net>
Message-ID: <528c8ff3-e125-4251-94e0-592824e44e15@web.de>

Thanks Ivan and Kurt, for nailing this down, best regards, Peter

Am 17.01.2025 um 09:01 schrieb Kurt Hornik:
>>>>>> Ivan Krylov via R-devel writes:
> Thanks.  Will try to fix ...
>
> Best
> -k
>
>> ? Thu, 16 Jan 2025 18:09:25 +0100
>> Peter Ruckdeschel via R-devel <r-devel at r-project.org> ?????:
>>> this is to report some minor UTF-8 encoding issue with R CMD check
>>> with option --install-args="--latex" (and possibly more install-args).
>> Thank you for a very detailed report!
>> This doesn't happen on R-4.2.2 or 4.3.1, but it does happen on R-devel.
>> Comparing the calls from R CMD check to R CMD Rd2pdf, I see no
>> difference in the environment variables or any significant difference
>> in the command lines. The command being run ends up being equivalent to
>> R CMD Rd2pdf <package>.Rcheck/<package>
>> ...and the source of the difference is the presence (or absence) of the
>> <package>.Rcheck/<package>/latex directory. If I temporarily move it
>> away during an R CMD check --install-args=--latex run, the command
>> succeeds.
>> Indeed, tools:::.pkg2tex says
>>>> ## First check for a latex dir (from R CMD INSTALL --latex).
>>>> ## Second guess is this is a >= 2.10.0 package with stored .rds
>>>> ## files.
>>>> ## If it does not exist, guess this is a source package.
>>>> latexdir <- file.path(pkgdir, "latex")
>> The individual *.tex files in the latex/ subdirectory of the installed
>> package all do start with an "\inputencoding{utf8}" line.
>> When the latex/ subdirectory doesn't exist, the !dir.exists(latexdir)
>> branch is taken, where Rd2latex(...) is called with writeEncoding =
>> FALSE, thus avoiding the problem.
>> --
>> Best regards,
>> Ivan
>> ______________________________________________
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel


From Thom@@@SOEIRO @end|ng |rom @p-hm@|r  Fri Jan 17 15:19:31 2025
From: Thom@@@SOEIRO @end|ng |rom @p-hm@|r (SOEIRO Thomas)
Date: Fri, 17 Jan 2025 14:19:31 +0000
Subject: [Rd] as.data.frame() methods for model objects
In-Reply-To: <77cc3fe9e80449aaab6321794d04eb09@SCWPR-EXDAG1-6A.aphm.ap-hm.fr>
References: <77cc3fe9e80449aaab6321794d04eb09@SCWPR-EXDAG1-6A.aphm.ap-hm.fr>
Message-ID: <36cfb7682ea2448a8321f752d4e0e68c@SCWPR-EXDAG1-6A.aphm.ap-hm.fr>

Following Duncan Murdoch's off-list comments (thanks again!), here is a more complete/flexible version:

as.data.frame.lm <- function(x, ..., level = 0.95, exp = FALSE) {
  cf <- x |> summary() |> stats::coef()
  ci <- stats::confint(x, level = level)
  if (exp) {
    cf[, "Estimate"] <- exp(cf[, "Estimate"])
    ci <- exp(ci)
  }
  df <- data.frame(row.names(cf), cf, ci, row.names = NULL)
  names(df) <- c("term", "estimate", "std.error", "statistic", "p.value", "conf.low", "conf.high")
  df
}

> lm(breaks ~ wool + tension, warpbreaks) |> as.data.frame()
         term   estimate std.error statistic      p.value  conf.low  conf.high
1 (Intercept)  39.277778  3.161783 12.422667 6.681866e-17  32.92715 45.6284061
2       woolB  -5.777778  3.161783 -1.827380 7.361367e-02 -12.12841  0.5728505
3    tensionM -10.000000  3.872378 -2.582393 1.278683e-02 -17.77790 -2.2221006
4    tensionH -14.722222  3.872378 -3.801856 3.913842e-04 -22.50012 -6.9443228

> glm(breaks < 20 ~ wool + tension, data = warpbreaks) |> as.data.frame(exp = TRUE)
Waiting for profiling to be done...
         term estimate std.error statistic    p.value  conf.low conf.high
1 (Intercept) 1.076887 0.1226144 0.6041221 0.54849393 0.8468381  1.369429
2       woolB 1.076887 0.1226144 0.6041221 0.54849393 0.8468381  1.369429
3    tensionM 1.248849 0.1501714 1.4797909 0.14520270 0.9304302  1.676239
4    tensionH 1.395612 0.1501714 2.2196863 0.03100435 1.0397735  1.873229

Thank you.

Best regards,
Thomas



-----Message d'origine-----
De?: SOEIRO Thomas 
Envoy??: jeudi 16 janvier 2025 14:36
??: r-devel at r-project.org
Objet?: as.data.frame() methods for model objects

Hello all,

Would there be any interest for adding as.data.frame() methods for model objects?
Of course there is packages (e.g. broom), but I think providing methods would be more discoverable (and the patch would be small).
It is really useful for exporting model results or for plotting.

e.g.:

as.data.frame.lm <- function(x) { # could get other arguments, e.g. exp = TRUE/FALSE to exponentiate estimate, conf.low, conf.high
  cf <- x |> summary() |> stats::coef()
  ci <- stats::confint(x)
  data.frame(
    term = row.names(cf),
    estimate = cf[, "Estimate"],
    p.value = cf[, 4], # magic number because name changes between lm() and glm(*, family = *)
    conf.low = ci[, "2.5 %"],
    conf.high = ci[, "97.5 %"],
    row.names = NULL
  )
}

> lm(breaks ~ wool + tension, warpbreaks) |> as.data.frame()
         term   estimate      p.value  conf.low  conf.high
1 (Intercept)  39.277778 6.681866e-17  32.92715 45.6284061
2       woolB  -5.777778 7.361367e-02 -12.12841  0.5728505
3    tensionM -10.000000 1.278683e-02 -17.77790 -2.2221006
4    tensionH -14.722222 3.913842e-04 -22.50012 -6.9443228

> glm(breaks < 20 ~ wool + tension, data = warpbreaks) |> as.data.frame()
Waiting for profiling to be done...
         term   estimate    p.value    conf.low conf.high
1 (Intercept) 0.07407407 0.54849393 -0.16624575 0.3143939
2       woolB 0.07407407 0.54849393 -0.16624575 0.3143939
3    tensionM 0.22222222 0.14520270 -0.07210825 0.5165527
4    tensionH 0.33333333 0.03100435  0.03900286 0.6276638

Thank you.

Best regards,
Thomas


From Kurt@Horn|k @end|ng |rom wu@@c@@t  Fri Jan 17 15:29:25 2025
From: Kurt@Horn|k @end|ng |rom wu@@c@@t (Kurt Hornik)
Date: Fri, 17 Jan 2025 15:29:25 +0100
Subject: [Rd] Depends: R (>= 4.1) for packages that use |> and \(...)
In-Reply-To: <CAFDcVCTTVa+Ea+BoVoag0RJ7LK3P1tyPzBG9vP4U-4w6a4kKKQ@mail.gmail.com>
References: <20250116144121.5520a9cc@arachnoid>
 <CAFDcVCTTVa+Ea+BoVoag0RJ7LK3P1tyPzBG9vP4U-4w6a4kKKQ@mail.gmail.com>
Message-ID: <26506.26949.241762.7373@hornik.net>

>>>>> Henrik Bengtsson writes:

Thanks.  Will take a look ...

Best
-k

> Thanks for looking into this and the patch. FWIW, there's an open
> PR18105 - "R CMD build: Add dependency on R >= 4.1.0 if code uses pipe
> symbol |>" for this
> (https://bugs.r-project.org/show_bug.cgi?id=18105).

> /Henrik

> On Thu, Jan 16, 2025 at 3:42?AM Ivan Krylov via R-devel
> <r-devel at r-project.org> wrote:
>> 
>> Hello R-devel,
>> 
>> Approximately [*] the following CRAN packages make use of the pipe
>> syntax in their source code or examples without depending on R >= 4.1:
>> 
>> [1] "biplotEZ"           "CaseBasedReasoning" "collinear"
>> [4] "cubble"             "disk.frame"         "duckdbfs"
>> [7] "eia"                "feltr"              "flattabler"
>> [10] "geodimension"       "hgnc"               "himach"
>> [13] "lay"                "lidR"               "locateip"
>> [16] "particles"          "photosynthesis"     "pivotea"
>> [19] "planr"              "rtrek"              "satres"
>> [22] "sdtmval"            "selenider"          "sewage"
>> [25] "stminsights"        "tabr"               "tidygraph"
>> [28] "tidywikidatar"      "USgas"              "washi"
>> [31] "zctaCrosswalk"
>> 
>> Since we have checks in place to automatically set Depends: R (>=
>> 2.10.0) for data files compressed with xz or bzip2 and >= 3.5.0 for
>> data files serialized with format version 3, would it make sense to
>> automatically add Depends: R (>= 4.1) for such packages?
>> 
>> The patch at the end of this message adds the R version dependency
>> during R CMD build:
>> 
>> R-devel CMD build --no-build-vignettes .
>> * checking for file ?./DESCRIPTION? ... OK
>> * preparing ?biplotEZ?:
>> * checking DESCRIPTION meta-information ... OK
>> * cleaning src
>> * checking vignette meta-information ... OK
>> * checking for LF line-endings in source and make files and shell
>> scripts
>> * checking for empty or unneeded directories
>> NB: this package now depends on R (>= 4.1.0)
>> WARNING: Added dependency on R >= 4.1.0 because some of the source
>> files use the new syntax constructs.
>> Files making use of R >= 4.1 pipe |> or function shorthand \(...):
>> biplotEZ/R/biplot.R biplotEZ/R/translate_axes.R
>> * building ?biplotEZ_2.2.tar.gz?
>> 
>> A more extensive test could also look at the tests, demos, and
>> \examples{}, but that may take longer and open the door for false
>> positives. A package that uses |> in one example would still be useful
>> on R-4.0.0, while a package that uses |> in the source code would fail
>> to parse and install.
>> 
>> Index: src/library/tools/R/QC.R
>> ===================================================================
>> --- src/library/tools/R/QC.R    (revision 87545)
>> +++ src/library/tools/R/QC.R    (working copy)
>> @@ -10367,7 +10367,29 @@
>> }
>> }
>> 
>> +.check_use_of_R41_syntax <-
>> +function(files)
>> +{
>> +    out <- vapply(files,
>> +           function(f) tryCatch(
>> +               any(getParseData(parse(f, keep.source = TRUE))$token %in% c("PIPE", "'\\\\'")),
>> +               error = function(e) FALSE
>> +           ),
>> +           FALSE)
>> +    out <- files[out]
>> +    class(out) <- "check_use_of_R41_syntax"
>> +    out
>> +}
>> 
>> +format.check_use_of_R41_syntax <-
>> +function(x, ...)
>> +{
>> +    if (length(x)) {
>> +        c("Files making use of R >= 4.1 pipe |> or function shorthand \\(...):",
>> +          .strwrap22(x, " "))
>> +    } else character()
>> +}
>> +
>> ### Local variables: ***
>> ### mode: outline-minor ***
>> ### outline-regexp: "### [*]+" ***
>> Index: src/library/tools/R/build.R
>> ===================================================================
>> --- src/library/tools/R/build.R (revision 87545)
>> +++ src/library/tools/R/build.R (working copy)
>> @@ -1165,9 +1165,11 @@
>> desc <- .read_description(file.path(pkgname, "DESCRIPTION"))
>> Rdeps <- .split_description(desc)$Rdepends2
>> hasDep350 <- FALSE
>> +        hasDep410 <- FALSE
>> for(dep in Rdeps) {
>> if(dep$op != '>=') next
>> if(dep$version >= "3.5.0") hasDep350 <- TRUE
>> +            if(dep$version >= "4.1.0") hasDep410 <- TRUE
>> }
>> if (!hasDep350) {
>> ## re-read files after exclusions have been applied
>> @@ -1189,6 +1191,23 @@
>> "\n")
>> }
>> }
>> +        if (!hasDep410) {
>> +            uses410 <- .check_use_of_R41_syntax(dir(file.path(pkgname, "R"),
>> +                                                    full.names = TRUE,
>> +                                                    pattern = "[.]R$",
>> +                                                    ignore.case = TRUE))
>> +            if (length(uses410)) {
>> +                fixup_R_dep(pkgname, "4.1.0")
>> +                msg <- paste("WARNING: Added dependency on R >= 4.1.0 because",
>> +                             "some of the source files use the new syntax",
>> +                             "constructs.")
>> +                printLog(Log,
>> +                         paste(c(strwrap(msg, indent = 2L, exdent = 2L),
>> +                                 format(uses410)),
>> +                               collapse = "\n"),
>> +                               "\n")
>> +            }
>> +        }
>> 
>> ## add NAMESPACE if the author didn't write one
>> if(!file.exists(namespace <- file.path(pkgname, "NAMESPACE")) ) {
>> 
>> 
>> --
>> Best regards,
>> Ivan
>> 
>> [*] Based on the following GitHub search, which requires logging in:
>> https://github.com/search?q=org%3Acran%20path%3A%2F%5B.%5D%5BRr%5Dd%3F%24%2F%20%2F%5Cs%5C%7C%3E%2F&type=code
>> There's currently no REST API support for regexp search, so the list
>> was obtained manually.
>> 
>> ______________________________________________
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel

> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From m@ech|er @end|ng |rom @t@t@m@th@ethz@ch  Fri Jan 17 17:03:30 2025
From: m@ech|er @end|ng |rom @t@t@m@th@ethz@ch (Martin Maechler)
Date: Fri, 17 Jan 2025 17:03:30 +0100
Subject: [Rd] as.data.frame() methods for model objects
In-Reply-To: <36cfb7682ea2448a8321f752d4e0e68c@SCWPR-EXDAG1-6A.aphm.ap-hm.fr>
References: <77cc3fe9e80449aaab6321794d04eb09@SCWPR-EXDAG1-6A.aphm.ap-hm.fr>
 <36cfb7682ea2448a8321f752d4e0e68c@SCWPR-EXDAG1-6A.aphm.ap-hm.fr>
Message-ID: <26506.32594.995252.735718@stat.math.ethz.ch>

>>>>> SOEIRO Thomas via R-devel 
>>>>>     on Fri, 17 Jan 2025 14:19:31 +0000 writes:

> Following Duncan Murdoch's off-list comments (thanks again!), here is a more complete/flexible version:
> 
> as.data.frame.lm <- function(x, ..., level = 0.95, exp = FALSE) {
>   cf <- x |> summary() |> stats::coef()
>   ci <- stats::confint(x, level = level)
>   if (exp) {
>     cf[, "Estimate"] <- exp(cf[, "Estimate"])
>     ci <- exp(ci)
>   }
>   df <- data.frame(row.names(cf), cf, ci, row.names = NULL)
>   names(df) <- c("term", "estimate", "std.error", "statistic", "p.value", "conf.low", "conf.high")
>   df
> }

Indeed, using level is much better already.

Instead of the  exp = FALSE ,
I'd use    transFUN = NULL
and then

    if(!is.null(transFUN)) {
       stopifnot(is.function(transFUN))
       cf[, "Estimate"] <- transFUN(cf[, "Estimate"])
       ci <- transFUN(ci)
    }

Noting that I'd want "inverse-logit" (*) in some cases, but also
different things for different link functions, hence just
exp = T/F  is not enough.

Martin

--
*) "inverse-logit"  is simply R's   plogis()  function;  quite a
 few people have been re-inventing it, also in their packages ...



> > lm(breaks ~ wool + tension, warpbreaks) |> as.data.frame()
>          term   estimate std.error statistic      p.value  conf.low  conf.high
> 1 (Intercept)  39.277778  3.161783 12.422667 6.681866e-17  32.92715 45.6284061
> 2       woolB  -5.777778  3.161783 -1.827380 7.361367e-02 -12.12841  0.5728505
> 3    tensionM -10.000000  3.872378 -2.582393 1.278683e-02 -17.77790 -2.2221006
> 4    tensionH -14.722222  3.872378 -3.801856 3.913842e-04 -22.50012 -6.9443228
> 
> > glm(breaks < 20 ~ wool + tension, data = warpbreaks) |> as.data.frame(exp = TRUE)
> Waiting for profiling to be done...
>          term estimate std.error statistic    p.value  conf.low conf.high
> 1 (Intercept) 1.076887 0.1226144 0.6041221 0.54849393 0.8468381  1.369429
> 2       woolB 1.076887 0.1226144 0.6041221 0.54849393 0.8468381  1.369429
> 3    tensionM 1.248849 0.1501714 1.4797909 0.14520270 0.9304302  1.676239
> 4    tensionH 1.395612 0.1501714 2.2196863 0.03100435 1.0397735  1.873229
> 
> Thank you.
> 
> Best regards,
> Thomas
> 
> 
> 
> -----Message d'origine-----
> De?: SOEIRO Thomas 
> Envoy??: jeudi 16 janvier 2025 14:36
> ??: r-devel at r-project.org
> Objet?: as.data.frame() methods for model objects
> 
> Hello all,
> 
> Would there be any interest for adding as.data.frame() methods for model objects?
> Of course there is packages (e.g. broom), but I think providing methods would be more discoverable (and the patch would be small).
> It is really useful for exporting model results or for plotting.
> 
> e.g.:
> 
> as.data.frame.lm <- function(x) { # could get other arguments, e.g. exp = TRUE/FALSE to exponentiate estimate, conf.low, conf.high
>   cf <- x |> summary() |> stats::coef()
>   ci <- stats::confint(x)
>   data.frame(
>     term = row.names(cf),
>     estimate = cf[, "Estimate"],
>     p.value = cf[, 4], # magic number because name changes between lm() and glm(*, family = *)
>     conf.low = ci[, "2.5 %"],
>     conf.high = ci[, "97.5 %"],
>     row.names = NULL
>   )
> }
> 
> > lm(breaks ~ wool + tension, warpbreaks) |> as.data.frame()
>          term   estimate      p.value  conf.low  conf.high
> 1 (Intercept)  39.277778 6.681866e-17  32.92715 45.6284061
> 2       woolB  -5.777778 7.361367e-02 -12.12841  0.5728505
> 3    tensionM -10.000000 1.278683e-02 -17.77790 -2.2221006
> 4    tensionH -14.722222 3.913842e-04 -22.50012 -6.9443228
> 
> > glm(breaks < 20 ~ wool + tension, data = warpbreaks) |> as.data.frame()
> Waiting for profiling to be done...
>          term   estimate    p.value    conf.low conf.high
> 1 (Intercept) 0.07407407 0.54849393 -0.16624575 0.3143939
> 2       woolB 0.07407407 0.54849393 -0.16624575 0.3143939
> 3    tensionM 0.22222222 0.14520270 -0.07210825 0.5165527
> 4    tensionH 0.33333333 0.03100435  0.03900286 0.6276638
> 
> Thank you.
> 
> Best regards,
> Thomas


From Thom@@@SOEIRO @end|ng |rom @p-hm@|r  Fri Jan 17 21:12:10 2025
From: Thom@@@SOEIRO @end|ng |rom @p-hm@|r (SOEIRO Thomas)
Date: Fri, 17 Jan 2025 20:12:10 +0000
Subject: [Rd] as.data.frame() methods for model objects
In-Reply-To: <26506.32594.995252.735718@stat.math.ethz.ch>
References: <77cc3fe9e80449aaab6321794d04eb09@SCWPR-EXDAG1-6A.aphm.ap-hm.fr>
 <36cfb7682ea2448a8321f752d4e0e68c@SCWPR-EXDAG1-6A.aphm.ap-hm.fr>
 <26506.32594.995252.735718@stat.math.ethz.ch>
Message-ID: <9345438b6a4c413498944ef4f0476bc1@SCWPR-EXDAG1-6A.aphm.ap-hm.fr>

Thank you very much Martin.

Below is a patch implementing that.

Two newbie questions:
- should I add row.names = NULL, optional = FALSE to match the arguments of the generic? (this is not the case for e.g. as.data.frame.table but I thought it was needed: https://cloud.r-project.org/doc/manuals/r-devel/R-exts.html#Generic-functions-and-methods)
- shouldn't we use match.fun(transFUN)?



diff --git a/src/library/stats/R/lm.R b/src/library/stats/R/lm.R
index 13a458797b..2ce6b16f6e 100644
--- a/src/library/stats/R/lm.R
+++ b/src/library/stats/R/lm.R
@@ -982,3 +982,18 @@ labels.lm <- function(object, ...)
     asgn <- object$assign[qr.lm(object)$pivot[1L:object$rank]]
     tl[unique(asgn)]
 }
+
+as.data.frame.lm <- function(x, ..., level = 0.95, transFUN = NULL)
+{
+  cf <- x |> summary() |> coef()
+  ci <- confint(x, level = level)
+  if(!is.null(transFUN)) {
+    stopifnot(is.function(transFUN))
+    cf[, "Estimate"] <- transFUN(cf[, "Estimate"])
+    ci <- transFUN(ci)
+  }
+  df <- data.frame(row.names(cf), cf, ci, row.names = NULL)
+  names(df) <- c("term", "estimate", "std.error", "statistic", "p.value",
+                 "conf.low", "conf.high")
+  df
+}
diff --git a/src/library/stats/man/lm.Rd b/src/library/stats/man/lm.Rd
index ff05afabff..b54373dff4 100644
--- a/src/library/stats/man/lm.Rd
+++ b/src/library/stats/man/lm.Rd
@@ -21,6 +21,8 @@ lm(formula, data, subset, weights, na.action,
    singular.ok = TRUE, contrasts = NULL, offset, \dots)
 
 \S3method{print}{lm}(x, digits = max(3L, getOption("digits") - 3L), \dots)
+
+\S3method{as.data.frame}{lm}(x, ..., level = 0.95, transFUN = NULL)
 }
 \arguments{
   \item{formula}{an object of class \code{"\link{formula}"} (or one that
@@ -81,6 +83,10 @@ lm(formula, data, subset, weights, na.action,
   \item{digits}{the number of \emph{significant} digits to be
     passed to \code{\link{format}(\link{coef}(x), .)} when
     \I{\code{\link{print}()}ing}.}
+  %% as.data.frame.lm():
+  \item{level}{the confidence level required.}
+  \item{transFUN}{a function to transform \code{estimate}, \code{conf.low} and
+    \code{conf.high}.}
 }
 \details{
   Models for \code{lm} are specified symbolically.  A typical model has
@@ -168,6 +174,10 @@ lm(formula, data, subset, weights, na.action,
   \code{effects} and (unless not requested) \code{qr} relating to the linear
   fit, for use by extractor functions such as \code{summary} and
   \code{\link{effects}}.
+
+  \code{as.data.frame} returns a data frame with statistics as provided by
+  \code{coef(summary(.))} and confidence intervals for model
+  estimates.
 }
 \section{Using time series}{
   Considerable care is needed when using \code{lm} with time series.




De?: Martin Maechler [mailto:maechler at stat.math.ethz.ch] 
Envoy??: vendredi 17 janvier 2025 17:04
??: SOEIRO Thomas
Cc?: r-devel at r-project.org
Objet?: Re: [Rd] as.data.frame() methods for model objects


>>>>> SOEIRO Thomas via R-devel 
>>>>>     on Fri, 17 Jan 2025 14:19:31 +0000 writes:

> Following Duncan Murdoch's off-list comments (thanks again!), here is a more complete/flexible version:
> 
> as.data.frame.lm <- function(x, ..., level = 0.95, exp = FALSE) {
>   cf <- x |> summary() |> stats::coef()
>   ci <- stats::confint(x, level = level)
>   if (exp) {
>     cf[, "Estimate"] <- exp(cf[, "Estimate"])
>     ci <- exp(ci)
>   }
>   df <- data.frame(row.names(cf), cf, ci, row.names = NULL)
>   names(df) <- c("term", "estimate", "std.error", "statistic", "p.value", "conf.low", "conf.high")
>   df
> }

Indeed, using level is much better already.

Instead of the  exp = FALSE ,
I'd use    transFUN = NULL
and then

    if(!is.null(transFUN)) {
       stopifnot(is.function(transFUN))
       cf[, "Estimate"] <- transFUN(cf[, "Estimate"])
       ci <- transFUN(ci)
    }

Noting that I'd want "inverse-logit" (*) in some cases, but also
different things for different link functions, hence just
exp = T/F  is not enough.

Martin

--
*) "inverse-logit"  is simply R's   plogis()  function;  quite a
 few people have been re-inventing it, also in their packages ...



> > lm(breaks ~ wool + tension, warpbreaks) |> as.data.frame()
>          term   estimate std.error statistic      p.value  conf.low  conf.high
> 1 (Intercept)  39.277778  3.161783 12.422667 6.681866e-17  32.92715 45.6284061
> 2       woolB  -5.777778  3.161783 -1.827380 7.361367e-02 -12.12841  0.5728505
> 3    tensionM -10.000000  3.872378 -2.582393 1.278683e-02 -17.77790 -2.2221006
> 4    tensionH -14.722222  3.872378 -3.801856 3.913842e-04 -22.50012 -6.9443228
> 
> > glm(breaks < 20 ~ wool + tension, data = warpbreaks) |> as.data.frame(exp = TRUE)
> Waiting for profiling to be done...
>          term estimate std.error statistic    p.value  conf.low conf.high
> 1 (Intercept) 1.076887 0.1226144 0.6041221 0.54849393 0.8468381  1.369429
> 2       woolB 1.076887 0.1226144 0.6041221 0.54849393 0.8468381  1.369429
> 3    tensionM 1.248849 0.1501714 1.4797909 0.14520270 0.9304302  1.676239
> 4    tensionH 1.395612 0.1501714 2.2196863 0.03100435 1.0397735  1.873229
> 
> Thank you.
> 
> Best regards,
> Thomas
> 
> 
> 
> -----Message d'origine-----
> De?: SOEIRO Thomas 
> Envoy??: jeudi 16 janvier 2025 14:36
> ??: r-devel at r-project.org
> Objet?: as.data.frame() methods for model objects
> 
> Hello all,
> 
> Would there be any interest for adding as.data.frame() methods for model objects?
> Of course there is packages (e.g. broom), but I think providing methods would be more discoverable (and the patch would be small).
> It is really useful for exporting model results or for plotting.
> 
> e.g.:
> 
> as.data.frame.lm <- function(x) { # could get other arguments, e.g. exp = TRUE/FALSE to exponentiate estimate, conf.low, conf.high
>   cf <- x |> summary() |> stats::coef()
>   ci <- stats::confint(x)
>   data.frame(
>     term = row.names(cf),
>     estimate = cf[, "Estimate"],
>     p.value = cf[, 4], # magic number because name changes between lm() and glm(*, family = *)
>     conf.low = ci[, "2.5 %"],
>     conf.high = ci[, "97.5 %"],
>     row.names = NULL
>   )
> }
> 
> > lm(breaks ~ wool + tension, warpbreaks) |> as.data.frame()
>          term   estimate      p.value  conf.low  conf.high
> 1 (Intercept)  39.277778 6.681866e-17  32.92715 45.6284061
> 2       woolB  -5.777778 7.361367e-02 -12.12841  0.5728505
> 3    tensionM -10.000000 1.278683e-02 -17.77790 -2.2221006
> 4    tensionH -14.722222 3.913842e-04 -22.50012 -6.9443228
> 
> > glm(breaks < 20 ~ wool + tension, data = warpbreaks) |> as.data.frame()
> Waiting for profiling to be done...
>          term   estimate    p.value    conf.low conf.high
> 1 (Intercept) 0.07407407 0.54849393 -0.16624575 0.3143939
> 2       woolB 0.07407407 0.54849393 -0.16624575 0.3143939
> 3    tensionM 0.22222222 0.14520270 -0.07210825 0.5165527
> 4    tensionH 0.33333333 0.03100435  0.03900286 0.6276638
> 
> Thank you.
> 
> Best regards,
> Thomas

