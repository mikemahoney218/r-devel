From norbert@kuder @end|ng |rom gm@||@com  Thu Jan  2 15:04:57 2025
From: norbert@kuder @end|ng |rom gm@||@com (Norbert Kuder)
Date: Thu, 2 Jan 2025 15:04:57 +0100
Subject: [Rd] Possible issue in stats/arima.R package
Message-ID: <CAMUMQUSh5t2sazypdiAeOSJ2MQssNfb89jQJvvBwRbA1PwAqeA@mail.gmail.com>

Hello all,

I am running R version 4.4.2 (2024-10-31 ucrt) on Windows 10 x64, and
noticed something that might be a minor bug (or at least inconsistent code)
in the stats/arima.R package.
I have found:
1. A missing stop() call at line 69:
    if (length(order) == 3) seasonal <- list(order = seasonal) else
("\'seasonal\' is of the wrong length")
it should be rather:
    if (length(order) == 3) seasonal <- list(order = seasonal) else
stop("\'seasonal\' is of the wrong length")

2. An unused 'mod' variable assignment at line 190:

mod <- makeARIMA(trarma[[1]], trarma[[2]], Delta, kappa, SSinit)

I am trying to confirm whether this is intended behavior or possibly an
overlooked detail. Could someone please clarify if the current logic is
correct?

Thank you.

Best regards,
Norbert Kuder

	[[alternative HTML version deleted]]


From murdoch@dunc@n @end|ng |rom gm@||@com  Thu Jan  2 17:20:31 2025
From: murdoch@dunc@n @end|ng |rom gm@||@com (Duncan Murdoch)
Date: Thu, 2 Jan 2025 11:20:31 -0500
Subject: [Rd] Possible issue in stats/arima.R package
In-Reply-To: <CAMUMQUSh5t2sazypdiAeOSJ2MQssNfb89jQJvvBwRbA1PwAqeA@mail.gmail.com>
References: <CAMUMQUSh5t2sazypdiAeOSJ2MQssNfb89jQJvvBwRbA1PwAqeA@mail.gmail.com>
Message-ID: <822e67f1-5900-4355-b231-a09c8691d4ae@gmail.com>

On 2025-01-02 9:04 a.m., Norbert Kuder wrote:
> Hello all,
> 
> I am running R version 4.4.2 (2024-10-31 ucrt) on Windows 10 x64, and
> noticed something that might be a minor bug (or at least inconsistent code)
> in the stats/arima.R package.
> I have found:
> 1. A missing stop() call at line 69:
>      if (length(order) == 3) seasonal <- list(order = seasonal) else
> ("\'seasonal\' is of the wrong length")
> it should be rather:
>      if (length(order) == 3) seasonal <- list(order = seasonal) else
> stop("\'seasonal\' is of the wrong length")

I think you're right about this one.

> 
> 2. An unused 'mod' variable assignment at line 190:
> 
> mod <- makeARIMA(trarma[[1]], trarma[[2]], Delta, kappa, SSinit)
> 
> I am trying to confirm whether this is intended behavior or possibly an
> overlooked detail. Could someone please clarify if the current logic is
> correct?
> 

In the R-devel source I see mod being used in the next statement:

         mod <- makeARIMA(trarma[[1L]], trarma[[2L]], Delta, kappa, SSinit)
         val <- if(ncxreg > 0L)
             arimaSS(x - xreg %*% coef[narma + (1L:ncxreg)], mod)
         else arimaSS(x, mod)

It appears in both alternatives of the if statement.

This one is strange though:  the code in the github mirror 
(https://github.com/wch/r-source/blob/4a1ed749271c52e60a85e794e6f34b0831efb1ae/src/library/stats/R/arima.R#L256-L258) 
is different:

         mod <- makeARIMA(trarma[[1L]], trarma[[2L]], Delta, kappa, SSinit)
         if(ncxreg > 0) x <- x - xreg %*% coef[narma + (1L:ncxreg)]
         arimaSS(x, mod)

yet the log shows no recent changes.  I'm not sure what's going on.

Duncan Murdoch


From murdoch@dunc@n @end|ng |rom gm@||@com  Thu Jan  2 17:28:45 2025
From: murdoch@dunc@n @end|ng |rom gm@||@com (Duncan Murdoch)
Date: Thu, 2 Jan 2025 11:28:45 -0500
Subject: [Rd] Possible issue in stats/arima.R package
In-Reply-To: <822e67f1-5900-4355-b231-a09c8691d4ae@gmail.com>
References: <CAMUMQUSh5t2sazypdiAeOSJ2MQssNfb89jQJvvBwRbA1PwAqeA@mail.gmail.com>
 <822e67f1-5900-4355-b231-a09c8691d4ae@gmail.com>
Message-ID: <e93186db-914d-41cf-b1df-46cbc90af3b6@gmail.com>

On 2025-01-02 11:20 a.m., Duncan Murdoch wrote:
> On 2025-01-02 9:04 a.m., Norbert Kuder wrote:
>> Hello all,
>>
>> I am running R version 4.4.2 (2024-10-31 ucrt) on Windows 10 x64, and
>> noticed something that might be a minor bug (or at least inconsistent code)
>> in the stats/arima.R package.
>> I have found:
>> 1. A missing stop() call at line 69:
>>       if (length(order) == 3) seasonal <- list(order = seasonal) else
>> ("\'seasonal\' is of the wrong length")
>> it should be rather:
>>       if (length(order) == 3) seasonal <- list(order = seasonal) else
>> stop("\'seasonal\' is of the wrong length")
> 
> I think you're right about this one.
> 
>>
>> 2. An unused 'mod' variable assignment at line 190:
>>
>> mod <- makeARIMA(trarma[[1]], trarma[[2]], Delta, kappa, SSinit)
>>
>> I am trying to confirm whether this is intended behavior or possibly an
>> overlooked detail. Could someone please clarify if the current logic is
>> correct?
>>
> 
> In the R-devel source I see mod being used in the next statement:
> 
>           mod <- makeARIMA(trarma[[1L]], trarma[[2L]], Delta, kappa, SSinit)
>           val <- if(ncxreg > 0L)
>               arimaSS(x - xreg %*% coef[narma + (1L:ncxreg)], mod)
>           else arimaSS(x, mod)
> 
> It appears in both alternatives of the if statement.
> 
> This one is strange though:  the code in the github mirror
> (https://github.com/wch/r-source/blob/4a1ed749271c52e60a85e794e6f34b0831efb1ae/src/library/stats/R/arima.R#L256-L258)
> is different:
> 
>           mod <- makeARIMA(trarma[[1L]], trarma[[2L]], Delta, kappa, SSinit)
>           if(ncxreg > 0) x <- x - xreg %*% coef[narma + (1L:ncxreg)]
>           arimaSS(x, mod)
> 
> yet the log shows no recent changes.  I'm not sure what's going on.

Mystery solved:  code like this appears several times in that file.  In 
the occurrence here:

https://github.com/wch/r-source/blob/4a1ed749271c52e60a85e794e6f34b0831efb1ae/src/library/stats/R/arima.R#L293

it does appear that the mod value isn't being used.

Duncan Murdoch


From m@ech|er @end|ng |rom @t@t@m@th@ethz@ch  Thu Jan  2 20:42:58 2025
From: m@ech|er @end|ng |rom @t@t@m@th@ethz@ch (Martin Maechler)
Date: Thu, 2 Jan 2025 20:42:58 +0100
Subject: [Rd] Possible issue in stats/arima.R package
In-Reply-To: <e93186db-914d-41cf-b1df-46cbc90af3b6@gmail.com>
References: <CAMUMQUSh5t2sazypdiAeOSJ2MQssNfb89jQJvvBwRbA1PwAqeA@mail.gmail.com>
 <822e67f1-5900-4355-b231-a09c8691d4ae@gmail.com>
 <e93186db-914d-41cf-b1df-46cbc90af3b6@gmail.com>
Message-ID: <26486.60482.328642.701605@stat.math.ethz.ch>

>>>>> Duncan Murdoch 
>>>>>     on Thu, 2 Jan 2025 11:28:45 -0500 writes:

    > On 2025-01-02 11:20 a.m., Duncan Murdoch wrote:
    >> On 2025-01-02 9:04 a.m., Norbert Kuder wrote:
    >>> Hello all,
    >>> 
    >>> I am running R version 4.4.2 (2024-10-31 ucrt) on Windows 10 x64, and
    >>> noticed something that might be a minor bug (or at least inconsistent code)
    >>> in the stats/arima.R package.
    >>> I have found:
    >>> 1. A missing stop() call at line 69:
    >>> if (length(order) == 3) seasonal <- list(order = seasonal) else
    >>> ("\'seasonal\' is of the wrong length")
    >>> it should be rather:
    >>> if (length(order) == 3) seasonal <- list(order = seasonal) else
    >>> stop("\'seasonal\' is of the wrong length")
    >> 
    >> I think you're right about this one.
    >> 
    >>> 
    >>> 2. An unused 'mod' variable assignment at line 190:
    >>> 
    >>> mod <- makeARIMA(trarma[[1]], trarma[[2]], Delta, kappa, SSinit)
    >>> 
    >>> I am trying to confirm whether this is intended behavior or possibly an
    >>> overlooked detail. Could someone please clarify if the current logic is
    >>> correct?
    >>> 
    >> 
    >> In the R-devel source I see mod being used in the next statement:
    >> 
    >> mod <- makeARIMA(trarma[[1L]], trarma[[2L]], Delta, kappa, SSinit)
    >> val <- if(ncxreg > 0L)
    >> arimaSS(x - xreg %*% coef[narma + (1L:ncxreg)], mod)
    >> else arimaSS(x, mod)
    >> 
    >> It appears in both alternatives of the if statement.
    >> 
    >> This one is strange though:  the code in the github mirror
    >> (https://github.com/wch/r-source/blob/4a1ed749271c52e60a85e794e6f34b0831efb1ae/src/library/stats/R/arima.R#L256-L258)
    >> is different:
    >> 
    >> mod <- makeARIMA(trarma[[1L]], trarma[[2L]], Delta, kappa, SSinit)
    >> if(ncxreg > 0) x <- x - xreg %*% coef[narma + (1L:ncxreg)]
    >> arimaSS(x, mod)
    >> 
    >> yet the log shows no recent changes.  I'm not sure what's going on.

    > Mystery solved:  code like this appears several times in that file.  In 
    > the occurrence here:

    > https://github.com/wch/r-source/blob/4a1ed749271c52e60a85e794e6f34b0831efb1ae/src/library/stats/R/arima.R#L293

    > it does appear that the mod value isn't being used.

    > Duncan Murdoch

Thank you, Norbert and Duncan.
A little bit (unfinished)  aRcheology showed that both parts
have been in the arima code since Dec 11 2003 (when the code, i.e., the
whole package 'ts') was moved / merged into package 'stats'.

I'll fix and quickly test the change, and then commit it.

Congratulations indeed to Norbert Kuder for finding such (small)
blemishes of such an age!

... and  Happy New yeaR!   to all readers.
Martin


From m@ech|er @end|ng |rom @t@t@m@th@ethz@ch  Thu Jan  2 21:53:43 2025
From: m@ech|er @end|ng |rom @t@t@m@th@ethz@ch (Martin Maechler)
Date: Thu, 2 Jan 2025 21:53:43 +0100
Subject: [Rd] Possible issue in stats/arima.R package
In-Reply-To: <26486.60482.328642.701605@stat.math.ethz.ch>
References: <CAMUMQUSh5t2sazypdiAeOSJ2MQssNfb89jQJvvBwRbA1PwAqeA@mail.gmail.com>
 <822e67f1-5900-4355-b231-a09c8691d4ae@gmail.com>
 <e93186db-914d-41cf-b1df-46cbc90af3b6@gmail.com>
 <26486.60482.328642.701605@stat.math.ethz.ch>
Message-ID: <26486.64727.599697.148053@stat.math.ethz.ch>

>>>>> Martin Maechler on Thu, 2 Jan 2025 20:42:58 +0100 writes:
 >>>>> Duncan Murdoch on Thu, 2 Jan 2025 11:28:45 -0500 writes:
    >> On 2025-01-02 11:20 a.m., Duncan Murdoch wrote:
    >>> On 2025-01-02 9:04 a.m., Norbert Kuder wrote:
    >>>> Hello all,
    >>>> 
    >>>> I am running R version 4.4.2 (2024-10-31 ucrt) on Windows 10 x64, and
    >>>> noticed something that might be a minor bug (or at least inconsistent code)
    >>>> in the stats/arima.R package.
    >>>> I have found:
    >>>> 1. A missing stop() call at line 69:
    >>>>  if (length(order) == 3) seasonal <- list(order = seasonal) else
    >>>>    ("\'seasonal\' is of the wrong length")
    >>>> it should be rather:
    >>>> if (length(order) == 3) seasonal <- list(order = seasonal) else
    >>>> stop("\'seasonal\' is of the wrong length")
    >>> 
    >>> I think you're right about this one.

well, actually, the mishap is larger:

Reading the help page for arima,  'seasonal' is documented as

 seasonal: A specification of the seasonal part of the ARIMA model, plus
           the period (which defaults to ?frequency(x)?).  This may be a
           list with components ?order? and ?period?, or just a numeric
           vector of length 3 which specifies the seasonal ?order?.  In
           the latter case the default period is used.

Note the
    or just a numeric vector of length 3 ... the seasonal 'order'
part.
If you look at the larger context of the

   else ("'seasonal...

part, it becomes clear that -- in order to fulfill the above
documented behavior, it's not length(order),
but length(seasonal) which should be 3   which leads to the
following change :

@@ -124,10 +124,11 @@
             if(!is.numeric(seasonal$order) || length(seasonal$order) != 3L
                || any(seasonal$order < 0L))
                 stop("'seasonal$order' must be a non-negative numeric vector of length 3")
-        } else if(is.numeric(order)) {
-            if(length(order) == 3L) seasonal <- list(order=seasonal)
-            else ("'seasonal' is of the wrong length")
-        } else stop("'seasonal' must be a list with component 'order'")
+        } else if(is.numeric(seasonal)) { # meant to be  seasonal$order
+            if(length(seasonal) != 3L || any(seasonal < 0))
+                stop("if not a list, 'seasonal' must be a non-negative numeric vector of length 3")
+            seasonal <- list(order=seasonal)
+        } else stop("'seasonal' must be a list with component 'order' or length-3 vector")
 

... I still plan to commit this, but it may well be that this
change will wake up arima() use that was buggy and never detected
till now.

Martin


From norbert@kuder @end|ng |rom gm@||@com  Fri Jan  3 17:13:36 2025
From: norbert@kuder @end|ng |rom gm@||@com (Norbert Kuder)
Date: Fri, 3 Jan 2025 17:13:36 +0100
Subject: [Rd] Possible issue in stats/arima.R package
In-Reply-To: <26486.64727.599697.148053@stat.math.ethz.ch>
References: <CAMUMQUSh5t2sazypdiAeOSJ2MQssNfb89jQJvvBwRbA1PwAqeA@mail.gmail.com>
 <822e67f1-5900-4355-b231-a09c8691d4ae@gmail.com>
 <e93186db-914d-41cf-b1df-46cbc90af3b6@gmail.com>
 <26486.60482.328642.701605@stat.math.ethz.ch>
 <26486.64727.599697.148053@stat.math.ethz.ch>
Message-ID: <CAMUMQUTp+PoZfUiOAZ=U1tG3PpZokknNrvjtFEg7a7YQ48XFuw@mail.gmail.com>

Martin,

thank you solving this issue. Anyway there is the same bug in arima0.R:

https://github.com/wch/r-source/blob/4a1ed749271c52e60a85e794e6f34b0831efb1ae/src/library/stats/R/arma0.R#L79

Best regards,
Norbert Kuder

czw., 2 sty 2025, 21:53 u?ytkownik Martin Maechler <
maechler at stat.math.ethz.ch> napisa?:

> >>>>> Martin Maechler on Thu, 2 Jan 2025 20:42:58 +0100 writes:
>  >>>>> Duncan Murdoch on Thu, 2 Jan 2025 11:28:45 -0500 writes:
>     >> On 2025-01-02 11:20 a.m., Duncan Murdoch wrote:
>     >>> On 2025-01-02 9:04 a.m., Norbert Kuder wrote:
>     >>>> Hello all,
>     >>>>
>     >>>> I am running R version 4.4.2 (2024-10-31 ucrt) on Windows 10 x64,
> and
>     >>>> noticed something that might be a minor bug (or at least
> inconsistent code)
>     >>>> in the stats/arima.R package.
>     >>>> I have found:
>     >>>> 1. A missing stop() call at line 69:
>     >>>>  if (length(order) == 3) seasonal <- list(order = seasonal) else
>     >>>>    ("\'seasonal\' is of the wrong length")
>     >>>> it should be rather:
>     >>>> if (length(order) == 3) seasonal <- list(order = seasonal) else
>     >>>> stop("\'seasonal\' is of the wrong length")
>     >>>
>     >>> I think you're right about this one.
>
> well, actually, the mishap is larger:
>
> Reading the help page for arima,  'seasonal' is documented as
>
>  seasonal: A specification of the seasonal part of the ARIMA model, plus
>            the period (which defaults to ?frequency(x)?).  This may be a
>            list with components ?order? and ?period?, or just a numeric
>            vector of length 3 which specifies the seasonal ?order?.  In
>            the latter case the default period is used.
>
> Note the
>     or just a numeric vector of length 3 ... the seasonal 'order'
> part.
> If you look at the larger context of the
>
>    else ("'seasonal...
>
> part, it becomes clear that -- in order to fulfill the above
> documented behavior, it's not length(order),
> but length(seasonal) which should be 3   which leads to the
> following change :
>
> @@ -124,10 +124,11 @@
>              if(!is.numeric(seasonal$order) || length(seasonal$order) != 3L
>                 || any(seasonal$order < 0L))
>                  stop("'seasonal$order' must be a non-negative numeric
> vector of length 3")
> -        } else if(is.numeric(order)) {
> -            if(length(order) == 3L) seasonal <- list(order=seasonal)
> -            else ("'seasonal' is of the wrong length")
> -        } else stop("'seasonal' must be a list with component 'order'")
> +        } else if(is.numeric(seasonal)) { # meant to be  seasonal$order
> +            if(length(seasonal) != 3L || any(seasonal < 0))
> +                stop("if not a list, 'seasonal' must be a non-negative
> numeric vector of length 3")
> +            seasonal <- list(order=seasonal)
> +        } else stop("'seasonal' must be a list with component 'order' or
> length-3 vector")
>
>
> ... I still plan to commit this, but it may well be that this
> change will wake up arima() use that was buggy and never detected
> till now.
>
> Martin
>
>
>

	[[alternative HTML version deleted]]


From m@ech|er @end|ng |rom @t@t@m@th@ethz@ch  Fri Jan  3 17:22:34 2025
From: m@ech|er @end|ng |rom @t@t@m@th@ethz@ch (Martin Maechler)
Date: Fri, 3 Jan 2025 17:22:34 +0100
Subject: [Rd] Possible issue in stats/arima.R package
In-Reply-To: <26486.60482.328642.701605@stat.math.ethz.ch>
References: <CAMUMQUSh5t2sazypdiAeOSJ2MQssNfb89jQJvvBwRbA1PwAqeA@mail.gmail.com>
 <822e67f1-5900-4355-b231-a09c8691d4ae@gmail.com>
 <e93186db-914d-41cf-b1df-46cbc90af3b6@gmail.com>
 <26486.60482.328642.701605@stat.math.ethz.ch>
Message-ID: <26488.3786.644216.114494@stat.math.ethz.ch>

>>>>> Martin Maechler on Thu, 2 Jan 2025 20:42:58 +0100 writes:
  >>>>> Duncan Murdoch on Thu, 2 Jan 2025 11:28:45 -0500 writes:

    >> On 2025-01-02 11:20 a.m., Duncan Murdoch wrote:
    >>> On 2025-01-02 9:04 a.m., Norbert Kuder wrote:
    >>>> Hello all,
    >>>> 
    >>>> I am running R version 4.4.2 (2024-10-31 ucrt) on Windows 10 x64, and
    >>>> noticed something that might be a minor bug (or at least inconsistent code)
    >>>> in the stats/arima.R package.

    ....................

    >>>> 2. An unused 'mod' variable assignment at line 190:
    >>>> 
    >>>> mod <- makeARIMA(trarma[[1]], trarma[[2]], Delta, kappa, SSinit)
    >>>> 
    >>>> I am trying to confirm whether this is intended behavior or possibly an
    >>>> overlooked detail. Could someone please clarify if the current logic is
    >>>> correct?

    >> Mystery solved:  code like this appears several times in that file.  In 
    >> the occurrence here:

    >> https://github.com/wch/r-source/blob/4a1ed749271c52e60a85e794e6f34b0831efb1ae/src/library/stats/R/arima.R#L293

    >> it does appear that the mod value isn't being used.

    >> Duncan Murdoch

    > Thank you, Norbert and Duncan.
    > A little bit (unfinished)  aRcheology showed that both parts
    > have been in the arima code since Dec 11 2003 (when the code, i.e., the
    > whole package 'ts') was moved / merged into package 'stats'.

    > I'll fix and quickly test the change, and then commit it.

and testing quickly revealed what is obvious in hindsight:
When minimizing the negative log likelihood, in

    optim(<p>, armafn, ...)

the armafn() is called of course and it *does* need the model,
i.e., `mod`.

==> the 2nd "inconsistency  was *not* a mistake at all: The

    mod <- makeARIMA(....)

line has clearly been necessary all along.

Martin


From norbert@kuder @end|ng |rom gm@||@com  Fri Jan  3 18:02:16 2025
From: norbert@kuder @end|ng |rom gm@||@com (Norbert Kuder)
Date: Fri, 3 Jan 2025 18:02:16 +0100
Subject: [Rd] stats/ar.R issue - else branch never used
Message-ID: <CAMUMQUSHKprCOdv9RsmhtwHb9YmUm9L=cbiFqE5mFy2u-cYZZQ@mail.gmail.com>

Hello,

There is another issue in stats/ar.R:

https://github.com/wch/r-source/blob/4a1ed749271c52e60a85e794e6f34b0831efb1ae/src/library/stats/R/ar.R#L142
https://github.com/wch/r-source/blob/4a1ed749271c52e60a85e794e6f34b0831efb1ae/src/library/stats/R/ar.R#L429
https://github.com/wch/r-source/blob/4a1ed749271c52e60a85e794e6f34b0831efb1ae/src/library/stats/R/ar.R#L570

When aic is passed as a boolean (T/F), the code does the following:

maic <- min(aic)      # 0 if F, 1 if T
xaic <- setNames(if(is.finite(maic)) xaic - min(xaic) else
                                                    ifelse(xaic == maic, 0,
Inf), 0L:order.max)

Because maic is always 0 or 1, is.finite(maic) is always T, so the else
branch (ifelse(xaic == maic, 0, Inf)) never executes.

Please check if my finding is valid.

Best regards,
Norbert Kuder

	[[alternative HTML version deleted]]


From norbert@kuder @end|ng |rom gm@||@com  Fri Jan  3 19:06:14 2025
From: norbert@kuder @end|ng |rom gm@||@com (Norbert Kuder)
Date: Fri, 3 Jan 2025 19:06:14 +0100
Subject: [Rd] stats/HoltWinters.R inverted logic in seasonal in R and C
Message-ID: <CAMUMQUTbwVX6SrojJiH654mfVrzD4ur4bipi22FfOW4qFRtOKQ@mail.gmail.com>

Hello,

I have noticed a potentially confusing implementation in the HoltWinters
function regarding the seasonal parameter mapping between R and C code:
https://github.com/wch/r-source/blob/4a1ed749271c52e60a85e794e6f34b0831efb1ae/src/library/stats/R/HoltWinters.R#L98
The C code interprets a seasonal value of 1 as additive and 0 as
multiplicative.
The R seasonal can be "additive" or "multiplicative", so the R code must
invert the logic when calling C.

The proposed solution is to define a seasonalChoice variable:

hw <- function(x, alpha, beta, gamma, seasonal, start.time, f, ...) {
    lenx <- length(x)
    seasonalChoice <- if (seasonal == "multiplicative") 0L else 1L

    .C(C_HoltWinters,
        as.double(x),
        lenx,
        as.double(max(min(alpha, 1), 0)),
        as.double(max(min(beta, 1), 0)),
        as.double(max(min(gamma, 1), 0)),
        as.integer(start.time),
        as.integer(seasonalChoice),
        as.integer(f),
        as.integer(!is.logical(beta) || beta),
        as.integer(!is.logical(gamma) || gamma),
        ...
    )
}

Please check the proposed solution.

Regards,
Norbert Kuder

	[[alternative HTML version deleted]]


From thebudget72 @end|ng |rom gm@||@com  Sat Jan  4 07:25:42 2025
From: thebudget72 @end|ng |rom gm@||@com (Philip Rogers)
Date: Sat, 4 Jan 2025 07:25:42 +0100
Subject: [Rd] Fix documentation about <- and = differences
Message-ID: <eaec60d1-ef4c-4a8f-a036-53c348ad9ba7@gmail.com>

Hello R devs,

this StackOverflow answer says that the R documentation is wrong: 
https://stackoverflow.com/a/51564252/1719931

Can we fi it?

Best,

&#8203;
	[[alternative HTML version deleted]]


From murdoch@dunc@n @end|ng |rom gm@||@com  Sat Jan  4 17:29:24 2025
From: murdoch@dunc@n @end|ng |rom gm@||@com (Duncan Murdoch)
Date: Sat, 4 Jan 2025 11:29:24 -0500
Subject: [Rd] Fix documentation about <- and = differences
In-Reply-To: <eaec60d1-ef4c-4a8f-a036-53c348ad9ba7@gmail.com>
References: <eaec60d1-ef4c-4a8f-a036-53c348ad9ba7@gmail.com>
Message-ID: <bae8a9b6-1253-4108-8133-e275193ec45c@gmail.com>

On 2025-01-04 1:25 a.m., Philip Rogers wrote:
> Hello R devs,
> 
> this StackOverflow answer says that the R documentation is wrong:
> https://stackoverflow.com/a/51564252/1719931
> 
> Can we fi it?

Why do you think the SO answer is right and the docs are wrong?  Maybe 
the parser is just missing a user error.

My own feeling is that any use of "=" as an assignment operator is too much.

Duncan Murdoch


From murdoch@dunc@n @end|ng |rom gm@||@com  Sat Jan  4 17:55:01 2025
From: murdoch@dunc@n @end|ng |rom gm@||@com (Duncan Murdoch)
Date: Sat, 4 Jan 2025 11:55:01 -0500
Subject: [Rd] Fix documentation about <- and = differences
In-Reply-To: <eaec60d1-ef4c-4a8f-a036-53c348ad9ba7@gmail.com>
References: <eaec60d1-ef4c-4a8f-a036-53c348ad9ba7@gmail.com>
Message-ID: <69d4067a-b140-4f41-b7eb-a01b6d44f32a@gmail.com>

On 2025-01-04 1:25 a.m., Philip Rogers wrote:
> Hello R devs,
> 
> this StackOverflow answer says that the R documentation is wrong:
> https://stackoverflow.com/a/51564252/1719931
> 
> Can we fi it?

By the way, the SO answer is wrong about the history of this.  It says 
that this message:  https://developer.r-project.org/equalAssign.html is 
the "original explanation by John Chambers", but in fact John committed 
the text that is still present in the docs several months earlier,
to both the `?assign` help page (rev 15467, 2001-08-13) and to the 
equalAssign.html document on developer.r-project.org (rev 608, same day).

Duncan Murdoch


From ro|@nd@|u@@ @end|ng |rom thuenen@de  Tue Jan  7 07:28:37 2025
From: ro|@nd@|u@@ @end|ng |rom thuenen@de (=?UTF-8?Q?Roland_Fu=C3=9F?=)
Date: Tue, 7 Jan 2025 07:28:37 +0100
Subject: [Rd] Small typo in nlme documentation
Message-ID: <96524c6e-ba08-4388-86cf-fcc711c5aa4e@thuenen.de>

Hi,

I've noticed a small typo in `help("varClasses", "nlme")`. Contrary to 
what the "Note" says, variance classes need a method for `Initialize` 
(capital i) and not `initialize`.

Best regards,

Roland

-- 
Dr. Roland Fu?

Th?nen-Institut f?r Agrarklimaschutz/
Th?nen Institute of Climate-Smart Agriculture

Bundesallee 65
D-38116 Braunschweig, Germany

Tel./Webex: ++49 531 25701967
Email: roland.fuss at thuenen.de

Arbeitsgruppe "Emissionsberichterstattung"/
Working group "Emission Inventories"
Email: emissionsinventare at thuenen.de

Das Johann Heinrich von Th?nen-Institut,
Bundesforschungsinstitut f?r L?ndliche R?ume,
Wald und Fischerei ? kurz: Th?nen-Institut ?
besteht aus 15 Fachinstituten, die in den
Bereichen ?konomie, ?kologie und Technologie
forschen und die Politik beraten.

The Johann Heinrich von Th?nen Institute,
Federal Research Institute for Rural Areas,
Forestry and Fisheries ? Th?nen Institute in brief ?
consists of 15 specialized institutes that
carry out research and provide policy advice
in the fields of economy, ecology and technology.


From @eb@meyer @end|ng |rom |@u@de  Tue Jan  7 13:43:36 2025
From: @eb@meyer @end|ng |rom |@u@de (Sebastian Meyer)
Date: Tue, 7 Jan 2025 13:43:36 +0100
Subject: [Rd] Small typo in nlme documentation
In-Reply-To: <96524c6e-ba08-4388-86cf-fcc711c5aa4e@thuenen.de>
References: <96524c6e-ba08-4388-86cf-fcc711c5aa4e@thuenen.de>
Message-ID: <10fd5cb7-4e62-4672-9da6-e07974993a69@fau.de>

Thanks. Fixed in the trunk.

	Sebastian Meyer


Am 07.01.25 um 07:28 schrieb Roland Fu? via R-devel:
> Hi,
> 
> I've noticed a small typo in `help("varClasses", "nlme")`. Contrary to
> what the "Note" says, variance classes need a method for `Initialize`
> (capital i) and not `initialize`.
> 
> Best regards,
> 
> Roland
>


From bbo|ker @end|ng |rom gm@||@com  Wed Jan  8 16:57:47 2025
From: bbo|ker @end|ng |rom gm@||@com (Ben Bolker)
Date: Wed, 8 Jan 2025 10:57:47 -0500
Subject: [Rd] binomial()$linkinv no longer accepts integer values
Message-ID: <7dfe81b2-c7ec-49fe-8955-9c41a5771d24@gmail.com>


As of r87537, binomial()$linkinv no longer accepts integer arguments.

binomial()$linkinv(1.0)  ## 0.7310586
binomial()$linkinv(1L)

Error in binomial()$linkinv(1L) :
   REAL() can only be applied to a 'numeric', not a 'integer'

   Since R is usually so permissive/sloppy with the distinction between 
integers and numeric/doubles, I'd argue that this is a bug ...

   (This came up because it happens to break lme4's tests.)

    I haven't done the archaeology to figure out when this broke/exactly 
what change in the R code base broke it: it happened within the last 
month or so and it's certainly something upstream of the linkinv 
function itself, as (according to 'git blame') nothing in that function 
has changed in the last 4 years ... (if it were of interest I could 'git 
bisect' to figure it out but maybe someone will save me the trouble ...)

   Thoughts, insights?  Should I post this to r-bugzilla?  Or suck it up 
and accept it as the new reality?

   cheers
    Ben Bolker

====
binomial()$linkinv is:

function (eta)
.Call(C_logit_linkinv, eta)
<environment: namespace:stats>

Here is the body of the function in C code:

https://github.com/r-devel/r-svn/blob/195ab0870a8131d01492f8f1d3a2ad514bc7e040/src/library/stats/src/family.c#L72C1-L89C2

SEXP logit_linkinv(SEXP eta)
{
     SEXP ans = PROTECT(shallow_duplicate(eta));
     int i, n = LENGTH(eta);
     double *rans = REAL(ans), *reta = REAL(eta);

     if (!n || !isReal(eta))
	error(_("Argument %s must be a nonempty numeric vector"), "eta");
     for (i = 0; i < n; i++) {
	double etai = reta[i], tmp;
	tmp = (etai < MTHRESH) ? DBL_EPSILON :
	    ((etai > THRESH) ? INVEPS : exp(etai));
	rans[i] = x_d_opx(tmp);
     }
     UNPROTECT(1);
     return ans;
}


From |kry|ov @end|ng |rom d|@root@org  Wed Jan  8 17:20:11 2025
From: |kry|ov @end|ng |rom d|@root@org (Ivan Krylov)
Date: Wed, 8 Jan 2025 19:20:11 +0300
Subject: [Rd] binomial()$linkinv no longer accepts integer values
In-Reply-To: <7dfe81b2-c7ec-49fe-8955-9c41a5771d24@gmail.com>
References: <7dfe81b2-c7ec-49fe-8955-9c41a5771d24@gmail.com>
Message-ID: <20250108192011.01b9155b@Tarkus>

On Wed, 8 Jan 2025 10:57:47 -0500
Ben Bolker <bbolker at gmail.com> wrote:

> I haven't done the archaeology to figure out when this broke/exactly 
> what change in the R code base broke it: it happened within the last 
> month or so

binomial() itself exhibits this property even in R-4.2.2 from more than
two years ago:

R -q -s -e 'getRversion(); binomial()$linkinv(1L)'
# [1] ?4.2.2?
# Error in binomial()$linkinv(1L) : 
#   REAL() can only be applied to a 'numeric', not a 'integer'

It's the `etas` [1] that suddenly became integer due to a change in
seq.int():

R -q -s -e 'str(seq.int(-8, 8, by=1))'
# num [1:17] -8 -7 -6 -5 -4 -3 -2 -1 0 1 ...
R-devel -q -s -e 'str(seq.int(-8, 8, by=1))'
# int [1:17] -8 -7 -6 -5 -4 -3 -2 -1 0 1 ...

-- 
Best regards,
Ivan

[1]
https://github.com/lme4/lme4/blob/54c54a320c23b34fea2f7e613928d1ebe7a3fd37/tests/testthat/test-glmFamily.R#L10C5-L10C25


From bbo|ker @end|ng |rom gm@||@com  Wed Jan  8 17:26:24 2025
From: bbo|ker @end|ng |rom gm@||@com (Ben Bolker)
Date: Wed, 8 Jan 2025 11:26:24 -0500
Subject: [Rd] binomial()$linkinv no longer accepts integer values
In-Reply-To: <20250108192011.01b9155b@Tarkus>
References: <7dfe81b2-c7ec-49fe-8955-9c41a5771d24@gmail.com>
 <20250108192011.01b9155b@Tarkus>
Message-ID: <efb07b88-fbb0-468e-95d4-307f18e7127e@gmail.com>

   Thanks, that makes sense.

   I guess if it never worked for integers (or hasn't worked in a long 
time, at least) then it doesn't need to be fixed/changed ...

   cheers
    Ben


On 2025-01-08 11:20 a.m., Ivan Krylov wrote:
> On Wed, 8 Jan 2025 10:57:47 -0500
> Ben Bolker <bbolker at gmail.com> wrote:
> 
>> I haven't done the archaeology to figure out when this broke/exactly
>> what change in the R code base broke it: it happened within the last
>> month or so
> 
> binomial() itself exhibits this property even in R-4.2.2 from more than
> two years ago:
> 
> R -q -s -e 'getRversion(); binomial()$linkinv(1L)'
> # [1] ?4.2.2?
> # Error in binomial()$linkinv(1L) :
> #   REAL() can only be applied to a 'numeric', not a 'integer'
> 
> It's the `etas` [1] that suddenly became integer due to a change in
> seq.int():
> 
> R -q -s -e 'str(seq.int(-8, 8, by=1))'
> # num [1:17] -8 -7 -6 -5 -4 -3 -2 -1 0 1 ...
> R-devel -q -s -e 'str(seq.int(-8, 8, by=1))'
> # int [1:17] -8 -7 -6 -5 -4 -3 -2 -1 0 1 ...
> 

-- 
Dr. Benjamin Bolker
Professor, Mathematics & Statistics and Biology, McMaster University
 > E-mail is sent at my convenience; I don't expect replies outside of 
working hours.


From tom@@@k@||ber@ @end|ng |rom gm@||@com  Wed Jan  8 17:56:08 2025
From: tom@@@k@||ber@ @end|ng |rom gm@||@com (Tomas Kalibera)
Date: Wed, 8 Jan 2025 17:56:08 +0100
Subject: [Rd] binomial()$linkinv no longer accepts integer values
In-Reply-To: <efb07b88-fbb0-468e-95d4-307f18e7127e@gmail.com>
References: <7dfe81b2-c7ec-49fe-8955-9c41a5771d24@gmail.com>
 <20250108192011.01b9155b@Tarkus>
 <efb07b88-fbb0-468e-95d4-307f18e7127e@gmail.com>
Message-ID: <10d2110b-1119-4f97-b782-cfc01dafd64f@gmail.com>


On 1/8/25 17:26, Ben Bolker wrote:
> Thanks, that makes sense.
>
> ? I guess if it never worked for integers (or hasn't worked in a long 
> time, at least) then it doesn't need to be fixed/changed ...

Still you found out that the type check and use of REAL() in the 
function is in wrong order. Instead of

"REAL() can only be applied to a 'numeric', not a 'integer' "

one should get

"Argument eta must be a nonempty numeric vector"

Fixed in R-devel,

Best,
Tomas


>
> ? cheers
> ?? Ben
>
>
> On 2025-01-08 11:20 a.m., Ivan Krylov wrote:
>> On Wed, 8 Jan 2025 10:57:47 -0500
>> Ben Bolker <bbolker at gmail.com> wrote:
>>
>>> I haven't done the archaeology to figure out when this broke/exactly
>>> what change in the R code base broke it: it happened within the last
>>> month or so
>>
>> binomial() itself exhibits this property even in R-4.2.2 from more than
>> two years ago:
>>
>> R -q -s -e 'getRversion(); binomial()$linkinv(1L)'
>> # [1] ?4.2.2?
>> # Error in binomial()$linkinv(1L) :
>> #?? REAL() can only be applied to a 'numeric', not a 'integer'
>>
>> It's the `etas` [1] that suddenly became integer due to a change in
>> seq.int():
>>
>> R -q -s -e 'str(seq.int(-8, 8, by=1))'
>> # num [1:17] -8 -7 -6 -5 -4 -3 -2 -1 0 1 ...
>> R-devel -q -s -e 'str(seq.int(-8, 8, by=1))'
>> # int [1:17] -8 -7 -6 -5 -4 -3 -2 -1 0 1 ...
>>
>


From @|mon@urb@nek @end|ng |rom R-project@org  Wed Jan  8 23:16:45 2025
From: @|mon@urb@nek @end|ng |rom R-project@org (Simon Urbanek)
Date: Thu, 9 Jan 2025 11:16:45 +1300
Subject: [Rd] binomial()$linkinv no longer accepts integer values
In-Reply-To: <10d2110b-1119-4f97-b782-cfc01dafd64f@gmail.com>
References: <7dfe81b2-c7ec-49fe-8955-9c41a5771d24@gmail.com>
 <20250108192011.01b9155b@Tarkus>
 <efb07b88-fbb0-468e-95d4-307f18e7127e@gmail.com>
 <10d2110b-1119-4f97-b782-cfc01dafd64f@gmail.com>
Message-ID: <CB0DF90B-8667-4301-BC61-8F532C26CFBA@R-project.org>



> On 9 Jan 2025, at 05:56, Tomas Kalibera <tomas.kalibera at gmail.com> wrote:
> 
> 
> On 1/8/25 17:26, Ben Bolker wrote:
>> Thanks, that makes sense.
>> 
>>   I guess if it never worked for integers (or hasn't worked in a long time, at least) then it doesn't need to be fixed/changed ...
> 
> Still you found out that the type check and use of REAL() in the function is in wrong order. Instead of
> 
> "REAL() can only be applied to a 'numeric', not a 'integer' "
> 
> one should get
> 
> "Argument eta must be a nonempty numeric vector"
> 


But that is in practice a bit ambiguous, because

> is.numeric(1L)
[1] TRUE

and integers are also of the mode numeric, so I?d argue that the previous error was more informative. I would either re-word the error to explicitly exclude integers, or coerce integers to doubles. Technically the latter would be more consistent with R, but if someone explicitly passes an integer to the inverse logit function in a real application then chances are it?s not intentional.

Cheers,
Simon
 

> Fixed in R-devel,
> 
> Best,
> Tomas
> 
> 
>> 
>>   cheers
>>    Ben
>> 
>> 
>> On 2025-01-08 11:20 a.m., Ivan Krylov wrote:
>>> On Wed, 8 Jan 2025 10:57:47 -0500
>>> Ben Bolker <bbolker at gmail.com> wrote:
>>> 
>>>> I haven't done the archaeology to figure out when this broke/exactly
>>>> what change in the R code base broke it: it happened within the last
>>>> month or so
>>> 
>>> binomial() itself exhibits this property even in R-4.2.2 from more than
>>> two years ago:
>>> 
>>> R -q -s -e 'getRversion(); binomial()$linkinv(1L)'
>>> # [1] ?4.2.2?
>>> # Error in binomial()$linkinv(1L) :
>>> #   REAL() can only be applied to a 'numeric', not a 'integer'
>>> 
>>> It's the `etas` [1] that suddenly became integer due to a change in
>>> seq.int():
>>> 
>>> R -q -s -e 'str(seq.int(-8, 8, by=1))'
>>> # num [1:17] -8 -7 -6 -5 -4 -3 -2 -1 0 1 ...
>>> R-devel -q -s -e 'str(seq.int(-8, 8, by=1))'
>>> # int [1:17] -8 -7 -6 -5 -4 -3 -2 -1 0 1 ...
>>> 
>> 
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
> 


From m@ech|er @end|ng |rom @t@t@m@th@ethz@ch  Thu Jan  9 11:13:11 2025
From: m@ech|er @end|ng |rom @t@t@m@th@ethz@ch (Martin Maechler)
Date: Thu, 9 Jan 2025 11:13:11 +0100
Subject: [Rd] binomial()$linkinv no longer accepts integer values
In-Reply-To: <CB0DF90B-8667-4301-BC61-8F532C26CFBA@R-project.org>
References: <7dfe81b2-c7ec-49fe-8955-9c41a5771d24@gmail.com>
 <20250108192011.01b9155b@Tarkus>
 <efb07b88-fbb0-468e-95d4-307f18e7127e@gmail.com>
 <10d2110b-1119-4f97-b782-cfc01dafd64f@gmail.com>
 <CB0DF90B-8667-4301-BC61-8F532C26CFBA@R-project.org>
Message-ID: <26495.41271.191764.790549@stat.math.ethz.ch>

>>>>> "SU" == Simon Urbanek 
>>>>>     on Thu, 9 Jan 2025 11:16:45 +1300 writes:

    >> On 9 Jan 2025, at 05:56, Tomas Kalibera <tomas.kalibera at gmail.com> wrote:
    >> 
    >> 
    >> On 1/8/25 17:26, Ben Bolker wrote:
    >>> Thanks, that makes sense.
    >>> 
    >>> I guess if it never worked for integers (or hasn't worked in a long time, at least) then it doesn't need to be fixed/changed ...
    >> 
    >> Still you found out that the type check and use of REAL() in the function is in wrong order. Instead of
    >> 
    >> "REAL() can only be applied to a 'numeric', not a 'integer' "
    >> 
    >> one should get
    >> 
    >> "Argument eta must be a nonempty numeric vector"
    >> 


    SU> But that is in practice a bit ambiguous, because

    >> is.numeric(1L)
    SU> [1] TRUE

    SU> and integers are also of the mode numeric, so I?d argue that the previous error was more informative. I would either re-word the error to explicitly exclude integers, or coerce integers to doubles. Technically the latter would be more consistent with R, but if someone explicitly passes an integer to the inverse logit function in a real application then chances are it?s not intentional.

I agree with Simon, I think we should do the extra step and
allow integer (type, not just value) for binomial data inside
the family.c code.

I'll have a look, too.
Martin

    SU> Cheers,
    SU> Simon
 

    >> Fixed in R-devel,
    >> 
    >> Best,
    >> Tomas
    >> 
    >>> 
    >>> cheers
    >>> Ben
    >>> 
    >>> 
    >>> On 2025-01-08 11:20 a.m., Ivan Krylov wrote:
    >>>> On Wed, 8 Jan 2025 10:57:47 -0500
    >>>> Ben Bolker <bbolker at gmail.com> wrote:
    >>>> 
    >>>>> I haven't done the archaeology to figure out when this broke/exactly
    >>>>> what change in the R code base broke it: it happened within the last
    >>>>> month or so
    >>>> 
    >>>> binomial() itself exhibits this property even in R-4.2.2 from more than
    >>>> two years ago:
    >>>> 
    >>>> R -q -s -e 'getRversion(); binomial()$linkinv(1L)'
    >>>> # [1] ?4.2.2?
    >>>> # Error in binomial()$linkinv(1L) :
    >>>> #   REAL() can only be applied to a 'numeric', not a 'integer'
    >>>> 
    >>>> It's the `etas` [1] that suddenly became integer due to a change in
    >>>> seq.int():
    >>>> 
    >>>> R -q -s -e 'str(seq.int(-8, 8, by=1))'
    >>>> # num [1:17] -8 -7 -6 -5 -4 -3 -2 -1 0 1 ...
    >>>> R-devel -q -s -e 'str(seq.int(-8, 8, by=1))'
    >>>> # int [1:17] -8 -7 -6 -5 -4 -3 -2 -1 0 1 ...


From jeroenoom@ @end|ng |rom gm@||@com  Sat Jan 11 00:16:51 2025
From: jeroenoom@ @end|ng |rom gm@||@com (Jeroen Ooms)
Date: Sat, 11 Jan 2025 00:16:51 +0100
Subject: [Rd] Package compression benchmarks for zstd vs gzip
Message-ID: <CABFfbXvHddYPsHs7j9ZzvTrPo-NX880mbh6=quZWrd1+eCjD=g@mail.gmail.com>

Many distros and browsers these days use zstd as the preferred
compression method. For example if you unpack a .deb or .rpm file on
Debian or Fedora there is zstd archive inside. It is claimed that zstd
offers improved compression over gzip, but (unlike lzma) it has
comparable decompression speed. Maybe it is interesting to get an
estimate of how much R packages would benefit from zstd.

Testing this for source packages and MacOS binary packages it is easy
as we can gunzip and recompress tar.gz files without having to extract
the tarball itself:

  OUTPUT="sizes.txt"
  echo "FILE GZIP ZSTD" > $OUTPUT
  for x in *gz; do
    FILE=$(basename $x)
    GZIP=$(wc -c "$x" | awk '{print $1}')
    ZSTD=$(gunzip -c $x | zstd -19 | wc -c)
    echo "$FILE $GZIP $ZSTD" | tee -a $OUTPUT
  done

Attached are results of running this script on the 500 most downloaded
CRAN packages. It shows about 16% size reduction for sources, and 19%
for binaries.

Zstd is BSD licensed C code that can easily be embedded in any project.

-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: sources.txt
URL: <https://stat.ethz.ch/pipermail/r-devel/attachments/20250111/90f91d5e/attachment.txt>

-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: binaries.txt
URL: <https://stat.ethz.ch/pipermail/r-devel/attachments/20250111/90f91d5e/attachment-0001.txt>

From @vr@h@m@@d|er @end|ng |rom gm@||@com  Sun Jan 12 00:41:28 2025
From: @vr@h@m@@d|er @end|ng |rom gm@||@com (Avraham Adler)
Date: Sat, 11 Jan 2025 18:41:28 -0500
Subject: [Rd] Package compression benchmarks for zstd vs gzip
In-Reply-To: <CABFfbXvHddYPsHs7j9ZzvTrPo-NX880mbh6=quZWrd1+eCjD=g@mail.gmail.com>
References: <CABFfbXvHddYPsHs7j9ZzvTrPo-NX880mbh6=quZWrd1+eCjD=g@mail.gmail.com>
Message-ID: <CAL6gwnL0eLEFu0kyxqubmy1CeqnCGUa3FqQ+wFUghEazyxEV1g@mail.gmail.com>

zstd is accessible within R using the archive package [1]. I use it
all the time when saving large objects, using code I adapted from [2].
Is your suggestion to import the libraries/source code into base?

[1] https://CRAN.R-project.org/package=archive
[2] https://coolbutuseless.github.io/2018/10/02/using-lz4-and-zstandard-to-compress-files-with-saverds/

On Fri, Jan 10, 2025 at 6:17?PM Jeroen Ooms <jeroenooms at gmail.com> wrote:
>
> Many distros and browsers these days use zstd as the preferred
> compression method. For example if you unpack a .deb or .rpm file on
> Debian or Fedora there is zstd archive inside. It is claimed that zstd
> offers improved compression over gzip, but (unlike lzma) it has
> comparable decompression speed. Maybe it is interesting to get an
> estimate of how much R packages would benefit from zstd.
>
> Testing this for source packages and MacOS binary packages it is easy
> as we can gunzip and recompress tar.gz files without having to extract
> the tarball itself:
>
>   OUTPUT="sizes.txt"
>   echo "FILE GZIP ZSTD" > $OUTPUT
>   for x in *gz; do
>     FILE=$(basename $x)
>     GZIP=$(wc -c "$x" | awk '{print $1}')
>     ZSTD=$(gunzip -c $x | zstd -19 | wc -c)
>     echo "$FILE $GZIP $ZSTD" | tee -a $OUTPUT
>   done
>
> Attached are results of running this script on the 500 most downloaded
> CRAN packages. It shows about 16% size reduction for sources, and 19%
> for binaries.
>
> Zstd is BSD licensed C code that can easily be embedded in any project.
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From henr|k@bengt@@on @end|ng |rom gm@||@com  Sun Jan 12 01:05:46 2025
From: henr|k@bengt@@on @end|ng |rom gm@||@com (Henrik Bengtsson)
Date: Sat, 11 Jan 2025 16:05:46 -0800
Subject: [Rd] Package compression benchmarks for zstd vs gzip
In-Reply-To: <CAL6gwnL0eLEFu0kyxqubmy1CeqnCGUa3FqQ+wFUghEazyxEV1g@mail.gmail.com>
References: <CABFfbXvHddYPsHs7j9ZzvTrPo-NX880mbh6=quZWrd1+eCjD=g@mail.gmail.com>
 <CAL6gwnL0eLEFu0kyxqubmy1CeqnCGUa3FqQ+wFUghEazyxEV1g@mail.gmail.com>
Message-ID: <CAFDcVCS6kfkqzwR7ximTu=EJiHeuSBa0hU_r0Ze7yRi87_cLbw@mail.gmail.com>

Can't speak for Jeroen, but it sounds like it's worth adding support
for tar.zstd package files, just like how tar.gz, tar.xz, and
tar.bzip2 are currently supported. I'd also argue for support zstd
compression throughout R, including adding zstdfile(), support for
saveRDS(..., compress = "zstd"), and so on. Then it could be discussed
later what the default(s) should be.

It's probably also worth looking at package compression with 'xz'
compression. In [1], Mike FC has a graph where 'bzip2' and 'xz' seem
to give the best compression ratios, at least for RDS files.

FWIW, Mike FC submitted the 'zstdlite' package [1] to CRAN about a
year ago, but it was removed, resubmitted, then removed again. I
believe this was Mike FC first ever CRAN submission, but I think they
eventually gave up. From
https://cran.r-project.org/src/contrib/PACKAGES.in:

Package: zstdlite
X-CRAN-Comment: Removed on 2024-03-18 for repeated policy violation.
  .
  Does not look for suitable system 'libzstd'.
  Spams personal email addresses of team members.
X-CRAN-History: Removed on 2024-03-13 for policy violation and
misrepresentation of copyright holder(s).
  .
  Does not even attempt to use system 'libzstd'.
  Back on CRAN on 2024-03-17.

[1] https://github.com/coolbutuseless/zstdlite

/Henrik

On Sat, Jan 11, 2025 at 3:41?PM Avraham Adler <avraham.adler at gmail.com> wrote:
>
> zstd is accessible within R using the archive package [1]. I use it
> all the time when saving large objects, using code I adapted from [2].
> Is your suggestion to import the libraries/source code into base?
>
> [1] https://CRAN.R-project.org/package=archive
> [2] https://coolbutuseless.github.io/2018/10/02/using-lz4-and-zstandard-to-compress-files-with-saverds/
>
> On Fri, Jan 10, 2025 at 6:17?PM Jeroen Ooms <jeroenooms at gmail.com> wrote:
> >
> > Many distros and browsers these days use zstd as the preferred
> > compression method. For example if you unpack a .deb or .rpm file on
> > Debian or Fedora there is zstd archive inside. It is claimed that zstd
> > offers improved compression over gzip, but (unlike lzma) it has
> > comparable decompression speed. Maybe it is interesting to get an
> > estimate of how much R packages would benefit from zstd.
> >
> > Testing this for source packages and MacOS binary packages it is easy
> > as we can gunzip and recompress tar.gz files without having to extract
> > the tarball itself:
> >
> >   OUTPUT="sizes.txt"
> >   echo "FILE GZIP ZSTD" > $OUTPUT
> >   for x in *gz; do
> >     FILE=$(basename $x)
> >     GZIP=$(wc -c "$x" | awk '{print $1}')
> >     ZSTD=$(gunzip -c $x | zstd -19 | wc -c)
> >     echo "$FILE $GZIP $ZSTD" | tee -a $OUTPUT
> >   done
> >
> > Attached are results of running this script on the 500 most downloaded
> > CRAN packages. It shows about 16% size reduction for sources, and 19%
> > for binaries.
> >
> > Zstd is BSD licensed C code that can easily be embedded in any project.
> > ______________________________________________
> > R-devel at r-project.org mailing list
> > https://stat.ethz.ch/mailman/listinfo/r-devel
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From |kry|ov @end|ng |rom d|@root@org  Sun Jan 12 09:14:40 2025
From: |kry|ov @end|ng |rom d|@root@org (Ivan Krylov)
Date: Sun, 12 Jan 2025 11:14:40 +0300
Subject: [Rd] Package compression benchmarks for zstd vs gzip
In-Reply-To: <CAFDcVCS6kfkqzwR7ximTu=EJiHeuSBa0hU_r0Ze7yRi87_cLbw@mail.gmail.com>
References: <CABFfbXvHddYPsHs7j9ZzvTrPo-NX880mbh6=quZWrd1+eCjD=g@mail.gmail.com>
 <CAL6gwnL0eLEFu0kyxqubmy1CeqnCGUa3FqQ+wFUghEazyxEV1g@mail.gmail.com>
 <CAFDcVCS6kfkqzwR7ximTu=EJiHeuSBa0hU_r0Ze7yRi87_cLbw@mail.gmail.com>
Message-ID: <20250112111440.598e4f54@Tarkus>

On Sat, 11 Jan 2025 16:05:46 -0800
Henrik Bengtsson <henrik.bengtsson at gmail.com> wrote:

> It's probably also worth looking at package compression with 'xz'
> compression. In [1], Mike FC has a graph where 'bzip2' and 'xz' seem
> to give the best compression ratios, at least for RDS files.

'bzip2' can be surprisingly good on very repetitive payloads. It
compresses 0x80000000 zero bytes to only 1.5 KiB, much better than 'xz
-9' with 305 KiB (with compression settings not making much
difference), although the compression is not perfect. One terabyte of
zeros can be compressed to 697202 bytes of repetitive compressed stream
that can be bzipped further to 248 bytes.

Binary packages are probably the most obvious target for new
compression methods because there is no need to install them on older
versions of R.

-- 
Best regards,
Ivan


From @|mon@urb@nek @end|ng |rom R-project@org  Mon Jan 13 02:26:14 2025
From: @|mon@urb@nek @end|ng |rom R-project@org (Simon Urbanek)
Date: Mon, 13 Jan 2025 14:26:14 +1300
Subject: [Rd] Package compression benchmarks for zstd vs gzip
In-Reply-To: <CABFfbXvHddYPsHs7j9ZzvTrPo-NX880mbh6=quZWrd1+eCjD=g@mail.gmail.com>
References: <CABFfbXvHddYPsHs7j9ZzvTrPo-NX880mbh6=quZWrd1+eCjD=g@mail.gmail.com>
Message-ID: <16544526-1245-4DF8-995E-F9289B8CF0EA@R-project.org>

I think the first step would have to be to add zstd support to R. zstd is a bit controversial (as shown by the community blowback of the changes you mentioned) and their build system (calling it that is being very generous) is mess so it would require a bit of testing, but it is doable.

That said, assuming the above is solved, we have been debating the change of compression at CRAN in general for a bit, but the assumptions about the file names are built into today?s tools so there would be certainly some fall-out - not just in R, but also the ecosystems around it. As you pointed out, possibly the safest place to start are binaries, since we have tighter control of those and they are used in fewer places.

Personally, I think the higher priority is signing, so as we address that we may just include the compression change with it since it will require some tool changes anyway. I was thinking of using xz as that is more stable, already supported and less controversial, but I don?t think the choice really matters - it just has to be a compression which R supports (zstd and xz have different benefits, so it?s always a trade-off without a clear winner).

Cheers,
Simon


> On 11 Jan 2025, at 12:16, Jeroen Ooms <jeroenooms at gmail.com> wrote:
> 
> Many distros and browsers these days use zstd as the preferred
> compression method. For example if you unpack a .deb or .rpm file on
> Debian or Fedora there is zstd archive inside. It is claimed that zstd
> offers improved compression over gzip, but (unlike lzma) it has
> comparable decompression speed. Maybe it is interesting to get an
> estimate of how much R packages would benefit from zstd.
> 
> Testing this for source packages and MacOS binary packages it is easy
> as we can gunzip and recompress tar.gz files without having to extract
> the tarball itself:
> 
>  OUTPUT="sizes.txt"
>  echo "FILE GZIP ZSTD" > $OUTPUT
>  for x in *gz; do
>    FILE=$(basename $x)
>    GZIP=$(wc -c "$x" | awk '{print $1}')
>    ZSTD=$(gunzip -c $x | zstd -19 | wc -c)
>    echo "$FILE $GZIP $ZSTD" | tee -a $OUTPUT
>  done
> 
> Attached are results of running this script on the 500 most downloaded
> CRAN packages. It shows about 16% size reduction for sources, and 19%
> for binaries.
> 
> Zstd is BSD licensed C code that can easily be embedded in any project.
> <sources.txt><binaries.txt>______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From ht @end|ng |rom he@therturner@net  Wed Jan 15 10:21:59 2025
From: ht @end|ng |rom he@therturner@net (Heather Turner)
Date: Wed, 15 Jan 2025 09:21:59 +0000
Subject: [Rd] Package compression benchmarks for zstd vs gzip
In-Reply-To: <16544526-1245-4DF8-995E-F9289B8CF0EA@R-project.org>
References: <CABFfbXvHddYPsHs7j9ZzvTrPo-NX880mbh6=quZWrd1+eCjD=g@mail.gmail.com>
 <16544526-1245-4DF8-995E-F9289B8CF0EA@R-project.org>
Message-ID: <d2bcbea5-9d62-4946-a883-70555cfe6cd9@app.fastmail.com>

With the changes to add zstd support yesterday, the build of R-devel is failing when zstd is not present, even though the docs say that zstd is optional.

The error comes in building the datasets package, see e.g. https://github.com/r-devel/r-svn/actions/runs/12760693086/job/35566530112.

Best wishes,

Heather

On Mon, Jan 13, 2025, at 1:26 AM, Simon Urbanek wrote:
> I think the first step would have to be to add zstd support to R. zstd 
> is a bit controversial (as shown by the community blowback of the 
> changes you mentioned) and their build system (calling it that is being 
> very generous) is mess so it would require a bit of testing, but it is 
> doable.
>
> That said, assuming the above is solved, we have been debating the 
> change of compression at CRAN in general for a bit, but the assumptions 
> about the file names are built into today?s tools so there would be 
> certainly some fall-out - not just in R, but also the ecosystems around 
> it. As you pointed out, possibly the safest place to start are 
> binaries, since we have tighter control of those and they are used in 
> fewer places.
>
> Personally, I think the higher priority is signing, so as we address 
> that we may just include the compression change with it since it will 
> require some tool changes anyway. I was thinking of using xz as that is 
> more stable, already supported and less controversial, but I don?t 
> think the choice really matters - it just has to be a compression which 
> R supports (zstd and xz have different benefits, so it?s always a 
> trade-off without a clear winner).
>
> Cheers,
> Simon
>
>
>> On 11 Jan 2025, at 12:16, Jeroen Ooms <jeroenooms at gmail.com> wrote:
>> 
>> Many distros and browsers these days use zstd as the preferred
>> compression method. For example if you unpack a .deb or .rpm file on
>> Debian or Fedora there is zstd archive inside. It is claimed that zstd
>> offers improved compression over gzip, but (unlike lzma) it has
>> comparable decompression speed. Maybe it is interesting to get an
>> estimate of how much R packages would benefit from zstd.
>> 
>> Testing this for source packages and MacOS binary packages it is easy
>> as we can gunzip and recompress tar.gz files without having to extract
>> the tarball itself:
>> 
>>  OUTPUT="sizes.txt"
>>  echo "FILE GZIP ZSTD" > $OUTPUT
>>  for x in *gz; do
>>    FILE=$(basename $x)
>>    GZIP=$(wc -c "$x" | awk '{print $1}')
>>    ZSTD=$(gunzip -c $x | zstd -19 | wc -c)
>>    echo "$FILE $GZIP $ZSTD" | tee -a $OUTPUT
>>  done
>> 
>> Attached are results of running this script on the 500 most downloaded
>> CRAN packages. It shows about 16% size reduction for sources, and 19%
>> for binaries.
>> 
>> Zstd is BSD licensed C code that can easily be embedded in any project.
>> <sources.txt><binaries.txt>______________________________________________
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From @|mon@urb@nek @end|ng |rom R-project@org  Wed Jan 15 13:30:11 2025
From: @|mon@urb@nek @end|ng |rom R-project@org (Simon Urbanek)
Date: Thu, 16 Jan 2025 01:30:11 +1300
Subject: [Rd] Package compression benchmarks for zstd vs gzip
In-Reply-To: <d2bcbea5-9d62-4946-a883-70555cfe6cd9@app.fastmail.com>
References: <CABFfbXvHddYPsHs7j9ZzvTrPo-NX880mbh6=quZWrd1+eCjD=g@mail.gmail.com>
 <16544526-1245-4DF8-995E-F9289B8CF0EA@R-project.org>
 <d2bcbea5-9d62-4946-a883-70555cfe6cd9@app.fastmail.com>
Message-ID: <7E8F4E4A-771D-4557-A640-BB540BB4007B@R-project.org>

Heather,

thanks, now fixed (datasets was using numeric value for compress= instead of the compression name so it picked zstd instead of gzip - now the switch order is kept the same).

Cheers,
Simon


> On Jan 15, 2025, at 10:21 PM, Heather Turner <ht at heatherturner.net> wrote:
> 
> With the changes to add zstd support yesterday, the build of R-devel is failing when zstd is not present, even though the docs say that zstd is optional.
> 
> The error comes in building the datasets package, see e.g. https://github.com/r-devel/r-svn/actions/runs/12760693086/job/35566530112.
> 
> Best wishes,
> 
> Heather
> 
> On Mon, Jan 13, 2025, at 1:26 AM, Simon Urbanek wrote:
>> I think the first step would have to be to add zstd support to R. zstd 
>> is a bit controversial (as shown by the community blowback of the 
>> changes you mentioned) and their build system (calling it that is being 
>> very generous) is mess so it would require a bit of testing, but it is 
>> doable.
>> 
>> That said, assuming the above is solved, we have been debating the 
>> change of compression at CRAN in general for a bit, but the assumptions 
>> about the file names are built into today?s tools so there would be 
>> certainly some fall-out - not just in R, but also the ecosystems around 
>> it. As you pointed out, possibly the safest place to start are 
>> binaries, since we have tighter control of those and they are used in 
>> fewer places.
>> 
>> Personally, I think the higher priority is signing, so as we address 
>> that we may just include the compression change with it since it will 
>> require some tool changes anyway. I was thinking of using xz as that is 
>> more stable, already supported and less controversial, but I don?t 
>> think the choice really matters - it just has to be a compression which 
>> R supports (zstd and xz have different benefits, so it?s always a 
>> trade-off without a clear winner).
>> 
>> Cheers,
>> Simon
>> 
>> 
>>> On 11 Jan 2025, at 12:16, Jeroen Ooms <jeroenooms at gmail.com> wrote:
>>> 
>>> Many distros and browsers these days use zstd as the preferred
>>> compression method. For example if you unpack a .deb or .rpm file on
>>> Debian or Fedora there is zstd archive inside. It is claimed that zstd
>>> offers improved compression over gzip, but (unlike lzma) it has
>>> comparable decompression speed. Maybe it is interesting to get an
>>> estimate of how much R packages would benefit from zstd.
>>> 
>>> Testing this for source packages and MacOS binary packages it is easy
>>> as we can gunzip and recompress tar.gz files without having to extract
>>> the tarball itself:
>>> 
>>> OUTPUT="sizes.txt"
>>> echo "FILE GZIP ZSTD" > $OUTPUT
>>> for x in *gz; do
>>>   FILE=$(basename $x)
>>>   GZIP=$(wc -c "$x" | awk '{print $1}')
>>>   ZSTD=$(gunzip -c $x | zstd -19 | wc -c)
>>>   echo "$FILE $GZIP $ZSTD" | tee -a $OUTPUT
>>> done
>>> 
>>> Attached are results of running this script on the 500 most downloaded
>>> CRAN packages. It shows about 16% size reduction for sources, and 19%
>>> for binaries.
>>> 
>>> Zstd is BSD licensed C code that can easily be embedded in any project.
>>> <sources.txt><binaries.txt>______________________________________________
>>> R-devel at r-project.org mailing list
>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>> 
>> ______________________________________________
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel
> 


From |uc@r @end|ng |rom |edor@project@org  Wed Jan 15 17:06:54 2025
From: |uc@r @end|ng |rom |edor@project@org (=?UTF-8?Q?I=C3=B1aki_Ucar?=)
Date: Wed, 15 Jan 2025 17:06:54 +0100
Subject: [Rd] Build error with gcc 15
Message-ID: <CALEXWq0setVEQoe2+6g-BdZ73vGHQo0vG7DARnQnHBd+r-SM6A@mail.gmail.com>

Dear R Core,

GCC 15 is already in Fedora rawhide, because it will be part of the next
release, Fedora 42. R 4.4.2 fails to build with the following error [1]:

> sys-std.c:1189:1: warning: ?noreturn? attribute ignored [-Wattributes]
>  1189 | void Rstd_CleanUp(SA_TYPE saveact, int status, int runLast)
>       | ^~~~
> sys-std.c:1189:1: error: expected identifier or ?(? before ?void?

I've seen some references to this in the source code, so this may be fixed
in R devel. If this is the case, it would be great if you could provide a
patch that I can apply to v4.4.2 until the next R release (or maybe I
should just specify an older C standard?).

[1] https://kojipkgs.fedoraproject.org//work/tasks/6266/127896266/build.log

Best,
-- 
I?aki ?car

	[[alternative HTML version deleted]]


From r|p|ey @end|ng |rom @t@t@@ox@@c@uk  Wed Jan 15 20:29:02 2025
From: r|p|ey @end|ng |rom @t@t@@ox@@c@uk (Prof Brian Ripley)
Date: Wed, 15 Jan 2025 19:29:02 +0000
Subject: [Rd] Build error with gcc 15
In-Reply-To: <CALEXWq0setVEQoe2+6g-BdZ73vGHQo0vG7DARnQnHBd+r-SM6A@mail.gmail.com>
References: <CALEXWq0setVEQoe2+6g-BdZ73vGHQo0vG7DARnQnHBd+r-SM6A@mail.gmail.com>
Message-ID: <1b6bf7b3-bc60-407e-a32b-eca298315ad3@stats.ox.ac.uk>

On 15/01/2025 16:06, I?aki Ucar wrote:
> Dear R Core,
> 
> GCC 15 is already in Fedora rawhide, because it will be part of the next
> release, Fedora 42. R 4.4.2 fails to build with the following error [1]:
> 
>> sys-std.c:1189:1: warning: ?noreturn? attribute ignored [-Wattributes]
>>   1189 | void Rstd_CleanUp(SA_TYPE saveact, int status, int runLast)
>>        | ^~~~
>> sys-std.c:1189:1: error: expected identifier or ?(? before ?void?

You failed to say that GCC 15 defaults to C23 (and they have not yet 
documented that).
> 
> I've seen some references to this in the source code, so this may be fixed
> in R devel. If this is the case, it would be great if you could provide a
> patch that I can apply to v4.4.2 until the next R release (or maybe I
> should just specify an older C standard?).

Look at the definition of NORET in R_ext/Error.h.  You want r87411;

r87411 | ripley | 2024-12-01 10:11:10 +0000 (Sun, 01 Dec 2024) | 1 line

gcc pre-15 does not yet support [[noreturn]]

GCC 15 is not even at RC stage, and this is one of many undocumented 
changes -- so they have not even got to the documentation-fixing stage. 
This is a GCC issue -- both LLVM and Apple clang build R-patched in C23 
mode.

We will port this to R-patched, unless GCC 15 is fixed before its or 
R-patched's release.

-- 
Brian D. Ripley,                  ripley at stats.ox.ac.uk
Emeritus Professor of Applied Statistics, University of Oxford


From |uc@r @end|ng |rom |edor@project@org  Wed Jan 15 22:22:07 2025
From: |uc@r @end|ng |rom |edor@project@org (=?UTF-8?Q?I=C3=B1aki_Ucar?=)
Date: Wed, 15 Jan 2025 22:22:07 +0100
Subject: [Rd] Build error with gcc 15
In-Reply-To: <1b6bf7b3-bc60-407e-a32b-eca298315ad3@stats.ox.ac.uk>
References: <CALEXWq0setVEQoe2+6g-BdZ73vGHQo0vG7DARnQnHBd+r-SM6A@mail.gmail.com>
 <1b6bf7b3-bc60-407e-a32b-eca298315ad3@stats.ox.ac.uk>
Message-ID: <CALEXWq2XeN8LcM=Yv_uKQytDFKJgYhO9cC0hpoGvmAFzfOHLhQ@mail.gmail.com>

On Wed, 15 Jan 2025 at 20:29, Prof Brian Ripley <ripley at stats.ox.ac.uk> wrote:
>
> On 15/01/2025 16:06, I?aki Ucar wrote:
> > Dear R Core,
> >
> > GCC 15 is already in Fedora rawhide, because it will be part of the next
> > release, Fedora 42. R 4.4.2 fails to build with the following error [1]:
> >
> >> sys-std.c:1189:1: warning: ?noreturn? attribute ignored [-Wattributes]
> >>   1189 | void Rstd_CleanUp(SA_TYPE saveact, int status, int runLast)
> >>        | ^~~~
> >> sys-std.c:1189:1: error: expected identifier or ?(? before ?void?
>
> You failed to say that GCC 15 defaults to C23 (and they have not yet
> documented that).
> >
> > I've seen some references to this in the source code, so this may be fixed
> > in R devel. If this is the case, it would be great if you could provide a
> > patch that I can apply to v4.4.2 until the next R release (or maybe I
> > should just specify an older C standard?).
>
> Look at the definition of NORET in R_ext/Error.h.  You want r87411;
>
> r87411 | ripley | 2024-12-01 10:11:10 +0000 (Sun, 01 Dec 2024) | 1 line
>
> gcc pre-15 does not yet support [[noreturn]]

Thanks, that worked nicely. I'll apply it for now.

Best,
I?aki

> GCC 15 is not even at RC stage, and this is one of many undocumented
> changes -- so they have not even got to the documentation-fixing stage.
> This is a GCC issue -- both LLVM and Apple clang build R-patched in C23
> mode.
>
> We will port this to R-patched, unless GCC 15 is fixed before its or
> R-patched's release.
>
> --
> Brian D. Ripley,                  ripley at stats.ox.ac.uk
> Emeritus Professor of Applied Statistics, University of Oxford
>


-- 
I?aki ?car


From |kry|ov @end|ng |rom d|@root@org  Thu Jan 16 12:41:21 2025
From: |kry|ov @end|ng |rom d|@root@org (Ivan Krylov)
Date: Thu, 16 Jan 2025 14:41:21 +0300
Subject: [Rd] Depends: R (>= 4.1) for packages that use |> and \(...)
Message-ID: <20250116144121.5520a9cc@arachnoid>

Hello R-devel,

Approximately [*] the following CRAN packages make use of the pipe
syntax in their source code or examples without depending on R >= 4.1:

 [1] "biplotEZ"           "CaseBasedReasoning" "collinear"
 [4] "cubble"             "disk.frame"         "duckdbfs"
 [7] "eia"                "feltr"              "flattabler"
[10] "geodimension"       "hgnc"               "himach"
[13] "lay"                "lidR"               "locateip"
[16] "particles"          "photosynthesis"     "pivotea"
[19] "planr"              "rtrek"              "satres"
[22] "sdtmval"            "selenider"          "sewage"
[25] "stminsights"        "tabr"               "tidygraph"
[28] "tidywikidatar"      "USgas"              "washi"
[31] "zctaCrosswalk"

Since we have checks in place to automatically set Depends: R (>=
2.10.0) for data files compressed with xz or bzip2 and >= 3.5.0 for
data files serialized with format version 3, would it make sense to
automatically add Depends: R (>= 4.1) for such packages?

The patch at the end of this message adds the R version dependency
during R CMD build:

R-devel CMD build --no-build-vignettes .
* checking for file ?./DESCRIPTION? ... OK
* preparing ?biplotEZ?:
* checking DESCRIPTION meta-information ... OK
* cleaning src
* checking vignette meta-information ... OK
* checking for LF line-endings in source and make files and shell
scripts
* checking for empty or unneeded directories
  NB: this package now depends on R (>= 4.1.0)
  WARNING: Added dependency on R >= 4.1.0 because some of the source
  files use the new syntax constructs.
Files making use of R >= 4.1 pipe |> or function shorthand \(...):
  biplotEZ/R/biplot.R biplotEZ/R/translate_axes.R
* building ?biplotEZ_2.2.tar.gz?

A more extensive test could also look at the tests, demos, and
\examples{}, but that may take longer and open the door for false
positives. A package that uses |> in one example would still be useful
on R-4.0.0, while a package that uses |> in the source code would fail
to parse and install.

Index: src/library/tools/R/QC.R
===================================================================
--- src/library/tools/R/QC.R	(revision 87545)
+++ src/library/tools/R/QC.R	(working copy)
@@ -10367,7 +10367,29 @@
     }
 }
 
+.check_use_of_R41_syntax <-
+function(files)
+{
+    out <- vapply(files,
+           function(f) tryCatch(
+               any(getParseData(parse(f, keep.source = TRUE))$token %in% c("PIPE", "'\\\\'")),
+               error = function(e) FALSE
+           ),
+           FALSE)
+    out <- files[out]
+    class(out) <- "check_use_of_R41_syntax"
+    out
+}
 
+format.check_use_of_R41_syntax <-
+function(x, ...)
+{
+    if (length(x)) {
+        c("Files making use of R >= 4.1 pipe |> or function shorthand \\(...):",
+          .strwrap22(x, " "))
+    } else character()
+}
+
 ### Local variables: ***
 ### mode: outline-minor ***
 ### outline-regexp: "### [*]+" ***
Index: src/library/tools/R/build.R
===================================================================
--- src/library/tools/R/build.R	(revision 87545)
+++ src/library/tools/R/build.R	(working copy)
@@ -1165,9 +1165,11 @@
         desc <- .read_description(file.path(pkgname, "DESCRIPTION"))
         Rdeps <- .split_description(desc)$Rdepends2
         hasDep350 <- FALSE
+        hasDep410 <- FALSE
         for(dep in Rdeps) {
             if(dep$op != '>=') next
             if(dep$version >= "3.5.0") hasDep350 <- TRUE
+            if(dep$version >= "4.1.0") hasDep410 <- TRUE
         }
         if (!hasDep350) {
             ## re-read files after exclusions have been applied
@@ -1189,6 +1191,23 @@
                          "\n")
             }
         }
+        if (!hasDep410) {
+            uses410 <- .check_use_of_R41_syntax(dir(file.path(pkgname, "R"),
+                                                    full.names = TRUE,
+                                                    pattern = "[.]R$",
+                                                    ignore.case = TRUE))
+            if (length(uses410)) {
+                fixup_R_dep(pkgname, "4.1.0")
+                msg <- paste("WARNING: Added dependency on R >= 4.1.0 because",
+                             "some of the source files use the new syntax",
+                             "constructs.")
+                printLog(Log,
+                         paste(c(strwrap(msg, indent = 2L, exdent = 2L),
+                                 format(uses410)),
+                               collapse = "\n"),
+                               "\n")
+            }
+        }
 
 	## add NAMESPACE if the author didn't write one
 	if(!file.exists(namespace <- file.path(pkgname, "NAMESPACE")) ) {


-- 
Best regards,
Ivan

[*] Based on the following GitHub search, which requires logging in:
https://github.com/search?q=org%3Acran%20path%3A%2F%5B.%5D%5BRr%5Dd%3F%24%2F%20%2F%5Cs%5C%7C%3E%2F&type=code
There's currently no REST API support for regexp search, so the list
was obtained manually.


From Thom@@@SOEIRO @end|ng |rom @p-hm@|r  Thu Jan 16 14:36:02 2025
From: Thom@@@SOEIRO @end|ng |rom @p-hm@|r (SOEIRO Thomas)
Date: Thu, 16 Jan 2025 13:36:02 +0000
Subject: [Rd] as.data.frame() methods for model objects
Message-ID: <77cc3fe9e80449aaab6321794d04eb09@SCWPR-EXDAG1-6A.aphm.ap-hm.fr>

Hello all,

Would there be any interest for adding as.data.frame() methods for model objects?
Of course there is packages (e.g. broom), but I think providing methods would be more discoverable (and the patch would be small).
It is really useful for exporting model results or for plotting.

e.g.:

as.data.frame.lm <- function(x) { # could get other arguments, e.g. exp = TRUE/FALSE to exponentiate estimate, conf.low, conf.high
  cf <- x |> summary() |> stats::coef()
  ci <- stats::confint(x)
  data.frame(
    term = row.names(cf),
    estimate = cf[, "Estimate"],
    p.value = cf[, 4], # magic number because name changes between lm() and glm(*, family = *)
    conf.low = ci[, "2.5 %"],
    conf.high = ci[, "97.5 %"],
    row.names = NULL
  )
}

> lm(breaks ~ wool + tension, warpbreaks) |> as.data.frame()
         term   estimate      p.value  conf.low  conf.high
1 (Intercept)  39.277778 6.681866e-17  32.92715 45.6284061
2       woolB  -5.777778 7.361367e-02 -12.12841  0.5728505
3    tensionM -10.000000 1.278683e-02 -17.77790 -2.2221006
4    tensionH -14.722222 3.913842e-04 -22.50012 -6.9443228

> glm(breaks < 20 ~ wool + tension, data = warpbreaks) |> as.data.frame()
Waiting for profiling to be done...
         term   estimate    p.value    conf.low conf.high
1 (Intercept) 0.07407407 0.54849393 -0.16624575 0.3143939
2       woolB 0.07407407 0.54849393 -0.16624575 0.3143939
3    tensionM 0.22222222 0.14520270 -0.07210825 0.5165527
4    tensionH 0.33333333 0.03100435  0.03900286 0.6276638

Thank you.

Best regards,
Thomas


From henr|k@bengt@@on @end|ng |rom gm@||@com  Thu Jan 16 16:22:03 2025
From: henr|k@bengt@@on @end|ng |rom gm@||@com (Henrik Bengtsson)
Date: Thu, 16 Jan 2025 07:22:03 -0800
Subject: [Rd] Depends: R (>= 4.1) for packages that use |> and \(...)
In-Reply-To: <20250116144121.5520a9cc@arachnoid>
References: <20250116144121.5520a9cc@arachnoid>
Message-ID: <CAFDcVCTTVa+Ea+BoVoag0RJ7LK3P1tyPzBG9vP4U-4w6a4kKKQ@mail.gmail.com>

Thanks for looking into this and the patch. FWIW, there's an open
PR18105 - "R CMD build: Add dependency on R >= 4.1.0 if code uses pipe
symbol |>" for this
(https://bugs.r-project.org/show_bug.cgi?id=18105).

/Henrik

On Thu, Jan 16, 2025 at 3:42?AM Ivan Krylov via R-devel
<r-devel at r-project.org> wrote:
>
> Hello R-devel,
>
> Approximately [*] the following CRAN packages make use of the pipe
> syntax in their source code or examples without depending on R >= 4.1:
>
>  [1] "biplotEZ"           "CaseBasedReasoning" "collinear"
>  [4] "cubble"             "disk.frame"         "duckdbfs"
>  [7] "eia"                "feltr"              "flattabler"
> [10] "geodimension"       "hgnc"               "himach"
> [13] "lay"                "lidR"               "locateip"
> [16] "particles"          "photosynthesis"     "pivotea"
> [19] "planr"              "rtrek"              "satres"
> [22] "sdtmval"            "selenider"          "sewage"
> [25] "stminsights"        "tabr"               "tidygraph"
> [28] "tidywikidatar"      "USgas"              "washi"
> [31] "zctaCrosswalk"
>
> Since we have checks in place to automatically set Depends: R (>=
> 2.10.0) for data files compressed with xz or bzip2 and >= 3.5.0 for
> data files serialized with format version 3, would it make sense to
> automatically add Depends: R (>= 4.1) for such packages?
>
> The patch at the end of this message adds the R version dependency
> during R CMD build:
>
> R-devel CMD build --no-build-vignettes .
> * checking for file ?./DESCRIPTION? ... OK
> * preparing ?biplotEZ?:
> * checking DESCRIPTION meta-information ... OK
> * cleaning src
> * checking vignette meta-information ... OK
> * checking for LF line-endings in source and make files and shell
> scripts
> * checking for empty or unneeded directories
>   NB: this package now depends on R (>= 4.1.0)
>   WARNING: Added dependency on R >= 4.1.0 because some of the source
>   files use the new syntax constructs.
> Files making use of R >= 4.1 pipe |> or function shorthand \(...):
>   biplotEZ/R/biplot.R biplotEZ/R/translate_axes.R
> * building ?biplotEZ_2.2.tar.gz?
>
> A more extensive test could also look at the tests, demos, and
> \examples{}, but that may take longer and open the door for false
> positives. A package that uses |> in one example would still be useful
> on R-4.0.0, while a package that uses |> in the source code would fail
> to parse and install.
>
> Index: src/library/tools/R/QC.R
> ===================================================================
> --- src/library/tools/R/QC.R    (revision 87545)
> +++ src/library/tools/R/QC.R    (working copy)
> @@ -10367,7 +10367,29 @@
>      }
>  }
>
> +.check_use_of_R41_syntax <-
> +function(files)
> +{
> +    out <- vapply(files,
> +           function(f) tryCatch(
> +               any(getParseData(parse(f, keep.source = TRUE))$token %in% c("PIPE", "'\\\\'")),
> +               error = function(e) FALSE
> +           ),
> +           FALSE)
> +    out <- files[out]
> +    class(out) <- "check_use_of_R41_syntax"
> +    out
> +}
>
> +format.check_use_of_R41_syntax <-
> +function(x, ...)
> +{
> +    if (length(x)) {
> +        c("Files making use of R >= 4.1 pipe |> or function shorthand \\(...):",
> +          .strwrap22(x, " "))
> +    } else character()
> +}
> +
>  ### Local variables: ***
>  ### mode: outline-minor ***
>  ### outline-regexp: "### [*]+" ***
> Index: src/library/tools/R/build.R
> ===================================================================
> --- src/library/tools/R/build.R (revision 87545)
> +++ src/library/tools/R/build.R (working copy)
> @@ -1165,9 +1165,11 @@
>          desc <- .read_description(file.path(pkgname, "DESCRIPTION"))
>          Rdeps <- .split_description(desc)$Rdepends2
>          hasDep350 <- FALSE
> +        hasDep410 <- FALSE
>          for(dep in Rdeps) {
>              if(dep$op != '>=') next
>              if(dep$version >= "3.5.0") hasDep350 <- TRUE
> +            if(dep$version >= "4.1.0") hasDep410 <- TRUE
>          }
>          if (!hasDep350) {
>              ## re-read files after exclusions have been applied
> @@ -1189,6 +1191,23 @@
>                           "\n")
>              }
>          }
> +        if (!hasDep410) {
> +            uses410 <- .check_use_of_R41_syntax(dir(file.path(pkgname, "R"),
> +                                                    full.names = TRUE,
> +                                                    pattern = "[.]R$",
> +                                                    ignore.case = TRUE))
> +            if (length(uses410)) {
> +                fixup_R_dep(pkgname, "4.1.0")
> +                msg <- paste("WARNING: Added dependency on R >= 4.1.0 because",
> +                             "some of the source files use the new syntax",
> +                             "constructs.")
> +                printLog(Log,
> +                         paste(c(strwrap(msg, indent = 2L, exdent = 2L),
> +                                 format(uses410)),
> +                               collapse = "\n"),
> +                               "\n")
> +            }
> +        }
>
>         ## add NAMESPACE if the author didn't write one
>         if(!file.exists(namespace <- file.path(pkgname, "NAMESPACE")) ) {
>
>
> --
> Best regards,
> Ivan
>
> [*] Based on the following GitHub search, which requires logging in:
> https://github.com/search?q=org%3Acran%20path%3A%2F%5B.%5D%5BRr%5Dd%3F%24%2F%20%2F%5Cs%5C%7C%3E%2F&type=code
> There's currently no REST API support for regexp search, so the list
> was obtained manually.
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From peter@ruckde@che| @end|ng |rom web@de  Thu Jan 16 18:09:25 2025
From: peter@ruckde@che| @end|ng |rom web@de (Peter Ruckdeschel)
Date: Thu, 16 Jan 2025 18:09:25 +0100
Subject: [Rd] UTF-8 encoding issue with R CMD check with
 install-args="--latex"
Message-ID: <8f65996d-9c62-41eb-ae9c-fe177ffb2c11@web.de>

Hi,

this is to report some minor UTF-8 encoding issue with R CMD check with option --install-args="--latex"
(and possibly more install-args).

More specifically, in my Windows system (see the cloud link below for details on my system), but also
on the Linux machine of my collaborator Matthias Kohl (CC), the following command throws errors:

 ????? R CMD check --install-args="--latex" <pkg>_<version>.tar.gz

I.e., at this command, when checking the pdf version of the manual, pdflatex throws an error of type

===
* checking PDF version of manual ... WARNING
LaTeX errors when creating PDF version.
This typically indicates Rd problems.
LaTeX errors found:
! Undefined control sequence.
l.37 \inputencoding
 ?????????????????? {utf8}
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
===

This is certainly not an urgent issue.

Option --install-args="--latex" can be removed without harm for me, it somehow survived in my set
of (Windows) batch files I use to build, check, and install my R packages on Windows, which,
admittedly, makes me a rare species in the R ecosystem.

Still, it would be nice to understand why this happens, so any hints would be warmly welcome.

Some more details on my testing configuration and my first insights into this error can be found
here: https://cloudstorage.uni-oldenburg.de/s/kStWp5PNiwJEqfz

Best, Peter Ruckdeschel


	[[alternative HTML version deleted]]


From |kry|ov @end|ng |rom d|@root@org  Thu Jan 16 21:21:16 2025
From: |kry|ov @end|ng |rom d|@root@org (Ivan Krylov)
Date: Thu, 16 Jan 2025 23:21:16 +0300
Subject: [Rd] UTF-8 encoding issue with R CMD check with
 install-args="--latex"
In-Reply-To: <8f65996d-9c62-41eb-ae9c-fe177ffb2c11@web.de>
References: <8f65996d-9c62-41eb-ae9c-fe177ffb2c11@web.de>
Message-ID: <20250116232116.4e843b88@Tarkus>

? Thu, 16 Jan 2025 18:09:25 +0100
Peter Ruckdeschel via R-devel <r-devel at r-project.org> ?????:

> this is to report some minor UTF-8 encoding issue with R CMD check
> with option --install-args="--latex" (and possibly more install-args).

Thank you for a very detailed report!

This doesn't happen on R-4.2.2 or 4.3.1, but it does happen on R-devel.

Comparing the calls from R CMD check to R CMD Rd2pdf, I see no
difference in the environment variables or any significant difference
in the command lines. The command being run ends up being equivalent to

R CMD Rd2pdf <package>.Rcheck/<package>

...and the source of the difference is the presence (or absence) of the
<package>.Rcheck/<package>/latex directory. If I temporarily move it
away during an R CMD check --install-args=--latex run, the command
succeeds.

Indeed, tools:::.pkg2tex says

>> ## First check for a latex dir (from R CMD INSTALL --latex).
>> ## Second guess is this is a >= 2.10.0 package with stored .rds
>> ## files.
>> ## If it does not exist, guess this is a source package.
>> latexdir <- file.path(pkgdir, "latex")

The individual *.tex files in the latex/ subdirectory of the installed
package all do start with an "\inputencoding{utf8}" line.

When the latex/ subdirectory doesn't exist, the !dir.exists(latexdir)
branch is taken, where Rd2latex(...) is called with writeEncoding =
FALSE, thus avoiding the problem.

-- 
Best regards,
Ivan


From Kurt@Horn|k @end|ng |rom wu@@c@@t  Fri Jan 17 09:01:56 2025
From: Kurt@Horn|k @end|ng |rom wu@@c@@t (Kurt Hornik)
Date: Fri, 17 Jan 2025 09:01:56 +0100
Subject: [Rd] UTF-8 encoding issue with R CMD check with
 install-args="--latex"
In-Reply-To: <20250116232116.4e843b88@Tarkus>
References: <8f65996d-9c62-41eb-ae9c-fe177ffb2c11@web.de>
 <20250116232116.4e843b88@Tarkus>
Message-ID: <26506.3700.807381.353929@hornik.net>

>>>>> Ivan Krylov via R-devel writes:

Thanks.  Will try to fix ...

Best
-k

> ? Thu, 16 Jan 2025 18:09:25 +0100
> Peter Ruckdeschel via R-devel <r-devel at r-project.org> ?????:

>> this is to report some minor UTF-8 encoding issue with R CMD check
>> with option --install-args="--latex" (and possibly more install-args).

> Thank you for a very detailed report!

> This doesn't happen on R-4.2.2 or 4.3.1, but it does happen on R-devel.

> Comparing the calls from R CMD check to R CMD Rd2pdf, I see no
> difference in the environment variables or any significant difference
> in the command lines. The command being run ends up being equivalent to

> R CMD Rd2pdf <package>.Rcheck/<package>

> ...and the source of the difference is the presence (or absence) of the
> <package>.Rcheck/<package>/latex directory. If I temporarily move it
> away during an R CMD check --install-args=--latex run, the command
> succeeds.

> Indeed, tools:::.pkg2tex says

>>> ## First check for a latex dir (from R CMD INSTALL --latex).
>>> ## Second guess is this is a >= 2.10.0 package with stored .rds
>>> ## files.
>>> ## If it does not exist, guess this is a source package.
>>> latexdir <- file.path(pkgdir, "latex")

> The individual *.tex files in the latex/ subdirectory of the installed
> package all do start with an "\inputencoding{utf8}" line.

> When the latex/ subdirectory doesn't exist, the !dir.exists(latexdir)
> branch is taken, where Rd2latex(...) is called with writeEncoding =
> FALSE, thus avoiding the problem.

> -- 
> Best regards,
> Ivan

> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From peter@ruckde@che| @end|ng |rom web@de  Fri Jan 17 14:56:21 2025
From: peter@ruckde@che| @end|ng |rom web@de (Peter Ruckdeschel)
Date: Fri, 17 Jan 2025 14:56:21 +0100
Subject: [Rd] UTF-8 encoding issue with R CMD check with
 install-args="--latex"
In-Reply-To: <26506.3700.807381.353929@hornik.net>
References: <8f65996d-9c62-41eb-ae9c-fe177ffb2c11@web.de>
 <20250116232116.4e843b88@Tarkus> <26506.3700.807381.353929@hornik.net>
Message-ID: <528c8ff3-e125-4251-94e0-592824e44e15@web.de>

Thanks Ivan and Kurt, for nailing this down, best regards, Peter

Am 17.01.2025 um 09:01 schrieb Kurt Hornik:
>>>>>> Ivan Krylov via R-devel writes:
> Thanks.  Will try to fix ...
>
> Best
> -k
>
>> ? Thu, 16 Jan 2025 18:09:25 +0100
>> Peter Ruckdeschel via R-devel <r-devel at r-project.org> ?????:
>>> this is to report some minor UTF-8 encoding issue with R CMD check
>>> with option --install-args="--latex" (and possibly more install-args).
>> Thank you for a very detailed report!
>> This doesn't happen on R-4.2.2 or 4.3.1, but it does happen on R-devel.
>> Comparing the calls from R CMD check to R CMD Rd2pdf, I see no
>> difference in the environment variables or any significant difference
>> in the command lines. The command being run ends up being equivalent to
>> R CMD Rd2pdf <package>.Rcheck/<package>
>> ...and the source of the difference is the presence (or absence) of the
>> <package>.Rcheck/<package>/latex directory. If I temporarily move it
>> away during an R CMD check --install-args=--latex run, the command
>> succeeds.
>> Indeed, tools:::.pkg2tex says
>>>> ## First check for a latex dir (from R CMD INSTALL --latex).
>>>> ## Second guess is this is a >= 2.10.0 package with stored .rds
>>>> ## files.
>>>> ## If it does not exist, guess this is a source package.
>>>> latexdir <- file.path(pkgdir, "latex")
>> The individual *.tex files in the latex/ subdirectory of the installed
>> package all do start with an "\inputencoding{utf8}" line.
>> When the latex/ subdirectory doesn't exist, the !dir.exists(latexdir)
>> branch is taken, where Rd2latex(...) is called with writeEncoding =
>> FALSE, thus avoiding the problem.
>> --
>> Best regards,
>> Ivan
>> ______________________________________________
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel


From Thom@@@SOEIRO @end|ng |rom @p-hm@|r  Fri Jan 17 15:19:31 2025
From: Thom@@@SOEIRO @end|ng |rom @p-hm@|r (SOEIRO Thomas)
Date: Fri, 17 Jan 2025 14:19:31 +0000
Subject: [Rd] as.data.frame() methods for model objects
In-Reply-To: <77cc3fe9e80449aaab6321794d04eb09@SCWPR-EXDAG1-6A.aphm.ap-hm.fr>
References: <77cc3fe9e80449aaab6321794d04eb09@SCWPR-EXDAG1-6A.aphm.ap-hm.fr>
Message-ID: <36cfb7682ea2448a8321f752d4e0e68c@SCWPR-EXDAG1-6A.aphm.ap-hm.fr>

Following Duncan Murdoch's off-list comments (thanks again!), here is a more complete/flexible version:

as.data.frame.lm <- function(x, ..., level = 0.95, exp = FALSE) {
  cf <- x |> summary() |> stats::coef()
  ci <- stats::confint(x, level = level)
  if (exp) {
    cf[, "Estimate"] <- exp(cf[, "Estimate"])
    ci <- exp(ci)
  }
  df <- data.frame(row.names(cf), cf, ci, row.names = NULL)
  names(df) <- c("term", "estimate", "std.error", "statistic", "p.value", "conf.low", "conf.high")
  df
}

> lm(breaks ~ wool + tension, warpbreaks) |> as.data.frame()
         term   estimate std.error statistic      p.value  conf.low  conf.high
1 (Intercept)  39.277778  3.161783 12.422667 6.681866e-17  32.92715 45.6284061
2       woolB  -5.777778  3.161783 -1.827380 7.361367e-02 -12.12841  0.5728505
3    tensionM -10.000000  3.872378 -2.582393 1.278683e-02 -17.77790 -2.2221006
4    tensionH -14.722222  3.872378 -3.801856 3.913842e-04 -22.50012 -6.9443228

> glm(breaks < 20 ~ wool + tension, data = warpbreaks) |> as.data.frame(exp = TRUE)
Waiting for profiling to be done...
         term estimate std.error statistic    p.value  conf.low conf.high
1 (Intercept) 1.076887 0.1226144 0.6041221 0.54849393 0.8468381  1.369429
2       woolB 1.076887 0.1226144 0.6041221 0.54849393 0.8468381  1.369429
3    tensionM 1.248849 0.1501714 1.4797909 0.14520270 0.9304302  1.676239
4    tensionH 1.395612 0.1501714 2.2196863 0.03100435 1.0397735  1.873229

Thank you.

Best regards,
Thomas



-----Message d'origine-----
De?: SOEIRO Thomas 
Envoy??: jeudi 16 janvier 2025 14:36
??: r-devel at r-project.org
Objet?: as.data.frame() methods for model objects

Hello all,

Would there be any interest for adding as.data.frame() methods for model objects?
Of course there is packages (e.g. broom), but I think providing methods would be more discoverable (and the patch would be small).
It is really useful for exporting model results or for plotting.

e.g.:

as.data.frame.lm <- function(x) { # could get other arguments, e.g. exp = TRUE/FALSE to exponentiate estimate, conf.low, conf.high
  cf <- x |> summary() |> stats::coef()
  ci <- stats::confint(x)
  data.frame(
    term = row.names(cf),
    estimate = cf[, "Estimate"],
    p.value = cf[, 4], # magic number because name changes between lm() and glm(*, family = *)
    conf.low = ci[, "2.5 %"],
    conf.high = ci[, "97.5 %"],
    row.names = NULL
  )
}

> lm(breaks ~ wool + tension, warpbreaks) |> as.data.frame()
         term   estimate      p.value  conf.low  conf.high
1 (Intercept)  39.277778 6.681866e-17  32.92715 45.6284061
2       woolB  -5.777778 7.361367e-02 -12.12841  0.5728505
3    tensionM -10.000000 1.278683e-02 -17.77790 -2.2221006
4    tensionH -14.722222 3.913842e-04 -22.50012 -6.9443228

> glm(breaks < 20 ~ wool + tension, data = warpbreaks) |> as.data.frame()
Waiting for profiling to be done...
         term   estimate    p.value    conf.low conf.high
1 (Intercept) 0.07407407 0.54849393 -0.16624575 0.3143939
2       woolB 0.07407407 0.54849393 -0.16624575 0.3143939
3    tensionM 0.22222222 0.14520270 -0.07210825 0.5165527
4    tensionH 0.33333333 0.03100435  0.03900286 0.6276638

Thank you.

Best regards,
Thomas


From Kurt@Horn|k @end|ng |rom wu@@c@@t  Fri Jan 17 15:29:25 2025
From: Kurt@Horn|k @end|ng |rom wu@@c@@t (Kurt Hornik)
Date: Fri, 17 Jan 2025 15:29:25 +0100
Subject: [Rd] Depends: R (>= 4.1) for packages that use |> and \(...)
In-Reply-To: <CAFDcVCTTVa+Ea+BoVoag0RJ7LK3P1tyPzBG9vP4U-4w6a4kKKQ@mail.gmail.com>
References: <20250116144121.5520a9cc@arachnoid>
 <CAFDcVCTTVa+Ea+BoVoag0RJ7LK3P1tyPzBG9vP4U-4w6a4kKKQ@mail.gmail.com>
Message-ID: <26506.26949.241762.7373@hornik.net>

>>>>> Henrik Bengtsson writes:

Thanks.  Will take a look ...

Best
-k

> Thanks for looking into this and the patch. FWIW, there's an open
> PR18105 - "R CMD build: Add dependency on R >= 4.1.0 if code uses pipe
> symbol |>" for this
> (https://bugs.r-project.org/show_bug.cgi?id=18105).

> /Henrik

> On Thu, Jan 16, 2025 at 3:42?AM Ivan Krylov via R-devel
> <r-devel at r-project.org> wrote:
>> 
>> Hello R-devel,
>> 
>> Approximately [*] the following CRAN packages make use of the pipe
>> syntax in their source code or examples without depending on R >= 4.1:
>> 
>> [1] "biplotEZ"           "CaseBasedReasoning" "collinear"
>> [4] "cubble"             "disk.frame"         "duckdbfs"
>> [7] "eia"                "feltr"              "flattabler"
>> [10] "geodimension"       "hgnc"               "himach"
>> [13] "lay"                "lidR"               "locateip"
>> [16] "particles"          "photosynthesis"     "pivotea"
>> [19] "planr"              "rtrek"              "satres"
>> [22] "sdtmval"            "selenider"          "sewage"
>> [25] "stminsights"        "tabr"               "tidygraph"
>> [28] "tidywikidatar"      "USgas"              "washi"
>> [31] "zctaCrosswalk"
>> 
>> Since we have checks in place to automatically set Depends: R (>=
>> 2.10.0) for data files compressed with xz or bzip2 and >= 3.5.0 for
>> data files serialized with format version 3, would it make sense to
>> automatically add Depends: R (>= 4.1) for such packages?
>> 
>> The patch at the end of this message adds the R version dependency
>> during R CMD build:
>> 
>> R-devel CMD build --no-build-vignettes .
>> * checking for file ?./DESCRIPTION? ... OK
>> * preparing ?biplotEZ?:
>> * checking DESCRIPTION meta-information ... OK
>> * cleaning src
>> * checking vignette meta-information ... OK
>> * checking for LF line-endings in source and make files and shell
>> scripts
>> * checking for empty or unneeded directories
>> NB: this package now depends on R (>= 4.1.0)
>> WARNING: Added dependency on R >= 4.1.0 because some of the source
>> files use the new syntax constructs.
>> Files making use of R >= 4.1 pipe |> or function shorthand \(...):
>> biplotEZ/R/biplot.R biplotEZ/R/translate_axes.R
>> * building ?biplotEZ_2.2.tar.gz?
>> 
>> A more extensive test could also look at the tests, demos, and
>> \examples{}, but that may take longer and open the door for false
>> positives. A package that uses |> in one example would still be useful
>> on R-4.0.0, while a package that uses |> in the source code would fail
>> to parse and install.
>> 
>> Index: src/library/tools/R/QC.R
>> ===================================================================
>> --- src/library/tools/R/QC.R    (revision 87545)
>> +++ src/library/tools/R/QC.R    (working copy)
>> @@ -10367,7 +10367,29 @@
>> }
>> }
>> 
>> +.check_use_of_R41_syntax <-
>> +function(files)
>> +{
>> +    out <- vapply(files,
>> +           function(f) tryCatch(
>> +               any(getParseData(parse(f, keep.source = TRUE))$token %in% c("PIPE", "'\\\\'")),
>> +               error = function(e) FALSE
>> +           ),
>> +           FALSE)
>> +    out <- files[out]
>> +    class(out) <- "check_use_of_R41_syntax"
>> +    out
>> +}
>> 
>> +format.check_use_of_R41_syntax <-
>> +function(x, ...)
>> +{
>> +    if (length(x)) {
>> +        c("Files making use of R >= 4.1 pipe |> or function shorthand \\(...):",
>> +          .strwrap22(x, " "))
>> +    } else character()
>> +}
>> +
>> ### Local variables: ***
>> ### mode: outline-minor ***
>> ### outline-regexp: "### [*]+" ***
>> Index: src/library/tools/R/build.R
>> ===================================================================
>> --- src/library/tools/R/build.R (revision 87545)
>> +++ src/library/tools/R/build.R (working copy)
>> @@ -1165,9 +1165,11 @@
>> desc <- .read_description(file.path(pkgname, "DESCRIPTION"))
>> Rdeps <- .split_description(desc)$Rdepends2
>> hasDep350 <- FALSE
>> +        hasDep410 <- FALSE
>> for(dep in Rdeps) {
>> if(dep$op != '>=') next
>> if(dep$version >= "3.5.0") hasDep350 <- TRUE
>> +            if(dep$version >= "4.1.0") hasDep410 <- TRUE
>> }
>> if (!hasDep350) {
>> ## re-read files after exclusions have been applied
>> @@ -1189,6 +1191,23 @@
>> "\n")
>> }
>> }
>> +        if (!hasDep410) {
>> +            uses410 <- .check_use_of_R41_syntax(dir(file.path(pkgname, "R"),
>> +                                                    full.names = TRUE,
>> +                                                    pattern = "[.]R$",
>> +                                                    ignore.case = TRUE))
>> +            if (length(uses410)) {
>> +                fixup_R_dep(pkgname, "4.1.0")
>> +                msg <- paste("WARNING: Added dependency on R >= 4.1.0 because",
>> +                             "some of the source files use the new syntax",
>> +                             "constructs.")
>> +                printLog(Log,
>> +                         paste(c(strwrap(msg, indent = 2L, exdent = 2L),
>> +                                 format(uses410)),
>> +                               collapse = "\n"),
>> +                               "\n")
>> +            }
>> +        }
>> 
>> ## add NAMESPACE if the author didn't write one
>> if(!file.exists(namespace <- file.path(pkgname, "NAMESPACE")) ) {
>> 
>> 
>> --
>> Best regards,
>> Ivan
>> 
>> [*] Based on the following GitHub search, which requires logging in:
>> https://github.com/search?q=org%3Acran%20path%3A%2F%5B.%5D%5BRr%5Dd%3F%24%2F%20%2F%5Cs%5C%7C%3E%2F&type=code
>> There's currently no REST API support for regexp search, so the list
>> was obtained manually.
>> 
>> ______________________________________________
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel

> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From m@ech|er @end|ng |rom @t@t@m@th@ethz@ch  Fri Jan 17 17:03:30 2025
From: m@ech|er @end|ng |rom @t@t@m@th@ethz@ch (Martin Maechler)
Date: Fri, 17 Jan 2025 17:03:30 +0100
Subject: [Rd] as.data.frame() methods for model objects
In-Reply-To: <36cfb7682ea2448a8321f752d4e0e68c@SCWPR-EXDAG1-6A.aphm.ap-hm.fr>
References: <77cc3fe9e80449aaab6321794d04eb09@SCWPR-EXDAG1-6A.aphm.ap-hm.fr>
 <36cfb7682ea2448a8321f752d4e0e68c@SCWPR-EXDAG1-6A.aphm.ap-hm.fr>
Message-ID: <26506.32594.995252.735718@stat.math.ethz.ch>

>>>>> SOEIRO Thomas via R-devel 
>>>>>     on Fri, 17 Jan 2025 14:19:31 +0000 writes:

> Following Duncan Murdoch's off-list comments (thanks again!), here is a more complete/flexible version:
> 
> as.data.frame.lm <- function(x, ..., level = 0.95, exp = FALSE) {
>   cf <- x |> summary() |> stats::coef()
>   ci <- stats::confint(x, level = level)
>   if (exp) {
>     cf[, "Estimate"] <- exp(cf[, "Estimate"])
>     ci <- exp(ci)
>   }
>   df <- data.frame(row.names(cf), cf, ci, row.names = NULL)
>   names(df) <- c("term", "estimate", "std.error", "statistic", "p.value", "conf.low", "conf.high")
>   df
> }

Indeed, using level is much better already.

Instead of the  exp = FALSE ,
I'd use    transFUN = NULL
and then

    if(!is.null(transFUN)) {
       stopifnot(is.function(transFUN))
       cf[, "Estimate"] <- transFUN(cf[, "Estimate"])
       ci <- transFUN(ci)
    }

Noting that I'd want "inverse-logit" (*) in some cases, but also
different things for different link functions, hence just
exp = T/F  is not enough.

Martin

--
*) "inverse-logit"  is simply R's   plogis()  function;  quite a
 few people have been re-inventing it, also in their packages ...



> > lm(breaks ~ wool + tension, warpbreaks) |> as.data.frame()
>          term   estimate std.error statistic      p.value  conf.low  conf.high
> 1 (Intercept)  39.277778  3.161783 12.422667 6.681866e-17  32.92715 45.6284061
> 2       woolB  -5.777778  3.161783 -1.827380 7.361367e-02 -12.12841  0.5728505
> 3    tensionM -10.000000  3.872378 -2.582393 1.278683e-02 -17.77790 -2.2221006
> 4    tensionH -14.722222  3.872378 -3.801856 3.913842e-04 -22.50012 -6.9443228
> 
> > glm(breaks < 20 ~ wool + tension, data = warpbreaks) |> as.data.frame(exp = TRUE)
> Waiting for profiling to be done...
>          term estimate std.error statistic    p.value  conf.low conf.high
> 1 (Intercept) 1.076887 0.1226144 0.6041221 0.54849393 0.8468381  1.369429
> 2       woolB 1.076887 0.1226144 0.6041221 0.54849393 0.8468381  1.369429
> 3    tensionM 1.248849 0.1501714 1.4797909 0.14520270 0.9304302  1.676239
> 4    tensionH 1.395612 0.1501714 2.2196863 0.03100435 1.0397735  1.873229
> 
> Thank you.
> 
> Best regards,
> Thomas
> 
> 
> 
> -----Message d'origine-----
> De?: SOEIRO Thomas 
> Envoy??: jeudi 16 janvier 2025 14:36
> ??: r-devel at r-project.org
> Objet?: as.data.frame() methods for model objects
> 
> Hello all,
> 
> Would there be any interest for adding as.data.frame() methods for model objects?
> Of course there is packages (e.g. broom), but I think providing methods would be more discoverable (and the patch would be small).
> It is really useful for exporting model results or for plotting.
> 
> e.g.:
> 
> as.data.frame.lm <- function(x) { # could get other arguments, e.g. exp = TRUE/FALSE to exponentiate estimate, conf.low, conf.high
>   cf <- x |> summary() |> stats::coef()
>   ci <- stats::confint(x)
>   data.frame(
>     term = row.names(cf),
>     estimate = cf[, "Estimate"],
>     p.value = cf[, 4], # magic number because name changes between lm() and glm(*, family = *)
>     conf.low = ci[, "2.5 %"],
>     conf.high = ci[, "97.5 %"],
>     row.names = NULL
>   )
> }
> 
> > lm(breaks ~ wool + tension, warpbreaks) |> as.data.frame()
>          term   estimate      p.value  conf.low  conf.high
> 1 (Intercept)  39.277778 6.681866e-17  32.92715 45.6284061
> 2       woolB  -5.777778 7.361367e-02 -12.12841  0.5728505
> 3    tensionM -10.000000 1.278683e-02 -17.77790 -2.2221006
> 4    tensionH -14.722222 3.913842e-04 -22.50012 -6.9443228
> 
> > glm(breaks < 20 ~ wool + tension, data = warpbreaks) |> as.data.frame()
> Waiting for profiling to be done...
>          term   estimate    p.value    conf.low conf.high
> 1 (Intercept) 0.07407407 0.54849393 -0.16624575 0.3143939
> 2       woolB 0.07407407 0.54849393 -0.16624575 0.3143939
> 3    tensionM 0.22222222 0.14520270 -0.07210825 0.5165527
> 4    tensionH 0.33333333 0.03100435  0.03900286 0.6276638
> 
> Thank you.
> 
> Best regards,
> Thomas


From Thom@@@SOEIRO @end|ng |rom @p-hm@|r  Fri Jan 17 21:12:10 2025
From: Thom@@@SOEIRO @end|ng |rom @p-hm@|r (SOEIRO Thomas)
Date: Fri, 17 Jan 2025 20:12:10 +0000
Subject: [Rd] as.data.frame() methods for model objects
In-Reply-To: <26506.32594.995252.735718@stat.math.ethz.ch>
References: <77cc3fe9e80449aaab6321794d04eb09@SCWPR-EXDAG1-6A.aphm.ap-hm.fr>
 <36cfb7682ea2448a8321f752d4e0e68c@SCWPR-EXDAG1-6A.aphm.ap-hm.fr>
 <26506.32594.995252.735718@stat.math.ethz.ch>
Message-ID: <9345438b6a4c413498944ef4f0476bc1@SCWPR-EXDAG1-6A.aphm.ap-hm.fr>

Thank you very much Martin.

Below is a patch implementing that.

Two newbie questions:
- should I add row.names = NULL, optional = FALSE to match the arguments of the generic? (this is not the case for e.g. as.data.frame.table but I thought it was needed: https://cloud.r-project.org/doc/manuals/r-devel/R-exts.html#Generic-functions-and-methods)
- shouldn't we use match.fun(transFUN)?



diff --git a/src/library/stats/R/lm.R b/src/library/stats/R/lm.R
index 13a458797b..2ce6b16f6e 100644
--- a/src/library/stats/R/lm.R
+++ b/src/library/stats/R/lm.R
@@ -982,3 +982,18 @@ labels.lm <- function(object, ...)
     asgn <- object$assign[qr.lm(object)$pivot[1L:object$rank]]
     tl[unique(asgn)]
 }
+
+as.data.frame.lm <- function(x, ..., level = 0.95, transFUN = NULL)
+{
+  cf <- x |> summary() |> coef()
+  ci <- confint(x, level = level)
+  if(!is.null(transFUN)) {
+    stopifnot(is.function(transFUN))
+    cf[, "Estimate"] <- transFUN(cf[, "Estimate"])
+    ci <- transFUN(ci)
+  }
+  df <- data.frame(row.names(cf), cf, ci, row.names = NULL)
+  names(df) <- c("term", "estimate", "std.error", "statistic", "p.value",
+                 "conf.low", "conf.high")
+  df
+}
diff --git a/src/library/stats/man/lm.Rd b/src/library/stats/man/lm.Rd
index ff05afabff..b54373dff4 100644
--- a/src/library/stats/man/lm.Rd
+++ b/src/library/stats/man/lm.Rd
@@ -21,6 +21,8 @@ lm(formula, data, subset, weights, na.action,
    singular.ok = TRUE, contrasts = NULL, offset, \dots)
 
 \S3method{print}{lm}(x, digits = max(3L, getOption("digits") - 3L), \dots)
+
+\S3method{as.data.frame}{lm}(x, ..., level = 0.95, transFUN = NULL)
 }
 \arguments{
   \item{formula}{an object of class \code{"\link{formula}"} (or one that
@@ -81,6 +83,10 @@ lm(formula, data, subset, weights, na.action,
   \item{digits}{the number of \emph{significant} digits to be
     passed to \code{\link{format}(\link{coef}(x), .)} when
     \I{\code{\link{print}()}ing}.}
+  %% as.data.frame.lm():
+  \item{level}{the confidence level required.}
+  \item{transFUN}{a function to transform \code{estimate}, \code{conf.low} and
+    \code{conf.high}.}
 }
 \details{
   Models for \code{lm} are specified symbolically.  A typical model has
@@ -168,6 +174,10 @@ lm(formula, data, subset, weights, na.action,
   \code{effects} and (unless not requested) \code{qr} relating to the linear
   fit, for use by extractor functions such as \code{summary} and
   \code{\link{effects}}.
+
+  \code{as.data.frame} returns a data frame with statistics as provided by
+  \code{coef(summary(.))} and confidence intervals for model
+  estimates.
 }
 \section{Using time series}{
   Considerable care is needed when using \code{lm} with time series.




De?: Martin Maechler [mailto:maechler at stat.math.ethz.ch] 
Envoy??: vendredi 17 janvier 2025 17:04
??: SOEIRO Thomas
Cc?: r-devel at r-project.org
Objet?: Re: [Rd] as.data.frame() methods for model objects


>>>>> SOEIRO Thomas via R-devel 
>>>>>     on Fri, 17 Jan 2025 14:19:31 +0000 writes:

> Following Duncan Murdoch's off-list comments (thanks again!), here is a more complete/flexible version:
> 
> as.data.frame.lm <- function(x, ..., level = 0.95, exp = FALSE) {
>   cf <- x |> summary() |> stats::coef()
>   ci <- stats::confint(x, level = level)
>   if (exp) {
>     cf[, "Estimate"] <- exp(cf[, "Estimate"])
>     ci <- exp(ci)
>   }
>   df <- data.frame(row.names(cf), cf, ci, row.names = NULL)
>   names(df) <- c("term", "estimate", "std.error", "statistic", "p.value", "conf.low", "conf.high")
>   df
> }

Indeed, using level is much better already.

Instead of the  exp = FALSE ,
I'd use    transFUN = NULL
and then

    if(!is.null(transFUN)) {
       stopifnot(is.function(transFUN))
       cf[, "Estimate"] <- transFUN(cf[, "Estimate"])
       ci <- transFUN(ci)
    }

Noting that I'd want "inverse-logit" (*) in some cases, but also
different things for different link functions, hence just
exp = T/F  is not enough.

Martin

--
*) "inverse-logit"  is simply R's   plogis()  function;  quite a
 few people have been re-inventing it, also in their packages ...



> > lm(breaks ~ wool + tension, warpbreaks) |> as.data.frame()
>          term   estimate std.error statistic      p.value  conf.low  conf.high
> 1 (Intercept)  39.277778  3.161783 12.422667 6.681866e-17  32.92715 45.6284061
> 2       woolB  -5.777778  3.161783 -1.827380 7.361367e-02 -12.12841  0.5728505
> 3    tensionM -10.000000  3.872378 -2.582393 1.278683e-02 -17.77790 -2.2221006
> 4    tensionH -14.722222  3.872378 -3.801856 3.913842e-04 -22.50012 -6.9443228
> 
> > glm(breaks < 20 ~ wool + tension, data = warpbreaks) |> as.data.frame(exp = TRUE)
> Waiting for profiling to be done...
>          term estimate std.error statistic    p.value  conf.low conf.high
> 1 (Intercept) 1.076887 0.1226144 0.6041221 0.54849393 0.8468381  1.369429
> 2       woolB 1.076887 0.1226144 0.6041221 0.54849393 0.8468381  1.369429
> 3    tensionM 1.248849 0.1501714 1.4797909 0.14520270 0.9304302  1.676239
> 4    tensionH 1.395612 0.1501714 2.2196863 0.03100435 1.0397735  1.873229
> 
> Thank you.
> 
> Best regards,
> Thomas
> 
> 
> 
> -----Message d'origine-----
> De?: SOEIRO Thomas 
> Envoy??: jeudi 16 janvier 2025 14:36
> ??: r-devel at r-project.org
> Objet?: as.data.frame() methods for model objects
> 
> Hello all,
> 
> Would there be any interest for adding as.data.frame() methods for model objects?
> Of course there is packages (e.g. broom), but I think providing methods would be more discoverable (and the patch would be small).
> It is really useful for exporting model results or for plotting.
> 
> e.g.:
> 
> as.data.frame.lm <- function(x) { # could get other arguments, e.g. exp = TRUE/FALSE to exponentiate estimate, conf.low, conf.high
>   cf <- x |> summary() |> stats::coef()
>   ci <- stats::confint(x)
>   data.frame(
>     term = row.names(cf),
>     estimate = cf[, "Estimate"],
>     p.value = cf[, 4], # magic number because name changes between lm() and glm(*, family = *)
>     conf.low = ci[, "2.5 %"],
>     conf.high = ci[, "97.5 %"],
>     row.names = NULL
>   )
> }
> 
> > lm(breaks ~ wool + tension, warpbreaks) |> as.data.frame()
>          term   estimate      p.value  conf.low  conf.high
> 1 (Intercept)  39.277778 6.681866e-17  32.92715 45.6284061
> 2       woolB  -5.777778 7.361367e-02 -12.12841  0.5728505
> 3    tensionM -10.000000 1.278683e-02 -17.77790 -2.2221006
> 4    tensionH -14.722222 3.913842e-04 -22.50012 -6.9443228
> 
> > glm(breaks < 20 ~ wool + tension, data = warpbreaks) |> as.data.frame()
> Waiting for profiling to be done...
>          term   estimate    p.value    conf.low conf.high
> 1 (Intercept) 0.07407407 0.54849393 -0.16624575 0.3143939
> 2       woolB 0.07407407 0.54849393 -0.16624575 0.3143939
> 3    tensionM 0.22222222 0.14520270 -0.07210825 0.5165527
> 4    tensionH 0.33333333 0.03100435  0.03900286 0.6276638
> 
> Thank you.
> 
> Best regards,
> Thomas

From |kry|ov @end|ng |rom d|@root@org  Sat Jan 18 11:10:10 2025
From: |kry|ov @end|ng |rom d|@root@org (Ivan Krylov)
Date: Sat, 18 Jan 2025 13:10:10 +0300
Subject: [Rd] How setClass() may introduce a binary dependency between
 packages
Message-ID: <20250118131010.035cf539@Tarkus>

Hello R-devel,

Since Pavel has mentioned ABI-level dependencies between packages [1],
it may be relevant to revisit the related problem mentioned ~1.5 years
ago by Dirk [2].

While the current version of SeuratObject doesn't exhibit this problem,
a combination of package versions described by Dirk still breaks each
other on R-devel:

1. Install Matrix_1.5-1
2. Install SeuratObject_4.1.3 from source
3. Install Matrix_1.6-0
4. SeuratObject is now broken until reinstalled from source

The problem is actually slightly worse, because loading SeuratObject
from step (2) breaks sparse matrices for everyone until Matrix is
reloaded (and very few people can afford the $127-150 million budget for
that):

library(Matrix); sparseMatrix(1,1)
# 1 x 1 sparse Matrix of class "ngCMatrix"
# 
# [1,] |
suppressPackageStartupMessages(library(SeuratObject))
sparseMatrix(1,1)
# 1 x 1 sparse Matrix of class "ngCMatrix"
# Error in validityMethod(as(object, superClass)) :
#   object 'Csparse_validate' not found
detach('package:SeuratObject', unload = TRUE); sparseMatrix(1,1)
# 1 x 1 sparse Matrix of class "ngCMatrix"
# Error in validityMethod(as(object, superClass)) :
#   object 'Csparse_validate' not found
detach('package:Matrix', unload = TRUE); library(Matrix)
sparseMatrix(1,1)
# 1 x 1 sparse Matrix of class "ngCMatrix"
# 
# [1,] |

In turn, this can be traced to a copy of the CsparseMatrix class from
Matrix_1.5-1 remaining in the namespace and the lazy-load database of
SeuratObject:

readRDS('SeuratObject/R/SeuratObject.rdx')$variables |> names() |>
grep('sparseM', x = _, value = TRUE)
# [1] ".__C__CsparseMatrix" ".__C__dsparseMatrix" ".__C__sparseMatrix" 
SeuratObject:::.__C__CsparseMatrix at validity
# function (object) 
# .Call(Csparse_validate, object) # <-- missing in Matrix_1.6-0
# <bytecode: 0x55f1f6ff16a8>
# <environment: namespace:Matrix>

When the SeuratObject namespace is loaded, methods::cacheMetaData sees
the 1.5-1 class definition after the 1.6-0 definition and overwrites
the cache entry.

Why do these objects appear in the namespace and not the imports
environment together with the actually imported .__C__dgCMatrix?

(gdb) p Rf_install(".__C__CsparseMatrix")
$1 = (struct SEXPREC *) 0x555557888c28
(gdb) b Rf_defineVar if symbol == (SEXP)0x555557888c28
Breakpoint 1 at 0x7ffff7b1bcd0: file envir.c, line 1624.

file.copy(
 'SeuratObject-collated.R', 'SeuratObject/R/SeuratObject',
 overwrite=TRUE
)
Sys.setenv('_R_TRACE_LOADNAMESPACE_'='5')
tools:::makeLazyLoading('SeuratObject')

Eventually, after two hits during loading Matrix code and exports:

-- done processing imports for ?SeuratObject?
-- loading code for ?SeuratObject?
Thread 1 "R" hit Breakpoint 1, Rf_defineVar (symbol=0x555558753e18, value=0x55555d0602f8, rho=0x555558906630) at envir.c:1624
1624        if (value == R_UnboundValue)
(gdb) call Rf_PrintValue(R_NamespaceEnvSpec(rho))
          name        version
"SeuratObject"        "4.1.3"
(gdb) call Rf_PrintValue(symbol)
.__C__CsparseMatrix
(gdb) call Rf_PrintValue(R_GlobalContext->call)
assign(mname, def, where)
(gdb) call Rf_PrintValue(R_GlobalContext->nextcontext->call)
assignClassDef(class2, classDef2, where2, TRUE)
(gdb) call Rf_PrintValue(R_GlobalContext->nextcontext->nextcontext->call)
setIs(class2, cli, extensionObject = obji, doComplete = FALSE, 
    where = where)
(gdb) call Rf_PrintValue(R_GlobalContext->nextcontext->nextcontext->nextcontext->call)
completeSubclasses(classDef2, class1, obj, where)
(gdb) call Rf_PrintValue(R_GlobalContext->nextcontext->nextcontext->nextcontext->nextcontext->call)
setIs(Class, class2, classDef = classDef, where = where)
(gdb) call Rf_PrintValue(R_GlobalContext->nextcontext->nextcontext->nextcontext->nextcontext->nextcontext->nextcontext->nextcontext->nextcontext->nextcontext->nextcontext->nextcontext->call)
setClass(Class = "Graph", contains = "dgCMatrix", slots = list(assay.used = "OptionalCharacter"))

In other words, setIs("Graph", "dgCMatrix", ...) implies setIs("Graph",
"CsparseMatrix", ...), which needs to update the definition of
CsparseMatrix in some environment. In the current version of
SeuratObject, methods:::.findOrCopyClass() succeeds in finding the
class to update in the _imports_ of SeuratObject because the relevant
classes are now imported [3]:

findClass('CsparseMatrix', loadNamespace('SeuratObject'))
# [[1]]
# <environment: 0x560676e863c8>
# attr(,"name")
# [1] "imports:SeuratObject"

In SeuratObject_4.1.3, the class was not imported, so
methods:::.findOrCopyClass() used the SeuratObject _namespace_ as the
environment to assign the class definition in.

Are there ways to prevent this problem (by importing more classes?) or
at least warn about it at package check time? How prevalent is class
copying on CRAN? Out of 358 packages installed on my machine, many no
doubt outdated, only six copy foreign S4 classes into their own
namespaces:

installed.packages() |> rownames() |> setNames(nm = _) |> lapply(\(n) {
 ns <- loadNamespace(n)
 ls(ns, pattern = '^[.]__C__', all.names = TRUE) |>
  setNames(nm = _) |> lapply(get, ns) |>
  vapply(attr, '', 'package') ->
   pkgs
 pkgs[pkgs != n]
}) |> Filter(length, x = _)
# $dplyr
#    .__C__tbl .__C__tbl_df
#     "tibble"     "tibble"
# 
# $MatrixModels
#     .__C__mMatrix .__C__replValueSp
#          "Matrix"          "Matrix"
# 
# $NMF
# .__C__AssayData
#       "Biobase"
# 
# $readr
#    .__C__tbl .__C__tbl_df
#     "tibble"     "tibble"
# 
# $vroom
#    .__C__tbl .__C__tbl_df
#     "tibble"     "tibble"
# 
# $shinystan
# .__C__stanfit 
#       "rstan" 

Would it be right to replace all those with importClassesFrom()? If
yes, should R CMD check eventually start warning about foreign copied
classes?

-- 
Best regards,
Ivan

[1]
https://stat.ethz.ch/pipermail/r-package-devel/2025q1/011376.html

[2]
https://stat.ethz.ch/pipermail/r-devel/2023-August/082769.html

[3]
https://github.com/satijalab/seurat-object/commit/faf86a7ccc06c5c62f9e858c5ef0f10f4d73da4d


From j@g@nmn2 @end|ng |rom gm@||@com  Sat Jan 18 16:14:13 2025
From: j@g@nmn2 @end|ng |rom gm@||@com (Mikael Jagan)
Date: Sat, 18 Jan 2025 10:14:13 -0500
Subject: [Rd] How setClass() may introduce a binary dependency between
 packages
In-Reply-To: <mailman.54647.7.1737198002.4651.r-devel@r-project.org>
References: <mailman.54647.7.1737198002.4651.r-devel@r-project.org>
Message-ID: <e752c21f-26e2-4860-ba15-55a76e3275c5@gmail.com>

See my proposal in this mailing list from July 2023 where I documented the
same problem:

      [Rd] proposal for WRE: clarify that use of S4 classes implies use of 
superclasses
      https://stat.ethz.ch/pipermail/r-devel/2023-July/082739.html

Indeed, many of the caching problems would be avoided if

     importClassesFrom(P, C)

implied

     importClassesFrom(P, C, <superclasses of C exported from P>)

or otherwise if R CMD check and/or WRE advised about the latter.

There is still the problem of non-exported superclasses, which cannot be
imported.  There has been some work in Matrix to deprecate and remove these.

IIRC after the fallout of that release (and not before, regrettably, ...), I
programmatically scanned the namespaces of the reverse dependencies of Matrix
for classRepresentation objects with package slot "Matrix", and sent those
maintainers an e-mail asking them to add more importClassesFrom(Matrix, ...).
SeuratObject was one of a few affected packages.

These days we run two rounds of reverse dependency testing, one with the user
library built entirely against the old Matrix and one with the user library
built entirely against the new Matrix.  The second catches breakage due to ABI
changes and stale cached S4 class definitions.

Mikael

> Date: Sat, 18 Jan 2025 13:10:10 +0300
> From: Ivan Krylov <ikrylov at disroot.org>
> To: r-devel at r-project.org
> Subject: [Rd] How setClass() may introduce a binary dependency between
> 	packages
> Message-ID: <20250118131010.035cf539 at Tarkus>
> Content-Type: text/plain; charset="utf-8"
> 
> Hello R-devel,
> 
> Since Pavel has mentioned ABI-level dependencies between packages [1],
> it may be relevant to revisit the related problem mentioned ~1.5 years
> ago by Dirk [2].
> 
> While the current version of SeuratObject doesn't exhibit this problem,
> a combination of package versions described by Dirk still breaks each
> other on R-devel:
> 
> 1. Install Matrix_1.5-1
> 2. Install SeuratObject_4.1.3 from source
> 3. Install Matrix_1.6-0
> 4. SeuratObject is now broken until reinstalled from source
> 
> The problem is actually slightly worse, because loading SeuratObject
> from step (2) breaks sparse matrices for everyone until Matrix is
> reloaded (and very few people can afford the $127-150 million budget for
> that):
> 
> library(Matrix); sparseMatrix(1,1)
> # 1 x 1 sparse Matrix of class "ngCMatrix"
> #
> # [1,] |
> suppressPackageStartupMessages(library(SeuratObject))
> sparseMatrix(1,1)
> # 1 x 1 sparse Matrix of class "ngCMatrix"
> # Error in validityMethod(as(object, superClass)) :
> #   object 'Csparse_validate' not found
> detach('package:SeuratObject', unload = TRUE); sparseMatrix(1,1)
> # 1 x 1 sparse Matrix of class "ngCMatrix"
> # Error in validityMethod(as(object, superClass)) :
> #   object 'Csparse_validate' not found
> detach('package:Matrix', unload = TRUE); library(Matrix)
> sparseMatrix(1,1)
> # 1 x 1 sparse Matrix of class "ngCMatrix"
> #
> # [1,] |
> 
> In turn, this can be traced to a copy of the CsparseMatrix class from
> Matrix_1.5-1 remaining in the namespace and the lazy-load database of
> SeuratObject:
> 
> readRDS('SeuratObject/R/SeuratObject.rdx')$variables |> names() |>
> grep('sparseM', x = _, value = TRUE)
> # [1] ".__C__CsparseMatrix" ".__C__dsparseMatrix" ".__C__sparseMatrix"
> SeuratObject:::.__C__CsparseMatrix at validity
> # function (object)
> # .Call(Csparse_validate, object) # <-- missing in Matrix_1.6-0
> # <bytecode: 0x55f1f6ff16a8>
> # <environment: namespace:Matrix>
> 
> When the SeuratObject namespace is loaded, methods::cacheMetaData sees
> the 1.5-1 class definition after the 1.6-0 definition and overwrites
> the cache entry.
> 
> Why do these objects appear in the namespace and not the imports
> environment together with the actually imported .__C__dgCMatrix?
> 
> (gdb) p Rf_install(".__C__CsparseMatrix")
> $1 = (struct SEXPREC *) 0x555557888c28
> (gdb) b Rf_defineVar if symbol == (SEXP)0x555557888c28
> Breakpoint 1 at 0x7ffff7b1bcd0: file envir.c, line 1624.
> 
> file.copy(
>   'SeuratObject-collated.R', 'SeuratObject/R/SeuratObject',
>   overwrite=TRUE
> )
> Sys.setenv('_R_TRACE_LOADNAMESPACE_'='5')
> tools:::makeLazyLoading('SeuratObject')
> 
> Eventually, after two hits during loading Matrix code and exports:
> 
> -- done processing imports for ?SeuratObject?
> -- loading code for ?SeuratObject?
> Thread 1 "R" hit Breakpoint 1, Rf_defineVar (symbol=0x555558753e18, value=0x55555d0602f8, rho=0x555558906630) at envir.c:1624
> 1624        if (value == R_UnboundValue)
> (gdb) call Rf_PrintValue(R_NamespaceEnvSpec(rho))
>            name        version
> "SeuratObject"        "4.1.3"
> (gdb) call Rf_PrintValue(symbol)
> .__C__CsparseMatrix
> (gdb) call Rf_PrintValue(R_GlobalContext->call)
> assign(mname, def, where)
> (gdb) call Rf_PrintValue(R_GlobalContext->nextcontext->call)
> assignClassDef(class2, classDef2, where2, TRUE)
> (gdb) call Rf_PrintValue(R_GlobalContext->nextcontext->nextcontext->call)
> setIs(class2, cli, extensionObject = obji, doComplete = FALSE,
>      where = where)
> (gdb) call Rf_PrintValue(R_GlobalContext->nextcontext->nextcontext->nextcontext->call)
> completeSubclasses(classDef2, class1, obj, where)
> (gdb) call Rf_PrintValue(R_GlobalContext->nextcontext->nextcontext->nextcontext->nextcontext->call)
> setIs(Class, class2, classDef = classDef, where = where)
> (gdb) call Rf_PrintValue(R_GlobalContext->nextcontext->nextcontext->nextcontext->nextcontext->nextcontext->nextcontext->nextcontext->nextcontext->nextcontext->nextcontext->nextcontext->call)
> setClass(Class = "Graph", contains = "dgCMatrix", slots = list(assay.used = "OptionalCharacter"))
> 
> In other words, setIs("Graph", "dgCMatrix", ...) implies setIs("Graph",
> "CsparseMatrix", ...), which needs to update the definition of
> CsparseMatrix in some environment. In the current version of
> SeuratObject, methods:::.findOrCopyClass() succeeds in finding the
> class to update in the _imports_ of SeuratObject because the relevant
> classes are now imported [3]:
> 
> findClass('CsparseMatrix', loadNamespace('SeuratObject'))
> # [[1]]
> # <environment: 0x560676e863c8>
> # attr(,"name")
> # [1] "imports:SeuratObject"
> 
> In SeuratObject_4.1.3, the class was not imported, so
> methods:::.findOrCopyClass() used the SeuratObject _namespace_ as the
> environment to assign the class definition in.
> 
> Are there ways to prevent this problem (by importing more classes?) or
> at least warn about it at package check time? How prevalent is class
> copying on CRAN? Out of 358 packages installed on my machine, many no
> doubt outdated, only six copy foreign S4 classes into their own
> namespaces:
> 
> installed.packages() |> rownames() |> setNames(nm = _) |> lapply(\(n) {
>   ns <- loadNamespace(n)
>   ls(ns, pattern = '^[.]__C__', all.names = TRUE) |>
>    setNames(nm = _) |> lapply(get, ns) |>
>    vapply(attr, '', 'package') ->
>     pkgs
>   pkgs[pkgs != n]
> }) |> Filter(length, x = _)
> # $dplyr
> #    .__C__tbl .__C__tbl_df
> #     "tibble"     "tibble"
> #
> # $MatrixModels
> #     .__C__mMatrix .__C__replValueSp
> #          "Matrix"          "Matrix"
> #
> # $NMF
> # .__C__AssayData
> #       "Biobase"
> #
> # $readr
> #    .__C__tbl .__C__tbl_df
> #     "tibble"     "tibble"
> #
> # $vroom
> #    .__C__tbl .__C__tbl_df
> #     "tibble"     "tibble"
> #
> # $shinystan
> # .__C__stanfit
> #       "rstan"
> 
> Would it be right to replace all those with importClassesFrom()? If
> yes, should R CMD check eventually start warning about foreign copied
> classes?
>


From Kurt@Horn|k @end|ng |rom wu@@c@@t  Sun Jan 19 16:24:15 2025
From: Kurt@Horn|k @end|ng |rom wu@@c@@t (Kurt Hornik)
Date: Sun, 19 Jan 2025 16:24:15 +0100
Subject: [Rd] UTF-8 encoding issue with R CMD check with
 install-args="--latex"
In-Reply-To: <528c8ff3-e125-4251-94e0-592824e44e15@web.de>
References: <8f65996d-9c62-41eb-ae9c-fe177ffb2c11@web.de>
 <20250116232116.4e843b88@Tarkus>
 <26506.3700.807381.353929@hornik.net>
 <528c8ff3-e125-4251-94e0-592824e44e15@web.de>
Message-ID: <26509.6431.514398.311377@hornik.net>

>>>>> Peter Ruckdeschel writes:

Should be fixed now in the trunk with c87598.

Best
-k

> Thanks Ivan and Kurt, for nailing this down, best regards, Peter
> Am 17.01.2025 um 09:01 schrieb Kurt Hornik:
>>>>>>> Ivan Krylov via R-devel writes:
>> Thanks.  Will try to fix ...
>> 
>> Best
>> -k
>> 
>>> ? Thu, 16 Jan 2025 18:09:25 +0100
>>> Peter Ruckdeschel via R-devel <r-devel at r-project.org> ?????:
>>>> this is to report some minor UTF-8 encoding issue with R CMD check
>>>> with option --install-args="--latex" (and possibly more install-args).
>>> Thank you for a very detailed report!
>>> This doesn't happen on R-4.2.2 or 4.3.1, but it does happen on R-devel.
>>> Comparing the calls from R CMD check to R CMD Rd2pdf, I see no
>>> difference in the environment variables or any significant difference
>>> in the command lines. The command being run ends up being equivalent to
>>> R CMD Rd2pdf <package>.Rcheck/<package>
>>> ...and the source of the difference is the presence (or absence) of the
>>> <package>.Rcheck/<package>/latex directory. If I temporarily move it
>>> away during an R CMD check --install-args=--latex run, the command
>>> succeeds.
>>> Indeed, tools:::.pkg2tex says
>>>>> ## First check for a latex dir (from R CMD INSTALL --latex).
>>>>> ## Second guess is this is a >= 2.10.0 package with stored .rds
>>>>> ## files.
>>>>> ## If it does not exist, guess this is a source package.
>>>>> latexdir <- file.path(pkgdir, "latex")
>>> The individual *.tex files in the latex/ subdirectory of the installed
>>> package all do start with an "\inputencoding{utf8}" line.
>>> When the latex/ subdirectory doesn't exist, the !dir.exists(latexdir)
>>> branch is taken, where Rd2latex(...) is called with writeEncoding =
>>> FALSE, thus avoiding the problem.
>>> --
>>> Best regards,
>>> Ivan
>>> ______________________________________________
>>> R-devel at r-project.org mailing list
>>> https://stat.ethz.ch/mailman/listinfo/r-devel


From Kurt@Horn|k @end|ng |rom wu@@c@@t  Sun Jan 19 17:38:36 2025
From: Kurt@Horn|k @end|ng |rom wu@@c@@t (Kurt Hornik)
Date: Sun, 19 Jan 2025 17:38:36 +0100
Subject: [Rd] Depends: R (>= 4.1) for packages that use |> and \(...)
In-Reply-To: <26506.26949.241762.7373@hornik.net>
References: <20250116144121.5520a9cc@arachnoid>
 <CAFDcVCTTVa+Ea+BoVoag0RJ7LK3P1tyPzBG9vP4U-4w6a4kKKQ@mail.gmail.com>
 <26506.26949.241762.7373@hornik.net>
Message-ID: <26509.10892.521351.954386@hornik.net>

>>>>> Kurt Hornik writes:

Oh dear.  Using a variant of Ivan's code, I seem to find 728 (!!!) CRAN
packages which are missing their R >= 4.1 dependency.

So clearly we need to do more about this than teach R CMD build to add
the dependency ...

Best
-k

>>>>> Henrik Bengtsson writes:
> Thanks.  Will take a look ...

> Best
> -k

>> Thanks for looking into this and the patch. FWIW, there's an open
>> PR18105 - "R CMD build: Add dependency on R >= 4.1.0 if code uses pipe
>> symbol |>" for this
>> (https://bugs.r-project.org/show_bug.cgi?id=18105).

>> /Henrik

>> On Thu, Jan 16, 2025 at 3:42?AM Ivan Krylov via R-devel
>> <r-devel at r-project.org> wrote:
>>> 
>>> Hello R-devel,
>>> 
>>> Approximately [*] the following CRAN packages make use of the pipe
>>> syntax in their source code or examples without depending on R >= 4.1:
>>> 
>>> [1] "biplotEZ"           "CaseBasedReasoning" "collinear"
>>> [4] "cubble"             "disk.frame"         "duckdbfs"
>>> [7] "eia"                "feltr"              "flattabler"
>>> [10] "geodimension"       "hgnc"               "himach"
>>> [13] "lay"                "lidR"               "locateip"
>>> [16] "particles"          "photosynthesis"     "pivotea"
>>> [19] "planr"              "rtrek"              "satres"
>>> [22] "sdtmval"            "selenider"          "sewage"
>>> [25] "stminsights"        "tabr"               "tidygraph"
>>> [28] "tidywikidatar"      "USgas"              "washi"
>>> [31] "zctaCrosswalk"
>>> 
>>> Since we have checks in place to automatically set Depends: R (>=
>>> 2.10.0) for data files compressed with xz or bzip2 and >= 3.5.0 for
>>> data files serialized with format version 3, would it make sense to
>>> automatically add Depends: R (>= 4.1) for such packages?
>>> 
>>> The patch at the end of this message adds the R version dependency
>>> during R CMD build:
>>> 
>>> R-devel CMD build --no-build-vignettes .
>>> * checking for file ?./DESCRIPTION? ... OK
>>> * preparing ?biplotEZ?:
>>> * checking DESCRIPTION meta-information ... OK
>>> * cleaning src
>>> * checking vignette meta-information ... OK
>>> * checking for LF line-endings in source and make files and shell
>>> scripts
>>> * checking for empty or unneeded directories
>>> NB: this package now depends on R (>= 4.1.0)
>>> WARNING: Added dependency on R >= 4.1.0 because some of the source
>>> files use the new syntax constructs.
>>> Files making use of R >= 4.1 pipe |> or function shorthand \(...):
>>> biplotEZ/R/biplot.R biplotEZ/R/translate_axes.R
>>> * building ?biplotEZ_2.2.tar.gz?
>>> 
>>> A more extensive test could also look at the tests, demos, and
>>> \examples{}, but that may take longer and open the door for false
>>> positives. A package that uses |> in one example would still be useful
>>> on R-4.0.0, while a package that uses |> in the source code would fail
>>> to parse and install.
>>> 
>>> Index: src/library/tools/R/QC.R
>>> ===================================================================
>>> --- src/library/tools/R/QC.R    (revision 87545)
>>> +++ src/library/tools/R/QC.R    (working copy)
>>> @@ -10367,7 +10367,29 @@
>>> }
>>> }
>>> 
>>> +.check_use_of_R41_syntax <-
>>> +function(files)
>>> +{
>>> +    out <- vapply(files,
>>> +           function(f) tryCatch(
>>> +               any(getParseData(parse(f, keep.source = TRUE))$token %in% c("PIPE", "'\\\\'")),
>>> +               error = function(e) FALSE
>>> +           ),
>>> +           FALSE)
>>> +    out <- files[out]
>>> +    class(out) <- "check_use_of_R41_syntax"
>>> +    out
>>> +}
>>> 
>>> +format.check_use_of_R41_syntax <-
>>> +function(x, ...)
>>> +{
>>> +    if (length(x)) {
>>> +        c("Files making use of R >= 4.1 pipe |> or function shorthand \\(...):",
>>> +          .strwrap22(x, " "))
>>> +    } else character()
>>> +}
>>> +
>>> ### Local variables: ***
>>> ### mode: outline-minor ***
>>> ### outline-regexp: "### [*]+" ***
>>> Index: src/library/tools/R/build.R
>>> ===================================================================
>>> --- src/library/tools/R/build.R (revision 87545)
>>> +++ src/library/tools/R/build.R (working copy)
>>> @@ -1165,9 +1165,11 @@
>>> desc <- .read_description(file.path(pkgname, "DESCRIPTION"))
>>> Rdeps <- .split_description(desc)$Rdepends2
>>> hasDep350 <- FALSE
>>> +        hasDep410 <- FALSE
>>> for(dep in Rdeps) {
>>> if(dep$op != '>=') next
>>> if(dep$version >= "3.5.0") hasDep350 <- TRUE
>>> +            if(dep$version >= "4.1.0") hasDep410 <- TRUE
>>> }
>>> if (!hasDep350) {
>>> ## re-read files after exclusions have been applied
>>> @@ -1189,6 +1191,23 @@
>>> "\n")
>>> }
>>> }
>>> +        if (!hasDep410) {
>>> +            uses410 <- .check_use_of_R41_syntax(dir(file.path(pkgname, "R"),
>>> +                                                    full.names = TRUE,
>>> +                                                    pattern = "[.]R$",
>>> +                                                    ignore.case = TRUE))
>>> +            if (length(uses410)) {
>>> +                fixup_R_dep(pkgname, "4.1.0")
>>> +                msg <- paste("WARNING: Added dependency on R >= 4.1.0 because",
>>> +                             "some of the source files use the new syntax",
>>> +                             "constructs.")
>>> +                printLog(Log,
>>> +                         paste(c(strwrap(msg, indent = 2L, exdent = 2L),
>>> +                                 format(uses410)),
>>> +                               collapse = "\n"),
>>> +                               "\n")
>>> +            }
>>> +        }
>>> 
>>> ## add NAMESPACE if the author didn't write one
>>> if(!file.exists(namespace <- file.path(pkgname, "NAMESPACE")) ) {
>>> 
>>> 
>>> --
>>> Best regards,
>>> Ivan
>>> 
>>> [*] Based on the following GitHub search, which requires logging in:
>>> https://github.com/search?q=org%3Acran%20path%3A%2F%5B.%5D%5BRr%5Dd%3F%24%2F%20%2F%5Cs%5C%7C%3E%2F&type=code
>>> There's currently no REST API support for regexp search, so the list
>>> was obtained manually.
>>> 
>>> ______________________________________________
>>> R-devel at r-project.org mailing list
>>> https://stat.ethz.ch/mailman/listinfo/r-devel

>> ______________________________________________
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel

> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From berw|n@tur|@ch @end|ng |rom gm@||@com  Tue Jan 21 06:23:17 2025
From: berw|n@tur|@ch @end|ng |rom gm@||@com (Berwin A Turlach)
Date: Tue, 21 Jan 2025 13:23:17 +0800
Subject: [Rd] Development version of R fails a regression test
Message-ID: <20250121132317.41bd2860@dep59159.uniwa.uwa.edu.au>

G'day all,

I have daily scripts running to install the patched version of the
current R version and the development version of R on my linux box
(Ubuntu 24.04.1 LTS).

The last development version that was successfully compiled and
installed on my machine is "R Under development (unstable) (2024-12-31
r87500)". Since then the script always fails on one of the regression
tests; details are in the attached file R-CheckLog.txt.

I also include a file (R-Script.txt) which shows why this test fails on
my machine using the last R development version that did install on
my machine.  It seems the command 'si$LAPACK <- ""' introduces an extra
line in the output of 'capture.output(si)' which then leads to an error
message in 'which(osi != osi.noLA)'.  

Sorry, but I do not have any good idea/suggestion how this issue could
be fixed.

Cheers,
	
	Berwin



-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: R-CheckLog.txt
URL: <https://stat.ethz.ch/pipermail/r-devel/attachments/20250121/e937617a/attachment.txt>

-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: R-Script.txt
URL: <https://stat.ethz.ch/pipermail/r-devel/attachments/20250121/e937617a/attachment-0001.txt>

From hugh@p@r@on@ge @end|ng |rom gm@||@com  Tue Jan 21 06:51:34 2025
From: hugh@p@r@on@ge @end|ng |rom gm@||@com (Hugh Parsonage)
Date: Tue, 21 Jan 2025 16:51:34 +1100
Subject: [Rd] Creating a long list triggers billions of messages
Message-ID: <CAJmOi+MF3fq05ZfUco3ccWNBe=W6kg2vkss7njkLZ_wQeo8bTQ@mail.gmail.com>

Reprex (not recommended in an interactive session as it is difficult to kill):
x <- vector("list", 2^31)

which triggers (presumably) billions of error messages like
Error: long vectors are not supported yet ../include/Rinlinedfuns.h

I believe the error arises from checking each element of the list (all
2^31 of them) and issuing an error message for each of them regarding
the length of the overall list.


From |kry|ov @end|ng |rom d|@root@org  Tue Jan 21 12:56:15 2025
From: |kry|ov @end|ng |rom d|@root@org (Ivan Krylov)
Date: Tue, 21 Jan 2025 14:56:15 +0300
Subject: [Rd] Creating a long list triggers billions of messages
In-Reply-To: <CAJmOi+MF3fq05ZfUco3ccWNBe=W6kg2vkss7njkLZ_wQeo8bTQ@mail.gmail.com>
References: <CAJmOi+MF3fq05ZfUco3ccWNBe=W6kg2vkss7njkLZ_wQeo8bTQ@mail.gmail.com>
Message-ID: <20250121145615.217146e3@arachnoid>

? Tue, 21 Jan 2025 16:51:34 +1100
Hugh Parsonage <hugh.parsonage at gmail.com> ?????:

> x <- vector("list", 2^31)
> 
> which triggers (presumably) billions of error messages like
> Error: long vectors are not supported yet ../include/Rinlinedfuns.h

I couldn't reproduce this with some released versions of R or a recent
R-devel. Would you mind sharing your sessionInfo()?

If you'd like to, could you please run

R -q -s -e 'x <- vector("list", 2^31)' -d gdb

...then set a breakpoint on Rf_errorcall, run the program and collect a
backtrace when it fires?

-- 
Best regards,
Ivan


From hugh@p@r@on@ge @end|ng |rom gm@||@com  Tue Jan 21 13:06:58 2025
From: hugh@p@r@on@ge @end|ng |rom gm@||@com (Hugh Parsonage)
Date: Tue, 21 Jan 2025 23:06:58 +1100
Subject: [Rd] Creating a long list triggers billions of messages
In-Reply-To: <20250121145615.217146e3@arachnoid>
References: <CAJmOi+MF3fq05ZfUco3ccWNBe=W6kg2vkss7njkLZ_wQeo8bTQ@mail.gmail.com>
 <20250121145615.217146e3@arachnoid>
Message-ID: <CAJmOi+Pa6f3kwgh=8koZLvyDa=eiFj5Cqey41XBzBb8us4wfaw@mail.gmail.com>

I tried doing this on a cloud instance of R 4.4.2 but the terminal
exited and the cloud ejected my session shortly after setting the
breakpoint and running the program

Function "Rf_errorcall" not defined.
Make breakpoint pending on future shared library load? (y or [n]) y
Breakpoint 2 (Rf_errorcall) pending.
(gdb) run
Starting program: /opt/R/4.4.2/lib/R/bin/exec/R -q -s -e
x\~+\~\<-\~+\~vector\(\"list\",\~+\~2\^31\)
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/usr/lib/x86_64-linux-gnu/libthread_db.so.1".
[New Thread 0x7ffff3a6a700 (LWP 454)]
[New Thread 0x7ffff3269700 (LWP 455)]
[New Thread 0x7fffeea68700 (LWP 456)]
[New Thread 0x7fffec267700 (LWP 457)]
[New Thread 0x7fffe9a66700 (LWP 458)]
[New Thread 0x7fffe7265700 (LWP 459)]
[New Thread 0x7fffe4a64700 (LWP 460)]
[New Thread 0x7fffe2263700 (LWP 461)]
[New Thread 0x7fffdfa62700 (LWP 462)]
[New Thread 0x7fffdd261700 (LWP 463)]
[New Thread 0x7fffdaa60700 (LWP 464)]
[New Thread 0x7fffd825f700 (LWP 465)]
[New Thread 0x7fffd5a5e700 (LWP 466)]
[New Thread 0x7fffd525d700 (LWP 467)]
[New Thread 0x7fffd2a5c700 (LWP 468)]
[Detaching after vfork from child process 469]
[Detaching after vfork from child process 471]

Session info:

R version 4.4.2 (2024-10-31)
Platform: x86_64-pc-linux-gnu
Running under: Ubuntu 20.04.6 LTS

Matrix products: default
BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3
LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/liblapack.so.3;
LAPACK version 3.9.0

locale:
 [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8
   LC_COLLATE=C.UTF-8
 [5] LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    LC_PAPER=C.UTF-8
   LC_NAME=C
 [9] LC_ADDRESS=C           LC_TELEPHONE=C
LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C

time zone: UTC
tzcode source: system (glibc)

attached base packages:
[1] stats     graphics  grDevices utils     datasets  methods   base

loaded via a namespace (and not attached):
[1] compiler_4.4.2 tools_4.4.2

On Tue, 21 Jan 2025 at 22:56, Ivan Krylov <ikrylov at disroot.org> wrote:
>
> ? Tue, 21 Jan 2025 16:51:34 +1100
> Hugh Parsonage <hugh.parsonage at gmail.com> ?????:
>
> > x <- vector("list", 2^31)
> >
> > which triggers (presumably) billions of error messages like
> > Error: long vectors are not supported yet ../include/Rinlinedfuns.h
>
> I couldn't reproduce this with some released versions of R or a recent
> R-devel. Would you mind sharing your sessionInfo()?
>
> If you'd like to, could you please run
>
> R -q -s -e 'x <- vector("list", 2^31)' -d gdb
>
> ...then set a breakpoint on Rf_errorcall, run the program and collect a
> backtrace when it fires?
>
> --
> Best regards,
> Ivan


From hugh@p@r@on@ge @end|ng |rom gm@||@com  Tue Jan 21 13:24:07 2025
From: hugh@p@r@on@ge @end|ng |rom gm@||@com (Hugh Parsonage)
Date: Tue, 21 Jan 2025 23:24:07 +1100
Subject: [Rd] Creating a long list triggers billions of messages
In-Reply-To: <CAJmOi+Pa6f3kwgh=8koZLvyDa=eiFj5Cqey41XBzBb8us4wfaw@mail.gmail.com>
References: <CAJmOi+MF3fq05ZfUco3ccWNBe=W6kg2vkss7njkLZ_wQeo8bTQ@mail.gmail.com>
 <20250121145615.217146e3@arachnoid>
 <CAJmOi+Pa6f3kwgh=8koZLvyDa=eiFj5Cqey41XBzBb8us4wfaw@mail.gmail.com>
Message-ID: <CAJmOi+N0Zz4xBxxFbq_GQtNyMNoj7Q42brHDHa2tg6FGMFRN=g@mail.gmail.com>

Apologies all. This must have been fixed in a recent version and the
cloud error was a resource limit not associated with the issue.

On Tue, 21 Jan 2025 at 23:06, Hugh Parsonage <hugh.parsonage at gmail.com> wrote:
>
> I tried doing this on a cloud instance of R 4.4.2 but the terminal
> exited and the cloud ejected my session shortly after setting the
> breakpoint and running the program
>
> Function "Rf_errorcall" not defined.
> Make breakpoint pending on future shared library load? (y or [n]) y
> Breakpoint 2 (Rf_errorcall) pending.
> (gdb) run
> Starting program: /opt/R/4.4.2/lib/R/bin/exec/R -q -s -e
> x\~+\~\<-\~+\~vector\(\"list\",\~+\~2\^31\)
> [Thread debugging using libthread_db enabled]
> Using host libthread_db library "/usr/lib/x86_64-linux-gnu/libthread_db.so.1".
> [New Thread 0x7ffff3a6a700 (LWP 454)]
> [New Thread 0x7ffff3269700 (LWP 455)]
> [New Thread 0x7fffeea68700 (LWP 456)]
> [New Thread 0x7fffec267700 (LWP 457)]
> [New Thread 0x7fffe9a66700 (LWP 458)]
> [New Thread 0x7fffe7265700 (LWP 459)]
> [New Thread 0x7fffe4a64700 (LWP 460)]
> [New Thread 0x7fffe2263700 (LWP 461)]
> [New Thread 0x7fffdfa62700 (LWP 462)]
> [New Thread 0x7fffdd261700 (LWP 463)]
> [New Thread 0x7fffdaa60700 (LWP 464)]
> [New Thread 0x7fffd825f700 (LWP 465)]
> [New Thread 0x7fffd5a5e700 (LWP 466)]
> [New Thread 0x7fffd525d700 (LWP 467)]
> [New Thread 0x7fffd2a5c700 (LWP 468)]
> [Detaching after vfork from child process 469]
> [Detaching after vfork from child process 471]
>
> Session info:
>
> R version 4.4.2 (2024-10-31)
> Platform: x86_64-pc-linux-gnu
> Running under: Ubuntu 20.04.6 LTS
>
> Matrix products: default
> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3
> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/liblapack.so.3;
> LAPACK version 3.9.0
>
> locale:
>  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8
>    LC_COLLATE=C.UTF-8
>  [5] LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    LC_PAPER=C.UTF-8
>    LC_NAME=C
>  [9] LC_ADDRESS=C           LC_TELEPHONE=C
> LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C
>
> time zone: UTC
> tzcode source: system (glibc)
>
> attached base packages:
> [1] stats     graphics  grDevices utils     datasets  methods   base
>
> loaded via a namespace (and not attached):
> [1] compiler_4.4.2 tools_4.4.2
>
> On Tue, 21 Jan 2025 at 22:56, Ivan Krylov <ikrylov at disroot.org> wrote:
> >
> > ? Tue, 21 Jan 2025 16:51:34 +1100
> > Hugh Parsonage <hugh.parsonage at gmail.com> ?????:
> >
> > > x <- vector("list", 2^31)
> > >
> > > which triggers (presumably) billions of error messages like
> > > Error: long vectors are not supported yet ../include/Rinlinedfuns.h
> >
> > I couldn't reproduce this with some released versions of R or a recent
> > R-devel. Would you mind sharing your sessionInfo()?
> >
> > If you'd like to, could you please run
> >
> > R -q -s -e 'x <- vector("list", 2^31)' -d gdb
> >
> > ...then set a breakpoint on Rf_errorcall, run the program and collect a
> > backtrace when it fires?
> >
> > --
> > Best regards,
> > Ivan


From m@ech|er @end|ng |rom @t@t@m@th@ethz@ch  Tue Jan 21 14:45:03 2025
From: m@ech|er @end|ng |rom @t@t@m@th@ethz@ch (Martin Maechler)
Date: Tue, 21 Jan 2025 14:45:03 +0100
Subject: [Rd] Development version of R fails a regression test
In-Reply-To: <20250121132317.41bd2860@dep59159.uniwa.uwa.edu.au>
References: <20250121132317.41bd2860@dep59159.uniwa.uwa.edu.au>
Message-ID: <26511.42207.205872.617287@stat.math.ethz.ch>

>>>>> Berwin A Turlach 
>>>>>     on Tue, 21 Jan 2025 13:23:17 +0800 writes:

    > G'day all, I have daily scripts running to install the
    > patched version of the current R version and the
    > development version of R on my linux box (Ubuntu 24.04.1
    > LTS).

    > The last development version that was successfully
    > compiled and installed on my machine is "R Under
    > development (unstable) (2024-12-31 r87500)". Since then
    > the script always fails on one of the regression tests;
    > details are in the attached file R-CheckLog.txt.

    > I also include a file (R-Script.txt) which shows why this
    > test fails on my machine using the last R development
    > version that did install on my machine.  It seems the
    > command 'si$LAPACK <- ""' introduces an extra line in the
    > output of 'capture.output(si)' which then leads to an
    > error message in 'which(osi != osi.noLA)'.

    > Sorry, but I do not have any good idea/suggestion how this
    > issue could be fixed.

    > Cheers,
    > 	Berwin

Thank you very much, Berwin,
for the report!

This is a regression/functionality/consistency test I added with
the new smarter printing of the Lapack library version  in
R-devel with svn revisions
- 87492 (sessionInfo() code);
- 87506 for the test (to work on Windows and elsewhere).

and it looks like the test/check is really *not* working on your platform.
To debug and notably fix the issue, I'd be glad if you could
send me the console output on that platform  of

    dput( extSoftVersion()[["BLAS"]] )
    dput( La_library() )
    dput( La_version() )


I definitely will get back to this, within a few days,
but not yet today.

Martin


From tum@ @end|ng |rom z|b@de  Tue Jan 21 14:42:14 2025
From: tum@ @end|ng |rom z|b@de (Christian Tuma)
Date: Tue, 21 Jan 2025 14:42:14 +0100
Subject: [Rd] R test suite LAPACK error with AOCL
Message-ID: <8ab39ba1-cb51-44cd-86ac-7f8e1ec582d3@zib.de>

Hello,

We are running an AMD-Genoa compute cluster. For this system I compiled 
R-4.4.2 configured and linked against AMD Optimizing CPU Libraries 
(AOCL) downloaded from

https://www.amd.com/en/developer/aocl.html

When running the R test suite (make check), I get this error:

$ cat tests/lapack.Rout.fail
...
 > ##  -------  tests of non-finite values  -----------------
 >
 > a <- matrix(NaN, 3, 3,, list(one=1:3, two=letters[1:3]))
 > b <- cbind(1:3, NA)
 > dimnames(b) <- list(One=4:6, Two=11:12)
 > bb <- 1:3; names(bb) <- 11:12
 > ## gave error with LAPACK 3.11.0
 > ## names(dimnames(.)), ("two", "Two") are lost {FIXME?}:
 > ## IGNORE_RDIFF_BEGIN
 > stopifnot(is.na(print(solve(a, b )))) # is.na(): NA *or* NaN
Error in solve.default(a, b) :
   Lapack routine dgesv: system is exactly singular: U[1,1] = 0
Calls: stopifnot -> print -> solve -> solve.default
Execution halted

Now I wonder whether AOCL are supported by R or not. Did somebody 
already use this combination successfully? Is this test suite error a 
serious problem? Is a workaround available?

This is my R installation configuration line:

$ CC=gcc CFLAGS="-O3 -march=znver4" \
  CXX=g++ CXXFLAGS="-O3 -march=znver4" \
  FC=gfortran FCFLAGS="-O3 -march=znver4" \
  LDFLAGS="-Wl,-rpath=$GCC_PATH/lib64" \
  ../configure \
  --with-blas="-L/usr/lib64 -Wl,-rpath=$AOCL_ROOT/lib_LP64 
-L$AOCL_ROOT/lib_LP64 -lblis -lflame" \
  --with-lapack \
  --enable-year2038

I am using the GCC (13.3.0).

 > sessionInfo()
R version 4.4.2 (2024-10-31)
Platform: x86_64-pc-linux-gnu
Running under: Rocky Linux 9.4 (Blue Onyx)

Matrix products: default
BLAS:   /sw/numerics/aocl/5.0.0/gcc/lib_LP64/libblis.so.5.0.0
LAPACK: /sw/numerics/aocl/5.0.0/gcc/lib_LP64/libflame.so;  LAPACK 
version 3.11.0
...


With Intel MKL instead of AOCL the test suite passes without errors. But 
this is an AMD system, so here I tend to prefer AOCL over MKL.

Any ideas? Thank you.


Best wishes,
Christian


From g|orkutz@ @end|ng |rom gm@||@com  Tue Jan 21 18:23:54 2025
From: g|orkutz@ @end|ng |rom gm@||@com (Greg Forkutza)
Date: Tue, 21 Jan 2025 12:23:54 -0500
Subject: [Rd] Will the R Project be a Mentoring Organization for GSOC 2025?
Message-ID: <CAPnUujJqmundnu8-SMXmBDFraP3TLSqXk5+tD7-T3kin6vrHTA@mail.gmail.com>

Hi there,

I just wanted to confirm if this will be true this year.

Best,

Greg Forkutza

	[[alternative HTML version deleted]]


From @|mon@urb@nek @end|ng |rom R-project@org  Wed Jan 22 01:18:59 2025
From: @|mon@urb@nek @end|ng |rom R-project@org (Simon Urbanek)
Date: Wed, 22 Jan 2025 13:18:59 +1300
Subject: [Rd] 
 Will the R Project be a Mentoring Organization for GSOC 2025?
In-Reply-To: <CAPnUujJqmundnu8-SMXmBDFraP3TLSqXk5+tD7-T3kin6vrHTA@mail.gmail.com>
References: <CAPnUujJqmundnu8-SMXmBDFraP3TLSqXk5+tD7-T3kin6vrHTA@mail.gmail.com>
Message-ID: <6306A23D-DD2D-45DB-8F58-10FAF6E40971@R-project.org>

Please see the GSoC schedule - for 2025 the organisation applications won't close until February 12 so we may not know the answer until possibly sometime in March (that's assuming there are proposed projects).

Cheers,
Simon


> On Jan 22, 2025, at 6:23 AM, Greg Forkutza <gforkutza at gmail.com> wrote:
> 
> Hi there,
> 
> I just wanted to confirm if this will be true this year.
> 
> Best,
> 
> Greg Forkutza
> 
> 	[[alternative HTML version deleted]]
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
> 


From tdhock5 @end|ng |rom gm@||@com  Wed Jan 22 06:42:03 2025
From: tdhock5 @end|ng |rom gm@||@com (Toby Hocking)
Date: Wed, 22 Jan 2025 06:42:03 +0100
Subject: [Rd] 
 Will the R Project be a Mentoring Organization for GSOC 2025?
In-Reply-To: <6306A23D-DD2D-45DB-8F58-10FAF6E40971@R-project.org>
References: <CAPnUujJqmundnu8-SMXmBDFraP3TLSqXk5+tD7-T3kin6vrHTA@mail.gmail.com>
 <6306A23D-DD2D-45DB-8F58-10FAF6E40971@R-project.org>
Message-ID: <CALK03d322aRqh345UcnTCjTc=Kk2_znPAXTF0ATGAk1naZW-XQ@mail.gmail.com>

Hi Greg thanks for your interest!
I plan to submit an application next week, on behalf of R project.
Our wiki with a timeline is
https://github.com/rstats-gsoc/gsoc2025/wiki#status-and-timeline
If you would like to mentor, please add your project idea to
https://github.com/rstats-gsoc/gsoc2025/wiki/table%20of%20proposed%20coding%20projects
and instead of using R-devel, the more appropriate list for
GSOC-related info is
https://groups.google.com/forum/?pli=1#!forum/gsoc-r
Thanks!
Toby

On Wed, Jan 22, 2025 at 1:19?AM Simon Urbanek
<simon.urbanek at r-project.org> wrote:
>
> Please see the GSoC schedule - for 2025 the organisation applications won't close until February 12 so we may not know the answer until possibly sometime in March (that's assuming there are proposed projects).
>
> Cheers,
> Simon
>
>
> > On Jan 22, 2025, at 6:23 AM, Greg Forkutza <gforkutza at gmail.com> wrote:
> >
> > Hi there,
> >
> > I just wanted to confirm if this will be true this year.
> >
> > Best,
> >
> > Greg Forkutza
> >
> >       [[alternative HTML version deleted]]
> >
> > ______________________________________________
> > R-devel at r-project.org mailing list
> > https://stat.ethz.ch/mailman/listinfo/r-devel
> >
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From Kurt@Horn|k @end|ng |rom wu@@c@@t  Wed Jan 22 07:46:56 2025
From: Kurt@Horn|k @end|ng |rom wu@@c@@t (Kurt Hornik)
Date: Wed, 22 Jan 2025 07:46:56 +0100
Subject: [Rd] Depends: R (>= 4.1) for packages that use |> and \(...)
In-Reply-To: <26509.10892.521351.954386@hornik.net>
References: <20250116144121.5520a9cc@arachnoid>
 <CAFDcVCTTVa+Ea+BoVoag0RJ7LK3P1tyPzBG9vP4U-4w6a4kKKQ@mail.gmail.com>
 <26506.26949.241762.7373@hornik.net>
 <26509.10892.521351.954386@hornik.net>
Message-ID: <26512.37984.542732.125792@hornik.net>

>>>>> Kurt Hornik writes:

I just committed c8761[2-4] to the trunk which adds an internal utility
for finding package code using the pipe or function shorthand, teaches R
CMD build to add a dependency on R >= 4.1.0 as necessary, and teaches R
CMD check to NOTE a missing dependency on R >= 4.1.0, based on Ivan's
code. 

Currently, we seem to have about 1149 packages on CRAN with package code
using the pipe or function shorthand, with only 415 depending on R >=
4.1.0, and 734 not.  Argh.

Thanks again for spotting this.

Best
-k

>>>>> Kurt Hornik writes:
> Oh dear.  Using a variant of Ivan's code, I seem to find 728 (!!!) CRAN
> packages which are missing their R >= 4.1 dependency.

> So clearly we need to do more about this than teach R CMD build to add
> the dependency ...

> Best
> -k

>>>>> Henrik Bengtsson writes:
>> Thanks.  Will take a look ...

>> Best
>> -k

>>> Thanks for looking into this and the patch. FWIW, there's an open
>>> PR18105 - "R CMD build: Add dependency on R >= 4.1.0 if code uses pipe
>>> symbol |>" for this
>>> (https://bugs.r-project.org/show_bug.cgi?id=18105).

>>> /Henrik

>>> On Thu, Jan 16, 2025 at 3:42?AM Ivan Krylov via R-devel
>>> <r-devel at r-project.org> wrote:
>>>> 
>>>> Hello R-devel,
>>>> 
>>>> Approximately [*] the following CRAN packages make use of the pipe
>>>> syntax in their source code or examples without depending on R >= 4.1:
>>>> 
>>>> [1] "biplotEZ"           "CaseBasedReasoning" "collinear"
>>>> [4] "cubble"             "disk.frame"         "duckdbfs"
>>>> [7] "eia"                "feltr"              "flattabler"
>>>> [10] "geodimension"       "hgnc"               "himach"
>>>> [13] "lay"                "lidR"               "locateip"
>>>> [16] "particles"          "photosynthesis"     "pivotea"
>>>> [19] "planr"              "rtrek"              "satres"
>>>> [22] "sdtmval"            "selenider"          "sewage"
>>>> [25] "stminsights"        "tabr"               "tidygraph"
>>>> [28] "tidywikidatar"      "USgas"              "washi"
>>>> [31] "zctaCrosswalk"
>>>> 
>>>> Since we have checks in place to automatically set Depends: R (>=
>>>> 2.10.0) for data files compressed with xz or bzip2 and >= 3.5.0 for
>>>> data files serialized with format version 3, would it make sense to
>>>> automatically add Depends: R (>= 4.1) for such packages?
>>>> 
>>>> The patch at the end of this message adds the R version dependency
>>>> during R CMD build:
>>>> 
>>>> R-devel CMD build --no-build-vignettes .
>>>> * checking for file ?./DESCRIPTION? ... OK
>>>> * preparing ?biplotEZ?:
>>>> * checking DESCRIPTION meta-information ... OK
>>>> * cleaning src
>>>> * checking vignette meta-information ... OK
>>>> * checking for LF line-endings in source and make files and shell
>>>> scripts
>>>> * checking for empty or unneeded directories
>>>> NB: this package now depends on R (>= 4.1.0)
>>>> WARNING: Added dependency on R >= 4.1.0 because some of the source
>>>> files use the new syntax constructs.
>>>> Files making use of R >= 4.1 pipe |> or function shorthand \(...):
>>>> biplotEZ/R/biplot.R biplotEZ/R/translate_axes.R
>>>> * building ?biplotEZ_2.2.tar.gz?
>>>> 
>>>> A more extensive test could also look at the tests, demos, and
>>>> \examples{}, but that may take longer and open the door for false
>>>> positives. A package that uses |> in one example would still be useful
>>>> on R-4.0.0, while a package that uses |> in the source code would fail
>>>> to parse and install.
>>>> 
>>>> Index: src/library/tools/R/QC.R
>>>> ===================================================================
>>>> --- src/library/tools/R/QC.R    (revision 87545)
>>>> +++ src/library/tools/R/QC.R    (working copy)
>>>> @@ -10367,7 +10367,29 @@
>>>> }
>>>> }
>>>> 
>>>> +.check_use_of_R41_syntax <-
>>>> +function(files)
>>>> +{
>>>> +    out <- vapply(files,
>>>> +           function(f) tryCatch(
>>>> +               any(getParseData(parse(f, keep.source = TRUE))$token %in% c("PIPE", "'\\\\'")),
>>>> +               error = function(e) FALSE
>>>> +           ),
>>>> +           FALSE)
>>>> +    out <- files[out]
>>>> +    class(out) <- "check_use_of_R41_syntax"
>>>> +    out
>>>> +}
>>>> 
>>>> +format.check_use_of_R41_syntax <-
>>>> +function(x, ...)
>>>> +{
>>>> +    if (length(x)) {
>>>> +        c("Files making use of R >= 4.1 pipe |> or function shorthand \\(...):",
>>>> +          .strwrap22(x, " "))
>>>> +    } else character()
>>>> +}
>>>> +
>>>> ### Local variables: ***
>>>> ### mode: outline-minor ***
>>>> ### outline-regexp: "### [*]+" ***
>>>> Index: src/library/tools/R/build.R
>>>> ===================================================================
>>>> --- src/library/tools/R/build.R (revision 87545)
>>>> +++ src/library/tools/R/build.R (working copy)
>>>> @@ -1165,9 +1165,11 @@
>>>> desc <- .read_description(file.path(pkgname, "DESCRIPTION"))
>>>> Rdeps <- .split_description(desc)$Rdepends2
>>>> hasDep350 <- FALSE
>>>> +        hasDep410 <- FALSE
>>>> for(dep in Rdeps) {
>>>> if(dep$op != '>=') next
>>>> if(dep$version >= "3.5.0") hasDep350 <- TRUE
>>>> +            if(dep$version >= "4.1.0") hasDep410 <- TRUE
>>>> }
>>>> if (!hasDep350) {
>>>> ## re-read files after exclusions have been applied
>>>> @@ -1189,6 +1191,23 @@
>>>> "\n")
>>>> }
>>>> }
>>>> +        if (!hasDep410) {
>>>> +            uses410 <- .check_use_of_R41_syntax(dir(file.path(pkgname, "R"),
>>>> +                                                    full.names = TRUE,
>>>> +                                                    pattern = "[.]R$",
>>>> +                                                    ignore.case = TRUE))
>>>> +            if (length(uses410)) {
>>>> +                fixup_R_dep(pkgname, "4.1.0")
>>>> +                msg <- paste("WARNING: Added dependency on R >= 4.1.0 because",
>>>> +                             "some of the source files use the new syntax",
>>>> +                             "constructs.")
>>>> +                printLog(Log,
>>>> +                         paste(c(strwrap(msg, indent = 2L, exdent = 2L),
>>>> +                                 format(uses410)),
>>>> +                               collapse = "\n"),
>>>> +                               "\n")
>>>> +            }
>>>> +        }
>>>> 
>>>> ## add NAMESPACE if the author didn't write one
>>>> if(!file.exists(namespace <- file.path(pkgname, "NAMESPACE")) ) {
>>>> 
>>>> 
>>>> --
>>>> Best regards,
>>>> Ivan
>>>> 
>>>> [*] Based on the following GitHub search, which requires logging in:
>>>> https://github.com/search?q=org%3Acran%20path%3A%2F%5B.%5D%5BRr%5Dd%3F%24%2F%20%2F%5Cs%5C%7C%3E%2F&type=code
>>>> There's currently no REST API support for regexp search, so the list
>>>> was obtained manually.
>>>> 
>>>> ______________________________________________
>>>> R-devel at r-project.org mailing list
>>>> https://stat.ethz.ch/mailman/listinfo/r-devel

>>> ______________________________________________
>>> R-devel at r-project.org mailing list
>>> https://stat.ethz.ch/mailman/listinfo/r-devel

>> ______________________________________________
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel


From pd@|gd @end|ng |rom gm@||@com  Wed Jan 22 10:17:08 2025
From: pd@|gd @end|ng |rom gm@||@com (peter dalgaard)
Date: Wed, 22 Jan 2025 10:17:08 +0100
Subject: [Rd] R test suite LAPACK error with AOCL
In-Reply-To: <8ab39ba1-cb51-44cd-86ac-7f8e1ec582d3@zib.de>
References: <8ab39ba1-cb51-44cd-86ac-7f8e1ec582d3@zib.de>
Message-ID: <3A51639D-5201-4F74-982E-0D371BF323B2@gmail.com>

Optimized numeric libraries are prone to getting slightly different results, which can trip up the checks. Howver, this case seems to be one of not passing NaN values properly:

What should happen is this

> a <- matrix(NaN, 3, 3,, list(one=1:3, two=letters[1:3]))
> b <- cbind(1:3, NA)
> solve(a,b)
  [,1] [,2]
a  NaN   NA
b  NaN   NA
c  NaN   NA
> a
   two
one   a   b   c
  1 NaN NaN NaN
  2 NaN NaN NaN
  3 NaN NaN NaN
>

but somewhere along the way, the computations are creating a 0 out of the NaN in the coefficient matrix. This look like dangerous behaviour that R cannot support.

-pd

> On 21 Jan 2025, at 14:42 , Christian Tuma <tuma at zib.de> wrote:
> 
> Hello,
> 
> We are running an AMD-Genoa compute cluster. For this system I compiled R-4.4.2 configured and linked against AMD Optimizing CPU Libraries (AOCL) downloaded from
> 
> https://www.amd.com/en/developer/aocl.html
> 
> When running the R test suite (make check), I get this error:
> 
> $ cat tests/lapack.Rout.fail
> ...
> > ##  -------  tests of non-finite values  -----------------
> >
> > a <- matrix(NaN, 3, 3,, list(one=1:3, two=letters[1:3]))
> > b <- cbind(1:3, NA)
> > dimnames(b) <- list(One=4:6, Two=11:12)
> > bb <- 1:3; names(bb) <- 11:12
> > ## gave error with LAPACK 3.11.0
> > ## names(dimnames(.)), ("two", "Two") are lost {FIXME?}:
> > ## IGNORE_RDIFF_BEGIN
> > stopifnot(is.na(print(solve(a, b )))) # is.na(): NA *or* NaN
> Error in solve.default(a, b) :
>  Lapack routine dgesv: system is exactly singular: U[1,1] = 0
> Calls: stopifnot -> print -> solve -> solve.default
> Execution halted
> 
> Now I wonder whether AOCL are supported by R or not. Did somebody already use this combination successfully? Is this test suite error a serious problem? Is a workaround available?
> 
> This is my R installation configuration line:
> 
> $ CC=gcc CFLAGS="-O3 -march=znver4" \
> CXX=g++ CXXFLAGS="-O3 -march=znver4" \
> FC=gfortran FCFLAGS="-O3 -march=znver4" \
> LDFLAGS="-Wl,-rpath=$GCC_PATH/lib64" \
> ../configure \
> --with-blas="-L/usr/lib64 -Wl,-rpath=$AOCL_ROOT/lib_LP64 -L$AOCL_ROOT/lib_LP64 -lblis -lflame" \
> --with-lapack \
> --enable-year2038
> 
> I am using the GCC (13.3.0).
> 
> > sessionInfo()
> R version 4.4.2 (2024-10-31)
> Platform: x86_64-pc-linux-gnu
> Running under: Rocky Linux 9.4 (Blue Onyx)
> 
> Matrix products: default
> BLAS:   /sw/numerics/aocl/5.0.0/gcc/lib_LP64/libblis.so.5.0.0
> LAPACK: /sw/numerics/aocl/5.0.0/gcc/lib_LP64/libflame.so;  LAPACK version 3.11.0
> ...
> 
> 
> With Intel MKL instead of AOCL the test suite passes without errors. But this is an AMD system, so here I tend to prefer AOCL over MKL.
> 
> Any ideas? Thank you.
> 
> 
> Best wishes,
> Christian
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel

-- 
Peter Dalgaard, Professor,
Center for Statistics, Copenhagen Business School
Solbjerg Plads 3, 2000 Frederiksberg, Denmark
Phone: (+45)38153501
Office: A 4.23
Email: pd.mes at cbs.dk  Priv: PDalgd at gmail.com


From |@n@|@rm @end|ng |rom m@|ne@edu  Wed Jan 22 21:34:41 2025
From: |@n@|@rm @end|ng |rom m@|ne@edu (Ian Farm)
Date: Wed, 22 Jan 2025 15:34:41 -0500
Subject: [Rd] Depends: R (>= 4.1) for packages that use |> and \(...)
In-Reply-To: <26512.37984.542732.125792@hornik.net>
References: <20250116144121.5520a9cc@arachnoid>
 <CAFDcVCTTVa+Ea+BoVoag0RJ7LK3P1tyPzBG9vP4U-4w6a4kKKQ@mail.gmail.com>
 <26506.26949.241762.7373@hornik.net> <26509.10892.521351.954386@hornik.net>
 <26512.37984.542732.125792@hornik.net>
Message-ID: <CAP8nD2xthJ5TzwYdok5tjXiWyf4=Y=uGf-sf7FFQKCjzNAACOA@mail.gmail.com>

Hello all,

Would packages using the underscore placeholder with the native pipe need
to also depend on R >= 4.2.0?

There appear to be a number, modifying Ivan's GitHub search:
https://github.com/search?q=org%3Acran+path%3A%2F%5B.%5D%5BRr%5Dd%3F%24%2F+%2F%5Cs%5C%7C%3E%5Cs.*%3D%5Cs%3F_%2F&type=code

Regards,
Ian
____
Ian Farm
Laboratory Manager, The Agroecology Lab
University of Maine School of Food and Agriculture
5762 Roger Clapp Greenhouses, Orono, Maine 04469


On Wed, Jan 22, 2025 at 1:47?AM Kurt Hornik <Kurt.Hornik at wu.ac.at> wrote:

> >>>>> Kurt Hornik writes:
>
> I just committed c8761[2-4] to the trunk which adds an internal utility
> for finding package code using the pipe or function shorthand, teaches R
> CMD build to add a dependency on R >= 4.1.0 as necessary, and teaches R
> CMD check to NOTE a missing dependency on R >= 4.1.0, based on Ivan's
> code.
>
> Currently, we seem to have about 1149 packages on CRAN with package code
> using the pipe or function shorthand, with only 415 depending on R >=
> 4.1.0, and 734 not.  Argh.
>
> Thanks again for spotting this.
>
> Best
> -k
>
> >>>>> Kurt Hornik writes:
> > Oh dear.  Using a variant of Ivan's code, I seem to find 728 (!!!) CRAN
> > packages which are missing their R >= 4.1 dependency.
>
> > So clearly we need to do more about this than teach R CMD build to add
> > the dependency ...
>
> > Best
> > -k
>
> >>>>> Henrik Bengtsson writes:
> >> Thanks.  Will take a look ...
>
> >> Best
> >> -k
>
> >>> Thanks for looking into this and the patch. FWIW, there's an open
> >>> PR18105 - "R CMD build: Add dependency on R >= 4.1.0 if code uses pipe
> >>> symbol |>" for this
> >>> (https://bugs.r-project.org/show_bug.cgi?id=18105).
>
> >>> /Henrik
>
> >>> On Thu, Jan 16, 2025 at 3:42?AM Ivan Krylov via R-devel
> >>> <r-devel at r-project.org> wrote:
> >>>>
> >>>> Hello R-devel,
> >>>>
> >>>> Approximately [*] the following CRAN packages make use of the pipe
> >>>> syntax in their source code or examples without depending on R >= 4.1:
> >>>>
> >>>> [1] "biplotEZ"           "CaseBasedReasoning" "collinear"
> >>>> [4] "cubble"             "disk.frame"         "duckdbfs"
> >>>> [7] "eia"                "feltr"              "flattabler"
> >>>> [10] "geodimension"       "hgnc"               "himach"
> >>>> [13] "lay"                "lidR"               "locateip"
> >>>> [16] "particles"          "photosynthesis"     "pivotea"
> >>>> [19] "planr"              "rtrek"              "satres"
> >>>> [22] "sdtmval"            "selenider"          "sewage"
> >>>> [25] "stminsights"        "tabr"               "tidygraph"
> >>>> [28] "tidywikidatar"      "USgas"              "washi"
> >>>> [31] "zctaCrosswalk"
> >>>>
> >>>> Since we have checks in place to automatically set Depends: R (>=
> >>>> 2.10.0) for data files compressed with xz or bzip2 and >= 3.5.0 for
> >>>> data files serialized with format version 3, would it make sense to
> >>>> automatically add Depends: R (>= 4.1) for such packages?
> >>>>
> >>>> The patch at the end of this message adds the R version dependency
> >>>> during R CMD build:
> >>>>
> >>>> R-devel CMD build --no-build-vignettes .
> >>>> * checking for file ?./DESCRIPTION? ... OK
> >>>> * preparing ?biplotEZ?:
> >>>> * checking DESCRIPTION meta-information ... OK
> >>>> * cleaning src
> >>>> * checking vignette meta-information ... OK
> >>>> * checking for LF line-endings in source and make files and shell
> >>>> scripts
> >>>> * checking for empty or unneeded directories
> >>>> NB: this package now depends on R (>= 4.1.0)
> >>>> WARNING: Added dependency on R >= 4.1.0 because some of the source
> >>>> files use the new syntax constructs.
> >>>> Files making use of R >= 4.1 pipe |> or function shorthand \(...):
> >>>> biplotEZ/R/biplot.R biplotEZ/R/translate_axes.R
> >>>> * building ?biplotEZ_2.2.tar.gz?
> >>>>
> >>>> A more extensive test could also look at the tests, demos, and
> >>>> \examples{}, but that may take longer and open the door for false
> >>>> positives. A package that uses |> in one example would still be useful
> >>>> on R-4.0.0, while a package that uses |> in the source code would fail
> >>>> to parse and install.
> >>>>
> >>>> Index: src/library/tools/R/QC.R
> >>>> ===================================================================
> >>>> --- src/library/tools/R/QC.R    (revision 87545)
> >>>> +++ src/library/tools/R/QC.R    (working copy)
> >>>> @@ -10367,7 +10367,29 @@
> >>>> }
> >>>> }
> >>>>
> >>>> +.check_use_of_R41_syntax <-
> >>>> +function(files)
> >>>> +{
> >>>> +    out <- vapply(files,
> >>>> +           function(f) tryCatch(
> >>>> +               any(getParseData(parse(f, keep.source = TRUE))$token
> %in% c("PIPE", "'\\\\'")),
> >>>> +               error = function(e) FALSE
> >>>> +           ),
> >>>> +           FALSE)
> >>>> +    out <- files[out]
> >>>> +    class(out) <- "check_use_of_R41_syntax"
> >>>> +    out
> >>>> +}
> >>>>
> >>>> +format.check_use_of_R41_syntax <-
> >>>> +function(x, ...)
> >>>> +{
> >>>> +    if (length(x)) {
> >>>> +        c("Files making use of R >= 4.1 pipe |> or function
> shorthand \\(...):",
> >>>> +          .strwrap22(x, " "))
> >>>> +    } else character()
> >>>> +}
> >>>> +
> >>>> ### Local variables: ***
> >>>> ### mode: outline-minor ***
> >>>> ### outline-regexp: "### [*]+" ***
> >>>> Index: src/library/tools/R/build.R
> >>>> ===================================================================
> >>>> --- src/library/tools/R/build.R (revision 87545)
> >>>> +++ src/library/tools/R/build.R (working copy)
> >>>> @@ -1165,9 +1165,11 @@
> >>>> desc <- .read_description(file.path(pkgname, "DESCRIPTION"))
> >>>> Rdeps <- .split_description(desc)$Rdepends2
> >>>> hasDep350 <- FALSE
> >>>> +        hasDep410 <- FALSE
> >>>> for(dep in Rdeps) {
> >>>> if(dep$op != '>=') next
> >>>> if(dep$version >= "3.5.0") hasDep350 <- TRUE
> >>>> +            if(dep$version >= "4.1.0") hasDep410 <- TRUE
> >>>> }
> >>>> if (!hasDep350) {
> >>>> ## re-read files after exclusions have been applied
> >>>> @@ -1189,6 +1191,23 @@
> >>>> "\n")
> >>>> }
> >>>> }
> >>>> +        if (!hasDep410) {
> >>>> +            uses410 <-
> .check_use_of_R41_syntax(dir(file.path(pkgname, "R"),
> >>>> +                                                    full.names =
> TRUE,
> >>>> +                                                    pattern =
> "[.]R$",
> >>>> +                                                    ignore.case =
> TRUE))
> >>>> +            if (length(uses410)) {
> >>>> +                fixup_R_dep(pkgname, "4.1.0")
> >>>> +                msg <- paste("WARNING: Added dependency on R >=
> 4.1.0 because",
> >>>> +                             "some of the source files use the new
> syntax",
> >>>> +                             "constructs.")
> >>>> +                printLog(Log,
> >>>> +                         paste(c(strwrap(msg, indent = 2L, exdent =
> 2L),
> >>>> +                                 format(uses410)),
> >>>> +                               collapse = "\n"),
> >>>> +                               "\n")
> >>>> +            }
> >>>> +        }
> >>>>
> >>>> ## add NAMESPACE if the author didn't write one
> >>>> if(!file.exists(namespace <- file.path(pkgname, "NAMESPACE")) ) {
> >>>>
> >>>>
> >>>> --
> >>>> Best regards,
> >>>> Ivan
> >>>>
> >>>> [*] Based on the following GitHub search, which requires logging in:
> >>>>
> https://github.com/search?q=org%3Acran%20path%3A%2F%5B.%5D%5BRr%5Dd%3F%24%2F%20%2F%5Cs%5C%7C%3E%2F&type=code
> >>>> There's currently no REST API support for regexp search, so the list
> >>>> was obtained manually.
> >>>>
> >>>> ______________________________________________
> >>>> R-devel at r-project.org mailing list
> >>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>
> >>> ______________________________________________
> >>> R-devel at r-project.org mailing list
> >>> https://stat.ethz.ch/mailman/listinfo/r-devel
>
> >> ______________________________________________
> >> R-devel at r-project.org mailing list
> >> https://stat.ethz.ch/mailman/listinfo/r-devel
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>

	[[alternative HTML version deleted]]


From |kry|ov @end|ng |rom d|@root@org  Thu Jan 23 10:10:08 2025
From: |kry|ov @end|ng |rom d|@root@org (Ivan Krylov)
Date: Thu, 23 Jan 2025 12:10:08 +0300
Subject: [Rd] Depends: R (>= 4.1) for packages that use |> and \(...)
In-Reply-To: <CAP8nD2xthJ5TzwYdok5tjXiWyf4=Y=uGf-sf7FFQKCjzNAACOA@mail.gmail.com>
References: <20250116144121.5520a9cc@arachnoid>
 <CAFDcVCTTVa+Ea+BoVoag0RJ7LK3P1tyPzBG9vP4U-4w6a4kKKQ@mail.gmail.com>
 <26506.26949.241762.7373@hornik.net>
 <26509.10892.521351.954386@hornik.net>
 <26512.37984.542732.125792@hornik.net>
 <CAP8nD2xthJ5TzwYdok5tjXiWyf4=Y=uGf-sf7FFQKCjzNAACOA@mail.gmail.com>
Message-ID: <20250123121008.4338cff0@Tarkus>

Many thanks to Henrik for remembering the report in Bugzilla and to
Kurt for implementing the change and finding out the true number of
affected packages.

On Wed, 22 Jan 2025 15:34:41 -0500
Ian Farm <ian.farm at maine.edu> wrote:

> Would packages using the underscore placeholder with the native pipe
> need to also depend on R >= 4.2.0?

That's a good find! For the R >= 4.2 syntax, we only need to check for
getParseData(...)$token %in% 'PLACEHOLDER'. The R >= 4.3 syntax feature
is harder to test for:

>> As an experimental feature the placeholder _ can now also be used in
>> the rhs of a forward pipe |> expression as the first argument in an
>> extraction call, such as _$coef. More generally, it can be used as
>> the head of a chain of extractions, such as _$coef[[2]]. 

I think it might be possible to parse(text = paste('PLACEHOLDER |>',
grandparent_expression)) and then look at the top-level function in the
call, but that feels quite fragile:

x <- utils::getParseData(parse(f, keep.source = TRUE))
i <- x$token %in% "PLACEHOLDER"
pi <- x[i, "parent"]
ppi <- x[x$id %in% pi, "parent"]
placeholder_expressions <- utils::getParseText(x, ppi)
extractor_used <- vapply(placeholder_expressions, function(src) {
 toplevel <- parse(text = paste("PLACEHOLDER |> ", src))[[1]][[1]]
 identical(toplevel, quote(`$`)) ||
  identical(toplevel, quote(`[`)) ||
  identical(toplevel, quote(`[[`))
}, FALSE)

Alternatively, we may find the first child of the grandparent of the
placeholder. If it's the placeholder expression, then the pipe must be
of the form ...|> _..., which is the R >= 4.3 syntax:

x <- utils::getParseData(parse(f, keep.source = TRUE))
i <- x$token %in% "PLACEHOLDER"
vapply(which(i), function(i) {
 pi <- x[i, "parent"]
 ppi <- x[x$id %in% pi, "parent"]
 cppi <- x[x$parent %in% ppi, "id"]
 min(cppi) == pi
}, FALSE)

-- 
Best regards,
Ivan


From Kurt@Horn|k @end|ng |rom wu@@c@@t  Thu Jan 23 11:16:48 2025
From: Kurt@Horn|k @end|ng |rom wu@@c@@t (Kurt Hornik)
Date: Thu, 23 Jan 2025 11:16:48 +0100
Subject: [Rd] Depends: R (>= 4.1) for packages that use |> and \(...)
In-Reply-To: <20250123121008.4338cff0@Tarkus>
References: <20250116144121.5520a9cc@arachnoid>
 <CAFDcVCTTVa+Ea+BoVoag0RJ7LK3P1tyPzBG9vP4U-4w6a4kKKQ@mail.gmail.com>
 <26506.26949.241762.7373@hornik.net>
 <26509.10892.521351.954386@hornik.net>
 <26512.37984.542732.125792@hornik.net>
 <CAP8nD2xthJ5TzwYdok5tjXiWyf4=Y=uGf-sf7FFQKCjzNAACOA@mail.gmail.com>
 <20250123121008.4338cff0@Tarkus>
Message-ID: <26514.5904.863904.292546@hornik.net>

>>>>> Ivan Krylov via R-devel writes:

Thanks.  I am already looking handling the 4.2.0 placeholder syntax, but
likely will need to refactor the code I added yesterday.

The "experimental" 4.3.0 extra placeholder feature looks like a lot of
effort: ideally there would be a simpler way.  I'll ask on R Core.

My guess would be that the new syntax is particularly prominently used
in examples: if so, it would be good to also have coverage for this.  

Best
-k

> Many thanks to Henrik for remembering the report in Bugzilla and to
> Kurt for implementing the change and finding out the true number of
> affected packages.

> On Wed, 22 Jan 2025 15:34:41 -0500
> Ian Farm <ian.farm at maine.edu> wrote:

>> Would packages using the underscore placeholder with the native pipe
>> need to also depend on R >= 4.2.0?

> That's a good find! For the R >= 4.2 syntax, we only need to check for
> getParseData(...)$token %in% 'PLACEHOLDER'. The R >= 4.3 syntax feature
> is harder to test for:

>>> As an experimental feature the placeholder _ can now also be used in
>>> the rhs of a forward pipe |> expression as the first argument in an
>>> extraction call, such as _$coef. More generally, it can be used as
>>> the head of a chain of extractions, such as _$coef[[2]]. 

> I think it might be possible to parse(text = paste('PLACEHOLDER |>',
> grandparent_expression)) and then look at the top-level function in the
> call, but that feels quite fragile:

> x <- utils::getParseData(parse(f, keep.source = TRUE))
> i <- x$token %in% "PLACEHOLDER"
> pi <- x[i, "parent"]
> ppi <- x[x$id %in% pi, "parent"]
> placeholder_expressions <- utils::getParseText(x, ppi)
> extractor_used <- vapply(placeholder_expressions, function(src) {
>  toplevel <- parse(text = paste("PLACEHOLDER |> ", src))[[1]][[1]]
>  identical(toplevel, quote(`$`)) ||
>   identical(toplevel, quote(`[`)) ||
>   identical(toplevel, quote(`[[`))
> }, FALSE)

> Alternatively, we may find the first child of the grandparent of the
> placeholder. If it's the placeholder expression, then the pipe must be
> of the form ...|> _..., which is the R >= 4.3 syntax:

> x <- utils::getParseData(parse(f, keep.source = TRUE))
> i <- x$token %in% "PLACEHOLDER"
> vapply(which(i), function(i) {
>  pi <- x[i, "parent"]
>  ppi <- x[x$id %in% pi, "parent"]
>  cppi <- x[x$parent %in% ppi, "id"]
>  min(cppi) == pi
> }, FALSE)

> -- 
> Best regards,
> Ivan

> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


