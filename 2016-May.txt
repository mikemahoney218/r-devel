From bbolker at gmail.com  Sun May  1 01:13:03 2016
From: bbolker at gmail.com (Ben Bolker)
Date: Sat, 30 Apr 2016 19:13:03 -0400
Subject: [Rd] r-bugzilla maintainer?
Message-ID: <57253BFF.8030108@gmail.com>


   I'm curious if anyone has suggestions for reaching the maintainer of
https://bugs.r-project.org/bugzilla/ or an appropriate venue for r-bugs
trouble-shooting requests ... I've forgotten my r-bugs password and
clicked in the appropriate box to request a password reset.

* Nothing seems to have come through to my gmail account -- it's been an
hour or so, perhaps I'm being too impatient?  I would expect such a
response to be fairly quick, but maybe it requires human moderation?
  * I've looked through my gmail inbox and can't find anything (can't
see anything being diverted to a spam box/filter)
  * if I click on password reminder again I get "You have requested a
password token too recently to request another. Please wait 10 minutes
then try again."
  * if I try to create a new account with bbolker at gmail.com it says one
already exists ...
  * I can't find any contact/maintainer info on the r-bugs page.

  cheers
    Ben Bolker


From simon.urbanek at r-project.org  Sun May  1 05:05:20 2016
From: simon.urbanek at r-project.org (Simon Urbanek)
Date: Sat, 30 Apr 2016 23:05:20 -0400
Subject: [Rd] r-bugzilla maintainer?
In-Reply-To: <57253BFF.8030108@gmail.com>
References: <57253BFF.8030108@gmail.com>
Message-ID: <39800C14-6BEF-46F9-89DE-EA03A5DBB625@r-project.org>

I'm running the site although all R-core members are technically admins. I'll follow up privately in a separate e-mail.

Cheers,
Simon


On Apr 30, 2016, at 7:13 PM, Ben Bolker <bbolker at gmail.com> wrote:

> 
>   I'm curious if anyone has suggestions for reaching the maintainer of
> https://bugs.r-project.org/bugzilla/ or an appropriate venue for r-bugs
> trouble-shooting requests ... I've forgotten my r-bugs password and
> clicked in the appropriate box to request a password reset.
> 
> * Nothing seems to have come through to my gmail account -- it's been an
> hour or so, perhaps I'm being too impatient?  I would expect such a
> response to be fairly quick, but maybe it requires human moderation?
>  * I've looked through my gmail inbox and can't find anything (can't
> see anything being diverted to a spam box/filter)
>  * if I click on password reminder again I get "You have requested a
> password token too recently to request another. Please wait 10 minutes
> then try again."
>  * if I try to create a new account with bbolker at gmail.com it says one
> already exists ...
>  * I can't find any contact/maintainer info on the r-bugs page.
> 
>  cheers
>    Ben Bolker
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
> 


From peter.ruckdeschel at web.de  Sun May  1 13:49:47 2016
From: peter.ruckdeschel at web.de (Peter Ruckdeschel)
Date: Sun, 1 May 2016 13:49:47 +0200
Subject: [Rd] Storage of byte code-compiled functions in sysdata.rda
Message-ID: <5725ED5B.20208@web.de>

Hi r-devels,

we are seeing a new problem with our packages RobAStRDA (just new on CRAN, thanks
to Uwe and Kurt!) and RobExtremes (to be submitted).

It must be something recent with the way you internally treat/store byte-code compiled
functions, as we have no problems with R-3.1.3, but do see an "Error in fct(x) : byte code
version mismatch" with R-devel SVNrev r70532.

Background: 
Starting from several x-y grids, in the sysdata.rda file of RobAStRDA, we store the results 
of calls to approxfun/splinefun to these grids from within a session with pkg RobAStRDA 
require()d.  From pkg RobExtremes we then call these interpolating functions by means of 
a call (essentially) as:

getFromNamespace(".RMXE", ns = "RobAStRDA")[["GEVFamily"]][["fun.N"]][[1]](1.3)

upon which we get the announced "Error in fct(x) : byte code version mismatch" while the same 
code does work for R-3.1.3.

The list element "fun.N" in the above call already accounts for a different behaviour for
pre R-3.0.0 (would have given "fun.O") and post R-3.0.0 ("fun.N") results of approxfun/
splinefun, but the interpolating functions in branch "fun.N" have been produced in
R-devel SVNrev r70532, so we would have expected our code getFromNamespace(.....) above to 
work in R-devel as well.

Could you give us any hints how to

(a) store the interpolating functions resulting from approxfun/splinefun in pkg RobAStRDA
    correctly in recent R-versions and
(b) call these functions in pkg RobExtremes ?

We already did import stats::approxfun and stats::splinefun into the NAMESPACEs of pkgs
RobAStRDA and RobExtremes.

Thanks for your help already,
Peter


---
Diese E-Mail wurde von Avast Antivirus-Software auf Viren gepr?ft.
https://www.avast.com/antivirus


From luke-tierney at uiowa.edu  Sun May  1 14:12:55 2016
From: luke-tierney at uiowa.edu (Tierney, Luke)
Date: Sun, 1 May 2016 12:12:55 +0000
Subject: [Rd] Storage of byte code-compiled functions in sysdata.rda
In-Reply-To: <5725ED5B.20208@web.de>
References: <5725ED5B.20208@web.de>
Message-ID: <704D9B27-D7A7-4B46-A2F4-82E0582AC6B5@uiowa.edu>

Can you provide a complete reproducible example?

Sent from my iPhone

> On May 1, 2016, at 6:51 AM, Peter Ruckdeschel <peter.ruckdeschel at web.de> wrote:
> 
> Hi r-devels,
> 
> we are seeing a new problem with our packages RobAStRDA (just new on CRAN, thanks
> to Uwe and Kurt!) and RobExtremes (to be submitted).
> 
> It must be something recent with the way you internally treat/store byte-code compiled
> functions, as we have no problems with R-3.1.3, but do see an "Error in fct(x) : byte code
> version mismatch" with R-devel SVNrev r70532.
> 
> Background: 
> Starting from several x-y grids, in the sysdata.rda file of RobAStRDA, we store the results 
> of calls to approxfun/splinefun to these grids from within a session with pkg RobAStRDA 
> require()d.  From pkg RobExtremes we then call these interpolating functions by means of 
> a call (essentially) as:
> 
> getFromNamespace(".RMXE", ns = "RobAStRDA")[["GEVFamily"]][["fun.N"]][[1]](1.3)
> 
> upon which we get the announced "Error in fct(x) : byte code version mismatch" while the same 
> code does work for R-3.1.3.
> 
> The list element "fun.N" in the above call already accounts for a different behaviour for
> pre R-3.0.0 (would have given "fun.O") and post R-3.0.0 ("fun.N") results of approxfun/
> splinefun, but the interpolating functions in branch "fun.N" have been produced in
> R-devel SVNrev r70532, so we would have expected our code getFromNamespace(.....) above to 
> work in R-devel as well.
> 
> Could you give us any hints how to
> 
> (a) store the interpolating functions resulting from approxfun/splinefun in pkg RobAStRDA
>    correctly in recent R-versions and
> (b) call these functions in pkg RobExtremes ?
> 
> We already did import stats::approxfun and stats::splinefun into the NAMESPACEs of pkgs
> RobAStRDA and RobExtremes.
> 
> Thanks for your help already,
> Peter
> 
> 
> ---
> Diese E-Mail wurde von Avast Antivirus-Software auf Viren gepr?ft.
> https://www.avast.com/antivirus
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From peter.ruckdeschel at web.de  Sun May  1 14:41:50 2016
From: peter.ruckdeschel at web.de (Peter Ruckdeschel)
Date: Sun, 1 May 2016 14:41:50 +0200
Subject: [Rd] Storage of byte code-compiled functions in sysdata.rda
In-Reply-To: <704D9B27-D7A7-4B46-A2F4-82E0582AC6B5@uiowa.edu>
References: <5725ED5B.20208@web.de>
	<704D9B27-D7A7-4B46-A2F4-82E0582AC6B5@uiowa.edu>
Message-ID: <5725F98E.5040609@web.de>

Thanks, Luke, for having a look to it.

Sure, I can give you some reproducible example -- even in two degrees of
completeness ;-): see below.

Thanks again, Peter

%-----------------------------------
(I) first example
%-----------------------------------
Just to reproduce the error, on r-devel, try:

install.packages("RobAStRDA")
require(RobAStRDA)
getFromNamespace(".RMXE", ns = "RobAStRDA")[["GEVFamily"]][["fun.N"]][[1]](1.3)

%-----------------------------------
(II) an example also giving the context
%-----------------------------------
For the "complete" story, not only the R-code needs to be given, but also the
preparation steps to produce the packages on the right R version;

so please follow steps (1)--(6) below; I am not 100% sure whether this already gives
you all information needed for this, but if not so please let me know.

(1) create a minimal R-package "InterpolTry"
      with byte-compilation on in the DESCRIPTION file
      and with stats::approxfun imported in the NAMESPACE file

(2) in an R session on R-devel do     

require(InterpolTry)
x <- 1:100
y <- 1:100
fun <- approxfun(x,y)
## revise the next line accordingly to your local settings
SrcRPathInterpolTry <- <path_to_(source-)R-folder_of_InterpolTry>
RdaFile <- file.path(SrcRPathInterpolTry, "sysdata.rda")
save(fun, file = RdaFile)
tools::resaveRdaFiles(RdaFile)

(3) re-build package InterpolTry and re-install it

(4) create a minimal R package "UseInterpolTry", again
      with byte-compilation on in the DESCRIPTION file
      and with stats::approxfun and package "InterpolTry"
      imported in the NAMESPACE file

(5) in the R folder of R package "UseInterpolTry" write a function
      useInterpolFct()  which goes like this

      useInterpolFct <- function(x){
               fun <- getFromNamespace("fun", ns = "InterpolTry")
               fun(x)
      }

     export this function in the namespace and create an .Rd file to it      

(6) (re-)build package "UseInterpolTry" and (re-)install it and try

require(UseInterpolTry)
useInterpolFct(5)

Steps (1)--(6) work with R-3.1.3, but no longer with R-devel.



Am 01.05.2016 um 14:12 schrieb Tierney, Luke:
> Can you provide a complete reproducible example?
>
> Sent from my iPhone
>
>> On May 1, 2016, at 6:51 AM, Peter Ruckdeschel <peter.ruckdeschel at web.de> wrote:
>>
>> Hi r-devels,
>>
>> we are seeing a new problem with our packages RobAStRDA (just new on CRAN, thanks
>> to Uwe and Kurt!) and RobExtremes (to be submitted).
>>
>> It must be something recent with the way you internally treat/store byte-code compiled
>> functions, as we have no problems with R-3.1.3, but do see an "Error in fct(x) : byte code
>> version mismatch" with R-devel SVNrev r70532.
>>
>> Background: 
>> Starting from several x-y grids, in the sysdata.rda file of RobAStRDA, we store the results 
>> of calls to approxfun/splinefun to these grids from within a session with pkg RobAStRDA 
>> require()d.  From pkg RobExtremes we then call these interpolating functions by means of 
>> a call (essentially) as:
>>
>> getFromNamespace(".RMXE", ns = "RobAStRDA")[["GEVFamily"]][["fun.N"]][[1]](1.3)
>>
>> upon which we get the announced "Error in fct(x) : byte code version mismatch" while the same 
>> code does work for R-3.1.3.
>>
>> The list element "fun.N" in the above call already accounts for a different behaviour for
>> pre R-3.0.0 (would have given "fun.O") and post R-3.0.0 ("fun.N") results of approxfun/
>> splinefun, but the interpolating functions in branch "fun.N" have been produced in
>> R-devel SVNrev r70532, so we would have expected our code getFromNamespace(.....) above to 
>> work in R-devel as well.
>>
>> Could you give us any hints how to
>>
>> (a) store the interpolating functions resulting from approxfun/splinefun in pkg RobAStRDA
>>    correctly in recent R-versions and
>> (b) call these functions in pkg RobExtremes ?
>>
>> We already did import stats::approxfun and stats::splinefun into the NAMESPACEs of pkgs
>> RobAStRDA and RobExtremes.
>>
>> Thanks for your help already,
>> Peter
>>
>>
>> ---
>> Diese E-Mail wurde von Avast Antivirus-Software auf Viren gepr?ft.
>> https://www.avast.com/antivirus
>>
>> ______________________________________________
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel


---
Diese E-Mail wurde von Avast Antivirus-Software auf Viren gepr?ft.
https://www.avast.com/antivirus


From spencer.graves at prodsyse.com  Sun May  1 21:52:50 2016
From: spencer.graves at prodsyse.com (Spencer Graves)
Date: Sun, 1 May 2016 14:52:50 -0500
Subject: [Rd] How to find R-Journal: Link is hidden
Message-ID: <412663a6-dc82-2c14-064d-359b9174ee54@prodsyse.com>

Hello:



       I just failed in my attempts to access R-Journal. "r-project.org" 
include a link to "The R Journal" plus another saying, "The R Journal 
Volume 7/2 is available."  Both link to 
"https://journal.r-project.org/", which seems not to include a link to 
the any issues of R Journal or instructions for authors, etc.  It 
includes links to R News, which ended in 2008.  And it includes a link 
back to "www.r-project.org".



       Thanks,

       Spencer Graves


From lawrence.michael at gene.com  Sun May  1 22:02:31 2016
From: lawrence.michael at gene.com (Michael Lawrence)
Date: Sun, 1 May 2016 13:02:31 -0700
Subject: [Rd] How to find R-Journal: Link is hidden
In-Reply-To: <412663a6-dc82-2c14-064d-359b9174ee54@prodsyse.com>
References: <412663a6-dc82-2c14-064d-359b9174ee54@prodsyse.com>
Message-ID: <CAOQ5NyfUJyi=_6waZj7h_Ajie9gMQsnrdvaFESy-uKvwY2dabA@mail.gmail.com>

Thanks, I am working on fixing this. Something went wrong with the
website regeneration.

Michael


On Sun, May 1, 2016 at 12:52 PM, Spencer Graves
<spencer.graves at prodsyse.com> wrote:
> Hello:
>
>
>
>       I just failed in my attempts to access R-Journal. "r-project.org"
> include a link to "The R Journal" plus another saying, "The R Journal Volume
> 7/2 is available."  Both link to "https://journal.r-project.org/", which
> seems not to include a link to the any issues of R Journal or instructions
> for authors, etc.  It includes links to R News, which ended in 2008.  And it
> includes a link back to "www.r-project.org".
>
>
>
>       Thanks,
>
>       Spencer Graves
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>


From erich.neuwirth at univie.ac.at  Sun May  1 23:40:40 2016
From: erich.neuwirth at univie.ac.at (Erich Neuwirth)
Date: Sun, 1 May 2016 23:40:40 +0200
Subject: [Rd] Typo in NEWS file for R-devel
Message-ID: <0E6B016A-71CA-493B-9F88-E46049AC7A4A@univie.ac.at>

From the first page of the NEWS file:
(2016-04-29 r70564)

isSymmetrix(m) is much faster for large asymmetric matrices m via pre-tests and a
new option tol1 (with which strict back compatibility is possible but not the default).

It probably should be
isSymmetric

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 670 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: <https://stat.ethz.ch/pipermail/r-devel/attachments/20160501/0fe8ad72/attachment.bin>

From henrik.bengtsson at gmail.com  Mon May  2 04:08:20 2016
From: henrik.bengtsson at gmail.com (Henrik Bengtsson)
Date: Sun, 1 May 2016 19:08:20 -0700
Subject: [Rd] Closing a fifo() on Windows core dumps R (3.2.5,
	3.3.0 RC and devel)
Message-ID: <CAFDcVCR4yA+QP3AS0J_7bB-xa1Y=RGjr14OPEkgNPPaKtM=_gg@mail.gmail.com>

The following core dumps R 3.2.5, R 3.3.0 RC and R devel on Windows.
I have tried to use a minimal setup (for all versions tested), i.e.

C:\> cd C:\
C:\> set PATH=C:\PROGRA~1\R\R-33~1.0RC\bin
C:\> set R_DEFAULT_PACKAGES=base

C:\> R --quiet --vanilla
> close(fifo("foo.tmp", open="wb"))
[core dump]


C:\> R --quiet --vanilla
> con <- fifo('foo.tmp', open='wb')
> print(con)
description       class        mode        text      opened    can read
       "\v"      "fifo"        "wb"      "text"    "opened"        "no"
  can write
      "yes"
> close(con)


C:\>R --quiet --vanilla -e "close(fifo('foo.tmp', open='wb'))"
> close(fifo('foo.tmp', open='wb'))
[core dump]


C:\>R --quiet --vanilla -e "fh <- fifo('foo.tmp', open='wb');
print(fh); close(fh)"
> fh <- fifo('foo.tmp', open='wb'); print(fh); close(fh)
description       class        mode        text      opened    can read
     "\016"      "fifo"        "wb"      "text"    "opened"        "no"
  can write
      "yes"
[core dump]

C:\>R --quiet --vanilla -e "fifo('foo.tmp', open='wb'); closeAllConnections()"
> fifo('foo.tmp', open='wb'); closeAllConnections()
description       class        mode        text      opened    can read
     "\016"      "fifo"        "wb"      "text"    "opened"        "no"
  can write
      "yes"
[core dump]

C:\>Rscript --vanilla -e "close(fifo('foo.tmp', open='wb'))"
[core dump]

C:\> Rscript --vanilla -e "con <- fifo('foo.tmp', open='wb');
print(con); close(con)"
description       class        mode        text      opened    can read
       "\f"      "fifo"        "wb"      "text"    "opened"        "no"
  can write
      "yes"
[core dump]


I doesn't core dump every time, but quite often. When I get it to core
dump ones I can often repeat it several times.  And when it doesn't
core dump, it seems to work for quite a while.

Note the random values of the `description` when it core dumps
(spurious memory mapping?).  These are reproducible between core dumps
and I even seen then across different cmd.exe sessions.  When it does
*not* core dump, I typically see "foo.tmp" (as expected), but I've
also seen "con" (sic!).


I've got it to core dump with the following versions of R:

C:\>Rscript -e "utils::sessionInfo()"
R version 3.2.5 (2016-04-14)
Platform: x86_64-w64-mingw32/x64 (64-bit)
Running under: Windows 7 x64 (build 7601) Service Pack 1

C:\>R --version
R version 3.3.0 RC (2016-04-28 r70564) -- "Supposedly Educational"
Copyright (C) 2016 The R Foundation for Statistical Computing
Platform: x86_64-w64-mingw32/x64 (64-bit)

all with session info:

C:\>Rscript --vanilla -e "utils::sessionInfo()"
R version { version }
Platform: x86_64-w64-mingw32/x64 (64-bit)
Running under: Windows 7 x64 (build 7601) Service Pack 1

locale:
[1] LC_COLLATE=English_United States.1252
[2] LC_CTYPE=English_United States.1252
[3] LC_MONETARY=English_United States.1252
[4] LC_NUMERIC=C
[5] LC_TIME=English_United States.1252

attached base packages:
[1] base

loaded via a namespace (and not attached):
[1] utils_3.3.0



Can some else reproduce this?  I'd be happy to do a formal bug report.


Thanks

Henrik


From henrik.bengtsson at gmail.com  Mon May  2 04:12:27 2016
From: henrik.bengtsson at gmail.com (Henrik Bengtsson)
Date: Sun, 1 May 2016 19:12:27 -0700
Subject: [Rd] Closing a fifo() on Windows core dumps R (3.2.5,
	3.3.0 RC and devel)
In-Reply-To: <CAFDcVCR4yA+QP3AS0J_7bB-xa1Y=RGjr14OPEkgNPPaKtM=_gg@mail.gmail.com>
References: <CAFDcVCR4yA+QP3AS0J_7bB-xa1Y=RGjr14OPEkgNPPaKtM=_gg@mail.gmail.com>
Message-ID: <CAFDcVCSPOnMDdQ=Z_41g04muFKXtRAhy1vnTAomhpfOmKUW8-Q@mail.gmail.com>

Sorry for the version mess; here are the versions I've got installed
and on which I can reproduce the core dump:

C:\>R --version
R version 3.2.5 (2016-04-14)
Platform: x86_64-w64-mingw32/x64 (64-bit)
Running under: Windows 7 x64 (build 7601) Service Pack 1

C:\>R --version
R version 3.3.0 RC (2016-04-28 r70564) -- "Supposedly Educational"
Copyright (C) 2016 The R Foundation for Statistical Computing
Platform: x86_64-w64-mingw32/x64 (64-bit)

C:\>R --version
R Under development (unstable) (2016-04-29 r70564) -- "Unsuffered Consequences"
Copyright (C) 2016 The R Foundation for Statistical Computing
Platform: x86_64-w64-mingw32/x64 (64-bit)

/Henrik

On Sun, May 1, 2016 at 7:08 PM, Henrik Bengtsson
<henrik.bengtsson at gmail.com> wrote:
> The following core dumps R 3.2.5, R 3.3.0 RC and R devel on Windows.
> I have tried to use a minimal setup (for all versions tested), i.e.
>
> C:\> cd C:\
> C:\> set PATH=C:\PROGRA~1\R\R-33~1.0RC\bin
> C:\> set R_DEFAULT_PACKAGES=base
>
> C:\> R --quiet --vanilla
>> close(fifo("foo.tmp", open="wb"))
> [core dump]
>
>
> C:\> R --quiet --vanilla
>> con <- fifo('foo.tmp', open='wb')
>> print(con)
> description       class        mode        text      opened    can read
>        "\v"      "fifo"        "wb"      "text"    "opened"        "no"
>   can write
>       "yes"
>> close(con)
>
>
> C:\>R --quiet --vanilla -e "close(fifo('foo.tmp', open='wb'))"
>> close(fifo('foo.tmp', open='wb'))
> [core dump]
>
>
> C:\>R --quiet --vanilla -e "fh <- fifo('foo.tmp', open='wb');
> print(fh); close(fh)"
>> fh <- fifo('foo.tmp', open='wb'); print(fh); close(fh)
> description       class        mode        text      opened    can read
>      "\016"      "fifo"        "wb"      "text"    "opened"        "no"
>   can write
>       "yes"
> [core dump]
>
> C:\>R --quiet --vanilla -e "fifo('foo.tmp', open='wb'); closeAllConnections()"
>> fifo('foo.tmp', open='wb'); closeAllConnections()
> description       class        mode        text      opened    can read
>      "\016"      "fifo"        "wb"      "text"    "opened"        "no"
>   can write
>       "yes"
> [core dump]
>
> C:\>Rscript --vanilla -e "close(fifo('foo.tmp', open='wb'))"
> [core dump]
>
> C:\> Rscript --vanilla -e "con <- fifo('foo.tmp', open='wb');
> print(con); close(con)"
> description       class        mode        text      opened    can read
>        "\f"      "fifo"        "wb"      "text"    "opened"        "no"
>   can write
>       "yes"
> [core dump]
>
>
> I doesn't core dump every time, but quite often. When I get it to core
> dump ones I can often repeat it several times.  And when it doesn't
> core dump, it seems to work for quite a while.
>
> Note the random values of the `description` when it core dumps
> (spurious memory mapping?).  These are reproducible between core dumps
> and I even seen then across different cmd.exe sessions.  When it does
> *not* core dump, I typically see "foo.tmp" (as expected), but I've
> also seen "con" (sic!).
>
>
> I've got it to core dump with the following versions of R:
>
> C:\>Rscript -e "utils::sessionInfo()"
> R version 3.2.5 (2016-04-14)
> Platform: x86_64-w64-mingw32/x64 (64-bit)
> Running under: Windows 7 x64 (build 7601) Service Pack 1
>
> C:\>R --version
> R version 3.3.0 RC (2016-04-28 r70564) -- "Supposedly Educational"
> Copyright (C) 2016 The R Foundation for Statistical Computing
> Platform: x86_64-w64-mingw32/x64 (64-bit)
>
> all with session info:
>
> C:\>Rscript --vanilla -e "utils::sessionInfo()"
> R version { version }
> Platform: x86_64-w64-mingw32/x64 (64-bit)
> Running under: Windows 7 x64 (build 7601) Service Pack 1
>
> locale:
> [1] LC_COLLATE=English_United States.1252
> [2] LC_CTYPE=English_United States.1252
> [3] LC_MONETARY=English_United States.1252
> [4] LC_NUMERIC=C
> [5] LC_TIME=English_United States.1252
>
> attached base packages:
> [1] base
>
> loaded via a namespace (and not attached):
> [1] utils_3.3.0
>
>
>
> Can some else reproduce this?  I'd be happy to do a formal bug report.
>
>
> Thanks
>
> Henrik


From maechler at stat.math.ethz.ch  Mon May  2 10:43:09 2016
From: maechler at stat.math.ethz.ch (Martin Maechler)
Date: Mon, 2 May 2016 10:43:09 +0200
Subject: [Rd] Typo in NEWS file for R-devel
In-Reply-To: <0E6B016A-71CA-493B-9F88-E46049AC7A4A@univie.ac.at>
References: <0E6B016A-71CA-493B-9F88-E46049AC7A4A@univie.ac.at>
Message-ID: <22311.4893.143350.786101@stat.math.ethz.ch>

>>>>> Erich Neuwirth <erich.neuwirth at univie.ac.at>
>>>>>     on Sun, 1 May 2016 23:40:40 +0200 writes:

    > From the first page of the NEWS file: (2016-04-29 r70564)

    > isSymmetrix(m) is much faster for large asymmetric
    > matrices m via pre-tests and a new option tol1 (with which
    > strict back compatibility is possible but not the
    > default).

    > It probably should be isSymmetric

Indeed; now fixed.  Thank you!


From qinzhu at outlook.com  Mon May  2 22:19:44 2016
From: qinzhu at outlook.com (Qin Zhu)
Date: Mon, 2 May 2016 16:19:44 -0400
Subject: [Rd] Is it possible to increase MAX_NUM_DLLS in future R releases?
Message-ID: <BLU436-SMTP7203A01BDD638D733608F0CD790@phx.gbl>

Hi,

I?m working on a Shiny app for statistical analysis. I ran into this "maximal number of DLLs reached" issue recently because my app requires importing many other packages.

I?ve posted my question on stackoverflow (http://stackoverflow.com/questions/36974206/r-maximal-number-of-dlls-reached <http://stackoverflow.com/questions/36974206/r-maximal-number-of-dlls-reached>). 

I?m just wondering is there any reason to set the maximal number of DLLs to be 100, and is there any plan to increase it/not hardcoding it in the future? It seems many people are also running into this problem. I know I can work around this problem by modifying the source, but since my package is going to be used by other people, I don?t think this is a feasible solution. 

Any suggestions would be appreciated. Thanks!

Qin
	[[alternative HTML version deleted]]


From mick.jordan at oracle.com  Tue May  3 00:45:08 2016
From: mick.jordan at oracle.com (Mick Jordan)
Date: Mon, 2 May 2016 15:45:08 -0700
Subject: [Rd] R-3.2.5 Mac OS X package
Message-ID: <5727D874.9070709@oracle.com>

When is the R-3.2.5 binary for Mac OS X likely to show up?

Mick Jordan


From dwinsemius at comcast.net  Tue May  3 01:25:24 2016
From: dwinsemius at comcast.net (David Winsemius)
Date: Mon, 2 May 2016 16:25:24 -0700
Subject: [Rd] R-3.2.5 Mac OS X package
In-Reply-To: <5727D874.9070709@oracle.com>
References: <5727D874.9070709@oracle.com>
Message-ID: <56148F2A-4EF8-448A-A9AE-4211EC59414C@comcast.net>


> On May 2, 2016, at 3:45 PM, Mick Jordan <mick.jordan at oracle.com> wrote:
> 
> When is the R-3.2.5 binary for Mac OS X likely to show up?

Where did you look? I see both Mavericks and SnowLeopard fork binaries with or without r.app GUI at http://r.research.att.com/

I've been using the 3.3.0 RC for a while with only relative minor and mostly expected difficulties relating to packages that have external dependencies.


> 
> Mick Jordan
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel

David Winsemius
Alameda, CA, USA


From mick.jordan at oracle.com  Tue May  3 16:40:32 2016
From: mick.jordan at oracle.com (Mick Jordan)
Date: Tue, 3 May 2016 07:40:32 -0700
Subject: [Rd] R-3.2.5 Mac OS X package
In-Reply-To: <56148F2A-4EF8-448A-A9AE-4211EC59414C@comcast.net>
References: <5727D874.9070709@oracle.com>
	<56148F2A-4EF8-448A-A9AE-4211EC59414C@comcast.net>
Message-ID: <5728B860.70709@oracle.com>

On 5/2/16 4:25 PM, David Winsemius wrote:
>> On May 2, 2016, at 3:45 PM, Mick Jordan <mick.jordan at oracle.com> wrote:
>>
>> When is the R-3.2.5 binary for Mac OS X likely to show up?
> Where did you look? I see both Mavericks and SnowLeopard fork binaries with or without r.app GUI at http://r.research.att.com/
>
> I've been using the 3.3.0 RC for a while with only relative minor and mostly expected difficulties relating to packages that have external dependencies.
>
>
I was looking at https://cran.r-project.org/ which only shows a 3.2.4 pkg.

Anyway as 3.3.0 is release this is probably moot.

Mick


From csardi.gabor at gmail.com  Tue May  3 19:14:07 2016
From: csardi.gabor at gmail.com (=?UTF-8?B?R8OhYm9yIENzw6FyZGk=?=)
Date: Tue, 3 May 2016 19:14:07 +0200
Subject: [Rd] R-3.2.5 Mac OS X package
In-Reply-To: <56148F2A-4EF8-448A-A9AE-4211EC59414C@comcast.net>
References: <5727D874.9070709@oracle.com>
	<56148F2A-4EF8-448A-A9AE-4211EC59414C@comcast.net>
Message-ID: <CABtg=KnTfXOkRe18R2kXFPfq=06ptQ8r3U0gqLyx2tYbZd1hbQ@mail.gmail.com>

On Tue, May 3, 2016 at 1:25 AM, David Winsemius <dwinsemius at comcast.net> wrote:
>
>> On May 2, 2016, at 3:45 PM, Mick Jordan <mick.jordan at oracle.com> wrote:
>>
>> When is the R-3.2.5 binary for Mac OS X likely to show up?
>
> Where did you look? I see both Mavericks and SnowLeopard fork binaries with or without r.app GUI at http://r.research.att.com/

AFAICT there is only 3.2.5-pathed there, which is not exactly the same.

Gabor

[...]


From simon.urbanek at r-project.org  Tue May  3 19:58:13 2016
From: simon.urbanek at r-project.org (Simon Urbanek)
Date: Tue, 3 May 2016 13:58:13 -0400
Subject: [Rd] R-3.2.5 Mac OS X package
In-Reply-To: <5728B860.70709@oracle.com>
References: <5727D874.9070709@oracle.com>
	<56148F2A-4EF8-448A-A9AE-4211EC59414C@comcast.net>
	<5728B860.70709@oracle.com>
Message-ID: <0F43CB83-490A-4266-B338-509172AA6061@r-project.org>


On May 3, 2016, at 10:40 AM, Mick Jordan <mick.jordan at oracle.com> wrote:

> On 5/2/16 4:25 PM, David Winsemius wrote:
>>> On May 2, 2016, at 3:45 PM, Mick Jordan <mick.jordan at oracle.com> wrote:
>>> 
>>> When is the R-3.2.5 binary for Mac OS X likely to show up?
>> Where did you look? I see both Mavericks and SnowLeopard fork binaries with or without r.app GUI at http://r.research.att.com/
>> 
>> I've been using the 3.3.0 RC for a while with only relative minor and mostly expected difficulties relating to packages that have external dependencies.
>> 
>> 
> I was looking at https://cran.r-project.org/ which only shows a 3.2.4 pkg.
> 
> Anyway as 3.3.0 is release this is probably moot.
> 

3.2.5 is just re-named 3.2.4-revised which is at
https://cran.r-project.org/bin/macosx/R-3.2.4-revised.pkg

There is a bit of an issue since 3.2.5 was supposed to be just re-named 3.2.4-revised, but in the meantime there were changes like the R logo which makes it hard to do a release without reverting the sources in the repos. So 3.2.5 may or may not happen, but 3.3.0 is the priority now.

Cheers,
Simon


From mick.jordan at oracle.com  Tue May  3 20:10:16 2016
From: mick.jordan at oracle.com (Mick Jordan)
Date: Tue, 3 May 2016 11:10:16 -0700
Subject: [Rd] vignette/knitr help
Message-ID: <5728E988.9010207@oracle.com>

I need some help understanding a problem running the tests on the 
'digest' package. Initially, I got the message that the 'knitr' package 
was needed to run vignettes:

Running vignettes for package ?digest?
Error in loadVignetteBuilder(vigns$pkgdir) :
   vignette builder 'knitr' not found

So I installed the knitr package and all its dependents (?mime?, 
?stringi?, ?magrittr?, ?evaluate?, ?formatR?, ?highr?, ?markdown?, 
?stringr?, ?yaml?) . Now I get some different warnings:

Running vignettes for package ?digest?
   Running ?sha1.Rmd?
Warning messages:
1: In readLines(if (is.character(input2)) { :
   cannot open file 'sha1.Rmd': No such file or directory
2: In engine$weave(file, quiet = TRUE, encoding = enc) :
   The vignette engine knitr::rmarkdown is not available, because the 
rmarkdown package is not installed. Please install it.
3: In readLines(con) :
   cannot open file 'sha1.Rmd': No such file or directory

So why is sha1.Rmd missing? And why is it complaining about rmarkdown? 
Or more precisely why did it not install it as a dependent? It installed 
plain markdown.

Mick Jordan


From thierry.onkelinx at inbo.be  Tue May  3 20:29:53 2016
From: thierry.onkelinx at inbo.be (Thierry Onkelinx)
Date: Tue, 3 May 2016 20:29:53 +0200
Subject: [Rd] vignette/knitr help
In-Reply-To: <5728E988.9010207@oracle.com>
References: <5728E988.9010207@oracle.com>
Message-ID: <CAJuCY5znayA7AGATc6hz3oy-OpfQvxHV+jethpP-UwyHV+3vwg@mail.gmail.com>

Dear Mick,

Note that both knitr and rmarkdown are listed under Suggests: both are
required to compile the vignette. Installing rmarkdown should solve
the problem. If not, please provide more information. OS, R version,
digest version, ...

Best regards,
ir. Thierry Onkelinx
Instituut voor natuur- en bosonderzoek / Research Institute for Nature
and Forest
team Biometrie & Kwaliteitszorg / team Biometrics & Quality Assurance
Kliniekstraat 25
1070 Anderlecht
Belgium

To call in the statistician after the experiment is done may be no
more than asking him to perform a post-mortem examination: he may be
able to say what the experiment died of. ~ Sir Ronald Aylmer Fisher
The plural of anecdote is not data. ~ Roger Brinner
The combination of some data and an aching desire for an answer does
not ensure that a reasonable answer can be extracted from a given body
of data. ~ John Tukey


2016-05-03 20:10 GMT+02:00 Mick Jordan <mick.jordan at oracle.com>:
> I need some help understanding a problem running the tests on the 'digest'
> package. Initially, I got the message that the 'knitr' package was needed to
> run vignettes:
>
> Running vignettes for package ?digest?
> Error in loadVignetteBuilder(vigns$pkgdir) :
>   vignette builder 'knitr' not found
>
> So I installed the knitr package and all its dependents (?mime?, ?stringi?,
> ?magrittr?, ?evaluate?, ?formatR?, ?highr?, ?markdown?, ?stringr?, ?yaml?) .
> Now I get some different warnings:
>
> Running vignettes for package ?digest?
>   Running ?sha1.Rmd?
> Warning messages:
> 1: In readLines(if (is.character(input2)) { :
>   cannot open file 'sha1.Rmd': No such file or directory
> 2: In engine$weave(file, quiet = TRUE, encoding = enc) :
>   The vignette engine knitr::rmarkdown is not available, because the
> rmarkdown package is not installed. Please install it.
> 3: In readLines(con) :
>   cannot open file 'sha1.Rmd': No such file or directory
>
> So why is sha1.Rmd missing? And why is it complaining about rmarkdown? Or
> more precisely why did it not install it as a dependent? It installed plain
> markdown.
>
> Mick Jordan
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From mick.jordan at oracle.com  Tue May  3 21:05:06 2016
From: mick.jordan at oracle.com (Mick Jordan)
Date: Tue, 3 May 2016 12:05:06 -0700
Subject: [Rd] vignette/knitr help
In-Reply-To: <CAJuCY5znayA7AGATc6hz3oy-OpfQvxHV+jethpP-UwyHV+3vwg@mail.gmail.com>
References: <5728E988.9010207@oracle.com>
	<CAJuCY5znayA7AGATc6hz3oy-OpfQvxHV+jethpP-UwyHV+3vwg@mail.gmail.com>
Message-ID: <5728F662.7090903@oracle.com>

On 5/3/16 11:29 AM, Thierry Onkelinx wrote:
> Dear Mick,
>
> Note that both knitr and rmarkdown are listed under Suggests: both are
> required to compile the vignette. Installing rmarkdown should solve
> the problem. If not, please provide more information. OS, R version,
> digest version, ...
>
>
This is occurring in the context of an automated testing environment 
that compares the output of GnuR and FastR. I'm using 
tools::testInstalledPackage with the default values for 'types'. I guess 
the problem is that there is no connection between this step and the 
previous package install step (that did use --install-tests) but didn't 
install the "Suggests" dependencies because in general these are not 
needed. But I still am not clear why knitr doesn't list rmarkdown as a 
dependency when it clearly will try to use it. To me that is is not  
"Suggests" dependency.

Mick


From thierry.onkelinx at inbo.be  Tue May  3 21:19:35 2016
From: thierry.onkelinx at inbo.be (Thierry Onkelinx)
Date: Tue, 3 May 2016 21:19:35 +0200
Subject: [Rd] vignette/knitr help
In-Reply-To: <5728F662.7090903@oracle.com>
References: <5728E988.9010207@oracle.com>
	<CAJuCY5znayA7AGATc6hz3oy-OpfQvxHV+jethpP-UwyHV+3vwg@mail.gmail.com>
	<5728F662.7090903@oracle.com>
Message-ID: <CAJuCY5yp7PGVi_EuGT6=ThuLsbwYCo0mTd4JL-1wPZTjhJKnDQ@mail.gmail.com>

Dear Mick,

knitr doesn't depends on rmarkdown. It's the vignette that depends on
both knitr (for handle the R chunks) and rmarkdown (for the output
format rmarkdown::html_vignette).

https://cran.r-project.org/doc/manuals/r-release/R-exts.html#Package-Dependencies
states: "The ?Suggests? field ...snip...  lists packages that are not
necessarily needed. This includes packages used only in examples,
tests or vignettes  ...snip...   Then it is not necessary to have bar
use foo unless one wants to execute all the examples/tests/vignettes"

So packages in Suggests might be required to compile vignettes.

Best regards,

ir. Thierry Onkelinx
Instituut voor natuur- en bosonderzoek / Research Institute for Nature
and Forest
team Biometrie & Kwaliteitszorg / team Biometrics & Quality Assurance
Kliniekstraat 25
1070 Anderlecht
Belgium

To call in the statistician after the experiment is done may be no
more than asking him to perform a post-mortem examination: he may be
able to say what the experiment died of. ~ Sir Ronald Aylmer Fisher
The plural of anecdote is not data. ~ Roger Brinner
The combination of some data and an aching desire for an answer does
not ensure that a reasonable answer can be extracted from a given body
of data. ~ John Tukey


2016-05-03 21:05 GMT+02:00 Mick Jordan <mick.jordan at oracle.com>:
> On 5/3/16 11:29 AM, Thierry Onkelinx wrote:
>>
>> Dear Mick,
>>
>> Note that both knitr and rmarkdown are listed under Suggests: both are
>> required to compile the vignette. Installing rmarkdown should solve
>> the problem. If not, please provide more information. OS, R version,
>> digest version, ...
>>
>>
> This is occurring in the context of an automated testing environment that
> compares the output of GnuR and FastR. I'm using tools::testInstalledPackage
> with the default values for 'types'. I guess the problem is that there is no
> connection between this step and the previous package install step (that did
> use --install-tests) but didn't install the "Suggests" dependencies because
> in general these are not needed. But I still am not clear why knitr doesn't
> list rmarkdown as a dependency when it clearly will try to use it. To me
> that is is not  "Suggests" dependency.
>
> Mick
>


From mick.jordan at oracle.com  Tue May  3 23:50:27 2016
From: mick.jordan at oracle.com (Mick Jordan)
Date: Tue, 3 May 2016 14:50:27 -0700
Subject: [Rd] vignette/knitr help
In-Reply-To: <CAJuCY5yp7PGVi_EuGT6=ThuLsbwYCo0mTd4JL-1wPZTjhJKnDQ@mail.gmail.com>
References: <5728E988.9010207@oracle.com>
	<CAJuCY5znayA7AGATc6hz3oy-OpfQvxHV+jethpP-UwyHV+3vwg@mail.gmail.com>
	<5728F662.7090903@oracle.com>
	<CAJuCY5yp7PGVi_EuGT6=ThuLsbwYCo0mTd4JL-1wPZTjhJKnDQ@mail.gmail.com>
Message-ID: <57291D23.3010104@oracle.com>

On 5/3/16 12:19 PM, Thierry Onkelinx wrote:
> Dear Mick,
>
> knitr doesn't depends on rmarkdown. It's the vignette that depends on
> both knitr (for handle the R chunks) and rmarkdown (for the output
> format rmarkdown::html_vignette).
>
> https://cran.r-project.org/doc/manuals/r-release/R-exts.html#Package-Dependencies
> states: "The ?Suggests? field ...snip...  lists packages that are not
> necessarily needed. This includes packages used only in examples,
> tests or vignettes  ...snip...   Then it is not necessary to have bar
> use foo unless one wants to execute all the examples/tests/vignettes"
>
> So packages in Suggests might be required to compile vignettes.
>
Ok, I get it now, and a more careful reading of the Writing Extensions 
manual would have helped prevent the surprise. Anyway, FastR can't 
handle knitr yet so I am backing off to testing types=c("examples, "tests").

Thanks
Mick


From marius.hofert at uwaterloo.ca  Wed May  4 03:51:19 2016
From: marius.hofert at uwaterloo.ca (Marius Hofert)
Date: Tue, 3 May 2016 21:51:19 -0400
Subject: [Rd] R process killed when allocating too large matrix (Mac OS X)
Message-ID: <CAM3-KjYqc5CvDt4yKkOEPw--1Fq-c8O8x6UfFir5x==-UwFYvw@mail.gmail.com>

Dear expeRts,

The following code leads to R being killed (under Mac OS X 10.11.4; R
installed from source; also happened under a previous unstable
version):

m <- matrix(0, 100000, 100000)

I expected an error that a vector of this size could not be allocated.

Besides the above (a bug?), how can I find out beforehand whether or
not a square matrix can be allocated?

Cheers,
Marius


PS: Here is the sessionInfo() output:

R version 3.3.0 (2016-05-03)
Platform: x86_64-apple-darwin15.4.0 (64-bit)
Running under: OS X 10.11.4 (El Capitan)

locale:
[1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8

attached base packages:
[1] stats     graphics  grDevices utils     datasets  methods   base


From maechler at stat.math.ethz.ch  Wed May  4 09:44:07 2016
From: maechler at stat.math.ethz.ch (Martin Maechler)
Date: Wed, 4 May 2016 09:44:07 +0200
Subject: [Rd] Is it possible to increase MAX_NUM_DLLS in future R
	releases?
In-Reply-To: <BLU436-SMTP7203A01BDD638D733608F0CD790@phx.gbl>
References: <BLU436-SMTP7203A01BDD638D733608F0CD790@phx.gbl>
Message-ID: <22313.43079.748521.575179@stat.math.ethz.ch>

>>>>> Qin Zhu <qinzhu at outlook.com>
>>>>>     on Mon, 2 May 2016 16:19:44 -0400 writes:

    > Hi,
    > I?m working on a Shiny app for statistical analysis. I ran into this "maximal number of DLLs reached" issue recently because my app requires importing many other packages.

    > I?ve posted my question on stackoverflow (http://stackoverflow.com/questions/36974206/r-maximal-number-of-dlls-reached <http://stackoverflow.com/questions/36974206/r-maximal-number-of-dlls-reached>). 

    > I?m just wondering is there any reason to set the maximal number of DLLs to be 100, and is there any plan to increase it/not hardcoding it in the future? It seems many people are also running into this problem. I know I can work around this problem by modifying the source, but since my package is going to be used by other people, I don?t think this is a feasible solution. 

    > Any suggestions would be appreciated. Thanks!
    > Qin

Increasing that number is of course "possible"... but it also
costs a bit (adding to the fixed memory footprint of R). 

I did not set that limit, but I'm pretty sure it was also meant
as reminder for the useR to "clean up" a bit in her / his R
session, i.e., not load package namespaces unnecessarily. I
cannot yet imagine that you need > 100 packages | namespaces
loaded in your R session. OTOH, some packages nowadays have a
host of dependencies, so I agree that this at least may happen
accidentally more frequently than in the past. 

The real solution of course would be a code improvement that
starts with a relatively small number of "DLLinfo" structures
(say 32), and then allocates more batches (of size say 32) if
needed. 

Patches to the R sources (development trunk in subversion at
https://svn.r-project.org/R/trunk/ ) are very welcome! 

Martin Maechler
ETH Zurich  &  R Core Team


From ripley at stats.ox.ac.uk  Wed May  4 11:15:18 2016
From: ripley at stats.ox.ac.uk (Prof Brian Ripley)
Date: Wed, 4 May 2016 10:15:18 +0100
Subject: [Rd] Is it possible to increase MAX_NUM_DLLS in future R
 releases?
In-Reply-To: <22313.43079.748521.575179@stat.math.ethz.ch>
References: <BLU436-SMTP7203A01BDD638D733608F0CD790@phx.gbl>
	<22313.43079.748521.575179@stat.math.ethz.ch>
Message-ID: <5729BDA6.3060106@stats.ox.ac.uk>

On 04/05/2016 08:44, Martin Maechler wrote:
>>>>>> Qin Zhu <qinzhu at outlook.com>
>>>>>>      on Mon, 2 May 2016 16:19:44 -0400 writes:
>
>      > Hi,
>      > I?m working on a Shiny app for statistical analysis. I ran into this "maximal number of DLLs reached" issue recently because my app requires importing many other packages.
>
>      > I?ve posted my question on stackoverflow (http://stackoverflow.com/questions/36974206/r-maximal-number-of-dlls-reached <http://stackoverflow.com/questions/36974206/r-maximal-number-of-dlls-reached>).
>
>      > I?m just wondering is there any reason to set the maximal number of DLLs to be 100, and is there any plan to increase it/not hardcoding it in the future? It seems many people are also running into this problem. I know I can work around this problem by modifying the source, but since my package is going to be used by other people, I don?t think this is a feasible solution.
>
>      > Any suggestions would be appreciated. Thanks!
>      > Qin
>
> Increasing that number is of course "possible"... but it also
> costs a bit (adding to the fixed memory footprint of R).

And not only that.  At the time this was done (and it was once 50) the 
main cost was searching DLLs for symbols.  That is still an issue, and 
few packages exclude their DLL from symbol search so if symbols have to 
searched for a lot of DLLs will be searched.  (Registering all the 
symbols needed in a package avoids a search, and nowadays by default 
searches from a namespace are restricted to that namespace.)

See 
https://cran.r-project.org/doc/manuals/r-release/R-exts.html#Registering-native-routines 
for some further details about the search mechanism.

> I did not set that limit, but I'm pretty sure it was also meant
> as reminder for the useR to "clean up" a bit in her / his R
> session, i.e., not load package namespaces unnecessarily. I
> cannot yet imagine that you need > 100 packages | namespaces
> loaded in your R session. OTOH, some packages nowadays have a
> host of dependencies, so I agree that this at least may happen
> accidentally more frequently than in the past.

I am not convinced that it is needed.  The OP says he imports many 
packages, and I doubt that more than a few are required at any one time. 
  Good practice is to load namespaces as required, using requireNamespace.

> The real solution of course would be a code improvement that
> starts with a relatively small number of "DLLinfo" structures
> (say 32), and then allocates more batches (of size say 32) if
> needed.

The problem of course is that such code will rarely be exercised, and 
people have made errors on the boundaries (here multiples of 32) many 
times in the past.  (Note too that DLLs can be removed as well as added, 
another point of coding errors.)

> Patches to the R sources (development trunk in subversion at
> https://svn.r-project.org/R/trunk/ ) are very welcome!
>
> Martin Maechler
> ETH Zurich  &  R Core Team



-- 
Brian D. Ripley,                  ripley at stats.ox.ac.uk
Emeritus Professor of Applied Statistics, University of Oxford


From dushoff at mcmaster.ca  Wed May  4 05:12:58 2016
From: dushoff at mcmaster.ca (Jonathan Dushoff)
Date: Tue, 3 May 2016 23:12:58 -0400
Subject: [Rd] nlme: lme gives incorrect answers without warning with
	redundant data
Message-ID: <CALF-=EKPRNhw3JG+yRVV-J364+6XDhJtJUWaon3EFH+T10miug@mail.gmail.com>

I think this issue will be of interest to the list. It seems like a
problem with nlme, and I was drawn into it because of a collaborator
who encountered this issue in a simple experiment and wound up
questioning the mixed model approach to his question.

The issue is that lme, when faced with certain numerically unstable
problems, seems to produce incorrect answers (understandable), but
without warnings (bad, in my opinion).

I have attached a reproducible example.

There is more information here:
https://htmlpreview.github.io/?https://github.com/dushoff/scratch/blob/master/nlme.html
and https://bugs.r-project.org/bugzilla3/show_bug.cgi?id=16864. The
first link shows my session information.

Jonathan

From martin.morgan at roswellpark.org  Wed May  4 15:17:43 2016
From: martin.morgan at roswellpark.org (Martin Morgan)
Date: Wed, 4 May 2016 09:17:43 -0400
Subject: [Rd] Is it possible to increase MAX_NUM_DLLS in future R
 releases?
In-Reply-To: <5729BDA6.3060106@stats.ox.ac.uk>
References: <BLU436-SMTP7203A01BDD638D733608F0CD790@phx.gbl>
	<22313.43079.748521.575179@stat.math.ethz.ch>
	<5729BDA6.3060106@stats.ox.ac.uk>
Message-ID: <5729F677.9090700@roswellpark.org>



On 05/04/2016 05:15 AM, Prof Brian Ripley wrote:
> On 04/05/2016 08:44, Martin Maechler wrote:
>>>>>>> Qin Zhu <qinzhu at outlook.com>
>>>>>>>      on Mon, 2 May 2016 16:19:44 -0400 writes:
>>
>>      > Hi,
>>      > I?m working on a Shiny app for statistical analysis. I ran into
>> this "maximal number of DLLs reached" issue recently because my app
>> requires importing many other packages.
>>
>>      > I?ve posted my question on stackoverflow
>> (http://stackoverflow.com/questions/36974206/r-maximal-number-of-dlls-reached
>> <http://stackoverflow.com/questions/36974206/r-maximal-number-of-dlls-reached>).
>>
>>
>>      > I?m just wondering is there any reason to set the maximal
>> number of DLLs to be 100, and is there any plan to increase it/not
>> hardcoding it in the future? It seems many people are also running
>> into this problem. I know I can work around this problem by modifying
>> the source, but since my package is going to be used by other people,
>> I don?t think this is a feasible solution.
>>
>>      > Any suggestions would be appreciated. Thanks!
>>      > Qin
>>
>> Increasing that number is of course "possible"... but it also
>> costs a bit (adding to the fixed memory footprint of R).
>
> And not only that.  At the time this was done (and it was once 50) the
> main cost was searching DLLs for symbols.  That is still an issue, and
> few packages exclude their DLL from symbol search so if symbols have to
> searched for a lot of DLLs will be searched.  (Registering all the
> symbols needed in a package avoids a search, and nowadays by default
> searches from a namespace are restricted to that namespace.)
>
> See
> https://cran.r-project.org/doc/manuals/r-release/R-exts.html#Registering-native-routines
> for some further details about the search mechanism.
>
>> I did not set that limit, but I'm pretty sure it was also meant
>> as reminder for the useR to "clean up" a bit in her / his R
>> session, i.e., not load package namespaces unnecessarily. I
>> cannot yet imagine that you need > 100 packages | namespaces
>> loaded in your R session. OTOH, some packages nowadays have a
>> host of dependencies, so I agree that this at least may happen
>> accidentally more frequently than in the past.
>
> I am not convinced that it is needed.  The OP says he imports many
> packages, and I doubt that more than a few are required at any one time.
>   Good practice is to load namespaces as required, using requireNamespace.

Extensive package dependencies in Bioconductor make it pretty easy to 
end up with dozen of packages attached or loaded. For instance

   library(GenomicFeatures)
   library(DESeq2)

 > length(loadedNamespaces())
[1] 63
 > length(getLoadedDLLs())
[1] 41

Qin's use case is a shiny app, presumably trying to provide relatively 
comprehensive access to a particular domain. Even if the app were to 
load / requireNamespace() (this requires considerable programming 
discipline to ensure that the namespace is available on all programming 
paths where it is used), it doesn't seem at all improbable that the user 
in an exploratory analysis would end up accessing dozens of packages 
with orthogonal dependencies. This is also the use case with Karl 
Forner's post 
https://stat.ethz.ch/pipermail/r-devel/2015-May/071104.html (adding 
library(crlmm) to the above gets us to 53 DLLs).

>
>> The real solution of course would be a code improvement that
>> starts with a relatively small number of "DLLinfo" structures
>> (say 32), and then allocates more batches (of size say 32) if
>> needed.
>
> The problem of course is that such code will rarely be exercised, and
> people have made errors on the boundaries (here multiples of 32) many
> times in the past.  (Note too that DLLs can be removed as well as added,
> another point of coding errors.)

That argues for a simple increase in the maximum number of DLLs. This 
would enable some people to have very bulky applications that pay a 
performance cost (but the cost here is in small fractions of a 
second...) in terms of symbol look-up (and collision?), but would have 
no consequence for those of us with more sane use cases.

Martin Morgan

>
>> Patches to the R sources (development trunk in subversion at
>> https://svn.r-project.org/R/trunk/ ) are very welcome!
>>
>> Martin Maechler
>> ETH Zurich  &  R Core Team
>
>
>


This email message may contain legally privileged and/or confidential information.  If you are not the intended recipient(s), or the employee or agent responsible for the delivery of this message to the intended recipient(s), you are hereby notified that any disclosure, copying, distribution, or use of this email message is prohibited.  If you have received this message in error, please notify the sender immediately by e-mail and delete this email message from your computer. Thank you.


From frederik at ofb.net  Wed May  4 21:09:06 2016
From: frederik at ofb.net (frederik at ofb.net)
Date: Wed, 4 May 2016 12:09:06 -0700
Subject: [Rd] unix readline signal handling patches
Message-ID: <20160504190906.GA12270@ofb.net>

Hello R Developers,

I posted some patches yesterday to your bug tracking system but I'm
not sure if I should have notified the mailing list as well. I haven't
gotten any responses yet.

https://bugs.r-project.org/bugzilla/show_bug.cgi?id=16603

https://bugs.r-project.org/bugzilla/show_bug.cgi?id=16604

Thank you,

Frederick


From henrik.bengtsson at gmail.com  Wed May  4 21:41:00 2016
From: henrik.bengtsson at gmail.com (Henrik Bengtsson)
Date: Wed, 4 May 2016 12:41:00 -0700
Subject: [Rd] Is it possible to retrieve the last error? (not error
	*message*)
Message-ID: <CAFDcVCSGG-wpsGFQ5X93z8caC+6VapVqYrX1iA9+55NuLW_SGg@mail.gmail.com>

Hi,

at the R prompt, is it possible to retrieve the last error (as in
condition object of class "error")?

I'm not asking for geterrmessage(), which only returns the error
message (as a character string).  I'm basically looking for a
.Last.error or .Last.condition, analogously to .Last.value for values,
which can be used when it is "too late" (not possible) to go back an
use try()/tryCatch().

Thanks,

Henrik


From dwinsemius at comcast.net  Wed May  4 22:27:46 2016
From: dwinsemius at comcast.net (David Winsemius)
Date: Wed, 4 May 2016 13:27:46 -0700
Subject: [Rd] Is it possible to retrieve the last error? (not error
	*message*)
In-Reply-To: <CAFDcVCSGG-wpsGFQ5X93z8caC+6VapVqYrX1iA9+55NuLW_SGg@mail.gmail.com>
References: <CAFDcVCSGG-wpsGFQ5X93z8caC+6VapVqYrX1iA9+55NuLW_SGg@mail.gmail.com>
Message-ID: <C6B3FBE3-D53C-4F1D-8027-B1F51975334C@comcast.net>


> On May 4, 2016, at 12:41 PM, Henrik Bengtsson <henrik.bengtsson at gmail.com> wrote:
> 
> Hi,
> 
> at the R prompt, is it possible to retrieve the last error (as in
> condition object of class "error")?
> 
> I'm not asking for geterrmessage(), which only returns the error
> message (as a character string).  I'm basically looking for a
> .Last.error or .Last.condition, analogously to .Last.value for values,
> which can be used when it is "too late" (not possible) to go back an
> use try()/tryCatch().

After looking at the code for the exposed `traceback`
>  I'm wondering if this delivers what you expect:

.traceback()[1]


> Thanks,
> 
> Henrik
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel

David Winsemius
Alameda, CA, USA


From henrik.bengtsson at gmail.com  Wed May  4 22:38:45 2016
From: henrik.bengtsson at gmail.com (Henrik Bengtsson)
Date: Wed, 4 May 2016 13:38:45 -0700
Subject: [Rd] Is it possible to retrieve the last error? (not error
	*message*)
In-Reply-To: <C6B3FBE3-D53C-4F1D-8027-B1F51975334C@comcast.net>
References: <CAFDcVCSGG-wpsGFQ5X93z8caC+6VapVqYrX1iA9+55NuLW_SGg@mail.gmail.com>
	<C6B3FBE3-D53C-4F1D-8027-B1F51975334C@comcast.net>
Message-ID: <CAFDcVCQFVC9fyu4jDdrFt-0ZSpgGKTgioooFqVBygnSPOoaN+w@mail.gmail.com>

On Wed, May 4, 2016 at 1:27 PM, David Winsemius <dwinsemius at comcast.net> wrote:
>
>> On May 4, 2016, at 12:41 PM, Henrik Bengtsson <henrik.bengtsson at gmail.com> wrote:
>>
>> Hi,
>>
>> at the R prompt, is it possible to retrieve the last error (as in
>> condition object of class "error")?
>>
>> I'm not asking for geterrmessage(), which only returns the error
>> message (as a character string).  I'm basically looking for a
>> .Last.error or .Last.condition, analogously to .Last.value for values,
>> which can be used when it is "too late" (not possible) to go back an
>> use try()/tryCatch().
>
> After looking at the code for the exposed `traceback`
>>  I'm wondering if this delivers what you expect:
>
> .traceback()[1]

Thanks, but unfortunately not:

> stop("Hello")
Error: Hello
> ex <- .traceback()[1]
> str(ex)
List of 1
 $ : chr "stop(\"Hello\")"
> inherits(ex, "condition")
[1] FALSE


I'm looking for something that returns the object of class condition, cf.

> ex <- attr(try(stop("Hello")), "condition")
Error in try(stop("Hello")) : Hello
> str(ex)
List of 2
 $ message: chr "Hello"
 $ call   : language doTryCatch(return(expr), name, parentenv, handler)
 - attr(*, "class")= chr [1:3] "simpleError" "error" "condition"
> inherits(ex, "condition")
[1] TRUE


The reason is that this object may contain additional information that
is not available in the message nor the call.  For instance, a package
may define a richer error class that captures/carries more information
about an error (e.g. a time stamp, a remote session information, ...)
and which is therefore not available via neither geterrmessage() nor
traceback().

I am aware that I might be asking for something that is not supported
and requires that the default signal handlers be modified.

/Henrik

>
>
>> Thanks,
>>
>> Henrik
>>
>> ______________________________________________
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel
>
> David Winsemius
> Alameda, CA, USA
>


From simon.urbanek at r-project.org  Wed May  4 23:26:54 2016
From: simon.urbanek at r-project.org (Simon Urbanek)
Date: Wed, 4 May 2016 17:26:54 -0400
Subject: [Rd] R process killed when allocating too large matrix (Mac OS
	X)
In-Reply-To: <CAM3-KjYqc5CvDt4yKkOEPw--1Fq-c8O8x6UfFir5x==-UwFYvw@mail.gmail.com>
References: <CAM3-KjYqc5CvDt4yKkOEPw--1Fq-c8O8x6UfFir5x==-UwFYvw@mail.gmail.com>
Message-ID: <28A5464F-80DF-4C9D-8943-2B4EFA0BE903@r-project.org>


On May 3, 2016, at 9:51 PM, Marius Hofert <marius.hofert at uwaterloo.ca> wrote:

> Dear expeRts,
> 
> The following code leads to R being killed (under Mac OS X 10.11.4; R
> installed from source; also happened under a previous unstable
> version):
> 
> m <- matrix(0, 100000, 100000)
> 
> I expected an error that a vector of this size could not be allocated.
> 
> Besides the above (a bug?), how can I find out beforehand whether or
> not a square matrix can be allocated?
> 

Can you elaborate on "leads to R being killed"? You should tell to the killer not to do it again :).

Cheers,
Simon



> Cheers,
> Marius
> 
> 
> PS: Here is the sessionInfo() output:
> 
> R version 3.3.0 (2016-05-03)
> Platform: x86_64-apple-darwin15.4.0 (64-bit)
> Running under: OS X 10.11.4 (El Capitan)
> 
> locale:
> [1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8
> 
> attached base packages:
> [1] stats     graphics  grDevices utils     datasets  methods   base
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
> 


From marius.hofert at uwaterloo.ca  Thu May  5 00:14:32 2016
From: marius.hofert at uwaterloo.ca (Marius Hofert)
Date: Wed, 4 May 2016 18:14:32 -0400
Subject: [Rd] R process killed when allocating too large matrix (Mac OS
	X)
In-Reply-To: <0e0160ec793649dda463b43d7e7d5c37@CONNHUB1.connect.uwaterloo.ca>
References: <CAM3-KjYqc5CvDt4yKkOEPw--1Fq-c8O8x6UfFir5x==-UwFYvw@mail.gmail.com>
	<0e0160ec793649dda463b43d7e7d5c37@CONNHUB1.connect.uwaterloo.ca>
Message-ID: <CAM3-Kja40deG=04U+PDNjLD=sHzQRiz_umia+wBEP77YyW5qQA@mail.gmail.com>

> Can you elaborate on "leads to R being killed"? You should tell to the killer not to do it again :).

Hi Simon!

Sure, but who do you tell it if you don't know the killer?
This is all the killer left me with, the 'crime scene' if you like :-)

> m <- matrix(0, 90000, 100000)
Killed: 9

My colleague Wayne Oldford also tried it on his Mac machine and
apparently the killer went further down the hallway to his office
now... so scary. Here is Wayne's sessionInfo():

> sessionInfo()
R version 3.2.4 (2016-03-10)
Platform: x86_64-apple-darwin13.4.0 (64-bit)
Running under: OS X 10.10.5 (Yosemite)

locale:
[1] en_CA.UTF-8/en_CA.UTF-8/en_CA.UTF-8/C/en_CA.UTF-8/en_CA.UTF-8

attached base packages:
[1] stats     graphics  grDevices utils     datasets  methods   base

loaded via a namespace (and not attached):
[1] rsconnect_0.4.1.11 tools_3.2.4
>

Cheers,
M

>
> Cheers,
> Simon


From simon.urbanek at r-project.org  Thu May  5 02:54:47 2016
From: simon.urbanek at r-project.org (Simon Urbanek)
Date: Wed, 4 May 2016 20:54:47 -0400
Subject: [Rd] R process killed when allocating too large matrix (Mac OS
	X)
In-Reply-To: <CAM3-Kja40deG=04U+PDNjLD=sHzQRiz_umia+wBEP77YyW5qQA@mail.gmail.com>
References: <CAM3-KjYqc5CvDt4yKkOEPw--1Fq-c8O8x6UfFir5x==-UwFYvw@mail.gmail.com>
	<0e0160ec793649dda463b43d7e7d5c37@CONNHUB1.connect.uwaterloo.ca>
	<CAM3-Kja40deG=04U+PDNjLD=sHzQRiz_umia+wBEP77YyW5qQA@mail.gmail.com>
Message-ID: <C9469087-2FB7-45D3-956F-CF2A743AC13E@r-project.org>


On May 4, 2016, at 6:14 PM, Marius Hofert <marius.hofert at uwaterloo.ca> wrote:

>> Can you elaborate on "leads to R being killed"? You should tell to the killer not to do it again :).
> 
> Hi Simon!
> 
> Sure, but who do you tell it if you don't know the killer?
> This is all the killer left me with, the 'crime scene' if you like :-)
> 
>> m <- matrix(0, 90000, 100000)
> Killed: 9
> 
> My colleague Wayne Oldford also tried it on his Mac machine and
> apparently the killer went further down the hallway to his office
> now... so scary. Here is Wayne's sessionInfo():
> 

Yes, indeed, scary - since it means someone is killing R which means there is not much R itself can do about it. In fact from the syslog I see

May  4 20:48:11 ginaz kernel[0]: low swap: killing pid 56256 (R)

so it's the kernel's own defense mechanism. The bad thing is that R cannot do anything about it - the kernel just decides to snipe processes it thinks are dangerous to the health of the system, and it does so without a warning.

Cheers,
Simon


>> sessionInfo()
> R version 3.2.4 (2016-03-10)
> Platform: x86_64-apple-darwin13.4.0 (64-bit)
> Running under: OS X 10.10.5 (Yosemite)
> 
> locale:
> [1] en_CA.UTF-8/en_CA.UTF-8/en_CA.UTF-8/C/en_CA.UTF-8/en_CA.UTF-8
> 
> attached base packages:
> [1] stats     graphics  grDevices utils     datasets  methods   base
> 
> loaded via a namespace (and not attached):
> [1] rsconnect_0.4.1.11 tools_3.2.4
>> 
> 
> Cheers,
> M
> 
>> 
>> Cheers,
>> Simon
> 


From marius.hofert at uwaterloo.ca  Thu May  5 03:00:29 2016
From: marius.hofert at uwaterloo.ca (Marius Hofert)
Date: Wed, 4 May 2016 21:00:29 -0400
Subject: [Rd] R process killed when allocating too large matrix (Mac OS
	X)
In-Reply-To: <9b3da5c7758b455baad7209384abe7a7@CONNHUB4.connect.uwaterloo.ca>
References: <CAM3-KjYqc5CvDt4yKkOEPw--1Fq-c8O8x6UfFir5x==-UwFYvw@mail.gmail.com>
	<0e0160ec793649dda463b43d7e7d5c37@CONNHUB1.connect.uwaterloo.ca>
	<CAM3-Kja40deG=04U+PDNjLD=sHzQRiz_umia+wBEP77YyW5qQA@mail.gmail.com>
	<9b3da5c7758b455baad7209384abe7a7@CONNHUB4.connect.uwaterloo.ca>
Message-ID: <CAM3-KjZ13TOz7x6DC+F1=9WsJFHbz4Ay0gf-fhQOv84oSRiE=w@mail.gmail.com>

Hi Simon,

thanks for your quick reply.

1) ... so you can reproduce this?
2) Do you know a way how this can be 'foreseen'? We allocate larger
matrices in the copula package depending on the user's input
dimension. It would be good to tell her/him "Your dimension is quite
large. Be aware of killers in your neighborhood"... before the killer
attacks.

Thanks & cheers,
Marius


On Wed, May 4, 2016 at 8:54 PM, Simon Urbanek
<simon.urbanek at r-project.org> wrote:
>
> On May 4, 2016, at 6:14 PM, Marius Hofert <marius.hofert at uwaterloo.ca> wrote:
>
>>> Can you elaborate on "leads to R being killed"? You should tell to the killer not to do it again :).
>>
>> Hi Simon!
>>
>> Sure, but who do you tell it if you don't know the killer?
>> This is all the killer left me with, the 'crime scene' if you like :-)
>>
>>> m <- matrix(0, 90000, 100000)
>> Killed: 9
>>
>> My colleague Wayne Oldford also tried it on his Mac machine and
>> apparently the killer went further down the hallway to his office
>> now... so scary. Here is Wayne's sessionInfo():
>>
>
> Yes, indeed, scary - since it means someone is killing R which means there is not much R itself can do about it. In fact from the syslog I see
>
> May  4 20:48:11 ginaz kernel[0]: low swap: killing pid 56256 (R)
>
> so it's the kernel's own defense mechanism. The bad thing is that R cannot do anything about it - the kernel just decides to snipe processes it thinks are dangerous to the health of the system, and it does so without a warning.
>
> Cheers,
> Simon
>


From simon.urbanek at r-project.org  Thu May  5 03:21:25 2016
From: simon.urbanek at r-project.org (Simon Urbanek)
Date: Wed, 4 May 2016 21:21:25 -0400
Subject: [Rd] R process killed when allocating too large matrix (Mac OS
	X)
In-Reply-To: <CAM3-KjZ13TOz7x6DC+F1=9WsJFHbz4Ay0gf-fhQOv84oSRiE=w@mail.gmail.com>
References: <CAM3-KjYqc5CvDt4yKkOEPw--1Fq-c8O8x6UfFir5x==-UwFYvw@mail.gmail.com>
	<0e0160ec793649dda463b43d7e7d5c37@CONNHUB1.connect.uwaterloo.ca>
	<CAM3-Kja40deG=04U+PDNjLD=sHzQRiz_umia+wBEP77YyW5qQA@mail.gmail.com>
	<9b3da5c7758b455baad7209384abe7a7@CONNHUB4.connect.uwaterloo.ca>
	<CAM3-KjZ13TOz7x6DC+F1=9WsJFHbz4Ay0gf-fhQOv84oSRiE=w@mail.gmail.com>
Message-ID: <308D9A3B-C40F-4AF7-AF1A-43DC8E1130EF@r-project.org>


On May 4, 2016, at 9:00 PM, Marius Hofert <marius.hofert at uwaterloo.ca> wrote:

> Hi Simon,
> 
> thanks for your quick reply.
> 
> 1) ... so you can reproduce this?

Yes, I can on 10.11.4.


> 2) Do you know a way how this can be 'foreseen'? We allocate larger
> matrices in the copula package depending on the user's input
> dimension. It would be good to tell her/him "Your dimension is quite
> large. Be aware of killers in your neighborhood"... before the killer
> attacks.
> 

Not directly, because the system is happy to accommodate R's request for more memory but then it will strike out of the blue. Since that decision is made by the kernel and it doesn't expose its thinking about how it feels, it's hard to tell. I couldn't find any API on OS X akin to didReceiveMemoryWarning in iOS, unfortunately.

You could guess - e.g. by checking the total system memory

int mib [] = { CTL_HW, HW_MEMSIZE };
int64_t value = 0;
size_t length = sizeof(value);
sysctl(mib, 2, &value, &length, NULL, 0);

and comparing it to the sizes involved. However, even that is not foolproof, because it all depends on the other processes' memory usage, swap space size etc. There are slightly more involved ways to query the VM system as well, but I'm not sure I'd want to go so deep into the weeds, especially since this becomes quickly highly OS-specific.

Cheers,
Simon



> Thanks & cheers,
> Marius
> 
> 
> On Wed, May 4, 2016 at 8:54 PM, Simon Urbanek
> <simon.urbanek at r-project.org> wrote:
>> 
>> On May 4, 2016, at 6:14 PM, Marius Hofert <marius.hofert at uwaterloo.ca> wrote:
>> 
>>>> Can you elaborate on "leads to R being killed"? You should tell to the killer not to do it again :).
>>> 
>>> Hi Simon!
>>> 
>>> Sure, but who do you tell it if you don't know the killer?
>>> This is all the killer left me with, the 'crime scene' if you like :-)
>>> 
>>>> m <- matrix(0, 90000, 100000)
>>> Killed: 9
>>> 
>>> My colleague Wayne Oldford also tried it on his Mac machine and
>>> apparently the killer went further down the hallway to his office
>>> now... so scary. Here is Wayne's sessionInfo():
>>> 
>> 
>> Yes, indeed, scary - since it means someone is killing R which means there is not much R itself can do about it. In fact from the syslog I see
>> 
>> May  4 20:48:11 ginaz kernel[0]: low swap: killing pid 56256 (R)
>> 
>> so it's the kernel's own defense mechanism. The bad thing is that R cannot do anything about it - the kernel just decides to snipe processes it thinks are dangerous to the health of the system, and it does so without a warning.
>> 
>> Cheers,
>> Simon
>> 
> 


From hpages at fredhutch.org  Thu May  5 03:49:35 2016
From: hpages at fredhutch.org (=?UTF-8?B?SGVydsOpIFBhZ8Oocw==?=)
Date: Wed, 4 May 2016 18:49:35 -0700
Subject: [Rd] R process killed when allocating too large matrix (Mac OS
	X)
In-Reply-To: <308D9A3B-C40F-4AF7-AF1A-43DC8E1130EF@r-project.org>
References: <CAM3-KjYqc5CvDt4yKkOEPw--1Fq-c8O8x6UfFir5x==-UwFYvw@mail.gmail.com>
	<0e0160ec793649dda463b43d7e7d5c37@CONNHUB1.connect.uwaterloo.ca>
	<CAM3-Kja40deG=04U+PDNjLD=sHzQRiz_umia+wBEP77YyW5qQA@mail.gmail.com>
	<9b3da5c7758b455baad7209384abe7a7@CONNHUB4.connect.uwaterloo.ca>
	<CAM3-KjZ13TOz7x6DC+F1=9WsJFHbz4Ay0gf-fhQOv84oSRiE=w@mail.gmail.com>
	<308D9A3B-C40F-4AF7-AF1A-43DC8E1130EF@r-project.org>
Message-ID: <572AA6AF.9040400@fredhutch.org>

Hi,

Interesting "feature" in 10.11.4. I wonder if the process is killed
before or after malloc() returns. If before, it seems very blunt:
"You're asking too much and I don't like it so I kill you now".
If after it doesn't look much better: "You're asking a lot and I
don't like it but I give it to you anyway. I'll kill you quickly
later".

Why wouldn't the kernel just refuse to give that memory instead
(i.e. malloc() returns NULL).

Just curious...

H.

On 05/04/2016 06:21 PM, Simon Urbanek wrote:
>
> On May 4, 2016, at 9:00 PM, Marius Hofert <marius.hofert at uwaterloo.ca> wrote:
>
>> Hi Simon,
>>
>> thanks for your quick reply.
>>
>> 1) ... so you can reproduce this?
>
> Yes, I can on 10.11.4.
>
>
>> 2) Do you know a way how this can be 'foreseen'? We allocate larger
>> matrices in the copula package depending on the user's input
>> dimension. It would be good to tell her/him "Your dimension is quite
>> large. Be aware of killers in your neighborhood"... before the killer
>> attacks.
>>
>
> Not directly, because the system is happy to accommodate R's request for more memory but then it will strike out of the blue. Since that decision is made by the kernel and it doesn't expose its thinking about how it feels, it's hard to tell. I couldn't find any API on OS X akin to didReceiveMemoryWarning in iOS, unfortunately.
>
> You could guess - e.g. by checking the total system memory
>
> int mib [] = { CTL_HW, HW_MEMSIZE };
> int64_t value = 0;
> size_t length = sizeof(value);
> sysctl(mib, 2, &value, &length, NULL, 0);
>
> and comparing it to the sizes involved. However, even that is not foolproof, because it all depends on the other processes' memory usage, swap space size etc. There are slightly more involved ways to query the VM system as well, but I'm not sure I'd want to go so deep into the weeds, especially since this becomes quickly highly OS-specific.
>
> Cheers,
> Simon
>
>
>
>> Thanks & cheers,
>> Marius
>>
>>
>> On Wed, May 4, 2016 at 8:54 PM, Simon Urbanek
>> <simon.urbanek at r-project.org> wrote:
>>>
>>> On May 4, 2016, at 6:14 PM, Marius Hofert <marius.hofert at uwaterloo.ca> wrote:
>>>
>>>>> Can you elaborate on "leads to R being killed"? You should tell to the killer not to do it again :).
>>>>
>>>> Hi Simon!
>>>>
>>>> Sure, but who do you tell it if you don't know the killer?
>>>> This is all the killer left me with, the 'crime scene' if you like :-)
>>>>
>>>>> m <- matrix(0, 90000, 100000)
>>>> Killed: 9
>>>>
>>>> My colleague Wayne Oldford also tried it on his Mac machine and
>>>> apparently the killer went further down the hallway to his office
>>>> now... so scary. Here is Wayne's sessionInfo():
>>>>
>>>
>>> Yes, indeed, scary - since it means someone is killing R which means there is not much R itself can do about it. In fact from the syslog I see
>>>
>>> May  4 20:48:11 ginaz kernel[0]: low swap: killing pid 56256 (R)
>>>
>>> so it's the kernel's own defense mechanism. The bad thing is that R cannot do anything about it - the kernel just decides to snipe processes it thinks are dangerous to the health of the system, and it does so without a warning.
>>>
>>> Cheers,
>>> Simon
>>>
>>
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>

-- 
Herv? Pag?s

Program in Computational Biology
Division of Public Health Sciences
Fred Hutchinson Cancer Research Center
1100 Fairview Ave. N, M1-B514
P.O. Box 19024
Seattle, WA 98109-1024

E-mail: hpages at fredhutch.org
Phone:  (206) 667-5791
Fax:    (206) 667-1319


From simon.urbanek at r-project.org  Thu May  5 04:09:04 2016
From: simon.urbanek at r-project.org (Simon Urbanek)
Date: Wed, 4 May 2016 22:09:04 -0400
Subject: [Rd] R process killed when allocating too large matrix (Mac OS
	X)
In-Reply-To: <572AA6AF.9040400@fredhutch.org>
References: <CAM3-KjYqc5CvDt4yKkOEPw--1Fq-c8O8x6UfFir5x==-UwFYvw@mail.gmail.com>
	<0e0160ec793649dda463b43d7e7d5c37@CONNHUB1.connect.uwaterloo.ca>
	<CAM3-Kja40deG=04U+PDNjLD=sHzQRiz_umia+wBEP77YyW5qQA@mail.gmail.com>
	<9b3da5c7758b455baad7209384abe7a7@CONNHUB4.connect.uwaterloo.ca>
	<CAM3-KjZ13TOz7x6DC+F1=9WsJFHbz4Ay0gf-fhQOv84oSRiE=w@mail.gmail.com>
	<308D9A3B-C40F-4AF7-AF1A-43DC8E1130EF@r-project.org>
	<572AA6AF.9040400@fredhutch.org>
Message-ID: <9CD93E8D-DA1C-4576-A42F-B102C453CE77@r-project.org>


On May 4, 2016, at 9:49 PM, Herv? Pag?s <hpages at fredhutch.org> wrote:

> Hi,
> 
> Interesting "feature" in 10.11.4. I wonder if the process is killed
> before or after malloc() returns. If before, it seems very blunt:
> "You're asking too much and I don't like it so I kill you now".
> If after it doesn't look much better: "You're asking a lot and I
> don't like it but I give it to you anyway. I'll kill you quickly
> later".
> 
> Why wouldn't the kernel just refuse to give that memory instead
> (i.e. malloc() returns NULL).
> 
> Just curious...
> 

You can google it, but this seems to be standard practice in modern OSes (including OS X and Linux) where the kernel is not actually allocating the physical memory when the application asks for it so malloc() will succeed and give only a pointer to a virtual space where it will be mapping physical memory into as needed (aka opportunistic allocation). However, when the OS figures out later that it is overcommitted, it has no good way to signal the app that it can't use what it was promised, so it will use SIGKILL. The rationale is that in most cases the kernel can scramble to fulfill the request so it gives it more flexibility in managing the memory (it can spread pages to RAM, swap, shared ,...), but when it cannot recover it has no choice but to kill the process.

I don't have the debugger open anymore, but if I recall correctly in my case the kill happened in copyVector() -> duplicate(), so it was not necessarily on the initial allocation but rather further down the line.

Cheers,
Simon



> H.
> 
> On 05/04/2016 06:21 PM, Simon Urbanek wrote:
>> 
>> On May 4, 2016, at 9:00 PM, Marius Hofert <marius.hofert at uwaterloo.ca> wrote:
>> 
>>> Hi Simon,
>>> 
>>> thanks for your quick reply.
>>> 
>>> 1) ... so you can reproduce this?
>> 
>> Yes, I can on 10.11.4.
>> 
>> 
>>> 2) Do you know a way how this can be 'foreseen'? We allocate larger
>>> matrices in the copula package depending on the user's input
>>> dimension. It would be good to tell her/him "Your dimension is quite
>>> large. Be aware of killers in your neighborhood"... before the killer
>>> attacks.
>>> 
>> 
>> Not directly, because the system is happy to accommodate R's request for more memory but then it will strike out of the blue. Since that decision is made by the kernel and it doesn't expose its thinking about how it feels, it's hard to tell. I couldn't find any API on OS X akin to didReceiveMemoryWarning in iOS, unfortunately.
>> 
>> You could guess - e.g. by checking the total system memory
>> 
>> int mib [] = { CTL_HW, HW_MEMSIZE };
>> int64_t value = 0;
>> size_t length = sizeof(value);
>> sysctl(mib, 2, &value, &length, NULL, 0);
>> 
>> and comparing it to the sizes involved. However, even that is not foolproof, because it all depends on the other processes' memory usage, swap space size etc. There are slightly more involved ways to query the VM system as well, but I'm not sure I'd want to go so deep into the weeds, especially since this becomes quickly highly OS-specific.
>> 
>> Cheers,
>> Simon
>> 
>> 
>> 
>>> Thanks & cheers,
>>> Marius
>>> 
>>> 
>>> On Wed, May 4, 2016 at 8:54 PM, Simon Urbanek
>>> <simon.urbanek at r-project.org> wrote:
>>>> 
>>>> On May 4, 2016, at 6:14 PM, Marius Hofert <marius.hofert at uwaterloo.ca> wrote:
>>>> 
>>>>>> Can you elaborate on "leads to R being killed"? You should tell to the killer not to do it again :).
>>>>> 
>>>>> Hi Simon!
>>>>> 
>>>>> Sure, but who do you tell it if you don't know the killer?
>>>>> This is all the killer left me with, the 'crime scene' if you like :-)
>>>>> 
>>>>>> m <- matrix(0, 90000, 100000)
>>>>> Killed: 9
>>>>> 
>>>>> My colleague Wayne Oldford also tried it on his Mac machine and
>>>>> apparently the killer went further down the hallway to his office
>>>>> now... so scary. Here is Wayne's sessionInfo():
>>>>> 
>>>> 
>>>> Yes, indeed, scary - since it means someone is killing R which means there is not much R itself can do about it. In fact from the syslog I see
>>>> 
>>>> May  4 20:48:11 ginaz kernel[0]: low swap: killing pid 56256 (R)
>>>> 
>>>> so it's the kernel's own defense mechanism. The bad thing is that R cannot do anything about it - the kernel just decides to snipe processes it thinks are dangerous to the health of the system, and it does so without a warning.
>>>> 
>>>> Cheers,
>>>> Simon
>>>> 
>>> 
>> 
>> ______________________________________________
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel
>> 
> 
> -- 
> Herv? Pag?s
> 
> Program in Computational Biology
> Division of Public Health Sciences
> Fred Hutchinson Cancer Research Center
> 1100 Fairview Ave. N, M1-B514
> P.O. Box 19024
> Seattle, WA 98109-1024
> 
> E-mail: hpages at fredhutch.org
> Phone:  (206) 667-5791
> Fax:    (206) 667-1319
> 


From marius.hofert at uwaterloo.ca  Thu May  5 04:25:58 2016
From: marius.hofert at uwaterloo.ca (Marius Hofert)
Date: Wed, 4 May 2016 22:25:58 -0400
Subject: [Rd] R process killed when allocating too large matrix (Mac OS
	X)
In-Reply-To: <3e8b8d2d46ac440892d2055c502b5be9@CONNHUB1.connect.uwaterloo.ca>
References: <CAM3-KjYqc5CvDt4yKkOEPw--1Fq-c8O8x6UfFir5x==-UwFYvw@mail.gmail.com>
	<0e0160ec793649dda463b43d7e7d5c37@CONNHUB1.connect.uwaterloo.ca>
	<CAM3-Kja40deG=04U+PDNjLD=sHzQRiz_umia+wBEP77YyW5qQA@mail.gmail.com>
	<9b3da5c7758b455baad7209384abe7a7@CONNHUB4.connect.uwaterloo.ca>
	<CAM3-KjZ13TOz7x6DC+F1=9WsJFHbz4Ay0gf-fhQOv84oSRiE=w@mail.gmail.com>
	<308D9A3B-C40F-4AF7-AF1A-43DC8E1130EF@r-project.org>
	<572AA6AF.9040400@fredhutch.org>
	<3e8b8d2d46ac440892d2055c502b5be9@CONNHUB1.connect.uwaterloo.ca>
Message-ID: <CAM3-KjbDejim0PSj9s5ognw4wfA=_BvD2UmfVDdmixqww2MkoA@mail.gmail.com>

Hi Simon,

... all interesting (but quite a bit above my head). I only read
'Linux' and want to throw in that this problem does not appear on
Linux (it seems). I talked about this with Martin Maechler and he
reported that the same example (on one of his machines; with NA_real_
instead of '0's in the matrix) gave:

  Error: cannot allocate vector of size 70.8 Gb
    Timing stopped at: 144.79 41.619 202.019

... but no killer around...

Cheers,
Marius


From richierocks at gmail.com  Thu May  5 08:37:42 2016
From: richierocks at gmail.com (Richard Cotton)
Date: Thu, 5 May 2016 09:37:42 +0300
Subject: [Rd] Too many spaces in deparsed complex numbers with digits17
	control option
Message-ID: <CAPp_+=eeoQcYoN6a6GT9y3DXsTj_-sNPGJGMJvXbDB5EXqdjYw@mail.gmail.com>

If you set the "digits17" control option in deparse, you get a lot of
unnecessary space in the representation of complex numbers.

> deparse(0 + 0i)
[1] "0+0i"
> deparse(0 + 0i, control = "digits17")
[1] "0 +                 0i"

As far as I can tell, the logic for this comes from this piece of
/src/main/deparse.c:

if (TYPEOF(vector) == CPLXSXP && (d->opts & DIGITS16)) {
  Rcomplex z =  COMPLEX(vector)[i];
  if (R_FINITE(z.r) && R_FINITE(z.i)) {
      snprintf(hex, 64, "%.17g + %17gi", z.r, z.i);
      strp = hex;
  } else
      strp = EncodeElement(vector, i, quote, '.');
}

I think this is a small bug, and that "%17gi" in the snprintf call
ought to be "%.17gi".

Also there shouldn't be any space around the plus sign for consistency
with the non-digits17 option.

Is this a real bug, or is it deliberate behaviour?

-- 
Regards,
Richie

Learning R
4dpiecharts.com


From richierocks at gmail.com  Thu May  5 08:59:40 2016
From: richierocks at gmail.com (Richard Cotton)
Date: Thu, 5 May 2016 09:59:40 +0300
Subject: [Rd] Is it possible to retrieve the last error? (not error
	*message*)
In-Reply-To: <CAFDcVCSGG-wpsGFQ5X93z8caC+6VapVqYrX1iA9+55NuLW_SGg@mail.gmail.com>
References: <CAFDcVCSGG-wpsGFQ5X93z8caC+6VapVqYrX1iA9+55NuLW_SGg@mail.gmail.com>
Message-ID: <CAPp_+=cHnWSxZz4fG3NHPA97cYwmXV-Cw1=_-DzTCzQhFcB17A@mail.gmail.com>

I wondered the same thing a few days ago.

https://stackoverflow.com/questions/36966036/how-to-get-the-last-error

The here's the solution from that discussion:

get_last_error <- function()
{
  tr <- .traceback()
  if(length(tr) == 0)
  {
    return(NULL)
  }
  tryCatch(eval(parse(text = tr[[1]])), error = identity)
}

Note that it uses .traceback() from R 3.3.0; you'll have to use
baseenv()$.Traceback with earlier version of R.

On 4 May 2016 at 22:41, Henrik Bengtsson <henrik.bengtsson at gmail.com> wrote:
> Hi,
>
> at the R prompt, is it possible to retrieve the last error (as in
> condition object of class "error")?
>
> I'm not asking for geterrmessage(), which only returns the error
> message (as a character string).  I'm basically looking for a
> .Last.error or .Last.condition, analogously to .Last.value for values,
> which can be used when it is "too late" (not possible) to go back an
> use try()/tryCatch().
>
> Thanks,
>
> Henrik
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel



-- 
Regards,
Richie

Learning R
4dpiecharts.com


From ligges at statistik.tu-dortmund.de  Thu May  5 11:11:35 2016
From: ligges at statistik.tu-dortmund.de (Uwe Ligges)
Date: Thu, 5 May 2016 11:11:35 +0200
Subject: [Rd] R process killed when allocating too large matrix (Mac OS
	X)
In-Reply-To: <CAM3-KjbDejim0PSj9s5ognw4wfA=_BvD2UmfVDdmixqww2MkoA@mail.gmail.com>
References: <CAM3-KjYqc5CvDt4yKkOEPw--1Fq-c8O8x6UfFir5x==-UwFYvw@mail.gmail.com>
	<0e0160ec793649dda463b43d7e7d5c37@CONNHUB1.connect.uwaterloo.ca>
	<CAM3-Kja40deG=04U+PDNjLD=sHzQRiz_umia+wBEP77YyW5qQA@mail.gmail.com>
	<9b3da5c7758b455baad7209384abe7a7@CONNHUB4.connect.uwaterloo.ca>
	<CAM3-KjZ13TOz7x6DC+F1=9WsJFHbz4Ay0gf-fhQOv84oSRiE=w@mail.gmail.com>
	<308D9A3B-C40F-4AF7-AF1A-43DC8E1130EF@r-project.org>
	<572AA6AF.9040400@fredhutch.org>
	<3e8b8d2d46ac440892d2055c502b5be9@CONNHUB1.connect.uwaterloo.ca>
	<CAM3-KjbDejim0PSj9s5ognw4wfA=_BvD2UmfVDdmixqww2MkoA@mail.gmail.com>
Message-ID: <2fa1c8e2-c692-1237-ea3c-572397038b26@statistik.tu-dortmund.de>



On 05.05.2016 04:25, Marius Hofert wrote:
> Hi Simon,
>
> ... all interesting (but quite a bit above my head). I only read
> 'Linux' and want to throw in that this problem does not appear on
> Linux (it seems). I talked about this with Martin Maechler and he
> reported that the same example (on one of his machines; with NA_real_
> instead of '0's in the matrix) gave:
>
>   Error: cannot allocate vector of size 70.8 Gb
>     Timing stopped at: 144.79 41.619 202.019
>
> ... but no killer around...

Well, with n=1. ;-)

Actually this also happens under Linux and I had my R processes killed 
more than once (and much worse also other processes so that we had to 
reboot a server, essentially). That's why we use job scheduling on 
servers for R nowadays ...

Best,
Uwe

>
> Cheers,
> Marius
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>


From ripley at stats.ox.ac.uk  Thu May  5 11:39:37 2016
From: ripley at stats.ox.ac.uk (Prof Brian Ripley)
Date: Thu, 5 May 2016 10:39:37 +0100
Subject: [Rd] R process killed when allocating too large matrix (Mac OS
	X)
In-Reply-To: <2fa1c8e2-c692-1237-ea3c-572397038b26@statistik.tu-dortmund.de>
References: <CAM3-KjYqc5CvDt4yKkOEPw--1Fq-c8O8x6UfFir5x==-UwFYvw@mail.gmail.com>
	<0e0160ec793649dda463b43d7e7d5c37@CONNHUB1.connect.uwaterloo.ca>
	<CAM3-Kja40deG=04U+PDNjLD=sHzQRiz_umia+wBEP77YyW5qQA@mail.gmail.com>
	<9b3da5c7758b455baad7209384abe7a7@CONNHUB4.connect.uwaterloo.ca>
	<CAM3-KjZ13TOz7x6DC+F1=9WsJFHbz4Ay0gf-fhQOv84oSRiE=w@mail.gmail.com>
	<308D9A3B-C40F-4AF7-AF1A-43DC8E1130EF@r-project.org>
	<572AA6AF.9040400@fredhutch.org>
	<3e8b8d2d46ac440892d2055c502b5be9@CONNHUB1.connect.uwaterloo.ca>
	<CAM3-KjbDejim0PSj9s5ognw4wfA=_BvD2UmfVDdmixqww2MkoA@mail.gmail.com>
	<2fa1c8e2-c692-1237-ea3c-572397038b26@statistik.tu-dortmund.de>
Message-ID: <572B14D9.3050005@stats.ox.ac.uk>

On 05/05/2016 10:11, Uwe Ligges wrote:
>
>
> On 05.05.2016 04:25, Marius Hofert wrote:
>> Hi Simon,
>>
>> ... all interesting (but quite a bit above my head). I only read
>> 'Linux' and want to throw in that this problem does not appear on
>> Linux (it seems). I talked about this with Martin Maechler and he
>> reported that the same example (on one of his machines; with NA_real_
>> instead of '0's in the matrix) gave:
>>
>>   Error: cannot allocate vector of size 70.8 Gb
>>     Timing stopped at: 144.79 41.619 202.019
>>
>> ... but no killer around...
>
> Well, with n=1. ;-)
>
> Actually this also happens under Linux and I had my R processes killed
> more than once (and much worse also other processes so that we had to
> reboot a server, essentially). That's why we use job scheduling on
> servers for R nowadays ...

Yes, Linux does not deal safely with running out of memory, although it 
is better than it was.  In my experience, only commercial Unices do that 
gracefully.

Have you tried setting a (virtual) memory limit on the process using the 
shell it is launched from?  I have found that to be effective on most 
OSes, at least in protecting other processes from being killed. 
However, some things do reserve excessive amounts of VM that they do not 
use and so cannot be run under a sensible limit.

-- 
Brian D. Ripley,                  ripley at stats.ox.ac.uk
Emeritus Professor of Applied Statistics, University of Oxford


From mick.jordan at oracle.com  Thu May  5 20:40:20 2016
From: mick.jordan at oracle.com (Mick Jordan)
Date: Thu, 5 May 2016 11:40:20 -0700
Subject: [Rd] Max OSX 3.3.0 and lzma
Message-ID: <572B9394.6030108@oracle.com>

I have lzma installed (in /usr/local) but R-3.3.0 configure doesn't like 
something about it:

checking for lzma_version_number in -llzma... yes
checking lzma.h usability... no
checking lzma.h presence... no
checking for lzma.h... no
configure: error: "liblzma library and headers are required"

bash-3.2$ ls /usr/local/lib/*lzma*
ls /usr/local/lib/*lzma*
/usr/local/lib/liblzma.5.dylib    /usr/local/lib/liblzma.a 
/usr/local/lib/liblzma.dylib
bash-3.2$ ls /usr/local/include/*lzma*
ls /usr/local/include/*lzma*
/usr/local/include/lzma.h

/usr/local/include/lzma:
base.h        block.h        container.h    filter.h    index.h     
lzma12.h    version.h
bcj.h        check.h        delta.h        hardware.h index_hash.h    
stream_flags.h    vli.h

I'm no configure wizard so would appreciate a hint.

Thanks
Mick Jordan


From ripley at stats.ox.ac.uk  Thu May  5 21:02:08 2016
From: ripley at stats.ox.ac.uk (Prof Brian Ripley)
Date: Thu, 5 May 2016 20:02:08 +0100
Subject: [Rd] Max OSX 3.3.0 and lzma
In-Reply-To: <572B9394.6030108@oracle.com>
References: <572B9394.6030108@oracle.com>
Message-ID: <572B98B0.4010101@stats.ox.ac.uk>

On 05/05/2016 19:40, Mick Jordan wrote:
> I have lzma installed (in /usr/local) but R-3.3.0 configure doesn't like
> something about it:
>
> checking for lzma_version_number in -llzma... yes
> checking lzma.h usability... no
> checking lzma.h presence... no
> checking for lzma.h... no
> configure: error: "liblzma library and headers are required"
>
> bash-3.2$ ls /usr/local/lib/*lzma*
> ls /usr/local/lib/*lzma*
> /usr/local/lib/liblzma.5.dylib    /usr/local/lib/liblzma.a
> /usr/local/lib/liblzma.dylib
> bash-3.2$ ls /usr/local/include/*lzma*
> ls /usr/local/include/*lzma*
> /usr/local/include/lzma.h
>
> /usr/local/include/lzma:
> base.h        block.h        container.h    filter.h    index.h
> lzma12.h    version.h
> bcj.h        check.h        delta.h        hardware.h index_hash.h
> stream_flags.h    vli.h
>
> I'm no configure wizard so would appreciate a hint.

Look at config.log.

And please follow the posting guide and give at least the OS, preferably 
full details of your setup.  It looks like this is OS X (so this is not 
the right list and did you get liblzma from r.reseach.att.com?), and 
I've just scrubbed an explanation I wrote about an Oracle OS called 
Solaris ....

>
> Thanks
> Mick Jordan
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


-- 
Brian D. Ripley,                  ripley at stats.ox.ac.uk
Emeritus Professor of Applied Statistics, University of Oxford


From joshmobrien at gmail.com  Thu May  5 21:50:59 2016
From: joshmobrien at gmail.com (Josh O'Brien)
Date: Thu, 5 May 2016 12:50:59 -0700
Subject: [Rd] In R for Windows RGui,
 plain text help files open up at bottom of help file
Message-ID: <CAOwKfPQ5abATMa6xqq6f1ssrAzQ8PUop2G3LaayAVKGCtks86g@mail.gmail.com>

Hello,

When using the R for Windows installer, I typically choose a
customized startup and
specify "Plain text" (rather than "HTML help") as my preferred help
style. In R-3.3.0,
R-3.2.5, and (IIRC) R-3.2.4 (but not R-3.2.3), the plain text help
files that open up when
using `help()` or `?` do so with the text 'scrolled' down all the way
to the bottom.

It's a minor inconvenience, but probably worth mentioning.

In case it helps, here's my sessionInfo:

R version 3.3.0 (2016-05-03)
Platform: x86_64-w64-mingw32/x64 (64-bit)
Running under: Windows 7 x64 (build 7601) Service Pack 1

locale:
[1] LC_COLLATE=English_United States.1252
[2] LC_CTYPE=English_United States.1252
[3] LC_MONETARY=English_United States.1252
[4] LC_NUMERIC=C
[5] LC_TIME=English_United States.1252

attached base packages:
[1] stats     graphics  grDevices utils     datasets  methods   base

loaded via a namespace (and not attached):
[1] tools_3.3.0



Cheers,

Josh O'Brien


From luke-tierney at uiowa.edu  Thu May  5 22:07:31 2016
From: luke-tierney at uiowa.edu (luke-tierney at uiowa.edu)
Date: Thu, 5 May 2016 15:07:31 -0500
Subject: [Rd] Storage of byte code-compiled functions in sysdata.rda
In-Reply-To: <5725F98E.5040609@web.de>
References: <5725ED5B.20208@web.de>
	<704D9B27-D7A7-4B46-A2F4-82E0582AC6B5@uiowa.edu>
	<5725F98E.5040609@web.de>
Message-ID: <alpine.DEB.2.10.1605051445500.12737@luke-Latitude>

I can't reproduce the more complex version. But the package on CRAN
fails in the same way on 3.2.3 and 3.3.0.

The problem is that your sysdata.rda includes a function that is
generating this error. If you do

f <- getFromNamespace(".RMXE", ns ="RobAStRDA")[["GEVFamily"]][["fun.N"]][[1]]
g <- get("fct", environment(f))

and look at the byte code for g with compiler::disassemble or the
utility I'll paste in below you get

> getbc(g)
list(8L, BCMISMATCH.OP)

The only way you can get a file like this is to byte compile and save
in a version of R with a newer byte code version (the 8L) and then
load and resave in an older version of R. If you load and run this
code in an older (or newer) version of R it will revert to the
standard interpeter using eval but will issue a warning once per
session. If you try to run it in an R with byte code version 8L you
get this error.

I can make a small change to that this becomes a once-per-session
warning, but even then you won't actually be running compiled code.

So I think your task is to figure out how you are ended up with a
sysdata.rda file created in this incompatible way. Something to look
for might be whether a call from within your R-devel somehow manages
to run an R process with an older R version.

Let me know what you find out.

luke

Here is the little utility, adapted from compiler::disassemble:

getbc <- function (code) 
{
     .CodeSym <- as.name(".Code")
     disasm.const <- function(x) if (typeof(x) == "list" && length(x) >
         0 && identical(x[[1]], .CodeSym))
         disasm(x)
     else x
     disasm <- function(code) {
         code[[2]] <- compiler:::bcDecode(code[[2]])
         code[[3]] <- lapply(code[[3]], disasm.const)
         code
     }
     if (typeof(code) == "closure") {
         code <- .Internal(bodyCode(code))
         if (typeof(code) != "bytecode")
             stop("function is not compiled")
     }
     invisible(dput(disasm(.Internal(disassemble(code)))[[2]]))
}

On Sun, 1 May 2016, Peter Ruckdeschel wrote:

> Thanks, Luke, for having a look to it.
>
> Sure, I can give you some reproducible example -- even in two degrees of
> completeness ;-): see below.
>
> Thanks again, Peter
>
> %-----------------------------------
> (I) first example
> %-----------------------------------
> Just to reproduce the error, on r-devel, try:
>
> install.packages("RobAStRDA")
> require(RobAStRDA)
> getFromNamespace(".RMXE", ns = "RobAStRDA")[["GEVFamily"]][["fun.N"]][[1]](1.3)
>
> %-----------------------------------
> (II) an example also giving the context
> %-----------------------------------
> For the "complete" story, not only the R-code needs to be given, but also the
> preparation steps to produce the packages on the right R version;
>
> so please follow steps (1)--(6) below; I am not 100% sure whether this already gives
> you all information needed for this, but if not so please let me know.
>
> (1) create a minimal R-package "InterpolTry"
>      with byte-compilation on in the DESCRIPTION file
>      and with stats::approxfun imported in the NAMESPACE file
>
> (2) in an R session on R-devel do
>
> require(InterpolTry)
> x <- 1:100
> y <- 1:100
> fun <- approxfun(x,y)
> ## revise the next line accordingly to your local settings
> SrcRPathInterpolTry <- <path_to_(source-)R-folder_of_InterpolTry>
> RdaFile <- file.path(SrcRPathInterpolTry, "sysdata.rda")
> save(fun, file = RdaFile)
> tools::resaveRdaFiles(RdaFile)
>
> (3) re-build package InterpolTry and re-install it
>
> (4) create a minimal R package "UseInterpolTry", again
>      with byte-compilation on in the DESCRIPTION file
>      and with stats::approxfun and package "InterpolTry"
>      imported in the NAMESPACE file
>
> (5) in the R folder of R package "UseInterpolTry" write a function
>      useInterpolFct()  which goes like this
>
>      useInterpolFct <- function(x){
>               fun <- getFromNamespace("fun", ns = "InterpolTry")
>               fun(x)
>      }
>
>     export this function in the namespace and create an .Rd file to it
>
> (6) (re-)build package "UseInterpolTry" and (re-)install it and try
>
> require(UseInterpolTry)
> useInterpolFct(5)
>
> Steps (1)--(6) work with R-3.1.3, but no longer with R-devel.
>
>
>
> Am 01.05.2016 um 14:12 schrieb Tierney, Luke:
>> Can you provide a complete reproducible example?
>>
>> Sent from my iPhone
>>
>>> On May 1, 2016, at 6:51 AM, Peter Ruckdeschel <peter.ruckdeschel at web.de> wrote:
>>>
>>> Hi r-devels,
>>>
>>> we are seeing a new problem with our packages RobAStRDA (just new on CRAN, thanks
>>> to Uwe and Kurt!) and RobExtremes (to be submitted).
>>>
>>> It must be something recent with the way you internally treat/store byte-code compiled
>>> functions, as we have no problems with R-3.1.3, but do see an "Error in fct(x) : byte code
>>> version mismatch" with R-devel SVNrev r70532.
>>>
>>> Background:
>>> Starting from several x-y grids, in the sysdata.rda file of RobAStRDA, we store the results
>>> of calls to approxfun/splinefun to these grids from within a session with pkg RobAStRDA
>>> require()d.  From pkg RobExtremes we then call these interpolating functions by means of
>>> a call (essentially) as:
>>>
>>> getFromNamespace(".RMXE", ns = "RobAStRDA")[["GEVFamily"]][["fun.N"]][[1]](1.3)
>>>
>>> upon which we get the announced "Error in fct(x) : byte code version mismatch" while the same
>>> code does work for R-3.1.3.
>>>
>>> The list element "fun.N" in the above call already accounts for a different behaviour for
>>> pre R-3.0.0 (would have given "fun.O") and post R-3.0.0 ("fun.N") results of approxfun/
>>> splinefun, but the interpolating functions in branch "fun.N" have been produced in
>>> R-devel SVNrev r70532, so we would have expected our code getFromNamespace(.....) above to
>>> work in R-devel as well.
>>>
>>> Could you give us any hints how to
>>>
>>> (a) store the interpolating functions resulting from approxfun/splinefun in pkg RobAStRDA
>>>    correctly in recent R-versions and
>>> (b) call these functions in pkg RobExtremes ?
>>>
>>> We already did import stats::approxfun and stats::splinefun into the NAMESPACEs of pkgs
>>> RobAStRDA and RobExtremes.
>>>
>>> Thanks for your help already,
>>> Peter
>>>
>>>
>>> ---
>>> Diese E-Mail wurde von Avast Antivirus-Software auf Viren gepr?ft.
>>> https://www.avast.com/antivirus
>>>
>>> ______________________________________________
>>> R-devel at r-project.org mailing list
>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>
>
> ---
> Diese E-Mail wurde von Avast Antivirus-Software auf Viren gepr?ft.
> https://www.avast.com/antivirus
>
>

-- 
Luke Tierney
Ralph E. Wareham Professor of Mathematical Sciences
University of Iowa                  Phone:             319-335-3386
Department of Statistics and        Fax:               319-335-3017
    Actuarial Science
241 Schaeffer Hall                  email:   luke-tierney at uiowa.edu
Iowa City, IA 52242                 WWW:  http://www.stat.uiowa.edu

From ggrothendieck at gmail.com  Fri May  6 00:47:30 2016
From: ggrothendieck at gmail.com (Gabor Grothendieck)
Date: Thu, 5 May 2016 18:47:30 -0400
Subject: [Rd] ctrl-R in Rgui
Message-ID: <CAP01uR=4JjGLksQo+=_8m2yUsRGg6xXeSdCgmRa=LqHy+JdFzQ@mail.gmail.com>

When in the Rgui editor sometimes ctrl-R does not cause anything to be
sent to the R console.

It can be reproduced like this:

- when in the Rgui console press ctrl-F N to get a new editor window
- enter: pi + 3 followed by Enter
- while still in the editor window press ctrl-A ctrl-R and pi + 3 gets
entered into the console and runs as expected
- while still in the editor window press ctrl-A ctrl-R again

In the last case nothing happens whereas one would have expected it to
be entered into the console again and run again.

I am using [1] "R version 3.3.0 Patched (2016-05-03 r70575)"



-- 
Statistics & Software Consulting
GKX Group, GKX Associates Inc.
tel: 1-877-GKX-GROUP
email: ggrothendieck at gmail.com


From henrik.bengtsson at gmail.com  Fri May  6 03:17:11 2016
From: henrik.bengtsson at gmail.com (Henrik Bengtsson)
Date: Thu, 5 May 2016 18:17:11 -0700
Subject: [Rd] Is it possible to retrieve the last error? (not error
	*message*)
In-Reply-To: <CAPp_+=cHnWSxZz4fG3NHPA97cYwmXV-Cw1=_-DzTCzQhFcB17A@mail.gmail.com>
References: <CAFDcVCSGG-wpsGFQ5X93z8caC+6VapVqYrX1iA9+55NuLW_SGg@mail.gmail.com>
	<CAPp_+=cHnWSxZz4fG3NHPA97cYwmXV-Cw1=_-DzTCzQhFcB17A@mail.gmail.com>
Message-ID: <CAFDcVCTA_7bVPWMX5BH6RPzen8LvadNtpNtOc8VhCY9Rcrt1Sg@mail.gmail.com>

Thanks.

As mentioned in that Stackoverflow thread, this requires re-evaluation
of the problematic code, which may or may not work (in addition to
taking time).

The closest I get to a solution, but which also requires being
proactive, is to use options(error=...) to record the condition
signaled by stop().  However, contrary to try()/tryCatch(), this is an
option that can be on all the time.  It can be automatically enabled
by setting it in for instance .Rprofile.

## This can be placed in .Rprofile
local({
  recordStop <- function(...) {
    ## Find the stop() frame
    frames <- sys.frames()
    args <- names(formals(base::stop))
    isStop <- lapply(frames, FUN=function(f) all(args %in% names(f)))
    idx <- which(unlist(isStop))[1]
    frame <- frames[[idx]]

    ## Was stop() called with a condition or a message?
    vars <- names(frame)
    if ("cond" %in% vars) {
      .Last.error <- frame$cond
    } else {
      msg <- eval(quote(.makeMessage(..., domain=domain)), envir=frame)
      call <- if (frame$call.) sys.calls()[[1]] else NULL
      .Last.error <- simpleError(msg, call=call)
    }

    assign(".Last.error", .Last.error, envir=.GlobalEnv)
  } ## recordStop()

  options(error=recordStop)
})


Then it can be used as:

## Requires options(error=recordStop)

## stop() at the prompt
stop("Hello")
## Error: Hello
print(.Last.error)
## <simpleError in stop("Hello"): Hello>
str(.Last.error)
# List of 3
#  $ message: chr "woops"
#  $ call   : NULL
#  $ value  : num 2
#  - attr(*, "class")= chr [1:4] "MyError" "simpleError" "error" "condition"


## stop() in a function
foo <- function() stop("woops")
ex <- tryCatch(foo(), error = function(ex) ex)
print(ex)
## <simpleError in foo(): woops>
foo()
## Error in foo() : woops
print(.Last.error)
## <simpleError in foo(): woops>
## Assert identical results
stopifnot(all.equal(.Last.error, ex))


## stop() in a nested call
bar <- function() foo()
ex <- tryCatch(bar(), error = function(ex) ex)
# <simpleError in foo(): woops>
bar()
# Error in foo() : woops
print(.Last.error)
# <simpleError in bar(): woops>
## Assert identical results
stopifnot(all.equal(.Last.error, ex))


## A custom error class
MyError <- function(..., value=0) {
  ex <- simpleError(...)
  ex$value <- value
  class(ex) <- c("MyError", class(ex))
  ex
}


## stop() from prompt
err <- MyError("woops", value=1L)
ex <- tryCatch(stop(err), error = function(ex) ex)
print(ex)
# <MyError: woops>
stop(err)
## Error: woops
print(.Last.error)
# <MyError: woops>
## Assert identical results
stopifnot(all.equal(.Last.error, ex))

## stop() in a function
yo <- function(value=1) stop(MyError("woops", value=value))
ex <- tryCatch(yo(), error = function(ex) ex)
print(ex)
# <MyError: woops>
yo()
# Error: woops
print(.Last.error)
# <MyError: woops>
## Assert identical results
stopifnot(all.equal(.Last.error, ex))

## stop() in a nested call
yeah <- function(value=2) yo(value=value)
ex <- tryCatch(yeah(), error = function(ex) ex)
print(ex)
# <MyError: woops>
yeah()
# Error: woops
print(.Last.error)
# <MyError: woops>
stopifnot(all.equal(.Last.error, ex))
str(.Last.error)
# List of 3
#  $ message: chr "woops"
#  $ call   : NULL
#  $ value  : num 2
#  - attr(*, "class")= chr [1:4] "MyError" "simpleError" "error" "condition"


/Henrik


On Wed, May 4, 2016 at 11:59 PM, Richard Cotton <richierocks at gmail.com> wrote:
> I wondered the same thing a few days ago.
>
> https://stackoverflow.com/questions/36966036/how-to-get-the-last-error
>
> The here's the solution from that discussion:
>
> get_last_error <- function()
> {
>   tr <- .traceback()
>   if(length(tr) == 0)
>   {
>     return(NULL)
>   }
>   tryCatch(eval(parse(text = tr[[1]])), error = identity)
> }
>
> Note that it uses .traceback() from R 3.3.0; you'll have to use
> baseenv()$.Traceback with earlier version of R.
>
> On 4 May 2016 at 22:41, Henrik Bengtsson <henrik.bengtsson at gmail.com> wrote:
>> Hi,
>>
>> at the R prompt, is it possible to retrieve the last error (as in
>> condition object of class "error")?
>>
>> I'm not asking for geterrmessage(), which only returns the error
>> message (as a character string).  I'm basically looking for a
>> .Last.error or .Last.condition, analogously to .Last.value for values,
>> which can be used when it is "too late" (not possible) to go back an
>> use try()/tryCatch().
>>
>> Thanks,
>>
>> Henrik
>>
>> ______________________________________________
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel
>
>
>
> --
> Regards,
> Richie
>
> Learning R
> 4dpiecharts.com


From suharto_anggono at yahoo.com  Fri May  6 10:05:26 2016
From: suharto_anggono at yahoo.com (Suharto Anggono Suharto Anggono)
Date: Fri, 6 May 2016 08:05:26 +0000 (UTC)
Subject: [Rd] Suggestion on default 'levels' in 'factor'
References: <212224459.248584.1462521926339.JavaMail.yahoo.ref@mail.yahoo.com>
Message-ID: <212224459.248584.1462521926339.JavaMail.yahoo@mail.yahoo.com>

At first read, the logic of the following fragment in code of function 'factor' was not clear to me.
    if (missing(levels)) {
	y <- unique(x, nmax = nmax)
	ind <- sort.list(y) # or possibly order(x) which is more (too ?) tolerant
	y <- as.character(y)
	levels <- unique(y[ind])
    }

Code similar to the originally proposed in https://stat.ethz.ch/pipermail/r-devel/2009-May/053316.html is more readable to me.

I suggest using this.
    if (missing(levels))
	levels <- unique(as.character(
            sort.int(unique(x, nmax = nmax), na.last = TRUE)# or possibly sort(x) which is more (too ?) tolerant
            ))

I assume that as.character(y)[sort.list(y)] is equivalent to as.character(sort.int(y, na.last = TRUE)). So, what I suggest above has the same effect as code in current 'factor'.  Function 'sort.int' instead of 'sort' to be like 'sort.list' that fails for non-atomic input.

What I suggest is similar in form to default 'levels' in 'factor' in R before version 2.10.0, which is
sort(unique.default(x), na.last = TRUE)

If this suggestion is used, the help page for 'factor' can be changed to say "(by 'sort.int')" instead of "(by 'sort.list')".


From qinzhu at outlook.com  Fri May  6 17:33:37 2016
From: qinzhu at outlook.com (Qin Zhu)
Date: Fri, 6 May 2016 11:33:37 -0400
Subject: [Rd] Is it possible to increase MAX_NUM_DLLS in future R
	releases?
In-Reply-To: <5729F677.9090700@roswellpark.org>
References: <BLU436-SMTP7203A01BDD638D733608F0CD790@phx.gbl>
	<22313.43079.748521.575179@stat.math.ethz.ch>
	<5729BDA6.3060106@stats.ox.ac.uk>
	<5729F677.9090700@roswellpark.org>
Message-ID: <BLU436-SMTP6987676751F4733469CE40CD7D0@phx.gbl>

Thanks for all your great answers. 

The app I?m working on is indeed an exploratory data analysis tool for gene expression, which requires a bunch of bioconductor packages. 

I guess for now, my best solution is to divide my app into modules and load/unload packages as the user switch from one module to another.

This brought me another question: it seems that unload package with the detach/unloadNamespace function does not unload the DLLs, or in the case of the "SCDE" package, not all dependent DLLs:

> length(getLoadedDLLs())
[1] 9
> requireNamespace("scde")
Loading required namespace: scde
> length(getLoadedDLLs())
[1] 34
> unloadNamespace("scde")
now dyn.unload("/Library/Frameworks/R.framework/Versions/3.3/Resources/library/scde/libs/scde.so") ...
> length(getLoadedDLLs())
[1] 33

Does that mean I should use dyn.unload to unload whatever I think is associated with that package when the user?s done using it? I?m a little nervous about this because this seems to be OS dependent and previous versions of my app are running on both windows and macs. 

Any suggestions would be appreciated, and I?d appreciate if the MAX_NUM_DLLS can be increased.

Thanks,
Qin


> On May 4, 2016, at 9:17 AM, Martin Morgan <martin.morgan at roswellpark.org> wrote:
> 
> 
> 
> On 05/04/2016 05:15 AM, Prof Brian Ripley wrote:
>> On 04/05/2016 08:44, Martin Maechler wrote:
>>>>>>>> Qin Zhu <qinzhu at outlook.com>
>>>>>>>>     on Mon, 2 May 2016 16:19:44 -0400 writes:
>>> 
>>>     > Hi,
>>>     > I?m working on a Shiny app for statistical analysis. I ran into
>>> this "maximal number of DLLs reached" issue recently because my app
>>> requires importing many other packages.
>>> 
>>>     > I?ve posted my question on stackoverflow
>>> (http://stackoverflow.com/questions/36974206/r-maximal-number-of-dlls-reached
>>> <http://stackoverflow.com/questions/36974206/r-maximal-number-of-dlls-reached>).
>>> 
>>> 
>>>     > I?m just wondering is there any reason to set the maximal
>>> number of DLLs to be 100, and is there any plan to increase it/not
>>> hardcoding it in the future? It seems many people are also running
>>> into this problem. I know I can work around this problem by modifying
>>> the source, but since my package is going to be used by other people,
>>> I don?t think this is a feasible solution.
>>> 
>>>     > Any suggestions would be appreciated. Thanks!
>>>     > Qin
>>> 
>>> Increasing that number is of course "possible"... but it also
>>> costs a bit (adding to the fixed memory footprint of R).
>> 
>> And not only that.  At the time this was done (and it was once 50) the
>> main cost was searching DLLs for symbols.  That is still an issue, and
>> few packages exclude their DLL from symbol search so if symbols have to
>> searched for a lot of DLLs will be searched.  (Registering all the
>> symbols needed in a package avoids a search, and nowadays by default
>> searches from a namespace are restricted to that namespace.)
>> 
>> See
>> https://cran.r-project.org/doc/manuals/r-release/R-exts.html#Registering-native-routines
>> for some further details about the search mechanism.
>> 
>>> I did not set that limit, but I'm pretty sure it was also meant
>>> as reminder for the useR to "clean up" a bit in her / his R
>>> session, i.e., not load package namespaces unnecessarily. I
>>> cannot yet imagine that you need > 100 packages | namespaces
>>> loaded in your R session. OTOH, some packages nowadays have a
>>> host of dependencies, so I agree that this at least may happen
>>> accidentally more frequently than in the past.
>> 
>> I am not convinced that it is needed.  The OP says he imports many
>> packages, and I doubt that more than a few are required at any one time.
>>  Good practice is to load namespaces as required, using requireNamespace.
> 
> Extensive package dependencies in Bioconductor make it pretty easy to end up with dozen of packages attached or loaded. For instance
> 
>  library(GenomicFeatures)
>  library(DESeq2)
> 
> > length(loadedNamespaces())
> [1] 63
> > length(getLoadedDLLs())
> [1] 41
> 
> Qin's use case is a shiny app, presumably trying to provide relatively comprehensive access to a particular domain. Even if the app were to load / requireNamespace() (this requires considerable programming discipline to ensure that the namespace is available on all programming paths where it is used), it doesn't seem at all improbable that the user in an exploratory analysis would end up accessing dozens of packages with orthogonal dependencies. This is also the use case with Karl Forner's post https://stat.ethz.ch/pipermail/r-devel/2015-May/071104.html <https://stat.ethz.ch/pipermail/r-devel/2015-May/071104.html> (adding library(crlmm) to the above gets us to 53 DLLs).
> 
>> 
>>> The real solution of course would be a code improvement that
>>> starts with a relatively small number of "DLLinfo" structures
>>> (say 32), and then allocates more batches (of size say 32) if
>>> needed.
>> 
>> The problem of course is that such code will rarely be exercised, and
>> people have made errors on the boundaries (here multiples of 32) many
>> times in the past.  (Note too that DLLs can be removed as well as added,
>> another point of coding errors.)
> 
> That argues for a simple increase in the maximum number of DLLs. This would enable some people to have very bulky applications that pay a performance cost (but the cost here is in small fractions of a second...) in terms of symbol look-up (and collision?), but would have no consequence for those of us with more sane use cases.
> 
> Martin Morgan
> 
>> 
>>> Patches to the R sources (development trunk in subversion at
>>> https://svn.r-project.org/R/trunk/ <https://svn.r-project.org/R/trunk/> ) are very welcome!
>>> 
>>> Martin Maechler
>>> ETH Zurich  &  R Core Team
>> 
>> 
>> 
> 
> 
> This email message may contain legally privileged and/or confidential information.  If you are not the intended recipient(s), or the employee or agent responsible for the delivery of this message to the intended recipient(s), you are hereby notified that any disclosure, copying, distribution, or use of this email message is prohibited.  If you have received this message in error, please notify the sender immediately by e-mail and delete this email message from your computer. Thank you.


	[[alternative HTML version deleted]]


From kirill.mueller at ivt.baug.ethz.ch  Mon May  9 16:07:21 2016
From: kirill.mueller at ivt.baug.ethz.ch (=?UTF-8?Q?Kirill_M=c3=bcller?=)
Date: Mon, 9 May 2016 16:07:21 +0200
Subject: [Rd] Regression in match() in R 3.3.0 when matching strings with
 different character encodings
Message-ID: <57309999.4050302@ivt.baug.ethz.ch>

Hi


I think the following behavior is a regression from R 3.2.5:

 > match(iconv(  c("\u00f8", "A"), from = "UTF8", to  = "latin1" ), 
"\u00f8")
[1]  1 NA
 > match(iconv(  c("\u00f8"), from = "UTF8", to  = "latin1" ), "\u00f8")
[1] NA
 > match(iconv(  c("\u00f8"), from = "UTF8", to  = "latin1" ), "\u00f8", 
incomparables = NA)
[1] 1

I'm seeing this in R 3.3.0 on both Windows and Ubuntu 15.10.

The specific behavior makes me think this is related to the following 
NEWS entry:

match(x, table) is faster (sometimes by an order of magnitude) when x is 
of length one and incomparables is unchanged (PR#16491).


Best regards

Kirill


From haverty.peter at gene.com  Mon May  9 18:47:48 2016
From: haverty.peter at gene.com (Peter Haverty)
Date: Mon, 9 May 2016 09:47:48 -0700
Subject: [Rd] Regression in match() in R 3.3.0 when matching strings
 with different character encodings
In-Reply-To: <57309999.4050302@ivt.baug.ethz.ch>
References: <57309999.4050302@ivt.baug.ethz.ch>
Message-ID: <CAGh0NYpi3fEc70szuKFRMhbuhx=TrGMt0QfCcgWBFHVDz9GbcQ@mail.gmail.com>

Dear Kirill,

You are correct, that is a new bug introduced in PR16491. The appropriate
fix and regression tests have been added via PR16885, which has been merged
into trunk. I believe that means the fix will be released with R 3.3.1.

I checked your example and the second "match" now properly returns 1 with
the patched code.

Please have a look at
https://bugs.r-project.org/bugzilla3/show_bug.cgi?id=16885
http://developer.r-project.org/blosxom.cgi/R-devel/NEWS

Thank you for your report. I hope the benefits of this speedup will
eventually outweigh this unfortunate bug in my PR16491.

Regards,

Pete

____________________
Peter M. Haverty, Ph.D.

	[[alternative HTML version deleted]]


From jeroenooms at gmail.com  Tue May 10 01:08:00 2016
From: jeroenooms at gmail.com (Jeroen Ooms)
Date: Tue, 10 May 2016 01:08:00 +0200
Subject: [Rd] R process killed when allocating too large matrix (Mac OS
	X)
In-Reply-To: <572B14D9.3050005@stats.ox.ac.uk>
References: <CAM3-KjYqc5CvDt4yKkOEPw--1Fq-c8O8x6UfFir5x==-UwFYvw@mail.gmail.com>
	<0e0160ec793649dda463b43d7e7d5c37@CONNHUB1.connect.uwaterloo.ca>
	<CAM3-Kja40deG=04U+PDNjLD=sHzQRiz_umia+wBEP77YyW5qQA@mail.gmail.com>
	<9b3da5c7758b455baad7209384abe7a7@CONNHUB4.connect.uwaterloo.ca>
	<CAM3-KjZ13TOz7x6DC+F1=9WsJFHbz4Ay0gf-fhQOv84oSRiE=w@mail.gmail.com>
	<308D9A3B-C40F-4AF7-AF1A-43DC8E1130EF@r-project.org>
	<572AA6AF.9040400@fredhutch.org>
	<3e8b8d2d46ac440892d2055c502b5be9@CONNHUB1.connect.uwaterloo.ca>
	<CAM3-KjbDejim0PSj9s5ognw4wfA=_BvD2UmfVDdmixqww2MkoA@mail.gmail.com>
	<2fa1c8e2-c692-1237-ea3c-572397038b26@statistik.tu-dortmund.de>
	<572B14D9.3050005@stats.ox.ac.uk>
Message-ID: <CABFfbXtm5hOW+ah_bjtnP5QproRnGXBtPUsKDK54SXqGfQu=Qg@mail.gmail.com>

On 05/05/2016 10:11, Uwe Ligges wrote:
> Actually this also happens under Linux and I had my R processes killed
> more than once (and much worse also other processes so that we had to
> reboot a server, essentially).

I found that setting RLIMIT_AS [1] works very well on Linux. But this
requires that you cap memory to some fixed value.

> library(RAppArmor)
> rlimit_as(1e9)
> rnorm(1e9)
Error: cannot allocate vector of size 7.5 Gb

The RAppArmor package has many other utilities to protect your server
such from a mis-behaving process such as limiting cpu time
(RLIMIT_CPU), fork bombs (RLIMIT_NPROC) and file sizes (RLIMIT_FSIZE).

[1] http://linux.die.net/man/2/getrlimit


From maechler at stat.math.ethz.ch  Tue May 10 08:40:25 2016
From: maechler at stat.math.ethz.ch (Martin Maechler)
Date: Tue, 10 May 2016 08:40:25 +0200
Subject: [Rd] Regression in match() in R 3.3.0 when matching strings
 with different character encodings
In-Reply-To: <CAGh0NYpi3fEc70szuKFRMhbuhx=TrGMt0QfCcgWBFHVDz9GbcQ@mail.gmail.com>
References: <57309999.4050302@ivt.baug.ethz.ch>
	<CAGh0NYpi3fEc70szuKFRMhbuhx=TrGMt0QfCcgWBFHVDz9GbcQ@mail.gmail.com>
Message-ID: <22321.33369.653084.726426@stat.math.ethz.ch>

>>>>> Peter Haverty <haverty.peter at gene.com>
>>>>>     on Mon, 9 May 2016 09:47:48 -0700 writes:

    > Dear Kirill,
    > You are correct, that is a new bug introduced in PR16491. The appropriate
    > fix and regression tests have been added via PR16885, which has been merged
    > into trunk. I believe that means the fix will be released with R 3.3.1.

Yes, definitely.
Kirill, as seem to use code which does trigger the bug, you may want to
switch using 'R-patched', i.e., 

  > R.version.string
  [1] "R version 3.3.0 Patched (2016-05-09 r70591)"

   ( where the subversion revision must be >= 70591 )

    > I checked your example and the second "match" now properly returns 1 with
    > the patched code.

    > Please have a look at
    > https://bugs.r-project.org/bugzilla3/show_bug.cgi?id=16885
    > http://developer.r-project.org/blosxom.cgi/R-devel/NEWS

    > Thank you for your report. I hope the benefits of this speedup will
    > eventually outweigh this unfortunate bug in my PR16491.

I'm pretty sure that your hope will be fulfilled.

    > Regards,
    > Pete
    > ____________________
    > Peter M. Haverty, Ph.D.

Martin Maechler, ETH Zurich


From maechler at stat.math.ethz.ch  Tue May 10 08:57:25 2016
From: maechler at stat.math.ethz.ch (Martin Maechler)
Date: Tue, 10 May 2016 08:57:25 +0200
Subject: [Rd] Is it possible to increase MAX_NUM_DLLS in future R
	releases?
In-Reply-To: <BLU436-SMTP6987676751F4733469CE40CD7D0@phx.gbl>
References: <BLU436-SMTP7203A01BDD638D733608F0CD790@phx.gbl>
	<22313.43079.748521.575179@stat.math.ethz.ch>
	<5729BDA6.3060106@stats.ox.ac.uk>
	<5729F677.9090700@roswellpark.org>
	<BLU436-SMTP6987676751F4733469CE40CD7D0@phx.gbl>
Message-ID: <22321.34389.206834.359803@stat.math.ethz.ch>

>>>>> Qin Zhu <qinzhu at outlook.com>
>>>>>     on Fri, 6 May 2016 11:33:37 -0400 writes:

    > Thanks for all your great answers. 
    > The app I?m working on is indeed an exploratory data analysis tool for gene expression, which requires a bunch of bioconductor packages. 

    > I guess for now, my best solution is to divide my app into modules and load/unload packages as the user switch from one module to another.

    > This brought me another question: it seems that unload package with the detach/unloadNamespace function does not unload the DLLs, or in the case of the "SCDE" package, not all dependent DLLs:

    >> length(getLoadedDLLs())
    > [1] 9
    >> requireNamespace("scde")
    > Loading required namespace: scde
    >> length(getLoadedDLLs())
    > [1] 34
    >> unloadNamespace("scde")
    > now dyn.unload("/Library/Frameworks/R.framework/Versions/3.3/Resources/library/scde/libs/scde.so") ...
    >> length(getLoadedDLLs())
    > [1] 33

    > Does that mean I should use dyn.unload to unload whatever I think is associated with that package when the user?s done using it? I?m a little nervous about this because this seems to be OS dependent and previous versions of my app are running on both windows and macs. 

Hmm, I thought that  dyn.unload() would typically work on all
platforms, but did not research the question now, and am happy
to learn more by being corrected.

Even if we increase MAX_NUM_DLL in the future, a considerable
portion your app's will not use that future version of R yet,
and so you should try to "fight" the problem now.

    > Any suggestions would be appreciated, and I?d appreciate if the MAX_NUM_DLLS can be increased.

    > Thanks,
    > Qin


    >> On May 4, 2016, at 9:17 AM, Martin Morgan <martin.morgan at roswellpark.org> wrote:
    >> 
    >> 
    >> 
    >> On 05/04/2016 05:15 AM, Prof Brian Ripley wrote:
    >>> On 04/05/2016 08:44, Martin Maechler wrote:
    >>>>>>>>> Qin Zhu <qinzhu at outlook.com>
    >>>>>>>>> on Mon, 2 May 2016 16:19:44 -0400 writes:
    >>>> 
    >>>> > Hi,
    >>>> > I?m working on a Shiny app for statistical analysis. I ran into
    >>>> this "maximal number of DLLs reached" issue recently because my app
    >>>> requires importing many other packages.
    >>>> 
    >>>> > I?ve posted my question on stackoverflow
    >>>> (http://stackoverflow.com/questions/36974206/r-maximal-number-of-dlls-reached
    >>>> <http://stackoverflow.com/questions/36974206/r-maximal-number-of-dlls-reached>).
    >>>> 
    >>>> 
    >>>> > I?m just wondering is there any reason to set the maximal
    >>>> number of DLLs to be 100, and is there any plan to increase it/not
    >>>> hardcoding it in the future? It seems many people are also running
    >>>> into this problem. I know I can work around this problem by modifying
    >>>> the source, but since my package is going to be used by other people,
    >>>> I don?t think this is a feasible solution.
    >>>> 
    >>>> > Any suggestions would be appreciated. Thanks!
    >>>> > Qin
    >>>> 
    >>>> Increasing that number is of course "possible"... but it also
    >>>> costs a bit (adding to the fixed memory footprint of R).
    >>> 
    >>> And not only that.  At the time this was done (and it was once 50) the
    >>> main cost was searching DLLs for symbols.  That is still an issue, and
    >>> few packages exclude their DLL from symbol search so if symbols have to
    >>> searched for a lot of DLLs will be searched.  (Registering all the
    >>> symbols needed in a package avoids a search, and nowadays by default
    >>> searches from a namespace are restricted to that namespace.)
    >>> 
    >>> See
    >>> https://cran.r-project.org/doc/manuals/r-release/R-exts.html#Registering-native-routines
    >>> for some further details about the search mechanism.
    >>> 
    >>>> I did not set that limit, but I'm pretty sure it was also meant
    >>>> as reminder for the useR to "clean up" a bit in her / his R
    >>>> session, i.e., not load package namespaces unnecessarily. I
    >>>> cannot yet imagine that you need > 100 packages | namespaces
    >>>> loaded in your R session. OTOH, some packages nowadays have a
    >>>> host of dependencies, so I agree that this at least may happen
    >>>> accidentally more frequently than in the past.
    >>> 
    >>> I am not convinced that it is needed.  The OP says he imports many
    >>> packages, and I doubt that more than a few are required at any one time.
    >>> Good practice is to load namespaces as required, using requireNamespace.
    >> 
    >> Extensive package dependencies in Bioconductor make it pretty easy to end up with dozen of packages attached or loaded. For instance
    >> 
    >> library(GenomicFeatures)
    >> library(DESeq2)
    >> 
    >> > length(loadedNamespaces())
    >> [1] 63
    >> > length(getLoadedDLLs())
    >> [1] 41
    >> 
    >> Qin's use case is a shiny app, presumably trying to provide relatively comprehensive access to a particular domain. Even if the app were to load / requireNamespace() (this requires considerable programming discipline to ensure that the namespace is available on all programming paths where it is used), it doesn't seem at all improbable that the user in an exploratory analysis would end up accessing dozens of packages with orthogonal dependencies. This is also the use case with Karl Forner's post https://stat.ethz.ch/pipermail/r-devel/2015-May/071104.html <https://stat.ethz.ch/pipermail/r-devel/2015-May/071104.html> (adding library(crlmm) to the above gets us to 53 DLLs).
    >> 
    >>> 
    >>>> The real solution of course would be a code improvement that
    >>>> starts with a relatively small number of "DLLinfo" structures
    >>>> (say 32), and then allocates more batches (of size say 32) if
    >>>> needed.
    >>> 
    >>> The problem of course is that such code will rarely be exercised, and
    >>> people have made errors on the boundaries (here multiples of 32) many
    >>> times in the past.  (Note too that DLLs can be removed as well as added,
    >>> another point of coding errors.)
    >> 
    >> That argues for a simple increase in the maximum number of DLLs. This would enable some people to have very bulky applications that pay a performance cost (but the cost here is in small fractions of a second...) in terms of symbol look-up (and collision?), but would have no consequence for those of us with more sane use cases.

I'm seconding Martin Morgan' argument.  We could go up to 200.
Computer memory has been increasing a lot, since we set the
limit to 100, and the symbol search performance indeed whould
only be affected for those use cases with (too) many DLLs.

Martin Maechler

    >> Martin Morgan
    >>


From maechler at stat.math.ethz.ch  Tue May 10 12:43:42 2016
From: maechler at stat.math.ethz.ch (Martin Maechler)
Date: Tue, 10 May 2016 12:43:42 +0200
Subject: [Rd] recursion problem using do.call(rbind, list(..,<S4>,..))
Message-ID: <22321.47966.231497.624140@stat.math.ethz.ch>

This was originally a bug report about Matrix,
  https://r-forge.r-project.org/tracker/?func=detail&atid=294&aid=6325&group_id=61
but the bug is rather a "design" bug in R, or a limitation.

This e-mail is a report of the status quo as I see it, and
call for comments, sugguests, help/hints for workarounds,
or even a suggestion for a programming task helping R core to
amend the status {re-writing the methods:::cbind and ...:rbind functions}:


If you read  ?rbind  carefully, you may have learned that rbind() and
cbind() are able to deal with S4 "matrix-like" objects, via the
hidden methods:::rbind /  methods:::cbind functions
where these recursively build on appropriate S4 methods for
rbind2() / cbind2().

That is how cbind() and rbind() work nowadays for Matrix-package
matrices.

However, there is problem lurking from the above paragraph, and
for experienced programmers / computer scientists that may even
be obvious: recursion.

A simple MRE (minimal reproducible example) for the problem seen with Matrix:

  S <- sparseMatrix(i=1:4, j=9:6, x=pi*1:4)
  n <- 410 # it succeeds for 407 -- sometimes even with 408
  X <- replicate(n, S, simplify = FALSE)
  Xb <- do.call("rbind", X)
  ## -> Error in as(x, "CsparseMatrix") : node stack overflow

But as I said, that's not really the Matrix package. A small
reproducible example, not involving the Matrix package at all:

  MM <- setClass("mmatrix", contains="matrix")
  setMethod("rbind2", signature(x="mmatrix", y="mmatrix"),
	    function(x,y) as(base::rbind(unclass(x), unclass(y)), "mmatrix"))

  (m5 <- MM(diag(5)))
  m45 <- MM(matrix(1:20, 4,5))
  rbind(m5, m45) # fine

  ## fine with 400 :
  mL.4c <- replicate(400, m45, simplify=FALSE)
  mmm4 <- do.call(rbind, mL.4c)
  stopifnot(is(mmm4, "mmatrix"), dim(mmm4) == c(1600L, 5L))
  ## not ok with 410 :
  mL.410 <- replicate(410, m45, simplify=FALSE)
  mmm4 <- do.call(rbind, mL.410)
  ## Error in getExportedValue(pkg, name) (from #2) : node stack overflow

and the "node stack overflow"  is not too helpful.
Unfortunately, this is more than one problem, the first one being
that recursive function calls nowadays often end with this
"node stack overflow" error, rather than the somewhat more understandable
error message, namely

  Error: evaluation nested too deeply: infinite recursion / options(expressions=)?

And even worse, that nowadays increasing the option to a higher number N,
    options(expressions = N)

does not help at all in this situation, once the code is byte
compiled.... which of course is true for everything in base R.

But that is basically only the reason for the not-so-helpful
error message (and that raising 'expressions' does not help!),
but the underlying problem is somewhat harder, namely the full
setup the S4-serving methods:::rbind() {and ...cbind()} using
recursion (in the way it does) at all.

There is a simple, in my eyes ugly workaround which also will not scale well,
but works fine and fast enough for the above example:

## Simple ugly workaround .. but well fast enough :
> system.time({
+ r <- mL.410[[1]]
+ for(i in seq_along(mL.410)[-1])
+     r <- rbind2(r, mL.410[[i]])
+ })
   user  system elapsed 
  0.083   0.000   0.083 
> dim(r)
[1] 1640    5
> 

This should help Ben (the OP of the Matrix bug), and may be
something like that should also guide on how to re-write
the  methods:::rbind()  / methods:::cbind()  in a non-recursive
fashion ?

Thank you for your thoughts.

Martin Maechler
ETH Zurich


From maechler at stat.math.ethz.ch  Tue May 10 16:08:39 2016
From: maechler at stat.math.ethz.ch (Martin Maechler)
Date: Tue, 10 May 2016 16:08:39 +0200
Subject: [Rd] complex NA's match(), etc: not back-compatible change proposal
In-Reply-To: <22320.44892.139504.531616@stat.math.ethz.ch>
References: <bug-16885-16@http.bugs.r-project.org/bugzilla/>
	<bug-16885-16-0Q1UyGemwv@http.bugs.r-project.org/bugzilla/>
	<22320.36142.636350.561855@stat.math.ethz.ch>
	<22320.44892.139504.531616@stat.math.ethz.ch>
Message-ID: <22321.60263.323720.518084@stat.math.ethz.ch>

This is an RFC / announcement related to the 2nd part of PR#16885
    https://bugs.r-project.org/bugzilla/show_bug.cgi?id=16885
about  complex NA's.

The (somewhat rare) incompatibility in R's 3.3.0 match() behavior for the
case of complex numbers with NA & NaN's {which has been fixed for R 3.3.0
patched in the mean time} triggered some more comprehensive "research".

I found that we have had a long-standing inconsistency at least between the
documented and the real behavior.  I am claiming that the documented
behavior is desirable and hence R's current "real" behavior is bugous, and
I am proposing to change it, in R-devel (to be 3.4.0) for now.

In help(match) we have been saying

 |  Exactly what matches what is to some extent a matter of definition.
 |  For all types, \code{NA} matches \code{NA} and no other value.
 |  For real and complex values, \code{NaN} values are regarded
 |  as matching any other \code{NaN} value, but not matching \code{NA}.

for at least 10 years.  But we don't do that at all in the
complex case (and AFAIK never got a bug report about it).

Also, e.g., print(.) or format(.) do simply use  "NA" for all
the different complex NA-containing numbers, where OTOH,
non-NA NaN's { <=>  !is.nan(z) & is.na(z) }
in format() or print() do show the NaN in real and/or imaginary
parts; for an example, look at the "format" column of the matrix
below, after 'print(cbind' ...

The current match()---and duplicated(), unique() which are based on the same
C code---*do* distinguish almost all complex NA / NaN's which is
NOT according to documentation. I have found that this is just because of 
of our hashing function for the complex case, chash() in R/src/main/unique.c,
is bogous in the sense that it is not compatible with the above documentation
and also not with the cequal() function (in the same file uniqu.c) for checking
equality of complex numbers.

As I have found,, a *simplified* version of the chash() function
to make it compatible with cequal() does solve all the problems I've
indicated,  and the current plan is to commit that change --- after some
discussion time, here on R-devel ---  to the code base.

My change passes  'make check-all' fine, but I'm 100% sure that there will
be effects in package-space. ... one reason for this posting.

As mentioned above, note that the chash() function has been in
use for all three functions
     match()
     duplicated()
     unique()
and the change will affect all three --- but just for the case of complex
vectors with NA or NaN's.

To show more, a small R session -- using my version of R-devel
== the proposition: 
The R script ('complex-NA-short.R') for (a bit more than) the
session is attached {{you can attach  text/plain easily}}:

> x0 <- c(0,1, NA, NaN); z <- outer(x0,x0, complex, length.out=1); rm(x0)
> ##           --- = NA_real_  but that does not exist e.g., in R 2.3.1
> ##                   similarly,  '1L', '2L', .. do not exist e.g., in R 2.3.1
> (z <- z[is.na(z)])
 [1]       NA NaN+  0i       NA NaN+  1i       NA       NA       NA       NA
 [9]   0+NaNi   1+NaNi       NA NaN+NaNi
> outerID <- function(x,y, ...) { ## ugly; can we get outer() to work ?
+     r <- matrix( , length(x), length(y))
+     for(i in seq(along=x))
+         for(j in seq(along=y))
+             r[i,j] <- identical(z[i], z[j], ...)
+     r
+ }
> ## Very strictly - in the sense of identical() -- these 12 complex numbers all differ:
> ## a version that works in older versions of R, where identical() had fewer arguments!
> outerID.picky <- function(x,y) {
+     nF <- length(formals(identical)) - 2
+     do.call("outerID", c(list(x, y), as.list(rep(FALSE, nF))))
+ }
> oldR <- !exists("getRversion") || getRversion() < "3.0.0" ## << FIXME: 3.0.0 is  a wild guess
> symnum(id.z <- outerID.picky(z,z)) ## == Diagonal matrix [newer versions of R]
                             
 [1,] | . . . . . . . . . . .
 [2,] . | . . . . . . . . . .
 [3,] . . | . . . . . . . . .
 [4,] . . . | . . . . . . . .
 [5,] . . . . | . . . . . . .
 [6,] . . . . . | . . . . . .
 [7,] . . . . . . | . . . . .
 [8,] . . . . . . . | . . . .
 [9,] . . . . . . . . | . . .
[10,] . . . . . . . . . | . .
[11,] . . . . . . . . . . | .
[12,] . . . . . . . . . . . |
> try(# for older R versions
+ stopifnot(identical(id.z, outerID(z,z)), oldR || identical(id.z, diag(12) == 1))
+ )
> (mz <- match(z, z)) # currently different {NA,NaN} patterns differ - not in print()/format() _FIXME_
 [1] 1 2 1 2 1 1 1 1 2 2 1 2
> zRI <- rbind(Re=Re(z), Im=Im(z)) # and see the pattern :
> print(cbind(format = format(z), t(zRI), mz), quote=FALSE)
      format   Re   Im   mz
 [1,]       NA <NA> 0    1 
 [2,] NaN+  0i NaN  0    2 
 [3,]       NA <NA> 1    1 
 [4,] NaN+  1i NaN  1    2 
 [5,]       NA 0    <NA> 1 
 [6,]       NA 1    <NA> 1 
 [7,]       NA <NA> <NA> 1 
 [8,]       NA NaN  <NA> 1 
 [9,]   0+NaNi 0    NaN  2 
[10,]   1+NaNi 1    NaN  2 
[11,]       NA <NA> NaN  1 
[12,] NaN+NaNi NaN  NaN  2 
>
-------------------------------
Note that 'mz <- match(z, z)' and hence the last column of the matrix above
are very different in current R, 
distinguishing most kinds of NA / NaN  against the documentation (and the
 real/numeric case).

Martin Maechler
R Core Team


-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: complex-NA-short.R
URL: <https://stat.ethz.ch/pipermail/r-devel/attachments/20160510/8867c00e/attachment.pl>

From jeroen.ooms at stat.ucla.edu  Tue May 10 16:39:08 2016
From: jeroen.ooms at stat.ucla.edu (Jeroen Ooms)
Date: Tue, 10 May 2016 16:39:08 +0200
Subject: [Rd] unloadNamespace problem in 3.3
Message-ID: <CABFfbXtTAoL+KDb36Q1k3OM3qce9qGdYjR3U7SLtgkUH-HA1eA@mail.gmail.com>

The following used to work in R 3.2.5 but not in 3.3.0:

  library(MASS)
  ns <-.getNamespace("MASS")
  unloadNamespace(ns)

Calling unloadNamespace("MASS") directly still works.


From maechler at stat.math.ethz.ch  Tue May 10 17:07:08 2016
From: maechler at stat.math.ethz.ch (Martin Maechler)
Date: Tue, 10 May 2016 17:07:08 +0200
Subject: [Rd] unloadNamespace problem in 3.3
In-Reply-To: <CABFfbXtTAoL+KDb36Q1k3OM3qce9qGdYjR3U7SLtgkUH-HA1eA@mail.gmail.com>
References: <CABFfbXtTAoL+KDb36Q1k3OM3qce9qGdYjR3U7SLtgkUH-HA1eA@mail.gmail.com>
Message-ID: <22321.63772.186691.200537@stat.math.ethz.ch>

>>>>> Jeroen Ooms <jeroen.ooms at stat.ucla.edu>
>>>>>     on Tue, 10 May 2016 16:39:08 +0200 writes:

    > The following used to work in R 3.2.5 but not in 3.3.0:
    > library(MASS)
    > ns <-.getNamespace("MASS")
    > unloadNamespace(ns)

or simply
     
    ns <- getNamespace("MASS") ; unloadNamespace(ns)

yes, indeed.   That's a bug.

    > Calling unloadNamespace("MASS") directly still works.

which seems to have been the main use, and the only one  used
in any R package on CRAN or Bioconductor, or else we would have
heard about it, long before release, .., right?

This is from the change,

  r70262 | maechler | 2016-03-02 12:36:19
  ------
  unloadNamespace() no longer loads & unloads an unloaded namespace - fixing PR#16731 

and so I will fix it  ASAP.

Thank you, Jeroen, for the report!
Martin


From peter.ruckdeschel at web.de  Tue May 10 20:25:44 2016
From: peter.ruckdeschel at web.de (Peter Ruckdeschel)
Date: Tue, 10 May 2016 20:25:44 +0200
Subject: [Rd] Storage of byte code-compiled functions in sysdata.rda
In-Reply-To: <alpine.DEB.2.10.1605051445500.12737@luke-Latitude>
References: <5725ED5B.20208@web.de>
	<704D9B27-D7A7-4B46-A2F4-82E0582AC6B5@uiowa.edu>
	<5725F98E.5040609@web.de>
	<alpine.DEB.2.10.1605051445500.12737@luke-Latitude>
Message-ID: <b7aa89a1-9c7a-6bc8-c7e8-c0e7d933bd29@web.de>

Dear Luke,

thanks for taking a look at our problem and for checking it out, in particular for
sending us the tool function getbc.

This really sounds like we have somehow messed up our chain with different versions
of the byte-code compiler. We will try and fix this and will let you know if we succeed.

Thanks again, Peter


Am 05.05.2016 um 22:07 schrieb luke-tierney at uiowa.edu:
> I can't reproduce the more complex version. But the package on CRAN
> fails in the same way on 3.2.3 and 3.3.0.
>
> The problem is that your sysdata.rda includes a function that is
> generating this error. If you do
>
> f <- getFromNamespace(".RMXE", ns ="RobAStRDA")[["GEVFamily"]][["fun.N"]][[1]]
> g <- get("fct", environment(f))
>
> and look at the byte code for g with compiler::disassemble or the
> utility I'll paste in below you get
>
>> getbc(g)
> list(8L, BCMISMATCH.OP)
>
> The only way you can get a file like this is to byte compile and save
> in a version of R with a newer byte code version (the 8L) and then
> load and resave in an older version of R. If you load and run this
> code in an older (or newer) version of R it will revert to the
> standard interpeter using eval but will issue a warning once per
> session. If you try to run it in an R with byte code version 8L you
> get this error.
>
> I can make a small change to that this becomes a once-per-session
> warning, but even then you won't actually be running compiled code.
>
> So I think your task is to figure out how you are ended up with a
> sysdata.rda file created in this incompatible way. Something to look
> for might be whether a call from within your R-devel somehow manages
> to run an R process with an older R version.
>
> Let me know what you find out.
>
> luke
>
> Here is the little utility, adapted from compiler::disassemble:
>
> getbc <- function (code) 
> {
>      .CodeSym <- as.name(".Code")
>      disasm.const <- function(x) if (typeof(x) == "list" && length(x) >
>          0 && identical(x[[1]], .CodeSym))
>          disasm(x)
>      else x
>      disasm <- function(code) {
>          code[[2]] <- compiler:::bcDecode(code[[2]])
>          code[[3]] <- lapply(code[[3]], disasm.const)
>          code
>      }
>      if (typeof(code) == "closure") {
>          code <- .Internal(bodyCode(code))
>          if (typeof(code) != "bytecode")
>              stop("function is not compiled")
>      }
>      invisible(dput(disasm(.Internal(disassemble(code)))[[2]]))
> }
>
> On Sun, 1 May 2016, Peter Ruckdeschel wrote:
>
>> Thanks, Luke, for having a look to it.
>>
>> Sure, I can give you some reproducible example -- even in two degrees of
>> completeness ;-): see below.
>>
>> Thanks again, Peter
>>
>> %-----------------------------------
>> (I) first example
>> %-----------------------------------
>> Just to reproduce the error, on r-devel, try:
>>
>> install.packages("RobAStRDA")
>> require(RobAStRDA)
>> getFromNamespace(".RMXE", ns = "RobAStRDA")[["GEVFamily"]][["fun.N"]][[1]](1.3)
>>
>> %-----------------------------------
>> (II) an example also giving the context
>> %-----------------------------------
>> For the "complete" story, not only the R-code needs to be given, but also the
>> preparation steps to produce the packages on the right R version;
>>
>> so please follow steps (1)--(6) below; I am not 100% sure whether this already gives
>> you all information needed for this, but if not so please let me know.
>>
>> (1) create a minimal R-package "InterpolTry"
>>      with byte-compilation on in the DESCRIPTION file
>>      and with stats::approxfun imported in the NAMESPACE file
>>
>> (2) in an R session on R-devel do
>>
>> require(InterpolTry)
>> x <- 1:100
>> y <- 1:100
>> fun <- approxfun(x,y)
>> ## revise the next line accordingly to your local settings
>> SrcRPathInterpolTry <- <path_to_(source-)R-folder_of_InterpolTry>
>> RdaFile <- file.path(SrcRPathInterpolTry, "sysdata.rda")
>> save(fun, file = RdaFile)
>> tools::resaveRdaFiles(RdaFile)
>>
>> (3) re-build package InterpolTry and re-install it
>>
>> (4) create a minimal R package "UseInterpolTry", again
>>      with byte-compilation on in the DESCRIPTION file
>>      and with stats::approxfun and package "InterpolTry"
>>      imported in the NAMESPACE file
>>
>> (5) in the R folder of R package "UseInterpolTry" write a function
>>      useInterpolFct()  which goes like this
>>
>>      useInterpolFct <- function(x){
>>               fun <- getFromNamespace("fun", ns = "InterpolTry")
>>               fun(x)
>>      }
>>
>>     export this function in the namespace and create an .Rd file to it
>>
>> (6) (re-)build package "UseInterpolTry" and (re-)install it and try
>>
>> require(UseInterpolTry)
>> useInterpolFct(5)
>>
>> Steps (1)--(6) work with R-3.1.3, but no longer with R-devel.
>>
>>
>>
>> Am 01.05.2016 um 14:12 schrieb Tierney, Luke:
>>> Can you provide a complete reproducible example?
>>>
>>> Sent from my iPhone
>>>
>>>> On May 1, 2016, at 6:51 AM, Peter Ruckdeschel <peter.ruckdeschel at web.de> wrote:
>>>>
>>>> Hi r-devels,
>>>>
>>>> we are seeing a new problem with our packages RobAStRDA (just new on CRAN, thanks
>>>> to Uwe and Kurt!) and RobExtremes (to be submitted).
>>>>
>>>> It must be something recent with the way you internally treat/store byte-code compiled
>>>> functions, as we have no problems with R-3.1.3, but do see an "Error in fct(x) : byte code
>>>> version mismatch" with R-devel SVNrev r70532.
>>>>
>>>> Background:
>>>> Starting from several x-y grids, in the sysdata.rda file of RobAStRDA, we store the results
>>>> of calls to approxfun/splinefun to these grids from within a session with pkg RobAStRDA
>>>> require()d.  From pkg RobExtremes we then call these interpolating functions by means of
>>>> a call (essentially) as:
>>>>
>>>> getFromNamespace(".RMXE", ns = "RobAStRDA")[["GEVFamily"]][["fun.N"]][[1]](1.3)
>>>>
>>>> upon which we get the announced "Error in fct(x) : byte code version mismatch" while the same
>>>> code does work for R-3.1.3.
>>>>
>>>> The list element "fun.N" in the above call already accounts for a different behaviour for
>>>> pre R-3.0.0 (would have given "fun.O") and post R-3.0.0 ("fun.N") results of approxfun/
>>>> splinefun, but the interpolating functions in branch "fun.N" have been produced in
>>>> R-devel SVNrev r70532, so we would have expected our code getFromNamespace(.....) above to
>>>> work in R-devel as well.
>>>>
>>>> Could you give us any hints how to
>>>>
>>>> (a) store the interpolating functions resulting from approxfun/splinefun in pkg RobAStRDA
>>>>    correctly in recent R-versions and
>>>> (b) call these functions in pkg RobExtremes ?
>>>>
>>>> We already did import stats::approxfun and stats::splinefun into the NAMESPACEs of pkgs
>>>> RobAStRDA and RobExtremes.
>>>>
>>>> Thanks for your help already,
>>>> Peter
>>>>
>>>>
>>>> ---
>>>> Diese E-Mail wurde von Avast Antivirus-Software auf Viren gepr?ft.
>>>> https://www.avast.com/antivirus
>>>>
>>>> ______________________________________________
>>>> R-devel at r-project.org mailing list
>>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>
>> ---
>> Diese E-Mail wurde von Avast Antivirus-Software auf Viren gepr?ft.
>> https://www.avast.com/antivirus
>>
>>


---
Diese E-Mail wurde von Avast Antivirus-Software auf Viren gepr?ft.
https://www.avast.com/antivirus


From henrik.bengtsson at gmail.com  Wed May 11 02:44:51 2016
From: henrik.bengtsson at gmail.com (Henrik Bengtsson)
Date: Tue, 10 May 2016 17:44:51 -0700
Subject: [Rd] Is it possible to increase MAX_NUM_DLLS in future R
	releases?
In-Reply-To: <22321.34389.206834.359803@stat.math.ethz.ch>
References: <BLU436-SMTP7203A01BDD638D733608F0CD790@phx.gbl>
	<22313.43079.748521.575179@stat.math.ethz.ch>
	<5729BDA6.3060106@stats.ox.ac.uk>
	<5729F677.9090700@roswellpark.org>
	<BLU436-SMTP6987676751F4733469CE40CD7D0@phx.gbl>
	<22321.34389.206834.359803@stat.math.ethz.ch>
Message-ID: <CAFDcVCSsjZxDuBWvYZSMmHdSgaCvU2dA9Gbg8UoJehJ6+en2Wg@mail.gmail.com>

Isn't the problem in Qin's example that unloadNamespace("scde") only
unloads 'scde' but none of its package dependencies that were loaded
when 'scde' was loaded.  For example:

$ R --vanilla
> ns0 <- loadedNamespaces()
> dlls0 <- getLoadedDLLs()

> packageDescription("scde")[c("Depends", "Imports")]
$Depends
[1] "R (>= 3.0.0), flexmix"

$Imports
[1] "Rcpp (>= 0.10.4), RcppArmadillo (>= 0.5.400.2.0), mgcv, Rook, rjson, MASS,
 Cairo, RColorBrewer, edgeR, quantreg, methods, nnet, RMTstat, extRemes, pcaMet
hods, BiocParallel, parallel"

> loadNamespace("scde")
> ns1 <- loadedNamespaces()
> dlls1 <- getLoadedDLLs()

> nsAdded <- setdiff(ns1, ns0)
> nsAdded
 [1] "flexmix"       "Rcpp"          "edgeR"         "splines"
 [5] "BiocGenerics"  "MASS"          "BiocParallel"  "scde"
 [9] "lattice"       "rjson"         "brew"          "RcppArmadillo"
[13] "minqa"         "distillery"    "car"           "tools"
[17] "Rook"          "Lmoments"      "nnet"          "parallel"
[21] "pbkrtest"      "RMTstat"       "grid"          "Biobase"
[25] "nlme"          "mgcv"          "quantreg"      "modeltools"
[29] "MatrixModels"  "lme4"          "Matrix"        "nloptr"
[33] "RColorBrewer"  "extRemes"      "limma"         "pcaMethods"
[37] "stats4"        "SparseM"       "Cairo"

> dllsAdded <- setdiff(names(dlls1), names(dlls0))
> dllsAdded
 [1] "Cairo"         "parallel"      "limma"         "edgeR"
 [5] "MASS"          "rjson"         "Rcpp"          "grid"
 [9] "lattice"       "Matrix"        "SparseM"       "quantreg"
[13] "nnet"          "nlme"          "mgcv"          "Biobase"
[17] "pcaMethods"    "splines"       "minqa"         "nloptr"
[21] "lme4"          "extRemes"      "RcppArmadillo" "tools"
[25] "Rook"          "scde"


If you unload these namespaces, I think the DLLs will also be
detached; or at least they should if packages implement an .onUnload()
with a dyn.unload().  More on this below.


To unloading these added namespaces (with DLLs), they have to be
unloaded in an order that does not break the dependency graph of the
currently loaded packages, because otherwise you'll get errors such
as:

> unloadNamespace("quantreg")
Error in unloadNamespace("quantreg") :
  namespace 'quantreg' is imported by 'car', 'scde' so cannot be unloaded

I don't know if there exist a function that unloads the namespaces in
the proper order, but here is a brute-force version:

unloadNamespaces <- function(ns, ...) {
  while (length(ns) > 0) {
    ns0 <- loadedNamespaces()
    for (name in ns) {
      try(unloadNamespace(name), silent=TRUE)
    }
    ns1 <- loadedNamespaces()
    ## No namespace was unloaded?
    if (identical(ns1, ns0)) break
    ns <- intersect(ns, ns1)
  }
  if (length(ns) > 0) stop("Failed to unload namespace: ",
paste(sQuote(ns), collapse=", "))
} # unloadNamespaces()


When I run the above on R 3.3.0 patched on Windows, I get:

> unloadNamespaces(nsAdded)
now dyn.unload("C:/Users/hb/R/win-library/3.3/scde/libs/x64/scde.dll") ...
> ns2 <- loadedNamespaces()
> dlls2 <- getLoadedDLLs()
> ns2
[1] "grDevices" "utils"     "stats"     "datasets"  "base"      "graphics"
[7] "methods"
> identical(sort(ns2), sort(ns0))
[1] TRUE


However, there are some namespaces for which the DLLs are still loaded:

> sort(setdiff(names(dlls2), names(dlls0)))
 [1] "Cairo"         "edgeR"         "extRemes"      "minqa"
 [5] "nloptr"        "pcaMethods"    "quantreg"      "Rcpp"
 [9] "RcppArmadillo" "rjson"         "Rook"          "SparseM"


If we look for .onUnload() in packages that load DLLs, we find that
the following does not have an .onUnload() and therefore probably does
neither call dyn.unload() when the package is unloaded:

> sort(dllsAdded[!sapply(dllsAdded, FUN=function(pkg) {
+   ns <- getNamespace(pkg)
+   exists(".onUnload", envir=ns, inherits=FALSE)
+ })])
 [1] "Cairo"         "edgeR"         "extRemes"      "minqa"
 [5] "nloptr"        "pcaMethods"    "quantreg"      "Rcpp"
 [9] "RcppArmadillo" "rjson"         "Rook"          "SparseM"


That doesn't look like a coincident to me.  Maybe `R CMD check` should
in addition to checking that the namespace of a package can be
unloaded also assert that it unloads whatever DLL a package loads.
Something like:

* checking whether the namespace can be unloaded cleanly ... WARNING
  Unloading the namespace does not unload DLL

At least I don't think this is tested for, e.g.
https://cran.r-project.org/web/checks/check_results_Cairo.html and
https://cran.r-project.org/web/checks/check_results_Rcpp.html.

/Henrik


On Mon, May 9, 2016 at 11:57 PM, Martin Maechler
<maechler at stat.math.ethz.ch> wrote:
>>>>>> Qin Zhu <qinzhu at outlook.com>
>>>>>>     on Fri, 6 May 2016 11:33:37 -0400 writes:
>
>     > Thanks for all your great answers.
>     > The app I?m working on is indeed an exploratory data analysis tool for gene expression, which requires a bunch of bioconductor packages.
>
>     > I guess for now, my best solution is to divide my app into modules and load/unload packages as the user switch from one module to another.
>
>     > This brought me another question: it seems that unload package with the detach/unloadNamespace function does not unload the DLLs, or in the case of the "SCDE" package, not all dependent DLLs:
>
>     >> length(getLoadedDLLs())
>     > [1] 9
>     >> requireNamespace("scde")
>     > Loading required namespace: scde
>     >> length(getLoadedDLLs())
>     > [1] 34
>     >> unloadNamespace("scde")
>     > now dyn.unload("/Library/Frameworks/R.framework/Versions/3.3/Resources/library/scde/libs/scde.so") ...
>     >> length(getLoadedDLLs())
>     > [1] 33
>
>     > Does that mean I should use dyn.unload to unload whatever I think is associated with that package when the user?s done using it? I?m a little nervous about this because this seems to be OS dependent and previous versions of my app are running on both windows and macs.
>
> Hmm, I thought that  dyn.unload() would typically work on all
> platforms, but did not research the question now, and am happy
> to learn more by being corrected.
>
> Even if we increase MAX_NUM_DLL in the future, a considerable
> portion your app's will not use that future version of R yet,
> and so you should try to "fight" the problem now.
>
>     > Any suggestions would be appreciated, and I?d appreciate if the MAX_NUM_DLLS can be increased.
>
>     > Thanks,
>     > Qin
>
>
>     >> On May 4, 2016, at 9:17 AM, Martin Morgan <martin.morgan at roswellpark.org> wrote:
>     >>
>     >>
>     >>
>     >> On 05/04/2016 05:15 AM, Prof Brian Ripley wrote:
>     >>> On 04/05/2016 08:44, Martin Maechler wrote:
>     >>>>>>>>> Qin Zhu <qinzhu at outlook.com>
>     >>>>>>>>> on Mon, 2 May 2016 16:19:44 -0400 writes:
>     >>>>
>     >>>> > Hi,
>     >>>> > I?m working on a Shiny app for statistical analysis. I ran into
>     >>>> this "maximal number of DLLs reached" issue recently because my app
>     >>>> requires importing many other packages.
>     >>>>
>     >>>> > I?ve posted my question on stackoverflow
>     >>>> (http://stackoverflow.com/questions/36974206/r-maximal-number-of-dlls-reached
>     >>>> <http://stackoverflow.com/questions/36974206/r-maximal-number-of-dlls-reached>).
>     >>>>
>     >>>>
>     >>>> > I?m just wondering is there any reason to set the maximal
>     >>>> number of DLLs to be 100, and is there any plan to increase it/not
>     >>>> hardcoding it in the future? It seems many people are also running
>     >>>> into this problem. I know I can work around this problem by modifying
>     >>>> the source, but since my package is going to be used by other people,
>     >>>> I don?t think this is a feasible solution.
>     >>>>
>     >>>> > Any suggestions would be appreciated. Thanks!
>     >>>> > Qin
>     >>>>
>     >>>> Increasing that number is of course "possible"... but it also
>     >>>> costs a bit (adding to the fixed memory footprint of R).
>     >>>
>     >>> And not only that.  At the time this was done (and it was once 50) the
>     >>> main cost was searching DLLs for symbols.  That is still an issue, and
>     >>> few packages exclude their DLL from symbol search so if symbols have to
>     >>> searched for a lot of DLLs will be searched.  (Registering all the
>     >>> symbols needed in a package avoids a search, and nowadays by default
>     >>> searches from a namespace are restricted to that namespace.)
>     >>>
>     >>> See
>     >>> https://cran.r-project.org/doc/manuals/r-release/R-exts.html#Registering-native-routines
>     >>> for some further details about the search mechanism.
>     >>>
>     >>>> I did not set that limit, but I'm pretty sure it was also meant
>     >>>> as reminder for the useR to "clean up" a bit in her / his R
>     >>>> session, i.e., not load package namespaces unnecessarily. I
>     >>>> cannot yet imagine that you need > 100 packages | namespaces
>     >>>> loaded in your R session. OTOH, some packages nowadays have a
>     >>>> host of dependencies, so I agree that this at least may happen
>     >>>> accidentally more frequently than in the past.
>     >>>
>     >>> I am not convinced that it is needed.  The OP says he imports many
>     >>> packages, and I doubt that more than a few are required at any one time.
>     >>> Good practice is to load namespaces as required, using requireNamespace.
>     >>
>     >> Extensive package dependencies in Bioconductor make it pretty easy to end up with dozen of packages attached or loaded. For instance
>     >>
>     >> library(GenomicFeatures)
>     >> library(DESeq2)
>     >>
>     >> > length(loadedNamespaces())
>     >> [1] 63
>     >> > length(getLoadedDLLs())
>     >> [1] 41
>     >>
>     >> Qin's use case is a shiny app, presumably trying to provide relatively comprehensive access to a particular domain. Even if the app were to load / requireNamespace() (this requires considerable programming discipline to ensure that the namespace is available on all programming paths where it is used), it doesn't seem at all improbable that the user in an exploratory analysis would end up accessing dozens of packages with orthogonal dependencies. This is also the use case with Karl Forner's post https://stat.ethz.ch/pipermail/r-devel/2015-May/071104.html <https://stat.ethz.ch/pipermail/r-devel/2015-May/071104.html> (adding library(crlmm) to the above gets us to 53 DLLs).
>     >>
>     >>>
>     >>>> The real solution of course would be a code improvement that
>     >>>> starts with a relatively small number of "DLLinfo" structures
>     >>>> (say 32), and then allocates more batches (of size say 32) if
>     >>>> needed.
>     >>>
>     >>> The problem of course is that such code will rarely be exercised, and
>     >>> people have made errors on the boundaries (here multiples of 32) many
>     >>> times in the past.  (Note too that DLLs can be removed as well as added,
>     >>> another point of coding errors.)
>     >>
>     >> That argues for a simple increase in the maximum number of DLLs. This would enable some people to have very bulky applications that pay a performance cost (but the cost here is in small fractions of a second...) in terms of symbol look-up (and collision?), but would have no consequence for those of us with more sane use cases.
>
> I'm seconding Martin Morgan' argument.  We could go up to 200.
> Computer memory has been increasing a lot, since we set the
> limit to 100, and the symbol search performance indeed whould
> only be affected for those use cases with (too) many DLLs.
>
> Martin Maechler
>
>     >> Martin Morgan
>     >>
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From maechler at stat.math.ethz.ch  Wed May 11 10:00:44 2016
From: maechler at stat.math.ethz.ch (Martin Maechler)
Date: Wed, 11 May 2016 10:00:44 +0200
Subject: [Rd] complex NA's match(),
	etc: not back-compatible change proposal
In-Reply-To: <22321.60263.323720.518084@stat.math.ethz.ch>
References: <bug-16885-16@http.bugs.r-project.org/bugzilla/>
	<bug-16885-16-0Q1UyGemwv@http.bugs.r-project.org/bugzilla/>
	<22320.36142.636350.561855@stat.math.ethz.ch>
	<22320.44892.139504.531616@stat.math.ethz.ch>
	<22321.60263.323720.518084@stat.math.ethz.ch>
Message-ID: <22322.59052.615884.242761@stat.math.ethz.ch>

>>>>> Martin Maechler <maechler at stat.math.ethz.ch>
>>>>>     on Tue, 10 May 2016 16:08:39 +0200 writes:

    > This is an RFC / announcement related to the 2nd part of PR#16885
    > https://bugs.r-project.org/bugzilla/show_bug.cgi?id=16885
    > about  complex NA's.

    > The (somewhat rare) incompatibility in R's 3.3.0 match() behavior for the
    > case of complex numbers with NA & NaN's {which has been fixed for R 3.3.0
    > patched in the mean time} triggered some more comprehensive "research".

    > I found that we have had a long-standing inconsistency at least between the
    > documented and the real behavior.  I am claiming that the documented
    > behavior is desirable and hence R's current "real" behavior is bugous, and
    > I am proposing to change it, in R-devel (to be 3.4.0) for now.

After the  "roaring unanimous" assent  (one private msg
      encouraging me to go forward, no dissenting voice, hence an
      "odds ratio" of  +Inf  in favor ;-)

I have now committed my proposal to R-devel (svn rev. 70597) and
some of us will be seeing the effect in package space within a
day or so, in the CRAN checks against R-devel (not for
    bioconductor AFAIK; their checks using R-devel only when it less
    than ca 6 months from release).

It's still worthwhile to discuss the issue, if you come late
to it, notably as ---paraphrasing Dirk on the R-package-devel list---
the release of 3.4.0 is almost a year away, and so now is the
best time to tinker with the API, in other words, consider breaking
rarely used legacy APIs..

Martin


    > In help(match) we have been saying

    > |  Exactly what matches what is to some extent a matter of definition.
    > |  For all types, \code{NA} matches \code{NA} and no other value.
    > |  For real and complex values, \code{NaN} values are regarded
    > |  as matching any other \code{NaN} value, but not matching \code{NA}.

    > for at least 10 years.  But we don't do that at all in the
    > complex case (and AFAIK never got a bug report about it).

    > Also, e.g., print(.) or format(.) do simply use  "NA" for all
    > the different complex NA-containing numbers, where OTOH,
    > non-NA NaN's { <=>  !is.nan(z) & is.na(z) }
    > in format() or print() do show the NaN in real and/or imaginary
    > parts; for an example, look at the "format" column of the matrix
    > below, after 'print(cbind' ...

    > The current match()---and duplicated(), unique() which are based on the same
    > C code---*do* distinguish almost all complex NA / NaN's which is
    > NOT according to documentation. I have found that this is just because of 
    > of our hashing function for the complex case, chash() in R/src/main/unique.c,
    > is bogous in the sense that it is not compatible with the above documentation
    > and also not with the cequal() function (in the same file uniqu.c) for checking
    > equality of complex numbers.

    > As I have found,, a *simplified* version of the chash() function
    > to make it compatible with cequal() does solve all the problems I've
    > indicated,  and the current plan is to commit that change --- after some
    > discussion time, here on R-devel ---  to the code base.

    > My change passes  'make check-all' fine, but I'm 100% sure that there will
    > be effects in package-space. ... one reason for this posting.

    > As mentioned above, note that the chash() function has been in
    > use for all three functions
    > match()
    > duplicated()
    > unique()
    > and the change will affect all three --- but just for the case of complex
    > vectors with NA or NaN's.

    > To show more, a small R session -- using my version of R-devel
    > == the proposition: 
    > The R script ('complex-NA-short.R') for (a bit more than) the
    > session is attached {{you can attach  text/plain easily}}:

    >> x0 <- c(0,1, NA, NaN); z <- outer(x0,x0, complex, length.out=1); rm(x0)
    >> ##           --- = NA_real_  but that does not exist e.g., in R 2.3.1
    >> ##                   similarly,  '1L', '2L', .. do not exist e.g., in R 2.3.1
    >> (z <- z[is.na(z)])
    > [1]       NA NaN+  0i       NA NaN+  1i       NA       NA       NA       NA
    > [9]   0+NaNi   1+NaNi       NA NaN+NaNi
    >> outerID <- function(x,y, ...) { ## ugly; can we get outer() to work ?
    > +     r <- matrix( , length(x), length(y))
    > +     for(i in seq(along=x))
    > +         for(j in seq(along=y))
    > +             r[i,j] <- identical(z[i], z[j], ...)
    > +     r
    > + }
    >> ## Very strictly - in the sense of identical() -- these 12 complex numbers all differ:
    >> ## a version that works in older versions of R, where identical() had fewer arguments!
    >> outerID.picky <- function(x,y) {
    > +     nF <- length(formals(identical)) - 2
    > +     do.call("outerID", c(list(x, y), as.list(rep(FALSE, nF))))
    > + }
    >> oldR <- !exists("getRversion") || getRversion() < "3.0.0" ## << FIXME: 3.0.0 is  a wild guess
    >> symnum(id.z <- outerID.picky(z,z)) ## == Diagonal matrix [newer versions of R]
                             
    > [1,] | . . . . . . . . . . .
    > [2,] . | . . . . . . . . . .
    > [3,] . . | . . . . . . . . .
    > [4,] . . . | . . . . . . . .
    > [5,] . . . . | . . . . . . .
    > [6,] . . . . . | . . . . . .
    > [7,] . . . . . . | . . . . .
    > [8,] . . . . . . . | . . . .
    > [9,] . . . . . . . . | . . .
    > [10,] . . . . . . . . . | . .
    > [11,] . . . . . . . . . . | .
    > [12,] . . . . . . . . . . . |
    >> try(# for older R versions
    > + stopifnot(identical(id.z, outerID(z,z)), oldR || identical(id.z, diag(12) == 1))
    > + )
    >> (mz <- match(z, z)) # currently different {NA,NaN} patterns differ - not in print()/format() _FIXME_
    > [1] 1 2 1 2 1 1 1 1 2 2 1 2
    >> zRI <- rbind(Re=Re(z), Im=Im(z)) # and see the pattern :
    >> print(cbind(format = format(z), t(zRI), mz), quote=FALSE)
    > format   Re   Im   mz
    > [1,]       NA <NA> 0    1 
    > [2,] NaN+  0i NaN  0    2 
    > [3,]       NA <NA> 1    1 
    > [4,] NaN+  1i NaN  1    2 
    > [5,]       NA 0    <NA> 1 
    > [6,]       NA 1    <NA> 1 
    > [7,]       NA <NA> <NA> 1 
    > [8,]       NA NaN  <NA> 1 
    > [9,]   0+NaNi 0    NaN  2 
    > [10,]   1+NaNi 1    NaN  2 
    > [11,]       NA <NA> NaN  1 
    > [12,] NaN+NaNi NaN  NaN  2 
    >> 
    > -------------------------------
    > Note that 'mz <- match(z, z)' and hence the last column of the matrix above
    > are very different in current R, 
    > distinguishing most kinds of NA / NaN  against the documentation (and the
    > real/numeric case).

    > Martin Maechler
    > R Core Team


    > ### Basically a shortened version of  the PR#16885 -- complex part b)
    > ### of  R/tests/reg-tests-1c.R

    > ## b) complex 'x' with different kinds of NaN
    > x0 <- c(0,1, NA, NaN); z <- outer(x0,x0, complex, length.out=1); rm(x0)
    > ##           --- = NA_real_  but that does not exist e.g., in R 2.3.1
    > ##                   similarly,  '1L', '2L', .. do not exist e.g., in R 2.3.1
    > (z <- z[is.na(z)])
    > outerID <- function(x,y, ...) { ## ugly; can we get outer() to work ?
    > r <- matrix( , length(x), length(y))
    > for(i in seq(along=x))
    > for(j in seq(along=y))
    > r[i,j] <- identical(z[i], z[j], ...)
    > r
    > }
    > ## Very strictly - in the sense of identical() -- these 12 complex numbers all differ:
    > ## a version that works in older versions of R, where identical() had fewer arguments!
    > outerID.picky <- function(x,y) {
    > nF <- length(formals(identical)) - 2
    > do.call("outerID", c(list(x, y), as.list(rep(FALSE, nF))))
    > }
    > oldR <- !exists("getRversion") || getRversion() < "3.0.0" ## << FIXME: 3.0.0 is  a wild guess
    > symnum(id.z <- outerID.picky(z,z)) ## == Diagonal matrix [newer versions of R]
    > try(# for older R versions
    > stopifnot(identical(id.z, outerID(z,z)), oldR || identical(id.z, diag(12) == 1))
    > )
    > (mz <- match(z, z)) # currently different {NA,NaN} patterns differ - not in print()/format() _FIXME_
    > zRI <- rbind(Re=Re(z), Im=Im(z)) # and see the pattern :
    > print(cbind(format = format(z), t(zRI), mz), quote=FALSE)

    > ## compute  match(z[i], z) , for  i = 1,2,..,12  :
    > (m1z <- sapply(z, match, table = z))
    > ## 1 2 1 2 2 2 1 2 2 2 1 2   # R 1.2.3  (2001-04-26)
    > ## 1 2 3 4 1 3 7 8 2 4 8 7   # R 1.4.1  (2002-01-30)
    > ## 1 2 3 4 1 3 7 8 2 4 8 12  # R 1.5.1  (2002-06-17)
    > ## 1 2 3 4 1 3 7 8 2 4 8 12  # R 1.8.1  (2003-11-21)
    > ## 1 2 3 4 1 3 7 8 2 4 8 12  # R 2.0.1  (2004-11-15)
    > ## 1 2 3 4 1 3 7 4 2 4 4 12  # R 2.1.1  (2005-06-20)
    > ## 1 2 3 4 1 3 7 4 2 4 4 12  # R 2.3.1  (2006-06-01)
    > ## 1 2 3 4 1 3 7 8 2 4 8 12  # R 2.5.1  (2007-06-27)
    > ## 1 2 3 4 1 3 7 4 2 4 4 12  # R 2.10.1 (2009-12-14)
    > ## 1 2 3 4 1 3 7 4 2 4 4 12  # R 3.1.1  (2014-07-10)
    > ## 1 2 3 4 1 3 7 4 2 4 4 12  # R 3.2.5 -- and 3.3.0 patched
    > ## 1 2 1 2 1 1 1 1 2 2 1 2   # <<-- Martin's R-devel and proposed future R

    > if(!exists("anyNA", mode="function")) anyNA <- function(x) any(is.na(x))
    > stopifnot(apply(zRI, 2, anyNA)) # *all* are  NA *or* NaN (or both)
    > is.NA <- function(.) is.na(.) & !is.nan(.)
    > (iNaN <- apply(zRI, 2, function(.) any(is.nan(.))))
    > (iNA <-  apply(zRI, 2, function(.) any(is.NA (.)))) # has non-NaN NA's
    > ## In Martin's version of R-devel :
    > stopifnot(identical(m1z == 1, iNA),
    > identical(m1z == 2, !iNA))
    > ## m1z uses match(x, *) with length(x) == 1 and failed in R 3.3.0
    > stopifnot(identical(m1z, mz))
    > ______________________________________________
    > R-devel at r-project.org mailing list
    > https://stat.ethz.ch/mailman/listinfo/r-devel


From kirill.mueller at ivt.baug.ethz.ch  Wed May 11 10:42:56 2016
From: kirill.mueller at ivt.baug.ethz.ch (=?UTF-8?Q?Kirill_M=c3=bcller?=)
Date: Wed, 11 May 2016 10:42:56 +0200
Subject: [Rd] R process killed when allocating too large matrix (Mac OS
	X)
In-Reply-To: <CABFfbXtm5hOW+ah_bjtnP5QproRnGXBtPUsKDK54SXqGfQu=Qg@mail.gmail.com>
References: <CAM3-KjYqc5CvDt4yKkOEPw--1Fq-c8O8x6UfFir5x==-UwFYvw@mail.gmail.com>
	<0e0160ec793649dda463b43d7e7d5c37@CONNHUB1.connect.uwaterloo.ca>
	<CAM3-Kja40deG=04U+PDNjLD=sHzQRiz_umia+wBEP77YyW5qQA@mail.gmail.com>
	<9b3da5c7758b455baad7209384abe7a7@CONNHUB4.connect.uwaterloo.ca>
	<CAM3-KjZ13TOz7x6DC+F1=9WsJFHbz4Ay0gf-fhQOv84oSRiE=w@mail.gmail.com>
	<308D9A3B-C40F-4AF7-AF1A-43DC8E1130EF@r-project.org>
	<572AA6AF.9040400@fredhutch.org>
	<3e8b8d2d46ac440892d2055c502b5be9@CONNHUB1.connect.uwaterloo.ca>
	<CAM3-KjbDejim0PSj9s5ognw4wfA=_BvD2UmfVDdmixqww2MkoA@mail.gmail.com>
	<2fa1c8e2-c692-1237-ea3c-572397038b26@statistik.tu-dortmund.de>
	<572B14D9.3050005@stats.ox.ac.uk>
	<CABFfbXtm5hOW+ah_bjtnP5QproRnGXBtPUsKDK54SXqGfQu=Qg@mail.gmail.com>
Message-ID: <5732F090.8020301@ivt.baug.ethz.ch>

My ulimit package exposes this API ([1], should finally submit it to 
CRAN); unfortunately this very API seems to be unsupported on OS X 
[2,3]. Last time I looked into it, neither of the documented settings 
achieved the desired effect.


-Kirill


[1] http://krlmlr.github.io/ulimit
[2] 
http://stackoverflow.com/questions/3274385/how-to-limit-memory-of-a-os-x-program-ulimit-v-neither-m-are-working
[3] 
https://developer.apple.com/library/ios/documentation/System/Conceptual/ManPages_iPhoneOS/man2/getrlimit.2.html


On 10.05.2016 01:08, Jeroen Ooms wrote:
> On 05/05/2016 10:11, Uwe Ligges wrote:
>> Actually this also happens under Linux and I had my R processes killed
>> more than once (and much worse also other processes so that we had to
>> reboot a server, essentially).
> I found that setting RLIMIT_AS [1] works very well on Linux. But this
> requires that you cap memory to some fixed value.
>
>> library(RAppArmor)
>> rlimit_as(1e9)
>> rnorm(1e9)
> Error: cannot allocate vector of size 7.5 Gb
>
> The RAppArmor package has many other utilities to protect your server
> such from a mis-behaving process such as limiting cpu time
> (RLIMIT_CPU), fork bombs (RLIMIT_NPROC) and file sizes (RLIMIT_FSIZE).
>
> [1] http://linux.die.net/man/2/getrlimit
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From frederik at ofb.net  Thu May 12 08:00:20 2016
From: frederik at ofb.net (frederik at ofb.net)
Date: Wed, 11 May 2016 23:00:20 -0700
Subject: [Rd] where to send patches to R source code
In-Reply-To: <20160504190906.GA12270@ofb.net>
References: <20160504190906.GA12270@ofb.net>
Message-ID: <20160512060020.GA6098@ofb.net>

Dear R Developers,

I wrote to this list a week ago with some patches that fix bugs in R's
GNU Readline interface, but I haven't had a reply. I'm not in a hurry
but I'd like to make sure that my message is getting read by the right
people. Should I be sending my patches somewhere else?

Thank you,

Frederick


From maechler at stat.math.ethz.ch  Thu May 12 09:51:54 2016
From: maechler at stat.math.ethz.ch (Martin Maechler)
Date: Thu, 12 May 2016 09:51:54 +0200
Subject: [Rd] R process killed when allocating too large matrix (Mac OS
	X)
In-Reply-To: <5732F090.8020301@ivt.baug.ethz.ch>
References: <CAM3-KjYqc5CvDt4yKkOEPw--1Fq-c8O8x6UfFir5x==-UwFYvw@mail.gmail.com>
	<0e0160ec793649dda463b43d7e7d5c37@CONNHUB1.connect.uwaterloo.ca>
	<CAM3-Kja40deG=04U+PDNjLD=sHzQRiz_umia+wBEP77YyW5qQA@mail.gmail.com>
	<9b3da5c7758b455baad7209384abe7a7@CONNHUB4.connect.uwaterloo.ca>
	<CAM3-KjZ13TOz7x6DC+F1=9WsJFHbz4Ay0gf-fhQOv84oSRiE=w@mail.gmail.com>
	<308D9A3B-C40F-4AF7-AF1A-43DC8E1130EF@r-project.org>
	<572AA6AF.9040400@fredhutch.org>
	<3e8b8d2d46ac440892d2055c502b5be9@CONNHUB1.connect.uwaterloo.ca>
	<CAM3-KjbDejim0PSj9s5ognw4wfA=_BvD2UmfVDdmixqww2MkoA@mail.gmail.com>
	<2fa1c8e2-c692-1237-ea3c-572397038b26@statistik.tu-dortmund.de>
	<572B14D9.3050005@stats.ox.ac.uk>
	<CABFfbXtm5hOW+ah_bjtnP5QproRnGXBtPUsKDK54SXqGfQu=Qg@mail.gmail.com>
	<5732F090.8020301@ivt.baug.ethz.ch>
Message-ID: <22324.13850.608673.341820@stat.math.ethz.ch>

>>>>> Kirill M?ller <kirill.mueller at ivt.baug.ethz.ch>
>>>>>     on Wed, 11 May 2016 10:42:56 +0200 writes:

    > My ulimit package exposes this API ([1], should finally submit it to 
    > CRAN); unfortunately this very API seems to be unsupported on OS X 
    > [2,3]. Last time I looked into it, neither of the documented settings 
    > achieved the desired effect.

    > -Kirill

    > [1] http://krlmlr.github.io/ulimit
    > [2] 
    > http://stackoverflow.com/questions/3274385/how-to-limit-memory-of-a-os-x-program-ulimit-v-neither-m-are-working
    > [3] 
    > https://developer.apple.com/library/ios/documentation/System/Conceptual/ManPages_iPhoneOS/man2/getrlimit.2.html


    > On 10.05.2016 01:08, Jeroen Ooms wrote:
    >> On 05/05/2016 10:11, Uwe Ligges wrote:
    >>> Actually this also happens under Linux and I had my R processes killed
    >>> more than once (and much worse also other processes so that we had to
    >>> reboot a server, essentially).

I agree that Linux is not consistently fine here either.

    >> I found that setting RLIMIT_AS [1] works very well on Linux. But this
    >> requires that you cap memory to some fixed value.

conceivably one could set a default cap, using something
equivalent to the data in

		sfsmisc::Sys.meminfo()
or		sfsmisc::Sys.memGB()		

(very simple, > 10 year old interfaces, based on the  Linux-only (?)
 '/proc/*' filesystem).


In an ideal word, some of us,
    from R core, Jeroen, Kyrill, <one person knowing much about Windows>,
    maintainer("microbenchmark>, ...
would sit together and devise an R function interface (based on
low level platform specific interfaces, specifically for at least
Linux/POSIX-compliant, Mac, and Windows) which would allow
something  like your rlimit(..) calls below.

We'd really need something to work on all platforms ideally,
to be used by R package maintainers
and possibly even better by R itself at startup, setting a
reasonable memory cap - which the user could raise even to +Inf (or lower
even more).

Martin

---------
Final notes about RAppArmor, not relevant to the main thread topic :

Note: I'm working in pretty well maintained Fedora Linux env,
but Apparmor is not only not activated, but even not available.
OTOH, usting  RLIMIT / gerlimit on Linux is very generally
available.

As a consequence, the three last lines of

   > require(RAppArmor)
   Loading required package: RAppArmor
   Loading required package: tools
   Failed to lookup process confinement:
   AppArmor not supported on this system
   Have a look at: sudo aa-status

were very confusing to me:  My conclusion was I could not use
the RAppArmor package.

(But that's wrong: For the  rlimit*()  functions below, one do
 *NOT* need an AppArmor-enabled version of Linux !)
		  
    >>> library(RAppArmor)
    >>> rlimit_as(1e9)
    >>> rnorm(1e9)
    >> Error: cannot allocate vector of size 7.5 Gb
    >> 
    >> The RAppArmor package has many other utilities to protect your server
    >> such from a mis-behaving process such as limiting cpu time
    >> (RLIMIT_CPU), fork bombs (RLIMIT_NPROC) and file sizes (RLIMIT_FSIZE).
    >> 
    >> [1] http://linux.die.net/man/2/getrlimit

and from my current explorations I gather that all of these are
*not* Apparmor related... so could/should maybe rather migrate
into a lightweight package not mentioning AppArmor ?


From maechler at stat.math.ethz.ch  Thu May 12 10:03:55 2016
From: maechler at stat.math.ethz.ch (Martin Maechler)
Date: Thu, 12 May 2016 10:03:55 +0200
Subject: [Rd] where to send patches to R source code
In-Reply-To: <20160512060020.GA6098@ofb.net>
References: <20160504190906.GA12270@ofb.net>
	<20160512060020.GA6098@ofb.net>
Message-ID: <22324.14571.269842.331918@stat.math.ethz.ch>

>>>>>   <frederik at ofb.net>
>>>>>     on Wed, 11 May 2016 23:00:20 -0700 writes:

    > Dear R Developers,
    > I wrote to this list a week ago with some patches that fix bugs in R's
    > GNU Readline interface, but I haven't had a reply. I'm not in a hurry
    > but I'd like to make sure that my message is getting read by the right
    > people. Should I be sending my patches somewhere else?

Thank you Frederick for your reports and patches.
You did send them to the correct place, https://bugs.r-project.org/

Sometimes (as here) a combination of circumstances do lead to
nobody picking them up quickly.
In this case,

- probably none of R-core use or even have easy access to Arch Linux
  so we cannot easily veryify that there is a bug at all
  nor -consequently- veryify that your patch does fix the bug.

- no other user has confirmed the bug on his/her platform, so
  there did not seem a huge demand...

- Accidentally many in R core may be busy with other bugs, teaching, .....
  and just lack the extra resources to delve into these problems
  at the current moment.

Hence, there was not even an 'Acknowledged' change to your
reports--indeed as nobody had been able to see there is a problem
existing outside of your personal computer.

I agree that this must seem a bit frustrating to you.

--
Martin


From maechler at stat.math.ethz.ch  Thu May 12 11:18:13 2016
From: maechler at stat.math.ethz.ch (Martin Maechler)
Date: Thu, 12 May 2016 11:18:13 +0200
Subject: [Rd] Too many spaces in deparsed complex numbers with
	digits17	control option
In-Reply-To: <CAPp_+=eeoQcYoN6a6GT9y3DXsTj_-sNPGJGMJvXbDB5EXqdjYw@mail.gmail.com>
References: <CAPp_+=eeoQcYoN6a6GT9y3DXsTj_-sNPGJGMJvXbDB5EXqdjYw@mail.gmail.com>
Message-ID: <22324.19029.303010.208850@stat.math.ethz.ch>

>>>>> Richard Cotton <richierocks at gmail.com>
>>>>>     on Thu, 5 May 2016 09:37:42 +0300 writes:

> If you set the "digits17" control option in deparse, you get a lot of
> unnecessary space in the representation of complex numbers.

> > deparse(0 + 0i)
> [1] "0+0i"
> > deparse(0 + 0i, control = "digits17")
> [1] "0 +                 0i"

> As far as I can tell, the logic for this comes from this piece of
> /src/main/deparse.c:

> if (TYPEOF(vector) == CPLXSXP && (d->opts & DIGITS16)) {
>   Rcomplex z =  COMPLEX(vector)[i];
>   if (R_FINITE(z.r) && R_FINITE(z.i)) {
>       snprintf(hex, 64, "%.17g + %17gi", z.r, z.i);
>       strp = hex;
>   } else
>       strp = EncodeElement(vector, i, quote, '.');
> }

> I think this is a small bug, and that "%17gi" in the snprintf call
> ought to be "%.17gi".

> Also there shouldn't be any space around the plus sign for consistency
> with the non-digits17 option.

> Is this a real bug, or is it deliberate behaviour?

> -- 
> Regards,
> Richie

Thank you, Richie! 
I agree it should be improved ...
actually, there is even another improvement, so we don't get things like
  '2+-1i' but rather '2-1i'

(namely to use the '+' format modifier option for printf).

I have commited a change to R-devel (only, for now),
svn rev 70601 specifically.

Martin


--
Martin <Maechler at stat.math.ethz.ch>  http://stat.ethz.ch/people/maechler
Seminar f?r Statistik, ETH Z?rich  HG G 16      R?mistrasse 101
CH-8092 Zurich, SWITZERLAND
phone: +41-44-632-3408       fax: ...-1228      <><


From jeroen.ooms at stat.ucla.edu  Thu May 12 12:07:29 2016
From: jeroen.ooms at stat.ucla.edu (Jeroen Ooms)
Date: Thu, 12 May 2016 12:07:29 +0200
Subject: [Rd] R process killed when allocating too large matrix (Mac OS
	X)
In-Reply-To: <22324.13850.608673.341820@stat.math.ethz.ch>
References: <CAM3-KjYqc5CvDt4yKkOEPw--1Fq-c8O8x6UfFir5x==-UwFYvw@mail.gmail.com>
	<0e0160ec793649dda463b43d7e7d5c37@CONNHUB1.connect.uwaterloo.ca>
	<CAM3-Kja40deG=04U+PDNjLD=sHzQRiz_umia+wBEP77YyW5qQA@mail.gmail.com>
	<9b3da5c7758b455baad7209384abe7a7@CONNHUB4.connect.uwaterloo.ca>
	<CAM3-KjZ13TOz7x6DC+F1=9WsJFHbz4Ay0gf-fhQOv84oSRiE=w@mail.gmail.com>
	<308D9A3B-C40F-4AF7-AF1A-43DC8E1130EF@r-project.org>
	<572AA6AF.9040400@fredhutch.org>
	<3e8b8d2d46ac440892d2055c502b5be9@CONNHUB1.connect.uwaterloo.ca>
	<CAM3-KjbDejim0PSj9s5ognw4wfA=_BvD2UmfVDdmixqww2MkoA@mail.gmail.com>
	<2fa1c8e2-c692-1237-ea3c-572397038b26@statistik.tu-dortmund.de>
	<572B14D9.3050005@stats.ox.ac.uk>
	<CABFfbXtm5hOW+ah_bjtnP5QproRnGXBtPUsKDK54SXqGfQu=Qg@mail.gmail.com>
	<5732F090.8020301@ivt.baug.ethz.ch>
	<22324.13850.608673.341820@stat.math.ethz.ch>
Message-ID: <CABFfbXveR5etvmzb5yCjmJ645HfHrLLomdi+eUT6g223go9v_A@mail.gmail.com>

On Thu, May 12, 2016 at 9:51 AM, Martin Maechler
<maechler at stat.math.ethz.ch> wrote:
> My conclusion was I could not use the RAppArmor package.
>
> (But that's wrong: For the  rlimit*()  functions below, one do
>  *NOT* need an AppArmor-enabled version of Linux !)

Yes, it is a relatively recent (unadvertised) feature that the package
now builds on linux systems without libapparmor. I agree this names
the package name confusing. I'll make at least that warning more
informative.

Some background: When I started the package (5 years ago) I expected
that soon all linux distributions would have the apparmor module which
has been in the kernel since 2.6.36. However Redhat is explicitly
disabling it because they are pushing a competing MAC system (SELinux)
which they develop together with the NSA, and they really want you to
use this instead (and only this!).

> I gather that all of these are *not* Apparmor related... so could/should maybe rather migrate into a lightweight package not mentioning AppArmor ?

I agree, it has been on the to do list for a while; Kirill and me were
talking yesterday about what would be the best route to take:

 - A small package with only the rlimit bindings
 - or: A 'linux' package with bindings to anything in the kernel,
including rlimit, but possibly other system tools.
 - or: A package targeting POSIX/unix with standard functionality that
is also available on OSX/BSD.

>From my experience, windows is pretty useless for this kind of stuff.


From cireyapmin at gmail.com  Thu May 12 13:03:01 2016
From: cireyapmin at gmail.com (virgo)
Date: Thu, 12 May 2016 12:03:01 +0100
Subject: [Rd] R process killed when allocating too large matrix (Mac OS
 X)
In-Reply-To: <CABFfbXveR5etvmzb5yCjmJ645HfHrLLomdi+eUT6g223go9v_A@mail.gmail.com>
References: <CAM3-KjYqc5CvDt4yKkOEPw--1Fq-c8O8x6UfFir5x==-UwFYvw@mail.gmail.com>
	<0e0160ec793649dda463b43d7e7d5c37@CONNHUB1.connect.uwaterloo.ca>
	<CAM3-Kja40deG=04U+PDNjLD=sHzQRiz_umia+wBEP77YyW5qQA@mail.gmail.com>
	<9b3da5c7758b455baad7209384abe7a7@CONNHUB4.connect.uwaterloo.ca>
	<CAM3-KjZ13TOz7x6DC+F1=9WsJFHbz4Ay0gf-fhQOv84oSRiE=w@mail.gmail.com>
	<308D9A3B-C40F-4AF7-AF1A-43DC8E1130EF@r-project.org>
	<572AA6AF.9040400@fredhutch.org>
	<3e8b8d2d46ac440892d2055c502b5be9@CONNHUB1.connect.uwaterloo.ca>
	<CAM3-KjbDejim0PSj9s5ognw4wfA=_BvD2UmfVDdmixqww2MkoA@mail.gmail.com>
	<2fa1c8e2-c692-1237-ea3c-572397038b26@statistik.tu-dortmund.de>
	<572B14D9.3050005@stats.ox.ac.uk>
	<CABFfbXtm5hOW+ah_bjtnP5QproRnGXBtPUsKDK54SXqGfQu=Qg@mail.gmail.com>
	<5732F090.8020301@ivt.baug.ethz.ch>
	<22324.13850.608673.341820@stat.math.ethz.ch>
	<CABFfbXveR5etvmzb5yCjmJ645HfHrLLomdi+eUT6g223go9v_A@mail.gmail.com>
Message-ID: <20160512120307.375507e6@virgo>

On Thu, 12 May 2016 12:07:29 +0200
Jeroen Ooms <jeroen.ooms at stat.ucla.edu> wrote:

> On Thu, May 12, 2016 at 9:51 AM, Martin Maechler
> <maechler at stat.math.ethz.ch> wrote:
> > My conclusion was I could not use the RAppArmor package.
> >
> > (But that's wrong: For the  rlimit*()  functions below, one do
> >  *NOT* need an AppArmor-enabled version of Linux !)  
> 
> Yes, it is a relatively recent (unadvertised) feature that the package
> now builds on linux systems without libapparmor. I agree this names
> the package name confusing. I'll make at least that warning more
> informative.
> 
> Some background: When I started the package (5 years ago) I expected
> that soon all linux distributions would have the apparmor module which
> has been in the kernel since 2.6.36. However Redhat is explicitly
> disabling it because they are pushing a competing MAC system (SELinux)
> which they develop together with the NSA, and they really want you to
> use this instead (and only this!).
> 
> > I gather that all of these are *not* Apparmor related... so
> > could/should maybe rather migrate into a lightweight package not
> > mentioning AppArmor ?  
> 
> I agree, it has been on the to do list for a while; Kirill and me were
> talking yesterday about what would be the best route to take:
> 
>  - A small package with only the rlimit bindings
>  - or: A 'linux' package with bindings to anything in the kernel,
> including rlimit, but possibly other system tools.
>  - or: A package targeting POSIX/unix with standard functionality that
> is also available on OSX/BSD.
> 
> >From my experience, windows is pretty useless for this kind of
> >stuff.  
Maybe not so useless after reading [1] about computationally
querying the OSes on the available memory and [2] about pushing the
OSes' limits. The latter page is part of a series where each topic is
valuable on its own.

[1]?https://msdn.microsoft.com/en-us/library/aa366778.aspx
[2]?https://blogs.technet.microsoft.com/markrussinovich/2008/07/21/pushing-the-limits-of-windows-physical-memory/
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From jeroen.ooms at stat.ucla.edu  Thu May 12 13:20:09 2016
From: jeroen.ooms at stat.ucla.edu (Jeroen Ooms)
Date: Thu, 12 May 2016 13:20:09 +0200
Subject: [Rd] Suggestion: mkString(NULL) should be NA
Message-ID: <CABFfbXt7raZDRaGP+T=XWKeBZq8oh88FRh8+Xj7jFkf_VFspsA@mail.gmail.com>

I would like to propose that Rf_mkString(NULL) and Rf_mkChar(NULL)
return NA rather than segfault.

Case: the mkString() and mkChar() functions are convenient to wrap
strings returned by e.g. external C libraries into an R vector.
However sometimes a library returns NULL instead of a string when the
result is unavailable. In some C libraries this can happen
unexpectedly or is even undocumented.

A good R package author always checks results for a null pointer, and
deals with it accordingly. But sometimes we make assumptions. There
was an example in the 'curl' package where a documented version string
was suddenly NULL if libcurl was built with some unusual
configuration. These problems are hard to catch and I don't see any
benefit of segfaulting for such edge cases.

Some packages use a macro like this to protect against such problems:

  #define make_string(x) x ? Rf_mkString(x) : ScalarString(NA_STRING)

But I think it would make sense if this was the default behavior in
Rf_mkString and Rf_mkChar.


From cdetermanjr at gmail.com  Thu May 12 14:45:16 2016
From: cdetermanjr at gmail.com (Charles Determan)
Date: Thu, 12 May 2016 07:45:16 -0500
Subject: [Rd] Single-threaded aspect
Message-ID: <CAKxd1KPhHhWuMF2Tbc+08uABm6gji=43PT3xTc+0-kdY6t=b2Q@mail.gmail.com>

R Developers,

Could someone help explain what it means that R is single threaded?  I am
trying to understand what is actually going on inside R when users want to
parallelize code.  For example, using mclapply or foreach (with some
backend) somehow allows users to benefit from multiple CPUs.

Similarly there is the RcppParallel package for RMatrix/RVector objects.
But none of these address the general XPtr objects in Rcpp.  Some readers
here may recognize my question on SO (
http://stackoverflow.com/questions/37167479/rcpp-parallelize-functions-that-return-xptr)
where I was curious about parallel calls to C++/Rcpp functions that return
XPtr objects.  I am being a little more persistent here as this limitation
provides a very hard stop on the development on one of my packages that
heavily uses XPtr objects.  It's not meant to be a criticism or intended to
be rude, I just want to fully understand.

I am willing to accept that it may be impossible currently but I want to at
least understand why it is impossible so I can explain to future users why
parallel functionality is not available.  Which just echos my original
question, what does it mean that R is single threaded?

Kind Regards,
Charles

	[[alternative HTML version deleted]]


From murdoch.duncan at gmail.com  Thu May 12 15:12:07 2016
From: murdoch.duncan at gmail.com (Duncan Murdoch)
Date: Thu, 12 May 2016 09:12:07 -0400
Subject: [Rd] Single-threaded aspect
In-Reply-To: <CAKxd1KPhHhWuMF2Tbc+08uABm6gji=43PT3xTc+0-kdY6t=b2Q@mail.gmail.com>
References: <CAKxd1KPhHhWuMF2Tbc+08uABm6gji=43PT3xTc+0-kdY6t=b2Q@mail.gmail.com>
Message-ID: <57348127.3010008@gmail.com>

On 12/05/2016 8:45 AM, Charles Determan wrote:
> R Developers,
>
> Could someone help explain what it means that R is single threaded?  I am
> trying to understand what is actually going on inside R when users want to
> parallelize code.  For example, using mclapply or foreach (with some
> backend) somehow allows users to benefit from multiple CPUs.

I don't know what document you are quoting when you say "R is single 
threaded", but one possible meaning is that most base R calculations are 
done in a single thread.  When you do vectorized calculations like x+y 
for long vectors x and y, they are done internally as loops over the 
entries.

On Windows, there are two threads when running Rterm, with one to 
maintain the display, since otherwise the plot display couldn't update 
while R is waiting for input.

The mclapply function in the parallel package forks the process to do 
its calculations.

Other packages can do other variations on parallel computations.

I can't help you with the rest of your question, I don't know what XPtr 
objects are.

Duncan Murdoch

>
> Similarly there is the RcppParallel package for RMatrix/RVector objects.
> But none of these address the general XPtr objects in Rcpp.  Some readers
> here may recognize my question on SO (
> http://stackoverflow.com/questions/37167479/rcpp-parallelize-functions-that-return-xptr)
> where I was curious about parallel calls to C++/Rcpp functions that return
> XPtr objects.  I am being a little more persistent here as this limitation
> provides a very hard stop on the development on one of my packages that
> heavily uses XPtr objects.  It's not meant to be a criticism or intended to
> be rude, I just want to fully understand.
>
> I am willing to accept that it may be impossible currently but I want to at
> least understand why it is impossible so I can explain to future users why
> parallel functionality is not available.  Which just echos my original
> question, what does it mean that R is single threaded?
>
> Kind Regards,
> Charles
>
> 	[[alternative HTML version deleted]]
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>


From cdetermanjr at gmail.com  Thu May 12 15:16:52 2016
From: cdetermanjr at gmail.com (Charles Determan)
Date: Thu, 12 May 2016 08:16:52 -0500
Subject: [Rd] Single-threaded aspect
In-Reply-To: <CAOKDuOitDaQgR-3ao=VG9OTX2vDNoQ4_uiJa7H6ghS=g1=HdDA@mail.gmail.com>
References: <CAKxd1KPhHhWuMF2Tbc+08uABm6gji=43PT3xTc+0-kdY6t=b2Q@mail.gmail.com>
	<CAOKDuOitDaQgR-3ao=VG9OTX2vDNoQ4_uiJa7H6ghS=g1=HdDA@mail.gmail.com>
Message-ID: <CAKxd1KMDKkaA=Q1LfUHEvH-p3uZLQitF3b-sjX7zGytoDbGgKA@mail.gmail.com>

Thanks for the replies.  Regarding the answer by Dirk, I didn't feel like I
still understood the reasoning why mclapply or foreach cannot handle XPtr
objects.  Instead of cluttering the SO question with comments I was getting
the impression that this was a limitation inherited with R objects (which
XPtr is supposed to be a proxy for an R object according to Dirk's
comment).  If this is not the case, I could repost this on Rcpp-devel
unless it could be migrated.

Regards,
Charles

On Thu, May 12, 2016 at 8:11 AM, Mark van der Loo <mark.vanderloo at gmail.com>
wrote:

> Charles,
>
> 1. Perhaps this question is better directed at the R-help or
> R-pacakge-devel mailinglist.
>
> 2. It basically means that R itself can only evaluate one R expression at
> the time.
>
> The parallel package circumvents this by starting multiple R-sessions and
> dividing workload.
>
> Compiled code called by R (such as C++ code through RCpp or C-code through
> base R's interface) can execute multi-threaded code for internal purposes,
> using e.g. openMP. A limitation is that compiled code cannot call R's C API
> from multiple threads (in many cases). For example, it is not thread-safe
> to create R-variables from multiple threads running in C. (R's variable
> administration is such that the order of (un)making them from compiled code
> matters).
>
> I am not very savvy on Rcpp or XPtr objects, but it appears that Dirk
> provided answers about that in your SO-question.
>
> Best,
> Mark
>
>
>
>
>
>
>
>
>
>
> Op do 12 mei 2016 om 14:46 schreef Charles Determan <cdetermanjr at gmail.com
> >:
>
>> R Developers,
>>
>> Could someone help explain what it means that R is single threaded?  I am
>> trying to understand what is actually going on inside R when users want to
>> parallelize code.  For example, using mclapply or foreach (with some
>> backend) somehow allows users to benefit from multiple CPUs.
>>
>> Similarly there is the RcppParallel package for RMatrix/RVector objects.
>> But none of these address the general XPtr objects in Rcpp.  Some readers
>> here may recognize my question on SO (
>>
>> http://stackoverflow.com/questions/37167479/rcpp-parallelize-functions-that-return-xptr
>> )
>> where I was curious about parallel calls to C++/Rcpp functions that return
>> XPtr objects.  I am being a little more persistent here as this limitation
>> provides a very hard stop on the development on one of my packages that
>> heavily uses XPtr objects.  It's not meant to be a criticism or intended
>> to
>> be rude, I just want to fully understand.
>>
>> I am willing to accept that it may be impossible currently but I want to
>> at
>> least understand why it is impossible so I can explain to future users why
>> parallel functionality is not available.  Which just echos my original
>> question, what does it mean that R is single threaded?
>>
>> Kind Regards,
>> Charles
>>
>>         [[alternative HTML version deleted]]
>>
>> ______________________________________________
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>
>

	[[alternative HTML version deleted]]


From mark.vanderloo at gmail.com  Thu May 12 15:11:32 2016
From: mark.vanderloo at gmail.com (Mark van der Loo)
Date: Thu, 12 May 2016 13:11:32 +0000
Subject: [Rd] Single-threaded aspect
In-Reply-To: <CAKxd1KPhHhWuMF2Tbc+08uABm6gji=43PT3xTc+0-kdY6t=b2Q@mail.gmail.com>
References: <CAKxd1KPhHhWuMF2Tbc+08uABm6gji=43PT3xTc+0-kdY6t=b2Q@mail.gmail.com>
Message-ID: <CAOKDuOitDaQgR-3ao=VG9OTX2vDNoQ4_uiJa7H6ghS=g1=HdDA@mail.gmail.com>

Charles,

1. Perhaps this question is better directed at the R-help or
R-pacakge-devel mailinglist.

2. It basically means that R itself can only evaluate one R expression at
the time.

The parallel package circumvents this by starting multiple R-sessions and
dividing workload.

Compiled code called by R (such as C++ code through RCpp or C-code through
base R's interface) can execute multi-threaded code for internal purposes,
using e.g. openMP. A limitation is that compiled code cannot call R's C API
from multiple threads (in many cases). For example, it is not thread-safe
to create R-variables from multiple threads running in C. (R's variable
administration is such that the order of (un)making them from compiled code
matters).

I am not very savvy on Rcpp or XPtr objects, but it appears that Dirk
provided answers about that in your SO-question.

Best,
Mark










Op do 12 mei 2016 om 14:46 schreef Charles Determan <cdetermanjr at gmail.com>:

> R Developers,
>
> Could someone help explain what it means that R is single threaded?  I am
> trying to understand what is actually going on inside R when users want to
> parallelize code.  For example, using mclapply or foreach (with some
> backend) somehow allows users to benefit from multiple CPUs.
>
> Similarly there is the RcppParallel package for RMatrix/RVector objects.
> But none of these address the general XPtr objects in Rcpp.  Some readers
> here may recognize my question on SO (
>
> http://stackoverflow.com/questions/37167479/rcpp-parallelize-functions-that-return-xptr
> )
> where I was curious about parallel calls to C++/Rcpp functions that return
> XPtr objects.  I am being a little more persistent here as this limitation
> provides a very hard stop on the development on one of my packages that
> heavily uses XPtr objects.  It's not meant to be a criticism or intended to
> be rude, I just want to fully understand.
>
> I am willing to accept that it may be impossible currently but I want to at
> least understand why it is impossible so I can explain to future users why
> parallel functionality is not available.  Which just echos my original
> question, what does it mean that R is single threaded?
>
> Kind Regards,
> Charles
>
>         [[alternative HTML version deleted]]
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>

	[[alternative HTML version deleted]]


From pdalgd at gmail.com  Thu May 12 15:42:59 2016
From: pdalgd at gmail.com (peter dalgaard)
Date: Thu, 12 May 2016 15:42:59 +0200
Subject: [Rd] where to send patches to R source code
In-Reply-To: <22324.14571.269842.331918@stat.math.ethz.ch>
References: <20160504190906.GA12270@ofb.net> <20160512060020.GA6098@ofb.net>
	<22324.14571.269842.331918@stat.math.ethz.ch>
Message-ID: <A0A56543-03D7-4DCB-8CFB-6F5A09F4233C@gmail.com>


> On 12 May 2016, at 10:03 , Martin Maechler <maechler at stat.math.ethz.ch> wrote:
> 
>>>>>>  <frederik at ofb.net>
>>>>>>    on Wed, 11 May 2016 23:00:20 -0700 writes:
> 
>> Dear R Developers,
>> I wrote to this list a week ago with some patches that fix bugs in R's
>> GNU Readline interface, but I haven't had a reply. I'm not in a hurry
>> but I'd like to make sure that my message is getting read by the right
>> people. Should I be sending my patches somewhere else?
> 
> Thank you Frederick for your reports and patches.
> You did send them to the correct place, https://bugs.r-project.org/
> 
> Sometimes (as here) a combination of circumstances do lead to
> nobody picking them up quickly.
> In this case,
> 
> - probably none of R-core use or even have easy access to Arch Linux
>  so we cannot easily veryify that there is a bug at all
>  nor -consequently- veryify that your patch does fix the bug.

Actually, the bugs look like they should apply fairly generally, just maybe not bothering all that many people. But there could be portability issues with the fixes, so I suspect some of us were waiting for "a readline expert" to check them out.

-pd

BTW: Anyone with a fix for the stuck-at-eol issue? (aaa<right>bbb<left>ccc) 

> 
> - no other user has confirmed the bug on his/her platform, so
>  there did not seem a huge demand...
> 
> - Accidentally many in R core may be busy with other bugs, teaching, .....
>  and just lack the extra resources to delve into these problems
>  at the current moment.
> 
> Hence, there was not even an 'Acknowledged' change to your
> reports--indeed as nobody had been able to see there is a problem
> existing outside of your personal computer.
> 
> I agree that this must seem a bit frustrating to you.
> 
> --
> Martin
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel

-- 
Peter Dalgaard, Professor,
Center for Statistics, Copenhagen Business School
Solbjerg Plads 3, 2000 Frederiksberg, Denmark
Phone: (+45)38153501
Office: A 4.23
Email: pd.mes at cbs.dk  Priv: PDalgd at gmail.com


From simon.urbanek at r-project.org  Thu May 12 16:12:54 2016
From: simon.urbanek at r-project.org (Simon Urbanek)
Date: Thu, 12 May 2016 10:12:54 -0400
Subject: [Rd] Single-threaded aspect
In-Reply-To: <CAKxd1KMDKkaA=Q1LfUHEvH-p3uZLQitF3b-sjX7zGytoDbGgKA@mail.gmail.com>
References: <CAKxd1KPhHhWuMF2Tbc+08uABm6gji=43PT3xTc+0-kdY6t=b2Q@mail.gmail.com>
	<CAOKDuOitDaQgR-3ao=VG9OTX2vDNoQ4_uiJa7H6ghS=g1=HdDA@mail.gmail.com>
	<CAKxd1KMDKkaA=Q1LfUHEvH-p3uZLQitF3b-sjX7zGytoDbGgKA@mail.gmail.com>
Message-ID: <BD424157-1C45-41DA-AAD8-0FD96AC88F9A@r-project.org>

As others said XPtr is not something in R so Rcpp mailing list would be the right place for that aspect.

However, it you forget Rcpp and phrase it as an R question, you also get much closer to the reason and answer. SEXP type is the internal representation of all objects in R. I assume your question is which operations in the R API on those are thread-safe. The answer is that most of them are not, the main reason being that the memory management is not thread-safe, i.e. you cannot allocate anything without synchronization. Since almost all API calls involve some memory allocations, they are not thread-safe. You can, however, allocate objects and the operate on their payload, e.g., you can get numerical input vectors, allocate the result vector and then perform your threaded computation in C on those, synchronize and get back - that's how most implicit parallel operations in R work (leveraging BLAS, OpenMP, etc.). That is also what Dirk replied in your SO answer (quote: "Packages like RcppParallel are very careful about using non-R data structures for multithreaded work."). Note that the payload of most native vectors (integer, real, complex) is technically non-R data structure in the sense so you can operate on those directly (some read-only operations are also thread-safe in the API as long as they can't trigger errors/warning/side-effects).

For completeness, memory allocation is not the only reason or obstacle for thread-safe R API calls, but a main one. Other issues involve error handling (you may long-jump out of your thread stack) and global state (devices, connections etc.). In short, it's not something that can be really solved without complete re-design and re-write.

Cheers,
Simon


> On May 12, 2016, at 9:16 AM, Charles Determan <cdetermanjr at gmail.com> wrote:
> 
> Thanks for the replies.  Regarding the answer by Dirk, I didn't feel like I
> still understood the reasoning why mclapply or foreach cannot handle XPtr
> objects.  Instead of cluttering the SO question with comments I was getting
> the impression that this was a limitation inherited with R objects (which
> XPtr is supposed to be a proxy for an R object according to Dirk's
> comment).  If this is not the case, I could repost this on Rcpp-devel
> unless it could be migrated.
> 
> Regards,
> Charles
> 
> On Thu, May 12, 2016 at 8:11 AM, Mark van der Loo <mark.vanderloo at gmail.com>
> wrote:
> 
>> Charles,
>> 
>> 1. Perhaps this question is better directed at the R-help or
>> R-pacakge-devel mailinglist.
>> 
>> 2. It basically means that R itself can only evaluate one R expression at
>> the time.
>> 
>> The parallel package circumvents this by starting multiple R-sessions and
>> dividing workload.
>> 
>> Compiled code called by R (such as C++ code through RCpp or C-code through
>> base R's interface) can execute multi-threaded code for internal purposes,
>> using e.g. openMP. A limitation is that compiled code cannot call R's C API
>> from multiple threads (in many cases). For example, it is not thread-safe
>> to create R-variables from multiple threads running in C. (R's variable
>> administration is such that the order of (un)making them from compiled code
>> matters).
>> 
>> I am not very savvy on Rcpp or XPtr objects, but it appears that Dirk
>> provided answers about that in your SO-question.
>> 
>> Best,
>> Mark
>> 
>> 
>> 
>> 
>> 
>> 
>> 
>> 
>> 
>> 
>> Op do 12 mei 2016 om 14:46 schreef Charles Determan <cdetermanjr at gmail.com
>>> :
>> 
>>> R Developers,
>>> 
>>> Could someone help explain what it means that R is single threaded?  I am
>>> trying to understand what is actually going on inside R when users want to
>>> parallelize code.  For example, using mclapply or foreach (with some
>>> backend) somehow allows users to benefit from multiple CPUs.
>>> 
>>> Similarly there is the RcppParallel package for RMatrix/RVector objects.
>>> But none of these address the general XPtr objects in Rcpp.  Some readers
>>> here may recognize my question on SO (
>>> 
>>> http://stackoverflow.com/questions/37167479/rcpp-parallelize-functions-that-return-xptr
>>> )
>>> where I was curious about parallel calls to C++/Rcpp functions that return
>>> XPtr objects.  I am being a little more persistent here as this limitation
>>> provides a very hard stop on the development on one of my packages that
>>> heavily uses XPtr objects.  It's not meant to be a criticism or intended
>>> to
>>> be rude, I just want to fully understand.
>>> 
>>> I am willing to accept that it may be impossible currently but I want to
>>> at
>>> least understand why it is impossible so I can explain to future users why
>>> parallel functionality is not available.  Which just echos my original
>>> question, what does it mean that R is single threaded?
>>> 
>>> Kind Regards,
>>> Charles
>>> 
>>>        [[alternative HTML version deleted]]
>>> 
>>> ______________________________________________
>>> R-devel at r-project.org mailing list
>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>> 
>> 
> 
> 	[[alternative HTML version deleted]]
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
> 


From wdunlap at tibco.com  Thu May 12 16:15:54 2016
From: wdunlap at tibco.com (William Dunlap)
Date: Thu, 12 May 2016 07:15:54 -0700
Subject: [Rd] Single-threaded aspect
In-Reply-To: <CAKxd1KPhHhWuMF2Tbc+08uABm6gji=43PT3xTc+0-kdY6t=b2Q@mail.gmail.com>
References: <CAKxd1KPhHhWuMF2Tbc+08uABm6gji=43PT3xTc+0-kdY6t=b2Q@mail.gmail.com>
Message-ID: <CAF8bMcaVJYVC-GCP4qpfQjj=8NJOKweoP+Pn+3ASjWSeDekFpQ@mail.gmail.com>

The R language itself has features that limit how much
mulitthreading/parallel processing can be done.  There are functions with
side effects, such as library(), plot(), runif(), <-, and <<- and there are
no mechanisms to isolate them.

Bill Dunlap
TIBCO Software
wdunlap tibco.com

On Thu, May 12, 2016 at 5:45 AM, Charles Determan <cdetermanjr at gmail.com>
wrote:

> R Developers,
>
> Could someone help explain what it means that R is single threaded?  I am
> trying to understand what is actually going on inside R when users want to
> parallelize code.  For example, using mclapply or foreach (with some
> backend) somehow allows users to benefit from multiple CPUs.
>
> Similarly there is the RcppParallel package for RMatrix/RVector objects.
> But none of these address the general XPtr objects in Rcpp.  Some readers
> here may recognize my question on SO (
>
> http://stackoverflow.com/questions/37167479/rcpp-parallelize-functions-that-return-xptr
> )
> where I was curious about parallel calls to C++/Rcpp functions that return
> XPtr objects.  I am being a little more persistent here as this limitation
> provides a very hard stop on the development on one of my packages that
> heavily uses XPtr objects.  It's not meant to be a criticism or intended to
> be rude, I just want to fully understand.
>
> I am willing to accept that it may be impossible currently but I want to at
> least understand why it is impossible so I can explain to future users why
> parallel functionality is not available.  Which just echos my original
> question, what does it mean that R is single threaded?
>
> Kind Regards,
> Charles
>
>         [[alternative HTML version deleted]]
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>

	[[alternative HTML version deleted]]


From edd at debian.org  Thu May 12 16:18:03 2016
From: edd at debian.org (Dirk Eddelbuettel)
Date: Thu, 12 May 2016 09:18:03 -0500
Subject: [Rd] Single-threaded aspect
In-Reply-To: <CAOKDuOitDaQgR-3ao=VG9OTX2vDNoQ4_uiJa7H6ghS=g1=HdDA@mail.gmail.com>
References: <CAKxd1KPhHhWuMF2Tbc+08uABm6gji=43PT3xTc+0-kdY6t=b2Q@mail.gmail.com>
	<CAOKDuOitDaQgR-3ao=VG9OTX2vDNoQ4_uiJa7H6ghS=g1=HdDA@mail.gmail.com>
Message-ID: <22324.37019.399252.557103@max.nulle.part>


On 12 May 2016 at 13:11, Mark van der Loo wrote:
| Charles,
| 
| 1. Perhaps this question is better directed at the R-help or
| R-pacakge-devel mailinglist.
| 
| 2. It basically means that R itself can only evaluate one R expression at
| the time.
| 
| The parallel package circumvents this by starting multiple R-sessions and
| dividing workload.
| 
| Compiled code called by R (such as C++ code through RCpp or C-code through
| base R's interface) can execute multi-threaded code for internal purposes,
| using e.g. openMP. A limitation is that compiled code cannot call R's C API
| from multiple threads (in many cases). For example, it is not thread-safe
| to create R-variables from multiple threads running in C. (R's variable
| administration is such that the order of (un)making them from compiled code
| matters).

Well put.

| I am not very savvy on Rcpp or XPtr objects, but it appears that Dirk
| provided answers about that in your SO-question.

Charles seems to hang himself up completely about a small detail, failing to
see the forest for the trees.

There are (many) working examples of parallel (compiled) code with R. All of
them stress (and I simplify here) that can you touch R objects, or call back
into R, for fear of any assignment or allocation triggering an R event.  R
being single-threaded it cannot do this.

My answer to this problem is to only use non-R data structures. That is what
RcpParallel does in the actual parallel code portions in all examples --
types RVector and RMatrix do NOT connect back to R. There are several working
examples.  That is also what the OpenMP examples at the Rcpp Gallery do.

Charles seems to be replying 'but I use XPtr' or 'I use XPtr on arma::mat or
Eigen::Matrixxd' and seems to forget that these are proxy objects to SEXPs.
XPtr just wrap the SEXP for external pointers; Arma's and Eigen's matrices
are performant via RcppArmadillo and RcppEigen because we use R memory via
proxies.  All of that is 'too close to R' for comfort.

So the short answer is:  enter compiled code from R, set a mutex (either
conceptually or explicitly), _copy_ your data in to plain C++ data structures
and go to town in parallel via OpenMP and other multithreaded approaches.
Then collect the result, release the mutex and move back up.

I hope this help.

Dirk

| 
| Best,
| Mark
| 
| 
| 
| 
| 
| 
| 
| 
| 
| 
| Op do 12 mei 2016 om 14:46 schreef Charles Determan <cdetermanjr at gmail.com>:
| 
| > R Developers,
| >
| > Could someone help explain what it means that R is single threaded?  I am
| > trying to understand what is actually going on inside R when users want to
| > parallelize code.  For example, using mclapply or foreach (with some
| > backend) somehow allows users to benefit from multiple CPUs.
| >
| > Similarly there is the RcppParallel package for RMatrix/RVector objects.
| > But none of these address the general XPtr objects in Rcpp.  Some readers
| > here may recognize my question on SO (
| >
| > http://stackoverflow.com/questions/37167479/rcpp-parallelize-functions-that-return-xptr
| > )
| > where I was curious about parallel calls to C++/Rcpp functions that return
| > XPtr objects.  I am being a little more persistent here as this limitation
| > provides a very hard stop on the development on one of my packages that
| > heavily uses XPtr objects.  It's not meant to be a criticism or intended to
| > be rude, I just want to fully understand.
| >
| > I am willing to accept that it may be impossible currently but I want to at
| > least understand why it is impossible so I can explain to future users why
| > parallel functionality is not available.  Which just echos my original
| > question, what does it mean that R is single threaded?
| >
| > Kind Regards,
| > Charles
| >
| >         [[alternative HTML version deleted]]
| >
| > ______________________________________________
| > R-devel at r-project.org mailing list
| > https://stat.ethz.ch/mailman/listinfo/r-devel
| >
| 
| 	[[alternative HTML version deleted]]
| 
| ______________________________________________
| R-devel at r-project.org mailing list
| https://stat.ethz.ch/mailman/listinfo/r-devel

-- 
http://dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org


From cdetermanjr at gmail.com  Thu May 12 16:25:40 2016
From: cdetermanjr at gmail.com (Charles Determan)
Date: Thu, 12 May 2016 09:25:40 -0500
Subject: [Rd] Single-threaded aspect
In-Reply-To: <22324.37019.399252.557103@max.nulle.part>
References: <CAKxd1KPhHhWuMF2Tbc+08uABm6gji=43PT3xTc+0-kdY6t=b2Q@mail.gmail.com>
	<CAOKDuOitDaQgR-3ao=VG9OTX2vDNoQ4_uiJa7H6ghS=g1=HdDA@mail.gmail.com>
	<22324.37019.399252.557103@max.nulle.part>
Message-ID: <CAKxd1KO=OGbxakj6Sgz1Q3825cdL1VQNYN4n=qdyb5UM637evA@mail.gmail.com>

Thank you Simon for the detailed reply.  That explains much more of what I
was looking for from the R side.

Dirk, I'm sorry if I seem hung up on anything here but I am trying to
understand the details.  My reply about XPtr or XPtr on arma/Eigen was to
confirm my understanding was correct, which it appears it was.  I was not
aware the RVector/RMatrix objects don't connect to R as I am just now
familiarizing myself with the package, that explains more of my confusion.
I will look at doing work within the compiled code as you have suggested.

Regards,
Charles

On Thu, May 12, 2016 at 9:18 AM, Dirk Eddelbuettel <edd at debian.org> wrote:

>
> On 12 May 2016 at 13:11, Mark van der Loo wrote:
> | Charles,
> |
> | 1. Perhaps this question is better directed at the R-help or
> | R-pacakge-devel mailinglist.
> |
> | 2. It basically means that R itself can only evaluate one R expression at
> | the time.
> |
> | The parallel package circumvents this by starting multiple R-sessions and
> | dividing workload.
> |
> | Compiled code called by R (such as C++ code through RCpp or C-code
> through
> | base R's interface) can execute multi-threaded code for internal
> purposes,
> | using e.g. openMP. A limitation is that compiled code cannot call R's C
> API
> | from multiple threads (in many cases). For example, it is not thread-safe
> | to create R-variables from multiple threads running in C. (R's variable
> | administration is such that the order of (un)making them from compiled
> code
> | matters).
>
> Well put.
>
> | I am not very savvy on Rcpp or XPtr objects, but it appears that Dirk
> | provided answers about that in your SO-question.
>
> Charles seems to hang himself up completely about a small detail, failing
> to
> see the forest for the trees.
>
> There are (many) working examples of parallel (compiled) code with R. All
> of
> them stress (and I simplify here) that can you touch R objects, or call
> back
> into R, for fear of any assignment or allocation triggering an R event.  R
> being single-threaded it cannot do this.
>
> My answer to this problem is to only use non-R data structures. That is
> what
> RcpParallel does in the actual parallel code portions in all examples --
> types RVector and RMatrix do NOT connect back to R. There are several
> working
> examples.  That is also what the OpenMP examples at the Rcpp Gallery do.
>
> Charles seems to be replying 'but I use XPtr' or 'I use XPtr on arma::mat
> or
> Eigen::Matrixxd' and seems to forget that these are proxy objects to SEXPs.
> XPtr just wrap the SEXP for external pointers; Arma's and Eigen's matrices
> are performant via RcppArmadillo and RcppEigen because we use R memory via
> proxies.  All of that is 'too close to R' for comfort.
>
> So the short answer is:  enter compiled code from R, set a mutex (either
> conceptually or explicitly), _copy_ your data in to plain C++ data
> structures
> and go to town in parallel via OpenMP and other multithreaded approaches.
> Then collect the result, release the mutex and move back up.
>
> I hope this help.
>
> Dirk
>
> |
> | Best,
> | Mark
> |
> |
> |
> |
> |
> |
> |
> |
> |
> |
> | Op do 12 mei 2016 om 14:46 schreef Charles Determan <
> cdetermanjr at gmail.com>:
> |
> | > R Developers,
> | >
> | > Could someone help explain what it means that R is single threaded?  I
> am
> | > trying to understand what is actually going on inside R when users
> want to
> | > parallelize code.  For example, using mclapply or foreach (with some
> | > backend) somehow allows users to benefit from multiple CPUs.
> | >
> | > Similarly there is the RcppParallel package for RMatrix/RVector
> objects.
> | > But none of these address the general XPtr objects in Rcpp.  Some
> readers
> | > here may recognize my question on SO (
> | >
> | >
> http://stackoverflow.com/questions/37167479/rcpp-parallelize-functions-that-return-xptr
> | > )
> | > where I was curious about parallel calls to C++/Rcpp functions that
> return
> | > XPtr objects.  I am being a little more persistent here as this
> limitation
> | > provides a very hard stop on the development on one of my packages that
> | > heavily uses XPtr objects.  It's not meant to be a criticism or
> intended to
> | > be rude, I just want to fully understand.
> | >
> | > I am willing to accept that it may be impossible currently but I want
> to at
> | > least understand why it is impossible so I can explain to future users
> why
> | > parallel functionality is not available.  Which just echos my original
> | > question, what does it mean that R is single threaded?
> | >
> | > Kind Regards,
> | > Charles
> | >
> | >         [[alternative HTML version deleted]]
> | >
> | > ______________________________________________
> | > R-devel at r-project.org mailing list
> | > https://stat.ethz.ch/mailman/listinfo/r-devel
> | >
> |
> |       [[alternative HTML version deleted]]
> |
> | ______________________________________________
> | R-devel at r-project.org mailing list
> | https://stat.ethz.ch/mailman/listinfo/r-devel
>
> --
> http://dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org
>

	[[alternative HTML version deleted]]


From edd at debian.org  Thu May 12 16:47:34 2016
From: edd at debian.org (Dirk Eddelbuettel)
Date: Thu, 12 May 2016 09:47:34 -0500
Subject: [Rd] Single-threaded aspect
In-Reply-To: <22324.37019.399252.557103@max.nulle.part>
References: <CAKxd1KPhHhWuMF2Tbc+08uABm6gji=43PT3xTc+0-kdY6t=b2Q@mail.gmail.com>
	<CAOKDuOitDaQgR-3ao=VG9OTX2vDNoQ4_uiJa7H6ghS=g1=HdDA@mail.gmail.com>
	<22324.37019.399252.557103@max.nulle.part>
Message-ID: <22324.38790.5274.708875@max.nulle.part>


On 12 May 2016 at 09:18, Dirk Eddelbuettel wrote:
| 
| On 12 May 2016 at 13:11, Mark van der Loo wrote:
| | Charles,
| | 
| | 1. Perhaps this question is better directed at the R-help or
| | R-pacakge-devel mailinglist.
| | 
| | 2. It basically means that R itself can only evaluate one R expression at
| | the time.
| | 
| | The parallel package circumvents this by starting multiple R-sessions and
| | dividing workload.
| | 
| | Compiled code called by R (such as C++ code through RCpp or C-code through
| | base R's interface) can execute multi-threaded code for internal purposes,
| | using e.g. openMP. A limitation is that compiled code cannot call R's C API
| | from multiple threads (in many cases). For example, it is not thread-safe
| | to create R-variables from multiple threads running in C. (R's variable
| | administration is such that the order of (un)making them from compiled code
| | matters).
| 
| Well put.
| 
| | I am not very savvy on Rcpp or XPtr objects, but it appears that Dirk
| | provided answers about that in your SO-question.
| 
| Charles seems to hang himself up completely about a small detail, failing to
| see the forest for the trees.
| 
| There are (many) working examples of parallel (compiled) code with R. All of
| them stress (and I simplify here) that can you touch R objects, or call back

An import 'not' missing here (and a reordering);  "that you CANNOT touch R objects"

Sorry, Dirk

| into R, for fear of any assignment or allocation triggering an R event.  R
| being single-threaded it cannot do this.
| 
| My answer to this problem is to only use non-R data structures. That is what
| RcpParallel does in the actual parallel code portions in all examples --
| types RVector and RMatrix do NOT connect back to R. There are several working
| examples.  That is also what the OpenMP examples at the Rcpp Gallery do.
| 
| Charles seems to be replying 'but I use XPtr' or 'I use XPtr on arma::mat or
| Eigen::Matrixxd' and seems to forget that these are proxy objects to SEXPs.
| XPtr just wrap the SEXP for external pointers; Arma's and Eigen's matrices
| are performant via RcppArmadillo and RcppEigen because we use R memory via
| proxies.  All of that is 'too close to R' for comfort.
| 
| So the short answer is:  enter compiled code from R, set a mutex (either
| conceptually or explicitly), _copy_ your data in to plain C++ data structures
| and go to town in parallel via OpenMP and other multithreaded approaches.
| Then collect the result, release the mutex and move back up.
| 
| I hope this help.
| 
| Dirk
| 
| | 
| | Best,
| | Mark
| | 
| | 
| | 
| | 
| | 
| | 
| | 
| | 
| | 
| | 
| | Op do 12 mei 2016 om 14:46 schreef Charles Determan <cdetermanjr at gmail.com>:
| | 
| | > R Developers,
| | >
| | > Could someone help explain what it means that R is single threaded?  I am
| | > trying to understand what is actually going on inside R when users want to
| | > parallelize code.  For example, using mclapply or foreach (with some
| | > backend) somehow allows users to benefit from multiple CPUs.
| | >
| | > Similarly there is the RcppParallel package for RMatrix/RVector objects.
| | > But none of these address the general XPtr objects in Rcpp.  Some readers
| | > here may recognize my question on SO (
| | >
| | > http://stackoverflow.com/questions/37167479/rcpp-parallelize-functions-that-return-xptr
| | > )
| | > where I was curious about parallel calls to C++/Rcpp functions that return
| | > XPtr objects.  I am being a little more persistent here as this limitation
| | > provides a very hard stop on the development on one of my packages that
| | > heavily uses XPtr objects.  It's not meant to be a criticism or intended to
| | > be rude, I just want to fully understand.
| | >
| | > I am willing to accept that it may be impossible currently but I want to at
| | > least understand why it is impossible so I can explain to future users why
| | > parallel functionality is not available.  Which just echos my original
| | > question, what does it mean that R is single threaded?
| | >
| | > Kind Regards,
| | > Charles
| | >
| | >         [[alternative HTML version deleted]]
| | >
| | > ______________________________________________
| | > R-devel at r-project.org mailing list
| | > https://stat.ethz.ch/mailman/listinfo/r-devel
| | >
| | 
| | 	[[alternative HTML version deleted]]
| | 
| | ______________________________________________
| | R-devel at r-project.org mailing list
| | https://stat.ethz.ch/mailman/listinfo/r-devel
| 
| -- 
| http://dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org
| 
| ______________________________________________
| R-devel at r-project.org mailing list
| https://stat.ethz.ch/mailman/listinfo/r-devel

-- 
http://dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org


From edd at debian.org  Thu May 12 16:52:07 2016
From: edd at debian.org (Dirk Eddelbuettel)
Date: Thu, 12 May 2016 09:52:07 -0500
Subject: [Rd] Single-threaded aspect
In-Reply-To: <CAKxd1KO=OGbxakj6Sgz1Q3825cdL1VQNYN4n=qdyb5UM637evA@mail.gmail.com>
References: <CAKxd1KPhHhWuMF2Tbc+08uABm6gji=43PT3xTc+0-kdY6t=b2Q@mail.gmail.com>
	<CAOKDuOitDaQgR-3ao=VG9OTX2vDNoQ4_uiJa7H6ghS=g1=HdDA@mail.gmail.com>
	<22324.37019.399252.557103@max.nulle.part>
	<CAKxd1KO=OGbxakj6Sgz1Q3825cdL1VQNYN4n=qdyb5UM637evA@mail.gmail.com>
Message-ID: <22324.39063.896654.102426@max.nulle.part>


On 12 May 2016 at 09:25, Charles Determan wrote:
| Thank you Simon for the detailed reply.? That explains much more of what I was
| looking for from the R side.
| 
| Dirk, I'm sorry if I seem hung up on anything here but I am trying to
| understand the details.? My reply about XPtr or XPtr on arma/Eigen was to
| confirm my understanding was correct, which it appears it was.? I was not aware

I still do not think so.

Step back, have a cup of tea or two, and start with the simple and short
OpenMP examples in Rcpp itself.  They have been there for years and should
still work.  I would encourage you to work through these, maybe take notes
and possibly even submit the notes as a new short piece in the Rcpp Gallery.

| the RVector/RMatrix objects don't connect to R as I am just now familiarizing
| myself with the package, that explains more of my confusion.? I will look at
| doing work within the compiled code as you have suggested.

Sounds good.  OpenMP and Intel TBB (as in RcppParallel) will only become more
important as we move to more and more cores.  Working with them is not all
that obvious as you are finding out.  Let's try to work to make the
documentation better.

Dirk
 
| Regards,
| Charles
| 
| On Thu, May 12, 2016 at 9:18 AM, Dirk Eddelbuettel <edd at debian.org> wrote:
| 
|    
|     On 12 May 2016 at 13:11, Mark van der Loo wrote:
|     | Charles,
|     |
|     | 1. Perhaps this question is better directed at the R-help or
|     | R-pacakge-devel mailinglist.
|     |
|     | 2. It basically means that R itself can only evaluate one R expression at
|     | the time.
|     |
|     | The parallel package circumvents this by starting multiple R-sessions and
|     | dividing workload.
|     |
|     | Compiled code called by R (such as C++ code through RCpp or C-code
|     through
|     | base R's interface) can execute multi-threaded code for internal
|     purposes,
|     | using e.g. openMP. A limitation is that compiled code cannot call R's C
|     API
|     | from multiple threads (in many cases). For example, it is not thread-safe
|     | to create R-variables from multiple threads running in C. (R's variable
|     | administration is such that the order of (un)making them from compiled
|     code
|     | matters).
| 
|     Well put.
|    
|     | I am not very savvy on Rcpp or XPtr objects, but it appears that Dirk
|     | provided answers about that in your SO-question.
| 
|     Charles seems to hang himself up completely about a small detail, failing
|     to
|     see the forest for the trees.
| 
|     There are (many) working examples of parallel (compiled) code with R. All
|     of
|     them stress (and I simplify here) that can you touch R objects, or call
|     back
|     into R, for fear of any assignment or allocation triggering an R event.? R
|     being single-threaded it cannot do this.
| 
|     My answer to this problem is to only use non-R data structures. That is
|     what
|     RcpParallel does in the actual parallel code portions in all examples --
|     types RVector and RMatrix do NOT connect back to R. There are several
|     working
|     examples.? That is also what the OpenMP examples at the Rcpp Gallery do.
| 
|     Charles seems to be replying 'but I use XPtr' or 'I use XPtr on arma::mat
|     or
|     Eigen::Matrixxd' and seems to forget that these are proxy objects to SEXPs.
|     XPtr just wrap the SEXP for external pointers; Arma's and Eigen's matrices
|     are performant via RcppArmadillo and RcppEigen because we use R memory via
|     proxies.? All of that is 'too close to R' for comfort.
| 
|     So the short answer is:? enter compiled code from R, set a mutex (either
|     conceptually or explicitly), _copy_ your data in to plain C++ data
|     structures
|     and go to town in parallel via OpenMP and other multithreaded approaches.
|     Then collect the result, release the mutex and move back up.
| 
|     I hope this help.
| 
|     Dirk
| 
|     |
|     | Best,
|     | Mark
|     |
|     |
|     |
|     |
|     |
|     |
|     |
|     |
|     |
|     |
|     | Op do 12 mei 2016 om 14:46 schreef Charles Determan <
|     cdetermanjr at gmail.com>:
|     |
|     | > R Developers,
|     | >
|     | > Could someone help explain what it means that R is single threaded?? I
|     am
|     | > trying to understand what is actually going on inside R when users want
|     to
|     | > parallelize code.? For example, using mclapply or foreach (with some
|     | > backend) somehow allows users to benefit from multiple CPUs.
|     | >
|     | > Similarly there is the RcppParallel package for RMatrix/RVector
|     objects.
|     | > But none of these address the general XPtr objects in Rcpp.? Some
|     readers
|     | > here may recognize my question on SO (
|     | >
|     | > http://stackoverflow.com/questions/37167479/
|     rcpp-parallelize-functions-that-return-xptr
|     | > )
|     | > where I was curious about parallel calls to C++/Rcpp functions that
|     return
|     | > XPtr objects.? I am being a little more persistent here as this
|     limitation
|     | > provides a very hard stop on the development on one of my packages that
|     | > heavily uses XPtr objects.? It's not meant to be a criticism or
|     intended to
|     | > be rude, I just want to fully understand.
|     | >
|     | > I am willing to accept that it may be impossible currently but I want
|     to at
|     | > least understand why it is impossible so I can explain to future users
|     why
|     | > parallel functionality is not available.? Which just echos my original
|     | > question, what does it mean that R is single threaded?
|     | >
|     | > Kind Regards,
|     | > Charles
|     | >
|     | >? ? ? ? ?[[alternative HTML version deleted]]
|     | >
|     | > ______________________________________________
|     | > R-devel at r-project.org mailing list
|     | > https://stat.ethz.ch/mailman/listinfo/r-devel
|     | >
|     |
|     |? ? ? ?[[alternative HTML version deleted]]
|     |
|     | ______________________________________________
|     | R-devel at r-project.org mailing list
|     | https://stat.ethz.ch/mailman/listinfo/r-devel
| 
|     --
|     http://dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org
| 
| 

-- 
http://dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org


From frederik at ofb.net  Fri May 13 00:23:04 2016
From: frederik at ofb.net (frederik at ofb.net)
Date: Thu, 12 May 2016 15:23:04 -0700
Subject: [Rd] where to send patches to R source code
In-Reply-To: <A0A56543-03D7-4DCB-8CFB-6F5A09F4233C@gmail.com>
References: <20160504190906.GA12270@ofb.net> <20160512060020.GA6098@ofb.net>
	<22324.14571.269842.331918@stat.math.ethz.ch>
	<A0A56543-03D7-4DCB-8CFB-6F5A09F4233C@gmail.com>
Message-ID: <20160512222304.GA6406@ofb.net>

Hi Peter, Martin, and others,

Thanks for your replies.

- The bugs apply to all systems that use GNU Readline, not just Linux
  or Arch Linux.

- Readline version 6.3 changed the signal handling so that SIGWINCH is
  no longer handled automatically by the library. This means it's not
  currently possible for people using R on e.g. Linux to resize the
  terminal, or at least when they do so they have to make sure that
  all their commands fit in one line and don't wrap.

- There is also a long-standing bug in Readline where the callback
  interface didn't properly clear the line on SIGINT (^C). This means
  that "exiting" reverse-incremental-search with ^C would give an
  apparently empty prompt which still had some pending input, so if
  you hit ^C-Return then an unintended command would get executed.

If they're not "bothering all that many people", then perhaps it's
because everyone uses Windows or Mac OS X or RStudio. For me these are
pretty significant bugs. The second one causes unintended code to be
executed. Random code could delete files, for example, or worse. The
first one bites me every time I want to change the size of a window,
which is pretty often.

I tried to get Readline maintainer Chet Ramey to fix these on the
Readline side, but he disagreed with my proposal:

https://lists.gnu.org/archive/html/bug-readline/2016-04/threads.html

I'm glad that my message here at least was seen and I hope that
someone who uses the R command line on Linux will have time to verify
that the patches work correctly. They are basically Chet-approved
workarounds for bugs/changes in Readline, not very complicated.

Do either of you know a Linux R person you could ping to get these
patches checked out? I'm not overly frustrated, and I'm not in a major
hurry, but from what we've observed it seems like waiting for someone
concerned to come along and finally read Bugzilla or the R-Devel
archives is not going to result in a very dense Poisson process...

Thanks,

Frederick Eaton

On Thu, May 12, 2016 at 03:42:59PM +0200, peter dalgaard wrote:
> 
> > On 12 May 2016, at 10:03 , Martin Maechler <maechler at stat.math.ethz.ch> wrote:
> > 
> >>>>>>  <frederik at ofb.net>
> >>>>>>    on Wed, 11 May 2016 23:00:20 -0700 writes:
> > 
> >> Dear R Developers,
> >> I wrote to this list a week ago with some patches that fix bugs in R's
> >> GNU Readline interface, but I haven't had a reply. I'm not in a hurry
> >> but I'd like to make sure that my message is getting read by the right
> >> people. Should I be sending my patches somewhere else?
> > 
> > Thank you Frederick for your reports and patches.
> > You did send them to the correct place, https://bugs.r-project.org/
> > 
> > Sometimes (as here) a combination of circumstances do lead to
> > nobody picking them up quickly.
> > In this case,
> > 
> > - probably none of R-core use or even have easy access to Arch Linux
> >  so we cannot easily veryify that there is a bug at all
> >  nor -consequently- veryify that your patch does fix the bug.
> 
> Actually, the bugs look like they should apply fairly generally, just maybe not bothering all that many people. But there could be portability issues with the fixes, so I suspect some of us were waiting for "a readline expert" to check them out.
> 
> -pd
> 
> BTW: Anyone with a fix for the stuck-at-eol issue? (aaa<right>bbb<left>ccc) 
> 
> > 
> > - no other user has confirmed the bug on his/her platform, so
> >  there did not seem a huge demand...
> > 
> > - Accidentally many in R core may be busy with other bugs, teaching, .....
> >  and just lack the extra resources to delve into these problems
> >  at the current moment.
> > 
> > Hence, there was not even an 'Acknowledged' change to your
> > reports--indeed as nobody had been able to see there is a problem
> > existing outside of your personal computer.
> > 
> > I agree that this must seem a bit frustrating to you.
> > 
> > --
> > Martin
> > 
> > ______________________________________________
> > R-devel at r-project.org mailing list
> > https://stat.ethz.ch/mailman/listinfo/r-devel
> 
> -- 
> Peter Dalgaard, Professor,
> Center for Statistics, Copenhagen Business School
> Solbjerg Plads 3, 2000 Frederiksberg, Denmark
> Phone: (+45)38153501
> Office: A 4.23
> Email: pd.mes at cbs.dk  Priv: PDalgd at gmail.com
> 
> 
> 
> 
> 
> 
> 
> 
>


From spencer.graves at prodsyse.com  Fri May 13 03:21:41 2016
From: spencer.graves at prodsyse.com (Spencer Graves)
Date: Thu, 12 May 2016 20:21:41 -0500
Subject: [Rd] objects intermittently shared between vignettes
Message-ID: <3c84b648-633e-7f3d-0d49-c3b886d982a4@prodsyse.com>

Hello:


       Is it widely known that objects not explicitly deleted from one 
vignette in a package can be available to a second in "R CMD build" and 
"R CMD check" but not when the second vignette is built manually, at 
least under RStudio on Mac OS X 10.11.4 using R 3.3.0?


        For an example, see


install.packages("pkgW2vignettes", repos="http://R-Forge.R-project.org")


       This package contains two toy vignettes.


       This is not a big deal, but it spooked me, when I saw 227 objects 
listed by "objects()" in a vignette built by "R CMD build" + "R CMD 
check", when the same "objects()" command only listed 4 objects when I 
built the same vignette by itself from within RStudio.


       Enjoy,
       Spencer Graves


From goran.brostrom at umu.se  Fri May 13 10:02:54 2016
From: goran.brostrom at umu.se (=?UTF-8?Q?G=c3=b6ran_Brostr=c3=b6m?=)
Date: Fri, 13 May 2016 10:02:54 +0200
Subject: [Rd] where to send patches to R source code
In-Reply-To: <20160512222304.GA6406@ofb.net>
References: <20160504190906.GA12270@ofb.net> <20160512060020.GA6098@ofb.net>
	<22324.14571.269842.331918@stat.math.ethz.ch>
	<A0A56543-03D7-4DCB-8CFB-6F5A09F4233C@gmail.com>
	<20160512222304.GA6406@ofb.net>
Message-ID: <57358A2E.7030305@umu.se>

Dear Frederik,

I can confirm that especially the first issue on your list (resizing the 
terminal) has "bothered me" badly for some time now: I'm on Ubuntu 
(usually).

G?ran Brostr?m


On 2016-05-13 00:23, frederik at ofb.net wrote:
> Hi Peter, Martin, and others,
>
> Thanks for your replies.
>
> - The bugs apply to all systems that use GNU Readline, not just Linux
>    or Arch Linux.
>
> - Readline version 6.3 changed the signal handling so that SIGWINCH is
>    no longer handled automatically by the library. This means it's not
>    currently possible for people using R on e.g. Linux to resize the
>    terminal, or at least when they do so they have to make sure that
>    all their commands fit in one line and don't wrap.
>
> - There is also a long-standing bug in Readline where the callback
>    interface didn't properly clear the line on SIGINT (^C). This means
>    that "exiting" reverse-incremental-search with ^C would give an
>    apparently empty prompt which still had some pending input, so if
>    you hit ^C-Return then an unintended command would get executed.
>
> If they're not "bothering all that many people", then perhaps it's
> because everyone uses Windows or Mac OS X or RStudio. For me these are
> pretty significant bugs. The second one causes unintended code to be
> executed. Random code could delete files, for example, or worse. The
> first one bites me every time I want to change the size of a window,
> which is pretty often.
>
> I tried to get Readline maintainer Chet Ramey to fix these on the
> Readline side, but he disagreed with my proposal:
>
> https://lists.gnu.org/archive/html/bug-readline/2016-04/threads.html
>
> I'm glad that my message here at least was seen and I hope that
> someone who uses the R command line on Linux will have time to verify
> that the patches work correctly. They are basically Chet-approved
> workarounds for bugs/changes in Readline, not very complicated.
>
> Do either of you know a Linux R person you could ping to get these
> patches checked out? I'm not overly frustrated, and I'm not in a major
> hurry, but from what we've observed it seems like waiting for someone
> concerned to come along and finally read Bugzilla or the R-Devel
> archives is not going to result in a very dense Poisson process...
>
> Thanks,
>
> Frederick Eaton
>
> On Thu, May 12, 2016 at 03:42:59PM +0200, peter dalgaard wrote:
>>
>>> On 12 May 2016, at 10:03 , Martin Maechler <maechler at stat.math.ethz.ch> wrote:
>>>
>>>>>>>>   <frederik at ofb.net>
>>>>>>>>     on Wed, 11 May 2016 23:00:20 -0700 writes:
>>>
>>>> Dear R Developers,
>>>> I wrote to this list a week ago with some patches that fix bugs in R's
>>>> GNU Readline interface, but I haven't had a reply. I'm not in a hurry
>>>> but I'd like to make sure that my message is getting read by the right
>>>> people. Should I be sending my patches somewhere else?
>>>
>>> Thank you Frederick for your reports and patches.
>>> You did send them to the correct place, https://bugs.r-project.org/
>>>
>>> Sometimes (as here) a combination of circumstances do lead to
>>> nobody picking them up quickly.
>>> In this case,
>>>
>>> - probably none of R-core use or even have easy access to Arch Linux
>>>   so we cannot easily veryify that there is a bug at all
>>>   nor -consequently- veryify that your patch does fix the bug.
>>
>> Actually, the bugs look like they should apply fairly generally, just maybe not bothering all that many people. But there could be portability issues with the fixes, so I suspect some of us were waiting for "a readline expert" to check them out.
>>
>> -pd
>>
>> BTW: Anyone with a fix for the stuck-at-eol issue? (aaa<right>bbb<left>ccc)
>>
>>>
>>> - no other user has confirmed the bug on his/her platform, so
>>>   there did not seem a huge demand...
>>>
>>> - Accidentally many in R core may be busy with other bugs, teaching, .....
>>>   and just lack the extra resources to delve into these problems
>>>   at the current moment.
>>>
>>> Hence, there was not even an 'Acknowledged' change to your
>>> reports--indeed as nobody had been able to see there is a problem
>>> existing outside of your personal computer.
>>>
>>> I agree that this must seem a bit frustrating to you.
>>>
>>> --
>>> Martin
>>>
>>> ______________________________________________
>>> R-devel at r-project.org mailing list
>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>
>> --
>> Peter Dalgaard, Professor,
>> Center for Statistics, Copenhagen Business School
>> Solbjerg Plads 3, 2000 Frederiksberg, Denmark
>> Phone: (+45)38153501
>> Office: A 4.23
>> Email: pd.mes at cbs.dk  Priv: PDalgd at gmail.com
>>
>>
>>
>>
>>
>>
>>
>>
>>
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>


From murdoch.duncan at gmail.com  Fri May 13 10:13:36 2016
From: murdoch.duncan at gmail.com (Duncan Murdoch)
Date: Fri, 13 May 2016 04:13:36 -0400
Subject: [Rd] objects intermittently shared between vignettes
In-Reply-To: <3c84b648-633e-7f3d-0d49-c3b886d982a4@prodsyse.com>
References: <3c84b648-633e-7f3d-0d49-c3b886d982a4@prodsyse.com>
Message-ID: <57358CB0.2040608@gmail.com>

On 12/05/2016 9:21 PM, Spencer Graves wrote:
> Hello:
>
>
>         Is it widely known that objects not explicitly deleted from one
> vignette in a package can be available to a second in "R CMD build" and
> "R CMD check" but not when the second vignette is built manually, at
> least under RStudio on Mac OS X 10.11.4 using R 3.3.0?
>
>
>          For an example, see
>
>
> install.packages("pkgW2vignettes", repos="http://R-Forge.R-project.org")
>
>
>         This package contains two toy vignettes.
>
>
>         This is not a big deal, but it spooked me, when I saw 227 objects
> listed by "objects()" in a vignette built by "R CMD build" + "R CMD
> check", when the same "objects()" command only listed 4 objects when I
> built the same vignette by itself from within RStudio.
>

Yes, this is a known flaw in the current build system.  It would be 
better if vignettes were built in a separate process that was started 
with an empty workspace.

There's an intention to clean up several vignette building issues, but 
so far no action.

Duncan Murdoch


From pdalgd at gmail.com  Fri May 13 10:22:13 2016
From: pdalgd at gmail.com (peter dalgaard)
Date: Fri, 13 May 2016 10:22:13 +0200
Subject: [Rd] where to send patches to R source code
In-Reply-To: <20160512222304.GA6406@ofb.net>
References: <20160504190906.GA12270@ofb.net> <20160512060020.GA6098@ofb.net>
	<22324.14571.269842.331918@stat.math.ethz.ch>
	<A0A56543-03D7-4DCB-8CFB-6F5A09F4233C@gmail.com>
	<20160512222304.GA6406@ofb.net>
Message-ID: <60FE8C75-28AD-4148-BE6A-7A880C4BBC23@gmail.com>

Actually, I think both Martin and I use reaadline R versions on a daily basis (Linux and OSX Terminal respectively). For my case, it is just that I rarely use the backwards search feature and I'm old enough that terminal widths other than 80 look odd to me so I don't resize much either. Of course that doesn't mean that the bugs aren't annoying to others!

-pd



On 13 May 2016, at 00:23 , frederik at ofb.net wrote:

> Hi Peter, Martin, and others,
> 
> Thanks for your replies.
> 
> - The bugs apply to all systems that use GNU Readline, not just Linux
>  or Arch Linux.
> 
> - Readline version 6.3 changed the signal handling so that SIGWINCH is
>  no longer handled automatically by the library. This means it's not
>  currently possible for people using R on e.g. Linux to resize the
>  terminal, or at least when they do so they have to make sure that
>  all their commands fit in one line and don't wrap.
> 
> - There is also a long-standing bug in Readline where the callback
>  interface didn't properly clear the line on SIGINT (^C). This means
>  that "exiting" reverse-incremental-search with ^C would give an
>  apparently empty prompt which still had some pending input, so if
>  you hit ^C-Return then an unintended command would get executed.
> 
> If they're not "bothering all that many people", then perhaps it's
> because everyone uses Windows or Mac OS X or RStudio. For me these are
> pretty significant bugs. The second one causes unintended code to be
> executed. Random code could delete files, for example, or worse. The
> first one bites me every time I want to change the size of a window,
> which is pretty often.
> 
> I tried to get Readline maintainer Chet Ramey to fix these on the
> Readline side, but he disagreed with my proposal:
> 
> https://lists.gnu.org/archive/html/bug-readline/2016-04/threads.html
> 
> I'm glad that my message here at least was seen and I hope that
> someone who uses the R command line on Linux will have time to verify
> that the patches work correctly. They are basically Chet-approved
> workarounds for bugs/changes in Readline, not very complicated.
> 
> Do either of you know a Linux R person you could ping to get these
> patches checked out? I'm not overly frustrated, and I'm not in a major
> hurry, but from what we've observed it seems like waiting for someone
> concerned to come along and finally read Bugzilla or the R-Devel
> archives is not going to result in a very dense Poisson process...
> 
> Thanks,
> 
> Frederick Eaton
> 
> On Thu, May 12, 2016 at 03:42:59PM +0200, peter dalgaard wrote:
>> 
>>> On 12 May 2016, at 10:03 , Martin Maechler <maechler at stat.math.ethz.ch> wrote:
>>> 
>>>>>>>> <frederik at ofb.net>
>>>>>>>>   on Wed, 11 May 2016 23:00:20 -0700 writes:
>>> 
>>>> Dear R Developers,
>>>> I wrote to this list a week ago with some patches that fix bugs in R's
>>>> GNU Readline interface, but I haven't had a reply. I'm not in a hurry
>>>> but I'd like to make sure that my message is getting read by the right
>>>> people. Should I be sending my patches somewhere else?
>>> 
>>> Thank you Frederick for your reports and patches.
>>> You did send them to the correct place, https://bugs.r-project.org/
>>> 
>>> Sometimes (as here) a combination of circumstances do lead to
>>> nobody picking them up quickly.
>>> In this case,
>>> 
>>> - probably none of R-core use or even have easy access to Arch Linux
>>> so we cannot easily veryify that there is a bug at all
>>> nor -consequently- veryify that your patch does fix the bug.
>> 
>> Actually, the bugs look like they should apply fairly generally, just maybe not bothering all that many people. But there could be portability issues with the fixes, so I suspect some of us were waiting for "a readline expert" to check them out.
>> 
>> -pd
>> 
>> BTW: Anyone with a fix for the stuck-at-eol issue? (aaa<right>bbb<left>ccc) 
>> 
>>> 
>>> - no other user has confirmed the bug on his/her platform, so
>>> there did not seem a huge demand...
>>> 
>>> - Accidentally many in R core may be busy with other bugs, teaching, .....
>>> and just lack the extra resources to delve into these problems
>>> at the current moment.
>>> 
>>> Hence, there was not even an 'Acknowledged' change to your
>>> reports--indeed as nobody had been able to see there is a problem
>>> existing outside of your personal computer.
>>> 
>>> I agree that this must seem a bit frustrating to you.
>>> 
>>> --
>>> Martin
>>> 
>>> ______________________________________________
>>> R-devel at r-project.org mailing list
>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>> 
>> -- 
>> Peter Dalgaard, Professor,
>> Center for Statistics, Copenhagen Business School
>> Solbjerg Plads 3, 2000 Frederiksberg, Denmark
>> Phone: (+45)38153501
>> Office: A 4.23
>> Email: pd.mes at cbs.dk  Priv: PDalgd at gmail.com
>> 
>> 
>> 
>> 
>> 
>> 
>> 
>> 
>> 

-- 
Peter Dalgaard, Professor,
Center for Statistics, Copenhagen Business School
Solbjerg Plads 3, 2000 Frederiksberg, Denmark
Phone: (+45)38153501
Office: A 4.23
Email: pd.mes at cbs.dk  Priv: PDalgd at gmail.com


From maechler at stat.math.ethz.ch  Fri May 13 10:49:26 2016
From: maechler at stat.math.ethz.ch (Martin Maechler)
Date: Fri, 13 May 2016 10:49:26 +0200
Subject: [Rd] where to send patches to R source code
In-Reply-To: <20160512222304.GA6406@ofb.net>
References: <20160504190906.GA12270@ofb.net> <20160512060020.GA6098@ofb.net>
	<22324.14571.269842.331918@stat.math.ethz.ch>
	<A0A56543-03D7-4DCB-8CFB-6F5A09F4233C@gmail.com>
	<20160512222304.GA6406@ofb.net>
Message-ID: <22325.38166.483959.66610@stat.math.ethz.ch>

>>>>>   <frederik at ofb.net>
>>>>>     on Thu, 12 May 2016 15:23:04 -0700 writes:

    > Hi Peter, Martin, and others,
    > Thanks for your replies.

    > - The bugs apply to all systems that use GNU Readline, not just Linux
    > or Arch Linux.

yes... but

    > - Readline version 6.3 changed the signal handling so that SIGWINCH is
    > no longer handled automatically by the library. This means it's not
    > currently possible for people using R on e.g. Linux to resize the
    > terminal, or at least when they do so they have to make sure that
    > all their commands fit in one line and don't wrap.

    > - There is also a long-standing bug in Readline where the callback
    > interface didn't properly clear the line on SIGINT (^C). This means
    > that "exiting" reverse-incremental-search with ^C would give an
    > apparently empty prompt which still had some pending input, so if
    > you hit ^C-Return then an unintended command would get executed.

    > If they're not "bothering all that many people", then perhaps it's
    > because everyone uses Windows or Mac OS X or RStudio 

or  ESS [ := Emacs Speaks Statistics]  https://ess.r-project.org/ ),
really the first cross platform UI, and the most used one by R 
"gurus" for a long time...

or StatET (an Eclipse based GUI, also cross platform)

or ... {quite a few more}.

I'm pretty sure (but may be wrong) that 99% of useRs do not work
much with R in a readline-enabled console, but rather via
another interface.
Maybe only 95% if you restrict yourself to non-Mac, non-Windows
(i.e. typically Linux) users. 

    > For me these are pretty significant bugs. 

I agree they should be fixed.. only just because regular bash
users may like the readline-enabled R in a terminal, and because
readline is nice in itself, and it'd be a pity if our using it
started to lag. ... or has started to lag, as you found..


    > The second one causes unintended code to be
    > executed. Random code could delete files, for example, or worse. The
    > first one bites me every time I want to change the size of a window,
    > which is pretty often.

    > I tried to get Readline maintainer Chet Ramey to fix these on the
    > Readline side, but he disagreed with my proposal:

    > https://lists.gnu.org/archive/html/bug-readline/2016-04/threads.html

    > I'm glad that my message here at least was seen and I hope that
    > someone who uses the R command line on Linux will have time to verify
    > that the patches work correctly. They are basically Chet-approved
    > workarounds for bugs/changes in Readline, not very complicated.

    > Do either of you know a Linux R person you could ping to get these
    > patches checked out? I'm not overly frustrated, and I'm not in a major
    > hurry, but from what we've observed it seems like waiting for someone
    > concerned to come along and finally read Bugzilla or the R-Devel
    > archives is not going to result in a very dense Poisson process...

Well, many of us from R core use Linux regularly or at least occasionally and
hence can take time to confirm the bug ... and if the patch
seems to fix it.

However, most of experienced R users, not just R core,
"believes" in reproducibility and hence we want to work with *.R
scripts (or *.Rmd etc nowadays):

We had a saying in the ESS manuals for 20 years or so:

   "The source code is real."

which had later been extended to

    "The source code is real.
     The objects are realizations of the source code."

As a consequence, we do not "work" in the R console; we may tinker
a bit for experiments, but we really work "in" the R source files.

For that reason, if apply your patches and quickly check that
the previous bug seems gone, I would not notice if the patch had
introduced new bugs ... just because I almost never work in
"readline-R"  but always (99.9%) work in Linux.

Martin


    > Thanks,
    > Frederick Eaton

    > On Thu, May 12, 2016 at 03:42:59PM +0200, peter dalgaard wrote:
    >> 
    >> > On 12 May 2016, at 10:03 , Martin Maechler <maechler at stat.math.ethz.ch> wrote:
    >> > 
    >> >>>>>>  <frederik at ofb.net>
    >> >>>>>>    on Wed, 11 May 2016 23:00:20 -0700 writes:
    >> > 
    >> >> Dear R Developers,
    >> >> I wrote to this list a week ago with some patches that fix bugs in R's
    >> >> GNU Readline interface, but I haven't had a reply. I'm not in a hurry
    >> >> but I'd like to make sure that my message is getting read by the right
    >> >> people. Should I be sending my patches somewhere else?
    >> > 
    >> > Thank you Frederick for your reports and patches.
    >> > You did send them to the correct place, https://bugs.r-project.org/
    >> > 
    >> > Sometimes (as here) a combination of circumstances do lead to
    >> > nobody picking them up quickly.
    >> > In this case,
    >> > 
    >> > - probably none of R-core use or even have easy access to Arch Linux
    >> >  so we cannot easily veryify that there is a bug at all
    >> >  nor -consequently- veryify that your patch does fix the bug.
    >> 
    >> Actually, the bugs look like they should apply fairly generally, just maybe not bothering all that many people. But there could be portability issues with the fixes, so I suspect some of us were waiting for "a readline expert" to check them out.
    >> 
    >> -pd
    >> 
    >> BTW: Anyone with a fix for the stuck-at-eol issue? (aaa<right>bbb<left>ccc) 
    >> 
    >> > 
    >> > - no other user has confirmed the bug on his/her platform, so
    >> >  there did not seem a huge demand...
    >> > 
    >> > - Accidentally many in R core may be busy with other bugs, teaching, .....
    >> >  and just lack the extra resources to delve into these problems
    >> >  at the current moment.
    >> > 
    >> > Hence, there was not even an 'Acknowledged' change to your
    >> > reports--indeed as nobody had been able to see there is a problem
    >> > existing outside of your personal computer.
    >> > 
    >> > I agree that this must seem a bit frustrating to you.
    >> > 
    >> > --
    >> > Martin
    >> > 
    >> > ______________________________________________
    >> > R-devel at r-project.org mailing list
    >> > https://stat.ethz.ch/mailman/listinfo/r-devel
    >> 
    >> -- 
    >> Peter Dalgaard, Professor,
    >> Center for Statistics, Copenhagen Business School
    >> Solbjerg Plads 3, 2000 Frederiksberg, Denmark
    >> Phone: (+45)38153501
    >> Office: A 4.23
    >> Email: pd.mes at cbs.dk  Priv: PDalgd at gmail.com
    >> 
    >> 
    >> 
    >> 
    >> 
    >> 
    >> 
    >> 
    >>


From kirill.mueller at ivt.baug.ethz.ch  Fri May 13 11:03:22 2016
From: kirill.mueller at ivt.baug.ethz.ch (=?UTF-8?Q?Kirill_M=c3=bcller?=)
Date: Fri, 13 May 2016 11:03:22 +0200
Subject: [Rd] R process killed when allocating too large matrix (Mac OS
	X)
In-Reply-To: <22324.13850.608673.341820@stat.math.ethz.ch>
References: <CAM3-KjYqc5CvDt4yKkOEPw--1Fq-c8O8x6UfFir5x==-UwFYvw@mail.gmail.com>
	<0e0160ec793649dda463b43d7e7d5c37@CONNHUB1.connect.uwaterloo.ca>
	<CAM3-Kja40deG=04U+PDNjLD=sHzQRiz_umia+wBEP77YyW5qQA@mail.gmail.com>
	<9b3da5c7758b455baad7209384abe7a7@CONNHUB4.connect.uwaterloo.ca>
	<CAM3-KjZ13TOz7x6DC+F1=9WsJFHbz4Ay0gf-fhQOv84oSRiE=w@mail.gmail.com>
	<308D9A3B-C40F-4AF7-AF1A-43DC8E1130EF@r-project.org>
	<572AA6AF.9040400@fredhutch.org>
	<3e8b8d2d46ac440892d2055c502b5be9@CONNHUB1.connect.uwaterloo.ca>
	<CAM3-KjbDejim0PSj9s5ognw4wfA=_BvD2UmfVDdmixqww2MkoA@mail.gmail.com>
	<2fa1c8e2-c692-1237-ea3c-572397038b26@statistik.tu-dortmund.de>
	<572B14D9.3050005@stats.ox.ac.uk>
	<CABFfbXtm5hOW+ah_bjtnP5QproRnGXBtPUsKDK54SXqGfQu=Qg@mail.gmail.com>
	<5732F090.8020301@ivt.baug.ethz.ch>
	<22324.13850.608673.341820@stat.math.ethz.ch>
Message-ID: <5735985A.3070507@ivt.baug.ethz.ch>

On 12.05.2016 09:51, Martin Maechler wrote:
>      > My ulimit package exposes this API ([1], should finally submit it to
>      > CRAN); unfortunately this very API seems to be unsupported on OS X
>      > [2,3]. Last time I looked into it, neither of the documented settings
>      > achieved the desired effect.
>
>      > -Kirill
>
>      > [1] http://krlmlr.github.io/ulimit
>      > [2]
>      > http://stackoverflow.com/questions/3274385/how-to-limit-memory-of-a-os-x-program-ulimit-v-neither-m-are-working
>      > [3]
>      > https://developer.apple.com/library/ios/documentation/System/Conceptual/ManPages_iPhoneOS/man2/getrlimit.2.html
>
>
> ...
>
> In an ideal word, some of us,
>      from R core, Jeroen, Kyrill, <one person knowing much about Windows>,
>      maintainer("microbenchmark>, ...
> would sit together and devise an R function interface (based on
> low level platform specific interfaces, specifically for at least
> Linux/POSIX-compliant, Mac, and Windows) which would allow
> something  like your rlimit(..) calls below.
>
> We'd really need something to work on all platforms ideally,
> to be used by R package maintainers
> and possibly even better by R itself at startup, setting a
> reasonable memory cap - which the user could raise even to +Inf (or lower
> even more).
>
I haven't found a Windows API that allows limiting the address space, 
only one that limits the working set size; it seems likely that this is 
the best we can get on OS X, too, but then my experience with OS X is 
very limited.

mallinfo() is used on Windows and seems to be available on Linux, too, 
but not on OS X.


-Kirill


From spencer.graves at prodsyse.com  Fri May 13 16:41:16 2016
From: spencer.graves at prodsyse.com (Spencer Graves)
Date: Fri, 13 May 2016 09:41:16 -0500
Subject: [Rd] LaTeX errors new with R 3.3.0
Message-ID: <c00c115e-e221-d6db-84ba-73853f9e3f0f@prodsyse.com>

Hello:


       I could use help understanding an error reported by "R CMD build 
sos" that's new with R 3.3.0:


Error in texi2dvi(file = file, pdf = TRUE, clean = clean, quiet = quiet,  :
   Running 'texi2dvi' on 'sos.tex' failed.
LaTeX errors:
! Undefined control sequence.
l.1 \Sconcordance
                  {concordance:sos.tex:sos.Rnw:%
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
Calls:  -> texi2pdf -> texi2dvi


[http://r-forge.r-project.org/R/?group_id=235&log=build_src&pkg=sos&flavor=patched] 



       The above was on R-Forge.  When I run "R CMD build sos" with R 
3.3.0 on my MacBook Pro running OS X 10.11.4, I get a different LaTeX 
error, also in texi2dvi:


Error in texi2dvi(file = file, pdf = TRUE, clean = clean, quiet = quiet,  :
   Running 'texi2dvi' on 'sos.tex' failed.
BibTeX errors:
The top-level auxiliary file: sos.aux
The style file: abbrvnat.bst
I found no \bibdata command---while reading file sos.aux
Calls: <Anonymous> -> texi2pdf -> texi2dvi
Execution halted


       Suggestions?
       Thanks,
       Spencer Graves


From murdoch.duncan at gmail.com  Fri May 13 18:34:40 2016
From: murdoch.duncan at gmail.com (Duncan Murdoch)
Date: Fri, 13 May 2016 12:34:40 -0400
Subject: [Rd] LaTeX errors new with R 3.3.0
In-Reply-To: <c00c115e-e221-d6db-84ba-73853f9e3f0f@prodsyse.com>
References: <c00c115e-e221-d6db-84ba-73853f9e3f0f@prodsyse.com>
Message-ID: <57360220.4090704@gmail.com>

On 13/05/2016 10:41 AM, Spencer Graves wrote:
> Hello:
>
>
>         I could use help understanding an error reported by "R CMD build
> sos" that's new with R 3.3.0:
>
>
> Error in texi2dvi(file = file, pdf = TRUE, clean = clean, quiet = quiet,  :
>     Running 'texi2dvi' on 'sos.tex' failed.
> LaTeX errors:
> ! Undefined control sequence.
> l.1 \Sconcordance
>                    {concordance:sos.tex:sos.Rnw:%
> The control sequence at the end of the top line
> of your error message was never \def'ed. If you have
> Calls:  -> texi2pdf -> texi2dvi
>
>
> [http://r-forge.r-project.org/R/?group_id=235&log=build_src&pkg=sos&flavor=patched]

That might mean that latex isn't finding Sweave.sty, which is in 
RHOME/share/texmf/tex/latex, or more likely it is finding a bad version 
somewhere else.

But in your case I think it's because you're telling latex to use 
RJournal.sty instead of Sweave.sty, and never defining \Sconcordance.

You can avoid the need for it by setting the Sweave option 
"concordance=FALSE".



        The above was on R-Forge.  When I run "R CMD build sos" with R
3.3.0 on my MacBook Pro running OS X 10.11.4, I get a different LaTeX
error, also in texi2dvi:


Error in texi2dvi(file = file, pdf = TRUE, clean = clean, quiet = quiet,  :
    Running 'texi2dvi' on 'sos.tex' failed.
BibTeX errors:
The top-level auxiliary file: sos.aux
The style file: abbrvnat.bst
I found no \bibdata command---while reading file sos.aux
Calls: <Anonymous> -> texi2pdf -> texi2dvi
Execution halted



Don't know about that one.

Duncan Murdoch


From suharto_anggono at yahoo.com  Fri May 13 18:33:05 2016
From: suharto_anggono at yahoo.com (Suharto Anggono Suharto Anggono)
Date: Fri, 13 May 2016 16:33:05 +0000 (UTC)
Subject: [Rd] complex NA's match(),
 etc: not back-compatible change proposal
References: <482508074.1624501.1463157185695.JavaMail.yahoo.ref@mail.yahoo.com>
Message-ID: <482508074.1624501.1463157185695.JavaMail.yahoo@mail.yahoo.com>

That, for example, complex(real=NaN) and complex(imaginary=NaN) are regarded as equal makes it possible that length(unique(as.character(x))) > length(unique(x)) (current code of function 'factor' doesn't expect it). Yes, an argument for the behavior is that NA and NaN are of one kind.

On my system, using 32-bit R for Windows from binary from CRAN, the result of sapply(z, match, table = z) (not in current R-devel) may be different from below:
1 2 3 4 1 3 7 8 2 4 8 12  # R 2.10.1, different from below
1 2 3 4 1 3 7 8 2 4 8 12  # R 3.2.5, different from below

I noticed that, by function 'cequal' in unique.c, a complex number that has both NA and NaN matches NA and also matches NaN.

> x0 <- c(0,1, NA, NaN); z <- outer(x0,x0, complex, length.out=1); rm(x0)
> (z <- z[is.na(z)])
 [1]       NA NaN+  0i       NA NaN+  1i       NA       NA       NA       NA
 [9]   0+NaNi   1+NaNi       NA NaN+NaNi
> sapply(z, match, table = z[8])
 [1] 1 1 1 1 1 1 1 1 1 1 1 1
> match(z, z[8])
 [1] 1 1 1 1 1 1 1 1 1 1 1 1
> sessionInfo()
R Under development (unstable) (2016-05-12 r70604)
Platform: i386-w64-mingw32/i386 (32-bit)
Running under: Windows XP (build 2600) Service Pack 2

locale:
[1] LC_COLLATE=English_United States.1252
[2] LC_CTYPE=English_United States.1252
[3] LC_MONETARY=English_United States.1252
[4] LC_NUMERIC=C
[5] LC_TIME=English_United States.1252

attached base packages:
[1] stats     graphics  grDevices utils     datasets  methods   base

-----------------
>>>>> Martin Maechler <maechler at stat.math.ethz.ch>
>>>>>     on Tue, 10 May 2016 16:08:39 +0200 writes:

    > This is an RFC / announcement related to the 2nd part of PR#16885
    > https://bugs.r-project.org/bugzilla/show_bug.cgi?id=16885
    > about  complex NA's.

    > The (somewhat rare) incompatibility in R's 3.3.0 match() behavior for the
    > case of complex numbers with NA & NaN's {which has been fixed for R 3.3.0
    > patched in the mean time} triggered some more comprehensive "research".

    > I found that we have had a long-standing inconsistency at least between the
    > documented and the real behavior.  I am claiming that the documented
    > behavior is desirable and hence R's current "real" behavior is bugous, and
    > I am proposing to change it, in R-devel (to be 3.4.0) for now.

After the  "roaring unanimous" assent  (one private msg
      encouraging me to go forward, no dissenting voice, hence an
      "odds ratio" of  +Inf  in favor ;-)

I have now committed my proposal to R-devel (svn rev. 70597) and
some of us will be seeing the effect in package space within a
day or so, in the CRAN checks against R-devel (not for
    bioconductor AFAIK; their checks using R-devel only when it less
    than ca 6 months from release).

It's still worthwhile to discuss the issue, if you come late
to it, notably as ---paraphrasing Dirk on the R-package-devel list---
the release of 3.4.0 is almost a year away, and so now is the
best time to tinker with the API, in other words, consider breaking
rarely used legacy APIs..

Martin


    > In help(match) we have been saying

    > |  Exactly what matches what is to some extent a matter of definition.
    > |  For all types, \code{NA} matches \code{NA} and no other value.
    > |  For real and complex values, \code{NaN} values are regarded
    > |  as matching any other \code{NaN} value, but not matching \code{NA}.

    > for at least 10 years.  But we don't do that at all in the
    > complex case (and AFAIK never got a bug report about it).

    > Also, e.g., print(.) or format(.) do simply use  "NA" for all
    > the different complex NA-containing numbers, where OTOH,
    > non-NA NaN's { <=>  !is.nan(z) & is.na(z) }
    > in format() or print() do show the NaN in real and/or imaginary
    > parts; for an example, look at the "format" column of the matrix
    > below, after 'print(cbind' ...

    > The current match()---and duplicated(), unique() which are based on the same
    > C code---*do* distinguish almost all complex NA / NaN's which is
    > NOT according to documentation. I have found that this is just because of 
    > of our hashing function for the complex case, chash() in R/src/main/unique.c,
    > is bogous in the sense that it is not compatible with the above documentation
    > and also not with the cequal() function (in the same file uniqu.c) for checking
    > equality of complex numbers.

    > As I have found,, a *simplified* version of the chash() function
    > to make it compatible with cequal() does solve all the problems I've
    > indicated,  and the current plan is to commit that change --- after some
    > discussion time, here on R-devel ---  to the code base.

    > My change passes  'make check-all' fine, but I'm 100% sure that there will
    > be effects in package-space. ... one reason for this posting.

    > As mentioned above, note that the chash() function has been in
    > use for all three functions
    > match()
    > duplicated()
    > unique()
    > and the change will affect all three --- but just for the case of complex
    > vectors with NA or NaN's.

    > To show more, a small R session -- using my version of R-devel
    > == the proposition: 
    > The R script ('complex-NA-short.R') for (a bit more than) the
    > session is attached {{you can attach  text/plain easily}}:

    >> x0 <- c(0,1, NA, NaN); z <- outer(x0,x0, complex, length.out=1); rm(x0)
    >> ##           --- = NA_real_  but that does not exist e.g., in R 2.3.1
    >> ##                   similarly,  '1L', '2L', .. do not exist e.g., in R 2.3.1
    >> (z <- z[is.na(z)])
    > [1]       NA NaN+  0i       NA NaN+  1i       NA       NA       NA       NA
    > [9]   0+NaNi   1+NaNi       NA NaN+NaNi
    >> outerID <- function(x,y, ...) { ## ugly; can we get outer() to work ?
    > +     r <- matrix( , length(x), length(y))
    > +     for(i in seq(along=x))
    > +         for(j in seq(along=y))
    > +             r[i,j] <- identical(z[i], z[j], ...)
    > +     r
    > + }
    >> ## Very strictly - in the sense of identical() -- these 12 complex numbers all differ:
    >> ## a version that works in older versions of R, where identical() had fewer arguments!
    >> outerID.picky <- function(x,y) {
    > +     nF <- length(formals(identical)) - 2
    > +     do.call("outerID", c(list(x, y), as.list(rep(FALSE, nF))))
    > + }
    >> oldR <- !exists("getRversion") || getRversion() < "3.0.0" ## << FIXME: 3.0.0 is  a wild guess
    >> symnum(id.z <- outerID.picky(z,z)) ## == Diagonal matrix [newer versions of R]
                             
    > [1,] | . . . . . . . . . . .
    > [2,] . | . . . . . . . . . .
    > [3,] . . | . . . . . . . . .
    > [4,] . . . | . . . . . . . .
    > [5,] . . . . | . . . . . . .
    > [6,] . . . . . | . . . . . .
    > [7,] . . . . . . | . . . . .
    > [8,] . . . . . . . | . . . .
    > [9,] . . . . . . . . | . . .
    > [10,] . . . . . . . . . | . .
    > [11,] . . . . . . . . . . | .
    > [12,] . . . . . . . . . . . |
    >> try(# for older R versions
    > + stopifnot(identical(id.z, outerID(z,z)), oldR || identical(id.z, diag(12) == 1))
    > + )
    >> (mz <- match(z, z)) # currently different {NA,NaN} patterns differ - not in print()/format() _FIXME_
    > [1] 1 2 1 2 1 1 1 1 2 2 1 2
    >> zRI <- rbind(Re=Re(z), Im=Im(z)) # and see the pattern :
    >> print(cbind(format = format(z), t(zRI), mz), quote=FALSE)
    > format   Re   Im   mz
    > [1,]       NA <NA> 0    1 
    > [2,] NaN+  0i NaN  0    2 
    > [3,]       NA <NA> 1    1 
    > [4,] NaN+  1i NaN  1    2 
    > [5,]       NA 0    <NA> 1 
    > [6,]       NA 1    <NA> 1 
    > [7,]       NA <NA> <NA> 1 
    > [8,]       NA NaN  <NA> 1 
    > [9,]   0+NaNi 0    NaN  2 
    > [10,]   1+NaNi 1    NaN  2 
    > [11,]       NA <NA> NaN  1 
    > [12,] NaN+NaNi NaN  NaN  2 
    >> 
    > -------------------------------
    > Note that 'mz <- match(z, z)' and hence the last column of the matrix above
    > are very different in current R, 
    > distinguishing most kinds of NA / NaN  against the documentation (and the
    > real/numeric case).

    > Martin Maechler
    > R Core Team


    > ### Basically a shortened version of  the PR#16885 -- complex part b)
    > ### of  R/tests/reg-tests-1c.R

    > ## b) complex 'x' with different kinds of NaN
    > x0 <- c(0,1, NA, NaN); z <- outer(x0,x0, complex, length.out=1); rm(x0)
    > ##           --- = NA_real_  but that does not exist e.g., in R 2.3.1
    > ##                   similarly,  '1L', '2L', .. do not exist e.g., in R 2.3.1
    > (z <- z[is.na(z)])
    > outerID <- function(x,y, ...) { ## ugly; can we get outer() to work ?
    > r <- matrix( , length(x), length(y))
    > for(i in seq(along=x))
    > for(j in seq(along=y))
    > r[i,j] <- identical(z[i], z[j], ...)
    > r
    > }
    > ## Very strictly - in the sense of identical() -- these 12 complex numbers all differ:
    > ## a version that works in older versions of R, where identical() had fewer arguments!
    > outerID.picky <- function(x,y) {
    > nF <- length(formals(identical)) - 2
    > do.call("outerID", c(list(x, y), as.list(rep(FALSE, nF))))
    > }
    > oldR <- !exists("getRversion") || getRversion() < "3.0.0" ## << FIXME: 3.0.0 is  a wild guess
    > symnum(id.z <- outerID.picky(z,z)) ## == Diagonal matrix [newer versions of R]
    > try(# for older R versions
    > stopifnot(identical(id.z, outerID(z,z)), oldR || identical(id.z, diag(12) == 1))
    > )
    > (mz <- match(z, z)) # currently different {NA,NaN} patterns differ - not in print()/format() _FIXME_
    > zRI <- rbind(Re=Re(z), Im=Im(z)) # and see the pattern :
    > print(cbind(format = format(z), t(zRI), mz), quote=FALSE)

    > ## compute  match(z[i], z) , for  i = 1,2,..,12  :
    > (m1z <- sapply(z, match, table = z))
    > ## 1 2 1 2 2 2 1 2 2 2 1 2   # R 1.2.3  (2001-04-26)
    > ## 1 2 3 4 1 3 7 8 2 4 8 7   # R 1.4.1  (2002-01-30)
    > ## 1 2 3 4 1 3 7 8 2 4 8 12  # R 1.5.1  (2002-06-17)
    > ## 1 2 3 4 1 3 7 8 2 4 8 12  # R 1.8.1  (2003-11-21)
    > ## 1 2 3 4 1 3 7 8 2 4 8 12  # R 2.0.1  (2004-11-15)
    > ## 1 2 3 4 1 3 7 4 2 4 4 12  # R 2.1.1  (2005-06-20)
    > ## 1 2 3 4 1 3 7 4 2 4 4 12  # R 2.3.1  (2006-06-01)
    > ## 1 2 3 4 1 3 7 8 2 4 8 12  # R 2.5.1  (2007-06-27)
    > ## 1 2 3 4 1 3 7 4 2 4 4 12  # R 2.10.1 (2009-12-14)
    > ## 1 2 3 4 1 3 7 4 2 4 4 12  # R 3.1.1  (2014-07-10)
    > ## 1 2 3 4 1 3 7 4 2 4 4 12  # R 3.2.5 -- and 3.3.0 patched
    > ## 1 2 1 2 1 1 1 1 2 2 1 2   # <<-- Martin's R-devel and proposed future R

    > if(!exists("anyNA", mode="function")) anyNA <- function(x) any(is.na(x))
    > stopifnot(apply(zRI, 2, anyNA)) # *all* are  NA *or* NaN (or both)
    > is.NA <- function(.) is.na(.) & !is.nan(.)
    > (iNaN <- apply(zRI, 2, function(.) any(is.nan(.))))
    > (iNA <-  apply(zRI, 2, function(.) any(is.NA (.)))) # has non-NaN NA's
    > ## In Martin's version of R-devel :
    > stopifnot(identical(m1z == 1, iNA),
    > identical(m1z == 2, !iNA))
    > ## m1z uses match(x, *) with length(x) == 1 and failed in R 3.3.0
    > stopifnot(identical(m1z, mz))
    > ______________________________________________
    > R-devel at r-project.org mailing list
    > https://stat.ethz.ch/mailman/listinfo/r-devel


From h.wickham at gmail.com  Fri May 13 22:11:09 2016
From: h.wickham at gmail.com (Hadley Wickham)
Date: Fri, 13 May 2016 15:11:09 -0500
Subject: [Rd] recursion problem using do.call(rbind, list(..,<S4>,..))
In-Reply-To: <22321.47966.231497.624140@stat.math.ethz.ch>
References: <22321.47966.231497.624140@stat.math.ethz.ch>
Message-ID: <CABdHhvGkcCYB-95T+jw8fuaj-_sE953aw4SkofG21ZR+FRcUvw@mail.gmail.com>

Hi Martin,

I think this is a general problem with any function that does dispatch
on ... - I think for well-defined behaviour you always need to
dispatch on pairs, folding/reducing (like in your code) to get a
single value. The downside of this approach is obviously performance:
for n inputs, you need n - 1 temporary objects, which is going to
hamper performance (which is problematic for rbind since it's not
uncommon to have lists of thousands of small data frames). I don't see
anyway around this, except maybe you just have to have specialised
variants (like dplyr::bind_rows() and data.table::rbindlist()) that
don't do dispatch.

I've cc'd Michael since he might have missed the original thread, and
I suspect he's probably thought more about this than me.

Hadley

On Tue, May 10, 2016 at 5:43 AM, Martin Maechler
<maechler at stat.math.ethz.ch> wrote:
> This was originally a bug report about Matrix,
>   https://r-forge.r-project.org/tracker/?func=detail&atid=294&aid=6325&group_id=61
> but the bug is rather a "design" bug in R, or a limitation.
>
> This e-mail is a report of the status quo as I see it, and
> call for comments, sugguests, help/hints for workarounds,
> or even a suggestion for a programming task helping R core to
> amend the status {re-writing the methods:::cbind and ...:rbind functions}:
>
>
> If you read  ?rbind  carefully, you may have learned that rbind() and
> cbind() are able to deal with S4 "matrix-like" objects, via the
> hidden methods:::rbind /  methods:::cbind functions
> where these recursively build on appropriate S4 methods for
> rbind2() / cbind2().
>
> That is how cbind() and rbind() work nowadays for Matrix-package
> matrices.
>
> However, there is problem lurking from the above paragraph, and
> for experienced programmers / computer scientists that may even
> be obvious: recursion.
>
> A simple MRE (minimal reproducible example) for the problem seen with Matrix:
>
>   S <- sparseMatrix(i=1:4, j=9:6, x=pi*1:4)
>   n <- 410 # it succeeds for 407 -- sometimes even with 408
>   X <- replicate(n, S, simplify = FALSE)
>   Xb <- do.call("rbind", X)
>   ## -> Error in as(x, "CsparseMatrix") : node stack overflow
>
> But as I said, that's not really the Matrix package. A small
> reproducible example, not involving the Matrix package at all:
>
>   MM <- setClass("mmatrix", contains="matrix")
>   setMethod("rbind2", signature(x="mmatrix", y="mmatrix"),
>             function(x,y) as(base::rbind(unclass(x), unclass(y)), "mmatrix"))
>
>   (m5 <- MM(diag(5)))
>   m45 <- MM(matrix(1:20, 4,5))
>   rbind(m5, m45) # fine
>
>   ## fine with 400 :
>   mL.4c <- replicate(400, m45, simplify=FALSE)
>   mmm4 <- do.call(rbind, mL.4c)
>   stopifnot(is(mmm4, "mmatrix"), dim(mmm4) == c(1600L, 5L))
>   ## not ok with 410 :
>   mL.410 <- replicate(410, m45, simplify=FALSE)
>   mmm4 <- do.call(rbind, mL.410)
>   ## Error in getExportedValue(pkg, name) (from #2) : node stack overflow
>
> and the "node stack overflow"  is not too helpful.
> Unfortunately, this is more than one problem, the first one being
> that recursive function calls nowadays often end with this
> "node stack overflow" error, rather than the somewhat more understandable
> error message, namely
>
>   Error: evaluation nested too deeply: infinite recursion / options(expressions=)?
>
> And even worse, that nowadays increasing the option to a higher number N,
>     options(expressions = N)
>
> does not help at all in this situation, once the code is byte
> compiled.... which of course is true for everything in base R.
>
> But that is basically only the reason for the not-so-helpful
> error message (and that raising 'expressions' does not help!),
> but the underlying problem is somewhat harder, namely the full
> setup the S4-serving methods:::rbind() {and ...cbind()} using
> recursion (in the way it does) at all.
>
> There is a simple, in my eyes ugly workaround which also will not scale well,
> but works fine and fast enough for the above example:
>
> ## Simple ugly workaround .. but well fast enough :
>> system.time({
> + r <- mL.410[[1]]
> + for(i in seq_along(mL.410)[-1])
> +     r <- rbind2(r, mL.410[[i]])
> + })
>    user  system elapsed
>   0.083   0.000   0.083
>> dim(r)
> [1] 1640    5
>>
>
> This should help Ben (the OP of the Matrix bug), and may be
> something like that should also guide on how to re-write
> the  methods:::rbind()  / methods:::cbind()  in a non-recursive
> fashion ?
>
> Thank you for your thoughts.
>
> Martin Maechler
> ETH Zurich
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel



-- 
http://hadley.nz


From i2222222 at hotmail.com  Sat May 14 17:43:48 2016
From: i2222222 at hotmail.com (Yuan Li)
Date: Sat, 14 May 2016 23:43:48 +0800
Subject: [Rd] R external pointer and GPU memory leak problem
Message-ID: <BLU180-W21DEF2A64D3C1B436DD34D94750@phx.gbl>

My question is based on a project I have partially done, but there is still something I'm not clear.

My goal is to create a R package contains GPU functions (some are from Nividia cuda library, some are my self-defined CUDA functions)

My design is quite different from current R's GPU package, I want to create a R object (external pointer) point to GPU address, and run my GPU function direct on GPU side without transferring forth and back between CPU and GPU.

I used the R external pointer to implement my design. But I found I have memory leak problems on GPU side, I can still fix it by running gc() function explicitly in R side, but I'm just wondering if I missed something in my C code. Would you please indicate my mistake, because this is my first time write a R package, and I could possibly made some terrible mistakes.

actually, I have wrote bunch of GPU functions which can run on GPU side with the object created by following create function, but the memory leak kills me if I need to deal with some huge dataset.

Here is my create function, I create a gpu pointer x, and allocate GPU memory for x, then make a R external pointer ext based on x, and copy the cpu vector input to my gpu external pointer ext,?


/*
define function to create a vector in GPU?
by transferring a R's vector to GPU.
input is R's vector and its length,?
output is a R external pointer
pointing to GPU vector(device)
*/
SEXP createGPU(SEXP input, SEXP n)
{ ?
int *lenth = INTEGER(n);
? ? ? ?PROTECT (input = AS_NUMERIC (input));
? ? ? ?double * temp;?
? ? ? ?temp = REAL(input);
double *x; ? ? ? ? ? ? ? ##here is the step which causes the memory leak
cudacall(cudaMalloc((void**)&x, *lenth * sizeof(double)));
//protect the R external pointer from finalizer
SEXP ext = PROTECT(R_MakeExternalPtr(x, R_NilValue, R_NilValue));
R_RegisterCFinalizerEx(ext, _finalizer, TRUE);
?
//copying CPU to GPU
cublascall(cublasSetVector(*lenth, sizeof(double), temp, 1,?
R_ExternalPtrAddr(ext), 1)); ? ?
? ? ? ?UNPROTECT(2);
return ext;
}



here is my finalized for my create function,

/*
define finalizer for R external pointer
input is R external pointer, function will finalize the pointer?
when it is not in use.
*/
static void _finalizer(SEXP ext)
{
if (!R_ExternalPtrAddr(ext))
return;
? ? ? ?double * ptr= (double *) R_ExternalPtrAddr(ext);
Rprintf("finalizer invoked once \n");
cudacall(cudaFree(ptr));
R_ClearExternalPtr(ext);
}


My create function can run smoothly, but if I run the create function too many times, it shows out of memory for my GPU device, which clearly implies memory leak problem. Can anybody help? Help alot in advance!? 		 	   		  

From henrik.bengtsson at gmail.com  Sun May 15 03:33:08 2016
From: henrik.bengtsson at gmail.com (Henrik Bengtsson)
Date: Sat, 14 May 2016 18:33:08 -0700
Subject: [Rd] R devel: install.packages(...,
	type="both") not supported on Windows
Message-ID: <CAFDcVCQY8-777n2fdz20RvagdUWeTSYDSZ=81GmaPO3d8LjY1A@mail.gmail.com>

Is the following intentional or something that has been overlooked?

[HB-X201]{hb}: R --vanilla

R Under development (unstable) (2016-05-13 r70616) -- "Unsuffered Consequences"
Copyright (C) 2016 The R Foundation for Statistical Computing
Platform: x86_64-w64-mingw32/x64 (64-bit)

[...]

## Note that "source" is the built-in default
> getOption("pkgType")
[1] "source"

## Trying with 'both'
> install.packages("MASS", type="both")
Installing package into 'C:/Users/hb/R/win-library/3.4'
(as 'lib' is unspecified)
Error in install.packages("MASS") :
  type == "both" can only be used on Windows or a CRAN build for Mac OS X

## But 'win.binary' works
> install.packages("MASS", type="win.binary")
Installing package into 'C:/Users/hb/R/win-library/3.4'
(as 'lib' is unspecified)
trying URL 'https://cran.r-project.org/bin/windows/contrib/3.4/MASS_7.3-45.zip'
Content type 'application/zip' length 1088567 bytes (1.0 MB)
downloaded 1.0 MB

package 'MASS' successfully unpacked and MD5 sums checked


> sessionInfo()
R Under development (unstable) (2016-05-13 r70616)
Platform: x86_64-w64-mingw32/x64 (64-bit)
Running under: Windows 7 x64 (build 7601) Service Pack 1

locale:
[1] LC_COLLATE=English_United States.1252
[2] LC_CTYPE=English_United States.1252
[3] LC_MONETARY=English_United States.1252
[4] LC_NUMERIC=C
[5] LC_TIME=English_United States.1252

attached base packages:
[1] stats     graphics  grDevices utils     datasets  methods   base

/Henrik


From cdetermanjr at gmail.com  Mon May 16 14:42:38 2016
From: cdetermanjr at gmail.com (Charles Determan)
Date: Mon, 16 May 2016 07:42:38 -0500
Subject: [Rd] R external pointer and GPU memory leak problem
In-Reply-To: <BLU180-W21DEF2A64D3C1B436DD34D94750@phx.gbl>
References: <BLU180-W21DEF2A64D3C1B436DD34D94750@phx.gbl>
Message-ID: <CAKxd1KPJtvKAkBoEH5oQ4zZT7D1Ni9vd41go21DJo6C3TYXAxg@mail.gmail.com>

Hi Yuan,

I think this is likely more appropriate for the r-sig-hpc mailing list.
However, regarding you design and comment about R's 'current' GPU package
(I don't what you consider this, gputools?) I think you should look at two
other packages.  I believe the gmatrix (
https://cran.r-project.org/web/packages/gmatrix/index.html) implements
exactly what you are trying to do for NVIDIA specific code.  There is also
the gpuR package (https://cran.r-project.org/web/packages/gpuR/index.html)
package which also implements the object 'on GPU' functionality you desire
but in OpenCL so it works for 'all' GPUs.

If you really want to continue your development I strongly recommend you
look in to using Rcpp and the XPtr objects for external pointers.  They
handle the pointer protection and finalizer without you needing to worry
about them.

Regards,
Charles

On Sat, May 14, 2016 at 10:43 AM, Yuan Li <i2222222 at hotmail.com> wrote:

> My question is based on a project I have partially done, but there is
> still something I'm not clear.
>
> My goal is to create a R package contains GPU functions (some are from
> Nividia cuda library, some are my self-defined CUDA functions)
>
> My design is quite different from current R's GPU package, I want to
> create a R object (external pointer) point to GPU address, and run my GPU
> function direct on GPU side without transferring forth and back between CPU
> and GPU.
>
> I used the R external pointer to implement my design. But I found I have
> memory leak problems on GPU side, I can still fix it by running gc()
> function explicitly in R side, but I'm just wondering if I missed something
> in my C code. Would you please indicate my mistake, because this is my
> first time write a R package, and I could possibly made some terrible
> mistakes.
>
> actually, I have wrote bunch of GPU functions which can run on GPU side
> with the object created by following create function, but the memory leak
> kills me if I need to deal with some huge dataset.
>
> Here is my create function, I create a gpu pointer x, and allocate GPU
> memory for x, then make a R external pointer ext based on x, and copy the
> cpu vector input to my gpu external pointer ext,
>
>
> /*
> define function to create a vector in GPU
> by transferring a R's vector to GPU.
> input is R's vector and its length,
> output is a R external pointer
> pointing to GPU vector(device)
> */
> SEXP createGPU(SEXP input, SEXP n)
> {
> int *lenth = INTEGER(n);
>        PROTECT (input = AS_NUMERIC (input));
>        double * temp;
>        temp = REAL(input);
> double *x;               ##here is the step which causes the memory leak
> cudacall(cudaMalloc((void**)&x, *lenth * sizeof(double)));
> //protect the R external pointer from finalizer
> SEXP ext = PROTECT(R_MakeExternalPtr(x, R_NilValue, R_NilValue));
> R_RegisterCFinalizerEx(ext, _finalizer, TRUE);
>
> //copying CPU to GPU
> cublascall(cublasSetVector(*lenth, sizeof(double), temp, 1,
> R_ExternalPtrAddr(ext), 1));
>        UNPROTECT(2);
> return ext;
> }
>
>
>
> here is my finalized for my create function,
>
> /*
> define finalizer for R external pointer
> input is R external pointer, function will finalize the pointer
> when it is not in use.
> */
> static void _finalizer(SEXP ext)
> {
> if (!R_ExternalPtrAddr(ext))
> return;
>        double * ptr= (double *) R_ExternalPtrAddr(ext);
> Rprintf("finalizer invoked once \n");
> cudacall(cudaFree(ptr));
> R_ClearExternalPtr(ext);
> }
>
>
> My create function can run smoothly, but if I run the create function too
> many times, it shows out of memory for my GPU device, which clearly implies
> memory leak problem. Can anybody help? Help alot in advance!
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>

	[[alternative HTML version deleted]]


From simon.urbanek at r-project.org  Mon May 16 19:58:54 2016
From: simon.urbanek at r-project.org (Simon Urbanek)
Date: Mon, 16 May 2016 13:58:54 -0400
Subject: [Rd] R external pointer and GPU memory leak problem
In-Reply-To: <BLU180-W21DEF2A64D3C1B436DD34D94750@phx.gbl>
References: <BLU180-W21DEF2A64D3C1B436DD34D94750@phx.gbl>
Message-ID: <8D5A35A7-D4F4-4C9F-AB13-055E5D1868C2@r-project.org>

Yuan,

AFAICS things are all working as designed. If everything gets collected properly after a gc() then your finalizers are correct. You have to remember that R relies on garbage collection the release memory so only when R requires more memory it will run a garbage collection. The problem with interfaces to external memory (like GPU) is that R has no idea that you have anything large attached to your tiny external pointer, so as far as R is concerned there is no need to run a garbage collection. Therefore you have to make sure you manage your collection points accordingly - your interface should trigger a garbage collection based on your memory needs - just like R does for the memory it allocates. So you may want to add that logic into your allocation piece - either by keeping track of the amount of memory you allocate on the GPU side or by running a GC when new GPU allocations fail.

Cheers,
Simon



On May 14, 2016, at 11:43 AM, Yuan Li <i2222222 at hotmail.com> wrote:

> My question is based on a project I have partially done, but there is still something I'm not clear.
> 
> My goal is to create a R package contains GPU functions (some are from Nividia cuda library, some are my self-defined CUDA functions)
> 
> My design is quite different from current R's GPU package, I want to create a R object (external pointer) point to GPU address, and run my GPU function direct on GPU side without transferring forth and back between CPU and GPU.
> 
> I used the R external pointer to implement my design. But I found I have memory leak problems on GPU side, I can still fix it by running gc() function explicitly in R side, but I'm just wondering if I missed something in my C code. Would you please indicate my mistake, because this is my first time write a R package, and I could possibly made some terrible mistakes.
> 
> actually, I have wrote bunch of GPU functions which can run on GPU side with the object created by following create function, but the memory leak kills me if I need to deal with some huge dataset.
> 
> Here is my create function, I create a gpu pointer x, and allocate GPU memory for x, then make a R external pointer ext based on x, and copy the cpu vector input to my gpu external pointer ext, 
> 
> 
> /*
> define function to create a vector in GPU 
> by transferring a R's vector to GPU.
> input is R's vector and its length, 
> output is a R external pointer
> pointing to GPU vector(device)
> */
> SEXP createGPU(SEXP input, SEXP n)
> {  
> int *lenth = INTEGER(n);
>        PROTECT (input = AS_NUMERIC (input));
>        double * temp; 
>        temp = REAL(input);
> double *x;               ##here is the step which causes the memory leak
> cudacall(cudaMalloc((void**)&x, *lenth * sizeof(double)));
> //protect the R external pointer from finalizer
> SEXP ext = PROTECT(R_MakeExternalPtr(x, R_NilValue, R_NilValue));
> R_RegisterCFinalizerEx(ext, _finalizer, TRUE);
>  
> //copying CPU to GPU
> cublascall(cublasSetVector(*lenth, sizeof(double), temp, 1, 
> R_ExternalPtrAddr(ext), 1));    
>        UNPROTECT(2);
> return ext;
> }
> 
> 
> 
> here is my finalized for my create function,
> 
> /*
> define finalizer for R external pointer
> input is R external pointer, function will finalize the pointer 
> when it is not in use.
> */
> static void _finalizer(SEXP ext)
> {
> if (!R_ExternalPtrAddr(ext))
> return;
>        double * ptr= (double *) R_ExternalPtrAddr(ext);
> Rprintf("finalizer invoked once \n");
> cudacall(cudaFree(ptr));
> R_ClearExternalPtr(ext);
> }
> 
> 
> My create function can run smoothly, but if I run the create function too many times, it shows out of memory for my GPU device, which clearly implies memory leak problem. Can anybody help? Help alot in advance!  		 	   		  
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
> 


From wdunlap at tibco.com  Mon May 16 22:22:49 2016
From: wdunlap at tibco.com (William Dunlap)
Date: Mon, 16 May 2016 13:22:49 -0700
Subject: [Rd] meaning of 'Depends: R (> 3.0.2)'
Message-ID: <CAF8bMcYfnMDr5_iGspR4pxA+fqqHUbdcEftD7EWNZJaG_v4VpA@mail.gmail.com>

In knitr-1.13 the DESCRIPTION file's Depends line uses a ">" instead of the
usual ">=".
  Depends: R (> 3.0.2)
I don't see the strict greater than in Writing R Extensions.  Does it
really mean that 3.0.2 is not suitable and that whatever version comes
after it is?

Bill Dunlap
TIBCO Software
wdunlap tibco.com

	[[alternative HTML version deleted]]


From frederik at ofb.net  Tue May 17 03:40:50 2016
From: frederik at ofb.net (frederik at ofb.net)
Date: Mon, 16 May 2016 18:40:50 -0700
Subject: [Rd] please apply my patches
In-Reply-To: <22325.38166.483959.66610@stat.math.ethz.ch>
	<60FE8C75-28AD-4148-BE6A-7A880C4BBC23@gmail.com>
	<57358A2E.7030305@umu.se>
Message-ID: <20160517014050.GA10985@ofb.net>

Dear R Devel,

Sorry for sending so many emails, but I haven't heard that anyone is
working on the patches I created.

A few weeks ago I wanted to do something to contribute to R because I
use it a lot. I picked the most annoying bugs I could find, and
created two of the simplest patches I could create, but all I've had
in response from the R core team (aside from briefly banning my
Bugzilla account) is a lengthy explanation for why power users don't
use the basic command line interface. I'm grateful to Peter for the
list of tools like ESS that people use to interface with R; but if I
wanted to submit a bug to ESS then I would have sent it to a different
mailing list.

Thank you G?ran for confirming that you experience these bugs. I've
Cc'ed two other users, Chris Smowton and "Terran", who commented on
the Bugzilla bugs. Do you guys want to weigh in on the relative
importance of getting these fixed?

Nobody asked me to describe the patches in more detail, but I'll give
a brief summary in case it helps: One of my patches adds a signal
handler for SIGWINCH (which GNU Readline stopped handling a few years
ago without telling anyone). There is no other use of SIGWINCH in the
R code so I don't think this will cause problems. This makes
terminal-resizing possible. The other one adds some additional cleanup
to popReadline. Now, popReadline is called every time a command is
entered at the prompt, or when R catches SIGINT, to reset the terminal
settings and take control back from Readline. My second patch fixes
incremental-search by amending popReadline to clear the line state as
well. I invite creative suggestions as to how these might lead to
unforeseen trouble for Unix or non-Unix users - what I might have
missed in my testing, etc.

Otherwise, I would appreciate some kind of real input as to what I
should do or who I should contact to get this rolling. We're all short
on time; if we can get this taken care of quickly and efficiently then
we'll have more time left for other stuff.

Thank you,

Frederick


On Fri, May 13, 2016 at 10:02:54AM +0200, G?ran Brostr?m wrote:
> Dear Frederik,
> 
> I can confirm that especially the first issue on your list (resizing the
> terminal) has "bothered me" badly for some time now: I'm on Ubuntu
> (usually).
> 
> G?ran Brostr?m
> 
> 
> On 2016-05-13 00:23, frederik at ofb.net wrote:
> > Hi Peter, Martin, and others,
> > 
> > Thanks for your replies.
> > 
> > - The bugs apply to all systems that use GNU Readline, not just Linux
> >    or Arch Linux.
> > 
> > - Readline version 6.3 changed the signal handling so that SIGWINCH is
> >    no longer handled automatically by the library. This means it's not
> >    currently possible for people using R on e.g. Linux to resize the
> >    terminal, or at least when they do so they have to make sure that
> >    all their commands fit in one line and don't wrap.
> > 
> > - There is also a long-standing bug in Readline where the callback
> >    interface didn't properly clear the line on SIGINT (^C). This means
> >    that "exiting" reverse-incremental-search with ^C would give an
> >    apparently empty prompt which still had some pending input, so if
> >    you hit ^C-Return then an unintended command would get executed.
> > 
> > If they're not "bothering all that many people", then perhaps it's
> > because everyone uses Windows or Mac OS X or RStudio. For me these are
> > pretty significant bugs. The second one causes unintended code to be
> > executed. Random code could delete files, for example, or worse. The
> > first one bites me every time I want to change the size of a window,
> > which is pretty often.
> > 
> > I tried to get Readline maintainer Chet Ramey to fix these on the
> > Readline side, but he disagreed with my proposal:
> > 
> > https://lists.gnu.org/archive/html/bug-readline/2016-04/threads.html
> > 
> > I'm glad that my message here at least was seen and I hope that
> > someone who uses the R command line on Linux will have time to verify
> > that the patches work correctly. They are basically Chet-approved
> > workarounds for bugs/changes in Readline, not very complicated.
> > 
> > Do either of you know a Linux R person you could ping to get these
> > patches checked out? I'm not overly frustrated, and I'm not in a major
> > hurry, but from what we've observed it seems like waiting for someone
> > concerned to come along and finally read Bugzilla or the R-Devel
> > archives is not going to result in a very dense Poisson process...
> > 
> > Thanks,
> > 
> > Frederick Eaton
> > 
> > On Thu, May 12, 2016 at 03:42:59PM +0200, peter dalgaard wrote:
> > > 
> > > > On 12 May 2016, at 10:03 , Martin Maechler <maechler at stat.math.ethz.ch> wrote:
> > > > 
> > > > > > > > >   <frederik at ofb.net>
> > > > > > > > >     on Wed, 11 May 2016 23:00:20 -0700 writes:
> > > > 
> > > > > Dear R Developers,
> > > > > I wrote to this list a week ago with some patches that fix bugs in R's
> > > > > GNU Readline interface, but I haven't had a reply. I'm not in a hurry
> > > > > but I'd like to make sure that my message is getting read by the right
> > > > > people. Should I be sending my patches somewhere else?
> > > > 
> > > > Thank you Frederick for your reports and patches.
> > > > You did send them to the correct place, https://bugs.r-project.org/
> > > > 
> > > > Sometimes (as here) a combination of circumstances do lead to
> > > > nobody picking them up quickly.
> > > > In this case,
> > > > 
> > > > - probably none of R-core use or even have easy access to Arch Linux
> > > >   so we cannot easily veryify that there is a bug at all
> > > >   nor -consequently- veryify that your patch does fix the bug.
> > > 
> > > Actually, the bugs look like they should apply fairly generally, just maybe not bothering all that many people. But there could be portability issues with the fixes, so I suspect some of us were waiting for "a readline expert" to check them out.
> > > 
> > > -pd
> > > 
> > > BTW: Anyone with a fix for the stuck-at-eol issue? (aaa<right>bbb<left>ccc)
> > > 
> > > > 
> > > > - no other user has confirmed the bug on his/her platform, so
> > > >   there did not seem a huge demand...
> > > > 
> > > > - Accidentally many in R core may be busy with other bugs, teaching, .....
> > > >   and just lack the extra resources to delve into these problems
> > > >   at the current moment.
> > > > 
> > > > Hence, there was not even an 'Acknowledged' change to your
> > > > reports--indeed as nobody had been able to see there is a problem
> > > > existing outside of your personal computer.
> > > > 
> > > > I agree that this must seem a bit frustrating to you.
> > > > 
> > > > --
> > > > Martin
> > > > 
> > > > ______________________________________________
> > > > R-devel at r-project.org mailing list
> > > > https://stat.ethz.ch/mailman/listinfo/r-devel
> > > 
> > > --
> > > Peter Dalgaard, Professor,
> > > Center for Statistics, Copenhagen Business School
> > > Solbjerg Plads 3, 2000 Frederiksberg, Denmark
> > > Phone: (+45)38153501
> > > Office: A 4.23
> > > Email: pd.mes at cbs.dk  Priv: PDalgd at gmail.com
> > > 
> > > 
> > > 
> > > 
> > > 
> > > 
> > > 
> > > 
> > > 
> > 
> > ______________________________________________
> > R-devel at r-project.org mailing list
> > https://stat.ethz.ch/mailman/listinfo/r-devel
> > 
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
> 

On Fri, May 13, 2016 at 10:22:13AM +0200, peter dalgaard wrote:
> Actually, I think both Martin and I use reaadline R versions on a daily basis (Linux and OSX Terminal respectively). For my case, it is just that I rarely use the backwards search feature and I'm old enough that terminal widths other than 80 look odd to me so I don't resize much either. Of course that doesn't mean that the bugs aren't annoying to others!
> 
> -pd
> 
> 
> 
> On 13 May 2016, at 00:23 , frederik at ofb.net wrote:
> 
> > Hi Peter, Martin, and others,
> > 
> > Thanks for your replies.
> > 
> > - The bugs apply to all systems that use GNU Readline, not just Linux
> >  or Arch Linux.
> > 
> > - Readline version 6.3 changed the signal handling so that SIGWINCH is
> >  no longer handled automatically by the library. This means it's not
> >  currently possible for people using R on e.g. Linux to resize the
> >  terminal, or at least when they do so they have to make sure that
> >  all their commands fit in one line and don't wrap.
> > 
> > - There is also a long-standing bug in Readline where the callback
> >  interface didn't properly clear the line on SIGINT (^C). This means
> >  that "exiting" reverse-incremental-search with ^C would give an
> >  apparently empty prompt which still had some pending input, so if
> >  you hit ^C-Return then an unintended command would get executed.
> > 
> > If they're not "bothering all that many people", then perhaps it's
> > because everyone uses Windows or Mac OS X or RStudio. For me these are
> > pretty significant bugs. The second one causes unintended code to be
> > executed. Random code could delete files, for example, or worse. The
> > first one bites me every time I want to change the size of a window,
> > which is pretty often.
> > 
> > I tried to get Readline maintainer Chet Ramey to fix these on the
> > Readline side, but he disagreed with my proposal:
> > 
> > https://lists.gnu.org/archive/html/bug-readline/2016-04/threads.html
> > 
> > I'm glad that my message here at least was seen and I hope that
> > someone who uses the R command line on Linux will have time to verify
> > that the patches work correctly. They are basically Chet-approved
> > workarounds for bugs/changes in Readline, not very complicated.
> > 
> > Do either of you know a Linux R person you could ping to get these
> > patches checked out? I'm not overly frustrated, and I'm not in a major
> > hurry, but from what we've observed it seems like waiting for someone
> > concerned to come along and finally read Bugzilla or the R-Devel
> > archives is not going to result in a very dense Poisson process...
> > 
> > Thanks,
> > 
> > Frederick Eaton
> > 
> > On Thu, May 12, 2016 at 03:42:59PM +0200, peter dalgaard wrote:
> >> 
> >>> On 12 May 2016, at 10:03 , Martin Maechler <maechler at stat.math.ethz.ch> wrote:
> >>> 
> >>>>>>>> <frederik at ofb.net>
> >>>>>>>>   on Wed, 11 May 2016 23:00:20 -0700 writes:
> >>> 
> >>>> Dear R Developers,
> >>>> I wrote to this list a week ago with some patches that fix bugs in R's
> >>>> GNU Readline interface, but I haven't had a reply. I'm not in a hurry
> >>>> but I'd like to make sure that my message is getting read by the right
> >>>> people. Should I be sending my patches somewhere else?
> >>> 
> >>> Thank you Frederick for your reports and patches.
> >>> You did send them to the correct place, https://bugs.r-project.org/
> >>> 
> >>> Sometimes (as here) a combination of circumstances do lead to
> >>> nobody picking them up quickly.
> >>> In this case,
> >>> 
> >>> - probably none of R-core use or even have easy access to Arch Linux
> >>> so we cannot easily veryify that there is a bug at all
> >>> nor -consequently- veryify that your patch does fix the bug.
> >> 
> >> Actually, the bugs look like they should apply fairly generally, just maybe not bothering all that many people. But there could be portability issues with the fixes, so I suspect some of us were waiting for "a readline expert" to check them out.
> >> 
> >> -pd
> >> 
> >> BTW: Anyone with a fix for the stuck-at-eol issue? (aaa<right>bbb<left>ccc) 
> >> 
> >>> 
> >>> - no other user has confirmed the bug on his/her platform, so
> >>> there did not seem a huge demand...
> >>> 
> >>> - Accidentally many in R core may be busy with other bugs, teaching, .....
> >>> and just lack the extra resources to delve into these problems
> >>> at the current moment.
> >>> 
> >>> Hence, there was not even an 'Acknowledged' change to your
> >>> reports--indeed as nobody had been able to see there is a problem
> >>> existing outside of your personal computer.
> >>> 
> >>> I agree that this must seem a bit frustrating to you.
> >>> 
> >>> --
> >>> Martin
> >>> 
> >>> ______________________________________________
> >>> R-devel at r-project.org mailing list
> >>> https://stat.ethz.ch/mailman/listinfo/r-devel
> >> 
> >> -- 
> >> Peter Dalgaard, Professor,
> >> Center for Statistics, Copenhagen Business School
> >> Solbjerg Plads 3, 2000 Frederiksberg, Denmark
> >> Phone: (+45)38153501
> >> Office: A 4.23
> >> Email: pd.mes at cbs.dk  Priv: PDalgd at gmail.com
> >> 
> >> 
> >> 
> >> 
> >> 
> >> 
> >> 
> >> 
> >> 
> 
> -- 
> Peter Dalgaard, Professor,
> Center for Statistics, Copenhagen Business School
> Solbjerg Plads 3, 2000 Frederiksberg, Denmark
> Phone: (+45)38153501
> Office: A 4.23
> Email: pd.mes at cbs.dk  Priv: PDalgd at gmail.com
> 

On Fri, May 13, 2016 at 10:49:26AM +0200, Martin Maechler wrote:
> >>>>>   <frederik at ofb.net>
> >>>>>     on Thu, 12 May 2016 15:23:04 -0700 writes:
> 
>     > Hi Peter, Martin, and others,
>     > Thanks for your replies.
> 
>     > - The bugs apply to all systems that use GNU Readline, not just Linux
>     > or Arch Linux.
> 
> yes... but
> 
>     > - Readline version 6.3 changed the signal handling so that SIGWINCH is
>     > no longer handled automatically by the library. This means it's not
>     > currently possible for people using R on e.g. Linux to resize the
>     > terminal, or at least when they do so they have to make sure that
>     > all their commands fit in one line and don't wrap.
> 
>     > - There is also a long-standing bug in Readline where the callback
>     > interface didn't properly clear the line on SIGINT (^C). This means
>     > that "exiting" reverse-incremental-search with ^C would give an
>     > apparently empty prompt which still had some pending input, so if
>     > you hit ^C-Return then an unintended command would get executed.
> 
>     > If they're not "bothering all that many people", then perhaps it's
>     > because everyone uses Windows or Mac OS X or RStudio 
> 
> or  ESS [ := Emacs Speaks Statistics]  https://ess.r-project.org/ ),
> really the first cross platform UI, and the most used one by R 
> "gurus" for a long time...
> 
> or StatET (an Eclipse based GUI, also cross platform)
> 
> or ... {quite a few more}.
> 
> I'm pretty sure (but may be wrong) that 99% of useRs do not work
> much with R in a readline-enabled console, but rather via
> another interface.
> Maybe only 95% if you restrict yourself to non-Mac, non-Windows
> (i.e. typically Linux) users. 
> 
>     > For me these are pretty significant bugs. 
> 
> I agree they should be fixed.. only just because regular bash
> users may like the readline-enabled R in a terminal, and because
> readline is nice in itself, and it'd be a pity if our using it
> started to lag. ... or has started to lag, as you found..
> 
> 
>     > The second one causes unintended code to be
>     > executed. Random code could delete files, for example, or worse. The
>     > first one bites me every time I want to change the size of a window,
>     > which is pretty often.
> 
>     > I tried to get Readline maintainer Chet Ramey to fix these on the
>     > Readline side, but he disagreed with my proposal:
> 
>     > https://lists.gnu.org/archive/html/bug-readline/2016-04/threads.html
> 
>     > I'm glad that my message here at least was seen and I hope that
>     > someone who uses the R command line on Linux will have time to verify
>     > that the patches work correctly. They are basically Chet-approved
>     > workarounds for bugs/changes in Readline, not very complicated.
> 
>     > Do either of you know a Linux R person you could ping to get these
>     > patches checked out? I'm not overly frustrated, and I'm not in a major
>     > hurry, but from what we've observed it seems like waiting for someone
>     > concerned to come along and finally read Bugzilla or the R-Devel
>     > archives is not going to result in a very dense Poisson process...
> 
> Well, many of us from R core use Linux regularly or at least occasionally and
> hence can take time to confirm the bug ... and if the patch
> seems to fix it.
> 
> However, most of experienced R users, not just R core,
> "believes" in reproducibility and hence we want to work with *.R
> scripts (or *.Rmd etc nowadays):
> 
> We had a saying in the ESS manuals for 20 years or so:
> 
>    "The source code is real."
> 
> which had later been extended to
> 
>     "The source code is real.
>      The objects are realizations of the source code."
> 
> As a consequence, we do not "work" in the R console; we may tinker
> a bit for experiments, but we really work "in" the R source files.
> 
> For that reason, if apply your patches and quickly check that
> the previous bug seems gone, I would not notice if the patch had
> introduced new bugs ... just because I almost never work in
> "readline-R"  but always (99.9%) work in Linux.
> 
> Martin
> 
> 
>     > Thanks,
>     > Frederick Eaton
> 
>     > On Thu, May 12, 2016 at 03:42:59PM +0200, peter dalgaard wrote:
>     >> 
>     >> > On 12 May 2016, at 10:03 , Martin Maechler <maechler at stat.math.ethz.ch> wrote:
>     >> > 
>     >> >>>>>>  <frederik at ofb.net>
>     >> >>>>>>    on Wed, 11 May 2016 23:00:20 -0700 writes:
>     >> > 
>     >> >> Dear R Developers,
>     >> >> I wrote to this list a week ago with some patches that fix bugs in R's
>     >> >> GNU Readline interface, but I haven't had a reply. I'm not in a hurry
>     >> >> but I'd like to make sure that my message is getting read by the right
>     >> >> people. Should I be sending my patches somewhere else?
>     >> > 
>     >> > Thank you Frederick for your reports and patches.
>     >> > You did send them to the correct place, https://bugs.r-project.org/
>     >> > 
>     >> > Sometimes (as here) a combination of circumstances do lead to
>     >> > nobody picking them up quickly.
>     >> > In this case,
>     >> > 
>     >> > - probably none of R-core use or even have easy access to Arch Linux
>     >> >  so we cannot easily veryify that there is a bug at all
>     >> >  nor -consequently- veryify that your patch does fix the bug.
>     >> 
>     >> Actually, the bugs look like they should apply fairly generally, just maybe not bothering all that many people. But there could be portability issues with the fixes, so I suspect some of us were waiting for "a readline expert" to check them out.
>     >> 
>     >> -pd
>     >> 
>     >> BTW: Anyone with a fix for the stuck-at-eol issue? (aaa<right>bbb<left>ccc) 
>     >> 
>     >> > 
>     >> > - no other user has confirmed the bug on his/her platform, so
>     >> >  there did not seem a huge demand...
>     >> > 
>     >> > - Accidentally many in R core may be busy with other bugs, teaching, .....
>     >> >  and just lack the extra resources to delve into these problems
>     >> >  at the current moment.
>     >> > 
>     >> > Hence, there was not even an 'Acknowledged' change to your
>     >> > reports--indeed as nobody had been able to see there is a problem
>     >> > existing outside of your personal computer.
>     >> > 
>     >> > I agree that this must seem a bit frustrating to you.
>     >> > 
>     >> > --
>     >> > Martin
>     >> > 
>     >> > ______________________________________________
>     >> > R-devel at r-project.org mailing list
>     >> > https://stat.ethz.ch/mailman/listinfo/r-devel
>     >> 
>     >> -- 
>     >> Peter Dalgaard, Professor,
>     >> Center for Statistics, Copenhagen Business School
>     >> Solbjerg Plads 3, 2000 Frederiksberg, Denmark
>     >> Phone: (+45)38153501
>     >> Office: A 4.23
>     >> Email: pd.mes at cbs.dk  Priv: PDalgd at gmail.com
>     >> 
>     >> 
>     >> 
>     >> 
>     >> 
>     >> 
>     >> 
>     >> 
>     >> 
>


From jeroen.ooms at stat.ucla.edu  Tue May 17 09:01:02 2016
From: jeroen.ooms at stat.ucla.edu (Jeroen Ooms)
Date: Tue, 17 May 2016 09:01:02 +0200
Subject: [Rd] [R] R-3.3.0 Base: Windows compilation fails while building
	'base' package
In-Reply-To: <CAErxogEB9ZKcz5j4Wgr8f+3+OxDg+X+U1TiimsF5YECrc1k1FA@mail.gmail.com>
References: <CAErxogEB9ZKcz5j4Wgr8f+3+OxDg+X+U1TiimsF5YECrc1k1FA@mail.gmail.com>
Message-ID: <CABFfbXsN2EUT9f0K-PvTnSQi94MQb3XEYnxqdffDqu4+c+VAHQ@mail.gmail.com>

On Tue, May 17, 2016 at 5:32 AM, Venkat Ramakrishnan
<venkat.architect at gmail.com> wrote:
> I am running the make from my D:\ partition, and I have created a \TMP
> directory
> under both C:\ and D:\.  I have also modified my environment variables TEMP
> and TMP both point to C:\TMP.

I think you actually need to set the 'TMPDIR' variable.


From maechler at stat.math.ethz.ch  Tue May 17 10:57:28 2016
From: maechler at stat.math.ethz.ch (Martin Maechler)
Date: Tue, 17 May 2016 10:57:28 +0200
Subject: [Rd] please apply my patches
In-Reply-To: <20160517014050.GA10985@ofb.net>
References: <22325.38166.483959.66610@stat.math.ethz.ch>
	<60FE8C75-28AD-4148-BE6A-7A880C4BBC23@gmail.com>
	<57358A2E.7030305@umu.se> <20160517014050.GA10985@ofb.net>
Message-ID: <22330.56568.202240.581659@stat.math.ethz.ch>

>>>>>   <frederik at ofb.net>
>>>>>     on Mon, 16 May 2016 18:40:50 -0700 writes:

    > Dear R Devel, Sorry for sending so many emails, but I
    > haven't heard that anyone is working on the patches I
    > created.

    > A few weeks ago I wanted to do something to contribute to
    > R because I use it a lot. I picked the most annoying bugs
    > I could find, and created two of the simplest patches I
    > could create,

    > but all I've had in response from the R core
    > team (aside from briefly banning my Bugzilla account) is a
    > lengthy explanation for why power users don't use the
    > basic command line interface.

Well, I feel slightly irritated by this picture of what
happened, as the very first sentence I wrote started with
"Thank you" ... and I did mean it.
Also, I apologize if you+ only got critique from what I wrote.

    > I'm grateful to Peter for the list of tools like ESS that
    > people use to interface with R; but if I wanted to submit
    > a bug to ESS then I would have sent it to a different mailing list.

Sure (it was me, not Peter, who mentioned ESS etc).
If you reread what I said (or tried to say): I gave you a reason
why I (personally) was waiting/reluctant applying your patches:
I would not notice if I introduced a new bug, etc... and I also told
you that I thought that (almost) everybody else from the core team would
be in the same situation: all just reasons, Peter and I had hoped somebody
else would step up and confirm and apply the bug fixes.

Be assured that we will deal with this before the next release of R,
(R 3.3.1, which has not yet been scheduled). I'm sorry if this
was not clear from what we said, we did imply it.

We also have other obligations, not the least teaching,
students, and we have a life off screen-&-keyboard, so do have
tad more patience, please.

Best regards,
Martin


From chris at smowton.net  Tue May 17 09:11:25 2016
From: chris at smowton.net (Chris Smowton)
Date: Tue, 17 May 2016 08:11:25 +0100
Subject: [Rd] please apply my patches
In-Reply-To: <CAKRLPzYn3biHe2m9S9Pat1TiX1jmKzQ=Qmq4W4JHdoDB=kPtiA@mail.gmail.com>
References: <22325.38166.483959.66610@stat.math.ethz.ch>
	<60FE8C75-28AD-4148-BE6A-7A880C4BBC23@gmail.com>
	<57358A2E.7030305@umu.se> <20160517014050.GA10985@ofb.net>
	<CAKRLPzYVmt62UUxBBooNSxUQuOzf0G7uqm-W8gFRn7YFS6P=_g@mail.gmail.com>
	<CAKRLPzYn3biHe2m9S9Pat1TiX1jmKzQ=Qmq4W4JHdoDB=kPtiA@mail.gmail.com>
Message-ID: <CAKRLPzadicZTOTfjjENPOQ06A+Wm9qeWacUV6qZDtUfEPPw-Qw@mail.gmail.com>

Agreed regarding read line-- absent mindedly using C-c to exit a search and
then accidentally running garbage because the prompt looks blank but isn't
continues to be a problem.
On 17 May 2016 2:41 a.m., <frederik at ofb.net> wrote:

Dear R Devel,

Sorry for sending so many emails, but I haven't heard that anyone is
working on the patches I created.

A few weeks ago I wanted to do something to contribute to R because I
use it a lot. I picked the most annoying bugs I could find, and
created two of the simplest patches I could create, but all I've had
in response from the R core team (aside from briefly banning my
Bugzilla account) is a lengthy explanation for why power users don't
use the basic command line interface. I'm grateful to Peter for the
list of tools like ESS that people use to interface with R; but if I
wanted to submit a bug to ESS then I would have sent it to a different
mailing list.

Thank you G?ran for confirming that you experience these bugs. I've
Cc'ed two other users, Chris Smowton and "Terran", who commented on
the Bugzilla bugs. Do you guys want to weigh in on the relative
importance of getting these fixed?

Nobody asked me to describe the patches in more detail, but I'll give
a brief summary in case it helps: One of my patches adds a signal
handler for SIGWINCH (which GNU Readline stopped handling a few years
ago without telling anyone). There is no other use of SIGWINCH in the
R code so I don't think this will cause problems. This makes
terminal-resizing possible. The other one adds some additional cleanup
to popReadline. Now, popReadline is called every time a command is
entered at the prompt, or when R catches SIGINT, to reset the terminal
settings and take control back from Readline. My second patch fixes
incremental-search by amending popReadline to clear the line state as
well. I invite creative suggestions as to how these might lead to
unforeseen trouble for Unix or non-Unix users - what I might have
missed in my testing, etc.

Otherwise, I would appreciate some kind of real input as to what I
should do or who I should contact to get this rolling. We're all short
on time; if we can get this taken care of quickly and efficiently then
we'll have more time left for other stuff.

Thank you,

Frederick


On Fri, May 13, 2016 at 10:02:54AM +0200, G?ran Brostr?m wrote:
> Dear Frederik,
>
> I can confirm that especially the first issue on your list (resizing the
> terminal) has "bothered me" badly for some time now: I'm on Ubuntu
> (usually).
>
> G?ran Brostr?m
>
>
> On 2016-05-13 00:23, frederik at ofb.net wrote:
> > Hi Peter, Martin, and others,
> >
> > Thanks for your replies.
> >
> > - The bugs apply to all systems that use GNU Readline, not just Linux
> >    or Arch Linux.
> >
> > - Readline version 6.3 changed the signal handling so that SIGWINCH is
> >    no longer handled automatically by the library. This means it's not
> >    currently possible for people using R on e.g. Linux to resize the
> >    terminal, or at least when they do so they have to make sure that
> >    all their commands fit in one line and don't wrap.
> >
> > - There is also a long-standing bug in Readline where the callback
> >    interface didn't properly clear the line on SIGINT (^C). This means
> >    that "exiting" reverse-incremental-search with ^C would give an
> >    apparently empty prompt which still had some pending input, so if
> >    you hit ^C-Return then an unintended command would get executed.
> >
> > If they're not "bothering all that many people", then perhaps it's
> > because everyone uses Windows or Mac OS X or RStudio. For me these are
> > pretty significant bugs. The second one causes unintended code to be
> > executed. Random code could delete files, for example, or worse. The
> > first one bites me every time I want to change the size of a window,
> > which is pretty often.
> >
> > I tried to get Readline maintainer Chet Ramey to fix these on the
> > Readline side, but he disagreed with my proposal:
> >
> > https://lists.gnu.org/archive/html/bug-readline/2016-04/threads.html
> >
> > I'm glad that my message here at least was seen and I hope that
> > someone who uses the R command line on Linux will have time to verify
> > that the patches work correctly. They are basically Chet-approved
> > workarounds for bugs/changes in Readline, not very complicated.
> >
> > Do either of you know a Linux R person you could ping to get these
> > patches checked out? I'm not overly frustrated, and I'm not in a major
> > hurry, but from what we've observed it seems like waiting for someone
> > concerned to come along and finally read Bugzilla or the R-Devel
> > archives is not going to result in a very dense Poisson process...
> >
> > Thanks,
> >
> > Frederick Eaton
> >
> > On Thu, May 12, 2016 at 03:42:59PM +0200, peter dalgaard wrote:
> > >
> > > > On 12 May 2016, at 10:03 , Martin Maechler <
maechler at stat.math.ethz.ch> wrote:
> > > >
> > > > > > > > >   <frederik at ofb.net>
> > > > > > > > >     on Wed, 11 May 2016 23:00:20 -0700 writes:
> > > >
> > > > > Dear R Developers,
> > > > > I wrote to this list a week ago with some patches that fix bugs
in R's
> > > > > GNU Readline interface, but I haven't had a reply. I'm not in a
hurry
> > > > > but I'd like to make sure that my message is getting read by the
right
> > > > > people. Should I be sending my patches somewhere else?
> > > >
> > > > Thank you Frederick for your reports and patches.
> > > > You did send them to the correct place, https://bugs.r-project.org/
> > > >
> > > > Sometimes (as here) a combination of circumstances do lead to
> > > > nobody picking them up quickly.
> > > > In this case,
> > > >
> > > > - probably none of R-core use or even have easy access to Arch Linux
> > > >   so we cannot easily veryify that there is a bug at all
> > > >   nor -consequently- veryify that your patch does fix the bug.
> > >
> > > Actually, the bugs look like they should apply fairly generally, just
maybe not bothering all that many people. But there could be portability
issues with the fixes, so I suspect some of us were waiting for "a readline
expert" to check them out.
> > >
> > > -pd
> > >
> > > BTW: Anyone with a fix for the stuck-at-eol issue?
(aaa<right>bbb<left>ccc)
> > >
> > > >
> > > > - no other user has confirmed the bug on his/her platform, so
> > > >   there did not seem a huge demand...
> > > >
> > > > - Accidentally many in R core may be busy with other bugs,
teaching, .....
> > > >   and just lack the extra resources to delve into these problems
> > > >   at the current moment.
> > > >
> > > > Hence, there was not even an 'Acknowledged' change to your
> > > > reports--indeed as nobody had been able to see there is a problem
> > > > existing outside of your personal computer.
> > > >
> > > > I agree that this must seem a bit frustrating to you.
> > > >
> > > > --
> > > > Martin
> > > >
> > > > ______________________________________________
> > > > R-devel at r-project.org mailing list
> > > > https://stat.ethz.ch/mailman/listinfo/r-devel
> > >
> > > --
> > > Peter Dalgaard, Professor,
> > > Center for Statistics, Copenhagen Business School
> > > Solbjerg Plads 3, 2000 Frederiksberg, Denmark
> > > Phone: (+45)38153501
> > > Office: A 4.23
> > > Email: pd.mes at cbs.dk  Priv: PDalgd at gmail.com
> > >
> > >
> > >
> > >
> > >
> > >
> > >
> > >
> > >
> >
> > ______________________________________________
> > R-devel at r-project.org mailing list
> > https://stat.ethz.ch/mailman/listinfo/r-devel
> >
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>

On Fri, May 13, 2016 at 10:22:13AM +0200, peter dalgaard wrote:
> Actually, I think both Martin and I use reaadline R versions on a daily
basis (Linux and OSX Terminal respectively). For my case, it is just that I
rarely use the backwards search feature and I'm old enough that terminal
widths other than 80 look odd to me so I don't resize much either. Of
course that doesn't mean that the bugs aren't annoying to others!
>
> -pd
>
>
>
> On 13 May 2016, at 00:23 , frederik at ofb.net wrote:
>
> > Hi Peter, Martin, and others,
> >
> > Thanks for your replies.
> >
> > - The bugs apply to all systems that use GNU Readline, not just Linux
> >  or Arch Linux.
> >
> > - Readline version 6.3 changed the signal handling so that SIGWINCH is
> >  no longer handled automatically by the library. This means it's not
> >  currently possible for people using R on e.g. Linux to resize the
> >  terminal, or at least when they do so they have to make sure that
> >  all their commands fit in one line and don't wrap.
> >
> > - There is also a long-standing bug in Readline where the callback
> >  interface didn't properly clear the line on SIGINT (^C). This means
> >  that "exiting" reverse-incremental-search with ^C would give an
> >  apparently empty prompt which still had some pending input, so if
> >  you hit ^C-Return then an unintended command would get executed.
> >
> > If they're not "bothering all that many people", then perhaps it's
> > because everyone uses Windows or Mac OS X or RStudio. For me these are
> > pretty significant bugs. The second one causes unintended code to be
> > executed. Random code could delete files, for example, or worse. The
> > first one bites me every time I want to change the size of a window,
> > which is pretty often.
> >
> > I tried to get Readline maintainer Chet Ramey to fix these on the
> > Readline side, but he disagreed with my proposal:
> >
> > https://lists.gnu.org/archive/html/bug-readline/2016-04/threads.html
> >
> > I'm glad that my message here at least was seen and I hope that
> > someone who uses the R command line on Linux will have time to verify
> > that the patches work correctly. They are basically Chet-approved
> > workarounds for bugs/changes in Readline, not very complicated.
> >
> > Do either of you know a Linux R person you could ping to get these
> > patches checked out? I'm not overly frustrated, and I'm not in a major
> > hurry, but from what we've observed it seems like waiting for someone
> > concerned to come along and finally read Bugzilla or the R-Devel
> > archives is not going to result in a very dense Poisson process...
> >
> > Thanks,
> >
> > Frederick Eaton
> >
> > On Thu, May 12, 2016 at 03:42:59PM +0200, peter dalgaard wrote:
> >>
> >>> On 12 May 2016, at 10:03 , Martin Maechler <maechler at stat.math.ethz.ch>
wrote:
> >>>
> >>>>>>>> <frederik at ofb.net>
> >>>>>>>>   on Wed, 11 May 2016 23:00:20 -0700 writes:
> >>>
> >>>> Dear R Developers,
> >>>> I wrote to this list a week ago with some patches that fix bugs in
R's
> >>>> GNU Readline interface, but I haven't had a reply. I'm not in a hurry
> >>>> but I'd like to make sure that my message is getting read by the
right
> >>>> people. Should I be sending my patches somewhere else?
> >>>
> >>> Thank you Frederick for your reports and patches.
> >>> You did send them to the correct place, https://bugs.r-project.org/
> >>>
> >>> Sometimes (as here) a combination of circumstances do lead to
> >>> nobody picking them up quickly.
> >>> In this case,
> >>>
> >>> - probably none of R-core use or even have easy access to Arch Linux
> >>> so we cannot easily veryify that there is a bug at all
> >>> nor -consequently- veryify that your patch does fix the bug.
> >>
> >> Actually, the bugs look like they should apply fairly generally, just
maybe not bothering all that many people. But there could be portability
issues with the fixes, so I suspect some of us were waiting for "a readline
expert" to check them out.
> >>
> >> -pd
> >>
> >> BTW: Anyone with a fix for the stuck-at-eol issue?
(aaa<right>bbb<left>ccc)
> >>
> >>>
> >>> - no other user has confirmed the bug on his/her platform, so
> >>> there did not seem a huge demand...
> >>>
> >>> - Accidentally many in R core may be busy with other bugs, teaching,
.....
> >>> and just lack the extra resources to delve into these problems
> >>> at the current moment.
> >>>
> >>> Hence, there was not even an 'Acknowledged' change to your
> >>> reports--indeed as nobody had been able to see there is a problem
> >>> existing outside of your personal computer.
> >>>
> >>> I agree that this must seem a bit frustrating to you.
> >>>
> >>> --
> >>> Martin
> >>>
> >>> ______________________________________________
> >>> R-devel at r-project.org mailing list
> >>> https://stat.ethz.ch/mailman/listinfo/r-devel
> >>
> >> --
> >> Peter Dalgaard, Professor,
> >> Center for Statistics, Copenhagen Business School
> >> Solbjerg Plads 3, 2000 Frederiksberg, Denmark
> >> Phone: (+45)38153501
> >> Office: A 4.23
> >> Email: pd.mes at cbs.dk  Priv: PDalgd at gmail.com
> >>
> >>
> >>
> >>
> >>
> >>
> >>
> >>
> >>
>
> --
> Peter Dalgaard, Professor,
> Center for Statistics, Copenhagen Business School
> Solbjerg Plads 3, 2000 Frederiksberg, Denmark
> Phone: (+45)38153501
> Office: A 4.23
> Email: pd.mes at cbs.dk  Priv: PDalgd at gmail.com
>

On Fri, May 13, 2016 at 10:49:26AM +0200, Martin Maechler wrote:
> >>>>>   <frederik at ofb.net>
> >>>>>     on Thu, 12 May 2016 15:23:04 -0700 writes:
>
>     > Hi Peter, Martin, and others,
>     > Thanks for your replies.
>
>     > - The bugs apply to all systems that use GNU Readline, not just
Linux
>     > or Arch Linux.
>
> yes... but
>
>     > - Readline version 6.3 changed the signal handling so that SIGWINCH
is
>     > no longer handled automatically by the library. This means it's not
>     > currently possible for people using R on e.g. Linux to resize the
>     > terminal, or at least when they do so they have to make sure that
>     > all their commands fit in one line and don't wrap.
>
>     > - There is also a long-standing bug in Readline where the callback
>     > interface didn't properly clear the line on SIGINT (^C). This means
>     > that "exiting" reverse-incremental-search with ^C would give an
>     > apparently empty prompt which still had some pending input, so if
>     > you hit ^C-Return then an unintended command would get executed.
>
>     > If they're not "bothering all that many people", then perhaps it's
>     > because everyone uses Windows or Mac OS X or RStudio
>
> or  ESS [ := Emacs Speaks Statistics]  https://ess.r-project.org/ ),
> really the first cross platform UI, and the most used one by R
> "gurus" for a long time...
>
> or StatET (an Eclipse based GUI, also cross platform)
>
> or ... {quite a few more}.
>
> I'm pretty sure (but may be wrong) that 99% of useRs do not work
> much with R in a readline-enabled console, but rather via
> another interface.
> Maybe only 95% if you restrict yourself to non-Mac, non-Windows
> (i.e. typically Linux) users.
>
>     > For me these are pretty significant bugs.
>
> I agree they should be fixed.. only just because regular bash
> users may like the readline-enabled R in a terminal, and because
> readline is nice in itself, and it'd be a pity if our using it
> started to lag. ... or has started to lag, as you found..
>
>
>     > The second one causes unintended code to be
>     > executed. Random code could delete files, for example, or worse. The
>     > first one bites me every time I want to change the size of a window,
>     > which is pretty often.
>
>     > I tried to get Readline maintainer Chet Ramey to fix these on the
>     > Readline side, but he disagreed with my proposal:
>
>     > https://lists.gnu.org/archive/html/bug-readline/2016-04/threads.html
>
>     > I'm glad that my message here at least was seen and I hope that
>     > someone who uses the R command line on Linux will have time to
verify
>     > that the patches work correctly. They are basically Chet-approved
>     > workarounds for bugs/changes in Readline, not very complicated.
>
>     > Do either of you know a Linux R person you could ping to get these
>     > patches checked out? I'm not overly frustrated, and I'm not in a
major
>     > hurry, but from what we've observed it seems like waiting for
someone
>     > concerned to come along and finally read Bugzilla or the R-Devel
>     > archives is not going to result in a very dense Poisson process...
>
> Well, many of us from R core use Linux regularly or at least occasionally
and
> hence can take time to confirm the bug ... and if the patch
> seems to fix it.
>
> However, most of experienced R users, not just R core,
> "believes" in reproducibility and hence we want to work with *.R
> scripts (or *.Rmd etc nowadays):
>
> We had a saying in the ESS manuals for 20 years or so:
>
>    "The source code is real."
>
> which had later been extended to
>
>     "The source code is real.
>      The objects are realizations of the source code."
>
> As a consequence, we do not "work" in the R console; we may tinker
> a bit for experiments, but we really work "in" the R source files.
>
> For that reason, if apply your patches and quickly check that
> the previous bug seems gone, I would not notice if the patch had
> introduced new bugs ... just because I almost never work in
> "readline-R"  but always (99.9%) work in Linux.
>
> Martin
>
>
>     > Thanks,
>     > Frederick Eaton
>
>     > On Thu, May 12, 2016 at 03:42:59PM +0200, peter dalgaard wrote:
>     >>
>     >> > On 12 May 2016, at 10:03 , Martin Maechler <
maechler at stat.math.ethz.ch> wrote:
>     >> >
>     >> >>>>>>  <frederik at ofb.net>
>     >> >>>>>>    on Wed, 11 May 2016 23:00:20 -0700 writes:
>     >> >
>     >> >> Dear R Developers,
>     >> >> I wrote to this list a week ago with some patches that fix bugs
in R's
>     >> >> GNU Readline interface, but I haven't had a reply. I'm not in a
hurry
>     >> >> but I'd like to make sure that my message is getting read by
the right
>     >> >> people. Should I be sending my patches somewhere else?
>     >> >
>     >> > Thank you Frederick for your reports and patches.
>     >> > You did send them to the correct place,
https://bugs.r-project.org/
>     >> >
>     >> > Sometimes (as here) a combination of circumstances do lead to
>     >> > nobody picking them up quickly.
>     >> > In this case,
>     >> >
>     >> > - probably none of R-core use or even have easy access to Arch
Linux
>     >> >  so we cannot easily veryify that there is a bug at all
>     >> >  nor -consequently- veryify that your patch does fix the bug.
>     >>
>     >> Actually, the bugs look like they should apply fairly generally,
just maybe not bothering all that many people. But there could be
portability issues with the fixes, so I suspect some of us were waiting for
"a readline expert" to check them out.
>     >>
>     >> -pd
>     >>
>     >> BTW: Anyone with a fix for the stuck-at-eol issue?
(aaa<right>bbb<left>ccc)
>     >>
>     >> >
>     >> > - no other user has confirmed the bug on his/her platform, so
>     >> >  there did not seem a huge demand...
>     >> >
>     >> > - Accidentally many in R core may be busy with other bugs,
teaching, .....
>     >> >  and just lack the extra resources to delve into these problems
>     >> >  at the current moment.
>     >> >
>     >> > Hence, there was not even an 'Acknowledged' change to your
>     >> > reports--indeed as nobody had been able to see there is a problem
>     >> > existing outside of your personal computer.
>     >> >
>     >> > I agree that this must seem a bit frustrating to you.
>     >> >
>     >> > --
>     >> > Martin
>     >> >
>     >> > ______________________________________________
>     >> > R-devel at r-project.org mailing list
>     >> > https://stat.ethz.ch/mailman/listinfo/r-devel
>     >>
>     >> --
>     >> Peter Dalgaard, Professor,
>     >> Center for Statistics, Copenhagen Business School
>     >> Solbjerg Plads 3, 2000 Frederiksberg, Denmark
>     >> Phone: (+45)38153501
>     >> Office: A 4.23
>     >> Email: pd.mes at cbs.dk  Priv: PDalgd at gmail.com
>     >>
>     >>
>     >>
>     >>
>     >>
>     >>
>     >>
>     >>
>     >>
>

	[[alternative HTML version deleted]]


From venkat.architect at gmail.com  Tue May 17 05:32:09 2016
From: venkat.architect at gmail.com (Venkat Ramakrishnan)
Date: Tue, 17 May 2016 09:02:09 +0530
Subject: [Rd] R-3.3.0 Base: Windows compilation fails while building 'base'
	package
Message-ID: <CAErxogEB9ZKcz5j4Wgr8f+3+OxDg+X+U1TiimsF5YECrc1k1FA@mail.gmail.com>

Hi,

I'm trying to builda  R-3.3.0 base package on Windows 8.1, and it fails
while building 'base' package with an error about unable to create a
directory
under /tmp.

I am running the make from my D:\ partition, and I have created a \TMP
directory
under both C:\ and D:\.  I have also modified my environment variables TEMP
and TMP both point to C:\TMP.

Error messages below:

gfortran -m64 -O3 -mtune=core2  -c cmplx.f -o cmplx.o
gcc -std=gnu99 -m64 -I../../include -DHAVE_CONFIG_H  -O3 -Wall -pedantic
-mtune=
core2   -c init_win.c -o init_win.o
windres -F pe-x86-64   -i Rlapackrc.rc -o Rlapackrc.o
gcc -std=gnu99 -m64 -shared -s -o ../../../bin/x64/Rlapack.dll dlamch.o
dlapack.
o cmplx.o init_win.o Rlapackrc.o -L../../../bin/x64 -lR -lRblas -lgfortran
-lqua
dmath
gcc -std=gnu99 -m64 -I../../include -DHAVE_CONFIG_H  -O3 -Wall -pedantic
-mtune=
core2   -c Lapack.c -o Lapack.o
windres -F pe-x86-64   -i dllversion.rc -o dllversion.o
gcc -std=gnu99 -m64 -shared -s  -o lapack.dll lapack.def Lapack.o
dllversion.o -
L../../../bin/x64 -lRlapack -lRblas -lR
cp lapack.dll ../../../modules/x64/lapack.dll
building package 'base'
cannot create /tmp/R15756: directory nonexistent     <-------------------
mv: cannot stat '/tmp/R15756': No such file or directory <---------------
make[3]: *** [mkR1] Error 1
make[2]: *** [all] Error 2
make[1]: *** [R] Error 1
make: *** [all] Error 2

I'm not sure what else I need to do. Please help.

Thanks & Best Regards,
Venkat.

	[[alternative HTML version deleted]]


From richarddmorey at gmail.com  Tue May 17 15:43:48 2016
From: richarddmorey at gmail.com (Richard Morey)
Date: Tue, 17 May 2016 14:43:48 +0100
Subject: [Rd] discussion of change in R 3.3.0 to [<-
Message-ID: <CAP4Yp+m70-OoW+9y5e_OJR9D4qBzS-T9p4JMgP3twaL0wjPR_Q@mail.gmail.com>

In the NEWS for R 3.3.0 is this change:


    * [<- with an S4 value into a list currently embeds the S4 object
      into its own list such that the end result is roughly equivalent
      to using [[<-.  That behavior is deprecated.  In the future, the
      S4 value will be coerced to a list with as.list().

I cannot find a discussion of this change anywhere. Can someone point
me to a discussion of the reasons and/or implications?

Best,
Richard


From lawrence.michael at gene.com  Tue May 17 16:09:46 2016
From: lawrence.michael at gene.com (Michael Lawrence)
Date: Tue, 17 May 2016 07:09:46 -0700
Subject: [Rd] discussion of change in R 3.3.0 to [<-
In-Reply-To: <CAP4Yp+m70-OoW+9y5e_OJR9D4qBzS-T9p4JMgP3twaL0wjPR_Q@mail.gmail.com>
References: <CAP4Yp+m70-OoW+9y5e_OJR9D4qBzS-T9p4JMgP3twaL0wjPR_Q@mail.gmail.com>
Message-ID: <CAOQ5Nyenu7QJnsiALd+jR_+f5AKRSE74o6-Ym3NKRd+ZJZ6sAQ@mail.gmail.com>

I was looking into making sub-assignment into atomic vectors work when the
value is an S4 object. The plan was to simply dispatch to an as.vector
method and proceed as normal.

Currently, if 'x' is a list, then any S4 'value' is first wrapped in a list.
One can rationalize this by thinking of the S4 object as a scalar and that
the corresponding vector type is a list. But other places in the base
package, like mapply(), treat S4 arguments as implicitly vector-like (to
work they need length and [[ methods).

I'm not sure it's justified to consider S4 objects as scalar, especially as
we increasingly use S4 to abstract access to external data sources and
other specialized implementations, like RLEs. One could argue that, in the
context of iteration and sub-assignment, there is an implicit declaration
that the S4 object is vector-like. If that holds, then the current behavior
with lists should be deprecated.

Another idea is to introduce a generic "isVectorLike()" that would default
to false but classes could have methods returning true. That is more
complicated though.

On Tue, May 17, 2016 at 6:43 AM, Richard Morey <richarddmorey at gmail.com>
wrote:

> In the NEWS for R 3.3.0 is this change:
>
>
>     * [<- with an S4 value into a list currently embeds the S4 object
>       into its own list such that the end result is roughly equivalent
>       to using [[<-.  That behavior is deprecated.  In the future, the
>       S4 value will be coerced to a list with as.list().
>
> I cannot find a discussion of this change anywhere. Can someone point
> me to a discussion of the reasons and/or implications?
>
> Best,
> Richard
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>
>

	[[alternative HTML version deleted]]


From frederik at ofb.net  Tue May 17 22:10:16 2016
From: frederik at ofb.net (frederik at ofb.net)
Date: Tue, 17 May 2016 13:10:16 -0700
Subject: [Rd] please apply my patches
In-Reply-To: <22330.56568.202240.581659@stat.math.ethz.ch>
References: <22325.38166.483959.66610@stat.math.ethz.ch>
	<60FE8C75-28AD-4148-BE6A-7A880C4BBC23@gmail.com>
	<57358A2E.7030305@umu.se> <20160517014050.GA10985@ofb.net>
	<22330.56568.202240.581659@stat.math.ethz.ch>
Message-ID: <20160517201016.GA9342@ofb.net>

Thank you, Martin. Sorry if I sounded impatient.

> Sure (it was me, not Peter, who mentioned ESS etc).

Sorry, Peter!

> Be assured that we will deal with this before the next release of R

Thank you, that works for me.

Frederick

On Tue, May 17, 2016 at 10:57:28AM +0200, Martin Maechler wrote:
> >>>>>   <frederik at ofb.net>
> >>>>>     on Mon, 16 May 2016 18:40:50 -0700 writes:
> 
>     > Dear R Devel, Sorry for sending so many emails, but I
>     > haven't heard that anyone is working on the patches I
>     > created.
> 
>     > A few weeks ago I wanted to do something to contribute to
>     > R because I use it a lot. I picked the most annoying bugs
>     > I could find, and created two of the simplest patches I
>     > could create,
> 
>     > but all I've had in response from the R core
>     > team (aside from briefly banning my Bugzilla account) is a
>     > lengthy explanation for why power users don't use the
>     > basic command line interface.
> 
> Well, I feel slightly irritated by this picture of what
> happened, as the very first sentence I wrote started with
> "Thank you" ... and I did mean it.
> Also, I apologize if you+ only got critique from what I wrote.
> 
>     > I'm grateful to Peter for the list of tools like ESS that
>     > people use to interface with R; but if I wanted to submit
>     > a bug to ESS then I would have sent it to a different mailing list.
> 
> If you reread what I said (or tried to say): I gave you a reason
> why I (personally) was waiting/reluctant applying your patches:
> I would not notice if I introduced a new bug, etc... and I also told
> you that I thought that (almost) everybody else from the core team would
> be in the same situation: all just reasons, Peter and I had hoped somebody
> else would step up and confirm and apply the bug fixes.
> 
> Be assured that we will deal with this before the next release of R,
> (R 3.3.1, which has not yet been scheduled). I'm sorry if this
> was not clear from what we said, we did imply it.
> 
> We also have other obligations, not the least teaching,
> students, and we have a life off screen-&-keyboard, so do have
> tad more patience, please.
> 
> Best regards,
> Martin
>


From mikko.korpela at helsinki.fi  Wed May 18 12:05:24 2016
From: mikko.korpela at helsinki.fi (Mikko Korpela)
Date: Wed, 18 May 2016 13:05:24 +0300
Subject: [Rd] [patch] Error in reg-tests-1c.R (R-devel)
Message-ID: <573C3E64.9020803@helsinki.fi>

I get an error when running "make check" after building R-devel r70629 
on Ubuntu 14.04. Here are the relevant lines in the file 
"reg-tests-1c.Rout.fail":

   > ## m1z uses match(x, *) with length(x) == 1 and failed in R 3.3.0
   > ## PR#16909 - a consequence of the match() bug; check here too:
   > dv <- data.frame(var?1 = 1:3, var?2 = 3); dv[,"var?2"] <- 2
   Error: unexpected input in "dv <- data.frame(var<C3>"
   Execution halted

The attached patch uses escape sequences for all non-ASCII characters in 
this test and performs pretty much the same check as the original 
version, as far as I know. This fixes "make check" for me. The patched 
check fails on R 3.3.0 as it should.

Here is the output of "locale":

   LANG=en_GB
   LANGUAGE=en_GB:
   LC_CTYPE=fi_FI.UTF-8
   LC_NUMERIC="en_GB"
   LC_TIME="en_GB"
   LC_COLLATE="en_GB"
   LC_MONETARY=fi_FI.UTF-8
   LC_MESSAGES="en_GB"
   LC_PAPER="en_GB"
   LC_NAME="en_GB"
   LC_ADDRESS="en_GB"
   LC_TELEPHONE="en_GB"
   LC_MEASUREMENT="en_GB"
   LC_IDENTIFICATION="en_GB"
   LC_ALL=

-- 
Mikko Korpela
Department of Geosciences and Geography
University of Helsinki
-------------- next part --------------
A non-text attachment was scrubbed...
Name: reg-tests-1c.diff
Type: text/x-patch
Size: 739 bytes
Desc: not available
URL: <https://stat.ethz.ch/pipermail/r-devel/attachments/20160518/c44ebe50/attachment.bin>

From j.hadfield at ed.ac.uk  Wed May 18 07:28:32 2016
From: j.hadfield at ed.ac.uk (Jarrod Hadfield)
Date: Wed, 18 May 2016 06:28:32 +0100
Subject: [Rd] gcc optimization
Message-ID: <573BFD80.7080202@ed.ac.uk>

Hi,

I have noticed that the run times for MCMCglmm models (mainly written in 
C/C++) have suddenly jumped up on Linux machines (Ubuntu/Linaro 4.6.4 
and  Scientific Linux 6.6) yet they have remained stable on Windows 
where they run much faster than on Linux. I wondered whether something 
had changed with the deafult optimization flags for gcc? I am using R 3.2.3.

Cheers,

Jarrod


-- 
The University of Edinburgh is a charitable body, registered in
Scotland, with registration number SC005336.


From maechler at stat.math.ethz.ch  Wed May 18 12:50:21 2016
From: maechler at stat.math.ethz.ch (Martin Maechler)
Date: Wed, 18 May 2016 12:50:21 +0200
Subject: [Rd] [patch] Error in reg-tests-1c.R (R-devel)
In-Reply-To: <573C3E64.9020803@helsinki.fi>
References: <573C3E64.9020803@helsinki.fi>
Message-ID: <22332.18669.698735.837101@stat.math.ethz.ch>

>>>>> Mikko Korpela <mikko.korpela at helsinki.fi>
>>>>>     on Wed, 18 May 2016 13:05:24 +0300 writes:

    > I get an error when running "make check" after building
    > R-devel r70629 on Ubuntu 14.04. 
    > Here are the relevant
    > lines in the file "reg-tests-1c.Rout.fail":

    >    > ## m1z uses match(x, *) with length(x) == 1 and failed in R 3.3.0
    >    > ## PR#16909 - a consequence of the match() bug; check here too:
    >    > dv <- data.frame(var?1 = 1:3, var?2 = 3); dv[,"var?2"] <- 2
    >    Error: unexpected input in "dv <- data.frame(var<C3>"
    >    Execution halted

    > The attached patch uses escape sequences for all non-ASCII characters in 
    > this test and performs pretty much the same check as the original 
    > version, as far as I know. This fixes "make check" for me. The patched 
    > check fails on R 3.3.0 as it should.

Thank you, Mikko!

This is ..hmm.. "interesting".  We have a few other non-ASCII characters
in a few of the tests/*.R  files  and they don't seem to harm
your checks; even  reg-tests-1c.R  contains some.

Also, the "Installation and Administration" R Manual mentions
that some of the tests only run flawlessly if you are not using
"unusual" locales.  So I am a bit puzzled that exactly this
(new) test fails in your locale, but the others did not.

However, as I said, thank you indeed for diagnosing the problem and
providing a patch working around it (and still checking the
intended problem !!).
I'm applying the patch now ... so you'd continue to be one of
our valuable pre-alpha/beta testers.

With best regards,
Martin


    > Here is the output of "locale":

    >    LANG=en_GB
    >    LANGUAGE=en_GB:
    >    LC_CTYPE=fi_FI.UTF-8
    >    LC_NUMERIC="en_GB"
    >    LC_TIME="en_GB"
    >    LC_COLLATE="en_GB"
    >    LC_MONETARY=fi_FI.UTF-8
    >    LC_MESSAGES="en_GB"
    >    LC_PAPER="en_GB"
    >    LC_NAME="en_GB"
    >    LC_ADDRESS="en_GB"
    >    LC_TELEPHONE="en_GB"
    >    LC_MEASUREMENT="en_GB"
    >    LC_IDENTIFICATION="en_GB"
    >    LC_ALL=

    > -- 
    > Mikko Korpela
    > Department of Geosciences and Geography
    > University of Helsinki


From Berwin.Turlach at gmail.com  Wed May 18 13:10:11 2016
From: Berwin.Turlach at gmail.com (Berwin A Turlach)
Date: Wed, 18 May 2016 19:10:11 +0800
Subject: [Rd] [patch] Error in reg-tests-1c.R (R-devel)
In-Reply-To: <22332.18669.698735.837101@stat.math.ethz.ch>
References: <573C3E64.9020803@helsinki.fi>
	<22332.18669.698735.837101@stat.math.ethz.ch>
Message-ID: <20160518191011.392120ce@bossiaea>

G'day Martin,

On Wed, 18 May 2016 12:50:21 +0200
Martin Maechler <maechler at stat.math.ethz.ch> wrote:

> >>>>> Mikko Korpela <mikko.korpela at helsinki.fi>
> >>>>>     on Wed, 18 May 2016 13:05:24 +0300 writes:
> 
>     > I get an error when running "make check" after building
>     > R-devel r70629 on Ubuntu 14.04. 
>     > Here are the relevant
>     > lines in the file "reg-tests-1c.Rout.fail":
[...]
> This is ..hmm.. "interesting".  We have a few other non-ASCII
> characters in a few of the tests/*.R  files  and they don't seem to
> harm your checks; even  reg-tests-1c.R  contains some.
> 
> Also, the "Installation and Administration" R Manual mentions
> that some of the tests only run flawlessly if you are not using
> "unusual" locales.  So I am a bit puzzled that exactly this
> (new) test fails in your locale, but the others did not.
[...]

Well, my nightly script had also failed to complete due to the same
problem.  But I usually wait a day or two before reporting such a problem, 
in the hope that the problem sorts itself out. :)

But to confirm this issue:
	
* My (bash) script sets:
	export LANG=en_AU.UTF-8
* The crontab entry that runs it is:
	44 5 * * * cd /opt/src ; /usr/bin/xvfb-run ./R-aop-Doit
* The relevant part of reg-tests-1c.Rout.fail says:

	> ## m1z uses match(x, *) with length(x) == 1 and failed in R 3.3.0 
	> ## PR#16909 - a consequence of the match() bug; check here too:
	> dv <- data.frame(var?1 = 1:3, var?2 = 3); dv[,"var?2"] <- 2
	Error: unexpected input in "dv <- data.frame(var?"
	Execution halted

Cheers,

	Berwin


From mikko.korpela at helsinki.fi  Wed May 18 13:18:20 2016
From: mikko.korpela at helsinki.fi (Mikko Korpela)
Date: Wed, 18 May 2016 14:18:20 +0300
Subject: [Rd] [patch] Error in reg-tests-1c.R (R-devel)
In-Reply-To: <22332.18669.698735.837101@stat.math.ethz.ch>
References: <573C3E64.9020803@helsinki.fi>
	<22332.18669.698735.837101@stat.math.ethz.ch>
Message-ID: <573C4F7C.5060109@helsinki.fi>

On 18/05/16 13:50, Martin Maechler wrote:
>>>>>> Mikko Korpela <mikko.korpela at helsinki.fi>
>>>>>>      on Wed, 18 May 2016 13:05:24 +0300 writes:
>
>      > I get an error when running "make check" after building
>      > R-devel r70629 on Ubuntu 14.04.
>      > Here are the relevant
>      > lines in the file "reg-tests-1c.Rout.fail":
>
>      >    > ## m1z uses match(x, *) with length(x) == 1 and failed in R 3.3.0
>      >    > ## PR#16909 - a consequence of the match() bug; check here too:
>      >    > dv <- data.frame(var?1 = 1:3, var?2 = 3); dv[,"var?2"] <- 2
>      >    Error: unexpected input in "dv <- data.frame(var<C3>"
>      >    Execution halted
>
>      > The attached patch uses escape sequences for all non-ASCII characters in
>      > this test and performs pretty much the same check as the original
>      > version, as far as I know. This fixes "make check" for me. The patched
>      > check fails on R 3.3.0 as it should.
>
> Thank you, Mikko!
>
> This is ..hmm.. "interesting".  We have a few other non-ASCII characters
> in a few of the tests/*.R  files  and they don't seem to harm
> your checks; even  reg-tests-1c.R  contains some.
>
> Also, the "Installation and Administration" R Manual mentions
> that some of the tests only run flawlessly if you are not using
> "unusual" locales.  So I am a bit puzzled that exactly this
> (new) test fails in your locale, but the others did not.

My quick check indicates that this was the only test with non-ASCII 
characters in argument names. That might be the crucial difference.

- Mikko

>
> However, as I said, thank you indeed for diagnosing the problem and
> providing a patch working around it (and still checking the
> intended problem !!).
> I'm applying the patch now ... so you'd continue to be one of
> our valuable pre-alpha/beta testers.
>
> With best regards,
> Martin
>
>
>      > Here is the output of "locale":
>
>      >    LANG=en_GB
>      >    LANGUAGE=en_GB:
>      >    LC_CTYPE=fi_FI.UTF-8
>      >    LC_NUMERIC="en_GB"
>      >    LC_TIME="en_GB"
>      >    LC_COLLATE="en_GB"
>      >    LC_MONETARY=fi_FI.UTF-8
>      >    LC_MESSAGES="en_GB"
>      >    LC_PAPER="en_GB"
>      >    LC_NAME="en_GB"
>      >    LC_ADDRESS="en_GB"
>      >    LC_TELEPHONE="en_GB"
>      >    LC_MEASUREMENT="en_GB"
>      >    LC_IDENTIFICATION="en_GB"
>      >    LC_ALL=
>
>      > --
>      > Mikko Korpela
>      > Department of Geosciences and Geography
>      > University of Helsinki
>


From keith.ohara at nyu.edu  Wed May 18 14:18:16 2016
From: keith.ohara at nyu.edu (Keith O'Hara)
Date: Wed, 18 May 2016 08:18:16 -0400
Subject: [Rd] Latest R-devel build failing on OS X
Message-ID: <70CBF2CD-1B4C-48CA-AFFD-E3F1DDBDC073@nyu.edu>

Dear R-devel,

The latest version of R-devel (05-17) is throwing an error for me when building on OS X (v 10.11.4):

making Rembedded.d from Rembedded.c
making dynload.d from dynload.c
making system.d from system.c
making sys-unix.d from sys-unix.c
making sys-std.d from sys-std.c
making X11.d from X11.c
clang -I. -I../../src/include -I../../src/include  -I/usr/local/include -DHAVE_CONFIG_H    -fPIC  -Wall -mtune=core2 -g -O2  -c Rembedded.c -o Rembedded.o
clang -I. -I../../src/include -I../../src/include  -I/usr/local/include -DHAVE_CONFIG_H    -fPIC  -Wall -mtune=core2 -g -O2  -c dynload.c -o dynload.o
clang -I. -I../../src/include -I../../src/include  -I/usr/local/include -DHAVE_CONFIG_H    -fPIC  -Wall -mtune=core2 -g -O2  -c system.c -o system.o
clang -I. -I../../src/include -I../../src/include  -I/usr/local/include -DHAVE_CONFIG_H    -fPIC  -Wall -mtune=core2 -g -O2  -c sys-unix.c -o sys-unix.o
clang -I. -I../../src/include -I../../src/include  -I/usr/local/include -DHAVE_CONFIG_H    -fPIC  -Wall -mtune=core2 -g -O2  -c sys-std.c -o sys-std.o
sys-std.c:592:5: warning: implicit declaration of function 'RL_UNSETSTATE' is invalid in C99
     [-Wimplicit-function-declaration]
   RL_UNSETSTATE(RL_STATE_ISEARCH | RL_STATE_NSEARCH | RL_STATE_VIMOTION |
   ^
sys-std.c:592:19: error: use of undeclared identifier 'RL_STATE_ISEARCH'
   RL_UNSETSTATE(RL_STATE_ISEARCH | RL_STATE_NSEARCH | RL_STATE_VIMOTION |
                 ^
sys-std.c:592:38: error: use of undeclared identifier 'RL_STATE_NSEARCH'
   RL_UNSETSTATE(RL_STATE_ISEARCH | RL_STATE_NSEARCH | RL_STATE_VIMOTION |
                                    ^
sys-std.c:592:57: error: use of undeclared identifier 'RL_STATE_VIMOTION'
   RL_UNSETSTATE(RL_STATE_ISEARCH | RL_STATE_NSEARCH | RL_STATE_VIMOTION |
                                                       ^
sys-std.c:593:5: error: use of undeclared identifier 'RL_STATE_NUMERICARG'
                 RL_STATE_NUMERICARG | RL_STATE_MULTIKEY);
                 ^
sys-std.c:593:27: error: use of undeclared identifier 'RL_STATE_MULTIKEY'
                 RL_STATE_NUMERICARG | RL_STATE_MULTIKEY);
                                       ^
sys-std.c:596:40: error: use of undeclared identifier 'rl_mark'
   rl_line_buffer[rl_point = rl_end = rl_mark = 0] = 0;
                                      ^
sys-std.c:597:5: error: use of undeclared identifier 'rl_done'
   rl_done = 1;
   ^
sys-std.c:998:7: warning: implicit declaration of function 'rl_resize_terminal' is invalid in C99
     [-Wimplicit-function-declaration]
                   rl_resize_terminal();
                   ^
2 warnings and 7 errors generated.
make[3]: *** [sys-std.o] Error 1
make[2]: *** [R] Error 2
make[1]: *** [R] Error 1
make: *** [R] Error 1




My configuration information:

R is now configured for x86_64-apple-darwin15.4.0

 Source directory:          .
 Installation directory:    /Builds/R-devel

 C compiler:                clang  -Wall -mtune=core2 -g -O2
 Fortran 77 compiler:       gfortran-4.8  -g -O2

 C++ compiler:              clang++  -Wall -mtune=core2 -g -O2
 C++11 compiler:            clang++  -std=c++11 -Wall -mtune=core2 -g -O2
 Fortran 90/95 compiler:    gfortran-4.8 -Wall -g -O2
 Obj-C compiler:	     clang -Wall -mtune=core2 -g -O2 -fobjc-exceptions

 Interfaces supported:      aqua, tcltk
 External libraries:        readline, BLAS(OpenBLAS), LAPACK(in blas), curl
 Additional capabilities:   PNG, JPEG, TIFF, NLS, cairo, ICU
 Options enabled:           shared R library, R profiling, memory profiling

 Capabilities skipped:      
 Options not enabled:       shared BLAS

 Recommended packages:      yes


Apologies in advance if I have incorrectly formatted the issue or omitted something important.

Kind regards,
Keith

From pdalgd at gmail.com  Wed May 18 15:04:12 2016
From: pdalgd at gmail.com (peter dalgaard)
Date: Wed, 18 May 2016 15:04:12 +0200
Subject: [Rd] Latest R-devel build failing on OS X
In-Reply-To: <70CBF2CD-1B4C-48CA-AFFD-E3F1DDBDC073@nyu.edu>
References: <70CBF2CD-1B4C-48CA-AFFD-E3F1DDBDC073@nyu.edu>
Message-ID: <1771C0EE-8B59-4921-B648-60DB197824C2@gmail.com>

Yes, the nightly build is broken in a similar, but different way. See below.

Both seem to be readline related, so Frederick Eaton's patches, which Martin committed yesterday are the likely culprit. I had  actually tested them and things seemed to work, but it was on a different machine and not a completely clean build.

-pd

.....
ranlib: file: libR.a(printf.o) has no symbols
gcc   -L/usr/X11R6/lib -o R.bin Rmain.o CommandLineArgs.o Rdynload.o Renviron.o RNG.o agrep.o apply.o arithmetic.o array.o attrib.o bind.o builtin.o character.o coerce.o colors.o complex.o connections.o context.o cum.o dcf.o datetime.o debug.o deparse.o devices.o dotcode.o dounzip.o dstruct.o duplicate.o edit.o engine.o envir.o errors.o eval.o format.o gevents.o gram.o gram-ex.o graphics.o grep.o identical.o inlined.o inspect.o internet.o iosupport.o lapack.o list.o localecharset.o logic.o main.o mapply.o match.o memory.o names.o objects.o options.o paste.o platform.o plot.o plot3d.o plotmath.o print.o printarray.o printvector.o printutils.o qsort.o radixsort.o random.o raw.o registration.o relop.o rlocale.o saveload.o scan.o seq.o serialize.o sort.o source.o split.o sprintf.o startup.o subassign.o subscript.o subset.o summary.o sysutils.o times.o unique.o util.o version.o g_alab_her.o g_cntrlify.o g_fontdb.o g_her_glyph.o xxxpr.o   `ls ../unix/*.o ../appl/*.o ../nmath/*.o` ../extra/
tre/libtre.a  ../extra/intl/libintl.a ../extra/tzone/libtz.a -L../../lib/x86_64 -lRblas -L/usr/lib/gcc/i686-apple-darwin11/4.2.1/x86_64 -L/usr/lib/gcc/i686-apple-darwin11/4.2.1 -L/usr/lib -lgfortran    -Wl,-framework -Wl,CoreFoundation -lreadline  -lpcre -llzma -lbz2 -lz -licucore -lm -llzma -liconv
Undefined symbols for architecture x86_64:
 "_rl_mark", referenced from:
     _popReadline in sys-std.o
 "_rl_readline_state", referenced from:
     _popReadline in sys-std.o
 "_rl_resize_terminal", referenced from:
     _Rstd_ReadConsole in sys-std.o
ld: symbol(s) not found for architecture x86_64
clang: error: linker command failed with exit code 1 (use -v to see invocation)
make[3]: *** [R.bin] Error 1

On 18 May 2016, at 14:18 , Keith O'Hara <keith.ohara at nyu.edu> wrote:

> Dear R-devel,
> 
> The latest version of R-devel (05-17) is throwing an error for me when building on OS X (v 10.11.4):
> 
> making Rembedded.d from Rembedded.c
> making dynload.d from dynload.c
> making system.d from system.c
> making sys-unix.d from sys-unix.c
> making sys-std.d from sys-std.c
> making X11.d from X11.c
> clang -I. -I../../src/include -I../../src/include  -I/usr/local/include -DHAVE_CONFIG_H    -fPIC  -Wall -mtune=core2 -g -O2  -c Rembedded.c -o Rembedded.o
> clang -I. -I../../src/include -I../../src/include  -I/usr/local/include -DHAVE_CONFIG_H    -fPIC  -Wall -mtune=core2 -g -O2  -c dynload.c -o dynload.o
> clang -I. -I../../src/include -I../../src/include  -I/usr/local/include -DHAVE_CONFIG_H    -fPIC  -Wall -mtune=core2 -g -O2  -c system.c -o system.o
> clang -I. -I../../src/include -I../../src/include  -I/usr/local/include -DHAVE_CONFIG_H    -fPIC  -Wall -mtune=core2 -g -O2  -c sys-unix.c -o sys-unix.o
> clang -I. -I../../src/include -I../../src/include  -I/usr/local/include -DHAVE_CONFIG_H    -fPIC  -Wall -mtune=core2 -g -O2  -c sys-std.c -o sys-std.o
> sys-std.c:592:5: warning: implicit declaration of function 'RL_UNSETSTATE' is invalid in C99
>     [-Wimplicit-function-declaration]
>   RL_UNSETSTATE(RL_STATE_ISEARCH | RL_STATE_NSEARCH | RL_STATE_VIMOTION |
>   ^
> sys-std.c:592:19: error: use of undeclared identifier 'RL_STATE_ISEARCH'
>   RL_UNSETSTATE(RL_STATE_ISEARCH | RL_STATE_NSEARCH | RL_STATE_VIMOTION |
>                 ^
> sys-std.c:592:38: error: use of undeclared identifier 'RL_STATE_NSEARCH'
>   RL_UNSETSTATE(RL_STATE_ISEARCH | RL_STATE_NSEARCH | RL_STATE_VIMOTION |
>                                    ^
> sys-std.c:592:57: error: use of undeclared identifier 'RL_STATE_VIMOTION'
>   RL_UNSETSTATE(RL_STATE_ISEARCH | RL_STATE_NSEARCH | RL_STATE_VIMOTION |
>                                                       ^
> sys-std.c:593:5: error: use of undeclared identifier 'RL_STATE_NUMERICARG'
>                 RL_STATE_NUMERICARG | RL_STATE_MULTIKEY);
>                 ^
> sys-std.c:593:27: error: use of undeclared identifier 'RL_STATE_MULTIKEY'
>                 RL_STATE_NUMERICARG | RL_STATE_MULTIKEY);
>                                       ^
> sys-std.c:596:40: error: use of undeclared identifier 'rl_mark'
>   rl_line_buffer[rl_point = rl_end = rl_mark = 0] = 0;
>                                      ^
> sys-std.c:597:5: error: use of undeclared identifier 'rl_done'
>   rl_done = 1;
>   ^
> sys-std.c:998:7: warning: implicit declaration of function 'rl_resize_terminal' is invalid in C99
>     [-Wimplicit-function-declaration]
>                   rl_resize_terminal();
>                   ^
> 2 warnings and 7 errors generated.
> make[3]: *** [sys-std.o] Error 1
> make[2]: *** [R] Error 2
> make[1]: *** [R] Error 1
> make: *** [R] Error 1
> 
> 
> 
> 
> My configuration information:
> 
> R is now configured for x86_64-apple-darwin15.4.0
> 
> Source directory:          .
> Installation directory:    /Builds/R-devel
> 
> C compiler:                clang  -Wall -mtune=core2 -g -O2
> Fortran 77 compiler:       gfortran-4.8  -g -O2
> 
> C++ compiler:              clang++  -Wall -mtune=core2 -g -O2
> C++11 compiler:            clang++  -std=c++11 -Wall -mtune=core2 -g -O2
> Fortran 90/95 compiler:    gfortran-4.8 -Wall -g -O2
> Obj-C compiler:	     clang -Wall -mtune=core2 -g -O2 -fobjc-exceptions
> 
> Interfaces supported:      aqua, tcltk
> External libraries:        readline, BLAS(OpenBLAS), LAPACK(in blas), curl
> Additional capabilities:   PNG, JPEG, TIFF, NLS, cairo, ICU
> Options enabled:           shared R library, R profiling, memory profiling
> 
> Capabilities skipped:      
> Options not enabled:       shared BLAS
> 
> Recommended packages:      yes
> 
> 
> Apologies in advance if I have incorrectly formatted the issue or omitted something important.
> 
> Kind regards,
> Keith
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel

-- 
Peter Dalgaard, Professor,
Center for Statistics, Copenhagen Business School
Solbjerg Plads 3, 2000 Frederiksberg, Denmark
Phone: (+45)38153501
Office: A 4.23
Email: pd.mes at cbs.dk  Priv: PDalgd at gmail.com


From maechler at stat.math.ethz.ch  Wed May 18 18:54:34 2016
From: maechler at stat.math.ethz.ch (Martin Maechler)
Date: Wed, 18 May 2016 18:54:34 +0200
Subject: [Rd] Latest R-devel build failing on OS X
In-Reply-To: <1771C0EE-8B59-4921-B648-60DB197824C2@gmail.com>
References: <70CBF2CD-1B4C-48CA-AFFD-E3F1DDBDC073@nyu.edu>
	<1771C0EE-8B59-4921-B648-60DB197824C2@gmail.com>
Message-ID: <22332.40522.266571.404208@stat.math.ethz.ch>


> Yes, the nightly build is broken in a similar, but different way. See below.
> Both seem to be readline related, so Frederick Eaton's patches, which Martin committed yesterday are the likely culprit. I had  actually tested them and things seemed to work, but it was on a different machine and not a completely clean build.

Indeed a problem.  I'm pretty sure that RL_UNSETSTATE() exists
in newer versions of readline  but not in older ones (and hence is
declared in newer versions of readline.h, but not in older
ones).

It seems people still do have older versions of readline.h 
... and it may be interesting why some versions of OSX (Peter's)
has a new readline and some (Keith') don't.

I'm committing an experimental fix using  #if ... s and the
readline version number.
It does keep fixing the bug on my platform (Fedora 22 Linux,
readline 6.3)

and it may help in Keith' setup.  Please do check it, Keith.
(svn rev >= 70631)

Martin 



> -pd

> .....
> ranlib: file: libR.a(printf.o) has no symbols
> gcc   -L/usr/X11R6/lib -o R.bin Rmain.o CommandLineArgs.o Rdynload.o Renviron.o RNG.o agrep.o apply.o arithmetic.o array.o attrib.o bind.o builtin.o character.o coerce.o colors.o complex.o connections.o context.o cum.o dcf.o datetime.o debug.o deparse.o devices.o dotcode.o dounzip.o dstruct.o duplicate.o edit.o engine.o envir.o errors.o eval.o format.o gevents.o gram.o gram-ex.o graphics.o grep.o identical.o inlined.o inspect.o internet.o iosupport.o lapack.o list.o localecharset.o logic.o main.o mapply.o match.o memory.o names.o objects.o options.o paste.o platform.o plot.o plot3d.o plotmath.o print.o printarray.o printvector.o printutils.o qsort.o radixsort.o random.o raw.o registration.o relop.o rlocale.o saveload.o scan.o seq.o serialize.o sort.o source.o split.o sprintf.o startup.o subassign.o subscript.o subset.o summary.o sysutils.o times.o unique.o util.o version.o g_alab_her.o g_cntrlify.o g_fontdb.o g_her_glyph.o xxxpr.o   `ls ../unix/*.o ../appl/*.o ../nmath/*.o` ../extra/
> tre/libtre.a  ../extra/intl/libintl.a ../extra/tzone/libtz.a -L../../lib/x86_64 -lRblas -L/usr/lib/gcc/i686-apple-darwin11/4.2.1/x86_64 -L/usr/lib/gcc/i686-apple-darwin11/4.2.1 -L/usr/lib -lgfortran    -Wl,-framework -Wl,CoreFoundation -lreadline  -lpcre -llzma -lbz2 -lz -licucore -lm -llzma -liconv
> Undefined symbols for architecture x86_64:
>  "_rl_mark", referenced from:
>      _popReadline in sys-std.o
>  "_rl_readline_state", referenced from:
>      _popReadline in sys-std.o
>  "_rl_resize_terminal", referenced from:
>      _Rstd_ReadConsole in sys-std.o
> ld: symbol(s) not found for architecture x86_64
> clang: error: linker command failed with exit code 1 (use -v to see invocation)
> make[3]: *** [R.bin] Error 1

> On 18 May 2016, at 14:18 , Keith O'Hara <keith.ohara at nyu.edu> wrote:

> > Dear R-devel,
> > 
> > The latest version of R-devel (05-17) is throwing an error for me when building on OS X (v 10.11.4):
> > 
> > making Rembedded.d from Rembedded.c
> > making dynload.d from dynload.c
> > making system.d from system.c
> > making sys-unix.d from sys-unix.c
> > making sys-std.d from sys-std.c
> > making X11.d from X11.c
> > clang -I. -I../../src/include -I../../src/include  -I/usr/local/include -DHAVE_CONFIG_H    -fPIC  -Wall -mtune=core2 -g -O2  -c Rembedded.c -o Rembedded.o
> > clang -I. -I../../src/include -I../../src/include  -I/usr/local/include -DHAVE_CONFIG_H    -fPIC  -Wall -mtune=core2 -g -O2  -c dynload.c -o dynload.o
> > clang -I. -I../../src/include -I../../src/include  -I/usr/local/include -DHAVE_CONFIG_H    -fPIC  -Wall -mtune=core2 -g -O2  -c system.c -o system.o
> > clang -I. -I../../src/include -I../../src/include  -I/usr/local/include -DHAVE_CONFIG_H    -fPIC  -Wall -mtune=core2 -g -O2  -c sys-unix.c -o sys-unix.o
> > clang -I. -I../../src/include -I../../src/include  -I/usr/local/include -DHAVE_CONFIG_H    -fPIC  -Wall -mtune=core2 -g -O2  -c sys-std.c -o sys-std.o
> > sys-std.c:592:5: warning: implicit declaration of function 'RL_UNSETSTATE' is invalid in C99
> >     [-Wimplicit-function-declaration]
> >   RL_UNSETSTATE(RL_STATE_ISEARCH | RL_STATE_NSEARCH | RL_STATE_VIMOTION |
> >   ^
> > sys-std.c:592:19: error: use of undeclared identifier 'RL_STATE_ISEARCH'
> >   RL_UNSETSTATE(RL_STATE_ISEARCH | RL_STATE_NSEARCH | RL_STATE_VIMOTION |
> >                 ^
> > sys-std.c:592:38: error: use of undeclared identifier 'RL_STATE_NSEARCH'
> >   RL_UNSETSTATE(RL_STATE_ISEARCH | RL_STATE_NSEARCH | RL_STATE_VIMOTION |
> >                                    ^
> > sys-std.c:592:57: error: use of undeclared identifier 'RL_STATE_VIMOTION'
> >   RL_UNSETSTATE(RL_STATE_ISEARCH | RL_STATE_NSEARCH | RL_STATE_VIMOTION |
> >                                                       ^
> > sys-std.c:593:5: error: use of undeclared identifier 'RL_STATE_NUMERICARG'
> >                 RL_STATE_NUMERICARG | RL_STATE_MULTIKEY);
> >                 ^
> > sys-std.c:593:27: error: use of undeclared identifier 'RL_STATE_MULTIKEY'
> >                 RL_STATE_NUMERICARG | RL_STATE_MULTIKEY);
> >                                       ^
> > sys-std.c:596:40: error: use of undeclared identifier 'rl_mark'
> >   rl_line_buffer[rl_point = rl_end = rl_mark = 0] = 0;
> >                                      ^
> > sys-std.c:597:5: error: use of undeclared identifier 'rl_done'
> >   rl_done = 1;
> >   ^
> > sys-std.c:998:7: warning: implicit declaration of function 'rl_resize_terminal' is invalid in C99
> >     [-Wimplicit-function-declaration]
> >                   rl_resize_terminal();
> >                   ^
> > 2 warnings and 7 errors generated.
> > make[3]: *** [sys-std.o] Error 1
> > make[2]: *** [R] Error 2
> > make[1]: *** [R] Error 1
> > make: *** [R] Error 1
> > 
> > 
> > 
> > 
> > My configuration information:
> > 
> > R is now configured for x86_64-apple-darwin15.4.0
> > 
> > Source directory:          .
> > Installation directory:    /Builds/R-devel
> > 
> > C compiler:                clang  -Wall -mtune=core2 -g -O2
> > Fortran 77 compiler:       gfortran-4.8  -g -O2
> > 
> > C++ compiler:              clang++  -Wall -mtune=core2 -g -O2
> > C++11 compiler:            clang++  -std=c++11 -Wall -mtune=core2 -g -O2
> > Fortran 90/95 compiler:    gfortran-4.8 -Wall -g -O2
> > Obj-C compiler:	     clang -Wall -mtune=core2 -g -O2 -fobjc-exceptions
> > 
> > Interfaces supported:      aqua, tcltk
> > External libraries:        readline, BLAS(OpenBLAS), LAPACK(in blas), curl
> > Additional capabilities:   PNG, JPEG, TIFF, NLS, cairo, ICU
> > Options enabled:           shared R library, R profiling, memory profiling
> > 
> > Capabilities skipped:      
> > Options not enabled:       shared BLAS
> > 
> > Recommended packages:      yes
> > 
> > 
> > Apologies in advance if I have incorrectly formatted the issue or omitted something important.
> > 
> > Kind regards,
> > Keith
> > ______________________________________________
> > R-devel at r-project.org mailing list
> > https://stat.ethz.ch/mailman/listinfo/r-devel

> -- 
> Peter Dalgaard, Professor,
> Center for Statistics, Copenhagen Business School
> Solbjerg Plads 3, 2000 Frederiksberg, Denmark
> Phone: (+45)38153501
> Office: A 4.23
> Email: pd.mes at cbs.dk  Priv: PDalgd at gmail.com

From keith.ohara at nyu.edu  Wed May 18 19:35:35 2016
From: keith.ohara at nyu.edu (Keith O'Hara)
Date: Wed, 18 May 2016 13:35:35 -0400
Subject: [Rd] Latest R-devel build failing on OS X
In-Reply-To: <22332.40522.266571.404208@stat.math.ethz.ch>
References: <70CBF2CD-1B4C-48CA-AFFD-E3F1DDBDC073@nyu.edu>
	<1771C0EE-8B59-4921-B648-60DB197824C2@gmail.com>
	<22332.40522.266571.404208@stat.math.ethz.ch>
Message-ID: <0339D461-CBAF-4A3E-9FCE-F33D05EABB17@nyu.edu>

Thanks for the fix, Martin.

The build runs smoothly now, with just a warning remaining:

sys-std.c:1002:7: warning: implicit declaration of function 'rl_resize_terminal' is invalid in C99
      [-Wimplicit-function-declaration]
                    rl_resize_terminal();
                    ^
1 warning generated.

Best,
Keith

> On May 18, 2016, at 12:54 PM, Martin Maechler <maechler at stat.math.ethz.ch> wrote:
> 
> 
>> Yes, the nightly build is broken in a similar, but different way. See below.
>> Both seem to be readline related, so Frederick Eaton's patches, which Martin committed yesterday are the likely culprit. I had  actually tested them and things seemed to work, but it was on a different machine and not a completely clean build.
> 
> Indeed a problem.  I'm pretty sure that RL_UNSETSTATE() exists
> in newer versions of readline  but not in older ones (and hence is
> declared in newer versions of readline.h, but not in older
> ones).
> 
> It seems people still do have older versions of readline.h 
> ... and it may be interesting why some versions of OSX (Peter's)
> has a new readline and some (Keith') don't.
> 
> I'm committing an experimental fix using  #if ... s and the
> readline version number.
> It does keep fixing the bug on my platform (Fedora 22 Linux,
> readline 6.3)
> 
> and it may help in Keith' setup.  Please do check it, Keith.
> (svn rev >= 70631)
> 
> Martin 
> 
> 
> 
>> -pd
> 
>> .....
>> ranlib: file: libR.a(printf.o) has no symbols
>> gcc   -L/usr/X11R6/lib -o R.bin Rmain.o CommandLineArgs.o Rdynload.o Renviron.o RNG.o agrep.o apply.o arithmetic.o array.o attrib.o bind.o builtin.o character.o coerce.o colors.o complex.o connections.o context.o cum.o dcf.o datetime.o debug.o deparse.o devices.o dotcode.o dounzip.o dstruct.o duplicate.o edit.o engine.o envir.o errors.o eval.o format.o gevents.o gram.o gram-ex.o graphics.o grep.o identical.o inlined.o inspect.o internet.o iosupport.o lapack.o list.o localecharset.o logic.o main.o mapply.o match.o memory.o names.o objects.o options.o paste.o platform.o plot.o plot3d.o plotmath.o print.o printarray.o printvector.o printutils.o qsort.o radixsort.o random.o raw.o registration.o relop.o rlocale.o saveload.o scan.o seq.o serialize.o sort.o source.o split.o sprintf.o startup.o subassign.o subscript.o subset.o summary.o sysutils.o times.o unique.o util.o version.o g_alab_her.o g_cntrlify.o g_fontdb.o g_her_glyph.o xxxpr.o   `ls ../unix/*.o ../appl/*.o ../nmath/*.o` ../extra/
>> tre/libtre.a  ../extra/intl/libintl.a ../extra/tzone/libtz.a -L../../lib/x86_64 -lRblas -L/usr/lib/gcc/i686-apple-darwin11/4.2.1/x86_64 -L/usr/lib/gcc/i686-apple-darwin11/4.2.1 -L/usr/lib -lgfortran    -Wl,-framework -Wl,CoreFoundation -lreadline  -lpcre -llzma -lbz2 -lz -licucore -lm -llzma -liconv
>> Undefined symbols for architecture x86_64:
>> "_rl_mark", referenced from:
>>     _popReadline in sys-std.o
>> "_rl_readline_state", referenced from:
>>     _popReadline in sys-std.o
>> "_rl_resize_terminal", referenced from:
>>     _Rstd_ReadConsole in sys-std.o
>> ld: symbol(s) not found for architecture x86_64
>> clang: error: linker command failed with exit code 1 (use -v to see invocation)
>> make[3]: *** [R.bin] Error 1
> 
>> On 18 May 2016, at 14:18 , Keith O'Hara <keith.ohara at nyu.edu> wrote:
> 
>>> Dear R-devel,
>>> 
>>> The latest version of R-devel (05-17) is throwing an error for me when building on OS X (v 10.11.4):
>>> 
>>> making Rembedded.d from Rembedded.c
>>> making dynload.d from dynload.c
>>> making system.d from system.c
>>> making sys-unix.d from sys-unix.c
>>> making sys-std.d from sys-std.c
>>> making X11.d from X11.c
>>> clang -I. -I../../src/include -I../../src/include  -I/usr/local/include -DHAVE_CONFIG_H    -fPIC  -Wall -mtune=core2 -g -O2  -c Rembedded.c -o Rembedded.o
>>> clang -I. -I../../src/include -I../../src/include  -I/usr/local/include -DHAVE_CONFIG_H    -fPIC  -Wall -mtune=core2 -g -O2  -c dynload.c -o dynload.o
>>> clang -I. -I../../src/include -I../../src/include  -I/usr/local/include -DHAVE_CONFIG_H    -fPIC  -Wall -mtune=core2 -g -O2  -c system.c -o system.o
>>> clang -I. -I../../src/include -I../../src/include  -I/usr/local/include -DHAVE_CONFIG_H    -fPIC  -Wall -mtune=core2 -g -O2  -c sys-unix.c -o sys-unix.o
>>> clang -I. -I../../src/include -I../../src/include  -I/usr/local/include -DHAVE_CONFIG_H    -fPIC  -Wall -mtune=core2 -g -O2  -c sys-std.c -o sys-std.o
>>> sys-std.c:592:5: warning: implicit declaration of function 'RL_UNSETSTATE' is invalid in C99
>>>    [-Wimplicit-function-declaration]
>>>  RL_UNSETSTATE(RL_STATE_ISEARCH | RL_STATE_NSEARCH | RL_STATE_VIMOTION |
>>>  ^
>>> sys-std.c:592:19: error: use of undeclared identifier 'RL_STATE_ISEARCH'
>>>  RL_UNSETSTATE(RL_STATE_ISEARCH | RL_STATE_NSEARCH | RL_STATE_VIMOTION |
>>>                ^
>>> sys-std.c:592:38: error: use of undeclared identifier 'RL_STATE_NSEARCH'
>>>  RL_UNSETSTATE(RL_STATE_ISEARCH | RL_STATE_NSEARCH | RL_STATE_VIMOTION |
>>>                                   ^
>>> sys-std.c:592:57: error: use of undeclared identifier 'RL_STATE_VIMOTION'
>>>  RL_UNSETSTATE(RL_STATE_ISEARCH | RL_STATE_NSEARCH | RL_STATE_VIMOTION |
>>>                                                      ^
>>> sys-std.c:593:5: error: use of undeclared identifier 'RL_STATE_NUMERICARG'
>>>                RL_STATE_NUMERICARG | RL_STATE_MULTIKEY);
>>>                ^
>>> sys-std.c:593:27: error: use of undeclared identifier 'RL_STATE_MULTIKEY'
>>>                RL_STATE_NUMERICARG | RL_STATE_MULTIKEY);
>>>                                      ^
>>> sys-std.c:596:40: error: use of undeclared identifier 'rl_mark'
>>>  rl_line_buffer[rl_point = rl_end = rl_mark = 0] = 0;
>>>                                     ^
>>> sys-std.c:597:5: error: use of undeclared identifier 'rl_done'
>>>  rl_done = 1;
>>>  ^
>>> sys-std.c:998:7: warning: implicit declaration of function 'rl_resize_terminal' is invalid in C99
>>>    [-Wimplicit-function-declaration]
>>>                  rl_resize_terminal();
>>>                  ^
>>> 2 warnings and 7 errors generated.
>>> make[3]: *** [sys-std.o] Error 1
>>> make[2]: *** [R] Error 2
>>> make[1]: *** [R] Error 1
>>> make: *** [R] Error 1
>>> 
>>> 
>>> 
>>> 
>>> My configuration information:
>>> 
>>> R is now configured for x86_64-apple-darwin15.4.0
>>> 
>>> Source directory:          .
>>> Installation directory:    /Builds/R-devel
>>> 
>>> C compiler:                clang  -Wall -mtune=core2 -g -O2
>>> Fortran 77 compiler:       gfortran-4.8  -g -O2
>>> 
>>> C++ compiler:              clang++  -Wall -mtune=core2 -g -O2
>>> C++11 compiler:            clang++  -std=c++11 -Wall -mtune=core2 -g -O2
>>> Fortran 90/95 compiler:    gfortran-4.8 -Wall -g -O2
>>> Obj-C compiler:	     clang -Wall -mtune=core2 -g -O2 -fobjc-exceptions
>>> 
>>> Interfaces supported:      aqua, tcltk
>>> External libraries:        readline, BLAS(OpenBLAS), LAPACK(in blas), curl
>>> Additional capabilities:   PNG, JPEG, TIFF, NLS, cairo, ICU
>>> Options enabled:           shared R library, R profiling, memory profiling
>>> 
>>> Capabilities skipped:      
>>> Options not enabled:       shared BLAS
>>> 
>>> Recommended packages:      yes
>>> 
>>> 
>>> Apologies in advance if I have incorrectly formatted the issue or omitted something important.
>>> 
>>> Kind regards,
>>> Keith
>>> ______________________________________________
>>> R-devel at r-project.org mailing list
>>> https://stat.ethz.ch/mailman/listinfo/r-devel
> 
>> -- 
>> Peter Dalgaard, Professor,
>> Center for Statistics, Copenhagen Business School
>> Solbjerg Plads 3, 2000 Frederiksberg, Denmark
>> Phone: (+45)38153501
>> Office: A 4.23
>> Email: pd.mes at cbs.dk  Priv: PDalgd at gmail.com


From pdalgd at gmail.com  Wed May 18 22:01:33 2016
From: pdalgd at gmail.com (peter dalgaard)
Date: Wed, 18 May 2016 22:01:33 +0200
Subject: [Rd] Latest R-devel build failing on OS X
In-Reply-To: <22332.40522.266571.404208@stat.math.ethz.ch>
References: <70CBF2CD-1B4C-48CA-AFFD-E3F1DDBDC073@nyu.edu>
	<1771C0EE-8B59-4921-B648-60DB197824C2@gmail.com>
	<22332.40522.266571.404208@stat.math.ethz.ch>
Message-ID: <25CBCECC-52C0-4228-978B-44BE848C7CF3@gmail.com>


> On 18 May 2016, at 18:54 , Martin Maechler <maechler at stat.math.ethz.ch> wrote:
> 
> 
>> Yes, the nightly build is broken in a similar, but different way. See below.
>> Both seem to be readline related, so Frederick Eaton's patches, which Martin committed yesterday are the likely culprit. I had  actually tested them and things seemed to work, but it was on a different machine and not a completely clean build.
> 
> Indeed a problem.  I'm pretty sure that RL_UNSETSTATE() exists
> in newer versions of readline  but not in older ones (and hence is
> declared in newer versions of readline.h, but not in older
> ones).
> 
> It seems people still do have older versions of readline.h 
> ... and it may be interesting why some versions of OSX (Peter's)
> has a new readline and some (Keith') don't.
> 

Er, Peter has two machines, one an ancient iMac still running Mavericks, the other a nearly as old MB Air running Yosemite. The MBAir apparently worked, the iMac not. *Both* of them has readline 5.2 in /usr/local and 6.2/3 in /opt/local, but the MBAir binary has

Notice incidentally that 5.2 is what Simon currently supports on R.research.att.com.

Peter-Dalgaards-MacBook-Air:BUILD pd$ otool -L bin/exec/x86_64/R 
bin/exec/x86_64/R:
....
	/usr/local/lib/libreadline.5.2.dylib (compatibility version 5.0.0, current version 5.2.0)

With the recent update, the iMac still fails with

gcc   -L/usr/X11R6/lib -o R.bin Rmain.o CommandLineArgs.o Rdynload.o Renviron.o RNG.o agrep.o apply.o arithmetic.o array.o attrib.o bind.o builtin.o character.o coerce.o colors.o complex.o connections.o context.o cum.o dcf.o datetime.o debug.o deparse.o devices.o dotcode.o dounzip.o dstruct.o duplicate.o edit.o engine.o envir.o errors.o eval.o format.o gevents.o gram.o gram-ex.o graphics.o grep.o identical.o inlined.o inspect.o internet.o iosupport.o lapack.o list.o localecharset.o logic.o main.o mapply.o match.o memory.o names.o objects.o options.o paste.o platform.o plot.o plot3d.o plotmath.o print.o printarray.o printvector.o printutils.o qsort.o radixsort.o random.o raw.o registration.o relop.o rlocale.o saveload.o scan.o seq.o serialize.o sort.o source.o split.o sprintf.o startup.o subassign.o subscript.o subset.o summary.o sysutils.o times.o unique.o util.o version.o g_alab_her.o g_cntrlify.o g_fontdb.o g_her_glyph.o xxxpr.o   `ls ../unix/*.o ../appl/*.o ../nmath/*.o` ../extra/tre/libtre.a  ../extra/intl/libintl.a ../extra/tzone/libtz.a -L../../lib/x86_64 -lRblas -L/usr/lib/gcc/i686-apple-darwin11/4.2.1/x86_64 -L/usr/lib/gcc/i686-apple-darwin11/4.2.1 -L/usr/lib -lgfortran    -Wl,-framework -Wl,CoreFoundation -lreadline  -lpcre -llzma -lbz2 -lz -licucore -lm -llzma -liconv
Undefined symbols for architecture x86_64:
  "_rl_resize_terminal", referenced from:
      _Rstd_ReadConsole in sys-std.o
ld: symbol(s) not found for architecture x86_64
clang: error: linker command failed with exit code 1 (use -v to see invocation)
make[3]: *** [R.bin] Error 1
make[2]: *** [R] Error 2
make[1]: *** [R] Error 1
make: *** [R] Error 1

and the MBAir still builds... 

Confused!,

-pd



> I'm committing an experimental fix using  #if ... s and the
> readline version number.
> It does keep fixing the bug on my platform (Fedora 22 Linux,
> readline 6.3)
> 
> and it may help in Keith' setup.  Please do check it, Keith.
> (svn rev >= 70631)
> 
> Martin 
> 
> 
> 
>> -pd
> 
>> .....
>> ranlib: file: libR.a(printf.o) has no symbols
>> gcc   -L/usr/X11R6/lib -o R.bin Rmain.o CommandLineArgs.o Rdynload.o Renviron.o RNG.o agrep.o apply.o arithmetic.o array.o attrib.o bind.o builtin.o character.o coerce.o colors.o complex.o connections.o context.o cum.o dcf.o datetime.o debug.o deparse.o devices.o dotcode.o dounzip.o dstruct.o duplicate.o edit.o engine.o envir.o errors.o eval.o format.o gevents.o gram.o gram-ex.o graphics.o grep.o identical.o inlined.o inspect.o internet.o iosupport.o lapack.o list.o localecharset.o logic.o main.o mapply.o match.o memory.o names.o objects.o options.o paste.o platform.o plot.o plot3d.o plotmath.o print.o printarray.o printvector.o printutils.o qsort.o radixsort.o random.o raw.o registration.o relop.o rlocale.o saveload.o scan.o seq.o serialize.o sort.o source.o split.o sprintf.o startup.o subassign.o subscript.o subset.o summary.o sysutils.o times.o unique.o util.o version.o g_alab_her.o g_cntrlify.o g_fontdb.o g_her_glyph.o xxxpr.o   `ls ../unix/*.o ../appl/*.o ../nmath/*.o` ../extra/
>> tre/libtre.a  ../extra/intl/libintl.a ../extra/tzone/libtz.a -L../../lib/x86_64 -lRblas -L/usr/lib/gcc/i686-apple-darwin11/4.2.1/x86_64 -L/usr/lib/gcc/i686-apple-darwin11/4.2.1 -L/usr/lib -lgfortran    -Wl,-framework -Wl,CoreFoundation -lreadline  -lpcre -llzma -lbz2 -lz -licucore -lm -llzma -liconv
>> Undefined symbols for architecture x86_64:
>> "_rl_mark", referenced from:
>>     _popReadline in sys-std.o
>> "_rl_readline_state", referenced from:
>>     _popReadline in sys-std.o
>> "_rl_resize_terminal", referenced from:
>>     _Rstd_ReadConsole in sys-std.o
>> ld: symbol(s) not found for architecture x86_64
>> clang: error: linker command failed with exit code 1 (use -v to see invocation)
>> make[3]: *** [R.bin] Error 1
> 
>> On 18 May 2016, at 14:18 , Keith O'Hara <keith.ohara at nyu.edu> wrote:
> 
>>> Dear R-devel,
>>> 
>>> The latest version of R-devel (05-17) is throwing an error for me when building on OS X (v 10.11.4):
>>> 
>>> making Rembedded.d from Rembedded.c
>>> making dynload.d from dynload.c
>>> making system.d from system.c
>>> making sys-unix.d from sys-unix.c
>>> making sys-std.d from sys-std.c
>>> making X11.d from X11.c
>>> clang -I. -I../../src/include -I../../src/include  -I/usr/local/include -DHAVE_CONFIG_H    -fPIC  -Wall -mtune=core2 -g -O2  -c Rembedded.c -o Rembedded.o
>>> clang -I. -I../../src/include -I../../src/include  -I/usr/local/include -DHAVE_CONFIG_H    -fPIC  -Wall -mtune=core2 -g -O2  -c dynload.c -o dynload.o
>>> clang -I. -I../../src/include -I../../src/include  -I/usr/local/include -DHAVE_CONFIG_H    -fPIC  -Wall -mtune=core2 -g -O2  -c system.c -o system.o
>>> clang -I. -I../../src/include -I../../src/include  -I/usr/local/include -DHAVE_CONFIG_H    -fPIC  -Wall -mtune=core2 -g -O2  -c sys-unix.c -o sys-unix.o
>>> clang -I. -I../../src/include -I../../src/include  -I/usr/local/include -DHAVE_CONFIG_H    -fPIC  -Wall -mtune=core2 -g -O2  -c sys-std.c -o sys-std.o
>>> sys-std.c:592:5: warning: implicit declaration of function 'RL_UNSETSTATE' is invalid in C99
>>>    [-Wimplicit-function-declaration]
>>>  RL_UNSETSTATE(RL_STATE_ISEARCH | RL_STATE_NSEARCH | RL_STATE_VIMOTION |
>>>  ^
>>> sys-std.c:592:19: error: use of undeclared identifier 'RL_STATE_ISEARCH'
>>>  RL_UNSETSTATE(RL_STATE_ISEARCH | RL_STATE_NSEARCH | RL_STATE_VIMOTION |
>>>                ^
>>> sys-std.c:592:38: error: use of undeclared identifier 'RL_STATE_NSEARCH'
>>>  RL_UNSETSTATE(RL_STATE_ISEARCH | RL_STATE_NSEARCH | RL_STATE_VIMOTION |
>>>                                   ^
>>> sys-std.c:592:57: error: use of undeclared identifier 'RL_STATE_VIMOTION'
>>>  RL_UNSETSTATE(RL_STATE_ISEARCH | RL_STATE_NSEARCH | RL_STATE_VIMOTION |
>>>                                                      ^
>>> sys-std.c:593:5: error: use of undeclared identifier 'RL_STATE_NUMERICARG'
>>>                RL_STATE_NUMERICARG | RL_STATE_MULTIKEY);
>>>                ^
>>> sys-std.c:593:27: error: use of undeclared identifier 'RL_STATE_MULTIKEY'
>>>                RL_STATE_NUMERICARG | RL_STATE_MULTIKEY);
>>>                                      ^
>>> sys-std.c:596:40: error: use of undeclared identifier 'rl_mark'
>>>  rl_line_buffer[rl_point = rl_end = rl_mark = 0] = 0;
>>>                                     ^
>>> sys-std.c:597:5: error: use of undeclared identifier 'rl_done'
>>>  rl_done = 1;
>>>  ^
>>> sys-std.c:998:7: warning: implicit declaration of function 'rl_resize_terminal' is invalid in C99
>>>    [-Wimplicit-function-declaration]
>>>                  rl_resize_terminal();
>>>                  ^
>>> 2 warnings and 7 errors generated.
>>> make[3]: *** [sys-std.o] Error 1
>>> make[2]: *** [R] Error 2
>>> make[1]: *** [R] Error 1
>>> make: *** [R] Error 1
>>> 
>>> 
>>> 
>>> 
>>> My configuration information:
>>> 
>>> R is now configured for x86_64-apple-darwin15.4.0
>>> 
>>> Source directory:          .
>>> Installation directory:    /Builds/R-devel
>>> 
>>> C compiler:                clang  -Wall -mtune=core2 -g -O2
>>> Fortran 77 compiler:       gfortran-4.8  -g -O2
>>> 
>>> C++ compiler:              clang++  -Wall -mtune=core2 -g -O2
>>> C++11 compiler:            clang++  -std=c++11 -Wall -mtune=core2 -g -O2
>>> Fortran 90/95 compiler:    gfortran-4.8 -Wall -g -O2
>>> Obj-C compiler:	     clang -Wall -mtune=core2 -g -O2 -fobjc-exceptions
>>> 
>>> Interfaces supported:      aqua, tcltk
>>> External libraries:        readline, BLAS(OpenBLAS), LAPACK(in blas), curl
>>> Additional capabilities:   PNG, JPEG, TIFF, NLS, cairo, ICU
>>> Options enabled:           shared R library, R profiling, memory profiling
>>> 
>>> Capabilities skipped:      
>>> Options not enabled:       shared BLAS
>>> 
>>> Recommended packages:      yes
>>> 
>>> 
>>> Apologies in advance if I have incorrectly formatted the issue or omitted something important.
>>> 
>>> Kind regards,
>>> Keith
>>> ______________________________________________
>>> R-devel at r-project.org mailing list
>>> https://stat.ethz.ch/mailman/listinfo/r-devel
> 
>> -- 
>> Peter Dalgaard, Professor,
>> Center for Statistics, Copenhagen Business School
>> Solbjerg Plads 3, 2000 Frederiksberg, Denmark
>> Phone: (+45)38153501
>> Office: A 4.23
>> Email: pd.mes at cbs.dk  Priv: PDalgd at gmail.com

-- 
Peter Dalgaard, Professor,
Center for Statistics, Copenhagen Business School
Solbjerg Plads 3, 2000 Frederiksberg, Denmark
Phone: (+45)38153501
Office: A 4.23
Email: pd.mes at cbs.dk  Priv: PDalgd at gmail.com


From pdalgd at gmail.com  Wed May 18 22:40:08 2016
From: pdalgd at gmail.com (peter dalgaard)
Date: Wed, 18 May 2016 22:40:08 +0200
Subject: [Rd] Latest R-devel build failing on OS X
In-Reply-To: <25CBCECC-52C0-4228-978B-44BE848C7CF3@gmail.com>
References: <70CBF2CD-1B4C-48CA-AFFD-E3F1DDBDC073@nyu.edu>
	<1771C0EE-8B59-4921-B648-60DB197824C2@gmail.com>
	<22332.40522.266571.404208@stat.math.ethz.ch>
	<25CBCECC-52C0-4228-978B-44BE848C7CF3@gmail.com>
Message-ID: <604481D6-9DE0-49D1-89A6-41B8A8D537B7@gmail.com>

Ah, got it. For some ancient reason config.site on that machine had 

LDFLAGS=-L/usr/X11R6/lib

in config.site, and that prevented configure from inserting -L /usr/local/lib, so linked /usr/lib/libreadline.dylib, which is the Apple-supplied one, which possibly is really libedit...

-p


> On 18 May 2016, at 22:01 , peter dalgaard <pdalgd at gmail.com> wrote:
> 
> gcc   -L/usr/X11R6/lib -o R.bin Rmain.o CommandLineArgs.o Rdynload.o Renviron.o RNG.o agrep.o apply.o arithmetic.o array.o attrib.o bind.o builtin.o character.o coerce.o colors.o complex.o connections.o context.o cum.o dcf.o datetime.o debug.o deparse.o devices.o dotcode.o dounzip.o dstruct.o duplicate.o edit.o engine.o envir.o errors.o eval.o format.o gevents.o gram.o gram-ex.o graphics.o grep.o identical.o inlined.o inspect.o internet.o iosupport.o lapack.o list.o localecharset.o logic.o main.o mapply.o match.o memory.o names.o objects.o options.o paste.o platform.o plot.o plot3d.o plotmath.o print.o printarray.o printvector.o printutils.o qsort.o radixsort.o random.o raw.o registration.o relop.o rlocale.o saveload.o scan.o seq.o serialize.o sort.o source.o split.o sprintf.o startup.o subassign.o subscript.o subset.o summary.o sysutils.o times.o unique.o util.o version.o g_alab_her.o g_cntrlify.o g_fontdb.o g_her_glyph.o xxxpr.o   `ls ../unix/*.o ../appl/*.o ../nmath/*.o` ../extra/tre/libtre.a ../extra/intl/libintl.a ../extra/tzone/libtz.a -L../../lib/x86_64 -lRblas -L/usr/lib/gcc/i686-apple-darwin11/4.2.1/x86_64 -L/usr/lib/gcc/i686-apple-darwin11/4.2.1 -L/usr/lib -lgfortran    -Wl,-framework -Wl,CoreFoundation -lreadline  -lpcre -llzma -lbz2 -lz -licucore -lm -llzma -liconv
> Undefined symbols for architecture x86_64:
>  "_rl_resize_terminal", referenced from:
>      _Rstd_ReadConsole in sys-std.o
> ld: symbol(s) not found for architecture x86_64
> clang: error: linker command failed with exit code 1 (use -v to see invocation)
> make[3]: *** [R.bin] Error 1
> make[2]: *** [R] Error 2
> make[1]: *** [R] Error 1
> make: *** [R] Error 1
> 
> and the MBAir still builds... 
> 
> Confused!,
> 
> -pd

-- 
Peter Dalgaard, Professor,
Center for Statistics, Copenhagen Business School
Solbjerg Plads 3, 2000 Frederiksberg, Denmark
Phone: (+45)38153501
Office: A 4.23
Email: pd.mes at cbs.dk  Priv: PDalgd at gmail.com


From pdalgd at gmail.com  Wed May 18 22:58:59 2016
From: pdalgd at gmail.com (peter dalgaard)
Date: Wed, 18 May 2016 22:58:59 +0200
Subject: [Rd] Latest R-devel build failing on OS X
In-Reply-To: <604481D6-9DE0-49D1-89A6-41B8A8D537B7@gmail.com>
References: <70CBF2CD-1B4C-48CA-AFFD-E3F1DDBDC073@nyu.edu>
	<1771C0EE-8B59-4921-B648-60DB197824C2@gmail.com>
	<22332.40522.266571.404208@stat.math.ethz.ch>
	<25CBCECC-52C0-4228-978B-44BE848C7CF3@gmail.com>
	<604481D6-9DE0-49D1-89A6-41B8A8D537B7@gmail.com>
Message-ID: <0C7F9946-4666-493C-BE88-5805B56902A5@gmail.com>

Spoke too soon, both systems now build, but neither has the original bugs fixed....

(Incidentally, I realized why the ctl-R...ctl-C bug never bit me: The emacs habit is to exit isearch with ctl-G and that works flawlessly.) 

-pd

> On 18 May 2016, at 22:40 , peter dalgaard <pdalgd at gmail.com> wrote:
> 
> Ah, got it. For some ancient reason config.site on that machine had 
> 
> LDFLAGS=-L/usr/X11R6/lib
> 
> in config.site, and that prevented configure from inserting -L /usr/local/lib, so linked /usr/lib/libreadline.dylib, which is the Apple-supplied one, which possibly is really libedit...
> 
> -p
> 
> 
>> On 18 May 2016, at 22:01 , peter dalgaard <pdalgd at gmail.com> wrote:
>> 
>> gcc   -L/usr/X11R6/lib -o R.bin Rmain.o CommandLineArgs.o Rdynload.o Renviron.o RNG.o agrep.o apply.o arithmetic.o array.o attrib.o bind.o builtin.o character.o coerce.o colors.o complex.o connections.o context.o cum.o dcf.o datetime.o debug.o deparse.o devices.o dotcode.o dounzip.o dstruct.o duplicate.o edit.o engine.o envir.o errors.o eval.o format.o gevents.o gram.o gram-ex.o graphics.o grep.o identical.o inlined.o inspect.o internet.o iosupport.o lapack.o list.o localecharset.o logic.o main.o mapply.o match.o memory.o names.o objects.o options.o paste.o platform.o plot.o plot3d.o plotmath.o print.o printarray.o printvector.o printutils.o qsort.o radixsort.o random.o raw.o registration.o relop.o rlocale.o saveload.o scan.o seq.o serialize.o sort.o source.o split.o sprintf.o startup.o subassign.o subscript.o subset.o summary.o sysutils.o times.o unique.o util.o version.o g_alab_her.o g_cntrlify.o g_fontdb.o g_her_glyph.o xxxpr.o   `ls ../unix/*.o ../appl/*.o ../nmath/*.o` ../extra/tre/libtre.a ../extra/intl/libintl.a ../extra/tzone/libtz.a -L../../lib/x86_64 -lRblas -L/usr/lib/gcc/i686-apple-darwin11/4.2.1/x86_64 -L/usr/lib/gcc/i686-apple-darwin11/4.2.1 -L/usr/lib -lgfortran    -Wl,-framework -Wl,CoreFoundation -lreadline  -lpcre -llzma -lbz2 -lz -licucore -lm -llzma -liconv
>> Undefined symbols for architecture x86_64:
>> "_rl_resize_terminal", referenced from:
>>     _Rstd_ReadConsole in sys-std.o
>> ld: symbol(s) not found for architecture x86_64
>> clang: error: linker command failed with exit code 1 (use -v to see invocation)
>> make[3]: *** [R.bin] Error 1
>> make[2]: *** [R] Error 2
>> make[1]: *** [R] Error 1
>> make: *** [R] Error 1
>> 
>> and the MBAir still builds... 
>> 
>> Confused!,
>> 
>> -pd
> 
> -- 
> Peter Dalgaard, Professor,
> Center for Statistics, Copenhagen Business School
> Solbjerg Plads 3, 2000 Frederiksberg, Denmark
> Phone: (+45)38153501
> Office: A 4.23
> Email: pd.mes at cbs.dk  Priv: PDalgd at gmail.com
> 
> 
> 
> 
> 
> 
> 
> 
> 

-- 
Peter Dalgaard, Professor,
Center for Statistics, Copenhagen Business School
Solbjerg Plads 3, 2000 Frederiksberg, Denmark
Phone: (+45)38153501
Office: A 4.23
Email: pd.mes at cbs.dk  Priv: PDalgd at gmail.com


From frederik at ofb.net  Thu May 19 00:03:31 2016
From: frederik at ofb.net (frederik at ofb.net)
Date: Wed, 18 May 2016 15:03:31 -0700
Subject: [Rd] Latest R-devel build failing on OS X
In-Reply-To: <0C7F9946-4666-493C-BE88-5805B56902A5@gmail.com>
References: <70CBF2CD-1B4C-48CA-AFFD-E3F1DDBDC073@nyu.edu>
	<1771C0EE-8B59-4921-B648-60DB197824C2@gmail.com>
	<22332.40522.266571.404208@stat.math.ethz.ch>
	<25CBCECC-52C0-4228-978B-44BE848C7CF3@gmail.com>
	<604481D6-9DE0-49D1-89A6-41B8A8D537B7@gmail.com>
	<0C7F9946-4666-493C-BE88-5805B56902A5@gmail.com>
Message-ID: <20160518220330.GA1621@ofb.net>

Readline <= 6.2 shouldn't require the SIGWINCH patch, so if older
versions have trouble finding rl_resize_terminal then you could wrap a
macro around that part.

The isearch C-c bug has existed forever, according to Chet Ramey. Yes,
I had to retrain myself to use C-g to exit isearch but it's confusing.
It would be nice to fix this C-c bug on older versions too, but my
solution used some global variables and I'm not sure which Readline
version they date from.

Out of curiosity, did you delete the HAVE_READLINE_READLINE_H block?

Thanks so much for working this out!

Frederick

P.S. I do use Emacs too, but I have some bindings which stuff the
current region into a numbered 'GNU screen' window (where R is
running) - I was never a fan of inferior Emacs processes. Also a
keybinding which stuffs "source('CURRENT_FILE')\n". And a rxvt-unicode
'url-select' extension which copies text after a "> " prompt, to get
commands I edited back into Emacs. That's why I still use the basic
interface.

On Wed, May 18, 2016 at 10:58:59PM +0200, peter dalgaard wrote:
> Spoke too soon, both systems now build, but neither has the original bugs fixed....
> 
> (Incidentally, I realized why the ctl-R...ctl-C bug never bit me: The emacs habit is to exit isearch with ctl-G and that works flawlessly.) 
> 
> -pd
> 
> > On 18 May 2016, at 22:40 , peter dalgaard <pdalgd at gmail.com> wrote:
> > 
> > Ah, got it. For some ancient reason config.site on that machine had 
> > 
> > LDFLAGS=-L/usr/X11R6/lib
> > 
> > in config.site, and that prevented configure from inserting -L /usr/local/lib, so linked /usr/lib/libreadline.dylib, which is the Apple-supplied one, which possibly is really libedit...
> > 
> > -p
> > 
> > 
> >> On 18 May 2016, at 22:01 , peter dalgaard <pdalgd at gmail.com> wrote:
> >> 
> >> gcc   -L/usr/X11R6/lib -o R.bin Rmain.o CommandLineArgs.o Rdynload.o Renviron.o RNG.o agrep.o apply.o arithmetic.o array.o attrib.o bind.o builtin.o character.o coerce.o colors.o complex.o connections.o context.o cum.o dcf.o datetime.o debug.o deparse.o devices.o dotcode.o dounzip.o dstruct.o duplicate.o edit.o engine.o envir.o errors.o eval.o format.o gevents.o gram.o gram-ex.o graphics.o grep.o identical.o inlined.o inspect.o internet.o iosupport.o lapack.o list.o localecharset.o logic.o main.o mapply.o match.o memory.o names.o objects.o options.o paste.o platform.o plot.o plot3d.o plotmath.o print.o printarray.o printvector.o printutils.o qsort.o radixsort.o random.o raw.o registration.o relop.o rlocale.o saveload.o scan.o seq.o serialize.o sort.o source.o split.o sprintf.o startup.o subassign.o subscript.o subset.o summary.o sysutils.o times.o unique.o util.o version.o g_alab_her.o g_cntrlify.o g_fontdb.o g_her_glyph.o xxxpr.o   `ls ../unix/*.o ../appl/*.o ../nmath/*.o` ../extra/tre/libtre.a ../extra/intl/libintl.a ../extra/tzone/libtz.a -L../../lib/x86_64 -lRblas -L/usr/lib/gcc/i686-apple-darwin11/4.2.1/x86_64 -L/usr/lib/gcc/i686-apple-darwin11/4.2.1 -L/usr/lib -lgfortran    -Wl,-framework -Wl,CoreFoundation -lreadline  -lpcre -llzma -lbz2 -lz -licucore -lm -llzma -liconv
> >> Undefined symbols for architecture x86_64:
> >> "_rl_resize_terminal", referenced from:
> >>     _Rstd_ReadConsole in sys-std.o
> >> ld: symbol(s) not found for architecture x86_64
> >> clang: error: linker command failed with exit code 1 (use -v to see invocation)
> >> make[3]: *** [R.bin] Error 1
> >> make[2]: *** [R] Error 2
> >> make[1]: *** [R] Error 1
> >> make: *** [R] Error 1
> >> 
> >> and the MBAir still builds... 
> >> 
> >> Confused!,
> >> 
> >> -pd
> > 
> > -- 
> > Peter Dalgaard, Professor,
> > Center for Statistics, Copenhagen Business School
> > Solbjerg Plads 3, 2000 Frederiksberg, Denmark
> > Phone: (+45)38153501
> > Office: A 4.23
> > Email: pd.mes at cbs.dk  Priv: PDalgd at gmail.com
> > 
> > 
> > 
> > 
> > 
> > 
> > 
> > 
> > 
> 
> -- 
> Peter Dalgaard, Professor,
> Center for Statistics, Copenhagen Business School
> Solbjerg Plads 3, 2000 Frederiksberg, Denmark
> Phone: (+45)38153501
> Office: A 4.23
> Email: pd.mes at cbs.dk  Priv: PDalgd at gmail.com
> 
> 
> 
> 
> 
> 
> 
> 
> 


From maechler at stat.math.ethz.ch  Thu May 19 08:46:45 2016
From: maechler at stat.math.ethz.ch (Martin Maechler)
Date: Thu, 19 May 2016 08:46:45 +0200
Subject: [Rd] [patch] Error in reg-tests-1c.R (R-devel)
In-Reply-To: <573C4F7C.5060109@helsinki.fi>
References: <573C3E64.9020803@helsinki.fi>
	<22332.18669.698735.837101@stat.math.ethz.ch>
	<573C4F7C.5060109@helsinki.fi>
Message-ID: <22333.24917.824012.9733@stat.math.ethz.ch>

>>>>> Mikko Korpela <mikko.korpela at helsinki.fi>
>>>>>     on Wed, 18 May 2016 14:18:20 +0300 writes:

    > On 18/05/16 13:50, Martin Maechler wrote:
    >>>>>>> Mikko Korpela <mikko.korpela at helsinki.fi> on Wed, 18
    >>>>>>> May 2016 13:05:24 +0300 writes:
    >> 
    >> > I get an error when running "make check" after building
    >> > R-devel r70629 on Ubuntu 14.04.  > Here are the
    >> relevant > lines in the file "reg-tests-1c.Rout.fail":
    >> 
    >> > > ## m1z uses match(x, *) with length(x) == 1 and
    >> failed in R 3.3.0 > > ## PR#16909 - a consequence of the
    >> match() bug; check here too: > > dv <- data.frame(var?1 =
    >> 1:3, var?2 = 3); dv[,"var?2"] <- 2 > Error: unexpected
    >> input in "dv <- data.frame(var<C3>" > Execution halted
    >> 
    >> > The attached patch uses escape sequences for all
    >> non-ASCII characters in > this test and performs pretty
    >> much the same check as the original > version, as far as
    >> I know. This fixes "make check" for me. The patched >
    >> check fails on R 3.3.0 as it should.
    >> 
    >> Thank you, Mikko!
    >> 
    >> This is ..hmm.. "interesting".  We have a few other
    >> non-ASCII characters in a few of the tests/*.R files and
    >> they don't seem to harm your checks; even reg-tests-1c.R
    >> contains some.
    >> 
    >> Also, the "Installation and Administration" R Manual
    >> mentions that some of the tests only run flawlessly if
    >> you are not using "unusual" locales.  So I am a bit
    >> puzzled that exactly this (new) test fails in your
    >> locale, but the others did not.

    > My quick check indicates that this was the only test with
    > non-ASCII characters in argument names. That might be the
    > crucial difference.

very good point, Mikko, thank you!
Indeed that error happens at *parse* time ... whereas using such
character in strings is considerably less problematic.

What are the results of my fix  (R-devel svn rev >= 70631)  ?

Martin


    >> 
    >> However, as I said, thank you indeed for diagnosing the
    >> problem and providing a patch working around it (and
    >> still checking the intended problem !!).  I'm applying
    >> the patch now ... so you'd continue to be one of our
    >> valuable pre-alpha/beta testers.
    >> 
    >> With best regards, Martin
    >> 
    >> 
    >> > Here is the output of "locale":
    >> 
    >> > LANG=en_GB > LANGUAGE=en_GB: > LC_CTYPE=fi_FI.UTF-8 >
    >> LC_NUMERIC="en_GB" > LC_TIME="en_GB" > LC_COLLATE="en_GB"
    >> > LC_MONETARY=fi_FI.UTF-8 > LC_MESSAGES="en_GB" >
    >> LC_PAPER="en_GB" > LC_NAME="en_GB" > LC_ADDRESS="en_GB" >
    >> LC_TELEPHONE="en_GB" > LC_MEASUREMENT="en_GB" >
    >> LC_IDENTIFICATION="en_GB" > LC_ALL=
    >> 
    >> > --
    >> > Mikko Korpela > Department of Geosciences and Geography
    >> > University of Helsinki
    >>


From maechler at stat.math.ethz.ch  Thu May 19 08:53:15 2016
From: maechler at stat.math.ethz.ch (Martin Maechler)
Date: Thu, 19 May 2016 08:53:15 +0200
Subject: [Rd] [patch] Error in reg-tests-1c.R (R-devel)
In-Reply-To: <22333.24917.824012.9733@stat.math.ethz.ch>
References: <573C3E64.9020803@helsinki.fi>
	<22332.18669.698735.837101@stat.math.ethz.ch>
	<573C4F7C.5060109@helsinki.fi>
	<22333.24917.824012.9733@stat.math.ethz.ch>
Message-ID: <22333.25307.449475.955051@stat.math.ethz.ch>

>>>>> "MM" == Martin Maechler <maechler at stat.math.ethz.ch>
>>>>>     on Thu, 19 May 2016 08:46:45 +0200 writes:

 [.....	  ]

    MM> What are the results of my fix (R-devel svn rev >= 70631) ?

Nonsense question! This is for another R-devel thread (where it
has been answered).  Sorry about the noise.

Martin


From maechler at stat.math.ethz.ch  Thu May 19 10:26:44 2016
From: maechler at stat.math.ethz.ch (Martin Maechler)
Date: Thu, 19 May 2016 10:26:44 +0200
Subject: [Rd] Latest R-devel build failing on OS X
In-Reply-To: <20160518220330.GA1621@ofb.net>
References: <70CBF2CD-1B4C-48CA-AFFD-E3F1DDBDC073@nyu.edu>
	<1771C0EE-8B59-4921-B648-60DB197824C2@gmail.com>
	<22332.40522.266571.404208@stat.math.ethz.ch>
	<25CBCECC-52C0-4228-978B-44BE848C7CF3@gmail.com>
	<604481D6-9DE0-49D1-89A6-41B8A8D537B7@gmail.com>
	<0C7F9946-4666-493C-BE88-5805B56902A5@gmail.com>
	<20160518220330.GA1621@ofb.net>
Message-ID: <22333.30916.298334.864817@stat.math.ethz.ch>

>>>>>   <frederik at ofb.net>
>>>>>     on Wed, 18 May 2016 15:03:31 -0700 writes:

    > Readline <= 6.2 shouldn't require the SIGWINCH patch, so
    > if older versions have trouble finding rl_resize_terminal
    > then you could wrap a macro around that part.

I find python related patches that use

#ifdef HAVE_RL_RESIZE_TERMINAL

so they must have configured for that.  We could and probably
should do the same,  but as a Linux_only guy currently (even
basically only one flavor of Linux), I'd appreciate others to
produce code for that.

    > The isearch C-c bug has existed forever, according to Chet Ramey.

I see.  As your patch seems to only work for readline (>=) 6.3,
we have solved part of the problems.
If those who use olders readlines are willing to test and
provide (well looking, as yours) patches for earlier versions,
they should be welcome too.



    > Yes, I had to retrain myself to use C-g to exit
    > isearch but it's confusing.  It would be nice to fix this
    > C-c bug on older versions too, but my solution used some
    > global variables and I'm not sure which Readline version
    > they date from.

    > Out of curiosity, did you delete the
    > HAVE_READLINE_READLINE_H block?

Not yet...I've even kept your suggestion about it in the
source comments.
Note you can always point your web browser at
  https://svn.r-project.org/trunk/R/  which contains upto the
minute current R development sources (it *is* our apache based
subversion server), i.e., the file in this case is
  https://svn.r-project.org/trunk/R/src/unix/sys-std.c

{or you can use the github *mirror* of the svn server which provides
 version/revision/log etc  ((this be available for svn as well,
 but we (I) had chosen not to provide (via apache modules) just
 to keep our server as bare bones as possible and  hence less
 vulnerable to viciousities))
}
 
    > Thanks so much for working this out!
    > Frederick

    > P.S. I do use Emacs too, but I have some bindings which
    > stuff the current region into a numbered 'GNU screen'
    > window (where R is running) - I was never a fan of
    > inferior Emacs processes. Also a keybinding which stuffs
    > "source('CURRENT_FILE')\n". And a rxvt-unicode
    > 'url-select' extension which copies text after a "> "
    > prompt, to get commands I edited back into Emacs. That's
    > why I still use the basic interface.

    > On Wed, May 18, 2016 at 10:58:59PM +0200, peter dalgaard
    > wrote:
    >> Spoke too soon, both systems now build, but neither has
    >> the original bugs fixed....
    >> 
    >> (Incidentally, I realized why the ctl-R...ctl-C bug never
    >> bit me: The emacs habit is to exit isearch with ctl-G and
    >> that works flawlessly.)
    >> 
    >> -pd
    >> 
    >> > On 18 May 2016, at 22:40 , peter dalgaard
    >> <pdalgd at gmail.com> wrote:
    >> > 
    >> > Ah, got it. For some ancient reason config.site on that
    >> machine had
    >> > 
    >> > LDFLAGS=-L/usr/X11R6/lib
    >> > 
    >> > in config.site, and that prevented configure from
    >> inserting -L /usr/local/lib, so linked
    >> /usr/lib/libreadline.dylib, which is the Apple-supplied
    >> one, which possibly is really libedit...
    >> > 
    >> > -p
    >> > 
    >> > 
    >> >> On 18 May 2016, at 22:01 , peter dalgaard
    >> <pdalgd at gmail.com> wrote:
    >> >> 
    >> >> gcc -L/usr/X11R6/lib -o R.bin Rmain.o
    >> CommandLineArgs.o Rdynload.o Renviron.o RNG.o agrep.o
    >> apply.o arithmetic.o array.o attrib.o bind.o builtin.o
    >> character.o coerce.o colors.o complex.o connections.o
    >> context.o cum.o dcf.o datetime.o debug.o deparse.o
    >> devices.o dotcode.o dounzip.o dstruct.o duplicate.o
    >> edit.o engine.o envir.o errors.o eval.o format.o
    >> gevents.o gram.o gram-ex.o graphics.o grep.o identical.o
    >> inlined.o inspect.o internet.o iosupport.o lapack.o
    >> list.o localecharset.o logic.o main.o mapply.o match.o
    >> memory.o names.o objects.o options.o paste.o platform.o
    >> plot.o plot3d.o plotmath.o print.o printarray.o
    >> printvector.o printutils.o qsort.o radixsort.o random.o
    >> raw.o registration.o relop.o rlocale.o saveload.o scan.o
    >> seq.o serialize.o sort.o source.o split.o sprintf.o
    >> startup.o subassign.o subscript.o subset.o summary.o
    >> sysutils.o times.o unique.o util.o version.o g_alab_her.o
    >> g_cntrlify.o g_fontdb.o g_her_glyph.o xxxpr.o `ls
    >> ../unix/*.o ../appl/*.o ../nmath/*.o`
    >> ../extra/tre/libtre.a ../extra/intl/libintl.a
    >> ../extra/tzone/libtz.a -L../../lib/x86_64 -lRblas
    >> -L/usr/lib/gcc/i686-apple-darwin11/4.2.1/x86_64
    >> -L/usr/lib/gcc/i686-apple-darwin11/4.2.1 -L/usr/lib
    >> -lgfortran -Wl,-framework -Wl,CoreFoundation -lreadline
    >> -lpcre -llzma -lbz2 -lz -licucore -lm -llzma -liconv >>
    >> Undefined symbols for architecture x86_64: >>
    >> "_rl_resize_terminal", referenced from: >>
    >> _Rstd_ReadConsole in sys-std.o >> ld: symbol(s) not found
    >> for architecture x86_64 >> clang: error: linker command
    >> failed with exit code 1 (use -v to see invocation) >>
    >> make[3]: *** [R.bin] Error 1 >> make[2]: *** [R] Error 2
    >> >> make[1]: *** [R] Error 1 >> make: *** [R] Error 1
    >> >> 
    >> >> and the MBAir still builds...
    >> >> 
    >> >> Confused!,
    >> >> 
    >> >> -pd
    >> > 
    >> > -- 
    >> > Peter Dalgaard, Professor, > Center for Statistics,
    >> Copenhagen Business School > Solbjerg Plads 3, 2000
    >> Frederiksberg, Denmark > Phone: (+45)38153501 > Office: A
    >> 4.23 > Email: pd.mes at cbs.dk Priv: PDalgd at gmail.com
    >> > 
    >> > 
    >> > 
    >> > 
    >> > 
    >> > 
    >> > 
    >> > 
    >> > 
    >> 
    >> -- 
    >> Peter Dalgaard, Professor, Center for Statistics,
    >> Copenhagen Business School Solbjerg Plads 3, 2000
    >> Frederiksberg, Denmark Phone: (+45)38153501 Office: A
    >> 4.23 Email: pd.mes at cbs.dk Priv: PDalgd at gmail.com
    >> 
    >> 
    >> 
    >> 
    >> 
    >> 
    >> 
    >> 
    >>


From maechler at stat.math.ethz.ch  Thu May 19 11:02:48 2016
From: maechler at stat.math.ethz.ch (Martin Maechler)
Date: Thu, 19 May 2016 11:02:48 +0200
Subject: [Rd] Latest R-devel build failing on OS X
In-Reply-To: <22333.30916.298334.864817@stat.math.ethz.ch>
References: <70CBF2CD-1B4C-48CA-AFFD-E3F1DDBDC073@nyu.edu>
	<1771C0EE-8B59-4921-B648-60DB197824C2@gmail.com>
	<22332.40522.266571.404208@stat.math.ethz.ch>
	<25CBCECC-52C0-4228-978B-44BE848C7CF3@gmail.com>
	<604481D6-9DE0-49D1-89A6-41B8A8D537B7@gmail.com>
	<0C7F9946-4666-493C-BE88-5805B56902A5@gmail.com>
	<20160518220330.GA1621@ofb.net>
	<22333.30916.298334.864817@stat.math.ethz.ch>
Message-ID: <22333.33080.885593.770604@stat.math.ethz.ch>

>>>>> Martin Maechler <maechler at stat.math.ethz.ch>
>>>>>     on Thu, 19 May 2016 10:26:44 +0200 writes:

>>>>>   <frederik at ofb.net>
>>>>>     on Wed, 18 May 2016 15:03:31 -0700 writes:

    >> Readline <= 6.2 shouldn't require the SIGWINCH patch, so
    >> if older versions have trouble finding rl_resize_terminal
    >> then you could wrap a macro around that part.

    > I find python related patches that use

    > #ifdef HAVE_RL_RESIZE_TERMINAL

    > so they must have configured for that.  We could and
    > probably should do the same, but as a Linux_only guy
    > currently (even basically only one flavor of Linux), I'd
    > appreciate others to produce code for that.

Actually that was easy (in hindsight.. I took too long!)
enough, so I've now committed

------------------------------------------------------------------------
r70632 | maechler | 2016-05-19 10:59:51 +0200 (Thu, 19 May 2016) | 1 line
Changed paths:
   M configure
   M configure.ac
   M src/include/config.h.in
   M src/unix/sys-std.c

check for rl_resize_terminal() now
------------------------------------------------------------------------

... and Keith should even not see the warning anymore
(nor Peter the error, when compiling using readline 5.x instead of 6.[23]).



    >> The isearch C-c bug has existed forever, according to
    >> Chet Ramey.

    > I see.  As your patch seems to only work for readline (>=)
    > 6.3, we have solved part of the problems.  If those who
    > use olders readlines are willing to test and provide (well
    > looking, as yours) patches for earlier versions, they
    > should be welcome too.



    >> Yes, I had to retrain myself to use C-g to exit isearch
    >> but it's confusing.  It would be nice to fix this C-c bug
    >> on older versions too, but my solution used some global
    >> variables and I'm not sure which Readline version they
    >> date from.

    >> Out of curiosity, did you delete the
    >> HAVE_READLINE_READLINE_H block?

    > Not yet...I've even kept your suggestion about it in the
    > source comments.  Note you can always point your web
    > browser at https://svn.r-project.org/trunk/R/ which
    > contains upto the minute current R development sources (it
    > *is* our apache based subversion server), i.e., the file
    > in this case is
    > https://svn.r-project.org/trunk/R/src/unix/sys-std.c

    > {or you can use the github *mirror* of the svn server
    > which provides version/revision/log etc ((this be
    > available for svn as well, but we (I) had chosen not to
    > provide (via apache modules) just to keep our server as
    > bare bones as possible and hence less vulnerable to
    > viciousities)) }


From venkat.architect at gmail.com  Fri May 20 12:15:11 2016
From: venkat.architect at gmail.com (Venkat Ramakrishnan)
Date: Fri, 20 May 2016 15:45:11 +0530
Subject: [Rd] [R] R-3.3.0 Base: Windows compilation fails while building
	'base' package
In-Reply-To: <CABFfbXsN2EUT9f0K-PvTnSQi94MQb3XEYnxqdffDqu4+c+VAHQ@mail.gmail.com>
References: <CAErxogEB9ZKcz5j4Wgr8f+3+OxDg+X+U1TiimsF5YECrc1k1FA@mail.gmail.com>
	<CABFfbXsN2EUT9f0K-PvTnSQi94MQb3XEYnxqdffDqu4+c+VAHQ@mail.gmail.com>
Message-ID: <CAErxogG2M4apPrYXKtVujowuPG=CXravm54=634FykTz43FtLg@mail.gmail.com>

Thanks Jeroen. Yes, that's right. It works. Appreciate your help.

The next blockage is during linking the TCL and TK libraries
which fail with the following errors :

gcc -m64 -shared -s -static-libgcc -o tcltk.dll tmp.def init.o tcltk.o
tcltk_win
.o ../../../gnuwin32/dllversion.o -L../../../../Tcl/bin64 -ltcl85 -ltk85
-LD:/R6
4/R-3.3.0/extsoft/lib/x64 -LD:/R64/R-3.3.0/extsoft/lib
-L../../../../bin/x64 -lR

d:/rtools/gcc-4.6.3/bin/../lib/gcc/i686-w64-mingw32/4.6.3/../../../../i686-w64-m
ingw32/bin/ld.exe: cannot find -ltcl85 <----------------
d:/rtools/gcc-4.6.3/bin/../lib/gcc/i686-w64-mingw32/4.6.3/../../../../i686-w64-m
ingw32/bin/ld.exe: cannot find -ltk85 <-------------------
collect2: ld returned 1 exit status
cp: cannot stat 'tcltk.dll': No such file or directory
make[4]: *** [shlib] Error 1
make[3]: *** [mksrc-win2] Error 1
make[2]: *** [all] Error 2
make[1]: *** [R] Error 1
make: *** [all] Error 2

I have my TCL/TK files under D:\TCL and the tcl85.dll and tk85.dll are
present
under D:\TCL\BIN64 directory.  I have D:\TCL\BIN64 in both user and system
paths.

I did try configuring LD_LIBRARY_PATH (Yes, I know it's only for unix but
just in case)
to D:\TCL\BIN64 and that didn't work either.

What else do I need to do ?

(Also, note that I got multiple errors in .h files not being able to be
included
(for example, lzma.h), for which I manually edited the header files and
pointed
the absolute directory/filename wherever required.)

Not sure if these are all documented somewhere as tips, so that folks can
go through
in case of issues. Going through archives is tedious.

Thx,
Venkat.




On Tue, May 17, 2016 at 12:31 PM, Jeroen Ooms <jeroen.ooms at stat.ucla.edu>
wrote:

> On Tue, May 17, 2016 at 5:32 AM, Venkat Ramakrishnan
> <venkat.architect at gmail.com> wrote:
> > I am running the make from my D:\ partition, and I have created a \TMP
> > directory
> > under both C:\ and D:\.  I have also modified my environment variables
> TEMP
> > and TMP both point to C:\TMP.
>
> I think you actually need to set the 'TMPDIR' variable.
>

	[[alternative HTML version deleted]]


From mick.jordan at oracle.com  Fri May 20 21:40:44 2016
From: mick.jordan at oracle.com (Mick Jordan)
Date: Fri, 20 May 2016 12:40:44 -0700
Subject: [Rd] identical on closures
Message-ID: <573F683C.6070904@oracle.com>

I'm confused by this:

 > identical(function() {}, function() {})
[1] FALSE

Yet, after loading the Matrix package (which redefines det), the 
following is checked (in library.checkConflicts):

 > identical(get("det", baseenv()), get("det", asNamespace("Matrix")), 
ignore.environment=T)
[1] TRUE

I've looked at the code in identical.c and for closures it seems to 
compare the FORMALS and the BODY_EXPR, so why does the first example not 
return TRUE as surely the formals and body are identical?

     case CLOSXP:
     return(R_compute_identical(FORMALS(x), FORMALS(y), flags) &&
            R_compute_identical(BODY_EXPR(x), BODY_EXPR(y), flags) &&
            (IGNORE_ENV || CLOENV(x) == CLOENV(y) ? TRUE : FALSE) &&
            (IGNORE_BYTECODE || R_compute_identical(BODY(x), BODY(y), 
flags))
            );

R-3.2.4, Mac OS X El Capitan

Thanks
Mick Jordan


From mick.jordan at oracle.com  Fri May 20 22:49:19 2016
From: mick.jordan at oracle.com (Mick Jordan)
Date: Fri, 20 May 2016 13:49:19 -0700
Subject: [Rd] identical on closures
In-Reply-To: <573F683C.6070904@oracle.com>
References: <573F683C.6070904@oracle.com>
Message-ID: <573F784F.5040704@oracle.com>

On 5/20/16 12:40 PM, Mick Jordan wrote:
> I'm confused by this:
>
> > identical(function() {}, function() {})
> [1] FALSE
>
> Yet, after loading the Matrix package (which redefines det), the 
> following is checked (in library.checkConflicts):
>
> > identical(get("det", baseenv()), get("det", asNamespace("Matrix")), 
> ignore.environment=T)
> [1] TRUE
>
> I've looked at the code in identical.c and for closures it seems to 
> compare the FORMALS and the BODY_EXPR, so why does the first example 
> not return TRUE as surely the formals and body are identical?
>
>     case CLOSXP:
>     return(R_compute_identical(FORMALS(x), FORMALS(y), flags) &&
>            R_compute_identical(BODY_EXPR(x), BODY_EXPR(y), flags) &&
>            (IGNORE_ENV || CLOENV(x) == CLOENV(y) ? TRUE : FALSE) &&
>            (IGNORE_BYTECODE || R_compute_identical(BODY(x), BODY(y), 
> flags))
>            );
>
> R-3.2.4, Mac OS X El Capitan 
Ok, I figured it out, but this is VERY unintuitive IMHO:

 > identical(attributes(function() {}), attributes(function() {}))
[1] FALSE
 >

The srcref attribute (obviously) differs.

Mick Jordan


From gmbecker at ucdavis.edu  Fri May 20 23:00:02 2016
From: gmbecker at ucdavis.edu (Gabriel Becker)
Date: Fri, 20 May 2016 14:00:02 -0700
Subject: [Rd] identical on closures
In-Reply-To: <573F784F.5040704@oracle.com>
References: <573F683C.6070904@oracle.com>
	<573F784F.5040704@oracle.com>
Message-ID: <CADwqtCPXRLFAOMABi3n-CFk4kGZ7nEX9YXNwMhYrkJjg0c9bLA@mail.gmail.com>

Specifically, the srcfile attribute of the srcref attribute of the two
instances of the functions contain different environments, AFAICT.
Environments are compared only by exact pointer, so this forces return
FALSE.

Snippets from .Internal(inspect(x)) and .Internal(inspect(y)):

@cca008 03 CLOSXP g0c0 [MARK,NAM(2),ATT]
FORMALS:
  @604b58 00 NILSXP g0c0 [MARK,NAM(2)]
BODY:
  @cc9650 06 LANGSXP g0c0 [MARK,ATT]
    @604998 01 SYMSXP g0c0 [MARK,LCK,gp=0x5000] "{" (has value)
  ATTRIB:
    @cc9570 02 LISTSXP g0c0 [MARK]
      TAG: @60dd70 01 SYMSXP g0c0 [MARK,LCK,gp=0x4000] "srcref" (has value)
      @15a65d8 19 VECSXP g0c1 [MARK] (len=1, tl=0)
    @10f3dd0 13 INTSXP g0c3 [OBJ,MARK,ATT] (len=8, tl=0) 1,15,1,15,15,...
    ATTRIB:
      @cc9618 02 LISTSXP g0c0 [MARK]
        TAG: @60dde0 01 SYMSXP g0c0 [MARK,NAM(2),LCK,gp=0x4000]
*"srcfile" *(has
value)
        *@cc97d8* 04 *ENVSXP* g0c0 [OBJ,MARK,NAM(2),ATT] <0xcc97d8>




@cca8a8 03 CLOSXP g0c0 [MARK,NAM(2),ATT]
FORMALS:
  @604b58 00 NILSXP g0c0 [MARK,NAM(2)]
BODY:
  @cc9eb8 06 LANGSXP g0c0 [MARK,ATT]
    @604998 01 SYMSXP g0c0 [MARK,LCK,gp=0x5000] "{" (has value)
  ATTRIB:
    @cc9da0 02 LISTSXP g0c0 [MARK]
      TAG: @60dd70 01 SYMSXP g0c0 [MARK,LCK,gp=0x4000] "srcref" (has value)
      @15a6488 19 VECSXP g0c1 [MARK] (len=1, tl=0)
    @10f3c68 13 INTSXP g0c3 [OBJ,MARK,ATT] (len=8, tl=0) 1,15,1,15,15,...
    ATTRIB:
      @cc9e80 02 LISTSXP g0c0 [MARK]
        TAG: @60dde0 01 SYMSXP g0c0 [MARK,NAM(2),LCK,gp=0x4000] *"srcfile"*
(has value)
       * @cc9ef0* 04 *ENVSXP* g0c0 [OBJ,MARK,NAM(2),ATT] <0xcc9ef0>


~G

On Fri, May 20, 2016 at 1:49 PM, Mick Jordan <mick.jordan at oracle.com> wrote:

> On 5/20/16 12:40 PM, Mick Jordan wrote:
>
>> I'm confused by this:
>>
>> > identical(function() {}, function() {})
>> [1] FALSE
>>
>> Yet, after loading the Matrix package (which redefines det), the
>> following is checked (in library.checkConflicts):
>>
>> > identical(get("det", baseenv()), get("det", asNamespace("Matrix")),
>> ignore.environment=T)
>> [1] TRUE
>>
>> I've looked at the code in identical.c and for closures it seems to
>> compare the FORMALS and the BODY_EXPR, so why does the first example not
>> return TRUE as surely the formals and body are identical?
>>
>>     case CLOSXP:
>>     return(R_compute_identical(FORMALS(x), FORMALS(y), flags) &&
>>            R_compute_identical(BODY_EXPR(x), BODY_EXPR(y), flags) &&
>>            (IGNORE_ENV || CLOENV(x) == CLOENV(y) ? TRUE : FALSE) &&
>>            (IGNORE_BYTECODE || R_compute_identical(BODY(x), BODY(y),
>> flags))
>>            );
>>
>> R-3.2.4, Mac OS X El Capitan
>>
> Ok, I figured it out, but this is VERY unintuitive IMHO:
>
> > identical(attributes(function() {}), attributes(function() {}))
> [1] FALSE
> >
>
> The srcref attribute (obviously) differs.
>
>
> Mick Jordan
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>



-- 
Gabriel Becker, PhD
Associate Scientist (Bioinformatics)
Genentech Research

	[[alternative HTML version deleted]]


From mick.jordan at oracle.com  Fri May 20 23:23:13 2016
From: mick.jordan at oracle.com (Mick Jordan)
Date: Fri, 20 May 2016 14:23:13 -0700
Subject: [Rd] identical on closures
In-Reply-To: <CADwqtCPXRLFAOMABi3n-CFk4kGZ7nEX9YXNwMhYrkJjg0c9bLA@mail.gmail.com>
References: <573F683C.6070904@oracle.com> <573F784F.5040704@oracle.com>
	<CADwqtCPXRLFAOMABi3n-CFk4kGZ7nEX9YXNwMhYrkJjg0c9bLA@mail.gmail.com>
Message-ID: <573F8041.3040504@oracle.com>

On 5/20/16 2:00 PM, Gabriel Becker wrote:
> Specifically, the srcfile attribute of the srcref attribute of the two 
> instances of the functions contain different environments, AFAICT. 
> Environments are compared only by exact pointer, so this forces return 
> FALSE.
>
>
Thanks, and I realized that attributes(f) <- NULL does not help as the 
srcref attribute is on the body components.

Mick


From luckbuttered at gmail.com  Sat May 21 22:25:10 2016
From: luckbuttered at gmail.com (Luck Buttered)
Date: Sat, 21 May 2016 15:25:10 -0500
Subject: [Rd] Submitting an updated package version to CRAN (Warning:
	non-ASCII characters)
Message-ID: <CAGRPoRQ7m-L6+hp3-nB++YNneJpM-xusTcpy68Yp0_TM=OAuOw@mail.gmail.com>

Dear all:

I am updating the version of an R package I submitted last year on CRAN and
came across two questions that I would be grateful to seek any input about:

1) In the updated version of the package, I am adding a second example
dataset. This example dataset is a subset of a public database that
contains thousands of names. Upon running devtools::check(), I am only
getting one warning. ("Warning: found non-ASCII strings").

It seems this warning is coming from special characters in some of the
names. As it is ideal that the names should not be altered, I did not know
what approach to take. Should I simply include a note in my CRAN submission
indicating that the non-ASCII characters are meaningfully inherent to the
example data? Or, should I convert the names to ASCII characters (if that
is easily possible for so many cases), and indicate to users that names
have been altered (special characters removed)?

2) I have never submitted an updated version of a package to CRAN. I am
considering following a similar process to what I did to submit my original
version of the package to CRAN. That is, using devtools::release() and
including a note in a file called cran-comments.md to indicate that this is
not an original version submission, but rather, an updated version
submission. I found these advice on Hadley Wickhams site (
http://r-pkgs.had.co.nz/release.html), but could not determine if this was
appropriate for version update submissions as well.

Thank you for sharing any advice!

	[[alternative HTML version deleted]]


From maechler at stat.math.ethz.ch  Mon May 23 09:24:40 2016
From: maechler at stat.math.ethz.ch (Martin Maechler)
Date: Mon, 23 May 2016 09:24:40 +0200
Subject: [Rd] identical on closures
In-Reply-To: <573F8041.3040504@oracle.com>
References: <573F683C.6070904@oracle.com> <573F784F.5040704@oracle.com>
	<CADwqtCPXRLFAOMABi3n-CFk4kGZ7nEX9YXNwMhYrkJjg0c9bLA@mail.gmail.com>
	<573F8041.3040504@oracle.com>
Message-ID: <22338.45112.319937.15060@stat.math.ethz.ch>

>>>>> Mick Jordan <mick.jordan at oracle.com>
>>>>>     on Fri, 20 May 2016 14:23:13 -0700 writes:

    > On 5/20/16 2:00 PM, Gabriel Becker wrote:
    >> Specifically, the srcfile attribute of the srcref
    >> attribute of the two instances of the functions contain
    >> different environments, AFAICT.  Environments are
    >> compared only by exact pointer, so this forces return
    >> FALSE.

well, we had the  'ignore.environment'  optional argument
introduced exactly for these situations.

    > Thanks, and I realized that attributes(f) <- NULL does not
    > help as the srcref attribute is on the body components.

    > Mick

So, you have solved the puzzle now.

I agree that the current situation is not satisfactory.

One could use  all.equal(.,.)  and probably should in some
cases, but that builds on deparse() which ignores the
environment forcibly and also is not fast .. one of the properties
identical() was designed to have.

Clearly, we had introduced both the 'ignore.environment' and the
'ignore.bytcode' arguments to make identical() comparisons of
closures flexible and versatile.
But the later advent of the (sophisticated version of the)
srcref attribute has made simple use of identical() for closures
cumbersome and unintuitive for the average useR.

I think we should consider a new  'ignore.srcref' argument and
even consider using 'TRUE" as its default.

Martin


From ripley at stats.ox.ac.uk  Mon May 23 10:46:46 2016
From: ripley at stats.ox.ac.uk (Prof Brian Ripley)
Date: Mon, 23 May 2016 09:46:46 +0100
Subject: [Rd] Submitting an updated package version to CRAN (Warning:
 non-ASCII characters)
In-Reply-To: <CAGRPoRQ7m-L6+hp3-nB++YNneJpM-xusTcpy68Yp0_TM=OAuOw@mail.gmail.com>
References: <CAGRPoRQ7m-L6+hp3-nB++YNneJpM-xusTcpy68Yp0_TM=OAuOw@mail.gmail.com>
Message-ID: <1f8e8a28-03f5-dcab-405c-cd52bf00d331@stats.ox.ac.uk>

On 21/05/2016 21:25, Luck Buttered wrote:
> Dear all:
>
> I am updating the version of an R package I submitted last year on CRAN and
> came across two questions that I would be grateful to seek any input about:
>
> 1) In the updated version of the package, I am adding a second example
> dataset. This example dataset is a subset of a public database that
> contains thousands of names. Upon running devtools::check(), I am only
> getting one warning. ("Warning: found non-ASCII strings").
>
> It seems this warning is coming from special characters in some of the
> names. As it is ideal that the names should not be altered, I did not know
> what approach to take. Should I simply include a note in my CRAN submission
> indicating that the non-ASCII characters are meaningfully inherent to the
> example data? Or, should I convert the names to ASCII characters (if that
> is easily possible for so many cases), and indicate to users that names
> have been altered (special characters removed)?

You should follow the advice of the manual: 
https://cran.r-project.org/doc/manuals/r-release/R-exts.html#Encoding-issues 
.  There is not enough detail here to know what you currently do (let 
alone what you should do), but that message indicates that the encoding 
of non-ASCII stings (what you call 'special characters') has not been 
declared (and to be portable they should be in UTF-8).

> 2) I have never submitted an updated version of a package to CRAN. I am
> considering following a similar process to what I did to submit my original
> version of the package to CRAN. That is, using devtools::release() and
> including a note in a file called cran-comments.md to indicate that this is
> not an original version submission, but rather, an updated version
> submission. I found these advice on Hadley Wickhams site (
> http://r-pkgs.had.co.nz/release.html), but could not determine if this was
> appropriate for version update submissions as well.

There is a list for discussing package preparation, r-package-devel.

> Thank you for sharing any advice!



-- 
Brian D. Ripley,                  ripley at stats.ox.ac.uk
Emeritus Professor of Applied Statistics, University of Oxford


From maechler at stat.math.ethz.ch  Mon May 23 18:06:52 2016
From: maechler at stat.math.ethz.ch (Martin Maechler)
Date: Mon, 23 May 2016 18:06:52 +0200
Subject: [Rd] complex NA's match(),
	etc: not back-compatible change proposal
In-Reply-To: <482508074.1624501.1463157185695.JavaMail.yahoo@mail.yahoo.com>
References: <482508074.1624501.1463157185695.JavaMail.yahoo.ref@mail.yahoo.com>
	<482508074.1624501.1463157185695.JavaMail.yahoo@mail.yahoo.com>
Message-ID: <22339.10908.52383.464263@stat.math.ethz.ch>

>>>>> Suharto Anggono Suharto Anggono via R-devel <r-devel at r-project.org>
>>>>>     on Fri, 13 May 2016 16:33:05 +0000 writes:

    > That, for example, complex(real=NaN) and complex(imaginary=NaN) are regarded as equal makes it possible that 

    >  length(unique(as.character(x))) > length(unique(x)) 

    > (current code of function 'factor' doesn't expect it). 

Thank you, that is an interesting remark - but is already true,
in earlier versions of R !

.. and of course this is because we do *print*   0+NaNi  etc,
i.e., we differentiate the  non-NA-but-NaN complex values in
formatting / printing but not in match(), unique() ...

and indeed, with the  'z'  example below,
  fz <- factor(z,z)
gives a warnings about duplicated levels and gives such warnings
also in current (and previous) versions of R, at least for the slightly
larger z  I've used in the tests/reg-tests-1c.R example.

For the moment I can live with that warning, as I don't think
factor()s are constructed from complex numbers "often"...
and the performance of factor() in the more regular cases is important.

> Yes, an argument for the behavior is that NA and NaN are of one kind.
> On my system, using 32-bit R for Windows from binary from CRAN, the result of sapply(z, match, table = z) (not in current R-devel) may be different from below:
    > 1 2 3 4 1 3 7 8 2 4 8 12  # R 2.10.1, different from below
    > 1 2 3 4 1 3 7 8 2 4 8 12  # R 3.2.5, different from below

interesting, thank you... and another reason why the change
(currently only in R-devel) may have been a good one: More uniformity.

    > I noticed that, by function 'cequal' in unique.c, a complex number that has both NA and NaN matches NA and also matches NaN.

    >> x0 <- c(0,1, NA, NaN); z <- outer(x0,x0, complex, length.out=1); rm(x0)
    >> (z <- z[is.na(z)])
    > [1]       NA NaN+  0i       NA NaN+  1i       NA       NA       NA       NA
    > [9]   0+NaNi   1+NaNi       NA NaN+NaNi

    >> sapply(z, match, table = z[8])
    > [1] 1 1 1 1 1 1 1 1 1 1 1 1
    >> match(z, z[8])
    > [1] 1 1 1 1 1 1 1 1 1 1 1 1

Yes, I see the same. But is n't it what we expect:

All of our z[] entries has at least one NA or a NaN in its real
or imaginary, and since z[8] has both, it does match with all
z[]'s either because of the NA or because of the NaN in common.

Hence, currently, I don't think this needs to be changed...
but if there are other reasons / arguments ...

Thank you again,
Martin Maechler


    >> sessionInfo()
    > R Under development (unstable) (2016-05-12 r70604)
    > Platform: i386-w64-mingw32/i386 (32-bit)
    > Running under: Windows XP (build 2600) Service Pack 2

    > locale:
    > [1] LC_COLLATE=English_United States.1252
    > [2] LC_CTYPE=English_United States.1252
    > [3] LC_MONETARY=English_United States.1252
    > [4] LC_NUMERIC=C
    > [5] LC_TIME=English_United States.1252

    > attached base packages:
    > [1] stats     graphics  grDevices utils     datasets  methods   base

    > -----------------
>>>>> Martin Maechler <maechler at stat.math.ethz.ch>
>>>>>     on Tue, 10 May 2016 16:08:39 +0200 writes:

    >> This is an RFC / announcement related to the 2nd part of PR#16885
    >> https://bugs.r-project.org/bugzilla/show_bug.cgi?id=16885
    >> about  complex NA's.

    >> The (somewhat rare) incompatibility in R's 3.3.0 match() behavior for the
    >> case of complex numbers with NA & NaN's {which has been fixed for R 3.3.0
    >> patched in the mean time} triggered some more comprehensive "research".

    >> I found that we have had a long-standing inconsistency at least between the
    >> documented and the real behavior.  I am claiming that the documented
    >> behavior is desirable and hence R's current "real" behavior is bugous, and
    >> I am proposing to change it, in R-devel (to be 3.4.0) for now.

    > After the  "roaring unanimous" assent  (one private msg
    > encouraging me to go forward, no dissenting voice, hence an
    > "odds ratio" of  +Inf  in favor ;-)

    > I have now committed my proposal to R-devel (svn rev. 70597) and
    > some of us will be seeing the effect in package space within a
    > day or so, in the CRAN checks against R-devel (not for
    > bioconductor AFAIK; their checks using R-devel only when it less
    > than ca 6 months from release).

    > It's still worthwhile to discuss the issue, if you come late
    > to it, notably as ---paraphrasing Dirk on the R-package-devel list---
    > the release of 3.4.0 is almost a year away, and so now is the
    > best time to tinker with the API, in other words, consider breaking
    > rarely used legacy APIs..

    > Martin


    >> In help(match) we have been saying

    >> |  Exactly what matches what is to some extent a matter of definition.
    >> |  For all types, \code{NA} matches \code{NA} and no other value.
    >> |  For real and complex values, \code{NaN} values are regarded
    >> |  as matching any other \code{NaN} value, but not matching \code{NA}.

    >> for at least 10 years.  But we don't do that at all in the
    >> complex case (and AFAIK never got a bug report about it).

    >> Also, e.g., print(.) or format(.) do simply use  "NA" for all
    >> the different complex NA-containing numbers, where OTOH,
    >> non-NA NaN's { <=>  !is.nan(z) & is.na(z) }
    >> in format() or print() do show the NaN in real and/or imaginary
    >> parts; for an example, look at the "format" column of the matrix
    >> below, after 'print(cbind' ...

    >> The current match()---and duplicated(), unique() which are based on the same
    >> C code---*do* distinguish almost all complex NA / NaN's which is
    >> NOT according to documentation. I have found that this is just because of 
    >> of our hashing function for the complex case, chash() in R/src/main/unique.c,
    >> is bogous in the sense that it is not compatible with the above documentation
    >> and also not with the cequal() function (in the same file uniqu.c) for checking
    >> equality of complex numbers.

    >> As I have found,, a *simplified* version of the chash() function
    >> to make it compatible with cequal() does solve all the problems I've
    >> indicated,  and the current plan is to commit that change --- after some
    >> discussion time, here on R-devel ---  to the code base.

    >> My change passes  'make check-all' fine, but I'm 100% sure that there will
    >> be effects in package-space. ... one reason for this posting.

    >> As mentioned above, note that the chash() function has been in
    >> use for all three functions
    >> match()
    >> duplicated()
    >> unique()
    >> and the change will affect all three --- but just for the case of complex
    >> vectors with NA or NaN's.

    >> To show more, a small R session -- using my version of R-devel
    >> == the proposition: 
    >> The R script ('complex-NA-short.R') for (a bit more than) the
    >> session is attached {{you can attach  text/plain easily}}:

    >>> x0 <- c(0,1, NA, NaN); z <- outer(x0,x0, complex, length.out=1); rm(x0)
    >>> ##           --- = NA_real_  but that does not exist e.g., in R 2.3.1
    >>> ##                   similarly,  '1L', '2L', .. do not exist e.g., in R 2.3.1
    >>> (z <- z[is.na(z)])
    >> [1]       NA NaN+  0i       NA NaN+  1i       NA       NA       NA       NA
    >> [9]   0+NaNi   1+NaNi       NA NaN+NaNi
    >>> outerID <- function(x,y, ...) { ## ugly; can we get outer() to work ?
    >> +     r <- matrix( , length(x), length(y))
    >> +     for(i in seq(along=x))
    >> +         for(j in seq(along=y))
    >> +             r[i,j] <- identical(z[i], z[j], ...)
    >> +     r
    >> + }
    >>> ## Very strictly - in the sense of identical() -- these 12 complex numbers all differ:
    >>> ## a version that works in older versions of R, where identical() had fewer arguments!
    >>> outerID.picky <- function(x,y) {
    >> +     nF <- length(formals(identical)) - 2
    >> +     do.call("outerID", c(list(x, y), as.list(rep(FALSE, nF))))
    >> + }
    >>> oldR <- !exists("getRversion") || getRversion() < "3.0.0" ## << FIXME: 3.0.0 is  a wild guess
    >>> symnum(id.z <- outerID.picky(z,z)) ## == Diagonal matrix [newer versions of R]
                             
    >> [1,] | . . . . . . . . . . .
    >> [2,] . | . . . . . . . . . .
    >> [3,] . . | . . . . . . . . .
    >> [4,] . . . | . . . . . . . .
    >> [5,] . . . . | . . . . . . .
    >> [6,] . . . . . | . . . . . .
    >> [7,] . . . . . . | . . . . .
    >> [8,] . . . . . . . | . . . .
    >> [9,] . . . . . . . . | . . .
    >> [10,] . . . . . . . . . | . .
    >> [11,] . . . . . . . . . . | .
    >> [12,] . . . . . . . . . . . |
    >>> try(# for older R versions
    >> + stopifnot(identical(id.z, outerID(z,z)), oldR || identical(id.z, diag(12) == 1))
    >> + )
    >>> (mz <- match(z, z)) # currently different {NA,NaN} patterns differ - not in print()/format() _FIXME_
    >> [1] 1 2 1 2 1 1 1 1 2 2 1 2
    >>> zRI <- rbind(Re=Re(z), Im=Im(z)) # and see the pattern :
    >>> print(cbind(format = format(z), t(zRI), mz), quote=FALSE)
    >> format   Re   Im   mz
    >> [1,]       NA <NA> 0    1 
    >> [2,] NaN+  0i NaN  0    2 
    >> [3,]       NA <NA> 1    1 
    >> [4,] NaN+  1i NaN  1    2 
    >> [5,]       NA 0    <NA> 1 
    >> [6,]       NA 1    <NA> 1 
    >> [7,]       NA <NA> <NA> 1 
    >> [8,]       NA NaN  <NA> 1 
    >> [9,]   0+NaNi 0    NaN  2 
    >> [10,]   1+NaNi 1    NaN  2 
    >> [11,]       NA <NA> NaN  1 
    >> [12,] NaN+NaNi NaN  NaN  2 
    >>> 
    >> -------------------------------
    >> Note that 'mz <- match(z, z)' and hence the last column of the matrix above
    >> are very different in current R, 
    >> distinguishing most kinds of NA / NaN  against the documentation (and the
    >> real/numeric case).

    >> Martin Maechler
    >> R Core Team


    >> ### Basically a shortened version of  the PR#16885 -- complex part b)
    >> ### of  R/tests/reg-tests-1c.R

    >> ## b) complex 'x' with different kinds of NaN
    >> x0 <- c(0,1, NA, NaN); z <- outer(x0,x0, complex, length.out=1); rm(x0)
    >> ##           --- = NA_real_  but that does not exist e.g., in R 2.3.1
    >> ##                   similarly,  '1L', '2L', .. do not exist e.g., in R 2.3.1
    >> (z <- z[is.na(z)])
    >> outerID <- function(x,y, ...) { ## ugly; can we get outer() to work ?
    >> r <- matrix( , length(x), length(y))
    >> for(i in seq(along=x))
    >> for(j in seq(along=y))
    >> r[i,j] <- identical(z[i], z[j], ...)
    >> r
    >> }
    >> ## Very strictly - in the sense of identical() -- these 12 complex numbers all differ:
    >> ## a version that works in older versions of R, where identical() had fewer arguments!
    >> outerID.picky <- function(x,y) {
    >> nF <- length(formals(identical)) - 2
    >> do.call("outerID", c(list(x, y), as.list(rep(FALSE, nF))))
    >> }
    >> oldR <- !exists("getRversion") || getRversion() < "3.0.0" ## << FIXME: 3.0.0 is  a wild guess
    >> symnum(id.z <- outerID.picky(z,z)) ## == Diagonal matrix [newer versions of R]
    >> try(# for older R versions
    >> stopifnot(identical(id.z, outerID(z,z)), oldR || identical(id.z, diag(12) == 1))
    >> )
    >> (mz <- match(z, z)) # currently different {NA,NaN} patterns differ - not in print()/format() _FIXME_
    >> zRI <- rbind(Re=Re(z), Im=Im(z)) # and see the pattern :
    >> print(cbind(format = format(z), t(zRI), mz), quote=FALSE)

    >> ## compute  match(z[i], z) , for  i = 1,2,..,12  :
    >> (m1z <- sapply(z, match, table = z))
    >> ## 1 2 1 2 2 2 1 2 2 2 1 2   # R 1.2.3  (2001-04-26)
    >> ## 1 2 3 4 1 3 7 8 2 4 8 7   # R 1.4.1  (2002-01-30)
    >> ## 1 2 3 4 1 3 7 8 2 4 8 12  # R 1.5.1  (2002-06-17)
    >> ## 1 2 3 4 1 3 7 8 2 4 8 12  # R 1.8.1  (2003-11-21)
    >> ## 1 2 3 4 1 3 7 8 2 4 8 12  # R 2.0.1  (2004-11-15)
    >> ## 1 2 3 4 1 3 7 4 2 4 4 12  # R 2.1.1  (2005-06-20)
    >> ## 1 2 3 4 1 3 7 4 2 4 4 12  # R 2.3.1  (2006-06-01)
    >> ## 1 2 3 4 1 3 7 8 2 4 8 12  # R 2.5.1  (2007-06-27)
    >> ## 1 2 3 4 1 3 7 4 2 4 4 12  # R 2.10.1 (2009-12-14)
    >> ## 1 2 3 4 1 3 7 4 2 4 4 12  # R 3.1.1  (2014-07-10)
    >> ## 1 2 3 4 1 3 7 4 2 4 4 12  # R 3.2.5 -- and 3.3.0 patched
    >> ## 1 2 1 2 1 1 1 1 2 2 1 2   # <<-- Martin's R-devel and proposed future R

    >> if(!exists("anyNA", mode="function")) anyNA <- function(x) any(is.na(x))
    >> stopifnot(apply(zRI, 2, anyNA)) # *all* are  NA *or* NaN (or both)
    >> is.NA <- function(.) is.na(.) & !is.nan(.)
    >> (iNaN <- apply(zRI, 2, function(.) any(is.nan(.))))
    >> (iNA <-  apply(zRI, 2, function(.) any(is.NA (.)))) # has non-NaN NA's
    >> ## In Martin's version of R-devel :
    >> stopifnot(identical(m1z == 1, iNA),
    >> identical(m1z == 2, !iNA))
    >> ## m1z uses match(x, *) with length(x) == 1 and failed in R 3.3.0
    >> stopifnot(identical(m1z, mz))
    >> ______________________________________________
    >> R-devel at r-project.org mailing list
    >> https://stat.ethz.ch/mailman/listinfo/r-devel

    > ______________________________________________
    > R-devel at r-project.org mailing list
    > https://stat.ethz.ch/mailman/listinfo/r-devel


From eac at openmailbox.org  Mon May 23 18:46:18 2016
From: eac at openmailbox.org (Ernest =?iso-8859-1?Q?Adrogu=E9?=)
Date: Mon, 23 May 2016 18:46:18 +0200
Subject: [Rd] data frame method for as.table()
Message-ID: <20160523164618.GA4876@doriath.local>

Hello,

Currently it's possible to convert an object of class table to a data frame
with as.data.frame.table(), but there's no ready-made function, AFAIK, to do
the reverse operation, i.e. conversion of a data frame to a table.

Do you think it would be a good idea to add a data.frame method to
as.table(), to allow such conversions?

The idea is that if `x' is a table and `y <- as.data.frame(x)', then the
object returned by `as.table(y)' should be equal to `x'.

Below is a proof of concept

as.table.data.frame <- function(x, ..., response) {
    if (missing(response))
        resp <- ncol(x)
    else {
        resp <- match(response[1L], names(x))
        if (is.na(resp))
            stop('not found: ', response[1L])
    }
    x[-resp] <- lapply(x[-resp], as.factor)
    if (any(do.call(table, x[-resp]) > 1L))
        stop('repeated frequency value')
    dn <- lapply(x[-resp], function(y) {
        if (any(is.na(y))) c(levels(y), NA) else levels(y)
    })
    ind <- mapply(function(val, lev) match(val, lev), x[-resp], dn)
    out <- array(dim=unlist(lapply(dn, length)), dimnames=dn)
    out[ind] <- x[[resp]]
    as.table(out)
}

and a simple usage example:

> (y <- table(foo=c('a','a',NA,'b','b'), useNA='always'))
foo
   a    b <NA> 
   2    2    1 
> (yy <- as.data.frame(y))
   foo Freq
1    a    2
2    b    2
3 <NA>    1
> as.table(yy)
foo
   a    b <NA> 
   2    2    1 
> 

Any thoughts?


From marc_schwartz at me.com  Mon May 23 19:50:56 2016
From: marc_schwartz at me.com (Marc Schwartz)
Date: Mon, 23 May 2016 12:50:56 -0500
Subject: [Rd] data frame method for as.table()
In-Reply-To: <20160523164618.GA4876@doriath.local>
References: <20160523164618.GA4876@doriath.local>
Message-ID: <816CB725-C3E4-47B1-8E79-9C2AC03A5996@me.com>


> On May 23, 2016, at 11:46 AM, Ernest Adrogu? <eac at openmailbox.org> wrote:
> 
> Hello,
> 
> Currently it's possible to convert an object of class table to a data frame
> with as.data.frame.table(), but there's no ready-made function, AFAIK, to do
> the reverse operation, i.e. conversion of a data frame to a table.
> 
> Do you think it would be a good idea to add a data.frame method to
> as.table(), to allow such conversions?
> 
> The idea is that if `x' is a table and `y <- as.data.frame(x)', then the
> object returned by `as.table(y)' should be equal to `x'.
> 
> Below is a proof of concept
> 
> as.table.data.frame <- function(x, ..., response) {
>    if (missing(response))
>        resp <- ncol(x)
>    else {
>        resp <- match(response[1L], names(x))
>        if (is.na(resp))
>            stop('not found: ', response[1L])
>    }
>    x[-resp] <- lapply(x[-resp], as.factor)
>    if (any(do.call(table, x[-resp]) > 1L))
>        stop('repeated frequency value')
>    dn <- lapply(x[-resp], function(y) {
>        if (any(is.na(y))) c(levels(y), NA) else levels(y)
>    })
>    ind <- mapply(function(val, lev) match(val, lev), x[-resp], dn)
>    out <- array(dim=unlist(lapply(dn, length)), dimnames=dn)
>    out[ind] <- x[[resp]]
>    as.table(out)
> }
> 
> and a simple usage example:
> 
>> (y <- table(foo=c('a','a',NA,'b','b'), useNA='always'))
> foo
>   a    b <NA> 
>   2    2    1 
>> (yy <- as.data.frame(y))
>   foo Freq
> 1    a    2
> 2    b    2
> 3 <NA>    1
>> as.table(yy)
> foo
>   a    b <NA> 
>   2    2    1 
>> 
> 
> Any thoughts?

Hi,

I have not tried an exhaustive set of examples, but I believe that ?xtabs will get you most of the way there, with the exception of NA handling, which would require either nuanced use of ?addNA or preprocessing factors in the input data frame to possibly add NA as a factor level where needed.

BTW, from ?as.data.frame.table, see the reference there to xtabs() at the end:

"The as.data.frame method for objects inheriting from class "table" can be used to convert the array-based representation of a contingency table to a data frame containing the classifying factors and the corresponding entries (the latter as component named by responseName). This is the inverse of xtabs."


For example, from ?xtabs, using the ?UCBAdmissions dataset, which is a 3 dimension table:

> str(UCBAdmissions)
 table [1:2, 1:2, 1:6] 512 313 89 19 353 207 17 8 120 205 ...
 - attr(*, "dimnames")=List of 3
  ..$ Admit : chr [1:2] "Admitted" "Rejected"
  ..$ Gender: chr [1:2] "Male" "Female"
  ..$ Dept  : chr [1:6] "A" "B" "C" "D" ...

DF <- as.data.frame(UCBAdmissions)

> str(DF)
'data.frame':	24 obs. of  4 variables:
 $ Admit : Factor w/ 2 levels "Admitted","Rejected": 1 2 1 2 1 2 1 2 1 2 ...
 $ Gender: Factor w/ 2 levels "Male","Female": 1 1 2 2 1 1 2 2 1 1 ...
 $ Dept  : Factor w/ 6 levels "A","B","C","D",..: 1 1 1 1 2 2 2 2 3 3 ...
 $ Freq  : num  512 313 89 19 353 207 17 8 120 205 ...


# Using your function
DF.Table <- as.table.data.frame(DF)

> str(DF.Table)
 table [1:2, 1:2, 1:6] 512 313 89 19 353 207 17 8 120 205 ...
 - attr(*, "dimnames")=List of 3
  ..$ Admit : chr [1:2] "Admitted" "Rejected"
  ..$ Gender: chr [1:2] "Male" "Female"
  ..$ Dept  : chr [1:6] "A" "B" "C" "D" ...


# Using xtabs()
DF.xtabs <- xtabs(Freq ~ ., data = DF)

> str(DF.xtabs)
 xtabs [1:2, 1:2, 1:6] 512 313 89 19 353 207 17 8 120 205 ...
 - attr(*, "dimnames")=List of 3
  ..$ Admit : chr [1:2] "Admitted" "Rejected"
  ..$ Gender: chr [1:2] "Male" "Female"
  ..$ Dept  : chr [1:6] "A" "B" "C" "D" ...
 - attr(*, "class")= chr [1:2] "xtabs" "table"
 - attr(*, "call")= language xtabs(formula = Freq ~ ., data = DF)


Note that DF.xtabs has additional attributes set as a result of the use of xtabs().

In the example that you provided above, you would need to use something along the lines of:

> xtabs(Freq ~ addNA(foo), data = yy)
addNA(foo)
   a    b <NA> 
   2    2    1 

so that xtabs() includes the NA level, or for a larger data frame with a lot of columns, pre-process the columns so that NA is included in the factor levels where you desire.

That latter issue with NA's and xtabs() BTW, has bitten a lot of people over the years, where the recommendation to use:

> xtabs(Freq ~ foo, data = yy, exclude = NULL, na.action = na.pass)
foo
a b 
2 2 

does not actually work as believed.

Regards,

Marc Schwartz


From eac at openmailbox.org  Mon May 23 20:56:50 2016
From: eac at openmailbox.org (Ernest =?iso-8859-1?Q?Adrogu=E9?=)
Date: Mon, 23 May 2016 20:56:50 +0200
Subject: [Rd] data frame method for as.table()
In-Reply-To: <816CB725-C3E4-47B1-8E79-9C2AC03A5996@me.com>
References: <20160523164618.GA4876@doriath.local>
	<816CB725-C3E4-47B1-8E79-9C2AC03A5996@me.com>
Message-ID: <20160523185650.GA5665@doriath.local>

Hi,

2016-05-23, 12:50 (-0500); Marc Schwartz escriu:
> Hi,
> 
> I have not tried an exhaustive set of examples, but I believe that ?xtabs
> will get you most of the way there, with the exception of NA handling,
> which would require either nuanced use of ?addNA or preprocessing factors
> in the input data frame to possibly add NA as a factor level where needed.
> 
> BTW, from ?as.data.frame.table, see the reference there to xtabs() at the
> end:
> 
> "The as.data.frame method for objects inheriting from class "table" can be
> used to convert the array-based representation of a contingency table to a
> data frame containing the classifying factors and the corresponding
> entries (the latter as component named by responseName). This is the
> inverse of xtabs."
> 
> 
> For example, from ?xtabs, using the ?UCBAdmissions dataset, which is a 3
> dimension table:
>
[...]

Thanks... I didn't know about xtabs and addNA.  I'll look into it, but at
first sight it seems that the functionality is pretty much already covered
by some combination of these two,.

Regards.


From mick.jordan at oracle.com  Tue May 24 01:44:41 2016
From: mick.jordan at oracle.com (Mick Jordan)
Date: Mon, 23 May 2016 16:44:41 -0700
Subject: [Rd] R without graphics
Message-ID: <574395E9.3010101@oracle.com>

Is it possible to configure and build an R without any graphics support. 
I..e no grDevices or graphics packages?

I tried "--with-x=no  --with-cairo=no --with-grDevices=no 
--with-graphics=no"

but it is still building grDevices.

My problem is that I am using experimenting with a compiler that cannot 
compile the Objective-C file, qdCocoa.m, and I don't need graphics for 
this experiment.

Max OS X El Capitan, R-3.2.4.

Thanks
Mick Jordan


From edd at debian.org  Tue May 24 01:54:36 2016
From: edd at debian.org (Dirk Eddelbuettel)
Date: Mon, 23 May 2016 18:54:36 -0500
Subject: [Rd] R without graphics
In-Reply-To: <574395E9.3010101@oracle.com>
References: <574395E9.3010101@oracle.com>
Message-ID: <22339.38972.224472.49894@max.nulle.part>


On 23 May 2016 at 16:44, Mick Jordan wrote:
| Is it possible to configure and build an R without any graphics support. 
| I..e no grDevices or graphics packages?
| 
| I tried "--with-x=no  --with-cairo=no --with-grDevices=no 
| --with-graphics=no"
| 
| but it is still building grDevices.
| 
| My problem is that I am using experimenting with a compiler that cannot 
| compile the Objective-C file, qdCocoa.m, and I don't need graphics for 
| this experiment.
| 
| Max OS X El Capitan, R-3.2.4.

Yes of course and all of this is documented, and discussed in many places.

i)   You still need x11 in most cases for _font metrics_

ii)  The key is more or less to build as normal and to run headless

iii) To run headless under a normal Unix OS, you prefix your commands with
     xvfb-run

iv)  I have no idea what special demands Cupertino puts on this.

Dirk

-- 
http://dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org


From simon.urbanek at r-project.org  Tue May 24 01:54:40 2016
From: simon.urbanek at r-project.org (Simon Urbanek)
Date: Mon, 23 May 2016 19:54:40 -0400
Subject: [Rd] R without graphics
In-Reply-To: <574395E9.3010101@oracle.com>
References: <574395E9.3010101@oracle.com>
Message-ID: <F21DDBBE-0B59-416A-A9B6-62F623A9B045@r-project.org>

Um... any reason why you don't simply disable aqua? That file is only compiled if you enable aqua - it has really nothing to do with grDevices ...

On May 23, 2016, at 7:44 PM, Mick Jordan <mick.jordan at oracle.com> wrote:

> Is it possible to configure and build an R without any graphics support. I..e no grDevices or graphics packages?
> 
> I tried "--with-x=no  --with-cairo=no --with-grDevices=no --with-graphics=no"
> 
> but it is still building grDevices.
> 
> My problem is that I am using experimenting with a compiler that cannot compile the Objective-C file, qdCocoa.m, and I don't need graphics for this experiment.
> 
> Max OS X El Capitan, R-3.2.4.
> 
> Thanks
> Mick Jordan
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
> 


From ripley at stats.ox.ac.uk  Tue May 24 07:46:33 2016
From: ripley at stats.ox.ac.uk (Prof Brian Ripley)
Date: Tue, 24 May 2016 06:46:33 +0100
Subject: [Rd] R without graphics
In-Reply-To: <F21DDBBE-0B59-416A-A9B6-62F623A9B045@r-project.org>
References: <574395E9.3010101@oracle.com>
	<F21DDBBE-0B59-416A-A9B6-62F623A9B045@r-project.org>
Message-ID: <976cd41b-59d7-2878-4692-861b4f032cec@stats.ox.ac.uk>

On 24/05/2016 00:54, Simon Urbanek wrote:
> Um... any reason why you don't simply disable aqua? That file is only compiled if you enable aqua - it has really nothing to do with grDevices ...

Also, you can specify a compiler for Objective-C separately and the 
manual advises you to do so (to specify Apple's clang).

> On May 23, 2016, at 7:44 PM, Mick Jordan <mick.jordan at oracle.com> wrote:
>
>> Is it possible to configure and build an R without any graphics support. I..e no grDevices or graphics packages?
>>
>> I tried "--with-x=no  --with-cairo=no --with-grDevices=no --with-graphics=no"

Inventing flags does not help you: use configure --help to see what is 
supported (as the manual says).

Reading the manual is faster than posting (and posting Mac-specific Qs 
to R-sig-mac is more likely to get an informed response).

>> but it is still building grDevices.
>>
>> My problem is that I am using experimenting with a compiler that cannot compile the Objective-C file, qdCocoa.m, and I don't need graphics for this experiment.
>>
>> Max OS X El Capitan, R-3.2.4.
>>
>> Thanks
>> Mick Jordan


-- 
Brian D. Ripley,                  ripley at stats.ox.ac.uk
Emeritus Professor of Applied Statistics, University of Oxford


From maechler at stat.math.ethz.ch  Tue May 24 12:55:40 2016
From: maechler at stat.math.ethz.ch (Martin Maechler)
Date: Tue, 24 May 2016 12:55:40 +0200
Subject: [Rd] Latest R-devel build failing on OS X
In-Reply-To: <22333.33080.885593.770604@stat.math.ethz.ch>
References: <70CBF2CD-1B4C-48CA-AFFD-E3F1DDBDC073@nyu.edu>
	<1771C0EE-8B59-4921-B648-60DB197824C2@gmail.com>
	<22332.40522.266571.404208@stat.math.ethz.ch>
	<25CBCECC-52C0-4228-978B-44BE848C7CF3@gmail.com>
	<604481D6-9DE0-49D1-89A6-41B8A8D537B7@gmail.com>
	<0C7F9946-4666-493C-BE88-5805B56902A5@gmail.com>
	<20160518220330.GA1621@ofb.net>
	<22333.30916.298334.864817@stat.math.ethz.ch>
	<22333.33080.885593.770604@stat.math.ethz.ch>
Message-ID: <22340.13100.530498.599867@stat.math.ethz.ch>


Can you (Frederick, Peter, Keith, but ideally others, too)
confirm that you don't see any problems anymore, when building a
version of R-devel from sources that are newer 
than (or equal to)  svn revision 70632 (2016-05-19 10:59:51, see below)?

I'm asking because the question is open if these should be
"back ported" to R 3.3.0 patched or not.

Best regards,
Martin

>>>>> Martin Maechler <maechler at stat.math.ethz.ch>
>>>>>     on Thu, 19 May 2016 11:02:48 +0200 writes:

>>>>>   <frederik at ofb.net>
>>>>>     on Wed, 18 May 2016 15:03:31 -0700 writes:

    >>> Readline <= 6.2 shouldn't require the SIGWINCH patch, so
    >>> if older versions have trouble finding rl_resize_terminal
    >>> then you could wrap a macro around that part.

    >> I find python related patches that use

    >> #ifdef HAVE_RL_RESIZE_TERMINAL

    >> so they must have configured for that.  We could and
    >> probably should do the same, but as a Linux_only guy
    >> currently (even basically only one flavor of Linux), I'd
    >> appreciate others to produce code for that.

    > Actually that was easy (in hindsight.. I took too long!)
    > enough, so I've now committed

    > ------------------------------------------------------------------------
    > r70632 | maechler | 2016-05-19 10:59:51 +0200 (Thu, 19 May 2016) | 1 line
    > Changed paths:
    > M configure
    > M configure.ac
    > M src/include/config.h.in
    > M src/unix/sys-std.c

    > check for rl_resize_terminal() now
    > ------------------------------------------------------------------------

    > ... and Keith should even not see the warning anymore
    > (nor Peter the error, when compiling using readline 5.x instead of 6.[23]).


    [...........]


From pdalgd at gmail.com  Tue May 24 13:47:27 2016
From: pdalgd at gmail.com (peter dalgaard)
Date: Tue, 24 May 2016 13:47:27 +0200
Subject: [Rd] Latest R-devel build failing on OS X
In-Reply-To: <22340.13100.530498.599867@stat.math.ethz.ch>
References: <70CBF2CD-1B4C-48CA-AFFD-E3F1DDBDC073@nyu.edu>
	<1771C0EE-8B59-4921-B648-60DB197824C2@gmail.com>
	<22332.40522.266571.404208@stat.math.ethz.ch>
	<25CBCECC-52C0-4228-978B-44BE848C7CF3@gmail.com>
	<604481D6-9DE0-49D1-89A6-41B8A8D537B7@gmail.com>
	<0C7F9946-4666-493C-BE88-5805B56902A5@gmail.com>
	<20160518220330.GA1621@ofb.net>
	<22333.30916.298334.864817@stat.math.ethz.ch>
	<22333.33080.885593.770604@stat.math.ethz.ch>
	<22340.13100.530498.599867@stat.math.ethz.ch>
Message-ID: <C29B5317-0925-4439-B736-FB210FD761DD@gmail.com>

I had a regression in config.site so the nightly build didn't. Retrying....

Looks like it will build, but the ctl-R, ctl-C bug is still present on OSX (w/Simon's libs). This _was_ fixed for a while, was it not?

(The NEWS entry is also wrong: The issue existed before readline 6.3)

-pd

On 24 May 2016, at 12:55 , Martin Maechler <maechler at stat.math.ethz.ch> wrote:

> 
> Can you (Frederick, Peter, Keith, but ideally others, too)
> confirm that you don't see any problems anymore, when building a
> version of R-devel from sources that are newer 
> than (or equal to)  svn revision 70632 (2016-05-19 10:59:51, see below)?
> 
> I'm asking because the question is open if these should be
> "back ported" to R 3.3.0 patched or not.
> 
> Best regards,
> Martin
> 
>>>>>> Martin Maechler <maechler at stat.math.ethz.ch>
>>>>>>    on Thu, 19 May 2016 11:02:48 +0200 writes:
> 
>>>>>>  <frederik at ofb.net>
>>>>>>    on Wed, 18 May 2016 15:03:31 -0700 writes:
> 
>>>> Readline <= 6.2 shouldn't require the SIGWINCH patch, so
>>>> if older versions have trouble finding rl_resize_terminal
>>>> then you could wrap a macro around that part.
> 
>>> I find python related patches that use
> 
>>> #ifdef HAVE_RL_RESIZE_TERMINAL
> 
>>> so they must have configured for that.  We could and
>>> probably should do the same, but as a Linux_only guy
>>> currently (even basically only one flavor of Linux), I'd
>>> appreciate others to produce code for that.
> 
>> Actually that was easy (in hindsight.. I took too long!)
>> enough, so I've now committed
> 
>> ------------------------------------------------------------------------
>> r70632 | maechler | 2016-05-19 10:59:51 +0200 (Thu, 19 May 2016) | 1 line
>> Changed paths:
>> M configure
>> M configure.ac
>> M src/include/config.h.in
>> M src/unix/sys-std.c
> 
>> check for rl_resize_terminal() now
>> ------------------------------------------------------------------------
> 
>> ... and Keith should even not see the warning anymore
>> (nor Peter the error, when compiling using readline 5.x instead of 6.[23]).
> 
> 
>    [...........]

-- 
Peter Dalgaard, Professor,
Center for Statistics, Copenhagen Business School
Solbjerg Plads 3, 2000 Frederiksberg, Denmark
Phone: (+45)38153501
Office: A 4.23
Email: pd.mes at cbs.dk  Priv: PDalgd at gmail.com


From keith.ohara at nyu.edu  Tue May 24 16:21:34 2016
From: keith.ohara at nyu.edu (Keith O'Hara)
Date: Tue, 24 May 2016 10:21:34 -0400
Subject: [Rd] Latest R-devel build failing on OS X
In-Reply-To: <22340.13100.530498.599867@stat.math.ethz.ch>
References: <70CBF2CD-1B4C-48CA-AFFD-E3F1DDBDC073@nyu.edu>
	<1771C0EE-8B59-4921-B648-60DB197824C2@gmail.com>
	<22332.40522.266571.404208@stat.math.ethz.ch>
	<25CBCECC-52C0-4228-978B-44BE848C7CF3@gmail.com>
	<604481D6-9DE0-49D1-89A6-41B8A8D537B7@gmail.com>
	<0C7F9946-4666-493C-BE88-5805B56902A5@gmail.com>
	<20160518220330.GA1621@ofb.net>
	<22333.30916.298334.864817@stat.math.ethz.ch>
	<22333.33080.885593.770604@stat.math.ethz.ch>
	<22340.13100.530498.599867@stat.math.ethz.ch>
Message-ID: <DF452CA7-50B9-43DE-B02B-AEDC9E827266@nyu.edu>

On my machine (iMac w/ El Capitan (10.11.4)), svn rev. 70662 builds without any errors (and the warning I mentioned before is now gone too).

K

> On May 24, 2016, at 6:55 AM, Martin Maechler <maechler at stat.math.ethz.ch> wrote:
> 
> 
> Can you (Frederick, Peter, Keith, but ideally others, too)
> confirm that you don't see any problems anymore, when building a
> version of R-devel from sources that are newer 
> than (or equal to)  svn revision 70632 (2016-05-19 10:59:51, see below)?
> 
> I'm asking because the question is open if these should be
> "back ported" to R 3.3.0 patched or not.
> 
> Best regards,
> Martin
> 
>>>>>> Martin Maechler <maechler at stat.math.ethz.ch>
>>>>>>    on Thu, 19 May 2016 11:02:48 +0200 writes:
> 
>>>>>>  <frederik at ofb.net>
>>>>>>    on Wed, 18 May 2016 15:03:31 -0700 writes:
> 
>>>> Readline <= 6.2 shouldn't require the SIGWINCH patch, so
>>>> if older versions have trouble finding rl_resize_terminal
>>>> then you could wrap a macro around that part.
> 
>>> I find python related patches that use
> 
>>> #ifdef HAVE_RL_RESIZE_TERMINAL
> 
>>> so they must have configured for that.  We could and
>>> probably should do the same, but as a Linux_only guy
>>> currently (even basically only one flavor of Linux), I'd
>>> appreciate others to produce code for that.
> 
>> Actually that was easy (in hindsight.. I took too long!)
>> enough, so I've now committed
> 
>> ------------------------------------------------------------------------
>> r70632 | maechler | 2016-05-19 10:59:51 +0200 (Thu, 19 May 2016) | 1 line
>> Changed paths:
>> M configure
>> M configure.ac
>> M src/include/config.h.in
>> M src/unix/sys-std.c
> 
>> check for rl_resize_terminal() now
>> ------------------------------------------------------------------------
> 
>> ... and Keith should even not see the warning anymore
>> (nor Peter the error, when compiling using readline 5.x instead of 6.[23]).
> 
> 
>    [...........]


From maechler at stat.math.ethz.ch  Tue May 24 16:30:11 2016
From: maechler at stat.math.ethz.ch (Martin Maechler)
Date: Tue, 24 May 2016 16:30:11 +0200
Subject: [Rd] Latest R-devel build failing on OS X
In-Reply-To: <C29B5317-0925-4439-B736-FB210FD761DD@gmail.com>
References: <70CBF2CD-1B4C-48CA-AFFD-E3F1DDBDC073@nyu.edu>
	<1771C0EE-8B59-4921-B648-60DB197824C2@gmail.com>
	<22332.40522.266571.404208@stat.math.ethz.ch>
	<25CBCECC-52C0-4228-978B-44BE848C7CF3@gmail.com>
	<604481D6-9DE0-49D1-89A6-41B8A8D537B7@gmail.com>
	<0C7F9946-4666-493C-BE88-5805B56902A5@gmail.com>
	<20160518220330.GA1621@ofb.net>
	<22333.30916.298334.864817@stat.math.ethz.ch>
	<22333.33080.885593.770604@stat.math.ethz.ch>
	<22340.13100.530498.599867@stat.math.ethz.ch>
	<C29B5317-0925-4439-B736-FB210FD761DD@gmail.com>
Message-ID: <22340.25971.182938.655839@stat.math.ethz.ch>

>>>>> peter dalgaard <pdalgd at gmail.com>
>>>>>     on Tue, 24 May 2016 13:47:27 +0200 writes:

    > I had a regression in config.site so the nightly build didn't. Retrying....
    > Looks like it will build, but the ctl-R, ctl-C bug is still present on OSX (w/Simon's libs). This _was_ fixed for a while, was it not?

I thought it was never fixed, for readline versions 5.x (or all
of readline_version < 6.3 ?) because the patch assumed features
not available, e.g., for Frederik (who got compilation errors
which I think you confirmed on pre-6 readline).

I remember you having two different readlines installed on OSX
but the standard Mac binary (from CRAN, i.e. Simon) would use
the old readline version ?

so that whole  resetReadline() solution is now conditionalized inside

#if defined(RL_READLINE_VERSION) && RL_READLINE_VERSION >= 0x0603
   ...
   ...
#endif

and hence the previous code (which is buggy) is used for
readline versions < 6.3.
As a consequence the bug is only fixed for readline >= 6.3,
because the current patch did not compile and hence seemed not
appropriate for  readline < 6.3 (and hence the above conditionalization).


    > (The NEWS entry is also wrong: The issue existed before readline 6.3)

Aah.. you are right. The API change with 6.3 was for the other, the
"SIGWINCH" bug.

Here's a an update proposal for that NEWS entry :

         ? The API for readline libraries >= 6.3 had changed such
           terminal window resizes where no longer properly signalled
           (PR#16604).  Also, ?Ctrl C? in incremental search behaved
           confusingly in R (unix) consoles (PR#16603) also for older
           readline versions. These have been fixed (for readline >=
           6.3 only), thanks to patches by Frederick Eaton.


Martin

    > -pd

    > On 24 May 2016, at 12:55 , Martin Maechler <maechler at stat.math.ethz.ch> wrote:

    >> 
    >> Can you (Frederick, Peter, Keith, but ideally others, too)
    >> confirm that you don't see any problems anymore, when building a
    >> version of R-devel from sources that are newer 
    >> than (or equal to)  svn revision 70632 (2016-05-19 10:59:51, see below)?
    >> 
    >> I'm asking because the question is open if these should be
    >> "back ported" to R 3.3.0 patched or not.
    >> 
    >> Best regards,
    >> Martin
    >> 
    >>>>>>> Martin Maechler <maechler at stat.math.ethz.ch>
    >>>>>>> on Thu, 19 May 2016 11:02:48 +0200 writes:
    >> 
    >>>>>>> <frederik at ofb.net>
    >>>>>>> on Wed, 18 May 2016 15:03:31 -0700 writes:
    >> 
    >>>>> Readline <= 6.2 shouldn't require the SIGWINCH patch, so
    >>>>> if older versions have trouble finding rl_resize_terminal
    >>>>> then you could wrap a macro around that part.
    >> 
    >>>> I find python related patches that use
    >> 
    >>>> #ifdef HAVE_RL_RESIZE_TERMINAL
    >> 
    >>>> so they must have configured for that.  We could and
    >>>> probably should do the same, but as a Linux_only guy
    >>>> currently (even basically only one flavor of Linux), I'd
    >>>> appreciate others to produce code for that.
    >> 
    >>> Actually that was easy (in hindsight.. I took too long!)
    >>> enough, so I've now committed
    >> 
    >>> ------------------------------------------------------------------------
    >>> r70632 | maechler | 2016-05-19 10:59:51 +0200 (Thu, 19 May 2016) | 1 line
    >>> Changed paths:
    >>> M configure
    >>> M configure.ac
    >>> M src/include/config.h.in
    >>> M src/unix/sys-std.c
    >> 
    >>> check for rl_resize_terminal() now
    >>> ------------------------------------------------------------------------
    >> 
    >>> ... and Keith should even not see the warning anymore
    >>> (nor Peter the error, when compiling using readline 5.x instead of 6.[23]).
    >> 
    >> 
    >> [...........]

    > -- 
    > Peter Dalgaard, Professor,
    > Center for Statistics, Copenhagen Business School
    > Solbjerg Plads 3, 2000 Frederiksberg, Denmark
    > Phone: (+45)38153501
    > Office: A 4.23
    > Email: pd.mes at cbs.dk  Priv: PDalgd at gmail.com


From mick.jordan at oracle.com  Tue May 24 16:48:03 2016
From: mick.jordan at oracle.com (Mick Jordan)
Date: Tue, 24 May 2016 07:48:03 -0700
Subject: [Rd] R without graphics
In-Reply-To: <976cd41b-59d7-2878-4692-861b4f032cec@stats.ox.ac.uk>
References: <574395E9.3010101@oracle.com>
	<F21DDBBE-0B59-416A-A9B6-62F623A9B045@r-project.org>
	<976cd41b-59d7-2878-4692-861b4f032cec@stats.ox.ac.uk>
Message-ID: <574469A3.3010503@oracle.com>

On 5/23/16 10:46 PM, Prof Brian Ripley wrote:
> On 24/05/2016 00:54, Simon Urbanek wrote:
>> Um... any reason why you don't simply disable aqua? That file is only 
>> compiled if you enable aqua - it has really nothing to do with 
>> grDevices ...
>
> Also, you can specify a compiler for Objective-C separately and the 
> manual advises you to do so (to specify Apple's clang).
Tried that, but I have to use an old version of clang that can't handle 
the code. But --with-aqua=no was the solution.
>
>> On May 23, 2016, at 7:44 PM, Mick Jordan <mick.jordan at oracle.com> wrote:
>>
>>> Is it possible to configure and build an R without any graphics 
>>> support. I..e no grDevices or graphics packages?
>>>
>>> I tried "--with-x=no  --with-cairo=no --with-grDevices=no 
>>> --with-graphics=no"
>
> Inventing flags does not help you: use configure --help to see what is 
> supported (as the manual says).

I have learnt that R manuals are frequently inaccurate or out of date. 
So from the ./configure script:

Optional Packages:
   --with-PACKAGE[=ARG]    use PACKAGE [ARG=yes]

which is why I tried --with-grDevices=no

>
> Reading the manual is faster than posting (and posting Mac-specific Qs 
> to R-sig-mac is more likely to get an informed response).
>
I don't need this kind of grief. I hereby sign off from posting to this 
list.

Mick Jordan


From jeroen.ooms at stat.ucla.edu  Tue May 24 17:42:01 2016
From: jeroen.ooms at stat.ucla.edu (Jeroen Ooms)
Date: Tue, 24 May 2016 17:42:01 +0200
Subject: [Rd] Suggestion: mkString(NULL) should be NA
In-Reply-To: <CABFfbXt7raZDRaGP+T=XWKeBZq8oh88FRh8+Xj7jFkf_VFspsA@mail.gmail.com>
References: <CABFfbXt7raZDRaGP+T=XWKeBZq8oh88FRh8+Xj7jFkf_VFspsA@mail.gmail.com>
Message-ID: <CABFfbXu0LTrSy9Qq5mouq6fX=nN=NF9xshtM8Q9khYn3cWtEQw@mail.gmail.com>

On Thu, May 12, 2016 at 1:20 PM, Jeroen Ooms <jeroen.ooms at stat.ucla.edu> wrote:
> I would like to propose that Rf_mkString(NULL) and Rf_mkChar(NULL)
> return NA rather than segfault.

An example implementation: https://git.io/vroxm

With this patch, mkChar(NULL), mkCharCE(NULL, ce) would return
NA_STRING rather than segfault at strlen(NULL). This automatically
fixes mkString(NULL) as well which wraps mkChar (See Rinlinedfuns.h).


From gmbecker at ucdavis.edu  Tue May 24 17:59:50 2016
From: gmbecker at ucdavis.edu (Gabriel Becker)
Date: Tue, 24 May 2016 08:59:50 -0700
Subject: [Rd] Suggestion: mkString(NULL) should be NA
In-Reply-To: <CABFfbXu0LTrSy9Qq5mouq6fX=nN=NF9xshtM8Q9khYn3cWtEQw@mail.gmail.com>
References: <CABFfbXt7raZDRaGP+T=XWKeBZq8oh88FRh8+Xj7jFkf_VFspsA@mail.gmail.com>
	<CABFfbXu0LTrSy9Qq5mouq6fX=nN=NF9xshtM8Q9khYn3cWtEQw@mail.gmail.com>
Message-ID: <CADwqtCP2O7zUSJ3BHvYbkD25EyJPyj9LhdazJf5UzELVW1_9-w@mail.gmail.com>

Shouldn't Rf_mkString(NULL) return (the c-level equivalent of) character()
rather than the NA_character_? An empty string and NULL aren't the same. It
seems reasonable for Rf_mkChar to give NA_character_ though.

~G

On Tue, May 24, 2016 at 8:42 AM, Jeroen Ooms <jeroen.ooms at stat.ucla.edu>
wrote:

> On Thu, May 12, 2016 at 1:20 PM, Jeroen Ooms <jeroen.ooms at stat.ucla.edu>
> wrote:
> > I would like to propose that Rf_mkString(NULL) and Rf_mkChar(NULL)
> > return NA rather than segfault.
>
> An example implementation: https://git.io/vroxm
>
> With this patch, mkChar(NULL), mkCharCE(NULL, ce) would return
> NA_STRING rather than segfault at strlen(NULL). This automatically
> fixes mkString(NULL) as well which wraps mkChar (See Rinlinedfuns.h).
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>



-- 
Gabriel Becker, PhD
Associate Scientist (Bioinformatics)
Genentech Research

	[[alternative HTML version deleted]]


From wdunlap at tibco.com  Tue May 24 18:14:42 2016
From: wdunlap at tibco.com (William Dunlap)
Date: Tue, 24 May 2016 09:14:42 -0700
Subject: [Rd] Suggestion: mkString(NULL) should be NA
In-Reply-To: <CABFfbXu0LTrSy9Qq5mouq6fX=nN=NF9xshtM8Q9khYn3cWtEQw@mail.gmail.com>
References: <CABFfbXt7raZDRaGP+T=XWKeBZq8oh88FRh8+Xj7jFkf_VFspsA@mail.gmail.com>
	<CABFfbXu0LTrSy9Qq5mouq6fX=nN=NF9xshtM8Q9khYn3cWtEQw@mail.gmail.com>
Message-ID: <CAF8bMcYKiCUsy7xgmsWLRn6J7ZOHVfeZ1v+24tMDMZeO=xCPfQ@mail.gmail.com>

Why should Rf_mkString(NULL) produce NA_STRING instead of ""
(R_BlankString)?  I prefer that passing in a nil pointer would cause
an error instead, as the nil may arise by accident, perhaps a pointer
to freed memory, and I would like to be notified that my code is bad instead
of getting a random NA_STRING.


Bill Dunlap
TIBCO Software
wdunlap tibco.com

On Tue, May 24, 2016 at 8:42 AM, Jeroen Ooms <jeroen.ooms at stat.ucla.edu>
wrote:

> On Thu, May 12, 2016 at 1:20 PM, Jeroen Ooms <jeroen.ooms at stat.ucla.edu>
> wrote:
> > I would like to propose that Rf_mkString(NULL) and Rf_mkChar(NULL)
> > return NA rather than segfault.
>
> An example implementation: https://git.io/vroxm
>
> With this patch, mkChar(NULL), mkCharCE(NULL, ce) would return
> NA_STRING rather than segfault at strlen(NULL). This automatically
> fixes mkString(NULL) as well which wraps mkChar (See Rinlinedfuns.h).
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>

	[[alternative HTML version deleted]]


From jeroen.ooms at stat.ucla.edu  Tue May 24 18:30:18 2016
From: jeroen.ooms at stat.ucla.edu (Jeroen Ooms)
Date: Tue, 24 May 2016 18:30:18 +0200
Subject: [Rd] Suggestion: mkString(NULL) should be NA
In-Reply-To: <CADwqtCP2O7zUSJ3BHvYbkD25EyJPyj9LhdazJf5UzELVW1_9-w@mail.gmail.com>
References: <CABFfbXt7raZDRaGP+T=XWKeBZq8oh88FRh8+Xj7jFkf_VFspsA@mail.gmail.com>
	<CABFfbXu0LTrSy9Qq5mouq6fX=nN=NF9xshtM8Q9khYn3cWtEQw@mail.gmail.com>
	<CADwqtCP2O7zUSJ3BHvYbkD25EyJPyj9LhdazJf5UzELVW1_9-w@mail.gmail.com>
Message-ID: <CABFfbXtUHYepH93PZrYktNbFfNX-Y8iF5Pk6DYOgUFk=MGK7pA@mail.gmail.com>

On Tue, May 24, 2016 at 5:59 PM, Gabriel Becker <gmbecker at ucdavis.edu> wrote:
> Shouldn't Rf_mkString(NULL) return (the c-level equivalent of) character()
> rather than the NA_character_?

No. It should still be safe to assume that mkString() always returns a
character vector of exactly length one. Anything else could lead to
type errors.

> An empty string and NULL aren't the same.

Exactly! So if you pass in an empty C string, you get an empty R
string, and if you pass in a null pointer you get NA.

Rf_mkString(NULL)   <--> NA
Rf_mkString("")   <--> ""

There is no ambiguity, and much better than segfaulting.


From frederik at ofb.net  Tue May 24 18:45:43 2016
From: frederik at ofb.net (frederik at ofb.net)
Date: Tue, 24 May 2016 09:45:43 -0700
Subject: [Rd] Latest R-devel build failing on OS X
In-Reply-To: <22340.25971.182938.655839@stat.math.ethz.ch>
References: <22332.40522.266571.404208@stat.math.ethz.ch>
	<25CBCECC-52C0-4228-978B-44BE848C7CF3@gmail.com>
	<604481D6-9DE0-49D1-89A6-41B8A8D537B7@gmail.com>
	<0C7F9946-4666-493C-BE88-5805B56902A5@gmail.com>
	<20160518220330.GA1621@ofb.net>
	<22333.30916.298334.864817@stat.math.ethz.ch>
	<22333.33080.885593.770604@stat.math.ethz.ch>
	<22340.13100.530498.599867@stat.math.ethz.ch>
	<C29B5317-0925-4439-B736-FB210FD761DD@gmail.com>
	<22340.25971.182938.655839@stat.math.ethz.ch>
Message-ID: <20160524164543.GJ15265@ofb.net>

I agree with Martin's summary of the situation, and with the updated
NEWS entry.

I'm not familiar with Subversion, can you tell me the command to use?

(I tried "svn co https://svn.r-project.org/R/" but it seems to be
downloading all branches)

Frederick

On Tue, May 24, 2016 at 04:30:11PM +0200, Martin Maechler wrote:
> >>>>> peter dalgaard <pdalgd at gmail.com>
> >>>>>     on Tue, 24 May 2016 13:47:27 +0200 writes:
> 
>     > I had a regression in config.site so the nightly build didn't. Retrying....
>     > Looks like it will build, but the ctl-R, ctl-C bug is still present on OSX (w/Simon's libs). This _was_ fixed for a while, was it not?
> 
> I thought it was never fixed, for readline versions 5.x (or all
> of readline_version < 6.3 ?) because the patch assumed features
> not available, e.g., for Frederik (who got compilation errors
> which I think you confirmed on pre-6 readline).
> 
> I remember you having two different readlines installed on OSX
> but the standard Mac binary (from CRAN, i.e. Simon) would use
> the old readline version ?
> 
> so that whole  resetReadline() solution is now conditionalized inside
> 
> #if defined(RL_READLINE_VERSION) && RL_READLINE_VERSION >= 0x0603
>    ...
>    ...
> #endif
> 
> and hence the previous code (which is buggy) is used for
> readline versions < 6.3.
> As a consequence the bug is only fixed for readline >= 6.3,
> because the current patch did not compile and hence seemed not
> appropriate for  readline < 6.3 (and hence the above conditionalization).
> 
> 
>     > (The NEWS entry is also wrong: The issue existed before readline 6.3)
> 
> Aah.. you are right. The API change with 6.3 was for the other, the
> "SIGWINCH" bug.
> 
> Here's a an update proposal for that NEWS entry :
> 
>          ? The API for readline libraries >= 6.3 had changed such
>            terminal window resizes where no longer properly signalled
>            (PR#16604).  Also, ?Ctrl C? in incremental search behaved
>            confusingly in R (unix) consoles (PR#16603) also for older
>            readline versions. These have been fixed (for readline >=
>            6.3 only), thanks to patches by Frederick Eaton.
> 
> 
> Martin
> 
>     > -pd
> 
>     > On 24 May 2016, at 12:55 , Martin Maechler <maechler at stat.math.ethz.ch> wrote:
> 
>     >> 
>     >> Can you (Frederick, Peter, Keith, but ideally others, too)
>     >> confirm that you don't see any problems anymore, when building a
>     >> version of R-devel from sources that are newer 
>     >> than (or equal to)  svn revision 70632 (2016-05-19 10:59:51, see below)?
>     >> 
>     >> I'm asking because the question is open if these should be
>     >> "back ported" to R 3.3.0 patched or not.
>     >> 
>     >> Best regards,
>     >> Martin
>     >> 
>     >>>>>>> Martin Maechler <maechler at stat.math.ethz.ch>
>     >>>>>>> on Thu, 19 May 2016 11:02:48 +0200 writes:
>     >> 
>     >>>>>>> <frederik at ofb.net>
>     >>>>>>> on Wed, 18 May 2016 15:03:31 -0700 writes:
>     >> 
>     >>>>> Readline <= 6.2 shouldn't require the SIGWINCH patch, so
>     >>>>> if older versions have trouble finding rl_resize_terminal
>     >>>>> then you could wrap a macro around that part.
>     >> 
>     >>>> I find python related patches that use
>     >> 
>     >>>> #ifdef HAVE_RL_RESIZE_TERMINAL
>     >> 
>     >>>> so they must have configured for that.  We could and
>     >>>> probably should do the same, but as a Linux_only guy
>     >>>> currently (even basically only one flavor of Linux), I'd
>     >>>> appreciate others to produce code for that.
>     >> 
>     >>> Actually that was easy (in hindsight.. I took too long!)
>     >>> enough, so I've now committed
>     >> 
>     >>> ------------------------------------------------------------------------
>     >>> r70632 | maechler | 2016-05-19 10:59:51 +0200 (Thu, 19 May 2016) | 1 line
>     >>> Changed paths:
>     >>> M configure
>     >>> M configure.ac
>     >>> M src/include/config.h.in
>     >>> M src/unix/sys-std.c
>     >> 
>     >>> check for rl_resize_terminal() now
>     >>> ------------------------------------------------------------------------
>     >> 
>     >>> ... and Keith should even not see the warning anymore
>     >>> (nor Peter the error, when compiling using readline 5.x instead of 6.[23]).
>     >> 
>     >> 
>     >> [...........]
> 
>     > -- 
>     > Peter Dalgaard, Professor,
>     > Center for Statistics, Copenhagen Business School
>     > Solbjerg Plads 3, 2000 Frederiksberg, Denmark
>     > Phone: (+45)38153501
>     > Office: A 4.23
>     > Email: pd.mes at cbs.dk  Priv: PDalgd at gmail.com
>


From keith.ohara at nyu.edu  Tue May 24 18:47:43 2016
From: keith.ohara at nyu.edu (Keith O'Hara)
Date: Tue, 24 May 2016 12:47:43 -0400
Subject: [Rd] Latest R-devel build failing on OS X
In-Reply-To: <20160524164543.GJ15265@ofb.net>
References: <22332.40522.266571.404208@stat.math.ethz.ch>
	<25CBCECC-52C0-4228-978B-44BE848C7CF3@gmail.com>
	<604481D6-9DE0-49D1-89A6-41B8A8D537B7@gmail.com>
	<0C7F9946-4666-493C-BE88-5805B56902A5@gmail.com>
	<20160518220330.GA1621@ofb.net>
	<22333.30916.298334.864817@stat.math.ethz.ch>
	<22333.33080.885593.770604@stat.math.ethz.ch>
	<22340.13100.530498.599867@stat.math.ethz.ch>
	<C29B5317-0925-4439-B736-FB210FD761DD@gmail.com>
	<22340.25971.182938.655839@stat.math.ethz.ch>
	<20160524164543.GJ15265@ofb.net>
Message-ID: <CF177003-91C9-48D6-9E77-3B20EE02C1E4@nyu.edu>

svn checkout https://svn.r-project.org/R/trunk/ <target-directory>

> On May 24, 2016, at 12:45 PM, frederik at ofb.net wrote:
> 
> I agree with Martin's summary of the situation, and with the updated
> NEWS entry.
> 
> I'm not familiar with Subversion, can you tell me the command to use?
> 
> (I tried "svn co https://svn.r-project.org/R/" but it seems to be
> downloading all branches)
> 
> Frederick
> 
> On Tue, May 24, 2016 at 04:30:11PM +0200, Martin Maechler wrote:
>>>>>>> peter dalgaard <pdalgd at gmail.com>
>>>>>>>    on Tue, 24 May 2016 13:47:27 +0200 writes:
>> 
>>> I had a regression in config.site so the nightly build didn't. Retrying....
>>> Looks like it will build, but the ctl-R, ctl-C bug is still present on OSX (w/Simon's libs). This _was_ fixed for a while, was it not?
>> 
>> I thought it was never fixed, for readline versions 5.x (or all
>> of readline_version < 6.3 ?) because the patch assumed features
>> not available, e.g., for Frederik (who got compilation errors
>> which I think you confirmed on pre-6 readline).
>> 
>> I remember you having two different readlines installed on OSX
>> but the standard Mac binary (from CRAN, i.e. Simon) would use
>> the old readline version ?
>> 
>> so that whole  resetReadline() solution is now conditionalized inside
>> 
>> #if defined(RL_READLINE_VERSION) && RL_READLINE_VERSION >= 0x0603
>>   ...
>>   ...
>> #endif
>> 
>> and hence the previous code (which is buggy) is used for
>> readline versions < 6.3.
>> As a consequence the bug is only fixed for readline >= 6.3,
>> because the current patch did not compile and hence seemed not
>> appropriate for  readline < 6.3 (and hence the above conditionalization).
>> 
>> 
>>> (The NEWS entry is also wrong: The issue existed before readline 6.3)
>> 
>> Aah.. you are right. The API change with 6.3 was for the other, the
>> "SIGWINCH" bug.
>> 
>> Here's a an update proposal for that NEWS entry :
>> 
>>         ? The API for readline libraries >= 6.3 had changed such
>>           terminal window resizes where no longer properly signalled
>>           (PR#16604).  Also, ?Ctrl C? in incremental search behaved
>>           confusingly in R (unix) consoles (PR#16603) also for older
>>           readline versions. These have been fixed (for readline >=
>>           6.3 only), thanks to patches by Frederick Eaton.
>> 
>> 
>> Martin
>> 
>>> -pd
>> 
>>> On 24 May 2016, at 12:55 , Martin Maechler <maechler at stat.math.ethz.ch> wrote:
>> 
>>>> 
>>>> Can you (Frederick, Peter, Keith, but ideally others, too)
>>>> confirm that you don't see any problems anymore, when building a
>>>> version of R-devel from sources that are newer 
>>>> than (or equal to)  svn revision 70632 (2016-05-19 10:59:51, see below)?
>>>> 
>>>> I'm asking because the question is open if these should be
>>>> "back ported" to R 3.3.0 patched or not.
>>>> 
>>>> Best regards,
>>>> Martin
>>>> 
>>>>>>>>> Martin Maechler <maechler at stat.math.ethz.ch>
>>>>>>>>> on Thu, 19 May 2016 11:02:48 +0200 writes:
>>>> 
>>>>>>>>> <frederik at ofb.net>
>>>>>>>>> on Wed, 18 May 2016 15:03:31 -0700 writes:
>>>> 
>>>>>>> Readline <= 6.2 shouldn't require the SIGWINCH patch, so
>>>>>>> if older versions have trouble finding rl_resize_terminal
>>>>>>> then you could wrap a macro around that part.
>>>> 
>>>>>> I find python related patches that use
>>>> 
>>>>>> #ifdef HAVE_RL_RESIZE_TERMINAL
>>>> 
>>>>>> so they must have configured for that.  We could and
>>>>>> probably should do the same, but as a Linux_only guy
>>>>>> currently (even basically only one flavor of Linux), I'd
>>>>>> appreciate others to produce code for that.
>>>> 
>>>>> Actually that was easy (in hindsight.. I took too long!)
>>>>> enough, so I've now committed
>>>> 
>>>>> ------------------------------------------------------------------------
>>>>> r70632 | maechler | 2016-05-19 10:59:51 +0200 (Thu, 19 May 2016) | 1 line
>>>>> Changed paths:
>>>>> M configure
>>>>> M configure.ac
>>>>> M src/include/config.h.in
>>>>> M src/unix/sys-std.c
>>>> 
>>>>> check for rl_resize_terminal() now
>>>>> ------------------------------------------------------------------------
>>>> 
>>>>> ... and Keith should even not see the warning anymore
>>>>> (nor Peter the error, when compiling using readline 5.x instead of 6.[23]).
>>>> 
>>>> 
>>>> [...........]
>> 
>>> -- 
>>> Peter Dalgaard, Professor,
>>> Center for Statistics, Copenhagen Business School
>>> Solbjerg Plads 3, 2000 Frederiksberg, Denmark
>>> Phone: (+45)38153501
>>> Office: A 4.23
>>> Email: pd.mes at cbs.dk  Priv: PDalgd at gmail.com
>> 


From frederik at ofb.net  Tue May 24 19:16:43 2016
From: frederik at ofb.net (frederik at ofb.net)
Date: Tue, 24 May 2016 10:16:43 -0700
Subject: [Rd] Latest R-devel build failing on OS X
In-Reply-To: <CF177003-91C9-48D6-9E77-3B20EE02C1E4@nyu.edu>
References: <604481D6-9DE0-49D1-89A6-41B8A8D537B7@gmail.com>
	<0C7F9946-4666-493C-BE88-5805B56902A5@gmail.com>
	<20160518220330.GA1621@ofb.net>
	<22333.30916.298334.864817@stat.math.ethz.ch>
	<22333.33080.885593.770604@stat.math.ethz.ch>
	<22340.13100.530498.599867@stat.math.ethz.ch>
	<C29B5317-0925-4439-B736-FB210FD761DD@gmail.com>
	<22340.25971.182938.655839@stat.math.ethz.ch>
	<20160524164543.GJ15265@ofb.net>
	<CF177003-91C9-48D6-9E77-3B20EE02C1E4@nyu.edu>
Message-ID: <20160524171643.GK15265@ofb.net>

Thanks. OK, I get

    $ ./configure --prefix=$HOME/r-svn-test --cache-file=config.cache STRIP=true && make -j8
    ...
    checking for Fortran flag to compile .f95 files... none
    checking for gfortran option to support OpenMP... -fopenmp
    checking for recommended packages... ls: cannot access './src/library/Recommended/MASS_*.tar.gz': No such file or directory
    no
    configure: error: Some of the recommended packages are missing
      Use --without-recommended-packages if this was intentional

However, when I configure --without-recommended-packages and make
install, the build works and both Readline issues are fixed in the
result.

Thank you!

On Tue, May 24, 2016 at 12:47:43PM -0400, Keith O'Hara wrote:
> svn checkout https://svn.r-project.org/R/trunk/ <target-directory>
> 
> > On May 24, 2016, at 12:45 PM, frederik at ofb.net wrote:
> > 
> > I agree with Martin's summary of the situation, and with the updated
> > NEWS entry.
> > 
> > I'm not familiar with Subversion, can you tell me the command to use?
> > 
> > (I tried "svn co https://svn.r-project.org/R/" but it seems to be
> > downloading all branches)
> > 
> > Frederick
> > 
> > On Tue, May 24, 2016 at 04:30:11PM +0200, Martin Maechler wrote:
> >>>>>>> peter dalgaard <pdalgd at gmail.com>
> >>>>>>>    on Tue, 24 May 2016 13:47:27 +0200 writes:
> >> 
> >>> I had a regression in config.site so the nightly build didn't. Retrying....
> >>> Looks like it will build, but the ctl-R, ctl-C bug is still present on OSX (w/Simon's libs). This _was_ fixed for a while, was it not?
> >> 
> >> I thought it was never fixed, for readline versions 5.x (or all
> >> of readline_version < 6.3 ?) because the patch assumed features
> >> not available, e.g., for Frederik (who got compilation errors
> >> which I think you confirmed on pre-6 readline).
> >> 
> >> I remember you having two different readlines installed on OSX
> >> but the standard Mac binary (from CRAN, i.e. Simon) would use
> >> the old readline version ?
> >> 
> >> so that whole  resetReadline() solution is now conditionalized inside
> >> 
> >> #if defined(RL_READLINE_VERSION) && RL_READLINE_VERSION >= 0x0603
> >>   ...
> >>   ...
> >> #endif
> >> 
> >> and hence the previous code (which is buggy) is used for
> >> readline versions < 6.3.
> >> As a consequence the bug is only fixed for readline >= 6.3,
> >> because the current patch did not compile and hence seemed not
> >> appropriate for  readline < 6.3 (and hence the above conditionalization).
> >> 
> >> 
> >>> (The NEWS entry is also wrong: The issue existed before readline 6.3)
> >> 
> >> Aah.. you are right. The API change with 6.3 was for the other, the
> >> "SIGWINCH" bug.
> >> 
> >> Here's a an update proposal for that NEWS entry :
> >> 
> >>         ? The API for readline libraries >= 6.3 had changed such
> >>           terminal window resizes where no longer properly signalled
> >>           (PR#16604).  Also, ?Ctrl C? in incremental search behaved
> >>           confusingly in R (unix) consoles (PR#16603) also for older
> >>           readline versions. These have been fixed (for readline >=
> >>           6.3 only), thanks to patches by Frederick Eaton.
> >> 
> >> 
> >> Martin
> >> 
> >>> -pd
> >> 
> >>> On 24 May 2016, at 12:55 , Martin Maechler <maechler at stat.math.ethz.ch> wrote:
> >> 
> >>>> 
> >>>> Can you (Frederick, Peter, Keith, but ideally others, too)
> >>>> confirm that you don't see any problems anymore, when building a
> >>>> version of R-devel from sources that are newer 
> >>>> than (or equal to)  svn revision 70632 (2016-05-19 10:59:51, see below)?
> >>>> 
> >>>> I'm asking because the question is open if these should be
> >>>> "back ported" to R 3.3.0 patched or not.
> >>>> 
> >>>> Best regards,
> >>>> Martin
> >>>> 
> >>>>>>>>> Martin Maechler <maechler at stat.math.ethz.ch>
> >>>>>>>>> on Thu, 19 May 2016 11:02:48 +0200 writes:
> >>>> 
> >>>>>>>>> <frederik at ofb.net>
> >>>>>>>>> on Wed, 18 May 2016 15:03:31 -0700 writes:
> >>>> 
> >>>>>>> Readline <= 6.2 shouldn't require the SIGWINCH patch, so
> >>>>>>> if older versions have trouble finding rl_resize_terminal
> >>>>>>> then you could wrap a macro around that part.
> >>>> 
> >>>>>> I find python related patches that use
> >>>> 
> >>>>>> #ifdef HAVE_RL_RESIZE_TERMINAL
> >>>> 
> >>>>>> so they must have configured for that.  We could and
> >>>>>> probably should do the same, but as a Linux_only guy
> >>>>>> currently (even basically only one flavor of Linux), I'd
> >>>>>> appreciate others to produce code for that.
> >>>> 
> >>>>> Actually that was easy (in hindsight.. I took too long!)
> >>>>> enough, so I've now committed
> >>>> 
> >>>>> ------------------------------------------------------------------------
> >>>>> r70632 | maechler | 2016-05-19 10:59:51 +0200 (Thu, 19 May 2016) | 1 line
> >>>>> Changed paths:
> >>>>> M configure
> >>>>> M configure.ac
> >>>>> M src/include/config.h.in
> >>>>> M src/unix/sys-std.c
> >>>> 
> >>>>> check for rl_resize_terminal() now
> >>>>> ------------------------------------------------------------------------
> >>>> 
> >>>>> ... and Keith should even not see the warning anymore
> >>>>> (nor Peter the error, when compiling using readline 5.x instead of 6.[23]).
> >>>> 
> >>>> 
> >>>> [...........]
> >> 
> >>> -- 
> >>> Peter Dalgaard, Professor,
> >>> Center for Statistics, Copenhagen Business School
> >>> Solbjerg Plads 3, 2000 Frederiksberg, Denmark
> >>> Phone: (+45)38153501
> >>> Office: A 4.23
> >>> Email: pd.mes at cbs.dk  Priv: PDalgd at gmail.com
> >> 
>


From maechler at stat.math.ethz.ch  Tue May 24 19:20:18 2016
From: maechler at stat.math.ethz.ch (Martin Maechler)
Date: Tue, 24 May 2016 19:20:18 +0200
Subject: [Rd] Latest R-devel build failing on OS X
In-Reply-To: <CF177003-91C9-48D6-9E77-3B20EE02C1E4@nyu.edu>
References: <22332.40522.266571.404208@stat.math.ethz.ch>
	<25CBCECC-52C0-4228-978B-44BE848C7CF3@gmail.com>
	<604481D6-9DE0-49D1-89A6-41B8A8D537B7@gmail.com>
	<0C7F9946-4666-493C-BE88-5805B56902A5@gmail.com>
	<20160518220330.GA1621@ofb.net>
	<22333.30916.298334.864817@stat.math.ethz.ch>
	<22333.33080.885593.770604@stat.math.ethz.ch>
	<22340.13100.530498.599867@stat.math.ethz.ch>
	<C29B5317-0925-4439-B736-FB210FD761DD@gmail.com>
	<22340.25971.182938.655839@stat.math.ethz.ch>
	<20160524164543.GJ15265@ofb.net>
	<CF177003-91C9-48D6-9E77-3B20EE02C1E4@nyu.edu>
Message-ID: <22340.36178.890897.171292@stat.math.ethz.ch>

>>>>> Keith O'Hara <keith.ohara at nyu.edu>
>>>>>     on Tue, 24 May 2016 12:47:43 -0400 writes:

    > svn checkout https://svn.r-project.org/R/trunk/ <target-directory>

yes, indeed. thank you, Keith.

and from then on only

    cd <target-directory>
    svn up

    (which is short for 'svn update').

Another hint: Then do *not* build in the source directory but in
what we called a "build directory"; i.e., something like
(from scratch; including the only-once needed "checkout") :

     svn checkout https://svn.r-project.org/R/trunk/ R
     cd R
     tools/rsync-recommended
     mkdir ../build-R
     cd ../build-R
     ../R/configure
     make
     make check

and I then never run 'make install', but rather use symbolic
link from
     ..../build-R/bin/R  to something like  ~/bin/R-devel 
i.e.,
     cd ~/bin
     ln -s ..../build-R/bin/R R-devel

Martin

    >> On May 24, 2016, at 12:45 PM, frederik at ofb.net wrote:
    >> 
    >> I agree with Martin's summary of the situation, and with the updated
    >> NEWS entry.
    >> 
    >> I'm not familiar with Subversion, can you tell me the command to use?
    >> 
    >> (I tried "svn co https://svn.r-project.org/R/" but it seems to be
    >> downloading all branches)
    >> 
    >> Frederick
    >> 
    >> On Tue, May 24, 2016 at 04:30:11PM +0200, Martin Maechler wrote:
    >>>>>>>> peter dalgaard <pdalgd at gmail.com>
    >>>>>>>> on Tue, 24 May 2016 13:47:27 +0200 writes:
    >>> 
    >>>> I had a regression in config.site so the nightly build didn't. Retrying....
    >>>> Looks like it will build, but the ctl-R, ctl-C bug is still present on OSX (w/Simon's libs). This _was_ fixed for a while, was it not?
    >>> 
    >>> I thought it was never fixed, for readline versions 5.x (or all
    >>> of readline_version < 6.3 ?) because the patch assumed features
    >>> not available, e.g., for Frederik (who got compilation errors
    >>> which I think you confirmed on pre-6 readline).
    >>> 
    >>> I remember you having two different readlines installed on OSX
    >>> but the standard Mac binary (from CRAN, i.e. Simon) would use
    >>> the old readline version ?
    >>> 
    >>> so that whole  resetReadline() solution is now conditionalized inside
    >>> 
    >>> #if defined(RL_READLINE_VERSION) && RL_READLINE_VERSION >= 0x0603
    >>> ...
    >>> ...
    >>> #endif
    >>> 
    >>> and hence the previous code (which is buggy) is used for
    >>> readline versions < 6.3.
    >>> As a consequence the bug is only fixed for readline >= 6.3,
    >>> because the current patch did not compile and hence seemed not
    >>> appropriate for  readline < 6.3 (and hence the above conditionalization).
    >>> 
    >>> 
    >>>> (The NEWS entry is also wrong: The issue existed before readline 6.3)
    >>> 
    >>> Aah.. you are right. The API change with 6.3 was for the other, the
    >>> "SIGWINCH" bug.
    >>> 
    >>> Here's a an update proposal for that NEWS entry :
    >>> 
    >>> ? The API for readline libraries >= 6.3 had changed such
    >>> terminal window resizes where no longer properly signalled
    >>> (PR#16604).  Also, ?Ctrl C? in incremental search behaved
    >>> confusingly in R (unix) consoles (PR#16603) also for older
    >>> readline versions. These have been fixed (for readline >=
    >>> 6.3 only), thanks to patches by Frederick Eaton.
    >>> 
    >>> 
    >>> Martin
    >>> 
    >>>> -pd
    >>> 
    >>>> On 24 May 2016, at 12:55 , Martin Maechler <maechler at stat.math.ethz.ch> wrote:
    >>> 
    >>>>> 
    >>>>> Can you (Frederick, Peter, Keith, but ideally others, too)
    >>>>> confirm that you don't see any problems anymore, when building a
    >>>>> version of R-devel from sources that are newer 
    >>>>> than (or equal to)  svn revision 70632 (2016-05-19 10:59:51, see below)?
    >>>>> 
    >>>>> I'm asking because the question is open if these should be
    >>>>> "back ported" to R 3.3.0 patched or not.
    >>>>> 
    >>>>> Best regards,
    >>>>> Martin
    >>>>> 
    >>>>>>>>>> Martin Maechler <maechler at stat.math.ethz.ch>
    >>>>>>>>>> on Thu, 19 May 2016 11:02:48 +0200 writes:
    >>>>> 
    >>>>>>>>>> <frederik at ofb.net>
    >>>>>>>>>> on Wed, 18 May 2016 15:03:31 -0700 writes:
    >>>>> 
    >>>>>>>> Readline <= 6.2 shouldn't require the SIGWINCH patch, so
    >>>>>>>> if older versions have trouble finding rl_resize_terminal
    >>>>>>>> then you could wrap a macro around that part.
    >>>>> 
    >>>>>>> I find python related patches that use
    >>>>> 
    >>>>>>> #ifdef HAVE_RL_RESIZE_TERMINAL
    >>>>> 
    >>>>>>> so they must have configured for that.  We could and
    >>>>>>> probably should do the same, but as a Linux_only guy
    >>>>>>> currently (even basically only one flavor of Linux), I'd
    >>>>>>> appreciate others to produce code for that.
    >>>>> 
>>>>> Actually that was easy (in hindsight.. I took too long!)
>>>>> enough, so I've now committed
    >>>>> 
>>>>> ------------------------------------------------------------------------
>>>>> r70632 | maechler | 2016-05-19 10:59:51 +0200 (Thu, 19 May 2016) | 1 line
>>>>> Changed paths:
>>>>> M configure
>>>>> M configure.ac
>>>>> M src/include/config.h.in
>>>>> M src/unix/sys-std.c
    >>>>> 
>>>>> check for rl_resize_terminal() now
>>>>> ------------------------------------------------------------------------
    >>>>> 
>>>>> ... and Keith should even not see the warning anymore
>>>>> (nor Peter the error, when compiling using readline 5.x instead of 6.[23]).
    >>>>> 
    >>>>> 
    >>>>> [...........]
    >>> 
    >>>> -- 
    >>>> Peter Dalgaard, Professor,
    >>>> Center for Statistics, Copenhagen Business School
    >>>> Solbjerg Plads 3, 2000 Frederiksberg, Denmark
    >>>> Phone: (+45)38153501
    >>>> Office: A 4.23
    >>>> Email: pd.mes at cbs.dk  Priv: PDalgd at gmail.com
    >>>


From gmbecker at ucdavis.edu  Tue May 24 19:30:48 2016
From: gmbecker at ucdavis.edu (Gabriel Becker)
Date: Tue, 24 May 2016 10:30:48 -0700
Subject: [Rd] Suggestion: mkString(NULL) should be NA
In-Reply-To: <CABFfbXtUHYepH93PZrYktNbFfNX-Y8iF5Pk6DYOgUFk=MGK7pA@mail.gmail.com>
References: <CABFfbXt7raZDRaGP+T=XWKeBZq8oh88FRh8+Xj7jFkf_VFspsA@mail.gmail.com>
	<CABFfbXu0LTrSy9Qq5mouq6fX=nN=NF9xshtM8Q9khYn3cWtEQw@mail.gmail.com>
	<CADwqtCP2O7zUSJ3BHvYbkD25EyJPyj9LhdazJf5UzELVW1_9-w@mail.gmail.com>
	<CABFfbXtUHYepH93PZrYktNbFfNX-Y8iF5Pk6DYOgUFk=MGK7pA@mail.gmail.com>
Message-ID: <CADwqtCNLmskyk1v_syjGeH6H4tnLTAkihKh8c0gHuc7nHDqpDQ@mail.gmail.com>

On Tue, May 24, 2016 at 9:30 AM, Jeroen Ooms <jeroen.ooms at stat.ucla.edu>
wrote:

> On Tue, May 24, 2016 at 5:59 PM, Gabriel Becker <gmbecker at ucdavis.edu>
> wrote:
> > Shouldn't Rf_mkString(NULL) return (the c-level equivalent of)
> character()
> > rather than the NA_character_?
>
> No. It should still be safe to assume that mkString() always returns a
> character vector of exactly length one. Anything else could lead to
> type errors.
>


Well the thing is you're passing an invalid pointer, that doesn't point to
a C string, to a constructor expecting a valid const char *. I'm fine with
the contract being that mkString always returns a character vector of
length one, but that doesn't necessarily mean that the function needs to
accept NULL pointers. The contract as I understand it is that if you give
it a C string, it will create a CHARSXP for that string. In this light,
Bill's suggestion that it throw an error seems the most principled
response. I would think you would need to at the very least emit a warning.


>
> > An empty string and NULL aren't the same.
>
> Exactly! So if you pass in an empty C string, you get an empty R
> string, and if you pass in a null pointer you get NA.
>
> Rf_mkString(NULL)   <--> NA
> Rf_mkString("")   <--> ""
>
> There is no ambiguity, and much better than segfaulting.
>

Well, better than segfaulting is not really relevant here. No one is
arguing that it should segfault. The question is what behavior it should
have when it doesn't segfault.

It's true that a C empty string is not the same as NULL, but NULL isn't the
same as NA either. Semantically, for your use-case (which I gather arose
from interactions we had :) ) the NULL means there is no version, while NA
indicates there is a version but we don't know what it is. Imagine an
object class that represents a persons name (first, middle, last). Now take
two people, One has no middle name (and we know that when creating the
object) and another for whom we don't have any information about the middle
name, only first and last were reported. I would expect the first one to
have middle name either NULL or (in a data.frame context) "", while the
second would have NA_character_. In this light, mkString should arguably
generate "". i don't think the fact that there is another way to get "" is
a particularly large problem.

On the other hand, and in support of your position it came up as Michael
Lawrence and I were talking about this that asChar from utils.c  will give
you NA_STRING when you give it R_NilValue. That is a coercion though,
whereas arguably mkString is not. That said, consistency would probably be
good.

~G


-- 
Gabriel Becker, PhD
Associate Scientist (Bioinformatics)
Genentech Research

	[[alternative HTML version deleted]]


From frederik at ofb.net  Wed May 25 00:15:17 2016
From: frederik at ofb.net (frederik at ofb.net)
Date: Tue, 24 May 2016 15:15:17 -0700
Subject: [Rd] Latest R-devel build failing on OS X
In-Reply-To: <22340.36178.890897.171292@stat.math.ethz.ch>
References: <0C7F9946-4666-493C-BE88-5805B56902A5@gmail.com>
	<20160518220330.GA1621@ofb.net>
	<22333.30916.298334.864817@stat.math.ethz.ch>
	<22333.33080.885593.770604@stat.math.ethz.ch>
	<22340.13100.530498.599867@stat.math.ethz.ch>
	<C29B5317-0925-4439-B736-FB210FD761DD@gmail.com>
	<22340.25971.182938.655839@stat.math.ethz.ch>
	<20160524164543.GJ15265@ofb.net>
	<CF177003-91C9-48D6-9E77-3B20EE02C1E4@nyu.edu>
	<22340.36178.890897.171292@stat.math.ethz.ch>
Message-ID: <20160524221517.GL15265@ofb.net>

Thank you, Martin. I linked to your message in a comment here so maybe
other people will know about that useful technique:

http://singmann.org/installing-r-devel-on-linux/#comment-161

However, when I try it, I get an error:

    $ make 
    make[1]: Entering directory '/home/frederik/pkg-tmp/R-svn-build/m4'
    make[1]: Nothing to be done for 'R'.
    make[1]: Leaving directory '/home/frederik/pkg-tmp/R-svn-build/m4'
    make[1]: Entering directory '/home/frederik/pkg-tmp/R-svn-build/tools'
    make[1]: Nothing to be done for 'R'.
    make[1]: Leaving directory '/home/frederik/pkg-tmp/R-svn-build/tools'
    make[1]: Entering directory '/home/frederik/pkg-tmp/R-svn-build/doc'
    /usr/bin/install: cannot stat '../../R-svn/doc/NEWS': No such file or directory
    /usr/bin/install: cannot stat '../../R-svn/doc/NEWS.pdf': No such file or directory
    Makefile:164: recipe for target 'svnonly' failed
    make[1]: *** [svnonly] Error 1
    make[1]: Leaving directory '/home/frederik/pkg-tmp/R-svn-build/doc'
    Makefile:60: recipe for target 'R' failed
    make: *** [R] Error 1

I configured like this:

    $ cd ../R-svn-build/                                          
    $ ../R-svn/configure --without-recommended-packages --prefix=$HOME/r-svn-test STRIP=true

I guess I can try to debug it myself but thought I should report back
to you. It works when I 'configure' and 'make' in the source
directory.

Cheers,

Frederick



On Tue, May 24, 2016 at 07:20:18PM +0200, Martin Maechler wrote:
> >>>>> Keith O'Hara <keith.ohara at nyu.edu>
> >>>>>     on Tue, 24 May 2016 12:47:43 -0400 writes:
> 
>     > svn checkout https://svn.r-project.org/R/trunk/ <target-directory>
> 
> yes, indeed. thank you, Keith.
> 
> and from then on only
> 
>     cd <target-directory>
>     svn up
> 
>     (which is short for 'svn update').
> 
> Another hint: Then do *not* build in the source directory but in
> what we called a "build directory"; i.e., something like
> (from scratch; including the only-once needed "checkout") :
> 
>      svn checkout https://svn.r-project.org/R/trunk/ R
>      cd R
>      tools/rsync-recommended
>      mkdir ../build-R
>      cd ../build-R
>      ../R/configure
>      make
>      make check
> 
> and I then never run 'make install', but rather use symbolic
> link from
>      ..../build-R/bin/R  to something like  ~/bin/R-devel 
> i.e.,
>      cd ~/bin
>      ln -s ..../build-R/bin/R R-devel
> 
> Martin
> 
>     >> On May 24, 2016, at 12:45 PM, frederik at ofb.net wrote:
>     >> 
>     >> I agree with Martin's summary of the situation, and with the updated
>     >> NEWS entry.
>     >> 
>     >> I'm not familiar with Subversion, can you tell me the command to use?
>     >> 
>     >> (I tried "svn co https://svn.r-project.org/R/" but it seems to be
>     >> downloading all branches)
>     >> 
>     >> Frederick
>     >> 
>     >> On Tue, May 24, 2016 at 04:30:11PM +0200, Martin Maechler wrote:
>     >>>>>>>> peter dalgaard <pdalgd at gmail.com>
>     >>>>>>>> on Tue, 24 May 2016 13:47:27 +0200 writes:
>     >>> 
>     >>>> I had a regression in config.site so the nightly build didn't. Retrying....
>     >>>> Looks like it will build, but the ctl-R, ctl-C bug is still present on OSX (w/Simon's libs). This _was_ fixed for a while, was it not?
>     >>> 
>     >>> I thought it was never fixed, for readline versions 5.x (or all
>     >>> of readline_version < 6.3 ?) because the patch assumed features
>     >>> not available, e.g., for Frederik (who got compilation errors
>     >>> which I think you confirmed on pre-6 readline).
>     >>> 
>     >>> I remember you having two different readlines installed on OSX
>     >>> but the standard Mac binary (from CRAN, i.e. Simon) would use
>     >>> the old readline version ?
>     >>> 
>     >>> so that whole  resetReadline() solution is now conditionalized inside
>     >>> 
>     >>> #if defined(RL_READLINE_VERSION) && RL_READLINE_VERSION >= 0x0603
>     >>> ...
>     >>> ...
>     >>> #endif
>     >>> 
>     >>> and hence the previous code (which is buggy) is used for
>     >>> readline versions < 6.3.
>     >>> As a consequence the bug is only fixed for readline >= 6.3,
>     >>> because the current patch did not compile and hence seemed not
>     >>> appropriate for  readline < 6.3 (and hence the above conditionalization).
>     >>> 
>     >>> 
>     >>>> (The NEWS entry is also wrong: The issue existed before readline 6.3)
>     >>> 
>     >>> Aah.. you are right. The API change with 6.3 was for the other, the
>     >>> "SIGWINCH" bug.
>     >>> 
>     >>> Here's a an update proposal for that NEWS entry :
>     >>> 
>     >>> ? The API for readline libraries >= 6.3 had changed such
>     >>> terminal window resizes where no longer properly signalled
>     >>> (PR#16604).  Also, ?Ctrl C? in incremental search behaved
>     >>> confusingly in R (unix) consoles (PR#16603) also for older
>     >>> readline versions. These have been fixed (for readline >=
>     >>> 6.3 only), thanks to patches by Frederick Eaton.
>     >>> 
>     >>> 
>     >>> Martin
>     >>> 
>     >>>> -pd
>     >>> 
>     >>>> On 24 May 2016, at 12:55 , Martin Maechler <maechler at stat.math.ethz.ch> wrote:
>     >>> 
>     >>>>> 
>     >>>>> Can you (Frederick, Peter, Keith, but ideally others, too)
>     >>>>> confirm that you don't see any problems anymore, when building a
>     >>>>> version of R-devel from sources that are newer 
>     >>>>> than (or equal to)  svn revision 70632 (2016-05-19 10:59:51, see below)?
>     >>>>> 
>     >>>>> I'm asking because the question is open if these should be
>     >>>>> "back ported" to R 3.3.0 patched or not.
>     >>>>> 
>     >>>>> Best regards,
>     >>>>> Martin
>     >>>>> 
>     >>>>>>>>>> Martin Maechler <maechler at stat.math.ethz.ch>
>     >>>>>>>>>> on Thu, 19 May 2016 11:02:48 +0200 writes:
>     >>>>> 
>     >>>>>>>>>> <frederik at ofb.net>
>     >>>>>>>>>> on Wed, 18 May 2016 15:03:31 -0700 writes:
>     >>>>> 
>     >>>>>>>> Readline <= 6.2 shouldn't require the SIGWINCH patch, so
>     >>>>>>>> if older versions have trouble finding rl_resize_terminal
>     >>>>>>>> then you could wrap a macro around that part.
>     >>>>> 
>     >>>>>>> I find python related patches that use
>     >>>>> 
>     >>>>>>> #ifdef HAVE_RL_RESIZE_TERMINAL
>     >>>>> 
>     >>>>>>> so they must have configured for that.  We could and
>     >>>>>>> probably should do the same, but as a Linux_only guy
>     >>>>>>> currently (even basically only one flavor of Linux), I'd
>     >>>>>>> appreciate others to produce code for that.
>     >>>>> 
> >>>>> Actually that was easy (in hindsight.. I took too long!)
> >>>>> enough, so I've now committed
>     >>>>> 
> >>>>> ------------------------------------------------------------------------
> >>>>> r70632 | maechler | 2016-05-19 10:59:51 +0200 (Thu, 19 May 2016) | 1 line
> >>>>> Changed paths:
> >>>>> M configure
> >>>>> M configure.ac
> >>>>> M src/include/config.h.in
> >>>>> M src/unix/sys-std.c
>     >>>>> 
> >>>>> check for rl_resize_terminal() now
> >>>>> ------------------------------------------------------------------------
>     >>>>> 
> >>>>> ... and Keith should even not see the warning anymore
> >>>>> (nor Peter the error, when compiling using readline 5.x instead of 6.[23]).
>     >>>>> 
>     >>>>> 
>     >>>>> [...........]
>     >>> 
>     >>>> -- 
>     >>>> Peter Dalgaard, Professor,
>     >>>> Center for Statistics, Copenhagen Business School
>     >>>> Solbjerg Plads 3, 2000 Frederiksberg, Denmark
>     >>>> Phone: (+45)38153501
>     >>>> Office: A 4.23
>     >>>> Email: pd.mes at cbs.dk  Priv: PDalgd at gmail.com
>     >>> 
>


From maechler at stat.math.ethz.ch  Wed May 25 12:31:36 2016
From: maechler at stat.math.ethz.ch (Martin Maechler)
Date: Wed, 25 May 2016 12:31:36 +0200
Subject: [Rd] Suggestion: mkString(NULL) should be NA
In-Reply-To: <CADwqtCNLmskyk1v_syjGeH6H4tnLTAkihKh8c0gHuc7nHDqpDQ@mail.gmail.com>
References: <CABFfbXt7raZDRaGP+T=XWKeBZq8oh88FRh8+Xj7jFkf_VFspsA@mail.gmail.com>
	<CABFfbXu0LTrSy9Qq5mouq6fX=nN=NF9xshtM8Q9khYn3cWtEQw@mail.gmail.com>
	<CADwqtCP2O7zUSJ3BHvYbkD25EyJPyj9LhdazJf5UzELVW1_9-w@mail.gmail.com>
	<CABFfbXtUHYepH93PZrYktNbFfNX-Y8iF5Pk6DYOgUFk=MGK7pA@mail.gmail.com>
	<CADwqtCNLmskyk1v_syjGeH6H4tnLTAkihKh8c0gHuc7nHDqpDQ@mail.gmail.com>
Message-ID: <22341.32520.155909.439980@stat.math.ethz.ch>

>>>>> Gabriel Becker <gmbecker at ucdavis.edu>
>>>>>     on Tue, 24 May 2016 10:30:48 -0700 writes:

    > On Tue, May 24, 2016 at 9:30 AM, Jeroen Ooms <jeroen.ooms at stat.ucla.edu>
    > wrote:

    >> On Tue, May 24, 2016 at 5:59 PM, Gabriel Becker <gmbecker at ucdavis.edu>
    >> wrote:
    >> > Shouldn't Rf_mkString(NULL) return (the c-level equivalent of)
    >> character()
    >> > rather than the NA_character_?
    >> 
    >> No. It should still be safe to assume that mkString() always returns a
    >> character vector of exactly length one. Anything else could lead to
    >> type errors.
    >> 


    > Well the thing is you're passing an invalid pointer, that doesn't point to
    > a C string, to a constructor expecting a valid const char *. I'm fine with
    > the contract being that mkString always returns a character vector of
    > length one, but that doesn't necessarily mean that the function needs to
    > accept NULL pointers. The contract as I understand it is that if you give
    > it a C string, it will create a CHARSXP for that string. In this light,
    > Bill's suggestion that it throw an error seems the most principled
    > response. I would think you would need to at the very least emit a warning.

I agree with Jerooen that mkChar() and mkString() may be
used in contexts where they can end up with a NULL and hence
should not segfault... and hence am willing the extra (very
small) penalty of checking for NULL.

    >> 
    >> > An empty string and NULL aren't the same.
    >> 
    >> Exactly! So if you pass in an empty C string, you get an empty R
    >> string, and if you pass in a null pointer you get NA.
    >> 
    >> Rf_mkString(NULL)   <--> NA
    >> Rf_mkString("")   <--> ""
    >> 
    >> There is no ambiguity, and much better than segfaulting.

Better than segfaulting, yes, but really agree with Bill (and
Gabe), also for Rf_mkChar(NULL): 
I think both functions should give an error in such a case
rather than returning NA_character_

It is an accident of some kind if they got NULL, no?

--
Martin Maechler,
ETH Zurich



    > Well, better than segfaulting is not really relevant here. No one is
    > arguing that it should segfault. The question is what behavior it should
    > have when it doesn't segfault.

    > It's true that a C empty string is not the same as NULL, but NULL isn't the
    > same as NA either. Semantically, for your use-case (which I gather arose
    > from interactions we had :) ) the NULL means there is no version, while NA
    > indicates there is a version but we don't know what it is. Imagine an
    > object class that represents a persons name (first, middle, last). Now take
    > two people, One has no middle name (and we know that when creating the
    > object) and another for whom we don't have any information about the middle
    > name, only first and last were reported. I would expect the first one to
    > have middle name either NULL or (in a data.frame context) "", while the
    > second would have NA_character_. In this light, mkString should arguably
    > generate "". i don't think the fact that there is another way to get "" is
    > a particularly large problem.

    > On the other hand, and in support of your position it came up as Michael
    > Lawrence and I were talking about this that asChar from utils.c  will give
    > you NA_STRING when you give it R_NilValue. That is a coercion though,
    > whereas arguably mkString is not. That said, consistency would probably be
    > good.

    > ~G


    > -- 
    > Gabriel Becker, PhD
    > Associate Scientist (Bioinformatics)
    > Genentech Research

    > [[alternative HTML version deleted]]

    > ______________________________________________
    > R-devel at r-project.org mailing list
    > https://stat.ethz.ch/mailman/listinfo/r-devel


From maechler at stat.math.ethz.ch  Wed May 25 12:46:53 2016
From: maechler at stat.math.ethz.ch (Martin Maechler)
Date: Wed, 25 May 2016 12:46:53 +0200
Subject: [Rd] configure / make problems with R-devel
In-Reply-To: <20160524221517.GL15265@ofb.net>
References: <0C7F9946-4666-493C-BE88-5805B56902A5@gmail.com>
	<20160518220330.GA1621@ofb.net>
	<22333.30916.298334.864817@stat.math.ethz.ch>
	<22333.33080.885593.770604@stat.math.ethz.ch>
	<22340.13100.530498.599867@stat.math.ethz.ch>
	<C29B5317-0925-4439-B736-FB210FD761DD@gmail.com>
	<22340.25971.182938.655839@stat.math.ethz.ch>
	<20160524164543.GJ15265@ofb.net>
	<CF177003-91C9-48D6-9E77-3B20EE02C1E4@nyu.edu>
	<22340.36178.890897.171292@stat.math.ethz.ch>
	<20160524221517.GL15265@ofb.net>
Message-ID: <22341.33437.870844.55865@stat.math.ethz.ch>

>>>>>   <frederik at ofb.net>
>>>>>     on Tue, 24 May 2016 15:15:17 -0700 writes:

    > Thank you, Martin. I linked to your message in a comment here so maybe
    > other people will know about that useful technique:

    > http://singmann.org/installing-r-devel-on-linux/#comment-161

    > However, when I try it, I get an error:

    > $ make 
    > make[1]: Entering directory '/home/frederik/pkg-tmp/R-svn-build/m4'
    > make[1]: Nothing to be done for 'R'.
    > make[1]: Leaving directory '/home/frederik/pkg-tmp/R-svn-build/m4'
    > make[1]: Entering directory '/home/frederik/pkg-tmp/R-svn-build/tools'
    > make[1]: Nothing to be done for 'R'.
    > make[1]: Leaving directory '/home/frederik/pkg-tmp/R-svn-build/tools'
    > make[1]: Entering directory '/home/frederik/pkg-tmp/R-svn-build/doc'
    > /usr/bin/install: cannot stat '../../R-svn/doc/NEWS': No such file or directory
    > /usr/bin/install: cannot stat '../../R-svn/doc/NEWS.pdf': No such file or directory
    > Makefile:164: recipe for target 'svnonly' failed
    > make[1]: *** [svnonly] Error 1
    > make[1]: Leaving directory '/home/frederik/pkg-tmp/R-svn-build/doc'
    > Makefile:60: recipe for target 'R' failed
    > make: *** [R] Error 1

This is strange:  Did you accidentally delete the 'non-tarball'
file in your build directory which should have been created by
'configure' ?

I ask because your 'make' seems to be using the 'else' clause in
the 'svnonly' target in the R-svn-build/Makefile
but it should really use the first branch which does install
things in ./doc/ (such as NEWS or NEWS.pdf).

I have never used  'STRIP=true' -- maybe that did remove the
'non-tarball' file ?

Why not rather do it the way I told you, i.e., *with* recommended
packages, and no arguments to 'configure'
(if that does work, you may try variants.. I agree that
--without-recommended-packages should work as well, I just never
use that).

Martin


    > I configured like this:

    > $ cd ../R-svn-build/                                          
    > $ ../R-svn/configure --without-recommended-packages --prefix=$HOME/r-svn-test STRIP=true

    > I guess I can try to debug it myself but thought I should report back
    > to you. It works when I 'configure' and 'make' in the source
    > directory.

    > Cheers,

    > Frederick



    > On Tue, May 24, 2016 at 07:20:18PM +0200, Martin Maechler wrote:
    >> >>>>> Keith O'Hara <keith.ohara at nyu.edu>
    >> >>>>>     on Tue, 24 May 2016 12:47:43 -0400 writes:
    >> 
    >> > svn checkout https://svn.r-project.org/R/trunk/ <target-directory>
    >> 
    >> yes, indeed. thank you, Keith.
    >> 
    >> and from then on only
    >> 
    >> cd <target-directory>
    >> svn up
    >> 
    >> (which is short for 'svn update').
    >> 
    >> Another hint: Then do *not* build in the source directory but in
    >> what we called a "build directory"; i.e., something like
    >> (from scratch; including the only-once needed "checkout") :
    >> 
    >> svn checkout https://svn.r-project.org/R/trunk/ R
    >> cd R
    >> tools/rsync-recommended
    >> mkdir ../build-R
    >> cd ../build-R
    >> ../R/configure
    >> make
    >> make check
    >> 
    >> and I then never run 'make install', but rather use symbolic
    >> link from
    >> ..../build-R/bin/R  to something like  ~/bin/R-devel 
    >> i.e.,
    >> cd ~/bin
    >> ln -s ..../build-R/bin/R R-devel
    >> 
    >> Martin
    >> 
    >> >> On May 24, 2016, at 12:45 PM, frederik at ofb.net wrote:
    >> >> 
    >> >> I agree with Martin's summary of the situation, and with the updated
    >> >> NEWS entry.
    >> >> 
    >> >> I'm not familiar with Subversion, can you tell me the command to use?
    >> >> 
    >> >> (I tried "svn co https://svn.r-project.org/R/" but it seems to be
    >> >> downloading all branches)
    >> >> 
    >> >> Frederick
    >> >> 
    >> >> On Tue, May 24, 2016 at 04:30:11PM +0200, Martin Maechler wrote:
    >> >>>>>>>> peter dalgaard <pdalgd at gmail.com>
    >> >>>>>>>> on Tue, 24 May 2016 13:47:27 +0200 writes:
    >> >>> 
    >> >>>> I had a regression in config.site so the nightly build didn't. Retrying....
    >> >>>> Looks like it will build, but the ctl-R, ctl-C bug is still present on OSX (w/Simon's libs). This _was_ fixed for a while, was it not?
    >> >>> 
    >> >>> I thought it was never fixed, for readline versions 5.x (or all
    >> >>> of readline_version < 6.3 ?) because the patch assumed features
    >> >>> not available, e.g., for Frederik (who got compilation errors
    >> >>> which I think you confirmed on pre-6 readline).
    >> >>> 
    >> >>> I remember you having two different readlines installed on OSX
    >> >>> but the standard Mac binary (from CRAN, i.e. Simon) would use
    >> >>> the old readline version ?
    >> >>> 
    >> >>> so that whole  resetReadline() solution is now conditionalized inside
    >> >>> 
    >> >>> #if defined(RL_READLINE_VERSION) && RL_READLINE_VERSION >= 0x0603
    >> >>> ...
    >> >>> ...
    >> >>> #endif
    >> >>> 
    >> >>> and hence the previous code (which is buggy) is used for
    >> >>> readline versions < 6.3.
    >> >>> As a consequence the bug is only fixed for readline >= 6.3,
    >> >>> because the current patch did not compile and hence seemed not
    >> >>> appropriate for  readline < 6.3 (and hence the above conditionalization).
    >> >>> 
    >> >>> 
    >> >>>> (The NEWS entry is also wrong: The issue existed before readline 6.3)
    >> >>> 
    >> >>> Aah.. you are right. The API change with 6.3 was for the other, the
    >> >>> "SIGWINCH" bug.
    >> >>> 
    >> >>> Here's a an update proposal for that NEWS entry :
    >> >>> 
    >> >>> ? The API for readline libraries >= 6.3 had changed such
    >> >>> terminal window resizes where no longer properly signalled
    >> >>> (PR#16604).  Also, ?Ctrl C? in incremental search behaved
    >> >>> confusingly in R (unix) consoles (PR#16603) also for older
    >> >>> readline versions. These have been fixed (for readline >=
    >> >>> 6.3 only), thanks to patches by Frederick Eaton.
    >> >>> 
    >> >>> 
    >> >>> Martin
    >> >>> 
    >> >>>> -pd
    >> >>> 
    >> >>>> On 24 May 2016, at 12:55 , Martin Maechler <maechler at stat.math.ethz.ch> wrote:
    >> >>> 
    >> >>>>> 
    >> >>>>> Can you (Frederick, Peter, Keith, but ideally others, too)
    >> >>>>> confirm that you don't see any problems anymore, when building a
    >> >>>>> version of R-devel from sources that are newer 
    >> >>>>> than (or equal to)  svn revision 70632 (2016-05-19 10:59:51, see below)?
    >> >>>>> 
    >> >>>>> I'm asking because the question is open if these should be
    >> >>>>> "back ported" to R 3.3.0 patched or not.
    >> >>>>> 
    >> >>>>> Best regards,
    >> >>>>> Martin
    >> >>>>> 
    >> >>>>>>>>>> Martin Maechler <maechler at stat.math.ethz.ch>
    >> >>>>>>>>>> on Thu, 19 May 2016 11:02:48 +0200 writes:
    >> >>>>> 
    >> >>>>>>>>>> <frederik at ofb.net>
    >> >>>>>>>>>> on Wed, 18 May 2016 15:03:31 -0700 writes:
    >> >>>>> 
    >> >>>>>>>> Readline <= 6.2 shouldn't require the SIGWINCH patch, so
    >> >>>>>>>> if older versions have trouble finding rl_resize_terminal
    >> >>>>>>>> then you could wrap a macro around that part.
    >> >>>>> 
    >> >>>>>>> I find python related patches that use
    >> >>>>> 
    >> >>>>>>> #ifdef HAVE_RL_RESIZE_TERMINAL
    >> >>>>> 
    >> >>>>>>> so they must have configured for that.  We could and
    >> >>>>>>> probably should do the same, but as a Linux_only guy
    >> >>>>>>> currently (even basically only one flavor of Linux), I'd
    >> >>>>>>> appreciate others to produce code for that.
    >> >>>>> 
    >> >>>>> Actually that was easy (in hindsight.. I took too long!)
    >> >>>>> enough, so I've now committed
    >> >>>>> 
    >> >>>>> ------------------------------------------------------------------------
    >> >>>>> r70632 | maechler | 2016-05-19 10:59:51 +0200 (Thu, 19 May 2016) | 1 line
    >> >>>>> Changed paths:
    >> >>>>> M configure
    >> >>>>> M configure.ac
    >> >>>>> M src/include/config.h.in
    >> >>>>> M src/unix/sys-std.c
    >> >>>>> 
    >> >>>>> check for rl_resize_terminal() now
    >> >>>>> ------------------------------------------------------------------------
    >> >>>>> 
    >> >>>>> ... and Keith should even not see the warning anymore
    >> >>>>> (nor Peter the error, when compiling using readline 5.x instead of 6.[23]).
    >> >>>>> 
    >> >>>>> 
    >> >>>>> [...........]
    >> >>> 
    >> >>>> -- 
    >> >>>> Peter Dalgaard, Professor,
    >> >>>> Center for Statistics, Copenhagen Business School
    >> >>>> Solbjerg Plads 3, 2000 Frederiksberg, Denmark
    >> >>>> Phone: (+45)38153501
    >> >>>> Office: A 4.23
    >> >>>> Email: pd.mes at cbs.dk  Priv: PDalgd at gmail.com
    >> >>> 
    >>


From jeroen.ooms at stat.ucla.edu  Wed May 25 13:23:34 2016
From: jeroen.ooms at stat.ucla.edu (Jeroen Ooms)
Date: Wed, 25 May 2016 13:23:34 +0200
Subject: [Rd] Suggestion: mkString(NULL) should be NA
In-Reply-To: <22341.32520.155909.439980@stat.math.ethz.ch>
References: <CABFfbXt7raZDRaGP+T=XWKeBZq8oh88FRh8+Xj7jFkf_VFspsA@mail.gmail.com>
	<CABFfbXu0LTrSy9Qq5mouq6fX=nN=NF9xshtM8Q9khYn3cWtEQw@mail.gmail.com>
	<CADwqtCP2O7zUSJ3BHvYbkD25EyJPyj9LhdazJf5UzELVW1_9-w@mail.gmail.com>
	<CABFfbXtUHYepH93PZrYktNbFfNX-Y8iF5Pk6DYOgUFk=MGK7pA@mail.gmail.com>
	<CADwqtCNLmskyk1v_syjGeH6H4tnLTAkihKh8c0gHuc7nHDqpDQ@mail.gmail.com>
	<22341.32520.155909.439980@stat.math.ethz.ch>
Message-ID: <CABFfbXtVi09hpKc-FbgWBbPkJrU1V2bNdsTHqBEdxFK2rfmpog@mail.gmail.com>

On Wed, May 25, 2016 at 12:31 PM, Martin Maechler
<maechler at stat.math.ethz.ch> wrote:
> Better than segfaulting, yes, but really agree with Bill (and
> Gabe), also for Rf_mkChar(NULL):
> I think both functions should give an error in such a case
> rather than returning NA_character_
>
> It is an accident of some kind if they got NULL, no?

Not necessarily. A char* of NULL can be a string which is not
initiated or simply unavailable due to configuration.

The example from my original email was in curl package which exposes
the version string of libz that was used to build libcurl:

  mkString(data->libz_version)

This worked on all platforms that I tested. However a user found that
if libcurl was configured --without-libz (which is uncommon) the
libz_version string does not get set by libcurl and is always NULL. I
had not foreseen this and it would lead to a segfault.

I think making mkString() return NA for null strings lead to the most
robust behavior. Raising an exception seems a little harsh to me, as
there is no way the user would be able to recover from this, and there
might not be an actual problem at all.


From lawrence.michael at gene.com  Wed May 25 14:22:31 2016
From: lawrence.michael at gene.com (Michael Lawrence)
Date: Wed, 25 May 2016 05:22:31 -0700
Subject: [Rd] Suggestion: mkString(NULL) should be NA
In-Reply-To: <CABFfbXtVi09hpKc-FbgWBbPkJrU1V2bNdsTHqBEdxFK2rfmpog@mail.gmail.com>
References: <CABFfbXt7raZDRaGP+T=XWKeBZq8oh88FRh8+Xj7jFkf_VFspsA@mail.gmail.com>
	<CABFfbXu0LTrSy9Qq5mouq6fX=nN=NF9xshtM8Q9khYn3cWtEQw@mail.gmail.com>
	<CADwqtCP2O7zUSJ3BHvYbkD25EyJPyj9LhdazJf5UzELVW1_9-w@mail.gmail.com>
	<CABFfbXtUHYepH93PZrYktNbFfNX-Y8iF5Pk6DYOgUFk=MGK7pA@mail.gmail.com>
	<CADwqtCNLmskyk1v_syjGeH6H4tnLTAkihKh8c0gHuc7nHDqpDQ@mail.gmail.com>
	<22341.32520.155909.439980@stat.math.ethz.ch>
	<CABFfbXtVi09hpKc-FbgWBbPkJrU1V2bNdsTHqBEdxFK2rfmpog@mail.gmail.com>
Message-ID: <CAOQ5NyftzeVpbRGxM0Jd6=8f00VENWnAmW2oBQchALqvzKJOmA@mail.gmail.com>

On Wed, May 25, 2016 at 4:23 AM, Jeroen Ooms <jeroen.ooms at stat.ucla.edu>
wrote:

> On Wed, May 25, 2016 at 12:31 PM, Martin Maechler
> <maechler at stat.math.ethz.ch> wrote:
> > Better than segfaulting, yes, but really agree with Bill (and
> > Gabe), also for Rf_mkChar(NULL):
> > I think both functions should give an error in such a case
> > rather than returning NA_character_
> >
> > It is an accident of some kind if they got NULL, no?
>
> Not necessarily. A char* of NULL can be a string which is not
> initiated or simply unavailable due to configuration.
>
> The example from my original email was in curl package which exposes
> the version string of libz that was used to build libcurl:
>
>   mkString(data->libz_version)
>
> This worked on all platforms that I tested. However a user found that
> if libcurl was configured --without-libz (which is uncommon) the
> libz_version string does not get set by libcurl and is always NULL. I
> had not foreseen this and it would lead to a segfault.
>
> I think making mkString() return NA for null strings lead to the most
> robust behavior. Raising an exception seems a little harsh to me, as
> there is no way the user would be able to recover from this, and there
> might not be an actual problem at all.
>
>
Robust in the sense of no error being thrown, but perhaps only correct by
accident. NULL is not a valid C string --- should functions always return
NA on invalid input? As Gabe mentions, in the cited use case, it's not
clear whether the appropriate value is NA, "", or something else entirely.
Generalization seems risky at this point.


> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>
>

	[[alternative HTML version deleted]]


From tkeitt at utexas.edu  Wed May 25 14:32:15 2016
From: tkeitt at utexas.edu (Tim Keitt)
Date: Wed, 25 May 2016 07:32:15 -0500
Subject: [Rd] Suggestion: mkString(NULL) should be NA
In-Reply-To: <CAOQ5NyftzeVpbRGxM0Jd6=8f00VENWnAmW2oBQchALqvzKJOmA@mail.gmail.com>
References: <CABFfbXt7raZDRaGP+T=XWKeBZq8oh88FRh8+Xj7jFkf_VFspsA@mail.gmail.com>
	<CABFfbXu0LTrSy9Qq5mouq6fX=nN=NF9xshtM8Q9khYn3cWtEQw@mail.gmail.com>
	<CADwqtCP2O7zUSJ3BHvYbkD25EyJPyj9LhdazJf5UzELVW1_9-w@mail.gmail.com>
	<CABFfbXtUHYepH93PZrYktNbFfNX-Y8iF5Pk6DYOgUFk=MGK7pA@mail.gmail.com>
	<CADwqtCNLmskyk1v_syjGeH6H4tnLTAkihKh8c0gHuc7nHDqpDQ@mail.gmail.com>
	<22341.32520.155909.439980@stat.math.ethz.ch>
	<CABFfbXtVi09hpKc-FbgWBbPkJrU1V2bNdsTHqBEdxFK2rfmpog@mail.gmail.com>
	<CAOQ5NyftzeVpbRGxM0Jd6=8f00VENWnAmW2oBQchALqvzKJOmA@mail.gmail.com>
Message-ID: <CANnL8gpKeY7XVeLf+WyKCT_C2yjGo69_t25r-LTdmVu93_6eCw@mail.gmail.com>

On Wed, May 25, 2016 at 7:22 AM, Michael Lawrence <lawrence.michael at gene.com
> wrote:

> On Wed, May 25, 2016 at 4:23 AM, Jeroen Ooms <jeroen.ooms at stat.ucla.edu>
> wrote:
>

I'm not disagreeing with what's been said in this thread, but I can't help
but recall that I brought up this exact issue probably 15 years ago and was
told (by Brian, I believe) "don't do that" (pass a null pointer), which was
perfectly fine. The real issue was not the behavior but that it was not
documented or consistent. I've lived by the mantra since that you can never
trust a pointer in R code. User must always check for NULL.

I just wrote my own functions mkXXX_safe that wrap the internals and check
the pointer.

THK

http://www.keittlab.org/

	[[alternative HTML version deleted]]


From luke-tierney at uiowa.edu  Wed May 25 17:43:04 2016
From: luke-tierney at uiowa.edu (luke-tierney at uiowa.edu)
Date: Wed, 25 May 2016 10:43:04 -0500
Subject: [Rd] Suggestion: mkString(NULL) should be NA
In-Reply-To: <CANnL8gpKeY7XVeLf+WyKCT_C2yjGo69_t25r-LTdmVu93_6eCw@mail.gmail.com>
References: <CABFfbXt7raZDRaGP+T=XWKeBZq8oh88FRh8+Xj7jFkf_VFspsA@mail.gmail.com>
	<CABFfbXu0LTrSy9Qq5mouq6fX=nN=NF9xshtM8Q9khYn3cWtEQw@mail.gmail.com>
	<CADwqtCP2O7zUSJ3BHvYbkD25EyJPyj9LhdazJf5UzELVW1_9-w@mail.gmail.com>
	<CABFfbXtUHYepH93PZrYktNbFfNX-Y8iF5Pk6DYOgUFk=MGK7pA@mail.gmail.com>
	<CADwqtCNLmskyk1v_syjGeH6H4tnLTAkihKh8c0gHuc7nHDqpDQ@mail.gmail.com>
	<22341.32520.155909.439980@stat.math.ethz.ch>
	<CABFfbXtVi09hpKc-FbgWBbPkJrU1V2bNdsTHqBEdxFK2rfmpog@mail.gmail.com>
	<CAOQ5NyftzeVpbRGxM0Jd6=8f00VENWnAmW2oBQchALqvzKJOmA@mail.gmail.com>
	<CANnL8gpKeY7XVeLf+WyKCT_C2yjGo69_t25r-LTdmVu93_6eCw@mail.gmail.com>
Message-ID: <alpine.LFD.2.20.1605251032520.4743@itasca.stat.uiowa.edu>

On Wed, 25 May 2016, Tim Keitt wrote:

> On Wed, May 25, 2016 at 7:22 AM, Michael Lawrence <lawrence.michael at gene.com
>> wrote:
>
>> On Wed, May 25, 2016 at 4:23 AM, Jeroen Ooms <jeroen.ooms at stat.ucla.edu>
>> wrote:
>>
>
> I'm not disagreeing with what's been said in this thread, but I can't help
> but recall that I brought up this exact issue probably 15 years ago and was
> told (by Brian, I believe) "don't do that" (pass a null pointer), which was
> perfectly fine. The real issue was not the behavior but that it was not
> documented or consistent. I've lived by the mantra since that you can never
> trust a pointer in R code. User must always check for NULL.

In _C_ code.  This is true whether you are calling into the R C API or
any other C library: you as the C programmer need to make sure either
that passing NULL is OK or make sure you don't do that.

I wouldn't object to mkXXX checking for NULL and signaling an error
instead of segfaulting, but good C code calling mkXXX should still
typically do its own check and handle the situation in an appropriate
way.

Best,

luke


>
> I just wrote my own functions mkXXX_safe that wrap the internals and check
> the pointer.
>
> THK
>
> http://www.keittlab.org/
>
> 	[[alternative HTML version deleted]]
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>

-- 
Luke Tierney
Ralph E. Wareham Professor of Mathematical Sciences
University of Iowa                  Phone:             319-335-3386
Department of Statistics and        Fax:               319-335-3017
    Actuarial Science
241 Schaeffer Hall                  email:   luke-tierney at uiowa.edu
Iowa City, IA 52242                 WWW:  http://www.stat.uiowa.edu


From wdunlap at tibco.com  Wed May 25 19:27:57 2016
From: wdunlap at tibco.com (William Dunlap)
Date: Wed, 25 May 2016 10:27:57 -0700
Subject: [Rd] odd warning unlinking symlink on Windows
Message-ID: <CAF8bMcZmPUNq=VYv5j=_WtinX9UxDe0Jz=HXByYWRZu4NUd1dQ@mail.gmail.com>

While constructing some tests of symbolic link code in R, I got
an odd warning when trying the remove a symbolic link:

file.create(tfile <- tempfile())
#[1] TRUE
file.symlink(tfile, tlink <- tempfile())
#[1] TRUE
unlink(tlink)
#Warning message:
#In unlink(tlink) :
#  cannot delete reparse point
'C:\Users\wdunlap\AppData\Local\Temp\Rtmp0oB1gl\fileedc792515a3', reason
'There is a mismatch between the tag specified in the request and the tag
present in the reparse point.
#'
file.exists(tlink)
#[1] TRUE


I can remove the symbolic link, without any warnings, if it is in
a directory that I remove with unlink(recursive=TRUE):

dir.create(tdir <- tempfile(fileext=".dir"))
file.create(tfile <- file.path(tdir, "file"))
#[1] TRUE
file.symlink(tfile, tlink <- file.path(tdir, "symlinkToFile"))
#[1] TRUE
dir(tdir)
#[1] "file"          "symlinkToFile"
print(unlink(tdir, recursive=TRUE))
#[1] 0
file.exists(tdir)
#[1] FALSE
file.exists(tlink)
#[1] FALSE

(I didn't know symlinks were even possible on Windows, but they are in
Windows 7.   Sys.readlink() does nothing useful on Windows.)

> sessionInfo()
R version 3.3.0 (2016-05-03)
Platform: x86_64-w64-mingw32/x64 (64-bit)
Running under: Windows 7 x64 (build 7601) Service Pack 1

locale:
[1] LC_COLLATE=English_United States.1252  LC_CTYPE=English_United
States.1252
[3] LC_MONETARY=English_United States.1252 LC_NUMERIC=C

[5] LC_TIME=English_United States.1252

attached base packages:
[1] stats     graphics  grDevices utils     datasets  methods   base

loaded via a namespace (and not attached):
[1] assertionTest_0.5

Bill Dunlap
TIBCO Software
wdunlap tibco.com

	[[alternative HTML version deleted]]


From tkeitt at utexas.edu  Thu May 26 00:36:16 2016
From: tkeitt at utexas.edu (Tim Keitt)
Date: Wed, 25 May 2016 17:36:16 -0500
Subject: [Rd] Suggestion: mkString(NULL) should be NA
In-Reply-To: <alpine.LFD.2.20.1605251032520.4743@itasca.stat.uiowa.edu>
References: <CABFfbXt7raZDRaGP+T=XWKeBZq8oh88FRh8+Xj7jFkf_VFspsA@mail.gmail.com>
	<CABFfbXu0LTrSy9Qq5mouq6fX=nN=NF9xshtM8Q9khYn3cWtEQw@mail.gmail.com>
	<CADwqtCP2O7zUSJ3BHvYbkD25EyJPyj9LhdazJf5UzELVW1_9-w@mail.gmail.com>
	<CABFfbXtUHYepH93PZrYktNbFfNX-Y8iF5Pk6DYOgUFk=MGK7pA@mail.gmail.com>
	<CADwqtCNLmskyk1v_syjGeH6H4tnLTAkihKh8c0gHuc7nHDqpDQ@mail.gmail.com>
	<22341.32520.155909.439980@stat.math.ethz.ch>
	<CABFfbXtVi09hpKc-FbgWBbPkJrU1V2bNdsTHqBEdxFK2rfmpog@mail.gmail.com>
	<CAOQ5NyftzeVpbRGxM0Jd6=8f00VENWnAmW2oBQchALqvzKJOmA@mail.gmail.com>
	<CANnL8gpKeY7XVeLf+WyKCT_C2yjGo69_t25r-LTdmVu93_6eCw@mail.gmail.com>
	<alpine.LFD.2.20.1605251032520.4743@itasca.stat.uiowa.edu>
Message-ID: <CANnL8gqzCf5B7G=Xq3FiOYFq7msSBYbGbwBEU-gfgob3Wc9awA@mail.gmail.com>

http://www.keittlab.org/

On Wed, May 25, 2016 at 10:43 AM, <luke-tierney at uiowa.edu> wrote:

> On Wed, 25 May 2016, Tim Keitt wrote:
>
> On Wed, May 25, 2016 at 7:22 AM, Michael Lawrence <
>> lawrence.michael at gene.com
>>
>>> wrote:
>>>
>>
>> On Wed, May 25, 2016 at 4:23 AM, Jeroen Ooms <jeroen.ooms at stat.ucla.edu>
>>> wrote:
>>>
>>>
>> I'm not disagreeing with what's been said in this thread, but I can't help
>> but recall that I brought up this exact issue probably 15 years ago and
>> was
>> told (by Brian, I believe) "don't do that" (pass a null pointer), which
>> was
>> perfectly fine. The real issue was not the behavior but that it was not
>> documented or consistent. I've lived by the mantra since that you can
>> never
>> trust a pointer in R code. User must always check for NULL.
>>
>
> In _C_ code.  This is true whether you are calling into the R C API or
> any other C library: you as the C programmer need to make sure either
> that passing NULL is OK or make sure you don't do that.
>

I agree -- I meant it was "perfectly fine" to remind us we need to check
pointers. Its really a documentation issue.

THK




>
> I wouldn't object to mkXXX checking for NULL and signaling an error
> instead of segfaulting, but good C code calling mkXXX should still
> typically do its own check and handle the situation in an appropriate
> way.
>
> Best,
>
> luke
>
>
>
>> I just wrote my own functions mkXXX_safe that wrap the internals and check
>> the pointer.
>>
>> THK
>>
>> http://www.keittlab.org/
>>
>>         [[alternative HTML version deleted]]
>>
>> ______________________________________________
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>
>>
> --
> Luke Tierney
> Ralph E. Wareham Professor of Mathematical Sciences
> University of Iowa                  Phone:             319-335-3386
> Department of Statistics and        Fax:               319-335-3017
>    Actuarial Science
> 241 Schaeffer Hall                  email:   luke-tierney at uiowa.edu
> Iowa City, IA 52242                 WWW:  http://www.stat.uiowa.edu
>

	[[alternative HTML version deleted]]


From frederik at ofb.net  Thu May 26 02:29:19 2016
From: frederik at ofb.net (frederik at ofb.net)
Date: Wed, 25 May 2016 17:29:19 -0700
Subject: [Rd] configure / make problems with R-devel
In-Reply-To: <22341.33437.870844.55865@stat.math.ethz.ch>
References: <22333.30916.298334.864817@stat.math.ethz.ch>
	<22333.33080.885593.770604@stat.math.ethz.ch>
	<22340.13100.530498.599867@stat.math.ethz.ch>
	<C29B5317-0925-4439-B736-FB210FD761DD@gmail.com>
	<22340.25971.182938.655839@stat.math.ethz.ch>
	<20160524164543.GJ15265@ofb.net>
	<CF177003-91C9-48D6-9E77-3B20EE02C1E4@nyu.edu>
	<22340.36178.890897.171292@stat.math.ethz.ch>
	<20160524221517.GL15265@ofb.net>
	<22341.33437.870844.55865@stat.math.ethz.ch>
Message-ID: <20160526002919.GM15265@ofb.net>

Hi Martin,

Thanks for the Makefile clue. The file 'non-tarball' was present in
the source directory, but not in the build directory (should the
Makefile be checking for 'non-tarball' in the source directory
instead?). However, 'doc/FAQ' was present in the source directory, so
the first clause of '||' failed.

    svnonly:
            @if test ! -f "$(srcdir)/doc/FAQ" || test -f non-tarball ; then \
            ...

It works if I remove 'doc/FAQ'. Incidentally, this file is created by
'make' but not removed by 'make clean'. So the problem is that I
accidentally ran 'make' in the source directory before taking your
advice. I ran 'make clean' out of habit, not even realizing that
'make' in the source directory would break your
separate-build-directory technique.

STRIP=true is highly counterintuitive, but I'm surprised you don't
recognise it - it just replaces the 'strip' command with 'true' so
that my installed binaries get to keep their debugging symbols. Maybe
there is a better way of doing it - I guess you use the binaries in
place so perhaps that is one solution. I'm not sure where I came up
with STRIP=true.




In case anyone skimmed, I think there may be two "action items" here:

1. in Makefile, change

            @if test ! -f "$(srcdir)/doc/FAQ" || test -f non-tarball ; then \

to

            @if test ! -f "$(srcdir)/doc/FAQ" || test -f "$(srcdir)/non-tarball" ; then \

(I haven't tested it)

2. Figure out how to remove doc/FAQ with 'make clean' (if it makes
sense to do so)



Thanks,

Frederick

On Wed, May 25, 2016 at 12:46:53PM +0200, Martin Maechler wrote:
> >>>>>   <frederik at ofb.net>
> >>>>>     on Tue, 24 May 2016 15:15:17 -0700 writes:
> 
>     > Thank you, Martin. I linked to your message in a comment here so maybe
>     > other people will know about that useful technique:
> 
>     > http://singmann.org/installing-r-devel-on-linux/#comment-161
> 
>     > However, when I try it, I get an error:
> 
>     > $ make 
>     > make[1]: Entering directory '/home/frederik/pkg-tmp/R-svn-build/m4'
>     > make[1]: Nothing to be done for 'R'.
>     > make[1]: Leaving directory '/home/frederik/pkg-tmp/R-svn-build/m4'
>     > make[1]: Entering directory '/home/frederik/pkg-tmp/R-svn-build/tools'
>     > make[1]: Nothing to be done for 'R'.
>     > make[1]: Leaving directory '/home/frederik/pkg-tmp/R-svn-build/tools'
>     > make[1]: Entering directory '/home/frederik/pkg-tmp/R-svn-build/doc'
>     > /usr/bin/install: cannot stat '../../R-svn/doc/NEWS': No such file or directory
>     > /usr/bin/install: cannot stat '../../R-svn/doc/NEWS.pdf': No such file or directory
>     > Makefile:164: recipe for target 'svnonly' failed
>     > make[1]: *** [svnonly] Error 1
>     > make[1]: Leaving directory '/home/frederik/pkg-tmp/R-svn-build/doc'
>     > Makefile:60: recipe for target 'R' failed
>     > make: *** [R] Error 1
> 
> This is strange:  Did you accidentally delete the 'non-tarball'
> file in your build directory which should have been created by
> 'configure' ?
> 
> I ask because your 'make' seems to be using the 'else' clause in
> the 'svnonly' target in the R-svn-build/Makefile
> but it should really use the first branch which does install
> things in ./doc/ (such as NEWS or NEWS.pdf).
> 
> I have never used  'STRIP=true' -- maybe that did remove the
> 'non-tarball' file ?
> 
> Why not rather do it the way I told you, i.e., *with* recommended
> packages, and no arguments to 'configure'
> (if that does work, you may try variants.. I agree that
> --without-recommended-packages should work as well, I just never
> use that).
> 
> Martin
> 
> 
>     > I configured like this:
> 
>     > $ cd ../R-svn-build/                                          
>     > $ ../R-svn/configure --without-recommended-packages --prefix=$HOME/r-svn-test STRIP=true
> 
>     > I guess I can try to debug it myself but thought I should report back
>     > to you. It works when I 'configure' and 'make' in the source
>     > directory.
> 
>     > Cheers,
> 
>     > Frederick
> 
> 
> 
>     > On Tue, May 24, 2016 at 07:20:18PM +0200, Martin Maechler wrote:
>     >> >>>>> Keith O'Hara <keith.ohara at nyu.edu>
>     >> >>>>>     on Tue, 24 May 2016 12:47:43 -0400 writes:
>     >> 
>     >> > svn checkout https://svn.r-project.org/R/trunk/ <target-directory>
>     >> 
>     >> yes, indeed. thank you, Keith.
>     >> 
>     >> and from then on only
>     >> 
>     >> cd <target-directory>
>     >> svn up
>     >> 
>     >> (which is short for 'svn update').
>     >> 
>     >> Another hint: Then do *not* build in the source directory but in
>     >> what we called a "build directory"; i.e., something like
>     >> (from scratch; including the only-once needed "checkout") :
>     >> 
>     >> svn checkout https://svn.r-project.org/R/trunk/ R
>     >> cd R
>     >> tools/rsync-recommended
>     >> mkdir ../build-R
>     >> cd ../build-R
>     >> ../R/configure
>     >> make
>     >> make check
>     >> 
>     >> and I then never run 'make install', but rather use symbolic
>     >> link from
>     >> ..../build-R/bin/R  to something like  ~/bin/R-devel 
>     >> i.e.,
>     >> cd ~/bin
>     >> ln -s ..../build-R/bin/R R-devel
>     >> 
>     >> Martin
>     >> 
>     >> >> On May 24, 2016, at 12:45 PM, frederik at ofb.net wrote:
>     >> >> 
>     >> >> I agree with Martin's summary of the situation, and with the updated
>     >> >> NEWS entry.
>     >> >> 
>     >> >> I'm not familiar with Subversion, can you tell me the command to use?
>     >> >> 
>     >> >> (I tried "svn co https://svn.r-project.org/R/" but it seems to be
>     >> >> downloading all branches)
>     >> >> 
>     >> >> Frederick
>     >> >> 
>     >> >> On Tue, May 24, 2016 at 04:30:11PM +0200, Martin Maechler wrote:
>     >> >>>>>>>> peter dalgaard <pdalgd at gmail.com>
>     >> >>>>>>>> on Tue, 24 May 2016 13:47:27 +0200 writes:
>     >> >>> 
>     >> >>>> I had a regression in config.site so the nightly build didn't. Retrying....
>     >> >>>> Looks like it will build, but the ctl-R, ctl-C bug is still present on OSX (w/Simon's libs). This _was_ fixed for a while, was it not?
>     >> >>> 
>     >> >>> I thought it was never fixed, for readline versions 5.x (or all
>     >> >>> of readline_version < 6.3 ?) because the patch assumed features
>     >> >>> not available, e.g., for Frederik (who got compilation errors
>     >> >>> which I think you confirmed on pre-6 readline).
>     >> >>> 
>     >> >>> I remember you having two different readlines installed on OSX
>     >> >>> but the standard Mac binary (from CRAN, i.e. Simon) would use
>     >> >>> the old readline version ?
>     >> >>> 
>     >> >>> so that whole  resetReadline() solution is now conditionalized inside
>     >> >>> 
>     >> >>> #if defined(RL_READLINE_VERSION) && RL_READLINE_VERSION >= 0x0603
>     >> >>> ...
>     >> >>> ...
>     >> >>> #endif
>     >> >>> 
>     >> >>> and hence the previous code (which is buggy) is used for
>     >> >>> readline versions < 6.3.
>     >> >>> As a consequence the bug is only fixed for readline >= 6.3,
>     >> >>> because the current patch did not compile and hence seemed not
>     >> >>> appropriate for  readline < 6.3 (and hence the above conditionalization).
>     >> >>> 
>     >> >>> 
>     >> >>>> (The NEWS entry is also wrong: The issue existed before readline 6.3)
>     >> >>> 
>     >> >>> Aah.. you are right. The API change with 6.3 was for the other, the
>     >> >>> "SIGWINCH" bug.
>     >> >>> 
>     >> >>> Here's a an update proposal for that NEWS entry :
>     >> >>> 
>     >> >>> ? The API for readline libraries >= 6.3 had changed such
>     >> >>> terminal window resizes where no longer properly signalled
>     >> >>> (PR#16604).  Also, ?Ctrl C? in incremental search behaved
>     >> >>> confusingly in R (unix) consoles (PR#16603) also for older
>     >> >>> readline versions. These have been fixed (for readline >=
>     >> >>> 6.3 only), thanks to patches by Frederick Eaton.
>     >> >>> 
>     >> >>> 
>     >> >>> Martin
>     >> >>> 
>     >> >>>> -pd
>     >> >>> 
>     >> >>>> On 24 May 2016, at 12:55 , Martin Maechler <maechler at stat.math.ethz.ch> wrote:
>     >> >>> 
>     >> >>>>> 
>     >> >>>>> Can you (Frederick, Peter, Keith, but ideally others, too)
>     >> >>>>> confirm that you don't see any problems anymore, when building a
>     >> >>>>> version of R-devel from sources that are newer 
>     >> >>>>> than (or equal to)  svn revision 70632 (2016-05-19 10:59:51, see below)?
>     >> >>>>> 
>     >> >>>>> I'm asking because the question is open if these should be
>     >> >>>>> "back ported" to R 3.3.0 patched or not.
>     >> >>>>> 
>     >> >>>>> Best regards,
>     >> >>>>> Martin
>     >> >>>>> 
>     >> >>>>>>>>>> Martin Maechler <maechler at stat.math.ethz.ch>
>     >> >>>>>>>>>> on Thu, 19 May 2016 11:02:48 +0200 writes:
>     >> >>>>> 
>     >> >>>>>>>>>> <frederik at ofb.net>
>     >> >>>>>>>>>> on Wed, 18 May 2016 15:03:31 -0700 writes:
>     >> >>>>> 
>     >> >>>>>>>> Readline <= 6.2 shouldn't require the SIGWINCH patch, so
>     >> >>>>>>>> if older versions have trouble finding rl_resize_terminal
>     >> >>>>>>>> then you could wrap a macro around that part.
>     >> >>>>> 
>     >> >>>>>>> I find python related patches that use
>     >> >>>>> 
>     >> >>>>>>> #ifdef HAVE_RL_RESIZE_TERMINAL
>     >> >>>>> 
>     >> >>>>>>> so they must have configured for that.  We could and
>     >> >>>>>>> probably should do the same, but as a Linux_only guy
>     >> >>>>>>> currently (even basically only one flavor of Linux), I'd
>     >> >>>>>>> appreciate others to produce code for that.
>     >> >>>>> 
>     >> >>>>> Actually that was easy (in hindsight.. I took too long!)
>     >> >>>>> enough, so I've now committed
>     >> >>>>> 
>     >> >>>>> ------------------------------------------------------------------------
>     >> >>>>> r70632 | maechler | 2016-05-19 10:59:51 +0200 (Thu, 19 May 2016) | 1 line
>     >> >>>>> Changed paths:
>     >> >>>>> M configure
>     >> >>>>> M configure.ac
>     >> >>>>> M src/include/config.h.in
>     >> >>>>> M src/unix/sys-std.c
>     >> >>>>> 
>     >> >>>>> check for rl_resize_terminal() now
>     >> >>>>> ------------------------------------------------------------------------
>     >> >>>>> 
>     >> >>>>> ... and Keith should even not see the warning anymore
>     >> >>>>> (nor Peter the error, when compiling using readline 5.x instead of 6.[23]).
>     >> >>>>> 
>     >> >>>>> 
>     >> >>>>> [...........]
>     >> >>> 
>     >> >>>> -- 
>     >> >>>> Peter Dalgaard, Professor,
>     >> >>>> Center for Statistics, Copenhagen Business School
>     >> >>>> Solbjerg Plads 3, 2000 Frederiksberg, Denmark
>     >> >>>> Phone: (+45)38153501
>     >> >>>> Office: A 4.23
>     >> >>>> Email: pd.mes at cbs.dk  Priv: PDalgd at gmail.com
>     >> >>> 
>     >> 
>


From hpages at fredhutch.org  Thu May 26 04:06:21 2016
From: hpages at fredhutch.org (=?UTF-8?B?SGVydsOpIFBhZ8Oocw==?=)
Date: Wed, 25 May 2016 19:06:21 -0700
Subject: [Rd] Suggestion: mkString(NULL) should be NA
In-Reply-To: <alpine.LFD.2.20.1605251032520.4743@itasca.stat.uiowa.edu>
References: <CABFfbXt7raZDRaGP+T=XWKeBZq8oh88FRh8+Xj7jFkf_VFspsA@mail.gmail.com>
	<CABFfbXu0LTrSy9Qq5mouq6fX=nN=NF9xshtM8Q9khYn3cWtEQw@mail.gmail.com>
	<CADwqtCP2O7zUSJ3BHvYbkD25EyJPyj9LhdazJf5UzELVW1_9-w@mail.gmail.com>
	<CABFfbXtUHYepH93PZrYktNbFfNX-Y8iF5Pk6DYOgUFk=MGK7pA@mail.gmail.com>
	<CADwqtCNLmskyk1v_syjGeH6H4tnLTAkihKh8c0gHuc7nHDqpDQ@mail.gmail.com>
	<22341.32520.155909.439980@stat.math.ethz.ch>
	<CABFfbXtVi09hpKc-FbgWBbPkJrU1V2bNdsTHqBEdxFK2rfmpog@mail.gmail.com>
	<CAOQ5NyftzeVpbRGxM0Jd6=8f00VENWnAmW2oBQchALqvzKJOmA@mail.gmail.com>
	<CANnL8gpKeY7XVeLf+WyKCT_C2yjGo69_t25r-LTdmVu93_6eCw@mail.gmail.com>
	<alpine.LFD.2.20.1605251032520.4743@itasca.stat.uiowa.edu>
Message-ID: <57465A1D.1010200@fredhutch.org>

Hi,

I tend to agree with the objections expressed earlier. I would only
add that making the NULL pointer semantically equivalent to NA would
introduce a precedent that could lead to some confusion. For example
it would set the expectation that CHAR(Rf_mkChar(NULL)) is NULL,
which is not the case AFAIK. Or that low-level string manipulation
utilities that take a C-string as input (e.g. Rf_reEnc()) accept NULL
and propagate it.

Of course these things can be modified to be consistent with the new
"NULL pointer == NA" paradigm but this might end up being a bigger move
than what it seems at first sight...

Cheers,
H.


On 05/25/2016 08:43 AM, luke-tierney at uiowa.edu wrote:
> On Wed, 25 May 2016, Tim Keitt wrote:
>
>> On Wed, May 25, 2016 at 7:22 AM, Michael Lawrence
>> <lawrence.michael at gene.com
>>> wrote:
>>
>>> On Wed, May 25, 2016 at 4:23 AM, Jeroen Ooms <jeroen.ooms at stat.ucla.edu>
>>> wrote:
>>>
>>
>> I'm not disagreeing with what's been said in this thread, but I can't
>> help
>> but recall that I brought up this exact issue probably 15 years ago
>> and was
>> told (by Brian, I believe) "don't do that" (pass a null pointer),
>> which was
>> perfectly fine. The real issue was not the behavior but that it was not
>> documented or consistent. I've lived by the mantra since that you can
>> never
>> trust a pointer in R code. User must always check for NULL.
>
> In _C_ code.  This is true whether you are calling into the R C API or
> any other C library: you as the C programmer need to make sure either
> that passing NULL is OK or make sure you don't do that.
>
> I wouldn't object to mkXXX checking for NULL and signaling an error
> instead of segfaulting, but good C code calling mkXXX should still
> typically do its own check and handle the situation in an appropriate
> way.
>
> Best,
>
> luke
>
>
>>
>> I just wrote my own functions mkXXX_safe that wrap the internals and
>> check
>> the pointer.
>>
>> THK
>>
>> http://www.keittlab.org/
>>
>>     [[alternative HTML version deleted]]
>>
>> ______________________________________________
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>
>

-- 
Herv? Pag?s

Program in Computational Biology
Division of Public Health Sciences
Fred Hutchinson Cancer Research Center
1100 Fairview Ave. N, M1-B514
P.O. Box 19024
Seattle, WA 98109-1024

E-mail: hpages at fredhutch.org
Phone:  (206) 667-5791
Fax:    (206) 667-1319


From lukas.stadler at oracle.com  Fri May 27 15:49:37 2016
From: lukas.stadler at oracle.com (Lukas Stadler)
Date: Fri, 27 May 2016 15:49:37 +0200
Subject: [Rd] Evolution of the R native interface
Message-ID: <F7E9808E-15D4-4F70-B93D-0100B9E67DD4@oracle.com>

Hi!

I hope you don?t mind me posting this call for participation - I do think the matter at hand is very important for the people on this list, and the people on this list are very important for the matter at hand.

For historical reasons, the native API provided by R for use by applications and packages is not as concise and consistent as is could be, and is tied into the internals of the implementation of the language. This makes writing native code components more complex than necessary, and thus increases the entry barrier for writing applications and packages. It also hinders evolution of the R runtime, because it restricts the freedom to change internal implementation details, and prevents alternative implementations from supporting all R applications and packages.

The R consortium?s infrastructure steering committee (ISC) recently decided to create a working group that intends to explore the future of R?s native APIs [1]:
?Future-proof native APIs for R: This working groups will assess current native API usage, gather community input, and work towards an easy-to-understand, consistent and verifiable API that will drive R language adoption.?

In order to do so, we are hoping to create a diverse group, inviting different stakeholders:
people working on the core of the R implementation and package system
R package authors and maintainers
developers of alternative implementations of the R language
people interested in R?s development for various other reasons

We?d like to answer questions like:
API evolution or API revolution?
should there be one interface covering all use cases, or multiple targeted interfaces?
what are the basic design principles behind the new API?
how can adoption of such an interface work?

Please let me know whether you?re interested in this - we would be glad if some of you would join this effort and participate in the working group.

The working group will operate via email [2], a wiki page [3] and teleconferences.
We also plan to have an in-person meeting at this year?s useR! conference.

Also, if you have someone in mind that should be part of the working group, please let us know. We may not have thought of them yet.

Best Regards,
 Lukas Stadler

[1] https://www.r-consortium.org/news/announcement/2016/03/r-consortium-funds-technical-initiatives-community-events-and-training <https://www.r-consortium.org/news/announcement/2016/03/r-consortium-funds-technical-initiatives-community-events-and-training>
[2] http://lists.r-consortium.org/mailman/listinfo/rconsortium-wg-api <http://lists.r-consortium.org/mailman/listinfo/rconsortium-wg-api>
[3] https://wiki.r-consortium.org/view/R_Native_API <https://wiki.r-consortium.org/view/R_Native_API>


	[[alternative HTML version deleted]]


From pperry at stern.nyu.edu  Fri May 27 21:58:32 2016
From: pperry at stern.nyu.edu (Patrick Perry)
Date: Fri, 27 May 2016 15:58:32 -0400
Subject: [Rd] Update CRAN submission process
Message-ID: <F1F76F0699064354ABA01ACD8C047F26@stern.nyu.edu>


The CRAN submission process seems in need of a massive overhaul. Why has this process not been automated yet?


?
Patrick Perry
Assistant Professor
NYU Stern School of Business


From ucfagls at gmail.com  Fri May 27 22:33:33 2016
From: ucfagls at gmail.com (Gavin Simpson)
Date: Fri, 27 May 2016 14:33:33 -0600
Subject: [Rd] Update CRAN submission process
In-Reply-To: <F1F76F0699064354ABA01ACD8C047F26@stern.nyu.edu>
References: <F1F76F0699064354ABA01ACD8C047F26@stern.nyu.edu>
Message-ID: <CAAHES9wLmcKzWwUhrn+U2Ac2pCZn73ei0j-4Lmu2X9+A06_F1g@mail.gmail.com>

In the interests of, well, everyone, I will just mention that this is
the wrong list. CRAN != R Core and asking questions about CRAN is OT
for this list as this is for topics related to developing R, the
software.

You should address CRAN questions to the CRAN maintainers, but I
suggest you don't in this instance as these discussions have happened
before. Instead, take a look at R-Hub:
https://www.r-consortium.org/funded-projects, which aims to provide
some of the automated tools you might require in an automated process.
CRAN will still be CRAN, but with R-Hub in place package authors
should know well ahead of uploading to CRAN what problems they might
encounter and can fix them.

HTH

G

On 27 May 2016 at 13:58, Patrick Perry <pperry at stern.nyu.edu> wrote:
>
> The CRAN submission process seems in need of a massive overhaul. Why has this process not been automated yet?
>
>
> ?
> Patrick Perry
> Assistant Professor
> NYU Stern School of Business
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel



-- 
Gavin Simpson, PhD


From mdsumner at gmail.com  Sat May 28 01:12:08 2016
From: mdsumner at gmail.com (Michael Sumner)
Date: Fri, 27 May 2016 23:12:08 +0000
Subject: [Rd] Update CRAN submission process
In-Reply-To: <F1F76F0699064354ABA01ACD8C047F26@stern.nyu.edu>
References: <F1F76F0699064354ABA01ACD8C047F26@stern.nyu.edu>
Message-ID: <CAAcGz99AhsHd0eOXxMf7JKr8FLDRN_f=aK9sP6vHE9CnhtnM4Q@mail.gmail.com>

On Sat, 28 May 2016 at 05:59 Patrick Perry <pperry at stern.nyu.edu> wrote:

>
> The CRAN submission process seems in need of a massive overhaul. Why has
> this process not been automated yet?
>
>


Many improvements to R come via extensions to R. See Hadley Wickham's R
Packages book for ways  to improve the process with devtools.

Cheers, Mike.

?
> Patrick Perry
> Assistant Professor
> NYU Stern School of Business
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel

-- 
Dr. Michael Sumner
Software and Database Engineer
Australian Antarctic Division
203 Channel Highway
Kingston Tasmania 7050 Australia

	[[alternative HTML version deleted]]


From suharto_anggono at yahoo.com  Sat May 28 11:34:08 2016
From: suharto_anggono at yahoo.com (Suharto Anggono Suharto Anggono)
Date: Sat, 28 May 2016 09:34:08 +0000 (UTC)
Subject: [Rd] complex NA's match(),
 etc: not back-compatible change proposal
References: <1244172957.632851.1464428048607.JavaMail.yahoo.ref@mail.yahoo.com>
Message-ID: <1244172957.632851.1464428048607.JavaMail.yahoo@mail.yahoo.com>

On 'factor', I meant the case where 'levels' is not specified, where 'unique' is called.

> factor(c(complex(real=NaN), complex(imaginary=NaN)))
[1] NaN+0i <NA>
Levels: NaN+0i

Look at <NA> in the result above. Yes, it happens in earlier versions of R, too.

On matching both NA and NaN, another consequence is that length(unique(.)) may depend on order. Example using R devel r70604:

> x0 <- c(0,1, NA, NaN); z <- outer(x0,x0, complex, length.out=1); rm(x0)
> (z <- z[is.na(z)])
 [1]       NA NaN+  0i       NA NaN+  1i       NA       NA       NA       NA
 [9]   0+NaNi   1+NaNi       NA NaN+NaNi
> length(print(unique(z)))
[1]     NA NaN+0i
[1] 2
> length(print(unique(c(z[8], z[-8]))))
[1] NA
[1] 1
--------------------------------------------
On Mon, 23/5/16, Martin Maechler <maechler at stat.math.ethz.ch> wrote:

 Subject: Re: [Rd] complex NA's match(), etc: not back-compatible change proposal

 Cc: R-devel at r-project.org
 Date: Monday, 23 May, 2016, 11:06 PM

 >>>>>
 Suharto Anggono Suharto Anggono via R-devel <r-devel at r-project.org>
 >>>>>? ???on Fri, 13
 May 2016 16:33:05 +0000 writes:

 ? ? > That, for example, complex(real=NaN)
 and complex(imaginary=NaN) are regarded as equal makes it
 possible that 

 ? ? >?
 length(unique(as.character(x))) > length(unique(x)) 

 ? ? > (current code of
 function 'factor' doesn't expect it). 

 Thank you, that is an
 interesting remark - but is already true,
 in
[[elided Yahoo spam]]

 ..
 and of course this is because we do
 *print*???0+NaNi? etc,
 i.e., we
 differentiate the? non-NA-but-NaN complex values in
 formatting / printing but not in match(),
 unique() ...

 and indeed,
 with the? 'z'? example below,
 ?
 fz <- factor(z,z)
 gives a warnings about
 duplicated levels and gives such warnings
 also in current (and previous) versions of R,
 at least for the slightly
 larger z?
 I've used in the tests/reg-tests-1c.R example.

 For the moment I can live with
 that warning, as I don't think
 factor()s
 are constructed from complex numbers "often"...
 and the performance of factor() in the more
 regular cases is important.

 > Yes, an argument for the behavior is that
 NA and NaN are of one kind.
 > On my
 system, using 32-bit R for Windows from binary from CRAN,
 the result of sapply(z, match, table = z) (not in current
 R-devel) may be different from below:
 ? ?
 > 1 2 3 4 1 3 7 8 2 4 8 12? # R 2.10.1, different from
 below
 ? ? > 1 2 3 4 1 3 7 8 2 4 8 12?
 # R 3.2.5, different from below

 interesting, thank you... and another reason
 why the change
 (currently only in R-devel)
 may have been a good one: More uniformity.

 ? ? > I noticed that, by
 function 'cequal' in unique.c, a complex number that
 has both NA and NaN matches NA and also matches NaN.

 ? ? >> x0 <- c(0,1,
 NA, NaN); z <- outer(x0,x0, complex, length.out=1);
 rm(x0)
 ? ? >> (z <-
 z[is.na(z)])
 ? ? > [1]? ?
 ???NA NaN+? 0i? ? ???NA NaN+? 1i?
 ? ???NA? ? ???NA? ?
 ???NA? ? ???NA
 ? ?
 > [9]???0+NaNi???1+NaNi? ?
 ???NA NaN+NaNi

 ? ? >> sapply(z, match, table =
 z[8])
 ? ? > [1] 1 1 1 1 1 1 1 1 1 1 1
 1
 ? ? >> match(z, z[8])
 ? ? > [1] 1 1 1 1 1 1 1 1 1 1 1 1

 Yes, I see the same. But is
 n't it what we expect:

 All of our z[] entries has at least one NA or a
 NaN in its real
 or imaginary, and since z[8]
 has both, it does match with all
 z[]'s
 either because of the NA or because of the NaN in common.

 Hence, currently, I don't
 think this needs to be changed...
 but if
 there are other reasons / arguments ...

 Thank you again,
 Martin
 Maechler


 ? ? >> sessionInfo()
 ?
 ? > R Under development (unstable) (2016-05-12
 r70604)
 ? ? > Platform:
 i386-w64-mingw32/i386 (32-bit)
 ? ? >
 Running under: Windows XP (build 2600) Service Pack 2

 ? ? > locale:
 ? ? > [1] LC_COLLATE=English_United
 States.1252
 ? ? > [2]
 LC_CTYPE=English_United States.1252
 ? ?
 > [3] LC_MONETARY=English_United States.1252
 ? ? > [4] LC_NUMERIC=C
 ?
 ? > [5] LC_TIME=English_United States.1252

 ? ? > attached base
 packages:
 ? ? > [1] stats?
 ???graphics? grDevices utils?
 ???datasets? methods???base

 ? ? >
 -----------------
 >>>>>
 Martin Maechler <maechler at stat.math.ethz.ch>
 >>>>>? ???on Tue, 10
 May 2016 16:08:39 +0200 writes:

 ? ? >> This is an RFC / announcement
 related to the 2nd part of PR#16885
 ? ?
 >> https://bugs.r-project.org/bugzilla/show_bug.cgi?id=16885
 ? ? >> about? complex NA's.

 ? ? >> The (somewhat
 rare) incompatibility in R's 3.3.0 match() behavior for
 the
 ? ? >> case of complex numbers
 with NA & NaN's {which has been fixed for R 3.3.0
 ? ? >> patched in the mean time}
 triggered some more comprehensive "research".

 ? ? >> I found that we
 have had a long-standing inconsistency at least between
 the
 ? ? >> documented and the real
 behavior.? I am claiming that the documented
 ? ? >> behavior is desirable and hence
 R's current "real" behavior is bugous, and
 ? ? >> I am proposing to change it, in
 R-devel (to be 3.4.0) for now.

 ? ? > After the? "roaring
 unanimous" assent? (one private msg
 ?
 ? > encouraging me to go forward, no dissenting voice,
 hence an
 ? ? > "odds ratio"
 of? +Inf? in favor ;-)

 ?
 ? > I have now committed my proposal to R-devel (svn
 rev. 70597) and
 ? ? > some of us will
 be seeing the effect in package space within a
 ? ? > day or so, in the CRAN checks
 against R-devel (not for
 ? ? >
 bioconductor AFAIK; their checks using R-devel only when it
 less
 ? ? > than ca 6 months from
 release).

 ? ? >
 It's still worthwhile to discuss the issue, if you come
 late
 ? ? > to it, notably as
 ---paraphrasing Dirk on the R-package-devel list---
 ? ? > the release of 3.4.0 is almost a
 year away, and so now is the
 ? ? > best
 time to tinker with the API, in other words, consider
 breaking
 ? ? > rarely used legacy
 APIs..

 ? ? > Martin


 ? ?
 >> In help(match) we have been saying

 ? ? >> |? Exactly
 what matches what is to some extent a matter of
 definition.
 ? ? >> |? For all
 types, \code{NA} matches \code{NA} and no other value.
 ? ? >> |? For real and complex values,
 \code{NaN} values are regarded
 ? ?
 >> |? as matching any other \code{NaN} value, but not
 matching \code{NA}.

 ? ?
 >> for at least 10 years.? But we don't do that
 at all in the
 ? ? >> complex case
 (and AFAIK never got a bug report about it).

 ? ? >> Also, e.g.,
 print(.) or format(.) do simply use? "NA" for
 all
 ? ? >> the different complex
 NA-containing numbers, where OTOH,
 ? ?
 >> non-NA NaN's { <=>? !is.nan(z) &
 is.na(z) }
 ? ? >> in format() or
 print() do show the NaN in real and/or imaginary
 ? ? >> parts; for an example, look at
 the "format" column of the matrix
 ? ? >> below, after
 'print(cbind' ...

 ? ? >> The current match()---and
 duplicated(), unique() which are based on the same
 ? ? >> C code---*do* distinguish almost
 all complex NA / NaN's which is
 ? ?
 >> NOT according to documentation. I have found that
 this is just because of 
 ? ? >> of
 our hashing function for the complex case, chash() in
 R/src/main/unique.c,
 ? ? >> is
 bogous in the sense that it is not compatible with the above
 documentation
 ? ? >> and also not
 with the cequal() function (in the same file uniqu.c) for
 checking
 ? ? >> equality of complex
 numbers.

 ? ? >> As
 I have found,, a *simplified* version of the chash()
 function
 ? ? >> to make it
 compatible with cequal() does solve all the problems
 I've
 ? ? >> indicated,? and the
 current plan is to commit that change --- after some
 ? ? >> discussion time, here on R-devel
 ---? to the code base.

 ?
 ? >> My change passes? 'make check-all'
 fine, but I'm 100% sure that there will
 ? ? >> be effects in package-space. ...
 one reason for this posting.

 ? ? >> As mentioned above, note that
 the chash() function has been in
 ? ?
 >> use for all three functions
 ? ?
 >> match()
 ? ? >>
 duplicated()
 ? ? >> unique()
 ? ? >> and the change will affect all
 three --- but just for the case of complex
 ? ? >> vectors with NA or NaN's.

 ? ? >> To show more, a
 small R session -- using my version of R-devel
 ? ? >> == the proposition: 
 ? ? >> The R script
 ('complex-NA-short.R') for (a bit more than) the
 ? ? >> session is attached {{you can
 attach? text/plain easily}}:

 ? ? >>> x0 <- c(0,1, NA, NaN); z
 <- outer(x0,x0, complex, length.out=1); rm(x0)
 ? ? >>> ##? ? ? ?
 ???--- = NA_real_? but that does not exist e.g.,
 in R 2.3.1
 ? ? >>> ##? ? ? ?
 ? ? ? ? ???similarly,? '1L',
 '2L', .. do not exist e.g., in R 2.3.1
 ? ? >>> (z <- z[is.na(z)])
 ? ? >> [1]? ? ???NA NaN+?
 0i? ? ???NA NaN+? 1i? ? ???NA?
 ? ???NA? ? ???NA? ?
 ???NA
 ? ? >>
 [9]???0+NaNi???1+NaNi? ?
 ???NA NaN+NaNi
 ? ? >>>
 outerID <- function(x,y, ...) { ## ugly; can we get
 outer() to work ?
 ? ? >> +?
 ???r <- matrix( , length(x), length(y))
 ? ? >> +? ???for(i in
 seq(along=x))
 ? ? >> +? ? ?
 ???for(j in seq(along=y))
 ? ?
 >> +? ? ? ? ? ???r[i,j] <-
 identical(z[i], z[j], ...)
 ? ? >>
 +? ???r
 ? ? >> + }
 ? ? >>> ## Very strictly - in the
 sense of identical() -- these 12 complex numbers all
 differ:
 ? ? >>> ## a version that
 works in older versions of R, where identical() had fewer
 arguments!
 ? ? >>> outerID.picky
 <- function(x,y) {
 ? ? >> +?
 ???nF <- length(formals(identical)) - 2
 ? ? >> +?
 ???do.call("outerID", c(list(x, y),
 as.list(rep(FALSE, nF))))
 ? ? >> +
 }
 ? ? >>> oldR <-
 !exists("getRversion") || getRversion() <
 "3.0.0" ## << FIXME: 3.0.0 is? a wild
 guess
 ? ? >>> symnum(id.z <-
 outerID.picky(z,z)) ## == Diagonal matrix [newer versions of
 R]
 ? ? ? ? ? ? ? ? ? ? ? ? ?
 ???
 ? ? >> [1,] | . . . .
 . . . . . . .
 ? ? >> [2,] . | . . .
 . . . . . . .
 ? ? >> [3,] . . | . .
 . . . . . . .
 ? ? >> [4,] . . . | .
 . . . . . . .
 ? ? >> [5,] . . . . |
 . . . . . . .
 ? ? >> [6,] . . . . .
 | . . . . . .
 ? ? >> [7,] . . . . .
 . | . . . . .
 ? ? >> [8,] . . . . .
 . . | . . . .
 ? ? >> [9,] . . . . .
 . . . | . . .
 ? ? >> [10,] . . . . .
 . . . . | . .
 ? ? >> [11,] . . . . .
 . . . . . | .
 ? ? >> [12,] . . . . .
 . . . . . . |
 ? ? >>> try(# for
 older R versions
 ? ? >> +
 stopifnot(identical(id.z, outerID(z,z)), oldR ||
 identical(id.z, diag(12) == 1))
 ? ?
 >> + )
 ? ? >>> (mz <-
 match(z, z)) # currently different {NA,NaN} patterns differ
 - not in print()/format() _FIXME_
 ? ?
 >> [1] 1 2 1 2 1 1 1 1 2 2 1 2
 ? ?
 >>> zRI <- rbind(Re=Re(z), Im=Im(z)) # and see
 the pattern :
 ? ? >>>
 print(cbind(format = format(z), t(zRI), mz), quote=FALSE)
 ? ? >>
 format???Re???Im???mz
 ? ? >> [1,]? ? ???NA
 <NA> 0? ? 1 
 ? ? >> [2,]
 NaN+? 0i NaN? 0? ? 2 
 ? ? >>
 [3,]? ? ???NA <NA> 1? ? 1 
 ? ? >> [4,] NaN+? 1i NaN? 1? ? 2

 ? ? >> [5,]? ? ???NA
 0? ? <NA> 1 
 ? ? >> [6,]?
 ? ???NA 1? ? <NA> 1 
 ?
 ? >> [7,]? ? ???NA <NA> <NA>
 1 
 ? ? >> [8,]? ? ???NA
 NaN? <NA> 1 
 ? ? >>
 [9,]???0+NaNi 0? ? NaN? 2 
 ?
 ? >> [10,]???1+NaNi 1? ? NaN? 2 
 ? ? >> [11,]? ? ???NA
 <NA> NaN? 1 
 ? ? >> [12,]
 NaN+NaNi NaN? NaN? 2 
 ? ? >>>

 ? ? >>
 -------------------------------
 ? ?
 >> Note that 'mz <- match(z, z)' and hence
 the last column of the matrix above
 ? ?
 >> are very different in current R, 
 ? ? >> distinguishing most kinds of NA
 / NaN? against the documentation (and the
 ? ? >> real/numeric case).

 ? ? >> Martin
 Maechler
 ? ? >> R Core Team


 ? ?
 >> ### Basically a shortened version of? the PR#16885
 -- complex part b)
 ? ? >> ### of?
 R/tests/reg-tests-1c.R

 ?
 ? >> ## b) complex 'x' with different kinds
 of NaN
 ? ? >> x0 <- c(0,1, NA,
 NaN); z <- outer(x0,x0, complex, length.out=1); rm(x0)
 ? ? >> ##? ? ? ? ???---
 = NA_real_? but that does not exist e.g., in R 2.3.1
 ? ? >> ##? ? ? ? ? ? ? ?
 ???similarly,? '1L', '2L', .. do
 not exist e.g., in R 2.3.1
 ? ? >> (z
 <- z[is.na(z)])
 ? ? >> outerID
 <- function(x,y, ...) { ## ugly; can we get outer() to
 work ?
 ? ? >> r <- matrix( ,
 length(x), length(y))
 ? ? >> for(i
 in seq(along=x))
 ? ? >> for(j in
 seq(along=y))
 ? ? >> r[i,j] <-
 identical(z[i], z[j], ...)
 ? ? >>
 r
 ? ? >> }
 ? ?
 >> ## Very strictly - in the sense of identical() --
 these 12 complex numbers all differ:
 ? ?
 >> ## a version that works in older versions of R,
[[elided Yahoo spam]]
 ? ?
 >> outerID.picky <- function(x,y) {
 ? ? >> nF <-
 length(formals(identical)) - 2
 ? ?
 >> do.call("outerID", c(list(x, y),
 as.list(rep(FALSE, nF))))
 ? ? >>
 }
 ? ? >> oldR <-
 !exists("getRversion") || getRversion() <
 "3.0.0" ## << FIXME: 3.0.0 is? a wild
 guess
 ? ? >> symnum(id.z <-
 outerID.picky(z,z)) ## == Diagonal matrix [newer versions of
 R]
 ? ? >> try(# for older R
 versions
 ? ? >>
 stopifnot(identical(id.z, outerID(z,z)), oldR ||
 identical(id.z, diag(12) == 1))
 ? ?
 >> )
 ? ? >> (mz <- match(z,
 z)) # currently different {NA,NaN} patterns differ - not in
 print()/format() _FIXME_
 ? ? >> zRI
 <- rbind(Re=Re(z), Im=Im(z)) # and see the pattern :
 ? ? >> print(cbind(format = format(z),
 t(zRI), mz), quote=FALSE)

 ? ? >> ## compute? match(z[i], z) ,
 for? i = 1,2,..,12? :
 ? ? >> (m1z
 <- sapply(z, match, table = z))
 ? ?
 >> ## 1 2 1 2 2 2 1 2 2 2 1 2???# R 1.2.3?
 (2001-04-26)
 ? ? >> ## 1 2 3 4 1 3 7
 8 2 4 8 7???# R 1.4.1? (2002-01-30)
 ? ? >> ## 1 2 3 4 1 3 7 8 2 4 8 12? #
 R 1.5.1? (2002-06-17)
 ? ? >> ## 1 2
 3 4 1 3 7 8 2 4 8 12? # R 1.8.1? (2003-11-21)
 ? ? >> ## 1 2 3 4 1 3 7 8 2 4 8 12? #
 R 2.0.1? (2004-11-15)
 ? ? >> ## 1 2
 3 4 1 3 7 4 2 4 4 12? # R 2.1.1? (2005-06-20)
 ? ? >> ## 1 2 3 4 1 3 7 4 2 4 4 12? #
 R 2.3.1? (2006-06-01)
 ? ? >> ## 1 2
 3 4 1 3 7 8 2 4 8 12? # R 2.5.1? (2007-06-27)
 ? ? >> ## 1 2 3 4 1 3 7 4 2 4 4 12? #
 R 2.10.1 (2009-12-14)
 ? ? >> ## 1 2
 3 4 1 3 7 4 2 4 4 12? # R 3.1.1? (2014-07-10)
 ? ? >> ## 1 2 3 4 1 3 7 4 2 4 4 12? #
 R 3.2.5 -- and 3.3.0 patched
 ? ? >>
 ## 1 2 1 2 1 1 1 1 2 2 1 2???# <<--
 Martin's R-devel and proposed future R

 ? ? >>
 if(!exists("anyNA", mode="function"))
 anyNA <- function(x) any(is.na(x))
 ? ?
 >> stopifnot(apply(zRI, 2, anyNA)) # *all* are? NA
 *or* NaN (or both)
 ? ? >> is.NA
 <- function(.) is.na(.) & !is.nan(.)
 ? ? >> (iNaN <- apply(zRI, 2,
 function(.) any(is.nan(.))))
 ? ? >>
 (iNA <-? apply(zRI, 2, function(.) any(is.NA (.)))) #
 has non-NaN NA's
 ? ? >> ## In
 Martin's version of R-devel :
 ? ?
 >> stopifnot(identical(m1z == 1, iNA),
 ? ? >> identical(m1z == 2, !iNA))
 ? ? >> ## m1z uses match(x, *) with
 length(x) == 1 and failed in R 3.3.0
 ? ?
 >> stopifnot(identical(m1z, mz))
 ? ?
 >> ______________________________________________
 ? ? >> R-devel at r-project.org mailing
 list
 ? ? >> https://stat.ethz.ch/mailman/listinfo/r-devel

 ? ? >
 ______________________________________________
 ? ? > R-devel at r-project.org
 mailing list
 ? ? > https://stat.ethz.ch/mailman/listinfo/r-devel


From maechler at stat.math.ethz.ch  Mon May 30 12:48:35 2016
From: maechler at stat.math.ethz.ch (Martin Maechler)
Date: Mon, 30 May 2016 12:48:35 +0200
Subject: [Rd] complex NA's match(),
 etc: not back-compatible change proposal
In-Reply-To: <1244172957.632851.1464428048607.JavaMail.yahoo@mail.yahoo.com>
References: <1244172957.632851.1464428048607.JavaMail.yahoo.ref@mail.yahoo.com>
	<1244172957.632851.1464428048607.JavaMail.yahoo@mail.yahoo.com>
Message-ID: <22348.6787.585382.412632@stat.math.ethz.ch>

>>>>> Suharto Anggono 
>>>>>     on Sat, 28 May 2016 09:34:08 +0000 writes:

    > On 'factor', I meant the case where 'levels' is not
    > specified, where 'unique' is called.

I see, thank you.
    
    >> factor(c(complex(real=NaN), complex(imaginary=NaN)))
    > [1] NaN+0i <NA>
    > Levels: NaN+0i

    > Look at <NA> in the result above. Yes, it happens in
    > earlier versions of R, too.

Yes; let's call this "problem 1"

    > On matching both NA and NaN, another consequence is that
    > length(unique(.)) may depend on order. 
    > Example using R devel r70604:

    >> x0 <- c(0,1, NA, NaN); z <- outer(x0,x0, complex, length.out=1); rm(x0)
    >> (z <- z[is.na(z)])
    > [1]       NA NaN+  0i       NA NaN+  1i       NA       NA       NA       NA
    > [9]   0+NaNi   1+NaNi       NA NaN+NaNi
    >> length(print(unique(z)))
    > [1]     NA NaN+0i
    > [1] 2
    >> length(print(unique(c(z[8], z[-8]))))
    > [1] NA
    > [1] 1
    > --------------------------------------------

Thank you, Suharto. I agree these are even more convincing
reasons to consider changing.
Let's call this ("matching both NA and NaN")  "problem 2".

I think we agree that the R-devel -- comparted to previous
versions -- *is* consistent in its (C level) functions cequal()
and  chash() and also is consistent with the documentation
of match()/unique()/duplicated().

Hence I think a change would have to affect all of the above,
including a change of documentation.

Also, resolution of "problem 1" and "problem 2" are related, but
--I think-- almost separate.
For the following, let's use a vector notation for complex
numbers, say
    (a, b) :== complex(real = a, imaginary = b)

With R  (showing relevant examples):
##------------------------------------------------------------------------------
options(width = max(85, getOption("width"))) # so 'z' prints in one line
p.z <- function(z) print(noquote(paste0("(",Re(z),",",Im(z),")")))
z <- c(1,NA,NaN); z <- outer(z,z, complex, length.out=1); (z <- z[is.na(z)])
##     NA NaN+  1i       NA       NA       NA   1+NaNi       NA NaN+NaNi
p.z(z)
##  (NA,1)  (NaN,1)  (1,NA)  (NA,NA)  (NaN,NA)  (1,NaN)  (NA,NaN)  (NaN,NaN)
length(p.z(unique(z[ 1:8 ])))
## [1] (NA,1)  (NaN,1)
## [1] 2
length(p.z(unique(z[ c(8,1:7) ])))
## [1] (NaN,NaN) (NA,1)
## [1] 2
length(p.z(unique(z[ c(7:8,1:6) ])))
## [1] (NA,NaN)
## [1] 1
##------------------------------------------------------------------------------

Problem 1:
  To me, at the moment, it would seem most "natural" to consider a
  change where the match()/unique()/duplicated()  behavior  matched
  the behavior of print()/format()/as.character()  for such
  complex vectors.
  I think this would automatically solve the issue that sometimes

	length(unique(as.character(x))) > length(unique(x))

  The are principally two solutions to this:

  A: change  match()/unique()/duplicated()
  B: change  print()/format()/as.character()
  
  For A -- which seems "less disruptive" and more desirable to
  me -- we would have to change cequal() {and chash()!} and say
  that complex numbers with NA|NaN  "match" if they have any NA, but
  otherwise, both the regular (r,i) and the NaN must be at the
  exact same places (and *different* NaNs should match, of course).


Problem 2:   unique(z[i])  depends on the permutation 'i'

  What should a change be here ...  notably after the "proposed"
  (rather only "considered") change   '1 A' above ?

  Can "the" new behavior easily be described in words (if '1 A'
  above is already assumed)?

At the moment, I would not tackle Problem 2.
It would become less problematic once  Problem 1 is solved
according to '1 A', because it least  length(unique(.)) would
not change:  It would contain *one* z[] with an NA, and all the
other z[]s.

Opinions ?  Thank you in advance for chiming in..

Martin Maechler,
ETH Zurich

    > On Mon, 23/5/16, Martin Maechler <maechler at stat.math.ethz.ch> wrote:

    > Subject: Re: [Rd] complex NA's match(), etc: not back-compatible change proposal

    > Cc: R-devel at r-project.org
    > Date: Monday, 23 May, 2016, 11:06 PM

    >>>>>> 
    > Suharto Anggono Suharto Anggono via R-devel <r-devel at r-project.org>
    >>>>>> ? ???on Fri, 13
    > May 2016 16:33:05 +0000 writes:

    > ? ? > That, for example, complex(real=NaN)
    > and complex(imaginary=NaN) are regarded as equal makes it
    > possible that 

    > ? ? >?
    > length(unique(as.character(x))) > length(unique(x)) 

    > ? ? > (current code of
    > function 'factor' doesn't expect it). 

    > Thank you, that is an
    > interesting remark - but is already true,
    > in
    > [[elided Yahoo spam]]

    > ..
    > and of course this is because we do
    > *print*???0+NaNi? etc,
    > i.e., we
    > differentiate the? non-NA-but-NaN complex values in
    > formatting / printing but not in match(),
    > unique() ...

    > and indeed,
    > with the? 'z'? example below,
    > ?
    > fz <- factor(z,z)
    > gives a warnings about
    > duplicated levels and gives such warnings
    > also in current (and previous) versions of R,
    > at least for the slightly
    > larger z?
    > I've used in the tests/reg-tests-1c.R example.

    > For the moment I can live with
    > that warning, as I don't think
    > factor()s
    > are constructed from complex numbers "often"...
    > and the performance of factor() in the more
    > regular cases is important.

    >> Yes, an argument for the behavior is that
    > NA and NaN are of one kind.
    >> On my
    > system, using 32-bit R for Windows from binary from CRAN,
    > the result of sapply(z, match, table = z) (not in current
    > R-devel) may be different from below:
    > ? ?
    >> 1 2 3 4 1 3 7 8 2 4 8 12? # R 2.10.1, different from
    > below
    > ? ? > 1 2 3 4 1 3 7 8 2 4 8 12?
    > # R 3.2.5, different from below

    > interesting, thank you... and another reason
    > why the change
    > (currently only in R-devel)
    > may have been a good one: More uniformity.

    > ? ? > I noticed that, by
    > function 'cequal' in unique.c, a complex number that
    > has both NA and NaN matches NA and also matches NaN.

    > ? ? >> x0 <- c(0,1,
    > NA, NaN); z <- outer(x0,x0, complex, length.out=1);
    > rm(x0)
    > ? ? >> (z <-
    > z[is.na(z)])
    > ? ? > [1]? ?
    > ???NA NaN+? 0i? ? ???NA NaN+? 1i?
    > ? ???NA? ? ???NA? ?
    > ???NA? ? ???NA
    > ? ?
    >> [9]???0+NaNi???1+NaNi? ?
    > ???NA NaN+NaNi

    > ? ? >> sapply(z, match, table =
    > z[8])
    > ? ? > [1] 1 1 1 1 1 1 1 1 1 1 1
    > 1
    > ? ? >> match(z, z[8])
    > ? ? > [1] 1 1 1 1 1 1 1 1 1 1 1 1

    > Yes, I see the same. But is
    > n't it what we expect:

    > All of our z[] entries has at least one NA or a
    > NaN in its real
    > or imaginary, and since z[8]
    > has both, it does match with all
    > z[]'s
    > either because of the NA or because of the NaN in common.

    > Hence, currently, I don't
    > think this needs to be changed...
    > but if
    > there are other reasons / arguments ...

    > Thank you again,
    > Martin
    > Maechler


    > ? ? >> sessionInfo()
    > ?
    > ? > R Under development (unstable) (2016-05-12
    > r70604)
    > ? ? > Platform:
    > i386-w64-mingw32/i386 (32-bit)
    > ? ? >
    > Running under: Windows XP (build 2600) Service Pack 2

    > ? ? > locale:
    > ? ? > [1] LC_COLLATE=English_United
    > States.1252
    > ? ? > [2]
    > LC_CTYPE=English_United States.1252
    > ? ?
    >> [3] LC_MONETARY=English_United States.1252
    > ? ? > [4] LC_NUMERIC=C
    > ?
    > ? > [5] LC_TIME=English_United States.1252

    > ? ? > attached base
    > packages:
    > ? ? > [1] stats?
    > ???graphics? grDevices utils?
    > ???datasets? methods???base

    > ? ? >
    > -----------------
    >>>>>> 
    > Martin Maechler <maechler at stat.math.ethz.ch>
    >>>>>> ? ???on Tue, 10
    > May 2016 16:08:39 +0200 writes:

    > ? ? >> This is an RFC / announcement
    > related to the 2nd part of PR#16885
    > ? ?
    >>> https://bugs.r-project.org/bugzilla/show_bug.cgi?id=16885
    > ? ? >> about? complex NA's.

    > ? ? >> The (somewhat
    > rare) incompatibility in R's 3.3.0 match() behavior for
    > the
    > ? ? >> case of complex numbers
    > with NA & NaN's {which has been fixed for R 3.3.0
    > ? ? >> patched in the mean time}
    > triggered some more comprehensive "research".

    > ? ? >> I found that we
    > have had a long-standing inconsistency at least between
    > the
    > ? ? >> documented and the real
    > behavior.? I am claiming that the documented
    > ? ? >> behavior is desirable and hence
    > R's current "real" behavior is bugous, and
    > ? ? >> I am proposing to change it, in
    > R-devel (to be 3.4.0) for now.

    > ? ? > After the? "roaring
    > unanimous" assent? (one private msg
    > ?
    > ? > encouraging me to go forward, no dissenting voice,
    > hence an
    > ? ? > "odds ratio"
    > of? +Inf? in favor ;-)

    > ?
    > ? > I have now committed my proposal to R-devel (svn
    > rev. 70597) and
    > ? ? > some of us will
    > be seeing the effect in package space within a
    > ? ? > day or so, in the CRAN checks
    > against R-devel (not for
    > ? ? >
    > bioconductor AFAIK; their checks using R-devel only when it
    > less
    > ? ? > than ca 6 months from
    > release).

    > ? ? >
    > It's still worthwhile to discuss the issue, if you come
    > late
    > ? ? > to it, notably as
    > ---paraphrasing Dirk on the R-package-devel list---
    > ? ? > the release of 3.4.0 is almost a
    > year away, and so now is the
    > ? ? > best
    > time to tinker with the API, in other words, consider
    > breaking
    > ? ? > rarely used legacy
    > APIs..

    > ? ? > Martin


    > ? ?
    >>> In help(match) we have been saying

    > ? ? >> |? Exactly
    > what matches what is to some extent a matter of
    > definition.
    > ? ? >> |? For all
    > types, \code{NA} matches \code{NA} and no other value.
    > ? ? >> |? For real and complex values,
    > \code{NaN} values are regarded
    > ? ?
    >>> |? as matching any other \code{NaN} value, but not
    > matching \code{NA}.

    > ? ?
    >>> for at least 10 years.? But we don't do that
    > at all in the
    > ? ? >> complex case
    > (and AFAIK never got a bug report about it).

    > ? ? >> Also, e.g.,
    > print(.) or format(.) do simply use? "NA" for
    > all
    > ? ? >> the different complex
    > NA-containing numbers, where OTOH,
    > ? ?
    >>> non-NA NaN's { <=>? !is.nan(z) &
    > is.na(z) }
    > ? ? >> in format() or
    > print() do show the NaN in real and/or imaginary
    > ? ? >> parts; for an example, look at
    > the "format" column of the matrix
    > ? ? >> below, after
    > 'print(cbind' ...

    > ? ? >> The current match()---and
    > duplicated(), unique() which are based on the same
    > ? ? >> C code---*do* distinguish almost
    > all complex NA / NaN's which is
    > ? ?
    >>> NOT according to documentation. I have found that
    > this is just because of 
    > ? ? >> of
    > our hashing function for the complex case, chash() in
    > R/src/main/unique.c,
    > ? ? >> is
    > bogous in the sense that it is not compatible with the above
    > documentation
    > ? ? >> and also not
    > with the cequal() function (in the same file uniqu.c) for
    > checking
    > ? ? >> equality of complex
    > numbers.

    > ? ? >> As
    > I have found,, a *simplified* version of the chash()
    > function
    > ? ? >> to make it
    > compatible with cequal() does solve all the problems
    > I've
    > ? ? >> indicated,? and the
    > current plan is to commit that change --- after some
    > ? ? >> discussion time, here on R-devel
    > ---? to the code base.

    > ?
    > ? >> My change passes? 'make check-all'
    > fine, but I'm 100% sure that there will
    > ? ? >> be effects in package-space. ...
    > one reason for this posting.

    > ? ? >> As mentioned above, note that
    > the chash() function has been in
    > ? ?
    >>> use for all three functions
    > ? ?
    >>> match()
    > ? ? >>
    > duplicated()
    > ? ? >> unique()
    > ? ? >> and the change will affect all
    > three --- but just for the case of complex
    > ? ? >> vectors with NA or NaN's.

    > ? ? >> To show more, a
    > small R session -- using my version of R-devel
    > ? ? >> == the proposition: 
    > ? ? >> The R script
    > ('complex-NA-short.R') for (a bit more than) the
    > ? ? >> session is attached {{you can
    > attach? text/plain easily}}:

    > ? ? >>> x0 <- c(0,1, NA, NaN); z
    > <- outer(x0,x0, complex, length.out=1); rm(x0)
    > ? ? >>> ##? ? ? ?
    > ???--- = NA_real_? but that does not exist e.g.,
    > in R 2.3.1
    > ? ? >>> ##? ? ? ?
    > ? ? ? ? ???similarly,? '1L',
    > '2L', .. do not exist e.g., in R 2.3.1
    > ? ? >>> (z <- z[is.na(z)])
    > ? ? >> [1]? ? ???NA NaN+?
    > 0i? ? ???NA NaN+? 1i? ? ???NA?
    > ? ???NA? ? ???NA? ?
    > ???NA
    > ? ? >>
    > [9]???0+NaNi???1+NaNi? ?
    > ???NA NaN+NaNi
    > ? ? >>>
    > outerID <- function(x,y, ...) { ## ugly; can we get
    > outer() to work ?
    > ? ? >> +?
    > ???r <- matrix( , length(x), length(y))
    > ? ? >> +? ???for(i in
    > seq(along=x))
    > ? ? >> +? ? ?
    > ???for(j in seq(along=y))
    > ? ?
    >>> +? ? ? ? ? ???r[i,j] <-
    > identical(z[i], z[j], ...)
    > ? ? >>
    > +? ???r
    > ? ? >> + }
    > ? ? >>> ## Very strictly - in the
    > sense of identical() -- these 12 complex numbers all
    > differ:
    > ? ? >>> ## a version that
    > works in older versions of R, where identical() had fewer
    > arguments!
    > ? ? >>> outerID.picky
    > <- function(x,y) {
    > ? ? >> +?
    > ???nF <- length(formals(identical)) - 2
    > ? ? >> +?
    > ???do.call("outerID", c(list(x, y),
    > as.list(rep(FALSE, nF))))
    > ? ? >> +
    > }
    > ? ? >>> oldR <-
    > !exists("getRversion") || getRversion() <
    > "3.0.0" ## << FIXME: 3.0.0 is? a wild
    > guess
    > ? ? >>> symnum(id.z <-
    > outerID.picky(z,z)) ## == Diagonal matrix [newer versions of
    > R]
    > ? ? ? ? ? ? ? ? ? ? ? ? ?
    > ???
    > ? ? >> [1,] | . . . .
    > . . . . . . .
    > ? ? >> [2,] . | . . .
    > . . . . . . .
    > ? ? >> [3,] . . | . .
    > . . . . . . .
    > ? ? >> [4,] . . . | .
    > . . . . . . .
    > ? ? >> [5,] . . . . |
    > . . . . . . .
    > ? ? >> [6,] . . . . .
    > | . . . . . .
    > ? ? >> [7,] . . . . .
    > . | . . . . .
    > ? ? >> [8,] . . . . .
    > . . | . . . .
    > ? ? >> [9,] . . . . .
    > . . . | . . .
    > ? ? >> [10,] . . . . .
    > . . . . | . .
    > ? ? >> [11,] . . . . .
    > . . . . . | .
    > ? ? >> [12,] . . . . .
    > . . . . . . |
    > ? ? >>> try(# for
    > older R versions
    > ? ? >> +
    > stopifnot(identical(id.z, outerID(z,z)), oldR ||
    > identical(id.z, diag(12) == 1))
    > ? ?
    >>> + )
    > ? ? >>> (mz <-
    > match(z, z)) # currently different {NA,NaN} patterns differ
    > - not in print()/format() _FIXME_
    > ? ?
    >>> [1] 1 2 1 2 1 1 1 1 2 2 1 2
    > ? ?
    >>>> zRI <- rbind(Re=Re(z), Im=Im(z)) # and see
    > the pattern :
    > ? ? >>>
    > print(cbind(format = format(z), t(zRI), mz), quote=FALSE)
    > ? ? >>
    > format???Re???Im???mz
    > ? ? >> [1,]? ? ???NA
    > <NA> 0? ? 1 
    > ? ? >> [2,]
    > NaN+? 0i NaN? 0? ? 2 
    > ? ? >>
    > [3,]? ? ???NA <NA> 1? ? 1 
    > ? ? >> [4,] NaN+? 1i NaN? 1? ? 2

    > ? ? >> [5,]? ? ???NA
    > 0? ? <NA> 1 
    > ? ? >> [6,]?
    > ? ???NA 1? ? <NA> 1 
    > ?
    > ? >> [7,]? ? ???NA <NA> <NA>
    > 1 
    > ? ? >> [8,]? ? ???NA
    > NaN? <NA> 1 
    > ? ? >>
    > [9,]???0+NaNi 0? ? NaN? 2 
    > ?
    > ? >> [10,]???1+NaNi 1? ? NaN? 2 
    > ? ? >> [11,]? ? ???NA
    > <NA> NaN? 1 
    > ? ? >> [12,]
    > NaN+NaNi NaN? NaN? 2 
    > ? ? >>>

    > ? ? >>
    > -------------------------------
    > ? ?
    >>> Note that 'mz <- match(z, z)' and hence
    > the last column of the matrix above
    > ? ?
    >>> are very different in current R, 
    > ? ? >> distinguishing most kinds of NA
    > / NaN? against the documentation (and the
    > ? ? >> real/numeric case).

    > ? ? >> Martin
    > Maechler
    > ? ? >> R Core Team


    > ? ?
    >>> ### Basically a shortened version of? the PR#16885
    > -- complex part b)
    > ? ? >> ### of?
    > R/tests/reg-tests-1c.R

    > ?
    > ? >> ## b) complex 'x' with different kinds
    > of NaN
    > ? ? >> x0 <- c(0,1, NA,
    > NaN); z <- outer(x0,x0, complex, length.out=1); rm(x0)
    > ? ? >> ##? ? ? ? ???---
    > = NA_real_? but that does not exist e.g., in R 2.3.1
    > ? ? >> ##? ? ? ? ? ? ? ?
    > ???similarly,? '1L', '2L', .. do
    > not exist e.g., in R 2.3.1
    > ? ? >> (z
    > <- z[is.na(z)])
    > ? ? >> outerID
    > <- function(x,y, ...) { ## ugly; can we get outer() to
    > work ?
    > ? ? >> r <- matrix( ,
    > length(x), length(y))
    > ? ? >> for(i
    > in seq(along=x))
    > ? ? >> for(j in
    > seq(along=y))
    > ? ? >> r[i,j] <-
    > identical(z[i], z[j], ...)
    > ? ? >>
    > r
    > ? ? >> }
    > ? ?
    >>> ## Very strictly - in the sense of identical() --
    > these 12 complex numbers all differ:
    > ? ?
    >>> ## a version that works in older versions of R,
    > [[elided Yahoo spam]]
    > ? ?
    >>> outerID.picky <- function(x,y) {
    > ? ? >> nF <-
    > length(formals(identical)) - 2
    > ? ?
    >>> do.call("outerID", c(list(x, y),
    > as.list(rep(FALSE, nF))))
    > ? ? >>
    > }
    > ? ? >> oldR <-
    > !exists("getRversion") || getRversion() <
    > "3.0.0" ## << FIXME: 3.0.0 is? a wild
    > guess
    > ? ? >> symnum(id.z <-
    > outerID.picky(z,z)) ## == Diagonal matrix [newer versions of
    > R]
    > ? ? >> try(# for older R
    > versions
    > ? ? >>
    > stopifnot(identical(id.z, outerID(z,z)), oldR ||
    > identical(id.z, diag(12) == 1))
    > ? ?
    >>> )
    > ? ? >> (mz <- match(z,
    > z)) # currently different {NA,NaN} patterns differ - not in
    > print()/format() _FIXME_
    > ? ? >> zRI
    > <- rbind(Re=Re(z), Im=Im(z)) # and see the pattern :
    > ? ? >> print(cbind(format = format(z),
    > t(zRI), mz), quote=FALSE)

    > ? ? >> ## compute? match(z[i], z) ,
    > for? i = 1,2,..,12? :
    > ? ? >> (m1z
    > <- sapply(z, match, table = z))
    > ? ?
    >>> ## 1 2 1 2 2 2 1 2 2 2 1 2???# R 1.2.3?
    > (2001-04-26)
    > ? ? >> ## 1 2 3 4 1 3 7
    > 8 2 4 8 7???# R 1.4.1? (2002-01-30)
    > ? ? >> ## 1 2 3 4 1 3 7 8 2 4 8 12? #
    > R 1.5.1? (2002-06-17)
    > ? ? >> ## 1 2
    > 3 4 1 3 7 8 2 4 8 12? # R 1.8.1? (2003-11-21)
    > ? ? >> ## 1 2 3 4 1 3 7 8 2 4 8 12? #
    > R 2.0.1? (2004-11-15)
    > ? ? >> ## 1 2
    > 3 4 1 3 7 4 2 4 4 12? # R 2.1.1? (2005-06-20)
    > ? ? >> ## 1 2 3 4 1 3 7 4 2 4 4 12? #
    > R 2.3.1? (2006-06-01)
    > ? ? >> ## 1 2
    > 3 4 1 3 7 8 2 4 8 12? # R 2.5.1? (2007-06-27)
    > ? ? >> ## 1 2 3 4 1 3 7 4 2 4 4 12? #
    > R 2.10.1 (2009-12-14)
    > ? ? >> ## 1 2
    > 3 4 1 3 7 4 2 4 4 12? # R 3.1.1? (2014-07-10)
    > ? ? >> ## 1 2 3 4 1 3 7 4 2 4 4 12? #
    > R 3.2.5 -- and 3.3.0 patched
    > ? ? >>
    > ## 1 2 1 2 1 1 1 1 2 2 1 2???# <<--
    > Martin's R-devel and proposed future R

    > ? ? >>
    > if(!exists("anyNA", mode="function"))
    > anyNA <- function(x) any(is.na(x))
    > ? ?
    >>> stopifnot(apply(zRI, 2, anyNA)) # *all* are? NA
    > *or* NaN (or both)
    > ? ? >> is.NA
    > <- function(.) is.na(.) & !is.nan(.)
    > ? ? >> (iNaN <- apply(zRI, 2,
    > function(.) any(is.nan(.))))
    > ? ? >>
    > (iNA <-? apply(zRI, 2, function(.) any(is.NA (.)))) #
    > has non-NaN NA's
    > ? ? >> ## In
    > Martin's version of R-devel :
    > ? ?
    >>> stopifnot(identical(m1z == 1, iNA),
    > ? ? >> identical(m1z == 2, !iNA))
    > ? ? >> ## m1z uses match(x, *) with
    > length(x) == 1 and failed in R 3.3.0
    > ? ?
    >>> stopifnot(identical(m1z, mz))
    > ? ?
    >>> ______________________________________________
    > ? ? >> R-devel at r-project.org mailing
    > list
    > ? ? >> https://stat.ethz.ch/mailman/listinfo/r-devel

    > ? ? >
    > ______________________________________________
    > ? ? > R-devel at r-project.org
    > mailing list
    > ? ? > https://stat.ethz.ch/mailman/listinfo/r-devel

    > ______________________________________________
    > R-devel at r-project.org mailing list
    > https://stat.ethz.ch/mailman/listinfo/r-devel


From suharto_anggono at yahoo.com  Mon May 30 19:20:08 2016
From: suharto_anggono at yahoo.com (Suharto Anggono Suharto Anggono)
Date: Mon, 30 May 2016 17:20:08 +0000 (UTC)
Subject: [Rd] factor(x, exclude=NULL) for factor x;
	names in as.factor(<integer>)
References: <1412896932.1309959.1464628808808.JavaMail.yahoo.ref@mail.yahoo.com>
Message-ID: <1412896932.1309959.1464628808808.JavaMail.yahoo@mail.yahoo.com>

In R 3.3.0 (also in R 2.7.2), the documentation on 'factor', in "Details" section, has this statement.
'factor(x, exclude = NULL)' applied to a factor is a no-operation unless there are unused levels: in that case, a factor with the reduced level set is returned.

It is not true for a factor 'x' that has NA. In that case, if levels of 'x' doesn't contain NA, factor(x, exclude = NULL) adds NA as a level.
If levels of a factor 'x' doesn't contain NA, factor(x) is a no-operation if all levels are used.


In R 3.3.0 (also in R 3.1.3), for a named integer 'x', factor(x) has names and as.factor(x) doesn't. It would be better if the behavior on names were matched.

> x <- integer(1)
> names(x) <- "a"
> names(factor(x))
[1] "a"
> names(as.factor(x))
NULL
> sessionInfo()
R version 3.3.0 (2016-05-03)
Platform: i386-w64-mingw32/i386 (32-bit)
Running under: Windows XP (build 2600) Service Pack 2

locale:
[1] LC_COLLATE=English_United States.1252
[2] LC_CTYPE=English_United States.1252
[3] LC_MONETARY=English_United States.1252
[4] LC_NUMERIC=C
[5] LC_TIME=English_United States.1252

attached base packages:
[1] stats     graphics  grDevices utils     datasets  methods   base

loaded via a namespace (and not attached):
[1] tools_3.3.0


From spencer.graves at prodsyse.com  Tue May 31 04:16:24 2016
From: spencer.graves at prodsyse.com (Spencer Graves)
Date: Mon, 30 May 2016 21:16:24 -0500
Subject: [Rd] Update CRAN submission process
In-Reply-To: <CAAHES9wLmcKzWwUhrn+U2Ac2pCZn73ei0j-4Lmu2X9+A06_F1g@mail.gmail.com>
References: <F1F76F0699064354ABA01ACD8C047F26@stern.nyu.edu>
	<CAAHES9wLmcKzWwUhrn+U2Ac2pCZn73ei0j-4Lmu2X9+A06_F1g@mail.gmail.com>
Message-ID: <c5cb7f5b-443f-c2d0-7b0d-78a1f69e5162@prodsyse.com>

Hi, Gavin et al.:


       Thanks for mentioning these new initiatives.


       What's the current status of R-Hub and the current advice 
regarding trying to migrate from R-Forge to R-Hub?


       I ask, because I've complained to R-Forge maintainers 9 times 
since 2015-07-26 about various problems.  A problem I complained about 
2016-05-06 has still not been solved, in spite of multiple interventions 
by the R-Forge team.


       Thanks,
       Spencer Graves


On 5/27/2016 3:33 PM, Gavin Simpson wrote:
> In the interests of, well, everyone, I will just mention that this is
> the wrong list. CRAN != R Core and asking questions about CRAN is OT
> for this list as this is for topics related to developing R, the
> software.
>
> You should address CRAN questions to the CRAN maintainers, but I
> suggest you don't in this instance as these discussions have happened
> before. Instead, take a look at R-Hub:
> https://www.r-consortium.org/funded-projects, which aims to provide
> some of the automated tools you might require in an automated process.
> CRAN will still be CRAN, but with R-Hub in place package authors
> should know well ahead of uploading to CRAN what problems they might
> encounter and can fix them.
>
> HTH
>
> G
>
> On 27 May 2016 at 13:58, Patrick Perry <pperry at stern.nyu.edu> wrote:
>> The CRAN submission process seems in need of a massive overhaul. Why has this process not been automated yet?
>>
>>
>> ?
>> Patrick Perry
>> Assistant Professor
>> NYU Stern School of Business
>>
>> ______________________________________________
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel
>
>


From bbolker at gmail.com  Tue May 31 16:01:41 2016
From: bbolker at gmail.com (Ben Bolker)
Date: Tue, 31 May 2016 14:01:41 +0000
Subject: [Rd] Update CRAN submission process
References: <F1F76F0699064354ABA01ACD8C047F26@stern.nyu.edu>
	<CAAHES9wLmcKzWwUhrn+U2Ac2pCZn73ei0j-4Lmu2X9+A06_F1g@mail.gmail.com>
	<c5cb7f5b-443f-c2d0-7b0d-78a1f69e5162@prodsyse.com>
Message-ID: <loom.20160531T155732-641@post.gmane.org>

Spencer Graves <spencer.graves <at> prodsyse.com> writes:

> 
> Hi, Gavin et al.:
> 
>        Thanks for mentioning these new initiatives.
> 
>        What's the current status of R-Hub and the current advice 
> regarding trying to migrate from R-Forge to R-Hub?
> 
>        I ask, because I've complained to R-Forge maintainers 9 times 
> since 2015-07-26 about various problems.  A problem I complained about 
> 2016-05-06 has still not been solved, in spite of multiple interventions 
> by the R-Forge team.
> 
>        Thanks,
>        Spencer Graves

  I don't really know, but you can poke around here
<https://github.com/r-hub> and see what you can find out ...
(there's some old status information at https://github.com/r-hub/proposal ,
but it looks out of date ...)


From maechler at stat.math.ethz.ch  Tue May 31 17:59:45 2016
From: maechler at stat.math.ethz.ch (Martin Maechler)
Date: Tue, 31 May 2016 17:59:45 +0200
Subject: [Rd] factor(x, exclude=NULL) for factor x;
	names in as.factor(<integer>)
In-Reply-To: <1412896932.1309959.1464628808808.JavaMail.yahoo@mail.yahoo.com>
References: <1412896932.1309959.1464628808808.JavaMail.yahoo.ref@mail.yahoo.com>
	<1412896932.1309959.1464628808808.JavaMail.yahoo@mail.yahoo.com>
Message-ID: <22349.46321.529359.754511@stat.math.ethz.ch>

>>>>> Suharto Anggono Suharto Anggono via R-devel <r-devel at r-project.org>
>>>>>     on Mon, 30 May 2016 17:20:08 +0000 writes:

    > In R 3.3.0 (also in R 2.7.2), the documentation on 'factor', in "Details" section, has this statement.
    > 'factor(x, exclude = NULL)' applied to a factor is a no-operation unless there are unused levels: in that case, a factor with the reduced level set is returned.

    > It is not true for a factor 'x' that has NA. In that case, if levels of 'x' doesn't contain NA, factor(x, exclude = NULL) adds NA as a level.
    > If levels of a factor 'x' doesn't contain NA, factor(x) is a no-operation if all levels are used.

So we should fix the documentation (only!), right ?

-------- -------

    > In R 3.3.0 (also in R 3.1.3), for a named integer 'x', factor(x) has names and as.factor(x) doesn't. It would be better if the behavior on names were matched.

I agree .. for consistency with the named "double" case (and
also consistency with earlier versions of R) :
This is a bug indeed, only present in R versions  >= 3.1.0

Another MRE is (note that '0' is "double"):

> as.factor(ni <- c(one = 1L, two = 2L)); factor(ni); as.factor(0+ni); factor(0+ni)
[1] 1 2
Levels: 1 2
one two 
  1   2 
Levels: 1 2
one two 
  1   2 
Levels: 1 2
one two 
  1   2 
Levels: 1 2
> 


    >> x <- integer(1)
    >> names(x) <- "a"
    >> names(factor(x))
    > [1] "a"
    >> names(as.factor(x))
    > NULL
    >> sessionInfo()
    > R version 3.3.0 (2016-05-03)
    > Platform: i386-w64-mingw32/i386 (32-bit)
    > Running under: Windows XP (build 2600) Service Pack 2

    > locale:
    > [1] LC_COLLATE=English_United States.1252
    > [2] LC_CTYPE=English_United States.1252
    > [3] LC_MONETARY=English_United States.1252
    > [4] LC_NUMERIC=C
    > [5] LC_TIME=English_United States.1252

    > attached base packages:
    > [1] stats     graphics  grDevices utils     datasets  methods   base

    > loaded via a namespace (and not attached):
    > [1] tools_3.3.0

    > ______________________________________________
    > R-devel at r-project.org mailing list
    > https://stat.ethz.ch/mailman/listinfo/r-devel


