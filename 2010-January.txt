From pengyu.ut at gmail.com  Fri Jan  1 00:27:50 2010
From: pengyu.ut at gmail.com (Peng Yu)
Date: Fri, 1 Jan 2010 17:27:50 +1800
Subject: [Rd] How x[, 'colname1'] is implemented?
In-Reply-To: <77EB52C6DD32BA4D87471DCD70C8D700024DD3D9@NA-PA-VBE03.na.tibco.com>
References: <366c6f340912311415qfd00d4codf366e1919ca8b5f@mail.gmail.com>
	<77EB52C6DD32BA4D87471DCD70C8D700024DD3D9@NA-PA-VBE03.na.tibco.com>
Message-ID: <366c6f340912311527u52d4c62bn151fc33d2fc502fb@mail.gmail.com>

I don't see where describes the implementation of '[]'.

For example, if x is a matrix or a data.frame, how the lookup of
'colname1' is x[, 'colname1'] executed. Does R perform a lookup in the
a hash of the colnames? Is the reference O(1) or O(n), where n is the
second dim of x?


From b.rowlingson at lancaster.ac.uk  Fri Jan  1 13:52:26 2010
From: b.rowlingson at lancaster.ac.uk (Barry Rowlingson)
Date: Fri, 1 Jan 2010 12:52:26 +0000
Subject: [Rd] How x[, 'colname1'] is implemented?
In-Reply-To: <366c6f340912311527u52d4c62bn151fc33d2fc502fb@mail.gmail.com>
References: <366c6f340912311415qfd00d4codf366e1919ca8b5f@mail.gmail.com>
	<77EB52C6DD32BA4D87471DCD70C8D700024DD3D9@NA-PA-VBE03.na.tibco.com>
	<366c6f340912311527u52d4c62bn151fc33d2fc502fb@mail.gmail.com>
Message-ID: <d8ad40b51001010452k2299b0f8kdc1376525ce3536d@mail.gmail.com>

On Thu, Dec 31, 2009 at 11:27 PM, Peng Yu <pengyu.ut at gmail.com> wrote:
> I don't see where describes the implementation of '[]'.
>
> For example, if x is a matrix or a data.frame, how the lookup of
> 'colname1' is x[, 'colname1'] executed. Does R perform a lookup in the
> a hash of the colnames? Is the reference O(1) or O(n), where n is the
> second dim of x?

 Where have you looked? I doubt this kind of implementation detail is
in the .Rd documentation since a regular user doesn't care for it.

 As Obi-wan Kenobi may have said in Star Wars: "Use the source, Luke!":

 Line 450 of subscript.c of the source code of R 2.10 is the
stringSubscript function. It has this comment:

/* The original code (pre 2.0.0) used a ns x nx loop that was too
 * slow.  So now we hash.  Hashing is expensive on memory (up to 32nx
 * bytes) so it is only worth doing if ns * nx is large.  If nx is
 * large, then it will be too slow unless ns is very small.
 */

The definition of "large" and "small" here appears to be such that:

457: Rboolean usehashing = in && ( ((ns > 1000 && nx) || (nx > 1000 &&
ns)) || (ns * nx > 15*nx + ns) );

  Barry


From ggrothendieck at gmail.com  Fri Jan  1 14:36:49 2010
From: ggrothendieck at gmail.com (Gabor Grothendieck)
Date: Fri, 1 Jan 2010 08:36:49 -0500
Subject: [Rd] R Wish List
Message-ID: <971536df1001010536i35120bacjb0745f5959e751e9@mail.gmail.com>

This is my 2010 Wish list for R.  Most of these have been discussed on
r-help or r-devel already so this is more of a wrap-up.  The first 4
relate to R itself, the next 2 to the R environment and the last 4
relate to using R with other languages:

R

1. Strings. Some way of placing backslashes in literal strings without
escaping them.  This is useful for latex, regular expressions and
Windows filepaths.  C# and scripting languages such as Ruby, python,
perl, etc. have various ways to handle this which might be used as a
model.  Also related to this is a way of having both single and double
quotes within a string without escaping either.

2. read.table
  a. read.table allows double quotes arround numerics if colClasses is
not specified but if colClasses = "numeric" then it does not.  There
should be some easy way to specify the default behavior when
colClasses is specified.
  b. argument to specify how many rows read.table uses to establish
the column classes.  All rows, i.e. Inf, should be a possible option
(i.e. entire file passed through twice).

3. support png(con), pdf(con), etc. where con is a connection to be written to.

4.Cross Platform Consistency. Improve consistency of R across platforms:
  a. provide analog of Windows R gui Paste Commands Only menu on other platforms
  b. support "clipboard" as in readLines("clipboard") on Mac
  c. shell command works on Windows, check if its available on other platforms
  d. other?

R ENVIRONMENT

5. Installation.  When installing R version x.y.z, a new directory
should be created only if x or y changes but if z changes then the
default action should be to overwrite the existing x.y.z version. This
would simplify the configuration of R on disk by having fewer nearly
identical versions and is also consistent with how win-library already
works.  The current scheme of a separate tree for each z level version
would still be possible by selecting a custom installation but would
not be the default.

6. Documentation. demo files and non-Sweave pdf documents should be listed in
   - help(package = myPkg)
   - CRAN page for myPkg
These would be useful even if they are not in the form of links so the
reader could get a global view of what is available.

SCRIPTING/OTHER LANGUAGES

7. -x argument which works similar to the same argument in
Perl/Python/Ruby to allow a batch file and an R file to be combined.
For example:
          python -x prog.py   skips first line of prog.py allowing
non-UNIX forms of #!cmd
          perl -x prog.pl or perl -xdir prog.pl   strips off text
before !#perl line and possibly cd's to directory (if one is given).
ruby works same way.
Thus one could write:
	  Rscript -x myfile.bat
and combine a Windows batch file and an R file into myfile.bat, say.

8. tcltk
  a. some easy way to run R minimized but have a tcltk GUI not
minimized (i.e. without having to write a frontend in C)
  b. ability to load tcl without loading tk

9. provide packages like tcltk for the other popular scripting
languages: perl, python, ruby.  It would be sufficient that there is a
package that contains the scripting language executable so an R
package that uses perl, say, could simply list such a package for perl
in Depends: in DESCRIPTION file and thereby be sure that perl were
available.  They could then access it via:
      perlcmd <- if (.Platform$OS == "windows") "perl.exe" else "perl"
      perl <- system.file(perlcmd, package = "perl")
      cmd <- paste(perl, my_command)
      system(cmd)
An actual interface to R, as in tcltk, while nice to have is not an
essential part of this and could be omitted to make this easier to
accomplish.

10. eliminate dependence of R on perl (this seems to be occurring or
maybe its already happened). For those packages needing perl they
could rely on #9 if it were available.


From pengyu.ut at gmail.com  Fri Jan  1 22:40:59 2010
From: pengyu.ut at gmail.com (Peng Yu)
Date: Fri, 1 Jan 2010 15:40:59 -0600
Subject: [Rd] How x[, 'colname1'] is implemented?
In-Reply-To: <d8ad40b51001010452k2299b0f8kdc1376525ce3536d@mail.gmail.com>
References: <366c6f340912311415qfd00d4codf366e1919ca8b5f@mail.gmail.com>
	<77EB52C6DD32BA4D87471DCD70C8D700024DD3D9@NA-PA-VBE03.na.tibco.com>
	<366c6f340912311527u52d4c62bn151fc33d2fc502fb@mail.gmail.com>
	<d8ad40b51001010452k2299b0f8kdc1376525ce3536d@mail.gmail.com>
Message-ID: <366c6f341001011340g7e1ff7cbk1b006b3a2a2aee81@mail.gmail.com>

On Fri, Jan 1, 2010 at 6:52 AM, Barry Rowlingson
<b.rowlingson at lancaster.ac.uk> wrote:
> On Thu, Dec 31, 2009 at 11:27 PM, Peng Yu <pengyu.ut at gmail.com> wrote:
>> I don't see where describes the implementation of '[]'.
>>
>> For example, if x is a matrix or a data.frame, how the lookup of
>> 'colname1' is x[, 'colname1'] executed. Does R perform a lookup in the
>> a hash of the colnames? Is the reference O(1) or O(n), where n is the
>> second dim of x?
>
> ?Where have you looked? I doubt this kind of implementation detail is
> in the .Rd documentation since a regular user doesn't care for it.

I'm not complaining that it is not documented.

> ?As Obi-wan Kenobi may have said in Star Wars: "Use the source, Luke!":
>
> ?Line 450 of subscript.c of the source code of R 2.10 is the
> stringSubscript function. It has this comment:
>
> /* The original code (pre 2.0.0) used a ns x nx loop that was too
> ?* slow. ?So now we hash. ?Hashing is expensive on memory (up to 32nx
> ?* bytes) so it is only worth doing if ns * nx is large. ?If nx is
> ?* large, then it will be too slow unless ns is very small.
> ?*/

Could you explain what ns and nx represent?

> The definition of "large" and "small" here appears to be such that:
>
> 457: Rboolean usehashing = in && ( ((ns > 1000 && nx) || (nx > 1000 &&
> ns)) || (ns * nx > 15*nx + ns) );


From seth at userprimary.net  Sat Jan  2 01:56:02 2010
From: seth at userprimary.net (Seth Falcon)
Date: Fri, 01 Jan 2010 16:56:02 -0800
Subject: [Rd] How x[, 'colname1'] is implemented?
In-Reply-To: <366c6f341001011340g7e1ff7cbk1b006b3a2a2aee81@mail.gmail.com>
References: <366c6f340912311415qfd00d4codf366e1919ca8b5f@mail.gmail.com>	<77EB52C6DD32BA4D87471DCD70C8D700024DD3D9@NA-PA-VBE03.na.tibco.com>	<366c6f340912311527u52d4c62bn151fc33d2fc502fb@mail.gmail.com>	<d8ad40b51001010452k2299b0f8kdc1376525ce3536d@mail.gmail.com>
	<366c6f341001011340g7e1ff7cbk1b006b3a2a2aee81@mail.gmail.com>
Message-ID: <4B3E99A2.9070502@userprimary.net>

On 1/1/10 1:40 PM, Peng Yu wrote:
> On Fri, Jan 1, 2010 at 6:52 AM, Barry Rowlingson
> <b.rowlingson at lancaster.ac.uk> wrote:
>> On Thu, Dec 31, 2009 at 11:27 PM, Peng Yu <pengyu.ut at gmail.com> wrote:
>>> I don't see where describes the implementation of '[]'.
>>>
>>> For example, if x is a matrix or a data.frame, how the lookup of
>>> 'colname1' is x[, 'colname1'] executed. Does R perform a lookup in the
>>> a hash of the colnames? Is the reference O(1) or O(n), where n is the
>>> second dim of x?
>>
>>  Where have you looked? I doubt this kind of implementation detail is
>> in the .Rd documentation since a regular user doesn't care for it.
> 
> I'm not complaining that it is not documented.
> 
>>  As Obi-wan Kenobi may have said in Star Wars: "Use the source, Luke!":
>>
>>  Line 450 of subscript.c of the source code of R 2.10 is the
>> stringSubscript function. It has this comment:
>>
>> /* The original code (pre 2.0.0) used a ns x nx loop that was too
>>  * slow.  So now we hash.  Hashing is expensive on memory (up to 32nx
>>  * bytes) so it is only worth doing if ns * nx is large.  If nx is
>>  * large, then it will be too slow unless ns is very small.
>>  */
> 
> Could you explain what ns and nx represent?

integers :-)

Consider a 5x5 matrix m and a call like m[ , c("C", "D")], then
in the call to stringSubscript:

  s - The character vector of subscripts, here c("C", "D")

  ns - length of s, here 2

  nx - length of the dimension being subscripted, here 5

  names - the dimnames being subscripted.  Here, perhaps
          c("A", "B", "C", "D", "E")

>> The definition of "large" and "small" here appears to be such that:
>>
>> 457: Rboolean usehashing = in && ( ((ns > 1000 && nx) || (nx > 1000 &&
>> ns)) || (ns * nx > 15*nx + ns) );

The 'in' argument is always TRUE AFAICS so this boils down to:

Use hashing for x[i] if either length(x) > 1000 or length(i) > 1000 (and
we aren't in the trivial case where either length(x) == 0 or length(i) == 0)

OR use hashing if (ns * nx > 15*nx + ns)


+ seth


From romain.francois at dbmail.com  Sat Jan  2 11:07:03 2010
From: romain.francois at dbmail.com (Romain Francois)
Date: Sat, 02 Jan 2010 11:07:03 +0100
Subject: [Rd] R_PreserveObject,
	R_ReleaseObject  : reference counting needed ?
Message-ID: <4B3F1AC7.4050208@dbmail.com>

Hello,

We are currently making lots of changes to Rcpp (see the open Rcpp 
mailing list if interested [1] in the details).

We are now using [2] R_PreserveObject and R_ReleaseObject to manage 
garbage collection instead of the PROTECT/UNPROTECT dance. This seems to 
work well, but I was wondering if there was documentation about it.

In particular, if we preserve the same SEXP twice (or more), should we 
implement some sort of reference counting ?

Reading the source (below, from memory.c) I think not, but some 
confirmation would help.

void R_PreserveObject(SEXP object)
{
     R_PreciousList = CONS(object, R_PreciousList);
}

static SEXP RecursiveRelease(SEXP object, SEXP list)
{
     if (!isNull(list)) {
	if (object == CAR(list))
	    return CDR(list);
	else
	    CDR(list) = RecursiveRelease(object, CDR(list));
     }
     return list;
}

void R_ReleaseObject(SEXP object)
{
     R_PreciousList =  RecursiveRelease(object, R_PreciousList);
}


I'd also be interested if there is some ideas on the relative efficiency 
of the preserve/release mechanism compared to PROTECT/UNPROTECT.

Thanks,

Romain

[1] http://lists.r-forge.r-project.org/pipermail/rcpp-devel/
[2] 
http://r-forge.r-project.org/plugins/scmsvn/viewcvs.php/pkg/src/RObject.cpp?rev=255&root=rcpp&view=markup

-- 
Romain Francois
Professional R Enthusiast
+33(0) 6 28 91 30 30
http://romainfrancois.blog.free.fr
|- http://tr.im/IW9B : C++ exceptions at the R level
|- http://tr.im/IlMh : CPP package: exposing C++ objects
`- http://tr.im/HlX9 : new package : bibtex


From b.rowlingson at lancaster.ac.uk  Sat Jan  2 11:41:03 2010
From: b.rowlingson at lancaster.ac.uk (Barry Rowlingson)
Date: Sat, 2 Jan 2010 10:41:03 +0000
Subject: [Rd] How x[, 'colname1'] is implemented?
In-Reply-To: <366c6f341001011340g7e1ff7cbk1b006b3a2a2aee81@mail.gmail.com>
References: <366c6f340912311415qfd00d4codf366e1919ca8b5f@mail.gmail.com>
	<77EB52C6DD32BA4D87471DCD70C8D700024DD3D9@NA-PA-VBE03.na.tibco.com>
	<366c6f340912311527u52d4c62bn151fc33d2fc502fb@mail.gmail.com>
	<d8ad40b51001010452k2299b0f8kdc1376525ce3536d@mail.gmail.com>
	<366c6f341001011340g7e1ff7cbk1b006b3a2a2aee81@mail.gmail.com>
Message-ID: <d8ad40b51001020241u49cd4837u1325848297dd55d3@mail.gmail.com>

On Fri, Jan 1, 2010 at 9:40 PM, Peng Yu <pengyu.ut at gmail.com> wrote:

> I'm not complaining that it is not documented.

 Yes but you didn't answer my question. When you ask a question on
these (or any mailing lists) you should always say what efforts you've
made to answer the question. I first looked in the help for '[' but
didn't find anything there. If you had already done that and told us
then I wouldn't have wasted my time. If you'd gone on to say you'd
also looked in the source code, and in which files, then I wouldn't
have wasted my time looking in those files. Note that this is all for
your benefit as well because we'll be able to help you quicker!

>> ?As Obi-wan Kenobi may have said in Star Wars: "Use the source, Luke!":

> Could you explain what ns and nx represent?

 No, you need to take Obi-wan's advice (or Seth Falcon's, who got to
this before me) and 'Use the source'. I would hope that since you have
an understanding of what a hashing algorithm is that you should also
have some understanding of programming, and even if not in C it's not
too hard to figure out.

 You could make the effort to look in subscript.c and work it out for yourself.

 If you are very interested in the low-level working of R then you
should compile R with debugging turned on, then run R in a debugger
and set a breakpoint in the array subscript function. Then you can
inspect the C variables when you run it.

Barry


From djmuser at gmail.com  Fri Jan  1 15:47:18 2010
From: djmuser at gmail.com (Dennis Murphy)
Date: Fri, 1 Jan 2010 06:47:18 -0800
Subject: [Rd] loess() crashes R on my system
Message-ID: <9a8a6c631001010647g614eef73l307a2d09dc466844@mail.gmail.com>

An embedded and charset-unspecified text was scrubbed...
Name: not available
URL: <https://stat.ethz.ch/pipermail/r-devel/attachments/20100101/05b6adab/attachment.pl>

From ligges at statistik.tu-dortmund.de  Sat Jan  2 15:34:40 2010
From: ligges at statistik.tu-dortmund.de (Uwe Ligges)
Date: Sat, 02 Jan 2010 15:34:40 +0100
Subject: [Rd] loess() crashes R on my system
In-Reply-To: <9a8a6c631001010647g614eef73l307a2d09dc466844@mail.gmail.com>
References: <9a8a6c631001010647g614eef73l307a2d09dc466844@mail.gmail.com>
Message-ID: <4B3F5980.6070109@statistik.tu-dortmund.de>



Dennis Murphy wrote:
> Greetings and happy new year!
> 
> I am in the process of converting some of the old S-PLUS scripts from
> Visualizing Data (Cleveland, 1993)
> into lattice. In fact, I did most of it several years ago, and at the time,
> all of the scripts that contained
> loess() worked fine. Tonight, I ran most of the scripts again, but every one
> that I tried with a
> loess() call crashed R. I tried it in two sessions, one with an existing
> .Rdata and in another
> directory without one. The call below, isolated from its script, is one of
> the culprits:
> 
> with(ethanol, loess(NOx ~ C * E, span = 1/3, degree = 2,
>         parametric = "C", drop.square = "C", family="s"))


I just did

replicate(1000, with(ethanol, loess(NOx ~ C * E, span = 1/3, degree = 2,
           parametric = "C", drop.square = "C", family="s")))

under Windows XP SP3 with R-2.10.1 / lattice_0.17-26 and it worked fine: 
Sorry, I cannot reproduce it.

You forgot to report your lattice version below.

Best,
Uwe Ligges




> In response to the Posting Guide, when I say 'crash' I mean that the system
> abnormally terminated
> R when this line or any other one that invokes loess() is run. I'm running
> the binary version of 2.10.1
> on a Dell Studio 15 with Windows 7 Home Premium.
> 
> This is the first time I've ever experienced something like this in the
> decade that I've used R. What's
> more surprising is that it occurred with such a common function. Since I
> haven't seen any postings
> of this type, it's probably something on my end, but I don't know what.
> Since it shut down the
> program, I felt compelled to report it.
> 
> I am subscribed to r-help but not r-devel, so please cc any response to me.
> Thanks in advance for
> any assistance.
> 
> Dennis Murphy
> 
>> sessionInfo()
> R version 2.10.1 (2009-12-14)
> i386-pc-mingw32
> 
> locale:
> [1] LC_COLLATE=English_United States.1252
> [2] LC_CTYPE=English_United States.1252
> [3] LC_MONETARY=English_United States.1252
> [4] LC_NUMERIC=C
> [5] LC_TIME=English_United States.1252
> 
> attached base packages:
> [1] stats     graphics  grDevices utils     datasets  methods   base
> 
> loaded via a namespace (and not attached):
> [1] tools_2.10.1
> 
> 	[[alternative HTML version deleted]]
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From ehlers at ucalgary.ca  Sat Jan  2 15:39:54 2010
From: ehlers at ucalgary.ca (Peter Ehlers)
Date: Sat, 02 Jan 2010 07:39:54 -0700
Subject: [Rd] loess() crashes R on my system
In-Reply-To: <9a8a6c631001010647g614eef73l307a2d09dc466844@mail.gmail.com>
References: <9a8a6c631001010647g614eef73l307a2d09dc466844@mail.gmail.com>
Message-ID: <4B3F5ABA.3080406@ucalgary.ca>

Dennis,

I have no problems with this on my DELL laptop (still running
Vista) with R version 2.10.1 Patched (2009-12-21 r50796).

  -Peter Ehlers

Dennis Murphy wrote:
> Greetings and happy new year!
> 
> I am in the process of converting some of the old S-PLUS scripts from
> Visualizing Data (Cleveland, 1993)
> into lattice. In fact, I did most of it several years ago, and at the time,
> all of the scripts that contained
> loess() worked fine. Tonight, I ran most of the scripts again, but every one
> that I tried with a
> loess() call crashed R. I tried it in two sessions, one with an existing
> .Rdata and in another
> directory without one. The call below, isolated from its script, is one of
> the culprits:
> 
> with(ethanol, loess(NOx ~ C * E, span = 1/3, degree = 2,
>         parametric = "C", drop.square = "C", family="s"))
> 
> In response to the Posting Guide, when I say 'crash' I mean that the system
> abnormally terminated
> R when this line or any other one that invokes loess() is run. I'm running
> the binary version of 2.10.1
> on a Dell Studio 15 with Windows 7 Home Premium.
> 
> This is the first time I've ever experienced something like this in the
> decade that I've used R. What's
> more surprising is that it occurred with such a common function. Since I
> haven't seen any postings
> of this type, it's probably something on my end, but I don't know what.
> Since it shut down the
> program, I felt compelled to report it.
> 
> I am subscribed to r-help but not r-devel, so please cc any response to me.
> Thanks in advance for
> any assistance.
> 
> Dennis Murphy
> 
>> sessionInfo()
> R version 2.10.1 (2009-12-14)
> i386-pc-mingw32
> 
> locale:
> [1] LC_COLLATE=English_United States.1252
> [2] LC_CTYPE=English_United States.1252
> [3] LC_MONETARY=English_United States.1252
> [4] LC_NUMERIC=C
> [5] LC_TIME=English_United States.1252
> 
> attached base packages:
> [1] stats     graphics  grDevices utils     datasets  methods   base
> 
> loaded via a namespace (and not attached):
> [1] tools_2.10.1
> 
> 	[[alternative HTML version deleted]]
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
> 
> 

-- 
Peter Ehlers
University of Calgary
403.202.3921


From ripley at stats.ox.ac.uk  Sat Jan  2 15:35:15 2010
From: ripley at stats.ox.ac.uk (Prof Brian Ripley)
Date: Sat, 2 Jan 2010 14:35:15 +0000 (GMT)
Subject: [Rd] loess() crashes R on my system
In-Reply-To: <9a8a6c631001010647g614eef73l307a2d09dc466844@mail.gmail.com>
References: <9a8a6c631001010647g614eef73l307a2d09dc466844@mail.gmail.com>
Message-ID: <alpine.LFD.2.00.1001021420350.30510@gannet.stats.ox.ac.uk>

The posting guide also applies to R-devel: please provide a complete 
reproducible example and don't send HTML, as requested there.

On Fri, 1 Jan 2010, Dennis Murphy wrote:

> Greetings and happy new year!
>
> I am in the process of converting some of the old S-PLUS scripts 
> from Visualizing Data (Cleveland, 1993) into lattice. In fact, I did 
> most of it several years ago, and at the time, all of the scripts 
> that contained loess() worked fine. Tonight, I ran most of the 
> scripts again, but every one that I tried with a loess() call 
> crashed R. I tried it in two sessions, one with an existing .Rdata 
> and in another directory without one. The call below, isolated from 
> its script, is one of the culprits:
>
> with(ethanol, loess(NOx ~ C * E, span = 1/3, degree = 2,
>        parametric = "C", drop.square = "C", family="s"))

What is 'ethanol'?  Is it the data set in package lattice, for 
example?  (If so, this works for me everywhere, including Windows XP.)

> In response to the Posting Guide, when I say 'crash' I mean that the 
> system abnormally terminated R when this line or any other one that 
> invokes loess() is run. I'm running the binary version of 2.10.1 on 
> a Dell Studio 15 with Windows 7 Home Premium.

If you mean any call to loess(), the problem is your machine (or at 
least your precise version of the OS) since example(loess) has been 
run on the binary version of R before distribution.  The examples are 
always a good place to start testing.)

Problems specific to the Windows binary (and we don't know that as yet 
but it seems likely) should be reported to the R-windows address.

> This is the first time I've ever experienced something like this in 
> the decade that I've used R. What's more surprising is that it 
> occurred with such a common function. Since I haven't seen any 
> postings of this type, it's probably something on my end, but I 
> don't know what. Since it shut down the program, I felt compelled to 
> report it.

You should be able to get a problem report under those circumstances, 
usually as an option on the dialog box -- and you will need to report 
that with the reproducible example.

> I am subscribed to r-help but not r-devel, so please cc any response to me.
> Thanks in advance for
> any assistance.
>
> Dennis Murphy
>
>> sessionInfo()
> R version 2.10.1 (2009-12-14)
> i386-pc-mingw32
>
> locale:
> [1] LC_COLLATE=English_United States.1252
> [2] LC_CTYPE=English_United States.1252
> [3] LC_MONETARY=English_United States.1252
> [4] LC_NUMERIC=C
> [5] LC_TIME=English_United States.1252
>
> attached base packages:
> [1] stats     graphics  grDevices utils     datasets  methods   base
>
> loaded via a namespace (and not attached):
> [1] tools_2.10.1
>
> 	[[alternative HTML version deleted]]
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>

-- 
Brian D. Ripley,                  ripley at stats.ox.ac.uk
Professor of Applied Statistics,  http://www.stats.ox.ac.uk/~ripley/
University of Oxford,             Tel:  +44 1865 272861 (self)
1 South Parks Road,                     +44 1865 272866 (PA)
Oxford OX1 3TG, UK                Fax:  +44 1865 272595


From lgautier at gmail.com  Sat Jan  2 17:36:53 2010
From: lgautier at gmail.com (Laurent Gautier)
Date: Sat, 02 Jan 2010 17:36:53 +0100
Subject: [Rd] R-devel Digest, Vol 83, Issue 2
In-Reply-To: <mailman.11.1262430004.8711.r-devel@r-project.org>
References: <mailman.11.1262430004.8711.r-devel@r-project.org>
Message-ID: <4B3F7625.1080806@gmail.com>

[Disclaimer: what is below reflects my understanding from reading the R 
source, others will correct where deemed necessary]

On 1/2/10 12:00 PM, r-devel-request at r-project.org wrote:
>
> Hello,
>
> We are currently making lots of changes to Rcpp (see the open Rcpp
> mailing list if interested [1] in the details).
>
> We are now using [2] R_PreserveObject and R_ReleaseObject to manage
> garbage collection instead of the PROTECT/UNPROTECT dance. This seems to
> work well, but I was wondering if there was documentation about it.

The most precise technical documentation is in memory.c
PROTECT is an alias for Rf_protect, itself an alias for
SEXP protect(SEXP s);
and uses a stack (R_PPStack) to store protected objects.

> In particular, if we preserve the same SEXP twice (or more), should we
> implement some sort of reference counting ?

This depends on the requirements for your system.

For example, in rpy2 I added a reference counting layer(*) because I 
wanted to allow several Python objects to share the same underlying R 
object, but that's not currently(*) counting how many times an object 
should be freed.
(*: imperfect, but currently doing a very decent job - details upon 
request).

That kind of feature could be provided by R's C-level API, since this 
could be seen of general use as well as give an opportunity to improve 
the performances of the R_PreservedObject/R_ReleaseObject duo whenever a 
lot of objects are protected and/or external code is 
protecting/releasing objects through a FIFO proxy.


> Reading the source (below, from memory.c) I think not, but some
> confirmation would help.

I understand the code in memory.c like an object preserved twice needs 
to be freed twice: R_PreciousList is just a (linked) list, and 
"R_PreserveObject(object)" adds the object to the beginning of the list 
while "R_ReleaseObject(object)" removes the first "object" found from 
the list.



> void R_PreserveObject(SEXP object)
> {
>       R_PreciousList = CONS(object, R_PreciousList);
> }
>
> static SEXP RecursiveRelease(SEXP object, SEXP list)
> {
>       if (!isNull(list)) {
> 	if (object == CAR(list))
> 	    return CDR(list);
> 	else
> 	    CDR(list) = RecursiveRelease(object, CDR(list));
>       }
>       return list;
> }
>
> void R_ReleaseObject(SEXP object)
> {
>       R_PreciousList =  RecursiveRelease(object, R_PreciousList);
> }
>
>
> I'd also be interested if there is some ideas on the relative efficiency
> of the preserve/release mechanism compared to PROTECT/UNPROTECT.

PROTECT/UNPROTECT is trading granularity for speed. It is a stack with 
only tow operations possible:
- push 1 object into the stack
- pull (unprotect) N last objects from the stack


HTH,


L.




> Thanks,
>
> Romain
>
> [1]http://lists.r-forge.r-project.org/pipermail/rcpp-devel/
> [2]
> http://r-forge.r-project.org/plugins/scmsvn/viewcvs.php/pkg/src/RObject.cpp?rev=255&root=rcpp&view=markup
>
> -- Romain Francois Professional R Enthusiast +33(0) 6 28 91 30 30
> http://romainfrancois.blog.free.fr |- http://tr.im/IW9B : C++ exceptions
> at the R level |- http://tr.im/IlMh : CPP package: exposing C++ objects
> `- http://tr.im/HlX9 : new package : bibtex


From romain.francois at dbmail.com  Sat Jan  2 17:50:59 2010
From: romain.francois at dbmail.com (Romain Francois)
Date: Sat, 02 Jan 2010 17:50:59 +0100
Subject: [Rd] R_PreserveObject,
 R_ReleaseObject : reference counting needed ?
In-Reply-To: <4B3F7625.1080806@gmail.com>
References: <mailman.11.1262430004.8711.r-devel@r-project.org>
	<4B3F7625.1080806@gmail.com>
Message-ID: <4B3F7973.70203@dbmail.com>

Thanks.

On 01/02/2010 05:36 PM, Laurent Gautier wrote:
>
> [Disclaimer: what is below reflects my understanding from reading the R
> source, others will correct where deemed necessary]
>
> On 1/2/10 12:00 PM, r-devel-request at r-project.org wrote:
>>
>> Hello,
>>
>> We are currently making lots of changes to Rcpp (see the open Rcpp
>> mailing list if interested [1] in the details).
>>
>> We are now using [2] R_PreserveObject and R_ReleaseObject to manage
>> garbage collection instead of the PROTECT/UNPROTECT dance. This seems to
>> work well, but I was wondering if there was documentation about it.
>
> The most precise technical documentation is in memory.c
> PROTECT is an alias for Rf_protect, itself an alias for
> SEXP protect(SEXP s);
> and uses a stack (R_PPStack) to store protected objects.
>
>> In particular, if we preserve the same SEXP twice (or more), should we
>> implement some sort of reference counting ?
>
> This depends on the requirements for your system.

We wrap up SEXP into a C++ class that in particular manages itself 
preserving and releasing the object to garbage collection.

> For example, in rpy2 I added a reference counting layer(*) because I
> wanted to allow several Python objects to share the same underlying R
> object, but that's not currently(*) counting how many times an object
> should be freed.
> (*: imperfect, but currently doing a very decent job - details upon
> request).
>
> That kind of feature could be provided by R's C-level API, since this
> could be seen of general use as well as give an opportunity to improve
> the performances of the R_PreservedObject/R_ReleaseObject duo whenever a
> lot of objects are protected and/or external code is
> protecting/releasing objects through a FIFO proxy.
>
>
>> Reading the source (below, from memory.c) I think not, but some
>> confirmation would help.
>
> I understand the code in memory.c like an object preserved twice needs
> to be freed twice: R_PreciousList is just a (linked) list, and
> "R_PreserveObject(object)" adds the object to the beginning of the list
> while "R_ReleaseObject(object)" removes the first "object" found from
> the list.

That's what I understand of it too. It fits nicely into C++ assignment 
operator and copy constructor.

>> void R_PreserveObject(SEXP object)
>> {
>> R_PreciousList = CONS(object, R_PreciousList);
>> }
>>
>> static SEXP RecursiveRelease(SEXP object, SEXP list)
>> {
>> if (!isNull(list)) {
>> if (object == CAR(list))
>> return CDR(list);
>> else
>> CDR(list) = RecursiveRelease(object, CDR(list));
>> }
>> return list;
>> }
>>
>> void R_ReleaseObject(SEXP object)
>> {
>> R_PreciousList = RecursiveRelease(object, R_PreciousList);
>> }
>>
>>
>> I'd also be interested if there is some ideas on the relative efficiency
>> of the preserve/release mechanism compared to PROTECT/UNPROTECT.
>
> PROTECT/UNPROTECT is trading granularity for speed. It is a stack with
> only tow operations possible:
> - push 1 object into the stack
> - pull (unprotect) N last objects from the stack
>
>
> HTH,
>
>
> L.
>
>
>
>
>> Thanks,
>>
>> Romain
>>
>> [1]http://lists.r-forge.r-project.org/pipermail/rcpp-devel/
>> [2]
>> http://r-forge.r-project.org/plugins/scmsvn/viewcvs.php/pkg/src/RObject.cpp?rev=255&root=rcpp&view=markup

-- 
Romain Francois
Professional R Enthusiast
+33(0) 6 28 91 30 30
http://romainfrancois.blog.free.fr
|- http://tr.im/IW9B : C++ exceptions at the R level
|- http://tr.im/IlMh : CPP package: exposing C++ objects
`- http://tr.im/HlX9 : new package : bibtex


From murdoch at stats.uwo.ca  Sat Jan  2 17:56:45 2010
From: murdoch at stats.uwo.ca (Duncan Murdoch)
Date: Sat, 02 Jan 2010 11:56:45 -0500
Subject: [Rd] R-devel Digest, Vol 83, Issue 2
In-Reply-To: <4B3F7625.1080806@gmail.com>
References: <mailman.11.1262430004.8711.r-devel@r-project.org>
	<4B3F7625.1080806@gmail.com>
Message-ID: <4B3F7ACD.2050106@stats.uwo.ca>

On 02/01/2010 11:36 AM, Laurent Gautier wrote:
> [Disclaimer: what is below reflects my understanding from reading the R 
> source, others will correct where deemed necessary]
> 
> On 1/2/10 12:00 PM, r-devel-request at r-project.org wrote:
>> Hello,
>>
>> We are currently making lots of changes to Rcpp (see the open Rcpp
>> mailing list if interested [1] in the details).
>>
>> We are now using [2] R_PreserveObject and R_ReleaseObject to manage
>> garbage collection instead of the PROTECT/UNPROTECT dance. This seems to
>> work well, but I was wondering if there was documentation about it.
> 
> The most precise technical documentation is in memory.c
> PROTECT is an alias for Rf_protect, itself an alias for
> SEXP protect(SEXP s);
> and uses a stack (R_PPStack) to store protected objects.
> 
>> In particular, if we preserve the same SEXP twice (or more), should we
>> implement some sort of reference counting ?
> 
> This depends on the requirements for your system.
> 
> For example, in rpy2 I added a reference counting layer(*) because I 
> wanted to allow several Python objects to share the same underlying R 
> object, but that's not currently(*) counting how many times an object 
> should be freed.
> (*: imperfect, but currently doing a very decent job - details upon 
> request).
> 
> That kind of feature could be provided by R's C-level API, since this 
> could be seen of general use as well as give an opportunity to improve 
> the performances of the R_PreservedObject/R_ReleaseObject duo whenever a 
> lot of objects are protected and/or external code is 
> protecting/releasing objects through a FIFO proxy.
> 
> 
>> Reading the source (below, from memory.c) I think not, but some
>> confirmation would help.
> 
> I understand the code in memory.c like an object preserved twice needs 
> to be freed twice: R_PreciousList is just a (linked) list, and 
> "R_PreserveObject(object)" adds the object to the beginning of the list 
> while "R_ReleaseObject(object)" removes the first "object" found from 
> the list.
> 
> 
> 
>> void R_PreserveObject(SEXP object)
>> {
>>       R_PreciousList = CONS(object, R_PreciousList);
>> }
>>
>> static SEXP RecursiveRelease(SEXP object, SEXP list)
>> {
>>       if (!isNull(list)) {
>> 	if (object == CAR(list))
>> 	    return CDR(list);
>> 	else
>> 	    CDR(list) = RecursiveRelease(object, CDR(list));
>>       }
>>       return list;
>> }
>>
>> void R_ReleaseObject(SEXP object)
>> {
>>       R_PreciousList =  RecursiveRelease(object, R_PreciousList);
>> }
>>
>>
>> I'd also be interested if there is some ideas on the relative efficiency
>> of the preserve/release mechanism compared to PROTECT/UNPROTECT.
> 
> PROTECT/UNPROTECT is trading granularity for speed. It is a stack with 
> only tow operations possible:
> - push 1 object into the stack
> - pull (unprotect) N last objects from the stack

UNPROTECT_PTR is also possible, which does a linear search through the 
stack and unprotects something possibly deep within it.  There is also 
REPROTECT which allows you to replace an entry within the stack.

I would guess that UNPROTECT_PTR is more efficient than RecursiveRelease 
because it doesn't use so much stack space when it needs to go deep into 
the stack to release, but it is possible the compiler recognizes the 
tail recursion and RecursiveRelease is implemented efficiently.  In that 
case it could be more efficient than UNPROTECT_PTR, which has to move 
all the other entries down to fill the newly vacated space.  Really the 
only reliable way to answer efficiency questions like this is to try
both ways and see which works better in your application.

Another possibility is to maintain your own list or environment of 
objects, and just protect/preserve the list as a whole.

Duncan Murdoch

> 
> 
> HTH,
> 
> 
> L.
> 
> 
> 
> 
>> Thanks,
>>
>> Romain
>>
>> [1]http://lists.r-forge.r-project.org/pipermail/rcpp-devel/
>> [2]
>> http://r-forge.r-project.org/plugins/scmsvn/viewcvs.php/pkg/src/RObject.cpp?rev=255&root=rcpp&view=markup
>>
>> -- Romain Francois Professional R Enthusiast +33(0) 6 28 91 30 30
>> http://romainfrancois.blog.free.fr |- http://tr.im/IW9B : C++ exceptions
>> at the R level |- http://tr.im/IlMh : CPP package: exposing C++ objects
>> `- http://tr.im/HlX9 : new package : bibtex
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From simon.urbanek at r-project.org  Sat Jan  2 18:01:23 2010
From: simon.urbanek at r-project.org (Simon Urbanek)
Date: Sat, 2 Jan 2010 12:01:23 -0500
Subject: [Rd] R_PreserveObject,
	R_ReleaseObject  : reference counting needed ?
In-Reply-To: <4B3F1AC7.4050208@dbmail.com>
References: <4B3F1AC7.4050208@dbmail.com>
Message-ID: <A37E5DDA-CE93-4A32-9724-542EBB602AFC@r-project.org>


On Jan 2, 2010, at 5:07 AM, Romain Francois wrote:

> Hello,
> 
> We are currently making lots of changes to Rcpp (see the open Rcpp mailing list if interested [1] in the details).
> 
> We are now using [2] R_PreserveObject and R_ReleaseObject to manage garbage collection instead of the PROTECT/UNPROTECT dance. This seems to work well, but I was wondering if there was documentation about it.
> 

I don't think so - the only documentation is the comment in the source.


> In particular, if we preserve the same SEXP twice (or more), should we implement some sort of reference counting ?
> 

Preserve/Release are for managing objects that are supposed to survive past the call and are not tied to any other R object. PROTECT/UNPROTECT are for temporary preservation within a call.

Although you're right that Preserve/Release is effectively implemented as a stack at the moment it is not stated explicitly anywhere (this goes all the way back to R 0.64 so chances are that only Ross can comment..). However, for practical purposes it would be potentially dangerous to have it work like a flag because you can simply never know whether the same object was not already registered by some other code.


> Reading the source (below, from memory.c) I think not, but some confirmation would help.
> 
> void R_PreserveObject(SEXP object)
> {
>    R_PreciousList = CONS(object, R_PreciousList);
> }
> 
> static SEXP RecursiveRelease(SEXP object, SEXP list)
> {
>    if (!isNull(list)) {
> 	if (object == CAR(list))
> 	    return CDR(list);
> 	else
> 	    CDR(list) = RecursiveRelease(object, CDR(list));
>    }
>    return list;
> }
> 
> void R_ReleaseObject(SEXP object)
> {
>    R_PreciousList =  RecursiveRelease(object, R_PreciousList);
> }
> 
> 
> I'd also be interested if there is some ideas on the relative efficiency of the preserve/release mechanism compared to PROTECT/UNPROTECT.
> 

PROTECT/UNPROTECT is more efficient because all it does is a pointer assignment -- Preserve has to allocate new node and fill it with all parts. On release the extra node is still floating in the GC pool etc.

Normally there is not really a question of choice - within a call you want to use PROTET/UNPROTECT and for anything else you simply cannot use it so you have to use Preserve/Release. As a side note Preserve/Release is merely a convenience call, it is often more efficient to simply assign the object to another object you have control of (which is all Preserve really does).

Cheers,
Simon


From lgautier at gmail.com  Sat Jan  2 18:17:01 2010
From: lgautier at gmail.com (Laurent Gautier)
Date: Sat, 02 Jan 2010 18:17:01 +0100
Subject: [Rd] R-devel Digest, Vol 83, Issue 2
In-Reply-To: <4B3F7ACD.2050106@stats.uwo.ca>
References: <mailman.11.1262430004.8711.r-devel@r-project.org>
	<4B3F7625.1080806@gmail.com> <4B3F7ACD.2050106@stats.uwo.ca>
Message-ID: <4B3F7F8D.8060701@gmail.com>

On 1/2/10 5:56 PM, Duncan Murdoch wrote:
> On 02/01/2010 11:36 AM, Laurent Gautier wrote:
>> [Disclaimer: what is below reflects my understanding from reading the
>> R source, others will correct where deemed necessary]
>>
>> On 1/2/10 12:00 PM, r-devel-request at r-project.org wrote:

(...)

>>>
>>> I'd also be interested if there is some ideas on the relative efficiency
>>> of the preserve/release mechanism compared to PROTECT/UNPROTECT.
>>
>> PROTECT/UNPROTECT is trading granularity for speed. It is a stack with
>> only tow operations possible:
>> - push 1 object into the stack
>> - pull (unprotect) N last objects from the stack
>
> UNPROTECT_PTR is also possible, which does a linear search through the
> stack and unprotects something possibly deep within it. There is also
> REPROTECT which allows you to replace an entry within the stack.
 >
> I would guess that UNPROTECT_PTR is more efficient than RecursiveRelease
> because it doesn't use so much stack space when it needs to go deep into
> the stack to release, but it is possible the compiler recognizes the
> tail recursion and RecursiveRelease is implemented efficiently. In that
> case it could be more efficient than UNPROTECT_PTR, which has to move
> all the other entries down to fill the newly vacated space. Really the
> only reliable way to answer efficiency questions like this is to try
> both ways and see which works better in your application.

Thanks. I did not know about UNPROTECT_PTR.
I had concerns over the stack usage, but so far it did not prove too 
much of a problem. Still, why isn't the tail recursion explicitly made 
an iteration then ? This would take the "may be the compiler figures it 
out, may be not" variable out of the equation.

> Another possibility is to maintain your own list or environment of
> objects, and just protect/preserve the list as a whole.

Interesting idea, this would let one perform his/her own bookkeeping on 
the list/environment. How is R garbage collection checking contained 
objects ? (I am thinking performances here, and may be cyclic references).



L.


> Duncan Murdoch
>
>>
>>
>> HTH,
>>
>>
>> L.
>>
>>
>>
>>
>>> Thanks,
>>>
>>> Romain
>>>
>>> [1]http://lists.r-forge.r-project.org/pipermail/rcpp-devel/
>>> [2]
>>> http://r-forge.r-project.org/plugins/scmsvn/viewcvs.php/pkg/src/RObject.cpp?rev=255&root=rcpp&view=markup
>>>
>>>
>>> -- Romain Francois Professional R Enthusiast +33(0) 6 28 91 30 30
>>> http://romainfrancois.blog.free.fr |- http://tr.im/IW9B : C++ exceptions
>>> at the R level |- http://tr.im/IlMh : CPP package: exposing C++ objects
>>> `- http://tr.im/HlX9 : new package : bibtex
>>
>> ______________________________________________
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel
>


From romain.francois at dbmail.com  Sat Jan  2 18:24:39 2010
From: romain.francois at dbmail.com (Romain Francois)
Date: Sat, 02 Jan 2010 18:24:39 +0100
Subject: [Rd] R_PreserveObject,
 R_ReleaseObject  : reference counting needed ?
In-Reply-To: <A37E5DDA-CE93-4A32-9724-542EBB602AFC@r-project.org>
References: <4B3F1AC7.4050208@dbmail.com>
	<A37E5DDA-CE93-4A32-9724-542EBB602AFC@r-project.org>
Message-ID: <4B3F8157.3020903@dbmail.com>

On 01/02/2010 06:01 PM, Simon Urbanek wrote:
>
>
> On Jan 2, 2010, at 5:07 AM, Romain Francois wrote:
>
>> Hello,
>>
>> We are currently making lots of changes to Rcpp (see the open Rcpp mailing list if interested [1] in the details).
>>
>> We are now using [2] R_PreserveObject and R_ReleaseObject to manage garbage collection instead of the PROTECT/UNPROTECT dance. This seems to work well, but I was wondering if there was documentation about it.
>>
>
> I don't think so - the only documentation is the comment in the source.


Fair enough. FWIW, some mention of it in the R-ints or R-exts could be 
valuable.


>> In particular, if we preserve the same SEXP twice (or more), should we implement some sort of reference counting ?
>>
>
> Preserve/Release are for managing objects that are supposed to survive past the call and are not tied to any other R object. PROTECT/UNPROTECT are for temporary preservation within a call.
>
> Although you're right that Preserve/Release is effectively implemented as a stack at the moment it is not stated explicitly anywhere (this goes all the way back to R 0.64 so chances are that only Ross can comment..). However, for practical purposes it would be potentially dangerous to have it work like a flag because you can simply never know whether the same object was not already registered by some other code.
>
>
>> Reading the source (below, from memory.c) I think not, but some confirmation would help.
>>
>> void R_PreserveObject(SEXP object)
>> {
>>     R_PreciousList = CONS(object, R_PreciousList);
>> }
>>
>> static SEXP RecursiveRelease(SEXP object, SEXP list)
>> {
>>     if (!isNull(list)) {
>> 	if (object == CAR(list))
>> 	    return CDR(list);
>> 	else
>> 	    CDR(list) = RecursiveRelease(object, CDR(list));
>>     }
>>     return list;
>> }
>>
>> void R_ReleaseObject(SEXP object)
>> {
>>     R_PreciousList =  RecursiveRelease(object, R_PreciousList);
>> }
>>
>>
>> I'd also be interested if there is some ideas on the relative efficiency of the preserve/release mechanism compared to PROTECT/UNPROTECT.
>>
>
> PROTECT/UNPROTECT is more efficient because all it does is a pointer assignment -- Preserve has to allocate new node and fill it with all parts. On release the extra node is still floating in the GC pool etc.
>
> Normally there is not really a question of choice - within a call you want to use PROTET/UNPROTECT and for anything else you simply cannot use it so you have to use Preserve/Release. As a side note Preserve/Release is merely a convenience call, it is often more efficient to simply assign the object to another object you have control of (which is all Preserve really does).
>
> Cheers,
> Simon

Thanks for this advice. This will make it easier to do the bookkeeping 
of how many objects we preserve, etc ...

Romain

-- 
Romain Francois
Professional R Enthusiast
+33(0) 6 28 91 30 30
http://romainfrancois.blog.free.fr
|- http://tr.im/IW9B : C++ exceptions at the R level
|- http://tr.im/IlMh : CPP package: exposing C++ objects
`- http://tr.im/HlX9 : new package : bibtex


From romain.francois at dbmail.com  Sat Jan  2 18:42:58 2010
From: romain.francois at dbmail.com (Romain Francois)
Date: Sat, 02 Jan 2010 18:42:58 +0100
Subject: [Rd] R-devel Digest, Vol 83, Issue 2
In-Reply-To: <4B3F7ACD.2050106@stats.uwo.ca>
References: <mailman.11.1262430004.8711.r-devel@r-project.org>
	<4B3F7625.1080806@gmail.com> <4B3F7ACD.2050106@stats.uwo.ca>
Message-ID: <4B3F85A2.2080003@dbmail.com>

On 01/02/2010 05:56 PM, Duncan Murdoch wrote:
>
> On 02/01/2010 11:36 AM, Laurent Gautier wrote:
>> [Disclaimer: what is below reflects my understanding from reading the
>> R source, others will correct where deemed necessary]
>>
>> On 1/2/10 12:00 PM, r-devel-request at r-project.org wrote:
>>> Hello,
>>>
>>> We are currently making lots of changes to Rcpp (see the open Rcpp
>>> mailing list if interested [1] in the details).
>>>
>>> We are now using [2] R_PreserveObject and R_ReleaseObject to manage
>>> garbage collection instead of the PROTECT/UNPROTECT dance. This seems to
>>> work well, but I was wondering if there was documentation about it.
>>
>> The most precise technical documentation is in memory.c
>> PROTECT is an alias for Rf_protect, itself an alias for
>> SEXP protect(SEXP s);
>> and uses a stack (R_PPStack) to store protected objects.
>>
>>> In particular, if we preserve the same SEXP twice (or more), should we
>>> implement some sort of reference counting ?
>>
>> This depends on the requirements for your system.
>>
>> For example, in rpy2 I added a reference counting layer(*) because I
>> wanted to allow several Python objects to share the same underlying R
>> object, but that's not currently(*) counting how many times an object
>> should be freed.
>> (*: imperfect, but currently doing a very decent job - details upon
>> request).
>>
>> That kind of feature could be provided by R's C-level API, since this
>> could be seen of general use as well as give an opportunity to improve
>> the performances of the R_PreservedObject/R_ReleaseObject duo whenever
>> a lot of objects are protected and/or external code is
>> protecting/releasing objects through a FIFO proxy.
>>
>>
>>> Reading the source (below, from memory.c) I think not, but some
>>> confirmation would help.
>>
>> I understand the code in memory.c like an object preserved twice needs
>> to be freed twice: R_PreciousList is just a (linked) list, and
>> "R_PreserveObject(object)" adds the object to the beginning of the
>> list while "R_ReleaseObject(object)" removes the first "object" found
>> from the list.
>>
>>
>>
>>> void R_PreserveObject(SEXP object)
>>> {
>>> R_PreciousList = CONS(object, R_PreciousList);
>>> }
>>>
>>> static SEXP RecursiveRelease(SEXP object, SEXP list)
>>> {
>>> if (!isNull(list)) {
>>> if (object == CAR(list))
>>> return CDR(list);
>>> else
>>> CDR(list) = RecursiveRelease(object, CDR(list));
>>> }
>>> return list;
>>> }
>>>
>>> void R_ReleaseObject(SEXP object)
>>> {
>>> R_PreciousList = RecursiveRelease(object, R_PreciousList);
>>> }
>>>
>>>
>>> I'd also be interested if there is some ideas on the relative efficiency
>>> of the preserve/release mechanism compared to PROTECT/UNPROTECT.
>>
>> PROTECT/UNPROTECT is trading granularity for speed. It is a stack with
>> only tow operations possible:
>> - push 1 object into the stack
>> - pull (unprotect) N last objects from the stack
>
> UNPROTECT_PTR is also possible, which does a linear search through the
> stack and unprotects something possibly deep within it. There is also
> REPROTECT which allows you to replace an entry within the stack.

Thanks; I've used those when I played with the parser's code (for 
highlight). It felt slightly harder to use than preserve/release since 
you have to maintain the protect index, etc ...

I think I'll go as you say below, just maintain my own precious list, 
the way Preserve/Release does it.

Romain

> I would guess that UNPROTECT_PTR is more efficient than RecursiveRelease
> because it doesn't use so much stack space when it needs to go deep into
> the stack to release, but it is possible the compiler recognizes the
> tail recursion and RecursiveRelease is implemented efficiently. In that
> case it could be more efficient than UNPROTECT_PTR, which has to move
> all the other entries down to fill the newly vacated space. Really the
> only reliable way to answer efficiency questions like this is to try
> both ways and see which works better in your application.
>
> Another possibility is to maintain your own list or environment of
> objects, and just protect/preserve the list as a whole.
>
> Duncan Murdoch

-- 
Romain Francois
Professional R Enthusiast
+33(0) 6 28 91 30 30
http://romainfrancois.blog.free.fr
|- http://tr.im/IW9B : C++ exceptions at the R level
|- http://tr.im/IlMh : CPP package: exposing C++ objects
`- http://tr.im/HlX9 : new package : bibtex


From lgautier at gmail.com  Sat Jan  2 19:02:54 2010
From: lgautier at gmail.com (Laurent Gautier)
Date: Sat, 02 Jan 2010 19:02:54 +0100
Subject: [Rd] R_PreserveObject,
 R_ReleaseObject : reference counting needed ?
In-Reply-To: <4B3F7973.70203@dbmail.com>
References: <mailman.11.1262430004.8711.r-devel@r-project.org>
	<4B3F7625.1080806@gmail.com> <4B3F7973.70203@dbmail.com>
Message-ID: <4B3F8A4E.8060605@gmail.com>

On 1/2/10 5:50 PM, Romain Francois wrote:
> Thanks.
>
> On 01/02/2010 05:36 PM, Laurent Gautier wrote:
>>
>> [Disclaimer: what is below reflects my understanding from reading the R
>> source, others will correct where deemed necessary]
>>
>> On 1/2/10 12:00 PM, r-devel-request at r-project.org wrote:

(...)

>>
>>> In particular, if we preserve the same SEXP twice (or more), should we
>>> implement some sort of reference counting ?
>>
>> This depends on the requirements for your system.
>
> We wrap up SEXP into a C++ class that in particular manages itself
> preserving and releasing the object to garbage collection.

If you do not allow several C++ instances to share the same SEXP, you 
should not need reference counting. In the case of rpy2, this was made 
necessary for allowing inheritance (as nested calls to constructors can 
cause a transient sharing of the given SEXP across several Python objects).


(...)



L.


From simon.urbanek at r-project.org  Sat Jan  2 20:28:57 2010
From: simon.urbanek at r-project.org (Simon Urbanek)
Date: Sat, 2 Jan 2010 14:28:57 -0500
Subject: [Rd] R-devel Digest, Vol 83, Issue 2
In-Reply-To: <4B3F7F8D.8060701@gmail.com>
References: <mailman.11.1262430004.8711.r-devel@r-project.org>
	<4B3F7625.1080806@gmail.com> <4B3F7ACD.2050106@stats.uwo.ca>
	<4B3F7F8D.8060701@gmail.com>
Message-ID: <B38057DF-8452-41FC-9D46-B67FBD58E01C@r-project.org>


On Jan 2, 2010, at 12:17 PM, Laurent Gautier wrote:

> On 1/2/10 5:56 PM, Duncan Murdoch wrote:
>> On 02/01/2010 11:36 AM, Laurent Gautier wrote:
>>> [Disclaimer: what is below reflects my understanding from reading the
>>> R source, others will correct where deemed necessary]
>>> 
>>> On 1/2/10 12:00 PM, r-devel-request at r-project.org wrote:
> 
> (...)
> 
>>>> 
>>>> I'd also be interested if there is some ideas on the relative efficiency
>>>> of the preserve/release mechanism compared to PROTECT/UNPROTECT.
>>> 
>>> PROTECT/UNPROTECT is trading granularity for speed. It is a stack with
>>> only tow operations possible:
>>> - push 1 object into the stack
>>> - pull (unprotect) N last objects from the stack
>> 
>> UNPROTECT_PTR is also possible, which does a linear search through the
>> stack and unprotects something possibly deep within it. There is also
>> REPROTECT which allows you to replace an entry within the stack.
> >
>> I would guess that UNPROTECT_PTR is more efficient than RecursiveRelease
>> because it doesn't use so much stack space when it needs to go deep into
>> the stack to release, but it is possible the compiler recognizes the
>> tail recursion and RecursiveRelease is implemented efficiently. In that
>> case it could be more efficient than UNPROTECT_PTR, which has to move
>> all the other entries down to fill the newly vacated space. Really the
>> only reliable way to answer efficiency questions like this is to try
>> both ways and see which works better in your application.
> 
> Thanks. I did not know about UNPROTECT_PTR.
> I had concerns over the stack usage, but so far it did not prove too much of a problem. Still, why isn't the tail recursion explicitly made an iteration then ? This would take the "may be the compiler figures it out, may be not" variable out of the equation.
> 

Careful - the protection stack (bookkeeping by R) has nothing to do with the C function call stack hence it has nothing to do with the compiler. The protection stack is global so usually you don't run out of it unless something goes horribly wrong (=infinite loop).


>> Another possibility is to maintain your own list or environment of
>> objects, and just protect/preserve the list as a whole.
> 
> Interesting idea, this would let one perform his/her own bookkeeping on the list/environment. How is R garbage collection checking contained objects ? (I am thinking performances here, and may be cyclic references).
> 

You don't really want to care because the GC is global for all objects (and cycles are supported by the GC in R) - so whether you keep it yourself or Preserve/Release is practically irrelevant (the protection stack is handled separately).

As for keeping your own list -- if you really care about performance that much (to be honest in vast majority of cases it doesn't matter) you have to be careful how you implement it. Technically the fastest way is preallocated generic vector but it really depends on how you deal with the access so you can easily perform worse than Preserve/Release if you're not careful.

As a side note - the best way (IMHO) to deal with all those issues is to use external pointers because a) you get very efficient C finalizers b) you can directly (and very efficiently) tie lifespan of other objects to the same SEXP and c) as guardians they can nicely track other objects that hold them.

Cheers,
Simon



> 
> 
> L.
> 
> 
>> Duncan Murdoch
>> 
>>> 
>>> 
>>> HTH,
>>> 
>>> 
>>> L.
>>> 
>>> 
>>> 
>>> 
>>>> Thanks,
>>>> 
>>>> Romain
>>>> 
>>>> [1]http://lists.r-forge.r-project.org/pipermail/rcpp-devel/
>>>> [2]
>>>> http://r-forge.r-project.org/plugins/scmsvn/viewcvs.php/pkg/src/RObject.cpp?rev=255&root=rcpp&view=markup
>>>> 
>>>> 
>>>> -- Romain Francois Professional R Enthusiast +33(0) 6 28 91 30 30
>>>> http://romainfrancois.blog.free.fr |- http://tr.im/IW9B : C++ exceptions
>>>> at the R level |- http://tr.im/IlMh : CPP package: exposing C++ objects
>>>> `- http://tr.im/HlX9 : new package : bibtex
>>> 
>>> ______________________________________________
>>> R-devel at r-project.org mailing list
>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>> 
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
> 
> 


From murdoch at stats.uwo.ca  Sat Jan  2 20:53:31 2010
From: murdoch at stats.uwo.ca (Duncan Murdoch)
Date: Sat, 02 Jan 2010 14:53:31 -0500
Subject: [Rd] R-devel Digest, Vol 83, Issue 2
In-Reply-To: <B38057DF-8452-41FC-9D46-B67FBD58E01C@r-project.org>
References: <mailman.11.1262430004.8711.r-devel@r-project.org>
	<4B3F7625.1080806@gmail.com> <4B3F7ACD.2050106@stats.uwo.ca>
	<4B3F7F8D.8060701@gmail.com>
	<B38057DF-8452-41FC-9D46-B67FBD58E01C@r-project.org>
Message-ID: <4B3FA43B.1070707@stats.uwo.ca>

Simon Urbanek wrote:
> On Jan 2, 2010, at 12:17 PM, Laurent Gautier wrote:
>
>   
>> On 1/2/10 5:56 PM, Duncan Murdoch wrote:
>>     
>>> On 02/01/2010 11:36 AM, Laurent Gautier wrote:
>>>       
>>>> [Disclaimer: what is below reflects my understanding from reading the
>>>> R source, others will correct where deemed necessary]
>>>>
>>>> On 1/2/10 12:00 PM, r-devel-request at r-project.org wrote:
>>>>         
>> (...)
>>
>>     
>>>>> I'd also be interested if there is some ideas on the relative efficiency
>>>>> of the preserve/release mechanism compared to PROTECT/UNPROTECT.
>>>>>           
>>>> PROTECT/UNPROTECT is trading granularity for speed. It is a stack with
>>>> only tow operations possible:
>>>> - push 1 object into the stack
>>>> - pull (unprotect) N last objects from the stack
>>>>         
>>> UNPROTECT_PTR is also possible, which does a linear search through the
>>> stack and unprotects something possibly deep within it. There is also
>>> REPROTECT which allows you to replace an entry within the stack.
>>>
>>> I would guess that UNPROTECT_PTR is more efficient than RecursiveRelease
>>> because it doesn't use so much stack space when it needs to go deep into
>>> the stack to release, but it is possible the compiler recognizes the
>>> tail recursion and RecursiveRelease is implemented efficiently. In that
>>> case it could be more efficient than UNPROTECT_PTR, which has to move
>>> all the other entries down to fill the newly vacated space. Really the
>>> only reliable way to answer efficiency questions like this is to try
>>> both ways and see which works better in your application.
>>>       
>> Thanks. I did not know about UNPROTECT_PTR.
>> I had concerns over the stack usage, but so far it did not prove too much of a problem. Still, why isn't the tail recursion explicitly made an iteration then ? This would take the "may be the compiler figures it out, may be not" variable out of the equation.
>>
>>     
>
> Careful - the protection stack (bookkeeping by R) has nothing to do with the C function call stack hence it has nothing to do with the compiler. The protection stack is global so usually you don't run out of it unless something goes horribly wrong (=infinite loop).
>   

I think Laurent was referring to RecursiveRelease, which could use a lot 
of C stack if you choose to release something that is deep in the list, 
since it checks the head, and if that doesn't match, calls itself again 
on the rest of the list.  (I checked, and at least one version of gcc 
doesn't recognize the tail recursion:  it really does generate a 
recursive call.)

Laurent asked why it isn't optimized to avoid the recursion:  I think 
the answer is simply because it is so rarely used that nobody has bothered.

Duncan Murdoch
>
>   
>>> Another possibility is to maintain your own list or environment of
>>> objects, and just protect/preserve the list as a whole.
>>>       
>> Interesting idea, this would let one perform his/her own bookkeeping on the list/environment. How is R garbage collection checking contained objects ? (I am thinking performances here, and may be cyclic references).
>>
>>     
>
> You don't really want to care because the GC is global for all objects (and cycles are supported by the GC in R) - so whether you keep it yourself or Preserve/Release is practically irrelevant (the protection stack is handled separately).
>
> As for keeping your own list -- if you really care about performance that much (to be honest in vast majority of cases it doesn't matter) you have to be careful how you implement it. Technically the fastest way is preallocated generic vector but it really depends on how you deal with the access so you can easily perform worse than Preserve/Release if you're not careful.
>
> As a side note - the best way (IMHO) to deal with all those issues is to use external pointers because a) you get very efficient C finalizers b) you can directly (and very efficiently) tie lifespan of other objects to the same SEXP and c) as guardians they can nicely track other objects that hold them.
>
> Cheers,
> Simon
>
>
>
>   
>> L.
>>
>>
>>     
>>> Duncan Murdoch
>>>
>>>       
>>>> HTH,
>>>>
>>>>
>>>> L.
>>>>
>>>>
>>>>
>>>>
>>>>         
>>>>> Thanks,
>>>>>
>>>>> Romain
>>>>>
>>>>> [1]http://lists.r-forge.r-project.org/pipermail/rcpp-devel/
>>>>> [2]
>>>>> http://r-forge.r-project.org/plugins/scmsvn/viewcvs.php/pkg/src/RObject.cpp?rev=255&root=rcpp&view=markup
>>>>>
>>>>>
>>>>> -- Romain Francois Professional R Enthusiast +33(0) 6 28 91 30 30
>>>>> http://romainfrancois.blog.free.fr |- http://tr.im/IW9B : C++ exceptions
>>>>> at the R level |- http://tr.im/IlMh : CPP package: exposing C++ objects
>>>>> `- http://tr.im/HlX9 : new package : bibtex
>>>>>           
>>>> ______________________________________________
>>>> R-devel at r-project.org mailing list
>>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>>>         
>> ______________________________________________
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>
>>
>>     
>
>


From luke at stat.uiowa.edu  Sat Jan  2 21:05:20 2010
From: luke at stat.uiowa.edu (luke at stat.uiowa.edu)
Date: Sat, 2 Jan 2010 14:05:20 -0600 (CST)
Subject: [Rd] R-devel Digest, Vol 83, Issue 2
In-Reply-To: <4B3FA43B.1070707@stats.uwo.ca>
References: <mailman.11.1262430004.8711.r-devel@r-project.org>
	<4B3F7625.1080806@gmail.com> <4B3F7ACD.2050106@stats.uwo.ca>
	<4B3F7F8D.8060701@gmail.com>
	<B38057DF-8452-41FC-9D46-B67FBD58E01C@r-project.org>
	<4B3FA43B.1070707@stats.uwo.ca>
Message-ID: <alpine.DEB.1.00.1001021359270.6403@luke-inspiron>

On Sat, 2 Jan 2010, Duncan Murdoch wrote:

> Simon Urbanek wrote:
>> On Jan 2, 2010, at 12:17 PM, Laurent Gautier wrote:
>>
>> 
>>> On 1/2/10 5:56 PM, Duncan Murdoch wrote:
>>> 
>>>> On 02/01/2010 11:36 AM, Laurent Gautier wrote:
>>>> 
>>>>> [Disclaimer: what is below reflects my understanding from reading the
>>>>> R source, others will correct where deemed necessary]
>>>>> 
>>>>> On 1/2/10 12:00 PM, r-devel-request at r-project.org wrote:
>>>>> 
>>> (...)
>>>
>>> 
>>>>>> I'd also be interested if there is some ideas on the relative 
>>>>>> efficiency
>>>>>> of the preserve/release mechanism compared to PROTECT/UNPROTECT.
>>>>>> 
>>>>> PROTECT/UNPROTECT is trading granularity for speed. It is a stack with
>>>>> only tow operations possible:
>>>>> - push 1 object into the stack
>>>>> - pull (unprotect) N last objects from the stack
>>>>> 
>>>> UNPROTECT_PTR is also possible, which does a linear search through the
>>>> stack and unprotects something possibly deep within it. There is also
>>>> REPROTECT which allows you to replace an entry within the stack.
>>>> 
>>>> I would guess that UNPROTECT_PTR is more efficient than RecursiveRelease
>>>> because it doesn't use so much stack space when it needs to go deep into
>>>> the stack to release, but it is possible the compiler recognizes the
>>>> tail recursion and RecursiveRelease is implemented efficiently. In that
>>>> case it could be more efficient than UNPROTECT_PTR, which has to move
>>>> all the other entries down to fill the newly vacated space. Really the
>>>> only reliable way to answer efficiency questions like this is to try
>>>> both ways and see which works better in your application.
>>>> 
>>> Thanks. I did not know about UNPROTECT_PTR.
>>> I had concerns over the stack usage, but so far it did not prove too much 
>>> of a problem. Still, why isn't the tail recursion explicitly made an 
>>> iteration then ? This would take the "may be the compiler figures it out, 
>>> may be not" variable out of the equation.
>>>
>>> 
>> 
>> Careful - the protection stack (bookkeeping by R) has nothing to do with 
>> the C function call stack hence it has nothing to do with the compiler. The 
>> protection stack is global so usually you don't run out of it unless 
>> something goes horribly wrong (=infinite loop).
>> 
>
> I think Laurent was referring to RecursiveRelease, which could use a lot of C 
> stack if you choose to release something that is deep in the list, since it 
> checks the head, and if that doesn't match, calls itself again on the rest of 
> the list.  (I checked, and at least one version of gcc doesn't recognize the 
> tail recursion:  it really does generate a recursive call.)

I believe current gcc -O2 does optimize tail recursive calls (more
generally sibling calls) but RecursiveRelease isn't written as a tail
recursion -- the return vaule is used in an assignment.  In any case
it would probably make more sense to rewrite RecursiveRelease to not
use recursion at all, but I'm not motivated to do that at this point.

luke

>
> Laurent asked why it isn't optimized to avoid the recursion:  I think the 
> answer is simply because it is so rarely used that nobody has bothered.
>
> Duncan Murdoch
>>
>> 
>>>> Another possibility is to maintain your own list or environment of
>>>> objects, and just protect/preserve the list as a whole.
>>>> 
>>> Interesting idea, this would let one perform his/her own bookkeeping on 
>>> the list/environment. How is R garbage collection checking contained 
>>> objects ? (I am thinking performances here, and may be cyclic references).
>>>
>>> 
>> 
>> You don't really want to care because the GC is global for all objects (and 
>> cycles are supported by the GC in R) - so whether you keep it yourself or 
>> Preserve/Release is practically irrelevant (the protection stack is handled 
>> separately).
>> 
>> As for keeping your own list -- if you really care about performance that 
>> much (to be honest in vast majority of cases it doesn't matter) you have to 
>> be careful how you implement it. Technically the fastest way is 
>> preallocated generic vector but it really depends on how you deal with the 
>> access so you can easily perform worse than Preserve/Release if you're not 
>> careful.
>> 
>> As a side note - the best way (IMHO) to deal with all those issues is to 
>> use external pointers because a) you get very efficient C finalizers b) you 
>> can directly (and very efficiently) tie lifespan of other objects to the 
>> same SEXP and c) as guardians they can nicely track other objects that hold 
>> them.
>> 
>> Cheers,
>> Simon
>> 
>> 
>>
>> 
>>> L.
>>> 
>>>
>>> 
>>>> Duncan Murdoch
>>>>
>>>> 
>>>>> HTH,
>>>>> 
>>>>> 
>>>>> L.
>>>>> 
>>>>> 
>>>>> 
>>>>>
>>>>> 
>>>>>> Thanks,
>>>>>> 
>>>>>> Romain
>>>>>> 
>>>>>> [1]http://lists.r-forge.r-project.org/pipermail/rcpp-devel/
>>>>>> [2]
>>>>>> http://r-forge.r-project.org/plugins/scmsvn/viewcvs.php/pkg/src/RObject.cpp?rev=255&root=rcpp&view=markup
>>>>>> 
>>>>>> 
>>>>>> -- Romain Francois Professional R Enthusiast +33(0) 6 28 91 30 30
>>>>>> http://romainfrancois.blog.free.fr |- http://tr.im/IW9B : C++ 
>>>>>> exceptions
>>>>>> at the R level |- http://tr.im/IlMh : CPP package: exposing C++ objects
>>>>>> `- http://tr.im/HlX9 : new package : bibtex
>>>>>> 
>>>>> ______________________________________________
>>>>> R-devel at r-project.org mailing list
>>>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>>>> 
>>> ______________________________________________
>>> R-devel at r-project.org mailing list
>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>> 
>>>
>>> 
>> 
>> 
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>

-- 
Luke Tierney
Chair, Statistics and Actuarial Science
Ralph E. Wareham Professor of Mathematical Sciences
University of Iowa                  Phone:             319-335-3386
Department of Statistics and        Fax:               319-335-3017
    Actuarial Science
241 Schaeffer Hall                  email:      luke at stat.uiowa.edu
Iowa City, IA 52242                 WWW:  http://www.stat.uiowa.edu


From lgautier at gmail.com  Sat Jan  2 21:16:59 2010
From: lgautier at gmail.com (Laurent Gautier)
Date: Sat, 02 Jan 2010 21:16:59 +0100
Subject: [Rd] R-devel Digest, Vol 83, Issue 2
In-Reply-To: <4B3FA43B.1070707@stats.uwo.ca>
References: <mailman.11.1262430004.8711.r-devel@r-project.org>
	<4B3F7625.1080806@gmail.com> <4B3F7ACD.2050106@stats.uwo.ca>
	<4B3F7F8D.8060701@gmail.com>
	<B38057DF-8452-41FC-9D46-B67FBD58E01C@r-project.org>
	<4B3FA43B.1070707@stats.uwo.ca>
Message-ID: <4B3FA9BB.90302@gmail.com>

On 1/2/10 8:53 PM, Duncan Murdoch wrote:
> Simon Urbanek wrote:
>> On Jan 2, 2010, at 12:17 PM, Laurent Gautier wrote:
>>
>>> On 1/2/10 5:56 PM, Duncan Murdoch wrote:
>>>> On 02/01/2010 11:36 AM, Laurent Gautier wrote:
>>>>> [Disclaimer: what is below reflects my understanding from reading the
>>>>> R source, others will correct where deemed necessary]
>>>>>
>>>>> On 1/2/10 12:00 PM, r-devel-request at r-project.org wrote:
>>> (...)
>>>
>>>>>> I'd also be interested if there is some ideas on the relative
>>>>>> efficiency
>>>>>> of the preserve/release mechanism compared to PROTECT/UNPROTECT.
>>>>> PROTECT/UNPROTECT is trading granularity for speed. It is a stack with
>>>>> only tow operations possible:
>>>>> - push 1 object into the stack
>>>>> - pull (unprotect) N last objects from the stack
>>>> UNPROTECT_PTR is also possible, which does a linear search through the
>>>> stack and unprotects something possibly deep within it. There is also
>>>> REPROTECT which allows you to replace an entry within the stack.
>>>>
>>>> I would guess that UNPROTECT_PTR is more efficient than
>>>> RecursiveRelease
>>>> because it doesn't use so much stack space when it needs to go deep
>>>> into
>>>> the stack to release, but it is possible the compiler recognizes the
>>>> tail recursion and RecursiveRelease is implemented efficiently. In that
>>>> case it could be more efficient than UNPROTECT_PTR, which has to move
>>>> all the other entries down to fill the newly vacated space. Really the
>>>> only reliable way to answer efficiency questions like this is to try
>>>> both ways and see which works better in your application.
>>> Thanks. I did not know about UNPROTECT_PTR.
>>> I had concerns over the stack usage, but so far it did not prove too
>>> much of a problem. Still, why isn't the tail recursion explicitly
>>> made an iteration then ? This would take the "may be the compiler
>>> figures it out, may be not" variable out of the equation.
>>>
>>
>> Careful - the protection stack (bookkeeping by R) has nothing to do
>> with the C function call stack hence it has nothing to do with the
>> compiler. The protection stack is global so usually you don't run out
>> of it unless something goes horribly wrong (=infinite loop).
>
> I think Laurent was referring to RecursiveRelease, which could use a lot
> of C stack if you choose to release something that is deep in the list,
> since it checks the head, and if that doesn't match, calls itself again
> on the rest of the list. (I checked, and at least one version of gcc
> doesn't recognize the tail recursion: it really does generate a
> recursive call.)
>
> Laurent asked why it isn't optimized to avoid the recursion: I think the
> answer is simply because it is so rarely used that nobody has bothered.

Yes, I was referring to RecursiveRelease. Sorry if this was not clear.

What are the chances for a patch to be accepted ? At first sight(*), 
making that tail recursion an iterative function is not a major 
undertaking, and reviewing the patch be fairly straightforward... but I 
can always use that time otherwise if the answer to the question is "nil".


L.



> Duncan Murdoch
>>
>>>> Another possibility is to maintain your own list or environment of
>>>> objects, and just protect/preserve the list as a whole.
>>> Interesting idea, this would let one perform his/her own bookkeeping
>>> on the list/environment. How is R garbage collection checking
>>> contained objects ? (I am thinking performances here, and may be
>>> cyclic references).
>>>
>>
>> You don't really want to care because the GC is global for all objects
>> (and cycles are supported by the GC in R) - so whether you keep it
>> yourself or Preserve/Release is practically irrelevant (the protection
>> stack is handled separately).
>>
>> As for keeping your own list -- if you really care about performance
>> that much (to be honest in vast majority of cases it doesn't matter)
>> you have to be careful how you implement it. Technically the fastest
>> way is preallocated generic vector but it really depends on how you
>> deal with the access so you can easily perform worse than
>> Preserve/Release if you're not careful.
>>
>> As a side note - the best way (IMHO) to deal with all those issues is
>> to use external pointers because a) you get very efficient C
>> finalizers b) you can directly (and very efficiently) tie lifespan of
>> other objects to the same SEXP and c) as guardians they can nicely
>> track other objects that hold them.
>>
>> Cheers,
>> Simon
>>
>>
>>
>>> L.
>>>
>>>
>>>> Duncan Murdoch
>>>>
>>>>> HTH,
>>>>>
>>>>>
>>>>> L.
>>>>>
>>>>>
>>>>>
>>>>>
>>>>>> Thanks,
>>>>>>
>>>>>> Romain
>>>>>>
>>>>>> [1]http://lists.r-forge.r-project.org/pipermail/rcpp-devel/
>>>>>> [2]
>>>>>> http://r-forge.r-project.org/plugins/scmsvn/viewcvs.php/pkg/src/RObject.cpp?rev=255&root=rcpp&view=markup
>>>>>>
>>>>>>
>>>>>>
>>>>>> -- Romain Francois Professional R Enthusiast +33(0) 6 28 91 30 30
>>>>>> http://romainfrancois.blog.free.fr |- http://tr.im/IW9B : C++
>>>>>> exceptions
>>>>>> at the R level |- http://tr.im/IlMh : CPP package: exposing C++
>>>>>> objects
>>>>>> `- http://tr.im/HlX9 : new package : bibtex
>>>>> ______________________________________________
>>>>> R-devel at r-project.org mailing list
>>>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>> ______________________________________________
>>> R-devel at r-project.org mailing list
>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>>
>>>
>>
>


From lgautier at gmail.com  Sat Jan  2 22:08:26 2010
From: lgautier at gmail.com (Laurent Gautier)
Date: Sat, 02 Jan 2010 22:08:26 +0100
Subject: [Rd] R-devel Digest, Vol 83, Issue 2
In-Reply-To: <B38057DF-8452-41FC-9D46-B67FBD58E01C@r-project.org>
References: <mailman.11.1262430004.8711.r-devel@r-project.org>
	<4B3F7625.1080806@gmail.com> <4B3F7ACD.2050106@stats.uwo.ca>
	<4B3F7F8D.8060701@gmail.com>
	<B38057DF-8452-41FC-9D46-B67FBD58E01C@r-project.org>
Message-ID: <4B3FB5CA.9020302@gmail.com>

On 1/2/10 8:28 PM, Simon Urbanek wrote:
>
> On Jan 2, 2010, at 12:17 PM, Laurent Gautier wrote:
>
>> On 1/2/10 5:56 PM, Duncan Murdoch wrote:
>>> On 02/01/2010 11:36 AM, Laurent Gautier wrote:
>>>> [Disclaimer: what is below reflects my understanding from
>>>> reading the R source, others will correct where deemed
>>>> necessary]
>>>>
>>>> On 1/2/10 12:00 PM, r-devel-request at r-project.org wrote:
>>
(...)

>>> Another possibility is to maintain your own list or environment
>>> of objects, and just protect/preserve the list as a whole.
>>
>> Interesting idea, this would let one perform his/her own
>> bookkeeping on the list/environment. How is R garbage collection
>> checking contained objects ? (I am thinking performances here, and
>> may be cyclic references).
>>
>
> You don't really want to care because the GC is global for all
> objects (and cycles are supported by the GC in R) - so whether you
> keep it yourself or Preserve/Release is practically irrelevant (the
> protection stack is handled separately).

I guess that I'll have to know in order to understand that I don't 
really want to care. ;-)
The garbage collector must somehow know if an object is available for 
collection (and will have to check whether an object is PROTECTed or 
not, or Preserved or not).
I suppose that upon being called the garbage collector will first look 
into the PROTECTed and Preserved objects, mark them as unavailble for 
collection, then recursively mark objects contained in them.

> As for keeping your own list -- if you really care about performance
> that much (to be honest in vast majority of cases it doesn't matter)
> you have to be careful how you implement it. Technically the fastest
> way is preallocated generic vector but it really depends on how you
> deal with the access so you can easily perform worse than
> Preserve/Release if you're not careful.

Releasing being of linear complexity, having few thousands of Preserved 
objects not being anticipated as an extraordinary situation, and 
Preserve/Release cycles being quite frequent, I start minding a bit 
about the performance. Keeping my own list would let me experiment with 
various strategies (and eventually offer

> As a side note - the best way (IMHO) to deal with all those issues is
> to use external pointers because a) you get very efficient C
> finalizers b) you can directly (and very efficiently) tie lifespan of
> other objects to the same SEXP and c) as guardians they can nicely
> track other objects that hold them.

Thanks. I am not certain to follow everything. Are you suggesting that 
rather than Preserve-ing/Release-ing a list/environment that would act 
as a guardian for several objects, one should use an external pointer 
(to an arbitrary C pointer) ? In that case, how does one indicate that 
an external pointer acts as a container ?

Or are you suggesting that rather than Preserve-in/Release-ing R objects 
one should use an external pointer acting as a proxy for a SEXP 
(argument "prot" in R_MakeExternalPtr(void *p, SEXP tag, SEXP prot) ) ?
(but in that case the external pointer will itself have to go through 
Preserve/Release cycles...)


Cheers,


Laurent

> Cheers, Simon
>
>
>
>>
>>
>> L.
>>
>>
>>> Duncan Murdoch
>>>
>>>>
>>>>
>>>> HTH,
>>>>
>>>>
>>>> L.
>>>>
>>>>
>>>>
>>>>
>>>>> Thanks,
>>>>>
>>>>> Romain
>>>>>
>>>>> [1]http://lists.r-forge.r-project.org/pipermail/rcpp-devel/
>>>>> [2]
>>>>> http://r-forge.r-project.org/plugins/scmsvn/viewcvs.php/pkg/src/RObject.cpp?rev=255&root=rcpp&view=markup
>>>>>
>>>>>
>>>>>
>>>>>
-- Romain Francois Professional R Enthusiast +33(0) 6 28 91 30 30
>>>>> http://romainfrancois.blog.free.fr |- http://tr.im/IW9B : C++
>>>>> exceptions at the R level |- http://tr.im/IlMh : CPP package:
>>>>> exposing C++ objects `- http://tr.im/HlX9 : new package :
>>>>> bibtex
>>>>
>>>> ______________________________________________
>>>> R-devel at r-project.org mailing list
>>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>>
>>
>> ______________________________________________
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>
>>
>


From armstrong.whit at gmail.com  Sat Jan  2 22:26:29 2010
From: armstrong.whit at gmail.com (Whit Armstrong)
Date: Sat, 2 Jan 2010 16:26:29 -0500
Subject: [Rd] R_PreserveObject,
	R_ReleaseObject : reference counting 	needed ?
In-Reply-To: <4B3F8157.3020903@dbmail.com>
References: <4B3F1AC7.4050208@dbmail.com>
	<A37E5DDA-CE93-4A32-9724-542EBB602AFC@r-project.org>
	<4B3F8157.3020903@dbmail.com>
Message-ID: <8ec76081001021326w36270540xdd74e83c1f9ebc94@mail.gmail.com>

Romain,

Is the use of UNPROTECT_PTR discouraged?  I wonder why you haven't
considered using it instead.

I have a similar project that uses a ref counting scheme and handles
the deletion of the shared object with UNPROTECT_PTR.  This method has
been working fine, but if there are reasons I should not be using it,
I would certainly like to know.

>From memory.c: /* "unprotect_ptr" remove pointer from somewhere in R_PPStack */

The code is very simple, it just walks backwards down the list until
it hits your object.  Unless you are adding an obscene number of items
to the protection stack in a given call, finding your object should be
very fast.

My example is here:
http://github.com/armstrtw/rabstraction/blob/master/R.backend.hpp

template<SEXPTYPE RTYPE>
  Rbackend<RTYPE>::~Rbackend() {
    if(release_data_) {
      if(R_object_!=R_NilValue) {
        UNPROTECT_PTR(R_object_);
      }
    }
  }

I still think all these Rcpp projects should come together some day.
Dirk and I talked about combining about two years ago, but "real" work
got it the way.  I'll ping you off list for a follow up.

-Whit


On Sat, Jan 2, 2010 at 12:24 PM, Romain Francois
<romain.francois at dbmail.com> wrote:
> On 01/02/2010 06:01 PM, Simon Urbanek wrote:
>>
>>
>> On Jan 2, 2010, at 5:07 AM, Romain Francois wrote:
>>
>>> Hello,
>>>
>>> We are currently making lots of changes to Rcpp (see the open Rcpp
>>> mailing list if interested [1] in the details).
>>>
>>> We are now using [2] R_PreserveObject and R_ReleaseObject to manage
>>> garbage collection instead of the PROTECT/UNPROTECT dance. This seems to
>>> work well, but I was wondering if there was documentation about it.
>>>
>>
>> I don't think so - the only documentation is the comment in the source.
>
>
> Fair enough. FWIW, some mention of it in the R-ints or R-exts could be
> valuable.
>
>
>>> In particular, if we preserve the same SEXP twice (or more), should we
>>> implement some sort of reference counting ?
>>>
>>
>> Preserve/Release are for managing objects that are supposed to survive
>> past the call and are not tied to any other R object. PROTECT/UNPROTECT are
>> for temporary preservation within a call.
>>
>> Although you're right that Preserve/Release is effectively implemented as
>> a stack at the moment it is not stated explicitly anywhere (this goes all
>> the way back to R 0.64 so chances are that only Ross can comment..).
>> However, for practical purposes it would be potentially dangerous to have it
>> work like a flag because you can simply never know whether the same object
>> was not already registered by some other code.
>>
>>
>>> Reading the source (below, from memory.c) I think not, but some
>>> confirmation would help.
>>>
>>> void R_PreserveObject(SEXP object)
>>> {
>>> ? ?R_PreciousList = CONS(object, R_PreciousList);
>>> }
>>>
>>> static SEXP RecursiveRelease(SEXP object, SEXP list)
>>> {
>>> ? ?if (!isNull(list)) {
>>> ? ? ? ?if (object == CAR(list))
>>> ? ? ? ? ? ?return CDR(list);
>>> ? ? ? ?else
>>> ? ? ? ? ? ?CDR(list) = RecursiveRelease(object, CDR(list));
>>> ? ?}
>>> ? ?return list;
>>> }
>>>
>>> void R_ReleaseObject(SEXP object)
>>> {
>>> ? ?R_PreciousList = ?RecursiveRelease(object, R_PreciousList);
>>> }
>>>
>>>
>>> I'd also be interested if there is some ideas on the relative efficiency
>>> of the preserve/release mechanism compared to PROTECT/UNPROTECT.
>>>
>>
>> PROTECT/UNPROTECT is more efficient because all it does is a pointer
>> assignment -- Preserve has to allocate new node and fill it with all parts.
>> On release the extra node is still floating in the GC pool etc.
>>
>> Normally there is not really a question of choice - within a call you want
>> to use PROTET/UNPROTECT and for anything else you simply cannot use it so
>> you have to use Preserve/Release. As a side note Preserve/Release is merely
>> a convenience call, it is often more efficient to simply assign the object
>> to another object you have control of (which is all Preserve really does).
>>
>> Cheers,
>> Simon
>
> Thanks for this advice. This will make it easier to do the bookkeeping of
> how many objects we preserve, etc ...
>
> Romain
>
> --
> Romain Francois
> Professional R Enthusiast
> +33(0) 6 28 91 30 30
> http://romainfrancois.blog.free.fr
> |- http://tr.im/IW9B : C++ exceptions at the R level
> |- http://tr.im/IlMh : CPP package: exposing C++ objects
> `- http://tr.im/HlX9 : new package : bibtex
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>


From edd at debian.org  Sat Jan  2 22:36:16 2010
From: edd at debian.org (Dirk Eddelbuettel)
Date: Sat, 2 Jan 2010 15:36:16 -0600
Subject: [Rd] R_PreserveObject,
	R_ReleaseObject : reference counting 	needed ?
In-Reply-To: <8ec76081001021326w36270540xdd74e83c1f9ebc94@mail.gmail.com>
References: <4B3F1AC7.4050208@dbmail.com>
	<A37E5DDA-CE93-4A32-9724-542EBB602AFC@r-project.org>
	<4B3F8157.3020903@dbmail.com>
	<8ec76081001021326w36270540xdd74e83c1f9ebc94@mail.gmail.com>
Message-ID: <19263.48208.374594.68408@ron.nulle.part>


On 2 January 2010 at 16:26, Whit Armstrong wrote:
| I still think all these Rcpp projects should come together some day.
| Dirk and I talked about combining about two years ago, but "real" work
| got it the way.  I'll ping you off list for a follow up.

Have a look at the SVN archive for Rcpp on R-Forge and at Rcpp 0.7.1 which
should be on CRAN "soon" (within days).  You may like what Romain added as
class RObject; there is more coming for environments etc, and external
pointers already got added.

That said, we are trying to maintain the fine balance of keeping the old
interface of Rcpp maintained (as it is being used in a number of places, and
as I feel quite strongly about maintaining published interfaces) yet add a
few 'interesting' things which Romain had been pushing real well for our use
in RProtoBuf and other places.  

There is also a mailing list for Rcpp-dev (with the usual subscribe-to-post)
tricks.

Dirk

-- 
Three out of two people have difficulties with fractions.


From romain.francois at dbmail.com  Sat Jan  2 22:43:14 2010
From: romain.francois at dbmail.com (Romain Francois)
Date: Sat, 02 Jan 2010 22:43:14 +0100
Subject: [Rd] R_PreserveObject,
 R_ReleaseObject : reference counting  needed ?
In-Reply-To: <8ec76081001021326w36270540xdd74e83c1f9ebc94@mail.gmail.com>
References: <4B3F1AC7.4050208@dbmail.com>	
	<A37E5DDA-CE93-4A32-9724-542EBB602AFC@r-project.org>	
	<4B3F8157.3020903@dbmail.com>
	<8ec76081001021326w36270540xdd74e83c1f9ebc94@mail.gmail.com>
Message-ID: <4B3FBDF2.8050402@dbmail.com>

On 01/02/2010 10:26 PM, Whit Armstrong wrote:
>
> Romain,
>
> Is the use of UNPROTECT_PTR discouraged?  I wonder why you haven't
> considered using it instead.

that's not what I said. It just felt not as easy to use as just grab a 
SEXP and say R_PreserveObject( x ) and then later R_ReleaseObject.

I did not mean to discourage people from using it. It is probably very 
stable indeed since it is used all over the place in the parser, and 
since the parser is probably the most used code in the R source tree, we 
would know if it did not work properly.

> I have a similar project that uses a ref counting scheme and handles
> the deletion of the shared object with UNPROTECT_PTR.  This method has
> been working fine, but if there are reasons I should not be using it,
> I would certainly like to know.
>
>> From memory.c: /* "unprotect_ptr" remove pointer from somewhere in R_PPStack */
>
> The code is very simple, it just walks backwards down the list until
> it hits your object.  Unless you are adding an obscene number of items
> to the protection stack in a given call, finding your object should be
> very fast.
>
> My example is here:
> http://github.com/armstrtw/rabstraction/blob/master/R.backend.hpp
 >
> template<SEXPTYPE RTYPE>
>    Rbackend<RTYPE>::~Rbackend() {
>      if(release_data_) {
>        if(R_object_!=R_NilValue) {
>          UNPROTECT_PTR(R_object_);
>        }
>      }
>    }

Thanks. I'll have a look.

> I still think all these Rcpp projects should come together some day.
> Dirk and I talked about combining about two years ago, but "real" work
> got it the way.  I'll ping you off list for a follow up.

Dirk is proving very cooperative and the "Rcpp" package is under a lot 
of changes currently in its new Rcpp namespace, while keeping the 
current interface.

Our main class is Rcpp::RObject that wraps any SEXP into a C++ object 
that basically R_PreserveObject when it is created, and R_ReleaseObject 
when the object is destroyed.

deriving from "RObject", we have "Environment" to deal specifically with 
environments (ENVSXP) , "Symbol" to deal with symbols (SYMSXP), 
"Language" for calls (LANGSXP) and the template XPTr for external 
pointers. The rest (vectors, functions, ...) will follow.

I'd suggest using the Rcpp mailing list for a follow up. 
https://lists.r-forge.r-project.org/cgi-bin/mailman/listinfo/rcpp-devel

> -Whit
>
>
> On Sat, Jan 2, 2010 at 12:24 PM, Romain Francois
> <romain.francois at dbmail.com>  wrote:
>> On 01/02/2010 06:01 PM, Simon Urbanek wrote:
>>>
>>>
>>> On Jan 2, 2010, at 5:07 AM, Romain Francois wrote:
>>>
>>>> Hello,
>>>>
>>>> We are currently making lots of changes to Rcpp (see the open Rcpp
>>>> mailing list if interested [1] in the details).
>>>>
>>>> We are now using [2] R_PreserveObject and R_ReleaseObject to manage
>>>> garbage collection instead of the PROTECT/UNPROTECT dance. This seems to
>>>> work well, but I was wondering if there was documentation about it.
>>>>
>>>
>>> I don't think so - the only documentation is the comment in the source.
>>
>>
>> Fair enough. FWIW, some mention of it in the R-ints or R-exts could be
>> valuable.
>>
>>
>>>> In particular, if we preserve the same SEXP twice (or more), should we
>>>> implement some sort of reference counting ?
>>>>
>>>
>>> Preserve/Release are for managing objects that are supposed to survive
>>> past the call and are not tied to any other R object. PROTECT/UNPROTECT are
>>> for temporary preservation within a call.
>>>
>>> Although you're right that Preserve/Release is effectively implemented as
>>> a stack at the moment it is not stated explicitly anywhere (this goes all
>>> the way back to R 0.64 so chances are that only Ross can comment..).
>>> However, for practical purposes it would be potentially dangerous to have it
>>> work like a flag because you can simply never know whether the same object
>>> was not already registered by some other code.
>>>
>>>
>>>> Reading the source (below, from memory.c) I think not, but some
>>>> confirmation would help.
>>>>
>>>> void R_PreserveObject(SEXP object)
>>>> {
>>>>     R_PreciousList = CONS(object, R_PreciousList);
>>>> }
>>>>
>>>> static SEXP RecursiveRelease(SEXP object, SEXP list)
>>>> {
>>>>     if (!isNull(list)) {
>>>>         if (object == CAR(list))
>>>>             return CDR(list);
>>>>         else
>>>>             CDR(list) = RecursiveRelease(object, CDR(list));
>>>>     }
>>>>     return list;
>>>> }
>>>>
>>>> void R_ReleaseObject(SEXP object)
>>>> {
>>>>     R_PreciousList =  RecursiveRelease(object, R_PreciousList);
>>>> }
>>>>
>>>>
>>>> I'd also be interested if there is some ideas on the relative efficiency
>>>> of the preserve/release mechanism compared to PROTECT/UNPROTECT.
>>>>
>>>
>>> PROTECT/UNPROTECT is more efficient because all it does is a pointer
>>> assignment -- Preserve has to allocate new node and fill it with all parts.
>>> On release the extra node is still floating in the GC pool etc.
>>>
>>> Normally there is not really a question of choice - within a call you want
>>> to use PROTET/UNPROTECT and for anything else you simply cannot use it so
>>> you have to use Preserve/Release. As a side note Preserve/Release is merely
>>> a convenience call, it is often more efficient to simply assign the object
>>> to another object you have control of (which is all Preserve really does).
>>>
>>> Cheers,
>>> Simon
>>
>> Thanks for this advice. This will make it easier to do the bookkeeping of
>> how many objects we preserve, etc ...
>>
>> Romain

-- 
Romain Francois
Professional R Enthusiast
+33(0) 6 28 91 30 30
http://romainfrancois.blog.free.fr
|- http://tr.im/IW9B : C++ exceptions at the R level
|- http://tr.im/IlMh : CPP package: exposing C++ objects
`- http://tr.im/HlX9 : new package : bibtex


From armstrong.whit at gmail.com  Sat Jan  2 22:53:27 2010
From: armstrong.whit at gmail.com (Whit Armstrong)
Date: Sat, 2 Jan 2010 16:53:27 -0500
Subject: [Rd] R_PreserveObject,
	R_ReleaseObject : reference counting 	needed ?
In-Reply-To: <4B3FBDF2.8050402@dbmail.com>
References: <4B3F1AC7.4050208@dbmail.com>
	<A37E5DDA-CE93-4A32-9724-542EBB602AFC@r-project.org>
	<4B3F8157.3020903@dbmail.com>
	<8ec76081001021326w36270540xdd74e83c1f9ebc94@mail.gmail.com>
	<4B3FBDF2.8050402@dbmail.com>
Message-ID: <8ec76081001021353g19ad25bbhf978d042ca3c5ed6@mail.gmail.com>

Romain,

> that's not what I said. It just felt not as easy to use as just grab a SEXP
> and say R_PreserveObject( x ) and then later R_ReleaseObject.

Didn't mean to suggest that you said that.  I was asking the list
whether it's discouraged.

Will follow up on the Rcpp list.

-Whit


From jel+r at cs.uni-magdeburg.de  Sat Jan  2 23:10:49 2010
From: jel+r at cs.uni-magdeburg.de (Jens Elkner)
Date: Sat, 2 Jan 2010 23:10:49 +0100
Subject: [Rd] readCitationFile encoding
In-Reply-To: <7C0CA516-F119-4A79-99F3-EE7CEB7E8E3F@r-project.org>
References: <20091231063312.GA991@trex.cs.uni-magdeburg.de>
	<alpine.LFD.2.00.0912310755040.20941@gannet.stats.ox.ac.uk>
	<20091231150516.GA1305@trex.cs.uni-magdeburg.de>
	<7C0CA516-F119-4A79-99F3-EE7CEB7E8E3F@r-project.org>
Message-ID: <20100102221049.GA2330@trex.cs.uni-magdeburg.de>

On Thu, Dec 31, 2009 at 02:50:00PM -0500, Simon Urbanek wrote:
> 
> On Dec 31, 2009, at 10:05 AM, Jens Elkner wrote:
> 
> > OT: Wondering, what does "recommended portable encoding names" in this
> > context mean (e.g. AFAIK 'latin1' is not a standardized name ...).
> 
> It is in R -- since no standard name for that encoding exists in general R maps "latin1" to whatever the OS expects this to be -- see ?Encoding.
  
Ahh - ok. So since our staff, student, guests are using all kind of OS
(i.e. win, solaris, linux, macosx) it is better to recommend
ISO8859-15/UTF-8 instead of latin*, understood.
  
> > Ahh - good hint - help("check") wasn't really fruitful. However,
> > 
> > elkner.idev2 build/R-2.10.1/bin > ./check --help
> > Can't locate File/Copy/Recursive.pm in @INC (@INC contains: ...
> > 
> > So still need to do a little bit tweaking ...
> > 
> 
> .. rather reading the docs ;).

Hmm - think I already skimmed a lot of the onine docs. But at least wrt.
check everything is for my taste quite shallow ... ;-(

> It's R CMD check --help (since we're on R-devel knowledge of basics is assumed).

Well - it doesn't tell the details as well...

BTW: the bad infinite recursion fails for 2.10.1 2009-12-14 patched (but
not in the unpatched version):

running code in 'ok-errors.R' ...*** Error code 1
The following command caused the error:
LANGUAGE=en LC_ALL=C SRCDIR=. R_DEFAULT_PACKAGES= ../bin/R --vanilla < ok-errors.R > ok-errors.Rout 2>&1 || (mv ok-errors.Rout ok-errors.Rout.fail && exit 1)
make: Fatal error: Command failed for target `ok-errors.Rout'
Current working directory /export/scratch/elkner/build/R-2.10.1/tests
*** Error code 1

Without optimization
--------------------
> ## bad infinite recursion / on.exit / ... interactions
> bar <- function() 1+1
> foo <- function() { on.exit(bar()); foo() }
> foo() # now simple "infinite recursion"
Error: C stack usage is too close to the limit
Error: C stack usage is too close to the limit
Error: C stack usage is too close to the limit
Error: C stack usage is too close to the limit
Error: C stack usage is too close to the limit
Error: C stack usage is too close to the limit
Error: C stack usage is too close to the limit
Error: C stack usage is too close to the limit
Error: C stack usage is too close to the limit
Error: C stack usage is too close to the limit
Error: C stack usage is too close to the limit
Error: C stack usage is too close to the limit
Error: C stack usage is too close to the limit
Error: C stack usage is too close to the limit
Error: C stack usage is too close to the limit
Error: C stack usage is too close to the limit
Error: C stack usage is too close to the limit
Error: C stack usage is too close to the limit
Error: C stack usage is too close to the limit
Error: C stack usage is too close to the limit
Error: C stack usage is too close to the limit
Error: C stack usage is too close to the limit
Error: C stack usage is too close to the limit
Error: C stack usage is too close to the limit
Error: segfault from C stack overflow
Execution halted

With optimization (-xO5 -xautopar)
----------------------------------
> ## bad infinite recursion / on.exit / ... interactions
> bar <- function() 1+1
> foo <- function() { on.exit(bar()); foo() }
> foo() # now simple "infinite recursion"

 *** caught segfault ***
address fffffd7fff3fff90, cause 'memory not mapped'

Traceback:
 1: foo()
...
2489: foo()
aborting ...

With optimization (-xO5 -xautopar) but unpatched 2.10.1
-------------------------------------------------------
> ## bad infinite recursion / on.exit / ... interactions
> bar <- function() 1+1
> foo <- function() { on.exit(bar()); foo() }
> foo() # now simple "infinite recursion"
Error: evaluation nested too deeply: infinite recursion / options(expressions=)?
>

Regards,
jel.
-- 
Otto-von-Guericke University     http://www.cs.uni-magdeburg.de/
Department of Computer Science   Geb. 29 R 027, Universitaetsplatz 2
39106 Magdeburg, Germany         Tel: +49 391 67 12768


From murdoch at stats.uwo.ca  Sat Jan  2 23:12:16 2010
From: murdoch at stats.uwo.ca (Duncan Murdoch)
Date: Sat, 02 Jan 2010 17:12:16 -0500
Subject: [Rd] R-devel Digest, Vol 83, Issue 2
In-Reply-To: <4B3FA9BB.90302@gmail.com>
References: <mailman.11.1262430004.8711.r-devel@r-project.org>
	<4B3F7625.1080806@gmail.com> <4B3F7ACD.2050106@stats.uwo.ca>
	<4B3F7F8D.8060701@gmail.com>
	<B38057DF-8452-41FC-9D46-B67FBD58E01C@r-project.org>
	<4B3FA43B.1070707@stats.uwo.ca> <4B3FA9BB.90302@gmail.com>
Message-ID: <4B3FC4C0.6060604@stats.uwo.ca>

On 02/01/2010 3:16 PM, Laurent Gautier wrote:
> On 1/2/10 8:53 PM, Duncan Murdoch wrote:
>> Simon Urbanek wrote:
>>> On Jan 2, 2010, at 12:17 PM, Laurent Gautier wrote:
>>>
>>>> On 1/2/10 5:56 PM, Duncan Murdoch wrote:
>>>>> On 02/01/2010 11:36 AM, Laurent Gautier wrote:
>>>>>> [Disclaimer: what is below reflects my understanding from reading the
>>>>>> R source, others will correct where deemed necessary]
>>>>>>
>>>>>> On 1/2/10 12:00 PM, r-devel-request at r-project.org wrote:
>>>> (...)
>>>>
>>>>>>> I'd also be interested if there is some ideas on the relative
>>>>>>> efficiency
>>>>>>> of the preserve/release mechanism compared to PROTECT/UNPROTECT.
>>>>>> PROTECT/UNPROTECT is trading granularity for speed. It is a stack with
>>>>>> only tow operations possible:
>>>>>> - push 1 object into the stack
>>>>>> - pull (unprotect) N last objects from the stack
>>>>> UNPROTECT_PTR is also possible, which does a linear search through the
>>>>> stack and unprotects something possibly deep within it. There is also
>>>>> REPROTECT which allows you to replace an entry within the stack.
>>>>>
>>>>> I would guess that UNPROTECT_PTR is more efficient than
>>>>> RecursiveRelease
>>>>> because it doesn't use so much stack space when it needs to go deep
>>>>> into
>>>>> the stack to release, but it is possible the compiler recognizes the
>>>>> tail recursion and RecursiveRelease is implemented efficiently. In that
>>>>> case it could be more efficient than UNPROTECT_PTR, which has to move
>>>>> all the other entries down to fill the newly vacated space. Really the
>>>>> only reliable way to answer efficiency questions like this is to try
>>>>> both ways and see which works better in your application.
>>>> Thanks. I did not know about UNPROTECT_PTR.
>>>> I had concerns over the stack usage, but so far it did not prove too
>>>> much of a problem. Still, why isn't the tail recursion explicitly
>>>> made an iteration then ? This would take the "may be the compiler
>>>> figures it out, may be not" variable out of the equation.
>>>>
>>> Careful - the protection stack (bookkeeping by R) has nothing to do
>>> with the C function call stack hence it has nothing to do with the
>>> compiler. The protection stack is global so usually you don't run out
>>> of it unless something goes horribly wrong (=infinite loop).
>> I think Laurent was referring to RecursiveRelease, which could use a lot
>> of C stack if you choose to release something that is deep in the list,
>> since it checks the head, and if that doesn't match, calls itself again
>> on the rest of the list. (I checked, and at least one version of gcc
>> doesn't recognize the tail recursion: it really does generate a
>> recursive call.)
>>
>> Laurent asked why it isn't optimized to avoid the recursion: I think the
>> answer is simply because it is so rarely used that nobody has bothered.
> 
> Yes, I was referring to RecursiveRelease. Sorry if this was not clear.
> 
> What are the chances for a patch to be accepted ? At first sight(*), 
> making that tail recursion an iterative function is not a major 
> undertaking, and reviewing the patch be fairly straightforward... but I 
> can always use that time otherwise if the answer to the question is "nil".

I don't think I would want to review such a patch (I don't know the 
memory manager well, I don't know that there is really a case where it 
matters enough to be worth doing), so I'd say if you don't get a message 
from a core member volunteering to do so, you should assume it won't be 
accepted.  But that doesn't mean you shouldn't write the code for your 
own internal use and edification, and if you can put together a demo 
that shows it really makes a big difference in a realistic situation, 
you might get a different response.

Duncan Murdoch

> 
> 
> L.
> 
> 
> 
>> Duncan Murdoch
>>>>> Another possibility is to maintain your own list or environment of
>>>>> objects, and just protect/preserve the list as a whole.
>>>> Interesting idea, this would let one perform his/her own bookkeeping
>>>> on the list/environment. How is R garbage collection checking
>>>> contained objects ? (I am thinking performances here, and may be
>>>> cyclic references).
>>>>
>>> You don't really want to care because the GC is global for all objects
>>> (and cycles are supported by the GC in R) - so whether you keep it
>>> yourself or Preserve/Release is practically irrelevant (the protection
>>> stack is handled separately).
>>>
>>> As for keeping your own list -- if you really care about performance
>>> that much (to be honest in vast majority of cases it doesn't matter)
>>> you have to be careful how you implement it. Technically the fastest
>>> way is preallocated generic vector but it really depends on how you
>>> deal with the access so you can easily perform worse than
>>> Preserve/Release if you're not careful.
>>>
>>> As a side note - the best way (IMHO) to deal with all those issues is
>>> to use external pointers because a) you get very efficient C
>>> finalizers b) you can directly (and very efficiently) tie lifespan of
>>> other objects to the same SEXP and c) as guardians they can nicely
>>> track other objects that hold them.
>>>
>>> Cheers,
>>> Simon
>>>
>>>
>>>
>>>> L.
>>>>
>>>>
>>>>> Duncan Murdoch
>>>>>
>>>>>> HTH,
>>>>>>
>>>>>>
>>>>>> L.
>>>>>>
>>>>>>
>>>>>>
>>>>>>
>>>>>>> Thanks,
>>>>>>>
>>>>>>> Romain
>>>>>>>
>>>>>>> [1]http://lists.r-forge.r-project.org/pipermail/rcpp-devel/
>>>>>>> [2]
>>>>>>> http://r-forge.r-project.org/plugins/scmsvn/viewcvs.php/pkg/src/RObject.cpp?rev=255&root=rcpp&view=markup
>>>>>>>
>>>>>>>
>>>>>>>
>>>>>>> -- Romain Francois Professional R Enthusiast +33(0) 6 28 91 30 30
>>>>>>> http://romainfrancois.blog.free.fr |- http://tr.im/IW9B : C++
>>>>>>> exceptions
>>>>>>> at the R level |- http://tr.im/IlMh : CPP package: exposing C++
>>>>>>> objects
>>>>>>> `- http://tr.im/HlX9 : new package : bibtex
>>>>>> ______________________________________________
>>>>>> R-devel at r-project.org mailing list
>>>>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>>> ______________________________________________
>>>> R-devel at r-project.org mailing list
>>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>>>
>>>>


From romain.francois at dbmail.com  Sat Jan  2 23:41:36 2010
From: romain.francois at dbmail.com (Romain Francois)
Date: Sat, 02 Jan 2010 23:41:36 +0100
Subject: [Rd] R-devel Digest, Vol 83, Issue 2
In-Reply-To: <4B3FC4C0.6060604@stats.uwo.ca>
References: <mailman.11.1262430004.8711.r-devel@r-project.org>	<4B3F7625.1080806@gmail.com>
	<4B3F7ACD.2050106@stats.uwo.ca>	<4B3F7F8D.8060701@gmail.com>	<B38057DF-8452-41FC-9D46-B67FBD58E01C@r-project.org>	<4B3FA43B.1070707@stats.uwo.ca>
	<4B3FA9BB.90302@gmail.com> <4B3FC4C0.6060604@stats.uwo.ca>
Message-ID: <4B3FCBA0.40908@dbmail.com>

On 01/02/2010 11:12 PM, Duncan Murdoch wrote:
>
> On 02/01/2010 3:16 PM, Laurent Gautier wrote:
>> On 1/2/10 8:53 PM, Duncan Murdoch wrote:
>>> Simon Urbanek wrote:
>>>> On Jan 2, 2010, at 12:17 PM, Laurent Gautier wrote:
>>>>
>>>>> On 1/2/10 5:56 PM, Duncan Murdoch wrote:
>>>>>> On 02/01/2010 11:36 AM, Laurent Gautier wrote:
>>>>>>> [Disclaimer: what is below reflects my understanding from reading
>>>>>>> the
>>>>>>> R source, others will correct where deemed necessary]
>>>>>>>
>>>>>>> On 1/2/10 12:00 PM, r-devel-request at r-project.org wrote:
>>>>> (...)
>>>>>
>>>>>>>> I'd also be interested if there is some ideas on the relative
>>>>>>>> efficiency
>>>>>>>> of the preserve/release mechanism compared to PROTECT/UNPROTECT.
>>>>>>> PROTECT/UNPROTECT is trading granularity for speed. It is a stack
>>>>>>> with
>>>>>>> only tow operations possible:
>>>>>>> - push 1 object into the stack
>>>>>>> - pull (unprotect) N last objects from the stack
>>>>>> UNPROTECT_PTR is also possible, which does a linear search through
>>>>>> the
>>>>>> stack and unprotects something possibly deep within it. There is also
>>>>>> REPROTECT which allows you to replace an entry within the stack.
>>>>>>
>>>>>> I would guess that UNPROTECT_PTR is more efficient than
>>>>>> RecursiveRelease
>>>>>> because it doesn't use so much stack space when it needs to go deep
>>>>>> into
>>>>>> the stack to release, but it is possible the compiler recognizes the
>>>>>> tail recursion and RecursiveRelease is implemented efficiently. In
>>>>>> that
>>>>>> case it could be more efficient than UNPROTECT_PTR, which has to move
>>>>>> all the other entries down to fill the newly vacated space. Really
>>>>>> the
>>>>>> only reliable way to answer efficiency questions like this is to try
>>>>>> both ways and see which works better in your application.
>>>>> Thanks. I did not know about UNPROTECT_PTR.
>>>>> I had concerns over the stack usage, but so far it did not prove too
>>>>> much of a problem. Still, why isn't the tail recursion explicitly
>>>>> made an iteration then ? This would take the "may be the compiler
>>>>> figures it out, may be not" variable out of the equation.
>>>>>
>>>> Careful - the protection stack (bookkeeping by R) has nothing to do
>>>> with the C function call stack hence it has nothing to do with the
>>>> compiler. The protection stack is global so usually you don't run out
>>>> of it unless something goes horribly wrong (=infinite loop).
>>> I think Laurent was referring to RecursiveRelease, which could use a lot
>>> of C stack if you choose to release something that is deep in the list,
>>> since it checks the head, and if that doesn't match, calls itself again
>>> on the rest of the list. (I checked, and at least one version of gcc
>>> doesn't recognize the tail recursion: it really does generate a
>>> recursive call.)
>>>
>>> Laurent asked why it isn't optimized to avoid the recursion: I think the
>>> answer is simply because it is so rarely used that nobody has bothered.
>>
>> Yes, I was referring to RecursiveRelease. Sorry if this was not clear.
>>
>> What are the chances for a patch to be accepted ? At first sight(*),
>> making that tail recursion an iterative function is not a major
>> undertaking, and reviewing the patch be fairly straightforward... but
>> I can always use that time otherwise if the answer to the question is
>> "nil".
>
> I don't think I would want to review such a patch (I don't know the
> memory manager well, I don't know that there is really a case where it
> matters enough to be worth doing), so I'd say if you don't get a message
> from a core member volunteering to do so, you should assume it won't be
> accepted. But that doesn't mean you shouldn't write the code for your
> own internal use and edification, and if you can put together a demo
> that shows it really makes a big difference in a realistic situation,
> you might get a different response.
>
> Duncan Murdoch

 From what I understand, this has little to do with the memory manager, 
and resumes to the simple problem "how to remove an object from a list".

Something like this, using the amazing inline and inspect packages:

require( inline )
require( inspect )

remover <- cfunction(signature( list = "language", object = 
"environment" ), '
	if( !isNull( list ) ){
		SEXP x = list ;
		SEXP y ;
		while( CAR(x) != object && CADR(x) != R_NilValue ){
			y = x ;
			x = CDR(x) ;
		}
		if( CAR(x) == object ) SETCDR(y, CDR(x) ) ;
	}
	return list ;
', Rcpp=FALSE, verbose=FALSE )

e <- new.env()
call <- call( "foo", e, e, 1:10, 3 )
call
# inspect( call )
result <- remover( call ,e )
result
# inspect( result )

gives this :

foo(10, <environment>, 0, <environment>, 1) 

@0x9f4e0d0 06 LANGSXP [NAM(2)] 

   @0x9f4e204 01 SYMSXP [] "foo" 

   @0xa907b78 14 REALSXP [NAM(2)] (len=1, tl=1763713056) 

   @0x9f4d564 04 ENVSXP [NAM(1)] 

   FRAME: 

     @0x9e94a10 00 NILSXP [MARK,NAM(2)] 

   ENCLOS:
     @0x9eb7b4c 04 ENVSXP [MARK,NAM(2),GP(0x8000)]
   HASHTAB:
     @0x9e94a10 00 NILSXP [MARK,NAM(2)]
   @0xa907b58 14 REALSXP [NAM(2)] (len=1, tl=1936941344)
   @0x9f4d564 04 ENVSXP [NAM(1)]
   FRAME:
     @0x9e94a10 00 NILSXP [MARK,NAM(2)]
   ENCLOS:
     @0x9eb7b4c 04 ENVSXP [MARK,NAM(2),GP(0x8000)]
   HASHTAB:
     @0x9e94a10 00 NILSXP [MARK,NAM(2)]
   @0xa907b38 14 REALSXP [NAM(2)] (len=1, tl=543908709)
NULL
==================
foo(10, 0, <environment>, 1)
@0x9f4e0d0 06 LANGSXP [NAM(2)]
   @0x9f4e204 01 SYMSXP [] "foo"
   @0xa907b78 14 REALSXP [NAM(2)] (len=1, tl=1763713056)
   @0xa907b58 14 REALSXP [NAM(2)] (len=1, tl=1936941344)
   @0x9f4d564 04 ENVSXP [NAM(2)]
   FRAME:
     @0x9e94a10 00 NILSXP [MARK,NAM(2)]
   ENCLOS:
     @0x9eb7b4c 04 ENVSXP [MARK,NAM(2),GP(0x8000)]
   HASHTAB:
     @0x9e94a10 00 NILSXP [MARK,NAM(2)]
   @0xa907b38 14 REALSXP [NAM(2)] (len=1, tl=543908709)
NULL



so it boils down to this as a replacement to RecursiveRelease :

/**
  * Removes the first instance of object with the list
  */
static SEXP RemoveFromList( SEXP object, SEXP list){
	if( !isNull( list ) ){
		SEXP x = list ;
		SEXP y ;
		while( CAR(x) != object && CADR(x) != R_NilValue ){
			y = x ;
			x = CDR(x) ;
		}
		if( CAR(x) == object ) SETCDR(y, CDR(x) ) ;
	}
	return list ;
}


Romain


-- 
Romain Francois
Professional R Enthusiast
+33(0) 6 28 91 30 30
http://romainfrancois.blog.free.fr
|- http://tr.im/IW9B : C++ exceptions at the R level
|- http://tr.im/IlMh : CPP package: exposing C++ objects
`- http://tr.im/HlX9 : new package : bibtex


From romain.francois at dbmail.com  Sun Jan  3 00:14:17 2010
From: romain.francois at dbmail.com (Romain Francois)
Date: Sun, 03 Jan 2010 00:14:17 +0100
Subject: [Rd] R-devel Digest, Vol 83, Issue 2
In-Reply-To: <4B3FCBA0.40908@dbmail.com>
References: <mailman.11.1262430004.8711.r-devel@r-project.org>	<4B3F7625.1080806@gmail.com>	<4B3F7ACD.2050106@stats.uwo.ca>	<4B3F7F8D.8060701@gmail.com>	<B38057DF-8452-41FC-9D46-B67FBD58E01C@r-project.org>	<4B3FA43B.1070707@stats.uwo.ca>	<4B3FA9BB.90302@gmail.com>
	<4B3FC4C0.6060604@stats.uwo.ca> <4B3FCBA0.40908@dbmail.com>
Message-ID: <4B3FD349.1070307@dbmail.com>

On 01/02/2010 11:41 PM, Romain Francois wrote:
>
> On 01/02/2010 11:12 PM, Duncan Murdoch wrote:
>>
>> On 02/01/2010 3:16 PM, Laurent Gautier wrote:
>>> On 1/2/10 8:53 PM, Duncan Murdoch wrote:
>>>> Simon Urbanek wrote:
>>>>> On Jan 2, 2010, at 12:17 PM, Laurent Gautier wrote:
>>>>>
>>>>>> On 1/2/10 5:56 PM, Duncan Murdoch wrote:
>>>>>>> On 02/01/2010 11:36 AM, Laurent Gautier wrote:
>>>>>>>> [Disclaimer: what is below reflects my understanding from reading
>>>>>>>> the
>>>>>>>> R source, others will correct where deemed necessary]
>>>>>>>>
>>>>>>>> On 1/2/10 12:00 PM, r-devel-request at r-project.org wrote:
>>>>>> (...)
>>>>>>
>>>>>>>>> I'd also be interested if there is some ideas on the relative
>>>>>>>>> efficiency
>>>>>>>>> of the preserve/release mechanism compared to PROTECT/UNPROTECT.
>>>>>>>> PROTECT/UNPROTECT is trading granularity for speed. It is a stack
>>>>>>>> with
>>>>>>>> only tow operations possible:
>>>>>>>> - push 1 object into the stack
>>>>>>>> - pull (unprotect) N last objects from the stack
>>>>>>> UNPROTECT_PTR is also possible, which does a linear search through
>>>>>>> the
>>>>>>> stack and unprotects something possibly deep within it. There is
>>>>>>> also
>>>>>>> REPROTECT which allows you to replace an entry within the stack.
>>>>>>>
>>>>>>> I would guess that UNPROTECT_PTR is more efficient than
>>>>>>> RecursiveRelease
>>>>>>> because it doesn't use so much stack space when it needs to go deep
>>>>>>> into
>>>>>>> the stack to release, but it is possible the compiler recognizes the
>>>>>>> tail recursion and RecursiveRelease is implemented efficiently. In
>>>>>>> that
>>>>>>> case it could be more efficient than UNPROTECT_PTR, which has to
>>>>>>> move
>>>>>>> all the other entries down to fill the newly vacated space. Really
>>>>>>> the
>>>>>>> only reliable way to answer efficiency questions like this is to try
>>>>>>> both ways and see which works better in your application.
>>>>>> Thanks. I did not know about UNPROTECT_PTR.
>>>>>> I had concerns over the stack usage, but so far it did not prove too
>>>>>> much of a problem. Still, why isn't the tail recursion explicitly
>>>>>> made an iteration then ? This would take the "may be the compiler
>>>>>> figures it out, may be not" variable out of the equation.
>>>>>>
>>>>> Careful - the protection stack (bookkeeping by R) has nothing to do
>>>>> with the C function call stack hence it has nothing to do with the
>>>>> compiler. The protection stack is global so usually you don't run out
>>>>> of it unless something goes horribly wrong (=infinite loop).
>>>> I think Laurent was referring to RecursiveRelease, which could use a
>>>> lot
>>>> of C stack if you choose to release something that is deep in the list,
>>>> since it checks the head, and if that doesn't match, calls itself again
>>>> on the rest of the list. (I checked, and at least one version of gcc
>>>> doesn't recognize the tail recursion: it really does generate a
>>>> recursive call.)
>>>>
>>>> Laurent asked why it isn't optimized to avoid the recursion: I think
>>>> the
>>>> answer is simply because it is so rarely used that nobody has bothered.
>>>
>>> Yes, I was referring to RecursiveRelease. Sorry if this was not clear.
>>>
>>> What are the chances for a patch to be accepted ? At first sight(*),
>>> making that tail recursion an iterative function is not a major
>>> undertaking, and reviewing the patch be fairly straightforward... but
>>> I can always use that time otherwise if the answer to the question is
>>> "nil".
>>
>> I don't think I would want to review such a patch (I don't know the
>> memory manager well, I don't know that there is really a case where it
>> matters enough to be worth doing), so I'd say if you don't get a message
>> from a core member volunteering to do so, you should assume it won't be
>> accepted. But that doesn't mean you shouldn't write the code for your
>> own internal use and edification, and if you can put together a demo
>> that shows it really makes a big difference in a realistic situation,
>> you might get a different response.
>>
>> Duncan Murdoch
>
>  From what I understand, this has little to do with the memory manager,
> and resumes to the simple problem "how to remove an object from a list".
>
> Something like this, using the amazing inline and inspect packages:
>
> require( inline )
> require( inspect )
>
> remover <- cfunction(signature( list = "language", object =
> "environment" ), '
> if( !isNull( list ) ){
> SEXP x = list ;
> SEXP y ;
> while( CAR(x) != object && CADR(x) != R_NilValue ){
> y = x ;
> x = CDR(x) ;
> }
> if( CAR(x) == object ) SETCDR(y, CDR(x) ) ;
> }
> return list ;
> ', Rcpp=FALSE, verbose=FALSE )
>
> e <- new.env()
> call <- call( "foo", e, e, 1:10, 3 )
> call
> # inspect( call )
> result <- remover( call ,e )
> result
> # inspect( result )
>
> gives this :
>
> foo(10, <environment>, 0, <environment>, 1)
> @0x9f4e0d0 06 LANGSXP [NAM(2)]
> @0x9f4e204 01 SYMSXP [] "foo"
> @0xa907b78 14 REALSXP [NAM(2)] (len=1, tl=1763713056)
> @0x9f4d564 04 ENVSXP [NAM(1)]
> FRAME:
> @0x9e94a10 00 NILSXP [MARK,NAM(2)]
> ENCLOS:
> @0x9eb7b4c 04 ENVSXP [MARK,NAM(2),GP(0x8000)]
> HASHTAB:
> @0x9e94a10 00 NILSXP [MARK,NAM(2)]
> @0xa907b58 14 REALSXP [NAM(2)] (len=1, tl=1936941344)
> @0x9f4d564 04 ENVSXP [NAM(1)]
> FRAME:
> @0x9e94a10 00 NILSXP [MARK,NAM(2)]
> ENCLOS:
> @0x9eb7b4c 04 ENVSXP [MARK,NAM(2),GP(0x8000)]
> HASHTAB:
> @0x9e94a10 00 NILSXP [MARK,NAM(2)]
> @0xa907b38 14 REALSXP [NAM(2)] (len=1, tl=543908709)
> NULL
> ==================
> foo(10, 0, <environment>, 1)
> @0x9f4e0d0 06 LANGSXP [NAM(2)]
> @0x9f4e204 01 SYMSXP [] "foo"
> @0xa907b78 14 REALSXP [NAM(2)] (len=1, tl=1763713056)
> @0xa907b58 14 REALSXP [NAM(2)] (len=1, tl=1936941344)
> @0x9f4d564 04 ENVSXP [NAM(2)]
> FRAME:
> @0x9e94a10 00 NILSXP [MARK,NAM(2)]
> ENCLOS:
> @0x9eb7b4c 04 ENVSXP [MARK,NAM(2),GP(0x8000)]
> HASHTAB:
> @0x9e94a10 00 NILSXP [MARK,NAM(2)]
> @0xa907b38 14 REALSXP [NAM(2)] (len=1, tl=543908709)
> NULL
>
>
>
> so it boils down to this as a replacement to RecursiveRelease :
>
> /**
> * Removes the first instance of object with the list
> */
> static SEXP RemoveFromList( SEXP object, SEXP list){
> if( !isNull( list ) ){
> SEXP x = list ;
> SEXP y ;
> while( CAR(x) != object && CADR(x) != R_NilValue ){
> y = x ;
> x = CDR(x) ;
> }
> if( CAR(x) == object ) SETCDR(y, CDR(x) ) ;
> }
> return list ;
> }
>
>
> Romain

Going a bit further, attached is an R script that contains c code for 
both methods, generation of some "big" list and calling each method to 
remove the object in the worst case scenario (object to remove is at the 
end of the list) :

[romain at santorini tmp]$ Rscript release.R 10000
gcc -std=gnu99 -I/usr/local/lib/R/include  -I/usr/local/include    -fpic 
  -g -O2 -c release.c -o release.o
gcc -std=gnu99 -shared -L/usr/local/lib -o release.so release.o 
-L/usr/local/lib/R/lib -lR
gcc -std=gnu99 -I/usr/local/lib/R/include  -I/usr/local/include    -fpic 
  -g -O2 -c remove.c -o remove.o
gcc -std=gnu99 -shared -L/usr/local/lib -o remove.so remove.o 
-L/usr/local/lib/R/lib -lR
    user  system elapsed
       0       0       0
    user  system elapsed
   0.000   0.001   0.001

Then it starts to be "noticeable" :

[romain at santorini tmp]$ Rscript release.R 100000
gcc -std=gnu99 -I/usr/local/lib/R/include  -I/usr/local/include    -fpic 
  -g -O2 -c release.c -o release.o
gcc -std=gnu99 -shared -L/usr/local/lib -o release.so release.o 
-L/usr/local/lib/R/lib -lR
gcc -std=gnu99 -I/usr/local/lib/R/include  -I/usr/local/include    -fpic 
  -g -O2 -c remove.c -o remove.o
gcc -std=gnu99 -shared -L/usr/local/lib -o remove.so remove.o 
-L/usr/local/lib/R/lib -lR
    user  system elapsed
   0.001   0.000   0.002
    user  system elapsed
   0.007   0.004   0.013

then :

[romain at santorini tmp]$ Rscript release.R 500000
gcc -std=gnu99 -I/usr/local/lib/R/include  -I/usr/local/include    -fpic 
  -g -O2 -c release.c -o release.o
gcc -std=gnu99 -shared -L/usr/local/lib -o release.so release.o 
-L/usr/local/lib/R/lib -lR
gcc -std=gnu99 -I/usr/local/lib/R/include  -I/usr/local/include    -fpic 
  -g -O2 -c remove.c -o remove.o
gcc -std=gnu99 -shared -L/usr/local/lib -o remove.so remove.o 
-L/usr/local/lib/R/lib -lR
    user  system elapsed
   0.008   0.000   0.008
Error: segfault from C stack overflow
Timing stopped at: 0.006 0.013 0.021
Execution halted

Romain



-- 
Romain Francois
Professional R Enthusiast
+33(0) 6 28 91 30 30
http://romainfrancois.blog.free.fr
|- http://tr.im/IW9B : C++ exceptions at the R level
|- http://tr.im/IlMh : CPP package: exposing C++ objects
`- http://tr.im/HlX9 : new package : bibtex

-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: release.R
URL: <https://stat.ethz.ch/pipermail/r-devel/attachments/20100103/2f8abd90/attachment.pl>

From lgautier at gmail.com  Sun Jan  3 00:35:00 2010
From: lgautier at gmail.com (Laurent Gautier)
Date: Sun, 03 Jan 2010 00:35:00 +0100
Subject: [Rd] R-devel Digest, Vol 83, Issue 2
In-Reply-To: <4B3FCBA0.40908@dbmail.com>
References: <mailman.11.1262430004.8711.r-devel@r-project.org>	<4B3F7625.1080806@gmail.com>
	<4B3F7ACD.2050106@stats.uwo.ca>	<4B3F7F8D.8060701@gmail.com>	<B38057DF-8452-41FC-9D46-B67FBD58E01C@r-project.org>	<4B3FA43B.1070707@stats.uwo.ca>
	<4B3FA9BB.90302@gmail.com> <4B3FC4C0.6060604@stats.uwo.ca>
	<4B3FCBA0.40908@dbmail.com>
Message-ID: <4B3FD824.9060604@gmail.com>

On 1/2/10 11:41 PM, Romain Francois wrote:
> On 01/02/2010 11:12 PM, Duncan Murdoch wrote:
>>
>> On 02/01/2010 3:16 PM, Laurent Gautier wrote:
>>> On 1/2/10 8:53 PM, Duncan Murdoch wrote:
>>>> Simon Urbanek wrote:
>>>>> On Jan 2, 2010, at 12:17 PM, Laurent Gautier wrote:
>>>>>
>>>>>> On 1/2/10 5:56 PM, Duncan Murdoch wrote:
>>>>>>> On 02/01/2010 11:36 AM, Laurent Gautier wrote:
>>>>>>>> [Disclaimer: what is below reflects my understanding from reading
>>>>>>>> the
>>>>>>>> R source, others will correct where deemed necessary]
>>>>>>>>
>>>>>>>> On 1/2/10 12:00 PM, r-devel-request at r-project.org wrote:
>>>>>> (...)
(...)
>>
>> I don't think I would want to review such a patch (I don't know the
>> memory manager well, I don't know that there is really a case where it
>> matters enough to be worth doing), so I'd say if you don't get a message
>> from a core member volunteering to do so, you should assume it won't be
>> accepted. But that doesn't mean you shouldn't write the code for your
>> own internal use and edification, and if you can put together a demo
>> that shows it really makes a big difference in a realistic situation,
>> you might get a different response.
>>
>> Duncan Murdoch
>
>  From what I understand, this has little to do with the memory manager,
> and resumes to the simple problem "how to remove an object from a list".

I would generalize even further, up to: "how to make a tail recursion 
into an interation" (and that often boils down to writing a for loop - 
little edification to get from it, I suppose... one probably wants to 
write it to see it included).

I see below that you are living up to the enthusiasm claimed, and had a 
shot at it (and even did benchmark to demonstrate the expected benefit - 
impressive).

Let's see what happens with it...


L.

> Something like this, using the amazing inline and inspect packages:
>
> require( inline )
> require( inspect )
>
> remover <- cfunction(signature( list = "language", object =
> "environment" ), '
> if( !isNull( list ) ){
> SEXP x = list ;
> SEXP y ;
> while( CAR(x) != object && CADR(x) != R_NilValue ){
> y = x ;
> x = CDR(x) ;
> }
> if( CAR(x) == object ) SETCDR(y, CDR(x) ) ;
> }
> return list ;
> ', Rcpp=FALSE, verbose=FALSE )
>
> e <- new.env()
> call <- call( "foo", e, e, 1:10, 3 )
> call
> # inspect( call )
> result <- remover( call ,e )
> result
> # inspect( result )
>
> gives this :
>
> foo(10, <environment>, 0, <environment>, 1)
> @0x9f4e0d0 06 LANGSXP [NAM(2)]
> @0x9f4e204 01 SYMSXP [] "foo"
> @0xa907b78 14 REALSXP [NAM(2)] (len=1, tl=1763713056)
> @0x9f4d564 04 ENVSXP [NAM(1)]
> FRAME:
> @0x9e94a10 00 NILSXP [MARK,NAM(2)]
> ENCLOS:
> @0x9eb7b4c 04 ENVSXP [MARK,NAM(2),GP(0x8000)]
> HASHTAB:
> @0x9e94a10 00 NILSXP [MARK,NAM(2)]
> @0xa907b58 14 REALSXP [NAM(2)] (len=1, tl=1936941344)
> @0x9f4d564 04 ENVSXP [NAM(1)]
> FRAME:
> @0x9e94a10 00 NILSXP [MARK,NAM(2)]
> ENCLOS:
> @0x9eb7b4c 04 ENVSXP [MARK,NAM(2),GP(0x8000)]
> HASHTAB:
> @0x9e94a10 00 NILSXP [MARK,NAM(2)]
> @0xa907b38 14 REALSXP [NAM(2)] (len=1, tl=543908709)
> NULL
> ==================
> foo(10, 0, <environment>, 1)
> @0x9f4e0d0 06 LANGSXP [NAM(2)]
> @0x9f4e204 01 SYMSXP [] "foo"
> @0xa907b78 14 REALSXP [NAM(2)] (len=1, tl=1763713056)
> @0xa907b58 14 REALSXP [NAM(2)] (len=1, tl=1936941344)
> @0x9f4d564 04 ENVSXP [NAM(2)]
> FRAME:
> @0x9e94a10 00 NILSXP [MARK,NAM(2)]
> ENCLOS:
> @0x9eb7b4c 04 ENVSXP [MARK,NAM(2),GP(0x8000)]
> HASHTAB:
> @0x9e94a10 00 NILSXP [MARK,NAM(2)]
> @0xa907b38 14 REALSXP [NAM(2)] (len=1, tl=543908709)
> NULL
>
>
>
> so it boils down to this as a replacement to RecursiveRelease :
>
> /**
> * Removes the first instance of object with the list
> */
> static SEXP RemoveFromList( SEXP object, SEXP list){
> if( !isNull( list ) ){
> SEXP x = list ;
> SEXP y ;
> while( CAR(x) != object && CADR(x) != R_NilValue ){
> y = x ;
> x = CDR(x) ;
> }
> if( CAR(x) == object ) SETCDR(y, CDR(x) ) ;
> }
> return list ;
> }
>
>
> Romain
>
>


From murdoch at stats.uwo.ca  Sun Jan  3 01:23:19 2010
From: murdoch at stats.uwo.ca (Duncan Murdoch)
Date: Sat, 02 Jan 2010 19:23:19 -0500
Subject: [Rd] R-devel Digest, Vol 83, Issue 2
In-Reply-To: <4B3FD824.9060604@gmail.com>
References: <mailman.11.1262430004.8711.r-devel@r-project.org>	<4B3F7625.1080806@gmail.com>	<4B3F7ACD.2050106@stats.uwo.ca>	<4B3F7F8D.8060701@gmail.com>	<B38057DF-8452-41FC-9D46-B67FBD58E01C@r-project.org>	<4B3FA43B.1070707@stats.uwo.ca>	<4B3FA9BB.90302@gmail.com>
	<4B3FC4C0.6060604@stats.uwo.ca>	<4B3FCBA0.40908@dbmail.com>
	<4B3FD824.9060604@gmail.com>
Message-ID: <4B3FE377.7030907@stats.uwo.ca>

On 02/01/2010 6:35 PM, Laurent Gautier wrote:
> On 1/2/10 11:41 PM, Romain Francois wrote:
>> On 01/02/2010 11:12 PM, Duncan Murdoch wrote:
>>> On 02/01/2010 3:16 PM, Laurent Gautier wrote:
>>>> On 1/2/10 8:53 PM, Duncan Murdoch wrote:
>>>>> Simon Urbanek wrote:
>>>>>> On Jan 2, 2010, at 12:17 PM, Laurent Gautier wrote:
>>>>>>
>>>>>>> On 1/2/10 5:56 PM, Duncan Murdoch wrote:
>>>>>>>> On 02/01/2010 11:36 AM, Laurent Gautier wrote:
>>>>>>>>> [Disclaimer: what is below reflects my understanding from reading
>>>>>>>>> the
>>>>>>>>> R source, others will correct where deemed necessary]
>>>>>>>>>
>>>>>>>>> On 1/2/10 12:00 PM, r-devel-request at r-project.org wrote:
>>>>>>> (...)
> (...)
>>> I don't think I would want to review such a patch (I don't know the
>>> memory manager well, I don't know that there is really a case where it
>>> matters enough to be worth doing), so I'd say if you don't get a message
>>> from a core member volunteering to do so, you should assume it won't be
>>> accepted. But that doesn't mean you shouldn't write the code for your
>>> own internal use and edification, and if you can put together a demo
>>> that shows it really makes a big difference in a realistic situation,
>>> you might get a different response.
>>>
>>> Duncan Murdoch
>>  From what I understand, this has little to do with the memory manager,
>> and resumes to the simple problem "how to remove an object from a list".
> 
> I would generalize even further, up to: "how to make a tail recursion 
> into an interation" (and that often boils down to writing a for loop - 
> little edification to get from it, I suppose... one probably wants to 
> write it to see it included).

Just one followup:  as Luke mentioned, I was wrong, it isn't really a 
tail recursion (which is why gcc didn't optimize it away).

Duncan Murdoch

> 
> I see below that you are living up to the enthusiasm claimed, and had a 
> shot at it (and even did benchmark to demonstrate the expected benefit - 
> impressive).
> 
> Let's see what happens with it...
> 
> 
> L.
> 
>> Something like this, using the amazing inline and inspect packages:
>>
>> require( inline )
>> require( inspect )
>>
>> remover <- cfunction(signature( list = "language", object =
>> "environment" ), '
>> if( !isNull( list ) ){
>> SEXP x = list ;
>> SEXP y ;
>> while( CAR(x) != object && CADR(x) != R_NilValue ){
>> y = x ;
>> x = CDR(x) ;
>> }
>> if( CAR(x) == object ) SETCDR(y, CDR(x) ) ;
>> }
>> return list ;
>> ', Rcpp=FALSE, verbose=FALSE )
>>
>> e <- new.env()
>> call <- call( "foo", e, e, 1:10, 3 )
>> call
>> # inspect( call )
>> result <- remover( call ,e )
>> result
>> # inspect( result )
>>
>> gives this :
>>
>> foo(10, <environment>, 0, <environment>, 1)
>> @0x9f4e0d0 06 LANGSXP [NAM(2)]
>> @0x9f4e204 01 SYMSXP [] "foo"
>> @0xa907b78 14 REALSXP [NAM(2)] (len=1, tl=1763713056)
>> @0x9f4d564 04 ENVSXP [NAM(1)]
>> FRAME:
>> @0x9e94a10 00 NILSXP [MARK,NAM(2)]
>> ENCLOS:
>> @0x9eb7b4c 04 ENVSXP [MARK,NAM(2),GP(0x8000)]
>> HASHTAB:
>> @0x9e94a10 00 NILSXP [MARK,NAM(2)]
>> @0xa907b58 14 REALSXP [NAM(2)] (len=1, tl=1936941344)
>> @0x9f4d564 04 ENVSXP [NAM(1)]
>> FRAME:
>> @0x9e94a10 00 NILSXP [MARK,NAM(2)]
>> ENCLOS:
>> @0x9eb7b4c 04 ENVSXP [MARK,NAM(2),GP(0x8000)]
>> HASHTAB:
>> @0x9e94a10 00 NILSXP [MARK,NAM(2)]
>> @0xa907b38 14 REALSXP [NAM(2)] (len=1, tl=543908709)
>> NULL
>> ==================
>> foo(10, 0, <environment>, 1)
>> @0x9f4e0d0 06 LANGSXP [NAM(2)]
>> @0x9f4e204 01 SYMSXP [] "foo"
>> @0xa907b78 14 REALSXP [NAM(2)] (len=1, tl=1763713056)
>> @0xa907b58 14 REALSXP [NAM(2)] (len=1, tl=1936941344)
>> @0x9f4d564 04 ENVSXP [NAM(2)]
>> FRAME:
>> @0x9e94a10 00 NILSXP [MARK,NAM(2)]
>> ENCLOS:
>> @0x9eb7b4c 04 ENVSXP [MARK,NAM(2),GP(0x8000)]
>> HASHTAB:
>> @0x9e94a10 00 NILSXP [MARK,NAM(2)]
>> @0xa907b38 14 REALSXP [NAM(2)] (len=1, tl=543908709)
>> NULL
>>
>>
>>
>> so it boils down to this as a replacement to RecursiveRelease :
>>
>> /**
>> * Removes the first instance of object with the list
>> */
>> static SEXP RemoveFromList( SEXP object, SEXP list){
>> if( !isNull( list ) ){
>> SEXP x = list ;
>> SEXP y ;
>> while( CAR(x) != object && CADR(x) != R_NilValue ){
>> y = x ;
>> x = CDR(x) ;
>> }
>> if( CAR(x) == object ) SETCDR(y, CDR(x) ) ;
>> }
>> return list ;
>> }
>>
>>
>> Romain
>>
>>
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From simon.urbanek at r-project.org  Sun Jan  3 01:34:52 2010
From: simon.urbanek at r-project.org (Simon Urbanek)
Date: Sat, 2 Jan 2010 19:34:52 -0500
Subject: [Rd] R object protection [Was: R-devel Digest, Vol 83, Issue 2]
In-Reply-To: <4B3FB5CA.9020302@gmail.com>
References: <mailman.11.1262430004.8711.r-devel@r-project.org>
	<4B3F7625.1080806@gmail.com> <4B3F7ACD.2050106@stats.uwo.ca>
	<4B3F7F8D.8060701@gmail.com>
	<B38057DF-8452-41FC-9D46-B67FBD58E01C@r-project.org>
	<4B3FB5CA.9020302@gmail.com>
Message-ID: <DBCA74A6-1BE2-4DDA-836E-27285E127278@r-project.org>

On Jan 2, 2010, at 4:08 PM, Laurent Gautier wrote:

> On 1/2/10 8:28 PM, Simon Urbanek wrote:
>> 
>> On Jan 2, 2010, at 12:17 PM, Laurent Gautier wrote:
>> 
>>> On 1/2/10 5:56 PM, Duncan Murdoch wrote:
>>>> On 02/01/2010 11:36 AM, Laurent Gautier wrote:
>>>>> [Disclaimer: what is below reflects my understanding from
>>>>> reading the R source, others will correct where deemed
>>>>> necessary]
>>>>> 
>>>>> On 1/2/10 12:00 PM, r-devel-request at r-project.org wrote:
>>> 
> (...)
> 
>>>> Another possibility is to maintain your own list or environment
>>>> of objects, and just protect/preserve the list as a whole.
>>> 
>>> Interesting idea, this would let one perform his/her own
>>> bookkeeping on the list/environment. How is R garbage collection
>>> checking contained objects ? (I am thinking performances here, and
>>> may be cyclic references).
>>> 
>> 
>> You don't really want to care because the GC is global for all
>> objects (and cycles are supported by the GC in R) - so whether you
>> keep it yourself or Preserve/Release is practically irrelevant (the
>> protection stack is handled separately).
> 
> I guess that I'll have to know in order to understand that I don't really want to care. ;-)
> The garbage collector must somehow know if an object is available for collection (and will have to check whether an object is PROTECTed or not, or Preserved or not).
> I suppose that upon being called the garbage collector will first look into the PROTECTed and Preserved objects, mark them as unavailble for collection, then recursively mark objects contained in them.
> 

The GC marks recursively from all known roots of which Preserved list is one of many and all elements of the protection stack are treated as such as well (FWIW the Preserved and protected list are in that order the last two). Since this involves (by definition) all live objects it doesn't matter to which other object you assign the node. The only detail is that protection stack does not change the generation (since there is no real node to assign to).


>> As for keeping your own list -- if you really care about performance
>> that much (to be honest in vast majority of cases it doesn't matter)
>> you have to be careful how you implement it. Technically the fastest
>> way is preallocated generic vector but it really depends on how you
>> deal with the access so you can easily perform worse than
>> Preserve/Release if you're not careful.
> 
> Releasing being of linear complexity, having few thousands of Preserved objects not being anticipated as an extraordinary situation, and Preserve/Release cycles being quite frequent, I start minding a bit about the performance. Keeping my own list would let me experiment with various strategies (and eventually offer
> 

Sure - what I meant is that you have to optimize for one thing or the other so you have to be careful what you do.


>> As a side note - the best way (IMHO) to deal with all those issues is
>> to use external pointers because a) you get very efficient C
>> finalizers b) you can directly (and very efficiently) tie lifespan of
>> other objects to the same SEXP and c) as guardians they can nicely
>> track other objects that hold them.
> 
> Thanks. I am not certain to follow everything. Are you suggesting that rather than Preserve-ing/Release-ing a list/environment that would act as a guardian for several objects, one should use an external pointer (to an arbitrary C pointer) ? In that case, how does one indicate that an external pointer acts as a container ?
> 
> Or are you suggesting that rather than Preserve-in/Release-ing R objects one should use an external pointer acting as a proxy for a SEXP (argument "prot" in R_MakeExternalPtr(void *p, SEXP tag, SEXP prot) ) ?
> (but in that case the external pointer will itself have to go through Preserve/Release cycles...)
> 

I was guessing that you use this in conjunction with some C++ magic not just plain R objects and thus you have to deal with two life spans. From the other messages I think you are dealing with the simple situation of wrapping an R object as reference in the other system with explicit memory management (i.e. in C++ you have explicit new/delete life cycle) in which case you really don't need anything more than Preserve. It is more interesting when you want to track the life of R objects without imposing the life span - i.e when you want to know when an object in R is collected such that you can delete it from the other system (i.e. you don't explicitly retain it by the reference).

Cheers,
Simon



>>>> 
>>>>> 
>>>>> 
>>>>> HTH,
>>>>> 
>>>>> 
>>>>> L.
>>>>> 
>>>>> 
>>>>> 
>>>>> 
>>>>>> Thanks,
>>>>>> 
>>>>>> Romain
>>>>>> 
>>>>>> [1]http://lists.r-forge.r-project.org/pipermail/rcpp-devel/
>>>>>> [2]
>>>>>> http://r-forge.r-project.org/plugins/scmsvn/viewcvs.php/pkg/src/RObject.cpp?rev=255&root=rcpp&view=markup
>>>>>> 
>>>>>> 
>>>>>> 
>>>>>> 
> -- Romain Francois Professional R Enthusiast +33(0) 6 28 91 30 30
>>>>>> http://romainfrancois.blog.free.fr |- http://tr.im/IW9B : C++
>>>>>> exceptions at the R level |- http://tr.im/IlMh : CPP package:
>>>>>> exposing C++ objects `- http://tr.im/HlX9 : new package :
>>>>>> bibtex
>>>>> 
>>>>> ______________________________________________
>>>>> R-devel at r-project.org mailing list
>>>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>>> 
>>> 
>>> ______________________________________________
>>> R-devel at r-project.org mailing list
>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>> 
>>> 
>> 
> 
> 
> 


From simon.urbanek at r-project.org  Sun Jan  3 01:49:46 2010
From: simon.urbanek at r-project.org (Simon Urbanek)
Date: Sat, 2 Jan 2010 19:49:46 -0500
Subject: [Rd] inspect [Was: R-devel Digest, Vol 83, Issue 2]
In-Reply-To: <4B3FCBA0.40908@dbmail.com>
References: <mailman.11.1262430004.8711.r-devel@r-project.org>	<4B3F7625.1080806@gmail.com>
	<4B3F7ACD.2050106@stats.uwo.ca>	<4B3F7F8D.8060701@gmail.com>	<B38057DF-8452-41FC-9D46-B67FBD58E01C@r-project.org>	<4B3FA43B.1070707@stats.uwo.ca>
	<4B3FA9BB.90302@gmail.com> <4B3FC4C0.6060604@stats.uwo.ca>
	<4B3FCBA0.40908@dbmail.com>
Message-ID: <FC663874-3874-4E49-9D3D-E49BB9073821@r-project.org>


On Jan 2, 2010, at 5:41 PM, Romain Francois wrote:

> On 01/02/2010 11:12 PM, Duncan Murdoch wrote:
>> 
>> On 02/01/2010 3:16 PM, Laurent Gautier wrote:
>>> On 1/2/10 8:53 PM, Duncan Murdoch wrote:
>>>> Simon Urbanek wrote:
>>>>> On Jan 2, 2010, at 12:17 PM, Laurent Gautier wrote:
>>>>> 
>>>>>> On 1/2/10 5:56 PM, Duncan Murdoch wrote:
>>>>>>> On 02/01/2010 11:36 AM, Laurent Gautier wrote:
>>>>>>>> [Disclaimer: what is below reflects my understanding from reading
>>>>>>>> the
>>>>>>>> R source, others will correct where deemed necessary]
>>>>>>>> 
>>>>>>>> On 1/2/10 12:00 PM, r-devel-request at r-project.org wrote:
>>>>>> (...)
>>>>>> 
>>>>>>>>> I'd also be interested if there is some ideas on the relative
>>>>>>>>> efficiency
>>>>>>>>> of the preserve/release mechanism compared to PROTECT/UNPROTECT.
>>>>>>>> PROTECT/UNPROTECT is trading granularity for speed. It is a stack
>>>>>>>> with
>>>>>>>> only tow operations possible:
>>>>>>>> - push 1 object into the stack
>>>>>>>> - pull (unprotect) N last objects from the stack
>>>>>>> UNPROTECT_PTR is also possible, which does a linear search through
>>>>>>> the
>>>>>>> stack and unprotects something possibly deep within it. There is also
>>>>>>> REPROTECT which allows you to replace an entry within the stack.
>>>>>>> 
>>>>>>> I would guess that UNPROTECT_PTR is more efficient than
>>>>>>> RecursiveRelease
>>>>>>> because it doesn't use so much stack space when it needs to go deep
>>>>>>> into
>>>>>>> the stack to release, but it is possible the compiler recognizes the
>>>>>>> tail recursion and RecursiveRelease is implemented efficiently. In
>>>>>>> that
>>>>>>> case it could be more efficient than UNPROTECT_PTR, which has to move
>>>>>>> all the other entries down to fill the newly vacated space. Really
>>>>>>> the
>>>>>>> only reliable way to answer efficiency questions like this is to try
>>>>>>> both ways and see which works better in your application.
>>>>>> Thanks. I did not know about UNPROTECT_PTR.
>>>>>> I had concerns over the stack usage, but so far it did not prove too
>>>>>> much of a problem. Still, why isn't the tail recursion explicitly
>>>>>> made an iteration then ? This would take the "may be the compiler
>>>>>> figures it out, may be not" variable out of the equation.
>>>>>> 
>>>>> Careful - the protection stack (bookkeeping by R) has nothing to do
>>>>> with the C function call stack hence it has nothing to do with the
>>>>> compiler. The protection stack is global so usually you don't run out
>>>>> of it unless something goes horribly wrong (=infinite loop).
>>>> I think Laurent was referring to RecursiveRelease, which could use a lot
>>>> of C stack if you choose to release something that is deep in the list,
>>>> since it checks the head, and if that doesn't match, calls itself again
>>>> on the rest of the list. (I checked, and at least one version of gcc
>>>> doesn't recognize the tail recursion: it really does generate a
>>>> recursive call.)
>>>> 
>>>> Laurent asked why it isn't optimized to avoid the recursion: I think the
>>>> answer is simply because it is so rarely used that nobody has bothered.
>>> 
>>> Yes, I was referring to RecursiveRelease. Sorry if this was not clear.
>>> 
>>> What are the chances for a patch to be accepted ? At first sight(*),
>>> making that tail recursion an iterative function is not a major
>>> undertaking, and reviewing the patch be fairly straightforward... but
>>> I can always use that time otherwise if the answer to the question is
>>> "nil".
>> 
>> I don't think I would want to review such a patch (I don't know the
>> memory manager well, I don't know that there is really a case where it
>> matters enough to be worth doing), so I'd say if you don't get a message
>> from a core member volunteering to do so, you should assume it won't be
>> accepted. But that doesn't mean you shouldn't write the code for your
>> own internal use and edification, and if you can put together a demo
>> that shows it really makes a big difference in a realistic situation,
>> you might get a different response.
>> 
>> Duncan Murdoch
> 
> From what I understand, this has little to do with the memory manager, and resumes to the simple problem "how to remove an object from a list".
> 
> Something like this, using the amazing inline and inspect packages:
> 
> require( inline )
> require( inspect )
> 

FWIW inspect is now part of R itself but as an internal function so you can either use it directly via .Internal or for compatibility
inspect <- function(...) .Internal(inspect(...))
the arguments are (x, max.depth=-1, max.elements=5) [the last one is only supported in R-devel].

Cheers,
Simon


> remover <- cfunction(signature( list = "language", object = "environment" ), '
> 	if( !isNull( list ) ){
> 		SEXP x = list ;
> 		SEXP y ;
> 		while( CAR(x) != object && CADR(x) != R_NilValue ){
> 			y = x ;
> 			x = CDR(x) ;
> 		}
> 		if( CAR(x) == object ) SETCDR(y, CDR(x) ) ;
> 	}
> 	return list ;
> ', Rcpp=FALSE, verbose=FALSE )
> 
> e <- new.env()
> call <- call( "foo", e, e, 1:10, 3 )
> call
> # inspect( call )
> result <- remover( call ,e )
> result
> # inspect( result )
> 
> gives this :
> 
> foo(10, <environment>, 0, <environment>, 1) 
> @0x9f4e0d0 06 LANGSXP [NAM(2)] 
>  @0x9f4e204 01 SYMSXP [] "foo" 
>  @0xa907b78 14 REALSXP [NAM(2)] (len=1, tl=1763713056) 
>  @0x9f4d564 04 ENVSXP [NAM(1)] 
>  FRAME: 
>    @0x9e94a10 00 NILSXP [MARK,NAM(2)] 
>  ENCLOS:
>    @0x9eb7b4c 04 ENVSXP [MARK,NAM(2),GP(0x8000)]
>  HASHTAB:
>    @0x9e94a10 00 NILSXP [MARK,NAM(2)]
>  @0xa907b58 14 REALSXP [NAM(2)] (len=1, tl=1936941344)
>  @0x9f4d564 04 ENVSXP [NAM(1)]
>  FRAME:
>    @0x9e94a10 00 NILSXP [MARK,NAM(2)]
>  ENCLOS:
>    @0x9eb7b4c 04 ENVSXP [MARK,NAM(2),GP(0x8000)]
>  HASHTAB:
>    @0x9e94a10 00 NILSXP [MARK,NAM(2)]
>  @0xa907b38 14 REALSXP [NAM(2)] (len=1, tl=543908709)
> NULL
> ==================
> foo(10, 0, <environment>, 1)
> @0x9f4e0d0 06 LANGSXP [NAM(2)]
>  @0x9f4e204 01 SYMSXP [] "foo"
>  @0xa907b78 14 REALSXP [NAM(2)] (len=1, tl=1763713056)
>  @0xa907b58 14 REALSXP [NAM(2)] (len=1, tl=1936941344)
>  @0x9f4d564 04 ENVSXP [NAM(2)]
>  FRAME:
>    @0x9e94a10 00 NILSXP [MARK,NAM(2)]
>  ENCLOS:
>    @0x9eb7b4c 04 ENVSXP [MARK,NAM(2),GP(0x8000)]
>  HASHTAB:
>    @0x9e94a10 00 NILSXP [MARK,NAM(2)]
>  @0xa907b38 14 REALSXP [NAM(2)] (len=1, tl=543908709)
> NULL
> 
> 
> 
> so it boils down to this as a replacement to RecursiveRelease :
> 
> /**
> * Removes the first instance of object with the list
> */
> static SEXP RemoveFromList( SEXP object, SEXP list){
> 	if( !isNull( list ) ){
> 		SEXP x = list ;
> 		SEXP y ;
> 		while( CAR(x) != object && CADR(x) != R_NilValue ){
> 			y = x ;
> 			x = CDR(x) ;
> 		}
> 		if( CAR(x) == object ) SETCDR(y, CDR(x) ) ;
> 	}
> 	return list ;
> }
> 
> 
> Romain
> 
> 
> -- 
> Romain Francois
> Professional R Enthusiast
> +33(0) 6 28 91 30 30
> http://romainfrancois.blog.free.fr
> |- http://tr.im/IW9B : C++ exceptions at the R level
> |- http://tr.im/IlMh : CPP package: exposing C++ objects
> `- http://tr.im/HlX9 : new package : bibtex
> 
> 
> 
> 


From simon.urbanek at r-project.org  Sun Jan  3 02:04:13 2010
From: simon.urbanek at r-project.org (Simon Urbanek)
Date: Sat, 2 Jan 2010 20:04:13 -0500
Subject: [Rd] iterative list rm [Was: R-devel Digest, Vol 83, Issue 2]
In-Reply-To: <4B3FCBA0.40908@dbmail.com>
References: <mailman.11.1262430004.8711.r-devel@r-project.org>	<4B3F7625.1080806@gmail.com>
	<4B3F7ACD.2050106@stats.uwo.ca>	<4B3F7F8D.8060701@gmail.com>	<B38057DF-8452-41FC-9D46-B67FBD58E01C@r-project.org>	<4B3FA43B.1070707@stats.uwo.ca>
	<4B3FA9BB.90302@gmail.com> <4B3FC4C0.6060604@stats.uwo.ca>
	<4B3FCBA0.40908@dbmail.com>
Message-ID: <A8BE4876-8448-44C1-B0D5-76358AC4BE73@r-project.org>


On Jan 2, 2010, at 5:41 PM, Romain Francois wrote:

> On 01/02/2010 11:12 PM, Duncan Murdoch wrote:
>> 
>> On 02/01/2010 3:16 PM, Laurent Gautier wrote:
>>> On 1/2/10 8:53 PM, Duncan Murdoch wrote:
>>>> Simon Urbanek wrote:
>>>>> On Jan 2, 2010, at 12:17 PM, Laurent Gautier wrote:
>>>>> 
>>>>>> On 1/2/10 5:56 PM, Duncan Murdoch wrote:
>>>>>>> On 02/01/2010 11:36 AM, Laurent Gautier wrote:
>>>>>>>> [Disclaimer: what is below reflects my understanding from reading
>>>>>>>> the
>>>>>>>> R source, others will correct where deemed necessary]
>>>>>>>> 
>>>>>>>> On 1/2/10 12:00 PM, r-devel-request at r-project.org wrote:
>>>>>> (...)
>>>>>> 
>>>>>>>>> I'd also be interested if there is some ideas on the relative
>>>>>>>>> efficiency
>>>>>>>>> of the preserve/release mechanism compared to PROTECT/UNPROTECT.
>>>>>>>> PROTECT/UNPROTECT is trading granularity for speed. It is a stack
>>>>>>>> with
>>>>>>>> only tow operations possible:
>>>>>>>> - push 1 object into the stack
>>>>>>>> - pull (unprotect) N last objects from the stack
>>>>>>> UNPROTECT_PTR is also possible, which does a linear search through
>>>>>>> the
>>>>>>> stack and unprotects something possibly deep within it. There is also
>>>>>>> REPROTECT which allows you to replace an entry within the stack.
>>>>>>> 
>>>>>>> I would guess that UNPROTECT_PTR is more efficient than
>>>>>>> RecursiveRelease
>>>>>>> because it doesn't use so much stack space when it needs to go deep
>>>>>>> into
>>>>>>> the stack to release, but it is possible the compiler recognizes the
>>>>>>> tail recursion and RecursiveRelease is implemented efficiently. In
>>>>>>> that
>>>>>>> case it could be more efficient than UNPROTECT_PTR, which has to move
>>>>>>> all the other entries down to fill the newly vacated space. Really
>>>>>>> the
>>>>>>> only reliable way to answer efficiency questions like this is to try
>>>>>>> both ways and see which works better in your application.
>>>>>> Thanks. I did not know about UNPROTECT_PTR.
>>>>>> I had concerns over the stack usage, but so far it did not prove too
>>>>>> much of a problem. Still, why isn't the tail recursion explicitly
>>>>>> made an iteration then ? This would take the "may be the compiler
>>>>>> figures it out, may be not" variable out of the equation.
>>>>>> 
>>>>> Careful - the protection stack (bookkeeping by R) has nothing to do
>>>>> with the C function call stack hence it has nothing to do with the
>>>>> compiler. The protection stack is global so usually you don't run out
>>>>> of it unless something goes horribly wrong (=infinite loop).
>>>> I think Laurent was referring to RecursiveRelease, which could use a lot
>>>> of C stack if you choose to release something that is deep in the list,
>>>> since it checks the head, and if that doesn't match, calls itself again
>>>> on the rest of the list. (I checked, and at least one version of gcc
>>>> doesn't recognize the tail recursion: it really does generate a
>>>> recursive call.)
>>>> 
>>>> Laurent asked why it isn't optimized to avoid the recursion: I think the
>>>> answer is simply because it is so rarely used that nobody has bothered.
>>> 
>>> Yes, I was referring to RecursiveRelease. Sorry if this was not clear.
>>> 
>>> What are the chances for a patch to be accepted ? At first sight(*),
>>> making that tail recursion an iterative function is not a major
>>> undertaking, and reviewing the patch be fairly straightforward... but
>>> I can always use that time otherwise if the answer to the question is
>>> "nil".
>> 
>> I don't think I would want to review such a patch (I don't know the
>> memory manager well, I don't know that there is really a case where it
>> matters enough to be worth doing), so I'd say if you don't get a message
>> from a core member volunteering to do so, you should assume it won't be
>> accepted. But that doesn't mean you shouldn't write the code for your
>> own internal use and edification, and if you can put together a demo
>> that shows it really makes a big difference in a realistic situation,
>> you might get a different response.
>> 
>> Duncan Murdoch
> 
> From what I understand, this has little to do with the memory manager, and resumes to the simple problem "how to remove an object from a list".
> 
> Something like this, using the amazing inline and inspect packages:
> 
> require( inline )
> require( inspect )
> 
> remover <- cfunction(signature( list = "language", object = "environment" ), '
> 	if( !isNull( list ) ){
> 		SEXP x = list ;
> 		SEXP y ;
> 		while( CAR(x) != object && CADR(x) != R_NilValue ){
> 			y = x ;
> 			x = CDR(x) ;
> 		}
> 		if( CAR(x) == object ) SETCDR(y, CDR(x) ) ;
> 	}
> 	return list ;

That blows up if the object is the first in the list BTW. You probably meant more something like

static SEXP ReleaseObj(SEXP object, SEXP list) {
	if (!isNull(list)) {
		if (CAR(list) != object) {
			SEXP c = list;
			while (!isNull(CDR(c))) {
				if (CADR(c) == object) {
					CDR(c) = CDDR(c);
					break;
				}
				c = CDR(c);
			}
		} else return CDR(list);
	}
	return list;
}
		
(For non-core replace CDR(c) with SETCDR(c) although that goes through the write barrier).

Cheers,
Simon


> ', Rcpp=FALSE, verbose=FALSE )
> 
> e <- new.env()
> call <- call( "foo", e, e, 1:10, 3 )
> call
> # inspect( call )
> result <- remover( call ,e )
> result
> # inspect( result )
> 
> gives this :
> 
> foo(10, <environment>, 0, <environment>, 1) 
> @0x9f4e0d0 06 LANGSXP [NAM(2)] 
>  @0x9f4e204 01 SYMSXP [] "foo" 
>  @0xa907b78 14 REALSXP [NAM(2)] (len=1, tl=1763713056) 
>  @0x9f4d564 04 ENVSXP [NAM(1)] 
>  FRAME: 
>    @0x9e94a10 00 NILSXP [MARK,NAM(2)] 
>  ENCLOS:
>    @0x9eb7b4c 04 ENVSXP [MARK,NAM(2),GP(0x8000)]
>  HASHTAB:
>    @0x9e94a10 00 NILSXP [MARK,NAM(2)]
>  @0xa907b58 14 REALSXP [NAM(2)] (len=1, tl=1936941344)
>  @0x9f4d564 04 ENVSXP [NAM(1)]
>  FRAME:
>    @0x9e94a10 00 NILSXP [MARK,NAM(2)]
>  ENCLOS:
>    @0x9eb7b4c 04 ENVSXP [MARK,NAM(2),GP(0x8000)]
>  HASHTAB:
>    @0x9e94a10 00 NILSXP [MARK,NAM(2)]
>  @0xa907b38 14 REALSXP [NAM(2)] (len=1, tl=543908709)
> NULL
> ==================
> foo(10, 0, <environment>, 1)
> @0x9f4e0d0 06 LANGSXP [NAM(2)]
>  @0x9f4e204 01 SYMSXP [] "foo"
>  @0xa907b78 14 REALSXP [NAM(2)] (len=1, tl=1763713056)
>  @0xa907b58 14 REALSXP [NAM(2)] (len=1, tl=1936941344)
>  @0x9f4d564 04 ENVSXP [NAM(2)]
>  FRAME:
>    @0x9e94a10 00 NILSXP [MARK,NAM(2)]
>  ENCLOS:
>    @0x9eb7b4c 04 ENVSXP [MARK,NAM(2),GP(0x8000)]
>  HASHTAB:
>    @0x9e94a10 00 NILSXP [MARK,NAM(2)]
>  @0xa907b38 14 REALSXP [NAM(2)] (len=1, tl=543908709)
> NULL
> 
> 
> 
> so it boils down to this as a replacement to RecursiveRelease :
> 
> /**
> * Removes the first instance of object with the list
> */
> static SEXP RemoveFromList( SEXP object, SEXP list){
> 	if( !isNull( list ) ){
> 		SEXP x = list ;
> 		SEXP y ;
> 		while( CAR(x) != object && CADR(x) != R_NilValue ){
> 			y = x ;
> 			x = CDR(x) ;
> 		}
> 		if( CAR(x) == object ) SETCDR(y, CDR(x) ) ;
> 	}
> 	return list ;
> }
> 
> 
> Romain
> 
> 
> -- 
> Romain Francois
> Professional R Enthusiast
> +33(0) 6 28 91 30 30
> http://romainfrancois.blog.free.fr
> |- http://tr.im/IW9B : C++ exceptions at the R level
> |- http://tr.im/IlMh : CPP package: exposing C++ objects
> `- http://tr.im/HlX9 : new package : bibtex
> 
> 
> 
> 


From romain.francois at dbmail.com  Sun Jan  3 08:36:52 2010
From: romain.francois at dbmail.com (Romain Francois)
Date: Sun, 03 Jan 2010 08:36:52 +0100
Subject: [Rd] iterative list rm [Was: R-devel Digest, Vol 83, Issue 2]
In-Reply-To: <A8BE4876-8448-44C1-B0D5-76358AC4BE73@r-project.org>
References: <mailman.11.1262430004.8711.r-devel@r-project.org>	<4B3F7625.1080806@gmail.com>
	<4B3F7ACD.2050106@stats.uwo.ca>	<4B3F7F8D.8060701@gmail.com>	<B38057DF-8452-41FC-9D46-B67FBD58E01C@r-project.org>	<4B3FA43B.1070707@stats.uwo.ca>
	<4B3FA9BB.90302@gmail.com> <4B3FC4C0.6060604@stats.uwo.ca>
	<4B3FCBA0.40908@dbmail.com>
	<A8BE4876-8448-44C1-B0D5-76358AC4BE73@r-project.org>
Message-ID: <4B404914.3050606@dbmail.com>

On 01/03/2010 02:04 AM, Simon Urbanek wrote:
>
>
> On Jan 2, 2010, at 5:41 PM, Romain Francois wrote:
>
>> On 01/02/2010 11:12 PM, Duncan Murdoch wrote:
>>>
>>> On 02/01/2010 3:16 PM, Laurent Gautier wrote:
>>>> On 1/2/10 8:53 PM, Duncan Murdoch wrote:
>>>>> Simon Urbanek wrote:
>>>>>> On Jan 2, 2010, at 12:17 PM, Laurent Gautier wrote:
>>>>>>
>>>>>>> On 1/2/10 5:56 PM, Duncan Murdoch wrote:
>>>>>>>> On 02/01/2010 11:36 AM, Laurent Gautier wrote:
>>>>>>>>> [Disclaimer: what is below reflects my understanding from reading
>>>>>>>>> the
>>>>>>>>> R source, others will correct where deemed necessary]
>>>>>>>>>
>>>>>>>>> On 1/2/10 12:00 PM, r-devel-request at r-project.org wrote:
>>>>>>> (...)
>>>>>>>
>>>>>>>>>> I'd also be interested if there is some ideas on the relative
>>>>>>>>>> efficiency
>>>>>>>>>> of the preserve/release mechanism compared to PROTECT/UNPROTECT.
>>>>>>>>> PROTECT/UNPROTECT is trading granularity for speed. It is a stack
>>>>>>>>> with
>>>>>>>>> only tow operations possible:
>>>>>>>>> - push 1 object into the stack
>>>>>>>>> - pull (unprotect) N last objects from the stack
>>>>>>>> UNPROTECT_PTR is also possible, which does a linear search through
>>>>>>>> the
>>>>>>>> stack and unprotects something possibly deep within it. There is also
>>>>>>>> REPROTECT which allows you to replace an entry within the stack.
>>>>>>>>
>>>>>>>> I would guess that UNPROTECT_PTR is more efficient than
>>>>>>>> RecursiveRelease
>>>>>>>> because it doesn't use so much stack space when it needs to go deep
>>>>>>>> into
>>>>>>>> the stack to release, but it is possible the compiler recognizes the
>>>>>>>> tail recursion and RecursiveRelease is implemented efficiently. In
>>>>>>>> that
>>>>>>>> case it could be more efficient than UNPROTECT_PTR, which has to move
>>>>>>>> all the other entries down to fill the newly vacated space. Really
>>>>>>>> the
>>>>>>>> only reliable way to answer efficiency questions like this is to try
>>>>>>>> both ways and see which works better in your application.
>>>>>>> Thanks. I did not know about UNPROTECT_PTR.
>>>>>>> I had concerns over the stack usage, but so far it did not prove too
>>>>>>> much of a problem. Still, why isn't the tail recursion explicitly
>>>>>>> made an iteration then ? This would take the "may be the compiler
>>>>>>> figures it out, may be not" variable out of the equation.
>>>>>>>
>>>>>> Careful - the protection stack (bookkeeping by R) has nothing to do
>>>>>> with the C function call stack hence it has nothing to do with the
>>>>>> compiler. The protection stack is global so usually you don't run out
>>>>>> of it unless something goes horribly wrong (=infinite loop).
>>>>> I think Laurent was referring to RecursiveRelease, which could use a lot
>>>>> of C stack if you choose to release something that is deep in the list,
>>>>> since it checks the head, and if that doesn't match, calls itself again
>>>>> on the rest of the list. (I checked, and at least one version of gcc
>>>>> doesn't recognize the tail recursion: it really does generate a
>>>>> recursive call.)
>>>>>
>>>>> Laurent asked why it isn't optimized to avoid the recursion: I think the
>>>>> answer is simply because it is so rarely used that nobody has bothered.
>>>>
>>>> Yes, I was referring to RecursiveRelease. Sorry if this was not clear.
>>>>
>>>> What are the chances for a patch to be accepted ? At first sight(*),
>>>> making that tail recursion an iterative function is not a major
>>>> undertaking, and reviewing the patch be fairly straightforward... but
>>>> I can always use that time otherwise if the answer to the question is
>>>> "nil".
>>>
>>> I don't think I would want to review such a patch (I don't know the
>>> memory manager well, I don't know that there is really a case where it
>>> matters enough to be worth doing), so I'd say if you don't get a message
>>> from a core member volunteering to do so, you should assume it won't be
>>> accepted. But that doesn't mean you shouldn't write the code for your
>>> own internal use and edification, and if you can put together a demo
>>> that shows it really makes a big difference in a realistic situation,
>>> you might get a different response.
>>>
>>> Duncan Murdoch
>>
>>  From what I understand, this has little to do with the memory manager, and resumes to the simple problem "how to remove an object from a list".
>>
>> Something like this, using the amazing inline and inspect packages:
>>
>> require( inline )
>> require( inspect )
>>
>> remover<- cfunction(signature( list = "language", object = "environment" ), '
>> 	if( !isNull( list ) ){
>> 		SEXP x = list ;
>> 		SEXP y ;
>> 		while( CAR(x) != object&&  CADR(x) != R_NilValue ){
>> 			y = x ;
>> 			x = CDR(x) ;
>> 		}
>> 		if( CAR(x) == object ) SETCDR(y, CDR(x) ) ;
>> 	}
>> 	return list ;
>
> That blows up if the object is the first in the list BTW. You probably meant more something like
>
> static SEXP ReleaseObj(SEXP object, SEXP list) {
> 	if (!isNull(list)) {
> 		if (CAR(list) != object) {
> 			SEXP c = list;
> 			while (!isNull(CDR(c))) {
> 				if (CADR(c) == object) {
> 					CDR(c) = CDDR(c);
> 					break;
> 				}
> 				c = CDR(c);
> 			}
> 		} else return CDR(list);
> 	}
> 	return list;
> }
> 		
> (For non-core replace CDR(c) with SETCDR(c) although that goes through the write barrier).
>
> Cheers,
> Simon

Thanks. And sorry for not testing this case. (oops)

Romain

-- 
Romain Francois
Professional R Enthusiast
+33(0) 6 28 91 30 30
http://romainfrancois.blog.free.fr
|- http://tr.im/IW9B : C++ exceptions at the R level
|- http://tr.im/IlMh : CPP package: exposing C++ objects
`- http://tr.im/HlX9 : new package : bibtex


From romain.francois at dbmail.com  Sun Jan  3 09:08:28 2010
From: romain.francois at dbmail.com (Romain Francois)
Date: Sun, 03 Jan 2010 09:08:28 +0100
Subject: [Rd] R object protection [Was: R-devel Digest, Vol 83, Issue 2]
In-Reply-To: <DBCA74A6-1BE2-4DDA-836E-27285E127278@r-project.org>
References: <mailman.11.1262430004.8711.r-devel@r-project.org>	<4B3F7625.1080806@gmail.com>
	<4B3F7ACD.2050106@stats.uwo.ca>	<4B3F7F8D.8060701@gmail.com>	<B38057DF-8452-41FC-9D46-B67FBD58E01C@r-project.org>	<4B3FB5CA.9020302@gmail.com>
	<DBCA74A6-1BE2-4DDA-836E-27285E127278@r-project.org>
Message-ID: <4B40507C.5080101@dbmail.com>

On 01/03/2010 01:34 AM, Simon Urbanek wrote:
>
> On Jan 2, 2010, at 4:08 PM, Laurent Gautier wrote:
>
>> On 1/2/10 8:28 PM, Simon Urbanek wrote:
>>>
>>> On Jan 2, 2010, at 12:17 PM, Laurent Gautier wrote:
>>>
>>>> On 1/2/10 5:56 PM, Duncan Murdoch wrote:
>>>>> On 02/01/2010 11:36 AM, Laurent Gautier wrote:
>>>>>> [Disclaimer: what is below reflects my understanding from
>>>>>> reading the R source, others will correct where deemed
>>>>>> necessary]
>>>>>>
>>>>>> On 1/2/10 12:00 PM, r-devel-request at r-project.org wrote:
>>>>
>> (...)
>>
>>>>> Another possibility is to maintain your own list or environment
>>>>> of objects, and just protect/preserve the list as a whole.
>>>>
>>>> Interesting idea, this would let one perform his/her own
>>>> bookkeeping on the list/environment. How is R garbage collection
>>>> checking contained objects ? (I am thinking performances here, and
>>>> may be cyclic references).
>>>>
>>>
>>> You don't really want to care because the GC is global for all
>>> objects (and cycles are supported by the GC in R) - so whether you
>>> keep it yourself or Preserve/Release is practically irrelevant (the
>>> protection stack is handled separately).
>>
>> I guess that I'll have to know in order to understand that I don't really want to care. ;-)
>> The garbage collector must somehow know if an object is available for collection (and will have to check whether an object is PROTECTed or not, or Preserved or not).
>> I suppose that upon being called the garbage collector will first look into the PROTECTed and Preserved objects, mark them as unavailble for collection, then recursively mark objects contained in them.
>>
>
> The GC marks recursively from all known roots of which Preserved list is one of many and all elements of the protection stack are treated as such as well (FWIW the Preserved and protected list are in that order the last two). Since this involves (by definition) all live objects it doesn't matter to which other object you assign the node. The only detail is that protection stack does not change the generation (since there is no real node to assign to).
>
>
>>> As for keeping your own list -- if you really care about performance
>>> that much (to be honest in vast majority of cases it doesn't matter)
>>> you have to be careful how you implement it. Technically the fastest
>>> way is preallocated generic vector but it really depends on how you
>>> deal with the access so you can easily perform worse than
>>> Preserve/Release if you're not careful.
>>
>> Releasing being of linear complexity, having few thousands of Preserved objects not being anticipated as an extraordinary situation, and Preserve/Release cycles being quite frequent, I start minding a bit about the performance. Keeping my own list would let me experiment with various strategies (and eventually offer
>>
>
> Sure - what I meant is that you have to optimize for one thing or the other so you have to be careful what you do.
>
>
>>> As a side note - the best way (IMHO) to deal with all those issues is
>>> to use external pointers because a) you get very efficient C
>>> finalizers b) you can directly (and very efficiently) tie lifespan of
>>> other objects to the same SEXP and c) as guardians they can nicely
>>> track other objects that hold them.
>>
>> Thanks. I am not certain to follow everything. Are you suggesting that rather than Preserve-ing/Release-ing a list/environment that would act as a guardian for several objects, one should use an external pointer (to an arbitrary C pointer) ? In that case, how does one indicate that an external pointer acts as a container ?
>>
>> Or are you suggesting that rather than Preserve-in/Release-ing R objects one should use an external pointer acting as a proxy for a SEXP (argument "prot" in R_MakeExternalPtr(void *p, SEXP tag, SEXP prot) ) ?
>> (but in that case the external pointer will itself have to go through Preserve/Release cycles...)
>>
>
> I was guessing that you use this in conjunction with some C++ magic not just plain R objects and thus you have to deal with two life spans. From the other messages I think you are dealing with the simple situation of wrapping an R object as reference in the other system with explicit memory management (i.e. in C++ you have explicit new/delete life cycle) in which case you really don't need anything more than Preserve. It is more interesting when you want to track the life of R objects without imposing the life span - i.e when you want to know when an object in R is collected such that you can delete it from the other system (i.e. you don't explicitly retain it by the reference).
>
> Cheers,
> Simon

Many thanks for this clarification. Rcpp is using a jri wanabee 
approach. Essentially we have :

class RObject{
public:
RObject(SEXP x){ preserve x }
~RObject(){ release x}
private:
SEXP x ;
}

For the story, I'm also doing the other way (rJava wanabee) in the CPP 
package 
(http://romainfrancois.blog.free.fr/index.php?post/2009/12/22/CPP-package-%3A-exposing-C-objects) 
that wraps up arbitrary C++ objects (currently stl containers) as 
external pointers. You might recognize some patterns here.

 > # create the object
 > x <- new( CPP("set<int>") )
 > # insert data using the insert method
 > x$insert( sample( 1:20, size = 50, replace = TRUE ) )
 > # ask for the size of the set
 > x$size()
[1] 17
 > # bring it back as an R classic integer vector
 > # see how it comes back sorted and unique (which is set's job)
 > as.vector(x)
  [1]  1  3  4  6  7  8  9 10 11 12 13 14 15 17 18 19 20


no magic however since C++ reflection capabilities are very limited, 
well some magic based on the brew package.

Romain

-- 
Romain Francois
Professional R Enthusiast
+33(0) 6 28 91 30 30
http://romainfrancois.blog.free.fr
|- http://tr.im/IW9B : C++ exceptions at the R level
|- http://tr.im/IlMh : CPP package: exposing C++ objects
`- http://tr.im/HlX9 : new package : bibtex


From jerry.lewis at biogenidec.com  Sun Jan  3 22:15:12 2010
From: jerry.lewis at biogenidec.com (jerry.lewis at biogenidec.com)
Date: Sun,  3 Jan 2010 22:15:12 +0100 (CET)
Subject: [Rd] dchisq tail accuracy (PR#14105)
Message-ID: <20100103211512.A79BA282EFCC@mail.pubhealth.ku.dk>

The issue seems to be that the infinite sum is truncated too early when x 
is in the extreme upper tail.  An easily validated improvement to to 
dnchisq.c would be to add an additional requirement in the upper tail 
while condition, that the summation should continue while the additive 
term remains too big a fraction of the saddlepoint density.  Here is 
replacement code that partially offsets the time required for addtional 
terms in the sum by calculating x*ncp2 only once instead of repeating it 
in every iteration of both loops.

    x2 = x * ncp2
    /* upper tail */
    term = mid; df = dfmid; i = imax;
    s = 0.5 - (dx+sqrt(dx*dx+4*ncp/x))*0.25  /* saddlepoint */
    s2 = 1-2*s
    termlimit = exp(ncp*s/s2 - log(s2)*df*0.5 - s*x - 
log((df+2*ncp+4*ncp*s/s2)/(s2*s2)*pi) - log(2)*2**54) /* saddlepoint 
density * 2^-53 */
    do {
        i++;
        q = x2 / i / df;
        df += 2;
        term *= q;
        sum += term;
    } while (q >= 1 || term * q > (1-q)*eps || term > termlimit);
    /* lower tail */
    term = mid; df = dfmid; i = imax;
    while ( i ){
        df -= 2;
        q = i * df / x2;
        i--;
        term *= q;
        sum += term;
        if (q < 1 && term * q <= (1-q)*eps) break;
    }

Jerry
	[[alternative HTML version deleted]]


From armgong at yahoo.com  Mon Jan  4 03:13:38 2010
From: armgong at yahoo.com (Arm Gong)
Date: Sun, 3 Jan 2010 18:13:38 -0800 (PST)
Subject: [Rd] I have finished compiling of R 64 bit on 64 bit Windows use
	MINGW64
Message-ID: <849441.9968.qm@web45905.mail.sp1.yahoo.com>

An embedded and charset-unspecified text was scrubbed...
Name: not available
URL: <https://stat.ethz.ch/pipermail/r-devel/attachments/20100103/6019db25/attachment.pl>

From ligges at statistik.tu-dortmund.de  Mon Jan  4 11:11:39 2010
From: ligges at statistik.tu-dortmund.de (Uwe Ligges)
Date: Mon, 04 Jan 2010 11:11:39 +0100
Subject: [Rd] I have finished compiling of R 64 bit on 64 bit Windows
 use	MINGW64
In-Reply-To: <849441.9968.qm@web45905.mail.sp1.yahoo.com>
References: <849441.9968.qm@web45905.mail.sp1.yahoo.com>
Message-ID: <4B41BEDB.6010503@statistik.tu-dortmund.de>

Dear Arm Gong,

we are certianly very interested. How many files (and which) did you 
patch, which version of the different MinGW tools did you use?

It would be nice if we would be able to build 64-bit versions of CRAN.

Can you send the information (including required patches) in a mail 
message (to R-windows at R-project.org) or can you upload to a side 
yourself? Otherwise I can arrange an upload and make it available later on.

Best wishes,
Uwe Ligges





Arm Gong wrote:
> hi ,everyone
> I have finished compiling of R 64 bit on 64 bit Windows system by using MINGW64, include the standard and recommended packages.tested it on Windows 2008 server R2 X64.it run very well.I wander anyone interested in it ,and anyone who want to continue testing  it with me?  and who can provide a space let me upload the R files
> Best wishes!                    2010/1/4                                           Gong Yu
> 
> 
> 
> 
>       
> 	[[alternative HTML version deleted]]
> 
> 
> 
> ------------------------------------------------------------------------
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From jel+r at cs.uni-magdeburg.de  Mon Jan  4 16:55:08 2010
From: jel+r at cs.uni-magdeburg.de (jel+r at cs.uni-magdeburg.de)
Date: Mon,  4 Jan 2010 16:55:08 +0100 (CET)
Subject: [Rd] bin/exec/R coredumps (PR#14177)
Message-ID: <20100104155508.E4404282EF29@mail.pubhealth.ku.dk>

Full_Name: Jens Elkner
Version: 2.10.1
OS: Solaris
Submission from: (NULL) (87.188.113.172)


elkner.idev2 elkner/build/R-2.10.1 > bin/exec/R -e
Segmentation fault (core dumped)
elkner.idev2 elkner/build/R-2.10.1 > dbx bin/exec/R core
For information about new features see `help changes'
To remove this message, put `dbxenv suppress_startup_message 7.7' in your
.dbxrc
Reading R
core file header read successfully
Reading ld.so.1
Reading libR.so
Reading libRblas.so
Reading libc.so.1
Reading libm.so.2
Reading libreadline.so.5
Reading libpcre.so.0.0.0
program terminated by signal SEGV (no mapping at the fault address)
0xfffffd7fff21fb50: strlen+0x0030:  pcmpeqb  (%rsi),%xmm0
Current function is Rf_initialize_R (optimized)
  331           if(strlen(cmdlines) + strlen(*av) + 2 <= 10000) {
dbx<1> where                                                        
  [1] strlen(0x0, 0x0, 0xffff, 0x0, 0xffff, 0x3), at 0xfffffd7fff21fb50 
=>[2] Rf_initialize_R(ac = ???, av = ???) (optimized), at 0xfffffd7fef252eb0
(line ~331) in "system.c"
  [3] main(ac = ???, av = ???) (optimized), at 0x400e0a (line ~32) in "Rmain.c"
dbx<2>


From P.Dalgaard at biostat.ku.dk  Mon Jan  4 17:28:36 2010
From: P.Dalgaard at biostat.ku.dk (Peter Dalgaard)
Date: Mon, 04 Jan 2010 17:28:36 +0100
Subject: [Rd] bin/exec/R coredumps (PR#14177)
In-Reply-To: <20100104155508.E4404282EF29@mail.pubhealth.ku.dk>
References: <20100104155508.E4404282EF29@mail.pubhealth.ku.dk>
Message-ID: <4B421734.8090908@biostat.ku.dk>

jel+r at cs.uni-magdeburg.de wrote:
> Full_Name: Jens Elkner
> Version: 2.10.1
> OS: Solaris
> Submission from: (NULL) (87.188.113.172)
> 
> 
> elkner.idev2 elkner/build/R-2.10.1 > bin/exec/R -e
> Segmentation fault (core dumped)

That's not supposed to work! The shell script in bin/R sets up an
environment in which R should run and checks the arguments before
running the binary.  In particular it would have caught

>~/misc/r-release-branch/BUILD/bin/R -e
ERROR: option '-e' requires an argument


> elkner.idev2 elkner/build/R-2.10.1 > dbx bin/exec/R core
> For information about new features see `help changes'
> To remove this message, put `dbxenv suppress_startup_message 7.7' in your
> .dbxrc
> Reading R
> core file header read successfully
> Reading ld.so.1
> Reading libR.so
> Reading libRblas.so
> Reading libc.so.1
> Reading libm.so.2
> Reading libreadline.so.5
> Reading libpcre.so.0.0.0
> program terminated by signal SEGV (no mapping at the fault address)
> 0xfffffd7fff21fb50: strlen+0x0030:  pcmpeqb  (%rsi),%xmm0
> Current function is Rf_initialize_R (optimized)
>   331           if(strlen(cmdlines) + strlen(*av) + 2 <= 10000) {
> dbx<1> where                                                        
>   [1] strlen(0x0, 0x0, 0xffff, 0x0, 0xffff, 0x3), at 0xfffffd7fff21fb50 
> =>[2] Rf_initialize_R(ac = ???, av = ???) (optimized), at 0xfffffd7fef252eb0
> (line ~331) in "system.c"
>   [3] main(ac = ???, av = ???) (optimized), at 0x400e0a (line ~32) in "Rmain.c"
> dbx<2>
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


-- 
   O__  ---- Peter Dalgaard             ?ster Farimagsgade 5, Entr.B
  c/ /'_ --- Dept. of Biostatistics     PO Box 2099, 1014 Cph. K
 (*) \(*) -- University of Copenhagen   Denmark      Ph:  (+45) 35327918
~~~~~~~~~~ - (p.dalgaard at biostat.ku.dk)              FAX: (+45) 35327907


From emorway at engr.colostate.edu  Mon Jan  4 20:49:54 2010
From: emorway at engr.colostate.edu (emorway)
Date: Mon, 4 Jan 2010 11:49:54 -0800 (PST)
Subject: [Rd]  log normal overlay
Message-ID: <1262634594476-998495.post@n4.nabble.com>


Hello,

Using the following lines of code, I created the following graph:

d.resid<-c(-5.63,4.25,4.38,3.05,-1.85,1.40,1.80,-0.80,4.20,3.20,-2.70,-7.20,-0.10,-2.50,0.60,1.20,1.30,1.20,1.30,1.27,6.91,8.55,7.18,8.73,1.82,-1.45,5.91,5.45,-0.82,-4.55,0.82,82.91,1.73,3.09,5.64,-1.73,-9.55,4.27,17.45,9.64,-18.33,21.77,-31.56,-0.65,-13.11,-14.75,-18.75,-15.56,-3.11,-1.75,-1.84,-2.02,-8.93,-7.47,0.89,10.77,-15.93,-16.93,-13.33,-9.05,-2.25,-3.53,4.95,5.13,69.38,61.76,71.18,20.27,60.51,-5.38,-14.52,-5.04,3.02,-13.19,-14.70,-14.53,-8.81,4.30,-7.89,-6.37,60.72,84.11,25.01,91.55,95.65,96.13,92.23,93.22,91.74,92.12,90.79,85.30,73.77,72.44,65.51,49.31,45.50,-10.31,-22.50,-20.21,-3.20,-11.32,-9.29,-1.75,-0.91,-1.93,-0.23,-6.32,-0.84,-3.89,-5.04,1.71,-18.29,-36.63,-36.75,-24.63,-24.95,-27.85,-26.60,-21.20,-14.80,-29.80,-22.80,-21.70,-26.20,-25.10,-37.50,-34.40,-34.80,-33.70,-34.80,-33.70,-19.73,-18.09,-23.45,-23.82,-19.27,-20.18,-24.45,-25.09,-23.55,-25.82,-21.55,-24.18,-34.09,-27.27,-25.91,-26.36,-28.73,-23.55,-32.73,-29.55,-28.36,-30.41,-125.31,-15.64,-24.73,-19.19,-19.83,-17.83,-19.64,-22.19,-21.83,-22.92,-51.10,-27.01,-27.55,-26.19,-17.01,-5.63,-0.75,-5.63,-2.95,9.15,4.40,6.80,-0.80,-0.80,9.20,10.30,12.80,5.90,6.50,-0.40,-6.80,-4.70,-6.80,-4.70,7.27,7.91,3.55,13.18,1.73,3.82,6.55,6.91,16.45,9.18,5.45,11.82,-5.09,13.73,15.09,20.64,9.27,15.45,10.27,5.45,2.64,-3.41,7.69,13.36,7.27,12.81,7.17,17.17,19.36,14.81,12.17,24.08,19.90,21.99,19.45,15.81,-67.31,24.99,24.99,14.59,11.64,15.38,14.10,16.49,27.00,-58.88,-89.97,-59.18,-65.28,-62.50,-69.03,-75.57,-89.66,-58.22,-49.96,-61.24,-68.06,-41.82,-80.30,-60.49,-70.98,-79.45,-77.85,-127.19,-62.80,-103.81,-119.91,-102.65,-113.82,-105.53,19.62,17.05,15.38,12.25,35.38,36.05,33.15,30.40,38.80,35.20,17.20,32.20,59.30,61.80,15.90,35.50,28.60,10.20,14.30,10.20,14.30,33.27,22.91,10.55,4.18,10.73,31.82,32.55,13.91,15.45,21.18,26.45,25.82,25.91,22.73,16.09,17.64,18.27,35.45,31.27,22.45,26.64,26.59,40.69,39.36,47.27,44.81,33.17,32.17,38.36,39.81,35.17,33.08,40.90,44.99,47.45,23.81,33.69,41.99,38.99,44.59,46.82,39.90,43.19,33.89,13.57,
27.35,-51.71,34.38,33.25,19.38,33.05,46.65,45.40,51.80,39.20,38.20,47.20,33.30,32.80,58.90,57.50,57.60,54.20,57.30,54.20,57.30,38.27,38.91,48.55,46.18,30.73,25.82,25.55,39.91,50.45,35.18,30.45,30.82,21.91,44.73,50.09,45.64,37.27,39.45,60.27,62.45,64.64,65.59,90.69,80.36,54.27,59.81,64.17,66.17,53.36,38.81,32.17,53.08,37.90,33.99,37.45,40.81,56.69,35.99,34.99,43.59,53.92,60.72,64.01,50.71,54.15,56.38,3.05,23.52,43.00,40.03,29.59,46.00,46.30,51.52,69.93,53.73,43.37,46.90,60.85,77.61,68.17,66.64,77.04,81.18,31.68,78.85,73.41,89.58,64.58,50.15,53.52,40.95,59.24,47.83,35.71,33.65,41.31,46.26,61.64,34.87,47.56,34.87,23.34,18.96,34.29,24.79,30.10,16.40,27.16,11.92,-11.71,31.22,23.09,28.17,38.76,39.60,44.68,40.28,44.86,47.29,51.87,56.81,60.51,42.97,48.51,33.85,24.10,4.79,4.72,-16.47,-14.64,-14.41,-3.89,1.14,-2.22,-8.31,-14.71,-0.63,-1.75,-14.13,-6.95,9.65,3.40,12.80,-1.80,-1.80,9.20,-5.70,-5.20,16.90,14.50,17.60,21.20,22.30,21.20,22.30,-0.73,-1.09,12.55,7.18,-5.27,-8.18,-9.45,3.91,10.45,-4.82,-3.55,-8.18,-32.09,6.73,11.09,1.64,3.27,1.45,22.27,24.45,30.64,-32.41,-34.31,-19.64,-50.73,-45.19,-36.83,-34.83,-53.64,-62.19,-66.83,-50.92,-62.10,-67.01,-63.55,-59.19,-44.31,-59.01,-54.01,-55.41,-47.84,-41.96,-40.19,35.35,12.57,18.54,23.38,29.91,-10.36,31.24,29.30,103.89,1.66,-34.99,-17.01,-10.43,-14.63,-7.00,30.05,-57.81,-57.81,35.92,25.51,14.33,13.31,6.46,5.44,24.05,3.36,25.82,17.36,-4.63,-0.75,-12.63,-4.45,3.15,-1.60,3.80,-4.80,-2.80,1.20,-10.70,-12.20,5.90,5.50,6.60,12.20,11.30,12.20,11.30,-2.73,-2.09,4.55,13.18,-4.27,-8.18,-11.45,-0.09,6.45,-8.82,-8.55,-9.18,-12.09,0.73,3.09,0.64,3.27,-3.55,11.27,14.45,22.64,18.59,28.69,30.36,9.27,13.81,19.17,19.17,7.36,-1.19,-2.83,10.08,0.90,-6.01,-2.55,2.81,13.69,1.99,4.99,-2.41,6.25,13.04,13.29,26.85,-1.53,6.48,7.38,-27.86,-8.91,7.69,-5.34,-1.46,8.61,10.75,-23.28,-87.47,-24.73,-30.51,-26.38,-21.26,-3.59,-19.13,-17.61,-7.21,-0.02,81.98,-5.88,-13.45,-2.29,17.14,12.77,11.87,27.04,32.83,14.71,7.77,4.80,8.80,10.70,27.00,63.63,16.58,-0.69,-7.64,
-12.03,-8.89,79.15,64.65,75.34,96.50,81.26,77.45,-3.07,-11.20,3.03,7.52,2.26,7.34,5.99,1.42,6.91,2.34,7.28,10.98,-1.12,-5.58,48.76,82.01,61.94,60.34,50.13,54.71,56.46,63.62,66.21,63.16,60.42,54.63,3.38,-9.75,-2.13,-11.95,-10.35,-11.60,-8.20,-11.80,-9.80,-7.80,-12.70,-11.20,-8.10,-10.50,-9.40,-1.80,-4.70,-1.80,-4.70,-2.73,-6.09,-1.45,-1.82,-1.27,-4.18,-9.45,-6.09,-5.55,-8.82,-10.55,-6.18,-15.09,-7.27,-7.91,-9.36,-7.73,-5.55,-3.73,1.45,6.64,5.59,2.69,14.36,11.27,6.81,11.17,5.17,3.36,0.81,1.17,1.08,1.90,-4.01,-3.55,-2.19,4.69,0.99,3.99,-6.41,-4.61,-0.86,-0.31,8.37,-16.96,-8.95,-5.63,-26.53,-9.11,-7.00,-4.17,-6.08,3.92,5.75,-11.28,-2.31,-15.47,9.83,9.09,12.68,20.00,5.06,11.16,20.03,27.22,-6.42,6.61,1.79,21.91,5.14,9.90,11.75,5.59,23.56,8.50,22.89,5.60,7.16,4.49,24.44,2.85,14.93,-3.85,-6.24,-12.45,-19.37,-35.27,-31.48,-29.94,14.05,-57.85,-44.60,-69.20,-40.80,-29.80,-65.80,-52.70,-50.20,-64.10,-62.50,-60.40,-55.80,-59.70,-55.80,-59.70,-38.73,-32.09,-37.45,-36.82,-15.27,-27.18,-22.45,-29.09,-51.55,-21.82,-29.55,-31.18,-30.09,-42.27,-39.91,-39.36,-33.73,-46.55,-51.73,-48.55,-46.36,-42.41,-50.31,-40.64,-28.73,17.81,-18.83,-37.83,-33.64,-19.19,-12.83,-48.92,-20.10,-27.01,-33.55,-17.19,-27.31,-29.01,-30.01,-31.41,-39.00,-45.92,-44.76,-47.35,-72.68,-63.45,-56.63,18.33,-25.20,-46.26,-30.33,-30.71,-19.79,-22.54,-5.13,9.02,-19.68,-7.18,-8.22,-17.13,-15.61,-20.18,-21.70,-14.35,-16.31,-49.09,-38.80,-43.93,-35.34,-43.57,-30.58,-7.39,3.21,-1.68,-22.23,-16.06,-18.12,12.40,-37.51,-9.94,-26.96,-14.88,-24.52,-26.91,-38.30,-66.25,-86.42,-82.63,-81.08,-49.81,-1.04,-50.57,-48.79,-8.15,-39.65,-50.39,-51.08,-55.14,-47.35,-44.30,-49.48,-51.00,-67.39,-67.60,-21.89,-30.35,-41.01,-56.76,-26.45,-26.83,-8.39,-16.92,-16.69,-25.99,-34.07,-28.28,-22.49,-13.95,-34.95,-3.85,-0.60,-17.20,1.20,15.20,-5.80,3.30,4.80,-6.10,-6.50,-6.40,0.20,-3.70,0.20,-3.70,13.27,15.91,13.55,11.18,28.73,18.82,21.55,15.91,0.45,19.18,18.45,18.82,14.91,5.73,5.09,-1.36,15.27,7.45,4.27,8.45,10.64,10.59,17.69,17.36,26.27,-28.19,
33.17,13.17,21.36,25.81,33.17,9.08,25.90,19.99,19.45,22.81,21.69,20.99,16.59,14.34,8.95,12.55,11.07,-17.82,-6.76,-1.63,3.09,20.52,5.25,16.91,13.79,29.58,28.37,29.92,-6.22,32.44,40.07,37.19,32.55,7.25,33.16,33.16,40.51,38.56,5.78,16.98,12.45,21.05,10.38,25.81,35.28,33.69,47.09,26.54,31.18,29.12,27.64,17.35,42.79,23.33,38.46,22.72,21.86,10.47,-5.29,-31.55,-27.76,-26.22,-5.74,-11.83,-30.88,-1.67,-6.75,4.42,5.87,3.66,-0.40,1.30,4.34,-3.89,0.69,-15.71,-8.96,-27.49,-29.95,-41.61,-49.36,-40.29,-38.23,-25.28,-23.15,-25.36,-33.74,-33.28,-32.67,-29.62,-25.97,-28.73,-33.09,-39.45,-39.82,-35.27,-14.18,-7.45,-26.09,-24.55,-13.82,-2.55,-9.18,-17.09,-19.27,-29.91,-15.36,-14.73,-10.55,-55.73,-78.55,-99.36,-87.64,-50.73,-50.19,-77.83,-43.83,-20.64,-12.19,-7.83,-5.92,7.90,18.99,14.45,-2.19,-2.31,-6.01,-7.01,-10.41,-32.47,-47.01,-58.35,-89.59,-92.63,-52.20,-73.87,-68.61,-65.64,-62.95,-54.11,-36.70,14.03,-42.41,-40.88,-44.06,-53.54,-61.60,-49.09,-52.21,-75.94,-69.96,-83.98,-64.87,-90.85,-83.54,-90.07,-79.64,-70.42,-61.85,-70.61,-42.12,-68.59)

breaks<-c(-150,-140,-130,-120,-110,-100,-90,-80,-70,-60,-50,-40,-30,-20,-10,0,10,20,30,40,50,60,70,80,90,100,110,120,130,140,150)
hist(d.resid,breaks,freq=FALSE,main="Field 7: Ground Water Table Depth
Residuals (Avg. - Measured Depth)",xlab="Residuals (cm)", col="grey")
plot(function(d.resid)
dnorm(d.resid,m=-4.007e-15,s=35.571),-150,150,n=400,add=TRUE,col="black",lwd=3)

http://n4.nabble.com/file/n998495/Image2.png 

I would like to do the same thing with the following lines of code, only
this time fit a log-normal distribution.  

app_depths<-c(2.133069498, 1.633840467, 4.946905858, 3.74316825, 2.29580986,
3.156489013, 3.616272192, 20.65750905, 2.878995473, 12.59126936, 14.2215439,
7.892111284, 4.656569671, 3.350734491, 5.457109794, 3.580297328,
12.66226362, 4.491926672, 7.1, 13.5, 11.1, 14.1, 7.3, 8.6, 3.5, 5, 7.1, 7,
15.1, 9.1, 6.5, 13.4, 15.2, 10.5, 11.8, 8.8, 8, 9, 20.4, 15.6, 14.6, 7.1,
3.6, 4.8, 6.4, 10.1, 9.5, 24.5, 16.1, 6.5, 3.3, 3.7, 3.3, 5.3, 4, 2.4, 5.2,
3.7, 3.5, 7, 5.6, 5.9, 8.2, 5.2, 12.7, 6.3, 6.6, 1.9, 2.2, 4.1, 4.7, 
7.9, 14.4, 16.2, 8.8, 14.1, 12.7, 15.1, 20.2, 4.9, 7.9, 5, 7.9, 4.6, 5.7,
32.3, 7.7, 16, 13.9, 16.8, 7.7, 13.6, 5.1, 11.4, 4.59, 7.35, 4.14, 3.82,
1.95, 3.06, 7.4, 8.8, 11, 2, 6.6, 7, 5.7, 5.8, 6.2, 2.9, 7.8, 5.7, 12.2,
5.8, 5.8, 26.7, 22, 13.5, 7.9, 5.64, 2.03, 1.7, 2.78, 5.78, 2.76, 24.6, 15,
12.32, 23.79, 14.3, 11.7, 9.1, 9.4, 8.24, 7.1, 5.9, 4.6, 4.3, 2.96, 7.9,
11.13, 5.3, 5.8, 1.7, 7.12, 8.3, 7.83, 6.62, 42.67, 34.76, 41.68, 6.07,
4.43, 1.2, 1.8, 1.1, 1.1, 1.3, 1.46, 1.46, 10.31, 2.96, 
22.17, 2.75, 3.6, 9.8, 9.68, 5.8, 7.23, 10.06, 4.117439286, 11.63456013,
9.92, 7.40, 9.78, 4.37, 7.12, 7.57, 27.03, 3.43, 6.71, 7.74, 10.01, 7.78,
14.95, 9.98, 8.07, 10.73, 8.82, 15.08, 12.72, 4.27, 10.07, 6.45, 16.67,
16.28, 7.21, 21.46, 21.52, 14.93, 9.03, 26.70, 14.90, 6.12, 17.88, 13.72)

breaks<-c(0,2,4,6,8,10,12,14,16,18,20,22,24,26,28,30,32,34,36,38,40,42,44)
hist(app_depths,breaks,freq=FALSE,main="LARV Irrigation Application Depths
(in) 2004-2007",xlab="Application Depth (in)",col="grey")
plot(function(app_depths)
dlnorm(app_depths,meanlog=mean(app_depths),sdlog=sd(app_depths)),0,44,add=TRUE,col="black",lwd=3)

Problem is, I get a plot that doesn't look right,

http://n4.nabble.com/file/n998495/Image3.png 
 
If there is an obvious error as to why the pdf line doesn't fit the data,
I'm unable to find it.  Any help would be greatly appreciated.

Respectfully,
Eric
-- 
View this message in context: http://n4.nabble.com/log-normal-overlay-tp998495p998495.html
Sent from the R devel mailing list archive at Nabble.com.


From ehlers at ucalgary.ca  Mon Jan  4 23:00:12 2010
From: ehlers at ucalgary.ca (Peter Ehlers)
Date: Mon, 04 Jan 2010 15:00:12 -0700
Subject: [Rd] log normal overlay
In-Reply-To: <1262634594476-998495.post@n4.nabble.com>
References: <1262634594476-998495.post@n4.nabble.com>
Message-ID: <4B4264EC.9080707@ucalgary.ca>



emorway wrote:
> Hello,
> 
> Using the following lines of code, I created the following graph:
> 
> d.resid<-c(-5.63,4.25,4.38,3.05,-1.85,1.40,1.80,-0.80,4.20,3.20,-2.70,-7.20,-0.10,-2.50,0.60,1.20,1.30,1.20,1.30,1.27,6.91,8.55,7.18,8.73,1.82,-1.45,5.91,5.45,-0.82,-4.55,0.82,82.91,1.73,3.09,5.64,-1.73,-9.55,4.27,17.45,9.64,-18.33,21.77,-31.56,-0.65,-13.11,-14.75,-18.75,-15.56,-3.11,-1.75,-1.84,-2.02,-8.93,-7.47,0.89,10.77,-15.93,-16.93,-13.33,-9.05,-2.25,-3.53,4.95,5.13,69.38,61.76,71.18,20.27,60.51,-5.38,-14.52,-5.04,3.02,-13.19,-14.70,-14.53,-8.81,4.30,-7.89,-6.37,60.72,84.11,25.01,91.55,95.65,96.13,92.23,93.22,91.74,92.12,90.79,85.30,73.77,72.44,65.51,49.31,45.50,-10.31,-22.50,-20.21,-3.20,-11.32,-9.29,-1.75,-0.91,-1.93,-0.23,-6.32,-0.84,-3.89,-5.04,1.71,-18.29,-36.63,-36.75,-24.63,-24.95,-27.85,-26.60,-21.20,-14.80,-29.80,-22.80,-21.70,-26.20,-25.10,-37.50,-34.40,-34.80,-33.70,-34.80,-33.70,-19.73,-18.09,-23.45,-23.82,-19.27,-20.18,-24.45,-25.09,-23.55,-25.82,-21.55,-24.18,-34.09,-27.27,-25.91,-26.36,-28.73,-23.55,-32.73,-29.55,-28.36,-30.41,-125.31,-15.64,-24.73,-19
.1!
>  9,-19.83,-17.83,-19.64,-22.19,-21.83,-22.92,-51.10,-27.01,-27.55,-26.19,-17.01,-5.63,-0.75,-5.63,-2.95,9.15,4.40,6.80,-0.80,-0.80,9.20,10.30,12.80,5.90,6.50,-0.40,-6.80,-4.70,-6.80,-4.70,7.27,7.91,3.55,13.18,1.73,3.82,6.55,6.91,16.45,9.18,5.45,11.82,-5.09,13.73,15.09,20.64,9.27,15.45,10.27,5.45,2.64,-3.41,7.69,13.36,7.27,12.81,7.17,17.17,19.36,14.81,12.17,24.08,19.90,21.99,19.45,15.81,-67.31,24.99,24.99,14.59,11.64,15.38,14.10,16.49,27.00,-58.88,-89.97,-59.18,-65.28,-62.50,-69.03,-75.57,-89.66,-58.22,-49.96,-61.24,-68.06,-41.82,-80.30,-60.49,-70.98,-79.45,-77.85,-127.19,-62.80,-103.81,-119.91,-102.65,-113.82,-105.53,19.62,17.05,15.38,12.25,35.38,36.05,33.15,30.40,38.80,35.20,17.20,32.20,59.30,61.80,15.90,35.50,28.60,10.20,14.30,10.20,14.30,33.27,22.91,10.55,4.18,10.73,31.82,32.55,13.91,15.45,21.18,26.45,25.82,25.91,22.73,16.09,17.64,18.27,35.45,31.27,22.45,26.64,26.59,40.69,39.36,47.27,44.81,33.17,32.17,38.36,39.81,35.17,33.08,40.90,44.99,47.45,23.81,33.69,41.99,38.99,44.
59!
>  ,46.82,39.90,43.19,33.89,13.57,
> 27.35,-51.71,34.38,33.25,19.38,33.05,46.65,45.40,51.80,39.20,38.20,47.20,33.30,32.80,58.90,57.50,57.60,54.20,57.30,54.20,57.30,38.27,38.91,48.55,46.18,30.73,25.82,25.55,39.91,50.45,35.18,30.45,30.82,21.91,44.73,50.09,45.64,37.27,39.45,60.27,62.45,64.64,65.59,90.69,80.36,54.27,59.81,64.17,66.17,53.36,38.81,32.17,53.08,37.90,33.99,37.45,40.81,56.69,35.99,34.99,43.59,53.92,60.72,64.01,50.71,54.15,56.38,3.05,23.52,43.00,40.03,29.59,46.00,46.30,51.52,69.93,53.73,43.37,46.90,60.85,77.61,68.17,66.64,77.04,81.18,31.68,78.85,73.41,89.58,64.58,50.15,53.52,40.95,59.24,47.83,35.71,33.65,41.31,46.26,61.64,34.87,47.56,34.87,23.34,18.96,34.29,24.79,30.10,16.40,27.16,11.92,-11.71,31.22,23.09,28.17,38.76,39.60,44.68,40.28,44.86,47.29,51.87,56.81,60.51,42.97,48.51,33.85,24.10,4.79,4.72,-16.47,-14.64,-14.41,-3.89,1.14,-2.22,-8.31,-14.71,-0.63,-1.75,-14.13,-6.95,9.65,3.40,12.80,-1.80,-1.80,9.20,-5.70,-5.20,16.90,14.50,17.60,21.20,22.30,21.20,22.30,-0.73,-1.09,12.55,7.18,-5.27,-8.18,-9.45,3.91
,1!
>  0.45,-4.82,-3.55,-8.18,-32.09,6.73,11.09,1.64,3.27,1.45,22.27,24.45,30.64,-32.41,-34.31,-19.64,-50.73,-45.19,-36.83,-34.83,-53.64,-62.19,-66.83,-50.92,-62.10,-67.01,-63.55,-59.19,-44.31,-59.01,-54.01,-55.41,-47.84,-41.96,-40.19,35.35,12.57,18.54,23.38,29.91,-10.36,31.24,29.30,103.89,1.66,-34.99,-17.01,-10.43,-14.63,-7.00,30.05,-57.81,-57.81,35.92,25.51,14.33,13.31,6.46,5.44,24.05,3.36,25.82,17.36,-4.63,-0.75,-12.63,-4.45,3.15,-1.60,3.80,-4.80,-2.80,1.20,-10.70,-12.20,5.90,5.50,6.60,12.20,11.30,12.20,11.30,-2.73,-2.09,4.55,13.18,-4.27,-8.18,-11.45,-0.09,6.45,-8.82,-8.55,-9.18,-12.09,0.73,3.09,0.64,3.27,-3.55,11.27,14.45,22.64,18.59,28.69,30.36,9.27,13.81,19.17,19.17,7.36,-1.19,-2.83,10.08,0.90,-6.01,-2.55,2.81,13.69,1.99,4.99,-2.41,6.25,13.04,13.29,26.85,-1.53,6.48,7.38,-27.86,-8.91,7.69,-5.34,-1.46,8.61,10.75,-23.28,-87.47,-24.73,-30.51,-26.38,-21.26,-3.59,-19.13,-17.61,-7.21,-0.02,81.98,-5.88,-13.45,-2.29,17.14,12.77,11.87,27.04,32.83,14.71,7.77,4.80,8.80,10.70,27.00,63.
63!
>  ,16.58,-0.69,-7.64,
> -12.03,-8.89,79.15,64.65,75.34,96.50,81.26,77.45,-3.07,-11.20,3.03,7.52,2.26,7.34,5.99,1.42,6.91,2.34,7.28,10.98,-1.12,-5.58,48.76,82.01,61.94,60.34,50.13,54.71,56.46,63.62,66.21,63.16,60.42,54.63,3.38,-9.75,-2.13,-11.95,-10.35,-11.60,-8.20,-11.80,-9.80,-7.80,-12.70,-11.20,-8.10,-10.50,-9.40,-1.80,-4.70,-1.80,-4.70,-2.73,-6.09,-1.45,-1.82,-1.27,-4.18,-9.45,-6.09,-5.55,-8.82,-10.55,-6.18,-15.09,-7.27,-7.91,-9.36,-7.73,-5.55,-3.73,1.45,6.64,5.59,2.69,14.36,11.27,6.81,11.17,5.17,3.36,0.81,1.17,1.08,1.90,-4.01,-3.55,-2.19,4.69,0.99,3.99,-6.41,-4.61,-0.86,-0.31,8.37,-16.96,-8.95,-5.63,-26.53,-9.11,-7.00,-4.17,-6.08,3.92,5.75,-11.28,-2.31,-15.47,9.83,9.09,12.68,20.00,5.06,11.16,20.03,27.22,-6.42,6.61,1.79,21.91,5.14,9.90,11.75,5.59,23.56,8.50,22.89,5.60,7.16,4.49,24.44,2.85,14.93,-3.85,-6.24,-12.45,-19.37,-35.27,-31.48,-29.94,14.05,-57.85,-44.60,-69.20,-40.80,-29.80,-65.80,-52.70,-50.20,-64.10,-62.50,-60.40,-55.80,-59.70,-55.80,-59.70,-38.73,-32.09,-37.45,-36.82,-15.27,-27.18,-2
2.!
>  45,-29.09,-51.55,-21.82,-29.55,-31.18,-30.09,-42.27,-39.91,-39.36,-33.73,-46.55,-51.73,-48.55,-46.36,-42.41,-50.31,-40.64,-28.73,17.81,-18.83,-37.83,-33.64,-19.19,-12.83,-48.92,-20.10,-27.01,-33.55,-17.19,-27.31,-29.01,-30.01,-31.41,-39.00,-45.92,-44.76,-47.35,-72.68,-63.45,-56.63,18.33,-25.20,-46.26,-30.33,-30.71,-19.79,-22.54,-5.13,9.02,-19.68,-7.18,-8.22,-17.13,-15.61,-20.18,-21.70,-14.35,-16.31,-49.09,-38.80,-43.93,-35.34,-43.57,-30.58,-7.39,3.21,-1.68,-22.23,-16.06,-18.12,12.40,-37.51,-9.94,-26.96,-14.88,-24.52,-26.91,-38.30,-66.25,-86.42,-82.63,-81.08,-49.81,-1.04,-50.57,-48.79,-8.15,-39.65,-50.39,-51.08,-55.14,-47.35,-44.30,-49.48,-51.00,-67.39,-67.60,-21.89,-30.35,-41.01,-56.76,-26.45,-26.83,-8.39,-16.92,-16.69,-25.99,-34.07,-28.28,-22.49,-13.95,-34.95,-3.85,-0.60,-17.20,1.20,15.20,-5.80,3.30,4.80,-6.10,-6.50,-6.40,0.20,-3.70,0.20,-3.70,13.27,15.91,13.55,11.18,28.73,18.82,21.55,15.91,0.45,19.18,18.45,18.82,14.91,5.73,5.09,-1.36,15.27,7.45,4.27,8.45,10.64,10.59,17.
69!
>  ,17.36,26.27,-28.19,
> 33.17,13.17,21.36,25.81,33.17,9.08,25.90,19.99,19.45,22.81,21.69,20.99,16.59,14.34,8.95,12.55,11.07,-17.82,-6.76,-1.63,3.09,20.52,5.25,16.91,13.79,29.58,28.37,29.92,-6.22,32.44,40.07,37.19,32.55,7.25,33.16,33.16,40.51,38.56,5.78,16.98,12.45,21.05,10.38,25.81,35.28,33.69,47.09,26.54,31.18,29.12,27.64,17.35,42.79,23.33,38.46,22.72,21.86,10.47,-5.29,-31.55,-27.76,-26.22,-5.74,-11.83,-30.88,-1.67,-6.75,4.42,5.87,3.66,-0.40,1.30,4.34,-3.89,0.69,-15.71,-8.96,-27.49,-29.95,-41.61,-49.36,-40.29,-38.23,-25.28,-23.15,-25.36,-33.74,-33.28,-32.67,-29.62,-25.97,-28.73,-33.09,-39.45,-39.82,-35.27,-14.18,-7.45,-26.09,-24.55,-13.82,-2.55,-9.18,-17.09,-19.27,-29.91,-15.36,-14.73,-10.55,-55.73,-78.55,-99.36,-87.64,-50.73,-50.19,-77.83,-43.83,-20.64,-12.19,-7.83,-5.92,7.90,18.99,14.45,-2.19,-2.31,-6.01,-7.01,-10.41,-32.47,-47.01,-58.35,-89.59,-92.63,-52.20,-73.87,-68.61,-65.64,-62.95,-54.11,-36.70,14.03,-42.41,-40.88,-44.06,-53.54,-61.60,-49.09,-52.21,-75.94,-69.96,-83.98,-64.87,-90.85,-83.5
4,!
>  -90.07,-79.64,-70.42,-61.85,-70.61,-42.12,-68.59)
> 
> breaks<-c(-150,-140,-130,-120,-110,-100,-90,-80,-70,-60,-50,-40,-30,-20,-10,0,10,20,30,40,50,60,70,80,90,100,110,120,130,140,150)
> hist(d.resid,breaks,freq=FALSE,main="Field 7: Ground Water Table Depth
> Residuals (Avg. - Measured Depth)",xlab="Residuals (cm)", col="grey")
> plot(function(d.resid)
> dnorm(d.resid,m=-4.007e-15,s=35.571),-150,150,n=400,add=TRUE,col="black",lwd=3)
> 
> http://n4.nabble.com/file/n998495/Image2.png 
> 
> I would like to do the same thing with the following lines of code, only
> this time fit a log-normal distribution.  
> 
> app_depths<-c(2.133069498, 1.633840467, 4.946905858, 3.74316825, 2.29580986,
> 3.156489013, 3.616272192, 20.65750905, 2.878995473, 12.59126936, 14.2215439,
> 7.892111284, 4.656569671, 3.350734491, 5.457109794, 3.580297328,
> 12.66226362, 4.491926672, 7.1, 13.5, 11.1, 14.1, 7.3, 8.6, 3.5, 5, 7.1, 7,
> 15.1, 9.1, 6.5, 13.4, 15.2, 10.5, 11.8, 8.8, 8, 9, 20.4, 15.6, 14.6, 7.1,
> 3.6, 4.8, 6.4, 10.1, 9.5, 24.5, 16.1, 6.5, 3.3, 3.7, 3.3, 5.3, 4, 2.4, 5.2,
> 3.7, 3.5, 7, 5.6, 5.9, 8.2, 5.2, 12.7, 6.3, 6.6, 1.9, 2.2, 4.1, 4.7, 
> 7.9, 14.4, 16.2, 8.8, 14.1, 12.7, 15.1, 20.2, 4.9, 7.9, 5, 7.9, 4.6, 5.7,
> 32.3, 7.7, 16, 13.9, 16.8, 7.7, 13.6, 5.1, 11.4, 4.59, 7.35, 4.14, 3.82,
> 1.95, 3.06, 7.4, 8.8, 11, 2, 6.6, 7, 5.7, 5.8, 6.2, 2.9, 7.8, 5.7, 12.2,
> 5.8, 5.8, 26.7, 22, 13.5, 7.9, 5.64, 2.03, 1.7, 2.78, 5.78, 2.76, 24.6, 15,
> 12.32, 23.79, 14.3, 11.7, 9.1, 9.4, 8.24, 7.1, 5.9, 4.6, 4.3, 2.96, 7.9,
> 11.13, 5.3, 5.8, 1.7, 7.12, 8.3, 7.83, 6.62, 42.67, 34.76, 41.68, 6.07,
> 4.43, 1.2, 1.8, 1.1, 1.1, 1.3, 1.46, 1.46, 10.31, 2.96, 
> 22.17, 2.75, 3.6, 9.8, 9.68, 5.8, 7.23, 10.06, 4.117439286, 11.63456013,
> 9.92, 7.40, 9.78, 4.37, 7.12, 7.57, 27.03, 3.43, 6.71, 7.74, 10.01, 7.78,
> 14.95, 9.98, 8.07, 10.73, 8.82, 15.08, 12.72, 4.27, 10.07, 6.45, 16.67,
> 16.28, 7.21, 21.46, 21.52, 14.93, 9.03, 26.70, 14.90, 6.12, 17.88, 13.72)
> 
> breaks<-c(0,2,4,6,8,10,12,14,16,18,20,22,24,26,28,30,32,34,36,38,40,42,44)
> hist(app_depths,breaks,freq=FALSE,main="LARV Irrigation Application Depths
> (in) 2004-2007",xlab="Application Depth (in)",col="grey")
> plot(function(app_depths)
> dlnorm(app_depths,meanlog=mean(app_depths),sdlog=sd(app_depths)),0,44,add=TRUE,col="black",lwd=3)
> 
Don't you need meanlog=mean(log()), etc?
I usually use curve():

hist(app_depths,breaks,freq=FALSE)
curve(dlnorm(x, meanlog=mean(log(app_depths)),
    sdlog=sd(log(app_depths))), add=TRUE, col=1, lwd=3)

  -Peter Ehlers

> Problem is, I get a plot that doesn't look right,
> 
> http://n4.nabble.com/file/n998495/Image3.png 
>  
> If there is an obvious error as to why the pdf line doesn't fit the data,
> I'm unable to find it.  Any help would be greatly appreciated.
> 
> Respectfully,
> Eric

-- 
Peter Ehlers
University of Calgary
403.202.3921


From armgong at yahoo.com  Tue Jan  5 02:46:48 2010
From: armgong at yahoo.com (Gong Yu)
Date: Mon, 4 Jan 2010 17:46:48 -0800 (PST)
Subject: [Rd] I have finished compiling of R 64 bit on 64 bit Windows
	use MINGW64
In-Reply-To: <4B41BEDB.6010503@statistik.tu-dortmund.de>
Message-ID: <801699.74671.qm@web45906.mail.sp1.yahoo.com>

Dear Uwe Ligges

1. I use ftp://ftp.equation.com/gcc/gcc-4.5-20091231-64.exe + msys +perl, and the 
source code i used is R 2.11.0 devel(i not sure the exact svn version,but it is last month)

2. I not familiar with diff ,so I afraid I can't give you a patch,but alternative I can upload the source my changed or the whole source code.

3. mainly changed 3 manifest files in gnuwin32\front-end , config64.h graphappmain.c,rterm.c,rgui.c, makefile in gunwin32, rscript.c in src\unix 

4. also changed some c files in xz dir,because mingw64     

if you can provide a space I can first upload the R 64 bin file ,the tool-chain i used, then the whole R source (because there still some problems in the sources ,so it maybe a few day later)

Best wishes,

Gong Yu


--- On Mon, 1/4/10, Uwe Ligges <ligges at statistik.tu-dortmund.de> wrote:

> From: Uwe Ligges <ligges at statistik.tu-dortmund.de>
> Subject: Re: [Rd] I have finished compiling of R 64 bit on 64 bit Windows use MINGW64
> To: "Arm Gong" <armgong at yahoo.com>
> Cc: r-devel at r-project.org, R-windows at R-project.org
> Date: Monday, January 4, 2010, 10:11 AM
> Dear Arm Gong,
> 
> we are certianly very interested. How many files (and
> which) did you patch, which version of the different MinGW
> tools did you use?
> 
> It would be nice if we would be able to build 64-bit
> versions of CRAN.
> 
> Can you send the information (including required patches)
> in a mail message (to R-windows at R-project.org)
> or can you upload to a side yourself? Otherwise I can
> arrange an upload and make it available later on.
> 
> Best wishes,
> Uwe Ligges
> 
> 
> 
> 
> 
> Arm Gong wrote:
> > hi ,everyone
> > I have finished compiling of R 64 bit on 64 bit
> Windows system by using MINGW64, include the standard and
> recommended packages.tested it on Windows 2008 server R2
> X64.it run very well.I wander anyone interested in it ,and
> anyone who want to continue testing? it with me??
> and who can provide a space let me upload the R files
> > Best wishes!? ? ? ? ? ?
> ? ? ? ? 2010/1/4? ? ?
> ? ? ? ? ? ? ? ?
> ? ? ? ? ? ? ? ?
> ? ???Gong Yu
> > 
> > 
> > 
> > 
> >? ? ??????
> [[alternative HTML version deleted]]
> > 
> > 
> > 
> >
> ------------------------------------------------------------------------
> > 
> > ______________________________________________
> > R-devel at r-project.org
> mailing list
> > https://stat.ethz.ch/mailman/listinfo/r-devel
> 





From xie at yihui.name  Tue Jan  5 03:39:28 2010
From: xie at yihui.name (Yihui Xie)
Date: Mon, 4 Jan 2010 20:39:28 -0600
Subject: [Rd] I have finished compiling of R 64 bit on 64 bit Windows
	use MINGW64
In-Reply-To: <801699.74671.qm@web45906.mail.sp1.yahoo.com>
References: <4B41BEDB.6010503@statistik.tu-dortmund.de>
	<801699.74671.qm@web45906.mail.sp1.yahoo.com>
Message-ID: <89b6b8c91001041839x1a7485f4v2ebf7938cf3f9d23@mail.gmail.com>

Hi Gong,

I can provide an FTP space if you have not found one yet. Your files
will be put in http://download.cos.name/incoming/

I'll send you the account information in a private email later.

Regards,
Yihui
--
Yihui Xie <xieyihui at gmail.com>
Phone: 515-294-6609 Web: http://yihui.name
Department of Statistics, Iowa State University
3211 Snedecor Hall, Ames, IA



On Mon, Jan 4, 2010 at 7:46 PM, Gong Yu <armgong at yahoo.com> wrote:
> Dear Uwe Ligges
>
> 1. I use ftp://ftp.equation.com/gcc/gcc-4.5-20091231-64.exe + msys +perl, and the
> source code i used is R 2.11.0 devel(i not sure the exact svn version,but it is last month)
>
> 2. I not familiar with diff ,so I afraid I can't give you a patch,but alternative I can upload the source my changed or the whole source code.
>
> 3. mainly changed 3 manifest files in gnuwin32\front-end , config64.h graphappmain.c,rterm.c,rgui.c, makefile in gunwin32, rscript.c in src\unix
>
> 4. also changed some c files in xz dir,because mingw64
>
> if you can provide a space I can first upload the R 64 bin file ,the tool-chain i used, then the whole R source (because there still some problems in the sources ,so it maybe a few day later)
>
> Best wishes,
>
> Gong Yu
>
>
> --- On Mon, 1/4/10, Uwe Ligges <ligges at statistik.tu-dortmund.de> wrote:
>
>> From: Uwe Ligges <ligges at statistik.tu-dortmund.de>
>> Subject: Re: [Rd] I have finished compiling of R 64 bit on 64 bit Windows use MINGW64
>> To: "Arm Gong" <armgong at yahoo.com>
>> Cc: r-devel at r-project.org, R-windows at R-project.org
>> Date: Monday, January 4, 2010, 10:11 AM
>> Dear Arm Gong,
>>
>> we are certianly very interested. How many files (and
>> which) did you patch, which version of the different MinGW
>> tools did you use?
>>
>> It would be nice if we would be able to build 64-bit
>> versions of CRAN.
>>
>> Can you send the information (including required patches)
>> in a mail message (to R-windows at R-project.org)
>> or can you upload to a side yourself? Otherwise I can
>> arrange an upload and make it available later on.
>>
>> Best wishes,
>> Uwe Ligges
>>
>>
>>
>>
>>
>> Arm Gong wrote:
>> > hi ,everyone
>> > I have finished compiling of R 64 bit on 64 bit
>> Windows system by using MINGW64, include the standard and
>> recommended packages.tested it on Windows 2008 server R2
>> X64.it run very well.I wander anyone interested in it ,and
>> anyone who want to continue testing? it with me?
>> and who can provide a space let me upload the R files
>> > Best wishes!
>> ? ? ? ? 2010/1/4
>>
>>
>> ? ???Gong Yu
>> >


From armgong at yahoo.com  Tue Jan  5 04:09:11 2010
From: armgong at yahoo.com (Gong Yu)
Date: Mon, 4 Jan 2010 19:09:11 -0800 (PST)
Subject: [Rd] I have finished compiling of R 64 bit on 64 bit Windows
	use MINGW64
In-Reply-To: <89b6b8c91001041839x1a7485f4v2ebf7938cf3f9d23@mail.gmail.com>
Message-ID: <458771.78180.qm@web45907.mail.sp1.yahoo.com>

it's done,Uploaded, filename is R-64Bit-for-Win64.rar 

thanks,xie

--- On Tue, 1/5/10, Yihui Xie <xie at yihui.name> wrote:

> From: Yihui Xie <xie at yihui.name>
> Subject: Re: [Rd] I have finished compiling of R 64 bit on 64 bit Windows use  MINGW64
> To: "Gong Yu" <armgong at yahoo.com>
> Cc: "Uwe Ligges" <ligges at statistik.tu-dortmund.de>, "R-windows" <R-windows at r-project.org>, "r-devel" <r-devel at r-project.org>
> Date: Tuesday, January 5, 2010, 2:39 AM
> Hi Gong,
> 
> I can provide an FTP space if you have not found one yet.
> Your files
> will be put in http://download.cos.name/incoming/
> 
> I'll send you the account information in a private email
> later.
> 
> Regards,
> Yihui
> --
> Yihui Xie <xieyihui at gmail.com>
> Phone: 515-294-6609 Web: http://yihui.name
> Department of Statistics, Iowa State University
> 3211 Snedecor Hall, Ames, IA
> 
> 
> 
> On Mon, Jan 4, 2010 at 7:46 PM, Gong Yu <armgong at yahoo.com>
> wrote:
> > Dear Uwe Ligges
> >
> > 1. I use ftp://ftp.equation.com/gcc/gcc-4.5-20091231-64.exe
> + msys +perl, and the
> > source code i used is R 2.11.0 devel(i not sure the
> exact svn version,but it is last month)
> >
> > 2. I not familiar with diff ,so I afraid I can't give
> you a patch,but alternative I can upload the source my
> changed or the whole source code.
> >
> > 3. mainly changed 3 manifest files in
> gnuwin32\front-end , config64.h
> graphappmain.c,rterm.c,rgui.c, makefile in gunwin32,
> rscript.c in src\unix
> >
> > 4. also changed some c files in xz dir,because
> mingw64
> >
> > if you can provide a space I can first upload the R 64
> bin file ,the tool-chain i used, then the whole R source
> (because there still some problems in the sources ,so it
> maybe a few day later)
> >
> > Best wishes,
> >
> > Gong Yu
> >
> >
> > --- On Mon, 1/4/10, Uwe Ligges <ligges at statistik.tu-dortmund.de>
> wrote:
> >
> >> From: Uwe Ligges <ligges at statistik.tu-dortmund.de>
> >> Subject: Re: [Rd] I have finished compiling of R
> 64 bit on 64 bit Windows use MINGW64
> >> To: "Arm Gong" <armgong at yahoo.com>
> >> Cc: r-devel at r-project.org,
> R-windows at R-project.org
> >> Date: Monday, January 4, 2010, 10:11 AM
> >> Dear Arm Gong,
> >>
> >> we are certianly very interested. How many files
> (and
> >> which) did you patch, which version of the
> different MinGW
> >> tools did you use?
> >>
> >> It would be nice if we would be able to build
> 64-bit
> >> versions of CRAN.
> >>
> >> Can you send the information (including required
> patches)
> >> in a mail message (to R-windows at R-project.org)
> >> or can you upload to a side yourself? Otherwise I
> can
> >> arrange an upload and make it available later on.
> >>
> >> Best wishes,
> >> Uwe Ligges
> >>
> >>
> >>
> >>
> >>
> >> Arm Gong wrote:
> >> > hi ,everyone
> >> > I have finished compiling of R 64 bit on 64
> bit
> >> Windows system by using MINGW64, include the
> standard and
> >> recommended packages.tested it on Windows 2008
> server R2
> >> X64.it run very well.I wander anyone interested in
> it ,and
> >> anyone who want to continue testing? it with me?
> >> and who can provide a space let me upload the R
> files
> >> > Best wishes!
> >> ? ? ? ? 2010/1/4
> >>
> >>
> >> ? ???Gong Yu
> >> >
> 





From allwrigh at maths.ox.ac.uk  Tue Jan  5 13:19:56 2010
From: allwrigh at maths.ox.ac.uk (David John Allwright)
Date: Tue, 5 Jan 2010 12:19:56 +0000 (GMT)
Subject: [Rd] apparently incorrect p-values from 2-sided
 Kolmogorov-Smirnov test (PR#14145)
In-Reply-To: <alpine.LRH.2.01.0912180826140.16373@hymn13.u.washington.edu>
References: <alpine.LRH.2.01.0912180826140.16373@hymn13.u.washington.edu>
Message-ID: <alpine.DEB.1.00.1001051216380.7763@swamp-thing.maths.ox.ac.uk>

Dear Thomas, Thank you, yes, that sounds good, and I take the point about 
integer overflow.
Various questions:
(a) Is there some way I can try out the routine with this modification? (I 
am on a Linux system where I am just a user - I cannot install new 
versions of software myself) ?
(b) Is there a reference you can give me to a published paper where the 
method being used to compute the p-values is described?
Many thanks,
David.
------------------------------------------------------------------------------
On Fri, 18 Dec 2009, tlumley at u.washington.edu wrote:

>
>
> I've fixed this by adding 0.5/mn to q.  The problem (at least in principle) 
> with multiplying them all up is integer overflow.
>
> By the time 0.5/mn underflows to zero, missing one value in the distribution 
> won't matter.
>
>     -thomas
>
>
> On Fri, 18 Dec 2009, David John Allwright wrote:
>
>> Dear Thomas, Right, thank you. Yes, I haven't looked at the source code 
>> (because I don't know C) but something like what you mention could well 
>> cause the kind of problems I am seeing: a loop being exectued one too few 
>> or one too many times. And yes, I think those quantities should be 
>> multiplied up by m*n to all become integers so we escape rounding error 
>> problems. David.
>> 
>> ------------------------------------------------------------------------------
>> On Wed, 16 Dec 2009, tlumley at u.washington.edu wrote:
>> 
>>> On Tue, 15 Dec 2009, allwrigh at maths.ox.ac.uk wrote; (in part)
>>> 
>>>> 
>>>> x<-1:5
>>>> y<-c(2.5,4.5)
>>>> ks.test(x,y)
>>>> 
>>>> The value of the D_2,5 statistic is calculated as 0.4 correctly, but the
>>>> p-value is stated by R as 1, though in fact it should be 20/21=0.9524
>>> 
>>> 
>>> What we seem to have here is a rounding error problem.
>>> 
>>> In ks.c:psmirnov2x,  there is a double loop including
>>> 	    if(fabs(i / md - j / nd) > q)
>>> 		u[j] = 0;
>>> 
>>> where md=2, nd=5, and q=3/10.
>>> 
>>> Now,  to full precision  abs(1/2 - 4/5) > 3/10 is false, but at least on 
>>> my MacBook it is true in C double precision.
>>> 
>>> I'm not sure why the loop is working with doubles, since multiplying by 
>>> m*n should make everything an integer.
>>>
>>>     -thomas
>>> 
>>> Thomas Lumley			Assoc. Professor, Biostatistics
>>> tlumley at u.washington.edu	University of Washington, Seattle
>>> 
>>> 
>>> 
>> 
>
> Thomas Lumley			Assoc. Professor, Biostatistics
> tlumley at u.washington.edu	University of Washington, Seattle
>
>
>


From allwrigh at maths.ox.ac.uk  Tue Jan  5 13:25:14 2010
From: allwrigh at maths.ox.ac.uk (allwrigh at maths.ox.ac.uk)
Date: Tue,  5 Jan 2010 13:25:14 +0100 (CET)
Subject: [Rd] apparently incorrect p-values from 2-sided
	Kolmogorov-Smirnov (PR#14178)
Message-ID: <20100105122514.A5E9B282EFF9@mail.pubhealth.ku.dk>

Dear Thomas, Thank you, yes, that sounds good, and I take the point about 
integer overflow.
Various questions:
(a) Is there some way I can try out the routine with this modification? (I 
am on a Linux system where I am just a user - I cannot install new 
versions of software myself) ?
(b) Is there a reference you can give me to a published paper where the 
method being used to compute the p-values is described?
Many thanks,
David.
------------------------------------------------------------------------------
On Fri, 18 Dec 2009, tlumley at u.washington.edu wrote:

>
>
> I've fixed this by adding 0.5/mn to q.  The problem (at least in principle) 
> with multiplying them all up is integer overflow.
>
> By the time 0.5/mn underflows to zero, missing one value in the distribution 
> won't matter.
>
>     -thomas
>
>
> On Fri, 18 Dec 2009, David John Allwright wrote:
>
>> Dear Thomas, Right, thank you. Yes, I haven't looked at the source code 
>> (because I don't know C) but something like what you mention could well 
>> cause the kind of problems I am seeing: a loop being exectued one too few 
>> or one too many times. And yes, I think those quantities should be 
>> multiplied up by m*n to all become integers so we escape rounding error 
>> problems. David.
>> 
>> ------------------------------------------------------------------------------
>> On Wed, 16 Dec 2009, tlumley at u.washington.edu wrote:
>> 
>>> On Tue, 15 Dec 2009, allwrigh at maths.ox.ac.uk wrote; (in part)
>>> 
>>>> 
>>>> x<-1:5
>>>> y<-c(2.5,4.5)
>>>> ks.test(x,y)
>>>> 
>>>> The value of the D_2,5 statistic is calculated as 0.4 correctly, but the
>>>> p-value is stated by R as 1, though in fact it should be 20/21=0.9524
>>> 
>>> 
>>> What we seem to have here is a rounding error problem.
>>> 
>>> In ks.c:psmirnov2x,  there is a double loop including
>>> 	    if(fabs(i / md - j / nd) > q)
>>> 		u[j] = 0;
>>> 
>>> where md=2, nd=5, and q=3/10.
>>> 
>>> Now,  to full precision  abs(1/2 - 4/5) > 3/10 is false, but at least on 
>>> my MacBook it is true in C double precision.
>>> 
>>> I'm not sure why the loop is working with doubles, since multiplying by 
>>> m*n should make everything an integer.
>>>
>>>     -thomas
>>> 
>>> Thomas Lumley			Assoc. Professor, Biostatistics
>>> tlumley at u.washington.edu	University of Washington, Seattle
>>> 
>>> 
>>> 
>> 
>
> Thomas Lumley			Assoc. Professor, Biostatistics
> tlumley at u.washington.edu	University of Washington, Seattle
>
>
>


From hb at stat.berkeley.edu  Wed Jan  6 00:34:49 2010
From: hb at stat.berkeley.edu (Henrik Bengtsson)
Date: Tue, 5 Jan 2010 15:34:49 -0800
Subject: [Rd] "Human-style" sort() of alphanum strings?
Message-ID: <59d7961d1001051534g43275960x258d0262db4f0ea1@mail.gmail.com>

I know it is fairly easy to implement (though not always well
defined), but is there an existing sort function out there that takes
alphanum strings and sort them in a "human" fashion?  For example,
instead of:

z1.doc z10.doc z100.doc z101.doc z11.doc z2.doc

it should out put:

z1.doc z2.doc z10.doc z11.doc z100.doc z101.doc

(from http://www.davekoelle.com/alphanum.html).

/Henrik


From ggrothendieck at gmail.com  Wed Jan  6 00:48:52 2010
From: ggrothendieck at gmail.com (Gabor Grothendieck)
Date: Tue, 5 Jan 2010 18:48:52 -0500
Subject: [Rd] "Human-style" sort() of alphanum strings?
In-Reply-To: <59d7961d1001051534g43275960x258d0262db4f0ea1@mail.gmail.com>
References: <59d7961d1001051534g43275960x258d0262db4f0ea1@mail.gmail.com>
Message-ID: <971536df1001051548q60d92422q1c922d826cb12e4e@mail.gmail.com>

See mixedsort in gtools.  Also on http://gsubfn.googlecode.com see
mixsort example in the section starting ### more examples

On Tue, Jan 5, 2010 at 6:34 PM, Henrik Bengtsson <hb at stat.berkeley.edu> wrote:
> I know it is fairly easy to implement (though not always well
> defined), but is there an existing sort function out there that takes
> alphanum strings and sort them in a "human" fashion? ?For example,
> instead of:
>
> z1.doc z10.doc z100.doc z101.doc z11.doc z2.doc
>
> it should out put:
>
> z1.doc z2.doc z10.doc z11.doc z100.doc z101.doc
>
> (from http://www.davekoelle.com/alphanum.html).
>
> /Henrik
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>


From armgong at yahoo.com  Wed Jan  6 02:48:26 2010
From: armgong at yahoo.com (Gong Yu)
Date: Tue, 5 Jan 2010 17:48:26 -0800 (PST)
Subject: [Rd] the source code and tool-chain for  R64-win64  uploaded
Message-ID: <74635.11575.qm@web45912.mail.sp1.yahoo.com>

I uploaded the whole R 64 for win64 using MINGW64, include the source code, bin and tool-chain.

the source code and bin can download at:
http://download.cos.name/incoming/r64-src-and-bin-for-win64.zip

(attention: the source code may be contain error,you are welcome report bugs to me)

the tool-chain can download at:
http://download.cos.name/incoming/Rtools64.zip

(attention: the gcc included in the tool-chain is a native  gcc 4.5.0 for win64(20091231),
 I download from  http://www.equation.com/servlet/equation.cmd?fa=fortran  
 and I think it's free and GPLed,so we can use it,and if you have any question about gcc ,pls write a mail to the webmaster of equation.com )

best wishs.

Gong Yu
2010/1/6


From armgong at yahoo.com  Wed Jan  6 10:21:06 2010
From: armgong at yahoo.com (Gong Yu)
Date: Wed, 6 Jan 2010 01:21:06 -0800 (PST)
Subject: [Rd] I have finished compiling of R 64 bit on 64 bit Windows
	use MINGW64
In-Reply-To: <4B4451F8.5000803@statistik.tu-dortmund.de>
References: <801699.74671.qm@web45906.mail.sp1.yahoo.com>
	<4B433689.2010600@statistik.tu-dortmund.de>
	<alpine.LFD.2.00.1001051306290.32750@gannet.stats.ox.ac.uk>
	<612963.47100.qm@web45909.mail.sp1.yahoo.com>
	<4B4451B3.4090107@statistik.tu-dortmund.de>
	<4B4451F8.5000803@statistik.tu-dortmund.de>
Message-ID: <880471.49761.qm@web45905.mail.sp1.yahoo.com>

When I try to upload to your sever,filezilla report error ,so I upload to other place
the source code and bin can download at:
http://download.cos.name/incoming/r64-src-and-bin-for-win64.zip

(attention: the source code may be contain error,you are welcome report bugs to me)

the tool-chain can download at:
http://download.cos.name/incoming/Rtools64.zip

(attention: the gcc included in the tool-chain is a native  gcc 4.5.0 for win64(20091231),
I download from  http://www.equation.com/servlet/equation.cmd?fa=fortran  
and it's free and GPLed,so we can use it )

the change file is 
1.  3 manifest files in gnuwin32\front-end\*.manifest,which is have wrong arch
2.  gnuwin32\fix\h\config64.h
3.  graphappmain.c,rterm.c,rgui.c (main change)
4.  makefile and mkrules in gunwin32,
5.  rscript.c in src\unix
6.  every c file in extra\xz\*.c that have a main function (just comment out or delete the main function)
7.  change the  R\share\make\var.mk,(comment out the tcltk)
8.  may be more files, but I can't recall now,so if there have an error then you can tell me,i will try figure it out

----- Original Message ----
From: Uwe Ligges <ligges at statistik.tu-dortmund.de>
To: Gong Yu <armgong at yahoo.com>
Cc: Prof Brian Ripley <ripley at stats.ox.ac.uk>; R-windows at R-project.org
Sent: Wed, January 6, 2010 5:03:52 PM
Subject: Re: [Rd] I have finished compiling of R 64 bit on 64 bit Windows use MINGW64



On 06.01.2010 10:02, Uwe Ligges wrote:
>
>
> On 06.01.2010 01:54, Gong Yu wrote:
>> I will follow the GPL rule, upload the source code, but i can't make
>> diff, because in my office's pc there is no svn and gnutools.
>
> Thanks. If you upload the sources and indicate which files you have
> changed, we can easily diff ourselves.


I see you tried to upload, but the file came in empty.

Best wishes,
uwe



> Best wishes,
> Uwe
>
>
>> ----- Original Message ----
>> From: Prof Brian Ripley<ripley at stats.ox.ac.uk>
>> To: Uwe Ligges<ligges at statistik.tu-dortmund.de>
>> Cc: Gong Yu<armgong at yahoo.com>; R-windows at R-project.org
>> Sent: Tue, January 5, 2010 9:20:59 PM
>> Subject: Re: [Rd] I have finished compiling of R 64 bit on 64 bit
>> Windows use MINGW64
>>
>> On Tue, 5 Jan 2010, Uwe Ligges wrote:
>>
>>> Dear Yu,
>>>
>>> thank you very much for the informations and the files.
>>> I just allocated some matrices and it seems to works (and allocated
>>> up to 4GB for me - stopped due to an R internal limit, obviously).
>>>
>>> Anyway, it would be really helpful to get the sources - the binary
>>> does ot really help for making the 64-bit version (including daily
>>> patched and devel versions and all packages) available to the public.
>>> This would also allow to run the regression tests and apply some
>>> other checks.
>>
>> Can you use a portable archive format rather than .rar? I'll need to
>> install some means of unpacking that (7zip?). R itself can produce a
>> .tar.gz (or even .tar.zx) file.
>>
>> Please note (like my comment below about that 'mingw64' distribution)
>> that you are not allowed by R's licence to distribute such a binary
>> build without the modified sources you used. So we really do need the
>> sources to keep this above board (and sending it to us is
>> 'distribution').
>>
>> Brian Ripley
>>
>>> You can upload with anonymous access to
>>> ftp://win-builder.r-project.org/R-devel/
>>>
>>> Thank you very much!
>>>
>>> Best wishes,
>>> Uwe
>>>
>>>
>>>
>>> On 05.01.2010 02:46, Gong Yu wrote:
>>>> Dear Uwe Ligges
>>>>
>>>> 1. I use ftp://ftp.equation.com/gcc/gcc-4.5-20091231-64.exe + msys
>>>> +perl,
>>
>> Aha, that is not the distribution from the mingw64 project. Is it a
>> native Win64 toolchain? Where are the sources (which GPL requires to
>> be made available in a non-proprietary format in parallel)?
>>
>>>> and the
>>>> source code i used is R 2.11.0 devel(i not sure the exact svn
>>>> version,but it is last month)
>>>>
>>>> 2. I not familiar with diff ,so I afraid I can't give you a
>>>> patch,but alternative I can upload the source my changed or the
>>>> whole source code.
>>>>
>>>> 3. mainly changed 3 manifest files in gnuwin32\front-end ,
>>>> config64.h graphappmain.c,rterm.c,rgui.c, makefile in gunwin32,
>>>> rscript.c in src\unix
>>>>
>>>> 4. also changed some c files in xz dir,because mingw64
>>>>
>>>> if you can provide a space I can first upload the R 64 bin file ,the
>>>> tool-chain i used, then the whole R source (because there still some
>>>> problems in the sources ,so it maybe a few day later)
>>>>
>>>> Best wishes,
>>>>
>>>> Gong Yu
>>>>
>>>>
>>>> --- On Mon, 1/4/10, Uwe Ligges<ligges at statistik.tu-dortmund.de> wrote:
>>>>
>>>>> From: Uwe Ligges<ligges at statistik.tu-dortmund.de>
>>>>> Subject: Re: [Rd] I have finished compiling of R 64 bit on 64 bit
>>>>> Windows use MINGW64
>>>>> To: "Arm Gong"<armgong at yahoo.com>
>>>>> Cc: r-devel at r-project.org, R-windows at R-project.org
>>>>> Date: Monday, January 4, 2010, 10:11 AM
>>>>> Dear Arm Gong,
>>>>>
>>>>> we are certianly very interested. How many files (and
>>>>> which) did you patch, which version of the different MinGW
>>>>> tools did you use?
>>>>>
>>>>> It would be nice if we would be able to build 64-bit
>>>>> versions of CRAN.
>>>>>
>>>>> Can you send the information (including required patches)
>>>>> in a mail message (to R-windows at R-project.org)
>>>>> or can you upload to a side yourself? Otherwise I can
>>>>> arrange an upload and make it available later on.
>>>>>
>>>>> Best wishes,
>>>>> Uwe Ligges
>>>>>
>>>>>
>>>>>
>>>>>
>>>>>
>>>>> Arm Gong wrote:
>>>>>> hi ,everyone
>>>>>> I have finished compiling of R 64 bit on 64 bit
>>>>> Windows system by using MINGW64, include the standard and
>>>>> recommended packages.tested it on Windows 2008 server R2
>>>>> X64.it run very well.I wander anyone interested in it ,and
>>>>> anyone who want to continue testing it with me?
>>>>> and who can provide a space let me upload the R files
>>>>>> Best wishes!
>>>>> 2010/1/4
>>>>>
>>>>>
>>>>> Gong Yu
>>>>>>
>>>>>>
>>>>>>
>>>>>>
>>>>>>
>>>>> [[alternative HTML version deleted]]
>>>>>>
>>>>>>
>>>>>>
>>>>>>
>>>>> ------------------------------------------------------------------------
>>>>>
>>>>>>
>>>>>> ______________________________________________
>>>>>> R-devel at r-project.org
>>>>> mailing list
>>>>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>>>>
>>>>
>>>>
>>>>
>>>
>>
>> -- Brian D. Ripley, ripley at stats.ox.ac.uk
>> Professor of Applied Statistics, http://www.stats.ox.ac.uk/~ripley/
>> University of Oxford, Tel: +44 1865 272861 (self)
>> 1 South Parks Road, +44 1865 272866 (PA)
>> Oxford OX1 3TG, UK Fax: +44 1865 272595
>>
>>
>>
>>
>>
>


From ripley at stats.ox.ac.uk  Wed Jan  6 10:37:07 2010
From: ripley at stats.ox.ac.uk (Prof Brian Ripley)
Date: Wed, 6 Jan 2010 09:37:07 +0000 (GMT)
Subject: [Rd] I have finished compiling of R 64 bit on 64 bit Windows
 use MINGW64
In-Reply-To: <880471.49761.qm@web45905.mail.sp1.yahoo.com>
References: <801699.74671.qm@web45906.mail.sp1.yahoo.com>
	<4B433689.2010600@statistik.tu-dortmund.de>
	<alpine.LFD.2.00.1001051306290.32750@gannet.stats.ox.ac.uk>
	<612963.47100.qm@web45909.mail.sp1.yahoo.com>
	<4B4451B3.4090107@statistik.tu-dortmund.de>
	<4B4451F8.5000803@statistik.tu-dortmund.de>
	<880471.49761.qm@web45905.mail.sp1.yahoo.com>
Message-ID: <alpine.LFD.2.00.1001060933550.3956@gannet.stats.ox.ac.uk>

I have successfully downloaded the files and looked at the source 
changes.  I did that on Linux, and am now downloading on Vista64.

I think I understand most of the changes, and will get back to you 
later if I have any questions.

BTW, where in the world are you (so I can undersand what timezone you 
are in)?

Brian Ripley

On Wed, 6 Jan 2010, Gong Yu wrote:

> When I try to upload to your sever,filezilla report error ,so I upload to other place
> the source code and bin can download at:
> http://download.cos.name/incoming/r64-src-and-bin-for-win64.zip
>
> (attention: the source code may be contain error,you are welcome report bugs to me)
>
> the tool-chain can download at:
> http://download.cos.name/incoming/Rtools64.zip
>
> (attention: the gcc included in the tool-chain is a native  gcc 4.5.0 for win64(20091231),
> I download from  http://www.equation.com/servlet/equation.cmd?fa=fortran
> and it's free and GPLed,so we can use it )
>
> the change file is
> 1.  3 manifest files in gnuwin32\front-end\*.manifest,which is have wrong arch
> 2.  gnuwin32\fix\h\config64.h
> 3.  graphappmain.c,rterm.c,rgui.c (main change)
> 4.  makefile and mkrules in gunwin32,
> 5.  rscript.c in src\unix
> 6.  every c file in extra\xz\*.c that have a main function (just comment out or delete the main function)
> 7.  change the  R\share\make\var.mk,(comment out the tcltk)
> 8.  may be more files, but I can't recall now,so if there have an error then you can tell me,i will try figure it out
>
> ----- Original Message ----
> From: Uwe Ligges <ligges at statistik.tu-dortmund.de>
> To: Gong Yu <armgong at yahoo.com>
> Cc: Prof Brian Ripley <ripley at stats.ox.ac.uk>; R-windows at R-project.org
> Sent: Wed, January 6, 2010 5:03:52 PM
> Subject: Re: [Rd] I have finished compiling of R 64 bit on 64 bit Windows use MINGW64
>
>
>
> On 06.01.2010 10:02, Uwe Ligges wrote:
>>
>>
>> On 06.01.2010 01:54, Gong Yu wrote:
>>> I will follow the GPL rule, upload the source code, but i can't make
>>> diff, because in my office's pc there is no svn and gnutools.
>>
>> Thanks. If you upload the sources and indicate which files you have
>> changed, we can easily diff ourselves.
>
>
> I see you tried to upload, but the file came in empty.
>
> Best wishes,
> uwe
>
>
>
>> Best wishes,
>> Uwe
>>
>>
>>> ----- Original Message ----
>>> From: Prof Brian Ripley<ripley at stats.ox.ac.uk>
>>> To: Uwe Ligges<ligges at statistik.tu-dortmund.de>
>>> Cc: Gong Yu<armgong at yahoo.com>; R-windows at R-project.org
>>> Sent: Tue, January 5, 2010 9:20:59 PM
>>> Subject: Re: [Rd] I have finished compiling of R 64 bit on 64 bit
>>> Windows use MINGW64
>>>
>>> On Tue, 5 Jan 2010, Uwe Ligges wrote:
>>>
>>>> Dear Yu,
>>>>
>>>> thank you very much for the informations and the files.
>>>> I just allocated some matrices and it seems to works (and allocated
>>>> up to 4GB for me - stopped due to an R internal limit, obviously).
>>>>
>>>> Anyway, it would be really helpful to get the sources - the binary
>>>> does ot really help for making the 64-bit version (including daily
>>>> patched and devel versions and all packages) available to the public.
>>>> This would also allow to run the regression tests and apply some
>>>> other checks.
>>>
>>> Can you use a portable archive format rather than .rar? I'll need to
>>> install some means of unpacking that (7zip?). R itself can produce a
>>> .tar.gz (or even .tar.zx) file.
>>>
>>> Please note (like my comment below about that 'mingw64' distribution)
>>> that you are not allowed by R's licence to distribute such a binary
>>> build without the modified sources you used. So we really do need the
>>> sources to keep this above board (and sending it to us is
>>> 'distribution').
>>>
>>> Brian Ripley
>>>
>>>> You can upload with anonymous access to
>>>> ftp://win-builder.r-project.org/R-devel/
>>>>
>>>> Thank you very much!
>>>>
>>>> Best wishes,
>>>> Uwe
>>>>
>>>>
>>>>
>>>> On 05.01.2010 02:46, Gong Yu wrote:
>>>>> Dear Uwe Ligges
>>>>>
>>>>> 1. I use ftp://ftp.equation.com/gcc/gcc-4.5-20091231-64.exe + msys
>>>>> +perl,
>>>
>>> Aha, that is not the distribution from the mingw64 project. Is it a
>>> native Win64 toolchain? Where are the sources (which GPL requires to
>>> be made available in a non-proprietary format in parallel)?
>>>
>>>>> and the
>>>>> source code i used is R 2.11.0 devel(i not sure the exact svn
>>>>> version,but it is last month)
>>>>>
>>>>> 2. I not familiar with diff ,so I afraid I can't give you a
>>>>> patch,but alternative I can upload the source my changed or the
>>>>> whole source code.
>>>>>
>>>>> 3. mainly changed 3 manifest files in gnuwin32\front-end ,
>>>>> config64.h graphappmain.c,rterm.c,rgui.c, makefile in gunwin32,
>>>>> rscript.c in src\unix
>>>>>
>>>>> 4. also changed some c files in xz dir,because mingw64
>>>>>
>>>>> if you can provide a space I can first upload the R 64 bin file ,the
>>>>> tool-chain i used, then the whole R source (because there still some
>>>>> problems in the sources ,so it maybe a few day later)
>>>>>
>>>>> Best wishes,
>>>>>
>>>>> Gong Yu
>>>>>
>>>>>
>>>>> --- On Mon, 1/4/10, Uwe Ligges<ligges at statistik.tu-dortmund.de> wrote:
>>>>>
>>>>>> From: Uwe Ligges<ligges at statistik.tu-dortmund.de>
>>>>>> Subject: Re: [Rd] I have finished compiling of R 64 bit on 64 bit
>>>>>> Windows use MINGW64
>>>>>> To: "Arm Gong"<armgong at yahoo.com>
>>>>>> Cc: r-devel at r-project.org, R-windows at R-project.org
>>>>>> Date: Monday, January 4, 2010, 10:11 AM
>>>>>> Dear Arm Gong,
>>>>>>
>>>>>> we are certianly very interested. How many files (and
>>>>>> which) did you patch, which version of the different MinGW
>>>>>> tools did you use?
>>>>>>
>>>>>> It would be nice if we would be able to build 64-bit
>>>>>> versions of CRAN.
>>>>>>
>>>>>> Can you send the information (including required patches)
>>>>>> in a mail message (to R-windows at R-project.org)
>>>>>> or can you upload to a side yourself? Otherwise I can
>>>>>> arrange an upload and make it available later on.
>>>>>>
>>>>>> Best wishes,
>>>>>> Uwe Ligges
>>>>>>
>>>>>>
>>>>>>
>>>>>>
>>>>>>
>>>>>> Arm Gong wrote:
>>>>>>> hi ,everyone
>>>>>>> I have finished compiling of R 64 bit on 64 bit
>>>>>> Windows system by using MINGW64, include the standard and
>>>>>> recommended packages.tested it on Windows 2008 server R2
>>>>>> X64.it run very well.I wander anyone interested in it ,and
>>>>>> anyone who want to continue testing it with me?
>>>>>> and who can provide a space let me upload the R files
>>>>>>> Best wishes!
>>>>>> 2010/1/4
>>>>>>
>>>>>>
>>>>>> Gong Yu
>>>>>>>
>>>>>>>
>>>>>>>
>>>>>>>
>>>>>>>
>>>>>> [[alternative HTML version deleted]]
>>>>>>>
>>>>>>>
>>>>>>>
>>>>>>>
>>>>>> ------------------------------------------------------------------------
>>>>>>
>>>>>>>
>>>>>>> ______________________________________________
>>>>>>> R-devel at r-project.org
>>>>>> mailing list
>>>>>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>>>>>
>>>>>
>>>>>
>>>>>
>>>>
>>>
>>> -- Brian D. Ripley, ripley at stats.ox.ac.uk
>>> Professor of Applied Statistics, http://www.stats.ox.ac.uk/~ripley/
>>> University of Oxford, Tel: +44 1865 272861 (self)
>>> 1 South Parks Road, +44 1865 272866 (PA)
>>> Oxford OX1 3TG, UK Fax: +44 1865 272595
>>>
>>>
>>>
>>>
>>>
>>
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>

-- 
Brian D. Ripley,                  ripley at stats.ox.ac.uk
Professor of Applied Statistics,  http://www.stats.ox.ac.uk/~ripley/
University of Oxford,             Tel:  +44 1865 272861 (self)
1 South Parks Road,                     +44 1865 272866 (PA)
Oxford OX1 3TG, UK                Fax:  +44 1865 272595


From armgong at yahoo.com  Wed Jan  6 13:33:38 2010
From: armgong at yahoo.com (Gong Yu)
Date: Wed, 6 Jan 2010 04:33:38 -0800 (PST)
Subject: [Rd] I have finished compiling of R 64 bit on 64 bit Windows
	use MINGW64
In-Reply-To: <alpine.LFD.2.00.1001060933550.3956@gannet.stats.ox.ac.uk>
References: <801699.74671.qm@web45906.mail.sp1.yahoo.com>
	<4B433689.2010600@statistik.tu-dortmund.de>
	<alpine.LFD.2.00.1001051306290.32750@gannet.stats.ox.ac.uk>
	<612963.47100.qm@web45909.mail.sp1.yahoo.com>
	<4B4451B3.4090107@statistik.tu-dortmund.de>
	<4B4451F8.5000803@statistik.tu-dortmund.de>
	<880471.49761.qm@web45905.mail.sp1.yahoo.com>
	<alpine.LFD.2.00.1001060933550.3956@gannet.stats.ox.ac.uk>
Message-ID: <188280.7125.qm@web45912.mail.sp1.yahoo.com>

dear prof brian :
I saw the svn changes ,but i think src\xz\makefile.win maybe not correct at

ifeq ($(strip $(WIN)),64)
OBJECTS = $(SOURCES:.c=.o) crc32_x86.o crc64_x86.o
else
OBJECTS = $(SOURCES:.c=.o) crc32_fast.o crc64_fast.o
endif

should be

ifeq ($(strip $(WIN)),32)
OBJECTS = $(SOURCES:.c=.o) crc32_x86.o crc64_x86.o
else
OBJECTS = $(SOURCES:.c=.o) crc32_fast.o crc64_fast.o
endif

because gcc64 can't compile crc32_x86.s crc64_x86.s,but gcc 32 can ,
so gcc64 must compile the  crc32_fast.c crc64_fast.c

best wishs
Gong Yu


From hongbinzhang711 at yahoo.com  Wed Jan  6 01:19:22 2010
From: hongbinzhang711 at yahoo.com (Hongbin Zhang)
Date: Tue, 5 Jan 2010 16:19:22 -0800 (PST)
Subject: [Rd] lapack problem on Linux fedora 11
Message-ID: <20224.88995.qm@web62408.mail.re1.yahoo.com>


I need your help to make R works on my linux box, runing fedora 11.

Few things on the machine and steps I did:

1. uname -a shows:
  Linux bagvapp 2.6.29.4-167.fc11.i586 #1 SMP Wed May 27 17:14:37 EDT 2009 i686 athlon i386 GNU/Linux

2. it has a gcc (version 4.4) RedHat's build

3. the g77 comes with the box does not work (R's configure tells it could not compile simple fortran code); so I download and install a binary version of gfortran (version 4.5) and set the LD_LIBRARY_PATH.

4. download R-2.10.1; ./configure --with-readline=no --with-x=no
   (i.e., I did not use --with-blas or --with-lapack as the manuals indicated; the box does have its copy of blas.so and lapack.so under /usr/lib)

5. my test of lapack in R is to run: library(nlme); and then run the example from this package:
     fm1 <- nlme(height ~ SSasymp(age, Asym, R0, lrc),
                 data = Loblolly,
                 fixed = Asym + R0 + lrc ~ 1,
                 random = Asym ~ 1,
                 start = c(Asym = 103, R0 = -8.5, lrc = -3.3))

6. here is the error:

+ + + + Error in chol.default((value + t(value))/2) :
  lapack routines cannot be loaded
In addition: Warning message:
In chol.default((value + t(value))/2) :
  unable to load shared library '/usr/local/lib/R/modules//lapack.so':
  /usr/local/lib/R/modules//lapack.so: cannot restore segment prot after reloc: Permission denied

Other things I tried:
        *. remove the -O2 flag while compiling lapack
        *. "ln -s" this linux box's copy of lapack.so
        *. replace the lapack.so with the other .so created by R, namely
             libRlapack.so (why R creates two copies of the .so?)

None of those work.

Help please.

Hongbin


From savicky at cs.cas.cz  Wed Jan  6 14:57:41 2010
From: savicky at cs.cas.cz (Petr Savicky)
Date: Wed, 6 Jan 2010 14:57:41 +0100
Subject: [Rd] missing R-devel/po
Message-ID: <20100106135741.GA12311@cs.cas.cz>

When i unpack R-devel_2010-01-05.tar.bz2 and run ./configure on
two Linux machines, i get the error message

  configure: creating ./config.status
  config.status: creating Makeconf
  config.status: creating Makefile
  config.status: creating doc/Makefile
  config.status: creating doc/html/Makefile
  config.status: creating doc/manual/Makefile
  config.status: creating etc/Makefile
  config.status: creating etc/Makeconf
  config.status: creating etc/Renviron
  config.status: creating etc/ldpaths
  config.status: creating m4/Makefile
  config.status: error: cannot find input file: po/Makefile.in.in

For R-devel_2010-01-04.tar.bz2, ./configure runs fine.

The reason could be that R-devel_2010-01-05.tar.bz2 does not
contain the directory "R-devel/po". This directory is present in
R-devel_2010-01-04.tar.bz2 and contains the file "R-devel/po/Makefile.in.in".

I see the directory "R-devel/po" at https://svn.r-project.org/R/trunk/,
so the problem could be just temporary.

Petr Savicky.


From Kurt.Hornik at wu.ac.at  Wed Jan  6 15:06:41 2010
From: Kurt.Hornik at wu.ac.at (Kurt Hornik)
Date: Wed, 6 Jan 2010 15:06:41 +0100
Subject: [Rd] missing R-devel/po
In-Reply-To: <20100106135741.GA12311@cs.cas.cz>
References: <20100106135741.GA12311@cs.cas.cz>
Message-ID: <19268.39153.988554.415849@fangorn.hornik.net>

>>>>> Petr Savicky writes:

> When i unpack R-devel_2010-01-05.tar.bz2 and run ./configure on
> two Linux machines, i get the error message

>   configure: creating ./config.status
>   config.status: creating Makeconf
>   config.status: creating Makefile
>   config.status: creating doc/Makefile
>   config.status: creating doc/html/Makefile
>   config.status: creating doc/manual/Makefile
>   config.status: creating etc/Makefile
>   config.status: creating etc/Makeconf
>   config.status: creating etc/Renviron
>   config.status: creating etc/ldpaths
>   config.status: creating m4/Makefile
>   config.status: error: cannot find input file: po/Makefile.in.in

> For R-devel_2010-01-04.tar.bz2, ./configure runs fine.

> The reason could be that R-devel_2010-01-05.tar.bz2 does not
> contain the directory "R-devel/po". This directory is present in
> R-devel_2010-01-04.tar.bz2 and contains the file "R-devel/po/Makefile.in.in".

> I see the directory "R-devel/po" at https://svn.r-project.org/R/trunk/,
> so the problem could be just temporary.

A problem from a recent change causing make dist to fail in subdir tests
(so subdir tests is empty and po is missing).  We're working on a fix.

Best
-k

> Petr Savicky.

> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From bolker at ufl.edu  Wed Jan  6 16:50:02 2010
From: bolker at ufl.edu (Ben Bolker)
Date: Wed, 06 Jan 2010 10:50:02 -0500
Subject: [Rd] wiki down?
Message-ID: <4B44B12A.60004@ufl.edu>


  Does anyone have an address for a maintainer, or know what's going on?

  cheers
    Ben Bolker

ben at bolker-lap2:~$ ping wiki.r-project.org
PING econum.umh.ac.be (193.190.194.5) 56(84) bytes of data.
^C
--- econum.umh.ac.be ping statistics ---
8 packets transmitted, 0 received, 100% packet loss, time 6999ms

ben at bolker-lap2:~$ traceroute wiki.r-project.org
traceroute to wiki.r-project.org (193.190.194.5), 30 hops max, 40 byte
packets
 1  ctx-5500-n060.core.ufl.edu (128.227.60.1)  2.072 ms  2.182 ms  2.330 ms
 2  128.227.111.233 (128.227.111.233)  0.393 ms  0.413 ms  0.535 ms
 3  ctx36-nexus-msfc-1-v40-1.ns.ufl.edu (128.227.236.5)  0.427 ms  0.458
ms  0.459 ms
 4  ctx36-ewan-msfc-1-v50-1.ns.ufl.edu (128.227.236.86)  1.212 ms  1.143
ms  1.111 ms
 5  ssrb230a-ewan-msfc-1-v704-1.ns.ufl.edu (128.227.252.50)  0.960 ms
0.989 ms  0.966 ms
 6  jax-flrcore-7609-1-te31-1805.net.flrnet.org (198.32.155.221)  6.594
ms  6.523 ms  6.582 ms
 7  tlh-flrcore-7609-1-te33-1.net.flrnet.org (198.32.155.17)  9.804 ms
9.818 ms  9.871 ms
 8  hous-te0501-v513.layer3.nlr.net (198.32.155.254)  25.790 ms  25.810
ms  25.717 ms
 9  atla-hous-70.layer3.nlr.net (216.24.186.9)  50.786 ms  50.816 ms
50.706 ms
10  wash-atla-64.layer3.nlr.net (216.24.186.21)  64.592 ms  64.755 ms
64.966 ms
11  newy-wash-98.layer3.nlr.net (216.24.186.22)  70.267 ms  70.299 ms
70.251 ms
12  216.24.184.86 (216.24.184.86)  153.551 ms  153.544 ms  153.535 ms
13  belnet-gw.rt1.ams.nl.geant2.net (62.40.124.162)  156.964 ms  156.927
ms  156.883 ms
14  10ge.ar1.mon.belnet.net (193.191.17.154)  158.453 ms  158.415 ms
158.367 ms
15  umh-1.customer.mons.belnet.net (193.191.11.138)  158.589 ms  158.690
ms  158.649 ms
16  193.190.193.10 (193.190.193.10)  159.595 ms  160.831 ms  160.799 ms
17  * * *
18  * * *
19  * * *
20  * * *
21  * * *
22  * * *
23  * * *
24  * * *
25  * * *
26  * * *
27  * * *
28  * * *
29  * * *
30  * * *



-- 
Ben Bolker
Associate professor, Biology Dep't, Univ. of Florida
bolker at ufl.edu / people.biology.ufl.edu/bolker
GPG key: people.biology.ufl.edu/bolker/benbolker-publickey.asc

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 261 bytes
Desc: OpenPGP digital signature
URL: <https://stat.ethz.ch/pipermail/r-devel/attachments/20100106/cb6a0fde/attachment.bin>

From mxkuhn at gmail.com  Wed Jan  6 19:35:17 2010
From: mxkuhn at gmail.com (Max Kuhn)
Date: Wed, 6 Jan 2010 13:35:17 -0500
Subject: [Rd] Creating RPMs for Packages
Message-ID: <6731304c1001061035r528dfc50k12448fb23171396f@mail.gmail.com>

My company is trying to manage R installations across a number large
SMP machines. We're thinking out the best way to manage the packages
installs and updates. They would be happy if we could work out RPM's
for package installations (traceable, easily facilitated with existing
sw management tools).

I don't know a lot and RPMs beyond how to use them, but it seems
plausible to write R code to create the RPM package. If we need to
update package X, which triggers and update of ancillary packages Y
and Z, it should be possible to use available.packages() to figure out
the dependencies, download the sources, write out the RPM headers and
package things up.

Before I try to write any code, does anyone see any issues with this
(or has it already been done)? Is this a ridiculous approach?

Thanks,

Max


From marc_schwartz at me.com  Wed Jan  6 19:50:27 2010
From: marc_schwartz at me.com (Marc Schwartz)
Date: Wed, 06 Jan 2010 12:50:27 -0600
Subject: [Rd] Creating RPMs for Packages
In-Reply-To: <6731304c1001061035r528dfc50k12448fb23171396f@mail.gmail.com>
References: <6731304c1001061035r528dfc50k12448fb23171396f@mail.gmail.com>
Message-ID: <D13589F0-4BDC-4328-81FB-D380599854D7@me.com>

On Jan 6, 2010, at 12:35 PM, Max Kuhn wrote:

> My company is trying to manage R installations across a number large
> SMP machines. We're thinking out the best way to manage the packages
> installs and updates. They would be happy if we could work out RPM's
> for package installations (traceable, easily facilitated with existing
> sw management tools).
>
> I don't know a lot and RPMs beyond how to use them, but it seems
> plausible to write R code to create the RPM package. If we need to
> update package X, which triggers and update of ancillary packages Y
> and Z, it should be possible to use available.packages() to figure out
> the dependencies, download the sources, write out the RPM headers and
> package things up.
>
> Before I try to write any code, does anyone see any issues with this
> (or has it already been done)? Is this a ridiculous approach?
>
> Thanks,
>
> Max


Max,

It would certainly be beneficial for you or someone at your shop to  
get intimately familiar with creating RPM packages for Fedora/RHEL if  
that is the way you want to go. There are various detail issues  
involved in creating RPMs and for R packages specifically.

The following page from the Fedora wiki would likely serve as a  
starting point for creating and maintaining R related RPMs:

   https://fedoraproject.org/wiki/Packaging:R

The Fedora and RHEL/EPEL folks (basically the same people) are  
providing standardized RPMs for selected CRAN packages and it would  
make sense from a consistency perspective, not to mention not re- 
inventing the wheel, to learn from their activity.

The R package managers involved in maintaining the R related RPMs have  
their own e-mail list which you might find helpful, albeit the volume  
there is low:

   https://www.redhat.com/mailman/listinfo/fedora-r-devel-list

and of course we have our own Fedora SIG:

   https://stat.ethz.ch/mailman/listinfo/r-sig-fedora

HTH,

Marc Schwartz


From pingou at pingoured.fr  Wed Jan  6 23:30:04 2010
From: pingou at pingoured.fr (Pierre-Yves)
Date: Wed, 06 Jan 2010 23:30:04 +0100
Subject: [Rd] Creating RPMs for Packages
In-Reply-To: <D13589F0-4BDC-4328-81FB-D380599854D7@me.com>
References: <6731304c1001061035r528dfc50k12448fb23171396f@mail.gmail.com>
	<D13589F0-4BDC-4328-81FB-D380599854D7@me.com>
Message-ID: <1262817004.11651.2.camel@localhost.localdomain>

On Wed, 2010-01-06 at 13:35 -0500, Max Kuhn wrote:

> Before I try to write any code, does anyone see any issues with this
> (or has it already been done)? Is this a ridiculous approach?

You are for sure not alone in this effort to package R. A number of RPMs
have already made their way into Fedora and tools have been developed to
help this process.
One of them is R2spec [1], which I have worked on. I would also point
you to a 'fork' of R2spec [2] which aims at building RPM more than spec
(reason why they did not merge).
R2spec aims a helping to generate spec files as close as possible to the
final one for inclusion in official Fedora/EPEL repositories.
Allen S. Rout have made a nice job converting R2spec to generate RPM
directly, solving some of the circular dependences issues.

For the rest I believe Marc already point you to the right places.

Best regards,

Pierre


[1] https://fedorahosted.org/r2spec
[2]
https://www.redhat.com/archives/fedora-r-devel-list/2009-September/msg00023.html


From chrishold at psyctc.org  Wed Jan  6 21:10:10 2010
From: chrishold at psyctc.org (chrishold at psyctc.org)
Date: Wed,  6 Jan 2010 21:10:10 +0100 (CET)
Subject: [Rd] chooseCRANmirror() (PR#14179)
Message-ID: <20100106201010.2D5D0282BE89@mail.pubhealth.ku.dk>

Full_Name: Chris Evans
Version: 2.10.1
OS: Windows XP sp3
Submission from: (NULL) (86.159.235.204)


I was on leave and using a wifi internet connection in France and got connected,
launched R (2.10.1 on Windoze XPsp3) and tried to update my packages and got:

> chooseCRANmirror()
Error in m[, 1L] : incorrect number of dimensions

It took me a bit to realise that the message was coming up because the wifi
connection had dropped.  I know it's a small issue but is it possible to produce
a more informative error message. I can see a bodge of changing chooseCRANmirror
to:

function (graphics = getOption("menu.graphics")) 
{
    if (!interactive()) 
        stop("cannot choose a CRAN mirror non-interactively")
    m <- getCRANmirrors(all = FALSE, local.only = FALSE)
    ### bodge added here
    if (ncol(m) != 8) stop("There was a problem with access to CRAN mirrors,
please check your internet connection")
    ### end of bodge
    res <- menu(m[, 1L], graphics, "CRAN mirror")
    if (res > 0L) {
        URL <- m[res, "URL"]
        repos <- getOption("repos")
        repos["CRAN"] <- gsub("/$", "", URL[1L])
        options(repos = repos)
    }
    invisible()
}
<environment: namespace:utils>

However, I'm sure you code gurus can do much better than that.

Many thanks for R: statistical wonderland, coding genius and a social movement
of which to be hugely proud!

Chris (Evans)


From anders at embl.de  Wed Jan  6 16:26:26 2010
From: anders at embl.de (Simon Anders)
Date: Wed, 06 Jan 2010 16:26:26 +0100
Subject: [Rd] =?utf-8?q?R=5Fext_manual=3A_type_cast_in_C_function_registra?=
 =?utf-8?q?tion?=
Message-ID: <e726d60b426e79591232c6b10dee09bf@imap.embl.de>

Hi,

the "Writing R extensions" manual currently advises to register a .Call
function as follows:

   R_CallMethodDef callMethods[]  = {
       {"myCall", &myCall, 3},
       {NULL, NULL, 0}
   };

This produces a compiler warning, at least on my GCC, because the second
slot in the R_CallMethodDef is declared as DL_FUNC (which is declared as
'typedef void * (*DL_FUNC)();').

I'd suggest to change the example code in the manual to include an
explicit cast, i.e., 


   R_CallMethodDef callMethods[]  = {
       {"myCall", (DL_FUNC) &myCall, 3},
       {NULL, NULL, 0}
   };

in order to get rid of an unnecessary compiler warning.

Cheers
  Simon


+---
| Dr. Simon Anders, Dipl.-Phys.
| European Molecular Biology Laboratory (EMBL), Heidelberg
| office phone +49-6221-387-8632
| preferred (permanent) e-mail: sanders at fs.tum.de


From ripley at stats.ox.ac.uk  Thu Jan  7 14:35:43 2010
From: ripley at stats.ox.ac.uk (Prof Brian Ripley)
Date: Thu, 7 Jan 2010 13:35:43 +0000 (GMT)
Subject: [Rd] chooseCRANmirror() (PR#14179)
In-Reply-To: <20100106201010.2D5D0282BE89@mail.pubhealth.ku.dk>
References: <20100106201010.2D5D0282BE89@mail.pubhealth.ku.dk>
Message-ID: <alpine.LFD.2.00.1001071332390.20751@gannet.stats.ox.ac.uk>

Hmm, have you read getCRANmirrors?  It works gracefully if the 
connection is down, and has been tested quite a lot ....

It seems you got a corrupt read from the URL: that's not reproducible 
and the place to deal with that is getCRANmirrors.

Please do use an informative subject line: it makes things *much* 
easier to find in archives.


On Wed, 6 Jan 2010, chrishold at psyctc.org wrote:

> Full_Name: Chris Evans
> Version: 2.10.1
> OS: Windows XP sp3
> Submission from: (NULL) (86.159.235.204)
>
>
> I was on leave and using a wifi internet connection in France and got connected,
> launched R (2.10.1 on Windoze XPsp3) and tried to update my packages and got:
>
>> chooseCRANmirror()
> Error in m[, 1L] : incorrect number of dimensions
>
> It took me a bit to realise that the message was coming up because the wifi
> connection had dropped.  I know it's a small issue but is it possible to produce
> a more informative error message. I can see a bodge of changing chooseCRANmirror
> to:
>
> function (graphics = getOption("menu.graphics"))
> {
>    if (!interactive())
>        stop("cannot choose a CRAN mirror non-interactively")
>    m <- getCRANmirrors(all = FALSE, local.only = FALSE)
>    ### bodge added here
>    if (ncol(m) != 8) stop("There was a problem with access to CRAN mirrors,
> please check your internet connection")
>    ### end of bodge
>    res <- menu(m[, 1L], graphics, "CRAN mirror")
>    if (res > 0L) {
>        URL <- m[res, "URL"]
>        repos <- getOption("repos")
>        repos["CRAN"] <- gsub("/$", "", URL[1L])
>        options(repos = repos)
>    }
>    invisible()
> }
> <environment: namespace:utils>
>
> However, I'm sure you code gurus can do much better than that.
>
> Many thanks for R: statistical wonderland, coding genius and a social movement
> of which to be hugely proud!
>
> Chris (Evans)
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>

-- 
Brian D. Ripley,                  ripley at stats.ox.ac.uk
Professor of Applied Statistics,  http://www.stats.ox.ac.uk/~ripley/
University of Oxford,             Tel:  +44 1865 272861 (self)
1 South Parks Road,                     +44 1865 272866 (PA)
Oxford OX1 3TG, UK                Fax:  +44 1865 272595


From nashjc at uottawa.ca  Thu Jan  7 16:06:27 2010
From: nashjc at uottawa.ca (nashjc at uottawa.ca)
Date: Thu, 7 Jan 2010 10:06:27 -0500 (EST)
Subject: [Rd] Creating RPMs for Packages
In-Reply-To: <mailman.21.1262862007.30603.r-devel@r-project.org>
References: <mailman.21.1262862007.30603.r-devel@r-project.org>
Message-ID: <2411.70.61.217.226.1262876787.squirrel@webmail02.uottawa.ca>

This may get delayed as I am away from my usual mail system.

Since (thanks to Dirk and Charles) there is the cran2deb project giving us
most R packages in debian package format, could the alien package help?
See

http://www.linuxdocs.org/HOWTOs/RPM-for-Unix-HOWTO-8.html

John Nash


From guillaume.yziquel at citycable.ch  Thu Jan  7 23:50:51 2010
From: guillaume.yziquel at citycable.ch (Guillaume Yziquel)
Date: Thu, 07 Jan 2010 23:50:51 +0100
Subject: [Rd] Segfault in GetNewPage, memory.c.
Message-ID: <4B46654B.2010703@citycable.ch>

Hello.

I'm still working on my OCaml-R binding and I get a segfault in the 
GetNewPage() function of memory.c.

For the record, the OCaml-R binding seems to work fine with OCaml 
bytecode. The segfault here is the main issue I have with OCaml native 
code. OCaml-R can be found on the following links.

Source code:

	http://yziquel.homelinux.org/gitweb/?p=ocaml-r.git;a=summary
	http://svn.gna.org/viewcvs/ocaml-r/branches/yziquel/

Debian packages for amd64:

	http://yziquel.homelinux.org/debian/pool/main/o/ocaml-r/

Some documentation (not entirely up to date...):

	http://yziquel.homelinux.org/topos/api/ocaml-r/R.html
	http://yziquel.homelinux.org/topos/debian-ocamlr.html

Back to my segfault:

> yziquel at seldon:~/git/ocaml-finquote$ gdb -silent -d /home/yziquel/src/r-base-2.10.1/src/main/ _build/test/test.native
> Reading symbols from /home/yziquel/git/ocaml-finquote/_build/test/test.native...(no debugging symbols found)...done.
> (gdb) run
> Starting program: /home/yziquel/git/ocaml-finquote/_build/test/test.native 
> [Thread debugging using libthread_db enabled]
> 
> Program received signal SIGSEGV, Segmentation fault.
> GetNewPage (node_class=1) at memory.c:657
> 657		SNAP_NODE(s, base);
> (gdb) backtrace
> #0  GetNewPage (node_class=1) at memory.c:657
> #1  0x00007ffff7993c24 in Rf_allocVector (type=16, length=1) at memory.c:2030
> #2  0x00007ffff7981070 in Rf_mkString (s=0x6ae548 "require(quantmod)") at ../../src/include/Rinlinedfuns.h:582
> #3  0x000000000047d63f in parse_sexp ()
> #4  0x0000000000498990 in caml_c_call ()
> #5  0x00007ffff7fb37e8 in ?? ()
> #6  0x0000000000423aa0 in camlQuantmod__entry ()
> #7  0x00007ffff7fb5820 in ?? ()
> #8  0x0000000000421649 in caml_program ()
> #9  0x000000000012697e in ?? ()
> #10 0x00000000004989e6 in caml_start_program ()
> #11 0x0000000000000000 in ?? ()
> (gdb) 

As OCaml is compiled to native machine code, it has its own ABI, and 
this is why you do not see much traceback on the OCaml side.

The segfault happens at the moment that we try to do 
"require(quantmod)". The R interpreter is already up an running when we 
execute this R command.

I wish to point out that this same piece of code works fine in OCaml 
bytecode, which sorts of implies that my C glue is rather OK.

 From source code, the execution goes this way:

>   let () = ignore (R.eval_string "require(quantmod)")

We're simply trying to evaluate the "require(quantmod)" string in R.

> let eval_string s = eval_langsxp (parse_sexp s)

eval_string calls

> external parse_sexp : string -> sexp = "parse_sexp"

which access the C glue code wrapping R_ParseVector.

> CAMLprim value parse_sexp (value s) {
>   CAMLparam1(s);
>   SEXP text ;
>   SEXP pr ;
>   ParseStatus status;
>   PROTECT(text = mkString(String_val(s)));
>   PROTECT(pr=R_ParseVector(text, 1, &status, R_NilValue));
>   UNPROTECT(2);
>   switch (status) {
>     case PARSE_OK:
>      break;
>     case PARSE_INCOMPLETE:
>     case PARSE_EOF:
>       caml_raise_with_string(*caml_named_value("Parse_incomplete"), (String_val(s)));
>     case PARSE_NULL:
>     case PARSE_ERROR:
>       caml_raise_with_string(*caml_named_value("Parse_error"), (String_val(s)));
>       }
>   CAMLreturn(Val_sexp(VECTOR_ELT(pr,0)));
> }

But before calling ParseVector, it allocates an R string with the command.

>   PROTECT(text = mkString(String_val(s)));

It is this call to mkString which gives the segfault. String_val 
essentially is a macro that casts an OCaml value to a char *.

> yziquel at seldon:~/git/ocaml-finquote$ gdb -silent -d /home/yziquel/src/r-base-2.10.1/src/main/ _build/test/test.native
> Reading symbols from /home/yziquel/git/ocaml-finquote/_build/test/test.native...(no debugging symbols found)...done.
> (gdb) set breakpoint pending on
> (gdb) break Rf_mkString
> Breakpoint 1 at 0x420858
> (gdb) run
> Starting program: /home/yziquel/git/ocaml-finquote/_build/test/test.native 
> [Thread debugging using libthread_db enabled]
> 
> Breakpoint 1, Rf_mkString (s=0x6ae548 "require(quantmod)") at ../../src/include/Rinlinedfuns.h:582
> 582	    PROTECT(t = allocVector(STRSXP, 1));
> (gdb) step
> 579	{
> (gdb) 
> 582	    PROTECT(t = allocVector(STRSXP, 1));
> (gdb) 
> Rf_allocVector (type=16, length=1) at memory.c:1916
> 1916	{
> (gdb) next
> 1924	    if (length < 0 )
> (gdb) 
> 1928	    switch (type) {
> (gdb) 
> 1978		if (length <= 0)
> (gdb) 
> 1984		    size = PTR2VEC(length);
> (gdb) 
> 2000	    if (size <= NodeClassSize[1]) {
> (gdb) 
> 2017	    old_R_VSize = R_VSize;
> (gdb) 
> 2020	    if (FORCE_GC || NO_FREE_NODES() || VHEAP_FREE() < alloc_size) {
> (gdb) 
> 2017	    old_R_VSize = R_VSize;
> (gdb) 
> 2020	    if (FORCE_GC || NO_FREE_NODES() || VHEAP_FREE() < alloc_size) {
> (gdb) 
> 2028	    if (size > 0) {
> (gdb) 
> 2029		if (node_class < NUM_SMALL_NODE_CLASSES) {
> (gdb) 
> 2030		    CLASS_GET_FREE_NODE(node_class, s);
> (gdb) 
> 
> Program received signal SIGSEGV, Segmentation fault.
> GetNewPage (node_class=1) at memory.c:657
> 657		SNAP_NODE(s, base);
> (gdb) 

So CLASS_GET_FREE_NODE is #defined in memory.c as:

> #define CLASS_GET_FREE_NODE(c,s) do { \
>   SEXP __n__ = R_GenHeap[c].Free; \
>   if (__n__ == R_GenHeap[c].New) { \
>     GetNewPage(c); \
>     __n__ = R_GenHeap[c].Free; \
>   } \
>   R_GenHeap[c].Free = NEXT_NODE(__n__); \
>   R_NodesInUse++; \
>   (s) = __n__; \
> } while (0)

and we here have a call to GetNewPage.

> yziquel at seldon:~/git/ocaml-finquote$ gdb -silent -d /home/yziquel/src/r-base-2.10.1/src/main/ _build/test/test.native
> Reading symbols from /home/yziquel/git/ocaml-finquote/_build/test/test.native...(no debugging symbols found)...done.
> (gdb) set breakpoint pending on
> (gdb) break GetNewPage
> Function "GetNewPage" not defined.
> Breakpoint 1 (GetNewPage) pending.
> (gdb) run
> Starting program: /home/yziquel/git/ocaml-finquote/_build/test/test.native 
> [Thread debugging using libthread_db enabled]
> 
> Breakpoint 1, GetNewPage (node_class=1) at memory.c:629
> 629	{
> (gdb) n
> 635	    node_size = NODE_SIZE(node_class);
> (gdb) 
> 638	    page = malloc(R_PAGE_SIZE);
> (gdb) 
> 639	    if (page == NULL) {
> (gdb) 
> 638	    page = malloc(R_PAGE_SIZE);
> (gdb) 
> 639	    if (page == NULL) {
> (gdb) 
> 646	    R_ReportNewPage();
> (gdb) 
> 648	    page->next = R_GenHeap[node_class].pages;
> (gdb) 
> 653	    base = R_GenHeap[node_class].New;
> (gdb) 
> 648	    page->next = R_GenHeap[node_class].pages;
> (gdb) 
> 653	    base = R_GenHeap[node_class].New;
> (gdb) 
> 648	    page->next = R_GenHeap[node_class].pages;
> (gdb) 
> 653	    base = R_GenHeap[node_class].New;
> (gdb) 
> 648	    page->next = R_GenHeap[node_class].pages;
> (gdb) 
> 650	    R_GenHeap[node_class].PageCount++;
> (gdb) 
> 654	    for (i = 0; i < page_count; i++, data += node_size) {
> (gdb) 
> 649	    R_GenHeap[node_class].pages = page;
> (gdb) 
> 653	    base = R_GenHeap[node_class].New;
> (gdb) 
> 654	    for (i = 0; i < page_count; i++, data += node_size) {
> (gdb) 
> 652	    data = PAGE_DATA(page);
> (gdb) 
> 669		SET_NODE_CLASS(s, node_class);
> (gdb) 
> 657		SNAP_NODE(s, base);
> (gdb) 
> 
> Program received signal SIGSEGV, Segmentation fault.
> GetNewPage (node_class=1) at memory.c:657
> 657		SNAP_NODE(s, base);
> (gdb) 

and SNAP_NODE is:

> /* snap in node s before node t */
> #define SNAP_NODE(s,t) do { \
>   SEXP sn__n__ = (s); \
>   SEXP next = (t); \
>   SEXP prev = PREV_NODE(next); \
>   SET_NEXT_NODE(sn__n__, next); \
>   SET_PREV_NODE(next, sn__n__); \
>   SET_NEXT_NODE(prev, sn__n__); \
>   SET_PREV_NODE(sn__n__, prev); \
> } while (0)

I do not know how to track the segfault further except by looking at the 
disassembled machine code. However, as the machine code seems to have 
been optimised, it is not that easily readable, and I would appreciate 
if someone could take the time to look into any obvious reasons why 
there may be a segfault. Any background information or pointers helping 
me to understand what is precisely supposed to be going on in the memory 
allocation code would also be very much appreciated.

All the best,

-- 
      Guillaume Yziquel
http://yziquel.homelinux.org/


From hb at stat.berkeley.edu  Fri Jan  8 00:50:00 2010
From: hb at stat.berkeley.edu (Henrik Bengtsson)
Date: Thu, 7 Jan 2010 15:50:00 -0800
Subject: [Rd] "Human-style" sort() of alphanum strings?
In-Reply-To: <971536df1001051548q60d92422q1c922d826cb12e4e@mail.gmail.com>
References: <59d7961d1001051534g43275960x258d0262db4f0ea1@mail.gmail.com>
	<971536df1001051548q60d92422q1c922d826cb12e4e@mail.gmail.com>
Message-ID: <59d7961d1001071550n6d9e0636gf797ecb2e584f53f@mail.gmail.com>

Follow up/bug:

mixedsort() gets confused when there are periods in the string(s);

>   print(gtools::mixedsort("a"))
[1] "a"
>   print(gtools::mixedsort("a."))
[1] "a." NA
>   print(gtools::mixedsort("a.b"))
[1] "a.b" NA    NA
>   print(gtools::mixedsort("a.b."))
[1] "a.b." NA     NA     NA
>   print(gtools::mixedsort("a.b.c"))
[1] "a.b.c" NA      NA      NA      NA
>   print(gtools::mixedsort("a.b.c."))
[1] "a.b.c." NA       NA       NA       NA       NA

Is the '.' trigger an incorrect interpretation of a number?

/Henrik

On Tue, Jan 5, 2010 at 3:48 PM, Gabor Grothendieck
<ggrothendieck at gmail.com> wrote:
> See mixedsort in gtools. ?Also on http://gsubfn.googlecode.com see
> mixsort example in the section starting ### more examples
>
> On Tue, Jan 5, 2010 at 6:34 PM, Henrik Bengtsson <hb at stat.berkeley.edu> wrote:
>> I know it is fairly easy to implement (though not always well
>> defined), but is there an existing sort function out there that takes
>> alphanum strings and sort them in a "human" fashion? ?For example,
>> instead of:
>>
>> z1.doc z10.doc z100.doc z101.doc z11.doc z2.doc
>>
>> it should out put:
>>
>> z1.doc z2.doc z10.doc z11.doc z100.doc z101.doc
>>
>> (from http://www.davekoelle.com/alphanum.html).
>>
>> /Henrik
>>
>> ______________________________________________
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>
>


From ggrothendieck at gmail.com  Fri Jan  8 01:07:50 2010
From: ggrothendieck at gmail.com (Gabor Grothendieck)
Date: Thu, 7 Jan 2010 19:07:50 -0500
Subject: [Rd] "Human-style" sort() of alphanum strings?
In-Reply-To: <59d7961d1001071550n6d9e0636gf797ecb2e584f53f@mail.gmail.com>
References: <59d7961d1001051534g43275960x258d0262db4f0ea1@mail.gmail.com> 
	<971536df1001051548q60d92422q1c922d826cb12e4e@mail.gmail.com> 
	<59d7961d1001071550n6d9e0636gf797ecb2e584f53f@mail.gmail.com>
Message-ID: <971536df1001071607s6d09529did90e76f964f60647@mail.gmail.com>

I had suggested two possibilities, not just mixedsort.  The other was mixsort:

> mixsort("a.b.c")
[1] "a.b.c"
> print(mixsort("a"))
[1] "a"
> print(mixsort("a."))
[1] "a."
> print(mixsort("a.b"))
[1] "a.b"
> print(mixsort("a.b."))
[1] "a.b."
> print(mixsort("a.b.c"))
[1] "a.b.c"
> print(mixsort("a.b.c."))
[1] "a.b.c."


On Thu, Jan 7, 2010 at 6:50 PM, Henrik Bengtsson <hb at stat.berkeley.edu> wrote:
> Follow up/bug:
>
> mixedsort() gets confused when there are periods in the string(s);
>
>> ? print(gtools::mixedsort("a"))
> [1] "a"
>> ? print(gtools::mixedsort("a."))
> [1] "a." NA
>> ? print(gtools::mixedsort("a.b"))
> [1] "a.b" NA ? ?NA
>> ? print(gtools::mixedsort("a.b."))
> [1] "a.b." NA ? ? NA ? ? NA
>> ? print(gtools::mixedsort("a.b.c"))
> [1] "a.b.c" NA ? ? ?NA ? ? ?NA ? ? ?NA
>> ? print(gtools::mixedsort("a.b.c."))
> [1] "a.b.c." NA ? ? ? NA ? ? ? NA ? ? ? NA ? ? ? NA
>
> Is the '.' trigger an incorrect interpretation of a number?
>
> /Henrik
>
> On Tue, Jan 5, 2010 at 3:48 PM, Gabor Grothendieck
> <ggrothendieck at gmail.com> wrote:
>> See mixedsort in gtools. ?Also on http://gsubfn.googlecode.com see
>> mixsort example in the section starting ### more examples
>>
>> On Tue, Jan 5, 2010 at 6:34 PM, Henrik Bengtsson <hb at stat.berkeley.edu> wrote:
>>> I know it is fairly easy to implement (though not always well
>>> defined), but is there an existing sort function out there that takes
>>> alphanum strings and sort them in a "human" fashion? ?For example,
>>> instead of:
>>>
>>> z1.doc z10.doc z100.doc z101.doc z11.doc z2.doc
>>>
>>> it should out put:
>>>
>>> z1.doc z2.doc z10.doc z11.doc z100.doc z101.doc
>>>
>>> (from http://www.davekoelle.com/alphanum.html).
>>>
>>> /Henrik
>>>
>>> ______________________________________________
>>> R-devel at r-project.org mailing list
>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>>
>>
>


From hb at stat.berkeley.edu  Fri Jan  8 01:12:46 2010
From: hb at stat.berkeley.edu (Henrik Bengtsson)
Date: Thu, 7 Jan 2010 16:12:46 -0800
Subject: [Rd] "Human-style" sort() of alphanum strings?
In-Reply-To: <59d7961d1001071550n6d9e0636gf797ecb2e584f53f@mail.gmail.com>
References: <59d7961d1001051534g43275960x258d0262db4f0ea1@mail.gmail.com>
	<971536df1001051548q60d92422q1c922d826cb12e4e@mail.gmail.com>
	<59d7961d1001071550n6d9e0636gf797ecb2e584f53f@mail.gmail.com>
Message-ID: <59d7961d1001071612t6624d02ao14bd7792686e0689@mail.gmail.com>

Thanks, and sorry - I missed those two "missing letter "ed" and though
you only refer to that URL for extra example code.  mixsort() does it
for me.

/H

On Thu, Jan 7, 2010 at 3:50 PM, Henrik Bengtsson <hb at stat.berkeley.edu> wrote:
> Follow up/bug:
>
> mixedsort() gets confused when there are periods in the string(s);
>
>> ? print(gtools::mixedsort("a"))
> [1] "a"
>> ? print(gtools::mixedsort("a."))
> [1] "a." NA
>> ? print(gtools::mixedsort("a.b"))
> [1] "a.b" NA ? ?NA
>> ? print(gtools::mixedsort("a.b."))
> [1] "a.b." NA ? ? NA ? ? NA
>> ? print(gtools::mixedsort("a.b.c"))
> [1] "a.b.c" NA ? ? ?NA ? ? ?NA ? ? ?NA
>> ? print(gtools::mixedsort("a.b.c."))
> [1] "a.b.c." NA ? ? ? NA ? ? ? NA ? ? ? NA ? ? ? NA
>
> Is the '.' trigger an incorrect interpretation of a number?
>
> /Henrik
>
> On Tue, Jan 5, 2010 at 3:48 PM, Gabor Grothendieck
> <ggrothendieck at gmail.com> wrote:
>> See mixedsort in gtools. ?Also on http://gsubfn.googlecode.com see
>> mixsort example in the section starting ### more examples
>>
>> On Tue, Jan 5, 2010 at 6:34 PM, Henrik Bengtsson <hb at stat.berkeley.edu> wrote:
>>> I know it is fairly easy to implement (though not always well
>>> defined), but is there an existing sort function out there that takes
>>> alphanum strings and sort them in a "human" fashion? ?For example,
>>> instead of:
>>>
>>> z1.doc z10.doc z100.doc z101.doc z11.doc z2.doc
>>>
>>> it should out put:
>>>
>>> z1.doc z2.doc z10.doc z11.doc z100.doc z101.doc
>>>
>>> (from http://www.davekoelle.com/alphanum.html).
>>>
>>> /Henrik
>>>
>>> ______________________________________________
>>> R-devel at r-project.org mailing list
>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>>
>>
>


From guillaume.yziquel at citycable.ch  Fri Jan  8 14:23:21 2010
From: guillaume.yziquel at citycable.ch (Guillaume Yziquel)
Date: Fri, 08 Jan 2010 14:23:21 +0100
Subject: [Rd] Segfault in GetNewPage, memory.c.
In-Reply-To: <4B46654B.2010703@citycable.ch>
References: <4B46654B.2010703@citycable.ch>
Message-ID: <4B4731C9.5040606@citycable.ch>

Guillaume Yziquel a ?crit :
> Hello.
> 
> I'm still working on my OCaml-R binding and I get a segfault in the 
> GetNewPage() function of memory.c.

Stupid issue that took me some time to solve: R wasn't initialised. (It 
wasn't easy to solve because I'm trying to figure out how to get R up 
and running only by linking in the correct OCaml module, thus avoid 
init() functions and the like).

All the best,

-- 
      Guillaume Yziquel
http://yziquel.homelinux.org/


From guillaume.yziquel at citycable.ch  Sat Jan  9 01:56:25 2010
From: guillaume.yziquel at citycable.ch (Guillaume Yziquel)
Date: Sat, 09 Jan 2010 01:56:25 +0100
Subject: [Rd] PROTECT and OCaml GC.
In-Reply-To: <65D411CD-34C3-4B89-8FF0-98C9BD7613FB@r-project.org>
References: <4B11B75C.9070806@citycable.ch>
	<8ec76080911281625q5d5b8824hefb14af9b23d29f0@mail.gmail.com>
	<4B11C55E.2060909@citycable.ch>
	<F11B6C18-26EC-41F8-9EEB-A614D16945AC@r-project.org>
	<4B12C417.1050308@citycable.ch>
	<65D411CD-34C3-4B89-8FF0-98C9BD7613FB@r-project.org>
Message-ID: <4B47D439.8090304@citycable.ch>

Simon Urbanek a ?crit :
> 
> If you have suggestions for extending the API, feel free to post them 
> with exact explanations how in general that extensions could be useful 
> (general is the key word here - I think so far it was rather to hack 
> around your way of implementing it). [And FWIW tryEval *is* part of the 
> API].
> 
> Cheers,
> Simon

Hi.

Concerning tryEval, I had a look at context.c, and it says:

> /*
>   This is a simple interface for evaluating R expressions
>   from C with a guarantee that one will return to the
>   point in the code from which the call was made (if it does
>   return at all).
>   This uses R_TopleveExec to do this.  It is important
>   in applications that embed R or wish to make general
>   callbacks to R with error handling.
> 
>   It is currently hidden with a data structure definition
>   and C routine visible only here. The R_tryEval() is the
>   only visible aspect. This can be lifted into the header
>   files if necessary. (DTL)
> 
>   R_tryEval is in Rinternals.h (so public), but not in the API.
>  */

Now, here's a feature I'd like to implement with the API:

In OCaml, there's a library called Lwt. It's a library implementing 
lightweight, or green, threads. The idea is the following:

Suppose I have to evaluate f (). I do:

let lwt_f = Lwt.return (f ()).

Now, I want to evaluate g (f ()). I write:

let lwt_g = lwt_f >>= (function x -> Lwt.return (g x)).

This might seem overly complicated, and it somehow is. The interesting 
point is this ">>=" operator. Because it allows to compose two (or more) 
computations, and it does context commutations.

So this implements threads in a cooperative way, all running in one 
single real thread.

What I want to do is to be able to launch some R code, and have it 
multithread with other OCaml code, within one single real thread. 
Therefore I have to implement the commutation context somewhere in the 
evaluation mechanism of R itself.

The API doesn't support that, I guess.

-- 
      Guillaume Yziquel
http://yziquel.homelinux.org/


From guillaume.yziquel at citycable.ch  Sat Jan  9 02:04:11 2010
From: guillaume.yziquel at citycable.ch (Guillaume Yziquel)
Date: Sat, 09 Jan 2010 02:04:11 +0100
Subject: [Rd] PROTECT and OCaml GC.
In-Reply-To: <4B47D439.8090304@citycable.ch>
References: <4B11B75C.9070806@citycable.ch>
	<8ec76080911281625q5d5b8824hefb14af9b23d29f0@mail.gmail.com>
	<4B11C55E.2060909@citycable.ch>
	<F11B6C18-26EC-41F8-9EEB-A614D16945AC@r-project.org>
	<4B12C417.1050308@citycable.ch>
	<65D411CD-34C3-4B89-8FF0-98C9BD7613FB@r-project.org>
	<4B47D439.8090304@citycable.ch>
Message-ID: <4B47D60B.8090007@citycable.ch>

Guillaume Yziquel a ?crit :
> Simon Urbanek a ?crit :
>>
>> If you have suggestions for extending the API, feel free to post them 
>> with exact explanations how in general that extensions could be useful 
>> (general is the key word here - I think so far it was rather to hack 
>> around your way of implementing it). [And FWIW tryEval *is* part of 
>> the API].
> 
> Concerning tryEval, I had a look at context.c, and it says:
> 
>> /*
>>   R_tryEval is in Rinternals.h (so public), but not in the API.
>>  */

And concerning tryEval, there's one feature I miss: there is error 
handling capabilities, but to my knowledge, it provides a boolean status 
back. True or false. Is it possible to get a full error message back, so 
that it can be analysed and translated to OCaml exceptions?

> Now, here's a feature I'd like to implement with the API:
> 
> In OCaml, there's a library called Lwt. It's a library implementing 
> lightweight, or green, threads.
> 
> What I want to do is to be able to launch some R code, and have it 
> multithread with other OCaml code, within one single real thread. 
> Therefore I have to implement the commutation context somewhere in the 
> evaluation mechanism of R itself.
> 
> The API doesn't support that, I guess.

-- 
      Guillaume Yziquel
http://yziquel.homelinux.org/


From ripley at stats.ox.ac.uk  Sat Jan  9 14:10:27 2010
From: ripley at stats.ox.ac.uk (Prof Brian Ripley)
Date: Sat, 9 Jan 2010 13:10:27 +0000 (GMT)
Subject: [Rd] MinGW-w64 build of 64-bit R for Windows
Message-ID: <alpine.OSX.1.00.1001091303290.29479@tystie.local>

A few days ago Gong Yu alerted this list to the possibility of 
building a 64-bit R for Windows under a recent MinGW-w64 toolchain, 
something we had failed to make work in 2007, 2008 and Feb 2009. 
We've now completed the port in the R-devel (SVN trunk) sources and 
are able to successfully complete 'make check-all'.  An experimental 
installer based on this version is available at
http://www.stats.ox.ac.uk/pub/RWin/Win64/R-2.11.0dev-win64.exe
but people who want to experiment may prefer to build from the R-devel 
sources, and all users should read the new 'Building R for 64-bit 
Windows' section in the R-admin manual in R-devel.

Some notes:

- The tcltk support is a stub.  We have been able to build Tcl/Tk with
MinGW-w64, but just as with a 32-bit MinGW build, it is liable to
crash (which is why we use Tcl/Tk built under VC++6).  It ought to be
possible to build Tcl/Tk under the Platform SDK, but that is left for
an interested party (it does not work out-of-the-box).

- There is no support for binary packages and the default package type
is "source".  For packages without compiled code the 32-bit binary
packages will work (but such packages can also simply be installed
from their sources).  For compiled code you will need to adjust
etc/Makeconf unless you are using the mingw-w64-bin_i686-mingw
cross-compiler (running under 32-bit Windows) mentioned in the R-admin
manual.  That compiler uses dynamic libraries, and C++ users (and
perhaps others) will need to have the toolchain's bin/ directory in
their path or copy the DLLs to RHOME/bin.  (Other toolchains can be
used, including building MinGW-w64 from the sources with static
libraries.)

- We found this build to be as fast as, and sometimes a bit faster
than, the 32-bit CRAN windows build.

- There is no commitment to support this other than in the sources,
and in part we are making experimental builds available to judge
interest and attract support.  We see this as only being of interest
to Windows users with a 64-bit OS and substantially more than 4GB of
RAM who only use a few relatively simple packages (and there are other
options from R redistributors).

- Feedback and offers of support to R-windows at r-project.org,
please.  At this stage we are looking for serious testers who are able
to compile from the sources and submit patches, and offers to
e.g. resolve the Tcl/Tk issues.

- Thanks to Gong Yu and especially Kai Tietz (the MinGW-w64 lead
developer) for help along the way.


Brian Ripley

-- 
Brian D. Ripley,                  ripley at stats.ox.ac.uk
Professor of Applied Statistics,  http://www.stats.ox.ac.uk/~ripley/
University of Oxford,             Tel:  +44 1865 272861 (self)
1 South Parks Road,                     +44 1865 272866 (PA)
Oxford OX1 3TG, UK                Fax:  +44 1865 272595


From romain.francois at dbmail.com  Sat Jan  9 20:27:08 2010
From: romain.francois at dbmail.com (Romain Francois)
Date: Sat, 09 Jan 2010 20:27:08 +0100
Subject: [Rd] PROTECT and OCaml GC.
In-Reply-To: <4B47D60B.8090007@citycable.ch>
References: <4B11B75C.9070806@citycable.ch>	<8ec76080911281625q5d5b8824hefb14af9b23d29f0@mail.gmail.com>	<4B11C55E.2060909@citycable.ch>	<F11B6C18-26EC-41F8-9EEB-A614D16945AC@r-project.org>	<4B12C417.1050308@citycable.ch>	<65D411CD-34C3-4B89-8FF0-98C9BD7613FB@r-project.org>	<4B47D439.8090304@citycable.ch>
	<4B47D60B.8090007@citycable.ch>
Message-ID: <4B48D88C.80604@dbmail.com>

On 01/09/2010 02:04 AM, Guillaume Yziquel wrote:
> Guillaume Yziquel a ?crit :
>> Simon Urbanek a ?crit :
>>>
>>> If you have suggestions for extending the API, feel free to post them
>>> with exact explanations how in general that extensions could be
>>> useful (general is the key word here - I think so far it was rather
>>> to hack around your way of implementing it). [And FWIW tryEval *is*
>>> part of the API].
>>
>> Concerning tryEval, I had a look at context.c, and it says:
>>
>>> /*
>>> R_tryEval is in Rinternals.h (so public), but not in the API.
>>> */
>
> And concerning tryEval, there's one feature I miss: there is error
> handling capabilities, but to my knowledge, it provides a boolean status
> back. True or false. Is it possible to get a full error message back, so
> that it can be analysed and translated to OCaml exceptions?

Not to my knowledge, what we do in Rcpp is to to bring the expression to 
the R side, evaluate it within a tryCatch and then grab either the 
result if successfull, or the error.

The R side of this is in :
http://r-forge.r-project.org/plugins/scmsvn/viewcvs.php/pkg/R/exceptions.R?rev=249&root=rcpp&view=markup

and the C++ class is the Evaluator class:
http://r-forge.r-project.org/plugins/scmsvn/viewcvs.php/pkg/src/Evaluator.cpp?rev=260&root=rcpp&view=markup

It smells the "it works but ..." pattern.

tryEval is just a thin wrapper around R_ToplevelExec (in context.c), 
what you need (and we need also in Rcpp) is a somewhat improved version 
of R_ToplevelExec which would modify the context. This would remove the 
need for a round trip to the R side...

I once tried to factor R_ToplevelExec out of R into a package, but 
failed. When I get a better understanding of contexts, I might propose 
something.

>> Now, here's a feature I'd like to implement with the API:
>>
>> In OCaml, there's a library called Lwt. It's a library implementing
>> lightweight, or green, threads.
>>
>> What I want to do is to be able to launch some R code, and have it
>> multithread with other OCaml code, within one single real thread.
>> Therefore I have to implement the commutation context somewhere in the
>> evaluation mechanism of R itself.
>>
>> The API doesn't support that, I guess.
>


-- 
Romain Francois
Professional R Enthusiast
+33(0) 6 28 91 30 30
http://romainfrancois.blog.free.fr
|- http://tr.im/JOlc : External pointers with Rcpp
|- http://tr.im/JFqa : R Journal, Volume 1/2, December 2009
`- http://tr.im/IW9B : C++ exceptions at the R level


From pengyu.ut at gmail.com  Sat Jan  9 21:53:57 2010
From: pengyu.ut at gmail.com (Peng Yu)
Date: Sat, 9 Jan 2010 14:53:57 -0600
Subject: [Rd] Is nested namespace supported?
Message-ID: <366c6f341001091253q1891f1beteacfe35fa578ea53@mail.gmail.com>

Could somebody let me know if there is nested name space supported?
For example, is it possible to define a function in the name space
'nested_namespace' which is nested in the name space 'some_namespace'?

some_namespace:::nested_namespace:::a_function()

I checked Section 1.6 of R-exts.pdf. It seems that nested namespace is
not supported, right?


From romain.francois at dbmail.com  Sat Jan  9 22:03:19 2010
From: romain.francois at dbmail.com (Romain Francois)
Date: Sat, 09 Jan 2010 22:03:19 +0100
Subject: [Rd] Is nested namespace supported?
In-Reply-To: <366c6f341001091253q1891f1beteacfe35fa578ea53@mail.gmail.com>
References: <366c6f341001091253q1891f1beteacfe35fa578ea53@mail.gmail.com>
Message-ID: <4B48EF17.1030601@dbmail.com>

On 01/09/2010 09:53 PM, Peng Yu wrote:
>
> Could somebody let me know if there is nested name space supported?
> For example, is it possible to define a function in the name space
> 'nested_namespace' which is nested in the name space 'some_namespace'?
>
> some_namespace:::nested_namespace:::a_function()
>
> I checked Section 1.6 of R-exts.pdf. It seems that nested namespace is
> not supported, right?

It is not even grammatically valid:

 > parse( text = "foo::bar::foobar" )
Error in parse(text = "foo::bar::foobar") :
   unexpected '::' in "foo::bar::"

 > parse( text = "foo:::bar:::foobar" )
Error in parse(text = "foo:::bar:::foobar") :
   unexpected ':::' in "foo:::bar:::"

Romain

-- 
Romain Francois
Professional R Enthusiast
+33(0) 6 28 91 30 30
http://romainfrancois.blog.free.fr
|- http://tr.im/JOlc : External pointers with Rcpp
|- http://tr.im/JFqa : R Journal, Volume 1/2, December 2009
`- http://tr.im/IW9B : C++ exceptions at the R level


From pengyu.ut at gmail.com  Sat Jan  9 22:36:41 2010
From: pengyu.ut at gmail.com (Peng Yu)
Date: Sat, 9 Jan 2010 15:36:41 -0600
Subject: [Rd] Is nested namespace supported?
In-Reply-To: <4B48EF17.1030601@dbmail.com>
References: <366c6f341001091253q1891f1beteacfe35fa578ea53@mail.gmail.com>
	<4B48EF17.1030601@dbmail.com>
Message-ID: <366c6f341001091336p1bf1d1aew773d10dcca4b8aa5@mail.gmail.com>

On Sat, Jan 9, 2010 at 3:03 PM, Romain Francois
<romain.francois at dbmail.com> wrote:
> On 01/09/2010 09:53 PM, Peng Yu wrote:
>>
>> Could somebody let me know if there is nested name space supported?
>> For example, is it possible to define a function in the name space
>> 'nested_namespace' which is nested in the name space 'some_namespace'?
>>
>> some_namespace:::nested_namespace:::a_function()
>>
>> I checked Section 1.6 of R-exts.pdf. It seems that nested namespace is
>> not supported, right?
>
> It is not even grammatically valid:
>
>> parse( text = "foo::bar::foobar" )
> Error in parse(text = "foo::bar::foobar") :
> ?unexpected '::' in "foo::bar::"
>
>> parse( text = "foo:::bar:::foobar" )
> Error in parse(text = "foo:::bar:::foobar") :
> ?unexpected ':::' in "foo:::bar:::"

Do you mean nested namespace is not supported in R?


From pburns at pburns.seanet.com  Sun Jan 10 12:58:36 2010
From: pburns at pburns.seanet.com (Patrick Burns)
Date: Sun, 10 Jan 2010 11:58:36 +0000
Subject: [Rd] available.packages and 2.10.0
Message-ID: <4B49C0EC.3090606@pburns.seanet.com>

I'm confused about how to change a repository
so that it doesn't hit the bug in 'available.packages'
in 2.10.0 that was fixed in 2.10.1.

I presume it involves adding fields to the
PACKAGES file.



Patrick Burns
patrick at burns-stat.com
+44 (0)20 8525 0696
http://www.burns-stat.com
(home of "The R Inferno" and "A Guide for the Unwilling S User")


From bolker at ufl.edu  Mon Jan 11 17:34:24 2010
From: bolker at ufl.edu (Ben Bolker)
Date: Mon, 11 Jan 2010 11:34:24 -0500
Subject: [Rd] snark of the day: new "features" (??)  in Mathematica 7
Message-ID: <4B4B5310.7020506@ufl.edu>


  who wants to write rgl code to do these?

http://tinyurl.com/yzojfn2
http://tinyurl.com/ylrz2p8

  :-)

  Ben Bolker


-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 261 bytes
Desc: OpenPGP digital signature
URL: <https://stat.ethz.ch/pipermail/r-devel/attachments/20100111/15c6208b/attachment.bin>

From ligges at statistik.tu-dortmund.de  Mon Jan 11 17:36:01 2010
From: ligges at statistik.tu-dortmund.de (Uwe Ligges)
Date: Mon, 11 Jan 2010 17:36:01 +0100
Subject: [Rd] available.packages and 2.10.0
In-Reply-To: <4B49C0EC.3090606@pburns.seanet.com>
References: <4B49C0EC.3090606@pburns.seanet.com>
Message-ID: <4B4B5371.3020001@statistik.tu-dortmund.de>



On 10.01.2010 12:58, Patrick Burns wrote:
> I'm confused about how to change a repository
> so that it doesn't hit the bug in 'available.packages'
> in 2.10.0 that was fixed in 2.10.1.
>
> I presume it involves adding fields to the
> PACKAGES file.


I think an empty field an the PACKAGES file with only one package or so, 
but cannot remember exactly. Try adding another package. And since 
R-2.10.0 is ancient ... ;-)

Best wishes,
Uwe Ligges


From bates at stat.wisc.edu  Mon Jan 11 18:00:07 2010
From: bates at stat.wisc.edu (Douglas Bates)
Date: Mon, 11 Jan 2010 11:00:07 -0600
Subject: [Rd] snark of the day: new "features" (??) in Mathematica 7
In-Reply-To: <4B4B5310.7020506@ufl.edu>
References: <4B4B5310.7020506@ufl.edu>
Message-ID: <40e66e0b1001110900r6751e2d2x7116bcd915796c85@mail.gmail.com>

On Mon, Jan 11, 2010 at 10:34 AM, Ben Bolker <bolker at ufl.edu> wrote:

> ?who wants to write rgl code to do these?

> http://tinyurl.com/yzojfn2
> http://tinyurl.com/ylrz2p8

> ?:-)

I think that on this one we should follow Nancy Reagan's advice and
"Just say no".

I wonder if they have read Tufte's descriptions of "chart junk".  If
so they missed the point that chart junk isn't a good thing.


From marc_schwartz at me.com  Mon Jan 11 18:07:37 2010
From: marc_schwartz at me.com (Marc Schwartz)
Date: Mon, 11 Jan 2010 11:07:37 -0600
Subject: [Rd] snark of the day: new "features" (??) in Mathematica 7
In-Reply-To: <40e66e0b1001110900r6751e2d2x7116bcd915796c85@mail.gmail.com>
References: <4B4B5310.7020506@ufl.edu>
	<40e66e0b1001110900r6751e2d2x7116bcd915796c85@mail.gmail.com>
Message-ID: <5D30489D-0088-4267-B6B7-0458B3107FA8@me.com>

On Jan 11, 2010, at 11:00 AM, Douglas Bates wrote:

> On Mon, Jan 11, 2010 at 10:34 AM, Ben Bolker <bolker at ufl.edu> wrote:
>
>>  who wants to write rgl code to do these?
>
>> http://tinyurl.com/yzojfn2
>> http://tinyurl.com/ylrz2p8
>
>>  :-)
>
> I think that on this one we should follow Nancy Reagan's advice and
> "Just say no".
>
> I wonder if they have read Tufte's descriptions of "chart junk".  If
> so they missed the point that chart junk isn't a good thing.



There is a certain irony in their using cows for symbols in the second  
chart...

Regards,

Marc Schwartz


From p.dalgaard at biostat.ku.dk  Mon Jan 11 19:34:32 2010
From: p.dalgaard at biostat.ku.dk (Peter Dalgaard)
Date: Mon, 11 Jan 2010 19:34:32 +0100
Subject: [Rd] snark of the day: new "features" (??) in Mathematica 7
In-Reply-To: <5D30489D-0088-4267-B6B7-0458B3107FA8@me.com>
References: <4B4B5310.7020506@ufl.edu>	<40e66e0b1001110900r6751e2d2x7116bcd915796c85@mail.gmail.com>
	<5D30489D-0088-4267-B6B7-0458B3107FA8@me.com>
Message-ID: <4B4B6F38.5040601@biostat.ku.dk>

Marc Schwartz wrote:
> On Jan 11, 2010, at 11:00 AM, Douglas Bates wrote:
> 
>> On Mon, Jan 11, 2010 at 10:34 AM, Ben Bolker <bolker at ufl.edu> wrote:
>>
>>>  who wants to write rgl code to do these?
>>
>>> http://tinyurl.com/yzojfn2
>>> http://tinyurl.com/ylrz2p8
>>
>>>  :-)
>>
>> I think that on this one we should follow Nancy Reagan's advice and
>> "Just say no".
>>
>> I wonder if they have read Tufte's descriptions of "chart junk".  If
>> so they missed the point that chart junk isn't a good thing.
> 
> 
> 
> There is a certain irony in their using cows for symbols in the second 
> chart...

Wrong gender, isn't it?

At least(?) they are not replicating the classic example from "How to 
Lie with Statistics" where the cows grow proportionally in all three 
dimensions.

> 
> Regards,
> 
> Marc Schwartz



-- 
    O__  ---- Peter Dalgaard             ?ster Farimagsgade 5, Entr.B
   c/ /'_ --- Dept. of Biostatistics     PO Box 2099, 1014 Cph. K
  (*) \(*) -- University of Copenhagen   Denmark      Ph:  (+45) 35327918
~~~~~~~~~~ - (p.dalgaard at biostat.ku.dk)              FAX: (+45) 35327907


From suharto_anggono at yahoo.com  Tue Jan 12 06:35:12 2010
From: suharto_anggono at yahoo.com (suharto_anggono at yahoo.com)
Date: Tue, 12 Jan 2010 06:35:12 +0100 (CET)
Subject: [Rd] Wishlist: Function 'difftime' to honor 'tzone' attribute
	(PR#14182)
Message-ID: <20100112053512.236E5282EFFB@mail.pubhealth.ku.dk>

Full_Name: Suharto Anggono
Version: 2.8.1
OS: Windows
Submission from: (NULL) (125.165.84.118)


PR#14076 inspired me to write this.

> t1 <- as.POSIXct("1970-01-01 00:00:00", tz="GMT")
> t2 <- as.POSIXlt("1970-01-01 00:00:00", tz="GMT")
> t1 - t2
Time difference of 7 hours

Above, t1 and t2 represent the same time in the same specified timezone.
Therefore, it is reasonable if their difference is zero.

The result is like above because the function '-.POSIXt' calls the function
'difftime', and function 'difftime' does not honor 'tzone' attribute, as can be
seen from this part of the function definition.

function (time1, time2, tz = "", units = c("auto", "secs", "mins",
    "hours", "days", "weeks"))
{
    time1 <- as.POSIXct(time1, tz = tz)
    time2 <- as.POSIXct(time2, tz = tz)
    ...
}

Function 'difftime' calls 'as.POSIXct' with the value of 'tz' argument. If 'tz'
argument is not supplied, "" (current timezone) is used.

I wish function 'difftime' could honor 'tzone' attribute. The above part of the
function definition can be changed to be like this.

function (time1, time2, tz, units = c("auto", "secs", "mins",
    "hours", "days", "weeks"))
{
    if (missing(tz)) {
        time1 <- as.POSIXct(time1)
        time2 <- as.POSIXct(time2)
    }
    else {
        time1 <- as.POSIXct(time1, tz = tz)
        time2 <- as.POSIXct(time2, tz = tz)
    }
    ...
}

I see that, if 'tz' argument is not supplied, function 'as.POSIXct.POSIXlt' uses
the value of 'tzone' attribute if present.

> version
               _
platform       i386-pc-mingw32
arch           i386
os             mingw32
system         i386, mingw32
status
major          2
minor          8.1
year           2008
month          12
day            22
svn rev        47281
language       R
version.string R version 2.8.1 (2008-12-22)
> sessionInfo()
R version 2.8.1 (2008-12-22)
i386-pc-mingw32

locale:
LC_COLLATE=English_United States.1252;LC_CTYPE=English_United
States.1252;LC_MON
ETARY=English_United States.1252;LC_NUMERIC=C;LC_TIME=English_United
States.1252


attached base packages:
[1] stats     graphics  grDevices utils     datasets  methods   base
> Sys.timezone()
[1] "ICT"


From henrik.parn at bio.ntnu.no  Mon Jan 11 16:10:11 2010
From: henrik.parn at bio.ntnu.no (henrik.parn at bio.ntnu.no)
Date: Mon, 11 Jan 2010 16:10:11 +0100 (CET)
Subject: [Rd] Documentation: format of read.table help text (PR#14180)
Message-ID: <20100111151011.CA760282EFC7@mail.pubhealth.ku.dk>

Dear R developers,

I find the format of descriptions of the arguments in the read.table 
help text slightly inconsistent.

For example, the logical arguments comes in seven different formats, 
more or less explicit about the consequences of a TRUE (or FALSE):

1. check.names 	logical. If TRUE then the names...
2. blank.lines.skip  logical: if TRUE blank lines...
3. flush 	logical: if TRUE, scan...

4. header 	a logical value indicating whether...

5. allowEscapes 	logical. Should C-style [...] ?
6. stringsAsFactors logical: should character [...] ?

7. strip.white 	logical. Used only when...


First, I believe that a consistent style would make the help text easier 
to follow. Second, I believe that an explicit style (sth like: "logical. 
If TRUE/FALSE then...") is more intuitive and thus preferable over the 
other styles. This might apply to other help pages as well.

I fully understand that the choice of style in help text is a matter of 
taste and not of very high priority. Nevertheless, I just wish to 
mention it as a potential for improvement.


Thank you for your great work with R!


Best regards,

Henrik


R version 2.10.1 (2009-12-14)
i386-pc-mingw32

locale:
[1] LC_COLLATE=English_United Kingdom.1252  LC_CTYPE=English_United 
Kingdom.1252    LC_MONETARY=English_United Kingdom.1252 LC_NUMERIC=C 

[5] LC_TIME=English_United Kingdom.1252

attached base packages:
[1] grDevices datasets  splines   graphics  stats     tcltk     utils 
   methods   base

other attached packages:
[1] svSocket_0.9-48 TinnR_1.0.3     R2HTML_1.59-1   Hmisc_3.7-0 
survival_2.35-7

loaded via a namespace (and not attached):
[1] cluster_1.12.1  grid_2.10.1     lattice_0.17-26 svMisc_0.9-56 
tools_2.10.1

-- 
Henrik P?rn
Centre for Conservation Biology
Department of Biology
Norwegian University of Science and Technology
NO-7491 Trondheim
Norway

Office: +47 73596285
Fax: +47 73596100
Mobile: +47 90989255

E-mail: henrik.parn at bio.ntnu.no


From pdemoulin at gmail.com  Mon Jan 11 17:05:08 2010
From: pdemoulin at gmail.com (pdemoulin at gmail.com)
Date: Mon, 11 Jan 2010 17:05:08 +0100 (CET)
Subject: [Rd] Error description not prompted but R crashes instead (PR#14181)
Message-ID: <20100111160508.BD6B6282EFE9@mail.pubhealth.ku.dk>

Full_Name: Philippe Demoulin
Version: R version 2.10.0 (2009-10-26)
OS: OSX 10.4.11 on PPC
Submission from: (NULL) (80.236.193.215)


Test:
At the prompt, just type (without quotes) "> x=1:3". Please note the redundant
">" explictly keyed in for simulating the error

On my daughter MacMini G4 PPC 10.4.11 JSE 1.5, an normal error "Unexpected
character >" is issued.

But on my iMac 10.4.11 PPC JSE 1.5 (so, same environment), R crashes:
Exception:  EXC_BAD_ACCESS (0x0001)
Codes:      KERN_PROTECTION_FAILURE (0x0002) at 0x00000020

Thread 0 Crashed:
0   libobjc.A.dylib          	0x90a410f8 objc_msgSend + 24
1   org.R-project.R          	0x0000dae4 Re_RBusy + 60 (Rcallbacks.m:178)
2   libR.dylib               	0x003cdcf0 R_ReplDLLdo1 + 64
3   org.R-project.R          	0x00018358 run_REngineRmainloop + 368
(Rinit.m:521)
4   org.R-project.R          	0x00010a0c -[REngine runREPL] + 484
(REngine.m:181)
5   org.R-project.R          	0x00002a38 main + 1040 (main.m:140)
6   org.R-project.R          	0x000025ac _start + 760
7   org.R-project.R          	0x000022b0 start + 48


Regards
Philippe Demoulin, Tilff, Belgium


From oehl_list at gmx.de  Mon Jan 11 22:19:12 2010
From: oehl_list at gmx.de (=?iso-8859-15?Q?Jens_Oehlschl=E4gel?=)
Date: Mon, 11 Jan 2010 22:19:12 +0100
Subject: [Rd] seq.int broken (seq as well) (PR#14169)
Message-ID: <1467566599@web.de>

Petr,

Aside of the fact that the argument about someting bad being good because documented is strongly overused. I think this does NOT behave as documented, because 
a) the behaviour cannot be explained by rounding error on double precision. 
b) 1e7 is not even outside the range of integer calculation
Up to the limit of a) or at least upto b) any expression of the type seq(a, b, by=b) should only return a but not b. Also something like seq.int should ONLY use and return integer, for performance reasons, but even more so for reliability: the reported behaviour is not just a little bit wrong. Since seq is used for looping in R, the looping of the language is broken. This can have severe consequences like accessing beyond the limits of an array. If C-code is involved, this can crash R. In the worst case algorithms can silently do wrong. Being an admirer of R since its early days, I was shocked to see this, and as a consequence, I suggest we do our homework and suspend -- for a year or two -- any claims that R can be used productive such as SAS. 

Yours regretfully
Jens Oehlschl?gel


From jeff.d.hamann at gmail.com  Mon Jan 11 23:10:27 2010
From: jeff.d.hamann at gmail.com (Jeff Hamann)
Date: Mon, 11 Jan 2010 14:10:27 -0800
Subject: [Rd] interfacing R with RFC2445
Message-ID: <0AD378BB-D4D2-4461-8159-33D107BEED0F@gmail.com>

R Developers, 

I cannot seem to find an R package that can read/write iCalendar (RFC2445) files. 

I have found the libical library at sourceforge. I've used it briefly so it may be what I need, but again no R interface. I may have to connect the dots myself. 

I'm guessing this might be useful for someone other than myself (scrubbing files, performing temporal analysis on events, etc). 

Since I need to perform these tasks, I will probably do it using R if I can get away with it. 

Can anyone provide some basic advice for me? A list object of entries? The original data will be coming from an SQL table/view result.

Is there any interest in helping with funding such a small project?

Thanks,
Jeff. 

From ripley at stats.ox.ac.uk  Tue Jan 12 10:04:01 2010
From: ripley at stats.ox.ac.uk (Prof Brian Ripley)
Date: Tue, 12 Jan 2010 09:04:01 +0000 (GMT)
Subject: [Rd] (PR#14181) Error description not prompted but R crashes
 instead
In-Reply-To: <20100111160508.BD6B6282EFE9@mail.pubhealth.ku.dk>
References: <20100111160508.BD6B6282EFE9@mail.pubhealth.ku.dk>
Message-ID: <alpine.LFD.2.00.1001120902560.22814@gannet.stats.ox.ac.uk>

Is this from the Mac GUI R.app.  You are asked to send bug reports on 
that to the R-sig-mac list, as this is almost certainly not a bug in 
R but R.app, a separate project.

On Mon, 11 Jan 2010, pdemoulin at gmail.com wrote:

> Full_Name: Philippe Demoulin
> Version: R version 2.10.0 (2009-10-26)
> OS: OSX 10.4.11 on PPC
> Submission from: (NULL) (80.236.193.215)
>
>
> Test:
> At the prompt, just type (without quotes) "> x=1:3". Please note the redundant
> ">" explictly keyed in for simulating the error
>
> On my daughter MacMini G4 PPC 10.4.11 JSE 1.5, an normal error "Unexpected
> character >" is issued.
>
> But on my iMac 10.4.11 PPC JSE 1.5 (so, same environment), R crashes:
> Exception:  EXC_BAD_ACCESS (0x0001)
> Codes:      KERN_PROTECTION_FAILURE (0x0002) at 0x00000020
>
> Thread 0 Crashed:
> 0   libobjc.A.dylib          	0x90a410f8 objc_msgSend + 24
> 1   org.R-project.R          	0x0000dae4 Re_RBusy + 60 (Rcallbacks.m:178)
> 2   libR.dylib               	0x003cdcf0 R_ReplDLLdo1 + 64
> 3   org.R-project.R          	0x00018358 run_REngineRmainloop + 368
> (Rinit.m:521)
> 4   org.R-project.R          	0x00010a0c -[REngine runREPL] + 484
> (REngine.m:181)
> 5   org.R-project.R          	0x00002a38 main + 1040 (main.m:140)
> 6   org.R-project.R          	0x000025ac _start + 760
> 7   org.R-project.R          	0x000022b0 start + 48
>
>
> Regards
> Philippe Demoulin, Tilff, Belgium
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>

-- 
Brian D. Ripley,                  ripley at stats.ox.ac.uk
Professor of Applied Statistics,  http://www.stats.ox.ac.uk/~ripley/
University of Oxford,             Tel:  +44 1865 272861 (self)
1 South Parks Road,                     +44 1865 272866 (PA)
Oxford OX1 3TG, UK                Fax:  +44 1865 272595


From jel+r at cs.uni-magdeburg.de  Tue Jan 12 16:15:12 2010
From: jel+r at cs.uni-magdeburg.de (jel+r at cs.uni-magdeburg.de)
Date: Tue, 12 Jan 2010 16:15:12 +0100 (CET)
Subject: [Rd] rgl: bogus configure[.ac] (PR#14183)
Message-ID: <20100112151512.7382E283031F@mail.pubhealth.ku.dk>

Full_Name: Jens Elkner
Version: 2.10.1
OS: Solaris
Submission from: (NULL) (141.44.24.14)


The configure.ac is bogus, since it does not include additional library pathes
at the right place and thus fails. E.g.:

$R_HOME/bin/R CMD INSTALL -l $PROTO/R/library \
    --configure-args='--with-gl-includes=/usr/X11/include/NVIDIA
--with-gl-libs=/usr/X11/lib/NVIDIA/amd64' $TMPBUILD

And thus configure tries: cc ... -lGL -L/usr/X11/lib/NVIDIA/amd64
which obviously fails: the path needs to be placed before -l...
So the correct way is to add the path to LD_FLAGS instead of LIBS.

To get the path at the correct place into the to PKG_LIBS limitted Makevars,
one
needs to add the path, when the LIB expansion has been done. Suggested patch:

--- rgl/configure.ac.orig   Mon Feb  2 14:31:24 2009
+++ rgl/configure.ac    Tue Jan 12 06:16:52 2010
@@ -157,9 +157,12 @@
 
 AC_ARG_WITH(gl-libs,
 [  --with-gl-libs=DIR      specify location of OpenGL libs],
-[LIBS="${LIBS} -L${withval}"]
+[LDFLAGS="${LDFLAGS} -L${withval}"
+L_LIB="-L${withval}"
+]
 )
 
+
 AC_ARG_WITH(gl-libname,
 [  --with-gl-libname=NAME  specify Library name (defaults to "GL")], 
 [lGL=${withval}], [lGL=GL]
@@ -179,6 +182,9 @@
 if test "x$this" != xyes; then
   AC_ERROR([missing required library ${lGLU}])
 fi
+if test x$L_LIB != x; then
+   LIBS="${L_LIB} ${LIBS}"
+fi
 
 ## --- FTGL ------------------------------------------------------------------


From jel+r at cs.uni-magdeburg.de  Tue Jan 12 16:19:57 2010
From: jel+r at cs.uni-magdeburg.de (Jens Elkner)
Date: Tue, 12 Jan 2010 16:19:57 +0100
Subject: [Rd] MCMCpack + SunStudio12 patch
Message-ID: <20100112151957.GA5743@trex.cs.uni-magdeburg.de>

Hi,

FYI: made some patches to get MCMCpack compiled with Sun StudioCompiler 12
(on Solaris).  If somebody wanna try/comment on it:
http://iws.cs.uni-magdeburg.de/~elkner/R/MCMCpack-studio.patch

Regards,
jel.
-- 
Otto-von-Guericke University     http://www.cs.uni-magdeburg.de/
Department of Computer Science   Geb. 29 R 027, Universitaetsplatz 2
39106 Magdeburg, Germany         Tel: +49 391 67 12768


From simon.urbanek at r-project.org  Tue Jan 12 16:40:17 2010
From: simon.urbanek at r-project.org (simon.urbanek at r-project.org)
Date: Tue, 12 Jan 2010 16:40:17 +0100 (CET)
Subject: [Rd] (PR#14181) Error description not prompted but R crashes
	instead
Message-ID: <20100112154017.774D0282EF3D@mail.pubhealth.ku.dk>


On Jan 12, 2010, at 4:04 , Prof Brian Ripley wrote:

> Is this from the Mac GUI R.app.  You are asked to send bug reports  
> on that to the R-sig-mac list, as this is almost certainly not a bug  
> in R but R.app, a separate project.
>

Even worse, this is a known bug long fixed in R 2.10.1 and hence a  
doubly pointless report ...
Cheers,
Simon


> On Mon, 11 Jan 2010, pdemoulin at gmail.com wrote:
>
>> Full_Name: Philippe Demoulin
>> Version: R version 2.10.0 (2009-10-26)
>> OS: OSX 10.4.11 on PPC
>> Submission from: (NULL) (80.236.193.215)
>>
>>
>> Test:
>> At the prompt, just type (without quotes) "> x=1:3". Please note  
>> the redundant
>> ">" explictly keyed in for simulating the error
>>
>> On my daughter MacMini G4 PPC 10.4.11 JSE 1.5, an normal error  
>> "Unexpected
>> character >" is issued.
>>
>> But on my iMac 10.4.11 PPC JSE 1.5 (so, same environment), R crashes:
>> Exception:  EXC_BAD_ACCESS (0x0001)
>> Codes:      KERN_PROTECTION_FAILURE (0x0002) at 0x00000020
>>
>> Thread 0 Crashed:
>> 0   libobjc.A.dylib          	0x90a410f8 objc_msgSend + 24
>> 1   org.R-project.R          	0x0000dae4 Re_RBusy + 60  
>> (Rcallbacks.m:178)
>> 2   libR.dylib               	0x003cdcf0 R_ReplDLLdo1 + 64
>> 3   org.R-project.R          	0x00018358 run_REngineRmainloop + 368
>> (Rinit.m:521)
>> 4   org.R-project.R          	0x00010a0c -[REngine runREPL] + 484
>> (REngine.m:181)
>> 5   org.R-project.R          	0x00002a38 main + 1040 (main.m:140)
>> 6   org.R-project.R          	0x000025ac _start + 760
>> 7   org.R-project.R          	0x000022b0 start + 48
>>
>>
>> Regards
>> Philippe Demoulin, Tilff, Belgium
>>
>> ______________________________________________
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>
>
> -- 
> Brian D. Ripley,                  ripley at stats.ox.ac.uk
> Professor of Applied Statistics,  http://www.stats.ox.ac.uk/~ripley/
> University of Oxford,             Tel:  +44 1865 272861 (self)
> 1 South Parks Road,                     +44 1865 272866 (PA)
> Oxford OX1 3TG, UK                Fax:  +44 1865 272595
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>
>


From murdoch at stats.uwo.ca  Tue Jan 12 17:05:26 2010
From: murdoch at stats.uwo.ca (Duncan Murdoch)
Date: Tue, 12 Jan 2010 11:05:26 -0500
Subject: [Rd] rgl: bogus configure[.ac] (PR#14183)
In-Reply-To: <20100112151512.7382E283031F@mail.pubhealth.ku.dk>
References: <20100112151512.7382E283031F@mail.pubhealth.ku.dk>
Message-ID: <4B4C9DC6.9050706@stats.uwo.ca>

This isn't an R bug; please don't submit it to the R bug address.  You 
should email such things to the package maintainer.  In this case that's 
me, so I'll take a look.

rgl (like many packages) also has its own bug tracker (on R-forge in the 
case of rgl); that's another good place to send bugs for such packages.

Duncan Murdoch

On 12/01/2010 10:15 AM, jel+r at cs.uni-magdeburg.de wrote:
> Full_Name: Jens Elkner
> Version: 2.10.1
> OS: Solaris
> Submission from: (NULL) (141.44.24.14)
>
>
> The configure.ac is bogus, since it does not include additional library pathes
> at the right place and thus fails. E.g.:
>
> $R_HOME/bin/R CMD INSTALL -l $PROTO/R/library \
>     --configure-args='--with-gl-includes=/usr/X11/include/NVIDIA
> --with-gl-libs=/usr/X11/lib/NVIDIA/amd64' $TMPBUILD
>
> And thus configure tries: cc ... -lGL -L/usr/X11/lib/NVIDIA/amd64
> which obviously fails: the path needs to be placed before -l...
> So the correct way is to add the path to LD_FLAGS instead of LIBS.
>
> To get the path at the correct place into the to PKG_LIBS limitted Makevars,
> one
> needs to add the path, when the LIB expansion has been done. Suggested patch:
>
> --- rgl/configure.ac.orig   Mon Feb  2 14:31:24 2009
> +++ rgl/configure.ac    Tue Jan 12 06:16:52 2010
> @@ -157,9 +157,12 @@
>  
>  AC_ARG_WITH(gl-libs,
>  [  --with-gl-libs=DIR      specify location of OpenGL libs],
> -[LIBS="${LIBS} -L${withval}"]
> +[LDFLAGS="${LDFLAGS} -L${withval}"
> +L_LIB="-L${withval}"
> +]
>  )
>  
> +
>  AC_ARG_WITH(gl-libname,
>  [  --with-gl-libname=NAME  specify Library name (defaults to "GL")], 
>  [lGL=${withval}], [lGL=GL]
> @@ -179,6 +182,9 @@
>  if test "x$this" != xyes; then
>    AC_ERROR([missing required library ${lGLU}])
>  fi
> +if test x$L_LIB != x; then
> +   LIBS="${L_LIB} ${LIBS}"
> +fi
>  
>  ## --- FTGL ------------------------------------------------------------------
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>


From wdunlap at tibco.com  Tue Jan 12 18:04:37 2010
From: wdunlap at tibco.com (William Dunlap)
Date: Tue, 12 Jan 2010 09:04:37 -0800
Subject: [Rd] Documentation: format of read.table help text (PR#14180)
In-Reply-To: <20100111151011.CA760282EFC7@mail.pubhealth.ku.dk>
References: <20100111151011.CA760282EFC7@mail.pubhealth.ku.dk>
Message-ID: <77EB52C6DD32BA4D87471DCD70C8D7000258E8A0@NA-PA-VBE03.na.tibco.com>

> -----Original Message-----
> From: r-devel-bounces at r-project.org 
> [mailto:r-devel-bounces at r-project.org] On Behalf Of 
> henrik.parn at bio.ntnu.no
> Sent: Monday, January 11, 2010 7:10 AM
> To: r-devel at stat.math.ethz.ch
> Cc: R-bugs at r-project.org
> Subject: [Rd] Documentation: format of read.table help text (PR#14180)
> 
> Dear R developers,
> 
> I find the format of descriptions of the arguments in the read.table 
> help text slightly inconsistent.
> 
> For example, the logical arguments comes in seven different formats, 
> more or less explicit about the consequences of a TRUE (or FALSE):
> 
> 1. check.names 	logical. If TRUE then the names...
> 2. blank.lines.skip  logical: if TRUE blank lines...
> 3. flush 	logical: if TRUE, scan...
> 
> 4. header 	a logical value indicating whether...
> 
> 5. allowEscapes 	logical. Should C-style [...] ?
> 6. stringsAsFactors logical: should character [...] ?
> 
> 7. strip.white 	logical. Used only when...
> 
> 
> First, I believe that a consistent style would make the help 
> text easier 
> to follow. Second, I believe that an explicit style (sth 
> like: "logical. 
> If TRUE/FALSE then...") is more intuitive 

It would also be nice if the argument description indicated
if the argument should have length one or if it could be a
general vector.

E.g. a style guide could say the default is that
arguments are general vectors but that
   stringsAsFactors logical scalar.  If TRUE ...
would tell us that stringsAsFactors had to be of length
one (so you cannot say that some columns are to be factors
and others not).  The code phrase could be '<type> scalar'
or 'a <type>' but having a common phrase would help.

Bill Dunlap
Spotfire, TIBCO Software
wdunlap tibco.com 

> and thus preferable 
> over the 
> other styles. This might apply to other help pages as well.
> 
> I fully understand that the choice of style in help text is a 
> matter of 
> taste and not of very high priority. Nevertheless, I just wish to 
> mention it as a potential for improvement.
> 
> 
> Thank you for your great work with R!
> 
> 
> Best regards,
> 
> Henrik
> 
> 
> R version 2.10.1 (2009-12-14)
> i386-pc-mingw32
> 
> locale:
> [1] LC_COLLATE=English_United Kingdom.1252  LC_CTYPE=English_United 
> Kingdom.1252    LC_MONETARY=English_United Kingdom.1252 LC_NUMERIC=C 
> 
> [5] LC_TIME=English_United Kingdom.1252
> 
> attached base packages:
> [1] grDevices datasets  splines   graphics  stats     tcltk     utils 
>    methods   base
> 
> other attached packages:
> [1] svSocket_0.9-48 TinnR_1.0.3     R2HTML_1.59-1   Hmisc_3.7-0 
> survival_2.35-7
> 
> loaded via a namespace (and not attached):
> [1] cluster_1.12.1  grid_2.10.1     lattice_0.17-26 svMisc_0.9-56 
> tools_2.10.1
> 
> -- 
> Henrik P?rn
> Centre for Conservation Biology
> Department of Biology
> Norwegian University of Science and Technology
> NO-7491 Trondheim
> Norway
> 
> Office: +47 73596285
> Fax: +47 73596100
> Mobile: +47 90989255
> 
> E-mail: henrik.parn at bio.ntnu.no
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
> 


From murdoch at stats.uwo.ca  Tue Jan 12 19:53:16 2010
From: murdoch at stats.uwo.ca (Duncan Murdoch)
Date: Tue, 12 Jan 2010 13:53:16 -0500
Subject: [Rd] Documentation: format of read.table help text (PR#14180)
In-Reply-To: <20100111151011.CA760282EFC7@mail.pubhealth.ku.dk>
References: <20100111151011.CA760282EFC7@mail.pubhealth.ku.dk>
Message-ID: <4B4CC51C.7030009@stats.uwo.ca>

On 11/01/2010 10:10 AM, henrik.parn at bio.ntnu.no wrote:
> Dear R developers,
>
> I find the format of descriptions of the arguments in the read.table 
> help text slightly inconsistent.
>   

"Slightly inconsistent" is not a bug.  Your bug report is quite likely 
to be ignored because of that and because of the lack of an offer to 
actually do the work it entails, regardless of the validity of your 
observations.

A way to have attention paid to it is to choose a consistent style, then 
edit every man page in one of the base packages to follow it, and submit 
the patches to all those files, with an offer to do the rest once the 
style is accepted.  Expect that there will be one or more rounds of 
discussion about whether your style really is usable.  Writing a style 
guide would really help.

Sound like too much work?  I agree.

Duncan Murdoch
> For example, the logical arguments comes in seven different formats, 
> more or less explicit about the consequences of a TRUE (or FALSE):
>
> 1. check.names 	logical. If TRUE then the names...
> 2. blank.lines.skip  logical: if TRUE blank lines...
> 3. flush 	logical: if TRUE, scan...
>
> 4. header 	a logical value indicating whether...
>
> 5. allowEscapes 	logical. Should C-style [...] ?
> 6. stringsAsFactors logical: should character [...] ?
>
> 7. strip.white 	logical. Used only when...
>
>
> First, I believe that a consistent style would make the help text easier 
> to follow. Second, I believe that an explicit style (sth like: "logical. 
> If TRUE/FALSE then...") is more intuitive and thus preferable over the 
> other styles. This might apply to other help pages as well.
>
> I fully understand that the choice of style in help text is a matter of 
> taste and not of very high priority. Nevertheless, I just wish to 
> mention it as a potential for improvement.
>
>
> Thank you for your great work with R!
>
>
> Best regards,
>
> Henrik
>
>
> R version 2.10.1 (2009-12-14)
> i386-pc-mingw32
>
> locale:
> [1] LC_COLLATE=English_United Kingdom.1252  LC_CTYPE=English_United 
> Kingdom.1252    LC_MONETARY=English_United Kingdom.1252 LC_NUMERIC=C 
>
> [5] LC_TIME=English_United Kingdom.1252
>
> attached base packages:
> [1] grDevices datasets  splines   graphics  stats     tcltk     utils 
>    methods   base
>
> other attached packages:
> [1] svSocket_0.9-48 TinnR_1.0.3     R2HTML_1.59-1   Hmisc_3.7-0 
> survival_2.35-7
>
> loaded via a namespace (and not attached):
> [1] cluster_1.12.1  grid_2.10.1     lattice_0.17-26 svMisc_0.9-56 
> tools_2.10.1
>
>


From pdemoulin at gmail.com  Tue Jan 12 17:15:29 2010
From: pdemoulin at gmail.com (pdemoulin at gmail.com)
Date: Tue, 12 Jan 2010 17:15:29 +0100 (CET)
Subject: [Rd] (PR#14181) Error description not prompted but R crashes
Message-ID: <20100112161529.B99B1282EF55@mail.pubhealth.ku.dk>

2010/1/12 Simon Urbanek <simon.urbanek at r-project.org>

> Even worse, this is a known bug long fixed in R 2.10.1 and hence a doubly
> pointless report ...
> Cheers,
> Simon
>
>
> You're right... have not seen that my daughter has a more recent version.
Download 2.10.1 from KUL-Leuven mirror on my G5 and all is fine: you can
close the ticket
Thanks for this follow-up
Phil

	[[alternative HTML version deleted]]


From b.rowlingson at lancaster.ac.uk  Wed Jan 13 09:37:03 2010
From: b.rowlingson at lancaster.ac.uk (Barry Rowlingson)
Date: Wed, 13 Jan 2010 08:37:03 +0000
Subject: [Rd] seq.int broken (seq as well) (PR#14169)
In-Reply-To: <1467566599@web.de>
References: <1467566599@web.de>
Message-ID: <d8ad40b51001130037o2a2e7a96w59b97a2d66fa21f0@mail.gmail.com>

2010/1/11 Jens Oehlschl?gel <oehl_list at gmx.de>:
> Petr,
> This can have severe consequences like accessing beyond the limits of an array. If C-code is involved, this can crash R. In the worst case algorithms can silently do wrong. Being an admirer of R since its early days, I was shocked to see this, and as a consequence, I suggest we do our homework and suspend -- for a year or two -- any claims that R can be used productive such as SAS.

 Invalid Argument Error

 What does SAS do in these cases? How do you know? How do you know if
your SAS code isn't silently doing wrong? How do you know what caused
your SAS session to crash? How do you know what algorithms SAS uses
deep down inside?

 R gives you the source code, you can find these things out. The great
irony here is that SAS have "THE POWER TO KNOW" as a registered
trademark.

 Perhaps The R Foundation should trademark "THE POWER TO LEARN"?

Barry


From k.jewell at campden.co.uk  Wed Jan 13 18:03:54 2010
From: k.jewell at campden.co.uk (Keith Jewell)
Date: Wed, 13 Jan 2010 17:03:54 -0000
Subject: [Rd] Lightweight 'package' idea.
References: <d8ad40b50908210503xf67354fhfd5f3beede550df0@mail.gmail.com>
	<971536df0908210532k1152976al404b94a230f9858e@mail.gmail.com>
Message-ID: <hikudu$373$1@ger.gmane.org>

Going back a few months....
I also thought "it would be nice if R had built into it some way of running 
code in source packages possibly with degraded functionality to ease 
development"
so building on Barry Rowlingsons start I came up with this:
---------------------------
loadDir <- function(.Root = choose.dir(getwd())){
   require(tools, quietly=TRUE) # for Rd2HTML
  .Package = basename(.Root)  # package name defined by directory name
  while(sum(search()==.Package)>0) detach(pos=which(search()==.Package)[1]) 
# if already attached, detach
  attach(NULL, name=.Package) # attach empty environment
  assign(".Root", .Root, pos=.Package) # insert .Root into .Package
# create reloadDir function and add into .Package
  reloadDir <- function(.Package) {     # .Package must be character
    for (f in list.files(path=file.path(get(".Root", pos=.Package) , "R"), 
# path is .Root/R/
       pattern=".R$",full.names=TRUE,recursive=TRUE,ignore.case=TRUE)) 
# file type = .R
       sys.source(f, envir=as.environment(.Package))       # source all such 
files into .Package
       invisible(.Package)} # invisibly return package name
  assign(x = "reloadDir", value = reloadDir, pos=.Package)
# create help.'.Package' function and add into package
#   (because function is created here, current value of .Root is in its 
environment)
  help.Package <- function(subj=""){    # default subject is blank
      if (substitute(subj)=="") subj = "*" else subj <- paste("*", 
substitute(subj), "*", sep="")  # get *subj*' as character
      hfile <- list.files(path=file.path(.Root, "man"), # path is .Root/man/
        pattern=paste(subj,"Rd$", sep="."),           # file = subj.Rd
        full.names=TRUE,recursive=TRUE,ignore.case=TRUE) # list of matching 
files
      if (length(hfile) != 1)       # if not exactly one file, choose one
        hfile <- choose.files(file.path(.Root, "man", paste(subj,"Rd", 
sep=".")), multi=FALSE)
      if(hfile != "") {     # if exactly one file, open it
        if(length(grep(".Rd$", hfile, ignore.case=TRUE)) ==1) { # if it's an 
Rd file, create/update html
           outfile <- sub("Rd$", "html", hfile, ignore.case=TRUE)  # name of 
corresponding html
           Rd2HTML(hfile, sub("Rd$", "html", hfile, ignore.case=TRUE), 
.Package)   # convert Rd to html
           hfile <- sub("Rd$", "html", hfile, ignore.case=TRUE)} # point to 
html
        shell.exec(shQuote(hfile))} # use operating system to open file of 
any type
        invisible(hfile)}    # invisibly return help file name
  assign(x = paste("help", .Package, sep="."), value=help.Package, 
pos=.Package)
# use the reloadDir function to populate the environment
  reloadDir(.Package)
  invisible(.Package)  # invisibly return .Package name
   }
---------------------------
and a corresponding .Rd file
----------------------------
\name{loadDir}
\alias{reloadDir}
\alias{help.Package}
\title{Load an unbuilt package}
\description{
Loads code from a packages \file{\\R} subdirectory and gives access to help 
files in the packages
 \file{\\man} subdirectory (translating \file{.Rd} files to \file{.html}).
}
\usage{
loadDir(.Root = choose.dir(getwd()))
reloadDir(.Package)
help.'.Package'(subj="")
}
\arguments{
  \item{.Root}{character, scalar. The package directory (containing 
subdirectories \file{\\R} and \file{\\man}). \cr
            \code{basename(.Root)} is taken as the package name 
(\code{.Package}).}
  \item{.Package}{character, scalar. Package name to be reloaded}
  \item{subj}{character, scalar. File name to be searched for in 
\file{\\man} subdirectory}
}
\details{ \describe{
\item{\code{loadDir}}{ attaches an environment at the second position on the 
search list with name \code{basename(.Root)} (after detaching any existing 
entries with that name). Into that environment it sources all \file{.R} 
files in the \file{\\R} subdirectory, searching recursively. \cr
In that environment it also places \code{.Root} and \code{.Package 
<-basename(.Root)} so that \code{get(".Root", pos=.Package)} can be used to 
retrieve the original file path. \cr
In that environment it also places function \code{reloadDir} (q.v.) \cr
In that environment it also places a function named '\code{help.}' followed 
by the name of the package (see \code{help.'.Package'})}
\item{\code{reloadDir}}{ re-sources all \file{.R} files in the packages 
\file{\\R} subdirectory, searching recursively.}
\item{\code{help.'.Package'}}{ recursively searches the packages 
\file{\\man} subdirectory for files named \code{subj}, initially searching 
for files of type \file{.Rd}. \cr
If there is not exactly one such file it opens a \code{file.choose} dialog 
to choose a single file of any type. \cr
If the single file is of type \file{.Rd} it is translated to a 
correspondingly named \file{.html} file in the same folder, which is opened 
by the operating system's file associations. \cr
If the file chosen is of any other type it is opened by the operating 
system's file associations.} }}
\value{ \describe{
 \item{\code{loadDir}}{  \code{invisible(.Package)}, scalar, character}
 \item{\code{reloadDir}}{  \code{invisible(.Package)}, scalar, character}
 \item{\code{help.'.Package'}}{\code{invisible}, scalar, character; file 
opened (the \file{.html} file if a \file{.Rd} file was chosen)}}
}
\references{
%% ~put references to the literature/web site here ~
}
\author{
%%  ~~who you are~~
}
\note{
%%  ~~further notes~~
}

%% ~Make other sections like Warning with \section{Warning }{....} ~

\seealso{
%% ~~objects to See Also as \code{\link{help}}, ~~~
}
\examples{
\dontrun{
 loadDir() navigating to '\\\\Server02\\stats\\R\\CBRIutils' adds the 
package CBRIutils
   then
 reload("CBRIutils") re-sources all '\\R\\*.R' files.
   and
 help.CBRIutils(item) converts '\\man\\item.Rd' to '\\man\\item.html' which 
it opens in the default web browser.}}
% Add one or more standard keywords, see file 'KEYWORDS' in the
% R documentation directory.
\keyword{ ~kwd1 }
\keyword{ ~kwd2 }% __ONLY ONE__ keyword per line
-----------------------------------

No guarantees or warranties of any kind, but perhaps people will find it 
useful.
I'm sure real R experts will be able to improve it....

Regards,

Keith J
============================
"Gabor Grothendieck" <ggrothendieck at gmail.com> wrote in message 
news:971536df0908210532k1152976al404b94a230f9858e at mail.gmail.com...
That's nifty.  Perhaps it could look into

   /foo/bar/baz/lib1/*/R

in which case one could simply place source
packages in /foo/bar/baz/lib1

In fact it would be nice if R had built into it some way
of running code in source packages possibly with
degraded functionality to ease development, i.e.
if one added /foo/bar/baz/lib1 to .libPaths and if xx
were a source package in /foo/bar/baz/lib1 then
one could use library(xx) and use xx functions directly,
possibly with degraded functionality, e.g. no help files.

On Fri, Aug 21, 2009 at 8:03 AM, Barry
Rowlingson<b.rowlingson at lancaster.ac.uk> wrote:
> I'm often wanting to develop functions whilst manipulating data. But I
> don't want to end up with a .RData full of functions and data. It
> might be that I have functions that are re-usable but not worth
> sticking in a package.
>
> So I've tried to come up with a paradigm for function development
> that more closely follows the way Matlab and Python do it (partly
> inspired by a confused Matlab convert over on R-help).
>
> My requirements were thus:
>
> * .R files as the master source for R functions
> * Don't see the functions in ls()
> * After editing R, make it easy to update the definitions visible to
> R (unlike rebuilding and reloading a package).
>
> So I wrote these two in a few mins:
>
> loadDir <- function(dir){
> e = attach(NULL,name=dir)
> assign("__path__",dir,envir=e)
> reloadDir(e)
> e
> }
>
> reloadDir <- function(e){
> path = get("__path__",e)
> files = 
> list.files(path,".R$",full.names=TRUE,recursive=TRUE,ignore.case=TRUE)
> for(f in files){
> sys.source(f,envir=e)
> }
> }
>
> Usage is something like:
>
> lib1 = loadDir("/foo/bar/baz/lib1/")
>
> - it creates a new environment on the search path and sources any .R
> it finds in there into that environment. If you edit anything in that
> directory, just do reloadDir(lib1) and the updated definitions are
> loaded. It's like python's "import foo" and "reload(foo)".
>
> Sourcing everything on any change seems a bit wasteful, but until R
> objects have timestamps I can't think of a better way. Hmm, maybe my
> environment could keep a __timestamp__ object... Okay, this is getting
> less simple now...
>
> So anyway, have I done anything wrong or stupid here, or is it a
> useful paradigm that seems so obvious someone else has probably done
> it (better)?
>
> Barry
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>


From bernd_bischl at gmx.net  Wed Jan 13 19:25:17 2010
From: bernd_bischl at gmx.net (bernd_bischl at gmx.net)
Date: Wed, 13 Jan 2010 19:25:17 +0100 (CET)
Subject: [Rd] bug in callNextMethod (PR#14185)
Message-ID: <20100113182517.89E232830318@mail.pubhealth.ku.dk>

Hi,

there seems to be a possible bug in callNextMethod in conjunction with 
the [-operator.

Relevant info, minimal example and sessionInfo follow below:

###############################

setClass("foo", representation = representation(a = "numeric"))
setClass("bar", contains = "foo")

setMethod(
        f = "[",
        signature = signature("foo"),
        def = function(x,i,j,...,drop=TRUE) {
            cat("drop in foo-[ :", drop, "\n")
            return(1)
        }
)

setMethod(
        f = "[",
        signature = signature("bar"),
        def = function(x,i,j,...,drop=TRUE) {
            cat("drop in bar-[ :", drop, "\n")
            # we lose the value of drop here, when the call gets 
dispatched to the super method by callNextMethod
            callNextMethod()
        }
)

x <- new("foo")
x[1, drop=FALSE]
# drop in foo-[ : FALSE
y <- new("bar")
y[1, drop=FALSE]
# drop in bar-[ : FALSE
# drop in foo-[ : TRUE 

###############################

#?callNextMethod
#The statement that the method is called with the current arguments is 
more precisely as follows. Arguments that were missing in the current 
call are still missing (remember that "missing" is a valid class in a 
method signature). For a formal argument, say x, that appears in the 
original call, there is a corresponding argument in the next method call 
equivalent to x = x. In effect, this means that the next method sees the 
same actual arguments, but arguments are evaluated only once.

###############################


#S3 gets this right:

'[.foo' <- function(x, i, j, ..., drop=TRUE) {
    cat("drop in foo-[ :", drop, "\n")
}
       
'[.bar' <- function(x, i, j, ..., drop=TRUE) {
    cat("drop in bar-[ :", drop, "\n")
    NextMethod()
}

x <- 1
class(x) <- c("bar", "foo")
x[1, drop=FALSE]
# drop in bar-[ : FALSE
# drop in foo-[ : FALSE

###############################

 > sessionInfo()
R version 2.11.0 Under development (unstable) (2010-01-12 r50970)
i386-pc-mingw32

locale:
[1] LC_COLLATE=German_Germany.1252  LC_CTYPE=German_Germany.1252  
[3] LC_MONETARY=German_Germany.1252 LC_NUMERIC=C                  
[5] LC_TIME=German_Germany.1252   

attached base packages:
[1] stats     graphics  grDevices utils     datasets  methods   base    

loaded via a namespace (and not attached):
[1] tools_2.11.0


From jgalkows at akamai.com  Wed Jan 13 23:16:30 2010
From: jgalkows at akamai.com (Galkowski, Jan)
Date: Wed, 13 Jan 2010 17:16:30 -0500
Subject: [Rd] Is this "strftime" behavior (on WinXP) what's expected?
Message-ID: <060297ED35E55C4288D052893BBE1F3F03FD00ED@MAVS1.kendall.corp.akamai.com>

An embedded and charset-unspecified text was scrubbed...
Name: not available
URL: <https://stat.ethz.ch/pipermail/r-devel/attachments/20100113/9d3b9749/attachment.pl>

From ross at biostat.ucsf.edu  Thu Jan 14 00:15:36 2010
From: ross at biostat.ucsf.edu (Ross Boylan)
Date: Wed, 13 Jan 2010 15:15:36 -0800
Subject: [Rd] Rd output garbled in some circumstances
Message-ID: <1263424536.6304.69.camel@corn.betterworld.us>

I'm having trouble getting correct help output in some circumstances for
a package I've created. Though this is not an issue with the current R,
I would like my package to work with previous ones as well.

I'm looking for suggestions about how I could rework my .Rd file so that
it will work with prior R's.  In particular, R 2.7 is in the latest
stable release of Debian, so I'd like to solve the problem for 2.7.

The .Rd file is for a function and has an arguments section like this
\arguments{
  \item{formula}{ A formula giving the vectors containing
## skipped
    covariates.  }
## skipped
  \item{stepdenominator}{See \code{stepnumerator} just above.}
  
  \item{do.what}{\describe{
    \item{1}{By default, calculates a maximimum likelihood.  To evaluate
      a single likelihood, set all parameters to fixed. }
    \item{0}{Count number of paths and related statistics without
      evaluating the likelihood.}
    \item{-1}{Get detailed counts (but no likelihoods) associated with
      each case.  The return value is a matrix.}
    \item{10}{Use the model to generate a random path for each
      case. returning a \code{data.frame} with simulated observed states
      and times and all other data as observed.}
    }}

  \item{testing}{This argument is  only for use by developers.  Set it
## etc

This comes out fine in a pdf, but ?mspath (the function) produces, in
part,
<quote>
stepdenominator: See 'stepnumerator' just above.

     1 By default, calculates a maximimum likelihood.  To evaluate a
          single likelihood, set all parameters to fixed. 

     0 Count number of paths and related statistics without evaluating
          the likelihood.
</quote>
in R 2.7.  The "do.what" header has vanished.  In R 2.10 it's fine.

Is there an error in my documentation format?
Even if not, is there some change I could make that would get R 2.7 to
work better?

The R change log doesn't show anything obviously related to this, though
it has several references to unspecified fixes to the documentation
system.  I also tried looking at the bug tracker, but couldn't find
anything--in fact I had trouble identifying bugs in the documentation
system as opposed to bugs in the documentation.

Thanks.
Ross Boylan


From jmc at r-project.org  Thu Jan 14 01:09:30 2010
From: jmc at r-project.org (John Chambers)
Date: Wed, 13 Jan 2010 16:09:30 -0800
Subject: [Rd] bug in callNextMethod (PR#14185)
In-Reply-To: <20100113182517.89E232830318@mail.pubhealth.ku.dk>
References: <20100113182517.89E232830318@mail.pubhealth.ku.dk>
Message-ID: <4B4E60BA.5060502@r-project.org>

Yes, a bug prevented callNextMethod() from detecting the special case of 
the `[` call, for which it did have code.

Should be fixed in the current 2.11.0 (r 50976).

Thanks for the helpful bug report.

John Chambers

bernd_bischl at gmx.net wrote:
> Hi,
>
> there seems to be a possible bug in callNextMethod in conjunction with 
> the [-operator.
>
> Relevant info, minimal example and sessionInfo follow below:
>
> ###############################
>
> setClass("foo", representation = representation(a = "numeric"))
> setClass("bar", contains = "foo")
>
> setMethod(
>         f = "[",
>         signature = signature("foo"),
>         def = function(x,i,j,...,drop=TRUE) {
>             cat("drop in foo-[ :", drop, "\n")
>             return(1)
>         }
> )
>
> setMethod(
>         f = "[",
>         signature = signature("bar"),
>         def = function(x,i,j,...,drop=TRUE) {
>             cat("drop in bar-[ :", drop, "\n")
>             # we lose the value of drop here, when the call gets 
> dispatched to the super method by callNextMethod
>             callNextMethod()
>         }
> )
>
> x <- new("foo")
> x[1, drop=FALSE]
> # drop in foo-[ : FALSE
> y <- new("bar")
> y[1, drop=FALSE]
> # drop in bar-[ : FALSE
> # drop in foo-[ : TRUE 
>
> ###############################
>
> #?callNextMethod
> #The statement that the method is called with the current arguments is 
> more precisely as follows. Arguments that were missing in the current 
> call are still missing (remember that "missing" is a valid class in a 
> method signature). For a formal argument, say x, that appears in the 
> original call, there is a corresponding argument in the next method call 
> equivalent to x = x. In effect, this means that the next method sees the 
> same actual arguments, but arguments are evaluated only once.
>
> ###############################
>
>
> #S3 gets this right:
>
> '[.foo' <- function(x, i, j, ..., drop=TRUE) {
>     cat("drop in foo-[ :", drop, "\n")
> }
>        
> '[.bar' <- function(x, i, j, ..., drop=TRUE) {
>     cat("drop in bar-[ :", drop, "\n")
>     NextMethod()
> }
>
> x <- 1
> class(x) <- c("bar", "foo")
> x[1, drop=FALSE]
> # drop in bar-[ : FALSE
> # drop in foo-[ : FALSE
>
> ###############################
>
>  > sessionInfo()
> R version 2.11.0 Under development (unstable) (2010-01-12 r50970)
> i386-pc-mingw32
>
> locale:
> [1] LC_COLLATE=German_Germany.1252  LC_CTYPE=German_Germany.1252  
> [3] LC_MONETARY=German_Germany.1252 LC_NUMERIC=C                  
> [5] LC_TIME=German_Germany.1252   
>
> attached base packages:
> [1] stats     graphics  grDevices utils     datasets  methods   base    
>
> loaded via a namespace (and not attached):
> [1] tools_2.11.0
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>
>


From murdoch at stats.uwo.ca  Thu Jan 14 01:46:35 2010
From: murdoch at stats.uwo.ca (Duncan Murdoch)
Date: Wed, 13 Jan 2010 19:46:35 -0500
Subject: [Rd] Rd output garbled in some circumstances
In-Reply-To: <1263424536.6304.69.camel@corn.betterworld.us>
References: <1263424536.6304.69.camel@corn.betterworld.us>
Message-ID: <4B4E696B.2020508@stats.uwo.ca>

On 13/01/2010 6:15 PM, Ross Boylan wrote:
> I'm having trouble getting correct help output in some circumstances for
> a package I've created. Though this is not an issue with the current R,
> I would like my package to work with previous ones as well.
> 
> I'm looking for suggestions about how I could rework my .Rd file so that
> it will work with prior R's.  In particular, R 2.7 is in the latest
> stable release of Debian, so I'd like to solve the problem for 2.7.
> 
> The .Rd file is for a function and has an arguments section like this
> \arguments{
>   \item{formula}{ A formula giving the vectors containing
> ## skipped
>     covariates.  }
> ## skipped
>   \item{stepdenominator}{See \code{stepnumerator} just above.}
>   
>   \item{do.what}{\describe{
>     \item{1}{By default, calculates a maximimum likelihood.  To evaluate
>       a single likelihood, set all parameters to fixed. }
>     \item{0}{Count number of paths and related statistics without
>       evaluating the likelihood.}
>     \item{-1}{Get detailed counts (but no likelihoods) associated with
>       each case.  The return value is a matrix.}
>     \item{10}{Use the model to generate a random path for each
>       case. returning a \code{data.frame} with simulated observed states
>       and times and all other data as observed.}
>     }}
> 
>   \item{testing}{This argument is  only for use by developers.  Set it
> ## etc
> 
> This comes out fine in a pdf, but ?mspath (the function) produces, in
> part,
> <quote>
> stepdenominator: See 'stepnumerator' just above.
> 
>      1 By default, calculates a maximimum likelihood.  To evaluate a
>           single likelihood, set all parameters to fixed. 
> 
>      0 Count number of paths and related statistics without evaluating
>           the likelihood.
> </quote>
> in R 2.7.  The "do.what" header has vanished.  In R 2.10 it's fine.
> 
> Is there an error in my documentation format?
> Even if not, is there some change I could make that would get R 2.7 to
> work better?

I would avoid nesting the \describe within \arguments.  Both basically 
use the same formatting code, and 2.7 probably doesn't support nesting 
properly.  There was no real parser there, just a fallible pattern 
matching approach.

A better solution is to say your package requires a recent version of R, 
but maybe that's not feasible for you.

Duncan Murdoch

> 
> The R change log doesn't show anything obviously related to this, though
> it has several references to unspecified fixes to the documentation
> system.  I also tried looking at the bug tracker, but couldn't find
> anything--in fact I had trouble identifying bugs in the documentation
> system as opposed to bugs in the documentation.
> 
> Thanks.
> Ross Boylan
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From btyner at gmail.com  Thu Jan 14 03:10:55 2010
From: btyner at gmail.com (Benjamin Tyner)
Date: Wed, 13 Jan 2010 21:10:55 -0500
Subject: [Rd] Mksetup() limited to hashing with 32 bits
Message-ID: <4B4E7D2F.5060904@gmail.com>

The MKsetup() in unique.c throws an error if the vector to be hashed is 
longer than (2^32)/8:

    if(n < 0 || n > 536870912) /* protect against overflow to -ve */
        error(_("length %d is too large for hashing"), n);

I occasionally work with vectors longer than this on 64-bit builds. Would it be too much to ask that R can take advantage of all 64 bits for hashing when compiled as such?

Thanks
Ben


From b.rowlingson at lancaster.ac.uk  Thu Jan 14 10:17:05 2010
From: b.rowlingson at lancaster.ac.uk (Barry Rowlingson)
Date: Thu, 14 Jan 2010 09:17:05 +0000
Subject: [Rd] interfacing R with RFC2445
In-Reply-To: <0AD378BB-D4D2-4461-8159-33D107BEED0F@gmail.com>
References: <0AD378BB-D4D2-4461-8159-33D107BEED0F@gmail.com>
Message-ID: <d8ad40b51001140117v27b47f5eoed6524be60106c4d@mail.gmail.com>

An embedded and charset-unspecified text was scrubbed...
Name: not available
URL: <https://stat.ethz.ch/pipermail/r-devel/attachments/20100114/bd97d75a/attachment.pl>

From romain.francois at dbmail.com  Thu Jan 14 11:42:42 2010
From: romain.francois at dbmail.com (Romain Francois)
Date: Thu, 14 Jan 2010 11:42:42 +0100
Subject: [Rd] how to call a function from C
Message-ID: <4B4EF522.8020703@dbmail.com>

Hi,

In Rcpp, we now have a "Function" class to encapsulate functions (they 
cover all three kinds, but this may change).

To call the function, what we do is generate a call with the function as 
the first node and then evaluate the call.

SEXP stats = PROTECT( R_FindNamespace( mkString( "stats") ) );
SEXP rnorm = PROTECT( findVarInFrame( stats, install( "rnorm") ) ) ;
SEXP call = PROTECT( LCONS( rnorm, CONS( ScalarInteger(10), 
CONS(ScalarReal(0), R_NilValue ) ) ) );
SEXP res = PROTECT( eval( call , R_GlobalEnv ) );
UNPROTECT(4) ;
return res ;

It works, but I was wondering if there was another way. I've seen 
applyClosure, but I'm not sure I should attempt to use it or if using a 
call like above is good enough.

Romain

PS: using Rcpp's C++ classes you would express the code above as :

Environment stats("package:stats") ;
Function rnorm = stats.get( "rnorm" )
return rnorm( 10, 0.0 ) ;


-- 
Romain Francois
Professional R Enthusiast
+33(0) 6 28 91 30 30
http://romainfrancois.blog.free.fr
|- http://tr.im/KfKn : Rcpp 0.7.2
|- http://tr.im/JOlc : External pointers with Rcpp
`- http://tr.im/JFqa : R Journal, Volume 1/2, December 2009


From lgautier at gmail.com  Thu Jan 14 12:42:23 2010
From: lgautier at gmail.com (Laurent Gautier)
Date: Thu, 14 Jan 2010 12:42:23 +0100
Subject: [Rd] how to call a function from C
In-Reply-To: <mailman.31.1263466812.18774.r-devel@r-project.org>
References: <mailman.31.1263466812.18774.r-devel@r-project.org>
Message-ID: <4B4F031F.7000202@gmail.com>


> Hi,
>
> In Rcpp, we now have a "Function" class to encapsulate functions
> (they cover all three kinds, but this may change).

Just a note on that: there is probably no hurry to do so.
rpy2 is also having CLOSXP, BUILTINSXP, and SPECIALSXP represented as 
one function-like class and seems to be behave reasonably while a lot of 
other things seem more urgent to sort out.

> To call the function, what we do is generate a call with the function
> as the first node and then evaluate the call.
>
> SEXP stats = PROTECT( R_FindNamespace( mkString( "stats") ) ); SEXP
> rnorm = PROTECT( findVarInFrame( stats, install( "rnorm") ) ) ; SEXP
> call = PROTECT( LCONS( rnorm, CONS( ScalarInteger(10),
> CONS(ScalarReal(0), R_NilValue ) ) ) ); SEXP res = PROTECT( eval(
> call , R_GlobalEnv ) ); UNPROTECT(4) ; return res ;
>
> It works, but I was wondering if there was another way. I've seen
> applyClosure, but I'm not sure I should attempt to use it or if using
> a call like above is good enough.

Using R_tryEval() will let you evaluate an expression in a given 
environment, as well as capture an eventual error occurring during its 
evaluation (and translate it as an exception).

> Romain
>
> PS: using Rcpp's C++ classes you would express the code above as :
>
> Environment stats("package:stats") ; Function rnorm = stats.get(
> "rnorm" ) return rnorm( 10, 0.0 ) ;

Feel free to snoop in rpy2's rpy/rinterface/rinterface.c and look for 
"do_try_eval". The behavior looks very similar, the above snippet in 
rpy2 would write like:

from rpy2.robjects.packages import importr
stats = importr('stats')
stats.rnorm(10, 0.0)


> -- Romain Francois Professional R Enthusiast +33(0) 6 28 91 30 30
> http://romainfrancois.blog.free.fr |- http://tr.im/KfKn : Rcpp 0.7.2
> |- http://tr.im/JOlc : External pointers with Rcpp `-
> http://tr.im/JFqa : R Journal, Volume 1/2, December 2009


From mdowle at mdowle.plus.com  Thu Jan 14 12:45:31 2010
From: mdowle at mdowle.plus.com (Matthew Dowle)
Date: Thu, 14 Jan 2010 11:45:31 -0000
Subject: [Rd] wiki down?
References: <4B44B12A.60004@ufl.edu>
Message-ID: <hin054$630$1@ger.gmane.org>

I see the same problem. The wiki link on the R homepage doesn't seem to 
respond.
A search of r-devel for subjects containing "wiki" finds this seemingly 
unanswered recent post.
Is it known?
-Matthew

"Ben Bolker" <bolker at ufl.edu> wrote in message 
news:4B44B12A.60004 at ufl.edu...
>


From romain.francois at dbmail.com  Thu Jan 14 13:16:29 2010
From: romain.francois at dbmail.com (Romain Francois)
Date: Thu, 14 Jan 2010 13:16:29 +0100
Subject: [Rd] how to call a function from C
In-Reply-To: <4B4F031F.7000202@gmail.com>
References: <mailman.31.1263466812.18774.r-devel@r-project.org>
	<4B4F031F.7000202@gmail.com>
Message-ID: <4B4F0B1D.8060108@dbmail.com>

On 01/14/2010 12:42 PM, Laurent Gautier wrote:
>> Hi,
>>
>> In Rcpp, we now have a "Function" class to encapsulate functions
>> (they cover all three kinds, but this may change).
>
> Just a note on that: there is probably no hurry to do so.
> rpy2 is also having CLOSXP, BUILTINSXP, and SPECIALSXP represented as
> one function-like class and seems to be behave reasonably while a lot of
> other things seem more urgent to sort out.
>
>> To call the function, what we do is generate a call with the function
>> as the first node and then evaluate the call.
>>
>> SEXP stats = PROTECT( R_FindNamespace( mkString( "stats") ) ); SEXP
>> rnorm = PROTECT( findVarInFrame( stats, install( "rnorm") ) ) ; SEXP
>> call = PROTECT( LCONS( rnorm, CONS( ScalarInteger(10),
>> CONS(ScalarReal(0), R_NilValue ) ) ) ); SEXP res = PROTECT( eval(
>> call , R_GlobalEnv ) ); UNPROTECT(4) ; return res ;
>>
>> It works, but I was wondering if there was another way. I've seen
>> applyClosure, but I'm not sure I should attempt to use it or if using
>> a call like above is good enough.
>
> Using R_tryEval() will let you evaluate an expression in a given
> environment, as well as capture an eventual error occurring during its
> evaluation (and translate it as an exception).

Sure. I did not want to over-complicate the question.

I'm currently reviewing tryEval and its underlying R_TopLevelExec which 
does not give me enough : when the error occurs, it'd be useful that the 
function returns the condition object instead of NULL.

>> Romain
>>
>> PS: using Rcpp's C++ classes you would express the code above as :
>>
>> Environment stats("package:stats") ; Function rnorm = stats.get(
>> "rnorm" ) return rnorm( 10, 0.0 ) ;
>
> Feel free to snoop in rpy2's rpy/rinterface/rinterface.c and look for
> "do_try_eval". The behavior looks very similar, the above snippet in
> rpy2 would write like:
>
> from rpy2.robjects.packages import importr
> stats = importr('stats')
> stats.rnorm(10, 0.0)

nice

-- 
Romain Francois
Professional R Enthusiast
+33(0) 6 28 91 30 30
http://romainfrancois.blog.free.fr
|- http://tr.im/KfKn : Rcpp 0.7.2
|- http://tr.im/JOlc : External pointers with Rcpp
`- http://tr.im/JFqa : R Journal, Volume 1/2, December 2009


From lgautier at gmail.com  Thu Jan 14 14:27:33 2010
From: lgautier at gmail.com (Laurent Gautier)
Date: Thu, 14 Jan 2010 14:27:33 +0100
Subject: [Rd] how to call a function from C
In-Reply-To: <4B4F0B1D.8060108@dbmail.com>
References: <mailman.31.1263466812.18774.r-devel@r-project.org>
	<4B4F031F.7000202@gmail.com> <4B4F0B1D.8060108@dbmail.com>
Message-ID: <4B4F1BC5.8020307@gmail.com>

On 1/14/10 1:16 PM, Romain Francois wrote:
> On 01/14/2010 12:42 PM, Laurent Gautier wrote:
>>> Hi,
>>>
>>> In Rcpp, we now have a "Function" class to encapsulate functions
>>> (they cover all three kinds, but this may change).
>>
>> Just a note on that: there is probably no hurry to do so.
>> rpy2 is also having CLOSXP, BUILTINSXP, and SPECIALSXP represented as
>> one function-like class and seems to be behave reasonably while a lot of
>> other things seem more urgent to sort out.
>>
>>> To call the function, what we do is generate a call with the function
>>> as the first node and then evaluate the call.
>>>
>>> SEXP stats = PROTECT( R_FindNamespace( mkString( "stats") ) ); SEXP
>>> rnorm = PROTECT( findVarInFrame( stats, install( "rnorm") ) ) ; SEXP
>>> call = PROTECT( LCONS( rnorm, CONS( ScalarInteger(10),
>>> CONS(ScalarReal(0), R_NilValue ) ) ) ); SEXP res = PROTECT( eval(
>>> call , R_GlobalEnv ) ); UNPROTECT(4) ; return res ;
>>>
>>> It works, but I was wondering if there was another way. I've seen
>>> applyClosure, but I'm not sure I should attempt to use it or if using
>>> a call like above is good enough.
>>
>> Using R_tryEval() will let you evaluate an expression in a given
>> environment, as well as capture an eventual error occurring during its
>> evaluation (and translate it as an exception).
>
> Sure. I did not want to over-complicate the question.
>
> I'm currently reviewing tryEval and its underlying R_TopLevelExec which
> does not give me enough : when the error occurs, it'd be useful that the
> function returns the condition object instead of NULL.

I possibly went the same path, and ended with R_tryEval. When looking at 
it, I could not figure out any way to get what I wanted outside using 
"geterrmessage" in base.
The error string is in the variable errbuf (in src/main/error.c), with 
no obvious route to access it (and if truly no route, this might be 
something missing from the R C-API).

>>> Romain
>>>
>>> PS: using Rcpp's C++ classes you would express the code above as :
>>>
>>> Environment stats("package:stats") ; Function rnorm = stats.get(
>>> "rnorm" ) return rnorm( 10, 0.0 ) ;
>>
>> Feel free to snoop in rpy2's rpy/rinterface/rinterface.c and look for
>> "do_try_eval". The behavior looks very similar, the above snippet in
>> rpy2 would write like:p/

I meant "do_eval_expr".


>> from rpy2.robjects.packages import importr
>> stats = importr('stats')
>> stats.rnorm(10, 0.0)
>
> nice
>


From djsamperi at gmail.com  Thu Jan 14 15:50:33 2010
From: djsamperi at gmail.com (Dominick Samperi)
Date: Thu, 14 Jan 2010 09:50:33 -0500
Subject: [Rd] how to call a function from C
In-Reply-To: <4B4F0B1D.8060108@dbmail.com>
References: <mailman.31.1263466812.18774.r-devel@r-project.org>
	<4B4F031F.7000202@gmail.com> <4B4F0B1D.8060108@dbmail.com>
Message-ID: <d4cf43b61001140650x4a822a8bo517b36ed19998885@mail.gmail.com>

An embedded and charset-unspecified text was scrubbed...
Name: not available
URL: <https://stat.ethz.ch/pipermail/r-devel/attachments/20100114/044fae0f/attachment.pl>

From romain.francois at dbmail.com  Thu Jan 14 16:20:53 2010
From: romain.francois at dbmail.com (Romain Francois)
Date: Thu, 14 Jan 2010 16:20:53 +0100
Subject: [Rd] how to call a function from C
In-Reply-To: <d4cf43b61001140650x4a822a8bo517b36ed19998885@mail.gmail.com>
References: <mailman.31.1263466812.18774.r-devel@r-project.org>	
	<4B4F031F.7000202@gmail.com> <4B4F0B1D.8060108@dbmail.com>
	<d4cf43b61001140650x4a822a8bo517b36ed19998885@mail.gmail.com>
Message-ID: <4B4F3655.30107@dbmail.com>

On 01/14/2010 03:50 PM, Dominick Samperi wrote:
> The Rcpp library in RcppTemplate (the package that Rcpp forked from)
> simplifies the process
> of calling functions from C++. The design goal was to enable users to
> focus on
> scientific problem solving rather than interface problems and low-level
> R internals (by
> hiding these details and documenting everything).

Hello Dominick,

In the Rcpp package, you'd call the rnorm function like this :

/* grab the environment called "package:stats" */
Environment stats("package:stats") ;
/* or like this if you want the namespace */
/* Environment stats = Environment::namespace_env("stats") ;*/

/* grab function called 'rnorm' from this environment */
Function rnorm = stats.get("rnorm" ) ;

/* call the function, about the same way you'd do in R
  *
  * > rnorm( 10L, sd = 100 )
  */
return rnorm( 10, Named( "sd", 100.0 ) ) ;

All involved SEXP are encapsulated in suitable C++ objects, such as 
Environment, Function, etc ... the user does not need to know about 
SEXP, does not need to care about the PROTECT/UNPROTECT dance, etc ...

Please let me know which of these three lines of C++ code you consider 
to be low level R internals.

It might be interesting that you post how you would invoke the same 
using RcppTemplate.

> The current Rcpp package is a mashup of the packages RcppTemplate (old
> version),
> inline, and RInside

It is not anything even kind of close to that.

There was code from the inline package at some point, but it is now back 
into inline, which has been improved to support easy inlining of code 
making use of Rcpp.

There is nothing of RInside in Rcpp, it goes the other way, RInside 
depends on Rcpp and uses its features to ease embedding R into an 
existing C++ application

The Rcpp package is under a lot of changes. See :
- http://dirk.eddelbuettel.com/blog/2010/01/12/#rcpp_0.7.2
- http://dirk.eddelbuettel.com/blog/2010/01/02/#rcpp_0.7.1
- 
http://romainfrancois.blog.free.fr/index.php?post/2010/01/13/Rcpp-0.7.2-is-out
- 
http://romainfrancois.blog.free.fr/index.php?post/2010/01/08/External-pointers-with-Rcpp
- 
http://romainfrancois.blog.free.fr/index.php?post/2009/12/29/new-things-in-Rcpp

> that involves a fair amount of low-level R hacking,
> and this is
> probably consistent with the preferences of most readers of this list.

Can you be more specific ?

The whole purpose of the package is to hide the R API. The user does not 
need to know the R API to use the classes of Rcpp. We however indeed use 
and abuse the R API a lot internally.

Romain

> If I am mistaken and there are any users of RcppTemplate please let me
> know, as I
> am thinking about reoganizing that package to minimize confusion with
> the fork.
>
> Thanks,
> Dominick
>
> On Thu, Jan 14, 2010 at 7:16 AM, Romain Francois
> <romain.francois at dbmail.com <mailto:romain.francois at dbmail.com>> wrote:
>
>     On 01/14/2010 12:42 PM, Laurent Gautier wrote:
>
>             Hi,
>
>             In Rcpp, we now have a "Function" class to encapsulate functions
>             (they cover all three kinds, but this may change).
>
>
>         Just a note on that: there is probably no hurry to do so.
>         rpy2 is also having CLOSXP, BUILTINSXP, and SPECIALSXP
>         represented as
>         one function-like class and seems to be behave reasonably while
>         a lot of
>         other things seem more urgent to sort out.
>
>             To call the function, what we do is generate a call with the
>             function
>             as the first node and then evaluate the call.
>
>             SEXP stats = PROTECT( R_FindNamespace( mkString( "stats") )
>             ); SEXP
>             rnorm = PROTECT( findVarInFrame( stats, install( "rnorm") )
>             ) ; SEXP
>             call = PROTECT( LCONS( rnorm, CONS( ScalarInteger(10),
>             CONS(ScalarReal(0), R_NilValue ) ) ) ); SEXP res = PROTECT(
>             eval(
>             call , R_GlobalEnv ) ); UNPROTECT(4) ; return res ;
>
>             It works, but I was wondering if there was another way. I've
>             seen
>             applyClosure, but I'm not sure I should attempt to use it or
>             if using
>             a call like above is good enough.
>
>
>         Using R_tryEval() will let you evaluate an expression in a given
>         environment, as well as capture an eventual error occurring
>         during its
>         evaluation (and translate it as an exception).
>
>
>     Sure. I did not want to over-complicate the question.
>
>     I'm currently reviewing tryEval and its underlying R_TopLevelExec
>     which does not give me enough : when the error occurs, it'd be
>     useful that the function returns the condition object instead of NULL.
>
>
>             Romain
>
>             PS: using Rcpp's C++ classes you would express the code
>             above as :
>
>             Environment stats("package:stats") ; Function rnorm = stats.get(
>             "rnorm" ) return rnorm( 10, 0.0 ) ;
>
>
>         Feel free to snoop in rpy2's rpy/rinterface/rinterface.c and
>         look for
>         "do_try_eval". The behavior looks very similar, the above snippet in
>         rpy2 would write like:
>
>         from rpy2.robjects.packages import importr
>         stats = importr('stats')
>         stats.rnorm(10, 0.0)
>
>
>     nice

-- 
Romain Francois
Professional R Enthusiast
+33(0) 6 28 91 30 30
http://romainfrancois.blog.free.fr
|- http://tr.im/KfKn : Rcpp 0.7.2
|- http://tr.im/JOlc : External pointers with Rcpp
`- http://tr.im/JFqa : R Journal, Volume 1/2, December 2009


From djsamperi at gmail.com  Thu Jan 14 16:55:23 2010
From: djsamperi at gmail.com (Dominick Samperi)
Date: Thu, 14 Jan 2010 10:55:23 -0500
Subject: [Rd] how to call a function from C
In-Reply-To: <4B4F3655.30107@dbmail.com>
References: <mailman.31.1263466812.18774.r-devel@r-project.org>
	<4B4F031F.7000202@gmail.com> <4B4F0B1D.8060108@dbmail.com>
	<d4cf43b61001140650x4a822a8bo517b36ed19998885@mail.gmail.com>
	<4B4F3655.30107@dbmail.com>
Message-ID: <d4cf43b61001140755h783a59b3pbebafbdaf35cedf2@mail.gmail.com>

An embedded and charset-unspecified text was scrubbed...
Name: not available
URL: <https://stat.ethz.ch/pipermail/r-devel/attachments/20100114/9260952a/attachment.pl>

From romain.francois at dbmail.com  Thu Jan 14 17:19:40 2010
From: romain.francois at dbmail.com (Romain Francois)
Date: Thu, 14 Jan 2010 17:19:40 +0100
Subject: [Rd] how to call a function from C
In-Reply-To: <4B4F1BC5.8020307@gmail.com>
References: <mailman.31.1263466812.18774.r-devel@r-project.org>
	<4B4F031F.7000202@gmail.com> <4B4F0B1D.8060108@dbmail.com>
	<4B4F1BC5.8020307@gmail.com>
Message-ID: <4B4F441C.9050705@dbmail.com>

On 01/14/2010 02:27 PM, Laurent Gautier wrote:
>
> On 1/14/10 1:16 PM, Romain Francois wrote:
>> On 01/14/2010 12:42 PM, Laurent Gautier wrote:
>>>> Hi,
>>>>
>>>> In Rcpp, we now have a "Function" class to encapsulate functions
>>>> (they cover all three kinds, but this may change).
>>>
>>> Just a note on that: there is probably no hurry to do so.
>>> rpy2 is also having CLOSXP, BUILTINSXP, and SPECIALSXP represented as
>>> one function-like class and seems to be behave reasonably while a lot of
>>> other things seem more urgent to sort out.
>>>
>>>> To call the function, what we do is generate a call with the function
>>>> as the first node and then evaluate the call.
>>>>
>>>> SEXP stats = PROTECT( R_FindNamespace( mkString( "stats") ) ); SEXP
>>>> rnorm = PROTECT( findVarInFrame( stats, install( "rnorm") ) ) ; SEXP
>>>> call = PROTECT( LCONS( rnorm, CONS( ScalarInteger(10),
>>>> CONS(ScalarReal(0), R_NilValue ) ) ) ); SEXP res = PROTECT( eval(
>>>> call , R_GlobalEnv ) ); UNPROTECT(4) ; return res ;
>>>>
>>>> It works, but I was wondering if there was another way. I've seen
>>>> applyClosure, but I'm not sure I should attempt to use it or if using
>>>> a call like above is good enough.
>>>
>>> Using R_tryEval() will let you evaluate an expression in a given
>>> environment, as well as capture an eventual error occurring during its
>>> evaluation (and translate it as an exception).
>>
>> Sure. I did not want to over-complicate the question.
>>
>> I'm currently reviewing tryEval and its underlying R_TopLevelExec which
>> does not give me enough : when the error occurs, it'd be useful that the
>> function returns the condition object instead of NULL.
>
> I possibly went the same path, and ended with R_tryEval. When looking at
> it, I could not figure out any way to get what I wanted outside using
> "geterrmessage" in base.
> The error string is in the variable errbuf (in src/main/error.c), with
> no obvious route to access it (and if truly no route, this might be
> something missing from the R C-API).

It seems to be the regular way around this gap. Martin Morgan gave the 
same advice (using geterrmessage) here last week. it only gives you the 
error message though

I've been staring at R_ToplevelExec, begincontext and addCondHands. Some 
day, I'll understand how to connect the dots. Not today though.

Romain

>>>> Romain
>>>>
>>>> PS: using Rcpp's C++ classes you would express the code above as :
>>>>
>>>> Environment stats("package:stats") ; Function rnorm = stats.get(
>>>> "rnorm" ) return rnorm( 10, 0.0 ) ;
>>>
>>> Feel free to snoop in rpy2's rpy/rinterface/rinterface.c and look for
>>> "do_try_eval". The behavior looks very similar, the above snippet in
>>> rpy2 would write like:p/
>
> I meant "do_eval_expr".

thanks.

>>> from rpy2.robjects.packages import importr
>>> stats = importr('stats')
>>> stats.rnorm(10, 0.0)
>>
>> nice


-- 
Romain Francois
Professional R Enthusiast
+33(0) 6 28 91 30 30
http://romainfrancois.blog.free.fr
|- http://tr.im/KfKn : Rcpp 0.7.2
|- http://tr.im/JOlc : External pointers with Rcpp
`- http://tr.im/JFqa : R Journal, Volume 1/2, December 2009


From friedrich.leisch at stat.uni-muenchen.de  Thu Jan 14 17:33:19 2010
From: friedrich.leisch at stat.uni-muenchen.de (Friedrich Leisch)
Date: Thu, 14 Jan 2010 17:33:19 +0100
Subject: [Rd] wiki down?
In-Reply-To: <hin054$630$1@ger.gmane.org>
References: <4B44B12A.60004@ufl.edu>
	<hin054$630$1@ger.gmane.org>
Message-ID: <19279.18255.760164.351778@ridcully.stat.uni-muenchen.de>

>>>>> On Thu, 14 Jan 2010 11:45:31 -0000,
>>>>> Matthew Dowle (MD) wrote:

  > I see the same problem. The wiki link on the R homepage doesn't seem to 
  > respond.
  > A search of r-devel for subjects containing "wiki" finds this seemingly 
  > unanswered recent post.
  > Is it known?


Philippe Grosjean maintains the Wiki, in CC.

Best,
Fritz

-- 
-----------------------------------------------------------------------
Prof. Dr. Friedrich Leisch 

Institut f?r Statistik                          Tel: (+49 89) 2180 3165
Ludwig-Maximilians-Universit?t                  Fax: (+49 89) 2180 5308
Ludwigstra?e 33
D-80539 M?nchen                     http://www.statistik.lmu.de/~leisch
-----------------------------------------------------------------------
   Journal Computational Statistics --- http://www.springer.com/180 
          M?nchner R Kurse --- http://www.statistik.lmu.de/R


From luke at stat.uiowa.edu  Thu Jan 14 18:38:20 2010
From: luke at stat.uiowa.edu (luke at stat.uiowa.edu)
Date: Thu, 14 Jan 2010 11:38:20 -0600 (CST)
Subject: [Rd] how to call a function from C
In-Reply-To: <4B4F0B1D.8060108@dbmail.com>
References: <mailman.31.1263466812.18774.r-devel@r-project.org>
	<4B4F031F.7000202@gmail.com> <4B4F0B1D.8060108@dbmail.com>
Message-ID: <alpine.LFD.2.00.1001141125350.2343@nokomis.stat.uiowa.edu>

On Thu, 14 Jan 2010, Romain Francois wrote:

> On 01/14/2010 12:42 PM, Laurent Gautier wrote:
>>> Hi,
>>> 
>>> In Rcpp, we now have a "Function" class to encapsulate functions
>>> (they cover all three kinds, but this may change).
>> 
>> Just a note on that: there is probably no hurry to do so.
>> rpy2 is also having CLOSXP, BUILTINSXP, and SPECIALSXP represented as
>> one function-like class and seems to be behave reasonably while a lot of
>> other things seem more urgent to sort out.
>> 
>>> To call the function, what we do is generate a call with the function
>>> as the first node and then evaluate the call.
>>> 
>>> SEXP stats = PROTECT( R_FindNamespace( mkString( "stats") ) ); SEXP
>>> rnorm = PROTECT( findVarInFrame( stats, install( "rnorm") ) ) ; SEXP
>>> call = PROTECT( LCONS( rnorm, CONS( ScalarInteger(10),
>>> CONS(ScalarReal(0), R_NilValue ) ) ) ); SEXP res = PROTECT( eval(
>>> call , R_GlobalEnv ) ); UNPROTECT(4) ; return res ;
>>> 
>>> It works, but I was wondering if there was another way. I've seen
>>> applyClosure, but I'm not sure I should attempt to use it or if using
>>> a call like above is good enough.
>> 
>> Using R_tryEval() will let you evaluate an expression in a given
>> environment, as well as capture an eventual error occurring during its
>> evaluation (and translate it as an exception).
>
> Sure. I did not want to over-complicate the question.
>
> I'm currently reviewing tryEval and its underlying R_TopLevelExec which does 
> not give me enough : when the error occurs, it'd be useful that the function 
> returns the condition object instead of NULL.

R_TopLevelExec, and hence R_tryEval, don't quite do what some users
expect and maybe would like. There are two issues.

The TopLevel part means that conceptually this call runs in its own
stack, which means things like calling error handlers set up outside
this call are not visible, and Sys.whatever functions don't see the
rest of the stack (or at least should not). A call to one of these is
conceptually a bit like asking a separate thread to evaluate the
expression and waiting for the result.  (I believe his mechanism was
added to handle finalizer code in the GC, where this makes sense, but
I may have my history wrong.)

The other issue is that what R_tryEval catches is not errors, it is
longjmp attempts.  The vast majority of these will come from attempts
to pass errors to exiting handlers, but there are other possibilities,
such as invoking an abort restart (which jumps to top level).

It might be useful to provide a C level interface for catching errors
as well as other jumps and for allowing C code to do cleanup
operations and then continue those jumps if appropriate, but getting
that right is fairly tricky and certainly hasn't risen high enough on
my priority list to warrant the investment of time.  The interface
would have to abstract over implementation details though: we
definitely do not want to expose and commit to current details of the
context stack implementation.

luke


>
>>> Romain
>>> 
>>> PS: using Rcpp's C++ classes you would express the code above as :
>>> 
>>> Environment stats("package:stats") ; Function rnorm = stats.get(
>>> "rnorm" ) return rnorm( 10, 0.0 ) ;
>> 
>> Feel free to snoop in rpy2's rpy/rinterface/rinterface.c and look for
>> "do_try_eval". The behavior looks very similar, the above snippet in
>> rpy2 would write like:
>> 
>> from rpy2.robjects.packages import importr
>> stats = importr('stats')
>> stats.rnorm(10, 0.0)
>
> nice
>
>

-- 
Luke Tierney
Chair, Statistics and Actuarial Science
Ralph E. Wareham Professor of Mathematical Sciences
University of Iowa                  Phone:             319-335-3386
Department of Statistics and        Fax:               319-335-3017
    Actuarial Science
241 Schaeffer Hall                  email:      luke at stat.uiowa.edu
Iowa City, IA 52242                 WWW:  http://www.stat.uiowa.edu


From djsamperi at gmail.com  Thu Jan 14 19:05:28 2010
From: djsamperi at gmail.com (Dominick Samperi)
Date: Thu, 14 Jan 2010 13:05:28 -0500
Subject: [Rd] RcppTemplate user alert
Message-ID: <d4cf43b61001141005u1dee6e2ej5f0e2d512a51c7b5@mail.gmail.com>

An embedded and charset-unspecified text was scrubbed...
Name: not available
URL: <https://stat.ethz.ch/pipermail/r-devel/attachments/20100114/64983b05/attachment.pl>

From hb at stat.berkeley.edu  Thu Jan 14 21:01:09 2010
From: hb at stat.berkeley.edu (Henrik Bengtsson)
Date: Thu, 14 Jan 2010 12:01:09 -0800
Subject: [Rd] Wishlist: system.file(... package) throw an error if package
	not installed/path not found
Message-ID: <59d7961d1001141201t577e6196l24a654bea6e06136@mail.gmail.com>

Currently, system.file() on a non-existing package returns an empty string:

path <- system.file(package="foo");
print(path);
[1] ""

The same goes for non-existing paths in existing package directories:

path <- system.file("foo", package="base");
print(path);
[1] ""

Is there a rationale for this, or is it just for historical reasons?
Is the empty string "" used in R to represent a "missing" file?  (e.g.
file.exists("") == FALSE).

I would like to suggest that an error is thrown instead, so that it is
caught as soon as possible and not down stream.

/Henrik


From simon.urbanek at r-project.org  Thu Jan 14 21:33:30 2010
From: simon.urbanek at r-project.org (Simon Urbanek)
Date: Thu, 14 Jan 2010 15:33:30 -0500
Subject: [Rd] Wishlist: system.file(... package) throw an error if
	package not installed/path not found
In-Reply-To: <59d7961d1001141201t577e6196l24a654bea6e06136@mail.gmail.com>
References: <59d7961d1001141201t577e6196l24a654bea6e06136@mail.gmail.com>
Message-ID: <19AF295E-1BDD-49AE-9ADA-2AD24B26F75E@r-project.org>


On Jan 14, 2010, at 15:01 , Henrik Bengtsson wrote:

> Currently, system.file() on a non-existing package returns an empty  
> string:
>
> path <- system.file(package="foo");
> print(path);
> [1] ""
>
> The same goes for non-existing paths in existing package directories:
>
> path <- system.file("foo", package="base");
> print(path);
> [1] ""
>
> Is there a rationale for this, or is it just for historical reasons?
> Is the empty string "" used in R to represent a "missing" file?  (e.g.
> file.exists("") == FALSE).
>
> I would like to suggest that an error is thrown instead, so that it is
> caught as soon as possible and not down stream.
>

I cannot answer for the original author, but throwing an error is  
generally a very bad idea since it defeats the vectorization. It is  
much easier to simply use if(nzchar(system.file(...))) if you want to  
throw an error in a scalar context than to lose all results because of  
one vector entry. And, yes, file.exists("") will indeed return FALSE  
(although it is entirely unrelated).

Cheers,
Simon


From bolker at ufl.edu  Thu Jan 14 23:25:00 2010
From: bolker at ufl.edu (Ben Bolker)
Date: Thu, 14 Jan 2010 17:25:00 -0500
Subject: [Rd] adapt package missing because of licensing issue: fix?
Message-ID: <4B4F99BC.6000004@ufl.edu>


  I think this is probably known by someone, but I wanted to ask/comment:

  The 'adapt' package has been removed from CRAN because of an 'unclear'
license. That makes sense, but it actually took a bit of digging for me
to discover that, and if I had been a student I might not have figured
it out.  The package is simply missing from the CRAN compiled packages
page; I did find information in the check summaries; but I didn't get a
clear indication until I found

http://cran.r-project.org/web/packages/adapt/index.html

 by googling (which also gave me a handy link to the archives).

https://stat.ethz.ch/pipermail/r-sig-fedora/2009-June/000078.html
http://packages.debian.org/changelogs/pool/main/a/adapt/adapt_1.0-4-3/r-cran-adapt.copyright

  give a little more information.

  library(findFn); sos("multidimensional+integration") found the
cubature package for me, which looks like a pretty good replacement but
which I haven't tried out yet.

  My real question: has anyone actually tried to contact the authors and
find out if they are willing to put the code under a suitably
redistributable license? I can't find anything that suggests that they
*don't* want it redistributed ... ? Would it be helpful if I did this,
or is this the sort of thing the package maintainer should do?

Mike Meyer: mikem at andrew.cmu.edu
Alan Genz: Genz at gauss.math.wsu.edu

  cheers
    Ben Bolker

-- 
Ben Bolker
Associate professor, Biology Dep't, Univ. of Florida
bolker at ufl.edu / people.biology.ufl.edu/bolker
GPG key: people.biology.ufl.edu/bolker/benbolker-publickey.asc

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 261 bytes
Desc: OpenPGP digital signature
URL: <https://stat.ethz.ch/pipermail/r-devel/attachments/20100114/fc3243bd/attachment.bin>

From ross at biostat.ucsf.edu  Fri Jan 15 07:00:10 2010
From: ross at biostat.ucsf.edu (Ross Boylan)
Date: Thu, 14 Jan 2010 22:00:10 -0800
Subject: [Rd] optional package dependency
Message-ID: <1263535210.26202.16.camel@corn.betterworld.us>

I have a package that can use rmpi, but works fine without it.  None of
the automatic test code invokes rmpi functionality.  (One test file
illustrates how to use it, but has quit() as its first command.)

What's the best way to handle this?  In particular, what is the
appropriate form for upload to CRAN?

When I omitted rmpi from the DESCRITPION file R CMD check gave 
<quote>
* checking R code for possible problems ... NOTE
alldone: no visible global function definition for ?mpi.bcast.Robj?
alldone: no visible global function definition for ?mpi.exit?
<quote>
followed by many more warnings.

When I add
Suggests: Rmpi
in DESCRIPTION the check stops if the package is not installed:
<quote>
* checking package dependencies ... ERROR
Packages required but not available:
  Rmpi
</quote>
Rmpi is not required, but I gather from previous discussion on this list
that suggests basically means required for R CMD check.

NAMESPACE seems to raise similar issues; I don't see any mechanism for
optional imports.  Also, I have not used namespaces, and am not eager to
destabilize things so close to release.  At least, I hope I'm close to
release :)

Thanks for any advice.

Ross Boylan

P.S. Thanks, Duncan, for your recent advice on my help format problem
with R 2.7.  I removed the nested \description, and now things look OK.


From jeff.a.ryan at gmail.com  Fri Jan 15 07:12:51 2010
From: jeff.a.ryan at gmail.com (Jeff Ryan)
Date: Fri, 15 Jan 2010 00:12:51 -0600
Subject: [Rd] optional package dependency
In-Reply-To: <1263535210.26202.16.camel@corn.betterworld.us>
References: <1263535210.26202.16.camel@corn.betterworld.us>
Message-ID: <e8e755251001142212nd942256i526d63f4858f988c@mail.gmail.com>

Hi Ross,

The quantmod package makes available routines from a variety of
contributed packages, but gets around your issues with a bit of, um,
trickery.

Take a look here (unless your name is Kurt ;-) ):

http://r-forge.r-project.org/plugins/scmsvn/viewcvs.php/pkg/R/buildModel.methods.R?rev=367&root=quantmod&view=markup

It would be nice to have Suggests really mean suggests to check, but I
am sure there is a good reason it doesn't.

HTH
Jeff

On Fri, Jan 15, 2010 at 12:00 AM, Ross Boylan <ross at biostat.ucsf.edu> wrote:
> I have a package that can use rmpi, but works fine without it. ?None of
> the automatic test code invokes rmpi functionality. ?(One test file
> illustrates how to use it, but has quit() as its first command.)
>
> What's the best way to handle this? ?In particular, what is the
> appropriate form for upload to CRAN?
>
> When I omitted rmpi from the DESCRITPION file R CMD check gave
> <quote>
> * checking R code for possible problems ... NOTE
> alldone: no visible global function definition for ?mpi.bcast.Robj?
> alldone: no visible global function definition for ?mpi.exit?
> <quote>
> followed by many more warnings.
>
> When I add
> Suggests: Rmpi
> in DESCRIPTION the check stops if the package is not installed:
> <quote>
> * checking package dependencies ... ERROR
> Packages required but not available:
> ?Rmpi
> </quote>
> Rmpi is not required, but I gather from previous discussion on this list
> that suggests basically means required for R CMD check.
>
> NAMESPACE seems to raise similar issues; I don't see any mechanism for
> optional imports. ?Also, I have not used namespaces, and am not eager to
> destabilize things so close to release. ?At least, I hope I'm close to
> release :)
>
> Thanks for any advice.
>
> Ross Boylan
>
> P.S. Thanks, Duncan, for your recent advice on my help format problem
> with R 2.7. ?I removed the nested \description, and now things look OK.
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>



-- 
Jeffrey Ryan
jeffrey.ryan at insightalgo.com

ia: insight algorithmics
www.insightalgo.com


From jari.oksanen at oulu.fi  Fri Jan 15 08:55:22 2010
From: jari.oksanen at oulu.fi (Jari Oksanen)
Date: Fri, 15 Jan 2010 09:55:22 +0200
Subject: [Rd] optional package dependency
In-Reply-To: <e8e755251001142212nd942256i526d63f4858f988c@mail.gmail.com>
References: <1263535210.26202.16.camel@corn.betterworld.us>
	<e8e755251001142212nd942256i526d63f4858f988c@mail.gmail.com>
Message-ID: <1263542122.1817.22.camel@biol102145>

On Fri, 2010-01-15 at 00:12 -0600, Jeff Ryan wrote:
> Hi Ross,
> 
> The quantmod package makes available routines from a variety of
> contributed packages, but gets around your issues with a bit of, um,
> trickery.
> 
> Take a look here (unless your name is Kurt ;-) ):
> 
> http://r-forge.r-project.org/plugins/scmsvn/viewcvs.php/pkg/R/buildModel.methods.R?rev=367&root=quantmod&view=markup
> 
> It would be nice to have Suggests really mean suggests to check, but I
> am sure there is a good reason it doesn't.
> 
I agree: it would be nice to have "Suggests" really mean "suggests", and
I 'suggested' so in an R-devel message of 20/9/05 with subject "Shy
Suggestion" (but this seems not exist in the R-devel archive?). I got
some support, but not from the right people, and so the R suggestion
remains the one you can't refuse or you'll wake up with a horse head in
your bed. I can live with this forced suggestion, although it is
sometimes painful, in particular in Mac or after re-installing
everything from scratch in Linux. 

The main argument was that building may fail later if you don't check
"suggests" early so that you must (de facto) depend on packages you
suggest. I'm sure many packages would fail now if the interpretation of
"suggests" was changed because the behaviour of "suggests" and "depends"
has been near identical for a long time and people have adapted. The
window of opportunity for another interpretation was when the checks for
undefined request() was added to the R CMD check routines in 2005, but
then it was decided that "suggests" should be near equivalent to
"depends", and this will stick.

Cheers, Jari Oksanen

-- 
Jari Oksanen, Department of Biology, Univ Oulu, FI-90014 Oulu, Finland
http://www.oulu.fi/~jarioksa http://vegan.r-forge.r-project.org


From Kurt.Hornik at wu.ac.at  Fri Jan 15 09:19:07 2010
From: Kurt.Hornik at wu.ac.at (Kurt Hornik)
Date: Fri, 15 Jan 2010 09:19:07 +0100
Subject: [Rd] optional package dependency
In-Reply-To: <e8e755251001142212nd942256i526d63f4858f988c@mail.gmail.com>
References: <1263535210.26202.16.camel@corn.betterworld.us>
	<e8e755251001142212nd942256i526d63f4858f988c@mail.gmail.com>
Message-ID: <19280.9467.920615.289850@hornik.net>

>>>>> Jeff Ryan writes:

> Hi Ross,
> The quantmod package makes available routines from a variety of
> contributed packages, but gets around your issues with a bit of, um,
> trickery.

> Take a look here (unless your name is Kurt ;-) ):

But Kurt will we happy to tell you that you can turn off "forcing"
suggested packages for checking by setting

  _R_CHECK_FORCE_SUGGESTS_=false

in your environment.  The idea is that maintainers typically want to
fully check their functionality, suggesting to force suggests by
default.

-k
  

> http://r-forge.r-project.org/plugins/scmsvn/viewcvs.php/pkg/R/buildModel.methods.R?rev=367&root=quantmod&view=markup

> It would be nice to have Suggests really mean suggests to check, but I
> am sure there is a good reason it doesn't.

> HTH
> Jeff

> On Fri, Jan 15, 2010 at 12:00 AM, Ross Boylan <ross at biostat.ucsf.edu> wrote:
>> I have a package that can use rmpi, but works fine without it. ?None of
>> the automatic test code invokes rmpi functionality. ?(One test file
>> illustrates how to use it, but has quit() as its first command.)
>> 
>> What's the best way to handle this? ?In particular, what is the
>> appropriate form for upload to CRAN?
>> 
>> When I omitted rmpi from the DESCRITPION file R CMD check gave
>> <quote>
>> * checking R code for possible problems ... NOTE
>> alldone: no visible global function definition for ?mpi.bcast.Robj?
>> alldone: no visible global function definition for ?mpi.exit?
>> <quote>
>> followed by many more warnings.
>> 
>> When I add
>> Suggests: Rmpi
>> in DESCRIPTION the check stops if the package is not installed:
>> <quote>
>> * checking package dependencies ... ERROR
>> Packages required but not available:
>> ?Rmpi
>> </quote>
>> Rmpi is not required, but I gather from previous discussion on this list
>> that suggests basically means required for R CMD check.
>> 
>> NAMESPACE seems to raise similar issues; I don't see any mechanism for
>> optional imports. ?Also, I have not used namespaces, and am not eager to
>> destabilize things so close to release. ?At least, I hope I'm close to
>> release :)
>> 
>> Thanks for any advice.
>> 
>> Ross Boylan
>> 
>> P.S. Thanks, Duncan, for your recent advice on my help format problem
>> with R 2.7. ?I removed the nested \description, and now things look OK.
>> 
>> ______________________________________________
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel
>> 



> -- 
> Jeffrey Ryan
> jeffrey.ryan at insightalgo.com

> ia: insight algorithmics
> www.insightalgo.com

> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From beniltoncarvalho at gmail.com  Fri Jan 15 11:48:15 2010
From: beniltoncarvalho at gmail.com (Benilton Carvalho)
Date: Fri, 15 Jan 2010 10:48:15 +0000
Subject: [Rd] optional package dependency
In-Reply-To: <1263535210.26202.16.camel@corn.betterworld.us>
References: <1263535210.26202.16.camel@corn.betterworld.us>
Message-ID: <e71a39ea1001150248v1d833fc0ma2e63efdacc796a4@mail.gmail.com>

How about using:

Enhances: Rmpi

?

b

On Fri, Jan 15, 2010 at 6:00 AM, Ross Boylan <ross at biostat.ucsf.edu> wrote:
> I have a package that can use rmpi, but works fine without it.  None of
> the automatic test code invokes rmpi functionality.  (One test file
> illustrates how to use it, but has quit() as its first command.)
>
> What's the best way to handle this?  In particular, what is the
> appropriate form for upload to CRAN?
>
> When I omitted rmpi from the DESCRITPION file R CMD check gave
> <quote>
> * checking R code for possible problems ... NOTE
> alldone: no visible global function definition for ?mpi.bcast.Robj?
> alldone: no visible global function definition for ?mpi.exit?
> <quote>
> followed by many more warnings.
>
> When I add
> Suggests: Rmpi
> in DESCRIPTION the check stops if the package is not installed:
> <quote>
> * checking package dependencies ... ERROR
> Packages required but not available:
>  Rmpi
> </quote>
> Rmpi is not required, but I gather from previous discussion on this list
> that suggests basically means required for R CMD check.
>
> NAMESPACE seems to raise similar issues; I don't see any mechanism for
> optional imports.  Also, I have not used namespaces, and am not eager to
> destabilize things so close to release.  At least, I hope I'm close to
> release :)
>
> Thanks for any advice.
>
> Ross Boylan
>
> P.S. Thanks, Duncan, for your recent advice on my help format problem
> with R 2.7.  I removed the nested \description, and now things look OK.
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>


From ligges at statistik.tu-dortmund.de  Fri Jan 15 12:29:30 2010
From: ligges at statistik.tu-dortmund.de (Uwe Ligges)
Date: Fri, 15 Jan 2010 12:29:30 +0100
Subject: [Rd] adapt package missing because of licensing issue: fix?
In-Reply-To: <4B4F99BC.6000004@ufl.edu>
References: <4B4F99BC.6000004@ufl.edu>
Message-ID: <4B50519A.5030807@statistik.tu-dortmund.de>



On 14.01.2010 23:25, Ben Bolker wrote:
>
>    I think this is probably known by someone, but I wanted to ask/comment:
>
>    The 'adapt' package has been removed from CRAN because of an 'unclear'
> license. That makes sense, but it actually took a bit of digging for me
> to discover that, and if I had been a student I might not have figured
> it out.  The package is simply missing from the CRAN compiled packages
> page; I did find information in the check summaries; but I didn't get a
> clear indication until I found
>
> http://cran.r-project.org/web/packages/adapt/index.html
>
>   by googling (which also gave me a handy link to the archives).
>
> https://stat.ethz.ch/pipermail/r-sig-fedora/2009-June/000078.html
> http://packages.debian.org/changelogs/pool/main/a/adapt/adapt_1.0-4-3/r-cran-adapt.copyright
>
>    give a little more information.
>
>    library(findFn); sos("multidimensional+integration") found the
> cubature package for me, which looks like a pretty good replacement but
> which I haven't tried out yet.
>
>    My real question: has anyone actually tried to contact the authors and
> find out if they are willing to put the code under a suitably
> redistributable license? I can't find anything that suggests that they
> *don't* want it redistributed ... ? Would it be helpful if I did this,
> or is this the sort of thing the package maintainer should do?

Ben,

the package maintainer is the one who decides about the license under 
the given restrictions. I guess you meant the CRAN maintainer?

Anyway, be sure that the package maintainer has been notified about the 
license problem by the CRAN maintainers. The CRAN maintainers do not 
remove a package without asking the corresponding package maintainer 
(most often more than once) to fix open issues.

Best wishes,
Uwe



> Mike Meyer: mikem at andrew.cmu.edu
> Alan Genz: Genz at gauss.math.wsu.edu
>
>    cheers
>      Ben Bolker
>
>
>
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From kollerma at stat.math.ethz.ch  Fri Jan 15 15:15:13 2010
From: kollerma at stat.math.ethz.ch (kollerma at stat.math.ethz.ch)
Date: Fri, 15 Jan 2010 15:15:13 +0100 (CET)
Subject: [Rd] Using multicore with an open pdf device results in corrupt pdf
	(PR#14186)
Message-ID: <20100115141513.A0F5D2831FFE@mail.pubhealth.ku.dk>

The attached code produces corrupted pdfs (test2.pdf, test4.pdf and
test5.pdf). The resulting pdf depends on how many cores are available on
the machine. 

I don't see why there should be any difference between the pdfs (exept for
the timestamp). Doing many operations involving mclapply can increase the
size of the resulting pdf by ten times!

Thank you for checking this.

require(multicore)

pdf('test.pdf')
y <- unlist(lapply(1:50, identity))
plot(y)
print(y)
dev.off()

options(cores = 3)

pdf('test2.pdf')
y <- unlist(mclapply(1:50, identity))
plot(y)
print(y)
dev.off()

pdf('test3.pdf')
y <- unlist(lapply(1:50, identity))
plot(y)
print(y)
dev.off()

options(cores = 2)

pdf('test4.pdf')
y <- unlist(mclapply(1:50, identity))
plot(y)
print(y)
dev.off()

options(cores = 8)

pdf('test5.pdf')
y <- unlist(mclapply(1:50, identity))
plot(y)
print(y)
dev.off()


--please do not edit the information below--

Version:
 platform = x86_64-unknown-linux-gnu
 arch = x86_64
 os = linux-gnu
 system = x86_64, linux-gnu
 status = 
 major = 2
 minor = 10.1
 year = 2009
 month = 12
 day = 14
 svn rev = 50720
 language = R
 version.string = R version 2.10.1 (2009-12-14)

Locale:
LC_CTYPE=de_CH.UTF-8;LC_NUMERIC=C;LC_TIME=en_US.UTF-8;LC_COLLATE=de_CH.UTF-8;LC_MONETARY=C;LC_MESSAGES=de_CH.UTF-8;LC_PAPER=de_CH.UTF-8;LC_NAME=C;LC_ADDRESS=C;LC_TELEPHONE=C;LC_MEASUREMENT=de_CH.UTF-8;LC_IDENTIFICATION=C

Search Path:
 .GlobalEnv, package:skewt, package:rgl, package:ggplot2, package:reshape, package:plyr, package:proto, package:VGAM, package:stats4, package:splines, package:latticeExtra, package:RColorBrewer, package:doMC, package:multicore, package:foreach, package:codetools, package:iterators, package:abind, package:seqinr, package:mvbutils, mvb.session.info, package:tools, package:robust, package:rrcov, package:pcaPP, package:mvtnorm, package:robustbase, package:MASS, package:glmmML, package:playwith, package:grid, package:gWidgetsRGtk2, package:cairoDevice, package:lattice, package:gWidgets, package:graphics, package:grDevices, package:datasets, package:fortunes, package:sfsmisc, package:stats, package:utils, package:methods, Autoloads, package:base


From seth at userprimary.net  Fri Jan 15 16:22:03 2010
From: seth at userprimary.net (Seth Falcon)
Date: Fri, 15 Jan 2010 07:22:03 -0800
Subject: [Rd] optional package dependency
In-Reply-To: <19280.9467.920615.289850@hornik.net>
References: <1263535210.26202.16.camel@corn.betterworld.us>	<e8e755251001142212nd942256i526d63f4858f988c@mail.gmail.com>
	<19280.9467.920615.289850@hornik.net>
Message-ID: <4B50881B.1070106@userprimary.net>

On 1/15/10 12:19 AM, Kurt Hornik wrote:
>>>>>> Jeff Ryan writes:
> 
>> Hi Ross,
>> The quantmod package makes available routines from a variety of
>> contributed packages, but gets around your issues with a bit of, um,
>> trickery.
> 
>> Take a look here (unless your name is Kurt ;-) ):

I believe another option is:

   pkg <- "somePkg"
   pkgAvail <- require(pkg, character.only = TRUE)
   if (pkgAvail)
      ...
   else
      ...


> But Kurt will we happy to tell you that you can turn off "forcing"
> suggested packages for checking by setting
> 
>   _R_CHECK_FORCE_SUGGESTS_=false
> 
> in your environment.  The idea is that maintainers typically want to
> fully check their functionality, suggesting to force suggests by
> default.

Unless the public repositories such as CRAN and Bioconductor decide to
set this option, it provides no solution for anyone who maintains or
plans to make available a package through a public R repository such as
CRAN or Bioconductor.

There is a real need (of some kind) here.  Not all packages work on all
platforms.  For example, the multicore package provides a mechanism for
running parallel computations on a multi-cpu box, but it is not
available on Windows.  A package that _is_ available on all platforms
should be able to optionally make use of multicore on non-Windows.  I
don't think there is a way to do that now and pass check without
resorting to "tricks" as above.  These tricks are bad as they make it
harder to programmatically determine the true "suggests".

And NAMESPACE brings up another issue in that being able to do
conditional imports would be very useful for these cases, otherwise you
simply can't make proper use of name spaces for any optional functionality.

I'm willing to help work on and test a solution if we can arrive at some
consensus as to what the solution looks like.

Best,

+ seth


From simon.urbanek at r-project.org  Fri Jan 15 16:47:47 2010
From: simon.urbanek at r-project.org (Simon Urbanek)
Date: Fri, 15 Jan 2010 10:47:47 -0500
Subject: [Rd] optional package dependency
In-Reply-To: <4B50881B.1070106@userprimary.net>
References: <1263535210.26202.16.camel@corn.betterworld.us>	<e8e755251001142212nd942256i526d63f4858f988c@mail.gmail.com>
	<19280.9467.920615.289850@hornik.net>
	<4B50881B.1070106@userprimary.net>
Message-ID: <226733B0-3AB1-496C-8F12-A85C23E31A2C@r-project.org>


On Jan 15, 2010, at 10:22 , Seth Falcon wrote:

> On 1/15/10 12:19 AM, Kurt Hornik wrote:
>>>>>>> Jeff Ryan writes:
>>
>>> Hi Ross,
>>> The quantmod package makes available routines from a variety of
>>> contributed packages, but gets around your issues with a bit of, um,
>>> trickery.
>>
>>> Take a look here (unless your name is Kurt ;-) ):
>
> I believe another option is:
>
>   pkg <- "somePkg"
>   pkgAvail <- require(pkg, character.only = TRUE)
>   if (pkgAvail)
>      ...
>   else
>      ...
>

That is not an option - that is the code you usually use with  
Suggests: (except for the pkg assignment which is there I presume to  
obscure things).


>
>> But Kurt will we happy to tell you that you can turn off "forcing"
>> suggested packages for checking by setting
>>
>>  _R_CHECK_FORCE_SUGGESTS_=false
>>
>> in your environment.  The idea is that maintainers typically want to
>> fully check their functionality, suggesting to force suggests by
>> default.
>
> Unless the public repositories such as CRAN and Bioconductor decide to
> set this option, it provides no solution for anyone who maintains or
> plans to make available a package through a public R repository such  
> as
> CRAN or Bioconductor.
>
> There is a real need (of some kind) here.  Not all packages work on  
> all
> platforms.  For example, the multicore package provides a mechanism  
> for
> running parallel computations on a multi-cpu box, but it is not
> available on Windows.  A package that _is_ available on all platforms
> should be able to optionally make use of multicore on non-Windows.  I
> don't think there is a way to do that now

... there are 10 packages on CRAN that officially suggest multicore  
and there is no issue with their checks. I suspect you are making up  
an issue here that doesn't really exist ...

  As Kurt pointed out the checking is optional and makes sense to test  
the optional capability. You'd have to ask him but I don't think Kurt  
refuses packages because they suggest something that is not available  
everywhere ...


> and pass check without
> resorting to "tricks" as above.  These tricks are bad as they make it
> harder to programmatically determine the true "suggests".
>

Hence I don't see why your should even pst them ;).

Cheers,
Simon


> And NAMESPACE brings up another issue in that being able to do
> conditional imports would be very useful for these cases, otherwise  
> you
> simply can't make proper use of name spaces for any optional  
> functionality.
>
> I'm willing to help work on and test a solution if we can arrive at  
> some
> consensus as to what the solution looks like.
>
> Best,
>
> + seth
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>
>


From ligges at statistik.tu-dortmund.de  Fri Jan 15 16:51:56 2010
From: ligges at statistik.tu-dortmund.de (Uwe Ligges)
Date: Fri, 15 Jan 2010 16:51:56 +0100
Subject: [Rd] optional package dependency
In-Reply-To: <4B50881B.1070106@userprimary.net>
References: <1263535210.26202.16.camel@corn.betterworld.us>	<e8e755251001142212nd942256i526d63f4858f988c@mail.gmail.com>	<19280.9467.920615.289850@hornik.net>
	<4B50881B.1070106@userprimary.net>
Message-ID: <4B508F1C.1030604@statistik.tu-dortmund.de>



On 15.01.2010 16:22, Seth Falcon wrote:
> On 1/15/10 12:19 AM, Kurt Hornik wrote:
>>>>>>> Jeff Ryan writes:
>>
>>> Hi Ross,
>>> The quantmod package makes available routines from a variety of
>>> contributed packages, but gets around your issues with a bit of, um,
>>> trickery.
>>
>>> Take a look here (unless your name is Kurt ;-) ):
>
> I believe another option is:
>
>     pkg<- "somePkg"
>     pkgAvail<- require(pkg, character.only = TRUE)
>     if (pkgAvail)
>        ...
>     else
>        ...
>
>
>> But Kurt will we happy to tell you that you can turn off "forcing"
>> suggested packages for checking by setting
>>
>>    _R_CHECK_FORCE_SUGGESTS_=false


Seth,

the Windows checks for CRAN run with that setting, i.e.

  _R_CHECK_FORCE_SUGGESTS_=false

Hence the multicore issue mentioned below actually does not exist.

Best,
Uwe



>> in your environment.  The idea is that maintainers typically want to
>> fully check their functionality, suggesting to force suggests by
>> default.
>
> Unless the public repositories such as CRAN and Bioconductor decide to
> set this option, it provides no solution for anyone who maintains or
> plans to make available a package through a public R repository such as
> CRAN or Bioconductor.
>
> There is a real need (of some kind) here.  Not all packages work on all
> platforms.  For example, the multicore package provides a mechanism for
> running parallel computations on a multi-cpu box, but it is not
> available on Windows.  A package that _is_ available on all platforms
> should be able to optionally make use of multicore on non-Windows.  I
> don't think there is a way to do that now and pass check without
> resorting to "tricks" as above.  These tricks are bad as they make it
> harder to programmatically determine the true "suggests".
>
> And NAMESPACE brings up another issue in that being able to do
> conditional imports would be very useful for these cases, otherwise you
> simply can't make proper use of name spaces for any optional functionality.
>
> I'm willing to help work on and test a solution if we can arrive at some
> consensus as to what the solution looks like.
>
> Best,
>
> + seth
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From tlumley at u.washington.edu  Fri Jan 15 17:15:59 2010
From: tlumley at u.washington.edu (Thomas Lumley)
Date: Fri, 15 Jan 2010 08:15:59 -0800 (PST)
Subject: [Rd] optional package dependency
In-Reply-To: <4B50881B.1070106@userprimary.net>
Message-ID: <alpine.LRH.2.01.1001150815590.13188@hymn34.u.washington.edu>

On Fri, 15 Jan 2010, Seth Falcon wrote:


> There is a real need (of some kind) here.  Not all packages work on all
> platforms.  For example, the multicore package provides a mechanism for
> running parallel computations on a multi-cpu box, but it is not
> available on Windows.  A package that _is_ available on all platforms
> should be able to optionally make use of multicore on non-Windows.  I
> don't think there is a way to do that now and pass check without
> resorting to "tricks" as above.  These tricks are bad as they make it
> harder to programmatically determine the true "suggests".
>
> And NAMESPACE brings up another issue in that being able to do
> conditional imports would be very useful for these cases, otherwise you
> simply can't make proper use of name spaces for any optional functionality.
>
> I'm willing to help work on and test a solution if we can arrive at some
> consensus as to what the solution looks like.
>

Seth,

In the case of multicore it seems to work to put it in 'Suggests' and to use require() to load it. That's what I did with the survey package, and it didn't cause problems on CRAN.  I didn't run CMD check on Windows myself, only on Mac and Linux.

A more difficult issue is providing methods for a generic in another package that might not be available.  I wanted to provide methods on survey objects for generics in odfWeave, and I couldn't find out how to do that without making it required.   I ended up creating a new odfWeave.survey package that depends on odfWeave and survey, but this seems like the sort of thing that should be able to be done with Enhances or Suggests.

     -thomas


Thomas Lumley			Assoc. Professor, Biostatistics
tlumley at u.washington.edu	University of Washington, Seattle


From ross at biostat.ucsf.edu  Fri Jan 15 18:18:09 2010
From: ross at biostat.ucsf.edu (Ross Boylan)
Date: Fri, 15 Jan 2010 09:18:09 -0800
Subject: [Rd] optional package dependency
In-Reply-To: <19280.9467.920615.289850@hornik.net>
References: <1263535210.26202.16.camel@corn.betterworld.us>
	<e8e755251001142212nd942256i526d63f4858f988c@mail.gmail.com>
	<19280.9467.920615.289850@hornik.net>
Message-ID: <1263575889.26202.22.camel@corn.betterworld.us>

On Fri, 2010-01-15 at 09:19 +0100, Kurt Hornik wrote:
> The idea is that maintainers typically want to
> fully check their functionality, suggesting to force suggests by
> default.
This might be the nub of the problem.  There are different audiences,
even for R CMD check.

The maintainer probably wants to check all functionality.  Even then,
there is an issue if functionality differs by platform.

CRAN probably wants to check all functionality.

An individual user just wants to check the functionality they use.

For example, if someone doesn't want to run my package distributed, but
wants to see if it works (R CMD check), they need to be able to avoid
the potentially onerous requirement to install MPI.

Ross


From simon.urbanek at r-project.org  Fri Jan 15 18:34:08 2010
From: simon.urbanek at r-project.org (Simon Urbanek)
Date: Fri, 15 Jan 2010 12:34:08 -0500
Subject: [Rd] optional package dependency
In-Reply-To: <1263575889.26202.22.camel@corn.betterworld.us>
References: <1263535210.26202.16.camel@corn.betterworld.us>
	<e8e755251001142212nd942256i526d63f4858f988c@mail.gmail.com>
	<19280.9467.920615.289850@hornik.net>
	<1263575889.26202.22.camel@corn.betterworld.us>
Message-ID: <B283F9DC-B4D9-4D44-8910-1AE855840FD2@r-project.org>


On Jan 15, 2010, at 12:18 , Ross Boylan wrote:

> On Fri, 2010-01-15 at 09:19 +0100, Kurt Hornik wrote:
>> The idea is that maintainers typically want to
>> fully check their functionality, suggesting to force suggests by
>> default.
> This might be the nub of the problem.  There are different audiences,
> even for R CMD check.
>
> The maintainer probably wants to check all functionality.  Even then,
> there is an issue if functionality differs by platform.
>
> CRAN probably wants to check all functionality.
>
> An individual user just wants to check the functionality they use.
>
> For example, if someone doesn't want to run my package distributed,  
> but
> wants to see if it works (R CMD check), they need to be able to avoid
> the potentially onerous requirement to install MPI.
>

... that what's why you can decide to run check without forcing  
suggests  - it's entirely up to you / the user as Kurt pointed out ...

Cheers,
Simon


From simon.urbanek at r-project.org  Fri Jan 15 18:48:10 2010
From: simon.urbanek at r-project.org (Simon Urbanek)
Date: Fri, 15 Jan 2010 12:48:10 -0500
Subject: [Rd] Using multicore with an open pdf device results in corrupt
	pdf (PR#14186)
In-Reply-To: <20100115141513.A0F5D2831FFE@mail.pubhealth.ku.dk>
References: <20100115141513.A0F5D2831FFE@mail.pubhealth.ku.dk>
Message-ID: <84E58B64-9082-47BB-B4FA-EDB728EDD5AB@r-project.org>

How is this a bug in R? First, multicore is not R. Second, you're  
running multicore with GUI code loaded which it explicitly tells you  
that it won't work. Third, the code you provided does produce correct  
PDFs (tested on the same platform you provided) in a clean session  
(unsurprisingly).

Cheers,
Simon


On Jan 15, 2010, at 9:15 , kollerma at stat.math.ethz.ch wrote:

> The attached code produces corrupted pdfs (test2.pdf, test4.pdf and
> test5.pdf). The resulting pdf depends on how many cores are  
> available on
> the machine.
>
> I don't see why there should be any difference between the pdfs  
> (exept for
> the timestamp). Doing many operations involving mclapply can  
> increase the
> size of the resulting pdf by ten times!
>
> Thank you for checking this.
>
> require(multicore)
>
> pdf('test.pdf')
> y <- unlist(lapply(1:50, identity))
> plot(y)
> print(y)
> dev.off()
>
> options(cores = 3)
>
> pdf('test2.pdf')
> y <- unlist(mclapply(1:50, identity))
> plot(y)
> print(y)
> dev.off()
>
> pdf('test3.pdf')
> y <- unlist(lapply(1:50, identity))
> plot(y)
> print(y)
> dev.off()
>
> options(cores = 2)
>
> pdf('test4.pdf')
> y <- unlist(mclapply(1:50, identity))
> plot(y)
> print(y)
> dev.off()
>
> options(cores = 8)
>
> pdf('test5.pdf')
> y <- unlist(mclapply(1:50, identity))
> plot(y)
> print(y)
> dev.off()
>
>
> --please do not edit the information below--
>
> Version:
> platform = x86_64-unknown-linux-gnu
> arch = x86_64
> os = linux-gnu
> system = x86_64, linux-gnu
> status =
> major = 2
> minor = 10.1
> year = 2009
> month = 12
> day = 14
> svn rev = 50720
> language = R
> version.string = R version 2.10.1 (2009-12-14)
>
> Locale:
> LC_CTYPE 
> = 
> de_CH 
> .UTF 
> -8 
> ;LC_NUMERIC 
> = 
> C 
> ;LC_TIME 
> = 
> en_US 
> .UTF 
> -8 
> ;LC_COLLATE 
> = 
> de_CH 
> .UTF 
> -8 
> ;LC_MONETARY 
> = 
> C 
> ;LC_MESSAGES 
> = 
> de_CH 
> .UTF 
> -8 
> ;LC_PAPER 
> = 
> de_CH 
> .UTF 
> -8 
> ;LC_NAME 
> = 
> C 
> ;LC_ADDRESS 
> =C;LC_TELEPHONE=C;LC_MEASUREMENT=de_CH.UTF-8;LC_IDENTIFICATION=C
>
> Search Path:
> .GlobalEnv, package:skewt, package:rgl, package:ggplot2,  
> package:reshape, package:plyr, package:proto, package:VGAM,  
> package:stats4, package:splines, package:latticeExtra,  
> package:RColorBrewer, package:doMC, package:multicore,  
> package:foreach, package:codetools, package:iterators,  
> package:abind, package:seqinr, package:mvbutils, mvb.session.info,  
> package:tools, package:robust, package:rrcov, package:pcaPP,  
> package:mvtnorm, package:robustbase, package:MASS, package:glmmML,  
> package:playwith, package:grid, package:gWidgetsRGtk2,  
> package:cairoDevice, package:lattice, package:gWidgets,  
> package:graphics, package:grDevices, package:datasets,  
> package:fortunes, package:sfsmisc, package:stats, package:utils,  
> package:methods, Autoloads, package:base
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>
>


From ross at biostat.ucsf.edu  Fri Jan 15 19:17:51 2010
From: ross at biostat.ucsf.edu (Ross Boylan)
Date: Fri, 15 Jan 2010 10:17:51 -0800
Subject: [Rd] optional package dependency (enhances)
In-Reply-To: <e71a39ea1001150248v1d833fc0ma2e63efdacc796a4@mail.gmail.com>
References: <1263535210.26202.16.camel@corn.betterworld.us>
	<e71a39ea1001150248v1d833fc0ma2e63efdacc796a4@mail.gmail.com>
Message-ID: <1263579471.26202.36.camel@corn.betterworld.us>

On Fri, 2010-01-15 at 10:48 +0000, Benilton Carvalho wrote:
> How about using:
> 
> Enhances: Rmpi
> 
> ?
> 
> b
The main reason is that "enhances" seems a peculiar way to describe the
relation between a package that (optionally) uses a piece of
infrastructure and the infrastructure.  Similarly, I would not say that
a car enhances metal.  The example given in the R extension
documentation ("e.g., by providing methods for classes from these
packages") seems more in line with the usual meaning of enhance.

A secondary reason is that I can not tell from the documentation exactly
what putting a package in enhances does.  The example of adding
functionality to a class suggests that packages that are enhanced are
required.  However, clearly one could surround code that enhanced a
class from another package with a conditional, so that if the code was
skipped if the enhanced package was absent.  Even that logic isn't quite
right if the enhanced package is added later.

My package only loads/verifies the presence of rmpi if one attempts to
use the distributed features, so the relation is at run time, not load
time.

Ross
> 
> On Fri, Jan 15, 2010 at 6:00 AM, Ross Boylan <ross at biostat.ucsf.edu> wrote:
> > I have a package that can use rmpi, but works fine without it.  None of
> > the automatic test code invokes rmpi functionality.  (One test file
> > illustrates how to use it, but has quit() as its first command.)
> >
> > What's the best way to handle this?  In particular, what is the
> > appropriate form for upload to CRAN?
> >
> > When I omitted rmpi from the DESCRITPION file R CMD check gave
> > <quote>
> > * checking R code for possible problems ... NOTE
> > alldone: no visible global function definition for ?mpi.bcast.Robj?
> > alldone: no visible global function definition for ?mpi.exit?
> > <quote>
> > followed by many more warnings.
> >
> > When I add
> > Suggests: Rmpi
> > in DESCRIPTION the check stops if the package is not installed:
> > <quote>
> > * checking package dependencies ... ERROR
> > Packages required but not available:
> >  Rmpi
> > </quote>
> > Rmpi is not required, but I gather from previous discussion on this list
> > that suggests basically means required for R CMD check.
> >
> > NAMESPACE seems to raise similar issues; I don't see any mechanism for
> > optional imports.  Also, I have not used namespaces, and am not eager to
> > destabilize things so close to release.  At least, I hope I'm close to
> > release :)
> >
> > Thanks for any advice.
> >
> > Ross Boylan
> >
> > P.S. Thanks, Duncan, for your recent advice on my help format problem
> > with R 2.7.  I removed the nested \description, and now things look OK.
> >
> > ______________________________________________
> > R-devel at r-project.org mailing list
> > https://stat.ethz.ch/mailman/listinfo/r-devel
> >


From ross at biostat.ucsf.edu  Fri Jan 15 19:54:21 2010
From: ross at biostat.ucsf.edu (Ross Boylan)
Date: Fri, 15 Jan 2010 10:54:21 -0800
Subject: [Rd] optional package dependency (suggestions/wishes)
In-Reply-To: <B283F9DC-B4D9-4D44-8910-1AE855840FD2@r-project.org>
References: <1263535210.26202.16.camel@corn.betterworld.us>
	<e8e755251001142212nd942256i526d63f4858f988c@mail.gmail.com>
	<19280.9467.920615.289850@hornik.net>
	<1263575889.26202.22.camel@corn.betterworld.us>
	<B283F9DC-B4D9-4D44-8910-1AE855840FD2@r-project.org>
Message-ID: <1263581661.26202.54.camel@corn.betterworld.us>

On Fri, 2010-01-15 at 12:34 -0500, Simon Urbanek wrote:
> 
> On Jan 15, 2010, at 12:18 , Ross Boylan wrote:
> 
> > On Fri, 2010-01-15 at 09:19 +0100, Kurt Hornik wrote:
> >> The idea is that maintainers typically want to
> >> fully check their functionality, suggesting to force suggests by
> >> default.
> > This might be the nub of the problem.  There are different
> audiences,
> > even for R CMD check.
> >
> > The maintainer probably wants to check all functionality.  Even
> then,
> > there is an issue if functionality differs by platform.
> >
> > CRAN probably wants to check all functionality.
> >
> > An individual user just wants to check the functionality they use.
> >
> > For example, if someone doesn't want to run my package
> distributed,  
> > but
> > wants to see if it works (R CMD check), they need to be able to
> avoid
> > the potentially onerous requirement to install MPI.
> >
> 
> ... that what's why you can decide to run check without forcing  
> suggests  - it's entirely up to you / the user as Kurt pointed out ...
> 
> Cheers,
> Simon
This prompts a series of increasing ambitious suggestions:

1. DOCUMENTATION CHANGE
I suggest this info about _R_CHECK_FORCE_SUGGESTS_=false be added to R
CMD check --help.

Until Kurt's email I was unaware of the facility, and it seems to me the
average package user will be even less likely to know.  My concern is
that they would run R CMD check; it would fail because a package such as
rmpi is absent; and the user will throw up their hands and give up.

I did find a Perl variable with similar name in section 1.3.3 of
"Writing R Extensions", but that section does not mention environment
variables.  It would also be unnatural for a package user to refer to
it.

Considering there are many variables, maybe the interactive help should
just note that customizing variables (without naming particular ones)
are available, and point to appropriate documentation

2. NEW BEHAVIOR/OPTIONS
On even more exotic wish would be to allow a list of suggested packages
to check.  That way, someone use some, but not all, optional facilities
could check the ones of interest.  Again, even with better documentation
it seems likely most people would be unaware of the feature.

3. SIGNIFICANTLY CHANGED BEHAVIOR
I think the optimal behavior would be for the check environment to
attempt to load all suggested packages, but continue even if some are
missing.  It would then be up to package authors to code appropriate
conditional tests for the presence or absence of suggested packages;
actually, that's probably true even now.

Ross


From koller.manuel at gmail.com  Fri Jan 15 23:30:45 2010
From: koller.manuel at gmail.com (Manuel Koller)
Date: Fri, 15 Jan 2010 23:30:45 +0100
Subject: [Rd] Using multicore with an open pdf device results in corrupt
	pdf (PR#14186)
In-Reply-To: <84E58B64-9082-47BB-B4FA-EDB728EDD5AB@r-project.org>
References: <20100115141513.A0F5D2831FFE@mail.pubhealth.ku.dk>
	<84E58B64-9082-47BB-B4FA-EDB728EDD5AB@r-project.org>
Message-ID: <2DE649A5-D6B3-4F11-8179-57A2A40813A6@gmail.com>

Well I guess there's no point in starting a discussion here. I can also do all calculations, gather the plots in a list before starting the pdf device and plot them later. But just to prove my point: the attached pdfs (generated in a clean session, on the system used to generate the bug report) are not identical. They might display fine with some pdf viewers, but at least Adobe Reader 9.3.0 on OS X refuses to display test4.pdf. 

Regards,
Manuel

-------------- next part --------------

On 15.01.2010, at 18:48, Simon Urbanek wrote:

> How is this a bug in R? First, multicore is not R. Second, you're running multicore with GUI code loaded which it explicitly tells you that it won't work. Third, the code you provided does produce correct PDFs (tested on the same platform you provided) in a clean session (unsurprisingly).
> 
> Cheers,
> Simon
> 
> 
> On Jan 15, 2010, at 9:15 , kollerma at stat.math.ethz.ch wrote:
> 
>> The attached code produces corrupted pdfs (test2.pdf, test4.pdf and
>> test5.pdf). The resulting pdf depends on how many cores are available on
>> the machine.
>> 
>> I don't see why there should be any difference between the pdfs (exept for
>> the timestamp). Doing many operations involving mclapply can increase the
>> size of the resulting pdf by ten times!
>> 
>> Thank you for checking this.
>> 
>> require(multicore)
>> 
>> pdf('test.pdf')
>> y <- unlist(lapply(1:50, identity))
>> plot(y)
>> print(y)
>> dev.off()
>> 
>> options(cores = 3)
>> 
>> pdf('test2.pdf')
>> y <- unlist(mclapply(1:50, identity))
>> plot(y)
>> print(y)
>> dev.off()
>> 
>> pdf('test3.pdf')
>> y <- unlist(lapply(1:50, identity))
>> plot(y)
>> print(y)
>> dev.off()
>> 
>> options(cores = 2)
>> 
>> pdf('test4.pdf')
>> y <- unlist(mclapply(1:50, identity))
>> plot(y)
>> print(y)
>> dev.off()
>> 
>> options(cores = 8)
>> 
>> pdf('test5.pdf')
>> y <- unlist(mclapply(1:50, identity))
>> plot(y)
>> print(y)
>> dev.off()
>> 
>> 
>> --please do not edit the information below--
>> 
>> Version:
>> platform = x86_64-unknown-linux-gnu
>> arch = x86_64
>> os = linux-gnu
>> system = x86_64, linux-gnu
>> status =
>> major = 2
>> minor = 10.1
>> year = 2009
>> month = 12
>> day = 14
>> svn rev = 50720
>> language = R
>> version.string = R version 2.10.1 (2009-12-14)
>> 
>> Locale:
>> LC_CTYPE=de_CH.UTF-8;LC_NUMERIC=C;LC_TIME=en_US.UTF-8;LC_COLLATE=de_CH.UTF-8;LC_MONETARY=C;LC_MESSAGES=de_CH.UTF-8;LC_PAPER=de_CH.UTF-8;LC_NAME=C;LC_ADDRESS=C;LC_TELEPHONE=C;LC_MEASUREMENT=de_CH.UTF-8;LC_IDENTIFICATION=C
>> 
>> Search Path:
>> .GlobalEnv, package:skewt, package:rgl, package:ggplot2, package:reshape, package:plyr, package:proto, package:VGAM, package:stats4, package:splines, package:latticeExtra, package:RColorBrewer, package:doMC, package:multicore, package:foreach, package:codetools, package:iterators, package:abind, package:seqinr, package:mvbutils, mvb.session.info, package:tools, package:robust, package:rrcov, package:pcaPP, package:mvtnorm, package:robustbase, package:MASS, package:glmmML, package:playwith, package:grid, package:gWidgetsRGtk2, package:cairoDevice, package:lattice, package:gWidgets, package:graphics, package:grDevices, package:datasets, package:fortunes, package:sfsmisc, package:stats, package:utils, package:methods, Autoloads, package:base
>> 
>> ______________________________________________
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel
>> 
>> 
> 
> 
> !DSPAM:4b50aa7856519769714416!
> 


From macq at llnl.gov  Sat Jan 16 01:04:21 2010
From: macq at llnl.gov (Don MacQueen)
Date: Fri, 15 Jan 2010 16:04:21 -0800
Subject: [Rd] order() fails on a chr object of class "AsIs" with "\265" in it
Message-ID: <p06240812c776abcb3a13@[128.115.67.9]>

Here's an example (session info at the end).

>  tmpv <- c('\265g/L','Bq/L')
>  order(tmpv)
[1] 2 1
>  tmpv <- I(tmpv)
>  order(tmpv)
Error in if (xi > xj) 1L else -1L : missing value where TRUE/FALSE needed
>  foov <- gsub('\265','',tmpv)
>  order(foov)
[1] 2 1
>  str(tmpv)
Class 'AsIs'  chr [1:2] "\265g/L" "Bq/L"
>  str(foov)
Class 'AsIs'  chr [1:2] "g/L" "Bq/L"

I can easily work around this in my scripts, but shouldn't order() 
succeed with such an object?
(I suppose this could be Mac-specific, but I'm assuming it's not...)

For context:
The character "\265" causes the Greek letter mu to be displayed in 
various output devices. For example, the character vector eventually 
gets written to an html file, which when displayed in Firefox (Mac) 
is displayed as Greek mu. Also in Excel 2004 (Mac).

I first wrote these scripts 6 years ago, when "\265" was a way I 
could find to display the Greek mu in output text files of various 
kinds. They worked as recently as 3 months ago. Maybe there's a 
better way now to display a mu in text-based contexts?


>  sessionInfo()
R version 2.10.1 (2009-12-14)
i386-apple-darwin8.11.1

locale:
[1] C

attached base packages:
[1] stats     graphics  grDevices utils     datasets  methods   base

Thanks
-Don
-- 
--------------------------------------
Don MacQueen
Environmental Protection Department
Lawrence Livermore National Laboratory
Livermore, CA, USA
925-423-1062


From ripley at stats.ox.ac.uk  Sat Jan 16 08:17:11 2010
From: ripley at stats.ox.ac.uk (Prof Brian Ripley)
Date: Sat, 16 Jan 2010 07:17:11 +0000 (GMT)
Subject: [Rd] order() fails on a chr object of class "AsIs" with "\265"
 in it
In-Reply-To: <p06240812c776abcb3a13@[128.115.67.9]>
References: <p06240812c776abcb3a13@[128.115.67.9]>
Message-ID: <alpine.LFD.2.00.1001160703230.7459@gannet.stats.ox.ac.uk>

On Fri, 15 Jan 2010, Don MacQueen wrote:

> Here's an example (session info at the end).
>
>>  tmpv <- c('\265g/L','Bq/L')
>>  order(tmpv)
> [1] 2 1
>>  tmpv <- I(tmpv)
>>  order(tmpv)
> Error in if (xi > xj) 1L else -1L : missing value where TRUE/FALSE needed
>>  foov <- gsub('\265','',tmpv)
>>  order(foov)
> [1] 2 1
>>  str(tmpv)
> Class 'AsIs'  chr [1:2] "\265g/L" "Bq/L"
>>  str(foov)
> Class 'AsIs'  chr [1:2] "g/L" "Bq/L"
>
> I can easily work around this in my scripts, but shouldn't order() succeed 
> with such an object?

Not in the C locale.  There is no pre-defined ordering for non-ASCII 
characters in that locale and the string is invalid in a strict C 
locale.

> (I suppose this could be Mac-specific, but I'm assuming it's not...)

No, but the handling of invalid strings in C is OS-specific.

> For context:
> The character "\265" causes the Greek letter mu to be displayed in various 
> output devices. For example, the character vector eventually gets written to 
> an html file, which when displayed in Firefox (Mac) is displayed as Greek mu. 
> Also in Excel 2004 (Mac).
>
> I first wrote these scripts 6 years ago, when "\265" was a way I could find 
> to display the Greek mu in output text files of various kinds. They worked as 
> recently as 3 months ago. Maybe there's a better way now to display a mu in 
> text-based contexts?

Use UTF-8 and Unicode \u03BC 
(http://www.alanwood.net/unicode/greek.html).

The issue is that you need a xtfrm method for 'AsIs': it falls back to 
comparisons via .gt and those (correctly) fail.

xtfrm.AsIs <- function(x) xtfrm(unclass(x))

would keep get you going until you fix the scripts.

>
>>  sessionInfo()
> R version 2.10.1 (2009-12-14)
> i386-apple-darwin8.11.1
>
> locale:
> [1] C
>
> attached base packages:
> [1] stats     graphics  grDevices utils     datasets  methods   base
>
> Thanks
> -Don
> -- 
> --------------------------------------
> Don MacQueen
> Environmental Protection Department
> Lawrence Livermore National Laboratory
> Livermore, CA, USA
> 925-423-1062
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>

-- 
Brian D. Ripley,                  ripley at stats.ox.ac.uk
Professor of Applied Statistics,  http://www.stats.ox.ac.uk/~ripley/
University of Oxford,             Tel:  +44 1865 272861 (self)
1 South Parks Road,                     +44 1865 272866 (PA)
Oxford OX1 3TG, UK                Fax:  +44 1865 272595


From landronimirc at gmail.com  Sat Jan 16 14:35:11 2010
From: landronimirc at gmail.com (landronimirc at gmail.com)
Date: Sat, 16 Jan 2010 14:35:11 +0100 (CET)
Subject: [Rd] 'tcltk' crashes related to event-loops (PR#14187)
Message-ID: <20100116133511.45551282EFC0@mail.pubhealth.ku.dk>

--0016e6d464cff5d753047d482362
Content-Type: text/plain; charset=UTF-8

I am experiencing some regular crashes on Debian Linux, 32- and
64-bit, involving 'tcltk' and 'cairoDevice' or 'RGtk2'. They make it
very difficult to use tcltk interfaces (Rcmdr) and GTK+ ones (rattle,
playwith, etc.)  in the same R session.

NOTE: Before you continue, please read NOTE2 located towards the end
of the message.

To reproduce you need to load 'tcltk' and 'cairoDevice' in the same R
--vanilla session. When executing the following in that order, in a
new terminal window:
require(tcltk)
require(cairoDevice)
ReturnVal <- tkmessageBox(title="Greetings from R
TclTk",message="Hello, world!",icon="info",type="ok")
### click "ok"

I get a crash (confirmed by Dirk---copied---on his Debian system) with
the following message (see R-tcltk-cairoDevice.txt):
> The program 'R' received an X Window System error.
This probably reflects a bug in the program.
The error was 'BadWindow (invalid Window parameter)'.
 (Details: serial 317 error_code 3 request_code 15 minor_code 0)
 (Note to programmers: normally, X errors are reported asynchronously;
  that is, you will receive the error a while after causing it.
  To debug your program, run it with the --sync command line
  option to change this behavior. You can then get a meaningful
  backtrace from your debugger if you break on the gdk_x_error() function.)


The crash and error are very similar in case of 'RGtk2':
require(tcltk)
require(RGtk2)
ReturnVal <- tkmessageBox(title="Greetings from R
TclTk",message="Hello, world!",icon="info",type="ok")
### click "ok" to get the crash


There are other ways to obtain the same error messages, but without
concurrent crashes.
liviu at debian-liv:~$ R --vanilla
require(tcltk)
fix(iris)  ### click "quit"
ReturnVal <- tkmessageBox(title="Greetings from R
TclTk",message="Hello, world!",icon="info",type="ok")
### click "ok"
ReturnVal <- tkmessageBox(title="Greetings from R
TclTk",message="Hello, world!",icon="info",type="ok")
### click "ok"; to get the warnings(), this needs done twice

Then I get:
"There were 16 warnings (use warnings() to see them)"
> warnings()
Warning messages:
1: In structure(.External("dotTclObjv", objv, PACKAGE = "tcltk"),  ... :
 X11 protocol error: BadWindow (invalid Window parameter)
[.. and 16 other same messages ..]


Yet another way is via Rcmdr, with a slightly different message:
liviu at debian-liv:~$ R --vanilla
require(Rcmdr)
data(iris)
### select "iris" as active dataset
### click "edit" button, then "quit" the editor
### click "view" button, then close the viewer
### close Rcmdr and about 16 such errors will pop up

Warning in structure(.External("dotTclObjv", objv, PACKAGE = "tcltk"),
class = "tclObj") :
 X11 protocol error: BadWindow (invalid Window parameter)


Inverting the order of the calls, say,
require(cairoDevice)
require(tcltk)

sporadically generates tcltk freezes, with a different error message.
I will submit a separate bug report on this.


NOTE1  I've already contacted in private several R developers (all
copied), and below are some comments.
On Fri, Jan 8, 2010 at 2:41 PM, Michael Lawrence
<lawrence.michael at gene.com> wrote:
> From the looks of it, the problem is on the tcltk side. When you load RGtk2,
> cairoDevice, or probably any package that links to GTK+ (well technically
> Gdk), the X11 error is handled differently. Yes, the error occurs (is
> reported?) sooner, which I can't explain, but again there's obviously
> something going wrong in tcltk.

On 1/11/10, Peter Dalgaard <P.Dalgaard at biostat.ku.dk> wrote:
> The warnings have been puzzling me for quite a while in "pure" tcltk
>  applications. They don't usually cause a crash, though, and the --sync
>  bit in the message suggests that this comes from error handling outside
>  of the tcltk package (R doesn't have a --sync option).
>
>  Clearly, this sort of error comes from deleting windows with pending
>  messages or sending messages to deleted windows, but I never got a
>  handle on how to debug it. At the root of it is of course the
>  unconventional way in which the event loop is hacked into the keyboard loop.
>


NOTE2 It seems that I found a circumstance that might help to
explain/track down the underlying issue.
Test case 1:
- make sure no R session is running
- open an R --vanilla session
- open a second R --vanilla session in a different terminal/tab
- run any of the crash-generating code (see above)
- you might *not* get the crash

Test case 2:
- make sure no R session is running
- open an R --vanilla session
- require(tcltk)
- open a second R --vanilla session in a different terminal/tab
- run any of the crash-generating code (see above)
- you should get a crash

It seems that the "tcltk with GTK" crashes occur when another R
instance has tcltk loaded.


SYSTEM INFO
liviu at debian-liv:~$ uname -a
Linux debian-liv 2.6.30-2-amd64 #1 SMP Mon Dec 7 05:21:45 UTC 2009
x86_64 GNU/Linux
liviu at debian-liv:~$ cat /etc/apt/sources.list | grep cran2deb
deb http://debian.cran.r-project.org/cran2deb/debian-amd64/ testing/

> sessionInfo()
R version 2.10.1 (2009-12-14)
x86_64-pc-linux-gnu

locale:
 [1] LC_CTYPE=en_GB.UTF-8       LC_NUMERIC=C
 [3] LC_TIME=en_GB.UTF-8        LC_COLLATE=en_GB.UTF-8
 [5] LC_MONETARY=C              LC_MESSAGES=en_GB.UTF-8
 [7] LC_PAPER=en_GB.UTF-8       LC_NAME=C
 [9] LC_ADDRESS=C               LC_TELEPHONE=C
[11] LC_MEASUREMENT=en_GB.UTF-8 LC_IDENTIFICATION=C

attached base packages:
[1] tcltk     stats     graphics  grDevices utils     datasets  methods
[8] base

other attached packages:
[1] cairoDevice_2.10

> version
               _
platform       x86_64-pc-linux-gnu
arch           x86_64
os             linux-gnu
system         x86_64, linux-gnu
status
major          2
minor          10.1
year           2009
month          12
day            14
svn rev        50720
language       R
version.string R version 2.10.1 (2009-12-14)

--0016e6d464cff5d753047d482362
Content-Type: text/plain; charset=US-ASCII; name="R-tcltk-cairoDevice.txt"
Content-Disposition: attachment; filename="R-tcltk-cairoDevice.txt"
Content-Transfer-Encoding: base64
X-Attachment-Id: f_g4icq5rx1

bGl2aXVAZGViaWFuLWxpdjp+JCBSIC0tdmFuaWxsYQoKUiB2ZXJzaW9uIDIuMTAuMSAoMjAwOS0x
Mi0xNCkKQ29weXJpZ2h0IChDKSAyMDA5IFRoZSBSIEZvdW5kYXRpb24gZm9yIFN0YXRpc3RpY2Fs
IENvbXB1dGluZwpJU0JOIDMtOTAwMDUxLTA3LTAKClIgaXMgZnJlZSBzb2Z0d2FyZSBhbmQgY29t
ZXMgd2l0aCBBQlNPTFVURUxZIE5PIFdBUlJBTlRZLgpZb3UgYXJlIHdlbGNvbWUgdG8gcmVkaXN0
cmlidXRlIGl0IHVuZGVyIGNlcnRhaW4gY29uZGl0aW9ucy4KVHlwZSAnbGljZW5zZSgpJyBvciAn
bGljZW5jZSgpJyBmb3IgZGlzdHJpYnV0aW9uIGRldGFpbHMuCgogIE5hdHVyYWwgbGFuZ3VhZ2Ug
c3VwcG9ydCBidXQgcnVubmluZyBpbiBhbiBFbmdsaXNoIGxvY2FsZQoKUiBpcyBhIGNvbGxhYm9y
YXRpdmUgcHJvamVjdCB3aXRoIG1hbnkgY29udHJpYnV0b3JzLgpUeXBlICdjb250cmlidXRvcnMo
KScgZm9yIG1vcmUgaW5mb3JtYXRpb24gYW5kCidjaXRhdGlvbigpJyBvbiBob3cgdG8gY2l0ZSBS
IG9yIFIgcGFja2FnZXMgaW4gcHVibGljYXRpb25zLgoKVHlwZSAnZGVtbygpJyBmb3Igc29tZSBk
ZW1vcywgJ2hlbHAoKScgZm9yIG9uLWxpbmUgaGVscCwgb3IKJ2hlbHAuc3RhcnQoKScgZm9yIGFu
IEhUTUwgYnJvd3NlciBpbnRlcmZhY2UgdG8gaGVscC4KVHlwZSAncSgpJyB0byBxdWl0IFIuCgo+
IHJlcXVpcmUodGNsdGspCkxvYWRpbmcgcmVxdWlyZWQgcGFja2FnZTogdGNsdGsKTG9hZGluZyBU
Y2wvVGsgaW50ZXJmYWNlIC4uLiBkb25lCj4gcmVxdWlyZShjYWlyb0RldmljZSkKTG9hZGluZyBy
ZXF1aXJlZCBwYWNrYWdlOiBjYWlyb0RldmljZQpXYXJuaW5nIG1lc3NhZ2U6CnBhY2thZ2UgJ2Nh
aXJvRGV2aWNlJyB3YXMgYnVpbHQgdW5kZXIgUiB2ZXJzaW9uIDIuOS4wIGFuZCBoZWxwIG1heSBu
b3Qgd29yayBjb3JyZWN0bHkgCj4gUmV0dXJuVmFsIDwtIHRrbWVzc2FnZUJveCh0aXRsZT0iR3Jl
ZXRpbmdzIGZyb20gUiBUY2xUayIsbWVzc2FnZT0iSGVsbG8sIHdvcmxkISIsaWNvbj0iaW5mbyIs
dHlwZT0ib2siKQo+ICMjIyBjbGljayAib2siIGFuZCBnZXQgYSBjcmFzaAo+IFRoZSBwcm9ncmFt
ICdSJyByZWNlaXZlZCBhbiBYIFdpbmRvdyBTeXN0ZW0gZXJyb3IuClRoaXMgcHJvYmFibHkgcmVm
bGVjdHMgYSBidWcgaW4gdGhlIHByb2dyYW0uClRoZSBlcnJvciB3YXMgJ0JhZFdpbmRvdyAoaW52
YWxpZCBXaW5kb3cgcGFyYW1ldGVyKScuCiAgKERldGFpbHM6IHNlcmlhbCAzMTcgZXJyb3JfY29k
ZSAzIHJlcXVlc3RfY29kZSAxNSBtaW5vcl9jb2RlIDApCiAgKE5vdGUgdG8gcHJvZ3JhbW1lcnM6
IG5vcm1hbGx5LCBYIGVycm9ycyBhcmUgcmVwb3J0ZWQgYXN5bmNocm9ub3VzbHk7CiAgIHRoYXQg
aXMsIHlvdSB3aWxsIHJlY2VpdmUgdGhlIGVycm9yIGEgd2hpbGUgYWZ0ZXIgY2F1c2luZyBpdC4K
ICAgVG8gZGVidWcgeW91ciBwcm9ncmFtLCBydW4gaXQgd2l0aCB0aGUgLS1zeW5jIGNvbW1hbmQg
bGluZQogICBvcHRpb24gdG8gY2hhbmdlIHRoaXMgYmVoYXZpb3IuIFlvdSBjYW4gdGhlbiBnZXQg
YSBtZWFuaW5nZnVsCiAgIGJhY2t0cmFjZSBmcm9tIHlvdXIgZGVidWdnZXIgaWYgeW91IGJyZWFr
IG9uIHRoZSBnZGtfeF9lcnJvcigpIGZ1bmN0aW9uLikK
--0016e6d464cff5d753047d482362--


From seth at userprimary.net  Sat Jan 16 16:37:09 2010
From: seth at userprimary.net (Seth Falcon)
Date: Sat, 16 Jan 2010 07:37:09 -0800
Subject: [Rd] optional package dependency
In-Reply-To: <4B508F1C.1030604@statistik.tu-dortmund.de>
References: <1263535210.26202.16.camel@corn.betterworld.us>	<e8e755251001142212nd942256i526d63f4858f988c@mail.gmail.com>	<19280.9467.920615.289850@hornik.net>
	<4B50881B.1070106@userprimary.net>
	<4B508F1C.1030604@statistik.tu-dortmund.de>
Message-ID: <4B51DD25.8050902@userprimary.net>

On 1/15/10 7:51 AM, Uwe Ligges wrote:
> the Windows checks for CRAN run with that setting, i.e.
> 
>  _R_CHECK_FORCE_SUGGESTS_=false
> 
> Hence the multicore issue mentioned below actually does not exist.

I did not know that the Windows checks for CRAN used this setting.
My concern was initiated by a Bioconductor package developer wanting to
use multicore and I mistakenly thought the issue would exist for CRAN as
well.  Bioconductor currently uses the default configuration for check
on all platforms.  For the CRAN case, there is no immediate problem.

While there isn't an issue at hand, the approach still seems lacking.
What happens when there is a Windows only package that folks want to
optionally use?  Perhaps public repositories should then not force
suggests for any platforms (do they already?) -- I think that is a
reasonable and simple solution.  But in that case, perhaps the deafult
value should change.

+ seth


From seth at userprimary.net  Sat Jan 16 16:49:10 2010
From: seth at userprimary.net (Seth Falcon)
Date: Sat, 16 Jan 2010 07:49:10 -0800
Subject: [Rd] optional package dependency
In-Reply-To: <226733B0-3AB1-496C-8F12-A85C23E31A2C@r-project.org>
References: <1263535210.26202.16.camel@corn.betterworld.us>	<e8e755251001142212nd942256i526d63f4858f988c@mail.gmail.com>
	<19280.9467.920615.289850@hornik.net>
	<4B50881B.1070106@userprimary.net>
	<226733B0-3AB1-496C-8F12-A85C23E31A2C@r-project.org>
Message-ID: <4B51DFF6.7030804@userprimary.net>

On 1/15/10 7:47 AM, Simon Urbanek wrote:
> 
> On Jan 15, 2010, at 10:22 , Seth Falcon wrote:
>> I believe another option is:
>>
>>   pkg <- "somePkg"
>>   pkgAvail <- require(pkg, character.only = TRUE)
>>   if (pkgAvail)
>>      ...
>>   else
>>      ...
>>
> 
> That is not an option - that is the code you usually use with Suggests:
> (except for the pkg assignment which is there I presume to obscure things).

Unfortunately, it _is_ an option, just not a good one :-)

Some packages need to dynamically load other packages (think data
packages) and they will not know ahead of time what packages they will
load.  So there has to be some sort of loop-hole in the check logic.  In
legitimate cases, this is not obscuring anything.  In this case, I think
we agree the use would not be legitimate.

I'm less and less convinced that the force suggests behavior is useful
to anyone.  Package repositories can easily attempt to install all
suggests and so packages will get complete testing.  Package authors
should be responsible enough to test their codes with and without
optional features.  The slight convenience for an author to know that
optional packages are missing is at least equally balanced with the
slight inconvenience of having to change the check configuration in
order to test in the case of missing suggests.

Anyway...


From whuber at embl.de  Sat Jan 16 19:08:32 2010
From: whuber at embl.de (Wolfgang Huber)
Date: Sat, 16 Jan 2010 19:08:32 +0100
Subject: [Rd] "Too many raster images" in devPS.c
Message-ID: <4B5200A0.7080503@embl.de>

Hi,

I am finding the recently added [1] functionality of embedding raster 
images into plots on R devices very useful! Thanks to Paul Murrell and 
others for providing that. I noted that in 
https://svn.r-project.org/R/trunk/src/library/grDevices/src/devPS.c
a macro is defined: #define MAX_RASTERS 64, and consequently, I get

Error in grid.Call.graphics("L_raster", x$raster, x$x, x$y, x$width, 
x$height,  :
   Too many raster images

even for relatively innocent graphics, such as extensions of [2] (which 
I made with Bioconductor's "splots" package). Besides that, I imagine 
that raster images could be useful as 'glyphs' in various types of plots.

Besides the not so helpful option of patching that macro in my private 
copy of R, is there an intention to extend this functionality to 
accommodate for larger plots more generally?

[1] http://developer.r-project.org/Raster/raster-RFC.html
[2] http://www.ebi.ac.uk/~huber/pub/Druggable_ratio_1_before.pdf

Thank you and best wishes,
      Wolfgang

--
Wolfgang Huber
EMBL
http://www.embl.de/research/units/genome_biology/huber/contact


From ross at biostat.ucsf.edu  Sat Jan 16 19:53:34 2010
From: ross at biostat.ucsf.edu (Ross Boylan)
Date: Sat, 16 Jan 2010 10:53:34 -0800
Subject: [Rd] optional package dependency
In-Reply-To: <4B51DFF6.7030804@userprimary.net>
References: <1263535210.26202.16.camel@corn.betterworld.us>
	<e8e755251001142212nd942256i526d63f4858f988c@mail.gmail.com>
	<19280.9467.920615.289850@hornik.net>
	<4B50881B.1070106@userprimary.net>
	<226733B0-3AB1-496C-8F12-A85C23E31A2C@r-project.org>
	<4B51DFF6.7030804@userprimary.net>
Message-ID: <1263668014.26202.75.camel@corn.betterworld.us>

On Sat, 2010-01-16 at 07:49 -0800, Seth Falcon wrote:
> Package authors
> should be responsible enough to test their codes with and without
> optional features.
It seems unlikely most package authors will have access to a full range
of platform types.
Ross


From landronimirc at gmail.com  Sat Jan 16 20:35:14 2010
From: landronimirc at gmail.com (landronimirc at gmail.com)
Date: Sat, 16 Jan 2010 20:35:14 +0100 (CET)
Subject: [Rd] 'tcltk' freezes related to event-loops (PR#14188)
Message-ID: <20100116193514.2C096282EFC8@mail.pubhealth.ku.dk>

This report is related to the bug `'tcltk' crashes related to
event-loops' PR#14187 [1]. The difference to that bug is an inversion
of the command sequence.
[1] http://bugs.r-project.org/cgi-bin/R/incoming?id=14187;user=guest

With the following sequence I get sporadic freezes of tcltk.
require(cairoDevice)
require(tcltk)

Unlike for the previous bug, I am unable to identify a simple and
reproducible sequence of commands. To avoid the crashes documented in
PR#14187 and to able to use playwith and Rcmdr in the same R session,
I have been starting the two in the following order:
require(playwith)
require(Rcmdr)

Generally after some time of working with both (say, 30 min - 1 h),
tcltk freezes (the Rcmdr interface is still there, and I can click on
"File", for example, but the menu shown will be blank). Closing Rcmdr
I get the following error message:
Error in structure(.External("dotTclObjv", objv, PACKAGE = "tcltk"),
class = "tclObj") :
  [tcl] invalid command name "get".

After the first freeze occurs, anything tcltk does not work (for
example, restarting Rcmdr will display a blank window, just as a
relimp::showData(iris) command). Unfortunately, I cannot isolate
specific actions that trigger the freeze.


> sessionInfo()
R version 2.10.1 (2009-12-14)
x86_64-pc-linux-gnu

locale:
 [1] LC_CTYPE=en_GB.UTF-8       LC_NUMERIC=C
 [3] LC_TIME=en_GB.UTF-8        LC_COLLATE=en_GB.UTF-8
 [5] LC_MONETARY=C              LC_MESSAGES=en_GB.UTF-8
 [7] LC_PAPER=en_GB.UTF-8       LC_NAME=C
 [9] LC_ADDRESS=C               LC_TELEPHONE=C
[11] LC_MEASUREMENT=en_GB.UTF-8 LC_IDENTIFICATION=C

attached base packages:
 [1] splines   tcltk     grid      stats     graphics  grDevices
 [7] utils     datasets  methods   base

other attached packages:
 [1] RcmdrPlugin.HH_1.1-25    HH_2.1-32
 [3] leaps_2.9                multcomp_1.1-3
 [5] mvtnorm_0.9-8            RcmdrPlugin.sos_0.2-0
 [7] tcltk2_1.1-1             RcmdrPlugin.Export_0.3-0
 [9] Hmisc_3.7-0              survival_2.35-8
[11] xtable_1.5-6             Rcmdr_1.5-5
[13] car_1.2-16               playwith_0.9-45
[15] gWidgetsRGtk2_0.0-58     gWidgets_0.0-39
[17] cairoDevice_2.10         lattice_0.17-26
[19] fortunes_1.3-7           sos_1.2-4
[21] brew_1.0-3               hints_1.0.1-1

loaded via a namespace (and not attached):
[1] cluster_1.12.1 gridBase_0.4-3 RGtk2_2.12.15  tools_2.10.1

> version
               _
platform       x86_64-pc-linux-gnu
arch           x86_64
os             linux-gnu
system         x86_64, linux-gnu
status
major          2
minor          10.1
year           2009
month          12
day            14
svn rev        50720
language       R
version.string R version 2.10.1 (2009-12-14)


From edd at debian.org  Sun Jan 17 05:47:39 2010
From: edd at debian.org (Dirk Eddelbuettel)
Date: Sat, 16 Jan 2010 22:47:39 -0600
Subject: [Rd] optional package dependency
In-Reply-To: <1263668014.26202.75.camel@corn.betterworld.us>
References: <1263535210.26202.16.camel@corn.betterworld.us>
	<e8e755251001142212nd942256i526d63f4858f988c@mail.gmail.com>
	<19280.9467.920615.289850@hornik.net>
	<4B50881B.1070106@userprimary.net>
	<226733B0-3AB1-496C-8F12-A85C23E31A2C@r-project.org>
	<4B51DFF6.7030804@userprimary.net>
	<1263668014.26202.75.camel@corn.betterworld.us>
Message-ID: <19282.38507.836369.973106@ron.nulle.part>


On 16 January 2010 at 10:53, Ross Boylan wrote:
| On Sat, 2010-01-16 at 07:49 -0800, Seth Falcon wrote:
| > Package authors
| > should be responsible enough to test their codes with and without
| > optional features.
| It seems unlikely most package authors will have access to a full range
| of platform types.

For Windows, I use the win-builder.r-project.org more and more. A really
useful tool.  Kudos to Uwe and Olaf for running this.

For OS X, a 'mac-builder.r-project.org' would be very helpful. Just this eve
I discussed OS X build issues ... without having any access to machine with
OS X.

For Linux, the admission to CRAN is a good test. And I dare say the cran2deb
autobuilder Charles and I are running also puts a decent test on things --
even more so that the usual CRAN test as we run builds in so-called pbuilder
chroot so that eg missing dependencies really pop up.

So: 2 up, 1 to go. Any volunteers for scripting OS X towards a builder service?

Dirk

-- 
Three out of two people have difficulties with fractions.


From bayesianlogic at acm.org  Sun Jan 17 16:33:59 2010
From: bayesianlogic at acm.org (Jan Theodore Galkowski)
Date: Sun, 17 Jan 2010 10:33:59 -0500
Subject: [Rd] packages built against upcoming releases
In-Reply-To: <mailman.19.1263726006.17541.r-devel@r-project.org>
References: <mailman.19.1263726006.17541.r-devel@r-project.org>
Message-ID: <1263742439.893.1355098383@webmail.messagingengine.com>

I admire package-builders being proactive and having their facilities
ready for upcoming  R releases.  However, if the publicly released
version of R is 2.10.1 and a package is built for R 2.11.0, users get
the embarrassing notice about a disconnect, and cannot do much about it.

If it is tedious to roll out a new package on time, perhaps there's a
possibility for automation here.

Thanks.  I encountered this yesterday with RHmm.  I'm running R on
WinXP.

Happy R user!

 - Jan Galkowski.


From ligges at statistik.tu-dortmund.de  Sun Jan 17 18:04:36 2010
From: ligges at statistik.tu-dortmund.de (Uwe Ligges)
Date: Sun, 17 Jan 2010 18:04:36 +0100
Subject: [Rd] packages built against upcoming releases
In-Reply-To: <1263742439.893.1355098383@webmail.messagingengine.com>
References: <mailman.19.1263726006.17541.r-devel@r-project.org>
	<1263742439.893.1355098383@webmail.messagingengine.com>
Message-ID: <4B534324.2020804@statistik.tu-dortmund.de>



On 17.01.2010 16:33, Jan Theodore Galkowski wrote:
> I admire package-builders being proactive and having their facilities
> ready for upcoming  R releases.  However, if the publicly released
> version of R is 2.10.1 and a package is built for R 2.11.0, users get
> the embarrassing notice about a disconnect,

What a disconnect?


> and cannot do much about it.

They should install the version that is intended for R-2.10.x releases, 
not the one for the development version.
The RHmm version in the 2.10 repository in CRAN has

Built: R 2.10.1; i386-pc-mingw32; 2010-01-03 15:59:39 UTC; windows


hence built with R-2.10.x as required.



> If it is tedious to roll out a new package on time, perhaps there's a
> possibility for automation here.


It is automated and we are currently building for R-2.9.x, R-2.10.x and 
R-devel (the latter in 32-bit and 64-bit), and you have just to say 
install.packages() and your R wil grab the right version. I suspect you 
downloaded something manually from the wrong repository.

Uwe Ligges





> Thanks.  I encountered this yesterday with RHmm.  I'm running R on
> WinXP.
>
> Happy R user!
>
>   - Jan Galkowski.
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From bayesianlogic at acm.org  Sun Jan 17 18:16:38 2010
From: bayesianlogic at acm.org (Jan Theodore Galkowski)
Date: Sun, 17 Jan 2010 12:16:38 -0500
Subject: [Rd] packages built against upcoming releases
In-Reply-To: <4B534324.2020804@statistik.tu-dortmund.de>
References: <mailman.19.1263726006.17541.r-devel@r-project.org>
	<1263742439.893.1355098383@webmail.messagingengine.com>
	<4B534324.2020804@statistik.tu-dortmund.de>
Message-ID: <1263748598.13609.1355107457@webmail.messagingengine.com>

It is true RHmm is *not* available in the public central repositories. 
I think it's in Bioconductor. That said, the "installation process" was
the usual one from the GUI drop down, after electing repositories.  What
that does behind the scenes is something I do not know, but I don't see
how I could know. 

Just letting somebody know.  If you don't want to use the information,
that's cool with me.

On Sun, 17 Jan 2010 18:04 +0100, "Uwe Ligges"
<ligges at statistik.tu-dortmund.de> wrote:
> 
> 
> On 17.01.2010 16:33, Jan Theodore Galkowski wrote:
> > I admire package-builders being proactive and having their facilities
> > ready for upcoming  R releases.  However, if the publicly released
> > version of R is 2.10.1 and a package is built for R 2.11.0, users get
> > the embarrassing notice about a disconnect,
> 
> What a disconnect?
> 
> 
> > and cannot do much about it.
> 
> They should install the version that is intended for R-2.10.x releases, 
> not the one for the development version.
> The RHmm version in the 2.10 repository in CRAN has
> 
> Built: R 2.10.1; i386-pc-mingw32; 2010-01-03 15:59:39 UTC; windows
> 
> 
> hence built with R-2.10.x as required.
> 
> 
> 
> > If it is tedious to roll out a new package on time, perhaps there's a
> > possibility for automation here.
> 
> 
> It is automated and we are currently building for R-2.9.x, R-2.10.x and 
> R-devel (the latter in 32-bit and 64-bit), and you have just to say 
> install.packages() and your R wil grab the right version. I suspect you 
> downloaded something manually from the wrong repository.
> 
> Uwe Ligges
> 
> 
> 
> 
> 
> > Thanks.  I encountered this yesterday with RHmm.  I'm running R on
> > WinXP.
> >

[snip]

--
  Jan Theodore Galkowski  (o?)

  607.239.1834 [mobile]
  617.547.1221 [home]
  617.444.4995 [work]

 bayesianlogic at acm.org
 http://www.ekzept.net


 "Eppur si muove." --Galilei


From ligges at statistik.tu-dortmund.de  Sun Jan 17 18:23:09 2010
From: ligges at statistik.tu-dortmund.de (Uwe Ligges)
Date: Sun, 17 Jan 2010 18:23:09 +0100
Subject: [Rd] packages built against upcoming releases
In-Reply-To: <1263748598.13609.1355107457@webmail.messagingengine.com>
References: <mailman.19.1263726006.17541.r-devel@r-project.org>
	<1263742439.893.1355098383@webmail.messagingengine.com>
	<4B534324.2020804@statistik.tu-dortmund.de>
	<1263748598.13609.1355107457@webmail.messagingengine.com>
Message-ID: <4B53477D.5090507@statistik.tu-dortmund.de>



On 17.01.2010 18:16, Jan Theodore Galkowski wrote:
> It is true RHmm is *not* available in the public central repositories.

It is at the usual location at
CRAN/bin/windows/contrib/2.10/RHmm_1.3.1.zip


> I think it's in Bioconductor.

No on CRAN, and that's why I said CRAN. If it was BioConductor, this was 
the wrong mailing list anyway. Since I am the Windows binary maintainer 
for CRAN, I happen to know we have that package available and the line I 
reported is the build line of that package.



> That said, the "installation process" was
> the usual one from the GUI drop down, after electing repositories.  What
> that does behind the scenes is something I do not know, but I don't see
> how I could know.
 >
> Just letting somebody know.  If you don't want to use the information,
> that's cool with me.

But then please tell us
a) What is your version of R?
b) Which mirror did you choose?
c) You installed by clicking from the Windows GUI?
d) Again, what is a "disconnect"?

Hard to say and debug if you do not tell us what you did and which error 
message you got. Please see the posting guide.

Uwe Ligges






> On Sun, 17 Jan 2010 18:04 +0100, "Uwe Ligges"
> <ligges at statistik.tu-dortmund.de>  wrote:
>>
>>
>> On 17.01.2010 16:33, Jan Theodore Galkowski wrote:
>>> I admire package-builders being proactive and having their facilities
>>> ready for upcoming  R releases.  However, if the publicly released
>>> version of R is 2.10.1 and a package is built for R 2.11.0, users get
>>> the embarrassing notice about a disconnect,
>>
>> What a disconnect?
>>
>>
>>> and cannot do much about it.
>>
>> They should install the version that is intended for R-2.10.x releases,
>> not the one for the development version.
>> The RHmm version in the 2.10 repository in CRAN has
>>
>> Built: R 2.10.1; i386-pc-mingw32; 2010-01-03 15:59:39 UTC; windows
>>
>>
>> hence built with R-2.10.x as required.
>>
>>
>>
>>> If it is tedious to roll out a new package on time, perhaps there's a
>>> possibility for automation here.
>>
>>
>> It is automated and we are currently building for R-2.9.x, R-2.10.x and
>> R-devel (the latter in 32-bit and 64-bit), and you have just to say
>> install.packages() and your R wil grab the right version. I suspect you
>> downloaded something manually from the wrong repository.
>>
>> Uwe Ligges
>>
>>
>>
>>
>>
>>> Thanks.  I encountered this yesterday with RHmm.  I'm running R on
>>> WinXP.
>>>
>
> [snip]
>
> --
>    Jan Theodore Galkowski  (o?)
>
>    607.239.1834 [mobile]
>    617.547.1221 [home]
>    617.444.4995 [work]
>
>   bayesianlogic at acm.org
>   http://www.ekzept.net
>
>
>   "Eppur si muove." --Galilei
>
>


From hb at stat.berkeley.edu  Mon Jan 18 08:59:50 2010
From: hb at stat.berkeley.edu (Henrik Bengtsson)
Date: Sun, 17 Jan 2010 23:59:50 -0800
Subject: [Rd] CRAN: No MacOS X binary builds since January 7
Message-ID: <59d7961d1001172359j4dfe39b2t91bcf90e8bc7cd2b@mail.gmail.com>

FYI,

no MacOS X binaries have been built for CRAN since 2010-01-07:

> url <- "http://cran.r-project.org/bin/macosx/universal/contrib/r-release/";
> x <- readLines(url);
pattern <- ".*([0-9]{2}-[A-Za-z]{3}-[0-9]{4}) ([0-9]{2}:[0-9]{2}).*";
y <- grep(pattern, x, value=TRUE);
y <- grep("PACKAGE", y, invert=TRUE, value=TRUE);
z <- gsub(pattern, "\\1", y);
z <- unique(z);
z <- as.Date(z, "%d-%b-%Y");
z <- sort(z);
print(z);
> pattern <- ".*([0-9]{2}-[A-Za-z]{3}-[0-9]{4}) ([0-9]{2}:[0-9]{2}).*";
> y <- grep(pattern, x, value=TRUE);
> y <- grep("PACKAGE", y, invert=TRUE, value=TRUE);
> z <- gsub(pattern, "\\1", y);
> z <- unique(z);
> z <- as.Date(z, "%d-%b-%Y");
> z <- sort(z);
> print(z);
 [1] "2009-07-18" "2009-07-19" "2009-10-02" "2009-10-16" "2009-10-27"
 [6] "2009-10-28" "2009-10-29" "2009-10-30" "2009-10-31" "2009-11-02"
[11] "2009-11-04" "2009-11-05" "2009-11-06" "2009-11-07" "2009-11-09"
[16] "2009-11-10" "2009-11-11" "2009-11-12" "2009-11-13" "2009-11-14"
[21] "2009-11-16" "2009-11-17" "2009-11-18" "2009-11-19" "2009-11-20"
[26] "2009-11-21" "2009-11-23" "2009-11-24" "2009-11-25" "2009-11-26"
[31] "2009-11-27" "2009-11-28" "2009-11-30" "2009-12-01" "2009-12-02"
[36] "2009-12-03" "2009-12-04" "2009-12-07" "2009-12-08" "2009-12-10"
[41] "2009-12-11" "2009-12-12" "2009-12-14" "2009-12-15" "2009-12-16"
[46] "2009-12-17" "2009-12-18" "2009-12-19" "2009-12-21" "2009-12-22"
[51] "2009-12-23" "2009-12-24" "2009-12-25" "2009-12-27" "2009-12-29"
[56] "2009-12-30" "2009-12-31" "2010-01-02" "2010-01-03" "2010-01-04"
[61] "2010-01-05" "2010-01-06" "2010-01-07"
> print(table(diff(z)));

 1  2  3 11 14 75
46 12  1  1  1  1

/Henrik


From ripley at stats.ox.ac.uk  Mon Jan 18 10:36:11 2010
From: ripley at stats.ox.ac.uk (Prof Brian Ripley)
Date: Mon, 18 Jan 2010 09:36:11 +0000 (GMT)
Subject: [Rd] CRAN: No MacOS X binary builds since January 7
In-Reply-To: <59d7961d1001172359j4dfe39b2t91bcf90e8bc7cd2b@mail.gmail.com>
References: <59d7961d1001172359j4dfe39b2t91bcf90e8bc7cd2b@mail.gmail.com>
Message-ID: <alpine.LFD.2.00.1001180931490.10230@gannet.stats.ox.ac.uk>

Not an issue for *this* list!

Please report to the maintainer and perhaps cc R-sig-mac.  Note that 
you are looking at the (old) Tiger binaries and not the more current 
Leopard ones, which were last updated yesterday,

In any case, binary packages are a privilege and you can always 
install from the sources (in the vast majority of cases with no extra 
tools other than Xcode).

On Sun, 17 Jan 2010, Henrik Bengtsson wrote:

> FYI,
>
> no MacOS X binaries have been built for CRAN since 2010-01-07:
>
>> url <- "http://cran.r-project.org/bin/macosx/universal/contrib/r-release/";
>> x <- readLines(url);
> pattern <- ".*([0-9]{2}-[A-Za-z]{3}-[0-9]{4}) ([0-9]{2}:[0-9]{2}).*";
> y <- grep(pattern, x, value=TRUE);
> y <- grep("PACKAGE", y, invert=TRUE, value=TRUE);
> z <- gsub(pattern, "\\1", y);
> z <- unique(z);
> z <- as.Date(z, "%d-%b-%Y");
> z <- sort(z);
> print(z);
>> pattern <- ".*([0-9]{2}-[A-Za-z]{3}-[0-9]{4}) ([0-9]{2}:[0-9]{2}).*";
>> y <- grep(pattern, x, value=TRUE);
>> y <- grep("PACKAGE", y, invert=TRUE, value=TRUE);
>> z <- gsub(pattern, "\\1", y);
>> z <- unique(z);
>> z <- as.Date(z, "%d-%b-%Y");
>> z <- sort(z);
>> print(z);
> [1] "2009-07-18" "2009-07-19" "2009-10-02" "2009-10-16" "2009-10-27"
> [6] "2009-10-28" "2009-10-29" "2009-10-30" "2009-10-31" "2009-11-02"
> [11] "2009-11-04" "2009-11-05" "2009-11-06" "2009-11-07" "2009-11-09"
> [16] "2009-11-10" "2009-11-11" "2009-11-12" "2009-11-13" "2009-11-14"
> [21] "2009-11-16" "2009-11-17" "2009-11-18" "2009-11-19" "2009-11-20"
> [26] "2009-11-21" "2009-11-23" "2009-11-24" "2009-11-25" "2009-11-26"
> [31] "2009-11-27" "2009-11-28" "2009-11-30" "2009-12-01" "2009-12-02"
> [36] "2009-12-03" "2009-12-04" "2009-12-07" "2009-12-08" "2009-12-10"
> [41] "2009-12-11" "2009-12-12" "2009-12-14" "2009-12-15" "2009-12-16"
> [46] "2009-12-17" "2009-12-18" "2009-12-19" "2009-12-21" "2009-12-22"
> [51] "2009-12-23" "2009-12-24" "2009-12-25" "2009-12-27" "2009-12-29"
> [56] "2009-12-30" "2009-12-31" "2010-01-02" "2010-01-03" "2010-01-04"
> [61] "2010-01-05" "2010-01-06" "2010-01-07"
>> print(table(diff(z)));
>
> 1  2  3 11 14 75
> 46 12  1  1  1  1
>
> /Henrik
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>

-- 
Brian D. Ripley,                  ripley at stats.ox.ac.uk
Professor of Applied Statistics,  http://www.stats.ox.ac.uk/~ripley/
University of Oxford,             Tel:  +44 1865 272861 (self)
1 South Parks Road,                     +44 1865 272866 (PA)
Oxford OX1 3TG, UK                Fax:  +44 1865 272595


From dna_jin at hotmail.com  Mon Jan 18 11:13:16 2010
From: dna_jin at hotmail.com (=?gb2312?B?0trUqs7lvcc=?=)
Date: Mon, 18 Jan 2010 18:13:16 +0800
Subject: [Rd] Build R-2.10.0 on HP-UX ia64 server
Message-ID: <SNT132-w58036BAAED080F2D08E49E96660@phx.gbl>

An embedded and charset-unspecified text was scrubbed...
Name: not available
URL: <https://stat.ethz.ch/pipermail/r-devel/attachments/20100118/c05a730d/attachment.pl>

From borg at imbei.uni-mainz.de  Mon Jan 18 13:30:51 2010
From: borg at imbei.uni-mainz.de (Andreas Borg)
Date: Mon, 18 Jan 2010 13:30:51 +0100
Subject: [Rd] Fix for bug in match()
Message-ID: <4B54547B.2010108@imbei.uni-mainz.de>

Hello all,

I posted the following bug last week:

# These calls work correctly:
match(c("A", "B", "C"), c("A","C"), incomparables=NA) # okay
match(c("A", "B", "C"), "A") # okay
match("A", c("A", "B"), incomparables=NA) # okay

# This one causes R to hang:
match(c("A", "B", "C"), "A", incomparables=NA)

I found the reason in the hash table implementation in unique.c. Values 
in the table argument of match are stored in a hash table. Incomparables 
are then removed by (potentially multiple) calls to removeEntry():

static void removeEntry(SEXP table, SEXP x, int indx, HashData *d)
{
    int i, *h;

    h = INTEGER(d->HashTable);
    i = d->hash(x, indx, d);
    while (h[i] != NIL) {
    if (d->equal(table, h[i], x, indx)) {
        h[i] = NA_INTEGER;  /* < 0, only index values are inserted */
        return;
    }
    i = (i + 1) % d->M;
    }
    h[i] = NA_INTEGER;
}

Removing a value x sets the corresponding cell to NA_INTEGER. If x is 
not element of the table, the cell where it would have been is set from 
NIL (-1) to NA_INTEGER. Therefore, subsequent calls to removeEntry() 
with values that are not element of the table can remove all initial NIL 
values from the table cells. Another call of removeEntry() or Lookup() 
then leads to an infinte loop because the condition

while (h[i] != NIL)

is never false.

As a fix, I propose to reset cells to NIL when removing values, which 
leads to the following definition:

static void removeEntry(SEXP table, SEXP x, int indx, HashData *d)
{
    int i, *h;

    h = INTEGER(d->HashTable);
    i = d->hash(x, indx, d);
    while (h[i] != NIL) {
    if (d->equal(table, h[i], x, indx)) {
        h[i] = NIL;  /* < 0, only index values are inserted */
        return;
    }
    i = (i + 1) % d->M;
    }
}

I would have submitted a patch file, but I couldn't checkout from the 
svn repository.

Cheers,

Andreas





-- 
Andreas Borg
Medizinische Informatik

UNIVERSIT?TSMEDIZIN
der Johannes Gutenberg-Universit?t
Institut f?r Medizinische Biometrie, Epidemiologie und Informatik
Obere Zahlbacher Stra?e 69, 55131 Mainz
www.imbei.uni-mainz.de

Telefon +49 (0) 6131 175062
E-Mail: borg at imbei.uni-mainz.de

Diese E-Mail enth?lt vertrauliche und/oder rechtlich gesch?tzte Informationen. Wenn Sie nicht der
richtige Adressat sind oder diese E-Mail irrt?mlich erhalten haben, informieren Sie bitte sofort den
Absender und l?schen Sie diese Mail. Das unerlaubte Kopieren sowie die unbefugte Weitergabe
dieser Mail und der darin enthaltenen Informationen ist nicht gestattet.


From hb at stat.berkeley.edu  Mon Jan 18 13:53:09 2010
From: hb at stat.berkeley.edu (Henrik Bengtsson)
Date: Mon, 18 Jan 2010 04:53:09 -0800
Subject: [Rd] CRAN: No MacOS X binary builds since January 7
In-Reply-To: <alpine.LFD.2.00.1001180931490.10230@gannet.stats.ox.ac.uk>
References: <59d7961d1001172359j4dfe39b2t91bcf90e8bc7cd2b@mail.gmail.com>
	<alpine.LFD.2.00.1001180931490.10230@gannet.stats.ox.ac.uk>
Message-ID: <59d7961d1001180453l4206374fsc64c28e89e170872@mail.gmail.com>

On Mon, Jan 18, 2010 at 1:36 AM, Prof Brian Ripley
<ripley at stats.ox.ac.uk> wrote:
> Not an issue for *this* list!

I used this list to share this with package developers - not
particularly MacOS X users.  As a package provider  I'd like to know
when packages are not available on all platforms.  It seems like a
errors, because the records show that packages are typically built
every day.

>
> Please report to the maintainer and perhaps cc R-sig-mac.

Maintainer has been notified repeatably without response (==don't know
if my messages even gets through).

> ?Note that you are
> looking at the (old) Tiger binaries and not the more current Leopard ones,
> which were last updated yesterday,

Thanks for this note.  As a non-OSX user, I wasn't aware of this.  It
made me find:

http://cran.r-project.org/bin/macosx/leopard/contrib/r-release/

This is not the directory that are used for the MacOS X links when
going to package pages under http://cran.r-project.org/web/packages/,
e.g.

http://cran.r-project.org/web/packages/aroma.core/

The MacOS X links is:

http://cran.r-project.org/bin/macosx/universal/contrib/r-release/aroma.core_1.3.1.tgz

Another example is here:

  http://cran.r-project.org/web/packages/biglars/

Then, do the MacOS X links on the CRAN package pages need to be
updated/complemented?

If this is already well known, that is all I need to hear.  (I
understand that install.packages() takes care of the installation).

/Henrik

>
> In any case, binary packages are a privilege and you can always install from
> the sources (in the vast majority of cases with no extra tools other than
> Xcode).
>
> On Sun, 17 Jan 2010, Henrik Bengtsson wrote:
>
>> FYI,
>>
>> no MacOS X binaries have been built for CRAN since 2010-01-07:
>>
>>> url <-
>>> "http://cran.r-project.org/bin/macosx/universal/contrib/r-release/";
>>> x <- readLines(url);
>>
>> pattern <- ".*([0-9]{2}-[A-Za-z]{3}-[0-9]{4}) ([0-9]{2}:[0-9]{2}).*";
>> y <- grep(pattern, x, value=TRUE);
>> y <- grep("PACKAGE", y, invert=TRUE, value=TRUE);
>> z <- gsub(pattern, "\\1", y);
>> z <- unique(z);
>> z <- as.Date(z, "%d-%b-%Y");
>> z <- sort(z);
>> print(z);
>>>
>>> pattern <- ".*([0-9]{2}-[A-Za-z]{3}-[0-9]{4}) ([0-9]{2}:[0-9]{2}).*";
>>> y <- grep(pattern, x, value=TRUE);
>>> y <- grep("PACKAGE", y, invert=TRUE, value=TRUE);
>>> z <- gsub(pattern, "\\1", y);
>>> z <- unique(z);
>>> z <- as.Date(z, "%d-%b-%Y");
>>> z <- sort(z);
>>> print(z);
>>
>> [1] "2009-07-18" "2009-07-19" "2009-10-02" "2009-10-16" "2009-10-27"
>> [6] "2009-10-28" "2009-10-29" "2009-10-30" "2009-10-31" "2009-11-02"
>> [11] "2009-11-04" "2009-11-05" "2009-11-06" "2009-11-07" "2009-11-09"
>> [16] "2009-11-10" "2009-11-11" "2009-11-12" "2009-11-13" "2009-11-14"
>> [21] "2009-11-16" "2009-11-17" "2009-11-18" "2009-11-19" "2009-11-20"
>> [26] "2009-11-21" "2009-11-23" "2009-11-24" "2009-11-25" "2009-11-26"
>> [31] "2009-11-27" "2009-11-28" "2009-11-30" "2009-12-01" "2009-12-02"
>> [36] "2009-12-03" "2009-12-04" "2009-12-07" "2009-12-08" "2009-12-10"
>> [41] "2009-12-11" "2009-12-12" "2009-12-14" "2009-12-15" "2009-12-16"
>> [46] "2009-12-17" "2009-12-18" "2009-12-19" "2009-12-21" "2009-12-22"
>> [51] "2009-12-23" "2009-12-24" "2009-12-25" "2009-12-27" "2009-12-29"
>> [56] "2009-12-30" "2009-12-31" "2010-01-02" "2010-01-03" "2010-01-04"
>> [61] "2010-01-05" "2010-01-06" "2010-01-07"
>>>
>>> print(table(diff(z)));
>>
>> 1 ?2 ?3 11 14 75
>> 46 12 ?1 ?1 ?1 ?1
>>
>> /Henrik
>>
>> ______________________________________________
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>
>
> --
> Brian D. Ripley, ? ? ? ? ? ? ? ? ?ripley at stats.ox.ac.uk
> Professor of Applied Statistics, ?http://www.stats.ox.ac.uk/~ripley/
> University of Oxford, ? ? ? ? ? ? Tel: ?+44 1865 272861 (self)
> 1 South Parks Road, ? ? ? ? ? ? ? ? ? ? +44 1865 272866 (PA)
> Oxford OX1 3TG, UK ? ? ? ? ? ? ? ?Fax: ?+44 1865 272595
>


From simon.urbanek at r-project.org  Mon Jan 18 15:54:04 2010
From: simon.urbanek at r-project.org (Simon Urbanek)
Date: Mon, 18 Jan 2010 09:54:04 -0500
Subject: [Rd] CRAN: No MacOS X binary builds since January 7
In-Reply-To: <59d7961d1001180453l4206374fsc64c28e89e170872@mail.gmail.com>
References: <59d7961d1001172359j4dfe39b2t91bcf90e8bc7cd2b@mail.gmail.com>
	<alpine.LFD.2.00.1001180931490.10230@gannet.stats.ox.ac.uk>
	<59d7961d1001180453l4206374fsc64c28e89e170872@mail.gmail.com>
Message-ID: <743AA1E0-BCE0-4613-BA33-D9083E6E5869@r-project.org>

On Jan 18, 2010, at 7:53 , Henrik Bengtsson wrote:

> On Mon, Jan 18, 2010 at 1:36 AM, Prof Brian Ripley
> <ripley at stats.ox.ac.uk> wrote:
>> Not an issue for *this* list!
>
> I used this list to share this with package developers - not
> particularly MacOS X users.  As a package provider  I'd like to know
> when packages are not available on all platforms.  It seems like a
> errors, because the records show that packages are typically built
> every day.
>
>>
>> Please report to the maintainer and perhaps cc R-sig-mac.
>
> Maintainer has been notified repeatably without response (==don't know
> if my messages even gets through).
>

I wonder where you were sending your notifications -- quite apparently  
not to the right place as I didn't get any ...

Anyway, now that it reached me (through suboptimal channels as Brian  
pointed out) it should be fixed for the next run.


>>  Note that you are
>> looking at the (old) Tiger binaries and not the more current  
>> Leopard ones,
>> which were last updated yesterday,
>
> Thanks for this note.  As a non-OSX user, I wasn't aware of this.  It
> made me find:
>
> http://cran.r-project.org/bin/macosx/leopard/contrib/r-release/
>
> This is not the directory that are used for the MacOS X links when
> going to package pages under http://cran.r-project.org/web/packages/,
> e.g.
>
> http://cran.r-project.org/web/packages/aroma.core/
>
> The MacOS X links is:
>
> http://cran.r-project.org/bin/macosx/universal/contrib/r-release/aroma.core_1.3.1.tgz
>
> Another example is here:
>
>  http://cran.r-project.org/web/packages/biglars/
>
> Then, do the MacOS X links on the CRAN package pages need to be
> updated/complemented?
>

I think so -- there is currently a discrepancy - the checks show  
Leopard builds but that link is to the Tiger build -- Kurt, can you,  
please, check?


> If this is already well known, that is all I need to hear.  (I
> understand that install.packages() takes care of the installation).
>
> /Henrik
>
>>
>> In any case, binary packages are a privilege and you can always  
>> install from
>> the sources (in the vast majority of cases with no extra tools  
>> other than
>> Xcode).
>>
>> On Sun, 17 Jan 2010, Henrik Bengtsson wrote:
>>
>>> FYI,
>>>
>>> no MacOS X binaries have been built for CRAN since 2010-01-07:
>>>
>>>> url <-
>>>> "http://cran.r-project.org/bin/macosx/universal/contrib/r- 
>>>> release/";
>>>> x <- readLines(url);
>>>
>>> pattern <- ".*([0-9]{2}-[A-Za-z]{3}-[0-9]{4}) ([0-9]{2}:[0-9] 
>>> {2}).*";
>>> y <- grep(pattern, x, value=TRUE);
>>> y <- grep("PACKAGE", y, invert=TRUE, value=TRUE);
>>> z <- gsub(pattern, "\\1", y);
>>> z <- unique(z);
>>> z <- as.Date(z, "%d-%b-%Y");
>>> z <- sort(z);
>>> print(z);
>>>>
>>>> pattern <- ".*([0-9]{2}-[A-Za-z]{3}-[0-9]{4}) ([0-9]{2}:[0-9] 
>>>> {2}).*";
>>>> y <- grep(pattern, x, value=TRUE);
>>>> y <- grep("PACKAGE", y, invert=TRUE, value=TRUE);
>>>> z <- gsub(pattern, "\\1", y);
>>>> z <- unique(z);
>>>> z <- as.Date(z, "%d-%b-%Y");
>>>> z <- sort(z);
>>>> print(z);
>>>
>>> [1] "2009-07-18" "2009-07-19" "2009-10-02" "2009-10-16" "2009-10-27"
>>> [6] "2009-10-28" "2009-10-29" "2009-10-30" "2009-10-31" "2009-11-02"
>>> [11] "2009-11-04" "2009-11-05" "2009-11-06" "2009-11-07"  
>>> "2009-11-09"
>>> [16] "2009-11-10" "2009-11-11" "2009-11-12" "2009-11-13"  
>>> "2009-11-14"
>>> [21] "2009-11-16" "2009-11-17" "2009-11-18" "2009-11-19"  
>>> "2009-11-20"
>>> [26] "2009-11-21" "2009-11-23" "2009-11-24" "2009-11-25"  
>>> "2009-11-26"
>>> [31] "2009-11-27" "2009-11-28" "2009-11-30" "2009-12-01"  
>>> "2009-12-02"
>>> [36] "2009-12-03" "2009-12-04" "2009-12-07" "2009-12-08"  
>>> "2009-12-10"
>>> [41] "2009-12-11" "2009-12-12" "2009-12-14" "2009-12-15"  
>>> "2009-12-16"
>>> [46] "2009-12-17" "2009-12-18" "2009-12-19" "2009-12-21"  
>>> "2009-12-22"
>>> [51] "2009-12-23" "2009-12-24" "2009-12-25" "2009-12-27"  
>>> "2009-12-29"
>>> [56] "2009-12-30" "2009-12-31" "2010-01-02" "2010-01-03"  
>>> "2010-01-04"
>>> [61] "2010-01-05" "2010-01-06" "2010-01-07"
>>>>
>>>> print(table(diff(z)));
>>>
>>> 1  2  3 11 14 75
>>> 46 12  1  1  1  1
>>>
>>> /Henrik
>>>
>>> ______________________________________________
>>> R-devel at r-project.org mailing list
>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>>
>>
>> --
>> Brian D. Ripley,                  ripley at stats.ox.ac.uk
>> Professor of Applied Statistics,  http://www.stats.ox.ac.uk/~ripley/
>> University of Oxford,             Tel:  +44 1865 272861 (self)
>> 1 South Parks Road,                     +44 1865 272866 (PA)
>> Oxford OX1 3TG, UK                Fax:  +44 1865 272595
>>
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>
>


From macq at llnl.gov  Mon Jan 18 19:21:13 2010
From: macq at llnl.gov (Don MacQueen)
Date: Mon, 18 Jan 2010 10:21:13 -0800
Subject: [Rd] order() fails on a chr object of class "AsIs" with "\265"
 in it
In-Reply-To: <alpine.LFD.2.00.1001160703230.7459@gannet.stats.ox.ac.uk>
References: <p06240812c776abcb3a13@[128.115.67.9]>
	<alpine.LFD.2.00.1001160703230.7459@gannet.stats.ox.ac.uk>
Message-ID: <p06240800c77a55e916e2@[128.115.67.9]>

Prof. Ripley,

Thank you for the explanation. I appreciate both understanding what's 
happening, and having several options for fixing my scripts.

-Don

At 7:17 AM +0000 1/16/10, Prof Brian Ripley wrote:
>On Fri, 15 Jan 2010, Don MacQueen wrote:
>
>>Here's an example (session info at the end).
>>
>>>  tmpv <- c('\265g/L','Bq/L')
>>>  order(tmpv)
>>[1] 2 1
>>>  tmpv <- I(tmpv)
>>>  order(tmpv)
>>Error in if (xi > xj) 1L else -1L : missing value where TRUE/FALSE needed
>>>  foov <- gsub('\265','',tmpv)
>>>  order(foov)
>>[1] 2 1
>>>  str(tmpv)
>>Class 'AsIs'  chr [1:2] "\265g/L" "Bq/L"
>>>  str(foov)
>>Class 'AsIs'  chr [1:2] "g/L" "Bq/L"
>>
>>I can easily work around this in my scripts, but shouldn't order() 
>>succeed with such an object?
>
>Not in the C locale.  There is no pre-defined ordering for non-ASCII 
>characters in that locale and the string is invalid in a strict C 
>locale.
>
>>(I suppose this could be Mac-specific, but I'm assuming it's not...)
>
>No, but the handling of invalid strings in C is OS-specific.
>
>>For context:
>>The character "\265" causes the Greek letter mu to be displayed in 
>>various output devices. For example, the character vector 
>>eventually gets written to an html file, which when displayed in 
>>Firefox (Mac) is displayed as Greek mu. Also in Excel 2004 (Mac).
>>
>>I first wrote these scripts 6 years ago, when "\265" was a way I 
>>could find to display the Greek mu in output text files of various 
>>kinds. They worked as recently as 3 months ago. Maybe there's a 
>>better way now to display a mu in text-based contexts?
>
>Use UTF-8 and Unicode \u03BC (http://*www.*alanwood.net/unicode/greek.html).
>
>The issue is that you need a xtfrm method for 'AsIs': it falls back 
>to comparisons via .gt and those (correctly) fail.
>
>xtfrm.AsIs <- function(x) xtfrm(unclass(x))
>
>would keep get you going until you fix the scripts.
>
>>
>>>  sessionInfo()
>>R version 2.10.1 (2009-12-14)
>>i386-apple-darwin8.11.1
>>
>>locale:
>>[1] C
>>
>>attached base packages:
>>[1] stats     graphics  grDevices utils     datasets  methods   base
>>
>>Thanks
>>-Don
>>--
>>--------------------------------------
>>Don MacQueen
>>Environmental Protection Department
>>Lawrence Livermore National Laboratory
>>Livermore, CA, USA
>>925-423-1062
>>
>>______________________________________________
>>R-devel at r-project.org mailing list
>>https://*stat.ethz.ch/mailman/listinfo/r-devel
>>
>
>--
>Brian D. Ripley,                  ripley at stats.ox.ac.uk
>Professor of Applied Statistics,  http://*www.*stats.ox.ac.uk/~ripley/
>University of Oxford,             Tel:  +44 1865 272861 (self)
>1 South Parks Road,                     +44 1865 272866 (PA)
>Oxford OX1 3TG, UK                Fax:  +44 1865 272595


-- 
--------------------------------------
Don MacQueen
Environmental Protection Department
Lawrence Livermore National Laboratory
Livermore, CA, USA
925-423-1062


From romain.francois at dbmail.com  Mon Jan 18 19:27:12 2010
From: romain.francois at dbmail.com (Romain Francois)
Date: Mon, 18 Jan 2010 19:27:12 +0100
Subject: [Rd] compiler specific flags : -std=c++0x
Message-ID: <4B54A800.1000900@dbmail.com>

Hello,

We'd like to use the flag -std=c++0x to take advantage of features of 
the forthcoming C++0x standard that is already partly implemented by the 
GCC >= 4.3

R CMD check warns about the flag because it is non portable. Is there a 
way to turn the warning off, considering that we do test that the 
compiler is indeed GCC >= 4.3 as part of our configure script and we 
only add the flag in that case.

Romain

-- 
Romain Francois
Professional R Enthusiast
+33(0) 6 28 91 30 30
http://romainfrancois.blog.free.fr
|- http://tr.im/KfKn : Rcpp 0.7.2
|- http://tr.im/JOlc : External pointers with Rcpp
`- http://tr.im/JFqa : R Journal, Volume 1/2, December 2009


From arnima at hafro.is  Tue Jan 19 02:20:13 2010
From: arnima at hafro.is (arnima at hafro.is)
Date: Tue, 19 Jan 2010 02:20:13 +0100 (CET)
Subject: [Rd] Model frame when LHS is cbind (PR#14189)
Message-ID: <20100119012013.79FF7282EF56@mail.pubhealth.ku.dk>

The model frame shows the response and predictors in a data frame with
nicely labelled columns:

  fm <- lm(wt~qsec+log(hp)+sqrt(disp), data=mtcars)
  model.frame(fm)  # ok

When the left hand side consists of more than one response, those response
variables still look good, inside a matrix:

  fm <- lm(cbind(qsec,hp,disp)~wt, data=mtcars)
  model.frame(fm)[[1]]  # ok

A problem arises when some of the response variables are transformed:

  fm <- lm(cbind(qsec,log(hp),sqrt(disp))~wt, data=mtcars)
  model.frame(fm)[[1]]  # ugh, missing column names

The model frame is useful for many things, even more so when all column
names are legible. Therefore I propose adding two new lines to
model.frame.default() between lines 371 and 372 in
R-patched_2010-01-12/src/library/stats/R/models.R:

    varnames <- sapply(vars, deparse, width.cutoff = 500)[-1L]
    variables <- eval(predvars, data, env)

NEW if (is.matrix(variables[[1L]]))
NEW     colnames(variables[[1L]]) <- as.character(formula[[2L]])[-1L]

    if (is.null(rownames) && (resp <- attr(formula, "response")) >
        0L) {

With this fix, the above example returns legible column names:

  fm <- lm(cbind(qsec,log(hp),sqrt(disp))~wt, data=mtcars)
  model.frame(fm)[[1]]  # nice column names

I hope the R development team can either commit this fix or improve it.

Thanks,

Arni


From btm at loftninjas.org  Tue Jan 19 05:06:08 2010
From: btm at loftninjas.org (Bryan McLellan)
Date: Mon, 18 Jan 2010 20:06:08 -0800
Subject: [Rd] Copyright versus Licenses
Message-ID: <893823751001182006l36ef05e4gf6f44d2b93e1a606@mail.gmail.com>

My company recently started using a R library from RCRAN that is
licensed under the LGPL Version 2 or greater per the DESCRIPTION file,
but contains no copy of the LGPL notice, or any copyright notice. I've
grown accustomed to paying attention to copyright and licensing as a
Debian package maintainer, and sent the author of the package an email
expressing my concern. The author believed that assigning themselves
copyright was incompatible with licensing the library under the terms
of the LGPL. I disagree, and further contend that without copyright
notice, the [copyright] license loses a certain degree of
applicability, as it becomes inconclusive as to who is licensing the
software under the terms of the LGPL. Not knowing who I was, the
library author asked me to start a discussion of the subject on this
list, presumably so they could see the opinions of others that they
trust.

The LGPL itself [1], in the final section entitled "How to Apply These
Terms to Your New Libraries", the license provides a template for
adding to the top of each source code file that contains a copyright
line, a general notice regarding the lack of warranty, and information
on where to obtain a full copy of the license. The GPL HOWTO [2]
expresses similar instructions for the inclusion of a copyright line
with the license. I know that R distributes copies of common licenses
under 'share/licenses' in the R source. Debian does as well in
'/usr/share/common-licenses/' for the purpose of not having to include
the full LICENSE and/or COPYING file with every package that uses a
common open source license, allowing the use of verbage such as "The
Debian packaging is ? 2010 [author] and is licensed under the Apache
License version 2.0. On debian and derived systems, see
`/usr/share/common-licenses/Apache-2.0' for the complete text." The R
manual for writing extensions suggests a similar approach to avoiding
duplication in Section 1.1 [3].

The R manual for writing extensions also mentions [4] in Section 1.1.1
the optional use of a Copyright field in the DESCRIPTION file,
separate from the License field. As this section implies that the
DESCRIPTION file format is based on the debian control file format, I
assume the goal is to keep these lines simple, generally under 80
characters do to average terminal width. As such, I don't assume this
field is recommended for complete copyright information for a library
with multiple contributors. The aforementioned article does not
specify where a developer should alternately put copyright
information, perhaps assuming one would add it to each source code
file as is recommended by GNU.

In closing, do the R developers believe that including a Copyright
notice is imperative with a Copyright License?

If so, what advice do they have for those writing and contributing
open source R libraries as to where this notice should go?

Should that information perhaps be added to the R manual for extensions?

Bryan McLellan

[1] http://www.gnu.org/licenses/lgpl-2.1.txt
[2] http://www.gnu.org/licenses/gpl-howto.html
[3] http://cran.r-project.org/doc/manuals/R-exts.html#Package-structure
[4] http://cran.r-project.org/doc/manuals/R-exts.html#The-DESCRIPTION-file


From simon.urbanek at r-project.org  Tue Jan 19 17:54:27 2010
From: simon.urbanek at r-project.org (Simon Urbanek)
Date: Tue, 19 Jan 2010 11:54:27 -0500
Subject: [Rd] Copyright versus Licenses
In-Reply-To: <893823751001182006l36ef05e4gf6f44d2b93e1a606@mail.gmail.com>
References: <893823751001182006l36ef05e4gf6f44d2b93e1a606@mail.gmail.com>
Message-ID: <12CEDA39-5D4A-4354-BC04-ADC373760053@r-project.org>

On Jan 18, 2010, at 23:06 , Bryan McLellan wrote:

> My company recently started using a R library

I suspect you meant R package as R libraries have no DESCRIPTION ...


> from RCRAN that is licensed under the LGPL Version 2 or greater per  
> the DESCRIPTION file, but contains no copy of the LGPL notice, or  
> any copyright notice. I've grown accustomed to paying attention to  
> copyright and licensing as a Debian package maintainer, and sent the  
> author of the package an email expressing my concern. The author  
> believed that assigning themselves copyright was incompatible with  
> licensing the library under the terms of the LGPL. I disagree, and  
> further contend that without copyright notice, the [copyright]  
> license loses a certain degree of applicability, as it becomes  
> inconclusive as to who is licensing the software under the terms of  
> the LGPL. Not knowing who I was, the library author asked me to  
> start a discussion of the subject on this list, presumably so they  
> could see the opinions of others that they trust.
>

[Disclaimer: I'm not a lawyer and this is not a legal advice. I'm not  
representing anyone but myself.]

Copyright is the right that the author of an original work holds  
automatically (unless someone else can claim to own his work - e.g.  
his employer etc.) under the Berne Convention. The copyright gives  
only the author all rights - including but not limited to the right to  
copy, modify, distribute the work etc.  Licenses are used to give some  
of those rights to other people under certain conditions. Hence you  
cannot "assign yourself copyright" because you already have it (and if  
you don't then your cannot assign it). Also you don't need to give the  
"copyright" to anyone else - you can give certain rights to others  
using licenses -- such as GPL, LGPL, EUPL etc. -- but you don't give  
copyright by those since you have far more rights as the author (e.g.,  
you can do whatever your want with the original work beyond the  
restrictions of the license). There are cases where you may want to  
give your copyright to someone, e.g., an organization that represents  
all authors of a project which makes it easier to change licenses  
etc., but that is a different story.


> The LGPL itself [1], in the final section entitled "How to Apply  
> These Terms to Your New Libraries", the license provides a template  
> for adding to the top of each source code file that contains a  
> copyright line, a general notice regarding the lack of warranty, and  
> information on where to obtain a full copy of the license. The GPL  
> HOWTO [2] expresses similar instructions for the inclusion of a  
> copyright line with the license. I know that R distributes copies of  
> common licenses under 'share/licenses' in the R source. Debian does  
> as well in '/usr/share/common-licenses/' for the purpose of not  
> having to include the full LICENSE and/or COPYING file with every  
> package that uses a common open source license, allowing the use of  
> verbage such as "The Debian packaging is ? 2010 [author] and is  
> licensed under the Apache License version 2.0. On debian and derived  
> systems, see `/usr/share/common-licenses/Apache-2.0' for the  
> complete text." The R manual for writing extensions suggests a  
> similar approach to avoiding duplication in Section 1.1 [3].
>
> The R manual for writing extensions also mentions [4] in Section  
> 1.1.1 the optional use of a Copyright field in the DESCRIPTION file,  
> separate from the License field. As this section implies that the  
> DESCRIPTION file format is based on the debian control file format,  
> I assume the goal is to keep these lines simple, generally under 80  
> characters do to average terminal width. As such, I don't assume  
> this field is recommended for complete copyright information for a  
> library with multiple contributors. The aforementioned article does  
> not specify where a developer should alternately put copyright  
> information, perhaps assuming one would add it to each source code  
> file as is recommended by GNU.
>

I think that is a good practice since it makes it easy to find the  
copyright holder in case of licensing questions.

However, I suspect that the Author field in the DESCRIPTION could be  
interpreted as the copyright holder unless anything else is specified  
(if the author doesn't have copyright s/he would have to specify the  
Copyright: field). Sometimes single-author packages just state the  
author and license assuming that it is clear enough. For large  
projects with many copyright holders you really want to mark the  
individual files. In either case, marking individual files is clearer  
as they may be available separately. I don't think there is a strict  
rule - if tested by the law I suspect that the intent is the most  
important factor.

This is just my $0.02 -- it would be a really great if authors  
understood exactly what is a copyright and what is a license.  
Unfortunately there is a lot of confusion as people read about certain  
details (e.g. from GNU FAQ) without understanding the underlying  
mechanisms and the implications.

Cheers,
Simon


> In closing, do the R developers believe that including a Copyright  
> notice is imperative with a Copyright License?
>
> If so, what advice do they have for those writing and contributing  
> open source R libraries as to where this notice should go?
>
> Should that information perhaps be added to the R manual for  
> extensions?
>
> Bryan McLellan
>
> [1] http://www.gnu.org/licenses/lgpl-2.1.txt
> [2] http://www.gnu.org/licenses/gpl-howto.html
> [3] http://cran.r-project.org/doc/manuals/R-exts.html#Package- 
> structure
> [4] http://cran.r-project.org/doc/manuals/R-exts.html#The-DESCRIPTION-file
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>
>


From tlumley at u.washington.edu  Tue Jan 19 18:17:26 2010
From: tlumley at u.washington.edu (Thomas Lumley)
Date: Tue, 19 Jan 2010 09:17:26 -0800 (PST)
Subject: [Rd] Copyright versus Licenses
In-Reply-To: <893823751001182006l36ef05e4gf6f44d2b93e1a606@mail.gmail.com>
Message-ID: <alpine.LRH.2.01.1001190917260.13781@hymn11.u.washington.edu>

On Mon, 18 Jan 2010, Bryan McLellan wrote:

> My company recently started using a R library from RCRAN that is
> licensed under the LGPL Version 2 or greater per the DESCRIPTION file,
> but contains no copy of the LGPL notice, or any copyright notice. I've
> grown accustomed to paying attention to copyright and licensing as a
> Debian package maintainer, and sent the author of the package an email
> expressing my concern. The author believed that assigning themselves
> copyright was incompatible with licensing the library under the terms
> of the LGPL. I disagree, and further contend that without copyright
> notice, the [copyright] license loses a certain degree of
> applicability, as it becomes inconclusive as to who is licensing the
> software under the terms of the LGPL. Not knowing who I was, the
> library author asked me to start a discussion of the subject on this
> list, presumably so they could see the opinions of others that they
> trust.

Like Simon, I'm speaking only for myself here.

Not having an explicit copyright statement certainly makes it harder for people downstream who have questions, so explicit statements seem like a good thing.

> The LGPL itself [1], in the final section entitled "How to Apply These
> Terms to Your New Libraries", the license provides a template for
> adding to the top of each source code file that contains a copyright
> line, a general notice regarding the lack of warranty, and information
> on where to obtain a full copy of the license. The GPL HOWTO [2]
> expresses similar instructions for the inclusion of a copyright line
> with the license. I know that R distributes copies of common licenses
> under 'share/licenses' in the R source. Debian does as well in
> '/usr/share/common-licenses/' for the purpose of not having to include
> the full LICENSE and/or COPYING file with every package that uses a
> common open source license, allowing the use of verbage such as "The
> Debian packaging is ? 2010 [author] and is licensed under the Apache
> License version 2.0. On debian and derived systems, see
> `/usr/share/common-licenses/Apache-2.0' for the complete text." The R
> manual for writing extensions suggests a similar approach to avoiding
> duplication in Section 1.1 [3].
>
> The R manual for writing extensions also mentions [4] in Section 1.1.1
> the optional use of a Copyright field in the DESCRIPTION file,
> separate from the License field. As this section implies that the
> DESCRIPTION file format is based on the debian control file format, I
> assume the goal is to keep these lines simple, generally under 80
> characters do to average terminal width. As such, I don't assume this
> field is recommended for complete copyright information for a library
> with multiple contributors. The aforementioned article does not
> specify where a developer should alternately put copyright
> information, perhaps assuming one would add it to each source code
> file as is recommended by GNU.

Yes, in the source code is good.

In addition, if you look at the source code for R, the approach there has been to have a file COPYRIGHTS that lists the original copyright holders of bits of the code.  This seems like a good idea if there are multiple sources.  It's especially useful if there are areas of doubt and uncertainty (eg code published on ftp sites before people worried about licenses), since it at least gives you rigidly defined areas of doubt and uncertainty[5]


> In closing, do the R developers believe that including a Copyright
> notice is imperative with a Copyright License?
>
> If so, what advice do they have for those writing and contributing
> open source R libraries as to where this notice should go?
>
> Should that information perhaps be added to the R manual for extensions?
>
> Bryan McLellan
>
> [1] http://www.gnu.org/licenses/lgpl-2.1.txt
> [2] http://www.gnu.org/licenses/gpl-howto.html
> [3] http://cran.r-project.org/doc/manuals/R-exts.html#Package-structure
> [4] http://cran.r-project.org/doc/manuals/R-exts.html#The-DESCRIPTION-file
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>

     -thomas

Thomas Lumley			Assoc. Professor, Biostatistics
tlumley at u.washington.edu	University of Washington, Seattle



[5] Adams D, (1978) Hitchhiker's Guide. BBC Radio.

From ross at biostat.ucsf.edu  Tue Jan 19 19:01:00 2010
From: ross at biostat.ucsf.edu (Ross Boylan)
Date: Tue, 19 Jan 2010 10:01:00 -0800
Subject: [Rd] calling setGeneric() twice
Message-ID: <1263924060.10417.31.camel@corn.betterworld.us>

Is it safe to call setGeneric twice, assuming some setMethod's for the
target function occur in between?  By "safe" I mean that all the
setMethod's remain in effect, and the 2nd call is, effectively, a no-op.

?setGeneric says nothing explicit about this behavior that I can see.
It does say that if there is an existing implicity generic function it
will be (re?)used. I also tried ?Methods, google and the mailing list
archives.

I looked at the code for setGeneric, but I'm not confident how it
behaves.  It doesn't seem to do a simple return of the existing value if
a generic already exists, although it does have special handling for
that case.  The other problem with looking at the code--or running
tests--is that they only show the current behavior, which might change
later.

This came up because of some issues with the sequencing of code in my
package.  Adding duplicate setGeneric's seems like the smallest, and
therefore safest, change if the duplication is not a problem.

Thanks.
Ross Boylan


From seth at userprimary.net  Tue Jan 19 19:05:16 2010
From: seth at userprimary.net (Seth Falcon)
Date: Tue, 19 Jan 2010 10:05:16 -0800
Subject: [Rd] calling setGeneric() twice
In-Reply-To: <1263924060.10417.31.camel@corn.betterworld.us>
References: <1263924060.10417.31.camel@corn.betterworld.us>
Message-ID: <4B55F45C.4040408@userprimary.net>

On 1/19/10 10:01 AM, Ross Boylan wrote:
> Is it safe to call setGeneric twice, assuming some setMethod's for the
> target function occur in between?  By "safe" I mean that all the
> setMethod's remain in effect, and the 2nd call is, effectively, a no-op.
>
> ?setGeneric says nothing explicit about this behavior that I can see.
> It does say that if there is an existing implicity generic function it
> will be (re?)used. I also tried ?Methods, google and the mailing list
> archives.
>
> I looked at the code for setGeneric, but I'm not confident how it
> behaves.  It doesn't seem to do a simple return of the existing value if
> a generic already exists, although it does have special handling for
> that case.  The other problem with looking at the code--or running
> tests--is that they only show the current behavior, which might change
> later.
>
> This came up because of some issues with the sequencing of code in my
> package.  Adding duplicate setGeneric's seems like the smallest, and
> therefore safest, change if the duplication is not a problem.

I'm not sure of the answer to your question, but I think it is the wrong 
question :-)

Perhaps you can provide more detail on why you are using multiple calls 
to setGeneric.  That seems like a very odd thing to do.

+ seth

-- 
Seth Falcon | @sfalcon | http://userprimary.net/user


From hb at stat.berkeley.edu  Tue Jan 19 19:53:47 2010
From: hb at stat.berkeley.edu (Henrik Bengtsson)
Date: Tue, 19 Jan 2010 10:53:47 -0800
Subject: [Rd] CRAN: No MacOS X binary builds since January 7
In-Reply-To: <743AA1E0-BCE0-4613-BA33-D9083E6E5869@r-project.org>
References: <59d7961d1001172359j4dfe39b2t91bcf90e8bc7cd2b@mail.gmail.com>
	<alpine.LFD.2.00.1001180931490.10230@gannet.stats.ox.ac.uk>
	<59d7961d1001180453l4206374fsc64c28e89e170872@mail.gmail.com>
	<743AA1E0-BCE0-4613-BA33-D9083E6E5869@r-project.org>
Message-ID: <59d7961d1001191053t782bfe24o7cd48e65555a28f4@mail.gmail.com>

Thanks,

the "universal" MacOS X binaries are now updated/built, which are what
the CRAN package pages refer to.

Just for others information: I've been emailing offline with Simon U
("maintainer"), and it turns out that my initial posts to him
regarding these issues went into his spam folder.  Without wanting to
raise expectations of his responsiveness, he basically said if you
don't get a reply within a few days, your post most likely ended up in
his spam folder.  May be good to know.

/Henrik

On Mon, Jan 18, 2010 at 6:54 AM, Simon Urbanek
<simon.urbanek at r-project.org> wrote:
> On Jan 18, 2010, at 7:53 , Henrik Bengtsson wrote:
>
>> On Mon, Jan 18, 2010 at 1:36 AM, Prof Brian Ripley
>> <ripley at stats.ox.ac.uk> wrote:
>>>
>>> Not an issue for *this* list!
>>
>> I used this list to share this with package developers - not
>> particularly MacOS X users. ?As a package provider ?I'd like to know
>> when packages are not available on all platforms. ?It seems like a
>> errors, because the records show that packages are typically built
>> every day.
>>
>>>
>>> Please report to the maintainer and perhaps cc R-sig-mac.
>>
>> Maintainer has been notified repeatably without response (==don't know
>> if my messages even gets through).
>>
>
> I wonder where you were sending your notifications -- quite apparently not
> to the right place as I didn't get any ...
>
> Anyway, now that it reached me (through suboptimal channels as Brian pointed
> out) it should be fixed for the next run.
>
>
>>> ?Note that you are
>>> looking at the (old) Tiger binaries and not the more current Leopard
>>> ones,
>>> which were last updated yesterday,
>>
>> Thanks for this note. ?As a non-OSX user, I wasn't aware of this. ?It
>> made me find:
>>
>> http://cran.r-project.org/bin/macosx/leopard/contrib/r-release/
>>
>> This is not the directory that are used for the MacOS X links when
>> going to package pages under http://cran.r-project.org/web/packages/,
>> e.g.
>>
>> http://cran.r-project.org/web/packages/aroma.core/
>>
>> The MacOS X links is:
>>
>>
>> http://cran.r-project.org/bin/macosx/universal/contrib/r-release/aroma.core_1.3.1.tgz
>>
>> Another example is here:
>>
>> ?http://cran.r-project.org/web/packages/biglars/
>>
>> Then, do the MacOS X links on the CRAN package pages need to be
>> updated/complemented?
>>
>
> I think so -- there is currently a discrepancy - the checks show Leopard
> builds but that link is to the Tiger build -- Kurt, can you, please, check?
>
>
>> If this is already well known, that is all I need to hear. ?(I
>> understand that install.packages() takes care of the installation).
>>
>> /Henrik
>>
>>>
>>> In any case, binary packages are a privilege and you can always install
>>> from
>>> the sources (in the vast majority of cases with no extra tools other than
>>> Xcode).
>>>
>>> On Sun, 17 Jan 2010, Henrik Bengtsson wrote:
>>>
>>>> FYI,
>>>>
>>>> no MacOS X binaries have been built for CRAN since 2010-01-07:
>>>>
>>>>> url <-
>>>>> "http://cran.r-project.org/bin/macosx/universal/contrib/r-release/";
>>>>> x <- readLines(url);
>>>>
>>>> pattern <- ".*([0-9]{2}-[A-Za-z]{3}-[0-9]{4}) ([0-9]{2}:[0-9]{2}).*";
>>>> y <- grep(pattern, x, value=TRUE);
>>>> y <- grep("PACKAGE", y, invert=TRUE, value=TRUE);
>>>> z <- gsub(pattern, "\\1", y);
>>>> z <- unique(z);
>>>> z <- as.Date(z, "%d-%b-%Y");
>>>> z <- sort(z);
>>>> print(z);
>>>>>
>>>>> pattern <- ".*([0-9]{2}-[A-Za-z]{3}-[0-9]{4}) ([0-9]{2}:[0-9]{2}).*";
>>>>> y <- grep(pattern, x, value=TRUE);
>>>>> y <- grep("PACKAGE", y, invert=TRUE, value=TRUE);
>>>>> z <- gsub(pattern, "\\1", y);
>>>>> z <- unique(z);
>>>>> z <- as.Date(z, "%d-%b-%Y");
>>>>> z <- sort(z);
>>>>> print(z);
>>>>
>>>> [1] "2009-07-18" "2009-07-19" "2009-10-02" "2009-10-16" "2009-10-27"
>>>> [6] "2009-10-28" "2009-10-29" "2009-10-30" "2009-10-31" "2009-11-02"
>>>> [11] "2009-11-04" "2009-11-05" "2009-11-06" "2009-11-07" "2009-11-09"
>>>> [16] "2009-11-10" "2009-11-11" "2009-11-12" "2009-11-13" "2009-11-14"
>>>> [21] "2009-11-16" "2009-11-17" "2009-11-18" "2009-11-19" "2009-11-20"
>>>> [26] "2009-11-21" "2009-11-23" "2009-11-24" "2009-11-25" "2009-11-26"
>>>> [31] "2009-11-27" "2009-11-28" "2009-11-30" "2009-12-01" "2009-12-02"
>>>> [36] "2009-12-03" "2009-12-04" "2009-12-07" "2009-12-08" "2009-12-10"
>>>> [41] "2009-12-11" "2009-12-12" "2009-12-14" "2009-12-15" "2009-12-16"
>>>> [46] "2009-12-17" "2009-12-18" "2009-12-19" "2009-12-21" "2009-12-22"
>>>> [51] "2009-12-23" "2009-12-24" "2009-12-25" "2009-12-27" "2009-12-29"
>>>> [56] "2009-12-30" "2009-12-31" "2010-01-02" "2010-01-03" "2010-01-04"
>>>> [61] "2010-01-05" "2010-01-06" "2010-01-07"
>>>>>
>>>>> print(table(diff(z)));
>>>>
>>>> 1 ?2 ?3 11 14 75
>>>> 46 12 ?1 ?1 ?1 ?1
>>>>
>>>> /Henrik
>>>>
>>>> ______________________________________________
>>>> R-devel at r-project.org mailing list
>>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>>>
>>>
>>> --
>>> Brian D. Ripley, ? ? ? ? ? ? ? ? ?ripley at stats.ox.ac.uk
>>> Professor of Applied Statistics, ?http://www.stats.ox.ac.uk/~ripley/
>>> University of Oxford, ? ? ? ? ? ? Tel: ?+44 1865 272861 (self)
>>> 1 South Parks Road, ? ? ? ? ? ? ? ? ? ? +44 1865 272866 (PA)
>>> Oxford OX1 3TG, UK ? ? ? ? ? ? ? ?Fax: ?+44 1865 272595
>>>
>>
>> ______________________________________________
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>
>>
>
>


From ross at biostat.ucsf.edu  Tue Jan 19 20:19:30 2010
From: ross at biostat.ucsf.edu (Ross Boylan)
Date: Tue, 19 Jan 2010 11:19:30 -0800
Subject: [Rd] calling setGeneric() twice
In-Reply-To: <4B55F45C.4040408@userprimary.net>
References: <1263924060.10417.31.camel@corn.betterworld.us>
	<4B55F45C.4040408@userprimary.net>
Message-ID: <1263928770.10417.52.camel@corn.betterworld.us>

On Tue, 2010-01-19 at 10:05 -0800, Seth Falcon wrote:
> > This came up because of some issues with the sequencing of code in
> my
> > package.  Adding duplicate setGeneric's seems like the smallest, and
> > therefore safest, change if the duplication is not a problem.
> 
> I'm not sure of the answer to your question, but I think it is the
> wrong 
> question :-)
> 
> Perhaps you can provide more detail on why you are using multiple
> calls 
> to setGeneric.  That seems like a very odd thing to do.
My system is defined in a collection of .R files, most of which are
organized around classes.  So the typical file has a setClass(),
setGeneric()'s, and setMethod()'s.

If files that were read in later in the sequence extended an existing
generic, I omitted the setGeneric().

I had to resequence the order in which the files were read to avoid some
"undefined slot classes" warnings.  The resequencing created other
problems, including some cases in which I had a setMethod without a
previous setGeneric.

I have seen the advice to sequence the files so that class definitions,
then generic definitions, and finally function and method definitions
occur.  I am trying not to do that for two reasons.  First, I'm trying
to keep the changes I make small to avoid introducing errors.  Second, I
prefer to keep all the code related to a single class in a single file.

Some of the files were intended for free-standing use, and so it would
be useful if they could retain setGeneric()'s even if I also need an
earlier setGeneric to make the whole package work.

I am also working on a python script to extract all the generic function
defintions (that is, setGeneric()), just in case.

Ross Boylan


From seth at userprimary.net  Tue Jan 19 21:55:15 2010
From: seth at userprimary.net (Seth Falcon)
Date: Tue, 19 Jan 2010 12:55:15 -0800
Subject: [Rd] calling setGeneric() twice
In-Reply-To: <1263928770.10417.52.camel@corn.betterworld.us>
References: <1263924060.10417.31.camel@corn.betterworld.us>	
	<4B55F45C.4040408@userprimary.net>
	<1263928770.10417.52.camel@corn.betterworld.us>
Message-ID: <4B561C33.8080901@userprimary.net>

On 1/19/10 11:19 AM, Ross Boylan wrote:
> If files that were read in later in the sequence extended an existing
> generic, I omitted the setGeneric().
>
> I had to resequence the order in which the files were read to avoid some
> "undefined slot classes" warnings.  The resequencing created other
> problems, including some cases in which I had a setMethod without a
> previous setGeneric.
>
> I have seen the advice to sequence the files so that class definitions,
> then generic definitions, and finally function and method definitions
> occur.  I am trying not to do that for two reasons.  First, I'm trying
> to keep the changes I make small to avoid introducing errors.  Second, I
> prefer to keep all the code related to a single class in a single file.

If at first you do not get the advice you want, ask again! :-)

Perhaps you could do something like:

   if (!isGeneric("blah")) { setGeneric("blah", ...) }

I would expect setGeneric to create a new generic function and nuke/mask 
methods associated with the generic that it replaces.

> Some of the files were intended for free-standing use, and so it would
> be useful if they could retain setGeneric()'s even if I also need an
> earlier setGeneric to make the whole package work.
>
> I am also working on a python script to extract all the generic function
> defintions (that is, setGeneric()), just in case.

Perhaps another option is to group all of the generics together into a 
package and reuse that?  Unless you are using valueClass, I don't think 
you will need any class definitions.

+ seth


From ross at biostat.ucsf.edu  Tue Jan 19 22:26:42 2010
From: ross at biostat.ucsf.edu (Ross Boylan)
Date: Tue, 19 Jan 2010 13:26:42 -0800
Subject: [Rd] calling setGeneric() twice (don't; documentation comments)
In-Reply-To: <4B561C33.8080901@userprimary.net>
References: <1263924060.10417.31.camel@corn.betterworld.us>
	<4B55F45C.4040408@userprimary.net>
	<1263928770.10417.52.camel@corn.betterworld.us>
	<4B561C33.8080901@userprimary.net>
Message-ID: <1263936402.10417.66.camel@corn.betterworld.us>

On Tue, 2010-01-19 at 12:55 -0800, Seth Falcon wrote:
> I would expect setGeneric to create a new generic function and
> nuke/mask 
> methods associated with the generic that it replaces.
I tried a test in R 2.7.1, and that is the behavior.  I think it would
be worthwhile to document it in ?setGeneric.

Also, ?setGeneric advocates first defining a regular function (e.g.,
bar) and then doing a simple setGeneric("bar").  I think the advice for
package developers is different, so perhaps some changes there would be
a good idea too.

I thought I was defining setGeneric twice for a few functions, and thus
that it did work OK.  It turns out I have no duplicate definitions.

Here's the test:
> setClass("A", representation(z="ANY"))
[1] "A"
> setClass("B", representation(y="ANY"))
[1] "B"
> setGeneric("foo", function(x) standardGeneric("foo"))
[1] "foo"
> setMethod("foo", signature(x="A"), function(x) return("foo for A"))
[1] "foo"
> 
> a=new("A")
> b=new("B")
> foo(a)
[1] "foo for A"
> foo(b)
Error in function (classes, fdef, mtable)  : 
  unable to find an inherited method for function "foo", for signature "B"
> setGeneric("foo", function(x) standardGeneric("foo"))
[1] "foo"
> setMethod("foo", signature(x="B"), function(x) return("foo for B"))
[1] "foo"
> 
> setGeneric("foo", function(x) standardGeneric("foo"))
[1] "foo"
> setMethod("foo", signature(x="B"), function(x) return("foo for B"))
[1] "foo"
> foo(a)
# here's where the disappearance of the prior setMethod shows
Error in function (classes, fdef, mtable)  : 
  unable to find an inherited method for function "foo", for signature "A"
> foo(b)
[1] "foo for B"

So I guess I am going to pull the setGeneric's out.
Ross


From georgi.boshnakov at manchester.ac.uk  Wed Jan 20 11:35:12 2010
From: georgi.boshnakov at manchester.ac.uk (georgi.boshnakov at manchester.ac.uk)
Date: Wed, 20 Jan 2010 11:35:12 +0100 (CET)
Subject: [Rd] function curve() (PR#14191)
Message-ID: <20100120103512.46C5D282EF29@mail.pubhealth.ku.dk>

Full_Name: Georgi Boshnakov
Version: 2.10.1pat
OS: Windows XP
Submission from: (NULL) (130.88.123.205)


When calling programmatically function curve() from package:graphics I
experienced some trouble since it reports
            stop("'expr' must be a function or an expression containing 'x'")
even if expr is "expression". Naturally, the user message uses "expression"  in
its usual generic meaning but it is somewhat confusing that an object of type
"expression" is rejected.

The message is produced in the following piece in the source of function
curve()

    else {
        if (!(is.call(sexpr) && match("x", all.vars(sexpr), nomatch = 0L))) 
            stop("'expr' must be a function or an expression containing 'x'")
        expr <- sexpr
        if (is.null(ylab)) 
            ylab <- deparse(sexpr)
    }

The "if" statement only checks with is.call, and not with is.expression.
Maybe it is worth including  the check with is.expression, e.g. as in

    else {
        if (!((is.call(sexpr) || is.expression(sexpr)) &&
              match("x", all.vars(sexpr), nomatch = 0L)
              ))
           stop("'expr' must be a function or an expression containing 'x'")
        expr <- sexpr
        if (is.null(ylab)) 
            ylab <- deparse(sexpr)
    }


Example:

# use curve()
mycurveA <-
function(x,from=1,to=10){
    xloc <- parse(text=x)
    # call("mycurve0",expr=xloc,from=from,to=to)
    do.call("curve",list(expr=xloc,from=from,to=to))
}

# use curve modified as suggested above.
mycurveB <-
function(x,from=1,to=10){
    xloc <- parse(text=x)
    # call("mycurve0",expr=xloc,from=from,to=to)
    do.call("mycurve0",list(expr=xloc,from=from,to=to))
}

> mycurveA("x^2")
Error in curve(expr = expression(x^2), from = 1, to = 10) : 
  'expr' must be a function or an expression containing 'x'

> mycurveB("x^2")
#  (no error, plots the graph)


Best regards,
Georgi Boshnakov


From k.jewell at campden.co.uk  Wed Jan 20 13:44:39 2010
From: k.jewell at campden.co.uk (Keith Jewell)
Date: Wed, 20 Jan 2010 12:44:39 -0000
Subject: [Rd] Lightweight 'package' idea.
References: <d8ad40b50908210503xf67354fhfd5f3beede550df0@mail.gmail.com><971536df0908210532k1152976al404b94a230f9858e@mail.gmail.com>
	<hikudu$373$1@ger.gmane.org>
Message-ID: <hj6trp$meb$1@ger.gmane.org>

Following up on my own post of 13th,

Someone pointed out that I was MS Windows dependent. I've tried to correct 
that, but I'm in a Windows only environment so I can't check.

I've also tried to make a few other "improvements". The result is below.

No guarantees or warranties of any kind, but perhaps people will find it 
useful.

It now reasonably meets my needs so I'm not planning to do any more work  on 
it. I'm sure real R experts will be able to improve it..

Regards,

Keith J
============================
"Keith Jewell" <k.jewell at campden.co.uk> wrote in message 
news:hikudu$373$1 at ger.gmane.org...
> Going back a few months....
> I also thought "it would be nice if R had built into it some way of 
> running code in source packages possibly with degraded functionality to 
> ease development"
> so building on Barry Rowlingsons start I came up with this:
> ---------------------------
<snip previous version>


## R code starts <<<<<<<<<<<<<<<<<<<<<<<
require(tools, quietly=TRUE) # for Rd2HTML
require(tcltk, quietly=TRUE) # for tk_choose.dir and tk_choose.files

# load an unbuilt package
loadDir <- function(Root = tk_choose.dir(getwd())){
   Package = basename(Root)  # package name defined by directory name
   while(sum(search()==Package)>0) detach(pos=which(search()==Package)[1]) 
# if already attached, detach
   attach(NULL, name=Package) # attach empty environment
   assign(".Root.loadDir", Root, pos=Package) # insert Root into Package
   assign(".Package.loadDir", Package, pos=Package) # insert package name
# use the reloadDir function to populate the environment
   reloadDir(Package)
   invisible(Package)  # invisibly return .Package name
   }

# reload a previously loaded package (by default the most recently loaded)
reloadDir <- function(Package = .GlobalEnv) {
  Root <- get(".Root.loadDir", envir=as.environment(Package), 
mode="character") # retrieve Root
  Package <- get(".Package.loadDir", envir=as.environment(Package), 
mode="character") # and package name
  for (f in list.files(path=file.path(Root , "R"),  # path is 
.Root.loadDir/R/
    pattern=".R$",full.names=TRUE,recursive=TRUE,ignore.case=TRUE))      # 
file type = .R
    sys.source(f, envir=as.environment(Package))       # source all such 
files into .Package
    invisible(Package)} # invisibly return package

# display help from previously loaded package (by default most recently 
loaded)
help.loadDir <- function(subj="", Package=.GlobalEnv){    # default subject 
is blank, package is first found
   .Root <- get(".Root.loadDir", envir=as.environment(Package), 
mode="character") # get file path
   .Package <-  get(".Package.loadDir", envir=as.environment(Package), 
mode="character") # get package name
   if (substitute(subj)=="") subj = "*" else subj <- substitute(subj)  # get 
*subj*' as character
   hfile <- list.files(path=file.path(.Root, "man"), # path is .Root/man/
    pattern=paste(subj,"Rd$", sep="."),           # file = subj.Rd
    full.names=TRUE,recursive=TRUE,ignore.case=TRUE) # list of matching 
files
   if (length(hfile) != 1)       # if not exactly one file, choose one
    hfile <- tk_choose.files(file.path(.Root, "man", paste(subj,"Rd", 
sep=".")), multi=FALSE)
   if(hfile != "") {     # if exactly one file, open it
    if(length(grep(".Rd$", hfile, ignore.case=TRUE)) ==1) { # if it's an Rd 
file,
      outfile <- sub("Rd$", "html", hfile, ignore.case=TRUE)  # name of 
corresponding html
      out.mod <- file.info(outfile)[,"mtime"]  # if html absent or needs 
updating
      if (is.na(out.mod)||file.info(hfile)[,"mtime"] > out.mod) 
tools::Rd2HTML(hfile, outfile, .Package) # do it
      hfile <- outfile} # point to html
    hfile <- file.path(dirname(hfile), basename(hfile)) # needed to handle 
"//server" syntax on Windows
    shell.exec(shQuote(hfile))} # use operating system to open file of any 
type
   invisible(hfile)}    # invisibly return displayed file name
## R code ends >>>>>>>>>>>>>>>>>>>>>>>>>>

% File loadDir.Rd begins <<<<<<<<<<<<<<<<<<<<<
\name{loadDir}
\title{Load an unbuilt package}
\description{Loads code from a packages \file{\\R} subdirectory}
\usage{loadDir(Root = tk_choose.dir(getwd())}
\arguments{
 \item{Root}{character, scalar. The package directory (containing 
subdirectories \file{\\R} and \file{\\man}). The package name

(\code{.Package.loadDir}) is taken as \code{basename(Root)}.}
}
\details{Attaches an environment at the second position on the search list 
with name \code{basename(Root)} (after detaching any existing

entries with that name). Into that environment it sources all \file{.R} 
files in the \file{\\R} subdirectory, searching recursively.

In that environment it also places \code{.Root.loadDir <- Root} and 
\code{.Package.loadDir <- basename(Root)} so that

\code{get(".Root.loadDir", pos=Package_name_as_character)} can be used to 
retrieve the original file path. }
\value{\code{invisible()}; scalar, character. Name of loaded package}
\references{
%% ~put references to the literature/web site here ~
}
\author{
%%  ~~who you are~~
}
\note{
%%  ~~further notes~~
}

%% ~Make other sections like Warning with \section{Warning }{....} ~

\seealso{
%% ~~objects to See Also as \code{\link{help}}, ~~~
}
\examples{
\dontrun{
 loadDir() navigating to '\\\\Server02\\stats\\R\\CBRIutils' adds the 
package CBRIutils}}
% Add one or more standard keywords, see file 'KEYWORDS' in the
% R documentation directory.
\keyword{ ~kwd1 }
\keyword{ ~kwd2 }% __ONLY ONE__ keyword per line
% File loadDir.Rd ends >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

% File reloadDir.Rd begins <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
\name{reloadDir}
\title{Refresh an unbuilt package previously loaded by loadDir}
\description{Re-load code from a packages \file{\\R} subdirectory previously 
loaded by loadDir}
\usage{reloadDir(Package = .GlobalEnv)}
\arguments{\item{Package}{package name to be reloaded specified as either 
\itemize{
   \item{character, scalar. Name of entry on search list}
   \item{environment}}}}
\details{The environment specified by \code{Package} is searched for 
character variables \code{.Root.loadDir} and \code{.Package.loadDir}. Then 
all .R files in \file{.Root.loadDir\\R} (searching recursively) are sourced 
into \code{as.environment(.Package.loadDir)}

By default (\code{Package = .GlobalEnv}) the global environment is searched 
and then the search list. This means that if \code{Package} is not specified 
the package most recently loaded by loadDir is reloaded}
\value{\code{invisible()}; scalar, character. Name of reloaded package}
\references{
%% ~put references to the literature/web site here ~
}
\author{
%%  ~~who you are~~
}
\note{
%%  ~~further notes~~
}

%% ~Make other sections like Warning with \section{Warning }{....} ~

\seealso{
%% ~~objects to See Also as \code{\link{help}}, ~~~
}
\examples{
\dontrun{
 loadDir() navigating to '\\\\Server02\\stats\\R\\CBRIutils' adds the 
package CBRIutils
   then
 reload("CBRIutils") or just reload() re-sources all '\\R\\*.R' files in 
package CBRIutils. }}
% Add one or more standard keywords, see file 'KEYWORDS' in the
% R documentation directory.
\keyword{ ~kwd1 }
\keyword{ ~kwd2 }% __ONLY ONE__ keyword per line

% File reloadDir.Rd ends >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

%File help.loadDir.Rd begins <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
\name{help.loadDir}
\title{Show help from an unbuilt package loaded by loadDir}
\description{ Gives access to help files in the packages \file{\\man} 
subdirectory, converting \file{.Rd} files to \file{.html} as appropriate.}
\usage{help.loadDir(subj="", Package=.GlobalEnv)}
\arguments{
  \item{subj}{character or name, scalar. File name to be searched for in 
\file{\\man} subdirectory}
  \item{.Package}{package name specified as either \itemize{
   \item{character, scalar. Name of entry on search list}
   \item{environment}}}}
\details{The environment specified by \code{Package} is searched for 
character variables \code{.Root.loadDir} and \code{.Package.loadDir}; these 
provide the context for the search for help files. By default (\code{Package 
= .GlobalEnv}) the global environment is searched and then the search list. 
This means that if \code{Package} is not specified the package most recently 
loaded by loadDir is searched.

The packages \file{\\man} subdirectory is recursively searched for files 
named \code{subj}, initially searching for files of type \file{.Rd}.

If there is not exactly one such file it opens a \code{tk_file.choose} 
dialog to choose a single file of any type.

If the single specified file is of type \file{.Rd} then the target file is a 
correspondingly named \file{.html} file with a later modification date. If 
this target file does not exist (no such \file{.html} file, or earlier 
modification) it is produced from the \file{.Rd} file using 
\code{tools::Rd2HTML}.

The target file is opened by the operating system's file associations.}
\value{ \code{invisible}, scalar, character; file opened (the \file{.html} 
file if a \file{.Rd} file was chosen)}
\references{
%% ~put references to the literature/web site here ~
}
\author{
%%  ~~who you are~~
}
\note{
%%  ~~further notes~~
}

%% ~Make other sections like Warning with \section{Warning }{....} ~

\seealso{
%% ~~objects to See Also as \code{\link{help}}, ~~~
}
\examples{
\dontrun{
 loadDir() navigating to '\\\\Server02\\stats\\R\\CBRIutils' adds the 
package CBRIutils
   then
 help.loadDir(item, "CBRIutils") or just help.loadDir(item)
    if required, converts '\\man\\item.Rd' to '\\man\\item.html'
    opens '\\man\\item.html' the default web browser.}}
% Add one or more standard keywords, see file 'KEYWORDS' in the
% R documentation directory.
\keyword{ ~kwd1 }
\keyword{ ~kwd2 }% __ONLY ONE__ keyword per line

%File help.loadDir.Rd ends 
 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>


From h.wickham at gmail.com  Wed Jan 20 15:23:03 2010
From: h.wickham at gmail.com (hadley wickham)
Date: Wed, 20 Jan 2010 08:23:03 -0600
Subject: [Rd] Lightweight 'package' idea.
In-Reply-To: <d8ad40b50908210503xf67354fhfd5f3beede550df0@mail.gmail.com>
References: <d8ad40b50908210503xf67354fhfd5f3beede550df0@mail.gmail.com>
Message-ID: <f8e6ff051001200623x3a909217y5f41e54498b9f3d2@mail.gmail.com>

On Fri, Aug 21, 2009 at 6:03 AM, Barry Rowlingson
<b.rowlingson at lancaster.ac.uk> wrote:
> I'm often wanting to develop functions whilst manipulating data. But I
> don't want to end up with a .RData full of functions and data. It
> might be that I have functions that are re-usable but not worth
> sticking in a package.
>
> ?So I've tried to come up with a paradigm for function development
> that more closely follows the way Matlab and Python do it (partly
> inspired by a confused Matlab convert over on R-help).
>
> ?My requirements were thus:
>
> ?* .R files as the master source for R functions
> ?* Don't see the functions in ls()
> ?* After editing R, make it easy to update the definitions visible to
> R (unlike rebuilding and reloading a package).
>
> ?So I wrote these two in a few mins:
>
> loadDir <- function(dir){
> ?e = attach(NULL,name=dir)
> ?assign("__path__",dir,envir=e)
> ?reloadDir(e)
> ?e
> }
>
> reloadDir <- function(e){
> ?path = get("__path__",e)
> ?files = list.files(path,".R$",full.names=TRUE,recursive=TRUE,ignore.case=TRUE)
> ?for(f in files){
> ? ?sys.source(f,envir=e)
> ?}
> }

Rather than using __path__, why not just use chdir = TRUE in
sys.source() and rely on the usual R working directory semantics?

> ?Sourcing everything on any change seems a bit wasteful, but until R
> objects have timestamps I can't think of a better way. Hmm, maybe my
> environment could keep a __timestamp__ object... Okay, this is getting
> less simple now...

That's what I do for all of my packages during development.  You
really need a huge amount of code before it starts to take a
noticeable amount of time.

Hadley

-- 
http://had.co.nz/


From asr at ufl.edu  Wed Jan 20 20:11:50 2010
From: asr at ufl.edu (Allen S. Rout)
Date: Wed, 20 Jan 2010 14:11:50 -0500
Subject: [Rd] optional package dependency (enhances)
References: <1263535210.26202.16.camel@corn.betterworld.us>
	<e71a39ea1001150248v1d833fc0ma2e63efdacc796a4@mail.gmail.com>
	<1263579471.26202.36.camel@corn.betterworld.us>
Message-ID: <44wpfmy08sia1.fsf@crepe.osg.ufl.edu>

Ross Boylan <ross at biostat.ucsf.edu> writes:

> On Fri, 2010-01-15 at 10:48 +0000, Benilton Carvalho wrote:
>> How about using:
>> 
>> Enhances: Rmpi


This unique local bestiary of dependencies is quite inconvenient for
anyone trying to connect R with any other system of package
management.  Below, I've included the rather byzantine scheme I've
suggested in another forum for connecting R packages with RPM
packages.  It made my head hurt to write it.


I think that this spectrum of dependencies substantially complicates
the work of anyone who wants to make R easily accessible to
non-systems-administrator users.  I think the R community wants this
accessibility work to be easy, not hard.

IMO, there is a fairly small set of changes in R package ideology
which could make a big improvement:

1) Everything necessary to load a library should be Required. (I
   naively think this means Imports should also be Required, but I may
   be misunderstanding some nuance of Imports)

2) Everything necessary to complete a CHECK should be Required. 


That's it.  In this way you now have only two classes of requirements:

- 'Requires', which has essentially the same meaning as it does in
   other dependency graph worlds.

- Other stuff which R authors care about, but the systems
  administrator need not understand.



----

+ The R community is much less sysadmin-y than other
  language communities.  Several positions about correctness which
  lots of admins take as Truth (i.e. dependency cycle == BAD) they
  find to be more of an aesthetic call.  This is reasonable.

+ Different repositories in the R community have independant lives and
  attitudes.  There is modest competition and grumbling between
  maintainers associated with different repos. 

+ Package dependencies cross repo boundaries; sticking with the
  'Better' repositories just won't work, and discussion of these
  variations tends to make R folks testy.

 conclusion: The goal of evolving the R packages into a DAG is a
 non-starter.

+ There are four classes of dependency in R-package land: Requires,
  Imports, Suggests, and Enhances.

+ Requires and Imports are required to load the package. [1]

+ Suggests may be required to fully CMD CHECK the package [1]

+ The need for suggests at CMD CHECK can be deactivated by build
  config file. [2]

+ Many of the dependency cycles can be avoided if we ignore Suggests
  as an RPM dependency. 

Now, on to opinion: 

+ We would like all official packages to have passed a full R CMD CHECK 

+ We would like an absolute minimum of manual special case handling.
  It may not be possible to make that amount zero. 

So: Here's my suggested procedure for building any single package,
gangked from a message I sent to R-core:

1) Express binary package dependencies according to Depends and Imports.
   I'll call this the 'narrow dependency graph'. 

2) As part of the binary package build process, run CHECK
   with R_CHECK_FORCE_SUGGESTS = false. 

I'll pull nomenclature out of my ear and call these "built" but not
"checked".

3) Build all binary packages which are downstream according to all of
   Depends, Imports, Suggests, and Extends.  I'll call this the 'broad
   dependency graph'.

4) Install all the packages in the broad dependency graph.

5) for each package in the broad graph, run CHECK with
   R_CHECK_FORCE_SUGGESTS=true.

Then the affected packages are "checked".  Perhaps this can be noted
with a signature.

.... Whew!


----


- Allen S. Rout


From ligges at statistik.tu-dortmund.de  Wed Jan 20 20:23:51 2010
From: ligges at statistik.tu-dortmund.de (Uwe Ligges)
Date: Wed, 20 Jan 2010 20:23:51 +0100
Subject: [Rd] optional package dependency (enhances)
In-Reply-To: <44wpfmy08sia1.fsf@crepe.osg.ufl.edu>
References: <1263535210.26202.16.camel@corn.betterworld.us>	<e71a39ea1001150248v1d833fc0ma2e63efdacc796a4@mail.gmail.com>	<1263579471.26202.36.camel@corn.betterworld.us>
	<44wpfmy08sia1.fsf@crepe.osg.ufl.edu>
Message-ID: <4B575847.1000507@statistik.tu-dortmund.de>



On 20.01.2010 20:11, Allen S. Rout wrote:
> Ross Boylan<ross at biostat.ucsf.edu>  writes:
>
>> On Fri, 2010-01-15 at 10:48 +0000, Benilton Carvalho wrote:
>>> How about using:
>>>
>>> Enhances: Rmpi
>
>
> This unique local bestiary of dependencies is quite inconvenient for
> anyone trying to connect R with any other system of package
> management.  Below, I've included the rather byzantine scheme I've
> suggested in another forum for connecting R packages with RPM
> packages.  It made my head hurt to write it.
>
>
> I think that this spectrum of dependencies substantially complicates
> the work of anyone who wants to make R easily accessible to
> non-systems-administrator users.  I think the R community wants this
> accessibility work to be easy, not hard.
>
> IMO, there is a fairly small set of changes in R package ideology
> which could make a big improvement:
>
> 1) Everything necessary to load a library should be Required. (I
>     naively think this means Imports should also be Required, but I may
>     be misunderstanding some nuance of Imports)
>
> 2) Everything necessary to complete a CHECK should be Required.
>
>
> That's it.  In this way you now have only two classes of requirements:
>
> - 'Requires', which has essentially the same meaning as it does in
>     other dependency graph worlds.
>
> - Other stuff which R authors care about, but the systems
>    administrator need not understand.
>
>
>
> ----
>
> + The R community is much less sysadmin-y than other
>    language communities.  Several positions about correctness which
>    lots of admins take as Truth (i.e. dependency cycle == BAD) they
>    find to be more of an aesthetic call.  This is reasonable.
>
> + Different repositories in the R community have independant lives and
>    attitudes.  There is modest competition and grumbling between
>    maintainers associated with different repos.
>
> + Package dependencies cross repo boundaries; sticking with the
>    'Better' repositories just won't work, and discussion of these
>    variations tends to make R folks testy.
>
>   conclusion: The goal of evolving the R packages into a DAG is a
>   non-starter.
>
> + There are four classes of dependency in R-package land: Requires,
>    Imports, Suggests, and Enhances.


1. You probably mean "Depends" rather than "Requires".
2. You forgot "LinkingTo"



> + Requires and Imports are required to load the package. [1]
>
> + Suggests may be required to fully CMD CHECK the package [1]
>
> + The need for suggests at CMD CHECK can be deactivated by build
>    config file. [2]
>
> + Many of the dependency cycles can be avoided if we ignore Suggests
>    as an RPM dependency.
>
> Now, on to opinion:
>
> + We would like all official packages to have passed a full R CMD CHECK
>
> + We would like an absolute minimum of manual special case handling.
>    It may not be possible to make that amount zero.
>
> So: Here's my suggested procedure for building any single package,
> gangked from a message I sent to R-core:
>
> 1) Express binary package dependencies according to Depends and Imports.
>     I'll call this the 'narrow dependency graph'.
>
> 2) As part of the binary package build process, run CHECK
>     with R_CHECK_FORCE_SUGGESTS = false.
>
> I'll pull nomenclature out of my ear and call these "built" but not
> "checked".
>
> 3) Build all binary packages which are downstream according to all of
>     Depends, Imports, Suggests, and Extends.  I'll call this the 'broad
>     dependency graph'.
>
> 4) Install all the packages in the broad dependency graph.
>
> 5) for each package in the broad graph, run CHECK with
>     R_CHECK_FORCE_SUGGESTS=true.
>
> Then the affected packages are "checked".  Perhaps this can be noted
> with a signature.


All binary packages on CRAN are checked, we do not need a signature.

Recursive reverse dependencies are also checked after updates. Hence you 
do not need to worry at all. Be sure we did most of the work already.

Uwe Ligges



> .... Whew!
>
>
> ----
>
>
> - Allen S. Rout
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From pauljohn32 at gmail.com  Wed Jan 20 20:31:07 2010
From: pauljohn32 at gmail.com (Paul Johnson)
Date: Wed, 20 Jan 2010 13:31:07 -0600
Subject: [Rd] R CMD INSTALL configure.args and CC customization
Message-ID: <13e802631001201131k43a66f2evf210214b59360deb@mail.gmail.com>

Hi, everybody.

I hope the new year is treating you well.

In a Rocks Cluster Linux system (that's Centos 5.2 based), I have
built R-2.10 and it runs well.

While fiddling with MPI libraries and R packages, I've noticed a few
little wrinkles.

This comes as no surprise to the veteran R programmers, but let me
share to the new guys the following gem:

There is a difference between . and -

Simple, and yet so vital!

install.packages inside R takes a period between "configure" and
"args", as in "configure.args=", while in the shell, the same option
specified to R CMD INSTALL wants a dash, as in "--configure-args=".
The "period" versus the "hyphen" was  killing me all morning!

When building Rmpi, I had to specify configure options to let R know
which MPI library to use. I *tried* to avoid that by forcing the
compiler to be "mpicc", not "gcc".   I believe that if one uses mpicc,
then the compiler really is gcc, but it is initiated with the INC and
LIB dirs set so that the configure  can find what it needs. But gcc
seems to be deeply glued to R installation of packages.

I find various posts in the r-help list in which people claim this should work:

CC=mpicc R CMD INSTALL ...

but it doesn't make a difference for me. The compiler that gets used
is gcc, no matter how many different ways I try to say it should be
mpicc:


$ CC=mpicc R CMD INSTALL
--configure-args=--with-mpi=/usr/lib64/openmpi/1.2.7-gcc
--configure-vars=CC=mpicc Rmpi_0.5-8.tar.gz
Password:
* installing to library '/share/apps/lib/R/site-library'
* installing *source* package 'Rmpi' ...
checking for gcc... gcc -m64 -std=gnu99
checking for C compiler default output file name... a.out
checking whether the C compiler works... yes
checking whether we are cross compiling... no
checking for suffix of executables...
checking for suffix of object files... o
checking whether we are using the GNU C compiler... yes
checking whether gcc -m64 -std=gnu99 accepts -g... yes
checking for gcc -m64 -std=gnu99 option to accept ISO C89... none needed
Trying to find mpi.h ...
Found in /usr/lib64/openmpi/1.2.7-gcc/include
Trying to find libmpi.so or libmpich.a ...
Found libmpi in /usr/lib64/openmpi/1.2.7-gcc/lib
checking for openpty in -lutil... yes
checking for main in -lpthread... yes
configure: creating ./config.status
config.status: creating src/Makevars
** libs
gcc -m64 -std=gnu99 -I/usr/include/R -DPACKAGE_NAME=\"\"
-DPACKAGE_TARNAME=\"\" -DPACKAGE_VERSION=\"\" -DPACKAGE_STRING=\"\"
-DPACKAGE_BUGREPORT=\"\" -I/usr/lib64/openmpi/1.2.7-gcc/include
-DMPI2 -DOPENMPI -I/usr/local/include    -fpic  -O2 -g -pipe -Wall
-Wp,-D_FORTIFY_SOURCE=2 -fexceptions -fstack-protector
--param=ssp-buffer-size=4 -m64 -mtune=generic -c RegQuery.c -o
RegQuery.o
gcc -m64 -std=gnu99 -I/usr/include/R -DPACKAGE_NAME=\"\"
-DPACKAGE_TARNAME=\"\" -DPACKAGE_VERSION=\"\" -DPACKAGE_STRING=\"\"
-DPACKAGE_BUGREPORT=\"\" -I/usr/lib64/openmpi/1.2.7-gcc/include
-DMPI2 -DOPENMPI -I/usr/local/include    -fpic  -O2 -g -pipe -Wall
-Wp,-D_FORTIFY_SOURCE=2 -fexceptions -fstack-protector
--param=ssp-buffer-size=4 -m64 -mtune=generic -c Rmpi.c -o Rmpi.o
gcc -m64 -std=gnu99 -I/usr/include/R -DPACKAGE_NAME=\"\"
-DPACKAGE_TARNAME=\"\" -DPACKAGE_VERSION=\"\" -DPACKAGE_STRING=\"\"
-DPACKAGE_BUGREPORT=\"\" -I/usr/lib64/openmpi/1.2.7-gcc/include
-DMPI2 -DOPENMPI -I/usr/local/include    -fpic  -O2 -g -pipe -Wall
-Wp,-D_FORTIFY_SOURCE=2 -fexceptions -fstack-protector
--param=ssp-buffer-size=4 -m64 -mtune=generic -c conversion.c -o
conversion.o
gcc -m64 -std=gnu99 -I/usr/include/R -DPACKAGE_NAME=\"\"
-DPACKAGE_TARNAME=\"\" -DPACKAGE_VERSION=\"\" -DPACKAGE_STRING=\"\"
-DPACKAGE_BUGREPORT=\"\" -I/usr/lib64/openmpi/1.2.7-gcc/include
-DMPI2 -DOPENMPI -I/usr/local/include    -fpic  -O2 -g -pipe -Wall
-Wp,-D_FORTIFY_SOURCE=2 -fexceptions -fstack-protector
--param=ssp-buffer-size=4 -m64 -mtune=generic -c internal.c -o
internal.o
gcc -m64 -std=gnu99 -shared -L/usr/local/lib64 -o Rmpi.so RegQuery.o
Rmpi.o conversion.o internal.o -L/usr/lib64/openmpi/1.2.7-gcc/lib
-lmpi -lutil -lpthread -L/usr/lib64/R/lib -lR
** R
** demo
** inst
** preparing package for lazy loading
** help
*** installing help indices
** building package indices ...
* DONE (Rmpi)
======================

The same effect (or lack thereof) can be had with configure.vars in
install.packages:

> install.packages("Rmpi", configure.args="--with-mpi=/usr/lib64/openmpi/1.2.7-gcc", configure.vars="CC=mpicc")
Warning in install.packages("Rmpi", configure.args =
"--with-mpi=/usr/lib64/openmpi/1.2.7-gcc",  :
  argument 'lib' is missing: using '/share/apps/lib/R/site-library'
--- Please select a CRAN mirror for use in this session ---
Loading Tcl/Tk interface ... done
trying URL 'http://cran.mirrors.hoobly.com/src/contrib/Rmpi_0.5-8.tar.gz'
Content type 'application/x-gzip' length 87528 bytes (85 Kb)
opened URL
==================================================
downloaded 85 Kb

* installing *source* package 'Rmpi' ...
checking for gcc... gcc -m64 -std=gnu99
checking for C compiler default output file name... a.out
checking whether the C compiler works... yes
checking whether we are cross compiling... no
checking for suffix of executables...
checking for suffix of object files... o
checking whether we are using the GNU C compiler... yes
checking whether gcc -m64 -std=gnu99 accepts -g... yes
checking for gcc -m64 -std=gnu99 option to accept ISO C89... none needed
Trying to find mpi.h ...
Found in /usr/lib64/openmpi/1.2.7-gcc/include
Trying to find libmpi.so or libmpich.a ...
Found libmpi in /usr/lib64/openmpi/1.2.7-gcc/lib
checking for openpty in -lutil... yes
checking for main in -lpthread... yes
configure: creating ./config.status
config.status: creating src/Makevars
** libs
gcc -m64 -std=gnu99 -I/usr/include/R -DPACKAGE_NAME=\"\"
-DPACKAGE_TARNAME=\"\" -DPACKAGE_VERSION=\"\" -DPACKAGE_STRING=\"\"
-DPACKAGE_BUGREPORT=\"\" -I/usr/lib64/openmpi/1.2.7-gcc/include
-DMPI2 -DOPENMPI -I/usr/local/include    -fpic  -O2 -g -pipe -Wall
-Wp,-D_FORTIFY_SOURCE=2 -fexceptions -fstack-protector
--param=ssp-buffer-size=4 -m64 -mtune=generic -c RegQuery.c -o
RegQuery.o
gcc -m64 -std=gnu99 -I/usr/include/R -DPACKAGE_NAME=\"\"
-DPACKAGE_TARNAME=\"\" -DPACKAGE_VERSION=\"\" -DPACKAGE_STRING=\"\"
-DPACKAGE_BUGREPORT=\"\" -I/usr/lib64/openmpi/1.2.7-gcc/include
-DMPI2 -DOPENMPI -I/usr/local/include    -fpic  -O2 -g -pipe -Wall
-Wp,-D_FORTIFY_SOURCE=2 -fexceptions -fstack-protector
--param=ssp-buffer-size=4 -m64 -mtune=generic -c Rmpi.c -o Rmpi.o
gcc -m64 -std=gnu99 -I/usr/include/R -DPACKAGE_NAME=\"\"
-DPACKAGE_TARNAME=\"\" -DPACKAGE_VERSION=\"\" -DPACKAGE_STRING=\"\"
-DPACKAGE_BUGREPORT=\"\" -I/usr/lib64/openmpi/1.2.7-gcc/include
-DMPI2 -DOPENMPI -I/usr/local/include    -fpic  -O2 -g -pipe -Wall
-Wp,-D_FORTIFY_SOURCE=2 -fexceptions -fstack-protector
--param=ssp-buffer-size=4 -m64 -mtune=generic -c conversion.c -o
conversion.o
gcc -m64 -std=gnu99 -I/usr/include/R -DPACKAGE_NAME=\"\"
-DPACKAGE_TARNAME=\"\" -DPACKAGE_VERSION=\"\" -DPACKAGE_STRING=\"\"
-DPACKAGE_BUGREPORT=\"\" -I/usr/lib64/openmpi/1.2.7-gcc/include
-DMPI2 -DOPENMPI -I/usr/local/include    -fpic  -O2 -g -pipe -Wall
-Wp,-D_FORTIFY_SOURCE=2 -fexceptions -fstack-protector
--param=ssp-buffer-size=4 -m64 -mtune=generic -c internal.c -o
internal.o
gcc -m64 -std=gnu99 -shared -L/usr/local/lib64 -o Rmpi.so RegQuery.o
Rmpi.o conversion.o internal.o -L/usr/lib64/openmpi/1.2.7-gcc/lib
-lmpi -lutil -lpthread -L/usr/lib64/R/lib -lR
** R
** demo
** inst
** preparing package for lazy loading
** help
*** installing help indices
** building package indices ...
* DONE (Rmpi)


-- 
Paul E. Johnson
Professor, Political Science
1541 Lilac Lane, Room 504
University of Kansas


From edd at debian.org  Wed Jan 20 20:41:53 2010
From: edd at debian.org (Dirk Eddelbuettel)
Date: Wed, 20 Jan 2010 13:41:53 -0600
Subject: [Rd] optional package dependency (enhances)
In-Reply-To: <44wpfmy08sia1.fsf@crepe.osg.ufl.edu>
References: <1263535210.26202.16.camel@corn.betterworld.us>
	<e71a39ea1001150248v1d833fc0ma2e63efdacc796a4@mail.gmail.com>
	<1263579471.26202.36.camel@corn.betterworld.us>
	<44wpfmy08sia1.fsf@crepe.osg.ufl.edu>
Message-ID: <19287.23681.547953.171101@ron.nulle.part>


A working system exists at 

	http://debian.cran.r-project.org 

with automated builds (ie automated resolutions of both built-time and
run-time dependencies) of over 2000 packages for both 64-bit Linux ("amd64")
and 32-bit Linux ("i386") of the Debian 'testing' distribution.  Charles and
I are not very proficient at publicising this but we fairly decent montly
downloads for something that is still 'beta' (in the Google sense).

The operating system will always have more local knowledge so here we are
trying to fold R's knowledge of its 2000 packages into the larger ecosystem
of the given Linux distributions.  Works for us, but it is a '2.0' approach
as an earlier one failed to scale.  I have made UseR presentations on each
one of these approaches.

Dirk

-- 
Three out of two people have difficulties with fractions.


From asr at ufl.edu  Wed Jan 20 21:07:28 2010
From: asr at ufl.edu (Allen S. Rout)
Date: Wed, 20 Jan 2010 15:07:28 -0500
Subject: [Rd] optional package dependency (enhances)
In-Reply-To: (Your message of Wed, 20 Jan 2010 20:23:51 +0100.)
	<4B575847.1000507@statistik.tu-dortmund.de> 
Message-ID: <201001202007.o0KK7Saw1728656@nersp.osg.ufl.edu>



tl;dr: Repackaging in native formats dramatically improves user access to packages.


>> On Wed, 20 Jan 2010 20:23:51 +0100, Uwe Ligges <ligges at statistik.tu-dortmund.de> said:

> 1. You probably mean "Depends" rather than "Requires".
> 2. You forgot "LinkingTo"

Heh, thanks!  I'll add them.

> All binary packages on CRAN are checked, we do not need a signature.

Since you don't generate e.g. RPMs, every packaging system is forced
to re-do this work.  I was talking about that signature, the one on
the RPM.

> Recursive reverse dependencies are also checked after updates. Hence
> you do not need to worry at all. Be sure we did most of the work
> already.


Some of us care a lot about automatically understanding the installed
packages on a system.  This lets us do things like cleanly and
consistently produce a new one "like that".  This goal is very
important to many sysadmin types.

It is intractible to ask, e.g. R, Perl, Python, Ruby, Mozilla,
etc... essentially every application that came up with a plugin or
module system, "Hey, what do -you- think is installed".  It is also
extra overhead to expect each system administrator to go learn CPAN,
jpp, ppi, gems, CRAN, etc... it adds myriad extra steps to the
analysis and configuration of machines.

On the other hand, many R developers appear to live in a world of
machines which are unique flowers, and they expect that other machines
with which they interact will be nurtured in the same individual way.
This is not "bad", it is just "different"; but the architectural
decisions which are completely reasonable in a world of individual
gardens place restrictions on those who would like to plant 100 or
1000 machines, all identical.


If we on the borders connecting R to [distribution in question] can
easily repackage R software, then the utility of R to the world will
increase.  I think this would be a good thing.


I understand that it's not a big priority for that fraction of R-devel
who lives amongst their gardens, and I'm not offhand expecting some
mass conversion here. :) But I wanted to make the case.  



- Allen S. Rout


From khansen at stat.berkeley.edu  Thu Jan 21 05:42:43 2010
From: khansen at stat.berkeley.edu (Kasper Daniel Hansen)
Date: Wed, 20 Jan 2010 23:42:43 -0500
Subject: [Rd] showMethods
Message-ID: <E0D26A46-C1D5-4F5A-A81E-5AE212BE3F55@stat.berkeley.edu>

There seems to be some unanticipated things happening with showMethods (as far as I can see, it is caused by getGenerics), for packages that have namespaces and has unexported methods.

Example:
library(Matrix)
showMethods(class = "dsyMatrix")

output (with a fair amount removed):

Function "isDiagonal":
 <not a generic function>

Function "isTriangular":
 <not a generic function>

These two functions are S4 methods which are not exported by Matrix.  None of them seems to have a direct method for "dsyMatrix".  Further experimentation (that I cannot recreate with the Recommended packages alone) show that even methods defined (and not exported) in packages that are imported by some other package will show up in the output above.

I would not expect this particular output, I would expect that the two functions above do not show up.  It is unclear to me what I would have expected if (say) isDiagonal actually had a method for dsyMatrix but it was not exported (I would however _prefer_ to be able to see this).

This has some impact for how I (want to) use showMethods to explore functionality in new packages, especially packages that has a huge list of dependencies.  

Kasper

From tplate at acm.org  Thu Jan 21 19:58:35 2010
From: tplate at acm.org (Tony Plate)
Date: Thu, 21 Jan 2010 11:58:35 -0700
Subject: [Rd] function curve() (PR#14191)
In-Reply-To: <20100120103512.46C5D282EF29@mail.pubhealth.ku.dk>
References: <20100120103512.46C5D282EF29@mail.pubhealth.ku.dk>
Message-ID: <4B58A3DB.7010006@acm.org>

You may have figured this out already, but you can get a "call" object 
from parse() by extracting its first element, as in

mycurveC <-
function(x,from=1,to=10){
    xloc <- parse(text=x)[[1]]
    do.call("curve",list(expr=xloc,from=from,to=to))
}
mycurveC("(x-4) ** 2")

This doesn't address the confusion you note, but it is an easy way of 
getting your code to work without needing any functions to be redefined.

-- Tony Plate

georgi.boshnakov at manchester.ac.uk wrote:
> Full_Name: Georgi Boshnakov
> Version: 2.10.1pat
> OS: Windows XP
> Submission from: (NULL) (130.88.123.205)
>
>
> When calling programmatically function curve() from package:graphics I
> experienced some trouble since it reports
>             stop("'expr' must be a function or an expression containing 'x'")
> even if expr is "expression". Naturally, the user message uses "expression"  in
> its usual generic meaning but it is somewhat confusing that an object of type
> "expression" is rejected.
>
> The message is produced in the following piece in the source of function
> curve()
>
>     else {
>         if (!(is.call(sexpr) && match("x", all.vars(sexpr), nomatch = 0L))) 
>             stop("'expr' must be a function or an expression containing 'x'")
>         expr <- sexpr
>         if (is.null(ylab)) 
>             ylab <- deparse(sexpr)
>     }
>
> The "if" statement only checks with is.call, and not with is.expression.
> Maybe it is worth including  the check with is.expression, e.g. as in
>
>     else {
>         if (!((is.call(sexpr) || is.expression(sexpr)) &&
>               match("x", all.vars(sexpr), nomatch = 0L)
>               ))
>            stop("'expr' must be a function or an expression containing 'x'")
>         expr <- sexpr
>         if (is.null(ylab)) 
>             ylab <- deparse(sexpr)
>     }
>
>
> Example:
>
> # use curve()
> mycurveA <-
> function(x,from=1,to=10){
>     xloc <- parse(text=x)
>     # call("mycurve0",expr=xloc,from=from,to=to)
>     do.call("curve",list(expr=xloc,from=from,to=to))
> }
>
> # use curve modified as suggested above.
> mycurveB <-
> function(x,from=1,to=10){
>     xloc <- parse(text=x)
>     # call("mycurve0",expr=xloc,from=from,to=to)
>     do.call("mycurve0",list(expr=xloc,from=from,to=to))
> }
>
>   
>> mycurveA("x^2")
>>     
> Error in curve(expr = expression(x^2), from = 1, to = 10) : 
>   'expr' must be a function or an expression containing 'x'
>
>   
>> mycurveB("x^2")
>>     
> #  (no error, plots the graph)
>
>
> Best regards,
> Georgi Boshnakov
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>
>


From ripley at stats.ox.ac.uk  Thu Jan 21 20:01:11 2010
From: ripley at stats.ox.ac.uk (Prof Brian Ripley)
Date: Thu, 21 Jan 2010 19:01:11 +0000 (GMT)
Subject: [Rd] Model frame when LHS is cbind (PR#14189)
In-Reply-To: <20100119012013.79FF7282EF56@mail.pubhealth.ku.dk>
References: <20100119012013.79FF7282EF56@mail.pubhealth.ku.dk>
Message-ID: <alpine.LFD.2.00.1001211724220.31382@gannet.stats.ox.ac.uk>

A few points.

0) This seems a Wishlist item, but it does not say so (see the section 
on BUGS in the FAQ).

1) A formula does not need to have an lhs, and it is an assumption 
that the response is the first element of 'variables' (an assumption 
not made a couple of lines later when 'resp' is used).

2) I don't think this is the best way to get names.  If I do

fm <- lm(cbind(a=qsec,b=log(hp),sqrt(disp))~wt, data=mtcars)

I want a and b as names, but that is not what your code gives. And if 
I do

> X <- with(mtcars, cbind(a = qsec, b = log(hp), c=sqrt(disp)))
> fm <- lm(X ~ wt, data=mtcars)
> model.frame(fm)[[1]]
        [,1]     [,2]      [,3]

You've lost the names that the current code gives.

The logic is that if you use a lhs which is a matrix with column 
names, then those names are used.  If (as you did), you use one with 
empty column names, that is what you get in the model frame.  This 
seems much more in the spirit of R than second-guessing that the 
author actually meant to give column names and create them, let alone 
renaming the columns to be different than the names supplied.

3) It looks to me as if you wanted

cbind(qsec, log(hp), sqrt(disp), deparse.level=2)

but that does not give names (despite the description).  And that is I 
think a bug that can easily be changed.  That way we can fulfil yoour 
wish without breaking other people's code.


On Tue, 19 Jan 2010, arnima at hafro.is wrote:

> The model frame shows the response and predictors in a data frame with
> nicely labelled columns:
>
>  fm <- lm(wt~qsec+log(hp)+sqrt(disp), data=mtcars)
>  model.frame(fm)  # ok
>
> When the left hand side consists of more than one response, those response
> variables still look good, inside a matrix:
>
>  fm <- lm(cbind(qsec,hp,disp)~wt, data=mtcars)
>  model.frame(fm)[[1]]  # ok
>
> A problem arises when some of the response variables are transformed:
>
>  fm <- lm(cbind(qsec,log(hp),sqrt(disp))~wt, data=mtcars)
>  model.frame(fm)[[1]]  # ugh, missing column names
>
> The model frame is useful for many things, even more so when all column
> names are legible. Therefore I propose adding two new lines to
> model.frame.default() between lines 371 and 372 in
> R-patched_2010-01-12/src/library/stats/R/models.R:
>
>    varnames <- sapply(vars, deparse, width.cutoff = 500)[-1L]
>    variables <- eval(predvars, data, env)
>
> NEW if (is.matrix(variables[[1L]]))
> NEW     colnames(variables[[1L]]) <- as.character(formula[[2L]])[-1L]
>
>    if (is.null(rownames) && (resp <- attr(formula, "response")) >
>        0L) {
>
> With this fix, the above example returns legible column names:
>
>  fm <- lm(cbind(qsec,log(hp),sqrt(disp))~wt, data=mtcars)
>  model.frame(fm)[[1]]  # nice column names
>
> I hope the R development team can either commit this fix or improve it.
>
> Thanks,
>
> Arni
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>

-- 
Brian D. Ripley,                  ripley at stats.ox.ac.uk
Professor of Applied Statistics,  http://www.stats.ox.ac.uk/~ripley/
University of Oxford,             Tel:  +44 1865 272861 (self)
1 South Parks Road,                     +44 1865 272866 (PA)
Oxford OX1 3TG, UK                Fax:  +44 1865 272595


From ross at biostat.ucsf.edu  Thu Jan 21 20:38:41 2010
From: ross at biostat.ucsf.edu (Ross Boylan)
Date: Thu, 21 Jan 2010 11:38:41 -0800
Subject: [Rd] Rgeneric.py assists in rearranging generic function definitions
Message-ID: <1264102721.6220.103.camel@corn.betterworld.us>

I've attached a script I wrote that pulls all the setGeneric definitions
out of a set of R files and puts them in a separate file, default
allGenerics.R.  I thought it might help others who find themselves in a
similar situation.

The "situation" was that I had to change the order in which files in my
package were parsed; the scheme in which the generic definition is in
the "first" file that has the corresponding setMethod breaks under
re-ordering.  So I pulled out all the definitions and put them first.

In retrospect, it is clearly preferable to create allGenerics.py from
the start.  If you didn't, and discover you should have, the script
automates the conversion.

Thanks to everyone who helped me with my packaging problems.  The
package finally made it to CRAN as
http://cran.r-project.org/web/packages/mspath/index.html.  I'll send a
public notice of that to the general R list.

Ross Boylan

From arnima at hafro.is  Thu Jan 21 21:30:15 2010
From: arnima at hafro.is (Arni Magnusson)
Date: Thu, 21 Jan 2010 20:30:15 +0000 (GMT)
Subject: [Rd] Model frame when LHS is cbind (PR#14189)
In-Reply-To: <alpine.LFD.2.00.1001211724220.31382@gannet.stats.ox.ac.uk>
References: <20100119012013.79FF7282EF56@mail.pubhealth.ku.dk>
	<alpine.LFD.2.00.1001211724220.31382@gannet.stats.ox.ac.uk>
Message-ID: <alpine.LFD.2.00.1001211913290.25314@hafstormur.hafro.is>

Thank you Prof. Ripley, for examining this issue. I have two more 
questions on this topic, if I may.

(1) Truncated column names

With your explanations I can see that the problem of missing column names 
originates in cbind() and the 'deparse.level' bug we have just discovered. 
I had tried different 'deparse.level' values, only to see that it didn't 
solve my problem of missing column names.

   attach(mtcars)
   cbind(qsec,log(hp),sqrt(disp), deparse.level=0)  # no column names
   cbind(qsec,log(hp),sqrt(disp), deparse.level=1)  # qsec only
   cbind(qsec,log(hp),sqrt(disp), deparse.level=2)  # no column names
   cbind(qsec=qsec,log(hp),sqrt(disp), deparse.level=2)  # works!
   cbind(qsec=qsec,log(hp),sqrt(abs(disp)), deparse.level=2)  # hmm...

Now a new question arises. The last line generates these truncated column 
names

   "qsec"  "log(hp)"  "sqrt(abs(d..."

where the dots are not mine, but something that R decided to do, 
presumably to keep the column names no longer than 13 characters. I would 
prefer to retain the full column names, like this,

   as.matrix(data.frame(qsec,log(hp),sqrt(abs(disp)), check.names=FALSE))

where the column names are

   "qsec"  "log(hp)"  "sqrt(abs(disp))"

Is there some reason why cbind() should truncate column names? Matrices 
have no problems with very long column names.


(2) Changing the default 'deparse.level' to 2

Furthermore, since many users appreciate the compact model formula syntax 
in R, it would be great if the formula

   cbind(qsec, log(hp), sqrt(disp)) ~ wt

would result in a model frame with full column names, without sacrificing 
legibility by adding deparse.level=2 in between the variable names. The 
simplest way to achieve this would be by changing the default value of 
'deparse.level' to 2 in cbind() and probably rbind().

Am I missing some important cases where functions/users rely on some of 
the column names to be missing, as generated by deparse.level=1? And if 
so, do these cases outweigh the benefits of clean and compact formula 
syntax when modelling?


Many thanks,

Arni



On Thu, 21 Jan 2010, Prof Brian Ripley wrote:

> A few points.
>
> 0) This seems a Wishlist item, but it does not say so (see the section 
> on BUGS in the FAQ).
>
> 1) A formula does not need to have an lhs, and it is an assumption that 
> the response is the first element of 'variables' (an assumption not made 
> a couple of lines later when 'resp' is used).
>
> 2) I don't think this is the best way to get names.  If I do
>
> fm <- lm(cbind(a=qsec,b=log(hp),sqrt(disp))~wt, data=mtcars)
>
> I want a and b as names, but that is not what your code gives. And if I 
> do
>
>> X <- with(mtcars, cbind(a = qsec, b = log(hp), c=sqrt(disp)))
>> fm <- lm(X ~ wt, data=mtcars)
>> model.frame(fm)[[1]]
>       [,1]     [,2]      [,3]
>
> You've lost the names that the current code gives.
>
> The logic is that if you use a lhs which is a matrix with column names, 
> then those names are used.  If (as you did), you use one with empty 
> column names, that is what you get in the model frame.  This seems much 
> more in the spirit of R than second-guessing that the author actually 
> meant to give column names and create them, let alone renaming the 
> columns to be different than the names supplied.
>
> 3) It looks to me as if you wanted
>
> cbind(qsec, log(hp), sqrt(disp), deparse.level=2)
>
> but that does not give names (despite the description).  And that is I 
> think a bug that can easily be changed.  That way we can fulfil yoour 
> wish without breaking other people's code.
>
> -- 
> Brian D. Ripley,                  ripley at stats.ox.ac.uk
> Professor of Applied Statistics,  http://www.stats.ox.ac.uk/~ripley/
> University of Oxford,             Tel:  +44 1865 272861 (self)
> 1 South Parks Road,                     +44 1865 272866 (PA)
> Oxford OX1 3TG, UK                Fax:  +44 1865 272595
>


From macrakis at alum.mit.edu  Fri Jan 22 02:19:28 2010
From: macrakis at alum.mit.edu (Stavros Macrakis)
Date: Thu, 21 Jan 2010 20:19:28 -0500
Subject: [Rd] Inconsistency in as.data.frame.table for stringsAsFactors
Message-ID: <8b356f881001211719o20f814a2w488aec8d648fc5f5@mail.gmail.com>

An embedded and charset-unspecified text was scrubbed...
Name: not available
URL: <https://stat.ethz.ch/pipermail/r-devel/attachments/20100121/61706404/attachment.pl>

From ripley at stats.ox.ac.uk  Fri Jan 22 08:24:12 2010
From: ripley at stats.ox.ac.uk (Prof Brian Ripley)
Date: Fri, 22 Jan 2010 07:24:12 +0000 (GMT)
Subject: [Rd] Update on MinGW-w64 builds for 64-bit Windows
Message-ID: <alpine.LFD.2.00.1001220701110.5966@gannet.stats.ox.ac.uk>

An update to the announcement at
https://stat.ethz.ch/pipermail/r-devel/2010-January/056301.html

We now have daily builds of snapshots of R-devel for 64-bit Windows
available at http://cran.r-project.org/bin/windows64/contrib/ . 
Tcl/Tk support is now provided.

There is a repository of binary packages available, selected by
options(pkgType="win64.binary"), at CRAN and CRANextras: currently we
can build about 2000 packages.  The win-builder service has an option
to build and test packages under the current R-devel snapshot, and
logs of the builds for the repository are available as part of the
CRAN daily check at
http://cran.r-project.org/web/checks/check_summary.html (but note that
some of the failures are available on CRANextras).  The default 
remains to build packages from sources.

The main reason that packages have failed to build are unresolved 
dependencies on either other R packages or external software. 
Pre-built 64-bit DLLs of common Open Source libraries are much harder 
to find than 32-bit ones and we have not put in the effort that we 
have over the years for 32-bit Windows.  Bioconductor binary packages 
are not available (but that project has plans to build them in due 
course).

Package maintainers who ignored the advice not to write Makefiles (but
use Makevars) will find that chickens have come home to roost: such
packages almost certainly will not install.  Including

include $(R_HOME)/etc/Makeconf

and using macros such as $(CC), $(AR) and $(DLLTOOL) or (better) the
rules in Makeconf often does enable Makefile[.win] to be used.

Brian Ripley and Uwe Ligges

-- 
Brian D. Ripley,                  ripley at stats.ox.ac.uk
Professor of Applied Statistics,  http://www.stats.ox.ac.uk/~ripley/
University of Oxford,             Tel:  +44 1865 272861 (self)
1 South Parks Road,                     +44 1865 272866 (PA)
Oxford OX1 3TG, UK                Fax:  +44 1865 272595


From m.ashton at enduringinvestments.com  Thu Jan 21 17:48:17 2010
From: m.ashton at enduringinvestments.com (Michael Ashton)
Date: Thu, 21 Jan 2010 08:48:17 -0800
Subject: [Rd] fPortfolio prob: maxreturnPortfolio() returns Na/NaN/Inf error
Message-ID: <E30D0E7822EEB443A5B9CC8273D99C742673323B2A@EXVMBX018-3.exch018.msoutlookonline.net>

An embedded and charset-unspecified text was scrubbed...
Name: not available
URL: <https://stat.ethz.ch/pipermail/r-devel/attachments/20100121/f27f3b4d/attachment.pl>

From Stephen.Bond at cibc.com  Thu Jan 21 19:58:41 2010
From: Stephen.Bond at cibc.com (stephenb)
Date: Thu, 21 Jan 2010 10:58:41 -0800 (PST)
Subject: [Rd] arima with multiplicative season
Message-ID: <1264100321300-1050821.post@n4.nabble.com>


To: developers working on arima

is there a relatively easy way to achieve true multiplicative seasonal
effect and does multiplicative SMA make sense?

some books refer to the seasonal arima as multiplicative, because of the
multiplicative effect wrt to the ARMA spec:

(1-Bs)(1-aB)y = (1+bB)e

however the seasonal effect itself is still additive as we take the
difference between y(t) and y(t-s). 
I can achieve multiplicative differencing/division by creating a series
y(t)/y(t-s) and then fit regular ARIMA on that. In this case the SAR
coefficient is redundant I think as this simply scales the whole series. but
I am not sure if specifying a model with multiplicative SMA, where the
coefficient is estimated makes sense:

instead of e(t) - b*e(t-s) 

b*e(t)/e(t-s)

please, comment.
-- 
View this message in context: http://n4.nabble.com/arima-with-multiplicative-season-tp1050821p1050821.html
Sent from the R devel mailing list archive at Nabble.com.


From maechler at stat.math.ethz.ch  Fri Jan 22 09:17:46 2010
From: maechler at stat.math.ethz.ch (Martin Maechler)
Date: Fri, 22 Jan 2010 09:17:46 +0100
Subject: [Rd] Inconsistency in as.data.frame.table for stringsAsFactors
In-Reply-To: <8b356f881001211719o20f814a2w488aec8d648fc5f5@mail.gmail.com>
References: <8b356f881001211719o20f814a2w488aec8d648fc5f5@mail.gmail.com>
Message-ID: <19289.24362.734838.778263@lynne.math.ethz.ch>

>>>>> "SM" == Stavros Macrakis <macrakis at alum.mit.edu>
>>>>>     on Thu, 21 Jan 2010 20:19:28 -0500 writes:

    SM> I noticed that in as.data.frame.table, the stringsAsFactors argument
    SM> defaults to TRUE, whereas in the other as.data.frame methods, it defaults to
    SM> default.stringsAsFactors().

    SM> The documentation and implementation agree on this, so this is not a bug.

    SM> However, I was wondering if this disparity was intended or if it might be
    SM> some sort of unintentional oversight.  If it is intentional, I wonder what
    SM> the rationale is.

Some of us (including me) have strongly argued on several
occasions that  global options() settings should *not* have an effect
on anything "computing" but just on "output"
i.e. printing/graphing of R results.
As it is currently, potentially R scripts and R functions may
only work correctly for one setting of  
     options( stringsAsFactors = * )
which is against all principles of functional programming.

>From this (my) point of view, we should strive to eventually deprecate
default.stringsAsFactors() which basically returns getOption("stringsAsFactors"),
or as first/2nd step redefine it as

 default.stringsAsFactors <- function() TRUE

Martin M?chler.

    SM> Thanks,
    SM> -s


From pleydell at supagro.inra.fr  Fri Jan 22 10:59:28 2010
From: pleydell at supagro.inra.fr (pleydell at supagro.inra.fr)
Date: Fri, 22 Jan 2010 10:59:28 +0100
Subject: [Rd] R CMD check error with the GNU Scientific Library
Message-ID: <20100122105928.xtyb7qn8oywwo0wc@web.supagro.inra.fr>

I have been working on an R package that calls C code using .C(). I recently
started including some functions from the GNU Scientific Library in my code.
The code runs fine on my machine when not wrapped in the package. But I get the
following error from "R CMD check"

* checking whether the package can be loaded ... ERROR
Loading required package: splancs
Loading required package: sp

Spatial Point Pattern Analysis Code in S-Plus

 Version 2 - Spatial and Space-Time analysis
Loading required package: ellipse
Loading required package: mvtnorm
Error in dyn.load(file, DLLpath = DLLpath, ...) :
  unable to load shared library
'/home/david/papers/inProgress/sharka_istanbull/package/sharka.Rcheck/sharka/libs/sharka.so':
 
/home/david/papers/inProgress/sharka_istanbull/package/sharka.Rcheck/sharka/libs/sharka.so:
undefined symbol: gsl_multimin_fminimizer_nmsimplex
Error in library(sharka) : .First.lib failed for 'sharka'
Execution halted

Clearly there is some difficulty linking up with
gsl_multimin_fminimizer_nmsimplex.

I noticed the QRMlib library also includes gsl functions. In that package they
include a src/gsl directory with the required .h files and in Makevars they
have "PKG_CFLAGS = -I./gsl". I have copied this approach, but wonder if using
the standard

"R CMD build myPackage"
"R CMD check myPackage"

needs modifying in some way?

All hints or ideas welcome.
Thanks
David





-- 
David Pleydell
UMR BGPI
CIRAD
TA A-54/K
Campus International de Baillarguet
34398 MONTPELLIER CEDEX 5
FRANCE
Tel: +33 4 99 62 48 65 - Secr?tariat : +33 4 99 62 48 21
Fax : +33 4 99 62 48 22
http://umr-bgpi.cirad.fr/trombinoscope/pleydell_d.htm
https://sites.google.com/site/drjpleydell/


From ligges at statistik.tu-dortmund.de  Fri Jan 22 11:08:45 2010
From: ligges at statistik.tu-dortmund.de (Uwe Ligges)
Date: Fri, 22 Jan 2010 11:08:45 +0100
Subject: [Rd] R CMD check error with the GNU Scientific Library
In-Reply-To: <20100122105928.xtyb7qn8oywwo0wc@web.supagro.inra.fr>
References: <20100122105928.xtyb7qn8oywwo0wc@web.supagro.inra.fr>
Message-ID: <4B59792D.8070708@statistik.tu-dortmund.de>

Maybe you want to check out the R package gsl and take a look how it is 
solved there using a configure script that looks up the gsl installation.

Best wishes,
Uwe


On 22.01.2010 10:59, pleydell at supagro.inra.fr wrote:
> I have been working on an R package that calls C code using .C(). I recently
> started including some functions from the GNU Scientific Library in my code.
> The code runs fine on my machine when not wrapped in the package. But I get the
> following error from "R CMD check"
>
> * checking whether the package can be loaded ... ERROR
> Loading required package: splancs
> Loading required package: sp
>
> Spatial Point Pattern Analysis Code in S-Plus
>
>   Version 2 - Spatial and Space-Time analysis
> Loading required package: ellipse
> Loading required package: mvtnorm
> Error in dyn.load(file, DLLpath = DLLpath, ...) :
>    unable to load shared library
> '/home/david/papers/inProgress/sharka_istanbull/package/sharka.Rcheck/sharka/libs/sharka.so':
>
> /home/david/papers/inProgress/sharka_istanbull/package/sharka.Rcheck/sharka/libs/sharka.so:
> undefined symbol: gsl_multimin_fminimizer_nmsimplex
> Error in library(sharka) : .First.lib failed for 'sharka'
> Execution halted
>
> Clearly there is some difficulty linking up with
> gsl_multimin_fminimizer_nmsimplex.
>
> I noticed the QRMlib library also includes gsl functions. In that package they
> include a src/gsl directory with the required .h files and in Makevars they
> have "PKG_CFLAGS = -I./gsl". I have copied this approach, but wonder if using
> the standard
>
> "R CMD build myPackage"
> "R CMD check myPackage"
>
> needs modifying in some way?
>
> All hints or ideas welcome.
> Thanks
> David
>
>
>
>
>


From romain.francois at dbmail.com  Fri Jan 22 11:12:37 2010
From: romain.francois at dbmail.com (Romain Francois)
Date: Fri, 22 Jan 2010 11:12:37 +0100
Subject: [Rd] R CMD check error with the GNU Scientific Library
In-Reply-To: <20100122105928.xtyb7qn8oywwo0wc@web.supagro.inra.fr>
References: <20100122105928.xtyb7qn8oywwo0wc@web.supagro.inra.fr>
Message-ID: <4B597A15.4000007@dbmail.com>


Hi,

You'll need something like :

PKG_LIBS=-lgsl -lgslcblas

in your Makevars.

This is from package gsl (on CRAN). Or maybe you can just depend on the 
gsl package and let it worry about finding where gsl is, etc ...

Romain

On 01/22/2010 10:59 AM, pleydell at supagro.inra.fr wrote:
>
> I have been working on an R package that calls C code using .C(). I recently
> started including some functions from the GNU Scientific Library in my code.
> The code runs fine on my machine when not wrapped in the package. But I get the
> following error from "R CMD check"
>
> * checking whether the package can be loaded ... ERROR
> Loading required package: splancs
> Loading required package: sp
>
> Spatial Point Pattern Analysis Code in S-Plus
>
>   Version 2 - Spatial and Space-Time analysis
> Loading required package: ellipse
> Loading required package: mvtnorm
> Error in dyn.load(file, DLLpath = DLLpath, ...) :
>    unable to load shared library
> '/home/david/papers/inProgress/sharka_istanbull/package/sharka.Rcheck/sharka/libs/sharka.so':
>
> /home/david/papers/inProgress/sharka_istanbull/package/sharka.Rcheck/sharka/libs/sharka.so:
> undefined symbol: gsl_multimin_fminimizer_nmsimplex
> Error in library(sharka) : .First.lib failed for 'sharka'
> Execution halted
>
> Clearly there is some difficulty linking up with
> gsl_multimin_fminimizer_nmsimplex.
>
> I noticed the QRMlib library also includes gsl functions. In that package they
> include a src/gsl directory with the required .h files and in Makevars they
> have "PKG_CFLAGS = -I./gsl". I have copied this approach, but wonder if using
> the standard
>
> "R CMD build myPackage"
> "R CMD check myPackage"
>
> needs modifying in some way?
>
> All hints or ideas welcome.
> Thanks
> David


-- 
Romain Francois
Professional R Enthusiast
+33(0) 6 28 91 30 30
http://romainfrancois.blog.free.fr
|- http://tr.im/KfKn : Rcpp 0.7.2
|- http://tr.im/JOlc : External pointers with Rcpp
`- http://tr.im/JFqa : R Journal, Volume 1/2, December 2009


From h.wickham at gmail.com  Fri Jan 22 14:45:55 2010
From: h.wickham at gmail.com (hadley wickham)
Date: Fri, 22 Jan 2010 07:45:55 -0600
Subject: [Rd] Inconsistency in as.data.frame.table for stringsAsFactors
In-Reply-To: <19289.24362.734838.778263@lynne.math.ethz.ch>
References: <8b356f881001211719o20f814a2w488aec8d648fc5f5@mail.gmail.com> 
	<19289.24362.734838.778263@lynne.math.ethz.ch>
Message-ID: <f8e6ff051001220545h7318068s849bf22e074cb363@mail.gmail.com>

On Fri, Jan 22, 2010 at 2:17 AM, Martin Maechler
<maechler at stat.math.ethz.ch> wrote:
>>>>>> "SM" == Stavros Macrakis <macrakis at alum.mit.edu>
>>>>>> ? ? on Thu, 21 Jan 2010 20:19:28 -0500 writes:
>
> ? ?SM> I noticed that in as.data.frame.table, the stringsAsFactors argument
> ? ?SM> defaults to TRUE, whereas in the other as.data.frame methods, it defaults to
> ? ?SM> default.stringsAsFactors().
>
> ? ?SM> The documentation and implementation agree on this, so this is not a bug.
>
> ? ?SM> However, I was wondering if this disparity was intended or if it might be
> ? ?SM> some sort of unintentional oversight. ?If it is intentional, I wonder what
> ? ?SM> the rationale is.
>
> Some of us (including me) have strongly argued on several
> occasions that ?global options() settings should *not* have an effect
> on anything "computing" but just on "output"
> i.e. printing/graphing of R results.
> As it is currently, potentially R scripts and R functions may
> only work correctly for one setting of
> ? ? options( stringsAsFactors = * )
> which is against all principles of functional programming.

A similar argument would also seem to apply to defaultPackages,
deparse.max.lines, download.file.method, encoding, expressions, warn
and na.action.  There are plenty of functions in R that violate other
principles of functional programming, so, by itself, this argument
seems a little weak to me.  There are obviously differences of opinion
about this issue in R core, and it's unfortunate that the user has to
be exposed to them through inconsistent function definitions.

Hadley

-- 
http://had.co.nz/


From h.wickham at gmail.com  Fri Jan 22 14:47:09 2010
From: h.wickham at gmail.com (hadley wickham)
Date: Fri, 22 Jan 2010 07:47:09 -0600
Subject: [Rd] Inconsistency in as.data.frame.table for stringsAsFactors
In-Reply-To: <f8e6ff051001220545h7318068s849bf22e074cb363@mail.gmail.com>
References: <8b356f881001211719o20f814a2w488aec8d648fc5f5@mail.gmail.com> 
	<19289.24362.734838.778263@lynne.math.ethz.ch>
	<f8e6ff051001220545h7318068s849bf22e074cb363@mail.gmail.com>
Message-ID: <f8e6ff051001220547o2921e92chc014f68bd8a6c3ea@mail.gmail.com>

>> Some of us (including me) have strongly argued on several
>> occasions that ?global options() settings should *not* have an effect
>> on anything "computing" but just on "output"
>> i.e. printing/graphing of R results.
>> As it is currently, potentially R scripts and R functions may
>> only work correctly for one setting of
>> ? ? options( stringsAsFactors = * )
>> which is against all principles of functional programming.
>
> A similar argument would also seem to apply to defaultPackages,
> deparse.max.lines, download.file.method, encoding, expressions, warn
> and na.action. ?There are plenty of functions in R that violate other
> principles of functional programming, so, by itself, this argument
> seems a little weak to me. ?There are obviously differences of opinion
> about this issue in R core, and it's unfortunate that the user has to
> be exposed to them through inconsistent function definitions.

Which isn't to say I don't think that you're right - I would hate for
R to head in the direction of PHP where every script has to check
three or four different global variables in order to work on all
installations.

Hadley

-- 
http://had.co.nz/


From S.Ellison at lgc.co.uk  Fri Jan 22 15:25:50 2010
From: S.Ellison at lgc.co.uk (S Ellison)
Date: Fri, 22 Jan 2010 14:25:50 +0000
Subject: [Rd] Inconsistency in as.data.frame.table for	stringsAsFactors
Message-ID: <sb59b578.042@tedmail.lgc.co.uk>


>> Some of us (including me) have strongly argued on several
>> occasions that  global options() settings should *not* have an
effect
>> on anything "computing" ...
> ...

Global options are less of a problem where a function allows them to be
overridden by the user or programmer. If something is affected by a
global option, a programmer desiring consistent behaviour then has a
simple recourse - set it explicitly in the call. In other words, the
programmer should be able to enforce that principle of functional
programming; an observation which I would offer as a wider imperative
than the language having to do so. That is, I believe that 'it should
always be possible for a user to set any parameter used by a function'
irrespective of the existence or otherwise of global options. (I believe
in programmer choice in these things).

In a sense, too, a global option expresses a user choice for a set of
operations. There are often good reasons for this; for example, factor
contrasts. It has drastic effects on the model computed, but there seems
good reason for the convenience of allowing a user to set contrasts for
a series of related analyses rather than setting them individually on
each model call. 

The (small number of pretty much trivial) defaults that have, over the
last few years, given me a temporary headache are not globals or
argument defaults; they have been hardwired defaults that couldn't be
changed in the function calls. Rewriting the function is almost always
possible, but not quite a straightforward method of overriding a
default! To an extent, the same can be said of global options that
affect a function, are user-settable but can't be overridden in the call
itself. The main 'culprits' of this tend to be older graphics calls,
which often respect par() options but don't all take all the par()
options in '...' .

But in general I too concur; there shouldn't be global options without
pretty good reason.

>Which isn't to say I don't think that you're right - I would hate for
>R to head in the direction of PHP ....
PHP is indeed an example to stay away from; it changes the nature of
data without allowing a test on the stored data to reveal the fact. By
contrast, stringsAsFactors produces a _detectable_ effect on the data;
we can tell what form the data has now, irrespective of system settings
now or (worse) on original input.

Steve Ellison


*******************************************************************
This email and any attachments are confidential. Any use...{{dropped:8}}


From pleydell at supagro.inra.fr  Fri Jan 22 18:37:58 2010
From: pleydell at supagro.inra.fr (pleydell at supagro.inra.fr)
Date: Fri, 22 Jan 2010 18:37:58 +0100
Subject: [Rd] R CMD check error with the GNU Scientific Library
In-Reply-To: <4B597A15.4000007@dbmail.com>
References: <20100122105928.xtyb7qn8oywwo0wc@web.supagro.inra.fr>
	<4B597A15.4000007@dbmail.com>
Message-ID: <20100122183758.bmvvml07u1kwskk8@web.supagro.inra.fr>

> You'll need something like :
>
> PKG_LIBS=-lgsl -lgslcblas
>
> in your Makevars.
>
> This is from package gsl (on CRAN).

Of course! That makes sense 'cause I was already compiling using

MAKEFLAGS="CFLAGS=-g -O0" R CMD SHLIB sharka.c -lgsl -lgslcblas

and including the above line in Makevars has done the job, great!!

I was copying QRMlib and not the gsl package since the former includes 
.h files
while the later uses .c files. I have a binary and not source installation of
gsl (not the R package) and so .h files were more readily accessible to me. I
wonder about the pros / cons of using .c vs. .h in an R package and how QRMlib
was compiled without the above line in Makevars.

Thanks for your help
David


From nachikethas at cox.net  Fri Jan 22 15:35:09 2010
From: nachikethas at cox.net (nachikethas at cox.net)
Date: Fri, 22 Jan 2010 15:35:09 +0100 (CET)
Subject: [Rd] R-2.10.1 : There is no make file. (PR#14192)
Message-ID: <20100122143509.B7CB22831FE0@mail.pubhealth.ku.dk>

Full_Name: N. Srinivasan
Version: R-2.10.1
OS: Ubuntu 9.10, 64 bits
Submission from: (NULL) (68.110.238.141)


,/configure runs fine.

But there is no make file mentioned in the INSTALL file.

Usually this kind of information is provided in the README file.

I am a donor to the R Foundation.

Ubuntu uses the Synaptic. It only installs the R version 2.9.0

So, I have to compile R-2.10.1 from the source.

Will appreciate help on how to install R-2.10.1


From josh.m.ulrich at gmail.com  Fri Jan 22 18:54:58 2010
From: josh.m.ulrich at gmail.com (Joshua Ulrich)
Date: Fri, 22 Jan 2010 11:54:58 -0600
Subject: [Rd] R-2.10.1 : There is no make file. (PR#14192)
In-Reply-To: <20100122143509.B7CB22831FE0@mail.pubhealth.ku.dk>
References: <20100122143509.B7CB22831FE0@mail.pubhealth.ku.dk>
Message-ID: <8cca69991001220954w15805899pb01a3d0b6be98d83@mail.gmail.com>

On Fri, Jan 22, 2010 at 8:35 AM,  <nachikethas at cox.net> wrote:
> Full_Name: N. Srinivasan
> Version: R-2.10.1
> OS: Ubuntu 9.10, 64 bits
> Submission from: (NULL) (68.110.238.141)
>
>
> ,/configure runs fine.
>
> But there is no make file mentioned in the INSTALL file.
>
> Usually this kind of information is provided in the README file.
>
> I am a donor to the R Foundation.
>
> Ubuntu uses the Synaptic. It only installs the R version 2.9.0
>
> So, I have to compile R-2.10.1 from the source.
>
No you do not.  See the R FAQ:
http://cran.r-project.org/doc/FAQ/R-FAQ.html#Are-there-Unix-binaries-for-R_003f

Best,
Josh
--
http://www.fosstrading.com


> Will appreciate help on how to install R-2.10.1
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>


From mathieu.ribatet at epfl.ch  Fri Jan 22 18:57:03 2010
From: mathieu.ribatet at epfl.ch (Ribatet Mathieu)
Date: Fri, 22 Jan 2010 18:57:03 +0100
Subject: [Rd] R-2.10.1 : There is no make file. (PR#14192)
In-Reply-To: <20100122143509.B7CB22831FE0@mail.pubhealth.ku.dk>
References: <20100122143509.B7CB22831FE0@mail.pubhealth.ku.dk>
Message-ID: <3CAC0016-F834-467E-A572-DEC7BD76C1CA@epfl.ch>

If you follow this link http://stat.ethz.ch/CRAN/ and choose linux  
then you'll get all the information you asked for.

Best,
Mathieu

Le 22 janv. 2010 ? 15:35, <nachikethas at cox.net> <nachikethas at cox.net>  
a ?crit :

> Full_Name: N. Srinivasan
> Version: R-2.10.1
> OS: Ubuntu 9.10, 64 bits
> Submission from: (NULL) (68.110.238.141)
>
>
> ,/configure runs fine.
>
> But there is no make file mentioned in the INSTALL file.
>
> Usually this kind of information is provided in the README file.
>
> I am a donor to the R Foundation.
>
> Ubuntu uses the Synaptic. It only installs the R version 2.9.0
>
> So, I have to compile R-2.10.1 from the source.
>
> Will appreciate help on how to install R-2.10.1
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


-----------------------------------------------------------------
Institute of Mathematics
Ecole Polytechnique F?d?rale de Lausanne
STAT-IMA-FSB-EPFL, Station 8
CH-1015 Lausanne   Switzerland
http://stat.epfl.ch/
Tel: + 41 (0)21 693 7907


From edd at debian.org  Fri Jan 22 19:08:57 2010
From: edd at debian.org (Dirk Eddelbuettel)
Date: Fri, 22 Jan 2010 12:08:57 -0600
Subject: [Rd] R-2.10.1 : There is no make file. (PR#14192)
In-Reply-To: <20100122143509.B7CB22831FE0@mail.pubhealth.ku.dk>
References: <20100122143509.B7CB22831FE0@mail.pubhealth.ku.dk>
Message-ID: <19289.59833.162247.351984@ron.nulle.part>


On 22 January 2010 at 15:35, nachikethas at cox.net wrote:
| Full_Name: N. Srinivasan
| Version: R-2.10.1
| OS: Ubuntu 9.10, 64 bits
| Submission from: (NULL) (68.110.238.141)
| 
| ,/configure runs fine.
| 
| But there is no make file mentioned in the INSTALL file.

Please specifiy your question more clearly.  'configure [options]' followed
by 'make [option' and 'make install' _obviously_ works.  Look eg at 
https://buildd.debian.org/build.cgi?pkg=r-base for all Debian builds,
Ubuntu's are similar.

And my copy of the file INSTALL says 

    SIMPLE COMPILATION

    As you are reading this file, you have unpacked the R sources and are
    presumably in the top directory.  Issue the following commands:

   	    ./configure
	    make

How does that not mention make, please ?
 
| Usually this kind of information is provided in the README file.
| 
| I am a donor to the R Foundation.
| 
| Ubuntu uses the Synaptic. It only installs the R version 2.9.0

Please read the R FAQ entry 2.6 'Are there Unix binaries for R' and look at
http://cran.r-project.org/bin/linux/ubuntu on how to obtain R 2.10.1
pre-built thanks to the work of Vincent and Michael.
 
| So, I have to compile R-2.10.1 from the source.

Nope, see previous point.
 
| Will appreciate help on how to install R-2.10.1

Here it is.  Next time, please feel free to ask on the r-sig-debian list for
Debian / Ubuntu question rather than filing a non-bug bug report.

Dirk

-- 
Three out of two people have difficulties with fractions.


From macrakis at alum.mit.edu  Fri Jan 22 23:08:41 2010
From: macrakis at alum.mit.edu (Stavros Macrakis)
Date: Fri, 22 Jan 2010 17:08:41 -0500
Subject: [Rd] Inconsistency in as.data.frame.table for stringsAsFactors
In-Reply-To: <19289.24362.734838.778263@lynne.math.ethz.ch>
References: <8b356f881001211719o20f814a2w488aec8d648fc5f5@mail.gmail.com>
	<19289.24362.734838.778263@lynne.math.ethz.ch>
Message-ID: <8b356f881001221408i4cbddce3i5b07714c24c05fb7@mail.gmail.com>

An embedded and charset-unspecified text was scrubbed...
Name: not available
URL: <https://stat.ethz.ch/pipermail/r-devel/attachments/20100122/cad605a7/attachment.pl>

From p.dalgaard at biostat.ku.dk  Sat Jan 23 12:12:54 2010
From: p.dalgaard at biostat.ku.dk (Peter Dalgaard)
Date: Sat, 23 Jan 2010 12:12:54 +0100
Subject: [Rd] Inconsistency in as.data.frame.table for stringsAsFactors
In-Reply-To: <8b356f881001221408i4cbddce3i5b07714c24c05fb7@mail.gmail.com>
References: <8b356f881001211719o20f814a2w488aec8d648fc5f5@mail.gmail.com>	<19289.24362.734838.778263@lynne.math.ethz.ch>
	<8b356f881001221408i4cbddce3i5b07714c24c05fb7@mail.gmail.com>
Message-ID: <4B5AD9B6.9010504@biostat.ku.dk>

Stavros Macrakis wrote:
> Martin,
> 
> I agree that global options settings that affect computations are
> problematic.
> 
> But that's not the issue I was addressing.  If for some classes, func.CLASS
> has certain defaults for some arguments, it is surprising that for other
> classes, it has different defaults, whether these defaults are fixed or
> taken from global settings -- when there is no obvious reason for the
> default to vary by class.
> 
>           -s

"A foolish consistency is the hobgoblin of little minds..."

The thing is that if you are converting the classifying factors of a 
table to columns of a data frame, you will presumably prefer that they 
come out as factors, retaining level order. The alternative is like this:

 >  (x <- as.table(c("Rare"=5, "Medium"=2, "Well-done"=6)))
      Rare    Medium Well-done
         5         2         6
 > df <- as.data.frame(x, stringsAsFactors=F)
 > xtabs(Freq~Var1, data=df)
Var1
    Medium      Rare Well-done
         2         5         6

This is completely different from other cases, where as.data.frame will 
auto-convert character variables to factors; e.g., on reading. Having a 
global option intended for read.table() interfere with the above kind of 
operation, could be a really nasty surprise for the user. (Notice also 
that the option was introduced in 2.10.0, before then, noone would 
expect that classifying factors could come out as non-factors. 
Defaulting to the global option could easily break working code.)

-- 
    O__  ---- Peter Dalgaard             ?ster Farimagsgade 5, Entr.B
   c/ /'_ --- Dept. of Biostatistics     PO Box 2099, 1014 Cph. K
  (*) \(*) -- University of Copenhagen   Denmark      Ph:  (+45) 35327918
~~~~~~~~~~ - (p.dalgaard at biostat.ku.dk)              FAX: (+45) 35327907


From h.wickham at gmail.com  Sat Jan 23 15:08:34 2010
From: h.wickham at gmail.com (hadley wickham)
Date: Sat, 23 Jan 2010 08:08:34 -0600
Subject: [Rd] Inconsistency in as.data.frame.table for stringsAsFactors
In-Reply-To: <4B5AD9B6.9010504@biostat.ku.dk>
References: <8b356f881001211719o20f814a2w488aec8d648fc5f5@mail.gmail.com> 
	<19289.24362.734838.778263@lynne.math.ethz.ch>
	<8b356f881001221408i4cbddce3i5b07714c24c05fb7@mail.gmail.com> 
	<4B5AD9B6.9010504@biostat.ku.dk>
Message-ID: <f8e6ff051001230608mf456791ve7e5c49d09de6efe@mail.gmail.com>

On Sat, Jan 23, 2010 at 5:12 AM, Peter Dalgaard
<p.dalgaard at biostat.ku.dk> wrote:
> Stavros Macrakis wrote:
>>
>> Martin,
>>
>> I agree that global options settings that affect computations are
>> problematic.
>>
>> But that's not the issue I was addressing. ?If for some classes,
>> func.CLASS
>> has certain defaults for some arguments, it is surprising that for other
>> classes, it has different defaults, whether these defaults are fixed or
>> taken from global settings -- when there is no obvious reason for the
>> default to vary by class.
>>
>> ? ? ? ? ?-s
>
> "A foolish consistency is the hobgoblin of little minds..."

Perhaps conversely,

"A foolish inconsistency is the hobgoblin of all minds" ?

Hadley

-- 
http://had.co.nz/


From jeroenooms at gmail.com  Fri Jan 22 23:14:27 2010
From: jeroenooms at gmail.com (Jeroen Ooms)
Date: Fri, 22 Jan 2010 14:14:27 -0800 (PST)
Subject: [Rd] setTimeLimit() fails when out of memory.
Message-ID: <1264198467257-1129595.post@n4.nabble.com>


I am using the function setTimeLimit(elapsed=60) in R web applications to
prevent processes from taking up too many resources. This works fine when a
calculation takes too long, however, when the machine runs out of memory,
the time limit also seems to fail, resulting in a stuck process maximum
memory until killed manually. This probably makes sense in some way, but I
was wondering if there is a solution. Some example code using ggplot2 that
crashes my machine:

#time limit works fine:
setTimeLimit(elapsed=10);
while(TRUE) {sqrt(pi)}
setTimeLimit();

#time limit fails:
library(ggplot2);
x <- rnorm(1e6); 
y <- rnorm(1e6);
setTimeLimit(elapsed=10);
qplot(x,y,geom="density2d");
setTimeLimit();

Jeroen Ooms
www.stat.ucla.edu/~jeroen
-- 
View this message in context: http://n4.nabble.com/setTimeLimit-fails-when-out-of-memory-tp1129595p1129595.html
Sent from the R devel mailing list archive at Nabble.com.


From sylvain.loiseau at unicaen.fr  Sat Jan 23 18:00:15 2010
From: sylvain.loiseau at unicaen.fr (Sylvain Loiseau)
Date: Sat, 23 Jan 2010 18:00:15 +0100
Subject: [Rd] drawExpression package
Message-ID: <3A359763-33CA-42AC-AD0C-5FC350A62662@unicaen.fr>

Hello all,

Following a discussion at the end of december [1] I created a package "drawExpression" on R-Forge. It is still in a very early stage! Here is a draft of a PDF "visual reference card" that show the usage of the code:

https://r-forge.r-project.org/plugins/scmsvn/viewcvs.php/pkg/visualRefCard/visualRefCard.pdf?rev=3&root=drawexpression&view=log

Advices welcome!
Best,
Sylvain

[1] https://stat.ethz.ch/pipermail/r-devel/2009-December/056170.html


From phgrosjean at sciviews.org  Sat Jan 23 19:25:40 2010
From: phgrosjean at sciviews.org (Philippe Grosjean)
Date: Sat, 23 Jan 2010 19:25:40 +0100
Subject: [Rd] drawExpression package
In-Reply-To: <3A359763-33CA-42AC-AD0C-5FC350A62662@unicaen.fr>
References: <3A359763-33CA-42AC-AD0C-5FC350A62662@unicaen.fr>
Message-ID: <4B5B3F24.3080900@sciviews.org>

Hello,

Excellent initiative. That is going to be very interesting too for 
complex stuff like loops and if() statements.

A couple of suggestions:
- In general, I would add corresponding R input and output just beneath 
the "visual" display of what happens, so that readers can try it in R 
and see what happens.

- P. 1, para. 1: ... have a common mode, one of character, logical, and 
numeric (to match the order of visual items).

- P. 3, para. 4: The character mode always wins. Logical always looses.

- P. 5, para. 11: A little sentence explaining nchar() would be useful. 
Something like: "Count the number of characters in each string:"

- P. 6, para. 14.1: again, a little explanation: "Matrices are filled by 
  columns by default :" ... "But you can change it :"

- P. 7, para. 14.2: "Matrices have two dimensions and you must provide 
extractors for each of them. You first extract the rows, then the columns."

- P. 9: you use merge() that creates a list, before introducing what a 
list is... This is confusing.

- P. 11, para. 16.1: you use regular expressions without introducing 
what it is. No R beginner that has not done serious programming knows 
what a "Regexp" is.

(P.S.: Juste apr?s avoir ?crit tout ceci, je me rend compte que tu 
travailles ? l'Universit? de Caen. Je suis pass? par l?: j'ai mis en 
place les nouvelles infrastructures d'?levage d'oursins ? la Station 
Marine de Luc-sur-mer il y a une quinzaine d'ann?es de cela.

Bon week-end,

Philippe Grosjean
..............................................<?}))><........
  ) ) ) ) )
( ( ( ( (    Prof. Philippe Grosjean
  ) ) ) ) )
( ( ( ( (    Numerical Ecology of Aquatic Systems
  ) ) ) ) )   Mons University, Belgium
( ( ( ( (
..............................................................

Sylvain Loiseau wrote:
> Hello all,
> 
> Following a discussion at the end of december [1] I created a package "drawExpression" on R-Forge. It is still in a very early stage! Here is a draft of a PDF "visual reference card" that show the usage of the code:
> 
> https://r-forge.r-project.org/plugins/scmsvn/viewcvs.php/pkg/visualRefCard/visualRefCard.pdf?rev=3&root=drawexpression&view=log
> 
> Advices welcome!
> Best,
> Sylvain
> 
> [1] https://stat.ethz.ch/pipermail/r-devel/2009-December/056170.html
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
> 
>


From sylvain.loiseau at unicaen.fr  Sat Jan 23 22:27:14 2010
From: sylvain.loiseau at unicaen.fr (Sylvain Loiseau)
Date: Sat, 23 Jan 2010 22:27:14 +0100
Subject: [Rd] drawExpression package
In-Reply-To: <4B5B3F24.3080900@sciviews.org>
References: <3A359763-33CA-42AC-AD0C-5FC350A62662@unicaen.fr>
	<4B5B3F24.3080900@sciviews.org>
Message-ID: <886F12DF-9BAB-4E91-98C0-2ABEE9FAEE5C@unicaen.fr>

> A couple of suggestions:
> - In general, I would add corresponding R input and output just beneath the "visual" display of what happens, so that readers can try it in R and see what happens.

Yes, it lacks something like that. Perhaps a first line which copy the concrete code evaluated.

> - P. 1, para. 1: ... have a common mode, one of character, logical, and numeric (to match the order of visual items).
> 
> - P. 3, para. 4: The character mode always wins. Logical always looses.
> 
> - P. 5, para. 11: A little sentence explaining nchar() would be useful. Something like: "Count the number of characters in each string:"
> 
> - P. 6, para. 14.1: again, a little explanation: "Matrices are filled by  columns by default :" ... "But you can change it :"
> 
> - P. 7, para. 14.2: "Matrices have two dimensions and you must provide extractors for each of them. You first extract the rows, then the columns."

Thanks! I have corrected all that.

> - P. 9: you use merge() that creates a list, before introducing what a list is... This is confusing.

Well, it creates a data.frame I think, and data.frame aren't handled yet (they are seen as list)... I need a graphical convention for data.frame and for factor.

I'm wondering also how to represent functions that need a *symbol* as one of the arguments, for instance 

> 
> - P. 11, para. 16.1: you use regular expressions without introducing what it is. No R beginner that has not done serious programming knows what a "Regexp" is.

Well, this is right, but there is a mix of different logics. At the beginning, it was supposed to include very few text, to stress general principles of the langage, and to be like a reference card for quickly checking the behavior of a method. For instance, which column names are preserved by cbind? The first matrix column names or the second? etc. But the document is becoming rather an introductory text.

> (P.S.: Juste apr?s avoir ?crit tout ceci, je me rend compte que tu travailles ? l'Universit? de Caen. Je suis pass? par l?: j'ai mis en place les nouvelles infrastructures d'?levage d'oursins ? la Station Marine de Luc-sur-mer il y a une quinzaine d'ann?es de cela.

J'y fais de la linguistique de corpus, mais pr?cairement !

Regards,
Sylvain

--
Sylvain Loiseau
sylvain.loiseau at unicaen.fr

Universit? de Caen Basse Normandie
Maison de la Recherche en Sciences Humaines
MRSH - SH018
Esplanade de la Paix
Campus 1
14032 Caen Cedex


From taylor.russ at gmail.com  Sun Jan 24 03:18:55 2010
From: taylor.russ at gmail.com (rt)
Date: Sat, 23 Jan 2010 20:18:55 -0600
Subject: [Rd] recursive data-structures in R - An S4 "node" Class
Message-ID: <d6243f3f1001231818y1e447de0m8a3570cab7c9d318@mail.gmail.com>

An embedded and charset-unspecified text was scrubbed...
Name: not available
URL: <https://stat.ethz.ch/pipermail/r-devel/attachments/20100123/9d2a5ce4/attachment.pl>

From mtmorgan at fhcrc.org  Sun Jan 24 18:40:06 2010
From: mtmorgan at fhcrc.org (Martin Morgan)
Date: Sun, 24 Jan 2010 09:40:06 -0800
Subject: [Rd] recursive data-structures in R - An S4 "node" Class
In-Reply-To: <d6243f3f1001231818y1e447de0m8a3570cab7c9d318@mail.gmail.com>
References: <d6243f3f1001231818y1e447de0m8a3570cab7c9d318@mail.gmail.com>
Message-ID: <4B5C85F6.8030002@fhcrc.org>

Hi Russ -- some ideas below...

On 01/23/2010 06:18 PM, rt wrote:
> Hi,
> 
> In an effort to learn S4 objects, I am trying to port some  c based tree
> code to S4 object.  My immediate goal is to use .Call() interface for
> calling my c code from R. My long term goal is to understand how to write c
> structs that follows S4 classes and not the other-way-around.
> 
> The c struct for the node is :
> typedef struct node{
>   int c;
>   int n;
>   inode **nodes;  //length  = n
> } inode;
> 
> I am trying to define corresponding S4 class. The closest I could come was:
> setClassUnion("listOrNULL",members=c("list", "NULL"))
> setClass(Class = "Inode", representation(c =
> "numeric",n="numeric",nodes="listOrNULL"))
> 
> This does not work, as setting an element of the list of nodes in a node
> object overwrites the original object. I have read that there are dirty ways
> of writing code that gets around this issue. For example, using the assign()
> operator.
> I am not even sure if it will work.
> 
> I would appreciate if someone suggest ways in which this problem is best
> approached.
> Is it possible to have recursive data-structures within R ?

Maybe for your C structure I'd have started with

  setClass("INodeList", contains="list")
  setValidity("INodeList", function(object) {
      ok <- sapply(object, is, "INode")
      if (!all(ok)) "'INodeList' elements must all be 'INode'"
      else TRUE

  })

  setClass("INode",
           representation=representation(
             c="integer", n="integer", nodes="INodeList"))

and then

> tree  <- new("INode", n=2L,
             nodes=new("INodeList", list(
                new("INode"),
                new("INode", n=1L,
                    nodes=new("INodeList", list(new("INode")))))))

creates a recursive structure. One might update with

> anode <- new("INode", n=1L,
               nodes=new("INodeList", list(new("INode", c=1L, n=0L))))
> tree at nodes[[2]]@nodes[[1]] <- anode

or write a recursive procedure (e.g., to count the number of nodes)

  setGeneric("icount", function(x) standardGeneric("icount"))
  setMethod(icount, "INode", function(x) {
      res <- sapply(x at nodes, icount)
      if (length(res) == 0) 1 else sum(res) + 1
  })

> icount(tree)
[1] 5

or maybe if 'c' were meant to be the number of nodes below the current

  setGeneric("icumm", function(x) standardGeneric("icumm"))
  setMethod("icumm", "INode", function(x) {
      if (length(x at nodes) == 0) new("INode", x, c=1L)
      else {
          nodes = new("INodeList", lapply(x at nodes, icumm))
          c <- 1L + sum(sapply(nodes, slot, "c"))
          new("INode", x, c=c, nodes=nodes)
      }
  })

> t1 <- icumm(tree)
> t1 at c
[1] 5
> t1 at nodes[[1]]@c
[1] 1
> t1 at nodes[[2]]@c
[1] 3

All of this says 'yes, recursive data structures are possible within [S4
classes in] R'.

But something like icumm makes a full copy of 'tree' (probably several
more!, actually, thinking about it, probably many more since the last
new("INodes", ...) likely recopies all the nodes below the current;
rewriting this to reduce the copying [a revised algorithm, rather than
clever R tricks or jumping to C [as ?rapply does] would be an
interesting exercise for the algorithmically inclined reader), and the
result is a different object, rather than an updated 'tree'. This is the
copy-on-change semantics of R, and you'll not get around it easily (the
usual approach is to use an environment, but then your R user accustomed
to copy-on-change is surprised with action-at-a-distance, where say
tree2 <- tree and changing 'tree' unexpectedly alters the value of
'tree2'). Another interesting exercise for the reader is to use standard
OOP patterns to replace the conditional code with method dispatch, e.g.,
with a derived class NullINode rather than the R-centric classUnion.

> What is the best way of writing an interface with pre-existing c code?

'Best' is a strong word. If you're trying to capture data structures
that have well-developed C-level support, then perhaps what you want is
to return an 'ExternalPtr'; your S4 class would have a slot containing
the ExternalPtr, and any access is via methods that end up doing .Call
to a C-level manipulation on the pointer's content. You have some
responsibility to make sure that the object is managed appropriately
(e.g., with a finalizer that frees memory when the ExternalPtr is no
longer referenced in R). You also need to protect or prepare your user
for the action-at-distance problems mentioned above.

Hope that helps.

Martin

> What are the best practices for deveolping new code in c for such purposes?
> 
> Thanks,
> 
> Russ
> 
> 	[[alternative HTML version deleted]]
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


-- 
Martin Morgan
Computational Biology / Fred Hutchinson Cancer Research Center
1100 Fairview Ave. N.
PO Box 19024 Seattle, WA 98109

Location: Arnold Building M1 B861
Phone: (206) 667-2793


From taylor.russ at gmail.com  Sun Jan 24 22:26:44 2010
From: taylor.russ at gmail.com (rt)
Date: Sun, 24 Jan 2010 15:26:44 -0600
Subject: [Rd] recursive data-structures in R - An S4 "node" Class
In-Reply-To: <4B5C85F6.8030002@fhcrc.org>
References: <d6243f3f1001231818y1e447de0m8a3570cab7c9d318@mail.gmail.com>
	<4B5C85F6.8030002@fhcrc.org>
Message-ID: <d6243f3f1001241326k4bc016e1n48bfa8840615fb2b@mail.gmail.com>

An embedded and charset-unspecified text was scrubbed...
Name: not available
URL: <https://stat.ethz.ch/pipermail/r-devel/attachments/20100124/3cc1c847/attachment.pl>

From jinxumail at gmail.com  Mon Jan 25 07:55:41 2010
From: jinxumail at gmail.com (Jin Xu)
Date: Mon, 25 Jan 2010 14:55:41 +0800
Subject: [Rd] Help on R-2.10.1 installation on AIX5.3
Message-ID: <7baa68341001242255x4f306a76sbe46e5612494dc0f@mail.gmail.com>

An embedded and charset-unspecified text was scrubbed...
Name: not available
URL: <https://stat.ethz.ch/pipermail/r-devel/attachments/20100125/d7b2c482/attachment.pl>

From therneau at mayo.edu  Mon Jan 25 16:36:19 2010
From: therneau at mayo.edu (Terry Therneau)
Date: Mon, 25 Jan 2010 09:36:19 -0600
Subject: [Rd] Inconsistency in as.data.frame.table for stringsAsFactors
Message-ID: <1264433779.19796.29.camel@punchbuggy>

Kudos to Peter for actually answering the question of why the
inconsistency was there.  It might be well to add a bit to the
documentation.

  As to the larger discussion of global defaults let me offer two
opinions:
  1. They are the salvation of those of us who do not agree with certain
global defaults.
   -- 'best practice' is not always a consensus
   -- defaults are often informed too much by "the data we happened to
be analyising when we decided the default".  The long-standing
contrast.helmert one for instance; a look at the white book shows that
they were working on an orthagonal manufacturing design, the one case
where Helmert contrasts make sense.  The survival package contains
several defaults with the same type of origin.

  2. People in these discussions play the "it might break something"
card far too often.  At Mayo, for instance, the table() command has been
replaced by one which lists NA by default, for all data types.  We've
done this for as long as R and Splus have been used (10+ years), for all
150 people in the biostat group, and nothing has broken yet.  A
suggestion to allow this as a global default will immediately elicit the
above argument, I guarrantee it.  Ditto for our experience with
stringsAsFactors=FALSE; nothing's broken yet.  Give a concrete example
before crying wolf.

Terry T


From ggrothendieck at gmail.com  Mon Jan 25 16:49:35 2010
From: ggrothendieck at gmail.com (Gabor Grothendieck)
Date: Mon, 25 Jan 2010 10:49:35 -0500
Subject: [Rd] Inconsistency in as.data.frame.table for stringsAsFactors
In-Reply-To: <1264433779.19796.29.camel@punchbuggy>
References: <1264433779.19796.29.camel@punchbuggy>
Message-ID: <971536df1001250749i53631dc8w64470a3680806e74@mail.gmail.com>

On Mon, Jan 25, 2010 at 10:36 AM, Terry Therneau <therneau at mayo.edu> wrote:
> Kudos to Peter for actually answering the question of why the
> inconsistency was there. ?It might be well to add a bit to the
> documentation.
>
> ?As to the larger discussion of global defaults let me offer two
> opinions:
> ?1. They are the salvation of those of us who do not agree with certain

As soon as you have to interface with other software that may require
a different global default it becomes problematic.


From ross at biostat.ucsf.edu  Mon Jan 25 20:46:55 2010
From: ross at biostat.ucsf.edu (Ross Boylan)
Date: Mon, 25 Jan 2010 11:46:55 -0800
Subject: [Rd] Rgeneric.py assists in rearranging generic
	function	definitions [inline]
In-Reply-To: <1264102721.6220.103.camel@corn.betterworld.us>
References: <1264102721.6220.103.camel@corn.betterworld.us>
Message-ID: <1264448815.20689.60.camel@corn.betterworld.us>

On Thu, 2010-01-21 at 11:38 -0800, Ross Boylan wrote:
> I've attached a script I wrote that pulls all the setGeneric definitions
> out of a set of R files and puts them in a separate file, default
> allGenerics.R.  I thought it might help others who find themselves in a
> similar situation.
> 
> The "situation" was that I had to change the order in which files in my
> package were parsed; the scheme in which the generic definition is in
> the "first" file that has the corresponding setMethod breaks under
> re-ordering.  So I pulled out all the definitions and put them first.
> 
> In retrospect, it is clearly preferable to create allGenerics.py from
> the start.  If you didn't, and discover you should have, the script
> automates the conversion.
> 
> Thanks to everyone who helped me with my packaging problems.  The
> package finally made it to CRAN as
> http://cran.r-project.org/web/packages/mspath/index.html.  I'll send a
> public notice of that to the general R list.
> 
> Ross Boylan

Apparently the attachment didn't make it through. I've pasted
Rgeneric.py below.
#! /usr/bin/python
# python 2.5 required for with statement
from __future__ import with_statement

# Rgeneric.py extracts setGeneric definitions from R sources and 
# writes them to a special file, while removing them from the
# original.
#
# Context: In a system with several R files, having generic
# definitions sprinkled throughout, there are errors arising from the
# sequencing of files, or of definitions within files.  In general,
# changing the order in which files are parsed (e.g., by the Collate:
# filed in DESCRIPTION) will break things even when they were
# working.  For example, a setMethod may occur before the
# corresponding setGeneric, and then fail.  Given that it is not safe
# to call setGeneric twice for the same function, the cleanest
# solution may be to move all the generic definitions to a separate
# file that will be read before any of the setMethod's.  Rgeneric.py
# helps automate that process.
#
# It is, of course, preferable not to get into this situation in the
# first place, for example by creating an allGenerics.R file as you
# go.

# Typical useage: ./Rgeneric.py *.R
# Will create allGenerics.R with all the extracted generic
# definitions, including any preceding comments.
# Rewrites the *.R files, replacing the setGeneric's with comments
# indicating the generic has moved to allGenerics.py.
# *.R.old has the original .R files.
#
# The program does not work for all conceivable styles.  In
# particular, it assumes that
#    1. setGeneric is immediately followed by an open parenthesis and
#       a quoted name of the function.  Subsequent parts of the
#       definition may be split across lines and have interspersed
#       comments.
#
#    2. Comments precede the definition.  They are optional, and will
#       be left in place in the .R file and copied to allGenerics.R.
#
#    3. If you first define an ordinary function foo, and then do
#       setGeneric("foo") the setGeneric will be moved to
#       allGenerics.R.  It will not work properly there; you should
#       make manual adjustments such as moving it back to the
#       original.  The code at the bottom reports on all such
#       definitions, and then lists all the generic functions processed.
#
#    4. allGenerics.R will contain generic definitions in the order of
#       files examined, and in the order they are defined within the
#       file.  This is to preserve context for the comments, in
#       particular for comments which apply to a block of
#       definitions.  If you would like something else, e.g.,
#       alphabetical ordering, you should post-process the AllForKey
#       object created at the bottom of this file.


#
# There are program (not command line) options to do a read-only scan,
# and a class to hold the results, which can be inspected in various
# ways.

#     Copyright 2010 Regents of University of California
#
#     This program is free software: you can redistribute it and/or modify
#     it under the terms of the GNU General Public License as published by
#     the Free Software Foundation, either version 3 of the License, or
#     (at your option) any later version.
#
#     This program is distributed in the hope that it will be useful,
#     but WITHOUT ANY WARRANTY; without even the implied warranty of
#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#     GNU General Public License for more details.
#
#     See <http://www.gnu.org/licenses/> for the full license.

# Author: Ross Boylan <ross at biostat.ucsf.edu>
#
# Revision History:
#
# 1.0 2010-01-21 Initial release.

import os, os.path, re, sys

class ParseGeneric:
    """Extract setGeneric functions and preceding comments in one file.
    states of the parser:
    findComment -- look for start of comment
    inComment -- found comment; accumulate and look for end
    inGeneric -- extract setGeneric definition.

    Typical use:
    p = ParseGeneric()
    results = p.parse("myfile.R")
    
    or 
    p.parse("myfile.R")
    results = p.generics()
    """

    def __init__(self):
        self.reStartComment = re.compile(r"^\s*#")
        self.reInComment = re.compile(r"^(\s*#)|(\s*$)", re.DOTALL)
        self.reStartGeneric = re.compile(r"^([^#]*)(\s*setGeneric\(\"([^\"]+)\".*)$", re.DOTALL)
        self._gfname = "allGenerics.R"
        if os.path.exists(self._gfname):
            os.remove(self._gfname)

    def parse(self, fname, makeOutput=True):
        "parse the entire file.  Return list of generics"
        self._fname = fname
        self._state = self.findComment
        self._generics = []  # results will go here
        self._currentGeneric = None  # holds current parse
        if makeOutput:
            ofname = fname+".new"
            self._ofname = ofname
            self._ofile = open(ofname, "w")
            self._gfile = open(self._gfname, "a")
        else:
            self._ofname = None
            self._ofile = None
            self._gfile = None
        try:
            with open(fname, "r") as fin:
                if self._gfile:
                    self._gfile.write("\n\n########## generics from %s #############\n\n"%fname)
                for line in fin:
                    self._state(line)
                return self.generics()
        finally:
            if makeOutput:
                self.cleanup()

    def cleanup(self):
        "Final processing when we output a revised file"
        if self._ofile:
            self._ofile.close()
            self._ofile = None
        if self._gfile:
            self._gfile.close()
            self._gfile = None
        backupName = self.fileName()+".old"
        if os.path.exists(backupName):
            os.remove(backupName)
        # on Unix, but not MS Windows, preceding step is unnecessary
        os.rename(self.fileName(), backupName)
        os.rename(self._ofname, self.fileName())

    def fileName(self):
        return self._fname

    def write(self, line):
        if self._ofile:
            self._ofile.write(line)

    def stripGeneric(self, pre, name):
        """"strip generic function name from file.  
        pre is preceding material on line, before setGeneric."""
        if not self._ofile:
            return
        if pre and not pre.isspace():
            self._ofile.write(pre+"\n")
        self._ofile.write("# %s generic definition stripped out"%name)
        if self._gfname and  self._gfile:
            self._ofile.write(" and put in %s.\n"%(self._gfname))
        else:
            self._ofile.write(".\n")

    def currentGeneric(self):
        "Return current generic, creating it if necessary--for internal use"
        s = self._currentGeneric
        if s:
            return s
        s = SetGeneric(self.fileName())
        self._currentGeneric = s
        return s

    def findComment(self, line):
        "look for start of a comment"
        if self.reStartComment.match(line):
            self.currentGeneric().addComment(line)
            self._state = self.inComment
        if not self.checkGeneric(line):
            self.write(line)

    def inComment(self, line):
        "scan through a comment"
        if self.reInComment.match(line):
            self.currentGeneric().addComment(line)
        elif self.checkGeneric(line):
            return
        else:
            self._state = self.findComment
            self._currentGeneric = None
        self.write(line)

    def checkGeneric(self, line):
        "True if line starts generic definition"
        m = self.reStartGeneric.match(line)
        if m:
            self._state = self.inGeneric
            self._parenDepth = 0
            self._commas = 0
            self.stripGeneric(m.group(1), m.group(3))
            self.currentGeneric().setName(m.group(3))
            self.inGeneric(m.group(2))
            return True
        return False

    def inGeneric(self, line):
        "extract entire generic definition"
        i = 1  # 1 past current parse position
        for c in line:
            i += 1
            if c == "(":
                self._parenDepth += 1
            elif c == ",":
                self._commas += 1
            elif c == ")":
                self._parenDepth -= 1
                if self._parenDepth <= 0:
                    self.currentGeneric().addDef(line[0:i])
                    post = line[i:len(line)]
                    if not post.isspace():
                        self.write(post)
                    return self.makeGeneric(self._commas)
        self.currentGeneric().addDef(line)

    def makeGeneric(self, ncommas):
        "Record generic based on _currentGeneric.  It has ncommas+1 arguments"
        self.currentGeneric().setNargs(ncommas+1)
        self._generics.append(self.currentGeneric())
        if self._gfile:
            self._gfile.write("%s\n"%(self.currentGeneric().asText()))
        self._currentGeneric = None
        self._state = self.findComment

    def generics(self):
        "return list of SetGeneric instances I found"
        return self._generics

class SetGeneric:
    """Describes a single generic function definition."""
    
    def __init__(self, sourceFile):
        "sourceFile <String> where this generic was defined"
        self._comment = []
        self._code = []
        self._file = sourceFile

    def addComment(self, line):
        "Add a line that is a comment"
        self._comment.append(line)

    def addDef(self, line):
        self._code.append(line)

    def setName(self, genericName):
        "set name of function being defined"
        self._name = genericName

    def setNargs(self, nargs):
        self._nargs = nargs

    def isFull(self):
        """True if generic definition is complete in itself,
        rather than relying on an existing regular function definition."""
        return self._nargs > 1

    def name(self):
        return self._name

    def file(self):
        "<String> file name where generic was defined"
        return self._file

    def hasComment(self):
        "True if there is a comment defined for me"
        return len(self._comment) > 0

    def comment(self):
        "return comment as a (possibly multi-line) string"
        return "".join(self._comment)

    def code(self):
        "return definition as (possibly multi-line) string"
        return "".join(self._code)

    def asText(self):
        return self.comment() + self.code()

    def __str__(self):
        "Summary description"
        if self.hasComment():
            wc = "with"
        else:
            wc = "without"
        if self.isFull():
            f = ""
        else:
            f = "(need prior plain fn def)"
        return "setGeneric(%s) %s comment %s"%(self.name(), wc, f)

class AllForKey:
    "track situations in which there may be more than one entry per key"
    def __init__(self):
        "values are lists containing the real values"
        self._dict = dict()

    def addKey(self, key, value):
        vs = self._dict.setdefault(key, [])
        vs.append(value)

    def keys(self):
        return self._dict.keys()

    def values(self, key):
        "return LIST of values for key"
        return self._dict[key]

    def duplicateKeys(self):
        "return a list of all keys with multiple entries"
        ks = [ k for (k, v) in self._dict.iteritems() if len(v)>1 ] 
        return ks

p = ParseGeneric()
all = AllForKey()
for fn in sys.argv[1:len(sys.argv)]:
    #print fn
    xs = p.parse(fn)
    for x in xs:
        all.addKey(x.name(), x)
dups = all.duplicateKeys()
if dups:
    print "There were duplicates."
    dups.sort()
    for k in (dups[0:1]):
        print "%s: "%k ,
        for v in all.values(k):
            print "%s "%(v.file()) ,
        print
else:
    print "No Duplicates"
keys = all.keys()
keys.sort()
print "Report for all definitions"
for key in keys:
    print "%s: "%key ,
    for v in all.values(key):
        wc = "" if v.hasComment() else "without comment "
        f = "" if v.isFull() else "PARTIAL DEFINITION "
        if not v.isFull():
            print "%s%s in %s; "%(f, wc , v.file()) ,
    print


From tcallawa at redhat.com  Tue Jan 26 02:48:09 2010
From: tcallawa at redhat.com (Tom "spot" Callaway)
Date: Mon, 25 Jan 2010 20:48:09 -0500
Subject: [Rd] Stack smashing in RODBC
Message-ID: <4B5E49D9.7000403@redhat.com>

This is R 2.10.1, from Fedora 12 and RODBC 1.3-1 (although 1.3-0 has the
same problem) on i686.

Originally reported here:
https://bugzilla.redhat.com/show_bug.cgi?id=557953

Reproducer and output below:

[spot at f12.i386 src]$ R

R version 2.10.1 (2009-12-14)
Copyright (C) 2009 The R Foundation for Statistical Computing
ISBN 3-900051-07-0

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> library(RODBC)
> channel <- odbcConnect("foo", uid="bar")
*** stack smashing detected ***: /usr/lib/R/bin/exec/R terminated
======= Backtrace: =========
/lib/libc.so.6(__fortify_fail+0x4d)[0x59d1ed]
/lib/libc.so.6[0x59d19a]
/usr/lib/R/library/RODBC/libs/RODBC.so(+0x6164)[0x753164]
/usr/lib/R/library/RODBC/libs/RODBC.so(RODBCDriverConnect+0x4ed)[0x74f072]
/usr/lib/R/lib/libR.so(+0x8601c)[0x1c901c]
/usr/lib/R/lib/libR.so(Rf_eval+0x7f2)[0x1eca82]
/usr/lib/R/lib/libR.so(+0xabfd5)[0x1eefd5]
/usr/lib/R/lib/libR.so(Rf_eval+0x568)[0x1ec7f8]
/usr/lib/R/lib/libR.so(+0xac0eb)[0x1ef0eb]
/usr/lib/R/lib/libR.so(Rf_eval+0x568)[0x1ec7f8]
/usr/lib/R/lib/libR.so(Rf_applyClosure+0x2e7)[0x1f0ac7]
/usr/lib/R/lib/libR.so(Rf_eval+0x40d)[0x1ec69d]
/usr/lib/R/lib/libR.so(+0xaa43a)[0x1ed43a]
/usr/lib/R/lib/libR.so(+0xf5e9e)[0x238e9e]
/usr/lib/R/lib/libR.so(Rf_eval+0x568)[0x1ec7f8]
/usr/lib/R/lib/libR.so(Rf_applyClosure+0x2e7)[0x1f0ac7]
/usr/lib/R/lib/libR.so(Rf_eval+0x40d)[0x1ec69d]
/usr/lib/R/lib/libR.so(+0xac0eb)[0x1ef0eb]
/usr/lib/R/lib/libR.so(Rf_eval+0x568)[0x1ec7f8]
/usr/lib/R/lib/libR.so(Rf_applyClosure+0x2e7)[0x1f0ac7]
/usr/lib/R/lib/libR.so(Rf_eval+0x40d)[0x1ec69d]
/usr/lib/R/lib/libR.so(+0xac0eb)[0x1ef0eb]
/usr/lib/R/lib/libR.so(Rf_eval+0x568)[0x1ec7f8]
/usr/lib/R/lib/libR.so(Rf_applyClosure+0x2e7)[0x1f0ac7]
/usr/lib/R/lib/libR.so(Rf_eval+0x40d)[0x1ec69d]
/usr/lib/R/lib/libR.so(+0xabfd5)[0x1eefd5]
/usr/lib/R/lib/libR.so(Rf_eval+0x568)[0x1ec7f8]
/usr/lib/R/lib/libR.so(Rf_ReplIteration+0x23d)[0x22764d]
/usr/lib/R/lib/libR.so(+0xe49a5)[0x2279a5]
/usr/lib/R/lib/libR.so(run_Rmainloop+0x66)[0x228236]
/usr/lib/R/lib/libR.so(Rf_mainloop+0x1d)[0x22826d]
/usr/lib/R/bin/exec/R(main+0x39)[0x8048699]
/lib/libc.so.6(__libc_start_main+0xe6)[0x4bfbb6]
/usr/lib/R/bin/exec/R[0x8048591]
======= Memory map: ========
00110000-00138000 r-xp 00000000 fd:00 478        /lib/libm-2.11.1.so
00138000-00139000 r--p 00027000 fd:00 478        /lib/libm-2.11.1.so
00139000-0013a000 rw-p 00028000 fd:00 478        /lib/libm-2.11.1.so
0013a000-0013d000 r-xp 00000000 fd:00 479        /lib/libdl-2.11.1.so
0013d000-0013e000 r--p 00002000 fd:00 479        /lib/libdl-2.11.1.so
0013e000-0013f000 rw-p 00003000 fd:00 479        /lib/libdl-2.11.1.so
00143000-003b3000 r-xp 00000000 fd:00 223583     /usr/lib/R/lib/libR.so
003b3000-003c1000 rw-p 00270000 fd:00 223583     /usr/lib/R/lib/libR.so
003c1000-00457000 rw-p 00000000 00:00 0
00457000-00469000 r-xp 00000000 fd:00 630        /lib/libz.so.1.2.3
00469000-0046a000 rw-p 00011000 fd:00 630        /lib/libz.so.1.2.3
0046a000-00480000 r-xp 00000000 fd:00 17315      /lib/libtinfo.so.5.7
00480000-00483000 rw-p 00015000 fd:00 17315      /lib/libtinfo.so.5.7
00487000-004a5000 r-xp 00000000 fd:00 462        /lib/ld-2.11.1.so
004a5000-004a6000 r--p 0001d000 fd:00 462        /lib/ld-2.11.1.so
004a6000-004a7000 rw-p 0001e000 fd:00 462        /lib/ld-2.11.1.so
004a9000-00618000 r-xp 00000000 fd:00 463        /lib/libc-2.11.1.so
00618000-0061a000 r--p 0016e000 fd:00 463        /lib/libc-2.11.1.so
0061a000-0061b000 rw-p 00170000 fd:00 463        /lib/libc-2.11.1.so
0061b000-0061e000 rw-p 00000000 00:00 0
0061e000-006f3000 r-xp 00000000 fd:00 46452
/usr/lib/libgfortran.so.3.0.0
006f3000-006f5000 rw-p 000d4000 fd:00 46452
/usr/lib/libgfortran.so.3.0.0
006f5000-0070b000 r-xp 00000000 fd:00 476        /lib/libpthread-2.11.1.so
0070b000-0070c000 r--p 00015000 fd:00 476        /lib/libpthread-2.11.1.so
0070c000-0070d000 rw-p 00016000 fd:00 476        /lib/libpthread-2.11.1.so
0070d000-0070f000 rw-p 00000000 00:00 0
0070f000-0072c000 r-xp 00000000 fd:00 356
/lib/libgcc_s-4.4.2-20091222.so.1
0072c000-0072d000 rw-p 0001c000 fd:00 356
/lib/libgcc_s-4.4.2-20091222.so.1
0072d000-0074c000 r-xp 00000000 fd:00 225135
/usr/lib/R/library/grDevices/libs/grDevices.so
0074c000-0074d000 rw-p 0001f000 fd:00 225135
/usr/lib/R/library/grDevices/libs/grDevices.so
0074d000-00755000 r-xp 00000000 fd:00 227777
/usr/lib/R/library/RODBC/libs/RODBC.so
00755000-00756000 rw-p 00007000 fd:00 227777
/usr/lib/R/library/RODBC/libs/RODBC.so
00756000-00757000 rw-p 00000000 00:00 0
0079a000-007cf000 r-xp 00000000 fd:00 17316      /lib/libreadline.so.6.0
007cf000-007d3000 rw-p 00035000 fd:00 17316      /lib/libreadline.so.6.0
007d3000-007d4000 rw-p 00000000 00:00 0
007d4000-0082a000 r-xp 00000000 fd:00 226761
/usr/lib/R/library/stats/libs/stats.so
0082a000-0082c000 rw-p 00055000 fd:00 226761
/usr/lib/R/library/stats/libs/stats.so
0088a000-00890000 r-xp 00000000 fd:00 225678
/usr/lib/R/library/methods/libs/methods.so
00890000-00891000 rw-p 00005000 fd:00 225678
/usr/lib/R/library/methods/libs/methods.so
00891000-008fd000 r-xp 00000000 fd:00 66770      /usr/lib/libodbc.so.2.0.0
008fd000-00902000 rw-p 0006b000 fd:00 66770      /usr/lib/libodbc.so.2.0.0
00921000-0092c000 r-xp 00000000 fd:00 31904      /lib/libnss_files-2.11.1.so
0092c000-0092d000 r--p 0000a000 fd:00 31904      /lib/libnss_files-2.11.1.so
0092d000-0092e000 rw-p 0000b000 fd:00 31904      /lib/libnss_files-2.11.1.so
00c33000-00c34000 r-xp 00000000 fd:00 10372      /usr/lib/gconv/ISO8859-1.so
00c34000-00c35000 r--p 00000000 fd:00 10372      /usr/lib/gconv/ISO8859-1.so
00c35000-00c36000 rw-p 00001000 fd:00 10372      /usr/lib/gconv/ISO8859-1.so
00e4d000-00e4e000 r-xp 00000000 00:00 0          [vdso]
00f3c000-00f64000 r-xp 00000000 fd:00 223584     /usr/lib/R/lib/libRblas.so
00f64000-00f65000 rw-p 00027000 fd:00 223584     /usr/lib/R/lib/libRblas.so
04c8d000-04d6a000 r-xp 00000000 fd:00 546
/usr/lib/libstdc++.so.6.0.13
04d6a000-04d6e000 r--p 000dc000 fd:00 546
/usr/lib/libstdc++.so.6.0.13
04d6e000-04d70000 rw-p 000e0000 fd:00 546
/usr/lib/libstdc++.so.6.0.13
04d70000-04d76000 rw-p 00000000 00:00 0
04da8000-04dd7000 r-xp 00000000 fd:00 20052      /lib/libpcre.so.0.0.1
04dd7000-04dd8000 rw-p 0002e000 fd:00 20052      /lib/libpcre.so.0.0.1
050f6000-05106000 r-xp 00000000 fd:00 18599      /lib/libbz2.so.1.0.4
05106000-05107000 rw-p 00010000 fd:00 18599      /lib/libbz2.so.1.0.4
05109000-05112000 r-xp 00000000 fd:00 19476      /usr/lib/libltdl.so.7.2.1
05112000-05113000 rw-p 00008000 fd:00 19476      /usr/lib/libltdl.so.7.2.1
059e1000-05b9f000 r-xp 00000000 fd:00 13610      /usr/lib/libicui18n.so.42.1
05b9f000-05ba6000 rw-p 001be000 fd:00 13610      /usr/lib/libicui18n.so.42.1
05ba8000-05cf5000 r-xp 00000000 fd:00 20040      /usr/lib/libicuuc.so.42.1
05cf5000-05d00000 rw-p 0014c000 fd:00 20040      /usr/lib/libicuuc.so.42.1
05d00000-05d01000 rw-p 00000000 00:00 0
05dd6000-06d1b000 r-xp 00000000 fd:00 20039      /usr/lib/libicudata.so.42.1
06d1b000-06d1c000 rw-p 00f44000 fd:00 20039      /usr/lib/libicudata.so.42.1
08048000-08049000 r-xp 00000000 fd:00 223570     /usr/lib/R/bin/exec/R
08049000-0804a000 rw-p 00000000 fd:00 223570     /usr/lib/R/bin/exec/R
09d92000-0a90f000 rw-p 00000000 00:00 0          [heap]
b74e9000-b755a000 rw-p 00000000 00:00 0
b755a000-b755b000 rw-s 00000000 00:08 1146901    /SYSV79002790 (deleted)
b755b000-b75fd000 rw-p 00000000 00:00 0
b75fd000-b7604000 r--s 00000000 fd:00 942
/usr/lib/gconv/gconv-modules.cache
b7604000-b7649000 rw-p 00000000 00:00 0
b7649000-b764a000 r--p 00000000 fd:00 227376
/usr/share/R/locale/en/LC_MESSAGES/R.mo
b764a000-b76be000 rw-p 00000000 00:00 0
b76be000-b78be000 r--p 00000000 fd:00 56084
/usr/lib/locale/locale-archive
b78be000-b78c4000 rw-p 00000000 00:00 0
bfc6e000-bfc8b000 rw-p 00000000 00:00 0          [stack]
Aborted

*****
Thanks in advance,

~spot


From edd at debian.org  Tue Jan 26 03:14:28 2010
From: edd at debian.org (Dirk Eddelbuettel)
Date: Mon, 25 Jan 2010 20:14:28 -0600
Subject: [Rd] Stack smashing in RODBC
In-Reply-To: <4B5E49D9.7000403@redhat.com>
References: <4B5E49D9.7000403@redhat.com>
Message-ID: <19294.20484.362175.286202@ron.nulle.part>


On 25 January 2010 at 20:48, "Tom \"spot\" Callaway" wrote:
| This is R 2.10.1, from Fedora 12 and RODBC 1.3-1 (although 1.3-0 has the
| same problem) on i686.
| 
| Originally reported here:
| https://bugzilla.redhat.com/show_bug.cgi?id=557953
| 
| Reproducer and output below:
| 
| [spot at f12.i386 src]$ R
| 
| R version 2.10.1 (2009-12-14)
| Copyright (C) 2009 The R Foundation for Statistical Computing
| ISBN 3-900051-07-0
| 
| R is free software and comes with ABSOLUTELY NO WARRANTY.
| You are welcome to redistribute it under certain conditions.
| Type 'license()' or 'licence()' for distribution details.
| 
|   Natural language support but running in an English locale
| 
| R is a collaborative project with many contributors.
| Type 'contributors()' for more information and
| 'citation()' on how to cite R or R packages in publications.
| 
| Type 'demo()' for some demos, 'help()' for on-line help, or
| 'help.start()' for an HTML browser interface to help.
| Type 'q()' to quit R.
| 
| > library(RODBC)
| > channel <- odbcConnect("foo", uid="bar")
| *** stack smashing detected ***: /usr/lib/R/bin/exec/R terminated
| ======= Backtrace: =========
| /lib/libc.so.6(__fortify_fail+0x4d)[0x59d1ed]
| /lib/libc.so.6[0x59d19a]
| /usr/lib/R/library/RODBC/libs/RODBC.so(+0x6164)[0x753164]
| /usr/lib/R/library/RODBC/libs/RODBC.so(RODBCDriverConnect+0x4ed)[0x74f072]
| /usr/lib/R/lib/libR.so(+0x8601c)[0x1c901c]
| /usr/lib/R/lib/libR.so(Rf_eval+0x7f2)[0x1eca82]
| /usr/lib/R/lib/libR.so(+0xabfd5)[0x1eefd5]
| /usr/lib/R/lib/libR.so(Rf_eval+0x568)[0x1ec7f8]
| /usr/lib/R/lib/libR.so(+0xac0eb)[0x1ef0eb]
| /usr/lib/R/lib/libR.so(Rf_eval+0x568)[0x1ec7f8]
| /usr/lib/R/lib/libR.so(Rf_applyClosure+0x2e7)[0x1f0ac7]
| /usr/lib/R/lib/libR.so(Rf_eval+0x40d)[0x1ec69d]
| /usr/lib/R/lib/libR.so(+0xaa43a)[0x1ed43a]
| /usr/lib/R/lib/libR.so(+0xf5e9e)[0x238e9e]
| /usr/lib/R/lib/libR.so(Rf_eval+0x568)[0x1ec7f8]
| /usr/lib/R/lib/libR.so(Rf_applyClosure+0x2e7)[0x1f0ac7]
| /usr/lib/R/lib/libR.so(Rf_eval+0x40d)[0x1ec69d]
| /usr/lib/R/lib/libR.so(+0xac0eb)[0x1ef0eb]
| /usr/lib/R/lib/libR.so(Rf_eval+0x568)[0x1ec7f8]
| /usr/lib/R/lib/libR.so(Rf_applyClosure+0x2e7)[0x1f0ac7]
| /usr/lib/R/lib/libR.so(Rf_eval+0x40d)[0x1ec69d]
| /usr/lib/R/lib/libR.so(+0xac0eb)[0x1ef0eb]
| /usr/lib/R/lib/libR.so(Rf_eval+0x568)[0x1ec7f8]
| /usr/lib/R/lib/libR.so(Rf_applyClosure+0x2e7)[0x1f0ac7]
| /usr/lib/R/lib/libR.so(Rf_eval+0x40d)[0x1ec69d]
| /usr/lib/R/lib/libR.so(+0xabfd5)[0x1eefd5]
| /usr/lib/R/lib/libR.so(Rf_eval+0x568)[0x1ec7f8]
| /usr/lib/R/lib/libR.so(Rf_ReplIteration+0x23d)[0x22764d]
| /usr/lib/R/lib/libR.so(+0xe49a5)[0x2279a5]
| /usr/lib/R/lib/libR.so(run_Rmainloop+0x66)[0x228236]
| /usr/lib/R/lib/libR.so(Rf_mainloop+0x1d)[0x22826d]
| /usr/lib/R/bin/exec/R(main+0x39)[0x8048699]
| /lib/libc.so.6(__libc_start_main+0xe6)[0x4bfbb6]
| /usr/lib/R/bin/exec/R[0x8048591]
| ======= Memory map: ========
| 00110000-00138000 r-xp 00000000 fd:00 478        /lib/libm-2.11.1.so
| 00138000-00139000 r--p 00027000 fd:00 478        /lib/libm-2.11.1.so
| 00139000-0013a000 rw-p 00028000 fd:00 478        /lib/libm-2.11.1.so
| 0013a000-0013d000 r-xp 00000000 fd:00 479        /lib/libdl-2.11.1.so
| 0013d000-0013e000 r--p 00002000 fd:00 479        /lib/libdl-2.11.1.so
| 0013e000-0013f000 rw-p 00003000 fd:00 479        /lib/libdl-2.11.1.so
| 00143000-003b3000 r-xp 00000000 fd:00 223583     /usr/lib/R/lib/libR.so
| 003b3000-003c1000 rw-p 00270000 fd:00 223583     /usr/lib/R/lib/libR.so
| 003c1000-00457000 rw-p 00000000 00:00 0
| 00457000-00469000 r-xp 00000000 fd:00 630        /lib/libz.so.1.2.3
| 00469000-0046a000 rw-p 00011000 fd:00 630        /lib/libz.so.1.2.3
| 0046a000-00480000 r-xp 00000000 fd:00 17315      /lib/libtinfo.so.5.7
| 00480000-00483000 rw-p 00015000 fd:00 17315      /lib/libtinfo.so.5.7
| 00487000-004a5000 r-xp 00000000 fd:00 462        /lib/ld-2.11.1.so
| 004a5000-004a6000 r--p 0001d000 fd:00 462        /lib/ld-2.11.1.so
| 004a6000-004a7000 rw-p 0001e000 fd:00 462        /lib/ld-2.11.1.so
| 004a9000-00618000 r-xp 00000000 fd:00 463        /lib/libc-2.11.1.so
| 00618000-0061a000 r--p 0016e000 fd:00 463        /lib/libc-2.11.1.so
| 0061a000-0061b000 rw-p 00170000 fd:00 463        /lib/libc-2.11.1.so
| 0061b000-0061e000 rw-p 00000000 00:00 0
| 0061e000-006f3000 r-xp 00000000 fd:00 46452
| /usr/lib/libgfortran.so.3.0.0
| 006f3000-006f5000 rw-p 000d4000 fd:00 46452
| /usr/lib/libgfortran.so.3.0.0
| 006f5000-0070b000 r-xp 00000000 fd:00 476        /lib/libpthread-2.11.1.so
| 0070b000-0070c000 r--p 00015000 fd:00 476        /lib/libpthread-2.11.1.so
| 0070c000-0070d000 rw-p 00016000 fd:00 476        /lib/libpthread-2.11.1.so
| 0070d000-0070f000 rw-p 00000000 00:00 0
| 0070f000-0072c000 r-xp 00000000 fd:00 356
| /lib/libgcc_s-4.4.2-20091222.so.1
| 0072c000-0072d000 rw-p 0001c000 fd:00 356
| /lib/libgcc_s-4.4.2-20091222.so.1
| 0072d000-0074c000 r-xp 00000000 fd:00 225135
| /usr/lib/R/library/grDevices/libs/grDevices.so
| 0074c000-0074d000 rw-p 0001f000 fd:00 225135
| /usr/lib/R/library/grDevices/libs/grDevices.so
| 0074d000-00755000 r-xp 00000000 fd:00 227777
| /usr/lib/R/library/RODBC/libs/RODBC.so
| 00755000-00756000 rw-p 00007000 fd:00 227777
| /usr/lib/R/library/RODBC/libs/RODBC.so
| 00756000-00757000 rw-p 00000000 00:00 0
| 0079a000-007cf000 r-xp 00000000 fd:00 17316      /lib/libreadline.so.6.0
| 007cf000-007d3000 rw-p 00035000 fd:00 17316      /lib/libreadline.so.6.0
| 007d3000-007d4000 rw-p 00000000 00:00 0
| 007d4000-0082a000 r-xp 00000000 fd:00 226761
| /usr/lib/R/library/stats/libs/stats.so
| 0082a000-0082c000 rw-p 00055000 fd:00 226761
| /usr/lib/R/library/stats/libs/stats.so
| 0088a000-00890000 r-xp 00000000 fd:00 225678
| /usr/lib/R/library/methods/libs/methods.so
| 00890000-00891000 rw-p 00005000 fd:00 225678
| /usr/lib/R/library/methods/libs/methods.so
| 00891000-008fd000 r-xp 00000000 fd:00 66770      /usr/lib/libodbc.so.2.0.0
| 008fd000-00902000 rw-p 0006b000 fd:00 66770      /usr/lib/libodbc.so.2.0.0
| 00921000-0092c000 r-xp 00000000 fd:00 31904      /lib/libnss_files-2.11.1.so
| 0092c000-0092d000 r--p 0000a000 fd:00 31904      /lib/libnss_files-2.11.1.so
| 0092d000-0092e000 rw-p 0000b000 fd:00 31904      /lib/libnss_files-2.11.1.so
| 00c33000-00c34000 r-xp 00000000 fd:00 10372      /usr/lib/gconv/ISO8859-1.so
| 00c34000-00c35000 r--p 00000000 fd:00 10372      /usr/lib/gconv/ISO8859-1.so
| 00c35000-00c36000 rw-p 00001000 fd:00 10372      /usr/lib/gconv/ISO8859-1.so
| 00e4d000-00e4e000 r-xp 00000000 00:00 0          [vdso]
| 00f3c000-00f64000 r-xp 00000000 fd:00 223584     /usr/lib/R/lib/libRblas.so
| 00f64000-00f65000 rw-p 00027000 fd:00 223584     /usr/lib/R/lib/libRblas.so
| 04c8d000-04d6a000 r-xp 00000000 fd:00 546
| /usr/lib/libstdc++.so.6.0.13
| 04d6a000-04d6e000 r--p 000dc000 fd:00 546
| /usr/lib/libstdc++.so.6.0.13
| 04d6e000-04d70000 rw-p 000e0000 fd:00 546
| /usr/lib/libstdc++.so.6.0.13
| 04d70000-04d76000 rw-p 00000000 00:00 0
| 04da8000-04dd7000 r-xp 00000000 fd:00 20052      /lib/libpcre.so.0.0.1
| 04dd7000-04dd8000 rw-p 0002e000 fd:00 20052      /lib/libpcre.so.0.0.1
| 050f6000-05106000 r-xp 00000000 fd:00 18599      /lib/libbz2.so.1.0.4
| 05106000-05107000 rw-p 00010000 fd:00 18599      /lib/libbz2.so.1.0.4
| 05109000-05112000 r-xp 00000000 fd:00 19476      /usr/lib/libltdl.so.7.2.1
| 05112000-05113000 rw-p 00008000 fd:00 19476      /usr/lib/libltdl.so.7.2.1
| 059e1000-05b9f000 r-xp 00000000 fd:00 13610      /usr/lib/libicui18n.so.42.1
| 05b9f000-05ba6000 rw-p 001be000 fd:00 13610      /usr/lib/libicui18n.so.42.1
| 05ba8000-05cf5000 r-xp 00000000 fd:00 20040      /usr/lib/libicuuc.so.42.1
| 05cf5000-05d00000 rw-p 0014c000 fd:00 20040      /usr/lib/libicuuc.so.42.1
| 05d00000-05d01000 rw-p 00000000 00:00 0
| 05dd6000-06d1b000 r-xp 00000000 fd:00 20039      /usr/lib/libicudata.so.42.1
| 06d1b000-06d1c000 rw-p 00f44000 fd:00 20039      /usr/lib/libicudata.so.42.1
| 08048000-08049000 r-xp 00000000 fd:00 223570     /usr/lib/R/bin/exec/R
| 08049000-0804a000 rw-p 00000000 fd:00 223570     /usr/lib/R/bin/exec/R
| 09d92000-0a90f000 rw-p 00000000 00:00 0          [heap]
| b74e9000-b755a000 rw-p 00000000 00:00 0
| b755a000-b755b000 rw-s 00000000 00:08 1146901    /SYSV79002790 (deleted)
| b755b000-b75fd000 rw-p 00000000 00:00 0
| b75fd000-b7604000 r--s 00000000 fd:00 942
| /usr/lib/gconv/gconv-modules.cache
| b7604000-b7649000 rw-p 00000000 00:00 0
| b7649000-b764a000 r--p 00000000 fd:00 227376
| /usr/share/R/locale/en/LC_MESSAGES/R.mo
| b764a000-b76be000 rw-p 00000000 00:00 0
| b76be000-b78be000 r--p 00000000 fd:00 56084
| /usr/lib/locale/locale-archive
| b78be000-b78c4000 rw-p 00000000 00:00 0
| bfc6e000-bfc8b000 rw-p 00000000 00:00 0          [stack]
| Aborted
| 
| *****
| Thanks in advance,

I cannot replicate this on Debian. The error gets trapped just fine. This may
be particular to your builds or setup. I don;t see an R error (but of course
do not speak for R Core). Here is a short version, it is the same in normal
interactive mode.

edd at ron:~> echo 'library(RODBC); channel <- odbcConnect("foo", uid="bar")' | R --slave
Warning messages:
1: In odbcDriverConnect("DSN=foo;UID=bar") :
  [RODBC] ERROR: state IM002, code 0, message [unixODBC][Driver Manager]Data source name not found, and no default driver specified
2: In odbcDriverConnect("DSN=foo;UID=bar") : ODBC connection failed
edd at ron:~> COLUMNS=78 dpkg -l r-base-core r-cran-rodbc | tail -2
ii  r-base-core    2.10.1-2       GNU R core of statistical computation and gr
ii  r-cran-rodbc   1.3-1-2        GNU R package for ODBC database access
edd at ron:~> ldd /usr/lib/R/site-library/RODBC/libs/RODBC.so 
	linux-gate.so.1 =>  (0xb80ca000)
	libodbc.so.1 => /usr/lib/libodbc.so.1 (0xb8043000)
	libR.so => /usr/lib/R/lib/libR.so (0xb7d2c000)
	libc.so.6 => /lib/i686/cmov/libc.so.6 (0xb7be4000)
	libltdl.so.7 => /usr/lib/libltdl.so.7 (0xb7bdc000)
	libpthread.so.0 => /lib/i686/cmov/libpthread.so.0 (0xb7bc3000)
	libblas.so.3gf => /usr/lib/atlas/libblas.so.3gf (0xb7848000)
	libgfortran.so.3 => /usr/lib/libgfortran.so.3 (0xb7783000)
	libm.so.6 => /lib/i686/cmov/libm.so.6 (0xb775c000)
	libreadline.so.6 => /lib/libreadline.so.6 (0xb7727000)
	libpcre.so.3 => /lib/libpcre.so.3 (0xb76f7000)
	libbz2.so.1.0 => /lib/libbz2.so.1.0 (0xb76e7000)
	libz.so.1 => /usr/lib/libz.so.1 (0xb76d3000)
	libdl.so.2 => /lib/i686/cmov/libdl.so.2 (0xb76cf000)
	/lib/ld-linux.so.2 (0xb80cb000)
	libgcc_s.so.1 => /lib/libgcc_s.so.1 (0xb76b1000)
	libncurses.so.5 => /lib/libncurses.so.5 (0xb7679000)
edd at ron:~> 

Hth, Dirk
| 
| ~spot
| 
| ______________________________________________
| R-devel at r-project.org mailing list
| https://stat.ethz.ch/mailman/listinfo/r-devel

-- 
Three out of two people have difficulties with fractions.


From nakama at ki.rim.or.jp  Tue Jan 26 06:31:55 2010
From: nakama at ki.rim.or.jp (Ei-ji Nakama)
Date: Tue, 26 Jan 2010 14:31:55 +0900
Subject: [Rd] Help on R-2.10.1 installation on AIX5.3
In-Reply-To: <7baa68341001242255x4f306a76sbe46e5612494dc0f@mail.gmail.com>
References: <7baa68341001242255x4f306a76sbe46e5612494dc0f@mail.gmail.com>
Message-ID: <dc41e1261001252131n1cb364a2l540618f07a9b65b6@mail.gmail.com>

2010/1/25 Jin Xu <jinxumail at gmail.com>:
> Actually I successfully compiled R-2.8.1 on this machine wiht these
> parameters and a patch on http://prs.ism.ac.jp/~nakama/AIX/changefiles.
> Would you mind to tell me what I can do if I want to build R-2.10.1

I don't touch AIX from last year...
I asked for the use of AIX.
However, I get the word a request was forgotten well.
-- 
EI-JI Nakama  <nakama (a) ki.rim.or.jp>
"\u4e2d\u9593\u6804\u6cbb"  <nakama (a) ki.rim.or.jp>


From tcallawa at redhat.com  Tue Jan 26 07:23:22 2010
From: tcallawa at redhat.com (Tom "spot" Callaway)
Date: Tue, 26 Jan 2010 01:23:22 -0500
Subject: [Rd] Stack smashing in RODBC
In-Reply-To: <19294.20484.362175.286202@ron.nulle.part>
References: <4B5E49D9.7000403@redhat.com>
	<19294.20484.362175.286202@ron.nulle.part>
Message-ID: <4B5E8A5A.4050504@redhat.com>

On 01/25/2010 09:14 PM, Dirk Eddelbuettel wrote:
> I cannot replicate this on Debian. The error gets trapped just fine. This may
> be particular to your builds or setup. I don;t see an R error (but of course
> do not speak for R Core). Here is a short version, it is the same in normal
> interactive mode.

I don't think Debian builds with stack protection in glibc, whereas
Fedora does (and I think Ubuntu Hardy and onward also do).

~spot


From edd at debian.org  Tue Jan 26 12:17:16 2010
From: edd at debian.org (Dirk Eddelbuettel)
Date: Tue, 26 Jan 2010 05:17:16 -0600
Subject: [Rd] Stack smashing in RODBC
In-Reply-To: <4B5E8A5A.4050504@redhat.com>
References: <4B5E49D9.7000403@redhat.com>
	<19294.20484.362175.286202@ron.nulle.part>
	<4B5E8A5A.4050504@redhat.com>
Message-ID: <19294.53052.112201.63442@ron.nulle.part>


On 26 January 2010 at 01:23, "Tom \"spot\" Callaway" wrote:
| On 01/25/2010 09:14 PM, Dirk Eddelbuettel wrote:
| > I cannot replicate this on Debian. The error gets trapped just fine. This may
| > be particular to your builds or setup. I don;t see an R error (but of course
| > do not speak for R Core). Here is a short version, it is the same in normal
| > interactive mode.
| 
| I don't think Debian builds with stack protection in glibc, whereas
| Fedora does (and I think Ubuntu Hardy and onward also do).

As I get the exact same result on Ubuntu, I continue to suspect that the
issue with Fedora.

edd at joe:~$ echo 'library(RODBC); channel <- odbcConnect("foo", uid="bar")' | R --slave
Warning messages:
1: In odbcDriverConnect("DSN=foo;UID=bar") :
  [RODBC] ERROR: state IM002, code 0, message [unixODBC][Driver Manager]Data source name not found, and no default driver specified
2: In odbcDriverConnect("DSN=foo;UID=bar") : ODBC connection failed
edd at joe:~$ COLUMNS=78 dpkg -l r-base-core r-cran-rodbc | tail -2
ii  r-base-core    2.10.1-2karmic GNU R core of statistical computation and gr
ii  r-cran-rodbc   1.3-1-1karmic0 GNU R package for ODBC database access
edd at joe:~$

FWIW, on Debian and Ubuntu, unixodbc_2.2.11 is used.

Dirk

-- 
Three out of two people have difficulties with fractions.


From ctelmo at ua.pt  Mon Jan 25 17:20:09 2010
From: ctelmo at ua.pt (ctelmo at ua.pt)
Date: Mon, 25 Jan 2010 17:20:09 +0100 (CET)
Subject: [Rd] tm installation (PR#14193)
Message-ID: <20100125162009.377CD282EF42@mail.pubhealth.ku.dk>

Full_Name: Cesar Telmo Costa
Version: R version 2.9.2 (2009-08-24)
OS: Ubuntu kermic
Submission from: (NULL) (85.241.174.237)


AFTER install.packages("tm"):

downloaded 317 Kb

* Installing *source* package ?tm? ...
** libs
gcc -std=gnu99 -I/usr/share/R/include      -fpic  -g -O2 -c lazyTmMap.c -o
lazyTmMap.o
gcc -std=gnu99 -shared -o tm.so lazyTmMap.o -L/usr/lib/R/lib -lR
** R
** data
** inst
** preparing package for lazy loading
Error in setOldClass(c("VCorpus", "Corpus", "list")) :
  inconsistent old-style class information for "list"; the class is defined but
does not extend "oldClass"
Error : unable to load R code in package 'tm'
ERROR: lazy loading failed for package ?tm?
* Removing ?/home/ctelmo/R/i486-pc-linux-gnu-library/2.9/tm?
* Restoring previous ?/home/ctelmo/R/i486-pc-linux-gnu-library/2.9/tm?

The downloaded packages are in
        ?/tmp/RtmptL3R1F/downloaded_packages?
Warning message:
In install.packages("tm") :
  installation of package 'tm' had non-zero exit status


From han at enfor.dk  Tue Jan 26 11:05:13 2010
From: han at enfor.dk (han at enfor.dk)
Date: Tue, 26 Jan 2010 11:05:13 +0100 (CET)
Subject: [Rd] Residual DF of NLS models (PR#14194)
Message-ID: <20100126100513.1E8F0282EFFB@mail.pubhealth.ku.dk>

Full_Name: Henrik Aalborg Nielsen
Version: 2.10
OS: Linux (SLES 10 / openSUSE 11.1)
Submission from: (NULL) (77.66.63.89)


There seems to be a bug in df.residual.nls which is triggered when nls is called
with argument na.action = na.exclude; in that case 'resid(object)' will contain
NA-values which should be disregarded when counting the number of residuals:

df.residual.nls <- function(object, ...) {
    w <- object$weights
    n <- if(!is.null(w)) sum(w != 0) else length(resid(object))
    n - length(coef(object))
}

The bug cause the F-test of anova.nls to be wrong.

Replace 'length(resid(object))' with 'sum(!is.na(resid(object)))' ?

... and thank you for producing this fantastic software!

BR
Henrik


From ripley at stats.ox.ac.uk  Tue Jan 26 13:04:23 2010
From: ripley at stats.ox.ac.uk (Prof Brian Ripley)
Date: Tue, 26 Jan 2010 12:04:23 +0000 (GMT)
Subject: [Rd] Residual DF of NLS models (PR#14194)
In-Reply-To: <20100126100513.1E8F0282EFFB@mail.pubhealth.ku.dk>
References: <20100126100513.1E8F0282EFFB@mail.pubhealth.ku.dk>
Message-ID: <alpine.LFD.2.00.1001261203440.4260@auk.stats.ox.ac.uk>

Can we please have a reproducible example (as we did ask in the 
FAQ, the posting guide ...).

On Tue, 26 Jan 2010, han at enfor.dk wrote:

> Full_Name: Henrik Aalborg Nielsen
> Version: 2.10
> OS: Linux (SLES 10 / openSUSE 11.1)
> Submission from: (NULL) (77.66.63.89)
>
>
> There seems to be a bug in df.residual.nls which is triggered when nls is called
> with argument na.action = na.exclude; in that case 'resid(object)' will contain
> NA-values which should be disregarded when counting the number of residuals:
>
> df.residual.nls <- function(object, ...) {
>    w <- object$weights
>    n <- if(!is.null(w)) sum(w != 0) else length(resid(object))
>    n - length(coef(object))
> }
>
> The bug cause the F-test of anova.nls to be wrong.
>
> Replace 'length(resid(object))' with 'sum(!is.na(resid(object)))' ?
>
> ... and thank you for producing this fantastic software!
>
> BR
> Henrik
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>

-- 
Brian D. Ripley,                  ripley at stats.ox.ac.uk
Professor of Applied Statistics,  http://www.stats.ox.ac.uk/~ripley/
University of Oxford,             Tel:  +44 1865 272861 (self)
1 South Parks Road,                     +44 1865 272866 (PA)
Oxford OX1 3TG, UK                Fax:  +44 1865 272595


From ligges at statistik.tu-dortmund.de  Tue Jan 26 13:25:43 2010
From: ligges at statistik.tu-dortmund.de (ligges at statistik.tu-dortmund.de)
Date: Tue, 26 Jan 2010 13:25:43 +0100 (CET)
Subject: [Rd] tm installation (PR#14193)
Message-ID: <20100126122543.B83572830314@mail.pubhealth.ku.dk>



On 25.01.2010 17:20, ctelmo at ua.pt wrote:
> Full_Name: Cesar Telmo Costa
> Version: R version 2.9.2 (2009-08-24)
> OS: Ubuntu kermic
> Submission from: (NULL) (85.241.174.237)
>
>
> AFTER install.packages("tm"):


- A problem with a contributed package is *not* a bug in R, it *may be* 
one in the package.
- Such problems should be reported to the package maintainer.
- Please always test with the current release version of R (which 
happens to be R-2.10.1) before reporting.
- In this case I suspect the package maintainer (CCing) forgot to 
declare the package to depend on R >= 2.10.0 (untested!).

Uwe Ligges





> downloaded 317 Kb
>
> * Installing *source* package ?tm? ...
> ** libs
> gcc -std=gnu99 -I/usr/share/R/include      -fpic  -g -O2 -c lazyTmMap.c -o
> lazyTmMap.o
> gcc -std=gnu99 -shared -o tm.so lazyTmMap.o -L/usr/lib/R/lib -lR
> ** R
> ** data
> ** inst
> ** preparing package for lazy loading
> Error in setOldClass(c("VCorpus", "Corpus", "list")) :
>    inconsistent old-style class information for "list"; the class is defined but
> does not extend "oldClass"
> Error : unable to load R code in package 'tm'
> ERROR: lazy loading failed for package ?tm?
> * Removing ?/home/ctelmo/R/i486-pc-linux-gnu-library/2.9/tm?
> * Restoring previous ?/home/ctelmo/R/i486-pc-linux-gnu-library/2.9/tm?
>
> The downloaded packages are in
>          ?/tmp/RtmptL3R1F/downloaded_packages?
> Warning message:
> In install.packages("tm") :
>    installation of package 'tm' had non-zero exit status
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From tcallawa at redhat.com  Tue Jan 26 15:39:36 2010
From: tcallawa at redhat.com (Tom "spot" Callaway)
Date: Tue, 26 Jan 2010 09:39:36 -0500
Subject: [Rd] Stack smashing in RODBC
In-Reply-To: <19294.53052.112201.63442@ron.nulle.part>
References: <4B5E49D9.7000403@redhat.com>	<19294.20484.362175.286202@ron.nulle.part>	<4B5E8A5A.4050504@redhat.com>
	<19294.53052.112201.63442@ron.nulle.part>
Message-ID: <4B5EFEA8.9090209@redhat.com>

On 01/26/2010 06:17 AM, Dirk Eddelbuettel wrote:
> 
> On 26 January 2010 at 01:23, "Tom \"spot\" Callaway" wrote:
> | On 01/25/2010 09:14 PM, Dirk Eddelbuettel wrote:
> | > I cannot replicate this on Debian. The error gets trapped just fine. This may
> | > be particular to your builds or setup. I don;t see an R error (but of course
> | > do not speak for R Core). Here is a short version, it is the same in normal
> | > interactive mode.
> | 
> | I don't think Debian builds with stack protection in glibc, whereas
> | Fedora does (and I think Ubuntu Hardy and onward also do).
> 
> As I get the exact same result on Ubuntu, I continue to suspect that the
> issue with Fedora.

We're not modifying the RODBC or R code at all, so I suspect that it is
a legitimate bug that Fedora is better at reproducing.

The Fedora optflags tend to be more restrictive than some other Linux
distributions, here is how RODBC is compiled by default:

gcc -m32 -std=gnu99 -I/usr/include/R -I. -I/usr/local/include    -fpic
-O2 -g -pipe -Wall -Wp,-D_FORTIFY_SOURCE=2 -fexceptions
-fstack-protector --param=ssp-buffer-size=4 -m32 -march=i686 -mtune=atom
-fasynchronous-unwind-tables -c RODBC.c -o RODBC.o
gcc -m32 -std=gnu99 -shared -L/usr/local/lib -o RODBC.so RODBC.o -lodbc
-L/usr/lib/R/lib -lR

I compiled RODBC without any -O and with -ggdb for debugging, but it
didn't prevent the crash.

[spot at f12.i386 ~]$ echo 'library(RODBC); channel <- odbcConnect("foo",
uid="bar")' | R --slave
*** stack smashing detected ***: /usr/lib/R/bin/exec/R terminated
======= Backtrace: =========
/lib/libc.so.6(__fortify_fail+0x4d)[0x2041ed]
/lib/libc.so.6(-0xffa62e66)[0x20419a]
/usr/lib/R/library/RODBC/libs/RODBC.so(+0x6164)[0x2c9164]
/usr/lib/R/library/RODBC/libs/RODBC.so(RODBCDriverConnect+0x4ed)[0x2c5072]
/usr/lib/R/lib/libR.so[0x85c01c]
/usr/lib/R/lib/libR.so(Rf_eval+0x7f2)[0x87fa82]
/usr/lib/R/lib/libR.so[0x881fd5]
/usr/lib/R/lib/libR.so(Rf_eval+0x568)[0x87f7f8]
/usr/lib/R/lib/libR.so[0x8820eb]
/usr/lib/R/lib/libR.so(Rf_eval+0x568)[0x87f7f8]
/usr/lib/R/lib/libR.so(Rf_applyClosure+0x2e7)[0x883ac7]
/usr/lib/R/lib/libR.so(Rf_eval+0x40d)[0x87f69d]
/usr/lib/R/lib/libR.so[0x88043a]
/usr/lib/R/lib/libR.so[0x8cbe9e]
/usr/lib/R/lib/libR.so(Rf_eval+0x568)[0x87f7f8]
/usr/lib/R/lib/libR.so(Rf_applyClosure+0x2e7)[0x883ac7]
/usr/lib/R/lib/libR.so(Rf_eval+0x40d)[0x87f69d]
/usr/lib/R/lib/libR.so[0x8820eb]
/usr/lib/R/lib/libR.so(Rf_eval+0x568)[0x87f7f8]
/usr/lib/R/lib/libR.so(Rf_applyClosure+0x2e7)[0x883ac7]
/usr/lib/R/lib/libR.so(Rf_eval+0x40d)[0x87f69d]
/usr/lib/R/lib/libR.so[0x8820eb]
/usr/lib/R/lib/libR.so(Rf_eval+0x568)[0x87f7f8]
/usr/lib/R/lib/libR.so(Rf_applyClosure+0x2e7)[0x883ac7]
/usr/lib/R/lib/libR.so(Rf_eval+0x40d)[0x87f69d]
/usr/lib/R/lib/libR.so[0x881fd5]
/usr/lib/R/lib/libR.so(Rf_eval+0x568)[0x87f7f8]
/usr/lib/R/lib/libR.so(Rf_ReplIteration+0x23d)[0x8ba64d]
/usr/lib/R/lib/libR.so[0x8ba9a5]
/usr/lib/R/lib/libR.so(run_Rmainloop+0x66)[0x8bb236]
/usr/lib/R/lib/libR.so(Rf_mainloop+0x1d)[0x8bb26d]
/usr/lib/R/bin/exec/R(main+0x39)[0x8048699]
/lib/libc.so.6(__libc_start_main+0xe6)[0x126bb6]
/usr/lib/R/bin/exec/R[0x8048591]
======= Memory map: ========
00110000-0027f000 r-xp 00000000 fd:00 463        /lib/libc-2.11.1.so
0027f000-00281000 r--p 0016e000 fd:00 463        /lib/libc-2.11.1.so
00281000-00282000 rw-p 00170000 fd:00 463        /lib/libc-2.11.1.so
00282000-00285000 rw-p 00000000 00:00 0
00285000-0029b000 r-xp 00000000 fd:00 17315      /lib/libtinfo.so.5.7
0029b000-0029e000 rw-p 00015000 fd:00 17315      /lib/libtinfo.so.5.7
0029e000-002bb000 r-xp 00000000 fd:00 356
/lib/libgcc_s-4.4.2-20091222.so.1
002bb000-002bc000 rw-p 0001c000 fd:00 356
/lib/libgcc_s-4.4.2-20091222.so.1
002bc000-002c2000 r-xp 00000000 fd:00 225678
/usr/lib/R/library/methods/libs/methods.so
002c2000-002c3000 rw-p 00005000 fd:00 225678
/usr/lib/R/library/methods/libs/methods.so
002c3000-002cb000 r-xp 00000000 fd:00 227777
/usr/lib/R/library/RODBC/libs/RODBC.so
002cb000-002cc000 rw-p 00007000 fd:00 227777
/usr/lib/R/library/RODBC/libs/RODBC.so
002cc000-002cd000 rw-p 00000000 00:00 0
002cd000-00339000 r-xp 00000000 fd:00 25406      /usr/lib/libodbc.so.2.0.0
00339000-0033e000 rw-p 0006b000 fd:00 25406      /usr/lib/libodbc.so.2.0.0
00487000-004a5000 r-xp 00000000 fd:00 462        /lib/ld-2.11.1.so
004a5000-004a6000 r--p 0001d000 fd:00 462        /lib/ld-2.11.1.so
004a6000-004a7000 rw-p 0001e000 fd:00 462        /lib/ld-2.11.1.so
004e2000-00538000 r-xp 00000000 fd:00 226761
/usr/lib/R/library/stats/libs/stats.so
00538000-0053a000 rw-p 00055000 fd:00 226761
/usr/lib/R/library/stats/libs/stats.so
0053c000-0053d000 r-xp 00000000 00:00 0          [vdso]
005bd000-005c8000 r-xp 00000000 fd:00 31904      /lib/libnss_files-2.11.1.so
005c8000-005c9000 r--p 0000a000 fd:00 31904      /lib/libnss_files-2.11.1.so
005c9000-005ca000 rw-p 0000b000 fd:00 31904      /lib/libnss_files-2.11.1.so
00620000-00623000 r-xp 00000000 fd:00 479        /lib/libdl-2.11.1.so
00623000-00624000 r--p 00002000 fd:00 479        /lib/libdl-2.11.1.so
00624000-00625000 rw-p 00003000 fd:00 479        /lib/libdl-2.11.1.so
00627000-0063d000 r-xp 00000000 fd:00 476        /lib/libpthread-2.11.1.so
0063d000-0063e000 r--p 00015000 fd:00 476        /lib/libpthread-2.11.1.so
0063e000-0063f000 rw-p 00016000 fd:00 476        /lib/libpthread-2.11.1.so
0063f000-00641000 rw-p 00000000 00:00 0
00643000-0066b000 r-xp 00000000 fd:00 478        /lib/libm-2.11.1.so
0066b000-0066c000 r--p 00027000 fd:00 478        /lib/libm-2.11.1.so
0066c000-0066d000 rw-p 00028000 fd:00 478        /lib/libm-2.11.1.so
0067a000-0068c000 r-xp 00000000 fd:00 630        /lib/libz.so.1.2.3
0068c000-0068d000 rw-p 00011000 fd:00 630        /lib/libz.so.1.2.3
0068f000-00764000 r-xp 00000000 fd:00 24537
/usr/lib/libgfortran.so.3.0.0
00764000-00766000 rw-p 000d4000 fd:00 24537
/usr/lib/libgfortran.so.3.0.0
00768000-00790000 r-xp 00000000 fd:00 138492     /usr/lib/R/lib/libRblas.so
00790000-00791000 rw-p 00027000 fd:00 138492     /usr/lib/R/lib/libRblas.so
0079a000-007cf000 r-xp 00000000 fd:00 17316      /lib/libreadline.so.6.0
007cf000-007d3000 rw-p 00035000 fd:00 17316      /lib/libreadline.so.6.0
007d3000-007d4000 rw-p 00000000 00:00 0
007d6000-00a46000 r-xp 00000000 fd:00 138529     /usr/lib/R/lib/libR.so
00a46000-00a54000 rw-p 00270000 fd:00 138529     /usr/lib/R/lib/libR.so
00a54000-00aea000 rw-p 00000000 00:00 0
00d17000-00d36000 r-xp 00000000 fd:00 225135
/usr/lib/R/library/grDevices/libs/grDevices.so
00d36000-00d37000 rw-p 0001f000 fd:00 225135
/usr/lib/R/library/grDevices/libs/grDevices.so
04c8d000-04d6a000 r-xp 00000000 fd:00 546
/usr/lib/libstdc++.so.6.0.13
04d6a000-04d6e000 r--p 000dc000 fd:00 546
/usr/lib/libstdc++.so.6.0.13
04d6e000-04d70000 rw-p 000e0000 fd:00 546
/usr/lib/libstdc++.so.6.0.13
04d70000-04d76000 rw-p 00000000 00:00 0
04da8000-04dd7000 r-xp 00000000 fd:00 20052      /lib/libpcre.so.0.0.1
04dd7000-04dd8000 rw-p 0002e000 fd:00 20052      /lib/libpcre.so.0.0.1
050f6000-05106000 r-xp 00000000 fd:00 18599      /lib/libbz2.so.1.0.4
05106000-05107000 rw-p 00010000 fd:00 18599      /lib/libbz2.so.1.0.4
05109000-05112000 r-xp 00000000 fd:00 19476      /usr/lib/libltdl.so.7.2.1
05112000-05113000 rw-p 00008000 fd:00 19476      /usr/lib/libltdl.so.7.2.1
059e1000-05b9f000 r-xp 00000000 fd:00 13610      /usr/lib/libicui18n.so.42.1
05b9f000-05ba6000 rw-p 001be000 fd:00 13610      /usr/lib/libicui18n.so.42.1
05ba8000-05cf5000 r-xp 00000000 fd:00 20040      /usr/lib/libicuuc.so.42.1
05cf5000-05d00000 rw-p 0014c000 fd:00 20040      /usr/lib/libicuuc.so.42.1
05d00000-05d01000 rw-p 00000000 00:00 0
05dd6000-06d1b000 r-xp 00000000 fd:00 20039      /usr/lib/libicudata.so.42.1
06d1b000-06d1c000 rw-p 00f44000 fd:00 20039      /usr/lib/libicudata.so.42.1
08048000-08049000 r-xp 00000000 fd:00 223583     /usr/lib/R/bin/exec/R
08049000-0804b000 rw-p 00000000 fd:00 223583     /usr/lib/R/bin/exec/R
09864000-0a3da000 rw-p 00000000 00:00 0          [heap]
b746e000-b7582000 rw-p 00000000 00:00 0
b7582000-b7589000 r--s 00000000 fd:00 942
/usr/lib/gconv/gconv-modules.cache
b7589000-b75ce000 rw-p 00000000 00:00 0
b75cf000-b75d0000 rw-s 00000000 00:08 1146901    /SYSV79002790 (deleted)
b75d0000-b7643000 rw-p 00000000 00:00 0
b7643000-b7843000 r--p 00000000 fd:00 56084
/usr/lib/locale/locale-archive
b7843000-b7849000 rw-p 00000000 00:00 0
bfe3f000-bfe5d000 rw-p 00000000 00:00 0          [stack]Aborted

> FWIW, on Debian and Ubuntu, unixodbc_2.2.11 is used.

On Fedora 12, we're using:

glibc-2.11.1-1.i686
unixODBC-2.2.14-9.fc12.i686

The newer glibc may be better at detecting stack smashing, or the newer
unixODBC could be doing something differently from 2.2.11.

~spot


From tlumley at u.washington.edu  Tue Jan 26 23:14:46 2010
From: tlumley at u.washington.edu (Thomas Lumley)
Date: Tue, 26 Jan 2010 14:14:46 -0800 (PST)
Subject: [Rd] AD:  advanced R course - June 28-30, Seattle.
Message-ID: <alpine.LRH.2.01.1001261414460.18346@hymn32.u.washington.edu>



The Summer Institute in Statistical Genetics at the University of Washington will include a 2.5 day course in Advanced R Programming, on June 28-30. 

The course will cover object-oriented programming, SQL and netCDF data access, calling compiled code, creating R packages, and using some of the software infrastructure from the Bioconductor project.

The instructors will be Thomas Lumley and Ken Rice. 

Further details on this and the other 21 modules at the Summer Institute are available from http://sisg.biostat.washington.edu/.  I will just note that this is the University of Washington, in Seattle (not DC, or St Louis) and that  June 28-30 is at the beginning of Seattle's non-rainy season

     -thomas

Thomas Lumley			Assoc. Professor, Biostatistics
tlumley at u.washington.edu	University of Washington, Seattle


From han at enfor.dk  Tue Jan 26 14:21:15 2010
From: han at enfor.dk (Henrik Aalborg Nielsen)
Date: Tue, 26 Jan 2010 14:21:15 +0100
Subject: [Rd] Residual DF of NLS models (PR#14194)
In-Reply-To: <alpine.LFD.2.00.1001261203440.4260@auk.stats.ox.ac.uk>
References: <20100126100513.1E8F0282EFFB@mail.pubhealth.ku.dk>
	<alpine.LFD.2.00.1001261203440.4260@auk.stats.ox.ac.uk>
Message-ID: <1264512075.5321.117.camel@laptop2>

OK - I do think the bug is pretty obvious when looking at the code (and
remembering that resid(object) may contain NA's). Anyway, I've attached
a script and the output (from 'R CMD BATCH --vanilla').

BR
Henrik


On Tue, 2010-01-26 at 12:04 +0000, Prof Brian Ripley wrote:

> Can we please have a reproducible example (as we did ask in the 
> FAQ, the posting guide ...).
> 
> On Tue, 26 Jan 2010, han at enfor.dk wrote:
> 
> > Full_Name: Henrik Aalborg Nielsen
> > Version: 2.10
> > OS: Linux (SLES 10 / openSUSE 11.1)
> > Submission from: (NULL) (77.66.63.89)
> >
> >
> > There seems to be a bug in df.residual.nls which is triggered when nls is called
> > with argument na.action = na.exclude; in that case 'resid(object)' will contain
> > NA-values which should be disregarded when counting the number of residuals:
> >
> > df.residual.nls <- function(object, ...) {
> >    w <- object$weights
> >    n <- if(!is.null(w)) sum(w != 0) else length(resid(object))
> >    n - length(coef(object))
> > }
> >
> > The bug cause the F-test of anova.nls to be wrong.
> >
> > Replace 'length(resid(object))' with 'sum(!is.na(resid(object)))' ?
> >
> > ... and thank you for producing this fantastic software!
> >
> > BR
> > Henrik
> >
> > ______________________________________________
> > R-devel at r-project.org mailing list
> > https://stat.ethz.ch/mailman/listinfo/r-devel
> >
> 
-------------- next part --------------

R version 2.10.1 (2009-12-14)
Copyright (C) 2009 The R Foundation for Statistical Computing
ISBN 3-900051-07-0

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ## Example demonstating bug PR#14194 (based on the help-page of nls)
> 
> utils::data(muscle, package = "MASS")
> 
> musc.1 <- nls(Length ~ cbind(1, exp(-Conc/th)), muscle,
+               start = list(th=1), algorithm="plinear")
> 
> b <- coef(musc.1)
> musc.2 <- nls(Length ~ a[Strip] + b[Strip]*exp(-Conc/th),
+               muscle,
+               start = list(a=rep(b[2],21), b=rep(b[3],21), th=b[1]))
> 
> ## Adding data with response 'NA'
> muscle2 <- muscle
> muscle2[,"Length"] <- NA
> muscle2 <- rbind(muscle, muscle2)
> 
> musc2.1 <- nls(Length ~ cbind(1, exp(-Conc/th)), muscle2, na.action=na.exclude,
+               start = list(th=1), algorithm="plinear")
> 
> b <- coef(musc2.1)
> musc2.2 <- nls(Length ~ a[Strip] + b[Strip]*exp(-Conc/th),
+               muscle2, na.action=na.exclude,
+               start = list(a=rep(b[2],21), b=rep(b[3],21), th=b[1]))
> 
> ## Thes two ANOVA's should be identical:
> anova(musc.1, musc.2)
Analysis of Variance Table

Model 1: Length ~ cbind(1, exp(-Conc/th))
Model 2: Length ~ a[Strip] + b[Strip] * exp(-Conc/th)
  Res.Df Res.Sum Sq Df Sum Sq F value    Pr(>F)    
1     57    1241.09                                
2     17      21.13 40 1220.0  24.538 2.721e-09 ***
---
Signif. codes:  0 ???***??? 0.001 ???**??? 0.01 ???*??? 0.05 ???.??? 0.1 ??? ??? 1 
> anova(musc2.1, musc2.2)
Analysis of Variance Table

Model 1: Length ~ cbind(1, exp(-Conc/th))
Model 2: Length ~ a[Strip] + b[Strip] * exp(-Conc/th)
  Res.Df Res.Sum Sq Df Sum Sq F value    Pr(>F)    
1    117    1241.09                                
2     77      21.13 40 1220.0  111.14 < 2.2e-16 ***
---
Signif. codes:  0 ???***??? 0.001 ???**??? 0.01 ???*??? 0.05 ???.??? 0.1 ??? ??? 1 
> ## ... but the F-values are different.
> 
> ## DF:
> df.residual(musc.1)
[1] 57
> df.residual(musc2.1)
[1] 117
> length(residuals(musc2.1))
[1] 120
> sum(!is.na(residuals(musc2.1))) - length(coef(musc2.1))
[1] 57
> 
> ## Workaround:
> anova(update(musc2.1, na.action=na.omit), update(musc2.2, na.action=na.omit))
Analysis of Variance Table

Model 1: Length ~ cbind(1, exp(-Conc/th))
Model 2: Length ~ a[Strip] + b[Strip] * exp(-Conc/th)
  Res.Df Res.Sum Sq Df Sum Sq F value    Pr(>F)    
1     57    1241.09                                
2     17      21.13 40 1220.0  24.538 2.721e-09 ***
---
Signif. codes:  0 ???***??? 0.001 ???**??? 0.01 ???*??? 0.05 ???.??? 0.1 ??? ??? 1 
> 
> proc.time()
   user  system elapsed 
  0.376   0.028   0.398 

From mfay at niaid.nih.gov  Tue Jan 26 19:55:10 2010
From: mfay at niaid.nih.gov (mfay at niaid.nih.gov)
Date: Tue, 26 Jan 2010 19:55:10 +0100 (CET)
Subject: [Rd] poisson.test from stats package does not pass the conf.level
	(PR#14195)
Message-ID: <20100126185512.911402830319@mail.pubhealth.ku.dk>

Hi,

The poisson.test function from stats package does not pass the conf.level p=
arameter for the two-sample test. Here is an example:

poisson.test(c(2,4),c(20,14),conf.level=3D.95)$conf.int
poisson.test(c(2,4),c(20,14),conf.level=3D.9)$conf.int


Here is the solution, change:

        RVAL <- binom.test(x, sum(x), r * T[1]/(r * T[1] + T[2]),
            alternative =3D alternative)

to:

        RVAL <- binom.test(x, sum(x), r * T[1]/(r * T[1] + T[2]),
            alternative =3D alternative, conf.level=3Dconf.level)



Mike

--please do not edit the information below--

Version:
 platform =3D i386-pc-mingw32
 arch =3D i386
 os =3D mingw32
 system =3D i386, mingw32
 status =3D
 major =3D 2
 minor =3D 10.1
 year =3D 2009
 month =3D 12
 day =3D 14
 svn rev =3D 50720
 language =3D R
 version.string =3D R version 2.10.1 (2009-12-14)

Windows XP (build 2600) Service Pack 2

Locale:
LC_COLLATE=3DEnglish_United States.1252;LC_CTYPE=3DEnglish_United States.12=
52;LC_MONETARY=3DEnglish_United States.1252;LC_NUMERIC=3DC;LC_TIME=3DEnglis=
h_United States.1252

Search Path:
 .GlobalEnv, package:stats, package:graphics, package:grDevices, package:ut=
ils, package:datasets, package:methods, Autoloads, package:base

******************************************************************
Michael P. Fay, PhD
Mathematical Statistician
National Institute of Allergy and Infectious Diseases
Tel: 301-451-5124               Fax:301-480-0912
(U.S. postal mail address)
6700B Rockledge Drive MSC 7609
Bethesda, MD 20892-7609
(Overnight mail address)
6700-A Rockledge Drive, Room 5133
Bethesda, MD 20817
http://www3.niaid.nih.gov/about/organization/dcr/BRB/staff/michael.htm
**********************************************************************
Disclaimer:
The information in this e-mail and any of its attachment...{{dropped:3}}


From oscar.perpinan at upm.es  Wed Jan 27 11:01:55 2010
From: oscar.perpinan at upm.es (Oscar =?UTF-8?B?UGVycGnDsWFu?= Lamigueiro)
Date: Wed, 27 Jan 2010 11:01:55 +0100
Subject: [Rd] Depends, Suggests and .First.lib
Message-ID: <20100127110155.79d660b5@upm.es>

Dear all,

I am working in the development of a package with more or less 25 functions. Most of them do not have dependencies on other extra packages. However, I am including three GUIs for the most important functions of the package. These three GUIs need the gWidgets package. Moreover, there is another function which makes use of latticeExtra and latticedl. 
Since these three packages are not needed for successfully load my package I understand, following the guidelines of "Writing R Extensions", that they do not need to be included under "Depends" but under "Suggests". But I am including the GUIs as a help for those people who are reluctant to the use of a console, so I would prefer these dependencies to be loaded automatically. Therefore I have written a zzz.R with this .First.lib function:

.First.lib <- function(lib, pkg){	
 require(vcd, quietly = TRUE)
 if (!require(lattice, quietly = TRUE)) 
   warning('lattice package could not be loaded. Some 
   funcionalities may not be available')
 if (!require(latticedl, quietly = TRUE)) 
  warning('latticedl package could not be loaded. Some
  funcionalities may not be available')
 if (!require(latticeExtra, quietly = TRUE)) 
  warning('latticeExtra package could not be loaded. Some
  funcionalities may not be available')
 if (!(require(gWidgets, quietly = TRUE) && 
    (require(gWidgetstcltk, quietly = TRUE) || require(gWidgetsRGtk2, quietly = TRUE))))
    warning('gWidgets package or their associated packages could not be loaded. GUI funcionalities will not be available')
}
Perhaps it is better and easier to include these packages in "Depends" but I am not sure. I would appreciate your advice.

Another question is about the load of data. I am including two datasets which are used by two functions. They are small (about 6kB). Is it better to use LazyData:no or insert a data() inside the code of these two functions?

Thank you very much for your help.

Best regards.

Oscar Perpi??n Lamigueiro
Dpto. de Ingenier?a El?ctrica
EUITI-UPM


From nhorton at smith.edu  Wed Jan 27 18:30:10 2010
From: nhorton at smith.edu (nhorton at smith.edu)
Date: Wed, 27 Jan 2010 18:30:10 +0100 (CET)
Subject: [Rd] Possible bug in fisher.test() (PR#14196)
Message-ID: <20100127173010.77EEA282EF55@mail.pubhealth.ku.dk>

# is there a bug in the calculation of the odds ratio in fisher.test?
# Nicholas Horton, nhorton at smith.edu Fri Jan 22 08:29:07 EST 2010

x1 = c(rep(0, 244), rep(1, 209))
x2 = c(rep(0, 177), rep(1, 67), rep(0, 169), rep(1, 40))

or1 = sum(x1==1&x2==1)*sum(x1==0&x2==0)/
     (sum(x1==1&x2==0)*sum(x1==0&x2==1))

library(epitools)
or2 = oddsratio.wald(x1, x2)$measure[2,1]

or3 = fisher.test(x1, x2)$estimate

# or1=or2 = 0.625276, but or3=0.6259267!


I'm running R 2.10.1 under Mac OS X 10.6.2.

Nick

Nicholas Horton 
Department of Mathematics and Statistics, Smith College
Clark Science Center, Northampton, MA 01063-0001
http://www.math.smith.edu/~nhorton


From Ted.Harding at manchester.ac.uk  Wed Jan 27 19:14:59 2010
From: Ted.Harding at manchester.ac.uk ( (Ted Harding))
Date: Wed, 27 Jan 2010 18:14:59 -0000 (GMT)
Subject: [Rd] Possible bug in fisher.test() (PR#14196)
In-Reply-To: <20100127173010.77EEA282EF55@mail.pubhealth.ku.dk>
Message-ID: <XFMail.100127181459.Ted.Harding@manchester.ac.uk>

On 27-Jan-10 17:30:10, nhorton at smith.edu wrote:
># is there a bug in the calculation of the odds ratio in fisher.test?
># Nicholas Horton, nhorton at smith.edu Fri Jan 22 08:29:07 EST 2010
> 
> x1 = c(rep(0, 244), rep(1, 209))
> x2 = c(rep(0, 177), rep(1, 67), rep(0, 169), rep(1, 40))
> 
> or1 = sum(x1==1&x2==1)*sum(x1==0&x2==0)/
>      (sum(x1==1&x2==0)*sum(x1==0&x2==1))
> 
> library(epitools)
> or2 = oddsratio.wald(x1, x2)$measure[2,1]
> 
> or3 = fisher.test(x1, x2)$estimate
> 
># or1=or2 = 0.625276, but or3=0.6259267!
> 
> I'm running R 2.10.1 under Mac OS X 10.6.2.
> Nick

Not so. Look closely at ?fisher.test:

Value:
[...]
estimate: an estimate of the odds ratio.  Note that the
          _conditional_ Maximum Likelihood Estimate (MLE)
          rather than the unconditional MLE (the sample
          odds ratio) is used. Only present in the 2 by 2 case.

Your or1 (and presumably the epitools value also) is the sample OR.

The conditional MLE is the value of rho (the OR) that maximises
the probability of the table *conditional* on the margins.

In this case it differs slightly from the sample OR (by 0.1%).
For smaller tables it will tend to differ even more, e.g.

  M1 <- matrix(c(4,7,17,18),nrow=2)
  M1
  #      [,1] [,2]
  # [1,]    4   17
  # [2,]    7   18

  (4*18)/(17*7)
  # [1] 0.605042

  fisher.test(M1)$estimate
  # odds ratio 
  #     0.6116235  ## (1.1% larger than sample OR)

  M2 <- matrix(c(1,2,4,5),nrow=2)
  M2
  #      [,1] [,2]
  # [1,]    1    4
  # [2,]    2    5

  (1*5)/(4*2)
  # [1] 0.625

  fisher.test(M2)$estimate
  # odds ratio 
  #     0.649423  ## (3.9% larger than sample OR)

The probability of a table matrix(c(a,b,c,d),nrow=2) given
the marginals (a+b),(a+c),(b+c) and hence also (c+d) is
a function of the odds ratio only. Again see ?fisher.test:

  "given all marginal totals fixed, the first element of
   the contingency table has a non-central hypergeometric
   distribution with non-centrality parameter given by
   the odds ratio (Fisher, 1935)."

The value of the odds ratio which maximises this (for given
observed 'a') is not the sample OR.

Hoping this helps,
Ted.

--------------------------------------------------------------------
E-Mail: (Ted Harding) <Ted.Harding at manchester.ac.uk>
Fax-to-email: +44 (0)870 094 0861
Date: 27-Jan-10                                       Time: 18:14:57
------------------------------ XFMail ------------------------------


From p.dalgaard at biostat.ku.dk  Wed Jan 27 23:45:12 2010
From: p.dalgaard at biostat.ku.dk (Peter Dalgaard)
Date: Wed, 27 Jan 2010 23:45:12 +0100
Subject: [Rd] poisson.test from stats package does not pass the
 conf.level (PR#14195)
In-Reply-To: <20100126185512.911402830319@mail.pubhealth.ku.dk>
References: <20100126185512.911402830319@mail.pubhealth.ku.dk>
Message-ID: <4B60C1F8.5090006@biostat.ku.dk>

mfay at niaid.nih.gov wrote:
> Hi,
> 
> The poisson.test function from stats package does not pass the conf.level p=
> arameter for the two-sample test. Here is an example:
> 
> poisson.test(c(2,4),c(20,14),conf.level=3D.95)$conf.int
> poisson.test(c(2,4),c(20,14),conf.level=3D.9)$conf.int
> 
> 
> Here is the solution, change:
> 
>         RVAL <- binom.test(x, sum(x), r * T[1]/(r * T[1] + T[2]),
>             alternative =3D alternative)
> 
> to:
> 
>         RVAL <- binom.test(x, sum(x), r * T[1]/(r * T[1] + T[2]),
>             alternative =3D alternative, conf.level=3Dconf.level)


Now fixed in 2.10.1 patched and R-devel. Thanks.

-- 
    O__  ---- Peter Dalgaard             ?ster Farimagsgade 5, Entr.B
   c/ /'_ --- Dept. of Biostatistics     PO Box 2099, 1014 Cph. K
  (*) \(*) -- University of Copenhagen   Denmark      Ph:  (+45) 35327918
~~~~~~~~~~ - (p.dalgaard at biostat.ku.dk)              FAX: (+45) 35327907


From p.dalgaard at biostat.ku.dk  Wed Jan 27 23:50:09 2010
From: p.dalgaard at biostat.ku.dk (p.dalgaard at biostat.ku.dk)
Date: Wed, 27 Jan 2010 23:50:09 +0100 (CET)
Subject: [Rd] poisson.test from stats package does not pass the
	conf.level (PR#14197)
Message-ID: <20100127225009.4D60D282BEA9@mail.pubhealth.ku.dk>

mfay at niaid.nih.gov wrote:
> Hi,
> 
> The poisson.test function from stats package does not pass the conf.level p=
> arameter for the two-sample test. Here is an example:
> 
> poisson.test(c(2,4),c(20,14),conf.level=3D.95)$conf.int
> poisson.test(c(2,4),c(20,14),conf.level=3D.9)$conf.int
> 
> 
> Here is the solution, change:
> 
>         RVAL <- binom.test(x, sum(x), r * T[1]/(r * T[1] + T[2]),
>             alternative =3D alternative)
> 
> to:
> 
>         RVAL <- binom.test(x, sum(x), r * T[1]/(r * T[1] + T[2]),
>             alternative =3D alternative, conf.level=3Dconf.level)


Now fixed in 2.10.1 patched and R-devel. Thanks.

-- 
    O__  ---- Peter Dalgaard             ?ster Farimagsgade 5, Entr.B
   c/ /'_ --- Dept. of Biostatistics     PO Box 2099, 1014 Cph. K
  (*) \(*) -- University of Copenhagen   Denmark      Ph:  (+45) 35327918
~~~~~~~~~~ - (p.dalgaard at biostat.ku.dk)              FAX: (+45) 35327907


From p.murrell at auckland.ac.nz  Thu Jan 28 02:44:30 2010
From: p.murrell at auckland.ac.nz (Paul Murrell)
Date: Thu, 28 Jan 2010 14:44:30 +1300
Subject: [Rd] "Too many raster images" in devPS.c
In-Reply-To: <4B5200A0.7080503@embl.de>
References: <4B5200A0.7080503@embl.de>
Message-ID: <4B60EBFE.2020805@auckland.ac.nz>

Hi


Wolfgang Huber wrote:
> Hi,
> 
> I am finding the recently added [1] functionality of embedding raster 
> images into plots on R devices very useful! Thanks to Paul Murrell and 
> others for providing that. I noted that in 
> https://svn.r-project.org/R/trunk/src/library/grDevices/src/devPS.c
> a macro is defined: #define MAX_RASTERS 64, and consequently, I get
> 
> Error in grid.Call.graphics("L_raster", x$raster, x$x, x$y, x$width, 
> x$height,  :
>    Too many raster images
> 
> even for relatively innocent graphics, such as extensions of [2] (which 
> I made with Bioconductor's "splots" package). Besides that, I imagine 
> that raster images could be useful as 'glyphs' in various types of plots.
> 
> Besides the not so helpful option of patching that macro in my private 
> copy of R, is there an intention to extend this functionality to 
> accommodate for larger plots more generally?


A simple solution (given the current implementation) would be to allow 
the user to specify the max number of raster images when starting a PDF 
file, e.g., ...

pdf("plotwithlotsofimages.pdf", maxRaster=1024)

Would that suffice?

Paul


> [1] http://developer.r-project.org/Raster/raster-RFC.html
> [2] http://www.ebi.ac.uk/~huber/pub/Druggable_ratio_1_before.pdf
> 
> Thank you and best wishes,
>       Wolfgang
> 
> --
> Wolfgang Huber
> EMBL
> http://www.embl.de/research/units/genome_biology/huber/contact
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel

-- 
Dr Paul Murrell
Department of Statistics
The University of Auckland
Private Bag 92019
Auckland
New Zealand
64 9 3737599 x85392
paul at stat.auckland.ac.nz
http://www.stat.auckland.ac.nz/~paul/


From guillaume.yziquel at citycable.ch  Thu Jan 28 12:38:29 2010
From: guillaume.yziquel at citycable.ch (Guillaume Yziquel)
Date: Thu, 28 Jan 2010 12:38:29 +0100
Subject: [Rd] Problem with R math library.
Message-ID: <4B617735.9010204@citycable.ch>

Hello.

I've been working on my OCaml-R binding, and I quite pleased to see that 
it is functional, though far from being perfect or polished. You can 
find the gitweb webpage and the interface documentation at

	http://yziquel.homelinux.org/gitweb/?p=ocaml-r.git;a=tree
	http://yziquel.homelinux.org/topos/api/ocaml-r/index.html

I'm having unexpected trouble with the math library, though. The 
interface documentation is here:

	http://yziquel.homelinux.org/topos/api/ocaml-r/Rmath.html

For instance, for the norm_rand symbol, I have the following 
documentation comment:

> val norm_rand : unit -> float
> Random variates from the standard normal distribution. Bug: currently systematically returns -8.77332116900134373.

Any idea as to why the function systematically returns the same value? 
Is there a way the math library should be initialised?

All the best,

-- 
      Guillaume Yziquel
http://yziquel.homelinux.org/


From A.R.Runnalls at kent.ac.uk  Thu Jan 28 12:50:10 2010
From: A.R.Runnalls at kent.ac.uk (A.R.Runnalls at kent.ac.uk)
Date: Thu, 28 Jan 2010 12:50:10 +0100 (CET)
Subject: [Rd] src/main/platform.c (PR#14198)
Message-ID: <20100128115010.74E9F2831FEC@mail.pubhealth.ku.dk>

At line 312 in src/main/platform.c (at the latest svn revision, 51039):

    if (length(tl) >= 1 || !isNull(STRING_ELT(tl, 0)))

should not '||' read '&&'?  Likewise four lines later.

Andrew


From A.R.Runnalls at kent.ac.uk  Thu Jan 28 12:55:09 2010
From: A.R.Runnalls at kent.ac.uk (A.R.Runnalls at kent.ac.uk)
Date: Thu, 28 Jan 2010 12:55:09 +0100 (CET)
Subject: [Rd] src/library/grid/src/grid.c (PR#14199)
Message-ID: <20100128115509.C88CB2831FEC@mail.pubhealth.ku.dk>

At around line 2590, in function gridRect() in
src/library/grid/src/grid.c (at the latest svn revision, 50745), ought
not temp, www and hhh to be PROTECTed within this block?

Andrew


From edd at debian.org  Thu Jan 28 13:32:08 2010
From: edd at debian.org (Dirk Eddelbuettel)
Date: Thu, 28 Jan 2010 06:32:08 -0600
Subject: [Rd] Problem with R math library.
In-Reply-To: <4B617735.9010204@citycable.ch>
References: <4B617735.9010204@citycable.ch>
Message-ID: <19297.33736.990250.454097@ron.nulle.part>


Salut Guilluame,

On 28 January 2010 at 12:38, Guillaume Yziquel wrote:
| Hello.
| 
| I've been working on my OCaml-R binding, and I quite pleased to see that 
| it is functional, though far from being perfect or polished. You can 
| find the gitweb webpage and the interface documentation at
| 
| 	http://yziquel.homelinux.org/gitweb/?p=ocaml-r.git;a=tree
| 	http://yziquel.homelinux.org/topos/api/ocaml-r/index.html
| 
| I'm having unexpected trouble with the math library, though. The 
| interface documentation is here:
| 
| 	http://yziquel.homelinux.org/topos/api/ocaml-r/Rmath.html
| 
| For instance, for the norm_rand symbol, I have the following 
| documentation comment:
| 
| > val norm_rand : unit -> float
| > Random variates from the standard normal distribution. Bug: currently systematically returns -8.77332116900134373.
| 
| Any idea as to why the function systematically returns the same value? 
| Is there a way the math library should be initialised?

I think it is pretty clearly documented in R-exts:

  6.3 Random number generation
  ============================
  
  The interface to R's internal random number generation routines is
  
       double unif_rand();
       double norm_rand();
       double exp_rand();
  
  giving one uniform, normal or exponential pseudo-random variate.
  However, before these are used, the user must call
  
       GetRNGstate();
  
  and after all the required variates have been generated, call
  
       PutRNGstate();
  
  These essentially read in (or create) `.Random.seed' and write it out
  after use.

Dirk

| 
| All the best,
| 
| -- 
|       Guillaume Yziquel
| http://yziquel.homelinux.org/
| 
| ______________________________________________
| R-devel at r-project.org mailing list
| https://stat.ethz.ch/mailman/listinfo/r-devel

-- 
Three out of two people have difficulties with fractions.


From b.rowlingson at lancaster.ac.uk  Thu Jan 28 13:57:24 2010
From: b.rowlingson at lancaster.ac.uk (Barry Rowlingson)
Date: Thu, 28 Jan 2010 12:57:24 +0000
Subject: [Rd] Missing argument error message
Message-ID: <d8ad40b51001280457q1c51443p4ddbfc9a405cb3a@mail.gmail.com>

Back in the days of R 2.6, if you did this, you got this:

> z=function(x){x*2}
> z()
Error in z() : argument "x" is missing, with no default

 But now in this decade we get (for R 2.9 and 2.10):

> z=function(x){x*2}
> z()
Error in z() :
  element 1 is empty;
   the part of the args list of '*' being evaluated was:
   (x, 2)

Now I can see (after thinking about it) that what is happening is that
because of lazy evaluation or something the 'x' isn't getting spotted
as being empty until R tries to do x*2, which obviously maps to *(x,2)
in functional form. It's perfectly correct to say element 1 of the
args list of '*', being (x,2), is empty.

But which of those two errors above is clearer? I don't suppose much
can be done about this since it is going to the guts of modern R, and
I was surprised my initial searches didn't find hordes of confused
newbies. Just me then. It got me when I was doing a histogram of some
dates:

> hist(cases)
Error in inherits(breaks, "POSIXt") :
  element 1 is empty;
   the part of the args list of '.Internal' being evaluated was:
   (x, what, which)

 who what which? If the error had been "Error in hist(cases): argument
'breaks' is missing, with no default" you wouldn't be wasting your
time reading this now...

Barry

-- 
blog: http://geospaced.blogspot.com/
web: http://www.maths.lancs.ac.uk/~rowlings
web: http://www.rowlingson.com/
twitter: http://twitter.com/geospacedman
pics: http://www.flickr.com/photos/spacedman


From guillaume.yziquel at citycable.ch  Thu Jan 28 14:00:02 2010
From: guillaume.yziquel at citycable.ch (Guillaume Yziquel)
Date: Thu, 28 Jan 2010 14:00:02 +0100
Subject: [Rd] Problem with R math library.
In-Reply-To: <19297.33736.990250.454097@ron.nulle.part>
References: <4B617735.9010204@citycable.ch>
	<19297.33736.990250.454097@ron.nulle.part>
Message-ID: <4B618A52.6080805@citycable.ch>

Dirk Eddelbuettel a ?crit :
>
> Salut Guilluame,
>
> | > val norm_rand : unit -> float
> | > Random variates from the standard normal distribution. Bug: currently systematically returns -8.77332116900134373.
> | 
> | Any idea as to why the function systematically returns the same value? 
> | Is there a way the math library should be initialised?
> 
> I think it is pretty clearly documented in R-exts:
> 
>   However, before these are used, the user must call
>   
>        GetRNGstate();
>   
>   and after all the required variates have been generated, call
>   
>        PutRNGstate();
>   
>   These essentially read in (or create) `.Random.seed' and write it out
>   after use.

Fair enough. I admit I've been busy with low detail stuff, and omitted 
to come back to R-exts.

However, I have another question on which I do not find information (I 
found it once, but do not know how to find it again...): What's the big 
difference between using the R mathematical library in standalone mode 
and not in standalone mode? How does it translate in terms of C 
directives and linking modalities? I've noticed the MATHLIB_STANDALONE 
macro, but I do not know how I should use it...

All the best,

-- 
      Guillaume Yziquel
http://yziquel.homelinux.org/


From hrishimittal at gmail.com  Thu Jan 28 14:30:36 2010
From: hrishimittal at gmail.com (Hrishi Mittal)
Date: Thu, 28 Jan 2010 05:30:36 -0800 (PST)
Subject: [Rd] Missing argument error message
In-Reply-To: <d8ad40b51001280457q1c51443p4ddbfc9a405cb3a@mail.gmail.com>
References: <d8ad40b51001280457q1c51443p4ddbfc9a405cb3a@mail.gmail.com>
Message-ID: <1264685436352-1370342.post@n4.nabble.com>


Thanks for pointing this out Barry. I wonder what led to that change and if
there is a way to revert back to the old style. 

I suspect the reason you didn't find hordes of confused newbies is that
newbies don't read error messages.

-----
Hrishi Mittal
hrishimittal at gmail.com

Try  http://prettygraph.com Pretty Graph , the easiest way to make R-powered
graphs on the web.
-- 
View this message in context: http://n4.nabble.com/Missing-argument-error-message-tp1367421p1370342.html
Sent from the R devel mailing list archive at Nabble.com.


From ripley at stats.ox.ac.uk  Thu Jan 28 15:06:43 2010
From: ripley at stats.ox.ac.uk (Prof Brian Ripley)
Date: Thu, 28 Jan 2010 14:06:43 +0000 (GMT)
Subject: [Rd] Missing argument error message
In-Reply-To: <d8ad40b51001280457q1c51443p4ddbfc9a405cb3a@mail.gmail.com>
References: <d8ad40b51001280457q1c51443p4ddbfc9a405cb3a@mail.gmail.com>
Message-ID: <alpine.OSX.1.00.1001281357260.35355@tystie.local>

But in 2.10.1 patched

> z=function(x){x*2}
> z()
Error in x * 2 : 'x' is missing

[See the posting guide about checking current versions before posting 
...  My notes say the change was in 2.8.0 and a side effect of 
something else rather than deliberate.]

On Thu, 28 Jan 2010, Barry Rowlingson wrote:

> Back in the days of R 2.6, if you did this, you got this:
>
>> z=function(x){x*2}
>> z()
> Error in z() : argument "x" is missing, with no default
>
> But now in this decade we get (for R 2.9 and 2.10):
>
>> z=function(x){x*2}
>> z()
> Error in z() :
>  element 1 is empty;
>   the part of the args list of '*' being evaluated was:
>   (x, 2)
>
> Now I can see (after thinking about it) that what is happening is that
> because of lazy evaluation or something the 'x' isn't getting spotted
> as being empty until R tries to do x*2, which obviously maps to *(x,2)
> in functional form. It's perfectly correct to say element 1 of the
> args list of '*', being (x,2), is empty.
>
> But which of those two errors above is clearer? I don't suppose much
> can be done about this since it is going to the guts of modern R, and
> I was surprised my initial searches didn't find hordes of confused
> newbies. Just me then. It got me when I was doing a histogram of some
> dates:
>
>> hist(cases)
> Error in inherits(breaks, "POSIXt") :
>  element 1 is empty;
>   the part of the args list of '.Internal' being evaluated was:
>   (x, what, which)
>
> who what which? If the error had been "Error in hist(cases): argument
> 'breaks' is missing, with no default" you wouldn't be wasting your
> time reading this now...
>
> Barry
>
> --
> blog: http://geospaced.blogspot.com/
> web: http://www.maths.lancs.ac.uk/~rowlings
> web: http://www.rowlingson.com/
> twitter: http://twitter.com/geospacedman
> pics: http://www.flickr.com/photos/spacedman
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>

-- 
Brian D. Ripley,                  ripley at stats.ox.ac.uk
Professor of Applied Statistics,  http://www.stats.ox.ac.uk/~ripley/
University of Oxford,             Tel:  +44 1865 272861 (self)
1 South Parks Road,                     +44 1865 272866 (PA)
Oxford OX1 3TG, UK                Fax:  +44 1865 272595


From edd at debian.org  Thu Jan 28 15:18:16 2010
From: edd at debian.org (Dirk Eddelbuettel)
Date: Thu, 28 Jan 2010 08:18:16 -0600
Subject: [Rd] Problem with R math library. [and a minor bug report]
In-Reply-To: <4B618A52.6080805@citycable.ch>
References: <4B617735.9010204@citycable.ch>
	<19297.33736.990250.454097@ron.nulle.part>
	<4B618A52.6080805@citycable.ch>
Message-ID: <19297.40104.571725.824417@ron.nulle.part>


On 28 January 2010 at 14:00, Guillaume Yziquel wrote:
| Dirk Eddelbuettel a ?crit :
| >
| > Salut Guilluame,
| >
| > | > val norm_rand : unit -> float
| > | > Random variates from the standard normal distribution. Bug: currently systematically returns -8.77332116900134373.
| > | 
| > | Any idea as to why the function systematically returns the same value? 
| > | Is there a way the math library should be initialised?
| > 
| > I think it is pretty clearly documented in R-exts:
| > 
| >   However, before these are used, the user must call
| >   
| >        GetRNGstate();
| >   
| >   and after all the required variates have been generated, call
| >   
| >        PutRNGstate();
| >   
| >   These essentially read in (or create) `.Random.seed' and write it out
| >   after use.
| 
| Fair enough. I admit I've been busy with low detail stuff, and omitted 
| to come back to R-exts.
| 
| However, I have another question on which I do not find information (I 
| found it once, but do not know how to find it again...): What's the big 
| difference between using the R mathematical library in standalone mode 
| and not in standalone mode? How does it translate in terms of C 
| directives and linking modalities? I've noticed the MATHLIB_STANDALONE 
| macro, but I do not know how I should use it...

Well, Debian comes to the rescue. Do 'sudo apt-get install r-mathlib' to the
standalone library. Then copy the example file out, add the missing 'extern
N01type N01_kind;' (and that it is missing may well be a bug -- I used 2.10.1
here -- anyone from R Core listening in who can add the one line ?) 

   edd at ron:~> cp  /usr/share/doc/r-mathlib/examples/test.c /tmp/
   edd at ron:~> grep extern /tmp/test.c
   extern N01type N01_kind; /* from nmath/snorm.c */
   edd at ron:~> gcc  -o /tmp/mathlibtest  /tmp/test.c -lRmath -lm
   edd at ron:~> /tmp/mathlibtest 
   *** loaded '/tmp/mathlibtest'
   one normal 1.119638
   normal via BM -1.734578
   edd at ron:~> 

I hope this answers your questions -- the standalone math library links with
only its libRmath and nothing else from R. It also only consume Rmath.h
(which I put into /usr/include so you need no -I arguments to gcc).

Hope this helps,  Dirk

PS For reference, here is test.c with line edited in:

/*
 *  Mathlib : A C Library of Special Functions
 *  Copyright (C) 2000-7  The R Development Core Team
 *
 *  This program is free software; you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation; either version 2 of the License, or
 *  (at your option) any later version.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with this program; if not, a copy is available at
 *  http://www.r-project.org/Licenses/
 *
 */

#define MATHLIB_STANDALONE 1
#include <Rmath.h>

#include <stdio.h>
typedef enum {
    BUGGY_KINDERMAN_RAMAGE,
    AHRENS_DIETER,
    BOX_MULLER,
    USER_NORM,
    INVERSION,
    KINDERMAN_RAMAGE
} N01type;

extern N01type N01_kind; /* from nmath/snorm.c */
 
int
main(int argc, char** argv)
{
/* something to force the library to be included */
    qnorm(0.7, 0.0, 1.0, 0, 0);
    printf("*** loaded '%s'\n", argv[0]);
    set_seed(123, 456);
    N01_kind = AHRENS_DIETER;
    printf("one normal %f\n", norm_rand());
    set_seed(123, 456);
    N01_kind = BOX_MULLER;
    printf("normal via BM %f\n", norm_rand());
    
    return 0;
}


-- 
Three out of two people have difficulties with fractions.


From P.Dalgaard at biostat.ku.dk  Thu Jan 28 16:23:26 2010
From: P.Dalgaard at biostat.ku.dk (Peter Dalgaard)
Date: Thu, 28 Jan 2010 16:23:26 +0100
Subject: [Rd] src/library/grid/src/grid.c (PR#14199)
In-Reply-To: <20100128115509.C88CB2831FEC@mail.pubhealth.ku.dk>
References: <20100128115509.C88CB2831FEC@mail.pubhealth.ku.dk>
Message-ID: <4B61ABEE.1000805@biostat.ku.dk>

A.R.Runnalls at kent.ac.uk wrote:
> At around line 2590, in function gridRect() in
> src/library/grid/src/grid.c (at the latest svn revision, 50745), ought
> not temp, www and hhh to be PROTECTed within this block?

Plausible, provided that anything can allocate while those are being
used. Could you perhaps investigate that a little further? (Bug reports
should really contains exclamation points and not question marks...)


If unit() can allocate, then all constructs like

2565                 www = unit(xadj, L_INCHES);
2566                 hhh = unit(yadj, L_INCHES);

are equally dubious.


Oh, never mind, unit() definitely allocates, so of course you are right!

-- 
   O__  ---- Peter Dalgaard             ?ster Farimagsgade 5, Entr.B
  c/ /'_ --- Dept. of Biostatistics     PO Box 2099, 1014 Cph. K
 (*) \(*) -- University of Copenhagen   Denmark      Ph:  (+45) 35327918
~~~~~~~~~~ - (p.dalgaard at biostat.ku.dk)              FAX: (+45) 35327907


From guillaume.yziquel at citycable.ch  Thu Jan 28 17:59:01 2010
From: guillaume.yziquel at citycable.ch (Guillaume Yziquel)
Date: Thu, 28 Jan 2010 17:59:01 +0100
Subject: [Rd] Problem with R math library.
In-Reply-To: <4B618A52.6080805@citycable.ch>
References: <4B617735.9010204@citycable.ch>
	<19297.33736.990250.454097@ron.nulle.part>
	<4B618A52.6080805@citycable.ch>
Message-ID: <4B61C255.7060500@citycable.ch>

Guillaume Yziquel a ?crit :
> Dirk Eddelbuettel a ?crit :
>>
>> Salut Guilluame,
>>
>> | > val norm_rand : unit -> float
>> | > Random variates from the standard normal distribution. Bug: 
>> currently systematically returns -8.77332116900134373.
>> | | Any idea as to why the function systematically returns the same 
>> value? | Is there a way the math library should be initialised?
>>
>> I think it is pretty clearly documented in R-exts:
>>
>>   However, before these are used, the user must call
>>          GetRNGstate();
>>     and after all the required variates have been generated, call
>>          PutRNGstate();
>>     These essentially read in (or create) `.Random.seed' and write it out
>>   after use.
> 
> Fair enough. I admit I've been busy with low detail stuff, and omitted 
> to come back to R-exts.
> 
> However, I have another question on which I do not find information (I 
> found it once, but do not know how to find it again...): What's the big 
> difference between using the R mathematical library in standalone mode 
> and not in standalone mode? How does it translate in terms of C 
> directives and linking modalities? I've noticed the MATHLIB_STANDALONE 
> macro, but I do not know how I should use it...
> 
> All the best,

OK. So concerning the headers:

#define MATHLIB_STANDALONE
#include <Rmath.h>

Concerning dependencies: compile against only libRmath.so. Not against 
libR.so. (I wonder why this is so crucial, though...)

Concerning documentation: Section 9 The standalone Rmath library from 
the R-admin.pdf documentation.

This solved my problem, since I'm able to generated random values with 
norm_rand, unif_rand, etc...

Thank you for your help.

-- 
      Guillaume Yziquel
http://yziquel.homelinux.org/


From guillaume.yziquel at citycable.ch  Thu Jan 28 18:14:04 2010
From: guillaume.yziquel at citycable.ch (Guillaume Yziquel)
Date: Thu, 28 Jan 2010 18:14:04 +0100
Subject: [Rd] Problem with R math library. [and a minor bug report]
In-Reply-To: <19297.40104.571725.824417@ron.nulle.part>
References: <4B617735.9010204@citycable.ch>	<19297.33736.990250.454097@ron.nulle.part>	<4B618A52.6080805@citycable.ch>
	<19297.40104.571725.824417@ron.nulle.part>
Message-ID: <4B61C5DC.3060902@citycable.ch>

Dirk Eddelbuettel a ?crit :
> 
> Well, Debian comes to the rescue. Do 'sudo apt-get install r-mathlib' to the
> standalone library. Then copy the example file out, add the missing 'extern
> N01type N01_kind;' (and that it is missing may well be a bug -- I used 2.10.1
> here -- anyone from R Core listening in who can add the one line ?) 
> 
>    edd at ron:~> cp  /usr/share/doc/r-mathlib/examples/test.c /tmp/
>    edd at ron:~> grep extern /tmp/test.c
>    extern N01type N01_kind; /* from nmath/snorm.c */
>    edd at ron:~> gcc  -o /tmp/mathlibtest  /tmp/test.c -lRmath -lm
>    edd at ron:~> /tmp/mathlibtest 
>    *** loaded '/tmp/mathlibtest'
>    one normal 1.119638
>    normal via BM -1.734578
>    edd at ron:~> 

OK. Thanks. Hadn't noticed the documentation of r-mathlib. Should have 
known better.

However, I still do not understand what the -lm is useful for.

> I hope this answers your questions -- the standalone math library links with
> only its libRmath and nothing else from R. It also only consume Rmath.h
> (which I put into /usr/include so you need no -I arguments to gcc).

Yes, that answers my question.

> Hope this helps,  Dirk
> 
> PS For reference, here is test.c with line edited in:
> 
> /*
>  *  Mathlib : A C Library of Special Functions
>  *  Copyright (C) 2000-7  The R Development Core Team
>  *
>  *  This program is free software; you can redistribute it and/or modify
>  *  it under the terms of the GNU General Public License as published by
>  *  the Free Software Foundation; either version 2 of the License, or
>  *  (at your option) any later version.
>  *
>  *  This program is distributed in the hope that it will be useful,
>  *  but WITHOUT ANY WARRANTY; without even the implied warranty of
>  *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
>  *  GNU General Public License for more details.
>  *
>  *  You should have received a copy of the GNU General Public License
>  *  along with this program; if not, a copy is available at
>  *  http://www.r-project.org/Licenses/
>  *
>  */
> 
> #define MATHLIB_STANDALONE 1
> #include <Rmath.h>
> 
> #include <stdio.h>
> typedef enum {
>     BUGGY_KINDERMAN_RAMAGE,
>     AHRENS_DIETER,
>     BOX_MULLER,
>     USER_NORM,
>     INVERSION,
>     KINDERMAN_RAMAGE
> } N01type;
> 
> extern N01type N01_kind; /* from nmath/snorm.c */
>  
> int
> main(int argc, char** argv)
> {
> /* something to force the library to be included */
>     qnorm(0.7, 0.0, 1.0, 0, 0);
>     printf("*** loaded '%s'\n", argv[0]);
>     set_seed(123, 456);
>     N01_kind = AHRENS_DIETER;
>     printf("one normal %f\n", norm_rand());
>     set_seed(123, 456);
>     N01_kind = BOX_MULLER;
>     printf("normal via BM %f\n", norm_rand());
>     
>     return 0;
> }
> 
> 


-- 
      Guillaume Yziquel
http://yziquel.homelinux.org/


From edd at debian.org  Thu Jan 28 18:23:47 2010
From: edd at debian.org (Dirk Eddelbuettel)
Date: Thu, 28 Jan 2010 11:23:47 -0600
Subject: [Rd] Problem with R math library.
In-Reply-To: <4B61C255.7060500@citycable.ch>
References: <4B617735.9010204@citycable.ch>
	<19297.33736.990250.454097@ron.nulle.part>
	<4B618A52.6080805@citycable.ch> <4B61C255.7060500@citycable.ch>
Message-ID: <19297.51235.545749.866650@ron.nulle.part>


On 28 January 2010 at 17:59, Guillaume Yziquel wrote:
| Guillaume Yziquel a ?crit :
| > Dirk Eddelbuettel a ?crit :
| >>
| >> Salut Guilluame,
| >>
| >> | > val norm_rand : unit -> float
| >> | > Random variates from the standard normal distribution. Bug: 
| >> currently systematically returns -8.77332116900134373.
| >> | | Any idea as to why the function systematically returns the same 
| >> value? | Is there a way the math library should be initialised?
| >>
| >> I think it is pretty clearly documented in R-exts:
| >>
| >>   However, before these are used, the user must call
| >>          GetRNGstate();
| >>     and after all the required variates have been generated, call
| >>          PutRNGstate();
| >>     These essentially read in (or create) `.Random.seed' and write it out
| >>   after use.
| > 
| > Fair enough. I admit I've been busy with low detail stuff, and omitted 
| > to come back to R-exts.
| > 
| > However, I have another question on which I do not find information (I 
| > found it once, but do not know how to find it again...): What's the big 
| > difference between using the R mathematical library in standalone mode 
| > and not in standalone mode? How does it translate in terms of C 
| > directives and linking modalities? I've noticed the MATHLIB_STANDALONE 
| > macro, but I do not know how I should use it...
| > 
| > All the best,
| 
| OK. So concerning the headers:
| 
| #define MATHLIB_STANDALONE
| #include <Rmath.h>
| 
| Concerning dependencies: compile against only libRmath.so. Not against 
| libR.so. (I wonder why this is so crucial, though...)

By design as libRmath is meanth to __standalone__ hence indepdent of R. This
is a a feature.  

This is probably not what _you_ want as you are embedding R, so you need libR.
 
| Concerning documentation: Section 9 The standalone Rmath library from 
| the R-admin.pdf documentation.
| 
| This solved my problem, since I'm able to generated random values with 
| norm_rand, unif_rand, etc...
| 
| Thank you for your help.

Always a pleasure.

Dirk

-- 
Three out of two people have difficulties with fractions.


From guillaume.yziquel at citycable.ch  Thu Jan 28 18:49:25 2010
From: guillaume.yziquel at citycable.ch (Guillaume Yziquel)
Date: Thu, 28 Jan 2010 18:49:25 +0100
Subject: [Rd] Problem with R math library.
In-Reply-To: <19297.51235.545749.866650@ron.nulle.part>
References: <4B617735.9010204@citycable.ch>	<19297.33736.990250.454097@ron.nulle.part>	<4B618A52.6080805@citycable.ch>	<4B61C255.7060500@citycable.ch>
	<19297.51235.545749.866650@ron.nulle.part>
Message-ID: <4B61CE25.7040805@citycable.ch>

Dirk Eddelbuettel a ?crit :
>
> | Concerning dependencies: compile against only libRmath.so. Not against 
> | libR.so. (I wonder why this is so crucial, though...)
> 
> By design as libRmath is meanth to __standalone__ hence indepdent of R. This
> is a a feature.  
> 
> This is probably not what _you_ want as you are embedding R, so you need libR.

Well, yes and no.

I've been rewriting an OCaml-R binding from Maxence Guesdon, which was 
only scratching the surface of the API. (Not meaning to depreciate his 
work: it indeed had the merit of existing and being approximately 
functional).

And he had a binding to embed R, and simultaneously a binding of the 
standalone mathematical library.

I'm trying to make a significant upgrade of his binding, and to avoid 
regressions, I'm wrapping the standalone R mathlib. That's why...

Nevertheless, I'll have to think at one point in time of bringing the 
libRmath.so functionality to the part of my library that embeds R, as 
you pointed out.

-- 
      Guillaume Yziquel
http://yziquel.homelinux.org/


From seth at userprimary.net  Thu Jan 28 18:57:15 2010
From: seth at userprimary.net (Seth Falcon)
Date: Thu, 28 Jan 2010 09:57:15 -0800
Subject: [Rd] src/main/platform.c (PR#14198)
In-Reply-To: <20100128115010.74E9F2831FEC@mail.pubhealth.ku.dk>
References: <20100128115010.74E9F2831FEC@mail.pubhealth.ku.dk>
Message-ID: <4B61CFFB.5040800@userprimary.net>

On 1/28/10 3:50 AM, A.R.Runnalls at kent.ac.uk wrote:
> At line 312 in src/main/platform.c (at the latest svn revision, 51039):
>
>      if (length(tl)>= 1 || !isNull(STRING_ELT(tl, 0)))
>
> should not '||' read '&&'?  Likewise four lines later.

Thanks, I'll fix this up.

+ seth

-- 
Seth Falcon | @sfalcon | http://userprimary.net/user


From whuber at embl.de  Thu Jan 28 21:25:15 2010
From: whuber at embl.de (Wolfgang Huber)
Date: Thu, 28 Jan 2010 21:25:15 +0100
Subject: [Rd] "Too many raster images" in devPS.c
In-Reply-To: <4B60EBFE.2020805@auckland.ac.nz>
References: <4B5200A0.7080503@embl.de> <4B60EBFE.2020805@auckland.ac.nz>
Message-ID: <071266C9-38FB-4B81-8D62-0ED933CB73AB@embl.de>

Hi Paul

from a user perspective, this sounds reasonable.

         Thank you very much, 
               Wolfgang


Il giorno Jan 28, 2010, alle ore 2:44 AM, Paul Murrell ha scritto:

Wolfgang Huber wrote:
> Hi,
> I am finding the recently added [1] functionality of embedding raster images into plots on R devices very useful! Thanks to Paul Murrell and others for providing that. I noted that in https://svn.r-project.org/R/trunk/src/library/grDevices/src/devPS.c
> a macro is defined: #define MAX_RASTERS 64, and consequently, I get
> Error in grid.Call.graphics("L_raster", x$raster, x$x, x$y, x$width, x$height,  :
>   Too many raster images
> even for relatively innocent graphics, such as extensions of [2] (which I made with Bioconductor's "splots" package). Besides that, I imagine that raster images could be useful as 'glyphs' in various types of plots.
> Besides the not so helpful option of patching that macro in my private copy of R, is there an intention to extend this functionality to accommodate for larger plots more generally?


A simple solution (given the current implementation) would be to allow the user to specify the max number of raster images when starting a PDF file, e.g., ...

pdf("plotwithlotsofimages.pdf", maxRaster=1024)

Would that suffice?

Paul


> [1] http://developer.r-project.org/Raster/raster-RFC.html
> [2] http://www.ebi.ac.uk/~huber/pub/Druggable_ratio_1_before.pdf
> Thank you and best wishes,
>      Wolfgang
> --
> Wolfgang Huber
> EMBL
> http://www.embl.de/research/units/genome_biology/huber/contact
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel

-- 
Dr Paul Murrell
Department of Statistics
The University of Auckland
Private Bag 92019
Auckland
New Zealand
64 9 3737599 x85392
paul at stat.auckland.ac.nz
http://www.stat.auckland.ac.nz/~paul/


From p.murrell at auckland.ac.nz  Thu Jan 28 21:27:55 2010
From: p.murrell at auckland.ac.nz (Paul Murrell)
Date: Fri, 29 Jan 2010 09:27:55 +1300
Subject: [Rd] src/library/grid/src/grid.c (PR#14199)
In-Reply-To: <4B61ABEE.1000805@biostat.ku.dk>
References: <20100128115509.C88CB2831FEC@mail.pubhealth.ku.dk>
	<4B61ABEE.1000805@biostat.ku.dk>
Message-ID: <4B61F34B.8050802@auckland.ac.nz>

Hi

This is fixed in r-devel (revision 51061).
Thanks for the report!

Paul


Peter Dalgaard wrote:
> A.R.Runnalls at kent.ac.uk wrote:
>> At around line 2590, in function gridRect() in
>> src/library/grid/src/grid.c (at the latest svn revision, 50745), ought
>> not temp, www and hhh to be PROTECTed within this block?
> 
> Plausible, provided that anything can allocate while those are being
> used. Could you perhaps investigate that a little further? (Bug reports
> should really contains exclamation points and not question marks...)
> 
> 
> If unit() can allocate, then all constructs like
> 
> 2565                 www = unit(xadj, L_INCHES);
> 2566                 hhh = unit(yadj, L_INCHES);
> 
> are equally dubious.
> 
> 
> Oh, never mind, unit() definitely allocates, so of course you are right!
> 

-- 
Dr Paul Murrell
Department of Statistics
The University of Auckland
Private Bag 92019
Auckland
New Zealand
64 9 3737599 x85392
paul at stat.auckland.ac.nz
http://www.stat.auckland.ac.nz/~paul/


From p.murrell at auckland.ac.nz  Thu Jan 28 22:53:07 2010
From: p.murrell at auckland.ac.nz (Paul Murrell)
Date: Fri, 29 Jan 2010 10:53:07 +1300
Subject: [Rd] "Too many raster images" in devPS.c
In-Reply-To: <071266C9-38FB-4B81-8D62-0ED933CB73AB@embl.de>
References: <4B5200A0.7080503@embl.de> <4B60EBFE.2020805@auckland.ac.nz>
	<071266C9-38FB-4B81-8D62-0ED933CB73AB@embl.de>
Message-ID: <4B620743.4030300@auckland.ac.nz>

Hi


Wolfgang Huber wrote:
> Hi Paul
> 
> from a user perspective, this sounds reasonable.


Cool.  That's now in r-devel.

Paul


>          Thank you very much, 
>                Wolfgang
> 
> 
> Il giorno Jan 28, 2010, alle ore 2:44 AM, Paul Murrell ha scritto:
> 
> Wolfgang Huber wrote:
>> Hi,
>> I am finding the recently added [1] functionality of embedding raster images into plots on R devices very useful! Thanks to Paul Murrell and others for providing that. I noted that in https://svn.r-project.org/R/trunk/src/library/grDevices/src/devPS.c
>> a macro is defined: #define MAX_RASTERS 64, and consequently, I get
>> Error in grid.Call.graphics("L_raster", x$raster, x$x, x$y, x$width, x$height,  :
>>   Too many raster images
>> even for relatively innocent graphics, such as extensions of [2] (which I made with Bioconductor's "splots" package). Besides that, I imagine that raster images could be useful as 'glyphs' in various types of plots.
>> Besides the not so helpful option of patching that macro in my private copy of R, is there an intention to extend this functionality to accommodate for larger plots more generally?
> 
> 
> A simple solution (given the current implementation) would be to allow the user to specify the max number of raster images when starting a PDF file, e.g., ...
> 
> pdf("plotwithlotsofimages.pdf", maxRaster=1024)
> 
> Would that suffice?
> 
> Paul
> 
> 
>> [1] http://developer.r-project.org/Raster/raster-RFC.html
>> [2] http://www.ebi.ac.uk/~huber/pub/Druggable_ratio_1_before.pdf
>> Thank you and best wishes,
>>      Wolfgang
>> --
>> Wolfgang Huber
>> EMBL
>> http://www.embl.de/research/units/genome_biology/huber/contact
>> ______________________________________________
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel
> 

-- 
Dr Paul Murrell
Department of Statistics
The University of Auckland
Private Bag 92019
Auckland
New Zealand
64 9 3737599 x85392
paul at stat.auckland.ac.nz
http://www.stat.auckland.ac.nz/~paul/


From waku at idi.ntnu.no  Fri Jan 29 22:54:03 2010
From: waku at idi.ntnu.no (waku at idi.ntnu.no)
Date: Fri, 29 Jan 2010 22:54:03 +0100 (MET)
Subject: [Rd] [BioC] Suppress output from getGEO
Message-ID: <62883.129.241.107.25.1264802043.squirrel@webmail.idi.ntnu.no>

some time ago i communicated the same issue to sean, and i'm very glad he
has improved the package -- thanks!

i'm purposefully posting to r-devel rather than to bioconductor.  i think
that download.file could be improved to avoid this sort of spamming output
seen previously with getGEO.  currently, it prints dots (when it does) in
5 10-packs per line, line after line.  instead, it could be repeatedly
printing them on the same line, to give it a more progress bar-like look.

the function putdots (src/modules/internet/internet.c:218) is responsible
for printing the dots.  after each 5x10 bunch of dots, it proceeds to the
next line:

    if((i+1) % 50 == 0) REprintf("\n");

but it could instead just swipe the dots and start in the same line again:

    if((i+1) % 50 == 0) REprintf("\r%55s\r", "");

it's ad hoc, of course, and requires some other changes to prevent the
progress bar from being rewritten too quickly, e.g., by replacing

    if(guess <= 0) putdots(&ndots, nbytes/1024);

with

    if(guess <= 0) putdots(&ndots, nbytes/(100*1024));

in lines 427 and 532 in the same file.  it's even more ad hoc, but on my
machine it works just fine.  i have no time to explore whether it
generalises to other configurations.

the attached patch was compiled and tested with no issues:

svn diff src/modules/internet/internet.c > internet.diff
svn revert src/modules/internet/internet.c
patch -p0 < internet.diff
make
make check # fine

vQ


From Jerry.Lewis at biogenidec.com  Fri Jan 29 22:50:12 2010
From: Jerry.Lewis at biogenidec.com (Jerry.Lewis at biogenidec.com)
Date: Fri, 29 Jan 2010 22:50:12 +0100 (CET)
Subject: [Rd] qpois Help problems (PR#14200)
Message-ID: <20100129215012.5AADA2831FE0@mail.pubhealth.ku.dk>

Full_Name: Jerry W. Lewis
Version: 2.10.1
OS: Windows XP Professional
Submission from: (NULL) (198.180.131.21)


In the line 

"The quantile is right continuous: qpois(q, lambda) is the smallest integer x
such that P(X <= x) >= q."

"q" is used as a probability when the Arguments section defines it to be a
quantile.

Also there are some representation problems where the escape character is
printed instead of interpreted, such as "\ldots" and "\lambda" in the preceding
lines.


From guillaume.yziquel at citycable.ch  Sat Jan 30 17:08:21 2010
From: guillaume.yziquel at citycable.ch (Guillaume Yziquel)
Date: Sat, 30 Jan 2010 17:08:21 +0100
Subject: [Rd] Stop packages and datasets to be loaded on startup.
Message-ID: <4B645975.5040101@citycable.ch>

Hi.

I would like to know how to start an embedded R session, and avoid 
datasets and the standard library packages to be loaded on startup.

I've been looking at littler's code (so this is partly a question to 
Dirk Eddelbuettel...):

>         /* We don't require() default packages upon startup; rather, we
>          * set up delayedAssign's instead. see autoloads().
>          */
>         if (setenv("R_DEFAULT_PACKAGES","NULL",1) != 0){
>                 perror("ERROR: couldn't set/replace R_DEFAULT_PACKAGES");
>                 exit(1);
>         }

The code above happens before Rf_initEmbeddedR in littler.

So I gather that just setting R_DEFAULT_PACKAGES to NULL should be OK. 
But then, what is the rather complicated stuff in the autoload() 
function in littler.c for?

And concerning datasets, how do you avoid loading them?

All the best,

-- 
      Guillaume Yziquel
http://yziquel.homelinux.org/


From simon.urbanek at r-project.org  Sat Jan 30 18:02:04 2010
From: simon.urbanek at r-project.org (Simon Urbanek)
Date: Sat, 30 Jan 2010 12:02:04 -0500
Subject: [Rd] Stop packages and datasets to be loaded on startup.
In-Reply-To: <4B645975.5040101@citycable.ch>
References: <4B645975.5040101@citycable.ch>
Message-ID: <AC6F0479-121D-4070-ABE4-303FAB6AA7B7@r-project.org>


On Jan 30, 2010, at 11:08 AM, Guillaume Yziquel wrote:

> Hi.
> 
> I would like to know how to start an embedded R session, and avoid datasets and the standard library packages to be loaded on startup.
> 
> I've been looking at littler's code (so this is partly a question to Dirk Eddelbuettel...):
> 
>>        /* We don't require() default packages upon startup; rather, we
>>         * set up delayedAssign's instead. see autoloads().
>>         */
>>        if (setenv("R_DEFAULT_PACKAGES","NULL",1) != 0){
>>                perror("ERROR: couldn't set/replace R_DEFAULT_PACKAGES");
>>                exit(1);
>>        }
> 
> The code above happens before Rf_initEmbeddedR in littler.
> 
> So I gather that just setting R_DEFAULT_PACKAGES to NULL should be OK. But then, what is the rather complicated stuff in the autoload() function in littler.c for?
> 
> And concerning datasets, how do you avoid loading them?
> 

Setting R_DEFAULT_PACKAGES to NULL makes sure that default packages are not loaded. Note that "datasets" are not loaded at all -- you can load the datasets package which will make them available, but they are not really "loaded". The minimal setup is simply

R_DEFAULT_PACKAGES=NULL R --vanilla

However, it's your responsibility to load any packages that your code needs in that case.

Cheers,
Simon


From edd at debian.org  Sat Jan 30 18:36:02 2010
From: edd at debian.org (Dirk Eddelbuettel)
Date: Sat, 30 Jan 2010 11:36:02 -0600
Subject: [Rd] Stop packages and datasets to be loaded on startup.
In-Reply-To: <4B645975.5040101@citycable.ch>
References: <4B645975.5040101@citycable.ch>
Message-ID: <19300.28162.914589.289379@ron.nulle.part>


On 30 January 2010 at 17:08, Guillaume Yziquel wrote:
| Hi.
| 
| I would like to know how to start an embedded R session, and avoid 
| datasets and the standard library packages to be loaded on startup.
| 
| I've been looking at littler's code (so this is partly a question to 
| Dirk Eddelbuettel...):

Credit where credit is due. Littler is a project by Jeff Horner and myself
building on Jeff's work with rapache which is another industry-strength use
of embedding of the R engine.

| >         /* We don't require() default packages upon startup; rather, we
| >          * set up delayedAssign's instead. see autoloads().
| >          */
| >         if (setenv("R_DEFAULT_PACKAGES","NULL",1) != 0){
| >                 perror("ERROR: couldn't set/replace R_DEFAULT_PACKAGES");
| >                 exit(1);
| >         }
| 
| The code above happens before Rf_initEmbeddedR in littler.
| 
| So I gather that just setting R_DEFAULT_PACKAGES to NULL should be OK. 

Yes, see Simon's reply.

| But then, what is the rather complicated stuff in the autoload() 
| function in littler.c for?

We load what we need for littler. And nothing more. See autoloads.h which is
autogenerated by make using autoloads.R during the build process.

Doing what we do here the way it is done ensures we start quicker than
Rscript (which wasn't released when we started anyway).  And what is done
here is also done in my RInside project which now builds on Windows. So if we
really wanted, we could port littler to Windows.  But neither Jeff nor I feel
a particular urge for getting into that. 
 
| And concerning datasets, how do you avoid loading them?

Maybe by not loading the datasets package?  But note that packages may fail
their examples.

-- 
Three out of two people have difficulties with fractions.


From guillaume.yziquel at citycable.ch  Sun Jan 31 18:39:52 2010
From: guillaume.yziquel at citycable.ch (Guillaume Yziquel)
Date: Sun, 31 Jan 2010 18:39:52 +0100
Subject: [Rd] Stop packages and datasets to be loaded on startup.
In-Reply-To: <AC6F0479-121D-4070-ABE4-303FAB6AA7B7@r-project.org>
References: <4B645975.5040101@citycable.ch>
	<AC6F0479-121D-4070-ABE4-303FAB6AA7B7@r-project.org>
Message-ID: <4B65C068.6090002@citycable.ch>

Simon Urbanek a ?crit :
>>
>> So I gather that just setting R_DEFAULT_PACKAGES to NULL should be OK. But then, what is the rather complicated stuff in the autoload() function in littler.c for?
>>
>> And concerning datasets, how do you avoid loading them?
>>
> 
> Setting R_DEFAULT_PACKAGES to NULL makes sure that default packages are not loaded. Note that "datasets" are not loaded at all -- you can load the datasets package which will make them available, but they are not really "loaded". The minimal setup is simply
> 
> R_DEFAULT_PACKAGES=NULL R --vanilla
> 
> However, it's your responsibility to load any packages that your code needs in that case.
> 
> Cheers,
> Simon

OK. Thanks. Just one more question concerning package base. It seems 
that setting R_DEFAULT_PACKAGES to NULL doesn't remove the base package. 
Is the base package removable?

> yziquel at seldon:~$ ocaml
>         Objective Caml version 3.11.1
> 
> # #use "topfind";;
> - : unit = ()
> Findlib has been successfully loaded. Additional directives:
>   #require "package";;      to load a package
>   #list;;                   to list the available packages
>   #camlp4o;;                to load camlp4 (standard syntax)
>   #camlp4r;;                to load camlp4 (revised syntax)
>   #predicates "p,q,...";;   to set these predicates
>   Topfind.reset();;         to force that packages will be reloaded
>   #thread;;                 to enable threads
> 
> - : unit = ()
> # #require "R.interpreter";;
> /usr/lib/ocaml/unix.cma: loaded
> /usr/lib/ocaml/str.cma: loaded
> /usr/lib/ocaml/calendar: added to search path
> /usr/lib/ocaml/calendar/calendarLib.cma: loaded
> /usr/lib/ocaml/R: added to search path
> /usr/lib/ocaml/R/r.cma: loaded
> /usr/lib/ocaml/R/oCamlR.cmo: loaded
> # R.strings_of_t (R.eval_string "loadedNamespaces()");;
> - : string list = ["base"]
> # R.strings_of_t (R.eval_string "search()");;
> - : string list = [".GlobalEnv"; "Autoloads"; "package:base"]
> #

All the best,

-- 
      Guillaume Yziquel
http://yziquel.homelinux.org/


From guillaume.yziquel at citycable.ch  Sun Jan 31 19:01:36 2010
From: guillaume.yziquel at citycable.ch (Guillaume Yziquel)
Date: Sun, 31 Jan 2010 19:01:36 +0100
Subject: [Rd] Stop packages and datasets to be loaded on startup.
In-Reply-To: <19300.28162.914589.289379@ron.nulle.part>
References: <4B645975.5040101@citycable.ch>
	<19300.28162.914589.289379@ron.nulle.part>
Message-ID: <4B65C580.7010605@citycable.ch>

Dirk Eddelbuettel a ?crit :
>
> | I've been looking at littler's code (so this is partly a question to 
> | Dirk Eddelbuettel...):
> 
> Credit where credit is due. Littler is a project by Jeff Horner and myself
> building on Jeff's work with rapache which is another industry-strength use
> of embedding of the R engine.

No harm intended.

> | >         /* We don't require() default packages upon startup; rather, we
> | >          * set up delayedAssign's instead. see autoloads().
> | >          */
> | >         if (setenv("R_DEFAULT_PACKAGES","NULL",1) != 0){
> | >                 perror("ERROR: couldn't set/replace R_DEFAULT_PACKAGES");
> | >                 exit(1);
> | >         }
> | 
> | The code above happens before Rf_initEmbeddedR in littler.
> | 
> | So I gather that just setting R_DEFAULT_PACKAGES to NULL should be OK. 
> 
> Yes, see Simon's reply.
> 
> | But then, what is the rather complicated stuff in the autoload() 
> | function in littler.c for?
> 
> We load what we need for littler. And nothing more. See autoloads.h which is
> autogenerated by make using autoloads.R during the build process.

I had a look at help(Autoload):

> On-demand Loading of Packages
> 
> Description:
> 
>      ?autoload? creates a promise-to-evaluate ?autoloader? and stores
>      it with name ?name? in ?.AutoloadEnv? environment.  When R
>      attempts to evaluate ?name?, ?autoloader? is run, the package is
>      loaded and ?name? is re-evaluated in the new package's
>      environment.  The result is that R behaves as if ?file? was loaded
>      but it does not occupy memory.
> 
>      ?.Autoloaded? contains the names of the packages for which
>      autoloading has been promised.

But I do not understand a few things about it:

-1- If I do not want autoloading, I should simply remove the 
.AutoloadEnv environment? Or keep it empty?

-2- How is this environment populated at startup? How can I ensure that 
it be empty?

> | And concerning datasets, how do you avoid loading them?
> 
> Maybe by not loading the datasets package?  But note that packages may fail
> their examples.

Thanks a lot.

-- 
      Guillaume Yziquel
http://yziquel.homelinux.org/


From simon.urbanek at r-project.org  Sun Jan 31 19:07:15 2010
From: simon.urbanek at r-project.org (Simon Urbanek)
Date: Sun, 31 Jan 2010 13:07:15 -0500
Subject: [Rd] Stop packages and datasets to be loaded on startup.
In-Reply-To: <4B65C068.6090002@citycable.ch>
References: <4B645975.5040101@citycable.ch>
	<AC6F0479-121D-4070-ABE4-303FAB6AA7B7@r-project.org>
	<4B65C068.6090002@citycable.ch>
Message-ID: <765F3AC5-BDA1-4AA1-A3E7-CC97E3252345@r-project.org>


On Jan 31, 2010, at 12:39 PM, Guillaume Yziquel wrote:

> Simon Urbanek a ?crit :
>>> 
>>> So I gather that just setting R_DEFAULT_PACKAGES to NULL should be OK. But then, what is the rather complicated stuff in the autoload() function in littler.c for?
>>> 
>>> And concerning datasets, how do you avoid loading them?
>>> 
>> Setting R_DEFAULT_PACKAGES to NULL makes sure that default packages are not loaded. Note that "datasets" are not loaded at all -- you can load the datasets package which will make them available, but they are not really "loaded". The minimal setup is simply
>> R_DEFAULT_PACKAGES=NULL R --vanilla
>> However, it's your responsibility to load any packages that your code needs in that case.
>> Cheers,
>> Simon
> 
> OK. Thanks. Just one more question concerning package base. It seems that setting R_DEFAULT_PACKAGES to NULL doesn't remove the base package. Is the base package removable?
> 

No, because base is R itself.

Cheers,
Simon


