From me14d059 @end|ng |rom @m@||@||tm@@c@|n  Tue Aug  1 10:18:20 2023
From: me14d059 @end|ng |rom @m@||@||tm@@c@|n (Durga Prasad G me14d059)
Date: Tue, 1 Aug 2023 13:48:20 +0530
Subject: [Rd] Concerns with SVD -- and the Matrix Exponential
In-Reply-To: <25780.65318.292886.397047@stat.math.ethz.ch>
References: <CACSKKm=DcN2zy+0QmmU39gSStX2YU4K-MEJaOWcoK6XANswc5Q@mail.gmail.com>
 <c21e618c-bbbb-42b9-2adb-56df0fb32673@gmail.com>
 <25780.65318.292886.397047@stat.math.ethz.ch>
Message-ID: <CACSKKmnn7HPcaQ3Dr1OZx1_Sy32wrkV0BW=dUjuazFeT577hMA@mail.gmail.com>

Hi Martin, Thank you for your reply. The response and the links provided by
you helped to learn more. But I am not able to obtain the simple even
powers of a matrix: one simple case is the square of a matrix. The square
of the matrix using direct matrix multiplication operations and svd (A = U
D V') are different. Kindly check the attached file for the complete
explanation. I want to know which technique was used in building the svd in
R-Software. I want to discuss about svd if you schedule a meeting.

Thanks and Regards
Durga Prasad


On Mon, Jul 17, 2023 at 2:13?PM Martin Maechler <maechler at stat.math.ethz.ch>
wrote:

> >>>>> J C Nash
> >>>>>     on Sun, 16 Jul 2023 13:30:57 -0400 writes:
>
>     > Better check your definitions of SVD -- there are several
>     > forms, but all I am aware of (and I wrote a couple of the
>     > codes in the early 1970s for the SVD) have positive
>     > singular values.
>
>     > JN
>
> Indeed.
>
> More generally, the decomposition     A = U D V'
> (with diagonal D and orthogonal U,V)
> is not at all unique.
>
> There are not only many possible different choices of the sign
> of the diagonal entries, but also the *ordering* of the singular values
> is non unique.
> That's why R and 'Lapack', the world-standard for
>   computer/numerical linear algebra, and others I think,
> make the decomposition unique by requiring
> non-negative entries in D and have them *sorted* decreasingly.
>
> The latter is what the help page   help(svd)  always said
> (and you should have studied that before raising such concerns).
>
> -----------------------------------------------------------------
>
> To your second point (in the document), the matrix exponential:
> It is less known, but still has been known among experts for
> many years (and I think even among students of a class on
> numerical linear algebra), that there are quite a
> few mathematically equivalent ways to compute the matrix exponential,
> *BUT* that most of these may be numerically disastrous, for several
> different reasons depending on the case.
>
> This has been known for close to 50 years now:
>
>  Cleve Moler and Charles Van Loan  (1978)
>  Nineteen Dubious Ways to Compute the Exponential of a Matrix
>  SIAM Review Vol. 20(4)
>  https://doi.org/10.1137/1020098
>
> Where as that publication had been important and much cited at
> the time, the same authors (known world experts in the field)
> wrote a review of that review 25 years later which I think (and
> hope) is even more widely cited  (in R's man/*.Rd syntax) :
>
>   Cleve Moler and Charles Van Loan (2003)
>   Nineteen dubious ways to compute the exponential of a matrix,
>   twenty-five years later. \emph{SIAM Review} \bold{45}, 1, 3--49.
>   \doi{10.1137/S00361445024180}
> i.e.  https://doi.org/10.1137/S00361445024180
>
> It is BTW also cited on the Wikipedia page on the matrix
> exponential:
>
>
> ==> For this reason, Professor Douglas Bates, the initial
> creator of R's Matrix package (which comes with R) has added the
> Matrix exponential very early to the package:
> ------------------------------------------------------------------------
> r461 | bates | 2005-01-29
>
> Add expm function
> ------------------------------------------------------------------------
>
> Later, I've fixed an "infamous" bug :
> ------------------------------------------------------------------------
> r2127 | maechler | 2008-03-07
>
> fix the infamous expm() bug also in "Matrix" (duh!)
> ------------------------------------------------------------------------
>
> Then, Vincent Goulet and Christophe Dutang wanted to provide more
> versions of expm() and we collaborated, also providing expm()
> for complex matrices and created the CRAN package {expm}
>   --> https://CRAN.R-project.org/package=expm
> which already provided half a dozen different expm algorithms.
>
> But research and algorithms did not stop there.  In 2008, Higham
> and collaborators even improved on the best known algorithms
> and I had the chance to co-supervise a smart Master's student
> Michael Stadelmann to implement Higham's algorithm and we even
> allowed to tweak it {with optional arguments} as that was seen
> to be beneficial sometimes.
>
> See e.g.,
> https://www.rdocumentation.org/packages/expm/versions/0.999-7/topics/expm
>
>
>     > On 2023-07-16 02:01, Durga Prasad G me14d059 wrote:
>     >> Respected Development Team,
>     >>
>     >> This is Durga Prasad reaching out to you regarding an
>     >> issue/concern related to Singular Value Decomposition SVD
>     >> in R software package. I am attaching a detailed
>     >> attachment with this letter which depicts real issues
>     >> with SVD in R.
>     >>
>     >> To reach the concern the expressions for the exponential
>     >> of a matrix using SVD and projection tensors are obtained
>     >> from series expansion. However, numerical inconsistency
>     >> is observed between the exponential of matrix obtained
>     >> using the function(svd()) used in R software.
>     >>
>     >> However, it is observed that most of the researchers
>     >> fraternity is engaged in utilising R software for their
>     >> research purposes and to the extent of my understanding
>     >> such an error in SVD in R software might raise the
>     >> concern about authenticity of the simulation results
>     >> produced and published by researchers across the globe.
>     >>
>     >> Further, I am very sure that the R software development
>     >> team is well versed with the happening and they have any
>     >> specific and resilient reasons for doing so. I would
>     >> request you kindly, to guide me through the concern.
>     >>
>     >> Thank you very much.
>

-------------- next part --------------
A non-text attachment was scrubbed...
Name: Square.pdf
Type: application/pdf
Size: 79039 bytes
Desc: not available
URL: <https://stat.ethz.ch/pipermail/r-devel/attachments/20230801/8c106736/attachment.pdf>

From AHL27 @end|ng |rom p|tt@edu  Tue Aug  1 13:21:43 2023
From: AHL27 @end|ng |rom p|tt@edu (Lakshman, Aidan H)
Date: Tue, 1 Aug 2023 11:21:43 +0000
Subject: [Rd] Concerns with SVD -- and the Matrix Exponential
In-Reply-To: <CACSKKmnn7HPcaQ3Dr1OZx1_Sy32wrkV0BW=dUjuazFeT577hMA@mail.gmail.com>
References: <CACSKKm=DcN2zy+0QmmU39gSStX2YU4K-MEJaOWcoK6XANswc5Q@mail.gmail.com>
 <c21e618c-bbbb-42b9-2adb-56df0fb32673@gmail.com>
 <25780.65318.292886.397047@stat.math.ethz.ch>
 <CACSKKmnn7HPcaQ3Dr1OZx1_Sy32wrkV0BW=dUjuazFeT577hMA@mail.gmail.com>
Message-ID: <BL0PR04MB4706B46C78D72321F088CB0CD90AA@BL0PR04MB4706.namprd04.prod.outlook.com>

Hi Durga,

There?s an error in your calculations here. You mention that for the SVD of a symmetric matrix, we must have U=V, but this is not a correct statement. The unitary matrices are only equivalent if the matrix A is positive semidefinite.

In your example, you provide the matrix {{1,4},{4,1}}, which has eigenvalues 5 and -3. This is not positive semidefinite, and thus there's no requirement that the unitary matrices be equivalent.

If you verify your example with something like wolfram alpha, you?ll find that R?s solution is correct.

-Aidan

-----------------------

Aidan Lakshman (he/him)<https://www.ahl27.com/>

Doctoral Fellow, Wright Lab<https://www.wrightlabscience.com/>

University of Pittsburgh School of Medicine

Department of Biomedical Informatics

ahl27 at pitt.edu

(724) 612-9940



________________________________
From: R-devel <r-devel-bounces at r-project.org> on behalf of Durga Prasad G me14d059 <me14d059 at smail.iitm.ac.in>
Sent: Tuesday, August 1, 2023 4:18:20 AM
To: Martin Maechler <maechler at stat.math.ethz.ch>; r-devel at r-project.org <r-devel at r-project.org>; profjcnash at gmail.com <profjcnash at gmail.com>
Subject: Re: [Rd] Concerns with SVD -- and the Matrix Exponential

Hi Martin, Thank you for your reply. The response and the links provided by
you helped to learn more. But I am not able to obtain the simple even
powers of a matrix: one simple case is the square of a matrix. The square
of the matrix using direct matrix multiplication operations and svd (A = U
D V') are different. Kindly check the attached file for the complete
explanation. I want to know which technique was used in building the svd in
R-Software. I want to discuss about svd if you schedule a meeting.

Thanks and Regards
Durga Prasad


On Mon, Jul 17, 2023 at 2:13?PM Martin Maechler <maechler at stat.math.ethz.ch>
wrote:

> >>>>> J C Nash
> >>>>>     on Sun, 16 Jul 2023 13:30:57 -0400 writes:
>
>     > Better check your definitions of SVD -- there are several
>     > forms, but all I am aware of (and I wrote a couple of the
>     > codes in the early 1970s for the SVD) have positive
>     > singular values.
>
>     > JN
>
> Indeed.
>
> More generally, the decomposition     A = U D V'
> (with diagonal D and orthogonal U,V)
> is not at all unique.
>
> There are not only many possible different choices of the sign
> of the diagonal entries, but also the *ordering* of the singular values
> is non unique.
> That's why R and 'Lapack', the world-standard for
>   computer/numerical linear algebra, and others I think,
> make the decomposition unique by requiring
> non-negative entries in D and have them *sorted* decreasingly.
>
> The latter is what the help page   help(svd)  always said
> (and you should have studied that before raising such concerns).
>
> -----------------------------------------------------------------
>
> To your second point (in the document), the matrix exponential:
> It is less known, but still has been known among experts for
> many years (and I think even among students of a class on
> numerical linear algebra), that there are quite a
> few mathematically equivalent ways to compute the matrix exponential,
> *BUT* that most of these may be numerically disastrous, for several
> different reasons depending on the case.
>
> This has been known for close to 50 years now:
>
>  Cleve Moler and Charles Van Loan  (1978)
>  Nineteen Dubious Ways to Compute the Exponential of a Matrix
>  SIAM Review Vol. 20(4)
>  https://nam12.safelinks.protection.outlook.com/?url=https%3A%2F%2Fdoi.org%2F10.1137%2F1020098&data=05%7C01%7Cahl27%40pitt.edu%7C8575b77db32345ca544b08db927ceae0%7C9ef9f489e0a04eeb87cc3a526112fd0d%7C1%7C0%7C638264837816871329%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C3000%7C%7C%7C&sdata=Y4mlFL%2FggLKd7FoIoY62esiFGUwukRG0YmELsJj7nd0%3D&reserved=0<https://doi.org/10.1137/1020098>
>
> Where as that publication had been important and much cited at
> the time, the same authors (known world experts in the field)
> wrote a review of that review 25 years later which I think (and
> hope) is even more widely cited  (in R's man/*.Rd syntax) :
>
>   Cleve Moler and Charles Van Loan (2003)
>   Nineteen dubious ways to compute the exponential of a matrix,
>   twenty-five years later. \emph{SIAM Review} \bold{45}, 1, 3--49.
>   \doi{10.1137/S00361445024180}
> i.e.  https://nam12.safelinks.protection.outlook.com/?url=https%3A%2F%2Fdoi.org%2F10.1137%2FS00361445024180&data=05%7C01%7Cahl27%40pitt.edu%7C8575b77db32345ca544b08db927ceae0%7C9ef9f489e0a04eeb87cc3a526112fd0d%7C1%7C0%7C638264837817183809%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C3000%7C%7C%7C&sdata=5%2FlssUGC6q7SUy0PY7gZCqWi0%2BXbNwZD0FaAgIcOWdY%3D&reserved=0<https://doi.org/10.1137/S00361445024180>
>
> It is BTW also cited on the Wikipedia page on the matrix
> exponential:
>
>
> ==> For this reason, Professor Douglas Bates, the initial
> creator of R's Matrix package (which comes with R) has added the
> Matrix exponential very early to the package:
> ------------------------------------------------------------------------
> r461 | bates | 2005-01-29
>
> Add expm function
> ------------------------------------------------------------------------
>
> Later, I've fixed an "infamous" bug :
> ------------------------------------------------------------------------
> r2127 | maechler | 2008-03-07
>
> fix the infamous expm() bug also in "Matrix" (duh!)
> ------------------------------------------------------------------------
>
> Then, Vincent Goulet and Christophe Dutang wanted to provide more
> versions of expm() and we collaborated, also providing expm()
> for complex matrices and created the CRAN package {expm}
>   --> https://nam12.safelinks.protection.outlook.com/?url=https%3A%2F%2Fcran.r-project.org%2Fpackage%3Dexpm&data=05%7C01%7Cahl27%40pitt.edu%7C8575b77db32345ca544b08db927ceae0%7C9ef9f489e0a04eeb87cc3a526112fd0d%7C1%7C0%7C638264837817183809%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C3000%7C%7C%7C&sdata=LlAzmeRZd5tNqAgTuYTTSsSakWEj85%2B%2F%2FP%2FM0DnZNLk%3D&reserved=0<https://cran.r-project.org/package=expm>
> which already provided half a dozen different expm algorithms.
>
> But research and algorithms did not stop there.  In 2008, Higham
> and collaborators even improved on the best known algorithms
> and I had the chance to co-supervise a smart Master's student
> Michael Stadelmann to implement Higham's algorithm and we even
> allowed to tweak it {with optional arguments} as that was seen
> to be beneficial sometimes.
>
> See e.g.,
> https://nam12.safelinks.protection.outlook.com/?url=https%3A%2F%2Fwww.rdocumentation.org%2Fpackages%2Fexpm%2Fversions%2F0.999-7%2Ftopics%2Fexpm&data=05%7C01%7Cahl27%40pitt.edu%7C8575b77db32345ca544b08db927ceae0%7C9ef9f489e0a04eeb87cc3a526112fd0d%7C1%7C0%7C638264837817340048%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C3000%7C%7C%7C&sdata=ZrT%2FYvklccqLCORBMf6nGop5o3n7O2thkknG1UAS2Gc%3D&reserved=0<https://www.rdocumentation.org/packages/expm/versions/0.999-7/topics/expm>
>
>
>     > On 2023-07-16 02:01, Durga Prasad G me14d059 wrote:
>     >> Respected Development Team,
>     >>
>     >> This is Durga Prasad reaching out to you regarding an
>     >> issue/concern related to Singular Value Decomposition SVD
>     >> in R software package. I am attaching a detailed
>     >> attachment with this letter which depicts real issues
>     >> with SVD in R.
>     >>
>     >> To reach the concern the expressions for the exponential
>     >> of a matrix using SVD and projection tensors are obtained
>     >> from series expansion. However, numerical inconsistency
>     >> is observed between the exponential of matrix obtained
>     >> using the function(svd()) used in R software.
>     >>
>     >> However, it is observed that most of the researchers
>     >> fraternity is engaged in utilising R software for their
>     >> research purposes and to the extent of my understanding
>     >> such an error in SVD in R software might raise the
>     >> concern about authenticity of the simulation results
>     >> produced and published by researchers across the globe.
>     >>
>     >> Further, I am very sure that the R software development
>     >> team is well versed with the happening and they have any
>     >> specific and resilient reasons for doing so. I would
>     >> request you kindly, to guide me through the concern.
>     >>
>     >> Thank you very much.
>

	[[alternative HTML version deleted]]


From @@m|tuom|v@@r@ @end|ng |rom hotm@||@com  Thu Aug  3 22:21:33 2023
From: @@m|tuom|v@@r@ @end|ng |rom hotm@||@com (Sami Tuomivaara)
Date: Thu, 3 Aug 2023 20:21:33 +0000
Subject: [Rd] feature request: optim() iteration of functions that return
 multiple values
Message-ID: <PAXP189MB1928AA39727C26A434F8D3FFD608A@PAXP189MB1928.EURP189.PROD.OUTLOOK.COM>

Dear all,

I have used optim a lot in contexts where it would useful to be able to iterate function myfun that, in addition to the primary objective to be minimized ('minimize.me'), could return other values such as alternative metrics of the minimization, informative intermediate values from the calculations, etc.

myfun  <- function()
{
...
return(list(minimize.me = minimize.me, R2 = R2, pval = pval, etc.))
}

During the iteration, optim could utilize just the first value from the myfun return list; all the other values calculated and returned by myfun could be ignored by optim.
After convergence, the other return values of myfun could be finally extracted and appended into the optim return value (which is a list) as additional entry e.g.: $aux <- list(R2, pval, etc.), (without 'minimize.me' as it is already returned as $value).

The usual ways for accessing optim return values, e.g., $par, $value, etc. are not affected.  Computational cost may not be prohibitive either.  Is this feasible to consider?


	[[alternative HTML version deleted]]


From e@ @end|ng |rom enr|co@chum@nn@net  Fri Aug  4 10:22:03 2023
From: e@ @end|ng |rom enr|co@chum@nn@net (Enrico Schumann)
Date: Fri, 04 Aug 2023 10:22:03 +0200
Subject: [Rd] 
 feature request: optim() iteration of functions that return
 multiple values
In-Reply-To: <PAXP189MB1928AA39727C26A434F8D3FFD608A@PAXP189MB1928.EURP189.PROD.OUTLOOK.COM>
 (Sami Tuomivaara's message of "Thu, 3 Aug 2023 20:21:33 +0000")
References: <PAXP189MB1928AA39727C26A434F8D3FFD608A@PAXP189MB1928.EURP189.PROD.OUTLOOK.COM>
Message-ID: <87cz03nro4.fsf@enricoschumann.net>

On Thu, 03 Aug 2023, Sami Tuomivaara writes:

> Dear all,
>
> I have used optim a lot in contexts where it would
> useful to be able to iterate function myfun that, in
> addition to the primary objective to be minimized
> ('minimize.me'), could return other values such as
> alternative metrics of the minimization, informative
> intermediate values from the calculations, etc.
>
> myfun  <- function()
> {
> ...
> return(list(minimize.me = minimize.me, R2 = R2, pval = pval, etc.))
> }
>
> During the iteration, optim could utilize just the first value from the myfun return list; all the other values calculated and returned by myfun could be ignored by optim.
> After convergence, the other return values of myfun
> could be finally extracted and appended into the optim
> return value (which is a list) as additional entry
> e.g.: $aux <- list(R2, pval, etc.), (without
> 'minimize.me' as it is already returned as $value).
>
> The usual ways for accessing optim return values, e.g.,
> $par, $value, etc. are not affected.  Computational
> cost may not be prohibitive either.  Is this feasible
> to consider?
>

If you only wish to store additional information, you could do
so with an environment, without changing optim.  For instance,
like so (using the first example from ?optim):

    data <- new.env()
    data$i <- 0
    data$fun.value <- numeric(1000)
    
    fr <- function(x, data) {   ## Rosenbrock Banana function
        x1 <- x[1]
        x2 <- x[2]
        ans <- 100 * (x2 - x1 * x1)^2 + (1 - x1)^2
        data$i <- data$i + 1
        data$fun.value[data$i] <- ans
        ans
    }
    optim(c(-1.2,1), fr, data = data)
    ## $par
    ## [1] 1.000260 1.000506
    ## 
    ## $value
    ## [1] 8.825241e-08
    ## 
    ## $counts
    ## function gradient 
    ##      195       NA 
    ## 
    ## ....

    data$i
    ## 195
    
    plot(data$fun.value[1:data$i])




-- 
Enrico Schumann
Lucerne, Switzerland
http://enricoschumann.net


From murdoch@dunc@n @end|ng |rom gm@||@com  Fri Aug  4 11:03:41 2023
From: murdoch@dunc@n @end|ng |rom gm@||@com (Duncan Murdoch)
Date: Fri, 4 Aug 2023 05:03:41 -0400
Subject: [Rd] 
 feature request: optim() iteration of functions that return
 multiple values
In-Reply-To: <PAXP189MB1928AA39727C26A434F8D3FFD608A@PAXP189MB1928.EURP189.PROD.OUTLOOK.COM>
References: <PAXP189MB1928AA39727C26A434F8D3FFD608A@PAXP189MB1928.EURP189.PROD.OUTLOOK.COM>
Message-ID: <76447425-d6e6-372d-6590-9c670e980905@gmail.com>

Enrico gave you a workaround that stores the extra values in an environment.

Another possible workaround is an optional argument to myfun() that asks 
it to return more information, e.g.

     fr <- function(x, data, extraInfo = FALSE) {   ## Rosenbrock Banana 
function
         x1 <- x[1]
         x2 <- x[2]
         ans <- 100 * (x2 - x1 * x1)^2 + (1 - x1)^2
         if (extraInfo) {
           list(ans=ans, extras = ...)
         else
           ans
     }

Then after optim() finishes, call fr() again with parameters as returned 
by optim, and extraInfo = TRUE.

Duncan Murdoch

On 03/08/2023 4:21 p.m., Sami Tuomivaara wrote:
> Dear all,
> 
> I have used optim a lot in contexts where it would useful to be able to iterate function myfun that, in addition to the primary objective to be minimized ('minimize.me'), could return other values such as alternative metrics of the minimization, informative intermediate values from the calculations, etc.
> 
> myfun  <- function()
> {
> ...
> return(list(minimize.me = minimize.me, R2 = R2, pval = pval, etc.))
> }
> 
> During the iteration, optim could utilize just the first value from the myfun return list; all the other values calculated and returned by myfun could be ignored by optim.
> After convergence, the other return values of myfun could be finally extracted and appended into the optim return value (which is a list) as additional entry e.g.: $aux <- list(R2, pval, etc.), (without 'minimize.me' as it is already returned as $value).
> 
> The usual ways for accessing optim return values, e.g., $par, $value, etc. are not affected.  Computational cost may not be prohibitive either.  Is this feasible to consider?
> 
> 
> 	[[alternative HTML version deleted]]
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From m@rt|n@becker @end|ng |rom mx@un|-@@@r|@nd@de  Sat Aug  5 10:13:24 2023
From: m@rt|n@becker @end|ng |rom mx@un|-@@@r|@nd@de (Martin Becker)
Date: Sat, 5 Aug 2023 10:13:24 +0200
Subject: [Rd] 
 feature request: optim() iteration of functions that return
 multiple values
In-Reply-To: <PAXP189MB1928AA39727C26A434F8D3FFD608A@PAXP189MB1928.EURP189.PROD.OUTLOOK.COM>
References: <PAXP189MB1928AA39727C26A434F8D3FFD608A@PAXP189MB1928.EURP189.PROD.OUTLOOK.COM>
Message-ID: <f0591cf8-a6b9-cc99-7afc-2d4957ab594b@mx.uni-saarland.de>

For a solution that does not require any change to the original function 
being optimized, the following one-liner could be used, which converts 
existing functions to functions that return only the first element:

returnFirst <- function(fun) function(...) do.call(fun,list(...))[[1]]

Example:

fr <- function(x) {   ## Rosenbrock Banana function
   x1 <- x[1]
   x2 <- x[2]
   ans <- 100 * (x2 - x1 * x1)^2 + (1 - x1)^2
   list(ans=ans, extra1 = 1:10, extra2 = letters)
}

fr2 <- returnFirst(fr)
tmp <- optim(c(-1.2,1), fr2)
fr(tmp$par)


Am 03.08.23 um 22:21 schrieb Sami Tuomivaara:
> Dear all,
> 
> I have used optim a lot in contexts where it would useful to be able to iterate function myfun that, in addition to the primary objective to be minimized ('minimize.me'), could return other values such as alternative metrics of the minimization, informative intermediate values from the calculations, etc.
> 
> myfun  <- function()
> {
> ...
> return(list(minimize.me = minimize.me, R2 = R2, pval = pval, etc.))
> }
> 
> During the iteration, optim could utilize just the first value from the myfun return list; all the other values calculated and returned by myfun could be ignored by optim.
> After convergence, the other return values of myfun could be finally extracted and appended into the optim return value (which is a list) as additional entry e.g.: $aux <- list(R2, pval, etc.), (without 'minimize.me' as it is already returned as $value).
> 
> The usual ways for accessing optim return values, e.g., $par, $value, etc. are not affected.  Computational cost may not be prohibitive either.  Is this feasible to consider?
> 
> 
> 	[[alternative HTML version deleted]]
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From kry|ov@r00t @end|ng |rom gm@||@com  Sat Aug  5 22:47:43 2023
From: kry|ov@r00t @end|ng |rom gm@||@com (Ivan Krylov)
Date: Sat, 5 Aug 2023 23:47:43 +0300
Subject: [Rd] random network disconnects
In-Reply-To: <1cb2c074-ad70-6b47-aff0-957bb9a8a3e9@pburns.seanet.com>
References: <1cb2c074-ad70-6b47-aff0-957bb9a8a3e9@pburns.seanet.com>
Message-ID: <20230805234743.2621bfea@parabola>

? Mon, 31 Jul 2023 16:43:17 +0100
Patrick Burns <pburns at pburns.seanet.com> ?????:

> At work we are getting lots of issues with 'permission denied' or 
> 'network not found' and so forth when reading and writing between our 
> machines and a file server.  This happens randomly so the following 
> function solves the problem for 'cat' commands

These sound like error codes returned from the operating system, which
R has no choice but forward to the user. (Well, in this case the error
turns out to be transient, but files are unfortunately fraught with
peril with no easy solutions [*].)

Even using system call tracing or setting a symbolic debugger breakpoint
on an error return from cat() will only tell you the OS error code and
the file on which the operation failed, both of which you already know.
Getting to the root of the problem will likely involve drilling down
into the details of the exact networked filesystem used, which R is
supposed to know nothing about. Maybe you could ask on ServerFault or
on #linux / #windows / #<applicable server OS> on Libera.Char?

-- 
Best regards,
Ivan

[*] https://danluu.com/deconstruct-files/


From kry|ov@r00t @end|ng |rom gm@||@com  Sat Aug  5 22:52:55 2023
From: kry|ov@r00t @end|ng |rom gm@||@com (Ivan Krylov)
Date: Sat, 5 Aug 2023 23:52:55 +0300
Subject: [Rd] HTML documentation check works best with Tidy >= 5.0.0
Message-ID: <20230805235255.71a4cdb7@parabola>

Hello R-devel,

Old versions of HTML Tidy report false positive NOTEs for the HTML
verison of the manual where Tidy encounters HTML5 features it is not
ready for.

Conveniently, both HTML5 support and release version numbers officially
appeared in HTML Tidy version 5.0.0 [*]. For example, the last version
of the "old Tidy" I could find fails on an R help page:

 cvs -z3 -d:pserver:anonymous at tidy.cvs.sourceforge.net:/cvsroot/tidy \
  co -P tidy
 cd tidy
 make -C build/gmake
 bin/tidy -v
 # HTML Tidy for Linux released on 25 March 2009
 R-devel CMD Rdconv .../R-devel/src/library/stats/man/lm.Rd -t html | \
  bin/tidy >/dev/null
 # line 4 column 1 - Warning: <link> inserting "type" attribute
 # line 12 column 1 - Warning: <script> proprietary attribute "onload"
 # line 12 column 1 - Warning: <script> inserting "type" attribute
 # line 17 column 1 - Warning: <table> lacks "summary" attribute
 # line 44 column 1 - Warning: <table> lacks "summary" attribute
 # line 200 column 1 - Warning: <table> lacks "summary" attribute
 # <...>

On the other hand, the oldest released version of the Tidy-HTML5 handles
Rd-produced HTML correctly:

 git clone https://github.com/htacg/tidy-html5
 cd tidy-html5
 git checkout 5.0.0
 mkdir b5.0.0
 cd b5.0.0
 cmake ..
 cmake --build .
 ./tidy -v
 # HTML Tidy for Linux version 5.0.0
 R-devel CMD Rdconv .../R-devel/src/library/stats/man/lm.Rd -t html | \
  ./tidy >/dev/null
 # Info: Document content looks like HTML5
 # No warnings or errors were found.
 # <...>

We can use this information to only use HTML Tidy versions that support
the idioms used by Rd2HTML:

--- check.R	(revision 84834)
+++ check.R	(working copy)
@@ -5040,7 +5040,7 @@
 
         t1 <- proc.time()
         if(i1) { ## validate
-            ## require HTML Tidy, and not macOS's ancient version.
+            ## require HTML5 Tidy, and not macOS's ancient version.
             msg <- ""
             Tidy <- Sys.getenv("R_TIDYCMD", "tidy")
             OK <- nzchar(Sys.which(Tidy))
@@ -5048,10 +5048,8 @@
                 ver <- system2(Tidy, "--version", stdout = TRUE)
                 OK <- startsWith(ver, "HTML Tidy")
                 if(OK) {
-                    OK <- !grepl('Apple Inc. build 2649', ver)
-                    if(!OK) msg <- ": 'tidy' is Apple's too old build"
-                    ## Maybe we should also check version,
-                    ## but e.g. Ubuntu 16.04 does not show one.
+                    OK <- grepl('version 5.\\d+\\.\\d+', ver)
+                    if(!OK) msg <- ": 'tidy' does not appear to be version 5"
                 } else msg <- ": 'tidy' is not HTML Tidy"
             } else msg <- ": no command 'tidy' found"
             if(OK) {

(This is just one way to solve the problem. Instead, we could discard
versions that say "released on <date>", or try to parse the version
specification and only discard it if (a) we can't parse it or (b) it's
below 5.0.0.)

With the patch applied, I get:

 PATH=.../tidy/bin:"$PATH" _R_CHECK_RD_VALIDATE_RD2HTML_=TRUE \
  R-devel CMD check $package.tar.gz
 # * checking HTML version of manual ... NOTE
 # Skipping checking HTML validation: 'tidy' does not appear to be 
 # version 5

 PATH=.../tidy-html5/b5.0.0/:"$PATH" _R_CHECK_RD_VALIDATE_RD2HTML_=TRUE \
  R-devel CMD check $package.tar.gz
 # * checking HTML version of manual ... OK

-- 
Best regards,
Ivan

[*] There are commits in the tidy-html5 repo containing versions marked
4.x.x, but they aren't tagged and weren't considered an official
release, as far as I know.


From otoomet @end|ng |rom gm@||@com  Sun Aug  6 08:49:38 2023
From: otoomet @end|ng |rom gm@||@com (Ott Toomet)
Date: Sat, 5 Aug 2023 23:49:38 -0700
Subject: [Rd] hist(..., log="y")
Message-ID: <CAMMJQ0b-AwgT-3U-4TQYwLA7+NPzj8E0Y2Q=xXk6KWOgCJqUjg@mail.gmail.com>

Sorry if this topic has been discussed earlier.

Currently, hist(..., log="y") fails with

> hist(rexp(1000, 1), log="y")
Warning messages:
1: In plot.window(xlim, ylim, "", ...) :
  nonfinite axis=2 limits [GScale(-inf,2.59218,..); log=TRUE] -- corrected
now
2: In title(main = main, sub = sub, xlab = xlab, ylab = ylab, ...) :
  "log" is not a graphical parameter
3: In axis(1, ...) : "log" is not a graphical parameter
4: In axis(2, at = yt, ...) : "log" is not a graphical parameter

The same applies for log="x"

> hist(rexp(1000, 1), log="x")
Warning messages:
1: In plot.window(xlim, ylim, "", ...) :
  nonfinite axis=1 limits [GScale(-inf,0.954243,..); log=TRUE] -- corrected
now
2: In title(main = main, sub = sub, xlab = xlab, ylab = ylab, ...) :
  "log" is not a graphical parameter
3: In axis(1, ...) : "log" is not a graphical parameter
4: In axis(2, at = yt, ...) : "log" is not a graphical parameter

This applies for the current svn version of R, and also a few recent
published versions.  This is unfortunate for two reasons:

* the error message is not quite correct--"log" is a graphical parameter,
but "hist" does not support it.
* for various kinds of data it is worthwhile to make histograms in log
scale.  "hist" is a very nice and convenient function and support for log
scale would be handy here.

I also played a little with the code, and it seems to be very easy to
implement.  I am happy to make a  patch if the team thinks it is worth
pursuing.

Cheers,
Ott

	[[alternative HTML version deleted]]


From otoomet @end|ng |rom gm@||@com  Sun Aug  6 08:55:34 2023
From: otoomet @end|ng |rom gm@||@com (Ott Toomet)
Date: Sat, 5 Aug 2023 23:55:34 -0700
Subject: [Rd] 
 feature request: optim() iteration of functions that return
 multiple values
In-Reply-To: <f0591cf8-a6b9-cc99-7afc-2d4957ab594b@mx.uni-saarland.de>
References: <PAXP189MB1928AA39727C26A434F8D3FFD608A@PAXP189MB1928.EURP189.PROD.OUTLOOK.COM>
 <f0591cf8-a6b9-cc99-7afc-2d4957ab594b@mx.uni-saarland.de>
Message-ID: <CAMMJQ0ZatzN9-JNM6RT+PFUXVQ2XXq87pOuByj6HMqWUgherUg@mail.gmail.com>

I have done this using attributes:

fr <- function(x) {   ## Rosenbrock Banana function
   x1 <- x[1]
   x2 <- x[2]
   ans <- 100 * (x2 - x1 * x1)^2 + (1 - x1)^2
   attr(ans, "extra1") <- 1:10
   attr(ans, "extra2") <- letters
   ans
}

Not sure if this works in your case though.

Cheers,
Ott

On Sat, Aug 5, 2023 at 1:13?AM Martin Becker <
martin.becker at mx.uni-saarland.de> wrote:

> For a solution that does not require any change to the original function
> being optimized, the following one-liner could be used, which converts
> existing functions to functions that return only the first element:
>
> returnFirst <- function(fun) function(...) do.call(fun,list(...))[[1]]
>
> Example:
>
> fr <- function(x) {   ## Rosenbrock Banana function
>    x1 <- x[1]
>    x2 <- x[2]
>    ans <- 100 * (x2 - x1 * x1)^2 + (1 - x1)^2
>    list(ans=ans, extra1 = 1:10, extra2 = letters)
> }
>
> fr2 <- returnFirst(fr)
> tmp <- optim(c(-1.2,1), fr2)
> fr(tmp$par)
>
>
> Am 03.08.23 um 22:21 schrieb Sami Tuomivaara:
> > Dear all,
> >
> > I have used optim a lot in contexts where it would useful to be able to
> iterate function myfun that, in addition to the primary objective to be
> minimized ('minimize.me'), could return other values such as alternative
> metrics of the minimization, informative intermediate values from the
> calculations, etc.
> >
> > myfun  <- function()
> > {
> > ...
> > return(list(minimize.me = minimize.me, R2 = R2, pval = pval, etc.))
> > }
> >
> > During the iteration, optim could utilize just the first value from the
> myfun return list; all the other values calculated and returned by myfun
> could be ignored by optim.
> > After convergence, the other return values of myfun could be finally
> extracted and appended into the optim return value (which is a list) as
> additional entry e.g.: $aux <- list(R2, pval, etc.), (without 'minimize.me'
> as it is already returned as $value).
> >
> > The usual ways for accessing optim return values, e.g., $par, $value,
> etc. are not affected.  Computational cost may not be prohibitive either.
> Is this feasible to consider?
> >
> >
> >       [[alternative HTML version deleted]]
> >
> > ______________________________________________
> > R-devel at r-project.org mailing list
> > https://stat.ethz.ch/mailman/listinfo/r-devel
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>

	[[alternative HTML version deleted]]


From kry|ov@r00t @end|ng |rom gm@||@com  Sun Aug  6 15:42:22 2023
From: kry|ov@r00t @end|ng |rom gm@||@com (Ivan Krylov)
Date: Sun, 6 Aug 2023 16:42:22 +0300
Subject: [Rd] HTML documentation check works best with Tidy >= 5.0.0
In-Reply-To: <25807.29537.855552.467716@hornik.net>
References: <20230805235255.71a4cdb7@parabola>
 <25807.29537.855552.467716@hornik.net>
Message-ID: <20230806164222.3d143113@parabola>

? Sun, 6 Aug 2023 12:18:09 +0200
Kurt Hornik <Kurt.Hornik at wu.ac.at> ?????:

> IIrc all Linux versions advertize themselves as something like
> 
>   HTML Tidy for Linux version 5.8.0
> 
> What about windows and macOS?

I've checked the "modern" Windows binaries of HTML Tidy, and they say
so too. Cannot check the macOS version easily.

I think that any released version older than 5.0.0 (before the
development moved from https://tidy.sf.net/ to
https://www.html-tidy.org/ in 2015) will only identify itself by the
release date. Judging by an R-SIG-Mac thread I've found, "Apple Inc.
build 2649" that may be bundled with some macOS versions must be of the
SourceForge vintage too, before they started using version numbers.

There are commits in the "modern" Tidy source tree using 4.x.x version
numbers, but I don't think they were considered to be formally
released. For example, Debian went from the SourceForge CVS snapshots
straight to 5.2.0 in 2016 without packaging the 4.x.x versions.

-- 
Best regards,
Ivan


From dw|n@em|u@ @end|ng |rom comc@@t@net  Sun Aug  6 18:00:51 2023
From: dw|n@em|u@ @end|ng |rom comc@@t@net (David Winsemius)
Date: Sun, 6 Aug 2023 09:00:51 -0700
Subject: [Rd] hist(..., log="y")
In-Reply-To: <CAMMJQ0b-AwgT-3U-4TQYwLA7+NPzj8E0Y2Q=xXk6KWOgCJqUjg@mail.gmail.com>
References: <CAMMJQ0b-AwgT-3U-4TQYwLA7+NPzj8E0Y2Q=xXk6KWOgCJqUjg@mail.gmail.com>
Message-ID: <A9103991-8E99-4B88-B595-8AAFEF94EE71@comcast.net>

hist() is designed so that the total area sums to 1. You should build you desired behavior using a barchart. 

? 
David


Sent from my iPhone

> On Aug 5, 2023, at 11:50 PM, Ott Toomet <otoomet at gmail.com> wrote:
> 
> ?Sorry if this topic has been discussed earlier.
> 
> Currently, hist(..., log="y") fails with
> 
>> hist(rexp(1000, 1), log="y")
> Warning messages:
> 1: In plot.window(xlim, ylim, "", ...) :
>  nonfinite axis=2 limits [GScale(-inf,2.59218,..); log=TRUE] -- corrected
> now
> 2: In title(main = main, sub = sub, xlab = xlab, ylab = ylab, ...) :
>  "log" is not a graphical parameter
> 3: In axis(1, ...) : "log" is not a graphical parameter
> 4: In axis(2, at = yt, ...) : "log" is not a graphical parameter
> 
> The same applies for log="x"
> 
>> hist(rexp(1000, 1), log="x")
> Warning messages:
> 1: In plot.window(xlim, ylim, "", ...) :
>  nonfinite axis=1 limits [GScale(-inf,0.954243,..); log=TRUE] -- corrected
> now
> 2: In title(main = main, sub = sub, xlab = xlab, ylab = ylab, ...) :
>  "log" is not a graphical parameter
> 3: In axis(1, ...) : "log" is not a graphical parameter
> 4: In axis(2, at = yt, ...) : "log" is not a graphical parameter
> 
> This applies for the current svn version of R, and also a few recent
> published versions.  This is unfortunate for two reasons:
> 
> * the error message is not quite correct--"log" is a graphical parameter,
> but "hist" does not support it.
> * for various kinds of data it is worthwhile to make histograms in log
> scale.  "hist" is a very nice and convenient function and support for log
> scale would be handy here.
> 
> I also played a little with the code, and it seems to be very easy to
> implement.  I am happy to make a  patch if the team thinks it is worth
> pursuing.
> 
> Cheers,
> Ott
> 
>    [[alternative HTML version deleted]]
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From dw|n@em|u@ @end|ng |rom comc@@t@net  Sun Aug  6 18:33:00 2023
From: dw|n@em|u@ @end|ng |rom comc@@t@net (David Winsemius)
Date: Sun, 6 Aug 2023 09:33:00 -0700
Subject: [Rd] hist(..., log="y")
In-Reply-To: <A9103991-8E99-4B88-B595-8AAFEF94EE71@comcast.net>
References: <A9103991-8E99-4B88-B595-8AAFEF94EE71@comcast.net>
Message-ID: <E48C208C-3F31-41A4-8C05-9CAB2287CD94@comcast.net>

I guess my memory was off slightly. Densities are only plotted with freq=TRUE. Still there the ever present conundrum that 0 counts cannot be sensibly represented. 

Why not:
hist( log(x), ?) #? In situations where it might make sense. 


Sent from my iPhone

> On Aug 6, 2023, at 9:01 AM, David Winsemius <dwinsemius at comcast.net> wrote:
> 
> ?hist() is designed so that the total area sums to 1. You should build you desired behavior using a barchart. 
> 
> ? 
> David
> 
> 
> Sent from my iPhone
> 
>> On Aug 5, 2023, at 11:50 PM, Ott Toomet <otoomet at gmail.com> wrote:
>> 
>> ?Sorry if this topic has been discussed earlier.
>> 
>> Currently, hist(..., log="y") fails with
>> 
>>> hist(rexp(1000, 1), log="y")
>> Warning messages:
>> 1: In plot.window(xlim, ylim, "", ...) :
>> nonfinite axis=2 limits [GScale(-inf,2.59218,..); log=TRUE] -- corrected
>> now
>> 2: In title(main = main, sub = sub, xlab = xlab, ylab = ylab, ...) :
>> "log" is not a graphical parameter
>> 3: In axis(1, ...) : "log" is not a graphical parameter
>> 4: In axis(2, at = yt, ...) : "log" is not a graphical parameter
>> 
>> The same applies for log="x"
>> 
>>> hist(rexp(1000, 1), log="x")
>> Warning messages:
>> 1: In plot.window(xlim, ylim, "", ...) :
>> nonfinite axis=1 limits [GScale(-inf,0.954243,..); log=TRUE] -- corrected
>> now
>> 2: In title(main = main, sub = sub, xlab = xlab, ylab = ylab, ...) :
>> "log" is not a graphical parameter
>> 3: In axis(1, ...) : "log" is not a graphical parameter
>> 4: In axis(2, at = yt, ...) : "log" is not a graphical parameter
>> 
>> This applies for the current svn version of R, and also a few recent
>> published versions.  This is unfortunate for two reasons:
>> 
>> * the error message is not quite correct--"log" is a graphical parameter,
>> but "hist" does not support it.
>> * for various kinds of data it is worthwhile to make histograms in log
>> scale.  "hist" is a very nice and convenient function and support for log
>> scale would be handy here.
>> 
>> I also played a little with the code, and it seems to be very easy to
>> implement.  I am happy to make a  patch if the team thinks it is worth
>> pursuing.
>> 
>> Cheers,
>> Ott
>> 
>>   [[alternative HTML version deleted]]
>> 
>> ______________________________________________
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel


From edd @end|ng |rom deb|@n@org  Sun Aug  6 23:05:03 2023
From: edd @end|ng |rom deb|@n@org (Dirk Eddelbuettel)
Date: Sun, 6 Aug 2023 16:05:03 -0500
Subject: [Rd] A demonstrated shortcoming of the R package management system
Message-ID: <25808.2815.112074.192190@rob.eddelbuettel.com>


CRAN, by relying on the powerful package management system that is part of R,
provides an unparalleled framework for extending R with nearly 20k packages.

We recently encountered an issue that highlights a missing element in the
otherwise outstanding package management system. So we would like to start a
discussion about enhancing its feature set. As shown below, a mechanism to
force reinstallation of packages may be needed.

A demo is included below, it is reproducible in a container. We find the
easiest/fastest reproduction is by saving the code snippet below in the
current directory as eg 'matrixIssue.R' and have it run in a container as

   docker run --rm -ti -v `pwd`:/mnt rocker/r2u Rscript /mnt/matrixIssue.R
  
This runs in under two minutes, first installing the older Matrix, next
installs SeuratObject, and then by removing the older Matrix making the
(already installed) current Matrix version the default. This simulates a
package update for Matrix. Which, as the final snippet demonstrates, silently
breaks SeuratObject as the cached S4 method Csparse_validate is now missing.
So when SeuratObject was installed under Matrix 1.5.1, it becomes unuseable
under Matrix 1.6.0.

What this shows is that a call to update.packages() will silently corrupt an
existing installation.  We understand that this was known and addressed at
CRAN by rebuilding all binary packages (for macOS and Windows).

But it leaves both users relying on source installation as well as
distributors of source packages in a dire situation. It hurt me three times:
my default R installation was affected with unit tests (involving
SeuratObject) silently failing. It similarly broke our CI setup at work.  And
it created a fairly bad headache for the Debian packaging I am involved with
(and I surmise it affects other distro similarly).

It would be good to have a mechanism where a package, when being upgraded,
could flag that 'more actions are required' by the system (administrator).
We think this example demonstrates that we need such a mechanism to avoid
(silently !!) breaking existing installations, possibly by forcing
reinstallation of other packages.  R knows the package dependency graph and
could trigger this, possibly after an 'opt-in' variable the user / admin
sets.

One possibility may be to add a new (versioned) field 'Breaks:'. Matrix could
then have added 'Breaks: SeuratObject (<= 4.1.3)' preventing an installation
of Matrix 1.6.0 when SeuratObject 4.1.3 (or earlier) is present, but
permitting an update to Matrix 1.6.0 alongside a new version, say, 4.1.4 of
SeuratObject which could itself have a versioned Depends: Matrix (>= 1.6.0).

Regards,  Dirk


## Code example follows. Recommended to run the rocker/r2u container.
## Could also run 'apt update -qq; apt upgrade -y' but not required
## Thanks to my colleague Paul Hoffman for the core of this example

## now have Matrix 1.6.0 because r2u and CRAN remain current but we can install an older Matrix
remotes::install_version('Matrix', '1.5.1')

## we can confirm that we have Matrix 1.5.1
packageVersion("Matrix")

## we now install SeuratObject from source and to speed things up we first install the binary
install.packages("SeuratObject")   # in this container via bspm/r2u as binary
## and then force a source installation (turning bspm off) _while Matrix is at 1.5.1_
if (requireNamespace("bspm", quietly=TRUE) bspm::disable()
Sys.setenv(PKG_CXXFLAGS='-Wno-ignored-attributes') 	# Eigen compilation noise silencer
install.packages('SeuratObject')

## we now remove the Matrix package version 1.5.1 we installed into /usr/local leaving 1.6.0
remove.packages("Matrix")
packageVersion("Matrix")

## and we now run a bit of SeuratObject code that is now broken as Csparse_validate is gone
suppressMessages(library(SeuratObject))
data('pbmc_small')
graph <- pbmc_small[['RNA_snn']]
class(graph)
getClass('Graph')
show(graph) # this fails


-- 
dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org


From bbo|ker @end|ng |rom gm@||@com  Mon Aug  7 01:00:40 2023
From: bbo|ker @end|ng |rom gm@||@com (Ben Bolker)
Date: Sun, 6 Aug 2023 19:00:40 -0400
Subject: [Rd] 
 A demonstrated shortcoming of the R package management system
In-Reply-To: <25808.2815.112074.192190@rob.eddelbuettel.com>
References: <25808.2815.112074.192190@rob.eddelbuettel.com>
Message-ID: <3d169f58-fc77-dbfa-88cf-ab4b44388aa1@gmail.com>

   I would support this suggestion.  There is a similar binary 
dependency chain from Matrix ? TMB ? glmmTMB; we have implemented 
various checks to make users aware that they need to reinstall from 
source, and to some extent we've tried to push out synchronous updates 
(i.e., push an update of TMB to CRAN every time Matrix changes, and an 
update of glmmTMB after that), but centralized machinery for this would 
certainly be nice.

   FWIW some of the machinery is here: 
https://github.com/glmmTMB/glmmTMB/blob/d9ee7b043281341429381faa19b5e53cb5a378c3/glmmTMB/R/utils.R#L209-L295 
-- it relies on a Makefile rule that caches the current installed 
version of TMB: 
https://github.com/glmmTMB/glmmTMB/blob/d9ee7b043281341429381faa19b5e53cb5a378c3/glmmTMB/R/utils.R#L209-L295


   cheers
    Ben Bolker


On 2023-08-06 5:05 p.m., Dirk Eddelbuettel wrote:
> 
> CRAN, by relying on the powerful package management system that is part of R,
> provides an unparalleled framework for extending R with nearly 20k packages.
> 
> We recently encountered an issue that highlights a missing element in the
> otherwise outstanding package management system. So we would like to start a
> discussion about enhancing its feature set. As shown below, a mechanism to
> force reinstallation of packages may be needed.
> 
> A demo is included below, it is reproducible in a container. We find the
> easiest/fastest reproduction is by saving the code snippet below in the
> current directory as eg 'matrixIssue.R' and have it run in a container as
> 
>     docker run --rm -ti -v `pwd`:/mnt rocker/r2u Rscript /mnt/matrixIssue.R
>    
> This runs in under two minutes, first installing the older Matrix, next
> installs SeuratObject, and then by removing the older Matrix making the
> (already installed) current Matrix version the default. This simulates a
> package update for Matrix. Which, as the final snippet demonstrates, silently
> breaks SeuratObject as the cached S4 method Csparse_validate is now missing.
> So when SeuratObject was installed under Matrix 1.5.1, it becomes unuseable
> under Matrix 1.6.0.
> 
> What this shows is that a call to update.packages() will silently corrupt an
> existing installation.  We understand that this was known and addressed at
> CRAN by rebuilding all binary packages (for macOS and Windows).
> 
> But it leaves both users relying on source installation as well as
> distributors of source packages in a dire situation. It hurt me three times:
> my default R installation was affected with unit tests (involving
> SeuratObject) silently failing. It similarly broke our CI setup at work.  And
> it created a fairly bad headache for the Debian packaging I am involved with
> (and I surmise it affects other distro similarly).
> 
> It would be good to have a mechanism where a package, when being upgraded,
> could flag that 'more actions are required' by the system (administrator).
> We think this example demonstrates that we need such a mechanism to avoid
> (silently !!) breaking existing installations, possibly by forcing
> reinstallation of other packages.  R knows the package dependency graph and
> could trigger this, possibly after an 'opt-in' variable the user / admin
> sets.
> 
> One possibility may be to add a new (versioned) field 'Breaks:'. Matrix could
> then have added 'Breaks: SeuratObject (<= 4.1.3)' preventing an installation
> of Matrix 1.6.0 when SeuratObject 4.1.3 (or earlier) is present, but
> permitting an update to Matrix 1.6.0 alongside a new version, say, 4.1.4 of
> SeuratObject which could itself have a versioned Depends: Matrix (>= 1.6.0).
> 
> Regards,  Dirk
> 
> 
> ## Code example follows. Recommended to run the rocker/r2u container.
> ## Could also run 'apt update -qq; apt upgrade -y' but not required
> ## Thanks to my colleague Paul Hoffman for the core of this example
> 
> ## now have Matrix 1.6.0 because r2u and CRAN remain current but we can install an older Matrix
> remotes::install_version('Matrix', '1.5.1')
> 
> ## we can confirm that we have Matrix 1.5.1
> packageVersion("Matrix")
> 
> ## we now install SeuratObject from source and to speed things up we first install the binary
> install.packages("SeuratObject")   # in this container via bspm/r2u as binary
> ## and then force a source installation (turning bspm off) _while Matrix is at 1.5.1_
> if (requireNamespace("bspm", quietly=TRUE) bspm::disable()
> Sys.setenv(PKG_CXXFLAGS='-Wno-ignored-attributes') 	# Eigen compilation noise silencer
> install.packages('SeuratObject')
> 
> ## we now remove the Matrix package version 1.5.1 we installed into /usr/local leaving 1.6.0
> remove.packages("Matrix")
> packageVersion("Matrix")
> 
> ## and we now run a bit of SeuratObject code that is now broken as Csparse_validate is gone
> suppressMessages(library(SeuratObject))
> data('pbmc_small')
> graph <- pbmc_small[['RNA_snn']]
> class(graph)
> getClass('Graph')
> show(graph) # this fails
> 
>


From m@ech|er @end|ng |rom @t@t@m@th@ethz@ch  Mon Aug  7 10:54:22 2023
From: m@ech|er @end|ng |rom @t@t@m@th@ethz@ch (Martin Maechler)
Date: Mon, 7 Aug 2023 10:54:22 +0200
Subject: [Rd] hist(..., log="y")
In-Reply-To: <CAMMJQ0b-AwgT-3U-4TQYwLA7+NPzj8E0Y2Q=xXk6KWOgCJqUjg@mail.gmail.com>
References: <CAMMJQ0b-AwgT-3U-4TQYwLA7+NPzj8E0Y2Q=xXk6KWOgCJqUjg@mail.gmail.com>
Message-ID: <25808.45374.920991.936594@stat.math.ethz.ch>

>>>>> Ott Toomet 
>>>>>     on Sat, 5 Aug 2023 23:49:38 -0700 writes:

    > Sorry if this topic has been discussed earlier.

    > Currently, hist(..., log="y") fails with

    >> hist(rexp(1000, 1), log="y")
    > Warning messages: 1: In plot.window(xlim, ylim, "", ...) :
    > nonfinite axis=2 limits [GScale(-inf,2.59218,..);
    > log=TRUE] -- corrected now 2: In title(main = main, sub =
    > sub, xlab = xlab, ylab = ylab, ...) : "log" is not a
    > graphical parameter 3: In axis(1, ...) : "log" is not a
    > graphical parameter 4: In axis(2, at = yt, ...) : "log" is
    > not a graphical parameter

    > The same applies for log="x"

[...........]

    > This applies for the current svn version of R, and also a
    > few recent published versions.  This is unfortunate for
    > two reasons:

    > * the error message is not quite correct--"log" is a
    > graphical parameter, but "hist" does not support it.

No, not if you use R's (or S's before that) definition:

   graphical parameters := {the possible argument of par()}

log is *not* among these.


    > * for various kinds of data it is worthwhile to make
    > histograms in log scale.  "hist" is a very nice and
    > convenient function and support for log scale would be
    > handy here.

Yes, possibly (see below).
Note that the above are not errors, but warnings,
and there *is* some support, e.g.,

    > set.seed(1); range(x <- rlnorm(1111))
    [1]  0.04938796 45.16293285
    > hx <- hist(x, log="x", xlim=c(0.049, 47))
    Warning messages:
    1: In title(main = main, sub = sub, xlab = xlab, ylab = ylab, ...) :
      "log" is not a graphical parameter
    2: In axis(1, ...) : "log" is not a graphical parameter
    3: In axis(2, at = yt, ...) : "log" is not a graphical parameter

    > str(hx)
    List of 6
     $ breaks  : num [1:11] 0 5 10 15 20 25 30 35 40 45 ...
     $ counts  : int [1:10] 1041 58 10 0 1 0 0 0 0 1
     $ density : num [1:10] 0.1874 0.01044 0.0018 0 0.00018 ...
     $ mids    : num [1:10] 2.5 7.5 12.5 17.5 22.5 27.5 32.5 37.5 42.5 47.5
     $ xname   : chr "x"
     $ equidist: logi TRUE
     - attr(*, "class")= chr "histogram"

where we see that it *does* plot  ... but crucially not the very first bin,
because log(0) == -Inf,  with over 90% (viz. 1041) counts.

    > I also played a little with the code, and it seems to be
    > very easy to implement.  I am happy to make a patch if the
    > team thinks it is worth pursuing.

    > Cheers, Ott

Yeah.. and that's is the important question.

Most statisticians know that a histogram is a pretty bad
density estimator (notably if the natural density has an
infinite support) compared to simple kernel density estimates,
e.g. those by density().
Hence, I'd argue that if you expect enough sophistication from
your "viewer"s to understand a log-scale histogram, I'd say you
should use a density with log="x" and or "y"  and I I have
successfully done so several times: It *does* work
{particularly nicely if you use my sfsmisc::eaxis() for the log axis/es}.

But you (and others) may have more good arguments why hist()
should work with log="x" and/or log="y"...

Also if your patch relatively small, its usefulness may 
outweigh the added complexity (and its long-term maintenance !).

Martin


From n||@@kehre|n @end|ng |rom gm@||@com  Mon Aug  7 08:48:23 2023
From: n||@@kehre|n @end|ng |rom gm@||@com (Nils Kehrein)
Date: Mon, 7 Aug 2023 08:48:23 +0200
Subject: [Rd] Detecting physical CPUs in detectCores() on Linux platforms
Message-ID: <CAObhMffcPOLHN_ko1VQEu-taHjCiuc5kPCA9ybS1O9r_UOn1GQ@mail.gmail.com>

Dear all,

I recently noticed that `detectCores()` ignores the `logical=FALSE`
argument on Linux platforms. This means that the function will always
return the number of logical CPUs, i.e. it will count the number of threads
that theoretically can run in parallel due to e.g. hyper-threading.
Unfortunately, this can result in issues in high-performance computing use
cases where hyper-threading might degrade performance instead of improving
it.

Currently, src/library/parallel/R/detectCores.R uses the following R/shell
code fragment to identify the number of logical CPUs:
linux = 'grep "^processor" /proc/cpuinfo 2>/dev/null | wc -l'

As far as I understand, one could derive the number of online physical CPUs
by parsing the contents of /sys/devices/system/cpu/* but that seems rather
cumbersome. Instead, could we amend the R code with the following line?
linux = if(logical) 'grep "^processor" /proc/cpuinfo 2>/dev/null | wc -l'
else 'lscpu -b --parse="CORE" | tail -n +5 | sort -u | wc -l'

This solution uses `lscpu` from `sys-utils`. The -b switch makes sure that
only online CPUs/cores are listed and due to the --parse="CORE", the output
will contain only a single column with logical core ids. It seems to do the
job in my view, but there might be edge cases for exotic CPU topologies
that I am not aware of.

Thank you, Nils

	[[alternative HTML version deleted]]


From edd @end|ng |rom deb|@n@org  Mon Aug  7 14:12:34 2023
From: edd @end|ng |rom deb|@n@org (Dirk Eddelbuettel)
Date: Mon, 7 Aug 2023 07:12:34 -0500
Subject: [Rd] 
 Detecting physical CPUs in detectCores() on Linux platforms
In-Reply-To: <CAObhMffcPOLHN_ko1VQEu-taHjCiuc5kPCA9ybS1O9r_UOn1GQ@mail.gmail.com>
References: <CAObhMffcPOLHN_ko1VQEu-taHjCiuc5kPCA9ybS1O9r_UOn1GQ@mail.gmail.com>
Message-ID: <25808.57266.337153.29417@rob.eddelbuettel.com>


On 7 August 2023 at 08:48, Nils Kehrein wrote:
| I recently noticed that `detectCores()` ignores the `logical=FALSE`
| argument on Linux platforms. This means that the function will always
| return the number of logical CPUs, i.e. it will count the number of threads
| that theoretically can run in parallel due to e.g. hyper-threading.
| Unfortunately, this can result in issues in high-performance computing use
| cases where hyper-threading might degrade performance instead of improving
| it.
| 
| Currently, src/library/parallel/R/detectCores.R uses the following R/shell
| code fragment to identify the number of logical CPUs:
| linux = 'grep "^processor" /proc/cpuinfo 2>/dev/null | wc -l'
| 
| As far as I understand, one could derive the number of online physical CPUs
| by parsing the contents of /sys/devices/system/cpu/* but that seems rather
| cumbersome. Instead, could we amend the R code with the following line?
| linux = if(logical) 'grep "^processor" /proc/cpuinfo 2>/dev/null | wc -l'
| else 'lscpu -b --parse="CORE" | tail -n +5 | sort -u | wc -l'

That's good but you also need to at protect this from `lscpu` being in the
path.  Maybe `if (logical && nzchar(Sys.which("lscpu")))` ?

Dirk

| This solution uses `lscpu` from `sys-utils`. The -b switch makes sure that
| only online CPUs/cores are listed and due to the --parse="CORE", the output
| will contain only a single column with logical core ids. It seems to do the
| job in my view, but there might be edge cases for exotic CPU topologies
| that I am not aware of.
| 
| Thank you, Nils
| 
| 	[[alternative HTML version deleted]]
| 
| ______________________________________________
| R-devel at r-project.org mailing list
| https://stat.ethz.ch/mailman/listinfo/r-devel

-- 
dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org


From kry|ov@r00t @end|ng |rom gm@||@com  Mon Aug  7 15:15:51 2023
From: kry|ov@r00t @end|ng |rom gm@||@com (Ivan Krylov)
Date: Mon, 7 Aug 2023 16:15:51 +0300
Subject: [Rd] 
 A demonstrated shortcoming of the R package management system
In-Reply-To: <25808.2815.112074.192190@rob.eddelbuettel.com>
References: <25808.2815.112074.192190@rob.eddelbuettel.com>
Message-ID: <20230807161551.5e87e2e9@parabola>

? Sun, 6 Aug 2023 16:05:03 -0500
Dirk Eddelbuettel <edd at debian.org> ?????:

> One possibility may be to add a new (versioned) field 'Breaks:'.
> Matrix could then have added 'Breaks: SeuratObject (<= 4.1.3)'
> preventing an installation of Matrix 1.6.0 when SeuratObject 4.1.3
> (or earlier) is present, but permitting an update to Matrix 1.6.0
> alongside a new version, say, 4.1.4 of SeuratObject which could
> itself have a versioned Depends: Matrix (>= 1.6.0).

I wouldn't entirely agree that Matrix 1.6.0 breaks SeuratObject 4.1.3,
given that it's still possible to install first Matrix 1.6.0 and then
SeuratObject 4.1.3. The breakage definitely exists, but not on the
source package level.

It may also not be easy for the package developer to notice breaking a
binary package while performing reverse dependency checks, in time to
add such a notice to their package. The recommended way to do that is
tools::check_packages_in_dir(), which works on source packages.

Would it help to reframe the problem in terms of binary packages
acquiring dependency constraints that are more strict than those of the
corresponding source packages? If a package that imports S4 classes
from another package and thus ends up caching their definitions, R
could compute a hash of the classes being imported, store it together
with the installed package and complain noisily if the hash doesn't
match later at load time. This could be used to detect such problems
automatically (but could also result in false positives!).

This is not the only way a binary package could accidentally depend on
internals of another binary package. I remember reading about (but
cannot find it now!) some packages "importing" a function from ggplot2
(I think) by assigning it into their namespace:

 foo <- ggplot2::useful_function

This worked for quite a while, but later broke because
ggplot2::useful_function called an internal function which ceased to
exist in a new version of ggplot2. This is arguably a bug and probably
even harder to track, but are there any other ways to catch a "binary
dependency" for a package?

-- 
Best regards,
Ivan


From d@co036 @end|ng |rom uo@@@uck|@nd@@c@nz  Mon Aug  7 13:09:21 2023
From: d@co036 @end|ng |rom uo@@@uck|@nd@@c@nz (David Scott)
Date: Mon, 7 Aug 2023 23:09:21 +1200
Subject: [Rd] hist(..., log="y")
In-Reply-To: <25808.45374.920991.936594@stat.math.ethz.ch>
References: <CAMMJQ0b-AwgT-3U-4TQYwLA7+NPzj8E0Y2Q=xXk6KWOgCJqUjg@mail.gmail.com>
 <25808.45374.920991.936594@stat.math.ethz.ch>
Message-ID: <dea06b31-f220-f99b-d684-ab4a7e7f6825@uoa.auckland.ac.nz>

Log histograms are of particular interest when dealing with heavy tailed 
data/distributions.

It is not just a matter of using a log scale on the y axis though 
because the base line of the histogram is at zero and the log of zero is 
minus infinity.

I have implemented a version of a log histogram in the function logHist, 
in my package DistributionUtils, which may be of interest if anyone 
seriously wishes to add functionality to the base hist function.

David Scott

On 7/08/2023 8:54 pm, Martin Maechler wrote:
> >>>>> Ott Toomet
> >>>>> on Sat, 5 Aug 2023 23:49:38 -0700 writes:
>
> > Sorry if this topic has been discussed earlier.
>
> > Currently, hist(..., log="y") fails with
>
> >> hist(rexp(1000, 1), log="y")
> > Warning messages: 1: In plot.window(xlim, ylim, "", ...) :
> > nonfinite axis=2 limits [GScale(-inf,2.59218,..);
> > log=TRUE] -- corrected now 2: In title(main = main, sub =
> > sub, xlab = xlab, ylab = ylab, ...) : "log" is not a
> > graphical parameter 3: In axis(1, ...) : "log" is not a
> > graphical parameter 4: In axis(2, at = yt, ...) : "log" is
> > not a graphical parameter
>
> > The same applies for log="x"
>
> [...........]
>
> > This applies for the current svn version of R, and also a
> > few recent published versions. This is unfortunate for
> > two reasons:
>
> > * the error message is not quite correct--"log" is a
> > graphical parameter, but "hist" does not support it.
>
> No, not if you use R's (or S's before that) definition:
>
> graphical parameters := {the possible argument of par()}
>
> log is *not* among these.
>
>
> > * for various kinds of data it is worthwhile to make
> > histograms in log scale. "hist" is a very nice and
> > convenient function and support for log scale would be
> > handy here.
>
> Yes, possibly (see below).
> Note that the above are not errors, but warnings,
> and there *is* some support, e.g.,
>
> > set.seed(1); range(x <- rlnorm(1111))
> [1] 0.04938796 45.16293285
> > hx <- hist(x, log="x", xlim=c(0.049, 47))
> Warning messages:
> 1: In title(main = main, sub = sub, xlab = xlab, ylab = ylab, ...) :
> "log" is not a graphical parameter
> 2: In axis(1, ...) : "log" is not a graphical parameter
> 3: In axis(2, at = yt, ...) : "log" is not a graphical parameter
>
> > str(hx)
> List of 6
> $ breaks : num [1:11] 0 5 10 15 20 25 30 35 40 45 ...
> $ counts : int [1:10] 1041 58 10 0 1 0 0 0 0 1
> $ density : num [1:10] 0.1874 0.01044 0.0018 0 0.00018 ...
> $ mids : num [1:10] 2.5 7.5 12.5 17.5 22.5 27.5 32.5 37.5 42.5 47.5
> $ xname : chr "x"
> $ equidist: logi TRUE
> - attr(*, "class")= chr "histogram"
>
> where we see that it *does* plot ... but crucially not the very first bin,
> because log(0) == -Inf, with over 90% (viz. 1041) counts.
>
> > I also played a little with the code, and it seems to be
> > very easy to implement. I am happy to make a patch if the
> > team thinks it is worth pursuing.
>
> > Cheers, Ott
>
> Yeah.. and that's is the important question.
>
> Most statisticians know that a histogram is a pretty bad
> density estimator (notably if the natural density has an
> infinite support) compared to simple kernel density estimates,
> e.g. those by density().
> Hence, I'd argue that if you expect enough sophistication from
> your "viewer"s to understand a log-scale histogram, I'd say you
> should use a density with log="x" and or "y" and I I have
> successfully done so several times: It *does* work
> {particularly nicely if you use my sfsmisc::eaxis() for the log axis/es}.
>
> But you (and others) may have more good arguments why hist()
> should work with log="x" and/or log="y"...
>
> Also if your patch relatively small, its usefulness may
> outweigh the added complexity (and its long-term maintenance !).
>
> Martin
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel 
> <https://stat.ethz.ch/mailman/listinfo/r-devel>

-- 
_________________________________________________________________
David Scott
Department of Statistics
The University of Auckland, PB 92019
Auckland 1142,    NEW ZEALAND
Email:d.scott at auckland.ac.nz


	[[alternative HTML version deleted]]


From ju||@n@hn|opek @end|ng |rom un|-jen@@de  Mon Aug  7 14:47:46 2023
From: ju||@n@hn|opek @end|ng |rom un|-jen@@de (Julian Hniopek)
Date: Mon, 07 Aug 2023 14:47:46 +0200
Subject: [Rd] 
 Detecting physical CPUs in detectCores() on Linux platforms
In-Reply-To: <25808.57266.337153.29417@rob.eddelbuettel.com>
References: <CAObhMffcPOLHN_ko1VQEu-taHjCiuc5kPCA9ybS1O9r_UOn1GQ@mail.gmail.com>
 <25808.57266.337153.29417@rob.eddelbuettel.com>
Message-ID: <20c86758cf57baa0c045aa39d99bc950a8cb8b31.camel@uni-jena.de>

On Mon, 2023-08-07 at 07:12 -0500, Dirk Eddelbuettel wrote:
> 
> On 7 August 2023 at 08:48, Nils Kehrein wrote:
> > I recently noticed that `detectCores()` ignores the `logical=FALSE`
> > argument on Linux platforms. This means that the function will
> > always
> > return the number of logical CPUs, i.e. it will count the number of
> > threads
> > that theoretically can run in parallel due to e.g. hyper-threading.
> > Unfortunately, this can result in issues in high-performance
> > computing use
> > cases where hyper-threading might degrade performance instead of
> > improving
> > it.
> > 
> > Currently, src/library/parallel/R/detectCores.R uses the following
> > R/shell
> > code fragment to identify the number of logical CPUs:
> > linux = 'grep "^processor" /proc/cpuinfo 2>/dev/null | wc -l'
> > 
> > As far as I understand, one could derive the number of online
> > physical CPUs
> > by parsing the contents of /sys/devices/system/cpu/* but that seems
> > rather
> > cumbersome. Instead, could we amend the R code with the following
> > line?
> > linux = if(logical) 'grep "^processor" /proc/cpuinfo 2>/dev/null |
> > wc -l'
> > else 'lscpu -b --parse="CORE" | tail -n +5 | sort -u | wc -l'
> 
> That's good but you also need to at protect this from `lscpu` being
> in the
> path.? Maybe `if (logical && nzchar(Sys.which("lscpu")))` ?
> 
> Dirk
> 
Alternatively, using only on POSIX utils which should be in the path of
all Linux Systems and /proc/cpuinfo:

awk '/^physical id/{PHYS_ID=$NF; next} /^cpu cores/{print PHYS_ID"
"$NF;}' /proc/cpuinfo 2>/dev/null | sort | uniq | awk '{sum+=$NF;} END
{print sum}'.

Parses /proc/cpuinfo for the number of physical cores and physical id
in each CPU. Only returns unique combinations of physical id (i.e.
Socket) and core numbers. Then sums up the number of cores for each
physicalid to get the total amount of physical cores.

Something I had lying around. Someone with better awk skills could
probably do sorting and filtering in awk as well to save on pipes.
Works on single and multisocket AMD/Intel from my experience.

Julian
> > 
> > This solution uses `lscpu` from `sys-utils`. The -b switch makes
> > sure that
> > only online CPUs/cores are listed and due to the --parse="CORE",
> > the output
> > will contain only a single column with logical core ids. It seems
> > to do the
> > job in my view, but there might be edge cases for exotic CPU
> > topologies
> > that I am not aware of.
> > 
> > Thank you, Nils
> > 
> > ????????[[alternative HTML version deleted]]
> > 
> > ______________________________________________
> > R-devel at r-project.org?mailing list
> > https://stat.ethz.ch/mailman/listinfo/r-devel
> 


From j@g@nmn2 @end|ng |rom gm@||@com  Mon Aug  7 15:25:50 2023
From: j@g@nmn2 @end|ng |rom gm@||@com (Mikael Jagan)
Date: Mon, 7 Aug 2023 09:25:50 -0400
Subject: [Rd] R-devel Digest, Vol 246, Issue 6
In-Reply-To: <mailman.53640.9.1691402401.10467.r-devel@r-project.org>
References: <mailman.53640.9.1691402401.10467.r-devel@r-project.org>
Message-ID: <97ace211-d761-8ecd-bee9-2f4682ead3f3@gmail.com>

Two quite related and recent threads on R-devel:

[1] proposal for WRE: clarify that use of S4 classes implies use of superclasses
https://stat.ethz.ch/pipermail/r-devel/2023-July/082739.html
[2] Should package version requirements assume installation from sources?
https://stat.ethz.ch/pipermail/r-devel/2022-September/081971.html

Notably, if SeuratObject 4.1.3, the current version, had

     importClassesFrom(Matrix, dgCMatrix,
                       ## and the exported superclasses:
                       CsparseMatrix, Matrix, compMatrix, dMatrix,
                       dsparseMatrix, generalMatrix, sparseMatrix)

and not just

     importClassesFrom(Matrix, dgCMatrix)

then the silent breakage due to missing symbols would not have occurred.
That is because _imported_ class definitions are retrieved at load time,
not at install time.  SeuratObject 4.1.3 retrieves the CsparseMatrix
definition at install time, so indeed it is liable to become stale with
Matrix updates ...

Not to derail Dirk's proposal for "Breaks", which could certainly have
uses beyond this particular example where a "correct" NAMESPACE directive
would solve the problems ...

Mikael

On 2023-08-07 6:00 am, r-devel-request at r-project.org wrote:
> I would support this suggestion. There is a similar binary dependency chain from 
> Matrix ? TMB ? glmmTMB; we have implemented various checks to make users aware 
> that they need to reinstall from source, and to some extent we've tried to push 
> out synchronous updates (i.e., push an update of TMB to CRAN every time Matrix 
> changes, and an update of glmmTMB after that), but centralized machinery for 
> this would certainly be nice. FWIW some of the machinery is here: 
> https://github.com/glmmTMB/glmmTMB/blob/d9ee7b043281341429381faa19b5e53cb5a378c3/glmmTMB/R/utils.R#L209-L295 -- it relies on a Makefile rule that caches the current installed version of TMB: https://github.com/glmmTMB/glmmTMB/blob/d9ee7b043281341429381faa19b5e53cb5a378c3/glmmTMB/R/utils.R#L209-L295 cheers Ben Bolker On 2023-08-06 5:05 p.m., Dirk Eddelbuettel wrote:
>> CRAN, by relying on the powerful package management system that is part of R,
>> provides an unparalleled framework for extending R with nearly 20k packages.
>>
>> We recently encountered an issue that highlights a missing element in the
>> otherwise outstanding package management system. So we would like to start a
>> discussion about enhancing its feature set. As shown below, a mechanism to
>> force reinstallation of packages may be needed.
>>
>> A demo is included below, it is reproducible in a container. We find the
>> easiest/fastest reproduction is by saving the code snippet below in the
>> current directory as eg 'matrixIssue.R' and have it run in a container as
>>
>>      docker run --rm -ti -v `pwd`:/mnt rocker/r2u Rscript /mnt/matrixIssue.R
>>     
>> This runs in under two minutes, first installing the older Matrix, next
>> installs SeuratObject, and then by removing the older Matrix making the
>> (already installed) current Matrix version the default. This simulates a
>> package update for Matrix. Which, as the final snippet demonstrates, silently
>> breaks SeuratObject as the cached S4 method Csparse_validate is now missing.
>> So when SeuratObject was installed under Matrix 1.5.1, it becomes unuseable
>> under Matrix 1.6.0.
>>
>> What this shows is that a call to update.packages() will silently corrupt an
>> existing installation.  We understand that this was known and addressed at
>> CRAN by rebuilding all binary packages (for macOS and Windows).
>>
>> But it leaves both users relying on source installation as well as
>> distributors of source packages in a dire situation. It hurt me three times:
>> my default R installation was affected with unit tests (involving
>> SeuratObject) silently failing. It similarly broke our CI setup at work.  And
>> it created a fairly bad headache for the Debian packaging I am involved with
>> (and I surmise it affects other distro similarly).
>>
>> It would be good to have a mechanism where a package, when being upgraded,
>> could flag that 'more actions are required' by the system (administrator).
>> We think this example demonstrates that we need such a mechanism to avoid
>> (silently !!) breaking existing installations, possibly by forcing
>> reinstallation of other packages.  R knows the package dependency graph and
>> could trigger this, possibly after an 'opt-in' variable the user / admin
>> sets.
>>
>> One possibility may be to add a new (versioned) field 'Breaks:'. Matrix could
>> then have added 'Breaks: SeuratObject (<= 4.1.3)' preventing an installation
>> of Matrix 1.6.0 when SeuratObject 4.1.3 (or earlier) is present, but
>> permitting an update to Matrix 1.6.0 alongside a new version, say, 4.1.4 of
>> SeuratObject which could itself have a versioned Depends: Matrix (>= 1.6.0).
>>
>> Regards,  Dirk
>>
>>
>> ## Code example follows. Recommended to run the rocker/r2u container.
>> ## Could also run 'apt update -qq; apt upgrade -y' but not required
>> ## Thanks to my colleague Paul Hoffman for the core of this example
>>
>> ## now have Matrix 1.6.0 because r2u and CRAN remain current but we can install an older Matrix
>> remotes::install_version('Matrix', '1.5.1')
>>
>> ## we can confirm that we have Matrix 1.5.1
>> packageVersion("Matrix")
>>
>> ## we now install SeuratObject from source and to speed things up we first install the binary
>> install.packages("SeuratObject")   # in this container via bspm/r2u as binary
>> ## and then force a source installation (turning bspm off) _while Matrix is at 1.5.1_
>> if (requireNamespace("bspm", quietly=TRUE) bspm::disable()
>> Sys.setenv(PKG_CXXFLAGS='-Wno-ignored-attributes') 	# Eigen compilation noise silencer
>> install.packages('SeuratObject')
>>
>> ## we now remove the Matrix package version 1.5.1 we installed into /usr/local leaving 1.6.0
>> remove.packages("Matrix")
>> packageVersion("Matrix")
>>
>> ## and we now run a bit of SeuratObject code that is now broken as Csparse_validate is gone
>> suppressMessages(library(SeuratObject))
>> data('pbmc_small')
>> graph <- pbmc_small[['RNA_snn']]
>> class(graph)
>> getClass('Graph')
>> show(graph) # this fails
>>
>>


From edd @end|ng |rom deb|@n@org  Mon Aug  7 15:50:10 2023
From: edd @end|ng |rom deb|@n@org (Dirk Eddelbuettel)
Date: Mon, 7 Aug 2023 08:50:10 -0500
Subject: [Rd] 
 A demonstrated shortcoming of the R package management system
In-Reply-To: <20230807161551.5e87e2e9@parabola>
References: <25808.2815.112074.192190@rob.eddelbuettel.com>
 <20230807161551.5e87e2e9@parabola>
Message-ID: <25808.63122.639199.691225@rob.eddelbuettel.com>


Hi Ivan,

I usually 'mentally applaud' when reading your replies on list but not here.

On 7 August 2023 at 16:15, Ivan Krylov wrote:
| SeuratObject 4.1.3. The breakage definitely exists, but not on the
| source package level.

You seem to overlook that a large part of the R Universe only works off
source distributions and, as one cannot run source, builds binaries off them.

The breakage is real.

Also implying our packages in question would not reverse-dependency check is
not helpful. Of course they do.

[ And as an illustrative aside, part of the 'third problem I mentioned in my
initial email concerning Debian is that eg (some) Debian maintainers insist
on autopkgtests (a good idea in theory) and get terribly hung up when they
manage to mismatch package relations (ie 'skew' from CRAN -- while that is in
part self-imposed) some troubles are real and eg Matrix 1.6.0 only got to
'testing' now after release manager intervention. (And no Mikael, that was
not Seurat related but thanks for the tip in your email, already passed it
on.)  Of course we have other issues too there with eg exotic non-CRAN
platforms (now including i386) breaking. But that is outside of this thread.
Thanks for bearing with me). ]

Dirk

| 
| It may also not be easy for the package developer to notice breaking a
| binary package while performing reverse dependency checks, in time to
| add such a notice to their package. The recommended way to do that is
| tools::check_packages_in_dir(), which works on source packages.
| 
| Would it help to reframe the problem in terms of binary packages
| acquiring dependency constraints that are more strict than those of the
| corresponding source packages? If a package that imports S4 classes
| from another package and thus ends up caching their definitions, R
| could compute a hash of the classes being imported, store it together
| with the installed package and complain noisily if the hash doesn't
| match later at load time. This could be used to detect such problems
| automatically (but could also result in false positives!).
| 
| This is not the only way a binary package could accidentally depend on
| internals of another binary package. I remember reading about (but
| cannot find it now!) some packages "importing" a function from ggplot2
| (I think) by assigning it into their namespace:
| 
|  foo <- ggplot2::useful_function
| 
| This worked for quite a while, but later broke because
| ggplot2::useful_function called an internal function which ceased to
| exist in a new version of ggplot2. This is arguably a bug and probably
| even harder to track, but are there any other ways to catch a "binary
| dependency" for a package?
| 
| -- 
| Best regards,
| Ivan

-- 
dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org


From g@bembecker @end|ng |rom gm@||@com  Mon Aug  7 22:34:16 2023
From: g@bembecker @end|ng |rom gm@||@com (Gabriel Becker)
Date: Mon, 7 Aug 2023 13:34:16 -0700
Subject: [Rd] Vectorize library() to improve handling of versioned deps
 [sprint project proposal]
Message-ID: <CAD4oTHHGoQ0geRoUoULpcxLnEEgnfU+ZCzubmFkUAA29Z1wGUQ@mail.gmail.com>

Hi All,

This is a proposal for a project which could be worked on during the R
development Sprint at the end of this month; it was requested that we start
a discussion here to see what R-core's thoughts on it were before we
officially add it to the docket.


AFAIK, R officially supports both versioned dependencies (almost
exclusively of the >=version variety) and library paths with more than one
directory. Further, I believe if at least de facto supports the same
package being installed in different directories along the lib path. The
most common of these, I'd bet, would be different versions of the same
library being installed in a site library and in a user's personal library,
though that's not the only way this can happen.

The combination of these two features, however can give rise to
packages which are all correctly installed and all loadable individually,
but which must be loaded in a particular order when used together or the
loading of some of them will fail.

Consider the following dependency structure between packages

pkgA: pkgB (>= 0.5.0)

pkgC: pkgB (>= 0.6.0)

Consider the following multi-libpath setup:

~/pth1/: pkgA, pkg B [0.5.1]
~/pth2/: pkg C, pkg B [0.6.5]

And consider that we have the libpath c("~/pth1/", "~/pth2").

If we do

library(pkgA)

Things will work great.

Same if we do

library(pkgC)

BUT, if we do

library(pkgA)
library(pkgC)

pkgC will not be able to be loaded, because an insufficient version of
pkgB will
already be loaded.

I propose that library be modified to be able to take a character vector of
package names, when it does, it performs the dependency calculations to
determine how all packages in the vector can be loaded (in the order they
appear). In the example above, this would mean that if we did

library(c("pkgA", "pkgC"))

It would determine that pkgB version 0.6.5 was needed (or alternatively,
that version 0.5.1 was insufficient) and use that *when loading the
dependencies of pkgA*.

The proposal issue for the sprint itself is here:
https://github.com/r-devel/r-project-sprint-2023/discussions/15

Thoughts?

~G

	[[alternative HTML version deleted]]


From @|mon@urb@nek @end|ng |rom R-project@org  Tue Aug  8 01:21:27 2023
From: @|mon@urb@nek @end|ng |rom R-project@org (Simon Urbanek)
Date: Tue, 8 Aug 2023 11:21:27 +1200
Subject: [Rd] 
 Detecting physical CPUs in detectCores() on Linux platforms
In-Reply-To: <20c86758cf57baa0c045aa39d99bc950a8cb8b31.camel@uni-jena.de>
References: <CAObhMffcPOLHN_ko1VQEu-taHjCiuc5kPCA9ybS1O9r_UOn1GQ@mail.gmail.com>
 <25808.57266.337153.29417@rob.eddelbuettel.com>
 <20c86758cf57baa0c045aa39d99bc950a8cb8b31.camel@uni-jena.de>
Message-ID: <CC836864-15F7-4D44-BED6-20CA02FCD8BA@R-project.org>

First, detecting HT vs cores is not necessarily possible in general, Linux may assign core id to each HT depending on circumstances:

$ grep 'cpu cores' /proc/cpuinfo | uniq
cpu cores	: 32
$ grep 'model name' /proc/cpuinfo | uniq
model name	: Intel(R) Xeon(R) Gold 6142 CPU @ 2.60GHz

and you can look up that Xenon 6142 has 16 cores.

Second, instead of "awk"ward contortions it's easily done in R with something like

d=read.dcf("/proc/cpuinfo")
sum(as.integer(tapply(
  d[,grep("cpu cores",colnames(d))],
  d[,grep("physical id",colnames(d))], `[`, 1)))

which avoids subprocesses, quoting hell and all such issues...

Cheers,
Simon


> On 8/08/2023, at 12:47 AM, Julian Hniopek <julian.hniopek at uni-jena.de> wrote:
> 
> On Mon, 2023-08-07 at 07:12 -0500, Dirk Eddelbuettel wrote:
>> 
>> On 7 August 2023 at 08:48, Nils Kehrein wrote:
>>> I recently noticed that `detectCores()` ignores the `logical=FALSE`
>>> argument on Linux platforms. This means that the function will
>>> always
>>> return the number of logical CPUs, i.e. it will count the number of
>>> threads
>>> that theoretically can run in parallel due to e.g. hyper-threading.
>>> Unfortunately, this can result in issues in high-performance
>>> computing use
>>> cases where hyper-threading might degrade performance instead of
>>> improving
>>> it.
>>> 
>>> Currently, src/library/parallel/R/detectCores.R uses the following
>>> R/shell
>>> code fragment to identify the number of logical CPUs:
>>> linux = 'grep "^processor" /proc/cpuinfo 2>/dev/null | wc -l'
>>> 
>>> As far as I understand, one could derive the number of online
>>> physical CPUs
>>> by parsing the contents of /sys/devices/system/cpu/* but that seems
>>> rather
>>> cumbersome. Instead, could we amend the R code with the following
>>> line?
>>> linux = if(logical) 'grep "^processor" /proc/cpuinfo 2>/dev/null |
>>> wc -l'
>>> else 'lscpu -b --parse="CORE" | tail -n +5 | sort -u | wc -l'
>> 
>> That's good but you also need to at protect this from `lscpu` being
>> in the
>> path.  Maybe `if (logical && nzchar(Sys.which("lscpu")))` ?
>> 
>> Dirk
>> 
> Alternatively, using only on POSIX utils which should be in the path of
> all Linux Systems and /proc/cpuinfo:
> 
> awk '/^physical id/{PHYS_ID=$NF; next} /^cpu cores/{print PHYS_ID"
> "$NF;}' /proc/cpuinfo 2>/dev/null | sort | uniq | awk '{sum+=$NF;} END
> {print sum}'.
> 
> Parses /proc/cpuinfo for the number of physical cores and physical id
> in each CPU. Only returns unique combinations of physical id (i.e.
> Socket) and core numbers. Then sums up the number of cores for each
> physicalid to get the total amount of physical cores.
> 
> Something I had lying around. Someone with better awk skills could
> probably do sorting and filtering in awk as well to save on pipes.
> Works on single and multisocket AMD/Intel from my experience.
> 
> Julian
>>> 
>>> This solution uses `lscpu` from `sys-utils`. The -b switch makes
>>> sure that
>>> only online CPUs/cores are listed and due to the --parse="CORE",
>>> the output
>>> will contain only a single column with logical core ids. It seems
>>> to do the
>>> job in my view, but there might be edge cases for exotic CPU
>>> topologies
>>> that I am not aware of.
>>> 
>>> Thank you, Nils
>>> 
>>>         [[alternative HTML version deleted]]
>>> 
>>> ______________________________________________
>>> R-devel at r-project.org mailing list
>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>> 
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
> 


From edd @end|ng |rom deb|@n@org  Tue Aug  8 02:07:37 2023
From: edd @end|ng |rom deb|@n@org (Dirk Eddelbuettel)
Date: Mon, 7 Aug 2023 19:07:37 -0500
Subject: [Rd] 
 Detecting physical CPUs in detectCores() on Linux platforms
In-Reply-To: <CC836864-15F7-4D44-BED6-20CA02FCD8BA@R-project.org>
References: <CAObhMffcPOLHN_ko1VQEu-taHjCiuc5kPCA9ybS1O9r_UOn1GQ@mail.gmail.com>
 <25808.57266.337153.29417@rob.eddelbuettel.com>
 <20c86758cf57baa0c045aa39d99bc950a8cb8b31.camel@uni-jena.de>
 <CC836864-15F7-4D44-BED6-20CA02FCD8BA@R-project.org>
Message-ID: <25809.34633.249825.74893@rob.eddelbuettel.com>


On 8 August 2023 at 11:21, Simon Urbanek wrote:
| First, detecting HT vs cores is not necessarily possible in general, Linux may assign core id to each HT depending on circumstances:
| 
| $ grep 'cpu cores' /proc/cpuinfo | uniq
| cpu cores	: 32
| $ grep 'model name' /proc/cpuinfo | uniq
| model name	: Intel(R) Xeon(R) Gold 6142 CPU @ 2.60GHz
| 
| and you can look up that Xenon 6142 has 16 cores.
| 
| Second, instead of "awk"ward contortions it's easily done in R with something like
| 
| d=read.dcf("/proc/cpuinfo")
| sum(as.integer(tapply(
|   d[,grep("cpu cores",colnames(d))],
|   d[,grep("physical id",colnames(d))], `[`, 1)))
| 
| which avoids subprocesses, quoting hell and all such issues...

Love the use of read.dcf("/proc/cpuinfo") !!

On my box a simpler

  > d <- read.dcf("/proc/cpuinfo") 
  > as.integer(unique(d[, grep("cpu cores",colnames(d))]))
  [1] 6
  > 

does the right thing.

Dirk

-- 
dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org


From @|mon@urb@nek @end|ng |rom R-project@org  Tue Aug  8 03:17:55 2023
From: @|mon@urb@nek @end|ng |rom R-project@org (Simon Urbanek)
Date: Tue, 8 Aug 2023 13:17:55 +1200
Subject: [Rd] 
 Detecting physical CPUs in detectCores() on Linux platforms
In-Reply-To: <25809.34633.249825.74893@rob.eddelbuettel.com>
References: <CAObhMffcPOLHN_ko1VQEu-taHjCiuc5kPCA9ybS1O9r_UOn1GQ@mail.gmail.com>
 <25808.57266.337153.29417@rob.eddelbuettel.com>
 <20c86758cf57baa0c045aa39d99bc950a8cb8b31.camel@uni-jena.de>
 <CC836864-15F7-4D44-BED6-20CA02FCD8BA@R-project.org>
 <25809.34633.249825.74893@rob.eddelbuettel.com>
Message-ID: <0DCAA0B2-CE51-4518-B7A5-95B737D1281F@R-project.org>



> On 8/08/2023, at 12:07 PM, Dirk Eddelbuettel <edd at debian.org> wrote:
> 
> 
> On 8 August 2023 at 11:21, Simon Urbanek wrote:
> | First, detecting HT vs cores is not necessarily possible in general, Linux may assign core id to each HT depending on circumstances:
> | 
> | $ grep 'cpu cores' /proc/cpuinfo | uniq
> | cpu cores	: 32
> | $ grep 'model name' /proc/cpuinfo | uniq
> | model name	: Intel(R) Xeon(R) Gold 6142 CPU @ 2.60GHz
> | 
> | and you can look up that Xenon 6142 has 16 cores.
> | 
> | Second, instead of "awk"ward contortions it's easily done in R with something like
> | 
> | d=read.dcf("/proc/cpuinfo")
> | sum(as.integer(tapply(
> |   d[,grep("cpu cores",colnames(d))],
> |   d[,grep("physical id",colnames(d))], `[`, 1)))
> | 
> | which avoids subprocesses, quoting hell and all such issues...
> 
> Love the use of read.dcf("/proc/cpuinfo") !!
> 
> On my box a simpler
> 
>> d <- read.dcf("/proc/cpuinfo") 
>> as.integer(unique(d[, grep("cpu cores",colnames(d))]))
>  [1] 6
>> 
> 

I don't think that works on NUMA/SMP machines - you need to add all the cores for each CPU (that's why the above splits by physical id which is unique per cpu). On a dual-cpu machine:

> as.integer(unique(d[, grep("cpu cores",colnames(d))]))
[1] 32
> sum(as.integer(tapply(
 d[,grep("cpu cores",colnames(d))],
 d[,grep("physical id",colnames(d))], `[`, 1)))
[1] 64

Also things get quite fun on VMs as they can cobble together quite a few virtual CPUs regardless of the underlying hardware.

To be honest I think the motivation of this thread is dubious at best: it is a bad idea to use detectCore() blindly to specify parallelization and we explicitly say it's a bad idea - any sensible person will set it according to the demands, the hardware and the task. The number of cores is only partially relevant - e.g. if any I/O is involved you want to oversubscribe the CPU. If you have other users you want to only use a fraction etc. That doesn't mean that the we couldn't do a better job, but if you have to use detectCores() then you are already in trouble to start with.

Cheers,
Simon


From edd @end|ng |rom deb|@n@org  Tue Aug  8 04:16:59 2023
From: edd @end|ng |rom deb|@n@org (Dirk Eddelbuettel)
Date: Mon, 7 Aug 2023 21:16:59 -0500
Subject: [Rd] 
 Detecting physical CPUs in detectCores() on Linux platforms
In-Reply-To: <0DCAA0B2-CE51-4518-B7A5-95B737D1281F@R-project.org>
References: <CAObhMffcPOLHN_ko1VQEu-taHjCiuc5kPCA9ybS1O9r_UOn1GQ@mail.gmail.com>
 <25808.57266.337153.29417@rob.eddelbuettel.com>
 <20c86758cf57baa0c045aa39d99bc950a8cb8b31.camel@uni-jena.de>
 <CC836864-15F7-4D44-BED6-20CA02FCD8BA@R-project.org>
 <25809.34633.249825.74893@rob.eddelbuettel.com>
 <0DCAA0B2-CE51-4518-B7A5-95B737D1281F@R-project.org>
Message-ID: <25809.42395.29355.809081@rob.eddelbuettel.com>


On 8 August 2023 at 13:17, Simon Urbanek wrote:
| To be honest I think the motivation of this thread is dubious at best: it is a bad idea to use detectCore() blindly to specify parallelization and we explicitly say it's a bad idea - any sensible person will set it according to the demands, the hardware and the task. The number of cores is only partially relevant - e.g. if any I/O is involved you want to oversubscribe the CPU. If you have other users you want to only use a fraction etc. That doesn't mean that the we couldn't do a better job, but if you have to use detectCores() then you are already in trouble to start with.

As I often say, "life's a bitch and then you die".  Detecting hardware
capabilties at run-time is no small task.

When 1 1/2 decades ago I filled in maintaining slurm for Debian (and
interfacing open-mpi) that latter project added an entire library for that
scope (libhwloc).  For all I know it is still best practices.  So in that
sense no point grepping / reading /proc/cpuinfo as that has clear limits.

Dirk

-- 
dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org


From @@m|tuom|v@@r@ @end|ng |rom hotm@||@com  Tue Aug  8 11:14:28 2023
From: @@m|tuom|v@@r@ @end|ng |rom hotm@||@com (Sami Tuomivaara)
Date: Tue, 8 Aug 2023 09:14:28 +0000
Subject: [Rd] 
 feature request: optim() iteration of functions that return
 multiple values
Message-ID: <PAXP189MB1928BA028ECC4184B07202AFD60DA@PAXP189MB1928.EURP189.PROD.OUTLOOK.COM>

Thank you all very much for the suggestions, after testing, each of them would be a viable solution in certain contexts.  Code for benchmarking:

# preliminaries
install.packages("microbenchmark")
library(microbenchmark)


data <- new.env()
data$ans2 <- 0
data$ans3 <- 0
data$i <- 0
data$fun.value <- numeric(1000)

# define functions

rosenbrock_env <- function(x, data)
{
  x1 <- x[1]
  x2 <- x[2]
  ans <- 100 * (x2 - x1 * x1)^2 + (1 - x1)^2
  ans2 <- ans^2
  ans3 <- sqrt(abs(ans))
  data$i <- data$i + 1
  data$fun.value[data$i] <- ans
  ans
}


rosenbrock_env2 <- function(x, data)
{
  x1 <- x[1]
  x2 <- x[2]
  ans <- 100 * (x2 - x1 * x1)^2 + (1 - x1)^2
  ans2 <- ans^2
  ans3 <- sqrt(abs(ans))
  data$ans2 <- ans2
  data$ans3 <- ans3
  ans
}

rosenbrock_attr <- function(x)
{
  x1 <- x[1]
  x2 <- x[2]
  ans <- 100 * (x2 - x1 * x1)^2 + (1 - x1)^2
  ans2 <- ans^2
  ans3 <- sqrt(abs(ans))
  attr(ans, "ans2") <- ans2
  attr(ans, "ans3") <- ans3
  ans
}


rosenbrock_extra <- function(x, extraInfo = FALSE)
{
  x1 <- x[1]
  x2 <- x[2]
  ans <- 100 * (x2 - x1 * x1)^2 + (1 - x1)^2
  ans2 <- ans^2
  ans3 <- sqrt(abs(ans))
  if (extraInfo) list(ans = ans, ans2 = ans2, ans3 = ans3)
  else ans
}


rosenbrock_all <- function(x)
{
  x1 <- x[1]
  x2 <- x[2]
  ans <- 100 * (x2 - x1 * x1)^2 + (1 - x1)^2
  ans2 <- ans^2
  ans3 <- sqrt(abs(ans))
  list(ans = ans, ans2 = ans2, ans3 = ans3)
}

returnFirst <- function(fun) function(...) do.call(fun,list(...))[[1]]
rosenbrock_all2 <- returnFirst(rosenbrock_all)


# benchmark all functions
set.seed <- 100

microbenchmark(env = optim(c(-1,2), rosenbrock_env, data = data),
               env2 = optim(c(-1,2), rosenbrock_env2, data = data),
               attr = optim(c(-1,2), rosenbrock_attr),
               extra = optim(c(-1,2), rosenbrock_extra, extraInfo = FALSE),
               all2 = optim(c(-1,2), rosenbrock_all2),
               times = 100)


# correct parameters and return values?
env <- optim(c(-1,2), rosenbrock_env, data = data)
env2 <- optim(c(-1,2), rosenbrock_env2, data = data)
attr <- optim(c(-1,2), rosenbrock_attr)
extra <- optim(c(-1,2), rosenbrock_extra, extraInfo = FALSE)
all2 <- optim(c(-1,2), rosenbrock_all2)

# correct return values with optimized parameters?
env. <- rosenbrock_env(env$par, data)
env2. <- rosenbrock_env(env2$par, data)
attr. <- rosenbrock_attr(attr$par)
extra. <- rosenbrock_extra(extra$par, extraInfo = FALSE)
all2. <- rosenbrock_all2(all2$par)

# functions that return more than one value
all. <- rosenbrock_all(all2$par)
extra2. <- rosenbrock_extra(extra$par, extraInfo = TRUE)

# environment values correct?
data$ans2
data$ans3
data$i
data$fun.value


microbenchmarking results:

Unit: microseconds
  expr     min        lq      mean    median         uq       max neval
   env 644.102 3919.6010 9598.3971 7950.0005 15582.8515 42210.900   100
  env2 337.001  351.5510  479.2900  391.7505   460.3520  6900.800   100
  attr 350.201  367.3010  502.0319  409.7510   483.6505  6772.800   100
 extra 276.800  287.2010  402.4231  302.6510   371.5015  6457.201   100
  all2 630.801  646.9015  785.9880  678.0010   808.9510  6411.102   100

rosenbrock_env and _env2 functions differ in that _env accesses vectors in the defined environment by indexing, whereas _env2 doesn't (hope I interpreted this right?).  This appears to be expensive operation, but allows saving values during the steps of the optim iteration, rather than just at convergence.  Overall, _extra has consistently lowest median execution time!

My earlier workaround was to write two separate functions, one of which returns extra values; all suggested approaches simplify that approach considerably.  I am also now more educated about attributes and environments that I did not know how to utilize before and that proved to be very useful concepts.  Again, thank you everyone for your input!


	[[alternative HTML version deleted]]


From pro|jcn@@h @end|ng |rom gm@||@com  Tue Aug  8 14:13:31 2023
From: pro|jcn@@h @end|ng |rom gm@||@com (J C Nash)
Date: Tue, 8 Aug 2023 08:13:31 -0400
Subject: [Rd] 
 feature request: optim() iteration of functions that return
 multiple values
In-Reply-To: <PAXP189MB1928BA028ECC4184B07202AFD60DA@PAXP189MB1928.EURP189.PROD.OUTLOOK.COM>
References: <PAXP189MB1928BA028ECC4184B07202AFD60DA@PAXP189MB1928.EURP189.PROD.OUTLOOK.COM>
Message-ID: <2af81e16-2f48-56d2-d619-51ab4a33e2e4@gmail.com>

But why time methods that the author (me!) has been telling the community for
years have updates? Especially as optimx::optimr() uses same syntax as optim()
and gives access to a number of solvers, both production and didactic. This set
of solvers is being improved or added to regularly, with a major renewal almost
complete (for the adventurous, code on https://github.com/nashjc/optimx).

Note also that the default Nelder-Mead is good for exploring function surface and
is quite robust at getting quickly into the region of a minimum, but can be quite
poor in "finishing" the process. Tools have different strengths and weaknesses.
optim() was more or less state of the art a couple of decades ago, but there are
other choices now.

JN

On 2023-08-08 05:14, Sami Tuomivaara wrote:
> Thank you all very much for the suggestions, after testing, each of them would be a viable solution in certain contexts.  Code for benchmarking:
> 
> # preliminaries
> install.packages("microbenchmark")
> library(microbenchmark)
> 
> 
> data <- new.env()
> data$ans2 <- 0
> data$ans3 <- 0
> data$i <- 0
> data$fun.value <- numeric(1000)
> 
> # define functions
> 
> rosenbrock_env <- function(x, data)
> {
>    x1 <- x[1]
>    x2 <- x[2]
>    ans <- 100 * (x2 - x1 * x1)^2 + (1 - x1)^2
>    ans2 <- ans^2
>    ans3 <- sqrt(abs(ans))
>    data$i <- data$i + 1
>    data$fun.value[data$i] <- ans
>    ans
> }
> 
> 
> rosenbrock_env2 <- function(x, data)
> {
>    x1 <- x[1]
>    x2 <- x[2]
>    ans <- 100 * (x2 - x1 * x1)^2 + (1 - x1)^2
>    ans2 <- ans^2
>    ans3 <- sqrt(abs(ans))
>    data$ans2 <- ans2
>    data$ans3 <- ans3
>    ans
> }
> 
> rosenbrock_attr <- function(x)
> {
>    x1 <- x[1]
>    x2 <- x[2]
>    ans <- 100 * (x2 - x1 * x1)^2 + (1 - x1)^2
>    ans2 <- ans^2
>    ans3 <- sqrt(abs(ans))
>    attr(ans, "ans2") <- ans2
>    attr(ans, "ans3") <- ans3
>    ans
> }
> 
> 
> rosenbrock_extra <- function(x, extraInfo = FALSE)
> {
>    x1 <- x[1]
>    x2 <- x[2]
>    ans <- 100 * (x2 - x1 * x1)^2 + (1 - x1)^2
>    ans2 <- ans^2
>    ans3 <- sqrt(abs(ans))
>    if (extraInfo) list(ans = ans, ans2 = ans2, ans3 = ans3)
>    else ans
> }
> 
> 
> rosenbrock_all <- function(x)
> {
>    x1 <- x[1]
>    x2 <- x[2]
>    ans <- 100 * (x2 - x1 * x1)^2 + (1 - x1)^2
>    ans2 <- ans^2
>    ans3 <- sqrt(abs(ans))
>    list(ans = ans, ans2 = ans2, ans3 = ans3)
> }
> 
> returnFirst <- function(fun) function(...) do.call(fun,list(...))[[1]]
> rosenbrock_all2 <- returnFirst(rosenbrock_all)
> 
> 
> # benchmark all functions
> set.seed <- 100
> 
> microbenchmark(env = optim(c(-1,2), rosenbrock_env, data = data),
>                 env2 = optim(c(-1,2), rosenbrock_env2, data = data),
>                 attr = optim(c(-1,2), rosenbrock_attr),
>                 extra = optim(c(-1,2), rosenbrock_extra, extraInfo = FALSE),
>                 all2 = optim(c(-1,2), rosenbrock_all2),
>                 times = 100)
> 
> 
> # correct parameters and return values?
> env <- optim(c(-1,2), rosenbrock_env, data = data)
> env2 <- optim(c(-1,2), rosenbrock_env2, data = data)
> attr <- optim(c(-1,2), rosenbrock_attr)
> extra <- optim(c(-1,2), rosenbrock_extra, extraInfo = FALSE)
> all2 <- optim(c(-1,2), rosenbrock_all2)
> 
> # correct return values with optimized parameters?
> env. <- rosenbrock_env(env$par, data)
> env2. <- rosenbrock_env(env2$par, data)
> attr. <- rosenbrock_attr(attr$par)
> extra. <- rosenbrock_extra(extra$par, extraInfo = FALSE)
> all2. <- rosenbrock_all2(all2$par)
> 
> # functions that return more than one value
> all. <- rosenbrock_all(all2$par)
> extra2. <- rosenbrock_extra(extra$par, extraInfo = TRUE)
> 
> # environment values correct?
> data$ans2
> data$ans3
> data$i
> data$fun.value
> 
> 
> microbenchmarking results:
> 
> Unit: microseconds
>    expr     min        lq      mean    median         uq       max neval
>     env 644.102 3919.6010 9598.3971 7950.0005 15582.8515 42210.900   100
>    env2 337.001  351.5510  479.2900  391.7505   460.3520  6900.800   100
>    attr 350.201  367.3010  502.0319  409.7510   483.6505  6772.800   100
>   extra 276.800  287.2010  402.4231  302.6510   371.5015  6457.201   100
>    all2 630.801  646.9015  785.9880  678.0010   808.9510  6411.102   100
> 
> rosenbrock_env and _env2 functions differ in that _env accesses vectors in the defined environment by indexing, whereas _env2 doesn't (hope I interpreted this right?).  This appears to be expensive operation, but allows saving values during the steps of the optim iteration, rather than just at convergence.  Overall, _extra has consistently lowest median execution time!
> 
> My earlier workaround was to write two separate functions, one of which returns extra values; all suggested approaches simplify that approach considerably.  I am also now more educated about attributes and environments that I did not know how to utilize before and that proved to be very useful concepts.  Again, thank you everyone for your input!
> 
> 
> 	[[alternative HTML version deleted]]
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From h@w|ckh@m @end|ng |rom gm@||@com  Tue Aug  8 15:34:19 2023
From: h@w|ckh@m @end|ng |rom gm@||@com (Hadley Wickham)
Date: Tue, 8 Aug 2023 08:34:19 -0500
Subject: [Rd] 
 A demonstrated shortcoming of the R package management system
In-Reply-To: <25808.2815.112074.192190@rob.eddelbuettel.com>
References: <25808.2815.112074.192190@rob.eddelbuettel.com>
Message-ID: <CABdHhvG3P51+o6yDxORSNYOd-TWc9bF2WrpK=yA-4SoGeb8xdQ@mail.gmail.com>

Hi Dirk,

Do you think it's worth also/instead considering a fix to S4 to avoid
this caching issue in future R versions?

(This is top of my for me as we consider the design of S7, and I
recently made a note to ensure we avoid similar problems there:
https://github.com/RConsortium/OOP-WG/issues/317)

Hadley

On Sun, Aug 6, 2023 at 4:05?PM Dirk Eddelbuettel <edd at debian.org> wrote:
>
>
> CRAN, by relying on the powerful package management system that is part of R,
> provides an unparalleled framework for extending R with nearly 20k packages.
>
> We recently encountered an issue that highlights a missing element in the
> otherwise outstanding package management system. So we would like to start a
> discussion about enhancing its feature set. As shown below, a mechanism to
> force reinstallation of packages may be needed.
>
> A demo is included below, it is reproducible in a container. We find the
> easiest/fastest reproduction is by saving the code snippet below in the
> current directory as eg 'matrixIssue.R' and have it run in a container as
>
>    docker run --rm -ti -v `pwd`:/mnt rocker/r2u Rscript /mnt/matrixIssue.R
>
> This runs in under two minutes, first installing the older Matrix, next
> installs SeuratObject, and then by removing the older Matrix making the
> (already installed) current Matrix version the default. This simulates a
> package update for Matrix. Which, as the final snippet demonstrates, silently
> breaks SeuratObject as the cached S4 method Csparse_validate is now missing.
> So when SeuratObject was installed under Matrix 1.5.1, it becomes unuseable
> under Matrix 1.6.0.
>
> What this shows is that a call to update.packages() will silently corrupt an
> existing installation.  We understand that this was known and addressed at
> CRAN by rebuilding all binary packages (for macOS and Windows).
>
> But it leaves both users relying on source installation as well as
> distributors of source packages in a dire situation. It hurt me three times:
> my default R installation was affected with unit tests (involving
> SeuratObject) silently failing. It similarly broke our CI setup at work.  And
> it created a fairly bad headache for the Debian packaging I am involved with
> (and I surmise it affects other distro similarly).
>
> It would be good to have a mechanism where a package, when being upgraded,
> could flag that 'more actions are required' by the system (administrator).
> We think this example demonstrates that we need such a mechanism to avoid
> (silently !!) breaking existing installations, possibly by forcing
> reinstallation of other packages.  R knows the package dependency graph and
> could trigger this, possibly after an 'opt-in' variable the user / admin
> sets.
>
> One possibility may be to add a new (versioned) field 'Breaks:'. Matrix could
> then have added 'Breaks: SeuratObject (<= 4.1.3)' preventing an installation
> of Matrix 1.6.0 when SeuratObject 4.1.3 (or earlier) is present, but
> permitting an update to Matrix 1.6.0 alongside a new version, say, 4.1.4 of
> SeuratObject which could itself have a versioned Depends: Matrix (>= 1.6.0).
>
> Regards,  Dirk
>
>
> ## Code example follows. Recommended to run the rocker/r2u container.
> ## Could also run 'apt update -qq; apt upgrade -y' but not required
> ## Thanks to my colleague Paul Hoffman for the core of this example
>
> ## now have Matrix 1.6.0 because r2u and CRAN remain current but we can install an older Matrix
> remotes::install_version('Matrix', '1.5.1')
>
> ## we can confirm that we have Matrix 1.5.1
> packageVersion("Matrix")
>
> ## we now install SeuratObject from source and to speed things up we first install the binary
> install.packages("SeuratObject")   # in this container via bspm/r2u as binary
> ## and then force a source installation (turning bspm off) _while Matrix is at 1.5.1_
> if (requireNamespace("bspm", quietly=TRUE) bspm::disable()
> Sys.setenv(PKG_CXXFLAGS='-Wno-ignored-attributes')      # Eigen compilation noise silencer
> install.packages('SeuratObject')
>
> ## we now remove the Matrix package version 1.5.1 we installed into /usr/local leaving 1.6.0
> remove.packages("Matrix")
> packageVersion("Matrix")
>
> ## and we now run a bit of SeuratObject code that is now broken as Csparse_validate is gone
> suppressMessages(library(SeuratObject))
> data('pbmc_small')
> graph <- pbmc_small[['RNA_snn']]
> class(graph)
> getClass('Graph')
> show(graph) # this fails
>
>
> --
> dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel



-- 
http://hadley.nz


From ||u|@@rev|||@ @end|ng |rom gm@||@com  Tue Aug  8 15:56:07 2023
From: ||u|@@rev|||@ @end|ng |rom gm@||@com (=?UTF-8?Q?Llu=C3=ADs_Revilla?=)
Date: Tue, 8 Aug 2023 15:56:07 +0200
Subject: [Rd] Vectorize library() to improve handling of versioned deps
 [sprint project proposal]
In-Reply-To: <CAD4oTHHGoQ0geRoUoULpcxLnEEgnfU+ZCzubmFkUAA29Z1wGUQ@mail.gmail.com>
References: <CAD4oTHHGoQ0geRoUoULpcxLnEEgnfU+ZCzubmFkUAA29Z1wGUQ@mail.gmail.com>
Message-ID: <CAN+W6_sOTqP0sFEMOKppTTwnGdtNt+VwwQTA+PGq5ZSsSaCdQw@mail.gmail.com>

Hi Gabriel,

Nice idea! I have encountered this problem several times, while probably a
better management of libraries could avoided the issue this is an elegant
solution.

How would this proposal handle arguments mask.ok, include.only and exclude?
For example, in the (edge) case two packages export a function with the
same name but we want to mask one of them (pkgA::fun, pkgC::fun).
How would that work for instance in library(c("pkgA", "pkgC"), mask.ok = c(
pkgC = "fun"))?
Would the name of the character be useful to decide which one is ok to
mask? (in the example I would expect the pkgC::fun be masked by pkgA::fun in
the inverse order or loading).

If this doesn't go ahead, perhaps a function could be implemented to check
these situations in the .libPaths (in a package if not in base) ?

Best,

Llu?s

On Mon, 7 Aug 2023 at 22:34, Gabriel Becker <gabembecker at gmail.com> wrote:

> Hi All,
>
> This is a proposal for a project which could be worked on during the R
> development Sprint at the end of this month; it was requested that we start
> a discussion here to see what R-core's thoughts on it were before we
> officially add it to the docket.
>
>
> AFAIK, R officially supports both versioned dependencies (almost
> exclusively of the >=version variety) and library paths with more than one
> directory. Further, I believe if at least de facto supports the same
> package being installed in different directories along the lib path. The
> most common of these, I'd bet, would be different versions of the same
> library being installed in a site library and in a user's personal library,
> though that's not the only way this can happen.
>
> The combination of these two features, however can give rise to
> packages which are all correctly installed and all loadable individually,
> but which must be loaded in a particular order when used together or the
> loading of some of them will fail.
>
> Consider the following dependency structure between packages
>
> pkgA: pkgB (>= 0.5.0)
>
> pkgC: pkgB (>= 0.6.0)
>
> Consider the following multi-libpath setup:
>
> ~/pth1/: pkgA, pkg B [0.5.1]
> ~/pth2/: pkg C, pkg B [0.6.5]
>
> And consider that we have the libpath c("~/pth1/", "~/pth2").
>
> If we do
>
> library(pkgA)
>
> Things will work great.
>
> Same if we do
>
> library(pkgC)
>
> BUT, if we do
>
> library(pkgA)
> library(pkgC)
>
> pkgC will not be able to be loaded, because an insufficient version of
> pkgB will
> already be loaded.
>
> I propose that library be modified to be able to take a character vector of
> package names, when it does, it performs the dependency calculations to
> determine how all packages in the vector can be loaded (in the order they
> appear). In the example above, this would mean that if we did
>
> library(c("pkgA", "pkgC"))
>
> It would determine that pkgB version 0.6.5 was needed (or alternatively,
> that version 0.5.1 was insufficient) and use that *when loading the
> dependencies of pkgA*.
>
> The proposal issue for the sprint itself is here:
> https://github.com/r-devel/r-project-sprint-2023/discussions/15
>
> Thoughts?
>
> ~G
>
>         [[alternative HTML version deleted]]
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>

	[[alternative HTML version deleted]]


From edd @end|ng |rom deb|@n@org  Tue Aug  8 16:00:20 2023
From: edd @end|ng |rom deb|@n@org (Dirk Eddelbuettel)
Date: Tue, 8 Aug 2023 09:00:20 -0500
Subject: [Rd] 
 A demonstrated shortcoming of the R package management system
In-Reply-To: <CABdHhvG3P51+o6yDxORSNYOd-TWc9bF2WrpK=yA-4SoGeb8xdQ@mail.gmail.com>
References: <25808.2815.112074.192190@rob.eddelbuettel.com>
 <CABdHhvG3P51+o6yDxORSNYOd-TWc9bF2WrpK=yA-4SoGeb8xdQ@mail.gmail.com>
Message-ID: <25810.19060.700760.577968@rob.eddelbuettel.com>


Hi Hadley,

On 8 August 2023 at 08:34, Hadley Wickham wrote:
| Do you think it's worth also/instead considering a fix to S4 to avoid
| this caching issue in future R versions?

That is somewhat orthogonal to my point of "'some uses' of the 20 year old S4
system (which as we know is fairly widely used 'out there') break
deployments" and the related "this is also a PITA for binary distributors".

The existing body of code seems to need some help.

| (This is top of my for me as we consider the design of S7, and I
| recently made a note to ensure we avoid similar problems there:
| https://github.com/RConsortium/OOP-WG/issues/317)

I haven't followed the S7 repo closely but peek every couple of months. It
seems sensible to avoid repeating shortcomings identfied elsewhere.

Best,  Dirk

-- 
dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org


From ch|r|com @end|ng |rom goog|e@com  Thu Aug 10 05:01:57 2023
From: ch|r|com @end|ng |rom goog|e@com (Michael Chirico)
Date: Wed, 9 Aug 2023 20:01:57 -0700
Subject: [Rd] Improving user-friendliness of S4 dispatch failure when
 mis-naming arguments?
Message-ID: <CAD7Bkx8Y44Gy=sW+mMfyXqpg3gcGKojS9A0zbrHzF_qqJsvYAg@mail.gmail.com>

I fielded a debugging request from a non-expert user today. At root
was running the following:

dbGetQuery(connection = conn, query = query)

The problem is that they've named the arguments incorrectly -- it
should have been [1]:

dbGetQuery(conn = conn, statement = query)

The problem is that the error message "looks" highly confusing to the
untrained eye:

Error in (function (classes, fdef, mtable)  :   unable to find an
inherited method for function ?dbGetQuery? for signature ?"missing",
"missing"?

In retrospect, of course, this makes sense -- the mis-named arguments
are getting picked up by '...', leaving the required arguments
missing.

But I was left wondering how we could help users right their own ship here.

Would it help to mention the argument names? To include some code
checking for weird combinations of missing arguments? Any other
suggestions?

Mike C

[1] https://github.com/r-dbi/DBI/blob/97934c885749dd87a6beb10e8ccb6a5ebea3675e/R/dbGetQuery.R#L62-L64


From h@w|ckh@m @end|ng |rom gm@||@com  Thu Aug 10 15:46:42 2023
From: h@w|ckh@m @end|ng |rom gm@||@com (Hadley Wickham)
Date: Thu, 10 Aug 2023 08:46:42 -0500
Subject: [Rd] Improving user-friendliness of S4 dispatch failure when
 mis-naming arguments?
In-Reply-To: <CAD7Bkx8Y44Gy=sW+mMfyXqpg3gcGKojS9A0zbrHzF_qqJsvYAg@mail.gmail.com>
References: <CAD7Bkx8Y44Gy=sW+mMfyXqpg3gcGKojS9A0zbrHzF_qqJsvYAg@mail.gmail.com>
Message-ID: <CABdHhvHjJZmGCyb2okOGCOqBO+e2HA7taxqfGE-OPRgq_GCU0Q@mail.gmail.com>

Hi Michael,

I can't help with S4, but I can help to make sure this isn't a problem
with S7. What do you think of the current error message? Do you see
anything obvious we could do to improve?

library(S7)

dbGetQuery <- new_generic("dbGetQuery", c("conn", "statement"))
dbGetQuery(connection = NULL, query = NULL)
#> Error: Can't find method for generic `dbGetQuery(conn, statement)`:
#> - conn     : MISSING
#> - statement: MISSING

Hadley

On Wed, Aug 9, 2023 at 10:02?PM Michael Chirico via R-devel
<r-devel at r-project.org> wrote:
>
> I fielded a debugging request from a non-expert user today. At root
> was running the following:
>
> dbGetQuery(connection = conn, query = query)
>
> The problem is that they've named the arguments incorrectly -- it
> should have been [1]:
>
> dbGetQuery(conn = conn, statement = query)
>
> The problem is that the error message "looks" highly confusing to the
> untrained eye:
>
> Error in (function (classes, fdef, mtable)  :   unable to find an
> inherited method for function ?dbGetQuery? for signature ?"missing",
> "missing"?
>
> In retrospect, of course, this makes sense -- the mis-named arguments
> are getting picked up by '...', leaving the required arguments
> missing.
>
> But I was left wondering how we could help users right their own ship here.
>
> Would it help to mention the argument names? To include some code
> checking for weird combinations of missing arguments? Any other
> suggestions?
>
> Mike C
>
> [1] https://github.com/r-dbi/DBI/blob/97934c885749dd87a6beb10e8ccb6a5ebea3675e/R/dbGetQuery.R#L62-L64
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel



-- 
http://hadley.nz


From ch|r|com @end|ng |rom goog|e@com  Thu Aug 10 18:59:18 2023
From: ch|r|com @end|ng |rom goog|e@com (Michael Chirico)
Date: Thu, 10 Aug 2023 09:59:18 -0700
Subject: [Rd] Improving user-friendliness of S4 dispatch failure when
 mis-naming arguments?
In-Reply-To: <CABdHhvHjJZmGCyb2okOGCOqBO+e2HA7taxqfGE-OPRgq_GCU0Q@mail.gmail.com>
References: <CAD7Bkx8Y44Gy=sW+mMfyXqpg3gcGKojS9A0zbrHzF_qqJsvYAg@mail.gmail.com>
 <CABdHhvHjJZmGCyb2okOGCOqBO+e2HA7taxqfGE-OPRgq_GCU0Q@mail.gmail.com>
Message-ID: <CAD7Bkx91D939Mun=iL+HSK+7mbUG+vaZtk83+p_61zYd=4buAw@mail.gmail.com>

I forwarded that along to the original reporter with positive feedback
-- including the argument names is definitely a big help for cuing
what exactly is missing.

Would a patch to do something similar for S4 be useful?

On Thu, Aug 10, 2023 at 6:46?AM Hadley Wickham <h.wickham at gmail.com> wrote:
>
> Hi Michael,
>
> I can't help with S4, but I can help to make sure this isn't a problem
> with S7. What do you think of the current error message? Do you see
> anything obvious we could do to improve?
>
> library(S7)
>
> dbGetQuery <- new_generic("dbGetQuery", c("conn", "statement"))
> dbGetQuery(connection = NULL, query = NULL)
> #> Error: Can't find method for generic `dbGetQuery(conn, statement)`:
> #> - conn     : MISSING
> #> - statement: MISSING
>
> Hadley
>
> On Wed, Aug 9, 2023 at 10:02?PM Michael Chirico via R-devel
> <r-devel at r-project.org> wrote:
> >
> > I fielded a debugging request from a non-expert user today. At root
> > was running the following:
> >
> > dbGetQuery(connection = conn, query = query)
> >
> > The problem is that they've named the arguments incorrectly -- it
> > should have been [1]:
> >
> > dbGetQuery(conn = conn, statement = query)
> >
> > The problem is that the error message "looks" highly confusing to the
> > untrained eye:
> >
> > Error in (function (classes, fdef, mtable)  :   unable to find an
> > inherited method for function ?dbGetQuery? for signature ?"missing",
> > "missing"?
> >
> > In retrospect, of course, this makes sense -- the mis-named arguments
> > are getting picked up by '...', leaving the required arguments
> > missing.
> >
> > But I was left wondering how we could help users right their own ship here.
> >
> > Would it help to mention the argument names? To include some code
> > checking for weird combinations of missing arguments? Any other
> > suggestions?
> >
> > Mike C
> >
> > [1] https://github.com/r-dbi/DBI/blob/97934c885749dd87a6beb10e8ccb6a5ebea3675e/R/dbGetQuery.R#L62-L64
> >
> > ______________________________________________
> > R-devel at r-project.org mailing list
> > https://stat.ethz.ch/mailman/listinfo/r-devel
>
>
>
> --
> http://hadley.nz


From g@bembecker @end|ng |rom gm@||@com  Thu Aug 10 21:39:11 2023
From: g@bembecker @end|ng |rom gm@||@com (Gabriel Becker)
Date: Thu, 10 Aug 2023 12:39:11 -0700
Subject: [Rd] Improving user-friendliness of S4 dispatch failure when
 mis-naming arguments?
In-Reply-To: <CAD7Bkx91D939Mun=iL+HSK+7mbUG+vaZtk83+p_61zYd=4buAw@mail.gmail.com>
References: <CAD7Bkx8Y44Gy=sW+mMfyXqpg3gcGKojS9A0zbrHzF_qqJsvYAg@mail.gmail.com>
 <CABdHhvHjJZmGCyb2okOGCOqBO+e2HA7taxqfGE-OPRgq_GCU0Q@mail.gmail.com>
 <CAD7Bkx91D939Mun=iL+HSK+7mbUG+vaZtk83+p_61zYd=4buAw@mail.gmail.com>
Message-ID: <CAD4oTHHud01FhAF0nXiHna6KcFgDwk6u=xUMrXQnWHpuFBbJTQ@mail.gmail.com>

I just want to add my 2 cents that I think it would be very useful and
beneficial to improve S4 to surface that information as well.

More information about the way that the dispatch failed would be of great
help in situations like the one Michael pointed out.

~G

On Thu, Aug 10, 2023 at 9:59?AM Michael Chirico via R-devel <
r-devel at r-project.org> wrote:

> I forwarded that along to the original reporter with positive feedback
> -- including the argument names is definitely a big help for cuing
> what exactly is missing.
>
> Would a patch to do something similar for S4 be useful?
>
> On Thu, Aug 10, 2023 at 6:46?AM Hadley Wickham <h.wickham at gmail.com>
> wrote:
> >
> > Hi Michael,
> >
> > I can't help with S4, but I can help to make sure this isn't a problem
> > with S7. What do you think of the current error message? Do you see
> > anything obvious we could do to improve?
> >
> > library(S7)
> >
> > dbGetQuery <- new_generic("dbGetQuery", c("conn", "statement"))
> > dbGetQuery(connection = NULL, query = NULL)
> > #> Error: Can't find method for generic `dbGetQuery(conn, statement)`:
> > #> - conn     : MISSING
> > #> - statement: MISSING
> >
> > Hadley
> >
> > On Wed, Aug 9, 2023 at 10:02?PM Michael Chirico via R-devel
> > <r-devel at r-project.org> wrote:
> > >
> > > I fielded a debugging request from a non-expert user today. At root
> > > was running the following:
> > >
> > > dbGetQuery(connection = conn, query = query)
> > >
> > > The problem is that they've named the arguments incorrectly -- it
> > > should have been [1]:
> > >
> > > dbGetQuery(conn = conn, statement = query)
> > >
> > > The problem is that the error message "looks" highly confusing to the
> > > untrained eye:
> > >
> > > Error in (function (classes, fdef, mtable)  :   unable to find an
> > > inherited method for function ?dbGetQuery? for signature ?"missing",
> > > "missing"?
> > >
> > > In retrospect, of course, this makes sense -- the mis-named arguments
> > > are getting picked up by '...', leaving the required arguments
> > > missing.
> > >
> > > But I was left wondering how we could help users right their own ship
> here.
> > >
> > > Would it help to mention the argument names? To include some code
> > > checking for weird combinations of missing arguments? Any other
> > > suggestions?
> > >
> > > Mike C
> > >
> > > [1]
> https://github.com/r-dbi/DBI/blob/97934c885749dd87a6beb10e8ccb6a5ebea3675e/R/dbGetQuery.R#L62-L64
> > >
> > > ______________________________________________
> > > R-devel at r-project.org mailing list
> > > https://stat.ethz.ch/mailman/listinfo/r-devel
> >
> >
> >
> > --
> > http://hadley.nz
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>

	[[alternative HTML version deleted]]


From t|m@t@y|or @end|ng |rom h|ddene|eph@nt@@co@uk  Thu Aug 10 23:38:44 2023
From: t|m@t@y|or @end|ng |rom h|ddene|eph@nt@@co@uk (Tim Taylor)
Date: Thu, 10 Aug 2023 22:38:44 +0100
Subject: [Rd] as.matrix.dist patch (performance)
Message-ID: <c919dc37-e226-3b9c-74a8-455c5dea79af@hiddenelephants.co.uk>

Please find attached a small patch to improve the performance of 
as.matrix.dist().? It's a tiny bit more involved than the current code 
but does bring a reasonable speed improvement for larger <dist> objects 
(remaining comparable for smaller ones).

Example:

set.seed(1)
dat <- matrix(rnorm(20000), ncol = 2);
system.time(as.matrix(dist(dat)))

As of r84931:

 ?? user? system elapsed
 ? 3.370?? 1.154?? 4.535

With this patch:

 ?? user? system elapsed
 ? 1.925?? 0.754?? 2.685

Submitting here in the first instance but happy to move to Bugzilla if 
more appropriate.

Cheers

Tim

-------------- next part --------------
A non-text attachment was scrubbed...
Name: patch.diff
Type: text/x-patch
Size: 750 bytes
Desc: not available
URL: <https://stat.ethz.ch/pipermail/r-devel/attachments/20230810/d7ea5e3a/attachment.bin>

From 538280 @end|ng |rom gm@||@com  Fri Aug 11 00:19:37 2023
From: 538280 @end|ng |rom gm@||@com (Greg Snow)
Date: Thu, 10 Aug 2023 16:19:37 -0600
Subject: [Rd] 
 feature request: optim() iteration of functions that return
 multiple values
In-Reply-To: <87cz03nro4.fsf@enricoschumann.net>
References: <PAXP189MB1928AA39727C26A434F8D3FFD608A@PAXP189MB1928.EURP189.PROD.OUTLOOK.COM>
 <87cz03nro4.fsf@enricoschumann.net>
Message-ID: <CAFEqCdwJM6gOmD4YytYit3CrTRJBMjc2xFs4yVmNHJ1Eixj_mg@mail.gmail.com>

Another option that is similar to Enrico's is to use object oriented
programming with R6 or reference objects.  I prefer the R6 package
(which will still use an environment like Enrico, but with some
different syntax and a little easier if you want to do this multiple
times.

Here is some example code (this grows the vectors inefficiently, which
could be improved, but it is fast as is):

library(R6)

RB <- R6Class("RB",
    public=list(
      x = numeric(0),
      y = numeric(0),
      val=numeric(0),
      fun = function(x) {
        x1 <- x[1]
        x2 <- x[2]
        self$x <- c(self$x, x1)
        self$y <- c(self$y, x2)
        ans <- 100*(x2-x1*x1)^2 + (1-x1)^2
        self$val <- c(self$val, ans)
        ans
      }
    )
)

rb1 <- RB$new()
optim(c(-1.2, 1), rb1$fun)
plot(rb1$x, rb1$y, type='l')

rb2 <- RB$new()
optim(c(0,1), rb2$fun)
lines(rb2$x, rb2$y, col='blue')

library(optimx)

rb3 <- RB$new()
optimr(c(-1.2,1), rb3$fun)
lines(rb3$x, rb3$y, col='red')

rb4 <- RB$new()
optimr(c(-1.2,1), rb4$fun, method='hjn')
lines(rb4$x, rb4$y, col='forestgreen')

On Fri, Aug 4, 2023 at 2:22?AM Enrico Schumann <es at enricoschumann.net> wrote:
>
> On Thu, 03 Aug 2023, Sami Tuomivaara writes:
>
> > Dear all,
> >
> > I have used optim a lot in contexts where it would
> > useful to be able to iterate function myfun that, in
> > addition to the primary objective to be minimized
> > ('minimize.me'), could return other values such as
> > alternative metrics of the minimization, informative
> > intermediate values from the calculations, etc.
> >
> > myfun  <- function()
> > {
> > ...
> > return(list(minimize.me = minimize.me, R2 = R2, pval = pval, etc.))
> > }
> >
> > During the iteration, optim could utilize just the first value from the myfun return list; all the other values calculated and returned by myfun could be ignored by optim.
> > After convergence, the other return values of myfun
> > could be finally extracted and appended into the optim
> > return value (which is a list) as additional entry
> > e.g.: $aux <- list(R2, pval, etc.), (without
> > 'minimize.me' as it is already returned as $value).
> >
> > The usual ways for accessing optim return values, e.g.,
> > $par, $value, etc. are not affected.  Computational
> > cost may not be prohibitive either.  Is this feasible
> > to consider?
> >
>
> If you only wish to store additional information, you could do
> so with an environment, without changing optim.  For instance,
> like so (using the first example from ?optim):
>
>     data <- new.env()
>     data$i <- 0
>     data$fun.value <- numeric(1000)
>
>     fr <- function(x, data) {   ## Rosenbrock Banana function
>         x1 <- x[1]
>         x2 <- x[2]
>         ans <- 100 * (x2 - x1 * x1)^2 + (1 - x1)^2
>         data$i <- data$i + 1
>         data$fun.value[data$i] <- ans
>         ans
>     }
>     optim(c(-1.2,1), fr, data = data)
>     ## $par
>     ## [1] 1.000260 1.000506
>     ##
>     ## $value
>     ## [1] 8.825241e-08
>     ##
>     ## $counts
>     ## function gradient
>     ##      195       NA
>     ##
>     ## ....
>
>     data$i
>     ## 195
>
>     plot(data$fun.value[1:data$i])
>
>
>
>
> --
> Enrico Schumann
> Lucerne, Switzerland
> http://enricoschumann.net
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel



-- 
Gregory (Greg) L. Snow Ph.D.
538280 at gmail.com


From ch|r|com @end|ng |rom goog|e@com  Fri Aug 11 08:56:45 2023
From: ch|r|com @end|ng |rom goog|e@com (Michael Chirico)
Date: Thu, 10 Aug 2023 23:56:45 -0700
Subject: [Rd] Improving user-friendliness of S4 dispatch failure when
 mis-naming arguments?
In-Reply-To: <CAD4oTHHud01FhAF0nXiHna6KcFgDwk6u=xUMrXQnWHpuFBbJTQ@mail.gmail.com>
References: <CAD7Bkx8Y44Gy=sW+mMfyXqpg3gcGKojS9A0zbrHzF_qqJsvYAg@mail.gmail.com>
 <CABdHhvHjJZmGCyb2okOGCOqBO+e2HA7taxqfGE-OPRgq_GCU0Q@mail.gmail.com>
 <CAD7Bkx91D939Mun=iL+HSK+7mbUG+vaZtk83+p_61zYd=4buAw@mail.gmail.com>
 <CAD4oTHHud01FhAF0nXiHna6KcFgDwk6u=xUMrXQnWHpuFBbJTQ@mail.gmail.com>
Message-ID: <CAD7Bkx_P1KSyp2KEFvYTYQyog2LvF02TYJHDdXNqi__3+U057w@mail.gmail.com>

Here's a trivial patch that offers some improvement:

Index: src/library/methods/R/methodsTable.R
===================================================================
--- src/library/methods/R/methodsTable.R (revision 84931)
+++ src/library/methods/R/methodsTable.R (working copy)
@@ -752,11 +752,12 @@
   if(length(methods) == 1L)
     return(methods[[1L]]) # the method
   else if(length(methods) == 0L) {
-    cnames <- paste0("\"", vapply(classes, as.character, ""), "\"",
+    cnames <- paste0(head(fdef at signature, length(classes)), "=\"",
vapply(classes, as.character, ""), "\"",
      collapse = ", ")
     stop(gettextf("unable to find an inherited method for function %s
for signature %s",
                   sQuote(fdef at generic),
                   sQuote(cnames)),
+         call. = FALSE,
          domain = NA)
   }
   else

Here's the upshot for the example on DBI:

dbGetQuery(connection = conn, query = query)
Error: unable to find an inherited method for function ?dbGetQuery?
for signature ?conn="missing", statement="missing"?

I don't have any confidence about edge cases / robustness of this
patch for generic S4 use cases (make check-all seems fine), but I
don't suppose a full patch would be dramatically different from the
above.

Mike C

On Thu, Aug 10, 2023 at 12:39?PM Gabriel Becker <gabembecker at gmail.com> wrote:
>
> I just want to add my 2 cents that I think it would be very useful and beneficial to improve S4 to surface that information as well.
>
> More information about the way that the dispatch failed would be of great help in situations like the one Michael pointed out.
>
> ~G
>
> On Thu, Aug 10, 2023 at 9:59?AM Michael Chirico via R-devel <r-devel at r-project.org> wrote:
>>
>> I forwarded that along to the original reporter with positive feedback
>> -- including the argument names is definitely a big help for cuing
>> what exactly is missing.
>>
>> Would a patch to do something similar for S4 be useful?
>>
>> On Thu, Aug 10, 2023 at 6:46?AM Hadley Wickham <h.wickham at gmail.com> wrote:
>> >
>> > Hi Michael,
>> >
>> > I can't help with S4, but I can help to make sure this isn't a problem
>> > with S7. What do you think of the current error message? Do you see
>> > anything obvious we could do to improve?
>> >
>> > library(S7)
>> >
>> > dbGetQuery <- new_generic("dbGetQuery", c("conn", "statement"))
>> > dbGetQuery(connection = NULL, query = NULL)
>> > #> Error: Can't find method for generic `dbGetQuery(conn, statement)`:
>> > #> - conn     : MISSING
>> > #> - statement: MISSING
>> >
>> > Hadley
>> >
>> > On Wed, Aug 9, 2023 at 10:02?PM Michael Chirico via R-devel
>> > <r-devel at r-project.org> wrote:
>> > >
>> > > I fielded a debugging request from a non-expert user today. At root
>> > > was running the following:
>> > >
>> > > dbGetQuery(connection = conn, query = query)
>> > >
>> > > The problem is that they've named the arguments incorrectly -- it
>> > > should have been [1]:
>> > >
>> > > dbGetQuery(conn = conn, statement = query)
>> > >
>> > > The problem is that the error message "looks" highly confusing to the
>> > > untrained eye:
>> > >
>> > > Error in (function (classes, fdef, mtable)  :   unable to find an
>> > > inherited method for function ?dbGetQuery? for signature ?"missing",
>> > > "missing"?
>> > >
>> > > In retrospect, of course, this makes sense -- the mis-named arguments
>> > > are getting picked up by '...', leaving the required arguments
>> > > missing.
>> > >
>> > > But I was left wondering how we could help users right their own ship here.
>> > >
>> > > Would it help to mention the argument names? To include some code
>> > > checking for weird combinations of missing arguments? Any other
>> > > suggestions?
>> > >
>> > > Mike C
>> > >
>> > > [1] https://github.com/r-dbi/DBI/blob/97934c885749dd87a6beb10e8ccb6a5ebea3675e/R/dbGetQuery.R#L62-L64
>> > >
>> > > ______________________________________________
>> > > R-devel at r-project.org mailing list
>> > > https://stat.ethz.ch/mailman/listinfo/r-devel
>> >
>> >
>> >
>> > --
>> > http://hadley.nz
>>
>> ______________________________________________
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel


From m@ech|er @end|ng |rom @t@t@m@th@ethz@ch  Fri Aug 11 11:26:10 2023
From: m@ech|er @end|ng |rom @t@t@m@th@ethz@ch (Martin Maechler)
Date: Fri, 11 Aug 2023 11:26:10 +0200
Subject: [Rd] Improving user-friendliness of S4 dispatch failure when
 mis-naming arguments?
In-Reply-To: <CAD7Bkx_P1KSyp2KEFvYTYQyog2LvF02TYJHDdXNqi__3+U057w@mail.gmail.com>
References: <CAD7Bkx8Y44Gy=sW+mMfyXqpg3gcGKojS9A0zbrHzF_qqJsvYAg@mail.gmail.com>
 <CABdHhvHjJZmGCyb2okOGCOqBO+e2HA7taxqfGE-OPRgq_GCU0Q@mail.gmail.com>
 <CAD7Bkx91D939Mun=iL+HSK+7mbUG+vaZtk83+p_61zYd=4buAw@mail.gmail.com>
 <CAD4oTHHud01FhAF0nXiHna6KcFgDwk6u=xUMrXQnWHpuFBbJTQ@mail.gmail.com>
 <CAD7Bkx_P1KSyp2KEFvYTYQyog2LvF02TYJHDdXNqi__3+U057w@mail.gmail.com>
Message-ID: <25813.65202.931572.817831@stat.math.ethz.ch>

>>>>> Michael Chirico via R-devel 
>>>>>     on Thu, 10 Aug 2023 23:56:45 -0700 writes:

> Here's a trivial patch that offers some improvement:

    > Index: src/library/methods/R/methodsTable.R
    > ===================================================================
    > --- src/library/methods/R/methodsTable.R (revision 84931)
    > +++ src/library/methods/R/methodsTable.R (working copy)
    > @@ -752,11 +752,12 @@
    > if(length(methods) == 1L)
    > return(methods[[1L]]) # the method
    > else if(length(methods) == 0L) {
    > -    cnames <- paste0("\"", vapply(classes, as.character, ""), "\"",
    > +    cnames <- paste0(head(fdef at signature, length(classes)), "=\"",
    > vapply(classes, as.character, ""), "\"",
    > collapse = ", ")
    > stop(gettextf("unable to find an inherited method for function %s
    > for signature %s",
    > sQuote(fdef at generic),
    > sQuote(cnames)),
    > +         call. = FALSE,
    > domain = NA)
    > }
    > else

    > Here's the upshot for the example on DBI:

    > dbGetQuery(connection = conn, query = query)
    > Error: unable to find an inherited method for function ?dbGetQuery?
    > for signature ?conn="missing", statement="missing"?

    > I don't have any confidence about edge cases / robustness of this
    > patch for generic S4 use cases (make check-all seems fine),

Good you checked, but you are right that that's not all enough to be sure:

Checking error *messages* is not something we do often {not
the least because you'd need to consider message translations
and hence ensure you only check in case of English ...}.

    > but I don't suppose a full patch would be dramatically different from the
    > above.

I agree: The patch looks to make sense to me, too,
while I'm not entirely sure about the extra   call. = FALSE
 (which I of course understand you'd prefer for the above example)

Now I'd like to find an example that only uses packages with priority
 base | Recommended

Martin

--
Martin Maechler
ETH Zurich  and  R Core team


    > Mike C

    > On Thu, Aug 10, 2023 at 12:39?PM Gabriel Becker <gabembecker at gmail.com> wrote:
    >> 
    >> I just want to add my 2 cents that I think it would be very useful and beneficial to improve S4 to surface that information as well.
    >> 
    >> More information about the way that the dispatch failed would be of great help in situations like the one Michael pointed out.
    >> 
    >> ~G
    >> 
    >> On Thu, Aug 10, 2023 at 9:59?AM Michael Chirico via R-devel <r-devel at r-project.org> wrote:
    >>> 
    >>> I forwarded that along to the original reporter with positive feedback
    >>> -- including the argument names is definitely a big help for cuing
    >>> what exactly is missing.
    >>> 
    >>> Would a patch to do something similar for S4 be useful?
    >>> 
    >>> On Thu, Aug 10, 2023 at 6:46?AM Hadley Wickham <h.wickham at gmail.com> wrote:
    >>> >
    >>> > Hi Michael,
    >>> >
    >>> > I can't help with S4, but I can help to make sure this isn't a problem
    >>> > with S7. What do you think of the current error message? Do you see
    >>> > anything obvious we could do to improve?
    >>> >
    >>> > library(S7)
    >>> >
    >>> > dbGetQuery <- new_generic("dbGetQuery", c("conn", "statement"))
    >>> > dbGetQuery(connection = NULL, query = NULL)
    >>> > #> Error: Can't find method for generic `dbGetQuery(conn, statement)`:
    >>> > #> - conn     : MISSING
    >>> > #> - statement: MISSING
    >>> >
    >>> > Hadley
    >>> >
    >>> > On Wed, Aug 9, 2023 at 10:02?PM Michael Chirico via R-devel
    >>> > <r-devel at r-project.org> wrote:
    >>> > >
    >>> > > I fielded a debugging request from a non-expert user today. At root
    >>> > > was running the following:
    >>> > >
    >>> > > dbGetQuery(connection = conn, query = query)
    >>> > >
    >>> > > The problem is that they've named the arguments incorrectly -- it
    >>> > > should have been [1]:
    >>> > >
    >>> > > dbGetQuery(conn = conn, statement = query)
    >>> > >
    >>> > > The problem is that the error message "looks" highly confusing to the
    >>> > > untrained eye:
    >>> > >
    >>> > > Error in (function (classes, fdef, mtable)  :   unable to find an
    >>> > > inherited method for function ?dbGetQuery? for signature ?"missing",
    >>> > > "missing"?
    >>> > >
    >>> > > In retrospect, of course, this makes sense -- the mis-named arguments
    >>> > > are getting picked up by '...', leaving the required arguments
    >>> > > missing.
    >>> > >
    >>> > > But I was left wondering how we could help users right their own ship here.
    >>> > >
    >>> > > Would it help to mention the argument names? To include some code
    >>> > > checking for weird combinations of missing arguments? Any other
    >>> > > suggestions?
    >>> > >
    >>> > > Mike C
    >>> > >
    >>> > > [1] https://github.com/r-dbi/DBI/blob/97934c885749dd87a6beb10e8ccb6a5ebea3675e/R/dbGetQuery.R#L62-L64


From yeyuegu@ng @end|ng |rom go|dw|nd@com  Fri Aug 11 05:41:35 2023
From: yeyuegu@ng @end|ng |rom go|dw|nd@com (=?gb2312?B?0rbUwrni?=)
Date: Fri, 11 Aug 2023 03:41:35 +0000
Subject: [Rd] R-4.3 version list.files function could not work correctly in
 chinese
Message-ID: <16b91252fd33452f890fcce439921a63@goldwind.com>

     ????
          ????R-4.3???????????R??????list.files??????????????????????BUG????????????????????????????
r4.3????dir????????????????? - COS??? | ?????? | ?????????????? (cosx.org)<https://d.cosx.org/d/424356-r43ban-ben-zhong-dirhan-shu-huo-qu-bu-liao-quan-bu-wen-jian/11>
          ???????????????????????

	[[alternative HTML version deleted]]


From kry|ov@r00t @end|ng |rom gm@||@com  Fri Aug 11 13:24:35 2023
From: kry|ov@r00t @end|ng |rom gm@||@com (Ivan Krylov)
Date: Fri, 11 Aug 2023 14:24:35 +0300
Subject: [Rd] 
 R-4.3 version list.files function could not work correctly in
 chinese
In-Reply-To: <16b91252fd33452f890fcce439921a63@goldwind.com>
References: <16b91252fd33452f890fcce439921a63@goldwind.com>
Message-ID: <20230811142435.770c2037@parabola>

Dear ???,

Thank you for your message, but please follow the posting guide in your
future messages: https://www.r-project.org/posting-guide.html
https://www.r-project.org/bugs.html

I understand from your link that list.files() ends up skipping some
Chinese filenames in R-4.3.1 (but not R-4.2.2) on Windows, but would you
(or perhaps Yihui Xie who I see is also participating in the discussion)
mind translating the rest of your findings into English? Have you been
able to narrow down the problem to certain character ranges, for
example?

-- 
Best regards,
Ivan


From ch|r|com @end|ng |rom goog|e@com  Fri Aug 11 17:32:47 2023
From: ch|r|com @end|ng |rom goog|e@com (Michael Chirico)
Date: Fri, 11 Aug 2023 08:32:47 -0700
Subject: [Rd] Improving user-friendliness of S4 dispatch failure when
 mis-naming arguments?
In-Reply-To: <25813.65202.931572.817831@stat.math.ethz.ch>
References: <CAD7Bkx8Y44Gy=sW+mMfyXqpg3gcGKojS9A0zbrHzF_qqJsvYAg@mail.gmail.com>
 <CABdHhvHjJZmGCyb2okOGCOqBO+e2HA7taxqfGE-OPRgq_GCU0Q@mail.gmail.com>
 <CAD7Bkx91D939Mun=iL+HSK+7mbUG+vaZtk83+p_61zYd=4buAw@mail.gmail.com>
 <CAD4oTHHud01FhAF0nXiHna6KcFgDwk6u=xUMrXQnWHpuFBbJTQ@mail.gmail.com>
 <CAD7Bkx_P1KSyp2KEFvYTYQyog2LvF02TYJHDdXNqi__3+U057w@mail.gmail.com>
 <25813.65202.931572.817831@stat.math.ethz.ch>
Message-ID: <CAD7Bkx_y5c4MMz6AyhQH2_O59aj+UE+xnkK-ru255ZmKEL89vQ@mail.gmail.com>

> I'm not entirely sure about the extra call. = FALSE

My thinking is the signature of the internal .InheritForDispatch() is
not likely to help anyone,
in fact having the opposite effect for beginners unsure how to use that info.

> Now I'd like to find an example that only uses packages with priority base | Recommended

Sure, here are a few.

library(Matrix)
# searching for Matrix-owned generics
matrix_generics <- getGenerics(where = asNamespace("Matrix"))
matrix_generics at .Data[matrix_generics at package == "Matrix"]

# simple signature, one argument 'x'
symmpart()
# Error: unable to find an inherited method for function ?symmpart?
for signature ?x="missing"?

# more complicated signature, especially including ...
Cholesky(a = 1)
# Error: unable to find an inherited method for function ?Cholesky?
for signature ?A="missing"?
Cholesky(a = 1, perm = TRUE)
# Error: unable to find an inherited method for function ?Cholesky?
for signature ?A="missing"?
Cholesky(a = 1, perm = TRUE, IMult = 2)
# Error: unable to find an inherited method for function ?Cholesky?
for signature ?A="missing"?

---

'base' is a bit harder since stats4 just provides classes over stats
functions, so the missigness error comes from non-S4 code.

library(stats4)
coef()
# Error in coef.default() : argument "object" is missing, with no default

Defining our own generic:

setGeneric("BaseGeneric", \(a, ...) standardGeneric("BaseGeneric"))
BaseGeneric()
# Error: unable to find an inherited method for function ?BaseGeneric?
for signature ?a="missing"?

# getting multiple classes to show up requires setting the signature:
setMethod("BaseGeneric", signature(x = "double", y = "double"), \(x,
y, ...) x + y)
BaseGeneric(X = 1, Y = 2)
# Error: unable to find an inherited method for function ?BaseGeneric?
for signature ?x="missing", y="missing"?


On Fri, Aug 11, 2023 at 2:26?AM Martin Maechler
<maechler at stat.math.ethz.ch> wrote:
>
> >>>>> Michael Chirico via R-devel
> >>>>>     on Thu, 10 Aug 2023 23:56:45 -0700 writes:
>
> > Here's a trivial patch that offers some improvement:
>
>     > Index: src/library/methods/R/methodsTable.R
>     > ===================================================================
>     > --- src/library/methods/R/methodsTable.R (revision 84931)
>     > +++ src/library/methods/R/methodsTable.R (working copy)
>     > @@ -752,11 +752,12 @@
>     > if(length(methods) == 1L)
>     > return(methods[[1L]]) # the method
>     > else if(length(methods) == 0L) {
>     > -    cnames <- paste0("\"", vapply(classes, as.character, ""), "\"",
>     > +    cnames <- paste0(head(fdef at signature, length(classes)), "=\"",
>     > vapply(classes, as.character, ""), "\"",
>     > collapse = ", ")
>     > stop(gettextf("unable to find an inherited method for function %s
>     > for signature %s",
>     > sQuote(fdef at generic),
>     > sQuote(cnames)),
>     > +         call. = FALSE,
>     > domain = NA)
>     > }
>     > else
>
>     > Here's the upshot for the example on DBI:
>
>     > dbGetQuery(connection = conn, query = query)
>     > Error: unable to find an inherited method for function ?dbGetQuery?
>     > for signature ?conn="missing", statement="missing"?
>
>     > I don't have any confidence about edge cases / robustness of this
>     > patch for generic S4 use cases (make check-all seems fine),
>
> Good you checked, but you are right that that's not all enough to be sure:
>
> Checking error *messages* is not something we do often {not
> the least because you'd need to consider message translations
> and hence ensure you only check in case of English ...}.
>
>     > but I don't suppose a full patch would be dramatically different from the
>     > above.
>
> I agree: The patch looks to make sense to me, too,
> while I'm not entirely sure about the extra   call. = FALSE
>  (which I of course understand you'd prefer for the above example)
>
> Now I'd like to find an example that only uses packages with priority
>  base | Recommended
>
> Martin
>
> --
> Martin Maechler
> ETH Zurich  and  R Core team
>
>
>     > Mike C
>
>     > On Thu, Aug 10, 2023 at 12:39?PM Gabriel Becker <gabembecker at gmail.com> wrote:
>     >>
>     >> I just want to add my 2 cents that I think it would be very useful and beneficial to improve S4 to surface that information as well.
>     >>
>     >> More information about the way that the dispatch failed would be of great help in situations like the one Michael pointed out.
>     >>
>     >> ~G
>     >>
>     >> On Thu, Aug 10, 2023 at 9:59?AM Michael Chirico via R-devel <r-devel at r-project.org> wrote:
>     >>>
>     >>> I forwarded that along to the original reporter with positive feedback
>     >>> -- including the argument names is definitely a big help for cuing
>     >>> what exactly is missing.
>     >>>
>     >>> Would a patch to do something similar for S4 be useful?
>     >>>
>     >>> On Thu, Aug 10, 2023 at 6:46?AM Hadley Wickham <h.wickham at gmail.com> wrote:
>     >>> >
>     >>> > Hi Michael,
>     >>> >
>     >>> > I can't help with S4, but I can help to make sure this isn't a problem
>     >>> > with S7. What do you think of the current error message? Do you see
>     >>> > anything obvious we could do to improve?
>     >>> >
>     >>> > library(S7)
>     >>> >
>     >>> > dbGetQuery <- new_generic("dbGetQuery", c("conn", "statement"))
>     >>> > dbGetQuery(connection = NULL, query = NULL)
>     >>> > #> Error: Can't find method for generic `dbGetQuery(conn, statement)`:
>     >>> > #> - conn     : MISSING
>     >>> > #> - statement: MISSING
>     >>> >
>     >>> > Hadley
>     >>> >
>     >>> > On Wed, Aug 9, 2023 at 10:02?PM Michael Chirico via R-devel
>     >>> > <r-devel at r-project.org> wrote:
>     >>> > >
>     >>> > > I fielded a debugging request from a non-expert user today. At root
>     >>> > > was running the following:
>     >>> > >
>     >>> > > dbGetQuery(connection = conn, query = query)
>     >>> > >
>     >>> > > The problem is that they've named the arguments incorrectly -- it
>     >>> > > should have been [1]:
>     >>> > >
>     >>> > > dbGetQuery(conn = conn, statement = query)
>     >>> > >
>     >>> > > The problem is that the error message "looks" highly confusing to the
>     >>> > > untrained eye:
>     >>> > >
>     >>> > > Error in (function (classes, fdef, mtable)  :   unable to find an
>     >>> > > inherited method for function ?dbGetQuery? for signature ?"missing",
>     >>> > > "missing"?
>     >>> > >
>     >>> > > In retrospect, of course, this makes sense -- the mis-named arguments
>     >>> > > are getting picked up by '...', leaving the required arguments
>     >>> > > missing.
>     >>> > >
>     >>> > > But I was left wondering how we could help users right their own ship here.
>     >>> > >
>     >>> > > Would it help to mention the argument names? To include some code
>     >>> > > checking for weird combinations of missing arguments? Any other
>     >>> > > suggestions?
>     >>> > >
>     >>> > > Mike C
>     >>> > >
>     >>> > > [1] https://github.com/r-dbi/DBI/blob/97934c885749dd87a6beb10e8ccb6a5ebea3675e/R/dbGetQuery.R#L62-L64


From @ndy@teucher @end|ng |rom gm@||@com  Sat Aug 12 01:07:36 2023
From: @ndy@teucher @end|ng |rom gm@||@com (Andy Teucher)
Date: Fri, 11 Aug 2023 16:07:36 -0700
Subject: [Rd] R 4.3: Change in behaviour of as.character.POSIXt for datetime
 values with midnight time
Message-ID: <FD698A33-CC16-4B95-8907-4C0052E58913@gmail.com>

I understand that `as.character.POSIXt()` had an overhaul in R 4.3 (https://github.com/wch/r-source/commit/f6fd993f8a2f799a56dbecbd8238f155191fc31b), and I have come across a new behaviour and I wonder if it is unintended?

When calling `as.character.POSIXt()` on a vector that contains elements where the time component is midnight (00:00:00), it drops the time component of that element in the resulting character vector. Previously the time component was retained: 

In R 4.2.3:

```
R.version$version.string
#> [1] "R version 4.2.3 (2023-03-15)"

(t <- as.POSIXct(c("1975-01-01 00:00:00", "1975-01-01 15:27:00")))
#> [1] "1975-01-01 00:00:00 PST" "1975-01-01 15:27:00 PST?

(tc <- as.character(t))
#> [1] "1975-01-01 00:00:00" "1975-01-01 15:27:00?
```

In R 4.3.1:

```
R.version$version.string
#> [1] "R version 4.3.1 (2023-06-16)"

(t <- as.POSIXct(c("1975-01-01 00:00:00", "1975-01-01 15:27:00")))
#> [1] "1975-01-01 00:00:00 PST" "1975-01-01 15:27:00 PST?

(tc <- as.character(t))
#> [1] "1975-01-01" "1975-01-01 15:27:00?
```

This has consequences when round-tripping from POSIXt -> character -> POSIXt, since `as.POSIXct.character()` drops the time component from the entire vector if any element does not have a time component:

In R 4.2.3:

```
R.version$version.string
#> [1] "R version 4.2.3 (2023-03-15)"

(t <- as.POSIXct(c("1975-01-01 00:00:00", "1975-01-01 15:27:00")))
#> [1] "1975-01-01 00:00:00 PST" "1975-01-01 15:27:00 PST?

(tc <- as.character(t))
#> [1] "1975-01-01 00:00:00" "1975-01-01 15:27:00?

as.POSIXct(tc)
#> [1] "1975-01-01 00:00:00 PST" "1975-01-01 15:27:00 PST?
```

In R 4.3.1:

```
R.version$version.string
#> [1] "R version 4.3.1 (2023-06-16)?

(t <- as.POSIXct(c("1975-01-01 00:00:00", "1975-01-01 15:27:00")))
#> [1] "1975-01-01 00:00:00 PST" "1975-01-01 15:27:00 PST?

(tc <- as.character(t))
#> [1] "1975-01-01" "1975-01-01 15:27:00?

as.POSIXct(tc)
#> [1] "1975-01-01 PST" "1975-01-01 PST?
```

`format.POSIXt()` retains its old behaviour in R 4.3:

```
R.version$version.string
#> [1] "R version 4.2.3 (2023-03-15)"

(t <- as.POSIXct(c("1975-01-01 00:00:00", "1975-01-01 15:27:00")))
#> [1] "1975-01-01 00:00:00 PST" "1975-01-01 15:27:00 PST?

(tf <- format(t))
#> [1] "1975-01-01 00:00:00" "1975-01-01 15:27:00?

as.POSIXct(tf)
#> [1] "1975-01-01 00:00:00 PST" "1975-01-01 15:27:00 PST?
```

```
R.version$version.string
#> [1] "R version 4.3.1 (2023-06-16)"

(t <- as.POSIXct(c("1975-01-01 00:00:00", "1975-01-01 15:27:00")))
#> [1] "1975-01-01 00:00:00 PST" "1975-01-01 15:27:00 PST?

(tf <- format(t))
#> [1] "1975-01-01 00:00:00" "1975-01-01 15:27:00?

as.POSIXct(tf)
#> [1] "1975-01-01 00:00:00 PST" "1975-01-01 15:27:00 PST?
```

And finally, the behaviour of `as.POSIXct.character()` has not changed (it previously did, and still does, drop the time component from all elements when any element has no time):

```R.version$version.string
#> [1] "R version 4.2.3 (2023-03-15)"

as.POSIXct(c("1975-01-01", "1975-01-01 15:27:00"))
#> [1] "1975-01-01 PST" "1975-01-01 PST?
```

```R.version$version.string
#> [1] "R version 4.3.1 (2023-06-16)"

as.POSIXct(c("1975-01-01", "1975-01-01 15:27:00"))
#> [1] "1975-01-01 PST" "1975-01-01 PST?
```

I don?t know if this is a bug/regression in `as.character.POSIXt()`, or intended behaviour. If it is intended, I think it would benefit from some more comprehensive documentation.

Thanks very much,
Andy Teucher


From x|e @end|ng |rom y|hu|@n@me  Sat Aug 12 06:40:22 2023
From: x|e @end|ng |rom y|hu|@n@me (Yihui Xie)
Date: Fri, 11 Aug 2023 23:40:22 -0500
Subject: [Rd] 
 R-4.3 version list.files function could not work correctly in
 chinese
In-Reply-To: <20230811142435.770c2037@parabola>
References: <16b91252fd33452f890fcce439921a63@goldwind.com>
 <20230811142435.770c2037@parabola>
Message-ID: <CANROs4ePK4YW_YoEg4erpTQYKPNKGOoQvBJv6ZW8OtHSvCOOMA@mail.gmail.com>

Yes, I participated in the discussion. Basically dir() failed to list all
files since R 4.3.0 when filenames start with Chinese characters. I don't
have a Windows machine to test it, but this might be a minimal reproducible
example:

file.create("????.R")
dir()

The OP said dir() would return "????.R" in R.4.2.2 but not in R 4.3.0. In
the same discussion another person mentioned that the problem could also be
related to the file encoding, i.e., if the file content is encoded in
UTF-8, it could be recognized by dir(), but not in ANSI.

Regards,
Yihui
--
https://yihui.org


On Fri, Aug 11, 2023 at 6:25?AM Ivan Krylov <krylov.r00t at gmail.com> wrote:

> Dear ???,
>
> Thank you for your message, but please follow the posting guide in your
> future messages: https://www.r-project.org/posting-guide.html
> https://www.r-project.org/bugs.html
>
> I understand from your link that list.files() ends up skipping some
> Chinese filenames in R-4.3.1 (but not R-4.2.2) on Windows, but would you
> (or perhaps Yihui Xie who I see is also participating in the discussion)
> mind translating the rest of your findings into English? Have you been
> able to narrow down the problem to certain character ranges, for
> example?
>
> --
> Best regards,
> Ivan
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>

	[[alternative HTML version deleted]]


From kry|ov@r00t @end|ng |rom gm@||@com  Sat Aug 12 17:33:15 2023
From: kry|ov@r00t @end|ng |rom gm@||@com (Ivan Krylov)
Date: Sat, 12 Aug 2023 18:33:15 +0300
Subject: [Rd] 
 R-4.3 version list.files function could not work correctly in
 chinese
In-Reply-To: <CANROs4ePK4YW_YoEg4erpTQYKPNKGOoQvBJv6ZW8OtHSvCOOMA@mail.gmail.com>
References: <16b91252fd33452f890fcce439921a63@goldwind.com>
 <20230811142435.770c2037@parabola>
 <CANROs4ePK4YW_YoEg4erpTQYKPNKGOoQvBJv6ZW8OtHSvCOOMA@mail.gmail.com>
Message-ID: <20230812183315.4214987e@parabola>

Dear Yihui,

Thanks a lot for your help!

Unfortunately, I was not able to reproduce this. I've tried creating
files with Chinese characters in their names and populating them
with valid UTF-8 and valid non-UTF-8 text, but R seems to be able to
list them all in my case.

I'm running a US English evaluation ISO image of a slightly newer build
of Windows 10, and I also compiled R-4.3.1 from source, anticipating
having to single-step through the list.files() implementation:

sessionInfo()
# R version 4.3.1 (2023-06-16 ucrt)
# Platform: x86_64-w64-mingw32/x64 (64-bit)
# Running under: Windows 10 x64 (build 19045)
# 
# Matrix products: default
# 
# 
# locale:
# [1] LC_COLLATE=English_United States.utf8  LC_CTYPE=English_United
# States.utf8
# [3] LC_MONETARY=English_United States.utf8 LC_NUMERIC=C
# [5] LC_TIME=English_United States.utf8
# 
# time zone: America/Los_Angeles
# tzcode source: internal
# 
# attached base packages:
# [1] stats     graphics  grDevices utils     datasets  methods   base
#
# loaded via a namespace (and not attached):
# [1] compiler_4.3.1
dir("????")
# [1] "????-non-utf8-?????.txt" "????-utf-8.txt"         
system('cmd /c dir /s *.txt')
#  Volume in drive C has no label.
#  Volume Serial Number is A85A-AA74
# 
#  Directory of C:\R\R-4.3.1\bin\x64\????
# 
# 08/12/2023  07:57 AM                22 ????-non-utf8-?????.txt
# 08/12/2023  07:56 AM                18 ????-utf-8.txt
#                2 File(s)             40 bytes
# 
#      Total Files Listed:
#                2 File(s)             40 bytes
#                0 Dir(s)  29,538,418,688 bytes free
# [1] 0

(The OEM codepage cannot represent the characters I used in the file
names, but all the files are present in both lists.)

In order to find out what's wrong, it will be needed to download the R
source code and compile it [*], install gdb using pacman (part of
Rtools), then set a breakpoint on the list_files function from
src/main/platform.c and step through it [**], paying attention to the
R_readdir calls. Do the missing file names not even come out from
FindNextFile()? Are they somehow skipped around the time of regex match?

(I could help with the details of this, maybe off-list, if there's
interest.)

Unless Tomas Kalibera is able to deduce the root cause from the
observed symptoms, someone who can reproduce the problem will have to
investigate further.

-- 
Best regards,
Ivan

[*] https://cran.r-project.org/bin/windows/base/howto-R-devel.html

[**] https://beej.us/guide/bggdb/


From yugong @end|ng |rom out|ook@com  Sun Aug 13 05:14:58 2023
From: yugong @end|ng |rom out|ook@com (yu gong)
Date: Sun, 13 Aug 2023 03:14:58 +0000
Subject: [Rd] a quick and dirty way to compile R on win arm64 using
 clangarm64
Message-ID: <TYAP286MB0268284F530FE6EAC42EC1A4D116A@TYAP286MB0268.JPNP286.PROD.OUTLOOK.COM>

hello everyone:
  On this boring weekend, I tried compile R-trunk on windows 11 arm64 using clangarm64+msys2 on macbook m1 ,  it surprisingly easy to compiled and run.
more investigation and test and code modify need to be done ,but IMO this is a good beginning !!

to compile R on windows 11 arm64 just need :
1 svn checkout R-trunk and add USE_LLVM=YES in MKRules.dist or  Mkrules.local
2 install msys2 and clangarm64 package
 mingw-w64-clang-aarch64-brotli 1.0.9-6
 mingw-w64-clang-aarch64-bzip2 1.0.8-2
 mingw-w64-clang-aarch64-c-ares 1.19.1-1
 mingw-w64-clang-aarch64-ca-certificates 20230311-1
mingw-w64-clang-aarch64-clang 16.0.5-3
mingw-w64-clang-aarch64-compiler-rt 16.0.5-3
mingw-w64-clang-aarch64-crt-git 11.0.0.r107.gd367cc9d7-1
mingw-w64-clang-aarch64-curl 8.2.1-1
mingw-w64-clang-aarch64-expat 2.5.0-1
mingw-w64-clang-aarch64-flang 16.0.5-1
mingw-w64-clang-aarch64-gettext 0.21.1-2
mingw-w64-clang-aarch64-giflib 5.2.1-3
mingw-w64-clang-aarch64-gmp 6.3.0-1
mingw-w64-clang-aarch64-gnutls 3.8.0-1
mingw-w64-clang-aarch64-headers-git 11.0.0.r107.gd367cc9d7-1
mingw-w64-clang-aarch64-icu 73.2-1
mingw-w64-clang-aarch64-jbigkit 2.1-4
mingw-w64-clang-aarch64-lerc 4.0.0-1
mingw-w64-clang-aarch64-libc++ 16.0.5-1
mingw-w64-clang-aarch64-libdeflate 1.18-1
mingw-w64-clang-aarch64-libffi 3.4.4-1
mingw-w64-clang-aarch64-libgcrypt 1.10.2-1
mingw-w64-clang-aarch64-libgpg-error 1.47-2
mingw-w64-clang-aarch64-libiconv 1.17-3
mingw-w64-clang-aarch64-libidn2 2.3.4-1
mingw-w64-clang-aarch64-libjpeg-turbo 3.0.0-1
mingw-w64-clang-aarch64-libpng 1.6.40-1
mingw-w64-clang-aarch64-libpsl 0.21.2-4
mingw-w64-clang-aarch64-libssh2 1.11.0-1
mingw-w64-clang-aarch64-libtasn1 4.19.0-1
mingw-w64-clang-aarch64-libtiff 4.5.1-2
mingw-w64-clang-aarch64-libunistring 1.1-1
mingw-w64-clang-aarch64-libunwind 16.0.5-1
mingw-w64-clang-aarch64-libwebp 1.3.1-1
mingw-w64-clang-aarch64-libwinpthread-git 11.0.0.r107.gd367cc9d7-1
mingw-w64-clang-aarch64-libxml2 2.11.4-2
mingw-w64-clang-aarch64-lld 16.0.5-3
mingw-w64-clang-aarch64-llvm 16.0.5-3
mingw-w64-clang-aarch64-llvm-libs 16.0.5-3
mingw-w64-clang-aarch64-make 4.4-2
mingw-w64-clang-aarch64-mlir 16.0.5-1
mingw-w64-clang-aarch64-nettle 3.9.1-1
mingw-w64-clang-aarch64-nghttp2 1.55.1-1
mingw-w64-clang-aarch64-openblas 0.3.23-1
mingw-w64-clang-aarch64-openmp 16.0.5-1
mingw-w64-clang-aarch64-openssl 3.1.2-1
mingw-w64-clang-aarch64-p11-kit 0.25.0-1
mingw-w64-clang-aarch64-pcre2 10.42-1
mingw-w64-clang-aarch64-readline 8.2.001-6
mingw-w64-clang-aarch64-rtmpdump 2.4.r99.f1b83c1-1
mingw-w64-clang-aarch64-tcl 8.6.12-2
mingw-w64-clang-aarch64-termcap 1.3.1-6
mingw-w64-clang-aarch64-tk 8.6.12-2
mingw-w64-clang-aarch64-wineditline 2.206-1
mingw-w64-clang-aarch64-winpthreads-git 11.0.0.r107.gd367cc9d7-1
mingw-w64-clang-aarch64-xz 5.4.4-1
mingw-w64-clang-aarch64-zlib 1.2.13-3
mingw-w64-clang-aarch64-zstd 1.5.5-1

3 cd r/src/gnuwin32
  make

In next week,  will try more mod for win11 arm64

Yu Gong


	[[alternative HTML version deleted]]


From yugong @end|ng |rom out|ook@com  Sun Aug 13 05:26:30 2023
From: yugong @end|ng |rom out|ook@com (yu gong)
Date: Sun, 13 Aug 2023 03:26:30 +0000
Subject: [Rd] a quick and dirty way to compile R on win arm64 using
 clangarm64
In-Reply-To: <TYAP286MB0268284F530FE6EAC42EC1A4D116A@TYAP286MB0268.JPNP286.PROD.OUTLOOK.COM>
References: <TYAP286MB0268284F530FE6EAC42EC1A4D116A@TYAP286MB0268.JPNP286.PROD.OUTLOOK.COM>
Message-ID: <TYAP286MB026875483CA0C60D46FA92E4D116A@TYAP286MB0268.JPNP286.PROD.OUTLOOK.COM>

sorry forgot dynamic link  ICU
1 svn checkout R-trunk and add USE_LLVM=YES and ICU_LIBS ?= -licuin -licuuc -licudt -lstdc++  in MKRules.dist or  Mkrules.local
________________________________
From: R-devel <r-devel-bounces at r-project.org> on behalf of yu gong <yugong at outlook.com>
Sent: Sunday, August 13, 2023 11:14
To: r-devel at r-project.org <r-devel at r-project.org>
Subject: [Rd] a quick and dirty way to compile R on win arm64 using clangarm64

hello everyone:
  On this boring weekend, I tried compile R-trunk on windows 11 arm64 using clangarm64+msys2 on macbook m1 ,  it surprisingly easy to compiled and run.
more investigation and test and code modify need to be done ,but IMO this is a good beginning !!

to compile R on windows 11 arm64 just need :
1 svn checkout R-trunk and add USE_LLVM=YES in MKRules.dist or  Mkrules.local
2 install msys2 and clangarm64 package
 mingw-w64-clang-aarch64-brotli 1.0.9-6
 mingw-w64-clang-aarch64-bzip2 1.0.8-2
 mingw-w64-clang-aarch64-c-ares 1.19.1-1
 mingw-w64-clang-aarch64-ca-certificates 20230311-1
mingw-w64-clang-aarch64-clang 16.0.5-3
mingw-w64-clang-aarch64-compiler-rt 16.0.5-3
mingw-w64-clang-aarch64-crt-git 11.0.0.r107.gd367cc9d7-1
mingw-w64-clang-aarch64-curl 8.2.1-1
mingw-w64-clang-aarch64-expat 2.5.0-1
mingw-w64-clang-aarch64-flang 16.0.5-1
mingw-w64-clang-aarch64-gettext 0.21.1-2
mingw-w64-clang-aarch64-giflib 5.2.1-3
mingw-w64-clang-aarch64-gmp 6.3.0-1
mingw-w64-clang-aarch64-gnutls 3.8.0-1
mingw-w64-clang-aarch64-headers-git 11.0.0.r107.gd367cc9d7-1
mingw-w64-clang-aarch64-icu 73.2-1
mingw-w64-clang-aarch64-jbigkit 2.1-4
mingw-w64-clang-aarch64-lerc 4.0.0-1
mingw-w64-clang-aarch64-libc++ 16.0.5-1
mingw-w64-clang-aarch64-libdeflate 1.18-1
mingw-w64-clang-aarch64-libffi 3.4.4-1
mingw-w64-clang-aarch64-libgcrypt 1.10.2-1
mingw-w64-clang-aarch64-libgpg-error 1.47-2
mingw-w64-clang-aarch64-libiconv 1.17-3
mingw-w64-clang-aarch64-libidn2 2.3.4-1
mingw-w64-clang-aarch64-libjpeg-turbo 3.0.0-1
mingw-w64-clang-aarch64-libpng 1.6.40-1
mingw-w64-clang-aarch64-libpsl 0.21.2-4
mingw-w64-clang-aarch64-libssh2 1.11.0-1
mingw-w64-clang-aarch64-libtasn1 4.19.0-1
mingw-w64-clang-aarch64-libtiff 4.5.1-2
mingw-w64-clang-aarch64-libunistring 1.1-1
mingw-w64-clang-aarch64-libunwind 16.0.5-1
mingw-w64-clang-aarch64-libwebp 1.3.1-1
mingw-w64-clang-aarch64-libwinpthread-git 11.0.0.r107.gd367cc9d7-1
mingw-w64-clang-aarch64-libxml2 2.11.4-2
mingw-w64-clang-aarch64-lld 16.0.5-3
mingw-w64-clang-aarch64-llvm 16.0.5-3
mingw-w64-clang-aarch64-llvm-libs 16.0.5-3
mingw-w64-clang-aarch64-make 4.4-2
mingw-w64-clang-aarch64-mlir 16.0.5-1
mingw-w64-clang-aarch64-nettle 3.9.1-1
mingw-w64-clang-aarch64-nghttp2 1.55.1-1
mingw-w64-clang-aarch64-openblas 0.3.23-1
mingw-w64-clang-aarch64-openmp 16.0.5-1
mingw-w64-clang-aarch64-openssl 3.1.2-1
mingw-w64-clang-aarch64-p11-kit 0.25.0-1
mingw-w64-clang-aarch64-pcre2 10.42-1
mingw-w64-clang-aarch64-readline 8.2.001-6
mingw-w64-clang-aarch64-rtmpdump 2.4.r99.f1b83c1-1
mingw-w64-clang-aarch64-tcl 8.6.12-2
mingw-w64-clang-aarch64-termcap 1.3.1-6
mingw-w64-clang-aarch64-tk 8.6.12-2
mingw-w64-clang-aarch64-wineditline 2.206-1
mingw-w64-clang-aarch64-winpthreads-git 11.0.0.r107.gd367cc9d7-1
mingw-w64-clang-aarch64-xz 5.4.4-1
mingw-w64-clang-aarch64-zlib 1.2.13-3
mingw-w64-clang-aarch64-zstd 1.5.5-1

3 cd r/src/gnuwin32
  make

In next week,  will try more mod for win11 arm64

Yu Gong


        [[alternative HTML version deleted]]

______________________________________________
R-devel at r-project.org mailing list
https://stat.ethz.ch/mailman/listinfo/r-devel

	[[alternative HTML version deleted]]


From kry|ov@r00t @end|ng |rom gm@||@com  Sun Aug 13 09:58:47 2023
From: kry|ov@r00t @end|ng |rom gm@||@com (Ivan Krylov)
Date: Sun, 13 Aug 2023 10:58:47 +0300
Subject: [Rd] 
 R-4.3 version list.files function could not work correctly in
 chinese
In-Reply-To: <72b017336ae143e1b0755b312b95c8f2@goldwind.com>
References: <16b91252fd33452f890fcce439921a63@goldwind.com>
 <20230811142435.770c2037@parabola>
 <CANROs4ePK4YW_YoEg4erpTQYKPNKGOoQvBJv6ZW8OtHSvCOOMA@mail.gmail.com>
 <20230812183315.4214987e@parabola>
 <72b017336ae143e1b0755b312b95c8f2@goldwind.com>
Message-ID: <20230813105847.5c93e35c@parabola>

Dear ???,

I believe you that there's a problem with list.files() and file names
in Chinese. There is no need for additional proof. Unfortunately, it's
impossible to fix the problem unless its source is found:
https://www.chiark.greenend.org.uk/~sgtatham/bugs-cn.html

Can you give me more examples of file names, _as text_, that I could
_copy and paste_ into my computer in order to (hopefully) reproduce the
problem here?

Alternatively, can you use a debugger for programs written in C? Do you
know someone who does?

-- 
Best regards,
Ivan


From yugong @end|ng |rom out|ook@com  Sun Aug 13 11:28:19 2023
From: yugong @end|ng |rom out|ook@com (yu gong)
Date: Sun, 13 Aug 2023 09:28:19 +0000
Subject: [Rd] 
 R-4.3 version list.files function could not work correctly in
 chinese
In-Reply-To: <CANROs4ePK4YW_YoEg4erpTQYKPNKGOoQvBJv6ZW8OtHSvCOOMA@mail.gmail.com>
References: <16b91252fd33452f890fcce439921a63@goldwind.com>
 <20230811142435.770c2037@parabola>
 <CANROs4ePK4YW_YoEg4erpTQYKPNKGOoQvBJv6ZW8OtHSvCOOMA@mail.gmail.com>
Message-ID: <TYAP286MB0268632D5A9C631427F53462D116A@TYAP286MB0268.JPNP286.PROD.OUTLOOK.COM>

I am afraid this issue a bite more complicated.
Test Rgui and Rterm 4.3.1 and svn trunk on Windows 10 x64 (build 19044) , Chinese file name shows correctly (file content ANSI or UTF-8 ).
I saw OP picture (using Rstudio), maybe this is Rstudio issues?





________________________________
From: R-devel <r-devel-bounces at r-project.org> on behalf of Yihui Xie <xie at yihui.name>
Sent: Saturday, August 12, 2023 12:40
To: Ivan Krylov <krylov.r00t at gmail.com>
Cc: r-devel at r-project.org <r-devel at r-project.org>; ??? <yeyueguang at goldwind.com>
Subject: Re: [Rd] R-4.3 version list.files function could not work correctly in chinese

Yes, I participated in the discussion. Basically dir() failed to list all
files since R 4.3.0 when filenames start with Chinese characters. I don't
have a Windows machine to test it, but this might be a minimal reproducible
example:

file.create("????.R")
dir()

The OP said dir() would return "????.R" in R.4.2.2 but not in R 4.3.0. In
the same discussion another person mentioned that the problem could also be
related to the file encoding, i.e., if the file content is encoded in
UTF-8, it could be recognized by dir(), but not in ANSI.

Regards,
Yihui
--
https://yihui.org


On Fri, Aug 11, 2023 at 6:25?AM Ivan Krylov <krylov.r00t at gmail.com> wrote:

> Dear ???,
>
> Thank you for your message, but please follow the posting guide in your
> future messages: https://www.r-project.org/posting-guide.html
> https://www.r-project.org/bugs.html
>
> I understand from your link that list.files() ends up skipping some
> Chinese filenames in R-4.3.1 (but not R-4.2.2) on Windows, but would you
> (or perhaps Yihui Xie who I see is also participating in the discussion)
> mind translating the rest of your findings into English? Have you been
> able to narrow down the problem to certain character ranges, for
> example?
>
> --
> Best regards,
> Ivan
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>

        [[alternative HTML version deleted]]

______________________________________________
R-devel at r-project.org mailing list
https://stat.ethz.ch/mailman/listinfo/r-devel

	[[alternative HTML version deleted]]


From yugong @end|ng |rom out|ook@com  Sun Aug 13 11:36:21 2023
From: yugong @end|ng |rom out|ook@com (yu gong)
Date: Sun, 13 Aug 2023 09:36:21 +0000
Subject: [Rd] 
 R-4.3 version list.files function could not work correctly in
 chinese
In-Reply-To: <16b91252fd33452f890fcce439921a63@goldwind.com>
References: <16b91252fd33452f890fcce439921a63@goldwind.com>
Message-ID: <TYAP286MB026897095C1DCE796D8884BDD116A@TYAP286MB0268.JPNP286.PROD.OUTLOOK.COM>

Could you test it on RGui and Rterm first, see it work or not. then try RStudio?

________________________________
From: R-devel <r-devel-bounces at r-project.org> on behalf of ??? <yeyueguang at goldwind.com>
Sent: Friday, August 11, 2023 11:41
To: r-devel at r-project.org <r-devel at r-project.org>
Subject: [Rd] R-4.3 version list.files function could not work correctly in chinese

     ????
          ????R-4.3???????????R??????list.files??????????????????????BUG????????????????????????????
r4.3????dir????????????????? - COS??? | ?????? | ?????????????? (cosx.org)<https://d.cosx.org/d/424356-r43ban-ben-zhong-dirhan-shu-huo-qu-bu-liao-quan-bu-wen-jian/11>
          ???????????????????????

        [[alternative HTML version deleted]]


	[[alternative HTML version deleted]]


From kry|ov@r00t @end|ng |rom gm@||@com  Sun Aug 13 13:16:36 2023
From: kry|ov@r00t @end|ng |rom gm@||@com (Ivan Krylov)
Date: Sun, 13 Aug 2023 14:16:36 +0300
Subject: [Rd] 
 R-4.3 version list.files function could not work correctly in
 chinese
In-Reply-To: <16b91252fd33452f890fcce439921a63@goldwind.com>
References: <16b91252fd33452f890fcce439921a63@goldwind.com>
Message-ID: <20230813141636.3fcdae02@parabola>

Found it! Looks like a buffer length problem. This isn't limited to
Chinese, just more likely to happen when a character takes three bytes
to represent in UTF-8. (Any filename containing characters which take
more than one byte to represent in UTF-8 may fail.)

If a directory contains a file with a sufficiently long name,
FindNextFile() fails with ERROR_MORE_DATA (0xEA, 234), making
R_readdir() return NULL, stopping list_files() prematurely:

# everything seems to work fine...

list.files("????")
# [1] "????-non-utf8-?????
????????????????????????????????????????????????????.txt"
# [2] "????-non-utf8-?????.txt"
# [3] "????-utf-8.txt"

# now create a file with an even longer name

list.files("????")
# [1] "????-non-utf8-?????
????????????????????????????????????????????????????.txt"

# the files are still there, but not visible to list.files():

system("cmd /c dir /s *.txt")
#  Volume in drive C has no label.
#  Volume Serial Number is A85A-AA74
#
#  Directory of C:\R\R-4.3.1\bin\x64\????
#
# 08/12/2023  07:57 AM                22 ????-non-utf8-?????
????????????????????????????????????????????????????.txt
# 08/12/2023 07:57 AM                22 ????-non-utf8-?????
????????????????????????????????????????????????????????????????????????????????????????????????????????.txt
# 08/12/2023  07:57 AM                22 ????-non-utf8-?????.txt
# 08/12/2023  07:56 AM                18 ????-utf-8.txt
# 4 File(s)             84 bytes
# 
#       Total Files Listed:
#                4 File(s)             84 bytes
#                0 Dir(s)  29,281,538,048 bytes free
# [1] 0

Increasing the path length limits [*] doesn't help, since it's the
filename length limit that we're bumping against. While both
WIN32_FIND_DATAA and WIN32_FIND_DATAW contain fixed-size buffers, a
valid filename may take more than MAX_PATH bytes to represent in UTF-8
while still being under the limit of MAX_PATH wide characters. This may
mean having to rewrite list_files in terms of R_wopendir()/R_wreaddir()
for Windows. As a workaround, we may use the short filename (which
sometimes may not exist, alas) when FindNextFile() fails with
ERROR_MORE_DATA.

-- 
Best regards,
Ivan

[*]
https://learn.microsoft.com/en-us/windows/win32/fileio/maximum-file-path-limitation


From yeyuegu@ng @end|ng |rom go|dw|nd@com  Sun Aug 13 07:39:39 2023
From: yeyuegu@ng @end|ng |rom go|dw|nd@com (=?utf-8?B?5Y+25pyI5YWJ?=)
Date: Sun, 13 Aug 2023 05:39:39 +0000
Subject: [Rd] =?utf-8?b?562U5aSNOiAgUi00LjMgdmVyc2lvbiBsaXN0LmZpbGVzIGZ1?=
 =?utf-8?q?nction_could_not_work_correctly_in_chinese?=
In-Reply-To: <20230812183315.4214987e@parabola>
References: <16b91252fd33452f890fcce439921a63@goldwind.com>
 <20230811142435.770c2037@parabola>
 <CANROs4ePK4YW_YoEg4erpTQYKPNKGOoQvBJv6ZW8OtHSvCOOMA@mail.gmail.com>
 <20230812183315.4214987e@parabola>
Message-ID: <72b017336ae143e1b0755b312b95c8f2@goldwind.com>

     list.files function is notcorrect?


 

-----????-----
???: Ivan Krylov [mailto:krylov.r00t at gmail.com] 
????: 2023?8?12? 23:33
???: Yihui Xie <xie at yihui.name>
??: ??? <yeyueguang at goldwind.com>; r-devel at r-project.org
??: Re: [Rd] R-4.3 version list.files function could not work correctly in chinese

Dear Yihui,

Thanks a lot for your help!

Unfortunately, I was not able to reproduce this. I've tried creating files with Chinese characters in their names and populating them with valid UTF-8 and valid non-UTF-8 text, but R seems to be able to list them all in my case.

I'm running a US English evaluation ISO image of a slightly newer build of Windows 10, and I also compiled R-4.3.1 from source, anticipating having to single-step through the list.files() implementation:

sessionInfo()
# R version 4.3.1 (2023-06-16 ucrt)
# Platform: x86_64-w64-mingw32/x64 (64-bit) # Running under: Windows 10 x64 (build 19045) # # Matrix products: default # # # locale:
# [1] LC_COLLATE=English_United States.utf8  LC_CTYPE=English_United # States.utf8 # [3] LC_MONETARY=English_United States.utf8 LC_NUMERIC=C # [5] LC_TIME=English_United States.utf8 # # time zone: America/Los_Angeles # tzcode source: internal # # attached base packages:
# [1] stats     graphics  grDevices utils     datasets  methods   base
#
# loaded via a namespace (and not attached):
# [1] compiler_4.3.1
dir("????")
# [1] "????-non-utf8-?????.txt" "????-utf-8.txt"
system('cmd /c dir /s *.txt')
#  Volume in drive C has no label.
#  Volume Serial Number is A85A-AA74
#
#  Directory of C:\R\R-4.3.1\bin\x64\????
#
# 08/12/2023  07:57 AM                22 ????-non-utf8-?????.txt
# 08/12/2023  07:56 AM                18 ????-utf-8.txt
#                2 File(s)             40 bytes
#
#      Total Files Listed:
#                2 File(s)             40 bytes
#                0 Dir(s)  29,538,418,688 bytes free
# [1] 0

(The OEM codepage cannot represent the characters I used in the file names, but all the files are present in both lists.)

In order to find out what's wrong, it will be needed to download the R source code and compile it [*], install gdb using pacman (part of Rtools), then set a breakpoint on the list_files function from src/main/platform.c and step through it [**], paying attention to the R_readdir calls. Do the missing file names not even come out from FindNextFile()? Are they somehow skipped around the time of regex match?

(I could help with the details of this, maybe off-list, if there's
interest.)

Unless Tomas Kalibera is able to deduce the root cause from the observed symptoms, someone who can reproduce the problem will have to investigate further.

--
Best regards,
Ivan

[*] https://cran.r-project.org/bin/windows/base/howto-R-devel.html

[**] https://beej.us/guide/bggdb/
??????????????
?????????????????????????????????????????????????????????????????
?????????????????? ITSecurity at goldwind.com?

???????????????
Email system security tips?
The use of emails to collect personal information, account passwords, bank card information, help, subsidies, money transfers, etc. is "phishing email" or "virus email", no response is required, and please delete it immediately.
If you encounter email security issues, please contact ITSecurity at goldwind.com.

-------------- next part --------------
A non-text attachment was scrubbed...
Name: r-sessioninfo.png
Type: image/png
Size: 127929 bytes
Desc: r-sessioninfo.png
URL: <https://stat.ethz.ch/pipermail/r-devel/attachments/20230813/ab7820ad/attachment.png>

-------------- next part --------------
A non-text attachment was scrubbed...
Name: list.files_test.png
Type: image/png
Size: 38952 bytes
Desc: list.files_test.png
URL: <https://stat.ethz.ch/pipermail/r-devel/attachments/20230813/ab7820ad/attachment-0001.png>

-------------- next part --------------
A non-text attachment was scrubbed...
Name: path-files.png
Type: image/png
Size: 29532 bytes
Desc: path-files.png
URL: <https://stat.ethz.ch/pipermail/r-devel/attachments/20230813/ab7820ad/attachment-0002.png>

From tom@@@k@||ber@ @end|ng |rom gm@||@com  Sun Aug 13 22:23:49 2023
From: tom@@@k@||ber@ @end|ng |rom gm@||@com (Tomas Kalibera)
Date: Sun, 13 Aug 2023 22:23:49 +0200
Subject: [Rd] a quick and dirty way to compile R on win arm64 using
 clangarm64
In-Reply-To: <TYAP286MB0268284F530FE6EAC42EC1A4D116A@TYAP286MB0268.JPNP286.PROD.OUTLOOK.COM>
References: <TYAP286MB0268284F530FE6EAC42EC1A4D116A@TYAP286MB0268.JPNP286.PROD.OUTLOOK.COM>
Message-ID: <5c09084c-7b57-8e24-bb86-1a84a2edb7a8@gmail.com>


On 8/13/23 05:14, yu gong wrote:
> hello everyone:
>    On this boring weekend, I tried compile R-trunk on windows 11 arm64 using clangarm64+msys2 on macbook m1 ,  it surprisingly easy to compiled and run.
> more investigation and test and code modify need to be done ,but IMO this is a good beginning !!
>
> to compile R on windows 11 arm64 just need :
> 1 svn checkout R-trunk and add USE_LLVM=YES in MKRules.dist or  Mkrules.local

Well, yes, R-devel builds with clang/flang also for Windows/aarch64. 
I've committed this option (USE_LLVM) last week together with other 
required changes, but it is still work in progress, not documented nor 
well tested.? I have created for this a (subset) of Rtools43 for aarch64 
(available at https://www.r-project.org/nosvn/winutf8/ucrt3/). This goes 
together with efforts of Brian Ripley and CRAN to make CRAN packages 
work with flang.

If you are interested in R on Windows/aarch64, stay tuned. But what I 
have already allows to build R-devel with base and recommended packages 
and to pass check-all, yet still requires some cleanups. R still needs 
to be taught about the new architecture in some places, particularly in 
the package management, now it still thinks it is x64. I've not yet 
gotten to testing any other R packages.

If you were interested in helping out, one thing missing is several 
Rtools43 (MXE) packages that don't yet build with clang for aarch64 
(ping me for details if you are interested).

Best,
Tomas


> 2 install msys2 and clangarm64 package
>   mingw-w64-clang-aarch64-brotli 1.0.9-6
>   mingw-w64-clang-aarch64-bzip2 1.0.8-2
>   mingw-w64-clang-aarch64-c-ares 1.19.1-1
>   mingw-w64-clang-aarch64-ca-certificates 20230311-1
> mingw-w64-clang-aarch64-clang 16.0.5-3
> mingw-w64-clang-aarch64-compiler-rt 16.0.5-3
> mingw-w64-clang-aarch64-crt-git 11.0.0.r107.gd367cc9d7-1
> mingw-w64-clang-aarch64-curl 8.2.1-1
> mingw-w64-clang-aarch64-expat 2.5.0-1
> mingw-w64-clang-aarch64-flang 16.0.5-1
> mingw-w64-clang-aarch64-gettext 0.21.1-2
> mingw-w64-clang-aarch64-giflib 5.2.1-3
> mingw-w64-clang-aarch64-gmp 6.3.0-1
> mingw-w64-clang-aarch64-gnutls 3.8.0-1
> mingw-w64-clang-aarch64-headers-git 11.0.0.r107.gd367cc9d7-1
> mingw-w64-clang-aarch64-icu 73.2-1
> mingw-w64-clang-aarch64-jbigkit 2.1-4
> mingw-w64-clang-aarch64-lerc 4.0.0-1
> mingw-w64-clang-aarch64-libc++ 16.0.5-1
> mingw-w64-clang-aarch64-libdeflate 1.18-1
> mingw-w64-clang-aarch64-libffi 3.4.4-1
> mingw-w64-clang-aarch64-libgcrypt 1.10.2-1
> mingw-w64-clang-aarch64-libgpg-error 1.47-2
> mingw-w64-clang-aarch64-libiconv 1.17-3
> mingw-w64-clang-aarch64-libidn2 2.3.4-1
> mingw-w64-clang-aarch64-libjpeg-turbo 3.0.0-1
> mingw-w64-clang-aarch64-libpng 1.6.40-1
> mingw-w64-clang-aarch64-libpsl 0.21.2-4
> mingw-w64-clang-aarch64-libssh2 1.11.0-1
> mingw-w64-clang-aarch64-libtasn1 4.19.0-1
> mingw-w64-clang-aarch64-libtiff 4.5.1-2
> mingw-w64-clang-aarch64-libunistring 1.1-1
> mingw-w64-clang-aarch64-libunwind 16.0.5-1
> mingw-w64-clang-aarch64-libwebp 1.3.1-1
> mingw-w64-clang-aarch64-libwinpthread-git 11.0.0.r107.gd367cc9d7-1
> mingw-w64-clang-aarch64-libxml2 2.11.4-2
> mingw-w64-clang-aarch64-lld 16.0.5-3
> mingw-w64-clang-aarch64-llvm 16.0.5-3
> mingw-w64-clang-aarch64-llvm-libs 16.0.5-3
> mingw-w64-clang-aarch64-make 4.4-2
> mingw-w64-clang-aarch64-mlir 16.0.5-1
> mingw-w64-clang-aarch64-nettle 3.9.1-1
> mingw-w64-clang-aarch64-nghttp2 1.55.1-1
> mingw-w64-clang-aarch64-openblas 0.3.23-1
> mingw-w64-clang-aarch64-openmp 16.0.5-1
> mingw-w64-clang-aarch64-openssl 3.1.2-1
> mingw-w64-clang-aarch64-p11-kit 0.25.0-1
> mingw-w64-clang-aarch64-pcre2 10.42-1
> mingw-w64-clang-aarch64-readline 8.2.001-6
> mingw-w64-clang-aarch64-rtmpdump 2.4.r99.f1b83c1-1
> mingw-w64-clang-aarch64-tcl 8.6.12-2
> mingw-w64-clang-aarch64-termcap 1.3.1-6
> mingw-w64-clang-aarch64-tk 8.6.12-2
> mingw-w64-clang-aarch64-wineditline 2.206-1
> mingw-w64-clang-aarch64-winpthreads-git 11.0.0.r107.gd367cc9d7-1
> mingw-w64-clang-aarch64-xz 5.4.4-1
> mingw-w64-clang-aarch64-zlib 1.2.13-3
> mingw-w64-clang-aarch64-zstd 1.5.5-1
>
> 3 cd r/src/gnuwin32
>    make
>
> In next week,  will try more mod for win11 arm64
>
> Yu Gong
>
>
> 	[[alternative HTML version deleted]]
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


