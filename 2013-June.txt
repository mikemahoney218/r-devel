From peter.langfelder at gmail.com  Sat Jun  1 01:32:06 2013
From: peter.langfelder at gmail.com (Peter Langfelder)
Date: Fri, 31 May 2013 16:32:06 -0700
Subject: [Rd] Bug in stats::plot.hclust/graphics:::plotHclust/underlying C
 code (C_dend) in R-3.0?
Message-ID: <CA+hbrhW1rfX5f6dYP1dpELBt2PSCmrccd=LPGZKG-D5wxbO5WQ@mail.gmail.com>

Hi all,

it appears that plot.hclust disregards the argument 'cex'. Up until
2.15.1 (and probably all 2.15.x), specifying cex in plot.hclust
changed the size of the plotted labels on each leaf. In 3.0.0 the
character size remains the same irrespective of the cex setting. Since
the help text for plot.hclust does not mention the cex argument, it is
possible that an "undocumentde feature" was simply removed - but it
was very useful when it was available.

The following code illustrates the problem:

data = c(1:20)
dst = dist(data)
tree = hclust(dst, method = "a")
plot(tree, cex = 1)
plot(tree, cex = 0.5)
plot(tree, cex = 0.2)

Under R-2.15 and earlier, the leaf labels would get progressively
smaller; under 3.0.0, the label size remains the same. I tried this
both under Windows

R version 2.15.1 (2012-06-22)
Platform: x86_64-pc-mingw32/x64 (64-bit)

locale:
[1] LC_COLLATE=English_United States.1252
[2] LC_CTYPE=English_United States.1252
[3] LC_MONETARY=English_United States.1252
[4] LC_NUMERIC=C
[5] LC_TIME=English_United States.1252

attached base packages:
[1] stats     graphics  grDevices utils     datasets  methods   base

-------------------------- Session info for R-3.0.0

R version 3.0.0 (2013-04-03)
Platform: x86_64-w64-mingw32/x64 (64-bit)

locale:
[1] LC_COLLATE=English_United States.1252
[2] LC_CTYPE=English_United States.1252
[3] LC_MONETARY=English_United States.1252
[4] LC_NUMERIC=C
[5] LC_TIME=English_United States.1252

attached base packages:
[1] stats     graphics  grDevices utils     datasets  methods   base

and under Linux

R version 3.0.0 Patched (2013-04-24 r62658)
Platform: x86_64-unknown-linux-gnu (64-bit)

locale:
 [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C
 [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8
 [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8
 [7] LC_PAPER=C                 LC_NAME=C
 [9] LC_ADDRESS=C               LC_TELEPHONE=C
[11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C

attached base packages:
[1] stats     graphics  grDevices utils     datasets  methods   base

Looking at the source code of plot.hclust leads to
graphics:::plotHclust which calls .External.graphics, which is where
my ability to read code quickly stops :)

I realize that these are not the most recent releases but I couldn't
find anything mentioning a bug fix for this in the changelog, so I
assume it has not been fixed.

Thanks,

Peter


From maechler at stat.math.ethz.ch  Sat Jun  1 18:48:18 2013
From: maechler at stat.math.ethz.ch (Martin Maechler)
Date: Sat, 1 Jun 2013 18:48:18 +0200
Subject: [Rd] Bug in stats::plot.hclust/graphics:::plotHclust/underlying
 C code (C_dend) in R-3.0?
In-Reply-To: <CA+hbrhW1rfX5f6dYP1dpELBt2PSCmrccd=LPGZKG-D5wxbO5WQ@mail.gmail.com>
References: <CA+hbrhW1rfX5f6dYP1dpELBt2PSCmrccd=LPGZKG-D5wxbO5WQ@mail.gmail.com>
Message-ID: <20906.9682.13030.841908@stat.math.ethz.ch>

>>>>> Peter Langfelder <peter.langfelder at gmail.com>
>>>>>     on Fri, 31 May 2013 16:32:06 -0700 writes:

    > Hi all, it appears that plot.hclust disregards the
    > argument 'cex'. Up until 2.15.1 (and probably all 2.15.x),
    > specifying cex in plot.hclust changed the size of the
    > plotted labels on each leaf. In 3.0.0 the character size
    > remains the same irrespective of the cex setting. Since
    > the help text for plot.hclust does not mention the cex
    > argument, it is possible that an "undocumentde feature"
    > was simply removed - but it was very useful when it was
    > available.

    > The following code illustrates the problem:

>    data = c(1:20)
>    dst = dist(data)
>    tree = hclust(dst, method = "a")
>    plot(tree, cex = 1)
>    plot(tree, cex = 0.5)
>    plot(tree, cex = 0.2)


    > Under R-2.15 and earlier, the leaf labels would get
    > progressively smaller; under 3.0.0, the label size remains
    > the same. I tried this both under Windows

    > R version 2.15.1 (2012-06-22) 

 [............]
    

    > R version 3.0.0 (2013-04-03)

 [............]


    > and under Linux

    > R version 3.0.0 Patched

[...........]

    > Looking at the source code of plot.hclust leads to
    > graphics:::plotHclust which calls .External.graphics,
    > which is where my ability to read code quickly stops :)

    > I realize that these are not the most recent releases but
    > I couldn't find anything mentioning a bug fix for this in
    > the changelog, so I assume it has not been fixed.

You are right.    Duncan Murdoch found the place (in the C code
indeed), and I've found and fixed the small inconsistency that
happened (between 2.15.x  and 3.0.0) when that code was slightly
streamlined and moved to the 'graphics' package.

    > Thanks,
    > Peter

Thank you Peter,  for reporting it in such a precise manner!

Martin Maechler, ETH Zurich


From bhh at xs4all.nl  Mon Jun  3 09:01:25 2013
From: bhh at xs4all.nl (Berend Hasselman)
Date: Mon, 3 Jun 2013 09:01:25 +0200
Subject: [Rd] RFC: a "safe" uniroot() function for future R
In-Reply-To: <20904.24724.932826.199873@stat.math.ethz.ch>
References: <20903.2899.135264.914688@stat.math.ethz.ch>
	<CA+COuteo2iQHZyneAy+x7qsfB7G_Erc2GVXpcSTyxez-FVTuOQ@mail.gmail.com>
	<20903.11965.812306.509672@stat.math.ethz.ch>
	<51A773B3.8080807@gmail.com>
	<20904.24724.932826.199873@stat.math.ethz.ch>
Message-ID: <D0EFA24D-4AD5-4967-9BA8-FC75F3128AED@xs4all.nl>


On 31-05-2013, at 10:34, Martin Maechler <maechler at stat.math.ethz.ch> wrote:

?..
> From the current feedbacks, I'd come to propose / further
> discuss the following issues:
> 
> 1) the goal is to remain with one function uniroot()
> 
> 2) Instead of the 'Sig' = "sign(f'(x_0))" {not quite, but typically}
>   with 4 different value classes, namely
>   NULL, -1, 0, 1,  (where +/- 1  are equivalent to any positive
>   or negative finite number respectively),
> 
>   we should either use a string with 4 different possible values
>   or a {logical or NULL}, say 'upcrossing' 
>   (which also gives 4 values, NULL, NA, FALSE, TRUE).
> 
> 
> 3) [I'm not sure about this:]
>   The new default of the 'Sig' replacement would correspond to
>   the current  Sig = NULL  which does extend the search
>   interval when that does not constitute a sign change.
> 
>   Alternatively, implicitly proposed by Ravi Varadhan, the
>   default would correspond to  Sig = 0, i.e. to the current
>   uniroot() behavior which signals an error as soon as the initial
>   interval is not large enough.
> 
> Further opinions and suggestions for  '2)' and '3)' are still
> very welcome!

I agree with Ravi. Ravi's example shows what can go wrong.
Let the default behaviour of a new uniroot() be the current behaviour.
No harm will be done to any existent applications.

An option would be to append a suggestion to the current error message: "Consider setting argument Sig to non-zero to expand the range of x" or something similar when Sig = 0 and uniroot can't find a solution.

In addition I think that it should be possible to specify an absolute lower and upper limit for x in order to avoid evaluating a function for invalid values of its argument (e.g. log(x) for negative x)
Silly example:

xstart <- c(100,110)
unirootS(f, xstart, Sig=10,trace=2)


Berend


From kamal.fartiyal84 at gmail.com  Tue Jun  4 12:06:42 2013
From: kamal.fartiyal84 at gmail.com (Kamal)
Date: Tue, 4 Jun 2013 12:06:42 +0200
Subject: [Rd] Error during R CMD check
Message-ID: <CACof4rqAOPq6BEcq13ge=bcX5Bv2p1L-p5p-7pkuKTXg=RxZ=w@mail.gmail.com>

An embedded and charset-unspecified text was scrubbed...
Name: not available
URL: <https://stat.ethz.ch/pipermail/r-devel/attachments/20130604/e732ae43/attachment.pl>

From murdoch.duncan at gmail.com  Tue Jun  4 13:49:03 2013
From: murdoch.duncan at gmail.com (Duncan Murdoch)
Date: Tue, 04 Jun 2013 07:49:03 -0400
Subject: [Rd] Error during R CMD check
In-Reply-To: <CACof4rqAOPq6BEcq13ge=bcX5Bv2p1L-p5p-7pkuKTXg=RxZ=w@mail.gmail.com>
References: <CACof4rqAOPq6BEcq13ge=bcX5Bv2p1L-p5p-7pkuKTXg=RxZ=w@mail.gmail.com>
Message-ID: <51ADD42F.2050307@gmail.com>

On 13-06-04 6:06 AM, Kamal wrote:
> Hi All,
>
> I am encountering the following error while performing check on the R
> package we built:
>
> R CMD check  packagename_0.99.0.tar.gz
>
> During startup - Warning message:
> Setting LC_CTYPE failed, using "C"
> * using R Under development (unstable) (2013-05-14 r62742)
> * using platform: x86_64-unknown-linux-gnu (64-bit)
> * using session charset: ASCII
> * checking for file 'packagename/DESCRIPTION' ... OK
> * checking extension type ... Package
> * this is package 'packagename' version '0.99.0'
> * checking package namespace information ... OK
> * checking package dependencies ... OK
> * checking if this is a source package ... OK
> * checking if there is a namespace ... OK
> * checking for executable files ... OK
> * checking for hidden files and directories ... OK
> * checking for portable file names ... OK
> * checking for sufficient/correct file permissions ... OK
> * checking whether package 'packagename' can be installed ... OK
> * checking installed package size ... OK
> * checking package directory ... OK
> * checking *DESCRIPTION meta-information ... ERROR*
> During startup - Warning message:
> Setting LC_CTYPE failed, using "C"
>
> I tried to look for solutions but couldn't find any. Any directions in
> deducing this error would be highly welcome.

You will need to describe your OS and which version of R you are using, 
but it looks as if you have environment variables describing your locale 
(probably LC_CTYPE or LANG) which are not recognized by the C runtime 
library.

Duncan Murdoch


From ripley at stats.ox.ac.uk  Tue Jun  4 13:56:19 2013
From: ripley at stats.ox.ac.uk (Prof Brian Ripley)
Date: Tue, 04 Jun 2013 12:56:19 +0100
Subject: [Rd] Error during R CMD check
In-Reply-To: <CACof4rqAOPq6BEcq13ge=bcX5Bv2p1L-p5p-7pkuKTXg=RxZ=w@mail.gmail.com>
References: <CACof4rqAOPq6BEcq13ge=bcX5Bv2p1L-p5p-7pkuKTXg=RxZ=w@mail.gmail.com>
Message-ID: <51ADD5E3.5090501@stats.ox.ac.uk>

Looks like your locale settings are wrong: see ?Sys.setlocale.

Does the package declare an encoding?  If so, see what 'Writing R 
Extensions' has to say about that.

On 04/06/2013 11:06, Kamal wrote:
> Hi All,
>
> I am encountering the following error while performing check on the R
> package we built:
>
> R CMD check  packagename_0.99.0.tar.gz
>
> During startup - Warning message:
> Setting LC_CTYPE failed, using "C"
> * using R Under development (unstable) (2013-05-14 r62742)
> * using platform: x86_64-unknown-linux-gnu (64-bit)
> * using session charset: ASCII
> * checking for file 'packagename/DESCRIPTION' ... OK
> * checking extension type ... Package
> * this is package 'packagename' version '0.99.0'
> * checking package namespace information ... OK
> * checking package dependencies ... OK
> * checking if this is a source package ... OK
> * checking if there is a namespace ... OK
> * checking for executable files ... OK
> * checking for hidden files and directories ... OK
> * checking for portable file names ... OK
> * checking for sufficient/correct file permissions ... OK
> * checking whether package 'packagename' can be installed ... OK
> * checking installed package size ... OK
> * checking package directory ... OK
> * checking *DESCRIPTION meta-information ... ERROR*
> During startup - Warning message:
> Setting LC_CTYPE failed, using "C"
>
> I tried to look for solutions but couldn't find any. Any directions in
> deducing this error would be highly welcome.
>
> Thanks,
> Kamal
>
> 	[[alternative HTML version deleted]]
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>


-- 
Brian D. Ripley,                  ripley at stats.ox.ac.uk
Professor of Applied Statistics,  http://www.stats.ox.ac.uk/~ripley/
University of Oxford,             Tel:  +44 1865 272861 (self)
1 South Parks Road,                     +44 1865 272866 (PA)
Oxford OX1 3TG, UK                Fax:  +44 1865 272595


From karl.forner at gmail.com  Tue Jun  4 18:40:57 2013
From: karl.forner at gmail.com (Karl Forner)
Date: Tue, 4 Jun 2013 18:40:57 +0200
Subject: [Rd] bug in package.skeleton(), and doc typo.
Message-ID: <CAMd4_AdEUVveL6xwm5nnzeOx+doP=SzGGpzajvnSP2r7z1-MFw@mail.gmail.com>

An embedded and charset-unspecified text was scrubbed...
Name: not available
URL: <https://stat.ethz.ch/pipermail/r-devel/attachments/20130604/50999fcc/attachment.pl>

From andreas.leha at med.uni-goettingen.de  Tue Jun  4 22:25:26 2013
From: andreas.leha at med.uni-goettingen.de (Andreas Leha)
Date: Tue, 4 Jun 2013 22:25:26 +0200
Subject: [Rd] strange value in .Last.value
Message-ID: <87wqq94o95.fsf@med.uni-goettingen.de>

Hi all,

the .Last.value sometimes contains a strange $visible FALSE value.  This
poses problems when using R with ESS (and ess-developer-mode) from
within org-mode.


>From http://permalink.gmane.org/gmane.emacs.ess.general/7299:

--8<---------------cut here---------------start------------->8---
Here is how to reproduce. Put df <- data.frame(a=1:3, b=1:3) in test.R
and then:

   source("test.R")
   print(.Last.value)

you should get:

   $value
     a b
   1 1 1
   2 2 2
   3 3 3
   
   $visible
   [1] FALSE
--8<---------------cut here---------------end--------------->8---


Regards,
Andreas


From winstonchang1 at gmail.com  Tue Jun  4 22:50:38 2013
From: winstonchang1 at gmail.com (Winston Chang)
Date: Tue, 4 Jun 2013 15:50:38 -0500
Subject: [Rd] strange value in .Last.value
In-Reply-To: <87wqq94o95.fsf@med.uni-goettingen.de>
References: <87wqq94o95.fsf@med.uni-goettingen.de>
Message-ID: <CAFOpNVF1=rgn6SUD9Cu7LyoFR01d_OoNj5k-two3Bua4XP3rUw@mail.gmail.com>

This is the result of the withVisible() function, which is called by
source(). This should illustrate what it does:

> withVisible(1+1)
$value
[1] 2

$visible
[1] TRUE


> withVisible(invisible(1+1))
$value
[1] 2

$visible
[1] FALSE

-Winston

On Tue, Jun 4, 2013 at 3:25 PM, Andreas Leha
<andreas.leha at med.uni-goettingen.de> wrote:
> Hi all,
>
> the .Last.value sometimes contains a strange $visible FALSE value.  This
> poses problems when using R with ESS (and ess-developer-mode) from
> within org-mode.
>
>
> >From http://permalink.gmane.org/gmane.emacs.ess.general/7299:
>
> --8<---------------cut here---------------start------------->8---
> Here is how to reproduce. Put df <- data.frame(a=1:3, b=1:3) in test.R
> and then:
>
>    source("test.R")
>    print(.Last.value)
>
> you should get:
>
>    $value
>      a b
>    1 1 1
>    2 2 2
>    3 3 3
>
>    $visible
>    [1] FALSE
> --8<---------------cut here---------------end--------------->8---
>
>
> Regards,
> Andreas
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From andreas.leha at med.uni-goettingen.de  Wed Jun  5 09:35:31 2013
From: andreas.leha at med.uni-goettingen.de (Andreas Leha)
Date: Wed, 5 Jun 2013 09:35:31 +0200
Subject: [Rd] strange value in .Last.value
References: <87wqq94o95.fsf@med.uni-goettingen.de>
	<CAFOpNVF1=rgn6SUD9Cu7LyoFR01d_OoNj5k-two3Bua4XP3rUw@mail.gmail.com>
Message-ID: <87k3m93t8c.fsf@med.uni-goettingen.de>

Hi Winston,

Winston Chang <winstonchang1 at gmail.com> writes:

> This is the result of the withVisible() function, which is called by
> source(). This should illustrate what it does:
>
>> withVisible(1+1)
> $value
> [1] 2
>
> $visible
> [1] TRUE
>
>
>> withVisible(invisible(1+1))
> $value
> [1] 2
>
> $visible
> [1] FALSE
>


Thanks for this.

But besides the technical reason of the $visible element being part of
.Last.value from a sourced statement, I guess my question is whether it
is intended to be there.

As I take it, it is.  Thus, ess/orgmode -- which relies on .Last.value
for results handling and does not expect that $visible element -- should
adapt and ignore that explicitly?

Regards,
Andreas


From murdoch.duncan at gmail.com  Wed Jun  5 13:59:54 2013
From: murdoch.duncan at gmail.com (Duncan Murdoch)
Date: Wed, 5 Jun 2013 07:59:54 -0400
Subject: [Rd] strange value in .Last.value
In-Reply-To: <87k3m93t8c.fsf@med.uni-goettingen.de>
References: <87wqq94o95.fsf@med.uni-goettingen.de>
	<CAFOpNVF1=rgn6SUD9Cu7LyoFR01d_OoNj5k-two3Bua4XP3rUw@mail.gmail.com>
	<87k3m93t8c.fsf@med.uni-goettingen.de>
Message-ID: <51AF283A.7080408@gmail.com>

On 13-06-05 3:35 AM, Andreas Leha wrote:
> Hi Winston,
>
> Winston Chang <winstonchang1 at gmail.com> writes:
>
>> This is the result of the withVisible() function, which is called by
>> source(). This should illustrate what it does:
>>
>>> withVisible(1+1)
>> $value
>> [1] 2
>>
>> $visible
>> [1] TRUE
>>
>>
>>> withVisible(invisible(1+1))
>> $value
>> [1] 2
>>
>> $visible
>> [1] FALSE
>>
>
>
> Thanks for this.
>
> But besides the technical reason of the $visible element being part of
> .Last.value from a sourced statement, I guess my question is whether it
> is intended to be there.
>
> As I take it, it is.  Thus, ess/orgmode -- which relies on .Last.value
> for results handling and does not expect that $visible element -- should
> adapt and ignore that explicitly?

I think you'll need to ask on the ESS list what the intentions are in 
this case.  The result of source() is a list with the value and visible 
entries.  This has been true "forever", it's not new behaviour.  (It's 
unfortunate that this is not clearly documented.)

Duncan Murdoch


From spinuvit at gmail.com  Wed Jun  5 16:18:29 2013
From: spinuvit at gmail.com (Vitalie Spinu)
Date: Wed, 5 Jun 2013 16:18:29 +0200
Subject: [Rd] strange value in .Last.value
In-Reply-To: <51AF283A.7080408@gmail.com> (Duncan Murdoch's message of "Wed, 5
	Jun 2013 07:59:54 -0400")
References: <87wqq94o95.fsf@med.uni-goettingen.de>
	<CAFOpNVF1=rgn6SUD9Cu7LyoFR01d_OoNj5k-two3Bua4XP3rUw@mail.gmail.com>
	<87k3m93t8c.fsf@med.uni-goettingen.de> <51AF283A.7080408@gmail.com>
Message-ID: <87vc5smyiy.fsf@gmail.com>



 >> Duncan Murdoch <murdoch.duncan at gmail.com>
 >> on Wed, 5 Jun 2013 07:59:54 -0400 wrote:

[...]

 >> As I take it, it is.  Thus, ess/orgmode -- which relies on .Last.value
 >> for results handling and does not expect that $visible element -- should
 >> adapt and ignore that explicitly?

 > I think you'll need to ask on the ESS list what the intentions are in this case.
 > The result of source() is a list with the value and visible entries.  This has
 > been true "forever", it's not new behaviour.  (It's unfortunate that this is not
 > clearly documented.)

ESS recently switched to "source" for evaluation in order to preserve
source references, and that ruins org-babel (a literate programming
backend) that relies on .Last.value.

Would a

     invisible(source('file.R', echo=TRUE)$value)

be a reliable solution to the problem? 


    Vitalie


From murdoch.duncan at gmail.com  Wed Jun  5 16:28:29 2013
From: murdoch.duncan at gmail.com (Duncan Murdoch)
Date: Wed, 5 Jun 2013 10:28:29 -0400
Subject: [Rd] strange value in .Last.value
In-Reply-To: <87vc5smyiy.fsf@gmail.com>
References: <87wqq94o95.fsf@med.uni-goettingen.de>
	<CAFOpNVF1=rgn6SUD9Cu7LyoFR01d_OoNj5k-two3Bua4XP3rUw@mail.gmail.com>
	<87k3m93t8c.fsf@med.uni-goettingen.de>
	<51AF283A.7080408@gmail.com> <87vc5smyiy.fsf@gmail.com>
Message-ID: <51AF4B0D.8070605@gmail.com>

On 05/06/2013 10:18 AM, Vitalie Spinu wrote:
>
>   >> Duncan Murdoch <murdoch.duncan at gmail.com>
>   >> on Wed, 5 Jun 2013 07:59:54 -0400 wrote:
>
> [...]
>
>   >> As I take it, it is.  Thus, ess/orgmode -- which relies on .Last.value
>   >> for results handling and does not expect that $visible element -- should
>   >> adapt and ignore that explicitly?
>
>   > I think you'll need to ask on the ESS list what the intentions are in this case.
>   > The result of source() is a list with the value and visible entries.  This has
>   > been true "forever", it's not new behaviour.  (It's unfortunate that this is not
>   > clearly documented.)
>
> ESS recently switched to "source" for evaluation in order to preserve
> source references, and that ruins org-babel (a literate programming
> backend) that relies on .Last.value.
>
> Would a
>
>       invisible(source('file.R', echo=TRUE)$value)
>
> be a reliable solution to the problem?

You can count on source()$value to return the last value computed in the 
source() if there was one.  If there were no expressions computed, the 
value will be NULL, but NULL$value is also NULL, so perhaps that is good 
enough for your purposes.

Duncan Murdoch


From t.jombart at imperial.ac.uk  Wed Jun  5 18:48:28 2013
From: t.jombart at imperial.ac.uk (Jombart, Thibaut)
Date: Wed, 5 Jun 2013 16:48:28 +0000
Subject: [Rd] conflicting imports despite using importFrom in NAMESPACE
Message-ID: <2CB2DA8E426F3541AB1907F98ABA65706386D41F@icexch-m1.ic.ac.uk>


Dear all, 

It is my understanding that using 'importFrom' in the NAMESPACE of a package allows to avoid conflicts between different packages defining objects with identical names. However, I can still see conflicts while loading the package using 'library'.

Here is a toy example, with a package 'foo' importing 'as.igraph' from the igraph package, and 'nj' from ape.

'foo' uses the following DESCRIPTION file:
----------------------
Package: foo
Version: 0.0-0
Date: 2013/06/04
Title: foo
Author:  John Doe
Maintainer: John Doe <jdoe at nowhere.org>
Imports: igraph, ape
Description: just a test.
License: GPL (>=2)
LazyLoad: yes
----------------------

And the following NAMESPACE:
----------------------
## Export all names
exportPattern(".")

## Export all classes
exportClassPattern(".")

## Import all packages listed as Imports or Depends
importFrom(igraph, as.igraph)
importFrom(ape, nj)
----------------------

The check (R 3.0.1) passes without warnings, but then when loading the package:
> library(foo)
Warning messages:
1: replacing previous import ?as.igraph? when loading ?ape? 
2: replacing previous import ?edges? when loading ?ape? 
> 

I would have assumed only ape::nj and igraph::as.igraph would be imported when loading 'foo', so this conflict should not occur.

There is probably something simple I have missed as I have just began to pay attention to NAMESPACES recently. Reading this post:
http://stackoverflow.com/questions/8637993/better-explanation-of-when-to-use-imports-depends
clarified things a bit, but I still don't understand the warning above.

Any clarification will be much appreciated.

All the best

Thibaut

-- 
######################################
Dr Thibaut JOMBART
MRC Centre for Outbreak Analysis and Modelling
Department of Infectious Disease Epidemiology
Imperial College - School of Public Health
St Mary?s Campus
Norfolk Place
London W2 1PG
United Kingdom
Tel. : 0044 (0)20 7594 3658
t.jombart at imperial.ac.uk
http://sites.google.com/site/thibautjombart/
http://adegenet.r-forge.r-project.org/

From pdalgd at gmail.com  Wed Jun  5 20:59:37 2013
From: pdalgd at gmail.com (peter dalgaard)
Date: Wed, 5 Jun 2013 20:59:37 +0200
Subject: [Rd] conflicting imports despite using importFrom in NAMESPACE
In-Reply-To: <2CB2DA8E426F3541AB1907F98ABA65706386D41F@icexch-m1.ic.ac.uk>
References: <2CB2DA8E426F3541AB1907F98ABA65706386D41F@icexch-m1.ic.ac.uk>
Message-ID: <63D11F8E-D047-4E48-B8A0-E6EC9E24BE62@gmail.com>

I'd suspect that the Imports: line in DESCRIPTION imports the full namespaces, including conflicting items, on top of importFrom items. Does it not help to use Depends: instead?

-pd


On Jun 5, 2013, at 18:48 , Jombart, Thibaut wrote:

> 
> Dear all, 
> 
> It is my understanding that using 'importFrom' in the NAMESPACE of a package allows to avoid conflicts between different packages defining objects with identical names. However, I can still see conflicts while loading the package using 'library'.
> 
> Here is a toy example, with a package 'foo' importing 'as.igraph' from the igraph package, and 'nj' from ape.
> 
> 'foo' uses the following DESCRIPTION file:
> ----------------------
> Package: foo
> Version: 0.0-0
> Date: 2013/06/04
> Title: foo
> Author:  John Doe
> Maintainer: John Doe <jdoe at nowhere.org>
> Imports: igraph, ape
> Description: just a test.
> License: GPL (>=2)
> LazyLoad: yes
> ----------------------
> 
> And the following NAMESPACE:
> ----------------------
> ## Export all names
> exportPattern(".")
> 
> ## Export all classes
> exportClassPattern(".")
> 
> ## Import all packages listed as Imports or Depends
> importFrom(igraph, as.igraph)
> importFrom(ape, nj)
> ----------------------
> 
> The check (R 3.0.1) passes without warnings, but then when loading the package:
>> library(foo)
> Warning messages:
> 1: replacing previous import ?as.igraph? when loading ?ape? 
> 2: replacing previous import ?edges? when loading ?ape? 
>> 
> 
> I would have assumed only ape::nj and igraph::as.igraph would be imported when loading 'foo', so this conflict should not occur.
> 
> There is probably something simple I have missed as I have just began to pay attention to NAMESPACES recently. Reading this post:
> http://stackoverflow.com/questions/8637993/better-explanation-of-when-to-use-imports-depends
> clarified things a bit, but I still don't understand the warning above.
> 
> Any clarification will be much appreciated.
> 
> All the best
> 
> Thibaut
> 
> -- 
> ######################################
> Dr Thibaut JOMBART
> MRC Centre for Outbreak Analysis and Modelling
> Department of Infectious Disease Epidemiology
> Imperial College - School of Public Health
> St Mary?s Campus
> Norfolk Place
> London W2 1PG
> United Kingdom
> Tel. : 0044 (0)20 7594 3658
> t.jombart at imperial.ac.uk
> http://sites.google.com/site/thibautjombart/
> http://adegenet.r-forge.r-project.org/
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel

-- 
Peter Dalgaard, Professor,
Center for Statistics, Copenhagen Business School
Solbjerg Plads 3, 2000 Frederiksberg, Denmark
Phone: (+45)38153501
Email: pd.mes at cbs.dk  Priv: PDalgd at gmail.com


From mtmorgan at fhcrc.org  Wed Jun  5 21:19:14 2013
From: mtmorgan at fhcrc.org (Martin Morgan)
Date: Wed, 05 Jun 2013 12:19:14 -0700
Subject: [Rd] conflicting imports despite using importFrom in NAMESPACE
In-Reply-To: <63D11F8E-D047-4E48-B8A0-E6EC9E24BE62@gmail.com>
References: <2CB2DA8E426F3541AB1907F98ABA65706386D41F@icexch-m1.ic.ac.uk>
	<63D11F8E-D047-4E48-B8A0-E6EC9E24BE62@gmail.com>
Message-ID: <51AF8F32.3010801@fhcrc.org>

On 06/05/2013 11:59 AM, peter dalgaard wrote:
> I'd suspect that the Imports: line in DESCRIPTION imports the full namespaces, including conflicting items, on top of importFrom items. Does it not help to use Depends: instead?

I think of Imports: and Depends: as different -- presumably the end user has no 
need for ape / igraph beyond the functionality provided by the new package.

For what it's worth, with a minimal package (attached, modulo the mailman gods),

$ tree PkgA
PkgA
??? DESCRIPTION
??? NAMESPACE
??? R

1 directory, 2 files

and with DESCRIPTION / NAMESPACE as below, I don't see any warning about 
replacing previous imports

$ R --vanilla
 > library(PkgA)
 > sessionInfo()
R version 3.0.1 beta (2013-05-07 r62721)
Platform: x86_64-unknown-linux-gnu (64-bit)

locale:
  [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C
  [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8
  [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8
  [7] LC_PAPER=C                 LC_NAME=C
  [9] LC_ADDRESS=C               LC_TELEPHONE=C
[11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C

attached base packages:
[1] stats     graphics  grDevices utils     datasets  methods   base

other attached packages:
[1] PkgA_1.2.3

loaded via a namespace (and not attached):
[1] ape_3.0-8       grid_3.0.1      igraph_0.6.5-2  lattice_0.20-15
[5] nlme_3.1-109

likewise with R version 3.0.1 beta (2013-05-07 r62721).

Also I don't think exportPattern(".") is to be recommended; see section 1.5.1 of 
Writing R Extensions (though as a lazy programmer I kind of like the pattern 
"^[^\\.]").

Martin Morgan

> -pd
>
>
> On Jun 5, 2013, at 18:48 , Jombart, Thibaut wrote:
>
>>
>> Dear all,
>>
>> It is my understanding that using 'importFrom' in the NAMESPACE of a package allows to avoid conflicts between different packages defining objects with identical names. However, I can still see conflicts while loading the package using 'library'.
>>
>> Here is a toy example, with a package 'foo' importing 'as.igraph' from the igraph package, and 'nj' from ape.
>>
>> 'foo' uses the following DESCRIPTION file:
>> ----------------------
>> Package: foo
>> Version: 0.0-0
>> Date: 2013/06/04
>> Title: foo
>> Author:  John Doe
>> Maintainer: John Doe <jdoe at nowhere.org>
>> Imports: igraph, ape
>> Description: just a test.
>> License: GPL (>=2)
>> LazyLoad: yes
>> ----------------------
>>
>> And the following NAMESPACE:
>> ----------------------
>> ## Export all names
>> exportPattern(".")
>>
>> ## Export all classes
>> exportClassPattern(".")
>>
>> ## Import all packages listed as Imports or Depends
>> importFrom(igraph, as.igraph)
>> importFrom(ape, nj)
>> ----------------------
>>
>> The check (R 3.0.1) passes without warnings, but then when loading the package:
>>> library(foo)
>> Warning messages:
>> 1: replacing previous import ?as.igraph? when loading ?ape?
>> 2: replacing previous import ?edges? when loading ?ape?
>>>
>>
>> I would have assumed only ape::nj and igraph::as.igraph would be imported when loading 'foo', so this conflict should not occur.
>>
>> There is probably something simple I have missed as I have just began to pay attention to NAMESPACES recently. Reading this post:
>> http://stackoverflow.com/questions/8637993/better-explanation-of-when-to-use-imports-depends
>> clarified things a bit, but I still don't understand the warning above.
>>
>> Any clarification will be much appreciated.
>>
>> All the best
>>
>> Thibaut
>>
>> --
>> ######################################
>> Dr Thibaut JOMBART
>> MRC Centre for Outbreak Analysis and Modelling
>> Department of Infectious Disease Epidemiology
>> Imperial College - School of Public Health
>> St Mary?s Campus
>> Norfolk Place
>> London W2 1PG
>> United Kingdom
>> Tel. : 0044 (0)20 7594 3658
>> t.jombart at imperial.ac.uk
>> http://sites.google.com/site/thibautjombart/
>> http://adegenet.r-forge.r-project.org/
>> ______________________________________________
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel
>


-- 
Computational Biology / Fred Hutchinson Cancer Research Center
1100 Fairview Ave. N.
PO Box 19024 Seattle, WA 98109

Location: Arnold Building M1 B861
Phone: (206) 667-2793
-------------- next part --------------
A non-text attachment was scrubbed...
Name: PkgA.tar.gz
Type: application/x-gzip
Size: 475 bytes
Desc: not available
URL: <https://stat.ethz.ch/pipermail/r-devel/attachments/20130605/b92f8330/attachment.gz>

From t.jombart at imperial.ac.uk  Wed Jun  5 21:57:41 2013
From: t.jombart at imperial.ac.uk (Jombart, Thibaut)
Date: Wed, 5 Jun 2013 19:57:41 +0000
Subject: [Rd] conflicting imports despite using importFrom in NAMESPACE
In-Reply-To: <51AF8F32.3010801@fhcrc.org>
References: <2CB2DA8E426F3541AB1907F98ABA65706386D41F@icexch-m1.ic.ac.uk>
	<63D11F8E-D047-4E48-B8A0-E6EC9E24BE62@gmail.com>,
	<51AF8F32.3010801@fhcrc.org>
Message-ID: <2CB2DA8E426F3541AB1907F98ABA65706386D4F6@icexch-m1.ic.ac.uk>


Hi Martin, 

thanks, this is reassuring - I'm assuming it is just a problem on my computer then.

Thanks for pointing out the exportPattern("."). For some purposes I actually ended up needing to export some hidden functions, but I guess I could just not export these and reference to them explicitly using ':::'.

Best
Thibaut
________________________________________
From: Martin Morgan [mtmorgan at fhcrc.org]
Sent: 05 June 2013 20:19
To: peter dalgaard
Cc: Jombart, Thibaut; r-devel at r-project.org
Subject: Re: [Rd] conflicting imports despite using importFrom in NAMESPACE

On 06/05/2013 11:59 AM, peter dalgaard wrote:
> I'd suspect that the Imports: line in DESCRIPTION imports the full namespaces, including conflicting items, on top of importFrom items. Does it not help to use Depends: instead?

I think of Imports: and Depends: as different -- presumably the end user has no
need for ape / igraph beyond the functionality provided by the new package.

For what it's worth, with a minimal package (attached, modulo the mailman gods),

$ tree PkgA
PkgA
??? DESCRIPTION
??? NAMESPACE
??? R

1 directory, 2 files

and with DESCRIPTION / NAMESPACE as below, I don't see any warning about
replacing previous imports

$ R --vanilla
 > library(PkgA)
 > sessionInfo()
R version 3.0.1 beta (2013-05-07 r62721)
Platform: x86_64-unknown-linux-gnu (64-bit)

locale:
  [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C
  [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8
  [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8
  [7] LC_PAPER=C                 LC_NAME=C
  [9] LC_ADDRESS=C               LC_TELEPHONE=C
[11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C

attached base packages:
[1] stats     graphics  grDevices utils     datasets  methods   base

other attached packages:
[1] PkgA_1.2.3

loaded via a namespace (and not attached):
[1] ape_3.0-8       grid_3.0.1      igraph_0.6.5-2  lattice_0.20-15
[5] nlme_3.1-109

likewise with R version 3.0.1 beta (2013-05-07 r62721).

Also I don't think exportPattern(".") is to be recommended; see section 1.5.1 of
Writing R Extensions (though as a lazy programmer I kind of like the pattern
"^[^\\.]").

Martin Morgan

> -pd
>
>
> On Jun 5, 2013, at 18:48 , Jombart, Thibaut wrote:
>
>>
>> Dear all,
>>
>> It is my understanding that using 'importFrom' in the NAMESPACE of a package allows to avoid conflicts between different packages defining objects with identical names. However, I can still see conflicts while loading the package using 'library'.
>>
>> Here is a toy example, with a package 'foo' importing 'as.igraph' from the igraph package, and 'nj' from ape.
>>
>> 'foo' uses the following DESCRIPTION file:
>> ----------------------
>> Package: foo
>> Version: 0.0-0
>> Date: 2013/06/04
>> Title: foo
>> Author:  John Doe
>> Maintainer: John Doe <jdoe at nowhere.org>
>> Imports: igraph, ape
>> Description: just a test.
>> License: GPL (>=2)
>> LazyLoad: yes
>> ----------------------
>>
>> And the following NAMESPACE:
>> ----------------------
>> ## Export all names
>> exportPattern(".")
>>
>> ## Export all classes
>> exportClassPattern(".")
>>
>> ## Import all packages listed as Imports or Depends
>> importFrom(igraph, as.igraph)
>> importFrom(ape, nj)
>> ----------------------
>>
>> The check (R 3.0.1) passes without warnings, but then when loading the package:
>>> library(foo)
>> Warning messages:
>> 1: replacing previous import ?as.igraph? when loading ?ape?
>> 2: replacing previous import ?edges? when loading ?ape?
>>>
>>
>> I would have assumed only ape::nj and igraph::as.igraph would be imported when loading 'foo', so this conflict should not occur.
>>
>> There is probably something simple I have missed as I have just began to pay attention to NAMESPACES recently. Reading this post:
>> http://stackoverflow.com/questions/8637993/better-explanation-of-when-to-use-imports-depends
>> clarified things a bit, but I still don't understand the warning above.
>>
>> Any clarification will be much appreciated.
>>
>> All the best
>>
>> Thibaut
>>
>> --
>> ######################################
>> Dr Thibaut JOMBART
>> MRC Centre for Outbreak Analysis and Modelling
>> Department of Infectious Disease Epidemiology
>> Imperial College - School of Public Health
>> St Mary?s Campus
>> Norfolk Place
>> London W2 1PG
>> United Kingdom
>> Tel. : 0044 (0)20 7594 3658
>> t.jombart at imperial.ac.uk
>> http://sites.google.com/site/thibautjombart/
>> http://adegenet.r-forge.r-project.org/
>> ______________________________________________
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel
>


--
Computational Biology / Fred Hutchinson Cancer Research Center
1100 Fairview Ave. N.
PO Box 19024 Seattle, WA 98109

Location: Arnold Building M1 B861
Phone: (206) 667-2793

From jpritikin at pobox.com  Thu Jun  6 08:06:22 2013
From: jpritikin at pobox.com (Joshua N Pritikin)
Date: Thu, 6 Jun 2013 11:36:22 +0530
Subject: [Rd] dmvnorm
Message-ID: <20130606060622.GS3712@tailwind>

Summary:

+ I am writing an R extension that needs to call dmvnorm more than 
10,000 times during a model fitting computation.

+ My extension uses openmp for parallel execution.

+ As of R 3.0, it is no longer permitted for threads to call the R 
interpreter because there is a stack overflow check that always trips 
because the thread's stack is different from what R is expecting.

+ Therefore, I need a C version of dmvnorm.

+ The mvtnorm package maintainer is not interested in 
R_RegisterCCallable.

Can a C version of dmvnorm get added to the R core?

-- 
Joshua N. Pritikin
Department of Psychology
University of Virginia
485 McCormick Rd, Gilmer Hall Room 102
Charlottesville, VA 22904
http://people.virginia.edu/~jnp3bc
-------------- next part --------------
An embedded message was scrubbed...
From: Torsten Hothorn <Torsten.Hothorn at uzh.ch>
Subject: Re: dmvnorm
Date: Wed, 5 Jun 2013 15:26:03 +0200 (CEST)
Size: 3953
URL: <https://stat.ethz.ch/pipermail/r-devel/attachments/20130606/291977e4/attachment.mht>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: dmvnorm.patch
Type: text/x-diff
Size: 7588 bytes
Desc: not available
URL: <https://stat.ethz.ch/pipermail/r-devel/attachments/20130606/291977e4/attachment.bin>

From Guillermo.Vinue at uv.es  Thu Jun  6 15:54:50 2013
From: Guillermo.Vinue at uv.es (Guillermo.Vinue at uv.es)
Date: Thu, 6 Jun 2013 15:54:50 +0200 (CEST)
Subject: [Rd] Question about writing portable packages
Message-ID: <9161771218vivigui@uv.es>

Dear R-devel list,

I am creating an R package that includes C++ code. I tried to install it
both in Linux and Windows and it worked. I load the C code via the
NAMESPACE file using useDynLib.

Now I am revising once again whether everything is ready before
submitting the package to CRAN and I have read in
http://cran.r-project.org/doc/manuals/R-exts.html#Writing-portable-packages
that ?It is not portable to call compiled code in R or other packages
via .Internal, .C, .Fortran, .Call or .External, since such interfaces
are subject to change without notice and will probably result in your
code terminating the R process?.

However, the R function of my package that calls the C++ code uses the
Call function. 

Does it mean that I cannot submit my package to CRAN because the
portability is not guaranteed?. Then, how could I to call C++ code so
that my package were portable?.

I hope you can clarify my doubts. I have seen the collection of prior
postings to the list, but I have not found a specifical answer to my doubts .

Thank you very much in advance.

Best regards,

Guillermo


From gmbecker at ucdavis.edu  Fri Jun  7 09:34:39 2013
From: gmbecker at ucdavis.edu (Gabriel Becker)
Date: Fri, 7 Jun 2013 00:34:39 -0700
Subject: [Rd] Question about writing portable packages
In-Reply-To: <9161771218vivigui@uv.es>
References: <9161771218vivigui@uv.es>
Message-ID: <CADwqtCPX9numFy+Az-gPT2amW92-pnD0jhtQMeOX1gnL6gCQEQ@mail.gmail.com>

An embedded and charset-unspecified text was scrubbed...
Name: not available
URL: <https://stat.ethz.ch/pipermail/r-devel/attachments/20130607/acf68262/attachment.pl>

From kevinushey at gmail.com  Fri Jun  7 09:10:23 2013
From: kevinushey at gmail.com (Kevin Ushey)
Date: Fri, 7 Jun 2013 00:10:23 -0700
Subject: [Rd] Question about writing portable packages
In-Reply-To: <9161771218vivigui@uv.es>
References: <9161771218vivigui@uv.es>
Message-ID: <CAJXgQP2xVKo2iyXJ17kWxtDyS-A1-+tpJwWPRgnfvjciWDD2xg@mail.gmail.com>

An embedded and charset-unspecified text was scrubbed...
Name: not available
URL: <https://stat.ethz.ch/pipermail/r-devel/attachments/20130607/c9938558/attachment.pl>

From Guillermo.Vinue at uv.es  Fri Jun  7 09:54:47 2013
From: Guillermo.Vinue at uv.es (Guillermo.Vinue at uv.es)
Date: Fri, 7 Jun 2013 09:54:47 +0200 (CEST)
Subject: [Rd] Question about writing portable packages
In-Reply-To: <CADwqtCPX9numFy+Az-gPT2amW92-pnD0jhtQMeOX1gnL6gCQEQ@mail.gmail.com>
References: <CADwqtCPX9numFy+Az-gPT2amW92-pnD0jhtQMeOX1gnL6gCQEQ@mail.gmail.com>
Message-ID: <9485257239vivigui@uv.es>

Dear Kevin, Berwin and Gabriel,

Thank you very much for your detailed and clear answers. 

According to your comments, in a few days I will submit my package to CRAN.

I would also like to take this opportunity to thank all the R-devel list
for being a wonderful place to discuss and clarify doubts about R.

Best wishes,

Guillermo

> Guillermo,
> 
> That phrase is referring to using .Call in your package to call a C
> function that shipped with a DIFFERENT package or is part of R itself
> (defined in the R source code).
> 
> As long as you are only calling C functions you define in the C++ code
that
> ships with your package you are fine.
> 
> ~G
> 
> 
> On Thu, Jun 6, 2013 at 6:54 AM, <Guillermo.Vinue at uv.es> wrote:
> 
> > Dear R-devel list,
> >
> > I am creating an R package that includes C++ code. I tried to install it
> > both in Linux and Windows and it worked. I load the C code via the
> > NAMESPACE file using useDynLib.
> >
> > Now I am revising once again whether everything is ready before
> > submitting the package to CRAN and I have read in
> >
http://cran.r-project.org/doc/manuals/R-exts.html#Writing-portable-packages
> > that ?It is not portable to call compiled code in R or other packages
> > via .Internal, .C, .Fortran, .Call or .External, since such interfaces
> > are subject to change without notice and will probably result in your
> > code terminating the R process?.
> >
> > However, the R function of my package that calls the C++ code uses the
> > Call function.
> >
> > Does it mean that I cannot submit my package to CRAN because the
> > portability is not guaranteed?. Then, how could I to call C++ code so
> > that my package were portable?.
> >
> > I hope you can clarify my doubts. I have seen the collection of prior
> > postings to the list, but I have not found a specifical answer to my
> > doubts .
> >
> > Thank you very much in advance.
> >
> > Best regards,
> >
> > Guillermo
> >
> > ______________________________________________
> > R-devel at r-project.org mailing list
> > https://stat.ethz.ch/mailman/listinfo/r-devel
> >
> 
> 
> 
> -- 
> Gabriel Becker
> Graduate Student
> Statistics Department
> University of California, Davis
> 


From wdunlap at tibco.com  Fri Jun  7 18:09:10 2013
From: wdunlap at tibco.com (William Dunlap)
Date: Fri, 7 Jun 2013 16:09:10 +0000
Subject: [Rd] [Rcpp-devel] Setting the R random seed from Rcpp
In-Reply-To: <45439FB4-7E16-44C5-B87F-275BBB542959@r-enthusiasts.com>
References: <CAC_0WE-jR+DGPRTzOGyWvF=1NnX9giGxcvSVWRv3LVj2E9sW6w@mail.gmail.com>
	<45439FB4-7E16-44C5-B87F-275BBB542959@r-enthusiasts.com>
Message-ID: <E66794E69CFDE04D9A70842786030B931C2FFCAC@PA-MBX01.na.tibco.com>

This would be easier if base::set.seed() accepted a value of .Random.seed
instead of just a scalar integer or, new to R-3.0.0, NULL.  If set.seed() returned the
previous value of .Random.seed (NULL if there was no previous value) things
might be even easier.  People should not have to know where .Random.seed
is stored.

S+'s set.seed() accepts a value of .Random.seed but does not return the previous value.
(If it is given an illegal value for .Random.seed it complains and sets it to a random value.)

Bill Dunlap
Spotfire, TIBCO Software
wdunlap tibco.com


> -----Original Message-----
> From: rcpp-devel-bounces at lists.r-forge.r-project.org [mailto:rcpp-devel-
> bounces at lists.r-forge.r-project.org] On Behalf Of Romain Francois
> Sent: Friday, June 07, 2013 7:42 AM
> To: Matteo Fasiolo
> Cc: rcpp-devel at lists.r-forge.r-project.org
> Subject: Re: [Rcpp-devel] Setting the R random seed from Rcpp
> 
> 
> You can do something like this (i'm on my phone, so you might have to change it):
> 
> Environment g = Environment::global_env() ;
> Environment::Binding RandomSeed = g[".Random.seed"] ;
> 
> You get the current value of the binding like this:
> 
> NumericVector someVariable = RandomSeed ;
> 
> And then when you want to set the variable: you just do :
> 
> RandomSeed = someVariable ;
> 
> The Environment::Binding class acts a a proxy class.
> 
> Romain
> 
> 
> Le 7 juin 2013 ? 16:22, Matteo Fasiolo <matteo.fasiolo at gmail.com> a ?crit :
> 
> > Dear Rcpp experts,
> >
> >  I would like to be able to store the R random seed from a Rcpp
> > function and then reset it. In other words I would like to replicate
> > the following code in Rcpp:
> >
> > savedSeed <- .Random.seed
> > x <- Rfunction(parameters1);
> >
> > .Random.seed <- savedSeed
> > x1 <- Rfunction(parameters2);
> >
> > where Rfunction simulates some random numbers and uses them
> > but with different parameter values.
> > Is it possible to do something similar in Rcpp?
> > Probably using GetRNGstate() and PutRNGstate()?
> >
> > Thanks,
> >
> > Matteo
> > _______________________________________________
> > Rcpp-devel mailing list
> > Rcpp-devel at lists.r-forge.r-project.org
> > https://lists.r-forge.r-project.org/cgi-bin/mailman/listinfo/rcpp-devel
> _______________________________________________
> Rcpp-devel mailing list
> Rcpp-devel at lists.r-forge.r-project.org
> https://lists.r-forge.r-project.org/cgi-bin/mailman/listinfo/rcpp-devel

From hanson at depauw.edu  Fri Jun  7 19:59:52 2013
From: hanson at depauw.edu (Bryan Hanson)
Date: Fri, 7 Jun 2013 13:59:52 -0400
Subject: [Rd] col2rgb, factors & documentation
Message-ID: <8A85383B-7A1F-46CF-8C31-5BFEADC610DD@depauw.edu>

Hello Core Folk.

Quite by accident I discovered today that col2rgb, when fed factors, acts on the integer representation of those factors:

td <- as.factor(rainbow(5)) # not how I discovered the issue!
td
res <- col2rgb(td)
res
# but
col2rgb("#FF0000FF") # this is td[1] but does not produce the same answer
res[,1]
# moreover
as.integer(td)
col2rgb(5) # the integer value of the first level
# and this is res[,1] which by the way is palette()[5], aka "cyan"

?col2rgb says:
col	
vector of any of the three kinds of R color specifications, i.e., either a color name (as listed by colors()), a hexadecimal string of the form "#rrggbb" or "#rrggbbaa" (see rgb), or a positive integer i meaning palette()[i]. Non-numeric values are coerced to character.

So in the example the factor is being taken as its integer representation, and finding an integer as the input value, col2rgb goes to palette().

Perhaps this is a nuance that belongs in the documentation?

Thanks, Bryan
***********
Bryan Hanson
Professor of Chemistry & Biochemistry
DePauw University


From hpages at fhcrc.org  Sat Jun  8 00:08:06 2013
From: hpages at fhcrc.org (=?ISO-8859-1?Q?Herv=E9_Pag=E8s?=)
Date: Fri, 07 Jun 2013 15:08:06 -0700
Subject: [Rd] relist() is broken when the skeleton is a list with empty list
	elements
Message-ID: <51B259C6.8090302@fhcrc.org>

Hi,

relist() is broken when the skeleton is a list with empty list elements:

   > x <- list(1:3, integer(0), 11:14)

   > relist(unlist(x), x)
   [[1]]
   [1] 1 2 3

   [[2]]
   [1] 11  3

   [[3]]
   [1] 11 12 13 14

Hard to believe that such a bug has been around for 6 years (i.e. since
the introduction of relist()) without ever being noticed.

Cheers,
H.

 > sessionInfo()
R version 3.0.1 (2013-05-16)
Platform: x86_64-unknown-linux-gnu (64-bit)

locale:
  [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C
  [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8
  [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8
  [7] LC_PAPER=C                 LC_NAME=C
  [9] LC_ADDRESS=C               LC_TELEPHONE=C
[11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C

attached base packages:
[1] stats     graphics  grDevices utils     datasets  methods   base

-- 
Herv? Pag?s

Program in Computational Biology
Division of Public Health Sciences
Fred Hutchinson Cancer Research Center
1100 Fairview Ave. N, M1-B514
P.O. Box 19024
Seattle, WA 98109-1024

E-mail: hpages at fhcrc.org
Phone:  (206) 667-5791
Fax:    (206) 667-1319


From gray at clhn.co  Fri Jun  7 14:38:38 2013
From: gray at clhn.co (Gray)
Date: Fri, 7 Jun 2013 07:38:38 -0500
Subject: [Rd] Question about writing portable packages
In-Reply-To: <CAJXgQP2xVKo2iyXJ17kWxtDyS-A1-+tpJwWPRgnfvjciWDD2xg@mail.gmail.com>
References: <9161771218vivigui@uv.es>
	<CAJXgQP2xVKo2iyXJ17kWxtDyS-A1-+tpJwWPRgnfvjciWDD2xg@mail.gmail.com>
Message-ID: <20130607123837.GA2958@gray-ThinkPad-X200-Tablet>

Kevin Ushey: (12:10AM on Fri, Jun 07)
>I think the key word here is _other_ packages. It's entirely okay to call
>your package's own compiled code through the .Call interface (and the code
>you write may link to other packages; the obvious example being Rcpp code
>you write); however, it is not portable to use .Call to call compiled code
>from another package directly. This is because package authors are not
>required to maintain a consistent .Call interface to their compiled code;
>rather, they just have to make sure the direct user-facing R exported
>functions retain a stable interface over different versions (or, if
>changed, are done so with prior warning etc.)

Also remember that, as long as you obey all of the licenses, you can
simply copy the source code that needs to be compiled into your own
package.  You'll obviously need to track development of the other
package (which you'll need to do anyway) but then you can be sure that
the calls you want to use work.

-- 
Gray Calhoun, Assistant Professor of Economics at Iowa State 
http://gray.clhn.co (web)


From fabio.ufla at yahoo.com.br  Sat Jun  8 15:33:20 2013
From: fabio.ufla at yahoo.com.br (=?iso-8859-1?Q?Fabio_Mathias_Corr=EAa?=)
Date: Sat, 8 Jun 2013 06:33:20 -0700 (PDT)
Subject: [Rd] Compile error gfortran-4.6
Message-ID: <1370698400.24872.YahooMailNeo@web120804.mail.ne1.yahoo.com>

An embedded and charset-unspecified text was scrubbed...
Name: not available
URL: <https://stat.ethz.ch/pipermail/r-devel/attachments/20130608/d5ff4618/attachment.pl>

From fabio.ufla at yahoo.com.br  Sat Jun  8 15:43:39 2013
From: fabio.ufla at yahoo.com.br (=?iso-8859-1?Q?Fabio_Mathias_Corr=EAa?=)
Date: Sat, 8 Jun 2013 06:43:39 -0700 (PDT)
Subject: [Rd] Compile error with gfortran-4.6
Message-ID: <1370699019.63835.YahooMailNeo@web120803.mail.ne1.yahoo.com>

An embedded and charset-unspecified text was scrubbed...
Name: not available
URL: <https://stat.ethz.ch/pipermail/r-devel/attachments/20130608/e23a2a6e/attachment.pl>

From ripley at stats.ox.ac.uk  Sat Jun  8 15:54:42 2013
From: ripley at stats.ox.ac.uk (Prof Brian Ripley)
Date: Sat, 08 Jun 2013 14:54:42 +0100
Subject: [Rd] Compile error with gfortran-4.6
In-Reply-To: <1370699019.63835.YahooMailNeo@web120803.mail.ne1.yahoo.com>
References: <1370699019.63835.YahooMailNeo@web120803.mail.ne1.yahoo.com>
Message-ID: <51B337A2.3080900@stats.ox.ac.uk>

This is not gfortran-help, but note that you are not doing this 
correctly.  See 'Writing R Extensions' ?1.2.1.  The linking step needs a 
flag too.

Beyond that, you failed to tell us your OS, and in fact there are no 
such versions of gfortran (4.6.0 != 4.6).  The posting guide does ask 
you to be accurate in your version numbers (and not to send HTML).

On 08/06/2013 14:43, Fabio Mathias Corr?a wrote:
> Dears,
>
> I am writing a code in Fortran using OpenMP directives.
>
> When compiling the code in gfortran 4.4 does not occur any problem.
>
> When compiling the code in gfortran 4.6, an error message appears.
>
> In other compilers the error does not occur.
>
>
> A small example.
>
>
> ## Code in Fortran

You declare this to be Fortran 90.
>
>         subroutine hello()
>         implicit none
>         integer :: nthreads, tid
>         integer :: omp_get_num_threads, omp_get_thread_num
>         integer :: omp_get_max_threads, omp_set_num_threads
>
>         print *, 'M?ximo de threads', omp_get_max_threads()
>
>         !$omp parallel
>         tid = omp_get_thread_num()
>         print *, 'Hello World from thread = ', tid
>         print *, 'Number of threads =', omp_get_thread_num()
>         !$omp end parallel
>         end subroutine hello
>
>
> ### Compiling and testing
>
> system("R CMD COMPILE hello.f90 FCFLAGS=-fopenmp")
> system("R CMD SHLIB hello.o")
>
> dyn.load("hello.so")
>
> .Fortran("hello")
>
> ### Error message
>
> /home/fmcron/Documentos/Fortran/OpenMP/exemplos/hello.so: undefined symbol: _gfortran_transfer_character_write
>
>
>
> Thanks
>
>
>          F?bio Mathias Corr?a
>
>
>     Universidade Estadual de Santa Cruz
> Departamento de Ci?ncias Exatas e da Terra - DCET
>
>
> Campus Soane Nazar? de Andrade, km 16 Rodovia Ilh?us-Itabuna
> CEP 45662-900. Ilh?us-Bahia
> 	[[alternative HTML version deleted]]
>
>
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>


-- 
Brian D. Ripley,                  ripley at stats.ox.ac.uk
Professor of Applied Statistics,  http://www.stats.ox.ac.uk/~ripley/
University of Oxford,             Tel:  +44 1865 272861 (self)
1 South Parks Road,                     +44 1865 272866 (PA)
Oxford OX1 3TG, UK                Fax:  +44 1865 272595


From fabio.ufla at yahoo.com.br  Sat Jun  8 15:56:19 2013
From: fabio.ufla at yahoo.com.br (=?iso-8859-1?Q?Fabio_Mathias_Corr=EAa?=)
Date: Sat, 8 Jun 2013 06:56:19 -0700 (PDT)
Subject: [Rd] Problem with gfortran-4.6
Message-ID: <1370699779.66833.YahooMailNeo@web120803.mail.ne1.yahoo.com>

Dears,

I am writing a code in Fortran using OpenMP directives.

When compiling the code in gfortran 4.4 does not occur any problem.

When compiling the code in gfortran 4.6, an error message appears.

In other compilers the error does not occur.


A small example.


## Code in Fortran

? ? ? ?subroutine hello()
? ? ? ?implicit none
? ? ? ?integer :: nthreads, tid
? ? ? ?integer :: omp_get_num_threads, omp_get_thread_num
? ? ? ?integer :: omp_get_max_threads, omp_set_num_threads

? ? ? ?print *, 'M?ximo de threads', omp_get_max_threads()

? ? ? ?!$omp parallel?
? ? ? ?tid = omp_get_thread_num()
? ? ? ?print *, 'Hello World from thread = ', tid
? ? ? ?print *, 'Number of threads =', omp_get_thread_num()
? ? ? ?!$omp end parallel
? ? ? ?end subroutine hello


### Compiling and testing

system("R CMD COMPILE hello.f90 FCFLAGS=-fopenmp")
system("R CMD SHLIB hello.o")

dyn.load("hello.so")

.Fortran("hello")

### Error message

/home/fmcron/Documentos/Fortran/OpenMP/exemplos/hello.so: undefined symbol: _gfortran_transfer_character_write



Thanks



? ? ? ? F?bio Mathias Corr?a


?? Universidade Estadual de Santa Cruz
Departamento de Ci?ncias Exatas e da Terra - DCET


Campus Soane Nazar? de Andrade, km 16 Rodovia Ilh?us-Itabuna
CEP 45662-900. Ilh?us-Bahia


Tel.: 73-3680-5076?


From edd at debian.org  Sat Jun  8 18:22:56 2013
From: edd at debian.org (Dirk Eddelbuettel)
Date: Sat, 8 Jun 2013 11:22:56 -0500
Subject: [Rd] R CMD INSTALL and file permission settings
Message-ID: <20915.23136.75704.347469@max.nulle.part>


Summary:   

  The directory /usr/local/lib/R/site-library can be used for site-wide
  multi-user installations of R.  

  This is even the default on Debian and Ubuntu (following a suggestion by
  Kurt and Fritz a decade ago over beers -- what could be better).  However,
  R enforces wrong permissions on directories and files there (removing
  group-write) which effectively defeats this purpose, and breaks multiuser
  installation:  if Tom, Dick and Harry are members of group 'r-users', each
  one can install in the directory, but neither can _upgrade_ a package
  installed by one of the others.  

  I would like to correct this.


Details:   

  For a while now, R CMD INSTALL dispatches installation work to the R
  function tools:::.install_packages() from the file tools/install.R. The
  function does a lot of hardcoded 'chmod' with constant arguments:

  edd at max:~/svn/r-devel/src/library/tools/R$ grep Sys.chmod install.R 
                  if (!WINDOWS) Sys.chmod(file.path(dest, files), "755")
                      Sys.chmod(file.path(instdir, f), "644")
                  Sys.chmod(Sys.glob(file.path(instdir, "data", "*")), "644")
              Sys.chmod(Sys.glob(file.path(instdir, "demo", "*")), "644")
                      Sys.chmod(Sys.glob(file.path(instdir, "exec", "*")), "755")
                  Sys.chmod(i2_files[execs], "755")
  edd at max:~/svn/r-devel/src/library/tools/R$ 

  Moreover, it also calls a C function for cleanup cleanup:

  edd at max:~/svn/r-devel/src/library/tools/R$ grep ".Call(dir" install.R 
          .Call(dirchmod, instdir)
                      .Call(dirchmod, ss)
                              .Call(dirchmod, ss)
              ## tree, since the later .Call(dirchmod) call will
  edd at max:~/svn/r-devel/src/library/tools/R$

  which also uses unconditional 644 / 755

      mode_t mask = S_IRUSR | S_IRGRP | S_IROTH | S_IWUSR, /* 0644 */
          dirmask = mask | S_IXUSR | S_IXGRP | S_IXOTH; /* 0755 */


Proposal:

  Add a new option() [with a to-be-determined name] which, if enabled, turns
  on group-write modes for files and directories, ie "664" and "775".  

  One way would be to set two character vars at the beginning of
  _install_packages and to pass a flag to the dirchmod call as so that
  'S_IWGRP' (the 00020 "write by group" permission) can be set.

  I would be happy to write such a patch (including documentation updates) if
  someone from R Core can signal willigness to look at it.


Thanks,  Dirk

-- 
Dirk Eddelbuettel | edd at debian.org | http://dirk.eddelbuettel.com


From andreas.leha at med.uni-goettingen.de  Sat Jun  8 20:41:42 2013
From: andreas.leha at med.uni-goettingen.de (Andreas Leha)
Date: Sat, 8 Jun 2013 20:41:42 +0200
Subject: [Rd] R CMD INSTALL and file permission settings
References: <20915.23136.75704.347469@max.nulle.part>
Message-ID: <87mwr04f89.fsf@med.uni-goettingen.de>

Hi all,

Dirk Eddelbuettel <edd at debian.org> writes:

> Summary:   
>
>   The directory /usr/local/lib/R/site-library can be used for site-wide
>   multi-user installations of R.  
>
>   This is even the default on Debian and Ubuntu (following a suggestion by
>   Kurt and Fritz a decade ago over beers -- what could be better).  However,
>   R enforces wrong permissions on directories and files there (removing
>   group-write) which effectively defeats this purpose, and breaks multiuser
>   installation:  if Tom, Dick and Harry are members of group 'r-users', each
>   one can install in the directory, but neither can _upgrade_ a package
>   installed by one of the others.  
>
>   I would like to correct this.
>

This is just a message from a user who would greatly appreciate such a
change.  We have written a script based on inotify to correct that group
writing permissions which we would gladly dismiss again.

Best,
Andreas


From fabio.ufla at yahoo.com.br  Sun Jun  9 23:50:02 2013
From: fabio.ufla at yahoo.com.br (=?iso-8859-1?Q?Fabio_Mathias_Corr=EAa?=)
Date: Sun, 9 Jun 2013 14:50:02 -0700 (PDT)
Subject: [Rd] Compile error with gfortran-4.6
Message-ID: <1370814602.14747.YahooMailNeo@web120803.mail.ne1.yahoo.com>

Dear prof. Brian Ripley,

Thanks for help!

I compiled using the command:


MAKEFLAGS="FCFLAGS=-fopenmp" R CMD SHLIB hello.f90


I use linux mint Maya, R 3.0.1 and gfortran 4.6.3.

Thanks,

?
? ? ? ? F?bio Mathias Corr?a


?? Universidade Estadual de Santa Cruz
Departamento de Ci?ncias Exatas e da Terra - DCET
Campus Soane Nazar? de Andrade, km 16 Rodovia Ilh?us-Itabuna
CEP 45662-900. Ilh?us-Bahia


Tel.: 73-3680-5076


From simon.urbanek at r-project.org  Mon Jun 10 01:43:47 2013
From: simon.urbanek at r-project.org (Simon Urbanek)
Date: Sun, 9 Jun 2013 19:43:47 -0400
Subject: [Rd] Compile error with gfortran-4.6
In-Reply-To: <1370814602.14747.YahooMailNeo@web120803.mail.ne1.yahoo.com>
References: <1370814602.14747.YahooMailNeo@web120803.mail.ne1.yahoo.com>
Message-ID: <73C134D1-18EE-42AB-9A65-2A06F364107E@r-project.org>

On Jun 9, 2013, at 5:50 PM, Fabio Mathias Corr?a wrote:

> Dear prof. Brian Ripley,
> 
> Thanks for help!
> 
> I compiled using the command:
> 
> 
> MAKEFLAGS="FCFLAGS=-fopenmp" R CMD SHLIB hello.f90
> 

Obviously, that won't work. Not only are you abusing MAKEFLAGS for something that it's not designed to (please consider reading the manual and set the proper PKG_* flags instead), but you fail to link with openmp. Also even if you link properly, depending on the runtime you may need R configured with openmp support as well. Again, please read the manual about how to use the proper *_OPENMP_* flags (go figure, the section mentioning all this is even named "OpenMP support" ;)).

Cheers,
S



> 
> I use linux mint Maya, R 3.0.1 and gfortran 4.6.3.
> 
> Thanks,
> 
>  
>         F?bio Mathias Corr?a
> 
> 
>    Universidade Estadual de Santa Cruz
> Departamento de Ci?ncias Exatas e da Terra - DCET
> Campus Soane Nazar? de Andrade, km 16 Rodovia Ilh?us-Itabuna
> CEP 45662-900. Ilh?us-Bahia
> 
> 
> Tel.: 73-3680-5076
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
> 
> 


From ripley at stats.ox.ac.uk  Mon Jun 10 10:38:25 2013
From: ripley at stats.ox.ac.uk (Prof Brian Ripley)
Date: Mon, 10 Jun 2013 09:38:25 +0100
Subject: [Rd] col2rgb, factors & documentation
In-Reply-To: <8A85383B-7A1F-46CF-8C31-5BFEADC610DD@depauw.edu>
References: <8A85383B-7A1F-46CF-8C31-5BFEADC610DD@depauw.edu>
Message-ID: <51B59081.9000005@stats.ox.ac.uk>

On 07/06/2013 18:59, Bryan Hanson wrote:
> Hello Core Folk.

This is the R-devel list.  Bug reports/enhancement suggestions should go 
to bugs.r-project.org.

> Quite by accident I discovered today that col2rgb, when fed factors, acts on the integer representation of those factors:
>
> td <- as.factor(rainbow(5)) # not how I discovered the issue!
> td
> res <- col2rgb(td)
> res
> # but
> col2rgb("#FF0000FF") # this is td[1] but does not produce the same answer
> res[,1]
> # moreover
> as.integer(td)
> col2rgb(5) # the integer value of the first level
> # and this is res[,1] which by the way is palette()[5], aka "cyan"
>
> ?col2rgb says:
> col	
> vector of any of the three kinds of R color specifications, i.e., either a color name (as listed by colors()), a hexadecimal string of the form "#rrggbb" or "#rrggbbaa" (see rgb), or a positive integer i meaning palette()[i]. Non-numeric values are coerced to character.
>
> So in the example the factor is being taken as its integer representation, and finding an integer as the input value, col2rgb goes to palette().
>
> Perhaps this is a nuance that belongs in the documentation?

It has been like that since at least R 2.0.0.  I'll rephrase the help 
and change to coercion to character.


>
> Thanks, Bryan
> ***********
> Bryan Hanson
> Professor of Chemistry & Biochemistry
> DePauw University
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>


-- 
Brian D. Ripley,                  ripley at stats.ox.ac.uk
Professor of Applied Statistics,  http://www.stats.ox.ac.uk/~ripley/
University of Oxford,             Tel:  +44 1865 272861 (self)
1 South Parks Road,                     +44 1865 272866 (PA)
Oxford OX1 3TG, UK                Fax:  +44 1865 272595


From maechler at stat.math.ethz.ch  Mon Jun 10 11:44:57 2013
From: maechler at stat.math.ethz.ch (Martin Maechler)
Date: Mon, 10 Jun 2013 11:44:57 +0200
Subject: [Rd] R CMD INSTALL and file permission settings
In-Reply-To: <20915.23136.75704.347469@max.nulle.part>
References: <20915.23136.75704.347469@max.nulle.part>
Message-ID: <20917.40985.705751.95999@stat.math.ethz.ch>

>>>>> Dirk Eddelbuettel <edd at debian.org>
>>>>>     on Sat, 8 Jun 2013 11:22:56 -0500 writes:

    > Summary:   

    > The directory /usr/local/lib/R/site-library can be used for site-wide
    > multi-user installations of R.  

    > This is even the default on Debian and Ubuntu (following a suggestion by
    > Kurt and Fritz a decade ago over beers -- what could be better).  However,
    > R enforces wrong permissions on directories and files there (removing
    > group-write) which effectively defeats this purpose, and breaks multiuser
    > installation:  if Tom, Dick and Harry are members of group 'r-users', each
    > one can install in the directory, but neither can _upgrade_ a package
    > installed by one of the others.  

    > I would like to correct this.


    > Details:   

[..........]


    > Proposal:

    > Add a new option() [with a to-be-determined name] which, if enabled, turns
    > on group-write modes for files and directories, ie "664" and "775".  

[.........]

    > I would be happy to write such a patch (including documentation updates) if
    > someone from R Core can signal willigness to look at it.

"signal!"
:-)

Regards, 
Martin


From simon.urbanek at r-project.org  Mon Jun 10 14:18:30 2013
From: simon.urbanek at r-project.org (Simon Urbanek)
Date: Mon, 10 Jun 2013 08:18:30 -0400
Subject: [Rd] dmvnorm
In-Reply-To: <20130606060622.GS3712@tailwind>
References: <20130606060622.GS3712@tailwind>
Message-ID: <5BAC702E-DC62-467A-BF2C-AE8C2B4E1D24@r-project.org>


On Jun 6, 2013, at 2:06 AM, Joshua N Pritikin wrote:

> Summary:
> 
> + I am writing an R extension that needs to call dmvnorm more than 
> 10,000 times during a model fitting computation.
> 
> + My extension uses openmp for parallel execution.
> 
> + As of R 3.0, it is no longer permitted for threads to call the R 
> interpreter because there is a stack overflow check that always trips 
> because the thread's stack is different from what R is expecting.
> 

You can call the interpreter from threads, you just have to make sure your access is properly synchronized and you disable the stack check. This is not new on R 3.0, this was always the case. However this is irrelevant to what you are describing above, because it doesn't make any sense to serial code in OpenMP.


> + Therefore, I need a C version of dmvnorm.
> 

C version alone is not sufficient, if you want to use it in threads, you would need a thread-safe version. This means that you really need your own version, so I don't think adding C version of dmvnorm to R has necessarily any bearing to what you are trying to do.

Cheers,
Simon



> + The mvtnorm package maintainer is not interested in 
> R_RegisterCCallable.
> 
> Can a C version of dmvnorm get added to the R core?
> 
> -- 
> Joshua N. Pritikin
> Department of Psychology
> University of Virginia
> 485 McCormick Rd, Gilmer Hall Room 102
> Charlottesville, VA 22904
> http://people.virginia.edu/~jnp3bc
> 
> From: Torsten Hothorn <Torsten.Hothorn at uzh.ch>
> Date: June 5, 2013 9:26:03 AM EDT
> To: Joshua N Pritikin <jpritikin at pobox.com>
> Subject: Re: dmvnorm
> 
> 
> 
> On Mon, 3 Jun 2013, Joshua N Pritikin wrote:
> 
>> On Mon, Jun 03, 2013 at 03:24:54PM +0200, Torsten Hothorn wrote:
>>> On Sat, 1 Jun 2013, Joshua N Pritikin wrote:
>>>> On Fri, May 31, 2013 at 07:22:52PM +0200, Torsten Hothorn wrote:
>>>>> - what exactly is the advantage of using C? How much time / memory can be
>>>>> saved?
>>>> 
>>>> I bet the difference will only appear in micro-benchmarks. There is
>>>> probably no real world impact.
>>>> 
>>>> As I said, the main reason I wrote this is because I need to call
>>>> dmvnorm from C.
>>> 
>>> I see -- so now that you have the C code ready, why do we need it to
>>> be part of mvtnorm?
>> 
>> I want to share. What if somebody else has the same need?
> 
> sure, but interfacing C code from other packages is always troublesome (at least this is my experience). I can't see any advantage for mvtnorm, so I think one should put the code somewhere else.
> 
>> 
>> Should I submit it to the R core?
>> 
> 
> I suggest that, yes. Maybe R core is keen to add the multivariate normal density to R's C API. This would be the easiest way to make your code accessible.
> 
> Best,
> 
> Torsten
> 
>> -- 
>> Joshua N. Pritikin
>> Department of Psychology
>> University of Virginia
>> 485 McCormick Rd, Gilmer Hall Room 102
>> Charlottesville, VA 22904
>> http://people.virginia.edu/~jnp3bc
>> 
> 
> 
> <dmvnorm.patch>______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From bbolker at gmail.com  Tue Jun 11 04:03:37 2013
From: bbolker at gmail.com (Ben Bolker)
Date: Mon, 10 Jun 2013 22:03:37 -0400
Subject: [Rd] load/unload segfault puzzle
Message-ID: <51B68579.6070505@mcmaster.ca>


  Dear r-devel readers,

  I have a pretty deep problem with package loading and unloading in
the development version of the lme4 package
<https://github.com/lme4/lme4>; it's not boiled down to a properly
minimal example yet (this has been difficult), but I am posting anyway
in the hopes that someone has ideas about how to proceed farther,
since I'm nearly stumped. Apologies in advance for the long post.

   EXECUTIVE SUMMARY: after one cycle of loading, testing (e.g. by
running example(lmer)) and unloading lme4, then loading and unloading
the nlme package, re-loading and exercising lme4 becomes very
unstable, leading eventually to a segmentation fault.  More detail is
available at <https://github.com/lme4/lme4/issues/35> .  Because it's
a segmentation fault, exactly _where_ the crash happens varies a bit
according to platform and precise incantation, but it seems I can
always get a segfault eventually.

  We had previously forgotten to write a .onUnload() function to call
library.dynam.unload() [it's not entirely clear to me why R handles
dynamic loading automatically when there is a useDynLib() in the
NAMESPACE, but not unloading: does anyone know if this is
intentional?]; before we had the appropriate unloading hook, instead
of segfaults we got errors about objects from the DLL not being found.

  The package has many complexities that might make it an especially
tough case: it uses reference classes as well as making use of the
Rcpp and RcppEigen packages ...

  I have tried running under valgrind and have seen what appear to be
memory leaks but no memory access errors. The beginning and end of the
valgrind output are appended below -- I can send the full output if
anyone wants to see it ...

  I plan to continue to try to isolate the problem by (1) minimizing
the amount of package-exercising code run between loading and
unloading; (2) trying to create a minimal version of the package. In
the meantime if anyone can think of any shortcuts or clever
diagnostics I would love to hear about it ...

  thanks
    Ben Bolker


--24640-- Valgrind options:
--24640--    --suppressions=/usr/lib/valgrind/debian-libc6-dbg.supp
--24640--    -v
--24640--    --leak-check=full

==24640== LEAK SUMMARY:
==24640==    definitely lost: 80 bytes in 2 blocks
==24640==    indirectly lost: 240 bytes in 20 blocks
==24640==      possibly lost: 56,014,306 bytes in 32,200 blocks
==24640==    still reachable: 11,032,257 bytes in 993 blocks
==24640==         suppressed: 0 bytes in 0 blocks
==24640== Reachable blocks (those to which a pointer was found) are
not shown.
==24640== To see them, rerun with: --leak-check=full --show-reachable=yes
==24640==
==24640== ERROR SUMMARY: 2493 errors from 2493 contexts (suppressed:
151 from 11)
--24640--
--24640-- used_suppression:    151 dl-hack3-cond-1
==24640==
==24640== ERROR SUMMARY: 2493 errors from 2493 contexts (suppressed:
151 from 11)


From jgrn at illinois.edu  Mon Jun 10 18:23:56 2013
From: jgrn at illinois.edu (Jonathan Greenberg)
Date: Mon, 10 Jun 2013 11:23:56 -0500
Subject: [Rd] Policy/best practices on renaming functions in packages
Message-ID: <CABG0rfv+9YTujngdCH-b11iouX+VnJtXjFWue2d083TXrKY3GQ@mail.gmail.com>

R-developers:

I'm beginning to work on a manuscript for a set of functions I
developed for a package I have on CRAN (spatial.tools), and I'd like
to rename a function in my package to give a better idea of what it
does prior to manuscript submission -- is there a "safe" way to do a
backwards-compatible rename of a function within a CRAN package (so
functions that rely on the original name aren't broken)?  Is it as
simple as:

new_name <- old_name <- function(yadda)
{

}

In general, I'd just leave it as is, but the old name of the function
was a reference to an existing function in another package that it no
longer has any resemblance to.

Thanks!

--j

--
Jonathan A. Greenberg, PhD
Assistant Professor
Global Environmental Analysis and Remote Sensing (GEARS) Laboratory
Department of Geography and Geographic Information Science
University of Illinois at Urbana-Champaign
607 South Mathews Avenue, MC 150
Urbana, IL 61801
Phone: 217-300-1924
http://www.geog.illinois.edu/~jgrn/
AIM: jgrn307, MSN: jgrn307 at hotmail.com, Gchat: jgrn307, Skype: jgrn3007


From laurent.gatto at gmail.com  Tue Jun 11 13:02:39 2013
From: laurent.gatto at gmail.com (Laurent Gatto)
Date: Tue, 11 Jun 2013 12:02:39 +0100
Subject: [Rd] Policy/best practices on renaming functions in packages
In-Reply-To: <CABG0rfv+9YTujngdCH-b11iouX+VnJtXjFWue2d083TXrKY3GQ@mail.gmail.com>
References: <CABG0rfv+9YTujngdCH-b11iouX+VnJtXjFWue2d083TXrKY3GQ@mail.gmail.com>
Message-ID: <CA+uNOzgTS2k2tTX_RK5x8Zg5eMXvqR7+XA8N-7ykstekDK66Mw@mail.gmail.com>

On 10 June 2013 17:23, Jonathan Greenberg <jgrn at illinois.edu> wrote:
> R-developers:
>
> I'm beginning to work on a manuscript for a set of functions I
> developed for a package I have on CRAN (spatial.tools), and I'd like
> to rename a function in my package to give a better idea of what it
> does prior to manuscript submission -- is there a "safe" way to do a
> backwards-compatible rename of a function within a CRAN package (so
> functions that rely on the original name aren't broken)?  Is it as
> simple as:
>
> new_name <- old_name <- function(yadda)
> {
>
> }
>
> In general, I'd just leave it as is, but the old name of the function
> was a reference to an existing function in another package that it no
> longer has any resemblance to.

I think that the recommended way is to start with base::.Deprecated
and then more on with base::Defunct.

This guide, http://bioconductor.org/developers/how-to/deprecation/,
although from the Bioconductor project, might be helpful.

Best wishes,

Laurent

> Thanks!
>
> --j
>
> --
> Jonathan A. Greenberg, PhD
> Assistant Professor
> Global Environmental Analysis and Remote Sensing (GEARS) Laboratory
> Department of Geography and Geographic Information Science
> University of Illinois at Urbana-Champaign
> 607 South Mathews Avenue, MC 150
> Urbana, IL 61801
> Phone: 217-300-1924
> http://www.geog.illinois.edu/~jgrn/
> AIM: jgrn307, MSN: jgrn307 at hotmail.com, Gchat: jgrn307, Skype: jgrn3007
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel



--
[ Laurent Gatto | slashhome.be ]


From bbolker at gmail.com  Wed Jun 12 19:47:55 2013
From: bbolker at gmail.com (Ben Bolker)
Date: Wed, 12 Jun 2013 17:47:55 +0000
Subject: [Rd] load/unload segfault puzzle
References: <51B68579.6070505@mcmaster.ca>
Message-ID: <loom.20130612T194521-603@post.gmane.org>

Ben Bolker <bbolker <at> gmail.com> writes:

> 
> 
>   Dear r-devel readers,
> 
>   I have a pretty deep problem with package loading and unloading in
> the development version of the lme4 package
> <https://github.com/lme4/lme4>; it's not boiled down to a properly
> minimal example yet (this has been difficult), but I am posting anyway
> in the hopes that someone has ideas about how to proceed farther,
> since I'm nearly stumped. Apologies in advance for the long post.
> 
>    EXECUTIVE SUMMARY: after one cycle of loading, testing (e.g. by
> running example(lmer)) and unloading lme4, then loading and unloading
> the nlme package, re-loading and exercising lme4 becomes very
> unstable, leading eventually to a segmentation fault.  More detail is
> available at <https://github.com/lme4/lme4/issues/35> .  Because it's
> a segmentation fault, exactly _where_ the crash happens varies a bit
> according to platform and precise incantation, but it seems I can
> always get a segfault eventually.
> 

 [snip]

  UPDATE: after some useful advice off-list, I tried with a
fully valgrind-instrumented version of R.  No suspicious memory
accesses occurred until the very end, right before the crash:

Attempt #1
loading lme4 
loaded DLLs: Rcpp RcppEigen minqa lme4 
detaching lme4 


==18150== Jump to the invalid address stated on the next line
==18150==    at 0x9E46D00: ???
==18150==    by 0x410AB8A: RunFinalizers (memory.c:1357)
==18150==    by 0x410D314: R_gc_internal (memory.c:2709)
==18150==    by 0x410E73C: Rf_allocVector (memory.c:2421)
==18150==    by 0x4153D30: ReadItem (serialize.c:1685)
==18150==    by 0x4152D6D: ReadBC1 (serialize.c:1825)
==18150==    by 0x4153983: ReadItem (serialize.c:1851)
==18150==    by 0x41531C0: ReadItem (serialize.c:1601)
==18150==    by 0x41531A1: ReadItem (serialize.c:1599)
==18150==    by 0x41531C0: ReadItem (serialize.c:1601)
==18150==    by 0x41531C0: ReadItem (serialize.c:1601)
==18150==    by 0x41531C0: ReadItem (serialize.c:1601)
==18150==  Address 0x9e46d00 is not stack'd, malloc'd or (recently) free'd
==18150== 

  Does this suggest anything to anyone, or is it just the
final symptom of a mysterious problem that occurred earlier ... ?


From murdoch.duncan at gmail.com  Wed Jun 12 20:36:29 2013
From: murdoch.duncan at gmail.com (Duncan Murdoch)
Date: Wed, 12 Jun 2013 14:36:29 -0400
Subject: [Rd] load/unload segfault puzzle
In-Reply-To: <loom.20130612T194521-603@post.gmane.org>
References: <51B68579.6070505@mcmaster.ca>
	<loom.20130612T194521-603@post.gmane.org>
Message-ID: <51B8BFAD.3040604@gmail.com>

On 13-06-12 1:47 PM, Ben Bolker wrote:
> Ben Bolker <bbolker <at> gmail.com> writes:
>
>>
>>
>>    Dear r-devel readers,
>>
>>    I have a pretty deep problem with package loading and unloading in
>> the development version of the lme4 package
>> <https://github.com/lme4/lme4>; it's not boiled down to a properly
>> minimal example yet (this has been difficult), but I am posting anyway
>> in the hopes that someone has ideas about how to proceed farther,
>> since I'm nearly stumped. Apologies in advance for the long post.
>>
>>     EXECUTIVE SUMMARY: after one cycle of loading, testing (e.g. by
>> running example(lmer)) and unloading lme4, then loading and unloading
>> the nlme package, re-loading and exercising lme4 becomes very
>> unstable, leading eventually to a segmentation fault.  More detail is
>> available at <https://github.com/lme4/lme4/issues/35> .  Because it's
>> a segmentation fault, exactly _where_ the crash happens varies a bit
>> according to platform and precise incantation, but it seems I can
>> always get a segfault eventually.
>>
>
>   [snip]
>
>    UPDATE: after some useful advice off-list, I tried with a
> fully valgrind-instrumented version of R.  No suspicious memory
> accesses occurred until the very end, right before the crash:
>
> Attempt #1
> loading lme4
> loaded DLLs: Rcpp RcppEigen minqa lme4
> detaching lme4
>
>
> ==18150== Jump to the invalid address stated on the next line
> ==18150==    at 0x9E46D00: ???
> ==18150==    by 0x410AB8A: RunFinalizers (memory.c:1357)
> ==18150==    by 0x410D314: R_gc_internal (memory.c:2709)
> ==18150==    by 0x410E73C: Rf_allocVector (memory.c:2421)
> ==18150==    by 0x4153D30: ReadItem (serialize.c:1685)
> ==18150==    by 0x4152D6D: ReadBC1 (serialize.c:1825)
> ==18150==    by 0x4153983: ReadItem (serialize.c:1851)
> ==18150==    by 0x41531C0: ReadItem (serialize.c:1601)
> ==18150==    by 0x41531A1: ReadItem (serialize.c:1599)
> ==18150==    by 0x41531C0: ReadItem (serialize.c:1601)
> ==18150==    by 0x41531C0: ReadItem (serialize.c:1601)
> ==18150==    by 0x41531C0: ReadItem (serialize.c:1601)
> ==18150==  Address 0x9e46d00 is not stack'd, malloc'd or (recently) free'd
> ==18150==
>
>    Does this suggest anything to anyone, or is it just the
> final symptom of a mysterious problem that occurred earlier ... ?

Have you registered a finalizer on any of your objects?  The trace 
indicates that the garbage collector was trying to run one, and the 
registered address was invalid.  If your R version is the same as the 
current R-devel or R-patched memory.c, this is on a line that is running 
R_WeakRefFinalizer, but the message doesn't look exactly right for that: 
  it looks as though it is asking for an indirect jump to 0x9E46D00, and 
the current line memory.c:1357 doesn't do that.

Duncan Murdoch


From bbolker at gmail.com  Thu Jun 13 03:53:55 2013
From: bbolker at gmail.com (Ben Bolker)
Date: Wed, 12 Jun 2013 21:53:55 -0400
Subject: [Rd] load/unload segfault puzzle
In-Reply-To: <51B8FF91.7000107@gmail.com>
References: <51B68579.6070505@mcmaster.ca>
	<loom.20130612T194521-603@post.gmane.org>
	<51B8FF91.7000107@gmail.com>
Message-ID: <51B92633.2020704@gmail.com>

On 13-06-12 07:09 PM, Duncan Murdoch wrote:
> On 13-06-12 1:47 PM, Ben Bolker wrote:
>> Ben Bolker <bbolker <at> gmail.com> writes:
>>
>>>
>>>
>>>    Dear r-devel readers,
>>>
>>>    I have a pretty deep problem with package loading and unloading in
>>> the development version of the lme4 package
>>> <https://github.com/lme4/lme4>; it's not boiled down to a properly
>>> minimal example yet (this has been difficult), but I am posting anyway
>>> in the hopes that someone has ideas about how to proceed farther,
>>> since I'm nearly stumped. Apologies in advance for the long post.
>>>
>>>     EXECUTIVE SUMMARY: after one cycle of loading, testing (e.g. by
>>> running example(lmer)) and unloading lme4, then loading and unloading
>>> the nlme package, re-loading and exercising lme4 becomes very
>>> unstable, leading eventually to a segmentation fault.  More detail is
>>> available at <https://github.com/lme4/lme4/issues/35> .  Because it's
>>> a segmentation fault, exactly _where_ the crash happens varies a bit
>>> according to platform and precise incantation, but it seems I can
>>> always get a segfault eventually.
>>>
>>
>>   [snip]
>>
>>    UPDATE: after some useful advice off-list, I tried with a
>> fully valgrind-instrumented version of R.  No suspicious memory
>> accesses occurred until the very end, right before the crash:
>>
>> Attempt #1
>> loading lme4
>> loaded DLLs: Rcpp RcppEigen minqa lme4
>> detaching lme4
>>
>>
>> ==18150== Jump to the invalid address stated on the next line
>> ==18150==    at 0x9E46D00: ???
>> ==18150==    by 0x410AB8A: RunFinalizers (memory.c:1357)
>> ==18150==    by 0x410D314: R_gc_internal (memory.c:2709)
>> ==18150==    by 0x410E73C: Rf_allocVector (memory.c:2421)
>> ==18150==    by 0x4153D30: ReadItem (serialize.c:1685)
>> ==18150==    by 0x4152D6D: ReadBC1 (serialize.c:1825)
>> ==18150==    by 0x4153983: ReadItem (serialize.c:1851)
>> ==18150==    by 0x41531C0: ReadItem (serialize.c:1601)
>> ==18150==    by 0x41531A1: ReadItem (serialize.c:1599)
>> ==18150==    by 0x41531C0: ReadItem (serialize.c:1601)
>> ==18150==    by 0x41531C0: ReadItem (serialize.c:1601)
>> ==18150==    by 0x41531C0: ReadItem (serialize.c:1601)
>> ==18150==  Address 0x9e46d00 is not stack'd, malloc'd or (recently)
>> free'd
>> ==18150==
>>
>>    Does this suggest anything to anyone, or is it just the
>> final symptom of a mysterious problem that occurred earlier ... ?
> 
> One other suggestion: run under gctorture().  This will make it very
> slow, but might trigger the fault earlier.
> 
> Duncan Murdoch
> 

  Yes, thanks -- Bill Dunlap already suggested this.  Your and Bill's
warning about how slow gctorture makes things is correct -- I gave up
after running for 3.5 hours when it had gotten only partway through
loading the Matrix package; I will have to find a machine with a decent
cooling system (i.e. not my laptop) where I can replicate the error.
  I've just re-run the regular valgrind, with a fresh build right after
an SVN update.  I got exactly the same results as above.  We're
certainly *not* calling reg.finalizer() anywhere in our package, and I
don't think Rcpp or RcppEigen or minqa do ... there looks to be some
kind of default finalization done on the reference class objects (based
on running 'strings' on the object files ...
  I tried gdb'ing in and setting a breakpoint at memory.c:1357, but this
breakpoint gets hit a lot, and I'm sort of stabbing in the dark at this
point.

   Ben Bolker


From rory.winston at gmail.com  Thu Jun 13 12:55:44 2013
From: rory.winston at gmail.com (Rory Winston)
Date: Thu, 13 Jun 2013 20:55:44 +1000
Subject: [Rd] load/unload segfault puzzle
In-Reply-To: <mailman.35.1371117609.3499.r-devel@r-project.org>
References: <mailman.35.1371117609.3499.r-devel@r-project.org>
Message-ID: <7353B511-62FF-4FEA-AA9D-8BFBBD4F985D@gmail.com>

Ben

Have you compiled R form source yourself? If so, I would be tempted to mark up memory. c with some debug log statements - especially around line 1357, and possibly inside the finalizers function as it attempts to run the C finalizers....not pretty I know, but may be the quickest approach to quickly identify whats failing...
Cheers
-- Rory


> 

>  Yes, thanks -- Bill Dunlap already suggested this.  Your and Bill's
> warning about how slow gctorture makes things is correct -- I gave up
> after running for 3.5 hours when it had gotten only partway through
> loading the Matrix package; I will have to find a machine with a decent
> cooling system (i.e. not my laptop) where I can replicate the error.
>  I've just re-run the regular valgrind, with a fresh build right after
> an SVN update.  I got exactly the same results as above.  We're
> certainly *not* calling reg.finalizer() anywhere in our package, and I
> don't think Rcpp or RcppEigen or minqa do ... there looks to be some
> kind of default finalization done on the reference class objects (based
> on running 'strings' on the object files ...
>  I tried gdb'ing in and setting a breakpoint at memory.c:1357, but this
> breakpoint gets hit a lot, and I'm sort of stabbing in the dark at this
> point.
> 
>   Ben Bolker
> 
> 
> 
> ------------------------------
> 
> _______________________________________________
> R-devel at r-project.org mailing list  DIGESTED
> https://stat.ethz.ch/mailman/listinfo/r-devel
> 
> 
> End of R-devel Digest, Vol 124, Issue 12
> ****************************************


From wdunlap at tibco.com  Thu Jun 13 16:34:29 2013
From: wdunlap at tibco.com (William Dunlap)
Date: Thu, 13 Jun 2013 14:34:29 +0000
Subject: [Rd] load/unload segfault puzzle
In-Reply-To: <7353B511-62FF-4FEA-AA9D-8BFBBD4F985D@gmail.com>
References: <mailman.35.1371117609.3499.r-devel@r-project.org>
	<7353B511-62FF-4FEA-AA9D-8BFBBD4F985D@gmail.com>
Message-ID: <E66794E69CFDE04D9A70842786030B931C30295F@PA-MBX01.na.tibco.com>

You can also read the process map table in /proc/<pid>/maps to see which
shared object is associated with the illegal address that valgrind identified.
Read the map table after each load or unload of a *.so with
   map <- readProcessMaps()
and use something like
   subset(map, startAddr <= badAddr & badAddr < endAddr)
to see where the bad address  is.  The "<BSS>" lines are uninitialized memory
required by a shared object (or executable), I believe the object mentioned
in the previous line.  A shared object may have a _fini procedure that refers to
an address in a shared object that got unloaded (_fini might call C++ destructors).

Here is some code to read the map table for the current process.  I did a quick
check of the code on both 32- and 64-bit Linux.  My 32-bit machine does not
have a recent version of R on it so there is some wierd code to work around that.

readProcessMaps <- function()
{
    # Read /proc/$CWD/maps into a data.frame.  This shows which
    # memory addresses are associated with which shared objects
    # at the current time.
    #
    # there are some hacks to make this work in R-2.10.1 (2009), the only
    # version I have compiled for 32-bit Linux.
    #   * as.hexmode() only accepted a scalar
    #   * read.table() did not have a text= argument
    txt <- readLines(file.path("/proc", Sys.getpid(), "maps"))
    nFields <- count.fields(textConnection(txt))
    txt[nFields == 5] <- paste(txt[nFields == 5], "<BSS>")
    txt <- sub("-", " ", txt)
    colNames <- c("startAddr", "endAddr", "perms", "offset", "dev", "inode", "pathname")
    # retval <- read.table(text=txt, col.names=colNames, colClasses="character")
    retval <- read.table(textConnection(txt), col.names=colNames, colClasses="character")
    hex64StringToDouble <- function(s) {
        # as.hexmode only works up to 2^31-1, so we
        # convert 64-bit address nibble by nibble into a double.
        n <- nchar(s)
        acc <- numeric(length(s))
        for(shift in (0:3)*16) {
            # nibble <- as.integer(as.hexmode(substring(s, n-3, n)))
            nibble <- as.integer(sapply(substring(s, n-3, n), as.hexmode))
            n <- n - 4
            acc <- acc + 2^shift * nibble
        }
        acc
    }
    retval[["startAddr"]] <- hex64StringToDouble(retval[["startAddr"]])
    retval[["endAddr"]] <- hex64StringToDouble(retval[["endAddr"]])
    retval
}

Bill Dunlap
Spotfire, TIBCO Software
wdunlap tibco.com


> -----Original Message-----
> From: r-devel-bounces at r-project.org [mailto:r-devel-bounces at r-project.org] On Behalf
> Of Rory Winston
> Sent: Thursday, June 13, 2013 3:56 AM
> To: r-devel at r-project.org
> Subject: Re: [Rd] load/unload segfault puzzle
> 
> Ben
> 
> Have you compiled R form source yourself? If so, I would be tempted to mark up
> memory. c with some debug log statements - especially around line 1357, and possibly
> inside the finalizers function as it attempts to run the C finalizers....not pretty I know, but
> may be the quickest approach to quickly identify whats failing...
> Cheers
> -- Rory
> 
> 
> >
> 
> >  Yes, thanks -- Bill Dunlap already suggested this.  Your and Bill's
> > warning about how slow gctorture makes things is correct -- I gave up
> > after running for 3.5 hours when it had gotten only partway through
> > loading the Matrix package; I will have to find a machine with a decent
> > cooling system (i.e. not my laptop) where I can replicate the error.
> >  I've just re-run the regular valgrind, with a fresh build right after
> > an SVN update.  I got exactly the same results as above.  We're
> > certainly *not* calling reg.finalizer() anywhere in our package, and I
> > don't think Rcpp or RcppEigen or minqa do ... there looks to be some
> > kind of default finalization done on the reference class objects (based
> > on running 'strings' on the object files ...
> >  I tried gdb'ing in and setting a breakpoint at memory.c:1357, but this
> > breakpoint gets hit a lot, and I'm sort of stabbing in the dark at this
> > point.
> >
> >   Ben Bolker
> >
> >
> >
> > ------------------------------
> >
> > _______________________________________________
> > R-devel at r-project.org mailing list  DIGESTED
> > https://stat.ethz.ch/mailman/listinfo/r-devel
> >
> >
> > End of R-devel Digest, Vol 124, Issue 12
> > ****************************************
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From htl10 at users.sourceforge.net  Thu Jun 13 16:40:13 2013
From: htl10 at users.sourceforge.net (Hin-Tak Leung)
Date: Thu, 13 Jun 2013 15:40:13 +0100 (BST)
Subject: [Rd] new window cairo bundle Re: R/Sweave/cairo/freetype bug
	fix.
In-Reply-To: <1364911302.48242.YahooMailClassic@web172304.mail.ir2.yahoo.com>
Message-ID: <1371134413.44971.YahooMailClassic@web172306.mail.ir2.yahoo.com>

Freetype 2.4.12 was released in early May. Just so that we are clear that this is a freetype bug which affects R's use of Cairo (among other things). So there are updated bundles, and also bundles for Mac OS X as well, for both a patched 2.4.11 and 2.4.12 proper. The accompanying *.txt has a listing of versions.

http://sourceforge.net/projects/outmodedbonsai/files/R/

Unix users should just upgrade. I'll get round to build R 2.15.3 (or 2.15.x) for windows and Mac OS X at some stage, but if somebody want to beat me to it, please feel free to do so.

--- On Tue, 2/4/13, Hin-Tak Leung <htl10 at users.sourceforge.net> wrote:

> --- On Mon, 1/4/13, Hin-Tak Leung
> <htl10 at users.sourceforge.net>
> wrote:
> > --- On Sat, 30/3/13, Hin-Tak Leung
> > <htl10 at users.sourceforge.net>
> > wrote:
> > 
> > > "... was committed to freetype in January and will
> form
> > the
> > > next release (2.4.12)". 
> > 
> > It is perhaps worth repeating the quote:? 'The
> official
> > R binaries for windows ... are compiled against static
> > libraries of cairo 1.10.2 ... are firmly in the "do not
> work
> > correctly" category'
> > 
> > The minimum version of cairo to work being 1.11.2. On
> closer
> > examination, the official bundle (http://www.rforge.net/Cairo/files/cairo-current-win.tar.gz)
> > is built with neither fontconfig nor freetype. So even
> if it
> > is bumped to current version (1.12.x), it does not
> work
> > correctly.
> 
> Here is a drop-in replacement for the above:
> http://sourceforge.net/projects/outmodedbonsai/files/R/cairo-1.12.14%2Bft%2Bfc-win.tar.gz
> 
> Besides being over 2 years more up-to-date, cairo (1.12.14)
> is also built with fontconfig and freetype enabled, and
> freetype being 2.4.11 + back-ported patch (https://bugzilla.redhat.com/show_bug.cgi?id=891457#c35)
> so at least there is a a better chance of R working
> correctly.
> 
> The full list of the tar ball is (a superset of the above,
> due to addition of fontconfig and freetype and their
> dependencies):
> -------
> cairo-1.12.14
> pixman-0.26.2
> libpng-1.5.13
> zlib-1.2.7
> fontconfig-2.10.1
> freetype-2.4.11 (patched)
> glib2-2.34.3
> expat-2.1.0
> bzip2-1.0.6
> libffi-3.0.11
> gettext-0.18.2
> ---------
> This allows the C-based cairo bug demo (#c10) to build so I
> am sure it is sufficient for building windows R. At some
> stage I'll rebuild a less-buggy R 2.15.3 for windows, but
> not for a few weeks so if somebody wants to beat me to it,
> please feel free to do so.
> 
> > Perhaps also wasn't clear in the bugzilla thread -
> everybody
> > from fontconfig/cairo/freetype involved knew it being
> the
> > issue so it has never been explicitly spelled out -
> the
> > problem was (is) with cairo's pdf/ps generation, aided
> by
> > freetype.
> > 
> > > ------------------------------
> > > On Sat, Mar 30, 2013 18:54 GMT Simon Urbanek
> wrote:
> > > 
> > > >On Mar 30, 2013, at 9:24 AM, Hin-Tak Leung
> wrote:
> > > >
> > > >> Perhaps that's too much details. There
> is
> > (will be)
> > > a new freetype because of cairo's unanticipated
> usage
> > (which
> > > R uses, among other cairo users). Most people
> should
> > upgrade
> > > or request an upgrade eventually, when they are
> > > comfortable.
> > > >> 
> > > >
> > > >Which versions are affected? R binary for OS
> X
> > uses
> > > freetype 2.4.11 (and cairo 1.12.14) so I just need
> to
> > know
> > > if there is an action item.
> > > >
> > > >Thanks,
> > > >SImon
> > > >
> > > >
> > > >
> > > >> --- On Sat, 30/3/13, peter dalgaard
> <pdalgd at gmail.com>
> > > wrote:
> > > >> 
> > > >> Huh?
> > > >> 
> > > >> This is utterly incomprehensible without
> > reading
> > > the redhat
> > > >> bugzilla, and even after reading, I'm not
> sure
> > what
> > > the
> > > >> issue is. Something with bold Chinese
> fonts in
> > X11,
> > > but
> > > >> maybe also affecting Latin fonts, ....?
> > > >> 
> > > >> Please explain yourself.
> > > >> 
> > > >> -pd
> > > >> 
> > > >> On Mar 30, 2013, at 09:25 , Hin-Tak
> Leung
> > wrote:
> > > >> 
> > > >>> The problem was first seen with
> R/Sweave
> > (#c0)
> > > then
> > > >> reproduced directly with cairo (#c10) and
> was
> > > eventually
> > > >> traced to freetype. The 5-part bug fix:
> > > >>>
> 610ee58e07090ead529849b2a454bb6c503b4995
> > > >>>
> da11e5e7647b668dee46fd0418ea5ecbc33ae3b2
> > > >>>
> e1a2ac1900f2f16ec48fb4840a6b7965a8373c2b
> > > >>>
> 869fb8c49ddf292d6daf4826172a308973d3e11f
> > > >>>
> d56e544d653b09c657911629557ffc5277a503e3
> > > >>> was committed to freetype in January
> and
> > will
> > > form the
> > > >> next release (2.4.12). They were back
> ported
> > to
> > > 2.4.11
> > > >>> https://bugzilla.redhat.com/show_bug.cgi?id=891457#c35
> > > >>> and the redhat people had further
> > back-ported
> > > it to
> > > >> 2.4.10 for fedora 18/19 (#c51).
> > > >>> 
> > > >>> The freetype people had reproduced
> the
> > problem
> > > with a
> > > >> latin font, so this affects most people,
> > unlike
> > > what the
> > > >> initial report (#c0) suggests.
> > > >>> 
> > > >>> Since freetype is part of X11, most
> > unix/linux
> > > users
> > > >> would be understandably nervous about
> breaking
> > X
> > > (see #c45
> > > >> for screenshot of broken gnome terminal!)
> and
> > > should wait up
> > > >> to a year before the new and
> not-yet-released
> > > 2.4.12 becomes
> > > >> an official upgrade; or contact their
> > favourite
> > > unix vendors
> > > >> and/or Apple for upgrades. AFAIK,
> current
> > > up-to-date linux
> > > >> distributions ships the rather older
> 2.4.10,
> > with
> > > the
> > > >> exception of fedora 18/19 (#c51). Mac OS
> X
> > 10.5
> > > ships
> > > >> freetype 2.3.5 as part of X11; I haven't
> > bother
> > > looking up
> > > >> later Mac OS X's.
> > > >>> 
> > > >>> The official R binaries for windows
> and
> > mac OS
> > > X are
> > > >> compiled against static libraries of
> cairo
> > 1.10.2
> > > (over 2
> > > >> years old), and cairo 1.11.2 and
> freetype
> > 2.4.4
> > > >> respectively, and are firmly in the "do
> not
> > work
> > > correctly"
> > > >> category.
> > > >>> 
> > > >>> The long and short of the story is
> that
> > > R/Sweave uses a
> > > >> feature of cairo which wasn't
> implemented
> > before
> > > cairo
> > > >> 1.11.2 (#c13, Jan 2011), which in turn
> depends
> > on a
> > > feature
> > > >> of freetype that has been around since
> 2005
> > but did
> > > not
> > > >> anticipate cairo's usage. It is
> commendable
> > that
> > > the
> > > >> freetype people did not refer to cairo's
> usage
> > as
> > > "misuse"
> > > >> but took the patience to address the
> problem,
> > > unlike some
> > > >> group's style.
> > > >>> 
> > > >>> It has been an interesting few
> months
> > returning
> > > to
> > > >> freetype after about 17 years, I think.
> > > >>> 
> > > >>> Here is how to look up what version
> of
> > freetype
> > > -
> > > >> libfreetype.so.x.y.z for most unix
> platforms,
> > and
> > > >> /usr/X11/lib/libfreetype.x.y.z.dylib on
> Mac OS
> > X:
> > > >>> 
> > > >>> (excerpt from docs/VERSION.DLL)
> > > >>> 
> > > >>>? ? ? version???
> > > >> x.y.z???date of release
> > > >>>? ? ? 2.4.11 
> > > >>? ? 6.10.0? Dec 2012
> > > >>>? ? ? 2.4.10 
> > > >>? ? 6.9.0???June 2012
> > > >>>? ? ? 2.4.9?
> > > ???
> > > >> 6.8.1???March 2012
> > > >>> ...
> > > >>>? ? ? 2.4.4?
> > > ???
> > > >> 6.6.2???Nov 2010? (official R
> > > mac
> > > >> binaries)
> > > >>> ...
> > > >>>? ? ? 2.3.5?
> > > ???
> > > >> 6.3.16? July 2007 (Mac OS X 10.5)
> > > >>> 
> > > >>> 
> > > >>>
> > ______________________________________________
> > > >>> R-devel at r-project.org
> > > >> mailing list
> > > >>> https://stat.ethz.ch/mailman/listinfo/r-devel
> > > >> 
> > > >> -- 
> > > >> Peter Dalgaard, Professor,
> > > >> Center for Statistics, Copenhagen
> Business
> > School
> > > >> Solbjerg Plads 3, 2000 Frederiksberg,
> Denmark
> > > >> Phone: (+45)38153501
> > > >> Email: pd.mes at cbs.dk 
> > > >> Priv: PDalgd at gmail.com
> > > >> 
> > > >> 
> > > >> 
> > > >> 
> > > >> 
> > > >> 
> > > >> 
> > > >> 
> > > >> 
> > > >> 
> > > >>
> > ______________________________________________
> > > >> R-devel at r-project.org
> > > mailing list
> > > >> https://stat.ethz.ch/mailman/listinfo/r-devel
> > > >> 
> > > >> 
> > > >
> > > 
> > >
> >
>


From timhesterberg at gmail.com  Thu Jun 13 19:18:19 2013
From: timhesterberg at gmail.com (Tim Hesterberg)
Date: Thu, 13 Jun 2013 10:18:19 -0700
Subject: [Rd] Suggest adding a "testing" keyword
Message-ID: <CAAWNEwZJ3uFrTqts3tO9hsjVO+tcGfcrQXUSv6r8s1oyEBO9jg@mail.gmail.com>

An embedded and charset-unspecified text was scrubbed...
Name: not available
URL: <https://stat.ethz.ch/pipermail/r-devel/attachments/20130613/738f4120/attachment.pl>

From rory.winston at gmail.com  Fri Jun 14 00:48:55 2013
From: rory.winston at gmail.com (Rory Winston)
Date: Fri, 14 Jun 2013 08:48:55 +1000
Subject: [Rd] load/unload segfault puzzle
In-Reply-To: <E66794E69CFDE04D9A70842786030B931C30295F@PA-MBX01.na.tibco.com>
References: <mailman.35.1371117609.3499.r-devel@r-project.org>
	<7353B511-62FF-4FEA-AA9D-8BFBBD4F985D@gmail.com>
	<E66794E69CFDE04D9A70842786030B931C30295F@PA-MBX01.na.tibco.com>
Message-ID: <D1BB7A72-6983-4A2F-8E37-ACFE09FECD24@gmail.com>

Bill

Hadn't thought of that - great idea. I wonder if it would be possible to run R under gdb and trap the segfault - this should give the invalid address in the backtrace - and then grep the process map for that address?

Cheers 
-- Rory

Sent from my iPhone

On 14 Jun 2013, at 00:34, William Dunlap <wdunlap at tibco.com> wrote:

> You can also read the process map table in /proc/<pid>/maps to see which
> shared object is associated with the illegal address that valgrind identified.
> Read the map table after each load or unload of a *.so with
>   map <- readProcessMaps()
> and use something like
>   subset(map, startAddr <= badAddr & badAddr < endAddr)
> to see where the bad address  is.  The "<BSS>" lines are uninitialized memory
> required by a shared object (or executable), I believe the object mentioned
> in the previous line.  A shared object may have a _fini procedure that refers to
> an address in a shared object that got unloaded (_fini might call C++ destructors).
> 
> Here is some code to read the map table for the current process.  I did a quick
> check of the code on both 32- and 64-bit Linux.  My 32-bit machine does not
> have a recent version of R on it so there is some wierd code to work around that.
> 
> readProcessMaps <- function()
> {
>    # Read /proc/$CWD/maps into a data.frame.  This shows which
>    # memory addresses are associated with which shared objects
>    # at the current time.
>    #
>    # there are some hacks to make this work in R-2.10.1 (2009), the only
>    # version I have compiled for 32-bit Linux.
>    #   * as.hexmode() only accepted a scalar
>    #   * read.table() did not have a text= argument
>    txt <- readLines(file.path("/proc", Sys.getpid(), "maps"))
>    nFields <- count.fields(textConnection(txt))
>    txt[nFields == 5] <- paste(txt[nFields == 5], "<BSS>")
>    txt <- sub("-", " ", txt)
>    colNames <- c("startAddr", "endAddr", "perms", "offset", "dev", "inode", "pathname")
>    # retval <- read.table(text=txt, col.names=colNames, colClasses="character")
>    retval <- read.table(textConnection(txt), col.names=colNames, colClasses="character")
>    hex64StringToDouble <- function(s) {
>        # as.hexmode only works up to 2^31-1, so we
>        # convert 64-bit address nibble by nibble into a double.
>        n <- nchar(s)
>        acc <- numeric(length(s))
>        for(shift in (0:3)*16) {
>            # nibble <- as.integer(as.hexmode(substring(s, n-3, n)))
>            nibble <- as.integer(sapply(substring(s, n-3, n), as.hexmode))
>            n <- n - 4
>            acc <- acc + 2^shift * nibble
>        }
>        acc
>    }
>    retval[["startAddr"]] <- hex64StringToDouble(retval[["startAddr"]])
>    retval[["endAddr"]] <- hex64StringToDouble(retval[["endAddr"]])
>    retval
> }
> 
> Bill Dunlap
> Spotfire, TIBCO Software
> wdunlap tibco.com
> 
> 
>> -----Original Message-----
>> From: r-devel-bounces at r-project.org [mailto:r-devel-bounces at r-project.org] On Behalf
>> Of Rory Winston
>> Sent: Thursday, June 13, 2013 3:56 AM
>> To: r-devel at r-project.org
>> Subject: Re: [Rd] load/unload segfault puzzle
>> 
>> Ben
>> 
>> Have you compiled R form source yourself? If so, I would be tempted to mark up
>> memory. c with some debug log statements - especially around line 1357, and possibly
>> inside the finalizers function as it attempts to run the C finalizers....not pretty I know, but
>> may be the quickest approach to quickly identify whats failing...
>> Cheers
>> -- Rory
>> 
>> 
>> 
>>> Yes, thanks -- Bill Dunlap already suggested this.  Your and Bill's
>>> warning about how slow gctorture makes things is correct -- I gave up
>>> after running for 3.5 hours when it had gotten only partway through
>>> loading the Matrix package; I will have to find a machine with a decent
>>> cooling system (i.e. not my laptop) where I can replicate the error.
>>> I've just re-run the regular valgrind, with a fresh build right after
>>> an SVN update.  I got exactly the same results as above.  We're
>>> certainly *not* calling reg.finalizer() anywhere in our package, and I
>>> don't think Rcpp or RcppEigen or minqa do ... there looks to be some
>>> kind of default finalization done on the reference class objects (based
>>> on running 'strings' on the object files ...
>>> I tried gdb'ing in and setting a breakpoint at memory.c:1357, but this
>>> breakpoint gets hit a lot, and I'm sort of stabbing in the dark at this
>>> point.
>>> 
>>>  Ben Bolker
>>> 
>>> 
>>> 
>>> ------------------------------
>>> 
>>> _______________________________________________
>>> R-devel at r-project.org mailing list  DIGESTED
>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>> 
>>> 
>>> End of R-devel Digest, Vol 124, Issue 12
>>> ****************************************
>> 
>> ______________________________________________
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel


From maechler at stat.math.ethz.ch  Fri Jun 14 22:04:34 2013
From: maechler at stat.math.ethz.ch (Martin Maechler)
Date: Fri, 14 Jun 2013 22:04:34 +0200
Subject: [Rd] R CMD INSTALL and file permission settings
In-Reply-To: <20917.40985.705751.95999@stat.math.ethz.ch>
References: <20915.23136.75704.347469@max.nulle.part>
	<20917.40985.705751.95999@stat.math.ethz.ch>
Message-ID: <20923.30546.509634.752403@stat.math.ethz.ch>

>>>>> Martin Maechler <maechler at stat.math.ethz.ch>
>>>>>     on Mon, 10 Jun 2013 11:44:57 +0200 writes:

>>>>> Dirk Eddelbuettel <edd at debian.org>
>>>>>     on Sat, 8 Jun 2013 11:22:56 -0500 writes:

    >> Summary:

    >> The directory /usr/local/lib/R/site-library can be used
    >> for site-wide multi-user installations of R.

    >> This is even the default on Debian and Ubuntu (following
    >> a suggestion by Kurt and Fritz a decade ago over beers --
    >> what could be better).  However, R enforces wrong
    >> permissions on directories and files there (removing
    >> group-write) which effectively defeats this purpose, and
    >> breaks multiuser installation: if Tom, Dick and Harry are
    >> members of group 'r-users', each one can install in the
    >> directory, but neither can _upgrade_ a package installed
    >> by one of the others.

    >> I would like to correct this.


    >> Details:

    > [..........]


    >> Proposal:

    >> Add a new option() [with a to-be-determined name] which,
    >> if enabled, turns on group-write modes for files and
    >> directories, ie "664" and "775".

    > [.........]

    >> I would be happy to write such a patch (including
    >> documentation updates) if someone from R Core can signal
    >> willigness to look at it.

    > "signal!"  :-)

In the mean time, Dirk has sent me a patch which I've Martinized
a tiny bit,
and committed now, both for R-devel and 'R 3.0.1 patched'.
The new feature is advertized as

      R CMD INSTALL --group-writable installs packages group writably,
      such that update.packages() works for other group members
      (suggested and from a patch by Dirk Eddelbuettel).

Wishing everyone a nice weekend,

Martin Maechler,
ETH Zurich


From simon.urbanek at r-project.org  Fri Jun 14 22:17:51 2013
From: simon.urbanek at r-project.org (Simon Urbanek)
Date: Fri, 14 Jun 2013 16:17:51 -0400
Subject: [Rd] R CMD INSTALL and file permission settings
In-Reply-To: <20923.30546.509634.752403@stat.math.ethz.ch>
References: <20915.23136.75704.347469@max.nulle.part>
	<20917.40985.705751.95999@stat.math.ethz.ch>
	<20923.30546.509634.752403@stat.math.ethz.ch>
Message-ID: <1A628E3D-CC34-4C38-B23B-03169D3C7AD0@r-project.org>

On Jun 14, 2013, at 4:04 PM, Martin Maechler wrote:

>>>>>> Martin Maechler <maechler at stat.math.ethz.ch>
>>>>>>    on Mon, 10 Jun 2013 11:44:57 +0200 writes:
> 
>>>>>> Dirk Eddelbuettel <edd at debian.org>
>>>>>>    on Sat, 8 Jun 2013 11:22:56 -0500 writes:
> 
>>> Summary:
> 
>>> The directory /usr/local/lib/R/site-library can be used
>>> for site-wide multi-user installations of R.
> 
>>> This is even the default on Debian and Ubuntu (following
>>> a suggestion by Kurt and Fritz a decade ago over beers --
>>> what could be better).  However, R enforces wrong
>>> permissions on directories and files there (removing
>>> group-write) which effectively defeats this purpose, and
>>> breaks multiuser installation: if Tom, Dick and Harry are
>>> members of group 'r-users', each one can install in the
>>> directory, but neither can _upgrade_ a package installed
>>> by one of the others.
> 
>>> I would like to correct this.
> 
> 
>>> Details:
> 
>> [..........]
> 
> 
>>> Proposal:
> 
>>> Add a new option() [with a to-be-determined name] which,
>>> if enabled, turns on group-write modes for files and
>>> directories, ie "664" and "775".
> 
>> [.........]
> 
>>> I would be happy to write such a patch (including
>>> documentation updates) if someone from R Core can signal
>>> willigness to look at it.
> 
>> "signal!"  :-)
> 
> In the mean time, Dirk has sent me a patch which I've Martinized
> a tiny bit,
> and committed now, both for R-devel and 'R 3.0.1 patched'.
> The new feature is advertized as
> 
>      R CMD INSTALL --group-writable installs packages group writably,
>      such that update.packages() works for other group members
>      (suggested and from a patch by Dirk Eddelbuettel).
> 
> Wishing everyone a nice weekend,
> 

I think it would be better to have a bit more sane handling of this. The decision is rarely at the install time of the package -- e.g. did you adjust the flag for INSTALL in update.packages based on the permissions? Otherwise it fails the next time and confuses the hell out of users! Although it's certainly a step up from the previously hard-coded default, I would argue that the most desired behavior is to follow the permissions already set up. If the library is setup to be group-writable then the package should be installed group-writable. The point is that anything else makes less sense - the user can still use rm -rf and re-install it even if the package is not writable. It's just update.packages() that fails.

Cheers,
Simon



> Martin Maechler,
> ETH Zurich
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
> 
> 


From edd at debian.org  Fri Jun 14 22:35:36 2013
From: edd at debian.org (Dirk Eddelbuettel)
Date: Fri, 14 Jun 2013 15:35:36 -0500
Subject: [Rd] R CMD INSTALL and file permission settings
In-Reply-To: <1A628E3D-CC34-4C38-B23B-03169D3C7AD0@r-project.org>
References: <20915.23136.75704.347469@max.nulle.part>
	<20917.40985.705751.95999@stat.math.ethz.ch>
	<20923.30546.509634.752403@stat.math.ethz.ch>
	<1A628E3D-CC34-4C38-B23B-03169D3C7AD0@r-project.org>
Message-ID: <20923.32408.400045.470669@max.nulle.part>


On 14 June 2013 at 16:17, Simon Urbanek wrote:
| I think it would be better to have a bit more sane handling of this. The decision is rarely at the install time of the package -- e.g. did you adjust the flag for INSTALL in update.packages based on the permissions? Otherwise it fails the next time and confuses the hell out of users! Although it's certainly a step up from the previously hard-coded default, I would argue that the most desired behavior is to follow the permissions already set up. If the library is setup to be group-writable then the package should be installed group-writable. The point is that anything else makes less sense - the user can still use rm -rf and re-install it even if the package is not writable. It's just update.packages() that fails.

One could also consider respecting the umask which is ignored in the
older behaviour, ignore in what was just committed, and ignored in what you
suggest here.  Not exactly right either.

But up until right now I could not update a package a colleague installed,
and vice versa -- unless we sudo.  

The patch improves on this, and the only other comment was a 'thumbs up' from
Andreas Leha who described an elaborate workaround scheme required by the
existing shortcoming.

Dirk

-- 
Dirk Eddelbuettel | edd at debian.org | http://dirk.eddelbuettel.com


From simon.urbanek at r-project.org  Fri Jun 14 22:56:12 2013
From: simon.urbanek at r-project.org (Simon Urbanek)
Date: Fri, 14 Jun 2013 16:56:12 -0400
Subject: [Rd] R CMD INSTALL and file permission settings
In-Reply-To: <20923.32408.400045.470669@max.nulle.part>
References: <20915.23136.75704.347469@max.nulle.part>
	<20917.40985.705751.95999@stat.math.ethz.ch>
	<20923.30546.509634.752403@stat.math.ethz.ch>
	<1A628E3D-CC34-4C38-B23B-03169D3C7AD0@r-project.org>
	<20923.32408.400045.470669@max.nulle.part>
Message-ID: <046C1EB4-F22D-457F-BB2C-27D666E3418F@r-project.org>

On Jun 14, 2013, at 4:35 PM, Dirk Eddelbuettel wrote:

> 
> On 14 June 2013 at 16:17, Simon Urbanek wrote:
> | I think it would be better to have a bit more sane handling of this. The decision is rarely at the install time of the package -- e.g. did you adjust the flag for INSTALL in update.packages based on the permissions? Otherwise it fails the next time and confuses the hell out of users! Although it's certainly a step up from the previously hard-coded default, I would argue that the most desired behavior is to follow the permissions already set up. If the library is setup to be group-writable then the package should be installed group-writable. The point is that anything else makes less sense - the user can still use rm -rf and re-install it even if the package is not writable. It's just update.packages() that fails.
> 
> One could also consider respecting the umask which is ignored in the
> older behaviour, ignore in what was just committed, and ignored in what you
> suggest here.  Not exactly right either.
> 

Agreed.


> But up until right now I could not update a package a colleague installed,
> and vice versa -- unless we sudo.  
> 

But you should be able to simply removing it, and re-installing, right? (This is not to suggest it as a work-around, but rather to make sure we're taking about the same situation). 


> The patch improves on this, and the only other comment was a 'thumbs up' from
> Andreas Leha who described an elaborate workaround scheme required by the
> existing shortcoming.
> 


The implementation of the group-wrtable part of is great improvement, but my point is that this doesn't solve the update.packages() problem that triggered the fix, because the flag is ignored then:

$ bin/R CMD INSTALL --group-writable ~/develop/R/packages/base64enc_0.1-0.tar.gz 
$ ls -ld library/base64enc
drwxrwxr-x  10 urbanek  admin  340 Jun 14 16:48 library/base64enc
$ sudo -u user2 bin/R -e 'update.packages(ask=F)'
$ ls -ld library/base64enc
drwxr-xr-x  11 user2  admin  374 Jun 14 16:49 library/base64enc
$ bin/R -e 'update.packages(ask=F)'
[...]
mv: rename /Volumes/Data/Builds/R-builds/rd/library/base64enc to /Volumes/Data/Builds/R-builds/rd/library/00LOCK-base64enc/base64enc: Permission denied
Warning in file.copy(f, instdir, TRUE) :
  problem copying ./NAMESPACE to /Volumes/Data/Builds/R-builds/rd/library/base64enc/NAMESPACE: Permission denied
Warning in file.copy(f, instdir, TRUE) :
  problem copying ./NEWS to /Volumes/Data/Builds/R-builds/rd/library/base64enc/NEWS: Permission denied
Warning in file(file, ifelse(append, "a", "w")) :
  cannot open file '/Volumes/Data/Builds/R-builds/rd/library/base64enc/DESCRIPTION': Permission denied
Error in file(file, ifelse(append, "a", "w")) : 
  cannot open the connection
ERROR: installing package DESCRIPTION failed for package ?base64enc?

So, as I was suggesting to use the patch to implement a more durable solution which doesn't need an extra flag but just checks the permissions on the library. While at it, it could also consult umask and thus be a good citizen ...

Cheers,
Simon


From edd at debian.org  Sat Jun 15 05:27:32 2013
From: edd at debian.org (Dirk Eddelbuettel)
Date: Fri, 14 Jun 2013 22:27:32 -0500
Subject: [Rd] R CMD INSTALL and file permission settings
In-Reply-To: <046C1EB4-F22D-457F-BB2C-27D666E3418F@r-project.org>
References: <20915.23136.75704.347469@max.nulle.part>
	<20917.40985.705751.95999@stat.math.ethz.ch>
	<20923.30546.509634.752403@stat.math.ethz.ch>
	<1A628E3D-CC34-4C38-B23B-03169D3C7AD0@r-project.org>
	<20923.32408.400045.470669@max.nulle.part>
	<046C1EB4-F22D-457F-BB2C-27D666E3418F@r-project.org>
Message-ID: <20923.57124.150011.263475@max.nulle.part>


On 14 June 2013 at 16:56, Simon Urbanek wrote:
| On Jun 14, 2013, at 4:35 PM, Dirk Eddelbuettel wrote:
| > But up until right now I could not update a package a colleague installed,
| > and vice versa -- unless we sudo.  
| > 
| 
| But you should be able to simply removing it, and re-installing, right? (This is not to suggest it as a work-around, but rather to make sure we're taking about the same situation). 

I think not:  

  -- 'Alice' and 'Bob' are both members of 'r-users'. 

  -- Alice installs, it becomes '644' / '755' owned by 'alice:r-users'.  

  -- Bob tries to update (or remove, as you suggest)

  -- Bob has no group-write (despite sharing the group) or world-write rights

  -- Hence this fails

  -- My patch (reworked by Martin) fixes precisely this

| The implementation of the group-wrtable part of is great improvement, but my point is that this doesn't solve the update.packages() problem that triggered the fix, because the flag is ignored then:
| 
| $ bin/R CMD INSTALL --group-writable ~/develop/R/packages/base64enc_0.1-0.tar.gz 
| $ ls -ld library/base64enc
| drwxrwxr-x  10 urbanek  admin  340 Jun 14 16:48 library/base64enc

Mode 775, good.

| $ sudo -u user2 bin/R -e 'update.packages(ask=F)'
| $ ls -ld library/base64enc
| drwxr-xr-x  11 user2  admin  374 Jun 14 16:49 library/base64enc

Mode 755 -- why?

| $ bin/R -e 'update.packages(ask=F)'
| [...]
| mv: rename /Volumes/Data/Builds/R-builds/rd/library/base64enc to /Volumes/Data/Builds/R-builds/rd/library/00LOCK-base64enc/base64enc: Permission denied
| Warning in file.copy(f, instdir, TRUE) :
|   problem copying ./NAMESPACE to /Volumes/Data/Builds/R-builds/rd/library/base64enc/NAMESPACE: Permission denied
| Warning in file.copy(f, instdir, TRUE) :
|   problem copying ./NEWS to /Volumes/Data/Builds/R-builds/rd/library/base64enc/NEWS: Permission denied
| Warning in file(file, ifelse(append, "a", "w")) :
|   cannot open file '/Volumes/Data/Builds/R-builds/rd/library/base64enc/DESCRIPTION': Permission denied
| Error in file(file, ifelse(append, "a", "w")) : 
|   cannot open the connection
| ERROR: installing package DESCRIPTION failed for package ?base64enc?

I will admit to having written and tested the patch at home, under single
user, not work.  But at work I "simulated" the exact same situation by doing
repeated 'sudo chmod -R g+w /usr/local/lib/R/site-library' after which 'Bob'
can indeed updated packages installed by 'Alice'.

Which is the whole point.
 
| So, as I was suggesting to use the patch to implement a more durable solution which doesn't need an extra flag but just checks the permissions on the library. While at it, it could also consult umask and thus be a good citizen ...

We can always refine, but I still think that we're better off with the patch
than before.

Dirk

-- 
Dirk Eddelbuettel | edd at debian.org | http://dirk.eddelbuettel.com


From m_olej01 at uni-muenster.de  Fri Jun 14 18:16:15 2013
From: m_olej01 at uni-muenster.de (mo)
Date: Fri, 14 Jun 2013 09:16:15 -0700 (PDT)
Subject: [Rd] Saving right daughter's index in Random Forest required?
Message-ID: <1371226575964-4669541.post@n4.nabble.com>

Hello,
in the Random Forest package the right daughter's index is saved and used
for classification. When a tree is build, the right daughter's index is the
left daughter's index + 1. My question is, if there is a reason for saving
the index instead of calculating it.



--
View this message in context: http://r.789695.n4.nabble.com/Saving-right-daughter-s-index-in-Random-Forest-required-tp4669541.html
Sent from the R devel mailing list archive at Nabble.com.


From koller.manuel at gmail.com  Fri Jun 14 13:54:59 2013
From: koller.manuel at gmail.com (Manuel Koller)
Date: Fri, 14 Jun 2013 13:54:59 +0200
Subject: [Rd] R CMD texi2pdf
Message-ID: <B042A6D1-3EFE-4B91-9EAF-7F177A5143D0@gmail.com>

Dear all,

To make makefiles more portable, it would be useful to have something like R CMD texi2pdf available. It would just call the texi2pdf() function from the tools package. We have a makefile that uses texi2pdf for the vignette in robustbase. With this feature it would work on some more systems.

Thanks in advance,
Manuel

From andreas.leha at med.uni-goettingen.de  Fri Jun 14 23:13:11 2013
From: andreas.leha at med.uni-goettingen.de (Andreas Leha)
Date: Fri, 14 Jun 2013 23:13:11 +0200
Subject: [Rd] R CMD INSTALL and file permission settings
References: <20915.23136.75704.347469@max.nulle.part>
	<20917.40985.705751.95999@stat.math.ethz.ch>
	<20923.30546.509634.752403@stat.math.ethz.ch>
	<1A628E3D-CC34-4C38-B23B-03169D3C7AD0@r-project.org>
	<20923.32408.400045.470669@max.nulle.part>
	<046C1EB4-F22D-457F-BB2C-27D666E3418F@r-project.org>
Message-ID: <87ip1gxuoo.fsf@med.uni-goettingen.de>

Simon Urbanek <simon.urbanek at r-project.org> writes:

> On Jun 14, 2013, at 4:35 PM, Dirk Eddelbuettel wrote:
>
>> 
>> On 14 June 2013 at 16:17, Simon Urbanek wrote:
>> | I think it would be better to have a bit more sane handling of
>> | this. The decision is rarely at the install time of the package --
>> | e.g. did you adjust the flag for INSTALL in update.packages based
>> | on the permissions? Otherwise it fails the next time and confuses
>> | the hell out of users! Although it's certainly a step up from the
>> | previously hard-coded default, I would argue that the most desired
>> | behavior is to follow the permissions already set up. If the
>> | library is setup to be group-writable then the package should be
>> | installed group-writable. The point is that anything else makes
>> | less sense - the user can still use rm -rf and re-install it even
>> | if the package is not writable. It's just update.packages() that
>> | fails.
>> 
>> One could also consider respecting the umask which is ignored in the
>> older behaviour, ignore in what was just committed, and ignored in what you
>> suggest here.  Not exactly right either.
>> 
>
> Agreed.
>
>
>> But up until right now I could not update a package a colleague installed,
>> and vice versa -- unless we sudo.  
>> 
>
> But you should be able to simply removing it, and re-installing,
> right? (This is not to suggest it as a work-around, but rather to make
> sure we're taking about the same situation).
>

I am not sure I understand this correctly.  But I don't see how 'rm -rf'
would be possible without sudo:
$ ls -l /usr/local/lib/R/site-library/ | tail -n 1
drwxr-xr-x 12 aleha staff 4096 Apr  7  2012 XML

Here, the user aleha installed XML into /usr/local/lib/R/site-library and
no other user (not even in the same group) has write access to that
package's directory.  So, neither update nor removal is possible.  Am I
missing the point?

[...]

Regards,
Andreas


From maechler at stat.math.ethz.ch  Sat Jun 15 12:25:02 2013
From: maechler at stat.math.ethz.ch (Martin Maechler)
Date: Sat, 15 Jun 2013 12:25:02 +0200
Subject: [Rd] R CMD INSTALL and file permission settings
In-Reply-To: <20923.57124.150011.263475@max.nulle.part>
References: <20915.23136.75704.347469@max.nulle.part>
	<20917.40985.705751.95999@stat.math.ethz.ch>
	<20923.30546.509634.752403@stat.math.ethz.ch>
	<1A628E3D-CC34-4C38-B23B-03169D3C7AD0@r-project.org>
	<20923.32408.400045.470669@max.nulle.part>
	<046C1EB4-F22D-457F-BB2C-27D666E3418F@r-project.org>
	<20923.57124.150011.263475@max.nulle.part>
Message-ID: <20924.16638.588711.727645@stat.math.ethz.ch>

>>>>> Dirk Eddelbuettel <edd at debian.org>
>>>>>     on Fri, 14 Jun 2013 22:27:32 -0500 writes:

    > On 14 June 2013 at 16:56, Simon Urbanek wrote: | On Jun
    > 14, 2013, at 4:35 PM, Dirk Eddelbuettel wrote: | > But up
    > until right now I could not update a package a colleague
    > installed, | > and vice versa -- unless we sudo.
    > | > 
    > | 
    > | But you should be able to simply removing it, and
    > re-installing, right? (This is not to suggest it as a
    > work-around, but rather to make sure we're taking about
    > the same situation).

    > I think not:

    >   -- 'Alice' and 'Bob' are both members of 'r-users'.

    >   -- Alice installs, it becomes '644' / '755' owned by
    > 'alice:r-users'.

    >   -- Bob tries to update (or remove, as you suggest)

    >   -- Bob has no group-write (despite sharing the group) or
    > world-write rights

    >   -- Hence this fails

    >   -- My patch (reworked by Martin) fixes precisely this

    > | The implementation of the group-wrtable part of is great
    > improvement, but my point is that this doesn't solve the
    > update.packages() problem that triggered the fix, because
    > the flag is ignored then:
    > | 
    > | $ bin/R CMD INSTALL --group-writable
    > ~/develop/R/packages/base64enc_0.1-0.tar.gz | $ ls -ld
    > library/base64enc | drwxrwxr-x 10 urbanek admin 340 Jun 14
    > 16:48 library/base64enc

    > Mode 775, good.

    > | $ sudo -u user2 bin/R -e 'update.packages(ask=F)' | $ ls
    > -ld library/base64enc | drwxr-xr-x 11 user2 admin 374 Jun
    > 14 16:49 library/base64enc

    > Mode 755 -- why?

because update.packages calling install.packages() does not
preserve the group-writability.

I think this was the most important point by Simon, and I agree
that we should further improve the current R-devel (it *is*
in ongoing development, so all is fine).


    > | $ bin/R -e 'update.packages(ask=F)' | [...]  | mv:
    > rename /Volumes/Data/Builds/R-builds/rd/library/base64enc
    > to
    > /Volumes/Data/Builds/R-builds/rd/library/00LOCK-base64enc/base64enc:
    > Permission denied | Warning in file.copy(f, instdir, TRUE)
    > : | problem copying ./NAMESPACE to
    > /Volumes/Data/Builds/R-builds/rd/library/base64enc/NAMESPACE:
    > Permission denied | Warning in file.copy(f, instdir, TRUE)
    > : | problem copying ./NEWS to
    > /Volumes/Data/Builds/R-builds/rd/library/base64enc/NEWS:
    > Permission denied | Warning in file(file, ifelse(append,
    > "a", "w")) : | cannot open file
    > '/Volumes/Data/Builds/R-builds/rd/library/base64enc/DESCRIPTION':
    > Permission denied | Error in file(file, ifelse(append,
    > "a", "w")) : | cannot open the connection | ERROR:
    > installing package DESCRIPTION failed for package
    > ?base64enc?

    > I will admit to having written and tested the patch at
    > home, under single user, not work.  But at work I
    > "simulated" the exact same situation by doing repeated
    > 'sudo chmod -R g+w /usr/local/lib/R/site-library' after
    > which 'Bob' can indeed updated packages installed by
    > 'Alice'.

    > Which is the whole point.

well, modulo the update.packages() example above ,..

    > | So, as I was suggesting to use the patch to implement a
    > more durable solution which doesn't need an extra flag but
    > just checks the permissions on the library. While at it,
    > it could also consult umask and thus be a good citizen ...

    > We can always refine, but I still think that we're better
    > off with the patch than before.

    > Dirk
    > -- 
    > Dirk Eddelbuettel | edd at debian.org |

I think we could agree that we basically all agree, at least
with these two

1) The current R-devel code, basically Dirk's patches, is an
   improvement to the previous situation.

2) It needs to be further tweaked and improved in order to
   "coexist" nicely with  update.packages(), install.packages().

The question really is, and I understand that's Simon's Q,
if there is a solution to this problem which makes the use of
'--group-writable' almost (or completely?) superfluous.

IIUC, Simon proposes that  the *library* directory (aka
'lib.loc')'s group permissions should be determinant for the
package's group permissions in all(?) cases.
notably when the library is group writable, packages should all
be installed (and hence also updated) group writably in any case.
I tend to agree with Simon on this proposal.

The other issue is "respecting" the umask.
Here, I'm much less sure what we want.
Many organizations have quite rigid umask defaults, also in my
experience, about 2-5% of the users are relatively paranoid and
learn to set their own umasks quite restrictively.
So, if these are "part of our group", and if they update a
package in our group-writable library, should their paranoid
umask setting really be taken for the newly installed package?
My vote would be "no"...
and I more and more tend to think that a simple scheme such as
(I think Simon proposed) to simply install packages
"all group writable" in a group-writable directory would be
entirely sufficient.

Comments?

Martin


From simon.urbanek at r-project.org  Sat Jun 15 13:47:23 2013
From: simon.urbanek at r-project.org (Simon Urbanek)
Date: Sat, 15 Jun 2013 07:47:23 -0400
Subject: [Rd] R CMD INSTALL and file permission settings
In-Reply-To: <20923.57124.150011.263475@max.nulle.part>
References: <20915.23136.75704.347469@max.nulle.part>
	<20917.40985.705751.95999@stat.math.ethz.ch>
	<20923.30546.509634.752403@stat.math.ethz.ch>
	<1A628E3D-CC34-4C38-B23B-03169D3C7AD0@r-project.org>
	<20923.32408.400045.470669@max.nulle.part>
	<046C1EB4-F22D-457F-BB2C-27D666E3418F@r-project.org>
	<20923.57124.150011.263475@max.nulle.part>
Message-ID: <82EC6E1A-75F7-4172-968B-CA55AB102171@r-project.org>


On Jun 14, 2013, at 11:27 PM, Dirk Eddelbuettel wrote:

> 
> On 14 June 2013 at 16:56, Simon Urbanek wrote:
> | On Jun 14, 2013, at 4:35 PM, Dirk Eddelbuettel wrote:
> | > But up until right now I could not update a package a colleague installed,
> | > and vice versa -- unless we sudo.  
> | > 
> | 
> | But you should be able to simply removing it, and re-installing, right? (This is not to suggest it as a work-around, but rather to make sure we're taking about the same situation). 
> 
> I think not:  
> 
>  -- 'Alice' and 'Bob' are both members of 'r-users'. 
> 
>  -- Alice installs, it becomes '644' / '755' owned by 'alice:r-users'.  
> 
>  -- Bob tries to update (or remove, as you suggest)
> 
>  -- Bob has no group-write (despite sharing the group) or world-write rights
> 
>  -- Hence this fails
> 

Nope this is wrong. If you have write rights on a directory, you can delete files even if you don't have write rights on them. That's why rf -rf + re-install works but update doesn't.


>  -- My patch (reworked by Martin) fixes precisely this
> 
> | The implementation of the group-wrtable part of is great improvement, but my point is that this doesn't solve the update.packages() problem that triggered the fix, because the flag is ignored then:
> | 
> | $ bin/R CMD INSTALL --group-writable ~/develop/R/packages/base64enc_0.1-0.tar.gz 
> | $ ls -ld library/base64enc
> | drwxrwxr-x  10 urbanek  admin  340 Jun 14 16:48 library/base64enc
> 
> Mode 775, good.
> 
> | $ sudo -u user2 bin/R -e 'update.packages(ask=F)'
> | $ ls -ld library/base64enc
> | drwxr-xr-x  11 user2  admin  374 Jun 14 16:49 library/base64enc
> 
> Mode 755 -- why?
> 

Because update.packages() doesn't restore the group-writable bit. Which leads us to my point that this is not what you really want.


> | $ bin/R -e 'update.packages(ask=F)'
> | [...]
> | mv: rename /Volumes/Data/Builds/R-builds/rd/library/base64enc to /Volumes/Data/Builds/R-builds/rd/library/00LOCK-base64enc/base64enc: Permission denied
> | Warning in file.copy(f, instdir, TRUE) :
> |   problem copying ./NAMESPACE to /Volumes/Data/Builds/R-builds/rd/library/base64enc/NAMESPACE: Permission denied
> | Warning in file.copy(f, instdir, TRUE) :
> |   problem copying ./NEWS to /Volumes/Data/Builds/R-builds/rd/library/base64enc/NEWS: Permission denied
> | Warning in file(file, ifelse(append, "a", "w")) :
> |   cannot open file '/Volumes/Data/Builds/R-builds/rd/library/base64enc/DESCRIPTION': Permission denied
> | Error in file(file, ifelse(append, "a", "w")) : 
> |   cannot open the connection
> | ERROR: installing package DESCRIPTION failed for package ?base64enc?
> 
> I will admit to having written and tested the patch at home, under single
> user, not work.  But at work I "simulated" the exact same situation by doing
> repeated 'sudo chmod -R g+w /usr/local/lib/R/site-library' after which 'Bob'
> can indeed updated packages installed by 'Alice'.
> 
> Which is the whole point.
> 
> | So, as I was suggesting to use the patch to implement a more durable solution which doesn't need an extra flag but just checks the permissions on the library. While at it, it could also consult umask and thus be a good citizen ...
> 
> We can always refine, but I still think that we're better off with the patch
> than before.
> 

I wasn't disputing the fact that it's great to have group-writable bit under control, but adding the flag to INSTALL doesn't solve the problem - and as you saw the result is a bit misleading in the context that it was discussed and thus may cause more confusion. I am arguing that the solution would be to (at least as default) take the directory writable bit because that is really what decides things anyway. You had a good point of also combining it with umask.

Cheers,
Simon


> Dirk
> 
> -- 
> Dirk Eddelbuettel | edd at debian.org | http://dirk.eddelbuettel.com
> 
> 


From edd at debian.org  Sat Jun 15 14:00:20 2013
From: edd at debian.org (Dirk Eddelbuettel)
Date: Sat, 15 Jun 2013 07:00:20 -0500
Subject: [Rd] R CMD INSTALL and file permission settings
In-Reply-To: <82EC6E1A-75F7-4172-968B-CA55AB102171@r-project.org>
References: <20915.23136.75704.347469@max.nulle.part>
	<20917.40985.705751.95999@stat.math.ethz.ch>
	<20923.30546.509634.752403@stat.math.ethz.ch>
	<1A628E3D-CC34-4C38-B23B-03169D3C7AD0@r-project.org>
	<20923.32408.400045.470669@max.nulle.part>
	<046C1EB4-F22D-457F-BB2C-27D666E3418F@r-project.org>
	<20923.57124.150011.263475@max.nulle.part>
	<82EC6E1A-75F7-4172-968B-CA55AB102171@r-project.org>
Message-ID: <20924.22356.973252.449984@max.nulle.part>


On 15 June 2013 at 07:47, Simon Urbanek wrote:
| Because update.packages() doesn't restore the group-writable bit. Which leads us to my point that this is not what you really want.

Ooops. I'll take another look.  

My initial patch to Martin did not have the argument to install, but simply a
fixed use of "664" and "775" modes if and only if an option() was set.  We
seem to need that in update.packages() too.

| I wasn't disputing the fact that it's great to have group-writable bit
| under control, but adding the flag to INSTALL doesn't solve the problem -
| and as you saw the result is a bit misleading in the context that it was
| discussed and thus may cause more confusion. I am arguing that the solution
| would be to (at least as default) take the directory writable bit because
| that is really what decides things anyway. You had a good point of also
| combining it with umask. 

Re umask: Users get that wrong too often too.  

I think I'd prefer to add another patch to update.packages(). 

Dirk

-- 
Dirk Eddelbuettel | edd at debian.org | http://dirk.eddelbuettel.com


From edd at debian.org  Sat Jun 15 17:45:04 2013
From: edd at debian.org (Dirk Eddelbuettel)
Date: Sat, 15 Jun 2013 10:45:04 -0500
Subject: [Rd] R CMD INSTALL and file permission settings
In-Reply-To: <20924.22356.973252.449984@max.nulle.part>
References: <20915.23136.75704.347469@max.nulle.part>
	<20917.40985.705751.95999@stat.math.ethz.ch>
	<20923.30546.509634.752403@stat.math.ethz.ch>
	<1A628E3D-CC34-4C38-B23B-03169D3C7AD0@r-project.org>
	<20923.32408.400045.470669@max.nulle.part>
	<046C1EB4-F22D-457F-BB2C-27D666E3418F@r-project.org>
	<20923.57124.150011.263475@max.nulle.part>
	<82EC6E1A-75F7-4172-968B-CA55AB102171@r-project.org>
	<20924.22356.973252.449984@max.nulle.part>
Message-ID: <20924.35840.998596.681242@max.nulle.part>


On 15 June 2013 at 07:00, Dirk Eddelbuettel wrote:
| 
| On 15 June 2013 at 07:47, Simon Urbanek wrote:
| | Because update.packages() doesn't restore the group-writable bit. Which leads us to my point that this is not what you really want.
| 
| Ooops. I'll take another look.  

Done.  "It works."  For fairly generous definitions of working. I'll detail:

i)   My initial patch only used options() to set things.  Martin was not to
     enthralled with this and guided the patch towards using --group-writable
     as an option.

ii)  With --group-writable, installation works but updates fail as noticed by
     Simon.

iii) If we fall back to using options() [ or an environment variable ],
     things works.  A log is below.

iv)  I guess those of you who want the --group-writeable option need to ensure
     it also works for update.packages() as new option?

I am happy with what we have right now as it works in the context established
by my patch.  Martin's addition of --group-writable is a bit more ambitious
and we may need to enhance update.package(), or tell everybody to also (??)
use the option() setting, or environment variable.

Two things follow, a quick test script and a log from the script.

Dirk



Script

#!/bin/bash

## we use digest as an example as it is pretty small
cd ~/svn/digest
ls -l digest_0.6.?.tar.gz 

## we make two assumptions:
##
## a) R-devel (called via a shell script wrapper)
~/bin/R-devel.sh --version | head -1
##
## b) An option has been set
cat /usr/local/lib/R-devel/lib/R/etc/Rprofile.site

## now install an older version so that we can upgrade later
## this is running as 'edd' ie me
~/bin/R-devel.sh CMD INSTALL digest_0.6.2.tar.gz

ls -ld /usr/local/lib/R/site-library/digest/
ls -lR /usr/local/lib/R/site-library/digest/

## now try the upgrade as another user in the group 
sudo su lmp -c '~edd/bin/R-devel.sh -e "update.packages(repos=\"http://cran.r-project.org\", ask=FALSE, lib.loc=\"/usr/local/lib/R/site-library\")"'

ls -ld /usr/local/lib/R/site-library/digest/
ls -lR /usr/local/lib/R/site-library/digest/



Session log

edd at max:~$ /tmp/testRupgrade.sh 
-rw-r--r-- 1 edd edd 53344 Nov 25  2012 digest_0.6.0.tar.gz
-rw-r--r-- 1 edd edd 76839 Jan 21 09:25 digest_0.6.1.tar.gz
-rw-r--r-- 1 edd edd 76771 Jan 25 11:33 digest_0.6.2.tar.gz
-rw-r--r-- 1 edd edd 78002 Feb 16 06:35 digest_0.6.3.tar.gz
R Under development (unstable) (2013-06-14 r62964) -- "Unsuffered Consequences"
options("group.writable.pkgs"=TRUE)
* installing to library ?/usr/local/lib/R/site-library?
* installing *source* package ?digest? ...
** libs
ccache gcc-4.7 -I/usr/local/lib/R-devel/lib/R/include -DNDEBUG  -I/usr/local/include    -fpic  -O3 -g0 -Wall -pipe -pedantic -std=gnu99  -c aes.c -o aes.o
ccache gcc-4.7 -I/usr/local/lib/R-devel/lib/R/include -DNDEBUG  -I/usr/local/include    -fpic  -O3 -g0 -Wall -pipe -pedantic -std=gnu99  -c crc32.c -o crc32.o
ccache gcc-4.7 -I/usr/local/lib/R-devel/lib/R/include -DNDEBUG  -I/usr/local/include    -fpic  -O3 -g0 -Wall -pipe -pedantic -std=gnu99  -c digest.c -o digest.o
ccache gcc-4.7 -I/usr/local/lib/R-devel/lib/R/include -DNDEBUG  -I/usr/local/include    -fpic  -O3 -g0 -Wall -pipe -pedantic -std=gnu99  -c md5.c -o md5.o
ccache gcc-4.7 -I/usr/local/lib/R-devel/lib/R/include -DNDEBUG  -I/usr/local/include    -fpic  -O3 -g0 -Wall -pipe -pedantic -std=gnu99  -c raes.c -o raes.o
ccache gcc-4.7 -I/usr/local/lib/R-devel/lib/R/include -DNDEBUG  -I/usr/local/include    -fpic  -O3 -g0 -Wall -pipe -pedantic -std=gnu99  -c sha1.c -o sha1.o
ccache gcc-4.7 -I/usr/local/lib/R-devel/lib/R/include -DNDEBUG  -I/usr/local/include    -fpic  -O3 -g0 -Wall -pipe -pedantic -std=gnu99  -c sha2.c -o sha2.o
ccache gcc-4.7 -I/usr/local/lib/R-devel/lib/R/include -DNDEBUG  -I/usr/local/include    -fpic  -O3 -g0 -Wall -pipe -pedantic -std=gnu99  -c sha256.c -o sha256.o
sha2.c: In function ?SHA256_Final?:
sha2.c:606:3: warning: dereferencing type-punned pointer will break strict-aliasing rules [-Wstrict-aliasing]
sha2.c: In function ?SHA512_Last?:
sha2.c:923:2: warning: dereferencing type-punned pointer will break strict-aliasing rules [-Wstrict-aliasing]
sha2.c:924:2: warning: dereferencing type-punned pointer will break strict-aliasing rules [-Wstrict-aliasing]
ccache gcc-4.7 -shared -L/usr/local/lib -o digest.so aes.o crc32.o digest.o md5.o raes.o sha1.o sha2.o sha256.o -L/usr/local/lib/R-devel/lib/R/lib -lR
installing to /usr/local/lib/R/site-library/digest/libs
** R
** inst
** preparing package for lazy loading
** help
*** installing help indices
** building package indices
** testing if installed package can be loaded
* DONE (digest)
drwxrwxr-x 7 edd staff 4096 Jun 15 10:42 /usr/local/lib/R/site-library/digest/
/usr/local/lib/R/site-library/digest/:
total 52
-rw-rw-r-- 1 edd staff  1605 Jun 15 10:42 DESCRIPTION
-rw-rw-r-- 1 edd staff 18092 Jun 15 10:42 GPL-2
drwxrwxr-x 2 edd staff  4096 Jun 15 10:42 help
drwxrwxr-x 2 edd staff  4096 Jun 15 10:42 html
-rw-rw-r-- 1 edd staff   271 Jun 15 10:42 INDEX
drwxrwxr-x 2 edd staff  4096 Jun 15 10:42 libs
drwxrwxr-x 2 edd staff  4096 Jun 15 10:42 Meta
-rw-rw-r-- 1 edd staff   140 Jun 15 10:42 NAMESPACE
drwxrwxr-x 2 edd staff  4096 Jun 15 10:42 R

/usr/local/lib/R/site-library/digest/help:
total 36
-rw-rw-r-- 1 edd staff    80 Jun 15 10:42 aliases.rds
-rw-rw-r-- 1 edd staff    32 Jun 15 10:42 AnIndex
-rw-rw-r-- 1 edd staff 17857 Jun 15 10:42 digest.rdb
-rw-rw-r-- 1 edd staff   193 Jun 15 10:42 digest.rdx
-rw-rw-r-- 1 edd staff   140 Jun 15 10:42 paths.rds

/usr/local/lib/R/site-library/digest/html:
total 8
-rw-rw-r-- 1 edd staff 1236 Jun 15 10:42 00Index.html
-rw-rw-r-- 1 edd staff 1179 Jun 15 10:42 R.css

/usr/local/lib/R/site-library/digest/libs:
total 120
-rwxrwxr-x 1 edd staff 118956 Jun 15 10:42 digest.so

/usr/local/lib/R/site-library/digest/Meta:
total 20
-rw-rw-r-- 1 edd staff  351 Jun 15 10:42 hsearch.rds
-rw-rw-r-- 1 edd staff  117 Jun 15 10:42 links.rds
-rw-rw-r-- 1 edd staff  224 Jun 15 10:42 nsInfo.rds
-rw-rw-r-- 1 edd staff 1271 Jun 15 10:42 package.rds
-rw-rw-r-- 1 edd staff  331 Jun 15 10:42 Rd.rds

/usr/local/lib/R/site-library/digest/R:
total 16
-rw-rw-r-- 1 edd staff 1056 Jun 15 10:42 digest
-rw-rw-r-- 1 edd staff 4168 Jun 15 10:42 digest.rdb
-rw-rw-r-- 1 edd staff  388 Jun 15 10:42 digest.rdx

R Under development (unstable) (2013-06-14 r62964) -- "Unsuffered Consequences"
Copyright (C) 2013 The R Foundation for Statistical Computing
Platform: x86_64-unknown-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> update.packages(repos="http://cran.r-project.org", ask=FALSE, lib.loc="/usr/local/lib/R/site-library")
trying URL 'http://cran.r-project.org/src/contrib/digest_0.6.3.tar.gz'
Content type 'application/x-gzip' length 80083 bytes (78 Kb)
opened URL
==================================================
downloaded 78 Kb

* installing *source* package ?digest? ...
** package ?digest? successfully unpacked and MD5 sums checked
** libs
ccache gcc -I/usr/local/lib/R-devel/lib/R/include -DNDEBUG  -I/usr/local/include    -fpic  -ggdb -pipe -std=gnu99 -Wall -pedantic  -c aes.c -o aes.o
ccache gcc -I/usr/local/lib/R-devel/lib/R/include -DNDEBUG  -I/usr/local/include    -fpic  -ggdb -pipe -std=gnu99 -Wall -pedantic  -c crc32.c -o crc32.o
ccache gcc -I/usr/local/lib/R-devel/lib/R/include -DNDEBUG  -I/usr/local/include    -fpic  -ggdb -pipe -std=gnu99 -Wall -pedantic  -c digest.c -o digest.o
ccache gcc -I/usr/local/lib/R-devel/lib/R/include -DNDEBUG  -I/usr/local/include    -fpic  -ggdb -pipe -std=gnu99 -Wall -pedantic  -c md5.c -o md5.o
ccache gcc -I/usr/local/lib/R-devel/lib/R/include -DNDEBUG  -I/usr/local/include    -fpic  -ggdb -pipe -std=gnu99 -Wall -pedantic  -c raes.c -o raes.o
ccache gcc -I/usr/local/lib/R-devel/lib/R/include -DNDEBUG  -I/usr/local/include    -fpic  -ggdb -pipe -std=gnu99 -Wall -pedantic  -c sha1.c -o sha1.o
ccache gcc -I/usr/local/lib/R-devel/lib/R/include -DNDEBUG  -I/usr/local/include    -fpic  -ggdb -pipe -std=gnu99 -Wall -pedantic  -c sha2.c -o sha2.o
ccache gcc -I/usr/local/lib/R-devel/lib/R/include -DNDEBUG  -I/usr/local/include    -fpic  -ggdb -pipe -std=gnu99 -Wall -pedantic  -c sha256.c -o sha256.o
ccache gcc -shared -L/usr/local/lib -o digest.so aes.o crc32.o digest.o md5.o raes.o sha1.o sha2.o sha256.o -L/usr/local/lib/R-devel/lib/R/lib -lR
installing to /usr/local/lib/R/site-library/digest/libs
** R
** inst
** preparing package for lazy loading
** help
*** installing help indices
** building package indices
** testing if installed package can be loaded
* DONE (digest)

The downloaded source packages are in
	?/tmp/RtmpxJgmSB/downloaded_packages?
> 
> 
drwxrwxr-x 7 lmp staff 4096 Jun 15 10:42 /usr/local/lib/R/site-library/digest/
/usr/local/lib/R/site-library/digest/:
total 52
-rw-rw-r-- 1 lmp staff  1767 Jun 15 10:42 DESCRIPTION
-rw-rw-r-- 1 lmp staff 18092 Jun 15 10:42 GPL-2
drwxrwxr-x 2 lmp staff  4096 Jun 15 10:42 help
drwxrwxr-x 2 lmp staff  4096 Jun 15 10:42 html
-rw-rw-r-- 1 lmp staff   253 Jun 15 10:42 INDEX
drwxrwxr-x 2 lmp staff  4096 Jun 15 10:42 libs
drwxrwxr-x 2 lmp staff  4096 Jun 15 10:42 Meta
-rw-rw-r-- 1 lmp staff   140 Jun 15 10:42 NAMESPACE
drwxrwxr-x 2 lmp staff  4096 Jun 15 10:42 R

/usr/local/lib/R/site-library/digest/help:
total 36
-rw-rw-r-- 1 lmp staff    80 Jun 15 10:42 aliases.rds
-rw-rw-r-- 1 lmp staff    32 Jun 15 10:42 AnIndex
-rw-rw-r-- 1 lmp staff 17871 Jun 15 10:42 digest.rdb
-rw-rw-r-- 1 lmp staff   195 Jun 15 10:42 digest.rdx
-rw-rw-r-- 1 lmp staff   140 Jun 15 10:42 paths.rds

/usr/local/lib/R/site-library/digest/html:
total 8
-rw-rw-r-- 1 lmp staff 1236 Jun 15 10:42 00Index.html
-rw-rw-r-- 1 lmp staff 1179 Jun 15 10:42 R.css

/usr/local/lib/R/site-library/digest/libs:
total 172
-rwxrwxr-x 1 lmp staff 175154 Jun 15 10:42 digest.so

/usr/local/lib/R/site-library/digest/Meta:
total 20
-rw-rw-r-- 1 lmp staff  351 Jun 15 10:42 hsearch.rds
-rw-rw-r-- 1 lmp staff  117 Jun 15 10:42 links.rds
-rw-rw-r-- 1 lmp staff  224 Jun 15 10:42 nsInfo.rds
-rw-rw-r-- 1 lmp staff 1325 Jun 15 10:42 package.rds
-rw-rw-r-- 1 lmp staff  331 Jun 15 10:42 Rd.rds

/usr/local/lib/R/site-library/digest/R:
total 16
-rw-rw-r-- 1 lmp staff 1056 Jun 15 10:42 digest
-rw-rw-r-- 1 lmp staff 4205 Jun 15 10:42 digest.rdb
-rw-rw-r-- 1 lmp staff  385 Jun 15 10:42 digest.rdx
edd at max:~$ 

-- 
Dirk Eddelbuettel | edd at debian.org | http://dirk.eddelbuettel.com


From maechler at stat.math.ethz.ch  Sat Jun 15 20:42:23 2013
From: maechler at stat.math.ethz.ch (Martin Maechler)
Date: Sat, 15 Jun 2013 20:42:23 +0200
Subject: [Rd] R CMD INSTALL and file permission settings
In-Reply-To: <20924.35840.998596.681242@max.nulle.part>
References: <20915.23136.75704.347469@max.nulle.part>
	<20917.40985.705751.95999@stat.math.ethz.ch>
	<20923.30546.509634.752403@stat.math.ethz.ch>
	<1A628E3D-CC34-4C38-B23B-03169D3C7AD0@r-project.org>
	<20923.32408.400045.470669@max.nulle.part>
	<046C1EB4-F22D-457F-BB2C-27D666E3418F@r-project.org>
	<20923.57124.150011.263475@max.nulle.part>
	<82EC6E1A-75F7-4172-968B-CA55AB102171@r-project.org>
	<20924.22356.973252.449984@max.nulle.part>
	<20924.35840.998596.681242@max.nulle.part>
Message-ID: <20924.46479.760166.350303@stat.math.ethz.ch>

>>>>> Dirk Eddelbuettel <edd at debian.org>
>>>>>     on Sat, 15 Jun 2013 10:45:04 -0500 writes:

    > On 15 June 2013 at 07:00, Dirk Eddelbuettel wrote:
    > | 
    > | On 15 June 2013 at 07:47, Simon Urbanek wrote: | |
    > Because update.packages() doesn't restore the
    > group-writable bit. Which leads us to my point that this
    > is not what you really want.
    > | 
    > | Ooops. I'll take another look.

    > Done.  "It works."  For fairly generous definitions of
    > working. I'll detail:

    > i) My initial patch only used options() to set things.
    > Martin was not to enthralled with this and guided the
    > patch towards using --group-writable as an option.

    > ii) With --group-writable, installation works but updates
    > fail as noticed by Simon.

    > iii) If we fall back to using options() [ or an
    > environment variable ], things works.  A log is below.

Hmm, but this only works if everyone who calls  update.packages() also has
this options() setting, no?
Why would the update keep the package files group writable otherwise ?
If the updater has no group-writable option she can still update
the package you installed, but you can no longer, right?

I still think the approach to abolish all settings and just
trigger group-writable package installation *when* the library
directory is group writable is so simple we should adopt it,
and can forget all options/ command line arguments / environment
variables about this topic.

Martin

    > iv) I guess those of you who want the --group-writeable
    > option need to ensure it also works for update.packages()
    > as new option?

    > I am happy with what we have right now as it works in the
    > context established by my patch.  Martin's addition of
    > --group-writable is a bit more ambitious and we may need
    > to enhance update.package(), or tell everybody to also
    > (??)  use the option() setting, or environment variable.

    > Two things follow, a quick test script and a log from the
    > script.

    > Dirk


> Script
> 
> #!/bin/bash
> 
> ## we use digest as an example as it is pretty small
> cd ~/svn/digest
> ls -l digest_0.6.?.tar.gz 
> 
> ## we make two assumptions:
> ##
> ## a) R-devel (called via a shell script wrapper)
> ~/bin/R-devel.sh --version | head -1
> ##
> ## b) An option has been set
> cat /usr/local/lib/R-devel/lib/R/etc/Rprofile.site
> 
> ## now install an older version so that we can upgrade later
> ## this is running as 'edd' ie me
> ~/bin/R-devel.sh CMD INSTALL digest_0.6.2.tar.gz
> 
> ls -ld /usr/local/lib/R/site-library/digest/
> ls -lR /usr/local/lib/R/site-library/digest/
> 
> ## now try the upgrade as another user in the group 
> sudo su lmp -c '~edd/bin/R-devel.sh -e "update.packages(repos=\"http://cran.r-project.org\", ask=FALSE, lib.loc=\"/usr/local/lib/R/site-library\")"'
> 
> ls -ld /usr/local/lib/R/site-library/digest/
> ls -lR /usr/local/lib/R/site-library/digest/
> 
> 
> 
> Session log
> 
> edd at max:~$ /tmp/testRupgrade.sh 
> -rw-r--r-- 1 edd edd 53344 Nov 25  2012 digest_0.6.0.tar.gz
> -rw-r--r-- 1 edd edd 76839 Jan 21 09:25 digest_0.6.1.tar.gz
> -rw-r--r-- 1 edd edd 76771 Jan 25 11:33 digest_0.6.2.tar.gz
> -rw-r--r-- 1 edd edd 78002 Feb 16 06:35 digest_0.6.3.tar.gz
> R Under development (unstable) (2013-06-14 r62964) -- "Unsuffered Consequences"
> options("group.writable.pkgs"=TRUE)
> * installing to library ?/usr/local/lib/R/site-library?
> * installing *source* package ?digest? ...
> ** libs
> ccache gcc-4.7 -I/usr/local/lib/R-devel/lib/R/include -DNDEBUG  -I/usr/local/include    -fpic  -O3 -g0 -Wall -pipe -pedantic -std=gnu99  -c aes.c -o aes.o
> ccache gcc-4.7 -I/usr/local/lib/R-devel/lib/R/include -DNDEBUG  -I/usr/local/include    -fpic  -O3 -g0 -Wall -pipe -pedantic -std=gnu99  -c crc32.c -o crc32.o
> ccache gcc-4.7 -I/usr/local/lib/R-devel/lib/R/include -DNDEBUG  -I/usr/local/include    -fpic  -O3 -g0 -Wall -pipe -pedantic -std=gnu99  -c digest.c -o digest.o
> ccache gcc-4.7 -I/usr/local/lib/R-devel/lib/R/include -DNDEBUG  -I/usr/local/include    -fpic  -O3 -g0 -Wall -pipe -pedantic -std=gnu99  -c md5.c -o md5.o
> ccache gcc-4.7 -I/usr/local/lib/R-devel/lib/R/include -DNDEBUG  -I/usr/local/include    -fpic  -O3 -g0 -Wall -pipe -pedantic -std=gnu99  -c raes.c -o raes.o
> ccache gcc-4.7 -I/usr/local/lib/R-devel/lib/R/include -DNDEBUG  -I/usr/local/include    -fpic  -O3 -g0 -Wall -pipe -pedantic -std=gnu99  -c sha1.c -o sha1.o
> ccache gcc-4.7 -I/usr/local/lib/R-devel/lib/R/include -DNDEBUG  -I/usr/local/include    -fpic  -O3 -g0 -Wall -pipe -pedantic -std=gnu99  -c sha2.c -o sha2.o
> ccache gcc-4.7 -I/usr/local/lib/R-devel/lib/R/include -DNDEBUG  -I/usr/local/include    -fpic  -O3 -g0 -Wall -pipe -pedantic -std=gnu99  -c sha256.c -o sha256.o
> sha2.c: In function ?SHA256_Final?:
> sha2.c:606:3: warning: dereferencing type-punned pointer will break strict-aliasing rules [-Wstrict-aliasing]
> sha2.c: In function ?SHA512_Last?:
> sha2.c:923:2: warning: dereferencing type-punned pointer will break strict-aliasing rules [-Wstrict-aliasing]
> sha2.c:924:2: warning: dereferencing type-punned pointer will break strict-aliasing rules [-Wstrict-aliasing]
> ccache gcc-4.7 -shared -L/usr/local/lib -o digest.so aes.o crc32.o digest.o md5.o raes.o sha1.o sha2.o sha256.o -L/usr/local/lib/R-devel/lib/R/lib -lR
> installing to /usr/local/lib/R/site-library/digest/libs
> ** R
> ** inst
> ** preparing package for lazy loading
> ** help
> *** installing help indices
> ** building package indices
> ** testing if installed package can be loaded
> * DONE (digest)
> drwxrwxr-x 7 edd staff 4096 Jun 15 10:42 /usr/local/lib/R/site-library/digest/
> /usr/local/lib/R/site-library/digest/:
> total 52
> -rw-rw-r-- 1 edd staff  1605 Jun 15 10:42 DESCRIPTION
> -rw-rw-r-- 1 edd staff 18092 Jun 15 10:42 GPL-2
> drwxrwxr-x 2 edd staff  4096 Jun 15 10:42 help
> drwxrwxr-x 2 edd staff  4096 Jun 15 10:42 html
> -rw-rw-r-- 1 edd staff   271 Jun 15 10:42 INDEX
> drwxrwxr-x 2 edd staff  4096 Jun 15 10:42 libs
> drwxrwxr-x 2 edd staff  4096 Jun 15 10:42 Meta
> -rw-rw-r-- 1 edd staff   140 Jun 15 10:42 NAMESPACE
> drwxrwxr-x 2 edd staff  4096 Jun 15 10:42 R
> 
> /usr/local/lib/R/site-library/digest/help:
> total 36
> -rw-rw-r-- 1 edd staff    80 Jun 15 10:42 aliases.rds
> -rw-rw-r-- 1 edd staff    32 Jun 15 10:42 AnIndex
> -rw-rw-r-- 1 edd staff 17857 Jun 15 10:42 digest.rdb
> -rw-rw-r-- 1 edd staff   193 Jun 15 10:42 digest.rdx
> -rw-rw-r-- 1 edd staff   140 Jun 15 10:42 paths.rds
> 
> /usr/local/lib/R/site-library/digest/html:
> total 8
> -rw-rw-r-- 1 edd staff 1236 Jun 15 10:42 00Index.html
> -rw-rw-r-- 1 edd staff 1179 Jun 15 10:42 R.css
> 
> /usr/local/lib/R/site-library/digest/libs:
> total 120
> -rwxrwxr-x 1 edd staff 118956 Jun 15 10:42 digest.so
> 
> /usr/local/lib/R/site-library/digest/Meta:
> total 20
> -rw-rw-r-- 1 edd staff  351 Jun 15 10:42 hsearch.rds
> -rw-rw-r-- 1 edd staff  117 Jun 15 10:42 links.rds
> -rw-rw-r-- 1 edd staff  224 Jun 15 10:42 nsInfo.rds
> -rw-rw-r-- 1 edd staff 1271 Jun 15 10:42 package.rds
> -rw-rw-r-- 1 edd staff  331 Jun 15 10:42 Rd.rds
> 
> /usr/local/lib/R/site-library/digest/R:
> total 16
> -rw-rw-r-- 1 edd staff 1056 Jun 15 10:42 digest
> -rw-rw-r-- 1 edd staff 4168 Jun 15 10:42 digest.rdb
> -rw-rw-r-- 1 edd staff  388 Jun 15 10:42 digest.rdx
> 
> R Under development (unstable) (2013-06-14 r62964) -- "Unsuffered Consequences"
> Copyright (C) 2013 The R Foundation for Statistical Computing
> Platform: x86_64-unknown-linux-gnu (64-bit)
> 
> R is free software and comes with ABSOLUTELY NO WARRANTY.
> You are welcome to redistribute it under certain conditions.
> Type 'license()' or 'licence()' for distribution details.
> 
>   Natural language support but running in an English locale
> 
> R is a collaborative project with many contributors.
> Type 'contributors()' for more information and
> 'citation()' on how to cite R or R packages in publications.
> 
> Type 'demo()' for some demos, 'help()' for on-line help, or
> 'help.start()' for an HTML browser interface to help.
> Type 'q()' to quit R.
> 
> > update.packages(repos="http://cran.r-project.org", ask=FALSE, lib.loc="/usr/local/lib/R/site-library")
> trying URL 'http://cran.r-project.org/src/contrib/digest_0.6.3.tar.gz'
> Content type 'application/x-gzip' length 80083 bytes (78 Kb)
> opened URL
> ==================================================
> downloaded 78 Kb
> 
> * installing *source* package ?digest? ...
> ** package ?digest? successfully unpacked and MD5 sums checked
> ** libs
> ccache gcc -I/usr/local/lib/R-devel/lib/R/include -DNDEBUG  -I/usr/local/include    -fpic  -ggdb -pipe -std=gnu99 -Wall -pedantic  -c aes.c -o aes.o
> ccache gcc -I/usr/local/lib/R-devel/lib/R/include -DNDEBUG  -I/usr/local/include    -fpic  -ggdb -pipe -std=gnu99 -Wall -pedantic  -c crc32.c -o crc32.o
> ccache gcc -I/usr/local/lib/R-devel/lib/R/include -DNDEBUG  -I/usr/local/include    -fpic  -ggdb -pipe -std=gnu99 -Wall -pedantic  -c digest.c -o digest.o
> ccache gcc -I/usr/local/lib/R-devel/lib/R/include -DNDEBUG  -I/usr/local/include    -fpic  -ggdb -pipe -std=gnu99 -Wall -pedantic  -c md5.c -o md5.o
> ccache gcc -I/usr/local/lib/R-devel/lib/R/include -DNDEBUG  -I/usr/local/include    -fpic  -ggdb -pipe -std=gnu99 -Wall -pedantic  -c raes.c -o raes.o
> ccache gcc -I/usr/local/lib/R-devel/lib/R/include -DNDEBUG  -I/usr/local/include    -fpic  -ggdb -pipe -std=gnu99 -Wall -pedantic  -c sha1.c -o sha1.o
> ccache gcc -I/usr/local/lib/R-devel/lib/R/include -DNDEBUG  -I/usr/local/include    -fpic  -ggdb -pipe -std=gnu99 -Wall -pedantic  -c sha2.c -o sha2.o
> ccache gcc -I/usr/local/lib/R-devel/lib/R/include -DNDEBUG  -I/usr/local/include    -fpic  -ggdb -pipe -std=gnu99 -Wall -pedantic  -c sha256.c -o sha256.o
> ccache gcc -shared -L/usr/local/lib -o digest.so aes.o crc32.o digest.o md5.o raes.o sha1.o sha2.o sha256.o -L/usr/local/lib/R-devel/lib/R/lib -lR
> installing to /usr/local/lib/R/site-library/digest/libs
> ** R
> ** inst
> ** preparing package for lazy loading
> ** help
> *** installing help indices
> ** building package indices
> ** testing if installed package can be loaded
> * DONE (digest)
> 
> The downloaded source packages are in
> 	?/tmp/RtmpxJgmSB/downloaded_packages?
> > 
> > 
> drwxrwxr-x 7 lmp staff 4096 Jun 15 10:42 /usr/local/lib/R/site-library/digest/
> /usr/local/lib/R/site-library/digest/:
> total 52
> -rw-rw-r-- 1 lmp staff  1767 Jun 15 10:42 DESCRIPTION
> -rw-rw-r-- 1 lmp staff 18092 Jun 15 10:42 GPL-2
> drwxrwxr-x 2 lmp staff  4096 Jun 15 10:42 help
> drwxrwxr-x 2 lmp staff  4096 Jun 15 10:42 html
> -rw-rw-r-- 1 lmp staff   253 Jun 15 10:42 INDEX
> drwxrwxr-x 2 lmp staff  4096 Jun 15 10:42 libs
> drwxrwxr-x 2 lmp staff  4096 Jun 15 10:42 Meta
> -rw-rw-r-- 1 lmp staff   140 Jun 15 10:42 NAMESPACE
> drwxrwxr-x 2 lmp staff  4096 Jun 15 10:42 R
> 
> /usr/local/lib/R/site-library/digest/help:
> total 36
> -rw-rw-r-- 1 lmp staff    80 Jun 15 10:42 aliases.rds
> -rw-rw-r-- 1 lmp staff    32 Jun 15 10:42 AnIndex
> -rw-rw-r-- 1 lmp staff 17871 Jun 15 10:42 digest.rdb
> -rw-rw-r-- 1 lmp staff   195 Jun 15 10:42 digest.rdx
> -rw-rw-r-- 1 lmp staff   140 Jun 15 10:42 paths.rds
> 
> /usr/local/lib/R/site-library/digest/html:
> total 8
> -rw-rw-r-- 1 lmp staff 1236 Jun 15 10:42 00Index.html
> -rw-rw-r-- 1 lmp staff 1179 Jun 15 10:42 R.css
> 
> /usr/local/lib/R/site-library/digest/libs:
> total 172
> -rwxrwxr-x 1 lmp staff 175154 Jun 15 10:42 digest.so
> 
> /usr/local/lib/R/site-library/digest/Meta:
> total 20
> -rw-rw-r-- 1 lmp staff  351 Jun 15 10:42 hsearch.rds
> -rw-rw-r-- 1 lmp staff  117 Jun 15 10:42 links.rds
> -rw-rw-r-- 1 lmp staff  224 Jun 15 10:42 nsInfo.rds
> -rw-rw-r-- 1 lmp staff 1325 Jun 15 10:42 package.rds
> -rw-rw-r-- 1 lmp staff  331 Jun 15 10:42 Rd.rds
> 
> /usr/local/lib/R/site-library/digest/R:
> total 16
> -rw-rw-r-- 1 lmp staff 1056 Jun 15 10:42 digest
> -rw-rw-r-- 1 lmp staff 4205 Jun 15 10:42 digest.rdb
> -rw-rw-r-- 1 lmp staff  385 Jun 15 10:42 digest.rdx
> edd at max:~$ 
> 
> -- 
> Dirk Eddelbuettel | edd at debian.org | http://dirk.eddelbuettel.com


From edd at debian.org  Sat Jun 15 21:13:31 2013
From: edd at debian.org (Dirk Eddelbuettel)
Date: Sat, 15 Jun 2013 14:13:31 -0500
Subject: [Rd] R CMD INSTALL and file permission settings
In-Reply-To: <20924.46479.760166.350303@stat.math.ethz.ch>
References: <20915.23136.75704.347469@max.nulle.part>
	<20917.40985.705751.95999@stat.math.ethz.ch>
	<20923.30546.509634.752403@stat.math.ethz.ch>
	<1A628E3D-CC34-4C38-B23B-03169D3C7AD0@r-project.org>
	<20923.32408.400045.470669@max.nulle.part>
	<046C1EB4-F22D-457F-BB2C-27D666E3418F@r-project.org>
	<20923.57124.150011.263475@max.nulle.part>
	<82EC6E1A-75F7-4172-968B-CA55AB102171@r-project.org>
	<20924.22356.973252.449984@max.nulle.part>
	<20924.35840.998596.681242@max.nulle.part>
	<20924.46479.760166.350303@stat.math.ethz.ch>
Message-ID: <20924.48347.174325.739567@max.nulle.part>


On 15 June 2013 at 20:42, Martin Maechler wrote:
| >>>>> Dirk Eddelbuettel <edd at debian.org>
| >>>>>     on Sat, 15 Jun 2013 10:45:04 -0500 writes:
| 
|     > On 15 June 2013 at 07:00, Dirk Eddelbuettel wrote:
|     > | 
|     > | On 15 June 2013 at 07:47, Simon Urbanek wrote: | |
|     > Because update.packages() doesn't restore the
|     > group-writable bit. Which leads us to my point that this
|     > is not what you really want.
|     > | 
|     > | Ooops. I'll take another look.
| 
|     > Done.  "It works."  For fairly generous definitions of
|     > working. I'll detail:
| 
|     > i) My initial patch only used options() to set things.
|     > Martin was not to enthralled with this and guided the
|     > patch towards using --group-writable as an option.
| 
|     > ii) With --group-writable, installation works but updates
|     > fail as noticed by Simon.
| 
|     > iii) If we fall back to using options() [ or an
|     > environment variable ], things works.  A log is below.
| 
| Hmm, but this only works if everyone who calls  update.packages() also has
| this options() setting, no?

Exactly, which is why I like options() called from $R_HOME/etc/Rprofile.site
for all users.  Just how I add all (relevant) users to the relevant group.

This is meant for site-wide policy and site-wide once-and-for-all behaviour,
not having to tell all luser to please add --group-writable to their
invocations.  Because they will forget.

| Why would the update keep the package files group writable otherwise ?

Because we tell it to via options().

| I still think the approach to abolish all settings and just
| trigger group-writable package installation *when* the library
| directory is group writable is so simple we should adopt it,
| and can forget all options/ command line arguments / environment
| variables about this topic.

Maybe. I guess you would still need to match the gid for which the directory
is set to the gid of the user running the update.

Or you just use what we now and let the operating system handle this. It is
pretty good at it :)

Dirk

-- 
Dirk Eddelbuettel | edd at debian.org | http://dirk.eddelbuettel.com


From simon.urbanek at r-project.org  Sun Jun 16 01:38:21 2013
From: simon.urbanek at r-project.org (Simon Urbanek)
Date: Sat, 15 Jun 2013 19:38:21 -0400
Subject: [Rd] R CMD INSTALL and file permission settings
In-Reply-To: <20924.46479.760166.350303@stat.math.ethz.ch>
References: <20915.23136.75704.347469@max.nulle.part>
	<20917.40985.705751.95999@stat.math.ethz.ch>
	<20923.30546.509634.752403@stat.math.ethz.ch>
	<1A628E3D-CC34-4C38-B23B-03169D3C7AD0@r-project.org>
	<20923.32408.400045.470669@max.nulle.part>
	<046C1EB4-F22D-457F-BB2C-27D666E3418F@r-project.org>
	<20923.57124.150011.263475@max.nulle.part>
	<82EC6E1A-75F7-4172-968B-CA55AB102171@r-project.org>
	<20924.22356.973252.449984@max.nulle.part>
	<20924.35840.998596.681242@max.nulle.part>
	<20924.46479.760166.350303@stat.math.ethz.ch>
Message-ID: <E307D292-451C-4233-A660-87A2B88B52A6@r-project.org>


On Jun 15, 2013, at 2:42 PM, Martin Maechler wrote:

>>>>>> Dirk Eddelbuettel <edd at debian.org>
>>>>>>    on Sat, 15 Jun 2013 10:45:04 -0500 writes:
> 
>> On 15 June 2013 at 07:00, Dirk Eddelbuettel wrote:
>> | 
>> | On 15 June 2013 at 07:47, Simon Urbanek wrote: | |
>> Because update.packages() doesn't restore the
>> group-writable bit. Which leads us to my point that this
>> is not what you really want.
>> | 
>> | Ooops. I'll take another look.
> 
>> Done.  "It works."  For fairly generous definitions of
>> working. I'll detail:
> 
>> i) My initial patch only used options() to set things.
>> Martin was not to enthralled with this and guided the
>> patch towards using --group-writable as an option.
> 
>> ii) With --group-writable, installation works but updates
>> fail as noticed by Simon.
> 
>> iii) If we fall back to using options() [ or an
>> environment variable ], things works.  A log is below.
> 
> Hmm, but this only works if everyone who calls  update.packages() also has
> this options() setting, no?
> Why would the update keep the package files group writable otherwise ?
> If the updater has no group-writable option she can still update
> the package you installed, but you can no longer, right?
> 
> I still think the approach to abolish all settings and just
> trigger group-writable package installation *when* the library
> directory is group writable is so simple we should adopt it,
> and can forget all options/ command line arguments / environment
> variables about this topic.
> 

I fully agree. Also thanks for summarizing the discussion earlier today - it was dead on.

Thanks,
Simon



> Martin
> 
>> iv) I guess those of you who want the --group-writeable
>> option need to ensure it also works for update.packages()
>> as new option?
> 
>> I am happy with what we have right now as it works in the
>> context established by my patch.  Martin's addition of
>> --group-writable is a bit more ambitious and we may need
>> to enhance update.package(), or tell everybody to also
>> (??)  use the option() setting, or environment variable.
> 
>> Two things follow, a quick test script and a log from the
>> script.
> 
>> Dirk
> 
> 
>> Script
>> 
>> #!/bin/bash
>> 
>> ## we use digest as an example as it is pretty small
>> cd ~/svn/digest
>> ls -l digest_0.6.?.tar.gz 
>> 
>> ## we make two assumptions:
>> ##
>> ## a) R-devel (called via a shell script wrapper)
>> ~/bin/R-devel.sh --version | head -1
>> ##
>> ## b) An option has been set
>> cat /usr/local/lib/R-devel/lib/R/etc/Rprofile.site
>> 
>> ## now install an older version so that we can upgrade later
>> ## this is running as 'edd' ie me
>> ~/bin/R-devel.sh CMD INSTALL digest_0.6.2.tar.gz
>> 
>> ls -ld /usr/local/lib/R/site-library/digest/
>> ls -lR /usr/local/lib/R/site-library/digest/
>> 
>> ## now try the upgrade as another user in the group 
>> sudo su lmp -c '~edd/bin/R-devel.sh -e "update.packages(repos=\"http://cran.r-project.org\", ask=FALSE, lib.loc=\"/usr/local/lib/R/site-library\")"'
>> 
>> ls -ld /usr/local/lib/R/site-library/digest/
>> ls -lR /usr/local/lib/R/site-library/digest/
>> 
>> 
>> 
>> Session log
>> 
>> edd at max:~$ /tmp/testRupgrade.sh 
>> -rw-r--r-- 1 edd edd 53344 Nov 25  2012 digest_0.6.0.tar.gz
>> -rw-r--r-- 1 edd edd 76839 Jan 21 09:25 digest_0.6.1.tar.gz
>> -rw-r--r-- 1 edd edd 76771 Jan 25 11:33 digest_0.6.2.tar.gz
>> -rw-r--r-- 1 edd edd 78002 Feb 16 06:35 digest_0.6.3.tar.gz
>> R Under development (unstable) (2013-06-14 r62964) -- "Unsuffered Consequences"
>> options("group.writable.pkgs"=TRUE)
>> * installing to library ?/usr/local/lib/R/site-library?
>> * installing *source* package ?digest? ...
>> ** libs
>> ccache gcc-4.7 -I/usr/local/lib/R-devel/lib/R/include -DNDEBUG  -I/usr/local/include    -fpic  -O3 -g0 -Wall -pipe -pedantic -std=gnu99  -c aes.c -o aes.o
>> ccache gcc-4.7 -I/usr/local/lib/R-devel/lib/R/include -DNDEBUG  -I/usr/local/include    -fpic  -O3 -g0 -Wall -pipe -pedantic -std=gnu99  -c crc32.c -o crc32.o
>> ccache gcc-4.7 -I/usr/local/lib/R-devel/lib/R/include -DNDEBUG  -I/usr/local/include    -fpic  -O3 -g0 -Wall -pipe -pedantic -std=gnu99  -c digest.c -o digest.o
>> ccache gcc-4.7 -I/usr/local/lib/R-devel/lib/R/include -DNDEBUG  -I/usr/local/include    -fpic  -O3 -g0 -Wall -pipe -pedantic -std=gnu99  -c md5.c -o md5.o
>> ccache gcc-4.7 -I/usr/local/lib/R-devel/lib/R/include -DNDEBUG  -I/usr/local/include    -fpic  -O3 -g0 -Wall -pipe -pedantic -std=gnu99  -c raes.c -o raes.o
>> ccache gcc-4.7 -I/usr/local/lib/R-devel/lib/R/include -DNDEBUG  -I/usr/local/include    -fpic  -O3 -g0 -Wall -pipe -pedantic -std=gnu99  -c sha1.c -o sha1.o
>> ccache gcc-4.7 -I/usr/local/lib/R-devel/lib/R/include -DNDEBUG  -I/usr/local/include    -fpic  -O3 -g0 -Wall -pipe -pedantic -std=gnu99  -c sha2.c -o sha2.o
>> ccache gcc-4.7 -I/usr/local/lib/R-devel/lib/R/include -DNDEBUG  -I/usr/local/include    -fpic  -O3 -g0 -Wall -pipe -pedantic -std=gnu99  -c sha256.c -o sha256.o
>> sha2.c: In function ?SHA256_Final?:
>> sha2.c:606:3: warning: dereferencing type-punned pointer will break strict-aliasing rules [-Wstrict-aliasing]
>> sha2.c: In function ?SHA512_Last?:
>> sha2.c:923:2: warning: dereferencing type-punned pointer will break strict-aliasing rules [-Wstrict-aliasing]
>> sha2.c:924:2: warning: dereferencing type-punned pointer will break strict-aliasing rules [-Wstrict-aliasing]
>> ccache gcc-4.7 -shared -L/usr/local/lib -o digest.so aes.o crc32.o digest.o md5.o raes.o sha1.o sha2.o sha256.o -L/usr/local/lib/R-devel/lib/R/lib -lR
>> installing to /usr/local/lib/R/site-library/digest/libs
>> ** R
>> ** inst
>> ** preparing package for lazy loading
>> ** help
>> *** installing help indices
>> ** building package indices
>> ** testing if installed package can be loaded
>> * DONE (digest)
>> drwxrwxr-x 7 edd staff 4096 Jun 15 10:42 /usr/local/lib/R/site-library/digest/
>> /usr/local/lib/R/site-library/digest/:
>> total 52
>> -rw-rw-r-- 1 edd staff  1605 Jun 15 10:42 DESCRIPTION
>> -rw-rw-r-- 1 edd staff 18092 Jun 15 10:42 GPL-2
>> drwxrwxr-x 2 edd staff  4096 Jun 15 10:42 help
>> drwxrwxr-x 2 edd staff  4096 Jun 15 10:42 html
>> -rw-rw-r-- 1 edd staff   271 Jun 15 10:42 INDEX
>> drwxrwxr-x 2 edd staff  4096 Jun 15 10:42 libs
>> drwxrwxr-x 2 edd staff  4096 Jun 15 10:42 Meta
>> -rw-rw-r-- 1 edd staff   140 Jun 15 10:42 NAMESPACE
>> drwxrwxr-x 2 edd staff  4096 Jun 15 10:42 R
>> 
>> /usr/local/lib/R/site-library/digest/help:
>> total 36
>> -rw-rw-r-- 1 edd staff    80 Jun 15 10:42 aliases.rds
>> -rw-rw-r-- 1 edd staff    32 Jun 15 10:42 AnIndex
>> -rw-rw-r-- 1 edd staff 17857 Jun 15 10:42 digest.rdb
>> -rw-rw-r-- 1 edd staff   193 Jun 15 10:42 digest.rdx
>> -rw-rw-r-- 1 edd staff   140 Jun 15 10:42 paths.rds
>> 
>> /usr/local/lib/R/site-library/digest/html:
>> total 8
>> -rw-rw-r-- 1 edd staff 1236 Jun 15 10:42 00Index.html
>> -rw-rw-r-- 1 edd staff 1179 Jun 15 10:42 R.css
>> 
>> /usr/local/lib/R/site-library/digest/libs:
>> total 120
>> -rwxrwxr-x 1 edd staff 118956 Jun 15 10:42 digest.so
>> 
>> /usr/local/lib/R/site-library/digest/Meta:
>> total 20
>> -rw-rw-r-- 1 edd staff  351 Jun 15 10:42 hsearch.rds
>> -rw-rw-r-- 1 edd staff  117 Jun 15 10:42 links.rds
>> -rw-rw-r-- 1 edd staff  224 Jun 15 10:42 nsInfo.rds
>> -rw-rw-r-- 1 edd staff 1271 Jun 15 10:42 package.rds
>> -rw-rw-r-- 1 edd staff  331 Jun 15 10:42 Rd.rds
>> 
>> /usr/local/lib/R/site-library/digest/R:
>> total 16
>> -rw-rw-r-- 1 edd staff 1056 Jun 15 10:42 digest
>> -rw-rw-r-- 1 edd staff 4168 Jun 15 10:42 digest.rdb
>> -rw-rw-r-- 1 edd staff  388 Jun 15 10:42 digest.rdx
>> 
>> R Under development (unstable) (2013-06-14 r62964) -- "Unsuffered Consequences"
>> Copyright (C) 2013 The R Foundation for Statistical Computing
>> Platform: x86_64-unknown-linux-gnu (64-bit)
>> 
>> R is free software and comes with ABSOLUTELY NO WARRANTY.
>> You are welcome to redistribute it under certain conditions.
>> Type 'license()' or 'licence()' for distribution details.
>> 
>>  Natural language support but running in an English locale
>> 
>> R is a collaborative project with many contributors.
>> Type 'contributors()' for more information and
>> 'citation()' on how to cite R or R packages in publications.
>> 
>> Type 'demo()' for some demos, 'help()' for on-line help, or
>> 'help.start()' for an HTML browser interface to help.
>> Type 'q()' to quit R.
>> 
>>> update.packages(repos="http://cran.r-project.org", ask=FALSE, lib.loc="/usr/local/lib/R/site-library")
>> trying URL 'http://cran.r-project.org/src/contrib/digest_0.6.3.tar.gz'
>> Content type 'application/x-gzip' length 80083 bytes (78 Kb)
>> opened URL
>> ==================================================
>> downloaded 78 Kb
>> 
>> * installing *source* package ?digest? ...
>> ** package ?digest? successfully unpacked and MD5 sums checked
>> ** libs
>> ccache gcc -I/usr/local/lib/R-devel/lib/R/include -DNDEBUG  -I/usr/local/include    -fpic  -ggdb -pipe -std=gnu99 -Wall -pedantic  -c aes.c -o aes.o
>> ccache gcc -I/usr/local/lib/R-devel/lib/R/include -DNDEBUG  -I/usr/local/include    -fpic  -ggdb -pipe -std=gnu99 -Wall -pedantic  -c crc32.c -o crc32.o
>> ccache gcc -I/usr/local/lib/R-devel/lib/R/include -DNDEBUG  -I/usr/local/include    -fpic  -ggdb -pipe -std=gnu99 -Wall -pedantic  -c digest.c -o digest.o
>> ccache gcc -I/usr/local/lib/R-devel/lib/R/include -DNDEBUG  -I/usr/local/include    -fpic  -ggdb -pipe -std=gnu99 -Wall -pedantic  -c md5.c -o md5.o
>> ccache gcc -I/usr/local/lib/R-devel/lib/R/include -DNDEBUG  -I/usr/local/include    -fpic  -ggdb -pipe -std=gnu99 -Wall -pedantic  -c raes.c -o raes.o
>> ccache gcc -I/usr/local/lib/R-devel/lib/R/include -DNDEBUG  -I/usr/local/include    -fpic  -ggdb -pipe -std=gnu99 -Wall -pedantic  -c sha1.c -o sha1.o
>> ccache gcc -I/usr/local/lib/R-devel/lib/R/include -DNDEBUG  -I/usr/local/include    -fpic  -ggdb -pipe -std=gnu99 -Wall -pedantic  -c sha2.c -o sha2.o
>> ccache gcc -I/usr/local/lib/R-devel/lib/R/include -DNDEBUG  -I/usr/local/include    -fpic  -ggdb -pipe -std=gnu99 -Wall -pedantic  -c sha256.c -o sha256.o
>> ccache gcc -shared -L/usr/local/lib -o digest.so aes.o crc32.o digest.o md5.o raes.o sha1.o sha2.o sha256.o -L/usr/local/lib/R-devel/lib/R/lib -lR
>> installing to /usr/local/lib/R/site-library/digest/libs
>> ** R
>> ** inst
>> ** preparing package for lazy loading
>> ** help
>> *** installing help indices
>> ** building package indices
>> ** testing if installed package can be loaded
>> * DONE (digest)
>> 
>> The downloaded source packages are in
>> 	?/tmp/RtmpxJgmSB/downloaded_packages?
>>> 
>>> 
>> drwxrwxr-x 7 lmp staff 4096 Jun 15 10:42 /usr/local/lib/R/site-library/digest/
>> /usr/local/lib/R/site-library/digest/:
>> total 52
>> -rw-rw-r-- 1 lmp staff  1767 Jun 15 10:42 DESCRIPTION
>> -rw-rw-r-- 1 lmp staff 18092 Jun 15 10:42 GPL-2
>> drwxrwxr-x 2 lmp staff  4096 Jun 15 10:42 help
>> drwxrwxr-x 2 lmp staff  4096 Jun 15 10:42 html
>> -rw-rw-r-- 1 lmp staff   253 Jun 15 10:42 INDEX
>> drwxrwxr-x 2 lmp staff  4096 Jun 15 10:42 libs
>> drwxrwxr-x 2 lmp staff  4096 Jun 15 10:42 Meta
>> -rw-rw-r-- 1 lmp staff   140 Jun 15 10:42 NAMESPACE
>> drwxrwxr-x 2 lmp staff  4096 Jun 15 10:42 R
>> 
>> /usr/local/lib/R/site-library/digest/help:
>> total 36
>> -rw-rw-r-- 1 lmp staff    80 Jun 15 10:42 aliases.rds
>> -rw-rw-r-- 1 lmp staff    32 Jun 15 10:42 AnIndex
>> -rw-rw-r-- 1 lmp staff 17871 Jun 15 10:42 digest.rdb
>> -rw-rw-r-- 1 lmp staff   195 Jun 15 10:42 digest.rdx
>> -rw-rw-r-- 1 lmp staff   140 Jun 15 10:42 paths.rds
>> 
>> /usr/local/lib/R/site-library/digest/html:
>> total 8
>> -rw-rw-r-- 1 lmp staff 1236 Jun 15 10:42 00Index.html
>> -rw-rw-r-- 1 lmp staff 1179 Jun 15 10:42 R.css
>> 
>> /usr/local/lib/R/site-library/digest/libs:
>> total 172
>> -rwxrwxr-x 1 lmp staff 175154 Jun 15 10:42 digest.so
>> 
>> /usr/local/lib/R/site-library/digest/Meta:
>> total 20
>> -rw-rw-r-- 1 lmp staff  351 Jun 15 10:42 hsearch.rds
>> -rw-rw-r-- 1 lmp staff  117 Jun 15 10:42 links.rds
>> -rw-rw-r-- 1 lmp staff  224 Jun 15 10:42 nsInfo.rds
>> -rw-rw-r-- 1 lmp staff 1325 Jun 15 10:42 package.rds
>> -rw-rw-r-- 1 lmp staff  331 Jun 15 10:42 Rd.rds
>> 
>> /usr/local/lib/R/site-library/digest/R:
>> total 16
>> -rw-rw-r-- 1 lmp staff 1056 Jun 15 10:42 digest
>> -rw-rw-r-- 1 lmp staff 4205 Jun 15 10:42 digest.rdb
>> -rw-rw-r-- 1 lmp staff  385 Jun 15 10:42 digest.rdx
>> edd at max:~$ 
>> 
>> -- 
>> Dirk Eddelbuettel | edd at debian.org | http://dirk.eddelbuettel.com
> 
> 


From igauravsehrawat at gmail.com  Sun Jun 16 17:31:38 2013
From: igauravsehrawat at gmail.com (Gaurav Sehrawat)
Date: Sun, 16 Jun 2013 21:01:38 +0530
Subject: [Rd] Problem in linking a library in R package
Message-ID: <CAC2qNN4sHgXLJ2R5fqFpGdB3vXhO8N8vYAZh4OOJ5TWu5QoCwA@mail.gmail.com>

An embedded and charset-unspecified text was scrubbed...
Name: not available
URL: <https://stat.ethz.ch/pipermail/r-devel/attachments/20130616/afbf47a7/attachment.pl>

From wht_crl at yahoo.com  Mon Jun 17 12:01:02 2013
From: wht_crl at yahoo.com (carol white)
Date: Mon, 17 Jun 2013 03:01:02 -0700 (PDT)
Subject: [Rd] carol white
Message-ID: <1371463262.74208.YahooMailNeo@web121503.mail.ne1.yahoo.com>

An embedded and charset-unspecified text was scrubbed...
Name: not available
URL: <https://stat.ethz.ch/pipermail/r-devel/attachments/20130617/ec8fa262/attachment.pl>

From msuzen at gmail.com  Mon Jun 17 10:18:55 2013
From: msuzen at gmail.com (Suzen, Mehmet)
Date: Mon, 17 Jun 2013 10:18:55 +0200
Subject: [Rd] Problem in linking a library in R package
In-Reply-To: <CAC2qNN4sHgXLJ2R5fqFpGdB3vXhO8N8vYAZh4OOJ5TWu5QoCwA@mail.gmail.com>
References: <CAC2qNN4sHgXLJ2R5fqFpGdB3vXhO8N8vYAZh4OOJ5TWu5QoCwA@mail.gmail.com>
Message-ID: <CAPtbhHwZvrYpj-W2+cSCTktk+is-29ggHEf3Do5+A8tsVaKrbg@mail.gmail.com>

On 16 June 2013 17:31, Gaurav Sehrawat <igauravsehrawat at gmail.com> wrote:
> fine the shared library path in it. And how would i
> verify it has been loaded. The library is dynamic i have check using
> ldd fpmpi.so

have you tried setting environment variable LD_LIBRARY_PATH:
http://tldp.org/HOWTO/Program-Library-HOWTO/shared-libraries.html


From edd at debian.org  Mon Jun 17 13:44:11 2013
From: edd at debian.org (Dirk Eddelbuettel)
Date: Mon, 17 Jun 2013 06:44:11 -0500
Subject: [Rd] Problem in linking a library in R package
In-Reply-To: <CAC2qNN4sHgXLJ2R5fqFpGdB3vXhO8N8vYAZh4OOJ5TWu5QoCwA@mail.gmail.com>
References: <CAC2qNN4sHgXLJ2R5fqFpGdB3vXhO8N8vYAZh4OOJ5TWu5QoCwA@mail.gmail.com>
Message-ID: <20926.63115.20103.110251@max.nulle.part>


On 16 June 2013 at 21:01, Gaurav Sehrawat wrote:
| 1.I have a library fpmpi . I made the shared library fpmpi.so from this
| library.I am using ubuntu .
| 
| 2.Now, I want to use in my R package .My R package has src folder the there
| is makevars.in file

[...]

| where do i define the shared library path in it. And how would i
| verify it has been loaded. The library is dynamic i have check using
| ldd fpmpi.so

R does that at the end of the 'R CMD INSTALL pkg' command.  If R does not
complain, it worked.

You seem to have lifted extensively from the existing package "pdbMPI". It
would be preferabl if you could adjust its logging output (eg via configure)
to refer to your package.

There are many other MPI-using packages on CRAN you could study too.

Dirk

-- 
Dirk Eddelbuettel | edd at debian.org | http://dirk.eddelbuettel.com


From winstonchang1 at gmail.com  Mon Jun 17 19:01:32 2013
From: winstonchang1 at gmail.com (Winston Chang)
Date: Mon, 17 Jun 2013 12:01:32 -0500
Subject: [Rd] Odd behavior of symbol objects with classes/attributes
Message-ID: <CAFOpNVER4Vxf6rmXWTOHiywcyFsFUjuaAdFNGoae_gMh3KMvnA@mail.gmail.com>

I've been trying to add classes and attributes to symbol objects
(created with quote()), and the behavior is very strange, as
illustrated in the examples below.

If symbols aren't meant to have classes and attributes attached to
them, then perhaps R should throw errors when you attempt to do it?


# Using str() strips class from object
x <- quote(foo)
class(x) <- "bar"
str(x)
# Class 'bar'  symbol foo
str(x)
# symbol foo


# Attempting to overwrite doesn't affect class.
# str() still strips class from the object.
x <- quote(foo)
class(x) <- "bar"
x <- quote(foo)
str(x)
# Class 'bar'  symbol foo
str(x)
# symbol foo


# Changing class of one object affects other
x <- quote(foo)
y <- quote(foo)
class(x) <- "bar"
class(y)
# [1] "bar"
str(y)
# Class 'bar'  symbol foo
str(y)
# symbol foo
str(x)
# symbol foo


# Changing attribute of one object affects other
# Unlike with class, str() doesn't cause other attributes to disappear
x <- quote(foo)
y <- quote(foo)
attr(x, "a") <- "bar"
str(y)
# length 1 foo
# - attr(*, "a")= chr "bar"
str(y)
# length 1 foo
# - attr(*, "a")= chr "bar"
str(quote(foo))
# length 1 foo
# - attr(*, "a")= chr "bar"


-Winston


From murdoch.duncan at gmail.com  Mon Jun 17 19:40:49 2013
From: murdoch.duncan at gmail.com (Duncan Murdoch)
Date: Mon, 17 Jun 2013 13:40:49 -0400
Subject: [Rd] Odd behavior of symbol objects with classes/attributes
In-Reply-To: <CAFOpNVER4Vxf6rmXWTOHiywcyFsFUjuaAdFNGoae_gMh3KMvnA@mail.gmail.com>
References: <CAFOpNVER4Vxf6rmXWTOHiywcyFsFUjuaAdFNGoae_gMh3KMvnA@mail.gmail.com>
Message-ID: <51BF4A21.307@gmail.com>

On 17/06/2013 1:01 PM, Winston Chang wrote:
> I've been trying to add classes and attributes to symbol objects
> (created with quote()), and the behavior is very strange, as
> illustrated in the examples below.
>
> If symbols aren't meant to have classes and attributes attached to
> them, then perhaps R should throw errors when you attempt to do it?

I think this is a consequence of another strange property of symbol 
objects, namely that they are not copied on assignment.  This is also 
true of environments, NULL, builtin function references, and some rarely 
encountered types like external pointers and weak references.  You're 
allowed to assign attributes to all of these other than NULL, but you 
will find strange things happen if you do it (as demonstrated in your 
code below).

I thought I remembered reading a list of these in the documentation 
somewhere, but when I went to look for it just now, I couldn't find it.  
(Maybe I'm remembering a comment in the source.)  It would be a useful 
addition.

Duncan Murdoch

>
>
> # Using str() strips class from object
> x <- quote(foo)
> class(x) <- "bar"
> str(x)
> # Class 'bar'  symbol foo
> str(x)
> # symbol foo
>
>
> # Attempting to overwrite doesn't affect class.
> # str() still strips class from the object.
> x <- quote(foo)
> class(x) <- "bar"
> x <- quote(foo)
> str(x)
> # Class 'bar'  symbol foo
> str(x)
> # symbol foo
>
>
> # Changing class of one object affects other
> x <- quote(foo)
> y <- quote(foo)
> class(x) <- "bar"
> class(y)
> # [1] "bar"
> str(y)
> # Class 'bar'  symbol foo
> str(y)
> # symbol foo
> str(x)
> # symbol foo
>
>
> # Changing attribute of one object affects other
> # Unlike with class, str() doesn't cause other attributes to disappear
> x <- quote(foo)
> y <- quote(foo)
> attr(x, "a") <- "bar"
> str(y)
> # length 1 foo
> # - attr(*, "a")= chr "bar"
> str(y)
> # length 1 foo
> # - attr(*, "a")= chr "bar"
> str(quote(foo))
> # length 1 foo
> # - attr(*, "a")= chr "bar"
>
>
> -Winston
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From luke-tierney at uiowa.edu  Mon Jun 17 20:29:44 2013
From: luke-tierney at uiowa.edu (luke-tierney at uiowa.edu)
Date: Mon, 17 Jun 2013 13:29:44 -0500
Subject: [Rd] Odd behavior of symbol objects with classes/attributes
In-Reply-To: <51BF4A21.307@gmail.com>
References: <CAFOpNVER4Vxf6rmXWTOHiywcyFsFUjuaAdFNGoae_gMh3KMvnA@mail.gmail.com>
	<51BF4A21.307@gmail.com>
Message-ID: <alpine.DEB.2.02.1306171328100.2133@luke-Latitude>

On Mon, 17 Jun 2013, Duncan Murdoch wrote:

> On 17/06/2013 1:01 PM, Winston Chang wrote:
>> I've been trying to add classes and attributes to symbol objects
>> (created with quote()), and the behavior is very strange, as
>> illustrated in the examples below.
>> 
>> If symbols aren't meant to have classes and attributes attached to
>> them, then perhaps R should throw errors when you attempt to do it?
>
> I think this is a consequence of another strange property of symbol objects, 
> namely that they are not copied on assignment.  This is also true of 
> environments, NULL, builtin function references, and some rarely encountered 
> types like external pointers and weak references.  You're allowed to assign 
> attributes to all of these other than NULL, but you will find strange things 
> happen if you do it (as demonstrated in your code below).

You are only because we haven't yet gotten around to preventing it --
we will at some point. For now, just don't try to assign attributes to
symbols.

Best,

luke

>
> I thought I remembered reading a list of these in the documentation 
> somewhere, but when I went to look for it just now, I couldn't find it. 
> (Maybe I'm remembering a comment in the source.)  It would be a useful 
> addition.
>
> Duncan Murdoch
>
>> 
>> 
>> # Using str() strips class from object
>> x <- quote(foo)
>> class(x) <- "bar"
>> str(x)
>> # Class 'bar'  symbol foo
>> str(x)
>> # symbol foo
>> 
>> 
>> # Attempting to overwrite doesn't affect class.
>> # str() still strips class from the object.
>> x <- quote(foo)
>> class(x) <- "bar"
>> x <- quote(foo)
>> str(x)
>> # Class 'bar'  symbol foo
>> str(x)
>> # symbol foo
>> 
>> 
>> # Changing class of one object affects other
>> x <- quote(foo)
>> y <- quote(foo)
>> class(x) <- "bar"
>> class(y)
>> # [1] "bar"
>> str(y)
>> # Class 'bar'  symbol foo
>> str(y)
>> # symbol foo
>> str(x)
>> # symbol foo
>> 
>> 
>> # Changing attribute of one object affects other
>> # Unlike with class, str() doesn't cause other attributes to disappear
>> x <- quote(foo)
>> y <- quote(foo)
>> attr(x, "a") <- "bar"
>> str(y)
>> # length 1 foo
>> # - attr(*, "a")= chr "bar"
>> str(y)
>> # length 1 foo
>> # - attr(*, "a")= chr "bar"
>> str(quote(foo))
>> # length 1 foo
>> # - attr(*, "a")= chr "bar"
>> 
>> 
>> -Winston
>> 
>> ______________________________________________
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>

-- 
Luke Tierney
Chair, Statistics and Actuarial Science
Ralph E. Wareham Professor of Mathematical Sciences
University of Iowa                  Phone:             319-335-3386
Department of Statistics and        Fax:               319-335-3017
    Actuarial Science
241 Schaeffer Hall                  email:   luke-tierney at uiowa.edu
Iowa City, IA 52242                 WWW:  http://www.stat.uiowa.edu


From hankin.robin at gmail.com  Tue Jun 18 03:30:10 2013
From: hankin.robin at gmail.com (robin hankin)
Date: Tue, 18 Jun 2013 13:30:10 +1200
Subject: [Rd] eigen(symmetric=TRUE) for complex matrices
Message-ID: <CAHHjBM4z8d58QNb1HuqT4-k7BKaTo_=zAeuFeDr4pZdjTP2-Tg@mail.gmail.com>

An embedded and charset-unspecified text was scrubbed...
Name: not available
URL: <https://stat.ethz.ch/pipermail/r-devel/attachments/20130618/af353d2a/attachment.pl>

From winstonchang1 at gmail.com  Tue Jun 18 05:54:34 2013
From: winstonchang1 at gmail.com (Winston Chang)
Date: Mon, 17 Jun 2013 22:54:34 -0500
Subject: [Rd] Odd behavior of symbol objects with classes/attributes
In-Reply-To: <alpine.DEB.2.02.1306171328100.2133@luke-Latitude>
References: <CAFOpNVER4Vxf6rmXWTOHiywcyFsFUjuaAdFNGoae_gMh3KMvnA@mail.gmail.com>
	<51BF4A21.307@gmail.com>
	<alpine.DEB.2.02.1306171328100.2133@luke-Latitude>
Message-ID: <CAFOpNVEdsO4tMQq8517U_GjEOq-5CHffUAHgcGgJ915mKtx7SQ@mail.gmail.com>

Thanks for the feedback, that clears things up.

-Winston

On Mon, Jun 17, 2013 at 1:29 PM,  <luke-tierney at uiowa.edu> wrote:
> On Mon, 17 Jun 2013, Duncan Murdoch wrote:
>
>> On 17/06/2013 1:01 PM, Winston Chang wrote:
>>>
>>> I've been trying to add classes and attributes to symbol objects
>>> (created with quote()), and the behavior is very strange, as
>>> illustrated in the examples below.
>>>
>>> If symbols aren't meant to have classes and attributes attached to
>>> them, then perhaps R should throw errors when you attempt to do it?
>>
>>
>> I think this is a consequence of another strange property of symbol
>> objects, namely that they are not copied on assignment.  This is also true
>> of environments, NULL, builtin function references, and some rarely
>> encountered types like external pointers and weak references.  You're
>> allowed to assign attributes to all of these other than NULL, but you will
>> find strange things happen if you do it (as demonstrated in your code
>> below).
>
>
> You are only because we haven't yet gotten around to preventing it --
> we will at some point. For now, just don't try to assign attributes to
> symbols.
>
> Best,
>
> luke
>
>
>>
>> I thought I remembered reading a list of these in the documentation
>> somewhere, but when I went to look for it just now, I couldn't find it.
>> (Maybe I'm remembering a comment in the source.)  It would be a useful
>> addition.
>>
>> Duncan Murdoch
>>
>>>
>>>
>>> # Using str() strips class from object
>>> x <- quote(foo)
>>> class(x) <- "bar"
>>> str(x)
>>> # Class 'bar'  symbol foo
>>> str(x)
>>> # symbol foo
>>>
>>>
>>> # Attempting to overwrite doesn't affect class.
>>> # str() still strips class from the object.
>>> x <- quote(foo)
>>> class(x) <- "bar"
>>> x <- quote(foo)
>>> str(x)
>>> # Class 'bar'  symbol foo
>>> str(x)
>>> # symbol foo
>>>
>>>
>>> # Changing class of one object affects other
>>> x <- quote(foo)
>>> y <- quote(foo)
>>> class(x) <- "bar"
>>> class(y)
>>> # [1] "bar"
>>> str(y)
>>> # Class 'bar'  symbol foo
>>> str(y)
>>> # symbol foo
>>> str(x)
>>> # symbol foo
>>>
>>>
>>> # Changing attribute of one object affects other
>>> # Unlike with class, str() doesn't cause other attributes to disappear
>>> x <- quote(foo)
>>> y <- quote(foo)
>>> attr(x, "a") <- "bar"
>>> str(y)
>>> # length 1 foo
>>> # - attr(*, "a")= chr "bar"
>>> str(y)
>>> # length 1 foo
>>> # - attr(*, "a")= chr "bar"
>>> str(quote(foo))
>>> # length 1 foo
>>> # - attr(*, "a")= chr "bar"
>>>
>>>
>>> -Winston
>>>
>>> ______________________________________________
>>> R-devel at r-project.org mailing list
>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>
>>
>> ______________________________________________
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>
>
> --
> Luke Tierney
> Chair, Statistics and Actuarial Science
> Ralph E. Wareham Professor of Mathematical Sciences
> University of Iowa                  Phone:             319-335-3386
> Department of Statistics and        Fax:               319-335-3017
>    Actuarial Science
> 241 Schaeffer Hall                  email:   luke-tierney at uiowa.edu
> Iowa City, IA 52242                 WWW:  http://www.stat.uiowa.edu


From pdalgd at gmail.com  Tue Jun 18 09:57:08 2013
From: pdalgd at gmail.com (peter dalgaard)
Date: Tue, 18 Jun 2013 09:57:08 +0200
Subject: [Rd] eigen(symmetric=TRUE) for complex matrices
In-Reply-To: <CAHHjBM4z8d58QNb1HuqT4-k7BKaTo_=zAeuFeDr4pZdjTP2-Tg@mail.gmail.com>
References: <CAHHjBM4z8d58QNb1HuqT4-k7BKaTo_=zAeuFeDr4pZdjTP2-Tg@mail.gmail.com>
Message-ID: <5CEBFA58-9D40-42F0-87B8-F006EC3A848B@gmail.com>


On Jun 18, 2013, at 03:30 , robin hankin wrote:

> R-3.0.1 rev 62743, binary downloaded from CRAN just now; macosx 10.8.3
> 
> Hello,
> 
> eigen(symmetric=TRUE) behaves strangely when given complex matrices.
> 
> 
> The following two lines define 'A', a 100x100 (real) symmetric matrix
> which theoretical considerations [Bochner's theorem] show to be positive
> definite:
> 
> jj <- matrix(0,100,100)
> A <- exp(-0.1*(row(jj)-col(jj))^2)
> 
> 
> A's being positive-definite is important to me:
> 
> 
>> min(eigen(A,T,T)$values)
> [1] 2.521153e-10
>> 
> 
> Coercing A to a complex matrix should make no difference, but makes
> eigen() return the wrong answer:
> 
>> min(eigen(A+0i,T,T)$values)
> [1] -0.359347
>> 
> 
> This is very, very wrong.

Yep. I see this also on 10.6/7 (Snow Leopard, Lion)  and 3.0.x, but NOT with a MacPorts build of 2.15.3 that I had lying around.  

So this sits somewhere between Mac builds, R versions, and possibly LAPACK issues. Can anyone reproduce on non-Mac?

It's not the first time complex matrices have acted up. We may need to put in a regression test to catch it earlier.

> 
> I would expect these two commands to return identical values, up to
> numerical precision.   Compare svd():
> 
> 
>> dput(min(eigen(A,T,T)$values))
> 2.52115250343783e-10
>> dput(min(eigen(A+0i,T,T)$values))
> -0.359346984206908
>> dput(min(svd(A)$d))
> 2.52115166468044e-10
>> dput(min(svd(A+0i)$d))
> 2.52115166468044e-10
>> 
> 
> So svd() doesn't care about the coercion to complex.  The 'A' matrix
> isn't particularly badly conditioned:
> 
> 
>> eigen(A,T)$vectors -> e
>> crossprod(e)[1:4,1:4]
> 
> also:
> 
>> crossprod(A,solve(A))
> 
> 
> [and the associated commands with A+0i in place of A], give errors of
> order 1e-14 or less.
> 
> 
> I think the eigenvectors are misbehaving too:
> 
>> eigen(A,T)$vectors -> ev1
>> eigen(A+0i,T)$vectors -> ev2
>> range(Re((A %*% ev1[,100])/ev1[,100]))
> [1] 2.497662e-10 2.566555e-10                   # min=max mathematically;
> differences due to numerics
>> range(Re((A %*% ev2[,100])/ev2[,100]))
> [1] -19.407290   4.412938                       # off the scale errors
> [note the difference in sign]
>> 
> 
> 
> FWIW, these problems do not appear to occur if symmetric=FALSE:
> 
>> min(Re(eigen(A+0i,F,T)$values))
> [1] 2.521153e-10
>> min(Re(eigen(A,F,T)$values))
> [1] 2.521153e-10
>> 
> 
> and the eigenvectors appear to behave themselves too.
> 
> 
> Also, can I raise a doco?  The documentation for eigen() is not
> entirely transparent with regard to the 'symmetric' argument.  For
> complex matrices, 'symmetric' should read 'Hermitian':
> 
> 
>> B <- matrix(c(2,1i,-1i,2),2,2)   # 'B' is Hermitian
>> eigen(B,F,T)$values
> [1] 3+0i 1+0i
>> eigen(B,T,T)$values    # answers agree as expected if 'symmetric' means
> 'Hermitian'
> [1] 3 1
> 
> 
> 
>> C <- matrix(c(2,1i,1i,2),2,2)    # 'C' is symmetric
>> eigen(C,F,T)$values
> [1] 2-1i 2+1i
>> eigen(C,T,T)$values  # answers disagree because 'C' is not Hermitian
> [1] 3 1
>> 
> 

This issue, however, I do not understand; ?eigen already has:


symmetric: if ?TRUE?, the matrix is assumed to be symmetric (or
          Hermitian if complex) and only its lower triangle (diagonal
          included) is used.  If ?symmetric? is not specified, the
          matrix is inspected for symmetry.

Which part of "Hermitian if complex" is unclear?

-- 
Peter Dalgaard, Professor,
Center for Statistics, Copenhagen Business School
Solbjerg Plads 3, 2000 Frederiksberg, Denmark
Phone: (+45)38153501
Email: pd.mes at cbs.dk  Priv: PDalgd at gmail.com


From pdalgd at gmail.com  Tue Jun 18 13:23:02 2013
From: pdalgd at gmail.com (peter dalgaard)
Date: Tue, 18 Jun 2013 13:23:02 +0200
Subject: [Rd] eigen(symmetric=TRUE) for complex matrices
In-Reply-To: <5CEBFA58-9D40-42F0-87B8-F006EC3A848B@gmail.com>
References: <CAHHjBM4z8d58QNb1HuqT4-k7BKaTo_=zAeuFeDr4pZdjTP2-Tg@mail.gmail.com>
	<5CEBFA58-9D40-42F0-87B8-F006EC3A848B@gmail.com>
Message-ID: <267A30A5-1865-4D23-8B9A-F04F9BBED1EE@gmail.com>

On some further digging, on the Lion machine, the problem seems absent from builds against the veclib framework. I strongly suspect that the issue is the same as PR#14964, which also affects Hermitian matrices of dimension 33x33 and above.

At smaller dimensions, a curious effect is visible:

> jj <- matrix(0,33,33)
> A <- exp(-0.1*(row(jj)-col(jj))^2)
> eigen(A,,T)
$values
 [1] 5.497434e+00 5.187095e+00 4.708628e+00 4.112589e+00 3.456602e+00
 [6] 2.796253e+00 2.177674e+00 1.633085e+00 1.179630e+00 8.209787e-01
[11] 5.506744e-01 3.560858e-01 2.220308e-01 1.335197e-01 7.744384e-02
[16] 4.332359e-02 2.337139e-02 1.215408e-02 6.089878e-03 2.937761e-03
[21] 1.363015e-03 6.073985e-04 2.595197e-04 1.060717e-04 4.134966e-05
[26] 1.531412e-05 5.360284e-06 1.760457e-06 5.369131e-07 1.496798e-07
[31] 3.715172e-08 7.807420e-09 1.238432e-09

$vectors
NULL

> eigen(A+0i,,T)
$values
 [1] 5.497434e+00 5.187095e+00 4.708628e+00 4.112589e+00 3.456602e+00
 [6] 2.796253e+00 2.177674e+00 1.633085e+00 1.179630e+00 1.000000e+00
[11] 8.209787e-01 5.506744e-01 3.560858e-01 2.220308e-01 1.335197e-01
[16] 7.744384e-02 4.332359e-02 2.337139e-02 1.215408e-02 6.089878e-03
[21] 2.937761e-03 1.363015e-03 6.073985e-04 2.595197e-04 1.060717e-04
[26] 4.134966e-05 1.531412e-05 5.360284e-06 1.760457e-06 5.369131e-07
[31] 1.496793e-07 3.707403e-08 6.664029e-09

$vectors
NULL

Notice that a bogus eigenvalue of 1.000 has sneaked into the 10th position in the complex case. This seems to be happening with increasing frequency as the dimension is increased, e.g.

> jj <- matrix(0,39,39)
> A <- exp(-0.1*(row(jj)-col(jj))^2)
> eigen(A+0i,,T)
$values
 [1] 5.525963e+00 5.295552e+00 4.932840e+00 4.466692e+00 4.313221e+00
 [6] 3.931940e+00 3.365090e+00 2.800272e+00 2.266053e+00 1.992364e+00
[11] 1.783467e+00 1.365369e+00 1.016934e+00 7.369943e-01 5.730933e-01
[16] 5.197947e-01 3.568288e-01 2.384533e-01 1.551331e-01 1.070839e-01
[21] 9.826254e-02 6.059788e-02 3.638230e-02 2.126343e-02 1.318810e-02
[26] 1.209480e-02 6.693571e-03 3.602773e-03 1.884985e-03 1.011671e-03
[31] 9.580352e-04 4.725998e-04 2.260430e-04 1.046915e-04 4.687560e-05
[36] 3.794374e-05 2.020133e-05 7.751127e-06 1.472817e-06

$vectors
NULL

> eigen(A,,T)
$values
 [1] 5.525963e+00 5.295552e+00 4.932840e+00 4.466692e+00 3.931940e+00
 [6] 3.365090e+00 2.800272e+00 2.266053e+00 1.783467e+00 1.365369e+00
[11] 1.016934e+00 7.369943e-01 5.197947e-01 3.568288e-01 2.384533e-01
[16] 1.551331e-01 9.826254e-02 6.059788e-02 3.638230e-02 2.126343e-02
[21] 1.209480e-02 6.693571e-03 3.602773e-03 1.884985e-03 9.580352e-04
[26] 4.725998e-04 2.260430e-04 1.046915e-04 4.687623e-05 2.025048e-05
[31] 8.418654e-06 3.356873e-06 1.278239e-06 4.620504e-07 1.572170e-07
[36] 4.971980e-08 1.431462e-08 3.613385e-09 7.510902e-10

$vectors
NULL

in which most of the rightmost column of the complex case appear to be insertions.

-pd


On Jun 18, 2013, at 09:57 , peter dalgaard wrote:

> 
> On Jun 18, 2013, at 03:30 , robin hankin wrote:
> 
>> R-3.0.1 rev 62743, binary downloaded from CRAN just now; macosx 10.8.3
>> 
>> Hello,
>> 
>> eigen(symmetric=TRUE) behaves strangely when given complex matrices.
>> 
>> 
>> The following two lines define 'A', a 100x100 (real) symmetric matrix
>> which theoretical considerations [Bochner's theorem] show to be positive
>> definite:
>> 
>> jj <- matrix(0,100,100)
>> A <- exp(-0.1*(row(jj)-col(jj))^2)
>> 
>> 
>> A's being positive-definite is important to me:
>> 
>> 
>>> min(eigen(A,T,T)$values)
>> [1] 2.521153e-10
>>> 
>> 
>> Coercing A to a complex matrix should make no difference, but makes
>> eigen() return the wrong answer:
>> 
>>> min(eigen(A+0i,T,T)$values)
>> [1] -0.359347
>>> 
>> 
>> This is very, very wrong.
> 
> Yep. I see this also on 10.6/7 (Snow Leopard, Lion)  and 3.0.x, but NOT with a MacPorts build of 2.15.3 that I had lying around.  
> 
> So this sits somewhere between Mac builds, R versions, and possibly LAPACK issues. Can anyone reproduce on non-Mac?
> 
> It's not the first time complex matrices have acted up. We may need to put in a regression test to catch it earlier.
> 
>> 
>> I would expect these two commands to return identical values, up to
>> numerical precision.   Compare svd():
>> 
>> 
>>> dput(min(eigen(A,T,T)$values))
>> 2.52115250343783e-10
>>> dput(min(eigen(A+0i,T,T)$values))
>> -0.359346984206908
>>> dput(min(svd(A)$d))
>> 2.52115166468044e-10
>>> dput(min(svd(A+0i)$d))
>> 2.52115166468044e-10
>>> 
>> 
>> So svd() doesn't care about the coercion to complex.  The 'A' matrix
>> isn't particularly badly conditioned:
>> 
>> 
>>> eigen(A,T)$vectors -> e
>>> crossprod(e)[1:4,1:4]
>> 
>> also:
>> 
>>> crossprod(A,solve(A))
>> 
>> 
>> [and the associated commands with A+0i in place of A], give errors of
>> order 1e-14 or less.
>> 
>> 
>> I think the eigenvectors are misbehaving too:
>> 
>>> eigen(A,T)$vectors -> ev1
>>> eigen(A+0i,T)$vectors -> ev2
>>> range(Re((A %*% ev1[,100])/ev1[,100]))
>> [1] 2.497662e-10 2.566555e-10                   # min=max mathematically;
>> differences due to numerics
>>> range(Re((A %*% ev2[,100])/ev2[,100]))
>> [1] -19.407290   4.412938                       # off the scale errors
>> [note the difference in sign]
>>> 
>> 
>> 
>> FWIW, these problems do not appear to occur if symmetric=FALSE:
>> 
>>> min(Re(eigen(A+0i,F,T)$values))
>> [1] 2.521153e-10
>>> min(Re(eigen(A,F,T)$values))
>> [1] 2.521153e-10
>>> 
>> 
>> and the eigenvectors appear to behave themselves too.
>> 
>> 
>> Also, can I raise a doco?  The documentation for eigen() is not
>> entirely transparent with regard to the 'symmetric' argument.  For
>> complex matrices, 'symmetric' should read 'Hermitian':
>> 
>> 
>>> B <- matrix(c(2,1i,-1i,2),2,2)   # 'B' is Hermitian
>>> eigen(B,F,T)$values
>> [1] 3+0i 1+0i
>>> eigen(B,T,T)$values    # answers agree as expected if 'symmetric' means
>> 'Hermitian'
>> [1] 3 1
>> 
>> 
>> 
>>> C <- matrix(c(2,1i,1i,2),2,2)    # 'C' is symmetric
>>> eigen(C,F,T)$values
>> [1] 2-1i 2+1i
>>> eigen(C,T,T)$values  # answers disagree because 'C' is not Hermitian
>> [1] 3 1
>>> 
>> 
> 
> This issue, however, I do not understand; ?eigen already has:
> 
> 
> symmetric: if ?TRUE?, the matrix is assumed to be symmetric (or
>          Hermitian if complex) and only its lower triangle (diagonal
>          included) is used.  If ?symmetric? is not specified, the
>          matrix is inspected for symmetry.
> 
> Which part of "Hermitian if complex" is unclear?
> 
> -- 
> Peter Dalgaard, Professor,
> Center for Statistics, Copenhagen Business School
> Solbjerg Plads 3, 2000 Frederiksberg, Denmark
> Phone: (+45)38153501
> Email: pd.mes at cbs.dk  Priv: PDalgd at gmail.com
> 
> 
> 
> 
> 
> 
> 
> 

-- 
Peter Dalgaard, Professor
Center for Statistics, Copenhagen Business School
Solbjerg Plads 3, 2000 Frederiksberg, Denmark
Phone: (+45)38153501
Email: pd.mes at cbs.dk  Priv: PDalgd at gmail.com


From cubranic at stat.ubc.ca  Tue Jun 18 17:09:36 2013
From: cubranic at stat.ubc.ca (Davor Cubranic)
Date: Tue, 18 Jun 2013 08:09:36 -0700
Subject: [Rd] eigen(symmetric=TRUE) for complex matrices
In-Reply-To: <5CEBFA58-9D40-42F0-87B8-F006EC3A848B@gmail.com>
References: <CAHHjBM4z8d58QNb1HuqT4-k7BKaTo_=zAeuFeDr4pZdjTP2-Tg@mail.gmail.com>
	<5CEBFA58-9D40-42F0-87B8-F006EC3A848B@gmail.com>
Message-ID: <51C07830.9060008@stat.ubc.ca>

On 13-06-18 12:57 AM, peter dalgaard wrote:
>> Coercing A to a complex matrix should make no difference, but makes
>> >eigen() return the wrong answer:
>> >
>>> >>min(eigen(A+0i,T,T)$values)
>> >[1] -0.359347
>>> >>
>> >
>> >This is very, very wrong.
> Yep. I see this also on 10.6/7 (Snow Leopard, Lion)  and 3.0.x, but NOT with a MacPorts build of 2.15.3 that I had lying around.
>
> So this sits somewhere between Mac builds, R versions, and possibly LAPACK issues. Can anyone reproduce on non-Mac?
>

It doesn't happen with the CRAN binary of 2.15.3 built for Ubuntu Precise.

Davor


From bhh at xs4all.nl  Tue Jun 18 17:20:44 2013
From: bhh at xs4all.nl (Berend Hasselman)
Date: Tue, 18 Jun 2013 17:20:44 +0200
Subject: [Rd] eigen(symmetric=TRUE) for complex matrices
In-Reply-To: <5CEBFA58-9D40-42F0-87B8-F006EC3A848B@gmail.com>
References: <CAHHjBM4z8d58QNb1HuqT4-k7BKaTo_=zAeuFeDr4pZdjTP2-Tg@mail.gmail.com>
	<5CEBFA58-9D40-42F0-87B8-F006EC3A848B@gmail.com>
Message-ID: <6D7D1D76-21BE-4552-9CE9-E685549F83C8@xs4all.nl>


On 18-06-2013, at 09:57, peter dalgaard <pdalgd at gmail.com> wrote:

> 
> On Jun 18, 2013, at 03:30 , robin hankin wrote:
> 
>> R-3.0.1 rev 62743, binary downloaded from CRAN just now; macosx 10.8.3
>> 
>> Hello,
>> 
>> eigen(symmetric=TRUE) behaves strangely when given complex matrices.
>> 
>> 
>> The following two lines define 'A', a 100x100 (real) symmetric matrix
>> which theoretical considerations [Bochner's theorem] show to be positive
>> definite:
>> 
>> jj <- matrix(0,100,100)
>> A <- exp(-0.1*(row(jj)-col(jj))^2)
>> 
>> 
>> A's being positive-definite is important to me:
>> 
>> 
>>> min(eigen(A,T,T)$values)
>> [1] 2.521153e-10
>>> 
>> 
>> Coercing A to a complex matrix should make no difference, but makes
>> eigen() return the wrong answer:
>> 
>>> min(eigen(A+0i,T,T)$values)
>> [1] -0.359347
>>> 
>> 
>> This is very, very wrong.
> 
> Yep. I see this also on 10.6/7 (Snow Leopard, Lion)  and 3.0.x, but NOT with a MacPorts build of 2.15.3 that I had lying around.  
> 
> So this sits somewhere between Mac builds, R versions, and possibly LAPACK issues. Can anyone reproduce on non-Mac?
> 

The problem does not occur with the Cran binary of R-3.0.1  Kubuntu 12.04 64-bit.
That R uses the system provided Blas (libblas 1.2.30110419) and Lapack 3.3.1; I don't know if these have been patched.

I have been able to reproduce the problem on a self compiled version of R-3.0.1 using Rlapack and Rblas on Ubuntu 10.04 64-bit.

Berend


From sgiannerini at gmail.com  Tue Jun 18 19:01:48 2013
From: sgiannerini at gmail.com (Simone Giannerini)
Date: Tue, 18 Jun 2013 19:01:48 +0200
Subject: [Rd] eigen(symmetric=TRUE) for complex matrices
In-Reply-To: <5CEBFA58-9D40-42F0-87B8-F006EC3A848B@gmail.com>
References: <CAHHjBM4z8d58QNb1HuqT4-k7BKaTo_=zAeuFeDr4pZdjTP2-Tg@mail.gmail.com>
	<5CEBFA58-9D40-42F0-87B8-F006EC3A848B@gmail.com>
Message-ID: <CANcXGizyiKSoZoQc9o8FD167FP_to7vfYOHLcNo2sDYyQYar9A@mail.gmail.com>

1. OpenSuse 12.1 R compiled against ACML 5.3.1
    > sessionInfo()
    R version 3.0.1 RC (2013-05-08 r62723)
    Platform: x86_64-unknown-linux-gnu (64-bit)

    >  A <- exp(-0.1*(row(jj)-col(jj))^2)
    >  min(eigen(A,T,T)$values)
    [1] 2.521151e-10
    >  min(eigen(A+0i,T,T)$values)
    [1] 2.521154e-10

2. OpenSuse 12.3 R compiled against Intel MKL 10.2
    R version 3.0.0 Patched (2013-04-23 r62650)
    Platform: x86_64-unknown-linux-gnu (64-bit)
    > jj <- matrix(0,100,100)
    > A  <- exp(-0.1*(row(jj)-col(jj))^2)
    > min(eigen(A,T,T)$values)
    [1] 2.521153e-10
    > min(eigen(A+0i,T,T)$values)
    [1] 2.521154e-10

3.  Windows 7 64, R 3.0.0p (binary, built-in libraries)
    R version 3.0.0 Patched (2013-04-03 r62488)
    Platform: x86_64-w64-mingw32/x64 (64-bit)
    > jj <- matrix(0,100,100)
    >  A <- exp(-0.1*(row(jj)-col(jj))^2)
    >  min(eigen(A,T,T)$values)
    [1] 2.521153e-10
    >  min(eigen(A+0i,T,T)$values)
    [1] -0.359347

    same behaviour with the 32 bit binaries.


On Tue, Jun 18, 2013 at 9:57 AM, peter dalgaard <pdalgd at gmail.com> wrote:
>
>
> On Jun 18, 2013, at 03:30 , robin hankin wrote:
>
> > R-3.0.1 rev 62743, binary downloaded from CRAN just now; macosx 10.8.3
> >
> > Hello,
> >
> > eigen(symmetric=TRUE) behaves strangely when given complex matrices.
> >
> >
> > The following two lines define 'A', a 100x100 (real) symmetric matrix
> > which theoretical considerations [Bochner's theorem] show to be positive
> > definite:
> >
> > jj <- matrix(0,100,100)
> > A <- exp(-0.1*(row(jj)-col(jj))^2)
> >
> >
> > A's being positive-definite is important to me:
> >
> >
> >> min(eigen(A,T,T)$values)
> > [1] 2.521153e-10
> >>
> >
> > Coercing A to a complex matrix should make no difference, but makes
> > eigen() return the wrong answer:
> >
> >> min(eigen(A+0i,T,T)$values)
> > [1] -0.359347
> >>
> >
> > This is very, very wrong.
>
> Yep. I see this also on 10.6/7 (Snow Leopard, Lion)  and 3.0.x, but NOT with a MacPorts build of 2.15.3 that I had lying around.
>
> So this sits somewhere between Mac builds, R versions, and possibly LAPACK issues. Can anyone reproduce on non-Mac?
>
> It's not the first time complex matrices have acted up. We may need to put in a regression test to catch it earlier.
>
> >
> > I would expect these two commands to return identical values, up to
> > numerical precision.   Compare svd():
> >
> >
> >> dput(min(eigen(A,T,T)$values))
> > 2.52115250343783e-10
> >> dput(min(eigen(A+0i,T,T)$values))
> > -0.359346984206908
> >> dput(min(svd(A)$d))
> > 2.52115166468044e-10
> >> dput(min(svd(A+0i)$d))
> > 2.52115166468044e-10
> >>
> >
> > So svd() doesn't care about the coercion to complex.  The 'A' matrix
> > isn't particularly badly conditioned:
> >
> >
> >> eigen(A,T)$vectors -> e
> >> crossprod(e)[1:4,1:4]
> >
> > also:
> >
> >> crossprod(A,solve(A))
> >
> >
> > [and the associated commands with A+0i in place of A], give errors of
> > order 1e-14 or less.
> >
> >
> > I think the eigenvectors are misbehaving too:
> >
> >> eigen(A,T)$vectors -> ev1
> >> eigen(A+0i,T)$vectors -> ev2
> >> range(Re((A %*% ev1[,100])/ev1[,100]))
> > [1] 2.497662e-10 2.566555e-10                   # min=max mathematically;
> > differences due to numerics
> >> range(Re((A %*% ev2[,100])/ev2[,100]))
> > [1] -19.407290   4.412938                       # off the scale errors
> > [note the difference in sign]
> >>
> >
> >
> > FWIW, these problems do not appear to occur if symmetric=FALSE:
> >
> >> min(Re(eigen(A+0i,F,T)$values))
> > [1] 2.521153e-10
> >> min(Re(eigen(A,F,T)$values))
> > [1] 2.521153e-10
> >>
> >
> > and the eigenvectors appear to behave themselves too.
> >
> >
> > Also, can I raise a doco?  The documentation for eigen() is not
> > entirely transparent with regard to the 'symmetric' argument.  For
> > complex matrices, 'symmetric' should read 'Hermitian':
> >
> >
> >> B <- matrix(c(2,1i,-1i,2),2,2)   # 'B' is Hermitian
> >> eigen(B,F,T)$values
> > [1] 3+0i 1+0i
> >> eigen(B,T,T)$values    # answers agree as expected if 'symmetric' means
> > 'Hermitian'
> > [1] 3 1
> >
> >
> >
> >> C <- matrix(c(2,1i,1i,2),2,2)    # 'C' is symmetric
> >> eigen(C,F,T)$values
> > [1] 2-1i 2+1i
> >> eigen(C,T,T)$values  # answers disagree because 'C' is not Hermitian
> > [1] 3 1
> >>
> >
>
> This issue, however, I do not understand; ?eigen already has:
>
>
> symmetric: if ?TRUE?, the matrix is assumed to be symmetric (or
>           Hermitian if complex) and only its lower triangle (diagonal
>           included) is used.  If ?symmetric? is not specified, the
>           matrix is inspected for symmetry.
>
> Which part of "Hermitian if complex" is unclear?
>
> --
> Peter Dalgaard, Professor,
> Center for Statistics, Copenhagen Business School
> Solbjerg Plads 3, 2000 Frederiksberg, Denmark
> Phone: (+45)38153501
> Email: pd.mes at cbs.dk  Priv: PDalgd at gmail.com
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel




--
___________________________________________________

Simone Giannerini
Dipartimento di Scienze Statistiche "Paolo Fortunati"
Universita' di Bologna
Via delle belle arti 41 - 40126  Bologna,  ITALY
Tel: +39 051 2098262  Fax: +39 051 232153
http://www2.stat.unibo.it/giannerini/


From bhh at xs4all.nl  Tue Jun 18 21:23:16 2013
From: bhh at xs4all.nl (Berend Hasselman)
Date: Tue, 18 Jun 2013 21:23:16 +0200
Subject: [Rd] eigen(symmetric=TRUE) for complex matrices
In-Reply-To: <267A30A5-1865-4D23-8B9A-F04F9BBED1EE@gmail.com>
References: <CAHHjBM4z8d58QNb1HuqT4-k7BKaTo_=zAeuFeDr4pZdjTP2-Tg@mail.gmail.com>
	<5CEBFA58-9D40-42F0-87B8-F006EC3A848B@gmail.com>
	<267A30A5-1865-4D23-8B9A-F04F9BBED1EE@gmail.com>
Message-ID: <35EFC1D4-CA6B-42B6-A15B-4A1FCD0FD687@xs4all.nl>


On 18-06-2013, at 13:23, peter dalgaard <pdalgd at gmail.com> wrote:

> On some further digging, on the Lion machine, the problem seems absent from builds against the veclib framework. I strongly suspect that the issue is the same as PR#14964, which also affects Hermitian matrices of dimension 33x33 and above.
> 

With the CRAN distribution  of R-3.0.1 on OS X 10.8.4 I  encountered the problem too.
I've done a small experiment to see if I could find a possible cause.
This version of R uses the libRblas and libRlapack.

For complex matrices I'm assuming that eigen uses the Lapack routine zheev and that R first calls zheev to determine the optimal workspace.

I've made an alternative eigen that also uses Lapack's zheev but calls it with minimal workspace to force zheev to use the unblocked algorithm. To determine if the blocked algorithm that Lapack uses could be the cause of the problem.
This will work when eigen is called first so that the Lapack library is dyn.loaded.

Code:

# quick and dirty

zeigen <- function(A,symmetric,only.values=FALSE) {
        # SUBROUTINE ZHEEV( JOBZ, UPLO, N, A, LDA, W, WORK, LWORK, RWORK,
        # *                         INFO )    
        #        .. Scalar Arguments ..
        # *       CHARACTER          JOBZ, UPLO
        # *       INTEGER            INFO, LDA, LWORK, N
        # *       ..
        # *       .. Array Arguments ..
        # *       DOUBLE PRECISION   RWORK( * ), W( * )
        # *       COMPLEX*16         A( LDA, * ), WORK( * ) 
        
    n <- dim(A)[1] 
    # use minimal workspace 
    lwork <- as.integer(2*n-1)
    # warning: "N" and "L" work on OSX but you may have to write an interface routine since some systems
    # give Fortran runtime errors when passing character arguments to Fortran routines.
    z <- .Fortran("zheev", "N", "L", n, A=A, n, w=numeric(n), work=complex(lwork), lwork,
                            numeric(3*n-2), info=integer(1L))
    list(values=z$w, vectors=z$A)
}

N <- 100
jj <- matrix(0,N,N)
A <- exp(-0.1*(row(jj)-col(jj))^2)

min(eigen(A,only.values=TRUE,symmetric=TRUE)$values)

## [1] 2.521153e-10

# Coercing A to a complex matrix should make no difference, but makes
# eigen() return the wrong answer:

min(eigen(A+0i,only.values=TRUE,symmetric=TRUE)$values)
## [1] -0.359347

min(zeigen(A+0i,only.values=TRUE,symmetric=TRUE)$values)
##[1] 2.521154e-10


So it seems that the blocked algorithm is the cause of the error and that using the (possibly slow) unblocked algorithm gives the correct result.

Berend


From pdalgd at gmail.com  Tue Jun 18 21:49:09 2013
From: pdalgd at gmail.com (peter dalgaard)
Date: Tue, 18 Jun 2013 21:49:09 +0200
Subject: [Rd] eigen(symmetric=TRUE) for complex matrices
In-Reply-To: <35EFC1D4-CA6B-42B6-A15B-4A1FCD0FD687@xs4all.nl>
References: <CAHHjBM4z8d58QNb1HuqT4-k7BKaTo_=zAeuFeDr4pZdjTP2-Tg@mail.gmail.com>
	<5CEBFA58-9D40-42F0-87B8-F006EC3A848B@gmail.com>
	<267A30A5-1865-4D23-8B9A-F04F9BBED1EE@gmail.com>
	<35EFC1D4-CA6B-42B6-A15B-4A1FCD0FD687@xs4all.nl>
Message-ID: <84517510-5BD0-4842-B361-4F336E24E37A@gmail.com>


On Jun 18, 2013, at 21:23 , Berend Hasselman wrote:

> 
> So it seems that the blocked algorithm is the cause of the error and that using the (possibly slow) unblocked algorithm gives the correct result.

Thanks Berend,

The finger seems to be pointing to the internal libRlapack/libRblas. The apparent pattern is that things work when R is linked against external libraries and not when the internal ones are used. So it could be time to start looking for differences between R's lapack module and the original LAPACK code.

-pd 

-- 
Peter Dalgaard, Professor,
Center for Statistics, Copenhagen Business School
Solbjerg Plads 3, 2000 Frederiksberg, Denmark
Phone: (+45)38153501
Email: pd.mes at cbs.dk  Priv: PDalgd at gmail.com


From pdalgd at gmail.com  Wed Jun 19 10:24:37 2013
From: pdalgd at gmail.com (peter dalgaard)
Date: Wed, 19 Jun 2013 10:24:37 +0200
Subject: [Rd] eigen(symmetric=TRUE) for complex matrices
In-Reply-To: <84517510-5BD0-4842-B361-4F336E24E37A@gmail.com>
References: <CAHHjBM4z8d58QNb1HuqT4-k7BKaTo_=zAeuFeDr4pZdjTP2-Tg@mail.gmail.com>
	<5CEBFA58-9D40-42F0-87B8-F006EC3A848B@gmail.com>
	<267A30A5-1865-4D23-8B9A-F04F9BBED1EE@gmail.com>
	<35EFC1D4-CA6B-42B6-A15B-4A1FCD0FD687@xs4all.nl>
	<84517510-5BD0-4842-B361-4F336E24E37A@gmail.com>
Message-ID: <5A6C81B8-EB15-4A09-B5E0-ABE8CBC8EC5E@gmail.com>


On Jun 18, 2013, at 21:49 , peter dalgaard wrote:

> 
> On Jun 18, 2013, at 21:23 , Berend Hasselman wrote:
> 
>> 
>> So it seems that the blocked algorithm is the cause of the error and that using the (possibly slow) unblocked algorithm gives the correct result.
> 
> Thanks Berend,
> 
> The finger seems to be pointing to the internal libRlapack/libRblas. The apparent pattern is that things work when R is linked against external libraries and not when the internal ones are used. So it could be time to start looking for differences between R's lapack module and the original LAPACK code.

Now done and no (relevant) differences found. Hmmm....

There could be compiler issues. It could also be that the internal LAPACK uses a newer version than the external libs and a bug was introduced in between them.

One option could be to bypass R by coding Robin's example in pure Fortran and see whether issues persist when linked against libRlapack, vecLib, and the relevant subset of current LAPACK sources. (The bogus 1.0000 eigenvalue in the 33x33 variant of Robin's example should make it rather easy to spot whether things work or not.)



-- 
Peter Dalgaard, Professor,
Center for Statistics, Copenhagen Business School
Solbjerg Plads 3, 2000 Frederiksberg, Denmark
Phone: (+45)38153501
Email: pd.mes at cbs.dk  Priv: PDalgd at gmail.com


From bhh at xs4all.nl  Wed Jun 19 12:43:45 2013
From: bhh at xs4all.nl (Berend Hasselman)
Date: Wed, 19 Jun 2013 12:43:45 +0200
Subject: [Rd] eigen(symmetric=TRUE) for complex matrices
In-Reply-To: <5A6C81B8-EB15-4A09-B5E0-ABE8CBC8EC5E@gmail.com>
References: <CAHHjBM4z8d58QNb1HuqT4-k7BKaTo_=zAeuFeDr4pZdjTP2-Tg@mail.gmail.com>
	<5CEBFA58-9D40-42F0-87B8-F006EC3A848B@gmail.com>
	<267A30A5-1865-4D23-8B9A-F04F9BBED1EE@gmail.com>
	<35EFC1D4-CA6B-42B6-A15B-4A1FCD0FD687@xs4all.nl>
	<84517510-5BD0-4842-B361-4F336E24E37A@gmail.com>
	<5A6C81B8-EB15-4A09-B5E0-ABE8CBC8EC5E@gmail.com>
Message-ID: <24CD8823-56EC-4A15-B4FC-F54652DB2888@xs4all.nl>


On 19-06-2013, at 10:24, peter dalgaard <pdalgd at gmail.com> wrote:

> 
> On Jun 18, 2013, at 21:49 , peter dalgaard wrote:
> 
>> 
>> On Jun 18, 2013, at 21:23 , Berend Hasselman wrote:
>> 
>>> 
>>> So it seems that the blocked algorithm is the cause of the error and that using the (possibly slow) unblocked algorithm gives the correct result.
>> 
>> Thanks Berend,
>> 
>> The finger seems to be pointing to the internal libRlapack/libRblas. The apparent pattern is that things work when R is linked against external libraries and not when the internal ones are used. So it could be time to start looking for differences between R's lapack module and the original LAPACK code.
> 
> Now done and no (relevant) differences found. Hmmm....
> 
> There could be compiler issues. It could also be that the internal LAPACK uses a newer version than the external libs and a bug was introduced in between them.
> 
> One option could be to bypass R by coding Robin's example in pure Fortran and see whether issues persist when linked against libRlapack, vecLib, and the relevant subset of current LAPACK sources. (The bogus 1.0000 eigenvalue in the 33x33 variant of Robin's example should make it rather easy to spot whether things work or not.)


I have made that pure Fortran program.
I have run it on OS X 10.8.4 with

- libRblas libRlapack
- my private refblas and Lapack
- framework Accelerate
- downloaded zheev.f + dependencies + libRblas
- downloaded zheev.f + dependencies + my refblas

The Fortran program and the shell script to do the compiling and running and the output file follow at the end of this mail.
The shell scripts runs otool -L on each executable to make sure it is linked to the intended libraries.
The fortran program runs zheev with the minimal lwork and the optimal lwork.

Summary of the output:

- libRblas libRlapack  ==> Bad
- my private refblas and Lapack  ==> OK
- framework Accelerate ==> OK
- downloaded zheev.f + dependencies + libRblas ==> Bad
- downloaded zheev.f + dependencies + my refblas ==> OK

It looks like libRblas is the cause of the problem.
I haven't done any further investigation of the matter.

Berend

Output is:

<output>
Running hb with Rlapack and Rblas
./hbRlapack:
	/Library/Frameworks/R.framework/Versions/3.0/Resources/lib/libRblas.dylib (compatibility version 0.0.0, current version 0.0.0)
	/Library/Frameworks/R.framework/Versions/3.0/Resources/lib/libRlapack.dylib (compatibility version 3.0.0, current version 3.0.1)
	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 169.3.0)
 lwork=         199
 info=           0
 min eig value= -4.433595556845234E-008
 lwork=        3300
 info=           0
 min eig value= -0.359347003948635     

Running hb with Haslapack and Hasblas (Lapack 3.4.2)
./hbHaslapack:
	/Users/berendhasselman/Library/lib/x86_64/librefblas.dylib (compatibility version 0.0.0, current version 0.0.0)
	/Users/berendhasselman/Library/lib/x86_64/liblapack.dylib (compatibility version 0.0.0, current version 0.0.0)
	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 169.3.0)
 lwork=         199
 info=           0
 min eig value= -4.433595556845234E-008
 lwork=        3300
 info=           0
 min eig value= -4.433595559424842E-008

Running hb with -framework Accelerate
./hbveclib:
	/System/Library/Frameworks/Accelerate.framework/Versions/A/Accelerate (compatibility version 1.0.0, current version 4.0.0)
	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 169.3.0)
 lwork=         199
 info=           0
 min eig value= -4.433595568797253E-008
 lwork=        3300
 info=           0
 min eig value= -4.433595550683581E-008

Compile downloaded zheev + dependencies
/Users/berendhasselman/Documents/Programming/R/problems/bug-error/eigbug
Running hb with downloaded zheev and Rblas
./hbzheev:
	/Library/Frameworks/R.framework/Versions/3.0/Resources/lib/libRblas.dylib (compatibility version 0.0.0, current version 0.0.0)
	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 169.3.0)
 lwork=         199
 info=           0
 min eig value= -4.433595556845234E-008
 lwork=        3300
 info=           0
 min eig value= -0.359347003948635     

Running hb with downloaded zheev and Hasrefblas
./hbzheev:
	/Users/berendhasselman/Library/lib/x86_64/librefblas.dylib (compatibility version 0.0.0, current version 0.0.0)
	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 169.3.0)
 lwork=         199
 info=           0
 min eig value= -4.433595556845234E-008
 lwork=        3300
 info=           0
 min eig value= -4.433595559424842E-008
</output>

Fortran program:
<fortran>
      program test

      integer n
      parameter(n=100)
      complex*16 A(n,n)
      double precision w(n), rwork(3*n-2)

      integer lwork, info

      complex*16 work, wtmp(1)
      allocatable work(:)

      call genmat(A,n)
      lwork = 2*n-1
      allocate(work(lwork))
      print *, "lwork=",lwork
      call zheev("N","L",n,A,n,w,work,lwork,rwork,info)
      print *, "info=",info
      print *, "min eig value=",minval(w)
      deallocate(work)

      call genmat(A,n)
      lwork = -1
      call zheev("N","L",n,A,n,w,wtmp,lwork,rwork,info)
      lwork = real(wtmp(1))
      allocate(work(lwork))
      print *, "lwork=",lwork
      call zheev("N","L",n,A,n,w,work,lwork,rwork,info)
      print *, "info=",info
      print *, "min eig value=",minval(w)

      stop
      end

      subroutine genmat(A,n)
      integer n
      complex*16 A(n,*)
      integer i, j
      double precision tmp

      do i=1,n
          do j=1,n
              tmp = exp(-0.1D0 * (i-j)**2)
              A(i,j) = cmplx(tmp,0.0D0)
          enddo
      enddo

      return
      end
</fortran>


Shell script to do the compiling and running:
<script>
gfortran -c hankinbug.f -o hankinbug.o
gfortran hankinbug.o -L/Library/Frameworks/R.framework/Libraries -lRblas -lRlapack -o hbRlapack
echo "Running hb with Rlapack and Rblas"
otool -L ./hbRlapack
./hbRlapack
echo ""

gfortran hankinbug.o -L${HOME}/Library/lib/x86_64 -lrefblas -llapack -o hbHaslapack
echo "Running hb with Haslapack and Hasblas (Lapack 3.4.2)"
otool -L ./hbHaslapack
./hbHaslapack
echo ""

gfortran hankinbug.o -framework Accelerate -o hbveclib
echo "Running hb with -framework Accelerate"
otool -L ./hbveclib
./hbveclib
echo ""

echo "Compile downloaded zheev + dependencies"
cd zheev
gfortran -c *.f
cd -
gfortran hankinbug.o zheev/*.o -L/Library/Frameworks/R.framework/Libraries -lRblas -o hbzheev
echo "Running hb with downloaded zheev and Rblas"
otool -L ./hbzheev
./hbzheev
echo ""

gfortran hankinbug.o zheev/*.o -L${HOME}/Library/lib/x86_64 -lrefblas -o hbzheev
echo "Running hb with downloaded zheev and Hasrefblas"
otool -L ./hbzheev
./hbzheev
echo ""
</script>


From ravi.varadhan at jhu.edu  Tue Jun 18 16:16:11 2013
From: ravi.varadhan at jhu.edu (Ravi Varadhan)
Date: Tue, 18 Jun 2013 14:16:11 +0000
Subject: [Rd] eigen(symmetric=TRUE) for complex matrices
In-Reply-To: <267A30A5-1865-4D23-8B9A-F04F9BBED1EE@gmail.com>
References: <CAHHjBM4z8d58QNb1HuqT4-k7BKaTo_=zAeuFeDr4pZdjTP2-Tg@mail.gmail.com>
	<5CEBFA58-9D40-42F0-87B8-F006EC3A848B@gmail.com>
	<267A30A5-1865-4D23-8B9A-F04F9BBED1EE@gmail.com>
Message-ID: <2F9EA67EF9AE1C48A147CB41BE2E15C34621A1@DOM-MTW-MAIL2.win.ad.jhu.edu>

I am also able to reproduce this problem on Windows:

library(eiginv) 

n <- 33   # problem does not arise for n <= 32

evals <- sort(rnorm(n))  

system.time(A <- eiginv(evals, symmetric=TRUE))

all.equal(evals, sort(eigen(A+0i,,TRUE)$val))

cbind(evals, sort(eigen(A+0i,,TRUE)$val))

Best,
Ravi

> version
               _                           
platform       i386-w64-mingw32            
arch           i386                        
os             mingw32                     
system         i386, mingw32               
status                                     
major          3                           
minor          0.1                         
year           2013                        
month          05                          
day            16                          
svn rev        62743                       
language       R                           
version.string R version 3.0.1 (2013-05-16)
nickname       Good Sport                  
>


-----Original Message-----
From: r-devel-bounces at r-project.org [mailto:r-devel-bounces at r-project.org] On Behalf Of peter dalgaard
Sent: Tuesday, June 18, 2013 7:23 AM
To: robin hankin
Cc: r-devel at r-project.org
Subject: Re: [Rd] eigen(symmetric=TRUE) for complex matrices

On some further digging, on the Lion machine, the problem seems absent from builds against the veclib framework. I strongly suspect that the issue is the same as PR#14964, which also affects Hermitian matrices of dimension 33x33 and above.

At smaller dimensions, a curious effect is visible:

> jj <- matrix(0,33,33)
> A <- exp(-0.1*(row(jj)-col(jj))^2)
> eigen(A,,T)
$values
 [1] 5.497434e+00 5.187095e+00 4.708628e+00 4.112589e+00 3.456602e+00  [6] 2.796253e+00 2.177674e+00 1.633085e+00 1.179630e+00 8.209787e-01 [11] 5.506744e-01 3.560858e-01 2.220308e-01 1.335197e-01 7.744384e-02 [16] 4.332359e-02 2.337139e-02 1.215408e-02 6.089878e-03 2.937761e-03 [21] 1.363015e-03 6.073985e-04 2.595197e-04 1.060717e-04 4.134966e-05 [26] 1.531412e-05 5.360284e-06 1.760457e-06 5.369131e-07 1.496798e-07 [31] 3.715172e-08 7.807420e-09 1.238432e-09

$vectors
NULL

> eigen(A+0i,,T)
$values
 [1] 5.497434e+00 5.187095e+00 4.708628e+00 4.112589e+00 3.456602e+00  [6] 2.796253e+00 2.177674e+00 1.633085e+00 1.179630e+00 1.000000e+00 [11] 8.209787e-01 5.506744e-01 3.560858e-01 2.220308e-01 1.335197e-01 [16] 7.744384e-02 4.332359e-02 2.337139e-02 1.215408e-02 6.089878e-03 [21] 2.937761e-03 1.363015e-03 6.073985e-04 2.595197e-04 1.060717e-04 [26] 4.134966e-05 1.531412e-05 5.360284e-06 1.760457e-06 5.369131e-07 [31] 1.496793e-07 3.707403e-08 6.664029e-09

$vectors
NULL

Notice that a bogus eigenvalue of 1.000 has sneaked into the 10th position in the complex case. This seems to be happening with increasing frequency as the dimension is increased, e.g.

> jj <- matrix(0,39,39)
> A <- exp(-0.1*(row(jj)-col(jj))^2)
> eigen(A+0i,,T)
$values
 [1] 5.525963e+00 5.295552e+00 4.932840e+00 4.466692e+00 4.313221e+00  [6] 3.931940e+00 3.365090e+00 2.800272e+00 2.266053e+00 1.992364e+00 [11] 1.783467e+00 1.365369e+00 1.016934e+00 7.369943e-01 5.730933e-01 [16] 5.197947e-01 3.568288e-01 2.384533e-01 1.551331e-01 1.070839e-01 [21] 9.826254e-02 6.059788e-02 3.638230e-02 2.126343e-02 1.318810e-02 [26] 1.209480e-02 6.693571e-03 3.602773e-03 1.884985e-03 1.011671e-03 [31] 9.580352e-04 4.725998e-04 2.260430e-04 1.046915e-04 4.687560e-05 [36] 3.794374e-05 2.020133e-05 7.751127e-06 1.472817e-06

$vectors
NULL

> eigen(A,,T)
$values
 [1] 5.525963e+00 5.295552e+00 4.932840e+00 4.466692e+00 3.931940e+00  [6] 3.365090e+00 2.800272e+00 2.266053e+00 1.783467e+00 1.365369e+00 [11] 1.016934e+00 7.369943e-01 5.197947e-01 3.568288e-01 2.384533e-01 [16] 1.551331e-01 9.826254e-02 6.059788e-02 3.638230e-02 2.126343e-02 [21] 1.209480e-02 6.693571e-03 3.602773e-03 1.884985e-03 9.580352e-04 [26] 4.725998e-04 2.260430e-04 1.046915e-04 4.687623e-05 2.025048e-05 [31] 8.418654e-06 3.356873e-06 1.278239e-06 4.620504e-07 1.572170e-07 [36] 4.971980e-08 1.431462e-08 3.613385e-09 7.510902e-10

$vectors
NULL

in which most of the rightmost column of the complex case appear to be insertions.

-pd


On Jun 18, 2013, at 09:57 , peter dalgaard wrote:

> 
> On Jun 18, 2013, at 03:30 , robin hankin wrote:
> 
>> R-3.0.1 rev 62743, binary downloaded from CRAN just now; macosx 
>> 10.8.3
>> 
>> Hello,
>> 
>> eigen(symmetric=TRUE) behaves strangely when given complex matrices.
>> 
>> 
>> The following two lines define 'A', a 100x100 (real) symmetric matrix 
>> which theoretical considerations [Bochner's theorem] show to be 
>> positive
>> definite:
>> 
>> jj <- matrix(0,100,100)
>> A <- exp(-0.1*(row(jj)-col(jj))^2)
>> 
>> 
>> A's being positive-definite is important to me:
>> 
>> 
>>> min(eigen(A,T,T)$values)
>> [1] 2.521153e-10
>>> 
>> 
>> Coercing A to a complex matrix should make no difference, but makes
>> eigen() return the wrong answer:
>> 
>>> min(eigen(A+0i,T,T)$values)
>> [1] -0.359347
>>> 
>> 
>> This is very, very wrong.
> 
> Yep. I see this also on 10.6/7 (Snow Leopard, Lion)  and 3.0.x, but NOT with a MacPorts build of 2.15.3 that I had lying around.  
> 
> So this sits somewhere between Mac builds, R versions, and possibly LAPACK issues. Can anyone reproduce on non-Mac?
> 
> It's not the first time complex matrices have acted up. We may need to put in a regression test to catch it earlier.
> 
>> 
>> I would expect these two commands to return identical values, up to
>> numerical precision.   Compare svd():
>> 
>> 
>>> dput(min(eigen(A,T,T)$values))
>> 2.52115250343783e-10
>>> dput(min(eigen(A+0i,T,T)$values))
>> -0.359346984206908
>>> dput(min(svd(A)$d))
>> 2.52115166468044e-10
>>> dput(min(svd(A+0i)$d))
>> 2.52115166468044e-10
>>> 
>> 
>> So svd() doesn't care about the coercion to complex.  The 'A' matrix 
>> isn't particularly badly conditioned:
>> 
>> 
>>> eigen(A,T)$vectors -> e
>>> crossprod(e)[1:4,1:4]
>> 
>> also:
>> 
>>> crossprod(A,solve(A))
>> 
>> 
>> [and the associated commands with A+0i in place of A], give errors of 
>> order 1e-14 or less.
>> 
>> 
>> I think the eigenvectors are misbehaving too:
>> 
>>> eigen(A,T)$vectors -> ev1
>>> eigen(A+0i,T)$vectors -> ev2
>>> range(Re((A %*% ev1[,100])/ev1[,100]))
>> [1] 2.497662e-10 2.566555e-10                   # min=max mathematically;
>> differences due to numerics
>>> range(Re((A %*% ev2[,100])/ev2[,100]))
>> [1] -19.407290   4.412938                       # off the scale errors
>> [note the difference in sign]
>>> 
>> 
>> 
>> FWIW, these problems do not appear to occur if symmetric=FALSE:
>> 
>>> min(Re(eigen(A+0i,F,T)$values))
>> [1] 2.521153e-10
>>> min(Re(eigen(A,F,T)$values))
>> [1] 2.521153e-10
>>> 
>> 
>> and the eigenvectors appear to behave themselves too.
>> 
>> 
>> Also, can I raise a doco?  The documentation for eigen() is not 
>> entirely transparent with regard to the 'symmetric' argument.  For 
>> complex matrices, 'symmetric' should read 'Hermitian':
>> 
>> 
>>> B <- matrix(c(2,1i,-1i,2),2,2)   # 'B' is Hermitian
>>> eigen(B,F,T)$values
>> [1] 3+0i 1+0i
>>> eigen(B,T,T)$values    # answers agree as expected if 'symmetric' means
>> 'Hermitian'
>> [1] 3 1
>> 
>> 
>> 
>>> C <- matrix(c(2,1i,1i,2),2,2)    # 'C' is symmetric
>>> eigen(C,F,T)$values
>> [1] 2-1i 2+1i
>>> eigen(C,T,T)$values  # answers disagree because 'C' is not Hermitian
>> [1] 3 1
>>> 
>> 
> 
> This issue, however, I do not understand; ?eigen already has:
> 
> 
> symmetric: if 'TRUE', the matrix is assumed to be symmetric (or
>          Hermitian if complex) and only its lower triangle (diagonal
>          included) is used.  If 'symmetric' is not specified, the
>          matrix is inspected for symmetry.
> 
> Which part of "Hermitian if complex" is unclear?
> 
> --
> Peter Dalgaard, Professor,
> Center for Statistics, Copenhagen Business School Solbjerg Plads 3, 
> 2000 Frederiksberg, Denmark
> Phone: (+45)38153501
> Email: pd.mes at cbs.dk  Priv: PDalgd at gmail.com
> 
> 
> 
> 
> 
> 
> 
> 

--
Peter Dalgaard, Professor
Center for Statistics, Copenhagen Business School Solbjerg Plads 3, 2000 Frederiksberg, Denmark
Phone: (+45)38153501
Email: pd.mes at cbs.dk  Priv: PDalgd at gmail.com

______________________________________________
R-devel at r-project.org mailing list
https://stat.ethz.ch/mailman/listinfo/r-devel


From pdalgd at gmail.com  Wed Jun 19 14:17:56 2013
From: pdalgd at gmail.com (peter dalgaard)
Date: Wed, 19 Jun 2013 14:17:56 +0200
Subject: [Rd] eigen(symmetric=TRUE) for complex matrices
In-Reply-To: <24CD8823-56EC-4A15-B4FC-F54652DB2888@xs4all.nl>
References: <CAHHjBM4z8d58QNb1HuqT4-k7BKaTo_=zAeuFeDr4pZdjTP2-Tg@mail.gmail.com>
	<5CEBFA58-9D40-42F0-87B8-F006EC3A848B@gmail.com>
	<267A30A5-1865-4D23-8B9A-F04F9BBED1EE@gmail.com>
	<35EFC1D4-CA6B-42B6-A15B-4A1FCD0FD687@xs4all.nl>
	<84517510-5BD0-4842-B361-4F336E24E37A@gmail.com>
	<5A6C81B8-EB15-4A09-B5E0-ABE8CBC8EC5E@gmail.com>
	<24CD8823-56EC-4A15-B4FC-F54652DB2888@xs4all.nl>
Message-ID: <C74505CF-FE4E-45D4-99D0-41EA2A9F4BF1@gmail.com>


On Jun 19, 2013, at 12:43 , Berend Hasselman wrote:

> 
> On 19-06-2013, at 10:24, peter dalgaard <pdalgd at gmail.com> wrote:
> 
>> 
>> On Jun 18, 2013, at 21:49 , peter dalgaard wrote:
>> 
>>> 
>>> On Jun 18, 2013, at 21:23 , Berend Hasselman wrote:
>>> 
>>>> 
>>>> So it seems that the blocked algorithm is the cause of the error and that using the (possibly slow) unblocked algorithm gives the correct result.
>>> 
>>> Thanks Berend,
>>> 
>>> The finger seems to be pointing to the internal libRlapack/libRblas. The apparent pattern is that things work when R is linked against external libraries and not when the internal ones are used. So it could be time to start looking for differences between R's lapack module and the original LAPACK code.
>> 
>> Now done and no (relevant) differences found. Hmmm....
>> 
>> There could be compiler issues. It could also be that the internal LAPACK uses a newer version than the external libs and a bug was introduced in between them.
>> 
>> One option could be to bypass R by coding Robin's example in pure Fortran and see whether issues persist when linked against libRlapack, vecLib, and the relevant subset of current LAPACK sources. (The bogus 1.0000 eigenvalue in the 33x33 variant of Robin's example should make it rather easy to spot whether things work or not.)
> 
> 
> I have made that pure Fortran program.
> I have run it on OS X 10.8.4 with
> 
> - libRblas libRlapack
> - my private refblas and Lapack
> - framework Accelerate
> - downloaded zheev.f + dependencies + libRblas
> - downloaded zheev.f + dependencies + my refblas
> 
> The Fortran program and the shell script to do the compiling and running and the output file follow at the end of this mail.
> The shell scripts runs otool -L on each executable to make sure it is linked to the intended libraries.
> The fortran program runs zheev with the minimal lwork and the optimal lwork.
> 
> Summary of the output:
> 
> - libRblas libRlapack  ==> Bad
> - my private refblas and Lapack  ==> OK
> - framework Accelerate ==> OK
> - downloaded zheev.f + dependencies + libRblas ==> Bad
> - downloaded zheev.f + dependencies + my refblas ==> OK
> 
> It looks like libRblas is the cause of the problem.
> I haven't done any further investigation of the matter.
> 
> Berend
> 
> Output is:
> 
> <output>
> Running hb with Rlapack and Rblas
> ./hbRlapack:
> 	/Library/Frameworks/R.framework/Versions/3.0/Resources/lib/libRblas.dylib (compatibility version 0.0.0, current version 0.0.0)
> 	/Library/Frameworks/R.framework/Versions/3.0/Resources/lib/libRlapack.dylib (compatibility version 3.0.0, current version 3.0.1)
> 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 169.3.0)
> lwork=         199
> info=           0
> min eig value= -4.433595556845234E-008
> lwork=        3300
> info=           0
> min eig value= -0.359347003948635     
> 
> Running hb with Haslapack and Hasblas (Lapack 3.4.2)
> ./hbHaslapack:
> 	/Users/berendhasselman/Library/lib/x86_64/librefblas.dylib (compatibility version 0.0.0, current version 0.0.0)
> 	/Users/berendhasselman/Library/lib/x86_64/liblapack.dylib (compatibility version 0.0.0, current version 0.0.0)
> 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 169.3.0)
> lwork=         199
> info=           0
> min eig value= -4.433595556845234E-008
> lwork=        3300
> info=           0
> min eig value= -4.433595559424842E-008
> 
> Running hb with -framework Accelerate
> ./hbveclib:
> 	/System/Library/Frameworks/Accelerate.framework/Versions/A/Accelerate (compatibility version 1.0.0, current version 4.0.0)
> 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 169.3.0)
> lwork=         199
> info=           0
> min eig value= -4.433595568797253E-008
> lwork=        3300
> info=           0
> min eig value= -4.433595550683581E-008
> 
> Compile downloaded zheev + dependencies
> /Users/berendhasselman/Documents/Programming/R/problems/bug-error/eigbug
> Running hb with downloaded zheev and Rblas
> ./hbzheev:
> 	/Library/Frameworks/R.framework/Versions/3.0/Resources/lib/libRblas.dylib (compatibility version 0.0.0, current version 0.0.0)
> 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 169.3.0)
> lwork=         199
> info=           0
> min eig value= -4.433595556845234E-008
> lwork=        3300
> info=           0
> min eig value= -0.359347003948635     
> 
> Running hb with downloaded zheev and Hasrefblas
> ./hbzheev:
> 	/Users/berendhasselman/Library/lib/x86_64/librefblas.dylib (compatibility version 0.0.0, current version 0.0.0)
> 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 169.3.0)
> lwork=         199
> info=           0
> min eig value= -4.433595556845234E-008
> lwork=        3300
> info=           0
> min eig value= -4.433595559424842E-008
> </output>
> 
> Fortran program:
> <fortran>
>      program test
> 
>      integer n
>      parameter(n=100)
>      complex*16 A(n,n)
>      double precision w(n), rwork(3*n-2)
> 
>      integer lwork, info
> 
>      complex*16 work, wtmp(1)
>      allocatable work(:)
> 
>      call genmat(A,n)
>      lwork = 2*n-1
>      allocate(work(lwork))
>      print *, "lwork=",lwork
>      call zheev("N","L",n,A,n,w,work,lwork,rwork,info)
>      print *, "info=",info
>      print *, "min eig value=",minval(w)
>      deallocate(work)
> 
>      call genmat(A,n)
>      lwork = -1
>      call zheev("N","L",n,A,n,w,wtmp,lwork,rwork,info)
>      lwork = real(wtmp(1))
>      allocate(work(lwork))
>      print *, "lwork=",lwork
>      call zheev("N","L",n,A,n,w,work,lwork,rwork,info)
>      print *, "info=",info
>      print *, "min eig value=",minval(w)
> 
>      stop
>      end
> 
>      subroutine genmat(A,n)
>      integer n
>      complex*16 A(n,*)
>      integer i, j
>      double precision tmp
> 
>      do i=1,n
>          do j=1,n
>              tmp = exp(-0.1D0 * (i-j)**2)
>              A(i,j) = cmplx(tmp,0.0D0)
>          enddo
>      enddo
> 
>      return
>      end
> </fortran>
> 
> 
> Shell script to do the compiling and running:
> <script>
> gfortran -c hankinbug.f -o hankinbug.o
> gfortran hankinbug.o -L/Library/Frameworks/R.framework/Libraries -lRblas -lRlapack -o hbRlapack
> echo "Running hb with Rlapack and Rblas"
> otool -L ./hbRlapack
> ./hbRlapack
> echo ""
> 
> gfortran hankinbug.o -L${HOME}/Library/lib/x86_64 -lrefblas -llapack -o hbHaslapack
> echo "Running hb with Haslapack and Hasblas (Lapack 3.4.2)"
> otool -L ./hbHaslapack
> ./hbHaslapack
> echo ""
> 
> gfortran hankinbug.o -framework Accelerate -o hbveclib
> echo "Running hb with -framework Accelerate"
> otool -L ./hbveclib
> ./hbveclib
> echo ""
> 
> echo "Compile downloaded zheev + dependencies"
> cd zheev
> gfortran -c *.f
> cd -
> gfortran hankinbug.o zheev/*.o -L/Library/Frameworks/R.framework/Libraries -lRblas -o hbzheev
> echo "Running hb with downloaded zheev and Rblas"
> otool -L ./hbzheev
> ./hbzheev
> echo ""
> 
> gfortran hankinbug.o zheev/*.o -L${HOME}/Library/lib/x86_64 -lrefblas -o hbzheev
> echo "Running hb with downloaded zheev and Hasrefblas"
> otool -L ./hbzheev
> ./hbzheev
> echo ""
> </script>
> 


Thanks. I think I have it nailed down now. The culprit was indeed in our reference BLAS (I had only checked the LAPACK code), cmplxblas.f to be specific. Revision 53001 had a number of IF statements being commented out, but two of the changes looked like this:

@@ -1561,7 +1561,7 @@
                   C( J, J ) = DBLE( C( J, J ) )
                END IF
                DO 170 L = 1, K
-                  IF( ( A( J, L ).NE.ZERO ) .OR. ( B( J, L ).NE.ZERO ) )
+c                  IF( ( A( J, L ).NE.ZERO ) .OR. ( B( J, L ).NE.ZERO ) )
      $                 THEN
                      TEMP1 = ALPHA*DCONJG( B( J, L ) )
                      TEMP2 = DCONJG( ALPHA*A( J, L ) )

Notice that the continuation line was NOT commented out. So FORTRAN, being what it is, continues the line before the comment and parses it as 
      DO 170 L = 1, KTHEN
with KTHEN uninitialized! and things go downhill from there. 

(The uninitialized variable was actually hinted at in PR14964 and the fact that I could get one of my builds to segfault also helped.)


-- 
Peter Dalgaard, Professor
Center for Statistics, Copenhagen Business School
Solbjerg Plads 3, 2000 Frederiksberg, Denmark
Phone: (+45)38153501
Email: pd.mes at cbs.dk  Priv: PDalgd at gmail.com


From Roger.Bivand at nhh.no  Wed Jun 19 14:28:12 2013
From: Roger.Bivand at nhh.no (Roger Bivand)
Date: Wed, 19 Jun 2013 12:28:12 +0000
Subject: [Rd] eigen(symmetric=TRUE) for complex matrices
References: <CAHHjBM4z8d58QNb1HuqT4-k7BKaTo_=zAeuFeDr4pZdjTP2-Tg@mail.gmail.com>
	<5CEBFA58-9D40-42F0-87B8-F006EC3A848B@gmail.com>
	<267A30A5-1865-4D23-8B9A-F04F9BBED1EE@gmail.com>
	<35EFC1D4-CA6B-42B6-A15B-4A1FCD0FD687@xs4all.nl>
	<84517510-5BD0-4842-B361-4F336E24E37A@gmail.com>
	<5A6C81B8-EB15-4A09-B5E0-ABE8CBC8EC5E@gmail.com>
Message-ID: <loom.20130619T141758-22@post.gmane.org>

peter dalgaard <pdalgd <at> gmail.com> writes:

> 
> 
...
> 
> There could be compiler issues. It could also be that the internal LAPACK
uses a newer version than the
> external libs and a bug was introduced in between them.

Running:

N <- 100
jj <- matrix(0,N,N)
A <- exp(-0.1*(row(jj)-col(jj))^2)
min(eigen(A,only.values=TRUE,symmetric=TRUE)$values)
min(eigen(A+0i,only.values=TRUE,symmetric=TRUE)$values)

with R's BLAS in 3.0.1 on Fedora 18 with gcc 4.7.2-8 gives the same error.
Both 3.0.1 and R-devel (R's BLAS) on RHEL 5 gcc 4.1.2 give a segfault at
zher2k(), in the 3.0.1 case at line 1566 in cmplxblas.f, at line 1570 for
R-devel. So yes, there is a compiler issue too. 

The backtrace is La_rs_cmplx at Lapack.c:829 -> zheev at cmplx.f:10356 ->
zhetrd at cmplx.f:11080 -> zher2k at cmplxblas.f:1570 for R-devel, and
La_rs_cmplx at Lapack.c:829 -> zheev at cmplx.f:10356 -> zhetrd at
cmplx.f:11080 -> zher2k at cmplxblas.f:1566 for 3.0.1.

Roger


From bhh at xs4all.nl  Wed Jun 19 15:58:35 2013
From: bhh at xs4all.nl (Berend Hasselman)
Date: Wed, 19 Jun 2013 15:58:35 +0200
Subject: [Rd] eigen(symmetric=TRUE) for complex matrices
In-Reply-To: <C74505CF-FE4E-45D4-99D0-41EA2A9F4BF1@gmail.com>
References: <CAHHjBM4z8d58QNb1HuqT4-k7BKaTo_=zAeuFeDr4pZdjTP2-Tg@mail.gmail.com>
	<5CEBFA58-9D40-42F0-87B8-F006EC3A848B@gmail.com>
	<267A30A5-1865-4D23-8B9A-F04F9BBED1EE@gmail.com>
	<35EFC1D4-CA6B-42B6-A15B-4A1FCD0FD687@xs4all.nl>
	<84517510-5BD0-4842-B361-4F336E24E37A@gmail.com>
	<5A6C81B8-EB15-4A09-B5E0-ABE8CBC8EC5E@gmail.com>
	<24CD8823-56EC-4A15-B4FC-F54652DB2888@xs4all.nl>
	<C74505CF-FE4E-45D4-99D0-41EA2A9F4BF1@gmail.com>
Message-ID: <36D9889B-76F1-40AA-B003-7D222EEFD4D1@xs4all.nl>


On 19-06-2013, at 14:17, peter dalgaard <pdalgd at gmail.com> wrote:

> 
> 
> 
> Thanks. I think I have it nailed down now. The culprit was indeed in our reference BLAS (I had only checked the LAPACK code), cmplxblas.f to be specific. Revision 53001 had a number of IF statements being commented out, but two of the changes looked like this:
> 
> @@ -1561,7 +1561,7 @@
>                   C( J, J ) = DBLE( C( J, J ) )
>                END IF
>                DO 170 L = 1, K
> -                  IF( ( A( J, L ).NE.ZERO ) .OR. ( B( J, L ).NE.ZERO ) )
> +c                  IF( ( A( J, L ).NE.ZERO ) .OR. ( B( J, L ).NE.ZERO ) )
>      $                 THEN
>                      TEMP1 = ALPHA*DCONJG( B( J, L ) )
>                      TEMP2 = DCONJG( ALPHA*A( J, L ) )
> 
> Notice that the continuation line was NOT commented out. So FORTRAN, being what it is, continues the line before the comment and parses it as 
>      DO 170 L = 1, KTHEN
> with KTHEN uninitialized! and things go downhill from there. 
> 
> (The uninitialized variable was actually hinted at in PR14964 and the fact that I could get one of my builds to segfault also helped.)
> 


And it seems that line 1536 and 1537 ( R-3.0.1 source) have a similar change, so that will also have be put right.

Berend


From pdalgd at gmail.com  Wed Jun 19 16:16:34 2013
From: pdalgd at gmail.com (peter dalgaard)
Date: Wed, 19 Jun 2013 16:16:34 +0200
Subject: [Rd] eigen(symmetric=TRUE) for complex matrices
In-Reply-To: <36D9889B-76F1-40AA-B003-7D222EEFD4D1@xs4all.nl>
References: <CAHHjBM4z8d58QNb1HuqT4-k7BKaTo_=zAeuFeDr4pZdjTP2-Tg@mail.gmail.com>
	<5CEBFA58-9D40-42F0-87B8-F006EC3A848B@gmail.com>
	<267A30A5-1865-4D23-8B9A-F04F9BBED1EE@gmail.com>
	<35EFC1D4-CA6B-42B6-A15B-4A1FCD0FD687@xs4all.nl>
	<84517510-5BD0-4842-B361-4F336E24E37A@gmail.com>
	<5A6C81B8-EB15-4A09-B5E0-ABE8CBC8EC5E@gmail.com>
	<24CD8823-56EC-4A15-B4FC-F54652DB2888@xs4all.nl>
	<C74505CF-FE4E-45D4-99D0-41EA2A9F4BF1@gmail.com>
	<36D9889B-76F1-40AA-B003-7D222EEFD4D1@xs4all.nl>
Message-ID: <9607E20C-6839-4646-ABAF-1BADFECC6DB1@gmail.com>


On Jun 19, 2013, at 15:58 , Berend Hasselman wrote:

> 
> On 19-06-2013, at 14:17, peter dalgaard <pdalgd at gmail.com> wrote:
> 
>> 
>> 
>> 
>> Thanks. I think I have it nailed down now. The culprit was indeed in our reference BLAS (I had only checked the LAPACK code), cmplxblas.f to be specific. Revision 53001 had a number of IF statements being commented out, but two of the changes looked like this:
>> 
>> @@ -1561,7 +1561,7 @@
>>                  C( J, J ) = DBLE( C( J, J ) )
>>               END IF
>>               DO 170 L = 1, K
>> -                  IF( ( A( J, L ).NE.ZERO ) .OR. ( B( J, L ).NE.ZERO ) )
>> +c                  IF( ( A( J, L ).NE.ZERO ) .OR. ( B( J, L ).NE.ZERO ) )
>>     $                 THEN
>>                     TEMP1 = ALPHA*DCONJG( B( J, L ) )
>>                     TEMP2 = DCONJG( ALPHA*A( J, L ) )
>> 
>> Notice that the continuation line was NOT commented out. So FORTRAN, being what it is, continues the line before the comment and parses it as 
>>     DO 170 L = 1, KTHEN
>> with KTHEN uninitialized! and things go downhill from there. 
>> 
>> (The uninitialized variable was actually hinted at in PR14964 and the fact that I could get one of my builds to segfault also helped.)
>> 
> 
> 
> And it seems that line 1536 and 1537 ( R-3.0.1 source) have a similar change, so that will also have be put right.
> 
> Berend
> 
> 


Yes, that's the other one of the two changes.

-pd

-- 
Peter Dalgaard, Professor
Center for Statistics, Copenhagen Business School
Solbjerg Plads 3, 2000 Frederiksberg, Denmark
Phone: (+45)38153501
Email: pd.mes at cbs.dk  Priv: PDalgd at gmail.com


From tjardie at gmail.com  Wed Jun 19 16:14:40 2013
From: tjardie at gmail.com (Tee-Jay-Ardie)
Date: Wed, 19 Jun 2013 07:14:40 -0700 (PDT)
Subject: [Rd] Calling an array in a struct in C to R
Message-ID: <1371651280258-4669884.post@n4.nabble.com>

Hi there,

Although I'm a quite experienced R user and know my ways in C, I stumbled
upon a problem I don't know how to solve. Therefore, I hope someone can
provide me with the information or pointers I need in order to understand
the way in which the communication between R and C occurs. I have the
following C code which basicallly reflects what I want:

typedef struct
{
       float *array;
       size_t used;
       size_t size;
} Array;

void main2R()
{
      Array a;
      examplefunction(&a);   /*fills and dynamically grows a->array*/
}

Now I would want to return a.array or a->array to R. According to the R
manuals, the compiled C code should not return anything except through its
arguments. The problem here is, I have a dynamically growing array, and I
have no idea what to pass on to C from R in order to let that work. 
The word 'should' indicates that the compiled code may return something in
special circumstances, but I have no idea how to get a.array in R. 

So my question is simply this: How on earth do I get the information in the
float array 'a.array' in R? Is it even possible or should I rewrite my C
code using Call in R? 

Another, not preferred, options is to pre-allocate the array/vector in R on
a fixed (large-enough) size? Or do I miss something here? 

Regards.



--
View this message in context: http://r.789695.n4.nabble.com/Calling-an-array-in-a-struct-in-C-to-R-tp4669884.html
Sent from the R devel mailing list archive at Nabble.com.


From wdunlap at tibco.com  Wed Jun 19 17:41:39 2013
From: wdunlap at tibco.com (William Dunlap)
Date: Wed, 19 Jun 2013 15:41:39 +0000
Subject: [Rd] Calling an array in a struct in C to R
In-Reply-To: <1371651280258-4669884.post@n4.nabble.com>
References: <1371651280258-4669884.post@n4.nabble.com>
Message-ID: <E66794E69CFDE04D9A70842786030B931C30435C@PA-MBX01.na.tibco.com>

> should I rewrite my C code using Call in R?

Yes, rewrite it to use the .Call() interface.

Bill Dunlap
Spotfire, TIBCO Software
wdunlap tibco.com


> -----Original Message-----
> From: r-devel-bounces at r-project.org [mailto:r-devel-bounces at r-project.org] On Behalf
> Of Tee-Jay-Ardie
> Sent: Wednesday, June 19, 2013 7:15 AM
> To: r-devel at r-project.org
> Subject: [Rd] Calling an array in a struct in C to R
> 
> Hi there,
> 
> Although I'm a quite experienced R user and know my ways in C, I stumbled
> upon a problem I don't know how to solve. Therefore, I hope someone can
> provide me with the information or pointers I need in order to understand
> the way in which the communication between R and C occurs. I have the
> following C code which basicallly reflects what I want:
> 
> typedef struct
> {
>        float *array;
>        size_t used;
>        size_t size;
> } Array;
> 
> void main2R()
> {
>       Array a;
>       examplefunction(&a);   /*fills and dynamically grows a->array*/
> }
> 
> Now I would want to return a.array or a->array to R. According to the R
> manuals, the compiled C code should not return anything except through its
> arguments. The problem here is, I have a dynamically growing array, and I
> have no idea what to pass on to C from R in order to let that work.
> The word 'should' indicates that the compiled code may return something in
> special circumstances, but I have no idea how to get a.array in R.
> 
> So my question is simply this: How on earth do I get the information in the
> float array 'a.array' in R? Is it even possible or should I rewrite my C
> code using Call in R?
> 
> Another, not preferred, options is to pre-allocate the array/vector in R on
> a fixed (large-enough) size? Or do I miss something here?
> 
> Regards.
> 
> 
> 
> --
> View this message in context: http://r.789695.n4.nabble.com/Calling-an-array-in-a-
> struct-in-C-to-R-tp4669884.html
> Sent from the R devel mailing list archive at Nabble.com.
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From h.wickham at gmail.com  Wed Jun 19 22:44:05 2013
From: h.wickham at gmail.com (Hadley Wickham)
Date: Wed, 19 Jun 2013 15:44:05 -0500
Subject: [Rd] str and s3 classes
Message-ID: <CABdHhvH08vczUYU=gkcg4-BHypugmtP7GvgfNgWt5YPmXK0quA@mail.gmail.com>

Hi all,

Because str uses the generic version of length and names, it's
currently very easy to create objects that break str:

a <- structure(list(1:5), class = "a")
length.a <- function(x) 2L

str(a)

b <- structure(list(1:5), class = "b")
names.b <- function(x) character()

str(b)


These are obvious toy examples, but it is a real problem if you want
to create a class that defines names or length in a meaningful way,
that is incompatible with the underlying data structure.

Hadley

--
Chief Scientist, RStudio
http://had.co.nz/


From murdoch.duncan at gmail.com  Thu Jun 20 00:53:06 2013
From: murdoch.duncan at gmail.com (Duncan Murdoch)
Date: Wed, 19 Jun 2013 18:53:06 -0400
Subject: [Rd] str and s3 classes
In-Reply-To: <CABdHhvH08vczUYU=gkcg4-BHypugmtP7GvgfNgWt5YPmXK0quA@mail.gmail.com>
References: <CABdHhvH08vczUYU=gkcg4-BHypugmtP7GvgfNgWt5YPmXK0quA@mail.gmail.com>
Message-ID: <51C23652.5000204@gmail.com>

On 13-06-19 4:44 PM, Hadley Wickham wrote:
> Hi all,
>
> Because str uses the generic version of length and names, it's
> currently very easy to create objects that break str:
>
> a <- structure(list(1:5), class = "a")
> length.a <- function(x) 2L
>
> str(a)
>
> b <- structure(list(1:5), class = "b")
> names.b <- function(x) character()
>
> str(b)
>
>
> These are obvious toy examples, but it is a real problem if you want
> to create a class that defines names or length in a meaningful way,
> that is incompatible with the underlying data structure.

There are a few problems in the package; I'm not sure if all of them 
have any effect, but it works if I fix them all:

  - you have both inst/doc and vignettes directories.  You should only 
have one of those.

  - Your vignette is named simple.rmd.  The list_files_with_type() 
function isn't looking for the .rmd extension; it only recognizes .Rmd.
That function is used for vignette() and browseVignettes(), but I think 
not for the HTML page you get to from help.start(). It should probably 
be fixed to work with the optional engines, which specify their own 
patterns.  I'll put it on the list of things to fix.

Duncan


From hs964204 at naver.com  Wed Jun 19 17:37:05 2013
From: hs964204 at naver.com (=?UTF-8?B?67CV7KO87ZiE?=)
Date: Thu, 20 Jun 2013 00:37:05 +0900 (KST)
Subject: [Rd] =?utf-8?q?questions_about_roadmap?=
Message-ID: <265696f26ae3eba339b6bcd1d8cbf56@tweb26.nm.nhnsystem.com>

An embedded and charset-unspecified text was scrubbed...
Name: not available
URL: <https://stat.ethz.ch/pipermail/r-devel/attachments/20130620/d9d311e1/attachment.pl>

From therneau at mayo.edu  Thu Jun 20 13:57:26 2013
From: therneau at mayo.edu (Terry Therneau)
Date: Thu, 20 Jun 2013 06:57:26 -0500
Subject: [Rd] Calling an array in a struct in C to R
In-Reply-To: <mailman.25.1371722408.12621.r-devel@r-project.org>
References: <mailman.25.1371722408.12621.r-devel@r-project.org>
Message-ID: <51C2EE26.3020507@mayo.edu>

An embedded and charset-unspecified text was scrubbed...
Name: not available
URL: <https://stat.ethz.ch/pipermail/r-devel/attachments/20130620/646c1741/attachment.pl>

From romain at r-enthusiasts.com  Thu Jun 20 14:36:57 2013
From: romain at r-enthusiasts.com (Romain Francois)
Date: Thu, 20 Jun 2013 14:36:57 +0200
Subject: [Rd] Calling an array in a struct in C to R
In-Reply-To: <1371651280258-4669884.post@n4.nabble.com>
References: <1371651280258-4669884.post@n4.nabble.com>
Message-ID: <51C2F769.40501@r-enthusiasts.com>

Hello,

I would use external pointers for something like this.

If c++ is an option, you can take advantage of Rcpp classes to deal with 
external pointers. Put the following in a .cpp and sourceCpp() it.

#include <Rcpp.h>
using namespace Rcpp ;

class Array {
public:
     Array( ) : size(10), used(0){
         array = new float[10] ;
     }

     ~Array(){
         delete[] array ;
     }

     size_t get_used(){ return used ; }
     // other methods doing stuff with the data

private:
     float *array;
     size_t used;
     size_t size;
} ;
typedef XPtr<Array> ArrayPointer ;

// [[Rcpp::export]]
ArrayPointer create_ptr( ){
     return ArrayPointer( new Array ) ;
}

// [[Rcpp::export]]
size_t Array_get_used(ArrayPointer obj){
     // here we use ArrayPointer just like an Array*
     return obj->get_used() ;
}

Now, this is very raw and at the R level you get opaque external pointers:

 > a <- create_ptr()

 > str(a)
<externalptr>

 > Array_get_used(a)
[1] 0



You can go further than this and use Rcpp modules so that you don't need 
to worry about external pointers, which you can consider as 
implementation details. For example:

#include <Rcpp.h>
using namespace Rcpp ;

class Array {
public:
     Array( ) : size(10), used(0){
         array = new float[10] ;
     }

     ~Array(){
         delete[] array ;
     }

     size_t get_used(){ return used ; }
     // other methods doing stuff with the data

private:
     float *array;
     size_t used;
     size_t size;
} ;

// the module code, this is where you declare what of
// your class you expose to the R level
RCPP_MODULE(ArrayModule){
     class_<Array>("Array")
         .constructor()
         .method( "get_used", &Array::get_used)
     ;
}

With this, the R code looks like this:

# we should get rid of the need to call populate.
# for now let us just assume it is a way to copy
# the content of the module
# into the global environment
 > populate(ArrayModule, globalenv())

 > b <- new(Array)

 > str(b)
Reference class 'Rcpp_Array' [package ".GlobalEnv"] with 0 fields
  list()
  and 15 methods, of which 3 are possibly relevant:
    finalize, get_used, initialize

 > b$get_used()
[1] 0

Romain

Le 19/06/13 16:14, Tee-Jay-Ardie a ?crit :
> Hi there,
>
> Although I'm a quite experienced R user and know my ways in C, I stumbled
> upon a problem I don't know how to solve. Therefore, I hope someone can
> provide me with the information or pointers I need in order to understand
> the way in which the communication between R and C occurs. I have the
> following C code which basicallly reflects what I want:
>
> typedef struct
> {
>         float *array;
>         size_t used;
>         size_t size;
> } Array;
>
> void main2R()
> {
>        Array a;
>        examplefunction(&a);   /*fills and dynamically grows a->array*/
> }
>
> Now I would want to return a.array or a->array to R. According to the R
> manuals, the compiled C code should not return anything except through its
> arguments. The problem here is, I have a dynamically growing array, and I
> have no idea what to pass on to C from R in order to let that work.
> The word 'should' indicates that the compiled code may return something in
> special circumstances, but I have no idea how to get a.array in R.
>
> So my question is simply this: How on earth do I get the information in the
> float array 'a.array' in R? Is it even possible or should I rewrite my C
> code using Call in R?
>
> Another, not preferred, options is to pre-allocate the array/vector in R on
> a fixed (large-enough) size? Or do I miss something here?
>
> Regards.

-- 
Romain Francois
Professional R Enthusiast
+33(0) 6 28 91 30 30

R Graph Gallery: http://gallery.r-enthusiasts.com

blog:            http://blog.r-enthusiasts.com
|- http://bit.ly/13SrjxO : highlight 0.4.2
`- http://bit.ly/10X94UM : Mobile version of the graph gallery


From tjardie at gmail.com  Thu Jun 20 14:44:18 2013
From: tjardie at gmail.com (Tee-Jay-Ardie)
Date: Thu, 20 Jun 2013 05:44:18 -0700 (PDT)
Subject: [Rd] Calling an array in a struct in C to R
In-Reply-To: <51C2EE26.3020507@mayo.edu>
References: <1371651280258-4669884.post@n4.nabble.com>
	<51C2EE26.3020507@mayo.edu>
Message-ID: <1371732258885-4669972.post@n4.nabble.com>

Terry Therneau-2 wrote
> Another solution is the one used for a long time in the rpart code.
> The R code called "rpart1", which does the work, keeps a static pointer to
> the object, 
> does NOT
> release it's memory, and returned the size of the object.
> 
> Then the R code allocates appropriate vectors and called "rpart2", which
> filled in the 
> result and
> released the dynamic memory.

Yes, I thought of that solution. I discarded it though, as it seemed to me
that it would increase processing time considerably. Does it still increase
processing time when you have the static pointer pointed to the object to
prevent its release? 



Terry Therneau-2 wrote
> This was written before .Call was available.  It works, but I agree with
> Bill Dunlap that 
> you should use
> .Call.
> 
> Terry T.

I guess I should start reading up on .Call. 

If there are other ideas, I will gladly hear them.

Tee-Jay-Ardie



--
View this message in context: http://r.789695.n4.nabble.com/Calling-an-array-in-a-struct-in-C-to-R-tp4669884p4669972.html
Sent from the R devel mailing list archive at Nabble.com.


From ripley at stats.ox.ac.uk  Thu Jun 20 16:43:29 2013
From: ripley at stats.ox.ac.uk (Prof Brian Ripley)
Date: Thu, 20 Jun 2013 15:43:29 +0100
Subject: [Rd] inconsolata.sty is liable to disappear, texinfo 5.1
Message-ID: <51C31511.1090001@stats.ox.ac.uk>

We use the inconsolata LaTeX package by default for monospaced text in R 
PDF manuals, including package reference manuals (so needed to R CMD check).

You might find inconsolata.sty suddenly disappearing from your system: 
it happened to me with a MiKTeX update earlier this week.  OTOH, TeXLive 
2013 and MacTeX 2013, released on Tuesday, still have it.  But I suspect 
a TeXLive update may change this shortly.

It seems the LaTeX inconsolata package 
(http://www.ctan.org/pkg/inconsolata) since 2013-06-12 no longer 
contains inconsolata.sty, rather zi4.sty.

Options:

- for existing MiKTeX users, do not accept an update to the inconsolata 
package.

- use R-patched or R-devel, both of which have been modified to use 
zi4.sty if inconsolata.sty is not available.

- if your LaTeX installation gets updated and you do not want to update 
R, you can update just Rd.sty from 
https://svn.r-project.org/R/trunk/share/texmf/tex/latex/Rd.sty .  Or you 
could write a file inconsolata.sty as a wrapper for zi4.sty and put it 
in your TEXINPUTS path.


On a similar note, if your system decides to update the GNU texinfo 
package to 5.x and you want to make the R manuals, you need to use 
R-patched or R-devel.   (That includes installing R from the sources.) 
As far as we know, no distro has yet released a version with the 
incompatible texinfo 5.1, but it is in Debian testing and Fedora 19 beta.

-- 
Brian D. Ripley,                  ripley at stats.ox.ac.uk
Professor of Applied Statistics,  http://www.stats.ox.ac.uk/~ripley/
University of Oxford,             Tel:  +44 1865 272861 (self)
1 South Parks Road,                     +44 1865 272866 (PA)
Oxford OX1 3TG, UK                Fax:  +44 1865 272595


From maechler at stat.math.ethz.ch  Fri Jun 21 09:42:11 2013
From: maechler at stat.math.ethz.ch (Martin Maechler)
Date: Fri, 21 Jun 2013 09:42:11 +0200
Subject: [Rd] str and s3 classes
In-Reply-To: <CABdHhvH08vczUYU=gkcg4-BHypugmtP7GvgfNgWt5YPmXK0quA@mail.gmail.com>
References: <CABdHhvH08vczUYU=gkcg4-BHypugmtP7GvgfNgWt5YPmXK0quA@mail.gmail.com>
Message-ID: <20932.979.94491.579003@stat.math.ethz.ch>

>>>>> Hadley Wickham <h.wickham at gmail.com>
>>>>>     on Wed, 19 Jun 2013 15:44:05 -0500 writes:

    > Hi all, Because str uses the generic version of length and
    > names, it's currently very easy to create objects that
    > break str:

    > a <- structure(list(1:5), class = "a") 
    > length.a <- function(x) 2L

    > str(a)

    > b <- structure(list(1:5), class = "b") 
    > names.b <-function(x) character()

    > str(b)


    > These are obvious toy examples, but it is a real problem
    > if you want to create a class that defines names or length
    > in a meaningful way, that is incompatible with the
    > underlying data structure.

Yes indeed, (and "well know").
I'm arguing that in such a situation, i.e.,  where you
explicitly let length() --- or `[` ---  behave incompatibly
with respect to the underlying data structure,
you have to define your own str() S3 method.

I/we have done so ourselves in quite a few cases; 
typically this is a 1- or 2-liner, possibly calling
utils:::str.default(). 
I do actually think we should *un*hide str.default() for such
situations.

In such a case (and not only here), using an S4 class instead of
an S3 is much more natural IMO.

But of course, we can discuss the issue here; that's exactly
what I think R-devel is for.

With regards (also to the Rstudio team),

Martin Maechler,
ETH Zurich


From murdoch.duncan at gmail.com  Fri Jun 21 13:37:15 2013
From: murdoch.duncan at gmail.com (Duncan Murdoch)
Date: Fri, 21 Jun 2013 07:37:15 -0400
Subject: [Rd] str and s3 classes
In-Reply-To: <51C23652.5000204@gmail.com>
References: <CABdHhvH08vczUYU=gkcg4-BHypugmtP7GvgfNgWt5YPmXK0quA@mail.gmail.com>
	<51C23652.5000204@gmail.com>
Message-ID: <51C43AEB.9040909@gmail.com>

Sorry to anyone reading this and being confused by my response:  it was 
meant to be a response to a different message.

Duncan Murdoch

On 13-06-19 6:53 PM, Duncan Murdoch wrote:
> On 13-06-19 4:44 PM, Hadley Wickham wrote:
>> Hi all,
>>
>> Because str uses the generic version of length and names, it's
>> currently very easy to create objects that break str:
>>
>> a <- structure(list(1:5), class = "a")
>> length.a <- function(x) 2L
>>
>> str(a)
>>
>> b <- structure(list(1:5), class = "b")
>> names.b <- function(x) character()
>>
>> str(b)
>>
>>
>> These are obvious toy examples, but it is a real problem if you want
>> to create a class that defines names or length in a meaningful way,
>> that is incompatible with the underlying data structure.
>
> There are a few problems in the package; I'm not sure if all of them
> have any effect, but it works if I fix them all:
>
>    - you have both inst/doc and vignettes directories.  You should only
> have one of those.
>
>    - Your vignette is named simple.rmd.  The list_files_with_type()
> function isn't looking for the .rmd extension; it only recognizes .Rmd.
> That function is used for vignette() and browseVignettes(), but I think
> not for the HTML page you get to from help.start(). It should probably
> be fixed to work with the optional engines, which specify their own
> patterns.  I'll put it on the list of things to fix.
>
> Duncan
>


From edd at debian.org  Fri Jun 21 14:10:18 2013
From: edd at debian.org (Dirk Eddelbuettel)
Date: Fri, 21 Jun 2013 07:10:18 -0500
Subject: [Rd] Calling an array in a struct in C to R
In-Reply-To: <1371732258885-4669972.post@n4.nabble.com>
References: <1371651280258-4669884.post@n4.nabble.com>
	<51C2EE26.3020507@mayo.edu>
	<1371732258885-4669972.post@n4.nabble.com>
Message-ID: <20932.17066.803320.906648@max.nulle.part>


On 20 June 2013 at 05:44, Tee-Jay-Ardie wrote:
| I guess I should start reading up on .Call. 

If you look back into the R-devel archives as of a few months ago, a long
thread there came (fairly strongly and unanimously) to the exact conclusion.

With that allow me to make the case a little more strongly:

   Friends don't let friends use .C for new projects.

The 'Writing R Extensions' manual is not entirely in sync or clear on this,
but will eventually catch up.  At least so I hope.

Dirk

-- 
Dirk Eddelbuettel | edd at debian.org | http://dirk.eddelbuettel.com


From mayer at iiasa.ac.at  Fri Jun 21 14:25:03 2013
From: mayer at iiasa.ac.at (MAYER Hans)
Date: Fri, 21 Jun 2013 14:25:03 +0200
Subject: [Rd] compiling Rcpp with 3.0.1 on Solaris 10
Message-ID: <AEB6E9807EE5E04BA2F4A6CD4CE9DB198EA0FAD943@rhine.iiasa.ac.at>



Hello 

My colleagues asked me to install "R" with module "shiny". 
R version 3.0.1 compiled fine on Solaris 10 and is running well. 

I tried to install "shiny". With the dependencies "Rcpp" should be installed before. But the compile step did fail. See below. 
The initial error message is "Error in dyn.load(file, DLLpath = DLLpath, ...) :" 
Before there are some warning. The final problem is, that the shared library Rcpp.so was not generated.

I am not familiar with R but I? could manage to compile a lot of source code on Solaris. Very often it's only a small change in Makefile or source code. 
Is there a way to compile "Rcpp" manually ? 
Or how-to fix this problem. I am sure, it's not a major issue. 

Kind regards
Hans




# R

R version 3.0.1 (2013-05-16) -- "Good Sport"
Copyright (C) 2013 The R Foundation for Statistical Computing
Platform: sparc-sun-solaris2.10 (32-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and 'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or 'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> install.packages('Rcpp')
--- Please select a CRAN mirror for use in this session --- trying URL 'http://cran.rstudio.com/src/contrib/Rcpp_0.10.3.tar.gz'
Content type 'application/x-gzip' length 2395986 bytes (2.3 Mb) opened URL ==================================================
downloaded 2.3 Mb

* installing *source* package 'Rcpp' ...
** package 'Rcpp' successfully unpacked and MD5 sums checked
** libs
g++ -I/usr/local/lib/R/include -DNDEBUG -I../inst/include/ 
g++ -I/usr/local/include -I/usr/sfw/include -I/opt/sfw/include??? -fPIC? 
g++ -g -O2? -c Date.cpp -o Date.o
Date.cpp: In member function `void Rcpp::Date::update_tm()':
Date.cpp:108: warning: converting to `time_t' from `double'
Date.cpp: In member function `double Rcpp::Date::mktime00(tm&) const':
Date.cpp:134: warning: converting to `int' from `double'
Date.cpp:137: warning: converting to `int' from `double'
Date.cpp: In function `Rcpp::Date Rcpp::operator+(const Rcpp::Date&, int)':
Date.cpp:164: warning: converting to `time_t' from `double'
Date.cpp: In function `int Rcpp::operator-(const Rcpp::Date&, const Rcpp::Date&)':
Date.cpp:170: warning: converting to `int' from `double'
Date.cpp: In function `tm* Rcpp::timesub(const time_t*, long int, const Rcpp::state*, tm*)':
Date.cpp:1523: warning: converting to `long int' from `double'
g++ -I/usr/local/lib/R/include -DNDEBUG -I../inst/include/ 
g++ -I/usr/local/include -I/usr/sfw/include -I/opt/sfw/include??? -fPIC? 
g++ -g -O2? -c Module.cpp -o Module.o
gcc -std=gnu99 -I/usr/local/lib/R/include -DNDEBUG -I../inst/include/ -I/usr/local/include -I/usr/sfw/include -I/opt/sfw/include??? -fPIC? -g -O2? -c Rcpp_init.c -o Rcpp_init.o
g++ -I/usr/local/lib/R/include -DNDEBUG -I../inst/include/ 
g++ -I/usr/local/include -I/usr/sfw/include -I/opt/sfw/include??? -fPIC? 
g++ -g -O2? -c Timer.cpp -o Timer.o -I/usr/local/lib/R/include -DNDEBUG 
g++ -I../inst/include/ -I/usr/local/include -I/usr/sfw/include 
g++ -I/opt/sfw/include??? -fPIC? -g -O2? -c api.cpp -o api.o 
g++ -I/usr/local/lib/R/include -DNDEBUG -I../inst/include/ 
g++ -I/usr/local/include -I/usr/sfw/include -I/opt/sfw/include??? -fPIC? 
g++ -g -O2? -c attributes.cpp -o attributes.o
attributes.cpp: In member function `std::vector<Rcpp::attributes::Param, std::allocator<Rcpp::attributes::Param> > Rcpp::attributes::SourceFileAttributesParser::parseParameters(const std::string&)':
attributes.cpp:986: warning: converting of negative value `-0x00000000000000001' to `size_t'
g++ -I/usr/local/lib/R/include -DNDEBUG -I../inst/include/ 
g++ -I/usr/local/include -I/usr/sfw/include -I/opt/sfw/include??? -fPIC? 
g++ -g -O2? -c barrier.cpp -o barrier.o -I/usr/local/lib/R/include 
g++ -DNDEBUG -I../inst/include/ -I/usr/local/include -I/usr/sfw/include 
g++ -I/opt/sfw/include??? -fPIC? -g -O2? -c exceptions.cpp -o 
g++ exceptions.o -shared -L/usr/local/lib -L/usr/sfw/lib -L/opt/sfw/lib 
g++ -L/opt/solarisstudio12.3/lib -L/opt/solarisstudio12.3/prod/lib -o 
g++ Rcpp.so Date.o Module.o Rcpp_init.o Timer.o api.o attributes.o 
g++ barrier.o exceptions.o -o libRcpp.so Date.o Module.o Rcpp_init.o 
g++ Timer.o api.o attributes.o barrier.o exceptions.o -shared
ar qc libRcpp.a Date.o Module.o Rcpp_init.o Timer.o api.o attributes.o barrier.o exceptions.o cp libRcpp.so ../inst/lib cp libRcpp.a ../inst/lib rm libRcpp.so libRcpp.a installing to /usr/local/lib/R/library/Rcpp/libs
** R
** inst
** preparing package for lazy loading
** help
*** installing help indices
** building package indices
** installing vignettes
?? 'Rcpp-FAQ.Rnw'
?? 'Rcpp-attributes.Rnw'
?? 'Rcpp-extending.Rnw'
?? 'Rcpp-introduction.Rnw'
?? 'Rcpp-modules.Rnw'
?? 'Rcpp-package.Rnw'
?? 'Rcpp-quickref.Rnw'
?? 'Rcpp-sugar.Rnw'
?? 'Rcpp-unitTests.Rnw'
** testing if installed package can be loaded Error in dyn.load(file, DLLpath = DLLpath, ...) :
? unable to load shared object '/usr/local/lib/R/library/Rcpp/libs/Rcpp.so':
? ld.so.1: R: fatal: relocation error: file /usr/local/lib/R/library/Rcpp/libs/Rcpp.so: symbol backtrace: referenced symbol not found
Error: loading failed
Execution halted
ERROR: loading failed
* removing '/usr/local/lib/R/library/Rcpp'

The downloaded source packages are in
??????? '/tmp/RtmpfijlH9/downloaded_packages'
Updating HTML index of packages in '.Library'
Making 'packages.html' ... done
Warning message:
In install.packages("Rcpp") :
? installation of package 'Rcpp' had non-zero exit status
>

-- 


From h.wickham at gmail.com  Fri Jun 21 15:30:14 2013
From: h.wickham at gmail.com (Hadley Wickham)
Date: Fri, 21 Jun 2013 08:30:14 -0500
Subject: [Rd] str and s3 classes
In-Reply-To: <20932.979.94491.579003@stat.math.ethz.ch>
References: <CABdHhvH08vczUYU=gkcg4-BHypugmtP7GvgfNgWt5YPmXK0quA@mail.gmail.com>
	<20932.979.94491.579003@stat.math.ethz.ch>
Message-ID: <CABdHhvHEGUO=K2aC-BzTZwzH1ro4_MKBj-=iZ+QqST36_f4ObA@mail.gmail.com>

>     > These are obvious toy examples, but it is a real problem
>     > if you want to create a class that defines names or length
>     > in a meaningful way, that is incompatible with the
>     > underlying data structure.
>
> Yes indeed, (and "well know").
> I'm arguing that in such a situation, i.e.,  where you
> explicitly let length() --- or `[` ---  behave incompatibly
> with respect to the underlying data structure,
> you have to define your own str() S3 method.
>
> I/we have done so ourselves in quite a few cases;
> typically this is a 1- or 2-liner, possibly calling
> utils:::str.default().
> I do actually think we should *un*hide str.default() for such
> situations.

That would be useful!

> In such a case (and not only here), using an S4 class instead of
> an S3 is much more natural IMO.

Be that as it may, it would still be nice for str to work with S3
objects with potentially incorrect length and names methods - str is
particularly useful when debugging.  Part of the problem is I don't
how to force internally dispatched generics to use the default case -
if the generic uses regular dispatch you can always use
generic.default() (or similar), but I don't think it's possible to do
the same for an internal generic (without copying the object, which is
obviously undesirable)?

Hadley

--
Chief Scientist, RStudio
http://had.co.nz/


From romain at r-enthusiasts.com  Sat Jun 22 12:18:50 2013
From: romain at r-enthusiasts.com (romain at r-enthusiasts.com)
Date: Sat, 22 Jun 2013 12:18:50 +0200
Subject: [Rd] compiling Rcpp with 3.0.1 on Solaris 10
In-Reply-To: <AEB6E9807EE5E04BA2F4A6CD4CE9DB198EA0FAD943@rhine.iiasa.ac.at>
References: <AEB6E9807EE5E04BA2F4A6CD4CE9DB198EA0FAD943@rhine.iiasa.ac.at>
Message-ID: <d232444cd2664c0069db5079af4067d3@r-enthusiasts.com>

Hello,

Rcpp has its own mailing list (Rcpp-devel, see 
http://lists.r-forge.r-project.org/mailman/listinfo/rcpp-devel).

We lack man power for solaris, and typically we realize there are 
issues when it is too late.
If you can help, that would be huge help. To compile Rcpp, you can do:

$ svn checkout svn://svn.r-forge.r-project.org/svnroot/rcpp/pkg/Rcpp
$ R CMD INSTALL Rcpp

or

$ R CMD build Rcpp
$ R CMD INSTALL Rcpp_*.tar.gz

If you can suggest us a few fixes related to your findings, then we can 
attempt to fix them and get a better solaris support. I already see a 
few items below that are worth looking at.

Best regards,

Romain

Le 2013-06-21 14:25, MAYER Hans a ?crit?:
> Hello
>
> My colleagues asked me to install "R" with module "shiny".
> R version 3.0.1 compiled fine on Solaris 10 and is running well.
>
> I tried to install "shiny". With the dependencies "Rcpp" should be
> installed before. But the compile step did fail. See below.
> The initial error message is "Error in dyn.load(file, DLLpath =
> DLLpath, ...) :"
> Before there are some warning. The final problem is, that the shared
> library Rcpp.so was not generated.
>
> I am not familiar with R but I? could manage to compile a lot of
> source code on Solaris. Very often it's only a small change in
> Makefile or source code.
> Is there a way to compile "Rcpp" manually ?
> Or how-to fix this problem. I am sure, it's not a major issue.
>
> Kind regards
> Hans
>
>
>
>
> # R
>
> R version 3.0.1 (2013-05-16) -- "Good Sport"
> Copyright (C) 2013 The R Foundation for Statistical Computing
> Platform: sparc-sun-solaris2.10 (32-bit)
>
> R is free software and comes with ABSOLUTELY NO WARRANTY.
> You are welcome to redistribute it under certain conditions.
> Type 'license()' or 'licence()' for distribution details.
>
> R is a collaborative project with many contributors.
> Type 'contributors()' for more information and 'citation()' on how to
> cite R or R packages in publications.
>
> Type 'demo()' for some demos, 'help()' for on-line help, or
> 'help.start()' for an HTML browser interface to help.
> Type 'q()' to quit R.
>
>> install.packages('Rcpp')
> --- Please select a CRAN mirror for use in this session --- trying
> URL 'http://cran.rstudio.com/src/contrib/Rcpp_0.10.3.tar.gz'
> Content type 'application/x-gzip' length 2395986 bytes (2.3 Mb)
> opened URL ==================================================
> downloaded 2.3 Mb
>
> * installing *source* package 'Rcpp' ...
> ** package 'Rcpp' successfully unpacked and MD5 sums checked
> ** libs
> g++ -I/usr/local/lib/R/include -DNDEBUG -I../inst/include/
> g++ -I/usr/local/include -I/usr/sfw/include -I/opt/sfw/include??? 
> -fPIC?
> g++ -g -O2? -c Date.cpp -o Date.o
> Date.cpp: In member function `void Rcpp::Date::update_tm()':
> Date.cpp:108: warning: converting to `time_t' from `double'
> Date.cpp: In member function `double Rcpp::Date::mktime00(tm&) 
> const':
> Date.cpp:134: warning: converting to `int' from `double'
> Date.cpp:137: warning: converting to `int' from `double'
> Date.cpp: In function `Rcpp::Date Rcpp::operator+(const Rcpp::Date&, 
> int)':
> Date.cpp:164: warning: converting to `time_t' from `double'
> Date.cpp: In function `int Rcpp::operator-(const Rcpp::Date&, const
> Rcpp::Date&)':
> Date.cpp:170: warning: converting to `int' from `double'
> Date.cpp: In function `tm* Rcpp::timesub(const time_t*, long int,
> const Rcpp::state*, tm*)':
> Date.cpp:1523: warning: converting to `long int' from `double'
> g++ -I/usr/local/lib/R/include -DNDEBUG -I../inst/include/
> g++ -I/usr/local/include -I/usr/sfw/include -I/opt/sfw/include??? 
> -fPIC?
> g++ -g -O2? -c Module.cpp -o Module.o
> gcc -std=gnu99 -I/usr/local/lib/R/include -DNDEBUG -I../inst/include/
> -I/usr/local/include -I/usr/sfw/include -I/opt/sfw/include??? -fPIC?
> -g -O2? -c Rcpp_init.c -o Rcpp_init.o
> g++ -I/usr/local/lib/R/include -DNDEBUG -I../inst/include/
> g++ -I/usr/local/include -I/usr/sfw/include -I/opt/sfw/include??? 
> -fPIC?
> g++ -g -O2? -c Timer.cpp -o Timer.o -I/usr/local/lib/R/include 
> -DNDEBUG
> g++ -I../inst/include/ -I/usr/local/include -I/usr/sfw/include
> g++ -I/opt/sfw/include??? -fPIC? -g -O2? -c api.cpp -o api.o
> g++ -I/usr/local/lib/R/include -DNDEBUG -I../inst/include/
> g++ -I/usr/local/include -I/usr/sfw/include -I/opt/sfw/include??? 
> -fPIC?
> g++ -g -O2? -c attributes.cpp -o attributes.o
> attributes.cpp: In member function
> `std::vector<Rcpp::attributes::Param,
> std::allocator<Rcpp::attributes::Param> >
> Rcpp::attributes::SourceFileAttributesParser::parseParameters(const
> std::string&)':
> attributes.cpp:986: warning: converting of negative value
> `-0x00000000000000001' to `size_t'
> g++ -I/usr/local/lib/R/include -DNDEBUG -I../inst/include/
> g++ -I/usr/local/include -I/usr/sfw/include -I/opt/sfw/include??? 
> -fPIC?
> g++ -g -O2? -c barrier.cpp -o barrier.o -I/usr/local/lib/R/include
> g++ -DNDEBUG -I../inst/include/ -I/usr/local/include 
> -I/usr/sfw/include
> g++ -I/opt/sfw/include??? -fPIC? -g -O2? -c exceptions.cpp -o
> g++ exceptions.o -shared -L/usr/local/lib -L/usr/sfw/lib 
> -L/opt/sfw/lib
> g++ -L/opt/solarisstudio12.3/lib -L/opt/solarisstudio12.3/prod/lib -o
> g++ Rcpp.so Date.o Module.o Rcpp_init.o Timer.o api.o attributes.o
> g++ barrier.o exceptions.o -o libRcpp.so Date.o Module.o Rcpp_init.o
> g++ Timer.o api.o attributes.o barrier.o exceptions.o -shared
> ar qc libRcpp.a Date.o Module.o Rcpp_init.o Timer.o api.o
> attributes.o barrier.o exceptions.o cp libRcpp.so ../inst/lib cp
> libRcpp.a ../inst/lib rm libRcpp.so libRcpp.a installing to
> /usr/local/lib/R/library/Rcpp/libs
> ** R
> ** inst
> ** preparing package for lazy loading
> ** help
> *** installing help indices
> ** building package indices
> ** installing vignettes
> ?? 'Rcpp-FAQ.Rnw'
> ?? 'Rcpp-attributes.Rnw'
> ?? 'Rcpp-extending.Rnw'
> ?? 'Rcpp-introduction.Rnw'
> ?? 'Rcpp-modules.Rnw'
> ?? 'Rcpp-package.Rnw'
> ?? 'Rcpp-quickref.Rnw'
> ?? 'Rcpp-sugar.Rnw'
> ?? 'Rcpp-unitTests.Rnw'
> ** testing if installed package can be loaded Error in dyn.load(file,
> DLLpath = DLLpath, ...) :
> ? unable to load shared object 
> '/usr/local/lib/R/library/Rcpp/libs/Rcpp.so':
> ? ld.so.1: R: fatal: relocation error: file
> /usr/local/lib/R/library/Rcpp/libs/Rcpp.so: symbol backtrace:
> referenced symbol not found
> Error: loading failed
> Execution halted
> ERROR: loading failed
> * removing '/usr/local/lib/R/library/Rcpp'
>
> The downloaded source packages are in
> ??????? '/tmp/RtmpfijlH9/downloaded_packages'
> Updating HTML index of packages in '.Library'
> Making 'packages.html' ... done
> Warning message:
> In install.packages("Rcpp") :
> ? installation of package 'Rcpp' had non-zero exit status
>>


From radford at cs.toronto.edu  Sat Jun 22 20:34:56 2013
From: radford at cs.toronto.edu (Radford Neal)
Date: Sat, 22 Jun 2013 14:34:56 -0400
Subject: [Rd] Announcing pqR - a faster version of R
Message-ID: <20130622183456.GA17015@cs.toronto.edu>

I have released a new, faster, version of R, which I call pqR (for
"pretty quick" R), based on R-2.15.0.  Among many other improvements,
pqR supports automatic use of multiple cores to perform numerical
computations in parallel with other numerical computations, and with
the interpretive thread.  It also implements a true reference counting
scheme to reduce the amount of unnecessary duplication of objects.
There are also substantial speed ups in general interpretive overhead,
and in particular operations.

Readers of r-devel can try out pqR by downloading a source tarball
from radfordneal.github.io/pqR (only tested on Linux/Unix so far).
The source repository is github.com/radfordneal/pqR - look in the MODS
file to see how the changes from R-2.15.0 are organized.

The R Core Team may wish to look at the list of bugs fixed in pqR, in
the NEWS file, since many of them are present in their current version
of R.

I will be making a series of posts discussing pqR at my blog, which is
at radfordneal.wordpress.com


From mmoers at gmail.com  Sun Jun 23 18:29:58 2013
From: mmoers at gmail.com (Michael Moers)
Date: Sun, 23 Jun 2013 18:29:58 +0200
Subject: [Rd] stats::convolve documentation enhancement
Message-ID: <51C72286.8050405@gmail.com>

An embedded and charset-unspecified text was scrubbed...
Name: not available
URL: <https://stat.ethz.ch/pipermail/r-devel/attachments/20130623/232921bc/attachment.pl>

From karl.forner at gmail.com  Mon Jun 24 16:54:52 2013
From: karl.forner at gmail.com (Karl Forner)
Date: Mon, 24 Jun 2013 16:54:52 +0200
Subject: [Rd] sys.source() does not provide the parsing info to eval()
In-Reply-To: <CAMd4_Aec-fQwUjotF_R-CNX5jkQE40CHx=fVguvBpgnANQ6CLQ@mail.gmail.com>
References: <CAMd4_Aec-fQwUjotF_R-CNX5jkQE40CHx=fVguvBpgnANQ6CLQ@mail.gmail.com>
Message-ID: <CAMd4_Ad1ktFOiEV8FB70nWZcQQynFxc+bEVjrtF3rCAMc8TQNA@mail.gmail.com>

An embedded and charset-unspecified text was scrubbed...
Name: not available
URL: <https://stat.ethz.ch/pipermail/r-devel/attachments/20130624/b655e28c/attachment.pl>

From hpages at fhcrc.org  Mon Jun 24 20:51:56 2013
From: hpages at fhcrc.org (=?ISO-8859-1?Q?Herv=E9_Pag=E8s?=)
Date: Mon, 24 Jun 2013 11:51:56 -0700
Subject: [Rd] stats::convolve documentation enhancement
In-Reply-To: <51C72286.8050405@gmail.com>
References: <51C72286.8050405@gmail.com>
Message-ID: <51C8954C.2050802@fhcrc.org>

Hi Michael,

There are many issues with stats::convolve() that hopefully one day
will be addressed. Full story here:

   https://stat.ethz.ch/pipermail/r-devel/2007-February/044529.html

The user shouldn't have to worry about the lengths of the arguments:
convolve() should take care of doing the zero-padding internally so
it's always fast. That's what the proposed convolve2() does (in
addition to addressing a few other issues).

Cheers,
H.

On 06/23/2013 09:29 AM, Michael Moers wrote:
> Hi,
>
> the function stats::convolve does not mention efficient usage of the
> underlying FFT algorithm, such as
>
> (a) if type="circular", then length(x)=length(y) should have many
> factors (e.g. length(x) = length(y) = 2^n)
> (b) if type="open" or "filter", then length(x)+length(y)-1 should have
> many factors (e.g. length(x)+length(y)-1 = 2^n)
>
> In particular the latter may not be obvious to first time users, who may
> think that stats::convolve is slow, even though it is fast, if applied
> correctly.
>
> Moreover for zero padding, one may apply stats::nextn to (a) length(x)
> or (b)  length(x)+length(y)-1.
>
>
> #Example:
>
> #correct usage:
> x <- rnorm(514289)
> y <- rnorm(10000)
> #length(x) + length(y) - 1 = 2^19
> system.time(convolve(x, y, type="open"))
>
> #   user  system elapsed
> #   1.17    0.02    1.18
>
>
> #incorrect usage:
> x <- rnorm(300000)
> y <- rnorm(10000)
> system.time(convolve(x, y, type = "open"))
>
> #   user  system elapsed
> # 685.31    0.09  691.79
>
>
>
>
> Thanks and Kind regards,
> Michael Moers
>
> 	[[alternative HTML version deleted]]
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>

-- 
Herv? Pag?s

Program in Computational Biology
Division of Public Health Sciences
Fred Hutchinson Cancer Research Center
1100 Fairview Ave. N, M1-B514
P.O. Box 19024
Seattle, WA 98109-1024

E-mail: hpages at fhcrc.org
Phone:  (206) 667-5791
Fax:    (206) 667-1319


From murdoch.duncan at gmail.com  Tue Jun 25 12:26:39 2013
From: murdoch.duncan at gmail.com (Duncan Murdoch)
Date: Tue, 25 Jun 2013 06:26:39 -0400
Subject: [Rd] Announcing pqR - a faster version of R
In-Reply-To: <20130622183456.GA17015@cs.toronto.edu>
References: <20130622183456.GA17015@cs.toronto.edu>
Message-ID: <51C9705F.8000707@gmail.com>

On 13-06-22 2:34 PM, Radford Neal wrote:
> I have released a new, faster, version of R, which I call pqR (for
> "pretty quick" R), based on R-2.15.0.  Among many other improvements,
> pqR supports automatic use of multiple cores to perform numerical
> computations in parallel with other numerical computations, and with
> the interpretive thread.  It also implements a true reference counting
> scheme to reduce the amount of unnecessary duplication of objects.
> There are also substantial speed ups in general interpretive overhead,
> and in particular operations.
>
> Readers of r-devel can try out pqR by downloading a source tarball
> from radfordneal.github.io/pqR (only tested on Linux/Unix so far).
> The source repository is github.com/radfordneal/pqR - look in the MODS
> file to see how the changes from R-2.15.0 are organized.
>
> The R Core Team may wish to look at the list of bugs fixed in pqR, in
> the NEWS file, since many of them are present in their current version
> of R.
>
> I will be making a series of posts discussing pqR at my blog, which is
> at radfordneal.wordpress.com
>

Hi Radford.

This is just a public note to say that pqR looks really good; we (R 
core) are hoping to work with you to incorporate your improvements into 
base R.

I've already started working on the list of R bugs you report in your 
NEWS file.  I hope we can talk privately to clarify some of the entries.

Duncan Murdoch


From Rainer at krugs.de  Tue Jun 25 13:04:06 2013
From: Rainer at krugs.de (Rainer M Krug)
Date: Tue, 25 Jun 2013 13:04:06 +0200
Subject: [Rd] Perplexed with environment
Message-ID: <m2r4fq8na1.fsf@krugs.de>

Hi

I migrated from Linux to Mac, but I don't this has anything to do with
it, but I am not sure.

I am writing a small logger package, in which I have a file 

aaa.R:
,----
|  .logData <- new.env()
|   assign("loggingThreshold", 10, envir = .logData)
|   assign("logToFile", FALSE, envir = .logData)
|   assign("logFileName", NULL, envir = .logData)
| 
|   assign("logToConsole", TRUE, envir = .logData)
|   ##
|   assign("logHeaderLevel", 0, envir = .logData)
|   assign("logHeader", "", envir = .logData)
|   assign("logHeaderClock", "", envir = .logData)
|   assign("timeFormat", "", envir = .logData)
`----
to initialize some logging parameter.
 
When I load my package, everything looks fine, only that the environment
logger:::.logData is (nearly) empty:

,----
| > library(logger)
| > ls(envir=logger:::.logData, all.names=TRUE)
| [1] ".logHeader"      ".logHeaderClock" ".logHeaderLevel"
`----

I assume I am doing something really basic wrong?

A copy of the package is available at:

https://www.dropbox.com/s/hv6abepcczrljum/logger_0.0-1.tar.gz

Thanks,

Rainer

PS: I am planning to making it available when it is working (again)

-- 
Rainer M. Krug

email: RMKrug<at>gmail<dot>com
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 486 bytes
Desc: not available
URL: <https://stat.ethz.ch/pipermail/r-devel/attachments/20130625/30e544b4/attachment.bin>

From charlie at stat.umn.edu  Tue Jun 25 14:56:36 2013
From: charlie at stat.umn.edu (Charles Geyer)
Date: Tue, 25 Jun 2013 07:56:36 -0500
Subject: [Rd] makefile in inst/doc
Message-ID: <CAKctRd2HszwfQwd65wHjSEpXMJSxE0UbPxM8MfgRrCx5qnWh4w@mail.gmail.com>

An embedded and charset-unspecified text was scrubbed...
Name: not available
URL: <https://stat.ethz.ch/pipermail/r-devel/attachments/20130625/8d95a3ee/attachment.pl>

From ripley at stats.ox.ac.uk  Tue Jun 25 18:12:40 2013
From: ripley at stats.ox.ac.uk (Prof Brian Ripley)
Date: Tue, 25 Jun 2013 17:12:40 +0100
Subject: [Rd] [R] How can C++ read the R object written into socket with
 saveRDS or save
In-Reply-To: <OF396F33FA.8A573204-ON48257B95.0055E30F-48257B95.00573B1B@cn.ibm.com>
References: <OF396F33FA.8A573204-ON48257B95.0055E30F-48257B95.00573B1B@cn.ibm.com>
Message-ID: <51C9C178.6000903@stats.ox.ac.uk>

On 25/06/2013 16:52, Rong lI Li wrote:
>
> Hi, all,
>
> Recently, I met one issue when using socket between R & C++ to transmit R
> object. Would you pls help give me some suggestions? Many thanks!

R-help was really the wrong list: see the posting guide. And multiple 
posting is really discouraged.

But see package 'parallel' which has lots of examples of doing this.

> [Background]:
> I create a socket connection between R & C++ binary first, and then, want
> to use saveRDS() or save() in R to save the object into connection
> directly. So that the C++ binary can read the object, and send it to
> another remote R.
>
> [What I did so far]:
> 1. I used socketConnection in R and listen/accept in C++, to establish one
> blocking socket.
> 2. I used saveRDS to save the R object into socket directly
> 3. I want to use "recv()" in C++ to receive the R object.
>
> [Issues I met]:
> I found actually, the saveRDS writes the R object with XDR format. I could

It may do ... depending how you call it.  You may prefer to serialize() 
to a raw vector whose size you can find, and transmit that.

> not know how many bytes are sent into socket, when calling saveRDS to save
> R object. So in the C++ binary, I could not know exactly how many bytes I
> should receive from the socket. It is not safe for me, to always use a
> pre-defined buffer size to read from the socket.
>
> Any suggestions for this? Are there safe way for me to read the R object
> from the socket?
> I do not do any conversion with the received data, and only need to
> transfer them into a remote R to do the function execution.
>
> =====================
>
> Rong "Jessica", Li (????)
> Platform Symphony TET, CSTL, IBM Systems &Technology Group, Development
> Tel:86-10-82451010  Email:ronglli at cn.ibm.com
> 	[[alternative HTML version deleted]]

You were asked not to send HTML.

> ______________________________________________
> R-help at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-help
> PLEASE do read the posting guide http://www.R-project.org/posting-guide.html
> and provide commented, minimal, self-contained, reproducible code.
>


-- 
Brian D. Ripley,                  ripley at stats.ox.ac.uk
Professor of Applied Statistics,  http://www.stats.ox.ac.uk/~ripley/
University of Oxford,             Tel:  +44 1865 272861 (self)
1 South Parks Road,                     +44 1865 272866 (PA)
Oxford OX1 3TG, UK                Fax:  +44 1865 272595


From edd at debian.org  Tue Jun 25 18:36:44 2013
From: edd at debian.org (Dirk Eddelbuettel)
Date: Tue, 25 Jun 2013 11:36:44 -0500
Subject: [Rd] [R] How can C++ read the R object written into socket with
 saveRDS or save
In-Reply-To: <51C9C178.6000903@stats.ox.ac.uk>
References: <OF396F33FA.8A573204-ON48257B95.0055E30F-48257B95.00573B1B@cn.ibm.com>
	<51C9C178.6000903@stats.ox.ac.uk>
Message-ID: <20937.50972.767268.501415@max.nulle.part>


On 25 June 2013 at 17:12, Prof Brian Ripley wrote:
| On 25/06/2013 16:52, Rong lI Li wrote:
| > I found actually, the saveRDS writes the R object with XDR format. I could
| 
| It may do ... depending how you call it.  You may prefer to serialize() 
| to a raw vector whose size you can find, and transmit that.

I am not aware of a (simple) library parsing this outside of an R context
(and within the R context, I'd always start with Rserve from RForge.net).

But you could look into general serialization / translation libraries such as
Google Protocol Buffers (see https://developers.google.com/protocol-buffers/)
which can also translate into C++, Java, Python plus a host of
user-contributed bindings. 

For R, you will find a package RProtoBuf on CRAN.  There are other, related
libraries but I have worked only with Protocol Buffers.

Dirk

-- 
Dirk Eddelbuettel | edd at debian.org | http://dirk.eddelbuettel.com


From wdunlap at tibco.com  Tue Jun 25 21:01:29 2013
From: wdunlap at tibco.com (William Dunlap)
Date: Tue, 25 Jun 2013 19:01:29 +0000
Subject: [Rd] F statistic in add1.lm vs add1.glm
Message-ID: <E66794E69CFDE04D9A70842786030B931C3072F8@PA-MBX01.na.tibco.com>

Should the F statistic be the same when using add1() on models created by lm and glm(family=gaussian)?
They are in the single-degree-of-freedom case but not in the multiple-degree-of-freedom case.
MASS:addterm shows the same discrepancy.  It looks like the deviance (==residual sum of squares) gets
divided by the number of degrees of freedom for the term twice in add1.glm.  Using anova() on the output
of lm and glm(family=gaussian) gives the save F statistic as add1.lm gives.

> # factor(carb) consumes 5 degrees of freedom, am 1, compare their F values.
> fit <- lm(mpg ~ hp, data=mtcars) ; add1(fit, ~ hp + factor(carb) + am, test="F")
Single term additions

Model:
mpg ~ hp
             Df Sum of Sq    RSS    AIC F value   Pr(>F)    
<none>                    447.67 88.427                     
factor(carb)  5    103.54 344.13 90.009  1.5044   0.2241    
am            1    202.24 245.44 71.194 23.8952 3.46e-05 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1
> fit <- glm(mpg ~ hp, data=mtcars) ; add1(fit, ~ hp + factor(carb) + am, test="F")
Single term additions

Model:
mpg ~ hp
             Df Deviance    AIC F value   Pr(>F)    
<none>            447.67 181.24                     
factor(carb)  5   344.13 182.82  0.3009   0.9077    
am            1   245.44 164.01 23.8952 3.46e-05 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Bill Dunlap
Spotfire, TIBCO Software
wdunlap tibco.com


From mmoers at gmail.com  Tue Jun 25 21:07:36 2013
From: mmoers at gmail.com (Michael Moers)
Date: Tue, 25 Jun 2013 21:07:36 +0200
Subject: [Rd] stats::convolve documentation enhancement
In-Reply-To: <51C8954C.2050802@fhcrc.org>
References: <51C72286.8050405@gmail.com> <51C8954C.2050802@fhcrc.org>
Message-ID: <51C9EA78.10707@gmail.com>

Hi Herv?,

thank you for the link, I like the convolve2() function, it is 
definitely a more user-friendly version of convolve().

I still believe that convolve() would be worth improving for the R stats 
package, since it is pretty important in signal processing. I think it 
would be great to have a better convolution function.

Thanks and regards,
Michael

Am 24.06.2013 20:51, schrieb Herv? Pag?s:
> Hi Michael,
>
> There are many issues with stats::convolve() that hopefully one day
> will be addressed. Full story here:
>
>   https://stat.ethz.ch/pipermail/r-devel/2007-February/044529.html
>
> The user shouldn't have to worry about the lengths of the arguments:
> convolve() should take care of doing the zero-padding internally so
> it's always fast. That's what the proposed convolve2() does (in
> addition to addressing a few other issues).
>
> Cheers,
> H.
>
> On 06/23/2013 09:29 AM, Michael Moers wrote:
>> Hi,
>>
>> the function stats::convolve does not mention efficient usage of the
>> underlying FFT algorithm, such as
>>
>> (a) if type="circular", then length(x)=length(y) should have many
>> factors (e.g. length(x) = length(y) = 2^n)
>> (b) if type="open" or "filter", then length(x)+length(y)-1 should have
>> many factors (e.g. length(x)+length(y)-1 = 2^n)
>>
>> In particular the latter may not be obvious to first time users, who may
>> think that stats::convolve is slow, even though it is fast, if applied
>> correctly.
>>
>> Moreover for zero padding, one may apply stats::nextn to (a) length(x)
>> or (b)  length(x)+length(y)-1.
>>
>>
>> #Example:
>>
>> #correct usage:
>> x <- rnorm(514289)
>> y <- rnorm(10000)
>> #length(x) + length(y) - 1 = 2^19
>> system.time(convolve(x, y, type="open"))
>>
>> #   user  system elapsed
>> #   1.17    0.02    1.18
>>
>>
>> #incorrect usage:
>> x <- rnorm(300000)
>> y <- rnorm(10000)
>> system.time(convolve(x, y, type = "open"))
>>
>> #   user  system elapsed
>> # 685.31    0.09  691.79
>>
>>
>>
>>
>> Thanks and Kind regards,
>> Michael Moers
>>
>>     [[alternative HTML version deleted]]
>>
>> ______________________________________________
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>
>


From smckinney at bccrc.ca  Tue Jun 25 21:23:22 2013
From: smckinney at bccrc.ca (Steven McKinney)
Date: Tue, 25 Jun 2013 12:23:22 -0700
Subject: [Rd] F statistic in add1.lm vs add1.glm
In-Reply-To: <E66794E69CFDE04D9A70842786030B931C3072F8@PA-MBX01.na.tibco.com>
References: <E66794E69CFDE04D9A70842786030B931C3072F8@PA-MBX01.na.tibco.com>
Message-ID: <DCE81E14EB74504B971DAD4D2DB0356B0CB926DF21@crcmail4.BCCRC.CA>



> stats:::add1.glm
function (object, scope, scale = 0, test = c("none", "Rao", "LRT", 
    "Chisq", "F"), x = NULL, k = 2, ...) 
{
    Fstat <- function(table, rdf) {
        dev <- table$Deviance
        df <- table$Df
        diff <- pmax(0, (dev[1L] - dev)/df)
        Fs <- (diff/df)/(dev/(rdf - df))

Is this where the double division is happening?
diff has df in the denominator, then Fs assignment sees
diff divided by df again.  if df is 1, the double division
will go unnoticed.



Steven McKinney

Statistician
Molecular Oncology and Breast Cancer Program
British Columbia Cancer Research Centre


________________________________________
From: r-devel-bounces at r-project.org [r-devel-bounces at r-project.org] On Behalf Of William Dunlap [wdunlap at tibco.com]
Sent: June 25, 2013 12:01 PM
To: r-devel at r-project.org
Subject: [Rd] F statistic in add1.lm vs add1.glm

Should the F statistic be the same when using add1() on models created by lm and glm(family=gaussian)?
They are in the single-degree-of-freedom case but not in the multiple-degree-of-freedom case.
MASS:addterm shows the same discrepancy.  It looks like the deviance (==residual sum of squares) gets
divided by the number of degrees of freedom for the term twice in add1.glm.  Using anova() on the output
of lm and glm(family=gaussian) gives the save F statistic as add1.lm gives.

> # factor(carb) consumes 5 degrees of freedom, am 1, compare their F values.
> fit <- lm(mpg ~ hp, data=mtcars) ; add1(fit, ~ hp + factor(carb) + am, test="F")
Single term additions

Model:
mpg ~ hp
             Df Sum of Sq    RSS    AIC F value   Pr(>F)
<none>                    447.67 88.427
factor(carb)  5    103.54 344.13 90.009  1.5044   0.2241
am            1    202.24 245.44 71.194 23.8952 3.46e-05 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1
> fit <- glm(mpg ~ hp, data=mtcars) ; add1(fit, ~ hp + factor(carb) + am, test="F")
Single term additions

Model:
mpg ~ hp
             Df Deviance    AIC F value   Pr(>F)
<none>            447.67 181.24
factor(carb)  5   344.13 182.82  0.3009   0.9077
am            1   245.44 164.01 23.8952 3.46e-05 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Bill Dunlap
Spotfire, TIBCO Software
wdunlap tibco.com

______________________________________________
R-devel at r-project.org mailing list
https://stat.ethz.ch/mailman/listinfo/r-devel


From hpages at fhcrc.org  Wed Jun 26 00:04:13 2013
From: hpages at fhcrc.org (=?ISO-8859-1?Q?Herv=E9_Pag=E8s?=)
Date: Tue, 25 Jun 2013 15:04:13 -0700
Subject: [Rd] stats::convolve documentation enhancement
In-Reply-To: <51C9EA78.10707@gmail.com>
References: <51C72286.8050405@gmail.com> <51C8954C.2050802@fhcrc.org>
	<51C9EA78.10707@gmail.com>
Message-ID: <51CA13DD.5070300@fhcrc.org>

Hi Michael,

On 06/25/2013 12:07 PM, Michael Moers wrote:
> Hi Herv?,
>
> thank you for the link, I like the convolve2() function, it is
> definitely a more user-friendly version of convolve().
>
> I still believe that convolve() would be worth improving for the R stats
> package, since it is pretty important in signal processing. I think it
> would be great to have a better convolution function.

I totally agree with that.

Cheers,
H.

>
> Thanks and regards,
> Michael
>
> Am 24.06.2013 20:51, schrieb Herv? Pag?s:
>> Hi Michael,
>>
>> There are many issues with stats::convolve() that hopefully one day
>> will be addressed. Full story here:
>>
>>   https://stat.ethz.ch/pipermail/r-devel/2007-February/044529.html
>>
>> The user shouldn't have to worry about the lengths of the arguments:
>> convolve() should take care of doing the zero-padding internally so
>> it's always fast. That's what the proposed convolve2() does (in
>> addition to addressing a few other issues).
>>
>> Cheers,
>> H.
>>
>> On 06/23/2013 09:29 AM, Michael Moers wrote:
>>> Hi,
>>>
>>> the function stats::convolve does not mention efficient usage of the
>>> underlying FFT algorithm, such as
>>>
>>> (a) if type="circular", then length(x)=length(y) should have many
>>> factors (e.g. length(x) = length(y) = 2^n)
>>> (b) if type="open" or "filter", then length(x)+length(y)-1 should have
>>> many factors (e.g. length(x)+length(y)-1 = 2^n)
>>>
>>> In particular the latter may not be obvious to first time users, who may
>>> think that stats::convolve is slow, even though it is fast, if applied
>>> correctly.
>>>
>>> Moreover for zero padding, one may apply stats::nextn to (a) length(x)
>>> or (b)  length(x)+length(y)-1.
>>>
>>>
>>> #Example:
>>>
>>> #correct usage:
>>> x <- rnorm(514289)
>>> y <- rnorm(10000)
>>> #length(x) + length(y) - 1 = 2^19
>>> system.time(convolve(x, y, type="open"))
>>>
>>> #   user  system elapsed
>>> #   1.17    0.02    1.18
>>>
>>>
>>> #incorrect usage:
>>> x <- rnorm(300000)
>>> y <- rnorm(10000)
>>> system.time(convolve(x, y, type = "open"))
>>>
>>> #   user  system elapsed
>>> # 685.31    0.09  691.79
>>>
>>>
>>>
>>>
>>> Thanks and Kind regards,
>>> Michael Moers
>>>
>>>     [[alternative HTML version deleted]]
>>>
>>> ______________________________________________
>>> R-devel at r-project.org mailing list
>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>>
>>
>

-- 
Herv? Pag?s

Program in Computational Biology
Division of Public Health Sciences
Fred Hutchinson Cancer Research Center
1100 Fairview Ave. N, M1-B514
P.O. Box 19024
Seattle, WA 98109-1024

E-mail: hpages at fhcrc.org
Phone:  (206) 667-5791
Fax:    (206) 667-1319


From hpages at fhcrc.org  Wed Jun 26 06:48:01 2013
From: hpages at fhcrc.org (=?ISO-8859-1?Q?Herv=E9_Pag=E8s?=)
Date: Tue, 25 Jun 2013 21:48:01 -0700
Subject: [Rd] Perplexed with environment
In-Reply-To: <m2r4fq8na1.fsf@krugs.de>
References: <m2r4fq8na1.fsf@krugs.de>
Message-ID: <51CA7281.2080005@fhcrc.org>

Hi Rainier,

On 06/25/2013 04:04 AM, Rainer M Krug wrote:
> Hi
>
> I migrated from Linux to Mac, but I don't this has anything to do with
> it, but I am not sure.
>
> I am writing a small logger package, in which I have a file
>
> aaa.R:
> ,----
> |  .logData <- new.env()
> |   assign("loggingThreshold", 10, envir = .logData)
> |   assign("logToFile", FALSE, envir = .logData)
> |   assign("logFileName", NULL, envir = .logData)
> |
> |   assign("logToConsole", TRUE, envir = .logData)
> |   ##
> |   assign("logHeaderLevel", 0, envir = .logData)
> |   assign("logHeader", "", envir = .logData)
> |   assign("logHeaderClock", "", envir = .logData)
> |   assign("timeFormat", "", envir = .logData)
> `----
> to initialize some logging parameter.
>
> When I load my package, everything looks fine, only that the environment
> logger:::.logData is (nearly) empty:
>
> ,----
> | > library(logger)
> | > ls(envir=logger:::.logData, all.names=TRUE)
> | [1] ".logHeader"      ".logHeaderClock" ".logHeaderLevel"
> `----
>
> I assume I am doing something really basic wrong?
>
> A copy of the package is available at:
>
> https://www.dropbox.com/s/hv6abepcczrljum/logger_0.0-1.tar.gz

Just to let you know that this link doesn't work for me. When trying to
open in a browser, I get the following message:

                        Nothing Here

     The file you're looking for has been deleted or moved.

Cheers,
H.

>
> Thanks,
>
> Rainer
>
> PS: I am planning to making it available when it is working (again)
>
>
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>

-- 
Herv? Pag?s

Program in Computational Biology
Division of Public Health Sciences
Fred Hutchinson Cancer Research Center
1100 Fairview Ave. N, M1-B514
P.O. Box 19024
Seattle, WA 98109-1024

E-mail: hpages at fhcrc.org
Phone:  (206) 667-5791
Fax:    (206) 667-1319


From johnzhao2835 at gmail.com  Wed Jun 26 10:17:52 2013
From: johnzhao2835 at gmail.com (Ziqiang Zhao)
Date: Wed, 26 Jun 2013 16:17:52 +0800
Subject: [Rd] Save R Objects in C Code
Message-ID: <000301ce7245$a9a92eb0$fcfb8c10$@gmail.com>

An embedded and charset-unspecified text was scrubbed...
Name: not available
URL: <https://stat.ethz.ch/pipermail/r-devel/attachments/20130626/324f6c45/attachment.pl>

From ronglli at cn.ibm.com  Tue Jun 25 17:52:02 2013
From: ronglli at cn.ibm.com (Rong lI Li)
Date: Tue, 25 Jun 2013 23:52:02 +0800
Subject: [Rd] How can C++ read the R object written into socket with saveRDS
	or save
Message-ID: <OF396F33FA.8A573204-ON48257B95.0055E30F-48257B95.00573B1B@cn.ibm.com>

An embedded and charset-unspecified text was scrubbed...
Name: not available
URL: <https://stat.ethz.ch/pipermail/r-devel/attachments/20130625/00022d4d/attachment.pl>

From anwar.ludin at riskcetera.com  Tue Jun 25 23:54:01 2013
From: anwar.ludin at riskcetera.com (Anwar Ludin)
Date: Tue, 25 Jun 2013 23:54:01 +0200
Subject: [Rd] compiling R from source with a catch!
Message-ID: <B43B7D11-3FF9-45A9-BDAC-7EE00AB6980A@riskcetera.com>

I need to rebuild an R interpreter for the Intel Xeon Phi coprocessor which can be considered as an embedded system.

My only option is to use the intel compiler tools and cross compile the interpreter. My first stumbling block is that I don't have a fortran cross compiler and I would like to know if it's possible to build a minimal R system
without the need of a  fortran compiler. 

At the moment I've used the following options with the configure script:

./configure --host=x86_64 --enable-R-static-lib CXX=icpc CC=icc CFLAGS=-mmic CXXFLAGS=-mmic LDFLAGS=-mmic --with-readline=no --without-recommended-packages

icpc and icc are the intel compilers.
-mmic tells the compiler to cross compile for the Intel Xeon Phi.

The configure script stops with the following error:

checking for dummy main to link with Fortran 77 libraries... none
checking for Fortran 77 name-mangling scheme... unknown
configure: WARNING: unknown Fortran name-mangling scheme
checking whether gfortran appends underscores to external names... unknown
configure: error: cannot use Fortran

Do I actually need Fortran in order to build the R interpreter?

Any suggestions on how to move forwards would be greatly appreciated!


From ripley at stats.ox.ac.uk  Wed Jun 26 10:31:34 2013
From: ripley at stats.ox.ac.uk (Prof Brian Ripley)
Date: Wed, 26 Jun 2013 09:31:34 +0100
Subject: [Rd] Save R Objects in C Code
In-Reply-To: <000301ce7245$a9a92eb0$fcfb8c10$@gmail.com>
References: <000301ce7245$a9a92eb0$fcfb8c10$@gmail.com>
Message-ID: <51CAA6E6.6040303@stats.ox.ac.uk>

On 26/06/2013 09:17, Ziqiang Zhao wrote:
> Dear all,
>
>                  How do I save the R objects in C code?
>
>                  In R code, we use save(x,y,file="F.RData") to save x and y
> in "F.RData".
>
>                  But what should I do in C?

Call that R code (using eval).

If you look at the R code for save() you will see that a substantial 
amount of it is interpreted code.

>
> --------------------
>
> Ziqiang Zhao
>
> 2013-06-26
>
>
>
>
> 	[[alternative HTML version deleted]]

Please see the posting guide and what it says about HTML mail.

-- 
Brian D. Ripley,                  ripley at stats.ox.ac.uk
Professor of Applied Statistics,  http://www.stats.ox.ac.uk/~ripley/
University of Oxford,             Tel:  +44 1865 272861 (self)
1 South Parks Road,                     +44 1865 272866 (PA)
Oxford OX1 3TG, UK                Fax:  +44 1865 272595


From ripley at stats.ox.ac.uk  Wed Jun 26 10:47:32 2013
From: ripley at stats.ox.ac.uk (Prof Brian Ripley)
Date: Wed, 26 Jun 2013 09:47:32 +0100
Subject: [Rd] compiling R from source with a catch!
In-Reply-To: <B43B7D11-3FF9-45A9-BDAC-7EE00AB6980A@riskcetera.com>
References: <B43B7D11-3FF9-45A9-BDAC-7EE00AB6980A@riskcetera.com>
Message-ID: <51CAAAA4.2000306@stats.ox.ac.uk>

On 25/06/2013 22:54, Anwar Ludin wrote:
> I need to rebuild an R interpreter for the Intel Xeon Phi coprocessor which can be considered as an embedded system.
>
> My only option is to use the intel compiler tools and cross compile the interpreter. My first stumbling block is that I don't have a fortran cross compiler and I would like to know if it's possible to build a minimal R system
> without the need of a  fortran compiler.

No.  But it is possible to use f2c as a substitute Fortran compiler. 
This was tested just prior to the release of R 3.0.0 to demonstrate that 
R could be built using just 'clang'.

> At the moment I've used the following options with the configure script:
>
> ./configure --host=x86_64 --enable-R-static-lib CXX=icpc CC=icc CFLAGS=-mmic CXXFLAGS=-mmic LDFLAGS=-mmic --with-readline=no --without-recommended-packages
>
> icpc and icc are the intel compilers.
> -mmic tells the compiler to cross compile for the Intel Xeon Phi.
>
> The configure script stops with the following error:
>
> checking for dummy main to link with Fortran 77 libraries... none
> checking for Fortran 77 name-mangling scheme... unknown
> configure: WARNING: unknown Fortran name-mangling scheme
> checking whether gfortran appends underscores to external names... unknown
> configure: error: cannot use Fortran
>
> Do I actually need Fortran in order to build the R interpreter?
>
> Any suggestions on how to move forwards would be greatly appreciated!

Suggestion: study the manual.  To quote the INSTALL file

'The main source of information on installation is the `R Installation
and Administration Manual', an HTML copy of which is available as file
`doc/html/R-admin.html'.  Please read that before installing R.  But
if you are impatient, read on but please refer to the manual to
resolve any problems.'

It supplies some important information if you use f2c.

-- 
Brian D. Ripley,                  ripley at stats.ox.ac.uk
Professor of Applied Statistics,  http://www.stats.ox.ac.uk/~ripley/
University of Oxford,             Tel:  +44 1865 272861 (self)
1 South Parks Road,                     +44 1865 272866 (PA)
Oxford OX1 3TG, UK                Fax:  +44 1865 272595


From kamal.fartiyal84 at gmail.com  Wed Jun 26 11:56:55 2013
From: kamal.fartiyal84 at gmail.com (Kamal)
Date: Wed, 26 Jun 2013 11:56:55 +0200
Subject: [Rd] Error on executing functions from installed package
Message-ID: <CACof4roPo5B9mjw27UswJEuaj1ohrUHSzd7Yc8XXLa9dDf8TwA@mail.gmail.com>

An embedded and charset-unspecified text was scrubbed...
Name: not available
URL: <https://stat.ethz.ch/pipermail/r-devel/attachments/20130626/11d287fa/attachment.pl>

From anwar.ludin at riskcetera.com  Wed Jun 26 12:05:33 2013
From: anwar.ludin at riskcetera.com (Anwar Ludin)
Date: Wed, 26 Jun 2013 12:05:33 +0200
Subject: [Rd] compiling R from source with a catch!
In-Reply-To: <51CAAAA4.2000306@stats.ox.ac.uk>
References: <B43B7D11-3FF9-45A9-BDAC-7EE00AB6980A@riskcetera.com>
	<51CAAAA4.2000306@stats.ox.ac.uk>
Message-ID: <CFC721A6-413A-49B2-A7BD-48CF0F038B53@riskcetera.com>

Professor Ripley,

Thank your for pointing me in the right direction. I will start by reading the manual ;)
From what I can see the least painful way is still to use a fortran compiler, so I will try to get my hands on the intel fortran compiler and cross compile to MIC.

Thanks!

Anwar


On Jun 26, 2013, at 10:47 AM, Prof Brian Ripley <ripley at stats.ox.ac.uk> wrote:

> On 25/06/2013 22:54, Anwar Ludin wrote:
>> I need to rebuild an R interpreter for the Intel Xeon Phi coprocessor which can be considered as an embedded system.
>> 
>> My only option is to use the intel compiler tools and cross compile the interpreter. My first stumbling block is that I don't have a fortran cross compiler and I would like to know if it's possible to build a minimal R system
>> without the need of a  fortran compiler.
> 
> No.  But it is possible to use f2c as a substitute Fortran compiler. This was tested just prior to the release of R 3.0.0 to demonstrate that R could be built using just 'clang'.
> 
>> At the moment I've used the following options with the configure script:
>> 
>> ./configure --host=x86_64 --enable-R-static-lib CXX=icpc CC=icc CFLAGS=-mmic CXXFLAGS=-mmic LDFLAGS=-mmic --with-readline=no --without-recommended-packages
>> 
>> icpc and icc are the intel compilers.
>> -mmic tells the compiler to cross compile for the Intel Xeon Phi.
>> 
>> The configure script stops with the following error:
>> 
>> checking for dummy main to link with Fortran 77 libraries... none
>> checking for Fortran 77 name-mangling scheme... unknown
>> configure: WARNING: unknown Fortran name-mangling scheme
>> checking whether gfortran appends underscores to external names... unknown
>> configure: error: cannot use Fortran
>> 
>> Do I actually need Fortran in order to build the R interpreter?
>> 
>> Any suggestions on how to move forwards would be greatly appreciated!
> 
> Suggestion: study the manual.  To quote the INSTALL file
> 
> 'The main source of information on installation is the `R Installation
> and Administration Manual', an HTML copy of which is available as file
> `doc/html/R-admin.html'.  Please read that before installing R.  But
> if you are impatient, read on but please refer to the manual to
> resolve any problems.'
> 
> It supplies some important information if you use f2c.
> 
> -- 
> Brian D. Ripley,                  ripley at stats.ox.ac.uk
> Professor of Applied Statistics,  http://www.stats.ox.ac.uk/~ripley/
> University of Oxford,             Tel:  +44 1865 272861 (self)
> 1 South Parks Road,                     +44 1865 272866 (PA)
> Oxford OX1 3TG, UK                Fax:  +44 1865 272595


From ripley at stats.ox.ac.uk  Wed Jun 26 14:49:07 2013
From: ripley at stats.ox.ac.uk (Prof Brian Ripley)
Date: Wed, 26 Jun 2013 13:49:07 +0100
Subject: [Rd] Error on executing functions from installed package
In-Reply-To: <CACof4roPo5B9mjw27UswJEuaj1ohrUHSzd7Yc8XXLa9dDf8TwA@mail.gmail.com>
References: <CACof4roPo5B9mjw27UswJEuaj1ohrUHSzd7Yc8XXLa9dDf8TwA@mail.gmail.com>
Message-ID: <51CAE343.4000102@stats.ox.ac.uk>

On 26/06/2013 10:56, Kamal wrote:
> Hi,
>
> I am currently building an R package and I am facing a peculiar problem
> where some of the functions does not work within the package. However, if I
> source the script the function works.

Nothing here is reproducible, so we need to guess.  In particular, you 
give so details of clRes but sapply is called on 'result', an object not 
otherwise mentioned.

My guess is that you are using different functions rbind() in the two 
cases, and that your package forgot to import an S4 generic for rbind. 
Remember that in a package's namespace 'base' is implicitly imported, so 
it takes priority over everything not in the namespace or explicitly 
imported.

But it is equally possible you used different objects.

> For example, in a method for parallelization of analysis on each chromosome
> simultaneously I am receiving error at the following position of the code:
>
> # this profile the information chromosome wise and results in "clRes"
>> clRes = clusterApplyLB(cl, Chrs, profilingChr, GenoRanges = GenoRanges,
> Sample = Sample)
>
>> class(clRes)
> [1] "list"
>
>> clRes
> [[1]]
> S4 Object of class GElist; 14 features
>
> start :  14350 69251 84185 116264 153924
> end :  18349 73250 88184 120263 157923
> chr :  chr20 chr20 chr20 chr20 chr20
> strand :  * * * * *
> binscore : NA
>
>> chrcomb <- sapply(result, function(x) rbind(x))
> Error in rbind(x) : no method for coercing this S4 class to a vector
>
> The above code is part of a function. If I run this code interactively or
> by sourcing the script it runs fine. However, when I execute the function
> from the installed package it gives me the above error. I could not find
> any solution to this. Any insight into the above problem would be highly
> appreciated.
>
>> sessionInfo()
> R version 3.0.0 (2013-04-03)
> Platform: x86_64-unknown-linux-gnu (64-bit)
>
> locale:
> [1] C
>
> attached base packages:
> [1] parallel  stats     graphics  grDevices utils     datasets  methods
> [8] base
>
> other attached packages:
>   [1] BSgenome.Hsapiens.UCSC.hg18_1.3.19 BSgenome_1.28.0
>   [3] methylPipe_0.99.0                  Rsamtools_1.12.3
>   [5] Biostrings_2.28.0                  GenomicRanges_1.12.4
>   [7] IRanges_1.18.1                     GOstats_2.26.0
>   [9] RSQLite_0.11.4                     DBI_0.2-7
> [11] graph_1.38.2                       Category_2.26.0
> [13] AnnotationDbi_1.22.6               Biobase_2.20.0
> [15] BiocGenerics_0.6.0                 snow_0.3-12
>
> loaded via a namespace (and not attached):
>   [1] AnnotationForge_1.2.1 GO.db_2.9.0           GSEABase_1.22.0
>   [4] RBGL_1.36.2           RCurl_1.95-4.1        XML_3.96-1.1
>   [7] annotate_1.38.0       bitops_1.0-5          gdata_2.12.0.2
> [10] genefilter_1.42.0     gplots_2.11.0.1       gtools_2.7.1
> [13] limma_3.16.5          marray_1.38.0         rtracklayer_1.20.2
> [16] splines_3.0.0         stats4_3.0.0          survival_2.37-4
> [19] tools_3.0.0           xtable_1.7-1          zlibbioc_1.6.0
>
> Thanks,
> Kamal
>
> 	[[alternative HTML version deleted]]
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>


-- 
Brian D. Ripley,                  ripley at stats.ox.ac.uk
Professor of Applied Statistics,  http://www.stats.ox.ac.uk/~ripley/
University of Oxford,             Tel:  +44 1865 272861 (self)
1 South Parks Road,                     +44 1865 272866 (PA)
Oxford OX1 3TG, UK                Fax:  +44 1865 272595


From kamal.fartiyal84 at gmail.com  Wed Jun 26 16:29:15 2013
From: kamal.fartiyal84 at gmail.com (Kamal)
Date: Wed, 26 Jun 2013 16:29:15 +0200
Subject: [Rd] Error on executing functions from installed package
In-Reply-To: <51CAE343.4000102@stats.ox.ac.uk>
References: <CACof4roPo5B9mjw27UswJEuaj1ohrUHSzd7Yc8XXLa9dDf8TwA@mail.gmail.com>
	<51CAE343.4000102@stats.ox.ac.uk>
Message-ID: <CACof4rqqCB9DJa7wjBR8w6JB_ruq0cY+NRK_seAcJa+MCJ10kA@mail.gmail.com>

An embedded and charset-unspecified text was scrubbed...
Name: not available
URL: <https://stat.ethz.ch/pipermail/r-devel/attachments/20130626/5578ee66/attachment.pl>

From kamal.fartiyal84 at gmail.com  Wed Jun 26 16:37:04 2013
From: kamal.fartiyal84 at gmail.com (Kamal)
Date: Wed, 26 Jun 2013 16:37:04 +0200
Subject: [Rd] Error on executing functions from installed package
In-Reply-To: <CACof4rqqCB9DJa7wjBR8w6JB_ruq0cY+NRK_seAcJa+MCJ10kA@mail.gmail.com>
References: <CACof4roPo5B9mjw27UswJEuaj1ohrUHSzd7Yc8XXLa9dDf8TwA@mail.gmail.com>
	<51CAE343.4000102@stats.ox.ac.uk>
	<CACof4rqqCB9DJa7wjBR8w6JB_ruq0cY+NRK_seAcJa+MCJ10kA@mail.gmail.com>
Message-ID: <CACof4rpY2zFd1W4B1vzTzH8AuNaSHbSCg+rPcg8TJyycbNzb2g@mail.gmail.com>

An embedded and charset-unspecified text was scrubbed...
Name: not available
URL: <https://stat.ethz.ch/pipermail/r-devel/attachments/20130626/4a639081/attachment.pl>

From simon.urbanek at r-project.org  Thu Jun 27 00:58:37 2013
From: simon.urbanek at r-project.org (Simon Urbanek)
Date: Wed, 26 Jun 2013 18:58:37 -0400
Subject: [Rd] How can C++ read the R object written into socket with
	saveRDS or save
In-Reply-To: <OF396F33FA.8A573204-ON48257B95.0055E30F-48257B95.00573B1B@cn.ibm.com>
References: <OF396F33FA.8A573204-ON48257B95.0055E30F-48257B95.00573B1B@cn.ibm.com>
Message-ID: <8EA205C5-7C93-44DD-B6C2-D776B061E14E@r-project.org>

On Jun 25, 2013, at 11:52 AM, Rong lI Li wrote:

> 
> Hi, all,
> 
> Recently, I met one issue when using socket between R & C++ to transmit R
> object. Would you pls help give me some suggestions? Many thanks!
> 
> [Background]:
> I create a socket connection between R & C++ binary first, and then, want
> to use saveRDS() or save() in R to save the object into connection
> directly. So that the C++ binary can read the object, and send it to
> another remote R.
> 
> [What I did so far]:
> 1. I used socketConnection in R and listen/accept in C++, to establish one
> blocking socket.
> 2. I used saveRDS to save the R object into socket directly
> 3. I want to use "recv()" in C++ to receive the R object.
> 
> [Issues I met]:
> I found actually, the saveRDS writes the R object with XDR format. I could
> not know how many bytes are sent into socket, when calling saveRDS to save
> R object. So in the C++ binary, I could not know exactly how many bytes I
> should receive from the socket. It is not safe for me, to always use a
> pre-defined buffer size to read from the socket.
> 
> Any suggestions for this? Are there safe way for me to read the R object
> from the socket?

There is nothing preventing you from adding a frame with the size of the serialization - that is what Rserve does (mentioned earlier by Dirk - it even has a C++ client ...): it uses a fixed-size header that specifies the kind of payload and its length, then the serialization follows in the payload. That way you only need to read a fixed header.

Cheers,
Simon


> I do not do any conversion with the received data, and only need to
> transfer them into a remote R to do the function execution.
> 
> =====================
> 
> Rong "Jessica", Li (????)
> Platform Symphony TET, CSTL, IBM Systems &Technology Group, Development
> Tel:86-10-82451010  Email:ronglli at cn.ibm.com
> 	[[alternative HTML version deleted]]
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From henrik.singmann at psychologie.uni-freiburg.de  Wed Jun 26 13:46:17 2013
From: henrik.singmann at psychologie.uni-freiburg.de (Henrik Singmann)
Date: Wed, 26 Jun 2013 13:46:17 +0200
Subject: [Rd] Error on executing functions from installed package
In-Reply-To: <CACof4roPo5B9mjw27UswJEuaj1ohrUHSzd7Yc8XXLa9dDf8TwA@mail.gmail.com>
References: <CACof4roPo5B9mjw27UswJEuaj1ohrUHSzd7Yc8XXLa9dDf8TwA@mail.gmail.com>
Message-ID: <51CAD489.1070701@psychologie.uni-freiburg.de>

Hi Kamal,

I suspect this to be because you did not load the package on each core so the S4 definitions are not available there. The solution would be to specifically load the library at each core prior to calling clusterApplyLB. (I vaguely remember once having a similar problem where something worked only in interactive mode and this was the solution)

The help page of clusterApply gives an example. If your package is called "foo", it would be something like the following before the problematic call to clusterApplyLB:

clusterEvalQ(cl, library(foo))

Hope this helps,
Henrik


Am 26/06/2013 11:56, schrieb Kamal:
> Hi,
>
> I am currently building an R package and I am facing a peculiar problem
> where some of the functions does not work within the package. However, if I
> source the script the function works.
> For example, in a method for parallelization of analysis on each chromosome
> simultaneously I am receiving error at the following position of the code:
>
> # this profile the information chromosome wise and results in "clRes"
>> clRes = clusterApplyLB(cl, Chrs, profilingChr, GenoRanges = GenoRanges,
> Sample = Sample)
>
>> class(clRes)
> [1] "list"
>
>> clRes
> [[1]]
> S4 Object of class GElist; 14 features
>
> start :  14350 69251 84185 116264 153924
> end :  18349 73250 88184 120263 157923
> chr :  chr20 chr20 chr20 chr20 chr20
> strand :  * * * * *
> binscore : NA
>
>> chrcomb <- sapply(result, function(x) rbind(x))
> Error in rbind(x) : no method for coercing this S4 class to a vector
>
> The above code is part of a function. If I run this code interactively or
> by sourcing the script it runs fine. However, when I execute the function
> from the installed package it gives me the above error. I could not find
> any solution to this. Any insight into the above problem would be highly
> appreciated.
>
>> sessionInfo()
> R version 3.0.0 (2013-04-03)
> Platform: x86_64-unknown-linux-gnu (64-bit)
>
> locale:
> [1] C
>
> attached base packages:
> [1] parallel  stats     graphics  grDevices utils     datasets  methods
> [8] base
>
> other attached packages:
>   [1] BSgenome.Hsapiens.UCSC.hg18_1.3.19 BSgenome_1.28.0
>   [3] methylPipe_0.99.0                  Rsamtools_1.12.3
>   [5] Biostrings_2.28.0                  GenomicRanges_1.12.4
>   [7] IRanges_1.18.1                     GOstats_2.26.0
>   [9] RSQLite_0.11.4                     DBI_0.2-7
> [11] graph_1.38.2                       Category_2.26.0
> [13] AnnotationDbi_1.22.6               Biobase_2.20.0
> [15] BiocGenerics_0.6.0                 snow_0.3-12
>
> loaded via a namespace (and not attached):
>   [1] AnnotationForge_1.2.1 GO.db_2.9.0           GSEABase_1.22.0
>   [4] RBGL_1.36.2           RCurl_1.95-4.1        XML_3.96-1.1
>   [7] annotate_1.38.0       bitops_1.0-5          gdata_2.12.0.2
> [10] genefilter_1.42.0     gplots_2.11.0.1       gtools_2.7.1
> [13] limma_3.16.5          marray_1.38.0         rtracklayer_1.20.2
> [16] splines_3.0.0         stats4_3.0.0          survival_2.37-4
> [19] tools_3.0.0           xtable_1.7-1          zlibbioc_1.6.0
>
> Thanks,
> Kamal
>
> 	[[alternative HTML version deleted]]
>

-- 
Dipl. Psych. Henrik Singmann
PhD Student
Albert-Ludwigs-Universit?t Freiburg, Germany
http://www.psychologie.uni-freiburg.de/Members/singmann


From 184523479 at qq.com  Thu Jun 27 15:18:46 2013
From: 184523479 at qq.com (=?utf-8?B?R2UgVGFu?=)
Date: Thu, 27 Jun 2013 21:18:46 +0800
Subject: [Rd] Read a text file into R with .Call()
Message-ID: <tencent_1039840B6669131118B8D10B@qq.com>

Hi,

I want to read a text file into R with .Call().
So I define some NEW_CHARACTER() to store the chracters read and use SET_STRING_ELT to fill the elements.

e.g.
PROTECT(qNames = NEW_CHARACTER(10000));
char *foo; // This foo holds the string I want.
while(foo = readLine(FN)){
  SET_STRING_ELT(qNames, i, mkChar(foo)));
}

In this way, I can get the desired character from qNames. The only problem is that "mkChar" will make every foo string into a global CHARSXP cache. When I have a huge amount of file to read, the CHARSXP cache use too much memory. I do not know whether there is any other way to SET_STRING_ELT without the mkChar operation. I know I cam refer to the Biostrings pakcage's way of readDNAStringSet, but that is a bit complicated I have not full understood it.

Any help will be appreciated!!

Ge

From maechler at stat.math.ethz.ch  Thu Jun 27 17:32:14 2013
From: maechler at stat.math.ethz.ch (Martin Maechler)
Date: Thu, 27 Jun 2013 17:32:14 +0200
Subject: [Rd] pretty eerie feeling: Google "down", Twitter "down", R sites up
Message-ID: <20940.23294.812086.489633@stat.math.ethz.ch>

Maybe this is just from inside ETH Zurich, 
but I haven't seen this before in many years:
for > 15 minutes now, for me and at least someone else here,

- Google (incl. Gmail, calendar..) is entirely unreachable
- Twitter is "connecting" and is not reached (in the browser),

- three major Swiss news(paper) websites (20min, TA, NZZ) are out
  of reach,

but  "of course" the ETH web sites are fine for me (but I'm inside ETH) 
and notably,

  www.r-project.org ,
  bugs.r-project.org,
  cran.r-project.org
  developer.r-project.org
  svn.r-project.org

are all fine and up... an eerie feeling indeed.

Martin


From marc_schwartz at me.com  Thu Jun 27 18:26:23 2013
From: marc_schwartz at me.com (Marc Schwartz)
Date: Thu, 27 Jun 2013 11:26:23 -0500
Subject: [Rd] pretty eerie feeling: Google "down", Twitter "down",
 R sites up
In-Reply-To: <20940.23294.812086.489633@stat.math.ethz.ch>
References: <20940.23294.812086.489633@stat.math.ethz.ch>
Message-ID: <5750D8F8-E787-4623-B4A7-A926D67E2C29@me.com>


On Jun 27, 2013, at 10:32 AM, Martin Maechler <maechler at stat.math.ethz.ch> wrote:

> Maybe this is just from inside ETH Zurich, 
> but I haven't seen this before in many years:
> for > 15 minutes now, for me and at least someone else here,
> 
> - Google (incl. Gmail, calendar..) is entirely unreachable
> - Twitter is "connecting" and is not reached (in the browser),
> 
> - three major Swiss news(paper) websites (20min, TA, NZZ) are out
>  of reach,
> 
> but  "of course" the ETH web sites are fine for me (but I'm inside ETH) 
> and notably,
> 
>  www.r-project.org ,
>  bugs.r-project.org,
>  cran.r-project.org
>  developer.r-project.org
>  svn.r-project.org
> 
> are all fine and up... an eerie feeling indeed.
> 
> Martin


Martin,

No problems for me accessing either Google or Twitter. The Twitter Status page:

  http://twitterstatus.tumblr.com/

is not showing anything nor is the Twitter Support account:

  https://twitter.com/Support


That being said, I just got your post, almost an hour after you sent it...according to the e-mail headers, the bulk of the delay was within the ETHZ domain, between phil2.ethz.ch and hypatia.math.ethz.ch.

Regards,

Marc


From maechler at stat.math.ethz.ch  Thu Jun 27 18:56:48 2013
From: maechler at stat.math.ethz.ch (Martin Maechler)
Date: Thu, 27 Jun 2013 18:56:48 +0200
Subject: [Rd] pretty eerie feeling: Google "down", Twitter "down",
 R sites up
In-Reply-To: <5750D8F8-E787-4623-B4A7-A926D67E2C29@me.com>
References: <20940.23294.812086.489633@stat.math.ethz.ch>
	<5750D8F8-E787-4623-B4A7-A926D67E2C29@me.com>
Message-ID: <20940.28368.172631.82422@stat.math.ethz.ch>

>>>>> Marc Schwartz <marc_schwartz at me.com>
>>>>>     on Thu, 27 Jun 2013 11:26:23 -0500 writes:

    > On Jun 27, 2013, at 10:32 AM, Martin Maechler <maechler at stat.math.ethz.ch> wrote:

    >> Maybe this is just from inside ETH Zurich, 
    >> but I haven't seen this before in many years:
    >> for > 15 minutes now, for me and at least someone else here,
    >> 
    >> - Google (incl. Gmail, calendar..) is entirely unreachable
    >> - Twitter is "connecting" and is not reached (in the browser),
    >> 
    >> - three major Swiss news(paper) websites (20min, TA, NZZ) are out
    >> of reach,
    >> 
    >> but  "of course" the ETH web sites are fine for me (but I'm inside ETH) 
    >> and notably,
    >> 
    >> www.r-project.org ,
    >> bugs.r-project.org,
    >> cran.r-project.org
    >> developer.r-project.org
    >> svn.r-project.org
    >> 
    >> are all fine and up... an eerie feeling indeed.
    >> 
    >> Martin


    > Martin,

    > No problems for me accessing either Google or Twitter. The Twitter Status page:

    > http://twitterstatus.tumblr.com/
    > is not showing anything nor is the Twitter Support account:

    > https://twitter.com/Support

they (and google and all the rest) came up quickly after I sent
the message.
But note that  e.g. developer.* and  bugs.* are also US-hosted
and were quickly accessible at the same time could not even
access some Swiss sites.

    > That being said, I just got your post, almost an hour after you sent it...according to the e-mail headers, the bulk of the delay was within the ETHZ domain, between phil2.ethz.ch and hypatia.math.ethz.ch.

yes, and that is only indirectly related,...
The mail / mailman list processing sometimes gets bogged down a
bit, as we've seen before.

    > Regards,
    > Marc

Thank you, Marc, for your reassuring reply.
Consider this thread as a ``peculiar Thursday evening coincidence''
that really should not bother anyone reading R-devel..

Martin


From simon.urbanek at r-project.org  Thu Jun 27 21:08:05 2013
From: simon.urbanek at r-project.org (Simon Urbanek)
Date: Thu, 27 Jun 2013 15:08:05 -0400
Subject: [Rd] Read a text file into R with .Call()
In-Reply-To: <tencent_1039840B6669131118B8D10B@qq.com>
References: <tencent_1039840B6669131118B8D10B@qq.com>
Message-ID: <A9AF071E-6B05-45DC-9B62-8D0DF080AA43@r-project.org>


On Jun 27, 2013, at 9:18 AM, Ge Tan wrote:

> Hi,
> 
> I want to read a text file into R with .Call().
> So I define some NEW_CHARACTER() to store the chracters read and use SET_STRING_ELT to fill the elements.
> 
> e.g.
> PROTECT(qNames = NEW_CHARACTER(10000));
> char *foo; // This foo holds the string I want.
> while(foo = readLine(FN)){
>  SET_STRING_ELT(qNames, i, mkChar(foo)));
> }
> 
> In this way, I can get the desired character from qNames. The only problem is that "mkChar" will make every foo string into a global CHARSXP cache. When I have a huge amount of file to read, the CHARSXP cache use too much memory. I do not know whether there is any other way to SET_STRING_ELT without the mkChar operation.

No. *all* strings in R are in the cache. The whole point of it is that is uses less memory by not duplicating strings - and the overhead for as little as 10000 strings is minuscule. So I suspect that is not your problem since if that was the case, you would not have enough memory to just load the file. Check you code, chances are the issue is elsewhere.

That said, you can always load the file into a raw vector and use accessor function to create strings on demand - but this is only meaningful when you plan to use a very small subset.

Cheers,
Simon


> I know I cam refer to the Biostrings pakcage's way of readDNAStringSet, but that is a bit complicated I have not full understood it.
> 
> Any help will be appreciated!!
> 
> Ge
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
> 
> 


From 184523479 at qq.com  Thu Jun 27 21:37:44 2013
From: 184523479 at qq.com (=?utf-8?B?R2UgVGFu?=)
Date: Fri, 28 Jun 2013 03:37:44 +0800
Subject: [Rd] Read a text file into R with .Call()
Message-ID: <tencent_541DA6027020FB783AB8DC58@qq.com>

Hi Simons,

Thanks for your reply.
10000 is just an example I wrote. In fact, there can be millions of strings (all of them are different and each has thousands of characters) I want to read from the file. So if I use mkChar it will store the same amount of the copies in the global cache.
The problem is when I get the returned qNames in R, and then rm(qNames) and do the gc(). 
gc() shows a normal amout of memory it uses. But from the top command, this R session can still use several GB. The rm() and gc() does not take effect on the memory release. (I suspect the release of the global cache is not done, even now there is not objects pointing to them.)
I am sure there is no other memory leak problem. Once I run the mkChar, the memory issue emerges.

So I am comfused how to read lines from text files and make it into R character vectors to pass back to R. We cannot store each of them into the global cache nor is not necessary as they are not duplicated.
Regarding the raw vector method, I am not quite clear how to manipulate it. Could you give some more detailed examples?

I attached more complete code I wrote. BTW, I am using R version 2.15.2.

Thanks!
Ge

  PROTECT(qNames = NEW_CHARACTER(nrAxts));
  PROTECT(qStart = NEW_INTEGER(nrAxts));
  PROTECT(qEnd = NEW_INTEGER(nrAxts));
  PROTECT(qStrand = NEW_CHARACTER(nrAxts));
  PROTECT(qSym = NEW_CHARACTER(nrAxts));
  PROTECT(tNames = NEW_CHARACTER(nrAxts));
  PROTECT(tStart = NEW_INTEGER(nrAxts));
  PROTECT(tEnd = NEW_INTEGER(nrAxts));
  PROTECT(tStrand = NEW_CHARACTER(nrAxts));
  PROTECT(tSym = NEW_CHARACTER(nrAxts));
  PROTECT(score = NEW_INTEGER(nrAxts));
  PROTECT(symCount = NEW_INTEGER(nrAxts));
  PROTECT(returnList = NEW_LIST(12));
  int *p_qStart, *p_qEnd, *p_tStart, *p_tEnd, *p_score, *p_symCount;
  p_qStart = INTEGER_POINTER(qStart);
  p_qEnd = INTEGER_POINTER(qEnd);
  p_tStart = INTEGER_POINTER(tStart);
  p_tEnd = INTEGER_POINTER(tEnd);
  p_score = INTEGER_POINTER(score);
  p_symCount = INTEGER_POINTER(symCount);
  int j = 0;
  i = 0;
  for(j = 0; j < nrAxtFiles; j++){
    char *filepath_elt = (char *) R_alloc(strlen(CHAR(STRING_ELT(filepath, j))), sizeof(char));
    strcpy(filepath_elt, CHAR(STRING_ELT(filepath, j)));
    lf = lineFileOpen(filepath_elt, TRUE);
    while((axt = axtRead(lf)) != NULL){
      SET_STRING_ELT(qNames, i, mkChar(axt->qName));
      p_qStart[i] = axt->qStart + 1;
      p_qEnd[i] = axt->qEnd;
      if(axt->qStrand == '+')
        SET_STRING_ELT(qStrand, i, mkChar("+"));
      else
        SET_STRING_ELT(qStrand, i, mkChar("-"));
        SET_STRING_ELT(qSym, i, mkChar(axt->qSym));
      SET_STRING_ELT(tNames, i, mkChar(axt->tName));
      p_tStart[i] = axt->tStart + 1;
      p_tEnd[i] = axt->tEnd;
      if(axt->tStrand == '+')
        SET_STRING_ELT(tStrand, i, mkChar("+"));
      else
        SET_STRING_ELT(tStrand, i, mkChar("-"));
        SET_STRING_ELT(tSym, i, mkChar(axt->tSym));
      p_score[i] = axt->score;
      p_symCount[i] = axt->symCount;
      i++;
      axtFree(&axt);
    }
    lineFileClose(&lf);
  }
  SET_VECTOR_ELT(returnList, 0, tNames);
  SET_VECTOR_ELT(returnList, 1, tStart);
  SET_VECTOR_ELT(returnList, 2, tEnd);
  SET_VECTOR_ELT(returnList, 3, tStrand);
  SET_VECTOR_ELT(returnList, 4, tSym);
  SET_VECTOR_ELT(returnList, 5, qNames);
  SET_VECTOR_ELT(returnList, 6, qStart);
  SET_VECTOR_ELT(returnList, 7, qEnd);
  SET_VECTOR_ELT(returnList, 8, qStrand);
  SET_VECTOR_ELT(returnList, 9, qSym);
  SET_VECTOR_ELT(returnList, 10, score);
  SET_VECTOR_ELT(returnList, 11, symCount);
  UNPROTECT(13);
  //axtFree(&curAxt);
  //return R_NilValue;
  return returnList;





------------------ Original ------------------
From:  "r-devel"<r-devel at r-project.org>;
Date:  Fri, Jun 28, 2013 03:08 AM
To:  "Ge Tan"<184523479 at qq.com>; 
Cc:  "r-devel"<r-devel at r-project.org>; 
Subject:  Re: [Rd] Read a text file into R with .Call()




On Jun 27, 2013, at 9:18 AM, Ge Tan wrote:

> Hi,
> 
> I want to read a text file into R with .Call().
> So I define some NEW_CHARACTER() to store the chracters read and use SET_STRING_ELT to fill the elements.
> 
> e.g.
> PROTECT(qNames = NEW_CHARACTER(10000));
> char *foo; // This foo holds the string I want.
> while(foo = readLine(FN)){
>  SET_STRING_ELT(qNames, i, mkChar(foo)));
> }
> 
> In this way, I can get the desired character from qNames. The only problem is that "mkChar" will make every foo string into a global CHARSXP cache. When I have a huge amount of file to read, the CHARSXP cache use too much memory. I do not know whether there is any other way to SET_STRING_ELT without the mkChar operation.

No. *all* strings in R are in the cache. The whole point of it is that is uses less memory by not duplicating strings - and the overhead for as little as 10000 strings is minuscule. So I suspect that is not your problem since if that was the case, you would not have enough memory to just load the file. Check you code, chances are the issue is elsewhere.

That said, you can always load the file into a raw vector and use accessor function to create strings on demand - but this is only meaningful when you plan to use a very small subset.

Cheers,
Simon


> I know I cam refer to the Biostrings pakcage's way of readDNAStringSet, but that is a bit complicated I have not full understood it.
> 
> Any help will be appreciated!!
> 
> Ge
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
> 
>

From simon.urbanek at r-project.org  Thu Jun 27 22:13:01 2013
From: simon.urbanek at r-project.org (Simon Urbanek)
Date: Thu, 27 Jun 2013 16:13:01 -0400
Subject: [Rd] Read a text file into R with .Call()
In-Reply-To: <tencent_541DA6027020FB783AB8DC58@qq.com>
References: <tencent_541DA6027020FB783AB8DC58@qq.com>
Message-ID: <AD0DBA87-8945-49E4-A3FE-792AD33FD4E3@r-project.org>


On Jun 27, 2013, at 3:37 PM, Ge Tan wrote:

> Hi Simons,
> 
> Thanks for your reply.
> 10000 is just an example I wrote. In fact, there can be millions of strings (all of them are different and each has thousands of characters) I want to read from the file. So if I use mkChar it will store the same amount of the copies in the global cache.

Those are not "copies" - those are the actual strings, there is no other copy - that's the whole point.


> The problem is when I get the returned qNames in R, and then rm(qNames) and do the gc(). 
> gc() shows a normal amout of memory it uses. But from the top command, this R session can still use several GB. The rm() and gc() does not take effect on the memory release. (I suspect the release of the global cache is not done, even now there is not objects pointing to them.)

Nope - that is normal - see FAQ 7.42 - the cache is released as you see in gc().
So is there any actual problem?


> I am sure there is no other memory leak problem. Once I run the mkChar, the memory issue emerges.
> 
> So I am comfused how to read lines from text files and make it into R character vectors to pass back to R. We cannot store each of them into the global cache nor is not necessary as they are not duplicated.
> Regarding the raw vector method, I am not quite clear how to manipulate it. Could you give some more detailed examples?
> 

Let's say you have a file with millions of lines, then you can simply use something like

x <- readBin(fn, raw(), file.info(fn)$size)

to read it all. When you need a particular string, you create the one you need, .e.g

rawToChar(x[1:16])

As for how to know where it is, you can use grepRaw("\n", x, fixed=TRUE) to get an index of the lines.
As I said, the premise here is that you need only a small fraction of the content. If you really need them all as strings, then you have to load them all anyway.

Cheers,
Simon


> I attached more complete code I wrote.

PS: Just minor details (not relevant to the above): The R_alloc() leads to buffer overflow - you're not allocating enough bytes (you should really not need allocate anything, ideally lineFileOpen() should be non-desctructive and you can pass CHAR()). Also I find it a bit safer to create the result list first and PROTECT() it and add elements as you allocate them [e.g., x = SET_VECTOR_ELT(res, i, allocVector(STRSXP, n))] - then you don't need any other protects at all since all its elements are protected by the list as you add them, so you don't need to worry about getting the protection count right.


> BTW, I am using R version 2.15.2.
> 
> Thanks!
> Ge
> 
>  PROTECT(qNames = NEW_CHARACTER(nrAxts));
>  PROTECT(qStart = NEW_INTEGER(nrAxts));
>  PROTECT(qEnd = NEW_INTEGER(nrAxts));
>  PROTECT(qStrand = NEW_CHARACTER(nrAxts));
>  PROTECT(qSym = NEW_CHARACTER(nrAxts));
>  PROTECT(tNames = NEW_CHARACTER(nrAxts));
>  PROTECT(tStart = NEW_INTEGER(nrAxts));
>  PROTECT(tEnd = NEW_INTEGER(nrAxts));
>  PROTECT(tStrand = NEW_CHARACTER(nrAxts));
>  PROTECT(tSym = NEW_CHARACTER(nrAxts));
>  PROTECT(score = NEW_INTEGER(nrAxts));
>  PROTECT(symCount = NEW_INTEGER(nrAxts));
>  PROTECT(returnList = NEW_LIST(12));
>  int *p_qStart, *p_qEnd, *p_tStart, *p_tEnd, *p_score, *p_symCount;
>  p_qStart = INTEGER_POINTER(qStart);
>  p_qEnd = INTEGER_POINTER(qEnd);
>  p_tStart = INTEGER_POINTER(tStart);
>  p_tEnd = INTEGER_POINTER(tEnd);
>  p_score = INTEGER_POINTER(score);
>  p_symCount = INTEGER_POINTER(symCount);
>  int j = 0;
>  i = 0;
>  for(j = 0; j < nrAxtFiles; j++){
>    char *filepath_elt = (char *) R_alloc(strlen(CHAR(STRING_ELT(filepath, j))), sizeof(char));
>    strcpy(filepath_elt, CHAR(STRING_ELT(filepath, j)));
>    lf = lineFileOpen(filepath_elt, TRUE);
>    while((axt = axtRead(lf)) != NULL){
>      SET_STRING_ELT(qNames, i, mkChar(axt->qName));
>      p_qStart[i] = axt->qStart + 1;
>      p_qEnd[i] = axt->qEnd;
>      if(axt->qStrand == '+')
>        SET_STRING_ELT(qStrand, i, mkChar("+"));
>      else
>        SET_STRING_ELT(qStrand, i, mkChar("-"));
>        SET_STRING_ELT(qSym, i, mkChar(axt->qSym));
>      SET_STRING_ELT(tNames, i, mkChar(axt->tName));
>      p_tStart[i] = axt->tStart + 1;
>      p_tEnd[i] = axt->tEnd;
>      if(axt->tStrand == '+')
>        SET_STRING_ELT(tStrand, i, mkChar("+"));
>      else
>        SET_STRING_ELT(tStrand, i, mkChar("-"));
>        SET_STRING_ELT(tSym, i, mkChar(axt->tSym));
>      p_score[i] = axt->score;
>      p_symCount[i] = axt->symCount;
>      i++;
>      axtFree(&axt);
>    }
>    lineFileClose(&lf);
>  }
>  SET_VECTOR_ELT(returnList, 0, tNames);
>  SET_VECTOR_ELT(returnList, 1, tStart);
>  SET_VECTOR_ELT(returnList, 2, tEnd);
>  SET_VECTOR_ELT(returnList, 3, tStrand);
>  SET_VECTOR_ELT(returnList, 4, tSym);
>  SET_VECTOR_ELT(returnList, 5, qNames);
>  SET_VECTOR_ELT(returnList, 6, qStart);
>  SET_VECTOR_ELT(returnList, 7, qEnd);
>  SET_VECTOR_ELT(returnList, 8, qStrand);
>  SET_VECTOR_ELT(returnList, 9, qSym);
>  SET_VECTOR_ELT(returnList, 10, score);
>  SET_VECTOR_ELT(returnList, 11, symCount);
>  UNPROTECT(13);
>  //axtFree(&curAxt);
>  //return R_NilValue;
>  return returnList;
> 
> 
> 
> 
> 
> ------------------ Original ------------------
> From:  "r-devel"<r-devel at r-project.org>;
> Date:  Fri, Jun 28, 2013 03:08 AM
> To:  "Ge Tan"<184523479 at qq.com>; 
> Cc:  "r-devel"<r-devel at r-project.org>; 
> Subject:  Re: [Rd] Read a text file into R with .Call()
> 
> 
> 
> 
> On Jun 27, 2013, at 9:18 AM, Ge Tan wrote:
> 
>> Hi,
>> 
>> I want to read a text file into R with .Call().
>> So I define some NEW_CHARACTER() to store the chracters read and use SET_STRING_ELT to fill the elements.
>> 
>> e.g.
>> PROTECT(qNames = NEW_CHARACTER(10000));
>> char *foo; // This foo holds the string I want.
>> while(foo = readLine(FN)){
>> SET_STRING_ELT(qNames, i, mkChar(foo)));
>> }
>> 
>> In this way, I can get the desired character from qNames. The only problem is that "mkChar" will make every foo string into a global CHARSXP cache. When I have a huge amount of file to read, the CHARSXP cache use too much memory. I do not know whether there is any other way to SET_STRING_ELT without the mkChar operation.
> 
> No. *all* strings in R are in the cache. The whole point of it is that is uses less memory by not duplicating strings - and the overhead for as little as 10000 strings is minuscule. So I suspect that is not your problem since if that was the case, you would not have enough memory to just load the file. Check you code, chances are the issue is elsewhere.
> 
> That said, you can always load the file into a raw vector and use accessor function to create strings on demand - but this is only meaningful when you plan to use a very small subset.
> 
> Cheers,
> Simon
> 
> 
>> I know I cam refer to the Biostrings pakcage's way of readDNAStringSet, but that is a bit complicated I have not full understood it.
>> 
>> Any help will be appreciated!!
>> 
>> Ge
>> ______________________________________________
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel
>> 
>> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
> 
> 


From hpages at fhcrc.org  Thu Jun 27 23:44:01 2013
From: hpages at fhcrc.org (=?ISO-8859-1?Q?Herv=E9_Pag=E8s?=)
Date: Thu, 27 Jun 2013 14:44:01 -0700
Subject: [Rd] Read a text file into R with .Call()
In-Reply-To: <tencent_541DA6027020FB783AB8DC58@qq.com>
References: <tencent_541DA6027020FB783AB8DC58@qq.com>
Message-ID: <51CCB221.50804@fhcrc.org>

Hi Ge,

Here is one way to do this with the Biostrings C API. It does
2 passes on the file. There is also a 1-pass way but not necessarily
worth it because not as memory efficient.

The code below is untested (not even guaranteed to compile)!

SEXP read_text_file_in_BStringSet(FILE *FN)
{
     SEXP ans, width;
     IntAE width_buf;
     char *foo;
     cachedXVectorList cached_ans;
     cachedCharSeq cached_ans_elt;
     int i;

     /* 1st pass: compute the 'width' vector. */
     width_buf = new_IntAE(0, 0, 0);
     while (foo = readLine(FN)) {
         IntAE_insert_at(&width_buf, IntAE_get_nelt(width_buf), 
strlen(foo));
     }
     PROTECT(width = new_INTEGER_from_IntAE(&width_buf));

     /* Allocate 'ans'. */
     PROTECT(ans = alloc_XRawList("BStringSet", "BString", ans_width));

     /* 2nd pass: Fill 'ans' with data. */
     cached_ans = cache_XVectorList(ans);
     rewind(FN);
     i = 0;
     while (foo = readLine(FN)) {
         cached_ans_elt = get_cachedXRawList_elt(&cached_ans, i);
         memcpy((char *) cached_ans_elt->seq, foo, INTEGER(width)[i] * 
sizeof(char));
         i++;
     }

     UNPROTECT(2);
     return ans;
}

The returned object is a BStringSet object.

Note that I kept your

     foo = readLine(FN)

approach for reading the file line by line. A more efficient way would
be to use something like

     n = getLineLength(FN)

for the 1st pass (no need to load the line of text into the foo
buffer), and something like

     readLine(FN, (char *) cached_ans_elt->seq)

for the 2nd pass so the data is loaded directly to where it needs to
go (i.e. without going first thru the foo buffer, hence avoiding the
memcpy()).

Cheers,
H.

On 06/27/2013 12:37 PM, Ge Tan wrote:
> Hi Simons,
>
> Thanks for your reply.
> 10000 is just an example I wrote. In fact, there can be millions of strings (all of them are different and each has thousands of characters) I want to read from the file. So if I use mkChar it will store the same amount of the copies in the global cache.
> The problem is when I get the returned qNames in R, and then rm(qNames) and do the gc().
> gc() shows a normal amout of memory it uses. But from the top command, this R session can still use several GB. The rm() and gc() does not take effect on the memory release. (I suspect the release of the global cache is not done, even now there is not objects pointing to them.)
> I am sure there is no other memory leak problem. Once I run the mkChar, the memory issue emerges.
>
> So I am comfused how to read lines from text files and make it into R character vectors to pass back to R. We cannot store each of them into the global cache nor is not necessary as they are not duplicated.
> Regarding the raw vector method, I am not quite clear how to manipulate it. Could you give some more detailed examples?
>
> I attached more complete code I wrote. BTW, I am using R version 2.15.2.
>
> Thanks!
> Ge
>
>    PROTECT(qNames = NEW_CHARACTER(nrAxts));
>    PROTECT(qStart = NEW_INTEGER(nrAxts));
>    PROTECT(qEnd = NEW_INTEGER(nrAxts));
>    PROTECT(qStrand = NEW_CHARACTER(nrAxts));
>    PROTECT(qSym = NEW_CHARACTER(nrAxts));
>    PROTECT(tNames = NEW_CHARACTER(nrAxts));
>    PROTECT(tStart = NEW_INTEGER(nrAxts));
>    PROTECT(tEnd = NEW_INTEGER(nrAxts));
>    PROTECT(tStrand = NEW_CHARACTER(nrAxts));
>    PROTECT(tSym = NEW_CHARACTER(nrAxts));
>    PROTECT(score = NEW_INTEGER(nrAxts));
>    PROTECT(symCount = NEW_INTEGER(nrAxts));
>    PROTECT(returnList = NEW_LIST(12));
>    int *p_qStart, *p_qEnd, *p_tStart, *p_tEnd, *p_score, *p_symCount;
>    p_qStart = INTEGER_POINTER(qStart);
>    p_qEnd = INTEGER_POINTER(qEnd);
>    p_tStart = INTEGER_POINTER(tStart);
>    p_tEnd = INTEGER_POINTER(tEnd);
>    p_score = INTEGER_POINTER(score);
>    p_symCount = INTEGER_POINTER(symCount);
>    int j = 0;
>    i = 0;
>    for(j = 0; j < nrAxtFiles; j++){
>      char *filepath_elt = (char *) R_alloc(strlen(CHAR(STRING_ELT(filepath, j))), sizeof(char));
>      strcpy(filepath_elt, CHAR(STRING_ELT(filepath, j)));
>      lf = lineFileOpen(filepath_elt, TRUE);
>      while((axt = axtRead(lf)) != NULL){
>        SET_STRING_ELT(qNames, i, mkChar(axt->qName));
>        p_qStart[i] = axt->qStart + 1;
>        p_qEnd[i] = axt->qEnd;
>        if(axt->qStrand == '+')
>          SET_STRING_ELT(qStrand, i, mkChar("+"));
>        else
>          SET_STRING_ELT(qStrand, i, mkChar("-"));
>          SET_STRING_ELT(qSym, i, mkChar(axt->qSym));
>        SET_STRING_ELT(tNames, i, mkChar(axt->tName));
>        p_tStart[i] = axt->tStart + 1;
>        p_tEnd[i] = axt->tEnd;
>        if(axt->tStrand == '+')
>          SET_STRING_ELT(tStrand, i, mkChar("+"));
>        else
>          SET_STRING_ELT(tStrand, i, mkChar("-"));
>          SET_STRING_ELT(tSym, i, mkChar(axt->tSym));
>        p_score[i] = axt->score;
>        p_symCount[i] = axt->symCount;
>        i++;
>        axtFree(&axt);
>      }
>      lineFileClose(&lf);
>    }
>    SET_VECTOR_ELT(returnList, 0, tNames);
>    SET_VECTOR_ELT(returnList, 1, tStart);
>    SET_VECTOR_ELT(returnList, 2, tEnd);
>    SET_VECTOR_ELT(returnList, 3, tStrand);
>    SET_VECTOR_ELT(returnList, 4, tSym);
>    SET_VECTOR_ELT(returnList, 5, qNames);
>    SET_VECTOR_ELT(returnList, 6, qStart);
>    SET_VECTOR_ELT(returnList, 7, qEnd);
>    SET_VECTOR_ELT(returnList, 8, qStrand);
>    SET_VECTOR_ELT(returnList, 9, qSym);
>    SET_VECTOR_ELT(returnList, 10, score);
>    SET_VECTOR_ELT(returnList, 11, symCount);
>    UNPROTECT(13);
>    //axtFree(&curAxt);
>    //return R_NilValue;
>    return returnList;
>
>
>
>
>
> ------------------ Original ------------------
> From:  "r-devel"<r-devel at r-project.org>;
> Date:  Fri, Jun 28, 2013 03:08 AM
> To:  "Ge Tan"<184523479 at qq.com>;
> Cc:  "r-devel"<r-devel at r-project.org>;
> Subject:  Re: [Rd] Read a text file into R with .Call()
>
>
>
>
> On Jun 27, 2013, at 9:18 AM, Ge Tan wrote:
>
>> Hi,
>>
>> I want to read a text file into R with .Call().
>> So I define some NEW_CHARACTER() to store the chracters read and use SET_STRING_ELT to fill the elements.
>>
>> e.g.
>> PROTECT(qNames = NEW_CHARACTER(10000));
>> char *foo; // This foo holds the string I want.
>> while(foo = readLine(FN)){
>>   SET_STRING_ELT(qNames, i, mkChar(foo)));
>> }
>>
>> In this way, I can get the desired character from qNames. The only problem is that "mkChar" will make every foo string into a global CHARSXP cache. When I have a huge amount of file to read, the CHARSXP cache use too much memory. I do not know whether there is any other way to SET_STRING_ELT without the mkChar operation.
>
> No. *all* strings in R are in the cache. The whole point of it is that is uses less memory by not duplicating strings - and the overhead for as little as 10000 strings is minuscule. So I suspect that is not your problem since if that was the case, you would not have enough memory to just load the file. Check you code, chances are the issue is elsewhere.
>
> That said, you can always load the file into a raw vector and use accessor function to create strings on demand - but this is only meaningful when you plan to use a very small subset.
>
> Cheers,
> Simon
>
>
>> I know I cam refer to the Biostrings pakcage's way of readDNAStringSet, but that is a bit complicated I have not full understood it.
>>
>> Any help will be appreciated!!
>>
>> Ge
>> ______________________________________________
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>
>>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>

-- 
Herv? Pag?s

Program in Computational Biology
Division of Public Health Sciences
Fred Hutchinson Cancer Research Center
1100 Fairview Ave. N, M1-B514
P.O. Box 19024
Seattle, WA 98109-1024

E-mail: hpages at fhcrc.org
Phone:  (206) 667-5791
Fax:    (206) 667-1319


From hpages at fhcrc.org  Fri Jun 28 01:28:10 2013
From: hpages at fhcrc.org (=?ISO-8859-1?Q?Herv=E9_Pag=E8s?=)
Date: Thu, 27 Jun 2013 16:28:10 -0700
Subject: [Rd] Error on executing functions from installed package
In-Reply-To: <CACof4rpY2zFd1W4B1vzTzH8AuNaSHbSCg+rPcg8TJyycbNzb2g@mail.gmail.com>
References: <CACof4roPo5B9mjw27UswJEuaj1ohrUHSzd7Yc8XXLa9dDf8TwA@mail.gmail.com>
	<51CAE343.4000102@stats.ox.ac.uk>
	<CACof4rqqCB9DJa7wjBR8w6JB_ruq0cY+NRK_seAcJa+MCJ10kA@mail.gmail.com>
	<CACof4rpY2zFd1W4B1vzTzH8AuNaSHbSCg+rPcg8TJyycbNzb2g@mail.gmail.com>
Message-ID: <51CCCA8A.3010007@fhcrc.org>

Hi Kamal,

Sounds like a Bioconductor question. Would be better to ask on the
Bioc-devel mailing list. See you there.

Cheers,
H.


On 06/26/2013 07:37 AM, Kamal wrote:
> Few more details:
>
> clRes object is essentially a list of SummarizedExperiment class object (of
> GenomicRanges package). Each object is of single chromosome since it is
> generated by parallelization. I am trying to combine all these object into
> a single SummarizedExperiment Object. Since we can combine
> SummarizedExperiment objects rowwise by using "rbind", I am combing it
> through the function below
>
>> chrcomb <- sapply(clRes, function(x) rbind(x))
> Error in rbind(x) : no method for coercing this S4 class to a vector
>
> Thanks,
> Kamal
>
>
> On Wed, Jun 26, 2013 at 4:29 PM, Kamal <kamal.fartiyal84 at gmail.com> wrote:
>
>> Prof Brian,
>>
>> Thanks for the reply. My mistake its "clRes" in place of "result"
>>
>>> chrcomb <- sapply(clRes, function(x) rbind(x))
>>
>> Error in rbind(x) : no method for coercing this S4 class to a vector
>>
>> I think what you mentioned about the package forgetting to import an S4
>> generic for rbind seems the logical explanation of this problem.
>>
>> Thanks,
>> Kamal
>>
>
> 	[[alternative HTML version deleted]]
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>

-- 
Herv? Pag?s

Program in Computational Biology
Division of Public Health Sciences
Fred Hutchinson Cancer Research Center
1100 Fairview Ave. N, M1-B514
P.O. Box 19024
Seattle, WA 98109-1024

E-mail: hpages at fhcrc.org
Phone:  (206) 667-5791
Fax:    (206) 667-1319


From bbolker at gmail.com  Fri Jun 28 05:49:45 2013
From: bbolker at gmail.com (Ben Bolker)
Date: Thu, 27 Jun 2013 23:49:45 -0400
Subject: [Rd] problem with eval(...,
	parent.frame(1L)) when package is not loaded
Message-ID: <51CD07D9.7070201@ufl.edu>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1


  The lmer() function in the lme4 package has some code of the form

mc <- match.call()
mc[[1]] <- as.name("lFormula")
lmod <- eval(mc, parent.frame(1L))

  this is a fairly common idiom in R, found e.g. in lm(), used when
one wants to pass all of the arguments of a function to a different
function (in the case of lm() it's model.frame()).

  This idiom fails ("error in eval(...) : could not find function
'lFormula'") when lme4 is not explicitly loaded, as will happen if one
uses lme4::lmer(...) to call the function without loading the package,
or when lmer() is called from within a function that Imports: but does
not Depend: on lme4.

  A simpler version suggested by Martin Maechler shows that this is a
generic issue (except that it's unlikely to happen with base R
functions because the relevant packages _will_ be loaded unless one
bends over backwards):

R_DEFAULT_PACKAGES=NULL R --vanilla
> stats::lm(y~x,data=data.frame(1:5,1:5))
Error in eval(expr, envir, enclos) :
  could not find function "model.frame"

  I wonder if anyone has encountered this and/or can think of a fix
(something with setting the enclosing environment appropriately?)  The
only workarounds we can think of at present are (1) telling
dependent-package maintainers that they have to use Depends: instead
of Imports: (which seems to subvert the whole dependency-minimization
goal of Imports:) or (2) littering our code with lme4:: to make sure
that the function gets looked for in the right place (ugh).

  See also https://github.com/lme4/lme4/issues/50 .

  Any ideas appreciated.

  Ben Bolker

-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.10 (GNU/Linux)
Comment: Using GnuPG with undefined - http://www.enigmail.net/

iQEcBAEBAgAGBQJRzQfZAAoJEOCV5YRblxUH3d0H+wfIa3ZJICkgt+4O6hsCPf3h
uMs5aQqZZl37W+8vOx4P6FBYb2dc96SGZhYmyYude9wokHnCx4E+GI34YJkASST0
v8BXp7kdk2kSXS+FBzwbxbIaUFlS44nzv/fA0zaVfa1YbsfWQaxKF2p/BLu+gxK8
pCdVWcTqN6rLsO2i9nPGG90W4zCo3mVx/83D4vbSXo17bYMuSrOd5OGUE9NRJz2G
gJLqtH9DC+NbCbAO47Sa1/od7ABiRD2Cl8yN+fmNHQOiXYB50IrCA8kCNk10zNnT
lZ/u90TPS2gHV0dF9MYPGgjp8GYpycXzdVt9u4idLOtYOOS7lBA5792jc0wrGoU=
=oBtv
-----END PGP SIGNATURE-----


From ronglli at cn.ibm.com  Fri Jun 28 12:22:30 2013
From: ronglli at cn.ibm.com (Rong lI Li)
Date: Fri, 28 Jun 2013 18:22:30 +0800
Subject: [Rd] How can C++ read the R object written into socket with
 saveRDS or save
Message-ID: <OFC83EDC03.29AA7C06-ON48257B98.003799F7-48257B98.00390F32@cn.ibm.com>

An embedded and charset-unspecified text was scrubbed...
Name: not available
URL: <https://stat.ethz.ch/pipermail/r-devel/attachments/20130628/56473803/attachment.pl>

From murdoch.duncan at gmail.com  Fri Jun 28 12:34:31 2013
From: murdoch.duncan at gmail.com (Duncan Murdoch)
Date: Fri, 28 Jun 2013 06:34:31 -0400
Subject: [Rd] problem with eval(...,
 parent.frame(1L)) when package is not loaded
In-Reply-To: <51CD07D9.7070201@ufl.edu>
References: <51CD07D9.7070201@ufl.edu>
Message-ID: <51CD66B7.60303@gmail.com>

On 13-06-27 11:49 PM, Ben Bolker wrote:
> -----BEGIN PGP SIGNED MESSAGE-----
> Hash: SHA1
>
>
>    The lmer() function in the lme4 package has some code of the form
>
> mc <- match.call()
> mc[[1]] <- as.name("lFormula")
> lmod <- eval(mc, parent.frame(1L))
>
>    this is a fairly common idiom in R, found e.g. in lm(), used when
> one wants to pass all of the arguments of a function to a different
> function (in the case of lm() it's model.frame()).
>
>    This idiom fails ("error in eval(...) : could not find function
> 'lFormula'") when lme4 is not explicitly loaded, as will happen if one
> uses lme4::lmer(...) to call the function without loading the package,
> or when lmer() is called from within a function that Imports: but does
> not Depend: on lme4.
>
>    A simpler version suggested by Martin Maechler shows that this is a
> generic issue (except that it's unlikely to happen with base R
> functions because the relevant packages _will_ be loaded unless one
> bends over backwards):
>
> R_DEFAULT_PACKAGES=NULL R --vanilla
>> stats::lm(y~x,data=data.frame(1:5,1:5))
> Error in eval(expr, envir, enclos) :
>    could not find function "model.frame"
>
>    I wonder if anyone has encountered this and/or can think of a fix
> (something with setting the enclosing environment appropriately?)  The
> only workarounds we can think of at present are (1) telling
> dependent-package maintainers that they have to use Depends: instead
> of Imports: (which seems to subvert the whole dependency-minimization
> goal of Imports:) or (2) littering our code with lme4:: to make sure
> that the function gets looked for in the right place (ugh).
>
>    See also https://github.com/lme4/lme4/issues/50 .
>
>    Any ideas appreciated.

I believe

mc[[1]] <- lFormula

will mostly solve the problem.  Since your code is evaluating lFormula, 
it will be found.

This will likely lead to ugly error messages if errors occur during 
lFormula (because the call will no longer look like lFormula(...), it 
will look like (function(...) { ... })( ... ).  You can mitigate this by 
using call. = FALSE in your error messages.

If you're saving mc in any of the results of the function, you'll also 
see the ugly display.

The other choice is to use the explicit ::, i.e.

mc[[1]] <- quote(lmer::lFormula)

This would be the solution I'd prefer, but you seem to have some 
prejudice against :: :-).

Duncan Murdoch


From peter.meilstrup at gmail.com  Fri Jun 28 12:34:58 2013
From: peter.meilstrup at gmail.com (Peter Meilstrup)
Date: Fri, 28 Jun 2013 03:34:58 -0700
Subject: [Rd] problem with eval(...,
	parent.frame(1L)) when package is not loaded
Message-ID: <CAJoaRhbDaNWtVsStODwzNqn2temhKME3NwQ6HSExQoHewLdu6g@mail.gmail.com>

An embedded and charset-unspecified text was scrubbed...
Name: not available
URL: <https://stat.ethz.ch/pipermail/r-devel/attachments/20130628/3ab19d77/attachment.pl>

From richard_raubertas at merck.com  Thu Jun 27 19:29:46 2013
From: richard_raubertas at merck.com (Raubertas, Richard)
Date: Thu, 27 Jun 2013 13:29:46 -0400
Subject: [Rd] 'modifyList' drops (not adds) NULL components
Message-ID: <1D693EC430D9BA40A64CB59875BED8CF013447FF8464@USCTMXP51004.merck.com>

Dear list,

Utils::modifyList() drops NULL components in its second argument, instead of adding them to the first argument.  Compare:
> modifyList(x=list(A=1), val=list(B=2, C=3))
$A
[1] 1

$B
[1] 2

$C
[1] 3

> modifyList(x=list(A=1), val=list(B=NULL, C=3))
$A
[1] 1

$C
[1] 3

To me this seems inconsistent with the documentation ("Elements in 'val' which are missing from 'x' are added to 'x'."), and also with how I'd want the function to behave.

> sessionInfo()
R version 3.0.1 Patched (2013-06-16 r62969)
Platform: x86_64-w64-mingw32/x64 (64-bit)

locale:
[1] LC_COLLATE=English_United States.1252 
[2] LC_CTYPE=English_United States.1252   
[3] LC_MONETARY=English_United States.1252
[4] LC_NUMERIC=C                          
[5] LC_TIME=English_United States.1252    

attached base packages:
[1] stats     graphics  grDevices utils     datasets  methods   base     


Richard Raubertas
Merck & Co.


Notice:  This e-mail message, together with any attachme...{{dropped:11}}


From deepayan.sarkar at gmail.com  Fri Jun 28 13:17:06 2013
From: deepayan.sarkar at gmail.com (Deepayan Sarkar)
Date: Fri, 28 Jun 2013 16:47:06 +0530
Subject: [Rd] 'modifyList' drops (not adds) NULL components
In-Reply-To: <1D693EC430D9BA40A64CB59875BED8CF013447FF8464@USCTMXP51004.merck.com>
References: <1D693EC430D9BA40A64CB59875BED8CF013447FF8464@USCTMXP51004.merck.com>
Message-ID: <CADfFDC5H8LBnrbxwQGN_nuv9UnacRVRo1xagp=aDTmS_zwHEBg@mail.gmail.com>

On Thu, Jun 27, 2013 at 10:59 PM, Raubertas, Richard
<richard_raubertas at merck.com> wrote:
> Dear list,
>
> Utils::modifyList() drops NULL components in its second argument, instead of adding them to the first argument.  Compare:
>> modifyList(x=list(A=1), val=list(B=2, C=3))
> $A
> [1] 1
>
> $B
> [1] 2
>
> $C
> [1] 3
>
>> modifyList(x=list(A=1), val=list(B=NULL, C=3))
> $A
> [1] 1
>
> $C
> [1] 3
>
> To me this seems inconsistent with the documentation ("Elements in 'val' which are missing from 'x' are added to 'x'."),

Agreed.

> and also with how I'd want the function to behave.

Note that you still get

> foo <- modifyList(x=list(A=1), val=list(B=NULL, C=3))
> foo$B
NULL

So is there a specific reason you want the NULL elements to be
explicitly listed?

-Deepayan

>
>> sessionInfo()
> R version 3.0.1 Patched (2013-06-16 r62969)
> Platform: x86_64-w64-mingw32/x64 (64-bit)
>
> locale:
> [1] LC_COLLATE=English_United States.1252
> [2] LC_CTYPE=English_United States.1252
> [3] LC_MONETARY=English_United States.1252
> [4] LC_NUMERIC=C
> [5] LC_TIME=English_United States.1252
>
> attached base packages:
> [1] stats     graphics  grDevices utils     datasets  methods   base
>
>
> Richard Raubertas
> Merck & Co.


From richard_raubertas at merck.com  Fri Jun 28 16:29:38 2013
From: richard_raubertas at merck.com (Raubertas, Richard)
Date: Fri, 28 Jun 2013 10:29:38 -0400
Subject: [Rd] 'modifyList' drops (not adds) NULL components
In-Reply-To: <CADfFDC5H8LBnrbxwQGN_nuv9UnacRVRo1xagp=aDTmS_zwHEBg@mail.gmail.com>
References: <1D693EC430D9BA40A64CB59875BED8CF013447FF8464@USCTMXP51004.merck.com>
	<CADfFDC5H8LBnrbxwQGN_nuv9UnacRVRo1xagp=aDTmS_zwHEBg@mail.gmail.com>
Message-ID: <1D693EC430D9BA40A64CB59875BED8CF01344807A1D5@USCTMXP51004.merck.com>

See response inline below.

> -----Original Message-----
> From: Deepayan Sarkar [mailto:deepayan.sarkar at gmail.com]
> Sent: Friday, June 28, 2013 7:17 AM
> To: Raubertas, Richard
> Cc: R-devel at r-project.org
> Subject: Re: [Rd] 'modifyList' drops (not adds) NULL components
> 
> On Thu, Jun 27, 2013 at 10:59 PM, Raubertas, Richard
> <richard_raubertas at merck.com> wrote:
> > Dear list,
> >
> > Utils::modifyList() drops NULL components in its second argument, instead
> of adding them to the first argument.  Compare:
> >> modifyList(x=list(A=1), val=list(B=2, C=3))
> > $A
> > [1] 1
> >
> > $B
> > [1] 2
> >
> > $C
> > [1] 3
> >
> >> modifyList(x=list(A=1), val=list(B=NULL, C=3))
> > $A
> > [1] 1
> >
> > $C
> > [1] 3
> >
> > To me this seems inconsistent with the documentation ("Elements in 'val'
> which are missing from 'x' are added to 'x'."),
> 
> Agreed.
> 
> > and also with how I'd want the function to behave.
> 
> Note that you still get
> 
> > foo <- modifyList(x=list(A=1), val=list(B=NULL, C=3))
> > foo$B
> NULL
> 
> So is there a specific reason you want the NULL elements to be
> explicitly listed?
> 
> -Deepayan

Yes, definitely.  Although 'foo$B' gives the same result, 'length(foo)' or 'names(foo)' do not.  Basically, the object 'foo', considered as a whole, is very different in the two cases, and this was a problem in the code I was writing.

Richard
> 
> >
> >> sessionInfo()
> > R version 3.0.1 Patched (2013-06-16 r62969)
> > Platform: x86_64-w64-mingw32/x64 (64-bit)
> >
> > locale:
> > [1] LC_COLLATE=English_United States.1252
> > [2] LC_CTYPE=English_United States.1252
> > [3] LC_MONETARY=English_United States.1252
> > [4] LC_NUMERIC=C
> > [5] LC_TIME=English_United States.1252
> >
> > attached base packages:
> > [1] stats     graphics  grDevices utils     datasets  methods   base
> >
> >
> > Richard Raubertas
> > Merck & Co.
Notice:  This e-mail message, together with any attachments, contains
information of Merck & Co., Inc. (One Merck Drive, Whitehouse Station,
New Jersey, USA 08889), and/or its affiliates Direct contact information
for affiliates is available at 
http://www.merck.com/contact/contacts.html) that may be confidential,
proprietary copyrighted and/or legally privileged. It is intended solely
for the use of the individual or entity named on this message. If you are
not the intended recipient, and have received this message in error,
please notify us immediately by reply e-mail and then delete it from 
your system.

From bbolker at gmail.com  Fri Jun 28 18:42:31 2013
From: bbolker at gmail.com (Ben Bolker)
Date: Fri, 28 Jun 2013 16:42:31 +0000
Subject: [Rd] problem with eval(...,
	parent.frame(1L)) when package is not loaded
References: <51CD07D9.7070201@ufl.edu> <51CD66B7.60303@gmail.com>
Message-ID: <loom.20130628T183725-282@post.gmane.org>

Duncan Murdoch <murdoch.duncan <at> gmail.com> writes:

>

[snip]
> 
> The other choice is to use the explicit ::, i.e.
> 
> mc[[1]] <- quote(lmer::lFormula)
> 
> This would be the solution I'd prefer, but you seem to have some 
> prejudice against :: .
> 

  I just thought that the whole point of using the machinery of
namespaces, environments, etc., was that we shouldn't need to
tell R explicitly what environment we were working in ...


From murdoch.duncan at gmail.com  Fri Jun 28 19:56:26 2013
From: murdoch.duncan at gmail.com (Duncan Murdoch)
Date: Fri, 28 Jun 2013 13:56:26 -0400
Subject: [Rd] problem with eval(...,
 parent.frame(1L)) when package is not loaded
In-Reply-To: <loom.20130628T183725-282@post.gmane.org>
References: <51CD07D9.7070201@ufl.edu> <51CD66B7.60303@gmail.com>
	<loom.20130628T183725-282@post.gmane.org>
Message-ID: <51CDCE4A.6010407@gmail.com>

On 28/06/2013 12:42 PM, Ben Bolker wrote:
> Duncan Murdoch <murdoch.duncan <at> gmail.com> writes:
>
> >
>
> [snip]
> >
> > The other choice is to use the explicit ::, i.e.
> >
> > mc[[1]] <- quote(lmer::lFormula)
> >
> > This would be the solution I'd prefer, but you seem to have some
> > prejudice against :: .
> >
>
>    I just thought that the whole point of using the machinery of
> namespaces, environments, etc., was that we shouldn't need to
> tell R explicitly what environment we were working in ...

And usually it works, just not always when you do surgery on 
expressions.  The snipped version worked, for instance.

Duncan Murdoch


From pdalgd at gmail.com  Fri Jun 28 20:22:38 2013
From: pdalgd at gmail.com (peter dalgaard)
Date: Fri, 28 Jun 2013 20:22:38 +0200
Subject: [Rd] problem with eval(...,
	parent.frame(1L)) when package is not loaded
In-Reply-To: <loom.20130628T183725-282@post.gmane.org>
References: <51CD07D9.7070201@ufl.edu> <51CD66B7.60303@gmail.com>
	<loom.20130628T183725-282@post.gmane.org>
Message-ID: <F7048526-5250-4CE3-B858-017A8455FD8C@gmail.com>


On Jun 28, 2013, at 18:42 , Ben Bolker wrote:

> Duncan Murdoch <murdoch.duncan <at> gmail.com> writes:
> 
>> 
> 
> [snip]
>> 
>> The other choice is to use the explicit ::, i.e.
>> 
>> mc[[1]] <- quote(lmer::lFormula)
>> 
>> This would be the solution I'd prefer, but you seem to have some 
>> prejudice against :: .
>> 
> 
>  I just thought that the whole point of using the machinery of
> namespaces, environments, etc., was that we shouldn't need to
> tell R explicitly what environment we were working in ...

Not really. The point is to avoid name clashes. In a sense, the fundamental mode of operation is to use qualified names, but there are convenience features that let you use them unqualified by attaching or importing (parts of) the namespace. But, if, as in the present case, you can't assume that the lmer namespace is imported/attached by the caller, you likely shouldn't force it to be so for an eval.parent()-type call. So the qualified name is a natural solution in that case. 

-- 
Peter Dalgaard, Professor,
Center for Statistics, Copenhagen Business School
Solbjerg Plads 3, 2000 Frederiksberg, Denmark
Phone: (+45)38153501
Email: pd.mes at cbs.dk  Priv: PDalgd at gmail.com


From hpages at fhcrc.org  Fri Jun 28 20:26:22 2013
From: hpages at fhcrc.org (=?UTF-8?B?SGVydsOpIFBhZ8Oocw==?=)
Date: Fri, 28 Jun 2013 11:26:22 -0700
Subject: [Rd] Read a text file into R with .Call()
In-Reply-To: <tencent_3444E8807A2CB493008294CB@qq.com>
References: <tencent_3444E8807A2CB493008294CB@qq.com>
Message-ID: <51CDD54E.8040405@fhcrc.org>

Hi Ge,

On 06/28/2013 04:45 AM, Ge Tan wrote:
> Hi  Herv?,
>
> Thank you so much!!! I tweaked it a little and it works exactly in the Biostrings way which I want to learn!
> You are my idol!!
>
> One minor question I want to ask is when I change the
> alloc_XRawList("BStringSet", "BString", ans_width));
> to DNAStringSet.
> It reprots an error,
>> myAxt
>    A DNAStringSet instance of length 315050
>           width seq
> Error in .Call2("new_CHARACTER_from_XString", x, xs_dec_lkup(x), PACKAGE = "Biostrings") :
>    key 65 (char 'A') not in lookup table

Glad it works for you. I'll answer your new question on the Bioc-devel
mailing list. See you there.

H.

>
> Do you have any idea?
>
> Thanks again!
> Ge
>
> ------------------ Original ------------------
> From:  "Herv  Pag s"<hpages at fhcrc.org>;
> Date:  Fri, Jun 28, 2013 05:44 AM
> To:  "Ge Tan"<184523479 at qq.com>;
> Cc:  "r-devel"<r-devel at r-project.org>;
> Subject:  Re: [Rd] Read a text file into R with .Call()
>
>
>
> Hi Ge,
>
> Here is one way to do this with the Biostrings C API. It does
> 2 passes on the file. There is also a 1-pass way but not necessarily
> worth it because not as memory efficient.
>
> The code below is untested (not even guaranteed to compile)!
>
> SEXP read_text_file_in_BStringSet(FILE *FN)
> {
>       SEXP ans, width;
>       IntAE width_buf;
>       char *foo;
>       cachedXVectorList cached_ans;
>       cachedCharSeq cached_ans_elt;
>       int i;
>
>       /* 1st pass: compute the 'width' vector. */
>       width_buf = new_IntAE(0, 0, 0);
>       while (foo = readLine(FN)) {
>           IntAE_insert_at(&width_buf, IntAE_get_nelt(width_buf),
> strlen(foo));
>       }
>       PROTECT(width = new_INTEGER_from_IntAE(&width_buf));
>
>       /* Allocate 'ans'. */
>       PROTECT(ans = alloc_XRawList("BStringSet", "BString", ans_width));
>
>       /* 2nd pass: Fill 'ans' with data. */
>       cached_ans = cache_XVectorList(ans);
>       rewind(FN);
>       i = 0;
>       while (foo = readLine(FN)) {
>           cached_ans_elt = get_cachedXRawList_elt(&cached_ans, i);
>           memcpy((char *) cached_ans_elt->seq, foo, INTEGER(width)[i] *
> sizeof(char));
>           i++;
>       }
>
>       UNPROTECT(2);
>       return ans;
> }
>
> The returned object is a BStringSet object.
>
> Note that I kept your
>
>       foo = readLine(FN)
>
> approach for reading the file line by line. A more efficient way would
> be to use something like
>
>       n = getLineLength(FN)
>
> for the 1st pass (no need to load the line of text into the foo
> buffer), and something like
>
>       readLine(FN, (char *) cached_ans_elt->seq)
>
> for the 2nd pass so the data is loaded directly to where it needs to
> go (i.e. without going first thru the foo buffer, hence avoiding the
> memcpy()).
>
> Cheers,
> H.
>
> On 06/27/2013 12:37 PM, Ge Tan wrote:
>> Hi Simons,
>>
>> Thanks for your reply.
>> 10000 is just an example I wrote. In fact, there can be millions of strings (all of them are different and each has thousands of characters) I want to read from the file. So if I use mkChar it will store the same amount of the copies in the global cache.
>> The problem is when I get the returned qNames in R, and then rm(qNames) and do the gc().
>> gc() shows a normal amout of memory it uses. But from the top command, this R session can still use several GB. The rm() and gc() does not take effect on the memory release. (I suspect the release of the global cache is not done, even now there is not objects pointing to them.)
>> I am sure there is no other memory leak problem. Once I run the mkChar, the memory issue emerges.
>>
>> So I am comfused how to read lines from text files and make it into R character vectors to pass back to R. We cannot store each of them into the global cache nor is not necessary as they are not duplicated.
>> Regarding the raw vector method, I am not quite clear how to manipulate it. Could you give some more detailed examples?
>>
>> I attached more complete code I wrote. BTW, I am using R version 2.15.2.
>>
>> Thanks!
>> Ge
>>
>>     PROTECT(qNames = NEW_CHARACTER(nrAxts));
>>     PROTECT(qStart = NEW_INTEGER(nrAxts));
>>     PROTECT(qEnd = NEW_INTEGER(nrAxts));
>>     PROTECT(qStrand = NEW_CHARACTER(nrAxts));
>>     PROTECT(qSym = NEW_CHARACTER(nrAxts));
>>     PROTECT(tNames = NEW_CHARACTER(nrAxts));
>>     PROTECT(tStart = NEW_INTEGER(nrAxts));
>>     PROTECT(tEnd = NEW_INTEGER(nrAxts));
>>     PROTECT(tStrand = NEW_CHARACTER(nrAxts));
>>     PROTECT(tSym = NEW_CHARACTER(nrAxts));
>>     PROTECT(score = NEW_INTEGER(nrAxts));
>>     PROTECT(symCount = NEW_INTEGER(nrAxts));
>>     PROTECT(returnList = NEW_LIST(12));
>>     int *p_qStart, *p_qEnd, *p_tStart, *p_tEnd, *p_score, *p_symCount;
>>     p_qStart = INTEGER_POINTER(qStart);
>>     p_qEnd = INTEGER_POINTER(qEnd);
>>     p_tStart = INTEGER_POINTER(tStart);
>>     p_tEnd = INTEGER_POINTER(tEnd);
>>     p_score = INTEGER_POINTER(score);
>>     p_symCount = INTEGER_POINTER(symCount);
>>     int j = 0;
>>     i = 0;
>>     for(j = 0; j < nrAxtFiles; j++){
>>       char *filepath_elt = (char *) R_alloc(strlen(CHAR(STRING_ELT(filepath, j))), sizeof(char));
>>       strcpy(filepath_elt, CHAR(STRING_ELT(filepath, j)));
>>       lf = lineFileOpen(filepath_elt, TRUE);
>>       while((axt = axtRead(lf)) != NULL){
>>         SET_STRING_ELT(qNames, i, mkChar(axt->qName));
>>         p_qStart[i] = axt->qStart + 1;
>>         p_qEnd[i] = axt->qEnd;
>>         if(axt->qStrand == '+')
>>           SET_STRING_ELT(qStrand, i, mkChar("+"));
>>         else
>>           SET_STRING_ELT(qStrand, i, mkChar("-"));
>>           SET_STRING_ELT(qSym, i, mkChar(axt->qSym));
>>         SET_STRING_ELT(tNames, i, mkChar(axt->tName));
>>         p_tStart[i] = axt->tStart + 1;
>>         p_tEnd[i] = axt->tEnd;
>>         if(axt->tStrand == '+')
>>           SET_STRING_ELT(tStrand, i, mkChar("+"));
>>         else
>>           SET_STRING_ELT(tStrand, i, mkChar("-"));
>>           SET_STRING_ELT(tSym, i, mkChar(axt->tSym));
>>         p_score[i] = axt->score;
>>         p_symCount[i] = axt->symCount;
>>         i++;
>>         axtFree(&axt);
>>       }
>>       lineFileClose(&lf);
>>     }
>>     SET_VECTOR_ELT(returnList, 0, tNames);
>>     SET_VECTOR_ELT(returnList, 1, tStart);
>>     SET_VECTOR_ELT(returnList, 2, tEnd);
>>     SET_VECTOR_ELT(returnList, 3, tStrand);
>>     SET_VECTOR_ELT(returnList, 4, tSym);
>>     SET_VECTOR_ELT(returnList, 5, qNames);
>>     SET_VECTOR_ELT(returnList, 6, qStart);
>>     SET_VECTOR_ELT(returnList, 7, qEnd);
>>     SET_VECTOR_ELT(returnList, 8, qStrand);
>>     SET_VECTOR_ELT(returnList, 9, qSym);
>>     SET_VECTOR_ELT(returnList, 10, score);
>>     SET_VECTOR_ELT(returnList, 11, symCount);
>>     UNPROTECT(13);
>>     //axtFree(&curAxt);
>>     //return R_NilValue;
>>     return returnList;
>>
>>
>>
>>
>>
>> ------------------ Original ------------------
>> From:  "r-devel"<r-devel at r-project.org>;
>> Date:  Fri, Jun 28, 2013 03:08 AM
>> To:  "Ge Tan"<184523479 at qq.com>;
>> Cc:  "r-devel"<r-devel at r-project.org>;
>> Subject:  Re: [Rd] Read a text file into R with .Call()
>>
>>
>>
>>
>> On Jun 27, 2013, at 9:18 AM, Ge Tan wrote:
>>
>>> Hi,
>>>
>>> I want to read a text file into R with .Call().
>>> So I define some NEW_CHARACTER() to store the chracters read and use SET_STRING_ELT to fill the elements.
>>>
>>> e.g.
>>> PROTECT(qNames = NEW_CHARACTER(10000));
>>> char *foo; // This foo holds the string I want.
>>> while(foo = readLine(FN)){
>>>    SET_STRING_ELT(qNames, i, mkChar(foo)));
>>> }
>>>
>>> In this way, I can get the desired character from qNames. The only problem is that "mkChar" will make every foo string into a global CHARSXP cache. When I have a huge amount of file to read, the CHARSXP cache use too much memory. I do not know whether there is any other way to SET_STRING_ELT without the mkChar operation.
>>
>> No. *all* strings in R are in the cache. The whole point of it is that is uses less memory by not duplicating strings - and the overhead for as little as 10000 strings is minuscule. So I suspect that is not your problem since if that was the case, you would not have enough memory to just load the file. Check you code, chances are the issue is elsewhere.
>>
>> That said, you can always load the file into a raw vector and use accessor function to create strings on demand - but this is only meaningful when you plan to use a very small subset.
>>
>> Cheers,
>> Simon
>>
>>
>>> I know I cam refer to the Biostrings pakcage's way of readDNAStringSet, but that is a bit complicated I have not full understood it.
>>>
>>> Any help will be appreciated!!
>>>
>>> Ge
>>> ______________________________________________
>>> R-devel at r-project.org mailing list
>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>>
>>>
>> ______________________________________________
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>
>

-- 
Herv? Pag?s

Program in Computational Biology
Division of Public Health Sciences
Fred Hutchinson Cancer Research Center
1100 Fairview Ave. N, M1-B514
P.O. Box 19024
Seattle, WA 98109-1024

E-mail: hpages at fhcrc.org
Phone:  (206) 667-5791
Fax:    (206) 667-1319


From bbolker at gmail.com  Fri Jun 28 20:55:14 2013
From: bbolker at gmail.com (Ben Bolker)
Date: Fri, 28 Jun 2013 14:55:14 -0400
Subject: [Rd] problem with eval(...,
 parent.frame(1L)) when package is not loaded
In-Reply-To: <51CDCE4A.6010407@gmail.com>
References: <51CD07D9.7070201@ufl.edu> <51CD66B7.60303@gmail.com>
	<loom.20130628T183725-282@post.gmane.org>
	<51CDCE4A.6010407@gmail.com>
Message-ID: <51CDDC12.8070602@gmail.com>

On 13-06-28 01:56 PM, Duncan Murdoch wrote:
> On 28/06/2013 12:42 PM, Ben Bolker wrote:
>> Duncan Murdoch <murdoch.duncan <at> gmail.com> writes:
>>
>> >
>>
>> [snip]
>> >
>> > The other choice is to use the explicit ::, i.e.
>> >
>> > mc[[1]] <- quote(lmer::lFormula)
>> >
>> > This would be the solution I'd prefer, but you seem to have some
>> > prejudice against :: .
>> >
>>
>>    I just thought that the whole point of using the machinery of
>> namespaces, environments, etc., was that we shouldn't need to
>> tell R explicitly what environment we were working in ...
> 
> And usually it works, just not always when you do surgery on
> expressions.  The snipped version worked, for instance.
> 
> Duncan Murdoch

  Fair enough.  I guess the problem is that I often look in core R
functions to figure out the right idioms to use, and it wasn't obvious
that this was a dangerous one ... it's fairly common and I don't see
warnings in the source code about it ...

  Ben


From peter.meilstrup at gmail.com  Fri Jun 28 21:57:25 2013
From: peter.meilstrup at gmail.com (Peter Meilstrup)
Date: Fri, 28 Jun 2013 12:57:25 -0700
Subject: [Rd] problem with eval(...,
	parent.frame(1L)) when package is not loaded
In-Reply-To: <loom.20130628T183725-282@post.gmane.org>
References: <51CD07D9.7070201@ufl.edu> <51CD66B7.60303@gmail.com>
	<loom.20130628T183725-282@post.gmane.org>
Message-ID: <CAJoaRhbgDzcw7RbUYLbRkA4LUWthDNzxOUghoQiy8tnZR6S+PQ@mail.gmail.com>

An embedded and charset-unspecified text was scrubbed...
Name: not available
URL: <https://stat.ethz.ch/pipermail/r-devel/attachments/20130628/86e78041/attachment.pl>

From bbolker at gmail.com  Sat Jun 29 00:07:03 2013
From: bbolker at gmail.com (Ben Bolker)
Date: Fri, 28 Jun 2013 18:07:03 -0400
Subject: [Rd] problem with eval(...,
 parent.frame(1L)) when package is not loaded
In-Reply-To: <CAJoaRhbgDzcw7RbUYLbRkA4LUWthDNzxOUghoQiy8tnZR6S+PQ@mail.gmail.com>
References: <51CD07D9.7070201@ufl.edu> <51CD66B7.60303@gmail.com>
	<loom.20130628T183725-282@post.gmane.org>
	<CAJoaRhbgDzcw7RbUYLbRkA4LUWthDNzxOUghoQiy8tnZR6S+PQ@mail.gmail.com>
Message-ID: <51CE0907.20000@gmail.com>

On 13-06-28 03:57 PM, Peter Meilstrup wrote:
> Well, once you begin messing with eval.parent(), you _are_ telling R
> what environment to work in, and things have the potential to go wrong
> at that point because you're telling R to work in environment you don't
> know anything about. Having to be explicit with a :: is just
> compensating for an earlier thing you "shouldn't need to" be doing with
> environments (in my opinion.)

  What would your preferred idiom be for this task (calling another
function with all of the arguments of the previous call, without
uglifying the call in the process)?  I read your e-mail about making the
comparison with S3 method dispatch, but to be honest I don't understand
it very well -- don't know if those particular techniques are applicable
here ... ?

  Ben

> 
> 
> On Fri, Jun 28, 2013 at 9:42 AM, Ben Bolker <bbolker at gmail.com
> <mailto:bbolker at gmail.com>> wrote:
> 
>     Duncan Murdoch <murdoch.duncan <at> gmail.com <http://gmail.com>>
>     writes:
> 
>     >
> 
>     [snip]
>     >
>     > The other choice is to use the explicit ::, i.e.
>     >
>     > mc[[1]] <- quote(lmer::lFormula)
>     >
>     > This would be the solution I'd prefer, but you seem to have some
>     > prejudice against :: .
>     >
> 
>       I just thought that the whole point of using the machinery of
>     namespaces, environments, etc., was that we shouldn't need to
>     tell R explicitly what environment we were working in ...
> 
>     ______________________________________________
>     R-devel at r-project.org <mailto:R-devel at r-project.org> mailing list
>     https://stat.ethz.ch/mailman/listinfo/r-devel
> 
>


From peter.meilstrup at gmail.com  Sat Jun 29 05:50:33 2013
From: peter.meilstrup at gmail.com (Peter Meilstrup)
Date: Fri, 28 Jun 2013 20:50:33 -0700
Subject: [Rd] problem with eval(...,
	parent.frame(1L)) when package is not loaded
Message-ID: <CAJoaRhbK6xJOaeKuDGPuqJsws2iPwx_HKMuVHxukXWcRWwmhWA@mail.gmail.com>

An embedded and charset-unspecified text was scrubbed...
Name: not available
URL: <https://stat.ethz.ch/pipermail/r-devel/attachments/20130628/b5c85bac/attachment.pl>

From johnzhao2835 at gmail.com  Sat Jun 29 17:14:30 2013
From: johnzhao2835 at gmail.com (Ziqiang Zhao)
Date: Sat, 29 Jun 2013 23:14:30 +0800
Subject: [Rd] Save R Objects in C Code
In-Reply-To: <51CAA6E6.6040303@stats.ox.ac.uk>
References: <000301ce7245$a9a92eb0$fcfb8c10$@gmail.com>
	<51CAA6E6.6040303@stats.ox.ac.uk>
Message-ID: <000001ce74db$5c795b40$156c11c0$@gmail.com>

Thanks for your help.
Since I don't know how to reference the current environment, I create a new
one to do so.
It seems that it works.
Not sure if it is helpful to anyone else out there, but here is my solution:
SEXP Save(SEXP X,SEXP File)
{
	char Name='X';

	SEXP EnvList;
	PROTECT(EnvList=allocList(1));
	SET_TAG(EnvList,install(&Name));
	SETCAR(EnvList,X);

	SEXP Env;
	PROTECT(Env=allocSExp(ENVSXP));
	SET_FRAME(Env,EnvList);
	SET_ENCLOS(Env,R_BaseEnv);
	SET_HASHTAB(Env,R_NilValue);
	SET_ATTRIB(Env,R_NilValue);

	int L=length(STRING_ELT(File,0));

	char *CMD=(char *)malloc((L+18)*sizeof(double));
	CMD[0]='s';CMD[1]='a';
CMD[2]='v';CMD[3]='e';CMD[4]='(';CMD[5]='X';CMD[6]=',';CMD[7]='f';CMD[8]='i'
;CMD[9]='l';CMD[10]='e';CMD[11]='=';CMD[12]='"';
	for(int k=0;k<L;k++)
	{
		CMD[k+13]=CHAR(STRING_ELT(File,0))[k];
	}
	CMD[L+13]='"';	CMD[L+14]=')';	CMD[L+15]=';';
CMD[L+16]='\n';CMD[L+17]='\0';

	SEXP RCMD,REXP;
	PROTECT(RCMD=allocVector(STRSXP,1));
	SET_STRING_ELT(RCMD,0,mkChar(CMD));
	ParseStatus Status;
	REXP=PROTECT(R_ParseVector(RCMD,-1,&Status,R_NilValue));
	eval(VECTOR_ELT(REXP,0),Env);
	UNPROTECT(4);
	return R_NilValue;
}

--------------------
Ziqiang Zhao
2013-06-29

-----Original Message-----
From: Prof Brian Ripley [mailto:ripley at stats.ox.ac.uk] 
Sent: Wednesday, June 26, 2013 4:32 PM
To: johnzhao2835 at gmail.com
Cc: r-devel at r-project.org
Subject: Re: [Rd] Save R Objects in C Code

On 26/06/2013 09:17, Ziqiang Zhao wrote:
> Dear all,
>
>                  How do I save the R objects in C code?
>
>                  In R code, we use save(x,y,file="F.RData") to save x 
> and y in "F.RData".
>
>                  But what should I do in C?

Call that R code (using eval).

If you look at the R code for save() you will see that a substantial amount
of it is interpreted code.

>
> --------------------
>
> Ziqiang Zhao
>
> 2013-06-26
>
>
>
>
> 	[[alternative HTML version deleted]]

Please see the posting guide and what it says about HTML mail.

-- 
Brian D. Ripley,                  ripley at stats.ox.ac.uk
Professor of Applied Statistics,  http://www.stats.ox.ac.uk/~ripley/
University of Oxford,             Tel:  +44 1865 272861 (self)
1 South Parks Road,                     +44 1865 272866 (PA)
Oxford OX1 3TG, UK                Fax:  +44 1865 272595


From simon.urbanek at r-project.org  Sun Jun 30 16:29:09 2013
From: simon.urbanek at r-project.org (Simon Urbanek)
Date: Sun, 30 Jun 2013 10:29:09 -0400
Subject: [Rd] Save R Objects in C Code
In-Reply-To: <000001ce74db$5c795b40$156c11c0$@gmail.com>
References: <000301ce7245$a9a92eb0$fcfb8c10$@gmail.com>
	<51CAA6E6.6040303@stats.ox.ac.uk>
	<000001ce74db$5c795b40$156c11c0$@gmail.com>
Message-ID: <54D8EA0D-8E74-4FBE-9091-CB151847F75F@r-project.org>

On Jun 29, 2013, at 11:14 AM, Ziqiang Zhao wrote:

> Thanks for your help.
> Since I don't know how to reference the current environment, I create a new
> one to do so.
> It seems that it works.
> Not sure if it is helpful to anyone else out there, but here is my solution:

There are tons of issues with this (first I meant to point them all out but then realized it would make the e-mail 10-times longer than the original code). So to other readers, do not use that code! Not only is it ugly, but it has overflows, leaks and it uses API calls that do something entirely different than what the author thought they do. In addition, you really don't want to be parsing anything - you can construct LANGSXP directly with the values - there are examples in R-exts how to do that properly. As for the environment - if you don't know what you're doing, just use R_GlobalEnv - it's the closes to what most people need (if you need something else then you know how to get that env ;)).

Cheers,
Simon


> SEXP Save(SEXP X,SEXP File)
> {
> 	char Name='X';
> 
> 	SEXP EnvList;
> 	PROTECT(EnvList=allocList(1));
> 	SET_TAG(EnvList,install(&Name));
> 	SETCAR(EnvList,X);
> 
> 	SEXP Env;
> 	PROTECT(Env=allocSExp(ENVSXP));
> 	SET_FRAME(Env,EnvList);
> 	SET_ENCLOS(Env,R_BaseEnv);
> 	SET_HASHTAB(Env,R_NilValue);
> 	SET_ATTRIB(Env,R_NilValue);
> 
> 	int L=length(STRING_ELT(File,0));
> 
> 	char *CMD=(char *)malloc((L+18)*sizeof(double));
> 	CMD[0]='s';CMD[1]='a';
> CMD[2]='v';CMD[3]='e';CMD[4]='(';CMD[5]='X';CMD[6]=',';CMD[7]='f';CMD[8]='i'
> ;CMD[9]='l';CMD[10]='e';CMD[11]='=';CMD[12]='"';
> 	for(int k=0;k<L;k++)
> 	{
> 		CMD[k+13]=CHAR(STRING_ELT(File,0))[k];
> 	}
> 	CMD[L+13]='"';	CMD[L+14]=')';	CMD[L+15]=';';
> CMD[L+16]='\n';CMD[L+17]='\0';
> 
> 	SEXP RCMD,REXP;
> 	PROTECT(RCMD=allocVector(STRSXP,1));
> 	SET_STRING_ELT(RCMD,0,mkChar(CMD));
> 	ParseStatus Status;
> 	REXP=PROTECT(R_ParseVector(RCMD,-1,&Status,R_NilValue));
> 	eval(VECTOR_ELT(REXP,0),Env);
> 	UNPROTECT(4);
> 	return R_NilValue;
> }
> 
> --------------------
> Ziqiang Zhao
> 2013-06-29
> 
> -----Original Message-----
> From: Prof Brian Ripley [mailto:ripley at stats.ox.ac.uk] 
> Sent: Wednesday, June 26, 2013 4:32 PM
> To: johnzhao2835 at gmail.com
> Cc: r-devel at r-project.org
> Subject: Re: [Rd] Save R Objects in C Code
> 
> On 26/06/2013 09:17, Ziqiang Zhao wrote:
>> Dear all,
>> 
>>                 How do I save the R objects in C code?
>> 
>>                 In R code, we use save(x,y,file="F.RData") to save x 
>> and y in "F.RData".
>> 
>>                 But what should I do in C?
> 
> Call that R code (using eval).
> 
> If you look at the R code for save() you will see that a substantial amount
> of it is interpreted code.
> 
>> 
>> --------------------
>> 
>> Ziqiang Zhao
>> 
>> 2013-06-26
>> 
>> 
>> 
>> 
>> 	[[alternative HTML version deleted]]
> 
> Please see the posting guide and what it says about HTML mail.
> 
> -- 
> Brian D. Ripley,                  ripley at stats.ox.ac.uk
> Professor of Applied Statistics,  http://www.stats.ox.ac.uk/~ripley/
> University of Oxford,             Tel:  +44 1865 272861 (self)
> 1 South Parks Road,                     +44 1865 272866 (PA)
> Oxford OX1 3TG, UK                Fax:  +44 1865 272595
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
> 
> 


