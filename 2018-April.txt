From skostyshak at ufl.edu  Sun Apr  1 06:48:19 2018
From: skostyshak at ufl.edu (Scott Kostyshak)
Date: Sun, 1 Apr 2018 00:48:19 -0400
Subject: [Rd] Mention the case of logical(0) in ?stopifnot
Message-ID: <20180401044819.km73ztdram33bxru@steph>

I wonder if it would be helpful to mention in ?stopifnot that
stopifnot(logical(0)) does not give an error (for background on why this
is the case, see [1]). For example, ?all explicitly mentions the
following:

  That all(logical(0)) is true is a useful convention

and includes an example:

  all(logical(0))  # true, as all zero of the elements are true.

I think it would be nice to give examples in ?stopifnot of calls that
are not ideal uses of the function, such as the poorly written
stopifnot() call that I recently wrote:

  x <- 1:5
  # does not give an error
  stopifnot(ncol(x) == 2)
  # gives an error
  stopifnot(identical(ncol(x), 2L))

Or this code from [2]:

  li <- list()
  li$item <- 1
  # Does not give an error, because
  # "item" is misspelled and "NULL == 0" returns logical(0)
  stopifnot(li$tem == 0)

I think that a useful way to teach users how to use a function is to
teach them how not to use it.

Would a patch for the documentation along these lines be considered?

By the way, there are some regression tests in base R that rely on the
behavior of stopifnot(logical(0)), where the logical(0) results from
`==`. I can make a list of these tests if someone thinks it would be a
good idea to double-check them and possibly improve them (e.g., convert
them to use identical() instead of `==`). I'm guessing it's not worth
the time.

Scott


[1]
https://urldefense.proofpoint.com/v2/url?u=https-3A__stat.ethz.ch_pipermail_r-2Dhelp_2015-2DDecember_434610.html&d=DwIBAg&c=pZJPUDQ3SB9JplYbifm4nt2lEVG5pWx2KikqINpWlZM&r=1fpq0SJ48L-zRWX2t0llEVIDZAHfU8S-4oINHlOA0rk&m=G8tEZpMWPL4vxGGinNsRHdfXpDqiFEownNAdY_AOiUk&s=wxOygcK0MIUDAQhkzjgfT-4edxWNCWluOEgAyR-xCC0&e=
[2]
https://urldefense.proofpoint.com/v2/url?u=https-3A__stackoverflow.com_questions_33670060_how-2Dto-2Dhave-2Dstopifnot-2Dreturn-2Dan-2Derror-2Dwhen-2Dcalled-2Don-2Da-2Dmissing-2Dnull-2Delement&d=DwIBAg&c=pZJPUDQ3SB9JplYbifm4nt2lEVG5pWx2KikqINpWlZM&r=1fpq0SJ48L-zRWX2t0llEVIDZAHfU8S-4oINHlOA0rk&m=G8tEZpMWPL4vxGGinNsRHdfXpDqiFEownNAdY_AOiUk&s=ZCSz07Z1Gz4pAWgw75UUn9wIMI-wCv2Srfkn2MGYYlI&e=


-- 
Scott Kostyshak
Assistant Professor of Economics
University of Florida
https://people.clas.ufl.edu/skostyshak/


From deepayan.sarkar at gmail.com  Mon Apr  2 10:08:08 2018
From: deepayan.sarkar at gmail.com (Deepayan Sarkar)
Date: Mon, 2 Apr 2018 13:38:08 +0530
Subject: [Rd] inappropriate warning in latticeExtra
In-Reply-To: <CAGx1TMCADAAvL0wa6hyHSuRtrrpU1qFNvPpsaorRAtm6P0roaw@mail.gmail.com>
References: <CAGx1TMCADAAvL0wa6hyHSuRtrrpU1qFNvPpsaorRAtm6P0roaw@mail.gmail.com>
Message-ID: <CADfFDC54=15F4F=9FC4QJdPBG+WyAt_SepWJ81FE0aJkP=XA-A@mail.gmail.com>

On Fri, Mar 23, 2018 at 7:58 AM, Richard M. Heiberger <rmh at temple.edu> wrote:
> The warning message in the last line of this email is incorrect.
> This is behavior which Duncan Murdoch labeled a bug in
>    https://stat.ethz.ch/pipermail/r-help/2017-December/450494.html

Yes, sorry, this has been fixed in the r-forge sources for a while
now, but I haven't had the time to finish up some other fixes and push
an update to CRAN.

Hopefully over the summer break.

Regards,
-Deepayan


> This is a fresh install of R-devel (2018-03-21 r74436)
>
>
>
>
> R Under development (unstable) (2018-03-21 r74436) -- "Unsuffered Consequences"
> Copyright (C) 2018 The R Foundation for Statistical Computing
> Platform: x86_64-w64-mingw32/x64 (64-bit)
>
> R is free software and comes with ABSOLUTELY NO WARRANTY.
> You are welcome to redistribute it under certain conditions.
> Type 'license()' or 'licence()' for distribution details.
>
>   Natural language support but running in an English locale
>
> R is a collaborative project with many contributors.
> Type 'contributors()' for more information and
> 'citation()' on how to cite R or R packages in publications.
>
> Type 'demo()' for some demos, 'help()' for on-line help, or
> 'help.start()' for an HTML browser interface to help.
> Type 'q()' to quit R.
>
>> library(latticeExtra)
> Error in library(latticeExtra) :
>   there is no package called ?latticeExtra?
>> install.packages("latticeExtra")
> Warning in install.packages("latticeExtra") :
>   'lib = "C:/Program Files/R/R-devel/library"' is not writable
> --- Please select a CRAN mirror for use in this session ---
> also installing the dependency ?RColorBrewer?
>
> Warning: unable to access index for repository
> http://www.stats.ox.ac.uk/pub/RWin/bin/windows/contrib/3.5:
>   cannot open URL
> 'http://www.stats.ox.ac.uk/pub/RWin/bin/windows/contrib/3.5/PACKAGES'
> trying URL 'https://cran.wu.ac.at/bin/windows/contrib/3.5/RColorBrewer_1.1-2.zip'
> Content type 'application/zip' length 55444 bytes (54 KB)
> downloaded 54 KB
>
> trying URL 'https://cran.wu.ac.at/bin/windows/contrib/3.5/latticeExtra_0.6-28.zip'
> Content type 'application/zip' length 2191524 bytes (2.1 MB)
> downloaded 2.1 MB
>
> package ?RColorBrewer? successfully unpacked and MD5 sums checked
> package ?latticeExtra? successfully unpacked and MD5 sums checked
>
> The downloaded binary packages are in
>         C:\Users\rmh.DESKTOP-60G4CCO\AppData\Local\Temp\RtmpqA7Rqg\downloaded_packages
>> library(latticeExtra)
> Loading required package: lattice
> Loading required package: RColorBrewer
>> a <- xyplot(1 ~ 1)
>> c(a,a)
> Warning message:
> In formals(fun) : argument is not a function
>>
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From winstonchang1 at gmail.com  Mon Apr  2 19:23:06 2018
From: winstonchang1 at gmail.com (Winston Chang)
Date: Mon, 2 Apr 2018 12:23:06 -0500
Subject: [Rd] recordPlot/replayPlot not working with saveRDS/readRDS
Message-ID: <CAFOpNVE7oyo1P_JUeQbXcO_YbabXRcMoogeV=3ULesoX5BdfdQ@mail.gmail.com>

The documentation for recordPlot says the following:

> As of R 3.3.0, it is possible (again) to replay a plot from another R session using, for example, saveRDS and readRDS.

However, I haven't been able to save and restore a plot displaylist
and have it work within the same R session, using R 3.4.3 or 3.3.3.
Here's an example:

# Save displaylist for a simple plot
png('test.png')
dev.control(displaylist ="enable")
plot(1:5, 1:5)
r <- recordPlot()
dev.off()

# Replay plot. This works.
png('test1.png')
replayPlot(r)
dev.off()

#  Save the plot and load it, then try to replay it. This does not work.
saveRDS(r, 'recordedplot.rds')
r2 <- readRDS('recordedplot.rds')
png('test2.png')
replayPlot(r2)  ## Error: NULL value passed as symbol address
dev.off()


Is there something that I'm doing wrong here?


From paul at stat.auckland.ac.nz  Mon Apr  2 23:41:56 2018
From: paul at stat.auckland.ac.nz (Paul Murrell)
Date: Tue, 3 Apr 2018 09:41:56 +1200
Subject: [Rd] [FORGED] recordPlot/replayPlot not working with
 saveRDS/readRDS
In-Reply-To: <CAFOpNVE7oyo1P_JUeQbXcO_YbabXRcMoogeV=3ULesoX5BdfdQ@mail.gmail.com>
References: <CAFOpNVE7oyo1P_JUeQbXcO_YbabXRcMoogeV=3ULesoX5BdfdQ@mail.gmail.com>
Message-ID: <92ecddb0-a17f-080c-ecaa-5702342f9590@stat.auckland.ac.nz>

Hi

What you are doing "wrong" is loading a recordedplot into the same 
session that it was created in.  The saveRDS()/readRDS() works if you 
save in one R session and then read in a different R session.  The 
assumption is that if you are still in the same session that created the 
recordedplot you still have the recordedplot (e.g., you can just do 
replayPlot(r) instead of replayPlot(r2).  Is that a bad assumption ?

Paul

On 03/04/18 05:23, Winston Chang wrote:
> The documentation for recordPlot says the following:
> 
>> As of R 3.3.0, it is possible (again) to replay a plot from another R session using, for example, saveRDS and readRDS.
> 
> However, I haven't been able to save and restore a plot displaylist
> and have it work within the same R session, using R 3.4.3 or 3.3.3.
> Here's an example:
> 
> # Save displaylist for a simple plot
> png('test.png')
> dev.control(displaylist ="enable")
> plot(1:5, 1:5)
> r <- recordPlot()
> dev.off()
> 
> # Replay plot. This works.
> png('test1.png')
> replayPlot(r)
> dev.off()
> 
> #  Save the plot and load it, then try to replay it. This does not work.
> saveRDS(r, 'recordedplot.rds')
> r2 <- readRDS('recordedplot.rds')
> png('test2.png')
> replayPlot(r2)  ## Error: NULL value passed as symbol address
> dev.off()
> 
> 
> Is there something that I'm doing wrong here?
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
> 

-- 
Dr Paul Murrell
Department of Statistics
The University of Auckland
Private Bag 92019
Auckland
New Zealand
64 9 3737599 x85392
paul at stat.auckland.ac.nz
http://www.stat.auckland.ac.nz/~paul/


From maechler at stat.math.ethz.ch  Tue Apr  3 11:37:04 2018
From: maechler at stat.math.ethz.ch (Martin Maechler)
Date: Tue, 3 Apr 2018 11:37:04 +0200
Subject: [Rd] Base R examples that write to current working directory
In-Reply-To: <CAFDcVCTu5Cz4r4LFnzBxr4pSp1rzKW8imVBH-3U2zNr2YkS3Vg@mail.gmail.com>
References: <CABdHhvEDW3nCgwNAXjNcpFtJSM_d=xooX4infq6oTfmctiU3DQ@mail.gmail.com>
 <697bd1b5-4c56-d9b4-55d1-bb70b12aee0c@gmail.com>
 <672879f7-c30d-59ff-fb78-2be575b49002@statistik.tu-dortmund.de>
 <CAFDcVCTu5Cz4r4LFnzBxr4pSp1rzKW8imVBH-3U2zNr2YkS3Vg@mail.gmail.com>
Message-ID: <23235.19264.599579.492157@stat.math.ethz.ch>

>>>>> Henrik Bengtsson <henrik.bengtsson at gmail.com>
>>>>>     on Fri, 30 Mar 2018 10:14:04 -0700 writes:

    > So, the proposal would then be to write to tempdir(),
    > correct?  If so, I see three alternatives:

    > 1. explicitly use file.path(tempdir(), filename), or
    > tempfile() everywhere.

I think it should clearly be  '1.',
as both '2.' and '3.' would need new functionality in R.

Ideally we'd get the patch within a day or two, so we can safely
apply it also to  R 3.5.0 alpha  (before it turns beta!).

I think the 'eval.path' argument to example() is a nice idea,
but also changing its default to  tempdir() is definitely out of
the question for R 3.5.0.

Martin


    > 2. wrap example code in a withTempDir({ ... }) call.

    > 3. Add an 'eval.path' (*) argument to example() and make
    > it default to eval.path = tempdir(). This would probably
    > be backward compatible and keep the code example clean.
    > The downside is when a user runs an example and can't
    > locate produced files. (*) or 'wd', 'workdir', ...

    > /Henrik

    > On Fri, Mar 30, 2018 at 9:25 AM, Uwe Ligges
    > <ligges at statistik.tu-dortmund.de> wrote:
    >> 
    >> 
    >> On 30.03.2018 00:08, Duncan Murdoch wrote:
    >>> 
    >>> On 29/03/2018 5:23 PM, Hadley Wickham wrote:
    >>>> 
    >>>> Hi all,
    >>>> 
    >>>> Given the recent CRAN push to prevent examples writing
    >>>> to the working directory, is there any interest in
    >>>> fixing base R examples that write to the working
    >>>> directory? A few candidates are the graphics devices,
    >>>> file.create(), writeBin(), writeChar(), write(), and
    >>>> saveRDS(). I'm sure there are many more.
    >>>> 
    >>>> One way to catch these naughty examples would be to
    >>>> search for unlink() in examples: e.g.,
    >>>> 
    >>>> https://github.com/wch/r-source/search?utf8=?&q=unlink+extension%3ARd&type=.
    >>>> Of course, simply cleaning up after yourself is not
    >>>> sufficient because if those files existed before the
    >>>> examples were run, the examples will destroy them.
    >>>> 
    >>> 
    >>> Why not put together a patch that fixes these?  This
    >>> doesn't seem to be something that needs discussion,
    >>> fixing the bad examples would be a good idea.
    >> 
    >> 
    >> Seconded. CRAN would not accept these base packages,
    >> hence we should urgently give better examples.
    >> 
    >> Best, Uwe
    >> 
    >> 
    >> 
    >>> Duncan Murdoch
    >>> 
    >>> ______________________________________________
    >>> R-devel at r-project.org mailing list
    >>> https://stat.ethz.ch/mailman/listinfo/r-devel
    >> 
    >> 
    >> ______________________________________________
    >> R-devel at r-project.org mailing list
    >> https://stat.ethz.ch/mailman/listinfo/r-devel

    > ______________________________________________
    > R-devel at r-project.org mailing list
    > https://stat.ethz.ch/mailman/listinfo/r-devel


From maechler at stat.math.ethz.ch  Tue Apr  3 16:07:01 2018
From: maechler at stat.math.ethz.ch (Martin Maechler)
Date: Tue, 3 Apr 2018 16:07:01 +0200
Subject: [Rd] [FORGED] recordPlot/replayPlot not working with
 saveRDS/readRDS
In-Reply-To: <92ecddb0-a17f-080c-ecaa-5702342f9590@stat.auckland.ac.nz>
References: <CAFOpNVE7oyo1P_JUeQbXcO_YbabXRcMoogeV=3ULesoX5BdfdQ@mail.gmail.com>
 <92ecddb0-a17f-080c-ecaa-5702342f9590@stat.auckland.ac.nz>
Message-ID: <23235.35461.48296.589585@stat.math.ethz.ch>

>>>>> Paul Murrell <paul at stat.auckland.ac.nz>
>>>>>     on Tue, 3 Apr 2018 09:41:56 +1200 writes:

    > Hi What you are doing "wrong" is loading a recordedplot
    > into the same session that it was created in.  The
    > saveRDS()/readRDS() works if you save in one R session and
    > then read in a different R session.  The assumption is
    > that if you are still in the same session that created the
    > recordedplot you still have the recordedplot (e.g., you
    > can just do replayPlot(r) instead of replayPlot(r2).  Is
    > that a bad assumption ?

Not "bad", really,  but somewhat *un*intuitive I believe to most
users, including me.
I would have done the same as Winston to check if saving and
loading of a recorded plot work fine.

Also, the error message we get is not very helpful:

    > saveRDS(r, 'recordedplot.rds')
    > r <- readRDS('recordedplot.rds')
    > png('test2.png')
    > replayPlot(r)
    Error: NULL value passed as symbol address

{coming from deep down: checkValidSymbolId() in src/main/dotcode.c }

I've pondered a bit and in the end found it easy enough to
tryCatch() the error, and "do the right thing" instead.
As that should typically only happen in exactly such a use case,
the change should be "uniformly >=" the previous state.

Ideally, maybe we (R core) would provide an R level API to a
"TRUE/FALSE" valued version of checkValidSymbolId() or its
caller, so that *from R code* one could check if the
recordedplot 'x' passed to replayPlot() with its external
pointers needs to be fixed up by
     x <- restoreRecordedPlot(x)
or not.

But that would be another topic I'd not get envolved deeply just now.

Martin

> Paul
> 
> On 03/04/18 05:23, Winston Chang wrote:
> > The documentation for recordPlot says the following:
> > 
> >> As of R 3.3.0, it is possible (again) to replay a plot from another R session using, for example, saveRDS and readRDS.
> > 
> > However, I haven't been able to save and restore a plot displaylist
> > and have it work within the same R session, using R 3.4.3 or 3.3.3.
> > Here's an example:
> > 
> > # Save displaylist for a simple plot
> > png('test.png')
> > dev.control(displaylist ="enable")
> > plot(1:5, 1:5)
> > r <- recordPlot()
> > dev.off()
> > 
> > # Replay plot. This works.
> > png('test1.png')
> > replayPlot(r)
> > dev.off()
> > 
> > #  Save the plot and load it, then try to replay it. This does not work.
> > saveRDS(r, 'recordedplot.rds')
> > r2 <- readRDS('recordedplot.rds')
> > png('test2.png')
> > replayPlot(r2)  ## Error: NULL value passed as symbol address
> > dev.off()
> > 
> > 
> > Is there something that I'm doing wrong here?
> > 
> > ______________________________________________
> > R-devel at r-project.org mailing list
> > https://stat.ethz.ch/mailman/listinfo/r-devel
> 
> -- 
> Dr Paul Murrell
> Department of Statistics
> The University of Auckland


From francois.rousset at umontpellier.fr  Tue Apr  3 16:38:42 2018
From: francois.rousset at umontpellier.fr (Francois Rousset)
Date: Tue, 3 Apr 2018 16:38:42 +0200
Subject: [Rd] names lost in functions from packages installed by R-devel
 r74500
Message-ID: <cde5f0e1-40f5-9b58-38c6-6bcbad22bcc5@umontpellier.fr>

Dear list members,

If I install with R-devel r74500 on Windows (sessionInfo below) the 
attached 'bugdemo' package with the single function

foo <- function() {
 ? named <- c("bar"=TRUE)
 ? print(named)
 ? return(named)
}

then run

 > bugdemo::foo()
[1] TRUE
[1] TRUE

The "bar" name is lost. It is not lost when I define foo in the R 
session instead of using its packaged version.

To reproduce:

=======================================

install.packages("bugdemo_0.1.1.tar.gz",type="source",repos=NULL)

bugdemo::foo()

=======================================

I also tested whether this was a problem with the "R CMD build" step or 
the "install.packages()" step by building with R 3.4.4 and installing 
with R-devel, and reciprocally, and the problem appears to be in the 
install step of R-devel.

F.

=============

 > sessionInfo()
R Under development (unstable) (2018-03-31 r74500)
Platform: x86_64-w64-mingw32/x64 (64-bit)
Running under: Windows 7 x64 (build 7601) Service Pack 1

Matrix products: default

locale:
[1] LC_COLLATE=French_France.1252? LC_CTYPE=French_France.1252 
LC_MONETARY=French_France.1252
[4] LC_NUMERIC=C?????????????????? LC_TIME=French_France.1252

attached base packages:
[1] stats???? graphics? grDevices utils???? datasets? methods base

other attached packages:
[1] bugdemo_0.1.1

loaded via a namespace (and not attached):
[1] compiler_3.6.0? tools_3.6.0???? withr_2.1.2 memoise_1.1.0?? 
digest_0.6.15?? devtools_1.13.5
 >


-- 
Fran?ois Rousset
CNRS research scientist 
<http://www.isem.univ-montp2.fr/recherche/teams/evolutionary-genetics/staff/roussetfrancois/?lang=en> 
- Institut des Sciences de l'Evolution (ISE-M)
Universit? de Montpellier - Dept. Scientifique B3ESTE


-------------- next part --------------
A non-text attachment was scrubbed...
Name: bugdemo_0.1.1.tar.gz
Type: application/gzip
Size: 728 bytes
Desc: not available
URL: <https://stat.ethz.ch/pipermail/r-devel/attachments/20180403/bf16da0c/attachment.gz>

From maechler at stat.math.ethz.ch  Tue Apr  3 17:03:02 2018
From: maechler at stat.math.ethz.ch (Martin Maechler)
Date: Tue, 3 Apr 2018 17:03:02 +0200
Subject: [Rd] names lost in functions from packages installed by R-devel
 r74500
In-Reply-To: <cde5f0e1-40f5-9b58-38c6-6bcbad22bcc5@umontpellier.fr>
References: <cde5f0e1-40f5-9b58-38c6-6bcbad22bcc5@umontpellier.fr>
Message-ID: <23235.38822.497055.259303@stat.math.ethz.ch>

>>>>> Francois Rousset <francois.rousset at umontpellier.fr>
>>>>>     on Tue, 3 Apr 2018 16:38:42 +0200 writes:

    > Dear list members,
    > If I install with R-devel r74500 on Windows (sessionInfo below) the 
    > attached 'bugdemo' package with the single function

    > foo <- function() {
    > ? named <- c("bar"=TRUE)
    > ? print(named)
    > ? return(named)
    > }

    > then run

    >> bugdemo::foo()
    > [1] TRUE
    > [1] TRUE

    > The "bar" name is lost. It is not lost when I define foo in the R 
    > session instead of using its packaged version.

    > To reproduce:

    > =======================================

    > install.packages("bugdemo_0.1.1.tar.gz",type="source",repos=NULL)

    > bugdemo::foo()



    > =======================================

    > I also tested whether this was a problem with the "R CMD build" step or 
    > the "install.packages()" step by building with R 3.4.4 and installing 
    > with R-devel, and reciprocally, and the problem appears to be in the 
    > install step of R-devel.

Confirmed.

It is a bug somewhere between the byte compiler and
(de)serialization .. really beyond my own expertise:

If you install  without byte compilation *),  foo() behaves as
expected, i.e., does not "lose" the names.

On the other hand, as you mention, if you define foo in the
globalenv, and call it, the JIT kicks in pretty quickly and you
can see that 'foo' is byte compiled as well, but it still does not break.

This is pretty important, so thank you very much for the nice
reproducible report!

Martin Maechler
ETH Zurich

---
*) R-devel CMD INSTALL --no-byte-compile -l ...

    > F.

    > =============

    >> sessionInfo()
    > R Under development (unstable) (2018-03-31 r74500)
    > Platform: x86_64-w64-mingw32/x64 (64-bit)
    > Running under: Windows 7 x64 (build 7601) Service Pack 1

    > Matrix products: default

    > locale:
    > [1] LC_COLLATE=French_France.1252? LC_CTYPE=French_France.1252 
    > LC_MONETARY=French_France.1252
    > [4] LC_NUMERIC=C?????????????????? LC_TIME=French_France.1252

    > attached base packages:
    > [1] stats???? graphics? grDevices utils???? datasets? methods base

    > other attached packages:
    > [1] bugdemo_0.1.1

    > loaded via a namespace (and not attached):
    > [1] compiler_3.6.0? tools_3.6.0???? withr_2.1.2 memoise_1.1.0?? 
    > digest_0.6.15?? devtools_1.13.5
    >> 


    > -- 
    > Fran?ois Rousset
    > CNRS research scientist 
    > <http://www.isem.univ-montp2.fr/recherche/teams/evolutionary-genetics/staff/roussetfrancois/?lang=en> 
    > - Institut des Sciences de l'Evolution (ISE-M)
    > Universit? de Montpellier - Dept. Scientifique B3ESTE

    > x[DELETED ATTACHMENT external: bugdemo_0.1.1.tar.gz, application/gzip]
    > ______________________________________________
    > R-devel at r-project.org mailing list
    > https://stat.ethz.ch/mailman/listinfo/r-devel


From maechler at stat.math.ethz.ch  Tue Apr  3 19:14:30 2018
From: maechler at stat.math.ethz.ch (Martin Maechler)
Date: Tue, 3 Apr 2018 19:14:30 +0200
Subject: [Rd] names lost in functions from packages installed by R-devel
 r74500
In-Reply-To: <23235.38822.497055.259303@stat.math.ethz.ch>
References: <cde5f0e1-40f5-9b58-38c6-6bcbad22bcc5@umontpellier.fr>
 <23235.38822.497055.259303@stat.math.ethz.ch>
Message-ID: <23235.46710.747326.101066@stat.math.ethz.ch>

>>>>> Martin Maechler <maechler at stat.math.ethz.ch>
>>>>>     on Tue, 3 Apr 2018 17:03:02 +0200 writes:

>>>>> Francois Rousset <francois.rousset at umontpellier.fr>
>>>>>     on Tue, 3 Apr 2018 16:38:42 +0200 writes:

    >> Dear list members,
    >> If I install with R-devel r74500 on Windows (sessionInfo below) the 
    >> attached 'bugdemo' package with the single function

    >> foo <- function() {
    >> ? named <- c("bar"=TRUE)
    >> ? print(named)
    >> ? return(named)
    >> }

    >> then run

    >>> bugdemo::foo()
    >> [1] TRUE
    >> [1] TRUE

    >> The "bar" name is lost. It is not lost when I define foo in the R 
    >> session instead of using its packaged version.

    >> To reproduce:

    >> =======================================

    >> install.packages("bugdemo_0.1.1.tar.gz",type="source",repos=NULL)

    >> bugdemo::foo()



    >> =======================================

    >> I also tested whether this was a problem with the "R CMD build" step or 
    >> the "install.packages()" step by building with R 3.4.4 and installing 
    >> with R-devel, and reciprocally, and the problem appears to be in the 
    >> install step of R-devel.

    > Confirmed.

    > It is a bug somewhere between the byte compiler and
    > (de)serialization .. really beyond my own expertise:

    > If you install  without byte compilation *),  foo() behaves as
    > expected, i.e., does not "lose" the names.

    > On the other hand, as you mention, if you define foo in the
    > globalenv, and call it, the JIT kicks in pretty quickly and you
    > can see that 'foo' is byte compiled as well, but it still does not break.

    > This is pretty important, so thank you very much for the nice
    > reproducible report!

    > Martin Maechler
    > ETH Zurich

    > ---
    > *) R-devel CMD INSTALL --no-byte-compile -l ...

This has been fixed now, both in R-devel (svn rev 74511)
and in R 3.5.0 alpha (r 74513).

I was wrong in that this was related to (de)serialization.
Rather I had forgotten that JIT (just in time) compilation and
explicit compilation may differ in their results.

Thank you again for the report!

Martin Maechler
ETH Zurich



    >> =============

    >>> sessionInfo()
    >> R Under development (unstable) (2018-03-31 r74500)

    [ ........... ]


From luke-tierney at uiowa.edu  Tue Apr  3 20:00:14 2018
From: luke-tierney at uiowa.edu (luke-tierney at uiowa.edu)
Date: Tue, 3 Apr 2018 13:00:14 -0500 (CDT)
Subject: [Rd] names lost in functions from packages installed by R-devel
 r74500
In-Reply-To: <23235.46710.747326.101066@stat.math.ethz.ch>
References: <cde5f0e1-40f5-9b58-38c6-6bcbad22bcc5@umontpellier.fr>
 <23235.38822.497055.259303@stat.math.ethz.ch>
 <23235.46710.747326.101066@stat.math.ethz.ch>
Message-ID: <alpine.DEB.2.20.1804031256460.2968@luke-Latitude>

On Tue, 3 Apr 2018, Martin Maechler wrote:

>>>>>> Martin Maechler <maechler at stat.math.ethz.ch>
>>>>>>     on Tue, 3 Apr 2018 17:03:02 +0200 writes:
>
>>>>>> Francois Rousset <francois.rousset at umontpellier.fr>
>>>>>>     on Tue, 3 Apr 2018 16:38:42 +0200 writes:
>
>    >> Dear list members,
>    >> If I install with R-devel r74500 on Windows (sessionInfo below) the
>    >> attached 'bugdemo' package with the single function
>
>    >> foo <- function() {
>    >> ? named <- c("bar"=TRUE)
>    >> ? print(named)
>    >> ? return(named)
>    >> }
>
>    >> then run
>
>    >>> bugdemo::foo()
>    >> [1] TRUE
>    >> [1] TRUE
>
>    >> The "bar" name is lost. It is not lost when I define foo in the R
>    >> session instead of using its packaged version.
>
>    >> To reproduce:
>
>    >> =======================================
>
>    >> install.packages("bugdemo_0.1.1.tar.gz",type="source",repos=NULL)
>
>    >> bugdemo::foo()
>
>
>
>    >> =======================================
>
>    >> I also tested whether this was a problem with the "R CMD build" step or
>    >> the "install.packages()" step by building with R 3.4.4 and installing
>    >> with R-devel, and reciprocally, and the problem appears to be in the
>    >> install step of R-devel.
>
>    > Confirmed.
>
>    > It is a bug somewhere between the byte compiler and
>    > (de)serialization .. really beyond my own expertise:
>
>    > If you install  without byte compilation *),  foo() behaves as
>    > expected, i.e., does not "lose" the names.
>
>    > On the other hand, as you mention, if you define foo in the
>    > globalenv, and call it, the JIT kicks in pretty quickly and you
>    > can see that 'foo' is byte compiled as well, but it still does not break.
>
>    > This is pretty important, so thank you very much for the nice
>    > reproducible report!
>
>    > Martin Maechler
>    > ETH Zurich
>
>    > ---
>    > *) R-devel CMD INSTALL --no-byte-compile -l ...
>
> This has been fixed now, both in R-devel (svn rev 74511)
> and in R 3.5.0 alpha (r 74513).
>
> I was wrong in that this was related to (de)serialization.
> Rather I had forgotten that JIT (just in time) compilation and
> explicit compilation may differ in their results.

Actually the difference is that a function defined in a package is
compiled with more optimizations than one defined at session top
level.  A change had broken a piece of the optimization code, and has
now been fixed. Thanks for the report.

Best,

luke

>
> Thank you again for the report!
>
> Martin Maechler
> ETH Zurich
>
>
>
>    >> =============
>
>    >>> sessionInfo()
>    >> R Under development (unstable) (2018-03-31 r74500)
>
>    [ ........... ]
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>

-- 
Luke Tierney
Ralph E. Wareham Professor of Mathematical Sciences
University of Iowa                  Phone:             319-335-3386
Department of Statistics and        Fax:               319-335-3017
    Actuarial Science
241 Schaeffer Hall                  email:   luke-tierney at uiowa.edu
Iowa City, IA 52242                 WWW:  http://www.stat.uiowa.edu

From winstonchang1 at gmail.com  Tue Apr  3 20:17:11 2018
From: winstonchang1 at gmail.com (Winston Chang)
Date: Tue, 3 Apr 2018 13:17:11 -0500
Subject: [Rd] [FORGED] recordPlot/replayPlot not working with
 saveRDS/readRDS
In-Reply-To: <92ecddb0-a17f-080c-ecaa-5702342f9590@stat.auckland.ac.nz>
References: <CAFOpNVE7oyo1P_JUeQbXcO_YbabXRcMoogeV=3ULesoX5BdfdQ@mail.gmail.com>
 <92ecddb0-a17f-080c-ecaa-5702342f9590@stat.auckland.ac.nz>
Message-ID: <CAFOpNVGfKtQbxeCR5BtCfC9T3f8dZc4sgvDo1U6nESt0C_a5wg@mail.gmail.com>

On Mon, Apr 2, 2018 at 4:41 PM, Paul Murrell <paul at stat.auckland.ac.nz> wrote:
> Hi
>
> What you are doing "wrong" is loading a recordedplot into the same session
> that it was created in.  The saveRDS()/readRDS() works if you save in one R
> session and then read in a different R session.  The assumption is that if
> you are still in the same session that created the recordedplot you still
> have the recordedplot (e.g., you can just do replayPlot(r) instead of
> replayPlot(r2).  Is that a bad assumption ?
>
> Paul

For my particular case, the goal is to cache many plots to disk so
that they can be replayed later, but still in the same R session. The
plots may be replayed in the current session, and they may be replayed
in a future one. Using a disk cache seems like a straightforward way
to make the cached plots work for both cases. Also, the number of
plots is such that a memory-based cache could consume significant
amounts of memory.

-Winston


From paul at stat.auckland.ac.nz  Tue Apr  3 22:03:35 2018
From: paul at stat.auckland.ac.nz (Paul Murrell)
Date: Wed, 4 Apr 2018 08:03:35 +1200
Subject: [Rd] [FORGED] recordPlot/replayPlot not working with
 saveRDS/readRDS
In-Reply-To: <23235.35461.48296.589585@stat.math.ethz.ch>
References: <CAFOpNVE7oyo1P_JUeQbXcO_YbabXRcMoogeV=3ULesoX5BdfdQ@mail.gmail.com>
 <92ecddb0-a17f-080c-ecaa-5702342f9590@stat.auckland.ac.nz>
 <23235.35461.48296.589585@stat.math.ethz.ch>
Message-ID: <4e26d10a-0c7d-29f6-cbda-1755bdd21352@stat.auckland.ac.nz>


Thanks for the fix Martin.

Paul

On 04/04/18 02:07, Martin Maechler wrote:
>>>>>> Paul Murrell <paul at stat.auckland.ac.nz>
>>>>>>      on Tue, 3 Apr 2018 09:41:56 +1200 writes:
> 
>      > Hi What you are doing "wrong" is loading a recordedplot
>      > into the same session that it was created in.  The
>      > saveRDS()/readRDS() works if you save in one R session and
>      > then read in a different R session.  The assumption is
>      > that if you are still in the same session that created the
>      > recordedplot you still have the recordedplot (e.g., you
>      > can just do replayPlot(r) instead of replayPlot(r2).  Is
>      > that a bad assumption ?
> 
> Not "bad", really,  but somewhat *un*intuitive I believe to most
> users, including me.
> I would have done the same as Winston to check if saving and
> loading of a recorded plot work fine.
> 
> Also, the error message we get is not very helpful:
> 
>      > saveRDS(r, 'recordedplot.rds')
>      > r <- readRDS('recordedplot.rds')
>      > png('test2.png')
>      > replayPlot(r)
>      Error: NULL value passed as symbol address
> 
> {coming from deep down: checkValidSymbolId() in src/main/dotcode.c }
> 
> I've pondered a bit and in the end found it easy enough to
> tryCatch() the error, and "do the right thing" instead.
> As that should typically only happen in exactly such a use case,
> the change should be "uniformly >=" the previous state.
> 
> Ideally, maybe we (R core) would provide an R level API to a
> "TRUE/FALSE" valued version of checkValidSymbolId() or its
> caller, so that *from R code* one could check if the
> recordedplot 'x' passed to replayPlot() with its external
> pointers needs to be fixed up by
>       x <- restoreRecordedPlot(x)
> or not.
> 
> But that would be another topic I'd not get envolved deeply just now.
> 
> Martin
> 
>> Paul
>>
>> On 03/04/18 05:23, Winston Chang wrote:
>>> The documentation for recordPlot says the following:
>>>
>>>> As of R 3.3.0, it is possible (again) to replay a plot from another R session using, for example, saveRDS and readRDS.
>>>
>>> However, I haven't been able to save and restore a plot displaylist
>>> and have it work within the same R session, using R 3.4.3 or 3.3.3.
>>> Here's an example:
>>>
>>> # Save displaylist for a simple plot
>>> png('test.png')
>>> dev.control(displaylist ="enable")
>>> plot(1:5, 1:5)
>>> r <- recordPlot()
>>> dev.off()
>>>
>>> # Replay plot. This works.
>>> png('test1.png')
>>> replayPlot(r)
>>> dev.off()
>>>
>>> #  Save the plot and load it, then try to replay it. This does not work.
>>> saveRDS(r, 'recordedplot.rds')
>>> r2 <- readRDS('recordedplot.rds')
>>> png('test2.png')
>>> replayPlot(r2)  ## Error: NULL value passed as symbol address
>>> dev.off()
>>>
>>>
>>> Is there something that I'm doing wrong here?
>>>
>>> ______________________________________________
>>> R-devel at r-project.org mailing list
>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>
>> -- 
>> Dr Paul Murrell
>> Department of Statistics
>> The University of Auckland

-- 
Dr Paul Murrell
Department of Statistics
The University of Auckland
Private Bag 92019
Auckland
New Zealand
64 9 3737599 x85392
paul at stat.auckland.ac.nz
http://www.stat.auckland.ac.nz/~paul/


From becker.gabe at gene.com  Wed Apr  4 06:16:12 2018
From: becker.gabe at gene.com (Gabe Becker)
Date: Tue, 3 Apr 2018 21:16:12 -0700
Subject: [Rd] Base R examples that write to current working directory
In-Reply-To: <23235.19264.599579.492157@stat.math.ethz.ch>
References: <CABdHhvEDW3nCgwNAXjNcpFtJSM_d=xooX4infq6oTfmctiU3DQ@mail.gmail.com>
 <697bd1b5-4c56-d9b4-55d1-bb70b12aee0c@gmail.com>
 <672879f7-c30d-59ff-fb78-2be575b49002@statistik.tu-dortmund.de>
 <CAFDcVCTu5Cz4r4LFnzBxr4pSp1rzKW8imVBH-3U2zNr2YkS3Vg@mail.gmail.com>
 <23235.19264.599579.492157@stat.math.ethz.ch>
Message-ID: <CAMFmJsmUCqQQeUoMaYevqwiSF2j=p0nzhuexbVPRMxxbHAXBrA@mail.gmail.com>

Martin et al,

I have submitted a patch on bugzilla which fixes all of the examples I
could easily find which were not already writing only to temporary files or
switching to a temp directory before writing files to the working
directory. https://bugs.r-project.org/bugzilla/show_bug.cgi?id=17403

Passes make check-devel so the examples run and the packages that were
modified pass check.

Best,
~G

On Tue, Apr 3, 2018 at 2:37 AM, Martin Maechler <maechler at stat.math.ethz.ch>
wrote:

> >>>>> Henrik Bengtsson <henrik.bengtsson at gmail.com>
> >>>>>     on Fri, 30 Mar 2018 10:14:04 -0700 writes:
>
>     > So, the proposal would then be to write to tempdir(),
>     > correct?  If so, I see three alternatives:
>
>     > 1. explicitly use file.path(tempdir(), filename), or
>     > tempfile() everywhere.
>
> I think it should clearly be  '1.',
> as both '2.' and '3.' would need new functionality in R.
>
> Ideally we'd get the patch within a day or two, so we can safely
> apply it also to  R 3.5.0 alpha  (before it turns beta!).
>
> I think the 'eval.path' argument to example() is a nice idea,
> but also changing its default to  tempdir() is definitely out of
> the question for R 3.5.0.
>
> Martin
>
>
>     > 2. wrap example code in a withTempDir({ ... }) call.
>
>     > 3. Add an 'eval.path' (*) argument to example() and make
>     > it default to eval.path = tempdir(). This would probably
>     > be backward compatible and keep the code example clean.
>     > The downside is when a user runs an example and can't
>     > locate produced files. (*) or 'wd', 'workdir', ...
>
>     > /Henrik
>
>     > On Fri, Mar 30, 2018 at 9:25 AM, Uwe Ligges
>     > <ligges at statistik.tu-dortmund.de> wrote:
>     >>
>     >>
>     >> On 30.03.2018 00:08, Duncan Murdoch wrote:
>     >>>
>     >>> On 29/03/2018 5:23 PM, Hadley Wickham wrote:
>     >>>>
>     >>>> Hi all,
>     >>>>
>     >>>> Given the recent CRAN push to prevent examples writing
>     >>>> to the working directory, is there any interest in
>     >>>> fixing base R examples that write to the working
>     >>>> directory? A few candidates are the graphics devices,
>     >>>> file.create(), writeBin(), writeChar(), write(), and
>     >>>> saveRDS(). I'm sure there are many more.
>     >>>>
>     >>>> One way to catch these naughty examples would be to
>     >>>> search for unlink() in examples: e.g.,
>     >>>>
>     >>>> https://github.com/wch/r-source/search?utf8=?&q=unlink+
> extension%3ARd&type=
> <https://github.com/wch/r-source/search?utf8=%E2%9C%93&q=unlink+extension%3ARd&type=>
> .
>     >>>> Of course, simply cleaning up after yourself is not
>     >>>> sufficient because if those files existed before the
>     >>>> examples were run, the examples will destroy them.
>     >>>>
>     >>>
>     >>> Why not put together a patch that fixes these?  This
>     >>> doesn't seem to be something that needs discussion,
>     >>> fixing the bad examples would be a good idea.
>     >>
>     >>
>     >> Seconded. CRAN would not accept these base packages,
>     >> hence we should urgently give better examples.
>     >>
>     >> Best, Uwe
>     >>
>     >>
>     >>
>     >>> Duncan Murdoch
>     >>>
>     >>> ______________________________________________
>     >>> R-devel at r-project.org mailing list
>     >>> https://stat.ethz.ch/mailman/listinfo/r-devel
>     >>
>     >>
>     >> ______________________________________________
>     >> R-devel at r-project.org mailing list
>     >> https://stat.ethz.ch/mailman/listinfo/r-devel
>
>     > ______________________________________________
>     > R-devel at r-project.org mailing list
>     > https://stat.ethz.ch/mailman/listinfo/r-devel
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>



-- 
Gabriel Becker, Ph.D
Scientist
Bioinformatics and Computational Biology
Genentech Research

	[[alternative HTML version deleted]]


From maechler at stat.math.ethz.ch  Wed Apr  4 12:43:13 2018
From: maechler at stat.math.ethz.ch (Martin Maechler)
Date: Wed, 4 Apr 2018 12:43:13 +0200
Subject: [Rd] Base R examples that write to current working directory
In-Reply-To: <CAMFmJsmUCqQQeUoMaYevqwiSF2j=p0nzhuexbVPRMxxbHAXBrA@mail.gmail.com>
References: <CABdHhvEDW3nCgwNAXjNcpFtJSM_d=xooX4infq6oTfmctiU3DQ@mail.gmail.com>
 <697bd1b5-4c56-d9b4-55d1-bb70b12aee0c@gmail.com>
 <672879f7-c30d-59ff-fb78-2be575b49002@statistik.tu-dortmund.de>
 <CAFDcVCTu5Cz4r4LFnzBxr4pSp1rzKW8imVBH-3U2zNr2YkS3Vg@mail.gmail.com>
 <23235.19264.599579.492157@stat.math.ethz.ch>
 <CAMFmJsmUCqQQeUoMaYevqwiSF2j=p0nzhuexbVPRMxxbHAXBrA@mail.gmail.com>
Message-ID: <23236.44097.26503.203784@stat.math.ethz.ch>

>>>>> Gabe Becker <becker.gabe at gene.com>
>>>>>     on Tue, 3 Apr 2018 21:16:12 -0700 writes:

    > Martin et al,
    > I have submitted a patch on bugzilla which fixes all of the examples I
    > could easily find which were not already writing only to temporary files or
    > switching to a temp directory before writing files to the working
    > directory. https://bugs.r-project.org/bugzilla/show_bug.cgi?id=17403

    > Passes make check-devel so the examples run and the packages that were
    > modified pass check.

Thank you very much, Gabe,

I've committed most of it now (to R-devel only, to be ported to
3.5.0 alpha, later).

There are some issues I've wanted to postpone and open for
discussion, e.g., here (on R-devel):

https://bugs.r-project.org/bugzilla/show_bug.cgi?id=17403#c3  :

1) All(?) the file-based graphics devices have a default file
   name which resides in the current working directory,
   pdf(), postscript(), png(), ..., and pictex().

   We may think that this *default* should be changed, rather
   than the documentation, e.g., for pictex() , from
   "Rplots.tex" to  tempfile("Rplots.tex")

2) The write() function, for 30 years back compatibility with S,
   has a default  'file = "data"'

   Should we change the default to use "", the same as
   write.table() uses, or also something tempfile() based?


https://bugs.r-project.org/bugzilla/show_bug.cgi?id=17403#c4  :

3)  prompt() and promptData()  [and possibly other prompt*()] :

   I did not apply your proposed changes here, see the
   R-bugzilla for reasoning.

   Still one may want to propose changing the default behavior
   from using the getwd() working directory to tempdir() instead.
   

Martin


    > On Tue, Apr 3, 2018 at 2:37 AM, Martin Maechler <maechler at stat.math.ethz.ch>
    > wrote:

    >> >>>>> Henrik Bengtsson <henrik.bengtsson at gmail.com>
    >> >>>>>     on Fri, 30 Mar 2018 10:14:04 -0700 writes:
    >> 
    >> > So, the proposal would then be to write to tempdir(),
    >> > correct?  If so, I see three alternatives:
    >> 
    >> > 1. explicitly use file.path(tempdir(), filename), or
    >> > tempfile() everywhere.
    >> 
    >> I think it should clearly be  '1.',
    >> as both '2.' and '3.' would need new functionality in R.
    >> 
    >> Ideally we'd get the patch within a day or two, so we can safely
    >> apply it also to  R 3.5.0 alpha  (before it turns beta!).
    >> 
    >> I think the 'eval.path' argument to example() is a nice idea,
    >> but also changing its default to  tempdir() is definitely out of
    >> the question for R 3.5.0.
    >> 
    >> Martin
    >> 
    >> 
    >> > 2. wrap example code in a withTempDir({ ... }) call.
    >> 
    >> > 3. Add an 'eval.path' (*) argument to example() and make
    >> > it default to eval.path = tempdir(). This would probably
    >> > be backward compatible and keep the code example clean.
    >> > The downside is when a user runs an example and can't
    >> > locate produced files. (*) or 'wd', 'workdir', ...
    >> 
    >> > /Henrik
    >> 
    >> > On Fri, Mar 30, 2018 at 9:25 AM, Uwe Ligges
    >> > <ligges at statistik.tu-dortmund.de> wrote:
    >> >>
    >> >>
    >> >> On 30.03.2018 00:08, Duncan Murdoch wrote:
    >> >>>
    >> >>> On 29/03/2018 5:23 PM, Hadley Wickham wrote:
    >> >>>>
    >> >>>> Hi all,
    >> >>>>
    >> >>>> Given the recent CRAN push to prevent examples writing
    >> >>>> to the working directory, is there any interest in
    >> >>>> fixing base R examples that write to the working
    >> >>>> directory? A few candidates are the graphics devices,
    >> >>>> file.create(), writeBin(), writeChar(), write(), and
    >> >>>> saveRDS(). I'm sure there are many more.
    >> >>>>
    >> >>>> One way to catch these naughty examples would be to
    >> >>>> search for unlink() in examples: e.g.,
    >> >>>>
    >> >>>> https://github.com/wch/r-source/search?utf8=?&q=unlink+
    >> extension%3ARd&type=
    >> <https://github.com/wch/r-source/search?utf8=%E2%9C%93&q=unlink+extension%3ARd&type=>
    >> .
    >> >>>> Of course, simply cleaning up after yourself is not
    >> >>>> sufficient because if those files existed before the
    >> >>>> examples were run, the examples will destroy them.
    >> >>>>
    >> >>>
    >> >>> Why not put together a patch that fixes these?  This
    >> >>> doesn't seem to be something that needs discussion,
    >> >>> fixing the bad examples would be a good idea.
    >> >>
    >> >>
    >> >> Seconded. CRAN would not accept these base packages,
    >> >> hence we should urgently give better examples.
    >> >>
    >> >> Best, Uwe
    >> >>
    >> >>> Duncan Murdoch



    > -- 
    > Gabriel Becker, Ph.D
    > Scientist
    > Bioinformatics and Computational Biology
    > Genentech Research


From tomas.kalibera at gmail.com  Wed Apr  4 16:42:05 2018
From: tomas.kalibera at gmail.com (Tomas Kalibera)
Date: Wed, 4 Apr 2018 16:42:05 +0200
Subject: [Rd] utils::unzip ignores overwrite argument, effectively
In-Reply-To: <CABtg=KkUdpqg1mw=PNNSqTJDyjEk0WZFaZMMXQXWfV7rmjUE=w@mail.gmail.com>
References: <CABtg=KkUdpqg1mw=PNNSqTJDyjEk0WZFaZMMXQXWfV7rmjUE=w@mail.gmail.com>
Message-ID: <42a5906c-8b3b-d492-ed24-912d362a8b1d@gmail.com>

Thanks, fixed in R-devel.
Tomas

On 12/20/2017 02:38 PM, G?bor Cs?rdi wrote:
> It does give a warning, but then it overwrites the files, anyway.
> Reproducible example below.
>
> This is R 3.4.3, but it does not seem to be fixed in R-devel:
> https://github.com/wch/r-source/blob/4a9ca3e5ac6b19d7faa7c9290374f7604bf0ef64/src/main/dounzip.c#L171-L174
>
> FYI,
> G?bor
>
> dir.create(tmp <- tempfile())
> setwd(tmp)
>
> cat("old1\n", file = "file1")
> cat("old2\n", file = "file2")
>
> utils::zip("files.zip", c("file1", "file2"))
> #>   adding: file1 (stored 0%)
> #>   adding: file2 (stored 0%)
>
> unlink("file2")
> cat("new1\n", file = "file1")
> readLines("file1")
> #> [1] "new1"
>
> utils::unzip("files.zip", overwrite = FALSE)
> #> Warning message:
> #> In utils::unzip("files.zip", overwrite = FALSE) :
> #>    not overwriting file './file1
>
> readLines("file1")
> #> [1] "old1"
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From tomas.kalibera at gmail.com  Thu Apr  5 16:42:45 2018
From: tomas.kalibera at gmail.com (Tomas Kalibera)
Date: Thu, 5 Apr 2018 16:42:45 +0200
Subject: [Rd] 
 [Bug report] Chinese characters are not handled correctly in
 Rterm for Windows
In-Reply-To: <PS1PR0302MB250778E72D430F253CBE11AFDDDF0@PS1PR0302MB2507.apcprd03.prod.outlook.com>
References: <PS1PR0302MB250778E72D430F253CBE11AFDDDF0@PS1PR0302MB2507.apcprd03.prod.outlook.com>
Message-ID: <5dd8df1b-50ae-bf59-a0dd-8af57feec541@gmail.com>


Thank you for the report and initial debugging. I am not sure what is 
going wrong, we may have to rely on your help to debug this (I do not 
have a system to reproduce on). A user-targeted advice would be to use 
RGui (Rgui.exe).

Does the problem also exist in R-devel?
https://cran.r-project.org/bin/windows/base/rdevel.html

Your example? print("ABC\u4f60\u597dDEF") is printing two Chinese 
characters, right? The first one is C4E3 in CP936 (4F60 in Unicode) and 
the second one is BAC3 in CP936 (597D in Unicode)? Could you reproduce 
the problem with printing just one of the characters, say 
print("ABC\u4f60DEF") ?

As a sanity check - does this display the correct characters in RGui? It 
should, and does on my system, as RGui uses Unicode internally. By 
correct I mean the characters shown e.g. here

https://msdn.microsoft.com/en-us/library/cc194923.aspx
https://msdn.microsoft.com/en-us/library/cc194920.aspx

What is the output of "chcp" in the terminal, before you run R.exe? It 
may be different from what Sys.getlocale() gives in R.

If you take the sequence of the "fputc" commands you captured by the 
debugger, and create a trivial console application to just run them - 
would the characters display correctly in the same terminal from which 
you run R.exe?

Thanks
Tomas


On 03/08/2018 06:54 PM, Azure wrote:
> Hello everyone,
>
>
> I am new to R and I have experienced some bugs when using Rterm on Windows.
>
> Chinese characters in the console output are discarded by Rterm, and trying
>
> to type them into the console will crash the Rterm application.
>
>
> ---ENVIRONMENT---
>
> Platform = x86_64-w64-mingw32
>
> OS = Windows 10 Pro 1709 chs
>
> R version = 3.4.3
>
> Active code page = 936 (Simplified Chinese)
>
>
> ---STEPS TO REPRODUCE---
>
> 1. Run cmd and start bin\x64\R.exe
>
>
> 2. Note that all Chinese characters in the startup banner are missing
>
>
> 3. > Sys.getlocale()
>
> [1] "LC_COLLATE=Chinese (Simplified)_China.936;LC_CTYPE=Chinese (Simplified)
> _China.936;LC_MONETARY=Chinese (Simplified)_China.936;LC_NUMERIC=C;LC_
> TIME=Chinese (Simplified)_China.936"
>
> 4. > print("ABC\u4f60\u597dDEF")
> [1] "ABCDEF"
> (Unicode code points for "???")
>
> 5. Use Microsoft Pinyin IME to type "???" into the console. An error message appeared:
>> invalid multibyte character in mbcs_get_next
> Then the program crashed. My debugger reported a heap corruption, displayed as follows:
> 0x00007FFE2F3687BB (ntdll.dll) (Rterm.exe ??)???????????????: 0xC0000374: ??????? (????: 0x00007FFE2F3CC6E0)??
> However, if the text is pasted into the console, it will not crash.
>
> ---ADDITIONAL INFO---
> Both 32-bit and 64-bit versions have the same problem.
> I attached a debugger to observe Rterm's behavior. The command in step 4
> produced the following calling sequence of C library function "fputc":
>
> fputc ( 91, 0x00007ffe2d1aea40 ) //'['
> fputc ( 49, 0x00007ffe2d1aea40 ) //'1'
> fputc ( 93, 0x00007ffe2d1aea40 ) //']'
> //fflush ( 0x00007ffe2d1aea40 )
> fputc ( 32, 0x00007ffe2d1aea40 ) //' '
> fputc ( 34, 0x00007ffe2d1aea40 ) //'\"'
> fputc ( 65, 0x00007ffe2d1aea40 ) //'A'
> fputc ( 66, 0x00007ffe2d1aea40 ) //'B'
> fputc ( 67, 0x00007ffe2d1aea40 ) //'C'
> fputc ( 196, 0x00007ffe2d1aea40 ) //FAILED!
> fputc ( 227, 0x00007ffe2d1aea40 ) //FAILED!
> fputc ( 186, 0x00007ffe2d1aea40 ) //FAILED!
> fputc ( 195, 0x00007ffe2d1aea40 ) //FAILED!
> fputc ( 68, 0x00007ffe2d1aea40 ) //'D'
> fputc ( 69, 0x00007ffe2d1aea40 ) //'E'
> fputc ( 70, 0x00007ffe2d1aea40 ) //'F'
> fputc ( 34, 0x00007ffe2d1aea40 ) //'\"'
> //fflush ( 0x00007ffe2d1aea40 )
> fputc ( 10, 0x00007ffe2d1aea40 ) //'\n'
>
> {196, 227, 186, 195} or {C4 E3 BA C3} is multi-byte-encoded "???" in GBK (Code page 936).
> These calls failed with a Windows error code 28 (No space left on device), while the subsequent
> calls to fputc succeeded.
>
> Then I used C++ to implement a terminal front-end with REmbedded facilities. R outputs were
> simply printf-ed to stdout. Everything worked as expected:
>
> Initializing R environment
> R version 3.4.3 detected
>> print("???????????????????R is great!")
> [1] "???????????????????R is great!"
>> Sys.getlocale()
> [1] "LC_COLLATE=Chinese (Simplified)_China.936;LC_CTYPE=Chinese (Simplified)
> _China.936;LC_MONETARY=Chinese (Simplified)_China.936;LC_NUMERIC=C;LC_
> TIME=Chinese (Simplified)_China.936"
> I hope these information are helpful.
>
> Best regards,
> AzureFx
>
> 	[[alternative HTML version deleted]]
>
>
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel



	[[alternative HTML version deleted]]


From csardi.gabor at gmail.com  Thu Apr  5 17:01:39 2018
From: csardi.gabor at gmail.com (=?UTF-8?B?R8OhYm9yIENzw6FyZGk=?=)
Date: Thu, 5 Apr 2018 16:01:39 +0100
Subject: [Rd] potential file.copy() or documentation bug when copy.date =
 TRUE
Message-ID: <CABtg=Kk=XHGkX=-86e4wmXcMTgLRnvjJF-12F0SkJDdv=UfvyQ@mail.gmail.com>

This is a recent R-devel. file.copy() is not vectorized if multiple
destinations succeed:

cat("foo1\n", file = "foo1")
cat("foo2\n", file = "foo2")
unlink(c("copy1", "copy2"), recursive = TRUE)

file.copy(c("foo1", "foo2"), c("copy1", "copy2"), copy.date = TRUE)

#> Error in Sys.setFileTime(to[okay], fi$mtime) : invalid 'path' argument

# But the files were still copied:
file.exists(c("copy1", "copy2"))
#> [1] TRUE TRUE

file.copy(c("foo1", "foo2"), c("copy1", "copy2"))
#> [1] FALSE FALSE

file.copy(c("foo1", "foo2"), c("copy1", "copy2"), copy.date = TRUE)
#> [1] FALSE FALSE

file.copy(c("foo1", "foo2"), c("copy1", "copy2"), copy.date = TRUE,
overwrite = TRUE)
#> Error in Sys.setFileTime(to[okay], fi$mtime) : invalid 'path' argument


From tomas.kalibera at gmail.com  Fri Apr  6 11:18:27 2018
From: tomas.kalibera at gmail.com (Tomas Kalibera)
Date: Fri, 6 Apr 2018 11:18:27 +0200
Subject: [Rd] 
 potential file.copy() or documentation bug when copy.date = TRUE
In-Reply-To: <CABtg=Kk=XHGkX=-86e4wmXcMTgLRnvjJF-12F0SkJDdv=UfvyQ@mail.gmail.com>
References: <CABtg=Kk=XHGkX=-86e4wmXcMTgLRnvjJF-12F0SkJDdv=UfvyQ@mail.gmail.com>
Message-ID: <3a8b1968-7ff5-4c0e-f8b8-98789364c28b@gmail.com>

Thanks for the report, fixed in R-devel.

Best,
Tomas

On 04/05/2018 05:01 PM, G?bor Cs?rdi wrote:
> This is a recent R-devel. file.copy() is not vectorized if multiple
> destinations succeed:
>
> cat("foo1\n", file = "foo1")
> cat("foo2\n", file = "foo2")
> unlink(c("copy1", "copy2"), recursive = TRUE)
>
> file.copy(c("foo1", "foo2"), c("copy1", "copy2"), copy.date = TRUE)
>
> #> Error in Sys.setFileTime(to[okay], fi$mtime) : invalid 'path' argument
>
> # But the files were still copied:
> file.exists(c("copy1", "copy2"))
> #> [1] TRUE TRUE
>
> file.copy(c("foo1", "foo2"), c("copy1", "copy2"))
> #> [1] FALSE FALSE
>
> file.copy(c("foo1", "foo2"), c("copy1", "copy2"), copy.date = TRUE)
> #> [1] FALSE FALSE
>
> file.copy(c("foo1", "foo2"), c("copy1", "copy2"), copy.date = TRUE,
> overwrite = TRUE)
> #> Error in Sys.setFileTime(to[okay], fi$mtime) : invalid 'path' argument
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From therneau at mayo.edu  Fri Apr  6 19:10:00 2018
From: therneau at mayo.edu (Therneau, Terry M., Ph.D.)
Date: Fri, 06 Apr 2018 12:10:00 -0500
Subject: [Rd] survival updates and testing
Message-ID: <fd55f7$96uun6@ironport10.mayo.edu>

I've run the latest version of survival through the test suites of 486 of the 565 packages 
that depend on it (Depends, Imports, LinkingTo, Suggests), and have a couple small issues 
that I'm taking to other authors about.
The exercise turned up a half dozen real errors in my package.? I plan to submit early 
next week.

This leads to three comments/questions.

1. Is there a submission site that would check all?? There's several that want to use C 
libraries that I don't have on my small test machine, or are just too large (rstan is an 
entire ecosystem).?? It could save one submission cycle for the the CRAN maintainers.

2. The update.packages routine was not smart enough to update the packages that have C 
code, although every one of those needed to be re-installed in the newest R-devel.

3. This is more of an opinion.? One of the failures was due to the fact that one of the 
elements in the coxph object's list shifted position.? I did address this, but my sympathy 
level was low for a developer that counts on absolute order rather than a name.? Would you 
bend, or tell them to fix their package?

Terry T.


From suharto_anggono at yahoo.com  Sat Apr  7 00:03:07 2018
From: suharto_anggono at yahoo.com (Suharto Anggono Suharto Anggono)
Date: Fri, 6 Apr 2018 22:03:07 +0000 (UTC)
Subject: [Rd] Part of fastpass in 'sort.list' can make sorting unstable
References: <1729171495.2659788.1523052187300.ref@mail.yahoo.com>
Message-ID: <1729171495.2659788.1523052187300@mail.yahoo.com>

In the code of functions 'order' and 'sort.list' in R 3.5.0 alpha (in https://svn.r-project.org/R/branches/R-3-5-branch/src/library/base/R/sort.R), in "fastpass, take advantage of ALTREP metadata", there is "try the reverse since that's easy too...". If it succeeds, ties are reordered, violating stability of sorting.

Example:
x <- sort(c(1, 1, 3))
x  # 1 1 3
sort.list(x, decreasing=TRUE)  # should be 3 1 2


From becker.gabe at gene.com  Sat Apr  7 00:43:57 2018
From: becker.gabe at gene.com (Gabe Becker)
Date: Fri, 6 Apr 2018 15:43:57 -0700
Subject: [Rd] Part of fastpass in 'sort.list' can make sorting unstable
In-Reply-To: <1729171495.2659788.1523052187300@mail.yahoo.com>
References: <1729171495.2659788.1523052187300.ref@mail.yahoo.com>
 <1729171495.2659788.1523052187300@mail.yahoo.com>
Message-ID: <CAMFmJsktwaWYnCNr-_2EOmxJOKqeyJoefHS-Q-5r-32ZAc+rMA@mail.gmail.com>

Thanks for catching this. This is easy to take out without touching the
rest of the machinery. It also wouldn't be too hard to write a
still-faster-but-not-quite-as-much-path which correctly reverses the
sortedness of a sorted vector that includes ties. My suspicion, without
being the one who will ultimately make that decision, is that that wouldn't
go into 3.5.0 though.

Best,
~G

On Fri, Apr 6, 2018 at 3:03 PM, Suharto Anggono Suharto Anggono via R-devel
<r-devel at r-project.org> wrote:

> In the code of functions 'order' and 'sort.list' in R 3.5.0 alpha (in
> https://svn.r-project.org/R/branches/R-3-5-branch/src/
> library/base/R/sort.R), in "fastpass, take advantage of ALTREP metadata",
> there is "try the reverse since that's easy too...". If it succeeds, ties
> are reordered, violating stability of sorting.
>
> Example:
> x <- sort(c(1, 1, 3))
> x  # 1 1 3
> sort.list(x, decreasing=TRUE)  # should be 3 1 2
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>
>


-- 
Gabriel Becker, Ph.D
Scientist
Bioinformatics and Computational Biology
Genentech Research

	[[alternative HTML version deleted]]


From henrik.bengtsson at gmail.com  Sat Apr  7 20:41:00 2018
From: henrik.bengtsson at gmail.com (Henrik Bengtsson)
Date: Sat, 7 Apr 2018 11:41:00 -0700
Subject: [Rd] solve.default(): solve.qr() or qr.solve() in warning
Message-ID: <CAFDcVCT79PgXaFzQGbYNFVqKA8mfjn1qRnZkbURgAhpnGRDbFQ@mail.gmail.com>

If base::solve.default() is called with a 'qr' object, the following
will take place:

    if(inherits(a, "qr")) {
        warning("solve.default called with a \"qr\" object: use 'qr.solve'")
        return(solve.qr(a, b, tol))
    }

Note how the warning says that qr.solve() should be used, whereas
solve.qr() is called.

Should the warning just say:

    warning("solve.default called with a \"qr\" object: use 'solve.qr'")

or

    warning("solve.default called directly with a \"qr\" object: use 'solve'")?

/Henrik


From bbolker at gmail.com  Sun Apr  8 19:45:09 2018
From: bbolker at gmail.com (Ben Bolker)
Date: Sun, 8 Apr 2018 13:45:09 -0400
Subject: [Rd] suggested patch for messages
Message-ID: <CABghstTbEB1Y2TbvxvEN8iEy7psi3wAb75m0WOEr4eOZvUj6WA@mail.gmail.com>

Does anyone have comments on the new wording here?

Suggested:

The Title field should be in title case. Current version is:
   (xxx)
In title case this would be:
   (Xxx)

Hoping R core will see this here and magically adopt it, otherwise
I'll try posting it to the r bugs site ...

===================================================================
--- src/library/tools/R/QC.R    (revision 74551)
+++ src/library/tools/R/QC.R    (working copy)
@@ -7727,8 +7727,10 @@
                 "The Title field starts with the package name."
             },
             if(length(y <- x$title_case)) {
-                paste(c("The Title field should be in title case,
current version then in title case:",
-                        sQuote(y)),
+                paste(c("The Title field should be in title case.
Current version is:",
+                        sQuote(y[1]),
+                        "In title case this would be:",
+                        sQuote(y[2])),
                       collapse = "\n")
             })),
       fmt(c(if(length(x$descr_bad_initial)) {


From tomas.kalibera at gmail.com  Mon Apr  9 10:00:12 2018
From: tomas.kalibera at gmail.com (Tomas Kalibera)
Date: Mon, 9 Apr 2018 10:00:12 +0200
Subject: [Rd] 
 =?utf-8?q?=5Bbug_report=5D_Cyrillic_letter_=22=D1=8F=22_int?=
 =?utf-8?q?errupts_script_execution_via_R_source_function?=
In-Reply-To: <CAP0xjkcG_Dkgd+WJ4bcrJnrywJPy9am02jeASqkfqmQ+YC0Ujw@mail.gmail.com>
References: <CAP0xjkcG_Dkgd+WJ4bcrJnrywJPy9am02jeASqkfqmQ+YC0Ujw@mail.gmail.com>
Message-ID: <db4be1b4-d064-e714-5e89-a66ee8ef3db2@gmail.com>

Hi Vladimir,

thanks for your report - this was really a bug, now fixed in R-devel and 
to appear in 3.5.0.

Apart from the bug, having source files in UTF-8 and reading them into R 
on Windows is perfectly fine, you just need to specify that they are in 
UTF-8. You also need to make sure R is running in Russian locale 
(CP1251) if that is not the default. On my system, this works fine

Sys.setlocale(locale="Russian")
source("russian_utf8.R", encoding="UTF-8")

Best
Tomas


On 08/28/2017 11:27 AM, ???????? ???????? wrote:
> Hello,
>
> I do not have an account on R Bugzilla, so I will post my bug report here.
> I want to report a very old bug in base R *source()* function. It relates
> to sourcing some R scripts in UTF-8 encoding on Windows machines. For some
> reason if the UTF-8 script is containing cyrillic letter *"?"*, the script
> execution is interrupted directly on this letter (btw the same scripts are
> sourcing fine when they are encoded in the systems CP1251 encoding).
>
> Let's consider the following script that prints random russian words:
>
>
>>
>> *print("?????")print("????")print("???????")print("????")*
>
> When this script is sourced we get INCOMPLETE_STRING error:
>
>
>>
>>
>>
>> *source('D:/R code/test_cyr_letter.R', encoding = 'UTF-8', echo=TRUE)Error
>> in source("D:/R code/test_cyr_letter.R", encoding = "UTF-8", echo = TRUE)
>> :   D:/R code/test_cyr_letter.R:3:7: unexpected INCOMPLETE_STRING2:
>> print("????")3: print("??         ^*
>
> Note that this bug is not triggered when the same file is executed using
> *eval(parse(...))*:
>
>
>>
>>
>> *> eval(parse('D:/R code/test_cyr_letter.R', encoding="UTF-8"))[1]
>> "?????"[1] "????"[1] "???????"[1] "????"*
>
> I made some reserach and noticed that *source* and *parse* functions have
> similar parts of code for reading files. After analyzing code of *source()*
> function I found out that commenting one line from it fixes this bug and
> the overrided function works fine. See this part of *source()* function
> code:
>
> *... *
>> *filename <- file*
>>
>> *        file <- file(filename, "r")*
>>
>> *        # on.exit(close(file))  #### COMMENT THIS LINE ####*
>>
>> *        if (isTRUE(keep.source)) {*
>>
>> *          lines <- scan(file, what="character", encoding = encoding, sep
>>> = "\n")*
>> *          on.exit()*
>>
>> *          close(file)*
>>
>> *          srcfile <- srcfilecopy(filename, lines,
>>> file.mtime(filename)[1], *
>> *                                 isFile = TRUE)*
>>
>> *        } *
>>
>> *...*
>>
>>
> I do not fully understand this weird behaviour, so I ask help of R Core
> developers to fix this annoying bug that prevents using unicode scripts
> with cyrillic on Windows.
> Maybe you should make that part of *source()* function read files like
> *parse()* function?
>
> *Session and encoding info:*
>
>>> sessionInfo()
>> R version 3.4.1 (2017-06-30)
>> Platform: x86_64-w64-mingw32/x64 (64-bit)
>> Running under: Windows 7 x64 (build 7601) Service Pack 1
>> Matrix products: default
>> locale:
>> [1] LC_COLLATE=Russian_Russia.1251  LC_CTYPE=Russian_Russia.1251
>>   LC_MONETARY=Russian_Russia.1251
>> [4] LC_NUMERIC=C                    LC_TIME=Russian_Russia.1251
>> attached base packages:
>> [1] stats     graphics  grDevices utils     datasets  methods   base
>> loaded via a namespace (and not attached):
>> [1] compiler_3.4.1 tools_3.4.1
>
>
>>> l10n_info()
>> $MBCS
>> [1] FALSE
>> $`UTF-8`
>> [1] FALSE
>> $`Latin-1`
>> [1] FALSE
>> $codepage
>> [1] 1251
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From tomas.kalibera at gmail.com  Mon Apr  9 10:42:25 2018
From: tomas.kalibera at gmail.com (Tomas Kalibera)
Date: Mon, 9 Apr 2018 10:42:25 +0200
Subject: [Rd] 
 =?utf-8?q?=5Bbug_report=5D_Cyrillic_letter_=22=D1=8F=22_int?=
 =?utf-8?q?errupts_script_execution_via_R_source_function?=
In-Reply-To: <59A40B7F.3050307@stern.nyu.edu>
References: <CAP0xjkcG_Dkgd+WJ4bcrJnrywJPy9am02jeASqkfqmQ+YC0Ujw@mail.gmail.com>
 <59A40B7F.3050307@stern.nyu.edu>
Message-ID: <f28f2aec-11f5-d0c9-e36c-d49f1a83c59f@gmail.com>

Hi Patrick,

thanks for your comments on the bug, just to clarify - one could 
reproduce the bug simply using file() and readLines(). The parser saw a 
real end of file as (incorrectly) communicated to it by lower level 
connections code - there is no design issue related in the parser (nor 
elsewhere), it was a bug in connections code and is now fixed.

You can specify source encoding in "file()" or "source()" to tell R that 
the source file is in that given encoding. R will convert the file 
contents to the current native encoding of the R session. If in doubt, 
please check the documentation ?file, ?source, ?readLines, ?Encoding for 
the details.

The observation that "?" is represented as 0xff (-1 as signed char) and 
R_EOF/EOF is -1 (but integer) was related to the bug, well spotted.

Best
Tomas

On 08/28/2017 02:24 PM, Patrick Perry wrote:
> My understanding (which could be wrong) is that when you source a file,
> it first gets translated to your native locale and then parsed. When you
> parse a character vector, it does not get translated.
>
> In your locale, every "?" character  (U+044F) gets replaced by the byte
> "\xFF":
>
>>   iconv("\u044f", "UTF-8", "Windows-1251")
> [1] "\xff"
>
> I suspect that particular value causes trouble for the R parser, which
> uses a stack of previously-seen characters (include/Defn.h):
>
> LibExtern char    R_ParseContext[PARSE_CONTEXT_SIZE] INI_as("");
>
> And at various places checks whether the context character is EOF. That
> character is defined as
>
> #define R_EOF    -1
>
> Which, when cast to a char, is 0xFF.
>
> I suspect that your example is revealing two bugs:
>
> 1) The R parser seems to have trouble with native characters encoded as
> 0xFF. It's possible that, since R strings can't contain 0x00, this can
> be fixed by changing the definition of R_EOF to
>
> #define R_EOF     0
>
>
> 2) The other bug is that, as I understand the situation, "source" will
> fail if the file contains a character that cannot be represented in your
> native locale. This is a harder bug to tackle because of the way file()
> and the other connection methods are designed, where they translate the
> input to your native locale. I don't know if it's possible to override
> this behavior, and have them translate input to UTF-8 instead.
>
>
>
> Patrick
>
>
> ---
>
> On Mon Aug 28 11:27:07 CEST 2017 ???????? ????????
> <vladimirpanfilov at gmail.com> wrote:
>
> Hello,
>
> I do not have an account on R Bugzilla, so I will post my bug report here.
> I want to report a very old bug in base R *source()* function. It relates
> to sourcing some R scripts in UTF-8 encoding on Windows machines. For some
> reason if the UTF-8 script is containing cyrillic letter *"?"*, the script
> execution is interrupted directly on this letter (btw the same scripts are
> sourcing fine when they are encoded in the systems CP1251 encoding).
>
> Let's consider the following script that prints random russian words:
>
>
>> /
> />/
> />/  *print("?????")print("????")print("???????")print("????")*
> /
>
> When this script is sourced we get INCOMPLETE_STRING error:
>
>
>> /
> />/
> />/
> />/
> />/  *source('D:/R code/test_cyr_letter.R', encoding = 'UTF-8', echo=TRUE)Error
> />/  in source("D:/R code/test_cyr_letter.R", encoding = "UTF-8", echo = TRUE)
> />/  :   D:/R code/test_cyr_letter.R:3:7: unexpected INCOMPLETE_STRING2:
> />/  print("????")3: print("??         ^*
> /
>
> Note that this bug is not triggered when the same file is executed using
> *eval(parse(...))*:
>
>
>> /
> />/
> />/
> />/  *>  eval(parse('D:/R code/test_cyr_letter.R', encoding="UTF-8"))[1]
> />/  "?????"[1] "????"[1] "???????"[1] "????"*
> /
>
> I made some reserach and noticed that *source* and *parse* functions have
> similar parts of code for reading files. After analyzing code of *source()*
> function I found out that commenting one line from it fixes this bug and
> the overrided function works fine. See this part of *source()* function
> code:
>
> *... *
>> /
> />/  *filename<- file*
> />/
> />/  *        file<- file(filename, "r")*
> />/
> />/  *        # on.exit(close(file))  #### COMMENT THIS LINE ####*
> />/
> />/  *        if (isTRUE(keep.source)) {*
> />/
> />/  *          lines<- scan(file, what="character", encoding = encoding, sep
> />>/  = "\n")*
> />/
> />/  *          on.exit()*
> />/
> />/  *          close(file)*
> />/
> />/  *          srcfile<- srcfilecopy(filename, lines,
> />>/  file.mtime(filename)[1], *
> />/
> />/  *                                 isFile = TRUE)*
> />/
> />/  *        } *
> />/
> />/  *...*
> />/
> />/
> /I do not fully understand this weird behaviour, so I ask help of R Core
> developers to fix this annoying bug that prevents using unicode scripts
> with cyrillic on Windows.
> Maybe you should make that part of *source()* function read files like
> *parse()* function?
>
> *Session and encoding info:*
>
>> /  >  sessionInfo()
> />/  R version 3.4.1 (2017-06-30)
> />/  Platform: x86_64-w64-mingw32/x64 (64-bit)
> />/  Running under: Windows 7 x64 (build 7601) Service Pack 1
> />/  Matrix products: default
> />/  locale:
> />/  [1] LC_COLLATE=Russian_Russia.1251  LC_CTYPE=Russian_Russia.1251
> />/   LC_MONETARY=Russian_Russia.1251
> />/  [4] LC_NUMERIC=C                    LC_TIME=Russian_Russia.1251
> />/  attached base packages:
> />/  [1] stats     graphics  grDevices utils     datasets  methods   base
> />/  loaded via a namespace (and not attached):
> />/  [1] compiler_3.4.1 tools_3.4.1
> /
>
>
>> /  >  l10n_info()
> />/  $MBCS
> />/  [1] FALSE
> />/  $`UTF-8`
> />/  [1] FALSE
> />/  $`Latin-1`
> />/  [1] FALSE
> />/  $codepage
> />/  [1] 1251/
>
>
>
> 	[[alternative HTML version deleted]]
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From luke-tierney at uiowa.edu  Mon Apr  9 18:14:39 2018
From: luke-tierney at uiowa.edu (luke-tierney at uiowa.edu)
Date: Mon, 9 Apr 2018 11:14:39 -0500 (CDT)
Subject: [Rd] Part of fastpass in 'sort.list' can make sorting unstable
In-Reply-To: <1729171495.2659788.1523052187300@mail.yahoo.com>
References: <1729171495.2659788.1523052187300.ref@mail.yahoo.com>
 <1729171495.2659788.1523052187300@mail.yahoo.com>
Message-ID: <alpine.LFD.2.21.1804091114110.19756@itasca.stat.uiowa.edu>

Thanks -- fixed in R-devel and R-3-5-branch.

luke

On Fri, 6 Apr 2018, Suharto Anggono Suharto Anggono via R-devel wrote:

> In the code of functions 'order' and 'sort.list' in R 3.5.0 alpha (in https://svn.r-project.org/R/branches/R-3-5-branch/src/library/base/R/sort.R), in "fastpass, take advantage of ALTREP metadata", there is "try the reverse since that's easy too...". If it succeeds, ties are reordered, violating stability of sorting.
>
> Example:
> x <- sort(c(1, 1, 3))
> x  # 1 1 3
> sort.list(x, decreasing=TRUE)  # should be 3 1 2
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>

-- 
Luke Tierney
Ralph E. Wareham Professor of Mathematical Sciences
University of Iowa                  Phone:             319-335-3386
Department of Statistics and        Fax:               319-335-3017
    Actuarial Science
241 Schaeffer Hall                  email:   luke-tierney at uiowa.edu
Iowa City, IA 52242                 WWW:  http://www.stat.uiowa.edu


From tomas.kalibera at gmail.com  Tue Apr 10 01:03:29 2018
From: tomas.kalibera at gmail.com (Tomas Kalibera)
Date: Tue, 10 Apr 2018 01:03:29 +0200
Subject: [Rd] file.copy(from=Directory, to=File) oddity
In-Reply-To: <CAF8bMcaP2dHS3KAZVyXifuigZ3B2LmoR6N+=vdzBaCF5svGrhg@mail.gmail.com>
References: <CAF8bMcaP2dHS3KAZVyXifuigZ3B2LmoR6N+=vdzBaCF5svGrhg@mail.gmail.com>
Message-ID: <86301d5b-0bab-d147-6f71-38dd62252787@gmail.com>

Thanks for the report, fixed in R-devel. Now we get a warning when 
copying a directory over a non-directory file is attempted. The target 
(non-directory) file is left alone.

Tomas

On 09/08/2017 06:54 PM, William Dunlap via R-devel wrote:
> When I mistakenly use file.copy() with a directory for the 'from' argument
> and a non-directory for the 'to' and overwrite=TRUE, file.copy returns
> FALSE, meaning it could not do the copying.  However, it also replaces the
> 'to' file with a zero-length file.
>
> dir.create( fromDir <- tempfile() )
> cat(file = toFile <- tempfile(), "existing file\n")
> readLines(toFile)
> #[1] "existing file"
> file.copy(fromDir, toFile, recursive=FALSE, overwrite=TRUE)
> #[1] FALSE
> readLines(toFile)
> #character(0)
>
> or, with recursive=TRUE,
>
> dir.create( fromDir <- tempfile() )
> cat(file = toFile <- tempfile(), "existing file\n")
> readLines(toFile)
> #[1] "existing file"
> file.copy(fromDir, toFile, recursive=TRUE, overwrite=TRUE)
> #[1] FALSE
> #Warning message:
> #In file.copy(fromDir, toFile, recursive = TRUE, overwrite = TRUE) :
> #  'recursive' will be ignored as 'to' is not a single existing directory
> readLines(toFile)
> #character(0)
>
> Is this behavior intended?
>
> Bill Dunlap
> TIBCO Software
> wdunlap tibco.com
>
> 	[[alternative HTML version deleted]]
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From csardi.gabor at gmail.com  Tue Apr 10 23:27:53 2018
From: csardi.gabor at gmail.com (=?UTF-8?B?R8OhYm9yIENzw6FyZGk=?=)
Date: Tue, 10 Apr 2018 22:27:53 +0100
Subject: [Rd] possible bug: stderr() connection truncates output at 8191
 characters when R_Consolefile is not used
Message-ID: <CABtg=Km4=T8fPs7yJ=iKWkLpZ-KoaX+j4X-JRaV26suhpKAS7w@mail.gmail.com>

This is recent R-devel, but AFAICT all R versions are affected.
Also AFAICT, currently only happens on macOS with Aqua, and on
Windows, unless you are in RTerm. These do not use R_Consolefile

Code to reproduce:

x <- paste0(strrep(".", 8191), "MIA")
nchar(x)
#> [1] 8194

## This is fine:
cat(x, file = stdout())

## This truncates silently:
cat(x, file = stderr())

It happens because the vfprintf callback of stderr() is stderr_vfprintf [1],
and that just calls REvprintf [2], which truncates at 8191 characters [3], if
R_Consolefile is not used.

[1] https://github.com/wch/r-source/blob/fed0444824567e1c4edff234fc5c2fb1c99bbc84/src/main/connections.c#L5122
[2] https://github.com/wch/r-source/blob/fed0444824567e1c4edff234fc5c2fb1c99bbc84/src/main/connections.c#L2562
[3] https://github.com/wch/r-source/blob/fed0444824567e1c4edff234fc5c2fb1c99bbc84/src/main/printutils.c#L972


From mikko.korpela at maanmittauslaitos.fi  Wed Apr 11 18:48:53 2018
From: mikko.korpela at maanmittauslaitos.fi (Korpela Mikko (MML))
Date: Wed, 11 Apr 2018 16:48:53 +0000
Subject: [Rd] Possible \uxxx typos in documents
Message-ID: <24e3bce3ef024b3ca921f7c8319b37a6@C119S212VM016.msvyvi.vaha.local>

I found a few occurrences of "\uxxx" which should probably have
one more "x". A patch follows:

Index: doc/manual/R-ints.texi
===================================================================
--- doc/manual/R-ints.texi	(revision 74580)
+++ doc/manual/R-ints.texi	(working copy)
@@ -1277,11 +1277,11 @@
 we have to a universal format.  For those that do not (for example those
 lacking a powerful enough @code{iconv}), it is likely that they work in
 Latin-1, the old @R{} assumption. Then the parser can return a
-UTF-8-encoded string if it encounters a @samp{\uxxx} escape for a
+UTF-8-encoded string if it encounters a @samp{\uxxxx} escape for a
 Unicode point that cannot be represented in the current charset.  (This
 needs MBCS support, and was only enabled at footnote{See define
 @code{USE_UTF8_IF_POSSIBLE} in file @file{src/main/gram.c}.} on
-Windows.)  This is enabled for all platforms, and a @samp{\uxxx} or
+Windows.)  This is enabled for all platforms, and a @samp{\uxxxx} or
 @samp{\Uxxxxxxxx} escape ensures that the parsed string will be marked
 as UTF-8.
 
Index: src/library/base/man/iconv.Rd
===================================================================
--- src/library/base/man/iconv.Rd	(revision 74580)
+++ src/library/base/man/iconv.Rd	(working copy)
@@ -95,7 +95,7 @@
   
   Some of the implementations have interesting extra encodings: for
   example GNU \samp{libiconv} allows \code{to = "C99"} to use
-  \code{\\uxxx} escapes for non-ASCII characters.
+  \code{\\uxxxx} escapes for non-ASCII characters.
 }
 
 \section{Byte Order Marks}{


From JARauh at web.de  Fri Apr 13 13:21:27 2018
From: JARauh at web.de (Johannes Rauh)
Date: Fri, 13 Apr 2018 13:21:27 +0200
Subject: [Rd] In base R: argument `list` does not accept lists
In-Reply-To: <24e3bce3ef024b3ca921f7c8319b37a6@C119S212VM016.msvyvi.vaha.local>
References: <24e3bce3ef024b3ca921f7c8319b37a6@C119S212VM016.msvyvi.vaha.local>
Message-ID: <trinity-3b077c08-3449-471d-8752-8c56b47800b1-1523618487386@3c-app-webde-bs06>

The function `base::rm` has an argument that is named `list`.  However, if a list is passed as `list` to `rm` (e.g.: `rm(list = list("x", "y"))`), an error is raised: "invalid first argument".

Agreed, the documentation says that `list` should be "a character vector naming objects to be removed."  Still, wouldn't it make sense to allow a list of characters as an argument?

The other alternative to make things consistent would be to rename the argument, but that would break compatibility, of course.

Best
Johannes


From bbolker at gmail.com  Fri Apr 13 20:42:10 2018
From: bbolker at gmail.com (Ben Bolker)
Date: Fri, 13 Apr 2018 14:42:10 -0400
Subject: [Rd] Fwd: suggested patch for messages
In-Reply-To: <CABghstTbEB1Y2TbvxvEN8iEy7psi3wAb75m0WOEr4eOZvUj6WA@mail.gmail.com>
References: <CABghstTbEB1Y2TbvxvEN8iEy7psi3wAb75m0WOEr4eOZvUj6WA@mail.gmail.com>
Message-ID: <CABghstQfMawckLUrA6Yh5adzUdwD5XH6Eo_=VN=ByEGvFCy5dA@mail.gmail.com>

Any follow-up/comments on this? If I don't hear back I'll submit to
r-bugs so it doesn't get lost ...

(Don't see any changes in QC.R in the last few days ...
https://github.com/wch/r-source/commits/trunk/src/library/tools/R/QC.R
)

---------- Forwarded message ----------
From: Ben Bolker <bbolker at gmail.com>
Date: Sun, Apr 8, 2018 at 1:45 PM
Subject: suggested patch for messages
To: r-devel at r-project.org


Does anyone have comments on the new wording here?

Suggested:

The Title field should be in title case. Current version is:
   (xxx)
In title case this would be:
   (Xxx)

Hoping R core will see this here and magically adopt it, otherwise
I'll try posting it to the r bugs site ...

===================================================================
--- src/library/tools/R/QC.R    (revision 74551)
+++ src/library/tools/R/QC.R    (working copy)
@@ -7727,8 +7727,10 @@
                 "The Title field starts with the package name."
             },
             if(length(y <- x$title_case)) {
-                paste(c("The Title field should be in title case,
current version then in title case:",
-                        sQuote(y)),
+                paste(c("The Title field should be in title case.
Current version is:",
+                        sQuote(y[1]),
+                        "In title case this would be:",
+                        sQuote(y[2])),
                       collapse = "\n")
             })),
       fmt(c(if(length(x$descr_bad_initial)) {


From murdoch.duncan at gmail.com  Fri Apr 13 21:51:24 2018
From: murdoch.duncan at gmail.com (Duncan Murdoch)
Date: Fri, 13 Apr 2018 15:51:24 -0400
Subject: [Rd] In base R: argument `list` does not accept lists
In-Reply-To: <trinity-3b077c08-3449-471d-8752-8c56b47800b1-1523618487386@3c-app-webde-bs06>
References: <24e3bce3ef024b3ca921f7c8319b37a6@C119S212VM016.msvyvi.vaha.local>
 <trinity-3b077c08-3449-471d-8752-8c56b47800b1-1523618487386@3c-app-webde-bs06>
Message-ID: <71f5532a-3a2e-b9f1-d23f-b407f3bd9d8b@gmail.com>

On 13/04/2018 7:21 AM, Johannes Rauh wrote:
> The function `base::rm` has an argument that is named `list`.  However, if a list is passed as `list` to `rm` (e.g.: `rm(list = list("x", "y"))`), an error is raised: "invalid first argument".
> 
> Agreed, the documentation says that `list` should be "a character vector naming objects to be removed."  Still, wouldn't it make sense to allow a list of characters as an argument?
> 
> The other alternative to make things consistent would be to rename the argument, but that would break compatibility, of course.

There are other functions (data(), save(), remove(), package.skeleton(), 
etc.) that use the convention that "list" names a character vector full 
of names, others where variations on that name ("affinity.list", 
"pkglist") have the same purpose, and still others where "list" takes a 
different kind of object entirely (untar(), unzip()).  I couldn't find 
any examples where an argument named "list" takes a list as a value.

There really isn't any substitute for reading the documentation for any 
function you choose to use.

Duncan Murdoch


From istazahn at gmail.com  Sat Apr 14 01:04:36 2018
From: istazahn at gmail.com (Ista Zahn)
Date: Fri, 13 Apr 2018 19:04:36 -0400
Subject: [Rd] In base R: argument `list` does not accept lists
In-Reply-To: <71f5532a-3a2e-b9f1-d23f-b407f3bd9d8b@gmail.com>
References: <24e3bce3ef024b3ca921f7c8319b37a6@C119S212VM016.msvyvi.vaha.local>
 <trinity-3b077c08-3449-471d-8752-8c56b47800b1-1523618487386@3c-app-webde-bs06>
 <71f5532a-3a2e-b9f1-d23f-b407f3bd9d8b@gmail.com>
Message-ID: <CA+vqiLEF4_=agViJrHHPjjFwjjHR7uODJShq985-JDRr8zP3ag@mail.gmail.com>

On Fri, Apr 13, 2018 at 3:51 PM, Duncan Murdoch
<murdoch.duncan at gmail.com> wrote:
> On 13/04/2018 7:21 AM, Johannes Rauh wrote:
>>
>> The function `base::rm` has an argument that is named `list`.  However, if
>> a list is passed as `list` to `rm` (e.g.: `rm(list = list("x", "y"))`), an
>> error is raised: "invalid first argument".
>>
>> Agreed, the documentation says that `list` should be "a character vector
>> naming objects to be removed."  Still, wouldn't it make sense to allow a
>> list of characters as an argument?
>>
>> The other alternative to make things consistent would be to rename the
>> argument, but that would break compatibility, of course.
>
>
> There are other functions (data(), save(), remove(), package.skeleton(),
> etc.) that use the convention that "list" names a character vector full of
> names, others where variations on that name ("affinity.list", "pkglist")
> have the same purpose, and still others where "list" takes a different kind
> of object entirely (untar(), unzip()).  I couldn't find any examples where
> an argument named "list" takes a list as a value.
>
> There really isn't any substitute for reading the documentation for any
> function you choose to use.

Maybe, though if so it's at least a little ironic that you make an
appeal to consistency in support of the status quo. "Read the docs"
you say, because if you do you'll see that "list" never means list,
and then you won't have to read the docs because you have learned the
convention. Maybe.

On the other hand, the OP wasn't so much reporting a bug as making a
feature request. Really, why shouldn't the "list" argument of rm,
data, save, remove, etc. accept either a list of a vector? I can't
think of anything it would hurt, and it would help people who assume
(reasonably enough IMO) that an argument named "list" will accept a
list as as a valid value?

Best,
Ista

>
> Duncan Murdoch
>
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From maechler at stat.math.ethz.ch  Sat Apr 14 16:19:29 2018
From: maechler at stat.math.ethz.ch (Martin Maechler)
Date: Sat, 14 Apr 2018 16:19:29 +0200
Subject: [Rd] Fwd: suggested patch for messages
In-Reply-To: <CABghstQfMawckLUrA6Yh5adzUdwD5XH6Eo_=VN=ByEGvFCy5dA@mail.gmail.com>
References: <CABghstTbEB1Y2TbvxvEN8iEy7psi3wAb75m0WOEr4eOZvUj6WA@mail.gmail.com>
 <CABghstQfMawckLUrA6Yh5adzUdwD5XH6Eo_=VN=ByEGvFCy5dA@mail.gmail.com>
Message-ID: <23250.3569.519324.104572@stat.math.ethz.ch>

>>>>> Ben Bolker <bbolker at gmail.com>
>>>>>     on Fri, 13 Apr 2018 14:42:10 -0400 writes:

    > Any follow-up/comments on this? If I don't hear back I'll submit to
    > r-bugs so it doesn't get lost ...

    > (Don't see any changes in QC.R in the last few days ...
    > https://github.com/wch/r-source/commits/trunk/src/library/tools/R/QC.R
    > )

Thank you, Ben, for the proposal and the reminder.

I agree that the message after the change is much easier to
understand, notably for people like me who are not proficient in
style of the Queen's English.

I've committed a change (74593) to R-devel where I've slightly
simplified the wording from
 "this would be:"  to
 "that is:"

and really I cannot give a rational reason why I also
changed "this" to "that"  so I'm open for another tweak from
people with better English style proficiency..

Martin


---------- Forwarded message ----------
  From: Ben Bolker <bbolker at gmail.com>
  Date: Sun, Apr 8, 2018 at 1:45 PM
  Subject: suggested patch for messages
  To: r-devel at r-project.org


  Does anyone have comments on the new wording here?

  Suggested:

  The Title field should be in title case. Current version is:
     (xxx)
  In title case this would be:
     (Xxx)

  Hoping R core will see this here and magically adopt it, otherwise
  I'll try posting it to the r bugs site ...

===================================================================
--- src/library/tools/R/QC.R    (revision 74551)
+++ src/library/tools/R/QC.R    (working copy)
@@ -7727,8 +7727,10 @@
                 "The Title field starts with the package name."
             },
             if(length(y <- x$title_case)) {
-                paste(c("The Title field should be in title case,
current version then in title case:",
-                        sQuote(y)),
+                paste(c("The Title field should be in title case.
Current version is:",
+                        sQuote(y[1]),
+                        "In title case this would be:",
+                        sQuote(y[2])),
                       collapse = "\n")
             })),
       fmt(c(if(length(x$descr_bad_initial)) {


From jtelleria.rproject at gmail.com  Sat Apr 14 21:36:56 2018
From: jtelleria.rproject at gmail.com (Juan Telleria Ruiz de Aguirre)
Date: Sat, 14 Apr 2018 21:36:56 +0200
Subject: [Rd] Reminder: R Project Contributed Documentation Still Frozen
Message-ID: <CAJXDcw0fwmBA_EpDQFK6129cyHUVga87ufBJ-AXt2DM6kdBAhQ@mail.gmail.com>

Dear R Developers,

Just I would like to remind that R Contributed Documentation is still frozen:

https://cran.r-project.org/other-docs.html

It would certainly be nice to have an official R Project Contributed
Documentation Site where we can all contribute :)

Kind regards,

Juan Telleria

*P.D.: I have already finished editing my first R Machine Learning
Cheatsheet, and hope to publish it to RStudio's Contributed Cheatsheet
Section in short time :)


From rhurlin at gwdg.de  Sun Apr 15 11:01:59 2018
From: rhurlin at gwdg.de (Rainer Hurling)
Date: Sun, 15 Apr 2018 11:01:59 +0200
Subject: [Rd] packageDate() segfaults, if used without argument
Message-ID: <361f35aa-60e8-dfd2-b6e7-33fd5a054d6b@gwdg.de>

Out of curiosity, I played a bit with the new function packageDate()
from April, 4th. All works fine, except using it without any argument.
In this case, it segfaults:


#> packageDate()
Error in packageDescription(pkg, lib.loc = lib.loc, fields = date.fields) :
  argument "pkg" is missing, with no default

 *** caught segfault ***
address 0x77bc3c0, cause 'memory not mapped'
Segmentation fault (core dumped)


My system is FreeBSD 12.0-CURRENT amd64 with R-devel (r74601).

Regards,
Rainer Hurling


From maechler at stat.math.ethz.ch  Mon Apr 16 09:03:35 2018
From: maechler at stat.math.ethz.ch (Martin Maechler)
Date: Mon, 16 Apr 2018 09:03:35 +0200
Subject: [Rd] packageDate() segfaults, if used without argument
In-Reply-To: <361f35aa-60e8-dfd2-b6e7-33fd5a054d6b@gwdg.de>
References: <361f35aa-60e8-dfd2-b6e7-33fd5a054d6b@gwdg.de>
Message-ID: <23252.19143.52350.962386@stat.math.ethz.ch>

>>>>> Rainer Hurling <rhurlin at gwdg.de>
>>>>>     on Sun, 15 Apr 2018 11:01:59 +0200 writes:

    > Out of curiosity, I played a bit with the new function
    > packageDate() from April, 4th. All works fine, except
    > using it without any argument.  In this case, it
    > segfaults:

Thank you, Rainer, for the report -- about the *development* version of R

Note that the segfault would not have happened in  'R 3.5.0 beta'
(today turning to be 'R 3.5.0 RC'  : RC := Release Candidate )
which we'd be very happy if you used extensively.

    > #> packageDate() Error in packageDescription(pkg, lib.loc
    > = lib.loc, fields = date.fields) : argument "pkg" is
    > missing, with no default

    >  *** caught segfault *** address 0x77bc3c0, cause 'memory
    > not mapped' Segmentation fault (core dumped)

    > My system is FreeBSD 12.0-CURRENT amd64 with R-devel
    > (r74601).

It was a lapsus -- of mine -- not at all related to packageDate(),
corrected yesterday (svn r 74604).

Martin


From rhurlin at gwdg.de  Mon Apr 16 16:03:44 2018
From: rhurlin at gwdg.de (Rainer Hurling)
Date: Mon, 16 Apr 2018 16:03:44 +0200
Subject: [Rd] packageDate() segfaults, if used without argument
In-Reply-To: <23252.19143.52350.962386@stat.math.ethz.ch>
References: <361f35aa-60e8-dfd2-b6e7-33fd5a054d6b@gwdg.de>
 <23252.19143.52350.962386@stat.math.ethz.ch>
Message-ID: <150dc533-7e93-169e-228d-998c48ce6dc7@gwdg.de>

Hi Martin,

Am 16.04.2018 um 09:03 schrieb Martin Maechler:
>>>>>> Rainer Hurling <rhurlin at gwdg.de>
>>>>>>      on Sun, 15 Apr 2018 11:01:59 +0200 writes:
> 
>      > Out of curiosity, I played a bit with the new function
>      > packageDate() from April, 4th. All works fine, except
>      > using it without any argument.  In this case, it
>      > segfaults:
> 
> Thank you, Rainer, for the report -- about the *development* version of R

Yupp.

> 
> Note that the segfault would not have happened in  'R 3.5.0 beta'
> (today turning to be 'R 3.5.0 RC'  : RC := Release Candidate )
> which we'd be very happy if you used extensively.

Ah, interesting news, that this does not occur with beta and RC.

> 
>      > #> packageDate() Error in packageDescription(pkg, lib.loc
>      > = lib.loc, fields = date.fields) : argument "pkg" is
>      > missing, with no default
> 
>      >  *** caught segfault *** address 0x77bc3c0, cause 'memory
>      > not mapped' Segmentation fault (core dumped)
> 
>      > My system is FreeBSD 12.0-CURRENT amd64 with R-devel
>      > (r74601).
> 
> It was a lapsus -- of mine -- not at all related to packageDate(),
> corrected yesterday (svn r 74604).

Nice to here. Thanks for the fast response and greetings,
Rainer

> 
> Martin
>


From Jiaxuan.Chen at cruk.cam.ac.uk  Mon Apr 16 19:41:29 2018
From: Jiaxuan.Chen at cruk.cam.ac.uk (Jiaxuan Chen)
Date: Mon, 16 Apr 2018 17:41:29 +0000
Subject: [Rd] alpha transparency doesn't work for lines when xpd=TRUE
Message-ID: <BBFFC8D403F0364E9A4176D542D830E912BF842A@SRV12-0032.cri.camres.org>

Dear R-devel,

I think I've found a bug - the alpha transparency doesn't work when plotting lines with xpd = TRUE.

#works
plot(1:20, col="#1874CD", xpd=T, type="l")

#works
plot(1:20, col="#1874CD50", xpd=F, type="l")

#doesn't work
plot(1:20, col="#1874CD50", xpd=T, type="l")

Thank you.

Jim


	[[alternative HTML version deleted]]


From dwinsemius at comcast.net  Mon Apr 16 21:14:54 2018
From: dwinsemius at comcast.net (David Winsemius)
Date: Mon, 16 Apr 2018 12:14:54 -0700
Subject: [Rd] alpha transparency doesn't work for lines when xpd=TRUE
In-Reply-To: <BBFFC8D403F0364E9A4176D542D830E912BF842A@SRV12-0032.cri.camres.org>
References: <BBFFC8D403F0364E9A4176D542D830E912BF842A@SRV12-0032.cri.camres.org>
Message-ID: <64DA81B1-69D2-4457-95FA-7FFFF24F01A3@comcast.net>


> On Apr 16, 2018, at 10:41 AM, Jiaxuan Chen <Jiaxuan.Chen at cruk.cam.ac.uk> wrote:
> 
> Dear R-devel,
> 
> I think I've found a bug - the alpha transparency doesn't work when plotting lines with xpd = TRUE.
> 
> #works
> plot(1:20, col="#1874CD", xpd=T, type="l")
> 
> #works
> plot(1:20, col="#1874CD50", xpd=F, type="l")
> 
> #doesn't work
> plot(1:20, col="#1874CD50", xpd=T, type="l")

It's behaving as expected (last two lines light blue) on a Mac (El Capitan) and R 3.4.3. (I did check to see if T and F were still TRUE and FALSE at the time. It's possible that they were not in your session. Only TRUE and FALSE are reserved words.)
> 
> Thank you.
> 
> Jim
> 
> 
> 	[[alternative HTML version deleted]]

All the R mailing lists are plain text.

> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel

David Winsemius
Alameda, CA, USA

'Any technology distinguishable from magic is insufficiently advanced.'   -Gehm's Corollary to Clarke's Third Law


From wdunlap at tibco.com  Mon Apr 16 21:59:02 2018
From: wdunlap at tibco.com (William Dunlap)
Date: Mon, 16 Apr 2018 12:59:02 -0700
Subject: [Rd] alpha transparency doesn't work for lines when xpd=TRUE
In-Reply-To: <64DA81B1-69D2-4457-95FA-7FFFF24F01A3@comcast.net>
References: <BBFFC8D403F0364E9A4176D542D830E912BF842A@SRV12-0032.cri.camres.org>
 <64DA81B1-69D2-4457-95FA-7FFFF24F01A3@comcast.net>
Message-ID: <CAF8bMcb37CVQsqzONBQxRBXh2uMVDOO_zTMaKHjBPHz8pfG-jg@mail.gmail.com>

The problem occurs in the Windows GUI with the 'windows()' graphics device.
In the following example the red diagonal line appears in 3 plots but not
in the one
with xpd=TRUE and alpha.f=0.9.

> par(mfrow=c(2,2))
> for(xpd in c(FALSE, TRUE)) for(alpha.f in c(.9, 1))
plot(0:1,xpd=xpd,type="l",col=adjustcolor("red",alpha.f=alpha.f),main=paste0("xpd=",xpd,",
alpha.f=",alpha.f))
> dev.cur()
windows
      2
> sessionInfo()
R version 3.4.4 (2018-03-15)
Platform: x86_64-w64-mingw32/x64 (64-bit)
Running under: Windows 10 x64 (build 16299)

Matrix products: default

locale:
[1] LC_COLLATE=English_United States.1252  LC_CTYPE=English_United
States.1252
[3] LC_MONETARY=English_United States.1252 LC_NUMERIC=C

[5] LC_TIME=English_United States.1252

attached base packages:
[1] stats     graphics  grDevices utils     datasets  methods   base

loaded via a namespace (and not attached):
[1] compiler_3.4.4


Bill Dunlap
TIBCO Software
wdunlap tibco.com

On Mon, Apr 16, 2018 at 12:14 PM, David Winsemius <dwinsemius at comcast.net>
wrote:

>
> > On Apr 16, 2018, at 10:41 AM, Jiaxuan Chen <Jiaxuan.Chen at cruk.cam.ac.uk>
> wrote:
> >
> > Dear R-devel,
> >
> > I think I've found a bug - the alpha transparency doesn't work when
> plotting lines with xpd = TRUE.
> >
> > #works
> > plot(1:20, col="#1874CD", xpd=T, type="l")
> >
> > #works
> > plot(1:20, col="#1874CD50", xpd=F, type="l")
> >
> > #doesn't work
> > plot(1:20, col="#1874CD50", xpd=T, type="l")
>
> It's behaving as expected (last two lines light blue) on a Mac (El
> Capitan) and R 3.4.3. (I did check to see if T and F were still TRUE and
> FALSE at the time. It's possible that they were not in your session. Only
> TRUE and FALSE are reserved words.)
> >
> > Thank you.
> >
> > Jim
> >
> >
> >       [[alternative HTML version deleted]]
>
> All the R mailing lists are plain text.
>
> >
> > ______________________________________________
> > R-devel at r-project.org mailing list
> > https://stat.ethz.ch/mailman/listinfo/r-devel
>
> David Winsemius
> Alameda, CA, USA
>
> 'Any technology distinguishable from magic is insufficiently advanced.'
>  -Gehm's Corollary to Clarke's Third Law
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>

	[[alternative HTML version deleted]]


From therneau at mayo.edu  Mon Apr 16 23:58:45 2018
From: therneau at mayo.edu (Therneau, Terry M., Ph.D.)
Date: Mon, 16 Apr 2018 16:58:45 -0500
Subject: [Rd] strange warning: data() error?
Message-ID: <bb6fa2$98mdev@ironport10.mayo.edu>

A user asked me about this and I can't figure it out.

tmt% R
R Under development (unstable) (2018-04-09 r74565) -- "Unsuffered Consequences"
Copyright (C) 2018 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

 > library(survival)
 > data(cgd0)
Warning message:
In data(cgd0) : data set ?cgd0? not found

----

The data set is present and can be manipulated: data() is not required.? Other data sets 
in the survival package don't generate this message.

Terry T.


From dwinsemius at comcast.net  Tue Apr 17 00:20:16 2018
From: dwinsemius at comcast.net (David Winsemius)
Date: Mon, 16 Apr 2018 15:20:16 -0700
Subject: [Rd] strange warning: data() error?
In-Reply-To: <bb6fa2$98mdev@ironport10.mayo.edu>
References: <bb6fa2$98mdev@ironport10.mayo.edu>
Message-ID: <38FCD0F3-12D7-4B9E-956D-3F9C54E12107@comcast.net>


> On Apr 16, 2018, at 2:58 PM, Therneau, Terry M., Ph.D. via R-devel <r-devel at r-project.org> wrote:
> 
> A user asked me about this and I can't figure it out.
> 
> tmt% R
> R Under development (unstable) (2018-04-09 r74565) -- "Unsuffered Consequences"
> Copyright (C) 2018 The R Foundation for Statistical Computing
> Platform: x86_64-pc-linux-gnu (64-bit)
> 
> > library(survival)
> > data(cgd0)
> Warning message:
> In data(cgd0) : data set ?cgd0? not found
> 
> ----
> 
> The data set is present and can be manipulated: data() is not required.  Other data sets in the survival package don't generate this message.

On a Mac the Data Manager panel lists that dataset as "cgd0 (cgd)" and I get the same warning with any dataset that has a similar appearance of <name paren-name-paren> , even the `state.abb` vector that is displayed "state.abb (state)" (without the quotes.)

> data('state.abb')
Warning message:
In data("state.abb") : data set ?state.abb? not found
> str(state.abb)
 chr [1:50] "AL" "AK" "AZ" "AR" "CA" "CO" "CT" "DE" "FL" "GA" "HI" "ID" "IL" "IN" "IA" "KS" "KY" "LA" "ME" "MD" "MA" ...
> data(stack.loss)
Warning message:
In data(stack.loss) : data set ?stack.loss? not found

So I guess the message is don't feel picked upon. It seems to be an infelicity shared by many other datasets even those in the canonical 'datasets' package.


> 
> Terry T.
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel

David Winsemius
Alameda, CA, USA

'Any technology distinguishable from magic is insufficiently advanced.'   -Gehm's Corollary to Clarke's Third Law


From wdunlap at tibco.com  Tue Apr 17 00:32:37 2018
From: wdunlap at tibco.com (William Dunlap)
Date: Mon, 16 Apr 2018 15:32:37 -0700
Subject: [Rd] strange warning: data() error?
In-Reply-To: <bb6fa2$98mdev@ironport10.mayo.edu>
References: <bb6fa2$98mdev@ironport10.mayo.edu>
Message-ID: <CAF8bMcZ+dbdVqVxG41MXLC+SEy_c3YtE-WQb8UTuTdtMpy=rEA@mail.gmail.com>

data(package="survival") gives, in part,

cgd                     Chronic Granulotomous Disease data
cgd0 (cgd)              Chronic Granulotomous Disease data
colon                   Chemotherapy for Stage B/C colon cancer
flchain                 Assay of serum free light chain for 7874
                        subjects.
genfan                  Generator fans
heart                   Stanford Heart Transplant data
jasa (heart)            Stanford Heart Transplant data
jasa1 (heart)           Stanford Heart Transplant data

The 'name1 (name2)' entries indicate that 'name'; is in the file
labelled name2.  If you run data(cgd) you get both cgd and cdg0
in .GlobalEnv;  if you run data(heart) you get heart, jasa, and jasa1.
I don't think this has changed recently, although it might be nice
if the names were handled more symmetrically, like alias entries
in help files.


Bill Dunlap
TIBCO Software
wdunlap tibco.com

On Mon, Apr 16, 2018 at 2:58 PM, Therneau, Terry M., Ph.D. via R-devel <
r-devel at r-project.org> wrote:

> A user asked me about this and I can't figure it out.
>
> tmt% R
> R Under development (unstable) (2018-04-09 r74565) -- "Unsuffered
> Consequences"
> Copyright (C) 2018 The R Foundation for Statistical Computing
> Platform: x86_64-pc-linux-gnu (64-bit)
>
> > library(survival)
> > data(cgd0)
> Warning message:
> In data(cgd0) : data set ?cgd0? not found
>
> ----
>
> The data set is present and can be manipulated: data() is not required.
> Other data sets in the survival package don't generate this message.
>
> Terry T.
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>

	[[alternative HTML version deleted]]


From dwinsemius at comcast.net  Tue Apr 17 01:08:03 2018
From: dwinsemius at comcast.net (David Winsemius)
Date: Mon, 16 Apr 2018 16:08:03 -0700
Subject: [Rd] strange warning: data() error?
In-Reply-To: <38FCD0F3-12D7-4B9E-956D-3F9C54E12107@comcast.net>
References: <bb6fa2$98mdev@ironport10.mayo.edu>
 <38FCD0F3-12D7-4B9E-956D-3F9C54E12107@comcast.net>
Message-ID: <52821B55-4853-4D91-98D7-AE0831EE4913@comcast.net>


> On Apr 16, 2018, at 3:20 PM, David Winsemius <dwinsemius at comcast.net> wrote:
> 
>> 
>> On Apr 16, 2018, at 2:58 PM, Therneau, Terry M., Ph.D. via R-devel <r-devel at r-project.org> wrote:
>> 
>> A user asked me about this and I can't figure it out.
>> 
>> tmt% R
>> R Under development (unstable) (2018-04-09 r74565) -- "Unsuffered Consequences"
>> Copyright (C) 2018 The R Foundation for Statistical Computing
>> Platform: x86_64-pc-linux-gnu (64-bit)
>> 
>>> library(survival)
>>> data(cgd0)
>> Warning message:
>> In data(cgd0) : data set ?cgd0? not found
>> 
>> ----
>> 
>> The data set is present and can be manipulated: data() is not required.  Other data sets in the survival package don't generate this message.
> 
> On a Mac the Data Manager panel lists that dataset as "cgd0 (cgd)" and I get the same warning with any dataset that has a similar appearance of <name paren-name-paren> , even the `state.abb` vector that is displayed "state.abb (state)" (without the quotes.)
> 
>> data('state.abb')
> Warning message:
> In data("state.abb") : data set ?state.abb? not found
>> str(state.abb)
> chr [1:50] "AL" "AK" "AZ" "AR" "CA" "CO" "CT" "DE" "FL" "GA" "HI" "ID" "IL" "IN" "IA" "KS" "KY" "LA" "ME" "MD" "MA" ...
>> data(stack.loss)
> Warning message:
> In data(stack.loss) : data set ?stack.loss? not found
> 
> So I guess the message is don't feel picked upon. It seems to be an infelicity shared by many other datasets even those in the canonical 'datasets' package.

> survival_Rdata <- readRDS("/Library/Frameworks/R.framework/Versions/3.4/Resources/library/survival/data/Rdata.rds")
> survival_Rdata
$bladder
[1] "bladder"  "bladder1" "bladder2"

$cancer
[1] "cancer"

$cgd
[1] "cgd"  "cgd0"

$colon
[1] "colon"

$flchain
[1] "flchain"

$genfan
[1] "genfan"

$heart
[1] "heart" "jasa"  "jasa1"

------- snip ----

data(bladder2)
# Warning message:
# In data(bladder2) : data set ?bladder2? not found

data(mgus1)
# Warning message:
# In data(mgus1) : data set ?mgus1? not found

>  data(mgus1)
Warning message:
In data(mgus1) : data set ?mgus1? not found

> data("survexp.mn")
Warning message:
In data("survexp.mn") : data set ?survexp.mn? not found



Hypothesis:   datasets in a ..library/data/Rdata.rds file whose listing does not match the name of the dataset from which it is derived will cause the behavior in question.

And Terry; After executing `data(package-"survival")` I must mention that the spelling of "Granulomatous" is not "Granulotomous", and neither is the spelling of "gammapathy", "gammapothy".


-- 

David Winsemius
Alameda, CA, USA

'Any technology distinguishable from magic is insufficiently advanced.'   -Gehm's Corollary to Clarke's Third Law


From tkeitt at utexas.edu  Mon Apr 16 15:40:42 2018
From: tkeitt at utexas.edu (Tim Keitt)
Date: Mon, 16 Apr 2018 08:40:42 -0500
Subject: [Rd] Experimental package for asan-usan checks
Message-ID: <CANnL8gq+gabT=hQVA_RVL-kyucf1nutTn8iKZFg2S4DH+8izhw@mail.gmail.com>

I've been trying to replicate Brian's excellent work on sanity checks so we
can get that information before submitting. I've put together an
experimental package here: https://github.com/thk686/sanitycheckr

It uses a modified rocker r-devel-san image and attempts to install all
dependencies before running a check.

This would probably be better integrated into TravisCI, et al. It was
nonetheless a good opportunity to learn a bit about docker + asan/usan.
Happy to have people kick the tires, make suggestions or make pull requests.

THK

http://www.keittlab.org/

	[[alternative HTML version deleted]]


From pdalgd at gmail.com  Tue Apr 17 10:58:54 2018
From: pdalgd at gmail.com (peter dalgaard)
Date: Tue, 17 Apr 2018 10:58:54 +0200
Subject: [Rd] strange warning: data() error?
In-Reply-To: <52821B55-4853-4D91-98D7-AE0831EE4913@comcast.net>
References: <bb6fa2$98mdev@ironport10.mayo.edu>
 <38FCD0F3-12D7-4B9E-956D-3F9C54E12107@comcast.net>
 <52821B55-4853-4D91-98D7-AE0831EE4913@comcast.net>
Message-ID: <049192EC-4F73-442A-B21C-52753C95578D@gmail.com>


> On 17 Apr 2018, at 01:08 , David Winsemius <dwinsemius at comcast.net> wrote:
> 
> 
> Hypothesis:   datasets in a ..library/data/Rdata.rds file whose listing does not match the name of the dataset from which it is derived will cause the behavior in question.

Yes, because data() originally goes looking for a file with a matching name, then loads/reads/executes it depending on file extension. However, some files can generate objects with a different name - or several such objects. Turning LazyData on doesn't change the semantics of data() (by design, I guess).

So survival's source "data" directory has cgd.Rda with cgd and cgd0, but no cgd0.Rda, this is reflected in the "datalist" file in the installed package:

data pd$ more datalist 
bladder: bladder bladder1 bladder2
cancer
cgd: cgd cgd0
colon
flchain
genfan
heart: heart jasa jasa1

 
-- 
Peter Dalgaard, Professor,
Center for Statistics, Copenhagen Business School
Solbjerg Plads 3, 2000 Frederiksberg, Denmark
Phone: (+45)38153501
Office: A 4.23
Email: pd.mes at cbs.dk  Priv: PDalgd at gmail.com


From profjcnash at gmail.com  Tue Apr 17 16:18:02 2018
From: profjcnash at gmail.com (J C Nash)
Date: Tue, 17 Apr 2018 10:18:02 -0400
Subject: [Rd] Minor glitch in optim()
Message-ID: <2632537f-f417-d92f-00fb-e6229fc36aed@gmail.com>

Having worked with optim() and related programs for years, it surprised me
that I haven't noticed this before, but optim() is inconsistent in how it
deals with bounds constraints specified at infinity. Here's an example:

# optim-glitch-Ex.R
x0<-c(1,2,3,4)
fnt <- function(x, fscale=10){
  yy <- length(x):1
  val <- sum((yy*x)^2)*fscale
}
grt <- function(x, fscale=10){
  nn <- length(x)
  yy <- nn:1
  #    gg <- rep(NA,nn)
  gg <- 2*(yy^2)*x*fscale
  gg
}

npar <- 4
lower <- -Inf
l2 <- rep(-Inf,npar)

a1 <- optim(x0, fnt, grt, lower=lower, method="BFGS") # works
a1
a1a<- optim(x0, fnt, grt, lower=l2, method="BFGS") # changes method!
a1a

The first call uses BFGS method without warning. The second gives
a warning that L-BFGS-B should be used, and from the output uses
this.

This is a bit of an edge case. My own preference would be for optim()
to simply fail if bounds of any type are specified without L-BFGS-B
as the method. I believe that gives clarity, even though infinite
bounds imply an unconstrained problem.

The behaviour where a scalar infinite bound is treated as unconstrained
but a vector is not is inconsistent, however, and I think that at some
point should be fixed. Possibly the easiest way is to treat infinite
bounds specified as a vector the same as those specified as a scalar.
That is to adjust the code in File src/library/stats/R/optim.R
in the block

    if((length(lower) > 1L || length(upper) > 1L ||
       lower[1L] != -Inf || upper[1L] != Inf)
       && !any(method == c("L-BFGS-B","Brent"))) {
	warning("bounds can only be used with method L-BFGS-B (or Brent)")
	method <- "L-BFGS-B"
    }

Possibly

    if((any(is.finite(lower) || any(is.finite(upper))
       && !any(method == c("L-BFGS-B","Brent"))) {
	warning("bounds can only be used with method L-BFGS-B (or Brent)")
	method <- "L-BFGS-B"
    }

Best, JN


From wdunlap at tibco.com  Wed Apr 18 22:38:06 2018
From: wdunlap at tibco.com (William Dunlap)
Date: Wed, 18 Apr 2018 13:38:06 -0700
Subject: [Rd] odd assignInNamespace / setGeneric interaction
Message-ID: <CAF8bMcZKhy_7nZm3Weoabi5fbbF=9Z8ciPK1LVd8Wt_p8HZshw@mail.gmail.com>

A coworker got tired of having to type 'yes' or 'no' after quitting R: he
never wanted to save the R workspace when quitting.  So he added
assignInNamespace lines to his .Rprofile file to replace base::q with
one that, by default, called the original with save="no"..

  utils::assignInNamespace(".qOrig", base::q, "base")
  utils::assignInNamespace("q", function(save = "no", ...)
base:::.qOrig(save = save, ...), "base")

This worked fine until he decide to load the distr package:

  > suppressPackageStartupMessages(library(distr))
  Error: package or namespace load failed for ?distr? in
loadNamespace(name):
   there is no package called ?.GlobalEnv?

distr calls setGeneric("q"), which indirectly causes the environment
of base::q, .GlobalEnv, to be loaded as a namespace, causing the error.
Giving his replacement q function the environment getNamespace("base")
avoids the problem.

I can reproduce the problem by making a package that just calls
setGeneric("as.hexmode",...) and a NAMEPACE file with
exportMethods("as.hexmode").  If my .Rprofile puts a version of as.hexmode
with environment .GlobalEnv into the base namespace, then I get the same
error when trying to load the package.

I suppose this is mostly a curiosity and unlikely to happen to most people
but it did confuse us for a while.

Bill Dunlap
TIBCO Software
wdunlap tibco.com

	[[alternative HTML version deleted]]


From lawrence.michael at gene.com  Wed Apr 18 23:16:37 2018
From: lawrence.michael at gene.com (Michael Lawrence)
Date: Wed, 18 Apr 2018 14:16:37 -0700
Subject: [Rd] odd assignInNamespace / setGeneric interaction
In-Reply-To: <CAF8bMcZKhy_7nZm3Weoabi5fbbF=9Z8ciPK1LVd8Wt_p8HZshw@mail.gmail.com>
References: <CAF8bMcZKhy_7nZm3Weoabi5fbbF=9Z8ciPK1LVd8Wt_p8HZshw@mail.gmail.com>
Message-ID: <CAOQ5NyeeYGAD9NyfQepdHmcRfjWppJepeZebSYiRO-ZCJqi9_Q@mail.gmail.com>

Hi Bill,

Ideally, your coworker would just make an alias (or shortcut or
whatever) for R that passed --no-save to R. I'll try to look into this
though.

Michael

On Wed, Apr 18, 2018 at 1:38 PM, William Dunlap via R-devel
<r-devel at r-project.org> wrote:
> A coworker got tired of having to type 'yes' or 'no' after quitting R: he
> never wanted to save the R workspace when quitting.  So he added
> assignInNamespace lines to his .Rprofile file to replace base::q with
> one that, by default, called the original with save="no"..
>
>   utils::assignInNamespace(".qOrig", base::q, "base")
>   utils::assignInNamespace("q", function(save = "no", ...)
> base:::.qOrig(save = save, ...), "base")
>
> This worked fine until he decide to load the distr package:
>
>   > suppressPackageStartupMessages(library(distr))
>   Error: package or namespace load failed for ?distr? in
> loadNamespace(name):
>    there is no package called ?.GlobalEnv?
>
> distr calls setGeneric("q"), which indirectly causes the environment
> of base::q, .GlobalEnv, to be loaded as a namespace, causing the error.
> Giving his replacement q function the environment getNamespace("base")
> avoids the problem.
>
> I can reproduce the problem by making a package that just calls
> setGeneric("as.hexmode",...) and a NAMEPACE file with
> exportMethods("as.hexmode").  If my .Rprofile puts a version of as.hexmode
> with environment .GlobalEnv into the base namespace, then I get the same
> error when trying to load the package.
>
> I suppose this is mostly a curiosity and unlikely to happen to most people
> but it did confuse us for a while.
>
> Bill Dunlap
> TIBCO Software
> wdunlap tibco.com
>
>         [[alternative HTML version deleted]]
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>


From Colton.Tousey at kc.frb.org  Wed Apr 18 23:08:16 2018
From: Colton.Tousey at kc.frb.org (Tousey, Colton)
Date: Wed, 18 Apr 2018 21:08:16 +0000
Subject: [Rd] R Bug: write.table for matrix of more than 2, 147, 483,
 648 elements
Message-ID: <mailman.46908.0.1524086599.1206.r-devel@r-project.org>

Hello,

I want to report a bug in R that is limiting my capabilities to export a matrix with write.csv or write.table with over 2,147,483,648 elements (C's int limit). I found this bug already reported about before: https://bugs.r-project.org/bugzilla/show_bug.cgi?id=17182. However, there appears to be no solution or fixes in upcoming R version releases.

The error message is coming from the writetable part of the utils package in the io.c source code(https://svn.r-project.org/R/trunk/src/library/utils/src/io.c):
/* quick integrity check */
                if(XLENGTH(x) != (R_len_t)nr * nc)
                    error(_("corrupt matrix -- dims not not match length"));

The issue is that nr*nc is an integer and the size of my matrix, 2.8 billion elements, exceeds C's limit, so the check forces the code to fail.

My version:
> R.Version()
$platform
[1] "x86_64-w64-mingw32"

$arch
[1] "x86_64"

$os
[1] "mingw32"

$system
[1] "x86_64, mingw32"

$status
[1] ""

$major
[1] "3"

$minor
[1] "4.3"

$year
[1] "2017"

$month
[1] "11"

$day
[1] "30"

$`svn rev`
[1] "73796"

$language
[1] "R"

$version.string
[1] "R version 3.4.3 (2017-11-30)"

$nickname
[1] "Kite-Eating Tree"

Thank you,
Colton


Colton Tousey
Research Associate II
P: 816.585.0300   E: colton.tousey at kc.frb.org
FEDERAL RESERVE BANK OF KANSAS CITY
1 Memorial Drive   *   Kansas City, Missouri 64198   *   www.kansascityfed.org

	[[alternative HTML version deleted]]


From smckinney at bccrc.ca  Thu Apr 19 00:38:05 2018
From: smckinney at bccrc.ca (Steven McKinney)
Date: Wed, 18 Apr 2018 22:38:05 +0000
Subject: [Rd] R Bug: write.table for matrix of more than 2, 147, 483,
 648 elements
In-Reply-To: <20180418212319.1C1A54CA@hypatia.math.ethz.ch>
References: <20180418212319.1C1A54CA@hypatia.math.ethz.ch>
Message-ID: <f95e05a0a73d4c4393a2db6626e82fc3@CRCMAIL6.BCCRC.CA>

Hi Colton,

You could divide your write task into chunks that do not violate the 2^31-1 limit.

write.table has an append argument (default FALSE). 

Figure out a row chunk size nri < nr such that nri * nc is under 2^31-1 and use
write.table() to write that out.

Then use 
write.table(  append = TRUE, )
for the next chunk of rows, looping over chunks until done.  Two chunks will get your 2.8 billion entries done.


Best

Steve



Steven McKinney, Ph.D.

Statistician
Molecular Oncology and Breast Cancer Program
British Columbia Cancer Research Centre




> -----Original Message-----
> From: R-devel [mailto:r-devel-bounces at r-project.org] On Behalf Of Tousey,
> Colton
> Sent: April-18-18 2:08 PM
> To: R-core at r-project.org; simon.urbanek at R-project.org; R-devel at r-
> project.org
> Subject: [Rd] R Bug: write.table for matrix of more than 2, 147, 483, 648
> elements
> 
> Hello,
> 
> I want to report a bug in R that is limiting my capabilities to export a
> matrix with write.csv or write.table with over 2,147,483,648 elements (C's
> int limit). I found this bug already reported about before: https://bugs.r-
> project.org/bugzilla/show_bug.cgi?id=17182. However, there appears to be no
> solution or fixes in upcoming R version releases.
> 
> The error message is coming from the writetable part of the utils package
> in the io.c source code(https://svn.r-
> project.org/R/trunk/src/library/utils/src/io.c):
> /* quick integrity check */
>                 if(XLENGTH(x) != (R_len_t)nr * nc)
>                     error(_("corrupt matrix -- dims not not match
> length"));
> 
> The issue is that nr*nc is an integer and the size of my matrix, 2.8
> billion elements, exceeds C's limit, so the check forces the code to fail.
> 
> My version:
> > R.Version()
> $platform
> [1] "x86_64-w64-mingw32"
> 
> $arch
> [1] "x86_64"
> 
> $os
> [1] "mingw32"
> 
> $system
> [1] "x86_64, mingw32"
> 
> $status
> [1] ""
> 
> $major
> [1] "3"
> 
> $minor
> [1] "4.3"
> 
> $year
> [1] "2017"
> 
> $month
> [1] "11"
> 
> $day
> [1] "30"
> 
> $`svn rev`
> [1] "73796"
> 
> $language
> [1] "R"
> 
> $version.string
> [1] "R version 3.4.3 (2017-11-30)"
> 
> $nickname
> [1] "Kite-Eating Tree"
> 
> Thank you,
> Colton
> 
> 
> Colton Tousey
> Research Associate II
> P: 816.585.0300   E: colton.tousey at kc.frb.org
> FEDERAL RESERVE BANK OF KANSAS CITY
> 1 Memorial Drive   *   Kansas City, Missouri 64198   *
> www.kansascityfed.org
> 
> 	[[alternative HTML version deleted]]
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From spencer.graves at prodsyse.com  Thu Apr 19 01:03:40 2018
From: spencer.graves at prodsyse.com (Spencer Graves)
Date: Wed, 18 Apr 2018 18:03:40 -0500
Subject: [Rd] R Bug: write.table for matrix of more than 2, 147, 483,
 648 elements
In-Reply-To: <f95e05a0a73d4c4393a2db6626e82fc3@CRCMAIL6.BCCRC.CA>
References: <20180418212319.1C1A54CA@hypatia.math.ethz.ch>
 <f95e05a0a73d4c4393a2db6626e82fc3@CRCMAIL6.BCCRC.CA>
Message-ID: <66ab324a-f201-3b3f-9d54-bfeabee34579@prodsyse.com>



On 2018-04-18 17:38, Steven McKinney wrote:
> Hi Colton,
>
> You could divide your write task into chunks that do not violate the 2^31-1 limit.
>
> write.table has an append argument (default FALSE).
>
> Figure out a row chunk size nri < nr such that nri * nc is under 2^31-1 and use
> write.table() to write that out.
>
> Then use
> write.table(  append = TRUE, )
> for the next chunk of rows, looping over chunks until done.  Two chunks will get your 2.8 billion entries done.


 ????? Magnificent:? Is that something that could be implemented inside 
write.table?


 ????? Spencer
>
> Best
>
> Steve
>
>
>
> Steven McKinney, Ph.D.
>
> Statistician
> Molecular Oncology and Breast Cancer Program
> British Columbia Cancer Research Centre
>
>
>
>
>> -----Original Message-----
>> From: R-devel [mailto:r-devel-bounces at r-project.org] On Behalf Of Tousey,
>> Colton
>> Sent: April-18-18 2:08 PM
>> To: R-core at r-project.org; simon.urbanek at R-project.org; R-devel at r-
>> project.org
>> Subject: [Rd] R Bug: write.table for matrix of more than 2, 147, 483, 648
>> elements
>>
>> Hello,
>>
>> I want to report a bug in R that is limiting my capabilities to export a
>> matrix with write.csv or write.table with over 2,147,483,648 elements (C's
>> int limit). I found this bug already reported about before: https://bugs.r-
>> project.org/bugzilla/show_bug.cgi?id=17182. However, there appears to be no
>> solution or fixes in upcoming R version releases.
>>
>> The error message is coming from the writetable part of the utils package
>> in the io.c source code(https://svn.r-
>> project.org/R/trunk/src/library/utils/src/io.c):
>> /* quick integrity check */
>>                  if(XLENGTH(x) != (R_len_t)nr * nc)
>>                      error(_("corrupt matrix -- dims not not match
>> length"));
>>
>> The issue is that nr*nc is an integer and the size of my matrix, 2.8
>> billion elements, exceeds C's limit, so the check forces the code to fail.
>>
>> My version:
>>> R.Version()
>> $platform
>> [1] "x86_64-w64-mingw32"
>>
>> $arch
>> [1] "x86_64"
>>
>> $os
>> [1] "mingw32"
>>
>> $system
>> [1] "x86_64, mingw32"
>>
>> $status
>> [1] ""
>>
>> $major
>> [1] "3"
>>
>> $minor
>> [1] "4.3"
>>
>> $year
>> [1] "2017"
>>
>> $month
>> [1] "11"
>>
>> $day
>> [1] "30"
>>
>> $`svn rev`
>> [1] "73796"
>>
>> $language
>> [1] "R"
>>
>> $version.string
>> [1] "R version 3.4.3 (2017-11-30)"
>>
>> $nickname
>> [1] "Kite-Eating Tree"
>>
>> Thank you,
>> Colton
>>
>>
>> Colton Tousey
>> Research Associate II
>> P: 816.585.0300   E: colton.tousey at kc.frb.org
>> FEDERAL RESERVE BANK OF KANSAS CITY
>> 1 Memorial Drive   *   Kansas City, Missouri 64198   *
>> www.kansascityfed.org
>>
>> 	[[alternative HTML version deleted]]
>>
>> ______________________________________________
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From murdoch.duncan at gmail.com  Thu Apr 19 02:06:40 2018
From: murdoch.duncan at gmail.com (Duncan Murdoch)
Date: Wed, 18 Apr 2018 20:06:40 -0400
Subject: [Rd] R Bug: write.table for matrix of more than 2, 147, 483,
 648 elements
In-Reply-To: <20180418212319.34878428@hypatia.math.ethz.ch>
References: <20180418212319.34878428@hypatia.math.ethz.ch>
Message-ID: <e523f994-7f4c-b94f-dcda-1a0b96c70d06@gmail.com>

On 18/04/2018 5:08 PM, Tousey, Colton wrote:
> Hello,
> 
> I want to report a bug in R that is limiting my capabilities to export a matrix with write.csv or write.table with over 2,147,483,648 elements (C's int limit). I found this bug already reported about before: https://bugs.r-project.org/bugzilla/show_bug.cgi?id=17182. However, there appears to be no solution or fixes in upcoming R version releases.
> 
> The error message is coming from the writetable part of the utils package in the io.c source code(https://svn.r-project.org/R/trunk/src/library/utils/src/io.c):
> /* quick integrity check */
>                  if(XLENGTH(x) != (R_len_t)nr * nc)
>                      error(_("corrupt matrix -- dims not not match length"));
> 
> The issue is that nr*nc is an integer and the size of my matrix, 2.8 billion elements, exceeds C's limit, so the check forces the code to fail.

Yes, looks like a typo:  R_len_t is an int, and that's how nr was 
declared.  It should be R_xlen_t, which is bigger on machines that 
support big vectors.

I haven't tested the change; there may be something else in that 
function that assumes short vectors.

Duncan Murdoch

> 
> My version:
>> R.Version()
> $platform
> [1] "x86_64-w64-mingw32"
> 
> $arch
> [1] "x86_64"
> 
> $os
> [1] "mingw32"
> 
> $system
> [1] "x86_64, mingw32"
> 
> $status
> [1] ""
> 
> $major
> [1] "3"
> 
> $minor
> [1] "4.3"
> 
> $year
> [1] "2017"
> 
> $month
> [1] "11"
> 
> $day
> [1] "30"
> 
> $`svn rev`
> [1] "73796"
> 
> $language
> [1] "R"
> 
> $version.string
> [1] "R version 3.4.3 (2017-11-30)"
> 
> $nickname
> [1] "Kite-Eating Tree"
> 
> Thank you,
> Colton
> 
> 
> Colton Tousey
> Research Associate II
> P: 816.585.0300   E: colton.tousey at kc.frb.org
> FEDERAL RESERVE BANK OF KANSAS CITY
> 1 Memorial Drive   *   Kansas City, Missouri 64198   *   www.kansascityfed.org
> 
> 	[[alternative HTML version deleted]]
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>


From tomas.kalibera at gmail.com  Thu Apr 19 09:30:54 2018
From: tomas.kalibera at gmail.com (Tomas Kalibera)
Date: Thu, 19 Apr 2018 09:30:54 +0200
Subject: [Rd] R Bug: write.table for matrix of more than 2, 147, 483,
 648 elements
In-Reply-To: <e523f994-7f4c-b94f-dcda-1a0b96c70d06@gmail.com>
References: <20180418212319.34878428@hypatia.math.ethz.ch>
 <e523f994-7f4c-b94f-dcda-1a0b96c70d06@gmail.com>
Message-ID: <ccd7638e-3105-cad1-1eb4-87120a47d0da@gmail.com>

On 04/19/2018 02:06 AM, Duncan Murdoch wrote:
> On 18/04/2018 5:08 PM, Tousey, Colton wrote:
>> Hello,
>>
>> I want to report a bug in R that is limiting my capabilities to 
>> export a matrix with write.csv or write.table with over 2,147,483,648 
>> elements (C's int limit). I found this bug already reported about 
>> before: https://bugs.r-project.org/bugzilla/show_bug.cgi?id=17182. 
>> However, there appears to be no solution or fixes in upcoming R 
>> version releases.
>>
>> The error message is coming from the writetable part of the utils 
>> package in the io.c source 
>> code(https://svn.r-project.org/R/trunk/src/library/utils/src/io.c):
>> /* quick integrity check */
>> ???????????????? if(XLENGTH(x) != (R_len_t)nr * nc)
>> ???????????????????? error(_("corrupt matrix -- dims not not match 
>> length"));
>>
>> The issue is that nr*nc is an integer and the size of my matrix, 2.8 
>> billion elements, exceeds C's limit, so the check forces the code to 
>> fail.
>
> Yes, looks like a typo:? R_len_t is an int, and that's how nr was 
> declared.? It should be R_xlen_t, which is bigger on machines that 
> support big vectors.
>
> I haven't tested the change; there may be something else in that 
> function that assumes short vectors.
Indeed, I think the function won't work for long vectors because of 
EncodeElement2 and EncodeElement0. EncodeElement2/0 would have to be 
changed, including their signatures

Tomas



>
> Duncan Murdoch
>
>>
>> My version:
>>> R.Version()
>> $platform
>> [1] "x86_64-w64-mingw32"
>>
>> $arch
>> [1] "x86_64"
>>
>> $os
>> [1] "mingw32"
>>
>> $system
>> [1] "x86_64, mingw32"
>>
>> $status
>> [1] ""
>>
>> $major
>> [1] "3"
>>
>> $minor
>> [1] "4.3"
>>
>> $year
>> [1] "2017"
>>
>> $month
>> [1] "11"
>>
>> $day
>> [1] "30"
>>
>> $`svn rev`
>> [1] "73796"
>>
>> $language
>> [1] "R"
>>
>> $version.string
>> [1] "R version 3.4.3 (2017-11-30)"
>>
>> $nickname
>> [1] "Kite-Eating Tree"
>>
>> Thank you,
>> Colton
>>
>>
>> Colton Tousey
>> Research Associate II
>> P: 816.585.0300?? E: colton.tousey at kc.frb.org
>> FEDERAL RESERVE BANK OF KANSAS CITY
>> 1 Memorial Drive?? *?? Kansas City, Missouri 64198?? * 
>> www.kansascityfed.org
>>
>> ????[[alternative HTML version deleted]]
>>
>> ______________________________________________
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From maechler at stat.math.ethz.ch  Thu Apr 19 11:33:36 2018
From: maechler at stat.math.ethz.ch (Martin Maechler)
Date: Thu, 19 Apr 2018 11:33:36 +0200
Subject: [Rd] odd assignInNamespace / setGeneric interaction
In-Reply-To: <CAOQ5NyeeYGAD9NyfQepdHmcRfjWppJepeZebSYiRO-ZCJqi9_Q@mail.gmail.com>
References: <CAF8bMcZKhy_7nZm3Weoabi5fbbF=9Z8ciPK1LVd8Wt_p8HZshw@mail.gmail.com>
 <CAOQ5NyeeYGAD9NyfQepdHmcRfjWppJepeZebSYiRO-ZCJqi9_Q@mail.gmail.com>
Message-ID: <23256.25200.216197.166249@stat.math.ethz.ch>

>>>>> Michael Lawrence <lawrence.michael at gene.com>
>>>>>     on Wed, 18 Apr 2018 14:16:37 -0700 writes:

    > Hi Bill,
    > Ideally, your coworker would just make an alias (or shortcut or
    > whatever) for R that passed --no-save to R. I'll try to look into this
    > though.

    > Michael

Yes, indeed!

As some of you know, I've been using R (for ca 23 years now)
almost only from ESS (Emacs Speaks Statistics).

There, I've activated '--no-save' for ca 20 years or so,
nowadays (since Emacs has adopted "custom") I have had this in
my ~/.emacs  custom lines 

 '(inferior-R-args "--no-restore-history --no-save ")

standalone (to paste into your own ~/.emacs ) :

(custom-set-variables '(inferior-R-args "--no-restore-history --no-save "))

--------

The current fashionable IDE to R,
Rstudio, also allows to set such switches by its GUI:

Menu [Tools]
  --> (bottom) entry [Global Options]
    --> the first sidebar entry  [R General]:
    Look for two lines mentioning "workspace" or ".RData" and
    change to 'save never' ( == --no-save),
    and nowadays I also recommend my students to not *read*
    these, i.e., '--no-restore'

---

@Michael: I'm not sure what you're considering.  I feel that in
 general, there are already too many R startup tweaking
 possibilities, notably via environment variables.
[e.g., the current ways to pre-determine the active .libPaths() in R, 
 and the fact the R calls R again during 'R CMD check' etc,
 sometimes drives me crazy when .libPaths() become incompatible
 for too many reasons .... yes, I'm diverting: that's another story]

If we'd want to allow using (yet  another!) environment variable
here, I'd at least would  make sure they are not consulted when
explicit --no-save or --vanilla, etc are used.

Martin


    > On Wed, Apr 18, 2018 at 1:38 PM, William Dunlap via R-devel
    > <r-devel at r-project.org> wrote:
    >> A coworker got tired of having to type 'yes' or 'no' after quitting R: he
    >> never wanted to save the R workspace when quitting.  So he added
    >> assignInNamespace lines to his .Rprofile file to replace base::q with
    >> one that, by default, called the original with save="no"..
    >> 
    >> utils::assignInNamespace(".qOrig", base::q, "base")
    >> utils::assignInNamespace("q", function(save = "no", ...)
    >> base:::.qOrig(save = save, ...), "base")
    >> 
    >> This worked fine until he decide to load the distr package:
    >> 
    >> > suppressPackageStartupMessages(library(distr))
    >> Error: package or namespace load failed for ?distr? in
    >> loadNamespace(name):
    >> there is no package called ?.GlobalEnv?
    >> 
    >> distr calls setGeneric("q"), which indirectly causes the environment
    >> of base::q, .GlobalEnv, to be loaded as a namespace, causing the error.
    >> Giving his replacement q function the environment getNamespace("base")
    >> avoids the problem.
    >> 
    >> I can reproduce the problem by making a package that just calls
    >> setGeneric("as.hexmode",...) and a NAMEPACE file with
    >> exportMethods("as.hexmode").  If my .Rprofile puts a version of as.hexmode
    >> with environment .GlobalEnv into the base namespace, then I get the same
    >> error when trying to load the package.
    >> 
    >> I suppose this is mostly a curiosity and unlikely to happen to most people
    >> but it did confuse us for a while.
    >> 
    >> Bill Dunlap
    >> TIBCO Software
    >> wdunlap tibco.com
    >> 
    >> [[alternative HTML version deleted]]
    >> 
    >> ______________________________________________
    >> R-devel at r-project.org mailing list
    >> https://stat.ethz.ch/mailman/listinfo/r-devel
    >> 

    > ______________________________________________
    > R-devel at r-project.org mailing list
    > https://stat.ethz.ch/mailman/listinfo/r-devel


From sokol at insa-toulouse.fr  Thu Apr 19 11:47:20 2018
From: sokol at insa-toulouse.fr (Serguei Sokol)
Date: Thu, 19 Apr 2018 11:47:20 +0200
Subject: [Rd] R Bug: write.table for matrix of more than 2, 147, 483,
 648 elements
In-Reply-To: <ccd7638e-3105-cad1-1eb4-87120a47d0da@gmail.com>
References: <20180418212319.34878428@hypatia.math.ethz.ch>
 <e523f994-7f4c-b94f-dcda-1a0b96c70d06@gmail.com>
 <ccd7638e-3105-cad1-1eb4-87120a47d0da@gmail.com>
Message-ID: <0b1ada3d-fdf0-b975-d5c4-70fe353de7c9@insa-toulouse.fr>

Le 19/04/2018 ? 09:30, Tomas Kalibera a ?crit?:
> On 04/19/2018 02:06 AM, Duncan Murdoch wrote:
>> On 18/04/2018 5:08 PM, Tousey, Colton wrote:
>>> Hello,
>>>
>>> I want to report a bug in R that is limiting my capabilities to 
>>> export a matrix with write.csv or write.table with over 
>>> 2,147,483,648 elements (C's int limit). I found this bug already 
>>> reported about before: 
>>> https://bugs.r-project.org/bugzilla/show_bug.cgi?id=17182. However, 
>>> there appears to be no solution or fixes in upcoming R version 
>>> releases.
>>>
>>> The error message is coming from the writetable part of the utils 
>>> package in the io.c source 
>>> code(https://svn.r-project.org/R/trunk/src/library/utils/src/io.c):
>>> /* quick integrity check */
>>> ???????????????? if(XLENGTH(x) != (R_len_t)nr * nc)
>>> ???????????????????? error(_("corrupt matrix -- dims not not match 
>>> length"));
>>>
>>> The issue is that nr*nc is an integer and the size of my matrix, 2.8 
>>> billion elements, exceeds C's limit, so the check forces the code to 
>>> fail.
>>
>> Yes, looks like a typo:? R_len_t is an int, and that's how nr was 
>> declared.? It should be R_xlen_t, which is bigger on machines that 
>> support big vectors.
>>
>> I haven't tested the change; there may be something else in that 
>> function that assumes short vectors.
> Indeed, I think the function won't work for long vectors because of 
> EncodeElement2 and EncodeElement0. EncodeElement2/0 would have to be 
> changed, including their signatures

That would be a definite fix but before such deep rewriting is 
undertaken may the following small fix (in addition to "(R_xlen_t)nr * 
nc") will be sufficient for cases where nr and nc are in int range but 
their product can reach long vector limit:

replace
 ??? tmp = EncodeElement2(x, i + j*nr, quote_col[j], qmethod,
 ??? ??? ??? ??? ??? &strBuf, sdec);
by
 ??? tmp = EncodeElement2(VECTOR_ELT(x, (R_xlen_t)i + j*nr), 0, 
quote_col[j], qmethod,
 ??? ??? ??? ??? ??? &strBuf, sdec);

Serguei


From tomas.kalibera at gmail.com  Thu Apr 19 12:15:46 2018
From: tomas.kalibera at gmail.com (Tomas Kalibera)
Date: Thu, 19 Apr 2018 12:15:46 +0200
Subject: [Rd] R Bug: write.table for matrix of more than 2, 147, 483,
 648 elements
In-Reply-To: <0b1ada3d-fdf0-b975-d5c4-70fe353de7c9@insa-toulouse.fr>
References: <20180418212319.34878428@hypatia.math.ethz.ch>
 <e523f994-7f4c-b94f-dcda-1a0b96c70d06@gmail.com>
 <ccd7638e-3105-cad1-1eb4-87120a47d0da@gmail.com>
 <0b1ada3d-fdf0-b975-d5c4-70fe353de7c9@insa-toulouse.fr>
Message-ID: <c9b2730a-0575-25a5-3bad-cd6690108af8@gmail.com>

On 04/19/2018 11:47 AM, Serguei Sokol wrote:
> Le 19/04/2018 ? 09:30, Tomas Kalibera a ?crit?:
>> On 04/19/2018 02:06 AM, Duncan Murdoch wrote:
>>> On 18/04/2018 5:08 PM, Tousey, Colton wrote:
>>>> Hello,
>>>>
>>>> I want to report a bug in R that is limiting my capabilities to 
>>>> export a matrix with write.csv or write.table with over 
>>>> 2,147,483,648 elements (C's int limit). I found this bug already 
>>>> reported about before: 
>>>> https://bugs.r-project.org/bugzilla/show_bug.cgi?id=17182. However, 
>>>> there appears to be no solution or fixes in upcoming R version 
>>>> releases.
>>>>
>>>> The error message is coming from the writetable part of the utils 
>>>> package in the io.c source 
>>>> code(https://svn.r-project.org/R/trunk/src/library/utils/src/io.c):
>>>> /* quick integrity check */
>>>> ???????????????? if(XLENGTH(x) != (R_len_t)nr * nc)
>>>> ???????????????????? error(_("corrupt matrix -- dims not not match 
>>>> length"));
>>>>
>>>> The issue is that nr*nc is an integer and the size of my matrix, 
>>>> 2.8 billion elements, exceeds C's limit, so the check forces the 
>>>> code to fail.
>>>
>>> Yes, looks like a typo:? R_len_t is an int, and that's how nr was 
>>> declared.? It should be R_xlen_t, which is bigger on machines that 
>>> support big vectors.
>>>
>>> I haven't tested the change; there may be something else in that 
>>> function that assumes short vectors.
>> Indeed, I think the function won't work for long vectors because of 
>> EncodeElement2 and EncodeElement0. EncodeElement2/0 would have to be 
>> changed, including their signatures
>
> That would be a definite fix but before such deep rewriting is 
> undertaken may the following small fix (in addition to "(R_xlen_t)nr * 
> nc") will be sufficient for cases where nr and nc are in int range but 
> their product can reach long vector limit:
>
> replace
> ??? tmp = EncodeElement2(x, i + j*nr, quote_col[j], qmethod,
> ??? ??? ??? ??? ??? &strBuf, sdec);
> by
> ??? tmp = EncodeElement2(VECTOR_ELT(x, (R_xlen_t)i + j*nr), 0, 
> quote_col[j], qmethod,
> ??? ??? ??? ??? ??? &strBuf, sdec);

Unfortunately we can't do that, x is a matrix of an atomic vector type. 
VECTOR_ELT is taking elements of a generic vector, so it cannot be 
applied to "x". But even if we extracted a single element from "x" (e.g. 
via a type-switch etc), we would not be able to pass it to 
EncodeElement0 which expects a full atomic vector (that is, including 
its header). Instead we would have to call functions like EncodeInteger, 
EncodeReal0, etc on the individual elements. Which is then the same as 
changing EncodeElement0 or implementing a new version of it. This does 
not seem that hard to fix, just is not as trivial as changing the cast..

Tomas


>
> Serguei


From sokol at insa-toulouse.fr  Thu Apr 19 13:29:54 2018
From: sokol at insa-toulouse.fr (Serguei Sokol)
Date: Thu, 19 Apr 2018 13:29:54 +0200
Subject: [Rd] R Bug: write.table for matrix of more than 2, 147, 483,
 648 elements
In-Reply-To: <c9b2730a-0575-25a5-3bad-cd6690108af8@gmail.com>
References: <20180418212319.34878428@hypatia.math.ethz.ch>
 <e523f994-7f4c-b94f-dcda-1a0b96c70d06@gmail.com>
 <ccd7638e-3105-cad1-1eb4-87120a47d0da@gmail.com>
 <0b1ada3d-fdf0-b975-d5c4-70fe353de7c9@insa-toulouse.fr>
 <c9b2730a-0575-25a5-3bad-cd6690108af8@gmail.com>
Message-ID: <79246184-3512-7e1b-78d7-f741fccdd9f8@insa-toulouse.fr>

Le 19/04/2018 ? 12:15, Tomas Kalibera a ?crit?:
> On 04/19/2018 11:47 AM, Serguei Sokol wrote:
>>

>> replace
>> ??? tmp = EncodeElement2(x, i + j*nr, quote_col[j], qmethod,
>> ??? ??? ??? ??? ??? &strBuf, sdec);
>> by
>> ??? tmp = EncodeElement2(VECTOR_ELT(x, (R_xlen_t)i + j*nr), 0, 
>> quote_col[j], qmethod,
>> ??? ??? ??? ??? ??? &strBuf, sdec);
>
> Unfortunately we can't do that, x is a matrix of an atomic vector 
> type. VECTOR_ELT is taking elements of a generic vector, so it cannot 
> be applied to "x". But even if we extracted a single element from "x" 
> (e.g. via a type-switch etc), we would not be able to pass it to 
> EncodeElement0 which expects a full atomic vector (that is, including 
> its header). Instead we would have to call functions like 
> EncodeInteger, EncodeReal0, etc on the individual elements. Which is 
> then the same as changing EncodeElement0 or implementing a new version 
> of it. This does not seem that hard to fix, just is not as trivial as 
> changing the cast..

Thanks Tomas for this detailed explanation.

I would like also to signal a problem with the list. It must be 
corrupted in some way because beside the Tomas'? response I've got five 
or six (so far) dating spam. All of them coming from two emails: 
Kristina Oliynik <kristinaoliynik604324 at kw.taluss.com> and Samantha 
Smith <samanthasmith317260 at kw.fefty.com>.

Serguei.


From maechler at stat.math.ethz.ch  Thu Apr 19 16:40:24 2018
From: maechler at stat.math.ethz.ch (Martin Maechler)
Date: Thu, 19 Apr 2018 16:40:24 +0200
Subject: [Rd] Spam to R-* list posters
In-Reply-To: <79246184-3512-7e1b-78d7-f741fccdd9f8@insa-toulouse.fr>
References: <20180418212319.34878428@hypatia.math.ethz.ch>
 <e523f994-7f4c-b94f-dcda-1a0b96c70d06@gmail.com>
 <ccd7638e-3105-cad1-1eb4-87120a47d0da@gmail.com>
 <0b1ada3d-fdf0-b975-d5c4-70fe353de7c9@insa-toulouse.fr>
 <c9b2730a-0575-25a5-3bad-cd6690108af8@gmail.com>
 <79246184-3512-7e1b-78d7-f741fccdd9f8@insa-toulouse.fr>
Message-ID: <23256.43608.27267.557037@stat.math.ethz.ch>

>>>>> Serguei Sokol <sokol at insa-toulouse.fr>
>>>>>     on Thu, 19 Apr 2018 13:29:54 +0200 writes:

 [...............]

    > Thanks Tomas for this detailed explanation.

    > I would like also to signal a problem with the list. It must be 
    > corrupted in some way because beside the Tomas'? response I've got five 
    > or six (so far) dating spam. All of them coming from two emails: 
    > Kristina Oliynik <kristinaoliynik604324 at kw.taluss.com> and 
    > Samantha Smith <samanthasmith317260 at kw.fefty.com>.


Well, that's the current ones for you.  They change over time,
and in my experience you get about 10--20 (about once per hour;
on purpose not exactly every 60 minutes) and then it stops.

I've replied to the thread  "Hacked" on R-help yesterday:
  https://stat.ethz.ch/pipermail/r-help/2018-April/452423.html

This has started ca 2 weeks ago on R-help already, and today
we've learned that even  R-SIG-Mixed-Models  is affected.

I think I don't see them anymore at all because my spam filters have adapted.

Note that

1. This is *NOT* from regular mailing list subscribers, and none
   of these spam come via the R mailing list servers.

2. It's still a huge pain and disreputable to the R lists of course.

3. I had hoped we could wait and see it go away, but I may be wrong.

4. We have re-started discussing what could be done.

   One drastic measure would make mailing list usage
   *less* attractive by "munging" all poster's e-mail addresses.

-----

For now use your mail providers spam filters to quickly get rid
of this. .. or more interestingly and clearly less legally: use R to
write "mail bombs".  Write an R function sending ca 10 e-mails per
hour randomly to that address   ... ;-)  I did something like
that (with a shell script, not R) at the end of last millennium
when I was younger and the internet was a much much smaller
space than now...

Martin


From wdunlap at tibco.com  Thu Apr 19 17:39:24 2018
From: wdunlap at tibco.com (William Dunlap)
Date: Thu, 19 Apr 2018 08:39:24 -0700
Subject: [Rd] odd assignInNamespace / setGeneric interaction
In-Reply-To: <23256.25200.216197.166249@stat.math.ethz.ch>
References: <CAF8bMcZKhy_7nZm3Weoabi5fbbF=9Z8ciPK1LVd8Wt_p8HZshw@mail.gmail.com>
 <CAOQ5NyeeYGAD9NyfQepdHmcRfjWppJepeZebSYiRO-ZCJqi9_Q@mail.gmail.com>
 <23256.25200.216197.166249@stat.math.ethz.ch>
Message-ID: <CAF8bMcYh3MQs+BA0kL7FqDeEwaCNW2cOPKSDBVws_KsEXCoxvA@mail.gmail.com>

The problem is not specific to redefining the q function, but to
the interaction of assignInNamespace and setGeneric.  The
latter requires, roughtly, that the environment of the function
being replaced by an S4 generic is (or is the descendent of)
the environment in which it lives.

E.g., the following demonstrates the problem

% R --quiet --vanilla
> assignInNamespace("plot", function(x, ...) stop("No plotting allowed!"),
getNamespace("graphics"))
> library(stats4)
Error: package or namespace load failed for ?stats4? in loadNamespace(name):
 there is no package called ?.GlobalEnv?

and defining the bogus plot function in the graphics namespace avoids the
problem

% R --quiet --vanilla
>  assignInNamespace("plot", with(getNamespace("graphics"), function(x,
...) stop("No plotting allowed!")), getNamespace("graphics"))
> library(stats4)
>

I suppose poeple who use assignInNamespace get what they deserve.


Bill Dunlap
TIBCO Software
wdunlap tibco.com

On Thu, Apr 19, 2018 at 2:33 AM, Martin Maechler <maechler at stat.math.ethz.ch
> wrote:

> >>>>> Michael Lawrence <lawrence.michael at gene.com>
> >>>>>     on Wed, 18 Apr 2018 14:16:37 -0700 writes:
>
>     > Hi Bill,
>     > Ideally, your coworker would just make an alias (or shortcut or
>     > whatever) for R that passed --no-save to R. I'll try to look into
> this
>     > though.
>
>     > Michael
>
> Yes, indeed!
>
> As some of you know, I've been using R (for ca 23 years now)
> almost only from ESS (Emacs Speaks Statistics).
>
> There, I've activated '--no-save' for ca 20 years or so,
> nowadays (since Emacs has adopted "custom") I have had this in
> my ~/.emacs  custom lines
>
>  '(inferior-R-args "--no-restore-history --no-save ")
>
> standalone (to paste into your own ~/.emacs ) :
>
> (custom-set-variables '(inferior-R-args "--no-restore-history --no-save "))
>
> --------
>
> The current fashionable IDE to R,
> Rstudio, also allows to set such switches by its GUI:
>
> Menu [Tools]
>   --> (bottom) entry [Global Options]
>     --> the first sidebar entry  [R General]:
>     Look for two lines mentioning "workspace" or ".RData" and
>     change to 'save never' ( == --no-save),
>     and nowadays I also recommend my students to not *read*
>     these, i.e., '--no-restore'
>
> ---
>
> @Michael: I'm not sure what you're considering.  I feel that in
>  general, there are already too many R startup tweaking
>  possibilities, notably via environment variables.
> [e.g., the current ways to pre-determine the active .libPaths() in R,
>  and the fact the R calls R again during 'R CMD check' etc,
>  sometimes drives me crazy when .libPaths() become incompatible
>  for too many reasons .... yes, I'm diverting: that's another story]
>
> If we'd want to allow using (yet  another!) environment variable
> here, I'd at least would  make sure they are not consulted when
> explicit --no-save or --vanilla, etc are used.
>
> Martin
>
>
>     > On Wed, Apr 18, 2018 at 1:38 PM, William Dunlap via R-devel
>     > <r-devel at r-project.org> wrote:
>     >> A coworker got tired of having to type 'yes' or 'no' after quitting
> R: he
>     >> never wanted to save the R workspace when quitting.  So he added
>     >> assignInNamespace lines to his .Rprofile file to replace base::q
> with
>     >> one that, by default, called the original with save="no"..
>     >>
>     >> utils::assignInNamespace(".qOrig", base::q, "base")
>     >> utils::assignInNamespace("q", function(save = "no", ...)
>     >> base:::.qOrig(save = save, ...), "base")
>     >>
>     >> This worked fine until he decide to load the distr package:
>     >>
>     >> > suppressPackageStartupMessages(library(distr))
>     >> Error: package or namespace load failed for ?distr? in
>     >> loadNamespace(name):
>     >> there is no package called ?.GlobalEnv?
>     >>
>     >> distr calls setGeneric("q"), which indirectly causes the environment
>     >> of base::q, .GlobalEnv, to be loaded as a namespace, causing the
> error.
>     >> Giving his replacement q function the environment
> getNamespace("base")
>     >> avoids the problem.
>     >>
>     >> I can reproduce the problem by making a package that just calls
>     >> setGeneric("as.hexmode",...) and a NAMEPACE file with
>     >> exportMethods("as.hexmode").  If my .Rprofile puts a version of
> as.hexmode
>     >> with environment .GlobalEnv into the base namespace, then I get the
> same
>     >> error when trying to load the package.
>     >>
>     >> I suppose this is mostly a curiosity and unlikely to happen to most
> people
>     >> but it did confuse us for a while.
>     >>
>     >> Bill Dunlap
>     >> TIBCO Software
>     >> wdunlap tibco.com
>     >>
>     >> [[alternative HTML version deleted]]
>     >>
>     >> ______________________________________________
>     >> R-devel at r-project.org mailing list
>     >> https://stat.ethz.ch/mailman/listinfo/r-devel
>     >>
>
>     > ______________________________________________
>     > R-devel at r-project.org mailing list
>     > https://stat.ethz.ch/mailman/listinfo/r-devel
>

	[[alternative HTML version deleted]]


From spencer.graves at prodsyse.com  Thu Apr 19 17:40:58 2018
From: spencer.graves at prodsyse.com (Spencer Graves)
Date: Thu, 19 Apr 2018 10:40:58 -0500
Subject: [Rd] Spam to R-* list posters
In-Reply-To: <23256.43608.27267.557037@stat.math.ethz.ch>
References: <20180418212319.34878428@hypatia.math.ethz.ch>
 <e523f994-7f4c-b94f-dcda-1a0b96c70d06@gmail.com>
 <ccd7638e-3105-cad1-1eb4-87120a47d0da@gmail.com>
 <0b1ada3d-fdf0-b975-d5c4-70fe353de7c9@insa-toulouse.fr>
 <c9b2730a-0575-25a5-3bad-cd6690108af8@gmail.com>
 <79246184-3512-7e1b-78d7-f741fccdd9f8@insa-toulouse.fr>
 <23256.43608.27267.557037@stat.math.ethz.ch>
Message-ID: <80f7a221-e1f1-713b-e4c3-6241188897c1@prodsyse.com>



On 2018-04-19 09:40, Martin Maechler wrote:
>>>>>> Serguei Sokol <sokol at insa-toulouse.fr>
>>>>>>      on Thu, 19 Apr 2018 13:29:54 +0200 writes:
>   [...............]
>
>      > Thanks Tomas for this detailed explanation.
>
>      > I would like also to signal a problem with the list. It must be
>      > corrupted in some way because beside the Tomas'? response I've got five
>      > or six (so far) dating spam. All of them coming from two emails:
>      > Kristina Oliynik <kristinaoliynik604324 at kw.taluss.com> and
>      > Samantha Smith <samanthasmith317260 at kw.fefty.com>.
>
>
> Well, that's the current ones for you.  They change over time,
> and in my experience you get about 10--20 (about once per hour;
> on purpose not exactly every 60 minutes) and then it stops.
>
> I've replied to the thread  "Hacked" on R-help yesterday:
>    https://stat.ethz.ch/pipermail/r-help/2018-April/452423.html
>
> This has started ca 2 weeks ago on R-help already, and today
> we've learned that even  R-SIG-Mixed-Models  is affected.
>
> I think I don't see them anymore at all because my spam filters have adapted.
>
> Note that
>
> 1. This is *NOT* from regular mailing list subscribers, and none
>     of these spam come via the R mailing list servers.
>
> 2. It's still a huge pain and disreputable to the R lists of course.
>
> 3. I had hoped we could wait and see it go away, but I may be wrong.
>
> 4. We have re-started discussing what could be done.
>
>     One drastic measure would make mailing list usage
>     *less* attractive by "munging" all poster's e-mail addresses.
>
> -----
>
> For now use your mail providers spam filters to quickly get rid
> of this. .. or more interestingly and clearly less legally: use R to
> write "mail bombs".  Write an R function sending ca 10 e-mails per
> hour randomly to that address   ... ;-)  I did something like
> that (with a shell script, not R) at the end of last millennium
> when I was younger and the internet was a much much smaller
> space than now...


 ????? What about implementing "Mailhide", described in the Wikipedia 
article on "reCAPTCHA"?


 ????? '[F]or example, "mailme at example.com" would be converted to 
"mai... at example.com". The visitor would then click on the "..." and 
solve the CAPTCHA in order to obtain the full email address. One can 
also edit the pop-up code so that none of the address is visible.' 
(https://en.wikipedia.org/wiki/ReCAPTCHA)


 ????? Of course, this is easier for me to suggest, because I'm not in a 
position to actually implement it ;-)


 ????? Spencer Graves


p.s.? I wish again to express my deep appreciation to Martin and the 
other members of the R Core team who have invested so much time and 
creativity into making The R Project for Statistical Computing the 
incredible service it is today.? A good portion of humanity lives better 
today, because of problems that would not otherwise have been addressed 
as well as they have been without some important analysis done with R.

> Martin
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From lawrence.michael at gene.com  Thu Apr 19 18:40:09 2018
From: lawrence.michael at gene.com (Michael Lawrence)
Date: Thu, 19 Apr 2018 09:40:09 -0700
Subject: [Rd] odd assignInNamespace / setGeneric interaction
In-Reply-To: <CAF8bMcYh3MQs+BA0kL7FqDeEwaCNW2cOPKSDBVws_KsEXCoxvA@mail.gmail.com>
References: <CAF8bMcZKhy_7nZm3Weoabi5fbbF=9Z8ciPK1LVd8Wt_p8HZshw@mail.gmail.com>
 <CAOQ5NyeeYGAD9NyfQepdHmcRfjWppJepeZebSYiRO-ZCJqi9_Q@mail.gmail.com>
 <23256.25200.216197.166249@stat.math.ethz.ch>
 <CAF8bMcYh3MQs+BA0kL7FqDeEwaCNW2cOPKSDBVws_KsEXCoxvA@mail.gmail.com>
Message-ID: <CAOQ5Nye4PT6mZL8+jutMb2v-ySe4pdsiuLWDHLkejy_T6hNs2w@mail.gmail.com>

To clarify, I am going to fix the issue in the methods package
(actually I already have but need to test further). There's no intent
to change the behavior of q().

On Thu, Apr 19, 2018 at 8:39 AM, William Dunlap <wdunlap at tibco.com> wrote:
> The problem is not specific to redefining the q function, but to
> the interaction of assignInNamespace and setGeneric.  The
> latter requires, roughtly, that the environment of the function
> being replaced by an S4 generic is (or is the descendent of)
> the environment in which it lives.
>
> E.g., the following demonstrates the problem
>
> % R --quiet --vanilla
>> assignInNamespace("plot", function(x, ...) stop("No plotting allowed!"),
>> getNamespace("graphics"))
>> library(stats4)
> Error: package or namespace load failed for ?stats4? in loadNamespace(name):
>  there is no package called ?.GlobalEnv?
>
> and defining the bogus plot function in the graphics namespace avoids the
> problem
>
> % R --quiet --vanilla
>>  assignInNamespace("plot", with(getNamespace("graphics"), function(x, ...)
>> stop("No plotting allowed!")), getNamespace("graphics"))
>> library(stats4)
>>
>
> I suppose poeple who use assignInNamespace get what they deserve.
>
>
> Bill Dunlap
> TIBCO Software
> wdunlap tibco.com
>
> On Thu, Apr 19, 2018 at 2:33 AM, Martin Maechler
> <maechler at stat.math.ethz.ch> wrote:
>>
>> >>>>> Michael Lawrence <lawrence.michael at gene.com>
>> >>>>>     on Wed, 18 Apr 2018 14:16:37 -0700 writes:
>>
>>     > Hi Bill,
>>     > Ideally, your coworker would just make an alias (or shortcut or
>>     > whatever) for R that passed --no-save to R. I'll try to look into
>> this
>>     > though.
>>
>>     > Michael
>>
>> Yes, indeed!
>>
>> As some of you know, I've been using R (for ca 23 years now)
>> almost only from ESS (Emacs Speaks Statistics).
>>
>> There, I've activated '--no-save' for ca 20 years or so,
>> nowadays (since Emacs has adopted "custom") I have had this in
>> my ~/.emacs  custom lines
>>
>>  '(inferior-R-args "--no-restore-history --no-save ")
>>
>> standalone (to paste into your own ~/.emacs ) :
>>
>> (custom-set-variables '(inferior-R-args "--no-restore-history --no-save
>> "))
>>
>> --------
>>
>> The current fashionable IDE to R,
>> Rstudio, also allows to set such switches by its GUI:
>>
>> Menu [Tools]
>>   --> (bottom) entry [Global Options]
>>     --> the first sidebar entry  [R General]:
>>     Look for two lines mentioning "workspace" or ".RData" and
>>     change to 'save never' ( == --no-save),
>>     and nowadays I also recommend my students to not *read*
>>     these, i.e., '--no-restore'
>>
>> ---
>>
>> @Michael: I'm not sure what you're considering.  I feel that in
>>  general, there are already too many R startup tweaking
>>  possibilities, notably via environment variables.
>> [e.g., the current ways to pre-determine the active .libPaths() in R,
>>  and the fact the R calls R again during 'R CMD check' etc,
>>  sometimes drives me crazy when .libPaths() become incompatible
>>  for too many reasons .... yes, I'm diverting: that's another story]
>>
>> If we'd want to allow using (yet  another!) environment variable
>> here, I'd at least would  make sure they are not consulted when
>> explicit --no-save or --vanilla, etc are used.
>>
>> Martin
>>
>>
>>     > On Wed, Apr 18, 2018 at 1:38 PM, William Dunlap via R-devel
>>     > <r-devel at r-project.org> wrote:
>>     >> A coworker got tired of having to type 'yes' or 'no' after quitting
>> R: he
>>     >> never wanted to save the R workspace when quitting.  So he added
>>     >> assignInNamespace lines to his .Rprofile file to replace base::q
>> with
>>     >> one that, by default, called the original with save="no"..
>>     >>
>>     >> utils::assignInNamespace(".qOrig", base::q, "base")
>>     >> utils::assignInNamespace("q", function(save = "no", ...)
>>     >> base:::.qOrig(save = save, ...), "base")
>>     >>
>>     >> This worked fine until he decide to load the distr package:
>>     >>
>>     >> > suppressPackageStartupMessages(library(distr))
>>     >> Error: package or namespace load failed for ?distr? in
>>     >> loadNamespace(name):
>>     >> there is no package called ?.GlobalEnv?
>>     >>
>>     >> distr calls setGeneric("q"), which indirectly causes the
>> environment
>>     >> of base::q, .GlobalEnv, to be loaded as a namespace, causing the
>> error.
>>     >> Giving his replacement q function the environment
>> getNamespace("base")
>>     >> avoids the problem.
>>     >>
>>     >> I can reproduce the problem by making a package that just calls
>>     >> setGeneric("as.hexmode",...) and a NAMEPACE file with
>>     >> exportMethods("as.hexmode").  If my .Rprofile puts a version of
>> as.hexmode
>>     >> with environment .GlobalEnv into the base namespace, then I get the
>> same
>>     >> error when trying to load the package.
>>     >>
>>     >> I suppose this is mostly a curiosity and unlikely to happen to most
>> people
>>     >> but it did confuse us for a while.
>>     >>
>>     >> Bill Dunlap
>>     >> TIBCO Software
>>     >> wdunlap tibco.com
>>     >>
>>     >> [[alternative HTML version deleted]]
>>     >>
>>     >> ______________________________________________
>>     >> R-devel at r-project.org mailing list
>>     >> https://stat.ethz.ch/mailman/listinfo/r-devel
>>     >>
>>
>>     > ______________________________________________
>>     > R-devel at r-project.org mailing list
>>     > https://stat.ethz.ch/mailman/listinfo/r-devel
>
>


From maechler at stat.math.ethz.ch  Fri Apr 20 09:55:44 2018
From: maechler at stat.math.ethz.ch (Martin Maechler)
Date: Fri, 20 Apr 2018 09:55:44 +0200
Subject: [Rd] Minor glitch in optim()
In-Reply-To: <2632537f-f417-d92f-00fb-e6229fc36aed@gmail.com>
References: <2632537f-f417-d92f-00fb-e6229fc36aed@gmail.com>
Message-ID: <23257.40192.840471.978122@stat.math.ethz.ch>

>>>>> J C Nash <profjcnash at gmail.com>
>>>>>     on Tue, 17 Apr 2018 10:18:02 -0400 writes:

    > Having worked with optim() and related programs for years, it surprised me
    > that I haven't noticed this before, but optim() is inconsistent in how it
    > deals with bounds constraints specified at infinity. Here's an example:

    # optim-glitch-Ex.R
    x0 <- c(1,2,3,4)
    fnt <- function(x, fscale=10){
      yy <- length(x):1
      val <- sum((yy*x)^2)*fscale
    }
    grt <- function(x, fscale=10){
      nn <- length(x)
      yy <- nn:1
      #    gg <- rep(NA,nn)
      gg <- 2*(yy^2)*x*fscale
      gg
    }

    npar <- 4
    lower <- -Inf
    l2 <- rep(-Inf,npar)

    a1 <- optim(x0, fnt, grt, lower=lower, method="BFGS") # works
    a1
    a1a<- optim(x0, fnt, grt, lower=l2, method="BFGS") # changes method!
    a1a

> The first call uses BFGS method without warning. The second gives
> a warning that L-BFGS-B should be used, and from the output uses
> this.

> This is a bit of an edge case. My own preference would be for optim()
> to simply fail if bounds of any type are specified without L-BFGS-B
> as the method. I believe that gives clarity, even though infinite
> bounds imply an unconstrained problem.

> The behaviour where a scalar infinite bound is treated as unconstrained
> but a vector is not is inconsistent, however, and I think that at some
> point should be fixed.

I agree that it inconsistent.  The help page mentions that
"non-trivial" bounds are treated like that, and if you'd
consider  lower = c(-Inf, -Inf) to be  "non-trivial",  one could
say optim() behaved according to documentation and non-buggy,
but a much more reasonable definition of non-trivial bounds are
bounds that are not equivalent to (lower=-Inf, upper=+Inf)  and
the vector versions *are* equivalent.

So I agree about fixing.

> point should be fixed. Possibly the easiest way is to treat infinite
> bounds specified as a vector the same as those specified as a scalar.

I agree.  

> That is to adjust the code in File src/library/stats/R/optim.R
> in the block

    > if((length(lower) > 1L || length(upper) > 1L ||
    >    lower[1L] != -Inf || upper[1L] != Inf)
    >    && !any(method == c("L-BFGS-B","Brent"))) {
    > 	warning("bounds can only be used with method L-BFGS-B (or Brent)")
    > 	method <- "L-BFGS-B"
    > }

> Possibly

    > if((any(is.finite(lower) || any(is.finite(upper))
    >    && !any(method == c("L-BFGS-B","Brent"))) {
    > 	warning("bounds can only be used with method L-BFGS-B (or Brent)")
    > 	method <- "L-BFGS-B"
    > }

> Best, JN

I aim to go for the first line

    if((any(lower > -Inf)) || any(upper < Inf))

which is 100% correct and easier to "read", even though your
version -- after adding the missing ')' -- is faster
 and almost always equivalent.

Running checks now.  Wont' be in R 3.5.0 of course,  but then
probably in  R 3.5.0 patched.

Martin Maechler
ETH Zurich


From simons at nospf.cryp.to  Mon Apr 23 12:33:04 2018
From: simons at nospf.cryp.to (Peter Simons)
Date: Mon, 23 Apr 2018 12:33:04 +0200
Subject: [Rd] R 3.5.0 fails its regression test suite on Linux/x86_64
Message-ID: <874lk2dxgf.fsf@write-only.cryp.to>

Hi,

I just tried to upgrade Nixpkgs to R 3.5.0, but unfortunately the new
version fails its regression test suite. We configure the build using
the flags "--without-recommended-packages", in case that's relevant. You
can see a complete build log with all relevant information at [1].
Anyway, the test failures look like this:

 | make[3]: Entering directory '/build/R-3.5.0/tests/Examples'
 | Testing examples for package 'base'
 | Testing examples for package 'tools'
 |   comparing 'tools-Ex.Rout' to 'tools-Ex.Rout.save' ... OK
 | Testing examples for package 'utils'
 | Testing examples for package 'grDevices'
 |   comparing 'grDevices-Ex.Rout' to 'grDevices-Ex.Rout.save' ... OK
 | Testing examples for package 'graphics'
 |   comparing 'graphics-Ex.Rout' to 'graphics-Ex.Rout.save' ... OK
 | Testing examples for package 'stats'
 |   comparing 'stats-Ex.Rout' to 'stats-Ex.Rout.save' ... NOTE
 |   6599c6599
 |   < Grand Mean: 291.5937
 |   ---
 |   > Grand Mean: 291.5938
 |   15124c15124
 |   < Grand Mean: 291.5937
 |   ---
 |   > Grand Mean: 291.5938
 |   17444c17444
 |   < assertCondition: caught "error"
 |   ---
 |   > assertCondition: caught 'error'
 | Testing examples for package 'datasets'
 |   comparing 'datasets-Ex.Rout' to 'datasets-Ex.Rout.save' ... OK
 | Testing examples for package 'methods'
 | Testing examples for package 'grid'
 |   comparing 'grid-Ex.Rout' to 'grid-Ex.Rout.save' ... OK
 | Testing examples for package 'splines'
 |   comparing 'splines-Ex.Rout' to 'splines-Ex.Rout.save' ... OK
 | Testing examples for package 'stats4'
 |   comparing 'stats4-Ex.Rout' to 'stats4-Ex.Rout.save' ... OK
 | Testing examples for package 'tcltk'
 | Testing examples for package 'compiler'
 | Testing examples for package 'parallel'
 | make[3]: Leaving directory '/build/R-3.5.0/tests/Examples'
 | make[2]: Leaving directory '/build/R-3.5.0/tests'
 | make[2]: Entering directory '/build/R-3.5.0/tests'
 | make[2]: warning: jobserver unavailable: using -j1.  Add '+' to parent make rule.
 | running strict specific tests
 | make[3]: Entering directory '/build/R-3.5.0/tests'
 | running code in 'eval-etc.R' ... OK
 |   comparing 'eval-etc.Rout' to './eval-etc.Rout.save' ...414,416c414,548
 | < Warning message:
 | < In library(package, lib.loc = lib.loc, character.only = TRUE, logical.return = TRUE,  :
 | <   there is no package called 'Matrix'
 | ---
 | > Trying some Matrix objects, too
 | >
 | > Matrix> Matrix(0, 3, 2)             # 3 by 2 matrix of zeros -> sparse
 | > 3 x 2 sparse Matrix of class "dgCMatrix"
 | >
 | > [1,] . .
 | > [2,] . .
 | > [3,] . .
 | >
 | > Matrix> Matrix(0, 3, 2, sparse=FALSE)# -> 'dense'
 | > 3 x 2 Matrix of class "dgeMatrix"
 | >      [,1] [,2]
 | > [1,]    0    0
 | > [2,]    0    0
 | > [3,]    0    0
 | >
 | > Matrix> Matrix(0, 2, 2, sparse=FALSE)# diagonal !
 | > 2 x 2 diagonal matrix of class "ddiMatrix"
 | >      [,1] [,2]
 | > [1,]    0    .
 | > [2,]    .    0
 | >
 | > Matrix> Matrix(0, 2, 2, sparse=FALSE, doDiag=FALSE)# -> dense
 | > 2 x 2 Matrix of class "dsyMatrix"
 | >      [,1] [,2]
 | > [1,]    0    0
 | > [2,]    0    0
 | >
 | > Matrix> Matrix(1:6, 3, 2)           # a 3 by 2 matrix (+ integer warning)
 | > 3 x 2 Matrix of class "dgeMatrix"
 | >      [,1] [,2]
 | > [1,]    1    4
 | > [2,]    2    5
 | > [3,]    3    6
 | >
 | > Matrix> Matrix(1:6 + 1, nrow=3)
 | > 3 x 2 Matrix of class "dgeMatrix"
 | >      [,1] [,2]
 | > [1,]    2    5
 | > [2,]    3    6
 | > [3,]    4    7
 | >
 | > Matrix> ## logical ones:
 | > Matrix> Matrix(diag(4) >  0)# -> "ldiMatrix" with diag = "U"
 | > 4 x 4 diagonal matrix of class "ldiMatrix"
 | >      [,1] [,2] [,3] [,4]
 | > [1,] TRUE    .    .    .
 | > [2,]    . TRUE    .    .
 | > [3,]    .    . TRUE    .
 | > [4,]    .    .    . TRUE
 | >
 | > Matrix> Matrix(diag(4) >  0, sparse=TRUE)# -> sparse...
 | > 4 x 4 sparse Matrix of class "lsCMatrix"
 | >
 | > [1,] | . . .
 | > [2,] . | . .
 | > [3,] . . | .
 | > [4,] . . . |
 | >
 | > Matrix> Matrix(diag(4) >= 0)# -> "lsyMatrix" (of all 'TRUE')
 | > 4 x 4 Matrix of class "lsyMatrix"
 | >      [,1] [,2] [,3] [,4]
 | > [1,] TRUE TRUE TRUE TRUE
 | > [2,] TRUE TRUE TRUE TRUE
 | > [3,] TRUE TRUE TRUE TRUE
 | > [4,] TRUE TRUE TRUE TRUE
 | >
 | > Matrix> ## triangular
 | > Matrix> l3 <- upper.tri(matrix(,3,3))
 | >
 | > Matrix> (M <- Matrix(l3))  # -> "ltCMatrix"
 | > 3 x 3 sparse Matrix of class "ltCMatrix"
 | >
 | > [1,] . | |
 | > [2,] . . |
 | > [3,] . . .
 | >
 | > Matrix> Matrix(! l3)# -> "ltrMatrix"
 | > 3 x 3 Matrix of class "ltrMatrix"
 | >      [,1]  [,2]  [,3]
 | > [1,]  TRUE     .     .
 | > [2,]  TRUE  TRUE     .
 | > [3,]  TRUE  TRUE  TRUE
 | >
 | > Matrix> as(l3, "CsparseMatrix")
 | > 3 x 3 sparse Matrix of class "lgCMatrix"
 | >
 | > [1,] . | |
 | > [2,] . . |
 | > [3,] . . .
 | >
 | > Matrix> Matrix(1:9, nrow=3,
 | > Matrix+        dimnames = list(c("a", "b", "c"), c("A", "B", "C")))
 | > 3 x 3 Matrix of class "dgeMatrix"
 | >   A B C
 | > a 1 4 7
 | > b 2 5 8
 | > c 3 6 9
 | >
 | > Matrix> (I3 <- Matrix(diag(3)))# identity, i.e., unit "diagonalMatrix"
 | > 3 x 3 diagonal matrix of class "ddiMatrix"
 | >      [,1] [,2] [,3]
 | > [1,]    1    .    .
 | > [2,]    .    1    .
 | > [3,]    .    .    1
 | >
 | > Matrix> str(I3) # note the empty 'x' slot
 | > Formal class 'ddiMatrix' [package "Matrix"] with 4 slots
 | >   ..@ diag    : chr "U"
 | >   ..@ Dim     : int [1:2] 3 3
 | >   ..@ Dimnames:List of 2
 | >   .. ..$ : NULL
 | >   .. ..$ : NULL
 | >   ..@ x       : num(0)
 | >
 | > Matrix> (A <- cbind(a=c(2,1), b=1:2))# symmetric *apart* from dimnames
 | >      a b
 | > [1,] 2 1
 | > [2,] 1 2
 | >
 | > Matrix> Matrix(A)                    # hence 'dgeMatrix'
 | > 2 x 2 Matrix of class "dgeMatrix"
 | >      a b
 | > [1,] 2 1
 | > [2,] 1 2
 | >
 | > Matrix> (As <- Matrix(A, dimnames = list(NULL,NULL)))# -> symmetric
 | > 2 x 2 Matrix of class "dsyMatrix"
 | >      [,1] [,2]
 | > [1,]    2    1
 | > [2,]    1    2
 | >
 | > Matrix> stopifnot(is(As, "symmetricMatrix"),
 | > Matrix+           is(Matrix(0, 3,3), "sparseMatrix"),
 | > Matrix+           is(Matrix(FALSE, 1,1), "sparseMatrix"))
 | 430,436c562,564
 | < A: function (x, y, ...)
 | < {
 | <     B <- function(a, b, ...) {
 | <         match.call()
 | <     }
 | <     B(x + y, ...)
 | < }
 | ---
 | > A: new("dgCMatrix", i = c(0L, 3L, 4L, 5L, 2L, 6L, 7L), p = c(0L,
 | > 0L, 1L, 1L, 1L, 1L, 2L, 3L, 4L, 6L, 7L), Dim = c(8L, 10L), Dimnames = list(
 | >     NULL, NULL), x = c(7, 21, 28, 35, 14, 42, 49), factors = list())
 | 438,444c566,589
 | < checking body(.):
 | < quote({
 | <     B <- function(a, b, ...) {
 | <         match.call()
 | <     }
 | <     B(x + y, ...)
 | < })
 | ---
 | > --=--=--=--=--
 | > A.: new("dgCMatrix", i = c(0L, 3L, 4L, 5L, 2L, 6L, 7L), p = c(0L,
 | > 0L, 1L, 1L, 1L, 1L, 2L, 3L, 4L, 6L, 7L), Dim = c(8L, 10L), Dimnames = list(
 | >     NULL, NULL), x = c(2, 21, 28, 35, 14, 42, 49), factors = list())
 | >  --> checking list(*): Ok
 | > --=--=--=--=--
 | > A1: new("dgCMatrix", i = c(0L, 3L, 4L, 5L, 2L, 6L, 7L), p = c(0L,
 | > 0L, 1L, 1L, 1L, 1L, 2L, 3L, 4L, 6L, 7L), Dim = c(8L, 10L), Dimnames = list(
 | >     NULL, NULL), x = c(7, 21, 28, 35, 14, 42, 49), factors = list())
 | >  --> checking list(*): Ok
 | > --=--=--=--=--
 | > AA: new("dgCMatrix", i = c(0L, 3L, 4L, 5L, 2L, 6L, 7L), p = c(0L,
 | > 0L, 1L, 1L, 1L, 1L, 2L, 3L, 4L, 6L, 7L, 7L, 7L, 7L, 7L, 7L, 7L,
 | > 7L, 7L, 7L, 7L), Dim = c(10L, 20L), Dimnames = list(NULL, NULL),
 | >     x = c(7, 21, 28, 35, 14, 42, 49), factors = list())
 | >  --> checking list(*): Ok
 | > --=--=--=--=--
 | > Aa: new("dgCMatrix", i = c(0L, 3L, 4L, 5L, 2L, 6L, 7L), p = c(0L,
 | > 0L, 1L, 1L, 1L, 1L, 2L, 3L, 4L, 6L, 7L), Dim = c(8L, 10L), Dimnames = list(
 | >     NULL, NULL), x = c(9, 21, 28, 35, 14, 42, 49), factors = list())
 | >  --> checking list(*): Ok
 | > --=--=--=--=--
 | > As: new("dsyMatrix", x = c(2, 1, 1, 2), Dim = c(2L, 2L), Dimnames = list(
 | >     NULL, NULL), uplo = "U", factors = list())
 | 446,448d590
 | < checking formals(.):
 | < as.pairlist(alist(x = , y = , ... = ))
 | < __ not parse()able __: hasMissObj(.) is true
 | 551a694,701
 | > D5.: new("ddiMatrix", diag = "N", Dim = c(5L, 5L), Dimnames = list(
 | >     NULL, NULL), x = c(5, 4, 3, 2, 1))
 | >  --> checking list(*): Ok
 | > --=--=--=--=--
 | > D5N: new("ddiMatrix", diag = "N", Dim = c(5L, 5L), Dimnames = list(
 | >     NULL, NULL), x = c(5, 4, 3, 2, NA))
 | >  --> checking list(*): Ok
 | > --=--=--=--=--
 | 564a715,718
 | > I3: new("ddiMatrix", diag = "U", Dim = c(3L, 3L), Dimnames = list(
 | >     NULL, NULL), x = numeric(0))
 | >  --> checking list(*): Ok
 | > --=--=--=--=--
 | 588a743,747
 | > M: new("ltCMatrix", i = c(0L, 0L, 1L), p = c(0L, 0L, 1L, 3L), Dim = c(3L,
 | > 3L), Dimnames = list(NULL, NULL), x = c(TRUE, TRUE, TRUE), uplo = "U",
 | >     diag = "N")
 | >  --> checking list(*): Ok
 | > --=--=--=--=--
 | 612a772,776
 | > args: structure(list(i = c(1, 3, 4, 5, 6, 7, 8, 1), j = c(2, 9, 6,
 | > 7, 8, 9, 10, 2), x = c(7, 14, 21, 28, 35, 42, 49, 2)), class = "data.frame", row.names = c(NA,
 | > -8L))
 | >  --> checking list(*): Ok
 | > --=--=--=--=--
 | 732,733c896,901
 | < e: <environment>
 | < __ not parse()able __: environment
 | ---
 | > dn: list(c("A", "B", "C"), c("a", "b", "c", "d", "e"))
 | >  --> checking list(*): Ok
 | > --=--=--=--=--
 | > e: new("ngCMatrix", i = integer(0), p = c(0L, 0L, 0L, 0L, 0L, 0L,
 | > 0L), Dim = c(4L, 6L), Dimnames = list(NULL, NULL), factors = list())
 | >  --> checking list(*): Ok
 | 844a1013,1015
 | > i: c(1, 3, 4, 5, 6, 7, 8)
 | >  --> checking list(*): Ok
 | > --=--=--=--=--
 | 876a1048,1050
 | > j: c(2, 9, 6, 7, 8, 9, 10)
 | >  --> checking list(*): Ok
 | > --=--=--=--=--
 | 886a1061,1064
 | > l3: structure(c(FALSE, FALSE, FALSE, TRUE, FALSE, FALSE, TRUE, TRUE,
 | > FALSE), .Dim = c(3L, 3L))
 | >  --> checking list(*): Ok
 | > --=--=--=--=--
 | 891a1070,1074
 | > m: new("dgCMatrix", i = c(2L, 0L, 1L, 2L, 0L, 1L), p = c(0L, 1L,
 | > 2L, 4L, 4L, 6L), Dim = c(3L, 5L), Dimnames = list(c("A", "B",
 | > "C"), c("a", "b", "c", "d", "e")), x = c(1, 2, 4, 3, 6, 5), factors = list())
 | >  --> checking list(*): Ok
 | > --=--=--=--=--
 | 944a1128,1136
 | > n: new("ngCMatrix", i = 5:0, p = c(0L, 0L, 1L, 2L, 3L, 4L, 5L, 6L
 | > ), Dim = 6:7, Dimnames = list(NULL, NULL), factors = list())
 | >  --> checking list(*): Ok
 | > --=--=--=--=--
 | > nA: new("ngCMatrix", i = c(0L, 3L, 4L, 5L, 2L, 6L, 7L), p = c(0L,
 | > 0L, 1L, 1L, 1L, 1L, 2L, 3L, 4L, 6L, 7L), Dim = c(8L, 10L), Dimnames = list(
 | >     NULL, NULL), factors = list())
 | >  --> checking list(*): Ok
 | > --=--=--=--=--
 | 961a1154,1156
 | > perm: c(2L, 3L, 6L, 4L, 1L, 7L, 5L)
 | >  --> checking list(*): Ok
 | > --=--=--=--=--
 | 1010a1206,1211
 | > sA: new("dsCMatrix", i = c(0L, 3L, 4L, 5L, 2L, 6L, 7L), p = c(0L,
 | > 0L, 1L, 1L, 1L, 1L, 2L, 3L, 4L, 6L, 7L), Dim = c(10L, 10L), Dimnames = list(
 | >     NULL, NULL), x = c(7, 21, 28, 35, 14, 42, 49), uplo = "U",
 | >     factors = list())
 | >  --> checking list(*): Ok
 | > --=--=--=--=--
 | 1014a1216,1220
 | > sy: new("dsCMatrix", i = c(1L, 3L, 4L, 2L, 3L), p = c(0L, 0L, 0L,
 | > 0L, 1L, 3L, 4L, 5L), Dim = c(7L, 7L), Dimnames = list(NULL, NULL),
 | >     x = c(1, 4, 5, 3, 2), uplo = "U", factors = list())
 | >  --> checking list(*): Ok
 | > --=--=--=--=--
 | 1018a1225,1230
 | > tA: new("dtCMatrix", i = c(0L, 3L, 4L, 5L, 2L, 6L, 7L), p = c(0L,
 | > 0L, 1L, 1L, 1L, 1L, 2L, 3L, 4L, 6L, 7L), Dim = c(10L, 10L), Dimnames = list(
 | >     NULL, NULL), x = c(7, 21, 28, 35, 14, 42, 49), uplo = "U",
 | >     diag = "N")
 | >  --> checking list(*): Ok
 | > --=--=--=--=--
 | 1048c1260,1261
 | < 2: In dput(x, control = control) : deparse may be incomplete
 | ---
 | > 2: In deparse(expr, backtick = backtick, control = control, ...) :
 | >   deparse may be incomplete
 | 1051c1264,1265
 | < 4: In deparse(expr, backtick = backtick, control = control, ...) :
 | ---
 | > 4: In dput(x, control = control) : deparse may be incomplete
 | > 5: In deparse(expr, backtick = backtick, control = control, ...) :
 | 1053d1266
 | < 5: In dput(x, control = control) : deparse may be incomplete
 | 1056c1269,1270
 | < 7: In deparse(expr, backtick = backtick, control = control, ...) :
 | ---
 | > 7: In dput(x, control = control) : deparse may be incomplete
 | > 8: In deparse(expr, backtick = backtick, control = control, ...) :
 | 1058d1271
 | < 8: In dput(x, control = control) : deparse may be incomplete
 | 1061,1062d1273
 | < 10: In deparse(expr, backtick = backtick, control = control, ...) :
 | <   deparse may be incomplete
 | 1064c1275
 | < Summary of (a total of 10) warning messages:
 | ---
 | > Summary of (a total of 9) warning messages:
 | 1066c1277
 | < 4x : In deparse(expr, backtick = backtick, control = control,  ... :
 | ---
 | > 3x : In deparse(expr, backtick = backtick, control = control,  ... :
 | make[3]: *** [Makefile.common:106: eval-etc.Rout] Error 1

Now, I'm not quite sure how to interpret that output. Some of these
issues seem harmless, really, and not indicative of a serious problem in
R. Still, I reckon that it would be nice if the test suite would pass
and for all I know other people might run into the same issue as we did,
so I felt I should report it to the devs.

If there is any advice how to remedy this issues, then I'd very much
appreciate it.

Best regards,
Peter

[1] https://hydra.nixos.org/build/73154582/nixlog/3


From edd at debian.org  Mon Apr 23 13:33:12 2018
From: edd at debian.org (Dirk Eddelbuettel)
Date: Mon, 23 Apr 2018 06:33:12 -0500
Subject: [Rd] R 3.5.0 fails its regression test suite on Linux/x86_64
In-Reply-To: <874lk2dxgf.fsf@write-only.cryp.to>
References: <874lk2dxgf.fsf@write-only.cryp.to>
Message-ID: <23261.50296.753990.329858@rob.eddelbuettel.com>


On 23 April 2018 at 12:33, Peter Simons wrote:
| Hi,
| 
| I just tried to upgrade Nixpkgs to R 3.5.0, but unfortunately the new
| version fails its regression test suite. We configure the build using
| the flags "--without-recommended-packages", in case that's relevant. You
| can see a complete build log with all relevant information at [1].
| Anyway, the test failures look like this:

The flag instructs R not to build new 'recommended packages'; however the
tests you run later need them.  This release has a binary change so you
actually need to rebuild dependent packages -- in other words I think you can
expect (some of) these tests to fail until these recommended packages are
rebuilt.

>From the doc/NEWS file, lines 395 and on:

    * The object header layout has been changed to support merging the
      ALTREP branch. This requires re-installing packages that use
      compiled code.

Dirk

-- 
http://dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org


From murdoch.duncan at gmail.com  Mon Apr 23 13:35:44 2018
From: murdoch.duncan at gmail.com (Duncan Murdoch)
Date: Mon, 23 Apr 2018 07:35:44 -0400
Subject: [Rd] R 3.5.0 fails its regression test suite on Linux/x86_64
In-Reply-To: <874lk2dxgf.fsf@write-only.cryp.to>
References: <874lk2dxgf.fsf@write-only.cryp.to>
Message-ID: <1aecf60e-715d-1395-a6b7-dc18dd950de9@gmail.com>

On 23/04/2018 6:33 AM, Peter Simons wrote:
> Hi,
> 
> I just tried to upgrade Nixpkgs to R 3.5.0, but unfortunately the new
> version fails its regression test suite. We configure the build using
> the flags "--without-recommended-packages", in case that's relevant. You
> can see a complete build log with all relevant information at [1].
> Anyway, the test failures look like this:

I haven't read the full script below, but a lot of it has to do with 
tests of Matrix, which is a recommended package.  Since you built 
without it, they should be expected to fail.

You can likely get rid of most of them by building with the recommended 
packages.

Duncan Murdoch

> 
>   | make[3]: Entering directory '/build/R-3.5.0/tests/Examples'
>   | Testing examples for package 'base'
>   | Testing examples for package 'tools'
>   |   comparing 'tools-Ex.Rout' to 'tools-Ex.Rout.save' ... OK
>   | Testing examples for package 'utils'
>   | Testing examples for package 'grDevices'
>   |   comparing 'grDevices-Ex.Rout' to 'grDevices-Ex.Rout.save' ... OK
>   | Testing examples for package 'graphics'
>   |   comparing 'graphics-Ex.Rout' to 'graphics-Ex.Rout.save' ... OK
>   | Testing examples for package 'stats'
>   |   comparing 'stats-Ex.Rout' to 'stats-Ex.Rout.save' ... NOTE
>   |   6599c6599
>   |   < Grand Mean: 291.5937
>   |   ---
>   |   > Grand Mean: 291.5938
>   |   15124c15124
>   |   < Grand Mean: 291.5937
>   |   ---
>   |   > Grand Mean: 291.5938
>   |   17444c17444
>   |   < assertCondition: caught "error"
>   |   ---
>   |   > assertCondition: caught 'error'
>   | Testing examples for package 'datasets'
>   |   comparing 'datasets-Ex.Rout' to 'datasets-Ex.Rout.save' ... OK
>   | Testing examples for package 'methods'
>   | Testing examples for package 'grid'
>   |   comparing 'grid-Ex.Rout' to 'grid-Ex.Rout.save' ... OK
>   | Testing examples for package 'splines'
>   |   comparing 'splines-Ex.Rout' to 'splines-Ex.Rout.save' ... OK
>   | Testing examples for package 'stats4'
>   |   comparing 'stats4-Ex.Rout' to 'stats4-Ex.Rout.save' ... OK
>   | Testing examples for package 'tcltk'
>   | Testing examples for package 'compiler'
>   | Testing examples for package 'parallel'
>   | make[3]: Leaving directory '/build/R-3.5.0/tests/Examples'
>   | make[2]: Leaving directory '/build/R-3.5.0/tests'
>   | make[2]: Entering directory '/build/R-3.5.0/tests'
>   | make[2]: warning: jobserver unavailable: using -j1.  Add '+' to parent make rule.
>   | running strict specific tests
>   | make[3]: Entering directory '/build/R-3.5.0/tests'
>   | running code in 'eval-etc.R' ... OK
>   |   comparing 'eval-etc.Rout' to './eval-etc.Rout.save' ...414,416c414,548
>   | < Warning message:
>   | < In library(package, lib.loc = lib.loc, character.only = TRUE, logical.return = TRUE,  :
>   | <   there is no package called 'Matrix'
>   | ---
>   | > Trying some Matrix objects, too
>   | >
>   | > Matrix> Matrix(0, 3, 2)             # 3 by 2 matrix of zeros -> sparse
>   | > 3 x 2 sparse Matrix of class "dgCMatrix"
>   | >
>   | > [1,] . .
>   | > [2,] . .
>   | > [3,] . .
>   | >
>   | > Matrix> Matrix(0, 3, 2, sparse=FALSE)# -> 'dense'
>   | > 3 x 2 Matrix of class "dgeMatrix"
>   | >      [,1] [,2]
>   | > [1,]    0    0
>   | > [2,]    0    0
>   | > [3,]    0    0
>   | >
>   | > Matrix> Matrix(0, 2, 2, sparse=FALSE)# diagonal !
>   | > 2 x 2 diagonal matrix of class "ddiMatrix"
>   | >      [,1] [,2]
>   | > [1,]    0    .
>   | > [2,]    .    0
>   | >
>   | > Matrix> Matrix(0, 2, 2, sparse=FALSE, doDiag=FALSE)# -> dense
>   | > 2 x 2 Matrix of class "dsyMatrix"
>   | >      [,1] [,2]
>   | > [1,]    0    0
>   | > [2,]    0    0
>   | >
>   | > Matrix> Matrix(1:6, 3, 2)           # a 3 by 2 matrix (+ integer warning)
>   | > 3 x 2 Matrix of class "dgeMatrix"
>   | >      [,1] [,2]
>   | > [1,]    1    4
>   | > [2,]    2    5
>   | > [3,]    3    6
>   | >
>   | > Matrix> Matrix(1:6 + 1, nrow=3)
>   | > 3 x 2 Matrix of class "dgeMatrix"
>   | >      [,1] [,2]
>   | > [1,]    2    5
>   | > [2,]    3    6
>   | > [3,]    4    7
>   | >
>   | > Matrix> ## logical ones:
>   | > Matrix> Matrix(diag(4) >  0)# -> "ldiMatrix" with diag = "U"
>   | > 4 x 4 diagonal matrix of class "ldiMatrix"
>   | >      [,1] [,2] [,3] [,4]
>   | > [1,] TRUE    .    .    .
>   | > [2,]    . TRUE    .    .
>   | > [3,]    .    . TRUE    .
>   | > [4,]    .    .    . TRUE
>   | >
>   | > Matrix> Matrix(diag(4) >  0, sparse=TRUE)# -> sparse...
>   | > 4 x 4 sparse Matrix of class "lsCMatrix"
>   | >
>   | > [1,] | . . .
>   | > [2,] . | . .
>   | > [3,] . . | .
>   | > [4,] . . . |
>   | >
>   | > Matrix> Matrix(diag(4) >= 0)# -> "lsyMatrix" (of all 'TRUE')
>   | > 4 x 4 Matrix of class "lsyMatrix"
>   | >      [,1] [,2] [,3] [,4]
>   | > [1,] TRUE TRUE TRUE TRUE
>   | > [2,] TRUE TRUE TRUE TRUE
>   | > [3,] TRUE TRUE TRUE TRUE
>   | > [4,] TRUE TRUE TRUE TRUE
>   | >
>   | > Matrix> ## triangular
>   | > Matrix> l3 <- upper.tri(matrix(,3,3))
>   | >
>   | > Matrix> (M <- Matrix(l3))  # -> "ltCMatrix"
>   | > 3 x 3 sparse Matrix of class "ltCMatrix"
>   | >
>   | > [1,] . | |
>   | > [2,] . . |
>   | > [3,] . . .
>   | >
>   | > Matrix> Matrix(! l3)# -> "ltrMatrix"
>   | > 3 x 3 Matrix of class "ltrMatrix"
>   | >      [,1]  [,2]  [,3]
>   | > [1,]  TRUE     .     .
>   | > [2,]  TRUE  TRUE     .
>   | > [3,]  TRUE  TRUE  TRUE
>   | >
>   | > Matrix> as(l3, "CsparseMatrix")
>   | > 3 x 3 sparse Matrix of class "lgCMatrix"
>   | >
>   | > [1,] . | |
>   | > [2,] . . |
>   | > [3,] . . .
>   | >
>   | > Matrix> Matrix(1:9, nrow=3,
>   | > Matrix+        dimnames = list(c("a", "b", "c"), c("A", "B", "C")))
>   | > 3 x 3 Matrix of class "dgeMatrix"
>   | >   A B C
>   | > a 1 4 7
>   | > b 2 5 8
>   | > c 3 6 9
>   | >
>   | > Matrix> (I3 <- Matrix(diag(3)))# identity, i.e., unit "diagonalMatrix"
>   | > 3 x 3 diagonal matrix of class "ddiMatrix"
>   | >      [,1] [,2] [,3]
>   | > [1,]    1    .    .
>   | > [2,]    .    1    .
>   | > [3,]    .    .    1
>   | >
>   | > Matrix> str(I3) # note the empty 'x' slot
>   | > Formal class 'ddiMatrix' [package "Matrix"] with 4 slots
>   | >   ..@ diag    : chr "U"
>   | >   ..@ Dim     : int [1:2] 3 3
>   | >   ..@ Dimnames:List of 2
>   | >   .. ..$ : NULL
>   | >   .. ..$ : NULL
>   | >   ..@ x       : num(0)
>   | >
>   | > Matrix> (A <- cbind(a=c(2,1), b=1:2))# symmetric *apart* from dimnames
>   | >      a b
>   | > [1,] 2 1
>   | > [2,] 1 2
>   | >
>   | > Matrix> Matrix(A)                    # hence 'dgeMatrix'
>   | > 2 x 2 Matrix of class "dgeMatrix"
>   | >      a b
>   | > [1,] 2 1
>   | > [2,] 1 2
>   | >
>   | > Matrix> (As <- Matrix(A, dimnames = list(NULL,NULL)))# -> symmetric
>   | > 2 x 2 Matrix of class "dsyMatrix"
>   | >      [,1] [,2]
>   | > [1,]    2    1
>   | > [2,]    1    2
>   | >
>   | > Matrix> stopifnot(is(As, "symmetricMatrix"),
>   | > Matrix+           is(Matrix(0, 3,3), "sparseMatrix"),
>   | > Matrix+           is(Matrix(FALSE, 1,1), "sparseMatrix"))
>   | 430,436c562,564
>   | < A: function (x, y, ...)
>   | < {
>   | <     B <- function(a, b, ...) {
>   | <         match.call()
>   | <     }
>   | <     B(x + y, ...)
>   | < }
>   | ---
>   | > A: new("dgCMatrix", i = c(0L, 3L, 4L, 5L, 2L, 6L, 7L), p = c(0L,
>   | > 0L, 1L, 1L, 1L, 1L, 2L, 3L, 4L, 6L, 7L), Dim = c(8L, 10L), Dimnames = list(
>   | >     NULL, NULL), x = c(7, 21, 28, 35, 14, 42, 49), factors = list())
>   | 438,444c566,589
>   | < checking body(.):
>   | < quote({
>   | <     B <- function(a, b, ...) {
>   | <         match.call()
>   | <     }
>   | <     B(x + y, ...)
>   | < })
>   | ---
>   | > --=--=--=--=--
>   | > A.: new("dgCMatrix", i = c(0L, 3L, 4L, 5L, 2L, 6L, 7L), p = c(0L,
>   | > 0L, 1L, 1L, 1L, 1L, 2L, 3L, 4L, 6L, 7L), Dim = c(8L, 10L), Dimnames = list(
>   | >     NULL, NULL), x = c(2, 21, 28, 35, 14, 42, 49), factors = list())
>   | >  --> checking list(*): Ok
>   | > --=--=--=--=--
>   | > A1: new("dgCMatrix", i = c(0L, 3L, 4L, 5L, 2L, 6L, 7L), p = c(0L,
>   | > 0L, 1L, 1L, 1L, 1L, 2L, 3L, 4L, 6L, 7L), Dim = c(8L, 10L), Dimnames = list(
>   | >     NULL, NULL), x = c(7, 21, 28, 35, 14, 42, 49), factors = list())
>   | >  --> checking list(*): Ok
>   | > --=--=--=--=--
>   | > AA: new("dgCMatrix", i = c(0L, 3L, 4L, 5L, 2L, 6L, 7L), p = c(0L,
>   | > 0L, 1L, 1L, 1L, 1L, 2L, 3L, 4L, 6L, 7L, 7L, 7L, 7L, 7L, 7L, 7L,
>   | > 7L, 7L, 7L, 7L), Dim = c(10L, 20L), Dimnames = list(NULL, NULL),
>   | >     x = c(7, 21, 28, 35, 14, 42, 49), factors = list())
>   | >  --> checking list(*): Ok
>   | > --=--=--=--=--
>   | > Aa: new("dgCMatrix", i = c(0L, 3L, 4L, 5L, 2L, 6L, 7L), p = c(0L,
>   | > 0L, 1L, 1L, 1L, 1L, 2L, 3L, 4L, 6L, 7L), Dim = c(8L, 10L), Dimnames = list(
>   | >     NULL, NULL), x = c(9, 21, 28, 35, 14, 42, 49), factors = list())
>   | >  --> checking list(*): Ok
>   | > --=--=--=--=--
>   | > As: new("dsyMatrix", x = c(2, 1, 1, 2), Dim = c(2L, 2L), Dimnames = list(
>   | >     NULL, NULL), uplo = "U", factors = list())
>   | 446,448d590
>   | < checking formals(.):
>   | < as.pairlist(alist(x = , y = , ... = ))
>   | < __ not parse()able __: hasMissObj(.) is true
>   | 551a694,701
>   | > D5.: new("ddiMatrix", diag = "N", Dim = c(5L, 5L), Dimnames = list(
>   | >     NULL, NULL), x = c(5, 4, 3, 2, 1))
>   | >  --> checking list(*): Ok
>   | > --=--=--=--=--
>   | > D5N: new("ddiMatrix", diag = "N", Dim = c(5L, 5L), Dimnames = list(
>   | >     NULL, NULL), x = c(5, 4, 3, 2, NA))
>   | >  --> checking list(*): Ok
>   | > --=--=--=--=--
>   | 564a715,718
>   | > I3: new("ddiMatrix", diag = "U", Dim = c(3L, 3L), Dimnames = list(
>   | >     NULL, NULL), x = numeric(0))
>   | >  --> checking list(*): Ok
>   | > --=--=--=--=--
>   | 588a743,747
>   | > M: new("ltCMatrix", i = c(0L, 0L, 1L), p = c(0L, 0L, 1L, 3L), Dim = c(3L,
>   | > 3L), Dimnames = list(NULL, NULL), x = c(TRUE, TRUE, TRUE), uplo = "U",
>   | >     diag = "N")
>   | >  --> checking list(*): Ok
>   | > --=--=--=--=--
>   | 612a772,776
>   | > args: structure(list(i = c(1, 3, 4, 5, 6, 7, 8, 1), j = c(2, 9, 6,
>   | > 7, 8, 9, 10, 2), x = c(7, 14, 21, 28, 35, 42, 49, 2)), class = "data.frame", row.names = c(NA,
>   | > -8L))
>   | >  --> checking list(*): Ok
>   | > --=--=--=--=--
>   | 732,733c896,901
>   | < e: <environment>
>   | < __ not parse()able __: environment
>   | ---
>   | > dn: list(c("A", "B", "C"), c("a", "b", "c", "d", "e"))
>   | >  --> checking list(*): Ok
>   | > --=--=--=--=--
>   | > e: new("ngCMatrix", i = integer(0), p = c(0L, 0L, 0L, 0L, 0L, 0L,
>   | > 0L), Dim = c(4L, 6L), Dimnames = list(NULL, NULL), factors = list())
>   | >  --> checking list(*): Ok
>   | 844a1013,1015
>   | > i: c(1, 3, 4, 5, 6, 7, 8)
>   | >  --> checking list(*): Ok
>   | > --=--=--=--=--
>   | 876a1048,1050
>   | > j: c(2, 9, 6, 7, 8, 9, 10)
>   | >  --> checking list(*): Ok
>   | > --=--=--=--=--
>   | 886a1061,1064
>   | > l3: structure(c(FALSE, FALSE, FALSE, TRUE, FALSE, FALSE, TRUE, TRUE,
>   | > FALSE), .Dim = c(3L, 3L))
>   | >  --> checking list(*): Ok
>   | > --=--=--=--=--
>   | 891a1070,1074
>   | > m: new("dgCMatrix", i = c(2L, 0L, 1L, 2L, 0L, 1L), p = c(0L, 1L,
>   | > 2L, 4L, 4L, 6L), Dim = c(3L, 5L), Dimnames = list(c("A", "B",
>   | > "C"), c("a", "b", "c", "d", "e")), x = c(1, 2, 4, 3, 6, 5), factors = list())
>   | >  --> checking list(*): Ok
>   | > --=--=--=--=--
>   | 944a1128,1136
>   | > n: new("ngCMatrix", i = 5:0, p = c(0L, 0L, 1L, 2L, 3L, 4L, 5L, 6L
>   | > ), Dim = 6:7, Dimnames = list(NULL, NULL), factors = list())
>   | >  --> checking list(*): Ok
>   | > --=--=--=--=--
>   | > nA: new("ngCMatrix", i = c(0L, 3L, 4L, 5L, 2L, 6L, 7L), p = c(0L,
>   | > 0L, 1L, 1L, 1L, 1L, 2L, 3L, 4L, 6L, 7L), Dim = c(8L, 10L), Dimnames = list(
>   | >     NULL, NULL), factors = list())
>   | >  --> checking list(*): Ok
>   | > --=--=--=--=--
>   | 961a1154,1156
>   | > perm: c(2L, 3L, 6L, 4L, 1L, 7L, 5L)
>   | >  --> checking list(*): Ok
>   | > --=--=--=--=--
>   | 1010a1206,1211
>   | > sA: new("dsCMatrix", i = c(0L, 3L, 4L, 5L, 2L, 6L, 7L), p = c(0L,
>   | > 0L, 1L, 1L, 1L, 1L, 2L, 3L, 4L, 6L, 7L), Dim = c(10L, 10L), Dimnames = list(
>   | >     NULL, NULL), x = c(7, 21, 28, 35, 14, 42, 49), uplo = "U",
>   | >     factors = list())
>   | >  --> checking list(*): Ok
>   | > --=--=--=--=--
>   | 1014a1216,1220
>   | > sy: new("dsCMatrix", i = c(1L, 3L, 4L, 2L, 3L), p = c(0L, 0L, 0L,
>   | > 0L, 1L, 3L, 4L, 5L), Dim = c(7L, 7L), Dimnames = list(NULL, NULL),
>   | >     x = c(1, 4, 5, 3, 2), uplo = "U", factors = list())
>   | >  --> checking list(*): Ok
>   | > --=--=--=--=--
>   | 1018a1225,1230
>   | > tA: new("dtCMatrix", i = c(0L, 3L, 4L, 5L, 2L, 6L, 7L), p = c(0L,
>   | > 0L, 1L, 1L, 1L, 1L, 2L, 3L, 4L, 6L, 7L), Dim = c(10L, 10L), Dimnames = list(
>   | >     NULL, NULL), x = c(7, 21, 28, 35, 14, 42, 49), uplo = "U",
>   | >     diag = "N")
>   | >  --> checking list(*): Ok
>   | > --=--=--=--=--
>   | 1048c1260,1261
>   | < 2: In dput(x, control = control) : deparse may be incomplete
>   | ---
>   | > 2: In deparse(expr, backtick = backtick, control = control, ...) :
>   | >   deparse may be incomplete
>   | 1051c1264,1265
>   | < 4: In deparse(expr, backtick = backtick, control = control, ...) :
>   | ---
>   | > 4: In dput(x, control = control) : deparse may be incomplete
>   | > 5: In deparse(expr, backtick = backtick, control = control, ...) :
>   | 1053d1266
>   | < 5: In dput(x, control = control) : deparse may be incomplete
>   | 1056c1269,1270
>   | < 7: In deparse(expr, backtick = backtick, control = control, ...) :
>   | ---
>   | > 7: In dput(x, control = control) : deparse may be incomplete
>   | > 8: In deparse(expr, backtick = backtick, control = control, ...) :
>   | 1058d1271
>   | < 8: In dput(x, control = control) : deparse may be incomplete
>   | 1061,1062d1273
>   | < 10: In deparse(expr, backtick = backtick, control = control, ...) :
>   | <   deparse may be incomplete
>   | 1064c1275
>   | < Summary of (a total of 10) warning messages:
>   | ---
>   | > Summary of (a total of 9) warning messages:
>   | 1066c1277
>   | < 4x : In deparse(expr, backtick = backtick, control = control,  ... :
>   | ---
>   | > 3x : In deparse(expr, backtick = backtick, control = control,  ... :
>   | make[3]: *** [Makefile.common:106: eval-etc.Rout] Error 1
> 
> Now, I'm not quite sure how to interpret that output. Some of these
> issues seem harmless, really, and not indicative of a serious problem in
> R. Still, I reckon that it would be nice if the test suite would pass
> and for all I know other people might run into the same issue as we did,
> so I felt I should report it to the devs.
> 
> If there is any advice how to remedy this issues, then I'd very much
> appreciate it.
> 
> Best regards,
> Peter
> 
> [1] https://hydra.nixos.org/build/73154582/nixlog/3
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>


From rekado at elephly.net  Mon Apr 23 14:11:26 2018
From: rekado at elephly.net (Ricardo Wurmus)
Date: Mon, 23 Apr 2018 14:11:26 +0200
Subject: [Rd] R 3.5.0 fails its regression test suite on Linux/x86_64
In-Reply-To: <23261.50296.753990.329858@rob.eddelbuettel.com>
References: <874lk2dxgf.fsf@write-only.cryp.to>
 <23261.50296.753990.329858@rob.eddelbuettel.com>
Message-ID: <877eoyt95d.fsf@elephly.net>


Hi Dirk,

> On 23 April 2018 at 12:33, Peter Simons wrote:
> | Hi,
> |
> | I just tried to upgrade Nixpkgs to R 3.5.0, but unfortunately the new
> | version fails its regression test suite. We configure the build using
> | the flags "--without-recommended-packages", in case that's relevant. You
> | can see a complete build log with all relevant information at [1].
> | Anyway, the test failures look like this:
>
> The flag instructs R not to build new 'recommended packages'; however the
> tests you run later need them.

Is there a way to disable only those tests that depend on the
recommended packages?  Would it make sense to disable these tests by
default when ?--without-recommended-packages? is passed?

> This release has a binary change so you
> actually need to rebuild dependent packages -- in other words I think you can
> expect (some of) these tests to fail until these recommended packages are
> rebuilt.

I?ve hit the same problem as Peter in upgrading R for Guix.  We build
the recommended packages as separate packages later, so that we can
offer a minimal R package.  At the time when R itself is built the
environment does not contain any R packages, so there is nothing to be
rebuilt.

Another problem with building the recommended packages as part of the R
build process is that it?s more difficult to make them build
bit-reproducibly.  Building them as separate packages simplifies that
and enables us to prevent e.g. the embedding of timestamps.

--
Ricardo


From simons at nospf.cryp.to  Mon Apr 23 15:14:42 2018
From: simons at nospf.cryp.to (Peter Simons)
Date: Mon, 23 Apr 2018 15:14:42 +0200
Subject: [Rd] R 3.5.0 fails its regression test suite on Linux/x86_64
References: <874lk2dxgf.fsf@write-only.cryp.to>
 <1aecf60e-715d-1395-a6b7-dc18dd950de9@gmail.com>
Message-ID: <87po2qcbel.fsf@write-only.cryp.to>

Duncan Murdoch <murdoch.duncan at gmail.com> writes:

 > You can likely get rid of most of them by building with the recommended
 > packages.

unfortunately, this is not an option for us. For various reasons, our
build process requires that we build those packages separately. Ricardo
appears to be in a similar situation and he has outlined some of those
reasons already in his message.

Anyway, it would be FAR better for us if "make check" would simply
succeed in the configuration we're using. We'd be perfectly happy to
have those tests disabled that cannot be executed without the
recommended packages available.

Is there a way to accomplish that?

Best regards,
Peter


From edd at debian.org  Mon Apr 23 16:02:38 2018
From: edd at debian.org (Dirk Eddelbuettel)
Date: Mon, 23 Apr 2018 09:02:38 -0500
Subject: [Rd] R 3.5.0 fails its regression test suite on Linux/x86_64
In-Reply-To: <87po2qcbel.fsf@write-only.cryp.to>
References: <874lk2dxgf.fsf@write-only.cryp.to>
 <1aecf60e-715d-1395-a6b7-dc18dd950de9@gmail.com>
 <87po2qcbel.fsf@write-only.cryp.to>
Message-ID: <23261.59262.434274.776717@rob.eddelbuettel.com>


On 23 April 2018 at 15:14, Peter Simons wrote:
| Duncan Murdoch <murdoch.duncan at gmail.com> writes:
| 
|  > You can likely get rid of most of them by building with the recommended
|  > packages.
| 
| unfortunately, this is not an option for us. For various reasons, our
| build process requires that we build those packages separately. Ricardo
| appears to be in a similar situation and he has outlined some of those
| reasons already in his message.
| 
| Anyway, it would be FAR better for us if "make check" would simply
| succeed in the configuration we're using. We'd be perfectly happy to
| have those tests disabled that cannot be executed without the
| recommended packages available.
| 
| Is there a way to accomplish that?

I have been doing for R for about 20 years (if you count the time I assisted
Doug Bates when he was still the maintainer) (and longer for Debian), and you
seem to follow the same model we set up years ago of splitting the content of
r-recommended (itself a virtual package) off r-base-core.

You simply need to do this in stages.

As Duncan stated, this is not a concern for R Core as they offer us a way to
test the set.

Dirk

-- 
http://dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org


From simons at nospf.cryp.to  Mon Apr 23 18:28:41 2018
From: simons at nospf.cryp.to (Peter Simons)
Date: Mon, 23 Apr 2018 18:28:41 +0200
Subject: [Rd] R 3.5.0 fails its regression test suite on Linux/x86_64
References: <874lk2dxgf.fsf@write-only.cryp.to>
 <1aecf60e-715d-1395-a6b7-dc18dd950de9@gmail.com>
 <87po2qcbel.fsf@write-only.cryp.to>
 <23261.59262.434274.776717@rob.eddelbuettel.com>
Message-ID: <87fu3levk6.fsf@write-only.cryp.to>

Hi Dirk,

 > I have been doing for R for about 20 years (if you count the time I
 > assisted Doug Bates when he was still the maintainer) (and longer for
 > Debian), and you seem to follow the same model we set up years ago of
 > splitting the content of r-recommended (itself a virtual package) off
 > r-base-core.
 >
 > You simply need to do this in stages.

I have packaged free software for 20+ years for many different distributions,
and, in fact, I'm doing that professionally these days as an employee of one of
the largest commercial Linux distributors. So please trust my expertise when I
tell you that this is not what I want.

What I want is

  ./configure --without-recommended-packages && make && make check

to succeed without error, and I don't think that's an unreasonable expectation.

I have reported these kind of errors before in past, and back then a friendly R
developer simply took a moment to disable the offending tests when the build
was configured with this particular flag and that solved the problem. I would
hope that this is the outcome we can achieve this time, too.

If no-one wants to make those changes for whatever reason, then that's fine and
I'll just disable the test suite in NixOS to make the build succeed. I feel like
that would be a sub-optimal solution, though.

Best regards,
Peter


From edd at debian.org  Mon Apr 23 19:04:09 2018
From: edd at debian.org (Dirk Eddelbuettel)
Date: Mon, 23 Apr 2018 12:04:09 -0500
Subject: [Rd] R 3.5.0 fails its regression test suite on Linux/x86_64
In-Reply-To: <87fu3levk6.fsf@write-only.cryp.to>
References: <874lk2dxgf.fsf@write-only.cryp.to>
 <1aecf60e-715d-1395-a6b7-dc18dd950de9@gmail.com>
 <87po2qcbel.fsf@write-only.cryp.to>
 <23261.59262.434274.776717@rob.eddelbuettel.com>
 <87fu3levk6.fsf@write-only.cryp.to>
Message-ID: <23262.4617.264470.148598@rob.eddelbuettel.com>


Peter,

I think we are on the same page, but there is little I can do for you here.
Ultimately you are asking R Core to do you a favor. More below.

On 23 April 2018 at 18:28, Peter Simons wrote:
| Hi Dirk,
| 
|  > I have been doing for R for about 20 years (if you count the time I
|  > assisted Doug Bates when he was still the maintainer) (and longer for
|  > Debian), and you seem to follow the same model we set up years ago of
|  > splitting the content of r-recommended (itself a virtual package) off
|  > r-base-core.
|  >
|  > You simply need to do this in stages.
| 
| I have packaged free software for 20+ years for many different distributions,
| and, in fact, I'm doing that professionally these days as an employee of one of
| the largest commercial Linux distributors. So please trust my expertise when I
| tell you that this is not what I want.
| 
| What I want is
| 
|   ./configure --without-recommended-packages && make && make check
| 
| to succeed without error, and I don't think that's an unreasonable expectation.

Sure. You "merely" have to get R Core to implement it for you.  Given that it
does not help them (they just build 'with recommended') and is not strictly
needed (it will pass in a second pass once you used the first pass to build
the recommended packages) it is a little hard to see how this 'nice to have'
item may bubble higher on anybody's priorities.  But the general rules is
that if and when well-written patches are submitted on topics where there is
agreement that a fix may help, then they are considered. So *you* could work
on this.
 
| I have reported these kind of errors before in past, and back then a friendly R
| developer simply took a moment to disable the offending tests when the build
| was configured with this particular flag and that solved the problem. I would
| hope that this is the outcome we can achieve this time, too.

R Core disabled tests in base R for you?  Hm. Are you sure?  Or are you by
chance confusing R Core with a random package maintainer (like myself) who
may have disabled a test?
 
| If no-one wants to make those changes for whatever reason, then that's fine and
| I'll just disable the test suite in NixOS to make the build succeed. I feel like
| that would be a sub-optimal solution, though.

You could comment it out now, and re-enable it once your package stack is
refilled.  Or you could make it 'make -k check' for now.

It's really under your control as it your build environment.

Dirk

-- 
http://dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org


From murdoch.duncan at gmail.com  Mon Apr 23 22:03:03 2018
From: murdoch.duncan at gmail.com (Duncan Murdoch)
Date: Mon, 23 Apr 2018 16:03:03 -0400
Subject: [Rd] R 3.5.0 fails its regression test suite on Linux/x86_64
In-Reply-To: <87fu3levk6.fsf@write-only.cryp.to>
References: <874lk2dxgf.fsf@write-only.cryp.to>
 <1aecf60e-715d-1395-a6b7-dc18dd950de9@gmail.com>
 <87po2qcbel.fsf@write-only.cryp.to>
 <23261.59262.434274.776717@rob.eddelbuettel.com>
 <87fu3levk6.fsf@write-only.cryp.to>
Message-ID: <2ff13586-68e7-3143-4893-8e18fd05e8ef@gmail.com>

On 23/04/2018 12:28 PM, Peter Simons wrote:
> Hi Dirk,
> 
>   > I have been doing for R for about 20 years (if you count the time I
>   > assisted Doug Bates when he was still the maintainer) (and longer for
>   > Debian), and you seem to follow the same model we set up years ago of
>   > splitting the content of r-recommended (itself a virtual package) off
>   > r-base-core.
>   >
>   > You simply need to do this in stages.
> 
> I have packaged free software for 20+ years for many different distributions,
> and, in fact, I'm doing that professionally these days as an employee of one of
> the largest commercial Linux distributors. So please trust my expertise when I
> tell you that this is not what I want.
> 
> What I want is
> 
>    ./configure --without-recommended-packages && make && make check
> 
> to succeed without error, and I don't think that's an unreasonable expectation.

So you're getting paid to do what you do, but you want the volunteers in 
R Core to do some work for you for free.  I *do* think that's an 
unreasonable expectation.

> 
> I have reported these kind of errors before in past, and back then a friendly R
> developer simply took a moment to disable the offending tests when the build
> was configured with this particular flag and that solved the problem. I would
> hope that this is the outcome we can achieve this time, too.

Perhaps back then you were also a volunteer.

> 
> If no-one wants to make those changes for whatever reason, then that's fine and
> I'll just disable the test suite in NixOS to make the build succeed. I feel like
> that would be a sub-optimal solution, though.

I agree.  You should spend some time working out a better one.

Duncan Murdoch


From _ at thomaslevine.com  Mon Apr 23 22:59:35 2018
From: _ at thomaslevine.com (Thomas Levine)
Date: Mon, 23 Apr 2018 20:59:35 +0000
Subject: [Rd] Bug 16719: kruskal.test documentation for formula
Message-ID: <20180423205935.756F5E508E@mailuser.nyi.internal>

I submit a couple options for addressing bug 16719: kruskal.test
documentation for formula.
https://bugs.r-project.org/bugzilla3/show_bug.cgi?id=16719

disallow-character.diff changes the documentation and error message
to indicate that factors are accepted.

allow-character.diff changes the kruskal.test functions to convert
character vectors to factors; documentation is updated accordingly.

I tested the updated functions with the examples in example.R. It is
based on the examples in the bug report.

If there is interest in applying either patch, especially the latter,
I want first to test the change on lots of existing programs that call
kruskal.test, to see if it causes any regressions. Is there a good place
to look for programs that use particular R functions?

I am having trouble building R, so I have so far tested these changes
only by patching revision 74631 (SVN head) and sourcing the resulting
kruskal.test.R in R 3.4.1 on OpenBSD 6.2. I thus have not tested the
R documentation files.

-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: disallow-character.diff
URL: <https://stat.ethz.ch/pipermail/r-devel/attachments/20180423/4f5c65b0/attachment.ksh>

-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: allow-character.diff
URL: <https://stat.ethz.ch/pipermail/r-devel/attachments/20180423/4f5c65b0/attachment-0001.ksh>

-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: example.R
URL: <https://stat.ethz.ch/pipermail/r-devel/attachments/20180423/4f5c65b0/attachment-0002.ksh>

From tomas.kalibera at gmail.com  Tue Apr 24 12:27:16 2018
From: tomas.kalibera at gmail.com (Tomas Kalibera)
Date: Tue, 24 Apr 2018 12:27:16 +0200
Subject: [Rd] 
 R CMD build then check fails on R-devel due to serialization version
In-Reply-To: <f2d6aad6-a1ab-222c-8b2d-eaff3c2cb721@gmail.com>
References: <CAOCv4hjunyV2N87s5-kNyH9J7aOWr2wrK-A_zJ_jP657b3sHNA@mail.gmail.com>
 <f861af0d-376a-0be4-ecb7-f09e8165893b@gmail.com>
 <CAD6tx97KwmaxnpXgZBYzc8ZXgAnYys=Aw9UF6JmK4RNXd-_2hQ@mail.gmail.com>
 <alpine.OSX.2.20.1801110737220.7320@lukes-macbook-air.local>
 <f2d6aad6-a1ab-222c-8b2d-eaff3c2cb721@gmail.com>
Message-ID: <ccd1a3d9-ae30-45fe-2db4-df5338104879@gmail.com>


An update on the adoption of serialization format 3:

R 3.5.0 (released yesterday) supports serialization format 3, but the 
default is still format 2 to make the transition easier.

It is expected that the default will soon be changed to 3 in R-devel. 
Packages thus must not depend on what is the default serialization 
format (several packages used to have hard-coded assumptions about that 
the format was 2).

As of R 3.5.0, one can test the effect of the expected change to 
serialization format 3 by setting environment variables 
"R_DEFAULT_SAVE_VERSION=3" and "R_DEFAULT_SERIALIZE_VERSION=3". One can 
also set these to 2 to ensure the default format is 2 even after the 
expected change.

Packages that include serialization files in format 3 in their sources 
cannot be used by older versions of R than 3.5.0, so they must declare a 
dependency on R>=3.5.0. Package authors need to make sure of this, but 
they only need to worry if they added serialization files explicitly - 
package meta-data will still be saved in format 2 automatically. Note 
that the current release, R 3.5.0, has the default at 2, so no extra 
precaution is needed when creating such serialize files using the 
current release 3.5.0, but authors will have to be careful when creating 
such files using even newer versions of R.

As a safeguard, "R CMD build" automatically adds a dependency on 
R>=3.5.0 when it detects a serialization file in format 3, but package 
authors should not depend on this, because the detection is not and can 
not be fully precise. As another safeguard, "R CMD check --as-cran" will 
reject packages with serialization format 3 unless they have a 
dependency on at least R>=3.5.0.

This should give enough options also for testing frameworks based on 
running build&"check --as-cran" using the same version of R (most 
packages don't include serialize files at all, R CMD build would 
otherwise add dependency on R>=3.5.0 to make "R CMD check --as-cran" 
happy, one could also set R_DEFAULT_SAVE_VERSION=2 and 
R_DEFAULT_SERIALIZE_VERSION=2). These frameworks could also be tested 
before the change by running with R_DEFAULT_SAVE_VERSION=3 and 
R_DEFAULT_SERIALIZE_VERSION=3.

Best
Tomas

On 01/13/2018 01:35 AM, Tomas Kalibera wrote:
> To reduce difficulties for people relying on automated tests set up to 
> build&"check --as-cran" using R-devel (e.g. travis-ci), the default 
> serialization version has been temporarily switched back to 2. Thank 
> you for your patience - according to svn history, the last change of 
> the serialization format happened 16 years ago, and unsurprisingly 
> some practices that developed since did not anticipate such change and 
> have to be adapted.
>
> CRAN is now protected against packages containing serialized files in 
> format 3 (which not only is not readable by 3.4.x and older, but could 
> still change - the 'devel' in 'R-devel'). These new checks have to 
> stay but we are looking at improving package-maintainer-friendliness. 
> It turned out more difficult than just 1-2 days, hence the temporary 
> switch back to version 2.
>
> Best
> Tomas
>
> On 01/11/2018 02:47 PM, luke-tierney at uiowa.edu wrote:
>> As things stand now, package tarballs with vignettes that are built
>> with R-devel will not install in R 3.4.x, so CRAN can't accept them
>> and someone running R CMD check --as-cran should be told that. A
>> WARNING is appropriate.
>>
>> Most likely what will change soon is that build/version.rds will be
>> saved with serialization version = 2 and this warning will not be
>> triggered just by having a vignette. It will still be triggered by
>> data files serialized with R-devel's default version = 3.
>>
>> Please do remember that the 'devel' in R-devel means exactly that:
>> things will at times be unstable. There are currently a lot of balls
>> flying around with changes in R-devel and also Biocontuctor, and the
>> CRAN maintainers are working hard to keep things all up in the
>> air. Please be patient.
>>
>> Best,
>>
>> luke
>>
>> On Thu, 11 Jan 2018, Jim Hester wrote:
>>
>>> This change poses difficulties for automated build systems such as
>>> travis-ci, which is widely used in the R community. In particular
>>> because this is a WARNING and not a NOTE this causes all R-devel
>>> builds with vignettes to fail, as the default settings fail the build
>>> if R CMD check issues a WARNING.
>>>
>>> The simplest change would be for R-core to change this message to be a
>>> NOTE rather than a WARNING, the serialization could still be tested
>>> and there would be a check against vignettes built with R-devel, but
>>> it would not cause these builds to fail.
>>>
>>> On Wed, Jan 10, 2018 at 3:52 PM, Duncan Murdoch
>>> <murdoch.duncan at gmail.com> wrote:
>>>> On 10/01/2018 1:26 PM, Neal Richardson wrote:
>>>>>
>>>>> Hi,
>>>>> Since yesterday I'm seeing `R CMD check --as-cran` failures on the
>>>>> R-devel daily build (specifically, R Under development (unstable)
>>>>> (2018-01-09 r74100)) for multiple packages:
>>>>>
>>>>> * checking serialized R objects in the sources ... WARNING
>>>>> Found file(s) with version 3 serialization:
>>>>> ?build/vignette.rds?
>>>>> Such files are only readable in R >= 3.5.0.
>>>>> Recreate them with R < 3.5.0 or save(version = 2) or 
>>>>> saveRDS(version =
>>>>> 2) as appropriate
>>>>>
>>>>> As far as I can tell, revision 74099
>>>>>
>>>>> (https://github.com/wch/r-source/commit/d9530001046a582ff6a43ca834d6c3586abd0a97), 
>>>>>
>>>>> which changes the default serialization format to 3, clashes with
>>>>> revision 73973
>>>>> (https://github.com/wch/r-source/commit/885764eb74f2211a547b13727f2ecc5470c3dd00), 
>>>>>
>>>>> which checks that serialized R objects are _not_ version 3. It seems
>>>>> that with the current development version of R, if you `R CMD build`
>>>>> and then run `R CMD check --as-cran` on the built package, it will
>>>>> fail.
>>>>>
>>>>
>>>> I think the message basically says:? don't do that.? You should 
>>>> build with
>>>> R-release for now.? You always need to check with R-devel, so life is
>>>> complicated.
>>>>
>>>> If you build with R-devel without forcing the old format, nobody using
>>>> R-release will be able to use your tarball.
>>>>
>>>> Eventually I guess the new format will be accepted by CRAN, but it 
>>>> will
>>>> likely be a while:? nobody expects everyone to instantly upgrade to 
>>>> a new R
>>>> release, let alone to an unreleased development version.
>>>>
>>>> Presumably that particular file (build/vignette.rds) could be 
>>>> automatically
>>>> built in the old format for now, but the new format needs testing, 
>>>> so it
>>>> makes sense to me to leave it as a default, even if it makes it more
>>>> complicated to submit a package to CRAN.
>>>>
>>>> Duncan Murdoch
>>>>
>>>>
>>>> ______________________________________________
>>>> R-devel at r-project.org mailing list
>>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>>
>>> ______________________________________________
>>> R-devel at r-project.org mailing list
>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>
>


From simons at nospf.cryp.to  Tue Apr 24 11:50:22 2018
From: simons at nospf.cryp.to (Peter Simons)
Date: Tue, 24 Apr 2018 11:50:22 +0200
Subject: [Rd] R 3.5.0 fails its regression test suite on Linux/x86_64
References: <874lk2dxgf.fsf@write-only.cryp.to>
 <1aecf60e-715d-1395-a6b7-dc18dd950de9@gmail.com>
 <87po2qcbel.fsf@write-only.cryp.to>
 <23261.59262.434274.776717@rob.eddelbuettel.com>
 <87fu3levk6.fsf@write-only.cryp.to>
 <2ff13586-68e7-3143-4893-8e18fd05e8ef@gmail.com>
Message-ID: <87po2paq75.fsf@write-only.cryp.to>

Duncan Murdoch writes:

 >> ./configure --without-recommended-packages && make && make check
 >
 > So you're getting paid to do what you do, but you want the volunteers
 > in R Core to do some work for you for free.

You are jumping to conclusions. Nobody pays me a single cent to package
R for Nix; I do that purely as a hobby.


 >> If no-one wants to make those changes for whatever reason, then that's fine and
 >> I'll just disable the test suite in NixOS to make the build succeed. I feel like
 >> that would be a sub-optimal solution, though.
 >
 > I agree. You should spend some time working out a better one.

Well, you know, every so often, I reach out to people in a free software
community to make them aware of some issue I've run into. On some
occasions, members of those communities respond in a helpful and
friendly manner that impresses me because these people are obviously
thoughtful and issue-oriented and offer nuanced insight into the problem
I've brought up, and then I feel like it would be fun to interact with
those people to learn new stuff and maybe contribute something useful.
That's the point about volunteering, right? People do it because they
*enjoy it*, not because someone tells them to.

So, you go ahead and have a very nice day, Duncan.

Best regards,
Peter


From maechler at stat.math.ethz.ch  Tue Apr 24 13:22:36 2018
From: maechler at stat.math.ethz.ch (Martin Maechler)
Date: Tue, 24 Apr 2018 13:22:36 +0200
Subject: [Rd] R 3.5.0 fails its regression test suite on Linux/x86_64
In-Reply-To: <87po2paq75.fsf@write-only.cryp.to>
References: <874lk2dxgf.fsf@write-only.cryp.to>
 <1aecf60e-715d-1395-a6b7-dc18dd950de9@gmail.com>
 <87po2qcbel.fsf@write-only.cryp.to>
 <23261.59262.434274.776717@rob.eddelbuettel.com>
 <87fu3levk6.fsf@write-only.cryp.to>
 <2ff13586-68e7-3143-4893-8e18fd05e8ef@gmail.com>
 <87po2paq75.fsf@write-only.cryp.to>
Message-ID: <23263.4988.465634.816456@stat.math.ethz.ch>

>>>>> Peter Simons <simons at nospf.cryp.to>
>>>>>     on Tue, 24 Apr 2018 11:50:22 +0200 writes:

    > Duncan Murdoch writes:
    >>> ./configure --without-recommended-packages && make && make check
    >> 
    >> So you're getting paid to do what you do, but you want the volunteers
    >> in R Core to do some work for you for free.

    > You are jumping to conclusions. Nobody pays me a single cent to package
    > R for Nix; I do that purely as a hobby.


    >>> If no-one wants to make those changes for whatever reason, then that's fine and
    >>> I'll just disable the test suite in NixOS to make the build succeed. I feel like
    >>> that would be a sub-optimal solution, though.
    >> 
    >> I agree. You should spend some time working out a better one.

    > Well, you know, every so often, I reach out to people in a free software
    > community to make them aware of some issue I've run into. On some
    > occasions, members of those communities respond in a helpful and
    > friendly manner that impresses me because these people are obviously
    > thoughtful and issue-oriented and offer nuanced insight into the problem
    > I've brought up, and then I feel like it would be fun to interact with
    > those people to learn new stuff and maybe contribute something useful.
    > That's the point about volunteering, right? People do it because they
    > *enjoy it*, not because someone tells them to.

    > So, you go ahead and have a very nice day, Duncan.

... "easy easy", ...
Let's all be friendly and not imposing on others.

I can't speak for all of R core on this, but I agree with you,
Simon, that ideally  'make check' should work also when the unusual
	 --without-recommended-packages
option is
used.  As a matter of fact, it did work in most recent versions of R. 
I will make an effort to have it work again like that in R
3.5.1,  notably because I was crucial in breaking what
previously did work (when I introduced relatively comprehensive test code for
checking the newly introduced feature of correct deparsing of S4 objects).

Note however that 3.5.1 will most probably be many weeks away.

What should also be said :

We have had a public release cycle of about one month of
alpha testing, beta testing, release-canditate, etc,
and nobody has reported that problem.
I would think good netizens depending on R would do at least one
check of installing a pre-release.
(Debian has done so).

Lastly, let me add to what was said:  You can change your
procedures to easily workaround the issue, and as Dirk has
mentioned, Debian etc have adopted a more robust procedure for
packaging both R without rec.pkg. and the rec.pkg.s (and then
bundle the two in yet another).

Best,
Martin Maechler
ETH Zurich


From Joris.Meys at ugent.be  Tue Apr 24 13:26:34 2018
From: Joris.Meys at ugent.be (Joris Meys)
Date: Tue, 24 Apr 2018 13:26:34 +0200
Subject: [Rd] data.table not available as win binary for R 3.5
Message-ID: <CAO1zAVaz6VRYMcdfntUS7=Wgx-cbTYwkw9cnoGhpK+3VOPzWvQ@mail.gmail.com>

Dear all,

to my astonishment data.table cannot be installed on R 3.5 Windows. When
checking the package page, the Windows binary is available for download.
When checking the server however, I can't seem to find data.table. Also
install.packages() says the package is only available in source form and
may need compilation.

Compiling using Rtools 35 is no problem.

Is this merely an issue of CRAN still moving packages around and should I
have a bit more patience, or is there another reason why data.table
currently isn't installable using install.packages() as a binary on Windows?

PS: I obviously set my repos to the official CRAN server to rule out sync
issues between mirrors.

Cheers
Joris

-- 
Joris Meys
Statistical consultant

Department of Data Analysis and Mathematical Modelling
Ghent University
Coupure Links 653, B-9000 Gent (Belgium)
<https://maps.google.com/?q=Coupure+links+653,%C2%A0B-9000+Gent,%C2%A0Belgium&entry=gmail&source=g>

tel: +32 (0)9 264 61 79
-----------
Biowiskundedagen 2017-2018
http://www.biowiskundedagen.ugent.be/

-------------------------------
Disclaimer : http://helpdesk.ugent.be/e-maildisclaimer.php

	[[alternative HTML version deleted]]


From jeroenooms at gmail.com  Tue Apr 24 14:11:04 2018
From: jeroenooms at gmail.com (Jeroen Ooms)
Date: Tue, 24 Apr 2018 08:11:04 -0400
Subject: [Rd] data.table not available as win binary for R 3.5
In-Reply-To: <CAO1zAVaz6VRYMcdfntUS7=Wgx-cbTYwkw9cnoGhpK+3VOPzWvQ@mail.gmail.com>
References: <CAO1zAVaz6VRYMcdfntUS7=Wgx-cbTYwkw9cnoGhpK+3VOPzWvQ@mail.gmail.com>
Message-ID: <CABFfbXt0OPDO18v3Hn15pHd6sxnX85S2M3GFTtBsUFuj6HYx=Q@mail.gmail.com>

On Tue, Apr 24, 2018 at 7:26 AM, Joris Meys <Joris.Meys at ugent.be> wrote:
>
> Dear all,
>
> to my astonishment data.table cannot be installed on R 3.5 Windows. When
> checking the package page, the Windows binary is available for download.


The package check page for data.table shows that is currently failing
CMD check. As a precaution, CRAN does not publish binaries for
packages that do not pass check, so I think this is why it seems
unavailable.


From jorismeys at gmail.com  Tue Apr 24 14:31:32 2018
From: jorismeys at gmail.com (Joris Meys)
Date: Tue, 24 Apr 2018 14:31:32 +0200
Subject: [Rd] data.table not available as win binary for R 3.5 yet?
Message-ID: <CAO1zAVaHjM6P=fa851tOPNrZ8vPUBC7pk+N=0hq-3AWM_wm-Cg@mail.gmail.com>

 Dear all,

to my astonishment data.table cannot be installed on R 3.5 Windows. When
checking the package page, the Windows binary is available for download.
When checking the server however, I can't seem to find data.table. Also
install.packages() says the package is only available in source form and
may need compilation.

Compiling using Rtools 35 is no problem.

Is this merely an issue of CRAN still moving packages around and should I
have a bit more patience, or is there another reason why data.table
currently isn't installable using install.packages() as a binary on Windows?

PS: I obviously set my repos to the official CRAN server to rule out sync
issues between mirrors.

Cheers
Joris



-- 
Joris Meys
Statistical consultant

Department of Data Analysis and Mathematical Modelling
Ghent University
Coupure Links 653, B-9000 Gent (Belgium)
<https://maps.google.com/?q=Coupure+links+653,%C2%A0B-9000+Gent,%C2%A0Belgium&entry=gmail&source=g>

-----------
Biowiskundedagen 2017-2018
http://www.biowiskundedagen.ugent.be/

-------------------------------
Disclaimer : http://helpdesk.ugent.be/e-maildisclaimer.php

	[[alternative HTML version deleted]]


From jorismeys at gmail.com  Tue Apr 24 14:32:10 2018
From: jorismeys at gmail.com (Joris Meys)
Date: Tue, 24 Apr 2018 14:32:10 +0200
Subject: [Rd] data.table not available as win binary for R 3.5 yet?
In-Reply-To: <CAO1zAVaHjM6P=fa851tOPNrZ8vPUBC7pk+N=0hq-3AWM_wm-Cg@mail.gmail.com>
References: <CAO1zAVaHjM6P=fa851tOPNrZ8vPUBC7pk+N=0hq-3AWM_wm-Cg@mail.gmail.com>
Message-ID: <CAO1zAVYjY+gKp2qDLbkdkB+YuiR2esKFSTAGD6iXU-Wc4QzNZQ@mail.gmail.com>

My apologies for sending this twice, serious brainfart from my side.
Cheers
Joris

On Tue, Apr 24, 2018 at 2:31 PM, Joris Meys <jorismeys at gmail.com> wrote:

> Dear all,
>
> to my astonishment data.table cannot be installed on R 3.5 Windows. When
> checking the package page, the Windows binary is available for download.
> When checking the server however, I can't seem to find data.table. Also
> install.packages() says the package is only available in source form and
> may need compilation.
>
> Compiling using Rtools 35 is no problem.
>
> Is this merely an issue of CRAN still moving packages around and should I
> have a bit more patience, or is there another reason why data.table
> currently isn't installable using install.packages() as a binary on Windows?
>
> PS: I obviously set my repos to the official CRAN server to rule out sync
> issues between mirrors.
>
> Cheers
> Joris
>
>
>
> --
> Joris Meys
> Statistical consultant
>
> Department of Data Analysis and Mathematical Modelling
> Ghent University
> Coupure Links 653, B-9000 Gent (Belgium)
>
> <https://maps.google.com/?q=Coupure+links+653,%C2%A0B-9000+Gent,%C2%A0Belgium&entry=gmail&source=g>
>
> -----------
> Biowiskundedagen 2017-2018
> http://www.biowiskundedagen.ugent.be/
>
> -------------------------------
> Disclaimer : http://helpdesk.ugent.be/e-maildisclaimer.php
>



-- 
Joris Meys
Statistical consultant

Department of Data Analysis and Mathematical Modelling
Ghent University
Coupure Links 653, B-9000 Gent (Belgium)
<https://maps.google.com/?q=Coupure+links+653,%C2%A0B-9000+Gent,%C2%A0Belgium&entry=gmail&source=g>

-----------
Biowiskundedagen 2017-2018
http://www.biowiskundedagen.ugent.be/

-------------------------------
Disclaimer : http://helpdesk.ugent.be/e-maildisclaimer.php

	[[alternative HTML version deleted]]


From murdoch.duncan at gmail.com  Tue Apr 24 16:11:23 2018
From: murdoch.duncan at gmail.com (Duncan Murdoch)
Date: Tue, 24 Apr 2018 10:11:23 -0400
Subject: [Rd] R 3.5.0 fails its regression test suite on Linux/x86_64
In-Reply-To: <87po2paq75.fsf@write-only.cryp.to>
References: <874lk2dxgf.fsf@write-only.cryp.to>
 <1aecf60e-715d-1395-a6b7-dc18dd950de9@gmail.com>
 <87po2qcbel.fsf@write-only.cryp.to>
 <23261.59262.434274.776717@rob.eddelbuettel.com>
 <87fu3levk6.fsf@write-only.cryp.to>
 <2ff13586-68e7-3143-4893-8e18fd05e8ef@gmail.com>
 <87po2paq75.fsf@write-only.cryp.to>
Message-ID: <614da1be-ccf5-1a2a-1f83-906dc0b8e2c7@gmail.com>

On 24/04/2018 5:50 AM, Peter Simons wrote:
> Duncan Murdoch writes:
> 
>   >> ./configure --without-recommended-packages && make && make check
>   >
>   > So you're getting paid to do what you do, but you want the volunteers
>   > in R Core to do some work for you for free.
> 
> You are jumping to conclusions. Nobody pays me a single cent to package
> R for Nix; I do that purely as a hobby.

"Jumping to conclusions"?  You're the one who said "I have packaged free 
software for 20+ years for many different distributions,
and, in fact, I'm doing that professionally these days as an employee of 
one of the largest commercial Linux distributors."  Perhaps it wasn't 
your intention to imply that R was one of those packages, but that seems 
like a natural reading of your post.

> 
> 
>   >> If no-one wants to make those changes for whatever reason, then that's fine and
>   >> I'll just disable the test suite in NixOS to make the build succeed. I feel like
>   >> that would be a sub-optimal solution, though.
>   >
>   > I agree. You should spend some time working out a better one.
> 
> Well, you know, every so often, I reach out to people in a free software
> community to make them aware of some issue I've run into. On some
> occasions, members of those communities respond in a helpful and
> friendly manner that impresses me because these people are obviously
> thoughtful and issue-oriented and offer nuanced insight into the problem
> I've brought up, and then I feel like it would be fun to interact with
> those people to learn new stuff and maybe contribute something useful.
> That's the point about volunteering, right? People do it because they
> *enjoy it*, not because someone tells them to.

Your message sounded more like "you need to do this to make my job 
easier", rather than pointing out an issue with a goal of helping everyone.

> 
> So, you go ahead and have a very nice day, Duncan.

You too.  Here's a free gift:  https://xkcd.com/1984/.

Duncan Murdoch

> 
> Best regards,
> Peter
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>


From jorismeys at gmail.com  Tue Apr 24 17:17:09 2018
From: jorismeys at gmail.com (Joris Meys)
Date: Tue, 24 Apr 2018 17:17:09 +0200
Subject: [Rd] Compile issues when building survival package from source
Message-ID: <CAO1zAVYwQeHP3gkH052Fz1ZSTFCA8pjsCCZnnZrZMTBSX6erpw@mail.gmail.com>

Hi,

I wanted to send a small patch for survival documentation. So I forked,
patched and tried to build locally using R CMD build, but this failed with
errors about undefined references. Upon closer inspection, the undefined
references relate to files that give a warning when compiled through
install.packages("survival", type = "source") on Windows, for example:

D:/Rtools/mingw_32/bin/gcc  -I"D:/R/R-35~1.0/include" -DNDEBUG          -O3
-Wall  -std=gnu99 -mtune=generic -c agfit4.c -o agfit4.o
agfit4.c: In function 'agfit4':
agfit4.c:334:20: warning: 'dtime' may be used uninitialized in this
function [-Wmaybe-uninitialized]
                 if (tstop[p] < dtime) break; /* no more to add */

When I build using R CMD build however, the file agfit4.c is never even
built. That explains the undefined references, but I have no clue what the
difference is between both methods.

I suspected a newer version so I downloaded the source from CRAN manually
and then tried to install locally using

install.packages("E:/GITHUBS/JoFAM/survival_2.42-3.tar.gz", repos = NULL,
type = "source")

This gives me the following error:

Error in rawToChar(block[seq_len(ns)]) :
  embedded nul in string:
'\037?\b\0???Z\0\003?[?o\033G???????_B\036?????(?\0??l???@?oo?Y,?3M??yezF\022c???????gH?\217\003?=\034.B\020?\217????W_U?]???[\235?y??????'

Yet, when using install.packages() to install the source package of
survival, that error doesn't pop up. I've hurt my brains trying to come up
with an explanation, but I can't come up with something that makes sense.

Anyone an idea?

Cheers
Joris
-- 
Joris Meys
Statistical consultant

Department of Data Analysis and Mathematical Modelling
Ghent University
Coupure Links 653, B-9000 Gent (Belgium)
<https://maps.google.com/?q=Coupure+links+653,%C2%A0B-9000+Gent,%C2%A0Belgium&entry=gmail&source=g>

-----------
Biowiskundedagen 2017-2018
http://www.biowiskundedagen.ugent.be/

-------------------------------
Disclaimer : http://helpdesk.ugent.be/e-maildisclaimer.php

	[[alternative HTML version deleted]]


From mark.vanderloo at gmail.com  Tue Apr 24 17:37:12 2018
From: mark.vanderloo at gmail.com (Mark van der Loo)
Date: Tue, 24 Apr 2018 15:37:12 +0000
Subject: [Rd] data.table not available as win binary for R 3.5
In-Reply-To: <CABFfbXt0OPDO18v3Hn15pHd6sxnX85S2M3GFTtBsUFuj6HYx=Q@mail.gmail.com>
References: <CAO1zAVaz6VRYMcdfntUS7=Wgx-cbTYwkw9cnoGhpK+3VOPzWvQ@mail.gmail.com>
 <CABFfbXt0OPDO18v3Hn15pHd6sxnX85S2M3GFTtBsUFuj6HYx=Q@mail.gmail.com>
Message-ID: <CAOKDuOg66NmunQYTuDUPfkxozN7AWPQrKfNLf7-i6AAnQT41Fw@mail.gmail.com>

FWIW, I see that stringdist also doesn't pass R CMD check on r-release and
r-devel on Windows while Linux or r-oldrel on Windows gives no problems[1].


A quick scan of the release notes on Windows specific changes doesn't give
me a clue yet. I see the following possibly significant warning in the
output on Windows:

Warning: stack imbalance in '{', 39 then 40

I don't have a Windows PC handy where I can quickly reproduce this so if
anyone has solved similar problems it would be nice if they could be posted
here.

Best,
Mark

[1] https://cran.r-project.org/web/checks/check_results_stringdist.html

Op di 24 apr. 2018 om 14:11 schreef Jeroen Ooms <jeroenooms at gmail.com>:

> On Tue, Apr 24, 2018 at 7:26 AM, Joris Meys <Joris.Meys at ugent.be> wrote:
> >
> > Dear all,
> >
> > to my astonishment data.table cannot be installed on R 3.5 Windows. When
> > checking the package page, the Windows binary is available for download.
>
>
> The package check page for data.table shows that is currently failing
> CMD check. As a precaution, CRAN does not publish binaries for
> packages that do not pass check, so I think this is why it seems
> unavailable.
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>

	[[alternative HTML version deleted]]


From wdunlap at tibco.com  Tue Apr 24 22:52:34 2018
From: wdunlap at tibco.com (William Dunlap)
Date: Tue, 24 Apr 2018 13:52:34 -0700
Subject: [Rd] disappearing tempdir()
Message-ID: <CAF8bMcZ85tCthjeGrwuDhYfFYbc0a6WqejznMg3ZYqRHMg-rpw@mail.gmail.com>

Recent versions of Windows will remove empty directories from areas that
Windows considers places for temporary files.  It does not seem to matter
how old they are; empty directories are found and removred  c. once a day.
I haven't seen any documentation on this feature but I think you can turn
if off by disabling "Storage Sense" in Settings>System>Storage.

This means that R's tempdir() can easily disappear unless you put a file in
it.  I think an empty file will do the trick.  Perhaps R could do this when
it makes a new tempdir().  (When the file gets old, 30 days?, it will be
removed and then the empty directory holding it will be removed, but that
is better than the current situation.)

On a related note, R-3.5 has a new argument to tempdir: check=FALSE.  If
'check' is TRUE then tempdir() will make a new directory, with a new name,
in which to hold temporary files.  If it first tried to make a new
directory with the name of the previous tempdir() then things like fix(),
which cache the name of a file in tempdir(), will continue to work.  Is the
plan to make check=TRUE the default in tempdir(), or perhaps have
tempfile() call tempdir(check=TRUE)?  Then we would not have problems like

> file.rename(tempdir(), paste0(tempdir(), "~")) # mimic Windows cleaner
[1] TRUE
> file.create(tempfile())
[1] FALSE
Warning message:
In file.create(tempfile()) :
  cannot create file '/tmp/RtmpHKpWnV/file67f416dcb511', reason 'No such
file or directory'


Bill Dunlap
TIBCO Software
wdunlap tibco.com

	[[alternative HTML version deleted]]


From Kerry.Jackson at Ipsos.com  Wed Apr 25 21:55:56 2018
From: Kerry.Jackson at Ipsos.com (Kerry Jackson)
Date: Wed, 25 Apr 2018 19:55:56 +0000
Subject: [Rd] Bug in RScript.exe for 3.5.0
Message-ID: <DB6PR01MB3926EA58DA3B90E5AA27483FEB8F0@DB6PR01MB3926.eurprd01.prod.exchangelabs.com>

Hi R Developers,
I have found what I think is a bug in the RScript.exe in version 3.5.0 of R for Windows.
When I call Rscript.exe for Version 3.5 of R, it is unable to open the file if the file name or path has a space in it.
As an example of what happens, I saved 2 files with the code:
cat("What do you get when you multiply 6 * 9?")
as C:\foo bar.R and as C:\foo_bar.R
When I in a DOS command window try to run these using version 3.4.3 and 3.5:
C:\>"C:\Program Files\R\R-3.4.3\bin\x64\Rscript.exe" "C:\foo bar.R"
What do you get when you multiply 6 * 9?
C:\>"C:\Program Files\R\R-3.4.3\bin\x64\Rscript.exe" "C:\foo_bar.R"
What do you get when you multiply 6 * 9?
C:\>"C:\Program Files\R\R-3.5.0\bin\x64\Rscript.exe" "C:\foo bar.R"
Fatal error: cannot open file 'C:\foo': No such file or directory


C:\>"C:\Program Files\R\R-3.5.0\bin\x64\Rscript.exe" "C:\foo_bar.R"
What do you get when you multiply 6 * 9?
C:\>
When I try to run the file with a space in the name in version 3.5.0 of R, there is a fatal error saying there is no such file.


Kerry Jackson
Job title: Senior Account Manager, Ipsos Connect US RA Testing GMU
Phone: (203) 840-3443


	[[alternative HTML version deleted]]


From marius.hofert at uwaterloo.ca  Wed Apr 25 23:31:01 2018
From: marius.hofert at uwaterloo.ca (Marius Hofert)
Date: Wed, 25 Apr 2018 17:31:01 -0400
Subject: [Rd] extendrange(): suggested improvement
Message-ID: <CAM3-KjZpx8dXZBOvzY5iipny1WHVZ+S4wmG8tTYFMaj2Rn973A@mail.gmail.com>

Hi,

I often need to extend the plot range to the right, but not to the
left (for example: not below 0 so that log = "x" still works...). This
could be a handy improvement of extendrange():

--- utils.R 2015-08-25 18:18:20.000000000 -0400
+++ utils.R 2018-04-25 17:21:25.000000000 -0400
@@ -30,6 +30,6 @@
     ## Purpose: extend a range by a factor 'f' - on each side
     if(!missing(r) && length(r) != 2)
         stop("'r' must be a \"range\", hence of length 2")
-    r + c(-f,f) * diff(r)
-
+    if(length(f) == 1) f <- rep(f, 2)
+    r + c(-f[1], f[2]) * diff(r)
 }

Cheers,
M


From randy.cs.lai at gmail.com  Wed Apr 25 23:34:38 2018
From: randy.cs.lai at gmail.com (Randy Lai)
Date: Wed, 25 Apr 2018 17:34:38 -0400
Subject: [Rd] readLines() for non-blocking pipeline behaves differently in R
 3.5
Message-ID: <4357736e-8888-45e2-96e0-a2e5985d87da@Spark>

It seems that the behavior of readLines() in R 3.5 has changed for non-blocking pipeline.


Consider the following R script, which reads from STDIN line by line.
```
con <- file("stdin")
open(con, blocking = FALSE)

while (TRUE) {
? ? txt <- readLines(con, 1)
? ? if (length(txt) > 0) {
? ? ? ? cat(txt, "\n", file = stdout())
? ? }
? ? Sys.sleep(0.1)
}
close(con)

```

In R 3.4.4, it works as expected.

```
(randymbpro)-Desktop$ echo "abc\nfoo" | R --slave -f test.R
abc
foo
```

In R 3.5, only the first line is printed
```
(randymbpro)-Desktop$ echo "abc\nfoo" | R --slave -f test.R
abc
```

Is this change expected? ?If I change `blocking` to `TRUE` above, the above code would
work. But I need non-blocking connection in my use case of piping buffer from
another program.

Best,

R 3.5 @ macOS 10.13


Randy


	[[alternative HTML version deleted]]


From tomas.kalibera at gmail.com  Thu Apr 26 01:52:31 2018
From: tomas.kalibera at gmail.com (Tomas Kalibera)
Date: Thu, 26 Apr 2018 01:52:31 +0200
Subject: [Rd] Bug in RScript.exe for 3.5.0
In-Reply-To: <DB6PR01MB3926EA58DA3B90E5AA27483FEB8F0@DB6PR01MB3926.eurprd01.prod.exchangelabs.com>
References: <DB6PR01MB3926EA58DA3B90E5AA27483FEB8F0@DB6PR01MB3926.eurprd01.prod.exchangelabs.com>
Message-ID: <e63b9055-8912-6e84-b1e1-1d771312efb0@gmail.com>

Thanks for the report. A quick workaround before this gets fixed is to 
add an extra first argument that has no space in it, e.g.

Rscript --vanilla "foo bar.R"

The problem exists on all systems, not just Windows.

Best
Tomas

On 04/25/2018 09:55 PM, Kerry Jackson wrote:
> Hi R Developers,
> I have found what I think is a bug in the RScript.exe in version 3.5.0 of R for Windows.
> When I call Rscript.exe for Version 3.5 of R, it is unable to open the file if the file name or path has a space in it.
> As an example of what happens, I saved 2 files with the code:
> cat("What do you get when you multiply 6 * 9?")
> as C:\foo bar.R and as C:\foo_bar.R
> When I in a DOS command window try to run these using version 3.4.3 and 3.5:
> C:\>"C:\Program Files\R\R-3.4.3\bin\x64\Rscript.exe" "C:\foo bar.R"
> What do you get when you multiply 6 * 9?
> C:\>"C:\Program Files\R\R-3.4.3\bin\x64\Rscript.exe" "C:\foo_bar.R"
> What do you get when you multiply 6 * 9?
> C:\>"C:\Program Files\R\R-3.5.0\bin\x64\Rscript.exe" "C:\foo bar.R"
> Fatal error: cannot open file 'C:\foo': No such file or directory
>
>
> C:\>"C:\Program Files\R\R-3.5.0\bin\x64\Rscript.exe" "C:\foo_bar.R"
> What do you get when you multiply 6 * 9?
> C:\>
> When I try to run the file with a space in the name in version 3.5.0 of R, there is a fatal error saying there is no such file.
>
>
> Kerry Jackson
> Job title: Senior Account Manager, Ipsos Connect US RA Testing GMU
> Phone: (203) 840-3443
>
>
> 	[[alternative HTML version deleted]]
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From lawrence.michael at gene.com  Thu Apr 26 02:13:06 2018
From: lawrence.michael at gene.com (Michael Lawrence)
Date: Wed, 25 Apr 2018 17:13:06 -0700
Subject: [Rd] 
 readLines() for non-blocking pipeline behaves differently in R 3.5
In-Reply-To: <4357736e-8888-45e2-96e0-a2e5985d87da@Spark>
References: <4357736e-8888-45e2-96e0-a2e5985d87da@Spark>
Message-ID: <CAOQ5NyeXvoOmqVAf_9LMDqVt=kc_vjSf6OTW1PXVS8w+m4B+Rw@mail.gmail.com>

Probably related to the switch to buffered connections. I will look
into this soon.

On Wed, Apr 25, 2018 at 2:34 PM, Randy Lai <randy.cs.lai at gmail.com> wrote:
> It seems that the behavior of readLines() in R 3.5 has changed for non-blocking pipeline.
>
>
> Consider the following R script, which reads from STDIN line by line.
> ```
> con <- file("stdin")
> open(con, blocking = FALSE)
>
> while (TRUE) {
>     txt <- readLines(con, 1)
>     if (length(txt) > 0) {
>         cat(txt, "\n", file = stdout())
>     }
>     Sys.sleep(0.1)
> }
> close(con)
>
> ```
>
> In R 3.4.4, it works as expected.
>
> ```
> (randymbpro)-Desktop$ echo "abc\nfoo" | R --slave -f test.R
> abc
> foo
> ```
>
> In R 3.5, only the first line is printed
> ```
> (randymbpro)-Desktop$ echo "abc\nfoo" | R --slave -f test.R
> abc
> ```
>
> Is this change expected?  If I change `blocking` to `TRUE` above, the above code would
> work. But I need non-blocking connection in my use case of piping buffer from
> another program.
>
> Best,
>
> R 3.5 @ macOS 10.13
>
>
> Randy
>
>
>         [[alternative HTML version deleted]]
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>


From mikko.korpela at maanmittauslaitos.fi  Thu Apr 26 08:43:14 2018
From: mikko.korpela at maanmittauslaitos.fi (Korpela Mikko (MML))
Date: Thu, 26 Apr 2018 06:43:14 +0000
Subject: [Rd] 
 Possible bug in package installation when R_ICU_LOCALE is set
Message-ID: <a1ae947c811a40cd847ae23cee08916d@C119S212VM016.msvyvi.vaha.local>

(Belated) thanks for the confirmation, Ista. I just reported this issue on the R bug tracker:
https://bugs.r-project.org/bugzilla3/show_bug.cgi?id=17412

Best regards,

- Mikko

-----Alkuper?inen viesti-----
L?hett?j?: Ista Zahn [mailto:istazahn at gmail.com] 
L?hetetty: 7. helmikuuta 2018 17:05
Vastaanottaja: Korpela Mikko (MML)
Kopio: r-devel at r-project.org
Aihe: Re: [Rd] Possible bug in package installation when R_ICU_LOCALE is set

I can reproduce this on Linux, so it is not Windows-specific.

> sessionInfo()
R version 3.4.3 (2017-11-30)
Platform: x86_64-pc-linux-gnu (64-bit)
Running under: Arch Linux

Matrix products: default
BLAS/LAPACK: /usr/lib/libopenblas_haswellp-r0.2.20.so

locale:
 [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C
LC_TIME=en_US.UTF-8
 [4] LC_COLLATE=en_US.UTF-8     LC_MONETARY=en_US.UTF-8
LC_MESSAGES=en_US.UTF-8
 [7] LC_PAPER=en_US.UTF-8       LC_NAME=C
LC_ADDRESS=C
[10] LC_TELEPHONE=C             LC_MEASUREMENT=en_US.UTF-8
LC_IDENTIFICATION=C

attached base packages:
[1] stats     graphics  grDevices utils     datasets  methods   base

loaded via a namespace (and not attached):
[1] compiler_3.4.3 rmsfact_0.0.3  tools_3.4.3    cowsay_0.5.0   fortunes_1.5-4


On Wed, Feb 7, 2018 at 8:38 AM, Korpela Mikko (MML) <mikko.korpela at maanmittauslaitos.fi> wrote:
> On a Windows computer (other platforms not tested), installing a 
> package from source may fail if the environment variable R_ICU_LOCALE 
> is set, depending on the package and the locale.
>
> For example, after setting R_ICU_LOCALE to "fi_FI",
>
>   install.packages("seriation", type = "source")
>
> (package version 1.2-3) fails with the following error:
>
> ** preparing package for lazy loading
> Error in set_criterion_method("dist", "AR_events", criterion_ar_events,  :
>   could not find function "set_criterion_method"
> Error : unable to load R code in package 'seriation'
>
> Package "Epi" (version 2.24) fails similarly:
>
> ** preparing package for lazy loading
> Error in eval(exprs[i], envir) : object 'Relevel.default' not found 
> Error : unable to load R code in package 'Epi'
>
> Whether R_ICU_LOCALE is set before R is launched or during the session 
> doesn't matter: installation of these two example packages fails 
> either way. If R_ICU_LOCALE is unset, calling
>
>   icuSetCollate(locale = "fi_FI")
>
> is harmless. Browsing through the R manuals, I did not find warnings 
> against using R_ICU_LOCALE, or any indication why package installation 
> should fail with the variable being set. About the collation order of 
> R code files, "Writing R Extensions" says:
>
>> The default is to collate according to the 'C' locale.
>
> I interpret this (and the surrounding text) as a "promise" to package 
> developers that no matter what the end user does, the developer should 
> be able to rely on the collation order being 'C' unless the developer 
> defines another order.
>
>> sessionInfo()
> R version 3.4.3 Patched (2018-02-03 r74231)
> Platform: x86_64-w64-mingw32/x64 (64-bit) Running under: Windows 7 x64 
> (build 7601) Service Pack 1
>
> Matrix products: default
>
> locale:
> [1] LC_COLLATE=Finnish_Finland.1252  LC_CTYPE=Finnish_Finland.1252 [3] 
> LC_MONETARY=Finnish_Finland.1252 LC_NUMERIC=C [5] 
> LC_TIME=Finnish_Finland.1252
>
> attached base packages:
> [1] stats     graphics  grDevices utils     datasets  methods   base
>
> loaded via a namespace (and not attached):
> [1] compiler_3.4.3 tools_3.4.3
>
> --
> Mikko Korpela
> Chief Expert, Valuations
> National Land Survey of Finland
> Opastinsilta 12 C, FI-00520 Helsinki, Finland
> +358 50 462 6082
> www.maanmittauslaitos.fi
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel

From maechler at stat.math.ethz.ch  Thu Apr 26 10:55:30 2018
From: maechler at stat.math.ethz.ch (Martin Maechler)
Date: Thu, 26 Apr 2018 10:55:30 +0200
Subject: [Rd] extendrange(): suggested improvement
In-Reply-To: <CAM3-KjZpx8dXZBOvzY5iipny1WHVZ+S4wmG8tTYFMaj2Rn973A@mail.gmail.com>
References: <CAM3-KjZpx8dXZBOvzY5iipny1WHVZ+S4wmG8tTYFMaj2Rn973A@mail.gmail.com>
Message-ID: <23265.37890.320984.991515@stat.math.ethz.ch>

>>>>> Marius Hofert <marius.hofert at uwaterloo.ca>
>>>>>     on Wed, 25 Apr 2018 17:31:01 -0400 writes:

    > Hi,
    > I often need to extend the plot range to the right, but not to the
    > left (for example: not below 0 so that log = "x" still works...). This
    > could be a handy improvement of extendrange():

>     --- utils.R 2015-08-25 18:18:20.000000000 -0400
>     +++ utils.R 2018-04-25 17:21:25.000000000 -0400
>     @@ -30,6 +30,6 @@
> 	 ## Purpose: extend a range by a factor 'f' - on each side
> 	 if(!missing(r) && length(r) != 2)
> 	     stop("'r' must be a \"range\", hence of length 2")
>     -    r + c(-f,f) * diff(r)
>     -
>     +    if(length(f) == 1) f <- rep(f, 2)
>     +    r + c(-f[1], f[2]) * diff(r)
>      }


Yes, you are right and it's not the first time I've heard/seen
this wish.
Thank you for the suggestion!

I'd go for the more elegant (faster, at least in default case?) 
version


extendrange <- function(x, r = range(x, na.rm = TRUE), f = 0.05)
{
    ## Purpose: extend a range by a factor 'f' - on each side
    if(!missing(r) && length(r) != 2)
        stop("'r' must be a \"range\", hence of length 2")
    f <- if(length(f) == 1L) c(-f,f) else c(-f[1L], f[2L])
    r + f * diff(r)
}

PS:
/* I hope the tidy faction will at some time be convinced that
  using  if()  as a *function* in R is elegant and *the* R-way: 
  R is as functional a language as possible and hereby differs
  from C and similar languages ! 
*/

Martin Maechler
ETH Zurich


From sokol at insa-toulouse.fr  Thu Apr 26 11:31:47 2018
From: sokol at insa-toulouse.fr (Serguei Sokol)
Date: Thu, 26 Apr 2018 11:31:47 +0200
Subject: [Rd] mean(x) for ALTREP
Message-ID: <f54570f6-d2c6-e835-9d00-7a50cfda8a90@insa-toulouse.fr>

Hi,

By looking at a doc about ALTREP 
https://svn.r-project.org/R/branches/ALTREP/ALTREP.html (by the way 
congratulations for that and for R-3.5.0 in general), I was a little bit 
surprised by the following example:

 > x <- 1:1e10
 > system.time(print(mean(x)))
[1] 5e+09
 ?? user? system elapsed
 ?38.520?? 0.008? 38.531

Taking 38.520 s to calculate a mean value of an arithmetic sequence 
seemed a lot to me. It probably means that calculations are made by 
running into a for loop while in the case of arithmetic sequence a mean 
value can simply be calculated as (b+e)/2 where b and e are the begin 
and end value respectively. Is it planned to take benefit of ALTREP for 
functions like mean(), sum(), min(), max() and some others to avoid 
running a for loop wherever possible? It seems so natural to me but 
after all some implementation details preventing this can escape to me.

Best,
Serguei.


From tomas.kalibera at gmail.com  Thu Apr 26 12:33:56 2018
From: tomas.kalibera at gmail.com (Tomas Kalibera)
Date: Thu, 26 Apr 2018 12:33:56 +0200
Subject: [Rd] Bug in RScript.exe for 3.5.0
In-Reply-To: <e63b9055-8912-6e84-b1e1-1d771312efb0@gmail.com>
References: <DB6PR01MB3926EA58DA3B90E5AA27483FEB8F0@DB6PR01MB3926.eurprd01.prod.exchangelabs.com>
 <e63b9055-8912-6e84-b1e1-1d771312efb0@gmail.com>
Message-ID: <e8ab6b9d-f24c-d36e-3ed0-1b2c136cacab@gmail.com>

Fixed in R-devel. I will port to R-patched after more testing.
Tomas

On 04/26/2018 01:52 AM, Tomas Kalibera wrote:
> Thanks for the report. A quick workaround before this gets fixed is to 
> add an extra first argument that has no space in it, e.g.
>
> Rscript --vanilla "foo bar.R"
>
> The problem exists on all systems, not just Windows.
>
> Best
> Tomas
>
> On 04/25/2018 09:55 PM, Kerry Jackson wrote:
>> Hi R Developers,
>> I have found what I think is a bug in the RScript.exe in version 
>> 3.5.0 of R for Windows.
>> When I call Rscript.exe for Version 3.5 of R, it is unable to open 
>> the file if the file name or path has a space in it.
>> As an example of what happens, I saved 2 files with the code:
>> cat("What do you get when you multiply 6 * 9?")
>> as C:\foo bar.R and as C:\foo_bar.R
>> When I in a DOS command window try to run these using version 3.4.3 
>> and 3.5:
>> C:\>"C:\Program Files\R\R-3.4.3\bin\x64\Rscript.exe" "C:\foo bar.R"
>> What do you get when you multiply 6 * 9?
>> C:\>"C:\Program Files\R\R-3.4.3\bin\x64\Rscript.exe" "C:\foo_bar.R"
>> What do you get when you multiply 6 * 9?
>> C:\>"C:\Program Files\R\R-3.5.0\bin\x64\Rscript.exe" "C:\foo bar.R"
>> Fatal error: cannot open file 'C:\foo': No such file or directory
>>
>>
>> C:\>"C:\Program Files\R\R-3.5.0\bin\x64\Rscript.exe" "C:\foo_bar.R"
>> What do you get when you multiply 6 * 9?
>> C:\>
>> When I try to run the file with a space in the name in version 3.5.0 
>> of R, there is a fatal error saying there is no such file.
>>
>>
>> Kerry Jackson
>> Job title: Senior Account Manager, Ipsos Connect US RA Testing GMU
>> Phone: (203) 840-3443
>>
>>
>> ????[[alternative HTML version deleted]]
>>
>> ______________________________________________
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel
>
>


From tomas.kalibera at gmail.com  Thu Apr 26 14:34:59 2018
From: tomas.kalibera at gmail.com (Tomas Kalibera)
Date: Thu, 26 Apr 2018 14:34:59 +0200
Subject: [Rd] Bug in RScript.exe for 3.5.0
In-Reply-To: <DB6PR01MB39266295423C58A70BC9E6B1EB8E0@DB6PR01MB3926.eurprd01.prod.exchangelabs.com>
References: <DB6PR01MB3926EA58DA3B90E5AA27483FEB8F0@DB6PR01MB3926.eurprd01.prod.exchangelabs.com>
 <e63b9055-8912-6e84-b1e1-1d771312efb0@gmail.com>
 <e8ab6b9d-f24c-d36e-3ed0-1b2c136cacab@gmail.com>
 <DB6PR01MB39266295423C58A70BC9E6B1EB8E0@DB6PR01MB3926.eurprd01.prod.exchangelabs.com>
Message-ID: <e294f061-0747-9dbb-e30d-076ce7de6360@gmail.com>

On 04/26/2018 02:23 PM, Kerry Jackson wrote:
> Thanks Tomas.
>
> I confirm the quick workaround works for me in the DOS prompt, and when having a shortcut to RScript in SendTo, and when used in the Task Scheduler.  I have not tested the R-devel version, due to my unfamiliarity with installing from source code.
Thanks, Kerry.

There are binary builds for daily snapshots of R-devel 
(development/unstable version of R) at
https://cran.r-project.org/bin/windows/base/rdevel.html

At this time the build should already have the fix.

Best
Tomas

>
> -----Original Message-----
> From: Tomas Kalibera [mailto:tomas.kalibera at gmail.com]
> Sent: Thursday, April 26, 2018 6:34 AM
> To: Kerry Jackson <Kerry.Jackson at Ipsos.com>; r-devel at r-project.org
> Subject: Re: [Rd] Bug in RScript.exe for 3.5.0
>
> Fixed in R-devel. I will port to R-patched after more testing.
> Tomas
>
> On 04/26/2018 01:52 AM, Tomas Kalibera wrote:
>> Thanks for the report. A quick workaround before this gets fixed is to
>> add an extra first argument that has no space in it, e.g.
>>
>> Rscript --vanilla "foo bar.R"
>>
>> The problem exists on all systems, not just Windows.
>>
>> Best
>> Tomas
>>
>> On 04/25/2018 09:55 PM, Kerry Jackson wrote:
>>> Hi R Developers,
>>> I have found what I think is a bug in the RScript.exe in version
>>> 3.5.0 of R for Windows.
>>> When I call Rscript.exe for Version 3.5 of R, it is unable to open
>>> the file if the file name or path has a space in it.
>>> As an example of what happens, I saved 2 files with the code:
>>> cat("What do you get when you multiply 6 * 9?") as C:\foo bar.R and
>>> as C:\foo_bar.R When I in a DOS command window try to run these using
>>> version 3.4.3 and 3.5:
>>> C:\>"C:\Program Files\R\R-3.4.3\bin\x64\Rscript.exe" "C:\foo bar.R"
>>> What do you get when you multiply 6 * 9?
>>> C:\>"C:\Program Files\R\R-3.4.3\bin\x64\Rscript.exe" "C:\foo_bar.R"
>>> What do you get when you multiply 6 * 9?
>>> C:\>"C:\Program Files\R\R-3.5.0\bin\x64\Rscript.exe" "C:\foo bar.R"
>>> Fatal error: cannot open file 'C:\foo': No such file or directory
>>>
>>>
>>> C:\>"C:\Program Files\R\R-3.5.0\bin\x64\Rscript.exe" "C:\foo_bar.R"
>>> What do you get when you multiply 6 * 9?
>>> C:\>
>>> When I try to run the file with a space in the name in version 3.5.0
>>> of R, there is a fatal error saying there is no such file.
>>>
>>>
>>> Kerry Jackson
>>> Job title: Senior Account Manager, Ipsos Connect US RA Testing GMU
>>> Phone: (203) 840-3443
>>>
>>>
>>>  ????[[alternative HTML version deleted]]
>>>
>>> ______________________________________________
>>> R-devel at r-project.org mailing list
>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>


From Kerry.Jackson at Ipsos.com  Thu Apr 26 14:23:35 2018
From: Kerry.Jackson at Ipsos.com (Kerry Jackson)
Date: Thu, 26 Apr 2018 12:23:35 +0000
Subject: [Rd] Bug in RScript.exe for 3.5.0
In-Reply-To: <e8ab6b9d-f24c-d36e-3ed0-1b2c136cacab@gmail.com>
References: <DB6PR01MB3926EA58DA3B90E5AA27483FEB8F0@DB6PR01MB3926.eurprd01.prod.exchangelabs.com>
 <e63b9055-8912-6e84-b1e1-1d771312efb0@gmail.com>
 <e8ab6b9d-f24c-d36e-3ed0-1b2c136cacab@gmail.com>
Message-ID: <DB6PR01MB39266295423C58A70BC9E6B1EB8E0@DB6PR01MB3926.eurprd01.prod.exchangelabs.com>

Thanks Tomas.

I confirm the quick workaround works for me in the DOS prompt, and when having a shortcut to RScript in SendTo, and when used in the Task Scheduler.  I have not tested the R-devel version, due to my unfamiliarity with installing from source code.

-----Original Message-----
From: Tomas Kalibera [mailto:tomas.kalibera at gmail.com] 
Sent: Thursday, April 26, 2018 6:34 AM
To: Kerry Jackson <Kerry.Jackson at Ipsos.com>; r-devel at r-project.org
Subject: Re: [Rd] Bug in RScript.exe for 3.5.0

Fixed in R-devel. I will port to R-patched after more testing.
Tomas

On 04/26/2018 01:52 AM, Tomas Kalibera wrote:
> Thanks for the report. A quick workaround before this gets fixed is to 
> add an extra first argument that has no space in it, e.g.
>
> Rscript --vanilla "foo bar.R"
>
> The problem exists on all systems, not just Windows.
>
> Best
> Tomas
>
> On 04/25/2018 09:55 PM, Kerry Jackson wrote:
>> Hi R Developers,
>> I have found what I think is a bug in the RScript.exe in version
>> 3.5.0 of R for Windows.
>> When I call Rscript.exe for Version 3.5 of R, it is unable to open 
>> the file if the file name or path has a space in it.
>> As an example of what happens, I saved 2 files with the code:
>> cat("What do you get when you multiply 6 * 9?") as C:\foo bar.R and 
>> as C:\foo_bar.R When I in a DOS command window try to run these using 
>> version 3.4.3 and 3.5:
>> C:\>"C:\Program Files\R\R-3.4.3\bin\x64\Rscript.exe" "C:\foo bar.R"
>> What do you get when you multiply 6 * 9?
>> C:\>"C:\Program Files\R\R-3.4.3\bin\x64\Rscript.exe" "C:\foo_bar.R"
>> What do you get when you multiply 6 * 9?
>> C:\>"C:\Program Files\R\R-3.5.0\bin\x64\Rscript.exe" "C:\foo bar.R"
>> Fatal error: cannot open file 'C:\foo': No such file or directory
>>
>>
>> C:\>"C:\Program Files\R\R-3.5.0\bin\x64\Rscript.exe" "C:\foo_bar.R"
>> What do you get when you multiply 6 * 9?
>> C:\>
>> When I try to run the file with a space in the name in version 3.5.0 
>> of R, there is a fatal error saying there is no such file.
>>
>>
>> Kerry Jackson
>> Job title: Senior Account Manager, Ipsos Connect US RA Testing GMU
>> Phone: (203) 840-3443
>>
>>
>> ????[[alternative HTML version deleted]]
>>
>> ______________________________________________
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel
>
>


From Kerry.Jackson at Ipsos.com  Thu Apr 26 14:49:36 2018
From: Kerry.Jackson at Ipsos.com (Kerry Jackson)
Date: Thu, 26 Apr 2018 12:49:36 +0000
Subject: [Rd] Bug in RScript.exe for 3.5.0
In-Reply-To: <e294f061-0747-9dbb-e30d-076ce7de6360@gmail.com>
References: <DB6PR01MB3926EA58DA3B90E5AA27483FEB8F0@DB6PR01MB3926.eurprd01.prod.exchangelabs.com>
 <e63b9055-8912-6e84-b1e1-1d771312efb0@gmail.com>
 <e8ab6b9d-f24c-d36e-3ed0-1b2c136cacab@gmail.com>
 <DB6PR01MB39266295423C58A70BC9E6B1EB8E0@DB6PR01MB3926.eurprd01.prod.exchangelabs.com>
 <e294f061-0747-9dbb-e30d-076ce7de6360@gmail.com>
Message-ID: <DB6PR01MB3926A7659FCFD41DE000B7AEEB8E0@DB6PR01MB3926.eurprd01.prod.exchangelabs.com>

Hi Tomas,

Thanks for the info about the binary builds; I did install it, however the bug still seems to be there in the current build.  The workaround you suggested does work:

C:\>"C:\Program Files\R\R-devel\bin\x64\Rscript.exe" "C:\foo bar.R"
Fatal error: cannot open file 'C:\foo': No such file or directory


C:\>"C:\Program Files\R\R-devel\bin\x64\Rscript.exe" --vanilla "C:\foo bar.R"
What do you get when you multiply 6 * 9?
C:\>

-----Original Message-----
From: Tomas Kalibera [mailto:tomas.kalibera at gmail.com] 
Sent: Thursday, April 26, 2018 8:35 AM
To: Kerry Jackson <Kerry.Jackson at Ipsos.com>; r-devel at r-project.org
Subject: Re: [Rd] Bug in RScript.exe for 3.5.0

On 04/26/2018 02:23 PM, Kerry Jackson wrote:
> Thanks Tomas.
>
> I confirm the quick workaround works for me in the DOS prompt, and when having a shortcut to RScript in SendTo, and when used in the Task Scheduler.  I have not tested the R-devel version, due to my unfamiliarity with installing from source code.
Thanks, Kerry.

There are binary builds for daily snapshots of R-devel (development/unstable version of R) at https://cran.r-project.org/bin/windows/base/rdevel.html

At this time the build should already have the fix.

Best
Tomas

>
> -----Original Message-----
> From: Tomas Kalibera [mailto:tomas.kalibera at gmail.com]
> Sent: Thursday, April 26, 2018 6:34 AM
> To: Kerry Jackson <Kerry.Jackson at Ipsos.com>; r-devel at r-project.org
> Subject: Re: [Rd] Bug in RScript.exe for 3.5.0
>
> Fixed in R-devel. I will port to R-patched after more testing.
> Tomas
>
> On 04/26/2018 01:52 AM, Tomas Kalibera wrote:
>> Thanks for the report. A quick workaround before this gets fixed is 
>> to add an extra first argument that has no space in it, e.g.
>>
>> Rscript --vanilla "foo bar.R"
>>
>> The problem exists on all systems, not just Windows.
>>
>> Best
>> Tomas
>>
>> On 04/25/2018 09:55 PM, Kerry Jackson wrote:
>>> Hi R Developers,
>>> I have found what I think is a bug in the RScript.exe in version
>>> 3.5.0 of R for Windows.
>>> When I call Rscript.exe for Version 3.5 of R, it is unable to open 
>>> the file if the file name or path has a space in it.
>>> As an example of what happens, I saved 2 files with the code:
>>> cat("What do you get when you multiply 6 * 9?") as C:\foo bar.R and 
>>> as C:\foo_bar.R When I in a DOS command window try to run these 
>>> using version 3.4.3 and 3.5:
>>> C:\>"C:\Program Files\R\R-3.4.3\bin\x64\Rscript.exe" "C:\foo bar.R"
>>> What do you get when you multiply 6 * 9?
>>> C:\>"C:\Program Files\R\R-3.4.3\bin\x64\Rscript.exe" "C:\foo_bar.R"
>>> What do you get when you multiply 6 * 9?
>>> C:\>"C:\Program Files\R\R-3.5.0\bin\x64\Rscript.exe" "C:\foo bar.R"
>>> Fatal error: cannot open file 'C:\foo': No such file or directory
>>>
>>>
>>> C:\>"C:\Program Files\R\R-3.5.0\bin\x64\Rscript.exe" "C:\foo_bar.R"
>>> What do you get when you multiply 6 * 9?
>>> C:\>
>>> When I try to run the file with a space in the name in version 3.5.0 
>>> of R, there is a fatal error saying there is no such file.
>>>
>>>
>>> Kerry Jackson
>>> Job title: Senior Account Manager, Ipsos Connect US RA Testing GMU
>>> Phone: (203) 840-3443
>>>
>>>
>>>  ????[[alternative HTML version deleted]]
>>>
>>> ______________________________________________
>>> R-devel at r-project.org mailing list
>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>


From tomas.kalibera at gmail.com  Thu Apr 26 16:21:31 2018
From: tomas.kalibera at gmail.com (Tomas Kalibera)
Date: Thu, 26 Apr 2018 16:21:31 +0200
Subject: [Rd] Bug in RScript.exe for 3.5.0
In-Reply-To: <DB6PR01MB3926A7659FCFD41DE000B7AEEB8E0@DB6PR01MB3926.eurprd01.prod.exchangelabs.com>
References: <DB6PR01MB3926EA58DA3B90E5AA27483FEB8F0@DB6PR01MB3926.eurprd01.prod.exchangelabs.com>
 <e63b9055-8912-6e84-b1e1-1d771312efb0@gmail.com>
 <e8ab6b9d-f24c-d36e-3ed0-1b2c136cacab@gmail.com>
 <DB6PR01MB39266295423C58A70BC9E6B1EB8E0@DB6PR01MB3926.eurprd01.prod.exchangelabs.com>
 <e294f061-0747-9dbb-e30d-076ce7de6360@gmail.com>
 <DB6PR01MB3926A7659FCFD41DE000B7AEEB8E0@DB6PR01MB3926.eurprd01.prod.exchangelabs.com>
Message-ID: <7ea38abe-98b5-353b-3afc-9a379c3fa529@gmail.com>

Thanks, actually this is because the snapshot build is still one version 
behind (74642, the fix is in 74643). When I build my own installer and 
install it seems to be working fine. Sorry for the confusion,

Tomas

On 04/26/2018 02:49 PM, Kerry Jackson wrote:
> Hi Tomas,
>
> Thanks for the info about the binary builds; I did install it, however the bug still seems to be there in the current build.  The workaround you suggested does work:
>
> C:\>"C:\Program Files\R\R-devel\bin\x64\Rscript.exe" "C:\foo bar.R"
> Fatal error: cannot open file 'C:\foo': No such file or directory
>
>
> C:\>"C:\Program Files\R\R-devel\bin\x64\Rscript.exe" --vanilla "C:\foo bar.R"
> What do you get when you multiply 6 * 9?
> C:\>
>
> -----Original Message-----
> From: Tomas Kalibera [mailto:tomas.kalibera at gmail.com]
> Sent: Thursday, April 26, 2018 8:35 AM
> To: Kerry Jackson <Kerry.Jackson at Ipsos.com>; r-devel at r-project.org
> Subject: Re: [Rd] Bug in RScript.exe for 3.5.0
>
> On 04/26/2018 02:23 PM, Kerry Jackson wrote:
>> Thanks Tomas.
>>
>> I confirm the quick workaround works for me in the DOS prompt, and when having a shortcut to RScript in SendTo, and when used in the Task Scheduler.  I have not tested the R-devel version, due to my unfamiliarity with installing from source code.
> Thanks, Kerry.
>
> There are binary builds for daily snapshots of R-devel (development/unstable version of R) at https://cran.r-project.org/bin/windows/base/rdevel.html
>
> At this time the build should already have the fix.
>
> Best
> Tomas
>
>> -----Original Message-----
>> From: Tomas Kalibera [mailto:tomas.kalibera at gmail.com]
>> Sent: Thursday, April 26, 2018 6:34 AM
>> To: Kerry Jackson <Kerry.Jackson at Ipsos.com>; r-devel at r-project.org
>> Subject: Re: [Rd] Bug in RScript.exe for 3.5.0
>>
>> Fixed in R-devel. I will port to R-patched after more testing.
>> Tomas
>>
>> On 04/26/2018 01:52 AM, Tomas Kalibera wrote:
>>> Thanks for the report. A quick workaround before this gets fixed is
>>> to add an extra first argument that has no space in it, e.g.
>>>
>>> Rscript --vanilla "foo bar.R"
>>>
>>> The problem exists on all systems, not just Windows.
>>>
>>> Best
>>> Tomas
>>>
>>> On 04/25/2018 09:55 PM, Kerry Jackson wrote:
>>>> Hi R Developers,
>>>> I have found what I think is a bug in the RScript.exe in version
>>>> 3.5.0 of R for Windows.
>>>> When I call Rscript.exe for Version 3.5 of R, it is unable to open
>>>> the file if the file name or path has a space in it.
>>>> As an example of what happens, I saved 2 files with the code:
>>>> cat("What do you get when you multiply 6 * 9?") as C:\foo bar.R and
>>>> as C:\foo_bar.R When I in a DOS command window try to run these
>>>> using version 3.4.3 and 3.5:
>>>> C:\>"C:\Program Files\R\R-3.4.3\bin\x64\Rscript.exe" "C:\foo bar.R"
>>>> What do you get when you multiply 6 * 9?
>>>> C:\>"C:\Program Files\R\R-3.4.3\bin\x64\Rscript.exe" "C:\foo_bar.R"
>>>> What do you get when you multiply 6 * 9?
>>>> C:\>"C:\Program Files\R\R-3.5.0\bin\x64\Rscript.exe" "C:\foo bar.R"
>>>> Fatal error: cannot open file 'C:\foo': No such file or directory
>>>>
>>>>
>>>> C:\>"C:\Program Files\R\R-3.5.0\bin\x64\Rscript.exe" "C:\foo_bar.R"
>>>> What do you get when you multiply 6 * 9?
>>>> C:\>
>>>> When I try to run the file with a space in the name in version 3.5.0
>>>> of R, there is a fatal error saying there is no such file.
>>>>
>>>>
>>>> Kerry Jackson
>>>> Job title: Senior Account Manager, Ipsos Connect US RA Testing GMU
>>>> Phone: (203) 840-3443
>>>>
>>>>
>>>>   ????[[alternative HTML version deleted]]
>>>>
>>>> ______________________________________________
>>>> R-devel at r-project.org mailing list
>>>> https://stat.ethz.ch/mailman/listinfo/r-devel


From becker.gabe at gene.com  Thu Apr 26 17:34:37 2018
From: becker.gabe at gene.com (Gabe Becker)
Date: Thu, 26 Apr 2018 08:34:37 -0700
Subject: [Rd] mean(x) for ALTREP
In-Reply-To: <f54570f6-d2c6-e835-9d00-7a50cfda8a90@insa-toulouse.fr>
References: <f54570f6-d2c6-e835-9d00-7a50cfda8a90@insa-toulouse.fr>
Message-ID: <CAMFmJs=WrJ8LCZN-qi2vhz0vBus0ZBkf=iJe2EDLjp7Puxb-xg@mail.gmail.com>

Serguei,

The R 3.5.0 release includes the fundamental ALTREP framework but does not
include many 'hooks' within R's source code to make use of methods on the
ALTREP custom vector classes. I have implemented a fair number, including
for mean() to use the custom Sum method when available, in the ALTREP
branch but unfortunately we did not have time to test and port them to the
trunk in time for this release. The current plan, as I understand it, is
that we will continue to develop and test these, and other hooks, and then
when ready they will be ported into trunk/R-devel over the course this
current development cycle for inclusion in the next release of R.

My hope is that the end-user benefits of ALTREP will really show through
much more in future releases, but for now, things like mean will will
behave as they always have from a user perspective.

Best,
~G


On Thu, Apr 26, 2018 at 2:31 AM, Serguei Sokol <sokol at insa-toulouse.fr>
wrote:

> Hi,
>
> By looking at a doc about ALTREP https://svn.r-project.org/R/br
> anches/ALTREP/ALTREP.html (by the way congratulations for that and for
> R-3.5.0 in general), I was a little bit surprised by the following example:
>
> > x <- 1:1e10
> > system.time(print(mean(x)))
> [1] 5e+09
>    user  system elapsed
>  38.520   0.008  38.531
>
> Taking 38.520 s to calculate a mean value of an arithmetic sequence seemed
> a lot to me. It probably means that calculations are made by running into a
> for loop while in the case of arithmetic sequence a mean value can simply
> be calculated as (b+e)/2 where b and e are the begin and end value
> respectively. Is it planned to take benefit of ALTREP for functions like
> mean(), sum(), min(), max() and some others to avoid running a for loop
> wherever possible? It seems so natural to me but after all some
> implementation details preventing this can escape to me.
>
> Best,
> Serguei.
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>
>


-- 
Gabriel Becker, Ph.D
Scientist
Bioinformatics and Computational Biology
Genentech Research

	[[alternative HTML version deleted]]


From lawrence.michael at gene.com  Thu Apr 26 20:21:44 2018
From: lawrence.michael at gene.com (Michael Lawrence)
Date: Thu, 26 Apr 2018 11:21:44 -0700
Subject: [Rd] 
 readLines() for non-blocking pipeline behaves differently in R 3.5
In-Reply-To: <CAOQ5NyeXvoOmqVAf_9LMDqVt=kc_vjSf6OTW1PXVS8w+m4B+Rw@mail.gmail.com>
References: <4357736e-8888-45e2-96e0-a2e5985d87da@Spark>
 <CAOQ5NyeXvoOmqVAf_9LMDqVt=kc_vjSf6OTW1PXVS8w+m4B+Rw@mail.gmail.com>
Message-ID: <CAOQ5NyeiH6Kk=a8Jom+iRJzBBXy0DrcpmM8wZnQ3VRZ8f9FwDg@mail.gmail.com>

The issue is that readLines() tries to seek (for reasons I don't
understand) in the non-blocking case, but silently fails for "stdin"
since it's a stream. This confused the buffering logic. The fix is to
mark "stdin" as unable to seek, but I do wonder why readLines() is
seeking in the first place.

Anyway, I'll get this into patched ASAP. Thanks for the report.

Michael


On Wed, Apr 25, 2018 at 5:13 PM, Michael Lawrence <michafla at gene.com> wrote:
> Probably related to the switch to buffered connections. I will look
> into this soon.
>
> On Wed, Apr 25, 2018 at 2:34 PM, Randy Lai <randy.cs.lai at gmail.com> wrote:
>> It seems that the behavior of readLines() in R 3.5 has changed for non-blocking pipeline.
>>
>>
>> Consider the following R script, which reads from STDIN line by line.
>> ```
>> con <- file("stdin")
>> open(con, blocking = FALSE)
>>
>> while (TRUE) {
>>     txt <- readLines(con, 1)
>>     if (length(txt) > 0) {
>>         cat(txt, "\n", file = stdout())
>>     }
>>     Sys.sleep(0.1)
>> }
>> close(con)
>>
>> ```
>>
>> In R 3.4.4, it works as expected.
>>
>> ```
>> (randymbpro)-Desktop$ echo "abc\nfoo" | R --slave -f test.R
>> abc
>> foo
>> ```
>>
>> In R 3.5, only the first line is printed
>> ```
>> (randymbpro)-Desktop$ echo "abc\nfoo" | R --slave -f test.R
>> abc
>> ```
>>
>> Is this change expected?  If I change `blocking` to `TRUE` above, the above code would
>> work. But I need non-blocking connection in my use case of piping buffer from
>> another program.
>>
>> Best,
>>
>> R 3.5 @ macOS 10.13
>>
>>
>> Randy
>>
>>
>>         [[alternative HTML version deleted]]
>>
>> ______________________________________________
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>


From csardi.gabor at gmail.com  Thu Apr 26 20:35:00 2018
From: csardi.gabor at gmail.com (=?UTF-8?B?R8OhYm9yIENzw6FyZGk=?=)
Date: Thu, 26 Apr 2018 19:35:00 +0100
Subject: [Rd] 
 readLines() for non-blocking pipeline behaves differently in R 3.5
In-Reply-To: <CAOQ5NyeiH6Kk=a8Jom+iRJzBBXy0DrcpmM8wZnQ3VRZ8f9FwDg@mail.gmail.com>
References: <4357736e-8888-45e2-96e0-a2e5985d87da@Spark>
 <CAOQ5NyeXvoOmqVAf_9LMDqVt=kc_vjSf6OTW1PXVS8w+m4B+Rw@mail.gmail.com>
 <CAOQ5NyeiH6Kk=a8Jom+iRJzBBXy0DrcpmM8wZnQ3VRZ8f9FwDg@mail.gmail.com>
Message-ID: <CABtg=Kn=vkaqvuGuaLG-Fjp9dXFAALFAnKzejvZ-miDhQh3QAw@mail.gmail.com>

I suspect the reason for the seek is this:

cat("1\n", file = "foobar")
f  <- file("foobar", blocking = FALSE, open = "r")
readLines(f)
#> [1] "1"

cat("2\n", file = "foobar", append = TRUE)
readLines(f)
#> [1] "2"

cat("3\n", file = "foobar", append = TRUE)
readLines(f)
#> [1] "3"

I.e. R can emulate a file connection with non-blocking reads.
AFAICT there is no such thing, in Unix at least.
For this  emulation, it needs to seek to the "current" position.

Gabor

On Thu, Apr 26, 2018 at 7:21 PM, Michael Lawrence
<lawrence.michael at gene.com> wrote:
> The issue is that readLines() tries to seek (for reasons I don't
> understand) in the non-blocking case, but silently fails for "stdin"
> since it's a stream. This confused the buffering logic. The fix is to
> mark "stdin" as unable to seek, but I do wonder why readLines() is
> seeking in the first place.
>
> Anyway, I'll get this into patched ASAP. Thanks for the report.
>
> Michael
>
>
> On Wed, Apr 25, 2018 at 5:13 PM, Michael Lawrence <michafla at gene.com> wrote:
>> Probably related to the switch to buffered connections. I will look
>> into this soon.
>>
>> On Wed, Apr 25, 2018 at 2:34 PM, Randy Lai <randy.cs.lai at gmail.com> wrote:
>>> It seems that the behavior of readLines() in R 3.5 has changed for non-blocking pipeline.
>>>
>>>
>>> Consider the following R script, which reads from STDIN line by line.
>>> ```
>>> con <- file("stdin")
>>> open(con, blocking = FALSE)
>>>
>>> while (TRUE) {
>>>     txt <- readLines(con, 1)
>>>     if (length(txt) > 0) {
>>>         cat(txt, "\n", file = stdout())
>>>     }
>>>     Sys.sleep(0.1)
>>> }
>>> close(con)
>>>
>>> ```
>>>
>>> In R 3.4.4, it works as expected.
>>>
>>> ```
>>> (randymbpro)-Desktop$ echo "abc\nfoo" | R --slave -f test.R
>>> abc
>>> foo
>>> ```
>>>
>>> In R 3.5, only the first line is printed
>>> ```
>>> (randymbpro)-Desktop$ echo "abc\nfoo" | R --slave -f test.R
>>> abc
>>> ```
>>>
>>> Is this change expected?  If I change `blocking` to `TRUE` above, the above code would
>>> work. But I need non-blocking connection in my use case of piping buffer from
>>> another program.
>>>
>>> Best,
>>>
>>> R 3.5 @ macOS 10.13
>>>
>>>
>>> Randy
>>>
>>>
>>>         [[alternative HTML version deleted]]
>>>
>>> ______________________________________________
>>> R-devel at r-project.org mailing list
>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>>
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From lawrence.michael at gene.com  Thu Apr 26 22:46:09 2018
From: lawrence.michael at gene.com (Michael Lawrence)
Date: Thu, 26 Apr 2018 13:46:09 -0700
Subject: [Rd] 
 readLines() for non-blocking pipeline behaves differently in R 3.5
In-Reply-To: <CABtg=Kn=vkaqvuGuaLG-Fjp9dXFAALFAnKzejvZ-miDhQh3QAw@mail.gmail.com>
References: <4357736e-8888-45e2-96e0-a2e5985d87da@Spark>
 <CAOQ5NyeXvoOmqVAf_9LMDqVt=kc_vjSf6OTW1PXVS8w+m4B+Rw@mail.gmail.com>
 <CAOQ5NyeiH6Kk=a8Jom+iRJzBBXy0DrcpmM8wZnQ3VRZ8f9FwDg@mail.gmail.com>
 <CABtg=Kn=vkaqvuGuaLG-Fjp9dXFAALFAnKzejvZ-miDhQh3QAw@mail.gmail.com>
Message-ID: <CAOQ5Nyf3pFM7zrUe23a9E4Fdmes4FvBf0E6aspFFyiBEEdnWaA@mail.gmail.com>

Thanks for the clear explanation. At first glance seeking to the
current position seemed like it would be a no-op, but obviously things
are more complicated under the hood.

On Thu, Apr 26, 2018 at 11:35 AM, G?bor Cs?rdi <csardi.gabor at gmail.com> wrote:
> I suspect the reason for the seek is this:
>
> cat("1\n", file = "foobar")
> f  <- file("foobar", blocking = FALSE, open = "r")
> readLines(f)
> #> [1] "1"
>
> cat("2\n", file = "foobar", append = TRUE)
> readLines(f)
> #> [1] "2"
>
> cat("3\n", file = "foobar", append = TRUE)
> readLines(f)
> #> [1] "3"
>
> I.e. R can emulate a file connection with non-blocking reads.
> AFAICT there is no such thing, in Unix at least.
> For this  emulation, it needs to seek to the "current" position.
>
> Gabor
>
> On Thu, Apr 26, 2018 at 7:21 PM, Michael Lawrence
> <lawrence.michael at gene.com> wrote:
>> The issue is that readLines() tries to seek (for reasons I don't
>> understand) in the non-blocking case, but silently fails for "stdin"
>> since it's a stream. This confused the buffering logic. The fix is to
>> mark "stdin" as unable to seek, but I do wonder why readLines() is
>> seeking in the first place.
>>
>> Anyway, I'll get this into patched ASAP. Thanks for the report.
>>
>> Michael
>>
>>
>> On Wed, Apr 25, 2018 at 5:13 PM, Michael Lawrence <michafla at gene.com> wrote:
>>> Probably related to the switch to buffered connections. I will look
>>> into this soon.
>>>
>>> On Wed, Apr 25, 2018 at 2:34 PM, Randy Lai <randy.cs.lai at gmail.com> wrote:
>>>> It seems that the behavior of readLines() in R 3.5 has changed for non-blocking pipeline.
>>>>
>>>>
>>>> Consider the following R script, which reads from STDIN line by line.
>>>> ```
>>>> con <- file("stdin")
>>>> open(con, blocking = FALSE)
>>>>
>>>> while (TRUE) {
>>>>     txt <- readLines(con, 1)
>>>>     if (length(txt) > 0) {
>>>>         cat(txt, "\n", file = stdout())
>>>>     }
>>>>     Sys.sleep(0.1)
>>>> }
>>>> close(con)
>>>>
>>>> ```
>>>>
>>>> In R 3.4.4, it works as expected.
>>>>
>>>> ```
>>>> (randymbpro)-Desktop$ echo "abc\nfoo" | R --slave -f test.R
>>>> abc
>>>> foo
>>>> ```
>>>>
>>>> In R 3.5, only the first line is printed
>>>> ```
>>>> (randymbpro)-Desktop$ echo "abc\nfoo" | R --slave -f test.R
>>>> abc
>>>> ```
>>>>
>>>> Is this change expected?  If I change `blocking` to `TRUE` above, the above code would
>>>> work. But I need non-blocking connection in my use case of piping buffer from
>>>> another program.
>>>>
>>>> Best,
>>>>
>>>> R 3.5 @ macOS 10.13
>>>>
>>>>
>>>> Randy
>>>>
>>>>
>>>>         [[alternative HTML version deleted]]
>>>>
>>>> ______________________________________________
>>>> R-devel at r-project.org mailing list
>>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>>>
>>
>> ______________________________________________
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel
>


From randy.cs.lai at gmail.com  Fri Apr 27 01:25:14 2018
From: randy.cs.lai at gmail.com (Randy Lai)
Date: Thu, 26 Apr 2018 19:25:14 -0400
Subject: [Rd] embeded R application on Windows prints broken character.
Message-ID: <34362763-1753-45cf-b627-c4e8a42e93eb@Spark>

The issue was reported to me for?https://github.com/randy3k/rtichoke/issues/50
which is a python program which embeds R and provides a interface to R.

With R 3.5,?for reason which i don't understand, when I typed `"a"` in the console
STDOUT got `"\x02\xff\xfea\x03\xff\xfe"`?with the extra escaped characters.

I notice that `\x02\xff\xfe` and `\x03\xff\xfe` are encoding related byte marks.
A clear solution is to filter the escaped characters, but I want to understand what
changes are causing it happens. It didn?t happen for R 3.4.


Randy



	[[alternative HTML version deleted]]


From dwinsemius at comcast.net  Fri Apr 27 03:51:36 2018
From: dwinsemius at comcast.net (David Winsemius)
Date: Thu, 26 Apr 2018 18:51:36 -0700
Subject: [Rd] embeded R application on Windows prints broken character.
In-Reply-To: <34362763-1753-45cf-b627-c4e8a42e93eb@Spark>
References: <34362763-1753-45cf-b627-c4e8a42e93eb@Spark>
Message-ID: <8B9F15E6-F7BD-49F0-89BC-E64C8C36A42C@comcast.net>


> On Apr 26, 2018, at 4:25 PM, Randy Lai <randy.cs.lai at gmail.com> wrote:
> 
> The issue was reported to me for https://github.com/randy3k/rtichoke/issues/50
> which is a python program which embeds R and provides a interface to R.
> 
> With R 3.5, for reason which i don't understand, when I typed `"a"` in the console
> STDOUT got `"\x02\xff\xfea\x03\xff\xfe"` with the extra escaped characters.
> 
> I notice that `\x02\xff\xfe` and `\x03\xff\xfe` are encoding related byte marks.
> A clear solution is to filter the escaped characters, but I want to understand what
> changes are causing it happens. It didn?t happen for R 3.4.

The maintainer (randy3k, oh that's you) of that python package has apparently fixed it:

https://github.com/randy3k/rtichoke/commit/4e29747c47f03381b319665943e290f17fd7914f



> Randy
> 
> 	[[alternative HTML version deleted]]
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel

David Winsemius
Alameda, CA, USA

'Any technology distinguishable from magic is insufficiently advanced.'   -Gehm's Corollary to Clarke's Third Law


From Kerry.Jackson at Ipsos.com  Fri Apr 27 14:03:40 2018
From: Kerry.Jackson at Ipsos.com (Kerry Jackson)
Date: Fri, 27 Apr 2018 12:03:40 +0000
Subject: [Rd] Bug in RScript.exe for 3.5.0
In-Reply-To: <7ea38abe-98b5-353b-3afc-9a379c3fa529@gmail.com>
References: <DB6PR01MB3926EA58DA3B90E5AA27483FEB8F0@DB6PR01MB3926.eurprd01.prod.exchangelabs.com>
 <e63b9055-8912-6e84-b1e1-1d771312efb0@gmail.com>
 <e8ab6b9d-f24c-d36e-3ed0-1b2c136cacab@gmail.com>
 <DB6PR01MB39266295423C58A70BC9E6B1EB8E0@DB6PR01MB3926.eurprd01.prod.exchangelabs.com>
 <e294f061-0747-9dbb-e30d-076ce7de6360@gmail.com>
 <DB6PR01MB3926A7659FCFD41DE000B7AEEB8E0@DB6PR01MB3926.eurprd01.prod.exchangelabs.com>
 <7ea38abe-98b5-353b-3afc-9a379c3fa529@gmail.com>
Message-ID: <DB6PR01MB3926AD0FAC8C59975E0778E2EB8D0@DB6PR01MB3926.eurprd01.prod.exchangelabs.com>

Thanks Tomas,

I confirm the R Under development (unstable) (2018-04-26 r74651) version works for Rscript when the file name has a space, and no arguments are specified.  

C:\>"C:\Program Files\R\R-devel\bin\x64\Rscript.exe" "C:\foo bar.R"
R Under development (unstable) (2018-04-26 r74651)
Platform: x86_64-w64-mingw32/x64 (64-bit)
Running under: Windows 7 x64 (build 7601) Service Pack 1

Matrix products: default

locale:
[1] LC_COLLATE=English_United States.1252
[2] LC_CTYPE=English_United States.1252
[3] LC_MONETARY=English_United States.1252
[4] LC_NUMERIC=C
[5] LC_TIME=English_United States.1252

attached base packages:
[1] stats     graphics  grDevices utils     datasets  methods   base

loaded via a namespace (and not attached):
[1] compiler_3.6.0

C:\>

-----Original Message-----
From: Tomas Kalibera [mailto:tomas.kalibera at gmail.com] 
Sent: Thursday, April 26, 2018 10:22 AM
To: Kerry Jackson <Kerry.Jackson at Ipsos.com>
Cc: r-devel at r-project.org
Subject: Re: [Rd] Bug in RScript.exe for 3.5.0

Thanks, actually this is because the snapshot build is still one version behind (74642, the fix is in 74643). When I build my own installer and install it seems to be working fine. Sorry for the confusion,

Tomas

On 04/26/2018 02:49 PM, Kerry Jackson wrote:
> Hi Tomas,
>
> Thanks for the info about the binary builds; I did install it, however the bug still seems to be there in the current build.  The workaround you suggested does work:
>
> C:\>"C:\Program Files\R\R-devel\bin\x64\Rscript.exe" "C:\foo bar.R"
> Fatal error: cannot open file 'C:\foo': No such file or directory
>
>
> C:\>"C:\Program Files\R\R-devel\bin\x64\Rscript.exe" --vanilla "C:\foo bar.R"
> What do you get when you multiply 6 * 9?
> C:\>
>
> -----Original Message-----
> From: Tomas Kalibera [mailto:tomas.kalibera at gmail.com]
> Sent: Thursday, April 26, 2018 8:35 AM
> To: Kerry Jackson <Kerry.Jackson at Ipsos.com>; r-devel at r-project.org
> Subject: Re: [Rd] Bug in RScript.exe for 3.5.0
>
> On 04/26/2018 02:23 PM, Kerry Jackson wrote:
>> Thanks Tomas.
>>
>> I confirm the quick workaround works for me in the DOS prompt, and when having a shortcut to RScript in SendTo, and when used in the Task Scheduler.  I have not tested the R-devel version, due to my unfamiliarity with installing from source code.
> Thanks, Kerry.
>
> There are binary builds for daily snapshots of R-devel 
> (development/unstable version of R) at 
> https://cran.r-project.org/bin/windows/base/rdevel.html
>
> At this time the build should already have the fix.
>
> Best
> Tomas
>
>> -----Original Message-----
>> From: Tomas Kalibera [mailto:tomas.kalibera at gmail.com]
>> Sent: Thursday, April 26, 2018 6:34 AM
>> To: Kerry Jackson <Kerry.Jackson at Ipsos.com>; r-devel at r-project.org
>> Subject: Re: [Rd] Bug in RScript.exe for 3.5.0
>>
>> Fixed in R-devel. I will port to R-patched after more testing.
>> Tomas
>>
>> On 04/26/2018 01:52 AM, Tomas Kalibera wrote:
>>> Thanks for the report. A quick workaround before this gets fixed is 
>>> to add an extra first argument that has no space in it, e.g.
>>>
>>> Rscript --vanilla "foo bar.R"
>>>
>>> The problem exists on all systems, not just Windows.
>>>
>>> Best
>>> Tomas
>>>
>>> On 04/25/2018 09:55 PM, Kerry Jackson wrote:
>>>> Hi R Developers,
>>>> I have found what I think is a bug in the RScript.exe in version
>>>> 3.5.0 of R for Windows.
>>>> When I call Rscript.exe for Version 3.5 of R, it is unable to open 
>>>> the file if the file name or path has a space in it.
>>>> As an example of what happens, I saved 2 files with the code:
>>>> cat("What do you get when you multiply 6 * 9?") as C:\foo bar.R and 
>>>> as C:\foo_bar.R When I in a DOS command window try to run these 
>>>> using version 3.4.3 and 3.5:
>>>> C:\>"C:\Program Files\R\R-3.4.3\bin\x64\Rscript.exe" "C:\foo bar.R"
>>>> What do you get when you multiply 6 * 9?
>>>> C:\>"C:\Program Files\R\R-3.4.3\bin\x64\Rscript.exe" "C:\foo_bar.R"
>>>> What do you get when you multiply 6 * 9?
>>>> C:\>"C:\Program Files\R\R-3.5.0\bin\x64\Rscript.exe" "C:\foo bar.R"
>>>> Fatal error: cannot open file 'C:\foo': No such file or directory
>>>>
>>>>
>>>> C:\>"C:\Program Files\R\R-3.5.0\bin\x64\Rscript.exe" "C:\foo_bar.R"
>>>> What do you get when you multiply 6 * 9?
>>>> C:\>
>>>> When I try to run the file with a space in the name in version 
>>>> 3.5.0 of R, there is a fatal error saying there is no such file.
>>>>
>>>>
>>>> Kerry Jackson
>>>> Job title: Senior Account Manager, Ipsos Connect US RA Testing GMU
>>>> Phone: (203) 840-3443
>>>>
>>>>
>>>>   ????[[alternative HTML version deleted]]
>>>>
>>>> ______________________________________________
>>>> R-devel at r-project.org mailing list
>>>> https://stat.ethz.ch/mailman/listinfo/r-devel



From h.wickham at gmail.com  Fri Apr 27 15:25:13 2018
From: h.wickham at gmail.com (Hadley Wickham)
Date: Fri, 27 Apr 2018 06:25:13 -0700
Subject: [Rd] predict.glm returns different results for the same model
Message-ID: <CABdHhvGNmn3ssrwnkqNOJAJYqYNJkjO6Du1B+7NvDZzC0Dgh6w@mail.gmail.com>

Hi all,

Very surprising (to me!) and mystifying result from predict.glm(): the
predictions vary depending on whether or not I use ns() or
splines::ns(). Reprex follows:

library(splines)

set.seed(12345)
dat <- data.frame(claim = rbinom(1000, 1, 0.5))
mns <- c(3.4, 3.6)
sds <- c(0.24, 0.35)
dat$wind <- exp(rnorm(nrow(dat), mean = mns[dat$claim + 1], sd =
sds[dat$claim + 1]))
dat <- dat[order(dat$wind), ]

m1 <- glm(claim ~ ns(wind, df = 5), data = dat, family = binomial)
m2 <- glm(claim ~ splines::ns(wind, df = 5), data = dat, family = binomial)

# The model coefficients are the same
unname(coef(m1))
#> [1]  0.5194712 -0.8687737 -0.6803954  4.0838947  2.3908674  4.1564128
unname(coef(m2))
#> [1]  0.5194712 -0.8687737 -0.6803954  4.0838947  2.3908674  4.1564128

# But the predictions are not!
newdf <- data.frame(wind = seq(min(dat$wind), max(dat$wind), length = 5))
unname(predict(m1, newdata = newdf))
#> [1] 0.51947119 0.03208719 2.82548847 3.90883496 4.06743266
unname(predict(m2, newdata = newdf))
#> [1]  0.5194712 -0.5666554 -0.1731268  2.8134844  3.9295814

Is this a bug?

(Motivating issue from this ggplot2 bug report:
https://github.com/tidyverse/ggplot2/issues/2426)

Thanks!

Hadley



-- 
http://hadley.nz


From avraham.adler at gmail.com  Fri Apr 27 16:12:40 2018
From: avraham.adler at gmail.com (Avraham Adler)
Date: Fri, 27 Apr 2018 14:12:40 +0000
Subject: [Rd] predict.glm returns different results for the same model
In-Reply-To: <CABdHhvGNmn3ssrwnkqNOJAJYqYNJkjO6Du1B+7NvDZzC0Dgh6w@mail.gmail.com>
References: <CABdHhvGNmn3ssrwnkqNOJAJYqYNJkjO6Du1B+7NvDZzC0Dgh6w@mail.gmail.com>
Message-ID: <CAL6gwn+Xb7wMOPo1MJajmiFqcVfiWghThZskuuZDFDxj5zCZmQ@mail.gmail.com>

Can?t copy from my computer as gmail is blocked at work but if it helps,
the ?predvars? attribute if the terms object is not the same.

Avi

On Fri, Apr 27, 2018 at 9:25 AM Hadley Wickham <h.wickham at gmail.com> wrote:

> Hi all,
>
> Very surprising (to me!) and mystifying result from predict.glm(): the
> predictions vary depending on whether or not I use ns() or
> splines::ns(). Reprex follows:
>
> library(splines)
>
> set.seed(12345)
> dat <- data.frame(claim = rbinom(1000, 1, 0.5))
> mns <- c(3.4, 3.6)
> sds <- c(0.24, 0.35)
> dat$wind <- exp(rnorm(nrow(dat), mean = mns[dat$claim + 1], sd =
> sds[dat$claim + 1]))
> dat <- dat[order(dat$wind), ]
>
> m1 <- glm(claim ~ ns(wind, df = 5), data = dat, family = binomial)
> m2 <- glm(claim ~ splines::ns(wind, df = 5), data = dat, family = binomial)
>
> # The model coefficients are the same
> unname(coef(m1))
> #> [1]  0.5194712 -0.8687737 -0.6803954  4.0838947  2.3908674  4.1564128
> unname(coef(m2))
> #> [1]  0.5194712 -0.8687737 -0.6803954  4.0838947  2.3908674  4.1564128
>
> # But the predictions are not!
> newdf <- data.frame(wind = seq(min(dat$wind), max(dat$wind), length = 5))
> unname(predict(m1, newdata = newdf))
> #> [1] 0.51947119 0.03208719 2.82548847 3.90883496 4.06743266
> unname(predict(m2, newdata = newdf))
> #> [1]  0.5194712 -0.5666554 -0.1731268  2.8134844  3.9295814
>
> Is this a bug?
>
> (Motivating issue from this ggplot2 bug report:
> https://github.com/tidyverse/ggplot2/issues/2426)
>
> Thanks!
>
> Hadley
>
>
>
> --
> http://hadley.nz
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>
-- 
Sent from Gmail Mobile

	[[alternative HTML version deleted]]


From jorismeys at gmail.com  Fri Apr 27 16:23:01 2018
From: jorismeys at gmail.com (Joris Meys)
Date: Fri, 27 Apr 2018 16:23:01 +0200
Subject: [Rd] predict.glm returns different results for the same model
In-Reply-To: <CABdHhvGNmn3ssrwnkqNOJAJYqYNJkjO6Du1B+7NvDZzC0Dgh6w@mail.gmail.com>
References: <CABdHhvGNmn3ssrwnkqNOJAJYqYNJkjO6Du1B+7NvDZzC0Dgh6w@mail.gmail.com>
Message-ID: <CAO1zAVacqu_o0jqTaijZNbs1F+LirS5OFmP=9iHh70GAequtFA@mail.gmail.com>

Hi Hadley,

This is related to how the terms are constructed. If you look at terms(m1)
versus terms(m2), you see that in the case of m1 the knots are added to the
attribute predvars. Contrary, when using splines::ns() this doesn't happen.
Compare:

mf <- model.frame(claim ~ ns(wind, df = 5), data = dat)
mt <-  terms(mf)

with

mf2 <- model.frame(claim ~ splines::ns(wind, df = 5), data = dat)
mt2 <-  terms(mf)

The culprit is actually in makepredictcall.ns, specifically:

    if (as.character(call)[1L] != "ns")
        return(call)

Obviously the call starting with predict::ns() will cause the function to
return the call unaltered. In the case of ns() it processes the knot
information. And that difference causes the difference in predictions.

So it is a bug imho. Especially since I don't understand the logic. The
variable has class 'ns', so makepredictcall() dispatches correctly. That
extra check in the function makepredictcall.ns seems unnecessary to me and
might be simply removed.

Cheers
Joris

On Fri, Apr 27, 2018 at 3:25 PM, Hadley Wickham <h.wickham at gmail.com> wrote:

> Hi all,
>
> Very surprising (to me!) and mystifying result from predict.glm(): the
> predictions vary depending on whether or not I use ns() or
> splines::ns(). Reprex follows:
>
> library(splines)
>
> set.seed(12345)
> dat <- data.frame(claim = rbinom(1000, 1, 0.5))
> mns <- c(3.4, 3.6)
> sds <- c(0.24, 0.35)
> dat$wind <- exp(rnorm(nrow(dat), mean = mns[dat$claim + 1], sd =
> sds[dat$claim + 1]))
> dat <- dat[order(dat$wind), ]
>
> m1 <- glm(claim ~ ns(wind, df = 5), data = dat, family = binomial)
> m2 <- glm(claim ~ splines::ns(wind, df = 5), data = dat, family = binomial)
>
> # The model coefficients are the same
> unname(coef(m1))
> #> [1]  0.5194712 -0.8687737 -0.6803954  4.0838947  2.3908674  4.1564128
> unname(coef(m2))
> #> [1]  0.5194712 -0.8687737 -0.6803954  4.0838947  2.3908674  4.1564128
>
> # But the predictions are not!
> newdf <- data.frame(wind = seq(min(dat$wind), max(dat$wind), length = 5))
> unname(predict(m1, newdata = newdf))
> #> [1] 0.51947119 0.03208719 2.82548847 3.90883496 4.06743266
> unname(predict(m2, newdata = newdf))
> #> [1]  0.5194712 -0.5666554 -0.1731268  2.8134844  3.9295814
>
> Is this a bug?
>
> (Motivating issue from this ggplot2 bug report:
> https://github.com/tidyverse/ggplot2/issues/2426)
>
> Thanks!
>
> Hadley
>
>
>
> --
> http://hadley.nz
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>



-- 
Joris Meys
Statistical consultant

Department of Data Analysis and Mathematical Modelling
Ghent University
Coupure Links 653, B-9000 Gent (Belgium)
<https://maps.google.com/?q=Coupure+links+653,%C2%A0B-9000+Gent,%C2%A0Belgium&entry=gmail&source=g>

-----------
Biowiskundedagen 2017-2018
http://www.biowiskundedagen.ugent.be/

-------------------------------
Disclaimer : http://helpdesk.ugent.be/e-maildisclaimer.php

	[[alternative HTML version deleted]]


From murdoch.duncan at gmail.com  Fri Apr 27 16:28:16 2018
From: murdoch.duncan at gmail.com (Duncan Murdoch)
Date: Fri, 27 Apr 2018 10:28:16 -0400
Subject: [Rd] predict.glm returns different results for the same model
In-Reply-To: <CABdHhvGNmn3ssrwnkqNOJAJYqYNJkjO6Du1B+7NvDZzC0Dgh6w@mail.gmail.com>
References: <CABdHhvGNmn3ssrwnkqNOJAJYqYNJkjO6Du1B+7NvDZzC0Dgh6w@mail.gmail.com>
Message-ID: <cf8ba3df-da8b-31b8-1324-ff48908507b1@gmail.com>

On 27/04/2018 9:25 AM, Hadley Wickham wrote:
> Hi all,
> 
> Very surprising (to me!) and mystifying result from predict.glm(): the
> predictions vary depending on whether or not I use ns() or
> splines::ns(). Reprex follows: >
> library(splines)
> 
> set.seed(12345)
> dat <- data.frame(claim = rbinom(1000, 1, 0.5))
> mns <- c(3.4, 3.6)
> sds <- c(0.24, 0.35)
> dat$wind <- exp(rnorm(nrow(dat), mean = mns[dat$claim + 1], sd =
> sds[dat$claim + 1]))
> dat <- dat[order(dat$wind), ]
> 
> m1 <- glm(claim ~ ns(wind, df = 5), data = dat, family = binomial)
> m2 <- glm(claim ~ splines::ns(wind, df = 5), data = dat, family = binomial)
> 
> # The model coefficients are the same
> unname(coef(m1))
> #> [1]  0.5194712 -0.8687737 -0.6803954  4.0838947  2.3908674  4.1564128
> unname(coef(m2))
> #> [1]  0.5194712 -0.8687737 -0.6803954  4.0838947  2.3908674  4.1564128
> 
> # But the predictions are not!
> newdf <- data.frame(wind = seq(min(dat$wind), max(dat$wind), length = 5))
> unname(predict(m1, newdata = newdf))
> #> [1] 0.51947119 0.03208719 2.82548847 3.90883496 4.06743266
> unname(predict(m2, newdata = newdf))
> #> [1]  0.5194712 -0.5666554 -0.1731268  2.8134844  3.9295814
> 
> Is this a bug?

The two objects m1 and m2 differ more than they should, so this looks 
like a problem in glm, not just in predict.glm.

 > attr(m1$terms, "predvars")
list(claim, ns(wind, knots = c(25.4756277492997, 30.2270250736796,
35.4093171222502, 43.038645381669), Boundary.knots = c(12.9423820390783,
108.071583734075), intercept = FALSE))

 > attr(m2$terms, "predvars")
list(claim, splines::ns(wind, df = 5))

This appears to be due to a bug in the splines package.  There, the 
function splines:::makepredictcall.ns looks like this:

makepredictcall.ns <- function(var, call)
{
     if(as.character(call)[1L] != "ns") return(call)
     at <- attributes(var)[c("knots", "Boundary.knots", "intercept")]
     xxx <- call[1L:2L]
     xxx[names(at)] <- at
     xxx
}

The test fails for m2, because as.character(call)[1L] is "splines::ns" 
instead of "ns". I'll see if I can work out a better test and submit a 
patch.

Duncan Murdoch

> 
> (Motivating issue from this ggplot2 bug report:
> https://github.com/tidyverse/ggplot2/issues/2426)
> 
> Thanks!
> 
> Hadley


From h.wickham at gmail.com  Fri Apr 27 16:36:12 2018
From: h.wickham at gmail.com (Hadley Wickham)
Date: Fri, 27 Apr 2018 07:36:12 -0700
Subject: [Rd] predict.glm returns different results for the same model
In-Reply-To: <cf8ba3df-da8b-31b8-1324-ff48908507b1@gmail.com>
References: <CABdHhvGNmn3ssrwnkqNOJAJYqYNJkjO6Du1B+7NvDZzC0Dgh6w@mail.gmail.com>
 <cf8ba3df-da8b-31b8-1324-ff48908507b1@gmail.com>
Message-ID: <CABdHhvFLZcgHrsx3qHsKUEg-EJNgYexkD4MaoDZ-XvVHQJtcqw@mail.gmail.com>

On Fri, Apr 27, 2018 at 7:28 AM, Duncan Murdoch
<murdoch.duncan at gmail.com> wrote:
> On 27/04/2018 9:25 AM, Hadley Wickham wrote:
>>
>> Hi all,
>>
>> Very surprising (to me!) and mystifying result from predict.glm(): the
>> predictions vary depending on whether or not I use ns() or
>> splines::ns(). Reprex follows: >
>> library(splines)
>>
>> set.seed(12345)
>> dat <- data.frame(claim = rbinom(1000, 1, 0.5))
>> mns <- c(3.4, 3.6)
>> sds <- c(0.24, 0.35)
>> dat$wind <- exp(rnorm(nrow(dat), mean = mns[dat$claim + 1], sd =
>> sds[dat$claim + 1]))
>> dat <- dat[order(dat$wind), ]
>>
>> m1 <- glm(claim ~ ns(wind, df = 5), data = dat, family = binomial)
>> m2 <- glm(claim ~ splines::ns(wind, df = 5), data = dat, family =
>> binomial)
>>
>> # The model coefficients are the same
>> unname(coef(m1))
>> #> [1]  0.5194712 -0.8687737 -0.6803954  4.0838947  2.3908674  4.1564128
>> unname(coef(m2))
>> #> [1]  0.5194712 -0.8687737 -0.6803954  4.0838947  2.3908674  4.1564128
>>
>> # But the predictions are not!
>> newdf <- data.frame(wind = seq(min(dat$wind), max(dat$wind), length = 5))
>> unname(predict(m1, newdata = newdf))
>> #> [1] 0.51947119 0.03208719 2.82548847 3.90883496 4.06743266
>> unname(predict(m2, newdata = newdf))
>> #> [1]  0.5194712 -0.5666554 -0.1731268  2.8134844  3.9295814
>>
>> Is this a bug?
>
>
> The two objects m1 and m2 differ more than they should, so this looks like a
> problem in glm, not just in predict.glm.
>
>> attr(m1$terms, "predvars")
> list(claim, ns(wind, knots = c(25.4756277492997, 30.2270250736796,
> 35.4093171222502, 43.038645381669), Boundary.knots = c(12.9423820390783,
> 108.071583734075), intercept = FALSE))
>
>> attr(m2$terms, "predvars")
> list(claim, splines::ns(wind, df = 5))
>
> This appears to be due to a bug in the splines package.  There, the function
> splines:::makepredictcall.ns looks like this:
>
> makepredictcall.ns <- function(var, call)
> {
>     if(as.character(call)[1L] != "ns") return(call)
>     at <- attributes(var)[c("knots", "Boundary.knots", "intercept")]
>     xxx <- call[1L:2L]
>     xxx[names(at)] <- at
>     xxx
> }
>
> The test fails for m2, because as.character(call)[1L] is "splines::ns"
> instead of "ns". I'll see if I can work out a better test and submit a
> patch.

Great, thanks!


-- 
http://hadley.nz


From maechler at stat.math.ethz.ch  Fri Apr 27 18:51:26 2018
From: maechler at stat.math.ethz.ch (Martin Maechler)
Date: Fri, 27 Apr 2018 18:51:26 +0200
Subject: [Rd] predict.glm returns different results for the same model
In-Reply-To: <cf8ba3df-da8b-31b8-1324-ff48908507b1@gmail.com>
References: <CABdHhvGNmn3ssrwnkqNOJAJYqYNJkjO6Du1B+7NvDZzC0Dgh6w@mail.gmail.com>
 <cf8ba3df-da8b-31b8-1324-ff48908507b1@gmail.com>
Message-ID: <23267.21774.389796.691352@stat.math.ethz.ch>

>>>>> Duncan Murdoch <murdoch.duncan at gmail.com>
>>>>>     on Fri, 27 Apr 2018 10:28:16 -0400 writes:

    > On 27/04/2018 9:25 AM, Hadley Wickham wrote:
    >> Hi all,
    >> 
    >> Very surprising (to me!) and mystifying result from predict.glm(): the
    >> predictions vary depending on whether or not I use ns() or
    >> splines::ns(). Reprex follows: >
    >> library(splines)
    >> 
    >> set.seed(12345)
    >> dat <- data.frame(claim = rbinom(1000, 1, 0.5))
    >> mns <- c(3.4, 3.6)
    >> sds <- c(0.24, 0.35)
    >> dat$wind <- exp(rnorm(nrow(dat), mean = mns[dat$claim + 1], sd =
    >> sds[dat$claim + 1]))
    >> dat <- dat[order(dat$wind), ]
    >> 
    >> m1 <- glm(claim ~ ns(wind, df = 5), data = dat, family = binomial)
    >> m2 <- glm(claim ~ splines::ns(wind, df = 5), data = dat, family = binomial)
    >> 
    >> # The model coefficients are the same
    >> unname(coef(m1))
    >> #> [1]  0.5194712 -0.8687737 -0.6803954  4.0838947  2.3908674  4.1564128
    >> unname(coef(m2))
    >> #> [1]  0.5194712 -0.8687737 -0.6803954  4.0838947  2.3908674  4.1564128
    >> 
    >> # But the predictions are not!
    >> newdf <- data.frame(wind = seq(min(dat$wind), max(dat$wind), length = 5))
    >> unname(predict(m1, newdata = newdf))
    >> #> [1] 0.51947119 0.03208719 2.82548847 3.90883496 4.06743266
    >> unname(predict(m2, newdata = newdf))
    >> #> [1]  0.5194712 -0.5666554 -0.1731268  2.8134844  3.9295814
    >> 
    >> Is this a bug?

    > The two objects m1 and m2 differ more than they should, so this looks 
    > like a problem in glm, not just in predict.glm.

    >> attr(m1$terms, "predvars")
    > list(claim, ns(wind, knots = c(25.4756277492997, 30.2270250736796,
    > 35.4093171222502, 43.038645381669), Boundary.knots = c(12.9423820390783,
    > 108.071583734075), intercept = FALSE))

    >> attr(m2$terms, "predvars")
    > list(claim, splines::ns(wind, df = 5))

    > This appears to be due to a bug in the splines package.  There, the 
    > function splines:::makepredictcall.ns looks like this:

    > makepredictcall.ns <- function(var, call)
    > {
    > if(as.character(call)[1L] != "ns") return(call)
    > at <- attributes(var)[c("knots", "Boundary.knots", "intercept")]
    > xxx <- call[1L:2L]
    > xxx[names(at)] <- at
    > xxx
    > }

    > The test fails for m2, because as.character(call)[1L] is "splines::ns" 
    > instead of "ns". I'll see if I can work out a better test and submit a 
    > patch.

    > Duncan Murdoch

Thank you, Duncan, for the good diagnosis and the patch!

I will deal with it.

Two things however (both *not* needing a new patch; I'll deal
    	   with it after dinner ;-)

1) I'd like to commit that ASAP, but do want to add a *minimal*
   Reprex for regression test, rather than the above, notably as I
   see that the only place our code calls  makepredictcall() is in
   model.frame.default(), so I thought this should not really be
   related to glm at all, and I was right.

2) Reading the help page ?makepredictcall
    --- yes, a good idea, even for experts, believe me, ((notably when it is from	 a base package, not produced from roxy.. ;-\)) ---
   reveals what I vaguely remembered:
   The function was introduced to fix a bug first encountered in
      lm(. ~  poly(.))

  and indeed:

  -> That help page actually contains an indirect closer to minimal reprex.
  -> I will also patch the  makepredictcall.poly() method.

  [ as I said: after dinner .. ;-)]

--
Martin


From csardi.gabor at gmail.com  Sat Apr 28 13:57:12 2018
From: csardi.gabor at gmail.com (=?UTF-8?B?R8OhYm9yIENzw6FyZGk=?=)
Date: Sat, 28 Apr 2018 11:57:12 +0000
Subject: [Rd] debugonce() functions are not considered as debugged
Message-ID: <CABtg=K=Q2k8Qr7uk=XQ2Qa76NWUcG0PmDMseZ37E2RZm4=XqDQ@mail.gmail.com>

debugonce() sets a different flag (RSTEP), and this is not queried by
isdebugged(), and it is also not unset by undebug().

Is this expected? If yes, is there a way to query and unset the RSTEP flag
from R code?

? f <- function() { }
? debugonce(f)
? isdebugged(f)
[1] FALSE

? undebug(f)
Warning message:
In undebug(f) : argument is not being debugged

? f()
debugging in: f()
debug at #1: {
}
Browse[2]>


From i at azurefx.name  Sat Apr 28 16:53:16 2018
From: i at azurefx.name (Azure)
Date: Sat, 28 Apr 2018 14:53:16 +0000
Subject: [Rd] [Bug report] Chinese characters are not handled correctly in
 Rterm for Windows
In-Reply-To: <5dd8df1b-50ae-bf59-a0dd-8af57feec541@gmail.com>
References: <PS1PR0302MB250778E72D430F253CBE11AFDDDF0@PS1PR0302MB2507.apcprd03.prod.outlook.com>,
 <5dd8df1b-50ae-bf59-a0dd-8af57feec541@gmail.com>
Message-ID: <SG2PR03MB286489FB462DEF379685AB35DD8C0@SG2PR03MB2864.apcprd03.prod.outlook.com>

Hi Tomas,

Sorry for the delayed response. I have tested the problem on the latest R-devel build (2018-04-27 r74651), and it still exists. RGui is always fine with Chinese characters, but some IDEs rely on the CLI version of R (e.g. Visual Studio Code with R plugin).

>Your example  print("ABC\u4f60\u597dDEF") is printing two Chinese characters, right?
Yes. U+4F60, U+597D or C4E3, BAC3 in CP936.

>Could you reproduce the problem with printing just one of the characters, say print("ABC\u4f60DEF") ?
Yes. The console output is pasted in [ https://paste.ubuntu.com/p/TYgZWhdgXK/ ] (to avoid gibberish in e-mail).
The Active Code Page is 936 before and after running Rterm.

>As a sanity check - does this display the correct characters in RGui?
Yes.

>If you take the sequence of the "fputc" commands you captured by the debugger, and create a trivial console application to just run them - would the characters display correctly in the same terminal from which you run R.exe?
Yes. I created an Win32 Console Application in VS [ https://paste.ubuntu.com/p/h3NFV6nQvs/ ], and all the characters were displayed correctly in two ways. The WriteConsoleA variant uses the current console CP settings, and it should behave like fputc. 

I guess the Rterm uses its own console I/O mechanism so the 2nd parameter of fputc is not stdout's handle. (I tried to read the source but unable to figure out how it works). The crash in mbcs_get_next, which is also mentioned in the previous post, may be related to this mechanism.

If you need further information, please let me know.

Thanks,
i at azurefx.name


Tomas Kalibera <tomas.kalibera at gmail.com> 2018/4/5 22:42
> 
>
>Thank you for the report and initial debugging. I am not sure what is going wrong, we may have to rely on your help to debug this (I do not have a system to reproduce on). A user-targeted advice would be to use RGui (Rgui.exe).
>
>Does the problem also exist in R-devel?
>https://cran.r-project.org/bin/windows/base/rdevel.html
>
>Your example  print("ABC\u4f60\u597dDEF") is printing two Chinese characters, right? The first one is C4E3 in CP936 (4F60 in Unicode) and the second one is BAC3 in CP936 (597D in Unicode)? Could you reproduce the problem with printing just one of the characters, say print("ABC\u4f60DEF") ?
>
>As a sanity check - does this display the correct characters in RGui? It should, and does on my system, as RGui uses Unicode internally. By correct I mean the characters shown e.g. here
>
>https://msdn.microsoft.com/en-us/library/cc194923.aspx
>https://msdn.microsoft.com/en-us/library/cc194920.aspx
>
>What is the output of "chcp" in the terminal, before you run R.exe? It may be different from what Sys.getlocale() gives in R.
>
>If you take the sequence of the "fputc" commands you captured by the debugger, and create a trivial console application to just run them - would the characters display correctly in the same terminal from which you run R.exe?
>
>Thanks
>Tomas
>
>
>

From xie at yihui.name  Sat Apr 28 19:23:30 2018
From: xie at yihui.name (Yihui Xie)
Date: Sat, 28 Apr 2018 12:23:30 -0500
Subject: [Rd] Bug in RScript.exe for 3.5.0
In-Reply-To: <DB6PR01MB3926AD0FAC8C59975E0778E2EB8D0@DB6PR01MB3926.eurprd01.prod.exchangelabs.com>
References: <DB6PR01MB3926EA58DA3B90E5AA27483FEB8F0@DB6PR01MB3926.eurprd01.prod.exchangelabs.com>
 <e63b9055-8912-6e84-b1e1-1d771312efb0@gmail.com>
 <e8ab6b9d-f24c-d36e-3ed0-1b2c136cacab@gmail.com>
 <DB6PR01MB39266295423C58A70BC9E6B1EB8E0@DB6PR01MB3926.eurprd01.prod.exchangelabs.com>
 <e294f061-0747-9dbb-e30d-076ce7de6360@gmail.com>
 <DB6PR01MB3926A7659FCFD41DE000B7AEEB8E0@DB6PR01MB3926.eurprd01.prod.exchangelabs.com>
 <7ea38abe-98b5-353b-3afc-9a379c3fa529@gmail.com>
 <DB6PR01MB3926AD0FAC8C59975E0778E2EB8D0@DB6PR01MB3926.eurprd01.prod.exchangelabs.com>
Message-ID: <CALFMOMCkcGyiJeDDbTKT89CEs8xyqKc2KP0ob7ThhMCb8_5yYw@mail.gmail.com>

It seems the fix has not been ported to the patched version of R on
Windows yet. I just tested R version 3.5.0 Patched (2018-04-27
r74667).

IMHO this bug is so bad that it is worth a new release R 3.5.1 before
it starts biting more users like this one
https://stackoverflow.com/q/50077412/559676. BTW, although the bug has
been fixed (https://github.com/wch/r-source/commit/c29f694), I think
it will be even better if a corresponding test is added at the same
time to prevent this from happening again in the future.

Thanks!

Yihui

On Fri, Apr 27, 2018 at 7:03 AM, Kerry Jackson <Kerry.Jackson at ipsos.com> wrote:
>
> Thanks Tomas,
>
> I confirm the R Under development (unstable) (2018-04-26 r74651) version works for Rscript when the file name has a space, and no arguments are specified.
>
> C:\>"C:\Program Files\R\R-devel\bin\x64\Rscript.exe" "C:\foo bar.R"
> R Under development (unstable) (2018-04-26 r74651)
> Platform: x86_64-w64-mingw32/x64 (64-bit)
> Running under: Windows 7 x64 (build 7601) Service Pack 1
>
> Matrix products: default
>
> locale:
> [1] LC_COLLATE=English_United States.1252
> [2] LC_CTYPE=English_United States.1252
> [3] LC_MONETARY=English_United States.1252
> [4] LC_NUMERIC=C
> [5] LC_TIME=English_United States.1252
>
> attached base packages:
> [1] stats     graphics  grDevices utils     datasets  methods   base
>
> loaded via a namespace (and not attached):
> [1] compiler_3.6.0
>
> C:\>
>
> -----Original Message-----
> From: Tomas Kalibera [mailto:tomas.kalibera at gmail.com]
> Sent: Thursday, April 26, 2018 10:22 AM
> To: Kerry Jackson <Kerry.Jackson at Ipsos.com>
> Cc: r-devel at r-project.org
> Subject: Re: [Rd] Bug in RScript.exe for 3.5.0
>
> Thanks, actually this is because the snapshot build is still one version behind (74642, the fix is in 74643). When I build my own installer and install it seems to be working fine. Sorry for the confusion,
>
> Tomas
>
> On 04/26/2018 02:49 PM, Kerry Jackson wrote:
> > Hi Tomas,
> >
> > Thanks for the info about the binary builds; I did install it, however the bug still seems to be there in the current build.  The workaround you suggested does work:
> >
> > C:\>"C:\Program Files\R\R-devel\bin\x64\Rscript.exe" "C:\foo bar.R"
> > Fatal error: cannot open file 'C:\foo': No such file or directory
> >
> >
> > C:\>"C:\Program Files\R\R-devel\bin\x64\Rscript.exe" --vanilla "C:\foo bar.R"
> > What do you get when you multiply 6 * 9?
> > C:\>
> >
> > -----Original Message-----
> > From: Tomas Kalibera [mailto:tomas.kalibera at gmail.com]
> > Sent: Thursday, April 26, 2018 8:35 AM
> > To: Kerry Jackson <Kerry.Jackson at Ipsos.com>; r-devel at r-project.org
> > Subject: Re: [Rd] Bug in RScript.exe for 3.5.0
> >
> > On 04/26/2018 02:23 PM, Kerry Jackson wrote:
> >> Thanks Tomas.
> >>
> >> I confirm the quick workaround works for me in the DOS prompt, and when having a shortcut to RScript in SendTo, and when used in the Task Scheduler.  I have not tested the R-devel version, due to my unfamiliarity with installing from source code.
> > Thanks, Kerry.
> >
> > There are binary builds for daily snapshots of R-devel
> > (development/unstable version of R) at
> > https://cran.r-project.org/bin/windows/base/rdevel.html
> >
> > At this time the build should already have the fix.
> >
> > Best
> > Tomas
> >
> >> -----Original Message-----
> >> From: Tomas Kalibera [mailto:tomas.kalibera at gmail.com]
> >> Sent: Thursday, April 26, 2018 6:34 AM
> >> To: Kerry Jackson <Kerry.Jackson at Ipsos.com>; r-devel at r-project.org
> >> Subject: Re: [Rd] Bug in RScript.exe for 3.5.0
> >>
> >> Fixed in R-devel. I will port to R-patched after more testing.
> >> Tomas
> >>
> >> On 04/26/2018 01:52 AM, Tomas Kalibera wrote:
> >>> Thanks for the report. A quick workaround before this gets fixed is
> >>> to add an extra first argument that has no space in it, e.g.
> >>>
> >>> Rscript --vanilla "foo bar.R"
> >>>
> >>> The problem exists on all systems, not just Windows.
> >>>
> >>> Best
> >>> Tomas
> >>>
> >>> On 04/25/2018 09:55 PM, Kerry Jackson wrote:
> >>>> Hi R Developers,
> >>>> I have found what I think is a bug in the RScript.exe in version
> >>>> 3.5.0 of R for Windows.
> >>>> When I call Rscript.exe for Version 3.5 of R, it is unable to open
> >>>> the file if the file name or path has a space in it.
> >>>> As an example of what happens, I saved 2 files with the code:
> >>>> cat("What do you get when you multiply 6 * 9?") as C:\foo bar.R and
> >>>> as C:\foo_bar.R When I in a DOS command window try to run these
> >>>> using version 3.4.3 and 3.5:
> >>>> C:\>"C:\Program Files\R\R-3.4.3\bin\x64\Rscript.exe" "C:\foo bar.R"
> >>>> What do you get when you multiply 6 * 9?
> >>>> C:\>"C:\Program Files\R\R-3.4.3\bin\x64\Rscript.exe" "C:\foo_bar.R"
> >>>> What do you get when you multiply 6 * 9?
> >>>> C:\>"C:\Program Files\R\R-3.5.0\bin\x64\Rscript.exe" "C:\foo bar.R"
> >>>> Fatal error: cannot open file 'C:\foo': No such file or directory
> >>>>
> >>>>
> >>>> C:\>"C:\Program Files\R\R-3.5.0\bin\x64\Rscript.exe" "C:\foo_bar.R"
> >>>> What do you get when you multiply 6 * 9?
> >>>> C:\>
> >>>> When I try to run the file with a space in the name in version
> >>>> 3.5.0 of R, there is a fatal error saying there is no such file.
> >>>>
> >>>>
> >>>> Kerry Jackson
> >>>> Job title: Senior Account Manager, Ipsos Connect US RA Testing GMU
> >>>> Phone: (203) 840-3443
> >>>>
> >>>>
> >>>>       [[alternative HTML version deleted]]
> >>>>
> >>>> ______________________________________________
> >>>> R-devel at r-project.org mailing list
> >>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From tomas.kalibera at gmail.com  Sat Apr 28 23:36:14 2018
From: tomas.kalibera at gmail.com (Tomas Kalibera)
Date: Sat, 28 Apr 2018 23:36:14 +0200
Subject: [Rd] Bug in RScript.exe for 3.5.0
In-Reply-To: <CALFMOMCkcGyiJeDDbTKT89CEs8xyqKc2KP0ob7ThhMCb8_5yYw@mail.gmail.com>
References: <DB6PR01MB3926EA58DA3B90E5AA27483FEB8F0@DB6PR01MB3926.eurprd01.prod.exchangelabs.com>
 <e63b9055-8912-6e84-b1e1-1d771312efb0@gmail.com>
 <e8ab6b9d-f24c-d36e-3ed0-1b2c136cacab@gmail.com>
 <DB6PR01MB39266295423C58A70BC9E6B1EB8E0@DB6PR01MB3926.eurprd01.prod.exchangelabs.com>
 <e294f061-0747-9dbb-e30d-076ce7de6360@gmail.com>
 <DB6PR01MB3926A7659FCFD41DE000B7AEEB8E0@DB6PR01MB3926.eurprd01.prod.exchangelabs.com>
 <7ea38abe-98b5-353b-3afc-9a379c3fa529@gmail.com>
 <DB6PR01MB3926AD0FAC8C59975E0778E2EB8D0@DB6PR01MB3926.eurprd01.prod.exchangelabs.com>
 <CALFMOMCkcGyiJeDDbTKT89CEs8xyqKc2KP0ob7ThhMCb8_5yYw@mail.gmail.com>
Message-ID: <da9ad8bc-d1b8-e3cc-8bf4-667ffd833ab9@gmail.com>


I don't have an opinion if this requires 3.5.1 to be released soon(er), 
but I have ported to R-patched now. The bug existed in R-devel for a 
year without being spotted, which is quite a long time - but it may be 
these bugs are hard to find before release, because people testing and 
using an unreleased version of R would not use space in file names. As 
apparently users of released versions do, we should do better about 
testing, perhaps test regularly with space in path names on a system 
that supports it. I think normal regression tests should not depend on 
such support.

In either case, I would recommend users to avoid space in file names to 
be safe. One known problem is that some packages will not build when 
RHOME has space in its name (on Windows, this is not a problem on drives 
with short file names supported, but that is not always the case) - CRAN 
is now checking the most common source of this issue, but there may be more.

Tomas


On 04/28/2018 07:23 PM, Yihui Xie wrote:
> It seems the fix has not been ported to the patched version of R on
> Windows yet. I just tested R version 3.5.0 Patched (2018-04-27
> r74667).
>
> IMHO this bug is so bad that it is worth a new release R 3.5.1 before
> it starts biting more users like this one
> https://stackoverflow.com/q/50077412/559676. BTW, although the bug has
> been fixed (https://github.com/wch/r-source/commit/c29f694), I think
> it will be even better if a corresponding test is added at the same
> time to prevent this from happening again in the future.
>
> Thanks!
>
> Yihui
>
> On Fri, Apr 27, 2018 at 7:03 AM, Kerry Jackson <Kerry.Jackson at ipsos.com> wrote:
>> Thanks Tomas,
>>
>> I confirm the R Under development (unstable) (2018-04-26 r74651) version works for Rscript when the file name has a space, and no arguments are specified.
>>
>> C:\>"C:\Program Files\R\R-devel\bin\x64\Rscript.exe" "C:\foo bar.R"
>> R Under development (unstable) (2018-04-26 r74651)
>> Platform: x86_64-w64-mingw32/x64 (64-bit)
>> Running under: Windows 7 x64 (build 7601) Service Pack 1
>>
>> Matrix products: default
>>
>> locale:
>> [1] LC_COLLATE=English_United States.1252
>> [2] LC_CTYPE=English_United States.1252
>> [3] LC_MONETARY=English_United States.1252
>> [4] LC_NUMERIC=C
>> [5] LC_TIME=English_United States.1252
>>
>> attached base packages:
>> [1] stats     graphics  grDevices utils     datasets  methods   base
>>
>> loaded via a namespace (and not attached):
>> [1] compiler_3.6.0
>>
>> C:\>
>>
>> -----Original Message-----
>> From: Tomas Kalibera [mailto:tomas.kalibera at gmail.com]
>> Sent: Thursday, April 26, 2018 10:22 AM
>> To: Kerry Jackson <Kerry.Jackson at Ipsos.com>
>> Cc: r-devel at r-project.org
>> Subject: Re: [Rd] Bug in RScript.exe for 3.5.0
>>
>> Thanks, actually this is because the snapshot build is still one version behind (74642, the fix is in 74643). When I build my own installer and install it seems to be working fine. Sorry for the confusion,
>>
>> Tomas
>>
>> On 04/26/2018 02:49 PM, Kerry Jackson wrote:
>>> Hi Tomas,
>>>
>>> Thanks for the info about the binary builds; I did install it, however the bug still seems to be there in the current build.  The workaround you suggested does work:
>>>
>>> C:\>"C:\Program Files\R\R-devel\bin\x64\Rscript.exe" "C:\foo bar.R"
>>> Fatal error: cannot open file 'C:\foo': No such file or directory
>>>
>>>
>>> C:\>"C:\Program Files\R\R-devel\bin\x64\Rscript.exe" --vanilla "C:\foo bar.R"
>>> What do you get when you multiply 6 * 9?
>>> C:\>
>>>
>>> -----Original Message-----
>>> From: Tomas Kalibera [mailto:tomas.kalibera at gmail.com]
>>> Sent: Thursday, April 26, 2018 8:35 AM
>>> To: Kerry Jackson <Kerry.Jackson at Ipsos.com>; r-devel at r-project.org
>>> Subject: Re: [Rd] Bug in RScript.exe for 3.5.0
>>>
>>> On 04/26/2018 02:23 PM, Kerry Jackson wrote:
>>>> Thanks Tomas.
>>>>
>>>> I confirm the quick workaround works for me in the DOS prompt, and when having a shortcut to RScript in SendTo, and when used in the Task Scheduler.  I have not tested the R-devel version, due to my unfamiliarity with installing from source code.
>>> Thanks, Kerry.
>>>
>>> There are binary builds for daily snapshots of R-devel
>>> (development/unstable version of R) at
>>> https://cran.r-project.org/bin/windows/base/rdevel.html
>>>
>>> At this time the build should already have the fix.
>>>
>>> Best
>>> Tomas
>>>
>>>> -----Original Message-----
>>>> From: Tomas Kalibera [mailto:tomas.kalibera at gmail.com]
>>>> Sent: Thursday, April 26, 2018 6:34 AM
>>>> To: Kerry Jackson <Kerry.Jackson at Ipsos.com>; r-devel at r-project.org
>>>> Subject: Re: [Rd] Bug in RScript.exe for 3.5.0
>>>>
>>>> Fixed in R-devel. I will port to R-patched after more testing.
>>>> Tomas
>>>>
>>>> On 04/26/2018 01:52 AM, Tomas Kalibera wrote:
>>>>> Thanks for the report. A quick workaround before this gets fixed is
>>>>> to add an extra first argument that has no space in it, e.g.
>>>>>
>>>>> Rscript --vanilla "foo bar.R"
>>>>>
>>>>> The problem exists on all systems, not just Windows.
>>>>>
>>>>> Best
>>>>> Tomas
>>>>>
>>>>> On 04/25/2018 09:55 PM, Kerry Jackson wrote:
>>>>>> Hi R Developers,
>>>>>> I have found what I think is a bug in the RScript.exe in version
>>>>>> 3.5.0 of R for Windows.
>>>>>> When I call Rscript.exe for Version 3.5 of R, it is unable to open
>>>>>> the file if the file name or path has a space in it.
>>>>>> As an example of what happens, I saved 2 files with the code:
>>>>>> cat("What do you get when you multiply 6 * 9?") as C:\foo bar.R and
>>>>>> as C:\foo_bar.R When I in a DOS command window try to run these
>>>>>> using version 3.4.3 and 3.5:
>>>>>> C:\>"C:\Program Files\R\R-3.4.3\bin\x64\Rscript.exe" "C:\foo bar.R"
>>>>>> What do you get when you multiply 6 * 9?
>>>>>> C:\>"C:\Program Files\R\R-3.4.3\bin\x64\Rscript.exe" "C:\foo_bar.R"
>>>>>> What do you get when you multiply 6 * 9?
>>>>>> C:\>"C:\Program Files\R\R-3.5.0\bin\x64\Rscript.exe" "C:\foo bar.R"
>>>>>> Fatal error: cannot open file 'C:\foo': No such file or directory
>>>>>>
>>>>>>
>>>>>> C:\>"C:\Program Files\R\R-3.5.0\bin\x64\Rscript.exe" "C:\foo_bar.R"
>>>>>> What do you get when you multiply 6 * 9?
>>>>>> C:\>
>>>>>> When I try to run the file with a space in the name in version
>>>>>> 3.5.0 of R, there is a fatal error saying there is no such file.
>>>>>>
>>>>>>
>>>>>> Kerry Jackson
>>>>>> Job title: Senior Account Manager, Ipsos Connect US RA Testing GMU
>>>>>> Phone: (203) 840-3443
>>>>>>
>>>>>>
>>>>>>        [[alternative HTML version deleted]]
>>>>>>
>>>>>> ______________________________________________
>>>>>> R-devel at r-project.org mailing list
>>>>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>
>> ______________________________________________
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel


From suharto_anggono at yahoo.com  Sun Apr 29 05:11:25 2018
From: suharto_anggono at yahoo.com (Suharto Anggono Suharto Anggono)
Date: Sun, 29 Apr 2018 03:11:25 +0000 (UTC)
Subject: [Rd] Result of 'seq' doesn't use compact internal representation
References: <1945318618.2079052.1524971485565.ref@mail.yahoo.com>
Message-ID: <1945318618.2079052.1524971485565@mail.yahoo.com>

> .Internal(inspect(1:10))
@300e4e8 13 INTSXP g0c0 [NAM(3)]  1 : 10 (compact)
> .Internal(inspect(seq(1,10)))
@3b6e1f8 13 INTSXP g0c4 [] (len=10, tl=0) 1,2,3,4,5,...
> system.time(1:1e7)
   user  system elapsed
      0       0       0
> system.time(seq(1,1e7))
   user  system elapsed
   0.05    0.00    0.04

It seems that result of function 'seq' doesn't use compact internal representation. However, looking at the code of function 'seq.default', seq(1,n) produces 1:n. What is going on?

> h <- seq.default
> environment(h) <- .GlobalEnv
> library(compiler)
> enableJIT(0)
[1] 3
> .Internal(inspect(h(1,10)))
@375ade8 13 INTSXP g0c0 [NAM(3)]  1 : 10 (compact)

A non-byte-compiled version of function 'seq.default' can produce object that uses compact internal representation.


> sessionInfo()
R version 3.5.0 (2018-04-23)
Platform: i386-w64-mingw32/i386 (32-bit)
Running under: Windows XP (build 2600) Service Pack 3

Matrix products: default

locale:
[1] LC_COLLATE=English_United States.1252
[2] LC_CTYPE=English_United States.1252
[3] LC_MONETARY=English_United States.1252
[4] LC_NUMERIC=C
[5] LC_TIME=English_United States.1252

attached base packages:
[1] compiler  stats     graphics  grDevices utils     datasets  methods
[8] base


From murdoch.duncan at gmail.com  Sun Apr 29 13:22:53 2018
From: murdoch.duncan at gmail.com (Duncan Murdoch)
Date: Sun, 29 Apr 2018 07:22:53 -0400
Subject: [Rd] 
 Result of 'seq' doesn't use compact internal representation
In-Reply-To: <1945318618.2079052.1524971485565@mail.yahoo.com>
References: <1945318618.2079052.1524971485565.ref@mail.yahoo.com>
 <1945318618.2079052.1524971485565@mail.yahoo.com>
Message-ID: <9aaa8065-8fc4-ad16-1c56-e673dfd7e1c5@gmail.com>

On 28/04/2018 11:11 PM, Suharto Anggono Suharto Anggono via R-devel wrote:
>> .Internal(inspect(1:10))
> @300e4e8 13 INTSXP g0c0 [NAM(3)]  1 : 10 (compact)
>> .Internal(inspect(seq(1,10)))
> @3b6e1f8 13 INTSXP g0c4 [] (len=10, tl=0) 1,2,3,4,5,...
>> system.time(1:1e7)
>     user  system elapsed
>        0       0       0
>> system.time(seq(1,1e7))
>     user  system elapsed
>     0.05    0.00    0.04
> 
> It seems that result of function 'seq' doesn't use compact internal representation. However, looking at the code of function 'seq.default', seq(1,n) produces 1:n. What is going on?

It looks like it is related to using compiled or interpreted code:

 > library(gtools)
 > seq2 <- unByteCode(seq.default)
 > .Internal(inspect(seq.default(1,10)))
@7fa53847dcd8 13 INTSXP g0c4 [] (len=10, tl=0) 1,2,3,4,5,...
 > .Internal(inspect(seq2(1,10)))
@7fa537fa0bf0 13 INTSXP g0c0 [NAM(3)]  1 : 10 (compact)

Duncan Murdoch

> 
>> h <- seq.default
>> environment(h) <- .GlobalEnv
>> library(compiler)
>> enableJIT(0)
> [1] 3
>> .Internal(inspect(h(1,10)))
> @375ade8 13 INTSXP g0c0 [NAM(3)]  1 : 10 (compact)
> 
> A non-byte-compiled version of function 'seq.default' can produce object that uses compact internal representation.
> 
> 
>> sessionInfo()
> R version 3.5.0 (2018-04-23)
> Platform: i386-w64-mingw32/i386 (32-bit)
> Running under: Windows XP (build 2600) Service Pack 3
> 
> Matrix products: default
> 
> locale:
> [1] LC_COLLATE=English_United States.1252
> [2] LC_CTYPE=English_United States.1252
> [3] LC_MONETARY=English_United States.1252
> [4] LC_NUMERIC=C
> [5] LC_TIME=English_United States.1252
> 
> attached base packages:
> [1] compiler  stats     graphics  grDevices utils     datasets  methods
> [8] base
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>


From luke-tierney at uiowa.edu  Sun Apr 29 14:46:40 2018
From: luke-tierney at uiowa.edu (Luke Tierney)
Date: Sun, 29 Apr 2018 07:46:40 -0500
Subject: [Rd] 
 Result of 'seq' doesn't use compact internal representation
In-Reply-To: <9aaa8065-8fc4-ad16-1c56-e673dfd7e1c5@gmail.com>
References: <1945318618.2079052.1524971485565.ref@mail.yahoo.com>
 <1945318618.2079052.1524971485565@mail.yahoo.com>
 <9aaa8065-8fc4-ad16-1c56-e673dfd7e1c5@gmail.com>
Message-ID: <74699be7-4877-a233-78eb-1c8f6d58b149@uiowa.edu>

Thanks -- I'll commit a fix after some testing.

Best,

luke

On 04/29/2018 06:22 AM, Duncan Murdoch wrote:
> On 28/04/2018 11:11 PM, Suharto Anggono Suharto Anggono via R-devel wrote:
>>> .Internal(inspect(1:10))
>> @300e4e8 13 INTSXP g0c0 [NAM(3)]? 1 : 10 (compact)
>>> .Internal(inspect(seq(1,10)))
>> @3b6e1f8 13 INTSXP g0c4 [] (len=10, tl=0) 1,2,3,4,5,...
>>> system.time(1:1e7)
>> ??? user? system elapsed
>> ?????? 0?????? 0?????? 0
>>> system.time(seq(1,1e7))
>> ??? user? system elapsed
>> ??? 0.05??? 0.00??? 0.04
>>
>> It seems that result of function 'seq' doesn't use compact internal 
>> representation. However, looking at the code of function 
>> 'seq.default', seq(1,n) produces 1:n. What is going on?
> 
> It looks like it is related to using compiled or interpreted code:
> 
>  > library(gtools)
>  > seq2 <- unByteCode(seq.default)
>  > .Internal(inspect(seq.default(1,10)))
> @7fa53847dcd8 13 INTSXP g0c4 [] (len=10, tl=0) 1,2,3,4,5,...
>  > .Internal(inspect(seq2(1,10)))
> @7fa537fa0bf0 13 INTSXP g0c0 [NAM(3)]? 1 : 10 (compact)
> 
> Duncan Murdoch
> 
>>
>>> h <- seq.default
>>> environment(h) <- .GlobalEnv
>>> library(compiler)
>>> enableJIT(0)
>> [1] 3
>>> .Internal(inspect(h(1,10)))
>> @375ade8 13 INTSXP g0c0 [NAM(3)]? 1 : 10 (compact)
>>
>> A non-byte-compiled version of function 'seq.default' can produce 
>> object that uses compact internal representation.
>>
>>
>>> sessionInfo()
>> R version 3.5.0 (2018-04-23)
>> Platform: i386-w64-mingw32/i386 (32-bit)
>> Running under: Windows XP (build 2600) Service Pack 3
>>
>> Matrix products: default
>>
>> locale:
>> [1] LC_COLLATE=English_United States.1252
>> [2] LC_CTYPE=English_United States.1252
>> [3] LC_MONETARY=English_United States.1252
>> [4] LC_NUMERIC=C
>> [5] LC_TIME=English_United States.1252
>>
>> attached base packages:
>> [1] compiler? stats???? graphics? grDevices utils???? datasets? methods
>> [8] base
>>
>> ______________________________________________
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel

-- 
Luke Tierney
Ralph E. Wareham Professor of Mathematical Sciences
University of Iowa                  Phone:             319-335-3386
Department of Statistics and        Fax:               319-335-3017
    Actuarial Science
241 Schaeffer Hall                  email:   luke-tierney at uiowa.edu
Iowa City, IA 52242                 WWW:  http://www.stat.uiowa.edu


From sgiannerini at gmail.com  Sun Apr 29 22:12:11 2018
From: sgiannerini at gmail.com (Simone Giannerini)
Date: Sun, 29 Apr 2018 20:12:11 +0000
Subject: [Rd] Bug in RScript.exe for 3.5.0
In-Reply-To: <CANcXGiwyKaBdNGC4_QY07AzOx+OG6PH76f3ns9ZO6EEeRvFRhQ@mail.gmail.com>
References: <DB6PR01MB3926EA58DA3B90E5AA27483FEB8F0@DB6PR01MB3926.eurprd01.prod.exchangelabs.com>
 <e63b9055-8912-6e84-b1e1-1d771312efb0@gmail.com>
 <e8ab6b9d-f24c-d36e-3ed0-1b2c136cacab@gmail.com>
 <DB6PR01MB39266295423C58A70BC9E6B1EB8E0@DB6PR01MB3926.eurprd01.prod.exchangelabs.com>
 <e294f061-0747-9dbb-e30d-076ce7de6360@gmail.com>
 <DB6PR01MB3926A7659FCFD41DE000B7AEEB8E0@DB6PR01MB3926.eurprd01.prod.exchangelabs.com>
 <7ea38abe-98b5-353b-3afc-9a379c3fa529@gmail.com>
 <DB6PR01MB3926AD0FAC8C59975E0778E2EB8D0@DB6PR01MB3926.eurprd01.prod.exchangelabs.com>
 <CALFMOMCkcGyiJeDDbTKT89CEs8xyqKc2KP0ob7ThhMCb8_5yYw@mail.gmail.com>
 <da9ad8bc-d1b8-e3cc-8bf4-667ffd833ab9@gmail.com>
 <CANcXGiwyKaBdNGC4_QY07AzOx+OG6PH76f3ns9ZO6EEeRvFRhQ@mail.gmail.com>
Message-ID: <CANcXGizL46u5zeFCqWTip14_2n5p3w6XwGNLphaR3bh8XYqm=A@mail.gmail.com>

> Dear Tomas,
>
> thank you for fixing the bug, I still do not find it mentioned in the
> changelog though (neither R-patched nor R-devel), also, see inline below
>
> On Sat, Apr 28, 2018 at 11:36 PM, Tomas Kalibera <tomas.kalibera at gmail.com
> > wrote:
>
>>
>> I don't have an opinion if this requires 3.5.1 to be released soon(er),
>> but I have ported to R-patched now. The bug existed in R-devel for a year
>> without being spotted, which is quite a long time - but it may be these
>> bugs are hard to find before release, because people testing and using an
>> unreleased version of R would not use space in file names. As apparently
>> users of released versions do, we should do better about testing, perhaps
>> test regularly with space in path names on a system that supports it. I
>> think normal regression tests should not depend on such support.
>>
>> In either case, I would recommend users to avoid space in file names to
>> be safe.
>
>
> note that sometimes users have little or no control over this. For
> instance, the bug broke the RManager interface between R, knitr and Winedt
> since Winedt installs itself and its data in directories with spaces in the
> filename/path and RManager calls are something of the kind
>
> Rscript.exe "%b\Exec\R\Knitr.R" filename.Rnw
>
> where %b is the local Winedt directory that by default has spaces in its
> path. Before you suggested the workaround I had to convert manually the
> paths to the dos 8.3 format in order to make it work again.
>
> Ciao,
>
> Simone
>
>
>> One known problem is that some packages will not build when RHOME has
>> space in its name (on Windows, this is not a problem on drives with short
>> file names supported, but that is not always the case) - CRAN is now
>> checking the most common source of this issue, but there may be more.
>>
>> Tomas
>>
>>
>>
>> On 04/28/2018 07:23 PM, Yihui Xie wrote:
>>
>>> It seems the fix has not been ported to the patched version of R on
>>> Windows yet. I just tested R version 3.5.0 Patched (2018-04-27
>>> r74667).
>>>
>>> IMHO this bug is so bad that it is worth a new release R 3.5.1 before
>>> it starts biting more users like this one
>>> https://stackoverflow.com/q/50077412/559676. BTW, although the bug has
>>> been fixed (https://github.com/wch/r-source/commit/c29f694), I think
>>> it will be even better if a corresponding test is added at the same
>>> time to prevent this from happening again in the future.
>>>
>>> Thanks!
>>>
>>> Yihui
>>>
>>> On Fri, Apr 27, 2018 at 7:03 AM, Kerry Jackson <Kerry.Jackson at ipsos.com>
>>> wrote:
>>>
>>>> Thanks Tomas,
>>>>
>>>> I confirm the R Under development (unstable) (2018-04-26 r74651)
>>>> version works for Rscript when the file name has a space, and no arguments
>>>> are specified.
>>>>
>>>> C:\>"C:\Program Files\R\R-devel\bin\x64\Rscript.exe" "C:\foo bar.R"
>>>> R Under development (unstable) (2018-04-26 r74651)
>>>> Platform: x86_64-w64-mingw32/x64 (64-bit)
>>>> Running under: Windows 7 x64 (build 7601) Service Pack 1
>>>>
>>>> Matrix products: default
>>>>
>>>> locale:
>>>> [1] LC_COLLATE=English_United States.1252
>>>> [2] LC_CTYPE=English_United States.1252
>>>> [3] LC_MONETARY=English_United States.1252
>>>> [4] LC_NUMERIC=C
>>>> [5] LC_TIME=English_United States.1252
>>>>
>>>> attached base packages:
>>>> [1] stats     graphics  grDevices utils     datasets  methods   base
>>>>
>>>> loaded via a namespace (and not attached):
>>>> [1] compiler_3.6.0
>>>>
>>>> C:\>
>>>>
>>>> -----Original Message-----
>>>> From: Tomas Kalibera [mailto:tomas.kalibera at gmail.com]
>>>> Sent: Thursday, April 26, 2018 10:22 AM
>>>> To: Kerry Jackson <Kerry.Jackson at Ipsos.com>
>>>> Cc: r-devel at r-project.org
>>>> Subject: Re: [Rd] Bug in RScript.exe for 3.5.0
>>>>
>>>> Thanks, actually this is because the snapshot build is still one
>>>> version behind (74642, the fix is in 74643). When I build my own installer
>>>> and install it seems to be working fine. Sorry for the confusion,
>>>>
>>>> Tomas
>>>>
>>>> On 04/26/2018 02:49 PM, Kerry Jackson wrote:
>>>>
>>>>> Hi Tomas,
>>>>>
>>>>> Thanks for the info about the binary builds; I did install it, however
>>>>> the bug still seems to be there in the current build.  The workaround you
>>>>> suggested does work:
>>>>>
>>>>> C:\>"C:\Program Files\R\R-devel\bin\x64\Rscript.exe" "C:\foo bar.R"
>>>>> Fatal error: cannot open file 'C:\foo': No such file or directory
>>>>>
>>>>>
>>>>> C:\>"C:\Program Files\R\R-devel\bin\x64\Rscript.exe" --vanilla "C:\foo
>>>>> bar.R"
>>>>> What do you get when you multiply 6 * 9?
>>>>> C:\>
>>>>>
>>>>> -----Original Message-----
>>>>> From: Tomas Kalibera [mailto:tomas.kalibera at gmail.com]
>>>>> Sent: Thursday, April 26, 2018 8:35 AM
>>>>> To: Kerry Jackson <Kerry.Jackson at Ipsos.com>; r-devel at r-project.org
>>>>> Subject: Re: [Rd] Bug in RScript.exe for 3.5.0
>>>>>
>>>>> On 04/26/2018 02:23 PM, Kerry Jackson wrote:
>>>>>
>>>>>> Thanks Tomas.
>>>>>>
>>>>>> I confirm the quick workaround works for me in the DOS prompt, and
>>>>>> when having a shortcut to RScript in SendTo, and when used in the Task
>>>>>> Scheduler.  I have not tested the R-devel version, due to my unfamiliarity
>>>>>> with installing from source code.
>>>>>>
>>>>> Thanks, Kerry.
>>>>>
>>>>> There are binary builds for daily snapshots of R-devel
>>>>> (development/unstable version of R) at
>>>>> https://cran.r-project.org/bin/windows/base/rdevel.html
>>>>>
>>>>> At this time the build should already have the fix.
>>>>>
>>>>> Best
>>>>> Tomas
>>>>>
>>>>> -----Original Message-----
>>>>>> From: Tomas Kalibera [mailto:tomas.kalibera at gmail.com]
>>>>>> Sent: Thursday, April 26, 2018 6:34 AM
>>>>>> To: Kerry Jackson <Kerry.Jackson at Ipsos.com>; r-devel at r-project.org
>>>>>> Subject: Re: [Rd] Bug in RScript.exe for 3.5.0
>>>>>>
>>>>>> Fixed in R-devel. I will port to R-patched after more testing.
>>>>>> Tomas
>>>>>>
>>>>>> On 04/26/2018 01:52 AM, Tomas Kalibera wrote:
>>>>>>
>>>>>>> Thanks for the report. A quick workaround before this gets fixed is
>>>>>>> to add an extra first argument that has no space in it, e.g.
>>>>>>>
>>>>>>> Rscript --vanilla "foo bar.R"
>>>>>>>
>>>>>>> The problem exists on all systems, not just Windows.
>>>>>>>
>>>>>>> Best
>>>>>>> Tomas
>>>>>>>
>>>>>>> On 04/25/2018 09:55 PM, Kerry Jackson wrote:
>>>>>>>
>>>>>>>> Hi R Developers,
>>>>>>>> I have found what I think is a bug in the RScript.exe in version
>>>>>>>> 3.5.0 of R for Windows.
>>>>>>>> When I call Rscript.exe for Version 3.5 of R, it is unable to open
>>>>>>>> the file if the file name or path has a space in it.
>>>>>>>> As an example of what happens, I saved 2 files with the code:
>>>>>>>> cat("What do you get when you multiply 6 * 9?") as C:\foo bar.R and
>>>>>>>> as C:\foo_bar.R When I in a DOS command window try to run these
>>>>>>>> using version 3.4.3 and 3.5:
>>>>>>>> C:\>"C:\Program Files\R\R-3.4.3\bin\x64\Rscript.exe" "C:\foo bar.R"
>>>>>>>> What do you get when you multiply 6 * 9?
>>>>>>>> C:\>"C:\Program Files\R\R-3.4.3\bin\x64\Rscript.exe" "C:\foo_bar.R"
>>>>>>>> What do you get when you multiply 6 * 9?
>>>>>>>> C:\>"C:\Program Files\R\R-3.5.0\bin\x64\Rscript.exe" "C:\foo bar.R"
>>>>>>>> Fatal error: cannot open file 'C:\foo': No such file or directory
>>>>>>>>
>>>>>>>>
>>>>>>>> C:\>"C:\Program Files\R\R-3.5.0\bin\x64\Rscript.exe" "C:\foo_bar.R"
>>>>>>>> What do you get when you multiply 6 * 9?
>>>>>>>> C:\>
>>>>>>>> When I try to run the file with a space in the name in version
>>>>>>>> 3.5.0 of R, there is a fatal error saying there is no such file.
>>>>>>>>
>>>>>>>>
>>>>>>>> Kerry Jackson
>>>>>>>> Job title: Senior Account Manager, Ipsos Connect US RA Testing GMU
>>>>>>>> Phone: (203) 840-3443
>>>>>>>>
>>>>>>>>
>>>>>>>>        [[alternative HTML version deleted]]
>>>>>>>>
>>>>>>>> ______________________________________________
>>>>>>>> R-devel at r-project.org mailing list
>>>>>>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>>>>>>>
>>>>>>>
>>>> ______________________________________________
>>>> R-devel at r-project.org mailing list
>>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>>>
>>>
>> ______________________________________________
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>
>
>
>
> --
> _________________________________________________________________
>
> PHILOSOPHICAL TRANSACTIONS OF THE ROYAL SOCIETY A
> Theme issue ?DNA as information
> <http://rsta.royalsocietypublishing.org/content/dna-information>?
> edited by Julyan H.E. Cartwright, Simone Giannerini and Diego L. Gonz?lez
> _________________________________________________________________
>
> Simone Giannerini
> Dipartimento di Scienze Statistiche "Paolo Fortunati"
> Universita' di Bologna
> Via delle belle arti 41 - 40126  Bologna,  ITALY
> Tel: +39 051 2098262  Fax: +39 051 232153
> http://www2.stat.unibo.it/giannerini/
> ______________________________________________________
>

	[[alternative HTML version deleted]]


From henrik.bengtsson at gmail.com  Sun Apr 29 22:17:12 2018
From: henrik.bengtsson at gmail.com (Henrik Bengtsson)
Date: Sun, 29 Apr 2018 13:17:12 -0700
Subject: [Rd] Bug in RScript.exe for 3.5.0
In-Reply-To: <CANcXGizL46u5zeFCqWTip14_2n5p3w6XwGNLphaR3bh8XYqm=A@mail.gmail.com>
References: <DB6PR01MB3926EA58DA3B90E5AA27483FEB8F0@DB6PR01MB3926.eurprd01.prod.exchangelabs.com>
 <e63b9055-8912-6e84-b1e1-1d771312efb0@gmail.com>
 <e8ab6b9d-f24c-d36e-3ed0-1b2c136cacab@gmail.com>
 <DB6PR01MB39266295423C58A70BC9E6B1EB8E0@DB6PR01MB3926.eurprd01.prod.exchangelabs.com>
 <e294f061-0747-9dbb-e30d-076ce7de6360@gmail.com>
 <DB6PR01MB3926A7659FCFD41DE000B7AEEB8E0@DB6PR01MB3926.eurprd01.prod.exchangelabs.com>
 <7ea38abe-98b5-353b-3afc-9a379c3fa529@gmail.com>
 <DB6PR01MB3926AD0FAC8C59975E0778E2EB8D0@DB6PR01MB3926.eurprd01.prod.exchangelabs.com>
 <CALFMOMCkcGyiJeDDbTKT89CEs8xyqKc2KP0ob7ThhMCb8_5yYw@mail.gmail.com>
 <da9ad8bc-d1b8-e3cc-8bf4-667ffd833ab9@gmail.com>
 <CANcXGiwyKaBdNGC4_QY07AzOx+OG6PH76f3ns9ZO6EEeRvFRhQ@mail.gmail.com>
 <CANcXGizL46u5zeFCqWTip14_2n5p3w6XwGNLphaR3bh8XYqm=A@mail.gmail.com>
Message-ID: <CAFDcVCTd+9KGH4KkM4AF0VGB4zWmxZFZzmYU-4-YEkeM3=kjtw@mail.gmail.com>

On Sun, Apr 29, 2018 at 1:12 PM, Simone Giannerini
<sgiannerini at gmail.com> wrote:
>> Dear Tomas,
>>
>> thank you for fixing the bug, I still do not find it mentioned in the
>> changelog though (neither R-patched nor R-devel),

https://cran.r-project.org/bin/windows/base/rpatched.html has a link
to https://cran.r-project.org/bin/windows/base/NEWS.R-3.5.0patched.html
that mentions it:

* Allow file argument of Rscript to include space even when it is
first on the command line.

/Henrik


>> also, see inline below
>>
>> On Sat, Apr 28, 2018 at 11:36 PM, Tomas Kalibera <tomas.kalibera at gmail.com
>> > wrote:
>>
>>>
>>> I don't have an opinion if this requires 3.5.1 to be released soon(er),
>>> but I have ported to R-patched now. The bug existed in R-devel for a year
>>> without being spotted, which is quite a long time - but it may be these
>>> bugs are hard to find before release, because people testing and using an
>>> unreleased version of R would not use space in file names. As apparently
>>> users of released versions do, we should do better about testing, perhaps
>>> test regularly with space in path names on a system that supports it. I
>>> think normal regression tests should not depend on such support.
>>>
>>> In either case, I would recommend users to avoid space in file names to
>>> be safe.
>>
>>
>> note that sometimes users have little or no control over this. For
>> instance, the bug broke the RManager interface between R, knitr and Winedt
>> since Winedt installs itself and its data in directories with spaces in the
>> filename/path and RManager calls are something of the kind
>>
>> Rscript.exe "%b\Exec\R\Knitr.R" filename.Rnw
>>
>> where %b is the local Winedt directory that by default has spaces in its
>> path. Before you suggested the workaround I had to convert manually the
>> paths to the dos 8.3 format in order to make it work again.
>>
>> Ciao,
>>
>> Simone
>>
>>
>>> One known problem is that some packages will not build when RHOME has
>>> space in its name (on Windows, this is not a problem on drives with short
>>> file names supported, but that is not always the case) - CRAN is now
>>> checking the most common source of this issue, but there may be more.
>>>
>>> Tomas
>>>
>>>
>>>
>>> On 04/28/2018 07:23 PM, Yihui Xie wrote:
>>>
>>>> It seems the fix has not been ported to the patched version of R on
>>>> Windows yet. I just tested R version 3.5.0 Patched (2018-04-27
>>>> r74667).
>>>>
>>>> IMHO this bug is so bad that it is worth a new release R 3.5.1 before
>>>> it starts biting more users like this one
>>>> https://stackoverflow.com/q/50077412/559676. BTW, although the bug has
>>>> been fixed (https://github.com/wch/r-source/commit/c29f694), I think
>>>> it will be even better if a corresponding test is added at the same
>>>> time to prevent this from happening again in the future.
>>>>
>>>> Thanks!
>>>>
>>>> Yihui
>>>>
>>>> On Fri, Apr 27, 2018 at 7:03 AM, Kerry Jackson <Kerry.Jackson at ipsos.com>
>>>> wrote:
>>>>
>>>>> Thanks Tomas,
>>>>>
>>>>> I confirm the R Under development (unstable) (2018-04-26 r74651)
>>>>> version works for Rscript when the file name has a space, and no arguments
>>>>> are specified.
>>>>>
>>>>> C:\>"C:\Program Files\R\R-devel\bin\x64\Rscript.exe" "C:\foo bar.R"
>>>>> R Under development (unstable) (2018-04-26 r74651)
>>>>> Platform: x86_64-w64-mingw32/x64 (64-bit)
>>>>> Running under: Windows 7 x64 (build 7601) Service Pack 1
>>>>>
>>>>> Matrix products: default
>>>>>
>>>>> locale:
>>>>> [1] LC_COLLATE=English_United States.1252
>>>>> [2] LC_CTYPE=English_United States.1252
>>>>> [3] LC_MONETARY=English_United States.1252
>>>>> [4] LC_NUMERIC=C
>>>>> [5] LC_TIME=English_United States.1252
>>>>>
>>>>> attached base packages:
>>>>> [1] stats     graphics  grDevices utils     datasets  methods   base
>>>>>
>>>>> loaded via a namespace (and not attached):
>>>>> [1] compiler_3.6.0
>>>>>
>>>>> C:\>
>>>>>
>>>>> -----Original Message-----
>>>>> From: Tomas Kalibera [mailto:tomas.kalibera at gmail.com]
>>>>> Sent: Thursday, April 26, 2018 10:22 AM
>>>>> To: Kerry Jackson <Kerry.Jackson at Ipsos.com>
>>>>> Cc: r-devel at r-project.org
>>>>> Subject: Re: [Rd] Bug in RScript.exe for 3.5.0
>>>>>
>>>>> Thanks, actually this is because the snapshot build is still one
>>>>> version behind (74642, the fix is in 74643). When I build my own installer
>>>>> and install it seems to be working fine. Sorry for the confusion,
>>>>>
>>>>> Tomas
>>>>>
>>>>> On 04/26/2018 02:49 PM, Kerry Jackson wrote:
>>>>>
>>>>>> Hi Tomas,
>>>>>>
>>>>>> Thanks for the info about the binary builds; I did install it, however
>>>>>> the bug still seems to be there in the current build.  The workaround you
>>>>>> suggested does work:
>>>>>>
>>>>>> C:\>"C:\Program Files\R\R-devel\bin\x64\Rscript.exe" "C:\foo bar.R"
>>>>>> Fatal error: cannot open file 'C:\foo': No such file or directory
>>>>>>
>>>>>>
>>>>>> C:\>"C:\Program Files\R\R-devel\bin\x64\Rscript.exe" --vanilla "C:\foo
>>>>>> bar.R"
>>>>>> What do you get when you multiply 6 * 9?
>>>>>> C:\>
>>>>>>
>>>>>> -----Original Message-----
>>>>>> From: Tomas Kalibera [mailto:tomas.kalibera at gmail.com]
>>>>>> Sent: Thursday, April 26, 2018 8:35 AM
>>>>>> To: Kerry Jackson <Kerry.Jackson at Ipsos.com>; r-devel at r-project.org
>>>>>> Subject: Re: [Rd] Bug in RScript.exe for 3.5.0
>>>>>>
>>>>>> On 04/26/2018 02:23 PM, Kerry Jackson wrote:
>>>>>>
>>>>>>> Thanks Tomas.
>>>>>>>
>>>>>>> I confirm the quick workaround works for me in the DOS prompt, and
>>>>>>> when having a shortcut to RScript in SendTo, and when used in the Task
>>>>>>> Scheduler.  I have not tested the R-devel version, due to my unfamiliarity
>>>>>>> with installing from source code.
>>>>>>>
>>>>>> Thanks, Kerry.
>>>>>>
>>>>>> There are binary builds for daily snapshots of R-devel
>>>>>> (development/unstable version of R) at
>>>>>> https://cran.r-project.org/bin/windows/base/rdevel.html
>>>>>>
>>>>>> At this time the build should already have the fix.
>>>>>>
>>>>>> Best
>>>>>> Tomas
>>>>>>
>>>>>> -----Original Message-----
>>>>>>> From: Tomas Kalibera [mailto:tomas.kalibera at gmail.com]
>>>>>>> Sent: Thursday, April 26, 2018 6:34 AM
>>>>>>> To: Kerry Jackson <Kerry.Jackson at Ipsos.com>; r-devel at r-project.org
>>>>>>> Subject: Re: [Rd] Bug in RScript.exe for 3.5.0
>>>>>>>
>>>>>>> Fixed in R-devel. I will port to R-patched after more testing.
>>>>>>> Tomas
>>>>>>>
>>>>>>> On 04/26/2018 01:52 AM, Tomas Kalibera wrote:
>>>>>>>
>>>>>>>> Thanks for the report. A quick workaround before this gets fixed is
>>>>>>>> to add an extra first argument that has no space in it, e.g.
>>>>>>>>
>>>>>>>> Rscript --vanilla "foo bar.R"
>>>>>>>>
>>>>>>>> The problem exists on all systems, not just Windows.
>>>>>>>>
>>>>>>>> Best
>>>>>>>> Tomas
>>>>>>>>
>>>>>>>> On 04/25/2018 09:55 PM, Kerry Jackson wrote:
>>>>>>>>
>>>>>>>>> Hi R Developers,
>>>>>>>>> I have found what I think is a bug in the RScript.exe in version
>>>>>>>>> 3.5.0 of R for Windows.
>>>>>>>>> When I call Rscript.exe for Version 3.5 of R, it is unable to open
>>>>>>>>> the file if the file name or path has a space in it.
>>>>>>>>> As an example of what happens, I saved 2 files with the code:
>>>>>>>>> cat("What do you get when you multiply 6 * 9?") as C:\foo bar.R and
>>>>>>>>> as C:\foo_bar.R When I in a DOS command window try to run these
>>>>>>>>> using version 3.4.3 and 3.5:
>>>>>>>>> C:\>"C:\Program Files\R\R-3.4.3\bin\x64\Rscript.exe" "C:\foo bar.R"
>>>>>>>>> What do you get when you multiply 6 * 9?
>>>>>>>>> C:\>"C:\Program Files\R\R-3.4.3\bin\x64\Rscript.exe" "C:\foo_bar.R"
>>>>>>>>> What do you get when you multiply 6 * 9?
>>>>>>>>> C:\>"C:\Program Files\R\R-3.5.0\bin\x64\Rscript.exe" "C:\foo bar.R"
>>>>>>>>> Fatal error: cannot open file 'C:\foo': No such file or directory
>>>>>>>>>
>>>>>>>>>
>>>>>>>>> C:\>"C:\Program Files\R\R-3.5.0\bin\x64\Rscript.exe" "C:\foo_bar.R"
>>>>>>>>> What do you get when you multiply 6 * 9?
>>>>>>>>> C:\>
>>>>>>>>> When I try to run the file with a space in the name in version
>>>>>>>>> 3.5.0 of R, there is a fatal error saying there is no such file.
>>>>>>>>>
>>>>>>>>>
>>>>>>>>> Kerry Jackson
>>>>>>>>> Job title: Senior Account Manager, Ipsos Connect US RA Testing GMU
>>>>>>>>> Phone: (203) 840-3443
>>>>>>>>>
>>>>>>>>>
>>>>>>>>>        [[alternative HTML version deleted]]
>>>>>>>>>
>>>>>>>>> ______________________________________________
>>>>>>>>> R-devel at r-project.org mailing list
>>>>>>>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>>>>>>>>
>>>>>>>>
>>>>> ______________________________________________
>>>>> R-devel at r-project.org mailing list
>>>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>>>>
>>>>
>>> ______________________________________________
>>> R-devel at r-project.org mailing list
>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>>
>>
>>
>>
>> --
>> _________________________________________________________________
>>
>> PHILOSOPHICAL TRANSACTIONS OF THE ROYAL SOCIETY A
>> Theme issue ?DNA as information
>> <http://rsta.royalsocietypublishing.org/content/dna-information>?
>> edited by Julyan H.E. Cartwright, Simone Giannerini and Diego L. Gonz?lez
>> _________________________________________________________________
>>
>> Simone Giannerini
>> Dipartimento di Scienze Statistiche "Paolo Fortunati"
>> Universita' di Bologna
>> Via delle belle arti 41 - 40126  Bologna,  ITALY
>> Tel: +39 051 2098262  Fax: +39 051 232153
>> http://www2.stat.unibo.it/giannerini/
>> ______________________________________________________
>>
>
>         [[alternative HTML version deleted]]
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From tomas.kalibera at gmail.com  Mon Apr 30 08:23:07 2018
From: tomas.kalibera at gmail.com (Tomas Kalibera)
Date: Mon, 30 Apr 2018 08:23:07 +0200
Subject: [Rd] Bug in RScript.exe for 3.5.0
In-Reply-To: <CANcXGizL46u5zeFCqWTip14_2n5p3w6XwGNLphaR3bh8XYqm=A@mail.gmail.com>
References: <DB6PR01MB3926EA58DA3B90E5AA27483FEB8F0@DB6PR01MB3926.eurprd01.prod.exchangelabs.com>
 <e63b9055-8912-6e84-b1e1-1d771312efb0@gmail.com>
 <e8ab6b9d-f24c-d36e-3ed0-1b2c136cacab@gmail.com>
 <DB6PR01MB39266295423C58A70BC9E6B1EB8E0@DB6PR01MB3926.eurprd01.prod.exchangelabs.com>
 <e294f061-0747-9dbb-e30d-076ce7de6360@gmail.com>
 <DB6PR01MB3926A7659FCFD41DE000B7AEEB8E0@DB6PR01MB3926.eurprd01.prod.exchangelabs.com>
 <7ea38abe-98b5-353b-3afc-9a379c3fa529@gmail.com>
 <DB6PR01MB3926AD0FAC8C59975E0778E2EB8D0@DB6PR01MB3926.eurprd01.prod.exchangelabs.com>
 <CALFMOMCkcGyiJeDDbTKT89CEs8xyqKc2KP0ob7ThhMCb8_5yYw@mail.gmail.com>
 <da9ad8bc-d1b8-e3cc-8bf4-667ffd833ab9@gmail.com>
 <CANcXGiwyKaBdNGC4_QY07AzOx+OG6PH76f3ns9ZO6EEeRvFRhQ@mail.gmail.com>
 <CANcXGizL46u5zeFCqWTip14_2n5p3w6XwGNLphaR3bh8XYqm=A@mail.gmail.com>
Message-ID: <d928b12e-fe7d-e5f4-3ba9-85fb65a9c837@gmail.com>

Hi Simone,

On 04/29/2018 10:12 PM, Simone Giannerini wrote:
>
>     Dear Tomas,
>
>     thank you for fixing the bug, I still do not find it mentioned in
>     the changelog though (neither R-patched nor R-devel), also, see
>     inline below
>
as Henrik pointed out, the fix is mentioned in the NEWS file (now both 
R-devel and R-patched). The usual procedure is fix in R-devel, give some 
time for further testing/review also by others (depends on the severity 
of the bug and the risk of introducing new bugs by the fix), then update 
NEWS in R-devel, then eventually port both the fix and the NEWS entry to 
R-patched.
>
>
>     On Sat, Apr 28, 2018 at 11:36 PM, Tomas Kalibera
>     <tomas.kalibera at gmail.com <mailto:tomas.kalibera at gmail.com>> wrote:
>
>
>         I don't have an opinion if this requires 3.5.1 to be released
>         soon(er), but I have ported to R-patched now. The bug existed
>         in R-devel for a year without being spotted, which is quite a
>         long time - but it may be these bugs are hard to find before
>         release, because people testing and using an unreleased
>         version of R would not use space in file names. As apparently
>         users of released versions do, we should do better about
>         testing, perhaps test regularly with space in path names on a
>         system that supports it. I think normal regression tests
>         should not depend on such support.
>
>         In either case, I would recommend users to avoid space in file
>         names to be safe. 
>
>
>     note that sometimes users have little or no control over this. For
>     instance, the bug broke the RManager interface between R, knitr
>     and Winedt since Winedt installs itself and its data in
>     directories with spaces in the filename/path and RManager calls
>     are something of the kind
>
>     Rscript.exe "%b\Exec\R\Knitr.R" filename.Rnw
>
>     where %b is the local Winedt directory that by default has spaces
>     in its path. Before you suggested the workaround I had to convert
>     manually the paths to the dos 8.3 format in order to make it work
>     again.
>
Indeed, the space could also originate from path name set up by the 
system administrator (such as first and last name of a user) or from a 
third party application. It may be also a third party application that 
is not robust against space in file name (e.g. Make, where it is by 
design and essentially cannot be fixed). I think ideally in we should in 
all roles (administrator, user, package developer, R internals 
developer) try to avoid space in file names, try to educate people to 
avoid space in file names, but also try to make systems work even with 
space in file name. When you find a bug in R itself that prevents 
something from working with space in filename, please file a bug report. 
Especially when a bug has been introduced between R versions, it is 
usually easy to fix it - of course there is no guarantee but you may 
easily be given a workaround within few hours. If you find such error in 
a package, please report to package author (and if repeatedly 
unresponsive, please report to repository maintainer - e.g. CRAN).

Best
Tomas


>
>     Ciao,
>
>     Simone
>
>         One known problem is that some packages will not build when
>         RHOME has space in its name (on Windows, this is not a problem
>         on drives with short file names supported, but that is not
>         always the case) - CRAN is now checking the most common source
>         of this issue, but there may be more.
>
>         Tomas
>
>
>
>         On 04/28/2018 07:23 PM, Yihui Xie wrote:
>
>             It seems the fix has not been ported to the patched
>             version of R on
>             Windows yet. I just tested R version 3.5.0 Patched (2018-04-27
>             r74667).
>
>             IMHO this bug is so bad that it is worth a new release R
>             3.5.1 before
>             it starts biting more users like this one
>             https://stackoverflow.com/q/50077412/559676. BTW, although
>             the bug has
>             been fixed
>             (https://github.com/wch/r-source/commit/c29f694), I think
>             it will be even better if a corresponding test is added at
>             the same
>             time to prevent this from happening again in the future.
>
>             Thanks!
>
>             Yihui
>
>             On Fri, Apr 27, 2018 at 7:03 AM, Kerry Jackson
>             <Kerry.Jackson at ipsos.com <mailto:Kerry.Jackson at ipsos.com>>
>             wrote:
>
>                 Thanks Tomas,
>
>                 I confirm the R Under development (unstable)
>                 (2018-04-26 r74651) version works for Rscript when the
>                 file name has a space, and no arguments are specified.
>
>                 C:\>"C:\Program Files\R\R-devel\bin\x64\Rscript.exe"
>                 "C:\foo bar.R"
>                 R Under development (unstable) (2018-04-26 r74651)
>                 Platform: x86_64-w64-mingw32/x64 (64-bit)
>                 Running under: Windows 7 x64 (build 7601) Service Pack 1
>
>                 Matrix products: default
>
>                 locale:
>                 [1] LC_COLLATE=English_United States.1252
>                 [2] LC_CTYPE=English_United States.1252
>                 [3] LC_MONETARY=English_United States.1252
>                 [4] LC_NUMERIC=C
>                 [5] LC_TIME=English_United States.1252
>
>                 attached base packages:
>                 [1] stats? ? ?graphics? grDevices utils ?datasets?
>                 methods? ?base
>
>                 loaded via a namespace (and not attached):
>                 [1] compiler_3.6.0
>
>                 C:\>
>
>                 -----Original Message-----
>                 From: Tomas Kalibera [mailto:tomas.kalibera at gmail.com
>                 <mailto:tomas.kalibera at gmail.com>]
>                 Sent: Thursday, April 26, 2018 10:22 AM
>                 To: Kerry Jackson <Kerry.Jackson at Ipsos.com>
>                 Cc: r-devel at r-project.org <mailto:r-devel at r-project.org>
>                 Subject: Re: [Rd] Bug in RScript.exe for 3.5.0
>
>                 Thanks, actually this is because the snapshot build is
>                 still one version behind (74642, the fix is in 74643).
>                 When I build my own installer and install it seems to
>                 be working fine. Sorry for the confusion,
>
>                 Tomas
>
>                 On 04/26/2018 02:49 PM, Kerry Jackson wrote:
>
>                     Hi Tomas,
>
>                     Thanks for the info about the binary builds; I did
>                     install it, however the bug still seems to be
>                     there in the current build.? The workaround you
>                     suggested does work:
>
>                     C:\>"C:\Program
>                     Files\R\R-devel\bin\x64\Rscript.exe" "C:\foo bar.R"
>                     Fatal error: cannot open file 'C:\foo': No such
>                     file or directory
>
>
>                     C:\>"C:\Program
>                     Files\R\R-devel\bin\x64\Rscript.exe" --vanilla
>                     "C:\foo bar.R"
>                     What do you get when you multiply 6 * 9?
>                     C:\>
>
>                     -----Original Message-----
>                     From: Tomas Kalibera
>                     [mailto:tomas.kalibera at gmail.com
>                     <mailto:tomas.kalibera at gmail.com>]
>                     Sent: Thursday, April 26, 2018 8:35 AM
>                     To: Kerry Jackson <Kerry.Jackson at Ipsos.com>;
>                     r-devel at r-project.org <mailto:r-devel at r-project.org>
>                     Subject: Re: [Rd] Bug in RScript.exe for 3.5.0
>
>                     On 04/26/2018 02:23 PM, Kerry Jackson wrote:
>
>                         Thanks Tomas.
>
>                         I confirm the quick workaround works for me in
>                         the DOS prompt, and when having a shortcut to
>                         RScript in SendTo, and when used in the Task
>                         Scheduler.? I have not tested the R-devel
>                         version, due to my unfamiliarity with
>                         installing from source code.
>
>                     Thanks, Kerry.
>
>                     There are binary builds for daily snapshots of R-devel
>                     (development/unstable version of R) at
>                     https://cran.r-project.org/bin/windows/base/rdevel.html
>
>                     At this time the build should already have the fix.
>
>                     Best
>                     Tomas
>
>                         -----Original Message-----
>                         From: Tomas Kalibera
>                         [mailto:tomas.kalibera at gmail.com
>                         <mailto:tomas.kalibera at gmail.com>]
>                         Sent: Thursday, April 26, 2018 6:34 AM
>                         To: Kerry Jackson <Kerry.Jackson at Ipsos.com>;
>                         r-devel at r-project.org
>                         <mailto:r-devel at r-project.org>
>                         Subject: Re: [Rd] Bug in RScript.exe for 3.5.0
>
>                         Fixed in R-devel. I will port to R-patched
>                         after more testing.
>                         Tomas
>
>                         On 04/26/2018 01:52 AM, Tomas Kalibera wrote:
>
>                             Thanks for the report. A quick workaround
>                             before this gets fixed is
>                             to add an extra first argument that has no
>                             space in it, e.g.
>
>                             Rscript --vanilla "foo bar.R"
>
>                             The problem exists on all systems, not
>                             just Windows.
>
>                             Best
>                             Tomas
>
>                             On 04/25/2018 09:55 PM, Kerry Jackson wrote:
>
>                                 Hi R Developers,
>                                 I have found what I think is a bug in
>                                 the RScript.exe in version
>                                 3.5.0 of R for Windows.
>                                 When I call Rscript.exe for Version
>                                 3.5 of R, it is unable to open
>                                 the file if the file name or path has
>                                 a space in it.
>                                 As an example of what happens, I saved
>                                 2 files with the code:
>                                 cat("What do you get when you multiply
>                                 6 * 9?") as C:\foo bar.R and
>                                 as C:\foo_bar.R When I in a DOS
>                                 command window try to run these
>                                 using version 3.4.3 and 3.5:
>                                 C:\>"C:\Program
>                                 Files\R\R-3.4.3\bin\x64\Rscript.exe"
>                                 "C:\foo bar.R"
>                                 What do you get when you multiply 6 * 9?
>                                 C:\>"C:\Program
>                                 Files\R\R-3.4.3\bin\x64\Rscript.exe"
>                                 "C:\foo_bar.R"
>                                 What do you get when you multiply 6 * 9?
>                                 C:\>"C:\Program
>                                 Files\R\R-3.5.0\bin\x64\Rscript.exe"
>                                 "C:\foo bar.R"
>                                 Fatal error: cannot open file
>                                 'C:\foo': No such file or directory
>
>
>                                 C:\>"C:\Program
>                                 Files\R\R-3.5.0\bin\x64\Rscript.exe"
>                                 "C:\foo_bar.R"
>                                 What do you get when you multiply 6 * 9?
>                                 C:\>
>                                 When I try to run the file with a
>                                 space in the name in version
>                                 3.5.0 of R, there is a fatal error
>                                 saying there is no such file.
>
>
>                                 Kerry Jackson
>                                 Job title: Senior Account Manager,
>                                 Ipsos Connect US RA Testing GMU
>                                 Phone: (203) 840-3443
>
>
>                                 ? ? ? ?[[alternative HTML version
>                                 deleted]]
>
>                                 ______________________________________________
>                                 R-devel at r-project.org
>                                 <mailto:R-devel at r-project.org> mailing
>                                 list
>                                 https://stat.ethz.ch/mailman/listinfo/r-devel
>
>
>                 ______________________________________________
>                 R-devel at r-project.org <mailto:R-devel at r-project.org>
>                 mailing list
>                 https://stat.ethz.ch/mailman/listinfo/r-devel
>
>
>         ______________________________________________
>         R-devel at r-project.org <mailto:R-devel at r-project.org> mailing list
>         https://stat.ethz.ch/mailman/listinfo/r-devel
>
>
>
>
>     -- 
>     _________________________________________________________________
>
>     PHILOSOPHICAL TRANSACTIONS OF THE ROYAL SOCIETY A
>     Theme issue ?DNA as information
>     <http://rsta.royalsocietypublishing.org/content/dna-information>?
>     edited by Julyan H.E. Cartwright, Simone Giannerini and Diego L.
>     Gonz?lez
>     _________________________________________________________________
>
>     Simone Giannerini
>     Dipartimento di Scienze Statistiche "Paolo Fortunati"
>     Universita' di Bologna
>     Via delle belle arti 41 - 40126 Bologna,? ITALY
>     Tel: +39 051 2098262? Fax: +39 051 232153
>     http://www2.stat.unibo.it/giannerini/
>     ______________________________________________________
>


	[[alternative HTML version deleted]]


From hongooi at microsoft.com  Mon Apr 30 11:35:33 2018
From: hongooi at microsoft.com (Hong Ooi)
Date: Mon, 30 Apr 2018 09:35:33 +0000
Subject: [Rd] system() and system2() do not use long filenames on Windows
Message-ID: <KL1P15301MB0086B1C2B181024D71D5D565A6820@KL1P15301MB0086.APCP153.PROD.OUTLOOK.COM>

Hi,

On Windows, it appears that system() and system2() both use the 8.3 filename to run the supplied command, even if the full name is used. Most of the time this doesn't matter, but for .NET programs, it stops the program from finding its app.config file (which has the same name as the app, with '.config' appended).

Here is a simple test program, compiled with: g++ -o longfilename.exe test.cpp


#include <iostream>

int main(int argc, char **argv)
{
    std::cout << argv[0] << '\n';
    return 0;
}


When I run this from a command prompt, it prints the full name:

C:\>\users\hongooi\longfilename.exe
\users\hongooi\longfilename.exe


But when I run it from R (3.4.3) via system() or system2(), it prints the 8.3 filename:

> system2("c:\\users\\hongooi\\longfilename.exe")
c:\users\hongooi\LONGFI~1.EXE


And here is a question on StackOverflow where this cropped up: https://stackoverflow.com/questions/50090450/config-file-is-ignored-when-net-executable-is-called-from-r

Would it be possible to modify system() and system2() to respect long filenames?


